{"edges": [["17", "19"], ["17", "499"], ["17", "500"], ["17", "501"], ["19", "20"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "41"], ["19", "61"], ["19", "62"], ["19", "69"], ["19", "70"], ["19", "75"], ["19", "76"], ["19", "80"], ["19", "81"], ["19", "85"], ["19", "156"], ["19", "157"], ["19", "163"], ["19", "241"], ["19", "242"], ["19", "246"], ["19", "292"], ["19", "293"], ["19", "299"], ["19", "357"], ["19", "358"], ["19", "364"], ["19", "389"], ["19", "392"], ["19", "393"], ["19", "396"], ["19", "474"], ["19", "475"], ["19", "494"], ["20", "21"], ["20", "22"], ["22", "23"], ["22", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "51"], ["41", "53"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "127"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "119"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "132"], ["127", "135"], ["127", "137"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["138", "139"], ["138", "148"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["148", "149"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "173"], ["163", "175"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["175", "176"], ["175", "177"], ["175", "184"], ["175", "185"], ["175", "192"], ["175", "222"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["203", "204"], ["203", "211"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["233", "238"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "244"], ["244", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["257", "258"], ["257", "259"], ["257", "262"], ["257", "265"], ["257", "267"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["265", "266"], ["267", "268"], ["268", "269"], ["268", "284"], ["269", "270"], ["269", "281"], ["270", "271"], ["270", "280"], ["271", "272"], ["271", "277"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "283"], ["284", "285"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["293", "294"], ["293", "295"], ["295", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["299", "304"], ["299", "309"], ["299", "311"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "308"], ["309", "310"], ["311", "312"], ["311", "313"], ["311", "320"], ["311", "345"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["320", "321"], ["320", "322"], ["320", "325"], ["320", "328"], ["320", "330"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["328", "329"], ["330", "331"], ["331", "332"], ["331", "339"], ["332", "333"], ["332", "338"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["339", "340"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "351"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["351", "352"], ["352", "353"], ["352", "356"], ["353", "354"], ["353", "355"], ["358", "359"], ["358", "360"], ["360", "361"], ["361", "362"], ["361", "363"], ["364", "365"], ["364", "366"], ["364", "369"], ["364", "374"], ["364", "376"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "371"], ["371", "372"], ["371", "373"], ["374", "375"], ["376", "377"], ["377", "378"], ["377", "381"], ["378", "379"], ["378", "380"], ["381", "382"], ["381", "385"], ["381", "388"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "387"], ["389", "390"], ["389", "391"], ["393", "394"], ["393", "395"], ["396", "397"], ["396", "398"], ["396", "401"], ["396", "406"], ["396", "408"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["403", "404"], ["403", "405"], ["406", "407"], ["408", "409"], ["408", "410"], ["408", "417"], ["408", "434"], ["410", "411"], ["410", "412"], ["412", "413"], ["412", "416"], ["413", "414"], ["413", "415"], ["417", "418"], ["417", "421"], ["418", "419"], ["418", "420"], ["421", "422"], ["422", "423"], ["422", "424"], ["424", "425"], ["424", "426"], ["424", "427"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["431", "432"], ["431", "433"], ["434", "435"], ["434", "436"], ["434", "439"], ["434", "442"], ["434", "444"], ["436", "437"], ["436", "438"], ["439", "440"], ["439", "441"], ["442", "443"], ["444", "445"], ["445", "446"], ["445", "453"], ["446", "447"], ["446", "452"], ["447", "448"], ["447", "451"], ["448", "449"], ["448", "450"], ["453", "454"], ["453", "455"], ["453", "462"], ["455", "456"], ["455", "457"], ["457", "458"], ["457", "459"], ["459", "460"], ["459", "461"], ["462", "463"], ["462", "466"], ["463", "464"], ["463", "465"], ["466", "467"], ["466", "468"], ["466", "471"], ["468", "469"], ["468", "470"], ["471", "472"], ["471", "473"], ["475", "476"], ["475", "477"], ["477", "478"], ["477", "485"], ["478", "479"], ["478", "484"], ["479", "480"], ["479", "481"], ["481", "482"], ["481", "483"], ["485", "486"], ["485", "489"], ["486", "487"], ["486", "488"], ["489", "490"], ["489", "491"], ["491", "492"], ["491", "493"], ["494", "495"], ["494", "498"], ["495", "496"], ["495", "497"], ["20", "28"], ["26", "33"], ["31", "38"], ["36", "43"], ["62", "72"], ["70", "78"], ["76", "83"], ["81", "87"], ["157", "165"], ["242", "248"], ["293", "301"], ["358", "366"], ["389", "393"], ["393", "398"], ["475", "497"], ["494", "501"], ["22", "20"], ["28", "26"], ["33", "31"], ["38", "36"], ["43", "50"], ["46", "55"], ["46", "65"], ["51", "50"], ["64", "62"], ["72", "70"], ["78", "76"], ["83", "81"], ["87", "90"], ["90", "98"], ["90", "160"], ["93", "90"], ["159", "157"], ["165", "170"], ["168", "180"], ["168", "244"], ["173", "170"], ["244", "242"], ["248", "251"], ["251", "259"], ["251", "296"], ["254", "251"], ["295", "293"], ["301", "306"], ["304", "316"], ["304", "361"], ["309", "306"], ["360", "358"], ["366", "373"], ["369", "378"], ["369", "389"], ["374", "373"], ["398", "405"], ["401", "413"], ["401", "481"], ["406", "405"], ["477", "475"], ["495", "494"], ["24", "22"], ["48", "46"], ["54", "51"], ["65", "64"], ["160", "159"], ["170", "168"], ["177", "188"], ["185", "194"], ["296", "295"], ["306", "304"], ["313", "322"], ["361", "360"], ["371", "369"], ["377", "374"], ["403", "401"], ["410", "418"], ["478", "486"], ["485", "477"], ["497", "495"], ["50", "48"], ["55", "58"], ["58", "54"], ["98", "101"], ["101", "109"], ["101", "129"], ["104", "101"], ["129", "132"], ["132", "141"], ["132", "93"], ["135", "132"], ["179", "177"], ["187", "185"], ["194", "197"], ["197", "206"], ["197", "224"], ["200", "197"], ["223", "230"], ["223", "173"], ["259", "262"], ["262", "274"], ["262", "254"], ["265", "262"], ["315", "313"], ["322", "325"], ["325", "334"], ["325", "347"], ["328", "325"], ["346", "353"], ["346", "309"], ["373", "371"], ["378", "384"], ["405", "403"], ["412", "410"], ["418", "428"], ["418", "436"], ["436", "439"], ["439", "448"], ["439", "406"], ["442", "439"], ["479", "478"], ["486", "490"], ["489", "485"], ["180", "179"], ["188", "187"], ["224", "223"], ["229", "173"], ["316", "315"], ["347", "346"], ["352", "309"], ["382", "385"], ["385", "377"], ["413", "416"], ["416", "412"], ["422", "436"], ["481", "479"], ["490", "491"], ["491", "489"], ["108", "121"], ["108", "104"], ["139", "150"], ["139", "135"], ["204", "214"], ["204", "200"], ["230", "235"], ["233", "229"], ["269", "286"], ["269", "265"], ["332", "342"], ["332", "328"], ["353", "352"], ["384", "382"], ["424", "422"], ["446", "459"], ["446", "442"], ["109", "108"], ["109", "114"], ["112", "108"], ["120", "104"], ["140", "139"], ["149", "135"], ["205", "204"], ["212", "219"], ["217", "200"], ["235", "238"], ["238", "233"], ["270", "269"], ["270", "281"], ["281", "269"], ["285", "265"], ["333", "332"], ["340", "328"], ["427", "424"], ["447", "446"], ["455", "463"], ["462", "442"], ["113", "112"], ["121", "124"], ["124", "120"], ["141", "144"], ["144", "140"], ["150", "153"], ["153", "149"], ["206", "205"], ["214", "212"], ["219", "217"], ["271", "270"], ["286", "289"], ["289", "285"], ["334", "333"], ["342", "340"], ["428", "431"], ["431", "427"], ["448", "447"], ["457", "455"], ["463", "468"], ["466", "462"], ["114", "113"], ["272", "277"], ["277", "271"], ["459", "457"], ["468", "471"], ["471", "466"], ["274", "272"], ["17", "24"], ["18", "501"], ["20", "501"], ["20", "501"], ["26", "501"], ["33", "501"], ["31", "501"], ["31", "501"], ["36", "501"], ["36", "501"], ["36", "501"], ["46", "501"], ["46", "501"], ["64", "501"], ["62", "501"], ["62", "501"], ["72", "501"], ["70", "501"], ["70", "501"], ["76", "501"], ["76", "501"], ["81", "501"], ["81", "501"], ["81", "501"], ["90", "501"], ["157", "501"], ["157", "501"], ["157", "501"], ["170", "501"], ["168", "501"], ["168", "501"], ["242", "501"], ["242", "501"], ["242", "501"], ["251", "501"], ["293", "501"], ["293", "501"], ["293", "501"], ["301", "501"], ["304", "501"], ["304", "501"], ["361", "501"], ["360", "501"], ["358", "501"], ["358", "501"], ["389", "501"], ["389", "501"], ["393", "501"], ["398", "501"], ["401", "501"], ["401", "501"], ["401", "501"], ["479", "501"], ["478", "501"], ["477", "501"], ["486", "501"], ["485", "501"], ["491", "501"], ["489", "501"], ["485", "501"], ["477", "501"], ["475", "501"], ["475", "501"], ["494", "501"], ["494", "501"], ["494", "501"], ["410", "501"], ["410", "501"], ["424", "501"], ["427", "501"], ["431", "501"], ["431", "501"], ["427", "501"], ["424", "501"], ["422", "501"], ["422", "501"], ["436", "501"], ["439", "501"], ["439", "501"], ["439", "501"], ["406", "501"], ["447", "501"], ["447", "501"], ["446", "501"], ["446", "501"], ["455", "501"], ["457", "501"], ["457", "501"], ["455", "501"], ["455", "501"], ["462", "501"], ["466", "501"], ["466", "501"], ["462", "501"], ["462", "501"], ["442", "501"], ["377", "501"], ["382", "501"], ["385", "501"], ["385", "501"], ["377", "501"], ["374", "501"], ["313", "501"], ["313", "501"], ["325", "501"], ["347", "501"], ["346", "501"], ["346", "501"], ["352", "501"], ["352", "501"], ["309", "501"], ["333", "501"], ["332", "501"], ["332", "501"], ["340", "501"], ["328", "501"], ["259", "501"], ["262", "501"], ["262", "501"], ["254", "501"], ["277", "501"], ["270", "501"], ["269", "501"], ["269", "501"], ["269", "501"], ["285", "501"], ["285", "501"], ["265", "501"], ["177", "501"], ["177", "501"], ["185", "501"], ["185", "501"], ["185", "501"], ["197", "501"], ["224", "501"], ["223", "501"], ["223", "501"], ["229", "501"], ["233", "501"], ["238", "501"], ["233", "501"], ["229", "501"], ["229", "501"], ["173", "501"], ["205", "501"], ["204", "501"], ["204", "501"], ["212", "501"], ["217", "501"], ["217", "501"], ["200", "501"], ["101", "501"], ["129", "501"], ["132", "501"], ["132", "501"], ["93", "501"], ["139", "501"], ["139", "501"], ["149", "501"], ["149", "501"], ["135", "501"], ["108", "501"], ["112", "501"], ["108", "501"], ["108", "501"], ["120", "501"], ["120", "501"], ["104", "501"], ["54", "501"], ["58", "501"], ["54", "501"], ["54", "501"], ["51", "501"], ["20", "501"], ["389", "501"], ["17", "18"], ["28", "26"], ["33", "31"], ["38", "36"], ["64", "62"], ["64", "62"], ["72", "70"], ["72", "70"], ["78", "76"], ["83", "81"], ["159", "157"], ["244", "242"], ["295", "293"], ["360", "358"], ["17", "393"], ["477", "475"], ["477", "475"], ["17", "43"], ["17", "87"], ["17", "165"], ["17", "248"], ["17", "301"], ["17", "366"], ["17", "389"], ["358", "389"], ["369", "389"], ["377", "389"], ["17", "398"], ["475", "494"], ["17", "494"], ["17", "28"], ["28", "33"], ["17", "33"], ["26", "38"], ["17", "38"], ["43", "46"], ["51", "46"], ["17", "46"], ["36", "46"], ["46", "51"], ["17", "51"], ["58", "54"], ["58", "54"], ["38", "64"], ["58", "64"], ["17", "64"], ["17", "72"], ["38", "72"], ["58", "72"], ["62", "72"], ["72", "78"], ["17", "78"], ["78", "83"], ["17", "83"], ["87", "90"], ["93", "90"], ["17", "90"], ["83", "90"], ["101", "90"], ["90", "93"], ["109", "93"], ["17", "93"], ["160", "159"], ["160", "159"], ["165", "168"], ["173", "168"], ["17", "168"], ["170", "168"], ["170", "168"], ["223", "173"], ["238", "173"], ["17", "173"], ["179", "177"], ["179", "177"], ["187", "185"], ["187", "185"], ["160", "244"], ["188", "244"], ["17", "244"], ["248", "251"], ["254", "251"], ["17", "251"], ["244", "251"], ["262", "251"], ["251", "254"], ["281", "254"], ["17", "254"], ["296", "295"], ["296", "295"], ["301", "304"], ["309", "304"], ["17", "304"], ["306", "304"], ["306", "304"], ["346", "309"], ["17", "309"], ["315", "313"], ["315", "313"], ["361", "360"], ["361", "360"], ["366", "369"], ["374", "369"], ["17", "369"], ["358", "369"], ["385", "374"], ["17", "374"], ["382", "377"], ["385", "377"], ["17", "377"], ["398", "401"], ["406", "401"], ["17", "401"], ["389", "401"], ["401", "406"], ["17", "406"], ["478", "477"], ["478", "477"], ["485", "477"], ["485", "477"], ["38", "65"], ["58", "65"], ["17", "65"], ["17", "98"], ["17", "129"], ["17", "160"], ["70", "160"], ["132", "160"], ["17", "170"], ["90", "170"], ["197", "170"], ["17", "194"], ["17", "259"], ["17", "296"], ["251", "296"], ["17", "306"], ["296", "306"], ["325", "306"], ["17", "322"], ["17", "361"], ["306", "361"], ["17", "436"], ["479", "478"], ["479", "478"], ["17", "478"], ["486", "485"], ["17", "485"], ["491", "485"], ["33", "58"], ["17", "58"], ["38", "58"], ["98", "101"], ["104", "101"], ["17", "101"], ["90", "101"], ["109", "104"], ["124", "104"], ["17", "104"], ["129", "132"], ["135", "132"], ["17", "132"], ["70", "132"], ["153", "135"], ["17", "135"], ["132", "135"], ["180", "179"], ["180", "179"], ["17", "179"], ["188", "187"], ["188", "187"], ["17", "187"], ["194", "197"], ["200", "197"], ["17", "197"], ["180", "197"], ["206", "200"], ["17", "200"], ["224", "223"], ["224", "223"], ["17", "223"], ["233", "229"], ["233", "229"], ["233", "229"], ["259", "262"], ["265", "262"], ["17", "262"], ["251", "262"], ["281", "265"], ["289", "265"], ["17", "265"], ["262", "265"], ["316", "315"], ["316", "315"], ["17", "315"], ["322", "325"], ["328", "325"], ["17", "325"], ["316", "325"], ["334", "328"], ["17", "328"], ["347", "346"], ["347", "346"], ["17", "346"], ["17", "352"], ["17", "382"], ["17", "388"], ["424", "422"], ["424", "422"], ["424", "422"], ["436", "439"], ["442", "439"], ["17", "439"], ["361", "439"], ["448", "442"], ["459", "442"], ["17", "442"], ["481", "479"], ["17", "479"], ["481", "479"], ["31", "486"], ["17", "486"], ["17", "489"], ["491", "489"], ["17", "180"], ["170", "180"], ["17", "188"], ["160", "188"], ["177", "224"], ["212", "224"], ["17", "224"], ["168", "224"], ["205", "224"], ["17", "316"], ["306", "316"], ["313", "347"], ["340", "347"], ["17", "347"], ["304", "347"], ["333", "347"], ["382", "385"], ["17", "385"], ["369", "385"], ["393", "481"], ["422", "481"], ["17", "481"], ["479", "491"], ["17", "491"], ["109", "108"], ["109", "108"], ["112", "108"], ["112", "108"], ["124", "120"], ["124", "120"], ["17", "139"], ["153", "149"], ["153", "149"], ["205", "204"], ["205", "204"], ["17", "204"], ["76", "212"], ["120", "212"], ["81", "217"], ["149", "217"], ["17", "233"], ["157", "233"], ["229", "233"], ["238", "233"], ["238", "233"], ["270", "269"], ["270", "269"], ["281", "269"], ["281", "269"], ["108", "269"], ["289", "285"], ["289", "285"], ["333", "332"], ["333", "332"], ["17", "332"], ["242", "340"], ["285", "340"], ["466", "424"], ["233", "424"], ["17", "424"], ["393", "424"], ["422", "424"], ["157", "424"], ["466", "424"], ["431", "424"], ["431", "424"], ["447", "446"], ["447", "446"], ["17", "446"], ["457", "455"], ["457", "455"], ["466", "462"], ["466", "462"], ["466", "462"], ["90", "109"], ["17", "109"], ["101", "109"], ["17", "112"], ["76", "120"], ["81", "149"], ["206", "205"], ["206", "205"], ["168", "205"], ["17", "205"], ["177", "212"], ["17", "212"], ["185", "217"], ["17", "217"], ["17", "238"], ["223", "238"], ["17", "270"], ["17", "281"], ["251", "281"], ["262", "281"], ["242", "285"], ["334", "333"], ["334", "333"], ["304", "333"], ["17", "333"], ["313", "340"], ["17", "340"], ["157", "427"], ["466", "427"], ["431", "427"], ["431", "427"], ["448", "447"], ["448", "447"], ["410", "447"], ["431", "447"], ["457", "447"], ["17", "447"], ["17", "124"], ["109", "124"], ["101", "144"], ["17", "144"], ["132", "144"], ["17", "153"], ["132", "153"], ["17", "206"], ["197", "206"], ["17", "289"], ["281", "289"], ["262", "289"], ["17", "334"], ["325", "334"], ["238", "431"], ["17", "431"], ["410", "431"], ["17", "448"], ["439", "448"], ["447", "457"], ["17", "457"], ["459", "457"], ["459", "457"], ["424", "466"], ["233", "466"], ["17", "466"], ["157", "466"], ["462", "466"], ["17", "277"], ["170", "277"], ["262", "277"], ["17", "459"], ["448", "459"], ["170", "274"], ["17", "274"], ["251", "274"], ["281", "274"], ["46", "50"], ["46", "54"], ["46", "48"], ["46", "55"], ["46", "51"], ["46", "58"], ["46", "46"], ["90", "129"], ["90", "93"], ["90", "98"], ["90", "132"], ["90", "101"], ["90", "90"], ["168", "188"], ["168", "168"], ["168", "170"], ["168", "194"], ["168", "224"], ["168", "180"], ["168", "177"], ["168", "179"], ["168", "185"], ["168", "197"], ["168", "223"], ["168", "187"], ["168", "173"], ["251", "262"], ["251", "254"], ["251", "259"], ["251", "251"], ["304", "322"], ["304", "306"], ["304", "315"], ["304", "346"], ["304", "304"], ["304", "347"], ["304", "316"], ["304", "309"], ["304", "325"], ["304", "313"], ["369", "384"], ["369", "378"], ["369", "382"], ["369", "374"], ["369", "385"], ["369", "377"], ["369", "373"], ["369", "371"], ["369", "369"], ["401", "401"], ["401", "403"], ["401", "418"], ["401", "412"], ["401", "416"], ["401", "405"], ["401", "410"], ["401", "413"], ["401", "439"], ["401", "406"], ["401", "436"], ["101", "104"], ["101", "108"], ["101", "109"], ["101", "101"], ["132", "141"], ["132", "140"], ["132", "135"], ["132", "132"], ["132", "144"], ["132", "139"], ["197", "204"], ["197", "206"], ["197", "200"], ["197", "197"], ["197", "205"], ["223", "230"], ["223", "238"], ["223", "229"], ["223", "233"], ["223", "235"], ["262", "272"], ["262", "262"], ["262", "274"], ["262", "269"], ["262", "265"], ["262", "277"], ["262", "270"], ["262", "271"], ["325", "334"], ["325", "328"], ["325", "332"], ["325", "325"], ["325", "333"], ["346", "353"], ["346", "352"], ["418", "428"], ["418", "424"], ["418", "427"], ["418", "422"], ["418", "431"], ["439", "446"], ["439", "442"], ["439", "448"], ["439", "447"], ["439", "439"], ["108", "120"], ["108", "121"], ["108", "124"], ["139", "150"], ["139", "149"], ["139", "153"], ["204", "214"], ["204", "217"], ["204", "212"], ["204", "219"], ["269", "285"], ["269", "289"], ["269", "286"], ["332", "340"], ["332", "342"], ["446", "462"], ["446", "471"], ["446", "466"], ["446", "457"], ["446", "455"], ["446", "468"], ["446", "459"], ["446", "463"], ["109", "114"], ["109", "112"], ["109", "113"], ["270", "281"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,is,is = System.in)<SUB>2</SUB>>", "23": "<(IDENTIFIER,System,is = System.in)<SUB>2</SUB>>", "25": "<(LOCAL,int n: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,n,int n = ni())<SUB>3</SUB>>", "29": "<(IDENTIFIER,this,ni())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int k = ni())<SUB>4</SUB>>", "33": "<(ni,ni())<SUB>4</SUB>>", "35": "<(LOCAL,int[][] aj: int[][])<SUB>6</SUB>>", "37": "<(IDENTIFIER,aj,int[][] aj = new int[n][n])<SUB>6</SUB>>", "39": "<(IDENTIFIER,n,new int[n][n])<SUB>6</SUB>>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; aj.length); i++),for (int i = 0; Some(i &lt; aj.length); i++))<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,i &lt; aj.length)<SUB>8</SUB>>", "49": "<(IDENTIFIER,aj,i &lt; aj.length)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,aj[i])<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,aj[i] = na(n))<SUB>9</SUB>>", "59": "<(IDENTIFIER,this,na(n))<SUB>9</SUB>>", "61": "<(LOCAL,int F: int)<SUB>12</SUB>>", "63": "<(IDENTIFIER,F,int F = (n + 1) / 2)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.addition,n + 1)<SUB>12</SUB>>", "67": "<(LITERAL,1,n + 1)<SUB>12</SUB>>", "69": "<(LOCAL,int B: int)<SUB>13</SUB>>", "71": "<(IDENTIFIER,B,int B = n - F)<SUB>13</SUB>>", "73": "<(IDENTIFIER,n,n - F)<SUB>13</SUB>>", "75": "<(LOCAL,int[] spanftf: int[])<SUB>15</SUB>>", "77": "<(IDENTIFIER,spanftf,int[] spanftf = new int[F])<SUB>15</SUB>>", "79": "<(IDENTIFIER,F,new int[F])<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.assignment,int[] spanftb = new int[F])<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.alloc,new int[F])>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; F); i++),for (int i = 0; Some(i &lt; F); i++))<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "91": "<(IDENTIFIER,i,i &lt; F)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "97": "<(LOCAL,int j: int)<SUB>18</SUB>>", "99": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.lessThan,j &lt; F)<SUB>18</SUB>>", "103": "<(IDENTIFIER,F,j &lt; F)<SUB>18</SUB>>", "105": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "107": "<(CONTROL_STRUCTURE,if (i == j || aj[i][j] == 1),if (i == j || aj[i][j] == 1))<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.equals,i == j)<SUB>19</SUB>>", "111": "<(IDENTIFIER,j,i == j)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,aj[i][j])<SUB>19</SUB>>", "115": "<(IDENTIFIER,aj,aj[i][j] == 1)<SUB>19</SUB>>", "117": "<(IDENTIFIER,j,aj[i][j] == 1)<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,spanftf[i])<SUB>20</SUB>>", "123": "<(IDENTIFIER,i,spanftf[i] |= 1 &lt;&lt; j)<SUB>20</SUB>>", "125": "<(LITERAL,1,1 &lt;&lt; j)<SUB>20</SUB>>", "127": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; B); j++),for (int j = 0; Some(j &lt; B); j++))<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "131": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "133": "<(IDENTIFIER,j,j &lt; B)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.equals,aj[i][F + j] == 1)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,aj[i])<SUB>24</SUB>>", "143": "<(IDENTIFIER,i,aj[i][F + j] == 1)<SUB>24</SUB>>", "145": "<(IDENTIFIER,F,F + j)<SUB>24</SUB>>", "147": "<(LITERAL,1,aj[i][F + j] == 1)<SUB>24</SUB>>", "149": "<(&lt;operators&gt;.assignmentOr,spanftb[i] |= 1 &lt;&lt; j)<SUB>25</SUB>>", "151": "<(IDENTIFIER,spanftb,spanftb[i] |= 1 &lt;&lt; j)<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>25</SUB>>", "155": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.assignment,int[] maxes = new int[1 &lt;&lt; B])<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; B])>", "161": "<(LITERAL,1,1 &lt;&lt; B)<SUB>29</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int bm = 0; Some(bm &lt; (1 &lt;&lt; F)); bm++),for (int bm = 0; Some(bm &lt; (1 &lt;&lt; F)); bm++))<SUB>30</SUB>>", "165": "<(&lt;operator&gt;.assignment,int bm = 0)<SUB>30</SUB>>", "167": "<(LITERAL,0,int bm = 0)<SUB>30</SUB>>", "169": "<(IDENTIFIER,bm,bm &lt; (1 &lt;&lt; F))<SUB>30</SUB>>", "171": "<(LITERAL,1,1 &lt;&lt; F)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,bm++)<SUB>30</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.assignment,int anded = (1 &lt;&lt; F) - 1)<SUB>31</SUB>>", "179": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; F) - 1)<SUB>31</SUB>>", "181": "<(LITERAL,1,1 &lt;&lt; F)<SUB>31</SUB>>", "183": "<(LITERAL,1,(1 &lt;&lt; F) - 1)<SUB>31</SUB>>", "185": "<(&lt;operator&gt;.assignment,int spanToBack = (1 &lt;&lt; B) - 1)<SUB>32</SUB>>", "187": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; B) - 1)<SUB>32</SUB>>", "189": "<(LITERAL,1,1 &lt;&lt; B)<SUB>32</SUB>>", "191": "<(LITERAL,1,(1 &lt;&lt; B) - 1)<SUB>32</SUB>>", "193": "<(LOCAL,int i: int)<SUB>34</SUB>>", "195": "<(IDENTIFIER,i,int i = 0)<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; F)<SUB>34</SUB>>", "199": "<(IDENTIFIER,F,i &lt; F)<SUB>34</SUB>>", "201": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "203": "<(CONTROL_STRUCTURE,if ((1 &lt;&lt; i &amp; bm) != 0),if ((1 &lt;&lt; i &amp; bm) != 0))<SUB>35</SUB>>", "205": "<(&lt;operator&gt;.and,1 &lt;&lt; i &amp; bm)<SUB>35</SUB>>", "207": "<(LITERAL,1,1 &lt;&lt; i)<SUB>35</SUB>>", "209": "<(IDENTIFIER,bm,1 &lt;&lt; i &amp; bm)<SUB>35</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "213": "<(IDENTIFIER,anded,anded &amp;= spanftf[i])<SUB>36</SUB>>", "215": "<(IDENTIFIER,spanftf,anded &amp;= spanftf[i])<SUB>36</SUB>>", "217": "<(&lt;operators&gt;.assignmentAnd,spanToBack &amp;= spanftb[i])<SUB>37</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,spanftb[i])<SUB>37</SUB>>", "221": "<(IDENTIFIER,i,spanToBack &amp;= spanftb[i])<SUB>37</SUB>>", "223": "<(&lt;operator&gt;.equals,(anded &amp; bm) == bm)<SUB>41</SUB>>", "225": "<(IDENTIFIER,anded,anded &amp; bm)<SUB>41</SUB>>", "227": "<(IDENTIFIER,bm,(anded &amp; bm) == bm)<SUB>41</SUB>>", "229": "<(&lt;operator&gt;.assignment,maxes[spanToBack] = Math.max(maxes[spanToBack], Integer.bitCount(bm)))<SUB>42</SUB>>", "231": "<(IDENTIFIER,maxes,maxes[spanToBack] = Math.max(maxes[spanToBack], Integer.bitCount(bm)))<SUB>42</SUB>>", "233": "<(max,Math.max(maxes[spanToBack], Integer.bitCount(bm)))<SUB>42</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,maxes[spanToBack])<SUB>42</SUB>>", "237": "<(IDENTIFIER,spanToBack,Math.max(maxes[spanToBack], Integer.bitCount(bm)))<SUB>42</SUB>>", "239": "<(IDENTIFIER,Integer,Integer.bitCount(bm))<SUB>42</SUB>>", "241": "<(LOCAL,int[] spanbtb: int[])<SUB>45</SUB>>", "243": "<(IDENTIFIER,spanbtb,int[] spanbtb = new int[B])<SUB>45</SUB>>", "245": "<(IDENTIFIER,B,new int[B])<SUB>45</SUB>>", "247": "<(LOCAL,int i: int)<SUB>46</SUB>>", "249": "<(IDENTIFIER,i,int i = 0)<SUB>46</SUB>>", "251": "<(&lt;operator&gt;.lessThan,i &lt; B)<SUB>46</SUB>>", "253": "<(IDENTIFIER,B,i &lt; B)<SUB>46</SUB>>", "255": "<(IDENTIFIER,i,i++)<SUB>46</SUB>>", "257": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; B); j++),for (int j = 0; Some(j &lt; B); j++))<SUB>47</SUB>>", "259": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>47</SUB>>", "261": "<(LITERAL,0,int j = 0)<SUB>47</SUB>>", "263": "<(IDENTIFIER,j,j &lt; B)<SUB>47</SUB>>", "265": "<(&lt;operator&gt;.postIncrement,j++)<SUB>47</SUB>>", "267": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "269": "<(&lt;operator&gt;.logicalOr,aj[F + i][F + j] == 1 || i == j)<SUB>48</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,aj[F + i][F + j])<SUB>48</SUB>>", "273": "<(IDENTIFIER,aj,aj[F + i][F + j] == 1)<SUB>48</SUB>>", "275": "<(IDENTIFIER,F,F + i)<SUB>48</SUB>>", "277": "<(&lt;operator&gt;.addition,F + j)<SUB>48</SUB>>", "279": "<(IDENTIFIER,j,F + j)<SUB>48</SUB>>", "281": "<(&lt;operator&gt;.equals,i == j)<SUB>48</SUB>>", "283": "<(IDENTIFIER,j,i == j)<SUB>48</SUB>>", "285": "<(&lt;operators&gt;.assignmentOr,spanbtb[i] |= 1 &lt;&lt; j)<SUB>49</SUB>>", "287": "<(IDENTIFIER,spanbtb,spanbtb[i] |= 1 &lt;&lt; j)<SUB>49</SUB>>", "289": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>49</SUB>>", "291": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>49</SUB>>", "293": "<(&lt;operator&gt;.assignment,boolean[] isgood = new boolean[1 &lt;&lt; B])<SUB>53</SUB>>", "295": "<(&lt;operator&gt;.alloc,new boolean[1 &lt;&lt; B])>", "297": "<(LITERAL,1,1 &lt;&lt; B)<SUB>53</SUB>>", "299": "<(CONTROL_STRUCTURE,for (int bm = 0; Some(bm &lt; (1 &lt;&lt; B)); bm++),for (int bm = 0; Some(bm &lt; (1 &lt;&lt; B)); bm++))<SUB>54</SUB>>", "301": "<(&lt;operator&gt;.assignment,int bm = 0)<SUB>54</SUB>>", "303": "<(LITERAL,0,int bm = 0)<SUB>54</SUB>>", "305": "<(IDENTIFIER,bm,bm &lt; (1 &lt;&lt; B))<SUB>54</SUB>>", "307": "<(LITERAL,1,1 &lt;&lt; B)<SUB>54</SUB>>", "309": "<(&lt;operator&gt;.postIncrement,bm++)<SUB>54</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "313": "<(&lt;operator&gt;.assignment,int anded = (1 &lt;&lt; B) - 1)<SUB>55</SUB>>", "315": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; B) - 1)<SUB>55</SUB>>", "317": "<(LITERAL,1,1 &lt;&lt; B)<SUB>55</SUB>>", "319": "<(LITERAL,1,(1 &lt;&lt; B) - 1)<SUB>55</SUB>>", "321": "<(LOCAL,int i: int)<SUB>57</SUB>>", "323": "<(IDENTIFIER,i,int i = 0)<SUB>57</SUB>>", "325": "<(&lt;operator&gt;.lessThan,i &lt; B)<SUB>57</SUB>>", "327": "<(IDENTIFIER,B,i &lt; B)<SUB>57</SUB>>", "329": "<(IDENTIFIER,i,i++)<SUB>57</SUB>>", "331": "<(CONTROL_STRUCTURE,if ((1 &lt;&lt; i &amp; bm) != 0),if ((1 &lt;&lt; i &amp; bm) != 0))<SUB>58</SUB>>", "333": "<(&lt;operator&gt;.and,1 &lt;&lt; i &amp; bm)<SUB>58</SUB>>", "335": "<(LITERAL,1,1 &lt;&lt; i)<SUB>58</SUB>>", "337": "<(IDENTIFIER,bm,1 &lt;&lt; i &amp; bm)<SUB>58</SUB>>", "339": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "341": "<(IDENTIFIER,anded,anded &amp;= spanbtb[i])<SUB>59</SUB>>", "343": "<(IDENTIFIER,spanbtb,anded &amp;= spanbtb[i])<SUB>59</SUB>>", "345": "<(CONTROL_STRUCTURE,if ((anded &amp; bm) == bm),if ((anded &amp; bm) == bm))<SUB>63</SUB>>", "347": "<(&lt;operator&gt;.and,anded &amp; bm)<SUB>63</SUB>>", "349": "<(IDENTIFIER,bm,anded &amp; bm)<SUB>63</SUB>>", "351": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "353": "<(&lt;operator&gt;.indexAccess,isgood[bm])<SUB>64</SUB>>", "355": "<(IDENTIFIER,bm,isgood[bm] = true)<SUB>64</SUB>>", "357": "<(LOCAL,bybc[] tosort: ANY)<SUB>68</SUB>>", "359": "<(IDENTIFIER,tosort,ANY tosort = new bybc[1 &lt;&lt; B])<SUB>68</SUB>>", "361": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; B)<SUB>68</SUB>>", "363": "<(IDENTIFIER,B,1 &lt;&lt; B)<SUB>68</SUB>>", "365": "<(LOCAL,int i: int)<SUB>69</SUB>>", "367": "<(IDENTIFIER,i,int i = 0)<SUB>69</SUB>>", "369": "<(&lt;operator&gt;.lessThan,i &lt; tosort.length)<SUB>69</SUB>>", "371": "<(&lt;operator&gt;.fieldAccess,tosort.length)<SUB>69</SUB>>", "373": "<(FIELD_IDENTIFIER,length,length)<SUB>69</SUB>>", "375": "<(IDENTIFIER,i,i++)<SUB>69</SUB>>", "377": "<(&lt;operator&gt;.assignment,tosort[i] = new bybc(i))<SUB>70</SUB>>", "379": "<(IDENTIFIER,tosort,tosort[i] = new bybc(i))<SUB>70</SUB>>", "381": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>>", "383": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "385": "<(&lt;init&gt;,new bybc(i))<SUB>70</SUB>>", "387": "<(IDENTIFIER,i,new bybc(i))<SUB>70</SUB>>", "389": "<(sort,sort(tosort))<SUB>72</SUB>>", "391": "<(IDENTIFIER,tosort,sort(tosort))<SUB>72</SUB>>", "393": "<(&lt;operator&gt;.assignment,int best = 1)<SUB>74</SUB>>", "395": "<(LITERAL,1,int best = 1)<SUB>74</SUB>>", "397": "<(LOCAL,int i: int)<SUB>75</SUB>>", "399": "<(IDENTIFIER,i,int i = 0)<SUB>75</SUB>>", "401": "<(&lt;operator&gt;.lessThan,i &lt; tosort.length)<SUB>75</SUB>>", "403": "<(&lt;operator&gt;.fieldAccess,tosort.length)<SUB>75</SUB>>", "405": "<(FIELD_IDENTIFIER,length,length)<SUB>75</SUB>>", "407": "<(IDENTIFIER,i,i++)<SUB>75</SUB>>", "409": "<(LOCAL,int at: int)<SUB>76</SUB>>", "411": "<(IDENTIFIER,at,int at = tosort[i].mask)<SUB>76</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,tosort[i])<SUB>76</SUB>>", "415": "<(IDENTIFIER,i,int at = tosort[i].mask)<SUB>76</SUB>>", "417": "<(CONTROL_STRUCTURE,if (isgood[at]),if (isgood[at]))<SUB>77</SUB>>", "419": "<(IDENTIFIER,isgood,if (isgood[at]))<SUB>77</SUB>>", "421": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>77</SUB>>", "423": "<(IDENTIFIER,best,best = Math.max(best, maxes[at] + Integer.bitCount(at)))<SUB>78</SUB>>", "425": "<(IDENTIFIER,Math,Math.max(best, maxes[at] + Integer.bitCount(at)))<SUB>78</SUB>>", "427": "<(&lt;operator&gt;.addition,maxes[at] + Integer.bitCount(at))<SUB>78</SUB>>", "429": "<(IDENTIFIER,maxes,maxes[at] + Integer.bitCount(at))<SUB>78</SUB>>", "431": "<(bitCount,Integer.bitCount(at))<SUB>78</SUB>>", "433": "<(IDENTIFIER,at,Integer.bitCount(at))<SUB>78</SUB>>", "435": "<(LOCAL,int j: int)<SUB>81</SUB>>", "437": "<(IDENTIFIER,j,int j = 0)<SUB>81</SUB>>", "439": "<(&lt;operator&gt;.lessThan,j &lt; B)<SUB>81</SUB>>", "441": "<(IDENTIFIER,B,j &lt; B)<SUB>81</SUB>>", "443": "<(IDENTIFIER,j,j++)<SUB>81</SUB>>", "445": "<(CONTROL_STRUCTURE,if ((1 &lt;&lt; j &amp; at) != 0),if ((1 &lt;&lt; j &amp; at) != 0))<SUB>82</SUB>>", "447": "<(&lt;operator&gt;.and,1 &lt;&lt; j &amp; at)<SUB>82</SUB>>", "449": "<(LITERAL,1,1 &lt;&lt; j)<SUB>82</SUB>>", "451": "<(IDENTIFIER,at,1 &lt;&lt; j &amp; at)<SUB>82</SUB>>", "453": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>>", "455": "<(&lt;operator&gt;.assignment,int to = at - (1 &lt;&lt; j))<SUB>83</SUB>>", "457": "<(&lt;operator&gt;.subtraction,at - (1 &lt;&lt; j))<SUB>83</SUB>>", "459": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>83</SUB>>", "461": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>83</SUB>>", "463": "<(&lt;operator&gt;.indexAccess,maxes[to])<SUB>84</SUB>>", "465": "<(IDENTIFIER,to,maxes[to] = Math.max(maxes[to], maxes[at]))<SUB>84</SUB>>", "467": "<(IDENTIFIER,Math,Math.max(maxes[to], maxes[at]))<SUB>84</SUB>>", "469": "<(IDENTIFIER,maxes,Math.max(maxes[to], maxes[at]))<SUB>84</SUB>>", "471": "<(&lt;operator&gt;.indexAccess,maxes[at])<SUB>84</SUB>>", "473": "<(IDENTIFIER,at,Math.max(maxes[to], maxes[at]))<SUB>84</SUB>>", "475": "<(&lt;operator&gt;.assignment,double ans = best * (best - 1) / 2.0 * (k * k / (double) (best * best)))<SUB>92</SUB>>", "477": "<(&lt;operator&gt;.multiplication,best * (best - 1) / 2.0 * (k * k / (double) (best * best)))<SUB>92</SUB>>", "479": "<(&lt;operator&gt;.multiplication,best * (best - 1))<SUB>92</SUB>>", "481": "<(&lt;operator&gt;.subtraction,best - 1)<SUB>92</SUB>>", "483": "<(LITERAL,1,best - 1)<SUB>92</SUB>>", "485": "<(&lt;operator&gt;.division,k * k / (double) (best * best))<SUB>92</SUB>>", "487": "<(IDENTIFIER,k,k * k)<SUB>92</SUB>>", "489": "<(&lt;operator&gt;.cast,(double) (best * best))<SUB>92</SUB>>", "491": "<(&lt;operator&gt;.multiplication,best * best)<SUB>92</SUB>>", "493": "<(IDENTIFIER,best,best * best)<SUB>92</SUB>>", "495": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>93</SUB>>", "497": "<(FIELD_IDENTIFIER,out,out)<SUB>93</SUB>>", "499": "<(MODIFIER,PUBLIC)>", "501": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}