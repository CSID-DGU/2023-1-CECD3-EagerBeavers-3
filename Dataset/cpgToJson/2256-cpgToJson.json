{"edges": [["19", "21"], ["19", "177"], ["19", "178"], ["19", "179"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "45"], ["21", "46"], ["21", "51"], ["21", "58"], ["21", "145"], ["21", "146"], ["21", "149"], ["21", "172"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "44"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["40", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "76"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "75"], ["73", "74"], ["76", "77"], ["76", "80"], ["76", "106"], ["77", "78"], ["77", "79"], ["80", "81"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "119"], ["112", "122"], ["112", "124"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "138"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "137"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "171"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["22", "28"], ["25", "32"], ["30", "39"], ["35", "48"], ["46", "53"], ["51", "60"], ["146", "151"], ["172", "179"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["48", "46"], ["52", "51"], ["60", "63"], ["63", "73"], ["63", "146"], ["66", "63"], ["151", "154"], ["154", "167"], ["154", "175"], ["157", "154"], ["159", "157"], ["173", "172"], ["28", "26"], ["38", "37"], ["53", "52"], ["70", "77"], ["161", "159"], ["175", "173"], ["39", "40"], ["40", "38"], ["72", "70"], ["77", "83"], ["77", "109"], ["162", "161"], ["73", "72"], ["164", "162"], ["83", "86"], ["86", "93"], ["86", "66"], ["89", "86"], ["91", "89"], ["109", "116"], ["165", "164"], ["92", "100"], ["97", "91"], ["114", "119"], ["119", "133"], ["119", "66"], ["122", "119"], ["167", "165"], ["93", "92"], ["98", "103"], ["103", "97"], ["116", "114"], ["125", "140"], ["138", "122"], ["100", "98"], ["127", "125"], ["139", "138"], ["128", "127"], ["140", "139"], ["130", "128"], ["131", "130"], ["133", "131"], ["19", "24"], ["20", "179"], ["22", "179"], ["25", "179"], ["25", "179"], ["32", "179"], ["30", "179"], ["30", "179"], ["35", "179"], ["38", "179"], ["37", "179"], ["35", "179"], ["35", "179"], ["46", "179"], ["46", "179"], ["46", "179"], ["51", "179"], ["51", "179"], ["60", "179"], ["146", "179"], ["151", "179"], ["154", "179"], ["154", "179"], ["154", "179"], ["172", "179"], ["172", "179"], ["172", "179"], ["162", "179"], ["161", "179"], ["161", "179"], ["159", "179"], ["159", "179"], ["157", "179"], ["73", "179"], ["72", "179"], ["70", "179"], ["70", "179"], ["77", "179"], ["77", "179"], ["109", "179"], ["109", "179"], ["114", "179"], ["114", "179"], ["119", "179"], ["119", "179"], ["128", "179"], ["127", "179"], ["127", "179"], ["125", "179"], ["125", "179"], ["138", "179"], ["138", "179"], ["138", "179"], ["122", "179"], ["83", "179"], ["86", "179"], ["86", "179"], ["66", "179"], ["91", "179"], ["91", "179"], ["91", "179"], ["89", "179"], ["40", "179"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["40", "35"], ["40", "35"], ["40", "35"], ["48", "46"], ["19", "51"], ["19", "146"], ["22", "25"], ["19", "25"], ["19", "60"], ["19", "151"], ["161", "159"], ["161", "159"], ["146", "172"], ["159", "172"], ["19", "172"], ["25", "32"], ["19", "32"], ["19", "37"], ["40", "37"], ["40", "37"], ["40", "37"], ["30", "48"], ["19", "48"], ["60", "63"], ["66", "63"], ["19", "63"], ["48", "63"], ["116", "63"], ["86", "63"], ["63", "66"], ["133", "66"], ["100", "66"], ["19", "66"], ["72", "70"], ["72", "70"], ["151", "154"], ["157", "154"], ["19", "154"], ["63", "154"], ["167", "154"], ["154", "157"], ["19", "157"], ["19", "38"], ["40", "38"], ["40", "38"], ["40", "38"], ["146", "161"], ["159", "161"], ["19", "161"], ["35", "161"], ["127", "161"], ["19", "40"], ["73", "72"], ["19", "72"], ["70", "77"], ["19", "77"], ["146", "162"], ["159", "162"], ["19", "162"], ["32", "73"], ["19", "73"], ["19", "83"], ["19", "109"], ["83", "86"], ["89", "86"], ["19", "86"], ["63", "86"], ["103", "89"], ["19", "89"], ["116", "114"], ["116", "114"], ["114", "119"], ["122", "119"], ["19", "119"], ["119", "122"], ["19", "122"], ["127", "125"], ["127", "125"], ["125", "138"], ["19", "138"], ["154", "167"], ["19", "167"], ["86", "103"], ["19", "103"], ["63", "116"], ["19", "116"], ["63", "100"], ["19", "100"], ["109", "127"], ["19", "127"], ["125", "127"], ["35", "127"], ["109", "128"], ["19", "128"], ["125", "128"], ["63", "133"], ["19", "133"], ["63", "73"], ["63", "77"], ["63", "66"], ["63", "72"], ["63", "70"], ["63", "63"], ["154", "167"], ["154", "154"], ["154", "161"], ["154", "162"], ["154", "157"], ["154", "159"], ["154", "165"], ["154", "164"], ["77", "116"], ["77", "114"], ["77", "119"], ["77", "83"], ["77", "109"], ["77", "86"], ["86", "89"], ["86", "98"], ["86", "103"], ["86", "92"], ["86", "97"], ["86", "91"], ["86", "93"], ["86", "100"], ["86", "86"], ["119", "122"], ["119", "128"], ["119", "131"], ["119", "119"], ["119", "138"], ["119", "140"], ["119", "130"], ["119", "127"], ["119", "139"], ["119", "125"], ["119", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int N: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,N,int N = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long mod = (long) Math.pow(10, 9) + 7)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.addition,(long) Math.pow(10, 9) + 7)<SUB>4</SUB>>", "39": "<(TYPE_REF,long,long)<SUB>4</SUB>>", "41": "<(IDENTIFIER,Math,Math.pow(10, 9))<SUB>4</SUB>>", "43": "<(LITERAL,9,Math.pow(10, 9))<SUB>4</SUB>>", "45": "<(LOCAL,long[][] arr: long[][])<SUB>5</SUB>>", "47": "<(IDENTIFIER,arr,long[][] arr = new long[N][N])<SUB>5</SUB>>", "49": "<(IDENTIFIER,N,new long[N][N])<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,arr[0][0] = 1)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>6</SUB>>", "55": "<(LITERAL,0,arr[0][0] = 1)<SUB>6</SUB>>", "57": "<(LITERAL,1,arr[0][0] = 1)<SUB>6</SUB>>", "59": "<(LOCAL,int i: int)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,int i = 1)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>7</SUB>>", "65": "<(IDENTIFIER,N,i &lt; N)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "69": "<(LOCAL,char c: char)<SUB>8</SUB>>", "71": "<(IDENTIFIER,c,char c = charAt(0))<SUB>8</SUB>>", "73": "<(next,next())<SUB>8</SUB>>", "75": "<(LITERAL,0,charAt(0))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.equals,c == 'f')<SUB>9</SUB>>", "79": "<(LITERAL,'f',c == 'f')<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; N); j++),for (int j = 1; Some(j &lt; N); j++))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>10</SUB>>", "85": "<(LITERAL,1,int j = 1)<SUB>10</SUB>>", "87": "<(IDENTIFIER,j,j &lt; N)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,arr[i][j] = arr[i - 1][j - 1])<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>10</SUB>>", "95": "<(IDENTIFIER,i,arr[i][j] = arr[i - 1][j - 1])<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,arr[i - 1][j - 1])<SUB>10</SUB>>", "99": "<(IDENTIFIER,arr,arr[i][j] = arr[i - 1][j - 1])<SUB>10</SUB>>", "101": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>10</SUB>>", "105": "<(LITERAL,1,j - 1)<SUB>10</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>13</SUB>>", "111": "<(LITERAL,0,long sum = 0)<SUB>13</SUB>>", "113": "<(LOCAL,int j: int)<SUB>14</SUB>>", "115": "<(IDENTIFIER,j,int j = N - 1)<SUB>14</SUB>>", "117": "<(IDENTIFIER,N,N - 1)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>14</SUB>>", "121": "<(LITERAL,0,j &gt;= 0)<SUB>14</SUB>>", "123": "<(IDENTIFIER,j,j--)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,sum = (sum + arr[i - 1][j]) % mod)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.modulo,(sum + arr[i - 1][j]) % mod)<SUB>15</SUB>>", "129": "<(IDENTIFIER,sum,sum + arr[i - 1][j])<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,arr[i - 1])<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>15</SUB>>", "135": "<(LITERAL,1,i - 1)<SUB>15</SUB>>", "137": "<(IDENTIFIER,mod,(sum + arr[i - 1][j]) % mod)<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,arr[i][j])<SUB>16</SUB>>", "141": "<(IDENTIFIER,arr,arr[i][j] = sum)<SUB>16</SUB>>", "143": "<(IDENTIFIER,j,arr[i][j] = sum)<SUB>16</SUB>>", "145": "<(LOCAL,long ans: long)<SUB>20</SUB>>", "147": "<(IDENTIFIER,ans,long ans = 0)<SUB>20</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "153": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "155": "<(IDENTIFIER,i,i &lt; N)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.assignment,ans = (ans + arr[N - 1][i]) % mod)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.modulo,(ans + arr[N - 1][i]) % mod)<SUB>21</SUB>>", "163": "<(IDENTIFIER,ans,ans + arr[N - 1][i])<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,arr[N - 1])<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>21</SUB>>", "169": "<(LITERAL,1,N - 1)<SUB>21</SUB>>", "171": "<(IDENTIFIER,mod,(ans + arr[N - 1][i]) % mod)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "175": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "177": "<(MODIFIER,PUBLIC)>", "179": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}