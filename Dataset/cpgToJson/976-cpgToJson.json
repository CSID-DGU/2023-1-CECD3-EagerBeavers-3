{"edges": [["21", "23"], ["21", "141"], ["21", "142"], ["21", "143"], ["23", "24"], ["23", "25"], ["23", "32"], ["23", "33"], ["23", "36"], ["23", "37"], ["23", "42"], ["23", "43"], ["23", "4"], ["23", "80"], ["23", "83"], ["23", "93"], ["23", "119"], ["23", "139"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "31"], ["28", "29"], ["28", "30"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["45", "66"], ["47", "48"], ["47", "51"], ["47", "65"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "61"], ["51", "64"], ["53", "54"], ["53", "57"], ["53", "60"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["66", "67"], ["66", "70"], ["66", "79"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["80", "81"], ["80", "82"], ["83", "3"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["85", "92"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["93", "115"], ["95", "6"], ["95", "96"], ["95", "99"], ["95", "106"], ["95", "111"], ["95", "113"], ["96", "97"], ["96", "98"], ["99", "5"], ["99", "100"], ["99", "101"], ["99", "102"], ["99", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["115", "116"], ["116", "117"], ["117", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "138"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "137"], ["130", "131"], ["130", "134"], ["131", "132"], ["132", "133"], ["134", "135"], ["135", "136"], ["139", "140"], ["25", "33"], ["33", "39"], ["37", "50"], ["37", "69"], ["43", "82"], ["80", "88"], ["83", "94"], ["139", "143"], ["27", "25"], ["39", "37"], ["45", "43"], ["82", "80"], ["94", "98"], ["94", "117"], ["120", "125"], ["120", "139"], ["28", "27"], ["86", "89"], ["89", "83"], ["96", "103"], ["99", "110"], ["106", "111"], ["111", "113"], ["113", "120"], ["122", "139"], ["48", "56"], ["51", "45"], ["67", "74"], ["70", "45"], ["88", "86"], ["98", "96"], ["103", "99"], ["108", "106"], ["117", "120"], ["123", "132"], ["126", "122"], ["50", "48"], ["61", "51"], ["69", "67"], ["72", "77"], ["75", "70"], ["110", "108"], ["125", "123"], ["127", "126"], ["54", "57"], ["57", "63"], ["63", "61"], ["74", "72"], ["77", "75"], ["129", "127"], ["56", "54"], ["130", "129"], ["131", "135"], ["134", "130"], ["132", "131"], ["135", "134"], ["21", "28"], ["22", "143"], ["28", "143"], ["27", "143"], ["25", "143"], ["25", "143"], ["33", "143"], ["33", "143"], ["37", "143"], ["37", "143"], ["70", "143"], ["70", "143"], ["70", "143"], ["70", "143"], ["70", "143"], ["51", "143"], ["57", "143"], ["57", "143"], ["51", "143"], ["51", "143"], ["51", "143"], ["43", "143"], ["43", "143"], ["80", "143"], ["86", "143"], ["89", "143"], ["89", "143"], ["89", "143"], ["83", "143"], ["117", "143"], ["117", "143"], ["96", "143"], ["99", "143"], ["99", "143"], ["99", "143"], ["106", "143"], ["106", "143"], ["111", "143"], ["113", "143"], ["113", "143"], ["130", "143"], ["135", "143"], ["134", "143"], ["130", "143"], ["129", "143"], ["127", "143"], ["126", "143"], ["122", "143"], ["122", "143"], ["139", "143"], ["139", "143"], ["39", "143"], ["21", "22"], ["27", "25"], ["27", "25"], ["21", "33"], ["39", "37"], ["39", "37"], ["67", "43"], ["54", "43"], ["51", "43"], ["70", "43"], ["21", "80"], ["80", "83"], ["21", "83"], ["43", "83"], ["86", "83"], ["89", "83"], ["21", "94"], ["21", "120"], ["83", "139"], ["122", "139"], ["21", "139"], ["28", "27"], ["28", "27"], ["21", "27"], ["21", "39"], ["67", "45"], ["54", "45"], ["51", "45"], ["70", "45"], ["21", "86"], ["21", "92"], ["21", "96"], ["21", "28"], ["21", "48"], ["21", "65"], ["21", "67"], ["21", "79"], ["86", "89"], ["21", "89"], ["96", "99"], ["21", "99"], ["83", "99"], ["103", "99"], ["103", "99"], ["99", "106"], ["21", "106"], ["106", "111"], ["21", "111"], ["111", "113"], ["21", "113"], ["83", "122"], ["21", "122"], ["129", "122"], ["129", "122"], ["48", "51"], ["21", "51"], ["54", "51"], ["57", "51"], ["28", "51"], ["37", "51"], ["67", "70"], ["21", "70"], ["28", "70"], ["37", "70"], ["21", "103"], ["83", "117"], ["21", "117"], ["21", "126"], ["129", "126"], ["129", "126"], ["21", "54"], ["21", "60"], ["21", "127"], ["129", "127"], ["129", "127"], ["54", "57"], ["21", "57"], ["130", "129"], ["130", "129"], ["21", "129"], ["131", "130"], ["134", "130"], ["132", "131"], ["135", "134"], ["21", "132"], ["132", "135"], ["21", "135"], ["94", "96"], ["94", "98"], ["94", "113"], ["94", "99"], ["94", "103"], ["94", "106"], ["94", "110"], ["94", "117"], ["94", "108"], ["94", "111"], ["120", "122"], ["120", "131"], ["120", "132"], ["120", "123"], ["120", "129"], ["120", "134"], ["120", "126"], ["120", "130"], ["120", "135"], ["120", "127"], ["120", "125"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,boolean local = System.getProperty(&quot;ONLINE_JUDGE&quot;) == null)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.equals,System.getProperty(&quot;ONLINE_JUDGE&quot;) == null)<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,System.getProperty(&quot;ONLINE_JUDGE&quot;))<SUB>2</SUB>>", "31": "<(LITERAL,null,System.getProperty(&quot;ONLINE_JUDGE&quot;) == null)<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,boolean async = false)<SUB>3</SUB>>", "35": "<(LITERAL,false,boolean async = false)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,ANY charset = forName(&quot;ascii&quot;))<SUB>5</SUB>>", "39": "<(forName,forName(&quot;ascii&quot;))<SUB>5</SUB>>", "41": "<(LITERAL,&quot;ascii&quot;,forName(&quot;ascii&quot;))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,ANY io = local ? new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset) : new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.conditional,local ? new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset) : new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "49": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "51": "<(&lt;init&gt;,new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset))<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "57": "<(&lt;init&gt;,new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;))<SUB>7</SUB>>", "59": "<(LITERAL,&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;,new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "63": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "65": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "67": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "69": "<(&lt;operator&gt;.alloc,new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "71": "<(IDENTIFIER,$obj2,new FastIO(System.in, System.out, charset))>", "73": "<(IDENTIFIER,System,new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "79": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "80": "<(&lt;operator&gt;.assignment,ANY task = new Task(io, new Debug(local)))<SUB>8</SUB>>", "82": "<(&lt;operator&gt;.alloc,new Task(io, new Debug(local)))<SUB>8</SUB>>", "3": "<(IDENTIFIER,task,new Task(io, new Debug(local)))<SUB>8</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "87": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "89": "<(&lt;init&gt;,new Debug(local))<SUB>8</SUB>>", "91": "<(IDENTIFIER,local,new Debug(local))<SUB>8</SUB>>", "93": "<(CONTROL_STRUCTURE,if (async),if (async))<SUB>10</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "96": "<(&lt;operator&gt;.assignment,Thread t = new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "98": "<(&lt;operator&gt;.alloc,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "5": "<(IDENTIFIER,t,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "101": "<(IDENTIFIER,task,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 27)<SUB>11</SUB>>", "105": "<(LITERAL,27,1 &lt;&lt; 27)<SUB>11</SUB>>", "107": "<(IDENTIFIER,t,t.setPriority(Thread.MAX_PRIORITY))<SUB>12</SUB>>", "109": "<(IDENTIFIER,Thread,t.setPriority(Thread.MAX_PRIORITY))<SUB>12</SUB>>", "111": "<(start,t.start())<SUB>13</SUB>>", "113": "<(join,t.join())<SUB>14</SUB>>", "115": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "117": "<(run,run())<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,if (local),if (local))<SUB>19</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,io.cache)<SUB>20</SUB>>", "125": "<(FIELD_IDENTIFIER,cache,cache)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.addition,&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20))<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.logicalShiftRight,(Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20)<SUB>20</SUB>>", "131": "<(totalMemory,Runtime.getRuntime().totalMemory())<SUB>20</SUB>>", "133": "<(IDENTIFIER,Runtime,Runtime.getRuntime())<SUB>20</SUB>>", "135": "<(getRuntime,Runtime.getRuntime())<SUB>20</SUB>>", "137": "<(LITERAL,20,(Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20)<SUB>20</SUB>>", "139": "<(flush,flush())<SUB>23</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}