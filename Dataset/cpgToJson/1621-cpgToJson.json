{"edges": [["19", "21"], ["19", "139"], ["19", "140"], ["19", "141"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "29"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "43"], ["21", "70"], ["21", "73"], ["21", "74"], ["21", "78"], ["21", "79"], ["21", "82"], ["21", "83"], ["21", "86"], ["21", "87"], ["21", "90"], ["21", "118"], ["21", "130"], ["21", "134"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["29", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "62"], ["58", "69"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "66"], ["62", "68"], ["64", "65"], ["66", "67"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "104"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "109"], ["104", "113"], ["105", "106"], ["105", "107"], ["105", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "123"], ["118", "126"], ["119", "120"], ["119", "121"], ["119", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["22", "25"], ["25", "28"], ["26", "29"], ["29", "33"], ["31", "37"], ["35", "41"], ["39", "45"], ["70", "76"], ["74", "79"], ["79", "83"], ["83", "87"], ["87", "92"], ["130", "137"], ["134", "141"], ["24", "22"], ["28", "26"], ["33", "31"], ["37", "35"], ["41", "39"], ["45", "48"], ["48", "55"], ["48", "70"], ["51", "48"], ["76", "74"], ["91", "100"], ["91", "119"], ["119", "123"], ["119", "127"], ["123", "130"], ["135", "134"], ["54", "51"], ["92", "91"], ["97", "105"], ["127", "130"], ["137", "135"], ["55", "61"], ["99", "97"], ["105", "110"], ["105", "115"], ["59", "64"], ["62", "54"], ["100", "99"], ["110", "92"], ["61", "59"], ["64", "66"], ["66", "62"], ["115", "92"], ["19", "24"], ["20", "141"], ["22", "141"], ["25", "141"], ["26", "141"], ["29", "141"], ["31", "141"], ["31", "141"], ["37", "141"], ["35", "141"], ["35", "141"], ["39", "141"], ["39", "141"], ["45", "141"], ["48", "141"], ["48", "141"], ["70", "141"], ["70", "141"], ["74", "141"], ["74", "141"], ["79", "141"], ["79", "141"], ["83", "141"], ["87", "141"], ["87", "141"], ["92", "141"], ["91", "141"], ["91", "141"], ["119", "141"], ["119", "141"], ["127", "141"], ["127", "141"], ["123", "141"], ["123", "141"], ["130", "141"], ["130", "141"], ["130", "141"], ["134", "141"], ["134", "141"], ["134", "141"], ["99", "141"], ["97", "141"], ["97", "141"], ["105", "141"], ["115", "141"], ["110", "141"], ["54", "141"], ["59", "141"], ["62", "141"], ["62", "141"], ["66", "141"], ["62", "141"], ["62", "141"], ["54", "141"], ["51", "141"], ["35", "141"], ["70", "141"], ["19", "20"], ["19", "22"], ["19", "26"], ["33", "31"], ["37", "35"], ["41", "39"], ["76", "74"], ["48", "79"], ["19", "79"], ["19", "83"], ["19", "87"], ["22", "25"], ["19", "25"], ["26", "29"], ["19", "29"], ["19", "45"], ["19", "70"], ["39", "70"], ["54", "70"], ["119", "123"], ["19", "123"], ["119", "130"], ["19", "130"], ["127", "130"], ["123", "130"], ["29", "134"], ["19", "134"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "41"], ["19", "41"], ["45", "48"], ["51", "48"], ["19", "48"], ["41", "48"], ["62", "51"], ["19", "51"], ["59", "54"], ["62", "54"], ["19", "54"], ["19", "76"], ["92", "91"], ["92", "91"], ["19", "91"], ["99", "97"], ["99", "97"], ["105", "119"], ["19", "119"], ["92", "119"], ["92", "127"], ["19", "127"], ["79", "92"], ["115", "92"], ["19", "92"], ["83", "92"], ["110", "92"], ["19", "59"], ["19", "69"], ["92", "99"], ["19", "99"], ["92", "99"], ["19", "105"], ["97", "105"], ["105", "110"], ["19", "110"], ["59", "62"], ["19", "62"], ["64", "62"], ["66", "62"], ["48", "62"], ["92", "100"], ["19", "100"], ["92", "100"], ["105", "115"], ["19", "115"], ["37", "64"], ["66", "64"], ["19", "64"], ["64", "66"], ["19", "66"], ["48", "48"], ["48", "64"], ["48", "51"], ["48", "66"], ["48", "59"], ["48", "54"], ["48", "61"], ["48", "55"], ["48", "62"], ["91", "99"], ["91", "92"], ["91", "97"], ["91", "91"], ["91", "105"], ["91", "100"], ["119", "123"], ["119", "127"], ["105", "115"], ["105", "110"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(IDENTIFIER,sb,sb = new StringBuilder())<SUB>3</SUB>>", "29": "<(&lt;init&gt;,new StringBuilder())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,TotalTime = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,problems = new Problem[n])<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.alloc,new Problem[n])>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,problems[i])<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,problems[i] = new Problem(sc.nextInt(), sc.nextLong(), i))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.alloc,new Problem(sc.nextInt(), sc.nextLong(), i))<SUB>8</SUB>>", "63": "<(IDENTIFIER,$obj2,new Problem(sc.nextInt(), sc.nextLong(), i))>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,sc,nextLong())<SUB>8</SUB>>", "69": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "71": "<(IDENTIFIER,Arrays,sort(problems))<SUB>10</SUB>>", "73": "<(LOCAL,long num: long)<SUB>11</SUB>>", "75": "<(IDENTIFIER,num,long num = -1)<SUB>11</SUB>>", "77": "<(LITERAL,1,-1)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.assignment,long high = n)<SUB>12</SUB>>", "81": "<(IDENTIFIER,n,long high = n)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,long low = 0)<SUB>13</SUB>>", "85": "<(LITERAL,0,long low = 0)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,int iter = 0)<SUB>14</SUB>>", "89": "<(LITERAL,0,int iter = 0)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.greaterThan,high - low &gt; 1)<SUB>15</SUB>>", "93": "<(IDENTIFIER,high,high - low)<SUB>15</SUB>>", "95": "<(LITERAL,1,high - low &gt; 1)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,num = (high + low) / 2)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.division,(high + low) / 2)<SUB>16</SUB>>", "101": "<(IDENTIFIER,high,high + low)<SUB>16</SUB>>", "103": "<(LITERAL,2,(high + low) / 2)<SUB>16</SUB>>", "105": "<(test,test(num, false))<SUB>17</SUB>>", "107": "<(IDENTIFIER,num,test(num, false))<SUB>17</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "111": "<(IDENTIFIER,low,low = num)<SUB>18</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.assignment,high = num)<SUB>21</SUB>>", "117": "<(IDENTIFIER,num,high = num)<SUB>21</SUB>>", "119": "<(test,test(high, false))<SUB>24</SUB>>", "121": "<(IDENTIFIER,high,test(high, false))<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.assignment,num = high)<SUB>25</SUB>>", "125": "<(IDENTIFIER,high,num = high)<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.assignment,num = low)<SUB>27</SUB>>", "129": "<(IDENTIFIER,low,num = low)<SUB>27</SUB>>", "131": "<(IDENTIFIER,this,test(num, true))<SUB>28</SUB>>", "133": "<(LITERAL,true,test(num, true))<SUB>28</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}