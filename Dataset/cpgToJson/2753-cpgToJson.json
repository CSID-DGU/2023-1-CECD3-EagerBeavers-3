{"edges": [["19", "20"], ["19", "21"], ["19", "118"], ["19", "119"], ["19", "120"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["53", "54"], ["54", "55"], ["54", "60"], ["54", "104"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["60", "67"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["67", "84"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "41"], ["35", "45"], ["38", "120"], ["28", "26"], ["39", "38"], ["41", "39"], ["45", "51"], ["45", "56"], ["48", "120"], ["49", "48"], ["51", "49"], ["55", "64"], ["55", "108"], ["56", "55"], ["62", "68"], ["105", "120"], ["64", "62"], ["68", "74"], ["68", "86"], ["71", "120"], ["106", "112"], ["109", "105"], ["72", "78"], ["75", "71"], ["108", "106"], ["110", "115"], ["115", "109"], ["74", "72"], ["76", "81"], ["81", "75"], ["86", "120"], ["86", "92"], ["89", "120"], ["112", "110"], ["78", "76"], ["90", "95"], ["93", "89"], ["92", "90"], ["94", "101"], ["101", "93"], ["95", "98"], ["98", "94"], ["19", "24"], ["20", "120"], ["22", "120"], ["25", "120"], ["25", "120"], ["32", "120"], ["30", "120"], ["30", "120"], ["35", "120"], ["35", "120"], ["38", "120"], ["38", "120"], ["64", "120"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["19", "38"], ["35", "45"], ["19", "45"], ["19", "48"], ["56", "55"], ["56", "55"], ["19", "55"], ["64", "62"], ["64", "62"], ["45", "56"], ["19", "56"], ["109", "105"], ["109", "105"], ["19", "64"], ["56", "64"], ["62", "68"], ["19", "68"], ["75", "71"], ["75", "71"], ["110", "109"], ["110", "109"], ["115", "109"], ["115", "109"], ["76", "75"], ["76", "75"], ["81", "75"], ["81", "75"], ["112", "110"], ["19", "110"], ["112", "110"], ["110", "115"], ["19", "115"], ["78", "76"], ["19", "76"], ["78", "76"], ["76", "81"], ["19", "81"], ["68", "86"], ["19", "86"], ["93", "89"], ["93", "89"], ["56", "112"], ["19", "112"], ["64", "78"], ["19", "78"], ["94", "93"], ["94", "93"], ["101", "93"], ["101", "93"], ["95", "94"], ["95", "94"], ["98", "94"], ["98", "94"], ["98", "101"], ["19", "101"], ["64", "95"], ["19", "95"], ["95", "98"], ["19", "98"], ["35", "38"], ["35", "45"], ["35", "41"], ["35", "39"], ["45", "48"], ["45", "49"], ["45", "51"], ["45", "56"], ["45", "55"], ["55", "115"], ["55", "68"], ["55", "64"], ["55", "106"], ["55", "112"], ["55", "105"], ["55", "110"], ["55", "108"], ["55", "109"], ["55", "62"], ["68", "75"], ["68", "81"], ["68", "72"], ["68", "74"], ["68", "76"], ["68", "71"], ["68", "78"], ["68", "86"], ["86", "94"], ["86", "89"], ["86", "98"], ["86", "95"], ["86", "92"], ["86", "93"], ["86", "101"], ["86", "90"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>6</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>6</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.equals,n == 1)<SUB>7</SUB>>", "37": "<(LITERAL,1,n == 1)<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "41": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "43": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.equals,n == 2)<SUB>9</SUB>>", "47": "<(LITERAL,2,n == 2)<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "53": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "55": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>12</SUB>>", "57": "<(IDENTIFIER,n,n % 2)<SUB>12</SUB>>", "59": "<(LITERAL,0,n % 2 == 0)<SUB>12</SUB>>", "61": "<(LOCAL,int cnt: int)<SUB>14</SUB>>", "63": "<(IDENTIFIER,cnt,int cnt = nPrime(n))<SUB>14</SUB>>", "65": "<(IDENTIFIER,this,nPrime(n))<SUB>14</SUB>>", "67": "<(CONTROL_STRUCTURE,if (cnt == 1),if (cnt == 1))<SUB>15</SUB>>", "69": "<(IDENTIFIER,cnt,cnt == 1)<SUB>15</SUB>>", "71": "<(println,System.out.println((n) * (n - 1) * (n - 3)))<SUB>16</SUB>>", "73": "<(IDENTIFIER,System,System.out.println((n) * (n - 1) * (n - 3)))<SUB>16</SUB>>", "75": "<(&lt;operator&gt;.multiplication,(n) * (n - 1) * (n - 3))<SUB>16</SUB>>", "77": "<(IDENTIFIER,n,(n) * (n - 1))<SUB>16</SUB>>", "79": "<(IDENTIFIER,n,n - 1)<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>16</SUB>>", "83": "<(LITERAL,3,n - 3)<SUB>16</SUB>>", "85": "<(CONTROL_STRUCTURE,if (cnt &gt; 1),if (cnt &gt; 1))<SUB>17</SUB>>", "87": "<(IDENTIFIER,cnt,cnt &gt; 1)<SUB>17</SUB>>", "89": "<(println,System.out.println((n - 1) * (n - 2) * (n - 3)))<SUB>18</SUB>>", "91": "<(IDENTIFIER,System,System.out.println((n - 1) * (n - 2) * (n - 3)))<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2) * (n - 3))<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>18</SUB>>", "97": "<(LITERAL,1,n - 1)<SUB>18</SUB>>", "99": "<(IDENTIFIER,n,n - 2)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>18</SUB>>", "103": "<(LITERAL,3,n - 3)<SUB>18</SUB>>", "105": "<(println,System.out.println((n) * (n - 1) * (n - 2)))<SUB>22</SUB>>", "107": "<(IDENTIFIER,System,System.out.println((n) * (n - 1) * (n - 2)))<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.multiplication,(n) * (n - 1) * (n - 2))<SUB>22</SUB>>", "111": "<(IDENTIFIER,n,(n) * (n - 1))<SUB>22</SUB>>", "113": "<(IDENTIFIER,n,n - 1)<SUB>22</SUB>>", "115": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>22</SUB>>", "117": "<(LITERAL,2,n - 2)<SUB>22</SUB>>", "119": "<(MODIFIER,STATIC)>"}}