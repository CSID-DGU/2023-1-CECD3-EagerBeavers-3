{"edges": [["19", "20"], ["19", "21"], ["19", "256"], ["19", "257"], ["19", "258"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "33"], ["31", "36"], ["31", "39"], ["31", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "47"], ["41", "48"], ["41", "52"], ["41", "53"], ["41", "58"], ["41", "59"], ["41", "64"], ["41", "81"], ["41", "129"], ["41", "134"], ["41", "135"], ["41", "142"], ["41", "163"], ["41", "164"], ["41", "167"], ["41", "251"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "111"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["117", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["138", "139"], ["138", "140"], ["138", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "152"], ["142", "154"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "180"], ["167", "182"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["176", "179"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "192"], ["182", "193"], ["182", "196"], ["182", "245"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["186", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "204"], ["196", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "242"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["211", "216"], ["211", "221"], ["211", "223"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["226", "229"], ["229", "230"], ["229", "239"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["247", "250"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["22", "25"], ["25", "29"], ["27", "33"], ["24", "22"], ["29", "27"], ["33", "36"], ["36", "258"], ["36", "45"], ["39", "36"], ["43", "50"], ["48", "55"], ["53", "61"], ["59", "66"], ["129", "138"], ["135", "144"], ["164", "169"], ["251", "39"], ["45", "43"], ["50", "48"], ["55", "53"], ["61", "59"], ["66", "69"], ["69", "76"], ["69", "83"], ["72", "69"], ["74", "72"], ["83", "86"], ["86", "94"], ["86", "131"], ["89", "86"], ["131", "129"], ["137", "135"], ["144", "151"], ["147", "155"], ["147", "164"], ["152", "151"], ["154", "152"], ["169", "175"], ["172", "190"], ["172", "254"], ["180", "175"], ["252", "251"], ["75", "74"], ["138", "137"], ["149", "147"], ["155", "159"], ["158", "154"], ["174", "172"], ["184", "193"], ["193", "198"], ["245", "180"], ["254", "252"], ["76", "75"], ["94", "97"], ["97", "105"], ["97", "89"], ["100", "97"], ["151", "149"], ["159", "158"], ["175", "176"], ["176", "174"], ["186", "184"], ["198", "201"], ["201", "208"], ["201", "247"], ["204", "201"], ["247", "245"], ["103", "113"], ["111", "100"], ["188", "186"], ["208", "213"], ["242", "204"], ["104", "109"], ["109", "103"], ["112", "120"], ["117", "111"], ["190", "188"], ["213", "220"], ["216", "235"], ["216", "242"], ["221", "220"], ["105", "104"], ["113", "112"], ["119", "125"], ["124", "117"], ["218", "216"], ["224", "221"], ["120", "119"], ["125", "124"], ["220", "218"], ["226", "224"], ["229", "226"], ["230", "239"], ["239", "229"], ["232", "230"], ["233", "232"], ["235", "233"], ["19", "24"], ["20", "258"], ["22", "258"], ["25", "258"], ["29", "258"], ["27", "258"], ["27", "258"], ["33", "258"], ["36", "258"], ["36", "258"], ["36", "258"], ["39", "258"], ["19", "20"], ["19", "22"], ["29", "27"], ["22", "25"], ["19", "25"], ["19", "33"], ["25", "29"], ["19", "29"], ["33", "36"], ["39", "36"], ["19", "36"], ["27", "36"], ["36", "39"], ["19", "39"], ["45", "43"], ["50", "48"], ["55", "53"], ["55", "53"], ["61", "59"], ["61", "59"], ["131", "129"], ["131", "129"], ["137", "135"], ["19", "164"], ["19", "66"], ["69", "74"], ["19", "74"], ["19", "83"], ["19", "144"], ["74", "154"], ["19", "169"], ["164", "251"], ["245", "251"], ["19", "251"], ["29", "45"], ["50", "45"], ["109", "45"], ["19", "45"], ["45", "50"], ["19", "50"], ["43", "55"], ["19", "55"], ["48", "55"], ["55", "61"], ["19", "61"], ["66", "69"], ["72", "69"], ["19", "69"], ["61", "69"], ["19", "72"], ["69", "72"], ["83", "86"], ["89", "86"], ["19", "86"], ["55", "86"], ["86", "89"], ["19", "89"], ["186", "131"], ["19", "131"], ["59", "131"], ["138", "137"], ["138", "137"], ["138", "137"], ["144", "147"], ["152", "147"], ["19", "147"], ["135", "147"], ["147", "152"], ["19", "152"], ["169", "172"], ["180", "172"], ["19", "172"], ["176", "172"], ["176", "172"], ["186", "180"], ["19", "180"], ["186", "184"], ["186", "184"], ["186", "184"], ["19", "193"], ["247", "245"], ["247", "245"], ["247", "245"], ["19", "94"], ["176", "138"], ["117", "138"], ["19", "138"], ["69", "138"], ["97", "138"], ["86", "138"], ["19", "174"], ["176", "174"], ["176", "174"], ["19", "198"], ["94", "97"], ["100", "97"], ["19", "97"], ["69", "97"], ["97", "100"], ["19", "100"], ["109", "103"], ["117", "111"], ["117", "111"], ["117", "111"], ["138", "176"], ["247", "176"], ["19", "176"], ["138", "176"], ["201", "176"], ["131", "186"], ["19", "186"], ["135", "186"], ["147", "186"], ["216", "186"], ["172", "186"], ["198", "201"], ["204", "201"], ["19", "201"], ["176", "201"], ["232", "201"], ["201", "204"], ["19", "204"], ["19", "208"], ["208", "242"], ["224", "242"], ["19", "242"], ["176", "247"], ["226", "247"], ["19", "247"], ["164", "247"], ["245", "247"], ["193", "247"], ["242", "247"], ["19", "213"], ["193", "242"], ["50", "109"], ["19", "109"], ["176", "117"], ["19", "117"], ["111", "117"], ["103", "117"], ["213", "216"], ["221", "216"], ["19", "216"], ["135", "216"], ["186", "216"], ["216", "221"], ["19", "221"], ["226", "224"], ["226", "224"], ["226", "224"], ["176", "226"], ["19", "226"], ["208", "226"], ["224", "226"], ["201", "232"], ["19", "232"], ["184", "232"], ["201", "232"], ["201", "233"], ["19", "233"], ["184", "233"], ["36", "169"], ["36", "131"], ["36", "149"], ["36", "69"], ["36", "151"], ["36", "50"], ["36", "59"], ["36", "144"], ["36", "129"], ["36", "138"], ["36", "137"], ["36", "43"], ["36", "61"], ["36", "36"], ["36", "174"], ["36", "164"], ["36", "252"], ["36", "86"], ["36", "48"], ["36", "66"], ["36", "45"], ["36", "251"], ["36", "176"], ["36", "254"], ["36", "83"], ["36", "53"], ["36", "147"], ["36", "135"], ["36", "55"], ["36", "175"], ["36", "39"], ["36", "172"], ["69", "75"], ["69", "69"], ["69", "74"], ["69", "76"], ["69", "72"], ["86", "94"], ["86", "97"], ["86", "86"], ["86", "89"], ["147", "154"], ["147", "149"], ["147", "151"], ["147", "152"], ["147", "155"], ["147", "158"], ["147", "159"], ["147", "147"], ["172", "188"], ["172", "198"], ["172", "245"], ["172", "247"], ["172", "190"], ["172", "184"], ["172", "174"], ["172", "186"], ["172", "201"], ["172", "180"], ["172", "193"], ["172", "176"], ["172", "175"], ["172", "172"], ["97", "120"], ["97", "113"], ["97", "103"], ["97", "104"], ["97", "119"], ["97", "97"], ["97", "112"], ["97", "100"], ["97", "111"], ["97", "105"], ["97", "117"], ["97", "124"], ["97", "125"], ["97", "109"], ["201", "213"], ["201", "204"], ["201", "208"], ["201", "242"], ["201", "201"], ["201", "220"], ["201", "216"], ["201", "218"], ["216", "230"], ["216", "232"], ["216", "226"], ["216", "221"], ["216", "224"], ["216", "233"], ["216", "239"], ["216", "235"], ["216", "220"], ["216", "229"], ["216", "216"], ["216", "218"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int Q = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(CONTROL_STRUCTURE,for (int q = 0; Some(q &lt; Q); q++),for (int q = 0; Some(q &lt; Q); q++))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int q = 0)<SUB>4</SUB>>", "35": "<(LITERAL,0,int q = 0)<SUB>4</SUB>>", "37": "<(IDENTIFIER,q,q &lt; Q)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,q++)<SUB>4</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>5</SUB>>", "45": "<(nextInt,nextInt())<SUB>5</SUB>>", "47": "<(LOCAL,int M: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,M,int M = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[][] grid = new int[N][M])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[N][M])>", "57": "<(IDENTIFIER,M,new int[N][M])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[][] maxes = new int[M][2])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[M][2])>", "63": "<(LITERAL,2,new int[M][2])<SUB>8</SUB>>", "65": "<(LOCAL,int i: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; M)<SUB>9</SUB>>", "71": "<(IDENTIFIER,M,i &lt; M)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,maxes[i][1])<SUB>10</SUB>>", "77": "<(IDENTIFIER,maxes,maxes[i][1] = i)<SUB>10</SUB>>", "79": "<(LITERAL,1,maxes[i][1] = i)<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "87": "<(IDENTIFIER,i,i &lt; N)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(LOCAL,int j: int)<SUB>12</SUB>>", "95": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>12</SUB>>", "99": "<(IDENTIFIER,M,j &lt; M)<SUB>12</SUB>>", "101": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.assignment,grid[i][j] = nextInt())<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>13</SUB>>", "107": "<(IDENTIFIER,i,grid[i][j] = nextInt())<SUB>13</SUB>>", "109": "<(nextInt,nextInt())<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,maxes[j][0] = Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,maxes[j])<SUB>14</SUB>>", "115": "<(IDENTIFIER,j,maxes[j][0] = Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "117": "<(max,Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,maxes[j][0])<SUB>14</SUB>>", "121": "<(IDENTIFIER,maxes,Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "123": "<(LITERAL,0,Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>14</SUB>>", "127": "<(IDENTIFIER,i,Math.max(maxes[j][0], grid[i][j]))<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.assignment,maxes = sort(maxes))<SUB>17</SUB>>", "131": "<(sort,sort(maxes))<SUB>17</SUB>>", "133": "<(IDENTIFIER,maxes,sort(maxes))<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.assignment,int[] keyCols = new int[Math.min(M, N)])<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.alloc,new int[Math.min(M, N)])>", "139": "<(IDENTIFIER,Math,Math.min(M, N))<SUB>18</SUB>>", "141": "<(IDENTIFIER,N,Math.min(M, N))<SUB>18</SUB>>", "143": "<(LOCAL,int i: int)<SUB>19</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.lessThan,i &lt; keyCols.length)<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,keyCols.length)<SUB>19</SUB>>", "151": "<(FIELD_IDENTIFIER,length,length)<SUB>19</SUB>>", "153": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,keyCols[i])<SUB>20</SUB>>", "157": "<(IDENTIFIER,i,keyCols[i] = maxes[i][1])<SUB>20</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,maxes[i])<SUB>20</SUB>>", "161": "<(IDENTIFIER,i,keyCols[i] = maxes[i][1])<SUB>20</SUB>>", "163": "<(LOCAL,int ans: int)<SUB>22</SUB>>", "165": "<(IDENTIFIER,ans,int ans = 0)<SUB>22</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt; (int) Math.pow(N, N)); x++),for (int x = 0; Some(x &lt; (int) Math.pow(N, N)); x++))<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>23</SUB>>", "171": "<(LITERAL,0,int x = 0)<SUB>23</SUB>>", "173": "<(IDENTIFIER,x,x &lt; (int) Math.pow(N, N))<SUB>23</SUB>>", "175": "<(TYPE_REF,int,int)<SUB>23</SUB>>", "177": "<(IDENTIFIER,Math,Math.pow(N, N))<SUB>23</SUB>>", "179": "<(IDENTIFIER,N,Math.pow(N, N))<SUB>23</SUB>>", "181": "<(IDENTIFIER,x,x++)<SUB>23</SUB>>", "183": "<(LOCAL,int[] base: int[])<SUB>24</SUB>>", "185": "<(IDENTIFIER,base,int[] base = baseN(keyCols.length, x))<SUB>24</SUB>>", "187": "<(IDENTIFIER,this,baseN(keyCols.length, x))<SUB>24</SUB>>", "189": "<(IDENTIFIER,keyCols,baseN(keyCols.length, x))<SUB>24</SUB>>", "191": "<(IDENTIFIER,x,baseN(keyCols.length, x))<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.assignment,int ansx = 0)<SUB>25</SUB>>", "195": "<(LITERAL,0,int ansx = 0)<SUB>25</SUB>>", "197": "<(LOCAL,int i: int)<SUB>26</SUB>>", "199": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>26</SUB>>", "203": "<(IDENTIFIER,N,i &lt; N)<SUB>26</SUB>>", "205": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "207": "<(LOCAL,int r: int)<SUB>27</SUB>>", "209": "<(IDENTIFIER,r,int r = 0)<SUB>27</SUB>>", "211": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; keyCols.length); j++),for (int j = 0; Some(j &lt; keyCols.length); j++))<SUB>28</SUB>>", "213": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "215": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "217": "<(IDENTIFIER,j,j &lt; keyCols.length)<SUB>28</SUB>>", "219": "<(IDENTIFIER,keyCols,j &lt; keyCols.length)<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "225": "<(IDENTIFIER,r,r = Math.max(r, grid[(i + base[j]) % N][keyCols[j]]))<SUB>29</SUB>>", "227": "<(IDENTIFIER,Math,Math.max(r, grid[(i + base[j]) % N][keyCols[j]]))<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,grid[(i + base[j]) % N][keyCols[j]])<SUB>29</SUB>>", "231": "<(IDENTIFIER,grid,Math.max(r, grid[(i + base[j]) % N][keyCols[j]]))<SUB>29</SUB>>", "233": "<(&lt;operator&gt;.addition,i + base[j])<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,base[j])<SUB>29</SUB>>", "237": "<(IDENTIFIER,j,i + base[j])<SUB>29</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,keyCols[j])<SUB>29</SUB>>", "241": "<(IDENTIFIER,j,Math.max(r, grid[(i + base[j]) % N][keyCols[j]]))<SUB>29</SUB>>", "243": "<(IDENTIFIER,ansx,ansx += r)<SUB>31</SUB>>", "245": "<(&lt;operator&gt;.assignment,ans = Math.max(ans, ansx))<SUB>33</SUB>>", "247": "<(max,Math.max(ans, ansx))<SUB>33</SUB>>", "249": "<(IDENTIFIER,ans,Math.max(ans, ansx))<SUB>33</SUB>>", "251": "<(println,System.out.println(ans))<SUB>35</SUB>>", "253": "<(IDENTIFIER,System,System.out.println(ans))<SUB>35</SUB>>", "255": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>35</SUB>>", "257": "<(MODIFIER,STATIC)>"}}