{"edges": [["19", "20"], ["19", "21"], ["19", "164"], ["19", "165"], ["19", "166"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "51"], ["21", "52"], ["21", "56"], ["21", "67"], ["21", "158"], ["21", "163"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "50"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["67", "68"], ["67", "71"], ["67", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "81"], ["77", "87"], ["78", "79"], ["78", "80"], ["81", "82"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["88", "89"], ["89", "90"], ["89", "93"], ["89", "97"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "104"], ["98", "109"], ["98", "153"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "124"], ["115", "125"], ["115", "140"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "139"], ["128", "129"], ["128", "138"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "144"], ["140", "148"], ["141", "142"], ["141", "143"], ["144", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["149", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "46"], ["40", "54"], ["52", "57"], ["158", "163"], ["163", "166"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["54", "52"], ["57", "64"], ["57", "68"], ["68", "74"], ["68", "78"], ["159", "158"], ["28", "26"], ["43", "42"], ["61", "66"], ["66", "166"], ["72", "161"], ["161", "159"], ["44", "43"], ["62", "61"], ["74", "72"], ["78", "84"], ["78", "90"], ["46", "44"], ["64", "62"], ["82", "161"], ["84", "82"], ["90", "94"], ["90", "100"], ["94", "161"], ["100", "106"], ["104", "112"], ["153", "161"], ["106", "104"], ["110", "120"], ["110", "155"], ["155", "153"], ["112", "110"], ["117", "132"], ["125", "141"], ["119", "117"], ["127", "125"], ["141", "145"], ["141", "150"], ["120", "119"], ["128", "127"], ["145", "112"], ["129", "128"], ["150", "112"], ["130", "135"], ["135", "129"], ["132", "130"], ["19", "24"], ["163", "166"], ["66", "166"], ["20", "166"], ["22", "166"], ["25", "166"], ["25", "166"], ["30", "166"], ["37", "166"], ["35", "166"], ["35", "166"], ["40", "166"], ["44", "166"], ["44", "166"], ["43", "166"], ["42", "166"], ["40", "166"], ["40", "166"], ["52", "166"], ["52", "166"], ["52", "166"], ["57", "166"], ["57", "166"], ["61", "166"], ["61", "166"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["43", "40"], ["43", "40"], ["19", "40"], ["54", "52"], ["19", "163"], ["22", "25"], ["19", "25"], ["153", "158"], ["94", "158"], ["82", "158"], ["72", "158"], ["19", "158"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["43", "42"], ["43", "42"], ["19", "42"], ["19", "54"], ["30", "57"], ["19", "57"], ["19", "66"], ["40", "68"], ["19", "68"], ["57", "68"], ["74", "72"], ["44", "43"], ["44", "43"], ["19", "43"], ["19", "61"], ["46", "44"], ["19", "44"], ["46", "44"], ["19", "74"], ["68", "78"], ["19", "78"], ["68", "78"], ["84", "82"], ["84", "82"], ["35", "46"], ["19", "46"], ["44", "84"], ["19", "84"], ["44", "90"], ["19", "90"], ["78", "90"], ["19", "94"], ["19", "100"], ["106", "104"], ["106", "104"], ["155", "153"], ["155", "153"], ["90", "106"], ["19", "106"], ["104", "110"], ["150", "110"], ["19", "110"], ["100", "110"], ["145", "110"], ["119", "117"], ["119", "117"], ["128", "125"], ["128", "125"], ["19", "125"], ["106", "155"], ["135", "155"], ["19", "155"], ["100", "155"], ["145", "155"], ["100", "112"], ["145", "112"], ["19", "112"], ["19", "119"], ["110", "119"], ["128", "127"], ["128", "127"], ["19", "127"], ["125", "141"], ["19", "141"], ["90", "141"], ["135", "145"], ["19", "145"], ["19", "120"], ["110", "120"], ["129", "128"], ["129", "128"], ["19", "128"], ["135", "150"], ["19", "150"], ["117", "129"], ["19", "129"], ["132", "129"], ["132", "129"], ["135", "129"], ["135", "129"], ["117", "130"], ["19", "130"], ["132", "130"], ["132", "130"], ["132", "135"], ["19", "135"], ["117", "135"], ["106", "132"], ["135", "132"], ["19", "132"], ["57", "68"], ["57", "64"], ["57", "66"], ["57", "161"], ["57", "163"], ["57", "159"], ["57", "61"], ["57", "158"], ["57", "62"], ["68", "72"], ["68", "74"], ["68", "78"], ["78", "84"], ["78", "82"], ["78", "90"], ["90", "94"], ["90", "104"], ["90", "153"], ["90", "106"], ["90", "112"], ["90", "100"], ["90", "110"], ["90", "155"], ["110", "141"], ["110", "120"], ["110", "128"], ["110", "132"], ["110", "119"], ["110", "112"], ["110", "129"], ["110", "130"], ["110", "135"], ["110", "110"], ["110", "117"], ["110", "127"], ["110", "125"], ["141", "145"], ["141", "150"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(LOCAL,long max: long)<SUB>5</SUB>>", "41": "<(IDENTIFIER,max,long max = ((k * (k - 1)) / 2L) + 1L)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.division,(k * (k - 1)) / 2L)<SUB>5</SUB>>", "45": "<(IDENTIFIER,k,k * (k - 1))<SUB>5</SUB>>", "47": "<(IDENTIFIER,k,k - 1)<SUB>5</SUB>>", "49": "<(LITERAL,2L,(k * (k - 1)) / 2L)<SUB>5</SUB>>", "51": "<(LOCAL,long ans: long)<SUB>6</SUB>>", "53": "<(IDENTIFIER,ans,long ans = -1)<SUB>6</SUB>>", "55": "<(LITERAL,1,-1)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.equals,n == 1)<SUB>7</SUB>>", "59": "<(LITERAL,1,n == 1)<SUB>7</SUB>>", "61": "<(println,System.out.println(0))<SUB>8</SUB>>", "63": "<(IDENTIFIER,System,System.out.println(0))<SUB>8</SUB>>", "65": "<(LITERAL,0,System.out.println(0))<SUB>8</SUB>>", "67": "<(CONTROL_STRUCTURE,if (max &lt; n),if (max &lt; n))<SUB>11</SUB>>", "69": "<(IDENTIFIER,max,max &lt; n)<SUB>11</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "73": "<(IDENTIFIER,ans,ans = -1)<SUB>12</SUB>>", "75": "<(LITERAL,1,-1)<SUB>12</SUB>>", "77": "<(CONTROL_STRUCTURE,if (max == n),if (max == n))<SUB>13</SUB>>", "79": "<(IDENTIFIER,max,max == n)<SUB>13</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "83": "<(IDENTIFIER,ans,ans = k - 1)<SUB>14</SUB>>", "85": "<(IDENTIFIER,k,k - 1)<SUB>14</SUB>>", "87": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "89": "<(CONTROL_STRUCTURE,if (k &gt;= n),if (k &gt;= n))<SUB>16</SUB>>", "91": "<(IDENTIFIER,k,k &gt;= n)<SUB>16</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "95": "<(IDENTIFIER,ans,ans = 1)<SUB>17</SUB>>", "97": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "99": "<(LOCAL,long low: long)<SUB>19</SUB>>", "101": "<(IDENTIFIER,low,long low = 1)<SUB>19</SUB>>", "103": "<(LOCAL,long high: long)<SUB>20</SUB>>", "105": "<(IDENTIFIER,high,long high = k - 1)<SUB>20</SUB>>", "107": "<(IDENTIFIER,k,k - 1)<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,while (high &gt; low + 1),while (high &gt; low + 1))<SUB>21</SUB>>", "111": "<(IDENTIFIER,high,high &gt; low + 1)<SUB>21</SUB>>", "113": "<(IDENTIFIER,low,low + 1)<SUB>21</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.assignment,long mid = (low + high) / 2)<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.division,(low + high) / 2)<SUB>22</SUB>>", "121": "<(IDENTIFIER,low,low + high)<SUB>22</SUB>>", "123": "<(LITERAL,2,(low + high) / 2)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.assignment,long sum = (((mid + (k - 1)) * (k - mid)) / 2) + 1)<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.addition,(((mid + (k - 1)) * (k - mid)) / 2) + 1)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.multiplication,(mid + (k - 1)) * (k - mid))<SUB>23</SUB>>", "131": "<(IDENTIFIER,mid,mid + (k - 1))<SUB>23</SUB>>", "133": "<(IDENTIFIER,k,k - 1)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.subtraction,k - mid)<SUB>23</SUB>>", "137": "<(IDENTIFIER,mid,k - mid)<SUB>23</SUB>>", "139": "<(LITERAL,1,(((mid + (k - 1)) * (k - mid)) / 2) + 1)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.greaterEqualsThan,sum &gt;= n)<SUB>24</SUB>>", "143": "<(IDENTIFIER,n,sum &gt;= n)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.assignment,low = mid)<SUB>25</SUB>>", "147": "<(IDENTIFIER,mid,low = mid)<SUB>25</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "151": "<(IDENTIFIER,high,high = mid)<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.assignment,ans = k - low)<SUB>30</SUB>>", "155": "<(&lt;operator&gt;.subtraction,k - low)<SUB>30</SUB>>", "157": "<(IDENTIFIER,low,k - low)<SUB>30</SUB>>", "159": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "161": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "163": "<(RETURN,return;,return;)<SUB>34</SUB>>", "165": "<(MODIFIER,STATIC)>"}}