{"edges": [["19", "21"], ["19", "101"], ["19", "102"], ["19", "103"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "50"], ["21", "55"], ["21", "56"], ["21", "66"], ["21", "73"], ["21", "74"], ["21", "86"], ["21", "87"], ["21", "96"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "65"], ["59", "60"], ["59", "61"], ["59", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "85"], ["77", "78"], ["77", "84"], ["78", "79"], ["78", "83"], ["79", "80"], ["79", "81"], ["79", "82"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["50", "62"], ["56", "69"], ["66", "79"], ["74", "91"], ["87", "99"], ["96", "103"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "47"], ["40", "52"], ["52", "50"], ["58", "56"], ["68", "66"], ["76", "74"], ["89", "87"], ["97", "96"], ["28", "26"], ["44", "49"], ["49", "103"], ["59", "58"], ["69", "68"], ["77", "76"], ["90", "89"], ["99", "97"], ["45", "44"], ["62", "59"], ["78", "77"], ["91", "90"], ["47", "45"], ["79", "78"], ["19", "24"], ["49", "103"], ["20", "103"], ["22", "103"], ["25", "103"], ["25", "103"], ["30", "103"], ["35", "103"], ["37", "103"], ["35", "103"], ["35", "103"], ["40", "103"], ["40", "103"], ["44", "103"], ["44", "103"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["52", "50"], ["52", "50"], ["58", "56"], ["58", "56"], ["68", "66"], ["68", "66"], ["76", "74"], ["76", "74"], ["89", "87"], ["89", "87"], ["22", "25"], ["19", "25"], ["87", "96"], ["19", "96"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "40"], ["19", "40"], ["19", "49"], ["40", "52"], ["19", "52"], ["59", "58"], ["59", "58"], ["59", "58"], ["52", "58"], ["19", "58"], ["69", "68"], ["69", "68"], ["58", "68"], ["19", "68"], ["78", "76"], ["78", "76"], ["68", "76"], ["19", "76"], ["91", "89"], ["91", "89"], ["76", "89"], ["19", "89"], ["19", "44"], ["19", "59"], ["35", "59"], ["56", "69"], ["19", "69"], ["50", "69"], ["78", "77"], ["78", "77"], ["68", "77"], ["19", "77"], ["91", "90"], ["91", "90"], ["76", "90"], ["19", "90"], ["35", "62"], ["19", "62"], ["79", "78"], ["79", "78"], ["79", "78"], ["19", "78"], ["66", "91"], ["19", "91"], ["74", "91"], ["59", "79"], ["19", "79"], ["35", "79"], ["40", "47"], ["40", "68"], ["40", "49"], ["40", "96"], ["40", "77"], ["40", "89"], ["40", "66"], ["40", "52"], ["40", "99"], ["40", "56"], ["40", "69"], ["40", "74"], ["40", "45"], ["40", "76"], ["40", "50"], ["40", "59"], ["40", "87"], ["40", "97"], ["40", "91"], ["40", "44"], ["40", "90"], ["40", "79"], ["40", "58"], ["40", "78"], ["40", "62"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long x: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,x,long x = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>5</SUB>>", "41": "<(IDENTIFIER,x,x == 0)<SUB>5</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "49": "<(RETURN,return;,return;)<SUB>8</SUB>>", "51": "<(IDENTIFIER,x,x = x % mod)<SUB>10</SUB>>", "53": "<(IDENTIFIER,x,x % mod)<SUB>10</SUB>>", "55": "<(LOCAL,long power: long)<SUB>11</SUB>>", "57": "<(IDENTIFIER,power,long power = pow(2, k + 1) % mod)<SUB>11</SUB>>", "59": "<(pow,pow(2, k + 1))<SUB>11</SUB>>", "61": "<(LITERAL,2,pow(2, k + 1))<SUB>11</SUB>>", "63": "<(IDENTIFIER,k,k + 1)<SUB>11</SUB>>", "65": "<(IDENTIFIER,mod,pow(2, k + 1) % mod)<SUB>11</SUB>>", "67": "<(IDENTIFIER,power,power = (power * x) % mod)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.multiplication,power * x)<SUB>12</SUB>>", "71": "<(IDENTIFIER,x,power * x)<SUB>12</SUB>>", "73": "<(LOCAL,long num: long)<SUB>13</SUB>>", "75": "<(IDENTIFIER,num,long num = (pow(2, k) - 1 + mod) % mod)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.addition,pow(2, k) - 1 + mod)<SUB>13</SUB>>", "79": "<(pow,pow(2, k))<SUB>13</SUB>>", "81": "<(LITERAL,2,pow(2, k))<SUB>13</SUB>>", "83": "<(LITERAL,1,pow(2, k) - 1)<SUB>13</SUB>>", "85": "<(IDENTIFIER,mod,(pow(2, k) - 1 + mod) % mod)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,long ans = (power - num + mod) % mod)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.modulo,(power - num + mod) % mod)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.subtraction,power - num)<SUB>14</SUB>>", "93": "<(IDENTIFIER,num,power - num)<SUB>14</SUB>>", "95": "<(IDENTIFIER,mod,(power - num + mod) % mod)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "99": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "101": "<(MODIFIER,PUBLIC)>", "103": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}