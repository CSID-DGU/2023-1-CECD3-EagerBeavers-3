{"edges": [["21", "22"], ["21", "23"], ["21", "142"], ["21", "143"], ["21", "144"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "140"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "67"], ["55", "98"], ["55", "129"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["73", "80"], ["73", "81"], ["73", "88"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "111"], ["104", "112"], ["104", "119"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "135"], ["131", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "43"], ["39", "47"], ["140", "144"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["47", "50"], ["50", "61"], ["50", "140"], ["53", "50"], ["30", "28"], ["37", "35"], ["43", "41"], ["57", "64"], ["64", "69"], ["59", "57"], ["68", "77"], ["68", "100"], ["99", "130"], ["99", "108"], ["130", "132"], ["130", "137"], ["61", "59"], ["69", "68"], ["75", "84"], ["81", "90"], ["100", "99"], ["106", "115"], ["112", "121"], ["132", "53"], ["77", "75"], ["83", "81"], ["89", "95"], ["89", "100"], ["108", "106"], ["114", "112"], ["120", "130"], ["120", "126"], ["137", "53"], ["84", "85"], ["85", "83"], ["90", "89"], ["95", "100"], ["115", "116"], ["116", "114"], ["121", "120"], ["126", "130"], ["21", "26"], ["22", "144"], ["24", "144"], ["27", "144"], ["27", "144"], ["31", "144"], ["34", "144"], ["34", "144"], ["41", "144"], ["43", "144"], ["41", "144"], ["39", "144"], ["39", "144"], ["47", "144"], ["50", "144"], ["50", "144"], ["50", "144"], ["140", "144"], ["140", "144"], ["59", "144"], ["61", "144"], ["59", "144"], ["57", "144"], ["57", "144"], ["64", "144"], ["64", "144"], ["68", "144"], ["68", "144"], ["75", "144"], ["75", "144"], ["85", "144"], ["83", "144"], ["81", "144"], ["81", "144"], ["90", "144"], ["89", "144"], ["89", "144"], ["89", "144"], ["95", "144"], ["95", "144"], ["100", "144"], ["99", "144"], ["99", "144"], ["108", "144"], ["106", "144"], ["106", "144"], ["116", "144"], ["114", "144"], ["112", "144"], ["112", "144"], ["121", "144"], ["120", "144"], ["120", "144"], ["120", "144"], ["126", "144"], ["126", "144"], ["137", "144"], ["132", "144"], ["53", "144"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["41", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "47"], ["34", "140"], ["137", "140"], ["132", "140"], ["21", "140"], ["21", "41"], ["43", "41"], ["47", "50"], ["53", "50"], ["21", "50"], ["39", "50"], ["50", "53"], ["21", "53"], ["59", "57"], ["59", "57"], ["21", "64"], ["27", "43"], ["21", "43"], ["21", "130"], ["41", "59"], ["21", "59"], ["61", "59"], ["69", "68"], ["69", "68"], ["21", "68"], ["77", "75"], ["77", "75"], ["21", "81"], ["85", "81"], ["85", "81"], ["100", "99"], ["100", "99"], ["21", "99"], ["108", "106"], ["108", "106"], ["21", "112"], ["116", "112"], ["116", "112"], ["43", "61"], ["21", "61"], ["57", "69"], ["21", "69"], ["69", "100"], ["77", "100"], ["21", "100"], ["34", "132"], ["137", "132"], ["21", "132"], ["69", "77"], ["21", "77"], ["21", "83"], ["85", "83"], ["85", "83"], ["90", "89"], ["85", "89"], ["21", "89"], ["21", "95"], ["100", "108"], ["21", "108"], ["21", "114"], ["116", "114"], ["116", "114"], ["121", "120"], ["116", "120"], ["21", "120"], ["21", "126"], ["34", "137"], ["132", "137"], ["21", "137"], ["116", "85"], ["21", "85"], ["75", "85"], ["81", "90"], ["21", "90"], ["85", "116"], ["21", "116"], ["106", "116"], ["112", "121"], ["21", "121"], ["50", "68"], ["50", "64"], ["50", "57"], ["50", "99"], ["50", "69"], ["50", "50"], ["50", "59"], ["50", "61"], ["50", "130"], ["50", "100"], ["50", "53"], ["68", "77"], ["68", "89"], ["68", "75"], ["68", "81"], ["68", "84"], ["68", "85"], ["68", "90"], ["68", "83"], ["99", "115"], ["99", "120"], ["99", "116"], ["99", "114"], ["99", "121"], ["99", "106"], ["99", "112"], ["99", "108"], ["130", "132"], ["130", "137"], ["89", "95"], ["120", "126"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,var pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int T = parseInt(sc.next()))<SUB>6</SUB>>", "41": "<(parseInt,parseInt(sc.next()))<SUB>6</SUB>>", "43": "<(next,next())<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int t = 0; Some(t &lt; T); t++),for (int t = 0; Some(t &lt; T); t++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int t = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,t,t &lt; T)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,t++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int n = parseInt(sc.next()))<SUB>8</SUB>>", "59": "<(parseInt,parseInt(sc.next()))<SUB>8</SUB>>", "61": "<(next,next())<SUB>8</SUB>>", "63": "<(LOCAL,boolean ok: boolean)<SUB>9</SUB>>", "65": "<(IDENTIFIER,ok,boolean ok = false)<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.modulo,n % 2)<SUB>10</SUB>>", "71": "<(LITERAL,2,n % 2)<SUB>10</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,int a = n / 2)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.division,n / 2)<SUB>11</SUB>>", "79": "<(LITERAL,2,n / 2)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int b = (int) Math.sqrt(a))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.cast,(int) Math.sqrt(a))<SUB>12</SUB>>", "85": "<(sqrt,Math.sqrt(a))<SUB>12</SUB>>", "87": "<(IDENTIFIER,a,Math.sqrt(a))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.equals,b * b == a)<SUB>13</SUB>>", "91": "<(IDENTIFIER,b,b * b)<SUB>13</SUB>>", "93": "<(IDENTIFIER,a,b * b == a)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,ok = true)<SUB>14</SUB>>", "97": "<(LITERAL,true,ok = true)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.equals,n % 4 == 0)<SUB>17</SUB>>", "101": "<(IDENTIFIER,n,n % 4)<SUB>17</SUB>>", "103": "<(LITERAL,0,n % 4 == 0)<SUB>17</SUB>>", "105": "<(LOCAL,int a: int)<SUB>18</SUB>>", "107": "<(IDENTIFIER,a,int a = n / 4)<SUB>18</SUB>>", "109": "<(IDENTIFIER,n,n / 4)<SUB>18</SUB>>", "111": "<(LOCAL,int b: int)<SUB>19</SUB>>", "113": "<(IDENTIFIER,b,int b = (int) Math.sqrt(a))<SUB>19</SUB>>", "115": "<(TYPE_REF,int,int)<SUB>19</SUB>>", "117": "<(IDENTIFIER,Math,Math.sqrt(a))<SUB>19</SUB>>", "119": "<(CONTROL_STRUCTURE,if (b * b == a),if (b * b == a))<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.multiplication,b * b)<SUB>20</SUB>>", "123": "<(IDENTIFIER,b,b * b)<SUB>20</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "127": "<(IDENTIFIER,ok,ok = true)<SUB>21</SUB>>", "129": "<(CONTROL_STRUCTURE,if (ok),if (ok))<SUB>24</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "133": "<(IDENTIFIER,pw,println(&quot;YES&quot;))<SUB>25</SUB>>", "135": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "137": "<(println,println(&quot;NO&quot;))<SUB>27</SUB>>", "139": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>27</SUB>>", "141": "<(IDENTIFIER,pw,flush())<SUB>30</SUB>>", "143": "<(MODIFIER,STATIC)>"}}