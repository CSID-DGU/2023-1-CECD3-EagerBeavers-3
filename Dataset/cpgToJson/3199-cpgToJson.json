{"edges": [["21", "23"], ["21", "115"], ["21", "116"], ["21", "117"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "59"], ["23", "60"], ["23", "64"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "50"], ["32", "33"], ["33", "34"], ["33", "37"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "49"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["50", "51"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "6"], ["55", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "69"], ["64", "75"], ["65", "66"], ["65", "67"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["76", "77"], ["76", "78"], ["76", "83"], ["76", "84"], ["76", "90"], ["76", "91"], ["76", "96"], ["76", "97"], ["76", "107"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "114"], ["24", "30"], ["27", "34"], ["60", "67"], ["26", "24"], ["28", "27"], ["62", "60"], ["65", "73"], ["65", "80"], ["30", "28"], ["67", "65"], ["70", "117"], ["34", "54"], ["34", "40"], ["34", "62"], ["52", "58"], ["55", "62"], ["71", "70"], ["78", "87"], ["84", "93"], ["91", "102"], ["97", "110"], ["107", "117"], ["38", "45"], ["41", "54"], ["41", "62"], ["54", "52"], ["56", "55"], ["73", "71"], ["80", "78"], ["86", "84"], ["93", "91"], ["99", "97"], ["108", "111"], ["111", "107"], ["40", "38"], ["58", "56"], ["87", "86"], ["100", "99"], ["110", "108"], ["43", "46"], ["46", "41"], ["101", "100"], ["45", "43"], ["102", "101"], ["21", "26"], ["22", "117"], ["24", "117"], ["27", "117"], ["27", "117"], ["34", "117"], ["38", "117"], ["43", "117"], ["46", "117"], ["46", "117"], ["41", "117"], ["52", "117"], ["55", "117"], ["55", "117"], ["62", "117"], ["60", "117"], ["60", "117"], ["65", "117"], ["65", "117"], ["70", "117"], ["70", "117"], ["70", "117"], ["34", "117"], ["21", "22"], ["21", "24"], ["62", "60"], ["24", "27"], ["21", "27"], ["21", "51"], ["27", "62"], ["41", "62"], ["55", "62"], ["21", "62"], ["60", "65"], ["21", "65"], ["67", "65"], ["21", "52"], ["21", "67"], ["65", "70"], ["21", "70"], ["80", "78"], ["80", "78"], ["86", "84"], ["93", "91"], ["93", "91"], ["99", "97"], ["21", "34"], ["21", "38"], ["52", "55"], ["21", "55"], ["27", "55"], ["111", "107"], ["111", "107"], ["111", "107"], ["38", "41"], ["21", "41"], ["43", "41"], ["46", "41"], ["21", "80"], ["65", "80"], ["87", "86"], ["87", "86"], ["87", "93"], ["21", "93"], ["101", "99"], ["101", "99"], ["91", "99"], ["21", "99"], ["80", "111"], ["21", "111"], ["84", "111"], ["97", "111"], ["21", "43"], ["21", "49"], ["78", "87"], ["21", "87"], ["101", "100"], ["101", "100"], ["91", "100"], ["21", "100"], ["43", "46"], ["21", "46"], ["102", "101"], ["102", "101"], ["21", "101"], ["93", "102"], ["21", "102"], ["65", "107"], ["65", "73"], ["65", "99"], ["65", "84"], ["65", "102"], ["65", "87"], ["65", "97"], ["65", "91"], ["65", "93"], ["65", "101"], ["65", "80"], ["65", "71"], ["65", "100"], ["65", "70"], ["65", "110"], ["65", "108"], ["65", "78"], ["65", "111"], ["65", "86"], ["34", "52"], ["34", "46"], ["34", "38"], ["34", "56"], ["34", "45"], ["34", "40"], ["34", "54"], ["34", "43"], ["34", "58"], ["34", "41"], ["34", "55"], ["41", "52"], ["41", "56"], ["41", "54"], ["41", "58"], ["41", "55"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(CONTROL_STRUCTURE,try,try)<SUB>3</SUB>>", "33": "<(CONTROL_STRUCTURE,if (LOCAL_ENV == 1),if (LOCAL_ENV == 1))<SUB>4</SUB>>", "35": "<(IDENTIFIER,LOCAL_ENV,LOCAL_ENV == 1)<SUB>4</SUB>>", "37": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "39": "<(IDENTIFIER,in,in = new Scanner(new File(&quot;input.txt&quot;)))<SUB>5</SUB>>", "41": "<(&lt;init&gt;,new Scanner(new File(&quot;input.txt&quot;)))<SUB>5</SUB>>", "42": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "44": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "46": "<(&lt;init&gt;,new File(&quot;input.txt&quot;))<SUB>5</SUB>>", "48": "<(LITERAL,&quot;input.txt&quot;,new File(&quot;input.txt&quot;))<SUB>5</SUB>>", "50": "<(BLOCK,catch,catch)>", "52": "<(&lt;operator&gt;.assignment,in = new Scanner(System.in))<SUB>8</SUB>>", "54": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>8</SUB>>", "6": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>8</SUB>>", "57": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>8</SUB>>", "59": "<(LOCAL,long n: long)<SUB>11</SUB>>", "61": "<(IDENTIFIER,n,long n = nextLong())<SUB>11</SUB>>", "63": "<(IDENTIFIER,in,nextLong())<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.greaterEqualsThan,n &gt;= -9)<SUB>13</SUB>>", "67": "<(&lt;operator&gt;.minus,-9)<SUB>13</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>14</SUB>>", "73": "<(FIELD_IDENTIFIER,out,out)<SUB>14</SUB>>", "75": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "77": "<(LOCAL,long absN: long)<SUB>16</SUB>>", "79": "<(IDENTIFIER,absN,long absN = Math.abs(n))<SUB>16</SUB>>", "81": "<(IDENTIFIER,Math,Math.abs(n))<SUB>16</SUB>>", "83": "<(LOCAL,long m1: long)<SUB>17</SUB>>", "85": "<(IDENTIFIER,m1,long m1 = -(absN / 10))<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.division,absN / 10)<SUB>17</SUB>>", "89": "<(LITERAL,10,absN / 10)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.assignment,long last = absN % 10)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.modulo,absN % 10)<SUB>18</SUB>>", "95": "<(LITERAL,10,absN % 10)<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.assignment,long m2 = -((absN / 100) * 10 + last))<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.minus,-((absN / 100) * 10 + last))<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.multiplication,(absN / 100) * 10)<SUB>19</SUB>>", "103": "<(IDENTIFIER,absN,absN / 100)<SUB>19</SUB>>", "105": "<(LITERAL,10,(absN / 100) * 10)<SUB>19</SUB>>", "107": "<(println,System.out.println(Math.max(m1, m2)))<SUB>20</SUB>>", "109": "<(IDENTIFIER,System,System.out.println(Math.max(m1, m2)))<SUB>20</SUB>>", "111": "<(max,Math.max(m1, m2))<SUB>20</SUB>>", "113": "<(IDENTIFIER,m1,Math.max(m1, m2))<SUB>20</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}