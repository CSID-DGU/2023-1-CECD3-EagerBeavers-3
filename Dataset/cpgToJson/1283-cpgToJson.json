{"edges": [["19", "20"], ["19", "21"], ["19", "124"], ["19", "125"], ["19", "126"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "51"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "48"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["51", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["61", "62"], ["61", "65"], ["61", "75"], ["62", "63"], ["62", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["76", "77"], ["76", "80"], ["76", "86"], ["76", "87"], ["76", "104"], ["76", "105"], ["76", "115"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["82", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "103"], ["90", "91"], ["90", "98"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "114"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["110", "113"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "45"], ["40", "52"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["52", "58"], ["52", "62"], ["55", "126"], ["28", "26"], ["43", "48"], ["48", "42"], ["56", "55"], ["45", "43"], ["58", "56"], ["62", "69"], ["62", "77"], ["66", "126"], ["67", "71"], ["70", "66"], ["77", "82"], ["80", "94"], ["87", "110"], ["105", "118"], ["115", "126"], ["69", "67"], ["71", "70"], ["82", "80"], ["89", "87"], ["107", "105"], ["116", "120"], ["119", "115"], ["90", "89"], ["108", "107"], ["118", "116"], ["120", "119"], ["91", "99"], ["98", "90"], ["110", "108"], ["93", "91"], ["99", "98"], ["94", "93"], ["19", "24"], ["20", "126"], ["22", "126"], ["25", "126"], ["25", "126"], ["30", "126"], ["35", "126"], ["37", "126"], ["35", "126"], ["35", "126"], ["40", "126"], ["45", "126"], ["43", "126"], ["42", "126"], ["42", "126"], ["40", "126"], ["40", "126"], ["52", "126"], ["52", "126"], ["55", "126"], ["55", "126"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["43", "42"], ["43", "42"], ["48", "42"], ["48", "42"], ["30", "52"], ["19", "52"], ["19", "55"], ["19", "43"], ["45", "43"], ["45", "43"], ["19", "48"], ["19", "45"], ["35", "62"], ["19", "62"], ["70", "66"], ["70", "66"], ["45", "77"], ["19", "77"], ["82", "80"], ["82", "80"], ["82", "80"], ["89", "87"], ["89", "87"], ["107", "105"], ["107", "105"], ["71", "70"], ["71", "70"], ["45", "70"], ["19", "70"], ["52", "77"], ["119", "115"], ["119", "115"], ["52", "71"], ["19", "71"], ["19", "82"], ["62", "82"], ["40", "82"], ["91", "89"], ["91", "89"], ["19", "89"], ["45", "89"], ["108", "107"], ["108", "107"], ["89", "107"], ["19", "107"], ["87", "119"], ["19", "119"], ["105", "119"], ["107", "119"], ["91", "90"], ["91", "90"], ["91", "108"], ["19", "108"], ["110", "108"], ["110", "108"], ["110", "108"], ["87", "120"], ["19", "120"], ["105", "120"], ["77", "91"], ["19", "91"], ["82", "110"], ["19", "110"], ["82", "110"], ["52", "56"], ["52", "58"], ["52", "55"], ["52", "62"], ["62", "107"], ["62", "94"], ["62", "115"], ["62", "77"], ["62", "89"], ["62", "66"], ["62", "98"], ["62", "120"], ["62", "116"], ["62", "99"], ["62", "69"], ["62", "67"], ["62", "119"], ["62", "87"], ["62", "91"], ["62", "82"], ["62", "93"], ["62", "90"], ["62", "80"], ["62", "71"], ["62", "105"], ["62", "118"], ["62", "70"], ["62", "110"], ["62", "108"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new FastScanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new FastScanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long x: long)<SUB>4</SUB>>", "31": "<(IDENTIFIER,x,long x = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,input,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(LOCAL,long[][] matrix: long[][])<SUB>7</SUB>>", "41": "<(IDENTIFIER,matrix,long[][] matrix = { { 2, MOD - 1 }, { 0, 1 } })<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.arrayInitializer,{ 2, MOD - 1 })<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.subtraction,MOD - 1)<SUB>8</SUB>>", "47": "<(LITERAL,1,MOD - 1)<SUB>8</SUB>>", "49": "<(LITERAL,0,{ 0, 1 })<SUB>9</SUB>>", "51": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>12</SUB>>", "53": "<(IDENTIFIER,x,x == 0)<SUB>12</SUB>>", "55": "<(println,System.out.println(0))<SUB>13</SUB>>", "57": "<(IDENTIFIER,System,System.out.println(0))<SUB>13</SUB>>", "59": "<(LITERAL,0,System.out.println(0))<SUB>13</SUB>>", "61": "<(CONTROL_STRUCTURE,if (k == 0),if (k == 0))<SUB>14</SUB>>", "63": "<(IDENTIFIER,k,k == 0)<SUB>14</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "69": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "71": "<(&lt;operator&gt;.multiplication,x * 2)<SUB>15</SUB>>", "73": "<(LITERAL,2,x * 2)<SUB>15</SUB>>", "75": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "77": "<(&lt;operators&gt;.assignmentModulo,x %= MOD)<SUB>17</SUB>>", "79": "<(IDENTIFIER,MOD,x %= MOD)<SUB>17</SUB>>", "81": "<(IDENTIFIER,matrix,matrix = matrixexpo(k, matrix))<SUB>18</SUB>>", "83": "<(IDENTIFIER,this,matrixexpo(k, matrix))<SUB>18</SUB>>", "85": "<(IDENTIFIER,matrix,matrixexpo(k, matrix))<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.assignment,long low = (x * matrix[0][0] + matrix[0][1]) % MOD)<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.modulo,(x * matrix[0][0] + matrix[0][1]) % MOD)<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.multiplication,x * matrix[0][0])<SUB>19</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,matrix[0][0])<SUB>19</SUB>>", "95": "<(IDENTIFIER,matrix,x * matrix[0][0])<SUB>19</SUB>>", "97": "<(LITERAL,0,x * matrix[0][0])<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,matrix[0])<SUB>19</SUB>>", "101": "<(LITERAL,0,x * matrix[0][0] + matrix[0][1])<SUB>19</SUB>>", "103": "<(IDENTIFIER,MOD,(x * matrix[0][0] + matrix[0][1]) % MOD)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.assignment,long hi = x * mathpow(k, 2) % MOD)<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.modulo,x * mathpow(k, 2) % MOD)<SUB>20</SUB>>", "109": "<(IDENTIFIER,x,x * mathpow(k, 2))<SUB>20</SUB>>", "111": "<(IDENTIFIER,this,mathpow(k, 2))<SUB>20</SUB>>", "113": "<(LITERAL,2,mathpow(k, 2))<SUB>20</SUB>>", "115": "<(println,println((low + hi) % MOD))<SUB>21</SUB>>", "117": "<(IDENTIFIER,System,println((low + hi) % MOD))<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.modulo,(low + hi) % MOD)<SUB>21</SUB>>", "121": "<(IDENTIFIER,low,low + hi)<SUB>21</SUB>>", "123": "<(IDENTIFIER,MOD,(low + hi) % MOD)<SUB>21</SUB>>", "125": "<(MODIFIER,STATIC)>"}}