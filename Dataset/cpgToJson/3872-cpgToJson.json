{"edges": [["23", "25"], ["23", "213"], ["23", "214"], ["23", "215"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "54"], ["25", "55"], ["25", "61"], ["25", "211"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "66"], ["62", "63"], ["62", "65"], ["63", "64"], ["66", "67"], ["66", "68"], ["66", "74"], ["66", "75"], ["66", "79"], ["66", "98"], ["66", "99"], ["66", "103"], ["66", "104"], ["66", "107"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "8"], ["117", "181"], ["117", "184"], ["117", "185"], ["117", "208"], ["118", "119"], ["118", "128"], ["118", "133"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["129", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "140"], ["134", "147"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "143"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "177"], ["155", "156"], ["155", "169"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["177", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "7"], ["185", "186"], ["185", "187"], ["185", "190"], ["185", "193"], ["185", "195"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["26", "33"], ["29", "42"], ["40", "47"], ["43", "59"], ["55", "63"], ["211", "215"], ["28", "26"], ["42", "40"], ["57", "55"], ["62", "72"], ["62", "211"], ["31", "38"], ["34", "29"], ["45", "52"], ["48", "43"], ["59", "57"], ["63", "62"], ["68", "77"], ["75", "81"], ["99", "104"], ["104", "109"], ["33", "31"], ["36", "34"], ["47", "45"], ["50", "48"], ["70", "68"], ["77", "75"], ["81", "84"], ["84", "91"], ["84", "101"], ["87", "84"], ["101", "99"], ["109", "112"], ["112", "63"], ["112", "120"], ["115", "112"], ["38", "36"], ["52", "50"], ["72", "70"], ["90", "87"], ["181", "184"], ["184", "187"], ["208", "115"], ["91", "96"], ["94", "90"], ["119", "130"], ["119", "136"], ["183", "181"], ["187", "190"], ["190", "198"], ["190", "208"], ["193", "190"], ["96", "94"], ["120", "124"], ["123", "119"], ["129", "183"], ["196", "202"], ["124", "123"], ["130", "129"], ["135", "141"], ["135", "150"], ["198", "196"], ["202", "205"], ["202", "193"], ["205", "193"], ["136", "135"], ["141", "144"], ["143", "183"], ["144", "143"], ["149", "157"], ["149", "183"], ["150", "149"], ["177", "183"], ["156", "171"], ["156", "178"], ["178", "177"], ["157", "156"], ["157", "161"], ["160", "156"], ["170", "175"], ["175", "157"], ["161", "165"], ["164", "160"], ["171", "170"], ["165", "164"], ["23", "28"], ["24", "215"], ["26", "215"], ["34", "215"], ["34", "215"], ["34", "215"], ["29", "215"], ["40", "215"], ["45", "215"], ["48", "215"], ["48", "215"], ["48", "215"], ["43", "215"], ["57", "215"], ["59", "215"], ["57", "215"], ["55", "215"], ["55", "215"], ["63", "215"], ["62", "215"], ["62", "215"], ["211", "215"], ["211", "215"], ["70", "215"], ["72", "215"], ["70", "215"], ["68", "215"], ["68", "215"], ["75", "215"], ["75", "215"], ["99", "215"], ["99", "215"], ["99", "215"], ["104", "215"], ["104", "215"], ["109", "215"], ["112", "215"], ["112", "215"], ["112", "215"], ["119", "215"], ["123", "215"], ["119", "215"], ["119", "215"], ["135", "215"], ["135", "215"], ["149", "215"], ["149", "215"], ["156", "215"], ["164", "215"], ["160", "215"], ["156", "215"], ["156", "215"], ["177", "215"], ["177", "215"], ["170", "215"], ["175", "215"], ["141", "215"], ["143", "215"], ["143", "215"], ["129", "215"], ["129", "215"], ["181", "215"], ["184", "215"], ["187", "215"], ["190", "215"], ["190", "215"], ["190", "215"], ["208", "215"], ["208", "215"], ["115", "215"], ["196", "215"], ["196", "215"], ["202", "215"], ["205", "215"], ["193", "215"], ["90", "215"], ["94", "215"], ["96", "215"], ["94", "215"], ["90", "215"], ["90", "215"], ["87", "215"], ["23", "24"], ["23", "26"], ["23", "40"], ["57", "55"], ["57", "55"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["45", "43"], ["48", "43"], ["43", "211"], ["208", "211"], ["23", "211"], ["23", "31"], ["23", "39"], ["23", "45"], ["23", "53"], ["23", "57"], ["59", "57"], ["63", "62"], ["23", "62"], ["70", "68"], ["70", "68"], ["77", "75"], ["101", "99"], ["23", "104"], ["31", "34"], ["23", "34"], ["45", "48"], ["23", "48"], ["29", "59"], ["23", "59"], ["55", "63"], ["23", "63"], ["23", "81"], ["23", "109"], ["57", "70"], ["94", "70"], ["23", "70"], ["72", "70"], ["68", "77"], ["23", "77"], ["81", "84"], ["87", "84"], ["23", "84"], ["77", "84"], ["84", "87"], ["23", "87"], ["94", "90"], ["94", "90"], ["84", "101"], ["23", "101"], ["109", "112"], ["115", "112"], ["23", "112"], ["101", "112"], ["112", "115"], ["23", "115"], ["23", "181"], ["59", "72"], ["96", "72"], ["23", "72"], ["181", "184"], ["23", "184"], ["23", "187"], ["43", "208"], ["23", "208"], ["184", "208"], ["196", "208"], ["205", "208"], ["70", "94"], ["23", "94"], ["96", "94"], ["99", "119"], ["177", "119"], ["143", "119"], ["129", "119"], ["123", "119"], ["123", "119"], ["187", "190"], ["193", "190"], ["23", "190"], ["104", "190"], ["157", "190"], ["141", "190"], ["202", "190"], ["202", "193"], ["23", "193"], ["72", "96"], ["23", "96"], ["75", "123"], ["135", "123"], ["149", "123"], ["164", "123"], ["90", "123"], ["23", "123"], ["99", "129"], ["119", "129"], ["184", "196"], ["205", "196"], ["23", "196"], ["99", "196"], ["75", "135"], ["123", "135"], ["23", "135"], ["190", "202"], ["23", "202"], ["190", "202"], ["196", "205"], ["23", "205"], ["104", "141"], ["190", "141"], ["23", "141"], ["99", "143"], ["119", "143"], ["75", "149"], ["135", "149"], ["23", "149"], ["99", "177"], ["119", "177"], ["160", "177"], ["170", "177"], ["157", "156"], ["157", "156"], ["160", "156"], ["160", "156"], ["23", "170"], ["104", "157"], ["175", "157"], ["190", "157"], ["23", "157"], ["99", "160"], ["119", "160"], ["170", "160"], ["164", "160"], ["164", "160"], ["157", "175"], ["23", "175"], ["75", "164"], ["149", "164"], ["23", "164"], ["62", "68"], ["62", "77"], ["62", "75"], ["62", "81"], ["62", "84"], ["62", "104"], ["62", "112"], ["62", "101"], ["62", "70"], ["62", "99"], ["62", "72"], ["62", "63"], ["62", "109"], ["62", "62"], ["84", "94"], ["84", "96"], ["84", "84"], ["84", "87"], ["84", "91"], ["84", "90"], ["112", "115"], ["112", "120"], ["112", "119"], ["112", "112"], ["112", "181"], ["112", "208"], ["112", "187"], ["112", "190"], ["112", "184"], ["112", "183"], ["112", "123"], ["112", "124"], ["119", "136"], ["119", "129"], ["119", "130"], ["119", "135"], ["190", "196"], ["190", "198"], ["190", "190"], ["190", "202"], ["190", "193"], ["135", "149"], ["135", "150"], ["135", "144"], ["135", "141"], ["135", "143"], ["202", "205"], ["149", "178"], ["149", "157"], ["149", "177"], ["149", "156"], ["156", "170"], ["156", "171"], ["156", "157"], ["156", "175"], ["156", "156"], ["157", "161"], ["157", "164"], ["157", "160"], ["157", "165"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "49": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "51": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "55": "<(&lt;operator&gt;.assignment,int t = parseInt(f.readLine()))<SUB>4</SUB>>", "57": "<(parseInt,parseInt(f.readLine()))<SUB>4</SUB>>", "59": "<(readLine,readLine())<SUB>4</SUB>>", "61": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.postDecrement,t--)<SUB>5</SUB>>", "65": "<(LITERAL,0,t-- &gt; 0)<SUB>5</SUB>>", "67": "<(LOCAL,int n: int)<SUB>6</SUB>>", "69": "<(IDENTIFIER,n,int n = parseInt(f.readLine()))<SUB>6</SUB>>", "71": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>6</SUB>>", "73": "<(IDENTIFIER,f,readLine())<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[n])>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "93": "<(IDENTIFIER,i,arr[i] = parseInt(f.readLine()))<SUB>9</SUB>>", "95": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>9</SUB>>", "97": "<(IDENTIFIER,f,readLine())<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.assignment,int[] levels = new int[n])<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.alloc,new int[n])>", "103": "<(LOCAL,int curr_level: int)<SUB>12</SUB>>", "105": "<(IDENTIFIER,curr_level,int curr_level = 0)<SUB>12</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.equals,levels[curr_level] == arr[i] - 1)<SUB>14</SUB>>", "121": "<(IDENTIFIER,levels,levels[curr_level] == arr[i] - 1)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.subtraction,arr[i] - 1)<SUB>14</SUB>>", "125": "<(IDENTIFIER,arr,arr[i] - 1)<SUB>14</SUB>>", "127": "<(LITERAL,1,arr[i] - 1)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,levels[curr_level]++)<SUB>15</SUB>>", "131": "<(IDENTIFIER,levels,levels[curr_level]++)<SUB>15</SUB>>", "133": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.equals,arr[i] == 1)<SUB>16</SUB>>", "137": "<(IDENTIFIER,arr,arr[i] == 1)<SUB>16</SUB>>", "139": "<(LITERAL,1,arr[i] == 1)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,curr_level++)<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,levels[curr_level]++)<SUB>18</SUB>>", "145": "<(IDENTIFIER,levels,levels[curr_level]++)<SUB>18</SUB>>", "147": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.greaterThan,arr[i] &gt; 1)<SUB>19</SUB>>", "151": "<(IDENTIFIER,arr,arr[i] &gt; 1)<SUB>19</SUB>>", "153": "<(LITERAL,1,arr[i] &gt; 1)<SUB>19</SUB>>", "155": "<(CONTROL_STRUCTURE,while (curr_level &gt; 0 &amp;&amp; levels[curr_level] != arr[i] - 1),while (curr_level &gt; 0 &amp;&amp; levels[curr_level] != arr[i] - 1))<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.greaterThan,curr_level &gt; 0)<SUB>20</SUB>>", "159": "<(LITERAL,0,curr_level &gt; 0)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,levels[curr_level])<SUB>20</SUB>>", "163": "<(IDENTIFIER,curr_level,levels[curr_level] != arr[i] - 1)<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>20</SUB>>", "167": "<(IDENTIFIER,i,arr[i] - 1)<SUB>20</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,levels[curr_level])<SUB>21</SUB>>", "173": "<(IDENTIFIER,curr_level,levels[curr_level] = 0)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.postDecrement,curr_level--)<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,levels[curr_level]++)<SUB>24</SUB>>", "179": "<(IDENTIFIER,levels,levels[curr_level]++)<SUB>24</SUB>>", "8": "<(LOCAL,StringBuilder ostring: java.lang.StringBuilder)<SUB>26</SUB>>", "182": "<(IDENTIFIER,ostring,StringBuilder ostring = new StringBuilder())<SUB>26</SUB>>", "184": "<(&lt;init&gt;,new StringBuilder())<SUB>26</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int level = 0; Some(level &lt;= curr_level); level++),for (int level = 0; Some(level &lt;= curr_level); level++))<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.assignment,int level = 0)<SUB>27</SUB>>", "189": "<(LITERAL,0,int level = 0)<SUB>27</SUB>>", "191": "<(IDENTIFIER,level,level &lt;= curr_level)<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.postIncrement,level++)<SUB>27</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "197": "<(IDENTIFIER,ostring,ostring.append(levels[level]))<SUB>28</SUB>>", "199": "<(IDENTIFIER,levels,ostring.append(levels[level]))<SUB>28</SUB>>", "201": "<(CONTROL_STRUCTURE,if (level != curr_level),if (level != curr_level))<SUB>29</SUB>>", "203": "<(IDENTIFIER,level,level != curr_level)<SUB>29</SUB>>", "205": "<(append,ostring.append(&quot;.&quot;))<SUB>29</SUB>>", "207": "<(LITERAL,&quot;.&quot;,ostring.append(&quot;.&quot;))<SUB>29</SUB>>", "209": "<(IDENTIFIER,out,println(ostring))<SUB>31</SUB>>", "211": "<(close,close())<SUB>35</SUB>>", "213": "<(MODIFIER,PUBLIC)>", "215": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}