{"edges": [["21", "22"], ["21", "23"], ["21", "170"], ["21", "171"], ["21", "172"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "6"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "66"], ["23", "67"], ["23", "70"], ["23", "71"], ["23", "75"], ["23", "76"], ["23", "81"], ["23", "84"], ["23", "163"], ["23", "168"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "5"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "61"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "100"], ["94", "101"], ["94", "106"], ["94", "154"], ["94", "157"], ["94", "160"], ["96", "97"], ["96", "98"], ["98", "99"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "126"], ["106", "129"], ["107", "108"], ["107", "125"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "150"], ["131", "132"], ["131", "149"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["41", "44"], ["44", "47"], ["67", "73"], ["71", "78"], ["76", "81"], ["81", "86"], ["163", "168"], ["168", "172"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "41"], ["47", "50"], ["50", "59"], ["50", "67"], ["53", "50"], ["73", "71"], ["78", "76"], ["86", "89"], ["89", "98"], ["89", "166"], ["92", "89"], ["164", "163"], ["30", "28"], ["57", "64"], ["61", "53"], ["96", "103"], ["101", "114"], ["154", "157"], ["157", "160"], ["160", "92"], ["166", "164"], ["59", "57"], ["64", "61"], ["98", "96"], ["103", "101"], ["107", "127"], ["107", "138"], ["108", "107"], ["127", "154"], ["110", "108"], ["131", "151"], ["131", "154"], ["111", "121"], ["118", "110"], ["132", "131"], ["151", "154"], ["113", "111"], ["120", "118"], ["134", "132"], ["114", "113"], ["121", "120"], ["135", "145"], ["142", "134"], ["137", "135"], ["144", "142"], ["138", "137"], ["145", "144"], ["21", "26"], ["22", "172"], ["24", "172"], ["27", "172"], ["27", "172"], ["32", "172"], ["37", "172"], ["37", "172"], ["37", "172"], ["41", "172"], ["44", "172"], ["47", "172"], ["67", "172"], ["71", "172"], ["71", "172"], ["76", "172"], ["76", "172"], ["76", "172"], ["81", "172"], ["81", "172"], ["81", "172"], ["86", "172"], ["89", "172"], ["89", "172"], ["89", "172"], ["163", "172"], ["163", "172"], ["163", "172"], ["168", "172"], ["168", "172"], ["96", "172"], ["96", "172"], ["101", "172"], ["101", "172"], ["108", "172"], ["113", "172"], ["111", "172"], ["110", "172"], ["120", "172"], ["118", "172"], ["110", "172"], ["108", "172"], ["107", "172"], ["107", "172"], ["107", "172"], ["132", "172"], ["137", "172"], ["135", "172"], ["134", "172"], ["144", "172"], ["142", "172"], ["134", "172"], ["132", "172"], ["131", "172"], ["131", "172"], ["131", "172"], ["151", "172"], ["127", "172"], ["154", "172"], ["154", "172"], ["157", "172"], ["157", "172"], ["157", "172"], ["160", "172"], ["160", "172"], ["160", "172"], ["92", "172"], ["57", "172"], ["61", "172"], ["61", "172"], ["61", "172"], ["53", "172"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "41"], ["21", "67"], ["73", "71"], ["78", "76"], ["78", "76"], ["24", "27"], ["21", "27"], ["41", "44"], ["21", "44"], ["21", "47"], ["78", "81"], ["21", "81"], ["78", "81"], ["21", "86"], ["67", "163"], ["151", "163"], ["127", "163"], ["21", "163"], ["39", "168"], ["64", "168"], ["21", "168"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["47", "50"], ["53", "50"], ["21", "50"], ["32", "50"], ["50", "53"], ["21", "53"], ["59", "57"], ["44", "73"], ["61", "73"], ["21", "73"], ["73", "78"], ["21", "78"], ["71", "78"], ["86", "89"], ["92", "89"], ["21", "89"], ["50", "89"], ["89", "92"], ["21", "92"], ["98", "96"], ["103", "101"], ["103", "101"], ["111", "154"], ["135", "154"], ["21", "154"], ["114", "157"], ["138", "157"], ["21", "157"], ["44", "61"], ["21", "61"], ["57", "61"], ["64", "61"], ["103", "160"], ["21", "160"], ["154", "160"], ["39", "59"], ["64", "59"], ["21", "59"], ["59", "64"], ["21", "64"], ["81", "98"], ["160", "98"], ["21", "98"], ["98", "103"], ["21", "103"], ["96", "103"], ["108", "107"], ["108", "107"], ["37", "107"], ["131", "107"], ["21", "107"], ["132", "108"], ["21", "108"], ["110", "108"], ["110", "108"], ["67", "127"], ["151", "127"], ["21", "127"], ["111", "110"], ["111", "110"], ["81", "110"], ["160", "110"], ["21", "110"], ["120", "110"], ["120", "110"], ["132", "131"], ["132", "131"], ["107", "131"], ["21", "131"], ["21", "151"], ["103", "111"], ["21", "111"], ["113", "111"], ["113", "111"], ["81", "118"], ["160", "118"], ["21", "118"], ["120", "118"], ["120", "118"], ["108", "132"], ["21", "132"], ["134", "132"], ["134", "132"], ["67", "151"], ["127", "151"], ["114", "113"], ["114", "113"], ["21", "113"], ["121", "120"], ["121", "120"], ["21", "120"], ["135", "134"], ["135", "134"], ["21", "134"], ["81", "134"], ["160", "134"], ["144", "134"], ["144", "134"], ["101", "114"], ["21", "114"], ["76", "121"], ["157", "121"], ["21", "121"], ["111", "135"], ["21", "135"], ["137", "135"], ["137", "135"], ["21", "142"], ["81", "142"], ["160", "142"], ["144", "142"], ["144", "142"], ["138", "137"], ["138", "137"], ["21", "137"], ["145", "144"], ["145", "144"], ["21", "144"], ["114", "138"], ["21", "138"], ["121", "145"], ["21", "145"], ["50", "64"], ["50", "57"], ["50", "50"], ["50", "59"], ["50", "61"], ["50", "53"], ["89", "107"], ["89", "160"], ["89", "96"], ["89", "89"], ["89", "98"], ["89", "120"], ["89", "113"], ["89", "154"], ["89", "114"], ["89", "103"], ["89", "121"], ["89", "92"], ["89", "157"], ["89", "101"], ["89", "118"], ["89", "110"], ["89", "108"], ["89", "111"], ["107", "145"], ["107", "131"], ["107", "132"], ["107", "142"], ["107", "144"], ["107", "134"], ["107", "138"], ["107", "137"], ["107", "135"], ["107", "127"], ["131", "151"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "6": "<(LOCAL,TreeMap&lt;Integer, Integer&gt; h: ANY)<SUB>7</SUB>>", "42": "<(IDENTIFIER,h,ANY h = new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "44": "<(&lt;init&gt;,new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int key = nextInt())<SUB>9</SUB>>", "59": "<(nextInt,nextInt())<SUB>9</SUB>>", "61": "<(put,put(key, sc.nextInt()))<SUB>10</SUB>>", "63": "<(IDENTIFIER,key,put(key, sc.nextInt()))<SUB>10</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int ans = 2)<SUB>13</SUB>>", "69": "<(LITERAL,2,int ans = 2)<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.assignment,Integer lastKey = firstKey())<SUB>14</SUB>>", "73": "<(firstKey,firstKey())<SUB>14</SUB>>", "75": "<(LOCAL,Integer last: java.lang.Integer)<SUB>15</SUB>>", "77": "<(IDENTIFIER,last,Integer last = get(lastKey))<SUB>15</SUB>>", "79": "<(IDENTIFIER,h,get(lastKey))<SUB>15</SUB>>", "81": "<(remove,remove(lastKey))<SUB>16</SUB>>", "83": "<(IDENTIFIER,lastKey,remove(lastKey))<SUB>16</SUB>>", "85": "<(LOCAL,int i: int)<SUB>17</SUB>>", "87": "<(IDENTIFIER,i,int i = 1)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "91": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "95": "<(LOCAL,int key: int)<SUB>18</SUB>>", "97": "<(IDENTIFIER,key,int key = firstKey())<SUB>18</SUB>>", "99": "<(IDENTIFIER,h,firstKey())<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.assignment,int val = get(key))<SUB>19</SUB>>", "103": "<(get,get(key))<SUB>19</SUB>>", "105": "<(IDENTIFIER,key,get(key))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.equals,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)) == t)<SUB>21</SUB>>", "109": "<(IDENTIFIER,Math,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)))<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.subtraction,key - val * 1.0 / 2)<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.division,val * 1.0 / 2)<SUB>21</SUB>>", "115": "<(IDENTIFIER,val,val * 1.0)<SUB>21</SUB>>", "117": "<(LITERAL,2,val * 1.0 / 2)<SUB>21</SUB>>", "119": "<(IDENTIFIER,lastKey,lastKey + last * 1.0 / 2)<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.multiplication,last * 1.0)<SUB>21</SUB>>", "123": "<(LITERAL,1.0,last * 1.0)<SUB>21</SUB>>", "125": "<(IDENTIFIER,t,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)) == t)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>22</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.greaterThan,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)) &gt; t)<SUB>23</SUB>>", "133": "<(IDENTIFIER,Math,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)))<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.subtraction,key - val * 1.0 / 2)<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.division,val * 1.0 / 2)<SUB>23</SUB>>", "139": "<(IDENTIFIER,val,val * 1.0)<SUB>23</SUB>>", "141": "<(LITERAL,2,val * 1.0 / 2)<SUB>23</SUB>>", "143": "<(IDENTIFIER,lastKey,lastKey + last * 1.0 / 2)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.multiplication,last * 1.0)<SUB>23</SUB>>", "147": "<(LITERAL,1.0,last * 1.0)<SUB>23</SUB>>", "149": "<(IDENTIFIER,t,Math.abs(key - val * 1.0 / 2 - (lastKey + last * 1.0 / 2)) &gt; t)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignmentPlus,ans += 2)<SUB>24</SUB>>", "153": "<(LITERAL,2,ans += 2)<SUB>24</SUB>>", "155": "<(IDENTIFIER,lastKey,lastKey = key)<SUB>26</SUB>>", "157": "<(&lt;operator&gt;.assignment,last = val)<SUB>27</SUB>>", "159": "<(IDENTIFIER,val,last = val)<SUB>27</SUB>>", "161": "<(IDENTIFIER,h,remove(lastKey))<SUB>28</SUB>>", "163": "<(println,System.out.println(ans))<SUB>31</SUB>>", "165": "<(IDENTIFIER,System,System.out.println(ans))<SUB>31</SUB>>", "167": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>31</SUB>>", "169": "<(IDENTIFIER,sc,close())<SUB>33</SUB>>", "171": "<(MODIFIER,STATIC)>"}}