{"edges": [["19", "20"], ["19", "21"], ["19", "118"], ["19", "119"], ["19", "120"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "61"], ["21", "64"], ["21", "65"], ["21", "68"], ["21", "111"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "91"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "97"], ["91", "101"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["109", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "42"], ["40", "46"], ["61", "65"], ["65", "70"], ["111", "120"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "61"], ["52", "49"], ["70", "73"], ["73", "83"], ["73", "114"], ["76", "73"], ["112", "115"], ["115", "111"], ["28", "26"], ["55", "52"], ["80", "94"], ["114", "112"], ["56", "59"], ["59", "55"], ["82", "80"], ["92", "98"], ["92", "105"], ["83", "88"], ["86", "82"], ["94", "92"], ["98", "76"], ["88", "86"], ["103", "109"], ["103", "76"], ["105", "103"], ["109", "76"], ["19", "24"], ["20", "120"], ["22", "120"], ["25", "120"], ["25", "120"], ["31", "120"], ["35", "120"], ["37", "120"], ["35", "120"], ["35", "120"], ["40", "120"], ["40", "120"], ["46", "120"], ["61", "120"], ["61", "120"], ["65", "120"], ["70", "120"], ["73", "120"], ["73", "120"], ["73", "120"], ["111", "120"], ["115", "120"], ["111", "120"], ["111", "120"], ["82", "120"], ["82", "120"], ["80", "120"], ["80", "120"], ["92", "120"], ["94", "120"], ["92", "120"], ["92", "120"], ["103", "120"], ["105", "120"], ["103", "120"], ["103", "120"], ["109", "120"], ["98", "120"], ["76", "120"], ["55", "120"], ["59", "120"], ["55", "120"], ["55", "120"], ["52", "120"], ["61", "120"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["42", "40"], ["19", "65"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "61"], ["40", "61"], ["55", "61"], ["19", "70"], ["65", "111"], ["109", "111"], ["98", "111"], ["19", "111"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["70", "73"], ["76", "73"], ["19", "73"], ["49", "73"], ["88", "76"], ["19", "76"], ["82", "80"], ["82", "80"], ["65", "115"], ["109", "115"], ["98", "115"], ["19", "115"], ["37", "59"], ["19", "59"], ["61", "82"], ["55", "82"], ["80", "92"], ["19", "92"], ["94", "92"], ["94", "92"], ["19", "98"], ["19", "94"], ["35", "94"], ["105", "94"], ["65", "98"], ["109", "98"], ["73", "88"], ["19", "88"], ["92", "103"], ["19", "103"], ["105", "103"], ["105", "103"], ["19", "105"], ["94", "105"], ["65", "109"], ["98", "109"], ["19", "109"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "55"], ["73", "80"], ["73", "94"], ["73", "73"], ["73", "83"], ["73", "88"], ["73", "92"], ["73", "76"], ["73", "82"], ["73", "86"], ["92", "98"], ["92", "105"], ["92", "103"], ["103", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int d = nextInt())<SUB>3</SUB>>", "37": "<(nextInt,nextInt())<SUB>3</SUB>>", "39": "<(LOCAL,int[] arr: int[])<SUB>4</SUB>>", "41": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>4</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "45": "<(LOCAL,int i: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "59": "<(nextInt,nextInt())<SUB>6</SUB>>", "61": "<(sort,sort(arr))<SUB>8</SUB>>", "63": "<(IDENTIFIER,arr,sort(arr))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>9</SUB>>", "67": "<(LITERAL,0,int count = 0)<SUB>9</SUB>>", "69": "<(LOCAL,int i: int)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "79": "<(LOCAL,int dist: int)<SUB>11</SUB>>", "81": "<(IDENTIFIER,dist,int dist = arr[i] - arr[i - 1])<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,arr[i] - arr[i - 1])<SUB>11</SUB>>", "87": "<(IDENTIFIER,arr,arr[i] - arr[i - 1])<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,i - 1)<SUB>11</SUB>>", "91": "<(CONTROL_STRUCTURE,if (dist &gt; 2 * d),if (dist &gt; 2 * d))<SUB>12</SUB>>", "93": "<(IDENTIFIER,dist,dist &gt; 2 * d)<SUB>12</SUB>>", "95": "<(LITERAL,2,2 * d)<SUB>12</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "99": "<(IDENTIFIER,count,count += 2)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.equals,dist == 2 * d)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.multiplication,2 * d)<SUB>14</SUB>>", "107": "<(IDENTIFIER,d,2 * d)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,count++)<SUB>15</SUB>>", "111": "<(println,System.out.println(count + 2))<SUB>19</SUB>>", "113": "<(IDENTIFIER,System,System.out.println(count + 2))<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.addition,count + 2)<SUB>19</SUB>>", "117": "<(LITERAL,2,count + 2)<SUB>19</SUB>>", "119": "<(MODIFIER,STATIC)>"}}