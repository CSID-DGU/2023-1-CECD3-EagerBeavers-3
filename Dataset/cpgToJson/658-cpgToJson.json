{"edges": [["19", "21"], ["19", "173"], ["19", "174"], ["19", "175"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "60"], ["21", "112"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "108"], ["61", "62"], ["61", "93"], ["62", "63"], ["62", "78"], ["63", "64"], ["63", "71"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["78", "79"], ["78", "86"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["86", "87"], ["86", "92"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "143"], ["114", "115"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["143", "144"], ["144", "145"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "164"], ["157", "158"], ["157", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["164", "165"], ["164", "172"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "66"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "57"], ["47", "44"], ["61", "113"], ["61", "109"], ["113", "117"], ["113", "147"], ["28", "26"], ["50", "47"], ["62", "61"], ["62", "96"], ["93", "61"], ["109", "113"], ["51", "54"], ["54", "50"], ["63", "62"], ["63", "81"], ["78", "62"], ["94", "93"], ["94", "103"], ["101", "93"], ["117", "120"], ["120", "175"], ["120", "129"], ["123", "120"], ["64", "63"], ["64", "73"], ["71", "63"], ["79", "78"], ["79", "88"], ["86", "78"], ["95", "94"], ["102", "101"], ["147", "150"], ["150", "175"], ["150", "159"], ["153", "150"], ["65", "64"], ["72", "71"], ["80", "79"], ["87", "86"], ["96", "95"], ["103", "102"], ["127", "138"], ["127", "123"], ["66", "65"], ["73", "72"], ["81", "80"], ["88", "87"], ["128", "127"], ["135", "175"], ["157", "168"], ["157", "153"], ["129", "128"], ["136", "139"], ["139", "135"], ["158", "157"], ["165", "175"], ["138", "136"], ["159", "158"], ["166", "169"], ["169", "165"], ["168", "166"], ["19", "24"], ["20", "175"], ["22", "175"], ["25", "175"], ["25", "175"], ["32", "175"], ["30", "175"], ["30", "175"], ["35", "175"], ["35", "175"], ["35", "175"], ["57", "175"], ["57", "175"], ["65", "175"], ["64", "175"], ["63", "175"], ["72", "175"], ["71", "175"], ["63", "175"], ["62", "175"], ["80", "175"], ["79", "175"], ["78", "175"], ["87", "175"], ["86", "175"], ["78", "175"], ["62", "175"], ["61", "175"], ["95", "175"], ["94", "175"], ["93", "175"], ["102", "175"], ["101", "175"], ["93", "175"], ["61", "175"], ["61", "175"], ["109", "175"], ["109", "175"], ["117", "175"], ["120", "175"], ["120", "175"], ["120", "175"], ["128", "175"], ["127", "175"], ["127", "175"], ["123", "175"], ["50", "175"], ["54", "175"], ["50", "175"], ["50", "175"], ["47", "175"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "57"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "113"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["62", "61"], ["62", "61"], ["93", "61"], ["93", "61"], ["19", "109"], ["63", "62"], ["63", "62"], ["78", "62"], ["78", "62"], ["94", "93"], ["94", "93"], ["78", "93"], ["101", "93"], ["101", "93"], ["19", "117"], ["32", "54"], ["19", "54"], ["64", "63"], ["64", "63"], ["71", "63"], ["71", "63"], ["79", "78"], ["79", "78"], ["86", "78"], ["86", "78"], ["95", "94"], ["95", "94"], ["19", "94"], ["102", "101"], ["102", "101"], ["19", "101"], ["117", "120"], ["123", "120"], ["19", "120"], ["44", "120"], ["120", "123"], ["19", "123"], ["19", "147"], ["65", "64"], ["65", "64"], ["19", "64"], ["72", "71"], ["72", "71"], ["19", "71"], ["80", "79"], ["80", "79"], ["19", "79"], ["87", "86"], ["87", "86"], ["19", "86"], ["35", "95"], ["72", "95"], ["19", "95"], ["35", "102"], ["87", "102"], ["19", "102"], ["147", "150"], ["153", "150"], ["19", "150"], ["44", "150"], ["150", "153"], ["19", "153"], ["35", "65"], ["19", "65"], ["35", "72"], ["19", "72"], ["35", "80"], ["65", "80"], ["19", "80"], ["35", "87"], ["19", "87"], ["128", "127"], ["128", "127"], ["19", "127"], ["35", "128"], ["50", "128"], ["19", "128"], ["120", "135"], ["19", "135"], ["158", "157"], ["158", "157"], ["19", "157"], ["120", "139"], ["19", "139"], ["35", "158"], ["50", "158"], ["19", "158"], ["150", "165"], ["19", "165"], ["150", "169"], ["19", "169"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["61", "109"], ["113", "120"], ["113", "150"], ["113", "147"], ["113", "117"], ["62", "94"], ["62", "96"], ["62", "95"], ["62", "93"], ["63", "81"], ["63", "79"], ["63", "80"], ["63", "78"], ["94", "102"], ["94", "103"], ["94", "101"], ["120", "128"], ["120", "129"], ["120", "127"], ["64", "73"], ["64", "72"], ["64", "71"], ["79", "87"], ["79", "88"], ["79", "86"], ["150", "158"], ["150", "157"], ["150", "159"], ["127", "120"], ["127", "136"], ["127", "138"], ["127", "139"], ["127", "123"], ["127", "135"], ["157", "169"], ["157", "150"], ["157", "153"], ["157", "168"], ["157", "166"], ["157", "165"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scanner,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,scanner,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean isOdd = false)<SUB>8</SUB>>", "59": "<(LITERAL,false,boolean isOdd = false)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.logicalOr,(arr[0] % 2 == 0 &amp;&amp; arr[1] % 2 == 0) || (arr[0] % 2 == 0 &amp;&amp; arr[2] % 2 == 0) || (arr[1] % 2 == 0 &amp;&amp; arr[2] % 2 == 0))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.logicalAnd,arr[0] % 2 == 0 &amp;&amp; arr[1] % 2 == 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.modulo,arr[0] % 2)<SUB>9</SUB>>", "67": "<(IDENTIFIER,arr,arr[0] % 2)<SUB>9</SUB>>", "69": "<(LITERAL,2,arr[0] % 2)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.equals,arr[1] % 2 == 0)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,arr[1])<SUB>9</SUB>>", "75": "<(LITERAL,1,arr[1] % 2)<SUB>9</SUB>>", "77": "<(LITERAL,0,arr[1] % 2 == 0)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.equals,arr[0] % 2 == 0)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>9</SUB>>", "83": "<(LITERAL,0,arr[0] % 2)<SUB>9</SUB>>", "85": "<(LITERAL,0,arr[0] % 2 == 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.modulo,arr[2] % 2)<SUB>9</SUB>>", "89": "<(IDENTIFIER,arr,arr[2] % 2)<SUB>9</SUB>>", "91": "<(LITERAL,2,arr[2] % 2)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.logicalAnd,arr[1] % 2 == 0 &amp;&amp; arr[2] % 2 == 0)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.modulo,arr[1] % 2)<SUB>10</SUB>>", "97": "<(IDENTIFIER,arr,arr[1] % 2)<SUB>10</SUB>>", "99": "<(LITERAL,2,arr[1] % 2)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.equals,arr[2] % 2 == 0)<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,arr[2])<SUB>10</SUB>>", "105": "<(LITERAL,2,arr[2] % 2)<SUB>10</SUB>>", "107": "<(LITERAL,0,arr[2] % 2 == 0)<SUB>10</SUB>>", "109": "<(&lt;operator&gt;.assignment,isOdd = true)<SUB>11</SUB>>", "111": "<(LITERAL,true,isOdd = true)<SUB>11</SUB>>", "113": "<(IDENTIFIER,isOdd,if (isOdd))<SUB>13</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.preIncrement,++i)<SUB>14</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.equals,arr[i] % 2 == 1)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "131": "<(IDENTIFIER,i,arr[i] % 2)<SUB>15</SUB>>", "133": "<(LITERAL,1,arr[i] % 2 == 1)<SUB>15</SUB>>", "135": "<(println,System.out.println(i + 1))<SUB>16</SUB>>", "137": "<(IDENTIFIER,System,System.out.println(i + 1))<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "141": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "143": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "149": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "151": "<(IDENTIFIER,i,i &lt; n)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.preIncrement,++i)<SUB>21</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.equals,arr[i] % 2 == 0)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>22</SUB>>", "161": "<(IDENTIFIER,i,arr[i] % 2)<SUB>22</SUB>>", "163": "<(LITERAL,0,arr[i] % 2 == 0)<SUB>22</SUB>>", "165": "<(println,System.out.println(i + 1))<SUB>23</SUB>>", "167": "<(IDENTIFIER,System,System.out.println(i + 1))<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.addition,i + 1)<SUB>23</SUB>>", "171": "<(LITERAL,1,i + 1)<SUB>23</SUB>>", "173": "<(MODIFIER,PUBLIC)>", "175": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}