{"edges": [["21", "23"], ["21", "201"], ["21", "202"], ["21", "203"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "74"], ["23", "194"], ["23", "197"], ["23", "199"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "84"], ["74", "86"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "89"], ["86", "90"], ["86", "95"], ["86", "100"], ["86", "103"], ["86", "104"], ["86", "107"], ["86", "146"], ["86", "149"], ["86", "152"], ["86", "157"], ["86", "166"], ["86", "175"], ["86", "191"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "125"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "137"], ["125", "140"], ["126", "127"], ["126", "136"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["140", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "185"], ["176", "177"], ["176", "184"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["187", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["197", "198"], ["199", "200"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "60"], ["194", "197"], ["197", "199"], ["199", "203"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["60", "63"], ["63", "69"], ["63", "76"], ["66", "63"], ["68", "66"], ["76", "81"], ["79", "92"], ["79", "194"], ["84", "81"], ["30", "28"], ["37", "35"], ["69", "72"], ["72", "68"], ["81", "79"], ["90", "97"], ["95", "100"], ["100", "104"], ["104", "108"], ["146", "149"], ["149", "154"], ["152", "160"], ["157", "169"], ["166", "178"], ["191", "84"], ["92", "90"], ["97", "95"], ["108", "115"], ["108", "146"], ["154", "152"], ["159", "157"], ["168", "166"], ["176", "187"], ["176", "191"], ["185", "191"], ["112", "128"], ["160", "163"], ["163", "159"], ["169", "172"], ["172", "168"], ["177", "176"], ["187", "185"], ["114", "112"], ["126", "137"], ["126", "143"], ["137", "108"], ["178", "181"], ["181", "177"], ["115", "120"], ["116", "114"], ["127", "126"], ["141", "108"], ["118", "116"], ["128", "133"], ["131", "127"], ["143", "141"], ["119", "118"], ["133", "131"], ["120", "121"], ["121", "119"], ["21", "26"], ["22", "203"], ["24", "203"], ["27", "203"], ["27", "203"], ["31", "203"], ["34", "203"], ["34", "203"], ["39", "203"], ["39", "203"], ["44", "203"], ["46", "203"], ["44", "203"], ["44", "203"], ["49", "203"], ["49", "203"], ["49", "203"], ["54", "203"], ["54", "203"], ["60", "203"], ["63", "203"], ["63", "203"], ["76", "203"], ["79", "203"], ["81", "203"], ["79", "203"], ["79", "203"], ["194", "203"], ["194", "203"], ["197", "203"], ["199", "203"], ["199", "203"], ["90", "203"], ["90", "203"], ["95", "203"], ["100", "203"], ["100", "203"], ["104", "203"], ["108", "203"], ["146", "203"], ["149", "203"], ["152", "203"], ["152", "203"], ["152", "203"], ["159", "203"], ["157", "203"], ["157", "203"], ["166", "203"], ["166", "203"], ["177", "203"], ["177", "203"], ["176", "203"], ["176", "203"], ["176", "203"], ["187", "203"], ["187", "203"], ["185", "203"], ["185", "203"], ["191", "203"], ["191", "203"], ["84", "203"], ["116", "203"], ["119", "203"], ["118", "203"], ["116", "203"], ["114", "203"], ["112", "203"], ["112", "203"], ["127", "203"], ["127", "203"], ["126", "203"], ["126", "203"], ["143", "203"], ["141", "203"], ["141", "203"], ["137", "203"], ["137", "203"], ["68", "203"], ["72", "203"], ["68", "203"], ["68", "203"], ["66", "203"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "60"], ["72", "68"], ["21", "76"], ["34", "194"], ["21", "194"], ["54", "194"], ["185", "194"], ["194", "197"], ["21", "197"], ["197", "199"], ["21", "199"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["21", "56"], ["60", "63"], ["66", "63"], ["21", "63"], ["51", "63"], ["63", "66"], ["21", "66"], ["76", "79"], ["84", "79"], ["21", "79"], ["81", "79"], ["81", "79"], ["191", "84"], ["21", "84"], ["79", "90"], ["21", "90"], ["97", "95"], ["97", "95"], ["21", "100"], ["21", "104"], ["133", "146"], ["21", "146"], ["79", "146"], ["108", "149"], ["21", "149"], ["154", "152"], ["154", "152"], ["159", "157"], ["159", "157"], ["168", "166"], ["168", "166"], ["154", "191"], ["21", "191"], ["46", "72"], ["21", "72"], ["63", "81"], ["97", "81"], ["21", "81"], ["157", "166"], ["21", "166"], ["187", "185"], ["187", "185"], ["187", "185"], ["79", "92"], ["21", "92"], ["81", "97"], ["21", "97"], ["90", "108"], ["137", "108"], ["21", "108"], ["95", "108"], ["141", "108"], ["21", "112"], ["116", "112"], ["116", "112"], ["146", "154"], ["21", "154"], ["49", "159"], ["177", "159"], ["49", "168"], ["159", "168"], ["177", "168"], ["68", "168"], ["177", "176"], ["177", "176"], ["44", "176"], ["126", "176"], ["21", "176"], ["112", "137"], ["21", "137"], ["49", "177"], ["168", "177"], ["168", "177"], ["116", "187"], ["21", "187"], ["54", "187"], ["185", "187"], ["166", "187"], ["21", "114"], ["116", "114"], ["116", "114"], ["127", "126"], ["127", "126"], ["44", "126"], ["176", "126"], ["21", "126"], ["143", "141"], ["143", "141"], ["187", "116"], ["21", "116"], ["118", "116"], ["118", "116"], ["49", "127"], ["21", "118"], ["108", "118"], ["108", "118"], ["112", "143"], ["21", "143"], ["21", "119"], ["108", "119"], ["108", "119"], ["21", "133"], ["79", "133"], ["108", "121"], ["21", "121"], ["108", "121"], ["63", "68"], ["63", "69"], ["63", "66"], ["63", "72"], ["63", "63"], ["79", "154"], ["79", "146"], ["79", "81"], ["79", "169"], ["79", "84"], ["79", "163"], ["79", "178"], ["79", "149"], ["79", "104"], ["79", "95"], ["79", "92"], ["79", "168"], ["79", "97"], ["79", "181"], ["79", "191"], ["79", "90"], ["79", "79"], ["79", "152"], ["79", "100"], ["79", "108"], ["79", "160"], ["79", "166"], ["79", "157"], ["79", "159"], ["79", "176"], ["79", "177"], ["79", "172"], ["108", "115"], ["108", "120"], ["108", "128"], ["108", "114"], ["108", "131"], ["108", "119"], ["108", "121"], ["108", "112"], ["108", "118"], ["108", "127"], ["108", "108"], ["108", "116"], ["108", "126"], ["108", "133"], ["176", "185"], ["176", "187"], ["126", "137"], ["126", "141"], ["126", "143"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "41": "<(nextInt,nextInt())<SUB>6</SUB>>", "43": "<(LOCAL,long U: long)<SUB>7</SUB>>", "45": "<(IDENTIFIER,U,long U = nextLong())<SUB>7</SUB>>", "47": "<(IDENTIFIER,in,nextLong())<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,long[] E = new long[n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new long[n])>", "53": "<(LOCAL,double max: double)<SUB>9</SUB>>", "55": "<(IDENTIFIER,max,double max = -1)<SUB>9</SUB>>", "57": "<(LITERAL,1,-1)<SUB>9</SUB>>", "59": "<(LOCAL,int i: int)<SUB>11</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "65": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,E[i])<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,E[i] = nextLong())<SUB>12</SUB>>", "73": "<(IDENTIFIER,in,nextLong())<SUB>12</SUB>>", "75": "<(LOCAL,int k: int)<SUB>14</SUB>>", "77": "<(IDENTIFIER,k,int k = 1)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.lessThan,k &lt; n - 1)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "83": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "85": "<(IDENTIFIER,k,k++)<SUB>14</SUB>>", "87": "<(LOCAL,int i: int)<SUB>16</SUB>>", "89": "<(LOCAL,int mid: int)<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,int i = k + 1)<SUB>16</SUB>>", "93": "<(IDENTIFIER,k,k + 1)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.assignment,int j = n - 1)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>16</SUB>>", "99": "<(LITERAL,1,n - 1)<SUB>16</SUB>>", "101": "<(IDENTIFIER,mid,int mid = 0)<SUB>16</SUB>>", "103": "<(LOCAL,double T: double)<SUB>17</SUB>>", "105": "<(IDENTIFIER,T,double T = 0)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,while (i &lt; j),while (i &lt; j))<SUB>19</SUB>>", "109": "<(IDENTIFIER,i,i &lt; j)<SUB>19</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "113": "<(IDENTIFIER,mid,mid = (int) Math.ceil((double) (i + j) / 2))<SUB>21</SUB>>", "115": "<(TYPE_REF,int,int)<SUB>21</SUB>>", "117": "<(IDENTIFIER,Math,Math.ceil((double) (i + j) / 2))<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.cast,(double) (i + j))<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.addition,i + j)<SUB>21</SUB>>", "123": "<(IDENTIFIER,j,i + j)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,if (E[mid] - E[k - 1] &lt;= U),if (E[mid] - E[k - 1] &lt;= U))<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.subtraction,E[mid] - E[k - 1])<SUB>23</SUB>>", "129": "<(IDENTIFIER,E,E[mid] - E[k - 1])<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,E[k - 1])<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>23</SUB>>", "135": "<(LITERAL,1,k - 1)<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.assignment,i = mid)<SUB>24</SUB>>", "139": "<(IDENTIFIER,mid,i = mid)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.assignment,j = mid - 1)<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>26</SUB>>", "145": "<(LITERAL,1,mid - 1)<SUB>26</SUB>>", "147": "<(IDENTIFIER,j,j = k)<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.assignment,k = i)<SUB>30</SUB>>", "151": "<(IDENTIFIER,i,k = i)<SUB>30</SUB>>", "153": "<(IDENTIFIER,i,i = j - 1)<SUB>31</SUB>>", "155": "<(IDENTIFIER,j,j - 1)<SUB>31</SUB>>", "157": "<(&lt;operator&gt;.assignment,T = E[k] - E[j])<SUB>33</SUB>>", "159": "<(&lt;operator&gt;.subtraction,E[k] - E[j])<SUB>33</SUB>>", "161": "<(IDENTIFIER,E,E[k] - E[j])<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,E[j])<SUB>33</SUB>>", "165": "<(IDENTIFIER,j,E[k] - E[j])<SUB>33</SUB>>", "167": "<(IDENTIFIER,T,T /= E[k] - E[i])<SUB>34</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,E[k])<SUB>34</SUB>>", "171": "<(IDENTIFIER,k,E[k] - E[i])<SUB>34</SUB>>", "173": "<(IDENTIFIER,E,E[k] - E[i])<SUB>34</SUB>>", "175": "<(CONTROL_STRUCTURE,if (E[k] - E[i] &lt;= U),if (E[k] - E[i] &lt;= U))<SUB>36</SUB>>", "177": "<(&lt;operator&gt;.subtraction,E[k] - E[i])<SUB>36</SUB>>", "179": "<(IDENTIFIER,E,E[k] - E[i])<SUB>36</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,E[i])<SUB>36</SUB>>", "183": "<(IDENTIFIER,i,E[k] - E[i])<SUB>36</SUB>>", "185": "<(&lt;operator&gt;.assignment,max = Math.max(max, T))<SUB>37</SUB>>", "187": "<(max,Math.max(max, T))<SUB>37</SUB>>", "189": "<(IDENTIFIER,max,Math.max(max, T))<SUB>37</SUB>>", "191": "<(&lt;operator&gt;.assignment,k = j)<SUB>39</SUB>>", "193": "<(IDENTIFIER,j,k = j)<SUB>39</SUB>>", "195": "<(IDENTIFIER,pw,println(max))<SUB>42</SUB>>", "197": "<(flush,flush())<SUB>44</SUB>>", "199": "<(close,close())<SUB>45</SUB>>", "201": "<(MODIFIER,PUBLIC)>", "203": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}