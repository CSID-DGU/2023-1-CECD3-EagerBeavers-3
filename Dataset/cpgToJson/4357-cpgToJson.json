{"edges": [["19", "21"], ["19", "235"], ["19", "236"], ["19", "237"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "46"], ["21", "53"], ["21", "107"], ["21", "108"], ["21", "111"], ["21", "224"], ["21", "233"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["63", "71"], ["63", "72"], ["63", "78"], ["63", "91"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "70"], ["68", "69"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "77"], ["75", "76"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "106"], ["92", "93"], ["92", "102"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "105"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "138"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["136", "137"], ["138", "139"], ["138", "140"], ["138", "145"], ["138", "148"], ["138", "150"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "161"], ["150", "210"], ["151", "152"], ["151", "159"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["161", "162"], ["161", "163"], ["161", "168"], ["161", "171"], ["161", "173"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["173", "188"], ["174", "175"], ["174", "186"], ["175", "176"], ["175", "183"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "194"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "209"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["216", "217"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "49"], ["46", "55"], ["108", "113"], ["224", "233"], ["233", "237"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["55", "58"], ["58", "68"], ["58", "108"], ["61", "58"], ["113", "118"], ["116", "125"], ["116", "227"], ["121", "118"], ["225", "229"], ["228", "224"], ["28", "26"], ["49", "48"], ["65", "75"], ["72", "80"], ["78", "96"], ["91", "61"], ["118", "116"], ["125", "132"], ["227", "225"], ["229", "228"], ["67", "65"], ["74", "72"], ["79", "86"], ["84", "78"], ["92", "91"], ["129", "136"], ["136", "136"], ["136", "142"], ["140", "145"], ["145", "155"], ["145", "121"], ["148", "145"], ["68", "67"], ["75", "74"], ["80", "79"], ["85", "84"], ["93", "102"], ["102", "92"], ["130", "129"], ["142", "140"], ["86", "85"], ["95", "93"], ["132", "130"], ["152", "148"], ["152", "165"], ["163", "168"], ["168", "179"], ["168", "212"], ["171", "168"], ["211", "220"], ["211", "148"], ["96", "99"], ["99", "95"], ["153", "152"], ["165", "163"], ["212", "211"], ["217", "148"], ["155", "153"], ["175", "171"], ["175", "190"], ["189", "197"], ["189", "171"], ["219", "217"], ["176", "175"], ["176", "183"], ["183", "175"], ["190", "189"], ["195", "171"], ["220", "219"], ["177", "176"], ["196", "206"], ["201", "195"], ["179", "177"], ["197", "196"], ["202", "201"], ["204", "202"], ["206", "204"], ["19", "24"], ["20", "237"], ["22", "237"], ["25", "237"], ["25", "237"], ["30", "237"], ["35", "237"], ["35", "237"], ["40", "237"], ["40", "237"], ["40", "237"], ["46", "237"], ["46", "237"], ["46", "237"], ["55", "237"], ["58", "237"], ["58", "237"], ["108", "237"], ["113", "237"], ["116", "237"], ["118", "237"], ["116", "237"], ["116", "237"], ["224", "237"], ["229", "237"], ["229", "237"], ["228", "237"], ["224", "237"], ["224", "237"], ["233", "237"], ["233", "237"], ["125", "237"], ["130", "237"], ["129", "237"], ["129", "237"], ["136", "237"], ["142", "237"], ["140", "237"], ["140", "237"], ["145", "237"], ["145", "237"], ["121", "237"], ["153", "237"], ["152", "237"], ["152", "237"], ["165", "237"], ["163", "237"], ["163", "237"], ["168", "237"], ["168", "237"], ["217", "237"], ["217", "237"], ["177", "237"], ["176", "237"], ["175", "237"], ["175", "237"], ["175", "237"], ["195", "237"], ["204", "237"], ["195", "237"], ["195", "237"], ["171", "237"], ["148", "237"], ["65", "237"], ["74", "237"], ["72", "237"], ["72", "237"], ["78", "237"], ["84", "237"], ["78", "237"], ["78", "237"], ["95", "237"], ["95", "237"], ["102", "237"], ["102", "237"], ["91", "237"], ["91", "237"], ["61", "237"], ["102", "237"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["48", "46"], ["19", "108"], ["22", "25"], ["19", "25"], ["19", "55"], ["19", "113"], ["228", "224"], ["228", "224"], ["37", "233"], ["75", "233"], ["19", "233"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["49", "48"], ["49", "48"], ["19", "48"], ["55", "58"], ["61", "58"], ["19", "58"], ["35", "58"], ["58", "61"], ["19", "61"], ["67", "65"], ["67", "65"], ["74", "72"], ["74", "72"], ["84", "78"], ["19", "78"], ["19", "91"], ["113", "116"], ["121", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["130", "121"], ["153", "121"], ["177", "121"], ["204", "121"], ["19", "121"], ["19", "125"], ["229", "228"], ["229", "228"], ["19", "228"], ["19", "49"], ["42", "49"], ["19", "118"], ["48", "118"], ["145", "118"], ["136", "140"], ["19", "140"], ["108", "229"], ["217", "229"], ["19", "229"], ["58", "229"], ["68", "67"], ["19", "67"], ["75", "74"], ["19", "74"], ["19", "84"], ["130", "129"], ["130", "129"], ["19", "129"], ["132", "136"], ["19", "136"], ["140", "145"], ["148", "145"], ["19", "145"], ["118", "145"], ["168", "145"], ["155", "148"], ["183", "148"], ["206", "148"], ["19", "148"], ["37", "68"], ["75", "68"], ["19", "68"], ["68", "75"], ["19", "75"], ["19", "102"], ["96", "102"], ["99", "102"], ["116", "130"], ["19", "130"], ["132", "130"], ["132", "130"], ["136", "142"], ["19", "142"], ["19", "163"], ["136", "163"], ["96", "95"], ["96", "95"], ["99", "95"], ["99", "95"], ["19", "132"], ["125", "132"], ["153", "152"], ["153", "152"], ["19", "152"], ["163", "168"], ["171", "168"], ["19", "168"], ["145", "168"], ["179", "171"], ["183", "171"], ["19", "171"], ["195", "217"], ["19", "96"], ["65", "96"], ["19", "99"], ["72", "99"], ["130", "153"], ["177", "153"], ["204", "153"], ["19", "153"], ["155", "153"], ["155", "153"], ["19", "165"], ["136", "165"], ["108", "217"], ["19", "217"], ["19", "155"], ["145", "155"], ["176", "175"], ["176", "175"], ["183", "175"], ["183", "175"], ["177", "176"], ["177", "176"], ["19", "176"], ["179", "183"], ["19", "183"], ["155", "183"], ["206", "183"], ["153", "177"], ["204", "177"], ["19", "177"], ["179", "177"], ["179", "177"], ["19", "179"], ["168", "179"], ["177", "204"], ["19", "204"], ["206", "204"], ["206", "204"], ["19", "206"], ["155", "206"], ["183", "206"], ["58", "68"], ["58", "96"], ["58", "75"], ["58", "84"], ["58", "102"], ["58", "85"], ["58", "67"], ["58", "74"], ["58", "95"], ["58", "92"], ["58", "91"], ["58", "93"], ["58", "79"], ["58", "80"], ["58", "58"], ["58", "61"], ["58", "86"], ["58", "99"], ["58", "72"], ["58", "65"], ["58", "78"], ["116", "136"], ["116", "145"], ["116", "132"], ["116", "121"], ["116", "129"], ["116", "130"], ["116", "118"], ["116", "116"], ["116", "142"], ["116", "140"], ["116", "125"], ["136", "136"], ["145", "145"], ["145", "153"], ["145", "148"], ["145", "152"], ["145", "155"], ["152", "163"], ["152", "168"], ["152", "212"], ["152", "165"], ["152", "211"], ["168", "179"], ["168", "168"], ["168", "171"], ["168", "176"], ["168", "177"], ["168", "175"], ["211", "217"], ["211", "220"], ["211", "219"], ["175", "189"], ["175", "190"], ["189", "196"], ["189", "197"], ["189", "204"], ["189", "206"], ["189", "195"], ["189", "202"], ["189", "201"], ["176", "183"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] map: boolean[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,map,boolean[][] map = new boolean[n][n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "45": "<(LOCAL,long[][] dp: long[][])<SUB>6</SUB>>", "47": "<(IDENTIFIER,dp,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int a = sc.nextInt() - 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>8</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "71": "<(LOCAL,int b: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,b,int b = sc.nextInt() - 1)<SUB>9</SUB>>", "75": "<(nextInt,nextInt())<SUB>9</SUB>>", "77": "<(LITERAL,1,sc.nextInt() - 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,map[a][b])<SUB>10</SUB>>", "81": "<(IDENTIFIER,map,map[a][b] = map[b][a] = true)<SUB>10</SUB>>", "83": "<(IDENTIFIER,b,map[a][b] = map[b][a] = true)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,map[b][a])<SUB>10</SUB>>", "87": "<(IDENTIFIER,map,map[b][a] = true)<SUB>10</SUB>>", "89": "<(IDENTIFIER,a,map[b][a] = true)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,dp[(1 &lt;&lt; a) + (1 &lt;&lt; b)][Math.max(a, b)] = 1)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; a) + (1 &lt;&lt; b)])<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.addition,(1 &lt;&lt; a) + (1 &lt;&lt; b))<SUB>11</SUB>>", "97": "<(LITERAL,1,1 &lt;&lt; a)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>11</SUB>>", "101": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>11</SUB>>", "103": "<(IDENTIFIER,Math,Math.max(a, b))<SUB>11</SUB>>", "105": "<(IDENTIFIER,b,Math.max(a, b))<SUB>11</SUB>>", "107": "<(LOCAL,long ans: long)<SUB>13</SUB>>", "109": "<(IDENTIFIER,ans,long ans = 0)<SUB>13</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>14</SUB>>", "115": "<(LITERAL,1,int mask = 1)<SUB>14</SUB>>", "117": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>14</SUB>>", "119": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>14</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,int lowbit = 0)<SUB>15</SUB>>", "127": "<(LITERAL,0,int lowbit = 0)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; lowbit)) == 0)<SUB>16</SUB>>", "131": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; lowbit))<SUB>16</SUB>>", "133": "<(LITERAL,1,1 &lt;&lt; lowbit)<SUB>16</SUB>>", "135": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; lowbit)) == 0)<SUB>16</SUB>>", "137": "<(IDENTIFIER,lowbit,lowbit++)<SUB>16</SUB>>", "139": "<(LOCAL,int i: int)<SUB>17</SUB>>", "141": "<(IDENTIFIER,i,int i = lowbit + 1)<SUB>17</SUB>>", "143": "<(IDENTIFIER,lowbit,lowbit + 1)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "147": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "149": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "151": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) == 0),if ((mask &amp; (1 &lt;&lt; i)) == 0))<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>18</SUB>>", "157": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>18</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int j = lowbit + 1; Some(j &lt; n); j++),for (int j = lowbit + 1; Some(j &lt; n); j++))<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.assignment,int j = lowbit + 1)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.addition,lowbit + 1)<SUB>21</SUB>>", "167": "<(LITERAL,1,lowbit + 1)<SUB>21</SUB>>", "169": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.logicalOr,(mask &amp; (1 &lt;&lt; j)) == 0 || j == i)<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; j))<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>22</SUB>>", "181": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.equals,j == i)<SUB>22</SUB>>", "185": "<(IDENTIFIER,i,j == i)<SUB>22</SUB>>", "187": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>23</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,map[i][j])<SUB>25</SUB>>", "191": "<(IDENTIFIER,map,if (map[i][j]))<SUB>25</SUB>>", "193": "<(IDENTIFIER,j,if (map[i][j]))<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>26</SUB>>", "199": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)][j])<SUB>26</SUB>>", "203": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>26</SUB>>", "205": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; i))<SUB>26</SUB>>", "207": "<(LITERAL,1,1 &lt;&lt; i)<SUB>26</SUB>>", "209": "<(IDENTIFIER,j,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,map[lowbit][i])<SUB>29</SUB>>", "213": "<(IDENTIFIER,map,if (map[lowbit][i]))<SUB>29</SUB>>", "215": "<(IDENTIFIER,i,if (map[lowbit][i]))<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.assignmentPlus,ans += dp[mask][i])<SUB>30</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>30</SUB>>", "221": "<(IDENTIFIER,dp,ans += dp[mask][i])<SUB>30</SUB>>", "223": "<(IDENTIFIER,i,ans += dp[mask][i])<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "227": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "229": "<(&lt;operator&gt;.subtraction,ans - m)<SUB>34</SUB>>", "231": "<(IDENTIFIER,m,ans - m)<SUB>34</SUB>>", "233": "<(close,close())<SUB>35</SUB>>", "235": "<(MODIFIER,PUBLIC)>", "237": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}