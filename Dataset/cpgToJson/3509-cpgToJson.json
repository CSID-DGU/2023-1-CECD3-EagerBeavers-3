{"edges": [["21", "22"], ["21", "23"], ["21", "184"], ["21", "185"], ["21", "186"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "182"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "45"], ["41", "42"], ["41", "44"], ["42", "43"], ["45", "46"], ["45", "50"], ["45", "54"], ["45", "59"], ["45", "61"], ["45", "68"], ["45", "151"], ["45", "152"], ["45", "155"], ["45", "179"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "67"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "100"], ["90", "102"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["102", "103"], ["102", "138"], ["103", "104"], ["103", "115"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "137"], ["116", "117"], ["116", "130"], ["117", "118"], ["117", "129"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "150"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "149"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "178"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "181"], ["182", "183"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "36"], ["36", "42"], ["182", "186"], ["26", "24"], ["30", "28"], ["32", "31"], ["41", "48"], ["41", "182"], ["34", "32"], ["42", "41"], ["46", "52"], ["50", "56"], ["54", "59"], ["59", "63"], ["61", "70"], ["152", "157"], ["179", "42"], ["48", "46"], ["52", "50"], ["56", "54"], ["62", "61"], ["70", "73"], ["73", "81"], ["73", "152"], ["76", "73"], ["157", "160"], ["160", "174"], ["160", "179"], ["163", "160"], ["63", "62"], ["166", "163"], ["81", "84"], ["84", "92"], ["84", "76"], ["87", "84"], ["168", "166"], ["169", "168"], ["92", "96"], ["95", "108"], ["95", "87"], ["100", "96"], ["171", "169"], ["96", "95"], ["103", "143"], ["138", "100"], ["172", "171"], ["104", "120"], ["115", "103"], ["139", "138"], ["174", "172"], ["105", "112"], ["112", "104"], ["116", "115"], ["140", "147"], ["147", "139"], ["107", "105"], ["117", "133"], ["130", "116"], ["142", "140"], ["108", "107"], ["118", "117"], ["131", "130"], ["143", "142"], ["119", "126"], ["124", "118"], ["133", "131"], ["120", "119"], ["126", "124"], ["21", "26"], ["22", "186"], ["24", "186"], ["27", "186"], ["27", "186"], ["28", "186"], ["31", "186"], ["31", "186"], ["36", "186"], ["42", "186"], ["41", "186"], ["41", "186"], ["182", "186"], ["182", "186"], ["46", "186"], ["46", "186"], ["50", "186"], ["52", "186"], ["50", "186"], ["50", "186"], ["54", "186"], ["56", "186"], ["54", "186"], ["54", "186"], ["59", "186"], ["61", "186"], ["61", "186"], ["73", "186"], ["152", "186"], ["157", "186"], ["160", "186"], ["160", "186"], ["160", "186"], ["179", "186"], ["179", "186"], ["169", "186"], ["168", "186"], ["168", "186"], ["166", "186"], ["166", "186"], ["163", "186"], ["81", "186"], ["84", "186"], ["84", "186"], ["76", "186"], ["92", "186"], ["96", "186"], ["95", "186"], ["95", "186"], ["87", "186"], ["118", "186"], ["118", "186"], ["117", "186"], ["116", "186"], ["116", "186"], ["115", "186"], ["103", "186"], ["103", "186"], ["138", "186"], ["138", "186"], ["100", "186"], ["59", "186"], ["21", "22"], ["21", "24"], ["21", "28"], ["21", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "182"], ["179", "182"], ["21", "182"], ["42", "41"], ["21", "41"], ["48", "46"], ["52", "50"], ["56", "54"], ["21", "61"], ["21", "152"], ["36", "42"], ["21", "42"], ["21", "59"], ["21", "70"], ["21", "157"], ["31", "179"], ["21", "179"], ["152", "179"], ["166", "179"], ["27", "48"], ["52", "48"], ["21", "48"], ["48", "52"], ["21", "52"], ["21", "56"], ["70", "73"], ["76", "73"], ["21", "73"], ["46", "73"], ["95", "73"], ["84", "76"], ["21", "76"], ["157", "160"], ["163", "160"], ["21", "160"], ["73", "160"], ["160", "163"], ["21", "163"], ["168", "166"], ["168", "166"], ["21", "81"], ["81", "84"], ["87", "84"], ["21", "84"], ["73", "84"], ["84", "87"], ["21", "87"], ["152", "168"], ["166", "168"], ["21", "168"], ["50", "168"], ["115", "168"], ["21", "92"], ["152", "169"], ["166", "169"], ["21", "169"], ["84", "95"], ["21", "95"], ["92", "95"], ["100", "95"], ["73", "95"], ["21", "100"], ["126", "100"], ["115", "103"], ["115", "103"], ["115", "138"], ["21", "138"], ["84", "96"], ["21", "96"], ["92", "96"], ["100", "96"], ["138", "103"], ["103", "138"], ["116", "115"], ["116", "115"], ["117", "115"], ["21", "115"], ["160", "174"], ["21", "174"], ["84", "112"], ["21", "112"], ["92", "112"], ["100", "112"], ["117", "116"], ["117", "116"], ["21", "147"], ["84", "147"], ["126", "147"], ["21", "107"], ["92", "107"], ["100", "107"], ["118", "117"], ["118", "117"], ["50", "117"], ["21", "117"], ["115", "117"], ["21", "142"], ["126", "142"], ["21", "108"], ["92", "108"], ["100", "108"], ["21", "143"], ["126", "143"], ["21", "133"], ["84", "133"], ["126", "133"], ["21", "126"], ["92", "126"], ["100", "126"], ["41", "73"], ["41", "42"], ["41", "52"], ["41", "179"], ["41", "56"], ["41", "50"], ["41", "59"], ["41", "54"], ["41", "61"], ["41", "152"], ["41", "70"], ["41", "160"], ["41", "48"], ["41", "46"], ["41", "157"], ["41", "41"], ["41", "63"], ["41", "62"], ["73", "73"], ["73", "81"], ["73", "84"], ["73", "76"], ["160", "169"], ["160", "163"], ["160", "168"], ["160", "174"], ["160", "171"], ["160", "160"], ["160", "166"], ["160", "172"], ["84", "96"], ["84", "84"], ["84", "95"], ["84", "92"], ["84", "87"], ["95", "107"], ["95", "115"], ["95", "96"], ["95", "120"], ["95", "131"], ["95", "103"], ["95", "104"], ["95", "119"], ["95", "95"], ["95", "112"], ["95", "138"], ["95", "130"], ["95", "118"], ["95", "100"], ["95", "139"], ["95", "108"], ["95", "116"], ["95", "142"], ["95", "140"], ["95", "143"], ["95", "126"], ["95", "105"], ["95", "147"], ["95", "117"], ["95", "124"], ["95", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int tt: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,tt,int tt = 1)<SUB>5</SUB>>", "39": "<(JUMP_TARGET,outer)>", "41": "<(&lt;operator&gt;.greaterThan,tt-- &gt; 0)<SUB>7</SUB>>", "43": "<(IDENTIFIER,tt,tt--)<SUB>7</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "47": "<(IDENTIFIER,n,n = nextInt())<SUB>9</SUB>>", "49": "<(IDENTIFIER,fs,nextInt())<SUB>9</SUB>>", "51": "<(IDENTIFIER,mod,mod = nextLong())<SUB>10</SUB>>", "53": "<(IDENTIFIER,fs,nextLong())<SUB>10</SUB>>", "55": "<(IDENTIFIER,dp,dp = new long[N][N])<SUB>12</SUB>>", "57": "<(IDENTIFIER,N,new long[N][N])<SUB>12</SUB>>", "59": "<(precompute,precompute())<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>15</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>15</SUB>>", "65": "<(LITERAL,0,dp[0][0] = 1)<SUB>15</SUB>>", "67": "<(LITERAL,1,dp[0][0] = 1)<SUB>15</SUB>>", "69": "<(LOCAL,int i: int)<SUB>17</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= i); j++),for (int j = 0; Some(j &lt;= i); j++))<SUB>18</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "85": "<(IDENTIFIER,j,j &lt;= i)<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "91": "<(LOCAL,int k: int)<SUB>19</SUB>>", "93": "<(IDENTIFIER,k,int k = 1)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.lessEqualsThan,i + k &lt;= n)<SUB>19</SUB>>", "97": "<(IDENTIFIER,i,i + k)<SUB>19</SUB>>", "99": "<(IDENTIFIER,n,i + k &lt;= n)<SUB>19</SUB>>", "101": "<(IDENTIFIER,k,k++)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignmentPlus,dp[i + k + 1][j + k] += (((dp[i][j] * pow[k - 1]) % mod) * C[j + k][k]) % mod)<SUB>20</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1])<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.addition,i + k + 1)<SUB>20</SUB>>", "109": "<(IDENTIFIER,i,i + k)<SUB>20</SUB>>", "111": "<(LITERAL,1,i + k + 1)<SUB>20</SUB>>", "113": "<(IDENTIFIER,j,j + k)<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.modulo,(((dp[i][j] * pow[k - 1]) % mod) * C[j + k][k]) % mod)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.modulo,(dp[i][j] * pow[k - 1]) % mod)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>20</SUB>>", "121": "<(IDENTIFIER,dp,dp[i][j] * pow[k - 1])<SUB>20</SUB>>", "123": "<(IDENTIFIER,j,dp[i][j] * pow[k - 1])<SUB>20</SUB>>", "125": "<(IDENTIFIER,pow,dp[i][j] * pow[k - 1])<SUB>20</SUB>>", "127": "<(IDENTIFIER,k,k - 1)<SUB>20</SUB>>", "129": "<(IDENTIFIER,mod,(dp[i][j] * pow[k - 1]) % mod)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,C[j + k])<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.addition,j + k)<SUB>20</SUB>>", "135": "<(IDENTIFIER,k,j + k)<SUB>20</SUB>>", "137": "<(IDENTIFIER,mod,(((dp[i][j] * pow[k - 1]) % mod) * C[j + k][k]) % mod)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1][j + k])<SUB>21</SUB>>", "141": "<(IDENTIFIER,dp,dp[i + k + 1][j + k] %= mod)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.addition,i + k)<SUB>21</SUB>>", "145": "<(IDENTIFIER,k,i + k)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.addition,j + k)<SUB>21</SUB>>", "149": "<(IDENTIFIER,k,j + k)<SUB>21</SUB>>", "151": "<(LOCAL,long ans: long)<SUB>26</SUB>>", "153": "<(IDENTIFIER,ans,long ans = 0)<SUB>26</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); i++),for (int i = 0; Some(i &lt;= n); i++))<SUB>27</SUB>>", "157": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "159": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "161": "<(IDENTIFIER,i,i &lt;= n)<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "167": "<(IDENTIFIER,ans,ans = (ans + dp[n + 1][i]) % mod)<SUB>28</SUB>>", "169": "<(&lt;operator&gt;.addition,ans + dp[n + 1][i])<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[n + 1][i])<SUB>28</SUB>>", "173": "<(IDENTIFIER,dp,ans + dp[n + 1][i])<SUB>28</SUB>>", "175": "<(IDENTIFIER,n,n + 1)<SUB>28</SUB>>", "177": "<(IDENTIFIER,i,ans + dp[n + 1][i])<SUB>28</SUB>>", "179": "<(println,println(ans))<SUB>31</SUB>>", "181": "<(IDENTIFIER,ans,println(ans))<SUB>31</SUB>>", "183": "<(IDENTIFIER,out,close())<SUB>38</SUB>>", "185": "<(MODIFIER,STATIC)>"}}