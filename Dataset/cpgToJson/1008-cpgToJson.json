{"edges": [["19", "20"], ["19", "21"], ["19", "100"], ["19", "101"], ["19", "102"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "35"], ["21", "36"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "64"], ["21", "65"], ["21", "74"], ["21", "75"], ["21", "85"], ["21", "86"], ["21", "93"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "45"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "51"], ["45", "54"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["79", "82"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["22", "25"], ["25", "29"], ["27", "32"], ["32", "36"], ["36", "42"], ["57", "68"], ["65", "78"], ["75", "90"], ["86", "96"], ["93", "102"], ["24", "22"], ["29", "27"], ["40", "48"], ["40", "60"], ["59", "57"], ["67", "65"], ["77", "75"], ["88", "86"], ["94", "97"], ["97", "93"], ["42", "40"], ["46", "51"], ["51", "54"], ["54", "42"], ["60", "59"], ["68", "70"], ["69", "67"], ["78", "82"], ["79", "77"], ["90", "88"], ["96", "94"], ["48", "46"], ["70", "69"], ["82", "79"], ["19", "24"], ["20", "102"], ["22", "102"], ["25", "102"], ["29", "102"], ["27", "102"], ["27", "102"], ["32", "102"], ["36", "102"], ["42", "102"], ["40", "102"], ["40", "102"], ["57", "102"], ["57", "102"], ["70", "102"], ["69", "102"], ["67", "102"], ["65", "102"], ["65", "102"], ["82", "102"], ["79", "102"], ["77", "102"], ["75", "102"], ["75", "102"], ["90", "102"], ["90", "102"], ["88", "102"], ["86", "102"], ["86", "102"], ["93", "102"], ["97", "102"], ["97", "102"], ["93", "102"], ["93", "102"], ["46", "102"], ["51", "102"], ["54", "102"], ["88", "102"], ["79", "102"], ["19", "20"], ["19", "22"], ["29", "27"], ["19", "32"], ["19", "36"], ["59", "57"], ["59", "57"], ["19", "65"], ["69", "65"], ["69", "65"], ["19", "75"], ["79", "75"], ["79", "75"], ["79", "75"], ["88", "86"], ["88", "86"], ["22", "25"], ["19", "25"], ["97", "93"], ["97", "93"], ["25", "29"], ["19", "29"], ["27", "40"], ["46", "40"], ["19", "40"], ["42", "40"], ["42", "40"], ["48", "46"], ["48", "46"], ["19", "51"], ["60", "59"], ["60", "59"], ["42", "59"], ["19", "59"], ["19", "67"], ["69", "67"], ["69", "67"], ["19", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["19", "88"], ["75", "88"], ["57", "88"], ["86", "97"], ["19", "97"], ["65", "97"], ["32", "42"], ["51", "42"], ["19", "42"], ["36", "42"], ["54", "42"], ["40", "46"], ["19", "46"], ["48", "51"], ["48", "54"], ["19", "54"], ["40", "60"], ["19", "60"], ["70", "69"], ["70", "69"], ["59", "69"], ["19", "69"], ["19", "79"], ["82", "79"], ["82", "79"], ["75", "90"], ["19", "90"], ["57", "90"], ["42", "48"], ["19", "48"], ["42", "48"], ["60", "70"], ["19", "70"], ["69", "82"], ["19", "82"], ["40", "40"], ["40", "48"], ["40", "42"], ["40", "51"], ["40", "46"], ["40", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long K = nextLong())<SUB>3</SUB>>", "29": "<(nextLong,nextLong())<SUB>3</SUB>>", "31": "<(LOCAL,long nums: long)<SUB>4</SUB>>", "33": "<(IDENTIFIER,nums,long nums = 9)<SUB>4</SUB>>", "35": "<(LOCAL,int digits: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,digits,int digits = 1)<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,while (K &gt; nums * digits),while (K &gt; nums * digits))<SUB>6</SUB>>", "41": "<(IDENTIFIER,K,K &gt; nums * digits)<SUB>6</SUB>>", "43": "<(IDENTIFIER,nums,nums * digits)<SUB>6</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "47": "<(IDENTIFIER,K,K -= nums * digits)<SUB>7</SUB>>", "49": "<(IDENTIFIER,nums,nums * digits)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignmentMultiplication,nums *= 10)<SUB>8</SUB>>", "53": "<(LITERAL,10,nums *= 10)<SUB>8</SUB>>", "55": "<(IDENTIFIER,digits,digits++)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,long removal = (K - 1) / digits)<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.division,(K - 1) / digits)<SUB>11</SUB>>", "61": "<(IDENTIFIER,K,K - 1)<SUB>11</SUB>>", "63": "<(IDENTIFIER,digits,(K - 1) / digits)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,int pos = (int) ((K - 1) % digits))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.cast,(int) ((K - 1) % digits))<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.modulo,(K - 1) % digits)<SUB>12</SUB>>", "71": "<(IDENTIFIER,K,K - 1)<SUB>12</SUB>>", "73": "<(IDENTIFIER,digits,(K - 1) % digits)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,long base = (long) Math.pow(10, digits - 1))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.cast,(long) Math.pow(10, digits - 1))<SUB>13</SUB>>", "79": "<(pow,Math.pow(10, digits - 1))<SUB>13</SUB>>", "81": "<(LITERAL,10,Math.pow(10, digits - 1))<SUB>13</SUB>>", "83": "<(IDENTIFIER,digits,digits - 1)<SUB>13</SUB>>", "85": "<(LOCAL,String num: java.lang.String)<SUB>14</SUB>>", "87": "<(IDENTIFIER,num,String num = Long.toString(base + removal))<SUB>14</SUB>>", "89": "<(IDENTIFIER,Long,Long.toString(base + removal))<SUB>14</SUB>>", "91": "<(IDENTIFIER,base,base + removal)<SUB>14</SUB>>", "93": "<(println,System.out.println(num.charAt(pos)))<SUB>15</SUB>>", "95": "<(IDENTIFIER,System,System.out.println(num.charAt(pos)))<SUB>15</SUB>>", "97": "<(charAt,num.charAt(pos))<SUB>15</SUB>>", "99": "<(IDENTIFIER,pos,num.charAt(pos))<SUB>15</SUB>>", "101": "<(MODIFIER,STATIC)>"}}