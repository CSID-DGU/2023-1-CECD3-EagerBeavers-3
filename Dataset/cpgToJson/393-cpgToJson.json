{"edges": [["19", "20"], ["19", "21"], ["19", "280"], ["19", "281"], ["19", "282"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "45"], ["21", "47"], ["21", "51"], ["21", "55"], ["21", "78"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "72"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "82"], ["78", "139"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "109"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "106"], ["98", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "112"], ["109", "117"], ["110", "111"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["140", "141"], ["140", "145"], ["140", "233"], ["140", "253"], ["140", "258"], ["140", "277"], ["141", "142"], ["141", "143"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["155", "159"], ["155", "160"], ["156", "157"], ["156", "158"], ["160", "161"], ["161", "162"], ["162", "163"], ["162", "179"], ["162", "183"], ["163", "164"], ["163", "171"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["184", "185"], ["184", "201"], ["184", "205"], ["185", "186"], ["185", "194"], ["186", "187"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["206", "207"], ["206", "224"], ["207", "208"], ["207", "216"], ["208", "209"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "230"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["243", "247"], ["243", "248"], ["244", "245"], ["244", "246"], ["248", "249"], ["249", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "266"], ["258", "268"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "279"], ["22", "28"], ["25", "32"], ["30", "36"], ["34", "40"], ["38", "44"], ["42", "45"], ["45", "49"], ["47", "53"], ["51", "57"], ["24", "22"], ["26", "25"], ["32", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["49", "47"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "79"], ["63", "60"], ["79", "84"], ["79", "143"], ["28", "26"], ["66", "74"], ["72", "63"], ["84", "89"], ["67", "70"], ["70", "66"], ["74", "72"], ["89", "92"], ["92", "103"], ["92", "110"], ["95", "92"], ["110", "115"], ["110", "122"], ["112", "282"], ["141", "147"], ["253", "260"], ["277", "282"], ["98", "106"], ["98", "95"], ["106", "95"], ["113", "112"], ["143", "141"], ["147", "150"], ["150", "156"], ["150", "235"], ["153", "150"], ["235", "238"], ["238", "244"], ["238", "256"], ["241", "238"], ["254", "253"], ["260", "263"], ["263", "271"], ["263", "277"], ["266", "263"], ["268", "266"], ["99", "98"], ["115", "113"], ["119", "126"], ["156", "153"], ["156", "168"], ["244", "241"], ["244", "250"], ["256", "254"], ["269", "273"], ["272", "268"], ["101", "99"], ["120", "119"], ["126", "129"], ["129", "282"], ["129", "137"], ["132", "129"], ["134", "132"], ["271", "269"], ["273", "272"], ["103", "101"], ["122", "120"], ["135", "134"], ["250", "241"], ["137", "135"], ["163", "180"], ["163", "191"], ["164", "163"], ["164", "176"], ["171", "163"], ["180", "153"], ["166", "164"], ["172", "171"], ["185", "202"], ["185", "213"], ["168", "166"], ["174", "172"], ["186", "185"], ["186", "198"], ["194", "185"], ["202", "153"], ["176", "174"], ["187", "186"], ["196", "194"], ["207", "228"], ["207", "153"], ["189", "187"], ["198", "196"], ["208", "207"], ["208", "221"], ["216", "207"], ["225", "230"], ["230", "153"], ["191", "189"], ["209", "208"], ["217", "216"], ["226", "225"], ["211", "209"], ["219", "217"], ["228", "226"], ["213", "211"], ["221", "219"], ["19", "24"], ["20", "282"], ["22", "282"], ["25", "282"], ["25", "282"], ["30", "282"], ["34", "282"], ["40", "282"], ["38", "282"], ["38", "282"], ["42", "282"], ["45", "282"], ["45", "282"], ["47", "282"], ["47", "282"], ["47", "282"], ["51", "282"], ["51", "282"], ["51", "282"], ["79", "282"], ["79", "282"], ["79", "282"], ["84", "282"], ["89", "282"], ["92", "282"], ["92", "282"], ["92", "282"], ["110", "282"], ["110", "282"], ["112", "282"], ["99", "282"], ["101", "282"], ["101", "282"], ["99", "282"], ["98", "282"], ["98", "282"], ["106", "282"], ["95", "282"], ["70", "282"], ["66", "282"], ["66", "282"], ["72", "282"], ["72", "282"], ["72", "282"], ["63", "282"], ["19", "20"], ["19", "22"], ["32", "30"], ["36", "34"], ["40", "38"], ["19", "42"], ["49", "47"], ["53", "51"], ["22", "25"], ["19", "25"], ["42", "45"], ["19", "45"], ["19", "57"], ["25", "32"], ["19", "32"], ["32", "36"], ["19", "36"], ["36", "40"], ["19", "40"], ["30", "49"], ["19", "49"], ["49", "53"], ["19", "53"], ["57", "60"], ["63", "60"], ["19", "60"], ["53", "60"], ["72", "63"], ["19", "63"], ["70", "66"], ["34", "79"], ["19", "79"], ["38", "79"], ["19", "84"], ["45", "72"], ["19", "72"], ["47", "72"], ["66", "72"], ["60", "72"], ["19", "89"], ["143", "141"], ["40", "70"], ["19", "70"], ["89", "92"], ["95", "92"], ["19", "92"], ["60", "92"], ["92", "95"], ["19", "95"], ["19", "106"], ["84", "110"], ["106", "110"], ["19", "110"], ["19", "112"], ["19", "147"], ["19", "235"], ["230", "253"], ["19", "253"], ["19", "260"], ["25", "277"], ["253", "277"], ["268", "277"], ["230", "277"], ["19", "277"], ["99", "98"], ["99", "98"], ["60", "143"], ["19", "143"], ["147", "150"], ["153", "150"], ["19", "150"], ["143", "150"], ["150", "153"], ["202", "153"], ["180", "153"], ["19", "153"], ["235", "238"], ["241", "238"], ["19", "238"], ["150", "238"], ["238", "241"], ["250", "241"], ["19", "241"], ["260", "263"], ["266", "263"], ["19", "263"], ["238", "263"], ["263", "266"], ["19", "266"], ["253", "268"], ["230", "268"], ["141", "268"], ["19", "268"], ["45", "99"], ["72", "99"], ["19", "99"], ["101", "99"], ["101", "99"], ["19", "119"], ["19", "126"], ["141", "272"], ["19", "272"], ["79", "101"], ["19", "101"], ["47", "101"], ["72", "101"], ["126", "129"], ["132", "129"], ["19", "129"], ["92", "129"], ["129", "132"], ["19", "132"], ["119", "134"], ["19", "134"], ["202", "250"], ["180", "250"], ["19", "250"], ["238", "250"], ["164", "163"], ["164", "163"], ["171", "163"], ["207", "163"], ["45", "164"], ["172", "164"], ["187", "164"], ["194", "164"], ["209", "164"], ["217", "164"], ["72", "164"], ["19", "164"], ["166", "164"], ["166", "164"], ["172", "171"], ["172", "171"], ["202", "180"], ["19", "180"], ["150", "180"], ["79", "166"], ["189", "166"], ["211", "166"], ["19", "166"], ["47", "166"], ["174", "166"], ["189", "166"], ["196", "166"], ["211", "166"], ["219", "166"], ["72", "166"], ["164", "172"], ["19", "172"], ["174", "172"], ["174", "172"], ["186", "185"], ["194", "185"], ["194", "185"], ["171", "185"], ["216", "185"], ["79", "174"], ["196", "174"], ["219", "174"], ["19", "174"], ["47", "174"], ["166", "174"], ["187", "186"], ["187", "186"], ["187", "194"], ["19", "194"], ["196", "194"], ["196", "194"], ["180", "202"], ["19", "202"], ["150", "202"], ["164", "187"], ["172", "187"], ["19", "187"], ["189", "187"], ["189", "187"], ["79", "196"], ["174", "196"], ["219", "196"], ["19", "196"], ["47", "196"], ["189", "196"], ["208", "207"], ["216", "207"], ["163", "207"], ["166", "189"], ["19", "189"], ["47", "189"], ["166", "189"], ["174", "189"], ["209", "208"], ["209", "208"], ["217", "216"], ["217", "216"], ["230", "225"], ["19", "225"], ["25", "230"], ["225", "230"], ["19", "230"], ["187", "209"], ["194", "209"], ["19", "209"], ["211", "209"], ["211", "209"], ["209", "217"], ["19", "217"], ["219", "217"], ["219", "217"], ["189", "211"], ["19", "211"], ["47", "211"], ["189", "211"], ["196", "211"], ["79", "219"], ["174", "219"], ["196", "219"], ["19", "219"], ["47", "219"], ["211", "219"], ["60", "60"], ["60", "67"], ["60", "74"], ["60", "70"], ["60", "66"], ["60", "72"], ["60", "63"], ["79", "84"], ["79", "150"], ["79", "92"], ["79", "256"], ["79", "238"], ["79", "277"], ["79", "141"], ["79", "89"], ["79", "235"], ["79", "260"], ["79", "253"], ["79", "143"], ["79", "254"], ["79", "263"], ["79", "147"], ["79", "110"], ["92", "98"], ["92", "103"], ["92", "95"], ["92", "92"], ["92", "101"], ["92", "99"], ["110", "115"], ["110", "120"], ["110", "113"], ["110", "119"], ["110", "112"], ["110", "129"], ["110", "122"], ["110", "126"], ["98", "106"], ["150", "150"], ["150", "153"], ["150", "156"], ["238", "244"], ["238", "238"], ["238", "241"], ["263", "273"], ["263", "272"], ["263", "268"], ["263", "263"], ["263", "271"], ["263", "269"], ["263", "266"], ["156", "163"], ["156", "168"], ["156", "164"], ["156", "166"], ["244", "250"], ["129", "132"], ["129", "129"], ["129", "134"], ["129", "137"], ["129", "135"], ["163", "185"], ["163", "189"], ["163", "191"], ["163", "187"], ["163", "186"], ["163", "180"], ["164", "174"], ["164", "171"], ["164", "176"], ["164", "172"], ["185", "209"], ["185", "213"], ["185", "208"], ["185", "207"], ["185", "202"], ["185", "211"], ["186", "196"], ["186", "198"], ["186", "194"], ["207", "230"], ["207", "225"], ["207", "226"], ["207", "228"], ["208", "221"], ["208", "217"], ["208", "216"], ["208", "219"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,n = nextInt())<SUB>6</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "35": "<(IDENTIFIER,a,a = nextInt())<SUB>7</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "39": "<(IDENTIFIER,b,b = nextInt())<SUB>8</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "43": "<(IDENTIFIER,hm,hm = new HashMap&lt;Integer, Integer&gt;())<SUB>10</SUB>>", "45": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>10</SUB>>", "47": "<(&lt;operator&gt;.assignment,array = new int[n])<SUB>11</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[n])>", "51": "<(&lt;operator&gt;.assignment,marked = new boolean[n])<SUB>12</SUB>>", "53": "<(&lt;operator&gt;.alloc,new boolean[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>14</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "63": "<(&lt;operator&gt;.preIncrement,++i)<SUB>14</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>16</SUB>>", "69": "<(IDENTIFIER,i,array[i] = nextInt())<SUB>16</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>16</SUB>>", "73": "<(IDENTIFIER,hm,put(array[i], i))<SUB>17</SUB>>", "75": "<(IDENTIFIER,array,put(array[i], i))<SUB>17</SUB>>", "77": "<(IDENTIFIER,i,put(array[i], i))<SUB>17</SUB>>", "79": "<(&lt;operator&gt;.equals,a == b)<SUB>20</SUB>>", "81": "<(IDENTIFIER,b,a == b)<SUB>20</SUB>>", "83": "<(LOCAL,boolean flag: boolean)<SUB>22</SUB>>", "85": "<(IDENTIFIER,flag,boolean flag = true)<SUB>22</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>23</SUB>>", "89": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "91": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "93": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "95": "<(&lt;operator&gt;.preIncrement,++i)<SUB>23</SUB>>", "97": "<(CONTROL_STRUCTURE,if (!hm.containsKey(a - array[i])),if (!hm.containsKey(a - array[i])))<SUB>24</SUB>>", "99": "<(containsKey,containsKey(a - array[i]))<SUB>24</SUB>>", "101": "<(&lt;operator&gt;.subtraction,a - array[i])<SUB>24</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>24</SUB>>", "105": "<(IDENTIFIER,i,a - array[i])<SUB>24</SUB>>", "107": "<(IDENTIFIER,flag,flag = false)<SUB>25</SUB>>", "109": "<(CONTROL_STRUCTURE,if (!flag),if (!flag))<SUB>27</SUB>>", "111": "<(IDENTIFIER,flag,!flag)<SUB>27</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "115": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "117": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "119": "<(println,System.out.println(&quot;YES&quot;))<SUB>31</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>31</SUB>>", "123": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>31</SUB>>", "125": "<(LOCAL,int i: int)<SUB>32</SUB>>", "127": "<(IDENTIFIER,i,int i = 0)<SUB>32</SUB>>", "129": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>32</SUB>>", "131": "<(IDENTIFIER,n,i &lt; n)<SUB>32</SUB>>", "133": "<(IDENTIFIER,i,++i)<SUB>32</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>38</SUB>>", "141": "<(&lt;operator&gt;.assignment,ans = new int[n])<SUB>40</SUB>>", "143": "<(&lt;operator&gt;.alloc,new int[n])>", "145": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>42</SUB>>", "147": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>42</SUB>>", "149": "<(LITERAL,0,int i = 0)<SUB>42</SUB>>", "151": "<(IDENTIFIER,i,i &lt; n)<SUB>42</SUB>>", "153": "<(&lt;operator&gt;.preIncrement,++i)<SUB>42</SUB>>", "155": "<(CONTROL_STRUCTURE,if (marked[i]),if (marked[i]))<SUB>43</SUB>>", "157": "<(IDENTIFIER,marked,if (marked[i]))<SUB>43</SUB>>", "159": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>43</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "163": "<(&lt;operator&gt;.logicalAnd,hm.containsKey(a - array[i]) &amp;&amp; !hm.containsKey(b - array[i]))<SUB>47</SUB>>", "165": "<(IDENTIFIER,hm,containsKey(a - array[i]))<SUB>47</SUB>>", "167": "<(IDENTIFIER,a,a - array[i])<SUB>47</SUB>>", "169": "<(IDENTIFIER,array,a - array[i])<SUB>47</SUB>>", "171": "<(&lt;operator&gt;.logicalNot,!hm.containsKey(b - array[i]))<SUB>47</SUB>>", "173": "<(IDENTIFIER,hm,containsKey(b - array[i]))<SUB>47</SUB>>", "175": "<(IDENTIFIER,b,b - array[i])<SUB>47</SUB>>", "177": "<(IDENTIFIER,array,b - array[i])<SUB>47</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "181": "<(IDENTIFIER,this,propagateA(i))<SUB>49</SUB>>", "183": "<(CONTROL_STRUCTURE,else,else)<SUB>52</SUB>>", "185": "<(&lt;operator&gt;.logicalAnd,!hm.containsKey(a - array[i]) &amp;&amp; hm.containsKey(b - array[i]))<SUB>52</SUB>>", "187": "<(containsKey,containsKey(a - array[i]))<SUB>52</SUB>>", "189": "<(&lt;operator&gt;.subtraction,a - array[i])<SUB>52</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>52</SUB>>", "193": "<(IDENTIFIER,i,a - array[i])<SUB>52</SUB>>", "195": "<(IDENTIFIER,hm,containsKey(b - array[i]))<SUB>52</SUB>>", "197": "<(IDENTIFIER,b,b - array[i])<SUB>52</SUB>>", "199": "<(IDENTIFIER,array,b - array[i])<SUB>52</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "203": "<(IDENTIFIER,this,propagateB(i))<SUB>55</SUB>>", "205": "<(CONTROL_STRUCTURE,else,else)<SUB>58</SUB>>", "207": "<(&lt;operator&gt;.logicalAnd,!hm.containsKey(a - array[i]) &amp;&amp; !hm.containsKey(b - array[i]))<SUB>58</SUB>>", "209": "<(containsKey,containsKey(a - array[i]))<SUB>58</SUB>>", "211": "<(&lt;operator&gt;.subtraction,a - array[i])<SUB>58</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>58</SUB>>", "215": "<(IDENTIFIER,i,a - array[i])<SUB>58</SUB>>", "217": "<(containsKey,containsKey(b - array[i]))<SUB>58</SUB>>", "219": "<(&lt;operator&gt;.subtraction,b - array[i])<SUB>58</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>58</SUB>>", "223": "<(IDENTIFIER,i,b - array[i])<SUB>58</SUB>>", "225": "<(println,System.out.println(&quot;NO&quot;))<SUB>60</SUB>>", "227": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>60</SUB>>", "229": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>60</SUB>>", "231": "<(IDENTIFIER,System,System.exit(0))<SUB>61</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>67</SUB>>", "235": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>67</SUB>>", "237": "<(LITERAL,0,int i = 0)<SUB>67</SUB>>", "239": "<(IDENTIFIER,i,i &lt; n)<SUB>67</SUB>>", "241": "<(&lt;operator&gt;.preIncrement,++i)<SUB>67</SUB>>", "243": "<(CONTROL_STRUCTURE,if (marked[i]),if (marked[i]))<SUB>68</SUB>>", "245": "<(IDENTIFIER,marked,if (marked[i]))<SUB>68</SUB>>", "247": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>68</SUB>>", "249": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>>", "251": "<(IDENTIFIER,this,start(i))<SUB>72</SUB>>", "253": "<(println,System.out.println(&quot;YES&quot;))<SUB>75</SUB>>", "255": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>75</SUB>>", "257": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>75</SUB>>", "259": "<(LOCAL,int i: int)<SUB>76</SUB>>", "261": "<(IDENTIFIER,i,int i = 0)<SUB>76</SUB>>", "263": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>76</SUB>>", "265": "<(IDENTIFIER,n,i &lt; n)<SUB>76</SUB>>", "267": "<(IDENTIFIER,i,++i)<SUB>76</SUB>>", "269": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>77</SUB>>", "271": "<(FIELD_IDENTIFIER,out,out)<SUB>77</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>77</SUB>>", "275": "<(IDENTIFIER,i,ans[i] + &quot; &quot;)<SUB>77</SUB>>", "277": "<(exit,System.exit(0))<SUB>78</SUB>>", "279": "<(LITERAL,0,System.exit(0))<SUB>78</SUB>>", "281": "<(MODIFIER,STATIC)>"}}