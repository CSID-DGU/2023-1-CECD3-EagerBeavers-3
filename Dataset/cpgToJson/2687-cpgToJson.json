{"edges": [["21", "22"], ["21", "23"], ["21", "144"], ["21", "145"], ["21", "146"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "75"], ["23", "78"], ["23", "79"], ["23", "83"], ["23", "84"], ["23", "87"], ["23", "139"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "103"], ["99", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "137"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "112"], ["104", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["115", "116"], ["115", "120"], ["116", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["121", "122"], ["121", "131"], ["122", "123"], ["122", "130"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["131", "132"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "49"], ["48", "54"], ["52", "58"], ["75", "81"], ["79", "84"], ["84", "89"], ["139", "146"], ["26", "24"], ["41", "39"], ["47", "45"], ["49", "48"], ["54", "52"], ["58", "61"], ["61", "68"], ["61", "75"], ["64", "61"], ["81", "79"], ["89", "92"], ["92", "100"], ["92", "142"], ["95", "92"], ["140", "139"], ["29", "36"], ["32", "27"], ["43", "41"], ["67", "64"], ["142", "140"], ["31", "29"], ["34", "32"], ["68", "73"], ["71", "67"], ["99", "106"], ["99", "95"], ["36", "34"], ["73", "71"], ["100", "99"], ["137", "95"], ["106", "109"], ["109", "117"], ["109", "137"], ["112", "109"], ["116", "124"], ["116", "112"], ["117", "116"], ["122", "133"], ["122", "112"], ["123", "122"], ["132", "112"], ["124", "127"], ["127", "123"], ["133", "132"], ["21", "26"], ["22", "146"], ["24", "146"], ["29", "146"], ["32", "146"], ["32", "146"], ["32", "146"], ["27", "146"], ["41", "146"], ["39", "146"], ["39", "146"], ["45", "146"], ["48", "146"], ["49", "146"], ["48", "146"], ["48", "146"], ["52", "146"], ["52", "146"], ["75", "146"], ["75", "146"], ["79", "146"], ["79", "146"], ["79", "146"], ["84", "146"], ["89", "146"], ["92", "146"], ["92", "146"], ["92", "146"], ["139", "146"], ["139", "146"], ["139", "146"], ["99", "146"], ["99", "146"], ["106", "146"], ["109", "146"], ["109", "146"], ["137", "146"], ["95", "146"], ["116", "146"], ["116", "146"], ["123", "146"], ["123", "146"], ["122", "146"], ["122", "146"], ["132", "146"], ["132", "146"], ["112", "146"], ["67", "146"], ["71", "146"], ["73", "146"], ["71", "146"], ["67", "146"], ["67", "146"], ["64", "146"], ["75", "146"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["54", "52"], ["81", "79"], ["21", "84"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["49", "48"], ["21", "58"], ["21", "75"], ["52", "75"], ["67", "75"], ["21", "89"], ["84", "139"], ["137", "139"], ["21", "139"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["43", "49"], ["21", "49"], ["39", "54"], ["21", "54"], ["58", "61"], ["64", "61"], ["21", "61"], ["54", "61"], ["61", "64"], ["21", "64"], ["71", "67"], ["71", "67"], ["61", "81"], ["21", "81"], ["89", "92"], ["95", "92"], ["21", "92"], ["81", "92"], ["109", "92"], ["92", "95"], ["21", "95"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["41", "71"], ["21", "71"], ["73", "71"], ["79", "99"], ["48", "73"], ["21", "73"], ["92", "106"], ["21", "106"], ["84", "137"], ["21", "137"], ["106", "109"], ["112", "109"], ["21", "109"], ["92", "109"], ["109", "112"], ["21", "112"], ["79", "116"], ["132", "116"], ["123", "122"], ["123", "122"], ["21", "122"], ["21", "132"], ["75", "123"], ["67", "123"], ["61", "68"], ["61", "73"], ["61", "64"], ["61", "67"], ["61", "61"], ["61", "71"], ["92", "99"], ["92", "95"], ["92", "92"], ["92", "100"], ["99", "106"], ["99", "137"], ["99", "109"], ["109", "116"], ["109", "112"], ["109", "117"], ["109", "109"], ["116", "122"], ["116", "123"], ["116", "127"], ["116", "124"], ["122", "132"], ["122", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(LOCAL,int n: int)<SUB>5</SUB>>", "40": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>5</SUB>>", "42": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>5</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "46": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "48": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "49": "<(readLine,readLine())<SUB>6</SUB>>", "51": "<(LOCAL,int[] a: int[])<SUB>7</SUB>>", "53": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "57": "<(LOCAL,int i: int)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,a[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "69": "<(IDENTIFIER,a,a[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "71": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "73": "<(nextToken,nextToken())<SUB>9</SUB>>", "75": "<(sort,sort(a))<SUB>12</SUB>>", "77": "<(IDENTIFIER,a,sort(a))<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,boolean[] vis = new boolean[n])<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.alloc,new boolean[n])>", "83": "<(LOCAL,int count: int)<SUB>15</SUB>>", "85": "<(IDENTIFIER,count,int count = 0)<SUB>15</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "91": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "93": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.logicalNot,!vis[i])<SUB>17</SUB>>", "101": "<(IDENTIFIER,vis,!vis[i])<SUB>17</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "105": "<(LOCAL,int j: int)<SUB>18</SUB>>", "107": "<(IDENTIFIER,j,int j = i)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>18</SUB>>", "111": "<(IDENTIFIER,n,j &lt; n)<SUB>18</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "115": "<(CONTROL_STRUCTURE,if (!vis[j]),if (!vis[j]))<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,vis[j])<SUB>19</SUB>>", "119": "<(IDENTIFIER,j,!vis[j])<SUB>19</SUB>>", "121": "<(CONTROL_STRUCTURE,if (a[j] % a[i] == 0),if (a[j] % a[i] == 0))<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.modulo,a[j] % a[i])<SUB>20</SUB>>", "125": "<(IDENTIFIER,a,a[j] % a[i])<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>20</SUB>>", "129": "<(IDENTIFIER,i,a[j] % a[i])<SUB>20</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,vis[j])<SUB>21</SUB>>", "135": "<(IDENTIFIER,j,vis[j] = true)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,count++)<SUB>25</SUB>>", "139": "<(println,System.out.println(count))<SUB>29</SUB>>", "141": "<(IDENTIFIER,System,System.out.println(count))<SUB>29</SUB>>", "143": "<(IDENTIFIER,count,System.out.println(count))<SUB>29</SUB>>", "145": "<(MODIFIER,STATIC)>"}}