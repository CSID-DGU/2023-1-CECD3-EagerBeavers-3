{"edges": [["22", "24"], ["22", "359"], ["22", "360"], ["22", "361"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "51"], ["24", "57"], ["24", "63"], ["24", "66"], ["24", "69"], ["24", "73"], ["24", "77"], ["24", "103"], ["24", "106"], ["24", "149"], ["24", "192"], ["24", "281"], ["24", "282"], ["24", "286"], ["24", "328"], ["24", "333"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["63", "65"], ["66", "7"], ["66", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "96"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "114"], ["106", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "128"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["120", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "141"], ["133", "134"], ["133", "135"], ["133", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "171"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["163", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "184"], ["176", "177"], ["176", "178"], ["176", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "211"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["215", "216"], ["216", "217"], ["216", "226"], ["216", "235"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["236", "237"], ["236", "247"], ["236", "260"], ["237", "238"], ["237", "243"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "255"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["260", "261"], ["261", "262"], ["261", "272"], ["262", "263"], ["262", "269"], ["263", "264"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["282", "283"], ["282", "284"], ["284", "285"], ["286", "287"], ["286", "288"], ["286", "291"], ["286", "294"], ["286", "296"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "293"], ["294", "295"], ["296", "297"], ["297", "298"], ["297", "303"], ["297", "308"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["308", "309"], ["309", "310"], ["309", "315"], ["309", "320"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["320", "321"], ["321", "322"], ["321", "327"], ["322", "323"], ["322", "326"], ["323", "324"], ["323", "325"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "343"], ["333", "345"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["343", "344"], ["345", "346"], ["345", "347"], ["345", "352"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "351"], ["352", "353"], ["352", "356"], ["353", "354"], ["353", "355"], ["356", "357"], ["356", "358"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "49"], ["45", "55"], ["51", "61"], ["57", "65"], ["63", "67"], ["66", "71"], ["69", "75"], ["73", "79"], ["103", "108"], ["282", "288"], ["328", "335"], ["27", "25"], ["41", "39"], ["43", "42"], ["47", "45"], ["53", "51"], ["59", "57"], ["65", "63"], ["67", "66"], ["71", "69"], ["75", "73"], ["79", "82"], ["82", "89"], ["82", "103"], ["85", "82"], ["108", "111"], ["111", "125"], ["111", "151"], ["114", "111"], ["151", "154"], ["154", "168"], ["154", "194"], ["157", "154"], ["194", "197"], ["197", "208"], ["197", "284"], ["200", "197"], ["284", "282"], ["288", "291"], ["291", "300"], ["291", "331"], ["294", "291"], ["329", "328"], ["335", "342"], ["338", "361"], ["338", "349"], ["343", "342"], ["30", "37"], ["33", "28"], ["49", "47"], ["55", "53"], ["61", "59"], ["88", "97"], ["96", "85"], ["118", "129"], ["161", "172"], ["204", "212"], ["331", "329"], ["340", "338"], ["347", "355"], ["352", "343"], ["32", "30"], ["35", "33"], ["89", "94"], ["92", "88"], ["97", "100"], ["100", "96"], ["120", "118"], ["129", "135"], ["129", "114"], ["163", "161"], ["172", "178"], ["172", "157"], ["206", "204"], ["212", "220"], ["212", "200"], ["298", "304"], ["298", "312"], ["303", "294"], ["342", "340"], ["349", "347"], ["353", "356"], ["356", "352"], ["37", "35"], ["94", "92"], ["123", "120"], ["133", "143"], ["141", "114"], ["166", "163"], ["176", "186"], ["184", "157"], ["208", "206"], ["300", "298"], ["304", "303"], ["355", "353"], ["125", "123"], ["135", "138"], ["138", "133"], ["143", "146"], ["146", "141"], ["168", "166"], ["178", "181"], ["181", "176"], ["186", "189"], ["189", "184"], ["217", "229"], ["217", "240"], ["310", "316"], ["310", "325"], ["315", "294"], ["218", "217"], ["218", "223"], ["223", "217"], ["227", "232"], ["232", "200"], ["312", "310"], ["316", "315"], ["220", "218"], ["229", "227"], ["237", "252"], ["237", "266"], ["322", "327"], ["327", "361"], ["238", "237"], ["238", "244"], ["243", "237"], ["248", "257"], ["255", "200"], ["323", "322"], ["240", "238"], ["244", "243"], ["250", "248"], ["257", "255"], ["262", "275"], ["262", "200"], ["325", "323"], ["252", "250"], ["263", "262"], ["263", "269"], ["269", "262"], ["273", "278"], ["278", "200"], ["264", "263"], ["275", "273"], ["266", "264"], ["22", "27"], ["327", "361"], ["23", "361"], ["25", "361"], ["30", "361"], ["33", "361"], ["33", "361"], ["33", "361"], ["28", "361"], ["39", "361"], ["45", "361"], ["51", "361"], ["51", "361"], ["57", "361"], ["59", "361"], ["59", "361"], ["57", "361"], ["57", "361"], ["63", "361"], ["66", "361"], ["67", "361"], ["66", "361"], ["66", "361"], ["69", "361"], ["73", "361"], ["73", "361"], ["103", "361"], ["103", "361"], ["103", "361"], ["282", "361"], ["282", "361"], ["282", "361"], ["288", "361"], ["291", "361"], ["291", "361"], ["291", "361"], ["298", "361"], ["310", "361"], ["310", "361"], ["310", "361"], ["322", "361"], ["315", "361"], ["315", "361"], ["303", "361"], ["303", "361"], ["294", "361"], ["206", "361"], ["204", "361"], ["204", "361"], ["212", "361"], ["212", "361"], ["217", "361"], ["223", "361"], ["217", "361"], ["217", "361"], ["237", "361"], ["244", "361"], ["243", "361"], ["237", "361"], ["237", "361"], ["264", "361"], ["263", "361"], ["262", "361"], ["269", "361"], ["262", "361"], ["262", "361"], ["273", "361"], ["273", "361"], ["278", "361"], ["278", "361"], ["248", "361"], ["248", "361"], ["255", "361"], ["255", "361"], ["227", "361"], ["227", "361"], ["232", "361"], ["232", "361"], ["200", "361"], ["163", "361"], ["163", "361"], ["166", "361"], ["166", "361"], ["163", "361"], ["161", "361"], ["161", "361"], ["172", "361"], ["172", "361"], ["176", "361"], ["184", "361"], ["184", "361"], ["184", "361"], ["157", "361"], ["120", "361"], ["120", "361"], ["123", "361"], ["123", "361"], ["120", "361"], ["118", "361"], ["118", "361"], ["129", "361"], ["129", "361"], ["133", "361"], ["141", "361"], ["141", "361"], ["141", "361"], ["114", "361"], ["92", "361"], ["94", "361"], ["92", "361"], ["88", "361"], ["88", "361"], ["96", "361"], ["96", "361"], ["85", "361"], ["22", "23"], ["22", "25"], ["22", "39"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["59", "57"], ["59", "57"], ["22", "63"], ["71", "69"], ["75", "73"], ["284", "282"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["63", "66"], ["22", "66"], ["67", "66"], ["22", "79"], ["22", "103"], ["69", "103"], ["88", "103"], ["22", "108"], ["22", "151"], ["22", "194"], ["22", "288"], ["22", "328"], ["22", "335"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "47"], ["49", "47"], ["47", "53"], ["22", "53"], ["55", "53"], ["53", "59"], ["22", "59"], ["61", "59"], ["43", "67"], ["22", "67"], ["45", "71"], ["22", "71"], ["71", "75"], ["22", "75"], ["79", "82"], ["85", "82"], ["22", "82"], ["75", "82"], ["82", "85"], ["22", "85"], ["92", "88"], ["92", "88"], ["69", "96"], ["88", "96"], ["108", "111"], ["114", "111"], ["22", "111"], ["82", "111"], ["111", "114"], ["22", "114"], ["120", "118"], ["120", "118"], ["120", "118"], ["151", "154"], ["157", "154"], ["22", "154"], ["111", "154"], ["154", "157"], ["22", "157"], ["163", "161"], ["163", "161"], ["163", "161"], ["194", "197"], ["200", "197"], ["22", "197"], ["154", "197"], ["197", "200"], ["22", "200"], ["206", "204"], ["206", "204"], ["197", "284"], ["22", "284"], ["288", "291"], ["294", "291"], ["22", "291"], ["284", "291"], ["291", "294"], ["22", "294"], ["335", "338"], ["343", "338"], ["22", "338"], ["282", "338"], ["338", "343"], ["22", "343"], ["30", "347"], ["282", "347"], ["30", "33"], ["22", "33"], ["42", "49"], ["22", "49"], ["49", "55"], ["22", "55"], ["55", "61"], ["22", "61"], ["22", "303"], ["328", "352"], ["347", "352"], ["22", "352"], ["59", "92"], ["22", "92"], ["94", "92"], ["103", "120"], ["22", "120"], ["103", "120"], ["123", "120"], ["141", "120"], ["123", "120"], ["118", "129"], ["22", "129"], ["103", "163"], ["120", "163"], ["22", "163"], ["103", "163"], ["166", "163"], ["184", "163"], ["120", "163"], ["141", "163"], ["166", "163"], ["161", "172"], ["22", "172"], ["232", "206"], ["141", "206"], ["22", "206"], ["103", "206"], ["264", "206"], ["255", "206"], ["227", "206"], ["163", "206"], ["166", "206"], ["184", "206"], ["120", "206"], ["123", "206"], ["141", "206"], ["69", "206"], ["88", "206"], ["204", "212"], ["22", "212"], ["206", "298"], ["232", "298"], ["141", "298"], ["22", "298"], ["73", "298"], ["310", "298"], ["96", "298"], ["347", "356"], ["22", "356"], ["66", "94"], ["22", "94"], ["51", "123"], ["22", "123"], ["103", "123"], ["120", "123"], ["141", "123"], ["69", "123"], ["88", "123"], ["141", "133"], ["22", "133"], ["120", "133"], ["123", "133"], ["141", "133"], ["133", "141"], ["22", "141"], ["120", "141"], ["133", "141"], ["133", "141"], ["57", "166"], ["22", "166"], ["103", "166"], ["163", "166"], ["184", "166"], ["120", "166"], ["123", "166"], ["141", "166"], ["69", "166"], ["88", "166"], ["184", "176"], ["22", "176"], ["163", "176"], ["166", "176"], ["184", "176"], ["141", "176"], ["176", "184"], ["22", "184"], ["163", "184"], ["176", "184"], ["176", "184"], ["22", "315"], ["218", "217"], ["218", "217"], ["223", "217"], ["223", "217"], ["243", "217"], ["262", "217"], ["218", "310"], ["223", "310"], ["264", "310"], ["269", "310"], ["278", "310"], ["255", "310"], ["184", "310"], ["22", "310"], ["73", "310"], ["298", "310"], ["223", "218"], ["264", "218"], ["269", "218"], ["278", "218"], ["255", "218"], ["184", "218"], ["22", "218"], ["103", "218"], ["206", "218"], ["163", "218"], ["120", "218"], ["218", "223"], ["22", "223"], ["212", "223"], ["206", "227"], ["22", "227"], ["103", "227"], ["218", "227"], ["163", "227"], ["120", "227"], ["227", "232"], ["22", "232"], ["212", "232"], ["223", "232"], ["22", "327"], ["238", "237"], ["238", "237"], ["243", "237"], ["22", "322"], ["218", "238"], ["223", "238"], ["22", "238"], ["103", "238"], ["218", "238"], ["163", "238"], ["120", "238"], ["244", "243"], ["244", "243"], ["250", "248"], ["22", "248"], ["250", "248"], ["248", "255"], ["22", "255"], ["103", "255"], ["250", "255"], ["163", "255"], ["120", "255"], ["238", "244"], ["22", "244"], ["212", "244"], ["223", "244"], ["238", "250"], ["244", "250"], ["22", "250"], ["103", "250"], ["238", "250"], ["163", "250"], ["120", "250"], ["263", "262"], ["269", "262"], ["269", "262"], ["217", "262"], ["243", "262"], ["264", "263"], ["264", "263"], ["264", "269"], ["22", "269"], ["212", "269"], ["223", "269"], ["244", "269"], ["275", "273"], ["22", "273"], ["275", "273"], ["273", "278"], ["22", "278"], ["275", "278"], ["238", "264"], ["244", "264"], ["22", "264"], ["103", "264"], ["238", "264"], ["163", "264"], ["120", "264"], ["264", "275"], ["269", "275"], ["22", "275"], ["212", "275"], ["223", "275"], ["244", "275"], ["269", "275"], ["82", "100"], ["82", "88"], ["82", "94"], ["82", "96"], ["82", "85"], ["82", "92"], ["82", "97"], ["82", "89"], ["82", "82"], ["111", "120"], ["111", "114"], ["111", "129"], ["111", "118"], ["111", "123"], ["111", "111"], ["111", "125"], ["154", "154"], ["154", "161"], ["154", "163"], ["154", "168"], ["154", "172"], ["154", "166"], ["154", "157"], ["197", "204"], ["197", "206"], ["197", "208"], ["197", "200"], ["197", "197"], ["197", "212"], ["291", "338"], ["291", "298"], ["291", "300"], ["291", "340"], ["291", "329"], ["291", "328"], ["291", "335"], ["291", "342"], ["291", "331"], ["338", "338"], ["338", "356"], ["338", "349"], ["338", "340"], ["338", "355"], ["338", "347"], ["338", "342"], ["338", "353"], ["338", "352"], ["338", "343"], ["129", "146"], ["129", "138"], ["129", "141"], ["129", "135"], ["129", "133"], ["129", "143"], ["172", "181"], ["172", "184"], ["172", "186"], ["172", "176"], ["172", "178"], ["172", "189"], ["212", "217"], ["212", "220"], ["212", "218"], ["298", "304"], ["298", "310"], ["298", "291"], ["298", "294"], ["298", "303"], ["298", "312"], ["217", "240"], ["217", "238"], ["217", "237"], ["217", "229"], ["217", "227"], ["217", "232"], ["310", "322"], ["310", "315"], ["310", "323"], ["310", "316"], ["310", "291"], ["310", "325"], ["310", "327"], ["310", "294"], ["218", "223"], ["237", "262"], ["237", "264"], ["237", "257"], ["237", "255"], ["237", "252"], ["237", "263"], ["237", "248"], ["237", "250"], ["237", "266"], ["238", "243"], ["238", "244"], ["262", "278"], ["262", "273"], ["262", "275"], ["263", "269"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY buf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,buf,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(buf.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(buf.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(buf.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,buf,readLine())<SUB>3</SUB>>", "46": "<(IDENTIFIER,n,n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(IDENTIFIER,this,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(IDENTIFIER,st,nextToken())<SUB>4</SUB>>", "52": "<(IDENTIFIER,a,a = parseInt(st.nextToken()))<SUB>5</SUB>>", "54": "<(IDENTIFIER,this,parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "58": "<(IDENTIFIER,b,b = parseInt(st.nextToken()))<SUB>6</SUB>>", "60": "<(IDENTIFIER,this,parseInt(st.nextToken()))<SUB>6</SUB>>", "62": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "64": "<(IDENTIFIER,st,st = new StringTokenizer(buf.readLine()))<SUB>7</SUB>>", "66": "<(&lt;init&gt;,new StringTokenizer(buf.readLine()))<SUB>7</SUB>>", "67": "<(readLine,readLine())<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,array = new int[n])<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.alloc,new int[n])>", "73": "<(&lt;operator&gt;.assignment,original = new int[n])<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[n])>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,array[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "93": "<(IDENTIFIER,this,parseInt(st.nextToken()))<SUB>11</SUB>>", "95": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,original[i])<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,original[i] = array[i])<SUB>12</SUB>>", "101": "<(IDENTIFIER,array,original[i] = array[i])<SUB>12</SUB>>", "103": "<(sort,sort(array))<SUB>14</SUB>>", "105": "<(IDENTIFIER,array,sort(array))<SUB>14</SUB>>", "107": "<(LOCAL,int i: int)<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "117": "<(LOCAL,int k: int)<SUB>16</SUB>>", "119": "<(IDENTIFIER,k,int k = binarySearch(array, a - array[i]))<SUB>16</SUB>>", "121": "<(IDENTIFIER,Arrays,binarySearch(array, a - array[i]))<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.subtraction,a - array[i])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>16</SUB>>", "127": "<(IDENTIFIER,i,a - array[i])<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.greaterEqualsThan,k &gt;= 0)<SUB>17</SUB>>", "131": "<(LITERAL,0,k &gt;= 0)<SUB>17</SUB>>", "133": "<(put,put(array[i], array[k]))<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>18</SUB>>", "137": "<(IDENTIFIER,i,put(array[i], array[k]))<SUB>18</SUB>>", "139": "<(IDENTIFIER,array,put(array[i], array[k]))<SUB>18</SUB>>", "141": "<(put,put(array[k], array[i]))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,array[k])<SUB>19</SUB>>", "145": "<(IDENTIFIER,k,put(array[k], array[i]))<SUB>19</SUB>>", "147": "<(IDENTIFIER,array,put(array[k], array[i]))<SUB>19</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "153": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "155": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.assignment,int k = binarySearch(array, b - array[i]))<SUB>23</SUB>>", "163": "<(binarySearch,binarySearch(array, b - array[i]))<SUB>23</SUB>>", "165": "<(IDENTIFIER,array,binarySearch(array, b - array[i]))<SUB>23</SUB>>", "167": "<(IDENTIFIER,b,b - array[i])<SUB>23</SUB>>", "169": "<(IDENTIFIER,array,b - array[i])<SUB>23</SUB>>", "171": "<(CONTROL_STRUCTURE,if (k &gt;= 0),if (k &gt;= 0))<SUB>24</SUB>>", "173": "<(IDENTIFIER,k,k &gt;= 0)<SUB>24</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "177": "<(IDENTIFIER,graphB,put(array[i], array[k]))<SUB>25</SUB>>", "179": "<(IDENTIFIER,array,put(array[i], array[k]))<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,array[k])<SUB>25</SUB>>", "183": "<(IDENTIFIER,k,put(array[i], array[k]))<SUB>25</SUB>>", "185": "<(IDENTIFIER,graphB,put(array[k], array[i]))<SUB>26</SUB>>", "187": "<(IDENTIFIER,array,put(array[k], array[i]))<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>26</SUB>>", "191": "<(IDENTIFIER,i,put(array[k], array[i]))<SUB>26</SUB>>", "193": "<(LOCAL,int i: int)<SUB>31</SUB>>", "195": "<(IDENTIFIER,i,int i = 0)<SUB>31</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>31</SUB>>", "199": "<(IDENTIFIER,n,i &lt; n)<SUB>31</SUB>>", "201": "<(IDENTIFIER,i,i++)<SUB>31</SUB>>", "203": "<(LOCAL,Integer j: java.lang.Integer)<SUB>32</SUB>>", "205": "<(IDENTIFIER,j,Integer j = get(array[i]))<SUB>32</SUB>>", "207": "<(IDENTIFIER,graphA,get(array[i]))<SUB>32</SUB>>", "209": "<(IDENTIFIER,array,get(array[i]))<SUB>32</SUB>>", "211": "<(CONTROL_STRUCTURE,if (j != null),if (j != null))<SUB>33</SUB>>", "213": "<(IDENTIFIER,j,j != null)<SUB>33</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "217": "<(&lt;operator&gt;.logicalAnd,graphB.containsKey(array[i]) &amp;&amp; graphB.containsKey(j))<SUB>34</SUB>>", "219": "<(IDENTIFIER,graphB,containsKey(array[i]))<SUB>34</SUB>>", "221": "<(IDENTIFIER,array,containsKey(array[i]))<SUB>34</SUB>>", "223": "<(containsKey,containsKey(j))<SUB>34</SUB>>", "225": "<(IDENTIFIER,j,containsKey(j))<SUB>34</SUB>>", "227": "<(remove,remove(array[i]))<SUB>35</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>35</SUB>>", "231": "<(IDENTIFIER,i,remove(array[i]))<SUB>35</SUB>>", "233": "<(IDENTIFIER,graphA,remove(j))<SUB>36</SUB>>", "235": "<(CONTROL_STRUCTURE,else,else)<SUB>38</SUB>>", "237": "<(&lt;operator&gt;.logicalAnd,graphB.containsKey(array[i]) &amp;&amp; !graphB.containsKey(j))<SUB>38</SUB>>", "239": "<(IDENTIFIER,graphB,containsKey(array[i]))<SUB>38</SUB>>", "241": "<(IDENTIFIER,array,containsKey(array[i]))<SUB>38</SUB>>", "243": "<(&lt;operator&gt;.logicalNot,!graphB.containsKey(j))<SUB>38</SUB>>", "245": "<(IDENTIFIER,graphB,containsKey(j))<SUB>38</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "249": "<(IDENTIFIER,graphB,remove(graphB.get(array[i])))<SUB>40</SUB>>", "251": "<(IDENTIFIER,graphB,get(array[i]))<SUB>40</SUB>>", "253": "<(IDENTIFIER,array,get(array[i]))<SUB>40</SUB>>", "255": "<(remove,remove(array[i]))<SUB>41</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>41</SUB>>", "259": "<(IDENTIFIER,i,remove(array[i]))<SUB>41</SUB>>", "261": "<(CONTROL_STRUCTURE,if (!graphB.containsKey(array[i]) &amp;&amp; graphB.containsKey(j)),if (!graphB.containsKey(array[i]) &amp;&amp; graphB.containsKey(j)))<SUB>43</SUB>>", "263": "<(&lt;operator&gt;.logicalNot,!graphB.containsKey(array[i]))<SUB>43</SUB>>", "265": "<(IDENTIFIER,graphB,containsKey(array[i]))<SUB>43</SUB>>", "267": "<(IDENTIFIER,array,containsKey(array[i]))<SUB>43</SUB>>", "269": "<(containsKey,containsKey(j))<SUB>43</SUB>>", "271": "<(IDENTIFIER,j,containsKey(j))<SUB>43</SUB>>", "273": "<(remove,remove(graphB.get(j)))<SUB>44</SUB>>", "275": "<(get,get(j))<SUB>44</SUB>>", "277": "<(IDENTIFIER,j,get(j))<SUB>44</SUB>>", "279": "<(IDENTIFIER,graphB,remove(j))<SUB>45</SUB>>", "281": "<(LOCAL,int[] res: int[])<SUB>52</SUB>>", "283": "<(IDENTIFIER,res,int[] res = new int[n])<SUB>52</SUB>>", "285": "<(IDENTIFIER,n,new int[n])<SUB>52</SUB>>", "287": "<(LOCAL,int i: int)<SUB>53</SUB>>", "289": "<(IDENTIFIER,i,int i = 0)<SUB>53</SUB>>", "291": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>53</SUB>>", "293": "<(IDENTIFIER,n,i &lt; n)<SUB>53</SUB>>", "295": "<(IDENTIFIER,i,i++)<SUB>53</SUB>>", "297": "<(CONTROL_STRUCTURE,if (graphA.containsKey(original[i])),if (graphA.containsKey(original[i])))<SUB>54</SUB>>", "299": "<(IDENTIFIER,graphA,containsKey(original[i]))<SUB>54</SUB>>", "301": "<(IDENTIFIER,original,containsKey(original[i]))<SUB>54</SUB>>", "303": "<(&lt;operator&gt;.assignment,res[i] = 0)<SUB>54</SUB>>", "305": "<(IDENTIFIER,res,res[i] = 0)<SUB>54</SUB>>", "307": "<(LITERAL,0,res[i] = 0)<SUB>54</SUB>>", "309": "<(CONTROL_STRUCTURE,if (graphB.containsKey(original[i])),if (graphB.containsKey(original[i])))<SUB>55</SUB>>", "311": "<(IDENTIFIER,graphB,containsKey(original[i]))<SUB>55</SUB>>", "313": "<(IDENTIFIER,original,containsKey(original[i]))<SUB>55</SUB>>", "315": "<(&lt;operator&gt;.assignment,res[i] = 1)<SUB>55</SUB>>", "317": "<(IDENTIFIER,res,res[i] = 1)<SUB>55</SUB>>", "319": "<(LITERAL,1,res[i] = 1)<SUB>55</SUB>>", "321": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>>", "323": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>57</SUB>>", "325": "<(FIELD_IDENTIFIER,out,out)<SUB>57</SUB>>", "327": "<(RETURN,return;,return;)<SUB>58</SUB>>", "329": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>61</SUB>>", "331": "<(FIELD_IDENTIFIER,out,out)<SUB>61</SUB>>", "333": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "335": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>62</SUB>>", "337": "<(LITERAL,0,int $idx0 = 0)<SUB>62</SUB>>", "339": "<(IDENTIFIER,$idx0,$idx0 &lt; res.length)>", "341": "<(IDENTIFIER,res,$idx0 &lt; res.length)>", "343": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>62</SUB>>", "345": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "347": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>62</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>62</SUB>>", "351": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "353": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>62</SUB>>", "355": "<(FIELD_IDENTIFIER,out,out)<SUB>62</SUB>>", "357": "<(IDENTIFIER,k,k + &quot; &quot;)<SUB>62</SUB>>", "359": "<(MODIFIER,PUBLIC)>", "361": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}