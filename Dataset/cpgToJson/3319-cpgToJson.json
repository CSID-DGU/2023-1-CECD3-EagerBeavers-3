{"edges": [["19", "20"], ["19", "21"], ["19", "220"], ["19", "221"], ["19", "222"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "52"], ["21", "56"], ["21", "77"], ["21", "114"], ["21", "115"], ["21", "120"], ["21", "215"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["70", "76"], ["71", "72"], ["71", "73"], ["74", "75"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "95"], ["87", "96"], ["87", "102"], ["87", "109"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "94"], ["92", "93"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "101"], ["99", "100"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "136"], ["130", "139"], ["130", "181"], ["130", "190"], ["130", "193"], ["130", "194"], ["130", "198"], ["130", "209"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["139", "144"], ["139", "147"], ["139", "149"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "160"], ["153", "169"], ["154", "155"], ["154", "156"], ["156", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "167"], ["161", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["169", "170"], ["169", "176"], ["169", "178"], ["170", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["178", "179"], ["179", "180"], ["181", "182"], ["181", "188"], ["182", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "196"], ["196", "197"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["211", "214"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["22", "28"], ["25", "31"], ["29", "36"], ["34", "40"], ["38", "44"], ["42", "49"], ["47", "54"], ["52", "58"], ["115", "122"], ["215", "222"], ["24", "22"], ["26", "25"], ["31", "29"], ["36", "34"], ["40", "38"], ["44", "42"], ["49", "47"], ["54", "52"], ["58", "61"], ["61", "67"], ["61", "79"], ["64", "61"], ["66", "64"], ["79", "82"], ["82", "92"], ["82", "119"], ["85", "82"], ["117", "115"], ["122", "125"], ["125", "132"], ["125", "218"], ["128", "125"], ["216", "215"], ["28", "26"], ["67", "73"], ["89", "99"], ["96", "104"], ["102", "110"], ["109", "85"], ["119", "117"], ["132", "136"], ["136", "141"], ["190", "196"], ["194", "201"], ["198", "211"], ["209", "128"], ["218", "216"], ["71", "74"], ["74", "66"], ["91", "89"], ["98", "96"], ["103", "102"], ["110", "109"], ["141", "144"], ["144", "150"], ["144", "184"], ["147", "144"], ["182", "188"], ["182", "190"], ["188", "190"], ["196", "194"], ["200", "198"], ["211", "209"], ["73", "71"], ["92", "91"], ["99", "98"], ["104", "103"], ["150", "157"], ["150", "147"], ["183", "182"], ["201", "205"], ["204", "200"], ["154", "163"], ["184", "183"], ["205", "204"], ["156", "154"], ["161", "167"], ["161", "172"], ["167", "172"], ["170", "176"], ["170", "179"], ["176", "147"], ["157", "156"], ["162", "161"], ["171", "170"], ["179", "147"], ["163", "162"], ["172", "171"], ["19", "24"], ["20", "222"], ["22", "222"], ["25", "222"], ["25", "222"], ["29", "222"], ["36", "222"], ["34", "222"], ["34", "222"], ["38", "222"], ["38", "222"], ["38", "222"], ["42", "222"], ["42", "222"], ["47", "222"], ["47", "222"], ["47", "222"], ["52", "222"], ["52", "222"], ["82", "222"], ["82", "222"], ["115", "222"], ["115", "222"], ["122", "222"], ["125", "222"], ["125", "222"], ["125", "222"], ["215", "222"], ["215", "222"], ["215", "222"], ["132", "222"], ["136", "222"], ["141", "222"], ["144", "222"], ["144", "222"], ["182", "222"], ["182", "222"], ["188", "222"], ["190", "222"], ["194", "222"], ["194", "222"], ["201", "222"], ["200", "222"], ["205", "222"], ["204", "222"], ["200", "222"], ["198", "222"], ["198", "222"], ["211", "222"], ["209", "222"], ["209", "222"], ["128", "222"], ["150", "222"], ["156", "222"], ["154", "222"], ["154", "222"], ["161", "222"], ["161", "222"], ["167", "222"], ["170", "222"], ["170", "222"], ["179", "222"], ["176", "222"], ["147", "222"], ["89", "222"], ["89", "222"], ["99", "222"], ["98", "222"], ["96", "222"], ["96", "222"], ["102", "222"], ["102", "222"], ["109", "222"], ["109", "222"], ["109", "222"], ["85", "222"], ["66", "222"], ["71", "222"], ["74", "222"], ["74", "222"], ["66", "222"], ["64", "222"], ["190", "222"], ["211", "222"], ["52", "222"], ["42", "222"], ["196", "222"], ["19", "20"], ["19", "22"], ["31", "29"], ["36", "34"], ["40", "38"], ["44", "42"], ["49", "47"], ["54", "52"], ["22", "25"], ["19", "25"], ["19", "58"], ["71", "66"], ["74", "66"], ["19", "66"], ["19", "79"], ["19", "122"], ["115", "215"], ["209", "215"], ["19", "215"], ["25", "31"], ["19", "31"], ["31", "36"], ["19", "36"], ["29", "40"], ["19", "40"], ["40", "44"], ["19", "44"], ["44", "49"], ["19", "49"], ["49", "54"], ["19", "54"], ["58", "61"], ["64", "61"], ["19", "61"], ["54", "61"], ["61", "64"], ["19", "64"], ["79", "82"], ["85", "82"], ["19", "82"], ["34", "82"], ["82", "85"], ["19", "85"], ["91", "89"], ["91", "89"], ["98", "96"], ["98", "96"], ["19", "102"], ["122", "125"], ["128", "125"], ["19", "125"], ["61", "125"], ["205", "125"], ["19", "128"], ["125", "128"], ["150", "128"], ["19", "132"], ["19", "136"], ["125", "190"], ["150", "190"], ["19", "190"], ["196", "194"], ["201", "198"], ["201", "198"], ["204", "198"], ["204", "198"], ["211", "209"], ["211", "209"], ["211", "209"], ["19", "71"], ["19", "76"], ["38", "109"], ["96", "109"], ["19", "109"], ["19", "141"], ["132", "198"], ["188", "198"], ["167", "198"], ["176", "198"], ["19", "198"], ["71", "74"], ["19", "74"], ["92", "91"], ["19", "91"], ["99", "98"], ["19", "98"], ["141", "144"], ["147", "144"], ["19", "144"], ["125", "144"], ["150", "147"], ["19", "147"], ["132", "188"], ["167", "188"], ["176", "188"], ["19", "188"], ["19", "196"], ["201", "200"], ["201", "200"], ["204", "200"], ["204", "200"], ["19", "211"], ["115", "211"], ["209", "211"], ["198", "211"], ["36", "92"], ["99", "92"], ["19", "92"], ["92", "99"], ["19", "99"], ["144", "150"], ["19", "150"], ["125", "150"], ["156", "154"], ["136", "201"], ["154", "201"], ["179", "201"], ["19", "201"], ["194", "201"], ["205", "204"], ["205", "204"], ["19", "204"], ["136", "154"], ["179", "154"], ["19", "154"], ["144", "205"], ["19", "205"], ["201", "205"], ["38", "156"], ["132", "167"], ["176", "167"], ["19", "167"], ["132", "176"], ["167", "176"], ["19", "176"], ["154", "179"], ["19", "179"], ["61", "73"], ["61", "64"], ["61", "67"], ["61", "74"], ["61", "61"], ["61", "66"], ["61", "71"], ["82", "96"], ["82", "98"], ["82", "102"], ["82", "85"], ["82", "103"], ["82", "104"], ["82", "92"], ["82", "91"], ["82", "89"], ["82", "99"], ["82", "82"], ["82", "110"], ["82", "109"], ["125", "136"], ["125", "128"], ["125", "209"], ["125", "196"], ["125", "132"], ["125", "198"], ["125", "204"], ["125", "144"], ["125", "190"], ["125", "184"], ["125", "194"], ["125", "182"], ["125", "201"], ["125", "205"], ["125", "141"], ["125", "183"], ["125", "200"], ["125", "211"], ["125", "125"], ["144", "150"], ["144", "144"], ["144", "147"], ["182", "188"], ["150", "154"], ["150", "161"], ["150", "163"], ["150", "162"], ["150", "170"], ["150", "171"], ["150", "157"], ["150", "156"], ["150", "172"], ["161", "167"], ["170", "179"], ["170", "176"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = readInt())<SUB>3</SUB>>", "31": "<(readInt,readInt())<SUB>3</SUB>>", "33": "<(LOCAL,int m: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,m,int m = readInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,in,readInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,E,E = new LinkedList[n])<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,new LinkedList[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,M,M = new int[n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,boolean[][] C = new boolean[n][n])<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "51": "<(IDENTIFIER,n,new boolean[n][n])<SUB>7</SUB>>", "53": "<(IDENTIFIER,visited,visited = new boolean[n])<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "57": "<(LOCAL,int i: int)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,E[i])<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,E[i] = new LinkedList&lt;Integer&gt;())<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.alloc,new LinkedList&lt;Integer&gt;())<SUB>10</SUB>>", "75": "<(IDENTIFIER,$obj1,new LinkedList&lt;Integer&gt;())>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,i &lt; m)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,int x = in.readInt() - 1)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.subtraction,in.readInt() - 1)<SUB>12</SUB>>", "93": "<(IDENTIFIER,in,readInt())<SUB>12</SUB>>", "95": "<(LOCAL,int y: int)<SUB>13</SUB>>", "97": "<(IDENTIFIER,y,int y = in.readInt() - 1)<SUB>13</SUB>>", "99": "<(readInt,readInt())<SUB>13</SUB>>", "101": "<(LITERAL,1,in.readInt() - 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,C[x][y])<SUB>14</SUB>>", "105": "<(IDENTIFIER,C,C[x][y] = true)<SUB>14</SUB>>", "107": "<(IDENTIFIER,y,C[x][y] = true)<SUB>14</SUB>>", "109": "<(add,add(y))<SUB>15</SUB>>", "111": "<(IDENTIFIER,E,add(y))<SUB>15</SUB>>", "113": "<(IDENTIFIER,y,add(y))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>17</SUB>>", "119": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>17</SUB>>", "121": "<(LOCAL,int i: int)<SUB>18</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "127": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "131": "<(LOCAL,int res: int)<SUB>19</SUB>>", "133": "<(IDENTIFIER,res,int res = 0)<SUB>19</SUB>>", "135": "<(LOCAL,int all: int)<SUB>20</SUB>>", "137": "<(IDENTIFIER,all,int all = 0)<SUB>20</SUB>>", "139": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "143": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "145": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "149": "<(CONTROL_STRUCTURE,if (j != i),if (j != i))<SUB>22</SUB>>", "151": "<(IDENTIFIER,j,j != i)<SUB>22</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "155": "<(IDENTIFIER,all,all += size())<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,E[j])<SUB>23</SUB>>", "159": "<(IDENTIFIER,j,size())<SUB>23</SUB>>", "161": "<(&lt;operator&gt;.logicalNot,!C[i][j])<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,C[i])<SUB>24</SUB>>", "165": "<(IDENTIFIER,i,!C[i][j])<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,res++)<SUB>25</SUB>>", "169": "<(CONTROL_STRUCTURE,if (!C[j][i]),if (!C[j][i]))<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,C[j][i])<SUB>26</SUB>>", "173": "<(IDENTIFIER,C,!C[j][i])<SUB>26</SUB>>", "175": "<(IDENTIFIER,i,!C[j][i])<SUB>26</SUB>>", "177": "<(IDENTIFIER,res,res++)<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.postDecrement,all--)<SUB>29</SUB>>", "181": "<(CONTROL_STRUCTURE,if (!C[i][i]),if (!C[i][i]))<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,C[i][i])<SUB>31</SUB>>", "185": "<(IDENTIFIER,C,!C[i][i])<SUB>31</SUB>>", "187": "<(IDENTIFIER,i,!C[i][i])<SUB>31</SUB>>", "189": "<(IDENTIFIER,res,res++)<SUB>32</SUB>>", "191": "<(IDENTIFIER,center,center = i)<SUB>33</SUB>>", "193": "<(LOCAL,int match: int)<SUB>34</SUB>>", "195": "<(IDENTIFIER,match,int match = maxMatch())<SUB>34</SUB>>", "197": "<(IDENTIFIER,this,maxMatch())<SUB>34</SUB>>", "199": "<(IDENTIFIER,res,res += (all - match) + (n - match - 1))<SUB>35</SUB>>", "201": "<(&lt;operator&gt;.subtraction,all - match)<SUB>35</SUB>>", "203": "<(IDENTIFIER,match,all - match)<SUB>35</SUB>>", "205": "<(&lt;operator&gt;.subtraction,n - match)<SUB>35</SUB>>", "207": "<(IDENTIFIER,match,n - match)<SUB>35</SUB>>", "209": "<(&lt;operator&gt;.assignment,min = Math.min(min, res))<SUB>36</SUB>>", "211": "<(min,Math.min(min, res))<SUB>36</SUB>>", "213": "<(IDENTIFIER,min,Math.min(min, res))<SUB>36</SUB>>", "215": "<(println,System.out.println(min))<SUB>38</SUB>>", "217": "<(IDENTIFIER,System,System.out.println(min))<SUB>38</SUB>>", "219": "<(IDENTIFIER,min,System.out.println(min))<SUB>38</SUB>>", "221": "<(MODIFIER,STATIC)>"}}