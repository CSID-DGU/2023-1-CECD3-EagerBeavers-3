{"edges": [["25", "26"], ["25", "27"], ["25", "262"], ["25", "263"], ["25", "264"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "42"], ["27", "45"], ["27", "8"], ["27", "46"], ["27", "49"], ["27", "53"], ["27", "59"], ["27", "65"], ["27", "71"], ["27", "77"], ["27", "135"], ["27", "193"], ["27", "203"], ["27", "257"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["46", "47"], ["46", "48"], ["49", "7"], ["49", "50"], ["49", "52"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["73", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "91"], ["87", "95"], ["88", "89"], ["88", "90"], ["91", "9"], ["91", "92"], ["91", "94"], ["92", "93"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "105"], ["95", "107"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "109"], ["107", "115"], ["107", "124"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["124", "125"], ["124", "134"], ["125", "126"], ["125", "133"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "145"], ["135", "147"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "151"], ["147", "155"], ["148", "149"], ["148", "150"], ["151", "10"], ["151", "152"], ["151", "154"], ["152", "153"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["165", "167"], ["165", "173"], ["165", "182"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["173", "174"], ["173", "181"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["182", "183"], ["182", "192"], ["183", "184"], ["183", "191"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["195", "198"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "205"], ["203", "208"], ["203", "211"], ["203", "213"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "254"], ["214", "215"], ["214", "216"], ["214", "219"], ["214", "222"], ["214", "224"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["224", "225"], ["224", "236"], ["224", "237"], ["224", "247"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["239", "242"], ["239", "243"], ["239", "244"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "253"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["28", "35"], ["31", "44"], ["42", "45"], ["45", "48"], ["46", "50"], ["49", "57"], ["53", "63"], ["59", "69"], ["65", "73"], ["71", "79"], ["193", "205"], ["257", "264"], ["30", "28"], ["44", "42"], ["48", "46"], ["50", "49"], ["55", "53"], ["61", "59"], ["67", "65"], ["73", "71"], ["79", "82"], ["82", "90"], ["82", "137"], ["85", "82"], ["137", "142"], ["140", "150"], ["140", "199"], ["145", "142"], ["195", "193"], ["205", "208"], ["208", "216"], ["208", "260"], ["211", "208"], ["258", "257"], ["33", "40"], ["36", "31"], ["57", "55"], ["63", "61"], ["69", "67"], ["88", "92"], ["91", "97"], ["142", "140"], ["148", "152"], ["151", "157"], ["198", "195"], ["254", "211"], ["260", "258"], ["35", "33"], ["38", "36"], ["90", "88"], ["92", "91"], ["97", "102"], ["100", "113"], ["100", "85"], ["105", "102"], ["150", "148"], ["152", "151"], ["157", "160"], ["160", "171"], ["160", "145"], ["163", "160"], ["199", "198"], ["216", "219"], ["219", "227"], ["219", "254"], ["222", "219"], ["40", "38"], ["102", "100"], ["109", "118"], ["115", "127"], ["124", "105"], ["167", "176"], ["173", "187"], ["182", "163"], ["237", "250"], ["247", "222"], ["111", "109"], ["116", "115"], ["125", "124"], ["169", "167"], ["174", "173"], ["183", "182"], ["226", "232"], ["226", "244"], ["239", "237"], ["248", "247"], ["113", "111"], ["117", "116"], ["126", "125"], ["171", "169"], ["175", "174"], ["184", "183"], ["227", "226"], ["232", "222"], ["244", "239"], ["250", "248"], ["118", "117"], ["127", "130"], ["130", "126"], ["176", "175"], ["185", "184"], ["187", "185"], ["25", "30"], ["26", "264"], ["28", "264"], ["33", "264"], ["36", "264"], ["36", "264"], ["36", "264"], ["31", "264"], ["42", "264"], ["45", "264"], ["46", "264"], ["50", "264"], ["49", "264"], ["49", "264"], ["53", "264"], ["59", "264"], ["67", "264"], ["69", "264"], ["67", "264"], ["65", "264"], ["65", "264"], ["71", "264"], ["71", "264"], ["71", "264"], ["140", "264"], ["140", "264"], ["195", "264"], ["199", "264"], ["198", "264"], ["195", "264"], ["193", "264"], ["193", "264"], ["205", "264"], ["208", "264"], ["208", "264"], ["208", "264"], ["257", "264"], ["257", "264"], ["257", "264"], ["216", "264"], ["219", "264"], ["219", "264"], ["219", "264"], ["254", "264"], ["211", "264"], ["227", "264"], ["226", "264"], ["226", "264"], ["239", "264"], ["244", "264"], ["239", "264"], ["237", "264"], ["237", "264"], ["250", "264"], ["248", "264"], ["247", "264"], ["247", "264"], ["232", "264"], ["222", "264"], ["148", "264"], ["151", "264"], ["152", "264"], ["151", "264"], ["151", "264"], ["157", "264"], ["160", "264"], ["160", "264"], ["145", "264"], ["169", "264"], ["171", "264"], ["169", "264"], ["167", "264"], ["167", "264"], ["173", "264"], ["173", "264"], ["182", "264"], ["182", "264"], ["182", "264"], ["163", "264"], ["88", "264"], ["91", "264"], ["92", "264"], ["91", "264"], ["91", "264"], ["97", "264"], ["100", "264"], ["100", "264"], ["100", "264"], ["85", "264"], ["111", "264"], ["113", "264"], ["111", "264"], ["109", "264"], ["109", "264"], ["115", "264"], ["115", "264"], ["124", "264"], ["124", "264"], ["124", "264"], ["105", "264"], ["193", "264"], ["25", "26"], ["25", "28"], ["25", "42"], ["25", "46"], ["55", "53"], ["55", "53"], ["61", "59"], ["61", "59"], ["67", "65"], ["67", "65"], ["73", "71"], ["73", "71"], ["73", "71"], ["195", "193"], ["195", "193"], ["195", "193"], ["28", "31"], ["25", "31"], ["33", "31"], ["36", "31"], ["42", "45"], ["25", "45"], ["46", "49"], ["25", "49"], ["50", "49"], ["25", "79"], ["25", "137"], ["25", "205"], ["45", "257"], ["254", "257"], ["25", "257"], ["25", "33"], ["25", "41"], ["31", "50"], ["25", "50"], ["25", "55"], ["57", "55"], ["55", "61"], ["25", "61"], ["63", "61"], ["61", "67"], ["25", "67"], ["69", "67"], ["53", "73"], ["25", "73"], ["59", "73"], ["79", "82"], ["85", "82"], ["25", "82"], ["73", "82"], ["82", "85"], ["25", "85"], ["25", "88"], ["137", "140"], ["145", "140"], ["25", "140"], ["142", "140"], ["142", "140"], ["140", "145"], ["25", "145"], ["25", "148"], ["142", "195"], ["25", "195"], ["73", "195"], ["160", "195"], ["102", "195"], ["199", "195"], ["199", "195"], ["205", "208"], ["211", "208"], ["25", "208"], ["195", "208"], ["208", "211"], ["239", "211"], ["25", "211"], ["33", "36"], ["25", "36"], ["49", "57"], ["25", "57"], ["57", "63"], ["25", "63"], ["63", "69"], ["25", "69"], ["88", "91"], ["25", "91"], ["92", "91"], ["25", "97"], ["82", "142"], ["25", "142"], ["148", "151"], ["25", "151"], ["152", "151"], ["25", "157"], ["199", "198"], ["199", "198"], ["25", "198"], ["25", "216"], ["45", "254"], ["248", "254"], ["232", "254"], ["25", "254"], ["50", "92"], ["25", "92"], ["97", "100"], ["105", "100"], ["25", "100"], ["102", "100"], ["102", "100"], ["25", "105"], ["100", "105"], ["111", "109"], ["111", "109"], ["109", "115"], ["25", "115"], ["25", "124"], ["109", "124"], ["50", "152"], ["92", "152"], ["25", "152"], ["157", "160"], ["163", "160"], ["25", "160"], ["73", "160"], ["102", "160"], ["160", "163"], ["25", "163"], ["169", "167"], ["169", "167"], ["167", "173"], ["25", "173"], ["25", "182"], ["167", "182"], ["65", "199"], ["25", "199"], ["216", "219"], ["222", "219"], ["25", "219"], ["195", "219"], ["219", "222"], ["239", "222"], ["25", "222"], ["239", "237"], ["239", "237"], ["239", "237"], ["239", "237"], ["239", "237"], ["73", "102"], ["25", "102"], ["248", "247"], ["248", "247"], ["25", "247"], ["67", "111"], ["25", "111"], ["113", "111"], ["67", "169"], ["111", "169"], ["25", "169"], ["171", "169"], ["227", "226"], ["227", "226"], ["25", "226"], ["67", "239"], ["169", "239"], ["111", "239"], ["25", "239"], ["208", "239"], ["219", "239"], ["244", "239"], ["244", "239"], ["45", "248"], ["254", "248"], ["232", "248"], ["25", "248"], ["250", "248"], ["250", "248"], ["91", "113"], ["25", "113"], ["151", "171"], ["25", "171"], ["199", "227"], ["244", "227"], ["25", "227"], ["45", "232"], ["254", "232"], ["248", "232"], ["25", "232"], ["227", "244"], ["25", "244"], ["237", "250"], ["25", "250"], ["100", "130"], ["25", "130"], ["140", "187"], ["25", "187"], ["82", "102"], ["82", "85"], ["82", "92"], ["82", "97"], ["82", "91"], ["82", "90"], ["82", "100"], ["82", "88"], ["82", "82"], ["140", "145"], ["140", "150"], ["140", "151"], ["140", "148"], ["140", "152"], ["140", "160"], ["140", "142"], ["140", "157"], ["140", "140"], ["208", "208"], ["208", "254"], ["208", "211"], ["208", "216"], ["208", "219"], ["100", "115"], ["100", "113"], ["100", "102"], ["100", "130"], ["100", "118"], ["100", "100"], ["100", "127"], ["100", "111"], ["100", "116"], ["100", "126"], ["100", "105"], ["100", "117"], ["100", "124"], ["100", "125"], ["100", "109"], ["160", "167"], ["160", "169"], ["160", "163"], ["160", "185"], ["160", "187"], ["160", "184"], ["160", "173"], ["160", "174"], ["160", "182"], ["160", "171"], ["160", "160"], ["160", "183"], ["160", "176"], ["160", "175"], ["219", "226"], ["219", "227"], ["219", "222"], ["219", "219"], ["226", "232"], ["226", "244"], ["226", "247"], ["226", "239"], ["226", "237"], ["226", "248"], ["226", "250"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>7</SUB>>", "48": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>7</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>7</SUB>>", "51": "<(IDENTIFIER,br,readLine())<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,n = pint(st.nextToken()))<SUB>8</SUB>>", "55": "<(pint,pint(st.nextToken()))<SUB>8</SUB>>", "57": "<(nextToken,nextToken())<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,m = pint(st.nextToken()))<SUB>9</SUB>>", "61": "<(pint,pint(st.nextToken()))<SUB>9</SUB>>", "63": "<(nextToken,nextToken())<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,k = pint(st.nextToken()))<SUB>10</SUB>>", "67": "<(pint,pint(st.nextToken()))<SUB>10</SUB>>", "69": "<(nextToken,nextToken())<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,map = new int[n][m][4])<SUB>14</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[n][m][4])>", "75": "<(IDENTIFIER,m,new int[n][m][4])<SUB>14</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "83": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "89": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>16</SUB>>", "91": "<(&lt;init&gt;,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>16</SUB>>", "92": "<(readLine,readLine())<SUB>16</SUB>>", "94": "<(LITERAL,&quot; &quot;,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>16</SUB>>", "96": "<(LOCAL,int j: int)<SUB>17</SUB>>", "98": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "100": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>17</SUB>>", "102": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>17</SUB>>", "104": "<(LITERAL,1,m - 1)<SUB>17</SUB>>", "106": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "108": "<(LOCAL,int temp: int)<SUB>18</SUB>>", "110": "<(IDENTIFIER,temp,int temp = pint(st.nextToken()))<SUB>18</SUB>>", "112": "<(IDENTIFIER,this,pint(st.nextToken()))<SUB>18</SUB>>", "114": "<(IDENTIFIER,st,nextToken())<SUB>18</SUB>>", "116": "<(&lt;operator&gt;.indexAccess,map[i][j][3])<SUB>19</SUB>>", "118": "<(&lt;operator&gt;.indexAccess,map[i])<SUB>19</SUB>>", "120": "<(IDENTIFIER,i,map[i][j][3] = temp)<SUB>19</SUB>>", "122": "<(LITERAL,3,map[i][j][3] = temp)<SUB>19</SUB>>", "124": "<(&lt;operator&gt;.assignment,map[i][j + 1][2] = temp)<SUB>20</SUB>>", "126": "<(&lt;operator&gt;.indexAccess,map[i][j + 1])<SUB>20</SUB>>", "128": "<(IDENTIFIER,map,map[i][j + 1][2] = temp)<SUB>20</SUB>>", "130": "<(&lt;operator&gt;.addition,j + 1)<SUB>20</SUB>>", "132": "<(LITERAL,1,j + 1)<SUB>20</SUB>>", "134": "<(IDENTIFIER,temp,map[i][j + 1][2] = temp)<SUB>20</SUB>>", "136": "<(LOCAL,int i: int)<SUB>23</SUB>>", "138": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "140": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>23</SUB>>", "142": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>23</SUB>>", "144": "<(LITERAL,1,n - 1)<SUB>23</SUB>>", "146": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "148": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>24</SUB>>", "150": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>24</SUB>>", "10": "<(IDENTIFIER,st,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>24</SUB>>", "153": "<(IDENTIFIER,br,readLine())<SUB>24</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>25</SUB>>", "159": "<(LITERAL,0,int j = 0)<SUB>25</SUB>>", "161": "<(IDENTIFIER,j,j &lt; m)<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,j++)<SUB>25</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.assignment,int temp = pint(st.nextToken()))<SUB>26</SUB>>", "169": "<(pint,pint(st.nextToken()))<SUB>26</SUB>>", "171": "<(nextToken,nextToken())<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.assignment,map[i][j][1] = temp)<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,map[i][j])<SUB>27</SUB>>", "177": "<(IDENTIFIER,map,map[i][j][1] = temp)<SUB>27</SUB>>", "179": "<(IDENTIFIER,j,map[i][j][1] = temp)<SUB>27</SUB>>", "181": "<(IDENTIFIER,temp,map[i][j][1] = temp)<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,map[i + 1][j][0])<SUB>28</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,map[i + 1])<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.addition,i + 1)<SUB>28</SUB>>", "189": "<(LITERAL,1,i + 1)<SUB>28</SUB>>", "191": "<(LITERAL,0,map[i + 1][j][0] = temp)<SUB>28</SUB>>", "193": "<(&lt;operator&gt;.assignment,ans = new int[n][m][k / 2 + 1])<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.alloc,new int[n][m][k / 2 + 1])>", "197": "<(IDENTIFIER,m,new int[n][m][k / 2 + 1])<SUB>32</SUB>>", "199": "<(&lt;operator&gt;.division,k / 2)<SUB>32</SUB>>", "201": "<(LITERAL,2,k / 2)<SUB>32</SUB>>", "203": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>33</SUB>>", "205": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "207": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "209": "<(IDENTIFIER,i,i &lt; n)<SUB>33</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "215": "<(LOCAL,int j: int)<SUB>34</SUB>>", "217": "<(IDENTIFIER,j,int j = 0)<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>34</SUB>>", "221": "<(IDENTIFIER,m,j &lt; m)<SUB>34</SUB>>", "223": "<(IDENTIFIER,j,j++)<SUB>34</SUB>>", "225": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.modulo,k % 2)<SUB>35</SUB>>", "229": "<(LITERAL,2,k % 2)<SUB>35</SUB>>", "231": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "233": "<(IDENTIFIER,sb,sb.append(&quot;-1 &quot;))<SUB>36</SUB>>", "235": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>37</SUB>>", "237": "<(&lt;operator&gt;.assignment,int min = rec(i, j, 0, k / 2))<SUB>40</SUB>>", "239": "<(rec,rec(i, j, 0, k / 2))<SUB>40</SUB>>", "241": "<(IDENTIFIER,i,rec(i, j, 0, k / 2))<SUB>40</SUB>>", "243": "<(LITERAL,0,rec(i, j, 0, k / 2))<SUB>40</SUB>>", "245": "<(IDENTIFIER,k,k / 2)<SUB>40</SUB>>", "247": "<(append,sb.append(min * 2).append(&quot; &quot;))<SUB>42</SUB>>", "249": "<(IDENTIFIER,sb,sb.append(min * 2))<SUB>42</SUB>>", "251": "<(IDENTIFIER,min,min * 2)<SUB>42</SUB>>", "253": "<(LITERAL,&quot; &quot;,sb.append(min * 2).append(&quot; &quot;))<SUB>42</SUB>>", "255": "<(IDENTIFIER,sb,sb.append(&quot;\\n&quot;))<SUB>44</SUB>>", "257": "<(println,System.out.println(sb))<SUB>47</SUB>>", "259": "<(IDENTIFIER,System,System.out.println(sb))<SUB>47</SUB>>", "261": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>47</SUB>>", "263": "<(MODIFIER,STATIC)>"}}