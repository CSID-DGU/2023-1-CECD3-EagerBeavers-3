{"edges": [["19", "21"], ["19", "129"], ["19", "130"], ["19", "131"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "69"], ["21", "79"], ["21", "80"], ["21", "83"], ["21", "84"], ["21", "91"], ["21", "124"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "62"], ["58", "68"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "66"], ["64", "65"], ["66", "67"], ["69", "70"], ["69", "71"], ["69", "72"], ["72", "73"], ["72", "76"], ["72", "78"], ["73", "74"], ["73", "75"], ["76", "77"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "122"], ["103", "104"], ["103", "113"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["69", "80"], ["80", "88"], ["84", "93"], ["124", "131"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "55"], ["49", "75"], ["52", "49"], ["54", "52"], ["86", "84"], ["93", "96"], ["96", "106"], ["96", "127"], ["99", "96"], ["125", "124"], ["28", "26"], ["55", "61"], ["73", "76"], ["76", "69"], ["88", "86"], ["127", "125"], ["59", "64"], ["62", "54"], ["75", "73"], ["103", "122"], ["103", "99"], ["122", "99"], ["61", "59"], ["64", "66"], ["66", "62"], ["104", "103"], ["104", "115"], ["113", "103"], ["105", "112"], ["110", "104"], ["114", "121"], ["119", "113"], ["106", "109"], ["109", "105"], ["112", "110"], ["115", "118"], ["118", "114"], ["121", "119"], ["19", "24"], ["20", "131"], ["22", "131"], ["25", "131"], ["25", "131"], ["30", "131"], ["37", "131"], ["35", "131"], ["35", "131"], ["40", "131"], ["40", "131"], ["69", "131"], ["73", "131"], ["76", "131"], ["76", "131"], ["69", "131"], ["80", "131"], ["84", "131"], ["88", "131"], ["84", "131"], ["84", "131"], ["93", "131"], ["96", "131"], ["96", "131"], ["96", "131"], ["124", "131"], ["124", "131"], ["124", "131"], ["104", "131"], ["103", "131"], ["113", "131"], ["103", "131"], ["103", "131"], ["122", "131"], ["99", "131"], ["54", "131"], ["62", "131"], ["62", "131"], ["66", "131"], ["62", "131"], ["54", "131"], ["52", "131"], ["69", "131"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "80"], ["69", "84"], ["22", "25"], ["19", "25"], ["19", "46"], ["59", "54"], ["62", "54"], ["19", "54"], ["19", "69"], ["40", "69"], ["54", "69"], ["73", "69"], ["76", "69"], ["19", "93"], ["80", "124"], ["122", "124"], ["19", "124"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["19", "73"], ["19", "78"], ["93", "96"], ["99", "96"], ["19", "96"], ["49", "96"], ["96", "99"], ["19", "99"], ["19", "59"], ["19", "68"], ["73", "76"], ["19", "76"], ["35", "88"], ["19", "88"], ["59", "62"], ["19", "62"], ["64", "62"], ["66", "62"], ["104", "103"], ["104", "103"], ["113", "103"], ["113", "103"], ["80", "122"], ["19", "122"], ["37", "64"], ["66", "64"], ["19", "64"], ["64", "66"], ["19", "66"], ["84", "104"], ["84", "113"], ["49", "49"], ["49", "61"], ["49", "64"], ["49", "66"], ["49", "52"], ["49", "59"], ["49", "55"], ["49", "54"], ["49", "62"], ["96", "96"], ["96", "105"], ["96", "99"], ["96", "103"], ["96", "104"], ["96", "110"], ["96", "106"], ["96", "112"], ["96", "109"], ["103", "122"], ["104", "115"], ["104", "113"], ["104", "118"], ["104", "114"], ["104", "119"], ["104", "121"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,Point[] P: ANY)<SUB>5</SUB>>", "41": "<(IDENTIFIER,P,ANY P = new Point[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new Point[n])<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,P[i])<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,P[i] = new Point(in.nextInt(), in.nextInt()))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.alloc,new Point(in.nextInt(), in.nextInt()))<SUB>7</SUB>>", "63": "<(IDENTIFIER,$obj1,new Point(in.nextInt(), in.nextInt()))>", "65": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "67": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "69": "<(sort,sort(P, new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point A, Point B) {\\012        if (A.x != B.x)\\012            return B.x - A.x;\\012        return A.y - B.y;\\012    }\\012}))<SUB>8</SUB>>", "71": "<(IDENTIFIER,P,sort(P, new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point A, Point B) {\\012        if (A.x != B.x)\\012            return B.x - A.x;\\012        return A.y - B.y;\\012    }\\012}))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "75": "<(&lt;operator&gt;.alloc,new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point A, Point B) {\\012        if (A.x != B.x)\\012            return B.x - A.x;\\012        return A.y - B.y;\\012    }\\012})<SUB>8</SUB>>", "77": "<(IDENTIFIER,$obj2,new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point A, Point B) {\\012        if (A.x != B.x)\\012            return B.x - A.x;\\012        return A.y - B.y;\\012    }\\012})>", "79": "<(LOCAL,int cnt: int)<SUB>14</SUB>>", "81": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>14</SUB>>", "83": "<(LOCAL,Point ans: ANY)<SUB>15</SUB>>", "85": "<(IDENTIFIER,ans,ANY ans = P[k - 1])<SUB>15</SUB>>", "87": "<(IDENTIFIER,P,ANY ans = P[k - 1])<SUB>15</SUB>>", "89": "<(IDENTIFIER,k,k - 1)<SUB>15</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.logicalAnd,P[i].x == ans.x &amp;&amp; P[i].y == ans.y)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,P[i].x)<SUB>17</SUB>>", "107": "<(IDENTIFIER,P,P[i].x == ans.x)<SUB>17</SUB>>", "109": "<(FIELD_IDENTIFIER,x,x)<SUB>17</SUB>>", "111": "<(IDENTIFIER,ans,P[i].x == ans.x)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.equals,P[i].y == ans.y)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,P[i])<SUB>17</SUB>>", "117": "<(IDENTIFIER,i,P[i].y == ans.y)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,ans.y)<SUB>17</SUB>>", "121": "<(FIELD_IDENTIFIER,y,y)<SUB>17</SUB>>", "123": "<(IDENTIFIER,cnt,cnt++)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "129": "<(MODIFIER,PUBLIC)>", "131": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}