{"edges": [["17", "18"], ["17", "19"], ["17", "288"], ["17", "289"], ["17", "290"], ["19", "20"], ["19", "21"], ["19", "26"], ["19", "27"], ["19", "32"], ["19", "33"], ["19", "37"], ["19", "56"], ["19", "57"], ["19", "63"], ["19", "90"], ["19", "91"], ["19", "94"], ["19", "281"], ["19", "286"], ["21", "22"], ["21", "23"], ["23", "24"], ["24", "25"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["37", "42"], ["37", "45"], ["37", "47"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["57", "58"], ["57", "59"], ["59", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "79"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "89"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["104", "106"], ["104", "113"], ["104", "268"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "121"], ["113", "123"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "154"], ["123", "218"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "138"], ["132", "149"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "148"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "164"], ["154", "166"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["166", "174"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "217"], ["175", "176"], ["175", "210"], ["176", "177"], ["176", "180"], ["176", "199"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "198"], ["181", "182"], ["181", "195"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["218", "225"], ["218", "228"], ["218", "230"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["230", "238"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "267"], ["239", "240"], ["239", "260"], ["240", "241"], ["240", "244"], ["240", "255"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "285"], ["286", "287"], ["21", "31"], ["27", "35"], ["33", "39"], ["57", "65"], ["91", "96"], ["281", "286"], ["286", "290"], ["23", "21"], ["29", "27"], ["35", "33"], ["39", "42"], ["42", "48"], ["42", "60"], ["45", "42"], ["47", "45"], ["59", "57"], ["65", "68"], ["68", "76"], ["68", "91"], ["71", "68"], ["73", "71"], ["96", "99"], ["99", "110"], ["99", "283"], ["102", "99"], ["283", "281"], ["24", "23"], ["31", "29"], ["48", "52"], ["51", "47"], ["60", "59"], ["74", "81"], ["79", "73"], ["106", "115"], ["268", "102"], ["52", "51"], ["76", "74"], ["80", "79"], ["108", "106"], ["115", "118"], ["118", "126"], ["118", "272"], ["121", "118"], ["270", "268"], ["81", "85"], ["84", "80"], ["110", "108"], ["124", "156"], ["271", "277"], ["276", "270"], ["85", "84"], ["125", "134"], ["132", "124"], ["156", "161"], ["159", "168"], ["159", "222"], ["164", "161"], ["166", "164"], ["220", "225"], ["225", "232"], ["225", "121"], ["228", "225"], ["230", "228"], ["272", "271"], ["277", "276"], ["126", "129"], ["129", "125"], ["133", "143"], ["133", "150"], ["138", "132"], ["149", "132"], ["161", "159"], ["167", "177"], ["174", "166"], ["222", "220"], ["231", "241"], ["238", "230"], ["134", "133"], ["139", "138"], ["150", "149"], ["168", "171"], ["171", "167"], ["175", "174"], ["232", "235"], ["235", "231"], ["239", "238"], ["140", "139"], ["176", "211"], ["210", "175"], ["240", "261"], ["260", "239"], ["142", "140"], ["177", "186"], ["177", "201"], ["180", "176"], ["199", "176"], ["211", "214"], ["214", "210"], ["241", "248"], ["241", "256"], ["244", "240"], ["255", "240"], ["261", "264"], ["264", "260"], ["143", "142"], ["181", "180"], ["200", "206"], ["205", "199"], ["245", "252"], ["252", "244"], ["256", "255"], ["182", "195"], ["195", "181"], ["201", "200"], ["206", "205"], ["247", "245"], ["184", "182"], ["248", "247"], ["185", "191"], ["190", "184"], ["186", "185"], ["191", "190"], ["17", "24"], ["18", "290"], ["21", "290"], ["23", "290"], ["21", "290"], ["21", "290"], ["27", "290"], ["27", "290"], ["33", "290"], ["33", "290"], ["33", "290"], ["57", "290"], ["59", "290"], ["57", "290"], ["57", "290"], ["65", "290"], ["68", "290"], ["68", "290"], ["68", "290"], ["91", "290"], ["96", "290"], ["99", "290"], ["99", "290"], ["283", "290"], ["283", "290"], ["281", "290"], ["281", "290"], ["286", "290"], ["286", "290"], ["106", "290"], ["108", "290"], ["106", "290"], ["106", "290"], ["115", "290"], ["118", "290"], ["118", "290"], ["118", "290"], ["270", "290"], ["270", "290"], ["268", "290"], ["268", "290"], ["102", "290"], ["124", "290"], ["132", "290"], ["132", "290"], ["139", "290"], ["138", "290"], ["132", "290"], ["124", "290"], ["124", "290"], ["156", "290"], ["159", "290"], ["220", "290"], ["220", "290"], ["225", "290"], ["225", "290"], ["121", "290"], ["230", "290"], ["240", "290"], ["240", "290"], ["244", "290"], ["244", "290"], ["240", "290"], ["239", "290"], ["238", "290"], ["230", "290"], ["230", "290"], ["228", "290"], ["166", "290"], ["176", "290"], ["199", "290"], ["199", "290"], ["176", "290"], ["184", "290"], ["184", "290"], ["181", "290"], ["181", "290"], ["180", "290"], ["176", "290"], ["175", "290"], ["174", "290"], ["166", "290"], ["166", "290"], ["164", "290"], ["73", "290"], ["80", "290"], ["84", "290"], ["80", "290"], ["79", "290"], ["73", "290"], ["73", "290"], ["71", "290"], ["47", "290"], ["51", "290"], ["47", "290"], ["47", "290"], ["45", "290"], ["24", "290"], ["17", "18"], ["23", "21"], ["21", "27"], ["35", "33"], ["59", "57"], ["17", "91"], ["17", "39"], ["51", "47"], ["51", "47"], ["17", "65"], ["79", "73"], ["79", "73"], ["17", "96"], ["17", "281"], ["283", "281"], ["283", "281"], ["281", "286"], ["17", "286"], ["24", "23"], ["27", "35"], ["17", "35"], ["39", "42"], ["45", "42"], ["17", "42"], ["35", "42"], ["42", "45"], ["17", "45"], ["42", "59"], ["17", "59"], ["65", "68"], ["71", "68"], ["17", "68"], ["42", "68"], ["17", "71"], ["68", "71"], ["96", "99"], ["102", "99"], ["17", "99"], ["99", "102"], ["133", "102"], ["241", "102"], ["177", "102"], ["17", "102"], ["108", "106"], ["108", "106"], ["91", "283"], ["268", "283"], ["17", "283"], ["138", "283"], ["238", "283"], ["174", "283"], ["79", "283"], ["17", "24"], ["21", "51"], ["17", "51"], ["42", "60"], ["17", "60"], ["33", "79"], ["47", "79"], ["84", "79"], ["84", "79"], ["17", "79"], ["17", "115"], ["91", "268"], ["17", "268"], ["68", "76"], ["17", "76"], ["33", "80"], ["47", "80"], ["84", "80"], ["84", "80"], ["17", "108"], ["68", "108"], ["118", "108"], ["115", "118"], ["121", "118"], ["17", "118"], ["68", "118"], ["17", "121"], ["118", "121"], ["138", "124"], ["138", "124"], ["140", "124"], ["57", "84"], ["17", "84"], ["68", "110"], ["118", "110"], ["17", "110"], ["17", "156"], ["174", "166"], ["174", "166"], ["33", "220"], ["159", "220"], ["238", "230"], ["238", "230"], ["138", "132"], ["138", "132"], ["140", "132"], ["156", "159"], ["164", "159"], ["17", "159"], ["33", "159"], ["133", "159"], ["177", "164"], ["17", "164"], ["220", "225"], ["228", "225"], ["17", "225"], ["241", "228"], ["17", "228"], ["118", "129"], ["17", "129"], ["33", "133"], ["47", "133"], ["159", "133"], ["99", "133"], ["241", "133"], ["177", "133"], ["17", "133"], ["140", "138"], ["140", "138"], ["17", "138"], ["238", "138"], ["174", "138"], ["79", "138"], ["182", "174"], ["182", "174"], ["57", "174"], ["84", "174"], ["17", "174"], ["230", "174"], ["166", "174"], ["138", "174"], ["238", "174"], ["79", "174"], ["245", "238"], ["245", "238"], ["57", "238"], ["84", "238"], ["230", "238"], ["166", "238"], ["138", "238"], ["174", "238"], ["79", "238"], ["17", "238"], ["140", "139"], ["140", "139"], ["17", "139"], ["17", "171"], ["118", "171"], ["182", "175"], ["182", "175"], ["57", "175"], ["84", "175"], ["17", "175"], ["230", "175"], ["166", "175"], ["17", "235"], ["118", "235"], ["245", "239"], ["245", "239"], ["57", "239"], ["84", "239"], ["230", "239"], ["166", "239"], ["17", "140"], ["182", "176"], ["182", "176"], ["57", "176"], ["84", "176"], ["17", "176"], ["245", "240"], ["245", "240"], ["57", "240"], ["84", "240"], ["159", "177"], ["17", "177"], ["133", "177"], ["182", "180"], ["182", "180"], ["57", "180"], ["84", "180"], ["17", "180"], ["17", "214"], ["118", "214"], ["225", "241"], ["17", "241"], ["133", "241"], ["177", "241"], ["245", "244"], ["245", "244"], ["57", "244"], ["84", "244"], ["17", "264"], ["118", "264"], ["182", "181"], ["182", "181"], ["57", "181"], ["84", "181"], ["17", "245"], ["17", "182"], ["42", "42"], ["42", "52"], ["42", "48"], ["42", "51"], ["42", "47"], ["42", "45"], ["68", "68"], ["68", "84"], ["68", "74"], ["68", "76"], ["68", "80"], ["68", "71"], ["68", "73"], ["68", "81"], ["68", "85"], ["68", "79"], ["99", "102"], ["99", "272"], ["99", "118"], ["99", "268"], ["99", "276"], ["99", "108"], ["99", "115"], ["99", "277"], ["99", "99"], ["99", "106"], ["99", "270"], ["99", "110"], ["99", "271"], ["118", "161"], ["118", "129"], ["118", "134"], ["118", "118"], ["118", "159"], ["118", "222"], ["118", "133"], ["118", "225"], ["118", "132"], ["118", "121"], ["118", "220"], ["118", "126"], ["118", "156"], ["118", "124"], ["118", "125"], ["159", "214"], ["159", "167"], ["159", "161"], ["159", "168"], ["159", "174"], ["159", "159"], ["159", "176"], ["159", "177"], ["159", "164"], ["159", "171"], ["159", "166"], ["159", "210"], ["159", "211"], ["159", "175"], ["225", "230"], ["225", "240"], ["225", "228"], ["225", "264"], ["225", "238"], ["225", "260"], ["225", "241"], ["225", "225"], ["225", "232"], ["225", "261"], ["225", "231"], ["225", "239"], ["225", "235"], ["133", "150"], ["133", "138"], ["133", "140"], ["133", "149"], ["133", "139"], ["133", "142"], ["133", "143"], ["177", "206"], ["177", "181"], ["177", "195"], ["177", "190"], ["177", "184"], ["177", "182"], ["177", "186"], ["177", "201"], ["177", "180"], ["177", "200"], ["177", "199"], ["177", "185"], ["177", "191"], ["177", "205"], ["241", "256"], ["241", "247"], ["241", "244"], ["241", "245"], ["241", "255"], ["241", "252"], ["241", "248"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,char[] cs = toCharArray())<SUB>2</SUB>>", "23": "<(toCharArray,toCharArray())<SUB>2</SUB>>", "25": "<(IDENTIFIER,in,next())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = cs.length)<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.fieldAccess,cs.length)<SUB>3</SUB>>", "31": "<(FIELD_IDENTIFIER,length,length)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.alloc,new int[n])>", "37": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "41": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "43": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,x[i] = cs[i] - '0')<SUB>6</SUB>>", "49": "<(IDENTIFIER,x,x[i] = cs[i] - '0')<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.subtraction,cs[i] - '0')<SUB>6</SUB>>", "53": "<(IDENTIFIER,cs,cs[i] - '0')<SUB>6</SUB>>", "55": "<(LITERAL,'0',cs[i] - '0')<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,long[] dp1 = new long[n + 1])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "61": "<(IDENTIFIER,n,n + 1)<SUB>7</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.preIncrement,++i)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,dp1[i + 1] = (x[i] + dp1[i] * 10) % M)<SUB>9</SUB>>", "75": "<(IDENTIFIER,dp1,dp1[i + 1] = (x[i] + dp1[i] * 10) % M)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,i + 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.modulo,(x[i] + dp1[i] * 10) % M)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,x[i] + dp1[i] * 10)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,dp1[i])<SUB>9</SUB>>", "87": "<(IDENTIFIER,i,dp1[i] * 10)<SUB>9</SUB>>", "89": "<(IDENTIFIER,M,(x[i] + dp1[i] * 10) % M)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>10</SUB>>", "93": "<(LITERAL,0,long ans = 0)<SUB>10</SUB>>", "95": "<(LOCAL,int d1: int)<SUB>11</SUB>>", "97": "<(IDENTIFIER,d1,int d1 = 1)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.lessEqualsThan,d1 &lt;= 9)<SUB>11</SUB>>", "101": "<(LITERAL,9,d1 &lt;= 9)<SUB>11</SUB>>", "103": "<(IDENTIFIER,d1,++d1)<SUB>11</SUB>>", "105": "<(LOCAL,long[][] dp2: long[][])<SUB>12</SUB>>", "107": "<(IDENTIFIER,dp2,long[][] dp2 = new long[2][n + 1])<SUB>12</SUB>>", "109": "<(LITERAL,2,new long[2][n + 1])<SUB>12</SUB>>", "111": "<(IDENTIFIER,n,n + 1)<SUB>12</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "117": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "119": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.preIncrement,++i)<SUB>13</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,dp2[0][i + 1])<SUB>14</SUB>>", "127": "<(IDENTIFIER,dp2,dp2[0][i + 1] = x[i] &gt;= d1 ? (10 * dp2[0][i] + 1) % M : dp2[0][i])<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "131": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.greaterEqualsThan,x[i] &gt;= d1)<SUB>14</SUB>>", "135": "<(IDENTIFIER,x,x[i] &gt;= d1)<SUB>14</SUB>>", "137": "<(IDENTIFIER,d1,x[i] &gt;= d1)<SUB>14</SUB>>", "139": "<(&lt;operator&gt;.addition,10 * dp2[0][i] + 1)<SUB>14</SUB>>", "141": "<(LITERAL,10,10 * dp2[0][i])<SUB>14</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp2[0])<SUB>14</SUB>>", "145": "<(LITERAL,0,10 * dp2[0][i])<SUB>14</SUB>>", "147": "<(LITERAL,1,10 * dp2[0][i] + 1)<SUB>14</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,dp2[0][i])<SUB>14</SUB>>", "151": "<(IDENTIFIER,dp2,x[i] &gt;= d1 ? (10 * dp2[0][i] + 1) % M : dp2[0][i])<SUB>14</SUB>>", "153": "<(IDENTIFIER,i,x[i] &gt;= d1 ? (10 * dp2[0][i] + 1) % M : dp2[0][i])<SUB>14</SUB>>", "155": "<(LOCAL,int d2: int)<SUB>15</SUB>>", "157": "<(IDENTIFIER,d2,int d2 = 0)<SUB>15</SUB>>", "159": "<(&lt;operator&gt;.lessThan,d2 &lt; x[i])<SUB>15</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>15</SUB>>", "163": "<(IDENTIFIER,i,d2 &lt; x[i])<SUB>15</SUB>>", "165": "<(IDENTIFIER,d2,++d2)<SUB>15</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,dp2[1][i + 1])<SUB>16</SUB>>", "169": "<(IDENTIFIER,dp2,dp2[1][i + 1] = ((d2 &gt;= d1 ? 10 * (dp2[0][i] + dp2[1][i]) + dp1[i] + 1 : dp2[0][i] + dp2[1][i]) + dp2[1][i + 1]) % M)<SUB>16</SUB>>", "171": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "173": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "175": "<(&lt;operator&gt;.addition,(d2 &gt;= d1 ? 10 * (dp2[0][i] + dp2[1][i]) + dp1[i] + 1 : dp2[0][i] + dp2[1][i]) + dp2[1][i + 1])<SUB>16</SUB>>", "177": "<(&lt;operator&gt;.greaterEqualsThan,d2 &gt;= d1)<SUB>16</SUB>>", "179": "<(IDENTIFIER,d1,d2 &gt;= d1)<SUB>16</SUB>>", "181": "<(&lt;operator&gt;.addition,10 * (dp2[0][i] + dp2[1][i]) + dp1[i])<SUB>16</SUB>>", "183": "<(LITERAL,10,10 * (dp2[0][i] + dp2[1][i]))<SUB>16</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp2[0][i])<SUB>16</SUB>>", "187": "<(IDENTIFIER,dp2,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "189": "<(IDENTIFIER,i,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,dp2[1])<SUB>16</SUB>>", "193": "<(LITERAL,1,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dp1[i])<SUB>16</SUB>>", "197": "<(IDENTIFIER,i,10 * (dp2[0][i] + dp2[1][i]) + dp1[i])<SUB>16</SUB>>", "199": "<(&lt;operator&gt;.addition,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp2[0])<SUB>16</SUB>>", "203": "<(LITERAL,0,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp2[1][i])<SUB>16</SUB>>", "207": "<(IDENTIFIER,dp2,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "209": "<(IDENTIFIER,i,dp2[0][i] + dp2[1][i])<SUB>16</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,dp2[1])<SUB>16</SUB>>", "213": "<(LITERAL,1,(d2 &gt;= d1 ? 10 * (dp2[0][i] + dp2[1][i]) + dp1[i] + 1 : dp2[0][i] + dp2[1][i]) + dp2[1][i + 1])<SUB>16</SUB>>", "215": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "217": "<(IDENTIFIER,M,((d2 &gt;= d1 ? 10 * (dp2[0][i] + dp2[1][i]) + dp1[i] + 1 : dp2[0][i] + dp2[1][i]) + dp2[1][i + 1]) % M)<SUB>16</SUB>>", "219": "<(LOCAL,int d2: int)<SUB>17</SUB>>", "221": "<(IDENTIFIER,d2,int d2 = x[i])<SUB>17</SUB>>", "223": "<(IDENTIFIER,x,int d2 = x[i])<SUB>17</SUB>>", "225": "<(&lt;operator&gt;.lessEqualsThan,d2 &lt;= 9)<SUB>17</SUB>>", "227": "<(LITERAL,9,d2 &lt;= 9)<SUB>17</SUB>>", "229": "<(IDENTIFIER,d2,++d2)<SUB>17</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,dp2[1][i + 1])<SUB>18</SUB>>", "233": "<(IDENTIFIER,dp2,dp2[1][i + 1] = ((d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i]) + dp2[1][i + 1]) % M)<SUB>18</SUB>>", "235": "<(&lt;operator&gt;.addition,i + 1)<SUB>18</SUB>>", "237": "<(LITERAL,1,i + 1)<SUB>18</SUB>>", "239": "<(&lt;operator&gt;.addition,(d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i]) + dp2[1][i + 1])<SUB>18</SUB>>", "241": "<(&lt;operator&gt;.greaterEqualsThan,d2 &gt;= d1)<SUB>18</SUB>>", "243": "<(IDENTIFIER,d1,d2 &gt;= d1)<SUB>18</SUB>>", "245": "<(&lt;operator&gt;.multiplication,10 * dp2[1][i])<SUB>18</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dp2[1][i])<SUB>18</SUB>>", "249": "<(IDENTIFIER,dp2,10 * dp2[1][i])<SUB>18</SUB>>", "251": "<(IDENTIFIER,i,10 * dp2[1][i])<SUB>18</SUB>>", "253": "<(IDENTIFIER,dp1,10 * dp2[1][i] + dp1[i])<SUB>18</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,dp2[1][i])<SUB>18</SUB>>", "257": "<(IDENTIFIER,dp2,d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i])<SUB>18</SUB>>", "259": "<(IDENTIFIER,i,d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i])<SUB>18</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp2[1])<SUB>18</SUB>>", "263": "<(LITERAL,1,(d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i]) + dp2[1][i + 1])<SUB>18</SUB>>", "265": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "267": "<(IDENTIFIER,M,((d2 &gt;= d1 ? 10 * dp2[1][i] + dp1[i] : dp2[1][i]) + dp2[1][i + 1]) % M)<SUB>18</SUB>>", "269": "<(IDENTIFIER,ans,ans += dp2[0][n] + dp2[1][n])<SUB>20</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp2[0][n])<SUB>20</SUB>>", "273": "<(IDENTIFIER,dp2,dp2[0][n] + dp2[1][n])<SUB>20</SUB>>", "275": "<(IDENTIFIER,n,dp2[0][n] + dp2[1][n])<SUB>20</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp2[1])<SUB>20</SUB>>", "279": "<(LITERAL,1,dp2[0][n] + dp2[1][n])<SUB>20</SUB>>", "281": "<(println,println(ans % M))<SUB>22</SUB>>", "283": "<(&lt;operator&gt;.modulo,ans % M)<SUB>22</SUB>>", "285": "<(IDENTIFIER,M,ans % M)<SUB>22</SUB>>", "287": "<(IDENTIFIER,out,close())<SUB>23</SUB>>", "289": "<(MODIFIER,STATIC)>"}}