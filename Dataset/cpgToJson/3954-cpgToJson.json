{"edges": [["21", "22"], ["21", "23"], ["21", "298"], ["21", "299"], ["21", "300"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "47"], ["23", "51"], ["23", "94"], ["23", "95"], ["23", "100"], ["23", "101"], ["23", "106"], ["23", "107"], ["23", "113"], ["23", "114"], ["23", "119"], ["23", "196"], ["23", "197"], ["23", "200"], ["23", "201"], ["23", "206"], ["23", "280"], ["23", "283"], ["23", "296"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "78"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "86"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "179"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["153", "154"], ["153", "163"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "214"], ["206", "216"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["216", "217"], ["216", "218"], ["216", "221"], ["216", "222"], ["216", "227"], ["216", "263"], ["216", "268"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["227", "232"], ["227", "235"], ["227", "237"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["238", "246"], ["239", "240"], ["239", "245"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["246", "247"], ["246", "256"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "272"], ["270", "273"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "295"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["296", "297"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "44"], ["42", "49"], ["47", "53"], ["95", "103"], ["101", "110"], ["107", "116"], ["114", "121"], ["197", "203"], ["201", "208"], ["280", "287"], ["283", "296"], ["296", "300"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["44", "42"], ["49", "47"], ["53", "56"], ["56", "64"], ["56", "97"], ["59", "56"], ["97", "95"], ["103", "101"], ["109", "107"], ["116", "114"], ["121", "124"], ["124", "131"], ["124", "197"], ["127", "124"], ["203", "201"], ["208", "211"], ["211", "218"], ["211", "280"], ["214", "211"], ["285", "283"], ["34", "32"], ["110", "109"], ["131", "136"], ["218", "224"], ["222", "229"], ["268", "214"], ["286", "285"], ["64", "67"], ["67", "76"], ["67", "59"], ["70", "67"], ["136", "139"], ["139", "148"], ["139", "180"], ["142", "139"], ["180", "185"], ["180", "127"], ["224", "222"], ["229", "232"], ["232", "241"], ["232", "264"], ["235", "232"], ["264", "214"], ["264", "274"], ["270", "268"], ["287", "292"], ["290", "286"], ["74", "80"], ["184", "127"], ["273", "270"], ["292", "290"], ["76", "74"], ["79", "88"], ["79", "70"], ["146", "159"], ["146", "142"], ["185", "190"], ["188", "184"], ["239", "250"], ["239", "235"], ["274", "277"], ["277", "273"], ["80", "79"], ["80", "83"], ["83", "79"], ["87", "70"], ["147", "146"], ["154", "164"], ["163", "142"], ["190", "193"], ["193", "188"], ["240", "239"], ["247", "259"], ["256", "235"], ["88", "91"], ["91", "87"], ["148", "147"], ["156", "154"], ["164", "169"], ["167", "163"], ["241", "240"], ["249", "247"], ["258", "256"], ["157", "156"], ["169", "176"], ["172", "167"], ["250", "253"], ["253", "249"], ["259", "258"], ["159", "157"], ["174", "172"], ["176", "174"], ["21", "26"], ["22", "300"], ["24", "300"], ["27", "300"], ["28", "300"], ["31", "300"], ["31", "300"], ["37", "300"], ["44", "300"], ["42", "300"], ["42", "300"], ["47", "300"], ["47", "300"], ["47", "300"], ["53", "300"], ["56", "300"], ["56", "300"], ["95", "300"], ["95", "300"], ["103", "300"], ["101", "300"], ["101", "300"], ["107", "300"], ["107", "300"], ["107", "300"], ["116", "300"], ["114", "300"], ["114", "300"], ["121", "300"], ["124", "300"], ["124", "300"], ["197", "300"], ["203", "300"], ["201", "300"], ["201", "300"], ["208", "300"], ["211", "300"], ["211", "300"], ["211", "300"], ["280", "300"], ["287", "300"], ["286", "300"], ["290", "300"], ["290", "300"], ["286", "300"], ["285", "300"], ["283", "300"], ["283", "300"], ["296", "300"], ["296", "300"], ["218", "300"], ["222", "300"], ["224", "300"], ["222", "300"], ["222", "300"], ["229", "300"], ["232", "300"], ["232", "300"], ["232", "300"], ["264", "300"], ["264", "300"], ["270", "300"], ["274", "300"], ["273", "300"], ["273", "300"], ["270", "300"], ["268", "300"], ["268", "300"], ["214", "300"], ["240", "300"], ["239", "300"], ["239", "300"], ["249", "300"], ["247", "300"], ["256", "300"], ["258", "300"], ["256", "300"], ["235", "300"], ["131", "300"], ["136", "300"], ["139", "300"], ["139", "300"], ["139", "300"], ["180", "300"], ["180", "300"], ["184", "300"], ["188", "300"], ["193", "300"], ["188", "300"], ["184", "300"], ["184", "300"], ["127", "300"], ["147", "300"], ["146", "300"], ["146", "300"], ["156", "300"], ["154", "300"], ["163", "300"], ["167", "300"], ["174", "300"], ["167", "300"], ["163", "300"], ["163", "300"], ["142", "300"], ["64", "300"], ["67", "300"], ["67", "300"], ["59", "300"], ["76", "300"], ["74", "300"], ["74", "300"], ["80", "300"], ["79", "300"], ["79", "300"], ["79", "300"], ["87", "300"], ["87", "300"], ["70", "300"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["44", "42"], ["49", "47"], ["97", "95"], ["97", "95"], ["103", "101"], ["103", "101"], ["109", "107"], ["116", "114"], ["116", "114"], ["21", "197"], ["203", "201"], ["203", "201"], ["197", "280"], ["268", "280"], ["21", "280"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "53"], ["21", "121"], ["21", "208"], ["42", "280"], ["31", "283"], ["21", "283"], ["285", "283"], ["285", "283"], ["283", "296"], ["21", "296"], ["27", "39"], ["21", "39"], ["39", "44"], ["21", "44"], ["37", "49"], ["21", "49"], ["53", "56"], ["59", "56"], ["21", "56"], ["49", "56"], ["67", "56"], ["56", "59"], ["83", "59"], ["21", "59"], ["56", "97"], ["21", "97"], ["97", "103"], ["21", "103"], ["95", "103"], ["110", "109"], ["110", "109"], ["21", "116"], ["110", "116"], ["121", "124"], ["127", "124"], ["21", "124"], ["114", "124"], ["180", "127"], ["193", "127"], ["21", "127"], ["124", "131"], ["21", "131"], ["21", "203"], ["101", "203"], ["156", "203"], ["208", "211"], ["214", "211"], ["21", "211"], ["201", "211"], ["253", "211"], ["264", "214"], ["274", "214"], ["21", "214"], ["211", "218"], ["21", "218"], ["224", "222"], ["224", "222"], ["270", "268"], ["270", "268"], ["270", "268"], ["286", "285"], ["286", "285"], ["21", "285"], ["21", "64"], ["21", "110"], ["103", "110"], ["21", "136"], ["21", "229"], ["287", "286"], ["290", "286"], ["290", "286"], ["64", "67"], ["70", "67"], ["21", "67"], ["56", "67"], ["67", "70"], ["83", "70"], ["91", "70"], ["21", "70"], ["76", "74"], ["136", "139"], ["142", "139"], ["21", "139"], ["116", "139"], ["148", "142"], ["176", "142"], ["21", "142"], ["147", "180"], ["174", "180"], ["21", "180"], ["124", "180"], ["131", "180"], ["154", "180"], ["188", "184"], ["188", "184"], ["188", "184"], ["124", "224"], ["21", "224"], ["229", "232"], ["235", "232"], ["21", "232"], ["203", "232"], ["258", "232"], ["241", "235"], ["21", "235"], ["218", "264"], ["247", "264"], ["21", "264"], ["240", "264"], ["211", "264"], ["188", "270"], ["167", "270"], ["21", "270"], ["197", "270"], ["268", "270"], ["274", "270"], ["274", "270"], ["107", "270"], ["280", "287"], ["21", "287"], ["292", "290"], ["21", "290"], ["292", "290"], ["274", "273"], ["274", "273"], ["107", "273"], ["21", "292"], ["197", "292"], ["268", "292"], ["44", "76"], ["21", "76"], ["80", "79"], ["80", "79"], ["83", "79"], ["83", "79"], ["91", "87"], ["91", "87"], ["147", "146"], ["147", "146"], ["21", "146"], ["156", "154"], ["156", "154"], ["167", "163"], ["167", "163"], ["167", "163"], ["167", "188"], ["21", "188"], ["107", "188"], ["184", "188"], ["163", "188"], ["193", "188"], ["193", "188"], ["240", "239"], ["240", "239"], ["21", "239"], ["249", "247"], ["249", "247"], ["258", "256"], ["258", "256"], ["193", "274"], ["21", "274"], ["264", "274"], ["74", "80"], ["21", "80"], ["56", "83"], ["21", "83"], ["67", "83"], ["47", "87"], ["148", "147"], ["148", "147"], ["174", "147"], ["21", "147"], ["124", "147"], ["131", "154"], ["21", "154"], ["21", "193"], ["180", "193"], ["241", "240"], ["241", "240"], ["21", "240"], ["211", "240"], ["218", "247"], ["21", "247"], ["222", "256"], ["21", "256"], ["21", "91"], ["67", "91"], ["83", "91"], ["21", "148"], ["139", "148"], ["47", "156"], ["21", "156"], ["101", "156"], ["188", "167"], ["21", "167"], ["107", "167"], ["184", "167"], ["163", "167"], ["21", "241"], ["232", "241"], ["47", "249"], ["258", "249"], ["253", "249"], ["253", "249"], ["47", "258"], ["249", "258"], ["232", "258"], ["21", "258"], ["211", "253"], ["21", "253"], ["148", "159"], ["21", "159"], ["101", "159"], ["156", "159"], ["147", "174"], ["21", "174"], ["176", "174"], ["176", "174"], ["21", "176"], ["148", "176"], ["56", "64"], ["56", "56"], ["56", "67"], ["56", "59"], ["124", "136"], ["124", "131"], ["124", "127"], ["124", "139"], ["124", "180"], ["124", "124"], ["211", "214"], ["211", "232"], ["211", "264"], ["211", "224"], ["211", "229"], ["211", "211"], ["211", "222"], ["211", "218"], ["67", "67"], ["67", "74"], ["67", "76"], ["67", "79"], ["67", "80"], ["67", "70"], ["139", "146"], ["139", "148"], ["139", "139"], ["139", "142"], ["139", "147"], ["180", "188"], ["180", "185"], ["180", "190"], ["180", "184"], ["180", "193"], ["232", "240"], ["232", "232"], ["232", "239"], ["232", "235"], ["232", "241"], ["264", "273"], ["264", "268"], ["264", "274"], ["264", "277"], ["264", "270"], ["79", "87"], ["79", "91"], ["79", "88"], ["146", "167"], ["146", "154"], ["146", "169"], ["146", "163"], ["146", "174"], ["146", "164"], ["146", "157"], ["146", "159"], ["146", "176"], ["146", "156"], ["146", "172"], ["239", "256"], ["239", "247"], ["239", "259"], ["239", "258"], ["239", "249"], ["239", "253"], ["239", "250"], ["80", "83"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,double k: double)<SUB>5</SUB>>", "43": "<(IDENTIFIER,k,double k = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,scanner,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,long[] graph = new long[n])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.alloc,new long[n])>", "51": "<(CONTROL_STRUCTURE,for (Integer i = 0; Some(i &lt; n); i++),for (Integer i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,Integer i = 0)<SUB>7</SUB>>", "55": "<(LITERAL,0,Integer i = 0)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "63": "<(LOCAL,Integer j: java.lang.Integer)<SUB>8</SUB>>", "65": "<(IDENTIFIER,j,Integer j = 0)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>8</SUB>>", "69": "<(IDENTIFIER,n,j &lt; n)<SUB>8</SUB>>", "71": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "73": "<(LOCAL,Integer val: java.lang.Integer)<SUB>9</SUB>>", "75": "<(IDENTIFIER,val,Integer val = nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,scanner,nextInt())<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.logicalOr,val.equals(1) || i.equals(j))<SUB>10</SUB>>", "81": "<(IDENTIFIER,val,val.equals(1))<SUB>10</SUB>>", "83": "<(equals,i.equals(j))<SUB>10</SUB>>", "85": "<(IDENTIFIER,j,i.equals(j))<SUB>10</SUB>>", "87": "<(&lt;operators&gt;.assignmentOr,graph[i] |= 1L &lt;&lt; j)<SUB>11</SUB>>", "89": "<(IDENTIFIER,graph,graph[i] |= 1L &lt;&lt; j)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.shiftLeft,1L &lt;&lt; j)<SUB>11</SUB>>", "93": "<(IDENTIFIER,j,1L &lt;&lt; j)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.assignment,int szLeft = n / 2)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.division,n / 2)<SUB>16</SUB>>", "99": "<(LITERAL,2,n / 2)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.assignment,int szRight = n - szLeft)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.subtraction,n - szLeft)<SUB>17</SUB>>", "105": "<(IDENTIFIER,szLeft,n - szLeft)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; szLeft])<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; szLeft])>", "111": "<(LITERAL,1,1 &lt;&lt; szLeft)<SUB>19</SUB>>", "113": "<(LOCAL,int maxMask: int)<SUB>20</SUB>>", "115": "<(IDENTIFIER,maxMask,int maxMask = 1 &lt;&lt; szLeft)<SUB>20</SUB>>", "117": "<(LITERAL,1,1 &lt;&lt; szLeft)<SUB>20</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; maxMask); mask++),for (int mask = 1; Some(mask &lt; maxMask); mask++))<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>22</SUB>>", "123": "<(LITERAL,1,int mask = 1)<SUB>22</SUB>>", "125": "<(IDENTIFIER,mask,mask &lt; maxMask)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>22</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.assignment,int curMask = mask)<SUB>23</SUB>>", "133": "<(IDENTIFIER,mask,int curMask = mask)<SUB>23</SUB>>", "135": "<(LOCAL,int j: int)<SUB>25</SUB>>", "137": "<(IDENTIFIER,j,int j = 0)<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.lessThan,j &lt; szLeft)<SUB>25</SUB>>", "141": "<(IDENTIFIER,szLeft,j &lt; szLeft)<SUB>25</SUB>>", "143": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "145": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; mask) &gt; 0),if (((1 &lt;&lt; j) &amp; mask) &gt; 0))<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; mask)<SUB>26</SUB>>", "149": "<(LITERAL,1,1 &lt;&lt; j)<SUB>26</SUB>>", "151": "<(IDENTIFIER,mask,(1 &lt;&lt; j) &amp; mask)<SUB>26</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "155": "<(IDENTIFIER,curMask,curMask &amp;= graph[j + szRight] &gt;&gt; szRight)<SUB>27</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,graph[j + szRight])<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.addition,j + szRight)<SUB>27</SUB>>", "161": "<(IDENTIFIER,szRight,j + szRight)<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.assignment,dp[mask] = Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>28</SUB>>", "165": "<(IDENTIFIER,dp,dp[mask] = Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>28</SUB>>", "167": "<(max,Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>28</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>28</SUB>>", "171": "<(IDENTIFIER,mask,Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>28</SUB>>", "173": "<(IDENTIFIER,dp,Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>28</SUB>>", "175": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; j))<SUB>28</SUB>>", "177": "<(LITERAL,1,1 &lt;&lt; j)<SUB>28</SUB>>", "179": "<(CONTROL_STRUCTURE,if (mask == curMask),if (mask == curMask))<SUB>31</SUB>>", "181": "<(IDENTIFIER,mask,mask == curMask)<SUB>31</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>32</SUB>>", "187": "<(IDENTIFIER,mask,dp[mask] = Math.max(dp[mask], Integer.bitCount(mask)))<SUB>32</SUB>>", "189": "<(IDENTIFIER,Math,Math.max(dp[mask], Integer.bitCount(mask)))<SUB>32</SUB>>", "191": "<(IDENTIFIER,dp,Math.max(dp[mask], Integer.bitCount(mask)))<SUB>32</SUB>>", "193": "<(bitCount,Integer.bitCount(mask))<SUB>32</SUB>>", "195": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>32</SUB>>", "197": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>35</SUB>>", "199": "<(LITERAL,0,int ans = 0)<SUB>35</SUB>>", "201": "<(&lt;operator&gt;.assignment,int rmaxMask = 1 &lt;&lt; szRight)<SUB>36</SUB>>", "203": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; szRight)<SUB>36</SUB>>", "205": "<(IDENTIFIER,szRight,1 &lt;&lt; szRight)<SUB>36</SUB>>", "207": "<(LOCAL,int mask: int)<SUB>37</SUB>>", "209": "<(IDENTIFIER,mask,int mask = 0)<SUB>37</SUB>>", "211": "<(&lt;operator&gt;.lessThan,mask &lt; rmaxMask)<SUB>37</SUB>>", "213": "<(IDENTIFIER,rmaxMask,mask &lt; rmaxMask)<SUB>37</SUB>>", "215": "<(IDENTIFIER,mask,mask++)<SUB>37</SUB>>", "217": "<(LOCAL,int curMask: int)<SUB>38</SUB>>", "219": "<(IDENTIFIER,curMask,int curMask = mask)<SUB>38</SUB>>", "221": "<(LOCAL,int oMask: int)<SUB>39</SUB>>", "223": "<(IDENTIFIER,oMask,int oMask = maxMask - 1)<SUB>39</SUB>>", "225": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>39</SUB>>", "227": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; szRight); j++),for (int j = 0; Some(j &lt; szRight); j++))<SUB>40</SUB>>", "229": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>40</SUB>>", "231": "<(LITERAL,0,int j = 0)<SUB>40</SUB>>", "233": "<(IDENTIFIER,j,j &lt; szRight)<SUB>40</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,j++)<SUB>40</SUB>>", "237": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "239": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; j) &amp; mask) &gt; 0)<SUB>41</SUB>>", "241": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>41</SUB>>", "243": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>41</SUB>>", "245": "<(LITERAL,0,((1 &lt;&lt; j) &amp; mask) &gt; 0)<SUB>41</SUB>>", "247": "<(&lt;operators&gt;.assignmentAnd,curMask &amp;= graph[j] &amp; (rmaxMask - 1))<SUB>42</SUB>>", "249": "<(&lt;operator&gt;.and,graph[j] &amp; (rmaxMask - 1))<SUB>42</SUB>>", "251": "<(IDENTIFIER,graph,graph[j] &amp; (rmaxMask - 1))<SUB>42</SUB>>", "253": "<(&lt;operator&gt;.subtraction,rmaxMask - 1)<SUB>42</SUB>>", "255": "<(LITERAL,1,rmaxMask - 1)<SUB>42</SUB>>", "257": "<(IDENTIFIER,oMask,oMask &amp;= graph[j] &gt;&gt; szRight)<SUB>43</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,graph[j])<SUB>43</SUB>>", "261": "<(IDENTIFIER,j,graph[j] &gt;&gt; szRight)<SUB>43</SUB>>", "263": "<(CONTROL_STRUCTURE,if (curMask != mask),if (curMask != mask))<SUB>46</SUB>>", "265": "<(IDENTIFIER,curMask,curMask != mask)<SUB>46</SUB>>", "267": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>46</SUB>>", "269": "<(IDENTIFIER,ans,ans = Math.max(ans, Integer.bitCount(mask) + dp[oMask]))<SUB>47</SUB>>", "271": "<(IDENTIFIER,Math,Math.max(ans, Integer.bitCount(mask) + dp[oMask]))<SUB>47</SUB>>", "273": "<(&lt;operator&gt;.addition,Integer.bitCount(mask) + dp[oMask])<SUB>47</SUB>>", "275": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>47</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[oMask])<SUB>47</SUB>>", "279": "<(IDENTIFIER,oMask,Integer.bitCount(mask) + dp[oMask])<SUB>47</SUB>>", "281": "<(IDENTIFIER,k,k /= ans)<SUB>49</SUB>>", "283": "<(println,println(k * k * (ans * (ans - 1)) / 2))<SUB>50</SUB>>", "285": "<(&lt;operator&gt;.division,k * k * (ans * (ans - 1)) / 2)<SUB>50</SUB>>", "287": "<(&lt;operator&gt;.multiplication,k * k)<SUB>50</SUB>>", "289": "<(IDENTIFIER,k,k * k)<SUB>50</SUB>>", "291": "<(IDENTIFIER,ans,ans * (ans - 1))<SUB>50</SUB>>", "293": "<(IDENTIFIER,ans,ans - 1)<SUB>50</SUB>>", "295": "<(LITERAL,2,k * k * (ans * (ans - 1)) / 2)<SUB>50</SUB>>", "297": "<(IDENTIFIER,out,flush())<SUB>51</SUB>>", "299": "<(MODIFIER,STATIC)>"}}