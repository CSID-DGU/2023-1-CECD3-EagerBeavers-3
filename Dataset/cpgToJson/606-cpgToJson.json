{"edges": [["19", "20"], ["19", "21"], ["19", "116"], ["19", "117"], ["19", "118"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "60"], ["21", "61"], ["21", "64"], ["21", "111"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "74"], ["64", "76"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "91"], ["77", "94"], ["78", "79"], ["78", "88"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["95", "96"], ["95", "109"], ["96", "97"], ["96", "106"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "42"], ["40", "46"], ["61", "66"], ["111", "118"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "55"], ["49", "61"], ["52", "49"], ["54", "52"], ["66", "71"], ["69", "82"], ["69", "114"], ["74", "71"], ["112", "111"], ["28", "26"], ["55", "58"], ["58", "54"], ["71", "69"], ["114", "112"], ["78", "91"], ["78", "100"], ["91", "74"], ["79", "88"], ["88", "78"], ["80", "85"], ["85", "79"], ["96", "109"], ["96", "74"], ["109", "74"], ["82", "80"], ["97", "106"], ["106", "96"], ["98", "103"], ["103", "97"], ["100", "98"], ["19", "24"], ["20", "118"], ["22", "118"], ["25", "118"], ["25", "118"], ["31", "118"], ["35", "118"], ["37", "118"], ["35", "118"], ["35", "118"], ["40", "118"], ["40", "118"], ["40", "118"], ["49", "118"], ["61", "118"], ["66", "118"], ["69", "118"], ["71", "118"], ["69", "118"], ["69", "118"], ["111", "118"], ["111", "118"], ["111", "118"], ["79", "118"], ["79", "118"], ["78", "118"], ["88", "118"], ["78", "118"], ["78", "118"], ["97", "118"], ["97", "118"], ["96", "118"], ["106", "118"], ["96", "118"], ["96", "118"], ["109", "118"], ["91", "118"], ["74", "118"], ["54", "118"], ["58", "118"], ["54", "118"], ["54", "118"], ["52", "118"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["42", "40"], ["19", "61"], ["22", "25"], ["19", "25"], ["19", "46"], ["58", "54"], ["19", "66"], ["61", "111"], ["109", "111"], ["91", "111"], ["19", "111"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["66", "69"], ["74", "69"], ["19", "69"], ["71", "69"], ["71", "69"], ["19", "74"], ["69", "74"], ["37", "58"], ["19", "58"], ["49", "71"], ["19", "71"], ["19", "91"], ["79", "78"], ["79", "78"], ["88", "78"], ["88", "78"], ["61", "91"], ["109", "91"], ["40", "79"], ["97", "79"], ["97", "79"], ["54", "79"], ["19", "88"], ["35", "88"], ["106", "88"], ["97", "96"], ["97", "96"], ["106", "96"], ["106", "96"], ["61", "109"], ["91", "109"], ["19", "109"], ["69", "82"], ["19", "82"], ["40", "97"], ["79", "97"], ["79", "97"], ["19", "106"], ["88", "106"], ["19", "100"], ["69", "100"], ["49", "49"], ["49", "52"], ["49", "54"], ["49", "58"], ["49", "55"], ["69", "85"], ["69", "69"], ["69", "74"], ["69", "82"], ["69", "79"], ["69", "80"], ["69", "71"], ["69", "88"], ["69", "78"], ["78", "96"], ["78", "98"], ["78", "103"], ["78", "106"], ["78", "97"], ["78", "91"], ["78", "100"], ["96", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>3</SUB>>", "37": "<(nextInt,nextInt())<SUB>3</SUB>>", "39": "<(LOCAL,int[] a: int[])<SUB>4</SUB>>", "41": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>4</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "45": "<(LOCAL,int i: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>5</SUB>>", "57": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>5</SUB>>", "59": "<(IDENTIFIER,scan,nextInt())<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,int res = 2)<SUB>6</SUB>>", "63": "<(LITERAL,2,int res = 2)<SUB>6</SUB>>", "65": "<(LOCAL,int i: int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>7</SUB>>", "73": "<(LITERAL,1,n - 1)<SUB>7</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "77": "<(CONTROL_STRUCTURE,if (a[i + 1] - a[i] &gt; 2 * k),if (a[i + 1] - a[i] &gt; 2 * k))<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.subtraction,a[i + 1] - a[i])<SUB>8</SUB>>", "81": "<(IDENTIFIER,a,a[i + 1] - a[i])<SUB>8</SUB>>", "83": "<(IDENTIFIER,i,i + 1)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "87": "<(IDENTIFIER,i,a[i + 1] - a[i])<SUB>8</SUB>>", "89": "<(LITERAL,2,2 * k)<SUB>8</SUB>>", "91": "<(&lt;operator&gt;.assignmentPlus,res += 2)<SUB>8</SUB>>", "93": "<(LITERAL,2,res += 2)<SUB>8</SUB>>", "95": "<(CONTROL_STRUCTURE,if (a[i + 1] - a[i] == 2 * k),if (a[i + 1] - a[i] == 2 * k))<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.subtraction,a[i + 1] - a[i])<SUB>9</SUB>>", "99": "<(IDENTIFIER,a,a[i + 1] - a[i])<SUB>9</SUB>>", "101": "<(IDENTIFIER,i,i + 1)<SUB>9</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "105": "<(IDENTIFIER,i,a[i + 1] - a[i])<SUB>9</SUB>>", "107": "<(LITERAL,2,2 * k)<SUB>9</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,res++)<SUB>9</SUB>>", "111": "<(println,System.out.println(res))<SUB>11</SUB>>", "113": "<(IDENTIFIER,System,System.out.println(res))<SUB>11</SUB>>", "115": "<(IDENTIFIER,res,System.out.println(res))<SUB>11</SUB>>", "117": "<(MODIFIER,STATIC)>"}}