{"edges": [["17", "18"], ["17", "19"], ["17", "202"], ["17", "203"], ["17", "204"], ["19", "20"], ["19", "22"], ["19", "33"], ["19", "98"], ["19", "121"], ["19", "124"], ["19", "147"], ["19", "148"], ["19", "151"], ["19", "197"], ["20", "21"], ["22", "23"], ["22", "28"], ["23", "24"], ["23", "27"], ["24", "25"], ["24", "26"], ["28", "29"], ["28", "32"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["33", "38"], ["33", "41"], ["33", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "83"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "82"], ["61", "62"], ["61", "71"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "79"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "97"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "138"], ["130", "140"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "154"], ["151", "157"], ["151", "160"], ["151", "163"], ["151", "166"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "186"], ["167", "168"], ["167", "173"], ["167", "184"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "196"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["20", "24"], ["22", "35"], ["121", "125"], ["148", "154"], ["197", "204"], ["23", "29"], ["28", "22"], ["35", "38"], ["38", "99"], ["38", "45"], ["41", "38"], ["99", "102"], ["99", "121"], ["125", "127"], ["125", "148"], ["154", "157"], ["157", "163"], ["157", "200"], ["160", "157"], ["163", "160"], ["198", "197"], ["24", "23"], ["29", "28"], ["45", "48"], ["48", "56"], ["48", "41"], ["51", "48"], ["102", "105"], ["105", "114"], ["105", "121"], ["108", "105"], ["110", "108"], ["127", "132"], ["200", "198"], ["54", "84"], ["83", "51"], ["112", "110"], ["132", "135"], ["135", "143"], ["135", "148"], ["138", "135"], ["140", "138"], ["55", "65"], ["60", "54"], ["84", "89"], ["87", "83"], ["113", "118"], ["118", "112"], ["142", "140"], ["56", "55"], ["61", "60"], ["88", "87"], ["114", "113"], ["143", "142"], ["62", "75"], ["71", "61"], ["89", "93"], ["92", "88"], ["63", "68"], ["68", "62"], ["72", "80"], ["79", "71"], ["93", "92"], ["65", "63"], ["73", "72"], ["80", "79"], ["75", "73"], ["17", "20"], ["18", "204"], ["20", "204"], ["22", "204"], ["28", "204"], ["22", "204"], ["22", "204"], ["35", "204"], ["38", "204"], ["38", "204"], ["102", "204"], ["105", "204"], ["105", "204"], ["121", "204"], ["121", "204"], ["127", "204"], ["127", "204"], ["135", "204"], ["135", "204"], ["148", "204"], ["154", "204"], ["154", "204"], ["157", "204"], ["157", "204"], ["197", "204"], ["197", "204"], ["197", "204"], ["163", "204"], ["160", "204"], ["160", "204"], ["160", "204"], ["140", "204"], ["142", "204"], ["140", "204"], ["140", "204"], ["138", "204"], ["110", "204"], ["113", "204"], ["112", "204"], ["112", "204"], ["110", "204"], ["110", "204"], ["108", "204"], ["45", "204"], ["48", "204"], ["41", "204"], ["61", "204"], ["71", "204"], ["71", "204"], ["61", "204"], ["60", "204"], ["54", "204"], ["54", "204"], ["83", "204"], ["88", "204"], ["87", "204"], ["87", "204"], ["83", "204"], ["83", "204"], ["51", "204"], ["20", "204"], ["121", "204"], ["17", "18"], ["28", "22"], ["17", "22"], ["17", "148"], ["17", "20"], ["17", "35"], ["17", "99"], ["17", "121"], ["17", "125"], ["17", "154"], ["17", "157"], ["157", "163"], ["17", "163"], ["148", "197"], ["17", "197"], ["17", "28"], ["35", "38"], ["41", "38"], ["17", "38"], ["48", "41"], ["17", "41"], ["17", "45"], ["17", "102"], ["163", "160"], ["17", "160"], ["38", "160"], ["105", "160"], ["135", "160"], ["45", "48"], ["51", "48"], ["17", "48"], ["38", "48"], ["75", "48"], ["17", "51"], ["68", "51"], ["60", "54"], ["60", "54"], ["87", "83"], ["87", "83"], ["102", "105"], ["108", "105"], ["17", "105"], ["38", "105"], ["17", "108"], ["105", "108"], ["17", "110"], ["105", "110"], ["83", "110"], ["110", "127"], ["17", "127"], ["17", "132"], ["17", "112"], ["105", "112"], ["83", "112"], ["132", "135"], ["138", "135"], ["17", "135"], ["38", "135"], ["105", "135"], ["135", "138"], ["17", "138"], ["127", "140"], ["17", "140"], ["121", "140"], ["71", "60"], ["71", "60"], ["87", "60"], ["17", "60"], ["83", "87"], ["54", "87"], ["60", "87"], ["17", "87"], ["17", "113"], ["105", "113"], ["121", "142"], ["17", "142"], ["71", "61"], ["71", "61"], ["83", "88"], ["54", "88"], ["17", "114"], ["105", "114"], ["17", "71"], ["68", "71"], ["48", "68"], ["17", "68"], ["17", "79"], ["68", "79"], ["48", "65"], ["17", "65"], ["65", "75"], ["17", "75"], ["38", "38"], ["38", "48"], ["38", "45"], ["38", "41"], ["99", "102"], ["99", "105"], ["125", "132"], ["125", "127"], ["125", "135"], ["157", "163"], ["157", "160"], ["157", "157"], ["48", "68"], ["48", "60"], ["48", "73"], ["48", "51"], ["48", "75"], ["48", "84"], ["48", "56"], ["48", "92"], ["48", "87"], ["48", "93"], ["48", "54"], ["48", "79"], ["48", "80"], ["48", "61"], ["48", "88"], ["48", "48"], ["48", "89"], ["48", "72"], ["48", "65"], ["48", "83"], ["48", "71"], ["48", "63"], ["48", "55"], ["48", "62"], ["105", "113"], ["105", "114"], ["105", "112"], ["105", "118"], ["105", "108"], ["105", "105"], ["105", "110"], ["135", "138"], ["135", "142"], ["135", "140"], ["135", "143"], ["135", "135"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,this,Readin())<SUB>3</SUB>>", "23": "<(&lt;operator&gt;.indexAccess,stlr[0][0])<SUB>4</SUB>>", "25": "<(IDENTIFIER,stlr,stlr[0][0] = bell[0] = 1)<SUB>4</SUB>>", "27": "<(LITERAL,0,stlr[0][0] = bell[0] = 1)<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.indexAccess,bell[0])<SUB>4</SUB>>", "31": "<(LITERAL,0,bell[0] = 1)<SUB>4</SUB>>", "33": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= m); i++),for (int i = 1; Some(i &lt;= m); i++))<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "37": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,i &lt;= m)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= i); j++),for (int j = 1; Some(j &lt;= i); j++))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>6</SUB>>", "47": "<(LITERAL,1,int j = 1)<SUB>6</SUB>>", "49": "<(IDENTIFIER,j,j &lt;= i)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,j++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,stlr[i][j])<SUB>7</SUB>>", "57": "<(IDENTIFIER,stlr,stlr[i][j] = (stlr[i - 1][j - 1] + stlr[i - 1][j] * (long) j) % MOD)<SUB>7</SUB>>", "59": "<(IDENTIFIER,j,stlr[i][j] = (stlr[i - 1][j - 1] + stlr[i - 1][j] * (long) j) % MOD)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.addition,stlr[i - 1][j - 1] + stlr[i - 1][j] * (long) j)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,stlr[i - 1])<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>7</SUB>>", "67": "<(LITERAL,1,i - 1)<SUB>7</SUB>>", "69": "<(IDENTIFIER,j,j - 1)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.multiplication,stlr[i - 1][j] * (long) j)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,stlr[i - 1])<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>7</SUB>>", "77": "<(LITERAL,1,i - 1)<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.cast,(long) j)<SUB>7</SUB>>", "81": "<(IDENTIFIER,j,(long) j)<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.assignment,bell[i] = (bell[i] + stlr[i][j]) % MOD)<SUB>8</SUB>>", "85": "<(IDENTIFIER,bell,bell[i] = (bell[i] + stlr[i][j]) % MOD)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.modulo,(bell[i] + stlr[i][j]) % MOD)<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,bell[i])<SUB>8</SUB>>", "91": "<(IDENTIFIER,i,bell[i] + stlr[i][j])<SUB>8</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,stlr[i])<SUB>8</SUB>>", "95": "<(IDENTIFIER,i,bell[i] + stlr[i][j])<SUB>8</SUB>>", "97": "<(IDENTIFIER,MOD,(bell[i] + stlr[i][j]) % MOD)<SUB>8</SUB>>", "99": "<(IDENTIFIER,DEBUG,if (DEBUG))<SUB>10</SUB>>", "101": "<(LOCAL,int i: int)<SUB>11</SUB>>", "103": "<(IDENTIFIER,i,int i = 1)<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= m)<SUB>11</SUB>>", "107": "<(IDENTIFIER,m,i &lt;= m)<SUB>11</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "111": "<(IDENTIFIER,cerr,println(&quot;Bell[&quot; + i + &quot;] =&quot; + bell[i]))<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.addition,&quot;Bell[&quot; + i + &quot;] =&quot;)<SUB>11</SUB>>", "115": "<(LITERAL,&quot;Bell[&quot;,&quot;Bell[&quot; + i)<SUB>11</SUB>>", "117": "<(LITERAL,&quot;] =&quot;,&quot;Bell[&quot; + i + &quot;] =&quot;)<SUB>11</SUB>>", "119": "<(IDENTIFIER,bell,&quot;Bell[&quot; + i + &quot;] =&quot; + bell[i])<SUB>11</SUB>>", "121": "<(sort,sort(occ))<SUB>12</SUB>>", "123": "<(IDENTIFIER,occ,sort(occ))<SUB>12</SUB>>", "125": "<(IDENTIFIER,DEBUG,if (DEBUG))<SUB>13</SUB>>", "127": "<(println,println(&quot;After Sorting&quot;))<SUB>14</SUB>>", "129": "<(LITERAL,&quot;After Sorting&quot;,println(&quot;After Sorting&quot;))<SUB>14</SUB>>", "131": "<(LOCAL,int i: int)<SUB>15</SUB>>", "133": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "135": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>15</SUB>>", "137": "<(IDENTIFIER,m,i &lt; m)<SUB>15</SUB>>", "139": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "141": "<(IDENTIFIER,cerr,println(occ[i] + &quot; &quot;))<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,occ[i])<SUB>15</SUB>>", "145": "<(IDENTIFIER,i,occ[i] + &quot; &quot;)<SUB>15</SUB>>", "147": "<(LOCAL,long ans: long)<SUB>16</SUB>>", "149": "<(IDENTIFIER,ans,long ans = 1)<SUB>16</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 0, j = 0; Some(i &lt; m); i = j),for (int i = 0, j = 0; Some(i &lt; m); i = j))<SUB>17</SUB>>", "153": "<(LOCAL,int j: int)<SUB>17</SUB>>", "155": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "159": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "161": "<(IDENTIFIER,i,i &lt; m)<SUB>17</SUB>>", "163": "<(&lt;operator&gt;.assignment,i = j)<SUB>17</SUB>>", "165": "<(IDENTIFIER,j,i = j)<SUB>17</SUB>>", "167": "<(CONTROL_STRUCTURE,for (j = i + 1; Some(j &lt; m &amp;&amp; occ[i] == occ[j]); j++),for (j = i + 1; Some(j &lt; m &amp;&amp; occ[i] == occ[j]); j++))<SUB>18</SUB>>", "169": "<(IDENTIFIER,j,j = i + 1)<SUB>18</SUB>>", "171": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "173": "<(&lt;operator&gt;.logicalAnd,j &lt; m &amp;&amp; occ[i] == occ[j])<SUB>18</SUB>>", "175": "<(IDENTIFIER,j,j &lt; m)<SUB>18</SUB>>", "177": "<(&lt;operator&gt;.equals,occ[i] == occ[j])<SUB>18</SUB>>", "179": "<(IDENTIFIER,occ,occ[i] == occ[j])<SUB>18</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,occ[j])<SUB>18</SUB>>", "183": "<(IDENTIFIER,j,occ[i] == occ[j])<SUB>18</SUB>>", "185": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "187": "<(IDENTIFIER,ans,ans = (ans * bell[j - i]) % MOD)<SUB>19</SUB>>", "189": "<(&lt;operator&gt;.multiplication,ans * bell[j - i])<SUB>19</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,bell[j - i])<SUB>19</SUB>>", "193": "<(&lt;operator&gt;.subtraction,j - i)<SUB>19</SUB>>", "195": "<(IDENTIFIER,i,j - i)<SUB>19</SUB>>", "197": "<(println,System.out.println(ans))<SUB>21</SUB>>", "199": "<(IDENTIFIER,System,System.out.println(ans))<SUB>21</SUB>>", "201": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>21</SUB>>", "203": "<(MODIFIER,STATIC)>"}}