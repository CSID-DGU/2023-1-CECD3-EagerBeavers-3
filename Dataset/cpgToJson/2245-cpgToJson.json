{"edges": [["19", "21"], ["19", "205"], ["19", "206"], ["19", "207"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "49"], ["21", "56"], ["21", "173"], ["21", "174"], ["21", "177"], ["21", "200"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "55"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "74"], ["66", "75"], ["66", "79"], ["66", "94"], ["66", "125"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "73"], ["71", "72"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "104"], ["94", "106"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "124"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "144"], ["136", "159"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "199"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "198"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["22", "29"], ["25", "41"], ["37", "46"], ["44", "51"], ["49", "58"], ["174", "179"], ["200", "207"], ["24", "22"], ["39", "37"], ["46", "44"], ["50", "49"], ["58", "61"], ["61", "71"], ["61", "174"], ["64", "61"], ["179", "182"], ["182", "195"], ["182", "203"], ["185", "182"], ["187", "185"], ["201", "200"], ["27", "34"], ["30", "25"], ["41", "39"], ["51", "50"], ["68", "77"], ["75", "82"], ["79", "98"], ["189", "187"], ["203", "201"], ["29", "27"], ["32", "30"], ["70", "68"], ["77", "75"], ["80", "88"], ["85", "79"], ["96", "101"], ["101", "107"], ["101", "127"], ["104", "101"], ["106", "104"], ["127", "130"], ["130", "138"], ["130", "64"], ["133", "130"], ["190", "189"], ["34", "32"], ["71", "70"], ["82", "80"], ["86", "91"], ["91", "85"], ["98", "96"], ["107", "114"], ["110", "106"], ["192", "190"], ["88", "86"], ["111", "110"], ["137", "146"], ["137", "161"], ["144", "133"], ["193", "192"], ["112", "120"], ["117", "111"], ["138", "137"], ["138", "141"], ["141", "137"], ["145", "153"], ["150", "144"], ["195", "193"], ["114", "112"], ["118", "117"], ["146", "145"], ["151", "156"], ["156", "150"], ["161", "166"], ["161", "133"], ["164", "133"], ["120", "118"], ["153", "151"], ["165", "170"], ["170", "164"], ["166", "165"], ["19", "24"], ["20", "207"], ["22", "207"], ["27", "207"], ["30", "207"], ["30", "207"], ["30", "207"], ["25", "207"], ["41", "207"], ["39", "207"], ["37", "207"], ["37", "207"], ["44", "207"], ["44", "207"], ["44", "207"], ["49", "207"], ["49", "207"], ["58", "207"], ["174", "207"], ["179", "207"], ["182", "207"], ["182", "207"], ["182", "207"], ["200", "207"], ["200", "207"], ["200", "207"], ["190", "207"], ["189", "207"], ["187", "207"], ["187", "207"], ["185", "207"], ["68", "207"], ["71", "207"], ["70", "207"], ["68", "207"], ["68", "207"], ["75", "207"], ["75", "207"], ["75", "207"], ["79", "207"], ["79", "207"], ["79", "207"], ["96", "207"], ["96", "207"], ["101", "207"], ["127", "207"], ["130", "207"], ["130", "207"], ["64", "207"], ["138", "207"], ["137", "207"], ["137", "207"], ["137", "207"], ["161", "207"], ["161", "207"], ["164", "207"], ["164", "207"], ["164", "207"], ["144", "207"], ["144", "207"], ["144", "207"], ["133", "207"], ["106", "207"], ["111", "207"], ["111", "207"], ["110", "207"], ["106", "207"], ["106", "207"], ["104", "207"], ["39", "207"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["19", "49"], ["19", "174"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "58"], ["19", "179"], ["189", "187"], ["189", "187"], ["174", "200"], ["187", "200"], ["19", "200"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["37", "46"], ["19", "46"], ["58", "61"], ["64", "61"], ["19", "61"], ["46", "61"], ["130", "61"], ["88", "64"], ["153", "64"], ["120", "64"], ["19", "64"], ["70", "68"], ["70", "68"], ["77", "75"], ["179", "182"], ["185", "182"], ["19", "182"], ["61", "182"], ["195", "182"], ["182", "185"], ["19", "185"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["98", "96"], ["98", "96"], ["110", "106"], ["110", "106"], ["19", "127"], ["174", "189"], ["187", "189"], ["19", "189"], ["71", "70"], ["19", "70"], ["61", "77"], ["19", "77"], ["96", "101"], ["104", "101"], ["19", "101"], ["19", "104"], ["101", "104"], ["127", "130"], ["133", "130"], ["19", "130"], ["98", "130"], ["130", "133"], ["141", "133"], ["156", "133"], ["19", "133"], ["174", "190"], ["187", "190"], ["19", "190"], ["41", "71"], ["19", "71"], ["77", "82"], ["19", "82"], ["82", "91"], ["19", "91"], ["91", "98"], ["19", "98"], ["75", "110"], ["19", "110"], ["61", "88"], ["19", "88"], ["75", "111"], ["138", "137"], ["138", "137"], ["141", "137"], ["141", "137"], ["68", "138"], ["161", "138"], ["19", "138"], ["130", "141"], ["19", "141"], ["75", "164"], ["106", "164"], ["182", "195"], ["19", "195"], ["101", "114"], ["19", "114"], ["130", "156"], ["141", "156"], ["19", "156"], ["138", "161"], ["19", "161"], ["88", "120"], ["19", "120"], ["88", "153"], ["120", "153"], ["19", "153"], ["61", "68"], ["61", "96"], ["61", "77"], ["61", "64"], ["61", "98"], ["61", "75"], ["61", "85"], ["61", "91"], ["61", "101"], ["61", "79"], ["61", "80"], ["61", "61"], ["61", "130"], ["61", "88"], ["61", "70"], ["61", "127"], ["61", "86"], ["61", "82"], ["61", "71"], ["182", "192"], ["182", "185"], ["182", "189"], ["182", "195"], ["182", "187"], ["182", "190"], ["182", "182"], ["182", "193"], ["101", "107"], ["101", "120"], ["101", "114"], ["101", "104"], ["101", "112"], ["101", "101"], ["101", "118"], ["101", "111"], ["101", "106"], ["101", "110"], ["101", "117"], ["130", "138"], ["130", "137"], ["130", "130"], ["130", "133"], ["137", "145"], ["137", "146"], ["137", "161"], ["137", "150"], ["137", "151"], ["137", "153"], ["137", "144"], ["137", "156"], ["138", "141"], ["161", "170"], ["161", "164"], ["161", "166"], ["161", "165"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int N = parseInt(in.readLine()))<SUB>3</SUB>>", "39": "<(parseInt,parseInt(in.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int[][] dp: int[][])<SUB>4</SUB>>", "45": "<(IDENTIFIER,dp,int[][] dp = new int[N][N])<SUB>4</SUB>>", "47": "<(IDENTIFIER,N,new int[N][N])<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>5</SUB>>", "53": "<(LITERAL,0,dp[0][0] = 1)<SUB>5</SUB>>", "55": "<(LITERAL,1,dp[0][0] = 1)<SUB>5</SUB>>", "57": "<(LOCAL,int i: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,int i = 1)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>6</SUB>>", "63": "<(IDENTIFIER,N,i &lt; N)<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,++i)<SUB>6</SUB>>", "67": "<(LOCAL,char lastCmd: char)<SUB>7</SUB>>", "69": "<(IDENTIFIER,lastCmd,char lastCmd = charAt(0))<SUB>7</SUB>>", "71": "<(readLine,readLine())<SUB>7</SUB>>", "73": "<(LITERAL,0,charAt(0))<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[] sum = new int[N])<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[N])>", "79": "<(&lt;operator&gt;.assignment,sum[N - 1] = dp[i - 1][N - 1])<SUB>9</SUB>>", "81": "<(IDENTIFIER,sum,sum[N - 1] = dp[i - 1][N - 1])<SUB>9</SUB>>", "83": "<(IDENTIFIER,N,N - 1)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,dp[i - 1][N - 1])<SUB>9</SUB>>", "87": "<(IDENTIFIER,dp,sum[N - 1] = dp[i - 1][N - 1])<SUB>9</SUB>>", "89": "<(IDENTIFIER,i,i - 1)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>9</SUB>>", "93": "<(LITERAL,1,N - 1)<SUB>9</SUB>>", "95": "<(LOCAL,int j: int)<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,int j = N - 2)<SUB>10</SUB>>", "99": "<(IDENTIFIER,N,N - 2)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>10</SUB>>", "103": "<(LITERAL,0,j &gt;= 0)<SUB>10</SUB>>", "105": "<(IDENTIFIER,j,--j)<SUB>10</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,sum[j])<SUB>11</SUB>>", "109": "<(IDENTIFIER,j,sum[j] = (sum[j + 1] + dp[i - 1][j]) % 1000000007)<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.addition,sum[j + 1] + dp[i - 1][j])<SUB>11</SUB>>", "113": "<(IDENTIFIER,sum,sum[j + 1] + dp[i - 1][j])<SUB>11</SUB>>", "115": "<(IDENTIFIER,j,j + 1)<SUB>11</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j])<SUB>11</SUB>>", "119": "<(IDENTIFIER,dp,sum[j + 1] + dp[i - 1][j])<SUB>11</SUB>>", "121": "<(IDENTIFIER,i,i - 1)<SUB>11</SUB>>", "123": "<(IDENTIFIER,j,sum[j + 1] + dp[i - 1][j])<SUB>11</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); ++j),for (int j = 0; Some(j &lt; N); ++j))<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "129": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "131": "<(IDENTIFIER,j,j &lt; N)<SUB>12</SUB>>", "133": "<(&lt;operator&gt;.preIncrement,++j)<SUB>12</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "137": "<(&lt;operator&gt;.logicalAnd,lastCmd == 'f' &amp;&amp; j &gt; 0)<SUB>13</SUB>>", "139": "<(IDENTIFIER,lastCmd,lastCmd == 'f')<SUB>13</SUB>>", "141": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>13</SUB>>", "143": "<(LITERAL,0,j &gt; 0)<SUB>13</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>14</SUB>>", "147": "<(IDENTIFIER,dp,dp[i][j] = dp[i - 1][j - 1])<SUB>14</SUB>>", "149": "<(IDENTIFIER,j,dp[i][j] = dp[i - 1][j - 1])<SUB>14</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>14</SUB>>", "153": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>14</SUB>>", "155": "<(LITERAL,1,i - 1)<SUB>14</SUB>>", "157": "<(IDENTIFIER,j,j - 1)<SUB>14</SUB>>", "159": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "161": "<(&lt;operator&gt;.equals,lastCmd == 's')<SUB>15</SUB>>", "163": "<(LITERAL,'s',lastCmd == 's')<SUB>15</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>16</SUB>>", "167": "<(IDENTIFIER,dp,dp[i][j] = sum[j])<SUB>16</SUB>>", "169": "<(IDENTIFIER,j,dp[i][j] = sum[j])<SUB>16</SUB>>", "171": "<(IDENTIFIER,sum,dp[i][j] = sum[j])<SUB>16</SUB>>", "173": "<(LOCAL,int ans: int)<SUB>19</SUB>>", "175": "<(IDENTIFIER,ans,int ans = 0)<SUB>19</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>20</SUB>>", "179": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "181": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "183": "<(IDENTIFIER,i,i &lt; N)<SUB>20</SUB>>", "185": "<(&lt;operator&gt;.preIncrement,++i)<SUB>20</SUB>>", "187": "<(&lt;operator&gt;.assignment,ans = (ans + dp[N - 1][i]) % 1000000007)<SUB>21</SUB>>", "189": "<(&lt;operator&gt;.modulo,(ans + dp[N - 1][i]) % 1000000007)<SUB>21</SUB>>", "191": "<(IDENTIFIER,ans,ans + dp[N - 1][i])<SUB>21</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,dp[N - 1])<SUB>21</SUB>>", "195": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>21</SUB>>", "197": "<(LITERAL,1,N - 1)<SUB>21</SUB>>", "199": "<(LITERAL,1000000007,(ans + dp[N - 1][i]) % 1000000007)<SUB>21</SUB>>", "201": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "203": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "205": "<(MODIFIER,PUBLIC)>", "207": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}