{"edges": [["19", "21"], ["19", "155"], ["19", "156"], ["19", "157"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "50"], ["21", "61"], ["21", "62"], ["21", "73"], ["21", "78"], ["21", "90"], ["21", "91"], ["21", "92"], ["21", "95"], ["21", "98"], ["21", "99"], ["21", "106"], ["21", "148"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "72"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["112", "127"], ["112", "141"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "126"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "133"], ["127", "137"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "40"], ["62", "75"], ["73", "79"], ["92", "95"], ["95", "102"], ["99", "108"], ["148", "157"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["40", "47"], ["40", "51"], ["51", "58"], ["51", "67"], ["64", "62"], ["75", "73"], ["79", "86"], ["79", "92"], ["101", "99"], ["107", "119"], ["107", "151"], ["149", "152"], ["152", "148"], ["28", "26"], ["44", "49"], ["49", "157"], ["55", "60"], ["60", "157"], ["65", "64"], ["83", "89"], ["89", "157"], ["102", "101"], ["108", "107"], ["114", "130"], ["141", "108"], ["151", "149"], ["45", "44"], ["56", "55"], ["66", "65"], ["84", "87"], ["87", "83"], ["116", "114"], ["128", "134"], ["128", "138"], ["143", "141"], ["47", "45"], ["58", "56"], ["67", "66"], ["86", "84"], ["117", "116"], ["130", "128"], ["134", "144"], ["138", "144"], ["144", "143"], ["118", "123"], ["123", "117"], ["119", "118"], ["19", "24"], ["49", "157"], ["60", "157"], ["89", "157"], ["20", "157"], ["22", "157"], ["25", "157"], ["25", "157"], ["31", "157"], ["35", "157"], ["37", "157"], ["35", "157"], ["35", "157"], ["40", "157"], ["40", "157"], ["44", "157"], ["44", "157"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["64", "62"], ["64", "62"], ["75", "73"], ["75", "73"], ["19", "92"], ["75", "95"], ["19", "95"], ["101", "99"], ["101", "99"], ["22", "25"], ["19", "25"], ["62", "73"], ["19", "73"], ["152", "148"], ["152", "148"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "40"], ["19", "40"], ["19", "49"], ["40", "51"], ["19", "51"], ["35", "51"], ["19", "60"], ["65", "64"], ["65", "64"], ["19", "64"], ["19", "75"], ["66", "75"], ["73", "79"], ["19", "79"], ["51", "79"], ["19", "89"], ["92", "101"], ["19", "101"], ["95", "101"], ["19", "107"], ["92", "107"], ["134", "107"], ["95", "107"], ["138", "107"], ["116", "114"], ["116", "114"], ["143", "141"], ["143", "141"], ["123", "152"], ["19", "152"], ["75", "152"], ["92", "152"], ["134", "152"], ["19", "44"], ["19", "55"], ["66", "65"], ["66", "65"], ["19", "65"], ["87", "83"], ["92", "102"], ["19", "102"], ["95", "102"], ["19", "108"], ["92", "108"], ["134", "108"], ["51", "66"], ["19", "66"], ["19", "87"], ["117", "116"], ["117", "116"], ["19", "116"], ["114", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["123", "134"], ["19", "134"], ["123", "138"], ["19", "138"], ["134", "143"], ["19", "143"], ["107", "143"], ["138", "143"], ["51", "67"], ["19", "67"], ["118", "117"], ["118", "117"], ["123", "117"], ["123", "117"], ["79", "130"], ["19", "130"], ["134", "144"], ["19", "144"], ["107", "144"], ["138", "144"], ["99", "118"], ["141", "118"], ["19", "118"], ["123", "118"], ["75", "118"], ["19", "123"], ["75", "123"], ["99", "123"], ["141", "123"], ["99", "119"], ["141", "119"], ["19", "119"], ["123", "119"], ["75", "119"], ["40", "51"], ["40", "44"], ["40", "47"], ["40", "49"], ["40", "45"], ["51", "60"], ["51", "73"], ["51", "64"], ["51", "75"], ["51", "56"], ["51", "67"], ["51", "79"], ["51", "58"], ["51", "66"], ["51", "65"], ["51", "55"], ["51", "62"], ["79", "107"], ["79", "84"], ["79", "102"], ["79", "149"], ["79", "151"], ["79", "95"], ["79", "92"], ["79", "87"], ["79", "101"], ["79", "148"], ["79", "152"], ["79", "108"], ["79", "86"], ["79", "89"], ["79", "99"], ["79", "83"], ["107", "107"], ["107", "128"], ["107", "114"], ["107", "119"], ["107", "144"], ["107", "130"], ["107", "118"], ["107", "108"], ["107", "141"], ["107", "116"], ["107", "123"], ["107", "143"], ["107", "117"], ["128", "134"], ["128", "138"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>4</SUB>>", "33": "<(nextLong,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>9</SUB>>", "41": "<(IDENTIFIER,n,n == 1)<SUB>9</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "49": "<(RETURN,return;,return;)<SUB>11</SUB>>", "51": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>13</SUB>>", "53": "<(IDENTIFIER,k,n &lt;= k)<SUB>13</SUB>>", "55": "<(println,System.out.println(1))<SUB>14</SUB>>", "57": "<(IDENTIFIER,System,System.out.println(1))<SUB>14</SUB>>", "59": "<(LITERAL,1,System.out.println(1))<SUB>14</SUB>>", "61": "<(LOCAL,long seg: long)<SUB>17</SUB>>", "63": "<(IDENTIFIER,seg,long seg = ((k + 1) * (k) / 2) - 1)<SUB>17</SUB>>", "65": "<(&lt;operator&gt;.division,(k + 1) * (k) / 2)<SUB>17</SUB>>", "67": "<(&lt;operator&gt;.addition,k + 1)<SUB>17</SUB>>", "69": "<(LITERAL,1,k + 1)<SUB>17</SUB>>", "71": "<(LITERAL,2,(k + 1) * (k) / 2)<SUB>17</SUB>>", "73": "<(&lt;operator&gt;.assignmentPlus,seg += 2 - k)<SUB>18</SUB>>", "75": "<(&lt;operator&gt;.subtraction,2 - k)<SUB>18</SUB>>", "77": "<(IDENTIFIER,k,2 - k)<SUB>18</SUB>>", "79": "<(&lt;operator&gt;.lessThan,seg &lt; n)<SUB>19</SUB>>", "81": "<(IDENTIFIER,n,seg &lt; n)<SUB>19</SUB>>", "83": "<(println,System.out.println(-1))<SUB>20</SUB>>", "85": "<(IDENTIFIER,System,System.out.println(-1))<SUB>20</SUB>>", "87": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "89": "<(RETURN,return;,return;)<SUB>21</SUB>>", "91": "<(LOCAL,long f: long)<SUB>25</SUB>>", "93": "<(IDENTIFIER,s,long s = 1)<SUB>25</SUB>>", "95": "<(&lt;operator&gt;.assignment,long f = k)<SUB>25</SUB>>", "97": "<(IDENTIFIER,k,long f = k)<SUB>25</SUB>>", "99": "<(&lt;operator&gt;.assignment,long mid = (s + f) / 2)<SUB>26</SUB>>", "101": "<(&lt;operator&gt;.division,(s + f) / 2)<SUB>26</SUB>>", "103": "<(IDENTIFIER,s,s + f)<SUB>26</SUB>>", "105": "<(LITERAL,2,(s + f) / 2)<SUB>26</SUB>>", "107": "<(&lt;operator&gt;.lessThan,s + 1 &lt; f)<SUB>27</SUB>>", "109": "<(IDENTIFIER,s,s + 1)<SUB>27</SUB>>", "111": "<(IDENTIFIER,f,s + 1 &lt; f)<SUB>27</SUB>>", "113": "<(LOCAL,long seg_m: long)<SUB>28</SUB>>", "115": "<(IDENTIFIER,seg_m,long seg_m = (mid + k - 1) * (k - mid) / 2)<SUB>28</SUB>>", "117": "<(&lt;operator&gt;.multiplication,(mid + k - 1) * (k - mid))<SUB>28</SUB>>", "119": "<(&lt;operator&gt;.addition,mid + k)<SUB>28</SUB>>", "121": "<(IDENTIFIER,k,mid + k)<SUB>28</SUB>>", "123": "<(&lt;operator&gt;.subtraction,k - mid)<SUB>28</SUB>>", "125": "<(IDENTIFIER,mid,k - mid)<SUB>28</SUB>>", "127": "<(CONTROL_STRUCTURE,if (seg_m &gt;= n - 1),if (seg_m &gt;= n - 1))<SUB>31</SUB>>", "129": "<(IDENTIFIER,seg_m,seg_m &gt;= n - 1)<SUB>31</SUB>>", "131": "<(IDENTIFIER,n,n - 1)<SUB>31</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "135": "<(IDENTIFIER,s,s = mid)<SUB>35</SUB>>", "137": "<(CONTROL_STRUCTURE,else,else)<SUB>37</SUB>>", "139": "<(IDENTIFIER,f,f = mid)<SUB>37</SUB>>", "141": "<(&lt;operator&gt;.assignment,mid = (s + f) / 2)<SUB>38</SUB>>", "143": "<(&lt;operator&gt;.division,(s + f) / 2)<SUB>38</SUB>>", "145": "<(IDENTIFIER,s,s + f)<SUB>38</SUB>>", "147": "<(LITERAL,2,(s + f) / 2)<SUB>38</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "151": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "153": "<(IDENTIFIER,k,k - s)<SUB>46</SUB>>", "155": "<(MODIFIER,PUBLIC)>", "157": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}