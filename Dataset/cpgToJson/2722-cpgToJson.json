{"edges": [["21", "23"], ["21", "85"], ["21", "86"], ["21", "87"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "83"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "44"], ["40", "47"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["50", "61"], ["52", "53"], ["52", "54"], ["52", "55"], ["52", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "72"], ["63", "64"], ["63", "65"], ["63", "66"], ["63", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "41"], ["83", "87"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["41", "44"], ["41", "55"], ["44", "83"], ["34", "32"], ["48", "83"], ["50", "48"], ["52", "66"], ["61", "50"], ["55", "58"], ["58", "52"], ["63", "74"], ["72", "61"], ["66", "69"], ["69", "63"], ["74", "77"], ["77", "80"], ["80", "72"], ["21", "26"], ["22", "87"], ["24", "87"], ["27", "87"], ["28", "87"], ["31", "87"], ["31", "87"], ["38", "87"], ["36", "87"], ["36", "87"], ["41", "87"], ["50", "87"], ["50", "87"], ["61", "87"], ["72", "87"], ["72", "87"], ["80", "87"], ["72", "87"], ["61", "87"], ["50", "87"], ["48", "87"], ["48", "87"], ["44", "87"], ["44", "87"], ["83", "87"], ["83", "87"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["48", "83"], ["44", "83"], ["21", "83"], ["27", "38"], ["21", "38"], ["36", "41"], ["21", "41"], ["31", "44"], ["21", "44"], ["41", "44"], ["31", "48"], ["21", "48"], ["50", "48"], ["50", "48"], ["50", "48"], ["61", "50"], ["21", "50"], ["52", "50"], ["52", "50"], ["52", "50"], ["52", "50"], ["61", "50"], ["61", "50"], ["21", "52"], ["58", "52"], ["55", "52"], ["55", "52"], ["58", "52"], ["72", "61"], ["21", "61"], ["63", "61"], ["63", "61"], ["63", "61"], ["63", "61"], ["72", "61"], ["72", "61"], ["72", "61"], ["41", "55"], ["21", "55"], ["55", "58"], ["21", "58"], ["52", "63"], ["21", "63"], ["69", "63"], ["66", "63"], ["66", "63"], ["69", "63"], ["63", "72"], ["21", "72"], ["74", "72"], ["74", "72"], ["77", "72"], ["77", "72"], ["80", "72"], ["80", "72"], ["52", "66"], ["21", "66"], ["66", "69"], ["21", "69"], ["63", "74"], ["21", "74"], ["74", "77"], ["21", "77"], ["77", "80"], ["21", "80"], ["41", "80"], ["41", "48"], ["41", "58"], ["41", "61"], ["41", "77"], ["41", "66"], ["41", "52"], ["41", "72"], ["41", "69"], ["41", "74"], ["41", "63"], ["41", "50"], ["41", "44"], ["41", "55"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,long n: long)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,long n = nextLong())<SUB>5</SUB>>", "39": "<(IDENTIFIER,in,nextLong())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 2)<SUB>6</SUB>>", "43": "<(LITERAL,2,n &lt;= 2)<SUB>6</SUB>>", "45": "<(IDENTIFIER,out,println(n))<SUB>7</SUB>>", "47": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "49": "<(IDENTIFIER,out,println(max(lcm(n, n - 1, n - 2), max(lcm(n, n - 1, n - 3), lcm(n - 1, n - 2, n - 3)))))<SUB>9</SUB>>", "51": "<(IDENTIFIER,this,max(lcm(n, n - 1, n - 2), max(lcm(n, n - 1, n - 3), lcm(n - 1, n - 2, n - 3))))<SUB>9</SUB>>", "53": "<(IDENTIFIER,this,lcm(n, n - 1, n - 2))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>9</SUB>>", "57": "<(LITERAL,1,n - 1)<SUB>9</SUB>>", "59": "<(IDENTIFIER,n,n - 2)<SUB>9</SUB>>", "61": "<(max,max(lcm(n, n - 1, n - 3), lcm(n - 1, n - 2, n - 3)))<SUB>9</SUB>>", "63": "<(lcm,lcm(n, n - 1, n - 3))<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,lcm(n, n - 1, n - 3))<SUB>9</SUB>>", "67": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>9</SUB>>", "71": "<(LITERAL,3,n - 3)<SUB>9</SUB>>", "73": "<(IDENTIFIER,this,lcm(n - 1, n - 2, n - 3))<SUB>9</SUB>>", "75": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>9</SUB>>", "79": "<(LITERAL,2,n - 2)<SUB>9</SUB>>", "81": "<(IDENTIFIER,n,n - 3)<SUB>9</SUB>>", "83": "<(close,close())<SUB>10</SUB>>", "85": "<(MODIFIER,PUBLIC)>", "87": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}