{"edges": [["47", "48"], ["47", "208"], ["47", "209"], ["47", "210"], ["48", "4"], ["48", "49"], ["48", "52"], ["48", "15"], ["48", "56"], ["48", "13"], ["48", "60"], ["48", "63"], ["48", "30"], ["48", "73"], ["48", "6"], ["48", "77"], ["48", "80"], ["48", "81"], ["48", "28"], ["48", "96"], ["48", "24"], ["48", "100"], ["48", "26"], ["48", "103"], ["48", "20"], ["48", "106"], ["48", "8"], ["48", "109"], ["48", "112"], ["48", "113"], ["48", "187"], ["48", "197"], ["48", "203"], ["49", "50"], ["49", "51"], ["52", "3"], ["52", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "68"], ["64", "65"], ["64", "67"], ["65", "66"], ["68", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["80", "5"], ["81", "22"], ["81", "82"], ["81", "85"], ["81", "88"], ["81", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "7"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "138"], ["117", "146"], ["118", "119"], ["118", "127"], ["119", "120"], ["119", "124"], ["120", "121"], ["120", "123"], ["121", "122"], ["124", "125"], ["124", "126"], ["127", "10"], ["127", "128"], ["127", "134"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "136"], ["134", "137"], ["134", "11"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["140", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "151"], ["147", "148"], ["147", "150"], ["148", "149"], ["151", "152"], ["151", "153"], ["151", "159"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["159", "160"], ["159", "165"], ["159", "169"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["170", "171"], ["170", "179"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["173", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["179", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["189", "192"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["199", "202"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["49", "55"], ["52", "58"], ["56", "60"], ["60", "65"], ["73", "79"], ["77", "80"], ["80", "82"], ["96", "100"], ["100", "103"], ["103", "106"], ["106", "111"], ["109", "112"], ["112", "114"], ["187", "199"], ["197", "206"], ["203", "210"], ["51", "49"], ["53", "52"], ["58", "56"], ["64", "71"], ["64", "75"], ["75", "73"], ["79", "77"], ["82", "85"], ["85", "93"], ["85", "98"], ["88", "85"], ["98", "96"], ["111", "109"], ["114", "121"], ["114", "193"], ["189", "187"], ["199", "197"], ["204", "203"], ["55", "53"], ["65", "64"], ["69", "65"], ["91", "88"], ["138", "148"], ["192", "189"], ["206", "204"], ["71", "69"], ["93", "91"], ["119", "132"], ["119", "142"], ["140", "138"], ["147", "114"], ["147", "157"], ["193", "192"], ["120", "119"], ["120", "124"], ["124", "119"], ["128", "11"], ["134", "121"], ["142", "140"], ["148", "147"], ["153", "161"], ["121", "120"], ["130", "128"], ["11", "134"], ["155", "153"], ["160", "166"], ["160", "175"], ["132", "130"], ["157", "155"], ["161", "160"], ["166", "148"], ["171", "183"], ["179", "148"], ["173", "171"], ["182", "179"], ["175", "173"], ["183", "182"], ["47", "51"], ["32", "210"], ["49", "210"], ["52", "210"], ["52", "210"], ["58", "210"], ["56", "210"], ["56", "210"], ["60", "210"], ["64", "210"], ["64", "210"], ["73", "210"], ["75", "210"], ["73", "210"], ["73", "210"], ["77", "210"], ["80", "210"], ["82", "210"], ["85", "210"], ["85", "210"], ["98", "210"], ["96", "210"], ["96", "210"], ["100", "210"], ["103", "210"], ["106", "210"], ["109", "210"], ["112", "210"], ["112", "210"], ["114", "210"], ["114", "210"], ["193", "210"], ["193", "210"], ["192", "210"], ["189", "210"], ["187", "210"], ["187", "210"], ["199", "210"], ["199", "210"], ["197", "210"], ["197", "210"], ["203", "210"], ["203", "210"], ["203", "210"], ["119", "210"], ["119", "210"], ["138", "210"], ["138", "210"], ["148", "210"], ["147", "210"], ["147", "210"], ["153", "210"], ["153", "210"], ["160", "210"], ["160", "210"], ["171", "210"], ["171", "210"], ["179", "210"], ["182", "210"], ["179", "210"], ["179", "210"], ["166", "210"], ["166", "210"], ["128", "210"], ["128", "210"], ["134", "210"], ["134", "210"], ["91", "210"], ["91", "210"], ["88", "210"], ["71", "210"], ["69", "210"], ["69", "210"], ["47", "32"], ["47", "49"], ["58", "56"], ["47", "60"], ["75", "73"], ["47", "77"], ["98", "96"], ["47", "100"], ["47", "103"], ["85", "106"], ["47", "106"], ["47", "109"], ["189", "187"], ["189", "187"], ["189", "187"], ["199", "197"], ["199", "197"], ["199", "197"], ["49", "52"], ["47", "52"], ["77", "80"], ["47", "80"], ["47", "82"], ["109", "112"], ["47", "112"], ["197", "203"], ["47", "203"], ["52", "58"], ["47", "58"], ["65", "64"], ["47", "64"], ["71", "69"], ["65", "75"], ["47", "75"], ["82", "85"], ["88", "85"], ["47", "85"], ["56", "85"], ["85", "88"], ["47", "88"], ["80", "98"], ["91", "98"], ["47", "98"], ["103", "114"], ["142", "114"], ["175", "114"], ["47", "114"], ["124", "114"], ["85", "114"], ["140", "138"], ["140", "138"], ["140", "138"], ["140", "189"], ["173", "189"], ["47", "189"], ["106", "189"], ["138", "189"], ["171", "189"], ["193", "189"], ["193", "189"], ["189", "199"], ["47", "199"], ["187", "199"], ["96", "199"], ["147", "199"], ["60", "65"], ["69", "65"], ["47", "65"], ["80", "91"], ["47", "91"], ["73", "91"], ["193", "192"], ["193", "192"], ["47", "192"], ["58", "71"], ["47", "71"], ["120", "119"], ["120", "119"], ["124", "119"], ["124", "119"], ["114", "119"], ["73", "128"], ["173", "140"], ["47", "140"], ["142", "140"], ["142", "140"], ["106", "140"], ["138", "140"], ["171", "140"], ["148", "147"], ["120", "147"], ["47", "147"], ["73", "153"], ["114", "193"], ["47", "193"], ["100", "193"], ["142", "193"], ["157", "193"], ["175", "193"], ["121", "120"], ["96", "120"], ["147", "120"], ["47", "120"], ["114", "124"], ["132", "124"], ["47", "124"], ["114", "124"], ["121", "134"], ["47", "134"], ["128", "134"], ["114", "142"], ["124", "142"], ["132", "142"], ["47", "142"], ["100", "142"], ["157", "142"], ["175", "142"], ["121", "148"], ["179", "148"], ["166", "148"], ["47", "148"], ["112", "121"], ["148", "121"], ["134", "121"], ["47", "121"], ["161", "160"], ["161", "160"], ["47", "160"], ["114", "132"], ["124", "132"], ["47", "132"], ["142", "157"], ["175", "157"], ["47", "157"], ["148", "161"], ["47", "161"], ["153", "161"], ["161", "166"], ["47", "166"], ["161", "166"], ["173", "171"], ["173", "171"], ["173", "171"], ["183", "179"], ["47", "179"], ["183", "179"], ["182", "179"], ["182", "179"], ["140", "173"], ["47", "173"], ["175", "173"], ["175", "173"], ["138", "173"], ["171", "173"], ["183", "182"], ["183", "182"], ["47", "182"], ["142", "175"], ["47", "175"], ["157", "175"], ["161", "183"], ["47", "183"], ["161", "183"], ["64", "64"], ["64", "69"], ["64", "65"], ["64", "71"], ["85", "85"], ["85", "91"], ["85", "93"], ["85", "88"], ["114", "120"], ["114", "114"], ["114", "142"], ["114", "119"], ["114", "121"], ["114", "138"], ["114", "140"], ["114", "148"], ["114", "147"], ["119", "120"], ["119", "128"], ["119", "132"], ["119", "119"], ["119", "121"], ["119", "134"], ["119", "11"], ["119", "130"], ["147", "160"], ["147", "161"], ["147", "153"], ["147", "157"], ["147", "148"], ["147", "147"], ["147", "155"], ["120", "124"], ["160", "183"], ["160", "166"], ["160", "179"], ["160", "173"], ["160", "182"], ["160", "175"], ["160", "171"]], "features": {"47": "<(METHOD,main)<SUB>1</SUB>>", "48": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "51": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "54": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "15": "<(LOCAL,int n: int)<SUB>4</SUB>>", "57": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "60": "<(&lt;operator&gt;.assignment,String s = &quot;&quot;)<SUB>6</SUB>>", "62": "<(LITERAL,&quot;&quot;,String s = &quot;&quot;)<SUB>6</SUB>>", "64": "<(&lt;operator&gt;.equals,s.length() == 0)<SUB>7</SUB>>", "66": "<(IDENTIFIER,s,s.length())<SUB>7</SUB>>", "68": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "70": "<(IDENTIFIER,s,s = nextLine())<SUB>8</SUB>>", "72": "<(IDENTIFIER,sc,nextLine())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,char[] pokemons = s.toCharArray())<SUB>10</SUB>>", "75": "<(toCharArray,s.toCharArray())<SUB>10</SUB>>", "6": "<(LOCAL,Set&lt;Character&gt; pokemonTypes: ANY)<SUB>12</SUB>>", "78": "<(IDENTIFIER,pokemonTypes,ANY pokemonTypes = new HashSet&lt;&gt;())<SUB>12</SUB>>", "80": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "82": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "84": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "86": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "88": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "90": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "92": "<(IDENTIFIER,pokemonTypes,add(pokemons[i]))<SUB>14</SUB>>", "94": "<(IDENTIFIER,pokemons,add(pokemons[i]))<SUB>14</SUB>>", "28": "<(LOCAL,int types: int)<SUB>17</SUB>>", "97": "<(IDENTIFIER,types,int types = size())<SUB>17</SUB>>", "99": "<(IDENTIFIER,pokemonTypes,size())<SUB>17</SUB>>", "100": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>19</SUB>>", "102": "<(LITERAL,0,int l = 0)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>20</SUB>>", "105": "<(LITERAL,0,int r = 0)<SUB>20</SUB>>", "106": "<(&lt;operator&gt;.assignment,int min = n)<SUB>21</SUB>>", "108": "<(IDENTIFIER,n,int min = n)<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.assignment,ANY currentPokemons = new HashMap&lt;&gt;())<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>22</SUB>>", "7": "<(IDENTIFIER,currentPokemons,new HashMap&lt;&gt;())<SUB>22</SUB>>", "114": "<(&lt;operator&gt;.lessThan,r &lt; n)<SUB>25</SUB>>", "116": "<(IDENTIFIER,n,r &lt; n)<SUB>25</SUB>>", "118": "<(CONTROL_STRUCTURE,while (currentPokemons.size() &lt; types &amp;&amp; r &lt; n),while (currentPokemons.size() &lt; types &amp;&amp; r &lt; n))<SUB>26</SUB>>", "120": "<(&lt;operator&gt;.lessThan,currentPokemons.size() &lt; types)<SUB>26</SUB>>", "122": "<(IDENTIFIER,currentPokemons,size())<SUB>26</SUB>>", "124": "<(&lt;operator&gt;.lessThan,r &lt; n)<SUB>26</SUB>>", "126": "<(IDENTIFIER,n,r &lt; n)<SUB>26</SUB>>", "10": "<(LOCAL,char pokemon: char)<SUB>27</SUB>>", "129": "<(IDENTIFIER,pokemon,char pokemon = pokemons[r++])<SUB>27</SUB>>", "131": "<(IDENTIFIER,pokemons,char pokemon = pokemons[r++])<SUB>27</SUB>>", "133": "<(IDENTIFIER,r,r++)<SUB>27</SUB>>", "135": "<(IDENTIFIER,currentPokemons,merge(pokemon, 1, &lt;lambda&gt;))<SUB>28</SUB>>", "137": "<(LITERAL,1,merge(pokemon, 1, &lt;lambda&gt;))<SUB>28</SUB>>", "138": "<(&lt;operator&gt;.assignment,min = Math.min(r - l, min))<SUB>30</SUB>>", "140": "<(min,Math.min(r - l, min))<SUB>30</SUB>>", "142": "<(&lt;operator&gt;.subtraction,r - l)<SUB>30</SUB>>", "144": "<(IDENTIFIER,l,r - l)<SUB>30</SUB>>", "146": "<(CONTROL_STRUCTURE,while (currentPokemons.size() == types),while (currentPokemons.size() == types))<SUB>32</SUB>>", "148": "<(size,size())<SUB>32</SUB>>", "150": "<(IDENTIFIER,types,currentPokemons.size() == types)<SUB>32</SUB>>", "152": "<(LOCAL,char pokemon: char)<SUB>33</SUB>>", "154": "<(IDENTIFIER,pokemon,char pokemon = pokemons[l++])<SUB>33</SUB>>", "156": "<(IDENTIFIER,pokemons,char pokemon = pokemons[l++])<SUB>33</SUB>>", "158": "<(IDENTIFIER,l,l++)<SUB>33</SUB>>", "160": "<(&lt;operator&gt;.equals,currentPokemons.get(pokemon) == 1)<SUB>34</SUB>>", "162": "<(IDENTIFIER,currentPokemons,get(pokemon))<SUB>34</SUB>>", "164": "<(LITERAL,1,currentPokemons.get(pokemon) == 1)<SUB>34</SUB>>", "166": "<(remove,remove(pokemon))<SUB>35</SUB>>", "168": "<(IDENTIFIER,pokemon,remove(pokemon))<SUB>35</SUB>>", "170": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "172": "<(IDENTIFIER,min,min = Math.min(r - l, min))<SUB>37</SUB>>", "174": "<(IDENTIFIER,Math,Math.min(r - l, min))<SUB>37</SUB>>", "176": "<(IDENTIFIER,r,r - l)<SUB>37</SUB>>", "178": "<(IDENTIFIER,min,Math.min(r - l, min))<SUB>37</SUB>>", "180": "<(IDENTIFIER,currentPokemons,put(pokemon, currentPokemons.get(pokemon) - 1))<SUB>38</SUB>>", "182": "<(&lt;operator&gt;.subtraction,currentPokemons.get(pokemon) - 1)<SUB>38</SUB>>", "184": "<(IDENTIFIER,currentPokemons,get(pokemon))<SUB>38</SUB>>", "186": "<(LITERAL,1,currentPokemons.get(pokemon) - 1)<SUB>38</SUB>>", "188": "<(IDENTIFIER,min,min = Math.min(min, r - l + 1))<SUB>43</SUB>>", "190": "<(IDENTIFIER,Math,Math.min(min, r - l + 1))<SUB>43</SUB>>", "192": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>43</SUB>>", "194": "<(IDENTIFIER,r,r - l)<SUB>43</SUB>>", "196": "<(LITERAL,1,r - l + 1)<SUB>43</SUB>>", "198": "<(IDENTIFIER,min,min = Math.max(min, types))<SUB>44</SUB>>", "200": "<(IDENTIFIER,Math,Math.max(min, types))<SUB>44</SUB>>", "202": "<(IDENTIFIER,types,Math.max(min, types))<SUB>44</SUB>>", "204": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "206": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "208": "<(MODIFIER,PUBLIC)>", "210": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}