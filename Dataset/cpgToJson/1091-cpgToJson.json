{"edges": [["24", "26"], ["24", "245"], ["24", "246"], ["24", "247"], ["26", "27"], ["26", "28"], ["26", "32"], ["26", "4"], ["26", "55"], ["26", "58"], ["26", "6"], ["26", "69"], ["26", "72"], ["26", "75"], ["26", "76"], ["26", "8"], ["26", "82"], ["26", "85"], ["26", "86"], ["26", "87"], ["26", "240"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["32", "37"], ["32", "40"], ["32", "42"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["40", "41"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "3"], ["58", "59"], ["59", "60"], ["59", "63"], ["59", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "5"], ["72", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["85", "7"], ["87", "88"], ["87", "92"], ["88", "89"], ["88", "91"], ["89", "90"], ["92", "93"], ["92", "96"], ["92", "99"], ["92", "100"], ["92", "106"], ["92", "107"], ["92", "113"], ["93", "94"], ["93", "95"], ["96", "9"], ["96", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["104", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["111", "112"], ["113", "114"], ["113", "121"], ["113", "130"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["131", "132"], ["131", "137"], ["131", "140"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["140", "141"], ["141", "142"], ["141", "147"], ["141", "150"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "149"], ["150", "151"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "157"], ["151", "160"], ["151", "237"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "167"], ["160", "170"], ["160", "172"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["172", "173"], ["172", "174"], ["172", "187"], ["172", "188"], ["172", "197"], ["172", "198"], ["172", "207"], ["172", "214"], ["172", "231"], ["172", "234"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "222"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "230"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["28", "34"], ["55", "62"], ["58", "71"], ["69", "73"], ["72", "80"], ["76", "84"], ["82", "85"], ["85", "89"], ["240", "247"], ["30", "28"], ["34", "37"], ["37", "43"], ["37", "57"], ["40", "37"], ["42", "40"], ["57", "55"], ["71", "69"], ["73", "72"], ["78", "76"], ["84", "82"], ["88", "95"], ["88", "243"], ["241", "240"], ["43", "52"], ["46", "42"], ["60", "67"], ["63", "58"], ["80", "78"], ["89", "88"], ["93", "97"], ["96", "104"], ["100", "111"], ["107", "115"], ["243", "241"], ["48", "46"], ["62", "60"], ["65", "63"], ["95", "93"], ["97", "96"], ["102", "100"], ["109", "107"], ["114", "126"], ["114", "133"], ["121", "89"], ["50", "48"], ["67", "65"], ["104", "102"], ["111", "109"], ["115", "114"], ["115", "118"], ["118", "114"], ["123", "121"], ["52", "50"], ["124", "123"], ["132", "137"], ["132", "143"], ["137", "89"], ["126", "124"], ["133", "132"], ["142", "147"], ["142", "153"], ["147", "89"], ["143", "142"], ["153", "157"], ["157", "164"], ["237", "89"], ["162", "167"], ["167", "183"], ["167", "237"], ["170", "167"], ["164", "162"], ["174", "194"], ["188", "203"], ["198", "210"], ["207", "216"], ["231", "234"], ["234", "170"], ["176", "174"], ["190", "188"], ["200", "198"], ["209", "207"], ["215", "226"], ["215", "231"], ["178", "176"], ["192", "190"], ["201", "200"], ["210", "209"], ["216", "215"], ["216", "219"], ["219", "215"], ["223", "170"], ["180", "178"], ["194", "192"], ["203", "201"], ["225", "223"], ["182", "180"], ["226", "225"], ["183", "182"], ["24", "30"], ["25", "247"], ["28", "247"], ["28", "247"], ["28", "247"], ["34", "247"], ["37", "247"], ["37", "247"], ["55", "247"], ["60", "247"], ["63", "247"], ["63", "247"], ["63", "247"], ["58", "247"], ["69", "247"], ["73", "247"], ["72", "247"], ["72", "247"], ["78", "247"], ["80", "247"], ["78", "247"], ["76", "247"], ["76", "247"], ["82", "247"], ["85", "247"], ["89", "247"], ["88", "247"], ["88", "247"], ["240", "247"], ["240", "247"], ["240", "247"], ["93", "247"], ["97", "247"], ["96", "247"], ["96", "247"], ["102", "247"], ["100", "247"], ["100", "247"], ["107", "247"], ["111", "247"], ["109", "247"], ["107", "247"], ["107", "247"], ["115", "247"], ["114", "247"], ["118", "247"], ["114", "247"], ["114", "247"], ["132", "247"], ["132", "247"], ["132", "247"], ["142", "247"], ["142", "247"], ["142", "247"], ["153", "247"], ["153", "247"], ["157", "247"], ["157", "247"], ["164", "247"], ["162", "247"], ["162", "247"], ["167", "247"], ["167", "247"], ["237", "247"], ["178", "247"], ["176", "247"], ["174", "247"], ["174", "247"], ["194", "247"], ["190", "247"], ["188", "247"], ["188", "247"], ["201", "247"], ["203", "247"], ["201", "247"], ["200", "247"], ["198", "247"], ["198", "247"], ["207", "247"], ["209", "247"], ["209", "247"], ["207", "247"], ["207", "247"], ["216", "247"], ["216", "247"], ["215", "247"], ["219", "247"], ["219", "247"], ["215", "247"], ["215", "247"], ["231", "247"], ["234", "247"], ["234", "247"], ["225", "247"], ["223", "247"], ["223", "247"], ["170", "247"], ["147", "247"], ["137", "247"], ["126", "247"], ["124", "247"], ["123", "247"], ["121", "247"], ["121", "247"], ["42", "247"], ["48", "247"], ["46", "247"], ["42", "247"], ["42", "247"], ["40", "247"], ["109", "247"], ["24", "25"], ["30", "28"], ["24", "55"], ["24", "69"], ["78", "76"], ["78", "76"], ["24", "82"], ["24", "34"], ["24", "42"], ["48", "42"], ["48", "42"], ["55", "58"], ["24", "58"], ["60", "58"], ["63", "58"], ["69", "72"], ["24", "72"], ["73", "72"], ["82", "85"], ["24", "85"], ["85", "240"], ["237", "240"], ["147", "240"], ["137", "240"], ["121", "240"], ["24", "240"], ["24", "30"], ["34", "37"], ["40", "37"], ["24", "37"], ["52", "40"], ["24", "40"], ["24", "60"], ["24", "68"], ["58", "73"], ["24", "73"], ["24", "78"], ["80", "78"], ["89", "88"], ["24", "88"], ["24", "93"], ["102", "100"], ["102", "100"], ["109", "107"], ["109", "107"], ["24", "46"], ["48", "46"], ["48", "46"], ["60", "63"], ["24", "63"], ["72", "80"], ["24", "80"], ["76", "89"], ["24", "89"], ["93", "96"], ["24", "96"], ["97", "96"], ["24", "48"], ["28", "48"], ["73", "97"], ["24", "97"], ["78", "102"], ["24", "102"], ["104", "102"], ["24", "109"], ["111", "109"], ["115", "114"], ["115", "114"], ["118", "114"], ["118", "114"], ["85", "121"], ["237", "121"], ["147", "121"], ["137", "121"], ["24", "121"], ["126", "121"], ["126", "121"], ["96", "104"], ["24", "104"], ["104", "111"], ["24", "111"], ["100", "115"], ["24", "115"], ["107", "118"], ["24", "118"], ["24", "123"], ["126", "123"], ["126", "123"], ["37", "52"], ["24", "52"], ["24", "124"], ["126", "124"], ["126", "124"], ["28", "132"], ["142", "132"], ["107", "132"], ["118", "132"], ["24", "132"], ["85", "137"], ["237", "137"], ["147", "137"], ["121", "137"], ["24", "137"], ["115", "126"], ["24", "126"], ["28", "142"], ["132", "142"], ["132", "142"], ["24", "142"], ["85", "147"], ["237", "147"], ["137", "147"], ["121", "147"], ["24", "147"], ["24", "153"], ["24", "157"], ["164", "162"], ["164", "162"], ["85", "237"], ["223", "237"], ["147", "237"], ["137", "237"], ["121", "237"], ["24", "237"], ["162", "167"], ["170", "167"], ["24", "167"], ["182", "170"], ["24", "170"], ["24", "174"], ["178", "174"], ["178", "174"], ["174", "188"], ["24", "188"], ["28", "188"], ["201", "198"], ["201", "198"], ["24", "198"], ["209", "207"], ["209", "207"], ["24", "231"], ["24", "234"], ["115", "164"], ["24", "164"], ["188", "207"], ["24", "207"], ["203", "231"], ["201", "234"], ["24", "176"], ["178", "176"], ["178", "176"], ["174", "190"], ["24", "190"], ["28", "190"], ["201", "200"], ["201", "200"], ["24", "200"], ["28", "209"], ["198", "209"], ["24", "209"], ["216", "215"], ["216", "215"], ["219", "215"], ["219", "215"], ["24", "178"], ["28", "178"], ["153", "201"], ["234", "201"], ["24", "201"], ["203", "201"], ["203", "201"], ["24", "216"], ["174", "216"], ["142", "216"], ["219", "216"], ["216", "219"], ["24", "219"], ["207", "219"], ["85", "223"], ["237", "223"], ["147", "223"], ["137", "223"], ["121", "223"], ["24", "223"], ["182", "223"], ["183", "194"], ["24", "194"], ["24", "203"], ["157", "203"], ["231", "203"], ["24", "225"], ["182", "225"], ["183", "182"], ["183", "182"], ["167", "182"], ["24", "182"], ["24", "226"], ["182", "226"], ["164", "183"], ["194", "183"], ["24", "183"], ["37", "42"], ["37", "52"], ["37", "37"], ["37", "40"], ["37", "50"], ["37", "43"], ["37", "48"], ["37", "46"], ["88", "107"], ["88", "115"], ["88", "96"], ["88", "102"], ["88", "114"], ["88", "104"], ["88", "95"], ["88", "97"], ["88", "93"], ["88", "100"], ["88", "88"], ["88", "111"], ["88", "89"], ["88", "109"], ["114", "132"], ["114", "121"], ["114", "123"], ["114", "126"], ["114", "124"], ["114", "133"], ["115", "118"], ["132", "137"], ["132", "142"], ["132", "143"], ["142", "167"], ["142", "162"], ["142", "153"], ["142", "164"], ["142", "157"], ["142", "237"], ["142", "147"], ["167", "167"], ["167", "188"], ["167", "192"], ["167", "178"], ["167", "215"], ["167", "209"], ["167", "198"], ["167", "170"], ["167", "190"], ["167", "207"], ["167", "174"], ["167", "194"], ["167", "182"], ["167", "201"], ["167", "180"], ["167", "183"], ["167", "210"], ["167", "200"], ["167", "176"], ["167", "216"], ["167", "203"], ["215", "225"], ["215", "226"], ["215", "223"], ["215", "231"], ["215", "234"], ["216", "219"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,long[] dp = new long[32])<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new long[32])>", "32": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 31); i++),for (int i = 1; Some(i &lt;= 31); i++))<SUB>4</SUB>>", "34": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>4</SUB>>", "36": "<(LITERAL,1,int i = 1)<SUB>4</SUB>>", "38": "<(IDENTIFIER,i,i &lt;= 31)<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.postIncrement,i++)<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.assignment,dp[i] = 1 + 4 * dp[i - 1])<SUB>5</SUB>>", "44": "<(IDENTIFIER,dp,dp[i] = 1 + 4 * dp[i - 1])<SUB>5</SUB>>", "46": "<(&lt;operator&gt;.addition,1 + 4 * dp[i - 1])<SUB>5</SUB>>", "48": "<(&lt;operator&gt;.multiplication,4 * dp[i - 1])<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>5</SUB>>", "52": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>5</SUB>>", "54": "<(LITERAL,1,i - 1)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>6</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "62": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>6</SUB>>", "64": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "66": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>6</SUB>>", "68": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "69": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>7</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>7</SUB>>", "74": "<(IDENTIFIER,infile,readLine())<SUB>7</SUB>>", "76": "<(&lt;operator&gt;.assignment,int T = parseInt(st.nextToken()))<SUB>8</SUB>>", "78": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "80": "<(nextToken,nextToken())<SUB>8</SUB>>", "8": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>9</SUB>>", "83": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>9</SUB>>", "85": "<(&lt;init&gt;,new StringBuilder())<SUB>9</SUB>>", "86": "<(JUMP_TARGET,matcha)>", "88": "<(&lt;operator&gt;.greaterThan,T-- &gt; 0)<SUB>10</SUB>>", "90": "<(IDENTIFIER,T,T--)<SUB>10</SUB>>", "92": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "94": "<(IDENTIFIER,st,st = new StringTokenizer(infile.readLine()))<SUB>12</SUB>>", "96": "<(&lt;init&gt;,new StringTokenizer(infile.readLine()))<SUB>12</SUB>>", "97": "<(readLine,readLine())<SUB>12</SUB>>", "99": "<(LOCAL,int N: int)<SUB>13</SUB>>", "101": "<(IDENTIFIER,N,int N = parseInt(st.nextToken()))<SUB>13</SUB>>", "103": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>13</SUB>>", "105": "<(IDENTIFIER,st,nextToken())<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,long K = parseLong(st.nextToken()))<SUB>14</SUB>>", "109": "<(parseLong,parseLong(st.nextToken()))<SUB>14</SUB>>", "111": "<(nextToken,nextToken())<SUB>14</SUB>>", "113": "<(CONTROL_STRUCTURE,if (N &gt;= 32 || K == 1),if (N &gt;= 32 || K == 1))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.greaterEqualsThan,N &gt;= 32)<SUB>15</SUB>>", "117": "<(LITERAL,32,N &gt;= 32)<SUB>15</SUB>>", "119": "<(IDENTIFIER,K,K == 1)<SUB>15</SUB>>", "121": "<(append,sb.append(&quot;YES &quot; + (N - 1) + &quot;\\n&quot;))<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.addition,&quot;YES &quot; + (N - 1) + &quot;\\n&quot;)<SUB>16</SUB>>", "125": "<(LITERAL,&quot;YES &quot;,&quot;YES &quot; + (N - 1))<SUB>16</SUB>>", "127": "<(IDENTIFIER,N,N - 1)<SUB>16</SUB>>", "129": "<(LITERAL,&quot;\\n&quot;,&quot;YES &quot; + (N - 1) + &quot;\\n&quot;)<SUB>16</SUB>>", "131": "<(CONTROL_STRUCTURE,if (dp[N] == K),if (dp[N] == K))<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,dp[N])<SUB>17</SUB>>", "135": "<(IDENTIFIER,N,dp[N] == K)<SUB>17</SUB>>", "137": "<(append,sb.append(&quot;YES 0\\n&quot;))<SUB>18</SUB>>", "139": "<(LITERAL,&quot;YES 0\\n&quot;,sb.append(&quot;YES 0\\n&quot;))<SUB>18</SUB>>", "141": "<(CONTROL_STRUCTURE,if (dp[N] &lt; K),if (dp[N] &lt; K))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[N])<SUB>19</SUB>>", "145": "<(IDENTIFIER,N,dp[N] &lt; K)<SUB>19</SUB>>", "147": "<(append,sb.append(&quot;NO\\n&quot;))<SUB>20</SUB>>", "149": "<(LITERAL,&quot;NO\\n&quot;,sb.append(&quot;NO\\n&quot;))<SUB>20</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,long total = 3L)<SUB>23</SUB>>", "155": "<(LITERAL,3L,long total = 3L)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,long length = 2)<SUB>24</SUB>>", "159": "<(LITERAL,2,long length = 2)<SUB>24</SUB>>", "161": "<(LOCAL,int res: int)<SUB>25</SUB>>", "163": "<(IDENTIFIER,res,int res = N - 1)<SUB>25</SUB>>", "165": "<(IDENTIFIER,N,N - 1)<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.greaterEqualsThan,res &gt;= 0)<SUB>25</SUB>>", "169": "<(LITERAL,0,res &gt;= 0)<SUB>25</SUB>>", "171": "<(IDENTIFIER,res,res--)<SUB>25</SUB>>", "173": "<(LOCAL,long min: long)<SUB>27</SUB>>", "175": "<(IDENTIFIER,min,long min = 1 + 3 * dp[N - 1 - res])<SUB>27</SUB>>", "177": "<(LITERAL,1,1 + 3 * dp[N - 1 - res])<SUB>27</SUB>>", "179": "<(LITERAL,3,3 * dp[N - 1 - res])<SUB>27</SUB>>", "181": "<(IDENTIFIER,dp,3 * dp[N - 1 - res])<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>27</SUB>>", "185": "<(LITERAL,1,N - 1)<SUB>27</SUB>>", "187": "<(LOCAL,long max: long)<SUB>28</SUB>>", "189": "<(IDENTIFIER,max,long max = min + dp[N - 1])<SUB>28</SUB>>", "191": "<(IDENTIFIER,min,min + dp[N - 1])<SUB>28</SUB>>", "193": "<(IDENTIFIER,dp,min + dp[N - 1])<SUB>28</SUB>>", "195": "<(IDENTIFIER,N,N - 1)<SUB>28</SUB>>", "197": "<(LOCAL,long cansplit: long)<SUB>29</SUB>>", "199": "<(IDENTIFIER,cansplit,long cansplit = total - 2 * length + 1)<SUB>29</SUB>>", "201": "<(&lt;operator&gt;.subtraction,total - 2 * length)<SUB>29</SUB>>", "203": "<(&lt;operator&gt;.multiplication,2 * length)<SUB>29</SUB>>", "205": "<(IDENTIFIER,length,2 * length)<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.assignmentPlus,max += dp[res] * cansplit)<SUB>30</SUB>>", "209": "<(&lt;operator&gt;.multiplication,dp[res] * cansplit)<SUB>30</SUB>>", "211": "<(IDENTIFIER,dp,dp[res] * cansplit)<SUB>30</SUB>>", "213": "<(IDENTIFIER,cansplit,dp[res] * cansplit)<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.logicalAnd,min &lt;= K &amp;&amp; K &lt;= max)<SUB>31</SUB>>", "217": "<(IDENTIFIER,min,min &lt;= K)<SUB>31</SUB>>", "219": "<(&lt;operator&gt;.lessEqualsThan,K &lt;= max)<SUB>31</SUB>>", "221": "<(IDENTIFIER,max,K &lt;= max)<SUB>31</SUB>>", "223": "<(append,sb.append(&quot;YES &quot; + res + &quot;\\n&quot;))<SUB>33</SUB>>", "225": "<(&lt;operator&gt;.addition,&quot;YES &quot; + res + &quot;\\n&quot;)<SUB>33</SUB>>", "227": "<(LITERAL,&quot;YES &quot;,&quot;YES &quot; + res)<SUB>33</SUB>>", "229": "<(LITERAL,&quot;\\n&quot;,&quot;YES &quot; + res + &quot;\\n&quot;)<SUB>33</SUB>>", "231": "<(&lt;operators&gt;.assignmentShiftLeft,length &lt;&lt;= 1)<SUB>36</SUB>>", "233": "<(LITERAL,1,length &lt;&lt;= 1)<SUB>36</SUB>>", "235": "<(IDENTIFIER,total,total *= 4)<SUB>37</SUB>>", "237": "<(append,sb.append(&quot;NO\\n&quot;))<SUB>39</SUB>>", "239": "<(LITERAL,&quot;NO\\n&quot;,sb.append(&quot;NO\\n&quot;))<SUB>39</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>42</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>42</SUB>>", "245": "<(MODIFIER,PUBLIC)>", "247": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}