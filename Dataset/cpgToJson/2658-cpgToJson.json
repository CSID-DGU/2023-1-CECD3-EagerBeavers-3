{"edges": [["25", "26"], ["25", "27"], ["25", "140"], ["25", "141"], ["25", "142"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "42"], ["27", "45"], ["27", "50"], ["27", "51"], ["27", "57"], ["27", "60"], ["27", "8"], ["27", "62"], ["27", "65"], ["27", "68"], ["27", "85"], ["27", "86"], ["27", "89"], ["27", "133"], ["27", "138"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "7"], ["65", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "94"], ["90", "91"], ["90", "93"], ["91", "92"], ["94", "95"], ["94", "97"], ["94", "98"], ["94", "10"], ["94", "102"], ["94", "105"], ["94", "106"], ["94", "107"], ["94", "111"], ["94", "130"], ["95", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "104"], ["105", "9"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "114"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "120"], ["116", "117"], ["116", "118"], ["118", "119"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["28", "35"], ["31", "44"], ["42", "48"], ["45", "55"], ["51", "59"], ["57", "60"], ["60", "64"], ["62", "66"], ["65", "70"], ["86", "91"], ["133", "138"], ["138", "142"], ["30", "28"], ["44", "42"], ["46", "45"], ["53", "51"], ["59", "57"], ["64", "62"], ["66", "65"], ["70", "73"], ["73", "83"], ["73", "86"], ["76", "73"], ["90", "95"], ["90", "136"], ["134", "133"], ["33", "40"], ["36", "31"], ["48", "46"], ["55", "53"], ["79", "76"], ["91", "90"], ["95", "100"], ["98", "104"], ["102", "105"], ["105", "109"], ["107", "112"], ["130", "91"], ["136", "134"], ["35", "33"], ["38", "36"], ["81", "79"], ["100", "98"], ["104", "102"], ["109", "107"], ["112", "118"], ["112", "130"], ["40", "38"], ["83", "81"], ["116", "122"], ["118", "116"], ["121", "112"], ["121", "127"], ["122", "121"], ["127", "112"], ["25", "30"], ["26", "142"], ["28", "142"], ["33", "142"], ["36", "142"], ["36", "142"], ["36", "142"], ["31", "142"], ["42", "142"], ["45", "142"], ["53", "142"], ["51", "142"], ["51", "142"], ["57", "142"], ["60", "142"], ["62", "142"], ["65", "142"], ["66", "142"], ["65", "142"], ["65", "142"], ["70", "142"], ["73", "142"], ["73", "142"], ["73", "142"], ["86", "142"], ["91", "142"], ["90", "142"], ["90", "142"], ["133", "142"], ["133", "142"], ["133", "142"], ["138", "142"], ["138", "142"], ["95", "142"], ["98", "142"], ["98", "142"], ["98", "142"], ["102", "142"], ["105", "142"], ["107", "142"], ["112", "142"], ["112", "142"], ["130", "142"], ["130", "142"], ["122", "142"], ["122", "142"], ["121", "142"], ["121", "142"], ["127", "142"], ["127", "142"], ["81", "142"], ["83", "142"], ["81", "142"], ["79", "142"], ["79", "142"], ["76", "142"], ["25", "26"], ["25", "28"], ["25", "42"], ["53", "51"], ["53", "51"], ["25", "57"], ["25", "62"], ["25", "86"], ["28", "31"], ["25", "31"], ["33", "31"], ["36", "31"], ["42", "45"], ["25", "45"], ["57", "60"], ["25", "60"], ["62", "65"], ["25", "65"], ["66", "65"], ["25", "70"], ["45", "133"], ["86", "133"], ["95", "133"], ["25", "133"], ["45", "138"], ["25", "138"], ["25", "33"], ["25", "41"], ["25", "53"], ["55", "53"], ["55", "66"], ["25", "66"], ["70", "73"], ["76", "73"], ["25", "73"], ["51", "73"], ["73", "76"], ["25", "76"], ["91", "90"], ["25", "90"], ["100", "98"], ["25", "102"], ["109", "107"], ["105", "130"], ["127", "130"], ["25", "130"], ["33", "36"], ["25", "36"], ["31", "55"], ["25", "55"], ["60", "79"], ["25", "79"], ["81", "79"], ["81", "79"], ["60", "91"], ["130", "91"], ["79", "91"], ["25", "91"], ["86", "95"], ["25", "95"], ["102", "105"], ["25", "105"], ["53", "81"], ["25", "81"], ["83", "81"], ["91", "100"], ["25", "100"], ["100", "109"], ["25", "109"], ["107", "112"], ["118", "112"], ["25", "112"], ["118", "116"], ["65", "83"], ["25", "83"], ["112", "118"], ["25", "118"], ["122", "121"], ["122", "121"], ["25", "121"], ["116", "122"], ["25", "122"], ["98", "122"], ["105", "127"], ["25", "127"], ["122", "127"], ["73", "73"], ["73", "83"], ["73", "81"], ["73", "76"], ["73", "79"], ["90", "107"], ["90", "98"], ["90", "105"], ["90", "130"], ["90", "100"], ["90", "102"], ["90", "104"], ["90", "95"], ["90", "91"], ["90", "112"], ["90", "90"], ["90", "109"], ["112", "116"], ["112", "122"], ["112", "118"], ["112", "121"], ["112", "112"], ["121", "127"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, true))<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, true))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, true))<SUB>3</SUB>>", "47": "<(IDENTIFIER,System,new PrintWriter(System.out, true))<SUB>3</SUB>>", "49": "<(LITERAL,true,new PrintWriter(System.out, true))<SUB>3</SUB>>", "51": "<(&lt;operator&gt;.assignment,int numSeq = parseInt(f.readLine()))<SUB>4</SUB>>", "53": "<(parseInt,parseInt(f.readLine()))<SUB>4</SUB>>", "55": "<(readLine,readLine())<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.assignment,sequence = new PriorityQueue&lt;Integer&gt;())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;Integer&gt;())<SUB>5</SUB>>", "61": "<(IDENTIFIER,sequence,new PriorityQueue&lt;Integer&gt;())<SUB>5</SUB>>", "62": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "64": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "67": "<(IDENTIFIER,f,readLine())<SUB>7</SUB>>", "69": "<(LOCAL,int i: int)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; numSeq)<SUB>8</SUB>>", "75": "<(IDENTIFIER,numSeq,i &lt; numSeq)<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "79": "<(add,add(Integer.parseInt(st.nextToken())))<SUB>9</SUB>>", "81": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "83": "<(nextToken,nextToken())<SUB>9</SUB>>", "85": "<(LOCAL,int numColors: int)<SUB>12</SUB>>", "87": "<(IDENTIFIER,numColors,int numColors = 0)<SUB>12</SUB>>", "89": "<(CONTROL_STRUCTURE,while (sequence.size() &gt; 0),while (sequence.size() &gt; 0))<SUB>13</SUB>>", "91": "<(size,size())<SUB>13</SUB>>", "93": "<(LITERAL,0,sequence.size() &gt; 0)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,numColors++)<SUB>14</SUB>>", "97": "<(LOCAL,int smallest: int)<SUB>15</SUB>>", "99": "<(IDENTIFIER,smallest,int smallest = poll())<SUB>15</SUB>>", "101": "<(IDENTIFIER,sequence,poll())<SUB>15</SUB>>", "102": "<(&lt;operator&gt;.assignment,ANY temp = new PriorityQueue&lt;Integer&gt;())<SUB>16</SUB>>", "104": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;Integer&gt;())<SUB>16</SUB>>", "9": "<(IDENTIFIER,temp,new PriorityQueue&lt;Integer&gt;())<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,)<SUB>17</SUB>>", "109": "<(iterator,&lt;empty&gt;)<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>17</SUB>>", "113": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "115": "<(LOCAL,each: int)<SUB>17</SUB>>", "117": "<(IDENTIFIER,each,&lt;empty&gt;)>", "119": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "121": "<(&lt;operator&gt;.notEquals,each % smallest != 0)<SUB>18</SUB>>", "123": "<(IDENTIFIER,each,each % smallest)<SUB>18</SUB>>", "125": "<(LITERAL,0,each % smallest != 0)<SUB>18</SUB>>", "127": "<(add,add(each))<SUB>19</SUB>>", "129": "<(IDENTIFIER,each,add(each))<SUB>19</SUB>>", "131": "<(IDENTIFIER,sequence,sequence = temp)<SUB>22</SUB>>", "133": "<(println,System.out.println(numColors))<SUB>25</SUB>>", "135": "<(IDENTIFIER,System,System.out.println(numColors))<SUB>25</SUB>>", "137": "<(IDENTIFIER,numColors,System.out.println(numColors))<SUB>25</SUB>>", "139": "<(IDENTIFIER,out,close())<SUB>26</SUB>>", "141": "<(MODIFIER,STATIC)>"}}