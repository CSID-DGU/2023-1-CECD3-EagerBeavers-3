{"edges": [["19", "21"], ["19", "215"], ["19", "216"], ["19", "217"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "47"], ["21", "65"], ["21", "74"], ["21", "81"], ["21", "181"], ["21", "182"], ["21", "185"], ["21", "208"], ["21", "213"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "64"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "91"], ["81", "93"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "100"], ["94", "144"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["100", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "123"], ["115", "126"], ["115", "135"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["144", "145"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "172"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "180"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["185", "190"], ["185", "193"], ["185", "195"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["195", "205"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["22", "29"], ["25", "41"], ["37", "45"], ["43", "49"], ["65", "76"], ["74", "83"], ["182", "187"], ["208", "213"], ["213", "217"], ["24", "22"], ["39", "37"], ["45", "43"], ["49", "52"], ["52", "58"], ["52", "68"], ["55", "52"], ["57", "55"], ["67", "65"], ["75", "74"], ["83", "88"], ["86", "96"], ["86", "182"], ["91", "88"], ["187", "190"], ["190", "201"], ["190", "211"], ["193", "190"], ["209", "208"], ["27", "34"], ["30", "25"], ["41", "39"], ["58", "62"], ["61", "57"], ["68", "71"], ["71", "67"], ["76", "75"], ["88", "86"], ["196", "205"], ["205", "193"], ["211", "209"], ["29", "27"], ["32", "30"], ["62", "61"], ["95", "102"], ["95", "148"], ["198", "196"], ["34", "32"], ["96", "95"], ["102", "107"], ["199", "198"], ["107", "110"], ["110", "119"], ["110", "91"], ["113", "110"], ["201", "199"], ["116", "123"], ["123", "130"], ["126", "139"], ["135", "113"], ["148", "151"], ["151", "161"], ["151", "91"], ["154", "151"], ["118", "116"], ["127", "126"], ["136", "135"], ["157", "176"], ["172", "154"], ["119", "118"], ["128", "127"], ["137", "136"], ["158", "166"], ["165", "157"], ["173", "172"], ["130", "128"], ["139", "137"], ["159", "158"], ["166", "169"], ["169", "165"], ["174", "173"], ["161", "159"], ["176", "174"], ["19", "24"], ["20", "217"], ["22", "217"], ["27", "217"], ["30", "217"], ["30", "217"], ["30", "217"], ["25", "217"], ["39", "217"], ["37", "217"], ["37", "217"], ["43", "217"], ["43", "217"], ["43", "217"], ["65", "217"], ["67", "217"], ["65", "217"], ["65", "217"], ["74", "217"], ["74", "217"], ["86", "217"], ["86", "217"], ["182", "217"], ["187", "217"], ["190", "217"], ["190", "217"], ["190", "217"], ["208", "217"], ["208", "217"], ["208", "217"], ["213", "217"], ["213", "217"], ["196", "217"], ["196", "217"], ["205", "217"], ["193", "217"], ["95", "217"], ["95", "217"], ["148", "217"], ["151", "217"], ["151", "217"], ["157", "217"], ["157", "217"], ["172", "217"], ["172", "217"], ["154", "217"], ["102", "217"], ["102", "217"], ["107", "217"], ["110", "217"], ["110", "217"], ["91", "217"], ["116", "217"], ["116", "217"], ["126", "217"], ["126", "217"], ["135", "217"], ["135", "217"], ["113", "217"], ["57", "217"], ["61", "217"], ["57", "217"], ["57", "217"], ["55", "217"], ["39", "217"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["45", "43"], ["67", "65"], ["19", "74"], ["19", "182"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "49"], ["61", "57"], ["61", "57"], ["19", "83"], ["19", "187"], ["182", "208"], ["205", "208"], ["19", "208"], ["41", "213"], ["62", "213"], ["19", "213"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["37", "45"], ["19", "45"], ["49", "52"], ["55", "52"], ["19", "52"], ["45", "52"], ["52", "55"], ["19", "55"], ["52", "67"], ["19", "67"], ["83", "86"], ["91", "86"], ["19", "86"], ["88", "86"], ["88", "86"], ["86", "91"], ["19", "91"], ["187", "190"], ["193", "190"], ["19", "190"], ["88", "190"], ["201", "190"], ["190", "193"], ["19", "193"], ["19", "205"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["62", "61"], ["19", "61"], ["52", "68"], ["19", "68"], ["19", "71"], ["52", "71"], ["151", "88"], ["19", "88"], ["52", "88"], ["182", "196"], ["205", "196"], ["19", "196"], ["196", "205"], ["41", "62"], ["19", "62"], ["43", "95"], ["57", "95"], ["19", "95"], ["19", "102"], ["86", "107"], ["19", "107"], ["107", "110"], ["113", "110"], ["19", "110"], ["110", "113"], ["19", "113"], ["19", "123"], ["123", "126"], ["19", "126"], ["19", "135"], ["19", "148"], ["190", "201"], ["19", "201"], ["102", "116"], ["19", "116"], ["123", "116"], ["116", "123"], ["172", "126"], ["135", "126"], ["126", "135"], ["148", "151"], ["154", "151"], ["19", "151"], ["88", "151"], ["169", "154"], ["19", "154"], ["19", "172"], ["172", "157"], ["135", "157"], ["157", "172"], ["19", "130"], ["86", "130"], ["19", "139"], ["86", "139"], ["151", "169"], ["19", "169"], ["86", "161"], ["19", "161"], ["19", "176"], ["86", "176"], ["52", "57"], ["52", "52"], ["52", "58"], ["52", "61"], ["52", "55"], ["52", "62"], ["86", "96"], ["86", "95"], ["86", "91"], ["86", "88"], ["86", "86"], ["190", "196"], ["190", "198"], ["190", "190"], ["190", "201"], ["190", "205"], ["190", "193"], ["190", "199"], ["95", "107"], ["95", "102"], ["95", "151"], ["95", "148"], ["95", "110"], ["110", "113"], ["110", "136"], ["110", "128"], ["110", "119"], ["110", "137"], ["110", "130"], ["110", "118"], ["110", "127"], ["110", "139"], ["110", "116"], ["110", "123"], ["110", "126"], ["110", "135"], ["110", "110"], ["151", "154"], ["151", "169"], ["151", "161"], ["151", "151"], ["151", "173"], ["151", "174"], ["151", "158"], ["151", "166"], ["151", "157"], ["151", "159"], ["151", "176"], ["151", "165"], ["151", "172"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,c = new char[n])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.alloc,new char[n])>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,c[i] = charAt(0))<SUB>8</SUB>>", "59": "<(IDENTIFIER,c,c[i] = charAt(0))<SUB>8</SUB>>", "61": "<(charAt,charAt(0))<SUB>8</SUB>>", "63": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,dp = new int[n + 1][n + 1])<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.alloc,new int[n + 1][n + 1])>", "69": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.addition,n + 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,n + 1)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>12</SUB>>", "77": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>12</SUB>>", "79": "<(LITERAL,0,dp[0][0] = 1)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>14</SUB>>", "89": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.equals,c[i] == 's')<SUB>15</SUB>>", "97": "<(IDENTIFIER,c,c[i] == 's')<SUB>15</SUB>>", "99": "<(LITERAL,'s',c[i] == 's')<SUB>15</SUB>>", "101": "<(LOCAL,int prev: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,prev,int prev = 0)<SUB>16</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &gt;= 0); j--),for (int j = i; Some(j &gt;= 0); j--))<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.assignment,int j = i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,i,int j = i)<SUB>17</SUB>>", "111": "<(IDENTIFIER,j,j &gt;= 0)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.postDecrement,j--)<SUB>17</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "117": "<(IDENTIFIER,prev,prev += dp[i][j])<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>18</SUB>>", "121": "<(IDENTIFIER,i,prev += dp[i][j])<SUB>18</SUB>>", "123": "<(&lt;operators&gt;.assignmentModulo,prev %= mod)<SUB>19</SUB>>", "125": "<(IDENTIFIER,mod,prev %= mod)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>20</SUB>>", "129": "<(IDENTIFIER,dp,dp[i + 1][j] += prev)<SUB>20</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "133": "<(IDENTIFIER,j,dp[i + 1][j] += prev)<SUB>20</SUB>>", "135": "<(&lt;operators&gt;.assignmentModulo,dp[i + 1][j] %= mod)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.addition,i + 1)<SUB>21</SUB>>", "141": "<(LITERAL,1,i + 1)<SUB>21</SUB>>", "143": "<(IDENTIFIER,mod,dp[i + 1][j] %= mod)<SUB>21</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "147": "<(LOCAL,int j: int)<SUB>25</SUB>>", "149": "<(IDENTIFIER,j,int j = 1)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>25</SUB>>", "153": "<(IDENTIFIER,n,j &lt;= n)<SUB>25</SUB>>", "155": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.assignmentPlus,dp[i + 1][j] += dp[i][j - 1])<SUB>26</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.addition,i + 1)<SUB>26</SUB>>", "163": "<(LITERAL,1,i + 1)<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1])<SUB>26</SUB>>", "167": "<(IDENTIFIER,dp,dp[i + 1][j] += dp[i][j - 1])<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>26</SUB>>", "171": "<(LITERAL,1,j - 1)<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>27</SUB>>", "175": "<(IDENTIFIER,dp,dp[i + 1][j] %= mod)<SUB>27</SUB>>", "177": "<(IDENTIFIER,i,i + 1)<SUB>27</SUB>>", "179": "<(IDENTIFIER,j,dp[i + 1][j] %= mod)<SUB>27</SUB>>", "181": "<(LOCAL,int ans: int)<SUB>32</SUB>>", "183": "<(IDENTIFIER,ans,int ans = 0)<SUB>32</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>33</SUB>>", "187": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "189": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "191": "<(IDENTIFIER,i,i &lt; n)<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "197": "<(IDENTIFIER,ans,ans += dp[n - 1][i])<SUB>34</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[n - 1])<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>34</SUB>>", "203": "<(LITERAL,1,n - 1)<SUB>34</SUB>>", "205": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>35</SUB>>", "207": "<(IDENTIFIER,mod,ans %= mod)<SUB>35</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "211": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "213": "<(close,close())<SUB>42</SUB>>", "215": "<(MODIFIER,PUBLIC)>", "217": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}