{"edges": [["19", "20"], ["19", "21"], ["19", "286"], ["19", "287"], ["19", "288"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "48"], ["21", "49"], ["21", "53"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "57"], ["53", "63"], ["54", "55"], ["54", "56"], ["57", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "83"], ["64", "84"], ["64", "90"], ["64", "116"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["76", "79"], ["79", "80"], ["79", "81"], ["79", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "102"], ["100", "107"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["116", "150"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "145"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["151", "152"], ["151", "153"], ["151", "158"], ["151", "159"], ["151", "162"], ["151", "163"], ["151", "166"], ["151", "241"], ["151", "242"], ["151", "245"], ["151", "265"], ["151", "281"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["177", "178"], ["177", "183"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "239"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "203"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "221"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "220"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "217"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["229", "230"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["239", "240"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "253"], ["245", "255"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["255", "256"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["263", "264"], ["265", "266"], ["265", "273"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["22", "29"], ["25", "39"], ["37", "46"], ["42", "51"], ["49", "54"], ["24", "22"], ["39", "37"], ["44", "42"], ["51", "49"], ["54", "61"], ["54", "66"], ["27", "34"], ["30", "25"], ["46", "44"], ["58", "288"], ["29", "27"], ["32", "30"], ["59", "58"], ["66", "70"], ["84", "92"], ["34", "32"], ["61", "59"], ["70", "79"], ["70", "87"], ["86", "84"], ["92", "95"], ["95", "104"], ["95", "117"], ["98", "95"], ["117", "122"], ["117", "155"], ["74", "87"], ["87", "86"], ["102", "108"], ["107", "98"], ["122", "127"], ["145", "288"], ["76", "74"], ["104", "102"], ["108", "113"], ["111", "107"], ["127", "130"], ["130", "138"], ["130", "148"], ["133", "130"], ["146", "145"], ["153", "159"], ["159", "163"], ["163", "168"], ["242", "247"], ["281", "288"], ["79", "76"], ["113", "111"], ["148", "146"], ["155", "153"], ["168", "171"], ["171", "179"], ["171", "242"], ["174", "171"], ["247", "250"], ["250", "258"], ["250", "267"], ["253", "250"], ["266", "277"], ["266", "284"], ["282", "281"], ["137", "143"], ["137", "133"], ["267", "270"], ["270", "266"], ["274", "284"], ["284", "282"], ["138", "137"], ["143", "133"], ["178", "186"], ["178", "174"], ["257", "263"], ["257", "253"], ["276", "274"], ["179", "178"], ["239", "174"], ["258", "257"], ["263", "253"], ["277", "276"], ["186", "189"], ["189", "197"], ["189", "239"], ["192", "189"], ["196", "213"], ["196", "192"], ["197", "200"], ["200", "196"], ["204", "223"], ["206", "204"], ["222", "234"], ["222", "192"], ["207", "206"], ["223", "222"], ["223", "226"], ["226", "222"], ["230", "192"], ["209", "207"], ["232", "230"], ["210", "217"], ["217", "209"], ["233", "232"], ["212", "210"], ["234", "233"], ["213", "212"], ["19", "24"], ["20", "288"], ["22", "288"], ["27", "288"], ["30", "288"], ["30", "288"], ["30", "288"], ["25", "288"], ["37", "288"], ["44", "288"], ["46", "288"], ["44", "288"], ["42", "288"], ["42", "288"], ["49", "288"], ["51", "288"], ["49", "288"], ["49", "288"], ["54", "288"], ["54", "288"], ["58", "288"], ["58", "288"], ["19", "20"], ["19", "22"], ["39", "37"], ["44", "42"], ["44", "42"], ["51", "49"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "27"], ["19", "35"], ["25", "39"], ["19", "39"], ["19", "44"], ["46", "44"], ["37", "51"], ["19", "51"], ["42", "54"], ["19", "54"], ["27", "30"], ["19", "30"], ["39", "46"], ["19", "46"], ["19", "58"], ["19", "66"], ["86", "84"], ["19", "92"], ["49", "70"], ["19", "70"], ["76", "74"], ["76", "74"], ["76", "74"], ["66", "86"], ["74", "86"], ["19", "86"], ["92", "95"], ["98", "95"], ["19", "95"], ["66", "95"], ["74", "95"], ["104", "98"], ["19", "98"], ["104", "102"], ["104", "102"], ["19", "107"], ["84", "107"], ["70", "117"], ["19", "117"], ["19", "122"], ["66", "87"], ["74", "87"], ["19", "87"], ["19", "127"], ["122", "145"], ["143", "145"], ["19", "145"], ["155", "153"], ["155", "153"], ["19", "159"], ["19", "163"], ["19", "242"], ["79", "76"], ["19", "76"], ["79", "76"], ["79", "76"], ["19", "104"], ["95", "104"], ["19", "111"], ["84", "111"], ["127", "130"], ["133", "130"], ["19", "130"], ["95", "130"], ["130", "133"], ["19", "133"], ["19", "168"], ["19", "247"], ["159", "281"], ["274", "281"], ["204", "281"], ["230", "281"], ["19", "281"], ["44", "79"], ["19", "79"], ["51", "79"], ["104", "155"], ["19", "155"], ["95", "155"], ["168", "171"], ["174", "171"], ["19", "171"], ["117", "171"], ["213", "171"], ["179", "174"], ["223", "174"], ["19", "174"], ["247", "250"], ["253", "250"], ["19", "250"], ["171", "250"], ["258", "253"], ["19", "253"], ["84", "266"], ["270", "266"], ["270", "266"], ["276", "274"], ["276", "274"], ["84", "137"], ["107", "137"], ["54", "137"], ["19", "137"], ["54", "270"], ["200", "270"], ["226", "270"], ["19", "270"], ["122", "143"], ["19", "143"], ["179", "178"], ["179", "178"], ["19", "178"], ["258", "257"], ["258", "257"], ["19", "257"], ["159", "276"], ["204", "276"], ["230", "276"], ["19", "276"], ["206", "276"], ["232", "276"], ["51", "179"], ["79", "179"], ["19", "179"], ["171", "179"], ["163", "186"], ["239", "186"], ["19", "186"], ["217", "239"], ["19", "239"], ["163", "239"], ["51", "258"], ["79", "258"], ["179", "258"], ["19", "258"], ["250", "258"], ["242", "263"], ["19", "263"], ["159", "277"], ["204", "277"], ["230", "277"], ["19", "277"], ["186", "189"], ["192", "189"], ["19", "189"], ["155", "189"], ["189", "192"], ["217", "192"], ["19", "192"], ["84", "196"], ["200", "196"], ["200", "196"], ["206", "204"], ["206", "204"], ["54", "200"], ["226", "200"], ["19", "200"], ["159", "206"], ["204", "206"], ["230", "206"], ["19", "206"], ["232", "206"], ["223", "222"], ["223", "222"], ["226", "222"], ["226", "222"], ["232", "230"], ["232", "230"], ["159", "207"], ["204", "207"], ["230", "207"], ["19", "207"], ["213", "223"], ["19", "223"], ["200", "226"], ["19", "226"], ["233", "232"], ["233", "232"], ["19", "232"], ["206", "232"], ["189", "217"], ["19", "217"], ["163", "217"], ["239", "217"], ["204", "233"], ["19", "233"], ["206", "233"], ["213", "212"], ["213", "212"], ["19", "212"], ["204", "234"], ["19", "234"], ["206", "234"], ["171", "213"], ["19", "213"], ["179", "213"], ["223", "213"], ["54", "84"], ["54", "95"], ["54", "92"], ["54", "59"], ["54", "87"], ["54", "58"], ["54", "61"], ["54", "70"], ["54", "86"], ["54", "66"], ["54", "117"], ["70", "74"], ["70", "76"], ["70", "79"], ["95", "107"], ["95", "98"], ["95", "113"], ["95", "102"], ["95", "104"], ["95", "95"], ["95", "108"], ["95", "111"], ["117", "282"], ["117", "145"], ["117", "146"], ["117", "163"], ["117", "153"], ["117", "168"], ["117", "284"], ["117", "247"], ["117", "148"], ["117", "242"], ["117", "281"], ["117", "267"], ["117", "130"], ["117", "127"], ["117", "155"], ["117", "171"], ["117", "122"], ["117", "159"], ["117", "270"], ["117", "250"], ["117", "266"], ["130", "138"], ["130", "137"], ["130", "130"], ["130", "133"], ["171", "179"], ["171", "178"], ["171", "174"], ["171", "171"], ["250", "257"], ["250", "258"], ["250", "253"], ["250", "250"], ["266", "276"], ["266", "274"], ["266", "277"], ["137", "143"], ["178", "189"], ["178", "186"], ["178", "239"], ["257", "263"], ["189", "192"], ["189", "196"], ["189", "197"], ["189", "189"], ["189", "200"], ["196", "209"], ["196", "213"], ["196", "204"], ["196", "206"], ["196", "223"], ["196", "207"], ["196", "212"], ["196", "210"], ["196", "217"], ["196", "222"], ["222", "230"], ["222", "232"], ["222", "233"], ["222", "234"], ["223", "226"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String n = readLine())<SUB>4</SUB>>", "39": "<(readLine,readLine())<SUB>4</SUB>>", "41": "<(LOCAL,int k: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,k,int k = parseInt(br.readLine()))<SUB>5</SUB>>", "45": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>5</SUB>>", "47": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int l = n.length())<SUB>6</SUB>>", "51": "<(length,n.length())<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,if (k == 0),if (k == 0))<SUB>8</SUB>>", "55": "<(IDENTIFIER,k,k == 0)<SUB>8</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "61": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "63": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "65": "<(LOCAL,int max: int)<SUB>11</SUB>>", "67": "<(IDENTIFIER,max,int max = 1000)<SUB>11</SUB>>", "69": "<(CONTROL_STRUCTURE,if (l &lt;= 10),if (l &lt;= 10))<SUB>12</SUB>>", "71": "<(IDENTIFIER,l,l &lt;= 10)<SUB>12</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "75": "<(IDENTIFIER,max,max = Integer.min(1000, Integer.parseInt(n, 2)))<SUB>13</SUB>>", "77": "<(IDENTIFIER,Integer,Integer.min(1000, Integer.parseInt(n, 2)))<SUB>13</SUB>>", "79": "<(parseInt,Integer.parseInt(n, 2))<SUB>13</SUB>>", "81": "<(IDENTIFIER,n,Integer.parseInt(n, 2))<SUB>13</SUB>>", "83": "<(LOCAL,int[] steps: int[])<SUB>16</SUB>>", "85": "<(IDENTIFIER,steps,int[] steps = new int[max + 1])<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.addition,max + 1)<SUB>16</SUB>>", "89": "<(LITERAL,1,max + 1)<SUB>16</SUB>>", "91": "<(LOCAL,int i: int)<SUB>18</SUB>>", "93": "<(IDENTIFIER,i,int i = 2)<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= max)<SUB>18</SUB>>", "97": "<(IDENTIFIER,max,i &lt;= max)<SUB>18</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "101": "<(LOCAL,int ones: int)<SUB>19</SUB>>", "103": "<(IDENTIFIER,ones,int ones = numberOfOnes(i))<SUB>19</SUB>>", "105": "<(IDENTIFIER,this,numberOfOnes(i))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.assignment,steps[i] = 1 + steps[ones])<SUB>20</SUB>>", "109": "<(IDENTIFIER,steps,steps[i] = 1 + steps[ones])<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.addition,1 + steps[ones])<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,steps[ones])<SUB>20</SUB>>", "115": "<(IDENTIFIER,ones,1 + steps[ones])<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= 10)<SUB>23</SUB>>", "119": "<(LITERAL,10,l &lt;= 10)<SUB>23</SUB>>", "121": "<(LOCAL,int ans: int)<SUB>24</SUB>>", "123": "<(IDENTIFIER,ans,int ans = 0)<SUB>24</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= max); i++),for (int i = 1; Some(i &lt;= max); i++))<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>25</SUB>>", "129": "<(LITERAL,1,int i = 1)<SUB>25</SUB>>", "131": "<(IDENTIFIER,i,i &lt;= max)<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.equals,steps[i] == k)<SUB>26</SUB>>", "139": "<(IDENTIFIER,steps,steps[i] == k)<SUB>26</SUB>>", "141": "<(IDENTIFIER,k,steps[i] == k)<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>27</SUB>>", "145": "<(println,System.out.println(ans))<SUB>30</SUB>>", "147": "<(IDENTIFIER,System,System.out.println(ans))<SUB>30</SUB>>", "149": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>30</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.assignment,int[][] C = binomial(max))<SUB>32</SUB>>", "155": "<(binomial,binomial(max))<SUB>32</SUB>>", "157": "<(IDENTIFIER,max,binomial(max))<SUB>32</SUB>>", "159": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>34</SUB>>", "161": "<(LITERAL,0,int ans = 0)<SUB>34</SUB>>", "163": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>35</SUB>>", "165": "<(LITERAL,0,int count = 0)<SUB>35</SUB>>", "167": "<(LOCAL,int i: int)<SUB>37</SUB>>", "169": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "171": "<(&lt;operator&gt;.lessThan,i &lt; l)<SUB>37</SUB>>", "173": "<(IDENTIFIER,l,i &lt; l)<SUB>37</SUB>>", "175": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "177": "<(CONTROL_STRUCTURE,if (n.charAt(i) == '1'),if (n.charAt(i) == '1'))<SUB>38</SUB>>", "179": "<(charAt,n.charAt(i))<SUB>38</SUB>>", "181": "<(IDENTIFIER,i,n.charAt(i))<SUB>38</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "185": "<(LOCAL,int j: int)<SUB>39</SUB>>", "187": "<(IDENTIFIER,j,int j = count)<SUB>39</SUB>>", "189": "<(&lt;operator&gt;.lessThan,j &lt; max)<SUB>39</SUB>>", "191": "<(IDENTIFIER,max,j &lt; max)<SUB>39</SUB>>", "193": "<(IDENTIFIER,j,j++)<SUB>39</SUB>>", "195": "<(CONTROL_STRUCTURE,if (steps[j] == k - 1),if (steps[j] == k - 1))<SUB>40</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,steps[j])<SUB>40</SUB>>", "199": "<(IDENTIFIER,j,steps[j] == k - 1)<SUB>40</SUB>>", "201": "<(IDENTIFIER,k,k - 1)<SUB>40</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "205": "<(IDENTIFIER,ans,ans = (ans + C[l - i - 1][j - count]) % mod)<SUB>41</SUB>>", "207": "<(&lt;operator&gt;.addition,ans + C[l - i - 1][j - count])<SUB>41</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,C[l - i - 1][j - count])<SUB>41</SUB>>", "211": "<(IDENTIFIER,C,ans + C[l - i - 1][j - count])<SUB>41</SUB>>", "213": "<(&lt;operator&gt;.subtraction,l - i)<SUB>41</SUB>>", "215": "<(IDENTIFIER,i,l - i)<SUB>41</SUB>>", "217": "<(&lt;operator&gt;.subtraction,j - count)<SUB>41</SUB>>", "219": "<(IDENTIFIER,count,j - count)<SUB>41</SUB>>", "221": "<(CONTROL_STRUCTURE,if (i == 0 &amp;&amp; k == 1),if (i == 0 &amp;&amp; k == 1))<SUB>42</SUB>>", "223": "<(&lt;operator&gt;.equals,i == 0)<SUB>42</SUB>>", "225": "<(LITERAL,0,i == 0)<SUB>42</SUB>>", "227": "<(IDENTIFIER,k,k == 1)<SUB>42</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "231": "<(IDENTIFIER,ans,ans = (ans + mod - 1) % mod)<SUB>43</SUB>>", "233": "<(&lt;operator&gt;.subtraction,ans + mod - 1)<SUB>43</SUB>>", "235": "<(IDENTIFIER,ans,ans + mod)<SUB>43</SUB>>", "237": "<(LITERAL,1,ans + mod - 1)<SUB>43</SUB>>", "239": "<(&lt;operator&gt;.postIncrement,count++)<SUB>47</SUB>>", "241": "<(LOCAL,int ones: int)<SUB>51</SUB>>", "243": "<(IDENTIFIER,ones,int ones = 0)<SUB>51</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; l); i++),for (int i = 0; Some(i &lt; l); i++))<SUB>52</SUB>>", "247": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>52</SUB>>", "249": "<(LITERAL,0,int i = 0)<SUB>52</SUB>>", "251": "<(IDENTIFIER,i,i &lt; l)<SUB>52</SUB>>", "253": "<(&lt;operator&gt;.postIncrement,i++)<SUB>52</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "257": "<(&lt;operator&gt;.equals,n.charAt(i) == '1')<SUB>53</SUB>>", "259": "<(IDENTIFIER,n,n.charAt(i))<SUB>53</SUB>>", "261": "<(LITERAL,'1',n.charAt(i) == '1')<SUB>53</SUB>>", "263": "<(&lt;operator&gt;.postIncrement,ones++)<SUB>54</SUB>>", "265": "<(CONTROL_STRUCTURE,if (steps[ones] == k - 1),if (steps[ones] == k - 1))<SUB>57</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,steps[ones])<SUB>57</SUB>>", "269": "<(IDENTIFIER,ones,steps[ones] == k - 1)<SUB>57</SUB>>", "271": "<(IDENTIFIER,k,k - 1)<SUB>57</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "275": "<(IDENTIFIER,ans,ans = (ans + 1) % mod)<SUB>58</SUB>>", "277": "<(&lt;operator&gt;.addition,ans + 1)<SUB>58</SUB>>", "279": "<(LITERAL,1,ans + 1)<SUB>58</SUB>>", "281": "<(println,System.out.println(ans))<SUB>61</SUB>>", "283": "<(IDENTIFIER,System,System.out.println(ans))<SUB>61</SUB>>", "285": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>61</SUB>>", "287": "<(MODIFIER,STATIC)>"}}