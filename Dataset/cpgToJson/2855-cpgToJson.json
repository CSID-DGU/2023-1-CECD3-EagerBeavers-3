{"edges": [["23", "24"], ["23", "25"], ["23", "180"], ["23", "181"], ["23", "182"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "44"], ["25", "47"], ["25", "58"], ["25", "59"], ["25", "65"], ["25", "66"], ["25", "73"], ["25", "74"], ["25", "81"], ["25", "178"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["44", "45"], ["44", "46"], ["47", "7"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "64"], ["62", "63"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["81", "94"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "101"], ["95", "133"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["102", "103"], ["102", "109"], ["102", "126"], ["103", "104"], ["103", "108"], ["104", "105"], ["104", "106"], ["104", "107"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "123"], ["114", "115"], ["114", "122"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["134", "135"], ["135", "136"], ["135", "141"], ["135", "158"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "155"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["158", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "175"], ["164", "165"], ["164", "174"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["178", "179"], ["26", "33"], ["29", "42"], ["40", "43"], ["43", "46"], ["44", "51"], ["47", "62"], ["59", "70"], ["66", "78"], ["74", "83"], ["178", "182"], ["28", "26"], ["42", "40"], ["46", "44"], ["61", "59"], ["68", "66"], ["76", "74"], ["82", "91"], ["82", "97"], ["31", "38"], ["34", "29"], ["49", "56"], ["52", "47"], ["62", "61"], ["70", "68"], ["78", "76"], ["83", "82"], ["88", "178"], ["33", "31"], ["36", "34"], ["51", "49"], ["54", "52"], ["89", "92"], ["92", "88"], ["96", "104"], ["96", "137"], ["38", "36"], ["56", "54"], ["91", "89"], ["97", "96"], ["103", "112"], ["103", "130"], ["109", "178"], ["104", "103"], ["110", "116"], ["113", "109"], ["127", "178"], ["136", "144"], ["136", "162"], ["141", "178"], ["112", "110"], ["114", "123"], ["123", "113"], ["128", "131"], ["131", "127"], ["137", "136"], ["142", "148"], ["145", "141"], ["159", "178"], ["115", "114"], ["130", "128"], ["144", "142"], ["146", "155"], ["155", "145"], ["160", "167"], ["163", "159"], ["116", "119"], ["119", "115"], ["147", "146"], ["162", "160"], ["164", "175"], ["175", "163"], ["148", "151"], ["151", "147"], ["165", "164"], ["166", "171"], ["171", "165"], ["167", "166"], ["23", "28"], ["24", "182"], ["26", "182"], ["34", "182"], ["34", "182"], ["34", "182"], ["29", "182"], ["40", "182"], ["43", "182"], ["43", "182"], ["44", "182"], ["49", "182"], ["52", "182"], ["52", "182"], ["47", "182"], ["59", "182"], ["62", "182"], ["61", "182"], ["59", "182"], ["59", "182"], ["68", "182"], ["66", "182"], ["66", "182"], ["76", "182"], ["76", "182"], ["74", "182"], ["74", "182"], ["83", "182"], ["83", "182"], ["82", "182"], ["82", "182"], ["97", "182"], ["96", "182"], ["96", "182"], ["136", "182"], ["136", "182"], ["159", "182"], ["166", "182"], ["165", "182"], ["165", "182"], ["164", "182"], ["163", "182"], ["175", "182"], ["163", "182"], ["159", "182"], ["141", "182"], ["147", "182"], ["147", "182"], ["146", "182"], ["145", "182"], ["155", "182"], ["145", "182"], ["141", "182"], ["104", "182"], ["104", "182"], ["103", "182"], ["103", "182"], ["127", "182"], ["127", "182"], ["127", "182"], ["109", "182"], ["115", "182"], ["115", "182"], ["114", "182"], ["113", "182"], ["123", "182"], ["113", "182"], ["109", "182"], ["88", "182"], ["88", "182"], ["88", "182"], ["178", "182"], ["178", "182"], ["104", "182"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "44"], ["61", "59"], ["61", "59"], ["68", "66"], ["68", "66"], ["76", "74"], ["76", "74"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "47"], ["23", "47"], ["49", "47"], ["52", "47"], ["47", "178"], ["23", "178"], ["23", "31"], ["23", "39"], ["23", "49"], ["23", "57"], ["62", "61"], ["23", "61"], ["23", "68"], ["59", "68"], ["68", "76"], ["23", "76"], ["59", "76"], ["83", "82"], ["83", "82"], ["23", "82"], ["31", "34"], ["23", "34"], ["49", "52"], ["23", "52"], ["29", "62"], ["23", "62"], ["74", "83"], ["23", "83"], ["66", "83"], ["52", "88"], ["92", "88"], ["23", "92"], ["97", "96"], ["97", "96"], ["23", "96"], ["83", "97"], ["23", "97"], ["83", "97"], ["104", "103"], ["104", "103"], ["104", "103"], ["23", "103"], ["52", "109"], ["104", "109"], ["23", "109"], ["23", "104"], ["97", "104"], ["97", "104"], ["104", "113"], ["23", "113"], ["52", "127"], ["131", "127"], ["137", "136"], ["137", "136"], ["23", "136"], ["52", "141"], ["137", "141"], ["23", "141"], ["104", "114"], ["23", "114"], ["23", "123"], ["104", "123"], ["23", "131"], ["97", "137"], ["23", "137"], ["137", "145"], ["23", "145"], ["52", "159"], ["137", "159"], ["23", "159"], ["104", "115"], ["23", "115"], ["137", "146"], ["23", "146"], ["23", "155"], ["137", "155"], ["137", "163"], ["23", "163"], ["104", "116"], ["23", "116"], ["23", "119"], ["104", "119"], ["137", "147"], ["23", "147"], ["137", "164"], ["23", "164"], ["23", "175"], ["137", "175"], ["137", "148"], ["23", "148"], ["23", "151"], ["137", "151"], ["137", "165"], ["23", "165"], ["137", "166"], ["23", "166"], ["23", "171"], ["137", "171"], ["137", "167"], ["23", "167"], ["82", "96"], ["82", "89"], ["82", "92"], ["82", "97"], ["82", "91"], ["82", "88"], ["96", "136"], ["96", "103"], ["96", "104"], ["96", "137"], ["103", "115"], ["103", "113"], ["103", "116"], ["103", "128"], ["103", "114"], ["103", "131"], ["103", "119"], ["103", "123"], ["103", "112"], ["103", "130"], ["103", "110"], ["103", "127"], ["103", "109"], ["136", "160"], ["136", "141"], ["136", "167"], ["136", "145"], ["136", "146"], ["136", "163"], ["136", "166"], ["136", "142"], ["136", "151"], ["136", "162"], ["136", "159"], ["136", "144"], ["136", "148"], ["136", "165"], ["136", "147"], ["136", "164"], ["136", "155"], ["136", "175"], ["136", "171"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,StringBuilder qq = new StringBuilder())<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,qq,new StringBuilder())<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "46": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "7": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "53": "<(IDENTIFIER,$obj3,new OutputStreamWriter(System.out))>", "55": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "57": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.assignment,String[] y = split(&quot; &quot;))<SUB>7</SUB>>", "61": "<(split,split(&quot; &quot;))<SUB>7</SUB>>", "63": "<(IDENTIFIER,in,readLine())<SUB>7</SUB>>", "65": "<(LOCAL,long n: long)<SUB>8</SUB>>", "67": "<(IDENTIFIER,n,long n = Long.parseLong(y[0]))<SUB>8</SUB>>", "69": "<(IDENTIFIER,Long,Long.parseLong(y[0]))<SUB>8</SUB>>", "71": "<(IDENTIFIER,y,Long.parseLong(y[0]))<SUB>8</SUB>>", "73": "<(LOCAL,long m: long)<SUB>9</SUB>>", "75": "<(IDENTIFIER,m,long m = Long.parseLong(y[1]))<SUB>9</SUB>>", "77": "<(IDENTIFIER,Long,Long.parseLong(y[1]))<SUB>9</SUB>>", "79": "<(IDENTIFIER,y,Long.parseLong(y[1]))<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,if (m - n &lt; 2),if (m - n &lt; 2))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.subtraction,m - n)<SUB>11</SUB>>", "85": "<(IDENTIFIER,n,m - n)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "91": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "93": "<(LITERAL,1,-1)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,if (m - n == 2),if (m - n == 2))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.subtraction,m - n)<SUB>13</SUB>>", "99": "<(IDENTIFIER,n,m - n)<SUB>13</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.notEquals,gcd(n, m) != 1)<SUB>15</SUB>>", "105": "<(IDENTIFIER,this,gcd(n, m))<SUB>15</SUB>>", "107": "<(IDENTIFIER,m,gcd(n, m))<SUB>15</SUB>>", "109": "<(println,System.out.println(n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2)))<SUB>17</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2)))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.addition,n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2))<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.addition,n + &quot; &quot; + (n + 1))<SUB>17</SUB>>", "117": "<(IDENTIFIER,n,n + &quot; &quot;)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.addition,n + 1)<SUB>17</SUB>>", "121": "<(LITERAL,1,n + 1)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.addition,n + 2)<SUB>17</SUB>>", "125": "<(LITERAL,2,n + 2)<SUB>17</SUB>>", "127": "<(println,System.out.println(-1))<SUB>20</SUB>>", "129": "<(IDENTIFIER,System,System.out.println(-1))<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "133": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "135": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.modulo,n % 2)<SUB>22</SUB>>", "139": "<(LITERAL,2,n % 2)<SUB>22</SUB>>", "141": "<(println,System.out.println(n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2)))<SUB>23</SUB>>", "143": "<(IDENTIFIER,System,System.out.println(n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2)))<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.addition,n + &quot; &quot; + (n + 1) + &quot; &quot; + (n + 2))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.addition,n + &quot; &quot; + (n + 1))<SUB>23</SUB>>", "149": "<(IDENTIFIER,n,n + &quot; &quot;)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.addition,n + 1)<SUB>23</SUB>>", "153": "<(LITERAL,1,n + 1)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.addition,n + 2)<SUB>23</SUB>>", "157": "<(LITERAL,2,n + 2)<SUB>23</SUB>>", "159": "<(println,System.out.println((n + 1) + &quot; &quot; + (n + 2) + &quot; &quot; + (n + 3)))<SUB>25</SUB>>", "161": "<(IDENTIFIER,System,System.out.println((n + 1) + &quot; &quot; + (n + 2) + &quot; &quot; + (n + 3)))<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.addition,(n + 1) + &quot; &quot; + (n + 2) + &quot; &quot; + (n + 3))<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.addition,(n + 1) + &quot; &quot; + (n + 2))<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.addition,n + 1)<SUB>25</SUB>>", "169": "<(LITERAL,1,n + 1)<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.addition,n + 2)<SUB>25</SUB>>", "173": "<(LITERAL,2,n + 2)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.addition,n + 3)<SUB>25</SUB>>", "177": "<(LITERAL,3,n + 3)<SUB>25</SUB>>", "179": "<(IDENTIFIER,out,close())<SUB>28</SUB>>", "181": "<(MODIFIER,STATIC)>"}}