{"edges": [["19", "21"], ["19", "167"], ["19", "168"], ["19", "169"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "70"], ["21", "73"], ["21", "74"], ["21", "77"], ["21", "78"], ["21", "81"], ["21", "82"], ["21", "86"], ["21", "87"], ["21", "91"], ["21", "135"], ["21", "162"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "63"], ["59", "69"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "67"], ["65", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "95"], ["91", "97"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "114"], ["98", "116"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "125"], ["117", "132"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "139"], ["135", "141"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["142", "143"], ["142", "158"], ["142", "160"], ["143", "144"], ["143", "151"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["160", "161"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["70", "74"], ["74", "78"], ["78", "84"], ["82", "89"], ["87", "92"], ["162", "169"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "70"], ["52", "49"], ["84", "82"], ["89", "87"], ["92", "95"], ["95", "103"], ["95", "136"], ["136", "139"], ["139", "147"], ["139", "165"], ["163", "162"], ["28", "26"], ["55", "52"], ["165", "163"], ["56", "62"], ["99", "114"], ["99", "121"], ["114", "95"], ["143", "158"], ["158", "139"], ["60", "65"], ["63", "55"], ["100", "99"], ["100", "110"], ["107", "99"], ["144", "143"], ["144", "154"], ["151", "143"], ["62", "60"], ["65", "67"], ["67", "63"], ["102", "100"], ["109", "107"], ["118", "128"], ["125", "132"], ["132", "95"], ["146", "144"], ["153", "151"], ["103", "106"], ["106", "102"], ["110", "113"], ["113", "109"], ["120", "118"], ["127", "125"], ["147", "150"], ["150", "146"], ["154", "157"], ["157", "153"], ["121", "124"], ["124", "120"], ["128", "131"], ["131", "127"], ["19", "24"], ["20", "169"], ["22", "169"], ["25", "169"], ["25", "169"], ["30", "169"], ["37", "169"], ["35", "169"], ["35", "169"], ["40", "169"], ["40", "169"], ["70", "169"], ["70", "169"], ["74", "169"], ["78", "169"], ["82", "169"], ["82", "169"], ["87", "169"], ["87", "169"], ["87", "169"], ["92", "169"], ["92", "169"], ["136", "169"], ["136", "169"], ["139", "169"], ["139", "169"], ["162", "169"], ["162", "169"], ["162", "169"], ["144", "169"], ["143", "169"], ["151", "169"], ["143", "169"], ["143", "169"], ["158", "169"], ["100", "169"], ["99", "169"], ["107", "169"], ["99", "169"], ["99", "169"], ["118", "169"], ["118", "169"], ["125", "169"], ["125", "169"], ["132", "169"], ["114", "169"], ["55", "169"], ["60", "169"], ["63", "169"], ["63", "169"], ["67", "169"], ["63", "169"], ["55", "169"], ["70", "169"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "74"], ["19", "78"], ["84", "82"], ["89", "87"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "70"], ["40", "70"], ["55", "70"], ["74", "162"], ["158", "162"], ["132", "162"], ["114", "162"], ["19", "162"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["60", "55"], ["63", "55"], ["19", "55"], ["19", "84"], ["19", "89"], ["78", "92"], ["19", "92"], ["35", "92"], ["92", "95"], ["19", "95"], ["95", "136"], ["19", "136"], ["49", "136"], ["136", "139"], ["19", "139"], ["19", "60"], ["19", "69"], ["100", "99"], ["100", "99"], ["107", "99"], ["107", "99"], ["74", "114"], ["132", "114"], ["19", "114"], ["144", "143"], ["144", "143"], ["151", "143"], ["151", "143"], ["99", "143"], ["74", "158"], ["132", "158"], ["114", "158"], ["19", "158"], ["60", "63"], ["19", "63"], ["65", "63"], ["67", "63"], ["82", "100"], ["118", "100"], ["19", "100"], ["87", "107"], ["125", "107"], ["19", "107"], ["100", "118"], ["107", "125"], ["19", "132"], ["82", "144"], ["100", "144"], ["118", "144"], ["19", "144"], ["87", "151"], ["107", "151"], ["125", "151"], ["19", "151"], ["37", "65"], ["67", "65"], ["19", "65"], ["65", "67"], ["19", "67"], ["49", "49"], ["49", "60"], ["49", "52"], ["49", "56"], ["49", "67"], ["49", "65"], ["49", "63"], ["49", "55"], ["49", "62"], ["95", "99"], ["95", "102"], ["95", "103"], ["95", "95"], ["95", "106"], ["95", "100"], ["139", "146"], ["139", "150"], ["139", "144"], ["139", "143"], ["139", "147"], ["139", "139"], ["139", "158"], ["99", "120"], ["99", "128"], ["99", "114"], ["99", "131"], ["99", "132"], ["99", "121"], ["99", "118"], ["99", "127"], ["99", "124"], ["99", "125"], ["100", "107"], ["100", "113"], ["100", "110"], ["100", "109"], ["144", "154"], ["144", "151"], ["144", "153"], ["144", "157"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY myScanner = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,myScanner,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,myScanner,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,Team[] queue: ANY)<SUB>6</SUB>>", "41": "<(IDENTIFIER,queue,ANY queue = new Team[n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new Team[n])<SUB>6</SUB>>", "45": "<(LOCAL,int i: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,queue[i] = new Team(myScanner.nextInt(), myScanner.nextInt()))<SUB>9</SUB>>", "57": "<(IDENTIFIER,queue,queue[i] = new Team(myScanner.nextInt(), myScanner.nextInt()))<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "63": "<(&lt;init&gt;,new Team(myScanner.nextInt(), myScanner.nextInt()))<SUB>9</SUB>>", "65": "<(nextInt,nextInt())<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "71": "<(IDENTIFIER,Arrays,sort(queue))<SUB>11</SUB>>", "73": "<(LOCAL,int counter: int)<SUB>13</SUB>>", "75": "<(IDENTIFIER,counter,int counter = 0)<SUB>13</SUB>>", "77": "<(LOCAL,int i: int)<SUB>14</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "81": "<(LOCAL,int p: int)<SUB>15</SUB>>", "83": "<(IDENTIFIER,p,int p = -1)<SUB>15</SUB>>", "85": "<(LITERAL,1,-1)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.assignment,int t = -1)<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "91": "<(CONTROL_STRUCTURE,for (; Some(i &lt; k); i++),for (; Some(i &lt; k); i++))<SUB>17</SUB>>", "93": "<(IDENTIFIER,i,i &lt; k)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.logicalAnd,p == queue[i].problems &amp;&amp; t == queue[i].penalty)<SUB>19</SUB>>", "101": "<(IDENTIFIER,p,p == queue[i].problems)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,queue[i])<SUB>19</SUB>>", "105": "<(IDENTIFIER,i,p == queue[i].problems)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.equals,t == queue[i].penalty)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,queue[i].penalty)<SUB>19</SUB>>", "111": "<(IDENTIFIER,queue,t == queue[i].penalty)<SUB>19</SUB>>", "113": "<(FIELD_IDENTIFIER,penalty,penalty)<SUB>19</SUB>>", "115": "<(IDENTIFIER,counter,counter++)<SUB>20</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "119": "<(IDENTIFIER,p,p = queue[i].problems)<SUB>23</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,queue[i])<SUB>23</SUB>>", "123": "<(IDENTIFIER,i,p = queue[i].problems)<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.assignment,t = queue[i].penalty)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,queue[i].penalty)<SUB>24</SUB>>", "129": "<(IDENTIFIER,queue,t = queue[i].penalty)<SUB>24</SUB>>", "131": "<(FIELD_IDENTIFIER,penalty,penalty)<SUB>24</SUB>>", "133": "<(IDENTIFIER,counter,counter = 1)<SUB>25</SUB>>", "135": "<(CONTROL_STRUCTURE,for (; Some(i &lt; n); i++),for (; Some(i &lt; n); i++))<SUB>28</SUB>>", "137": "<(IDENTIFIER,i,i &lt; n)<SUB>28</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.logicalAnd,p == queue[i].problems &amp;&amp; t == queue[i].penalty)<SUB>30</SUB>>", "145": "<(IDENTIFIER,p,p == queue[i].problems)<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,queue[i])<SUB>30</SUB>>", "149": "<(IDENTIFIER,i,p == queue[i].problems)<SUB>30</SUB>>", "151": "<(&lt;operator&gt;.equals,t == queue[i].penalty)<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,queue[i].penalty)<SUB>30</SUB>>", "155": "<(IDENTIFIER,queue,t == queue[i].penalty)<SUB>30</SUB>>", "157": "<(FIELD_IDENTIFIER,penalty,penalty)<SUB>30</SUB>>", "159": "<(IDENTIFIER,counter,counter++)<SUB>31</SUB>>", "161": "<(CONTROL_STRUCTURE,break;,break;)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "165": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "167": "<(MODIFIER,PUBLIC)>", "169": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}