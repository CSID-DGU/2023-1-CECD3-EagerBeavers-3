{"edges": [["21", "23"], ["21", "73"], ["21", "74"], ["21", "75"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "47"], ["23", "54"], ["23", "6"], ["23", "61"], ["23", "64"], ["23", "67"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "44"], ["42", "43"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "5"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["24", "31"], ["27", "42"], ["39", "51"], ["47", "58"], ["54", "63"], ["61", "64"], ["64", "70"], ["67", "75"], ["26", "24"], ["41", "39"], ["49", "47"], ["56", "54"], ["63", "61"], ["68", "71"], ["71", "67"], ["29", "36"], ["32", "27"], ["42", "41"], ["51", "49"], ["58", "56"], ["70", "68"], ["31", "29"], ["34", "32"], ["36", "34"], ["21", "26"], ["22", "75"], ["24", "75"], ["29", "75"], ["32", "75"], ["32", "75"], ["32", "75"], ["27", "75"], ["39", "75"], ["42", "75"], ["41", "75"], ["39", "75"], ["39", "75"], ["49", "75"], ["47", "75"], ["47", "75"], ["56", "75"], ["56", "75"], ["54", "75"], ["54", "75"], ["61", "75"], ["64", "75"], ["64", "75"], ["64", "75"], ["67", "75"], ["71", "75"], ["67", "75"], ["67", "75"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["49", "47"], ["49", "47"], ["56", "54"], ["56", "54"], ["21", "61"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["61", "64"], ["21", "64"], ["47", "64"], ["54", "64"], ["71", "67"], ["21", "29"], ["21", "37"], ["42", "41"], ["21", "41"], ["21", "49"], ["39", "49"], ["49", "56"], ["21", "56"], ["39", "56"], ["64", "71"], ["21", "71"], ["29", "32"], ["21", "32"], ["27", "42"], ["21", "42"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] in = split(&quot; &quot;))<SUB>4</SUB>>", "41": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "45": "<(LOCAL,long n: long)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,long n = Long.parseLong(in[0]))<SUB>5</SUB>>", "49": "<(parseLong,Long.parseLong(in[0]))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,in[0])<SUB>5</SUB>>", "53": "<(LITERAL,0,Long.parseLong(in[0]))<SUB>5</SUB>>", "55": "<(IDENTIFIER,s,long s = Long.parseLong(in[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,Long,Long.parseLong(in[1]))<SUB>5</SUB>>", "59": "<(IDENTIFIER,in,Long.parseLong(in[1]))<SUB>5</SUB>>", "6": "<(LOCAL,Solver solver: ANY)<SUB>6</SUB>>", "62": "<(IDENTIFIER,solver,ANY solver = new Solver(n, s))<SUB>6</SUB>>", "64": "<(&lt;init&gt;,new Solver(n, s))<SUB>6</SUB>>", "65": "<(IDENTIFIER,n,new Solver(n, s))<SUB>6</SUB>>", "67": "<(println,println(solver.solve()))<SUB>7</SUB>>", "69": "<(IDENTIFIER,System,println(solver.solve()))<SUB>7</SUB>>", "71": "<(solve,solve())<SUB>7</SUB>>", "73": "<(MODIFIER,PUBLIC)>", "75": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}