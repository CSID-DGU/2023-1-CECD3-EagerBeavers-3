{"edges": [["17", "19"], ["17", "351"], ["17", "352"], ["17", "353"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "36"], ["19", "37"], ["19", "41"], ["19", "45"], ["19", "60"], ["19", "61"], ["19", "68"], ["19", "69"], ["19", "81"], ["19", "123"], ["19", "132"], ["19", "305"], ["19", "306"], ["19", "309"], ["19", "310"], ["19", "317"], ["19", "342"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "75"], ["71", "78"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "91"], ["81", "93"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "110"], ["100", "112"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "122"], ["123", "124"], ["123", "131"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "153"], ["143", "155"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "166"], ["156", "168"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["168", "181"], ["169", "170"], ["169", "179"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["179", "180"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "191"], ["181", "198"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "200"], ["198", "207"], ["198", "273"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["217", "235"], ["217", "253"], ["218", "219"], ["218", "228"], ["219", "220"], ["219", "224"], ["220", "221"], ["220", "222"], ["220", "223"], ["224", "225"], ["224", "226"], ["224", "227"], ["228", "229"], ["229", "230"], ["229", "231"], ["231", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "246"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["240", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["247", "248"], ["247", "249"], ["249", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "266"], ["254", "255"], ["254", "260"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["260", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["267", "268"], ["267", "269"], ["269", "270"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "283"], ["274", "275"], ["274", "282"], ["275", "276"], ["275", "281"], ["276", "277"], ["276", "278"], ["278", "279"], ["278", "280"], ["283", "284"], ["283", "285"], ["283", "294"], ["285", "286"], ["285", "293"], ["286", "287"], ["286", "292"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "291"], ["294", "295"], ["294", "302"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["302", "303"], ["302", "304"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["317", "318"], ["317", "319"], ["317", "322"], ["317", "327"], ["317", "329"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["324", "325"], ["324", "326"], ["327", "328"], ["329", "330"], ["329", "331"], ["329", "336"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "335"], ["336", "337"], ["336", "338"], ["338", "339"], ["338", "340"], ["338", "341"], ["342", "343"], ["342", "346"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["20", "28"], ["23", "39"], ["37", "43"], ["41", "46"], ["61", "72"], ["69", "83"], ["123", "134"], ["306", "313"], ["310", "319"], ["342", "353"], ["22", "20"], ["39", "37"], ["43", "41"], ["46", "51"], ["46", "64"], ["63", "61"], ["71", "69"], ["83", "90"], ["86", "97"], ["86", "126"], ["91", "90"], ["124", "123"], ["134", "137"], ["137", "145"], ["137", "306"], ["140", "137"], ["312", "310"], ["319", "326"], ["322", "333"], ["322", "345"], ["327", "326"], ["343", "347"], ["346", "342"], ["26", "33"], ["29", "23"], ["51", "54"], ["54", "57"], ["57", "64"], ["64", "63"], ["72", "75"], ["75", "78"], ["78", "71"], ["88", "86"], ["95", "102"], ["125", "124"], ["313", "312"], ["324", "322"], ["331", "338"], ["336", "327"], ["345", "343"], ["347", "346"], ["28", "26"], ["31", "29"], ["90", "88"], ["97", "95"], ["102", "109"], ["105", "116"], ["105", "91"], ["110", "109"], ["126", "125"], ["145", "150"], ["148", "158"], ["148", "140"], ["153", "150"], ["326", "324"], ["333", "331"], ["338", "336"], ["33", "31"], ["107", "105"], ["114", "119"], ["119", "110"], ["150", "148"], ["109", "107"], ["116", "114"], ["158", "163"], ["161", "173"], ["161", "153"], ["166", "163"], ["163", "161"], ["170", "166"], ["170", "183"], ["183", "188"], ["186", "203"], ["186", "166"], ["191", "188"], ["171", "170"], ["188", "186"], ["193", "191"], ["200", "209"], ["273", "194"], ["172", "171"], ["194", "193"], ["202", "200"], ["209", "212"], ["212", "220"], ["212", "278"], ["215", "212"], ["274", "289"], ["283", "273"], ["173", "172"], ["203", "202"], ["275", "274"], ["285", "297"], ["294", "283"], ["219", "232"], ["219", "237"], ["236", "250"], ["236", "257"], ["254", "270"], ["254", "215"], ["276", "275"], ["286", "285"], ["295", "302"], ["302", "294"], ["220", "219"], ["220", "224"], ["224", "219"], ["229", "237"], ["237", "236"], ["237", "243"], ["240", "236"], ["247", "257"], ["255", "254"], ["255", "263"], ["260", "254"], ["267", "215"], ["278", "276"], ["287", "286"], ["296", "295"], ["231", "229"], ["243", "240"], ["249", "247"], ["257", "255"], ["263", "260"], ["269", "267"], ["289", "287"], ["297", "296"], ["232", "231"], ["250", "249"], ["270", "269"], ["17", "22"], ["18", "353"], ["20", "353"], ["23", "353"], ["26", "353"], ["29", "353"], ["29", "353"], ["29", "353"], ["23", "353"], ["37", "353"], ["43", "353"], ["41", "353"], ["41", "353"], ["46", "353"], ["51", "353"], ["54", "353"], ["57", "353"], ["57", "353"], ["61", "353"], ["61", "353"], ["69", "353"], ["71", "353"], ["71", "353"], ["69", "353"], ["69", "353"], ["83", "353"], ["86", "353"], ["86", "353"], ["86", "353"], ["123", "353"], ["123", "353"], ["134", "353"], ["137", "353"], ["137", "353"], ["306", "353"], ["306", "353"], ["310", "353"], ["310", "353"], ["310", "353"], ["319", "353"], ["322", "353"], ["322", "353"], ["322", "353"], ["342", "353"], ["347", "353"], ["347", "353"], ["346", "353"], ["346", "353"], ["342", "353"], ["342", "353"], ["331", "353"], ["338", "353"], ["338", "353"], ["336", "353"], ["336", "353"], ["327", "353"], ["145", "353"], ["148", "353"], ["148", "353"], ["148", "353"], ["140", "353"], ["158", "353"], ["161", "353"], ["161", "353"], ["153", "353"], ["170", "353"], ["170", "353"], ["183", "353"], ["186", "353"], ["186", "353"], ["200", "353"], ["200", "353"], ["200", "353"], ["209", "353"], ["212", "353"], ["212", "353"], ["273", "353"], ["283", "353"], ["294", "353"], ["294", "353"], ["283", "353"], ["273", "353"], ["273", "353"], ["193", "353"], ["191", "353"], ["191", "353"], ["220", "353"], ["219", "353"], ["224", "353"], ["219", "353"], ["219", "353"], ["229", "353"], ["231", "353"], ["229", "353"], ["236", "353"], ["240", "353"], ["240", "353"], ["236", "353"], ["236", "353"], ["247", "353"], ["249", "353"], ["247", "353"], ["255", "353"], ["254", "353"], ["260", "353"], ["260", "353"], ["254", "353"], ["254", "353"], ["267", "353"], ["269", "353"], ["267", "353"], ["215", "353"], ["166", "353"], ["95", "353"], ["95", "353"], ["102", "353"], ["105", "353"], ["105", "353"], ["105", "353"], ["91", "353"], ["114", "353"], ["119", "353"], ["119", "353"], ["110", "353"], ["119", "353"], ["302", "353"], ["17", "18"], ["17", "20"], ["39", "37"], ["43", "41"], ["64", "61"], ["64", "61"], ["17", "61"], ["71", "69"], ["71", "69"], ["17", "123"], ["61", "306"], ["170", "306"], ["119", "306"], ["17", "306"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "83"], ["17", "134"], ["17", "319"], ["346", "342"], ["346", "342"], ["17", "26"], ["17", "34"], ["17", "39"], ["39", "43"], ["17", "43"], ["41", "46"], ["17", "46"], ["37", "46"], ["46", "51"], ["17", "51"], ["46", "54"], ["17", "54"], ["51", "57"], ["17", "57"], ["64", "63"], ["64", "63"], ["17", "63"], ["64", "71"], ["17", "71"], ["75", "71"], ["75", "71"], ["78", "71"], ["78", "71"], ["83", "86"], ["91", "86"], ["17", "86"], ["69", "86"], ["86", "91"], ["17", "91"], ["26", "95"], ["69", "95"], ["114", "95"], ["134", "137"], ["140", "137"], ["17", "137"], ["64", "137"], ["137", "140"], ["17", "140"], ["319", "322"], ["327", "322"], ["17", "322"], ["310", "322"], ["322", "327"], ["17", "327"], ["26", "331"], ["310", "331"], ["95", "331"], ["114", "331"], ["69", "331"], ["95", "331"], ["338", "336"], ["338", "336"], ["338", "336"], ["347", "346"], ["347", "346"], ["306", "346"], ["336", "346"], ["17", "346"], ["26", "29"], ["17", "29"], ["46", "64"], ["57", "64"], ["17", "64"], ["46", "64"], ["54", "64"], ["64", "72"], ["17", "72"], ["17", "75"], ["64", "75"], ["17", "78"], ["75", "78"], ["17", "102"], ["17", "145"], ["137", "347"], ["17", "347"], ["78", "347"], ["150", "347"], ["102", "105"], ["110", "105"], ["17", "105"], ["95", "105"], ["105", "110"], ["17", "110"], ["95", "114"], ["95", "114"], ["145", "148"], ["153", "148"], ["17", "148"], ["150", "148"], ["150", "148"], ["148", "153"], ["193", "153"], ["17", "153"], ["283", "338"], ["17", "338"], ["306", "338"], ["336", "338"], ["331", "338"], ["17", "119"], ["114", "119"], ["61", "119"], ["17", "150"], ["78", "150"], ["163", "150"], ["17", "158"], ["158", "161"], ["166", "161"], ["17", "161"], ["163", "161"], ["163", "161"], ["161", "166"], ["220", "166"], ["17", "166"], ["17", "163"], ["150", "163"], ["188", "163"], ["148", "183"], ["193", "183"], ["17", "183"], ["193", "191"], ["193", "191"], ["61", "170"], ["119", "170"], ["17", "170"], ["183", "186"], ["191", "186"], ["17", "186"], ["188", "186"], ["188", "186"], ["202", "200"], ["202", "200"], ["283", "273"], ["283", "273"], ["283", "273"], ["17", "188"], ["163", "188"], ["212", "188"], ["302", "193"], ["17", "193"], ["148", "193"], ["17", "209"], ["302", "194"], ["17", "194"], ["203", "202"], ["203", "202"], ["17", "202"], ["209", "212"], ["215", "212"], ["17", "212"], ["203", "212"], ["257", "212"], ["255", "215"], ["270", "215"], ["17", "215"], ["17", "283"], ["273", "283"], ["170", "283"], ["302", "283"], ["302", "283"], ["17", "203"], ["188", "203"], ["170", "294"], ["302", "294"], ["302", "294"], ["220", "219"], ["220", "219"], ["220", "219"], ["224", "219"], ["224", "219"], ["224", "219"], ["231", "229"], ["237", "236"], ["237", "236"], ["240", "236"], ["240", "236"], ["240", "236"], ["249", "247"], ["255", "254"], ["255", "254"], ["260", "254"], ["260", "254"], ["260", "254"], ["269", "267"], ["17", "302"], ["186", "302"], ["224", "302"], ["240", "302"], ["260", "302"], ["43", "220"], ["224", "220"], ["240", "220"], ["260", "220"], ["17", "220"], ["161", "220"], ["212", "220"], ["220", "224"], ["17", "224"], ["186", "224"], ["240", "224"], ["260", "224"], ["220", "224"], ["200", "229"], ["247", "229"], ["267", "229"], ["17", "229"], ["220", "237"], ["224", "237"], ["232", "237"], ["17", "237"], ["220", "240"], ["224", "240"], ["17", "240"], ["186", "240"], ["224", "240"], ["260", "240"], ["243", "240"], ["243", "240"], ["200", "247"], ["229", "247"], ["267", "247"], ["17", "247"], ["237", "255"], ["243", "255"], ["250", "255"], ["17", "255"], ["257", "255"], ["257", "255"], ["220", "260"], ["224", "260"], ["240", "260"], ["17", "260"], ["186", "260"], ["224", "260"], ["240", "260"], ["255", "260"], ["200", "267"], ["229", "267"], ["247", "267"], ["17", "267"], ["137", "278"], ["17", "278"], ["232", "231"], ["232", "231"], ["237", "243"], ["17", "243"], ["250", "249"], ["250", "249"], ["212", "257"], ["17", "257"], ["255", "263"], ["17", "263"], ["270", "269"], ["270", "269"], ["17", "289"], ["137", "289"], ["17", "232"], ["220", "232"], ["224", "232"], ["17", "250"], ["237", "250"], ["243", "250"], ["17", "270"], ["255", "270"], ["46", "54"], ["46", "51"], ["46", "57"], ["86", "102"], ["86", "95"], ["86", "88"], ["86", "86"], ["86", "109"], ["86", "107"], ["86", "97"], ["86", "91"], ["86", "90"], ["86", "105"], ["137", "150"], ["137", "148"], ["137", "140"], ["137", "145"], ["137", "137"], ["322", "326"], ["322", "338"], ["322", "322"], ["322", "324"], ["322", "336"], ["322", "333"], ["322", "327"], ["322", "331"], ["105", "114"], ["105", "116"], ["105", "109"], ["105", "107"], ["105", "119"], ["105", "105"], ["105", "110"], ["148", "161"], ["148", "163"], ["148", "150"], ["148", "148"], ["148", "158"], ["148", "153"], ["161", "161"], ["161", "163"], ["161", "170"], ["161", "172"], ["161", "173"], ["161", "171"], ["161", "166"], ["170", "188"], ["170", "186"], ["170", "183"], ["186", "188"], ["186", "209"], ["186", "283"], ["186", "302"], ["186", "194"], ["186", "276"], ["186", "186"], ["186", "202"], ["186", "296"], ["186", "274"], ["186", "200"], ["186", "278"], ["186", "297"], ["186", "273"], ["186", "275"], ["186", "191"], ["186", "285"], ["186", "289"], ["186", "212"], ["186", "286"], ["186", "295"], ["186", "287"], ["186", "193"], ["186", "294"], ["186", "203"], ["212", "215"], ["212", "236"], ["212", "237"], ["212", "254"], ["212", "257"], ["212", "255"], ["212", "212"], ["212", "220"], ["212", "219"], ["219", "229"], ["219", "232"], ["219", "231"], ["236", "247"], ["236", "249"], ["236", "250"], ["254", "269"], ["254", "267"], ["254", "270"], ["220", "224"], ["237", "240"], ["237", "243"], ["255", "260"], ["255", "263"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,reader,reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(LOCAL,int height: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int height = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int width = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(CONTROL_STRUCTURE,if (width &gt; height),if (width &gt; height))<SUB>5</SUB>>", "47": "<(IDENTIFIER,width,width &gt; height)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int t = width)<SUB>6</SUB>>", "53": "<(IDENTIFIER,width,int t = width)<SUB>6</SUB>>", "55": "<(IDENTIFIER,width,width = height)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,height = t)<SUB>8</SUB>>", "59": "<(IDENTIFIER,t,height = t)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int INF = height * width + 10)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.addition,height * width + 10)<SUB>11</SUB>>", "65": "<(IDENTIFIER,height,height * width)<SUB>11</SUB>>", "67": "<(LITERAL,10,height * width + 10)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[height + 1][1 &lt;&lt; width][1 &lt;&lt; width])<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.alloc,new int[height + 1][1 &lt;&lt; width][1 &lt;&lt; width])>", "73": "<(IDENTIFIER,height,height + 1)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; width)<SUB>12</SUB>>", "77": "<(IDENTIFIER,width,1 &lt;&lt; width)<SUB>12</SUB>>", "79": "<(LITERAL,1,1 &lt;&lt; width)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "83": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>13</SUB>>", "85": "<(LITERAL,0,int $idx0 = 0)<SUB>13</SUB>>", "87": "<(IDENTIFIER,$idx0,$idx0 &lt; dp.length)>", "89": "<(IDENTIFIER,dp,$idx0 &lt; dp.length)>", "91": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>13</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>13</SUB>>", "99": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "101": "<(LOCAL,$idx1: int)<SUB>14</SUB>>", "103": "<(IDENTIFIER,$idx1,int $idx1 = 0)>", "105": "<(&lt;operator&gt;.lessThan,$idx1 &lt; ints.length)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,ints.length)<SUB>14</SUB>>", "109": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "111": "<(IDENTIFIER,$idx1,$idx1++)>", "113": "<(LOCAL,anInt: int[])<SUB>14</SUB>>", "115": "<(IDENTIFIER,anInt,&lt;empty&gt;)>", "117": "<(IDENTIFIER,ints,&lt;empty&gt;)>", "119": "<(fill,fill(anInt, INF))<SUB>15</SUB>>", "121": "<(IDENTIFIER,anInt,fill(anInt, INF))<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.assignment,dp[0][0][0] = 0)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>19</SUB>>", "127": "<(IDENTIFIER,dp,dp[0][0][0] = 0)<SUB>19</SUB>>", "129": "<(LITERAL,0,dp[0][0][0] = 0)<SUB>19</SUB>>", "131": "<(LITERAL,0,dp[0][0][0] = 0)<SUB>19</SUB>>", "133": "<(LOCAL,int r: int)<SUB>20</SUB>>", "135": "<(IDENTIFIER,r,int r = 0)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.lessThan,r &lt; height)<SUB>20</SUB>>", "139": "<(IDENTIFIER,height,r &lt; height)<SUB>20</SUB>>", "141": "<(IDENTIFIER,r,++r)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int uncovered = 0; Some(uncovered &lt; (1 &lt;&lt; width)); ++uncovered),for (int uncovered = 0; Some(uncovered &lt; (1 &lt;&lt; width)); ++uncovered))<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.assignment,int uncovered = 0)<SUB>21</SUB>>", "147": "<(LITERAL,0,int uncovered = 0)<SUB>21</SUB>>", "149": "<(IDENTIFIER,uncovered,uncovered &lt; (1 &lt;&lt; width))<SUB>21</SUB>>", "151": "<(LITERAL,1,1 &lt;&lt; width)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.preIncrement,++uncovered)<SUB>21</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "157": "<(LOCAL,int mask: int)<SUB>22</SUB>>", "159": "<(IDENTIFIER,mask,int mask = 0)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; width))<SUB>22</SUB>>", "163": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; width)<SUB>22</SUB>>", "165": "<(IDENTIFIER,width,1 &lt;&lt; width)<SUB>22</SUB>>", "167": "<(IDENTIFIER,mask,++mask)<SUB>22</SUB>>", "169": "<(CONTROL_STRUCTURE,if (dp[r][uncovered][mask] == INF),if (dp[r][uncovered][mask] == INF))<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[r][uncovered][mask])<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>23</SUB>>", "175": "<(IDENTIFIER,r,dp[r][uncovered][mask] == INF)<SUB>23</SUB>>", "177": "<(IDENTIFIER,mask,dp[r][uncovered][mask] == INF)<SUB>23</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int curMask = uncovered; Some(curMask &lt; (1 &lt;&lt; width)); curMask = (curMask + 1) | uncovered),for (int curMask = uncovered; Some(curMask &lt; (1 &lt;&lt; width)); curMask = (curMask + 1) | uncovered))<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.assignment,int curMask = uncovered)<SUB>26</SUB>>", "185": "<(IDENTIFIER,uncovered,int curMask = uncovered)<SUB>26</SUB>>", "187": "<(IDENTIFIER,curMask,curMask &lt; (1 &lt;&lt; width))<SUB>26</SUB>>", "189": "<(LITERAL,1,1 &lt;&lt; width)<SUB>26</SUB>>", "191": "<(&lt;operator&gt;.assignment,curMask = (curMask + 1) | uncovered)<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.or,(curMask + 1) | uncovered)<SUB>26</SUB>>", "195": "<(IDENTIFIER,curMask,curMask + 1)<SUB>26</SUB>>", "197": "<(IDENTIFIER,uncovered,(curMask + 1) | uncovered)<SUB>26</SUB>>", "199": "<(LOCAL,int curUncovered: int)<SUB>27</SUB>>", "201": "<(IDENTIFIER,curUncovered,int curUncovered = (1 &lt;&lt; width) - 1)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; width)<SUB>27</SUB>>", "205": "<(IDENTIFIER,width,1 &lt;&lt; width)<SUB>27</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; width); ++i),for (int i = 0; Some(i &lt; width); ++i))<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "211": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "213": "<(IDENTIFIER,i,i &lt; width)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.preIncrement,++i)<SUB>28</SUB>>", "217": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "219": "<(&lt;operator&gt;.logicalOr,hasBit(mask, i) || hasBit(curMask, i))<SUB>29</SUB>>", "221": "<(IDENTIFIER,this,hasBit(mask, i))<SUB>29</SUB>>", "223": "<(IDENTIFIER,i,hasBit(mask, i))<SUB>29</SUB>>", "225": "<(IDENTIFIER,this,hasBit(curMask, i))<SUB>29</SUB>>", "227": "<(IDENTIFIER,i,hasBit(curMask, i))<SUB>29</SUB>>", "229": "<(&lt;operators&gt;.assignmentAnd,curUncovered &amp;= ~(1 &lt;&lt; i))<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.not,~(1 &lt;&lt; i))<SUB>30</SUB>>", "233": "<(LITERAL,1,1 &lt;&lt; i)<SUB>30</SUB>>", "235": "<(CONTROL_STRUCTURE,if (i &gt; 0 &amp;&amp; hasBit(curMask, i - 1)),if (i &gt; 0 &amp;&amp; hasBit(curMask, i - 1)))<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>32</SUB>>", "239": "<(LITERAL,0,i &gt; 0)<SUB>32</SUB>>", "241": "<(IDENTIFIER,this,hasBit(curMask, i - 1))<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>32</SUB>>", "245": "<(LITERAL,1,i - 1)<SUB>32</SUB>>", "247": "<(&lt;operators&gt;.assignmentAnd,curUncovered &amp;= ~(1 &lt;&lt; i))<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.not,~(1 &lt;&lt; i))<SUB>33</SUB>>", "251": "<(LITERAL,1,1 &lt;&lt; i)<SUB>33</SUB>>", "253": "<(CONTROL_STRUCTURE,if (i &lt; width - 1 &amp;&amp; hasBit(curMask, i + 1)),if (i &lt; width - 1 &amp;&amp; hasBit(curMask, i + 1)))<SUB>35</SUB>>", "255": "<(&lt;operator&gt;.lessThan,i &lt; width - 1)<SUB>35</SUB>>", "257": "<(&lt;operator&gt;.subtraction,width - 1)<SUB>35</SUB>>", "259": "<(LITERAL,1,width - 1)<SUB>35</SUB>>", "261": "<(IDENTIFIER,this,hasBit(curMask, i + 1))<SUB>35</SUB>>", "263": "<(&lt;operator&gt;.addition,i + 1)<SUB>35</SUB>>", "265": "<(LITERAL,1,i + 1)<SUB>35</SUB>>", "267": "<(&lt;operators&gt;.assignmentAnd,curUncovered &amp;= ~(1 &lt;&lt; i))<SUB>36</SUB>>", "269": "<(&lt;operator&gt;.not,~(1 &lt;&lt; i))<SUB>36</SUB>>", "271": "<(LITERAL,1,1 &lt;&lt; i)<SUB>36</SUB>>", "273": "<(&lt;operator&gt;.assignment,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>39</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,dp[r + 1][curUncovered])<SUB>39</SUB>>", "277": "<(IDENTIFIER,dp,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>39</SUB>>", "279": "<(IDENTIFIER,r,r + 1)<SUB>39</SUB>>", "281": "<(IDENTIFIER,curUncovered,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>39</SUB>>", "283": "<(min,Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>39</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dp[r + 1][curUncovered][curMask])<SUB>39</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,dp[r + 1])<SUB>39</SUB>>", "289": "<(&lt;operator&gt;.addition,r + 1)<SUB>39</SUB>>", "291": "<(LITERAL,1,r + 1)<SUB>39</SUB>>", "293": "<(IDENTIFIER,curMask,Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>39</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dp[r][uncovered][mask])<SUB>39</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>39</SUB>>", "299": "<(IDENTIFIER,r,dp[r][uncovered][mask] + Integer.bitCount(curMask))<SUB>39</SUB>>", "301": "<(IDENTIFIER,mask,dp[r][uncovered][mask] + Integer.bitCount(curMask))<SUB>39</SUB>>", "303": "<(IDENTIFIER,Integer,Integer.bitCount(curMask))<SUB>39</SUB>>", "305": "<(LOCAL,int res: int)<SUB>45</SUB>>", "307": "<(IDENTIFIER,res,int res = INF)<SUB>45</SUB>>", "309": "<(LOCAL,$iterLocal0: int[])<SUB>46</SUB>>", "311": "<(IDENTIFIER,$iterLocal0,)<SUB>46</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,dp[height])<SUB>46</SUB>>", "315": "<(IDENTIFIER,height,)<SUB>46</SUB>>", "317": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "319": "<(&lt;operator&gt;.assignment,int $idx2 = 0)<SUB>46</SUB>>", "321": "<(LITERAL,0,int $idx2 = 0)<SUB>46</SUB>>", "323": "<(IDENTIFIER,$idx2,$idx2 &lt; $iterLocal0.length)>", "325": "<(IDENTIFIER,$iterLocal0,$idx2 &lt; $iterLocal0.length)>", "327": "<(&lt;operator&gt;.postIncrement,$idx2++)<SUB>46</SUB>>", "329": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "331": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>46</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>46</SUB>>", "335": "<(IDENTIFIER,$idx2,&lt;empty&gt;)>", "337": "<(IDENTIFIER,res,res = Math.min(res, x))<SUB>46</SUB>>", "339": "<(IDENTIFIER,Math,Math.min(res, x))<SUB>46</SUB>>", "341": "<(IDENTIFIER,x,Math.min(res, x))<SUB>46</SUB>>", "343": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>48</SUB>>", "345": "<(FIELD_IDENTIFIER,out,out)<SUB>48</SUB>>", "347": "<(&lt;operator&gt;.multiplication,height * width)<SUB>48</SUB>>", "349": "<(IDENTIFIER,width,height * width)<SUB>48</SUB>>", "351": "<(MODIFIER,PUBLIC)>", "353": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}