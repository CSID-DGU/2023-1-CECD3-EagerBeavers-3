{"edges": [["19", "20"], ["19", "21"], ["19", "136"], ["19", "137"], ["19", "138"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "41"], ["21", "49"], ["21", "54"], ["21", "84"], ["21", "90"], ["21", "91"], ["21", "94"], ["21", "99"], ["21", "101"], ["21", "102"], ["21", "109"], ["21", "135"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["36", "37"], ["36", "40"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "127"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "131"], ["127", "132"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["22", "28"], ["25", "31"], ["29", "37"], ["33", "45"], ["41", "51"], ["49", "56"], ["84", "91"], ["91", "95"], ["94", "99"], ["99", "105"], ["102", "111"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["43", "41"], ["51", "49"], ["56", "59"], ["59", "67"], ["59", "87"], ["62", "59"], ["86", "84"], ["95", "94"], ["104", "102"], ["111", "114"], ["114", "124"], ["114", "138"], ["117", "114"], ["28", "26"], ["36", "35"], ["44", "43"], ["87", "86"], ["105", "104"], ["120", "130"], ["127", "117"], ["37", "36"], ["45", "44"], ["67", "70"], ["70", "78"], ["70", "62"], ["73", "70"], ["122", "120"], ["128", "132"], ["132", "127"], ["76", "73"], ["124", "122"], ["130", "128"], ["77", "82"], ["82", "76"], ["78", "77"], ["19", "24"], ["20", "138"], ["22", "138"], ["25", "138"], ["25", "138"], ["31", "138"], ["29", "138"], ["29", "138"], ["33", "138"], ["33", "138"], ["33", "138"], ["43", "138"], ["41", "138"], ["41", "138"], ["49", "138"], ["49", "138"], ["49", "138"], ["84", "138"], ["84", "138"], ["91", "138"], ["91", "138"], ["94", "138"], ["94", "138"], ["99", "138"], ["102", "138"], ["104", "138"], ["102", "138"], ["102", "138"], ["111", "138"], ["114", "138"], ["114", "138"], ["114", "138"], ["120", "138"], ["122", "138"], ["122", "138"], ["120", "138"], ["120", "138"], ["127", "138"], ["127", "138"], ["127", "138"], ["117", "138"], ["67", "138"], ["70", "138"], ["70", "138"], ["62", "138"], ["76", "138"], ["82", "138"], ["76", "138"], ["76", "138"], ["73", "138"], ["84", "138"], ["41", "138"], ["99", "138"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["43", "41"], ["51", "49"], ["86", "84"], ["19", "91"], ["19", "94"], ["104", "102"], ["104", "102"], ["19", "135"], ["22", "25"], ["19", "25"], ["19", "56"], ["19", "99"], ["19", "111"], ["25", "31"], ["19", "31"], ["37", "35"], ["37", "35"], ["19", "35"], ["45", "43"], ["45", "43"], ["19", "43"], ["45", "51"], ["19", "51"], ["56", "59"], ["62", "59"], ["19", "59"], ["51", "59"], ["70", "59"], ["59", "62"], ["19", "62"], ["87", "86"], ["87", "86"], ["105", "104"], ["105", "104"], ["19", "104"], ["111", "114"], ["117", "114"], ["19", "114"], ["105", "114"], ["124", "117"], ["19", "117"], ["122", "120"], ["122", "120"], ["37", "36"], ["37", "36"], ["19", "36"], ["45", "44"], ["45", "44"], ["19", "44"], ["19", "67"], ["19", "87"], ["59", "87"], ["19", "105"], ["87", "105"], ["19", "127"], ["33", "127"], ["19", "37"], ["29", "37"], ["19", "45"], ["37", "45"], ["67", "70"], ["73", "70"], ["19", "70"], ["59", "70"], ["70", "73"], ["19", "73"], ["82", "76"], ["102", "122"], ["19", "122"], ["124", "122"], ["124", "122"], ["19", "124"], ["114", "124"], ["31", "82"], ["19", "82"], ["59", "67"], ["59", "70"], ["59", "59"], ["59", "62"], ["114", "120"], ["114", "122"], ["114", "128"], ["114", "130"], ["114", "114"], ["114", "132"], ["114", "117"], ["114", "127"], ["114", "124"], ["70", "73"], ["70", "77"], ["70", "70"], ["70", "76"], ["70", "82"], ["70", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>4</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>4</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>4</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "31": "<(nextInt,nextInt())<SUB>5</SUB>>", "33": "<(&lt;operator&gt;.assignment,m = new double[(1 &lt;&lt; n) + 1])<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.alloc,new double[(1 &lt;&lt; n) + 1])>", "37": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>6</SUB>>", "39": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,vis = new boolean[(1 &lt;&lt; n) + 1])<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.alloc,new boolean[(1 &lt;&lt; n) + 1])>", "45": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>7</SUB>>", "47": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,a = new double[n][n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new double[n][n])>", "53": "<(IDENTIFIER,n,new double[n][n])<SUB>8</SUB>>", "55": "<(LOCAL,int i: int)<SUB>10</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>15</SUB>>", "79": "<(IDENTIFIER,a,a[i][j] = nextDouble())<SUB>15</SUB>>", "81": "<(IDENTIFIER,j,a[i][j] = nextDouble())<SUB>15</SUB>>", "83": "<(IDENTIFIER,sc,nextDouble())<SUB>15</SUB>>", "85": "<(IDENTIFIER,s,s = new double[1 &lt;&lt; n])<SUB>19</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "89": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.assignment,int perm = 0)<SUB>20</SUB>>", "93": "<(LITERAL,0,int perm = 0)<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,m[0])<SUB>21</SUB>>", "97": "<(LITERAL,0,m[0] = 1)<SUB>21</SUB>>", "99": "<(p,p())<SUB>22</SUB>>", "101": "<(LOCAL,int c: int)<SUB>26</SUB>>", "103": "<(IDENTIFIER,c,int c = (1 &lt;&lt; n) - 1)<SUB>26</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>26</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>26</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "115": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "121": "<(IDENTIFIER,perm,perm = c - (1 &lt;&lt; i))<SUB>29</SUB>>", "123": "<(IDENTIFIER,c,c - (1 &lt;&lt; i))<SUB>29</SUB>>", "125": "<(LITERAL,1,1 &lt;&lt; i)<SUB>29</SUB>>", "127": "<(printf,printf(&quot;%.6f &quot;, m[perm]))<SUB>31</SUB>>", "129": "<(IDENTIFIER,System,printf(&quot;%.6f &quot;, m[perm]))<SUB>31</SUB>>", "131": "<(LITERAL,&quot;%.6f &quot;,printf(&quot;%.6f &quot;, m[perm]))<SUB>31</SUB>>", "133": "<(IDENTIFIER,m,printf(&quot;%.6f &quot;, m[perm]))<SUB>31</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "137": "<(MODIFIER,STATIC)>"}}