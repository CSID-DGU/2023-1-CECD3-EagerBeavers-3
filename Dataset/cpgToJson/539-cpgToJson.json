{"edges": [["19", "21"], ["19", "91"], ["19", "92"], ["19", "93"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "55"], ["21", "56"], ["21", "60"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["26", "31"], ["26", "38"], ["26", "40"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "37"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["40", "41"], ["40", "48"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "76"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "80"], ["76", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["22", "25"], ["25", "28"], ["56", "62"], ["24", "22"], ["28", "34"], ["31", "45"], ["31", "58"], ["38", "34"], ["58", "56"], ["62", "65"], ["65", "93"], ["65", "74"], ["68", "65"], ["32", "31"], ["41", "52"], ["48", "38"], ["72", "77"], ["34", "32"], ["43", "41"], ["50", "48"], ["74", "72"], ["77", "83"], ["77", "89"], ["80", "68"], ["45", "43"], ["52", "50"], ["81", "80"], ["86", "68"], ["83", "81"], ["87", "86"], ["89", "87"], ["19", "24"], ["20", "93"], ["22", "93"], ["25", "93"], ["25", "93"], ["28", "93"], ["32", "93"], ["31", "93"], ["31", "93"], ["58", "93"], ["56", "93"], ["56", "93"], ["62", "93"], ["65", "93"], ["65", "93"], ["65", "93"], ["68", "93"], ["38", "93"], ["19", "20"], ["19", "22"], ["58", "56"], ["22", "25"], ["19", "25"], ["19", "28"], ["19", "62"], ["32", "31"], ["32", "31"], ["19", "31"], ["52", "38"], ["19", "38"], ["19", "58"], ["62", "65"], ["68", "65"], ["19", "65"], ["56", "65"], ["65", "68"], ["19", "68"], ["74", "72"], ["19", "32"], ["34", "32"], ["25", "41"], ["48", "41"], ["19", "41"], ["43", "41"], ["43", "41"], ["41", "48"], ["19", "48"], ["50", "48"], ["50", "48"], ["28", "34"], ["38", "34"], ["19", "34"], ["19", "43"], ["45", "43"], ["19", "50"], ["52", "50"], ["58", "74"], ["19", "74"], ["25", "77"], ["48", "77"], ["19", "77"], ["72", "77"], ["86", "80"], ["19", "80"], ["34", "45"], ["19", "45"], ["45", "52"], ["19", "52"], ["80", "86"], ["19", "86"], ["31", "34"], ["31", "48"], ["31", "32"], ["31", "52"], ["31", "38"], ["31", "41"], ["31", "45"], ["31", "50"], ["31", "31"], ["31", "43"], ["65", "68"], ["65", "77"], ["65", "72"], ["65", "74"], ["65", "65"], ["77", "80"], ["77", "83"], ["77", "89"], ["77", "81"], ["77", "87"], ["77", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY poss = new HashSet&lt;&gt;())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new HashSet&lt;&gt;())<SUB>3</SUB>>", "3": "<(IDENTIFIER,poss,new HashSet&lt;&gt;())<SUB>3</SUB>>", "27": "<(LOCAL,int i: int)<SUB>4</SUB>>", "29": "<(IDENTIFIER,i,int i = 1)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.lessEqualsThan,2 * (i * i) &lt;= 1000000000)<SUB>4</SUB>>", "33": "<(LITERAL,2,2 * (i * i))<SUB>4</SUB>>", "35": "<(IDENTIFIER,i,i * i)<SUB>4</SUB>>", "37": "<(LITERAL,1000000000,2 * (i * i) &lt;= 1000000000)<SUB>4</SUB>>", "39": "<(IDENTIFIER,i,++i)<SUB>4</SUB>>", "41": "<(add,add(2 * (i * i)))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.multiplication,2 * (i * i))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.multiplication,i * i)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,i * i)<SUB>5</SUB>>", "49": "<(IDENTIFIER,poss,add(4 * (i * i)))<SUB>6</SUB>>", "51": "<(LITERAL,4,4 * (i * i))<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i * i)<SUB>6</SUB>>", "55": "<(LOCAL,int t: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,t,int t = si())<SUB>8</SUB>>", "59": "<(IDENTIFIER,this,si())<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; t)<SUB>9</SUB>>", "67": "<(IDENTIFIER,t,i &lt; t)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,++i)<SUB>9</SUB>>", "71": "<(LOCAL,int n: int)<SUB>10</SUB>>", "73": "<(IDENTIFIER,n,int n = si())<SUB>10</SUB>>", "75": "<(IDENTIFIER,this,si())<SUB>10</SUB>>", "77": "<(contains,contains(n))<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,contains(n))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "83": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "85": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "89": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "91": "<(MODIFIER,PUBLIC)>", "93": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}