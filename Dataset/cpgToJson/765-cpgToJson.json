{"edges": [["21", "23"], ["21", "175"], ["21", "176"], ["21", "177"], ["23", "24"], ["23", "25"], ["23", "31"], ["23", "32"], ["23", "4"], ["23", "37"], ["23", "40"], ["23", "41"], ["23", "57"], ["23", "58"], ["23", "62"], ["23", "63"], ["23", "66"], ["23", "67"], ["23", "70"], ["23", "71"], ["23", "6"], ["23", "76"], ["23", "79"], ["23", "80"], ["23", "166"], ["23", "171"], ["23", "173"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["40", "3"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "5"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "148"], ["84", "164"], ["85", "86"], ["85", "91"], ["85", "140"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["92", "93"], ["92", "100"], ["92", "126"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "103"], ["101", "102"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "124"], ["112", "113"], ["112", "114"], ["112", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["124", "125"], ["126", "127"], ["127", "128"], ["128", "129"], ["128", "130"], ["128", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["141", "142"], ["142", "143"], ["142", "144"], ["142", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "153"], ["149", "150"], ["149", "152"], ["150", "151"], ["153", "154"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["156", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["164", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["25", "35"], ["32", "39"], ["37", "40"], ["40", "43"], ["58", "63"], ["63", "67"], ["67", "73"], ["71", "78"], ["76", "79"], ["79", "81"], ["166", "171"], ["171", "173"], ["173", "177"], ["27", "25"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "54"], ["46", "60"], ["49", "46"], ["60", "58"], ["73", "71"], ["78", "76"], ["81", "88"], ["81", "168"], ["168", "166"], ["29", "27"], ["35", "34"], ["52", "49"], ["164", "81"], ["54", "52"], ["86", "94"], ["86", "144"], ["149", "159"], ["149", "164"], ["88", "86"], ["150", "149"], ["154", "164"], ["93", "101"], ["93", "130"], ["142", "150"], ["156", "154"], ["94", "97"], ["97", "93"], ["101", "107"], ["144", "142"], ["158", "156"], ["104", "114"], ["104", "150"], ["128", "150"], ["159", "158"], ["105", "104"], ["112", "124"], ["124", "107"], ["130", "136"], ["133", "128"], ["107", "105"], ["114", "120"], ["117", "112"], ["134", "133"], ["118", "117"], ["136", "134"], ["120", "118"], ["21", "29"], ["22", "177"], ["25", "177"], ["25", "177"], ["32", "177"], ["34", "177"], ["32", "177"], ["32", "177"], ["37", "177"], ["40", "177"], ["43", "177"], ["46", "177"], ["46", "177"], ["58", "177"], ["60", "177"], ["58", "177"], ["58", "177"], ["63", "177"], ["63", "177"], ["67", "177"], ["71", "177"], ["71", "177"], ["76", "177"], ["79", "177"], ["79", "177"], ["81", "177"], ["81", "177"], ["81", "177"], ["168", "177"], ["166", "177"], ["166", "177"], ["171", "177"], ["173", "177"], ["173", "177"], ["86", "177"], ["142", "177"], ["142", "177"], ["93", "177"], ["93", "177"], ["93", "177"], ["128", "177"], ["133", "177"], ["128", "177"], ["128", "177"], ["101", "177"], ["101", "177"], ["105", "177"], ["104", "177"], ["104", "177"], ["150", "177"], ["149", "177"], ["149", "177"], ["149", "177"], ["159", "177"], ["158", "177"], ["156", "177"], ["154", "177"], ["154", "177"], ["164", "177"], ["112", "177"], ["112", "177"], ["124", "177"], ["124", "177"], ["52", "177"], ["52", "177"], ["49", "177"], ["156", "177"], ["27", "177"], ["21", "22"], ["27", "25"], ["27", "25"], ["34", "32"], ["21", "37"], ["60", "58"], ["21", "63"], ["21", "67"], ["73", "71"], ["73", "71"], ["21", "76"], ["37", "40"], ["21", "40"], ["21", "43"], ["76", "79"], ["21", "79"], ["21", "166"], ["71", "166"], ["154", "166"], ["166", "171"], ["21", "171"], ["35", "173"], ["21", "173"], ["21", "27"], ["29", "27"], ["35", "34"], ["43", "46"], ["49", "46"], ["21", "46"], ["25", "46"], ["46", "49"], ["21", "49"], ["40", "60"], ["52", "60"], ["21", "60"], ["21", "73"], ["67", "81"], ["164", "81"], ["21", "81"], ["46", "81"], ["71", "168"], ["154", "168"], ["21", "168"], ["21", "29"], ["29", "35"], ["21", "35"], ["40", "52"], ["21", "52"], ["32", "52"], ["81", "164"], ["159", "164"], ["21", "164"], ["79", "86"], ["150", "86"], ["21", "86"], ["32", "86"], ["142", "86"], ["93", "86"], ["128", "86"], ["150", "149"], ["58", "149"], ["21", "149"], ["156", "154"], ["156", "154"], ["156", "154"], ["142", "150"], ["128", "150"], ["105", "150"], ["21", "150"], ["32", "93"], ["105", "93"], ["86", "93"], ["86", "142"], ["21", "142"], ["32", "142"], ["86", "142"], ["21", "156"], ["159", "156"], ["159", "156"], ["71", "156"], ["154", "156"], ["63", "101"], ["159", "101"], ["124", "101"], ["21", "101"], ["159", "158"], ["159", "158"], ["21", "158"], ["105", "104"], ["105", "104"], ["21", "104"], ["134", "128"], ["21", "128"], ["32", "128"], ["134", "128"], ["81", "159"], ["21", "159"], ["63", "159"], ["101", "159"], ["124", "159"], ["86", "105"], ["112", "105"], ["21", "105"], ["32", "105"], ["93", "105"], ["112", "105"], ["118", "112"], ["21", "112"], ["32", "112"], ["118", "112"], ["117", "112"], ["117", "112"], ["101", "124"], ["21", "124"], ["134", "133"], ["134", "133"], ["21", "133"], ["118", "117"], ["118", "117"], ["21", "117"], ["86", "134"], ["21", "134"], ["32", "134"], ["93", "134"], ["105", "118"], ["21", "118"], ["32", "118"], ["105", "118"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "54"], ["81", "81"], ["81", "149"], ["81", "150"], ["81", "88"], ["81", "164"], ["81", "86"], ["86", "94"], ["86", "142"], ["86", "144"], ["86", "97"], ["86", "93"], ["149", "154"], ["149", "159"], ["149", "156"], ["149", "158"], ["93", "107"], ["93", "136"], ["93", "128"], ["93", "104"], ["93", "134"], ["93", "101"], ["93", "105"], ["93", "130"], ["93", "133"], ["104", "107"], ["104", "120"], ["104", "114"], ["104", "104"], ["104", "112"], ["104", "105"], ["104", "118"], ["104", "117"], ["104", "124"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,int N = parseInt(br.readLine()))<SUB>2</SUB>>", "27": "<(parseInt,parseInt(br.readLine()))<SUB>2</SUB>>", "29": "<(readLine,readLine())<SUB>2</SUB>>", "31": "<(LOCAL,char[] A: char[])<SUB>3</SUB>>", "33": "<(IDENTIFIER,A,char[] A = toCharArray())<SUB>3</SUB>>", "35": "<(readLine,readLine())<SUB>3</SUB>>", "4": "<(LOCAL,HashSet&lt;Character&gt; cndD: ANY)<SUB>5</SUB>>", "38": "<(IDENTIFIER,cndD,ANY cndD = new HashSet&lt;Character&gt;())<SUB>5</SUB>>", "40": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>5</SUB>>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; N)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(IDENTIFIER,cndD,add(A[i]))<SUB>7</SUB>>", "55": "<(IDENTIFIER,A,add(A[i]))<SUB>7</SUB>>", "57": "<(LOCAL,int cnt: int)<SUB>10</SUB>>", "59": "<(IDENTIFIER,cnt,int cnt = size())<SUB>10</SUB>>", "61": "<(IDENTIFIER,cndD,size())<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>12</SUB>>", "65": "<(LITERAL,0,int a = 0)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int b = 0)<SUB>13</SUB>>", "69": "<(LITERAL,0,int b = 0)<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.assignment,int ans = 1 &lt;&lt; 30)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 30)<SUB>15</SUB>>", "75": "<(LITERAL,30,1 &lt;&lt; 30)<SUB>15</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY d = new HashMap&lt;Character, Integer&gt;())<SUB>16</SUB>>", "78": "<(&lt;operator&gt;.alloc,new HashMap&lt;Character, Integer&gt;())<SUB>16</SUB>>", "5": "<(IDENTIFIER,d,new HashMap&lt;Character, Integer&gt;())<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.lessThan,b &lt; N)<SUB>17</SUB>>", "83": "<(IDENTIFIER,N,b &lt; N)<SUB>17</SUB>>", "85": "<(CONTROL_STRUCTURE,if (d.containsKey(A[b])),if (d.containsKey(A[b])))<SUB>18</SUB>>", "87": "<(IDENTIFIER,d,containsKey(A[b]))<SUB>18</SUB>>", "89": "<(IDENTIFIER,A,containsKey(A[b]))<SUB>18</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.equals,A[a] == A[b])<SUB>19</SUB>>", "95": "<(IDENTIFIER,A,A[a] == A[b])<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,A[b])<SUB>19</SUB>>", "99": "<(IDENTIFIER,b,A[a] == A[b])<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,a++)<SUB>20</SUB>>", "103": "<(CONTROL_STRUCTURE,while (d.get(A[a]) &gt; 1),while (d.get(A[a]) &gt; 1))<SUB>21</SUB>>", "105": "<(get,get(A[a]))<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,A[a])<SUB>21</SUB>>", "109": "<(IDENTIFIER,a,get(A[a]))<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "113": "<(IDENTIFIER,d,put(A[a], d.get(A[a]) - 1))<SUB>22</SUB>>", "115": "<(IDENTIFIER,A,put(A[a], d.get(A[a]) - 1))<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.subtraction,d.get(A[a]) - 1)<SUB>22</SUB>>", "119": "<(IDENTIFIER,d,get(A[a]))<SUB>22</SUB>>", "121": "<(IDENTIFIER,A,get(A[a]))<SUB>22</SUB>>", "123": "<(LITERAL,1,d.get(A[a]) - 1)<SUB>22</SUB>>", "125": "<(IDENTIFIER,a,a++)<SUB>23</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "129": "<(IDENTIFIER,d,put(A[b], d.get(A[b]) + 1))<SUB>26</SUB>>", "131": "<(IDENTIFIER,A,put(A[b], d.get(A[b]) + 1))<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.addition,d.get(A[b]) + 1)<SUB>26</SUB>>", "135": "<(IDENTIFIER,d,get(A[b]))<SUB>26</SUB>>", "137": "<(IDENTIFIER,A,get(A[b]))<SUB>26</SUB>>", "139": "<(LITERAL,1,d.get(A[b]) + 1)<SUB>26</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "143": "<(IDENTIFIER,d,put(A[b], 1))<SUB>29</SUB>>", "145": "<(IDENTIFIER,A,put(A[b], 1))<SUB>29</SUB>>", "147": "<(LITERAL,1,put(A[b], 1))<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.equals,d.size() == cnt)<SUB>31</SUB>>", "151": "<(IDENTIFIER,d,size())<SUB>31</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "155": "<(IDENTIFIER,ans,ans = Math.min(b - a + 1, ans))<SUB>32</SUB>>", "157": "<(IDENTIFIER,Math,Math.min(b - a + 1, ans))<SUB>32</SUB>>", "159": "<(&lt;operator&gt;.subtraction,b - a)<SUB>32</SUB>>", "161": "<(IDENTIFIER,a,b - a)<SUB>32</SUB>>", "163": "<(IDENTIFIER,ans,Math.min(b - a + 1, ans))<SUB>32</SUB>>", "165": "<(IDENTIFIER,b,b++)<SUB>34</SUB>>", "167": "<(IDENTIFIER,pw,print(ans + &quot;\\n&quot;))<SUB>37</SUB>>", "169": "<(IDENTIFIER,ans,ans + &quot;\\n&quot;)<SUB>37</SUB>>", "171": "<(close,close())<SUB>38</SUB>>", "173": "<(close,close())<SUB>39</SUB>>", "175": "<(MODIFIER,PUBLIC)>", "177": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}