{"edges": [["19", "21"], ["19", "95"], ["19", "96"], ["19", "97"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "45"], ["21", "86"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["45", "46"], ["45", "51"], ["45", "76"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "63"], ["57", "67"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["68", "69"], ["68", "71"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["22", "29"], ["25", "41"], ["37", "47"], ["86", "97"], ["24", "22"], ["39", "37"], ["46", "54"], ["46", "78"], ["87", "91"], ["90", "86"], ["27", "34"], ["30", "25"], ["41", "39"], ["47", "46"], ["52", "59"], ["89", "87"], ["91", "90"], ["29", "27"], ["32", "30"], ["54", "52"], ["58", "64"], ["58", "69"], ["78", "83"], ["81", "89"], ["34", "32"], ["59", "58"], ["64", "89"], ["83", "81"], ["69", "73"], ["71", "89"], ["73", "71"], ["19", "24"], ["20", "97"], ["22", "97"], ["27", "97"], ["30", "97"], ["30", "97"], ["30", "97"], ["25", "97"], ["41", "97"], ["39", "97"], ["37", "97"], ["37", "97"], ["46", "97"], ["46", "97"], ["78", "97"], ["83", "97"], ["81", "97"], ["81", "97"], ["54", "97"], ["52", "97"], ["52", "97"], ["58", "97"], ["58", "97"], ["69", "97"], ["71", "97"], ["71", "97"], ["64", "97"], ["86", "97"], ["91", "97"], ["90", "97"], ["90", "97"], ["86", "97"], ["39", "97"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["83", "86"], ["19", "86"], ["69", "86"], ["59", "86"], ["81", "86"], ["71", "86"], ["64", "86"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["47", "46"], ["47", "46"], ["19", "46"], ["54", "52"], ["54", "52"], ["83", "90"], ["19", "90"], ["69", "90"], ["59", "90"], ["81", "90"], ["71", "90"], ["64", "90"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["37", "47"], ["19", "47"], ["19", "78"], ["83", "81"], ["83", "81"], ["83", "91"], ["19", "91"], ["69", "91"], ["59", "91"], ["47", "54"], ["19", "54"], ["59", "58"], ["59", "58"], ["19", "58"], ["59", "64"], ["19", "64"], ["52", "59"], ["19", "59"], ["69", "71"], ["19", "71"], ["47", "83"], ["19", "83"], ["78", "83"], ["59", "69"], ["19", "69"], ["69", "73"], ["19", "73"], ["46", "58"], ["46", "83"], ["46", "52"], ["46", "81"], ["46", "59"], ["46", "78"], ["46", "54"], ["58", "73"], ["58", "64"], ["58", "71"], ["58", "69"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int num1: int)<SUB>4</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.modulo,n % 2)<SUB>5</SUB>>", "49": "<(LITERAL,2,n % 2)<SUB>5</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "53": "<(IDENTIFIER,num1,num1 = n / 2)<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,n / 2)<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,if (num1 % 2 == 0),if (num1 % 2 == 0))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.modulo,num1 % 2)<SUB>7</SUB>>", "61": "<(LITERAL,2,num1 % 2)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(IDENTIFIER,num2,num2 = num1)<SUB>8</SUB>>", "67": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.postDecrement,num1--)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,num2 = num1 + 2)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.addition,num1 + 2)<SUB>12</SUB>>", "75": "<(LITERAL,2,num1 + 2)<SUB>12</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "79": "<(IDENTIFIER,num1,num1 = 9)<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.assignment,num2 = n - num1)<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.subtraction,n - num1)<SUB>17</SUB>>", "85": "<(IDENTIFIER,num1,n - num1)<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "89": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.addition,num1 + &quot; &quot;)<SUB>20</SUB>>", "93": "<(LITERAL,&quot; &quot;,num1 + &quot; &quot;)<SUB>20</SUB>>", "95": "<(MODIFIER,PUBLIC)>", "97": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}