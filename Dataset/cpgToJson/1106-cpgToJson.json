{"edges": [["17", "18"], ["17", "19"], ["17", "128"], ["17", "129"], ["17", "130"], ["19", "20"], ["19", "23"], ["19", "28"], ["19", "32"], ["19", "36"], ["19", "40"], ["19", "59"], ["19", "60"], ["19", "61"], ["19", "62"], ["19", "65"], ["19", "70"], ["19", "117"], ["19", "122"], ["19", "126"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "46"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "52"], ["46", "56"], ["46", "58"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "82"], ["74", "83"], ["74", "88"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "96"], ["88", "102"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["20", "27"], ["23", "30"], ["28", "34"], ["32", "38"], ["36", "42"], ["62", "67"], ["65", "71"], ["117", "125"], ["122", "126"], ["126", "130"], ["22", "20"], ["25", "23"], ["30", "28"], ["34", "32"], ["38", "36"], ["41", "50"], ["41", "62"], ["67", "65"], ["71", "78"], ["71", "120"], ["118", "117"], ["123", "122"], ["27", "25"], ["42", "41"], ["47", "55"], ["52", "56"], ["56", "58"], ["58", "130"], ["75", "85"], ["83", "91"], ["120", "118"], ["125", "123"], ["48", "47"], ["53", "52"], ["77", "75"], ["85", "83"], ["89", "99"], ["89", "107"], ["50", "48"], ["55", "53"], ["78", "77"], ["90", "89"], ["97", "71"], ["91", "90"], ["99", "97"], ["104", "71"], ["104", "114"], ["105", "104"], ["112", "71"], ["107", "105"], ["114", "112"], ["17", "22"], ["58", "130"], ["18", "130"], ["20", "130"], ["23", "130"], ["23", "130"], ["28", "130"], ["28", "130"], ["32", "130"], ["32", "130"], ["38", "130"], ["36", "130"], ["36", "130"], ["42", "130"], ["41", "130"], ["41", "130"], ["52", "130"], ["52", "130"], ["56", "130"], ["56", "130"], ["36", "130"], ["32", "130"], ["17", "18"], ["17", "20"], ["30", "28"], ["34", "32"], ["38", "36"], ["17", "62"], ["67", "65"], ["67", "65"], ["20", "23"], ["17", "23"], ["17", "117"], ["117", "122"], ["30", "126"], ["17", "126"], ["23", "30"], ["17", "30"], ["17", "34"], ["34", "38"], ["17", "38"], ["42", "41"], ["42", "41"], ["17", "41"], ["17", "58"], ["42", "67"], ["17", "67"], ["62", "71"], ["91", "71"], ["112", "71"], ["17", "71"], ["65", "71"], ["107", "71"], ["97", "71"], ["77", "75"], ["77", "75"], ["85", "83"], ["85", "83"], ["28", "42"], ["17", "42"], ["17", "47"], ["47", "52"], ["30", "56"], ["17", "56"], ["71", "77"], ["17", "77"], ["71", "77"], ["91", "85"], ["107", "85"], ["17", "85"], ["75", "85"], ["90", "89"], ["90", "89"], ["17", "89"], ["99", "97"], ["99", "97"], ["71", "78"], ["17", "78"], ["71", "78"], ["91", "90"], ["91", "90"], ["83", "90"], ["17", "90"], ["85", "91"], ["17", "91"], ["71", "91"], ["85", "99"], ["17", "99"], ["105", "104"], ["105", "104"], ["17", "104"], ["85", "112"], ["17", "112"], ["90", "105"], ["17", "105"], ["107", "105"], ["107", "105"], ["91", "107"], ["17", "107"], ["71", "107"], ["85", "114"], ["17", "114"], ["41", "47"], ["41", "48"], ["41", "120"], ["41", "52"], ["41", "122"], ["41", "56"], ["41", "67"], ["41", "123"], ["41", "65"], ["41", "50"], ["41", "126"], ["41", "58"], ["41", "71"], ["41", "118"], ["41", "53"], ["41", "117"], ["41", "55"], ["41", "125"], ["41", "62"], ["71", "77"], ["71", "89"], ["71", "75"], ["71", "85"], ["71", "91"], ["71", "90"], ["71", "83"], ["71", "71"], ["71", "78"], ["89", "107"], ["89", "99"], ["89", "104"], ["89", "97"], ["89", "105"], ["104", "114"], ["104", "112"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,cin,cin = new Scanner(System.in))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new Scanner(System.in))<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "27": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "29": "<(IDENTIFIER,n,n = nextInt())<SUB>3</SUB>>", "31": "<(IDENTIFIER,cin,nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,a,a = new int[MAXN])<SUB>4</SUB>>", "35": "<(IDENTIFIER,MAXN,new int[MAXN])<SUB>4</SUB>>", "37": "<(IDENTIFIER,used,used = new boolean[MAXN])<SUB>5</SUB>>", "39": "<(IDENTIFIER,MAXN,new boolean[MAXN])<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.notEquals,n % 4 != 0)<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,n % 4)<SUB>6</SUB>>", "45": "<(LITERAL,0,n % 4 != 0)<SUB>6</SUB>>", "47": "<(println,System.out.println(&quot;! -1\\n&quot;))<SUB>7</SUB>>", "49": "<(IDENTIFIER,System,System.out.println(&quot;! -1\\n&quot;))<SUB>7</SUB>>", "51": "<(LITERAL,&quot;! -1\\n&quot;,System.out.println(&quot;! -1\\n&quot;))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "57": "<(IDENTIFIER,cin,close())<SUB>9</SUB>>", "59": "<(LOCAL,int l: int)<SUB>12</SUB>>", "61": "<(LOCAL,int mid: int)<SUB>12</SUB>>", "63": "<(IDENTIFIER,l,int l = 1)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.assignment,int r = n / 2)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.division,n / 2)<SUB>12</SUB>>", "69": "<(LITERAL,2,n / 2)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= r)<SUB>13</SUB>>", "73": "<(IDENTIFIER,r,l &lt;= r)<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,mid = (l + r) / 2)<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.division,(l + r) / 2)<SUB>14</SUB>>", "79": "<(IDENTIFIER,l,l + r)<SUB>14</SUB>>", "81": "<(LITERAL,2,(l + r) / 2)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,int x = Q(mid))<SUB>15</SUB>>", "85": "<(Q,Q(mid))<SUB>15</SUB>>", "87": "<(IDENTIFIER,mid,Q(mid))<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.lessThan,Q(l) * x &lt; 0)<SUB>16</SUB>>", "91": "<(Q,Q(l))<SUB>16</SUB>>", "93": "<(IDENTIFIER,l,Q(l))<SUB>16</SUB>>", "95": "<(LITERAL,0,Q(l) * x &lt; 0)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.assignment,r = mid - 1)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>17</SUB>>", "101": "<(LITERAL,1,mid - 1)<SUB>17</SUB>>", "103": "<(CONTROL_STRUCTURE,if (x * Q(r) &lt; 0),if (x * Q(r) &lt; 0))<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.multiplication,x * Q(r))<SUB>18</SUB>>", "107": "<(Q,Q(r))<SUB>18</SUB>>", "109": "<(IDENTIFIER,r,Q(r))<SUB>18</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(IDENTIFIER,l,l = mid + 1)<SUB>19</SUB>>", "115": "<(IDENTIFIER,mid,mid + 1)<SUB>19</SUB>>", "117": "<(println,System.out.println(&quot;! -1\\n&quot;))<SUB>22</SUB>>", "119": "<(IDENTIFIER,System,System.out.println(&quot;! -1\\n&quot;))<SUB>22</SUB>>", "121": "<(LITERAL,&quot;! -1\\n&quot;,System.out.println(&quot;! -1\\n&quot;))<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "125": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "127": "<(IDENTIFIER,cin,close())<SUB>24</SUB>>", "129": "<(MODIFIER,STATIC)>"}}