{"edges": [["19", "20"], ["19", "21"], ["19", "126"], ["19", "127"], ["19", "128"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "57"], ["21", "65"], ["21", "66"], ["21", "69"], ["21", "105"], ["21", "110"], ["21", "113"], ["21", "118"], ["21", "121"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["47", "56"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "80"], ["73", "88"], ["73", "91"], ["73", "99"], ["73", "102"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["82", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "53"], ["45", "58"], ["66", "70"], ["105", "110"], ["110", "115"], ["113", "118"], ["118", "124"], ["121", "128"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["58", "62"], ["58", "66"], ["70", "77"], ["70", "107"], ["107", "105"], ["115", "113"], ["122", "121"], ["28", "26"], ["49", "47"], ["62", "66"], ["75", "85"], ["80", "88"], ["88", "92"], ["99", "102"], ["102", "107"], ["124", "122"], ["51", "49"], ["77", "75"], ["82", "80"], ["92", "96"], ["92", "99"], ["53", "51"], ["85", "82"], ["96", "99"], ["19", "24"], ["20", "128"], ["22", "128"], ["25", "128"], ["25", "128"], ["30", "128"], ["35", "128"], ["42", "128"], ["40", "128"], ["40", "128"], ["49", "128"], ["51", "128"], ["49", "128"], ["47", "128"], ["45", "128"], ["45", "128"], ["58", "128"], ["62", "128"], ["66", "128"], ["70", "128"], ["75", "128"], ["75", "128"], ["85", "128"], ["82", "128"], ["80", "128"], ["80", "128"], ["88", "128"], ["92", "128"], ["96", "128"], ["99", "128"], ["107", "128"], ["105", "128"], ["105", "128"], ["115", "128"], ["115", "128"], ["113", "128"], ["113", "128"], ["118", "128"], ["121", "128"], ["121", "128"], ["121", "128"], ["47", "128"], ["82", "128"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["47", "45"], ["47", "45"], ["19", "66"], ["107", "105"], ["107", "105"], ["19", "110"], ["115", "113"], ["115", "113"], ["19", "118"], ["22", "25"], ["19", "25"], ["66", "105"], ["102", "105"], ["19", "105"], ["105", "110"], ["110", "113"], ["19", "113"], ["113", "118"], ["118", "121"], ["19", "121"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["19", "47"], ["49", "47"], ["49", "47"], ["53", "47"], ["45", "58"], ["19", "58"], ["19", "62"], ["58", "70"], ["62", "70"], ["19", "70"], ["51", "70"], ["77", "75"], ["77", "75"], ["82", "80"], ["82", "80"], ["82", "80"], ["19", "88"], ["77", "99"], ["19", "99"], ["19", "102"], ["70", "107"], ["77", "107"], ["19", "107"], ["70", "107"], ["77", "107"], ["47", "115"], ["19", "115"], ["107", "115"], ["53", "49"], ["19", "49"], ["51", "49"], ["51", "49"], ["66", "80"], ["19", "80"], ["80", "88"], ["92", "99"], ["96", "99"], ["99", "102"], ["40", "51"], ["19", "51"], ["53", "51"], ["53", "51"], ["70", "77"], ["19", "77"], ["70", "77"], ["19", "82"], ["75", "82"], ["88", "92"], ["19", "92"], ["19", "96"], ["30", "53"], ["19", "53"], ["35", "53"], ["75", "85"], ["19", "85"], ["92", "96"], ["58", "62"], ["70", "80"], ["70", "77"], ["70", "75"], ["70", "99"], ["70", "102"], ["70", "85"], ["70", "88"], ["70", "92"], ["70", "82"], ["92", "96"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,long n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,long m = nextInt())<SUB>6</SUB>>", "37": "<(nextInt,nextInt())<SUB>6</SUB>>", "39": "<(LOCAL,long k: long)<SUB>7</SUB>>", "41": "<(IDENTIFIER,k,long k = nextInt())<SUB>7</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,long low = Math.min(n - (k * (n - m)), m))<SUB>9</SUB>>", "47": "<(min,Math.min(n - (k * (n - m)), m))<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.subtraction,n - (k * (n - m)))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.multiplication,k * (n - m))<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.subtraction,n - m)<SUB>9</SUB>>", "55": "<(IDENTIFIER,m,n - m)<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,if (low &lt; 0),if (low &lt; 0))<SUB>11</SUB>>", "59": "<(IDENTIFIER,low,low &lt; 0)<SUB>11</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "63": "<(IDENTIFIER,low,low = 0)<SUB>13</SUB>>", "65": "<(LOCAL,long result: long)<SUB>16</SUB>>", "67": "<(IDENTIFIER,result,long result = 0)<SUB>16</SUB>>", "69": "<(CONTROL_STRUCTURE,if (low &gt;= k),if (low &gt;= k))<SUB>17</SUB>>", "71": "<(IDENTIFIER,low,low &gt;= k)<SUB>17</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "75": "<(&lt;operator&gt;.assignment,long b = low / k)<SUB>19</SUB>>", "77": "<(&lt;operator&gt;.division,low / k)<SUB>19</SUB>>", "79": "<(IDENTIFIER,k,low / k)<SUB>19</SUB>>", "81": "<(IDENTIFIER,result,result += fastExp(2, b + 1))<SUB>21</SUB>>", "83": "<(IDENTIFIER,this,fastExp(2, b + 1))<SUB>21</SUB>>", "85": "<(&lt;operator&gt;.addition,b + 1)<SUB>21</SUB>>", "87": "<(LITERAL,1,b + 1)<SUB>21</SUB>>", "89": "<(IDENTIFIER,result,result -= 2)<SUB>22</SUB>>", "91": "<(CONTROL_STRUCTURE,if (result &lt; 0),if (result &lt; 0))<SUB>23</SUB>>", "93": "<(IDENTIFIER,result,result &lt; 0)<SUB>23</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "97": "<(IDENTIFIER,result,result += MOD)<SUB>25</SUB>>", "99": "<(&lt;operator&gt;.assignmentMultiplication,result *= k)<SUB>28</SUB>>", "101": "<(IDENTIFIER,k,result *= k)<SUB>28</SUB>>", "103": "<(IDENTIFIER,result,result %= MOD)<SUB>29</SUB>>", "105": "<(&lt;operator&gt;.assignmentPlus,result += low % k)<SUB>32</SUB>>", "107": "<(&lt;operator&gt;.modulo,low % k)<SUB>32</SUB>>", "109": "<(IDENTIFIER,k,low % k)<SUB>32</SUB>>", "111": "<(IDENTIFIER,result,result %= MOD)<SUB>33</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,result += m - low)<SUB>35</SUB>>", "115": "<(&lt;operator&gt;.subtraction,m - low)<SUB>35</SUB>>", "117": "<(IDENTIFIER,low,m - low)<SUB>35</SUB>>", "119": "<(IDENTIFIER,result,result %= MOD)<SUB>36</SUB>>", "121": "<(println,System.out.println(result))<SUB>40</SUB>>", "123": "<(IDENTIFIER,System,System.out.println(result))<SUB>40</SUB>>", "125": "<(IDENTIFIER,result,System.out.println(result))<SUB>40</SUB>>", "127": "<(MODIFIER,STATIC)>"}}