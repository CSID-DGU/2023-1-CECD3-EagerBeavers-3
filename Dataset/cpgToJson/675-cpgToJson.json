{"edges": [["21", "22"], ["21", "23"], ["21", "172"], ["21", "173"], ["21", "174"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "76"], ["23", "77"], ["23", "80"], ["23", "81"], ["23", "84"], ["23", "116"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "66"], ["56", "68"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "94"], ["84", "96"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "109"], ["103", "112"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["110", "111"], ["112", "113"], ["113", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "126"], ["116", "128"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["129", "130"], ["129", "143"], ["129", "150"], ["130", "131"], ["130", "140"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["151", "152"], ["151", "165"], ["152", "153"], ["152", "162"], ["153", "154"], ["153", "161"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "49"], ["48", "54"], ["52", "58"], ["77", "81"], ["81", "86"], ["26", "24"], ["41", "39"], ["47", "45"], ["49", "48"], ["54", "52"], ["58", "65"], ["61", "69"], ["61", "77"], ["66", "65"], ["68", "66"], ["86", "93"], ["89", "100"], ["89", "118"], ["94", "93"], ["118", "125"], ["121", "174"], ["121", "135"], ["126", "125"], ["29", "36"], ["32", "27"], ["43", "41"], ["63", "61"], ["69", "74"], ["72", "68"], ["91", "89"], ["98", "105"], ["123", "121"], ["31", "29"], ["34", "32"], ["65", "63"], ["74", "72"], ["93", "91"], ["100", "98"], ["104", "110"], ["104", "114"], ["125", "123"], ["130", "147"], ["130", "157"], ["36", "34"], ["105", "104"], ["110", "94"], ["131", "130"], ["131", "140"], ["140", "130"], ["144", "149"], ["149", "174"], ["114", "94"], ["132", "131"], ["145", "144"], ["152", "169"], ["152", "126"], ["133", "132"], ["147", "145"], ["153", "152"], ["153", "162"], ["162", "152"], ["166", "171"], ["171", "174"], ["135", "133"], ["154", "153"], ["167", "166"], ["155", "154"], ["169", "167"], ["157", "155"], ["21", "26"], ["171", "174"], ["149", "174"], ["22", "174"], ["24", "174"], ["29", "174"], ["32", "174"], ["32", "174"], ["32", "174"], ["27", "174"], ["41", "174"], ["39", "174"], ["39", "174"], ["45", "174"], ["48", "174"], ["49", "174"], ["48", "174"], ["48", "174"], ["52", "174"], ["54", "174"], ["52", "174"], ["52", "174"], ["58", "174"], ["61", "174"], ["77", "174"], ["77", "174"], ["81", "174"], ["81", "174"], ["86", "174"], ["89", "174"], ["89", "174"], ["118", "174"], ["121", "174"], ["121", "174"], ["132", "174"], ["131", "174"], ["130", "174"], ["140", "174"], ["130", "174"], ["130", "174"], ["152", "174"], ["162", "174"], ["152", "174"], ["152", "174"], ["126", "174"], ["144", "174"], ["144", "174"], ["144", "174"], ["98", "174"], ["105", "174"], ["104", "174"], ["104", "174"], ["114", "174"], ["114", "174"], ["110", "174"], ["110", "174"], ["94", "174"], ["68", "174"], ["72", "174"], ["74", "174"], ["72", "174"], ["68", "174"], ["68", "174"], ["66", "174"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["54", "52"], ["21", "77"], ["21", "81"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["49", "48"], ["21", "58"], ["72", "68"], ["72", "68"], ["21", "86"], ["21", "118"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["43", "49"], ["21", "49"], ["39", "54"], ["21", "54"], ["58", "61"], ["66", "61"], ["21", "61"], ["52", "61"], ["61", "66"], ["21", "66"], ["86", "89"], ["94", "89"], ["21", "89"], ["52", "89"], ["61", "89"], ["89", "94"], ["21", "94"], ["29", "98"], ["52", "98"], ["118", "121"], ["126", "121"], ["21", "121"], ["52", "121"], ["89", "121"], ["157", "126"], ["21", "126"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["41", "72"], ["21", "72"], ["74", "72"], ["48", "74"], ["21", "74"], ["105", "104"], ["105", "104"], ["21", "104"], ["131", "130"], ["131", "130"], ["140", "130"], ["140", "130"], ["21", "149"], ["98", "105"], ["21", "105"], ["77", "110"], ["21", "110"], ["132", "131"], ["132", "131"], ["21", "131"], ["77", "140"], ["110", "140"], ["21", "140"], ["135", "144"], ["21", "144"], ["81", "114"], ["21", "114"], ["52", "132"], ["154", "132"], ["21", "132"], ["153", "152"], ["153", "152"], ["162", "152"], ["162", "152"], ["21", "171"], ["154", "153"], ["154", "153"], ["21", "153"], ["81", "162"], ["114", "162"], ["21", "162"], ["157", "166"], ["21", "166"], ["121", "135"], ["21", "135"], ["52", "154"], ["132", "154"], ["21", "154"], ["135", "157"], ["21", "157"], ["61", "68"], ["61", "66"], ["61", "72"], ["61", "69"], ["61", "74"], ["61", "65"], ["61", "61"], ["61", "63"], ["89", "94"], ["89", "89"], ["89", "98"], ["89", "104"], ["89", "91"], ["89", "93"], ["89", "105"], ["89", "100"], ["121", "131"], ["121", "132"], ["121", "130"], ["121", "135"], ["121", "133"], ["104", "114"], ["104", "110"], ["130", "154"], ["130", "145"], ["130", "149"], ["130", "153"], ["130", "157"], ["130", "144"], ["130", "152"], ["130", "147"], ["130", "155"], ["131", "140"], ["152", "167"], ["152", "169"], ["152", "166"], ["152", "121"], ["152", "123"], ["152", "126"], ["152", "125"], ["152", "171"], ["153", "162"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "49": "<(readLine,readLine())<SUB>4</SUB>>", "51": "<(LOCAL,int[] list: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,list,int[] list = new int[n])<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "57": "<(LOCAL,int i: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; list.length)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,list.length)<SUB>6</SUB>>", "65": "<(FIELD_IDENTIFIER,length,length)<SUB>6</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,list[i] = parseInt(st.nextToken()))<SUB>7</SUB>>", "73": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "75": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.assignment,int odd = 0)<SUB>8</SUB>>", "79": "<(LITERAL,0,int odd = 0)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,int even = 0)<SUB>9</SUB>>", "83": "<(LITERAL,0,int even = 0)<SUB>9</SUB>>", "85": "<(LOCAL,$idx0: int)<SUB>10</SUB>>", "87": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "89": "<(&lt;operator&gt;.lessThan,$idx0 &lt; list.length)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,list.length)<SUB>10</SUB>>", "93": "<(FIELD_IDENTIFIER,length,length)<SUB>10</SUB>>", "95": "<(IDENTIFIER,$idx0,$idx0++)>", "97": "<(LOCAL,x: int)<SUB>10</SUB>>", "99": "<(IDENTIFIER,x,&lt;empty&gt;)>", "101": "<(IDENTIFIER,list,&lt;empty&gt;)>", "103": "<(CONTROL_STRUCTURE,if (x % 2 == 1),if (x % 2 == 1))<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.modulo,x % 2)<SUB>11</SUB>>", "107": "<(LITERAL,2,x % 2)<SUB>11</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "111": "<(IDENTIFIER,odd,odd++)<SUB>12</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "115": "<(IDENTIFIER,even,even++)<SUB>15</SUB>>", "117": "<(LOCAL,int i: int)<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,int i = 1)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= list.length)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,list.length)<SUB>17</SUB>>", "125": "<(FIELD_IDENTIFIER,length,length)<SUB>17</SUB>>", "127": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,if (list[i - 1] % 2 == 1 &amp;&amp; odd == 1),if (list[i - 1] % 2 == 1 &amp;&amp; odd == 1))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.equals,list[i - 1] % 2 == 1)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,list[i - 1])<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>18</SUB>>", "137": "<(LITERAL,1,i - 1)<SUB>18</SUB>>", "139": "<(LITERAL,1,list[i - 1] % 2 == 1)<SUB>18</SUB>>", "141": "<(IDENTIFIER,odd,odd == 1)<SUB>18</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "149": "<(RETURN,return;,return;)<SUB>20</SUB>>", "151": "<(CONTROL_STRUCTURE,if (list[i - 1] % 2 == 0 &amp;&amp; even == 1),if (list[i - 1] % 2 == 0 &amp;&amp; even == 1))<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.equals,list[i - 1] % 2 == 0)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,list[i - 1])<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>22</SUB>>", "159": "<(LITERAL,1,i - 1)<SUB>22</SUB>>", "161": "<(LITERAL,0,list[i - 1] % 2 == 0)<SUB>22</SUB>>", "163": "<(IDENTIFIER,even,even == 1)<SUB>22</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "169": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "171": "<(RETURN,return;,return;)<SUB>24</SUB>>", "173": "<(MODIFIER,STATIC)>"}}