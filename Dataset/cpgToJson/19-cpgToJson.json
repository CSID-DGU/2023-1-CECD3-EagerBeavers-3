{"edges": [["22", "23"], ["22", "24"], ["22", "220"], ["22", "221"], ["22", "222"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "39"], ["24", "40"], ["24", "6"], ["24", "46"], ["24", "49"], ["24", "52"], ["24", "53"], ["24", "57"], ["24", "75"], ["24", "78"], ["24", "81"], ["24", "82"], ["24", "86"], ["24", "106"], ["24", "107"], ["24", "111"], ["24", "112"], ["24", "115"], ["24", "215"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "105"], ["101", "102"], ["101", "103"], ["103", "104"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "133"], ["125", "134"], ["125", "137"], ["125", "154"], ["125", "195"], ["125", "198"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["160", "167"], ["160", "192"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "179"], ["173", "187"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["181", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["25", "32"], ["28", "44"], ["40", "48"], ["46", "50"], ["49", "55"], ["53", "59"], ["75", "79"], ["78", "84"], ["82", "88"], ["107", "112"], ["112", "117"], ["215", "222"], ["27", "25"], ["42", "40"], ["48", "46"], ["50", "49"], ["55", "53"], ["59", "62"], ["62", "68"], ["62", "77"], ["65", "62"], ["67", "65"], ["77", "75"], ["79", "78"], ["84", "82"], ["88", "91"], ["91", "97"], ["91", "109"], ["94", "91"], ["96", "94"], ["109", "107"], ["117", "120"], ["120", "128"], ["120", "218"], ["123", "120"], ["216", "215"], ["30", "37"], ["33", "28"], ["44", "42"], ["68", "73"], ["71", "67"], ["97", "103"], ["100", "96"], ["134", "139"], ["195", "200"], ["218", "216"], ["32", "30"], ["35", "33"], ["73", "71"], ["101", "100"], ["127", "123"], ["127", "134"], ["138", "145"], ["138", "156"], ["155", "164"], ["155", "195"], ["199", "206"], ["199", "123"], ["37", "35"], ["103", "101"], ["128", "127"], ["139", "138"], ["144", "151"], ["149", "139"], ["156", "155"], ["162", "169"], ["192", "195"], ["200", "199"], ["205", "212"], ["210", "200"], ["145", "144"], ["151", "149"], ["164", "162"], ["168", "175"], ["168", "192"], ["206", "205"], ["212", "210"], ["169", "168"], ["174", "184"], ["179", "189"], ["187", "169"], ["175", "174"], ["181", "179"], ["189", "187"], ["184", "181"], ["22", "27"], ["23", "222"], ["25", "222"], ["30", "222"], ["33", "222"], ["33", "222"], ["33", "222"], ["28", "222"], ["42", "222"], ["40", "222"], ["40", "222"], ["46", "222"], ["53", "222"], ["53", "222"], ["75", "222"], ["78", "222"], ["79", "222"], ["78", "222"], ["78", "222"], ["82", "222"], ["82", "222"], ["107", "222"], ["107", "222"], ["107", "222"], ["112", "222"], ["117", "222"], ["120", "222"], ["120", "222"], ["120", "222"], ["215", "222"], ["215", "222"], ["215", "222"], ["127", "222"], ["127", "222"], ["134", "222"], ["138", "222"], ["162", "222"], ["162", "222"], ["192", "222"], ["192", "222"], ["195", "222"], ["195", "222"], ["199", "222"], ["199", "222"], ["205", "222"], ["210", "222"], ["210", "222"], ["210", "222"], ["174", "222"], ["181", "222"], ["179", "222"], ["179", "222"], ["187", "222"], ["187", "222"], ["144", "222"], ["149", "222"], ["149", "222"], ["123", "222"], ["96", "222"], ["101", "222"], ["103", "222"], ["101", "222"], ["100", "222"], ["96", "222"], ["96", "222"], ["94", "222"], ["67", "222"], ["71", "222"], ["71", "222"], ["67", "222"], ["67", "222"], ["65", "222"], ["181", "222"], ["22", "23"], ["22", "25"], ["42", "40"], ["42", "40"], ["22", "46"], ["55", "53"], ["22", "75"], ["84", "82"], ["109", "107"], ["22", "112"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["46", "49"], ["22", "49"], ["50", "49"], ["22", "59"], ["71", "67"], ["71", "67"], ["75", "78"], ["22", "78"], ["79", "78"], ["22", "88"], ["100", "96"], ["100", "96"], ["22", "117"], ["112", "215"], ["192", "215"], ["22", "215"], ["22", "30"], ["22", "38"], ["22", "42"], ["44", "42"], ["44", "50"], ["22", "50"], ["40", "55"], ["22", "55"], ["59", "62"], ["65", "62"], ["22", "62"], ["55", "62"], ["62", "65"], ["22", "65"], ["50", "79"], ["22", "79"], ["62", "84"], ["22", "84"], ["88", "91"], ["94", "91"], ["22", "91"], ["84", "91"], ["91", "94"], ["22", "94"], ["91", "109"], ["22", "109"], ["117", "120"], ["123", "120"], ["22", "120"], ["109", "120"], ["120", "123"], ["22", "123"], ["120", "134"], ["22", "134"], ["22", "195"], ["120", "195"], ["30", "33"], ["22", "33"], ["28", "44"], ["22", "44"], ["42", "71"], ["22", "71"], ["73", "71"], ["101", "100"], ["101", "100"], ["22", "100"], ["49", "73"], ["22", "73"], ["42", "101"], ["71", "101"], ["22", "101"], ["103", "101"], ["107", "127"], ["22", "127"], ["107", "138"], ["199", "138"], ["144", "138"], ["22", "138"], ["22", "144"], ["82", "149"], ["107", "155"], ["138", "155"], ["22", "155"], ["53", "162"], ["181", "162"], ["162", "192"], ["179", "192"], ["22", "192"], ["107", "199"], ["155", "199"], ["168", "199"], ["205", "199"], ["22", "199"], ["22", "205"], ["82", "210"], ["78", "103"], ["22", "103"], ["112", "192"], ["107", "168"], ["155", "168"], ["174", "168"], ["22", "168"], ["22", "174"], ["181", "179"], ["181", "179"], ["181", "179"], ["82", "187"], ["22", "181"], ["162", "181"], ["179", "181"], ["53", "181"], ["62", "68"], ["62", "73"], ["62", "67"], ["62", "65"], ["62", "71"], ["62", "62"], ["91", "94"], ["91", "96"], ["91", "103"], ["91", "97"], ["91", "91"], ["91", "101"], ["91", "100"], ["120", "120"], ["120", "128"], ["120", "127"], ["120", "123"], ["127", "134"], ["127", "138"], ["127", "195"], ["127", "155"], ["127", "139"], ["127", "200"], ["127", "199"], ["127", "156"], ["138", "145"], ["138", "149"], ["138", "151"], ["138", "144"], ["138", "138"], ["138", "139"], ["155", "192"], ["155", "169"], ["155", "162"], ["155", "168"], ["155", "164"], ["199", "206"], ["199", "212"], ["199", "205"], ["199", "210"], ["199", "200"], ["199", "199"], ["168", "169"], ["168", "179"], ["168", "189"], ["168", "168"], ["168", "181"], ["168", "187"], ["168", "184"], ["168", "174"], ["168", "175"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "42": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "44": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "47": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "49": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "50": "<(readLine,readLine())<SUB>4</SUB>>", "52": "<(LOCAL,int[] cc: int[])<SUB>5</SUB>>", "54": "<(IDENTIFIER,cc,int[] cc = new int[n])<SUB>5</SUB>>", "56": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "58": "<(LOCAL,int i: int)<SUB>6</SUB>>", "60": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "64": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "66": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "68": "<(&lt;operator&gt;.indexAccess,cc[i])<SUB>7</SUB>>", "70": "<(IDENTIFIER,i,cc[i] = parseInt(st.nextToken()))<SUB>7</SUB>>", "72": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "74": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "76": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "79": "<(readLine,readLine())<SUB>8</SUB>>", "81": "<(LOCAL,int[] aa: int[])<SUB>9</SUB>>", "83": "<(IDENTIFIER,aa,int[] aa = new int[n])<SUB>9</SUB>>", "85": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "87": "<(LOCAL,int i: int)<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "93": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,aa[i])<SUB>11</SUB>>", "99": "<(IDENTIFIER,i,aa[i] = Integer.parseInt(st.nextToken()) - 1)<SUB>11</SUB>>", "101": "<(parseInt,parseInt(st.nextToken()))<SUB>11</SUB>>", "103": "<(nextToken,nextToken())<SUB>11</SUB>>", "105": "<(LITERAL,1,Integer.parseInt(st.nextToken()) - 1)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.assignment,int[] used = new int[n])<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.alloc,new int[n])>", "111": "<(LOCAL,int ans: int)<SUB>13</SUB>>", "113": "<(IDENTIFIER,ans,int ans = 0)<SUB>13</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.equals,used[i] == 2)<SUB>15</SUB>>", "129": "<(IDENTIFIER,used,used[i] == 2)<SUB>15</SUB>>", "131": "<(LITERAL,2,used[i] == 2)<SUB>15</SUB>>", "133": "<(LOCAL,int j: int)<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,int j = i)<SUB>17</SUB>>", "137": "<(CONTROL_STRUCTURE,while (used[j] == 0),while (used[j] == 0))<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,used[j])<SUB>18</SUB>>", "141": "<(IDENTIFIER,j,used[j] == 0)<SUB>18</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,used[j])<SUB>19</SUB>>", "147": "<(IDENTIFIER,j,used[j] = 1)<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.assignment,j = aa[j])<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,aa[j])<SUB>20</SUB>>", "153": "<(IDENTIFIER,j,j = aa[j])<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.equals,used[j] == 1)<SUB>22</SUB>>", "157": "<(IDENTIFIER,used,used[j] == 1)<SUB>22</SUB>>", "159": "<(LITERAL,1,used[j] == 1)<SUB>22</SUB>>", "161": "<(LOCAL,int c: int)<SUB>23</SUB>>", "163": "<(IDENTIFIER,c,int c = cc[j])<SUB>23</SUB>>", "165": "<(IDENTIFIER,cc,int c = cc[j])<SUB>23</SUB>>", "167": "<(CONTROL_STRUCTURE,while (used[j] == 1),while (used[j] == 1))<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,used[j])<SUB>24</SUB>>", "171": "<(IDENTIFIER,j,used[j] == 1)<SUB>24</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,used[j])<SUB>25</SUB>>", "177": "<(IDENTIFIER,j,used[j] = 2)<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.assignment,c = Math.min(c, cc[j]))<SUB>26</SUB>>", "181": "<(min,Math.min(c, cc[j]))<SUB>26</SUB>>", "183": "<(IDENTIFIER,c,Math.min(c, cc[j]))<SUB>26</SUB>>", "185": "<(IDENTIFIER,cc,Math.min(c, cc[j]))<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.assignment,j = aa[j])<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,aa[j])<SUB>27</SUB>>", "191": "<(IDENTIFIER,j,j = aa[j])<SUB>27</SUB>>", "193": "<(IDENTIFIER,ans,ans += c)<SUB>29</SUB>>", "195": "<(&lt;operator&gt;.assignment,j = i)<SUB>31</SUB>>", "197": "<(IDENTIFIER,i,j = i)<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.equals,used[j] == 1)<SUB>32</SUB>>", "201": "<(IDENTIFIER,used,used[j] == 1)<SUB>32</SUB>>", "203": "<(LITERAL,1,used[j] == 1)<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.assignment,used[j] = 2)<SUB>33</SUB>>", "207": "<(IDENTIFIER,used,used[j] = 2)<SUB>33</SUB>>", "209": "<(LITERAL,2,used[j] = 2)<SUB>33</SUB>>", "211": "<(IDENTIFIER,j,j = aa[j])<SUB>34</SUB>>", "213": "<(IDENTIFIER,aa,j = aa[j])<SUB>34</SUB>>", "215": "<(println,System.out.println(ans))<SUB>37</SUB>>", "217": "<(IDENTIFIER,System,System.out.println(ans))<SUB>37</SUB>>", "219": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>37</SUB>>", "221": "<(MODIFIER,STATIC)>"}}