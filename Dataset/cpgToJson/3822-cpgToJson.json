{"edges": [["21", "23"], ["21", "529"], ["21", "530"], ["21", "531"], ["23", "24"], ["23", "27"], ["23", "39"], ["23", "42"], ["23", "4"], ["23", "47"], ["23", "50"], ["23", "53"], ["23", "59"], ["23", "65"], ["23", "71"], ["23", "110"], ["23", "115"], ["23", "150"], ["23", "194"], ["23", "214"], ["23", "258"], ["23", "261"], ["23", "280"], ["23", "281"], ["23", "289"], ["23", "308"], ["23", "488"], ["23", "525"], ["23", "527"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "3"], ["50", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "105"], ["77", "107"], ["77", "109"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "103"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["107", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "147"], ["143", "149"], ["144", "145"], ["144", "146"], ["147", "148"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "158"], ["150", "160"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["160", "164"], ["160", "167"], ["161", "162"], ["161", "163"], ["164", "5"], ["164", "165"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "177"], ["167", "179"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["179", "181"], ["179", "187"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["205", "206"], ["205", "213"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "216"], ["214", "219"], ["214", "224"], ["214", "226"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["224", "225"], ["226", "227"], ["226", "230"], ["226", "233"], ["227", "228"], ["227", "229"], ["230", "6"], ["230", "231"], ["231", "232"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["243", "245"], ["243", "251"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["249", "250"], ["251", "252"], ["251", "257"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["261", "266"], ["261", "269"], ["261", "271"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["269", "270"], ["271", "272"], ["271", "279"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "277"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "287"], ["283", "288"], ["284", "285"], ["284", "286"], ["289", "290"], ["289", "291"], ["289", "294"], ["289", "297"], ["289", "299"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["297", "298"], ["299", "300"], ["300", "301"], ["300", "302"], ["300", "307"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["308", "309"], ["308", "310"], ["308", "313"], ["308", "316"], ["308", "318"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "315"], ["316", "317"], ["318", "319"], ["319", "320"], ["319", "321"], ["319", "324"], ["319", "327"], ["319", "329"], ["321", "322"], ["321", "323"], ["324", "325"], ["324", "326"], ["327", "328"], ["329", "330"], ["330", "331"], ["330", "332"], ["330", "335"], ["330", "338"], ["330", "340"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "337"], ["338", "339"], ["340", "341"], ["340", "342"], ["340", "347"], ["340", "380"], ["340", "413"], ["340", "446"], ["340", "479"], ["342", "343"], ["342", "344"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "353"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "352"], ["353", "354"], ["354", "355"], ["354", "356"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "360"], ["358", "361"], ["361", "362"], ["361", "369"], ["362", "363"], ["362", "368"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["369", "370"], ["369", "379"], ["370", "371"], ["370", "376"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "375"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "386"], ["381", "382"], ["381", "383"], ["383", "384"], ["383", "385"], ["386", "387"], ["387", "388"], ["387", "389"], ["389", "390"], ["389", "391"], ["391", "392"], ["391", "393"], ["391", "394"], ["394", "395"], ["394", "402"], ["395", "396"], ["395", "401"], ["396", "397"], ["396", "400"], ["397", "398"], ["397", "399"], ["402", "403"], ["402", "410"], ["403", "404"], ["403", "409"], ["404", "405"], ["404", "406"], ["406", "407"], ["406", "408"], ["410", "411"], ["410", "412"], ["413", "414"], ["413", "417"], ["414", "415"], ["414", "416"], ["417", "418"], ["418", "419"], ["418", "420"], ["420", "421"], ["420", "422"], ["422", "423"], ["422", "424"], ["422", "425"], ["425", "426"], ["425", "435"], ["426", "427"], ["426", "434"], ["427", "428"], ["427", "433"], ["428", "429"], ["428", "430"], ["430", "431"], ["430", "432"], ["435", "436"], ["435", "445"], ["436", "437"], ["436", "442"], ["437", "438"], ["437", "439"], ["439", "440"], ["439", "441"], ["442", "443"], ["442", "444"], ["446", "447"], ["446", "450"], ["447", "448"], ["447", "449"], ["450", "451"], ["451", "452"], ["451", "453"], ["453", "454"], ["453", "455"], ["455", "456"], ["455", "457"], ["455", "458"], ["458", "459"], ["458", "468"], ["459", "460"], ["459", "467"], ["460", "461"], ["460", "464"], ["461", "462"], ["461", "463"], ["464", "465"], ["464", "466"], ["468", "469"], ["468", "476"], ["469", "470"], ["469", "475"], ["470", "471"], ["470", "472"], ["472", "473"], ["472", "474"], ["476", "477"], ["476", "478"], ["479", "480"], ["479", "487"], ["480", "481"], ["480", "486"], ["481", "482"], ["481", "485"], ["482", "483"], ["482", "484"], ["488", "489"], ["488", "490"], ["488", "493"], ["488", "496"], ["488", "498"], ["490", "491"], ["490", "492"], ["493", "494"], ["493", "495"], ["496", "497"], ["498", "499"], ["498", "523"], ["499", "500"], ["499", "501"], ["499", "504"], ["499", "507"], ["499", "509"], ["501", "502"], ["501", "503"], ["504", "505"], ["504", "506"], ["507", "508"], ["509", "510"], ["510", "511"], ["510", "512"], ["512", "513"], ["512", "522"], ["513", "514"], ["513", "521"], ["514", "515"], ["514", "520"], ["515", "516"], ["515", "519"], ["516", "517"], ["516", "518"], ["523", "524"], ["525", "526"], ["527", "528"], ["24", "32"], ["27", "41"], ["39", "46"], ["42", "49"], ["47", "51"], ["50", "57"], ["53", "63"], ["59", "69"], ["65", "73"], ["110", "117"], ["258", "263"], ["281", "291"], ["525", "527"], ["527", "531"], ["26", "24"], ["41", "39"], ["44", "42"], ["49", "47"], ["51", "50"], ["55", "53"], ["61", "59"], ["67", "65"], ["72", "80"], ["72", "112"], ["112", "110"], ["117", "120"], ["120", "128"], ["120", "152"], ["123", "120"], ["152", "155"], ["155", "163"], ["155", "196"], ["158", "155"], ["196", "199"], ["199", "207"], ["199", "216"], ["202", "199"], ["216", "221"], ["219", "229"], ["219", "258"], ["224", "221"], ["263", "266"], ["266", "275"], ["266", "284"], ["269", "266"], ["271", "269"], ["283", "281"], ["291", "294"], ["294", "303"], ["294", "310"], ["297", "294"], ["310", "313"], ["313", "321"], ["313", "490"], ["316", "313"], ["490", "493"], ["493", "501"], ["493", "525"], ["496", "493"], ["30", "37"], ["33", "27"], ["46", "44"], ["57", "55"], ["63", "61"], ["69", "67"], ["73", "72"], ["105", "107"], ["107", "109"], ["109", "531"], ["161", "165"], ["164", "169"], ["205", "202"], ["221", "219"], ["227", "231"], ["230", "235"], ["272", "271"], ["284", "283"], ["300", "297"], ["523", "496"], ["32", "30"], ["35", "33"], ["80", "83"], ["83", "91"], ["83", "105"], ["86", "83"], ["128", "131"], ["131", "139"], ["131", "123"], ["134", "131"], ["163", "161"], ["165", "164"], ["169", "174"], ["172", "185"], ["172", "158"], ["177", "174"], ["206", "205"], ["229", "227"], ["231", "230"], ["235", "238"], ["238", "249"], ["238", "224"], ["241", "238"], ["273", "272"], ["302", "300"], ["321", "324"], ["324", "332"], ["324", "316"], ["327", "324"], ["501", "504"], ["504", "516"], ["504", "523"], ["507", "504"], ["37", "35"], ["103", "86"], ["137", "134"], ["174", "172"], ["181", "189"], ["187", "177"], ["207", "210"], ["210", "206"], ["245", "253"], ["251", "241"], ["275", "273"], ["303", "302"], ["510", "507"], ["91", "94"], ["94", "100"], ["94", "103"], ["97", "94"], ["138", "146"], ["183", "181"], ["188", "187"], ["247", "245"], ["252", "251"], ["332", "335"], ["335", "345"], ["335", "327"], ["338", "335"], ["512", "510"], ["100", "97"], ["139", "138"], ["144", "147"], ["147", "137"], ["185", "183"], ["189", "188"], ["249", "247"], ["253", "252"], ["342", "350"], ["479", "338"], ["513", "512"], ["146", "144"], ["344", "342"], ["348", "357"], ["348", "383"], ["381", "390"], ["381", "414"], ["414", "421"], ["414", "447"], ["447", "454"], ["447", "482"], ["480", "479"], ["514", "513"], ["345", "344"], ["350", "348"], ["354", "383"], ["383", "381"], ["387", "414"], ["418", "447"], ["451", "482"], ["481", "480"], ["515", "514"], ["356", "354"], ["389", "387"], ["420", "418"], ["453", "451"], ["482", "481"], ["516", "515"], ["357", "364"], ["358", "356"], ["390", "397"], ["391", "389"], ["421", "430"], ["422", "420"], ["454", "461"], ["455", "453"], ["361", "358"], ["394", "391"], ["425", "422"], ["458", "455"], ["362", "373"], ["369", "361"], ["395", "406"], ["402", "394"], ["426", "439"], ["435", "425"], ["459", "472"], ["468", "458"], ["363", "362"], ["370", "369"], ["396", "395"], ["403", "410"], ["410", "402"], ["427", "426"], ["436", "435"], ["460", "459"], ["469", "476"], ["476", "468"], ["364", "363"], ["371", "376"], ["376", "370"], ["397", "396"], ["404", "403"], ["428", "427"], ["437", "442"], ["442", "436"], ["461", "464"], ["464", "460"], ["470", "469"], ["373", "371"], ["406", "404"], ["430", "428"], ["439", "437"], ["472", "470"], ["21", "26"], ["109", "531"], ["22", "531"], ["24", "531"], ["30", "531"], ["33", "531"], ["33", "531"], ["33", "531"], ["27", "531"], ["39", "531"], ["42", "531"], ["42", "531"], ["47", "531"], ["50", "531"], ["50", "531"], ["53", "531"], ["59", "531"], ["59", "531"], ["67", "531"], ["69", "531"], ["67", "531"], ["65", "531"], ["65", "531"], ["73", "531"], ["72", "531"], ["72", "531"], ["80", "531"], ["83", "531"], ["83", "531"], ["83", "531"], ["105", "531"], ["107", "531"], ["107", "531"], ["91", "531"], ["94", "531"], ["94", "531"], ["94", "531"], ["103", "531"], ["86", "531"], ["100", "531"], ["97", "531"], ["300", "531"], ["21", "22"], ["21", "24"], ["21", "39"], ["21", "47"], ["55", "53"], ["55", "53"], ["61", "59"], ["61", "59"], ["67", "65"], ["67", "65"], ["112", "110"], ["112", "110"], ["21", "258"], ["283", "281"], ["283", "281"], ["283", "281"], ["24", "27"], ["21", "27"], ["30", "27"], ["33", "27"], ["39", "42"], ["21", "42"], ["47", "50"], ["21", "50"], ["51", "50"], ["21", "117"], ["21", "152"], ["21", "196"], ["21", "216"], ["73", "258"], ["21", "263"], ["21", "291"], ["21", "310"], ["21", "490"], ["51", "525"], ["231", "525"], ["165", "525"], ["21", "525"], ["42", "527"], ["523", "527"], ["21", "527"], ["21", "30"], ["21", "38"], ["27", "51"], ["21", "51"], ["21", "55"], ["57", "55"], ["55", "61"], ["21", "61"], ["63", "61"], ["61", "67"], ["21", "67"], ["69", "67"], ["73", "72"], ["73", "72"], ["21", "72"], ["21", "109"], ["53", "112"], ["21", "112"], ["59", "112"], ["117", "120"], ["123", "120"], ["21", "120"], ["112", "120"], ["120", "123"], ["21", "123"], ["152", "155"], ["158", "155"], ["21", "155"], ["120", "155"], ["155", "158"], ["21", "158"], ["21", "161"], ["196", "199"], ["202", "199"], ["21", "199"], ["155", "199"], ["199", "202"], ["21", "202"], ["216", "219"], ["224", "219"], ["21", "219"], ["221", "219"], ["221", "219"], ["219", "224"], ["21", "224"], ["21", "227"], ["263", "266"], ["269", "266"], ["21", "266"], ["112", "266"], ["238", "266"], ["210", "266"], ["174", "266"], ["131", "266"], ["266", "269"], ["21", "269"], ["21", "271"], ["258", "283"], ["21", "283"], ["221", "283"], ["275", "283"], ["266", "283"], ["291", "294"], ["297", "294"], ["21", "294"], ["283", "294"], ["294", "297"], ["21", "297"], ["310", "313"], ["316", "313"], ["21", "313"], ["258", "313"], ["313", "316"], ["373", "316"], ["406", "316"], ["439", "316"], ["472", "316"], ["21", "316"], ["490", "493"], ["496", "493"], ["21", "493"], ["294", "493"], ["324", "493"], ["493", "496"], ["21", "496"], ["30", "33"], ["21", "33"], ["50", "57"], ["21", "57"], ["57", "63"], ["21", "63"], ["63", "69"], ["21", "69"], ["65", "73"], ["21", "73"], ["21", "80"], ["51", "105"], ["21", "105"], ["42", "107"], ["103", "107"], ["21", "107"], ["21", "128"], ["161", "164"], ["21", "164"], ["165", "164"], ["21", "169"], ["21", "205"], ["199", "221"], ["21", "221"], ["227", "230"], ["21", "230"], ["231", "230"], ["21", "235"], ["258", "284"], ["21", "284"], ["21", "300"], ["21", "321"], ["21", "501"], ["42", "523"], ["510", "523"], ["21", "523"], ["80", "83"], ["86", "83"], ["21", "83"], ["53", "83"], ["83", "86"], ["21", "86"], ["128", "131"], ["134", "131"], ["21", "131"], ["112", "131"], ["131", "134"], ["21", "134"], ["144", "137"], ["147", "137"], ["21", "137"], ["51", "165"], ["21", "165"], ["169", "172"], ["177", "172"], ["21", "172"], ["174", "172"], ["174", "172"], ["172", "177"], ["21", "177"], ["183", "181"], ["183", "181"], ["51", "231"], ["165", "231"], ["21", "231"], ["235", "238"], ["241", "238"], ["21", "238"], ["112", "238"], ["210", "238"], ["174", "238"], ["131", "238"], ["238", "241"], ["21", "241"], ["247", "245"], ["247", "245"], ["321", "324"], ["327", "324"], ["21", "324"], ["294", "324"], ["350", "324"], ["324", "327"], ["414", "327"], ["442", "327"], ["21", "327"], ["501", "504"], ["507", "504"], ["21", "504"], ["283", "504"], ["335", "504"], ["504", "507"], ["21", "507"], ["21", "91"], ["42", "103"], ["100", "103"], ["21", "103"], ["112", "174"], ["131", "174"], ["21", "174"], ["137", "187"], ["181", "187"], ["21", "187"], ["112", "210"], ["174", "210"], ["131", "210"], ["21", "210"], ["187", "251"], ["137", "251"], ["245", "251"], ["21", "251"], ["221", "275"], ["21", "275"], ["21", "332"], ["42", "510"], ["523", "510"], ["21", "510"], ["513", "510"], ["513", "510"], ["91", "94"], ["97", "94"], ["21", "94"], ["59", "94"], ["94", "97"], ["21", "97"], ["21", "144"], ["21", "149"], ["67", "183"], ["21", "183"], ["185", "183"], ["67", "247"], ["183", "247"], ["21", "247"], ["249", "247"], ["332", "335"], ["338", "335"], ["21", "335"], ["283", "335"], ["383", "335"], ["447", "338"], ["476", "338"], ["21", "338"], ["21", "342"], ["342", "479"], ["354", "479"], ["387", "479"], ["418", "479"], ["451", "479"], ["21", "479"], ["513", "512"], ["513", "512"], ["21", "512"], ["42", "100"], ["103", "100"], ["21", "100"], ["144", "147"], ["21", "147"], ["164", "185"], ["21", "185"], ["230", "249"], ["21", "249"], ["21", "513"], ["21", "344"], ["324", "348"], ["414", "348"], ["442", "348"], ["21", "348"], ["350", "348"], ["350", "348"], ["21", "354"], ["358", "354"], ["358", "354"], ["358", "354"], ["335", "381"], ["21", "381"], ["383", "381"], ["383", "381"], ["21", "387"], ["391", "387"], ["391", "387"], ["391", "387"], ["348", "414"], ["21", "414"], ["21", "418"], ["422", "418"], ["422", "418"], ["422", "418"], ["381", "447"], ["21", "447"], ["21", "451"], ["455", "451"], ["455", "451"], ["455", "451"], ["324", "350"], ["21", "350"], ["335", "383"], ["21", "383"], ["21", "356"], ["358", "356"], ["358", "356"], ["358", "356"], ["21", "389"], ["391", "389"], ["391", "389"], ["391", "389"], ["21", "420"], ["422", "420"], ["422", "420"], ["422", "420"], ["21", "453"], ["455", "453"], ["455", "453"], ["455", "453"], ["391", "358"], ["422", "358"], ["455", "358"], ["21", "358"], ["342", "358"], ["362", "358"], ["362", "358"], ["358", "391"], ["422", "391"], ["455", "391"], ["21", "391"], ["342", "391"], ["354", "391"], ["395", "391"], ["395", "391"], ["358", "422"], ["391", "422"], ["455", "422"], ["21", "422"], ["342", "422"], ["354", "422"], ["387", "422"], ["426", "422"], ["426", "422"], ["358", "455"], ["391", "455"], ["422", "455"], ["21", "455"], ["342", "455"], ["354", "455"], ["387", "455"], ["418", "455"], ["459", "455"], ["459", "455"], ["362", "361"], ["362", "361"], ["395", "394"], ["395", "394"], ["426", "425"], ["426", "425"], ["459", "458"], ["459", "458"], ["395", "362"], ["21", "362"], ["362", "395"], ["21", "395"], ["21", "426"], ["21", "459"], ["381", "410"], ["21", "410"], ["464", "476"], ["21", "476"], ["348", "376"], ["21", "376"], ["430", "442"], ["21", "442"], ["447", "464"], ["21", "464"], ["313", "373"], ["406", "373"], ["439", "373"], ["472", "373"], ["21", "373"], ["313", "406"], ["373", "406"], ["439", "406"], ["472", "406"], ["21", "406"], ["414", "430"], ["21", "430"], ["313", "439"], ["373", "439"], ["406", "439"], ["472", "439"], ["21", "439"], ["313", "472"], ["373", "472"], ["406", "472"], ["439", "472"], ["21", "472"], ["72", "120"], ["72", "80"], ["72", "152"], ["72", "258"], ["72", "117"], ["72", "493"], ["72", "216"], ["72", "107"], ["72", "527"], ["72", "291"], ["72", "294"], ["72", "263"], ["72", "105"], ["72", "110"], ["72", "313"], ["72", "266"], ["72", "196"], ["72", "283"], ["72", "112"], ["72", "281"], ["72", "490"], ["72", "199"], ["72", "310"], ["72", "525"], ["72", "109"], ["72", "284"], ["72", "221"], ["72", "155"], ["72", "83"], ["72", "219"], ["120", "120"], ["120", "128"], ["120", "123"], ["120", "131"], ["155", "172"], ["155", "169"], ["155", "165"], ["155", "161"], ["155", "163"], ["155", "174"], ["155", "158"], ["155", "164"], ["155", "155"], ["199", "207"], ["199", "206"], ["199", "202"], ["199", "199"], ["199", "205"], ["199", "210"], ["219", "224"], ["219", "230"], ["219", "238"], ["219", "229"], ["219", "227"], ["219", "231"], ["219", "221"], ["219", "235"], ["219", "219"], ["266", "272"], ["266", "269"], ["266", "273"], ["266", "271"], ["266", "266"], ["266", "275"], ["294", "300"], ["294", "297"], ["294", "294"], ["294", "303"], ["294", "302"], ["313", "324"], ["313", "316"], ["313", "313"], ["313", "321"], ["493", "493"], ["493", "501"], ["493", "523"], ["493", "504"], ["493", "496"], ["83", "103"], ["83", "86"], ["83", "94"], ["83", "91"], ["83", "83"], ["131", "144"], ["131", "137"], ["131", "146"], ["131", "134"], ["131", "138"], ["131", "147"], ["131", "131"], ["131", "139"], ["172", "172"], ["172", "189"], ["172", "187"], ["172", "188"], ["172", "181"], ["172", "174"], ["172", "177"], ["172", "185"], ["172", "183"], ["238", "247"], ["238", "251"], ["238", "238"], ["238", "249"], ["238", "253"], ["238", "241"], ["238", "245"], ["238", "252"], ["324", "324"], ["324", "327"], ["324", "335"], ["324", "332"], ["504", "512"], ["504", "516"], ["504", "513"], ["504", "514"], ["504", "510"], ["504", "504"], ["504", "507"], ["504", "515"], ["94", "100"], ["94", "94"], ["94", "97"], ["335", "383"], ["335", "480"], ["335", "479"], ["335", "348"], ["335", "481"], ["335", "482"], ["335", "345"], ["335", "344"], ["335", "338"], ["335", "414"], ["335", "447"], ["335", "335"], ["335", "342"], ["335", "381"], ["335", "350"], ["348", "376"], ["348", "362"], ["348", "364"], ["348", "357"], ["348", "373"], ["348", "361"], ["348", "354"], ["348", "363"], ["348", "358"], ["348", "356"], ["348", "370"], ["348", "371"], ["348", "369"], ["381", "390"], ["381", "404"], ["381", "402"], ["381", "397"], ["381", "387"], ["381", "391"], ["381", "403"], ["381", "394"], ["381", "396"], ["381", "389"], ["381", "410"], ["381", "395"], ["381", "406"], ["414", "428"], ["414", "430"], ["414", "418"], ["414", "426"], ["414", "437"], ["414", "425"], ["414", "427"], ["414", "439"], ["414", "435"], ["414", "442"], ["414", "420"], ["414", "421"], ["414", "422"], ["414", "436"], ["447", "460"], ["447", "476"], ["447", "472"], ["447", "453"], ["447", "461"], ["447", "458"], ["447", "451"], ["447", "454"], ["447", "469"], ["447", "464"], ["447", "470"], ["447", "455"], ["447", "468"], ["447", "459"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "33": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "37": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "39": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "4": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "48": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "50": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "51": "<(readLine,readLine())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,N = parseInt(st.nextToken()))<SUB>5</SUB>>", "55": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "57": "<(nextToken,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,M = parseInt(st.nextToken()))<SUB>6</SUB>>", "61": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "63": "<(nextToken,nextToken())<SUB>6</SUB>>", "65": "<(&lt;operator&gt;.assignment,K = parseInt(st.nextToken()))<SUB>7</SUB>>", "67": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "69": "<(nextToken,nextToken())<SUB>7</SUB>>", "71": "<(CONTROL_STRUCTURE,if (K % 2 == 1),if (K % 2 == 1))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.modulo,K % 2)<SUB>8</SUB>>", "75": "<(LITERAL,2,K % 2)<SUB>8</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "79": "<(LOCAL,int i: int)<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "85": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "93": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "95": "<(IDENTIFIER,j,j &lt; M)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,j++)<SUB>10</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "101": "<(IDENTIFIER,pw,print(&quot;-1 &quot;))<SUB>11</SUB>>", "103": "<(println,println())<SUB>13</SUB>>", "105": "<(close,close())<SUB>15</SUB>>", "107": "<(close,close())<SUB>15</SUB>>", "109": "<(RETURN,return;,return;)<SUB>16</SUB>>", "111": "<(IDENTIFIER,graph,graph = new ArrayList[N][M])<SUB>18</SUB>>", "113": "<(IDENTIFIER,N,new ArrayList[N][M])<SUB>18</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "121": "<(IDENTIFIER,i,i &lt; N)<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "127": "<(LOCAL,int j: int)<SUB>20</SUB>>", "129": "<(IDENTIFIER,j,int j = 0)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>20</SUB>>", "133": "<(IDENTIFIER,M,j &lt; M)<SUB>20</SUB>>", "135": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.assignment,graph[i][j] = new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,graph[i])<SUB>21</SUB>>", "141": "<(IDENTIFIER,i,graph[i][j] = new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "145": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "147": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "149": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "151": "<(LOCAL,int i: int)<SUB>24</SUB>>", "153": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>24</SUB>>", "157": "<(IDENTIFIER,N,i &lt; N)<SUB>24</SUB>>", "159": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>25</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>25</SUB>>", "166": "<(IDENTIFIER,br,readLine())<SUB>25</SUB>>", "168": "<(LOCAL,int j: int)<SUB>26</SUB>>", "170": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "172": "<(&lt;operator&gt;.lessThan,j &lt; M - 1)<SUB>26</SUB>>", "174": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>26</SUB>>", "176": "<(LITERAL,1,M - 1)<SUB>26</SUB>>", "178": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "180": "<(LOCAL,int w: int)<SUB>27</SUB>>", "182": "<(IDENTIFIER,w,int w = parseInt(st.nextToken()))<SUB>27</SUB>>", "184": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>27</SUB>>", "186": "<(IDENTIFIER,st,nextToken())<SUB>27</SUB>>", "188": "<(&lt;operator&gt;.indexAccess,graph[i][j])<SUB>28</SUB>>", "190": "<(IDENTIFIER,graph,add(w))<SUB>28</SUB>>", "192": "<(IDENTIFIER,j,add(w))<SUB>28</SUB>>", "194": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>31</SUB>>", "196": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>31</SUB>>", "198": "<(LITERAL,0,int i = 0)<SUB>31</SUB>>", "200": "<(IDENTIFIER,i,i &lt; N)<SUB>31</SUB>>", "202": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "204": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "206": "<(&lt;operator&gt;.indexAccess,graph[i][M - 1])<SUB>32</SUB>>", "208": "<(IDENTIFIER,graph,add(0))<SUB>32</SUB>>", "210": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>32</SUB>>", "212": "<(LITERAL,1,M - 1)<SUB>32</SUB>>", "214": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>34</SUB>>", "216": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>34</SUB>>", "218": "<(LITERAL,0,int i = 0)<SUB>34</SUB>>", "220": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>34</SUB>>", "222": "<(IDENTIFIER,N,N - 1)<SUB>34</SUB>>", "224": "<(&lt;operator&gt;.postIncrement,i++)<SUB>34</SUB>>", "226": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "228": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>35</SUB>>", "230": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>35</SUB>>", "231": "<(readLine,readLine())<SUB>35</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>36</SUB>>", "235": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "237": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "239": "<(IDENTIFIER,j,j &lt; M)<SUB>36</SUB>>", "241": "<(&lt;operator&gt;.postIncrement,j++)<SUB>36</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "245": "<(&lt;operator&gt;.assignment,int w = parseInt(st.nextToken()))<SUB>37</SUB>>", "247": "<(parseInt,parseInt(st.nextToken()))<SUB>37</SUB>>", "249": "<(nextToken,nextToken())<SUB>37</SUB>>", "251": "<(add,add(w))<SUB>38</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,graph[i])<SUB>38</SUB>>", "255": "<(IDENTIFIER,i,add(w))<SUB>38</SUB>>", "257": "<(IDENTIFIER,w,add(w))<SUB>38</SUB>>", "259": "<(IDENTIFIER,K,K /= 2)<SUB>41</SUB>>", "261": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; M); i++),for (int i = 0; Some(i &lt; M); i++))<SUB>42</SUB>>", "263": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>42</SUB>>", "265": "<(LITERAL,0,int i = 0)<SUB>42</SUB>>", "267": "<(IDENTIFIER,i,i &lt; M)<SUB>42</SUB>>", "269": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "271": "<(add,add(0))<SUB>42</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,graph[N - 1])<SUB>42</SUB>>", "275": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>42</SUB>>", "277": "<(LITERAL,1,N - 1)<SUB>42</SUB>>", "279": "<(LITERAL,0,add(0))<SUB>42</SUB>>", "281": "<(&lt;operator&gt;.assignment,long[][][] ans = new long[K + 1][N][M])<SUB>43</SUB>>", "283": "<(&lt;operator&gt;.alloc,new long[K + 1][N][M])>", "285": "<(IDENTIFIER,K,K + 1)<SUB>43</SUB>>", "287": "<(IDENTIFIER,N,new long[K + 1][N][M])<SUB>43</SUB>>", "289": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>44</SUB>>", "291": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>44</SUB>>", "293": "<(LITERAL,0,int i = 0)<SUB>44</SUB>>", "295": "<(IDENTIFIER,i,i &lt; N)<SUB>44</SUB>>", "297": "<(&lt;operator&gt;.postIncrement,i++)<SUB>44</SUB>>", "299": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "301": "<(IDENTIFIER,Arrays,fill(ans[0][i], 0))<SUB>45</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,ans[0])<SUB>45</SUB>>", "305": "<(LITERAL,0,fill(ans[0][i], 0))<SUB>45</SUB>>", "307": "<(LITERAL,0,fill(ans[0][i], 0))<SUB>45</SUB>>", "309": "<(LOCAL,int i: int)<SUB>47</SUB>>", "311": "<(IDENTIFIER,i,int i = 1)<SUB>47</SUB>>", "313": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= K)<SUB>47</SUB>>", "315": "<(IDENTIFIER,K,i &lt;= K)<SUB>47</SUB>>", "317": "<(IDENTIFIER,i,i++)<SUB>47</SUB>>", "319": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt; N); x++),for (int x = 0; Some(x &lt; N); x++))<SUB>48</SUB>>", "321": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>48</SUB>>", "323": "<(LITERAL,0,int x = 0)<SUB>48</SUB>>", "325": "<(IDENTIFIER,x,x &lt; N)<SUB>48</SUB>>", "327": "<(&lt;operator&gt;.postIncrement,x++)<SUB>48</SUB>>", "329": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "331": "<(LOCAL,int y: int)<SUB>49</SUB>>", "333": "<(IDENTIFIER,y,int y = 0)<SUB>49</SUB>>", "335": "<(&lt;operator&gt;.lessThan,y &lt; M)<SUB>49</SUB>>", "337": "<(IDENTIFIER,M,y &lt; M)<SUB>49</SUB>>", "339": "<(IDENTIFIER,y,y++)<SUB>49</SUB>>", "341": "<(LOCAL,long cur: long)<SUB>50</SUB>>", "343": "<(IDENTIFIER,cur,long cur = (long) 1e17)<SUB>50</SUB>>", "345": "<(TYPE_REF,long,long)<SUB>50</SUB>>", "347": "<(CONTROL_STRUCTURE,if (x &lt; N - 1),if (x &lt; N - 1))<SUB>51</SUB>>", "349": "<(IDENTIFIER,x,x &lt; N - 1)<SUB>51</SUB>>", "351": "<(IDENTIFIER,N,N - 1)<SUB>51</SUB>>", "353": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "355": "<(IDENTIFIER,cur,cur = (long) Math.min(cur, graph[x][y].get(1) + ans[i - 1][x + 1][y]))<SUB>52</SUB>>", "357": "<(TYPE_REF,long,long)<SUB>52</SUB>>", "359": "<(IDENTIFIER,Math,min(cur, graph[x][y].get(1) + ans[i - 1][x + 1][y]))<SUB>52</SUB>>", "361": "<(&lt;operator&gt;.addition,graph[x][y].get(1) + ans[i - 1][x + 1][y])<SUB>52</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,graph[x][y])<SUB>52</SUB>>", "365": "<(IDENTIFIER,graph,get(1))<SUB>52</SUB>>", "367": "<(IDENTIFIER,y,get(1))<SUB>52</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,ans[i - 1][x + 1][y])<SUB>52</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,ans[i - 1])<SUB>52</SUB>>", "373": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>52</SUB>>", "375": "<(LITERAL,1,i - 1)<SUB>52</SUB>>", "377": "<(IDENTIFIER,x,x + 1)<SUB>52</SUB>>", "379": "<(IDENTIFIER,y,graph[x][y].get(1) + ans[i - 1][x + 1][y])<SUB>52</SUB>>", "381": "<(&lt;operator&gt;.lessThan,y &lt; M - 1)<SUB>54</SUB>>", "383": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>54</SUB>>", "385": "<(LITERAL,1,M - 1)<SUB>54</SUB>>", "387": "<(&lt;operator&gt;.assignment,cur = (long) Math.min(cur, graph[x][y].get(0) + ans[i - 1][x][y + 1]))<SUB>55</SUB>>", "389": "<(&lt;operator&gt;.cast,(long) Math.min(cur, graph[x][y].get(0) + ans[i - 1][x][y + 1]))<SUB>55</SUB>>", "391": "<(min,min(cur, graph[x][y].get(0) + ans[i - 1][x][y + 1]))<SUB>55</SUB>>", "393": "<(IDENTIFIER,cur,min(cur, graph[x][y].get(0) + ans[i - 1][x][y + 1]))<SUB>55</SUB>>", "395": "<(get,get(0))<SUB>55</SUB>>", "397": "<(&lt;operator&gt;.indexAccess,graph[x])<SUB>55</SUB>>", "399": "<(IDENTIFIER,x,get(0))<SUB>55</SUB>>", "401": "<(LITERAL,0,get(0))<SUB>55</SUB>>", "403": "<(&lt;operator&gt;.indexAccess,ans[i - 1][x])<SUB>55</SUB>>", "405": "<(IDENTIFIER,ans,graph[x][y].get(0) + ans[i - 1][x][y + 1])<SUB>55</SUB>>", "407": "<(IDENTIFIER,i,i - 1)<SUB>55</SUB>>", "409": "<(IDENTIFIER,x,graph[x][y].get(0) + ans[i - 1][x][y + 1])<SUB>55</SUB>>", "411": "<(IDENTIFIER,y,y + 1)<SUB>55</SUB>>", "413": "<(CONTROL_STRUCTURE,if (x &gt; 0),if (x &gt; 0))<SUB>57</SUB>>", "415": "<(IDENTIFIER,x,x &gt; 0)<SUB>57</SUB>>", "417": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "419": "<(IDENTIFIER,cur,cur = (long) Math.min(cur, graph[x - 1][y].get(1) + ans[i - 1][x - 1][y]))<SUB>58</SUB>>", "421": "<(TYPE_REF,long,long)<SUB>58</SUB>>", "423": "<(IDENTIFIER,Math,min(cur, graph[x - 1][y].get(1) + ans[i - 1][x - 1][y]))<SUB>58</SUB>>", "425": "<(&lt;operator&gt;.addition,graph[x - 1][y].get(1) + ans[i - 1][x - 1][y])<SUB>58</SUB>>", "427": "<(&lt;operator&gt;.indexAccess,graph[x - 1][y])<SUB>58</SUB>>", "429": "<(IDENTIFIER,graph,get(1))<SUB>58</SUB>>", "431": "<(IDENTIFIER,x,x - 1)<SUB>58</SUB>>", "433": "<(IDENTIFIER,y,get(1))<SUB>58</SUB>>", "435": "<(&lt;operator&gt;.indexAccess,ans[i - 1][x - 1][y])<SUB>58</SUB>>", "437": "<(&lt;operator&gt;.indexAccess,ans[i - 1])<SUB>58</SUB>>", "439": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>58</SUB>>", "441": "<(LITERAL,1,i - 1)<SUB>58</SUB>>", "443": "<(IDENTIFIER,x,x - 1)<SUB>58</SUB>>", "445": "<(IDENTIFIER,y,graph[x - 1][y].get(1) + ans[i - 1][x - 1][y])<SUB>58</SUB>>", "447": "<(&lt;operator&gt;.greaterThan,y &gt; 0)<SUB>61</SUB>>", "449": "<(LITERAL,0,y &gt; 0)<SUB>61</SUB>>", "451": "<(&lt;operator&gt;.assignment,cur = (long) Math.min(cur, graph[x][y - 1].get(0) + ans[i - 1][x][y - 1]))<SUB>62</SUB>>", "453": "<(&lt;operator&gt;.cast,(long) Math.min(cur, graph[x][y - 1].get(0) + ans[i - 1][x][y - 1]))<SUB>62</SUB>>", "455": "<(min,min(cur, graph[x][y - 1].get(0) + ans[i - 1][x][y - 1]))<SUB>62</SUB>>", "457": "<(IDENTIFIER,cur,min(cur, graph[x][y - 1].get(0) + ans[i - 1][x][y - 1]))<SUB>62</SUB>>", "459": "<(get,get(0))<SUB>62</SUB>>", "461": "<(&lt;operator&gt;.indexAccess,graph[x])<SUB>62</SUB>>", "463": "<(IDENTIFIER,x,get(0))<SUB>62</SUB>>", "465": "<(IDENTIFIER,y,y - 1)<SUB>62</SUB>>", "467": "<(LITERAL,0,get(0))<SUB>62</SUB>>", "469": "<(&lt;operator&gt;.indexAccess,ans[i - 1][x])<SUB>62</SUB>>", "471": "<(IDENTIFIER,ans,graph[x][y - 1].get(0) + ans[i - 1][x][y - 1])<SUB>62</SUB>>", "473": "<(IDENTIFIER,i,i - 1)<SUB>62</SUB>>", "475": "<(IDENTIFIER,x,graph[x][y - 1].get(0) + ans[i - 1][x][y - 1])<SUB>62</SUB>>", "477": "<(IDENTIFIER,y,y - 1)<SUB>62</SUB>>", "479": "<(&lt;operator&gt;.assignment,ans[i][x][y] = cur)<SUB>64</SUB>>", "481": "<(&lt;operator&gt;.indexAccess,ans[i][x])<SUB>64</SUB>>", "483": "<(IDENTIFIER,ans,ans[i][x][y] = cur)<SUB>64</SUB>>", "485": "<(IDENTIFIER,x,ans[i][x][y] = cur)<SUB>64</SUB>>", "487": "<(IDENTIFIER,cur,ans[i][x][y] = cur)<SUB>64</SUB>>", "489": "<(LOCAL,int i: int)<SUB>68</SUB>>", "491": "<(IDENTIFIER,i,int i = 0)<SUB>68</SUB>>", "493": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>68</SUB>>", "495": "<(IDENTIFIER,N,i &lt; N)<SUB>68</SUB>>", "497": "<(IDENTIFIER,i,i++)<SUB>68</SUB>>", "499": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>69</SUB>>", "501": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>69</SUB>>", "503": "<(LITERAL,0,int j = 0)<SUB>69</SUB>>", "505": "<(IDENTIFIER,j,j &lt; M)<SUB>69</SUB>>", "507": "<(&lt;operator&gt;.postIncrement,j++)<SUB>69</SUB>>", "509": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "511": "<(IDENTIFIER,pw,print(ans[K][i][j] * 2 + &quot; &quot;))<SUB>70</SUB>>", "513": "<(&lt;operator&gt;.multiplication,ans[K][i][j] * 2)<SUB>70</SUB>>", "515": "<(&lt;operator&gt;.indexAccess,ans[K][i])<SUB>70</SUB>>", "517": "<(IDENTIFIER,ans,ans[K][i][j] * 2)<SUB>70</SUB>>", "519": "<(IDENTIFIER,i,ans[K][i][j] * 2)<SUB>70</SUB>>", "521": "<(LITERAL,2,ans[K][i][j] * 2)<SUB>70</SUB>>", "523": "<(println,println())<SUB>72</SUB>>", "525": "<(close,close())<SUB>74</SUB>>", "527": "<(close,close())<SUB>74</SUB>>", "529": "<(MODIFIER,PUBLIC)>", "531": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}