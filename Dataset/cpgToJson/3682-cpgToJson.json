{"edges": [["23", "25"], ["23", "211"], ["23", "212"], ["23", "213"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "31"], ["25", "34"], ["25", "8"], ["25", "36"], ["25", "39"], ["25", "40"], ["25", "41"], ["25", "42"], ["25", "43"], ["25", "47"], ["25", "51"], ["25", "55"], ["25", "56"], ["25", "61"], ["25", "83"], ["25", "84"], ["25", "85"], ["25", "88"], ["25", "91"], ["25", "200"], ["25", "209"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["36", "37"], ["36", "38"], ["39", "7"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "66"], ["62", "63"], ["62", "65"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "72"], ["68", "82"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "78"], ["74", "75"], ["74", "77"], ["75", "76"], ["78", "79"], ["78", "81"], ["79", "80"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "101"], ["95", "112"], ["95", "117"], ["95", "122"], ["95", "133"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "132"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "143"], ["133", "145"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "148"], ["145", "157"], ["145", "166"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "189"], ["167", "168"], ["167", "183"], ["168", "169"], ["168", "180"], ["169", "170"], ["169", "177"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["191", "199"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["195", "198"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "207"], ["203", "204"], ["203", "206"], ["204", "205"], ["207", "208"], ["209", "210"], ["26", "29"], ["29", "33"], ["31", "34"], ["34", "38"], ["36", "39"], ["39", "45"], ["43", "49"], ["47", "53"], ["51", "58"], ["56", "63"], ["85", "88"], ["88", "93"], ["200", "209"], ["209", "213"], ["28", "26"], ["33", "31"], ["38", "36"], ["45", "43"], ["49", "47"], ["53", "51"], ["58", "56"], ["62", "71"], ["62", "85"], ["66", "63"], ["92", "99"], ["92", "204"], ["202", "200"], ["63", "62"], ["93", "92"], ["97", "107"], ["112", "121"], ["117", "128"], ["122", "135"], ["203", "207"], ["207", "202"], ["69", "75"], ["72", "66"], ["99", "97"], ["102", "93"], ["102", "116"], ["114", "112"], ["119", "117"], ["123", "122"], ["135", "142"], ["138", "93"], ["138", "153"], ["143", "142"], ["204", "203"], ["71", "69"], ["74", "79"], ["78", "72"], ["103", "110"], ["108", "102"], ["116", "114"], ["121", "119"], ["124", "131"], ["129", "123"], ["140", "138"], ["148", "162"], ["157", "171"], ["75", "74"], ["79", "78"], ["105", "103"], ["110", "108"], ["126", "124"], ["131", "129"], ["142", "140"], ["150", "148"], ["159", "157"], ["167", "194"], ["167", "143"], ["189", "143"], ["107", "105"], ["128", "126"], ["151", "154"], ["154", "150"], ["160", "163"], ["163", "159"], ["168", "167"], ["168", "185"], ["183", "167"], ["153", "151"], ["162", "160"], ["169", "168"], ["169", "180"], ["180", "168"], ["184", "183"], ["192", "195"], ["195", "189"], ["170", "169"], ["170", "177"], ["177", "169"], ["185", "184"], ["194", "192"], ["171", "170"], ["171", "174"], ["174", "170"], ["23", "28"], ["24", "213"], ["26", "213"], ["29", "213"], ["31", "213"], ["34", "213"], ["36", "213"], ["39", "213"], ["43", "213"], ["47", "213"], ["53", "213"], ["51", "213"], ["51", "213"], ["56", "213"], ["58", "213"], ["58", "213"], ["56", "213"], ["56", "213"], ["63", "213"], ["62", "213"], ["62", "213"], ["85", "213"], ["88", "213"], ["93", "213"], ["92", "213"], ["92", "213"], ["204", "213"], ["203", "213"], ["202", "213"], ["207", "213"], ["202", "213"], ["200", "213"], ["200", "213"], ["209", "213"], ["209", "213"], ["97", "213"], ["97", "213"], ["97", "213"], ["112", "213"], ["112", "213"], ["117", "213"], ["117", "213"], ["122", "213"], ["122", "213"], ["135", "213"], ["138", "213"], ["138", "213"], ["138", "213"], ["150", "213"], ["150", "213"], ["148", "213"], ["148", "213"], ["157", "213"], ["159", "213"], ["159", "213"], ["157", "213"], ["157", "213"], ["171", "213"], ["170", "213"], ["174", "213"], ["174", "213"], ["170", "213"], ["169", "213"], ["177", "213"], ["169", "213"], ["168", "213"], ["180", "213"], ["180", "213"], ["168", "213"], ["167", "213"], ["183", "213"], ["167", "213"], ["167", "213"], ["192", "213"], ["195", "213"], ["195", "213"], ["195", "213"], ["195", "213"], ["189", "213"], ["143", "213"], ["69", "213"], ["72", "213"], ["72", "213"], ["79", "213"], ["78", "213"], ["72", "213"], ["66", "213"], ["23", "24"], ["23", "26"], ["23", "31"], ["23", "36"], ["45", "43"], ["49", "47"], ["53", "51"], ["58", "56"], ["58", "56"], ["23", "85"], ["23", "88"], ["26", "29"], ["23", "29"], ["31", "34"], ["23", "34"], ["36", "39"], ["23", "39"], ["34", "200"], ["23", "200"], ["204", "200"], ["207", "200"], ["200", "209"], ["23", "209"], ["29", "45"], ["23", "45"], ["45", "49"], ["23", "49"], ["49", "53"], ["23", "53"], ["43", "58"], ["23", "58"], ["47", "58"], ["63", "62"], ["23", "62"], ["39", "66"], ["23", "66"], ["69", "66"], ["72", "66"], ["93", "92"], ["99", "97"], ["97", "112"], ["97", "117"], ["23", "122"], ["204", "202"], ["23", "202"], ["207", "202"], ["51", "63"], ["23", "63"], ["23", "69"], ["23", "82"], ["39", "93"], ["99", "93"], ["189", "93"], ["66", "93"], ["23", "93"], ["23", "135"], ["204", "203"], ["23", "203"], ["88", "207"], ["117", "207"], ["23", "207"], ["69", "72"], ["23", "72"], ["74", "72"], ["74", "72"], ["78", "72"], ["78", "72"], ["93", "99"], ["23", "99"], ["135", "138"], ["143", "138"], ["23", "138"], ["138", "143"], ["23", "143"], ["97", "148"], ["97", "157"], ["85", "204"], ["112", "204"], ["23", "204"], ["75", "74"], ["23", "74"], ["79", "78"], ["23", "78"], ["53", "75"], ["79", "75"], ["23", "75"], ["75", "79"], ["23", "79"], ["97", "150"], ["97", "159"], ["168", "167"], ["168", "167"], ["183", "167"], ["99", "189"], ["23", "189"], ["192", "189"], ["195", "189"], ["169", "168"], ["169", "168"], ["180", "168"], ["180", "168"], ["23", "192"], ["23", "199"], ["170", "169"], ["170", "169"], ["177", "169"], ["177", "169"], ["157", "180"], ["177", "180"], ["23", "180"], ["58", "180"], ["192", "195"], ["23", "195"], ["171", "195"], ["174", "195"], ["157", "195"], ["177", "195"], ["180", "195"], ["171", "170"], ["171", "170"], ["174", "170"], ["174", "170"], ["157", "177"], ["23", "177"], ["148", "171"], ["23", "171"], ["171", "174"], ["23", "174"], ["58", "174"], ["62", "75"], ["62", "69"], ["62", "74"], ["62", "79"], ["62", "66"], ["62", "72"], ["62", "71"], ["62", "63"], ["62", "78"], ["62", "62"], ["92", "107"], ["92", "102"], ["92", "103"], ["92", "92"], ["92", "97"], ["92", "93"], ["92", "108"], ["92", "99"], ["92", "105"], ["92", "110"], ["102", "128"], ["102", "114"], ["102", "131"], ["102", "119"], ["102", "121"], ["102", "112"], ["102", "129"], ["102", "138"], ["102", "116"], ["102", "122"], ["102", "142"], ["102", "123"], ["102", "140"], ["102", "126"], ["102", "135"], ["102", "117"], ["102", "124"], ["138", "167"], ["138", "154"], ["138", "169"], ["138", "163"], ["138", "150"], ["138", "151"], ["138", "162"], ["138", "153"], ["138", "168"], ["138", "170"], ["138", "138"], ["138", "148"], ["138", "171"], ["138", "160"], ["138", "142"], ["138", "157"], ["138", "159"], ["138", "140"], ["138", "143"], ["167", "192"], ["167", "189"], ["167", "195"], ["167", "194"], ["168", "185"], ["168", "184"], ["168", "183"], ["169", "180"], ["170", "177"], ["171", "174"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(&quot;output.txt&quot;))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(&quot;output.txt&quot;))<SUB>4</SUB>>", "35": "<(LITERAL,&quot;output.txt&quot;,new PrintWriter(&quot;output.txt&quot;))<SUB>4</SUB>>", "36": "<(&lt;operator&gt;.assignment,ANY q = new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "38": "<(&lt;operator&gt;.alloc,new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "7": "<(IDENTIFIER,q,new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "41": "<(LOCAL,int m: int)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "45": "<(nextInt,nextInt())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "49": "<(nextInt,nextInt())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "55": "<(LOCAL,boolean[][] vis: boolean[][])<SUB>7</SUB>>", "57": "<(IDENTIFIER,vis,boolean[][] vis = new boolean[n][m])<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,new boolean[n][m])<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,while (k-- &gt; 0),while (k-- &gt; 0))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postDecrement,k--)<SUB>8</SUB>>", "65": "<(LITERAL,0,k-- &gt; 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,q,add(new Pair(sc.nextInt() - 1, sc.nextInt() - 1)))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "71": "<(&lt;operator&gt;.alloc,new Pair(sc.nextInt() - 1, sc.nextInt() - 1))<SUB>9</SUB>>", "73": "<(IDENTIFIER,$obj3,new Pair(sc.nextInt() - 1, sc.nextInt() - 1))>", "75": "<(nextInt,nextInt())<SUB>9</SUB>>", "77": "<(LITERAL,1,sc.nextInt() - 1)<SUB>9</SUB>>", "79": "<(nextInt,nextInt())<SUB>9</SUB>>", "81": "<(LITERAL,1,sc.nextInt() - 1)<SUB>9</SUB>>", "83": "<(LOCAL,int ansX: int)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,int ansX = 1)<SUB>11</SUB>>", "87": "<(LITERAL,1,int ansX = 1)<SUB>11</SUB>>", "89": "<(IDENTIFIER,ansY,int ansY = 1)<SUB>11</SUB>>", "91": "<(CONTROL_STRUCTURE,while (!q.isEmpty()),while (!q.isEmpty()))<SUB>13</SUB>>", "93": "<(isEmpty,isEmpty())<SUB>13</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.assignment,ANY cur = poll())<SUB>15</SUB>>", "99": "<(poll,poll())<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,if (vis[cur.i][cur.j]),if (vis[cur.i][cur.j]))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,vis[cur.i])<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,cur.i)<SUB>16</SUB>>", "107": "<(FIELD_IDENTIFIER,i,i)<SUB>16</SUB>>", "109": "<(IDENTIFIER,cur,if (vis[cur.i][cur.j]))<SUB>16</SUB>>", "111": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>16</SUB>>", "113": "<(IDENTIFIER,ansX,ansX = cur.i)<SUB>17</SUB>>", "115": "<(IDENTIFIER,cur,ansX = cur.i)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,ansY = cur.j)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,cur.j)<SUB>17</SUB>>", "121": "<(FIELD_IDENTIFIER,j,j)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,vis[cur.i][cur.j])<SUB>18</SUB>>", "125": "<(IDENTIFIER,vis,vis[cur.i][cur.j] = true)<SUB>18</SUB>>", "127": "<(IDENTIFIER,cur,vis[cur.i][cur.j] = true)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,cur.j)<SUB>18</SUB>>", "131": "<(FIELD_IDENTIFIER,j,j)<SUB>18</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; di.length); i++),for (int i = 0; Some(i &lt; di.length); i++))<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "137": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "139": "<(IDENTIFIER,i,i &lt; di.length)<SUB>19</SUB>>", "141": "<(IDENTIFIER,di,i &lt; di.length)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "147": "<(LOCAL,int nj: int)<SUB>20</SUB>>", "149": "<(IDENTIFIER,ni,int ni = cur.i + di[i])<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,cur.i)<SUB>20</SUB>>", "153": "<(FIELD_IDENTIFIER,i,i)<SUB>20</SUB>>", "155": "<(IDENTIFIER,di,cur.i + di[i])<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.assignment,int nj = cur.j + dj[i])<SUB>20</SUB>>", "159": "<(&lt;operator&gt;.addition,cur.j + dj[i])<SUB>20</SUB>>", "161": "<(IDENTIFIER,cur,cur.j + dj[i])<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,dj[i])<SUB>20</SUB>>", "165": "<(IDENTIFIER,i,cur.j + dj[i])<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.logicalAnd,ni &gt;= 0 &amp;&amp; ni &lt; n &amp;&amp; nj &gt;= 0 &amp;&amp; nj &lt; m &amp;&amp; !vis[ni][nj])<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.logicalAnd,ni &gt;= 0 &amp;&amp; ni &lt; n &amp;&amp; nj &gt;= 0)<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.greaterEqualsThan,ni &gt;= 0)<SUB>21</SUB>>", "173": "<(LITERAL,0,ni &gt;= 0)<SUB>21</SUB>>", "175": "<(IDENTIFIER,ni,ni &lt; n)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.greaterEqualsThan,nj &gt;= 0)<SUB>21</SUB>>", "179": "<(LITERAL,0,nj &gt;= 0)<SUB>21</SUB>>", "181": "<(IDENTIFIER,nj,nj &lt; m)<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.logicalNot,!vis[ni][nj])<SUB>21</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,vis[ni])<SUB>21</SUB>>", "187": "<(IDENTIFIER,ni,!vis[ni][nj])<SUB>21</SUB>>", "189": "<(add,add(new Pair(ni, nj)))<SUB>22</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "193": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "195": "<(&lt;init&gt;,new Pair(ni, nj))<SUB>22</SUB>>", "197": "<(IDENTIFIER,ni,new Pair(ni, nj))<SUB>22</SUB>>", "199": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "201": "<(IDENTIFIER,out,append(++ansX + &quot; &quot; + ++ansY))<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.addition,++ansX + &quot; &quot;)<SUB>26</SUB>>", "205": "<(IDENTIFIER,ansX,++ansX)<SUB>26</SUB>>", "207": "<(&lt;operator&gt;.preIncrement,++ansY)<SUB>26</SUB>>", "209": "<(flush,flush())<SUB>27</SUB>>", "211": "<(MODIFIER,PUBLIC)>", "213": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}