{"edges": [["17", "19"], ["17", "413"], ["17", "414"], ["17", "415"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "43"], ["19", "44"], ["19", "51"], ["19", "82"], ["19", "113"], ["19", "114"], ["19", "119"], ["19", "378"], ["19", "411"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "72"], ["62", "74"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "92"], ["82", "94"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["119", "155"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "158"], ["156", "163"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "173"], ["163", "175"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["175", "176"], ["175", "345"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "184"], ["176", "186"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "205"], ["197", "240"], ["197", "275"], ["197", "310"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["216", "217"], ["216", "218"], ["216", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["223", "224"], ["223", "231"], ["224", "225"], ["224", "230"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "239"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["247", "248"], ["247", "253"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "255"], ["253", "260"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["260", "268"], ["261", "262"], ["261", "267"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["279", "280"], ["280", "281"], ["280", "286"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "288"], ["286", "293"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["293", "294"], ["293", "301"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "309"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "316"], ["311", "312"], ["311", "313"], ["313", "314"], ["313", "315"], ["316", "317"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["323", "324"], ["323", "325"], ["323", "330"], ["325", "326"], ["325", "329"], ["326", "327"], ["326", "328"], ["330", "331"], ["330", "338"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "344"], ["339", "340"], ["339", "343"], ["340", "341"], ["340", "342"], ["345", "346"], ["345", "347"], ["345", "350"], ["345", "353"], ["345", "355"], ["347", "348"], ["347", "349"], ["350", "351"], ["350", "352"], ["353", "354"], ["355", "356"], ["356", "357"], ["356", "358"], ["356", "361"], ["356", "364"], ["356", "366"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "363"], ["364", "365"], ["366", "367"], ["367", "368"], ["367", "373"], ["368", "369"], ["368", "372"], ["369", "370"], ["369", "371"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["378", "379"], ["378", "380"], ["378", "383"], ["378", "386"], ["378", "388"], ["380", "381"], ["380", "382"], ["383", "384"], ["383", "385"], ["386", "387"], ["388", "389"], ["388", "409"], ["389", "390"], ["389", "391"], ["389", "394"], ["389", "397"], ["389", "399"], ["391", "392"], ["391", "393"], ["394", "395"], ["394", "396"], ["397", "398"], ["399", "400"], ["400", "401"], ["400", "402"], ["402", "403"], ["402", "408"], ["403", "404"], ["403", "407"], ["404", "405"], ["404", "406"], ["409", "410"], ["411", "412"], ["21", "28"], ["26", "33"], ["31", "40"], ["36", "47"], ["44", "53"], ["114", "121"], ["411", "415"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["46", "44"], ["53", "56"], ["56", "64"], ["56", "84"], ["59", "56"], ["84", "89"], ["87", "97"], ["87", "116"], ["92", "89"], ["116", "114"], ["120", "128"], ["120", "160"], ["380", "383"], ["383", "391"], ["383", "411"], ["386", "383"], ["40", "38"], ["47", "46"], ["89", "87"], ["121", "120"], ["409", "386"], ["64", "69"], ["67", "76"], ["67", "59"], ["72", "69"], ["74", "72"], ["97", "100"], ["100", "107"], ["100", "92"], ["103", "100"], ["105", "103"], ["128", "131"], ["131", "139"], ["131", "380"], ["134", "131"], ["158", "165"], ["391", "394"], ["394", "404"], ["394", "409"], ["397", "394"], ["69", "67"], ["75", "80"], ["80", "74"], ["106", "111"], ["111", "105"], ["160", "158"], ["165", "170"], ["168", "178"], ["168", "380"], ["173", "170"], ["400", "397"], ["76", "75"], ["107", "106"], ["139", "142"], ["142", "149"], ["142", "134"], ["145", "142"], ["147", "145"], ["170", "168"], ["402", "400"], ["148", "153"], ["153", "147"], ["178", "181"], ["181", "189"], ["181", "347"], ["184", "181"], ["347", "350"], ["350", "358"], ["350", "173"], ["353", "350"], ["403", "402"], ["149", "148"], ["404", "403"], ["189", "192"], ["192", "200"], ["192", "184"], ["195", "192"], ["358", "361"], ["361", "369"], ["361", "353"], ["364", "361"], ["198", "206"], ["367", "364"], ["199", "198"], ["206", "212"], ["206", "243"], ["241", "249"], ["241", "276"], ["276", "282"], ["276", "313"], ["311", "319"], ["311", "195"], ["368", "374"], ["373", "367"], ["200", "199"], ["210", "243"], ["243", "241"], ["247", "276"], ["280", "313"], ["313", "311"], ["317", "195"], ["369", "368"], ["374", "373"], ["211", "219"], ["216", "210"], ["248", "256"], ["253", "247"], ["281", "289"], ["286", "280"], ["318", "326"], ["323", "317"], ["212", "211"], ["218", "227"], ["223", "216"], ["249", "248"], ["255", "264"], ["260", "253"], ["282", "281"], ["288", "295"], ["293", "286"], ["319", "318"], ["325", "332"], ["330", "323"], ["219", "218"], ["224", "235"], ["231", "223"], ["256", "255"], ["261", "270"], ["268", "260"], ["289", "288"], ["294", "303"], ["301", "293"], ["326", "325"], ["331", "340"], ["338", "330"], ["225", "224"], ["232", "231"], ["262", "261"], ["269", "268"], ["295", "298"], ["298", "294"], ["302", "301"], ["332", "335"], ["335", "331"], ["339", "338"], ["227", "225"], ["233", "232"], ["264", "262"], ["270", "269"], ["303", "306"], ["306", "302"], ["340", "339"], ["235", "233"], ["17", "23"], ["18", "415"], ["21", "415"], ["26", "415"], ["33", "415"], ["31", "415"], ["31", "415"], ["36", "415"], ["38", "415"], ["36", "415"], ["36", "415"], ["44", "415"], ["44", "415"], ["44", "415"], ["87", "415"], ["87", "415"], ["114", "415"], ["116", "415"], ["114", "415"], ["114", "415"], ["121", "415"], ["120", "415"], ["120", "415"], ["158", "415"], ["160", "415"], ["158", "415"], ["158", "415"], ["165", "415"], ["168", "415"], ["170", "415"], ["168", "415"], ["168", "415"], ["173", "415"], ["358", "415"], ["361", "415"], ["361", "415"], ["361", "415"], ["353", "415"], ["367", "415"], ["367", "415"], ["367", "415"], ["364", "415"], ["189", "415"], ["192", "415"], ["192", "415"], ["192", "415"], ["184", "415"], ["198", "415"], ["198", "415"], ["206", "415"], ["210", "415"], ["216", "415"], ["223", "415"], ["231", "415"], ["223", "415"], ["216", "415"], ["210", "415"], ["210", "415"], ["241", "415"], ["241", "415"], ["247", "415"], ["253", "415"], ["260", "415"], ["268", "415"], ["260", "415"], ["253", "415"], ["247", "415"], ["247", "415"], ["276", "415"], ["280", "415"], ["286", "415"], ["293", "415"], ["301", "415"], ["293", "415"], ["286", "415"], ["280", "415"], ["280", "415"], ["311", "415"], ["311", "415"], ["317", "415"], ["323", "415"], ["330", "415"], ["338", "415"], ["330", "415"], ["323", "415"], ["317", "415"], ["317", "415"], ["195", "415"], ["380", "415"], ["383", "415"], ["383", "415"], ["383", "415"], ["411", "415"], ["411", "415"], ["391", "415"], ["394", "415"], ["394", "415"], ["394", "415"], ["409", "415"], ["386", "415"], ["402", "415"], ["400", "415"], ["400", "415"], ["397", "415"], ["139", "415"], ["142", "415"], ["142", "415"], ["142", "415"], ["134", "415"], ["147", "415"], ["147", "415"], ["147", "415"], ["145", "415"], ["97", "415"], ["100", "415"], ["100", "415"], ["92", "415"], ["105", "415"], ["111", "415"], ["105", "415"], ["105", "415"], ["103", "415"], ["64", "415"], ["67", "415"], ["67", "415"], ["67", "415"], ["59", "415"], ["74", "415"], ["80", "415"], ["74", "415"], ["74", "415"], ["72", "415"], ["198", "415"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["38", "36"], ["46", "44"], ["46", "44"], ["116", "114"], ["116", "114"], ["17", "53"], ["17", "84"], ["17", "380"], ["409", "411"], ["17", "411"], ["17", "23"], ["23", "28"], ["17", "28"], ["28", "33"], ["17", "33"], ["21", "38"], ["17", "38"], ["40", "38"], ["40", "38"], ["47", "46"], ["47", "46"], ["40", "46"], ["17", "46"], ["53", "56"], ["59", "56"], ["17", "56"], ["47", "56"], ["56", "59"], ["17", "59"], ["84", "87"], ["92", "87"], ["17", "87"], ["89", "87"], ["89", "87"], ["87", "92"], ["17", "92"], ["89", "116"], ["17", "116"], ["46", "116"], ["100", "116"], ["69", "116"], ["121", "120"], ["121", "120"], ["17", "120"], ["380", "383"], ["386", "383"], ["17", "383"], ["160", "383"], ["350", "383"], ["131", "383"], ["383", "386"], ["17", "386"], ["26", "40"], ["17", "40"], ["38", "47"], ["17", "47"], ["17", "64"], ["80", "74"], ["56", "89"], ["17", "89"], ["17", "97"], ["111", "105"], ["31", "121"], ["17", "121"], ["17", "128"], ["160", "158"], ["160", "158"], ["17", "391"], ["400", "409"], ["17", "409"], ["64", "67"], ["72", "67"], ["17", "67"], ["69", "67"], ["69", "67"], ["67", "72"], ["17", "72"], ["97", "100"], ["103", "100"], ["17", "100"], ["46", "100"], ["69", "100"], ["100", "103"], ["17", "103"], ["128", "131"], ["134", "131"], ["17", "131"], ["116", "131"], ["131", "134"], ["17", "134"], ["17", "165"], ["391", "394"], ["397", "394"], ["17", "394"], ["116", "394"], ["160", "394"], ["361", "394"], ["192", "394"], ["142", "394"], ["394", "397"], ["17", "397"], ["46", "69"], ["17", "69"], ["33", "80"], ["17", "80"], ["33", "111"], ["80", "111"], ["17", "111"], ["17", "139"], ["153", "147"], ["116", "160"], ["17", "160"], ["116", "160"], ["165", "168"], ["173", "168"], ["17", "168"], ["170", "168"], ["170", "168"], ["168", "173"], ["17", "173"], ["409", "400"], ["17", "400"], ["367", "400"], ["147", "400"], ["139", "142"], ["145", "142"], ["17", "142"], ["116", "142"], ["142", "145"], ["17", "145"], ["121", "170"], ["17", "170"], ["17", "178"], ["17", "347"], ["367", "402"], ["147", "402"], ["17", "402"], ["17", "153"], ["178", "181"], ["184", "181"], ["17", "181"], ["160", "181"], ["350", "181"], ["243", "181"], ["181", "184"], ["241", "184"], ["17", "184"], ["347", "350"], ["353", "350"], ["17", "350"], ["181", "350"], ["350", "353"], ["17", "353"], ["17", "189"], ["17", "358"], ["189", "192"], ["195", "192"], ["17", "192"], ["160", "192"], ["361", "192"], ["313", "192"], ["311", "195"], ["17", "195"], ["17", "198"], ["358", "361"], ["364", "361"], ["17", "361"], ["160", "361"], ["192", "361"], ["361", "364"], ["17", "364"], ["198", "367"], ["210", "367"], ["247", "367"], ["280", "367"], ["317", "367"], ["181", "206"], ["241", "206"], ["17", "206"], ["216", "210"], ["216", "210"], ["216", "210"], ["206", "241"], ["235", "241"], ["17", "241"], ["243", "241"], ["243", "241"], ["253", "247"], ["253", "247"], ["253", "247"], ["192", "276"], ["17", "276"], ["286", "280"], ["286", "280"], ["286", "280"], ["276", "311"], ["306", "311"], ["17", "311"], ["313", "311"], ["313", "311"], ["323", "317"], ["323", "317"], ["323", "317"], ["181", "243"], ["17", "243"], ["192", "313"], ["17", "313"], ["253", "216"], ["286", "216"], ["323", "216"], ["17", "216"], ["198", "216"], ["231", "216"], ["231", "216"], ["216", "253"], ["286", "253"], ["323", "253"], ["17", "253"], ["198", "253"], ["210", "253"], ["268", "253"], ["268", "253"], ["216", "286"], ["253", "286"], ["323", "286"], ["17", "286"], ["198", "286"], ["210", "286"], ["247", "286"], ["301", "286"], ["301", "286"], ["216", "323"], ["253", "323"], ["286", "323"], ["17", "323"], ["198", "323"], ["210", "323"], ["247", "323"], ["280", "323"], ["338", "323"], ["338", "323"], ["231", "223"], ["231", "223"], ["268", "260"], ["268", "260"], ["301", "293"], ["301", "293"], ["338", "330"], ["338", "330"], ["17", "231"], ["105", "268"], ["17", "268"], ["17", "301"], ["74", "338"], ["17", "338"], ["276", "298"], ["17", "298"], ["311", "335"], ["17", "335"], ["206", "227"], ["17", "227"], ["241", "264"], ["17", "264"], ["298", "306"], ["17", "306"], ["227", "235"], ["17", "235"], ["56", "59"], ["56", "64"], ["56", "56"], ["56", "69"], ["56", "67"], ["87", "100"], ["87", "92"], ["87", "87"], ["87", "97"], ["87", "89"], ["120", "128"], ["120", "168"], ["120", "170"], ["120", "158"], ["120", "160"], ["120", "131"], ["120", "165"], ["383", "383"], ["383", "394"], ["383", "386"], ["383", "409"], ["383", "391"], ["67", "74"], ["67", "76"], ["67", "80"], ["67", "72"], ["67", "75"], ["67", "69"], ["67", "67"], ["100", "100"], ["100", "107"], ["100", "103"], ["100", "111"], ["100", "106"], ["100", "105"], ["131", "134"], ["131", "131"], ["131", "139"], ["131", "142"], ["394", "403"], ["394", "394"], ["394", "404"], ["394", "402"], ["394", "397"], ["394", "400"], ["168", "168"], ["168", "170"], ["168", "181"], ["168", "347"], ["168", "178"], ["168", "173"], ["168", "350"], ["142", "148"], ["142", "147"], ["142", "145"], ["142", "149"], ["142", "153"], ["142", "142"], ["181", "192"], ["181", "181"], ["181", "184"], ["181", "189"], ["350", "358"], ["350", "353"], ["350", "361"], ["350", "350"], ["192", "192"], ["192", "243"], ["192", "206"], ["192", "195"], ["192", "276"], ["192", "200"], ["192", "311"], ["192", "199"], ["192", "241"], ["192", "198"], ["192", "313"], ["361", "374"], ["361", "368"], ["361", "364"], ["361", "373"], ["361", "361"], ["361", "367"], ["361", "369"], ["206", "224"], ["206", "216"], ["206", "227"], ["206", "225"], ["206", "232"], ["206", "223"], ["206", "231"], ["206", "212"], ["206", "233"], ["206", "235"], ["206", "210"], ["206", "211"], ["206", "218"], ["206", "219"], ["241", "256"], ["241", "262"], ["241", "264"], ["241", "247"], ["241", "268"], ["241", "249"], ["241", "260"], ["241", "253"], ["241", "269"], ["241", "261"], ["241", "255"], ["241", "270"], ["241", "248"], ["276", "298"], ["276", "302"], ["276", "281"], ["276", "306"], ["276", "288"], ["276", "282"], ["276", "301"], ["276", "289"], ["276", "293"], ["276", "280"], ["276", "286"], ["276", "295"], ["276", "294"], ["276", "303"], ["311", "326"], ["311", "338"], ["311", "317"], ["311", "340"], ["311", "323"], ["311", "335"], ["311", "319"], ["311", "339"], ["311", "332"], ["311", "325"], ["311", "318"], ["311", "330"], ["311", "331"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int m: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,m,int m = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,r,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(LOCAL,int[][] hor: int[][])<SUB>5</SUB>>", "37": "<(IDENTIFIER,hor,int[][] hor = new int[n][m - 1])<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>5</SUB>>", "41": "<(IDENTIFIER,m,m - 1)<SUB>5</SUB>>", "43": "<(LOCAL,int[][] ver: int[][])<SUB>6</SUB>>", "45": "<(IDENTIFIER,ver,int[][] ver = new int[n - 1][m])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>6</SUB>>", "49": "<(LITERAL,1,n - 1)<SUB>6</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.preIncrement,++i)<SUB>7</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "63": "<(LOCAL,int j: int)<SUB>8</SUB>>", "65": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>8</SUB>>", "71": "<(LITERAL,1,m - 1)<SUB>8</SUB>>", "73": "<(IDENTIFIER,j,++j)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,hor[i][j])<SUB>8</SUB>>", "77": "<(IDENTIFIER,hor,hor[i][j] = nextInt())<SUB>8</SUB>>", "79": "<(IDENTIFIER,j,hor[i][j] = nextInt())<SUB>8</SUB>>", "81": "<(IDENTIFIER,r,nextInt())<SUB>8</SUB>>", "83": "<(LOCAL,int i: int)<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>10</SUB>>", "91": "<(LITERAL,1,n - 1)<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,++i)<SUB>10</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "99": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "101": "<(IDENTIFIER,j,j &lt; m)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.preIncrement,++j)<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.assignment,ver[i][j] = nextInt())<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,ver[i])<SUB>11</SUB>>", "109": "<(IDENTIFIER,i,ver[i][j] = nextInt())<SUB>11</SUB>>", "111": "<(nextInt,nextInt())<SUB>11</SUB>>", "113": "<(LOCAL,int[][] dp: int[][])<SUB>13</SUB>>", "115": "<(IDENTIFIER,dp,int[][] dp = new int[n][m])<SUB>13</SUB>>", "117": "<(IDENTIFIER,n,new int[n][m])<SUB>13</SUB>>", "119": "<(CONTROL_STRUCTURE,if (k % 2 != 0),if (k % 2 != 0))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.modulo,k % 2)<SUB>14</SUB>>", "123": "<(LITERAL,2,k % 2)<SUB>14</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "127": "<(LOCAL,int i: int)<SUB>15</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "133": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,++i)<SUB>15</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>16</SUB>>", "141": "<(LITERAL,0,int j = 0)<SUB>16</SUB>>", "143": "<(IDENTIFIER,j,j &lt; m)<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.preIncrement,++j)<SUB>16</SUB>>", "147": "<(&lt;operator&gt;.assignment,dp[i][j] = -1)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>16</SUB>>", "151": "<(IDENTIFIER,i,dp[i][j] = -1)<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "155": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "157": "<(LOCAL,int[][] new_dp: int[][])<SUB>20</SUB>>", "159": "<(IDENTIFIER,new_dp,int[][] new_dp = new int[n][m])<SUB>20</SUB>>", "161": "<(IDENTIFIER,n,new int[n][m])<SUB>20</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int step = 0; Some(step &lt; k / 2); ++step),for (int step = 0; Some(step &lt; k / 2); ++step))<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.assignment,int step = 0)<SUB>21</SUB>>", "167": "<(LITERAL,0,int step = 0)<SUB>21</SUB>>", "169": "<(IDENTIFIER,step,step &lt; k / 2)<SUB>21</SUB>>", "171": "<(IDENTIFIER,k,k / 2)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.preIncrement,++step)<SUB>21</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "177": "<(LOCAL,int i: int)<SUB>22</SUB>>", "179": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "183": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "185": "<(IDENTIFIER,i,++i)<SUB>22</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>23</SUB>>", "189": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "191": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "193": "<(IDENTIFIER,j,j &lt; m)<SUB>23</SUB>>", "195": "<(&lt;operator&gt;.preIncrement,++j)<SUB>23</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>24</SUB>>", "201": "<(IDENTIFIER,new_dp,new_dp[i][j] = INF)<SUB>24</SUB>>", "203": "<(IDENTIFIER,j,new_dp[i][j] = INF)<SUB>24</SUB>>", "205": "<(CONTROL_STRUCTURE,if (i &gt; 0),if (i &gt; 0))<SUB>25</SUB>>", "207": "<(IDENTIFIER,i,i &gt; 0)<SUB>25</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>26</SUB>>", "213": "<(IDENTIFIER,new_dp,new_dp[i][j] = Math.min(new_dp[i][j], dp[i - 1][j] + ver[i - 1][j] * 2))<SUB>26</SUB>>", "215": "<(IDENTIFIER,j,new_dp[i][j] = Math.min(new_dp[i][j], dp[i - 1][j] + ver[i - 1][j] * 2))<SUB>26</SUB>>", "217": "<(IDENTIFIER,Math,Math.min(new_dp[i][j], dp[i - 1][j] + ver[i - 1][j] * 2))<SUB>26</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,new_dp[i])<SUB>26</SUB>>", "221": "<(IDENTIFIER,i,Math.min(new_dp[i][j], dp[i - 1][j] + ver[i - 1][j] * 2))<SUB>26</SUB>>", "223": "<(&lt;operator&gt;.addition,dp[i - 1][j] + ver[i - 1][j] * 2)<SUB>26</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>26</SUB>>", "227": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>26</SUB>>", "229": "<(LITERAL,1,i - 1)<SUB>26</SUB>>", "231": "<(&lt;operator&gt;.multiplication,ver[i - 1][j] * 2)<SUB>26</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,ver[i - 1])<SUB>26</SUB>>", "235": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>26</SUB>>", "237": "<(LITERAL,1,i - 1)<SUB>26</SUB>>", "239": "<(LITERAL,2,ver[i - 1][j] * 2)<SUB>26</SUB>>", "241": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>28</SUB>>", "245": "<(LITERAL,1,n - 1)<SUB>28</SUB>>", "247": "<(&lt;operator&gt;.assignment,new_dp[i][j] = Math.min(new_dp[i][j], dp[i + 1][j] + ver[i][j] * 2))<SUB>29</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,new_dp[i])<SUB>29</SUB>>", "251": "<(IDENTIFIER,i,new_dp[i][j] = Math.min(new_dp[i][j], dp[i + 1][j] + ver[i][j] * 2))<SUB>29</SUB>>", "253": "<(min,Math.min(new_dp[i][j], dp[i + 1][j] + ver[i][j] * 2))<SUB>29</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>29</SUB>>", "257": "<(IDENTIFIER,new_dp,Math.min(new_dp[i][j], dp[i + 1][j] + ver[i][j] * 2))<SUB>29</SUB>>", "259": "<(IDENTIFIER,j,Math.min(new_dp[i][j], dp[i + 1][j] + ver[i][j] * 2))<SUB>29</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>29</SUB>>", "263": "<(IDENTIFIER,dp,dp[i + 1][j] + ver[i][j] * 2)<SUB>29</SUB>>", "265": "<(IDENTIFIER,i,i + 1)<SUB>29</SUB>>", "267": "<(IDENTIFIER,j,dp[i + 1][j] + ver[i][j] * 2)<SUB>29</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,ver[i][j])<SUB>29</SUB>>", "271": "<(IDENTIFIER,ver,ver[i][j] * 2)<SUB>29</SUB>>", "273": "<(IDENTIFIER,j,ver[i][j] * 2)<SUB>29</SUB>>", "275": "<(CONTROL_STRUCTURE,if (j &gt; 0),if (j &gt; 0))<SUB>31</SUB>>", "277": "<(IDENTIFIER,j,j &gt; 0)<SUB>31</SUB>>", "279": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>32</SUB>>", "283": "<(IDENTIFIER,new_dp,new_dp[i][j] = Math.min(new_dp[i][j], dp[i][j - 1] + hor[i][j - 1] * 2))<SUB>32</SUB>>", "285": "<(IDENTIFIER,j,new_dp[i][j] = Math.min(new_dp[i][j], dp[i][j - 1] + hor[i][j - 1] * 2))<SUB>32</SUB>>", "287": "<(IDENTIFIER,Math,Math.min(new_dp[i][j], dp[i][j - 1] + hor[i][j - 1] * 2))<SUB>32</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,new_dp[i])<SUB>32</SUB>>", "291": "<(IDENTIFIER,i,Math.min(new_dp[i][j], dp[i][j - 1] + hor[i][j - 1] * 2))<SUB>32</SUB>>", "293": "<(&lt;operator&gt;.addition,dp[i][j - 1] + hor[i][j - 1] * 2)<SUB>32</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>32</SUB>>", "297": "<(IDENTIFIER,i,dp[i][j - 1] + hor[i][j - 1] * 2)<SUB>32</SUB>>", "299": "<(IDENTIFIER,j,j - 1)<SUB>32</SUB>>", "301": "<(&lt;operator&gt;.multiplication,hor[i][j - 1] * 2)<SUB>32</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,hor[i])<SUB>32</SUB>>", "305": "<(IDENTIFIER,i,hor[i][j - 1] * 2)<SUB>32</SUB>>", "307": "<(IDENTIFIER,j,j - 1)<SUB>32</SUB>>", "309": "<(LITERAL,2,hor[i][j - 1] * 2)<SUB>32</SUB>>", "311": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>34</SUB>>", "313": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>34</SUB>>", "315": "<(LITERAL,1,m - 1)<SUB>34</SUB>>", "317": "<(&lt;operator&gt;.assignment,new_dp[i][j] = Math.min(new_dp[i][j], dp[i][j + 1] + hor[i][j] * 2))<SUB>35</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,new_dp[i])<SUB>35</SUB>>", "321": "<(IDENTIFIER,i,new_dp[i][j] = Math.min(new_dp[i][j], dp[i][j + 1] + hor[i][j] * 2))<SUB>35</SUB>>", "323": "<(min,Math.min(new_dp[i][j], dp[i][j + 1] + hor[i][j] * 2))<SUB>35</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>35</SUB>>", "327": "<(IDENTIFIER,new_dp,Math.min(new_dp[i][j], dp[i][j + 1] + hor[i][j] * 2))<SUB>35</SUB>>", "329": "<(IDENTIFIER,j,Math.min(new_dp[i][j], dp[i][j + 1] + hor[i][j] * 2))<SUB>35</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,dp[i][j + 1])<SUB>35</SUB>>", "333": "<(IDENTIFIER,dp,dp[i][j + 1] + hor[i][j] * 2)<SUB>35</SUB>>", "335": "<(&lt;operator&gt;.addition,j + 1)<SUB>35</SUB>>", "337": "<(LITERAL,1,j + 1)<SUB>35</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,hor[i][j])<SUB>35</SUB>>", "341": "<(IDENTIFIER,hor,hor[i][j] * 2)<SUB>35</SUB>>", "343": "<(IDENTIFIER,j,hor[i][j] * 2)<SUB>35</SUB>>", "345": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>39</SUB>>", "347": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>39</SUB>>", "349": "<(LITERAL,0,int i = 0)<SUB>39</SUB>>", "351": "<(IDENTIFIER,i,i &lt; n)<SUB>39</SUB>>", "353": "<(&lt;operator&gt;.preIncrement,++i)<SUB>39</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "357": "<(LOCAL,int j: int)<SUB>40</SUB>>", "359": "<(IDENTIFIER,j,int j = 0)<SUB>40</SUB>>", "361": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>40</SUB>>", "363": "<(IDENTIFIER,m,j &lt; m)<SUB>40</SUB>>", "365": "<(IDENTIFIER,j,++j)<SUB>40</SUB>>", "367": "<(&lt;operator&gt;.assignment,dp[i][j] = new_dp[i][j])<SUB>41</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>41</SUB>>", "371": "<(IDENTIFIER,i,dp[i][j] = new_dp[i][j])<SUB>41</SUB>>", "373": "<(&lt;operator&gt;.indexAccess,new_dp[i][j])<SUB>41</SUB>>", "375": "<(IDENTIFIER,new_dp,dp[i][j] = new_dp[i][j])<SUB>41</SUB>>", "377": "<(IDENTIFIER,j,dp[i][j] = new_dp[i][j])<SUB>41</SUB>>", "379": "<(LOCAL,int i: int)<SUB>46</SUB>>", "381": "<(IDENTIFIER,i,int i = 0)<SUB>46</SUB>>", "383": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>46</SUB>>", "385": "<(IDENTIFIER,n,i &lt; n)<SUB>46</SUB>>", "387": "<(IDENTIFIER,i,++i)<SUB>46</SUB>>", "389": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>47</SUB>>", "391": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>47</SUB>>", "393": "<(LITERAL,0,int j = 0)<SUB>47</SUB>>", "395": "<(IDENTIFIER,j,j &lt; m)<SUB>47</SUB>>", "397": "<(&lt;operator&gt;.preIncrement,++j)<SUB>47</SUB>>", "399": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "401": "<(IDENTIFIER,pw,print(dp[i][j] + &quot; &quot;))<SUB>48</SUB>>", "403": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>48</SUB>>", "405": "<(IDENTIFIER,dp,dp[i][j] + &quot; &quot;)<SUB>48</SUB>>", "407": "<(IDENTIFIER,j,dp[i][j] + &quot; &quot;)<SUB>48</SUB>>", "409": "<(println,println())<SUB>50</SUB>>", "411": "<(close,close())<SUB>52</SUB>>", "413": "<(MODIFIER,PUBLIC)>", "415": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}