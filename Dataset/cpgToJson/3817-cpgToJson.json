{"edges": [["19", "21"], ["19", "171"], ["19", "172"], ["19", "173"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "49"], ["21", "81"], ["21", "82"], ["21", "89"], ["21", "121"], ["21", "122"], ["21", "131"], ["21", "165"], ["21", "169"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "70"], ["60", "72"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["73", "74"], ["73", "79"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["124", "127"], ["124", "128"], ["124", "129"], ["124", "130"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["141", "162"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "150"], ["142", "152"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "153"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["167", "168"], ["169", "170"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "46"], ["42", "51"], ["82", "91"], ["122", "133"], ["165", "169"], ["169", "173"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["51", "54"], ["54", "62"], ["54", "85"], ["57", "54"], ["84", "82"], ["91", "96"], ["94", "104"], ["94", "124"], ["99", "96"], ["124", "122"], ["133", "136"], ["136", "144"], ["136", "167"], ["139", "136"], ["167", "165"], ["46", "44"], ["85", "84"], ["96", "94"], ["162", "139"], ["62", "67"], ["65", "75"], ["65", "57"], ["70", "67"], ["104", "107"], ["107", "115"], ["107", "99"], ["110", "107"], ["144", "147"], ["147", "157"], ["147", "162"], ["150", "147"], ["67", "65"], ["73", "70"], ["113", "110"], ["153", "150"], ["74", "79"], ["79", "73"], ["114", "119"], ["119", "113"], ["155", "153"], ["75", "74"], ["115", "114"], ["156", "155"], ["157", "156"], ["19", "24"], ["20", "173"], ["22", "173"], ["25", "173"], ["27", "173"], ["32", "173"], ["39", "173"], ["37", "173"], ["37", "173"], ["44", "173"], ["42", "173"], ["42", "173"], ["82", "173"], ["82", "173"], ["94", "173"], ["94", "173"], ["122", "173"], ["124", "173"], ["124", "173"], ["124", "173"], ["124", "173"], ["122", "173"], ["122", "173"], ["133", "173"], ["136", "173"], ["136", "173"], ["136", "173"], ["167", "173"], ["165", "173"], ["165", "173"], ["169", "173"], ["169", "173"], ["144", "173"], ["147", "173"], ["147", "173"], ["147", "173"], ["162", "173"], ["139", "173"], ["155", "173"], ["153", "173"], ["153", "173"], ["150", "173"], ["104", "173"], ["107", "173"], ["107", "173"], ["99", "173"], ["113", "173"], ["119", "173"], ["113", "173"], ["113", "173"], ["110", "173"], ["62", "173"], ["65", "173"], ["65", "173"], ["65", "173"], ["57", "173"], ["73", "173"], ["79", "173"], ["73", "173"], ["73", "173"], ["70", "173"], ["124", "173"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["44", "42"], ["84", "82"], ["84", "82"], ["124", "122"], ["124", "122"], ["124", "122"], ["124", "122"], ["124", "122"], ["124", "122"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "91"], ["19", "133"], ["19", "165"], ["167", "165"], ["165", "169"], ["19", "169"], ["19", "29"], ["29", "34"], ["19", "34"], ["34", "39"], ["19", "39"], ["27", "44"], ["19", "44"], ["46", "44"], ["46", "44"], ["51", "54"], ["57", "54"], ["19", "54"], ["44", "54"], ["54", "57"], ["19", "57"], ["85", "84"], ["85", "84"], ["46", "84"], ["67", "84"], ["19", "84"], ["91", "94"], ["99", "94"], ["19", "94"], ["96", "94"], ["96", "94"], ["94", "99"], ["19", "99"], ["19", "124"], ["96", "124"], ["84", "124"], ["107", "124"], ["37", "124"], ["42", "124"], ["82", "124"], ["133", "136"], ["139", "136"], ["19", "136"], ["124", "136"], ["136", "139"], ["19", "139"], ["25", "167"], ["162", "167"], ["19", "167"], ["32", "46"], ["19", "46"], ["19", "62"], ["54", "85"], ["19", "85"], ["85", "96"], ["19", "96"], ["19", "104"], ["19", "144"], ["25", "162"], ["153", "162"], ["19", "162"], ["62", "65"], ["70", "65"], ["19", "65"], ["67", "65"], ["67", "65"], ["65", "70"], ["19", "70"], ["79", "73"], ["104", "107"], ["110", "107"], ["19", "107"], ["84", "107"], ["107", "110"], ["19", "110"], ["119", "113"], ["144", "147"], ["150", "147"], ["19", "147"], ["124", "147"], ["147", "150"], ["19", "150"], ["46", "67"], ["19", "67"], ["25", "153"], ["162", "153"], ["19", "153"], ["39", "79"], ["19", "79"], ["39", "119"], ["79", "119"], ["19", "119"], ["19", "155"], ["54", "57"], ["54", "67"], ["54", "65"], ["54", "54"], ["54", "62"], ["94", "107"], ["94", "94"], ["94", "96"], ["94", "99"], ["94", "104"], ["136", "136"], ["136", "162"], ["136", "144"], ["136", "147"], ["136", "139"], ["65", "73"], ["65", "75"], ["65", "67"], ["65", "74"], ["65", "65"], ["65", "79"], ["65", "70"], ["107", "107"], ["107", "115"], ["107", "113"], ["107", "114"], ["107", "119"], ["107", "110"], ["147", "150"], ["147", "153"], ["147", "157"], ["147", "147"], ["147", "155"], ["147", "156"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,StringBuilder solution = new StringBuilder())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>2</SUB>>", "3": "<(IDENTIFIER,solution,new StringBuilder())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int rows = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int cols: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,cols,int cols = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,FR,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int moves = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(LOCAL,int[][] horizontalEdgeWeights: int[][])<SUB>7</SUB>>", "43": "<(IDENTIFIER,horizontalEdgeWeights,int[][] horizontalEdgeWeights = new int[rows][cols - 1])<SUB>7</SUB>>", "45": "<(IDENTIFIER,rows,new int[rows][cols - 1])<SUB>7</SUB>>", "47": "<(IDENTIFIER,cols,cols - 1)<SUB>7</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows); r++),for (int r = 0; Some(r &lt; rows); r++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>9</SUB>>", "53": "<(LITERAL,0,int r = 0)<SUB>9</SUB>>", "55": "<(IDENTIFIER,r,r &lt; rows)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,r++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(LOCAL,int c: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.lessThan,c &lt; cols - 1)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.subtraction,cols - 1)<SUB>10</SUB>>", "69": "<(LITERAL,1,cols - 1)<SUB>10</SUB>>", "71": "<(IDENTIFIER,c,c++)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.assignment,horizontalEdgeWeights[r][c] = nextInt())<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,horizontalEdgeWeights[r])<SUB>11</SUB>>", "77": "<(IDENTIFIER,r,horizontalEdgeWeights[r][c] = nextInt())<SUB>11</SUB>>", "79": "<(nextInt,nextInt())<SUB>11</SUB>>", "81": "<(LOCAL,int[][] verticalEdgeWeights: int[][])<SUB>15</SUB>>", "83": "<(IDENTIFIER,verticalEdgeWeights,int[][] verticalEdgeWeights = new int[rows - 1][cols])<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.subtraction,rows - 1)<SUB>15</SUB>>", "87": "<(LITERAL,1,rows - 1)<SUB>15</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows - 1); r++),for (int r = 0; Some(r &lt; rows - 1); r++))<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>16</SUB>>", "93": "<(LITERAL,0,int r = 0)<SUB>16</SUB>>", "95": "<(IDENTIFIER,r,r &lt; rows - 1)<SUB>16</SUB>>", "97": "<(IDENTIFIER,rows,rows - 1)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,r++)<SUB>16</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(LOCAL,int c: int)<SUB>17</SUB>>", "105": "<(IDENTIFIER,c,int c = 0)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>17</SUB>>", "109": "<(IDENTIFIER,cols,c &lt; cols)<SUB>17</SUB>>", "111": "<(IDENTIFIER,c,c++)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,verticalEdgeWeights[r][c] = nextInt())<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,verticalEdgeWeights[r])<SUB>18</SUB>>", "117": "<(IDENTIFIER,r,verticalEdgeWeights[r][c] = nextInt())<SUB>18</SUB>>", "119": "<(nextInt,nextInt())<SUB>18</SUB>>", "121": "<(LOCAL,int[][] result: int[][])<SUB>22</SUB>>", "123": "<(IDENTIFIER,result,int[][] result = getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>22</SUB>>", "125": "<(IDENTIFIER,this,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>22</SUB>>", "127": "<(IDENTIFIER,cols,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>22</SUB>>", "129": "<(IDENTIFIER,horizontalEdgeWeights,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>22</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows); r++),for (int r = 0; Some(r &lt; rows); r++))<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>23</SUB>>", "135": "<(LITERAL,0,int r = 0)<SUB>23</SUB>>", "137": "<(IDENTIFIER,r,r &lt; rows)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,r++)<SUB>23</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "143": "<(LOCAL,int c: int)<SUB>24</SUB>>", "145": "<(IDENTIFIER,c,int c = 0)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>24</SUB>>", "149": "<(IDENTIFIER,cols,c &lt; cols)<SUB>24</SUB>>", "151": "<(IDENTIFIER,c,c++)<SUB>24</SUB>>", "153": "<(append,solution.append(result[r][c] + &quot; &quot;))<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.addition,result[r][c] + &quot; &quot;)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,result[r])<SUB>25</SUB>>", "159": "<(IDENTIFIER,r,result[r][c] + &quot; &quot;)<SUB>25</SUB>>", "161": "<(LITERAL,&quot; &quot;,result[r][c] + &quot; &quot;)<SUB>25</SUB>>", "163": "<(IDENTIFIER,solution,solution.append(&quot;\\n&quot;))<SUB>27</SUB>>", "165": "<(print,print(solution.toString()))<SUB>30</SUB>>", "167": "<(toString,solution.toString())<SUB>30</SUB>>", "169": "<(close,close())<SUB>31</SUB>>", "171": "<(MODIFIER,PUBLIC)>", "173": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}