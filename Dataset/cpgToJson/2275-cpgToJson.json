{"edges": [["19", "20"], ["19", "21"], ["19", "202"], ["19", "203"], ["19", "204"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "60"], ["21", "61"], ["21", "70"], ["21", "77"], ["21", "78"], ["21", "81"], ["21", "173"], ["21", "174"], ["21", "177"], ["21", "195"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "59"], ["55", "56"], ["55", "58"], ["56", "57"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "168"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "103"], ["96", "106"], ["96", "108"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "111"], ["109", "138"], ["111", "112"], ["111", "127"], ["112", "113"], ["112", "122"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "137"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["138", "139"], ["139", "140"], ["139", "147"], ["139", "150"], ["139", "159"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["61", "72"], ["70", "78"], ["78", "83"], ["174", "179"], ["195", "204"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "64"], ["47", "44"], ["63", "61"], ["71", "70"], ["83", "86"], ["86", "93"], ["86", "174"], ["89", "86"], ["179", "182"], ["182", "191"], ["182", "198"], ["185", "182"], ["196", "199"], ["199", "195"], ["28", "26"], ["50", "47"], ["64", "67"], ["67", "63"], ["72", "71"], ["93", "100"], ["168", "89"], ["188", "185"], ["198", "196"], ["51", "56"], ["54", "50"], ["98", "103"], ["103", "110"], ["103", "170"], ["106", "103"], ["170", "168"], ["190", "188"], ["55", "54"], ["100", "98"], ["191", "190"], ["56", "55"], ["110", "116"], ["110", "143"], ["112", "131"], ["127", "106"], ["113", "123"], ["122", "112"], ["128", "127"], ["140", "147"], ["147", "154"], ["150", "163"], ["159", "106"], ["114", "119"], ["119", "113"], ["123", "122"], ["129", "134"], ["134", "128"], ["142", "140"], ["151", "150"], ["160", "159"], ["116", "114"], ["131", "129"], ["143", "142"], ["152", "151"], ["161", "160"], ["154", "152"], ["163", "161"], ["19", "24"], ["20", "204"], ["22", "204"], ["25", "204"], ["25", "204"], ["32", "204"], ["30", "204"], ["30", "204"], ["35", "204"], ["35", "204"], ["35", "204"], ["41", "204"], ["44", "204"], ["44", "204"], ["61", "204"], ["63", "204"], ["61", "204"], ["61", "204"], ["70", "204"], ["70", "204"], ["78", "204"], ["78", "204"], ["83", "204"], ["86", "204"], ["86", "204"], ["174", "204"], ["179", "204"], ["182", "204"], ["182", "204"], ["182", "204"], ["195", "204"], ["199", "204"], ["199", "204"], ["195", "204"], ["195", "204"], ["188", "204"], ["188", "204"], ["185", "204"], ["93", "204"], ["93", "204"], ["98", "204"], ["98", "204"], ["103", "204"], ["168", "204"], ["168", "204"], ["168", "204"], ["89", "204"], ["140", "204"], ["140", "204"], ["150", "204"], ["150", "204"], ["159", "204"], ["112", "204"], ["112", "204"], ["127", "204"], ["106", "204"], ["50", "204"], ["56", "204"], ["55", "204"], ["54", "204"], ["50", "204"], ["50", "204"], ["47", "204"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["63", "61"], ["19", "70"], ["19", "78"], ["19", "174"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "83"], ["19", "179"], ["199", "195"], ["199", "195"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["54", "50"], ["44", "63"], ["19", "63"], ["83", "86"], ["89", "86"], ["19", "86"], ["100", "86"], ["44", "86"], ["86", "89"], ["19", "89"], ["19", "93"], ["35", "168"], ["179", "182"], ["185", "182"], ["19", "182"], ["86", "182"], ["182", "185"], ["19", "185"], ["174", "199"], ["188", "199"], ["19", "199"], ["44", "64"], ["19", "64"], ["19", "67"], ["44", "67"], ["100", "98"], ["100", "98"], ["174", "188"], ["19", "188"], ["55", "54"], ["55", "54"], ["19", "54"], ["98", "103"], ["106", "103"], ["19", "103"], ["103", "106"], ["19", "106"], ["56", "55"], ["19", "55"], ["86", "100"], ["19", "100"], ["19", "110"], ["32", "56"], ["19", "56"], ["19", "127"], ["127", "112"], ["112", "127"], ["19", "147"], ["147", "150"], ["19", "150"], ["19", "159"], ["93", "140"], ["19", "140"], ["147", "140"], ["140", "147"], ["159", "150"], ["150", "159"], ["103", "119"], ["19", "119"], ["19", "134"], ["103", "134"], ["86", "116"], ["19", "116"], ["19", "131"], ["86", "131"], ["86", "154"], ["19", "154"], ["19", "163"], ["86", "163"], ["44", "51"], ["44", "56"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["44", "55"], ["86", "98"], ["86", "103"], ["86", "168"], ["86", "170"], ["86", "93"], ["86", "100"], ["86", "86"], ["86", "89"], ["182", "188"], ["182", "185"], ["182", "191"], ["182", "190"], ["182", "182"], ["103", "103"], ["103", "106"], ["103", "110"], ["110", "113"], ["110", "154"], ["110", "128"], ["110", "161"], ["110", "163"], ["110", "114"], ["110", "131"], ["110", "150"], ["110", "151"], ["110", "119"], ["110", "112"], ["110", "129"], ["110", "134"], ["110", "152"], ["110", "127"], ["110", "160"], ["110", "116"], ["110", "122"], ["110", "142"], ["110", "123"], ["110", "159"], ["110", "140"], ["110", "143"], ["110", "147"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,boolean[] isFor = new boolean[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new boolean[n])>", "39": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; n); a++),for (int a = 0; Some(a &lt; n); a++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int a = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,a,a &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,a++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,isFor[a])<SUB>6</SUB>>", "53": "<(IDENTIFIER,a,isFor[a] = input.next().charAt(0) == 'f')<SUB>6</SUB>>", "55": "<(charAt,charAt(0))<SUB>6</SUB>>", "57": "<(IDENTIFIER,input,next())<SUB>6</SUB>>", "59": "<(LITERAL,'f',input.next().charAt(0) == 'f')<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,long[][] array = new long[n + 1][n + 1])<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.alloc,new long[n + 1][n + 1])>", "65": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.addition,n + 1)<SUB>8</SUB>>", "69": "<(LITERAL,1,n + 1)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,array[0][0])<SUB>9</SUB>>", "73": "<(IDENTIFIER,array,array[0][0] = 1)<SUB>9</SUB>>", "75": "<(LITERAL,0,array[0][0] = 1)<SUB>9</SUB>>", "77": "<(LOCAL,boolean isPreviousFor: boolean)<SUB>10</SUB>>", "79": "<(IDENTIFIER,isPreviousFor,boolean isPreviousFor = false)<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int idx = 0; Some(idx &lt; n); idx++),for (int idx = 0; Some(idx &lt; n); idx++))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,int idx = 0)<SUB>11</SUB>>", "85": "<(LITERAL,0,int idx = 0)<SUB>11</SUB>>", "87": "<(IDENTIFIER,idx,idx &lt; n)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,idx++)<SUB>11</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.assignment,long heightCache = 0)<SUB>12</SUB>>", "95": "<(LITERAL,0,long heightCache = 0)<SUB>12</SUB>>", "97": "<(LOCAL,int height: int)<SUB>13</SUB>>", "99": "<(IDENTIFIER,height,int height = n - 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.greaterEqualsThan,height &gt;= 0)<SUB>13</SUB>>", "105": "<(LITERAL,0,height &gt;= 0)<SUB>13</SUB>>", "107": "<(IDENTIFIER,height,height--)<SUB>13</SUB>>", "109": "<(CONTROL_STRUCTURE,if (isPreviousFor),if (isPreviousFor))<SUB>14</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,array[idx + 1][height + 1])<SUB>15</SUB>>", "115": "<(IDENTIFIER,array,array[idx + 1][height + 1] += array[idx][height])<SUB>15</SUB>>", "117": "<(IDENTIFIER,idx,idx + 1)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.addition,height + 1)<SUB>15</SUB>>", "121": "<(LITERAL,1,height + 1)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,array[idx])<SUB>15</SUB>>", "125": "<(IDENTIFIER,idx,array[idx + 1][height + 1] += array[idx][height])<SUB>15</SUB>>", "127": "<(&lt;operators&gt;.assignmentModulo,array[idx + 1][height + 1] %= MOD)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,array[idx + 1])<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.addition,idx + 1)<SUB>16</SUB>>", "133": "<(LITERAL,1,idx + 1)<SUB>16</SUB>>", "135": "<(IDENTIFIER,height,height + 1)<SUB>16</SUB>>", "137": "<(IDENTIFIER,MOD,array[idx + 1][height + 1] %= MOD)<SUB>16</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "141": "<(IDENTIFIER,heightCache,heightCache += array[idx][height])<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,array[idx])<SUB>18</SUB>>", "145": "<(IDENTIFIER,idx,heightCache += array[idx][height])<SUB>18</SUB>>", "147": "<(&lt;operators&gt;.assignmentModulo,heightCache %= MOD)<SUB>19</SUB>>", "149": "<(IDENTIFIER,MOD,heightCache %= MOD)<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,array[idx + 1][height])<SUB>20</SUB>>", "153": "<(IDENTIFIER,array,array[idx + 1][height] += heightCache)<SUB>20</SUB>>", "155": "<(IDENTIFIER,idx,idx + 1)<SUB>20</SUB>>", "157": "<(IDENTIFIER,height,array[idx + 1][height] += heightCache)<SUB>20</SUB>>", "159": "<(&lt;operators&gt;.assignmentModulo,array[idx + 1][height] %= MOD)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,array[idx + 1])<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.addition,idx + 1)<SUB>21</SUB>>", "165": "<(LITERAL,1,idx + 1)<SUB>21</SUB>>", "167": "<(IDENTIFIER,MOD,array[idx + 1][height] %= MOD)<SUB>21</SUB>>", "169": "<(IDENTIFIER,isPreviousFor,isPreviousFor = isFor[idx])<SUB>24</SUB>>", "171": "<(IDENTIFIER,isFor,isPreviousFor = isFor[idx])<SUB>24</SUB>>", "173": "<(LOCAL,long sum: long)<SUB>27</SUB>>", "175": "<(IDENTIFIER,sum,long sum = 0)<SUB>27</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int height = 0; Some(height &lt;= n); height++),for (int height = 0; Some(height &lt;= n); height++))<SUB>28</SUB>>", "179": "<(&lt;operator&gt;.assignment,int height = 0)<SUB>28</SUB>>", "181": "<(LITERAL,0,int height = 0)<SUB>28</SUB>>", "183": "<(IDENTIFIER,height,height &lt;= n)<SUB>28</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,height++)<SUB>28</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "189": "<(IDENTIFIER,sum,sum += array[n][height])<SUB>29</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,array[n])<SUB>29</SUB>>", "193": "<(IDENTIFIER,n,sum += array[n][height])<SUB>29</SUB>>", "195": "<(println,println(sum % MOD))<SUB>31</SUB>>", "197": "<(IDENTIFIER,System,println(sum % MOD))<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.modulo,sum % MOD)<SUB>31</SUB>>", "201": "<(IDENTIFIER,MOD,sum % MOD)<SUB>31</SUB>>", "203": "<(MODIFIER,STATIC)>"}}