{"edges": [["17", "18"], ["17", "19"], ["17", "278"], ["17", "279"], ["17", "280"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "40"], ["19", "65"], ["19", "66"], ["19", "76"], ["19", "232"], ["19", "233"], ["19", "236"], ["19", "273"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "57"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "64"], ["62", "63"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "72"], ["68", "73"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "106"], ["98", "134"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["107", "108"], ["107", "119"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "133"], ["120", "121"], ["120", "132"], ["121", "122"], ["121", "129"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["134", "135"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "154"], ["144", "156"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "167"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["165", "166"], ["167", "168"], ["167", "181"], ["168", "169"], ["168", "176"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "231"], ["182", "183"], ["182", "214"], ["183", "184"], ["183", "197"], ["184", "185"], ["184", "192"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "213"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["214", "215"], ["214", "230"], ["215", "216"], ["215", "223"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "229"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["236", "241"], ["236", "244"], ["236", "246"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["244", "245"], ["246", "247"], ["247", "248"], ["247", "249"], ["247", "252"], ["247", "257"], ["247", "259"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["254", "255"], ["254", "256"], ["257", "258"], ["259", "260"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "272"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["21", "28"], ["26", "33"], ["31", "38"], ["36", "42"], ["66", "78"], ["233", "238"], ["273", "280"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["42", "45"], ["45", "52"], ["45", "69"], ["48", "45"], ["68", "66"], ["78", "81"], ["81", "89"], ["81", "233"], ["84", "81"], ["238", "241"], ["241", "249"], ["241", "276"], ["244", "241"], ["274", "273"], ["51", "58"], ["57", "48"], ["69", "73"], ["73", "68"], ["276", "274"], ["52", "55"], ["55", "51"], ["58", "62"], ["61", "57"], ["89", "92"], ["92", "102"], ["92", "84"], ["95", "92"], ["249", "254"], ["252", "267"], ["252", "244"], ["257", "254"], ["62", "61"], ["254", "252"], ["260", "257"], ["99", "110"], ["99", "139"], ["262", "260"], ["100", "99"], ["107", "95"], ["263", "262"], ["102", "100"], ["108", "123"], ["119", "107"], ["136", "146"], ["136", "95"], ["265", "263"], ["109", "116"], ["116", "108"], ["120", "119"], ["137", "136"], ["266", "265"], ["110", "113"], ["113", "109"], ["121", "120"], ["139", "137"], ["146", "151"], ["149", "160"], ["149", "95"], ["154", "151"], ["267", "266"], ["122", "129"], ["129", "121"], ["151", "149"], ["167", "154"], ["123", "126"], ["126", "122"], ["158", "154"], ["158", "170"], ["168", "186"], ["181", "167"], ["159", "158"], ["169", "178"], ["176", "168"], ["182", "181"], ["160", "159"], ["170", "173"], ["173", "169"], ["178", "176"], ["183", "220"], ["214", "182"], ["184", "203"], ["197", "183"], ["215", "214"], ["185", "194"], ["192", "184"], ["198", "197"], ["216", "225"], ["223", "215"], ["186", "189"], ["189", "185"], ["194", "192"], ["199", "208"], ["206", "198"], ["218", "216"], ["224", "223"], ["201", "199"], ["207", "206"], ["220", "218"], ["225", "224"], ["203", "201"], ["208", "207"], ["17", "23"], ["18", "280"], ["21", "280"], ["28", "280"], ["26", "280"], ["26", "280"], ["31", "280"], ["31", "280"], ["36", "280"], ["36", "280"], ["36", "280"], ["42", "280"], ["45", "280"], ["45", "280"], ["66", "280"], ["68", "280"], ["68", "280"], ["66", "280"], ["66", "280"], ["78", "280"], ["81", "280"], ["81", "280"], ["81", "280"], ["233", "280"], ["238", "280"], ["241", "280"], ["241", "280"], ["273", "280"], ["273", "280"], ["273", "280"], ["249", "280"], ["252", "280"], ["252", "280"], ["252", "280"], ["244", "280"], ["263", "280"], ["262", "280"], ["262", "280"], ["260", "280"], ["260", "280"], ["257", "280"], ["92", "280"], ["92", "280"], ["84", "280"], ["100", "280"], ["99", "280"], ["99", "280"], ["137", "280"], ["136", "280"], ["136", "280"], ["146", "280"], ["149", "280"], ["149", "280"], ["149", "280"], ["159", "280"], ["158", "280"], ["158", "280"], ["167", "280"], ["192", "280"], ["206", "280"], ["183", "280"], ["182", "280"], ["218", "280"], ["224", "280"], ["223", "280"], ["182", "280"], ["181", "280"], ["181", "280"], ["167", "280"], ["167", "280"], ["154", "280"], ["107", "280"], ["119", "280"], ["119", "280"], ["107", "280"], ["107", "280"], ["95", "280"], ["51", "280"], ["51", "280"], ["57", "280"], ["62", "280"], ["61", "280"], ["57", "280"], ["57", "280"], ["48", "280"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["68", "66"], ["68", "66"], ["68", "66"], ["17", "233"], ["17", "42"], ["17", "78"], ["17", "238"], ["233", "273"], ["260", "273"], ["17", "273"], ["17", "23"], ["23", "28"], ["17", "28"], ["21", "33"], ["17", "33"], ["33", "38"], ["17", "38"], ["42", "45"], ["48", "45"], ["17", "45"], ["38", "45"], ["45", "48"], ["17", "48"], ["55", "51"], ["61", "57"], ["61", "57"], ["26", "68"], ["17", "68"], ["73", "68"], ["73", "68"], ["78", "81"], ["84", "81"], ["17", "81"], ["26", "81"], ["81", "84"], ["100", "84"], ["137", "84"], ["218", "84"], ["17", "84"], ["238", "241"], ["244", "241"], ["17", "241"], ["241", "244"], ["17", "244"], ["26", "69"], ["17", "69"], ["17", "73"], ["17", "89"], ["17", "249"], ["28", "55"], ["62", "55"], ["17", "55"], ["62", "61"], ["17", "61"], ["89", "92"], ["95", "92"], ["17", "92"], ["45", "92"], ["92", "95"], ["160", "95"], ["194", "95"], ["129", "95"], ["17", "95"], ["249", "252"], ["257", "252"], ["17", "252"], ["254", "252"], ["254", "252"], ["252", "257"], ["17", "257"], ["262", "260"], ["262", "260"], ["55", "62"], ["17", "62"], ["17", "254"], ["100", "99"], ["100", "99"], ["17", "99"], ["119", "107"], ["119", "107"], ["233", "262"], ["260", "262"], ["17", "262"], ["181", "262"], ["119", "262"], ["81", "100"], ["137", "100"], ["218", "100"], ["17", "100"], ["31", "100"], ["137", "100"], ["218", "100"], ["233", "263"], ["260", "263"], ["17", "263"], ["107", "119"], ["17", "119"], ["181", "119"], ["137", "136"], ["137", "136"], ["17", "136"], ["17", "116"], ["92", "116"], ["107", "120"], ["17", "120"], ["100", "137"], ["17", "137"], ["31", "137"], ["100", "137"], ["17", "146"], ["146", "149"], ["154", "149"], ["17", "149"], ["151", "149"], ["151", "149"], ["160", "154"], ["17", "154"], ["181", "167"], ["181", "167"], ["17", "129"], ["116", "129"], ["17", "151"], ["159", "158"], ["159", "158"], ["17", "158"], ["167", "181"], ["119", "181"], ["17", "181"], ["160", "159"], ["160", "159"], ["17", "159"], ["160", "176"], ["17", "176"], ["178", "176"], ["178", "176"], ["167", "182"], ["149", "160"], ["17", "160"], ["92", "160"], ["194", "160"], ["17", "178"], ["160", "178"], ["167", "183"], ["17", "192"], ["160", "192"], ["194", "192"], ["194", "192"], ["36", "223"], ["17", "223"], ["17", "194"], ["178", "194"], ["36", "206"], ["17", "206"], ["201", "218"], ["17", "218"], ["31", "218"], ["201", "218"], ["36", "224"], ["17", "224"], ["137", "201"], ["218", "201"], ["17", "201"], ["31", "201"], ["137", "201"], ["218", "201"], ["36", "207"], ["17", "207"], ["45", "51"], ["45", "57"], ["45", "52"], ["45", "58"], ["45", "61"], ["45", "48"], ["45", "45"], ["45", "55"], ["45", "62"], ["81", "81"], ["81", "84"], ["81", "92"], ["81", "89"], ["241", "244"], ["241", "249"], ["241", "252"], ["241", "254"], ["241", "241"], ["92", "102"], ["92", "95"], ["92", "92"], ["92", "100"], ["92", "99"], ["252", "257"], ["252", "262"], ["252", "267"], ["252", "265"], ["252", "252"], ["252", "260"], ["252", "254"], ["252", "263"], ["252", "266"], ["99", "107"], ["99", "120"], ["99", "113"], ["99", "136"], ["99", "119"], ["99", "121"], ["99", "129"], ["99", "137"], ["99", "139"], ["99", "108"], ["99", "116"], ["99", "122"], ["99", "123"], ["99", "126"], ["99", "110"], ["99", "109"], ["136", "146"], ["136", "149"], ["136", "151"], ["149", "154"], ["149", "149"], ["149", "151"], ["149", "158"], ["149", "160"], ["149", "159"], ["158", "214"], ["158", "167"], ["158", "192"], ["158", "169"], ["158", "225"], ["158", "178"], ["158", "215"], ["158", "185"], ["158", "197"], ["158", "198"], ["158", "189"], ["158", "168"], ["158", "170"], ["158", "206"], ["158", "181"], ["158", "208"], ["158", "223"], ["158", "184"], ["158", "173"], ["158", "207"], ["158", "194"], ["158", "182"], ["158", "224"], ["158", "186"], ["158", "201"], ["158", "183"], ["158", "176"], ["158", "220"], ["158", "199"], ["158", "216"], ["158", "203"], ["158", "218"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int T: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,T,int T = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int[] t = new int[n])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[n])>", "35": "<(LOCAL,int[] g: int[])<SUB>5</SUB>>", "37": "<(IDENTIFIER,g,int[] g = new int[n])<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "41": "<(LOCAL,int i: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,t[i] = nextInt())<SUB>7</SUB>>", "53": "<(IDENTIFIER,t,t[i] = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,g[i] = sc.nextInt() - 1)<SUB>8</SUB>>", "59": "<(IDENTIFIER,g,g[i] = sc.nextInt() - 1)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>8</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "65": "<(LOCAL,long[][][] dp: long[][][])<SUB>10</SUB>>", "67": "<(IDENTIFIER,dp,long[][][] dp = new long[T + 1][3][1 &lt;&lt; 15])<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.addition,T + 1)<SUB>10</SUB>>", "71": "<(LITERAL,1,T + 1)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 15)<SUB>10</SUB>>", "75": "<(LITERAL,15,1 &lt;&lt; 15)<SUB>10</SUB>>", "77": "<(LOCAL,int i: int)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,int i = 1)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= T)<SUB>11</SUB>>", "83": "<(IDENTIFIER,T,i &lt;= T)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "91": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "93": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.equals,i - t[j] == 0)<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,i - t[j])<SUB>13</SUB>>", "103": "<(IDENTIFIER,t,i - t[j])<SUB>13</SUB>>", "105": "<(LITERAL,0,i - t[j] == 0)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,dp[i][g[j]][1 &lt;&lt; j] = (dp[i][g[j]][1 &lt;&lt; j] + 1) % mod)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,dp[i][g[j]])<SUB>14</SUB>>", "111": "<(IDENTIFIER,dp,dp[i][g[j]][1 &lt;&lt; j] = (dp[i][g[j]][1 &lt;&lt; j] + 1) % mod)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>14</SUB>>", "115": "<(IDENTIFIER,j,dp[i][g[j]][1 &lt;&lt; j] = (dp[i][g[j]][1 &lt;&lt; j] + 1) % mod)<SUB>14</SUB>>", "117": "<(LITERAL,1,1 &lt;&lt; j)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.modulo,(dp[i][g[j]][1 &lt;&lt; j] + 1) % mod)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,dp[i][g[j]][1 &lt;&lt; j])<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,dp[i][g[j]][1 &lt;&lt; j] + 1)<SUB>14</SUB>>", "127": "<(IDENTIFIER,g,dp[i][g[j]][1 &lt;&lt; j] + 1)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>14</SUB>>", "131": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>14</SUB>>", "133": "<(IDENTIFIER,mod,(dp[i][g[j]][1 &lt;&lt; j] + 1) % mod)<SUB>14</SUB>>", "135": "<(CONTROL_STRUCTURE,if (i - t[j] &gt; 0),if (i - t[j] &gt; 0))<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.subtraction,i - t[j])<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,t[j])<SUB>15</SUB>>", "141": "<(IDENTIFIER,j,i - t[j])<SUB>15</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "145": "<(LOCAL,int k: int)<SUB>16</SUB>>", "147": "<(IDENTIFIER,k,int k = 0)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.lessThan,k &lt; (1 &lt;&lt; 15))<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 15)<SUB>16</SUB>>", "153": "<(LITERAL,15,1 &lt;&lt; 15)<SUB>16</SUB>>", "155": "<(IDENTIFIER,k,k++)<SUB>16</SUB>>", "157": "<(CONTROL_STRUCTURE,if ((k &gt;&gt; j &amp; 1) == 1),if ((k &gt;&gt; j &amp; 1) == 1))<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.and,k &gt;&gt; j &amp; 1)<SUB>17</SUB>>", "161": "<(IDENTIFIER,k,k &gt;&gt; j)<SUB>17</SUB>>", "163": "<(LITERAL,1,k &gt;&gt; j &amp; 1)<SUB>17</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "167": "<(&lt;operator&gt;.assignment,dp[i][g[j]][k + (1 &lt;&lt; j)] = (dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k]) % mod)<SUB>20</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dp[i][g[j]])<SUB>20</SUB>>", "171": "<(IDENTIFIER,dp,dp[i][g[j]][k + (1 &lt;&lt; j)] = (dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k]) % mod)<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>20</SUB>>", "175": "<(IDENTIFIER,j,dp[i][g[j]][k + (1 &lt;&lt; j)] = (dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k]) % mod)<SUB>20</SUB>>", "177": "<(IDENTIFIER,k,k + (1 &lt;&lt; j))<SUB>20</SUB>>", "179": "<(LITERAL,1,1 &lt;&lt; j)<SUB>20</SUB>>", "181": "<(&lt;operator&gt;.modulo,(dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k]) % mod)<SUB>20</SUB>>", "183": "<(&lt;operator&gt;.addition,dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k])<SUB>20</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp[i][g[j]])<SUB>20</SUB>>", "187": "<(IDENTIFIER,dp,dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k])<SUB>20</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>20</SUB>>", "191": "<(IDENTIFIER,j,dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k])<SUB>20</SUB>>", "193": "<(IDENTIFIER,k,k + (1 &lt;&lt; j))<SUB>20</SUB>>", "195": "<(LITERAL,1,1 &lt;&lt; j)<SUB>20</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[i - t[j]][(g[j] + 1) % 3][k])<SUB>20</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[i - t[j]])<SUB>20</SUB>>", "201": "<(&lt;operator&gt;.subtraction,i - t[j])<SUB>20</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,t[j])<SUB>20</SUB>>", "205": "<(IDENTIFIER,j,i - t[j])<SUB>20</SUB>>", "207": "<(&lt;operator&gt;.addition,g[j] + 1)<SUB>20</SUB>>", "209": "<(IDENTIFIER,g,g[j] + 1)<SUB>20</SUB>>", "211": "<(LITERAL,1,g[j] + 1)<SUB>20</SUB>>", "213": "<(IDENTIFIER,k,dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k])<SUB>20</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[i - t[j]][(g[j] + 2) % 3])<SUB>20</SUB>>", "217": "<(IDENTIFIER,dp,dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k])<SUB>20</SUB>>", "219": "<(IDENTIFIER,i,i - t[j])<SUB>20</SUB>>", "221": "<(IDENTIFIER,t,i - t[j])<SUB>20</SUB>>", "223": "<(&lt;operator&gt;.modulo,(g[j] + 2) % 3)<SUB>20</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>20</SUB>>", "227": "<(IDENTIFIER,j,g[j] + 2)<SUB>20</SUB>>", "229": "<(LITERAL,3,(g[j] + 2) % 3)<SUB>20</SUB>>", "231": "<(IDENTIFIER,mod,(dp[i][g[j]][k + (1 &lt;&lt; j)] + dp[i - t[j]][(g[j] + 1) % 3][k] + dp[i - t[j]][(g[j] + 2) % 3][k]) % mod)<SUB>20</SUB>>", "233": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>25</SUB>>", "235": "<(LITERAL,0,long ans = 0)<SUB>25</SUB>>", "237": "<(LOCAL,int j: int)<SUB>26</SUB>>", "239": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "241": "<(&lt;operator&gt;.lessThan,j &lt; 3)<SUB>26</SUB>>", "243": "<(LITERAL,3,j &lt; 3)<SUB>26</SUB>>", "245": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "247": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; (1 &lt;&lt; 15)); k++),for (int k = 0; Some(k &lt; (1 &lt;&lt; 15)); k++))<SUB>27</SUB>>", "249": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>27</SUB>>", "251": "<(LITERAL,0,int k = 0)<SUB>27</SUB>>", "253": "<(IDENTIFIER,k,k &lt; (1 &lt;&lt; 15))<SUB>27</SUB>>", "255": "<(LITERAL,1,1 &lt;&lt; 15)<SUB>27</SUB>>", "257": "<(&lt;operator&gt;.postIncrement,k++)<SUB>27</SUB>>", "259": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "261": "<(IDENTIFIER,ans,ans = (ans + dp[T][j][k]) % mod)<SUB>28</SUB>>", "263": "<(&lt;operator&gt;.addition,ans + dp[T][j][k])<SUB>28</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,dp[T][j][k])<SUB>28</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[T])<SUB>28</SUB>>", "269": "<(IDENTIFIER,T,ans + dp[T][j][k])<SUB>28</SUB>>", "271": "<(IDENTIFIER,k,ans + dp[T][j][k])<SUB>28</SUB>>", "273": "<(println,System.out.println(ans))<SUB>31</SUB>>", "275": "<(IDENTIFIER,System,System.out.println(ans))<SUB>31</SUB>>", "277": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>31</SUB>>", "279": "<(MODIFIER,STATIC)>"}}