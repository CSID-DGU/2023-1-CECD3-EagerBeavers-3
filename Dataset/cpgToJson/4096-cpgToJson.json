{"edges": [["19", "21"], ["19", "457"], ["19", "458"], ["19", "459"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "46"], ["21", "50"], ["21", "54"], ["21", "77"], ["21", "78"], ["21", "82"], ["21", "83"], ["21", "88"], ["21", "128"], ["21", "237"], ["21", "238"], ["21", "239"], ["21", "245"], ["21", "251"], ["21", "367"], ["21", "378"], ["21", "383"], ["21", "384"], ["21", "391"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "71"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "117"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "141"], ["139", "146"], ["139", "149"], ["139", "151"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "222"], ["159", "160"], ["159", "207"], ["160", "161"], ["160", "196"], ["161", "162"], ["161", "185"], ["162", "163"], ["162", "174"], ["163", "164"], ["163", "169"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "215"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "230"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["239", "240"], ["239", "241"], ["241", "242"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["247", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["251", "256"], ["251", "261"], ["251", "263"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["263", "264"], ["263", "265"], ["263", "268"], ["263", "278"], ["263", "293"], ["263", "300"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "276"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "274"], ["276", "277"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "290"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["300", "307"], ["300", "310"], ["300", "312"], ["302", "303"], ["302", "304"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "309"], ["310", "311"], ["312", "313"], ["313", "314"], ["313", "321"], ["314", "315"], ["314", "320"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["321", "322"], ["321", "323"], ["321", "342"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "337"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "334"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["342", "343"], ["342", "348"], ["343", "344"], ["343", "345"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "354"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["354", "355"], ["354", "358"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "364"], ["359", "360"], ["359", "363"], ["360", "361"], ["360", "362"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "371"], ["368", "369"], ["368", "370"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["384", "385"], ["384", "386"], ["386", "387"], ["386", "390"], ["387", "388"], ["387", "389"], ["391", "392"], ["391", "395"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "397"], ["395", "404"], ["395", "405"], ["395", "412"], ["395", "431"], ["395", "450"], ["397", "398"], ["397", "399"], ["399", "400"], ["399", "403"], ["400", "401"], ["400", "402"], ["405", "406"], ["405", "407"], ["407", "408"], ["407", "411"], ["408", "409"], ["408", "410"], ["412", "413"], ["412", "416"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "424"], ["417", "418"], ["417", "421"], ["418", "419"], ["418", "420"], ["421", "422"], ["421", "423"], ["424", "425"], ["424", "426"], ["426", "427"], ["426", "428"], ["428", "429"], ["428", "430"], ["431", "432"], ["431", "435"], ["432", "433"], ["432", "434"], ["435", "436"], ["435", "443"], ["436", "437"], ["436", "440"], ["437", "438"], ["437", "439"], ["440", "441"], ["440", "442"], ["443", "444"], ["443", "445"], ["445", "446"], ["445", "447"], ["447", "448"], ["447", "449"], ["450", "451"], ["450", "454"], ["451", "452"], ["451", "453"], ["454", "455"], ["454", "456"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "48"], ["46", "52"], ["50", "56"], ["78", "85"], ["83", "90"], ["239", "248"], ["245", "253"], ["367", "381"], ["378", "387"], ["384", "392"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["52", "50"], ["56", "59"], ["59", "66"], ["59", "80"], ["62", "59"], ["80", "78"], ["85", "83"], ["90", "93"], ["93", "100"], ["93", "130"], ["96", "93"], ["130", "133"], ["133", "143"], ["133", "242"], ["136", "133"], ["241", "239"], ["247", "245"], ["253", "258"], ["256", "265"], ["256", "370"], ["261", "258"], ["368", "374"], ["371", "367"], ["379", "378"], ["386", "384"], ["392", "459"], ["392", "400"], ["28", "26"], ["65", "72"], ["71", "62"], ["99", "96"], ["242", "241"], ["248", "247"], ["258", "256"], ["265", "272"], ["278", "294"], ["293", "304"], ["370", "368"], ["373", "371"], ["381", "379"], ["387", "386"], ["397", "408"], ["405", "413"], ["450", "392"], ["66", "69"], ["69", "65"], ["72", "75"], ["75", "71"], ["100", "108"], ["103", "99"], ["141", "146"], ["146", "154"], ["146", "136"], ["149", "146"], ["269", "276"], ["269", "279"], ["276", "272"], ["279", "287"], ["282", "278"], ["294", "297"], ["297", "293"], ["302", "307"], ["307", "317"], ["307", "261"], ["310", "307"], ["374", "373"], ["399", "397"], ["407", "405"], ["413", "420"], ["413", "432"], ["432", "439"], ["432", "453"], ["451", "454"], ["454", "450"], ["105", "103"], ["143", "141"], ["152", "149"], ["270", "269"], ["283", "290"], ["290", "282"], ["304", "302"], ["400", "399"], ["408", "407"], ["417", "428"], ["424", "432"], ["436", "447"], ["443", "453"], ["453", "451"], ["106", "119"], ["117", "105"], ["153", "165"], ["158", "152"], ["272", "270"], ["285", "283"], ["314", "331"], ["314", "310"], ["418", "421"], ["421", "417"], ["426", "424"], ["437", "440"], ["440", "436"], ["445", "443"], ["107", "113"], ["112", "106"], ["118", "124"], ["123", "117"], ["154", "153"], ["159", "224"], ["222", "158"], ["287", "285"], ["315", "314"], ["323", "345"], ["420", "418"], ["428", "426"], ["439", "437"], ["447", "445"], ["108", "107"], ["113", "112"], ["119", "118"], ["124", "123"], ["160", "209"], ["207", "159"], ["223", "231"], ["230", "222"], ["317", "315"], ["325", "323"], ["343", "350"], ["343", "310"], ["161", "198"], ["196", "160"], ["208", "216"], ["215", "207"], ["224", "227"], ["227", "223"], ["231", "234"], ["234", "230"], ["326", "338"], ["337", "325"], ["345", "343"], ["349", "355"], ["354", "310"], ["162", "187"], ["185", "161"], ["197", "203"], ["202", "196"], ["209", "212"], ["212", "208"], ["216", "219"], ["219", "215"], ["328", "326"], ["338", "337"], ["350", "349"], ["355", "360"], ["358", "354"], ["163", "176"], ["174", "162"], ["186", "192"], ["191", "185"], ["198", "197"], ["203", "202"], ["329", "334"], ["334", "328"], ["359", "364"], ["364", "358"], ["164", "170"], ["169", "163"], ["175", "181"], ["180", "174"], ["187", "186"], ["192", "191"], ["331", "329"], ["360", "359"], ["165", "164"], ["170", "169"], ["176", "175"], ["181", "180"], ["19", "24"], ["20", "459"], ["22", "459"], ["25", "459"], ["25", "459"], ["30", "459"], ["30", "459"], ["35", "459"], ["35", "459"], ["42", "459"], ["40", "459"], ["40", "459"], ["46", "459"], ["46", "459"], ["50", "459"], ["50", "459"], ["78", "459"], ["78", "459"], ["78", "459"], ["83", "459"], ["83", "459"], ["83", "459"], ["130", "459"], ["133", "459"], ["133", "459"], ["239", "459"], ["239", "459"], ["245", "459"], ["245", "459"], ["245", "459"], ["253", "459"], ["256", "459"], ["256", "459"], ["367", "459"], ["367", "459"], ["378", "459"], ["378", "459"], ["387", "459"], ["386", "459"], ["384", "459"], ["384", "459"], ["392", "459"], ["392", "459"], ["450", "459"], ["450", "459"], ["450", "459"], ["261", "459"], ["136", "459"], ["96", "459"], ["62", "459"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["52", "50"], ["80", "78"], ["85", "83"], ["241", "239"], ["247", "245"], ["386", "384"], ["386", "384"], ["22", "25"], ["19", "25"], ["19", "56"], ["19", "90"], ["19", "130"], ["19", "253"], ["239", "367"], ["367", "378"], ["19", "378"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["40", "48"], ["19", "48"], ["48", "52"], ["19", "52"], ["56", "59"], ["62", "59"], ["19", "59"], ["52", "59"], ["59", "62"], ["19", "62"], ["69", "65"], ["75", "71"], ["59", "80"], ["19", "80"], ["80", "85"], ["19", "85"], ["90", "93"], ["96", "93"], ["19", "93"], ["85", "93"], ["93", "96"], ["19", "96"], ["103", "99"], ["103", "99"], ["130", "133"], ["136", "133"], ["19", "133"], ["93", "133"], ["146", "133"], ["19", "136"], ["133", "136"], ["242", "241"], ["242", "241"], ["248", "247"], ["248", "247"], ["253", "256"], ["261", "256"], ["19", "256"], ["258", "256"], ["258", "256"], ["285", "261"], ["315", "261"], ["329", "261"], ["19", "261"], ["19", "265"], ["239", "278"], ["78", "278"], ["99", "278"], ["287", "293"], ["19", "293"], ["387", "386"], ["387", "386"], ["19", "386"], ["384", "392"], ["424", "392"], ["443", "392"], ["19", "392"], ["399", "397"], ["399", "397"], ["407", "405"], ["407", "405"], ["133", "141"], ["19", "141"], ["19", "242"], ["133", "242"], ["19", "248"], ["242", "248"], ["19", "258"], ["248", "258"], ["307", "258"], ["19", "302"], ["287", "302"], ["374", "373"], ["374", "373"], ["19", "373"], ["19", "387"], ["374", "387"], ["378", "450"], ["417", "450"], ["436", "450"], ["19", "450"], ["42", "69"], ["75", "69"], ["19", "69"], ["69", "75"], ["19", "75"], ["19", "103"], ["106", "103"], ["117", "103"], ["141", "146"], ["149", "146"], ["19", "146"], ["133", "146"], ["146", "149"], ["19", "149"], ["163", "152"], ["174", "152"], ["185", "152"], ["196", "152"], ["207", "152"], ["222", "152"], ["270", "269"], ["270", "269"], ["19", "269"], ["272", "276"], ["19", "276"], ["239", "282"], ["78", "282"], ["99", "282"], ["287", "297"], ["19", "297"], ["302", "307"], ["310", "307"], ["19", "307"], ["258", "307"], ["317", "310"], ["334", "310"], ["19", "310"], ["19", "374"], ["258", "374"], ["245", "399"], ["407", "399"], ["19", "399"], ["245", "407"], ["399", "407"], ["19", "407"], ["397", "413"], ["19", "413"], ["426", "424"], ["426", "424"], ["405", "432"], ["19", "432"], ["445", "443"], ["445", "443"], ["19", "454"], ["106", "105"], ["117", "105"], ["133", "143"], ["19", "143"], ["256", "270"], ["19", "270"], ["272", "270"], ["272", "270"], ["19", "304"], ["287", "304"], ["378", "417"], ["450", "417"], ["413", "417"], ["19", "417"], ["392", "424"], ["19", "424"], ["378", "436"], ["417", "436"], ["450", "436"], ["432", "436"], ["19", "436"], ["392", "443"], ["424", "443"], ["19", "443"], ["107", "106"], ["107", "106"], ["112", "106"], ["112", "106"], ["118", "117"], ["118", "117"], ["123", "117"], ["123", "117"], ["163", "158"], ["174", "158"], ["185", "158"], ["196", "158"], ["207", "158"], ["222", "158"], ["19", "272"], ["265", "272"], ["276", "272"], ["270", "285"], ["19", "285"], ["287", "285"], ["287", "285"], ["315", "314"], ["315", "314"], ["19", "314"], ["239", "323"], ["152", "323"], ["413", "421"], ["19", "421"], ["19", "426"], ["428", "426"], ["428", "426"], ["432", "440"], ["19", "440"], ["19", "445"], ["447", "445"], ["447", "445"], ["46", "107"], ["112", "107"], ["65", "107"], ["30", "107"], ["112", "107"], ["19", "107"], ["46", "112"], ["107", "112"], ["107", "112"], ["19", "112"], ["50", "118"], ["123", "118"], ["71", "118"], ["35", "118"], ["123", "118"], ["19", "118"], ["50", "123"], ["118", "123"], ["118", "123"], ["19", "123"], ["163", "159"], ["174", "159"], ["185", "159"], ["196", "159"], ["207", "159"], ["223", "222"], ["223", "222"], ["230", "222"], ["230", "222"], ["19", "287"], ["272", "287"], ["285", "315"], ["329", "315"], ["19", "315"], ["317", "315"], ["317", "315"], ["19", "428"], ["413", "428"], ["19", "447"], ["432", "447"], ["163", "160"], ["174", "160"], ["185", "160"], ["196", "160"], ["208", "207"], ["208", "207"], ["215", "207"], ["215", "207"], ["50", "223"], ["180", "223"], ["202", "223"], ["50", "230"], ["223", "230"], ["223", "230"], ["19", "317"], ["307", "317"], ["239", "325"], ["152", "325"], ["323", "343"], ["19", "343"], ["239", "343"], ["278", "343"], ["349", "343"], ["343", "349"], ["19", "349"], ["359", "354"], ["359", "354"], ["334", "354"], ["19", "354"], ["163", "161"], ["174", "161"], ["185", "161"], ["197", "196"], ["197", "196"], ["202", "196"], ["202", "196"], ["46", "208"], ["169", "208"], ["191", "208"], ["46", "215"], ["208", "215"], ["208", "215"], ["163", "162"], ["174", "162"], ["186", "185"], ["186", "185"], ["191", "185"], ["191", "185"], ["50", "197"], ["230", "197"], ["180", "197"], ["19", "197"], ["50", "202"], ["197", "202"], ["197", "202"], ["19", "202"], ["329", "328"], ["329", "328"], ["334", "328"], ["334", "328"], ["359", "358"], ["359", "358"], ["334", "358"], ["19", "358"], ["164", "163"], ["164", "163"], ["169", "163"], ["169", "163"], ["175", "174"], ["175", "174"], ["180", "174"], ["180", "174"], ["46", "186"], ["215", "186"], ["169", "186"], ["19", "186"], ["46", "191"], ["186", "191"], ["186", "191"], ["19", "191"], ["315", "329"], ["19", "329"], ["331", "329"], ["331", "329"], ["19", "334"], ["317", "334"], ["331", "359"], ["19", "359"], ["334", "364"], ["19", "364"], ["46", "164"], ["215", "164"], ["112", "164"], ["65", "164"], ["30", "164"], ["191", "164"], ["112", "164"], ["19", "164"], ["46", "169"], ["164", "169"], ["164", "169"], ["19", "169"], ["50", "175"], ["230", "175"], ["123", "175"], ["71", "175"], ["35", "175"], ["202", "175"], ["123", "175"], ["19", "175"], ["50", "180"], ["175", "180"], ["175", "180"], ["19", "180"], ["19", "331"], ["287", "331"], ["331", "360"], ["19", "360"], ["59", "59"], ["59", "66"], ["59", "72"], ["59", "65"], ["59", "71"], ["59", "75"], ["59", "69"], ["59", "62"], ["93", "112"], ["93", "93"], ["93", "118"], ["93", "100"], ["93", "108"], ["93", "123"], ["93", "117"], ["93", "107"], ["93", "96"], ["93", "113"], ["93", "103"], ["93", "119"], ["93", "99"], ["93", "106"], ["93", "105"], ["93", "124"], ["133", "136"], ["133", "146"], ["133", "141"], ["133", "133"], ["133", "143"], ["256", "272"], ["256", "290"], ["256", "283"], ["256", "256"], ["256", "302"], ["256", "258"], ["256", "304"], ["256", "278"], ["256", "269"], ["256", "297"], ["256", "282"], ["256", "261"], ["256", "279"], ["256", "307"], ["256", "285"], ["256", "293"], ["256", "265"], ["256", "287"], ["256", "294"], ["256", "270"], ["392", "450"], ["392", "392"], ["392", "408"], ["392", "405"], ["392", "397"], ["392", "413"], ["392", "400"], ["392", "453"], ["392", "451"], ["392", "432"], ["392", "399"], ["392", "454"], ["392", "407"], ["146", "230"], ["146", "192"], ["146", "154"], ["146", "146"], ["146", "161"], ["146", "163"], ["146", "215"], ["146", "209"], ["146", "196"], ["146", "162"], ["146", "170"], ["146", "181"], ["146", "208"], ["146", "152"], ["146", "174"], ["146", "224"], ["146", "186"], ["146", "202"], ["146", "180"], ["146", "158"], ["146", "160"], ["146", "159"], ["146", "176"], ["146", "216"], ["146", "227"], ["146", "222"], ["146", "169"], ["146", "149"], ["146", "185"], ["146", "197"], ["146", "198"], ["146", "153"], ["146", "191"], ["146", "223"], ["146", "187"], ["146", "231"], ["146", "207"], ["146", "212"], ["146", "164"], ["146", "234"], ["146", "165"], ["146", "175"], ["146", "203"], ["146", "219"], ["269", "272"], ["269", "276"], ["269", "269"], ["269", "270"], ["307", "317"], ["307", "315"], ["307", "310"], ["307", "307"], ["307", "314"], ["413", "428"], ["413", "418"], ["413", "426"], ["413", "424"], ["413", "420"], ["413", "417"], ["413", "421"], ["432", "437"], ["432", "447"], ["432", "443"], ["432", "440"], ["432", "439"], ["432", "436"], ["432", "445"], ["314", "334"], ["314", "326"], ["314", "338"], ["314", "329"], ["314", "328"], ["314", "323"], ["314", "337"], ["314", "325"], ["314", "343"], ["314", "345"], ["314", "331"], ["343", "358"], ["343", "349"], ["343", "355"], ["343", "364"], ["343", "360"], ["343", "359"], ["343", "354"], ["343", "350"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int xs: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,xs,int xs = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int ys = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int n: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,int[] y: int[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,x,int[] x = new int[n])<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "51": "<(IDENTIFIER,y,int[] y = new int[n])<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "55": "<(LOCAL,int i: int)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,x[i] = nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,x,x[i] = nextInt())<SUB>8</SUB>>", "69": "<(nextInt,nextInt())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,y[i] = nextInt())<SUB>9</SUB>>", "73": "<(IDENTIFIER,y,y[i] = nextInt())<SUB>9</SUB>>", "75": "<(nextInt,nextInt())<SUB>9</SUB>>", "77": "<(LOCAL,int[] single: int[])<SUB>11</SUB>>", "79": "<(IDENTIFIER,single,int[] single = new int[n])<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,int[][] pair = new int[n][n])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[n][n])>", "87": "<(IDENTIFIER,n,new int[n][n])<SUB>12</SUB>>", "89": "<(LOCAL,int i: int)<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,single[i] = 2 * ((x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys)))<SUB>14</SUB>>", "101": "<(IDENTIFIER,single,single[i] = 2 * ((x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys)))<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.multiplication,2 * ((x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys)))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.addition,(x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.subtraction,x[i] - xs)<SUB>14</SUB>>", "109": "<(IDENTIFIER,x,x[i] - xs)<SUB>14</SUB>>", "111": "<(IDENTIFIER,xs,x[i] - xs)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>14</SUB>>", "115": "<(IDENTIFIER,i,x[i] - xs)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.multiplication,(y[i] - ys) * (y[i] - ys))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>14</SUB>>", "121": "<(IDENTIFIER,i,y[i] - ys)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.subtraction,y[i] - ys)<SUB>14</SUB>>", "125": "<(IDENTIFIER,y,y[i] - ys)<SUB>14</SUB>>", "127": "<(IDENTIFIER,ys,y[i] - ys)<SUB>14</SUB>>", "129": "<(LOCAL,int i: int)<SUB>16</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>16</SUB>>", "135": "<(IDENTIFIER,n,i &lt; n)<SUB>16</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "139": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>17</SUB>>", "141": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.addition,i + 1)<SUB>17</SUB>>", "145": "<(LITERAL,1,i + 1)<SUB>17</SUB>>", "147": "<(IDENTIFIER,j,j &lt; n)<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,pair[i][j])<SUB>18</SUB>>", "155": "<(IDENTIFIER,pair,pair[i][j] = (x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys) + (x[j] - xs) * (x[j] - xs) + (y[j] - ys) * (y[j] - ys) + (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]))<SUB>18</SUB>>", "157": "<(IDENTIFIER,j,pair[i][j] = (x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys) + (x[j] - xs) * (x[j] - xs) + (y[j] - ys) * (y[j] - ys) + (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]))<SUB>18</SUB>>", "159": "<(&lt;operator&gt;.addition,(x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys) + (x[j] - xs) * (x[j] - xs) + (y[j] - ys) * (y[j] - ys) + (x[i] - x[j]) * (x[i] - x[j]))<SUB>18</SUB>>", "161": "<(&lt;operator&gt;.addition,(x[i] - xs) * (x[i] - xs) + (y[i] - ys) * (y[i] - ys) + (x[j] - xs) * (x[j] - xs))<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.multiplication,(x[i] - xs) * (x[i] - xs))<SUB>18</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>18</SUB>>", "167": "<(IDENTIFIER,i,x[i] - xs)<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.subtraction,x[i] - xs)<SUB>18</SUB>>", "171": "<(IDENTIFIER,x,x[i] - xs)<SUB>18</SUB>>", "173": "<(IDENTIFIER,xs,x[i] - xs)<SUB>18</SUB>>", "175": "<(&lt;operator&gt;.subtraction,y[i] - ys)<SUB>18</SUB>>", "177": "<(IDENTIFIER,y,y[i] - ys)<SUB>18</SUB>>", "179": "<(IDENTIFIER,ys,y[i] - ys)<SUB>18</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>18</SUB>>", "183": "<(IDENTIFIER,i,y[i] - ys)<SUB>18</SUB>>", "185": "<(&lt;operator&gt;.multiplication,(x[j] - xs) * (x[j] - xs))<SUB>18</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>18</SUB>>", "189": "<(IDENTIFIER,j,x[j] - xs)<SUB>18</SUB>>", "191": "<(&lt;operator&gt;.subtraction,x[j] - xs)<SUB>18</SUB>>", "193": "<(IDENTIFIER,x,x[j] - xs)<SUB>18</SUB>>", "195": "<(IDENTIFIER,xs,x[j] - xs)<SUB>18</SUB>>", "197": "<(&lt;operator&gt;.subtraction,y[j] - ys)<SUB>18</SUB>>", "199": "<(IDENTIFIER,y,y[j] - ys)<SUB>18</SUB>>", "201": "<(IDENTIFIER,ys,y[j] - ys)<SUB>18</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>18</SUB>>", "205": "<(IDENTIFIER,j,y[j] - ys)<SUB>18</SUB>>", "207": "<(&lt;operator&gt;.multiplication,(x[i] - x[j]) * (x[i] - x[j]))<SUB>18</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>18</SUB>>", "211": "<(IDENTIFIER,i,x[i] - x[j])<SUB>18</SUB>>", "213": "<(IDENTIFIER,x,x[i] - x[j])<SUB>18</SUB>>", "215": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>18</SUB>>", "217": "<(IDENTIFIER,x,x[i] - x[j])<SUB>18</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>18</SUB>>", "221": "<(IDENTIFIER,j,x[i] - x[j])<SUB>18</SUB>>", "223": "<(&lt;operator&gt;.subtraction,y[i] - y[j])<SUB>18</SUB>>", "225": "<(IDENTIFIER,y,y[i] - y[j])<SUB>18</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>18</SUB>>", "229": "<(IDENTIFIER,j,y[i] - y[j])<SUB>18</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>18</SUB>>", "233": "<(IDENTIFIER,i,y[i] - y[j])<SUB>18</SUB>>", "235": "<(IDENTIFIER,y,y[i] - y[j])<SUB>18</SUB>>", "237": "<(LOCAL,int[] best: int[])<SUB>21</SUB>>", "239": "<(&lt;operator&gt;.assignment,int[] best = new int[1 &lt;&lt; n])<SUB>21</SUB>>", "241": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "243": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "245": "<(&lt;operator&gt;.assignment,int[] prev = new int[1 &lt;&lt; n])<SUB>21</SUB>>", "247": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "249": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "251": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>22</SUB>>", "253": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>22</SUB>>", "255": "<(LITERAL,1,int mask = 1)<SUB>22</SUB>>", "257": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>22</SUB>>", "259": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>22</SUB>>", "263": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "265": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "267": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "269": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "271": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>24</SUB>>", "273": "<(LITERAL,1,1 &lt;&lt; i)<SUB>24</SUB>>", "275": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "277": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,best[mask])<SUB>26</SUB>>", "281": "<(IDENTIFIER,mask,best[mask] = best[mask ^ (1 &lt;&lt; i)] + single[i])<SUB>26</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,best[mask ^ (1 &lt;&lt; i)])<SUB>26</SUB>>", "285": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>26</SUB>>", "287": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>26</SUB>>", "289": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>26</SUB>>", "291": "<(IDENTIFIER,single,best[mask ^ (1 &lt;&lt; i)] + single[i])<SUB>26</SUB>>", "293": "<(&lt;operator&gt;.assignment,prev[mask] = i + 1)<SUB>27</SUB>>", "295": "<(IDENTIFIER,prev,prev[mask] = i + 1)<SUB>27</SUB>>", "297": "<(&lt;operator&gt;.addition,i + 1)<SUB>27</SUB>>", "299": "<(LITERAL,1,i + 1)<SUB>27</SUB>>", "301": "<(LOCAL,int j: int)<SUB>28</SUB>>", "303": "<(IDENTIFIER,j,int j = i + 1)<SUB>28</SUB>>", "305": "<(IDENTIFIER,i,i + 1)<SUB>28</SUB>>", "307": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>28</SUB>>", "309": "<(IDENTIFIER,n,j &lt; n)<SUB>28</SUB>>", "311": "<(IDENTIFIER,j,j++)<SUB>28</SUB>>", "313": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; j)) != 0),if ((mask &amp; (1 &lt;&lt; j)) != 0))<SUB>29</SUB>>", "315": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; j))<SUB>29</SUB>>", "317": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>29</SUB>>", "319": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>29</SUB>>", "321": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "323": "<(&lt;operator&gt;.assignment,int temp = best[mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>30</SUB>>", "325": "<(&lt;operator&gt;.addition,best[mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>30</SUB>>", "327": "<(IDENTIFIER,best,best[mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>30</SUB>>", "329": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>30</SUB>>", "331": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>30</SUB>>", "333": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>30</SUB>>", "335": "<(LITERAL,1,1 &lt;&lt; j)<SUB>30</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,pair[i][j])<SUB>30</SUB>>", "339": "<(IDENTIFIER,pair,best[mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>30</SUB>>", "341": "<(IDENTIFIER,j,best[mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>30</SUB>>", "343": "<(&lt;operator&gt;.lessThan,temp &lt; best[mask])<SUB>31</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,best[mask])<SUB>31</SUB>>", "347": "<(IDENTIFIER,mask,temp &lt; best[mask])<SUB>31</SUB>>", "349": "<(&lt;operator&gt;.assignment,best[mask] = temp)<SUB>32</SUB>>", "351": "<(IDENTIFIER,best,best[mask] = temp)<SUB>32</SUB>>", "353": "<(IDENTIFIER,temp,best[mask] = temp)<SUB>32</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,prev[mask])<SUB>33</SUB>>", "357": "<(IDENTIFIER,mask,prev[mask] = (i + 1) * 100 + (j + 1))<SUB>33</SUB>>", "359": "<(&lt;operator&gt;.multiplication,(i + 1) * 100)<SUB>33</SUB>>", "361": "<(IDENTIFIER,i,i + 1)<SUB>33</SUB>>", "363": "<(LITERAL,100,(i + 1) * 100)<SUB>33</SUB>>", "365": "<(IDENTIFIER,j,j + 1)<SUB>33</SUB>>", "367": "<(println,System.out.println(best[(1 &lt;&lt; n) - 1]))<SUB>38</SUB>>", "369": "<(IDENTIFIER,System,System.out.println(best[(1 &lt;&lt; n) - 1]))<SUB>38</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,best[(1 &lt;&lt; n) - 1])<SUB>38</SUB>>", "373": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>38</SUB>>", "375": "<(LITERAL,1,1 &lt;&lt; n)<SUB>38</SUB>>", "377": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>38</SUB>>", "379": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "381": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "383": "<(LOCAL,int cur: int)<SUB>40</SUB>>", "385": "<(IDENTIFIER,cur,int cur = (1 &lt;&lt; n) - 1)<SUB>40</SUB>>", "387": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>40</SUB>>", "389": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>40</SUB>>", "391": "<(CONTROL_STRUCTURE,while (cur &gt; 0),while (cur &gt; 0))<SUB>41</SUB>>", "393": "<(IDENTIFIER,cur,cur &gt; 0)<SUB>41</SUB>>", "395": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "397": "<(&lt;operator&gt;.assignment,int a = prev[cur] % 100)<SUB>42</SUB>>", "399": "<(&lt;operator&gt;.modulo,prev[cur] % 100)<SUB>42</SUB>>", "401": "<(IDENTIFIER,prev,prev[cur] % 100)<SUB>42</SUB>>", "403": "<(LITERAL,100,prev[cur] % 100)<SUB>42</SUB>>", "405": "<(&lt;operator&gt;.assignment,int b = prev[cur] / 100)<SUB>43</SUB>>", "407": "<(&lt;operator&gt;.division,prev[cur] / 100)<SUB>43</SUB>>", "409": "<(IDENTIFIER,prev,prev[cur] / 100)<SUB>43</SUB>>", "411": "<(LITERAL,100,prev[cur] / 100)<SUB>43</SUB>>", "413": "<(&lt;operator&gt;.greaterThan,a &gt; 0)<SUB>44</SUB>>", "415": "<(LITERAL,0,a &gt; 0)<SUB>44</SUB>>", "417": "<(print,System.out.print(a + &quot; &quot;))<SUB>45</SUB>>", "419": "<(IDENTIFIER,System,System.out.print(a + &quot; &quot;))<SUB>45</SUB>>", "421": "<(&lt;operator&gt;.addition,a + &quot; &quot;)<SUB>45</SUB>>", "423": "<(LITERAL,&quot; &quot;,a + &quot; &quot;)<SUB>45</SUB>>", "425": "<(IDENTIFIER,cur,cur ^= 1 &lt;&lt; (a - 1))<SUB>46</SUB>>", "427": "<(LITERAL,1,1 &lt;&lt; (a - 1))<SUB>46</SUB>>", "429": "<(IDENTIFIER,a,a - 1)<SUB>46</SUB>>", "431": "<(CONTROL_STRUCTURE,if (b &gt; 0),if (b &gt; 0))<SUB>48</SUB>>", "433": "<(IDENTIFIER,b,b &gt; 0)<SUB>48</SUB>>", "435": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "437": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "439": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "441": "<(IDENTIFIER,b,b + &quot; &quot;)<SUB>49</SUB>>", "443": "<(&lt;operators&gt;.assignmentXor,cur ^= 1 &lt;&lt; (b - 1))<SUB>50</SUB>>", "445": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (b - 1))<SUB>50</SUB>>", "447": "<(&lt;operator&gt;.subtraction,b - 1)<SUB>50</SUB>>", "449": "<(LITERAL,1,b - 1)<SUB>50</SUB>>", "451": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>52</SUB>>", "453": "<(FIELD_IDENTIFIER,out,out)<SUB>52</SUB>>", "455": "<(LITERAL,0,0 + &quot; &quot;)<SUB>52</SUB>>", "457": "<(MODIFIER,PUBLIC)>", "459": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}