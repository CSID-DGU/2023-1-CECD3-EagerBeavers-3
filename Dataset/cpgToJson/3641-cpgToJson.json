{"edges": [["23", "24"], ["23", "25"], ["23", "288"], ["23", "289"], ["23", "290"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "38"], ["25", "39"], ["25", "43"], ["25", "44"], ["25", "6"], ["25", "48"], ["25", "51"], ["25", "53"], ["25", "54"], ["25", "59"], ["25", "60"], ["25", "68"], ["25", "69"], ["25", "77"], ["25", "78"], ["25", "8"], ["25", "82"], ["25", "85"], ["25", "86"], ["25", "115"], ["25", "116"], ["25", "117"], ["25", "118"], ["25", "123"], ["25", "127"], ["25", "131"], ["25", "260"], ["25", "273"], ["25", "286"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "37"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "5"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["62", "65"], ["62", "67"], ["65", "66"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["71", "75"], ["71", "76"], ["73", "74"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["85", "7"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["99", "114"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "109"], ["103", "113"], ["105", "106"], ["105", "108"], ["106", "107"], ["109", "110"], ["109", "112"], ["110", "111"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["125", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["133", "134"], ["135", "136"], ["135", "137"], ["135", "141"], ["135", "154"], ["135", "165"], ["135", "187"], ["137", "138"], ["137", "139"], ["139", "140"], ["141", "142"], ["141", "153"], ["142", "143"], ["142", "152"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["154", "155"], ["154", "164"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "177"], ["171", "182"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "199"], ["197", "208"], ["197", "209"], ["197", "218"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "234"], ["219", "220"], ["219", "231"], ["220", "221"], ["220", "228"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["235", "236"], ["235", "243"], ["236", "237"], ["236", "242"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["243", "244"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "250"], ["246", "259"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["250", "253"], ["250", "254"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "272"], ["263", "264"], ["263", "269"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "271"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "285"], ["286", "287"], ["26", "33"], ["29", "41"], ["39", "46"], ["44", "50"], ["48", "51"], ["51", "56"], ["54", "65"], ["60", "73"], ["69", "80"], ["78", "84"], ["82", "85"], ["85", "88"], ["118", "125"], ["123", "129"], ["127", "133"], ["260", "276"], ["273", "286"], ["286", "290"], ["28", "26"], ["41", "39"], ["46", "44"], ["50", "48"], ["56", "54"], ["62", "60"], ["71", "69"], ["80", "78"], ["84", "82"], ["88", "91"], ["91", "102"], ["91", "122"], ["94", "91"], ["120", "118"], ["125", "123"], ["129", "127"], ["132", "139"], ["132", "265"], ["262", "260"], ["274", "279"], ["277", "273"], ["31", "34"], ["34", "29"], ["65", "62"], ["73", "71"], ["97", "94"], ["122", "120"], ["133", "132"], ["137", "148"], ["154", "169"], ["263", "262"], ["276", "274"], ["278", "283"], ["283", "277"], ["33", "31"], ["139", "137"], ["142", "133"], ["142", "160"], ["155", "154"], ["166", "176"], ["166", "189"], ["189", "192"], ["192", "133"], ["192", "204"], ["195", "192"], ["264", "269"], ["269", "263"], ["279", "278"], ["100", "106"], ["103", "97"], ["143", "142"], ["156", "163"], ["161", "155"], ["167", "166"], ["172", "181"], ["177", "186"], ["182", "189"], ["199", "214"], ["209", "222"], ["265", "264"], ["102", "100"], ["105", "110"], ["109", "103"], ["144", "151"], ["149", "143"], ["158", "156"], ["163", "161"], ["169", "167"], ["174", "172"], ["179", "177"], ["184", "182"], ["201", "199"], ["211", "209"], ["219", "238"], ["219", "195"], ["106", "105"], ["110", "109"], ["146", "144"], ["151", "149"], ["160", "158"], ["176", "174"], ["181", "179"], ["186", "184"], ["202", "205"], ["205", "201"], ["212", "215"], ["215", "211"], ["220", "219"], ["220", "231"], ["231", "219"], ["148", "146"], ["204", "202"], ["214", "212"], ["221", "220"], ["221", "228"], ["228", "220"], ["236", "249"], ["236", "195"], ["222", "221"], ["222", "225"], ["225", "221"], ["237", "236"], ["244", "195"], ["238", "237"], ["247", "257"], ["250", "244"], ["249", "247"], ["254", "250"], ["255", "254"], ["257", "255"], ["23", "28"], ["24", "290"], ["26", "290"], ["31", "290"], ["34", "290"], ["34", "290"], ["29", "290"], ["39", "290"], ["44", "290"], ["48", "290"], ["51", "290"], ["54", "290"], ["56", "290"], ["56", "290"], ["54", "290"], ["54", "290"], ["60", "290"], ["60", "290"], ["60", "290"], ["69", "290"], ["69", "290"], ["69", "290"], ["80", "290"], ["78", "290"], ["78", "290"], ["82", "290"], ["85", "290"], ["88", "290"], ["91", "290"], ["91", "290"], ["91", "290"], ["118", "290"], ["118", "290"], ["118", "290"], ["123", "290"], ["127", "290"], ["127", "290"], ["133", "290"], ["132", "290"], ["132", "290"], ["260", "290"], ["260", "290"], ["273", "290"], ["279", "290"], ["278", "290"], ["277", "290"], ["283", "290"], ["277", "290"], ["273", "290"], ["286", "290"], ["286", "290"], ["137", "290"], ["137", "290"], ["137", "290"], ["142", "290"], ["142", "290"], ["154", "290"], ["154", "290"], ["166", "290"], ["166", "290"], ["166", "290"], ["172", "290"], ["172", "290"], ["172", "290"], ["177", "290"], ["177", "290"], ["182", "290"], ["182", "290"], ["189", "290"], ["192", "290"], ["192", "290"], ["201", "290"], ["201", "290"], ["199", "290"], ["199", "290"], ["209", "290"], ["211", "290"], ["211", "290"], ["209", "290"], ["209", "290"], ["222", "290"], ["222", "290"], ["221", "290"], ["225", "290"], ["221", "290"], ["220", "290"], ["228", "290"], ["228", "290"], ["220", "290"], ["219", "290"], ["231", "290"], ["219", "290"], ["219", "290"], ["236", "290"], ["236", "290"], ["247", "290"], ["250", "290"], ["250", "290"], ["250", "290"], ["254", "290"], ["250", "290"], ["250", "290"], ["244", "290"], ["195", "290"], ["100", "290"], ["103", "290"], ["103", "290"], ["110", "290"], ["109", "290"], ["103", "290"], ["97", "290"], ["94", "290"], ["23", "24"], ["23", "26"], ["41", "39"], ["46", "44"], ["23", "48"], ["56", "54"], ["56", "54"], ["62", "60"], ["62", "60"], ["62", "60"], ["71", "69"], ["71", "69"], ["71", "69"], ["80", "78"], ["23", "82"], ["125", "123"], ["129", "127"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["48", "51"], ["23", "51"], ["82", "85"], ["23", "85"], ["23", "88"], ["51", "260"], ["23", "260"], ["123", "260"], ["177", "260"], ["127", "260"], ["182", "260"], ["23", "273"], ["123", "273"], ["177", "273"], ["127", "273"], ["182", "273"], ["260", "286"], ["23", "286"], ["23", "31"], ["23", "37"], ["29", "41"], ["23", "41"], ["41", "46"], ["23", "46"], ["39", "56"], ["23", "56"], ["44", "56"], ["23", "62"], ["65", "62"], ["23", "71"], ["73", "71"], ["46", "80"], ["23", "80"], ["88", "91"], ["94", "91"], ["23", "91"], ["78", "91"], ["91", "94"], ["23", "94"], ["23", "125"], ["23", "129"], ["133", "132"], ["139", "137"], ["23", "154"], ["123", "262"], ["177", "262"], ["23", "262"], ["127", "262"], ["182", "262"], ["23", "277"], ["123", "277"], ["177", "277"], ["127", "277"], ["182", "277"], ["31", "34"], ["23", "34"], ["23", "65"], ["23", "73"], ["85", "97"], ["23", "97"], ["100", "97"], ["103", "97"], ["85", "133"], ["139", "133"], ["244", "133"], ["97", "133"], ["23", "133"], ["23", "189"], ["123", "263"], ["177", "263"], ["23", "263"], ["127", "263"], ["182", "263"], ["23", "278"], ["123", "278"], ["177", "278"], ["23", "283"], ["127", "283"], ["182", "283"], ["23", "100"], ["23", "114"], ["133", "139"], ["23", "139"], ["154", "142"], ["23", "142"], ["137", "166"], ["118", "166"], ["172", "166"], ["23", "166"], ["137", "172"], ["166", "172"], ["137", "177"], ["137", "182"], ["189", "192"], ["195", "192"], ["23", "192"], ["192", "195"], ["23", "195"], ["137", "199"], ["60", "199"], ["137", "209"], ["69", "209"], ["123", "264"], ["177", "264"], ["23", "264"], ["127", "269"], ["182", "269"], ["23", "269"], ["23", "279"], ["123", "279"], ["177", "279"], ["100", "103"], ["23", "103"], ["105", "103"], ["105", "103"], ["109", "103"], ["109", "103"], ["123", "265"], ["177", "265"], ["23", "265"], ["106", "105"], ["23", "105"], ["110", "109"], ["23", "109"], ["137", "201"], ["60", "201"], ["137", "211"], ["69", "211"], ["220", "219"], ["220", "219"], ["231", "219"], ["231", "219"], ["80", "106"], ["110", "106"], ["23", "106"], ["106", "110"], ["23", "110"], ["221", "220"], ["221", "220"], ["228", "220"], ["228", "220"], ["209", "231"], ["228", "231"], ["23", "231"], ["222", "221"], ["222", "221"], ["225", "221"], ["225", "221"], ["209", "228"], ["23", "228"], ["56", "228"], ["23", "236"], ["199", "222"], ["23", "222"], ["56", "222"], ["222", "225"], ["23", "225"], ["139", "244"], ["23", "244"], ["247", "244"], ["250", "244"], ["23", "247"], ["23", "259"], ["247", "250"], ["23", "250"], ["222", "250"], ["225", "250"], ["209", "250"], ["228", "250"], ["231", "250"], ["137", "250"], ["166", "250"], ["137", "254"], ["166", "254"], ["23", "254"], ["91", "94"], ["91", "102"], ["91", "103"], ["91", "97"], ["91", "91"], ["91", "100"], ["91", "106"], ["91", "105"], ["91", "110"], ["91", "109"], ["132", "146"], ["132", "149"], ["132", "132"], ["132", "151"], ["132", "144"], ["132", "148"], ["132", "137"], ["132", "139"], ["132", "142"], ["132", "143"], ["132", "133"], ["142", "167"], ["142", "192"], ["142", "154"], ["142", "169"], ["142", "161"], ["142", "163"], ["142", "189"], ["142", "155"], ["142", "158"], ["142", "160"], ["142", "166"], ["142", "156"], ["166", "179"], ["166", "181"], ["166", "184"], ["166", "174"], ["166", "182"], ["166", "186"], ["166", "176"], ["166", "177"], ["166", "172"], ["192", "214"], ["192", "192"], ["192", "215"], ["192", "209"], ["192", "204"], ["192", "195"], ["192", "212"], ["192", "221"], ["192", "202"], ["192", "201"], ["192", "205"], ["192", "220"], ["192", "199"], ["192", "211"], ["192", "222"], ["192", "219"], ["219", "238"], ["219", "236"], ["219", "237"], ["220", "231"], ["221", "228"], ["236", "257"], ["236", "244"], ["236", "247"], ["236", "255"], ["236", "249"], ["236", "254"], ["236", "250"], ["222", "225"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "41": "<(nextInt,nextInt())<SUB>3</SUB>>", "43": "<(LOCAL,int m: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY fw = new FileWriter(&quot;output.txt&quot;))<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.alloc,new FileWriter(&quot;output.txt&quot;))<SUB>5</SUB>>", "5": "<(IDENTIFIER,fw,new FileWriter(&quot;output.txt&quot;))<SUB>5</SUB>>", "53": "<(LOCAL,boolean[][] grid: boolean[][])<SUB>6</SUB>>", "55": "<(IDENTIFIER,grid,boolean[][] grid = new boolean[n][m])<SUB>6</SUB>>", "57": "<(IDENTIFIER,n,new boolean[n][m])<SUB>6</SUB>>", "59": "<(LOCAL,int[] dx: int[])<SUB>7</SUB>>", "61": "<(IDENTIFIER,dx,int[] dx = new int[] { 1, 0, -1, 0 })<SUB>7</SUB>>", "63": "<(LITERAL,1,new int[] { 1, 0, -1, 0 })<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.minus,-1)<SUB>7</SUB>>", "67": "<(LITERAL,0,new int[] { 1, 0, -1, 0 })<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,int[] dy = new int[] { 0, -1, 0, 1 })<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.arrayInitializer,new int[] { 0, -1, 0, 1 })<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.minus,-1)<SUB>8</SUB>>", "75": "<(LITERAL,0,new int[] { 0, -1, 0, 1 })<SUB>8</SUB>>", "77": "<(LOCAL,int k: int)<SUB>9</SUB>>", "79": "<(IDENTIFIER,k,int k = nextInt())<SUB>9</SUB>>", "81": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "82": "<(&lt;operator&gt;.assignment,ANY a = new LinkedList&lt;Struct&gt;())<SUB>10</SUB>>", "84": "<(&lt;operator&gt;.alloc,new LinkedList&lt;Struct&gt;())<SUB>10</SUB>>", "7": "<(IDENTIFIER,a,new LinkedList&lt;Struct&gt;())<SUB>10</SUB>>", "87": "<(LOCAL,int i: int)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; k)<SUB>11</SUB>>", "93": "<(IDENTIFIER,k,i &lt; k)<SUB>11</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "97": "<(add,add(new Struct(sc.nextInt() - 1, sc.nextInt() - 1, 0)))<SUB>12</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "101": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "103": "<(&lt;init&gt;,new Struct(sc.nextInt() - 1, sc.nextInt() - 1, 0))<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>12</SUB>>", "107": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>12</SUB>>", "111": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "113": "<(LITERAL,0,new Struct(sc.nextInt() - 1, sc.nextInt() - 1, 0))<SUB>12</SUB>>", "115": "<(LOCAL,int max: int)<SUB>14</SUB>>", "117": "<(LOCAL,int maxY: int)<SUB>14</SUB>>", "119": "<(IDENTIFIER,max,int max = Integer.MIN_VALUE)<SUB>14</SUB>>", "121": "<(IDENTIFIER,Integer,int max = Integer.MIN_VALUE)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.assignment,int maxX = -1)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.assignment,int maxY = -1)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "131": "<(CONTROL_STRUCTURE,while (!a.isEmpty()),while (!a.isEmpty()))<SUB>15</SUB>>", "133": "<(isEmpty,isEmpty())<SUB>15</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.assignment,ANY tmp = remove())<SUB>16</SUB>>", "139": "<(remove,remove())<SUB>16</SUB>>", "141": "<(CONTROL_STRUCTURE,if (grid[tmp.x][tmp.y] == true),if (grid[tmp.x][tmp.y] == true))<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,grid[tmp.x][tmp.y])<SUB>17</SUB>>", "145": "<(IDENTIFIER,grid,grid[tmp.x][tmp.y] == true)<SUB>17</SUB>>", "147": "<(IDENTIFIER,tmp,grid[tmp.x][tmp.y] == true)<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,tmp.y)<SUB>17</SUB>>", "151": "<(FIELD_IDENTIFIER,y,y)<SUB>17</SUB>>", "153": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,grid[tmp.x][tmp.y])<SUB>19</SUB>>", "157": "<(IDENTIFIER,grid,grid[tmp.x][tmp.y] = true)<SUB>19</SUB>>", "159": "<(IDENTIFIER,tmp,grid[tmp.x][tmp.y] = true)<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,tmp.y)<SUB>19</SUB>>", "163": "<(FIELD_IDENTIFIER,y,y)<SUB>19</SUB>>", "165": "<(CONTROL_STRUCTURE,if (tmp.count &gt; max),if (tmp.count &gt; max))<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.fieldAccess,tmp.count)<SUB>20</SUB>>", "169": "<(FIELD_IDENTIFIER,count,count)<SUB>20</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "173": "<(IDENTIFIER,max,max = tmp.count)<SUB>21</SUB>>", "175": "<(IDENTIFIER,tmp,max = tmp.count)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.assignment,maxX = tmp.x)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.fieldAccess,tmp.x)<SUB>22</SUB>>", "181": "<(FIELD_IDENTIFIER,x,x)<SUB>22</SUB>>", "183": "<(IDENTIFIER,maxY,maxY = tmp.y)<SUB>23</SUB>>", "185": "<(IDENTIFIER,tmp,maxY = tmp.y)<SUB>23</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 4); i++),for (int i = 0; Some(i &lt; 4); i++))<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "191": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "193": "<(IDENTIFIER,i,i &lt; 4)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "199": "<(&lt;operator&gt;.assignment,int nx = tmp.x + dx[i])<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.addition,tmp.x + dx[i])<SUB>26</SUB>>", "203": "<(IDENTIFIER,tmp,tmp.x + dx[i])<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>26</SUB>>", "207": "<(IDENTIFIER,i,tmp.x + dx[i])<SUB>26</SUB>>", "209": "<(&lt;operator&gt;.assignment,int ny = tmp.y + dy[i])<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.addition,tmp.y + dy[i])<SUB>27</SUB>>", "213": "<(IDENTIFIER,tmp,tmp.y + dy[i])<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>27</SUB>>", "217": "<(IDENTIFIER,i,tmp.y + dy[i])<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.logicalAnd,nx &lt; n &amp;&amp; nx &gt;= 0 &amp;&amp; ny &lt; m &amp;&amp; ny &gt;= 0)<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.logicalAnd,nx &lt; n &amp;&amp; nx &gt;= 0)<SUB>28</SUB>>", "223": "<(IDENTIFIER,nx,nx &lt; n)<SUB>28</SUB>>", "225": "<(&lt;operator&gt;.greaterEqualsThan,nx &gt;= 0)<SUB>28</SUB>>", "227": "<(LITERAL,0,nx &gt;= 0)<SUB>28</SUB>>", "229": "<(IDENTIFIER,ny,ny &lt; m)<SUB>28</SUB>>", "231": "<(&lt;operator&gt;.greaterEqualsThan,ny &gt;= 0)<SUB>28</SUB>>", "233": "<(LITERAL,0,ny &gt;= 0)<SUB>28</SUB>>", "235": "<(CONTROL_STRUCTURE,if (grid[nx][ny] == false),if (grid[nx][ny] == false))<SUB>29</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,grid[nx][ny])<SUB>29</SUB>>", "239": "<(IDENTIFIER,grid,grid[nx][ny] == false)<SUB>29</SUB>>", "241": "<(IDENTIFIER,ny,grid[nx][ny] == false)<SUB>29</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "245": "<(IDENTIFIER,a,add(new Struct(nx, ny, tmp.count + 1)))<SUB>30</SUB>>", "247": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "249": "<(&lt;operator&gt;.alloc,new Struct(nx, ny, tmp.count + 1))<SUB>30</SUB>>", "251": "<(IDENTIFIER,$obj5,new Struct(nx, ny, tmp.count + 1))>", "253": "<(IDENTIFIER,ny,new Struct(nx, ny, tmp.count + 1))<SUB>30</SUB>>", "255": "<(&lt;operator&gt;.fieldAccess,tmp.count)<SUB>30</SUB>>", "257": "<(FIELD_IDENTIFIER,count,count)<SUB>30</SUB>>", "259": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "261": "<(IDENTIFIER,fw,write((maxX + 1) + &quot; &quot; + (maxY + 1) + &quot;\\n&quot;))<SUB>35</SUB>>", "263": "<(&lt;operator&gt;.addition,(maxX + 1) + &quot; &quot; + (maxY + 1))<SUB>35</SUB>>", "265": "<(&lt;operator&gt;.addition,maxX + 1)<SUB>35</SUB>>", "267": "<(LITERAL,1,maxX + 1)<SUB>35</SUB>>", "269": "<(&lt;operator&gt;.addition,maxY + 1)<SUB>35</SUB>>", "271": "<(LITERAL,1,maxY + 1)<SUB>35</SUB>>", "273": "<(println,System.out.println((maxX + 1) + &quot; &quot; + (maxY + 1)))<SUB>36</SUB>>", "275": "<(IDENTIFIER,System,System.out.println((maxX + 1) + &quot; &quot; + (maxY + 1)))<SUB>36</SUB>>", "277": "<(&lt;operator&gt;.addition,(maxX + 1) + &quot; &quot; + (maxY + 1))<SUB>36</SUB>>", "279": "<(&lt;operator&gt;.addition,maxX + 1)<SUB>36</SUB>>", "281": "<(LITERAL,1,maxX + 1)<SUB>36</SUB>>", "283": "<(&lt;operator&gt;.addition,maxY + 1)<SUB>36</SUB>>", "285": "<(LITERAL,1,maxY + 1)<SUB>36</SUB>>", "287": "<(IDENTIFIER,fw,flush())<SUB>37</SUB>>", "289": "<(MODIFIER,STATIC)>"}}