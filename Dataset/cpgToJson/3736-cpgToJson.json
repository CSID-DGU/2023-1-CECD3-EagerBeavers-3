{"edges": [["17", "18"], ["17", "19"], ["17", "386"], ["17", "387"], ["17", "388"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "32"], ["19", "38"], ["19", "43"], ["19", "104"], ["19", "105"], ["19", "111"], ["19", "384"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "72"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "81"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["81", "95"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["96", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "116"], ["112", "113"], ["112", "115"], ["113", "114"], ["116", "117"], ["116", "118"], ["116", "122"], ["116", "123"], ["116", "127"], ["116", "128"], ["116", "134"], ["116", "153"], ["116", "154"], ["116", "163"], ["116", "259"], ["116", "260"], ["116", "269"], ["116", "270"], ["116", "275"], ["116", "298"], ["116", "316"], ["116", "377"], ["118", "119"], ["118", "120"], ["120", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "171"], ["163", "173"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["173", "175"], ["173", "180"], ["173", "181"], ["173", "184"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "240"], ["194", "247"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "219"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "216"], ["207", "208"], ["207", "215"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "214"], ["216", "217"], ["217", "218"], ["219", "220"], ["219", "223"], ["219", "237"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["223", "235"], ["224", "225"], ["224", "226"], ["227", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["247", "248"], ["247", "256"], ["248", "249"], ["248", "255"], ["249", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["256", "257"], ["257", "258"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["275", "280"], ["275", "285"], ["275", "287"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["285", "286"], ["287", "288"], ["287", "289"], ["287", "294"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["294", "297"], ["298", "299"], ["298", "300"], ["298", "303"], ["298", "306"], ["298", "308"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["306", "307"], ["308", "309"], ["309", "310"], ["309", "315"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["316", "317"], ["316", "318"], ["316", "321"], ["316", "324"], ["316", "326"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "323"], ["324", "325"], ["326", "327"], ["327", "328"], ["327", "329"], ["327", "332"], ["327", "335"], ["327", "337"], ["329", "330"], ["329", "331"], ["332", "333"], ["332", "334"], ["335", "336"], ["337", "338"], ["338", "339"], ["338", "340"], ["338", "343"], ["338", "346"], ["338", "348"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["346", "347"], ["348", "349"], ["349", "350"], ["349", "355"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["355", "356"], ["355", "357"], ["355", "362"], ["357", "358"], ["357", "361"], ["358", "359"], ["358", "360"], ["362", "363"], ["362", "376"], ["363", "364"], ["363", "369"], ["364", "365"], ["364", "366"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "375"], ["370", "371"], ["370", "374"], ["371", "372"], ["371", "373"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "383"], ["380", "381"], ["380", "382"], ["384", "385"], ["21", "29"], ["26", "35"], ["32", "39"], ["38", "45"], ["105", "113"], ["384", "388"], ["23", "21"], ["28", "26"], ["34", "32"], ["39", "38"], ["45", "48"], ["48", "56"], ["48", "108"], ["51", "48"], ["107", "105"], ["112", "120"], ["112", "384"], ["29", "28"], ["35", "34"], ["108", "107"], ["113", "112"], ["118", "125"], ["123", "131"], ["128", "136"], ["154", "165"], ["260", "273"], ["270", "277"], ["377", "113"], ["55", "63"], ["55", "51"], ["120", "118"], ["125", "123"], ["130", "128"], ["136", "139"], ["139", "146"], ["139", "157"], ["142", "139"], ["156", "154"], ["165", "168"], ["168", "177"], ["168", "263"], ["171", "168"], ["262", "260"], ["272", "270"], ["277", "284"], ["280", "291"], ["280", "300"], ["285", "284"], ["300", "303"], ["303", "311"], ["303", "318"], ["306", "303"], ["318", "321"], ["321", "329"], ["321", "380"], ["324", "321"], ["379", "377"], ["56", "55"], ["131", "130"], ["145", "142"], ["157", "160"], ["160", "156"], ["175", "181"], ["181", "186"], ["263", "266"], ["266", "262"], ["273", "272"], ["282", "280"], ["289", "294"], ["294", "285"], ["309", "306"], ["380", "379"], ["63", "66"], ["66", "78"], ["66", "51"], ["69", "66"], ["146", "151"], ["149", "145"], ["177", "175"], ["186", "189"], ["189", "197"], ["189", "171"], ["192", "189"], ["284", "282"], ["291", "289"], ["310", "309"], ["329", "332"], ["332", "340"], ["332", "324"], ["335", "332"], ["74", "83"], ["151", "149"], ["240", "252"], ["311", "310"], ["76", "74"], ["82", "89"], ["82", "98"], ["196", "203"], ["196", "242"], ["241", "240"], ["248", "257"], ["248", "192"], ["340", "343"], ["343", "351"], ["343", "335"], ["346", "343"], ["78", "76"], ["83", "82"], ["88", "69"], ["197", "196"], ["203", "212"], ["242", "241"], ["249", "248"], ["257", "192"], ["349", "346"], ["89", "92"], ["92", "88"], ["97", "69"], ["207", "217"], ["207", "220"], ["220", "224"], ["220", "242"], ["250", "249"], ["350", "358"], ["355", "349"], ["98", "101"], ["101", "97"], ["208", "207"], ["217", "220"], ["224", "232"], ["227", "235"], ["235", "197"], ["252", "250"], ["351", "350"], ["357", "366"], ["362", "355"], ["210", "208"], ["228", "227"], ["358", "357"], ["363", "362"], ["212", "210"], ["230", "228"], ["364", "371"], ["369", "363"], ["232", "230"], ["366", "364"], ["370", "369"], ["371", "370"], ["17", "23"], ["18", "388"], ["23", "388"], ["21", "388"], ["21", "388"], ["26", "388"], ["26", "388"], ["32", "388"], ["32", "388"], ["38", "388"], ["38", "388"], ["45", "388"], ["48", "388"], ["48", "388"], ["105", "388"], ["108", "388"], ["107", "388"], ["105", "388"], ["105", "388"], ["113", "388"], ["112", "388"], ["112", "388"], ["384", "388"], ["384", "388"], ["118", "388"], ["125", "388"], ["123", "388"], ["123", "388"], ["128", "388"], ["128", "388"], ["128", "388"], ["136", "388"], ["139", "388"], ["139", "388"], ["154", "388"], ["154", "388"], ["260", "388"], ["262", "388"], ["262", "388"], ["260", "388"], ["260", "388"], ["270", "388"], ["270", "388"], ["270", "388"], ["277", "388"], ["280", "388"], ["280", "388"], ["280", "388"], ["300", "388"], ["303", "388"], ["303", "388"], ["303", "388"], ["318", "388"], ["321", "388"], ["321", "388"], ["321", "388"], ["377", "388"], ["377", "388"], ["329", "388"], ["332", "388"], ["332", "388"], ["332", "388"], ["324", "388"], ["340", "388"], ["343", "388"], ["343", "388"], ["335", "388"], ["349", "388"], ["369", "388"], ["362", "388"], ["355", "388"], ["349", "388"], ["349", "388"], ["346", "388"], ["309", "388"], ["309", "388"], ["306", "388"], ["289", "388"], ["294", "388"], ["294", "388"], ["294", "388"], ["285", "388"], ["175", "388"], ["175", "388"], ["181", "388"], ["181", "388"], ["186", "388"], ["189", "388"], ["171", "388"], ["196", "388"], ["196", "388"], ["203", "388"], ["203", "388"], ["207", "388"], ["207", "388"], ["217", "388"], ["220", "388"], ["220", "388"], ["240", "388"], ["240", "388"], ["240", "388"], ["249", "388"], ["248", "388"], ["248", "388"], ["257", "388"], ["257", "388"], ["192", "388"], ["224", "388"], ["224", "388"], ["224", "388"], ["227", "388"], ["227", "388"], ["235", "388"], ["145", "388"], ["151", "388"], ["145", "388"], ["145", "388"], ["142", "388"], ["55", "388"], ["55", "388"], ["63", "388"], ["66", "388"], ["66", "388"], ["51", "388"], ["74", "388"], ["74", "388"], ["82", "388"], ["82", "388"], ["97", "388"], ["101", "388"], ["97", "388"], ["97", "388"], ["88", "388"], ["92", "388"], ["88", "388"], ["88", "388"], ["69", "388"], ["355", "388"], ["294", "388"], ["17", "18"], ["23", "21"], ["17", "26"], ["34", "32"], ["17", "38"], ["107", "105"], ["17", "45"], ["377", "384"], ["17", "384"], ["17", "23"], ["17", "28"], ["26", "34"], ["17", "34"], ["45", "48"], ["51", "48"], ["17", "48"], ["66", "48"], ["26", "48"], ["48", "51"], ["17", "51"], ["101", "51"], ["92", "51"], ["48", "107"], ["17", "107"], ["113", "112"], ["17", "112"], ["120", "118"], ["125", "123"], ["130", "128"], ["156", "154"], ["156", "154"], ["262", "260"], ["262", "260"], ["17", "270"], ["26", "35"], ["17", "35"], ["48", "108"], ["17", "108"], ["21", "113"], ["17", "113"], ["17", "136"], ["17", "165"], ["17", "277"], ["17", "300"], ["17", "318"], ["17", "377"], ["32", "55"], ["17", "55"], ["23", "120"], ["125", "120"], ["151", "120"], ["17", "120"], ["120", "125"], ["17", "125"], ["118", "130"], ["17", "130"], ["136", "139"], ["142", "139"], ["17", "139"], ["118", "139"], ["139", "142"], ["17", "142"], ["32", "145"], ["123", "156"], ["17", "156"], ["139", "156"], ["165", "168"], ["171", "168"], ["17", "168"], ["123", "168"], ["168", "171"], ["220", "171"], ["17", "171"], ["17", "175"], ["139", "175"], ["17", "181"], ["168", "262"], ["17", "262"], ["139", "262"], ["17", "272"], ["277", "280"], ["285", "280"], ["17", "280"], ["260", "280"], ["280", "285"], ["17", "285"], ["260", "289"], ["300", "303"], ["306", "303"], ["17", "303"], ["168", "303"], ["303", "306"], ["17", "306"], ["17", "309"], ["318", "321"], ["324", "321"], ["17", "321"], ["139", "321"], ["321", "324"], ["17", "324"], ["48", "63"], ["17", "63"], ["101", "69"], ["92", "69"], ["17", "69"], ["118", "131"], ["17", "131"], ["123", "157"], ["17", "157"], ["139", "160"], ["17", "160"], ["17", "186"], ["168", "263"], ["17", "263"], ["17", "266"], ["139", "266"], ["17", "294"], ["289", "294"], ["270", "294"], ["17", "329"], ["63", "66"], ["69", "66"], ["17", "66"], ["48", "66"], ["78", "69"], ["32", "74"], ["17", "177"], ["139", "177"], ["186", "189"], ["192", "189"], ["17", "189"], ["189", "192"], ["17", "192"], ["197", "240"], ["212", "240"], ["17", "240"], ["329", "332"], ["335", "332"], ["17", "332"], ["303", "332"], ["343", "335"], ["17", "335"], ["125", "151"], ["17", "151"], ["17", "340"], ["83", "82"], ["83", "82"], ["17", "82"], ["92", "88"], ["92", "88"], ["197", "196"], ["197", "196"], ["17", "196"], ["181", "203"], ["257", "203"], ["224", "203"], ["17", "203"], ["249", "248"], ["17", "248"], ["340", "343"], ["346", "343"], ["17", "343"], ["332", "343"], ["366", "343"], ["366", "346"], ["17", "346"], ["355", "349"], ["355", "349"], ["355", "349"], ["66", "78"], ["17", "78"], ["48", "78"], ["101", "78"], ["92", "78"], ["74", "83"], ["17", "83"], ["78", "83"], ["101", "97"], ["101", "97"], ["175", "197"], ["235", "197"], ["17", "197"], ["212", "197"], ["105", "249"], ["181", "257"], ["224", "257"], ["17", "257"], ["83", "92"], ["17", "92"], ["83", "92"], ["105", "207"], ["227", "207"], ["17", "207"], ["203", "220"], ["217", "220"], ["17", "220"], ["168", "220"], ["220", "224"], ["17", "224"], ["17", "355"], ["349", "355"], ["83", "101"], ["17", "101"], ["83", "101"], ["203", "217"], ["17", "217"], ["105", "227"], ["207", "227"], ["232", "235"], ["17", "235"], ["17", "362"], ["197", "212"], ["17", "212"], ["17", "369"], ["212", "232"], ["17", "232"], ["343", "366"], ["17", "366"], ["343", "366"], ["48", "48"], ["48", "55"], ["48", "51"], ["48", "56"], ["112", "120"], ["112", "136"], ["112", "154"], ["112", "128"], ["112", "272"], ["112", "168"], ["112", "262"], ["112", "112"], ["112", "300"], ["112", "118"], ["112", "380"], ["112", "160"], ["112", "260"], ["112", "123"], ["112", "321"], ["112", "113"], ["112", "282"], ["112", "131"], ["112", "273"], ["112", "377"], ["112", "379"], ["112", "284"], ["112", "130"], ["112", "318"], ["112", "280"], ["112", "139"], ["112", "277"], ["112", "157"], ["112", "270"], ["112", "263"], ["112", "165"], ["112", "303"], ["112", "156"], ["112", "125"], ["112", "266"], ["55", "66"], ["55", "63"], ["139", "146"], ["139", "145"], ["139", "149"], ["139", "151"], ["139", "139"], ["139", "142"], ["168", "168"], ["168", "181"], ["168", "186"], ["168", "177"], ["168", "189"], ["168", "171"], ["168", "175"], ["280", "282"], ["280", "291"], ["280", "284"], ["280", "285"], ["280", "289"], ["280", "280"], ["280", "294"], ["303", "306"], ["303", "311"], ["303", "310"], ["303", "309"], ["303", "303"], ["321", "324"], ["321", "329"], ["321", "321"], ["321", "332"], ["66", "74"], ["66", "76"], ["66", "66"], ["66", "69"], ["66", "82"], ["66", "83"], ["66", "78"], ["189", "192"], ["189", "196"], ["189", "240"], ["189", "242"], ["189", "249"], ["189", "241"], ["189", "197"], ["189", "189"], ["189", "252"], ["189", "248"], ["189", "250"], ["332", "340"], ["332", "335"], ["332", "332"], ["332", "343"], ["82", "88"], ["82", "98"], ["82", "92"], ["82", "97"], ["82", "101"], ["82", "89"], ["196", "208"], ["196", "207"], ["196", "212"], ["196", "210"], ["196", "220"], ["196", "203"], ["248", "257"], ["343", "358"], ["343", "370"], ["343", "349"], ["343", "362"], ["343", "355"], ["343", "346"], ["343", "364"], ["343", "357"], ["343", "351"], ["343", "366"], ["343", "343"], ["343", "371"], ["343", "369"], ["343", "350"], ["343", "363"], ["207", "217"], ["220", "230"], ["220", "196"], ["220", "228"], ["220", "224"], ["220", "227"], ["220", "232"], ["220", "197"], ["220", "235"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>3</SUB>>", "23": "<(nextInt,nextInt())<SUB>3</SUB>>", "25": "<(LOCAL,int MAX: int)<SUB>4</SUB>>", "27": "<(IDENTIFIER,MAX,int MAX = (int) 1e7)<SUB>4</SUB>>", "29": "<(TYPE_REF,int,int)<SUB>4</SUB>>", "31": "<(LOCAL,int[] canonical: int[])<SUB>5</SUB>>", "33": "<(IDENTIFIER,canonical,int[] canonical = new int[MAX + 1])<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.addition,MAX + 1)<SUB>5</SUB>>", "37": "<(LITERAL,1,MAX + 1)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.indexAccess,canonical[1])<SUB>6</SUB>>", "41": "<(LITERAL,1,canonical[1] = 1)<SUB>6</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int factor = 2; Some(factor &lt;= MAX); factor++),for (int factor = 2; Some(factor &lt;= MAX); factor++))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int factor = 2)<SUB>7</SUB>>", "47": "<(LITERAL,2,int factor = 2)<SUB>7</SUB>>", "49": "<(IDENTIFIER,factor,factor &lt;= MAX)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,factor++)<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.equals,canonical[factor] == 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,canonical,canonical[factor] == 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,canonical[factor] == 0)<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int mult = factor; Some(mult &lt;= MAX); mult += factor),for (int mult = factor; Some(mult &lt;= MAX); mult += factor))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int mult = factor)<SUB>9</SUB>>", "65": "<(IDENTIFIER,factor,int mult = factor)<SUB>9</SUB>>", "67": "<(IDENTIFIER,mult,mult &lt;= MAX)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignmentPlus,mult += factor)<SUB>9</SUB>>", "71": "<(IDENTIFIER,factor,mult += factor)<SUB>9</SUB>>", "73": "<(LOCAL,int prev: int)<SUB>10</SUB>>", "75": "<(IDENTIFIER,prev,int prev = canonical[mult / factor])<SUB>10</SUB>>", "77": "<(IDENTIFIER,canonical,int prev = canonical[mult / factor])<SUB>10</SUB>>", "79": "<(IDENTIFIER,mult,mult / factor)<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,if (prev % factor == 0),if (prev % factor == 0))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.modulo,prev % factor)<SUB>11</SUB>>", "85": "<(IDENTIFIER,factor,prev % factor)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,canonical[mult])<SUB>12</SUB>>", "91": "<(IDENTIFIER,mult,canonical[mult] = prev / factor)<SUB>12</SUB>>", "93": "<(IDENTIFIER,prev,prev / factor)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,canonical[mult] = prev * factor)<SUB>14</SUB>>", "99": "<(IDENTIFIER,canonical,canonical[mult] = prev * factor)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.multiplication,prev * factor)<SUB>14</SUB>>", "103": "<(IDENTIFIER,factor,prev * factor)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,int[] freq = new int[MAX + 1])<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.alloc,new int[MAX + 1])>", "109": "<(IDENTIFIER,MAX,MAX + 1)<SUB>20</SUB>>", "111": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.postDecrement,T--)<SUB>21</SUB>>", "115": "<(LITERAL,0,T-- &gt; 0)<SUB>21</SUB>>", "117": "<(LOCAL,int N: int)<SUB>22</SUB>>", "119": "<(IDENTIFIER,N,int N = nextInt())<SUB>22</SUB>>", "121": "<(IDENTIFIER,sc,nextInt())<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.assignment,int K = nextInt())<SUB>23</SUB>>", "125": "<(nextInt,nextInt())<SUB>23</SUB>>", "127": "<(LOCAL,int[] a: int[])<SUB>24</SUB>>", "129": "<(IDENTIFIER,a,int[] a = new int[N + 1])<SUB>24</SUB>>", "131": "<(&lt;operator&gt;.addition,N + 1)<SUB>24</SUB>>", "133": "<(LITERAL,1,N + 1)<SUB>24</SUB>>", "135": "<(LOCAL,int i: int)<SUB>25</SUB>>", "137": "<(IDENTIFIER,i,int i = 1)<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>25</SUB>>", "141": "<(IDENTIFIER,N,i &lt;= N)<SUB>25</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.assignment,a[i] = canonical[sc.nextInt()])<SUB>26</SUB>>", "147": "<(IDENTIFIER,a,a[i] = canonical[sc.nextInt()])<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,canonical[sc.nextInt()])<SUB>26</SUB>>", "151": "<(nextInt,nextInt())<SUB>26</SUB>>", "153": "<(LOCAL,int[][] transition: int[][])<SUB>28</SUB>>", "155": "<(IDENTIFIER,transition,int[][] transition = new int[K + 1][N + 1])<SUB>28</SUB>>", "157": "<(&lt;operator&gt;.addition,K + 1)<SUB>28</SUB>>", "159": "<(LITERAL,1,K + 1)<SUB>28</SUB>>", "161": "<(IDENTIFIER,N,N + 1)<SUB>28</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt;= K); k++),for (int k = 0; Some(k &lt;= K); k++))<SUB>30</SUB>>", "165": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>30</SUB>>", "167": "<(LITERAL,0,int k = 0)<SUB>30</SUB>>", "169": "<(IDENTIFIER,k,k &lt;= K)<SUB>30</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,k++)<SUB>30</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.assignment,int l = N + 1)<SUB>31</SUB>>", "177": "<(&lt;operator&gt;.addition,N + 1)<SUB>31</SUB>>", "179": "<(LITERAL,1,N + 1)<SUB>31</SUB>>", "181": "<(&lt;operator&gt;.assignment,int duplicates = 0)<SUB>32</SUB>>", "183": "<(LITERAL,0,int duplicates = 0)<SUB>32</SUB>>", "185": "<(LOCAL,int r: int)<SUB>33</SUB>>", "187": "<(IDENTIFIER,r,int r = N)<SUB>33</SUB>>", "189": "<(&lt;operator&gt;.greaterEqualsThan,r &gt;= 1)<SUB>33</SUB>>", "191": "<(LITERAL,1,r &gt;= 1)<SUB>33</SUB>>", "193": "<(IDENTIFIER,r,r--)<SUB>33</SUB>>", "195": "<(CONTROL_STRUCTURE,while (l - 1 &gt;= 1),while (l - 1 &gt;= 1))<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>34</SUB>>", "199": "<(LITERAL,1,l - 1)<SUB>34</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "203": "<(&lt;operator&gt;.assignment,int nextDuplicates = duplicates)<SUB>35</SUB>>", "205": "<(IDENTIFIER,duplicates,int nextDuplicates = duplicates)<SUB>35</SUB>>", "207": "<(&lt;operator&gt;.greaterEqualsThan,freq[a[l - 1]] &gt;= 1)<SUB>36</SUB>>", "209": "<(IDENTIFIER,freq,freq[a[l - 1]] &gt;= 1)<SUB>36</SUB>>", "211": "<(IDENTIFIER,a,freq[a[l - 1]] &gt;= 1)<SUB>36</SUB>>", "213": "<(IDENTIFIER,l,l - 1)<SUB>36</SUB>>", "215": "<(LITERAL,1,freq[a[l - 1]] &gt;= 1)<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.postIncrement,nextDuplicates++)<SUB>37</SUB>>", "219": "<(CONTROL_STRUCTURE,if (nextDuplicates &lt;= k),if (nextDuplicates &lt;= k))<SUB>39</SUB>>", "221": "<(IDENTIFIER,nextDuplicates,nextDuplicates &lt;= k)<SUB>39</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "225": "<(IDENTIFIER,duplicates,duplicates = nextDuplicates)<SUB>40</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,freq[a[l - 1]]++)<SUB>41</SUB>>", "229": "<(IDENTIFIER,freq,freq[a[l - 1]]++)<SUB>41</SUB>>", "231": "<(IDENTIFIER,a,freq[a[l - 1]]++)<SUB>41</SUB>>", "233": "<(IDENTIFIER,l,l - 1)<SUB>41</SUB>>", "235": "<(&lt;operator&gt;.postDecrement,l--)<SUB>42</SUB>>", "237": "<(CONTROL_STRUCTURE,else,else)<SUB>43</SUB>>", "239": "<(CONTROL_STRUCTURE,break;,break;)<SUB>44</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,transition[k][r])<SUB>47</SUB>>", "243": "<(IDENTIFIER,transition,transition[k][r] = l)<SUB>47</SUB>>", "245": "<(IDENTIFIER,r,transition[k][r] = l)<SUB>47</SUB>>", "247": "<(CONTROL_STRUCTURE,if (--freq[a[r]] &gt;= 1),if (--freq[a[r]] &gt;= 1))<SUB>48</SUB>>", "249": "<(&lt;operator&gt;.preDecrement,--freq[a[r]])<SUB>48</SUB>>", "251": "<(IDENTIFIER,freq,--freq[a[r]])<SUB>48</SUB>>", "253": "<(IDENTIFIER,a,--freq[a[r]])<SUB>48</SUB>>", "255": "<(LITERAL,1,--freq[a[r]] &gt;= 1)<SUB>48</SUB>>", "257": "<(&lt;operator&gt;.postDecrement,duplicates--)<SUB>49</SUB>>", "259": "<(LOCAL,int[][] dp: int[][])<SUB>53</SUB>>", "261": "<(IDENTIFIER,dp,int[][] dp = new int[K + 1][N + 1])<SUB>53</SUB>>", "263": "<(&lt;operator&gt;.addition,K + 1)<SUB>53</SUB>>", "265": "<(LITERAL,1,K + 1)<SUB>53</SUB>>", "267": "<(IDENTIFIER,N,N + 1)<SUB>53</SUB>>", "269": "<(LOCAL,int oo: int)<SUB>54</SUB>>", "271": "<(IDENTIFIER,oo,int oo = (int) 1e9)<SUB>54</SUB>>", "273": "<(TYPE_REF,int,int)<SUB>54</SUB>>", "275": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "277": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>55</SUB>>", "279": "<(LITERAL,0,int $idx0 = 0)<SUB>55</SUB>>", "281": "<(IDENTIFIER,$idx0,$idx0 &lt; dp.length)>", "283": "<(IDENTIFIER,dp,$idx0 &lt; dp.length)>", "285": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>55</SUB>>", "287": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "289": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>55</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>55</SUB>>", "293": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "295": "<(IDENTIFIER,Arrays,fill(row, oo))<SUB>56</SUB>>", "297": "<(IDENTIFIER,oo,fill(row, oo))<SUB>56</SUB>>", "299": "<(LOCAL,int k: int)<SUB>58</SUB>>", "301": "<(IDENTIFIER,k,int k = 0)<SUB>58</SUB>>", "303": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= K)<SUB>58</SUB>>", "305": "<(IDENTIFIER,K,k &lt;= K)<SUB>58</SUB>>", "307": "<(IDENTIFIER,k,k++)<SUB>58</SUB>>", "309": "<(&lt;operator&gt;.assignment,dp[k][0] = 0)<SUB>59</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>59</SUB>>", "313": "<(IDENTIFIER,k,dp[k][0] = 0)<SUB>59</SUB>>", "315": "<(LITERAL,0,dp[k][0] = 0)<SUB>59</SUB>>", "317": "<(LOCAL,int r: int)<SUB>61</SUB>>", "319": "<(IDENTIFIER,r,int r = 1)<SUB>61</SUB>>", "321": "<(&lt;operator&gt;.lessEqualsThan,r &lt;= N)<SUB>61</SUB>>", "323": "<(IDENTIFIER,N,r &lt;= N)<SUB>61</SUB>>", "325": "<(IDENTIFIER,r,r++)<SUB>61</SUB>>", "327": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt;= K); k++),for (int k = 0; Some(k &lt;= K); k++))<SUB>62</SUB>>", "329": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>62</SUB>>", "331": "<(LITERAL,0,int k = 0)<SUB>62</SUB>>", "333": "<(IDENTIFIER,k,k &lt;= K)<SUB>62</SUB>>", "335": "<(&lt;operator&gt;.postIncrement,k++)<SUB>62</SUB>>", "337": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "339": "<(LOCAL,int delta: int)<SUB>63</SUB>>", "341": "<(IDENTIFIER,delta,int delta = 0)<SUB>63</SUB>>", "343": "<(&lt;operator&gt;.lessEqualsThan,delta &lt;= k)<SUB>63</SUB>>", "345": "<(IDENTIFIER,k,delta &lt;= k)<SUB>63</SUB>>", "347": "<(IDENTIFIER,delta,delta++)<SUB>63</SUB>>", "349": "<(&lt;operator&gt;.assignment,dp[k][r] = min(dp[k][r], dp[k - delta][transition[delta][r] - 1] + 1))<SUB>64</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>64</SUB>>", "353": "<(IDENTIFIER,k,dp[k][r] = min(dp[k][r], dp[k - delta][transition[delta][r] - 1] + 1))<SUB>64</SUB>>", "355": "<(min,min(dp[k][r], dp[k - delta][transition[delta][r] - 1] + 1))<SUB>64</SUB>>", "357": "<(&lt;operator&gt;.indexAccess,dp[k][r])<SUB>64</SUB>>", "359": "<(IDENTIFIER,dp,min(dp[k][r], dp[k - delta][transition[delta][r] - 1] + 1))<SUB>64</SUB>>", "361": "<(IDENTIFIER,r,min(dp[k][r], dp[k - delta][transition[delta][r] - 1] + 1))<SUB>64</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp[k - delta][transition[delta][r] - 1])<SUB>64</SUB>>", "365": "<(IDENTIFIER,dp,dp[k - delta][transition[delta][r] - 1] + 1)<SUB>64</SUB>>", "367": "<(IDENTIFIER,k,k - delta)<SUB>64</SUB>>", "369": "<(&lt;operator&gt;.subtraction,transition[delta][r] - 1)<SUB>64</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,transition[delta])<SUB>64</SUB>>", "373": "<(IDENTIFIER,delta,transition[delta][r] - 1)<SUB>64</SUB>>", "375": "<(LITERAL,1,transition[delta][r] - 1)<SUB>64</SUB>>", "377": "<(println,println(dp[K][N]))<SUB>68</SUB>>", "379": "<(&lt;operator&gt;.indexAccess,dp[K][N])<SUB>68</SUB>>", "381": "<(IDENTIFIER,dp,println(dp[K][N]))<SUB>68</SUB>>", "383": "<(IDENTIFIER,N,println(dp[K][N]))<SUB>68</SUB>>", "385": "<(IDENTIFIER,out,close())<SUB>70</SUB>>", "387": "<(MODIFIER,STATIC)>"}}