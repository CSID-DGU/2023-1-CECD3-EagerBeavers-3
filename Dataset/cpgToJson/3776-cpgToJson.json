{"edges": [["21", "22"], ["21", "23"], ["21", "344"], ["21", "345"], ["21", "346"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "38"], ["23", "42"], ["23", "43"], ["23", "47"], ["23", "48"], ["23", "55"], ["23", "56"], ["23", "63"], ["23", "83"], ["23", "103"], ["23", "342"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "93"], ["83", "95"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "109"], ["103", "137"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "135"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["138", "139"], ["138", "140"], ["138", "145"], ["138", "146"], ["138", "151"], ["138", "307"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "299"], ["163", "302"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "177"], ["175", "180"], ["175", "183"], ["175", "185"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["185", "187"], ["185", "192"], ["185", "217"], ["185", "242"], ["185", "267"], ["185", "292"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["199", "202"], ["202", "203"], ["202", "210"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["221", "222"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["224", "227"], ["227", "228"], ["227", "235"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["248", "249"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["251", "254"], ["254", "255"], ["254", "262"], ["255", "256"], ["255", "261"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["267", "268"], ["267", "273"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "272"], ["273", "274"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "278"], ["276", "279"], ["279", "280"], ["279", "287"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "309"], ["307", "312"], ["307", "315"], ["307", "317"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["315", "316"], ["317", "318"], ["317", "340"], ["318", "319"], ["318", "320"], ["318", "323"], ["318", "326"], ["318", "328"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["326", "327"], ["328", "329"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "339"], ["332", "333"], ["332", "334"], ["334", "335"], ["334", "338"], ["335", "336"], ["335", "337"], ["340", "341"], ["342", "343"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "35"], ["33", "40"], ["38", "45"], ["43", "52"], ["48", "59"], ["56", "65"], ["342", "346"], ["26", "24"], ["30", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["58", "56"], ["65", "68"], ["68", "75"], ["68", "85"], ["71", "68"], ["85", "90"], ["88", "97"], ["88", "105"], ["93", "90"], ["104", "112"], ["104", "142"], ["52", "50"], ["59", "58"], ["74", "71"], ["90", "88"], ["96", "93"], ["105", "104"], ["75", "80"], ["78", "74"], ["97", "100"], ["100", "96"], ["112", "115"], ["115", "123"], ["115", "342"], ["118", "115"], ["140", "148"], ["146", "153"], ["80", "78"], ["135", "118"], ["142", "140"], ["148", "146"], ["153", "158"], ["156", "166"], ["156", "309"], ["161", "158"], ["309", "312"], ["312", "320"], ["312", "342"], ["315", "312"], ["123", "126"], ["126", "132"], ["126", "135"], ["129", "126"], ["158", "156"], ["299", "304"], ["302", "161"], ["340", "315"], ["132", "129"], ["166", "169"], ["169", "177"], ["169", "299"], ["172", "169"], ["304", "302"], ["320", "323"], ["323", "335"], ["323", "340"], ["326", "323"], ["329", "326"], ["177", "180"], ["180", "191"], ["180", "172"], ["183", "180"], ["331", "329"], ["187", "193"], ["292", "183"], ["332", "331"], ["189", "187"], ["193", "206"], ["193", "218"], ["218", "229"], ["218", "245"], ["243", "258"], ["243", "270"], ["268", "281"], ["268", "294"], ["293", "292"], ["334", "332"], ["191", "189"], ["197", "218"], ["222", "245"], ["245", "243"], ["249", "270"], ["270", "268"], ["274", "294"], ["294", "293"], ["335", "334"], ["199", "197"], ["224", "222"], ["251", "249"], ["276", "274"], ["202", "199"], ["227", "224"], ["254", "251"], ["279", "276"], ["203", "213"], ["210", "202"], ["228", "236"], ["235", "227"], ["255", "263"], ["262", "254"], ["280", "288"], ["287", "279"], ["204", "203"], ["211", "210"], ["229", "232"], ["232", "228"], ["236", "239"], ["239", "235"], ["256", "255"], ["263", "262"], ["281", "284"], ["284", "280"], ["288", "287"], ["206", "204"], ["213", "211"], ["258", "256"], ["21", "26"], ["22", "346"], ["24", "346"], ["27", "346"], ["28", "346"], ["31", "346"], ["33", "346"], ["38", "346"], ["45", "346"], ["43", "346"], ["43", "346"], ["48", "346"], ["50", "346"], ["48", "346"], ["48", "346"], ["56", "346"], ["58", "346"], ["56", "346"], ["56", "346"], ["88", "346"], ["88", "346"], ["105", "346"], ["104", "346"], ["104", "346"], ["140", "346"], ["140", "346"], ["146", "346"], ["148", "346"], ["146", "346"], ["146", "346"], ["158", "346"], ["156", "346"], ["156", "346"], ["309", "346"], ["312", "346"], ["312", "346"], ["312", "346"], ["320", "346"], ["323", "346"], ["323", "346"], ["323", "346"], ["340", "346"], ["315", "346"], ["332", "346"], ["331", "346"], ["329", "346"], ["329", "346"], ["326", "346"], ["166", "346"], ["169", "346"], ["169", "346"], ["299", "346"], ["299", "346"], ["302", "346"], ["304", "346"], ["302", "346"], ["302", "346"], ["161", "346"], ["177", "346"], ["180", "346"], ["180", "346"], ["172", "346"], ["187", "346"], ["187", "346"], ["193", "346"], ["199", "346"], ["202", "346"], ["202", "346"], ["199", "346"], ["197", "346"], ["197", "346"], ["218", "346"], ["224", "346"], ["227", "346"], ["227", "346"], ["224", "346"], ["222", "346"], ["222", "346"], ["243", "346"], ["243", "346"], ["251", "346"], ["254", "346"], ["254", "346"], ["251", "346"], ["249", "346"], ["249", "346"], ["268", "346"], ["268", "346"], ["276", "346"], ["279", "346"], ["279", "346"], ["276", "346"], ["274", "346"], ["274", "346"], ["292", "346"], ["292", "346"], ["292", "346"], ["183", "346"], ["112", "346"], ["115", "346"], ["115", "346"], ["115", "346"], ["342", "346"], ["342", "346"], ["123", "346"], ["126", "346"], ["126", "346"], ["126", "346"], ["135", "346"], ["118", "346"], ["132", "346"], ["129", "346"], ["96", "346"], ["100", "346"], ["100", "346"], ["96", "346"], ["96", "346"], ["93", "346"], ["74", "346"], ["78", "346"], ["80", "346"], ["78", "346"], ["74", "346"], ["74", "346"], ["71", "346"], ["21", "22"], ["21", "24"], ["21", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["50", "48"], ["58", "56"], ["58", "56"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "65"], ["21", "85"], ["31", "342"], ["340", "342"], ["135", "342"], ["21", "342"], ["27", "35"], ["21", "35"], ["35", "40"], ["21", "40"], ["40", "45"], ["21", "45"], ["33", "50"], ["21", "50"], ["52", "50"], ["52", "50"], ["59", "58"], ["59", "58"], ["52", "58"], ["21", "58"], ["65", "68"], ["71", "68"], ["21", "68"], ["59", "68"], ["68", "71"], ["21", "71"], ["78", "74"], ["78", "74"], ["85", "88"], ["93", "88"], ["21", "88"], ["90", "88"], ["90", "88"], ["88", "93"], ["21", "93"], ["100", "96"], ["100", "96"], ["105", "104"], ["105", "104"], ["21", "104"], ["38", "52"], ["21", "52"], ["50", "59"], ["21", "59"], ["68", "90"], ["21", "90"], ["43", "105"], ["21", "105"], ["21", "112"], ["142", "140"], ["142", "140"], ["148", "146"], ["148", "146"], ["45", "78"], ["21", "78"], ["80", "78"], ["80", "78"], ["45", "100"], ["78", "100"], ["21", "100"], ["58", "100"], ["80", "100"], ["112", "115"], ["118", "115"], ["21", "115"], ["90", "115"], ["115", "118"], ["21", "118"], ["21", "153"], ["21", "309"], ["58", "80"], ["21", "80"], ["21", "123"], ["31", "135"], ["132", "135"], ["21", "135"], ["90", "142"], ["21", "142"], ["58", "142"], ["100", "142"], ["80", "142"], ["142", "148"], ["21", "148"], ["142", "148"], ["153", "156"], ["161", "156"], ["21", "156"], ["158", "156"], ["158", "156"], ["156", "161"], ["21", "161"], ["146", "299"], ["302", "299"], ["21", "299"], ["304", "302"], ["304", "302"], ["309", "312"], ["315", "312"], ["21", "312"], ["148", "312"], ["304", "312"], ["312", "315"], ["21", "315"], ["123", "126"], ["129", "126"], ["21", "126"], ["58", "126"], ["100", "126"], ["80", "126"], ["126", "129"], ["21", "129"], ["105", "158"], ["21", "158"], ["21", "166"], ["21", "320"], ["31", "340"], ["329", "340"], ["21", "340"], ["31", "132"], ["135", "132"], ["21", "132"], ["166", "169"], ["172", "169"], ["21", "169"], ["148", "169"], ["304", "169"], ["245", "169"], ["169", "172"], ["243", "172"], ["21", "172"], ["169", "304"], ["21", "304"], ["148", "304"], ["180", "304"], ["320", "323"], ["326", "323"], ["21", "323"], ["148", "323"], ["304", "323"], ["323", "326"], ["21", "326"], ["21", "177"], ["31", "329"], ["340", "329"], ["21", "329"], ["332", "329"], ["332", "329"], ["177", "180"], ["183", "180"], ["21", "180"], ["148", "180"], ["304", "180"], ["270", "180"], ["268", "183"], ["21", "183"], ["187", "292"], ["197", "292"], ["222", "292"], ["249", "292"], ["274", "292"], ["21", "292"], ["332", "331"], ["332", "331"], ["21", "331"], ["21", "332"], ["169", "193"], ["243", "193"], ["21", "193"], ["199", "197"], ["199", "197"], ["199", "197"], ["180", "218"], ["21", "218"], ["224", "222"], ["224", "222"], ["224", "222"], ["193", "243"], ["213", "243"], ["21", "243"], ["245", "243"], ["245", "243"], ["251", "249"], ["251", "249"], ["251", "249"], ["218", "268"], ["239", "268"], ["21", "268"], ["270", "268"], ["270", "268"], ["276", "274"], ["276", "274"], ["276", "274"], ["169", "245"], ["21", "245"], ["180", "270"], ["21", "270"], ["224", "199"], ["251", "199"], ["276", "199"], ["21", "199"], ["187", "199"], ["199", "224"], ["251", "224"], ["276", "224"], ["21", "224"], ["187", "224"], ["197", "224"], ["199", "251"], ["224", "251"], ["276", "251"], ["21", "251"], ["187", "251"], ["197", "251"], ["222", "251"], ["199", "276"], ["224", "276"], ["251", "276"], ["21", "276"], ["187", "276"], ["197", "276"], ["222", "276"], ["249", "276"], ["218", "232"], ["21", "232"], ["232", "239"], ["21", "239"], ["268", "284"], ["21", "284"], ["193", "206"], ["21", "206"], ["206", "213"], ["21", "213"], ["243", "258"], ["21", "258"], ["68", "68"], ["68", "74"], ["68", "80"], ["68", "71"], ["68", "75"], ["68", "78"], ["88", "93"], ["88", "100"], ["88", "88"], ["88", "96"], ["88", "97"], ["88", "90"], ["104", "146"], ["104", "112"], ["104", "148"], ["104", "158"], ["104", "140"], ["104", "115"], ["104", "153"], ["104", "309"], ["104", "142"], ["104", "312"], ["104", "156"], ["115", "118"], ["115", "123"], ["115", "135"], ["115", "115"], ["115", "126"], ["156", "161"], ["156", "302"], ["156", "158"], ["156", "304"], ["156", "169"], ["156", "299"], ["156", "166"], ["156", "156"], ["312", "340"], ["312", "315"], ["312", "323"], ["312", "320"], ["312", "312"], ["126", "129"], ["126", "132"], ["126", "126"], ["169", "180"], ["169", "177"], ["169", "172"], ["169", "169"], ["323", "334"], ["323", "326"], ["323", "329"], ["323", "323"], ["323", "335"], ["323", "332"], ["323", "331"], ["180", "292"], ["180", "243"], ["180", "268"], ["180", "180"], ["180", "189"], ["180", "245"], ["180", "191"], ["180", "187"], ["180", "293"], ["180", "183"], ["180", "193"], ["180", "294"], ["180", "270"], ["180", "218"], ["193", "213"], ["193", "204"], ["193", "206"], ["193", "202"], ["193", "199"], ["193", "197"], ["193", "210"], ["193", "211"], ["193", "203"], ["218", "228"], ["218", "224"], ["218", "236"], ["218", "229"], ["218", "227"], ["218", "222"], ["218", "232"], ["218", "239"], ["218", "235"], ["243", "256"], ["243", "262"], ["243", "258"], ["243", "249"], ["243", "254"], ["243", "255"], ["243", "251"], ["243", "263"], ["268", "281"], ["268", "288"], ["268", "276"], ["268", "274"], ["268", "279"], ["268", "284"], ["268", "280"], ["268", "287"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new FastWriter())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new FastWriter())<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new FastWriter())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(LOCAL,int m: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>6</SUB>>", "45": "<(nextInt,nextInt())<SUB>6</SUB>>", "47": "<(LOCAL,int[][] right: int[][])<SUB>7</SUB>>", "49": "<(IDENTIFIER,right,int[][] right = new int[n][m - 1])<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>7</SUB>>", "53": "<(IDENTIFIER,m,m - 1)<SUB>7</SUB>>", "55": "<(LOCAL,int[][] down: int[][])<SUB>8</SUB>>", "57": "<(IDENTIFIER,down,int[][] down = new int[n - 1][m])<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>8</SUB>>", "61": "<(LITERAL,1,n - 1)<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,right[i])<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,right[i] = nextArray(m - 1))<SUB>10</SUB>>", "79": "<(IDENTIFIER,in,nextArray(m - 1))<SUB>10</SUB>>", "81": "<(IDENTIFIER,m,m - 1)<SUB>10</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>12</SUB>>", "91": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,down[i])<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,down[i] = nextArray(m))<SUB>13</SUB>>", "101": "<(IDENTIFIER,in,nextArray(m))<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,if (k % 2 != 0),if (k % 2 != 0))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.modulo,k % 2)<SUB>15</SUB>>", "107": "<(LITERAL,2,k % 2)<SUB>15</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "111": "<(LOCAL,int i: int)<SUB>16</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>16</SUB>>", "117": "<(IDENTIFIER,n,i &lt; n)<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "125": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "127": "<(IDENTIFIER,j,j &lt; m)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "133": "<(IDENTIFIER,out,print(&quot;-1 &quot;))<SUB>18</SUB>>", "135": "<(println,println())<SUB>20</SUB>>", "137": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "139": "<(LOCAL,int[][] dp: int[][])<SUB>23</SUB>>", "141": "<(IDENTIFIER,dp,int[][] dp = new int[n][m])<SUB>23</SUB>>", "143": "<(IDENTIFIER,n,new int[n][m])<SUB>23</SUB>>", "145": "<(LOCAL,int[][] dp1: int[][])<SUB>24</SUB>>", "147": "<(IDENTIFIER,dp1,int[][] dp1 = new int[n][m])<SUB>24</SUB>>", "149": "<(IDENTIFIER,n,new int[n][m])<SUB>24</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k / 2); i++),for (int i = 0; Some(i &lt; k / 2); i++))<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "155": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "157": "<(IDENTIFIER,i,i &lt; k / 2)<SUB>25</SUB>>", "159": "<(IDENTIFIER,k,k / 2)<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "165": "<(LOCAL,int j: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>26</SUB>>", "171": "<(IDENTIFIER,n,j &lt; n)<SUB>26</SUB>>", "173": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int l = 0; Some(l &lt; m); l++),for (int l = 0; Some(l &lt; m); l++))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>27</SUB>>", "179": "<(LITERAL,0,int l = 0)<SUB>27</SUB>>", "181": "<(IDENTIFIER,l,l &lt; m)<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,l++)<SUB>27</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.assignment,int ans = Integer.MAX_VALUE)<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>28</SUB>>", "191": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>28</SUB>>", "193": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>29</SUB>>", "195": "<(LITERAL,0,j &gt; 0)<SUB>29</SUB>>", "197": "<(&lt;operator&gt;.assignment,ans = Math.min(ans, dp[j - 1][l] + down[j - 1][l]))<SUB>30</SUB>>", "199": "<(min,Math.min(ans, dp[j - 1][l] + down[j - 1][l]))<SUB>30</SUB>>", "201": "<(IDENTIFIER,ans,Math.min(ans, dp[j - 1][l] + down[j - 1][l]))<SUB>30</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[j - 1][l])<SUB>30</SUB>>", "205": "<(IDENTIFIER,dp,dp[j - 1][l] + down[j - 1][l])<SUB>30</SUB>>", "207": "<(IDENTIFIER,j,j - 1)<SUB>30</SUB>>", "209": "<(IDENTIFIER,l,dp[j - 1][l] + down[j - 1][l])<SUB>30</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,down[j - 1])<SUB>30</SUB>>", "213": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>30</SUB>>", "215": "<(LITERAL,1,j - 1)<SUB>30</SUB>>", "217": "<(CONTROL_STRUCTURE,if (l &gt; 0),if (l &gt; 0))<SUB>32</SUB>>", "219": "<(IDENTIFIER,l,l &gt; 0)<SUB>32</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "223": "<(IDENTIFIER,ans,ans = Math.min(ans, dp[j][l - 1] + right[j][l - 1]))<SUB>33</SUB>>", "225": "<(IDENTIFIER,Math,Math.min(ans, dp[j][l - 1] + right[j][l - 1]))<SUB>33</SUB>>", "227": "<(&lt;operator&gt;.addition,dp[j][l - 1] + right[j][l - 1])<SUB>33</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>33</SUB>>", "231": "<(IDENTIFIER,j,dp[j][l - 1] + right[j][l - 1])<SUB>33</SUB>>", "233": "<(IDENTIFIER,l,l - 1)<SUB>33</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,right[j][l - 1])<SUB>33</SUB>>", "237": "<(IDENTIFIER,right,dp[j][l - 1] + right[j][l - 1])<SUB>33</SUB>>", "239": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>33</SUB>>", "241": "<(LITERAL,1,l - 1)<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.notEquals,j != n - 1)<SUB>35</SUB>>", "245": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>35</SUB>>", "247": "<(LITERAL,1,n - 1)<SUB>35</SUB>>", "249": "<(&lt;operator&gt;.assignment,ans = Math.min(ans, dp[j + 1][l] + down[j][l]))<SUB>36</SUB>>", "251": "<(min,Math.min(ans, dp[j + 1][l] + down[j][l]))<SUB>36</SUB>>", "253": "<(IDENTIFIER,ans,Math.min(ans, dp[j + 1][l] + down[j][l]))<SUB>36</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,dp[j + 1][l])<SUB>36</SUB>>", "257": "<(IDENTIFIER,dp,dp[j + 1][l] + down[j][l])<SUB>36</SUB>>", "259": "<(IDENTIFIER,j,j + 1)<SUB>36</SUB>>", "261": "<(IDENTIFIER,l,dp[j + 1][l] + down[j][l])<SUB>36</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,down[j])<SUB>36</SUB>>", "265": "<(IDENTIFIER,j,dp[j + 1][l] + down[j][l])<SUB>36</SUB>>", "267": "<(CONTROL_STRUCTURE,if (l != m - 1),if (l != m - 1))<SUB>38</SUB>>", "269": "<(IDENTIFIER,l,l != m - 1)<SUB>38</SUB>>", "271": "<(IDENTIFIER,m,m - 1)<SUB>38</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "275": "<(IDENTIFIER,ans,ans = Math.min(ans, dp[j][l + 1] + right[j][l]))<SUB>39</SUB>>", "277": "<(IDENTIFIER,Math,Math.min(ans, dp[j][l + 1] + right[j][l]))<SUB>39</SUB>>", "279": "<(&lt;operator&gt;.addition,dp[j][l + 1] + right[j][l])<SUB>39</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>39</SUB>>", "283": "<(IDENTIFIER,j,dp[j][l + 1] + right[j][l])<SUB>39</SUB>>", "285": "<(IDENTIFIER,l,l + 1)<SUB>39</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,right[j][l])<SUB>39</SUB>>", "289": "<(IDENTIFIER,right,dp[j][l + 1] + right[j][l])<SUB>39</SUB>>", "291": "<(IDENTIFIER,l,dp[j][l + 1] + right[j][l])<SUB>39</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,dp1[j][l])<SUB>41</SUB>>", "295": "<(IDENTIFIER,dp1,dp1[j][l] = ans)<SUB>41</SUB>>", "297": "<(IDENTIFIER,l,dp1[j][l] = ans)<SUB>41</SUB>>", "299": "<(&lt;operator&gt;.assignment,dp = dp1)<SUB>44</SUB>>", "301": "<(IDENTIFIER,dp1,dp = dp1)<SUB>44</SUB>>", "303": "<(IDENTIFIER,dp1,dp1 = new int[n][m])<SUB>45</SUB>>", "305": "<(IDENTIFIER,n,new int[n][m])<SUB>45</SUB>>", "307": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>47</SUB>>", "309": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>47</SUB>>", "311": "<(LITERAL,0,int i = 0)<SUB>47</SUB>>", "313": "<(IDENTIFIER,i,i &lt; n)<SUB>47</SUB>>", "315": "<(&lt;operator&gt;.postIncrement,i++)<SUB>47</SUB>>", "317": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "319": "<(LOCAL,int j: int)<SUB>48</SUB>>", "321": "<(IDENTIFIER,j,int j = 0)<SUB>48</SUB>>", "323": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>48</SUB>>", "325": "<(IDENTIFIER,m,j &lt; m)<SUB>48</SUB>>", "327": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "329": "<(println,println((2 * dp[i][j]) + &quot; &quot;))<SUB>49</SUB>>", "331": "<(&lt;operator&gt;.addition,(2 * dp[i][j]) + &quot; &quot;)<SUB>49</SUB>>", "333": "<(LITERAL,2,2 * dp[i][j])<SUB>49</SUB>>", "335": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>49</SUB>>", "337": "<(IDENTIFIER,i,2 * dp[i][j])<SUB>49</SUB>>", "339": "<(LITERAL,&quot; &quot;,(2 * dp[i][j]) + &quot; &quot;)<SUB>49</SUB>>", "341": "<(IDENTIFIER,out,println())<SUB>51</SUB>>", "343": "<(IDENTIFIER,out,close())<SUB>54</SUB>>", "345": "<(MODIFIER,STATIC)>"}}