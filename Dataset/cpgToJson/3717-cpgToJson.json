{"edges": [["23", "24"], ["23", "25"], ["23", "358"], ["23", "359"], ["23", "360"], ["25", "26"], ["25", "29"], ["25", "31"], ["25", "34"], ["25", "4"], ["25", "39"], ["25", "42"], ["25", "43"], ["25", "87"], ["25", "88"], ["25", "92"], ["25", "356"], ["26", "27"], ["26", "28"], ["29", "30"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "3"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "82"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "68"], ["58", "70"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "108"], ["102", "109"], ["102", "113"], ["102", "114"], ["102", "120"], ["102", "136"], ["102", "6"], ["102", "192"], ["102", "195"], ["102", "8"], ["102", "196"], ["102", "199"], ["102", "200"], ["102", "201"], ["102", "210"], ["102", "349"], ["104", "105"], ["104", "106"], ["106", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "138"], ["136", "141"], ["136", "144"], ["136", "146"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "148"], ["146", "152"], ["148", "149"], ["148", "150"], ["150", "151"], ["152", "153"], ["152", "155"], ["153", "154"], ["155", "156"], ["155", "157"], ["155", "161"], ["155", "162"], ["155", "165"], ["155", "181"], ["157", "158"], ["157", "159"], ["159", "160"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "173"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "194"], ["195", "5"], ["196", "197"], ["196", "198"], ["199", "7"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "218"], ["210", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["220", "235"], ["220", "241"], ["220", "242"], ["220", "248"], ["220", "249"], ["220", "252"], ["220", "253"], ["220", "258"], ["220", "279"], ["221", "222"], ["221", "227"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["235", "240"], ["237", "238"], ["237", "239"], ["242", "243"], ["242", "244"], ["244", "245"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "255"], ["255", "256"], ["256", "257"], ["258", "259"], ["258", "261"], ["259", "260"], ["261", "262"], ["261", "263"], ["261", "267"], ["261", "272"], ["261", "277"], ["263", "264"], ["263", "265"], ["265", "266"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["277", "278"], ["279", "280"], ["279", "281"], ["279", "284"], ["279", "287"], ["279", "289"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["287", "288"], ["289", "290"], ["289", "297"], ["289", "314"], ["290", "291"], ["290", "296"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "307"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["307", "308"], ["307", "311"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "316"], ["314", "319"], ["314", "322"], ["314", "324"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "321"], ["322", "323"], ["324", "325"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "330"], ["327", "328"], ["327", "329"], ["331", "332"], ["331", "333"], ["331", "338"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["338", "339"], ["338", "348"], ["339", "340"], ["339", "345"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "347"], ["349", "350"], ["349", "351"], ["351", "352"], ["351", "355"], ["352", "353"], ["352", "354"], ["356", "357"], ["26", "29"], ["29", "33"], ["31", "38"], ["34", "41"], ["39", "42"], ["42", "45"], ["88", "94"], ["356", "360"], ["28", "26"], ["33", "31"], ["36", "34"], ["41", "39"], ["45", "48"], ["48", "55"], ["48", "90"], ["51", "48"], ["90", "88"], ["94", "97"], ["97", "106"], ["97", "356"], ["100", "97"], ["38", "36"], ["55", "60"], ["104", "111"], ["109", "117"], ["114", "122"], ["192", "195"], ["195", "198"], ["196", "199"], ["199", "204"], ["201", "212"], ["349", "100"], ["60", "64"], ["63", "83"], ["63", "73"], ["68", "64"], ["83", "84"], ["83", "51"], ["84", "51"], ["106", "104"], ["111", "109"], ["116", "114"], ["122", "125"], ["125", "131"], ["125", "138"], ["128", "125"], ["130", "128"], ["138", "141"], ["141", "150"], ["141", "194"], ["144", "141"], ["194", "192"], ["198", "196"], ["203", "201"], ["212", "215"], ["215", "224"], ["215", "352"], ["218", "215"], ["351", "349"], ["64", "63"], ["117", "116"], ["131", "134"], ["134", "130"], ["148", "153"], ["204", "207"], ["207", "203"], ["235", "245"], ["242", "249"], ["249", "256"], ["253", "259"], ["352", "351"], ["72", "78"], ["72", "68"], ["150", "148"], ["153", "159"], ["153", "144"], ["222", "232"], ["222", "237"], ["237", "235"], ["244", "242"], ["255", "253"], ["259", "265"], ["259", "281"], ["281", "284"], ["284", "292"], ["284", "218"], ["287", "284"], ["73", "72"], ["78", "83"], ["157", "162"], ["162", "168"], ["224", "222"], ["228", "237"], ["245", "244"], ["256", "255"], ["263", "268"], ["267", "273"], ["277", "259"], ["290", "298"], ["159", "157"], ["166", "175"], ["166", "183"], ["182", "153"], ["182", "188"], ["187", "153"], ["230", "228"], ["265", "263"], ["268", "267"], ["273", "281"], ["273", "277"], ["291", "290"], ["298", "303"], ["298", "316"], ["301", "316"], ["316", "319"], ["319", "327"], ["319", "287"], ["322", "319"], ["167", "166"], ["174", "179"], ["179", "168"], ["183", "182"], ["188", "187"], ["232", "230"], ["292", "291"], ["302", "308"], ["307", "301"], ["325", "322"], ["168", "167"], ["175", "174"], ["303", "302"], ["308", "311"], ["311", "307"], ["326", "334"], ["331", "325"], ["327", "326"], ["333", "342"], ["338", "331"], ["334", "333"], ["339", "338"], ["340", "345"], ["345", "339"], ["342", "340"], ["23", "28"], ["24", "360"], ["26", "360"], ["29", "360"], ["31", "360"], ["34", "360"], ["34", "360"], ["39", "360"], ["42", "360"], ["42", "360"], ["45", "360"], ["48", "360"], ["48", "360"], ["90", "360"], ["88", "360"], ["88", "360"], ["94", "360"], ["97", "360"], ["97", "360"], ["97", "360"], ["356", "360"], ["356", "360"], ["104", "360"], ["111", "360"], ["109", "360"], ["109", "360"], ["114", "360"], ["114", "360"], ["114", "360"], ["192", "360"], ["195", "360"], ["195", "360"], ["196", "360"], ["199", "360"], ["199", "360"], ["201", "360"], ["203", "360"], ["207", "360"], ["203", "360"], ["201", "360"], ["201", "360"], ["212", "360"], ["215", "360"], ["215", "360"], ["215", "360"], ["349", "360"], ["349", "360"], ["100", "360"], ["222", "360"], ["228", "360"], ["228", "360"], ["235", "360"], ["235", "360"], ["235", "360"], ["242", "360"], ["244", "360"], ["242", "360"], ["242", "360"], ["249", "360"], ["249", "360"], ["256", "360"], ["255", "360"], ["253", "360"], ["259", "360"], ["259", "360"], ["265", "360"], ["263", "360"], ["267", "360"], ["267", "360"], ["267", "360"], ["273", "360"], ["273", "360"], ["277", "360"], ["277", "360"], ["281", "360"], ["284", "360"], ["284", "360"], ["284", "360"], ["218", "360"], ["290", "360"], ["290", "360"], ["298", "360"], ["301", "360"], ["301", "360"], ["301", "360"], ["316", "360"], ["319", "360"], ["319", "360"], ["287", "360"], ["325", "360"], ["338", "360"], ["331", "360"], ["325", "360"], ["325", "360"], ["322", "360"], ["150", "360"], ["148", "360"], ["153", "360"], ["153", "360"], ["144", "360"], ["162", "360"], ["167", "360"], ["167", "360"], ["166", "360"], ["166", "360"], ["183", "360"], ["182", "360"], ["182", "360"], ["187", "360"], ["187", "360"], ["187", "360"], ["174", "360"], ["179", "360"], ["130", "360"], ["134", "360"], ["130", "360"], ["130", "360"], ["128", "360"], ["55", "360"], ["55", "360"], ["60", "360"], ["64", "360"], ["63", "360"], ["63", "360"], ["73", "360"], ["72", "360"], ["72", "360"], ["68", "360"], ["78", "360"], ["78", "360"], ["84", "360"], ["84", "360"], ["51", "360"], ["290", "360"], ["331", "360"], ["23", "24"], ["23", "26"], ["23", "31"], ["23", "39"], ["90", "88"], ["26", "29"], ["23", "29"], ["31", "34"], ["23", "34"], ["39", "42"], ["23", "42"], ["23", "45"], ["23", "94"], ["34", "356"], ["349", "356"], ["23", "356"], ["45", "48"], ["51", "48"], ["23", "48"], ["63", "51"], ["73", "51"], ["84", "51"], ["23", "51"], ["23", "55"], ["29", "90"], ["23", "90"], ["94", "97"], ["100", "97"], ["23", "97"], ["88", "97"], ["97", "100"], ["23", "100"], ["106", "104"], ["111", "109"], ["116", "114"], ["23", "192"], ["23", "196"], ["203", "201"], ["203", "201"], ["23", "60"], ["23", "83"], ["23", "122"], ["134", "130"], ["23", "138"], ["192", "195"], ["23", "195"], ["196", "199"], ["23", "199"], ["23", "212"], ["34", "349"], ["23", "349"], ["64", "63"], ["48", "63"], ["73", "63"], ["23", "63"], ["73", "68"], ["23", "68"], ["42", "84"], ["23", "84"], ["63", "84"], ["73", "84"], ["90", "106"], ["111", "106"], ["134", "106"], ["23", "106"], ["106", "111"], ["23", "111"], ["104", "116"], ["23", "116"], ["122", "125"], ["128", "125"], ["23", "125"], ["104", "125"], ["125", "128"], ["23", "128"], ["138", "141"], ["144", "141"], ["23", "141"], ["125", "141"], ["141", "144"], ["23", "144"], ["150", "148"], ["141", "203"], ["23", "203"], ["109", "203"], ["212", "215"], ["218", "215"], ["23", "215"], ["141", "215"], ["235", "218"], ["23", "218"], ["244", "242"], ["23", "249"], ["255", "253"], ["60", "64"], ["68", "64"], ["23", "64"], ["104", "117"], ["23", "117"], ["111", "134"], ["23", "134"], ["141", "204"], ["23", "204"], ["109", "207"], ["23", "207"], ["222", "235"], ["230", "235"], ["23", "235"], ["114", "235"], ["222", "235"], ["230", "235"], ["215", "235"], ["23", "281"], ["73", "72"], ["73", "72"], ["23", "72"], ["23", "78"], ["42", "150"], ["84", "150"], ["23", "150"], ["148", "153"], ["159", "153"], ["23", "153"], ["159", "157"], ["23", "162"], ["199", "222"], ["235", "222"], ["23", "222"], ["114", "222"], ["235", "222"], ["167", "222"], ["187", "222"], ["130", "222"], ["284", "244"], ["23", "244"], ["109", "244"], ["256", "255"], ["253", "259"], ["265", "259"], ["23", "259"], ["265", "263"], ["263", "267"], ["23", "267"], ["281", "284"], ["287", "284"], ["23", "284"], ["273", "284"], ["109", "284"], ["319", "287"], ["23", "287"], ["23", "290"], ["63", "73"], ["23", "73"], ["64", "73"], ["167", "187"], ["23", "187"], ["195", "228"], ["256", "228"], ["23", "228"], ["230", "228"], ["230", "228"], ["284", "245"], ["23", "245"], ["109", "245"], ["195", "256"], ["228", "256"], ["23", "256"], ["273", "277"], ["23", "277"], ["23", "316"], ["153", "159"], ["23", "159"], ["167", "166"], ["167", "166"], ["23", "166"], ["167", "174"], ["23", "174"], ["183", "182"], ["183", "182"], ["23", "182"], ["114", "187"], ["167", "187"], ["222", "230"], ["23", "230"], ["114", "230"], ["222", "230"], ["259", "265"], ["23", "265"], ["249", "273"], ["277", "273"], ["23", "273"], ["284", "273"], ["109", "273"], ["284", "298"], ["23", "298"], ["316", "319"], ["322", "319"], ["23", "319"], ["298", "319"], ["311", "319"], ["345", "319"], ["345", "322"], ["23", "322"], ["331", "325"], ["331", "325"], ["331", "325"], ["114", "167"], ["235", "167"], ["187", "167"], ["174", "167"], ["130", "167"], ["157", "167"], ["23", "167"], ["114", "174"], ["167", "174"], ["162", "179"], ["23", "179"], ["162", "183"], ["179", "183"], ["23", "183"], ["298", "311"], ["23", "311"], ["23", "331"], ["290", "331"], ["301", "331"], ["325", "331"], ["23", "338"], ["319", "345"], ["23", "345"], ["319", "345"], ["48", "60"], ["48", "48"], ["48", "55"], ["48", "64"], ["48", "51"], ["48", "83"], ["48", "63"], ["97", "192"], ["97", "114"], ["97", "215"], ["97", "196"], ["97", "104"], ["97", "204"], ["97", "138"], ["97", "195"], ["97", "349"], ["97", "100"], ["97", "194"], ["97", "201"], ["97", "141"], ["97", "116"], ["97", "122"], ["97", "199"], ["97", "117"], ["97", "351"], ["97", "109"], ["97", "198"], ["97", "97"], ["97", "207"], ["97", "212"], ["97", "352"], ["97", "111"], ["97", "106"], ["97", "203"], ["97", "125"], ["63", "72"], ["63", "73"], ["83", "84"], ["125", "128"], ["125", "134"], ["125", "131"], ["125", "130"], ["125", "125"], ["141", "150"], ["141", "148"], ["141", "141"], ["141", "153"], ["141", "144"], ["215", "215"], ["215", "256"], ["215", "242"], ["215", "281"], ["215", "224"], ["215", "249"], ["215", "237"], ["215", "253"], ["215", "222"], ["215", "244"], ["215", "245"], ["215", "284"], ["215", "255"], ["215", "259"], ["215", "235"], ["215", "218"], ["72", "68"], ["72", "64"], ["72", "63"], ["72", "78"], ["153", "167"], ["153", "162"], ["153", "168"], ["153", "182"], ["153", "159"], ["153", "153"], ["153", "183"], ["153", "166"], ["153", "157"], ["222", "230"], ["222", "228"], ["222", "232"], ["259", "268"], ["259", "273"], ["259", "267"], ["259", "265"], ["259", "263"], ["284", "292"], ["284", "290"], ["284", "298"], ["284", "316"], ["284", "319"], ["284", "291"], ["284", "284"], ["284", "287"], ["166", "167"], ["166", "168"], ["166", "174"], ["166", "179"], ["166", "166"], ["166", "175"], ["182", "188"], ["182", "187"], ["273", "259"], ["273", "277"], ["298", "308"], ["298", "302"], ["298", "311"], ["298", "307"], ["298", "301"], ["298", "303"], ["319", "334"], ["319", "326"], ["319", "338"], ["319", "322"], ["319", "340"], ["319", "342"], ["319", "319"], ["319", "339"], ["319", "325"], ["319", "333"], ["319", "327"], ["319", "345"], ["319", "331"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(IDENTIFIER,sc,sc = new FastScanner())<SUB>2</SUB>>", "29": "<(&lt;init&gt;,new FastScanner())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "4": "<(LOCAL,ArrayList&lt;Integer&gt; primes: ANY)<SUB>5</SUB>>", "40": "<(IDENTIFIER,primes,ANY primes = new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "42": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= 3200); i++),for (int i = 2; Some(i &lt;= 3200); i++))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>6</SUB>>", "47": "<(LITERAL,2,int i = 2)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,i &lt;= 3200)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,boolean p = true)<SUB>7</SUB>>", "57": "<(LITERAL,true,boolean p = true)<SUB>7</SUB>>", "59": "<(LOCAL,int j: int)<SUB>8</SUB>>", "61": "<(IDENTIFIER,j,int j = 2)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.lessEqualsThan,j * j &lt;= i)<SUB>8</SUB>>", "65": "<(IDENTIFIER,j,j * j)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,j * j &lt;= i)<SUB>8</SUB>>", "69": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "71": "<(CONTROL_STRUCTURE,if (i % j == 0),if (i % j == 0))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.modulo,i % j)<SUB>9</SUB>>", "75": "<(IDENTIFIER,j,i % j)<SUB>9</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "79": "<(IDENTIFIER,p,p = false)<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,break;,break;)<SUB>11</SUB>>", "83": "<(IDENTIFIER,p,if (p))<SUB>14</SUB>>", "85": "<(IDENTIFIER,primes,add(i))<SUB>14</SUB>>", "87": "<(LOCAL,int Q: int)<SUB>16</SUB>>", "89": "<(IDENTIFIER,Q,int Q = ni())<SUB>16</SUB>>", "91": "<(IDENTIFIER,sc,ni())<SUB>16</SUB>>", "93": "<(LOCAL,int q: int)<SUB>17</SUB>>", "95": "<(IDENTIFIER,q,int q = 0)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.lessThan,q &lt; Q)<SUB>17</SUB>>", "99": "<(IDENTIFIER,Q,q &lt; Q)<SUB>17</SUB>>", "101": "<(IDENTIFIER,q,q++)<SUB>17</SUB>>", "103": "<(LOCAL,int N: int)<SUB>18</SUB>>", "105": "<(IDENTIFIER,N,int N = ni())<SUB>18</SUB>>", "107": "<(IDENTIFIER,sc,ni())<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,int K = ni())<SUB>19</SUB>>", "111": "<(ni,ni())<SUB>19</SUB>>", "113": "<(LOCAL,int[] nums: int[])<SUB>20</SUB>>", "115": "<(IDENTIFIER,nums,int[] nums = new int[N + 1])<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.addition,N + 1)<SUB>20</SUB>>", "119": "<(LITERAL,1,N + 1)<SUB>20</SUB>>", "121": "<(LOCAL,int i: int)<SUB>21</SUB>>", "123": "<(IDENTIFIER,i,int i = 1)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>21</SUB>>", "127": "<(IDENTIFIER,N,i &lt;= N)<SUB>21</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>21</SUB>>", "133": "<(IDENTIFIER,i,nums[i] = ni())<SUB>21</SUB>>", "135": "<(IDENTIFIER,sc,ni())<SUB>21</SUB>>", "137": "<(LOCAL,int i: int)<SUB>22</SUB>>", "139": "<(IDENTIFIER,i,int i = 1)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>22</SUB>>", "143": "<(IDENTIFIER,N,i &lt;= N)<SUB>22</SUB>>", "145": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "147": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>23</SUB>>", "149": "<(IDENTIFIER,$iterLocal0,)<SUB>23</SUB>>", "151": "<(IDENTIFIER,primes,&lt;empty&gt;)<SUB>23</SUB>>", "153": "<(hasNext,&lt;empty&gt;)<SUB>23</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>23</SUB>>", "159": "<(next,&lt;empty&gt;)<SUB>23</SUB>>", "161": "<(LOCAL,int c: int)<SUB>24</SUB>>", "163": "<(IDENTIFIER,c,int c = 0)<SUB>24</SUB>>", "165": "<(CONTROL_STRUCTURE,while (nums[i] % p == 0),while (nums[i] % p == 0))<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.modulo,nums[i] % p)<SUB>25</SUB>>", "169": "<(IDENTIFIER,nums,nums[i] % p)<SUB>25</SUB>>", "171": "<(IDENTIFIER,p,nums[i] % p)<SUB>25</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>26</SUB>>", "177": "<(IDENTIFIER,i,nums[i] /= p)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,c++)<SUB>27</SUB>>", "181": "<(CONTROL_STRUCTURE,if (c % 2 == 1),if (c % 2 == 1))<SUB>29</SUB>>", "183": "<(&lt;operator&gt;.modulo,c % 2)<SUB>29</SUB>>", "185": "<(LITERAL,2,c % 2)<SUB>29</SUB>>", "187": "<(&lt;operator&gt;.assignmentMultiplication,nums[i] *= p)<SUB>29</SUB>>", "189": "<(IDENTIFIER,nums,nums[i] *= p)<SUB>29</SUB>>", "191": "<(IDENTIFIER,p,nums[i] *= p)<SUB>29</SUB>>", "192": "<(&lt;operator&gt;.assignment,ANY ts = new TreeSet&lt;Integer&gt;())<SUB>33</SUB>>", "194": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>33</SUB>>", "5": "<(IDENTIFIER,ts,new TreeSet&lt;Integer&gt;())<SUB>33</SUB>>", "196": "<(&lt;operator&gt;.assignment,ANY last = new HashMap&lt;Integer, Integer&gt;())<SUB>34</SUB>>", "198": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Integer&gt;())<SUB>34</SUB>>", "7": "<(IDENTIFIER,last,new HashMap&lt;Integer, Integer&gt;())<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.assignment,int[][] dp = new int[N + 1][K + 1])<SUB>36</SUB>>", "203": "<(&lt;operator&gt;.alloc,new int[N + 1][K + 1])>", "205": "<(IDENTIFIER,N,N + 1)<SUB>36</SUB>>", "207": "<(&lt;operator&gt;.addition,K + 1)<SUB>36</SUB>>", "209": "<(LITERAL,1,K + 1)<SUB>36</SUB>>", "211": "<(LOCAL,int i: int)<SUB>37</SUB>>", "213": "<(IDENTIFIER,i,int i = 1)<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>37</SUB>>", "217": "<(IDENTIFIER,N,i &lt;= N)<SUB>37</SUB>>", "219": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "221": "<(CONTROL_STRUCTURE,if (last.containsKey(nums[i])),if (last.containsKey(nums[i])))<SUB>38</SUB>>", "223": "<(IDENTIFIER,last,containsKey(nums[i]))<SUB>38</SUB>>", "225": "<(IDENTIFIER,nums,containsKey(nums[i]))<SUB>38</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "229": "<(IDENTIFIER,ts,add(last.get(nums[i])))<SUB>39</SUB>>", "231": "<(IDENTIFIER,last,get(nums[i]))<SUB>39</SUB>>", "233": "<(IDENTIFIER,nums,get(nums[i]))<SUB>39</SUB>>", "235": "<(put,put(nums[i], i))<SUB>41</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>41</SUB>>", "239": "<(IDENTIFIER,i,put(nums[i], i))<SUB>41</SUB>>", "241": "<(LOCAL,int[] inds: int[])<SUB>42</SUB>>", "243": "<(IDENTIFIER,inds,int[] inds = new int[K + 1])<SUB>42</SUB>>", "245": "<(&lt;operator&gt;.addition,K + 1)<SUB>42</SUB>>", "247": "<(LITERAL,1,K + 1)<SUB>42</SUB>>", "249": "<(&lt;operator&gt;.assignment,int ind = 0)<SUB>43</SUB>>", "251": "<(LITERAL,0,int ind = 0)<SUB>43</SUB>>", "253": "<(&lt;operator&gt;.assignment,)<SUB>44</SUB>>", "255": "<(iterator,&lt;empty&gt;)<SUB>44</SUB>>", "257": "<(IDENTIFIER,ts,descendingSet())<SUB>44</SUB>>", "259": "<(hasNext,&lt;empty&gt;)<SUB>44</SUB>>", "261": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "263": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>44</SUB>>", "265": "<(next,&lt;empty&gt;)<SUB>44</SUB>>", "267": "<(&lt;operator&gt;.assignment,inds[ind] = x)<SUB>45</SUB>>", "269": "<(IDENTIFIER,inds,inds[ind] = x)<SUB>45</SUB>>", "271": "<(IDENTIFIER,x,inds[ind] = x)<SUB>45</SUB>>", "273": "<(&lt;operator&gt;.equals,ind == K)<SUB>46</SUB>>", "275": "<(IDENTIFIER,K,ind == K)<SUB>46</SUB>>", "277": "<(&lt;operator&gt;.postIncrement,ind++)<SUB>47</SUB>>", "279": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= K); j++),for (int j = 0; Some(j &lt;= K); j++))<SUB>49</SUB>>", "281": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>49</SUB>>", "283": "<(LITERAL,0,int j = 0)<SUB>49</SUB>>", "285": "<(IDENTIFIER,j,j &lt;= K)<SUB>49</SUB>>", "287": "<(&lt;operator&gt;.postIncrement,j++)<SUB>49</SUB>>", "289": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>50</SUB>>", "293": "<(IDENTIFIER,dp,dp[i][j] = INF)<SUB>50</SUB>>", "295": "<(IDENTIFIER,j,dp[i][j] = INF)<SUB>50</SUB>>", "297": "<(CONTROL_STRUCTURE,if (j &gt; 0),if (j &gt; 0))<SUB>51</SUB>>", "299": "<(IDENTIFIER,j,j &gt; 0)<SUB>51</SUB>>", "301": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i][j - 1])<SUB>51</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>51</SUB>>", "305": "<(IDENTIFIER,i,dp[i][j] = dp[i][j - 1])<SUB>51</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1])<SUB>51</SUB>>", "309": "<(IDENTIFIER,dp,dp[i][j] = dp[i][j - 1])<SUB>51</SUB>>", "311": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>51</SUB>>", "313": "<(LITERAL,1,j - 1)<SUB>51</SUB>>", "315": "<(LOCAL,int k: int)<SUB>52</SUB>>", "317": "<(IDENTIFIER,k,int k = 0)<SUB>52</SUB>>", "319": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= j)<SUB>52</SUB>>", "321": "<(IDENTIFIER,j,k &lt;= j)<SUB>52</SUB>>", "323": "<(IDENTIFIER,k,k++)<SUB>52</SUB>>", "325": "<(&lt;operator&gt;.assignment,dp[i][j] = Math.min(dp[i][j], dp[inds[k]][j - k] + 1))<SUB>53</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>53</SUB>>", "329": "<(IDENTIFIER,i,dp[i][j] = Math.min(dp[i][j], dp[inds[k]][j - k] + 1))<SUB>53</SUB>>", "331": "<(min,Math.min(dp[i][j], dp[inds[k]][j - k] + 1))<SUB>53</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>53</SUB>>", "335": "<(IDENTIFIER,dp,Math.min(dp[i][j], dp[inds[k]][j - k] + 1))<SUB>53</SUB>>", "337": "<(IDENTIFIER,j,Math.min(dp[i][j], dp[inds[k]][j - k] + 1))<SUB>53</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,dp[inds[k]][j - k])<SUB>53</SUB>>", "341": "<(IDENTIFIER,dp,dp[inds[k]][j - k] + 1)<SUB>53</SUB>>", "343": "<(IDENTIFIER,inds,dp[inds[k]][j - k] + 1)<SUB>53</SUB>>", "345": "<(&lt;operator&gt;.subtraction,j - k)<SUB>53</SUB>>", "347": "<(IDENTIFIER,k,j - k)<SUB>53</SUB>>", "349": "<(println,println(dp[N][K]))<SUB>57</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,dp[N][K])<SUB>57</SUB>>", "353": "<(IDENTIFIER,dp,println(dp[N][K]))<SUB>57</SUB>>", "355": "<(IDENTIFIER,K,println(dp[N][K]))<SUB>57</SUB>>", "357": "<(IDENTIFIER,pw,close())<SUB>59</SUB>>", "359": "<(MODIFIER,STATIC)>"}}