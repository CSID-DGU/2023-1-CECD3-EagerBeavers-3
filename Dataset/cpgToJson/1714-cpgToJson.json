{"edges": [["23", "24"], ["23", "25"], ["23", "244"], ["23", "245"], ["23", "246"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "62"], ["25", "63"], ["25", "70"], ["25", "71"], ["25", "8"], ["25", "76"], ["25", "79"], ["25", "80"], ["25", "152"], ["25", "153"], ["25", "156"], ["25", "157"], ["25", "161"], ["25", "239"], ["25", "242"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "7"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "98"], ["90", "111"], ["90", "122"], ["90", "137"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "97"], ["95", "96"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "136"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "151"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["161", "162"], ["161", "164"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "170"], ["164", "171"], ["164", "176"], ["164", "177"], ["164", "182"], ["164", "183"], ["164", "186"], ["164", "234"], ["166", "167"], ["166", "168"], ["168", "169"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "211"], ["197", "212"], ["198", "199"], ["198", "210"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["212", "213"], ["213", "214"], ["213", "227"], ["213", "228"], ["214", "215"], ["214", "226"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["228", "229"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "236"], ["236", "237"], ["237", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "51"], ["48", "59"], ["55", "67"], ["63", "73"], ["71", "78"], ["76", "79"], ["79", "82"], ["153", "159"], ["157", "162"], ["239", "242"], ["242", "246"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["65", "63"], ["73", "71"], ["78", "76"], ["82", "85"], ["85", "95"], ["85", "153"], ["88", "85"], ["159", "157"], ["162", "168"], ["162", "239"], ["31", "38"], ["34", "29"], ["46", "44"], ["51", "50"], ["59", "57"], ["67", "65"], ["92", "100"], ["98", "113"], ["111", "127"], ["122", "142"], ["137", "88"], ["166", "173"], ["171", "179"], ["177", "183"], ["183", "188"], ["33", "31"], ["36", "34"], ["94", "92"], ["99", "107"], ["104", "98"], ["112", "119"], ["117", "111"], ["124", "122"], ["139", "137"], ["168", "166"], ["173", "171"], ["179", "177"], ["188", "191"], ["191", "235"], ["191", "201"], ["194", "191"], ["235", "162"], ["235", "237"], ["38", "36"], ["95", "94"], ["100", "99"], ["105", "104"], ["113", "112"], ["119", "117"], ["125", "124"], ["140", "139"], ["237", "162"], ["107", "105"], ["126", "132"], ["131", "125"], ["141", "147"], ["146", "140"], ["198", "217"], ["127", "126"], ["132", "131"], ["142", "141"], ["147", "146"], ["199", "198"], ["200", "206"], ["205", "199"], ["214", "230"], ["201", "200"], ["206", "205"], ["215", "214"], ["216", "222"], ["221", "215"], ["230", "235"], ["217", "216"], ["222", "221"], ["23", "28"], ["24", "246"], ["26", "246"], ["34", "246"], ["34", "246"], ["34", "246"], ["29", "246"], ["40", "246"], ["43", "246"], ["43", "246"], ["48", "246"], ["51", "246"], ["50", "246"], ["48", "246"], ["48", "246"], ["57", "246"], ["55", "246"], ["55", "246"], ["63", "246"], ["65", "246"], ["65", "246"], ["63", "246"], ["63", "246"], ["71", "246"], ["71", "246"], ["71", "246"], ["76", "246"], ["79", "246"], ["82", "246"], ["85", "246"], ["85", "246"], ["85", "246"], ["153", "246"], ["159", "246"], ["157", "246"], ["162", "246"], ["162", "246"], ["239", "246"], ["239", "246"], ["242", "246"], ["242", "246"], ["171", "246"], ["171", "246"], ["171", "246"], ["177", "246"], ["179", "246"], ["179", "246"], ["177", "246"], ["177", "246"], ["183", "246"], ["183", "246"], ["188", "246"], ["191", "246"], ["191", "246"], ["191", "246"], ["198", "246"], ["198", "246"], ["198", "246"], ["215", "246"], ["215", "246"], ["214", "246"], ["214", "246"], ["214", "246"], ["230", "246"], ["230", "246"], ["237", "246"], ["92", "246"], ["95", "246"], ["94", "246"], ["92", "246"], ["92", "246"], ["105", "246"], ["104", "246"], ["98", "246"], ["98", "246"], ["117", "246"], ["117", "246"], ["111", "246"], ["111", "246"], ["124", "246"], ["122", "246"], ["122", "246"], ["140", "246"], ["140", "246"], ["139", "246"], ["139", "246"], ["137", "246"], ["137", "246"], ["88", "246"], ["194", "246"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["65", "63"], ["65", "63"], ["73", "71"], ["73", "71"], ["23", "76"], ["23", "153"], ["159", "157"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["76", "79"], ["23", "79"], ["23", "82"], ["43", "239"], ["23", "239"], ["153", "239"], ["237", "239"], ["239", "242"], ["23", "242"], ["23", "31"], ["23", "39"], ["51", "50"], ["23", "50"], ["23", "57"], ["48", "57"], ["57", "65"], ["23", "65"], ["48", "65"], ["55", "73"], ["23", "73"], ["82", "85"], ["88", "85"], ["23", "85"], ["73", "85"], ["85", "88"], ["23", "88"], ["94", "92"], ["94", "92"], ["104", "98"], ["104", "98"], ["117", "111"], ["117", "111"], ["79", "159"], ["137", "159"], ["23", "159"], ["157", "162"], ["168", "162"], ["23", "162"], ["168", "166"], ["173", "171"], ["173", "171"], ["173", "177"], ["23", "177"], ["173", "177"], ["23", "183"], ["31", "34"], ["23", "34"], ["29", "51"], ["23", "51"], ["79", "122"], ["137", "122"], ["23", "122"], ["124", "122"], ["124", "122"], ["122", "137"], ["23", "137"], ["125", "137"], ["125", "137"], ["124", "137"], ["23", "188"], ["23", "235"], ["95", "94"], ["23", "94"], ["105", "104"], ["105", "104"], ["23", "104"], ["105", "117"], ["23", "117"], ["92", "117"], ["125", "124"], ["125", "124"], ["63", "124"], ["23", "124"], ["125", "139"], ["125", "139"], ["124", "139"], ["23", "139"], ["162", "168"], ["23", "168"], ["166", "173"], ["23", "173"], ["63", "173"], ["124", "173"], ["173", "179"], ["23", "179"], ["173", "179"], ["188", "191"], ["194", "191"], ["23", "191"], ["85", "191"], ["51", "95"], ["23", "95"], ["65", "105"], ["117", "105"], ["23", "105"], ["92", "105"], ["98", "125"], ["111", "125"], ["125", "140"], ["125", "140"], ["153", "237"], ["23", "237"], ["215", "198"], ["125", "198"], ["215", "198"], ["125", "198"], ["171", "198"], ["23", "198"], ["215", "199"], ["125", "199"], ["215", "199"], ["125", "199"], ["215", "214"], ["215", "214"], ["177", "214"], ["23", "214"], ["125", "215"], ["125", "215"], ["23", "230"], ["85", "107"], ["85", "94"], ["85", "98"], ["85", "113"], ["85", "146"], ["85", "131"], ["85", "85"], ["85", "132"], ["85", "104"], ["85", "119"], ["85", "95"], ["85", "92"], ["85", "112"], ["85", "137"], ["85", "100"], ["85", "88"], ["85", "127"], ["85", "139"], ["85", "111"], ["85", "141"], ["85", "122"], ["85", "99"], ["85", "142"], ["85", "140"], ["85", "126"], ["85", "105"], ["85", "147"], ["85", "117"], ["85", "124"], ["85", "125"], ["162", "188"], ["162", "179"], ["162", "162"], ["162", "168"], ["162", "191"], ["162", "173"], ["162", "171"], ["162", "183"], ["162", "235"], ["162", "166"], ["162", "177"], ["191", "214"], ["191", "230"], ["191", "215"], ["191", "198"], ["191", "206"], ["191", "221"], ["191", "201"], ["191", "205"], ["191", "200"], ["191", "217"], ["191", "199"], ["191", "216"], ["191", "222"], ["235", "237"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(LOCAL,String[] line: java.lang.String[])<SUB>5</SUB>>", "49": "<(IDENTIFIER,line,String[] line = split(&quot; &quot;))<SUB>5</SUB>>", "51": "<(readLine,readLine())<SUB>5</SUB>>", "53": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int n = Integer.valueOf(line[0]))<SUB>6</SUB>>", "57": "<(valueOf,Integer.valueOf(line[0]))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,line[0])<SUB>6</SUB>>", "61": "<(LITERAL,0,Integer.valueOf(line[0]))<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int ht = Integer.valueOf(line[1]))<SUB>7</SUB>>", "65": "<(valueOf,Integer.valueOf(line[1]))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,line[1])<SUB>7</SUB>>", "69": "<(LITERAL,1,Integer.valueOf(line[1]))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,int[][] house = new int[n][2])<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[n][2])>", "75": "<(LITERAL,2,new int[n][2])<SUB>9</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY candidates = new HashSet&lt;Integer&gt;())<SUB>10</SUB>>", "78": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>10</SUB>>", "7": "<(IDENTIFIER,candidates,new HashSet&lt;Integer&gt;())<SUB>10</SUB>>", "81": "<(LOCAL,int i: int)<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "87": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "91": "<(LOCAL,String[] data: java.lang.String[])<SUB>12</SUB>>", "93": "<(IDENTIFIER,data,String[] data = split(&quot; &quot;))<SUB>12</SUB>>", "95": "<(readLine,readLine())<SUB>12</SUB>>", "97": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,house[i][0])<SUB>13</SUB>>", "101": "<(IDENTIFIER,house,house[i][0] = Integer.valueOf(data[0]) * 2)<SUB>13</SUB>>", "103": "<(LITERAL,0,house[i][0] = Integer.valueOf(data[0]) * 2)<SUB>13</SUB>>", "105": "<(valueOf,Integer.valueOf(data[0]))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,data[0])<SUB>13</SUB>>", "109": "<(LITERAL,0,Integer.valueOf(data[0]))<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,house[i][1] = Integer.valueOf(data[1]))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,house[i])<SUB>14</SUB>>", "115": "<(IDENTIFIER,i,house[i][1] = Integer.valueOf(data[1]))<SUB>14</SUB>>", "117": "<(valueOf,Integer.valueOf(data[1]))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,data[1])<SUB>14</SUB>>", "121": "<(LITERAL,1,Integer.valueOf(data[1]))<SUB>14</SUB>>", "123": "<(IDENTIFIER,candidates,add(house[i][0] - house[i][1] - ht))<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.subtraction,house[i][0] - house[i][1])<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,house[i])<SUB>15</SUB>>", "129": "<(IDENTIFIER,i,house[i][0] - house[i][1])<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,house[i][1])<SUB>15</SUB>>", "133": "<(IDENTIFIER,house,house[i][0] - house[i][1])<SUB>15</SUB>>", "135": "<(LITERAL,1,house[i][0] - house[i][1])<SUB>15</SUB>>", "137": "<(add,add(house[i][0] + house[i][1] + ht))<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.addition,house[i][0] + house[i][1] + ht)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,house[i][0])<SUB>16</SUB>>", "143": "<(IDENTIFIER,house,house[i][0] + house[i][1])<SUB>16</SUB>>", "145": "<(LITERAL,0,house[i][0] + house[i][1])<SUB>16</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,house[i])<SUB>16</SUB>>", "149": "<(IDENTIFIER,i,house[i][0] + house[i][1])<SUB>16</SUB>>", "151": "<(IDENTIFIER,ht,house[i][0] + house[i][1] + ht)<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>19</SUB>>", "155": "<(LITERAL,0,int ans = 0)<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.assignment,)<SUB>20</SUB>>", "159": "<(iterator,&lt;empty&gt;)<SUB>20</SUB>>", "161": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>20</SUB>>", "163": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "165": "<(LOCAL,p: int)<SUB>20</SUB>>", "167": "<(IDENTIFIER,p,&lt;empty&gt;)>", "169": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "171": "<(&lt;operator&gt;.assignment,int f = p - ht)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.subtraction,p - ht)<SUB>21</SUB>>", "175": "<(IDENTIFIER,ht,p - ht)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.assignment,int t = p + ht)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.addition,p + ht)<SUB>22</SUB>>", "181": "<(IDENTIFIER,ht,p + ht)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.assignment,boolean isok = true)<SUB>23</SUB>>", "185": "<(LITERAL,true,boolean isok = true)<SUB>23</SUB>>", "187": "<(LOCAL,int i: int)<SUB>24</SUB>>", "189": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>24</SUB>>", "193": "<(IDENTIFIER,n,i &lt; n)<SUB>24</SUB>>", "195": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "197": "<(CONTROL_STRUCTURE,if (house[i][0] + house[i][1] &lt;= f),if (house[i][0] + house[i][1] &lt;= f))<SUB>25</SUB>>", "199": "<(&lt;operator&gt;.addition,house[i][0] + house[i][1])<SUB>25</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,house[i])<SUB>25</SUB>>", "203": "<(IDENTIFIER,i,house[i][0] + house[i][1])<SUB>25</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,house[i][1])<SUB>25</SUB>>", "207": "<(IDENTIFIER,house,house[i][0] + house[i][1])<SUB>25</SUB>>", "209": "<(LITERAL,1,house[i][0] + house[i][1])<SUB>25</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "213": "<(CONTROL_STRUCTURE,if (house[i][0] - house[i][1] &gt;= t),if (house[i][0] - house[i][1] &gt;= t))<SUB>26</SUB>>", "215": "<(&lt;operator&gt;.subtraction,house[i][0] - house[i][1])<SUB>26</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,house[i])<SUB>26</SUB>>", "219": "<(IDENTIFIER,i,house[i][0] - house[i][1])<SUB>26</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,house[i][1])<SUB>26</SUB>>", "223": "<(IDENTIFIER,house,house[i][0] - house[i][1])<SUB>26</SUB>>", "225": "<(LITERAL,1,house[i][0] - house[i][1])<SUB>26</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "231": "<(IDENTIFIER,isok,isok = false)<SUB>28</SUB>>", "233": "<(CONTROL_STRUCTURE,break;,break;)<SUB>29</SUB>>", "235": "<(IDENTIFIER,isok,if (isok))<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>33</SUB>>", "239": "<(println,println(ans))<SUB>38</SUB>>", "241": "<(IDENTIFIER,ans,println(ans))<SUB>38</SUB>>", "243": "<(IDENTIFIER,out,flush())<SUB>39</SUB>>", "245": "<(MODIFIER,STATIC)>"}}