{"edges": [["21", "22"], ["21", "23"], ["21", "532"], ["21", "533"], ["21", "534"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "40"], ["23", "43"], ["23", "44"], ["23", "47"], ["23", "48"], ["23", "51"], ["23", "57"], ["23", "64"], ["23", "71"], ["23", "77"], ["23", "78"], ["23", "84"], ["23", "85"], ["23", "91"], ["23", "92"], ["23", "98"], ["23", "103"], ["23", "104"], ["23", "110"], ["23", "115"], ["23", "120"], ["23", "155"], ["23", "156"], ["23", "165"], ["23", "230"], ["23", "235"], ["23", "401"], ["23", "402"], ["23", "409"], ["23", "6"], ["23", "416"], ["23", "419"], ["23", "420"], ["23", "423"], ["23", "424"], ["23", "427"], ["23", "510"], ["23", "516"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "56"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "101"], ["101", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "137"], ["130", "146"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "136"], ["134", "135"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["165", "170"], ["165", "173"], ["165", "175"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["175", "176"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "184"], ["176", "186"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "215"], ["200", "201"], ["200", "208"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "223"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["235", "237"], ["235", "240"], ["235", "245"], ["235", "247"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["248", "249"], ["248", "255"], ["248", "256"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["256", "257"], ["257", "258"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "266"], ["258", "268"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["268", "269"], ["269", "270"], ["269", "277"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["277", "278"], ["277", "279"], ["277", "286"], ["277", "287"], ["277", "300"], ["277", "324"], ["277", "400"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "299"], ["296", "297"], ["296", "298"], ["300", "301"], ["300", "313"], ["301", "302"], ["301", "308"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["306", "307"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "319"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["324", "325"], ["324", "326"], ["324", "329"], ["324", "332"], ["324", "334"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "331"], ["332", "333"], ["334", "335"], ["335", "336"], ["335", "343"], ["336", "337"], ["336", "342"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["343", "344"], ["343", "345"], ["343", "352"], ["343", "353"], ["343", "376"], ["345", "346"], ["345", "347"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["353", "354"], ["353", "355"], ["355", "356"], ["355", "371"], ["356", "357"], ["356", "366"], ["357", "358"], ["357", "361"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["366", "367"], ["366", "370"], ["367", "368"], ["367", "369"], ["371", "372"], ["371", "375"], ["372", "373"], ["372", "374"], ["376", "377"], ["376", "389"], ["377", "378"], ["377", "384"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["382", "383"], ["384", "385"], ["384", "386"], ["386", "387"], ["386", "388"], ["389", "390"], ["389", "395"], ["390", "391"], ["390", "394"], ["391", "392"], ["391", "393"], ["395", "396"], ["395", "399"], ["396", "397"], ["396", "398"], ["402", "403"], ["402", "404"], ["404", "405"], ["404", "408"], ["405", "406"], ["405", "407"], ["409", "410"], ["409", "413"], ["410", "411"], ["410", "412"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "418"], ["419", "5"], ["420", "421"], ["420", "422"], ["424", "425"], ["424", "426"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["431", "432"], ["431", "433"], ["431", "440"], ["431", "441"], ["431", "445"], ["431", "446"], ["431", "450"], ["431", "476"], ["431", "505"], ["433", "434"], ["433", "435"], ["435", "436"], ["435", "437"], ["437", "438"], ["437", "439"], ["441", "442"], ["441", "443"], ["443", "444"], ["446", "447"], ["446", "448"], ["448", "449"], ["450", "451"], ["450", "452"], ["450", "455"], ["450", "458"], ["450", "460"], ["452", "453"], ["452", "454"], ["455", "456"], ["455", "457"], ["458", "459"], ["460", "461"], ["461", "462"], ["461", "469"], ["462", "463"], ["462", "468"], ["463", "464"], ["463", "467"], ["464", "465"], ["464", "466"], ["469", "470"], ["469", "473"], ["470", "471"], ["470", "472"], ["473", "474"], ["473", "475"], ["476", "477"], ["476", "481"], ["476", "495"], ["477", "478"], ["477", "479"], ["479", "480"], ["481", "482"], ["481", "487"], ["481", "492"], ["482", "483"], ["482", "484"], ["484", "485"], ["484", "486"], ["487", "488"], ["487", "489"], ["489", "490"], ["489", "491"], ["492", "493"], ["492", "494"], ["495", "496"], ["496", "497"], ["496", "502"], ["497", "498"], ["497", "499"], ["499", "500"], ["499", "501"], ["502", "503"], ["502", "504"], ["505", "506"], ["505", "507"], ["507", "508"], ["507", "509"], ["510", "511"], ["510", "514"], ["511", "512"], ["511", "513"], ["514", "515"], ["516", "517"], ["516", "520"], ["517", "518"], ["518", "519"], ["520", "521"], ["520", "526"], ["521", "522"], ["521", "525"], ["522", "523"], ["522", "524"], ["526", "527"], ["526", "530"], ["527", "528"], ["527", "529"], ["530", "531"], ["24", "31"], ["27", "40"], ["40", "44"], ["44", "48"], ["48", "54"], ["51", "61"], ["57", "68"], ["64", "75"], ["71", "81"], ["78", "88"], ["85", "95"], ["92", "101"], ["98", "107"], ["104", "111"], ["110", "116"], ["115", "122"], ["156", "167"], ["230", "237"], ["402", "412"], ["409", "418"], ["416", "419"], ["419", "420"], ["420", "424"], ["424", "428"], ["510", "518"], ["26", "24"], ["53", "51"], ["59", "57"], ["66", "64"], ["73", "71"], ["80", "78"], ["87", "85"], ["94", "92"], ["101", "98"], ["106", "104"], ["111", "110"], ["116", "115"], ["122", "125"], ["125", "134"], ["125", "159"], ["128", "125"], ["158", "156"], ["167", "170"], ["170", "178"], ["170", "231"], ["173", "170"], ["231", "230"], ["237", "242"], ["240", "250"], ["240", "405"], ["245", "242"], ["404", "402"], ["410", "413"], ["413", "409"], ["418", "416"], ["428", "437"], ["428", "513"], ["511", "514"], ["514", "510"], ["517", "534"], ["517", "524"], ["29", "36"], ["32", "27"], ["54", "53"], ["61", "59"], ["68", "66"], ["75", "73"], ["81", "80"], ["88", "87"], ["95", "94"], ["107", "106"], ["131", "138"], ["137", "147"], ["146", "128"], ["159", "162"], ["162", "158"], ["242", "240"], ["405", "404"], ["412", "410"], ["433", "443"], ["441", "448"], ["446", "452"], ["505", "428"], ["513", "511"], ["518", "517"], ["521", "529"], ["526", "518"], ["31", "29"], ["34", "32"], ["133", "131"], ["138", "143"], ["141", "137"], ["147", "152"], ["150", "146"], ["178", "181"], ["181", "189"], ["181", "173"], ["184", "181"], ["249", "260"], ["435", "433"], ["443", "441"], ["448", "446"], ["452", "455"], ["455", "464"], ["455", "479"], ["458", "455"], ["477", "484"], ["477", "499"], ["507", "505"], ["522", "521"], ["527", "530"], ["530", "526"], ["36", "34"], ["134", "133"], ["143", "141"], ["152", "150"], ["187", "184"], ["250", "253"], ["253", "249"], ["437", "435"], ["479", "477"], ["482", "489"], ["487", "492"], ["492", "507"], ["524", "522"], ["529", "527"], ["188", "195"], ["193", "187"], ["462", "470"], ["462", "458"], ["484", "482"], ["489", "487"], ["497", "502"], ["502", "507"], ["189", "188"], ["194", "202"], ["199", "193"], ["260", "263"], ["263", "272"], ["263", "245"], ["266", "263"], ["463", "462"], ["470", "473"], ["473", "458"], ["499", "497"], ["195", "194"], ["200", "217"], ["215", "199"], ["464", "463"], ["201", "209"], ["208", "200"], ["216", "224"], ["223", "215"], ["270", "282"], ["270", "266"], ["202", "205"], ["205", "201"], ["209", "212"], ["212", "208"], ["217", "220"], ["220", "216"], ["224", "227"], ["227", "223"], ["271", "270"], ["279", "290"], ["287", "303"], ["272", "271"], ["281", "279"], ["289", "287"], ["301", "315"], ["301", "326"], ["326", "329"], ["329", "338"], ["329", "245"], ["332", "329"], ["282", "281"], ["290", "296"], ["293", "289"], ["302", "301"], ["302", "310"], ["308", "301"], ["314", "320"], ["319", "326"], ["295", "293"], ["303", "306"], ["306", "302"], ["310", "308"], ["315", "314"], ["320", "319"], ["336", "348"], ["336", "332"], ["296", "295"], ["337", "336"], ["345", "358"], ["353", "379"], ["338", "337"], ["347", "345"], ["355", "353"], ["377", "391"], ["377", "332"], ["348", "347"], ["356", "372"], ["371", "355"], ["378", "377"], ["378", "386"], ["384", "377"], ["390", "396"], ["395", "332"], ["357", "367"], ["366", "356"], ["372", "371"], ["379", "382"], ["382", "378"], ["386", "384"], ["391", "390"], ["396", "395"], ["358", "362"], ["361", "357"], ["367", "366"], ["362", "361"], ["21", "26"], ["22", "534"], ["24", "534"], ["29", "534"], ["32", "534"], ["32", "534"], ["32", "534"], ["27", "534"], ["40", "534"], ["44", "534"], ["48", "534"], ["51", "534"], ["51", "534"], ["51", "534"], ["59", "534"], ["57", "534"], ["57", "534"], ["66", "534"], ["64", "534"], ["64", "534"], ["73", "534"], ["75", "534"], ["73", "534"], ["71", "534"], ["71", "534"], ["78", "534"], ["78", "534"], ["85", "534"], ["85", "534"], ["85", "534"], ["92", "534"], ["98", "534"], ["98", "534"], ["98", "534"], ["104", "534"], ["104", "534"], ["104", "534"], ["110", "534"], ["110", "534"], ["110", "534"], ["115", "534"], ["115", "534"], ["115", "534"], ["125", "534"], ["156", "534"], ["158", "534"], ["156", "534"], ["156", "534"], ["170", "534"], ["230", "534"], ["230", "534"], ["237", "534"], ["240", "534"], ["240", "534"], ["405", "534"], ["404", "534"], ["402", "534"], ["402", "534"], ["409", "534"], ["409", "534"], ["416", "534"], ["419", "534"], ["420", "534"], ["424", "534"], ["424", "534"], ["428", "534"], ["428", "534"], ["510", "534"], ["510", "534"], ["510", "534"], ["518", "534"], ["517", "534"], ["517", "534"], ["526", "534"], ["526", "534"], ["526", "534"], ["505", "534"], ["505", "534"], ["245", "534"], ["173", "534"], ["128", "534"], ["98", "534"], ["21", "22"], ["21", "24"], ["21", "40"], ["21", "44"], ["21", "48"], ["53", "51"], ["53", "51"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["73", "71"], ["73", "71"], ["80", "78"], ["87", "85"], ["94", "92"], ["106", "104"], ["57", "110"], ["21", "110"], ["64", "115"], ["21", "115"], ["158", "156"], ["21", "230"], ["404", "402"], ["404", "402"], ["21", "416"], ["402", "424"], ["21", "424"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "98"], ["92", "98"], ["101", "98"], ["21", "122"], ["21", "167"], ["21", "237"], ["98", "409"], ["416", "419"], ["21", "419"], ["419", "420"], ["21", "420"], ["409", "510"], ["514", "510"], ["21", "29"], ["21", "37"], ["54", "53"], ["21", "53"], ["21", "59"], ["51", "59"], ["59", "66"], ["21", "66"], ["51", "66"], ["66", "73"], ["21", "73"], ["75", "73"], ["71", "80"], ["21", "80"], ["21", "87"], ["71", "87"], ["95", "94"], ["95", "94"], ["21", "101"], ["107", "106"], ["107", "106"], ["122", "125"], ["128", "125"], ["21", "125"], ["107", "125"], ["125", "128"], ["21", "128"], ["133", "131"], ["133", "131"], ["141", "137"], ["141", "137"], ["150", "146"], ["150", "146"], ["125", "158"], ["21", "158"], ["167", "170"], ["173", "170"], ["21", "170"], ["181", "170"], ["125", "170"], ["170", "173"], ["21", "173"], ["237", "240"], ["245", "240"], ["21", "240"], ["242", "240"], ["242", "240"], ["240", "245"], ["271", "245"], ["281", "245"], ["21", "245"], ["405", "404"], ["405", "404"], ["21", "404"], ["424", "428"], ["505", "428"], ["21", "428"], ["435", "433"], ["435", "433"], ["443", "441"], ["448", "446"], ["104", "505"], ["435", "505"], ["420", "514"], ["502", "514"], ["492", "514"], ["21", "514"], ["518", "517"], ["29", "32"], ["21", "32"], ["27", "54"], ["21", "54"], ["54", "75"], ["21", "75"], ["71", "81"], ["21", "81"], ["21", "88"], ["71", "88"], ["21", "95"], ["71", "95"], ["21", "107"], ["95", "107"], ["125", "159"], ["21", "159"], ["21", "162"], ["125", "162"], ["21", "178"], ["21", "242"], ["170", "242"], ["263", "242"], ["329", "242"], ["21", "405"], ["242", "405"], ["21", "452"], ["514", "518"], ["530", "518"], ["21", "518"], ["510", "521"], ["526", "521"], ["21", "521"], ["521", "526"], ["530", "526"], ["134", "133"], ["21", "133"], ["73", "141"], ["150", "141"], ["21", "141"], ["59", "141"], ["131", "141"], ["141", "150"], ["21", "150"], ["66", "150"], ["131", "150"], ["178", "181"], ["184", "181"], ["21", "181"], ["170", "181"], ["181", "184"], ["21", "184"], ["193", "187"], ["200", "187"], ["215", "187"], ["98", "249"], ["253", "249"], ["428", "435"], ["21", "435"], ["104", "435"], ["319", "435"], ["21", "443"], ["21", "448"], ["452", "455"], ["458", "455"], ["21", "455"], ["405", "455"], ["464", "458"], ["21", "458"], ["446", "477"], ["470", "477"], ["21", "477"], ["479", "477"], ["518", "530"], ["21", "530"], ["75", "134"], ["21", "134"], ["21", "253"], ["21", "479"], ["420", "482"], ["502", "482"], ["492", "482"], ["21", "482"], ["441", "482"], ["473", "482"], ["482", "487"], ["21", "487"], ["477", "487"], ["487", "492"], ["21", "492"], ["200", "193"], ["215", "193"], ["21", "260"], ["463", "462"], ["463", "462"], ["21", "462"], ["441", "470"], ["473", "470"], ["21", "470"], ["464", "473"], ["21", "473"], ["441", "484"], ["473", "484"], ["21", "484"], ["477", "489"], ["21", "489"], ["420", "497"], ["502", "497"], ["492", "497"], ["21", "497"], ["441", "497"], ["473", "497"], ["497", "502"], ["21", "502"], ["200", "199"], ["215", "199"], ["260", "263"], ["266", "263"], ["21", "263"], ["242", "263"], ["272", "266"], ["21", "266"], ["464", "463"], ["464", "463"], ["433", "463"], ["21", "463"], ["441", "499"], ["473", "499"], ["21", "499"], ["201", "200"], ["201", "200"], ["208", "200"], ["208", "200"], ["216", "215"], ["216", "215"], ["223", "215"], ["223", "215"], ["21", "464"], ["455", "464"], ["78", "201"], ["208", "201"], ["137", "201"], ["208", "201"], ["78", "208"], ["201", "208"], ["201", "208"], ["85", "216"], ["223", "216"], ["146", "216"], ["223", "216"], ["85", "223"], ["216", "223"], ["216", "223"], ["271", "270"], ["271", "270"], ["21", "270"], ["281", "279"], ["281", "279"], ["98", "287"], ["249", "287"], ["293", "287"], ["293", "287"], ["272", "271"], ["272", "271"], ["240", "271"], ["21", "271"], ["21", "326"], ["21", "272"], ["263", "272"], ["282", "281"], ["282", "281"], ["271", "281"], ["21", "281"], ["98", "289"], ["249", "289"], ["293", "289"], ["293", "289"], ["302", "301"], ["302", "301"], ["308", "301"], ["308", "301"], ["287", "314"], ["308", "314"], ["21", "314"], ["281", "319"], ["21", "319"], ["326", "329"], ["332", "329"], ["21", "329"], ["263", "329"], ["338", "332"], ["348", "332"], ["21", "332"], ["21", "282"], ["272", "282"], ["21", "293"], ["98", "302"], ["308", "302"], ["314", "302"], ["306", "302"], ["287", "308"], ["21", "308"], ["98", "308"], ["302", "308"], ["21", "306"], ["337", "336"], ["337", "336"], ["21", "336"], ["347", "345"], ["347", "345"], ["98", "353"], ["249", "353"], ["293", "353"], ["338", "337"], ["338", "337"], ["279", "337"], ["347", "337"], ["21", "337"], ["21", "338"], ["329", "338"], ["348", "347"], ["348", "347"], ["337", "347"], ["21", "347"], ["98", "355"], ["249", "355"], ["293", "355"], ["378", "377"], ["378", "377"], ["384", "377"], ["384", "377"], ["353", "390"], ["384", "390"], ["21", "390"], ["281", "395"], ["21", "395"], ["21", "348"], ["338", "348"], ["98", "356"], ["249", "356"], ["293", "356"], ["98", "378"], ["384", "378"], ["390", "378"], ["382", "378"], ["353", "384"], ["21", "384"], ["98", "384"], ["378", "384"], ["98", "357"], ["249", "357"], ["293", "357"], ["21", "382"], ["125", "146"], ["125", "128"], ["125", "150"], ["125", "134"], ["125", "138"], ["125", "152"], ["125", "141"], ["125", "147"], ["125", "133"], ["125", "131"], ["125", "137"], ["125", "143"], ["125", "125"], ["170", "170"], ["170", "181"], ["170", "178"], ["170", "173"], ["240", "240"], ["240", "242"], ["240", "249"], ["240", "260"], ["240", "253"], ["240", "245"], ["240", "263"], ["240", "250"], ["428", "428"], ["428", "435"], ["428", "505"], ["428", "452"], ["428", "437"], ["428", "446"], ["428", "479"], ["428", "448"], ["428", "441"], ["428", "507"], ["428", "433"], ["428", "477"], ["428", "443"], ["428", "455"], ["517", "522"], ["517", "524"], ["517", "518"], ["517", "517"], ["517", "530"], ["517", "527"], ["517", "529"], ["517", "521"], ["517", "526"], ["181", "188"], ["181", "215"], ["181", "209"], ["181", "181"], ["181", "208"], ["181", "195"], ["181", "184"], ["181", "194"], ["181", "224"], ["181", "202"], ["181", "201"], ["181", "200"], ["181", "217"], ["181", "199"], ["181", "216"], ["181", "227"], ["181", "189"], ["181", "223"], ["181", "187"], ["181", "212"], ["181", "205"], ["181", "193"], ["181", "220"], ["455", "464"], ["455", "462"], ["455", "455"], ["455", "458"], ["455", "463"], ["477", "484"], ["477", "492"], ["477", "499"], ["477", "489"], ["477", "497"], ["477", "502"], ["477", "487"], ["477", "482"], ["462", "470"], ["462", "473"], ["263", "272"], ["263", "270"], ["263", "271"], ["270", "290"], ["270", "326"], ["270", "302"], ["270", "281"], ["270", "306"], ["270", "296"], ["270", "329"], ["270", "282"], ["270", "279"], ["270", "301"], ["270", "289"], ["270", "293"], ["270", "295"], ["270", "287"], ["270", "263"], ["270", "303"], ["270", "266"], ["301", "315"], ["301", "319"], ["301", "320"], ["301", "314"], ["329", "338"], ["329", "336"], ["329", "329"], ["329", "337"], ["329", "332"], ["302", "308"], ["302", "310"], ["336", "358"], ["336", "356"], ["336", "378"], ["336", "362"], ["336", "382"], ["336", "355"], ["336", "348"], ["336", "347"], ["336", "372"], ["336", "357"], ["336", "366"], ["336", "377"], ["336", "379"], ["336", "353"], ["336", "361"], ["336", "367"], ["336", "371"], ["336", "345"], ["377", "396"], ["377", "390"], ["377", "395"], ["377", "391"], ["378", "384"], ["378", "386"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(LOCAL,int objectNum: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,objectNum,int objectNum = 0)<SUB>4</SUB>>", "43": "<(LOCAL,int xStart: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,xStart,int xStart = 0)<SUB>5</SUB>>", "47": "<(LOCAL,int yStart: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,yStart,int yStart = 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,parsedString = split(&quot; &quot;))<SUB>8</SUB>>", "53": "<(split,split(&quot; &quot;))<SUB>8</SUB>>", "55": "<(IDENTIFIER,in,readLine())<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,xStart = Integer.parseInt(parsedString[0]))<SUB>9</SUB>>", "59": "<(parseInt,Integer.parseInt(parsedString[0]))<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,parsedString[0])<SUB>9</SUB>>", "63": "<(LITERAL,0,Integer.parseInt(parsedString[0]))<SUB>9</SUB>>", "65": "<(IDENTIFIER,yStart,yStart = Integer.parseInt(parsedString[1]))<SUB>10</SUB>>", "67": "<(IDENTIFIER,Integer,Integer.parseInt(parsedString[1]))<SUB>10</SUB>>", "69": "<(IDENTIFIER,parsedString,Integer.parseInt(parsedString[1]))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,objectNum = parseInt(in.readLine()))<SUB>11</SUB>>", "73": "<(parseInt,parseInt(in.readLine()))<SUB>11</SUB>>", "75": "<(readLine,readLine())<SUB>11</SUB>>", "77": "<(LOCAL,int[] xLocs: int[])<SUB>13</SUB>>", "79": "<(IDENTIFIER,xLocs,int[] xLocs = new int[objectNum + 1])<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.addition,objectNum + 1)<SUB>13</SUB>>", "83": "<(LITERAL,1,objectNum + 1)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.assignment,int[] yLocs = new int[objectNum + 1])<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.alloc,new int[objectNum + 1])>", "89": "<(IDENTIFIER,objectNum,objectNum + 1)<SUB>14</SUB>>", "91": "<(LOCAL,int[] bitMasks: int[])<SUB>15</SUB>>", "93": "<(IDENTIFIER,bitMasks,int[] bitMasks = new int[1 &lt;&lt; objectNum])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; objectNum)<SUB>15</SUB>>", "97": "<(IDENTIFIER,objectNum,1 &lt;&lt; objectNum)<SUB>15</SUB>>", "99": "<(IDENTIFIER,Arrays,fill(bitMasks, -1))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "103": "<(LOCAL,int[] previous: int[])<SUB>17</SUB>>", "105": "<(IDENTIFIER,previous,int[] previous = new int[1 &lt;&lt; objectNum])<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; objectNum)<SUB>17</SUB>>", "109": "<(IDENTIFIER,objectNum,1 &lt;&lt; objectNum)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,xLocs[objectNum])<SUB>19</SUB>>", "113": "<(IDENTIFIER,objectNum,xLocs[objectNum] = xStart)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.assignment,yLocs[objectNum] = yStart)<SUB>20</SUB>>", "117": "<(IDENTIFIER,yLocs,yLocs[objectNum] = yStart)<SUB>20</SUB>>", "119": "<(IDENTIFIER,yStart,yLocs[objectNum] = yStart)<SUB>20</SUB>>", "121": "<(LOCAL,int i: int)<SUB>21</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; objectNum)<SUB>21</SUB>>", "127": "<(IDENTIFIER,objectNum,i &lt; objectNum)<SUB>21</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.assignment,parsedString = split(&quot; &quot;))<SUB>22</SUB>>", "133": "<(split,split(&quot; &quot;))<SUB>22</SUB>>", "135": "<(IDENTIFIER,in,readLine())<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.assignment,xLocs[i] = Integer.parseInt(parsedString[0]))<SUB>23</SUB>>", "139": "<(IDENTIFIER,xLocs,xLocs[i] = Integer.parseInt(parsedString[0]))<SUB>23</SUB>>", "141": "<(parseInt,Integer.parseInt(parsedString[0]))<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,parsedString[0])<SUB>23</SUB>>", "145": "<(LITERAL,0,Integer.parseInt(parsedString[0]))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,yLocs[i])<SUB>24</SUB>>", "149": "<(IDENTIFIER,i,yLocs[i] = Integer.parseInt(parsedString[1]))<SUB>24</SUB>>", "151": "<(IDENTIFIER,Integer,Integer.parseInt(parsedString[1]))<SUB>24</SUB>>", "153": "<(IDENTIFIER,parsedString,Integer.parseInt(parsedString[1]))<SUB>24</SUB>>", "155": "<(LOCAL,int[][] times: int[][])<SUB>29</SUB>>", "157": "<(IDENTIFIER,times,int[][] times = new int[objectNum + 1][objectNum + 1])<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.addition,objectNum + 1)<SUB>29</SUB>>", "161": "<(LITERAL,1,objectNum + 1)<SUB>29</SUB>>", "163": "<(IDENTIFIER,objectNum,objectNum + 1)<SUB>29</SUB>>", "165": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= objectNum); i++),for (int i = 0; Some(i &lt;= objectNum); i++))<SUB>30</SUB>>", "167": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "169": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "171": "<(IDENTIFIER,i,i &lt;= objectNum)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "177": "<(LOCAL,int j: int)<SUB>31</SUB>>", "179": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "181": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= objectNum)<SUB>31</SUB>>", "183": "<(IDENTIFIER,objectNum,j &lt;= objectNum)<SUB>31</SUB>>", "185": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "187": "<(&lt;operator&gt;.assignment,times[i][j] = times[j][i] = (xLocs[i] - xLocs[j]) * (xLocs[i] - xLocs[j]) + (yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,times[i])<SUB>32</SUB>>", "191": "<(IDENTIFIER,i,times[i][j] = times[j][i] = (xLocs[i] - xLocs[j]) * (xLocs[i] - xLocs[j]) + (yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "193": "<(&lt;operator&gt;.assignment,times[j][i] = (xLocs[i] - xLocs[j]) * (xLocs[i] - xLocs[j]) + (yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,times[j])<SUB>32</SUB>>", "197": "<(IDENTIFIER,j,times[j][i] = (xLocs[i] - xLocs[j]) * (xLocs[i] - xLocs[j]) + (yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "199": "<(&lt;operator&gt;.addition,(xLocs[i] - xLocs[j]) * (xLocs[i] - xLocs[j]) + (yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "201": "<(&lt;operator&gt;.subtraction,xLocs[i] - xLocs[j])<SUB>32</SUB>>", "203": "<(IDENTIFIER,xLocs,xLocs[i] - xLocs[j])<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,xLocs[j])<SUB>32</SUB>>", "207": "<(IDENTIFIER,j,xLocs[i] - xLocs[j])<SUB>32</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,xLocs[i])<SUB>32</SUB>>", "211": "<(IDENTIFIER,i,xLocs[i] - xLocs[j])<SUB>32</SUB>>", "213": "<(IDENTIFIER,xLocs,xLocs[i] - xLocs[j])<SUB>32</SUB>>", "215": "<(&lt;operator&gt;.multiplication,(yLocs[i] - yLocs[j]) * (yLocs[i] - yLocs[j]))<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,yLocs[i])<SUB>32</SUB>>", "219": "<(IDENTIFIER,i,yLocs[i] - yLocs[j])<SUB>32</SUB>>", "221": "<(IDENTIFIER,yLocs,yLocs[i] - yLocs[j])<SUB>32</SUB>>", "223": "<(&lt;operator&gt;.subtraction,yLocs[i] - yLocs[j])<SUB>32</SUB>>", "225": "<(IDENTIFIER,yLocs,yLocs[i] - yLocs[j])<SUB>32</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,yLocs[j])<SUB>32</SUB>>", "229": "<(IDENTIFIER,j,yLocs[i] - yLocs[j])<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,bitMasks[0])<SUB>40</SUB>>", "233": "<(LITERAL,0,bitMasks[0] = 0)<SUB>40</SUB>>", "235": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (1 &lt;&lt; objectNum)); i++),for (int i = 0; Some(i &lt; (1 &lt;&lt; objectNum)); i++))<SUB>43</SUB>>", "237": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>43</SUB>>", "239": "<(LITERAL,0,int i = 0)<SUB>43</SUB>>", "241": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; objectNum))<SUB>43</SUB>>", "243": "<(LITERAL,1,1 &lt;&lt; objectNum)<SUB>43</SUB>>", "245": "<(&lt;operator&gt;.postIncrement,i++)<SUB>43</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "249": "<(&lt;operator&gt;.equals,bitMasks[i] == -1)<SUB>44</SUB>>", "251": "<(IDENTIFIER,bitMasks,bitMasks[i] == -1)<SUB>44</SUB>>", "253": "<(&lt;operator&gt;.minus,-1)<SUB>44</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "259": "<(LOCAL,int j: int)<SUB>47</SUB>>", "261": "<(IDENTIFIER,j,int j = 0)<SUB>47</SUB>>", "263": "<(&lt;operator&gt;.lessThan,j &lt; objectNum)<SUB>47</SUB>>", "265": "<(IDENTIFIER,objectNum,j &lt; objectNum)<SUB>47</SUB>>", "267": "<(IDENTIFIER,j,j++)<SUB>47</SUB>>", "269": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; i) == 0),if (((1 &lt;&lt; j) &amp; i) == 0))<SUB>48</SUB>>", "271": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; i)<SUB>48</SUB>>", "273": "<(LITERAL,1,1 &lt;&lt; j)<SUB>48</SUB>>", "275": "<(IDENTIFIER,i,(1 &lt;&lt; j) &amp; i)<SUB>48</SUB>>", "277": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "279": "<(&lt;operator&gt;.assignment,int curState = (1 &lt;&lt; j) | i)<SUB>49</SUB>>", "281": "<(&lt;operator&gt;.or,(1 &lt;&lt; j) | i)<SUB>49</SUB>>", "283": "<(LITERAL,1,1 &lt;&lt; j)<SUB>49</SUB>>", "285": "<(IDENTIFIER,i,(1 &lt;&lt; j) | i)<SUB>49</SUB>>", "287": "<(&lt;operator&gt;.assignment,int curTime = bitMasks[i] + 2 * times[objectNum][j])<SUB>50</SUB>>", "289": "<(&lt;operator&gt;.addition,bitMasks[i] + 2 * times[objectNum][j])<SUB>50</SUB>>", "291": "<(IDENTIFIER,bitMasks,bitMasks[i] + 2 * times[objectNum][j])<SUB>50</SUB>>", "293": "<(&lt;operator&gt;.multiplication,2 * times[objectNum][j])<SUB>50</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,times[objectNum][j])<SUB>50</SUB>>", "297": "<(IDENTIFIER,times,2 * times[objectNum][j])<SUB>50</SUB>>", "299": "<(IDENTIFIER,j,2 * times[objectNum][j])<SUB>50</SUB>>", "301": "<(&lt;operator&gt;.logicalOr,bitMasks[curState] == -1 || curTime &lt; bitMasks[curState])<SUB>52</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,bitMasks[curState])<SUB>52</SUB>>", "305": "<(IDENTIFIER,curState,bitMasks[curState] == -1)<SUB>52</SUB>>", "307": "<(LITERAL,1,-1)<SUB>52</SUB>>", "309": "<(IDENTIFIER,curTime,curTime &lt; bitMasks[curState])<SUB>52</SUB>>", "311": "<(IDENTIFIER,bitMasks,curTime &lt; bitMasks[curState])<SUB>52</SUB>>", "313": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,bitMasks[curState])<SUB>53</SUB>>", "317": "<(IDENTIFIER,curState,bitMasks[curState] = curTime)<SUB>53</SUB>>", "319": "<(&lt;operator&gt;.assignment,previous[curState] = i)<SUB>54</SUB>>", "321": "<(IDENTIFIER,previous,previous[curState] = i)<SUB>54</SUB>>", "323": "<(IDENTIFIER,i,previous[curState] = i)<SUB>54</SUB>>", "325": "<(LOCAL,int k: int)<SUB>58</SUB>>", "327": "<(IDENTIFIER,k,int k = 0)<SUB>58</SUB>>", "329": "<(&lt;operator&gt;.lessThan,k &lt; objectNum)<SUB>58</SUB>>", "331": "<(IDENTIFIER,objectNum,k &lt; objectNum)<SUB>58</SUB>>", "333": "<(IDENTIFIER,k,k++)<SUB>58</SUB>>", "335": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; k) &amp; curState) == 0),if (((1 &lt;&lt; k) &amp; curState) == 0))<SUB>59</SUB>>", "337": "<(&lt;operator&gt;.and,(1 &lt;&lt; k) &amp; curState)<SUB>59</SUB>>", "339": "<(LITERAL,1,1 &lt;&lt; k)<SUB>59</SUB>>", "341": "<(IDENTIFIER,curState,(1 &lt;&lt; k) &amp; curState)<SUB>59</SUB>>", "343": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "345": "<(&lt;operator&gt;.assignment,int kState = (1 &lt;&lt; k) | curState)<SUB>60</SUB>>", "347": "<(&lt;operator&gt;.or,(1 &lt;&lt; k) | curState)<SUB>60</SUB>>", "349": "<(LITERAL,1,1 &lt;&lt; k)<SUB>60</SUB>>", "351": "<(IDENTIFIER,curState,(1 &lt;&lt; k) | curState)<SUB>60</SUB>>", "353": "<(&lt;operator&gt;.assignment,int kTime = bitMasks[i] + times[objectNum][j] + times[j][k] + times[k][objectNum])<SUB>62</SUB>>", "355": "<(&lt;operator&gt;.addition,bitMasks[i] + times[objectNum][j] + times[j][k] + times[k][objectNum])<SUB>62</SUB>>", "357": "<(&lt;operator&gt;.addition,bitMasks[i] + times[objectNum][j])<SUB>62</SUB>>", "359": "<(IDENTIFIER,bitMasks,bitMasks[i] + times[objectNum][j])<SUB>62</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,times[objectNum][j])<SUB>62</SUB>>", "363": "<(IDENTIFIER,times,bitMasks[i] + times[objectNum][j])<SUB>62</SUB>>", "365": "<(IDENTIFIER,j,bitMasks[i] + times[objectNum][j])<SUB>62</SUB>>", "367": "<(&lt;operator&gt;.indexAccess,times[j])<SUB>62</SUB>>", "369": "<(IDENTIFIER,j,bitMasks[i] + times[objectNum][j] + times[j][k])<SUB>62</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,times[k][objectNum])<SUB>62</SUB>>", "373": "<(IDENTIFIER,times,bitMasks[i] + times[objectNum][j] + times[j][k] + times[k][objectNum])<SUB>62</SUB>>", "375": "<(IDENTIFIER,objectNum,bitMasks[i] + times[objectNum][j] + times[j][k] + times[k][objectNum])<SUB>62</SUB>>", "377": "<(&lt;operator&gt;.logicalOr,bitMasks[kState] == -1 || kTime &lt; bitMasks[kState])<SUB>64</SUB>>", "379": "<(&lt;operator&gt;.indexAccess,bitMasks[kState])<SUB>64</SUB>>", "381": "<(IDENTIFIER,kState,bitMasks[kState] == -1)<SUB>64</SUB>>", "383": "<(LITERAL,1,-1)<SUB>64</SUB>>", "385": "<(IDENTIFIER,kTime,kTime &lt; bitMasks[kState])<SUB>64</SUB>>", "387": "<(IDENTIFIER,bitMasks,kTime &lt; bitMasks[kState])<SUB>64</SUB>>", "389": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,bitMasks[kState])<SUB>65</SUB>>", "393": "<(IDENTIFIER,kState,bitMasks[kState] = kTime)<SUB>65</SUB>>", "395": "<(&lt;operator&gt;.assignment,previous[kState] = i)<SUB>66</SUB>>", "397": "<(IDENTIFIER,previous,previous[kState] = i)<SUB>66</SUB>>", "399": "<(IDENTIFIER,i,previous[kState] = i)<SUB>66</SUB>>", "401": "<(LOCAL,int finalState: int)<SUB>77</SUB>>", "403": "<(IDENTIFIER,finalState,int finalState = (1 &lt;&lt; objectNum) - 1)<SUB>77</SUB>>", "405": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; objectNum)<SUB>77</SUB>>", "407": "<(IDENTIFIER,objectNum,1 &lt;&lt; objectNum)<SUB>77</SUB>>", "409": "<(println,System.out.println(bitMasks[finalState]))<SUB>79</SUB>>", "411": "<(IDENTIFIER,System,System.out.println(bitMasks[finalState]))<SUB>79</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,bitMasks[finalState])<SUB>79</SUB>>", "415": "<(IDENTIFIER,finalState,System.out.println(bitMasks[finalState]))<SUB>79</SUB>>", "416": "<(&lt;operator&gt;.assignment,ANY outputQ = new ArrayDeque&lt;Integer&gt;())<SUB>81</SUB>>", "418": "<(&lt;operator&gt;.alloc,new ArrayDeque&lt;Integer&gt;())<SUB>81</SUB>>", "5": "<(IDENTIFIER,outputQ,new ArrayDeque&lt;Integer&gt;())<SUB>81</SUB>>", "421": "<(IDENTIFIER,outputQ,add(0))<SUB>82</SUB>>", "423": "<(LOCAL,int curState: int)<SUB>83</SUB>>", "425": "<(IDENTIFIER,curState,int curState = finalState)<SUB>83</SUB>>", "427": "<(CONTROL_STRUCTURE,while (curState &gt; 0),while (curState &gt; 0))<SUB>84</SUB>>", "429": "<(IDENTIFIER,curState,curState &gt; 0)<SUB>84</SUB>>", "431": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>>", "433": "<(&lt;operator&gt;.assignment,int difference = curState ^ previous[curState])<SUB>87</SUB>>", "435": "<(&lt;operator&gt;.xor,curState ^ previous[curState])<SUB>87</SUB>>", "437": "<(&lt;operator&gt;.indexAccess,previous[curState])<SUB>87</SUB>>", "439": "<(IDENTIFIER,curState,curState ^ previous[curState])<SUB>87</SUB>>", "441": "<(&lt;operator&gt;.assignment,int firstItem = -1)<SUB>88</SUB>>", "443": "<(&lt;operator&gt;.minus,-1)<SUB>88</SUB>>", "445": "<(LOCAL,int secondItem: int)<SUB>89</SUB>>", "447": "<(IDENTIFIER,secondItem,int secondItem = -1)<SUB>89</SUB>>", "449": "<(LITERAL,1,-1)<SUB>89</SUB>>", "451": "<(LOCAL,int i: int)<SUB>91</SUB>>", "453": "<(IDENTIFIER,i,int i = 0)<SUB>91</SUB>>", "455": "<(&lt;operator&gt;.lessThan,i &lt; objectNum)<SUB>91</SUB>>", "457": "<(IDENTIFIER,objectNum,i &lt; objectNum)<SUB>91</SUB>>", "459": "<(IDENTIFIER,i,i++)<SUB>91</SUB>>", "461": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; difference) &gt; 0),if (((1 &lt;&lt; i) &amp; difference) &gt; 0))<SUB>92</SUB>>", "463": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; difference)<SUB>92</SUB>>", "465": "<(LITERAL,1,1 &lt;&lt; i)<SUB>92</SUB>>", "467": "<(IDENTIFIER,difference,(1 &lt;&lt; i) &amp; difference)<SUB>92</SUB>>", "469": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>92</SUB>>", "471": "<(IDENTIFIER,secondItem,secondItem = firstItem)<SUB>93</SUB>>", "473": "<(&lt;operator&gt;.assignment,firstItem = i)<SUB>94</SUB>>", "475": "<(IDENTIFIER,i,firstItem = i)<SUB>94</SUB>>", "477": "<(&lt;operator&gt;.notEquals,secondItem != -1)<SUB>98</SUB>>", "479": "<(&lt;operator&gt;.minus,-1)<SUB>98</SUB>>", "481": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>98</SUB>>", "483": "<(IDENTIFIER,outputQ,add(firstItem + 1))<SUB>101</SUB>>", "485": "<(IDENTIFIER,firstItem,firstItem + 1)<SUB>101</SUB>>", "487": "<(add,add(secondItem + 1))<SUB>102</SUB>>", "489": "<(&lt;operator&gt;.addition,secondItem + 1)<SUB>102</SUB>>", "491": "<(LITERAL,1,secondItem + 1)<SUB>102</SUB>>", "493": "<(IDENTIFIER,outputQ,add(0))<SUB>103</SUB>>", "495": "<(CONTROL_STRUCTURE,else,else)<SUB>105</SUB>>", "497": "<(add,add(firstItem + 1))<SUB>106</SUB>>", "499": "<(&lt;operator&gt;.addition,firstItem + 1)<SUB>106</SUB>>", "501": "<(LITERAL,1,firstItem + 1)<SUB>106</SUB>>", "503": "<(IDENTIFIER,outputQ,add(0))<SUB>107</SUB>>", "505": "<(&lt;operator&gt;.assignment,curState = previous[curState])<SUB>110</SUB>>", "507": "<(&lt;operator&gt;.indexAccess,previous[curState])<SUB>110</SUB>>", "509": "<(IDENTIFIER,curState,curState = previous[curState])<SUB>110</SUB>>", "511": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>113</SUB>>", "513": "<(FIELD_IDENTIFIER,out,out)<SUB>113</SUB>>", "515": "<(IDENTIFIER,outputQ,removeLast())<SUB>113</SUB>>", "517": "<(&lt;operator&gt;.logicalNot,!outputQ.isEmpty())<SUB>114</SUB>>", "519": "<(IDENTIFIER,outputQ,isEmpty())<SUB>114</SUB>>", "521": "<(print,System.out.print(&quot; &quot;))<SUB>115</SUB>>", "523": "<(IDENTIFIER,System,System.out.print(&quot; &quot;))<SUB>115</SUB>>", "525": "<(LITERAL,&quot; &quot;,System.out.print(&quot; &quot;))<SUB>115</SUB>>", "527": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>116</SUB>>", "529": "<(FIELD_IDENTIFIER,out,out)<SUB>116</SUB>>", "531": "<(IDENTIFIER,outputQ,removeLast())<SUB>116</SUB>>", "533": "<(MODIFIER,STATIC)>"}}