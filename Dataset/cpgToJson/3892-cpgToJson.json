{"edges": [["23", "25"], ["23", "155"], ["23", "156"], ["23", "157"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "31"], ["25", "32"], ["25", "36"], ["25", "151"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "41"], ["37", "38"], ["37", "40"], ["38", "39"], ["41", "42"], ["41", "43"], ["41", "6"], ["41", "47"], ["41", "50"], ["41", "8"], ["41", "51"], ["41", "54"], ["41", "55"], ["41", "113"], ["41", "114"], ["41", "118"], ["41", "147"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["50", "5"], ["51", "52"], ["51", "53"], ["54", "7"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "71"], ["65", "103"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "75"], ["71", "79"], ["72", "73"], ["72", "74"], ["75", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["80", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["84", "85"], ["84", "91"], ["84", "99"], ["85", "86"], ["85", "88"], ["86", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "98"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "97"], ["95", "96"], ["99", "100"], ["100", "101"], ["101", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "109"], ["105", "112"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["116", "117"], ["118", "119"], ["118", "121"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "127"], ["121", "141"], ["123", "124"], ["123", "125"], ["125", "126"], ["127", "128"], ["127", "132"], ["128", "129"], ["128", "131"], ["129", "130"], ["132", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "140"], ["138", "139"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["152", "153"], ["152", "154"], ["26", "29"], ["29", "34"], ["32", "38"], ["151", "157"], ["28", "26"], ["34", "32"], ["37", "45"], ["37", "154"], ["152", "151"], ["38", "37"], ["43", "49"], ["47", "50"], ["50", "53"], ["51", "54"], ["54", "57"], ["114", "119"], ["147", "38"], ["154", "152"], ["45", "43"], ["49", "47"], ["53", "51"], ["57", "60"], ["60", "69"], ["60", "116"], ["63", "60"], ["116", "114"], ["119", "125"], ["119", "150"], ["148", "147"], ["67", "72"], ["103", "63"], ["123", "129"], ["141", "119"], ["150", "148"], ["69", "67"], ["72", "76"], ["72", "86"], ["72", "108"], ["125", "123"], ["128", "136"], ["128", "144"], ["142", "145"], ["145", "141"], ["76", "108"], ["106", "109"], ["109", "103"], ["129", "128"], ["133", "129"], ["144", "142"], ["108", "106"], ["134", "138"], ["137", "133"], ["136", "134"], ["138", "137"], ["85", "95"], ["85", "101"], ["86", "88"], ["88", "85"], ["92", "108"], ["94", "92"], ["101", "86"], ["101", "108"], ["95", "94"], ["23", "28"], ["26", "157"], ["29", "157"], ["29", "157"], ["34", "157"], ["32", "157"], ["32", "157"], ["38", "157"], ["37", "157"], ["37", "157"], ["151", "157"], ["151", "157"], ["45", "157"], ["43", "157"], ["43", "157"], ["47", "157"], ["50", "157"], ["50", "157"], ["51", "157"], ["54", "157"], ["57", "157"], ["60", "157"], ["60", "157"], ["60", "157"], ["116", "157"], ["114", "157"], ["119", "157"], ["119", "157"], ["147", "157"], ["147", "157"], ["128", "157"], ["128", "157"], ["145", "157"], ["141", "157"], ["141", "157"], ["137", "157"], ["133", "157"], ["133", "157"], ["69", "157"], ["67", "157"], ["67", "157"], ["72", "157"], ["72", "157"], ["85", "157"], ["88", "157"], ["85", "157"], ["85", "157"], ["101", "157"], ["94", "157"], ["92", "157"], ["92", "157"], ["76", "157"], ["109", "157"], ["109", "157"], ["109", "157"], ["103", "157"], ["63", "157"], ["23", "24"], ["23", "26"], ["34", "32"], ["26", "29"], ["23", "29"], ["24", "29"], ["34", "151"], ["45", "151"], ["69", "151"], ["29", "34"], ["23", "34"], ["38", "37"], ["23", "37"], ["45", "43"], ["23", "47"], ["23", "51"], ["116", "114"], ["32", "38"], ["23", "38"], ["47", "50"], ["23", "50"], ["51", "54"], ["23", "54"], ["23", "57"], ["141", "147"], ["34", "45"], ["69", "45"], ["23", "45"], ["57", "60"], ["63", "60"], ["23", "60"], ["43", "60"], ["60", "63"], ["23", "63"], ["69", "67"], ["54", "116"], ["103", "116"], ["23", "116"], ["114", "119"], ["125", "119"], ["23", "119"], ["125", "123"], ["54", "103"], ["23", "103"], ["106", "103"], ["109", "103"], ["147", "141"], ["133", "141"], ["145", "141"], ["45", "69"], ["23", "69"], ["67", "72"], ["23", "72"], ["23", "106"], ["23", "112"], ["119", "125"], ["23", "125"], ["129", "128"], ["23", "128"], ["129", "145"], ["23", "145"], ["50", "76"], ["109", "76"], ["23", "76"], ["106", "109"], ["23", "109"], ["50", "109"], ["101", "109"], ["92", "109"], ["76", "109"], ["123", "129"], ["138", "129"], ["23", "129"], ["147", "133"], ["141", "133"], ["138", "133"], ["23", "133"], ["23", "82"], ["138", "137"], ["23", "137"], ["129", "138"], ["23", "138"], ["86", "85"], ["88", "85"], ["88", "85"], ["50", "86"], ["101", "86"], ["109", "86"], ["23", "86"], ["72", "88"], ["23", "88"], ["95", "92"], ["23", "92"], ["95", "94"], ["23", "94"], ["86", "101"], ["23", "101"], ["86", "95"], ["23", "95"], ["37", "47"], ["37", "49"], ["37", "60"], ["37", "51"], ["37", "57"], ["37", "116"], ["37", "37"], ["37", "114"], ["37", "38"], ["37", "150"], ["37", "119"], ["37", "45"], ["37", "50"], ["37", "148"], ["37", "54"], ["37", "43"], ["37", "53"], ["37", "147"], ["60", "60"], ["60", "72"], ["60", "103"], ["60", "69"], ["60", "67"], ["60", "106"], ["60", "63"], ["60", "108"], ["60", "109"], ["119", "141"], ["119", "145"], ["119", "128"], ["119", "142"], ["119", "119"], ["119", "123"], ["119", "144"], ["119", "129"], ["119", "125"], ["72", "76"], ["72", "85"], ["72", "88"], ["72", "86"], ["128", "136"], ["128", "128"], ["128", "129"], ["128", "134"], ["128", "138"], ["128", "137"], ["128", "133"], ["85", "94"], ["85", "95"], ["85", "92"], ["85", "101"], ["85", "85"], ["85", "88"], ["85", "86"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new FastIO(args))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastIO(args))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastIO(args))<SUB>2</SUB>>", "31": "<(LOCAL,int t: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,t,int t = ni())<SUB>3</SUB>>", "35": "<(IDENTIFIER,in,ni())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>4</SUB>>", "39": "<(IDENTIFIER,t,t--)<SUB>4</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,int n = ni())<SUB>5</SUB>>", "45": "<(ni,ni())<SUB>5</SUB>>", "6": "<(LOCAL,LinkedList&lt;Integer&gt; l: ANY)<SUB>6</SUB>>", "48": "<(IDENTIFIER,l,ANY l = new LinkedList&lt;&gt;())<SUB>6</SUB>>", "50": "<(&lt;init&gt;,new LinkedList&lt;&gt;())<SUB>6</SUB>>", "8": "<(LOCAL,ArrayList&lt;LinkedList&lt;Integer&gt;&gt; al: ANY)<SUB>7</SUB>>", "52": "<(IDENTIFIER,al,ANY al = new ArrayList&lt;&gt;())<SUB>7</SUB>>", "54": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>7</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int p = ni())<SUB>9</SUB>>", "69": "<(ni,ni())<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,if (p == 1),if (p == 1))<SUB>10</SUB>>", "73": "<(IDENTIFIER,p,p == 1)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(IDENTIFIER,l,addFirst(1))<SUB>11</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>13</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.equals,l.peekFirst() == p - 1)<SUB>14</SUB>>", "87": "<(IDENTIFIER,l,peekFirst())<SUB>14</SUB>>", "89": "<(IDENTIFIER,p,p - 1)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(IDENTIFIER,l,addFirst(l.removeFirst() + 1))<SUB>15</SUB>>", "95": "<(removeFirst,removeFirst())<SUB>15</SUB>>", "97": "<(LITERAL,1,l.removeFirst() + 1)<SUB>15</SUB>>", "99": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "101": "<(removeFirst,removeFirst())<SUB>18</SUB>>", "103": "<(add,add(new LinkedList&lt;&gt;(l)))<SUB>22</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "107": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "109": "<(&lt;init&gt;,new LinkedList&lt;&gt;(l))<SUB>22</SUB>>", "111": "<(IDENTIFIER,l,new LinkedList&lt;&gt;(l))<SUB>22</SUB>>", "113": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>24</SUB>>", "115": "<(IDENTIFIER,$iterLocal0,)<SUB>24</SUB>>", "117": "<(IDENTIFIER,al,&lt;empty&gt;)<SUB>24</SUB>>", "119": "<(hasNext,&lt;empty&gt;)<SUB>24</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>24</SUB>>", "125": "<(next,&lt;empty&gt;)<SUB>24</SUB>>", "127": "<(CONTROL_STRUCTURE,while (ll.size() &gt; 1),while (ll.size() &gt; 1))<SUB>25</SUB>>", "129": "<(size,size())<SUB>25</SUB>>", "131": "<(LITERAL,1,ll.size() &gt; 1)<SUB>25</SUB>>", "133": "<(print,print(ll.removeLast() + &quot;.&quot;))<SUB>26</SUB>>", "135": "<(IDENTIFIER,System,print(ll.removeLast() + &quot;.&quot;))<SUB>26</SUB>>", "137": "<(&lt;operator&gt;.addition,ll.removeLast() + &quot;.&quot;)<SUB>26</SUB>>", "139": "<(IDENTIFIER,ll,removeLast())<SUB>26</SUB>>", "141": "<(println,println(ll.remove()))<SUB>28</SUB>>", "143": "<(IDENTIFIER,System,println(ll.remove()))<SUB>28</SUB>>", "145": "<(remove,remove())<SUB>28</SUB>>", "147": "<(println,System.out.println())<SUB>30</SUB>>", "149": "<(IDENTIFIER,System,System.out.println())<SUB>30</SUB>>", "151": "<(flush,flush())<SUB>32</SUB>>", "153": "<(IDENTIFIER,in,flush())<SUB>32</SUB>>", "155": "<(MODIFIER,PUBLIC)>", "157": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}