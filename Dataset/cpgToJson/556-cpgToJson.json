{"edges": [["24", "26"], ["24", "153"], ["24", "154"], ["24", "155"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "8"], ["26", "62"], ["26", "65"], ["26", "68"], ["26", "69"], ["26", "75"], ["26", "151"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "49"], ["45", "61"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "55"], ["51", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["62", "63"], ["62", "64"], ["65", "7"], ["65", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "89"], ["85", "92"], ["85", "93"], ["85", "99"], ["85", "100"], ["85", "107"], ["85", "108"], ["85", "117"], ["86", "87"], ["86", "88"], ["89", "9"], ["89", "90"], ["90", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "129"], ["117", "133"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "142"], ["134", "146"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["27", "34"], ["30", "43"], ["41", "48"], ["44", "64"], ["62", "66"], ["65", "73"], ["69", "77"], ["151", "155"], ["29", "27"], ["43", "41"], ["64", "62"], ["66", "65"], ["71", "69"], ["77", "80"], ["80", "88"], ["80", "151"], ["83", "80"], ["32", "39"], ["35", "30"], ["46", "54"], ["49", "44"], ["73", "71"], ["86", "90"], ["89", "97"], ["93", "103"], ["100", "111"], ["108", "120"], ["34", "32"], ["37", "35"], ["48", "46"], ["88", "86"], ["90", "89"], ["95", "93"], ["102", "100"], ["110", "108"], ["118", "130"], ["118", "137"], ["39", "37"], ["52", "59"], ["55", "49"], ["97", "95"], ["103", "104"], ["104", "102"], ["111", "114"], ["112", "110"], ["119", "118"], ["119", "125"], ["124", "118"], ["130", "83"], ["54", "52"], ["57", "55"], ["114", "112"], ["120", "119"], ["125", "124"], ["135", "143"], ["135", "148"], ["59", "57"], ["136", "135"], ["143", "83"], ["137", "136"], ["148", "83"], ["24", "29"], ["25", "155"], ["27", "155"], ["35", "155"], ["35", "155"], ["35", "155"], ["30", "155"], ["41", "155"], ["49", "155"], ["52", "155"], ["55", "155"], ["55", "155"], ["55", "155"], ["49", "155"], ["44", "155"], ["62", "155"], ["66", "155"], ["65", "155"], ["65", "155"], ["71", "155"], ["73", "155"], ["71", "155"], ["69", "155"], ["69", "155"], ["77", "155"], ["80", "155"], ["80", "155"], ["80", "155"], ["151", "155"], ["151", "155"], ["86", "155"], ["90", "155"], ["89", "155"], ["89", "155"], ["95", "155"], ["97", "155"], ["95", "155"], ["93", "155"], ["93", "155"], ["102", "155"], ["100", "155"], ["100", "155"], ["108", "155"], ["112", "155"], ["112", "155"], ["110", "155"], ["108", "155"], ["108", "155"], ["120", "155"], ["119", "155"], ["119", "155"], ["118", "155"], ["125", "155"], ["124", "155"], ["118", "155"], ["118", "155"], ["136", "155"], ["136", "155"], ["135", "155"], ["135", "155"], ["135", "155"], ["148", "155"], ["143", "155"], ["130", "155"], ["83", "155"], ["24", "25"], ["24", "27"], ["24", "41"], ["24", "62"], ["71", "69"], ["71", "69"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["52", "44"], ["49", "44"], ["62", "65"], ["24", "65"], ["66", "65"], ["24", "77"], ["44", "151"], ["148", "151"], ["143", "151"], ["130", "151"], ["24", "151"], ["24", "32"], ["24", "40"], ["24", "46"], ["24", "61"], ["30", "66"], ["24", "66"], ["24", "71"], ["73", "71"], ["77", "80"], ["83", "80"], ["24", "80"], ["69", "80"], ["80", "83"], ["24", "83"], ["24", "86"], ["95", "93"], ["95", "93"], ["24", "100"], ["104", "100"], ["104", "100"], ["24", "108"], ["112", "108"], ["112", "108"], ["32", "35"], ["24", "35"], ["46", "49"], ["24", "49"], ["52", "49"], ["55", "49"], ["65", "73"], ["24", "73"], ["86", "89"], ["24", "89"], ["90", "89"], ["24", "52"], ["24", "60"], ["66", "90"], ["24", "90"], ["71", "95"], ["24", "95"], ["97", "95"], ["24", "102"], ["104", "102"], ["104", "102"], ["24", "110"], ["112", "110"], ["112", "110"], ["119", "118"], ["119", "118"], ["124", "118"], ["124", "118"], ["52", "55"], ["24", "55"], ["89", "97"], ["24", "97"], ["112", "104"], ["24", "104"], ["93", "104"], ["104", "112"], ["24", "112"], ["114", "112"], ["114", "112"], ["120", "119"], ["114", "119"], ["24", "119"], ["125", "124"], ["125", "124"], ["24", "124"], ["44", "130"], ["148", "130"], ["143", "130"], ["24", "130"], ["104", "114"], ["24", "114"], ["100", "120"], ["24", "120"], ["120", "125"], ["24", "125"], ["136", "135"], ["136", "135"], ["119", "135"], ["24", "135"], ["137", "136"], ["137", "136"], ["24", "136"], ["44", "143"], ["148", "143"], ["130", "143"], ["24", "143"], ["24", "137"], ["108", "137"], ["44", "148"], ["143", "148"], ["130", "148"], ["24", "148"], ["80", "89"], ["80", "120"], ["80", "102"], ["80", "114"], ["80", "103"], ["80", "104"], ["80", "119"], ["80", "95"], ["80", "97"], ["80", "112"], ["80", "93"], ["80", "90"], ["80", "80"], ["80", "83"], ["80", "118"], ["80", "100"], ["80", "88"], ["80", "110"], ["80", "108"], ["80", "111"], ["80", "86"], ["118", "136"], ["118", "137"], ["118", "130"], ["118", "135"], ["119", "124"], ["119", "125"], ["135", "148"], ["135", "143"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "46": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "48": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "50": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "52": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "54": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "56": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "58": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "60": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>5</SUB>>", "63": "<(IDENTIFIER,st,ANY st = new StringTokenizer(f.readLine()))<SUB>5</SUB>>", "65": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>5</SUB>>", "66": "<(readLine,readLine())<SUB>5</SUB>>", "68": "<(LOCAL,int T: int)<SUB>7</SUB>>", "70": "<(IDENTIFIER,T,int T = parseInt(st.nextToken()))<SUB>7</SUB>>", "72": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "74": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "76": "<(LOCAL,int t: int)<SUB>9</SUB>>", "78": "<(IDENTIFIER,t,int t = 0)<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.lessThan,t &lt; T)<SUB>9</SUB>>", "82": "<(IDENTIFIER,T,t &lt; T)<SUB>9</SUB>>", "84": "<(IDENTIFIER,t,t++)<SUB>9</SUB>>", "86": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(f.readLine()))<SUB>10</SUB>>", "88": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>10</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>10</SUB>>", "91": "<(IDENTIFIER,f,readLine())<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>11</SUB>>", "95": "<(parseInt,parseInt(st.nextToken()))<SUB>11</SUB>>", "97": "<(nextToken,nextToken())<SUB>11</SUB>>", "99": "<(LOCAL,int sqrt: int)<SUB>12</SUB>>", "101": "<(IDENTIFIER,sqrt,int sqrt = (int) Math.sqrt(n))<SUB>12</SUB>>", "103": "<(TYPE_REF,int,int)<SUB>12</SUB>>", "105": "<(IDENTIFIER,Math,Math.sqrt(n))<SUB>12</SUB>>", "107": "<(LOCAL,int sqrt2: int)<SUB>13</SUB>>", "109": "<(IDENTIFIER,sqrt2,int sqrt2 = (int) Math.sqrt(n / 2))<SUB>13</SUB>>", "111": "<(TYPE_REF,int,int)<SUB>13</SUB>>", "113": "<(IDENTIFIER,Math,Math.sqrt(n / 2))<SUB>13</SUB>>", "115": "<(IDENTIFIER,n,n / 2)<SUB>13</SUB>>", "117": "<(CONTROL_STRUCTURE,if (sqrt * sqrt == n &amp;&amp; sqrt % 2 == 0),if (sqrt * sqrt == n &amp;&amp; sqrt % 2 == 0))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.equals,sqrt * sqrt == n)<SUB>14</SUB>>", "121": "<(IDENTIFIER,sqrt,sqrt * sqrt)<SUB>14</SUB>>", "123": "<(IDENTIFIER,n,sqrt * sqrt == n)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.modulo,sqrt % 2)<SUB>14</SUB>>", "127": "<(LITERAL,2,sqrt % 2)<SUB>14</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "131": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>15</SUB>>", "133": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.equals,2 * sqrt2 * sqrt2 == n)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.multiplication,2 * sqrt2)<SUB>16</SUB>>", "139": "<(IDENTIFIER,sqrt2,2 * sqrt2)<SUB>16</SUB>>", "141": "<(IDENTIFIER,n,2 * sqrt2 * sqrt2 == n)<SUB>16</SUB>>", "143": "<(println,println(&quot;YES&quot;))<SUB>17</SUB>>", "145": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>17</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "149": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>19</SUB>>", "151": "<(close,close())<SUB>23</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}