{"edges": [["19", "20"], ["19", "21"], ["19", "150"], ["19", "151"], ["19", "152"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "53"], ["21", "54"], ["21", "58"], ["21", "61"], ["21", "79"], ["21", "121"], ["21", "122"], ["21", "125"], ["21", "145"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "71"], ["61", "73"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "89"], ["79", "91"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "94"], ["92", "99"], ["92", "102"], ["92", "104"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "115"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["115", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["54", "58"], ["58", "63"], ["122", "127"], ["145", "152"], ["24", "22"], ["29", "27"], ["34", "32"], ["38", "41"], ["41", "48"], ["41", "56"], ["44", "41"], ["56", "54"], ["63", "70"], ["66", "75"], ["66", "81"], ["71", "70"], ["81", "86"], ["84", "96"], ["84", "122"], ["89", "86"], ["127", "130"], ["130", "138"], ["130", "148"], ["133", "130"], ["146", "145"], ["47", "44"], ["68", "66"], ["74", "71"], ["86", "84"], ["148", "146"], ["48", "51"], ["51", "47"], ["70", "68"], ["75", "74"], ["94", "99"], ["99", "108"], ["99", "89"], ["102", "99"], ["137", "143"], ["137", "133"], ["96", "94"], ["138", "137"], ["143", "133"], ["106", "117"], ["106", "102"], ["107", "106"], ["116", "102"], ["108", "111"], ["111", "107"], ["117", "116"], ["19", "24"], ["20", "152"], ["22", "152"], ["25", "152"], ["29", "152"], ["27", "152"], ["27", "152"], ["32", "152"], ["32", "152"], ["54", "152"], ["54", "152"], ["54", "152"], ["58", "152"], ["58", "152"], ["66", "152"], ["66", "152"], ["84", "152"], ["84", "152"], ["122", "152"], ["127", "152"], ["130", "152"], ["130", "152"], ["130", "152"], ["145", "152"], ["145", "152"], ["145", "152"], ["137", "152"], ["137", "152"], ["143", "152"], ["133", "152"], ["94", "152"], ["94", "152"], ["99", "152"], ["99", "152"], ["89", "152"], ["107", "152"], ["107", "152"], ["106", "152"], ["106", "152"], ["116", "152"], ["116", "152"], ["102", "152"], ["74", "152"], ["74", "152"], ["71", "152"], ["47", "152"], ["51", "152"], ["47", "152"], ["47", "152"], ["44", "152"], ["58", "152"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["56", "54"], ["19", "122"], ["22", "25"], ["19", "25"], ["19", "38"], ["19", "58"], ["32", "58"], ["47", "58"], ["19", "63"], ["19", "81"], ["19", "127"], ["122", "145"], ["143", "145"], ["19", "145"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["38", "41"], ["44", "41"], ["19", "41"], ["34", "41"], ["41", "44"], ["19", "44"], ["51", "47"], ["41", "56"], ["19", "56"], ["63", "66"], ["71", "66"], ["19", "66"], ["54", "66"], ["66", "71"], ["19", "71"], ["19", "74"], ["81", "84"], ["89", "84"], ["19", "84"], ["86", "84"], ["86", "84"], ["19", "89"], ["84", "89"], ["127", "130"], ["133", "130"], ["19", "130"], ["86", "130"], ["130", "133"], ["19", "133"], ["56", "86"], ["99", "86"], ["19", "86"], ["84", "94"], ["19", "94"], ["29", "51"], ["19", "51"], ["94", "99"], ["102", "99"], ["19", "99"], ["86", "99"], ["99", "102"], ["19", "102"], ["54", "137"], ["74", "137"], ["19", "137"], ["84", "96"], ["19", "96"], ["122", "143"], ["19", "143"], ["107", "106"], ["107", "106"], ["19", "106"], ["19", "116"], ["58", "107"], ["47", "107"], ["41", "47"], ["41", "48"], ["41", "51"], ["41", "44"], ["41", "41"], ["66", "68"], ["66", "66"], ["66", "75"], ["66", "74"], ["66", "71"], ["66", "70"], ["84", "94"], ["84", "96"], ["84", "89"], ["84", "99"], ["84", "84"], ["84", "86"], ["130", "138"], ["130", "137"], ["130", "130"], ["130", "133"], ["99", "107"], ["99", "99"], ["99", "102"], ["99", "106"], ["99", "108"], ["99", "111"], ["137", "143"], ["106", "116"], ["106", "117"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new FastReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new FastReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int[] arr: int[])<SUB>4</SUB>>", "33": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(LOCAL,boolean[] arr2: boolean[])<SUB>8</SUB>>", "55": "<(IDENTIFIER,arr2,boolean[] arr2 = new boolean[n])<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(arr))<SUB>9</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr2.length); i++),for (int i = 0; Some(i &lt; arr2.length); i++))<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,i &lt; arr2.length)<SUB>10</SUB>>", "69": "<(IDENTIFIER,arr2,i &lt; arr2.length)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,arr2[i])<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,arr2[i] = true)<SUB>11</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>14</SUB>>", "87": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(LOCAL,int j: int)<SUB>15</SUB>>", "95": "<(IDENTIFIER,j,int j = i + 1)<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>15</SUB>>", "101": "<(IDENTIFIER,n,j &lt; n)<SUB>15</SUB>>", "103": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "105": "<(CONTROL_STRUCTURE,if (arr[j] % arr[i] == 0),if (arr[j] % arr[i] == 0))<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.modulo,arr[j] % arr[i])<SUB>16</SUB>>", "109": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>16</SUB>>", "113": "<(IDENTIFIER,i,arr[j] % arr[i])<SUB>16</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,arr2[j])<SUB>17</SUB>>", "119": "<(IDENTIFIER,j,arr2[j] = false)<SUB>17</SUB>>", "121": "<(LOCAL,int count: int)<SUB>21</SUB>>", "123": "<(IDENTIFIER,count,int count = 0)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "129": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.equals,arr2[i] == true)<SUB>23</SUB>>", "139": "<(IDENTIFIER,arr2,arr2[i] == true)<SUB>23</SUB>>", "141": "<(LITERAL,true,arr2[i] == true)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,count++)<SUB>24</SUB>>", "145": "<(println,System.out.println(count))<SUB>27</SUB>>", "147": "<(IDENTIFIER,System,System.out.println(count))<SUB>27</SUB>>", "149": "<(IDENTIFIER,count,System.out.println(count))<SUB>27</SUB>>", "151": "<(MODIFIER,STATIC)>"}}