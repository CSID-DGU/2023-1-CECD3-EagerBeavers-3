{"edges": [["19", "21"], ["19", "123"], ["19", "124"], ["19", "125"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "50"], ["21", "61"], ["21", "62"], ["21", "77"], ["21", "88"], ["21", "89"], ["21", "98"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "76"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "102"], ["98", "116"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "109"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["62", "78"], ["89", "99"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "47"], ["40", "51"], ["51", "58"], ["51", "70"], ["64", "62"], ["78", "85"], ["78", "94"], ["91", "89"], ["99", "105"], ["99", "120"], ["102", "125"], ["28", "26"], ["44", "49"], ["49", "125"], ["55", "60"], ["60", "125"], ["66", "64"], ["82", "87"], ["87", "125"], ["92", "91"], ["103", "113"], ["106", "102"], ["117", "125"], ["45", "44"], ["56", "55"], ["68", "66"], ["83", "82"], ["94", "92"], ["105", "103"], ["109", "106"], ["118", "121"], ["121", "117"], ["47", "45"], ["58", "56"], ["69", "68"], ["85", "83"], ["110", "109"], ["120", "118"], ["70", "73"], ["73", "69"], ["112", "110"], ["113", "112"], ["19", "24"], ["49", "125"], ["87", "125"], ["60", "125"], ["20", "125"], ["22", "125"], ["25", "125"], ["25", "125"], ["30", "125"], ["35", "125"], ["37", "125"], ["35", "125"], ["35", "125"], ["40", "125"], ["40", "125"], ["44", "125"], ["44", "125"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["64", "62"], ["64", "62"], ["91", "89"], ["91", "89"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "40"], ["19", "40"], ["19", "49"], ["40", "51"], ["19", "51"], ["35", "51"], ["19", "60"], ["19", "64"], ["66", "64"], ["66", "64"], ["62", "78"], ["19", "78"], ["19", "87"], ["19", "91"], ["94", "91"], ["94", "91"], ["89", "99"], ["19", "99"], ["106", "102"], ["106", "102"], ["106", "102"], ["19", "44"], ["19", "55"], ["19", "66"], ["69", "66"], ["69", "66"], ["73", "66"], ["19", "82"], ["19", "92"], ["94", "92"], ["94", "92"], ["94", "106"], ["19", "106"], ["110", "106"], ["110", "106"], ["121", "117"], ["69", "68"], ["69", "68"], ["73", "68"], ["19", "68"], ["19", "94"], ["78", "94"], ["110", "109"], ["110", "109"], ["19", "109"], ["19", "121"], ["70", "69"], ["70", "69"], ["73", "69"], ["19", "110"], ["73", "110"], ["99", "110"], ["19", "70"], ["51", "70"], ["51", "73"], ["19", "73"], ["19", "112"], ["99", "112"], ["40", "47"], ["40", "49"], ["40", "51"], ["40", "45"], ["40", "44"], ["51", "68"], ["51", "60"], ["51", "73"], ["51", "64"], ["51", "66"], ["51", "56"], ["51", "69"], ["51", "58"], ["51", "70"], ["51", "55"], ["51", "78"], ["51", "62"], ["78", "94"], ["78", "89"], ["78", "99"], ["78", "85"], ["78", "92"], ["78", "87"], ["78", "91"], ["78", "82"], ["78", "83"], ["99", "120"], ["99", "113"], ["99", "102"], ["99", "103"], ["99", "121"], ["99", "106"], ["99", "112"], ["99", "105"], ["99", "118"], ["99", "110"], ["99", "117"], ["99", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>6</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>6</SUB>>", "33": "<(IDENTIFIER,scan,nextLong())<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>7</SUB>>", "37": "<(nextLong,nextLong())<SUB>7</SUB>>", "39": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>8</SUB>>", "41": "<(IDENTIFIER,n,n == 1)<SUB>8</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "49": "<(RETURN,return;,return;)<SUB>11</SUB>>", "51": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>13</SUB>>", "53": "<(IDENTIFIER,k,n &lt;= k)<SUB>13</SUB>>", "55": "<(print,System.out.print(&quot;1&quot;))<SUB>15</SUB>>", "57": "<(IDENTIFIER,System,System.out.print(&quot;1&quot;))<SUB>15</SUB>>", "59": "<(LITERAL,&quot;1&quot;,System.out.print(&quot;1&quot;))<SUB>15</SUB>>", "61": "<(LOCAL,long d: long)<SUB>18</SUB>>", "63": "<(IDENTIFIER,d,long d = 9 - 4 * (2 * n - k * k + k))<SUB>18</SUB>>", "65": "<(LITERAL,9,9 - 4 * (2 * n - k * k + k))<SUB>18</SUB>>", "67": "<(LITERAL,4,4 * (2 * n - k * k + k))<SUB>18</SUB>>", "69": "<(&lt;operator&gt;.subtraction,2 * n - k * k)<SUB>18</SUB>>", "71": "<(LITERAL,2,2 * n)<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.multiplication,k * k)<SUB>18</SUB>>", "75": "<(IDENTIFIER,k,k * k)<SUB>18</SUB>>", "77": "<(CONTROL_STRUCTURE,if (d &lt; 0),if (d &lt; 0))<SUB>19</SUB>>", "79": "<(IDENTIFIER,d,d &lt; 0)<SUB>19</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "83": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "85": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "87": "<(RETURN,return;,return;)<SUB>22</SUB>>", "89": "<(&lt;operator&gt;.assignment,double a = (3 + Math.sqrt(d)) / 2)<SUB>24</SUB>>", "91": "<(&lt;operator&gt;.division,(3 + Math.sqrt(d)) / 2)<SUB>24</SUB>>", "93": "<(LITERAL,3,3 + Math.sqrt(d))<SUB>24</SUB>>", "95": "<(IDENTIFIER,Math,Math.sqrt(d))<SUB>24</SUB>>", "97": "<(LITERAL,2,(3 + Math.sqrt(d)) / 2)<SUB>24</SUB>>", "99": "<(&lt;operator&gt;.greaterEqualsThan,a &gt;= 1)<SUB>25</SUB>>", "101": "<(LITERAL,1,a &gt;= 1)<SUB>25</SUB>>", "103": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "105": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "107": "<(IDENTIFIER,Math,Math.max(2, k - (long) a + 1))<SUB>26</SUB>>", "109": "<(&lt;operator&gt;.addition,k - (long) a + 1)<SUB>26</SUB>>", "111": "<(IDENTIFIER,k,k - (long) a)<SUB>26</SUB>>", "113": "<(TYPE_REF,long,long)<SUB>26</SUB>>", "115": "<(LITERAL,1,k - (long) a + 1)<SUB>26</SUB>>", "117": "<(println,System.out.println(-1))<SUB>28</SUB>>", "119": "<(IDENTIFIER,System,System.out.println(-1))<SUB>28</SUB>>", "121": "<(&lt;operator&gt;.minus,-1)<SUB>28</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}