{"edges": [["17", "19"], ["17", "95"], ["17", "96"], ["17", "97"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "34"], ["19", "35"], ["19", "38"], ["19", "39"], ["19", "43"], ["19", "88"], ["19", "93"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "59"], ["53", "61"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "68"], ["61", "71"], ["61", "73"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "83"], ["74", "75"], ["74", "82"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["21", "28"], ["26", "31"], ["31", "35"], ["35", "41"], ["39", "45"], ["88", "93"], ["93", "97"], ["23", "21"], ["28", "26"], ["41", "39"], ["45", "48"], ["48", "55"], ["48", "90"], ["51", "48"], ["90", "88"], ["59", "65"], ["55", "51"], ["55", "59"], ["63", "68"], ["68", "76"], ["68", "51"], ["71", "68"], ["65", "63"], ["74", "84"], ["74", "71"], ["83", "71"], ["75", "74"], ["84", "83"], ["76", "79"], ["79", "75"], ["17", "23"], ["18", "97"], ["21", "97"], ["21", "97"], ["28", "97"], ["26", "97"], ["26", "97"], ["31", "97"], ["31", "97"], ["35", "97"], ["39", "97"], ["39", "97"], ["39", "97"], ["45", "97"], ["48", "97"], ["48", "97"], ["48", "97"], ["90", "97"], ["88", "97"], ["88", "97"], ["93", "97"], ["93", "97"], ["59", "97"], ["63", "97"], ["63", "97"], ["68", "97"], ["68", "97"], ["75", "97"], ["75", "97"], ["74", "97"], ["74", "97"], ["83", "97"], ["83", "97"], ["71", "97"], ["51", "97"], ["31", "97"], ["17", "18"], ["23", "21"], ["28", "26"], ["28", "26"], ["17", "35"], ["41", "39"], ["17", "31"], ["26", "31"], ["17", "45"], ["17", "88"], ["35", "88"], ["59", "88"], ["88", "93"], ["17", "93"], ["17", "23"], ["23", "28"], ["17", "28"], ["21", "28"], ["28", "41"], ["17", "41"], ["45", "48"], ["51", "48"], ["17", "48"], ["41", "48"], ["68", "48"], ["48", "51"], ["17", "51"], ["35", "90"], ["59", "90"], ["17", "90"], ["35", "59"], ["17", "59"], ["48", "63"], ["17", "63"], ["63", "68"], ["71", "68"], ["17", "68"], ["48", "68"], ["68", "71"], ["17", "71"], ["17", "83"], ["48", "65"], ["17", "65"], ["75", "74"], ["75", "74"], ["17", "74"], ["31", "75"], ["48", "48"], ["48", "51"], ["48", "55"], ["55", "68"], ["55", "63"], ["55", "65"], ["55", "59"], ["68", "68"], ["68", "71"], ["68", "75"], ["68", "74"], ["68", "76"], ["68", "79"], ["74", "83"], ["74", "84"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] a: int[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,a,int[] a = nextIntArray(n))<SUB>3</SUB>>", "29": "<(IDENTIFIER,in,nextIntArray(n))<SUB>3</SUB>>", "31": "<(sort,sort(a))<SUB>4</SUB>>", "33": "<(IDENTIFIER,a,sort(a))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>5</SUB>>", "37": "<(LITERAL,0,int ans = 0)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,boolean[] done = new boolean[n])<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.alloc,new boolean[n])>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,done[i])<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,if (done[i]))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>10</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.addition,i + 1)<SUB>11</SUB>>", "67": "<(LITERAL,1,i + 1)<SUB>11</SUB>>", "69": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,if (a[j] % a[i] == 0),if (a[j] % a[i] == 0))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.modulo,a[j] % a[i])<SUB>12</SUB>>", "77": "<(IDENTIFIER,a,a[j] % a[i])<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,a[j] % a[i])<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,done[j] = true)<SUB>13</SUB>>", "85": "<(IDENTIFIER,done,done[j] = true)<SUB>13</SUB>>", "87": "<(LITERAL,true,done[j] = true)<SUB>13</SUB>>", "89": "<(IDENTIFIER,out,write(ans + &quot;\\n&quot;))<SUB>15</SUB>>", "91": "<(IDENTIFIER,ans,ans + &quot;\\n&quot;)<SUB>15</SUB>>", "93": "<(flush,flush())<SUB>16</SUB>>", "95": "<(MODIFIER,PUBLIC)>", "97": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}