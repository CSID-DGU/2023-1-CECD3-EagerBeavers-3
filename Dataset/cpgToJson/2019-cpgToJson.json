{"edges": [["19", "21"], ["19", "183"], ["19", "184"], ["19", "185"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "40"], ["21", "51"], ["21", "52"], ["21", "56"], ["21", "57"], ["21", "62"], ["21", "63"], ["21", "67"], ["21", "87"], ["21", "88"], ["21", "93"], ["21", "94"], ["21", "97"], ["21", "98"], ["21", "101"], ["21", "168"], ["21", "182"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "44"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "50"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "130"], ["112", "113"], ["112", "121"], ["113", "114"], ["113", "116"], ["114", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "136"], ["130", "148"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "140"], ["136", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["149", "150"], ["149", "163"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "171"], ["168", "176"], ["169", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["52", "59"], ["57", "65"], ["63", "69"], ["88", "94"], ["94", "98"], ["98", "103"], ["182", "185"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "48"], ["41", "54"], ["54", "52"], ["59", "57"], ["65", "63"], ["69", "72"], ["72", "79"], ["72", "90"], ["75", "72"], ["90", "88"], ["103", "106"], ["106", "114"], ["106", "169"], ["109", "106"], ["169", "174"], ["169", "180"], ["171", "182"], ["28", "26"], ["45", "50"], ["50", "185"], ["78", "75"], ["172", "171"], ["177", "182"], ["46", "45"], ["79", "84"], ["82", "78"], ["113", "124"], ["113", "132"], ["131", "137"], ["131", "151"], ["131", "154"], ["174", "172"], ["178", "177"], ["48", "46"], ["84", "82"], ["114", "113"], ["114", "117"], ["116", "113"], ["122", "127"], ["127", "132"], ["132", "131"], ["137", "142"], ["140", "145"], ["145", "109"], ["180", "178"], ["117", "116"], ["124", "122"], ["142", "140"], ["150", "165"], ["150", "109"], ["163", "109"], ["151", "150"], ["151", "159"], ["158", "150"], ["165", "163"], ["153", "151"], ["159", "158"], ["154", "153"], ["19", "24"], ["50", "185"], ["182", "185"], ["20", "185"], ["22", "185"], ["25", "185"], ["25", "185"], ["32", "185"], ["30", "185"], ["30", "185"], ["37", "185"], ["37", "185"], ["35", "185"], ["35", "185"], ["41", "185"], ["41", "185"], ["45", "185"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["54", "52"], ["59", "57"], ["59", "57"], ["65", "63"], ["63", "88"], ["19", "94"], ["19", "98"], ["19", "182"], ["22", "25"], ["19", "25"], ["19", "69"], ["19", "103"], ["25", "32"], ["19", "32"], ["19", "37"], ["30", "37"], ["35", "41"], ["19", "41"], ["19", "50"], ["32", "54"], ["19", "54"], ["52", "59"], ["19", "59"], ["41", "65"], ["19", "65"], ["69", "72"], ["75", "72"], ["19", "72"], ["65", "72"], ["72", "75"], ["19", "75"], ["82", "78"], ["82", "78"], ["103", "106"], ["109", "106"], ["19", "106"], ["72", "106"], ["106", "109"], ["19", "109"], ["98", "169"], ["151", "169"], ["145", "169"], ["19", "169"], ["19", "171"], ["19", "45"], ["94", "177"], ["122", "177"], ["158", "177"], ["163", "177"], ["137", "177"], ["19", "177"], ["37", "82"], ["19", "82"], ["57", "82"], ["114", "113"], ["151", "113"], ["116", "113"], ["116", "113"], ["63", "122"], ["116", "122"], ["131", "122"], ["153", "122"], ["158", "122"], ["78", "122"], ["19", "127"], ["63", "131"], ["116", "131"], ["153", "131"], ["158", "131"], ["78", "131"], ["88", "131"], ["116", "131"], ["153", "131"], ["140", "131"], ["19", "131"], ["131", "137"], ["19", "137"], ["63", "140"], ["131", "140"], ["19", "145"], ["98", "114"], ["151", "114"], ["145", "114"], ["19", "114"], ["63", "116"], ["131", "116"], ["153", "116"], ["158", "116"], ["78", "116"], ["88", "116"], ["131", "116"], ["153", "116"], ["140", "116"], ["19", "116"], ["63", "163"], ["131", "163"], ["153", "163"], ["158", "163"], ["151", "150"], ["151", "150"], ["158", "150"], ["158", "150"], ["114", "151"], ["127", "151"], ["19", "151"], ["113", "151"], ["153", "151"], ["153", "151"], ["63", "158"], ["131", "158"], ["153", "158"], ["94", "158"], ["122", "158"], ["163", "158"], ["137", "158"], ["19", "158"], ["63", "153"], ["131", "153"], ["131", "153"], ["19", "153"], ["41", "94"], ["41", "57"], ["41", "98"], ["41", "52"], ["41", "169"], ["41", "103"], ["41", "69"], ["41", "50"], ["41", "59"], ["41", "90"], ["41", "54"], ["41", "182"], ["41", "88"], ["41", "48"], ["41", "46"], ["41", "72"], ["41", "45"], ["41", "106"], ["41", "65"], ["41", "63"], ["72", "75"], ["72", "84"], ["72", "79"], ["72", "72"], ["72", "82"], ["72", "78"], ["106", "113"], ["106", "114"], ["106", "131"], ["106", "132"], ["106", "106"], ["106", "109"], ["169", "178"], ["169", "174"], ["169", "180"], ["169", "171"], ["169", "177"], ["169", "172"], ["113", "127"], ["113", "122"], ["113", "124"], ["131", "145"], ["131", "150"], ["131", "151"], ["131", "137"], ["131", "142"], ["131", "140"], ["131", "154"], ["131", "153"], ["114", "116"], ["114", "117"], ["150", "163"], ["150", "165"], ["151", "158"], ["151", "159"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY c = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,c,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,String number: java.lang.String)<SUB>4</SUB>>", "31": "<(IDENTIFIER,number,String number = nextLine())<SUB>4</SUB>>", "33": "<(IDENTIFIER,c,nextLine())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int i = Integer.parseInt(number))<SUB>5</SUB>>", "37": "<(parseInt,Integer.parseInt(number))<SUB>5</SUB>>", "39": "<(IDENTIFIER,number,Integer.parseInt(number))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.equals,i == 1)<SUB>6</SUB>>", "43": "<(LITERAL,1,i == 1)<SUB>6</SUB>>", "45": "<(println,System.out.println(&quot;NO&quot;))<SUB>8</SUB>>", "47": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>8</SUB>>", "49": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>8</SUB>>", "51": "<(LOCAL,String line: java.lang.String)<SUB>11</SUB>>", "53": "<(IDENTIFIER,line,String line = nextLine())<SUB>11</SUB>>", "55": "<(IDENTIFIER,c,nextLine())<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,String[] arr = line.split(&quot; &quot;))<SUB>12</SUB>>", "59": "<(split,line.split(&quot; &quot;))<SUB>12</SUB>>", "61": "<(LITERAL,&quot; &quot;,line.split(&quot; &quot;))<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] array = new int[i])<SUB>13</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[i])>", "67": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "71": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "73": "<(IDENTIFIER,j,j &lt; i)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,array[j])<SUB>16</SUB>>", "81": "<(IDENTIFIER,j,array[j] = Integer.parseInt(arr[j]))<SUB>16</SUB>>", "83": "<(IDENTIFIER,Integer,Integer.parseInt(arr[j]))<SUB>16</SUB>>", "85": "<(IDENTIFIER,arr,Integer.parseInt(arr[j]))<SUB>16</SUB>>", "87": "<(LOCAL,int min: int)<SUB>18</SUB>>", "89": "<(IDENTIFIER,min,int min = array[0])<SUB>18</SUB>>", "91": "<(IDENTIFIER,array,int min = array[0])<SUB>18</SUB>>", "93": "<(LOCAL,int second: int)<SUB>19</SUB>>", "95": "<(IDENTIFIER,second,int second = 0)<SUB>19</SUB>>", "97": "<(LOCAL,boolean thing: boolean)<SUB>20</SUB>>", "99": "<(IDENTIFIER,thing,boolean thing = false)<SUB>20</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "105": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "107": "<(IDENTIFIER,j,j &lt; i)<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.logicalAnd,!thing &amp;&amp; array[j] &gt; min)<SUB>23</SUB>>", "115": "<(IDENTIFIER,thing,!thing)<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,array[j])<SUB>23</SUB>>", "119": "<(IDENTIFIER,j,array[j] &gt; min)<SUB>23</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "123": "<(IDENTIFIER,second,second = array[j])<SUB>25</SUB>>", "125": "<(IDENTIFIER,array,second = array[j])<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.assignment,thing = true)<SUB>26</SUB>>", "129": "<(LITERAL,true,thing = true)<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.lessThan,array[j] &lt; min)<SUB>28</SUB>>", "133": "<(IDENTIFIER,array,array[j] &lt; min)<SUB>28</SUB>>", "135": "<(IDENTIFIER,min,array[j] &lt; min)<SUB>28</SUB>>", "137": "<(&lt;operator&gt;.assignment,second = min)<SUB>30</SUB>>", "139": "<(IDENTIFIER,min,second = min)<SUB>30</SUB>>", "141": "<(IDENTIFIER,min,min = array[j])<SUB>31</SUB>>", "143": "<(IDENTIFIER,array,min = array[j])<SUB>31</SUB>>", "145": "<(&lt;operator&gt;.assignment,thing = true)<SUB>32</SUB>>", "147": "<(LITERAL,true,thing = true)<SUB>32</SUB>>", "149": "<(CONTROL_STRUCTURE,if (thing &amp;&amp; array[j] &gt; min &amp;&amp; array[j] &lt; second),if (thing &amp;&amp; array[j] &gt; min &amp;&amp; array[j] &lt; second))<SUB>34</SUB>>", "151": "<(&lt;operator&gt;.logicalAnd,thing &amp;&amp; array[j] &gt; min)<SUB>34</SUB>>", "153": "<(&lt;operator&gt;.greaterThan,array[j] &gt; min)<SUB>34</SUB>>", "155": "<(IDENTIFIER,array,array[j] &gt; min)<SUB>34</SUB>>", "157": "<(IDENTIFIER,min,array[j] &gt; min)<SUB>34</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,array[j])<SUB>34</SUB>>", "161": "<(IDENTIFIER,j,array[j] &lt; second)<SUB>34</SUB>>", "163": "<(&lt;operator&gt;.assignment,second = array[j])<SUB>35</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,array[j])<SUB>35</SUB>>", "167": "<(IDENTIFIER,j,second = array[j])<SUB>35</SUB>>", "169": "<(&lt;operator&gt;.logicalNot,!thing)<SUB>37</SUB>>", "171": "<(println,System.out.println(&quot;NO&quot;))<SUB>38</SUB>>", "173": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>38</SUB>>", "175": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>38</SUB>>", "177": "<(println,System.out.println(second))<SUB>40</SUB>>", "179": "<(IDENTIFIER,System,System.out.println(second))<SUB>40</SUB>>", "181": "<(IDENTIFIER,second,System.out.println(second))<SUB>40</SUB>>", "183": "<(MODIFIER,PUBLIC)>", "185": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}