{"edges": [["23", "24"], ["23", "25"], ["23", "118"], ["23", "119"], ["23", "120"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "36"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "44"], ["25", "66"], ["25", "67"], ["25", "70"], ["25", "113"], ["25", "116"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["43", "5"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "61"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "75"], ["71", "72"], ["71", "74"], ["72", "73"], ["75", "76"], ["75", "78"], ["75", "79"], ["75", "8"], ["75", "83"], ["75", "86"], ["75", "87"], ["75", "88"], ["75", "92"], ["75", "110"], ["76", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["83", "85"], ["86", "7"], ["88", "89"], ["88", "90"], ["90", "91"], ["92", "93"], ["92", "95"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "101"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["26", "29"], ["29", "33"], ["31", "38"], ["36", "42"], ["40", "43"], ["43", "46"], ["67", "72"], ["113", "116"], ["116", "120"], ["28", "26"], ["33", "31"], ["38", "36"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "67"], ["52", "49"], ["71", "76"], ["71", "113"], ["55", "63"], ["61", "52"], ["72", "71"], ["76", "81"], ["79", "85"], ["83", "86"], ["86", "90"], ["88", "93"], ["110", "72"], ["56", "59"], ["59", "55"], ["63", "61"], ["81", "79"], ["85", "83"], ["90", "88"], ["93", "99"], ["93", "110"], ["97", "103"], ["99", "97"], ["102", "93"], ["102", "107"], ["107", "93"], ["103", "102"], ["23", "28"], ["24", "120"], ["26", "120"], ["29", "120"], ["33", "120"], ["31", "120"], ["31", "120"], ["36", "120"], ["36", "120"], ["36", "120"], ["40", "120"], ["43", "120"], ["46", "120"], ["49", "120"], ["49", "120"], ["49", "120"], ["67", "120"], ["72", "120"], ["71", "120"], ["71", "120"], ["113", "120"], ["113", "120"], ["116", "120"], ["116", "120"], ["76", "120"], ["79", "120"], ["79", "120"], ["79", "120"], ["83", "120"], ["86", "120"], ["88", "120"], ["93", "120"], ["93", "120"], ["110", "120"], ["110", "120"], ["103", "120"], ["103", "120"], ["102", "120"], ["102", "120"], ["107", "120"], ["107", "120"], ["59", "120"], ["55", "120"], ["55", "120"], ["61", "120"], ["61", "120"], ["52", "120"], ["23", "24"], ["23", "26"], ["33", "31"], ["38", "36"], ["23", "40"], ["23", "67"], ["26", "29"], ["23", "29"], ["40", "43"], ["23", "43"], ["23", "46"], ["23", "113"], ["67", "113"], ["76", "113"], ["113", "116"], ["23", "116"], ["29", "33"], ["23", "33"], ["31", "38"], ["23", "38"], ["46", "49"], ["52", "49"], ["23", "49"], ["38", "49"], ["49", "52"], ["23", "52"], ["59", "55"], ["72", "71"], ["23", "71"], ["81", "79"], ["23", "83"], ["90", "88"], ["86", "110"], ["107", "110"], ["23", "110"], ["43", "61"], ["23", "61"], ["36", "61"], ["55", "61"], ["43", "72"], ["110", "72"], ["61", "72"], ["23", "72"], ["67", "76"], ["23", "76"], ["83", "86"], ["23", "86"], ["33", "59"], ["23", "59"], ["72", "81"], ["23", "81"], ["81", "90"], ["23", "90"], ["88", "93"], ["99", "93"], ["23", "93"], ["99", "97"], ["93", "99"], ["23", "99"], ["103", "102"], ["103", "102"], ["23", "102"], ["86", "107"], ["23", "107"], ["103", "107"], ["97", "103"], ["23", "103"], ["79", "103"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "61"], ["49", "63"], ["49", "55"], ["71", "81"], ["71", "85"], ["71", "72"], ["71", "76"], ["71", "93"], ["71", "90"], ["71", "79"], ["71", "83"], ["71", "71"], ["71", "88"], ["71", "110"], ["71", "86"], ["93", "99"], ["93", "102"], ["93", "103"], ["93", "97"], ["93", "93"], ["102", "107"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new FastReader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastReader())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(LOCAL,int[] a: int[])<SUB>4</SUB>>", "37": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "5": "<(IDENTIFIER,set,new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,++i)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(add,add(a[i]))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,add(a[i]))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,long ans = 0)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,set.size() &gt; 0)<SUB>11</SUB>>", "73": "<(IDENTIFIER,set,size())<SUB>11</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(IDENTIFIER,ans,++ans)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,int min = first())<SUB>13</SUB>>", "81": "<(first,first())<SUB>13</SUB>>", "8": "<(LOCAL,TreeSet&lt;Integer&gt; temp: ANY)<SUB>14</SUB>>", "84": "<(IDENTIFIER,temp,ANY temp = new TreeSet&lt;&gt;())<SUB>14</SUB>>", "86": "<(&lt;init&gt;,new TreeSet&lt;&gt;())<SUB>14</SUB>>", "87": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>15</SUB>>", "89": "<(IDENTIFIER,$iterLocal0,)<SUB>15</SUB>>", "91": "<(IDENTIFIER,set,&lt;empty&gt;)<SUB>15</SUB>>", "93": "<(hasNext,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>15</SUB>>", "99": "<(next,&lt;empty&gt;)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,if (x % min != 0),if (x % min != 0))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.modulo,x % min)<SUB>16</SUB>>", "105": "<(IDENTIFIER,min,x % min)<SUB>16</SUB>>", "107": "<(add,add(x))<SUB>16</SUB>>", "109": "<(IDENTIFIER,x,add(x))<SUB>16</SUB>>", "111": "<(IDENTIFIER,set,set = temp)<SUB>18</SUB>>", "113": "<(print,print(ans))<SUB>21</SUB>>", "115": "<(IDENTIFIER,ans,print(ans))<SUB>21</SUB>>", "117": "<(IDENTIFIER,out,close())<SUB>23</SUB>>", "119": "<(MODIFIER,STATIC)>"}}