{"edges": [["23", "25"], ["23", "179"], ["23", "180"], ["23", "181"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "6"], ["25", "35"], ["25", "38"], ["25", "39"], ["25", "174"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["38", "5"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "8"], ["49", "55"], ["49", "58"], ["49", "59"], ["49", "70"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["58", "7"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["61", "69"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "68"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "86"], ["80", "165"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "95"], ["86", "158"], ["87", "88"], ["87", "94"], ["88", "89"], ["88", "93"], ["89", "90"], ["89", "92"], ["90", "91"], ["95", "96"], ["96", "97"], ["96", "100"], ["96", "139"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "106"], ["100", "107"], ["100", "128"], ["102", "103"], ["102", "104"], ["104", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "114"], ["109", "119"], ["110", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "134"], ["130", "138"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "137"], ["139", "140"], ["140", "141"], ["140", "153"], ["141", "142"], ["141", "150"], ["142", "143"], ["142", "149"], ["143", "144"], ["143", "148"], ["144", "145"], ["144", "147"], ["145", "146"], ["150", "151"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "157"], ["155", "156"], ["158", "159"], ["159", "160"], ["160", "161"], ["161", "162"], ["161", "164"], ["162", "163"], ["165", "166"], ["165", "167"], ["165", "168"], ["165", "170"], ["168", "169"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["26", "29"], ["29", "33"], ["31", "37"], ["35", "38"], ["38", "41"], ["174", "181"], ["28", "26"], ["33", "31"], ["37", "35"], ["41", "44"], ["44", "53"], ["44", "177"], ["47", "44"], ["175", "174"], ["51", "57"], ["55", "58"], ["58", "64"], ["59", "72"], ["177", "175"], ["53", "51"], ["57", "55"], ["72", "75"], ["75", "84"], ["75", "47"], ["78", "75"], ["62", "65"], ["65", "59"], ["82", "90"], ["165", "78"], ["64", "62"], ["84", "82"], ["87", "97"], ["87", "162"], ["168", "171"], ["170", "165"], ["88", "87"], ["171", "173"], ["173", "170"], ["89", "88"], ["97", "104"], ["97", "145"], ["160", "168"], ["90", "92"], ["92", "89"], ["102", "113"], ["107", "133"], ["128", "168"], ["161", "160"], ["104", "102"], ["109", "107"], ["153", "168"], ["162", "164"], ["164", "161"], ["110", "118"], ["110", "123"], ["114", "109"], ["119", "109"], ["131", "134"], ["134", "128"], ["142", "151"], ["142", "155"], ["154", "153"], ["111", "110"], ["116", "114"], ["120", "127"], ["125", "119"], ["133", "131"], ["143", "142"], ["151", "145"], ["155", "157"], ["157", "154"], ["113", "111"], ["118", "116"], ["121", "120"], ["127", "125"], ["144", "143"], ["123", "121"], ["145", "147"], ["147", "144"], ["23", "28"], ["24", "181"], ["26", "181"], ["29", "181"], ["33", "181"], ["31", "181"], ["31", "181"], ["35", "181"], ["38", "181"], ["41", "181"], ["44", "181"], ["44", "181"], ["44", "181"], ["174", "181"], ["174", "181"], ["174", "181"], ["53", "181"], ["51", "181"], ["51", "181"], ["55", "181"], ["58", "181"], ["59", "181"], ["62", "181"], ["65", "181"], ["65", "181"], ["59", "181"], ["72", "181"], ["75", "181"], ["75", "181"], ["75", "181"], ["47", "181"], ["84", "181"], ["82", "181"], ["82", "181"], ["87", "181"], ["87", "181"], ["87", "181"], ["160", "181"], ["97", "181"], ["97", "181"], ["142", "181"], ["142", "181"], ["142", "181"], ["153", "181"], ["151", "181"], ["102", "181"], ["102", "181"], ["110", "181"], ["109", "181"], ["120", "181"], ["119", "181"], ["119", "181"], ["109", "181"], ["114", "181"], ["109", "181"], ["107", "181"], ["107", "181"], ["131", "181"], ["134", "181"], ["134", "181"], ["134", "181"], ["128", "181"], ["165", "181"], ["171", "181"], ["165", "181"], ["165", "181"], ["78", "181"], ["165", "181"], ["114", "181"], ["23", "24"], ["23", "26"], ["33", "31"], ["23", "35"], ["26", "29"], ["23", "29"], ["35", "38"], ["23", "38"], ["23", "41"], ["38", "174"], ["165", "174"], ["23", "174"], ["29", "33"], ["23", "33"], ["41", "44"], ["47", "44"], ["23", "44"], ["31", "44"], ["44", "47"], ["23", "47"], ["53", "51"], ["23", "55"], ["55", "58"], ["23", "58"], ["58", "59"], ["23", "59"], ["62", "59"], ["65", "59"], ["23", "72"], ["33", "53"], ["84", "53"], ["23", "53"], ["23", "62"], ["23", "69"], ["72", "75"], ["78", "75"], ["23", "75"], ["51", "75"], ["75", "78"], ["23", "78"], ["84", "82"], ["62", "65"], ["23", "65"], ["23", "165"], ["38", "165"], ["168", "165"], ["171", "165"], ["53", "84"], ["23", "84"], ["23", "87"], ["82", "87"], ["162", "168"], ["155", "168"], ["128", "168"], ["23", "168"], ["23", "88"], ["168", "171"], ["23", "171"], ["87", "97"], ["23", "97"], ["104", "102"], ["114", "107"], ["114", "107"], ["102", "107"], ["110", "107"], ["23", "107"], ["59", "90"], ["171", "90"], ["23", "90"], ["104", "128"], ["23", "128"], ["131", "128"], ["134", "128"], ["90", "104"], ["23", "104"], ["114", "109"], ["114", "109"], ["102", "109"], ["110", "109"], ["23", "109"], ["23", "131"], ["23", "138"], ["90", "162"], ["23", "162"], ["102", "110"], ["23", "114"], ["102", "114"], ["102", "119"], ["110", "119"], ["23", "119"], ["131", "134"], ["23", "134"], ["107", "134"], ["23", "142"], ["97", "142"], ["102", "120"], ["110", "120"], ["23", "120"], ["23", "143"], ["145", "151"], ["23", "151"], ["145", "155"], ["23", "155"], ["90", "145"], ["151", "145"], ["23", "145"], ["44", "64"], ["44", "51"], ["44", "57"], ["44", "75"], ["44", "59"], ["44", "44"], ["44", "58"], ["44", "47"], ["44", "72"], ["44", "65"], ["44", "53"], ["44", "55"], ["44", "62"], ["75", "75"], ["75", "84"], ["75", "92"], ["75", "168"], ["75", "170"], ["75", "87"], ["75", "90"], ["75", "173"], ["75", "88"], ["75", "171"], ["75", "89"], ["75", "82"], ["75", "165"], ["75", "78"], ["87", "161"], ["87", "162"], ["87", "97"], ["87", "164"], ["87", "160"], ["97", "107"], ["97", "113"], ["97", "154"], ["97", "145"], ["97", "128"], ["97", "102"], ["97", "131"], ["97", "104"], ["97", "153"], ["97", "144"], ["97", "134"], ["97", "155"], ["97", "111"], ["97", "142"], ["97", "157"], ["97", "143"], ["97", "147"], ["97", "110"], ["97", "109"], ["97", "133"], ["110", "120"], ["110", "114"], ["110", "119"], ["110", "121"], ["110", "118"], ["110", "127"], ["110", "116"], ["110", "123"], ["110", "125"], ["142", "145"], ["142", "151"], ["142", "144"], ["142", "142"], ["142", "143"], ["142", "147"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "6": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>4</SUB>>", "36": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>4</SUB>>", "38": "<(&lt;init&gt;,new StringBuilder())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,for (int test = 0; Some(test &lt; t); test++),for (int test = 0; Some(test &lt; t); test++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int test = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int test = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,test,test &lt; t)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,test++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "8": "<(LOCAL,Deque&lt;Node&gt; dq: ANY)<SUB>7</SUB>>", "56": "<(IDENTIFIER,dq,ANY dq = new ArrayDeque&lt;&gt;())<SUB>7</SUB>>", "58": "<(&lt;init&gt;,new ArrayDeque&lt;&gt;())<SUB>7</SUB>>", "59": "<(offerLast,offerLast(new Node(&quot;&quot;, 0)))<SUB>8</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "63": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "65": "<(&lt;init&gt;,new Node(&quot;&quot;, 0))<SUB>8</SUB>>", "67": "<(LITERAL,&quot;&quot;,new Node(&quot;&quot;, 0))<SUB>8</SUB>>", "69": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "71": "<(LOCAL,int i: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "81": "<(LOCAL,int next: int)<SUB>10</SUB>>", "83": "<(IDENTIFIER,next,int next = nextInt())<SUB>10</SUB>>", "85": "<(IDENTIFIER,fs,nextInt())<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.notEquals,dq.getFirst().val + 1 != next)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,dq.getFirst().val)<SUB>11</SUB>>", "91": "<(IDENTIFIER,dq,getFirst())<SUB>11</SUB>>", "93": "<(LITERAL,1,dq.getFirst().val + 1)<SUB>11</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.equals,next == 1)<SUB>12</SUB>>", "99": "<(LITERAL,1,next == 1)<SUB>12</SUB>>", "101": "<(LOCAL,Node peek: ANY)<SUB>13</SUB>>", "103": "<(IDENTIFIER,peek,ANY peek = getFirst())<SUB>13</SUB>>", "105": "<(IDENTIFIER,dq,getFirst())<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,String p = peek.path.isEmpty() ? String.valueOf(peek.val) : (peek.path + '.' + peek.val))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.conditional,peek.path.isEmpty() ? String.valueOf(peek.val) : (peek.path + '.' + peek.val))<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,peek.path)<SUB>14</SUB>>", "113": "<(FIELD_IDENTIFIER,path,path)<SUB>14</SUB>>", "115": "<(IDENTIFIER,String,valueOf(peek.val))<SUB>14</SUB>>", "117": "<(IDENTIFIER,peek,valueOf(peek.val))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.addition,peek.path + '.' + peek.val)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,peek.path)<SUB>15</SUB>>", "123": "<(FIELD_IDENTIFIER,path,path)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,peek.val)<SUB>15</SUB>>", "127": "<(FIELD_IDENTIFIER,val,val)<SUB>15</SUB>>", "129": "<(IDENTIFIER,dq,addFirst(new Node(p, 1)))<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "133": "<(&lt;operator&gt;.alloc,new Node(p, 1))<SUB>16</SUB>>", "135": "<(IDENTIFIER,$obj4,new Node(p, 1))>", "137": "<(LITERAL,1,new Node(p, 1))<SUB>16</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "141": "<(CONTROL_STRUCTURE,while (dq.getFirst().val + 1 != next),while (dq.getFirst().val + 1 != next))<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.addition,dq.getFirst().val + 1)<SUB>18</SUB>>", "145": "<(getFirst,getFirst())<SUB>18</SUB>>", "147": "<(FIELD_IDENTIFIER,val,val)<SUB>18</SUB>>", "149": "<(IDENTIFIER,next,dq.getFirst().val + 1 != next)<SUB>18</SUB>>", "151": "<(removeFirst,removeFirst())<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,dq.getFirst().val++)<SUB>21</SUB>>", "155": "<(getFirst,getFirst())<SUB>21</SUB>>", "157": "<(FIELD_IDENTIFIER,val,val)<SUB>21</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,dq.getFirst().val)<SUB>24</SUB>>", "163": "<(IDENTIFIER,dq,getFirst())<SUB>24</SUB>>", "165": "<(add,add(sb, dq.getFirst(), dq.getFirst().val))<SUB>26</SUB>>", "167": "<(IDENTIFIER,sb,add(sb, dq.getFirst(), dq.getFirst().val))<SUB>26</SUB>>", "169": "<(IDENTIFIER,dq,getFirst())<SUB>26</SUB>>", "171": "<(getFirst,getFirst())<SUB>26</SUB>>", "173": "<(FIELD_IDENTIFIER,val,val)<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "177": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "179": "<(MODIFIER,PUBLIC)>", "181": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}