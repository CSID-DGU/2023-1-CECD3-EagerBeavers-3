{"edges": [["19", "21"], ["19", "301"], ["19", "302"], ["19", "303"], ["21", "22"], ["21", "25"], ["21", "35"], ["21", "38"], ["21", "55"], ["21", "56"], ["21", "61"], ["21", "299"], ["22", "23"], ["22", "24"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "31"], ["27", "34"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "54"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["46", "53"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "77"], ["71", "78"], ["71", "82"], ["71", "83"], ["71", "87"], ["71", "88"], ["71", "93"], ["71", "4"], ["71", "112"], ["71", "115"], ["71", "116"], ["71", "152"], ["71", "153"], ["71", "161"], ["71", "162"], ["71", "170"], ["71", "171"], ["71", "175"], ["71", "284"], ["73", "74"], ["73", "75"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["104", "105"], ["104", "106"], ["104", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "3"], ["116", "117"], ["116", "121"], ["117", "118"], ["117", "120"], ["118", "119"], ["121", "122"], ["121", "139"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "128"], ["124", "138"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["128", "134"], ["130", "131"], ["130", "133"], ["131", "132"], ["134", "135"], ["134", "137"], ["135", "136"], ["139", "140"], ["139", "151"], ["140", "141"], ["140", "147"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "146"], ["144", "145"], ["147", "148"], ["147", "150"], ["148", "149"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "158"], ["155", "159"], ["155", "160"], ["156", "157"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["164", "167"], ["164", "169"], ["167", "168"], ["171", "172"], ["171", "173"], ["173", "174"], ["175", "176"], ["175", "179"], ["176", "177"], ["177", "178"], ["179", "180"], ["179", "181"], ["179", "185"], ["179", "188"], ["181", "182"], ["181", "183"], ["183", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "198"], ["188", "200"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["200", "202"], ["200", "211"], ["200", "212"], ["200", "221"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "255"], ["222", "223"], ["222", "238"], ["223", "224"], ["223", "235"], ["224", "225"], ["224", "232"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "244"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "273"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "270"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "279"], ["275", "283"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "281"], ["279", "282"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "294"], ["287", "288"], ["287", "293"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["299", "300"], ["22", "30"], ["25", "37"], ["35", "43"], ["38", "60"], ["56", "63"], ["299", "303"], ["24", "22"], ["37", "35"], ["58", "56"], ["63", "66"], ["66", "75"], ["66", "299"], ["69", "66"], ["28", "31"], ["31", "25"], ["41", "49"], ["44", "38"], ["60", "58"], ["73", "80"], ["78", "85"], ["83", "90"], ["88", "95"], ["112", "115"], ["115", "118"], ["153", "167"], ["162", "173"], ["171", "177"], ["284", "69"], ["30", "28"], ["43", "41"], ["75", "73"], ["80", "78"], ["85", "83"], ["90", "88"], ["95", "98"], ["98", "106"], ["98", "114"], ["101", "98"], ["114", "112"], ["117", "127"], ["117", "156"], ["155", "153"], ["164", "162"], ["173", "171"], ["176", "183"], ["176", "291"], ["286", "284"], ["47", "50"], ["50", "44"], ["104", "101"], ["118", "117"], ["122", "144"], ["139", "118"], ["156", "155"], ["167", "164"], ["177", "176"], ["181", "185"], ["185", "190"], ["287", "297"], ["294", "286"], ["49", "47"], ["106", "109"], ["109", "104"], ["140", "139"], ["183", "181"], ["190", "197"], ["193", "177"], ["193", "207"], ["198", "197"], ["288", "287"], ["295", "294"], ["125", "131"], ["128", "122"], ["141", "148"], ["147", "140"], ["195", "193"], ["202", "217"], ["212", "226"], ["289", "288"], ["297", "295"], ["127", "125"], ["130", "135"], ["134", "128"], ["143", "141"], ["148", "150"], ["150", "147"], ["197", "195"], ["204", "202"], ["214", "212"], ["222", "258"], ["222", "198"], ["291", "289"], ["131", "130"], ["135", "134"], ["144", "146"], ["146", "143"], ["205", "208"], ["208", "204"], ["215", "218"], ["218", "214"], ["223", "222"], ["223", "240"], ["238", "222"], ["256", "278"], ["273", "198"], ["207", "205"], ["217", "215"], ["224", "223"], ["224", "235"], ["235", "223"], ["239", "251"], ["244", "238"], ["257", "269"], ["262", "256"], ["225", "224"], ["225", "232"], ["232", "224"], ["240", "239"], ["246", "244"], ["258", "257"], ["264", "262"], ["276", "279"], ["279", "273"], ["226", "225"], ["226", "229"], ["229", "225"], ["247", "254"], ["252", "246"], ["265", "272"], ["270", "264"], ["278", "276"], ["249", "247"], ["254", "252"], ["267", "265"], ["272", "270"], ["251", "249"], ["269", "267"], ["19", "24"], ["20", "303"], ["22", "303"], ["25", "303"], ["31", "303"], ["31", "303"], ["25", "303"], ["35", "303"], ["38", "303"], ["44", "303"], ["47", "303"], ["50", "303"], ["50", "303"], ["44", "303"], ["38", "303"], ["56", "303"], ["56", "303"], ["63", "303"], ["66", "303"], ["66", "303"], ["66", "303"], ["299", "303"], ["299", "303"], ["73", "303"], ["78", "303"], ["83", "303"], ["83", "303"], ["88", "303"], ["90", "303"], ["88", "303"], ["88", "303"], ["95", "303"], ["98", "303"], ["98", "303"], ["98", "303"], ["112", "303"], ["115", "303"], ["118", "303"], ["117", "303"], ["117", "303"], ["153", "303"], ["153", "303"], ["153", "303"], ["162", "303"], ["164", "303"], ["162", "303"], ["162", "303"], ["171", "303"], ["171", "303"], ["171", "303"], ["177", "303"], ["176", "303"], ["176", "303"], ["284", "303"], ["288", "303"], ["287", "303"], ["286", "303"], ["294", "303"], ["286", "303"], ["284", "303"], ["284", "303"], ["69", "303"], ["181", "303"], ["181", "303"], ["185", "303"], ["185", "303"], ["185", "303"], ["190", "303"], ["193", "303"], ["193", "303"], ["193", "303"], ["204", "303"], ["204", "303"], ["202", "303"], ["202", "303"], ["212", "303"], ["214", "303"], ["214", "303"], ["212", "303"], ["212", "303"], ["226", "303"], ["225", "303"], ["229", "303"], ["229", "303"], ["225", "303"], ["224", "303"], ["232", "303"], ["224", "303"], ["223", "303"], ["235", "303"], ["235", "303"], ["223", "303"], ["222", "303"], ["238", "303"], ["244", "303"], ["238", "303"], ["222", "303"], ["222", "303"], ["256", "303"], ["262", "303"], ["256", "303"], ["256", "303"], ["276", "303"], ["279", "303"], ["279", "303"], ["279", "303"], ["279", "303"], ["273", "303"], ["198", "303"], ["125", "303"], ["128", "303"], ["128", "303"], ["134", "303"], ["128", "303"], ["122", "303"], ["139", "303"], ["139", "303"], ["104", "303"], ["104", "303"], ["104", "303"], ["101", "303"], ["104", "303"], ["19", "20"], ["19", "22"], ["19", "35"], ["22", "25"], ["19", "25"], ["28", "25"], ["31", "25"], ["35", "38"], ["19", "38"], ["47", "38"], ["44", "38"], ["19", "63"], ["85", "299"], ["135", "299"], ["19", "299"], ["19", "28"], ["19", "34"], ["19", "41"], ["19", "54"], ["63", "66"], ["69", "66"], ["19", "66"], ["56", "66"], ["66", "69"], ["19", "69"], ["75", "73"], ["80", "78"], ["85", "83"], ["90", "88"], ["90", "88"], ["19", "112"], ["155", "153"], ["155", "153"], ["155", "153"], ["164", "162"], ["164", "162"], ["164", "162"], ["173", "171"], ["28", "31"], ["19", "31"], ["41", "44"], ["19", "44"], ["47", "44"], ["50", "44"], ["19", "95"], ["112", "115"], ["19", "115"], ["38", "284"], ["19", "284"], ["171", "284"], ["185", "284"], ["19", "47"], ["19", "53"], ["85", "75"], ["135", "75"], ["19", "75"], ["75", "80"], ["19", "80"], ["80", "85"], ["19", "85"], ["73", "90"], ["19", "90"], ["78", "90"], ["95", "98"], ["101", "98"], ["19", "98"], ["90", "98"], ["98", "101"], ["19", "101"], ["118", "117"], ["19", "117"], ["19", "139"], ["156", "155"], ["19", "155"], ["19", "164"], ["167", "164"], ["115", "173"], ["148", "173"], ["19", "173"], ["177", "176"], ["183", "181"], ["181", "185"], ["19", "185"], ["171", "286"], ["185", "286"], ["19", "286"], ["47", "50"], ["19", "50"], ["19", "104"], ["88", "104"], ["109", "104"], ["109", "104"], ["83", "118"], ["19", "118"], ["115", "122"], ["148", "122"], ["19", "122"], ["125", "122"], ["128", "122"], ["19", "156"], ["19", "167"], ["173", "177"], ["183", "177"], ["273", "177"], ["19", "177"], ["19", "190"], ["171", "287"], ["185", "287"], ["19", "287"], ["171", "294"], ["185", "294"], ["19", "294"], ["19", "109"], ["19", "125"], ["19", "138"], ["177", "183"], ["19", "183"], ["190", "193"], ["198", "193"], ["19", "193"], ["153", "193"], ["193", "198"], ["19", "198"], ["181", "202"], ["19", "202"], ["153", "202"], ["181", "212"], ["19", "212"], ["162", "212"], ["171", "288"], ["185", "288"], ["19", "288"], ["125", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["134", "128"], ["134", "128"], ["131", "130"], ["19", "130"], ["135", "134"], ["19", "134"], ["144", "148"], ["19", "148"], ["181", "204"], ["19", "204"], ["153", "204"], ["181", "214"], ["19", "214"], ["162", "214"], ["223", "222"], ["223", "222"], ["238", "222"], ["238", "222"], ["19", "256"], ["85", "131"], ["135", "131"], ["19", "131"], ["131", "135"], ["19", "135"], ["122", "144"], ["19", "144"], ["224", "223"], ["224", "223"], ["235", "223"], ["235", "223"], ["256", "238"], ["19", "238"], ["183", "273"], ["19", "273"], ["276", "273"], ["279", "273"], ["225", "224"], ["225", "224"], ["232", "224"], ["232", "224"], ["212", "235"], ["232", "235"], ["19", "235"], ["90", "235"], ["19", "244"], ["19", "262"], ["19", "276"], ["19", "283"], ["226", "225"], ["226", "225"], ["229", "225"], ["229", "225"], ["212", "232"], ["19", "232"], ["276", "279"], ["19", "279"], ["226", "279"], ["229", "279"], ["212", "279"], ["232", "279"], ["235", "279"], ["202", "226"], ["19", "226"], ["226", "229"], ["19", "229"], ["98", "229"], ["66", "167"], ["66", "114"], ["66", "95"], ["66", "162"], ["66", "112"], ["66", "80"], ["66", "118"], ["66", "288"], ["66", "88"], ["66", "66"], ["66", "176"], ["66", "177"], ["66", "117"], ["66", "297"], ["66", "115"], ["66", "73"], ["66", "98"], ["66", "75"], ["66", "85"], ["66", "69"], ["66", "153"], ["66", "291"], ["66", "284"], ["66", "90"], ["66", "173"], ["66", "289"], ["66", "164"], ["66", "155"], ["66", "286"], ["66", "295"], ["66", "171"], ["66", "287"], ["66", "294"], ["66", "83"], ["66", "156"], ["66", "78"], ["98", "104"], ["98", "109"], ["98", "98"], ["98", "101"], ["98", "106"], ["117", "146"], ["117", "128"], ["117", "150"], ["117", "134"], ["117", "148"], ["117", "118"], ["117", "127"], ["117", "141"], ["117", "122"], ["117", "140"], ["117", "147"], ["117", "135"], ["117", "117"], ["117", "131"], ["117", "144"], ["117", "130"], ["117", "139"], ["117", "143"], ["117", "125"], ["176", "181"], ["176", "195"], ["176", "190"], ["176", "176"], ["176", "177"], ["176", "185"], ["176", "197"], ["176", "183"], ["176", "193"], ["193", "214"], ["193", "215"], ["193", "226"], ["193", "204"], ["193", "208"], ["193", "195"], ["193", "224"], ["193", "202"], ["193", "217"], ["193", "222"], ["193", "225"], ["193", "197"], ["193", "198"], ["193", "223"], ["193", "207"], ["193", "212"], ["193", "205"], ["193", "193"], ["193", "218"], ["222", "272"], ["222", "256"], ["222", "262"], ["222", "264"], ["222", "258"], ["222", "276"], ["222", "278"], ["222", "269"], ["222", "257"], ["222", "273"], ["222", "279"], ["222", "267"], ["222", "265"], ["222", "270"], ["223", "240"], ["223", "247"], ["223", "238"], ["223", "249"], ["223", "254"], ["223", "244"], ["223", "246"], ["223", "239"], ["223", "252"], ["223", "251"], ["224", "235"], ["225", "232"], ["226", "229"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,br,br = new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "25": "<(&lt;init&gt;,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "29": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "31": "<(&lt;init&gt;,new FileReader(&quot;input.txt&quot;))<SUB>2</SUB>>", "33": "<(LITERAL,&quot;input.txt&quot;,new FileReader(&quot;input.txt&quot;))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(new BufferedWriter(new FileWriter(&quot;output.txt&quot;))))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new FileWriter(&quot;output.txt&quot;))))<SUB>3</SUB>>", "39": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new FileWriter(&quot;output.txt&quot;))))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj3,new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new FileWriter(&quot;output.txt&quot;))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,new FileWriter(&quot;output.txt&quot;))>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "55": "<(LOCAL,int qq: int)<SUB>5</SUB>>", "57": "<(IDENTIFIER,qq,int qq = Integer.MAX_VALUE)<SUB>5</SUB>>", "59": "<(IDENTIFIER,Integer,int qq = Integer.MAX_VALUE)<SUB>5</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int casenum = 1; Some(casenum &lt;= qq); casenum++),for (int casenum = 1; Some(casenum &lt;= qq); casenum++))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int casenum = 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,int casenum = 1)<SUB>7</SUB>>", "67": "<(IDENTIFIER,casenum,casenum &lt;= qq)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,casenum++)<SUB>7</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.assignment,int r = readInt())<SUB>8</SUB>>", "75": "<(readInt,readInt())<SUB>8</SUB>>", "77": "<(LOCAL,int c: int)<SUB>9</SUB>>", "79": "<(IDENTIFIER,c,int c = readInt())<SUB>9</SUB>>", "81": "<(IDENTIFIER,this,readInt())<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.assignment,int n = readInt())<SUB>10</SUB>>", "85": "<(readInt,readInt())<SUB>10</SUB>>", "87": "<(LOCAL,int[][] dist: int[][])<SUB>11</SUB>>", "89": "<(IDENTIFIER,dist,int[][] dist = new int[r][c])<SUB>11</SUB>>", "91": "<(IDENTIFIER,r,new int[r][c])<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,i &lt; r)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "105": "<(IDENTIFIER,Arrays,fill(dist[i], 1 &lt;&lt; 25))<SUB>13</SUB>>", "107": "<(IDENTIFIER,dist,fill(dist[i], 1 &lt;&lt; 25))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 25)<SUB>13</SUB>>", "111": "<(LITERAL,25,1 &lt;&lt; 25)<SUB>13</SUB>>", "112": "<(&lt;operator&gt;.assignment,ANY q = new LinkedList&lt;State&gt;())<SUB>15</SUB>>", "114": "<(&lt;operator&gt;.alloc,new LinkedList&lt;State&gt;())<SUB>15</SUB>>", "3": "<(IDENTIFIER,q,new LinkedList&lt;State&gt;())<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.greaterThan,n-- &gt; 0)<SUB>16</SUB>>", "119": "<(IDENTIFIER,n,n--)<SUB>16</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "123": "<(IDENTIFIER,q,add(new State(readInt() - 1, readInt() - 1)))<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "127": "<(&lt;operator&gt;.alloc,new State(readInt() - 1, readInt() - 1))<SUB>17</SUB>>", "129": "<(IDENTIFIER,$obj6,new State(readInt() - 1, readInt() - 1))>", "131": "<(readInt,readInt())<SUB>17</SUB>>", "133": "<(LITERAL,1,readInt() - 1)<SUB>17</SUB>>", "135": "<(readInt,readInt())<SUB>17</SUB>>", "137": "<(LITERAL,1,readInt() - 1)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.assignment,dist[q.peekLast().x][q.peekLast().y] = 0)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,dist[q.peekLast().x])<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,q.peekLast().x)<SUB>18</SUB>>", "145": "<(IDENTIFIER,q,peekLast())<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,q.peekLast().y)<SUB>18</SUB>>", "149": "<(IDENTIFIER,q,peekLast())<SUB>18</SUB>>", "151": "<(LITERAL,0,dist[q.peekLast().x][q.peekLast().y] = 0)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.assignment,int[] dx = new int[] { -1, 1, 0, 0 })<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.arrayInitializer,new int[] { -1, 1, 0, 0 })<SUB>20</SUB>>", "157": "<(LITERAL,1,-1)<SUB>20</SUB>>", "159": "<(LITERAL,0,new int[] { -1, 1, 0, 0 })<SUB>20</SUB>>", "161": "<(LOCAL,int[] dy: int[])<SUB>21</SUB>>", "163": "<(IDENTIFIER,dy,int[] dy = new int[] { 0, 0, -1, 1 })<SUB>21</SUB>>", "165": "<(LITERAL,0,new int[] { 0, 0, -1, 1 })<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.minus,-1)<SUB>21</SUB>>", "169": "<(LITERAL,1,new int[] { 0, 0, -1, 1 })<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.assignment,ANY ret = peekLast())<SUB>22</SUB>>", "173": "<(peekLast,peekLast())<SUB>22</SUB>>", "175": "<(CONTROL_STRUCTURE,while (!q.isEmpty()),while (!q.isEmpty()))<SUB>23</SUB>>", "177": "<(isEmpty,isEmpty())<SUB>23</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.assignment,ANY curr = removeFirst())<SUB>24</SUB>>", "183": "<(removeFirst,removeFirst())<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.assignment,ret = curr)<SUB>25</SUB>>", "187": "<(IDENTIFIER,curr,ret = curr)<SUB>25</SUB>>", "189": "<(LOCAL,int k: int)<SUB>26</SUB>>", "191": "<(IDENTIFIER,k,int k = 0)<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.lessThan,k &lt; dx.length)<SUB>26</SUB>>", "195": "<(&lt;operator&gt;.fieldAccess,dx.length)<SUB>26</SUB>>", "197": "<(FIELD_IDENTIFIER,length,length)<SUB>26</SUB>>", "199": "<(IDENTIFIER,k,k++)<SUB>26</SUB>>", "201": "<(LOCAL,int nx: int)<SUB>27</SUB>>", "203": "<(IDENTIFIER,nx,int nx = curr.x + dx[k])<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.fieldAccess,curr.x)<SUB>27</SUB>>", "207": "<(FIELD_IDENTIFIER,x,x)<SUB>27</SUB>>", "209": "<(IDENTIFIER,dx,curr.x + dx[k])<SUB>27</SUB>>", "211": "<(LOCAL,int ny: int)<SUB>28</SUB>>", "213": "<(IDENTIFIER,ny,int ny = curr.y + dy[k])<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.fieldAccess,curr.y)<SUB>28</SUB>>", "217": "<(FIELD_IDENTIFIER,y,y)<SUB>28</SUB>>", "219": "<(IDENTIFIER,dy,curr.y + dy[k])<SUB>28</SUB>>", "221": "<(CONTROL_STRUCTURE,if (nx &gt;= 0 &amp;&amp; nx &lt; r &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; c &amp;&amp; dist[nx][ny] &gt; 1 + dist[curr.x][curr.y]),if (nx &gt;= 0 &amp;&amp; nx &lt; r &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; c &amp;&amp; dist[nx][ny] &gt; 1 + dist[curr.x][curr.y]))<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; nx &lt; r &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; c)<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; nx &lt; r)<SUB>29</SUB>>", "227": "<(IDENTIFIER,nx,nx &gt;= 0)<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.lessThan,nx &lt; r)<SUB>29</SUB>>", "231": "<(IDENTIFIER,r,nx &lt; r)<SUB>29</SUB>>", "233": "<(IDENTIFIER,ny,ny &gt;= 0)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.lessThan,ny &lt; c)<SUB>29</SUB>>", "237": "<(IDENTIFIER,c,ny &lt; c)<SUB>29</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,dist[nx][ny])<SUB>29</SUB>>", "241": "<(IDENTIFIER,dist,dist[nx][ny] &gt; 1 + dist[curr.x][curr.y])<SUB>29</SUB>>", "243": "<(IDENTIFIER,ny,dist[nx][ny] &gt; 1 + dist[curr.x][curr.y])<SUB>29</SUB>>", "245": "<(LITERAL,1,1 + dist[curr.x][curr.y])<SUB>29</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dist[curr.x])<SUB>29</SUB>>", "249": "<(&lt;operator&gt;.fieldAccess,curr.x)<SUB>29</SUB>>", "251": "<(FIELD_IDENTIFIER,x,x)<SUB>29</SUB>>", "253": "<(IDENTIFIER,curr,1 + dist[curr.x][curr.y])<SUB>29</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dist[nx][ny])<SUB>30</SUB>>", "259": "<(IDENTIFIER,dist,dist[nx][ny] = 1 + dist[curr.x][curr.y])<SUB>30</SUB>>", "261": "<(IDENTIFIER,ny,dist[nx][ny] = 1 + dist[curr.x][curr.y])<SUB>30</SUB>>", "263": "<(LITERAL,1,1 + dist[curr.x][curr.y])<SUB>30</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,dist[curr.x])<SUB>30</SUB>>", "267": "<(&lt;operator&gt;.fieldAccess,curr.x)<SUB>30</SUB>>", "269": "<(FIELD_IDENTIFIER,x,x)<SUB>30</SUB>>", "271": "<(IDENTIFIER,curr,1 + dist[curr.x][curr.y])<SUB>30</SUB>>", "273": "<(add,add(new State(nx, ny)))<SUB>31</SUB>>", "275": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "277": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "279": "<(&lt;init&gt;,new State(nx, ny))<SUB>31</SUB>>", "281": "<(IDENTIFIER,nx,new State(nx, ny))<SUB>31</SUB>>", "283": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "285": "<(IDENTIFIER,pw,println(ret.x + 1 + &quot; &quot; + (ret.y + 1)))<SUB>35</SUB>>", "287": "<(&lt;operator&gt;.addition,ret.x + 1 + &quot; &quot;)<SUB>35</SUB>>", "289": "<(&lt;operator&gt;.fieldAccess,ret.x)<SUB>35</SUB>>", "291": "<(FIELD_IDENTIFIER,x,x)<SUB>35</SUB>>", "293": "<(LITERAL,&quot; &quot;,ret.x + 1 + &quot; &quot;)<SUB>35</SUB>>", "295": "<(&lt;operator&gt;.fieldAccess,ret.y)<SUB>35</SUB>>", "297": "<(FIELD_IDENTIFIER,y,y)<SUB>35</SUB>>", "299": "<(exitImmediately,exitImmediately())<SUB>37</SUB>>", "301": "<(MODIFIER,PUBLIC)>", "303": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}