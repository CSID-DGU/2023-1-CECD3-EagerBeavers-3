{"edges": [["19", "21"], ["19", "79"], ["19", "80"], ["19", "81"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "38"], ["21", "41"], ["21", "44"], ["21", "74"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["48", "57"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "63"], ["57", "68"], ["58", "59"], ["58", "60"], ["58", "61"], ["58", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["38", "41"], ["41", "45"], ["74", "81"], ["24", "22"], ["29", "27"], ["34", "32"], ["45", "53"], ["45", "77"], ["75", "74"], ["50", "58"], ["77", "75"], ["52", "50"], ["58", "65"], ["58", "71"], ["63", "45"], ["53", "52"], ["65", "63"], ["69", "45"], ["71", "69"], ["19", "24"], ["20", "81"], ["22", "81"], ["25", "81"], ["27", "81"], ["32", "81"], ["34", "81"], ["32", "81"], ["32", "81"], ["38", "81"], ["41", "81"], ["41", "81"], ["45", "81"], ["45", "81"], ["74", "81"], ["74", "81"], ["74", "81"], ["52", "81"], ["50", "81"], ["50", "81"], ["58", "81"], ["58", "81"], ["58", "81"], ["71", "81"], ["69", "81"], ["69", "81"], ["65", "81"], ["63", "81"], ["63", "81"], ["58", "81"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["19", "38"], ["27", "41"], ["19", "41"], ["22", "25"], ["19", "25"], ["45", "74"], ["19", "74"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["38", "45"], ["69", "45"], ["19", "45"], ["41", "45"], ["63", "45"], ["52", "50"], ["52", "50"], ["65", "63"], ["65", "63"], ["45", "52"], ["19", "52"], ["45", "52"], ["19", "58"], ["27", "58"], ["32", "58"], ["50", "58"], ["58", "69"], ["19", "69"], ["45", "53"], ["19", "53"], ["45", "53"], ["58", "65"], ["19", "65"], ["58", "71"], ["19", "71"], ["45", "58"], ["45", "52"], ["45", "53"], ["45", "45"], ["45", "50"], ["58", "71"], ["58", "69"], ["58", "63"], ["58", "65"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,long k: long)<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,long k = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(LOCAL,long right: long)<SUB>5</SUB>>", "39": "<(IDENTIFIER,left,long left = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,long right = n)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,long right = n)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.lessEqualsThan,left &lt;= right)<SUB>6</SUB>>", "47": "<(IDENTIFIER,right,left &lt;= right)<SUB>6</SUB>>", "49": "<(LOCAL,long middle: long)<SUB>7</SUB>>", "51": "<(IDENTIFIER,middle,long middle = (left + right) / 2)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.addition,left + right)<SUB>7</SUB>>", "55": "<(IDENTIFIER,right,left + right)<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,if (ok(n, k, middle)),if (ok(n, k, middle)))<SUB>8</SUB>>", "59": "<(IDENTIFIER,this,ok(n, k, middle))<SUB>8</SUB>>", "61": "<(IDENTIFIER,k,ok(n, k, middle))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,right = middle - 1)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.subtraction,middle - 1)<SUB>8</SUB>>", "67": "<(LITERAL,1,middle - 1)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,left = middle + 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.addition,middle + 1)<SUB>9</SUB>>", "73": "<(LITERAL,1,middle + 1)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "79": "<(MODIFIER,PUBLIC)>", "81": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}