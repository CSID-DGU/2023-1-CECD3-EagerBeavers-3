{"edges": [["21", "22"], ["21", "23"], ["21", "174"], ["21", "175"], ["21", "176"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "6"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "77"], ["23", "87"], ["23", "88"], ["23", "91"], ["23", "169"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "5"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "61"], ["55", "62"], ["55", "66"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "72"], ["68", "76"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "75"], ["77", "78"], ["77", "79"], ["77", "80"], ["80", "81"], ["80", "84"], ["80", "86"], ["81", "82"], ["81", "83"], ["84", "85"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "101"], ["91", "103"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["103", "105"], ["103", "122"], ["103", "123"], ["103", "144"], ["103", "145"], ["103", "150"], ["103", "161"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "121"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "133"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "143"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["158", "159"], ["159", "160"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["41", "44"], ["44", "47"], ["77", "88"], ["88", "93"], ["169", "176"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "41"], ["47", "50"], ["50", "59"], ["50", "83"], ["53", "50"], ["93", "98"], ["96", "109"], ["96", "172"], ["101", "98"], ["170", "169"], ["30", "28"], ["57", "64"], ["62", "71"], ["66", "53"], ["81", "84"], ["84", "77"], ["98", "96"], ["105", "129"], ["123", "147"], ["145", "154"], ["172", "170"], ["59", "57"], ["64", "62"], ["83", "81"], ["107", "105"], ["125", "123"], ["147", "145"], ["151", "159"], ["151", "162"], ["162", "166"], ["162", "101"], ["69", "72"], ["72", "66"], ["108", "116"], ["113", "107"], ["126", "138"], ["133", "125"], ["152", "151"], ["159", "162"], ["166", "101"], ["71", "69"], ["109", "112"], ["112", "108"], ["114", "113"], ["127", "132"], ["132", "126"], ["134", "133"], ["154", "152"], ["115", "114"], ["129", "127"], ["135", "134"], ["116", "119"], ["119", "115"], ["136", "141"], ["141", "135"], ["138", "136"], ["21", "26"], ["22", "176"], ["24", "176"], ["27", "176"], ["27", "176"], ["32", "176"], ["37", "176"], ["39", "176"], ["37", "176"], ["37", "176"], ["41", "176"], ["44", "176"], ["50", "176"], ["77", "176"], ["81", "176"], ["84", "176"], ["84", "176"], ["77", "176"], ["88", "176"], ["93", "176"], ["96", "176"], ["98", "176"], ["96", "176"], ["96", "176"], ["169", "176"], ["169", "176"], ["169", "176"], ["113", "176"], ["107", "176"], ["105", "176"], ["105", "176"], ["136", "176"], ["136", "176"], ["133", "176"], ["125", "176"], ["123", "176"], ["123", "176"], ["147", "176"], ["147", "176"], ["145", "176"], ["145", "176"], ["152", "176"], ["151", "176"], ["151", "176"], ["159", "176"], ["162", "176"], ["162", "176"], ["162", "176"], ["166", "176"], ["101", "176"], ["57", "176"], ["64", "176"], ["62", "176"], ["62", "176"], ["72", "176"], ["72", "176"], ["72", "176"], ["72", "176"], ["66", "176"], ["53", "176"], ["152", "176"], ["77", "176"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "41"], ["21", "88"], ["24", "27"], ["21", "27"], ["41", "44"], ["21", "44"], ["21", "47"], ["21", "77"], ["44", "77"], ["66", "77"], ["81", "77"], ["84", "77"], ["21", "93"], ["88", "169"], ["159", "169"], ["166", "169"], ["21", "169"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["47", "50"], ["53", "50"], ["21", "50"], ["32", "50"], ["50", "53"], ["21", "53"], ["59", "57"], ["64", "62"], ["21", "81"], ["21", "86"], ["93", "96"], ["101", "96"], ["21", "96"], ["98", "96"], ["98", "96"], ["21", "101"], ["116", "101"], ["113", "105"], ["113", "105"], ["125", "123"], ["125", "123"], ["147", "145"], ["147", "145"], ["44", "66"], ["21", "66"], ["69", "66"], ["72", "66"], ["81", "84"], ["21", "84"], ["50", "98"], ["21", "98"], ["39", "59"], ["64", "59"], ["21", "59"], ["59", "64"], ["21", "64"], ["21", "69"], ["21", "76"], ["113", "107"], ["113", "107"], ["133", "125"], ["133", "125"], ["123", "147"], ["21", "147"], ["105", "147"], ["152", "151"], ["152", "151"], ["21", "151"], ["154", "162"], ["21", "162"], ["154", "162"], ["21", "166"], ["69", "72"], ["21", "72"], ["57", "72"], ["62", "72"], ["21", "113"], ["21", "133"], ["21", "152"], ["154", "152"], ["154", "152"], ["88", "159"], ["166", "159"], ["21", "159"], ["88", "166"], ["159", "166"], ["77", "109"], ["136", "109"], ["21", "109"], ["96", "109"], ["21", "114"], ["116", "127"], ["21", "127"], ["116", "127"], ["21", "134"], ["145", "154"], ["21", "154"], ["37", "154"], ["162", "154"], ["116", "129"], ["21", "129"], ["109", "116"], ["21", "116"], ["109", "116"], ["127", "136"], ["21", "136"], ["116", "136"], ["21", "138"], ["116", "138"], ["50", "64"], ["50", "57"], ["50", "66"], ["50", "72"], ["50", "69"], ["50", "50"], ["50", "59"], ["50", "71"], ["50", "53"], ["50", "62"], ["96", "107"], ["96", "115"], ["96", "141"], ["96", "96"], ["96", "98"], ["96", "113"], ["96", "136"], ["96", "116"], ["96", "154"], ["96", "145"], ["96", "114"], ["96", "132"], ["96", "151"], ["96", "119"], ["96", "162"], ["96", "123"], ["96", "112"], ["96", "129"], ["96", "134"], ["96", "138"], ["96", "101"], ["96", "126"], ["96", "152"], ["96", "105"], ["96", "147"], ["96", "135"], ["96", "127"], ["96", "108"], ["96", "125"], ["96", "109"], ["96", "133"], ["151", "159"], ["162", "166"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "6": "<(LOCAL,List&lt;Point&gt; houses: ANY)<SUB>5</SUB>>", "42": "<(IDENTIFIER,houses,ANY houses = new ArrayList&lt;Point&gt;())<SUB>5</SUB>>", "44": "<(&lt;init&gt;,new ArrayList&lt;Point&gt;())<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(LOCAL,int a: int)<SUB>8</SUB>>", "63": "<(IDENTIFIER,a,int a = nextInt())<SUB>8</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,houses,add(new Point(x, a)))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "71": "<(&lt;operator&gt;.alloc,new Point(x, a))<SUB>9</SUB>>", "73": "<(IDENTIFIER,$obj2,new Point(x, a))>", "75": "<(IDENTIFIER,a,new Point(x, a))<SUB>9</SUB>>", "77": "<(sort,sort(houses, new Comparator&lt;Point&gt;() {\\012\\012    @Override\\012    public int compare(Point o1, Point o2) {\\012        return ((Integer) o1.x).compareTo(o2.x);\\012    }\\012}))<SUB>11</SUB>>", "79": "<(IDENTIFIER,houses,sort(houses, new Comparator&lt;Point&gt;() {\\012\\012    @Override\\012    public int compare(Point o1, Point o2) {\\012        return ((Integer) o1.x).compareTo(o2.x);\\012    }\\012}))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "83": "<(&lt;operator&gt;.alloc,new Comparator&lt;Point&gt;() {\\012\\012    @Override\\012    public int compare(Point o1, Point o2) {\\012        return ((Integer) o1.x).compareTo(o2.x);\\012    }\\012})<SUB>11</SUB>>", "85": "<(IDENTIFIER,$obj3,new Comparator&lt;Point&gt;() {\\012\\012    @Override\\012    public int compare(Point o1, Point o2) {\\012        return ((Integer) o1.x).compareTo(o2.x);\\012    }\\012})>", "87": "<(LOCAL,int pos: int)<SUB>18</SUB>>", "89": "<(IDENTIFIER,pos,int pos = 2)<SUB>18</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>19</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>19</SUB>>", "99": "<(IDENTIFIER,n,n - 1)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.assignment,double end = houses.get(i).x + (houses.get(i).y + 0.0) / 2)<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.addition,houses.get(i).x + (houses.get(i).y + 0.0) / 2)<SUB>20</SUB>>", "109": "<(get,get(i))<SUB>20</SUB>>", "111": "<(IDENTIFIER,i,get(i))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.division,(houses.get(i).y + 0.0) / 2)<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,houses.get(i).y)<SUB>20</SUB>>", "117": "<(IDENTIFIER,houses,get(i))<SUB>20</SUB>>", "119": "<(FIELD_IDENTIFIER,y,y)<SUB>20</SUB>>", "121": "<(LITERAL,2,(houses.get(i).y + 0.0) / 2)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.assignment,double start = houses.get(i + 1).x - (houses.get(i + 1).y + 0.0) / 2)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.subtraction,houses.get(i + 1).x - (houses.get(i + 1).y + 0.0) / 2)<SUB>21</SUB>>", "127": "<(get,get(i + 1))<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.addition,i + 1)<SUB>21</SUB>>", "131": "<(LITERAL,1,i + 1)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.division,(houses.get(i + 1).y + 0.0) / 2)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,houses.get(i + 1).y)<SUB>21</SUB>>", "137": "<(IDENTIFIER,houses,get(i + 1))<SUB>21</SUB>>", "139": "<(IDENTIFIER,i,i + 1)<SUB>21</SUB>>", "141": "<(FIELD_IDENTIFIER,y,y)<SUB>21</SUB>>", "143": "<(LITERAL,2,(houses.get(i + 1).y + 0.0) / 2)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.assignment,double diff = start - end)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.subtraction,start - end)<SUB>23</SUB>>", "149": "<(IDENTIFIER,end,start - end)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.lessThan,Math.abs(diff - t) &lt; 0.0000001)<SUB>25</SUB>>", "153": "<(IDENTIFIER,Math,Math.abs(diff - t))<SUB>25</SUB>>", "155": "<(IDENTIFIER,diff,diff - t)<SUB>25</SUB>>", "157": "<(LITERAL,0.0000001,Math.abs(diff - t) &lt; 0.0000001)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,pos++)<SUB>26</SUB>>", "161": "<(CONTROL_STRUCTURE,if (diff &gt; t),if (diff &gt; t))<SUB>28</SUB>>", "163": "<(IDENTIFIER,diff,diff &gt; t)<SUB>28</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "167": "<(IDENTIFIER,pos,pos += 2)<SUB>29</SUB>>", "169": "<(println,System.out.println(pos))<SUB>32</SUB>>", "171": "<(IDENTIFIER,System,System.out.println(pos))<SUB>32</SUB>>", "173": "<(IDENTIFIER,pos,System.out.println(pos))<SUB>32</SUB>>", "175": "<(MODIFIER,STATIC)>"}}