{"edges": [["23", "24"], ["23", "25"], ["23", "172"], ["23", "173"], ["23", "174"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "51"], ["25", "55"], ["25", "56"], ["25", "61"], ["25", "62"], ["25", "6"], ["25", "66"], ["25", "69"], ["25", "70"], ["25", "95"], ["25", "96"], ["25", "8"], ["25", "99"], ["25", "102"], ["25", "103"], ["25", "106"], ["25", "107"], ["25", "111"], ["25", "112"], ["25", "116"], ["25", "167"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["69", "5"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "90"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "7"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "119"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "125"], ["119", "132"], ["119", "133"], ["119", "137"], ["119", "155"], ["121", "122"], ["121", "123"], ["123", "124"], ["125", "126"], ["125", "130"], ["126", "127"], ["126", "129"], ["127", "128"], ["130", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["137", "140"], ["138", "139"], ["140", "141"], ["140", "142"], ["140", "146"], ["142", "143"], ["142", "144"], ["144", "145"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["153", "154"], ["155", "156"], ["155", "160"], ["156", "157"], ["156", "159"], ["157", "158"], ["160", "161"], ["160", "163"], ["161", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["26", "33"], ["29", "43"], ["41", "48"], ["46", "53"], ["51", "58"], ["56", "64"], ["62", "68"], ["66", "69"], ["69", "72"], ["96", "101"], ["99", "102"], ["102", "103"], ["103", "109"], ["107", "114"], ["112", "117"], ["167", "174"], ["28", "26"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["64", "62"], ["68", "66"], ["72", "75"], ["75", "82"], ["75", "96"], ["78", "75"], ["101", "99"], ["109", "107"], ["114", "112"], ["117", "123"], ["117", "170"], ["168", "167"], ["31", "38"], ["34", "29"], ["81", "92"], ["90", "78"], ["121", "127"], ["133", "138"], ["170", "168"], ["33", "31"], ["36", "34"], ["82", "87"], ["85", "81"], ["92", "90"], ["123", "121"], ["126", "170"], ["126", "135"], ["135", "133"], ["138", "144"], ["138", "157"], ["156", "117"], ["156", "161"], ["38", "36"], ["87", "85"], ["127", "126"], ["142", "148"], ["157", "156"], ["161", "165"], ["163", "117"], ["144", "142"], ["147", "138"], ["147", "153"], ["165", "163"], ["148", "147"], ["153", "138"], ["23", "28"], ["24", "174"], ["26", "174"], ["34", "174"], ["34", "174"], ["34", "174"], ["29", "174"], ["41", "174"], ["48", "174"], ["46", "174"], ["46", "174"], ["53", "174"], ["51", "174"], ["51", "174"], ["56", "174"], ["58", "174"], ["56", "174"], ["56", "174"], ["62", "174"], ["62", "174"], ["62", "174"], ["66", "174"], ["72", "174"], ["75", "174"], ["75", "174"], ["75", "174"], ["96", "174"], ["99", "174"], ["102", "174"], ["103", "174"], ["107", "174"], ["109", "174"], ["107", "174"], ["107", "174"], ["114", "174"], ["112", "174"], ["117", "174"], ["117", "174"], ["121", "174"], ["123", "174"], ["121", "174"], ["127", "174"], ["126", "174"], ["126", "174"], ["133", "174"], ["133", "174"], ["138", "174"], ["138", "174"], ["157", "174"], ["156", "174"], ["156", "174"], ["156", "174"], ["161", "174"], ["163", "174"], ["165", "174"], ["163", "174"], ["163", "174"], ["142", "174"], ["142", "174"], ["148", "174"], ["148", "174"], ["147", "174"], ["147", "174"], ["153", "174"], ["167", "174"], ["167", "174"], ["167", "174"], ["85", "174"], ["85", "174"], ["81", "174"], ["81", "174"], ["90", "174"], ["90", "174"], ["78", "174"], ["23", "24"], ["23", "26"], ["43", "41"], ["48", "46"], ["48", "46"], ["53", "51"], ["58", "56"], ["58", "56"], ["64", "62"], ["23", "66"], ["23", "96"], ["23", "99"], ["109", "107"], ["114", "112"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["66", "69"], ["23", "69"], ["23", "72"], ["99", "102"], ["23", "102"], ["102", "103"], ["23", "103"], ["69", "103"], ["90", "103"], ["96", "167"], ["161", "167"], ["23", "167"], ["23", "31"], ["23", "39"], ["29", "43"], ["23", "43"], ["23", "48"], ["41", "48"], ["43", "53"], ["23", "53"], ["51", "58"], ["23", "58"], ["46", "64"], ["23", "64"], ["72", "75"], ["78", "75"], ["23", "75"], ["64", "75"], ["75", "78"], ["23", "78"], ["85", "81"], ["85", "81"], ["103", "109"], ["23", "109"], ["103", "114"], ["23", "114"], ["112", "117"], ["123", "117"], ["23", "117"], ["123", "121"], ["135", "133"], ["31", "34"], ["23", "34"], ["69", "90"], ["23", "90"], ["62", "90"], ["81", "90"], ["48", "85"], ["23", "85"], ["56", "85"], ["117", "123"], ["23", "123"], ["127", "126"], ["23", "126"], ["127", "135"], ["23", "135"], ["133", "138"], ["144", "138"], ["153", "138"], ["23", "138"], ["144", "142"], ["157", "156"], ["107", "156"], ["163", "156"], ["23", "156"], ["165", "163"], ["109", "127"], ["157", "127"], ["165", "127"], ["23", "127"], ["135", "157"], ["23", "157"], ["96", "161"], ["23", "161"], ["138", "144"], ["23", "144"], ["148", "147"], ["148", "147"], ["23", "147"], ["157", "165"], ["23", "165"], ["142", "148"], ["23", "148"], ["121", "148"], ["144", "153"], ["23", "153"], ["75", "75"], ["75", "81"], ["75", "85"], ["75", "92"], ["75", "87"], ["75", "82"], ["75", "90"], ["75", "78"], ["117", "121"], ["117", "123"], ["117", "126"], ["117", "127"], ["126", "157"], ["126", "138"], ["126", "135"], ["126", "117"], ["126", "156"], ["126", "133"], ["138", "142"], ["138", "144"], ["138", "138"], ["138", "148"], ["138", "147"], ["156", "161"], ["156", "163"], ["156", "165"], ["147", "153"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>4</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>4</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,String line = readLine())<SUB>5</SUB>>", "43": "<(readLine,readLine())<SUB>5</SUB>>", "45": "<(LOCAL,int n: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,int n = Integer.parseInt(line))<SUB>6</SUB>>", "49": "<(IDENTIFIER,Integer,Integer.parseInt(line))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,line = readLine())<SUB>7</SUB>>", "53": "<(readLine,readLine())<SUB>7</SUB>>", "55": "<(LOCAL,String[] values: java.lang.String[])<SUB>8</SUB>>", "57": "<(IDENTIFIER,values,String[] values = line.split(&quot; &quot;))<SUB>8</SUB>>", "59": "<(IDENTIFIER,line,line.split(&quot; &quot;))<SUB>8</SUB>>", "61": "<(LOCAL,int[] arr: int[])<SUB>9</SUB>>", "63": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;&gt;())<SUB>10</SUB>>", "68": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;())<SUB>10</SUB>>", "5": "<(IDENTIFIER,set,new TreeSet&lt;&gt;())<SUB>10</SUB>>", "71": "<(LOCAL,int i: int)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,arr[i] = Integer.parseInt(values[i]))<SUB>12</SUB>>", "83": "<(IDENTIFIER,arr,arr[i] = Integer.parseInt(values[i]))<SUB>12</SUB>>", "85": "<(parseInt,Integer.parseInt(values[i]))<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,values[i])<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,Integer.parseInt(values[i]))<SUB>12</SUB>>", "91": "<(IDENTIFIER,set,add(arr[i]))<SUB>13</SUB>>", "93": "<(IDENTIFIER,arr,add(arr[i]))<SUB>13</SUB>>", "95": "<(LOCAL,int count: int)<SUB>15</SUB>>", "97": "<(IDENTIFIER,count,int count = 0)<SUB>15</SUB>>", "8": "<(LOCAL,TreeSet&lt;Integer&gt; copy: ANY)<SUB>16</SUB>>", "100": "<(IDENTIFIER,copy,ANY copy = new TreeSet&lt;&gt;())<SUB>16</SUB>>", "102": "<(&lt;init&gt;,new TreeSet&lt;&gt;())<SUB>16</SUB>>", "103": "<(addAll,addAll(set))<SUB>19</SUB>>", "105": "<(IDENTIFIER,set,addAll(set))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.assignment,int prev = size())<SUB>20</SUB>>", "109": "<(size,size())<SUB>20</SUB>>", "111": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>22</SUB>>", "113": "<(IDENTIFIER,$iterLocal0,)<SUB>22</SUB>>", "115": "<(IDENTIFIER,set,&lt;empty&gt;)<SUB>22</SUB>>", "117": "<(hasNext,&lt;empty&gt;)<SUB>22</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>22</SUB>>", "123": "<(next,&lt;empty&gt;)<SUB>22</SUB>>", "125": "<(CONTROL_STRUCTURE,if (copy.size() == 0),if (copy.size() == 0))<SUB>24</SUB>>", "127": "<(size,size())<SUB>24</SUB>>", "129": "<(LITERAL,0,copy.size() == 0)<SUB>24</SUB>>", "131": "<(CONTROL_STRUCTURE,break;,break;)<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.assignment,ANY iterator = iterator())<SUB>27</SUB>>", "135": "<(iterator,iterator())<SUB>27</SUB>>", "137": "<(CONTROL_STRUCTURE,while (iterator.hasNext()),while (iterator.hasNext()))<SUB>28</SUB>>", "139": "<(IDENTIFIER,iterator,hasNext())<SUB>28</SUB>>", "141": "<(LOCAL,Integer e: java.lang.Integer)<SUB>29</SUB>>", "143": "<(IDENTIFIER,e,Integer e = next())<SUB>29</SUB>>", "145": "<(IDENTIFIER,iterator,next())<SUB>29</SUB>>", "147": "<(&lt;operator&gt;.equals,e % i == 0)<SUB>30</SUB>>", "149": "<(IDENTIFIER,e,e % i)<SUB>30</SUB>>", "151": "<(LITERAL,0,e % i == 0)<SUB>30</SUB>>", "153": "<(remove,remove())<SUB>31</SUB>>", "155": "<(CONTROL_STRUCTURE,if (copy.size() != prev),if (copy.size() != prev))<SUB>34</SUB>>", "157": "<(size,size())<SUB>34</SUB>>", "159": "<(IDENTIFIER,prev,copy.size() != prev)<SUB>34</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,count++)<SUB>35</SUB>>", "163": "<(&lt;operator&gt;.assignment,prev = size())<SUB>36</SUB>>", "165": "<(size,size())<SUB>36</SUB>>", "167": "<(println,System.out.println(count))<SUB>43</SUB>>", "169": "<(IDENTIFIER,System,System.out.println(count))<SUB>43</SUB>>", "171": "<(IDENTIFIER,count,System.out.println(count))<SUB>43</SUB>>", "173": "<(MODIFIER,STATIC)>"}}