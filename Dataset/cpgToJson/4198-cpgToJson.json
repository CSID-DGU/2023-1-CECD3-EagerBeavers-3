{"edges": [["19", "20"], ["19", "21"], ["19", "276"], ["19", "277"], ["19", "278"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "38"], ["21", "43"], ["21", "71"], ["21", "104"], ["21", "274"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "69"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "112"], ["104", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "122"], ["114", "263"], ["116", "117"], ["116", "118"], ["118", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "132"], ["122", "134"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "150"], ["134", "163"], ["134", "164"], ["134", "169"], ["134", "170"], ["134", "181"], ["134", "258"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "189"], ["181", "191"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["191", "201"], ["192", "193"], ["192", "200"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["201", "202"], ["201", "203"], ["201", "208"], ["201", "211"], ["201", "213"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "223"], ["213", "224"], ["213", "253"], ["214", "215"], ["214", "222"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "240"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "273"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["274", "275"], ["22", "29"], ["27", "33"], ["30", "36"], ["34", "40"], ["38", "45"], ["274", "278"], ["24", "22"], ["29", "27"], ["31", "30"], ["36", "34"], ["40", "38"], ["45", "48"], ["48", "55"], ["48", "73"], ["51", "48"], ["73", "76"], ["76", "83"], ["76", "106"], ["79", "76"], ["106", "109"], ["109", "119"], ["109", "274"], ["112", "109"], ["26", "24"], ["33", "31"], ["55", "58"], ["58", "65"], ["58", "51"], ["61", "58"], ["63", "61"], ["83", "86"], ["86", "93"], ["86", "79"], ["89", "86"], ["91", "89"], ["116", "124"], ["263", "112"], ["64", "69"], ["69", "63"], ["92", "100"], ["97", "91"], ["118", "116"], ["124", "129"], ["127", "139"], ["127", "269"], ["132", "129"], ["265", "263"], ["65", "64"], ["93", "92"], ["99", "97"], ["119", "118"], ["129", "127"], ["164", "177"], ["170", "183"], ["258", "132"], ["266", "265"], ["100", "99"], ["136", "145"], ["136", "153"], ["151", "158"], ["151", "166"], ["166", "164"], ["172", "170"], ["183", "186"], ["186", "196"], ["186", "259"], ["189", "186"], ["259", "258"], ["268", "266"], ["137", "136"], ["144", "132"], ["153", "151"], ["157", "132"], ["174", "172"], ["269", "268"], ["139", "137"], ["145", "144"], ["158", "157"], ["175", "174"], ["193", "189"], ["193", "205"], ["203", "208"], ["208", "218"], ["208", "189"], ["211", "208"], ["177", "175"], ["194", "193"], ["205", "203"], ["224", "254"], ["253", "211"], ["196", "194"], ["215", "211"], ["215", "229"], ["226", "224"], ["254", "253"], ["216", "215"], ["227", "242"], ["240", "226"], ["218", "216"], ["228", "237"], ["233", "227"], ["241", "250"], ["246", "240"], ["229", "228"], ["235", "233"], ["242", "241"], ["248", "246"], ["237", "235"], ["250", "248"], ["19", "26"], ["20", "278"], ["22", "278"], ["22", "278"], ["27", "278"], ["30", "278"], ["30", "278"], ["36", "278"], ["34", "278"], ["34", "278"], ["38", "278"], ["38", "278"], ["38", "278"], ["106", "278"], ["109", "278"], ["109", "278"], ["109", "278"], ["274", "278"], ["274", "278"], ["116", "278"], ["116", "278"], ["116", "278"], ["124", "278"], ["127", "278"], ["127", "278"], ["268", "278"], ["265", "278"], ["263", "278"], ["263", "278"], ["112", "278"], ["137", "278"], ["136", "278"], ["136", "278"], ["151", "278"], ["151", "278"], ["164", "278"], ["164", "278"], ["175", "278"], ["175", "278"], ["174", "278"], ["172", "278"], ["170", "278"], ["170", "278"], ["183", "278"], ["186", "278"], ["186", "278"], ["258", "278"], ["258", "278"], ["258", "278"], ["194", "278"], ["193", "278"], ["193", "278"], ["203", "278"], ["203", "278"], ["208", "278"], ["208", "278"], ["216", "278"], ["215", "278"], ["215", "278"], ["227", "278"], ["235", "278"], ["227", "278"], ["226", "278"], ["240", "278"], ["248", "278"], ["240", "278"], ["226", "278"], ["224", "278"], ["224", "278"], ["253", "278"], ["253", "278"], ["211", "278"], ["189", "278"], ["157", "278"], ["157", "278"], ["144", "278"], ["144", "278"], ["132", "278"], ["83", "278"], ["86", "278"], ["86", "278"], ["79", "278"], ["91", "278"], ["97", "278"], ["91", "278"], ["91", "278"], ["89", "278"], ["55", "278"], ["58", "278"], ["58", "278"], ["51", "278"], ["63", "278"], ["69", "278"], ["63", "278"], ["63", "278"], ["61", "278"], ["166", "278"], ["19", "20"], ["19", "27"], ["36", "34"], ["40", "38"], ["19", "22"], ["27", "30"], ["19", "30"], ["19", "45"], ["19", "73"], ["19", "106"], ["30", "274"], ["263", "274"], ["19", "274"], ["22", "36"], ["19", "36"], ["34", "40"], ["19", "40"], ["45", "48"], ["51", "48"], ["19", "48"], ["40", "48"], ["58", "48"], ["48", "51"], ["19", "51"], ["19", "55"], ["69", "63"], ["73", "76"], ["79", "76"], ["19", "76"], ["48", "76"], ["86", "76"], ["76", "79"], ["19", "79"], ["19", "83"], ["97", "91"], ["97", "91"], ["106", "109"], ["112", "109"], ["19", "109"], ["76", "109"], ["269", "109"], ["109", "112"], ["139", "112"], ["153", "112"], ["19", "112"], ["118", "116"], ["55", "58"], ["61", "58"], ["19", "58"], ["48", "58"], ["58", "61"], ["19", "61"], ["83", "86"], ["89", "86"], ["19", "86"], ["76", "86"], ["86", "89"], ["19", "89"], ["19", "124"], ["30", "263"], ["19", "263"], ["116", "263"], ["36", "69"], ["19", "69"], ["19", "97"], ["63", "97"], ["119", "118"], ["119", "118"], ["124", "127"], ["132", "127"], ["19", "127"], ["129", "127"], ["129", "127"], ["137", "132"], ["151", "132"], ["166", "132"], ["194", "132"], ["216", "132"], ["248", "132"], ["19", "132"], ["166", "164"], ["166", "164"], ["172", "170"], ["172", "170"], ["170", "258"], ["19", "258"], ["116", "265"], ["19", "265"], ["19", "119"], ["109", "119"], ["19", "129"], ["119", "129"], ["186", "129"], ["19", "183"], ["116", "258"], ["253", "258"], ["157", "258"], ["144", "258"], ["137", "136"], ["137", "136"], ["19", "136"], ["19", "144"], ["137", "151"], ["19", "151"], ["153", "151"], ["153", "151"], ["19", "157"], ["19", "166"], ["151", "166"], ["19", "172"], ["174", "172"], ["174", "172"], ["183", "186"], ["189", "186"], ["19", "186"], ["129", "186"], ["208", "186"], ["196", "189"], ["250", "189"], ["19", "189"], ["269", "268"], ["269", "268"], ["19", "268"], ["127", "137"], ["19", "137"], ["139", "137"], ["139", "137"], ["19", "153"], ["139", "153"], ["175", "174"], ["175", "174"], ["19", "174"], ["196", "203"], ["19", "203"], ["19", "269"], ["129", "269"], ["19", "139"], ["109", "139"], ["153", "139"], ["177", "175"], ["19", "175"], ["177", "175"], ["194", "193"], ["194", "193"], ["19", "193"], ["203", "208"], ["211", "208"], ["19", "208"], ["186", "208"], ["218", "211"], ["237", "211"], ["19", "211"], ["227", "224"], ["227", "224"], ["240", "224"], ["240", "224"], ["224", "253"], ["19", "253"], ["164", "177"], ["19", "177"], ["166", "194"], ["216", "194"], ["248", "194"], ["19", "194"], ["196", "194"], ["196", "194"], ["196", "205"], ["19", "205"], ["116", "253"], ["258", "253"], ["157", "253"], ["144", "253"], ["19", "196"], ["186", "196"], ["216", "215"], ["216", "215"], ["19", "215"], ["227", "226"], ["227", "226"], ["240", "226"], ["240", "226"], ["194", "216"], ["248", "216"], ["19", "216"], ["218", "216"], ["218", "216"], ["116", "227"], ["116", "240"], ["19", "218"], ["208", "218"], ["216", "235"], ["19", "235"], ["237", "235"], ["237", "235"], ["235", "248"], ["19", "248"], ["250", "248"], ["250", "248"], ["19", "237"], ["218", "237"], ["19", "250"], ["196", "250"], ["48", "48"], ["48", "55"], ["48", "51"], ["48", "58"], ["76", "76"], ["76", "86"], ["76", "79"], ["76", "83"], ["109", "112"], ["109", "129"], ["109", "118"], ["109", "268"], ["109", "127"], ["109", "116"], ["109", "269"], ["109", "109"], ["109", "119"], ["109", "265"], ["109", "263"], ["109", "124"], ["109", "266"], ["58", "61"], ["58", "65"], ["58", "64"], ["58", "69"], ["58", "58"], ["58", "63"], ["86", "93"], ["86", "100"], ["86", "86"], ["86", "92"], ["86", "97"], ["86", "91"], ["86", "89"], ["86", "99"], ["127", "136"], ["127", "129"], ["127", "127"], ["127", "132"], ["127", "137"], ["127", "139"], ["136", "145"], ["136", "151"], ["136", "153"], ["136", "144"], ["151", "170"], ["151", "174"], ["151", "258"], ["151", "186"], ["151", "158"], ["151", "177"], ["151", "172"], ["151", "259"], ["151", "164"], ["151", "183"], ["151", "166"], ["151", "157"], ["151", "175"], ["186", "196"], ["186", "194"], ["186", "186"], ["186", "189"], ["186", "193"], ["193", "208"], ["193", "205"], ["193", "203"], ["208", "215"], ["208", "208"], ["208", "216"], ["208", "211"], ["208", "218"], ["215", "240"], ["215", "226"], ["215", "228"], ["215", "242"], ["215", "224"], ["215", "237"], ["215", "253"], ["215", "254"], ["215", "229"], ["215", "241"], ["215", "227"], ["215", "246"], ["215", "233"], ["215", "235"], ["215", "248"], ["215", "250"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,input,init(System.in))<SUB>2</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,n = nextInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,input,nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,g,g = new double[n][n])<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,new double[n][n])<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,j,j &lt; n)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,g[i][j] = nextDouble())<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,g[i][j] = nextDouble())<SUB>8</SUB>>", "69": "<(nextDouble,nextDouble())<SUB>8</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "87": "<(IDENTIFIER,j,j &lt; n)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,g[j][i] = 1 - g[i][j])<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>11</SUB>>", "95": "<(IDENTIFIER,j,g[j][i] = 1 - g[i][j])<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.subtraction,1 - g[i][j])<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,g[i][j])<SUB>11</SUB>>", "101": "<(IDENTIFIER,g,1 - g[i][j])<SUB>11</SUB>>", "103": "<(IDENTIFIER,j,1 - g[i][j])<SUB>11</SUB>>", "105": "<(LOCAL,int i: int)<SUB>12</SUB>>", "107": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "111": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "113": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "115": "<(LOCAL,double[] dp: double[])<SUB>14</SUB>>", "117": "<(IDENTIFIER,dp,double[] dp = new double[1 &lt;&lt; n])<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>14</SUB>>", "121": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>14</SUB>>", "123": "<(LOCAL,int mask: int)<SUB>15</SUB>>", "125": "<(IDENTIFIER,mask,int mask = 0)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "131": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "133": "<(IDENTIFIER,mask,mask++)<SUB>15</SUB>>", "135": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) == 0),if ((mask &amp; (1 &lt;&lt; i)) == 0))<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>17</SUB>>", "141": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>17</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>19</SUB>>", "147": "<(IDENTIFIER,mask,dp[mask] = 0)<SUB>19</SUB>>", "149": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.equals,mask == (1 &lt;&lt; i))<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>22</SUB>>", "155": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.assignment,dp[mask] = 1)<SUB>24</SUB>>", "159": "<(IDENTIFIER,dp,dp[mask] = 1)<SUB>24</SUB>>", "161": "<(LITERAL,1,dp[mask] = 1)<SUB>24</SUB>>", "163": "<(LOCAL,int count: int)<SUB>27</SUB>>", "165": "<(IDENTIFIER,count,int count = Integer.bitCount(mask))<SUB>27</SUB>>", "167": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>27</SUB>>", "169": "<(LOCAL,double prob: double)<SUB>28</SUB>>", "171": "<(IDENTIFIER,prob,double prob = 1.0 / (count * (count - 1) / 2))<SUB>28</SUB>>", "173": "<(LITERAL,1.0,1.0 / (count * (count - 1) / 2))<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.multiplication,count * (count - 1))<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.subtraction,count - 1)<SUB>28</SUB>>", "179": "<(LITERAL,1,count - 1)<SUB>28</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; n); a++),for (int a = 0; Some(a &lt; n); a++))<SUB>29</SUB>>", "183": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>29</SUB>>", "185": "<(LITERAL,0,int a = 0)<SUB>29</SUB>>", "187": "<(IDENTIFIER,a,a &lt; n)<SUB>29</SUB>>", "189": "<(&lt;operator&gt;.postIncrement,a++)<SUB>29</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "193": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; a)) == 0)<SUB>31</SUB>>", "195": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; a))<SUB>31</SUB>>", "197": "<(LITERAL,1,1 &lt;&lt; a)<SUB>31</SUB>>", "199": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; a)) == 0)<SUB>31</SUB>>", "201": "<(CONTROL_STRUCTURE,for (int b = a + 1; Some(b &lt; n); b++),for (int b = a + 1; Some(b &lt; n); b++))<SUB>32</SUB>>", "203": "<(&lt;operator&gt;.assignment,int b = a + 1)<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.addition,a + 1)<SUB>32</SUB>>", "207": "<(LITERAL,1,a + 1)<SUB>32</SUB>>", "209": "<(IDENTIFIER,b,b &lt; n)<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,b++)<SUB>32</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "215": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; b)) == 0)<SUB>34</SUB>>", "217": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; b))<SUB>34</SUB>>", "219": "<(LITERAL,1,1 &lt;&lt; b)<SUB>34</SUB>>", "221": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; b)) == 0)<SUB>34</SUB>>", "223": "<(LOCAL,double p: double)<SUB>35</SUB>>", "225": "<(IDENTIFIER,p,double p = g[a][b] * dp[mask ^ (1 &lt;&lt; b)] + g[b][a] * dp[mask ^ (1 &lt;&lt; a)])<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.multiplication,g[a][b] * dp[mask ^ (1 &lt;&lt; b)])<SUB>35</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,g[a])<SUB>35</SUB>>", "231": "<(IDENTIFIER,a,g[a][b] * dp[mask ^ (1 &lt;&lt; b)])<SUB>35</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; b)])<SUB>35</SUB>>", "235": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; b))<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>35</SUB>>", "239": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,g[b][a])<SUB>35</SUB>>", "243": "<(IDENTIFIER,g,g[b][a] * dp[mask ^ (1 &lt;&lt; a)])<SUB>35</SUB>>", "245": "<(IDENTIFIER,a,g[b][a] * dp[mask ^ (1 &lt;&lt; a)])<SUB>35</SUB>>", "247": "<(IDENTIFIER,dp,g[b][a] * dp[mask ^ (1 &lt;&lt; a)])<SUB>35</SUB>>", "249": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; a))<SUB>35</SUB>>", "251": "<(LITERAL,1,1 &lt;&lt; a)<SUB>35</SUB>>", "253": "<(&lt;operator&gt;.assignmentPlus,dp[mask] += p)<SUB>36</SUB>>", "255": "<(IDENTIFIER,dp,dp[mask] += p)<SUB>36</SUB>>", "257": "<(IDENTIFIER,p,dp[mask] += p)<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>39</SUB>>", "261": "<(IDENTIFIER,mask,dp[mask] *= prob)<SUB>39</SUB>>", "263": "<(print,print(dp[(1 &lt;&lt; n) - 1] + &quot; &quot;))<SUB>41</SUB>>", "265": "<(&lt;operator&gt;.addition,dp[(1 &lt;&lt; n) - 1] + &quot; &quot;)<SUB>41</SUB>>", "267": "<(IDENTIFIER,dp,dp[(1 &lt;&lt; n) - 1] + &quot; &quot;)<SUB>41</SUB>>", "269": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>41</SUB>>", "271": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>41</SUB>>", "273": "<(LITERAL,&quot; &quot;,dp[(1 &lt;&lt; n) - 1] + &quot; &quot;)<SUB>41</SUB>>", "275": "<(IDENTIFIER,out,close())<SUB>43</SUB>>", "277": "<(MODIFIER,STATIC)>"}}