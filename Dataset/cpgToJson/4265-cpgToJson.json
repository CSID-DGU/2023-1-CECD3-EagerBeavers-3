{"edges": [["23", "24"], ["23", "25"], ["23", "174"], ["23", "175"], ["23", "176"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "170"], ["25", "172"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "50"], ["46", "47"], ["46", "49"], ["47", "48"], ["50", "51"], ["50", "54"], ["50", "58"], ["50", "59"], ["50", "63"], ["50", "64"], ["50", "8"], ["50", "68"], ["50", "71"], ["50", "72"], ["50", "77"], ["50", "122"], ["50", "125"], ["50", "127"], ["50", "161"], ["50", "167"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["71", "7"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "103"], ["97", "115"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "109"], ["105", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "112"], ["109", "113"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "136"], ["128", "129"], ["128", "132"], ["129", "130"], ["130", "131"], ["132", "133"], ["132", "135"], ["133", "134"], ["136", "137"], ["136", "138"], ["136", "142"], ["136", "154"], ["138", "139"], ["138", "140"], ["140", "141"], ["142", "143"], ["142", "149"], ["143", "144"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["161", "164"], ["164", "165"], ["165", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["172", "173"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "43"], ["41", "47"], ["170", "172"], ["172", "176"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["46", "51"], ["46", "170"], ["32", "30"], ["39", "37"], ["47", "46"], ["51", "56"], ["54", "61"], ["59", "66"], ["64", "70"], ["68", "71"], ["71", "74"], ["72", "79"], ["122", "125"], ["125", "130"], ["161", "167"], ["167", "47"], ["56", "54"], ["61", "59"], ["66", "64"], ["70", "68"], ["74", "72"], ["79", "82"], ["82", "89"], ["82", "124"], ["85", "82"], ["124", "122"], ["128", "140"], ["128", "165"], ["164", "161"], ["89", "92"], ["92", "101"], ["92", "85"], ["95", "92"], ["129", "128"], ["129", "133"], ["132", "128"], ["138", "148"], ["154", "130"], ["165", "164"], ["99", "108"], ["103", "117"], ["115", "95"], ["130", "129"], ["133", "132"], ["140", "138"], ["143", "153"], ["143", "159"], ["149", "159"], ["155", "154"], ["101", "99"], ["116", "115"], ["144", "143"], ["151", "149"], ["157", "155"], ["106", "109"], ["109", "103"], ["117", "116"], ["146", "144"], ["153", "151"], ["159", "157"], ["108", "106"], ["148", "146"], ["23", "28"], ["24", "176"], ["26", "176"], ["29", "176"], ["29", "176"], ["33", "176"], ["36", "176"], ["36", "176"], ["43", "176"], ["41", "176"], ["41", "176"], ["47", "176"], ["46", "176"], ["46", "176"], ["170", "176"], ["172", "176"], ["172", "176"], ["51", "176"], ["54", "176"], ["61", "176"], ["59", "176"], ["59", "176"], ["64", "176"], ["64", "176"], ["64", "176"], ["68", "176"], ["71", "176"], ["72", "176"], ["74", "176"], ["72", "176"], ["72", "176"], ["79", "176"], ["82", "176"], ["82", "176"], ["82", "176"], ["122", "176"], ["125", "176"], ["130", "176"], ["129", "176"], ["128", "176"], ["128", "176"], ["128", "176"], ["165", "176"], ["164", "176"], ["161", "176"], ["161", "176"], ["167", "176"], ["167", "176"], ["138", "176"], ["138", "176"], ["138", "176"], ["143", "176"], ["149", "176"], ["149", "176"], ["154", "176"], ["154", "176"], ["89", "176"], ["92", "176"], ["92", "176"], ["92", "176"], ["85", "176"], ["101", "176"], ["99", "176"], ["99", "176"], ["106", "176"], ["109", "176"], ["109", "176"], ["103", "176"], ["115", "176"], ["115", "176"], ["115", "176"], ["95", "176"], ["161", "176"], ["23", "24"], ["23", "26"], ["23", "33"], ["43", "41"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["36", "170"], ["167", "170"], ["23", "170"], ["170", "172"], ["23", "172"], ["29", "43"], ["23", "43"], ["47", "46"], ["23", "46"], ["23", "51"], ["56", "54"], ["61", "59"], ["66", "64"], ["23", "68"], ["74", "72"], ["74", "72"], ["23", "122"], ["41", "47"], ["23", "47"], ["68", "71"], ["23", "71"], ["23", "79"], ["122", "125"], ["23", "125"], ["23", "161"], ["164", "161"], ["36", "167"], ["23", "167"], ["51", "167"], ["43", "56"], ["61", "56"], ["101", "56"], ["23", "56"], ["56", "61"], ["23", "61"], ["59", "66"], ["23", "66"], ["54", "74"], ["23", "74"], ["66", "74"], ["79", "82"], ["85", "82"], ["23", "82"], ["74", "82"], ["82", "85"], ["109", "85"], ["23", "85"], ["23", "89"], ["129", "128"], ["132", "128"], ["132", "128"], ["140", "138"], ["23", "154"], ["165", "164"], ["89", "92"], ["95", "92"], ["23", "92"], ["74", "92"], ["109", "95"], ["23", "95"], ["101", "99"], ["109", "115"], ["23", "115"], ["130", "129"], ["133", "132"], ["23", "132"], ["125", "165"], ["133", "165"], ["149", "165"], ["23", "165"], ["71", "103"], ["23", "103"], ["106", "103"], ["109", "103"], ["71", "130"], ["140", "130"], ["103", "130"], ["23", "130"], ["125", "133"], ["149", "133"], ["23", "133"], ["130", "140"], ["23", "140"], ["64", "143"], ["154", "143"], ["125", "149"], ["133", "149"], ["23", "149"], ["138", "149"], ["61", "101"], ["23", "101"], ["23", "106"], ["23", "114"], ["106", "109"], ["23", "109"], ["82", "109"], ["92", "109"], ["99", "109"], ["46", "68"], ["46", "167"], ["46", "64"], ["46", "51"], ["46", "128"], ["46", "161"], ["46", "56"], ["46", "74"], ["46", "59"], ["46", "129"], ["46", "54"], ["46", "79"], ["46", "61"], ["46", "130"], ["46", "70"], ["46", "164"], ["46", "47"], ["46", "66"], ["46", "122"], ["46", "46"], ["46", "72"], ["46", "82"], ["46", "71"], ["46", "165"], ["46", "124"], ["46", "125"], ["82", "85"], ["82", "92"], ["82", "89"], ["82", "82"], ["128", "154"], ["128", "146"], ["128", "128"], ["128", "144"], ["128", "129"], ["128", "138"], ["128", "148"], ["128", "130"], ["128", "155"], ["128", "157"], ["128", "159"], ["128", "140"], ["128", "143"], ["92", "115"], ["92", "103"], ["92", "95"], ["92", "92"], ["92", "101"], ["92", "108"], ["92", "116"], ["92", "99"], ["92", "106"], ["92", "117"], ["92", "109"], ["129", "132"], ["129", "133"], ["143", "149"], ["143", "151"], ["143", "153"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int tc = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(CONTROL_STRUCTURE,while (tc-- &gt; 0),while (tc-- &gt; 0))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postDecrement,tc--)<SUB>5</SUB>>", "49": "<(LITERAL,0,tc-- &gt; 0)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,ans = 0)<SUB>6</SUB>>", "53": "<(LITERAL,0,ans = 0)<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,n = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>8</SUB>>", "61": "<(nextInt,nextInt())<SUB>8</SUB>>", "63": "<(LOCAL,boolean[] taken: boolean[])<SUB>9</SUB>>", "65": "<(IDENTIFIER,taken,boolean[] taken = new boolean[m])<SUB>9</SUB>>", "67": "<(IDENTIFIER,m,new boolean[m])<SUB>9</SUB>>", "68": "<(&lt;operator&gt;.assignment,ANY pq = new PriorityQueue&lt;&gt;())<SUB>10</SUB>>", "70": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;&gt;())<SUB>10</SUB>>", "7": "<(IDENTIFIER,pq,new PriorityQueue&lt;&gt;())<SUB>10</SUB>>", "73": "<(IDENTIFIER,a,a = new int[n][m])<SUB>11</SUB>>", "75": "<(IDENTIFIER,n,new int[n][m])<SUB>11</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "91": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "93": "<(IDENTIFIER,j,j &lt; m)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int cur = nextInt())<SUB>14</SUB>>", "101": "<(nextInt,nextInt())<SUB>14</SUB>>", "103": "<(add,add(new Pair(i, j, cur)))<SUB>15</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "107": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "109": "<(&lt;init&gt;,new Pair(i, j, cur))<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,new Pair(i, j, cur))<SUB>15</SUB>>", "113": "<(IDENTIFIER,cur,new Pair(i, j, cur))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,a[i][j] = cur)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,a[i][j] = cur)<SUB>16</SUB>>", "121": "<(IDENTIFIER,cur,a[i][j] = cur)<SUB>16</SUB>>", "123": "<(IDENTIFIER,cols,cols = new ArrayList&lt;&gt;())<SUB>18</SUB>>", "125": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>18</SUB>>", "127": "<(CONTROL_STRUCTURE,while (!pq.isEmpty() &amp;&amp; cols.size() &lt; 8),while (!pq.isEmpty() &amp;&amp; cols.size() &lt; 8))<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.logicalNot,!pq.isEmpty())<SUB>19</SUB>>", "131": "<(IDENTIFIER,pq,isEmpty())<SUB>19</SUB>>", "133": "<(size,size())<SUB>19</SUB>>", "135": "<(LITERAL,8,cols.size() &lt; 8)<SUB>19</SUB>>", "137": "<(LOCAL,Pair cur: ANY)<SUB>20</SUB>>", "139": "<(IDENTIFIER,cur,ANY cur = remove())<SUB>20</SUB>>", "141": "<(IDENTIFIER,pq,remove())<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.logicalNot,!taken[cur.j])<SUB>21</SUB>>", "145": "<(IDENTIFIER,taken,!taken[cur.j])<SUB>21</SUB>>", "147": "<(IDENTIFIER,cur,!taken[cur.j])<SUB>21</SUB>>", "149": "<(add,add(cur.j))<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,cur.j)<SUB>21</SUB>>", "153": "<(FIELD_IDENTIFIER,j,j)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,taken[cur.j])<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,cur.j)<SUB>22</SUB>>", "159": "<(FIELD_IDENTIFIER,j,j)<SUB>22</SUB>>", "161": "<(solve,solve(0, new int[cols.size()]))<SUB>24</SUB>>", "163": "<(LITERAL,0,solve(0, new int[cols.size()]))<SUB>24</SUB>>", "165": "<(size,size())<SUB>24</SUB>>", "167": "<(println,println(ans))<SUB>25</SUB>>", "169": "<(IDENTIFIER,ans,println(ans))<SUB>25</SUB>>", "171": "<(IDENTIFIER,out,flush())<SUB>27</SUB>>", "173": "<(IDENTIFIER,out,close())<SUB>28</SUB>>", "175": "<(MODIFIER,STATIC)>"}}