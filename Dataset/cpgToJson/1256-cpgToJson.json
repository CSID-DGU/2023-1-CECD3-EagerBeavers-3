{"edges": [["27", "29"], ["27", "203"], ["27", "204"], ["27", "205"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "44"], ["29", "45"], ["29", "46"], ["29", "47"], ["29", "48"], ["29", "55"], ["29", "62"], ["29", "6"], ["29", "69"], ["29", "72"], ["29", "8"], ["29", "76"], ["29", "79"], ["29", "10"], ["29", "83"], ["29", "86"], ["29", "90"], ["29", "103"], ["29", "126"], ["29", "127"], ["29", "12"], ["29", "133"], ["29", "136"], ["29", "140"], ["29", "141"], ["29", "148"], ["29", "153"], ["29", "158"], ["29", "163"], ["29", "168"], ["29", "173"], ["29", "178"], ["29", "183"], ["29", "198"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "5"], ["72", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "7"], ["79", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "9"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "113"], ["107", "118"], ["107", "123"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["129", "132"], ["133", "134"], ["133", "135"], ["136", "11"], ["136", "137"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "195"], ["184", "185"], ["184", "190"], ["185", "186"], ["186", "187"], ["186", "189"], ["187", "188"], ["190", "191"], ["191", "192"], ["191", "194"], ["192", "193"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["30", "37"], ["33", "52"], ["48", "59"], ["55", "66"], ["62", "71"], ["69", "73"], ["72", "78"], ["76", "80"], ["79", "85"], ["83", "87"], ["86", "91"], ["127", "135"], ["133", "137"], ["136", "147"], ["141", "150"], ["148", "155"], ["153", "160"], ["158", "165"], ["163", "170"], ["168", "175"], ["173", "180"], ["178", "187"], ["198", "205"], ["32", "30"], ["50", "48"], ["57", "55"], ["64", "62"], ["71", "69"], ["73", "72"], ["78", "76"], ["80", "79"], ["85", "83"], ["87", "86"], ["91", "98"], ["91", "104"], ["104", "110"], ["104", "129"], ["129", "127"], ["135", "133"], ["137", "136"], ["143", "141"], ["150", "148"], ["155", "153"], ["160", "158"], ["165", "163"], ["170", "168"], ["175", "173"], ["180", "178"], ["184", "195"], ["184", "201"], ["195", "201"], ["199", "198"], ["35", "42"], ["38", "33"], ["51", "50"], ["59", "57"], ["66", "64"], ["95", "100"], ["100", "104"], ["108", "115"], ["113", "121"], ["118", "123"], ["123", "129"], ["145", "143"], ["185", "184"], ["185", "192"], ["190", "184"], ["201", "199"], ["37", "35"], ["40", "38"], ["52", "51"], ["96", "95"], ["110", "108"], ["115", "113"], ["119", "118"], ["147", "145"], ["186", "185"], ["191", "190"], ["42", "40"], ["98", "96"], ["121", "119"], ["187", "186"], ["192", "191"], ["27", "32"], ["28", "205"], ["30", "205"], ["35", "205"], ["38", "205"], ["38", "205"], ["38", "205"], ["33", "205"], ["48", "205"], ["52", "205"], ["51", "205"], ["50", "205"], ["48", "205"], ["48", "205"], ["57", "205"], ["55", "205"], ["55", "205"], ["64", "205"], ["64", "205"], ["62", "205"], ["62", "205"], ["69", "205"], ["72", "205"], ["76", "205"], ["79", "205"], ["79", "205"], ["83", "205"], ["86", "205"], ["86", "205"], ["91", "205"], ["91", "205"], ["95", "205"], ["100", "205"], ["100", "205"], ["104", "205"], ["108", "205"], ["123", "205"], ["123", "205"], ["129", "205"], ["127", "205"], ["127", "205"], ["133", "205"], ["137", "205"], ["136", "205"], ["136", "205"], ["143", "205"], ["141", "205"], ["141", "205"], ["148", "205"], ["155", "205"], ["153", "205"], ["153", "205"], ["158", "205"], ["165", "205"], ["163", "205"], ["163", "205"], ["175", "205"], ["173", "205"], ["173", "205"], ["180", "205"], ["178", "205"], ["178", "205"], ["186", "205"], ["185", "205"], ["184", "205"], ["191", "205"], ["190", "205"], ["184", "205"], ["184", "205"], ["195", "205"], ["195", "205"], ["198", "205"], ["198", "205"], ["198", "205"], ["129", "205"], ["27", "28"], ["27", "30"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["64", "62"], ["64", "62"], ["27", "69"], ["27", "76"], ["27", "83"], ["129", "127"], ["129", "127"], ["129", "127"], ["27", "133"], ["143", "141"], ["143", "141"], ["150", "148"], ["150", "148"], ["155", "153"], ["155", "153"], ["160", "158"], ["160", "158"], ["165", "163"], ["165", "163"], ["170", "168"], ["170", "168"], ["175", "173"], ["175", "173"], ["180", "178"], ["180", "178"], ["30", "33"], ["27", "33"], ["35", "33"], ["38", "33"], ["69", "72"], ["27", "72"], ["55", "72"], ["76", "79"], ["27", "79"], ["55", "79"], ["83", "86"], ["27", "86"], ["133", "136"], ["27", "136"], ["127", "136"], ["100", "198"], ["123", "198"], ["187", "198"], ["192", "198"], ["195", "198"], ["27", "198"], ["27", "35"], ["27", "43"], ["51", "50"], ["27", "50"], ["27", "57"], ["48", "57"], ["57", "64"], ["27", "64"], ["48", "64"], ["55", "73"], ["27", "73"], ["27", "80"], ["55", "80"], ["27", "87"], ["27", "91"], ["55", "91"], ["62", "104"], ["27", "104"], ["110", "108"], ["110", "108"], ["115", "113"], ["115", "113"], ["27", "129"], ["104", "129"], ["127", "137"], ["27", "137"], ["136", "143"], ["27", "143"], ["141", "150"], ["27", "150"], ["115", "150"], ["143", "155"], ["27", "155"], ["86", "155"], ["110", "155"], ["153", "160"], ["27", "160"], ["150", "160"], ["79", "165"], ["118", "165"], ["27", "165"], ["158", "165"], ["163", "170"], ["27", "170"], ["160", "170"], ["168", "175"], ["27", "175"], ["148", "175"], ["173", "180"], ["27", "180"], ["170", "180"], ["185", "184"], ["190", "184"], ["187", "195"], ["192", "195"], ["27", "195"], ["180", "195"], ["35", "38"], ["27", "38"], ["52", "51"], ["27", "95"], ["38", "100"], ["95", "100"], ["27", "100"], ["100", "118"], ["113", "118"], ["27", "118"], ["38", "123"], ["100", "123"], ["118", "123"], ["27", "123"], ["186", "185"], ["186", "185"], ["191", "190"], ["191", "190"], ["33", "52"], ["27", "52"], ["79", "110"], ["27", "110"], ["86", "110"], ["108", "115"], ["27", "115"], ["187", "186"], ["27", "186"], ["192", "191"], ["27", "191"], ["178", "187"], ["27", "187"], ["187", "192"], ["27", "192"], ["91", "96"], ["91", "98"], ["91", "100"], ["91", "95"], ["104", "115"], ["104", "113"], ["104", "118"], ["104", "110"], ["104", "119"], ["104", "121"], ["104", "123"], ["104", "108"], ["184", "195"], ["185", "192"], ["185", "191"], ["185", "190"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "41": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "45": "<(LOCAL,long K: long)<SUB>5</SUB>>", "47": "<(LOCAL,String[] s: java.lang.String[])<SUB>8</SUB>>", "49": "<(IDENTIFIER,s,String[] s = split(&quot; &quot;))<SUB>8</SUB>>", "51": "<(trim,trim())<SUB>8</SUB>>", "53": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,N = Long.parseLong(s[0]))<SUB>10</SUB>>", "57": "<(parseLong,Long.parseLong(s[0]))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>10</SUB>>", "61": "<(LITERAL,0,Long.parseLong(s[0]))<SUB>10</SUB>>", "63": "<(IDENTIFIER,K,K = Long.parseLong(s[1]))<SUB>11</SUB>>", "65": "<(IDENTIFIER,Long,Long.parseLong(s[1]))<SUB>11</SUB>>", "67": "<(IDENTIFIER,s,Long.parseLong(s[1]))<SUB>11</SUB>>", "6": "<(LOCAL,BigInteger bi: ANY)<SUB>13</SUB>>", "70": "<(IDENTIFIER,bi,ANY bi = new BigInteger(N + &quot;&quot;))<SUB>13</SUB>>", "72": "<(&lt;init&gt;,new BigInteger(N + &quot;&quot;))<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.addition,N + &quot;&quot;)<SUB>13</SUB>>", "75": "<(LITERAL,&quot;&quot;,N + &quot;&quot;)<SUB>13</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY a = new BigInteger(N + &quot;&quot;))<SUB>14</SUB>>", "78": "<(&lt;operator&gt;.alloc,new BigInteger(N + &quot;&quot;))<SUB>14</SUB>>", "7": "<(IDENTIFIER,a,new BigInteger(N + &quot;&quot;))<SUB>14</SUB>>", "81": "<(IDENTIFIER,N,N + &quot;&quot;)<SUB>14</SUB>>", "10": "<(LOCAL,BigInteger two: ANY)<SUB>15</SUB>>", "84": "<(IDENTIFIER,two,ANY two = new BigInteger(2 + &quot;&quot;))<SUB>15</SUB>>", "86": "<(&lt;init&gt;,new BigInteger(2 + &quot;&quot;))<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.addition,2 + &quot;&quot;)<SUB>15</SUB>>", "89": "<(LITERAL,&quot;&quot;,2 + &quot;&quot;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.equals,N == 0)<SUB>17</SUB>>", "93": "<(LITERAL,0,N == 0)<SUB>17</SUB>>", "95": "<(println,System.out.println(0))<SUB>19</SUB>>", "97": "<(IDENTIFIER,System,System.out.println(0))<SUB>19</SUB>>", "99": "<(LITERAL,0,System.out.println(0))<SUB>19</SUB>>", "101": "<(IDENTIFIER,System,System.exit(0))<SUB>20</SUB>>", "103": "<(CONTROL_STRUCTURE,if (K == 0),if (K == 0))<SUB>22</SUB>>", "105": "<(IDENTIFIER,K,K == 0)<SUB>22</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "109": "<(IDENTIFIER,a,a = multiply(two))<SUB>24</SUB>>", "111": "<(IDENTIFIER,a,multiply(two))<SUB>24</SUB>>", "113": "<(&lt;operator&gt;.assignment,a = mod(m))<SUB>25</SUB>>", "115": "<(mod,mod(m))<SUB>25</SUB>>", "117": "<(IDENTIFIER,m,mod(m))<SUB>25</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "121": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "123": "<(exit,System.exit(0))<SUB>28</SUB>>", "125": "<(LITERAL,0,System.exit(0))<SUB>28</SUB>>", "127": "<(&lt;operator&gt;.assignment,long p = pow(2, K))<SUB>31</SUB>>", "129": "<(pow,pow(2, K))<SUB>31</SUB>>", "131": "<(LITERAL,2,pow(2, K))<SUB>31</SUB>>", "12": "<(LOCAL,BigInteger p2: ANY)<SUB>33</SUB>>", "134": "<(IDENTIFIER,p2,ANY p2 = new BigInteger(p + &quot;&quot;))<SUB>33</SUB>>", "136": "<(&lt;init&gt;,new BigInteger(p + &quot;&quot;))<SUB>33</SUB>>", "137": "<(&lt;operator&gt;.addition,p + &quot;&quot;)<SUB>33</SUB>>", "139": "<(LITERAL,&quot;&quot;,p + &quot;&quot;)<SUB>33</SUB>>", "141": "<(&lt;operator&gt;.assignment,ANY tmp = subtract(BigInteger.ONE))<SUB>34</SUB>>", "143": "<(subtract,subtract(BigInteger.ONE))<SUB>34</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,BigInteger.ONE)<SUB>34</SUB>>", "147": "<(FIELD_IDENTIFIER,ONE,ONE)<SUB>34</SUB>>", "149": "<(IDENTIFIER,tmp,tmp = mod(m))<SUB>35</SUB>>", "151": "<(IDENTIFIER,tmp,mod(m))<SUB>35</SUB>>", "153": "<(&lt;operator&gt;.assignment,p2 = multiply(two))<SUB>37</SUB>>", "155": "<(multiply,multiply(two))<SUB>37</SUB>>", "157": "<(IDENTIFIER,two,multiply(two))<SUB>37</SUB>>", "159": "<(IDENTIFIER,p2,p2 = mod(m))<SUB>38</SUB>>", "161": "<(IDENTIFIER,p2,mod(m))<SUB>38</SUB>>", "163": "<(&lt;operator&gt;.assignment,a = multiply(p2))<SUB>40</SUB>>", "165": "<(multiply,multiply(p2))<SUB>40</SUB>>", "167": "<(IDENTIFIER,p2,multiply(p2))<SUB>40</SUB>>", "169": "<(IDENTIFIER,a,a = mod(m))<SUB>41</SUB>>", "171": "<(IDENTIFIER,a,mod(m))<SUB>41</SUB>>", "173": "<(&lt;operator&gt;.assignment,a = subtract(tmp))<SUB>43</SUB>>", "175": "<(subtract,subtract(tmp))<SUB>43</SUB>>", "177": "<(IDENTIFIER,tmp,subtract(tmp))<SUB>43</SUB>>", "179": "<(IDENTIFIER,a,a = mod(m))<SUB>44</SUB>>", "181": "<(IDENTIFIER,a,mod(m))<SUB>44</SUB>>", "183": "<(CONTROL_STRUCTURE,if (!(a.signum() == 1) &amp;&amp; !(a.signum() == 0)),if (!(a.signum() == 1) &amp;&amp; !(a.signum() == 0)))<SUB>46</SUB>>", "185": "<(&lt;operator&gt;.logicalNot,!(a.signum() == 1))<SUB>46</SUB>>", "187": "<(signum,signum())<SUB>46</SUB>>", "189": "<(LITERAL,1,a.signum() == 1)<SUB>46</SUB>>", "191": "<(&lt;operator&gt;.equals,a.signum() == 0)<SUB>46</SUB>>", "193": "<(IDENTIFIER,a,signum())<SUB>46</SUB>>", "195": "<(add,add(m))<SUB>47</SUB>>", "197": "<(IDENTIFIER,m,add(m))<SUB>47</SUB>>", "199": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "201": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "203": "<(MODIFIER,PUBLIC)>", "205": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}