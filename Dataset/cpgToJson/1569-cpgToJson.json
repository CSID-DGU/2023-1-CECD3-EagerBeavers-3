{"edges": [["21", "23"], ["21", "103"], ["21", "104"], ["21", "105"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "6"], ["23", "46"], ["23", "49"], ["23", "50"], ["23", "67"], ["23", "70"], ["23", "97"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "5"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "88"], ["82", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["89", "90"], ["89", "91"], ["89", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["46", "49"], ["49", "52"], ["67", "72"], ["97", "105"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "46"], ["52", "55"], ["55", "62"], ["55", "67"], ["58", "55"], ["72", "75"], ["75", "85"], ["75", "100"], ["78", "75"], ["98", "101"], ["101", "97"], ["30", "28"], ["61", "58"], ["100", "98"], ["62", "65"], ["65", "61"], ["82", "92"], ["82", "78"], ["83", "82"], ["89", "78"], ["85", "83"], ["91", "89"], ["92", "91"], ["21", "26"], ["22", "105"], ["24", "105"], ["27", "105"], ["27", "105"], ["32", "105"], ["37", "105"], ["39", "105"], ["37", "105"], ["37", "105"], ["42", "105"], ["42", "105"], ["46", "105"], ["49", "105"], ["67", "105"], ["67", "105"], ["72", "105"], ["75", "105"], ["75", "105"], ["75", "105"], ["97", "105"], ["101", "105"], ["97", "105"], ["97", "105"], ["83", "105"], ["82", "105"], ["82", "105"], ["91", "105"], ["91", "105"], ["89", "105"], ["89", "105"], ["78", "105"], ["61", "105"], ["65", "105"], ["61", "105"], ["61", "105"], ["58", "105"], ["67", "105"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["21", "46"], ["24", "27"], ["21", "27"], ["46", "49"], ["21", "49"], ["21", "52"], ["21", "67"], ["42", "67"], ["61", "67"], ["21", "72"], ["101", "97"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["32", "44"], ["21", "44"], ["52", "55"], ["58", "55"], ["21", "55"], ["44", "55"], ["55", "58"], ["21", "58"], ["65", "61"], ["72", "75"], ["78", "75"], ["21", "75"], ["55", "75"], ["75", "78"], ["21", "78"], ["49", "101"], ["83", "101"], ["89", "101"], ["21", "101"], ["39", "65"], ["21", "65"], ["83", "82"], ["83", "82"], ["49", "83"], ["89", "83"], ["21", "83"], ["67", "83"], ["91", "83"], ["61", "83"], ["83", "89"], ["21", "89"], ["91", "89"], ["91", "89"], ["67", "91"], ["83", "91"], ["37", "91"], ["21", "91"], ["55", "58"], ["55", "61"], ["55", "65"], ["55", "55"], ["55", "62"], ["75", "83"], ["75", "75"], ["75", "85"], ["75", "82"], ["75", "78"], ["82", "89"], ["82", "92"], ["82", "91"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int n: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(LOCAL,Long[] a: java.lang.Long[])<SUB>7</SUB>>", "43": "<(IDENTIFIER,a,Long[] a = new Long[n])<SUB>7</SUB>>", "45": "<(IDENTIFIER,n,new Long[n])<SUB>7</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY hash = new Hashtable&lt;Long, Boolean&gt;())<SUB>8</SUB>>", "48": "<(&lt;operator&gt;.alloc,new Hashtable&lt;Long, Boolean&gt;())<SUB>8</SUB>>", "5": "<(IDENTIFIER,hash,new Hashtable&lt;Long, Boolean&gt;())<SUB>8</SUB>>", "51": "<(LOCAL,int i: int)<SUB>11</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.assignment,a[i] = nextLong())<SUB>12</SUB>>", "63": "<(IDENTIFIER,a,a[i] = nextLong())<SUB>12</SUB>>", "65": "<(nextLong,nextLong())<SUB>12</SUB>>", "67": "<(sort,sort(a))<SUB>15</SUB>>", "69": "<(IDENTIFIER,a,sort(a))<SUB>15</SUB>>", "71": "<(LOCAL,int i: int)<SUB>17</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "81": "<(CONTROL_STRUCTURE,if (!hash.containsKey(a[i])),if (!hash.containsKey(a[i])))<SUB>18</SUB>>", "83": "<(containsKey,containsKey(a[i]))<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "87": "<(IDENTIFIER,i,containsKey(a[i]))<SUB>18</SUB>>", "89": "<(put,put(a[i] * k, true))<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.multiplication,a[i] * k)<SUB>19</SUB>>", "93": "<(IDENTIFIER,a,a[i] * k)<SUB>19</SUB>>", "95": "<(IDENTIFIER,k,a[i] * k)<SUB>19</SUB>>", "97": "<(println,println(hash.size()))<SUB>23</SUB>>", "99": "<(IDENTIFIER,System,println(hash.size()))<SUB>23</SUB>>", "101": "<(size,size())<SUB>23</SUB>>", "103": "<(MODIFIER,PUBLIC)>", "105": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}