{"edges": [["21", "22"], ["21", "23"], ["21", "170"], ["21", "171"], ["21", "172"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "74"], ["23", "6"], ["23", "141"], ["23", "144"], ["23", "145"], ["23", "165"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "65"], ["55", "67"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "87"], ["85", "92"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "108"], ["97", "117"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "138"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "5"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "155"], ["145", "157"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "46"], ["46", "53"], ["51", "57"], ["141", "144"], ["144", "147"], ["165", "172"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["53", "51"], ["57", "64"], ["60", "69"], ["60", "76"], ["65", "64"], ["76", "79"], ["79", "89"], ["79", "143"], ["82", "79"], ["143", "141"], ["147", "154"], ["150", "161"], ["150", "168"], ["155", "154"], ["166", "165"], ["30", "28"], ["62", "60"], ["68", "65"], ["152", "150"], ["158", "155"], ["168", "166"], ["64", "62"], ["69", "72"], ["72", "68"], ["87", "92"], ["92", "102"], ["92", "82"], ["95", "92"], ["154", "152"], ["160", "158"], ["89", "87"], ["99", "110"], ["117", "95"], ["161", "160"], ["101", "99"], ["109", "95"], ["109", "118"], ["118", "123"], ["121", "117"], ["102", "105"], ["105", "101"], ["110", "113"], ["113", "109"], ["123", "131"], ["126", "121"], ["127", "138"], ["138", "126"], ["129", "127"], ["130", "135"], ["135", "129"], ["131", "130"], ["21", "26"], ["22", "172"], ["24", "172"], ["27", "172"], ["27", "172"], ["32", "172"], ["32", "172"], ["39", "172"], ["37", "172"], ["37", "172"], ["42", "172"], ["46", "172"], ["46", "172"], ["46", "172"], ["51", "172"], ["51", "172"], ["51", "172"], ["79", "172"], ["79", "172"], ["141", "172"], ["144", "172"], ["147", "172"], ["150", "172"], ["150", "172"], ["150", "172"], ["165", "172"], ["165", "172"], ["165", "172"], ["160", "172"], ["158", "172"], ["158", "172"], ["155", "172"], ["87", "172"], ["87", "172"], ["92", "172"], ["92", "172"], ["82", "172"], ["101", "172"], ["101", "172"], ["99", "172"], ["99", "172"], ["110", "172"], ["110", "172"], ["109", "172"], ["113", "172"], ["109", "172"], ["109", "172"], ["117", "172"], ["121", "172"], ["130", "172"], ["130", "172"], ["129", "172"], ["135", "172"], ["129", "172"], ["127", "172"], ["126", "172"], ["126", "172"], ["121", "172"], ["117", "172"], ["117", "172"], ["95", "172"], ["68", "172"], ["72", "172"], ["68", "172"], ["68", "172"], ["65", "172"], ["46", "172"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["53", "51"], ["21", "141"], ["24", "27"], ["21", "27"], ["21", "46"], ["42", "46"], ["37", "46"], ["21", "57"], ["21", "76"], ["141", "144"], ["21", "144"], ["21", "147"], ["144", "165"], ["158", "165"], ["21", "165"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["32", "44"], ["21", "44"], ["44", "53"], ["21", "53"], ["57", "60"], ["65", "60"], ["21", "60"], ["51", "60"], ["60", "65"], ["21", "65"], ["72", "68"], ["76", "79"], ["82", "79"], ["21", "79"], ["53", "79"], ["92", "79"], ["21", "82"], ["79", "82"], ["147", "150"], ["155", "150"], ["21", "150"], ["51", "150"], ["60", "150"], ["150", "155"], ["21", "155"], ["79", "87"], ["21", "87"], ["144", "158"], ["21", "158"], ["46", "158"], ["39", "72"], ["21", "72"], ["87", "92"], ["95", "92"], ["21", "92"], ["79", "92"], ["92", "95"], ["21", "95"], ["101", "99"], ["101", "99"], ["121", "117"], ["121", "117"], ["121", "117"], ["46", "160"], ["21", "160"], ["79", "89"], ["21", "89"], ["51", "101"], ["68", "101"], ["110", "109"], ["110", "109"], ["113", "109"], ["113", "109"], ["127", "121"], ["21", "121"], ["46", "121"], ["117", "121"], ["127", "121"], ["121", "110"], ["21", "110"], ["99", "110"], ["21", "113"], ["46", "113"], ["130", "113"], ["127", "126"], ["127", "126"], ["46", "126"], ["110", "127"], ["21", "127"], ["129", "127"], ["129", "127"], ["130", "129"], ["130", "129"], ["135", "129"], ["131", "130"], ["131", "130"], ["21", "130"], ["110", "135"], ["21", "135"], ["21", "131"], ["113", "131"], ["60", "68"], ["60", "60"], ["60", "64"], ["60", "72"], ["60", "69"], ["60", "65"], ["60", "62"], ["79", "89"], ["79", "92"], ["79", "87"], ["79", "82"], ["79", "79"], ["150", "160"], ["150", "154"], ["150", "161"], ["150", "150"], ["150", "152"], ["150", "155"], ["150", "158"], ["92", "113"], ["92", "99"], ["92", "102"], ["92", "95"], ["92", "92"], ["92", "101"], ["92", "105"], ["92", "110"], ["92", "109"], ["109", "131"], ["109", "121"], ["109", "123"], ["109", "129"], ["109", "138"], ["109", "126"], ["109", "130"], ["109", "118"], ["109", "135"], ["109", "117"], ["109", "127"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY qwe = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,qwe,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,qwe,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,double r = nextDouble())<SUB>4</SUB>>", "39": "<(nextDouble,nextDouble())<SUB>4</SUB>>", "41": "<(LOCAL,double[] fy: double[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,fy,double[] fy = new double[n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new double[n])<SUB>6</SUB>>", "47": "<(IDENTIFIER,Arrays,fill(fy, r))<SUB>7</SUB>>", "49": "<(IDENTIFIER,r,fill(fy, r))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,double[] xs = new double[n])<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.alloc,new double[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; xs.length); i++),for (int i = 0; Some(i &lt; xs.length); i++))<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "61": "<(IDENTIFIER,i,i &lt; xs.length)<SUB>10</SUB>>", "63": "<(IDENTIFIER,xs,i &lt; xs.length)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,xs[i] = nextDouble())<SUB>11</SUB>>", "73": "<(IDENTIFIER,qwe,nextDouble())<SUB>11</SUB>>", "75": "<(LOCAL,int i: int)<SUB>14</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "91": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "93": "<(IDENTIFIER,j,j &lt; n)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>16</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,double dx = xs[j] - xs[i])<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.subtraction,xs[j] - xs[i])<SUB>17</SUB>>", "103": "<(IDENTIFIER,xs,xs[j] - xs[i])<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,xs[j] - xs[i])<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.greaterThan,Math.abs(dx) &gt; 2 * r)<SUB>18</SUB>>", "111": "<(IDENTIFIER,Math,Math.abs(dx))<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>18</SUB>>", "115": "<(IDENTIFIER,r,2 * r)<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.assignment,fy[j] = Math.max(fy[j], Math.sqrt(4 * r * r - dx * dx) + fy[i]))<SUB>19</SUB>>", "119": "<(IDENTIFIER,fy,fy[j] = Math.max(fy[j], Math.sqrt(4 * r * r - dx * dx) + fy[i]))<SUB>19</SUB>>", "121": "<(max,Math.max(fy[j], Math.sqrt(4 * r * r - dx * dx) + fy[i]))<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,fy[j])<SUB>19</SUB>>", "125": "<(IDENTIFIER,j,Math.max(fy[j], Math.sqrt(4 * r * r - dx * dx) + fy[i]))<SUB>19</SUB>>", "127": "<(sqrt,Math.sqrt(4 * r * r - dx * dx))<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.subtraction,4 * r * r - dx * dx)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>19</SUB>>", "133": "<(IDENTIFIER,r,4 * r)<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.multiplication,dx * dx)<SUB>19</SUB>>", "137": "<(IDENTIFIER,dx,dx * dx)<SUB>19</SUB>>", "139": "<(IDENTIFIER,fy,Math.sqrt(4 * r * r - dx * dx) + fy[i])<SUB>19</SUB>>", "6": "<(LOCAL,StringBuilder stb: java.lang.StringBuilder)<SUB>24</SUB>>", "142": "<(IDENTIFIER,stb,StringBuilder stb = new StringBuilder())<SUB>24</SUB>>", "144": "<(&lt;init&gt;,new StringBuilder())<SUB>24</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; xs.length); i++),for (int i = 0; Some(i &lt; xs.length); i++))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "149": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "151": "<(IDENTIFIER,i,i &lt; xs.length)<SUB>25</SUB>>", "153": "<(IDENTIFIER,xs,i &lt; xs.length)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "159": "<(IDENTIFIER,stb,stb.append(fy[i] + &quot; &quot;))<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,fy[i])<SUB>26</SUB>>", "163": "<(IDENTIFIER,i,fy[i] + &quot; &quot;)<SUB>26</SUB>>", "165": "<(println,System.out.println(stb))<SUB>28</SUB>>", "167": "<(IDENTIFIER,System,System.out.println(stb))<SUB>28</SUB>>", "169": "<(IDENTIFIER,stb,System.out.println(stb))<SUB>28</SUB>>", "171": "<(MODIFIER,STATIC)>"}}