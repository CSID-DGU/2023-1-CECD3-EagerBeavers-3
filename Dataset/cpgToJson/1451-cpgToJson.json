{"edges": [["19", "20"], ["19", "21"], ["19", "68"], ["19", "69"], ["19", "70"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "28"], ["21", "29"], ["21", "33"], ["21", "35"], ["21", "66"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["35", "36"], ["35", "42"], ["36", "37"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "53"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "52"], ["50", "51"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "63"], ["60", "61"], ["61", "62"], ["63", "64"], ["64", "65"], ["66", "67"], ["22", "25"], ["25", "26"], ["26", "31"], ["29", "33"], ["33", "39"], ["66", "70"], ["24", "22"], ["31", "29"], ["36", "46"], ["36", "66"], ["37", "36"], ["43", "56"], ["53", "66"], ["39", "37"], ["44", "50"], ["47", "43"], ["54", "61"], ["57", "53"], ["46", "44"], ["49", "47"], ["56", "54"], ["59", "57"], ["50", "49"], ["60", "64"], ["63", "59"], ["61", "60"], ["64", "63"], ["19", "24"], ["20", "70"], ["22", "70"], ["25", "70"], ["26", "70"], ["29", "70"], ["29", "70"], ["29", "70"], ["33", "70"], ["39", "70"], ["37", "70"], ["36", "70"], ["36", "70"], ["50", "70"], ["49", "70"], ["49", "70"], ["47", "70"], ["43", "70"], ["53", "70"], ["59", "70"], ["64", "70"], ["63", "70"], ["59", "70"], ["57", "70"], ["53", "70"], ["66", "70"], ["66", "70"], ["19", "20"], ["19", "22"], ["31", "29"], ["22", "25"], ["19", "25"], ["25", "26"], ["19", "26"], ["26", "33"], ["19", "33"], ["33", "66"], ["19", "66"], ["19", "31"], ["37", "36"], ["37", "36"], ["19", "37"], ["39", "37"], ["39", "37"], ["50", "43"], ["19", "43"], ["49", "43"], ["49", "43"], ["43", "53"], ["50", "53"], ["19", "53"], ["59", "53"], ["59", "53"], ["31", "39"], ["19", "39"], ["19", "47"], ["49", "47"], ["49", "47"], ["19", "57"], ["59", "57"], ["59", "57"], ["50", "49"], ["29", "49"], ["19", "49"], ["60", "59"], ["63", "59"], ["39", "50"], ["19", "50"], ["61", "60"], ["64", "63"], ["19", "61"], ["61", "64"], ["19", "64"], ["36", "47"], ["36", "49"], ["36", "60"], ["36", "61"], ["36", "50"], ["36", "64"], ["36", "59"], ["36", "57"], ["36", "44"], ["36", "46"], ["36", "53"], ["36", "56"], ["36", "54"], ["36", "63"], ["36", "43"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY solver = new taskB())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new taskB())<SUB>3</SUB>>", "3": "<(IDENTIFIER,solver,new taskB())<SUB>3</SUB>>", "27": "<(IDENTIFIER,solver,open())<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.assignment,long time = System.currentTimeMillis())<SUB>5</SUB>>", "31": "<(currentTimeMillis,System.currentTimeMillis())<SUB>5</SUB>>", "33": "<(solve,solve())<SUB>6</SUB>>", "35": "<(CONTROL_STRUCTURE,if (!&quot;true&quot;.equals(System.getProperty(&quot;ONLINE_JUDGE&quot;))),if (!&quot;true&quot;.equals(System.getProperty(&quot;ONLINE_JUDGE&quot;))))<SUB>7</SUB>>", "37": "<(equals,this.equals(System.getProperty(&quot;ONLINE_JUDGE&quot;)))<SUB>7</SUB>>", "39": "<(getProperty,System.getProperty(&quot;ONLINE_JUDGE&quot;))<SUB>7</SUB>>", "41": "<(LITERAL,&quot;ONLINE_JUDGE&quot;,System.getProperty(&quot;ONLINE_JUDGE&quot;))<SUB>7</SUB>>", "43": "<(println,System.out.println(&quot;Spent time: &quot; + (System.currentTimeMillis() - time)))<SUB>8</SUB>>", "45": "<(IDENTIFIER,System,System.out.println(&quot;Spent time: &quot; + (System.currentTimeMillis() - time)))<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.addition,&quot;Spent time: &quot; + (System.currentTimeMillis() - time))<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.subtraction,System.currentTimeMillis() - time)<SUB>9</SUB>>", "51": "<(IDENTIFIER,System,System.currentTimeMillis())<SUB>9</SUB>>", "53": "<(println,System.out.println(&quot;Memory: &quot; + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory())))<SUB>10</SUB>>", "55": "<(IDENTIFIER,System,System.out.println(&quot;Memory: &quot; + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory())))<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.addition,&quot;Memory: &quot; + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.subtraction,Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory())<SUB>11</SUB>>", "61": "<(getRuntime,Runtime.getRuntime())<SUB>11</SUB>>", "63": "<(freeMemory,Runtime.getRuntime().freeMemory())<SUB>11</SUB>>", "65": "<(IDENTIFIER,Runtime,Runtime.getRuntime())<SUB>11</SUB>>", "67": "<(IDENTIFIER,solver,close())<SUB>14</SUB>>", "69": "<(MODIFIER,STATIC)>"}}