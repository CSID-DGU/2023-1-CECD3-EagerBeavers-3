{"edges": [["23", "24"], ["23", "25"], ["23", "148"], ["23", "149"], ["23", "150"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "48"], ["25", "49"], ["25", "54"], ["25", "8"], ["25", "87"], ["25", "90"], ["25", "91"], ["25", "143"], ["25", "146"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "61"], ["54", "64"], ["54", "66"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "7"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "116"], ["101", "130"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["108", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["122", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["130", "131"], ["130", "132"], ["130", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "142"], ["136", "137"], ["136", "138"], ["136", "141"], ["138", "139"], ["138", "140"], ["143", "144"], ["143", "145"], ["146", "147"], ["26", "29"], ["29", "32"], ["30", "36"], ["33", "40"], ["38", "45"], ["43", "53"], ["49", "58"], ["87", "90"], ["90", "93"], ["143", "146"], ["146", "150"], ["28", "26"], ["32", "30"], ["34", "33"], ["40", "38"], ["45", "43"], ["51", "49"], ["56", "61"], ["61", "75"], ["61", "89"], ["64", "61"], ["66", "64"], ["89", "87"], ["93", "96"], ["96", "111"], ["96", "143"], ["99", "96"], ["36", "34"], ["53", "51"], ["58", "56"], ["68", "66"], ["102", "125"], ["116", "132"], ["130", "99"], ["70", "68"], ["104", "102"], ["118", "116"], ["132", "138"], ["135", "130"], ["72", "70"], ["106", "104"], ["120", "118"], ["136", "135"], ["73", "80"], ["78", "72"], ["108", "106"], ["122", "120"], ["138", "136"], ["75", "73"], ["79", "84"], ["84", "78"], ["110", "108"], ["124", "122"], ["80", "79"], ["111", "110"], ["125", "124"], ["23", "28"], ["24", "150"], ["26", "150"], ["29", "150"], ["30", "150"], ["33", "150"], ["33", "150"], ["38", "150"], ["38", "150"], ["43", "150"], ["45", "150"], ["43", "150"], ["43", "150"], ["49", "150"], ["49", "150"], ["56", "150"], ["56", "150"], ["61", "150"], ["87", "150"], ["90", "150"], ["90", "150"], ["93", "150"], ["96", "150"], ["96", "150"], ["96", "150"], ["143", "150"], ["143", "150"], ["146", "150"], ["146", "150"], ["108", "150"], ["106", "150"], ["104", "150"], ["102", "150"], ["102", "150"], ["120", "150"], ["122", "150"], ["120", "150"], ["118", "150"], ["116", "150"], ["116", "150"], ["130", "150"], ["130", "150"], ["135", "150"], ["130", "150"], ["130", "150"], ["99", "150"], ["70", "150"], ["72", "150"], ["79", "150"], ["78", "150"], ["78", "150"], ["72", "150"], ["70", "150"], ["68", "150"], ["66", "150"], ["66", "150"], ["64", "150"], ["23", "24"], ["23", "26"], ["23", "30"], ["40", "38"], ["45", "43"], ["45", "43"], ["23", "87"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["58", "56"], ["58", "56"], ["68", "66"], ["68", "66"], ["87", "90"], ["23", "90"], ["23", "93"], ["33", "143"], ["23", "143"], ["49", "143"], ["116", "143"], ["66", "143"], ["143", "146"], ["23", "146"], ["29", "40"], ["23", "40"], ["40", "45"], ["23", "45"], ["38", "45"], ["56", "61"], ["64", "61"], ["23", "61"], ["79", "64"], ["23", "64"], ["93", "96"], ["99", "96"], ["23", "96"], ["58", "96"], ["80", "96"], ["96", "99"], ["23", "99"], ["104", "102"], ["104", "102"], ["118", "116"], ["118", "116"], ["45", "58"], ["23", "58"], ["49", "68"], ["66", "68"], ["23", "68"], ["70", "68"], ["70", "68"], ["136", "130"], ["23", "130"], ["43", "130"], ["136", "130"], ["136", "130"], ["23", "70"], ["72", "70"], ["72", "70"], ["49", "104"], ["116", "104"], ["66", "104"], ["23", "104"], ["106", "104"], ["106", "104"], ["102", "118"], ["23", "118"], ["120", "118"], ["120", "118"], ["136", "135"], ["136", "135"], ["136", "135"], ["23", "135"], ["73", "72"], ["73", "72"], ["78", "72"], ["78", "72"], ["120", "106"], ["70", "106"], ["23", "106"], ["108", "106"], ["108", "106"], ["108", "106"], ["106", "120"], ["23", "120"], ["122", "120"], ["122", "120"], ["122", "120"], ["122", "136"], ["23", "136"], ["43", "136"], ["110", "136"], ["61", "73"], ["23", "73"], ["43", "73"], ["78", "73"], ["79", "78"], ["79", "78"], ["43", "78"], ["73", "78"], ["90", "108"], ["130", "108"], ["23", "108"], ["110", "108"], ["110", "108"], ["108", "122"], ["23", "122"], ["43", "122"], ["110", "122"], ["80", "79"], ["80", "79"], ["73", "79"], ["23", "79"], ["43", "110"], ["130", "110"], ["78", "110"], ["23", "110"], ["43", "124"], ["110", "124"], ["23", "124"], ["58", "80"], ["23", "80"], ["61", "68"], ["61", "73"], ["61", "64"], ["61", "66"], ["61", "75"], ["61", "84"], ["61", "72"], ["61", "79"], ["61", "80"], ["61", "61"], ["61", "70"], ["61", "78"], ["96", "96"], ["96", "120"], ["96", "136"], ["96", "116"], ["96", "122"], ["96", "99"], ["96", "102"], ["96", "132"], ["96", "104"], ["96", "106"], ["96", "138"], ["96", "130"], ["96", "118"], ["96", "135"], ["96", "110"], ["96", "124"], ["96", "108"], ["96", "125"], ["96", "111"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scan = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(LOCAL,int n: int)<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,scan,nextInt())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,long[] a = nextLongArray(n))<SUB>5</SUB>>", "45": "<(nextLongArray,nextLongArray(n))<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,nextLongArray(n))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY res = BigInteger.ZERO)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,BigInteger.ZERO)<SUB>6</SUB>>", "53": "<(FIELD_IDENTIFIER,ZERO,ZERO)<SUB>6</SUB>>", "55": "<(LOCAL,int i: int)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,int i = n - 1)<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,n - 1)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,i &gt;= 0)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i--)<SUB>7</SUB>>", "67": "<(IDENTIFIER,res,res = add(BigInteger.valueOf(i * a[i] - (n - 1 - i) * a[i])))<SUB>7</SUB>>", "69": "<(IDENTIFIER,res,add(BigInteger.valueOf(i * a[i] - (n - 1 - i) * a[i])))<SUB>7</SUB>>", "71": "<(IDENTIFIER,BigInteger,valueOf(i * a[i] - (n - 1 - i) * a[i]))<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.multiplication,i * a[i])<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "77": "<(IDENTIFIER,i,i * a[i])<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.subtraction,n - 1 - i)<SUB>7</SUB>>", "81": "<(IDENTIFIER,n,n - 1)<SUB>7</SUB>>", "83": "<(IDENTIFIER,i,n - 1 - i)<SUB>7</SUB>>", "85": "<(IDENTIFIER,a,(n - 1 - i) * a[i])<SUB>7</SUB>>", "8": "<(LOCAL,HashMap&lt;Long, Long&gt; map: ANY)<SUB>8</SUB>>", "88": "<(IDENTIFIER,map,ANY map = new HashMap&lt;&gt;())<SUB>8</SUB>>", "90": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>8</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "103": "<(IDENTIFIER,res,res = subtract(BigInteger.valueOf(map.getOrDefault(a[i] - 1, 0L))))<SUB>10</SUB>>", "105": "<(IDENTIFIER,res,subtract(BigInteger.valueOf(map.getOrDefault(a[i] - 1, 0L))))<SUB>10</SUB>>", "107": "<(IDENTIFIER,BigInteger,valueOf(map.getOrDefault(a[i] - 1, 0L)))<SUB>10</SUB>>", "109": "<(IDENTIFIER,map,getOrDefault(a[i] - 1, 0L))<SUB>10</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "113": "<(IDENTIFIER,i,a[i] - 1)<SUB>10</SUB>>", "115": "<(LITERAL,0L,getOrDefault(a[i] - 1, 0L))<SUB>10</SUB>>", "117": "<(IDENTIFIER,res,res = add(BigInteger.valueOf(map.getOrDefault(a[i] + 1, 0L))))<SUB>11</SUB>>", "119": "<(IDENTIFIER,res,add(BigInteger.valueOf(map.getOrDefault(a[i] + 1, 0L))))<SUB>11</SUB>>", "121": "<(IDENTIFIER,BigInteger,valueOf(map.getOrDefault(a[i] + 1, 0L)))<SUB>11</SUB>>", "123": "<(IDENTIFIER,map,getOrDefault(a[i] + 1, 0L))<SUB>11</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "127": "<(IDENTIFIER,i,a[i] + 1)<SUB>11</SUB>>", "129": "<(LITERAL,0L,getOrDefault(a[i] + 1, 0L))<SUB>11</SUB>>", "131": "<(IDENTIFIER,map,put(a[i], map.getOrDefault(a[i], 0L) + 1))<SUB>12</SUB>>", "133": "<(IDENTIFIER,a,put(a[i], map.getOrDefault(a[i], 0L) + 1))<SUB>12</SUB>>", "135": "<(&lt;operator&gt;.addition,map.getOrDefault(a[i], 0L) + 1)<SUB>12</SUB>>", "137": "<(IDENTIFIER,map,getOrDefault(a[i], 0L))<SUB>12</SUB>>", "139": "<(IDENTIFIER,a,getOrDefault(a[i], 0L))<SUB>12</SUB>>", "141": "<(LITERAL,0L,getOrDefault(a[i], 0L))<SUB>12</SUB>>", "143": "<(println,println(res))<SUB>14</SUB>>", "145": "<(IDENTIFIER,res,println(res))<SUB>14</SUB>>", "147": "<(IDENTIFIER,out,close())<SUB>15</SUB>>", "149": "<(MODIFIER,STATIC)>"}}