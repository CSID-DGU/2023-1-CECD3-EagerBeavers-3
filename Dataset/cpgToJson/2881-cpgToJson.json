{"edges": [["21", "22"], ["21", "23"], ["21", "78"], ["21", "79"], ["21", "80"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "74"], ["23", "76"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "49"], ["43", "61"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["62", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "45"], ["74", "76"], ["76", "80"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["44", "53"], ["44", "66"], ["30", "28"], ["37", "35"], ["45", "44"], ["50", "74"], ["51", "55"], ["54", "50"], ["63", "74"], ["53", "51"], ["55", "58"], ["58", "54"], ["64", "68"], ["67", "63"], ["66", "64"], ["68", "71"], ["71", "67"], ["21", "26"], ["22", "80"], ["24", "80"], ["27", "80"], ["27", "80"], ["31", "80"], ["34", "80"], ["39", "80"], ["39", "80"], ["44", "80"], ["44", "80"], ["63", "80"], ["67", "80"], ["71", "80"], ["67", "80"], ["63", "80"], ["50", "80"], ["54", "80"], ["58", "80"], ["54", "80"], ["50", "80"], ["74", "80"], ["76", "80"], ["76", "80"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["41", "74"], ["21", "74"], ["34", "76"], ["21", "76"], ["27", "41"], ["21", "41"], ["45", "44"], ["45", "44"], ["21", "44"], ["39", "45"], ["21", "45"], ["34", "50"], ["21", "50"], ["58", "50"], ["58", "50"], ["21", "54"], ["58", "54"], ["58", "54"], ["34", "63"], ["21", "63"], ["71", "63"], ["71", "63"], ["21", "55"], ["45", "58"], ["21", "58"], ["21", "67"], ["71", "67"], ["71", "67"], ["21", "68"], ["45", "71"], ["21", "71"], ["44", "58"], ["44", "68"], ["44", "50"], ["44", "64"], ["44", "51"], ["44", "66"], ["44", "71"], ["44", "55"], ["44", "53"], ["44", "67"], ["44", "54"], ["44", "63"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "47": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "53": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.addition,4 + &quot; &quot;)<SUB>7</SUB>>", "57": "<(LITERAL,&quot; &quot;,4 + &quot; &quot;)<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,n - 4)<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "63": "<(println,System.out.println(9 + &quot; &quot; + (n - 9)))<SUB>9</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(9 + &quot; &quot; + (n - 9)))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.addition,9 + &quot; &quot; + (n - 9))<SUB>9</SUB>>", "69": "<(LITERAL,9,9 + &quot; &quot;)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - 9)<SUB>9</SUB>>", "73": "<(LITERAL,9,n - 9)<SUB>9</SUB>>", "75": "<(IDENTIFIER,in,close())<SUB>12</SUB>>", "77": "<(IDENTIFIER,out,close())<SUB>13</SUB>>", "79": "<(MODIFIER,STATIC)>"}}