{"edges": [["21", "22"], ["21", "23"], ["21", "240"], ["21", "241"], ["21", "242"], ["23", "24"], ["23", "25"], ["23", "4"], ["23", "29"], ["23", "32"], ["23", "6"], ["23", "33"], ["23", "36"], ["23", "37"], ["23", "38"], ["23", "43"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "85"], ["23", "86"], ["23", "90"], ["23", "109"], ["23", "110"], ["23", "115"], ["23", "165"], ["23", "166"], ["23", "171"], ["23", "235"], ["23", "238"], ["25", "26"], ["25", "27"], ["27", "28"], ["29", "30"], ["29", "31"], ["32", "3"], ["33", "34"], ["33", "35"], ["36", "5"], ["38", "39"], ["38", "40"], ["40", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "53"], ["43", "55"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "62"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "84"], ["82", "83"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "127"], ["125", "132"], ["125", "135"], ["125", "137"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "149"], ["143", "150"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["150", "156"], ["150", "158"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "179"], ["171", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["181", "183"], ["181", "188"], ["181", "229"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "207"], ["198", "221"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["209", "212"], ["212", "213"], ["212", "220"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["221", "222"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["231", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["25", "31"], ["29", "32"], ["32", "35"], ["33", "36"], ["36", "41"], ["38", "45"], ["66", "72"], ["86", "92"], ["110", "117"], ["166", "173"], ["235", "238"], ["238", "242"], ["27", "25"], ["31", "29"], ["35", "33"], ["40", "38"], ["45", "52"], ["48", "59"], ["48", "68"], ["53", "52"], ["68", "66"], ["72", "75"], ["75", "82"], ["75", "88"], ["78", "75"], ["80", "78"], ["88", "86"], ["92", "95"], ["95", "101"], ["95", "112"], ["98", "95"], ["100", "98"], ["112", "110"], ["117", "120"], ["120", "129"], ["120", "170"], ["123", "120"], ["168", "166"], ["173", "176"], ["176", "187"], ["176", "235"], ["179", "176"], ["41", "40"], ["50", "48"], ["57", "62"], ["62", "53"], ["82", "80"], ["101", "106"], ["104", "100"], ["127", "132"], ["132", "139"], ["132", "123"], ["135", "132"], ["137", "135"], ["170", "168"], ["183", "190"], ["229", "179"], ["52", "50"], ["59", "57"], ["106", "104"], ["129", "127"], ["138", "145"], ["143", "137"], ["185", "183"], ["190", "193"], ["193", "201"], ["193", "231"], ["196", "193"], ["231", "229"], ["139", "138"], ["144", "143"], ["144", "153"], ["150", "143"], ["187", "185"], ["199", "215"], ["199", "227"], ["207", "196"], ["145", "144"], ["151", "156"], ["151", "159"], ["156", "150"], ["158", "150"], ["200", "205"], ["205", "199"], ["209", "207"], ["153", "151"], ["159", "162"], ["162", "158"], ["201", "200"], ["212", "209"], ["223", "231"], ["213", "212"], ["225", "223"], ["214", "213"], ["227", "225"], ["215", "214"], ["21", "27"], ["22", "242"], ["25", "242"], ["25", "242"], ["29", "242"], ["32", "242"], ["32", "242"], ["33", "242"], ["36", "242"], ["38", "242"], ["41", "242"], ["40", "242"], ["38", "242"], ["38", "242"], ["45", "242"], ["48", "242"], ["48", "242"], ["48", "242"], ["68", "242"], ["66", "242"], ["66", "242"], ["86", "242"], ["86", "242"], ["86", "242"], ["110", "242"], ["110", "242"], ["110", "242"], ["120", "242"], ["120", "242"], ["166", "242"], ["166", "242"], ["173", "242"], ["176", "242"], ["176", "242"], ["176", "242"], ["235", "242"], ["235", "242"], ["238", "242"], ["183", "242"], ["190", "242"], ["193", "242"], ["193", "242"], ["193", "242"], ["199", "242"], ["199", "242"], ["199", "242"], ["223", "242"], ["231", "242"], ["231", "242"], ["229", "242"], ["229", "242"], ["179", "242"], ["213", "242"], ["212", "242"], ["209", "242"], ["207", "242"], ["207", "242"], ["196", "242"], ["127", "242"], ["127", "242"], ["132", "242"], ["132", "242"], ["123", "242"], ["137", "242"], ["144", "242"], ["143", "242"], ["151", "242"], ["150", "242"], ["150", "242"], ["150", "242"], ["143", "242"], ["137", "242"], ["137", "242"], ["135", "242"], ["100", "242"], ["104", "242"], ["104", "242"], ["100", "242"], ["100", "242"], ["98", "242"], ["80", "242"], ["82", "242"], ["80", "242"], ["80", "242"], ["78", "242"], ["57", "242"], ["62", "242"], ["62", "242"], ["53", "242"], ["238", "242"], ["235", "242"], ["21", "22"], ["27", "25"], ["21", "29"], ["21", "33"], ["40", "38"], ["68", "66"], ["88", "86"], ["112", "110"], ["112", "110"], ["29", "32"], ["21", "32"], ["33", "36"], ["21", "36"], ["21", "45"], ["21", "72"], ["21", "92"], ["104", "100"], ["104", "100"], ["21", "117"], ["21", "173"], ["21", "235"], ["166", "235"], ["229", "235"], ["21", "238"], ["21", "27"], ["41", "40"], ["45", "48"], ["53", "48"], ["21", "48"], ["38", "48"], ["48", "53"], ["21", "53"], ["38", "57"], ["36", "68"], ["62", "68"], ["21", "68"], ["72", "75"], ["78", "75"], ["21", "75"], ["66", "75"], ["80", "78"], ["21", "78"], ["32", "80"], ["21", "80"], ["82", "80"], ["75", "80"], ["25", "88"], ["21", "88"], ["92", "95"], ["98", "95"], ["21", "95"], ["88", "95"], ["95", "98"], ["21", "98"], ["75", "112"], ["21", "112"], ["95", "112"], ["117", "120"], ["123", "120"], ["21", "120"], ["112", "120"], ["120", "123"], ["144", "123"], ["21", "123"], ["129", "127"], ["129", "127"], ["132", "137"], ["151", "137"], ["21", "137"], ["156", "137"], ["173", "176"], ["179", "176"], ["21", "176"], ["112", "176"], ["129", "176"], ["153", "176"], ["176", "179"], ["213", "179"], ["21", "179"], ["231", "183"], ["231", "229"], ["231", "229"], ["231", "229"], ["27", "41"], ["21", "41"], ["36", "62"], ["21", "62"], ["57", "62"], ["68", "82"], ["21", "82"], ["32", "104"], ["80", "104"], ["21", "104"], ["38", "104"], ["127", "132"], ["135", "132"], ["21", "132"], ["21", "135"], ["132", "135"], ["151", "135"], ["21", "190"], ["112", "129"], ["153", "129"], ["21", "129"], ["132", "143"], ["151", "143"], ["21", "143"], ["156", "143"], ["190", "193"], ["196", "193"], ["21", "193"], ["120", "193"], ["193", "196"], ["21", "196"], ["209", "207"], ["209", "207"], ["209", "207"], ["209", "231"], ["21", "231"], ["166", "231"], ["229", "231"], ["183", "231"], ["223", "231"], ["207", "231"], ["86", "144"], ["120", "144"], ["21", "144"], ["156", "150"], ["213", "199"], ["205", "199"], ["132", "151"], ["21", "151"], ["153", "151"], ["153", "151"], ["21", "156"], ["21", "205"], ["231", "209"], ["21", "209"], ["183", "209"], ["207", "209"], ["213", "209"], ["213", "209"], ["231", "223"], ["209", "223"], ["129", "153"], ["21", "153"], ["151", "162"], ["21", "162"], ["213", "212"], ["213", "212"], ["21", "212"], ["199", "213"], ["176", "213"], ["21", "213"], ["48", "57"], ["48", "52"], ["48", "50"], ["48", "59"], ["48", "48"], ["48", "53"], ["48", "62"], ["75", "75"], ["75", "80"], ["75", "82"], ["75", "78"], ["95", "98"], ["95", "104"], ["95", "95"], ["95", "101"], ["95", "100"], ["95", "106"], ["120", "120"], ["120", "132"], ["120", "129"], ["120", "127"], ["120", "123"], ["176", "179"], ["176", "185"], ["176", "187"], ["176", "190"], ["176", "231"], ["176", "183"], ["176", "193"], ["176", "176"], ["176", "229"], ["132", "145"], ["132", "132"], ["132", "144"], ["132", "138"], ["132", "137"], ["132", "139"], ["132", "143"], ["132", "135"], ["193", "201"], ["193", "205"], ["193", "200"], ["193", "199"], ["144", "150"], ["144", "151"], ["144", "153"], ["199", "214"], ["199", "225"], ["199", "215"], ["199", "209"], ["199", "196"], ["199", "213"], ["199", "223"], ["199", "207"], ["199", "212"], ["199", "193"], ["199", "227"], ["151", "162"], ["151", "158"], ["151", "159"], ["151", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,int n = i())<SUB>2</SUB>>", "27": "<(i,i())<SUB>2</SUB>>", "4": "<(LOCAL,TreeMap&lt;Character, Integer&gt; map: ANY)<SUB>3</SUB>>", "30": "<(IDENTIFIER,map,ANY map = new TreeMap&lt;Character, Integer&gt;())<SUB>3</SUB>>", "32": "<(&lt;init&gt;,new TreeMap&lt;Character, Integer&gt;())<SUB>3</SUB>>", "6": "<(LOCAL,TreeSet&lt;Character&gt; set: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,set,ANY set = new TreeSet&lt;Character&gt;())<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new TreeSet&lt;Character&gt;())<SUB>4</SUB>>", "37": "<(LOCAL,char[] c: char[])<SUB>5</SUB>>", "39": "<(IDENTIFIER,c,char[] c = toCharArray())<SUB>5</SUB>>", "41": "<(S,S())<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>6</SUB>>", "47": "<(LITERAL,0,int $idx0 = 0)<SUB>6</SUB>>", "49": "<(IDENTIFIER,$idx0,$idx0 &lt; c.length)>", "51": "<(IDENTIFIER,c,$idx0 &lt; c.length)>", "53": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>6</SUB>>", "61": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "63": "<(IDENTIFIER,set,add(t))<SUB>7</SUB>>", "65": "<(LOCAL,int size: int)<SUB>8</SUB>>", "67": "<(IDENTIFIER,size,int size = size())<SUB>8</SUB>>", "69": "<(IDENTIFIER,set,size())<SUB>8</SUB>>", "71": "<(LOCAL,int i: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; size)<SUB>9</SUB>>", "77": "<(IDENTIFIER,size,i &lt; size)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "81": "<(IDENTIFIER,map,put(set.pollFirst(), i))<SUB>10</SUB>>", "83": "<(IDENTIFIER,set,pollFirst())<SUB>10</SUB>>", "85": "<(LOCAL,int[] a: int[])<SUB>11</SUB>>", "87": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>11</SUB>>", "89": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "91": "<(LOCAL,int i: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,a[i] = get(c[i]))<SUB>13</SUB>>", "105": "<(IDENTIFIER,map,get(c[i]))<SUB>13</SUB>>", "107": "<(IDENTIFIER,c,get(c[i]))<SUB>13</SUB>>", "109": "<(LOCAL,int[][] erl: int[][])<SUB>14</SUB>>", "111": "<(IDENTIFIER,erl,int[][] erl = new int[size][n])<SUB>14</SUB>>", "113": "<(IDENTIFIER,size,new int[size][n])<SUB>14</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; size); i++),for (int i = 0; Some(i &lt; size); i++))<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "121": "<(IDENTIFIER,i,i &lt; size)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j = n - 1; Some(j &gt;= 0); j--),for (int j = n - 1; Some(j &gt;= 0); j--))<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.assignment,int j = n - 1)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>16</SUB>>", "131": "<(LITERAL,1,n - 1)<SUB>16</SUB>>", "133": "<(IDENTIFIER,j,j &gt;= 0)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.postDecrement,j--)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.assignment,erl[i][j] = (a[j] == i) ? j : (j == n - 1 ? -1 : erl[i][j + 1]))<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,erl[i])<SUB>17</SUB>>", "141": "<(IDENTIFIER,i,erl[i][j] = (a[j] == i) ? j : (j == n - 1 ? -1 : erl[i][j + 1]))<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.conditional,(a[j] == i) ? j : (j == n - 1 ? -1 : erl[i][j + 1]))<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>17</SUB>>", "147": "<(IDENTIFIER,j,a[j] == i)<SUB>17</SUB>>", "149": "<(IDENTIFIER,j,(a[j] == i) ? j : (j == n - 1 ? -1 : erl[i][j + 1]))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.equals,j == n - 1)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "155": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "157": "<(LITERAL,1,-1)<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,erl[i])<SUB>17</SUB>>", "161": "<(IDENTIFIER,i,j == n - 1 ? -1 : erl[i][j + 1])<SUB>17</SUB>>", "163": "<(IDENTIFIER,j,j + 1)<SUB>17</SUB>>", "165": "<(LOCAL,long min: long)<SUB>18</SUB>>", "167": "<(IDENTIFIER,min,long min = Long.MAX_VALUE)<SUB>18</SUB>>", "169": "<(IDENTIFIER,Long,long min = Long.MAX_VALUE)<SUB>18</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "173": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "175": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "177": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "183": "<(&lt;operator&gt;.assignment,long maxt = Long.MIN_VALUE)<SUB>20</SUB>>", "185": "<(&lt;operator&gt;.fieldAccess,Long.MIN_VALUE)<SUB>20</SUB>>", "187": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>20</SUB>>", "189": "<(LOCAL,int j: int)<SUB>21</SUB>>", "191": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "193": "<(&lt;operator&gt;.lessThan,j &lt; size)<SUB>21</SUB>>", "195": "<(IDENTIFIER,size,j &lt; size)<SUB>21</SUB>>", "197": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "199": "<(&lt;operator&gt;.notEquals,erl[j][i] != -1)<SUB>22</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,erl[j])<SUB>22</SUB>>", "203": "<(IDENTIFIER,j,erl[j][i] != -1)<SUB>22</SUB>>", "205": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "207": "<(&lt;operator&gt;.assignment,maxt = Long.max(maxt, (erl[j][i] - i + 1)))<SUB>23</SUB>>", "209": "<(max,Long.max(maxt, (erl[j][i] - i + 1)))<SUB>23</SUB>>", "211": "<(IDENTIFIER,maxt,Long.max(maxt, (erl[j][i] - i + 1)))<SUB>23</SUB>>", "213": "<(&lt;operator&gt;.subtraction,erl[j][i] - i)<SUB>23</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,erl[j])<SUB>23</SUB>>", "217": "<(IDENTIFIER,j,erl[j][i] - i)<SUB>23</SUB>>", "219": "<(IDENTIFIER,i,erl[j][i] - i)<SUB>23</SUB>>", "221": "<(CONTROL_STRUCTURE,else,else)<SUB>24</SUB>>", "223": "<(&lt;operator&gt;.assignment,maxt = Long.MAX_VALUE)<SUB>25</SUB>>", "225": "<(&lt;operator&gt;.fieldAccess,Long.MAX_VALUE)<SUB>25</SUB>>", "227": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>25</SUB>>", "229": "<(&lt;operator&gt;.assignment,min = Long.min(min, maxt))<SUB>28</SUB>>", "231": "<(min,Long.min(min, maxt))<SUB>28</SUB>>", "233": "<(IDENTIFIER,min,Long.min(min, maxt))<SUB>28</SUB>>", "235": "<(print,print(min))<SUB>30</SUB>>", "237": "<(IDENTIFIER,min,print(min))<SUB>30</SUB>>", "239": "<(IDENTIFIER,this,Finish())<SUB>31</SUB>>", "241": "<(MODIFIER,STATIC)>"}}