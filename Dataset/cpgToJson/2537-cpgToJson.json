{"edges": [["25", "27"], ["25", "303"], ["25", "304"], ["25", "305"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "39"], ["27", "40"], ["27", "44"], ["27", "8"], ["27", "71"], ["27", "74"], ["27", "75"], ["27", "117"], ["27", "120"], ["27", "163"], ["27", "164"], ["27", "168"], ["27", "169"], ["27", "173"], ["27", "174"], ["27", "179"], ["27", "243"], ["27", "244"], ["27", "249"], ["27", "254"], ["27", "255"], ["27", "258"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["35", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "60"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["74", "7"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["99", "116"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "106"], ["103", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "129"], ["120", "131"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["129", "130"], ["131", "10"], ["131", "132"], ["131", "141"], ["131", "158"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "149"], ["145", "150"], ["146", "147"], ["146", "148"], ["149", "9"], ["150", "151"], ["150", "152"], ["150", "157"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["166", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["177", "178"], ["179", "180"], ["179", "182"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "185"], ["182", "188"], ["182", "191"], ["182", "192"], ["182", "196"], ["182", "197"], ["182", "202"], ["182", "232"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "194"], ["194", "195"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "211"], ["202", "213"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["209", "210"], ["211", "212"], ["213", "214"], ["214", "215"], ["214", "222"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "225"], ["223", "224"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "267"], ["258", "269"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["265", "266"], ["267", "268"], ["269", "270"], ["270", "271"], ["270", "278"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["278", "279"], ["278", "296"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "291"], ["284", "285"], ["284", "290"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["28", "31"], ["31", "34"], ["32", "38"], ["35", "42"], ["40", "46"], ["71", "74"], ["74", "77"], ["117", "122"], ["164", "171"], ["169", "177"], ["174", "180"], ["244", "252"], ["249", "255"], ["255", "260"], ["30", "28"], ["34", "32"], ["36", "35"], ["42", "40"], ["46", "49"], ["49", "58"], ["49", "73"], ["52", "49"], ["73", "71"], ["77", "80"], ["80", "88"], ["80", "117"], ["83", "80"], ["122", "127"], ["125", "137"], ["125", "166"], ["129", "127"], ["166", "164"], ["171", "169"], ["176", "174"], ["180", "185"], ["180", "246"], ["246", "244"], ["250", "249"], ["260", "265"], ["263", "305"], ["263", "274"], ["267", "265"], ["38", "36"], ["56", "61"], ["60", "52"], ["127", "125"], ["132", "142"], ["158", "129"], ["177", "176"], ["185", "188"], ["188", "194"], ["192", "199"], ["197", "204"], ["252", "250"], ["265", "263"], ["58", "56"], ["61", "67"], ["64", "60"], ["88", "91"], ["91", "102"], ["91", "83"], ["94", "91"], ["134", "132"], ["142", "148"], ["142", "160"], ["160", "158"], ["194", "192"], ["199", "197"], ["204", "209"], ["207", "218"], ["207", "233"], ["211", "209"], ["233", "180"], ["233", "237"], ["271", "282"], ["271", "267"], ["65", "64"], ["97", "94"], ["136", "134"], ["146", "149"], ["149", "153"], ["150", "160"], ["209", "207"], ["237", "240"], ["240", "180"], ["273", "271"], ["279", "299"], ["296", "267"], ["67", "65"], ["137", "140"], ["140", "136"], ["148", "146"], ["152", "150"], ["215", "223"], ["215", "211"], ["274", "277"], ["277", "273"], ["280", "286"], ["283", "279"], ["298", "296"], ["100", "108"], ["103", "97"], ["153", "156"], ["156", "152"], ["217", "215"], ["223", "228"], ["225", "211"], ["282", "280"], ["284", "292"], ["291", "283"], ["299", "302"], ["302", "298"], ["102", "100"], ["107", "103"], ["218", "221"], ["221", "217"], ["227", "225"], ["285", "284"], ["292", "295"], ["295", "291"], ["108", "113"], ["111", "107"], ["228", "231"], ["231", "227"], ["286", "289"], ["289", "285"], ["113", "111"], ["25", "30"], ["26", "305"], ["28", "305"], ["31", "305"], ["32", "305"], ["35", "305"], ["35", "305"], ["42", "305"], ["40", "305"], ["40", "305"], ["46", "305"], ["49", "305"], ["71", "305"], ["74", "305"], ["77", "305"], ["80", "305"], ["80", "305"], ["80", "305"], ["117", "305"], ["127", "305"], ["125", "305"], ["164", "305"], ["169", "305"], ["169", "305"], ["176", "305"], ["174", "305"], ["174", "305"], ["180", "305"], ["180", "305"], ["246", "305"], ["246", "305"], ["244", "305"], ["244", "305"], ["249", "305"], ["249", "305"], ["249", "305"], ["255", "305"], ["255", "305"], ["260", "305"], ["263", "305"], ["265", "305"], ["263", "305"], ["263", "305"], ["267", "305"], ["233", "305"], ["233", "305"], ["240", "305"], ["240", "305"], ["129", "305"], ["83", "305"], ["52", "305"], ["117", "305"], ["25", "26"], ["25", "28"], ["25", "32"], ["42", "40"], ["25", "71"], ["166", "164"], ["171", "169"], ["176", "174"], ["246", "244"], ["246", "244"], ["25", "255"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["25", "46"], ["71", "74"], ["25", "74"], ["25", "77"], ["25", "117"], ["74", "117"], ["97", "117"], ["25", "122"], ["164", "249"], ["233", "249"], ["237", "249"], ["25", "249"], ["25", "260"], ["35", "42"], ["25", "42"], ["46", "49"], ["52", "49"], ["25", "49"], ["40", "49"], ["67", "52"], ["25", "52"], ["58", "56"], ["56", "60"], ["25", "60"], ["77", "80"], ["83", "80"], ["25", "80"], ["49", "80"], ["91", "80"], ["103", "83"], ["25", "83"], ["80", "83"], ["122", "125"], ["129", "125"], ["25", "125"], ["127", "125"], ["160", "129"], ["25", "129"], ["134", "132"], ["134", "132"], ["25", "166"], ["25", "171"], ["177", "176"], ["174", "180"], ["194", "180"], ["25", "180"], ["25", "185"], ["25", "188"], ["194", "192"], ["199", "197"], ["199", "197"], ["177", "246"], ["199", "246"], ["25", "246"], ["169", "246"], ["240", "246"], ["260", "263"], ["267", "263"], ["25", "263"], ["265", "263"], ["274", "267"], ["299", "267"], ["25", "267"], ["80", "88"], ["25", "88"], ["117", "127"], ["160", "127"], ["25", "127"], ["142", "158"], ["150", "158"], ["25", "158"], ["160", "158"], ["160", "158"], ["31", "177"], ["134", "177"], ["150", "177"], ["25", "177"], ["25", "204"], ["244", "265"], ["274", "265"], ["299", "265"], ["25", "265"], ["42", "58"], ["25", "58"], ["56", "64"], ["25", "64"], ["88", "91"], ["94", "91"], ["25", "91"], ["80", "91"], ["103", "94"], ["25", "94"], ["31", "134"], ["150", "134"], ["25", "134"], ["132", "142"], ["25", "142"], ["25", "146"], ["137", "160"], ["153", "160"], ["25", "160"], ["137", "160"], ["153", "160"], ["180", "194"], ["25", "194"], ["177", "199"], ["25", "199"], ["192", "199"], ["204", "207"], ["211", "207"], ["25", "207"], ["209", "207"], ["218", "211"], ["228", "211"], ["25", "211"], ["185", "233"], ["223", "233"], ["25", "233"], ["164", "233"], ["237", "233"], ["233", "237"], ["25", "237"], ["199", "240"], ["25", "240"], ["255", "271"], ["296", "271"], ["25", "271"], ["74", "97"], ["25", "97"], ["100", "97"], ["103", "97"], ["146", "149"], ["25", "149"], ["134", "150"], ["25", "150"], ["149", "150"], ["197", "209"], ["218", "209"], ["228", "209"], ["25", "209"], ["249", "279"], ["25", "279"], ["49", "67"], ["25", "67"], ["25", "100"], ["25", "116"], ["127", "137"], ["25", "137"], ["125", "137"], ["188", "215"], ["225", "215"], ["25", "215"], ["265", "274"], ["25", "274"], ["263", "274"], ["25", "283"], ["100", "103"], ["25", "103"], ["113", "103"], ["91", "103"], ["107", "103"], ["107", "103"], ["137", "153"], ["25", "153"], ["137", "153"], ["185", "223"], ["25", "223"], ["25", "284"], ["292", "299"], ["25", "299"], ["292", "299"], ["209", "218"], ["25", "218"], ["207", "218"], ["286", "292"], ["25", "292"], ["286", "292"], ["218", "228"], ["25", "228"], ["218", "228"], ["274", "286"], ["25", "286"], ["274", "286"], ["103", "113"], ["25", "113"], ["80", "113"], ["49", "60"], ["49", "64"], ["49", "52"], ["49", "56"], ["49", "67"], ["49", "58"], ["49", "61"], ["49", "49"], ["49", "65"], ["80", "91"], ["80", "80"], ["80", "88"], ["80", "83"], ["125", "136"], ["125", "132"], ["125", "129"], ["125", "134"], ["125", "137"], ["125", "127"], ["125", "158"], ["125", "160"], ["125", "142"], ["125", "140"], ["125", "125"], ["180", "188"], ["180", "192"], ["180", "209"], ["180", "185"], ["180", "197"], ["180", "204"], ["180", "207"], ["180", "194"], ["180", "233"], ["180", "180"], ["180", "199"], ["263", "273"], ["263", "267"], ["263", "265"], ["263", "274"], ["263", "277"], ["263", "263"], ["263", "271"], ["91", "107"], ["91", "94"], ["91", "113"], ["91", "102"], ["91", "103"], ["91", "97"], ["91", "91"], ["91", "100"], ["91", "108"], ["91", "111"], ["142", "146"], ["142", "149"], ["142", "150"], ["142", "153"], ["142", "148"], ["142", "152"], ["142", "156"], ["207", "215"], ["207", "209"], ["207", "207"], ["207", "221"], ["207", "217"], ["207", "211"], ["207", "218"], ["233", "240"], ["233", "237"], ["271", "282"], ["271", "292"], ["271", "279"], ["271", "283"], ["271", "291"], ["271", "298"], ["271", "284"], ["271", "302"], ["271", "285"], ["271", "289"], ["271", "280"], ["271", "296"], ["271", "286"], ["271", "295"], ["271", "299"], ["215", "225"], ["215", "228"], ["215", "223"], ["215", "231"], ["215", "227"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY mp = new TreeMap&lt;&gt;())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new TreeMap&lt;&gt;())<SUB>2</SUB>>", "3": "<(IDENTIFIER,mp,new TreeMap&lt;&gt;())<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(System.in))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "5": "<(IDENTIFIER,cin,new Scanner(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "39": "<(LOCAL,int N: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,N,int N = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,cin,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,int i: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,int i = 1)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>5</SUB>>", "51": "<(IDENTIFIER,N,i &lt;= N)<SUB>5</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "55": "<(LOCAL,int x: int)<SUB>6</SUB>>", "57": "<(IDENTIFIER,x,int x = nextInt())<SUB>6</SUB>>", "59": "<(IDENTIFIER,cin,nextInt())<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,sum[i])<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,sum[i] = sum[i - 1] + x)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,sum[i - 1])<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>7</SUB>>", "69": "<(LITERAL,1,i - 1)<SUB>7</SUB>>", "8": "<(LOCAL,ArrayList&lt;Node&gt; arr: ANY)<SUB>10</SUB>>", "72": "<(IDENTIFIER,arr,ANY arr = new ArrayList&lt;&gt;())<SUB>10</SUB>>", "74": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int l = 1; Some(l &lt;= N); l++),for (int l = 1; Some(l &lt;= N); l++))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int l = 1)<SUB>11</SUB>>", "79": "<(LITERAL,1,int l = 1)<SUB>11</SUB>>", "81": "<(IDENTIFIER,l,l &lt;= N)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,l++)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(LOCAL,int r: int)<SUB>12</SUB>>", "89": "<(IDENTIFIER,r,int r = l)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.lessEqualsThan,r &lt;= N)<SUB>12</SUB>>", "93": "<(IDENTIFIER,N,r &lt;= N)<SUB>12</SUB>>", "95": "<(IDENTIFIER,r,r++)<SUB>12</SUB>>", "97": "<(add,add(new Node(l, r, sum[r] - sum[l - 1])))<SUB>13</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "101": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "103": "<(&lt;init&gt;,new Node(l, r, sum[r] - sum[l - 1]))<SUB>13</SUB>>", "105": "<(IDENTIFIER,l,new Node(l, r, sum[r] - sum[l - 1]))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.subtraction,sum[r] - sum[l - 1])<SUB>13</SUB>>", "109": "<(IDENTIFIER,sum,sum[r] - sum[l - 1])<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,sum[l - 1])<SUB>13</SUB>>", "113": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>13</SUB>>", "115": "<(LITERAL,1,l - 1)<SUB>13</SUB>>", "117": "<(sort,sort(arr))<SUB>16</SUB>>", "119": "<(IDENTIFIER,arr,sort(arr))<SUB>16</SUB>>", "121": "<(LOCAL,int i: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; arr.size())<SUB>17</SUB>>", "127": "<(size,size())<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "132": "<(&lt;operator&gt;.assignment,ANY a = get(arr.get(i).s))<SUB>18</SUB>>", "134": "<(get,get(arr.get(i).s))<SUB>18</SUB>>", "136": "<(&lt;operator&gt;.fieldAccess,arr.get(i).s)<SUB>18</SUB>>", "138": "<(IDENTIFIER,arr,get(i))<SUB>18</SUB>>", "140": "<(FIELD_IDENTIFIER,s,s)<SUB>18</SUB>>", "142": "<(&lt;operator&gt;.equals,a == null)<SUB>19</SUB>>", "144": "<(LITERAL,null,a == null)<SUB>19</SUB>>", "146": "<(&lt;operator&gt;.assignment,a = new ArrayList&lt;&gt;())<SUB>20</SUB>>", "148": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>20</SUB>>", "9": "<(IDENTIFIER,a,new ArrayList&lt;&gt;())<SUB>20</SUB>>", "151": "<(IDENTIFIER,mp,put(arr.get(i).s, a))<SUB>21</SUB>>", "153": "<(get,get(i))<SUB>21</SUB>>", "155": "<(IDENTIFIER,i,get(i))<SUB>21</SUB>>", "157": "<(IDENTIFIER,a,put(arr.get(i).s, a))<SUB>21</SUB>>", "159": "<(IDENTIFIER,a,add(arr.get(i)))<SUB>23</SUB>>", "161": "<(IDENTIFIER,arr,get(i))<SUB>23</SUB>>", "163": "<(LOCAL,int mx: int)<SUB>25</SUB>>", "165": "<(IDENTIFIER,mx,int mx = -1)<SUB>25</SUB>>", "167": "<(LITERAL,1,-1)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.assignment,long mxv = -1)<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "173": "<(LOCAL,Iterator&lt;Long&gt; it: ANY)<SUB>27</SUB>>", "175": "<(IDENTIFIER,it,ANY it = iterator())<SUB>27</SUB>>", "177": "<(keySet,keySet())<SUB>27</SUB>>", "179": "<(CONTROL_STRUCTURE,while (it.hasNext()),while (it.hasNext()))<SUB>28</SUB>>", "181": "<(IDENTIFIER,it,hasNext())<SUB>28</SUB>>", "183": "<(LOCAL,int ans: int)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>29</SUB>>", "187": "<(LITERAL,0,int ans = 0)<SUB>29</SUB>>", "189": "<(IDENTIFIER,t,int t = 0)<SUB>29</SUB>>", "191": "<(LOCAL,long v: long)<SUB>30</SUB>>", "193": "<(IDENTIFIER,v,long v = next())<SUB>30</SUB>>", "195": "<(IDENTIFIER,it,next())<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.assignment,ANY vec = get(v))<SUB>31</SUB>>", "199": "<(get,get(v))<SUB>31</SUB>>", "201": "<(IDENTIFIER,v,get(v))<SUB>31</SUB>>", "203": "<(LOCAL,int i: int)<SUB>32</SUB>>", "205": "<(IDENTIFIER,i,int i = 0)<SUB>32</SUB>>", "207": "<(&lt;operator&gt;.lessThan,i &lt; vec.size())<SUB>32</SUB>>", "209": "<(size,size())<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,i++)<SUB>32</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "215": "<(&lt;operator&gt;.lessThan,t &lt; vec.get(i).l)<SUB>33</SUB>>", "217": "<(&lt;operator&gt;.fieldAccess,vec.get(i).l)<SUB>33</SUB>>", "219": "<(IDENTIFIER,vec,get(i))<SUB>33</SUB>>", "221": "<(FIELD_IDENTIFIER,l,l)<SUB>33</SUB>>", "223": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.assignment,t = vec.get(i).r)<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.fieldAccess,vec.get(i).r)<SUB>35</SUB>>", "229": "<(IDENTIFIER,vec,get(i))<SUB>35</SUB>>", "231": "<(FIELD_IDENTIFIER,r,r)<SUB>35</SUB>>", "233": "<(&lt;operator&gt;.greaterThan,ans &gt; mx)<SUB>39</SUB>>", "235": "<(IDENTIFIER,mx,ans &gt; mx)<SUB>39</SUB>>", "237": "<(&lt;operator&gt;.assignment,mx = ans)<SUB>40</SUB>>", "239": "<(IDENTIFIER,ans,mx = ans)<SUB>40</SUB>>", "241": "<(IDENTIFIER,mxv,mxv = v)<SUB>41</SUB>>", "243": "<(LOCAL,ArrayList&lt;Node&gt; vec: ANY)<SUB>45</SUB>>", "245": "<(IDENTIFIER,vec,ANY vec = get(mxv))<SUB>45</SUB>>", "247": "<(IDENTIFIER,mp,get(mxv))<SUB>45</SUB>>", "249": "<(println,System.out.println(mx))<SUB>46</SUB>>", "251": "<(IDENTIFIER,System,System.out.println(mx))<SUB>46</SUB>>", "253": "<(IDENTIFIER,mx,System.out.println(mx))<SUB>46</SUB>>", "255": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>47</SUB>>", "257": "<(LITERAL,0,int t = 0)<SUB>47</SUB>>", "259": "<(LOCAL,int i: int)<SUB>48</SUB>>", "261": "<(IDENTIFIER,i,int i = 0)<SUB>48</SUB>>", "263": "<(&lt;operator&gt;.lessThan,i &lt; vec.size())<SUB>48</SUB>>", "265": "<(size,size())<SUB>48</SUB>>", "267": "<(&lt;operator&gt;.postIncrement,i++)<SUB>48</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "271": "<(&lt;operator&gt;.lessThan,t &lt; vec.get(i).l)<SUB>52</SUB>>", "273": "<(&lt;operator&gt;.fieldAccess,vec.get(i).l)<SUB>52</SUB>>", "275": "<(IDENTIFIER,vec,get(i))<SUB>52</SUB>>", "277": "<(FIELD_IDENTIFIER,l,l)<SUB>52</SUB>>", "279": "<(println,println(vec.get(i).l + &quot; &quot; + vec.get(i).r))<SUB>53</SUB>>", "281": "<(IDENTIFIER,System,println(vec.get(i).l + &quot; &quot; + vec.get(i).r))<SUB>53</SUB>>", "283": "<(&lt;operator&gt;.addition,vec.get(i).l + &quot; &quot; + vec.get(i).r)<SUB>53</SUB>>", "285": "<(&lt;operator&gt;.fieldAccess,vec.get(i).l)<SUB>53</SUB>>", "287": "<(IDENTIFIER,vec,get(i))<SUB>53</SUB>>", "289": "<(FIELD_IDENTIFIER,l,l)<SUB>53</SUB>>", "291": "<(&lt;operator&gt;.fieldAccess,vec.get(i).r)<SUB>53</SUB>>", "293": "<(IDENTIFIER,vec,get(i))<SUB>53</SUB>>", "295": "<(FIELD_IDENTIFIER,r,r)<SUB>53</SUB>>", "297": "<(IDENTIFIER,t,t = vec.get(i).r)<SUB>54</SUB>>", "299": "<(get,get(i))<SUB>54</SUB>>", "301": "<(IDENTIFIER,i,get(i))<SUB>54</SUB>>", "303": "<(MODIFIER,PUBLIC)>", "305": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}