{"edges": [["19", "21"], ["19", "151"], ["19", "152"], ["19", "153"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "57"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["57", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "76"], ["67", "80"], ["67", "146"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "96"], ["92", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "103"], ["96", "104"], ["96", "107"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["109", "119"], ["109", "134"], ["109", "139"], ["109", "144"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["113", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "133"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "43"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "52"], ["46", "58"], ["49", "46"], ["51", "49"], ["58", "64"], ["58", "69"], ["61", "153"], ["52", "55"], ["55", "51"], ["62", "61"], ["64", "62"], ["69", "72"], ["72", "78"], ["76", "82"], ["146", "153"], ["78", "76"], ["82", "85"], ["85", "93"], ["85", "149"], ["88", "85"], ["147", "146"], ["149", "147"], ["92", "100"], ["92", "88"], ["93", "92"], ["98", "104"], ["104", "116"], ["104", "88"], ["100", "98"], ["111", "120"], ["134", "141"], ["139", "144"], ["144", "116"], ["144", "88"], ["113", "111"], ["120", "127"], ["120", "135"], ["135", "134"], ["141", "139"], ["116", "113"], ["124", "88"], ["126", "124"], ["127", "130"], ["130", "126"], ["19", "24"], ["20", "153"], ["22", "153"], ["25", "153"], ["27", "153"], ["34", "153"], ["32", "153"], ["32", "153"], ["37", "153"], ["37", "153"], ["37", "153"], ["43", "153"], ["46", "153"], ["46", "153"], ["58", "153"], ["58", "153"], ["61", "153"], ["61", "153"], ["61", "153"], ["51", "153"], ["55", "153"], ["51", "153"], ["51", "153"], ["49", "153"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["22", "25"], ["19", "25"], ["19", "43"], ["55", "51"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["43", "46"], ["49", "46"], ["19", "46"], ["39", "46"], ["46", "49"], ["19", "49"], ["32", "58"], ["19", "58"], ["46", "61"], ["19", "61"], ["34", "55"], ["19", "55"], ["19", "69"], ["78", "76"], ["19", "72"], ["37", "72"], ["51", "72"], ["19", "82"], ["69", "146"], ["124", "146"], ["19", "146"], ["46", "78"], ["19", "78"], ["82", "85"], ["88", "85"], ["19", "85"], ["78", "85"], ["85", "88"], ["19", "88"], ["76", "92"], ["72", "98"], ["113", "98"], ["51", "98"], ["19", "104"], ["19", "108"], ["113", "111"], ["113", "111"], ["113", "111"], ["19", "134"], ["113", "139"], ["104", "144"], ["19", "144"], ["72", "113"], ["19", "113"], ["72", "113"], ["51", "113"], ["116", "113"], ["116", "113"], ["111", "120"], ["19", "120"], ["127", "124"], ["127", "124"], ["130", "124"], ["130", "124"], ["98", "116"], ["139", "116"], ["19", "116"], ["58", "116"], ["69", "124"], ["19", "124"], ["127", "126"], ["127", "126"], ["130", "126"], ["130", "126"], ["104", "127"], ["144", "127"], ["19", "127"], ["127", "130"], ["19", "130"], ["46", "49"], ["46", "51"], ["46", "52"], ["46", "46"], ["46", "55"], ["58", "64"], ["58", "146"], ["58", "85"], ["58", "72"], ["58", "149"], ["58", "69"], ["58", "76"], ["58", "82"], ["58", "61"], ["58", "147"], ["58", "78"], ["58", "62"], ["85", "85"], ["85", "92"], ["85", "93"], ["85", "88"], ["92", "98"], ["92", "104"], ["92", "100"], ["92", "120"], ["92", "113"], ["92", "116"], ["92", "111"], ["120", "141"], ["120", "144"], ["120", "134"], ["120", "126"], ["120", "130"], ["120", "135"], ["120", "127"], ["120", "139"], ["120", "124"], ["120", "120"], ["120", "113"], ["120", "116"], ["120", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,long k: long)<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,long k = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,Long[] a = new Long[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new Long[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,a[i] = nextLong())<SUB>6</SUB>>", "53": "<(IDENTIFIER,a,a[i] = nextLong())<SUB>6</SUB>>", "55": "<(nextLong,nextLong())<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,if (k == 1),if (k == 1))<SUB>7</SUB>>", "59": "<(IDENTIFIER,k,k == 1)<SUB>7</SUB>>", "61": "<(println,System.out.println(n))<SUB>7</SUB>>", "63": "<(IDENTIFIER,System,System.out.println(n))<SUB>7</SUB>>", "65": "<(IDENTIFIER,n,System.out.println(n))<SUB>7</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int res = 0)<SUB>9</SUB>>", "71": "<(LITERAL,0,int res = 0)<SUB>9</SUB>>", "73": "<(IDENTIFIER,Arrays,sort(a))<SUB>10</SUB>>", "75": "<(LOCAL,boolean[] v: boolean[])<SUB>11</SUB>>", "77": "<(IDENTIFIER,v,boolean[] v = new boolean[n])<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,new boolean[n])<SUB>11</SUB>>", "81": "<(LOCAL,int i: int)<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "87": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,if (!v[i]),if (!v[i]))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,v[i])<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,!v[i])<SUB>13</SUB>>", "97": "<(LOCAL,long cur: long)<SUB>14</SUB>>", "99": "<(IDENTIFIER,cur,long cur = a[i])<SUB>14</SUB>>", "101": "<(IDENTIFIER,a,long cur = a[i])<SUB>14</SUB>>", "103": "<(LOCAL,int cnt: int)<SUB>15</SUB>>", "105": "<(IDENTIFIER,cnt,int cnt = 1)<SUB>15</SUB>>", "107": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>16</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,int idx = binarySearch(a, cur * k))<SUB>17</SUB>>", "113": "<(binarySearch,binarySearch(a, cur * k))<SUB>17</SUB>>", "115": "<(IDENTIFIER,a,binarySearch(a, cur * k))<SUB>17</SUB>>", "117": "<(IDENTIFIER,cur,cur * k)<SUB>17</SUB>>", "119": "<(CONTROL_STRUCTURE,if (idx &lt; 0),if (idx &lt; 0))<SUB>18</SUB>>", "121": "<(IDENTIFIER,idx,idx &lt; 0)<SUB>18</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "125": "<(IDENTIFIER,res,res += cnt / 2 + cnt % 2)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.division,cnt / 2)<SUB>19</SUB>>", "129": "<(LITERAL,2,cnt / 2)<SUB>19</SUB>>", "131": "<(IDENTIFIER,cnt,cnt % 2)<SUB>19</SUB>>", "133": "<(CONTROL_STRUCTURE,break;,break;)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,v[idx])<SUB>22</SUB>>", "137": "<(IDENTIFIER,idx,v[idx] = true)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.assignment,cur = a[idx])<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,a[idx])<SUB>23</SUB>>", "143": "<(IDENTIFIER,idx,cur = a[idx])<SUB>23</SUB>>", "145": "<(IDENTIFIER,cnt,cnt++)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "151": "<(MODIFIER,PUBLIC)>", "153": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}