{"edges": [["17", "19"], ["17", "211"], ["17", "212"], ["17", "213"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "29"], ["19", "34"], ["19", "39"], ["19", "44"], ["19", "88"], ["19", "89"], ["19", "92"], ["19", "99"], ["19", "181"], ["19", "206"], ["19", "209"], ["21", "22"], ["21", "23"], ["23", "24"], ["25", "26"], ["25", "27"], ["27", "28"], ["29", "30"], ["29", "33"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "67"], ["54", "76"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "66"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "87"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "133"], ["121", "135"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "148"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "161"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["161", "168"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["168", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["175", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "191"], ["181", "193"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["196", "199"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["209", "210"], ["21", "27"], ["25", "30"], ["29", "35"], ["34", "40"], ["39", "46"], ["89", "94"], ["92", "101"], ["206", "209"], ["209", "213"], ["23", "21"], ["27", "25"], ["30", "29"], ["35", "34"], ["40", "39"], ["46", "49"], ["49", "56"], ["49", "89"], ["52", "49"], ["93", "92"], ["101", "104"], ["104", "112"], ["104", "183"], ["107", "104"], ["183", "188"], ["186", "202"], ["186", "206"], ["191", "188"], ["55", "68"], ["67", "77"], ["76", "52"], ["94", "93"], ["188", "186"], ["194", "191"], ["56", "63"], ["59", "55"], ["68", "73"], ["71", "67"], ["77", "84"], ["80", "76"], ["112", "115"], ["115", "123"], ["115", "107"], ["118", "115"], ["196", "194"], ["61", "59"], ["73", "71"], ["82", "80"], ["199", "196"], ["63", "61"], ["84", "82"], ["123", "129"], ["126", "141"], ["126", "118"], ["133", "129"], ["200", "199"], ["128", "126"], ["136", "133"], ["202", "200"], ["129", "128"], ["137", "154"], ["148", "136"], ["138", "145"], ["145", "137"], ["150", "164"], ["161", "148"], ["140", "138"], ["151", "158"], ["158", "150"], ["163", "172"], ["168", "161"], ["141", "140"], ["153", "151"], ["164", "163"], ["170", "177"], ["175", "168"], ["154", "153"], ["172", "170"], ["177", "175"], ["17", "23"], ["18", "213"], ["21", "213"], ["27", "213"], ["25", "213"], ["25", "213"], ["29", "213"], ["29", "213"], ["34", "213"], ["34", "213"], ["39", "213"], ["39", "213"], ["46", "213"], ["89", "213"], ["92", "213"], ["92", "213"], ["104", "213"], ["183", "213"], ["186", "213"], ["188", "213"], ["186", "213"], ["186", "213"], ["206", "213"], ["206", "213"], ["209", "213"], ["209", "213"], ["196", "213"], ["196", "213"], ["194", "213"], ["194", "213"], ["191", "213"], ["112", "213"], ["115", "213"], ["115", "213"], ["107", "213"], ["123", "213"], ["126", "213"], ["128", "213"], ["126", "213"], ["126", "213"], ["118", "213"], ["136", "213"], ["148", "213"], ["153", "213"], ["161", "213"], ["168", "213"], ["175", "213"], ["168", "213"], ["161", "213"], ["148", "213"], ["136", "213"], ["136", "213"], ["133", "213"], ["59", "213"], ["55", "213"], ["55", "213"], ["67", "213"], ["71", "213"], ["67", "213"], ["67", "213"], ["76", "213"], ["80", "213"], ["80", "213"], ["76", "213"], ["76", "213"], ["52", "213"], ["25", "213"], ["17", "18"], ["23", "21"], ["27", "25"], ["17", "29"], ["17", "34"], ["17", "39"], ["17", "89"], ["17", "92"], ["17", "46"], ["17", "101"], ["17", "183"], ["17", "206"], ["89", "206"], ["194", "206"], ["206", "209"], ["17", "209"], ["17", "23"], ["23", "27"], ["17", "27"], ["46", "49"], ["52", "49"], ["17", "49"], ["21", "49"], ["84", "52"], ["17", "52"], ["59", "55"], ["59", "55"], ["59", "55"], ["71", "67"], ["71", "67"], ["80", "76"], ["80", "76"], ["80", "76"], ["101", "104"], ["107", "104"], ["17", "104"], ["49", "104"], ["129", "104"], ["115", "107"], ["17", "107"], ["183", "186"], ["191", "186"], ["17", "186"], ["104", "186"], ["186", "191"], ["17", "191"], ["196", "194"], ["196", "194"], ["196", "194"], ["17", "112"], ["104", "188"], ["17", "188"], ["80", "59"], ["17", "59"], ["63", "59"], ["59", "71"], ["17", "71"], ["55", "71"], ["71", "80"], ["17", "80"], ["112", "115"], ["118", "115"], ["17", "115"], ["104", "115"], ["129", "115"], ["115", "118"], ["17", "118"], ["148", "196"], ["80", "196"], ["17", "196"], ["89", "196"], ["194", "196"], ["17", "123"], ["49", "63"], ["17", "63"], ["59", "84"], ["17", "84"], ["123", "126"], ["133", "126"], ["17", "126"], ["129", "126"], ["129", "126"], ["175", "133"], ["17", "133"], ["148", "136"], ["148", "136"], ["148", "136"], ["129", "128"], ["129", "128"], ["17", "128"], ["17", "202"], ["104", "129"], ["17", "129"], ["115", "129"], ["161", "148"], ["17", "148"], ["136", "148"], ["161", "148"], ["161", "148"], ["115", "145"], ["17", "145"], ["126", "145"], ["168", "161"], ["17", "161"], ["168", "161"], ["168", "161"], ["129", "140"], ["17", "140"], ["126", "140"], ["17", "158"], ["115", "158"], ["126", "158"], ["175", "168"], ["17", "168"], ["175", "168"], ["175", "168"], ["129", "141"], ["17", "141"], ["126", "141"], ["17", "153"], ["129", "153"], ["126", "153"], ["148", "175"], ["80", "175"], ["17", "175"], ["172", "175"], ["115", "175"], ["17", "154"], ["129", "154"], ["126", "154"], ["17", "172"], ["126", "172"], ["172", "177"], ["17", "177"], ["115", "177"], ["49", "68"], ["49", "73"], ["49", "77"], ["49", "52"], ["49", "84"], ["49", "56"], ["49", "67"], ["49", "76"], ["49", "59"], ["49", "80"], ["49", "61"], ["49", "49"], ["49", "82"], ["49", "71"], ["49", "63"], ["49", "55"], ["104", "107"], ["104", "115"], ["104", "104"], ["104", "112"], ["186", "188"], ["186", "196"], ["186", "191"], ["186", "194"], ["186", "186"], ["186", "202"], ["186", "200"], ["186", "199"], ["115", "115"], ["115", "128"], ["115", "129"], ["115", "118"], ["115", "123"], ["115", "126"], ["126", "136"], ["126", "154"], ["126", "145"], ["126", "128"], ["126", "161"], ["126", "163"], ["126", "150"], ["126", "151"], ["126", "153"], ["126", "168"], ["126", "170"], ["126", "129"], ["126", "138"], ["126", "148"], ["126", "137"], ["126", "164"], ["126", "158"], ["126", "141"], ["126", "140"], ["126", "126"], ["126", "177"], ["126", "175"], ["126", "133"], ["126", "172"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,M = nextInt())<SUB>3</SUB>>", "27": "<(nextInt,nextInt())<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,fac[0] = 1)<SUB>4</SUB>>", "31": "<(IDENTIFIER,fac,fac[0] = 1)<SUB>4</SUB>>", "33": "<(LITERAL,1,fac[0] = 1)<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.indexAccess,ifac[0])<SUB>5</SUB>>", "37": "<(LITERAL,0,ifac[0] = 1)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,p2[0] = 1)<SUB>6</SUB>>", "41": "<(IDENTIFIER,p2,p2[0] = 1)<SUB>6</SUB>>", "43": "<(LITERAL,1,p2[0] = 1)<SUB>6</SUB>>", "45": "<(LOCAL,int i: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,int i = 1)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,i &lt;= n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,++i)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,fac[i] = mul(fac[i - 1], i))<SUB>8</SUB>>", "57": "<(IDENTIFIER,fac,fac[i] = mul(fac[i - 1], i))<SUB>8</SUB>>", "59": "<(mul,mul(fac[i - 1], i))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,fac[i - 1])<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>8</SUB>>", "65": "<(LITERAL,1,i - 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,ifac[i] = inv(fac[i]))<SUB>9</SUB>>", "69": "<(IDENTIFIER,ifac,ifac[i] = inv(fac[i]))<SUB>9</SUB>>", "71": "<(inv,inv(fac[i]))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,fac[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,inv(fac[i]))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,p2[i])<SUB>10</SUB>>", "79": "<(IDENTIFIER,i,p2[i] = mul(p2[i - 1], 2))<SUB>10</SUB>>", "81": "<(IDENTIFIER,this,mul(p2[i - 1], 2))<SUB>10</SUB>>", "83": "<(IDENTIFIER,p2,mul(p2[i - 1], 2))<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "87": "<(LITERAL,2,mul(p2[i - 1], 2))<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>12</SUB>>", "91": "<(LITERAL,0,int ans = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>13</SUB>>", "95": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>13</SUB>>", "97": "<(LITERAL,0,dp[0][0] = 1)<SUB>13</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); ++i),for (int i = 0; Some(i &lt;= n); ++i))<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,i &lt;= n)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.preIncrement,++i)<SUB>14</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "111": "<(LOCAL,int k: int)<SUB>15</SUB>>", "113": "<(IDENTIFIER,k,int k = 0)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= i)<SUB>15</SUB>>", "117": "<(IDENTIFIER,i,k &lt;= i)<SUB>15</SUB>>", "119": "<(IDENTIFIER,k,++k)<SUB>15</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= n - i + 1); ++j),for (int j = 1; Some(j &lt;= n - i + 1); ++j))<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>16</SUB>>", "125": "<(LITERAL,1,int j = 1)<SUB>16</SUB>>", "127": "<(IDENTIFIER,j,j &lt;= n - i + 1)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.subtraction,n - i)<SUB>16</SUB>>", "131": "<(IDENTIFIER,i,n - i)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.preIncrement,++j)<SUB>16</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,dp[i + j + 1][k + j])<SUB>17</SUB>>", "139": "<(IDENTIFIER,dp,dp[i + j + 1][k + j] = add(dp[i + j + 1][k + j], mul(dp[i][k], mul(p2[j - 1], bino(j + k, j)))))<SUB>17</SUB>>", "141": "<(&lt;operator&gt;.addition,i + j)<SUB>17</SUB>>", "143": "<(IDENTIFIER,j,i + j)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.addition,k + j)<SUB>17</SUB>>", "147": "<(IDENTIFIER,j,k + j)<SUB>17</SUB>>", "149": "<(IDENTIFIER,this,add(dp[i + j + 1][k + j], mul(dp[i][k], mul(p2[j - 1], bino(j + k, j)))))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,dp[i + j + 1])<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.addition,i + j + 1)<SUB>17</SUB>>", "155": "<(IDENTIFIER,i,i + j)<SUB>17</SUB>>", "157": "<(LITERAL,1,i + j + 1)<SUB>17</SUB>>", "159": "<(IDENTIFIER,k,k + j)<SUB>17</SUB>>", "161": "<(mul,mul(dp[i][k], mul(p2[j - 1], bino(j + k, j))))<SUB>17</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,dp[i][k])<SUB>17</SUB>>", "165": "<(IDENTIFIER,dp,mul(dp[i][k], mul(p2[j - 1], bino(j + k, j))))<SUB>17</SUB>>", "167": "<(IDENTIFIER,k,mul(dp[i][k], mul(p2[j - 1], bino(j + k, j))))<SUB>17</SUB>>", "169": "<(IDENTIFIER,this,mul(p2[j - 1], bino(j + k, j)))<SUB>17</SUB>>", "171": "<(IDENTIFIER,p2,mul(p2[j - 1], bino(j + k, j)))<SUB>17</SUB>>", "173": "<(IDENTIFIER,j,j - 1)<SUB>17</SUB>>", "175": "<(bino,bino(j + k, j))<SUB>17</SUB>>", "177": "<(&lt;operator&gt;.addition,j + k)<SUB>17</SUB>>", "179": "<(IDENTIFIER,k,j + k)<SUB>17</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n + 1); ++i),for (int i = 0; Some(i &lt;= n + 1); ++i))<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "185": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "187": "<(IDENTIFIER,i,i &lt;= n + 1)<SUB>21</SUB>>", "189": "<(IDENTIFIER,n,n + 1)<SUB>21</SUB>>", "191": "<(&lt;operator&gt;.preIncrement,++i)<SUB>21</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "195": "<(IDENTIFIER,ans,ans = add(ans, dp[n + 1][i]))<SUB>22</SUB>>", "197": "<(IDENTIFIER,this,add(ans, dp[n + 1][i]))<SUB>22</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[n + 1][i])<SUB>22</SUB>>", "201": "<(IDENTIFIER,dp,add(ans, dp[n + 1][i]))<SUB>22</SUB>>", "203": "<(IDENTIFIER,n,n + 1)<SUB>22</SUB>>", "205": "<(IDENTIFIER,i,add(ans, dp[n + 1][i]))<SUB>22</SUB>>", "207": "<(IDENTIFIER,pw,print(ans))<SUB>24</SUB>>", "209": "<(close,close())<SUB>25</SUB>>", "211": "<(MODIFIER,PUBLIC)>", "213": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}