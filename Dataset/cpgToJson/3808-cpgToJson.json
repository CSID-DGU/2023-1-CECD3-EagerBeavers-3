{"edges": [["21", "23"], ["21", "409"], ["21", "410"], ["21", "411"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "60"], ["23", "109"], ["23", "158"], ["23", "407"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["56", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "81"], ["71", "83"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "89"], ["83", "98"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["98", "99"], ["98", "108"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "119"], ["109", "121"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["132", "134"], ["132", "138"], ["132", "147"], ["134", "135"], ["134", "136"], ["136", "137"], ["138", "139"], ["138", "146"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["147", "148"], ["147", "157"], ["148", "149"], ["148", "156"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["158", "159"], ["158", "164"], ["158", "368"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "170"], ["164", "171"], ["164", "179"], ["164", "313"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "177"], ["173", "178"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "181"], ["179", "184"], ["179", "187"], ["179", "189"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "209"], ["201", "211"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["209", "210"], ["211", "212"], ["212", "213"], ["212", "216"], ["212", "226"], ["213", "214"], ["213", "215"], ["216", "217"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "224"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["226", "227"], ["227", "228"], ["227", "229"], ["227", "232"], ["227", "304"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["232", "237"], ["232", "242"], ["232", "244"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["244", "246"], ["244", "255"], ["244", "256"], ["244", "265"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["265", "266"], ["265", "281"], ["266", "267"], ["266", "278"], ["267", "268"], ["267", "275"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["284", "287"], ["287", "288"], ["287", "297"], ["288", "289"], ["288", "296"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["297", "298"], ["297", "303"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["304", "305"], ["304", "312"], ["305", "306"], ["305", "311"], ["306", "307"], ["306", "310"], ["307", "308"], ["307", "309"], ["313", "314"], ["313", "315"], ["313", "318"], ["313", "321"], ["313", "323"], ["315", "316"], ["315", "317"], ["318", "319"], ["318", "320"], ["321", "322"], ["323", "324"], ["324", "325"], ["324", "326"], ["324", "329"], ["324", "332"], ["324", "334"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "331"], ["332", "333"], ["334", "335"], ["335", "336"], ["335", "341"], ["335", "354"], ["336", "337"], ["336", "338"], ["338", "339"], ["338", "340"], ["341", "342"], ["342", "343"], ["342", "344"], ["342", "345"], ["345", "346"], ["345", "353"], ["346", "347"], ["346", "352"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["354", "355"], ["355", "356"], ["356", "357"], ["356", "358"], ["356", "359"], ["359", "360"], ["359", "367"], ["360", "361"], ["360", "366"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["368", "369"], ["369", "370"], ["370", "371"], ["370", "372"], ["370", "375"], ["370", "378"], ["370", "380"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "377"], ["378", "379"], ["380", "381"], ["381", "382"], ["381", "383"], ["381", "386"], ["381", "389"], ["381", "391"], ["383", "384"], ["383", "385"], ["386", "387"], ["386", "388"], ["389", "390"], ["391", "392"], ["392", "393"], ["392", "398"], ["392", "402"], ["393", "394"], ["393", "395"], ["395", "396"], ["395", "397"], ["398", "399"], ["399", "400"], ["399", "401"], ["402", "403"], ["403", "404"], ["404", "405"], ["404", "406"], ["407", "408"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "62"], ["407", "411"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["62", "65"], ["65", "73"], ["65", "111"], ["68", "65"], ["111", "116"], ["114", "124"], ["114", "160"], ["119", "116"], ["159", "167"], ["159", "372"], ["30", "28"], ["37", "35"], ["116", "114"], ["160", "159"], ["165", "174"], ["171", "181"], ["73", "78"], ["76", "87"], ["76", "68"], ["81", "78"], ["124", "127"], ["127", "136"], ["127", "119"], ["130", "127"], ["167", "165"], ["173", "171"], ["181", "184"], ["184", "192"], ["184", "315"], ["187", "184"], ["315", "318"], ["318", "326"], ["318", "407"], ["321", "318"], ["78", "76"], ["85", "92"], ["89", "101"], ["98", "81"], ["134", "141"], ["138", "152"], ["147", "130"], ["174", "173"], ["372", "375"], ["375", "383"], ["375", "407"], ["378", "375"], ["87", "85"], ["90", "89"], ["99", "98"], ["136", "134"], ["139", "138"], ["148", "147"], ["192", "195"], ["195", "203"], ["195", "187"], ["198", "195"], ["326", "329"], ["329", "338"], ["329", "321"], ["332", "329"], ["91", "90"], ["100", "99"], ["140", "139"], ["149", "148"], ["383", "386"], ["386", "395"], ["386", "378"], ["389", "386"], ["92", "91"], ["101", "104"], ["104", "100"], ["141", "140"], ["150", "149"], ["203", "206"], ["206", "213"], ["206", "198"], ["209", "206"], ["336", "348"], ["336", "362"], ["152", "150"], ["338", "336"], ["342", "332"], ["393", "399"], ["393", "404"], ["213", "220"], ["213", "229"], ["345", "342"], ["356", "332"], ["395", "393"], ["399", "389"], ["217", "209"], ["346", "345"], ["359", "356"], ["404", "389"], ["218", "217"], ["229", "234"], ["304", "209"], ["347", "346"], ["360", "359"], ["219", "218"], ["234", "241"], ["237", "251"], ["237", "307"], ["242", "241"], ["305", "304"], ["348", "347"], ["361", "360"], ["220", "219"], ["239", "237"], ["246", "261"], ["256", "269"], ["306", "305"], ["362", "361"], ["241", "239"], ["248", "246"], ["258", "256"], ["266", "292"], ["266", "242"], ["307", "306"], ["250", "248"], ["260", "258"], ["267", "266"], ["267", "278"], ["278", "266"], ["282", "242"], ["251", "250"], ["261", "260"], ["268", "267"], ["268", "275"], ["275", "267"], ["284", "282"], ["269", "268"], ["269", "272"], ["272", "268"], ["287", "284"], ["288", "299"], ["297", "287"], ["289", "288"], ["298", "297"], ["290", "289"], ["299", "298"], ["292", "290"], ["21", "26"], ["22", "411"], ["24", "411"], ["27", "411"], ["27", "411"], ["31", "411"], ["34", "411"], ["34", "411"], ["39", "411"], ["44", "411"], ["51", "411"], ["49", "411"], ["49", "411"], ["54", "411"], ["56", "411"], ["54", "411"], ["54", "411"], ["114", "411"], ["114", "411"], ["160", "411"], ["159", "411"], ["159", "411"], ["372", "411"], ["375", "411"], ["375", "411"], ["375", "411"], ["383", "411"], ["386", "411"], ["386", "411"], ["386", "411"], ["378", "411"], ["393", "411"], ["393", "411"], ["404", "411"], ["399", "411"], ["389", "411"], ["165", "411"], ["165", "411"], ["171", "411"], ["173", "411"], ["173", "411"], ["171", "411"], ["171", "411"], ["184", "411"], ["184", "411"], ["315", "411"], ["318", "411"], ["318", "411"], ["318", "411"], ["407", "411"], ["407", "411"], ["326", "411"], ["329", "411"], ["329", "411"], ["329", "411"], ["321", "411"], ["336", "411"], ["336", "411"], ["359", "411"], ["356", "411"], ["356", "411"], ["345", "411"], ["342", "411"], ["342", "411"], ["332", "411"], ["192", "411"], ["195", "411"], ["195", "411"], ["187", "411"], ["203", "411"], ["206", "411"], ["206", "411"], ["206", "411"], ["198", "411"], ["213", "411"], ["229", "411"], ["234", "411"], ["237", "411"], ["237", "411"], ["237", "411"], ["304", "411"], ["304", "411"], ["304", "411"], ["248", "411"], ["246", "411"], ["246", "411"], ["256", "411"], ["258", "411"], ["256", "411"], ["256", "411"], ["269", "411"], ["268", "411"], ["272", "411"], ["268", "411"], ["267", "411"], ["275", "411"], ["267", "411"], ["266", "411"], ["278", "411"], ["266", "411"], ["266", "411"], ["287", "411"], ["287", "411"], ["284", "411"], ["282", "411"], ["282", "411"], ["242", "411"], ["217", "411"], ["217", "411"], ["209", "411"], ["124", "411"], ["127", "411"], ["127", "411"], ["127", "411"], ["119", "411"], ["136", "411"], ["134", "411"], ["134", "411"], ["138", "411"], ["138", "411"], ["147", "411"], ["147", "411"], ["147", "411"], ["130", "411"], ["73", "411"], ["76", "411"], ["78", "411"], ["76", "411"], ["76", "411"], ["68", "411"], ["87", "411"], ["85", "411"], ["85", "411"], ["89", "411"], ["89", "411"], ["98", "411"], ["98", "411"], ["98", "411"], ["81", "411"], ["284", "411"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["56", "54"], ["56", "54"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "62"], ["21", "111"], ["34", "407"], ["404", "407"], ["399", "407"], ["356", "407"], ["342", "407"], ["21", "407"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["46", "51"], ["21", "51"], ["39", "56"], ["21", "56"], ["44", "56"], ["62", "65"], ["68", "65"], ["21", "65"], ["56", "65"], ["65", "68"], ["21", "68"], ["111", "114"], ["119", "114"], ["21", "114"], ["116", "114"], ["116", "114"], ["114", "119"], ["21", "119"], ["160", "159"], ["160", "159"], ["21", "159"], ["167", "165"], ["167", "165"], ["173", "171"], ["173", "171"], ["173", "171"], ["21", "73"], ["65", "116"], ["21", "116"], ["21", "124"], ["49", "160"], ["21", "160"], ["21", "181"], ["21", "315"], ["73", "76"], ["81", "76"], ["21", "76"], ["78", "76"], ["78", "76"], ["21", "81"], ["76", "81"], ["87", "85"], ["85", "89"], ["21", "89"], ["21", "98"], ["85", "98"], ["124", "127"], ["130", "127"], ["21", "127"], ["56", "127"], ["78", "127"], ["127", "130"], ["21", "130"], ["136", "134"], ["134", "138"], ["21", "138"], ["21", "147"], ["134", "147"], ["160", "167"], ["21", "167"], ["165", "173"], ["21", "173"], ["116", "173"], ["56", "173"], ["127", "173"], ["78", "173"], ["181", "184"], ["187", "184"], ["21", "184"], ["165", "184"], ["184", "187"], ["213", "187"], ["292", "187"], ["21", "187"], ["315", "318"], ["321", "318"], ["21", "318"], ["173", "318"], ["195", "318"], ["318", "321"], ["21", "321"], ["21", "372"], ["56", "78"], ["21", "78"], ["165", "174"], ["21", "174"], ["21", "192"], ["21", "326"], ["372", "375"], ["378", "375"], ["21", "375"], ["116", "375"], ["375", "378"], ["21", "378"], ["51", "87"], ["21", "87"], ["51", "136"], ["87", "136"], ["21", "136"], ["192", "195"], ["198", "195"], ["21", "195"], ["173", "195"], ["272", "195"], ["195", "198"], ["21", "198"], ["326", "329"], ["332", "329"], ["21", "329"], ["173", "329"], ["338", "329"], ["206", "329"], ["336", "332"], ["21", "332"], ["21", "383"], ["21", "203"], ["383", "386"], ["389", "386"], ["21", "386"], ["56", "386"], ["395", "386"], ["127", "386"], ["78", "386"], ["393", "389"], ["21", "389"], ["76", "104"], ["21", "104"], ["203", "206"], ["209", "206"], ["21", "206"], ["173", "206"], ["278", "206"], ["206", "209"], ["21", "209"], ["329", "336"], ["21", "336"], ["338", "336"], ["338", "336"], ["114", "152"], ["21", "152"], ["329", "338"], ["21", "338"], ["34", "342"], ["356", "342"], ["21", "342"], ["345", "342"], ["345", "342"], ["386", "393"], ["21", "393"], ["395", "393"], ["395", "393"], ["184", "213"], ["292", "213"], ["21", "213"], ["21", "217"], ["359", "345"], ["21", "345"], ["34", "356"], ["342", "356"], ["21", "356"], ["359", "356"], ["359", "356"], ["386", "395"], ["21", "395"], ["34", "399"], ["404", "399"], ["21", "399"], ["21", "229"], ["229", "304"], ["282", "304"], ["21", "304"], ["345", "359"], ["21", "359"], ["34", "404"], ["399", "404"], ["21", "404"], ["21", "234"], ["234", "237"], ["242", "237"], ["21", "237"], ["237", "242"], ["21", "242"], ["195", "246"], ["21", "246"], ["206", "256"], ["21", "256"], ["195", "248"], ["21", "248"], ["206", "258"], ["21", "258"], ["267", "266"], ["267", "266"], ["278", "266"], ["278", "266"], ["284", "282"], ["284", "282"], ["284", "282"], ["268", "267"], ["268", "267"], ["275", "267"], ["275", "267"], ["256", "278"], ["275", "278"], ["21", "278"], ["206", "278"], ["269", "268"], ["269", "268"], ["272", "268"], ["272", "268"], ["256", "275"], ["21", "275"], ["21", "284"], ["229", "284"], ["282", "284"], ["246", "269"], ["21", "269"], ["269", "272"], ["21", "272"], ["195", "272"], ["213", "292"], ["21", "292"], ["65", "68"], ["65", "76"], ["65", "65"], ["65", "73"], ["65", "78"], ["114", "114"], ["114", "127"], ["114", "116"], ["114", "119"], ["114", "124"], ["159", "167"], ["159", "181"], ["159", "184"], ["159", "174"], ["159", "315"], ["159", "372"], ["159", "375"], ["159", "173"], ["159", "318"], ["159", "171"], ["159", "165"], ["76", "104"], ["76", "76"], ["76", "100"], ["76", "98"], ["76", "81"], ["76", "85"], ["76", "92"], ["76", "87"], ["76", "91"], ["76", "101"], ["76", "90"], ["76", "89"], ["76", "99"], ["76", "78"], ["127", "136"], ["127", "150"], ["127", "134"], ["127", "138"], ["127", "148"], ["127", "152"], ["127", "127"], ["127", "141"], ["127", "140"], ["127", "147"], ["127", "149"], ["127", "130"], ["127", "139"], ["184", "192"], ["184", "195"], ["184", "184"], ["184", "187"], ["318", "326"], ["318", "329"], ["318", "321"], ["318", "318"], ["375", "383"], ["375", "378"], ["375", "386"], ["375", "375"], ["195", "206"], ["195", "195"], ["195", "198"], ["195", "203"], ["329", "338"], ["329", "336"], ["329", "329"], ["329", "332"], ["386", "389"], ["386", "386"], ["386", "395"], ["386", "393"], ["206", "209"], ["206", "213"], ["206", "206"], ["336", "356"], ["336", "362"], ["336", "346"], ["336", "348"], ["336", "347"], ["336", "360"], ["336", "342"], ["336", "361"], ["336", "359"], ["336", "345"], ["393", "404"], ["393", "399"], ["213", "306"], ["213", "304"], ["213", "217"], ["213", "237"], ["213", "229"], ["213", "241"], ["213", "305"], ["213", "307"], ["213", "239"], ["213", "220"], ["213", "234"], ["213", "218"], ["213", "219"], ["237", "256"], ["237", "242"], ["237", "258"], ["237", "268"], ["237", "260"], ["237", "237"], ["237", "241"], ["237", "269"], ["237", "261"], ["237", "246"], ["237", "267"], ["237", "239"], ["237", "251"], ["237", "248"], ["237", "250"], ["237", "266"], ["266", "292"], ["266", "290"], ["266", "298"], ["266", "288"], ["266", "297"], ["266", "282"], ["266", "284"], ["266", "289"], ["266", "299"], ["266", "287"], ["267", "278"], ["268", "275"], ["269", "272"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>6</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>6</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>12</SUB>>", "41": "<(nextInt,nextInt())<SUB>12</SUB>>", "43": "<(LOCAL,int m: int)<SUB>13</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>13</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>13</SUB>>", "49": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>14</SUB>>", "51": "<(nextInt,nextInt())<SUB>14</SUB>>", "53": "<(LOCAL,int[][][] cost: int[][][])<SUB>16</SUB>>", "55": "<(IDENTIFIER,cost,int[][][] cost = new int[n][m][4])<SUB>16</SUB>>", "57": "<(IDENTIFIER,n,new int[n][m][4])<SUB>16</SUB>>", "59": "<(LITERAL,4,new int[n][m][4])<SUB>16</SUB>>", "61": "<(LOCAL,int i: int)<SUB>17</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m - 1); j++),for (int j = 0; Some(j &lt; m - 1); j++))<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "75": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "77": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>18</SUB>>", "79": "<(IDENTIFIER,m,m - 1)<SUB>18</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.assignment,int u = nextInt())<SUB>19</SUB>>", "87": "<(nextInt,nextInt())<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.assignment,cost[i][j][1] = u)<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,cost[i][j])<SUB>20</SUB>>", "93": "<(IDENTIFIER,cost,cost[i][j][1] = u)<SUB>20</SUB>>", "95": "<(IDENTIFIER,j,cost[i][j][1] = u)<SUB>20</SUB>>", "97": "<(IDENTIFIER,u,cost[i][j][1] = u)<SUB>20</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,cost[i][j + 1][3])<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,cost[i])<SUB>21</SUB>>", "103": "<(IDENTIFIER,i,cost[i][j + 1][3] = u)<SUB>21</SUB>>", "105": "<(IDENTIFIER,j,j + 1)<SUB>21</SUB>>", "107": "<(LITERAL,3,cost[i][j + 1][3] = u)<SUB>21</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "115": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>25</SUB>>", "117": "<(IDENTIFIER,n,n - 1)<SUB>25</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "123": "<(LOCAL,int j: int)<SUB>26</SUB>>", "125": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "127": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>26</SUB>>", "129": "<(IDENTIFIER,m,j &lt; m)<SUB>26</SUB>>", "131": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "133": "<(LOCAL,int u: int)<SUB>27</SUB>>", "135": "<(IDENTIFIER,u,int u = nextInt())<SUB>27</SUB>>", "137": "<(IDENTIFIER,in,nextInt())<SUB>27</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,cost[i][j][0])<SUB>28</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,cost[i])<SUB>28</SUB>>", "143": "<(IDENTIFIER,i,cost[i][j][0] = u)<SUB>28</SUB>>", "145": "<(LITERAL,0,cost[i][j][0] = u)<SUB>28</SUB>>", "147": "<(&lt;operator&gt;.assignment,cost[i + 1][j][2] = u)<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,cost[i + 1][j])<SUB>29</SUB>>", "151": "<(IDENTIFIER,cost,cost[i + 1][j][2] = u)<SUB>29</SUB>>", "153": "<(IDENTIFIER,i,i + 1)<SUB>29</SUB>>", "155": "<(IDENTIFIER,j,cost[i + 1][j][2] = u)<SUB>29</SUB>>", "157": "<(IDENTIFIER,u,cost[i + 1][j][2] = u)<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.equals,k % 2 == 0)<SUB>33</SUB>>", "161": "<(IDENTIFIER,k,k % 2)<SUB>33</SUB>>", "163": "<(LITERAL,0,k % 2 == 0)<SUB>33</SUB>>", "165": "<(&lt;operator&gt;.assignment,k = k / 2)<SUB>34</SUB>>", "167": "<(&lt;operator&gt;.division,k / 2)<SUB>34</SUB>>", "169": "<(LITERAL,2,k / 2)<SUB>34</SUB>>", "171": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[k + 1][n][m])<SUB>35</SUB>>", "173": "<(&lt;operator&gt;.alloc,new int[k + 1][n][m])>", "175": "<(IDENTIFIER,k,k + 1)<SUB>35</SUB>>", "177": "<(IDENTIFIER,n,new int[k + 1][n][m])<SUB>35</SUB>>", "179": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= k); i++),for (int i = 0; Some(i &lt;= k); i++))<SUB>37</SUB>>", "181": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>37</SUB>>", "183": "<(LITERAL,0,int i = 0)<SUB>37</SUB>>", "185": "<(IDENTIFIER,i,i &lt;= k)<SUB>37</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "191": "<(LOCAL,int x: int)<SUB>38</SUB>>", "193": "<(IDENTIFIER,x,int x = 0)<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.lessThan,x &lt; n)<SUB>38</SUB>>", "197": "<(IDENTIFIER,n,x &lt; n)<SUB>38</SUB>>", "199": "<(IDENTIFIER,x,x++)<SUB>38</SUB>>", "201": "<(CONTROL_STRUCTURE,for (int y = 0; Some(y &lt; m); y++),for (int y = 0; Some(y &lt; m); y++))<SUB>39</SUB>>", "203": "<(&lt;operator&gt;.assignment,int y = 0)<SUB>39</SUB>>", "205": "<(LITERAL,0,int y = 0)<SUB>39</SUB>>", "207": "<(IDENTIFIER,y,y &lt; m)<SUB>39</SUB>>", "209": "<(&lt;operator&gt;.postIncrement,y++)<SUB>39</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "213": "<(&lt;operator&gt;.equals,i == 0)<SUB>40</SUB>>", "215": "<(LITERAL,0,i == 0)<SUB>40</SUB>>", "217": "<(&lt;operator&gt;.assignment,dp[i][x][y] = 0)<SUB>41</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[i][x])<SUB>41</SUB>>", "221": "<(IDENTIFIER,dp,dp[i][x][y] = 0)<SUB>41</SUB>>", "223": "<(IDENTIFIER,x,dp[i][x][y] = 0)<SUB>41</SUB>>", "225": "<(LITERAL,0,dp[i][x][y] = 0)<SUB>41</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "229": "<(&lt;operator&gt;.assignment,int min = 1000000000)<SUB>43</SUB>>", "231": "<(LITERAL,1000000000,int min = 1000000000)<SUB>43</SUB>>", "233": "<(LOCAL,int way: int)<SUB>45</SUB>>", "235": "<(IDENTIFIER,way,int way = 0)<SUB>45</SUB>>", "237": "<(&lt;operator&gt;.lessThan,way &lt; to.length)<SUB>45</SUB>>", "239": "<(&lt;operator&gt;.fieldAccess,to.length)<SUB>45</SUB>>", "241": "<(FIELD_IDENTIFIER,length,length)<SUB>45</SUB>>", "243": "<(IDENTIFIER,way,way++)<SUB>45</SUB>>", "245": "<(LOCAL,int nextx: int)<SUB>46</SUB>>", "247": "<(IDENTIFIER,nextx,int nextx = x + to[way][0])<SUB>46</SUB>>", "249": "<(IDENTIFIER,x,x + to[way][0])<SUB>46</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,to[way])<SUB>46</SUB>>", "253": "<(IDENTIFIER,way,x + to[way][0])<SUB>46</SUB>>", "255": "<(LOCAL,int nexty: int)<SUB>47</SUB>>", "257": "<(IDENTIFIER,nexty,int nexty = y + to[way][1])<SUB>47</SUB>>", "259": "<(IDENTIFIER,y,y + to[way][1])<SUB>47</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,to[way])<SUB>47</SUB>>", "263": "<(IDENTIFIER,way,y + to[way][1])<SUB>47</SUB>>", "265": "<(CONTROL_STRUCTURE,if (nextx &gt;= 0 &amp;&amp; nextx &lt; n &amp;&amp; nexty &gt;= 0 &amp;&amp; nexty &lt; m),if (nextx &gt;= 0 &amp;&amp; nextx &lt; n &amp;&amp; nexty &gt;= 0 &amp;&amp; nexty &lt; m))<SUB>49</SUB>>", "267": "<(&lt;operator&gt;.logicalAnd,nextx &gt;= 0 &amp;&amp; nextx &lt; n &amp;&amp; nexty &gt;= 0)<SUB>49</SUB>>", "269": "<(&lt;operator&gt;.greaterEqualsThan,nextx &gt;= 0)<SUB>49</SUB>>", "271": "<(LITERAL,0,nextx &gt;= 0)<SUB>49</SUB>>", "273": "<(IDENTIFIER,nextx,nextx &lt; n)<SUB>49</SUB>>", "275": "<(&lt;operator&gt;.greaterEqualsThan,nexty &gt;= 0)<SUB>49</SUB>>", "277": "<(LITERAL,0,nexty &gt;= 0)<SUB>49</SUB>>", "279": "<(IDENTIFIER,nexty,nexty &lt; m)<SUB>49</SUB>>", "281": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "283": "<(IDENTIFIER,min,min = Math.min(min, dp[i - 1][nextx][nexty] + cost[x][y][way]))<SUB>50</SUB>>", "285": "<(IDENTIFIER,Math,Math.min(min, dp[i - 1][nextx][nexty] + cost[x][y][way]))<SUB>50</SUB>>", "287": "<(&lt;operator&gt;.addition,dp[i - 1][nextx][nexty] + cost[x][y][way])<SUB>50</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,dp[i - 1][nextx])<SUB>50</SUB>>", "291": "<(IDENTIFIER,dp,dp[i - 1][nextx][nexty] + cost[x][y][way])<SUB>50</SUB>>", "293": "<(IDENTIFIER,i,i - 1)<SUB>50</SUB>>", "295": "<(IDENTIFIER,nextx,dp[i - 1][nextx][nexty] + cost[x][y][way])<SUB>50</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,cost[x][y][way])<SUB>50</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,cost[x])<SUB>50</SUB>>", "301": "<(IDENTIFIER,x,dp[i - 1][nextx][nexty] + cost[x][y][way])<SUB>50</SUB>>", "303": "<(IDENTIFIER,way,dp[i - 1][nextx][nexty] + cost[x][y][way])<SUB>50</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,dp[i][x][y])<SUB>54</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>54</SUB>>", "309": "<(IDENTIFIER,i,dp[i][x][y] = min)<SUB>54</SUB>>", "311": "<(IDENTIFIER,y,dp[i][x][y] = min)<SUB>54</SUB>>", "313": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>60</SUB>>", "315": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>60</SUB>>", "317": "<(LITERAL,0,int i = 0)<SUB>60</SUB>>", "319": "<(IDENTIFIER,i,i &lt; n)<SUB>60</SUB>>", "321": "<(&lt;operator&gt;.postIncrement,i++)<SUB>60</SUB>>", "323": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>>", "325": "<(LOCAL,int j: int)<SUB>61</SUB>>", "327": "<(IDENTIFIER,j,int j = 0)<SUB>61</SUB>>", "329": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>61</SUB>>", "331": "<(IDENTIFIER,m,j &lt; m)<SUB>61</SUB>>", "333": "<(IDENTIFIER,j,j++)<SUB>61</SUB>>", "335": "<(CONTROL_STRUCTURE,if (j == m - 1),if (j == m - 1))<SUB>62</SUB>>", "337": "<(IDENTIFIER,j,j == m - 1)<SUB>62</SUB>>", "339": "<(IDENTIFIER,m,m - 1)<SUB>62</SUB>>", "341": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "343": "<(IDENTIFIER,out,printf(&quot;%d\\n&quot;, dp[k][i][j] * 2))<SUB>63</SUB>>", "345": "<(&lt;operator&gt;.multiplication,dp[k][i][j] * 2)<SUB>63</SUB>>", "347": "<(&lt;operator&gt;.indexAccess,dp[k][i])<SUB>63</SUB>>", "349": "<(IDENTIFIER,dp,dp[k][i][j] * 2)<SUB>63</SUB>>", "351": "<(IDENTIFIER,i,dp[k][i][j] * 2)<SUB>63</SUB>>", "353": "<(LITERAL,2,dp[k][i][j] * 2)<SUB>63</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "357": "<(IDENTIFIER,out,printf(&quot;%d &quot;, dp[k][i][j] * 2))<SUB>65</SUB>>", "359": "<(&lt;operator&gt;.multiplication,dp[k][i][j] * 2)<SUB>65</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,dp[k][i])<SUB>65</SUB>>", "363": "<(IDENTIFIER,dp,dp[k][i][j] * 2)<SUB>65</SUB>>", "365": "<(IDENTIFIER,i,dp[k][i][j] * 2)<SUB>65</SUB>>", "367": "<(LITERAL,2,dp[k][i][j] * 2)<SUB>65</SUB>>", "369": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "371": "<(LOCAL,int i: int)<SUB>70</SUB>>", "373": "<(IDENTIFIER,i,int i = 0)<SUB>70</SUB>>", "375": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>70</SUB>>", "377": "<(IDENTIFIER,n,i &lt; n)<SUB>70</SUB>>", "379": "<(IDENTIFIER,i,i++)<SUB>70</SUB>>", "381": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>71</SUB>>", "383": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>71</SUB>>", "385": "<(LITERAL,0,int j = 0)<SUB>71</SUB>>", "387": "<(IDENTIFIER,j,j &lt; m)<SUB>71</SUB>>", "389": "<(&lt;operator&gt;.postIncrement,j++)<SUB>71</SUB>>", "391": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>>", "393": "<(&lt;operator&gt;.equals,j == m - 1)<SUB>72</SUB>>", "395": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>72</SUB>>", "397": "<(LITERAL,1,m - 1)<SUB>72</SUB>>", "399": "<(printf,printf(&quot;-1\\n&quot;))<SUB>73</SUB>>", "401": "<(LITERAL,&quot;-1\\n&quot;,printf(&quot;-1\\n&quot;))<SUB>73</SUB>>", "403": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>>", "405": "<(IDENTIFIER,out,printf(&quot;-1 &quot;))<SUB>75</SUB>>", "407": "<(close,close())<SUB>81</SUB>>", "409": "<(MODIFIER,PUBLIC)>", "411": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}