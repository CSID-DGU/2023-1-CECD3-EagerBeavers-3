{"edges": [["19", "20"], ["19", "21"], ["19", "246"], ["19", "247"], ["19", "248"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "46"], ["21", "49"], ["21", "52"], ["21", "73"], ["21", "74"], ["21", "77"], ["21", "78"], ["21", "82"], ["21", "83"], ["21", "87"], ["21", "134"], ["21", "241"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "68"], ["62", "70"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["70", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["87", "88"], ["87", "91"], ["87", "112"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "97"], ["91", "102"], ["91", "107"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["113", "114"], ["113", "119"], ["113", "124"], ["113", "129"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "176"], ["144", "203"], ["144", "204"], ["144", "207"], ["144", "235"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "159"], ["149", "161"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["161", "169"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "186"], ["176", "188"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "196"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["217", "233"], ["218", "219"], ["218", "226"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["233", "234"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["237", "240"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["46", "49"], ["49", "54"], ["74", "80"], ["78", "85"], ["83", "88"], ["241", "248"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["54", "57"], ["57", "64"], ["57", "74"], ["60", "57"], ["80", "78"], ["85", "83"], ["88", "93"], ["88", "115"], ["136", "139"], ["139", "146"], ["139", "244"], ["142", "139"], ["242", "241"], ["28", "26"], ["63", "68"], ["63", "71"], ["68", "60"], ["92", "98"], ["97", "103"], ["102", "108"], ["107", "136"], ["146", "151"], ["204", "209"], ["235", "142"], ["244", "242"], ["64", "63"], ["71", "60"], ["93", "92"], ["98", "97"], ["103", "102"], ["108", "107"], ["114", "120"], ["119", "125"], ["124", "130"], ["129", "136"], ["151", "156"], ["154", "163"], ["154", "178"], ["159", "156"], ["178", "183"], ["181", "190"], ["181", "204"], ["186", "183"], ["209", "212"], ["212", "220"], ["212", "237"], ["215", "212"], ["237", "235"], ["115", "114"], ["120", "119"], ["125", "124"], ["130", "129"], ["156", "154"], ["162", "172"], ["169", "159"], ["183", "181"], ["189", "199"], ["196", "186"], ["218", "233"], ["218", "215"], ["233", "215"], ["163", "166"], ["166", "162"], ["171", "169"], ["190", "193"], ["193", "189"], ["198", "196"], ["219", "218"], ["219", "227"], ["226", "218"], ["172", "171"], ["199", "198"], ["220", "223"], ["223", "219"], ["227", "230"], ["230", "226"], ["19", "24"], ["20", "248"], ["22", "248"], ["25", "248"], ["25", "248"], ["30", "248"], ["30", "248"], ["35", "248"], ["35", "248"], ["35", "248"], ["40", "248"], ["42", "248"], ["40", "248"], ["40", "248"], ["46", "248"], ["49", "248"], ["74", "248"], ["78", "248"], ["78", "248"], ["78", "248"], ["83", "248"], ["83", "248"], ["83", "248"], ["88", "248"], ["114", "248"], ["114", "248"], ["114", "248"], ["119", "248"], ["119", "248"], ["119", "248"], ["124", "248"], ["124", "248"], ["129", "248"], ["129", "248"], ["92", "248"], ["92", "248"], ["92", "248"], ["97", "248"], ["97", "248"], ["97", "248"], ["102", "248"], ["102", "248"], ["107", "248"], ["107", "248"], ["136", "248"], ["139", "248"], ["139", "248"], ["139", "248"], ["241", "248"], ["241", "248"], ["241", "248"], ["146", "248"], ["146", "248"], ["154", "248"], ["154", "248"], ["181", "248"], ["181", "248"], ["204", "248"], ["209", "248"], ["212", "248"], ["212", "248"], ["237", "248"], ["235", "248"], ["235", "248"], ["142", "248"], ["219", "248"], ["223", "248"], ["219", "248"], ["218", "248"], ["226", "248"], ["226", "248"], ["218", "248"], ["218", "248"], ["233", "248"], ["215", "248"], ["189", "248"], ["189", "248"], ["189", "248"], ["196", "248"], ["198", "248"], ["196", "248"], ["196", "248"], ["186", "248"], ["162", "248"], ["162", "248"], ["162", "248"], ["169", "248"], ["171", "248"], ["169", "248"], ["169", "248"], ["159", "248"], ["64", "248"], ["63", "248"], ["63", "248"], ["71", "248"], ["68", "248"], ["60", "248"], ["237", "248"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "46"], ["19", "49"], ["19", "74"], ["80", "78"], ["85", "83"], ["22", "25"], ["19", "25"], ["19", "54"], ["19", "136"], ["74", "241"], ["235", "241"], ["19", "241"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["32", "42"], ["19", "42"], ["54", "57"], ["60", "57"], ["19", "57"], ["37", "57"], ["64", "60"], ["19", "60"], ["19", "80"], ["19", "85"], ["46", "88"], ["68", "88"], ["19", "88"], ["49", "88"], ["71", "88"], ["88", "92"], ["19", "92"], ["88", "97"], ["19", "97"], ["19", "102"], ["19", "107"], ["136", "139"], ["142", "139"], ["19", "139"], ["57", "139"], ["212", "139"], ["19", "142"], ["139", "142"], ["139", "146"], ["19", "146"], ["19", "204"], ["237", "235"], ["237", "235"], ["237", "235"], ["64", "63"], ["64", "63"], ["19", "63"], ["46", "68"], ["19", "68"], ["88", "114"], ["19", "114"], ["88", "119"], ["19", "119"], ["19", "124"], ["19", "129"], ["19", "151"], ["19", "178"], ["19", "209"], ["40", "64"], ["19", "64"], ["57", "64"], ["49", "71"], ["19", "71"], ["151", "154"], ["159", "154"], ["19", "154"], ["78", "154"], ["114", "154"], ["92", "154"], ["154", "159"], ["19", "159"], ["83", "162"], ["124", "162"], ["102", "162"], ["226", "162"], ["171", "169"], ["171", "169"], ["178", "181"], ["186", "181"], ["19", "181"], ["78", "181"], ["119", "181"], ["97", "181"], ["181", "186"], ["19", "186"], ["83", "189"], ["129", "189"], ["107", "189"], ["198", "196"], ["198", "196"], ["209", "212"], ["215", "212"], ["19", "212"], ["139", "212"], ["198", "212"], ["171", "212"], ["223", "215"], ["19", "215"], ["19", "237"], ["74", "237"], ["235", "237"], ["204", "237"], ["233", "237"], ["219", "218"], ["219", "218"], ["226", "218"], ["226", "218"], ["204", "233"], ["19", "233"], ["146", "171"], ["169", "171"], ["19", "171"], ["139", "171"], ["146", "198"], ["196", "198"], ["169", "198"], ["19", "198"], ["139", "198"], ["171", "198"], ["35", "219"], ["226", "219"], ["223", "219"], ["223", "219"], ["35", "226"], ["219", "226"], ["83", "226"], ["124", "226"], ["102", "226"], ["146", "172"], ["169", "172"], ["19", "172"], ["146", "199"], ["196", "199"], ["169", "199"], ["19", "199"], ["40", "223"], ["64", "223"], ["19", "223"], ["212", "223"], ["57", "60"], ["57", "64"], ["57", "57"], ["57", "63"], ["88", "107"], ["88", "115"], ["88", "98"], ["88", "120"], ["88", "102"], ["88", "114"], ["88", "103"], ["88", "119"], ["88", "92"], ["88", "97"], ["88", "129"], ["88", "93"], ["88", "130"], ["88", "108"], ["88", "124"], ["88", "125"], ["139", "154"], ["139", "146"], ["139", "178"], ["139", "209"], ["139", "151"], ["139", "204"], ["139", "181"], ["139", "212"], ["139", "139"], ["139", "183"], ["139", "235"], ["139", "142"], ["139", "237"], ["139", "156"], ["63", "68"], ["63", "71"], ["154", "154"], ["154", "169"], ["154", "163"], ["154", "162"], ["154", "171"], ["154", "166"], ["154", "159"], ["154", "156"], ["154", "172"], ["181", "196"], ["181", "198"], ["181", "189"], ["181", "181"], ["181", "190"], ["181", "186"], ["181", "183"], ["181", "193"], ["181", "199"], ["212", "215"], ["212", "223"], ["212", "212"], ["212", "220"], ["212", "218"], ["212", "219"], ["218", "233"], ["219", "230"], ["219", "226"], ["219", "227"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,char[] s = new char[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new char[n])>", "39": "<(LOCAL,String line: java.lang.String)<SUB>6</SUB>>", "41": "<(IDENTIFIER,line,String line = next())<SUB>6</SUB>>", "43": "<(IDENTIFIER,in,next())<SUB>6</SUB>>", "45": "<(LOCAL,int ht: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,ct,int ct = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int ht = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int ht = 0)<SUB>7</SUB>>", "53": "<(LOCAL,int i: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.equals,line.charAt(i) == 'T')<SUB>9</SUB>>", "65": "<(IDENTIFIER,line,line.charAt(i))<SUB>9</SUB>>", "67": "<(LITERAL,'T',line.charAt(i) == 'T')<SUB>9</SUB>>", "69": "<(IDENTIFIER,ct,ct++)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,ht++)<SUB>12</SUB>>", "73": "<(LOCAL,int cnt: int)<SUB>14</SUB>>", "75": "<(IDENTIFIER,cnt,int cnt = 1000000000)<SUB>14</SUB>>", "77": "<(LOCAL,int[] c: int[])<SUB>15</SUB>>", "79": "<(IDENTIFIER,c,int[] c = new int[2])<SUB>15</SUB>>", "81": "<(LITERAL,2,new int[2])<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignment,char[] cc = new char[2])<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.alloc,new char[2])>", "87": "<(CONTROL_STRUCTURE,if (ct &lt; ht),if (ct &lt; ht))<SUB>17</SUB>>", "89": "<(IDENTIFIER,ct,ct &lt; ht)<SUB>17</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>19</SUB>>", "95": "<(LITERAL,0,c[0] = ct)<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.assignment,c[1] = ht)<SUB>20</SUB>>", "99": "<(IDENTIFIER,c,c[1] = ht)<SUB>20</SUB>>", "101": "<(IDENTIFIER,ht,c[1] = ht)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,cc[0])<SUB>21</SUB>>", "105": "<(LITERAL,0,cc[0] = 'T')<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.assignment,cc[1] = 'H')<SUB>22</SUB>>", "109": "<(IDENTIFIER,cc,cc[1] = 'H')<SUB>22</SUB>>", "111": "<(LITERAL,'H',cc[1] = 'H')<SUB>22</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>24</SUB>>", "117": "<(LITERAL,0,c[0] = ht)<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.assignment,c[1] = ct)<SUB>25</SUB>>", "121": "<(IDENTIFIER,c,c[1] = ct)<SUB>25</SUB>>", "123": "<(IDENTIFIER,ct,c[1] = ct)<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,cc[0])<SUB>26</SUB>>", "127": "<(LITERAL,0,cc[0] = 'H')<SUB>26</SUB>>", "129": "<(&lt;operator&gt;.assignment,cc[1] = 'T')<SUB>27</SUB>>", "131": "<(IDENTIFIER,cc,cc[1] = 'T')<SUB>27</SUB>>", "133": "<(LITERAL,'T',cc[1] = 'T')<SUB>27</SUB>>", "135": "<(LOCAL,int i: int)<SUB>30</SUB>>", "137": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>30</SUB>>", "141": "<(IDENTIFIER,n,i &lt; n)<SUB>30</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "145": "<(LOCAL,int ptr: int)<SUB>32</SUB>>", "147": "<(IDENTIFIER,ptr,int ptr = i)<SUB>32</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; c[0]); j++),for (int j = 0; Some(j &lt; c[0]); j++))<SUB>33</SUB>>", "151": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>33</SUB>>", "153": "<(LITERAL,0,int j = 0)<SUB>33</SUB>>", "155": "<(IDENTIFIER,j,j &lt; c[0])<SUB>33</SUB>>", "157": "<(IDENTIFIER,c,j &lt; c[0])<SUB>33</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,j++)<SUB>33</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,s[ptr])<SUB>35</SUB>>", "165": "<(IDENTIFIER,ptr,s[ptr] = cc[0])<SUB>35</SUB>>", "167": "<(IDENTIFIER,cc,s[ptr] = cc[0])<SUB>35</SUB>>", "169": "<(&lt;operator&gt;.assignment,ptr = (ptr + 1) % n)<SUB>36</SUB>>", "171": "<(&lt;operator&gt;.modulo,(ptr + 1) % n)<SUB>36</SUB>>", "173": "<(IDENTIFIER,ptr,ptr + 1)<SUB>36</SUB>>", "175": "<(IDENTIFIER,n,(ptr + 1) % n)<SUB>36</SUB>>", "177": "<(LOCAL,int j: int)<SUB>38</SUB>>", "179": "<(IDENTIFIER,j,int j = 0)<SUB>38</SUB>>", "181": "<(&lt;operator&gt;.lessThan,j &lt; c[1])<SUB>38</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,c[1])<SUB>38</SUB>>", "185": "<(LITERAL,1,j &lt; c[1])<SUB>38</SUB>>", "187": "<(IDENTIFIER,j,j++)<SUB>38</SUB>>", "189": "<(&lt;operator&gt;.assignment,s[ptr] = cc[1])<SUB>40</SUB>>", "191": "<(IDENTIFIER,s,s[ptr] = cc[1])<SUB>40</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,cc[1])<SUB>40</SUB>>", "195": "<(LITERAL,1,s[ptr] = cc[1])<SUB>40</SUB>>", "197": "<(IDENTIFIER,ptr,ptr = (ptr + 1) % n)<SUB>41</SUB>>", "199": "<(&lt;operator&gt;.addition,ptr + 1)<SUB>41</SUB>>", "201": "<(LITERAL,1,ptr + 1)<SUB>41</SUB>>", "203": "<(LOCAL,int ch: int)<SUB>44</SUB>>", "205": "<(IDENTIFIER,ch,int ch = 0)<SUB>44</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>45</SUB>>", "209": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>45</SUB>>", "211": "<(LITERAL,0,int j = 0)<SUB>45</SUB>>", "213": "<(IDENTIFIER,j,j &lt; n)<SUB>45</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,j++)<SUB>45</SUB>>", "217": "<(CONTROL_STRUCTURE,if (s[j] != line.charAt(j) &amp;&amp; s[j] == cc[0]),if (s[j] != line.charAt(j) &amp;&amp; s[j] == cc[0]))<SUB>46</SUB>>", "219": "<(&lt;operator&gt;.notEquals,s[j] != line.charAt(j))<SUB>46</SUB>>", "221": "<(IDENTIFIER,s,s[j] != line.charAt(j))<SUB>46</SUB>>", "223": "<(charAt,line.charAt(j))<SUB>46</SUB>>", "225": "<(IDENTIFIER,j,line.charAt(j))<SUB>46</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>46</SUB>>", "229": "<(IDENTIFIER,j,s[j] == cc[0])<SUB>46</SUB>>", "231": "<(IDENTIFIER,cc,s[j] == cc[0])<SUB>46</SUB>>", "233": "<(&lt;operator&gt;.postIncrement,ch++)<SUB>47</SUB>>", "235": "<(&lt;operator&gt;.assignment,cnt = Math.min(cnt, ch))<SUB>48</SUB>>", "237": "<(min,Math.min(cnt, ch))<SUB>48</SUB>>", "239": "<(IDENTIFIER,cnt,Math.min(cnt, ch))<SUB>48</SUB>>", "241": "<(print,System.out.print(cnt))<SUB>51</SUB>>", "243": "<(IDENTIFIER,System,System.out.print(cnt))<SUB>51</SUB>>", "245": "<(IDENTIFIER,cnt,System.out.print(cnt))<SUB>51</SUB>>", "247": "<(MODIFIER,STATIC)>"}}