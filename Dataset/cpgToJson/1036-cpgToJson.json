{"edges": [["19", "20"], ["19", "21"], ["19", "202"], ["19", "203"], ["19", "204"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "47"], ["21", "48"], ["21", "51"], ["21", "52"], ["21", "55"], ["21", "98"], ["21", "99"], ["21", "104"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "60"], ["57", "61"], ["57", "64"], ["57", "65"], ["57", "68"], ["57", "78"], ["57", "86"], ["58", "59"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "77"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["73", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "85"], ["81", "82"], ["81", "83"], ["81", "84"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["90", "97"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "200"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "117"], ["111", "120"], ["111", "150"], ["111", "188"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "124"], ["120", "130"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["131", "142"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "141"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["137", "140"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "149"], ["145", "146"], ["145", "147"], ["145", "148"], ["150", "151"], ["150", "164"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["164", "171"], ["164", "187"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "186"], ["178", "179"], ["178", "181"], ["179", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "196"], ["192", "199"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["200", "201"], ["22", "29"], ["25", "41"], ["37", "44"], ["44", "48"], ["48", "52"], ["52", "58"], ["52", "101"], ["99", "204"], ["99", "108"], ["24", "22"], ["39", "37"], ["101", "99"], ["27", "34"], ["30", "25"], ["41", "39"], ["58", "61"], ["61", "65"], ["65", "73"], ["68", "81"], ["78", "87"], ["200", "204"], ["200", "108"], ["29", "27"], ["32", "30"], ["70", "68"], ["80", "78"], ["87", "58"], ["87", "101"], ["87", "91"], ["108", "113"], ["108", "200"], ["34", "32"], ["71", "70"], ["81", "80"], ["91", "94"], ["94", "101"], ["113", "117"], ["117", "121"], ["73", "71"], ["121", "125"], ["121", "137"], ["151", "168"], ["151", "189"], ["189", "108"], ["189", "193"], ["125", "128"], ["128", "152"], ["152", "151"], ["152", "156"], ["155", "151"], ["166", "174"], ["171", "187"], ["187", "204"], ["193", "196"], ["196", "200"], ["132", "145"], ["142", "152"], ["156", "155"], ["156", "160"], ["159", "155"], ["168", "166"], ["172", "179"], ["175", "171"], ["134", "132"], ["144", "142"], ["160", "159"], ["174", "172"], ["177", "175"], ["135", "134"], ["145", "144"], ["178", "177"], ["137", "135"], ["179", "182"], ["181", "178"], ["182", "183"], ["183", "181"], ["19", "24"], ["187", "204"], ["20", "204"], ["22", "204"], ["27", "204"], ["30", "204"], ["30", "204"], ["30", "204"], ["25", "204"], ["41", "204"], ["39", "204"], ["37", "204"], ["37", "204"], ["44", "204"], ["48", "204"], ["52", "204"], ["58", "204"], ["70", "204"], ["68", "204"], ["68", "204"], ["81", "204"], ["80", "204"], ["78", "204"], ["78", "204"], ["87", "204"], ["91", "204"], ["94", "204"], ["99", "204"], ["99", "204"], ["108", "204"], ["113", "204"], ["113", "204"], ["117", "204"], ["117", "204"], ["121", "204"], ["121", "204"], ["135", "204"], ["134", "204"], ["132", "204"], ["132", "204"], ["145", "204"], ["145", "204"], ["144", "204"], ["142", "204"], ["142", "204"], ["125", "204"], ["125", "204"], ["128", "204"], ["151", "204"], ["155", "204"], ["159", "204"], ["155", "204"], ["151", "204"], ["151", "204"], ["189", "204"], ["193", "204"], ["196", "204"], ["200", "204"], ["168", "204"], ["168", "204"], ["166", "204"], ["166", "204"], ["171", "204"], ["175", "204"], ["178", "204"], ["183", "204"], ["183", "204"], ["181", "204"], ["178", "204"], ["177", "204"], ["175", "204"], ["171", "204"], ["171", "204"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["19", "44"], ["19", "48"], ["19", "52"], ["101", "99"], ["101", "99"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "56"], ["19", "105"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["48", "61"], ["87", "61"], ["19", "61"], ["44", "65"], ["78", "65"], ["19", "65"], ["70", "68"], ["70", "68"], ["80", "78"], ["80", "78"], ["52", "101"], ["81", "101"], ["19", "101"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["52", "58"], ["81", "58"], ["19", "58"], ["19", "68"], ["48", "68"], ["87", "68"], ["19", "78"], ["44", "78"], ["99", "200"], ["121", "200"], ["145", "200"], ["19", "200"], ["71", "70"], ["71", "70"], ["19", "70"], ["81", "80"], ["81", "80"], ["81", "80"], ["19", "80"], ["37", "87"], ["19", "87"], ["68", "87"], ["61", "91"], ["19", "91"], ["65", "94"], ["19", "94"], ["48", "108"], ["87", "108"], ["91", "108"], ["189", "108"], ["193", "108"], ["19", "108"], ["37", "108"], ["87", "108"], ["189", "108"], ["108", "113"], ["19", "113"], ["44", "117"], ["78", "117"], ["94", "117"], ["142", "117"], ["128", "117"], ["196", "117"], ["19", "117"], ["73", "71"], ["19", "71"], ["73", "71"], ["73", "71"], ["73", "81"], ["19", "81"], ["71", "81"], ["81", "73"], ["19", "73"], ["58", "73"], ["99", "121"], ["145", "121"], ["200", "121"], ["19", "121"], ["101", "125"], ["135", "125"], ["159", "125"], ["19", "125"], ["152", "151"], ["152", "151"], ["155", "151"], ["155", "151"], ["168", "166"], ["168", "166"], ["19", "187"], ["152", "189"], ["156", "189"], ["160", "189"], ["19", "189"], ["152", "189"], ["156", "189"], ["160", "189"], ["113", "193"], ["19", "193"], ["117", "196"], ["19", "196"], ["108", "125"], ["19", "128"], ["44", "128"], ["78", "128"], ["94", "128"], ["142", "128"], ["196", "128"], ["134", "132"], ["134", "132"], ["144", "142"], ["144", "142"], ["132", "152"], ["125", "152"], ["19", "152"], ["108", "152"], ["156", "155"], ["156", "155"], ["159", "155"], ["159", "155"], ["175", "171"], ["175", "171"], ["19", "132"], ["108", "132"], ["19", "142"], ["44", "142"], ["78", "142"], ["94", "142"], ["128", "142"], ["196", "142"], ["152", "156"], ["19", "156"], ["152", "156"], ["160", "159"], ["160", "159"], ["135", "159"], ["19", "159"], ["101", "159"], ["39", "168"], ["19", "168"], ["142", "168"], ["128", "168"], ["179", "175"], ["19", "175"], ["177", "175"], ["177", "175"], ["135", "134"], ["135", "134"], ["19", "134"], ["145", "144"], ["145", "144"], ["145", "144"], ["19", "144"], ["156", "160"], ["19", "160"], ["156", "160"], ["178", "177"], ["178", "177"], ["19", "177"], ["101", "135"], ["159", "135"], ["19", "135"], ["137", "135"], ["137", "135"], ["137", "135"], ["137", "145"], ["19", "145"], ["137", "145"], ["179", "178"], ["19", "178"], ["183", "178"], ["183", "178"], ["81", "137"], ["145", "137"], ["19", "137"], ["121", "137"], ["166", "179"], ["19", "179"], ["19", "181"], ["183", "181"], ["183", "181"], ["152", "183"], ["156", "183"], ["160", "183"], ["19", "183"], ["152", "183"], ["156", "183"], ["160", "183"], ["87", "94"], ["87", "91"], ["87", "68"], ["87", "73"], ["87", "81"], ["87", "87"], ["87", "80"], ["87", "58"], ["87", "61"], ["87", "70"], ["87", "65"], ["87", "71"], ["87", "78"], ["108", "113"], ["108", "151"], ["108", "121"], ["108", "152"], ["108", "200"], ["108", "117"], ["108", "108"], ["121", "145"], ["121", "128"], ["121", "132"], ["121", "144"], ["121", "134"], ["121", "137"], ["121", "142"], ["121", "135"], ["121", "125"], ["151", "179"], ["151", "178"], ["151", "189"], ["151", "168"], ["151", "181"], ["151", "187"], ["151", "174"], ["151", "182"], ["151", "171"], ["151", "183"], ["151", "166"], ["151", "177"], ["151", "175"], ["151", "172"], ["189", "196"], ["189", "108"], ["189", "193"], ["189", "200"], ["152", "155"], ["152", "156"], ["156", "160"], ["156", "159"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,long K = valueOf(br.readLine()))<SUB>3</SUB>>", "39": "<(valueOf,valueOf(br.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,long n: long)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,long n = 0)<SUB>4</SUB>>", "47": "<(LOCAL,long k: long)<SUB>5</SUB>>", "49": "<(IDENTIFIER,k,long k = 0)<SUB>5</SUB>>", "51": "<(LOCAL,long len: long)<SUB>6</SUB>>", "53": "<(IDENTIFIER,len,long len = 0)<SUB>6</SUB>>", "55": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>7</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "59": "<(IDENTIFIER,len,len++)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,long preK = k)<SUB>9</SUB>>", "63": "<(IDENTIFIER,k,long preK = k)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,long preN = n)<SUB>10</SUB>>", "67": "<(IDENTIFIER,n,long preN = n)<SUB>10</SUB>>", "69": "<(IDENTIFIER,k,k += len * Math.pow(10, len) * 0.9)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.multiplication,len * Math.pow(10, len))<SUB>11</SUB>>", "73": "<(pow,Math.pow(10, len))<SUB>11</SUB>>", "75": "<(LITERAL,10,Math.pow(10, len))<SUB>11</SUB>>", "77": "<(LITERAL,0.9,len * Math.pow(10, len) * 0.9)<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,n += Math.pow(10, len) * 0.9)<SUB>12</SUB>>", "81": "<(pow,Math.pow(10, len))<SUB>12</SUB>>", "83": "<(LITERAL,10,Math.pow(10, len))<SUB>12</SUB>>", "85": "<(LITERAL,0.9,Math.pow(10, len) * 0.9)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,K &lt; k)<SUB>13</SUB>>", "89": "<(IDENTIFIER,k,K &lt; k)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,k = preK)<SUB>14</SUB>>", "93": "<(IDENTIFIER,preK,k = preK)<SUB>14</SUB>>", "95": "<(IDENTIFIER,n,n = preN)<SUB>15</SUB>>", "97": "<(CONTROL_STRUCTURE,break;,break;)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,long step = len - 1)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.subtraction,len - 1)<SUB>19</SUB>>", "103": "<(LITERAL,1,len - 1)<SUB>19</SUB>>", "105": "<(LITERAL,true,while (true))<SUB>20</SUB>>", "107": "<(CONTROL_STRUCTURE,while (k &lt;= K),while (k &lt;= K))<SUB>21</SUB>>", "109": "<(IDENTIFIER,k,k &lt;= K)<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.assignment,long preK = k)<SUB>22</SUB>>", "115": "<(IDENTIFIER,k,long preK = k)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.assignment,long preN = n)<SUB>23</SUB>>", "119": "<(IDENTIFIER,n,long preN = n)<SUB>23</SUB>>", "121": "<(&lt;operator&gt;.equals,step == 0)<SUB>24</SUB>>", "123": "<(LITERAL,0,step == 0)<SUB>24</SUB>>", "125": "<(&lt;operator&gt;.assignmentPlus,k += len)<SUB>25</SUB>>", "127": "<(IDENTIFIER,len,k += len)<SUB>25</SUB>>", "129": "<(IDENTIFIER,n,n++)<SUB>26</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "133": "<(IDENTIFIER,k,k += len * Math.pow(10, step) * 0.9)<SUB>28</SUB>>", "135": "<(&lt;operator&gt;.multiplication,len * Math.pow(10, step))<SUB>28</SUB>>", "137": "<(pow,Math.pow(10, step))<SUB>28</SUB>>", "139": "<(LITERAL,10,Math.pow(10, step))<SUB>28</SUB>>", "141": "<(LITERAL,0.9,len * Math.pow(10, step) * 0.9)<SUB>28</SUB>>", "143": "<(IDENTIFIER,n,n += Math.pow(10, step) * 0.9)<SUB>29</SUB>>", "145": "<(pow,Math.pow(10, step))<SUB>29</SUB>>", "147": "<(LITERAL,10,Math.pow(10, step))<SUB>29</SUB>>", "149": "<(LITERAL,0.9,Math.pow(10, step) * 0.9)<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.logicalOr,k == K || (k &gt;= K &amp;&amp; k - K &lt; len))<SUB>31</SUB>>", "153": "<(IDENTIFIER,k,k == K)<SUB>31</SUB>>", "155": "<(&lt;operator&gt;.logicalAnd,k &gt;= K &amp;&amp; k - K &lt; len)<SUB>31</SUB>>", "157": "<(IDENTIFIER,k,k &gt;= K)<SUB>31</SUB>>", "159": "<(&lt;operator&gt;.lessThan,k - K &lt; len)<SUB>31</SUB>>", "161": "<(IDENTIFIER,k,k - K)<SUB>31</SUB>>", "163": "<(IDENTIFIER,len,k - K &lt; len)<SUB>31</SUB>>", "165": "<(LOCAL,String nStr: java.lang.String)<SUB>34</SUB>>", "167": "<(IDENTIFIER,nStr,String nStr = Long.toString(n))<SUB>34</SUB>>", "169": "<(IDENTIFIER,Long,Long.toString(n))<SUB>34</SUB>>", "171": "<(println,System.out.println(nStr.charAt(nStr.length() - (int) (k - K) - 1)))<SUB>35</SUB>>", "173": "<(IDENTIFIER,System,System.out.println(nStr.charAt(nStr.length() - (int) (k - K) - 1)))<SUB>35</SUB>>", "175": "<(charAt,nStr.charAt(nStr.length() - (int) (k - K) - 1))<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.subtraction,nStr.length() - (int) (k - K) - 1)<SUB>35</SUB>>", "179": "<(length,nStr.length())<SUB>35</SUB>>", "181": "<(&lt;operator&gt;.cast,(int) (k - K))<SUB>35</SUB>>", "183": "<(&lt;operator&gt;.subtraction,k - K)<SUB>35</SUB>>", "185": "<(IDENTIFIER,K,k - K)<SUB>35</SUB>>", "187": "<(RETURN,return;,return;)<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.lessThan,K &lt; k)<SUB>38</SUB>>", "191": "<(IDENTIFIER,k,K &lt; k)<SUB>38</SUB>>", "193": "<(&lt;operator&gt;.assignment,k = preK)<SUB>39</SUB>>", "195": "<(IDENTIFIER,preK,k = preK)<SUB>39</SUB>>", "197": "<(IDENTIFIER,n,n = preN)<SUB>40</SUB>>", "199": "<(CONTROL_STRUCTURE,break;,break;)<SUB>41</SUB>>", "201": "<(IDENTIFIER,step,step--)<SUB>44</SUB>>", "203": "<(MODIFIER,STATIC)>"}}