{"edges": [["21", "23"], ["21", "189"], ["21", "190"], ["21", "191"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "187"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "49"], ["45", "53"], ["46", "47"], ["46", "48"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["54", "55"], ["54", "56"], ["54", "61"], ["54", "69"], ["54", "70"], ["54", "73"], ["54", "184"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "66"], ["63", "67"], ["63", "68"], ["64", "65"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "85"], ["73", "87"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "105"], ["98", "117"], ["98", "118"], ["98", "122"], ["98", "174"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "109"], ["107", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["122", "123"], ["122", "125"], ["123", "124"], ["125", "126"], ["125", "127"], ["125", "131"], ["127", "128"], ["127", "129"], ["129", "130"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "141"], ["131", "143"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "145"], ["143", "150"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "160"], ["150", "162"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["162", "164"], ["162", "169"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["169", "172"], ["172", "173"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["176", "179"], ["176", "180"], ["176", "181"], ["176", "182"], ["176", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["24", "30"], ["27", "33"], ["31", "34"], ["34", "38"], ["36", "43"], ["41", "46"], ["187", "191"], ["26", "24"], ["28", "27"], ["33", "31"], ["38", "36"], ["43", "41"], ["46", "50"], ["46", "58"], ["30", "28"], ["50", "187"], ["56", "64"], ["61", "70"], ["70", "75"], ["184", "187"], ["58", "56"], ["63", "61"], ["75", "79"], ["78", "91"], ["78", "184"], ["85", "79"], ["64", "63"], ["79", "78"], ["79", "82"], ["82", "78"], ["89", "95"], ["91", "89"], ["95", "102"], ["95", "85"], ["100", "107"], ["118", "123"], ["174", "85"], ["102", "100"], ["106", "114"], ["106", "120"], ["120", "118"], ["123", "129"], ["123", "176"], ["176", "174"], ["107", "109"], ["109", "106"], ["112", "107"], ["127", "133"], ["114", "112"], ["129", "127"], ["133", "140"], ["136", "123"], ["136", "147"], ["141", "140"], ["138", "136"], ["145", "152"], ["140", "138"], ["147", "145"], ["152", "159"], ["155", "166"], ["155", "141"], ["160", "159"], ["157", "155"], ["164", "172"], ["169", "160"], ["159", "157"], ["166", "164"], ["172", "169"], ["21", "26"], ["22", "191"], ["24", "191"], ["27", "191"], ["27", "191"], ["31", "191"], ["34", "191"], ["36", "191"], ["43", "191"], ["41", "191"], ["41", "191"], ["46", "191"], ["46", "191"], ["58", "191"], ["56", "191"], ["56", "191"], ["61", "191"], ["64", "191"], ["63", "191"], ["61", "191"], ["61", "191"], ["70", "191"], ["75", "191"], ["79", "191"], ["78", "191"], ["82", "191"], ["82", "191"], ["78", "191"], ["78", "191"], ["184", "191"], ["184", "191"], ["91", "191"], ["89", "191"], ["89", "191"], ["95", "191"], ["95", "191"], ["95", "191"], ["102", "191"], ["100", "191"], ["100", "191"], ["106", "191"], ["106", "191"], ["106", "191"], ["120", "191"], ["118", "191"], ["123", "191"], ["123", "191"], ["176", "191"], ["176", "191"], ["174", "191"], ["174", "191"], ["85", "191"], ["127", "191"], ["133", "191"], ["136", "191"], ["136", "191"], ["136", "191"], ["145", "191"], ["152", "191"], ["155", "191"], ["155", "191"], ["155", "191"], ["141", "191"], ["169", "191"], ["169", "191"], ["169", "191"], ["160", "191"], ["112", "191"], ["112", "191"], ["50", "191"], ["50", "191"], ["187", "191"], ["187", "191"], ["169", "191"], ["176", "191"], ["21", "22"], ["21", "24"], ["21", "31"], ["38", "36"], ["43", "41"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["184", "187"], ["50", "187"], ["21", "187"], ["34", "38"], ["21", "38"], ["38", "43"], ["21", "43"], ["41", "46"], ["21", "46"], ["27", "50"], ["21", "50"], ["36", "50"], ["21", "56"], ["36", "56"], ["63", "61"], ["63", "61"], ["63", "61"], ["21", "70"], ["21", "75"], ["27", "184"], ["21", "184"], ["70", "184"], ["174", "184"], ["21", "58"], ["36", "58"], ["64", "63"], ["21", "63"], ["79", "78"], ["79", "78"], ["82", "78"], ["82", "78"], ["176", "85"], ["21", "85"], ["79", "85"], ["82", "85"], ["46", "89"], ["21", "89"], ["79", "89"], ["82", "89"], ["56", "64"], ["21", "64"], ["75", "79"], ["85", "79"], ["21", "79"], ["79", "82"], ["21", "82"], ["95", "82"], ["36", "82"], ["46", "91"], ["21", "91"], ["79", "91"], ["82", "91"], ["89", "95"], ["21", "95"], ["82", "95"], ["36", "95"], ["21", "100"], ["95", "100"], ["120", "118"], ["176", "174"], ["176", "174"], ["176", "174"], ["176", "174"], ["176", "174"], ["70", "174"], ["21", "174"], ["21", "102"], ["95", "102"], ["107", "106"], ["109", "106"], ["21", "112"], ["107", "112"], ["61", "120"], ["21", "120"], ["118", "123"], ["129", "123"], ["21", "123"], ["129", "127"], ["21", "176"], ["79", "176"], ["82", "176"], ["109", "176"], ["107", "176"], ["100", "107"], ["112", "107"], ["21", "107"], ["64", "109"], ["176", "109"], ["21", "109"], ["21", "133"], ["21", "114"], ["107", "114"], ["123", "129"], ["21", "129"], ["133", "136"], ["141", "136"], ["21", "136"], ["127", "136"], ["136", "141"], ["21", "141"], ["127", "145"], ["127", "145"], ["164", "145"], ["129", "145"], ["21", "152"], ["152", "155"], ["160", "155"], ["21", "155"], ["145", "155"], ["155", "160"], ["21", "160"], ["145", "164"], ["145", "164"], ["21", "169"], ["164", "169"], ["172", "169"], ["21", "172"], ["46", "64"], ["46", "75"], ["46", "56"], ["46", "50"], ["46", "184"], ["46", "79"], ["46", "58"], ["46", "61"], ["46", "70"], ["46", "63"], ["46", "78"], ["78", "85"], ["78", "95"], ["78", "91"], ["78", "79"], ["78", "89"], ["78", "78"], ["79", "82"], ["95", "107"], ["95", "120"], ["95", "102"], ["95", "118"], ["95", "100"], ["95", "174"], ["95", "123"], ["95", "106"], ["95", "176"], ["95", "109"], ["106", "107"], ["106", "114"], ["106", "112"], ["106", "106"], ["106", "109"], ["123", "136"], ["123", "129"], ["123", "138"], ["123", "127"], ["123", "123"], ["123", "140"], ["123", "133"], ["136", "136"], ["136", "145"], ["136", "138"], ["136", "152"], ["136", "155"], ["136", "141"], ["136", "157"], ["136", "159"], ["136", "140"], ["136", "147"], ["155", "169"], ["155", "164"], ["155", "155"], ["155", "160"], ["155", "166"], ["155", "157"], ["155", "159"], ["155", "172"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "6": "<(LOCAL,Scanner in: ANY)<SUB>5</SUB>>", "32": "<(IDENTIFIER,in,ANY in = new Scanner())<SUB>5</SUB>>", "34": "<(&lt;init&gt;,new Scanner())<SUB>5</SUB>>", "35": "<(LOCAL,long n: long)<SUB>6</SUB>>", "37": "<(IDENTIFIER,n,long n = nextLong())<SUB>6</SUB>>", "39": "<(IDENTIFIER,in,nextLong())<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,long s = nextLong())<SUB>7</SUB>>", "43": "<(nextLong,nextLong())<SUB>7</SUB>>", "45": "<(CONTROL_STRUCTURE,if (s == 0),if (s == 0))<SUB>8</SUB>>", "47": "<(IDENTIFIER,s,s == 0)<SUB>8</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "51": "<(IDENTIFIER,out,println(n))<SUB>9</SUB>>", "53": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "55": "<(LOCAL,String N: java.lang.String)<SUB>11</SUB>>", "57": "<(IDENTIFIER,N,String N = &quot;&quot; + n)<SUB>11</SUB>>", "59": "<(LITERAL,&quot;&quot;,&quot;&quot; + n)<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.assignment,dp = new long[N.length()][163][2][2])<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.alloc,new long[N.length()][163][2][2])>", "65": "<(IDENTIFIER,N,N.length())<SUB>12</SUB>>", "67": "<(LITERAL,2,new long[N.length()][163][2][2])<SUB>12</SUB>>", "69": "<(LOCAL,long re: long)<SUB>13</SUB>>", "71": "<(IDENTIFIER,re,long re = 0)<SUB>13</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; 163 &amp;&amp; i &lt;= n); i++),for (int i = 1; Some(i &lt; 163 &amp;&amp; i &lt;= n); i++))<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>14</SUB>>", "77": "<(LITERAL,1,int i = 1)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; 163)<SUB>14</SUB>>", "81": "<(LITERAL,163,i &lt; 163)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,i &lt;= n)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.assignment,long tmp = s + i)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.addition,s + i)<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,s + i)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.lessEqualsThan,tmp &lt;= n)<SUB>16</SUB>>", "97": "<(IDENTIFIER,n,tmp &lt;= n)<SUB>16</SUB>>", "99": "<(LOCAL,String S: java.lang.String)<SUB>17</SUB>>", "101": "<(IDENTIFIER,S,String S = &quot;&quot; + tmp)<SUB>17</SUB>>", "103": "<(LITERAL,&quot;&quot;,&quot;&quot; + tmp)<SUB>17</SUB>>", "105": "<(CONTROL_STRUCTURE,while (S.length() &lt; N.length()),while (S.length() &lt; N.length()))<SUB>18</SUB>>", "107": "<(length,S.length())<SUB>18</SUB>>", "109": "<(length,N.length())<SUB>18</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(IDENTIFIER,S,S = '0' + S)<SUB>19</SUB>>", "115": "<(LITERAL,'0','0' + S)<SUB>19</SUB>>", "117": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>21</SUB>>", "119": "<(IDENTIFIER,$iterLocal0,)<SUB>21</SUB>>", "121": "<(IDENTIFIER,dp,&lt;empty&gt;)<SUB>21</SUB>>", "123": "<(hasNext,&lt;empty&gt;)<SUB>21</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>21</SUB>>", "129": "<(next,&lt;empty&gt;)<SUB>21</SUB>>", "131": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "133": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>22</SUB>>", "135": "<(LITERAL,0,int $idx0 = 0)<SUB>22</SUB>>", "137": "<(IDENTIFIER,$idx0,$idx0 &lt; a.length)>", "139": "<(IDENTIFIER,a,$idx0 &lt; a.length)>", "141": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>22</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>22</SUB>>", "149": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "151": "<(LOCAL,$idx1: int)<SUB>23</SUB>>", "153": "<(IDENTIFIER,$idx1,int $idx1 = 0)>", "155": "<(&lt;operator&gt;.lessThan,$idx1 &lt; b.length)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,b.length)<SUB>23</SUB>>", "159": "<(FIELD_IDENTIFIER,length,length)<SUB>23</SUB>>", "161": "<(IDENTIFIER,$idx1,$idx1++)>", "163": "<(LOCAL,c: long[])<SUB>23</SUB>>", "165": "<(IDENTIFIER,c,&lt;empty&gt;)>", "167": "<(IDENTIFIER,b,&lt;empty&gt;)>", "169": "<(fill,fill(c, -1))<SUB>24</SUB>>", "171": "<(IDENTIFIER,c,fill(c, -1))<SUB>24</SUB>>", "173": "<(LITERAL,1,-1)<SUB>24</SUB>>", "175": "<(IDENTIFIER,re,re += cal(0, i, 0, 0, N, S))<SUB>28</SUB>>", "177": "<(IDENTIFIER,this,cal(0, i, 0, 0, N, S))<SUB>28</SUB>>", "179": "<(IDENTIFIER,i,cal(0, i, 0, 0, N, S))<SUB>28</SUB>>", "181": "<(LITERAL,0,cal(0, i, 0, 0, N, S))<SUB>28</SUB>>", "183": "<(IDENTIFIER,S,cal(0, i, 0, 0, N, S))<SUB>28</SUB>>", "185": "<(IDENTIFIER,out,println(re))<SUB>31</SUB>>", "187": "<(close,close())<SUB>33</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}