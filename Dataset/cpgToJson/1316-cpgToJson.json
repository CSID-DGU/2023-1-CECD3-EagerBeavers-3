{"edges": [["19", "21"], ["19", "101"], ["19", "102"], ["19", "103"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "30"], ["21", "34"], ["21", "45"], ["21", "46"], ["21", "52"], ["21", "59"], ["21", "60"], ["21", "65"], ["21", "66"], ["21", "77"], ["21", "84"], ["21", "85"], ["21", "96"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "44"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["48", "51"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "76"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "95"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["22", "25"], ["25", "28"], ["26", "32"], ["30", "35"], ["46", "53"], ["60", "72"], ["66", "78"], ["85", "99"], ["96", "103"], ["24", "22"], ["28", "26"], ["32", "30"], ["35", "42"], ["35", "48"], ["48", "46"], ["53", "56"], ["53", "62"], ["56", "62"], ["62", "60"], ["68", "66"], ["78", "81"], ["78", "90"], ["81", "78"], ["87", "85"], ["97", "96"], ["39", "44"], ["44", "103"], ["69", "68"], ["88", "87"], ["99", "97"], ["40", "39"], ["70", "69"], ["89", "88"], ["42", "40"], ["72", "70"], ["90", "89"], ["19", "24"], ["44", "103"], ["20", "103"], ["22", "103"], ["25", "103"], ["26", "103"], ["30", "103"], ["32", "103"], ["30", "103"], ["30", "103"], ["35", "103"], ["35", "103"], ["39", "103"], ["39", "103"], ["48", "103"], ["19", "20"], ["19", "22"], ["28", "26"], ["32", "30"], ["48", "46"], ["48", "46"], ["48", "46"], ["62", "60"], ["62", "60"], ["68", "66"], ["68", "66"], ["87", "85"], ["87", "85"], ["22", "25"], ["19", "25"], ["19", "56"], ["69", "81"], ["19", "81"], ["85", "96"], ["19", "96"], ["25", "28"], ["19", "28"], ["28", "32"], ["19", "32"], ["26", "35"], ["19", "35"], ["19", "44"], ["19", "48"], ["30", "48"], ["46", "53"], ["19", "53"], ["53", "62"], ["56", "62"], ["19", "62"], ["69", "68"], ["69", "68"], ["60", "68"], ["19", "68"], ["66", "78"], ["81", "78"], ["19", "78"], ["78", "81"], ["89", "87"], ["89", "87"], ["68", "87"], ["19", "87"], ["19", "39"], ["70", "69"], ["70", "69"], ["72", "69"], ["19", "69"], ["89", "88"], ["89", "88"], ["68", "88"], ["19", "88"], ["62", "70"], ["19", "70"], ["72", "70"], ["72", "70"], ["90", "89"], ["90", "89"], ["69", "89"], ["19", "89"], ["35", "72"], ["19", "72"], ["78", "90"], ["19", "90"], ["35", "48"], ["35", "68"], ["35", "60"], ["35", "96"], ["35", "42"], ["35", "89"], ["35", "66"], ["35", "99"], ["35", "46"], ["35", "85"], ["35", "72"], ["35", "69"], ["35", "40"], ["35", "87"], ["35", "97"], ["35", "44"], ["35", "90"], ["35", "53"], ["35", "88"], ["35", "70"], ["35", "78"], ["35", "62"], ["35", "39"], ["53", "56"], ["78", "81"], ["78", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new JS())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new JS())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new JS())<SUB>2</SUB>>", "27": "<(IDENTIFIER,x,x = nextLong())<SUB>3</SUB>>", "29": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "31": "<(IDENTIFIER,k,k = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.equals,x == 0)<SUB>6</SUB>>", "37": "<(LITERAL,0,x == 0)<SUB>6</SUB>>", "39": "<(println,System.out.println(0))<SUB>7</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(0))<SUB>7</SUB>>", "43": "<(LITERAL,0,System.out.println(0))<SUB>7</SUB>>", "45": "<(LOCAL,long c: long)<SUB>11</SUB>>", "47": "<(IDENTIFIER,c,long c = pow(2, k))<SUB>11</SUB>>", "49": "<(IDENTIFIER,this,pow(2, k))<SUB>11</SUB>>", "51": "<(IDENTIFIER,k,pow(2, k))<SUB>11</SUB>>", "53": "<(&lt;operator&gt;.equals,c == 0)<SUB>12</SUB>>", "55": "<(LITERAL,0,c == 0)<SUB>12</SUB>>", "57": "<(IDENTIFIER,c,c = mod)<SUB>12</SUB>>", "59": "<(LOCAL,long sub: long)<SUB>13</SUB>>", "61": "<(IDENTIFIER,sub,long sub = c - 1)<SUB>13</SUB>>", "63": "<(IDENTIFIER,c,c - 1)<SUB>13</SUB>>", "65": "<(LOCAL,long low: long)<SUB>15</SUB>>", "67": "<(IDENTIFIER,low,long low = (c * (x % mod)) % mod - sub)<SUB>15</SUB>>", "69": "<(&lt;operator&gt;.modulo,(c * (x % mod)) % mod)<SUB>15</SUB>>", "71": "<(IDENTIFIER,c,c * (x % mod))<SUB>15</SUB>>", "73": "<(IDENTIFIER,x,x % mod)<SUB>15</SUB>>", "75": "<(IDENTIFIER,mod,(c * (x % mod)) % mod)<SUB>15</SUB>>", "77": "<(CONTROL_STRUCTURE,while (low &lt; 0),while (low &lt; 0))<SUB>16</SUB>>", "79": "<(IDENTIFIER,low,low &lt; 0)<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.assignmentPlus,low += mod)<SUB>16</SUB>>", "83": "<(IDENTIFIER,mod,low += mod)<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.assignment,long res = ((low * 2) % mod + sub) % mod)<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.modulo,((low * 2) % mod + sub) % mod)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.modulo,(low * 2) % mod)<SUB>17</SUB>>", "91": "<(IDENTIFIER,low,low * 2)<SUB>17</SUB>>", "93": "<(IDENTIFIER,mod,(low * 2) % mod)<SUB>17</SUB>>", "95": "<(IDENTIFIER,mod,((low * 2) % mod + sub) % mod)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "99": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "101": "<(MODIFIER,PUBLIC)>", "103": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}