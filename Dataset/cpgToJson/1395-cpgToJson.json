{"edges": [["19", "20"], ["19", "21"], ["19", "158"], ["19", "159"], ["19", "160"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "53"], ["39", "59"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "52"], ["43", "44"], ["43", "51"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["59", "60"], ["60", "61"], ["60", "64"], ["60", "70"], ["61", "62"], ["61", "63"], ["64", "65"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["71", "72"], ["71", "79"], ["71", "85"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["86", "87"], ["86", "90"], ["86", "91"], ["86", "96"], ["86", "97"], ["86", "98"], ["86", "99"], ["86", "102"], ["86", "107"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "119"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "126"], ["119", "132"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["122", "125"], ["126", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["133", "142"], ["133", "148"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["136", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["149", "150"], ["149", "157"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "45"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["40", "57"], ["40", "61"], ["28", "26"], ["42", "40"], ["54", "160"], ["43", "42"], ["55", "54"], ["61", "68"], ["61", "73"], ["44", "43"], ["57", "55"], ["65", "160"], ["45", "48"], ["48", "44"], ["66", "65"], ["72", "83"], ["72", "87"], ["68", "66"], ["73", "72"], ["73", "76"], ["76", "72"], ["80", "160"], ["81", "80"], ["87", "93"], ["91", "99"], ["99", "104"], ["102", "108"], ["83", "81"], ["93", "91"], ["104", "102"], ["108", "160"], ["108", "115"], ["112", "122"], ["114", "112"], ["120", "129"], ["120", "138"], ["115", "114"], ["122", "120"], ["127", "108"], ["129", "127"], ["134", "145"], ["134", "153"], ["136", "134"], ["143", "108"], ["138", "136"], ["145", "143"], ["150", "160"], ["151", "154"], ["154", "150"], ["153", "151"], ["19", "24"], ["20", "160"], ["22", "160"], ["25", "160"], ["25", "160"], ["31", "160"], ["37", "160"], ["35", "160"], ["35", "160"], ["40", "160"], ["44", "160"], ["44", "160"], ["43", "160"], ["42", "160"], ["42", "160"], ["40", "160"], ["40", "160"], ["54", "160"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["22", "25"], ["19", "25"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "40"], ["19", "40"], ["43", "40"], ["43", "40"], ["48", "40"], ["43", "42"], ["43", "42"], ["48", "42"], ["19", "42"], ["19", "54"], ["44", "43"], ["44", "43"], ["19", "43"], ["40", "61"], ["19", "61"], ["45", "44"], ["45", "44"], ["48", "44"], ["48", "44"], ["19", "65"], ["35", "45"], ["19", "45"], ["45", "48"], ["19", "48"], ["73", "72"], ["73", "72"], ["76", "72"], ["76", "72"], ["61", "73"], ["19", "73"], ["48", "73"], ["73", "76"], ["19", "76"], ["19", "80"], ["73", "87"], ["19", "87"], ["93", "91"], ["93", "91"], ["19", "99"], ["104", "102"], ["104", "102"], ["73", "87"], ["76", "87"], ["19", "93"], ["73", "93"], ["93", "104"], ["19", "104"], ["99", "108"], ["127", "108"], ["19", "108"], ["102", "108"], ["143", "108"], ["114", "112"], ["114", "112"], ["108", "114"], ["19", "114"], ["108", "114"], ["87", "120"], ["134", "120"], ["19", "120"], ["122", "120"], ["122", "120"], ["122", "120"], ["122", "127"], ["19", "127"], ["108", "115"], ["19", "115"], ["108", "115"], ["136", "122"], ["19", "122"], ["112", "122"], ["91", "122"], ["136", "122"], ["122", "129"], ["19", "129"], ["120", "134"], ["19", "134"], ["136", "134"], ["136", "134"], ["136", "134"], ["145", "143"], ["145", "143"], ["122", "136"], ["19", "136"], ["138", "136"], ["138", "136"], ["122", "136"], ["122", "138"], ["19", "138"], ["138", "145"], ["19", "145"], ["19", "150"], ["138", "150"], ["19", "154"], ["138", "154"], ["40", "57"], ["40", "54"], ["40", "61"], ["40", "55"], ["61", "68"], ["61", "73"], ["61", "66"], ["61", "72"], ["61", "65"], ["72", "99"], ["72", "81"], ["72", "102"], ["72", "104"], ["72", "87"], ["72", "91"], ["72", "93"], ["72", "80"], ["72", "83"], ["72", "108"], ["73", "76"], ["108", "115"], ["108", "120"], ["108", "122"], ["108", "114"], ["108", "112"], ["120", "136"], ["120", "129"], ["120", "134"], ["120", "138"], ["120", "127"], ["120", "108"], ["134", "154"], ["134", "145"], ["134", "150"], ["134", "151"], ["134", "153"], ["134", "143"], ["134", "108"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>4</SUB>>", "33": "<(nextLong,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,if (n &gt; ((k - 2) * (k - 1)) / 2 + k),if (n &gt; ((k - 2) * (k - 1)) / 2 + k))<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,n &gt; ((k - 2) * (k - 1)) / 2 + k)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.division,((k - 2) * (k - 1)) / 2)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.subtraction,k - 2)<SUB>5</SUB>>", "47": "<(LITERAL,2,k - 2)<SUB>5</SUB>>", "49": "<(IDENTIFIER,k,k - 1)<SUB>5</SUB>>", "51": "<(LITERAL,2,((k - 2) * (k - 1)) / 2)<SUB>5</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "57": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "59": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.equals,n == 1)<SUB>8</SUB>>", "63": "<(LITERAL,1,n == 1)<SUB>8</SUB>>", "65": "<(println,System.out.println(&quot;0&quot;))<SUB>9</SUB>>", "67": "<(IDENTIFIER,System,System.out.println(&quot;0&quot;))<SUB>9</SUB>>", "69": "<(LITERAL,&quot;0&quot;,System.out.println(&quot;0&quot;))<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,if (n &lt;= k &amp;&amp; n &gt; 1),if (n &lt;= k &amp;&amp; n &gt; 1))<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>12</SUB>>", "75": "<(IDENTIFIER,k,n &lt;= k)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,n &gt; 1)<SUB>12</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "83": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "85": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.assignmentMinus,n -= k)<SUB>16</SUB>>", "89": "<(IDENTIFIER,k,n -= k)<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.assignment,long start = k - 2)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.subtraction,k - 2)<SUB>17</SUB>>", "95": "<(LITERAL,2,k - 2)<SUB>17</SUB>>", "97": "<(LOCAL,long left: long)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.assignment,long left = 1)<SUB>19</SUB>>", "101": "<(LITERAL,1,long left = 1)<SUB>19</SUB>>", "103": "<(IDENTIFIER,right,long right = k - 2)<SUB>19</SUB>>", "105": "<(IDENTIFIER,k,k - 2)<SUB>19</SUB>>", "107": "<(CONTROL_STRUCTURE,while (left &lt;= right),while (left &lt;= right))<SUB>21</SUB>>", "109": "<(IDENTIFIER,left,left &lt;= right)<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "113": "<(IDENTIFIER,x,x = (left + right) / 2)<SUB>22</SUB>>", "115": "<(&lt;operator&gt;.addition,left + right)<SUB>22</SUB>>", "117": "<(IDENTIFIER,right,left + right)<SUB>22</SUB>>", "119": "<(CONTROL_STRUCTURE,if (n &gt; cumSum(x, start)),if (n &gt; cumSum(x, start)))<SUB>25</SUB>>", "121": "<(IDENTIFIER,n,n &gt; cumSum(x, start))<SUB>25</SUB>>", "123": "<(IDENTIFIER,this,cumSum(x, start))<SUB>25</SUB>>", "125": "<(IDENTIFIER,start,cumSum(x, start))<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.assignment,left = x + 1)<SUB>26</SUB>>", "129": "<(&lt;operator&gt;.addition,x + 1)<SUB>26</SUB>>", "131": "<(LITERAL,1,x + 1)<SUB>26</SUB>>", "133": "<(CONTROL_STRUCTURE,if (n &lt; cumSum(x - 1, start)),if (n &lt; cumSum(x - 1, start)))<SUB>29</SUB>>", "135": "<(IDENTIFIER,n,n &lt; cumSum(x - 1, start))<SUB>29</SUB>>", "137": "<(IDENTIFIER,this,cumSum(x - 1, start))<SUB>29</SUB>>", "139": "<(IDENTIFIER,x,x - 1)<SUB>29</SUB>>", "141": "<(IDENTIFIER,start,cumSum(x - 1, start))<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.assignment,right = x - 1)<SUB>30</SUB>>", "145": "<(&lt;operator&gt;.subtraction,x - 1)<SUB>30</SUB>>", "147": "<(LITERAL,1,x - 1)<SUB>30</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "153": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "155": "<(LITERAL,1,1 + x)<SUB>34</SUB>>", "157": "<(CONTROL_STRUCTURE,break;,break;)<SUB>35</SUB>>", "159": "<(MODIFIER,STATIC)>"}}