{"edges": [["19", "21"], ["19", "201"], ["19", "202"], ["19", "203"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "57"], ["21", "74"], ["21", "75"], ["21", "79"], ["21", "80"], ["21", "83"], ["21", "111"], ["21", "112"], ["21", "115"], ["21", "143"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "73"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "71"], ["67", "68"], ["67", "70"], ["68", "69"], ["71", "72"], ["75", "76"], ["75", "77"], ["77", "78"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "105"], ["94", "95"], ["94", "102"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["103", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "135"], ["123", "141"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "147"], ["143", "159"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "157"], ["153", "154"], ["153", "156"], ["154", "155"], ["157", "158"], ["159", "160"], ["160", "161"], ["160", "162"], ["160", "165"], ["160", "190"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "181"], ["166", "167"], ["166", "174"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "188"], ["182", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "43"], ["75", "80"], ["80", "85"], ["112", "117"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "52"], ["46", "58"], ["49", "46"], ["51", "49"], ["58", "65"], ["58", "77"], ["77", "75"], ["85", "88"], ["88", "98"], ["88", "112"], ["91", "88"], ["116", "128"], ["116", "144"], ["144", "151"], ["144", "162"], ["52", "55"], ["55", "51"], ["62", "73"], ["73", "203"], ["105", "91"], ["117", "116"], ["117", "120"], ["120", "116"], ["135", "141"], ["141", "117"], ["148", "203"], ["63", "68"], ["66", "62"], ["95", "103"], ["95", "108"], ["106", "105"], ["125", "133"], ["125", "138"], ["136", "135"], ["149", "154"], ["152", "148"], ["162", "168"], ["190", "203"], ["65", "63"], ["67", "71"], ["71", "66"], ["96", "95"], ["103", "108"], ["108", "106"], ["126", "125"], ["133", "138"], ["138", "136"], ["151", "149"], ["153", "157"], ["157", "152"], ["166", "185"], ["166", "193"], ["191", "196"], ["194", "190"], ["68", "67"], ["98", "96"], ["128", "126"], ["154", "153"], ["167", "166"], ["167", "177"], ["174", "166"], ["182", "188"], ["188", "168"], ["193", "191"], ["195", "194"], ["168", "167"], ["168", "171"], ["171", "167"], ["175", "174"], ["183", "182"], ["196", "195"], ["177", "175"], ["185", "183"], ["19", "24"], ["73", "203"], ["20", "203"], ["22", "203"], ["25", "203"], ["27", "203"], ["34", "203"], ["32", "203"], ["32", "203"], ["37", "203"], ["37", "203"], ["37", "203"], ["43", "203"], ["46", "203"], ["46", "203"], ["58", "203"], ["58", "203"], ["58", "203"], ["62", "203"], ["66", "203"], ["66", "203"], ["62", "203"], ["51", "203"], ["55", "203"], ["51", "203"], ["51", "203"], ["49", "203"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["77", "75"], ["19", "80"], ["88", "112"], ["19", "112"], ["22", "25"], ["19", "25"], ["19", "43"], ["55", "51"], ["19", "85"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["43", "46"], ["49", "46"], ["19", "46"], ["39", "46"], ["46", "49"], ["19", "49"], ["32", "58"], ["19", "58"], ["46", "58"], ["19", "73"], ["19", "77"], ["85", "88"], ["91", "88"], ["19", "88"], ["58", "88"], ["88", "91"], ["19", "91"], ["117", "116"], ["117", "116"], ["120", "116"], ["120", "116"], ["46", "116"], ["117", "144"], ["19", "144"], ["117", "144"], ["34", "55"], ["19", "55"], ["68", "62"], ["19", "62"], ["71", "62"], ["75", "105"], ["95", "105"], ["80", "117"], ["133", "117"], ["103", "117"], ["19", "117"], ["88", "117"], ["112", "120"], ["141", "120"], ["19", "120"], ["58", "120"], ["75", "135"], ["125", "135"], ["112", "141"], ["120", "141"], ["19", "141"], ["154", "148"], ["19", "148"], ["157", "148"], ["19", "162"], ["68", "66"], ["19", "66"], ["71", "66"], ["75", "95"], ["105", "95"], ["19", "95"], ["75", "125"], ["135", "125"], ["105", "125"], ["19", "125"], ["154", "152"], ["19", "152"], ["157", "152"], ["168", "190"], ["171", "190"], ["19", "190"], ["112", "190"], ["120", "190"], ["171", "190"], ["141", "190"], ["68", "67"], ["19", "67"], ["19", "71"], ["80", "103"], ["19", "103"], ["117", "133"], ["19", "133"], ["154", "153"], ["19", "153"], ["19", "157"], ["167", "166"], ["167", "166"], ["174", "166"], ["174", "166"], ["168", "194"], ["171", "194"], ["19", "194"], ["112", "194"], ["120", "194"], ["171", "194"], ["141", "194"], ["19", "68"], ["19", "154"], ["168", "167"], ["168", "167"], ["171", "167"], ["171", "167"], ["75", "174"], ["182", "174"], ["19", "174"], ["75", "182"], ["174", "182"], ["168", "188"], ["171", "188"], ["19", "188"], ["168", "195"], ["171", "195"], ["19", "195"], ["162", "168"], ["188", "168"], ["19", "168"], ["58", "168"], ["120", "168"], ["168", "171"], ["19", "171"], ["112", "171"], ["120", "171"], ["141", "171"], ["168", "196"], ["171", "196"], ["19", "196"], ["46", "51"], ["46", "52"], ["46", "49"], ["46", "46"], ["46", "55"], ["58", "68"], ["58", "73"], ["58", "77"], ["58", "75"], ["58", "85"], ["58", "67"], ["58", "144"], ["58", "112"], ["58", "80"], ["58", "88"], ["58", "66"], ["58", "116"], ["58", "65"], ["58", "71"], ["58", "117"], ["58", "63"], ["58", "62"], ["88", "96"], ["88", "98"], ["88", "95"], ["88", "91"], ["88", "88"], ["88", "108"], ["88", "106"], ["88", "105"], ["116", "136"], ["116", "128"], ["116", "138"], ["116", "141"], ["116", "116"], ["116", "126"], ["116", "135"], ["116", "117"], ["116", "125"], ["144", "167"], ["144", "154"], ["144", "196"], ["144", "149"], ["144", "151"], ["144", "162"], ["144", "153"], ["144", "168"], ["144", "191"], ["144", "195"], ["144", "148"], ["144", "190"], ["144", "152"], ["144", "194"], ["144", "193"], ["144", "166"], ["144", "157"], ["117", "120"], ["95", "103"], ["125", "133"], ["166", "167"], ["166", "188"], ["166", "185"], ["166", "168"], ["166", "182"], ["166", "183"], ["166", "166"], ["167", "174"], ["167", "177"], ["167", "175"], ["168", "171"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int k: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,int k = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>7</SUB>>", "53": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,if (k &gt; n),if (k &gt; n))<SUB>8</SUB>>", "59": "<(IDENTIFIER,k,k &gt; n)<SUB>8</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "65": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.addition,-1 + &quot; &quot;)<SUB>9</SUB>>", "69": "<(LITERAL,1,-1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "73": "<(RETURN,return;,return;)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[] v = new int[100010])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[100010])>", "79": "<(LOCAL,int cnt: int)<SUB>13</SUB>>", "81": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i &lt; k)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.equals,v[a[i]] == 0)<SUB>15</SUB>>", "97": "<(IDENTIFIER,v,v[a[i]] == 0)<SUB>15</SUB>>", "99": "<(IDENTIFIER,a,v[a[i]] == 0)<SUB>15</SUB>>", "101": "<(LITERAL,0,v[a[i]] == 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,v[a[i]]++)<SUB>18</SUB>>", "107": "<(IDENTIFIER,v,v[a[i]]++)<SUB>18</SUB>>", "109": "<(IDENTIFIER,a,v[a[i]]++)<SUB>18</SUB>>", "111": "<(LOCAL,int i: int)<SUB>21</SUB>>", "113": "<(IDENTIFIER,i,int i = k)<SUB>21</SUB>>", "115": "<(CONTROL_STRUCTURE,while (cnt &lt; k &amp;&amp; i &lt; n),while (cnt &lt; k &amp;&amp; i &lt; n))<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.lessThan,cnt &lt; k)<SUB>22</SUB>>", "119": "<(IDENTIFIER,k,cnt &lt; k)<SUB>22</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.equals,v[a[i]] == 0)<SUB>23</SUB>>", "127": "<(IDENTIFIER,v,v[a[i]] == 0)<SUB>23</SUB>>", "129": "<(IDENTIFIER,a,v[a[i]] == 0)<SUB>23</SUB>>", "131": "<(LITERAL,0,v[a[i]] == 0)<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,v[a[i]]++)<SUB>26</SUB>>", "137": "<(IDENTIFIER,v,v[a[i]]++)<SUB>26</SUB>>", "139": "<(IDENTIFIER,a,v[a[i]]++)<SUB>26</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "143": "<(CONTROL_STRUCTURE,if (cnt != k),if (cnt != k))<SUB>29</SUB>>", "145": "<(IDENTIFIER,cnt,cnt != k)<SUB>29</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "151": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.addition,-1 + &quot; &quot;)<SUB>30</SUB>>", "155": "<(LITERAL,1,-1)<SUB>30</SUB>>", "157": "<(&lt;operator&gt;.minus,-1)<SUB>30</SUB>>", "159": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "161": "<(LOCAL,int st: int)<SUB>32</SUB>>", "163": "<(IDENTIFIER,st,int st = 0)<SUB>32</SUB>>", "165": "<(CONTROL_STRUCTURE,while (st &lt; n &amp;&amp; st &lt; i &amp;&amp; v[a[st]] &gt; 1),while (st &lt; n &amp;&amp; st &lt; i &amp;&amp; v[a[st]] &gt; 1))<SUB>33</SUB>>", "167": "<(&lt;operator&gt;.logicalAnd,st &lt; n &amp;&amp; st &lt; i)<SUB>33</SUB>>", "169": "<(IDENTIFIER,st,st &lt; n)<SUB>33</SUB>>", "171": "<(&lt;operator&gt;.lessThan,st &lt; i)<SUB>33</SUB>>", "173": "<(IDENTIFIER,i,st &lt; i)<SUB>33</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,v[a[st]])<SUB>33</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,a[st])<SUB>33</SUB>>", "179": "<(IDENTIFIER,st,v[a[st]] &gt; 1)<SUB>33</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,v[a[st]])<SUB>34</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,a[st])<SUB>34</SUB>>", "187": "<(IDENTIFIER,st,v[a[st]]--)<SUB>34</SUB>>", "189": "<(IDENTIFIER,st,st++)<SUB>35</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>37</SUB>>", "193": "<(FIELD_IDENTIFIER,out,out)<SUB>37</SUB>>", "195": "<(&lt;operator&gt;.addition,(st + 1) + &quot; &quot;)<SUB>37</SUB>>", "197": "<(IDENTIFIER,st,st + 1)<SUB>37</SUB>>", "199": "<(LITERAL,&quot; &quot;,(st + 1) + &quot; &quot;)<SUB>37</SUB>>", "201": "<(MODIFIER,PUBLIC)>", "203": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}