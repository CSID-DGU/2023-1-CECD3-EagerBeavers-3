{"edges": [["19", "21"], ["19", "115"], ["19", "116"], ["19", "117"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "42"], ["21", "52"], ["21", "53"], ["21", "64"], ["21", "83"], ["21", "106"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "41"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "51"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["47", "50"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "63"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "82"], ["67", "68"], ["67", "79"], ["68", "69"], ["68", "78"], ["69", "70"], ["69", "71"], ["69", "72"], ["69", "77"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "105"], ["86", "87"], ["86", "102"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "101"], ["90", "91"], ["90", "92"], ["90", "93"], ["90", "100"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["22", "28"], ["25", "34"], ["32", "39"], ["36", "46"], ["42", "54"], ["64", "94"], ["83", "109"], ["106", "117"], ["24", "22"], ["26", "25"], ["34", "32"], ["38", "36"], ["44", "42"], ["54", "61"], ["54", "74"], ["66", "64"], ["85", "83"], ["107", "111"], ["110", "106"], ["28", "26"], ["39", "38"], ["45", "44"], ["58", "63"], ["63", "117"], ["67", "66"], ["86", "85"], ["109", "107"], ["111", "110"], ["46", "47"], ["47", "45"], ["59", "58"], ["68", "79"], ["79", "67"], ["87", "102"], ["102", "86"], ["61", "59"], ["69", "68"], ["89", "87"], ["72", "69"], ["90", "89"], ["74", "72"], ["93", "90"], ["94", "97"], ["97", "93"], ["19", "24"], ["63", "117"], ["20", "117"], ["22", "117"], ["25", "117"], ["25", "117"], ["32", "117"], ["36", "117"], ["39", "117"], ["38", "117"], ["36", "117"], ["36", "117"], ["42", "117"], ["45", "117"], ["44", "117"], ["42", "117"], ["42", "117"], ["54", "117"], ["54", "117"], ["58", "117"], ["58", "117"], ["47", "117"], ["19", "20"], ["19", "22"], ["34", "32"], ["39", "36"], ["19", "36"], ["19", "42"], ["47", "42"], ["47", "42"], ["47", "42"], ["66", "64"], ["66", "64"], ["85", "83"], ["85", "83"], ["22", "25"], ["19", "25"], ["110", "106"], ["110", "106"], ["25", "34"], ["19", "34"], ["39", "38"], ["19", "38"], ["19", "44"], ["47", "44"], ["47", "44"], ["47", "44"], ["32", "54"], ["19", "54"], ["19", "63"], ["67", "66"], ["67", "66"], ["79", "66"], ["19", "66"], ["87", "85"], ["87", "85"], ["102", "85"], ["102", "85"], ["19", "85"], ["83", "110"], ["19", "110"], ["85", "110"], ["34", "39"], ["19", "39"], ["19", "45"], ["47", "45"], ["47", "45"], ["47", "45"], ["19", "58"], ["68", "67"], ["68", "67"], ["79", "67"], ["79", "67"], ["87", "86"], ["87", "86"], ["102", "86"], ["102", "86"], ["83", "111"], ["19", "111"], ["19", "47"], ["69", "68"], ["69", "68"], ["69", "68"], ["69", "68"], ["19", "68"], ["54", "79"], ["19", "79"], ["68", "79"], ["64", "87"], ["19", "87"], ["89", "87"], ["89", "87"], ["19", "102"], ["89", "102"], ["19", "69"], ["72", "69"], ["72", "69"], ["74", "69"], ["90", "89"], ["90", "89"], ["90", "89"], ["90", "89"], ["19", "89"], ["36", "72"], ["19", "72"], ["74", "72"], ["74", "72"], ["69", "90"], ["19", "90"], ["93", "90"], ["93", "90"], ["97", "90"], ["42", "74"], ["19", "74"], ["94", "93"], ["94", "93"], ["97", "93"], ["97", "93"], ["72", "94"], ["19", "94"], ["66", "97"], ["19", "97"], ["54", "107"], ["54", "94"], ["54", "68"], ["54", "64"], ["54", "89"], ["54", "66"], ["54", "102"], ["54", "85"], ["54", "72"], ["54", "69"], ["54", "67"], ["54", "74"], ["54", "106"], ["54", "59"], ["54", "87"], ["54", "97"], ["54", "93"], ["54", "90"], ["54", "79"], ["54", "58"], ["54", "61"], ["54", "83"], ["54", "110"], ["54", "63"], ["54", "111"], ["54", "109"], ["54", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long x: long)<SUB>3</SUB>>", "31": "<(LOCAL,long mod: long)<SUB>3</SUB>>", "33": "<(IDENTIFIER,x,long x = nextLong())<SUB>3</SUB>>", "35": "<(IDENTIFIER,s,nextLong())<SUB>3</SUB>>", "37": "<(IDENTIFIER,k,long k = s.nextLong() + 1)<SUB>3</SUB>>", "39": "<(nextLong,nextLong())<SUB>3</SUB>>", "41": "<(LITERAL,1,s.nextLong() + 1)<SUB>3</SUB>>", "43": "<(IDENTIFIER,mod,long mod = (long) Math.pow(10, 9) + 7)<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.cast,(long) Math.pow(10, 9))<SUB>3</SUB>>", "47": "<(pow,Math.pow(10, 9))<SUB>3</SUB>>", "49": "<(LITERAL,10,Math.pow(10, 9))<SUB>3</SUB>>", "51": "<(LITERAL,7,(long) Math.pow(10, 9) + 7)<SUB>3</SUB>>", "53": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>5</SUB>>", "55": "<(IDENTIFIER,x,x == 0)<SUB>5</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "61": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "63": "<(RETURN,return;,return;)<SUB>7</SUB>>", "65": "<(IDENTIFIER,ans,ans = ((power(2, k % (mod - 1), mod) % mod) * (x % mod)) % mod)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.multiplication,(power(2, k % (mod - 1), mod) % mod) * (x % mod))<SUB>10</SUB>>", "69": "<(power,power(2, k % (mod - 1), mod))<SUB>10</SUB>>", "71": "<(LITERAL,2,power(2, k % (mod - 1), mod))<SUB>10</SUB>>", "73": "<(IDENTIFIER,k,k % (mod - 1))<SUB>10</SUB>>", "75": "<(IDENTIFIER,mod,mod - 1)<SUB>10</SUB>>", "77": "<(IDENTIFIER,mod,power(2, k % (mod - 1), mod))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.modulo,x % mod)<SUB>10</SUB>>", "81": "<(IDENTIFIER,mod,x % mod)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,ans = (ans - power(2, (k - 1) % (mod - 1), mod) % mod + 2 * mod) % mod)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.modulo,(ans - power(2, (k - 1) % (mod - 1), mod) % mod + 2 * mod) % mod)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.subtraction,ans - power(2, (k - 1) % (mod - 1), mod) % mod)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.modulo,power(2, (k - 1) % (mod - 1), mod) % mod)<SUB>14</SUB>>", "91": "<(IDENTIFIER,this,power(2, (k - 1) % (mod - 1), mod))<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.modulo,(k - 1) % (mod - 1))<SUB>14</SUB>>", "95": "<(IDENTIFIER,k,k - 1)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.subtraction,mod - 1)<SUB>14</SUB>>", "99": "<(LITERAL,1,mod - 1)<SUB>14</SUB>>", "101": "<(IDENTIFIER,mod,power(2, (k - 1) % (mod - 1), mod) % mod)<SUB>14</SUB>>", "103": "<(LITERAL,2,2 * mod)<SUB>14</SUB>>", "105": "<(IDENTIFIER,mod,(ans - power(2, (k - 1) % (mod - 1), mod) % mod + 2 * mod) % mod)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.addition,ans + 1)<SUB>15</SUB>>", "113": "<(LITERAL,1,ans + 1)<SUB>15</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}