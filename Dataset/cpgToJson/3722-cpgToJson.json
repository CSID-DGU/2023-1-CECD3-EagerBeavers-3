{"edges": [["24", "26"], ["24", "367"], ["24", "368"], ["24", "369"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "34"], ["26", "37"], ["26", "39"], ["26", "40"], ["26", "46"], ["26", "47"], ["26", "50"], ["26", "51"], ["26", "57"], ["26", "73"], ["26", "118"], ["26", "119"], ["26", "125"], ["26", "142"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["37", "5"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "83"], ["73", "85"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "92"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "103"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["119", "121"], ["121", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "150"], ["142", "152"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "8"], ["152", "153"], ["152", "156"], ["152", "159"], ["152", "160"], ["152", "166"], ["152", "167"], ["152", "173"], ["152", "174"], ["152", "178"], ["152", "179"], ["152", "182"], ["152", "185"], ["152", "188"], ["152", "217"], ["152", "218"], ["152", "224"], ["152", "225"], ["152", "231"], ["152", "335"], ["152", "344"], ["153", "154"], ["153", "155"], ["156", "7"], ["156", "157"], ["157", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "9"], ["185", "186"], ["186", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "209"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["207", "208"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["211", "214"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["227", "228"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["231", "236"], ["231", "239"], ["231", "241"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["239", "240"], ["241", "242"], ["241", "243"], ["241", "248"], ["241", "330"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "256"], ["248", "258"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["258", "259"], ["258", "277"], ["259", "260"], ["259", "267"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "272"], ["268", "269"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "311"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "292"], ["283", "284"], ["283", "289"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "302"], ["293", "294"], ["293", "299"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "308"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "321"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "318"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["335", "336"], ["335", "339"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "343"], ["340", "341"], ["340", "342"], ["344", "345"], ["344", "346"], ["344", "349"], ["344", "352"], ["344", "354"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "351"], ["352", "353"], ["354", "355"], ["354", "356"], ["354", "361"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["365", "366"], ["27", "33"], ["30", "36"], ["34", "37"], ["37", "44"], ["40", "47"], ["47", "54"], ["51", "59"], ["119", "127"], ["29", "27"], ["31", "30"], ["36", "34"], ["42", "40"], ["53", "51"], ["59", "62"], ["62", "69"], ["62", "75"], ["65", "62"], ["75", "80"], ["78", "89"], ["78", "122"], ["83", "80"], ["121", "119"], ["127", "130"], ["130", "137"], ["130", "144"], ["133", "130"], ["144", "147"], ["147", "369"], ["147", "155"], ["150", "147"], ["33", "31"], ["44", "42"], ["54", "53"], ["68", "65"], ["80", "78"], ["87", "94"], ["122", "121"], ["136", "133"], ["153", "157"], ["156", "164"], ["160", "171"], ["167", "176"], ["174", "179"], ["179", "184"], ["182", "186"], ["185", "190"], ["218", "228"], ["225", "233"], ["335", "346"], ["69", "68"], ["89", "87"], ["94", "97"], ["97", "107"], ["97", "83"], ["100", "97"], ["137", "140"], ["140", "136"], ["155", "153"], ["157", "156"], ["162", "160"], ["169", "167"], ["176", "174"], ["184", "182"], ["186", "185"], ["190", "193"], ["193", "200"], ["193", "221"], ["196", "193"], ["220", "218"], ["227", "225"], ["233", "236"], ["236", "245"], ["236", "338"], ["239", "236"], ["336", "340"], ["339", "335"], ["346", "349"], ["349", "358"], ["349", "150"], ["352", "349"], ["164", "162"], ["171", "169"], ["199", "214"], ["209", "196"], ["221", "220"], ["228", "227"], ["243", "250"], ["330", "239"], ["338", "336"], ["340", "339"], ["356", "362"], ["361", "352"], ["105", "114"], ["105", "100"], ["200", "207"], ["203", "199"], ["211", "209"], ["245", "243"], ["250", "253"], ["253", "261"], ["253", "331"], ["256", "253"], ["331", "330"], ["358", "356"], ["362", "365"], ["365", "361"], ["106", "105"], ["113", "107"], ["205", "203"], ["214", "211"], ["107", "106"], ["114", "113"], ["207", "205"], ["260", "269"], ["260", "279"], ["278", "313"], ["278", "256"], ["261", "264"], ["264", "260"], ["268", "273"], ["272", "279"], ["279", "278"], ["279", "286"], ["282", "278"], ["312", "322"], ["321", "256"], ["269", "268"], ["273", "272"], ["283", "282"], ["283", "296"], ["292", "282"], ["313", "318"], ["316", "312"], ["322", "327"], ["325", "321"], ["284", "289"], ["289", "283"], ["293", "292"], ["293", "305"], ["302", "292"], ["318", "316"], ["327", "325"], ["286", "284"], ["294", "299"], ["299", "293"], ["303", "308"], ["308", "302"], ["296", "294"], ["305", "303"], ["24", "29"], ["25", "369"], ["27", "369"], ["30", "369"], ["30", "369"], ["34", "369"], ["37", "369"], ["37", "369"], ["42", "369"], ["44", "369"], ["42", "369"], ["40", "369"], ["40", "369"], ["47", "369"], ["51", "369"], ["51", "369"], ["59", "369"], ["62", "369"], ["75", "369"], ["78", "369"], ["78", "369"], ["78", "369"], ["119", "369"], ["121", "369"], ["119", "369"], ["119", "369"], ["127", "369"], ["130", "369"], ["130", "369"], ["130", "369"], ["144", "369"], ["147", "369"], ["147", "369"], ["147", "369"], ["150", "369"], ["133", "369"], ["83", "369"], ["65", "369"], ["211", "369"], ["24", "25"], ["24", "27"], ["24", "34"], ["42", "40"], ["42", "40"], ["24", "47"], ["53", "51"], ["121", "119"], ["27", "30"], ["24", "30"], ["34", "37"], ["24", "37"], ["30", "37"], ["24", "59"], ["24", "75"], ["24", "127"], ["24", "144"], ["24", "42"], ["44", "42"], ["47", "53"], ["24", "53"], ["59", "62"], ["65", "62"], ["24", "62"], ["47", "62"], ["24", "65"], ["62", "65"], ["62", "68"], ["24", "68"], ["80", "78"], ["24", "78"], ["80", "78"], ["89", "83"], ["24", "83"], ["89", "87"], ["80", "121"], ["24", "121"], ["127", "130"], ["133", "130"], ["24", "130"], ["80", "130"], ["130", "133"], ["24", "133"], ["140", "136"], ["144", "147"], ["150", "147"], ["24", "147"], ["40", "147"], ["147", "150"], ["24", "150"], ["24", "153"], ["162", "160"], ["162", "160"], ["169", "167"], ["169", "167"], ["176", "174"], ["24", "179"], ["24", "182"], ["220", "218"], ["227", "225"], ["37", "44"], ["24", "44"], ["47", "54"], ["24", "54"], ["62", "80"], ["97", "80"], ["24", "80"], ["75", "80"], ["83", "80"], ["87", "94"], ["24", "94"], ["106", "100"], ["24", "100"], ["80", "122"], ["24", "122"], ["153", "156"], ["24", "156"], ["157", "156"], ["182", "185"], ["24", "185"], ["186", "185"], ["24", "190"], ["24", "233"], ["218", "335"], ["24", "335"], ["24", "346"], ["78", "89"], ["24", "89"], ["94", "97"], ["100", "97"], ["24", "97"], ["80", "97"], ["97", "100"], ["24", "140"], ["44", "157"], ["186", "157"], ["24", "157"], ["42", "162"], ["169", "162"], ["205", "162"], ["24", "162"], ["164", "162"], ["162", "169"], ["24", "169"], ["171", "169"], ["160", "176"], ["24", "176"], ["157", "186"], ["24", "186"], ["190", "193"], ["196", "193"], ["24", "193"], ["176", "193"], ["193", "196"], ["24", "196"], ["51", "199"], ["211", "209"], ["211", "209"], ["211", "209"], ["167", "220"], ["24", "220"], ["24", "227"], ["167", "227"], ["233", "236"], ["239", "236"], ["24", "236"], ["193", "236"], ["24", "239"], ["236", "239"], ["174", "243"], ["211", "243"], ["236", "330"], ["24", "330"], ["218", "339"], ["24", "339"], ["346", "349"], ["352", "349"], ["24", "349"], ["236", "349"], ["349", "352"], ["24", "352"], ["174", "356"], ["211", "356"], ["365", "361"], ["156", "164"], ["24", "164"], ["164", "171"], ["24", "171"], ["167", "221"], ["24", "221"], ["24", "228"], ["167", "228"], ["24", "250"], ["167", "250"], ["106", "105"], ["106", "105"], ["24", "105"], ["106", "113"], ["24", "113"], ["24", "211"], ["179", "211"], ["209", "211"], ["174", "211"], ["199", "211"], ["250", "253"], ["256", "253"], ["24", "253"], ["279", "256"], ["286", "256"], ["296", "256"], ["305", "256"], ["327", "256"], ["24", "256"], ["24", "365"], ["51", "106"], ["113", "106"], ["24", "106"], ["87", "106"], ["51", "113"], ["106", "113"], ["169", "205"], ["24", "205"], ["207", "205"], ["185", "207"], ["24", "207"], ["119", "260"], ["361", "260"], ["330", "260"], ["225", "260"], ["272", "260"], ["302", "260"], ["321", "260"], ["236", "272"], ["24", "272"], ["279", "278"], ["279", "278"], ["282", "278"], ["282", "278"], ["218", "312"], ["283", "312"], ["293", "312"], ["225", "321"], ["302", "321"], ["218", "268"], ["283", "268"], ["293", "268"], ["312", "268"], ["253", "279"], ["24", "279"], ["283", "282"], ["283", "282"], ["292", "282"], ["292", "282"], ["218", "283"], ["293", "283"], ["268", "283"], ["293", "283"], ["312", "283"], ["293", "292"], ["293", "292"], ["302", "292"], ["302", "292"], ["218", "293"], ["283", "293"], ["283", "293"], ["225", "302"], ["260", "302"], ["272", "302"], ["279", "318"], ["286", "318"], ["296", "318"], ["305", "318"], ["24", "318"], ["318", "327"], ["24", "327"], ["279", "286"], ["24", "286"], ["286", "296"], ["24", "296"], ["296", "305"], ["24", "305"], ["62", "68"], ["62", "65"], ["62", "69"], ["62", "62"], ["78", "80"], ["78", "94"], ["78", "87"], ["78", "97"], ["78", "89"], ["78", "83"], ["78", "78"], ["130", "136"], ["130", "140"], ["130", "133"], ["130", "137"], ["130", "130"], ["147", "167"], ["147", "150"], ["147", "162"], ["147", "338"], ["147", "228"], ["147", "349"], ["147", "190"], ["147", "184"], ["147", "336"], ["147", "340"], ["147", "174"], ["147", "182"], ["147", "186"], ["147", "346"], ["147", "160"], ["147", "236"], ["147", "176"], ["147", "147"], ["147", "335"], ["147", "227"], ["147", "169"], ["147", "225"], ["147", "179"], ["147", "185"], ["147", "153"], ["147", "339"], ["147", "221"], ["147", "164"], ["147", "155"], ["147", "233"], ["147", "171"], ["147", "193"], ["147", "157"], ["147", "220"], ["147", "156"], ["147", "218"], ["97", "100"], ["97", "107"], ["97", "97"], ["97", "106"], ["97", "105"], ["193", "214"], ["193", "209"], ["193", "196"], ["193", "200"], ["193", "199"], ["193", "207"], ["193", "205"], ["193", "193"], ["193", "211"], ["193", "203"], ["236", "243"], ["236", "236"], ["236", "253"], ["236", "245"], ["236", "239"], ["236", "330"], ["236", "331"], ["236", "250"], ["349", "358"], ["349", "356"], ["349", "349"], ["349", "362"], ["349", "365"], ["349", "361"], ["349", "352"], ["105", "114"], ["105", "107"], ["105", "113"], ["105", "106"], ["105", "105"], ["253", "256"], ["253", "264"], ["253", "260"], ["253", "253"], ["253", "278"], ["253", "261"], ["253", "279"], ["260", "272"], ["260", "268"], ["260", "269"], ["260", "273"], ["278", "322"], ["278", "316"], ["278", "321"], ["278", "325"], ["278", "318"], ["278", "327"], ["278", "313"], ["278", "312"], ["279", "283"], ["279", "282"], ["279", "284"], ["279", "289"], ["279", "286"], ["283", "292"], ["283", "296"], ["283", "293"], ["283", "299"], ["283", "294"], ["293", "308"], ["293", "302"], ["293", "305"], ["293", "303"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY in = new InputStreamReader(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputStreamReader(System.in))<SUB>2</SUB>>", "32": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,BufferedReader br: ANY)<SUB>3</SUB>>", "35": "<(IDENTIFIER,br,ANY br = new BufferedReader(in))<SUB>3</SUB>>", "37": "<(&lt;init&gt;,new BufferedReader(in))<SUB>3</SUB>>", "38": "<(IDENTIFIER,in,new BufferedReader(in))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.assignment,int t = parseInt(br.readLine()))<SUB>5</SUB>>", "42": "<(parseInt,parseInt(br.readLine()))<SUB>5</SUB>>", "44": "<(readLine,readLine())<SUB>5</SUB>>", "46": "<(LOCAL,int A: int)<SUB>29</SUB>>", "48": "<(IDENTIFIER,A,int A = 10000000)<SUB>29</SUB>>", "50": "<(LOCAL,int[] convert: int[])<SUB>30</SUB>>", "52": "<(IDENTIFIER,convert,int[] convert = new int[A + 1])<SUB>30</SUB>>", "54": "<(&lt;operator&gt;.addition,A + 1)<SUB>30</SUB>>", "56": "<(LITERAL,1,A + 1)<SUB>30</SUB>>", "58": "<(LOCAL,int a: int)<SUB>31</SUB>>", "60": "<(IDENTIFIER,a,int a = 1)<SUB>31</SUB>>", "62": "<(&lt;operator&gt;.lessEqualsThan,a &lt;= A)<SUB>31</SUB>>", "64": "<(IDENTIFIER,A,a &lt;= A)<SUB>31</SUB>>", "66": "<(IDENTIFIER,a,a++)<SUB>31</SUB>>", "68": "<(&lt;operator&gt;.assignment,convert[a] = a)<SUB>32</SUB>>", "70": "<(IDENTIFIER,convert,convert[a] = a)<SUB>32</SUB>>", "72": "<(IDENTIFIER,a,convert[a] = a)<SUB>32</SUB>>", "74": "<(LOCAL,int a: int)<SUB>34</SUB>>", "76": "<(IDENTIFIER,a,int a = 2)<SUB>34</SUB>>", "78": "<(&lt;operator&gt;.lessEqualsThan,a &lt;= A / a)<SUB>34</SUB>>", "80": "<(&lt;operator&gt;.division,A / a)<SUB>34</SUB>>", "82": "<(IDENTIFIER,a,A / a)<SUB>34</SUB>>", "84": "<(IDENTIFIER,a,a++)<SUB>34</SUB>>", "86": "<(LOCAL,int sq: int)<SUB>35</SUB>>", "88": "<(IDENTIFIER,sq,int sq = a * a)<SUB>35</SUB>>", "90": "<(IDENTIFIER,a,a * a)<SUB>35</SUB>>", "92": "<(CONTROL_STRUCTURE,for (int b = sq; Some(b &lt;= A); b += sq),for (int b = sq; Some(b &lt;= A); b += sq))<SUB>36</SUB>>", "94": "<(&lt;operator&gt;.assignment,int b = sq)<SUB>36</SUB>>", "96": "<(IDENTIFIER,sq,int b = sq)<SUB>36</SUB>>", "98": "<(IDENTIFIER,b,b &lt;= A)<SUB>36</SUB>>", "100": "<(&lt;operator&gt;.assignmentPlus,b += sq)<SUB>36</SUB>>", "102": "<(IDENTIFIER,sq,b += sq)<SUB>36</SUB>>", "104": "<(CONTROL_STRUCTURE,while (convert[b] % sq == 0),while (convert[b] % sq == 0))<SUB>37</SUB>>", "106": "<(&lt;operator&gt;.modulo,convert[b] % sq)<SUB>37</SUB>>", "108": "<(IDENTIFIER,convert,convert[b] % sq)<SUB>37</SUB>>", "110": "<(IDENTIFIER,sq,convert[b] % sq)<SUB>37</SUB>>", "112": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "114": "<(&lt;operator&gt;.indexAccess,convert[b])<SUB>38</SUB>>", "116": "<(IDENTIFIER,b,convert[b] /= sq)<SUB>38</SUB>>", "118": "<(LOCAL,int[] prevIndex: int[])<SUB>43</SUB>>", "120": "<(IDENTIFIER,prevIndex,int[] prevIndex = new int[A + 1])<SUB>43</SUB>>", "122": "<(&lt;operator&gt;.addition,A + 1)<SUB>43</SUB>>", "124": "<(LITERAL,1,A + 1)<SUB>43</SUB>>", "126": "<(LOCAL,int i: int)<SUB>44</SUB>>", "128": "<(IDENTIFIER,i,int i = 0)<SUB>44</SUB>>", "130": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= A)<SUB>44</SUB>>", "132": "<(IDENTIFIER,A,i &lt;= A)<SUB>44</SUB>>", "134": "<(IDENTIFIER,i,i++)<SUB>44</SUB>>", "136": "<(&lt;operator&gt;.assignment,prevIndex[i] = -1)<SUB>45</SUB>>", "138": "<(IDENTIFIER,prevIndex,prevIndex[i] = -1)<SUB>45</SUB>>", "140": "<(&lt;operator&gt;.minus,-1)<SUB>45</SUB>>", "142": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; t); c++),for (int c = 0; Some(c &lt; t); c++))<SUB>48</SUB>>", "144": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>48</SUB>>", "146": "<(LITERAL,0,int c = 0)<SUB>48</SUB>>", "148": "<(IDENTIFIER,c,c &lt; t)<SUB>48</SUB>>", "150": "<(&lt;operator&gt;.postIncrement,c++)<SUB>48</SUB>>", "152": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "153": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>49</SUB>>", "155": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>49</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>49</SUB>>", "158": "<(IDENTIFIER,br,readLine())<SUB>49</SUB>>", "160": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>51</SUB>>", "162": "<(parseInt,parseInt(st.nextToken()))<SUB>51</SUB>>", "164": "<(nextToken,nextToken())<SUB>51</SUB>>", "166": "<(LOCAL,int k: int)<SUB>52</SUB>>", "168": "<(IDENTIFIER,k,int k = parseInt(st.nextToken()))<SUB>52</SUB>>", "170": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>52</SUB>>", "172": "<(IDENTIFIER,st,nextToken())<SUB>52</SUB>>", "174": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>54</SUB>>", "176": "<(&lt;operator&gt;.alloc,new int[n])>", "178": "<(LOCAL,int maxA: int)<SUB>55</SUB>>", "180": "<(IDENTIFIER,maxA,int maxA = 0)<SUB>55</SUB>>", "182": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>57</SUB>>", "184": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>57</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>57</SUB>>", "187": "<(IDENTIFIER,br,readLine())<SUB>57</SUB>>", "189": "<(LOCAL,int i: int)<SUB>59</SUB>>", "191": "<(IDENTIFIER,i,int i = 0)<SUB>59</SUB>>", "193": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>59</SUB>>", "195": "<(IDENTIFIER,n,i &lt; n)<SUB>59</SUB>>", "197": "<(IDENTIFIER,i,i++)<SUB>59</SUB>>", "199": "<(&lt;operator&gt;.assignment,a[i] = convert[Integer.parseInt(st.nextToken())])<SUB>74</SUB>>", "201": "<(IDENTIFIER,a,a[i] = convert[Integer.parseInt(st.nextToken())])<SUB>74</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,convert[Integer.parseInt(st.nextToken())])<SUB>74</SUB>>", "205": "<(parseInt,parseInt(st.nextToken()))<SUB>74</SUB>>", "207": "<(nextToken,nextToken())<SUB>74</SUB>>", "209": "<(&lt;operator&gt;.assignment,maxA = Math.max(maxA, a[i]))<SUB>75</SUB>>", "211": "<(max,Math.max(maxA, a[i]))<SUB>75</SUB>>", "213": "<(IDENTIFIER,maxA,Math.max(maxA, a[i]))<SUB>75</SUB>>", "215": "<(IDENTIFIER,a,Math.max(maxA, a[i]))<SUB>75</SUB>>", "217": "<(LOCAL,int[] partitions: int[])<SUB>81</SUB>>", "219": "<(IDENTIFIER,partitions,int[] partitions = new int[k + 1])<SUB>81</SUB>>", "221": "<(&lt;operator&gt;.addition,k + 1)<SUB>81</SUB>>", "223": "<(LITERAL,1,k + 1)<SUB>81</SUB>>", "225": "<(&lt;operator&gt;.assignment,int[] partIndex = new int[k + 1])<SUB>82</SUB>>", "227": "<(&lt;operator&gt;.alloc,new int[k + 1])>", "229": "<(IDENTIFIER,k,k + 1)<SUB>82</SUB>>", "231": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>84</SUB>>", "233": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>84</SUB>>", "235": "<(LITERAL,0,int i = 0)<SUB>84</SUB>>", "237": "<(IDENTIFIER,i,i &lt; n)<SUB>84</SUB>>", "239": "<(&lt;operator&gt;.postIncrement,i++)<SUB>84</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>>", "243": "<(&lt;operator&gt;.assignment,int cur = a[i])<SUB>85</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>85</SUB>>", "247": "<(IDENTIFIER,i,int cur = a[i])<SUB>85</SUB>>", "249": "<(LOCAL,int j: int)<SUB>86</SUB>>", "251": "<(IDENTIFIER,j,int j = k)<SUB>86</SUB>>", "253": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>86</SUB>>", "255": "<(LITERAL,0,j &gt;= 0)<SUB>86</SUB>>", "257": "<(IDENTIFIER,j,j--)<SUB>86</SUB>>", "259": "<(CONTROL_STRUCTURE,if (prevIndex[cur] &gt;= partIndex[j]),if (prevIndex[cur] &gt;= partIndex[j]))<SUB>87</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,prevIndex[cur])<SUB>87</SUB>>", "263": "<(IDENTIFIER,cur,prevIndex[cur] &gt;= partIndex[j])<SUB>87</SUB>>", "265": "<(IDENTIFIER,partIndex,prevIndex[cur] &gt;= partIndex[j])<SUB>87</SUB>>", "267": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>87</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,partitions[j])<SUB>88</SUB>>", "271": "<(IDENTIFIER,j,partitions[j]++)<SUB>88</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,partIndex[j])<SUB>89</SUB>>", "275": "<(IDENTIFIER,j,partIndex[j] = i)<SUB>89</SUB>>", "277": "<(CONTROL_STRUCTURE,if (j &gt; 0 &amp;&amp; (partitions[j - 1] &lt; partitions[j] || partitions[j - 1] == partitions[j] &amp;&amp; partIndex[j - 1] &gt; partIndex[j])),if (j &gt; 0 &amp;&amp; (partitions[j - 1] &lt; partitions[j] || partitions[j - 1] == partitions[j] &amp;&amp; partIndex[j - 1] &gt; partIndex[j])))<SUB>91</SUB>>", "279": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>91</SUB>>", "281": "<(LITERAL,0,j &gt; 0)<SUB>91</SUB>>", "283": "<(&lt;operator&gt;.lessThan,partitions[j - 1] &lt; partitions[j])<SUB>91</SUB>>", "285": "<(IDENTIFIER,partitions,partitions[j - 1] &lt; partitions[j])<SUB>91</SUB>>", "287": "<(IDENTIFIER,j,j - 1)<SUB>91</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,partitions[j])<SUB>91</SUB>>", "291": "<(IDENTIFIER,j,partitions[j - 1] &lt; partitions[j])<SUB>91</SUB>>", "293": "<(&lt;operator&gt;.equals,partitions[j - 1] == partitions[j])<SUB>91</SUB>>", "295": "<(IDENTIFIER,partitions,partitions[j - 1] == partitions[j])<SUB>91</SUB>>", "297": "<(IDENTIFIER,j,j - 1)<SUB>91</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,partitions[j])<SUB>91</SUB>>", "301": "<(IDENTIFIER,j,partitions[j - 1] == partitions[j])<SUB>91</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,partIndex[j - 1])<SUB>91</SUB>>", "305": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>91</SUB>>", "307": "<(LITERAL,1,j - 1)<SUB>91</SUB>>", "309": "<(IDENTIFIER,partIndex,partIndex[j - 1] &gt; partIndex[j])<SUB>91</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>91</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,partitions[j])<SUB>92</SUB>>", "315": "<(IDENTIFIER,j,partitions[j] = partitions[j - 1])<SUB>92</SUB>>", "317": "<(IDENTIFIER,partitions,partitions[j] = partitions[j - 1])<SUB>92</SUB>>", "319": "<(IDENTIFIER,j,j - 1)<SUB>92</SUB>>", "321": "<(&lt;operator&gt;.assignment,partIndex[j] = partIndex[j - 1])<SUB>93</SUB>>", "323": "<(IDENTIFIER,partIndex,partIndex[j] = partIndex[j - 1])<SUB>93</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,partIndex[j - 1])<SUB>93</SUB>>", "327": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>93</SUB>>", "329": "<(LITERAL,1,j - 1)<SUB>93</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,prevIndex[cur])<SUB>96</SUB>>", "333": "<(IDENTIFIER,cur,prevIndex[cur] = i)<SUB>96</SUB>>", "335": "<(println,System.out.println(partitions[k] + 1))<SUB>99</SUB>>", "337": "<(IDENTIFIER,System,System.out.println(partitions[k] + 1))<SUB>99</SUB>>", "339": "<(&lt;operator&gt;.addition,partitions[k] + 1)<SUB>99</SUB>>", "341": "<(IDENTIFIER,partitions,partitions[k] + 1)<SUB>99</SUB>>", "343": "<(LITERAL,1,partitions[k] + 1)<SUB>99</SUB>>", "345": "<(LOCAL,int i: int)<SUB>101</SUB>>", "347": "<(IDENTIFIER,i,int i = 0)<SUB>101</SUB>>", "349": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>101</SUB>>", "351": "<(IDENTIFIER,n,i &lt; n)<SUB>101</SUB>>", "353": "<(IDENTIFIER,i,i++)<SUB>101</SUB>>", "355": "<(LOCAL,int cur: int)<SUB>102</SUB>>", "357": "<(IDENTIFIER,cur,int cur = a[i])<SUB>102</SUB>>", "359": "<(IDENTIFIER,a,int cur = a[i])<SUB>102</SUB>>", "361": "<(&lt;operator&gt;.assignment,prevIndex[cur] = -1)<SUB>103</SUB>>", "363": "<(IDENTIFIER,prevIndex,prevIndex[cur] = -1)<SUB>103</SUB>>", "365": "<(&lt;operator&gt;.minus,-1)<SUB>103</SUB>>", "367": "<(MODIFIER,PUBLIC)>", "369": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}