{"edges": [["19", "20"], ["19", "21"], ["19", "146"], ["19", "147"], ["19", "148"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "56"], ["21", "59"], ["21", "86"], ["21", "89"], ["21", "118"], ["21", "121"], ["21", "142"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "49"], ["47", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "79"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "99"], ["89", "108"], ["90", "91"], ["90", "98"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["109", "110"], ["109", "117"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "131"], ["121", "133"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["143", "145"], ["22", "29"], ["25", "41"], ["37", "47"], ["44", "53"], ["51", "56"], ["56", "61"], ["86", "96"], ["118", "123"], ["142", "148"], ["24", "22"], ["39", "37"], ["46", "44"], ["53", "51"], ["61", "64"], ["64", "71"], ["64", "86"], ["67", "64"], ["90", "105"], ["90", "115"], ["99", "118"], ["123", "130"], ["126", "136"], ["126", "145"], ["131", "130"], ["133", "131"], ["143", "142"], ["27", "34"], ["30", "25"], ["41", "39"], ["47", "46"], ["70", "82"], ["79", "67"], ["91", "90"], ["100", "99"], ["109", "118"], ["128", "126"], ["134", "138"], ["137", "133"], ["145", "143"], ["29", "27"], ["32", "30"], ["71", "76"], ["74", "70"], ["81", "79"], ["93", "91"], ["102", "100"], ["110", "109"], ["130", "128"], ["136", "134"], ["138", "137"], ["34", "32"], ["76", "74"], ["82", "81"], ["94", "93"], ["103", "102"], ["112", "110"], ["96", "94"], ["105", "103"], ["113", "112"], ["115", "113"], ["19", "24"], ["20", "148"], ["22", "148"], ["27", "148"], ["30", "148"], ["30", "148"], ["30", "148"], ["25", "148"], ["39", "148"], ["37", "148"], ["37", "148"], ["44", "148"], ["47", "148"], ["46", "148"], ["44", "148"], ["44", "148"], ["51", "148"], ["51", "148"], ["56", "148"], ["56", "148"], ["64", "148"], ["64", "148"], ["90", "148"], ["109", "148"], ["109", "148"], ["99", "148"], ["99", "148"], ["118", "148"], ["118", "148"], ["118", "148"], ["123", "148"], ["126", "148"], ["126", "148"], ["126", "148"], ["142", "148"], ["142", "148"], ["137", "148"], ["133", "148"], ["133", "148"], ["131", "148"], ["74", "148"], ["74", "148"], ["70", "148"], ["70", "148"], ["79", "148"], ["81", "148"], ["79", "148"], ["67", "148"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["53", "51"], ["19", "56"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "61"], ["19", "86"], ["51", "86"], ["81", "86"], ["19", "99"], ["86", "118"], ["19", "118"], ["86", "118"], ["112", "118"], ["109", "118"], ["102", "118"], ["99", "118"], ["81", "118"], ["19", "123"], ["133", "142"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["47", "46"], ["19", "46"], ["37", "53"], ["19", "53"], ["61", "64"], ["67", "64"], ["19", "64"], ["53", "64"], ["64", "67"], ["19", "67"], ["74", "70"], ["74", "70"], ["81", "79"], ["81", "79"], ["86", "90"], ["19", "90"], ["19", "109"], ["123", "126"], ["131", "126"], ["19", "126"], ["118", "126"], ["126", "131"], ["19", "131"], ["118", "133"], ["81", "133"], ["19", "133"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["41", "47"], ["19", "47"], ["56", "79"], ["19", "79"], ["118", "137"], ["81", "137"], ["19", "137"], ["39", "74"], ["19", "74"], ["44", "74"], ["51", "81"], ["70", "81"], ["19", "81"], ["86", "93"], ["19", "93"], ["86", "102"], ["93", "102"], ["19", "102"], ["86", "112"], ["93", "112"], ["19", "112"], ["64", "64"], ["64", "81"], ["64", "67"], ["64", "74"], ["64", "76"], ["64", "82"], ["64", "79"], ["64", "71"], ["64", "70"], ["90", "115"], ["90", "113"], ["90", "99"], ["90", "102"], ["90", "103"], ["90", "112"], ["90", "105"], ["90", "100"], ["90", "110"], ["90", "109"], ["126", "136"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "138"], ["126", "126"], ["126", "137"], ["126", "130"], ["126", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>3</SUB>>", "39": "<(parseInt,parseInt(in.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,String[] S: java.lang.String[])<SUB>4</SUB>>", "45": "<(IDENTIFIER,S,String[] S = split(&quot; &quot;))<SUB>4</SUB>>", "47": "<(readLine,readLine())<SUB>4</SUB>>", "49": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] A = new int[n])<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(LOCAL,boolean allOnes: boolean)<SUB>6</SUB>>", "57": "<(IDENTIFIER,allOnes,boolean allOnes = true)<SUB>6</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,A[i] = Integer.parseInt(S[i]))<SUB>8</SUB>>", "75": "<(IDENTIFIER,Integer,Integer.parseInt(S[i]))<SUB>8</SUB>>", "77": "<(IDENTIFIER,S,Integer.parseInt(S[i]))<SUB>8</SUB>>", "79": "<(&lt;operators&gt;.assignmentAnd,allOnes &amp;= A[i] == 1)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.equals,A[i] == 1)<SUB>9</SUB>>", "83": "<(IDENTIFIER,A,A[i] == 1)<SUB>9</SUB>>", "85": "<(LITERAL,1,A[i] == 1)<SUB>9</SUB>>", "87": "<(IDENTIFIER,Arrays,sort(A))<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,if (A[A.length - 1] &gt; 1),if (A[A.length - 1] &gt; 1))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,A[A.length - 1])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.subtraction,A.length - 1)<SUB>12</SUB>>", "95": "<(IDENTIFIER,A,A.length - 1)<SUB>12</SUB>>", "97": "<(LITERAL,1,A.length - 1)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,A[A.length - 1] = 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,A,A[A.length - 1] = 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.fieldAccess,A.length)<SUB>13</SUB>>", "105": "<(FIELD_IDENTIFIER,length,length)<SUB>13</SUB>>", "107": "<(LITERAL,1,A[A.length - 1] = 1)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,A[A.length - 1] = 2)<SUB>15</SUB>>", "111": "<(IDENTIFIER,A,A[A.length - 1] = 2)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,A.length)<SUB>15</SUB>>", "115": "<(FIELD_IDENTIFIER,length,length)<SUB>15</SUB>>", "117": "<(LITERAL,2,A[A.length - 1] = 2)<SUB>15</SUB>>", "119": "<(IDENTIFIER,Arrays,sort(A))<SUB>16</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; A.length); i++),for (int i = 0; Some(i &lt; A.length); i++))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "127": "<(IDENTIFIER,i,i &lt; A.length)<SUB>17</SUB>>", "129": "<(IDENTIFIER,A,i &lt; A.length)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "133": "<(print,System.out.print(A[i] + &quot; &quot;))<SUB>18</SUB>>", "135": "<(IDENTIFIER,System,System.out.print(A[i] + &quot; &quot;))<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.addition,A[i] + &quot; &quot;)<SUB>18</SUB>>", "139": "<(IDENTIFIER,A,A[i] + &quot; &quot;)<SUB>18</SUB>>", "141": "<(LITERAL,&quot; &quot;,A[i] + &quot; &quot;)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "145": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "147": "<(MODIFIER,STATIC)>"}}