{"edges": [["19", "20"], ["19", "21"], ["19", "132"], ["19", "133"], ["19", "134"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "41"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "56"], ["21", "69"], ["21", "82"], ["21", "101"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "96"], ["85", "86"], ["85", "93"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "107"], ["101", "113"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "130"], ["119", "131"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["41", "47"], ["45", "53"], ["51", "58"], ["82", "103"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["47", "45"], ["53", "51"], ["57", "66"], ["57", "71"], ["70", "79"], ["70", "90"], ["84", "82"], ["102", "110"], ["102", "118"], ["107", "134"], ["28", "26"], ["58", "57"], ["63", "68"], ["68", "134"], ["71", "70"], ["76", "81"], ["81", "134"], ["85", "98"], ["96", "84"], ["103", "102"], ["108", "111"], ["111", "107"], ["64", "63"], ["77", "76"], ["86", "93"], ["93", "85"], ["98", "96"], ["110", "108"], ["115", "134"], ["66", "64"], ["79", "77"], ["88", "86"], ["116", "121"], ["119", "115"], ["90", "88"], ["118", "116"], ["121", "128"], ["124", "119"], ["126", "124"], ["128", "126"], ["19", "24"], ["68", "134"], ["81", "134"], ["20", "134"], ["22", "134"], ["25", "134"], ["25", "134"], ["30", "134"], ["37", "134"], ["35", "134"], ["35", "134"], ["41", "134"], ["41", "134"], ["45", "134"], ["45", "134"], ["45", "134"], ["51", "134"], ["53", "134"], ["51", "134"], ["51", "134"], ["58", "134"], ["58", "134"], ["57", "134"], ["57", "134"], ["63", "134"], ["63", "134"], ["119", "134"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["35", "41"], ["19", "41"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["84", "82"], ["84", "82"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["19", "47"], ["47", "53"], ["19", "53"], ["58", "57"], ["58", "57"], ["19", "57"], ["19", "68"], ["71", "70"], ["71", "70"], ["19", "70"], ["19", "81"], ["85", "84"], ["85", "84"], ["96", "84"], ["96", "84"], ["103", "102"], ["103", "102"], ["19", "102"], ["111", "107"], ["30", "58"], ["19", "58"], ["35", "58"], ["19", "63"], ["58", "71"], ["19", "71"], ["58", "71"], ["19", "76"], ["86", "85"], ["86", "85"], ["93", "85"], ["93", "85"], ["86", "96"], ["19", "96"], ["98", "96"], ["98", "96"], ["71", "103"], ["19", "103"], ["82", "103"], ["19", "111"], ["88", "86"], ["19", "86"], ["88", "86"], ["90", "93"], ["19", "93"], ["93", "98"], ["19", "98"], ["119", "115"], ["119", "115"], ["119", "115"], ["119", "115"], ["119", "115"], ["41", "88"], ["19", "88"], ["90", "88"], ["90", "88"], ["19", "119"], ["121", "119"], ["121", "119"], ["124", "119"], ["124", "119"], ["103", "119"], ["53", "90"], ["19", "90"], ["98", "121"], ["19", "121"], ["96", "124"], ["19", "124"], ["126", "124"], ["126", "124"], ["121", "126"], ["19", "126"], ["128", "126"], ["19", "128"], ["57", "68"], ["57", "64"], ["57", "66"], ["57", "71"], ["57", "70"], ["57", "63"], ["70", "96"], ["70", "77"], ["70", "98"], ["70", "81"], ["70", "84"], ["70", "102"], ["70", "85"], ["70", "103"], ["70", "76"], ["70", "82"], ["70", "93"], ["70", "90"], ["70", "79"], ["70", "88"], ["70", "86"], ["102", "107"], ["102", "115"], ["102", "116"], ["102", "128"], ["102", "119"], ["102", "121"], ["102", "126"], ["102", "118"], ["102", "110"], ["102", "124"], ["102", "108"], ["102", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,BigInteger bi1: ANY)<SUB>4</SUB>>", "31": "<(IDENTIFIER,bi1,ANY bi1 = nextBigInteger())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextBigInteger())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,ANY bi2 = nextBigInteger())<SUB>5</SUB>>", "37": "<(nextBigInteger,nextBigInteger())<SUB>5</SUB>>", "39": "<(LOCAL,BigInteger i: ANY)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,ANY n = bi2)<SUB>6</SUB>>", "43": "<(IDENTIFIER,bi2,ANY n = bi2)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,ANY i2 = valueOf(1))<SUB>7</SUB>>", "47": "<(valueOf,valueOf(1))<SUB>7</SUB>>", "49": "<(LITERAL,1,valueOf(1))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,ANY sum = valueOf(0))<SUB>8</SUB>>", "53": "<(valueOf,valueOf(0))<SUB>8</SUB>>", "55": "<(LITERAL,0,valueOf(0))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,bi1.compareTo(bi2) &lt; 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,bi1,compareTo(bi2))<SUB>9</SUB>>", "61": "<(LITERAL,0,bi1.compareTo(bi2) &lt; 0)<SUB>9</SUB>>", "63": "<(println,System.out.println(0))<SUB>10</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(0))<SUB>10</SUB>>", "67": "<(LITERAL,0,System.out.println(0))<SUB>10</SUB>>", "69": "<(CONTROL_STRUCTURE,if (bi1.compareTo(bi2) == 0),if (bi1.compareTo(bi2) == 0))<SUB>13</SUB>>", "71": "<(compareTo,compareTo(bi2))<SUB>13</SUB>>", "73": "<(IDENTIFIER,bi2,compareTo(bi2))<SUB>13</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>14</SUB>>", "79": "<(FIELD_IDENTIFIER,out,out)<SUB>14</SUB>>", "81": "<(RETURN,return;,return;)<SUB>15</SUB>>", "83": "<(IDENTIFIER,bi2,bi2 = subtract(n.subtract(BigInteger.valueOf(1))))<SUB>17</SUB>>", "85": "<(divide,divide(BigInteger.valueOf(2)))<SUB>17</SUB>>", "87": "<(IDENTIFIER,n,multiply(n.add(BigInteger.valueOf(1))))<SUB>17</SUB>>", "89": "<(IDENTIFIER,n,add(BigInteger.valueOf(1)))<SUB>17</SUB>>", "91": "<(IDENTIFIER,BigInteger,valueOf(1))<SUB>17</SUB>>", "93": "<(valueOf,valueOf(2))<SUB>17</SUB>>", "95": "<(LITERAL,2,valueOf(2))<SUB>17</SUB>>", "97": "<(IDENTIFIER,n,subtract(BigInteger.valueOf(1)))<SUB>17</SUB>>", "99": "<(IDENTIFIER,BigInteger,valueOf(1))<SUB>17</SUB>>", "101": "<(CONTROL_STRUCTURE,if (bi1.compareTo(bi2) &gt; 0),if (bi1.compareTo(bi2) &gt; 0))<SUB>18</SUB>>", "103": "<(compareTo,compareTo(bi2))<SUB>18</SUB>>", "105": "<(IDENTIFIER,bi2,compareTo(bi2))<SUB>18</SUB>>", "107": "<(println,System.out.println(-1))<SUB>19</SUB>>", "109": "<(IDENTIFIER,System,System.out.println(-1))<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "115": "<(println,println(bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1)))<SUB>21</SUB>>", "117": "<(IDENTIFIER,System,println(bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1)))<SUB>21</SUB>>", "119": "<(bs,bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1))<SUB>21</SUB>>", "121": "<(valueOf,valueOf(0))<SUB>21</SUB>>", "123": "<(LITERAL,0,valueOf(0))<SUB>21</SUB>>", "125": "<(IDENTIFIER,n,add(BigInteger.valueOf(-2)))<SUB>21</SUB>>", "127": "<(IDENTIFIER,BigInteger,valueOf(-2))<SUB>21</SUB>>", "129": "<(LITERAL,2,-2)<SUB>21</SUB>>", "131": "<(IDENTIFIER,bi1,bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1))<SUB>21</SUB>>", "133": "<(MODIFIER,STATIC)>"}}