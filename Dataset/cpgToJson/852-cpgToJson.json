{"edges": [["19", "21"], ["19", "157"], ["19", "158"], ["19", "159"], ["21", "22"], ["21", "23"], ["21", "24"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "4"], ["21", "58"], ["21", "61"], ["21", "62"], ["21", "104"], ["21", "142"], ["25", "26"], ["25", "27"], ["27", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["61", "3"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "93"], ["86", "96"], ["86", "99"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "115"], ["104", "117"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "114"], ["112", "113"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "132"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "131"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "140"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "146"], ["142", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["25", "31"], ["29", "33"], ["33", "40"], ["37", "45"], ["58", "61"], ["61", "64"], ["27", "25"], ["31", "29"], ["39", "37"], ["45", "48"], ["48", "54"], ["48", "60"], ["51", "48"], ["53", "51"], ["60", "58"], ["64", "67"], ["67", "73"], ["67", "106"], ["70", "67"], ["106", "112"], ["109", "123"], ["109", "143"], ["115", "112"], ["143", "149"], ["143", "155"], ["146", "159"], ["40", "39"], ["54", "53"], ["73", "77"], ["73", "70"], ["111", "109"], ["119", "134"], ["147", "146"], ["152", "159"], ["77", "83"], ["112", "111"], ["121", "119"], ["133", "140"], ["133", "115"], ["140", "115"], ["149", "147"], ["153", "152"], ["81", "90"], ["81", "70"], ["122", "121"], ["134", "133"], ["134", "137"], ["137", "133"], ["155", "153"], ["83", "81"], ["88", "93"], ["93", "100"], ["93", "70"], ["96", "93"], ["99", "96"], ["123", "128"], ["126", "122"], ["90", "88"], ["100", "99"], ["128", "126"], ["19", "27"], ["20", "159"], ["25", "159"], ["31", "159"], ["29", "159"], ["29", "159"], ["33", "159"], ["37", "159"], ["39", "159"], ["37", "159"], ["37", "159"], ["58", "159"], ["61", "159"], ["64", "159"], ["67", "159"], ["67", "159"], ["106", "159"], ["109", "159"], ["112", "159"], ["111", "159"], ["109", "159"], ["109", "159"], ["143", "159"], ["143", "159"], ["143", "159"], ["146", "159"], ["122", "159"], ["126", "159"], ["122", "159"], ["121", "159"], ["119", "159"], ["119", "159"], ["134", "159"], ["134", "159"], ["133", "159"], ["133", "159"], ["133", "159"], ["140", "159"], ["115", "159"], ["77", "159"], ["81", "159"], ["81", "159"], ["88", "159"], ["88", "159"], ["93", "159"], ["93", "159"], ["70", "159"], ["99", "159"], ["99", "159"], ["96", "159"], ["53", "159"], ["53", "159"], ["51", "159"], ["83", "159"], ["19", "20"], ["27", "25"], ["31", "29"], ["19", "33"], ["39", "37"], ["19", "58"], ["19", "45"], ["19", "53"], ["58", "61"], ["19", "61"], ["19", "64"], ["19", "106"], ["19", "27"], ["27", "31"], ["19", "31"], ["25", "39"], ["19", "39"], ["45", "48"], ["51", "48"], ["19", "48"], ["25", "48"], ["48", "51"], ["19", "51"], ["64", "67"], ["70", "67"], ["19", "67"], ["48", "67"], ["83", "67"], ["93", "67"], ["67", "70"], ["81", "70"], ["90", "70"], ["19", "70"], ["106", "109"], ["115", "109"], ["19", "109"], ["111", "109"], ["111", "109"], ["19", "115"], ["123", "115"], ["123", "119"], ["123", "119"], ["126", "119"], ["126", "119"], ["19", "119"], ["33", "143"], ["140", "143"], ["19", "143"], ["29", "143"], ["19", "146"], ["25", "40"], ["19", "40"], ["112", "111"], ["19", "111"], ["19", "152"], ["61", "77"], ["19", "77"], ["67", "77"], ["61", "112"], ["126", "112"], ["77", "112"], ["19", "112"], ["123", "121"], ["123", "121"], ["126", "121"], ["126", "121"], ["19", "121"], ["134", "133"], ["134", "133"], ["37", "133"], ["33", "140"], ["19", "140"], ["77", "81"], ["19", "81"], ["83", "81"], ["83", "81"], ["90", "88"], ["90", "88"], ["90", "96"], ["19", "96"], ["19", "99"], ["123", "122"], ["123", "122"], ["126", "122"], ["126", "122"], ["119", "134"], ["19", "134"], ["67", "134"], ["19", "83"], ["67", "83"], ["88", "93"], ["96", "93"], ["19", "93"], ["83", "93"], ["93", "96"], ["112", "123"], ["19", "123"], ["109", "123"], ["123", "126"], ["19", "126"], ["123", "126"], ["19", "90"], ["81", "90"], ["123", "128"], ["19", "128"], ["48", "48"], ["48", "51"], ["48", "54"], ["48", "53"], ["67", "73"], ["67", "67"], ["67", "70"], ["109", "115"], ["109", "122"], ["109", "128"], ["109", "119"], ["109", "121"], ["109", "123"], ["109", "112"], ["109", "134"], ["109", "126"], ["109", "111"], ["109", "109"], ["109", "133"], ["143", "146"], ["143", "149"], ["143", "153"], ["143", "152"], ["143", "147"], ["143", "155"], ["73", "77"], ["73", "81"], ["73", "83"], ["133", "140"], ["81", "93"], ["81", "90"], ["81", "88"], ["134", "137"], ["93", "96"], ["93", "99"], ["93", "93"], ["93", "100"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "23": "<(LOCAL,int k: int)<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "27": "<(nextInt,nextInt())<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>3</SUB>>", "35": "<(LITERAL,0,int count = 0)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,boolean[] isP = new boolean[n + 1])<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.alloc,new boolean[n + 1])>", "41": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n); i++),for (int i = 2; Some(i &lt;= n); i++))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>5</SUB>>", "47": "<(LITERAL,2,int i = 2)<SUB>5</SUB>>", "49": "<(IDENTIFIER,i,i &lt;= n)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,isP[i] = true)<SUB>5</SUB>>", "55": "<(IDENTIFIER,isP,isP[i] = true)<SUB>5</SUB>>", "57": "<(LITERAL,true,isP[i] = true)<SUB>5</SUB>>", "58": "<(&lt;operator&gt;.assignment,ANY primes = new ArrayList&lt;Integer&gt;())<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>6</SUB>>", "3": "<(IDENTIFIER,primes,new ArrayList&lt;Integer&gt;())<SUB>6</SUB>>", "63": "<(LOCAL,int i: int)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,int i = 2)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,i &lt;= n)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,isP[i])<SUB>7</SUB>>", "75": "<(IDENTIFIER,i,if (isP[i]))<SUB>7</SUB>>", "77": "<(add,add(i))<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,add(i))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= Math.sqrt(n))<SUB>10</SUB>>", "83": "<(sqrt,Math.sqrt(n))<SUB>10</SUB>>", "85": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>10</SUB>>", "87": "<(LOCAL,int j: int)<SUB>10</SUB>>", "89": "<(IDENTIFIER,j,int j = 2 * i)<SUB>10</SUB>>", "91": "<(LITERAL,2,2 * i)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>10</SUB>>", "95": "<(IDENTIFIER,n,j &lt;= n)<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,j += i)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.assignment,isP[j] = false)<SUB>10</SUB>>", "101": "<(IDENTIFIER,isP,isP[j] = false)<SUB>10</SUB>>", "103": "<(LITERAL,false,isP[j] = false)<SUB>10</SUB>>", "105": "<(LOCAL,int i: int)<SUB>12</SUB>>", "107": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.lessThan,i &lt; primes.size() - 1)<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.subtraction,primes.size() - 1)<SUB>12</SUB>>", "113": "<(IDENTIFIER,primes,size())<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.assignment,int sum = primes.get(i) + primes.get(i + 1) + 1)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.addition,primes.get(i) + primes.get(i + 1) + 1)<SUB>14</SUB>>", "123": "<(get,get(i))<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,get(i))<SUB>14</SUB>>", "127": "<(IDENTIFIER,primes,get(i + 1))<SUB>14</SUB>>", "129": "<(IDENTIFIER,i,i + 1)<SUB>14</SUB>>", "131": "<(LITERAL,1,primes.get(i) + primes.get(i + 1) + 1)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.logicalAnd,sum &lt;= n &amp;&amp; isP[sum])<SUB>15</SUB>>", "135": "<(IDENTIFIER,sum,sum &lt;= n)<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,isP[sum])<SUB>15</SUB>>", "139": "<(IDENTIFIER,sum,sum &lt;= n &amp;&amp; isP[sum])<SUB>15</SUB>>", "141": "<(IDENTIFIER,count,count++)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.greaterEqualsThan,count &gt;= k)<SUB>17</SUB>>", "145": "<(IDENTIFIER,k,count &gt;= k)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "151": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "155": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}