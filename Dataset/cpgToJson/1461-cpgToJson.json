{"edges": [["21", "22"], ["21", "23"], ["21", "188"], ["21", "189"], ["21", "190"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "60"], ["23", "61"], ["23", "68"], ["23", "69"], ["23", "76"], ["23", "77"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "89"], ["23", "96"], ["23", "140"], ["23", "141"], ["23", "144"], ["23", "183"], ["23", "186"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "108"], ["106", "115"], ["106", "116"], ["106", "125"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["118", "121"], ["118", "122"], ["118", "123"], ["118", "124"], ["125", "126"], ["125", "129"], ["125", "133"], ["126", "127"], ["126", "128"], ["129", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["144", "150"], ["144", "153"], ["144", "155"], ["146", "147"], ["146", "148"], ["148", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "174"], ["157", "158"], ["157", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "173"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "170"], ["164", "171"], ["164", "172"], ["166", "167"], ["166", "168"], ["174", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["177", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "49"], ["46", "57"], ["53", "65"], ["61", "73"], ["69", "81"], ["77", "85"], ["85", "92"], ["89", "98"], ["141", "148"], ["183", "186"], ["186", "190"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["55", "53"], ["63", "61"], ["71", "69"], ["79", "77"], ["91", "89"], ["98", "101"], ["101", "111"], ["101", "141"], ["104", "101"], ["146", "150"], ["150", "159"], ["150", "183"], ["153", "150"], ["29", "36"], ["32", "27"], ["44", "42"], ["49", "48"], ["57", "55"], ["65", "63"], ["73", "71"], ["81", "79"], ["92", "91"], ["108", "118"], ["116", "126"], ["148", "146"], ["31", "29"], ["34", "32"], ["110", "108"], ["118", "116"], ["126", "130"], ["126", "137"], ["157", "180"], ["157", "153"], ["36", "34"], ["111", "110"], ["130", "104"], ["158", "157"], ["158", "166"], ["163", "157"], ["175", "153"], ["135", "104"], ["159", "158"], ["164", "163"], ["177", "175"], ["137", "135"], ["166", "164"], ["180", "177"], ["21", "26"], ["22", "190"], ["24", "190"], ["29", "190"], ["32", "190"], ["32", "190"], ["32", "190"], ["27", "190"], ["38", "190"], ["41", "190"], ["41", "190"], ["46", "190"], ["49", "190"], ["48", "190"], ["46", "190"], ["46", "190"], ["55", "190"], ["53", "190"], ["53", "190"], ["61", "190"], ["63", "190"], ["61", "190"], ["61", "190"], ["69", "190"], ["71", "190"], ["69", "190"], ["69", "190"], ["77", "190"], ["79", "190"], ["79", "190"], ["77", "190"], ["77", "190"], ["85", "190"], ["85", "190"], ["92", "190"], ["91", "190"], ["89", "190"], ["89", "190"], ["98", "190"], ["101", "190"], ["101", "190"], ["141", "190"], ["141", "190"], ["146", "190"], ["146", "190"], ["150", "190"], ["150", "190"], ["183", "190"], ["183", "190"], ["186", "190"], ["186", "190"], ["159", "190"], ["158", "190"], ["157", "190"], ["164", "190"], ["166", "190"], ["164", "190"], ["164", "190"], ["164", "190"], ["164", "190"], ["163", "190"], ["163", "190"], ["157", "190"], ["157", "190"], ["180", "190"], ["177", "190"], ["175", "190"], ["175", "190"], ["153", "190"], ["111", "190"], ["110", "190"], ["108", "190"], ["108", "190"], ["118", "190"], ["118", "190"], ["118", "190"], ["118", "190"], ["116", "190"], ["116", "190"], ["126", "190"], ["126", "190"], ["126", "190"], ["135", "190"], ["137", "190"], ["135", "190"], ["135", "190"], ["130", "190"], ["130", "190"], ["104", "190"], ["177", "190"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["63", "61"], ["63", "61"], ["71", "69"], ["71", "69"], ["79", "77"], ["79", "77"], ["21", "85"], ["92", "89"], ["92", "89"], ["21", "89"], ["89", "141"], ["130", "141"], ["21", "141"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "98"], ["148", "146"], ["41", "183"], ["21", "183"], ["141", "183"], ["175", "183"], ["183", "186"], ["21", "186"], ["21", "29"], ["21", "37"], ["49", "48"], ["21", "48"], ["21", "55"], ["46", "55"], ["55", "63"], ["21", "63"], ["46", "63"], ["63", "71"], ["21", "71"], ["46", "71"], ["71", "79"], ["21", "79"], ["46", "79"], ["92", "91"], ["92", "91"], ["21", "91"], ["98", "101"], ["104", "101"], ["21", "101"], ["101", "104"], ["21", "104"], ["110", "108"], ["110", "108"], ["118", "116"], ["118", "116"], ["118", "116"], ["118", "116"], ["118", "116"], ["118", "116"], ["146", "150"], ["153", "150"], ["21", "150"], ["21", "153"], ["150", "153"], ["29", "32"], ["21", "32"], ["27", "49"], ["21", "49"], ["53", "92"], ["21", "92"], ["21", "148"], ["85", "110"], ["135", "110"], ["21", "110"], ["89", "110"], ["130", "110"], ["21", "118"], ["108", "118"], ["92", "118"], ["69", "118"], ["61", "118"], ["77", "118"], ["126", "118"], ["116", "126"], ["21", "126"], ["118", "126"], ["118", "130"], ["21", "130"], ["158", "157"], ["158", "157"], ["163", "157"], ["163", "157"], ["177", "175"], ["177", "175"], ["177", "175"], ["85", "111"], ["135", "111"], ["21", "111"], ["89", "111"], ["130", "111"], ["118", "135"], ["21", "135"], ["21", "158"], ["89", "158"], ["130", "158"], ["150", "158"], ["164", "163"], ["164", "163"], ["164", "163"], ["164", "163"], ["164", "163"], ["164", "163"], ["21", "163"], ["21", "159"], ["89", "159"], ["130", "159"], ["150", "159"], ["118", "164"], ["21", "164"], ["150", "164"], ["92", "164"], ["118", "164"], ["69", "164"], ["118", "164"], ["61", "164"], ["118", "164"], ["77", "164"], ["163", "164"], ["126", "164"], ["21", "177"], ["141", "177"], ["175", "177"], ["150", "177"], ["118", "137"], ["21", "137"], ["21", "166"], ["150", "166"], ["21", "180"], ["150", "180"], ["101", "116"], ["101", "104"], ["101", "101"], ["101", "126"], ["101", "118"], ["101", "110"], ["101", "108"], ["101", "111"], ["150", "150"], ["150", "153"], ["150", "157"], ["150", "159"], ["150", "158"], ["126", "137"], ["126", "130"], ["126", "135"], ["157", "177"], ["157", "175"], ["157", "180"], ["158", "163"], ["158", "166"], ["158", "164"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(LOCAL,String[] line: java.lang.String[])<SUB>5</SUB>>", "47": "<(IDENTIFIER,line,String[] line = split(&quot; &quot;))<SUB>5</SUB>>", "49": "<(readLine,readLine())<SUB>5</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,long n = Long.valueOf(line[0]))<SUB>6</SUB>>", "55": "<(valueOf,Long.valueOf(line[0]))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,line[0])<SUB>6</SUB>>", "59": "<(LITERAL,0,Long.valueOf(line[0]))<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,long y = Long.valueOf(line[1]))<SUB>7</SUB>>", "63": "<(valueOf,Long.valueOf(line[1]))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,line[1])<SUB>7</SUB>>", "67": "<(LITERAL,1,Long.valueOf(line[1]))<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,long x = Long.valueOf(line[2]))<SUB>8</SUB>>", "71": "<(valueOf,Long.valueOf(line[2]))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,line[2])<SUB>8</SUB>>", "75": "<(LITERAL,2,Long.valueOf(line[2]))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,long c = Long.valueOf(line[3]))<SUB>9</SUB>>", "79": "<(valueOf,Long.valueOf(line[3]))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,line[3])<SUB>9</SUB>>", "83": "<(LITERAL,3,Long.valueOf(line[3]))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,long min = 0)<SUB>11</SUB>>", "87": "<(LITERAL,0,long min = 0)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,long max = n * 2L + 20)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.addition,n * 2L + 20)<SUB>12</SUB>>", "93": "<(IDENTIFIER,n,n * 2L)<SUB>12</SUB>>", "95": "<(LITERAL,20,n * 2L + 20)<SUB>12</SUB>>", "97": "<(LOCAL,int cnt: int)<SUB>13</SUB>>", "99": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.lessThan,cnt &lt; 300)<SUB>13</SUB>>", "103": "<(LITERAL,300,cnt &lt; 300)<SUB>13</SUB>>", "105": "<(IDENTIFIER,cnt,cnt++)<SUB>13</SUB>>", "107": "<(LOCAL,long med: long)<SUB>14</SUB>>", "109": "<(IDENTIFIER,med,long med = (min + max) / 2L)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.addition,min + max)<SUB>14</SUB>>", "113": "<(IDENTIFIER,max,min + max)<SUB>14</SUB>>", "115": "<(LOCAL,long ct: long)<SUB>15</SUB>>", "117": "<(IDENTIFIER,ct,long ct = isok(med, n, x, y, c))<SUB>15</SUB>>", "119": "<(IDENTIFIER,this,isok(med, n, x, y, c))<SUB>15</SUB>>", "121": "<(IDENTIFIER,n,isok(med, n, x, y, c))<SUB>15</SUB>>", "123": "<(IDENTIFIER,y,isok(med, n, x, y, c))<SUB>15</SUB>>", "125": "<(CONTROL_STRUCTURE,if (ct &gt;= c),if (ct &gt;= c))<SUB>16</SUB>>", "127": "<(IDENTIFIER,ct,ct &gt;= c)<SUB>16</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "131": "<(IDENTIFIER,max,max = med)<SUB>17</SUB>>", "133": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,min = med + 1)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.addition,med + 1)<SUB>19</SUB>>", "139": "<(LITERAL,1,med + 1)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.assignment,long lst = max)<SUB>23</SUB>>", "143": "<(IDENTIFIER,max,long lst = max)<SUB>23</SUB>>", "145": "<(LOCAL,long d: long)<SUB>24</SUB>>", "147": "<(IDENTIFIER,d,long d = -2)<SUB>24</SUB>>", "149": "<(LITERAL,2,-2)<SUB>24</SUB>>", "151": "<(IDENTIFIER,d,d &lt;= 2)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,d++)<SUB>24</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.logicalAnd,max + d &gt;= 0 &amp;&amp; isok(max + d, n, x, y, c) &gt;= c)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.addition,max + d)<SUB>25</SUB>>", "161": "<(IDENTIFIER,d,max + d)<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.greaterEqualsThan,isok(max + d, n, x, y, c) &gt;= c)<SUB>25</SUB>>", "165": "<(IDENTIFIER,this,isok(max + d, n, x, y, c))<SUB>25</SUB>>", "167": "<(IDENTIFIER,max,max + d)<SUB>25</SUB>>", "169": "<(IDENTIFIER,n,isok(max + d, n, x, y, c))<SUB>25</SUB>>", "171": "<(IDENTIFIER,y,isok(max + d, n, x, y, c))<SUB>25</SUB>>", "173": "<(IDENTIFIER,c,isok(max + d, n, x, y, c) &gt;= c)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.assignment,lst = Math.min(lst, max + d))<SUB>26</SUB>>", "177": "<(min,Math.min(lst, max + d))<SUB>26</SUB>>", "179": "<(IDENTIFIER,lst,Math.min(lst, max + d))<SUB>26</SUB>>", "181": "<(IDENTIFIER,max,max + d)<SUB>26</SUB>>", "183": "<(println,println(lst))<SUB>30</SUB>>", "185": "<(IDENTIFIER,lst,println(lst))<SUB>30</SUB>>", "187": "<(IDENTIFIER,out,flush())<SUB>31</SUB>>", "189": "<(MODIFIER,STATIC)>"}}