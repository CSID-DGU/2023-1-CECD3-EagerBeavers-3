{"edges": [["21", "22"], ["21", "23"], ["21", "248"], ["21", "249"], ["21", "250"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "46"], ["23", "47"], ["23", "54"], ["23", "55"], ["23", "62"], ["23", "63"], ["23", "67"], ["23", "68"], ["23", "71"], ["23", "72"], ["23", "76"], ["23", "119"], ["23", "120"], ["23", "121"], ["23", "125"], ["23", "6"], ["23", "129"], ["23", "132"], ["23", "133"], ["23", "181"], ["23", "193"], ["23", "235"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "45"], ["42", "43"], ["43", "44"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "85"], ["76", "87"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["94", "100"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "103"], ["101", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["121", "122"], ["121", "123"], ["123", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["129", "130"], ["129", "131"], ["132", "5"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "145"], ["143", "152"], ["143", "171"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["152", "162"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["156", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["163", "164"], ["163", "165"], ["163", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "176"], ["172", "173"], ["172", "175"], ["173", "174"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "186"], ["182", "183"], ["182", "185"], ["183", "184"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["193", "197"], ["193", "200"], ["193", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "211"], ["202", "229"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "215"], ["211", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["221", "222"], ["221", "223"], ["221", "226"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "234"], ["230", "231"], ["230", "233"], ["231", "232"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "245"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["24", "31"], ["27", "43"], ["39", "51"], ["47", "59"], ["55", "65"], ["63", "68"], ["68", "74"], ["72", "78"], ["121", "127"], ["125", "131"], ["129", "132"], ["132", "135"], ["235", "250"], ["26", "24"], ["41", "39"], ["49", "47"], ["57", "55"], ["65", "63"], ["74", "72"], ["78", "83"], ["81", "91"], ["81", "123"], ["85", "83"], ["123", "121"], ["127", "125"], ["131", "129"], ["135", "138"], ["138", "149"], ["138", "183"], ["141", "138"], ["182", "190"], ["182", "194"], ["194", "197"], ["197", "208"], ["197", "238"], ["200", "197"], ["236", "241"], ["239", "235"], ["29", "36"], ["32", "27"], ["42", "41"], ["51", "49"], ["59", "57"], ["83", "81"], ["89", "95"], ["145", "153"], ["183", "182"], ["187", "192"], ["192", "250"], ["204", "212"], ["238", "236"], ["240", "245"], ["245", "239"], ["31", "29"], ["34", "32"], ["43", "42"], ["91", "89"], ["95", "98"], ["95", "105"], ["98", "85"], ["147", "145"], ["153", "158"], ["153", "165"], ["156", "173"], ["172", "177"], ["172", "141"], ["188", "187"], ["206", "204"], ["212", "217"], ["212", "223"], ["215", "231"], ["230", "238"], ["230", "200"], ["241", "240"], ["36", "34"], ["149", "147"], ["158", "156"], ["163", "173"], ["173", "172"], ["177", "183"], ["190", "188"], ["208", "206"], ["217", "215"], ["221", "231"], ["231", "230"], ["103", "109"], ["108", "85"], ["165", "168"], ["168", "163"], ["223", "226"], ["226", "221"], ["105", "103"], ["109", "115"], ["112", "108"], ["113", "112"], ["115", "113"], ["21", "26"], ["192", "250"], ["22", "250"], ["24", "250"], ["29", "250"], ["32", "250"], ["32", "250"], ["32", "250"], ["27", "250"], ["39", "250"], ["41", "250"], ["39", "250"], ["39", "250"], ["49", "250"], ["47", "250"], ["47", "250"], ["57", "250"], ["57", "250"], ["55", "250"], ["55", "250"], ["63", "250"], ["63", "250"], ["63", "250"], ["68", "250"], ["68", "250"], ["74", "250"], ["72", "250"], ["72", "250"], ["83", "250"], ["81", "250"], ["81", "250"], ["121", "250"], ["121", "250"], ["125", "250"], ["125", "250"], ["125", "250"], ["129", "250"], ["132", "250"], ["135", "250"], ["138", "250"], ["138", "250"], ["138", "250"], ["145", "250"], ["145", "250"], ["153", "250"], ["153", "250"], ["163", "250"], ["168", "250"], ["163", "250"], ["163", "250"], ["156", "250"], ["156", "250"], ["172", "250"], ["141", "250"], ["177", "250"], ["177", "250"], ["177", "250"], ["183", "250"], ["182", "250"], ["182", "250"], ["182", "250"], ["187", "250"], ["89", "250"], ["89", "250"], ["95", "250"], ["95", "250"], ["105", "250"], ["103", "250"], ["103", "250"], ["108", "250"], ["112", "250"], ["112", "250"], ["108", "250"], ["108", "250"], ["98", "250"], ["98", "250"], ["85", "250"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["49", "47"], ["49", "47"], ["57", "55"], ["57", "55"], ["65", "63"], ["21", "68"], ["74", "72"], ["123", "121"], ["127", "125"], ["21", "129"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "78"], ["129", "132"], ["21", "132"], ["21", "135"], ["21", "194"], ["197", "235"], ["21", "235"], ["197", "235"], ["21", "29"], ["21", "37"], ["42", "41"], ["21", "41"], ["21", "49"], ["39", "49"], ["49", "57"], ["21", "57"], ["39", "57"], ["47", "65"], ["21", "65"], ["43", "74"], ["21", "74"], ["78", "81"], ["85", "81"], ["21", "81"], ["83", "81"], ["91", "85"], ["21", "85"], ["91", "89"], ["91", "89"], ["21", "123"], ["21", "127"], ["135", "138"], ["141", "138"], ["21", "138"], ["65", "138"], ["138", "141"], ["21", "141"], ["147", "145"], ["147", "145"], ["183", "182"], ["55", "182"], ["172", "182"], ["21", "182"], ["21", "192"], ["194", "197"], ["200", "197"], ["21", "197"], ["125", "197"], ["177", "197"], ["197", "200"], ["21", "200"], ["206", "204"], ["206", "204"], ["197", "239"], ["21", "239"], ["197", "239"], ["29", "32"], ["21", "32"], ["43", "42"], ["72", "83"], ["91", "83"], ["21", "83"], ["132", "183"], ["173", "183"], ["21", "183"], ["21", "187"], ["197", "240"], ["21", "240"], ["197", "245"], ["21", "245"], ["27", "43"], ["21", "43"], ["83", "91"], ["21", "91"], ["81", "91"], ["89", "95"], ["21", "95"], ["68", "98"], ["21", "98"], ["132", "147"], ["173", "147"], ["21", "147"], ["63", "147"], ["163", "147"], ["156", "147"], ["145", "153"], ["21", "153"], ["147", "156"], ["21", "156"], ["63", "156"], ["147", "156"], ["173", "172"], ["55", "172"], ["21", "172"], ["138", "177"], ["21", "177"], ["183", "206"], ["231", "206"], ["21", "206"], ["63", "206"], ["221", "206"], ["215", "206"], ["204", "212"], ["21", "212"], ["206", "215"], ["21", "215"], ["63", "215"], ["206", "215"], ["231", "230"], ["182", "230"], ["21", "230"], ["197", "241"], ["21", "241"], ["105", "103"], ["105", "103"], ["113", "108"], ["113", "108"], ["103", "108"], ["21", "108"], ["147", "163"], ["21", "163"], ["63", "163"], ["147", "163"], ["153", "163"], ["163", "173"], ["156", "173"], ["21", "173"], ["206", "221"], ["21", "221"], ["63", "221"], ["206", "221"], ["226", "221"], ["226", "221"], ["221", "231"], ["215", "231"], ["21", "231"], ["153", "168"], ["21", "168"], ["212", "226"], ["21", "226"], ["95", "105"], ["21", "105"], ["113", "112"], ["113", "112"], ["103", "112"], ["21", "112"], ["21", "113"], ["63", "113"], ["108", "113"], ["81", "81"], ["81", "85"], ["81", "95"], ["81", "91"], ["81", "89"], ["81", "83"], ["138", "145"], ["138", "149"], ["138", "153"], ["138", "173"], ["138", "147"], ["138", "172"], ["182", "188"], ["182", "192"], ["182", "240"], ["182", "197"], ["182", "245"], ["182", "238"], ["182", "187"], ["182", "190"], ["182", "194"], ["182", "239"], ["182", "235"], ["182", "236"], ["182", "241"], ["197", "230"], ["197", "204"], ["197", "206"], ["197", "208"], ["197", "231"], ["197", "212"], ["95", "115"], ["95", "98"], ["95", "113"], ["95", "103"], ["95", "112"], ["95", "108"], ["95", "105"], ["95", "109"], ["153", "163"], ["153", "168"], ["153", "158"], ["153", "165"], ["153", "156"], ["172", "138"], ["172", "141"], ["172", "177"], ["212", "215"], ["212", "226"], ["212", "223"], ["212", "221"], ["212", "217"], ["230", "197"], ["230", "200"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] parts = split(&quot;[ ]+&quot;))<SUB>5</SUB>>", "41": "<(split,split(&quot;[ ]+&quot;))<SUB>5</SUB>>", "43": "<(readLine,readLine())<SUB>5</SUB>>", "45": "<(LITERAL,&quot;[ ]+&quot;,split(&quot;[ ]+&quot;))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int N = Integer.parseInt(parts[0]))<SUB>6</SUB>>", "49": "<(parseInt,Integer.parseInt(parts[0]))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,parts[0])<SUB>6</SUB>>", "53": "<(LITERAL,0,Integer.parseInt(parts[0]))<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int K = Integer.parseInt(parts[1]))<SUB>7</SUB>>", "57": "<(parseInt,Integer.parseInt(parts[1]))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,parts[1])<SUB>7</SUB>>", "61": "<(LITERAL,1,Integer.parseInt(parts[1]))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] nums = new int[N])<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[N])>", "67": "<(LOCAL,int idx: int)<SUB>10</SUB>>", "69": "<(IDENTIFIER,idx,int idx = 0)<SUB>10</SUB>>", "71": "<(LOCAL,String line: java.lang.String)<SUB>12</SUB>>", "73": "<(IDENTIFIER,line,String line = readLine())<SUB>12</SUB>>", "75": "<(IDENTIFIER,bf,readLine())<SUB>12</SUB>>", "77": "<(LOCAL,int i: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; line.length())<SUB>13</SUB>>", "83": "<(length,line.length())<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,char c = line.charAt(i))<SUB>14</SUB>>", "91": "<(charAt,line.charAt(i))<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,line.charAt(i))<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.equals,c == ' ')<SUB>15</SUB>>", "97": "<(LITERAL,' ',c == ' ')<SUB>15</SUB>>", "99": "<(IDENTIFIER,idx,idx++)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.assignment,int d = c - '0')<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.subtraction,c - '0')<SUB>17</SUB>>", "107": "<(LITERAL,'0',c - '0')<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,nums[idx])<SUB>18</SUB>>", "111": "<(IDENTIFIER,idx,nums[idx] = 10 * nums[idx] + d)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.multiplication,10 * nums[idx])<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,nums[idx])<SUB>18</SUB>>", "117": "<(IDENTIFIER,idx,10 * nums[idx])<SUB>18</SUB>>", "119": "<(LOCAL,int from: int)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignment,int from = -1)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.assignment,int to = -1)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "6": "<(LOCAL,HashMap&lt;Integer, Integer&gt; count: ANY)<SUB>23</SUB>>", "130": "<(IDENTIFIER,count,ANY count = new HashMap&lt;Integer, Integer&gt;())<SUB>23</SUB>>", "132": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>23</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "137": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "139": "<(IDENTIFIER,i,i &lt; N)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.assignment,Integer q = get(nums[i]))<SUB>25</SUB>>", "147": "<(get,get(nums[i]))<SUB>25</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>25</SUB>>", "151": "<(IDENTIFIER,i,get(nums[i]))<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.equals,q == null)<SUB>27</SUB>>", "155": "<(LITERAL,null,q == null)<SUB>27</SUB>>", "157": "<(IDENTIFIER,count,put(nums[i], 1))<SUB>27</SUB>>", "159": "<(IDENTIFIER,nums,put(nums[i], 1))<SUB>27</SUB>>", "161": "<(LITERAL,1,put(nums[i], 1))<SUB>27</SUB>>", "163": "<(put,put(nums[i], q + 1))<SUB>28</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>28</SUB>>", "167": "<(IDENTIFIER,i,put(nums[i], q + 1))<SUB>28</SUB>>", "169": "<(IDENTIFIER,q,q + 1)<SUB>28</SUB>>", "171": "<(CONTROL_STRUCTURE,if (count.size() == K),if (count.size() == K))<SUB>30</SUB>>", "173": "<(size,size())<SUB>30</SUB>>", "175": "<(IDENTIFIER,K,count.size() == K)<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.assignment,to = i)<SUB>31</SUB>>", "179": "<(IDENTIFIER,i,to = i)<SUB>31</SUB>>", "181": "<(CONTROL_STRUCTURE,if (count.size() &lt; K),if (count.size() &lt; K))<SUB>36</SUB>>", "183": "<(size,size())<SUB>36</SUB>>", "185": "<(IDENTIFIER,K,count.size() &lt; K)<SUB>36</SUB>>", "187": "<(println,System.out.println(&quot;-1 -1&quot;))<SUB>37</SUB>>", "189": "<(IDENTIFIER,System,System.out.println(&quot;-1 -1&quot;))<SUB>37</SUB>>", "191": "<(LITERAL,&quot;-1 -1&quot;,System.out.println(&quot;-1 -1&quot;))<SUB>37</SUB>>", "193": "<(CONTROL_STRUCTURE,for (from = 0; Some(from &lt;= to); from++),for (from = 0; Some(from &lt;= to); from++))<SUB>41</SUB>>", "195": "<(IDENTIFIER,from,from = 0)<SUB>41</SUB>>", "197": "<(&lt;operator&gt;.lessEqualsThan,from &lt;= to)<SUB>41</SUB>>", "199": "<(IDENTIFIER,to,from &lt;= to)<SUB>41</SUB>>", "201": "<(IDENTIFIER,from,from++)<SUB>41</SUB>>", "203": "<(LOCAL,Integer q: java.lang.Integer)<SUB>42</SUB>>", "205": "<(IDENTIFIER,q,Integer q = get(nums[from]))<SUB>42</SUB>>", "207": "<(IDENTIFIER,count,get(nums[from]))<SUB>42</SUB>>", "209": "<(IDENTIFIER,nums,get(nums[from]))<SUB>42</SUB>>", "211": "<(CONTROL_STRUCTURE,if (q == 1),if (q == 1))<SUB>44</SUB>>", "213": "<(IDENTIFIER,q,q == 1)<SUB>44</SUB>>", "215": "<(remove,remove(nums[from]))<SUB>44</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,nums[from])<SUB>44</SUB>>", "219": "<(IDENTIFIER,from,remove(nums[from]))<SUB>44</SUB>>", "221": "<(put,put(nums[from], q - 1))<SUB>45</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,nums[from])<SUB>45</SUB>>", "225": "<(IDENTIFIER,from,put(nums[from], q - 1))<SUB>45</SUB>>", "227": "<(IDENTIFIER,q,q - 1)<SUB>45</SUB>>", "229": "<(CONTROL_STRUCTURE,if (count.size() &lt; K),if (count.size() &lt; K))<SUB>47</SUB>>", "231": "<(size,size())<SUB>47</SUB>>", "233": "<(IDENTIFIER,K,count.size() &lt; K)<SUB>47</SUB>>", "235": "<(println,System.out.println((from + 1) + &quot; &quot; + (to + 1)))<SUB>50</SUB>>", "237": "<(IDENTIFIER,System,System.out.println((from + 1) + &quot; &quot; + (to + 1)))<SUB>50</SUB>>", "239": "<(&lt;operator&gt;.addition,(from + 1) + &quot; &quot; + (to + 1))<SUB>50</SUB>>", "241": "<(&lt;operator&gt;.addition,from + 1)<SUB>50</SUB>>", "243": "<(LITERAL,1,from + 1)<SUB>50</SUB>>", "245": "<(&lt;operator&gt;.addition,to + 1)<SUB>50</SUB>>", "247": "<(LITERAL,1,to + 1)<SUB>50</SUB>>", "249": "<(MODIFIER,STATIC)>"}}