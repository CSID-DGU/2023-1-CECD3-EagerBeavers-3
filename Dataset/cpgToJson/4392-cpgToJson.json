{"edges": [["19", "20"], ["19", "21"], ["19", "218"], ["19", "219"], ["19", "220"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "40"], ["21", "47"], ["21", "85"], ["21", "86"], ["21", "92"], ["21", "93"], ["21", "96"], ["21", "211"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "65"], ["57", "66"], ["57", "72"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "64"], ["62", "63"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "71"], ["69", "70"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["86", "87"], ["86", "88"], ["88", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["106", "111"], ["106", "152"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "126"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["152", "153"], ["152", "154"], ["152", "157"], ["152", "162"], ["152", "167"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "194"], ["174", "175"], ["174", "191"], ["175", "176"], ["175", "183"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["183", "184"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "204"], ["195", "196"], ["195", "203"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["206", "209"], ["206", "210"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["22", "25"], ["25", "28"], ["26", "33"], ["31", "37"], ["35", "43"], ["40", "49"], ["86", "93"], ["93", "98"], ["211", "220"], ["24", "22"], ["28", "26"], ["33", "31"], ["37", "35"], ["42", "40"], ["49", "52"], ["52", "62"], ["52", "89"], ["55", "52"], ["88", "86"], ["98", "101"], ["101", "107"], ["101", "214"], ["104", "101"], ["212", "215"], ["215", "211"], ["43", "42"], ["59", "69"], ["66", "74"], ["72", "55"], ["89", "88"], ["107", "113"], ["214", "212"], ["61", "59"], ["68", "66"], ["73", "80"], ["78", "72"], ["113", "118"], ["116", "130"], ["116", "154"], ["121", "118"], ["154", "159"], ["157", "170"], ["157", "104"], ["162", "159"], ["62", "61"], ["69", "68"], ["74", "73"], ["79", "78"], ["118", "116"], ["123", "121"], ["127", "136"], ["127", "123"], ["159", "157"], ["164", "162"], ["168", "179"], ["80", "79"], ["128", "127"], ["136", "139"], ["139", "146"], ["139", "123"], ["142", "139"], ["144", "142"], ["170", "168"], ["174", "200"], ["174", "164"], ["130", "128"], ["145", "150"], ["150", "144"], ["175", "174"], ["175", "191"], ["191", "174"], ["195", "206"], ["204", "164"], ["146", "145"], ["176", "175"], ["176", "188"], ["183", "175"], ["196", "195"], ["206", "204"], ["177", "176"], ["184", "183"], ["198", "196"], ["179", "177"], ["186", "184"], ["200", "198"], ["188", "186"], ["19", "24"], ["20", "220"], ["22", "220"], ["25", "220"], ["26", "220"], ["33", "220"], ["31", "220"], ["31", "220"], ["35", "220"], ["35", "220"], ["35", "220"], ["40", "220"], ["40", "220"], ["40", "220"], ["49", "220"], ["52", "220"], ["52", "220"], ["52", "220"], ["86", "220"], ["88", "220"], ["86", "220"], ["86", "220"], ["93", "220"], ["98", "220"], ["101", "220"], ["101", "220"], ["101", "220"], ["211", "220"], ["215", "220"], ["211", "220"], ["211", "220"], ["107", "220"], ["107", "220"], ["154", "220"], ["157", "220"], ["157", "220"], ["157", "220"], ["104", "220"], ["168", "220"], ["168", "220"], ["168", "220"], ["176", "220"], ["175", "220"], ["183", "220"], ["175", "220"], ["174", "220"], ["191", "220"], ["174", "220"], ["174", "220"], ["195", "220"], ["195", "220"], ["206", "220"], ["204", "220"], ["204", "220"], ["164", "220"], ["162", "220"], ["162", "220"], ["127", "220"], ["127", "220"], ["136", "220"], ["139", "220"], ["139", "220"], ["123", "220"], ["121", "220"], ["121", "220"], ["144", "220"], ["144", "220"], ["144", "220"], ["142", "220"], ["59", "220"], ["66", "220"], ["69", "220"], ["68", "220"], ["66", "220"], ["66", "220"], ["72", "220"], ["78", "220"], ["72", "220"], ["72", "220"], ["55", "220"], ["170", "220"], ["206", "220"], ["19", "20"], ["19", "22"], ["28", "26"], ["33", "31"], ["37", "35"], ["42", "40"], ["42", "40"], ["88", "86"], ["19", "93"], ["22", "25"], ["19", "25"], ["19", "49"], ["19", "98"], ["215", "211"], ["215", "211"], ["25", "28"], ["19", "28"], ["28", "33"], ["19", "33"], ["26", "37"], ["19", "37"], ["43", "42"], ["43", "42"], ["19", "42"], ["49", "52"], ["55", "52"], ["19", "52"], ["31", "52"], ["52", "55"], ["19", "55"], ["61", "59"], ["61", "59"], ["68", "66"], ["68", "66"], ["78", "72"], ["19", "72"], ["89", "88"], ["89", "88"], ["98", "101"], ["104", "101"], ["19", "101"], ["89", "101"], ["159", "101"], ["19", "104"], ["101", "104"], ["101", "107"], ["19", "107"], ["93", "215"], ["204", "215"], ["19", "215"], ["19", "43"], ["37", "43"], ["19", "89"], ["42", "89"], ["19", "113"], ["123", "121"], ["123", "121"], ["19", "154"], ["164", "162"], ["164", "162"], ["62", "61"], ["19", "61"], ["69", "68"], ["19", "68"], ["19", "78"], ["113", "116"], ["121", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["128", "121"], ["19", "121"], ["154", "157"], ["162", "157"], ["19", "157"], ["159", "157"], ["159", "157"], ["177", "162"], ["186", "162"], ["206", "162"], ["19", "162"], ["170", "168"], ["170", "168"], ["33", "62"], ["69", "62"], ["19", "62"], ["62", "69"], ["19", "69"], ["19", "118"], ["101", "118"], ["139", "118"], ["19", "123"], ["130", "123"], ["128", "127"], ["128", "127"], ["19", "127"], ["19", "136"], ["150", "144"], ["19", "159"], ["118", "159"], ["19", "164"], ["179", "164"], ["188", "164"], ["206", "164"], ["116", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["136", "139"], ["142", "139"], ["19", "139"], ["118", "139"], ["139", "142"], ["19", "142"], ["19", "170"], ["157", "170"], ["175", "174"], ["175", "174"], ["191", "174"], ["191", "174"], ["19", "195"], ["206", "204"], ["206", "204"], ["206", "204"], ["206", "204"], ["19", "130"], ["107", "130"], ["123", "130"], ["19", "150"], ["176", "175"], ["176", "175"], ["183", "175"], ["168", "191"], ["19", "191"], ["93", "204"], ["19", "204"], ["177", "176"], ["177", "176"], ["19", "176"], ["86", "183"], ["195", "183"], ["19", "206"], ["198", "206"], ["200", "206"], ["168", "206"], ["191", "206"], ["170", "177"], ["19", "177"], ["179", "177"], ["179", "177"], ["177", "198"], ["186", "198"], ["19", "198"], ["200", "198"], ["200", "198"], ["19", "179"], ["107", "179"], ["164", "179"], ["123", "179"], ["177", "186"], ["19", "186"], ["188", "186"], ["188", "186"], ["19", "200"], ["179", "200"], ["188", "200"], ["19", "188"], ["179", "188"], ["52", "68"], ["52", "73"], ["52", "52"], ["52", "69"], ["52", "74"], ["52", "59"], ["52", "79"], ["52", "80"], ["52", "61"], ["52", "66"], ["52", "72"], ["52", "55"], ["52", "78"], ["52", "62"], ["101", "107"], ["101", "113"], ["101", "154"], ["101", "104"], ["101", "101"], ["101", "118"], ["101", "116"], ["101", "157"], ["101", "159"], ["116", "128"], ["116", "121"], ["116", "130"], ["116", "118"], ["116", "127"], ["116", "116"], ["116", "123"], ["157", "179"], ["157", "162"], ["157", "168"], ["157", "170"], ["157", "174"], ["157", "164"], ["157", "157"], ["157", "159"], ["157", "176"], ["157", "177"], ["157", "175"], ["127", "136"], ["127", "139"], ["139", "145"], ["139", "146"], ["139", "150"], ["139", "144"], ["139", "139"], ["139", "142"], ["174", "196"], ["174", "198"], ["174", "204"], ["174", "206"], ["174", "195"], ["174", "200"], ["175", "191"], ["176", "188"], ["176", "184"], ["176", "186"], ["176", "183"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader())<SUB>2</SUB>>", "27": "<(IDENTIFIER,n,n = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "33": "<(nextInt,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,adj = new boolean[n][n])<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "39": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "41": "<(IDENTIFIER,dp,dp = new long[1 &lt;&lt; n][n])<SUB>12</SUB>>", "43": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "45": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>13</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "53": "<(IDENTIFIER,i,i &lt; m)<SUB>13</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "59": "<(&lt;operator&gt;.assignment,int f = in.nextInt() - 1)<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>14</SUB>>", "63": "<(IDENTIFIER,in,nextInt())<SUB>14</SUB>>", "65": "<(LOCAL,int t: int)<SUB>15</SUB>>", "67": "<(IDENTIFIER,t,int t = in.nextInt() - 1)<SUB>15</SUB>>", "69": "<(nextInt,nextInt())<SUB>15</SUB>>", "71": "<(LITERAL,1,in.nextInt() - 1)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,adj[f][t])<SUB>16</SUB>>", "75": "<(IDENTIFIER,adj,adj[f][t] = adj[t][f] = true)<SUB>16</SUB>>", "77": "<(IDENTIFIER,t,adj[f][t] = adj[t][f] = true)<SUB>16</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,adj[t][f])<SUB>16</SUB>>", "81": "<(IDENTIFIER,adj,adj[t][f] = true)<SUB>16</SUB>>", "83": "<(IDENTIFIER,f,adj[t][f] = true)<SUB>16</SUB>>", "85": "<(LOCAL,boolean[] v: boolean[])<SUB>19</SUB>>", "87": "<(IDENTIFIER,v,boolean[] v = new boolean[1 &lt;&lt; n])<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "91": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "93": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>20</SUB>>", "95": "<(LITERAL,0,long res = 0)<SUB>20</SUB>>", "97": "<(LOCAL,int f: int)<SUB>21</SUB>>", "99": "<(IDENTIFIER,f,int f = 0)<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.lessThan,f &lt; n)<SUB>21</SUB>>", "103": "<(IDENTIFIER,n,f &lt; n)<SUB>21</SUB>>", "105": "<(IDENTIFIER,f,f++)<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.assignment,first = f)<SUB>22</SUB>>", "109": "<(IDENTIFIER,f,first = f)<SUB>22</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i += (1 &lt;&lt; first)),for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i += (1 &lt;&lt; first)))<SUB>24</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "115": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "117": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; n)<SUB>24</SUB>>", "119": "<(LITERAL,1,1 &lt;&lt; n)<SUB>24</SUB>>", "121": "<(&lt;operator&gt;.assignmentPlus,i += 1 &lt;&lt; first)<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; first)<SUB>24</SUB>>", "125": "<(IDENTIFIER,first,1 &lt;&lt; first)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; first)) == 0)<SUB>25</SUB>>", "129": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; first))<SUB>25</SUB>>", "131": "<(LITERAL,1,1 &lt;&lt; first)<SUB>25</SUB>>", "133": "<(LITERAL,0,(i &amp; (1 &lt;&lt; first)) == 0)<SUB>25</SUB>>", "135": "<(LOCAL,int j: int)<SUB>26</SUB>>", "137": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "139": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>26</SUB>>", "141": "<(IDENTIFIER,n,j &lt; n)<SUB>26</SUB>>", "143": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>27</SUB>>", "147": "<(IDENTIFIER,dp,dp[i][j] = -1)<SUB>27</SUB>>", "149": "<(IDENTIFIER,j,dp[i][j] = -1)<SUB>27</SUB>>", "151": "<(LITERAL,1,-1)<SUB>27</SUB>>", "153": "<(LOCAL,int i: int)<SUB>29</SUB>>", "155": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "157": "<(&lt;operator&gt;.lessThan,i &lt; 1 &lt;&lt; n)<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>29</SUB>>", "161": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>29</SUB>>", "163": "<(IDENTIFIER,i,i += 1 &lt;&lt; first)<SUB>29</SUB>>", "165": "<(LITERAL,1,1 &lt;&lt; first)<SUB>29</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "169": "<(IDENTIFIER,cnt,cnt = Integer.bitCount(i))<SUB>30</SUB>>", "171": "<(IDENTIFIER,Integer,Integer.bitCount(i))<SUB>30</SUB>>", "173": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; first)) == 0 &amp;&amp; !v[i | (1 &lt;&lt; first)] &amp;&amp; cnt &gt; 1),if ((i &amp; (1 &lt;&lt; first)) == 0 &amp;&amp; !v[i | (1 &lt;&lt; first)] &amp;&amp; cnt &gt; 1))<SUB>31</SUB>>", "175": "<(&lt;operator&gt;.logicalAnd,(i &amp; (1 &lt;&lt; first)) == 0 &amp;&amp; !v[i | (1 &lt;&lt; first)])<SUB>31</SUB>>", "177": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; first))<SUB>31</SUB>>", "179": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; first)<SUB>31</SUB>>", "181": "<(IDENTIFIER,first,1 &lt;&lt; first)<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.logicalNot,!v[i | (1 &lt;&lt; first)])<SUB>31</SUB>>", "185": "<(IDENTIFIER,v,!v[i | (1 &lt;&lt; first)])<SUB>31</SUB>>", "187": "<(IDENTIFIER,i,i | (1 &lt;&lt; first))<SUB>31</SUB>>", "189": "<(LITERAL,1,1 &lt;&lt; first)<SUB>31</SUB>>", "191": "<(&lt;operator&gt;.greaterThan,cnt &gt; 1)<SUB>31</SUB>>", "193": "<(LITERAL,1,cnt &gt; 1)<SUB>31</SUB>>", "195": "<(&lt;operator&gt;.assignment,v[i | (1 &lt;&lt; first)] = true)<SUB>32</SUB>>", "197": "<(IDENTIFIER,v,v[i | (1 &lt;&lt; first)] = true)<SUB>32</SUB>>", "199": "<(IDENTIFIER,i,i | (1 &lt;&lt; first))<SUB>32</SUB>>", "201": "<(LITERAL,1,1 &lt;&lt; first)<SUB>32</SUB>>", "203": "<(LITERAL,true,v[i | (1 &lt;&lt; first)] = true)<SUB>32</SUB>>", "205": "<(IDENTIFIER,res,res += solve(i, first, cnt))<SUB>33</SUB>>", "207": "<(IDENTIFIER,this,solve(i, first, cnt))<SUB>33</SUB>>", "209": "<(IDENTIFIER,first,solve(i, first, cnt))<SUB>33</SUB>>", "211": "<(println,System.out.println(res / 2))<SUB>37</SUB>>", "213": "<(IDENTIFIER,System,System.out.println(res / 2))<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.division,res / 2)<SUB>37</SUB>>", "217": "<(LITERAL,2,res / 2)<SUB>37</SUB>>", "219": "<(MODIFIER,STATIC)>"}}