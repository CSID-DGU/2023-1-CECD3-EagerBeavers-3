{"edges": [["19", "20"], ["19", "21"], ["19", "230"], ["19", "231"], ["19", "232"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "90"], ["21", "91"], ["21", "96"], ["21", "97"], ["21", "100"], ["21", "223"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["55", "77"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "112"], ["110", "117"], ["110", "118"], ["110", "123"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["123", "135"], ["124", "125"], ["124", "126"], ["127", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "149"], ["141", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["151", "157"], ["151", "205"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["165", "174"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "193"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "215"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["85", "93"], ["91", "97"], ["97", "102"], ["223", "232"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "87"], ["53", "50"], ["87", "85"], ["93", "91"], ["102", "105"], ["105", "114"], ["105", "226"], ["108", "105"], ["224", "227"], ["227", "223"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "79"], ["77", "53"], ["112", "120"], ["118", "124"], ["226", "224"], ["59", "57"], ["66", "64"], ["71", "70"], ["78", "77"], ["114", "112"], ["120", "118"], ["124", "130"], ["124", "137"], ["60", "59"], ["67", "66"], ["72", "71"], ["79", "78"], ["128", "108"], ["129", "128"], ["137", "143"], ["137", "108"], ["130", "129"], ["143", "146"], ["146", "153"], ["146", "108"], ["149", "146"], ["153", "149"], ["153", "161"], ["158", "171"], ["158", "207"], ["206", "219"], ["206", "149"], ["159", "158"], ["167", "176"], ["207", "206"], ["207", "211"], ["210", "206"], ["216", "149"], ["161", "159"], ["169", "167"], ["176", "179"], ["179", "188"], ["179", "207"], ["182", "179"], ["211", "210"], ["218", "216"], ["171", "169"], ["219", "218"], ["186", "196"], ["186", "182"], ["187", "186"], ["194", "182"], ["188", "187"], ["195", "201"], ["200", "194"], ["196", "195"], ["201", "200"], ["19", "24"], ["20", "232"], ["22", "232"], ["25", "232"], ["25", "232"], ["30", "232"], ["37", "232"], ["35", "232"], ["35", "232"], ["40", "232"], ["40", "232"], ["40", "232"], ["47", "232"], ["50", "232"], ["50", "232"], ["50", "232"], ["85", "232"], ["85", "232"], ["91", "232"], ["93", "232"], ["91", "232"], ["91", "232"], ["97", "232"], ["102", "232"], ["105", "232"], ["105", "232"], ["105", "232"], ["223", "232"], ["227", "232"], ["223", "232"], ["223", "232"], ["112", "232"], ["112", "232"], ["118", "232"], ["118", "232"], ["118", "232"], ["124", "232"], ["124", "232"], ["137", "232"], ["137", "232"], ["143", "232"], ["146", "232"], ["146", "232"], ["146", "232"], ["153", "232"], ["153", "232"], ["159", "232"], ["158", "232"], ["158", "232"], ["167", "232"], ["169", "232"], ["167", "232"], ["167", "232"], ["176", "232"], ["179", "232"], ["179", "232"], ["207", "232"], ["206", "232"], ["206", "232"], ["206", "232"], ["216", "232"], ["216", "232"], ["186", "232"], ["186", "232"], ["194", "232"], ["194", "232"], ["194", "232"], ["182", "232"], ["149", "232"], ["128", "232"], ["128", "232"], ["108", "232"], ["57", "232"], ["57", "232"], ["64", "232"], ["67", "232"], ["66", "232"], ["64", "232"], ["64", "232"], ["70", "232"], ["70", "232"], ["77", "232"], ["77", "232"], ["53", "232"], ["120", "232"], ["114", "232"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["87", "85"], ["87", "85"], ["93", "91"], ["93", "91"], ["19", "97"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "102"], ["227", "223"], ["227", "223"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["19", "77"], ["19", "87"], ["42", "87"], ["85", "93"], ["19", "93"], ["87", "93"], ["102", "105"], ["108", "105"], ["19", "105"], ["93", "105"], ["120", "108"], ["159", "108"], ["169", "108"], ["19", "108"], ["114", "112"], ["114", "112"], ["120", "118"], ["120", "118"], ["97", "227"], ["216", "227"], ["19", "227"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["19", "114"], ["105", "114"], ["19", "120"], ["114", "120"], ["112", "124"], ["19", "124"], ["19", "128"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["124", "137"], ["19", "137"], ["19", "143"], ["143", "146"], ["149", "146"], ["19", "146"], ["93", "146"], ["179", "146"], ["153", "149"], ["161", "149"], ["171", "149"], ["19", "149"], ["146", "153"], ["19", "153"], ["118", "153"], ["159", "158"], ["159", "158"], ["19", "158"], ["169", "167"], ["169", "167"], ["207", "206"], ["207", "206"], ["194", "216"], ["120", "159"], ["169", "159"], ["19", "159"], ["161", "159"], ["161", "159"], ["19", "176"], ["137", "207"], ["19", "207"], ["97", "216"], ["19", "216"], ["19", "161"], ["153", "161"], ["159", "169"], ["19", "169"], ["171", "169"], ["171", "169"], ["176", "179"], ["182", "179"], ["19", "179"], ["146", "179"], ["179", "182"], ["19", "182"], ["19", "171"], ["161", "171"], ["19", "186"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "79"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["105", "120"], ["105", "114"], ["105", "112"], ["105", "118"], ["105", "108"], ["105", "105"], ["105", "124"], ["124", "128"], ["124", "129"], ["124", "137"], ["124", "130"], ["137", "146"], ["137", "143"], ["146", "146"], ["146", "149"], ["146", "153"], ["153", "161"], ["153", "206"], ["153", "207"], ["153", "158"], ["153", "159"], ["158", "167"], ["158", "169"], ["158", "179"], ["158", "171"], ["158", "176"], ["206", "216"], ["206", "218"], ["206", "219"], ["207", "210"], ["207", "211"], ["179", "188"], ["179", "179"], ["179", "187"], ["179", "182"], ["179", "186"], ["186", "196"], ["186", "195"], ["186", "194"], ["186", "201"], ["186", "200"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int V: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,V,int V = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int E = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] G: boolean[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,G,boolean[][] G = new boolean[V][V])<SUB>5</SUB>>", "43": "<(IDENTIFIER,V,new boolean[V][V])<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; E); i++),for (int i = 0; Some(i &lt; E); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; E)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int u = in.nextInt() - 1)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>7</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "63": "<(LOCAL,int v: int)<SUB>8</SUB>>", "65": "<(IDENTIFIER,v,int v = in.nextInt() - 1)<SUB>8</SUB>>", "67": "<(nextInt,nextInt())<SUB>8</SUB>>", "69": "<(LITERAL,1,in.nextInt() - 1)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,G[u][v])<SUB>9</SUB>>", "73": "<(IDENTIFIER,G,G[u][v] = true)<SUB>9</SUB>>", "75": "<(IDENTIFIER,v,G[u][v] = true)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,G[v][u] = true)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,G[v])<SUB>10</SUB>>", "81": "<(IDENTIFIER,v,G[v][u] = true)<SUB>10</SUB>>", "83": "<(LITERAL,true,G[v][u] = true)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,int pset = 1 &lt;&lt; V)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; V)<SUB>13</SUB>>", "89": "<(IDENTIFIER,V,1 &lt;&lt; V)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,long[][] dp = new long[pset][V])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.alloc,new long[pset][V])>", "95": "<(IDENTIFIER,V,new long[pset][V])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,long cycles = 0)<SUB>16</SUB>>", "99": "<(LITERAL,0,long cycles = 0)<SUB>16</SUB>>", "101": "<(LOCAL,int set: int)<SUB>18</SUB>>", "103": "<(IDENTIFIER,set,int set = 1)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.lessThan,set &lt; pset)<SUB>18</SUB>>", "107": "<(IDENTIFIER,pset,set &lt; pset)<SUB>18</SUB>>", "109": "<(IDENTIFIER,set,set++)<SUB>18</SUB>>", "111": "<(LOCAL,int bit: int)<SUB>19</SUB>>", "113": "<(IDENTIFIER,bit,int bit = Integer.bitCount(set))<SUB>19</SUB>>", "115": "<(IDENTIFIER,Integer,Integer.bitCount(set))<SUB>19</SUB>>", "117": "<(LOCAL,int src: int)<SUB>20</SUB>>", "119": "<(IDENTIFIER,src,int src = first(set))<SUB>20</SUB>>", "121": "<(IDENTIFIER,this,first(set))<SUB>20</SUB>>", "123": "<(CONTROL_STRUCTURE,if (bit == 1),if (bit == 1))<SUB>22</SUB>>", "125": "<(IDENTIFIER,bit,bit == 1)<SUB>22</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,dp[set][src])<SUB>23</SUB>>", "131": "<(IDENTIFIER,dp,dp[set][src] = 1)<SUB>23</SUB>>", "133": "<(IDENTIFIER,src,dp[set][src] = 1)<SUB>23</SUB>>", "135": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.greaterThan,bit &gt; 1)<SUB>25</SUB>>", "139": "<(LITERAL,1,bit &gt; 1)<SUB>25</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; V); i++),for (int i = 0; Some(i &lt; V); i++))<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "145": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "147": "<(IDENTIFIER,i,i &lt; V)<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "153": "<(&lt;operator&gt;.equals,i == src)<SUB>27</SUB>>", "155": "<(IDENTIFIER,src,i == src)<SUB>27</SUB>>", "157": "<(CONTROL_STRUCTURE,if ((set &amp; (1 &lt;&lt; i)) != 0),if ((set &amp; (1 &lt;&lt; i)) != 0))<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.and,set &amp; (1 &lt;&lt; i))<SUB>29</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>29</SUB>>", "163": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>29</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.assignment,int S_1 = set ^ (1 &lt;&lt; i))<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.xor,set ^ (1 &lt;&lt; i))<SUB>30</SUB>>", "171": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>30</SUB>>", "173": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>30</SUB>>", "175": "<(LOCAL,int v: int)<SUB>31</SUB>>", "177": "<(IDENTIFIER,v,int v = 0)<SUB>31</SUB>>", "179": "<(&lt;operator&gt;.lessThan,v &lt; V)<SUB>31</SUB>>", "181": "<(IDENTIFIER,V,v &lt; V)<SUB>31</SUB>>", "183": "<(IDENTIFIER,v,v++)<SUB>31</SUB>>", "185": "<(CONTROL_STRUCTURE,if (G[v][i] == true),if (G[v][i] == true))<SUB>32</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,G[v][i])<SUB>32</SUB>>", "189": "<(IDENTIFIER,G,G[v][i] == true)<SUB>32</SUB>>", "191": "<(IDENTIFIER,i,G[v][i] == true)<SUB>32</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dp[set][i])<SUB>33</SUB>>", "197": "<(IDENTIFIER,dp,dp[set][i] += dp[S_1][v])<SUB>33</SUB>>", "199": "<(IDENTIFIER,i,dp[set][i] += dp[S_1][v])<SUB>33</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[S_1])<SUB>33</SUB>>", "203": "<(IDENTIFIER,S_1,dp[set][i] += dp[S_1][v])<SUB>33</SUB>>", "205": "<(CONTROL_STRUCTURE,if (bit &gt;= 3 &amp;&amp; G[src][i]),if (bit &gt;= 3 &amp;&amp; G[src][i]))<SUB>38</SUB>>", "207": "<(&lt;operator&gt;.greaterEqualsThan,bit &gt;= 3)<SUB>38</SUB>>", "209": "<(LITERAL,3,bit &gt;= 3)<SUB>38</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,G[src])<SUB>38</SUB>>", "213": "<(IDENTIFIER,src,bit &gt;= 3 &amp;&amp; G[src][i])<SUB>38</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "217": "<(IDENTIFIER,cycles,cycles += dp[set][i])<SUB>39</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[set])<SUB>39</SUB>>", "221": "<(IDENTIFIER,set,cycles += dp[set][i])<SUB>39</SUB>>", "223": "<(println,System.out.println(cycles / 2))<SUB>47</SUB>>", "225": "<(IDENTIFIER,System,System.out.println(cycles / 2))<SUB>47</SUB>>", "227": "<(&lt;operator&gt;.division,cycles / 2)<SUB>47</SUB>>", "229": "<(LITERAL,2,cycles / 2)<SUB>47</SUB>>", "231": "<(MODIFIER,STATIC)>"}}