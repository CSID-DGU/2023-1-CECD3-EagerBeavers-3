{"edges": [["21", "23"], ["21", "153"], ["21", "154"], ["21", "155"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "28"], ["23", "29"], ["23", "6"], ["23", "33"], ["23", "36"], ["23", "40"], ["23", "151"], ["24", "25"], ["24", "26"], ["27", "3"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "56"], ["50", "57"], ["50", "62"], ["50", "63"], ["50", "67"], ["50", "68"], ["50", "71"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "81"], ["71", "83"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "90"], ["83", "124"], ["83", "149"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["90", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["95", "96"], ["95", "100"], ["96", "97"], ["96", "98"], ["98", "99"], ["101", "102"], ["102", "103"], ["102", "116"], ["102", "118"], ["103", "104"], ["103", "113"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["116", "117"], ["118", "119"], ["118", "123"], ["119", "120"], ["119", "121"], ["121", "122"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["24", "27"], ["27", "31"], ["29", "35"], ["33", "39"], ["36", "42"], ["151", "155"], ["26", "24"], ["31", "29"], ["35", "33"], ["37", "36"], ["42", "45"], ["45", "54"], ["45", "151"], ["48", "45"], ["39", "37"], ["52", "59"], ["57", "65"], ["63", "68"], ["68", "73"], ["54", "52"], ["59", "57"], ["65", "63"], ["73", "80"], ["76", "87"], ["76", "48"], ["81", "80"], ["78", "76"], ["85", "91"], ["149", "81"], ["80", "78"], ["87", "85"], ["91", "98"], ["91", "107"], ["126", "129"], ["129", "137"], ["129", "149"], ["132", "129"], ["95", "126"], ["135", "143"], ["96", "95"], ["116", "121"], ["118", "126"], ["137", "135"], ["141", "146"], ["141", "132"], ["146", "132"], ["98", "96"], ["104", "114"], ["104", "116"], ["119", "118"], ["143", "141"], ["105", "110"], ["110", "104"], ["114", "107"], ["121", "119"], ["107", "105"], ["21", "26"], ["22", "155"], ["24", "155"], ["27", "155"], ["31", "155"], ["29", "155"], ["29", "155"], ["33", "155"], ["36", "155"], ["36", "155"], ["42", "155"], ["45", "155"], ["45", "155"], ["45", "155"], ["151", "155"], ["151", "155"], ["52", "155"], ["52", "155"], ["57", "155"], ["59", "155"], ["57", "155"], ["57", "155"], ["63", "155"], ["65", "155"], ["63", "155"], ["63", "155"], ["68", "155"], ["68", "155"], ["73", "155"], ["76", "155"], ["76", "155"], ["76", "155"], ["48", "155"], ["85", "155"], ["91", "155"], ["104", "155"], ["104", "155"], ["104", "155"], ["116", "155"], ["118", "155"], ["118", "155"], ["118", "155"], ["95", "155"], ["95", "155"], ["95", "155"], ["126", "155"], ["129", "155"], ["129", "155"], ["129", "155"], ["149", "155"], ["81", "155"], ["135", "155"], ["135", "155"], ["141", "155"], ["141", "155"], ["146", "155"], ["132", "155"], ["21", "22"], ["21", "24"], ["31", "29"], ["21", "33"], ["24", "27"], ["21", "27"], ["33", "36"], ["21", "36"], ["21", "42"], ["36", "151"], ["149", "151"], ["21", "151"], ["27", "31"], ["21", "31"], ["42", "45"], ["48", "45"], ["21", "45"], ["29", "45"], ["45", "48"], ["21", "48"], ["54", "52"], ["59", "57"], ["59", "57"], ["65", "63"], ["21", "68"], ["21", "73"], ["31", "54"], ["59", "54"], ["21", "54"], ["54", "59"], ["21", "59"], ["52", "59"], ["59", "65"], ["21", "65"], ["73", "76"], ["81", "76"], ["21", "76"], ["57", "76"], ["76", "81"], ["21", "81"], ["57", "85"], ["21", "126"], ["36", "149"], ["135", "149"], ["146", "149"], ["21", "149"], ["85", "91"], ["21", "91"], ["91", "95"], ["21", "95"], ["126", "129"], ["132", "129"], ["21", "129"], ["121", "129"], ["98", "129"], ["143", "129"], ["141", "132"], ["21", "132"], ["110", "118"], ["21", "118"], ["36", "135"], ["149", "135"], ["146", "135"], ["21", "135"], ["63", "135"], ["107", "116"], ["21", "116"], ["129", "141"], ["21", "141"], ["143", "141"], ["143", "141"], ["135", "146"], ["21", "146"], ["68", "98"], ["129", "98"], ["21", "98"], ["63", "104"], ["110", "104"], ["110", "104"], ["129", "143"], ["21", "143"], ["91", "110"], ["21", "110"], ["107", "114"], ["21", "114"], ["116", "121"], ["21", "121"], ["68", "107"], ["114", "107"], ["129", "107"], ["21", "107"], ["45", "48"], ["45", "68"], ["45", "73"], ["45", "57"], ["45", "52"], ["45", "45"], ["45", "76"], ["45", "65"], ["45", "59"], ["45", "54"], ["45", "80"], ["45", "63"], ["45", "78"], ["76", "81"], ["76", "85"], ["76", "149"], ["76", "76"], ["76", "87"], ["76", "91"], ["76", "129"], ["76", "126"], ["76", "80"], ["76", "78"], ["91", "107"], ["91", "96"], ["91", "98"], ["91", "116"], ["91", "104"], ["91", "119"], ["91", "121"], ["91", "95"], ["91", "105"], ["91", "118"], ["91", "110"], ["129", "141"], ["129", "132"], ["129", "129"], ["129", "143"], ["129", "137"], ["129", "135"], ["141", "146"], ["104", "107"], ["104", "114"], ["104", "104"], ["104", "105"], ["104", "110"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(LOCAL,int tt: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,tt,int tt = 0)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.lessThan,tt &lt; T)<SUB>5</SUB>>", "47": "<(IDENTIFIER,T,tt &lt; T)<SUB>5</SUB>>", "49": "<(IDENTIFIER,tt,tt++)<SUB>5</SUB>>", "51": "<(LOCAL,int n: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,fs,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[] a = readArray(n))<SUB>7</SUB>>", "59": "<(readArray,readArray(n))<SUB>7</SUB>>", "61": "<(IDENTIFIER,n,readArray(n))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] stack = new int[n])<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[n])>", "67": "<(LOCAL,int size: int)<SUB>9</SUB>>", "69": "<(IDENTIFIER,size,int size = 0)<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>10</SUB>>", "75": "<(LITERAL,0,int $idx0 = 0)<SUB>10</SUB>>", "77": "<(IDENTIFIER,$idx0,$idx0 &lt; a.length)>", "79": "<(IDENTIFIER,a,$idx0 &lt; a.length)>", "81": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>10</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>10</SUB>>", "89": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "91": "<(&lt;operator&gt;.equals,i == 1)<SUB>11</SUB>>", "93": "<(LITERAL,1,i == 1)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.assignment,stack[size++] = i)<SUB>12</SUB>>", "97": "<(IDENTIFIER,stack,stack[size++] = i)<SUB>12</SUB>>", "99": "<(IDENTIFIER,size,size++)<SUB>12</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "103": "<(CONTROL_STRUCTURE,while (stack[size - 1] != i - 1),while (stack[size - 1] != i - 1))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,stack[size - 1])<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>15</SUB>>", "109": "<(LITERAL,1,size - 1)<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(IDENTIFIER,size,size--)<SUB>16</SUB>>", "117": "<(IDENTIFIER,size,size--)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,stack[size++])<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,size++)<SUB>19</SUB>>", "123": "<(IDENTIFIER,i,stack[size++] = i)<SUB>19</SUB>>", "125": "<(LOCAL,int j: int)<SUB>21</SUB>>", "127": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.lessThan,j &lt; size)<SUB>21</SUB>>", "131": "<(IDENTIFIER,size,j &lt; size)<SUB>21</SUB>>", "133": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "135": "<(print,print(stack[j]))<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,stack[j])<SUB>22</SUB>>", "139": "<(IDENTIFIER,j,print(stack[j]))<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.notEquals,j != size - 1)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>23</SUB>>", "145": "<(LITERAL,1,size - 1)<SUB>23</SUB>>", "147": "<(IDENTIFIER,out,print('.'))<SUB>23</SUB>>", "149": "<(println,println())<SUB>25</SUB>>", "151": "<(close,close())<SUB>68</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}