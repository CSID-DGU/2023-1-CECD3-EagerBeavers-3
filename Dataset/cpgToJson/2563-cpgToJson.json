{"edges": [["19", "21"], ["19", "123"], ["19", "124"], ["19", "125"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "53"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "118"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "81"], ["77", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["81", "89"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "96"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "112"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["53", "59"], ["57", "62"], ["62", "67"], ["118", "125"], ["24", "22"], ["29", "27"], ["34", "32"], ["38", "41"], ["41", "48"], ["41", "53"], ["44", "41"], ["59", "57"], ["67", "70"], ["70", "78"], ["70", "121"], ["73", "70"], ["119", "118"], ["47", "44"], ["121", "119"], ["48", "51"], ["51", "47"], ["77", "83"], ["77", "73"], ["78", "77"], ["82", "87"], ["87", "93"], ["83", "82"], ["91", "96"], ["96", "105"], ["96", "73"], ["99", "96"], ["93", "91"], ["103", "114"], ["103", "99"], ["104", "103"], ["113", "99"], ["105", "108"], ["108", "104"], ["114", "113"], ["19", "24"], ["20", "125"], ["22", "125"], ["25", "125"], ["29", "125"], ["27", "125"], ["27", "125"], ["32", "125"], ["32", "125"], ["53", "125"], ["53", "125"], ["57", "125"], ["57", "125"], ["57", "125"], ["62", "125"], ["67", "125"], ["70", "125"], ["70", "125"], ["70", "125"], ["118", "125"], ["118", "125"], ["118", "125"], ["77", "125"], ["77", "125"], ["82", "125"], ["82", "125"], ["87", "125"], ["91", "125"], ["91", "125"], ["96", "125"], ["96", "125"], ["73", "125"], ["104", "125"], ["104", "125"], ["103", "125"], ["103", "125"], ["113", "125"], ["113", "125"], ["99", "125"], ["47", "125"], ["51", "125"], ["47", "125"], ["47", "125"], ["44", "125"], ["53", "125"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["59", "57"], ["19", "62"], ["22", "25"], ["19", "25"], ["19", "38"], ["19", "53"], ["32", "53"], ["47", "53"], ["19", "67"], ["62", "118"], ["87", "118"], ["19", "118"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["38", "41"], ["44", "41"], ["19", "41"], ["34", "41"], ["41", "44"], ["19", "44"], ["51", "47"], ["41", "59"], ["19", "59"], ["67", "70"], ["73", "70"], ["19", "70"], ["59", "70"], ["96", "70"], ["70", "73"], ["19", "73"], ["29", "51"], ["19", "51"], ["57", "77"], ["82", "77"], ["19", "82"], ["62", "87"], ["19", "87"], ["70", "91"], ["19", "91"], ["91", "96"], ["99", "96"], ["19", "96"], ["70", "96"], ["96", "99"], ["19", "99"], ["70", "93"], ["19", "93"], ["104", "103"], ["104", "103"], ["19", "103"], ["19", "113"], ["53", "104"], ["47", "104"], ["41", "47"], ["41", "48"], ["41", "51"], ["41", "44"], ["41", "41"], ["70", "73"], ["70", "77"], ["70", "70"], ["70", "78"], ["77", "96"], ["77", "87"], ["77", "91"], ["77", "82"], ["77", "93"], ["77", "83"], ["96", "96"], ["96", "99"], ["96", "103"], ["96", "104"], ["96", "105"], ["96", "108"], ["103", "113"], ["103", "114"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new FastReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FastReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int[] arr: int[])<SUB>4</SUB>>", "33": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(sort,sort(arr))<SUB>8</SUB>>", "55": "<(IDENTIFIER,arr,sort(arr))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean[] done = new boolean[n])<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.alloc,new boolean[n])>", "61": "<(LOCAL,int ans: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,ans,int ans = 0)<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.logicalNot,!done[i])<SUB>12</SUB>>", "79": "<(IDENTIFIER,done,!done[i])<SUB>12</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,done[i])<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,done[i] = true)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>14</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.addition,i + 1)<SUB>15</SUB>>", "95": "<(LITERAL,1,i + 1)<SUB>15</SUB>>", "97": "<(IDENTIFIER,j,j &lt; n)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.equals,arr[j] % arr[i] == 0)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>16</SUB>>", "107": "<(IDENTIFIER,j,arr[j] % arr[i])<SUB>16</SUB>>", "109": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>16</SUB>>", "111": "<(LITERAL,0,arr[j] % arr[i] == 0)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,done[j] = true)<SUB>17</SUB>>", "115": "<(IDENTIFIER,done,done[j] = true)<SUB>17</SUB>>", "117": "<(LITERAL,true,done[j] = true)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "121": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}