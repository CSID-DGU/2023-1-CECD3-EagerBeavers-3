{"edges": [["19", "20"], ["19", "21"], ["19", "66"], ["19", "67"], ["19", "68"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "64"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "40"], ["34", "52"], ["35", "36"], ["35", "39"], ["36", "37"], ["36", "38"], ["40", "41"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["22", "28"], ["25", "32"], ["30", "36"], ["64", "68"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "44"], ["35", "56"], ["28", "26"], ["36", "35"], ["41", "64"], ["53", "64"], ["42", "46"], ["45", "41"], ["54", "58"], ["57", "53"], ["44", "42"], ["46", "49"], ["49", "45"], ["56", "54"], ["58", "61"], ["61", "57"], ["19", "24"], ["20", "68"], ["22", "68"], ["25", "68"], ["25", "68"], ["30", "68"], ["30", "68"], ["35", "68"], ["35", "68"], ["53", "68"], ["57", "68"], ["61", "68"], ["57", "68"], ["53", "68"], ["41", "68"], ["45", "68"], ["49", "68"], ["45", "68"], ["41", "68"], ["64", "68"], ["64", "68"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["32", "64"], ["19", "64"], ["25", "32"], ["19", "32"], ["36", "35"], ["36", "35"], ["19", "35"], ["30", "36"], ["19", "36"], ["19", "41"], ["49", "41"], ["49", "41"], ["19", "53"], ["61", "53"], ["61", "53"], ["19", "45"], ["49", "45"], ["49", "45"], ["19", "57"], ["61", "57"], ["61", "57"], ["19", "46"], ["36", "49"], ["19", "49"], ["19", "58"], ["36", "61"], ["19", "61"], ["35", "58"], ["35", "49"], ["35", "61"], ["35", "42"], ["35", "57"], ["35", "44"], ["35", "46"], ["35", "53"], ["35", "56"], ["35", "41"], ["35", "54"], ["35", "45"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int N: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,N,int N = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.equals,N % 2 == 0)<SUB>4</SUB>>", "37": "<(IDENTIFIER,N,N % 2)<SUB>4</SUB>>", "39": "<(LITERAL,0,N % 2 == 0)<SUB>4</SUB>>", "41": "<(println,System.out.println((4) + &quot; &quot; + (N - 4)))<SUB>5</SUB>>", "43": "<(IDENTIFIER,System,System.out.println((4) + &quot; &quot; + (N - 4)))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.addition,(4) + &quot; &quot; + (N - 4))<SUB>5</SUB>>", "47": "<(LITERAL,4,(4) + &quot; &quot;)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.subtraction,N - 4)<SUB>5</SUB>>", "51": "<(LITERAL,4,N - 4)<SUB>5</SUB>>", "53": "<(println,System.out.println((9) + &quot; &quot; + (N - 9)))<SUB>7</SUB>>", "55": "<(IDENTIFIER,System,System.out.println((9) + &quot; &quot; + (N - 9)))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.addition,(9) + &quot; &quot; + (N - 9))<SUB>7</SUB>>", "59": "<(LITERAL,9,(9) + &quot; &quot;)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.subtraction,N - 9)<SUB>7</SUB>>", "63": "<(LITERAL,9,N - 9)<SUB>7</SUB>>", "65": "<(IDENTIFIER,scan,close())<SUB>8</SUB>>", "67": "<(MODIFIER,STATIC)>"}}