{"edges": [["19", "20"], ["19", "21"], ["19", "124"], ["19", "125"], ["19", "126"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "61"], ["21", "64"], ["21", "65"], ["21", "68"], ["21", "119"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "107"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "99"], ["96", "106"], ["97", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "117"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["117", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["61", "65"], ["65", "70"], ["119", "126"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "61"], ["52", "49"], ["70", "73"], ["73", "81"], ["73", "122"], ["76", "73"], ["120", "119"], ["28", "26"], ["55", "52"], ["122", "120"], ["56", "59"], ["59", "55"], ["81", "84"], ["84", "92"], ["84", "76"], ["87", "84"], ["91", "97"], ["91", "110"], ["108", "76"], ["108", "87"], ["92", "91"], ["97", "100"], ["99", "76"], ["109", "108"], ["100", "103"], ["103", "99"], ["110", "113"], ["113", "109"], ["19", "24"], ["20", "126"], ["22", "126"], ["25", "126"], ["25", "126"], ["32", "126"], ["30", "126"], ["30", "126"], ["35", "126"], ["40", "126"], ["40", "126"], ["40", "126"], ["61", "126"], ["61", "126"], ["65", "126"], ["70", "126"], ["73", "126"], ["73", "126"], ["73", "126"], ["119", "126"], ["119", "126"], ["119", "126"], ["81", "126"], ["84", "126"], ["84", "126"], ["91", "126"], ["109", "126"], ["109", "126"], ["108", "126"], ["108", "126"], ["87", "126"], ["97", "126"], ["99", "126"], ["99", "126"], ["99", "126"], ["76", "126"], ["55", "126"], ["59", "126"], ["55", "126"], ["55", "126"], ["52", "126"], ["61", "126"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "65"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "61"], ["35", "61"], ["55", "61"], ["19", "70"], ["65", "119"], ["97", "119"], ["19", "119"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["70", "73"], ["76", "73"], ["19", "73"], ["49", "73"], ["84", "73"], ["73", "76"], ["19", "76"], ["19", "81"], ["32", "59"], ["19", "59"], ["81", "84"], ["87", "84"], ["19", "84"], ["73", "84"], ["84", "87"], ["19", "87"], ["40", "91"], ["109", "91"], ["99", "91"], ["19", "91"], ["61", "99"], ["109", "99"], ["55", "99"], ["109", "108"], ["109", "108"], ["19", "108"], ["65", "97"], ["19", "97"], ["61", "109"], ["55", "109"], ["40", "109"], ["91", "109"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "55"], ["73", "73"], ["73", "81"], ["73", "84"], ["73", "76"], ["84", "92"], ["84", "91"], ["91", "113"], ["91", "99"], ["91", "103"], ["91", "97"], ["91", "100"], ["91", "110"], ["91", "108"], ["91", "109"], ["108", "84"], ["108", "87"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] numbs = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(LOCAL,int[] smallest_color: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,smallest_color,int[] smallest_color = new int[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,numbs[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,numbs,numbs[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(sort,sort(numbs))<SUB>9</SUB>>", "63": "<(IDENTIFIER,numbs,sort(numbs))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>10</SUB>>", "67": "<(LITERAL,0,int count = 0)<SUB>10</SUB>>", "69": "<(LOCAL,int i: int)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "85": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.equals,smallest_color[j] == 0)<SUB>13</SUB>>", "93": "<(IDENTIFIER,smallest_color,smallest_color[j] == 0)<SUB>13</SUB>>", "95": "<(LITERAL,0,smallest_color[j] == 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,count++)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignment,smallest_color[j] = numbs[i])<SUB>15</SUB>>", "101": "<(IDENTIFIER,smallest_color,smallest_color[j] = numbs[i])<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,numbs[i])<SUB>15</SUB>>", "105": "<(IDENTIFIER,i,smallest_color[j] = numbs[i])<SUB>15</SUB>>", "107": "<(CONTROL_STRUCTURE,if (numbs[i] % smallest_color[j] == 0),if (numbs[i] % smallest_color[j] == 0))<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.modulo,numbs[i] % smallest_color[j])<SUB>18</SUB>>", "111": "<(IDENTIFIER,numbs,numbs[i] % smallest_color[j])<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,smallest_color[j])<SUB>18</SUB>>", "115": "<(IDENTIFIER,j,numbs[i] % smallest_color[j])<SUB>18</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "119": "<(println,System.out.println(count))<SUB>23</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(count))<SUB>23</SUB>>", "123": "<(IDENTIFIER,count,System.out.println(count))<SUB>23</SUB>>", "125": "<(MODIFIER,STATIC)>"}}