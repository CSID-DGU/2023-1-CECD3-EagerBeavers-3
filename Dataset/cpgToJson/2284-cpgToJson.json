{"edges": [["21", "22"], ["21", "23"], ["21", "186"], ["21", "187"], ["21", "188"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "45"], ["23", "46"], ["23", "49"], ["23", "50"], ["23", "53"], ["23", "54"], ["23", "57"], ["23", "162"], ["23", "179"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["41", "5"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "73"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "77"], ["73", "122"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "119"], ["78", "79"], ["78", "80"], ["78", "84"], ["80", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["85", "86"], ["85", "116"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "95"], ["86", "97"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "112"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["112", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["123", "124"], ["124", "125"], ["124", "126"], ["124", "130"], ["126", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["131", "132"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "141"], ["132", "143"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["139", "140"], ["141", "142"], ["143", "144"], ["143", "145"], ["143", "158"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "157"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "161"], ["162", "163"], ["162", "164"], ["162", "167"], ["162", "171"], ["162", "173"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["169", "170"], ["171", "172"], ["173", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["24", "30"], ["27", "36"], ["32", "40"], ["38", "41"], ["41", "42"], ["42", "46"], ["46", "50"], ["50", "54"], ["54", "59"], ["179", "188"], ["26", "24"], ["28", "27"], ["34", "32"], ["40", "38"], ["59", "62"], ["62", "71"], ["62", "164"], ["65", "62"], ["164", "169"], ["167", "176"], ["167", "182"], ["171", "169"], ["180", "183"], ["183", "179"], ["30", "28"], ["36", "34"], ["69", "74"], ["169", "167"], ["174", "171"], ["182", "180"], ["71", "69"], ["74", "79"], ["74", "125"], ["176", "174"], ["119", "65"], ["79", "81"], ["79", "88"], ["81", "119"], ["125", "127"], ["125", "134"], ["116", "119"], ["127", "65"], ["88", "93"], ["91", "105"], ["91", "116"], ["95", "93"], ["93", "91"], ["99", "112"], ["112", "95"], ["134", "139"], ["137", "151"], ["137", "65"], ["141", "139"], ["101", "99"], ["139", "137"], ["145", "158"], ["158", "141"], ["102", "101"], ["147", "145"], ["103", "108"], ["108", "102"], ["148", "147"], ["105", "103"], ["149", "154"], ["154", "148"], ["151", "149"], ["21", "26"], ["22", "188"], ["24", "188"], ["27", "188"], ["27", "188"], ["36", "188"], ["34", "188"], ["32", "188"], ["32", "188"], ["38", "188"], ["41", "188"], ["42", "188"], ["46", "188"], ["46", "188"], ["50", "188"], ["54", "188"], ["59", "188"], ["62", "188"], ["62", "188"], ["62", "188"], ["164", "188"], ["167", "188"], ["169", "188"], ["167", "188"], ["167", "188"], ["179", "188"], ["183", "188"], ["183", "188"], ["179", "188"], ["179", "188"], ["174", "188"], ["174", "188"], ["171", "188"], ["71", "188"], ["69", "188"], ["69", "188"], ["74", "188"], ["74", "188"], ["134", "188"], ["149", "188"], ["148", "188"], ["148", "188"], ["147", "188"], ["145", "188"], ["145", "188"], ["158", "188"], ["158", "188"], ["141", "188"], ["127", "188"], ["127", "188"], ["88", "188"], ["116", "188"], ["103", "188"], ["102", "188"], ["102", "188"], ["101", "188"], ["99", "188"], ["99", "188"], ["112", "188"], ["112", "188"], ["95", "188"], ["81", "188"], ["119", "188"], ["119", "188"], ["65", "188"], ["34", "188"], ["21", "22"], ["21", "24"], ["34", "32"], ["34", "32"], ["21", "38"], ["21", "46"], ["21", "50"], ["21", "54"], ["24", "27"], ["21", "27"], ["38", "41"], ["21", "41"], ["41", "42"], ["21", "42"], ["21", "59"], ["21", "164"], ["183", "179"], ["183", "179"], ["21", "34"], ["36", "34"], ["59", "62"], ["65", "62"], ["21", "62"], ["32", "62"], ["62", "65"], ["21", "65"], ["71", "69"], ["164", "167"], ["171", "167"], ["21", "167"], ["169", "167"], ["176", "171"], ["21", "171"], ["176", "174"], ["176", "174"], ["54", "183"], ["174", "183"], ["21", "183"], ["50", "183"], ["147", "183"], ["101", "183"], ["27", "36"], ["21", "36"], ["42", "169"], ["176", "169"], ["139", "169"], ["116", "169"], ["81", "169"], ["21", "169"], ["54", "174"], ["21", "174"], ["36", "71"], ["21", "71"], ["69", "74"], ["21", "74"], ["21", "119"], ["169", "176"], ["21", "176"], ["167", "176"], ["21", "79"], ["21", "125"], ["42", "81"], ["139", "81"], ["116", "81"], ["21", "81"], ["21", "127"], ["21", "88"], ["93", "116"], ["21", "116"], ["88", "91"], ["95", "91"], ["21", "91"], ["93", "91"], ["112", "95"], ["21", "95"], ["101", "99"], ["101", "99"], ["21", "134"], ["42", "93"], ["139", "93"], ["116", "93"], ["112", "93"], ["81", "93"], ["21", "93"], ["108", "112"], ["21", "112"], ["108", "112"], ["99", "112"], ["134", "137"], ["141", "137"], ["21", "137"], ["139", "137"], ["158", "141"], ["21", "141"], ["147", "145"], ["147", "145"], ["103", "101"], ["103", "101"], ["108", "101"], ["108", "101"], ["50", "101"], ["147", "101"], ["21", "101"], ["42", "139"], ["158", "139"], ["116", "139"], ["81", "139"], ["21", "139"], ["154", "158"], ["21", "158"], ["154", "158"], ["145", "158"], ["103", "102"], ["103", "102"], ["108", "102"], ["108", "102"], ["149", "147"], ["149", "147"], ["154", "147"], ["154", "147"], ["50", "147"], ["101", "147"], ["21", "147"], ["93", "103"], ["21", "103"], ["105", "103"], ["105", "103"], ["103", "108"], ["21", "108"], ["105", "108"], ["149", "148"], ["149", "148"], ["154", "148"], ["154", "148"], ["91", "105"], ["21", "105"], ["139", "149"], ["21", "149"], ["151", "149"], ["151", "149"], ["149", "154"], ["21", "154"], ["151", "154"], ["137", "151"], ["21", "151"], ["62", "69"], ["62", "74"], ["62", "65"], ["62", "71"], ["62", "62"], ["167", "167"], ["167", "169"], ["167", "176"], ["167", "174"], ["167", "171"], ["74", "119"], ["74", "79"], ["74", "125"], ["79", "116"], ["79", "81"], ["79", "91"], ["79", "93"], ["79", "88"], ["125", "134"], ["125", "137"], ["125", "127"], ["125", "139"], ["91", "99"], ["91", "102"], ["91", "103"], ["91", "95"], ["91", "91"], ["91", "112"], ["91", "93"], ["91", "101"], ["91", "105"], ["91", "108"], ["137", "141"], ["137", "154"], ["137", "145"], ["137", "149"], ["137", "151"], ["137", "148"], ["137", "137"], ["137", "147"], ["137", "139"], ["137", "158"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = parseInt(sc.nextLine()))<SUB>3</SUB>>", "35": "<(IDENTIFIER,Integer,parseInt(sc.nextLine()))<SUB>3</SUB>>", "37": "<(IDENTIFIER,sc,nextLine())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY listCount = new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "5": "<(IDENTIFIER,listCount,new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "43": "<(IDENTIFIER,listCount,add(1))<SUB>5</SUB>>", "45": "<(LOCAL,boolean justf: boolean)<SUB>6</SUB>>", "47": "<(IDENTIFIER,justf,boolean justf = false)<SUB>6</SUB>>", "49": "<(LOCAL,int p: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,p,int p = 1000000007)<SUB>7</SUB>>", "53": "<(LOCAL,long ans: long)<SUB>8</SUB>>", "55": "<(IDENTIFIER,ans,long ans = 0)<SUB>8</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt; n); x++),for (int x = 0; Some(x &lt; n); x++))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>10</SUB>>", "61": "<(LITERAL,0,int x = 0)<SUB>10</SUB>>", "63": "<(IDENTIFIER,x,x &lt; n)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,x++)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,String next = nextLine())<SUB>11</SUB>>", "71": "<(nextLine,nextLine())<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,if (next.equals(&quot;f&quot;)),if (next.equals(&quot;f&quot;)))<SUB>13</SUB>>", "75": "<(IDENTIFIER,next,next.equals(&quot;f&quot;))<SUB>13</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "79": "<(IDENTIFIER,justf,if (justf))<SUB>15</SUB>>", "81": "<(add,add(0))<SUB>16</SUB>>", "83": "<(LITERAL,0,add(0))<SUB>16</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "87": "<(LOCAL,int i: int)<SUB>20</SUB>>", "89": "<(IDENTIFIER,i,int i = 1)<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; listCount.size())<SUB>20</SUB>>", "93": "<(size,size())<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "99": "<(&lt;operator&gt;.assignment,int sum = (listCount.get(i - 1) + listCount.get(i)) % p)<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.modulo,(listCount.get(i - 1) + listCount.get(i)) % p)<SUB>21</SUB>>", "103": "<(get,get(i - 1))<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>21</SUB>>", "107": "<(LITERAL,1,i - 1)<SUB>21</SUB>>", "109": "<(IDENTIFIER,listCount,get(i))<SUB>21</SUB>>", "111": "<(IDENTIFIER,p,(listCount.get(i - 1) + listCount.get(i)) % p)<SUB>21</SUB>>", "113": "<(IDENTIFIER,listCount,set(i, sum))<SUB>22</SUB>>", "115": "<(IDENTIFIER,sum,set(i, sum))<SUB>22</SUB>>", "117": "<(IDENTIFIER,listCount,add(0))<SUB>25</SUB>>", "119": "<(&lt;operator&gt;.assignment,justf = true)<SUB>28</SUB>>", "121": "<(LITERAL,true,justf = true)<SUB>28</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "125": "<(IDENTIFIER,justf,if (justf))<SUB>31</SUB>>", "127": "<(&lt;operator&gt;.assignment,justf = false)<SUB>32</SUB>>", "129": "<(LITERAL,false,justf = false)<SUB>32</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "133": "<(LOCAL,int i: int)<SUB>35</SUB>>", "135": "<(IDENTIFIER,i,int i = 1)<SUB>35</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; listCount.size())<SUB>35</SUB>>", "139": "<(size,size())<SUB>35</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>35</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "145": "<(&lt;operator&gt;.assignment,int sum = (listCount.get(i - 1) + listCount.get(i)) % p)<SUB>36</SUB>>", "147": "<(&lt;operator&gt;.modulo,(listCount.get(i - 1) + listCount.get(i)) % p)<SUB>36</SUB>>", "149": "<(get,get(i - 1))<SUB>36</SUB>>", "151": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>36</SUB>>", "153": "<(LITERAL,1,i - 1)<SUB>36</SUB>>", "155": "<(IDENTIFIER,listCount,get(i))<SUB>36</SUB>>", "157": "<(IDENTIFIER,p,(listCount.get(i - 1) + listCount.get(i)) % p)<SUB>36</SUB>>", "159": "<(IDENTIFIER,listCount,set(i, sum))<SUB>37</SUB>>", "161": "<(IDENTIFIER,sum,set(i, sum))<SUB>37</SUB>>", "163": "<(LOCAL,int i: int)<SUB>45</SUB>>", "165": "<(IDENTIFIER,i,int i = 0)<SUB>45</SUB>>", "167": "<(&lt;operator&gt;.lessThan,i &lt; listCount.size())<SUB>45</SUB>>", "169": "<(size,size())<SUB>45</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,i++)<SUB>45</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "175": "<(IDENTIFIER,ans,ans += get(i))<SUB>46</SUB>>", "177": "<(IDENTIFIER,listCount,get(i))<SUB>46</SUB>>", "179": "<(print,System.out.print((ans % p)))<SUB>49</SUB>>", "181": "<(IDENTIFIER,System,System.out.print((ans % p)))<SUB>49</SUB>>", "183": "<(&lt;operator&gt;.modulo,ans % p)<SUB>49</SUB>>", "185": "<(IDENTIFIER,p,ans % p)<SUB>49</SUB>>", "187": "<(MODIFIER,STATIC)>"}}