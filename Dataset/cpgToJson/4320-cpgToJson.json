{"edges": [["19", "20"], ["19", "21"], ["19", "266"], ["19", "267"], ["19", "268"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "90"], ["21", "91"], ["21", "96"], ["21", "208"], ["21", "209"], ["21", "212"], ["21", "257"], ["21", "264"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["55", "77"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "124"], ["117", "125"], ["117", "134"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "140"], ["134", "148"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["155", "164"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "196"], ["176", "177"], ["176", "190"], ["177", "178"], ["177", "185"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["192", "195"], ["196", "197"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "220"], ["212", "222"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "231"], ["223", "233"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["234", "235"], ["234", "249"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["241", "242"], ["241", "248"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "246"], ["244", "247"], ["249", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "265"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["85", "93"], ["91", "98"], ["209", "214"], ["257", "264"], ["264", "268"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "87"], ["53", "50"], ["87", "85"], ["93", "91"], ["98", "101"], ["101", "109"], ["101", "209"], ["104", "101"], ["214", "217"], ["217", "225"], ["217", "260"], ["220", "217"], ["258", "261"], ["261", "257"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "79"], ["77", "53"], ["260", "258"], ["59", "57"], ["66", "64"], ["71", "70"], ["78", "77"], ["109", "112"], ["112", "121"], ["112", "104"], ["115", "112"], ["225", "228"], ["228", "237"], ["228", "220"], ["231", "228"], ["60", "59"], ["67", "66"], ["72", "71"], ["79", "78"], ["119", "130"], ["125", "136"], ["121", "119"], ["127", "125"], ["135", "143"], ["135", "151"], ["235", "253"], ["235", "231"], ["128", "127"], ["136", "135"], ["141", "115"], ["236", "235"], ["236", "244"], ["241", "235"], ["250", "231"], ["130", "128"], ["142", "141"], ["150", "161"], ["150", "115"], ["237", "236"], ["242", "241"], ["252", "250"], ["143", "142"], ["151", "150"], ["157", "166"], ["244", "242"], ["253", "252"], ["159", "157"], ["166", "169"], ["169", "181"], ["169", "115"], ["172", "169"], ["161", "159"], ["176", "199"], ["176", "172"], ["177", "176"], ["177", "192"], ["190", "176"], ["197", "172"], ["178", "177"], ["178", "186"], ["185", "177"], ["192", "190"], ["198", "204"], ["203", "197"], ["179", "178"], ["186", "185"], ["199", "198"], ["204", "203"], ["181", "179"], ["19", "24"], ["20", "268"], ["22", "268"], ["25", "268"], ["25", "268"], ["30", "268"], ["35", "268"], ["35", "268"], ["40", "268"], ["40", "268"], ["40", "268"], ["47", "268"], ["50", "268"], ["50", "268"], ["50", "268"], ["85", "268"], ["85", "268"], ["91", "268"], ["93", "268"], ["91", "268"], ["91", "268"], ["209", "268"], ["214", "268"], ["217", "268"], ["217", "268"], ["217", "268"], ["257", "268"], ["261", "268"], ["257", "268"], ["257", "268"], ["264", "268"], ["264", "268"], ["225", "268"], ["228", "268"], ["228", "268"], ["228", "268"], ["220", "268"], ["237", "268"], ["236", "268"], ["235", "268"], ["244", "268"], ["235", "268"], ["235", "268"], ["250", "268"], ["250", "268"], ["231", "268"], ["109", "268"], ["112", "268"], ["112", "268"], ["112", "268"], ["104", "268"], ["121", "268"], ["119", "268"], ["119", "268"], ["128", "268"], ["127", "268"], ["125", "268"], ["125", "268"], ["136", "268"], ["135", "268"], ["135", "268"], ["135", "268"], ["151", "268"], ["150", "268"], ["150", "268"], ["150", "268"], ["157", "268"], ["159", "268"], ["157", "268"], ["157", "268"], ["166", "268"], ["169", "268"], ["169", "268"], ["179", "268"], ["179", "268"], ["178", "268"], ["177", "268"], ["177", "268"], ["176", "268"], ["192", "268"], ["190", "268"], ["176", "268"], ["176", "268"], ["197", "268"], ["197", "268"], ["197", "268"], ["172", "268"], ["141", "268"], ["141", "268"], ["115", "268"], ["57", "268"], ["57", "268"], ["64", "268"], ["66", "268"], ["64", "268"], ["64", "268"], ["70", "268"], ["70", "268"], ["77", "268"], ["77", "268"], ["53", "268"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["87", "85"], ["87", "85"], ["93", "91"], ["93", "91"], ["19", "209"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "98"], ["19", "214"], ["261", "257"], ["261", "257"], ["37", "264"], ["67", "264"], ["19", "264"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["19", "77"], ["19", "87"], ["42", "87"], ["85", "93"], ["19", "93"], ["87", "93"], ["98", "101"], ["104", "101"], ["19", "101"], ["93", "101"], ["101", "104"], ["128", "104"], ["159", "104"], ["192", "104"], ["19", "104"], ["214", "217"], ["220", "217"], ["19", "217"], ["101", "217"], ["217", "220"], ["237", "220"], ["244", "220"], ["19", "220"], ["209", "261"], ["250", "261"], ["19", "261"], ["19", "109"], ["19", "225"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["109", "112"], ["115", "112"], ["19", "112"], ["93", "112"], ["169", "112"], ["130", "115"], ["161", "115"], ["190", "115"], ["19", "115"], ["121", "119"], ["121", "119"], ["127", "125"], ["127", "125"], ["225", "228"], ["231", "228"], ["19", "228"], ["93", "228"], ["244", "228"], ["112", "228"], ["228", "231"], ["19", "231"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["19", "121"], ["101", "121"], ["128", "121"], ["159", "121"], ["192", "121"], ["128", "127"], ["128", "127"], ["19", "127"], ["136", "135"], ["136", "135"], ["125", "135"], ["19", "135"], ["19", "141"], ["236", "235"], ["236", "235"], ["197", "250"], ["141", "250"], ["121", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["119", "136"], ["19", "136"], ["237", "236"], ["237", "236"], ["19", "236"], ["209", "250"], ["19", "250"], ["19", "130"], ["112", "130"], ["151", "150"], ["151", "150"], ["135", "150"], ["19", "150"], ["159", "157"], ["159", "157"], ["121", "237"], ["19", "237"], ["217", "237"], ["244", "237"], ["136", "151"], ["19", "151"], ["19", "166"], ["192", "244"], ["19", "244"], ["237", "244"], ["228", "244"], ["128", "159"], ["19", "159"], ["161", "159"], ["161", "159"], ["166", "169"], ["172", "169"], ["19", "169"], ["112", "169"], ["192", "169"], ["181", "172"], ["19", "172"], ["19", "161"], ["130", "161"], ["177", "176"], ["177", "176"], ["190", "176"], ["190", "176"], ["178", "177"], ["178", "177"], ["161", "190"], ["19", "190"], ["192", "190"], ["192", "190"], ["192", "190"], ["141", "197"], ["179", "178"], ["179", "178"], ["19", "178"], ["19", "192"], ["159", "192"], ["169", "192"], ["157", "179"], ["19", "179"], ["181", "179"], ["181", "179"], ["19", "181"], ["169", "181"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "79"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["101", "104"], ["101", "112"], ["101", "101"], ["101", "109"], ["217", "225"], ["217", "228"], ["217", "217"], ["217", "220"], ["112", "115"], ["112", "136"], ["112", "128"], ["112", "119"], ["112", "121"], ["112", "112"], ["112", "130"], ["112", "127"], ["112", "135"], ["112", "125"], ["228", "228"], ["228", "231"], ["228", "235"], ["228", "236"], ["228", "237"], ["135", "150"], ["135", "151"], ["135", "141"], ["135", "142"], ["135", "143"], ["235", "252"], ["235", "253"], ["235", "250"], ["236", "244"], ["236", "242"], ["236", "241"], ["150", "169"], ["150", "161"], ["150", "166"], ["150", "157"], ["150", "159"], ["169", "169"], ["169", "179"], ["169", "178"], ["169", "181"], ["169", "176"], ["169", "177"], ["169", "172"], ["176", "197"], ["176", "198"], ["176", "204"], ["176", "199"], ["176", "203"], ["177", "192"], ["177", "190"], ["178", "185"], ["178", "186"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>6</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int from = in.nextInt() - 1)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>9</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "63": "<(LOCAL,int to: int)<SUB>10</SUB>>", "65": "<(IDENTIFIER,to,int to = in.nextInt() - 1)<SUB>10</SUB>>", "67": "<(nextInt,nextInt())<SUB>10</SUB>>", "69": "<(LITERAL,1,in.nextInt() - 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[from][to])<SUB>11</SUB>>", "73": "<(IDENTIFIER,graph,graph[from][to] = true)<SUB>11</SUB>>", "75": "<(IDENTIFIER,to,graph[from][to] = true)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,graph[to][from] = true)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,graph[to])<SUB>12</SUB>>", "81": "<(IDENTIFIER,to,graph[to][from] = true)<SUB>12</SUB>>", "83": "<(LITERAL,true,graph[to][from] = true)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,int max = 1 &lt;&lt; n)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "89": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,long[][] dp = new long[max][n])<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.alloc,new long[max][n])>", "95": "<(IDENTIFIER,n,new long[max][n])<SUB>16</SUB>>", "97": "<(LOCAL,int mask: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,mask,int mask = 1)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.lessThan,mask &lt; max)<SUB>17</SUB>>", "103": "<(IDENTIFIER,max,mask &lt; max)<SUB>17</SUB>>", "105": "<(IDENTIFIER,mask,mask++)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.assignment,int countMask = Integer.bitCount(mask))<SUB>19</SUB>>", "121": "<(bitCount,Integer.bitCount(mask))<SUB>19</SUB>>", "123": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.assignment,boolean existSubSeti = (mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "129": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>20</SUB>>", "131": "<(LITERAL,1,1 &lt;&lt; i)<SUB>20</SUB>>", "133": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.logicalAnd,countMask == 1 &amp;&amp; existSubSeti)<SUB>21</SUB>>", "137": "<(IDENTIFIER,countMask,countMask == 1)<SUB>21</SUB>>", "139": "<(IDENTIFIER,existSubSeti,countMask == 1 &amp;&amp; existSubSeti)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.assignment,dp[mask][i] = 1)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>22</SUB>>", "145": "<(IDENTIFIER,mask,dp[mask][i] = 1)<SUB>22</SUB>>", "147": "<(LITERAL,1,dp[mask][i] = 1)<SUB>22</SUB>>", "149": "<(CONTROL_STRUCTURE,if (countMask &gt; 1 &amp;&amp; existSubSeti),if (countMask &gt; 1 &amp;&amp; existSubSeti))<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.greaterThan,countMask &gt; 1)<SUB>24</SUB>>", "153": "<(LITERAL,1,countMask &gt; 1)<SUB>24</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.assignment,int mask1 = mask ^ (1 &lt;&lt; i))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>25</SUB>>", "165": "<(LOCAL,int j: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>26</SUB>>", "171": "<(IDENTIFIER,n,j &lt; n)<SUB>26</SUB>>", "173": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,if (((mask1 &amp; (1 &lt;&lt; j)) &gt; 0) &amp;&amp; graph[j][i] &amp;&amp; i != firstMask(mask, n)),if (((mask1 &amp; (1 &lt;&lt; j)) &gt; 0) &amp;&amp; graph[j][i] &amp;&amp; i != firstMask(mask, n)))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.logicalAnd,((mask1 &amp; (1 &lt;&lt; j)) &gt; 0) &amp;&amp; graph[j][i])<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.and,mask1 &amp; (1 &lt;&lt; j))<SUB>27</SUB>>", "181": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>27</SUB>>", "183": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>27</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,graph[j][i])<SUB>27</SUB>>", "187": "<(IDENTIFIER,graph,((mask1 &amp; (1 &lt;&lt; j)) &gt; 0) &amp;&amp; graph[j][i])<SUB>27</SUB>>", "189": "<(IDENTIFIER,i,((mask1 &amp; (1 &lt;&lt; j)) &gt; 0) &amp;&amp; graph[j][i])<SUB>27</SUB>>", "191": "<(IDENTIFIER,i,i != firstMask(mask, n))<SUB>27</SUB>>", "193": "<(IDENTIFIER,this,firstMask(mask, n))<SUB>27</SUB>>", "195": "<(IDENTIFIER,n,firstMask(mask, n))<SUB>27</SUB>>", "197": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>28</SUB>>", "201": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[mask1][j])<SUB>28</SUB>>", "205": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "207": "<(IDENTIFIER,j,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.assignment,long counter = 0)<SUB>35</SUB>>", "211": "<(LITERAL,0,long counter = 0)<SUB>35</SUB>>", "213": "<(LOCAL,int mask: int)<SUB>36</SUB>>", "215": "<(IDENTIFIER,mask,int mask = 1)<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.lessThan,mask &lt; max)<SUB>36</SUB>>", "219": "<(IDENTIFIER,max,mask &lt; max)<SUB>36</SUB>>", "221": "<(IDENTIFIER,mask,mask++)<SUB>36</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>37</SUB>>", "225": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>37</SUB>>", "227": "<(LITERAL,0,int i = 0)<SUB>37</SUB>>", "229": "<(IDENTIFIER,i,i &lt; n)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "235": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "237": "<(bitCount,Integer.bitCount(mask))<SUB>38</SUB>>", "239": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>38</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "243": "<(IDENTIFIER,graph,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "245": "<(IDENTIFIER,this,firstMask(mask, n))<SUB>38</SUB>>", "247": "<(IDENTIFIER,n,firstMask(mask, n))<SUB>38</SUB>>", "249": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "251": "<(IDENTIFIER,counter,counter += dp[mask][i])<SUB>39</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>39</SUB>>", "255": "<(IDENTIFIER,mask,counter += dp[mask][i])<SUB>39</SUB>>", "257": "<(println,System.out.println(counter / 2))<SUB>44</SUB>>", "259": "<(IDENTIFIER,System,System.out.println(counter / 2))<SUB>44</SUB>>", "261": "<(&lt;operator&gt;.division,counter / 2)<SUB>44</SUB>>", "263": "<(LITERAL,2,counter / 2)<SUB>44</SUB>>", "265": "<(IDENTIFIER,in,close())<SUB>45</SUB>>", "267": "<(MODIFIER,STATIC)>"}}