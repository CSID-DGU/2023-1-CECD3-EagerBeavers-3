{"edges": [["17", "19"], ["17", "141"], ["17", "142"], ["17", "143"], ["19", "20"], ["19", "21"], ["19", "22"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "37"], ["19", "43"], ["19", "53"], ["19", "69"], ["19", "70"], ["19", "73"], ["19", "89"], ["19", "136"], ["19", "139"], ["22", "23"], ["22", "24"], ["24", "25"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["41", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "87"], ["74", "75"], ["74", "86"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "118"], ["100", "101"], ["100", "116"], ["101", "102"], ["101", "115"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["118", "119"], ["118", "134"], ["119", "120"], ["119", "133"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["134", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["22", "28"], ["26", "34"], ["31", "38"], ["37", "46"], ["43", "55"], ["70", "78"], ["136", "139"], ["139", "143"], ["24", "22"], ["28", "26"], ["33", "31"], ["38", "41"], ["41", "37"], ["44", "50"], ["49", "43"], ["55", "58"], ["58", "64"], ["58", "70"], ["61", "58"], ["63", "61"], ["74", "87"], ["74", "91"], ["87", "91"], ["91", "94"], ["94", "107"], ["94", "136"], ["97", "94"], ["34", "33"], ["46", "44"], ["50", "49"], ["64", "67"], ["67", "63"], ["75", "74"], ["77", "75"], ["101", "116"], ["101", "125"], ["116", "125"], ["119", "134"], ["119", "97"], ["134", "97"], ["78", "82"], ["81", "77"], ["102", "101"], ["120", "119"], ["82", "81"], ["104", "102"], ["122", "120"], ["105", "111"], ["110", "104"], ["123", "129"], ["128", "122"], ["107", "105"], ["111", "110"], ["125", "123"], ["129", "128"], ["17", "24"], ["18", "143"], ["22", "143"], ["26", "143"], ["26", "143"], ["31", "143"], ["33", "143"], ["31", "143"], ["31", "143"], ["37", "143"], ["37", "143"], ["43", "143"], ["49", "143"], ["43", "143"], ["43", "143"], ["55", "143"], ["70", "143"], ["75", "143"], ["77", "143"], ["81", "143"], ["77", "143"], ["75", "143"], ["74", "143"], ["74", "143"], ["74", "143"], ["87", "143"], ["91", "143"], ["94", "143"], ["94", "143"], ["94", "143"], ["136", "143"], ["136", "143"], ["139", "143"], ["139", "143"], ["104", "143"], ["104", "143"], ["102", "143"], ["101", "143"], ["101", "143"], ["116", "143"], ["120", "143"], ["122", "143"], ["128", "143"], ["122", "143"], ["120", "143"], ["119", "143"], ["119", "143"], ["119", "143"], ["134", "143"], ["97", "143"], ["63", "143"], ["63", "143"], ["63", "143"], ["61", "143"], ["17", "18"], ["24", "22"], ["28", "26"], ["33", "31"], ["41", "37"], ["49", "43"], ["17", "70"], ["17", "55"], ["67", "63"], ["17", "91"], ["28", "136"], ["67", "136"], ["17", "136"], ["70", "136"], ["87", "136"], ["116", "136"], ["134", "136"], ["136", "139"], ["17", "139"], ["17", "24"], ["24", "28"], ["17", "28"], ["22", "33"], ["17", "33"], ["17", "41"], ["31", "49"], ["37", "49"], ["55", "58"], ["61", "58"], ["17", "58"], ["22", "58"], ["58", "61"], ["17", "61"], ["75", "74"], ["75", "74"], ["17", "74"], ["26", "74"], ["70", "87"], ["17", "87"], ["91", "94"], ["97", "94"], ["17", "94"], ["58", "94"], ["17", "97"], ["107", "97"], ["22", "34"], ["17", "34"], ["17", "46"], ["22", "46"], ["28", "67"], ["17", "67"], ["17", "75"], ["77", "75"], ["77", "75"], ["31", "77"], ["26", "77"], ["17", "77"], ["102", "101"], ["102", "101"], ["110", "101"], ["17", "101"], ["70", "116"], ["87", "116"], ["134", "116"], ["17", "116"], ["120", "119"], ["120", "119"], ["17", "119"], ["101", "119"], ["70", "134"], ["87", "134"], ["116", "134"], ["17", "134"], ["31", "81"], ["26", "81"], ["17", "81"], ["75", "102"], ["120", "102"], ["17", "102"], ["104", "102"], ["104", "102"], ["102", "120"], ["17", "120"], ["122", "120"], ["122", "120"], ["31", "104"], ["110", "104"], ["110", "104"], ["31", "122"], ["110", "122"], ["101", "122"], ["17", "122"], ["31", "110"], ["63", "110"], ["74", "110"], ["119", "110"], ["17", "110"], ["31", "128"], ["110", "128"], ["101", "128"], ["17", "128"], ["94", "107"], ["17", "107"], ["107", "125"], ["17", "125"], ["58", "64"], ["58", "67"], ["58", "58"], ["58", "61"], ["58", "63"], ["74", "87"], ["94", "107"], ["94", "94"], ["94", "120"], ["94", "122"], ["94", "128"], ["94", "102"], ["94", "104"], ["94", "119"], ["94", "123"], ["94", "97"], ["94", "129"], ["94", "101"], ["94", "105"], ["94", "110"], ["94", "125"], ["94", "111"], ["101", "116"], ["119", "134"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(LOCAL,int D: int)<SUB>2</SUB>>", "23": "<(IDENTIFIER,N,int N = readInt())<SUB>2</SUB>>", "25": "<(IDENTIFIER,this,readInt())<SUB>2</SUB>>", "27": "<(IDENTIFIER,D,int D = readInt())<SUB>2</SUB>>", "29": "<(IDENTIFIER,this,readInt())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,long[] arr = new long[N + 2])<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.alloc,new long[N + 2])>", "35": "<(IDENTIFIER,N,N + 2)<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.assignment,arr[0] = -3000000000L)<SUB>2</SUB>>", "39": "<(IDENTIFIER,arr,arr[0] = -3000000000L)<SUB>2</SUB>>", "41": "<(&lt;operator&gt;.minus,-3000000000L)<SUB>2</SUB>>", "43": "<(&lt;operator&gt;.assignment,arr[N + 1] = -arr[0])<SUB>2</SUB>>", "45": "<(IDENTIFIER,arr,arr[N + 1] = -arr[0])<SUB>2</SUB>>", "47": "<(IDENTIFIER,N,N + 1)<SUB>2</SUB>>", "49": "<(&lt;operator&gt;.minus,-arr[0])<SUB>2</SUB>>", "51": "<(IDENTIFIER,arr,-arr[0])<SUB>2</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= N); i++),for (int i = 1; Some(i &lt;= N); i++))<SUB>3</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>3</SUB>>", "57": "<(LITERAL,1,int i = 1)<SUB>3</SUB>>", "59": "<(IDENTIFIER,i,i &lt;= N)<SUB>3</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>3</SUB>>", "63": "<(&lt;operator&gt;.assignment,arr[i] = readInt())<SUB>3</SUB>>", "65": "<(IDENTIFIER,arr,arr[i] = readInt())<SUB>3</SUB>>", "67": "<(readInt,readInt())<SUB>3</SUB>>", "69": "<(LOCAL,int cnt: int)<SUB>4</SUB>>", "71": "<(IDENTIFIER,cnt,int cnt = 1)<SUB>4</SUB>>", "73": "<(CONTROL_STRUCTURE,if (Math.abs(arr[2] - (arr[1] + D)) &gt;= D),if (Math.abs(arr[2] - (arr[1] + D)) &gt;= D))<SUB>4</SUB>>", "75": "<(abs,Math.abs(arr[2] - (arr[1] + D)))<SUB>4</SUB>>", "77": "<(&lt;operator&gt;.subtraction,arr[2] - (arr[1] + D))<SUB>4</SUB>>", "79": "<(IDENTIFIER,arr,arr[2] - (arr[1] + D))<SUB>4</SUB>>", "81": "<(&lt;operator&gt;.addition,arr[1] + D)<SUB>4</SUB>>", "83": "<(IDENTIFIER,arr,arr[1] + D)<SUB>4</SUB>>", "85": "<(IDENTIFIER,D,arr[1] + D)<SUB>4</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>4</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= N); i++),for (int i = 2; Some(i &lt;= N); i++))<SUB>4</SUB>>", "91": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>4</SUB>>", "93": "<(LITERAL,2,int i = 2)<SUB>4</SUB>>", "95": "<(IDENTIFIER,i,i &lt;= N)<SUB>4</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,i++)<SUB>4</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "101": "<(&lt;operator&gt;.greaterThan,Math.abs(arr[i - 1] - (arr[i] - D)) &gt; D)<SUB>5</SUB>>", "103": "<(IDENTIFIER,Math,Math.abs(arr[i - 1] - (arr[i] - D)))<SUB>5</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,arr[i - 1])<SUB>5</SUB>>", "107": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>5</SUB>>", "109": "<(LITERAL,1,i - 1)<SUB>5</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>5</SUB>>", "113": "<(IDENTIFIER,i,arr[i] - D)<SUB>5</SUB>>", "115": "<(IDENTIFIER,D,Math.abs(arr[i - 1] - (arr[i] - D)) &gt; D)<SUB>5</SUB>>", "117": "<(IDENTIFIER,cnt,cnt++)<SUB>5</SUB>>", "119": "<(&lt;operator&gt;.greaterEqualsThan,Math.abs(arr[i + 1] - (arr[i] + D)) &gt;= D)<SUB>6</SUB>>", "121": "<(IDENTIFIER,Math,Math.abs(arr[i + 1] - (arr[i] + D)))<SUB>6</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,arr[i + 1])<SUB>6</SUB>>", "125": "<(&lt;operator&gt;.addition,i + 1)<SUB>6</SUB>>", "127": "<(LITERAL,1,i + 1)<SUB>6</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>6</SUB>>", "131": "<(IDENTIFIER,i,arr[i] + D)<SUB>6</SUB>>", "133": "<(IDENTIFIER,D,Math.abs(arr[i + 1] - (arr[i] + D)) &gt;= D)<SUB>6</SUB>>", "135": "<(IDENTIFIER,cnt,cnt++)<SUB>6</SUB>>", "137": "<(IDENTIFIER,this,println(cnt))<SUB>8</SUB>>", "139": "<(exit,exit())<SUB>8</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}