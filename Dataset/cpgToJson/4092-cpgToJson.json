{"edges": [["19", "21"], ["19", "375"], ["19", "376"], ["19", "377"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "50"], ["21", "54"], ["21", "55"], ["21", "59"], ["21", "60"], ["21", "65"], ["21", "151"], ["21", "152"], ["21", "158"], ["21", "159"], ["21", "165"], ["21", "301"], ["21", "312"], ["21", "368"], ["21", "373"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "82"], ["75", "88"], ["75", "104"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "103"], ["93", "94"], ["93", "95"], ["93", "96"], ["93", "97"], ["93", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "112"], ["104", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "142"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "139"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "150"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["152", "153"], ["152", "154"], ["154", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "161"], ["161", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["165", "170"], ["165", "175"], ["165", "177"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "199"], ["177", "214"], ["177", "223"], ["179", "180"], ["179", "183"], ["179", "186"], ["179", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "211"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "231"], ["223", "233"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["233", "244"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["242", "243"], ["244", "245"], ["244", "266"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "261"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "288"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "283"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "280"], ["275", "276"], ["275", "277"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "305"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "311"], ["308", "309"], ["308", "310"], ["312", "313"], ["312", "314"], ["312", "321"], ["312", "324"], ["312", "329"], ["314", "315"], ["314", "316"], ["316", "317"], ["316", "320"], ["317", "318"], ["317", "319"], ["321", "322"], ["321", "323"], ["324", "325"], ["324", "326"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "335"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["335", "336"], ["335", "337"], ["335", "340"], ["335", "343"], ["335", "345"], ["337", "338"], ["337", "339"], ["340", "341"], ["340", "342"], ["343", "344"], ["345", "346"], ["346", "347"], ["346", "358"], ["347", "348"], ["347", "357"], ["348", "349"], ["348", "354"], ["349", "350"], ["349", "351"], ["351", "352"], ["351", "353"], ["354", "355"], ["354", "356"], ["358", "359"], ["359", "360"], ["359", "363"], ["360", "361"], ["360", "362"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["368", "369"], ["368", "372"], ["369", "370"], ["369", "371"], ["373", "374"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "52"], ["50", "57"], ["55", "62"], ["60", "67"], ["152", "162"], ["159", "167"], ["301", "317"], ["368", "373"], ["373", "377"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["62", "60"], ["67", "70"], ["70", "77"], ["70", "155"], ["73", "70"], ["154", "152"], ["161", "159"], ["167", "172"], ["170", "180"], ["170", "304"], ["175", "172"], ["302", "308"], ["305", "301"], ["314", "321"], ["321", "333"], ["321", "371"], ["324", "321"], ["369", "368"], ["28", "26"], ["76", "83"], ["82", "89"], ["88", "106"], ["155", "154"], ["162", "161"], ["172", "170"], ["199", "215"], ["214", "225"], ["304", "302"], ["307", "305"], ["316", "314"], ["326", "324"], ["330", "337"], ["371", "369"], ["77", "80"], ["80", "76"], ["83", "86"], ["86", "82"], ["89", "97"], ["92", "88"], ["106", "109"], ["109", "117"], ["109", "73"], ["112", "109"], ["180", "183"], ["183", "193"], ["183", "200"], ["186", "183"], ["200", "208"], ["203", "199"], ["215", "220"], ["218", "214"], ["225", "228"], ["228", "238"], ["228", "175"], ["231", "228"], ["308", "307"], ["317", "316"], ["331", "330"], ["337", "340"], ["340", "351"], ["340", "326"], ["343", "340"], ["93", "92"], ["115", "112"], ["204", "211"], ["211", "203"], ["220", "218"], ["333", "331"], ["97", "100"], ["100", "93"], ["116", "123"], ["121", "115"], ["190", "200"], ["190", "186"], ["206", "204"], ["235", "231"], ["235", "246"], ["245", "268"], ["245", "231"], ["347", "362"], ["347", "343"], ["117", "116"], ["122", "130"], ["127", "121"], ["191", "190"], ["208", "206"], ["236", "235"], ["246", "255"], ["249", "245"], ["267", "289"], ["288", "231"], ["348", "347"], ["359", "343"], ["123", "122"], ["128", "144"], ["142", "127"], ["193", "191"], ["238", "236"], ["250", "262"], ["261", "249"], ["268", "277"], ["271", "267"], ["289", "295"], ["292", "288"], ["349", "354"], ["354", "348"], ["360", "364"], ["363", "359"], ["130", "133"], ["133", "136"], ["136", "139"], ["139", "128"], ["143", "142"], ["252", "250"], ["262", "261"], ["272", "284"], ["283", "271"], ["293", "298"], ["298", "292"], ["351", "349"], ["362", "360"], ["364", "363"], ["144", "147"], ["147", "143"], ["253", "258"], ["258", "252"], ["274", "272"], ["284", "283"], ["295", "293"], ["255", "253"], ["275", "280"], ["280", "274"], ["277", "275"], ["19", "24"], ["20", "377"], ["22", "377"], ["25", "377"], ["25", "377"], ["30", "377"], ["30", "377"], ["35", "377"], ["35", "377"], ["40", "377"], ["40", "377"], ["45", "377"], ["45", "377"], ["50", "377"], ["50", "377"], ["55", "377"], ["55", "377"], ["55", "377"], ["60", "377"], ["60", "377"], ["60", "377"], ["67", "377"], ["70", "377"], ["70", "377"], ["152", "377"], ["152", "377"], ["159", "377"], ["159", "377"], ["159", "377"], ["167", "377"], ["170", "377"], ["301", "377"], ["301", "377"], ["317", "377"], ["316", "377"], ["314", "377"], ["314", "377"], ["321", "377"], ["321", "377"], ["368", "377"], ["373", "377"], ["373", "377"], ["330", "377"], ["337", "377"], ["340", "377"], ["340", "377"], ["340", "377"], ["324", "377"], ["324", "377"], ["348", "377"], ["348", "377"], ["347", "377"], ["347", "377"], ["363", "377"], ["359", "377"], ["359", "377"], ["343", "377"], ["180", "377"], ["183", "377"], ["190", "377"], ["190", "377"], ["186", "377"], ["199", "377"], ["203", "377"], ["203", "377"], ["199", "377"], ["199", "377"], ["214", "377"], ["220", "377"], ["218", "377"], ["214", "377"], ["214", "377"], ["225", "377"], ["228", "377"], ["228", "377"], ["175", "377"], ["236", "377"], ["235", "377"], ["235", "377"], ["245", "377"], ["255", "377"], ["253", "377"], ["252", "377"], ["252", "377"], ["249", "377"], ["249", "377"], ["245", "377"], ["245", "377"], ["267", "377"], ["271", "377"], ["271", "377"], ["267", "377"], ["267", "377"], ["288", "377"], ["295", "377"], ["293", "377"], ["292", "377"], ["292", "377"], ["288", "377"], ["288", "377"], ["231", "377"], ["76", "377"], ["82", "377"], ["82", "377"], ["88", "377"], ["93", "377"], ["93", "377"], ["93", "377"], ["93", "377"], ["93", "377"], ["92", "377"], ["88", "377"], ["88", "377"], ["106", "377"], ["109", "377"], ["109", "377"], ["73", "377"], ["115", "377"], ["121", "377"], ["128", "377"], ["128", "377"], ["128", "377"], ["128", "377"], ["128", "377"], ["127", "377"], ["143", "377"], ["143", "377"], ["142", "377"], ["127", "377"], ["121", "377"], ["115", "377"], ["115", "377"], ["112", "377"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["62", "60"], ["154", "152"], ["161", "159"], ["22", "25"], ["19", "25"], ["19", "67"], ["19", "167"], ["152", "301"], ["316", "314"], ["316", "314"], ["159", "324"], ["349", "324"], ["214", "324"], ["288", "324"], ["301", "368"], ["330", "368"], ["359", "368"], ["19", "368"], ["42", "373"], ["86", "373"], ["19", "373"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["40", "47"], ["19", "47"], ["47", "52"], ["19", "52"], ["52", "57"], ["19", "57"], ["57", "62"], ["19", "62"], ["67", "70"], ["73", "70"], ["19", "70"], ["62", "70"], ["109", "73"], ["19", "73"], ["80", "76"], ["86", "82"], ["92", "88"], ["92", "88"], ["155", "154"], ["155", "154"], ["162", "161"], ["162", "161"], ["167", "170"], ["175", "170"], ["19", "170"], ["172", "170"], ["172", "170"], ["218", "175"], ["236", "175"], ["253", "175"], ["293", "175"], ["19", "175"], ["152", "199"], ["55", "199"], ["88", "199"], ["218", "214"], ["218", "214"], ["314", "321"], ["324", "321"], ["19", "321"], ["19", "106"], ["19", "155"], ["70", "155"], ["19", "162"], ["155", "162"], ["19", "172"], ["162", "172"], ["228", "172"], ["19", "180"], ["19", "225"], ["308", "307"], ["308", "307"], ["19", "307"], ["317", "316"], ["317", "316"], ["19", "316"], ["301", "330"], ["359", "330"], ["19", "330"], ["19", "337"], ["42", "80"], ["86", "80"], ["19", "80"], ["80", "86"], ["19", "86"], ["93", "92"], ["93", "92"], ["93", "92"], ["93", "92"], ["93", "92"], ["19", "92"], ["106", "109"], ["112", "109"], ["19", "109"], ["70", "109"], ["109", "112"], ["19", "112"], ["121", "115"], ["128", "115"], ["128", "115"], ["128", "115"], ["128", "115"], ["128", "115"], ["142", "115"], ["142", "115"], ["180", "183"], ["186", "183"], ["19", "183"], ["172", "183"], ["193", "186"], ["19", "186"], ["152", "203"], ["55", "203"], ["88", "203"], ["206", "218"], ["19", "218"], ["220", "218"], ["220", "218"], ["225", "228"], ["231", "228"], ["19", "228"], ["183", "228"], ["238", "231"], ["258", "231"], ["298", "231"], ["19", "231"], ["19", "308"], ["172", "308"], ["19", "317"], ["308", "317"], ["337", "340"], ["343", "340"], ["19", "340"], ["317", "340"], ["354", "343"], ["19", "343"], ["128", "93"], ["19", "93"], ["30", "93"], ["35", "93"], ["45", "93"], ["76", "93"], ["50", "93"], ["82", "93"], ["19", "220"], ["208", "220"], ["128", "121"], ["128", "121"], ["128", "121"], ["128", "121"], ["128", "121"], ["142", "121"], ["142", "121"], ["191", "190"], ["191", "190"], ["19", "190"], ["170", "206"], ["191", "206"], ["19", "206"], ["208", "206"], ["208", "206"], ["236", "235"], ["236", "235"], ["19", "235"], ["152", "245"], ["199", "245"], ["267", "245"], ["115", "245"], ["152", "267"], ["292", "288"], ["292", "288"], ["348", "347"], ["348", "347"], ["19", "347"], ["128", "127"], ["128", "127"], ["128", "127"], ["128", "127"], ["128", "127"], ["142", "127"], ["142", "127"], ["170", "191"], ["19", "191"], ["193", "191"], ["193", "191"], ["19", "208"], ["183", "208"], ["193", "208"], ["218", "236"], ["253", "236"], ["293", "236"], ["19", "236"], ["238", "236"], ["238", "236"], ["152", "249"], ["115", "249"], ["349", "348"], ["349", "348"], ["354", "348"], ["354", "348"], ["330", "359"], ["354", "359"], ["19", "359"], ["93", "128"], ["19", "128"], ["45", "128"], ["93", "128"], ["50", "128"], ["93", "128"], ["55", "142"], ["88", "142"], ["19", "142"], ["19", "193"], ["183", "193"], ["19", "238"], ["228", "238"], ["152", "271"], ["293", "292"], ["293", "292"], ["298", "292"], ["298", "292"], ["321", "349"], ["19", "349"], ["159", "349"], ["214", "349"], ["288", "349"], ["19", "354"], ["340", "354"], ["354", "363"], ["19", "363"], ["55", "143"], ["88", "143"], ["253", "252"], ["253", "252"], ["258", "252"], ["258", "252"], ["275", "293"], ["19", "293"], ["295", "293"], ["295", "293"], ["19", "298"], ["280", "298"], ["354", "364"], ["19", "364"], ["236", "253"], ["19", "253"], ["255", "253"], ["255", "253"], ["19", "258"], ["238", "258"], ["275", "274"], ["275", "274"], ["280", "274"], ["280", "274"], ["19", "295"], ["277", "295"], ["19", "255"], ["220", "255"], ["295", "255"], ["253", "275"], ["19", "275"], ["277", "275"], ["277", "275"], ["19", "280"], ["258", "280"], ["19", "277"], ["255", "277"], ["70", "76"], ["70", "93"], ["70", "80"], ["70", "100"], ["70", "88"], ["70", "70"], ["70", "86"], ["70", "109"], ["70", "73"], ["70", "77"], ["70", "92"], ["70", "97"], ["70", "89"], ["70", "106"], ["70", "82"], ["70", "83"], ["170", "214"], ["170", "215"], ["170", "228"], ["170", "204"], ["170", "170"], ["170", "206"], ["170", "208"], ["170", "180"], ["170", "200"], ["170", "199"], ["170", "172"], ["170", "225"], ["170", "183"], ["170", "220"], ["170", "211"], ["170", "175"], ["170", "203"], ["170", "218"], ["321", "326"], ["321", "324"], ["321", "340"], ["321", "321"], ["321", "337"], ["321", "333"], ["321", "330"], ["321", "331"], ["109", "136"], ["109", "128"], ["109", "112"], ["109", "127"], ["109", "116"], ["109", "122"], ["109", "123"], ["109", "147"], ["109", "117"], ["109", "109"], ["109", "133"], ["109", "115"], ["109", "121"], ["109", "144"], ["109", "130"], ["109", "139"], ["109", "142"], ["109", "143"], ["183", "190"], ["183", "191"], ["183", "193"], ["228", "228"], ["228", "238"], ["228", "236"], ["228", "231"], ["228", "235"], ["340", "349"], ["340", "340"], ["340", "348"], ["340", "347"], ["340", "351"], ["340", "343"], ["340", "354"], ["190", "186"], ["190", "183"], ["235", "262"], ["235", "258"], ["235", "249"], ["235", "253"], ["235", "261"], ["235", "245"], ["235", "255"], ["235", "246"], ["235", "252"], ["235", "250"], ["245", "272"], ["245", "292"], ["245", "283"], ["245", "298"], ["245", "288"], ["245", "268"], ["245", "274"], ["245", "275"], ["245", "284"], ["245", "289"], ["245", "293"], ["245", "267"], ["245", "280"], ["245", "295"], ["245", "277"], ["245", "271"], ["347", "362"], ["347", "364"], ["347", "360"], ["347", "359"], ["347", "363"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int ox: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,ox,int ox = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int oy = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int n: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] ix = new int[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(LOCAL,int[] iy: int[])<SUB>7</SUB>>", "51": "<(IDENTIFIER,iy,int[] iy = new int[n])<SUB>7</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] single = new int[n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n])>", "59": "<(LOCAL,int[][] pair: int[][])<SUB>9</SUB>>", "61": "<(IDENTIFIER,pair,int[][] pair = new int[n][n])<SUB>9</SUB>>", "63": "<(IDENTIFIER,n,new int[n][n])<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,ix[i])<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,ix[i] = nextInt())<SUB>11</SUB>>", "81": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,iy[i])<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,iy[i] = nextInt())<SUB>12</SUB>>", "87": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,single[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,single[i] = dis(ox, oy, ix[i], iy[i]) * 2)<SUB>13</SUB>>", "93": "<(dis,dis(ox, oy, ix[i], iy[i]))<SUB>13</SUB>>", "95": "<(IDENTIFIER,ox,dis(ox, oy, ix[i], iy[i]))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,ix[i])<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,dis(ox, oy, ix[i], iy[i]))<SUB>13</SUB>>", "101": "<(IDENTIFIER,iy,dis(ox, oy, ix[i], iy[i]))<SUB>13</SUB>>", "103": "<(LITERAL,2,dis(ox, oy, ix[i], iy[i]) * 2)<SUB>13</SUB>>", "105": "<(LOCAL,int j: int)<SUB>14</SUB>>", "107": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,j &lt; i)<SUB>14</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.assignment,pair[i][j] = pair[j][i] = dis(ix[i], iy[i], ix[j], iy[j]) + (single[i] + single[j]) / 2)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,pair[i])<SUB>15</SUB>>", "119": "<(IDENTIFIER,i,pair[i][j] = pair[j][i] = dis(ix[i], iy[i], ix[j], iy[j]) + (single[i] + single[j]) / 2)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.assignment,pair[j][i] = dis(ix[i], iy[i], ix[j], iy[j]) + (single[i] + single[j]) / 2)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,pair[j])<SUB>15</SUB>>", "125": "<(IDENTIFIER,j,pair[j][i] = dis(ix[i], iy[i], ix[j], iy[j]) + (single[i] + single[j]) / 2)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.addition,dis(ix[i], iy[i], ix[j], iy[j]) + (single[i] + single[j]) / 2)<SUB>15</SUB>>", "129": "<(IDENTIFIER,this,dis(ix[i], iy[i], ix[j], iy[j]))<SUB>15</SUB>>", "131": "<(IDENTIFIER,ix,dis(ix[i], iy[i], ix[j], iy[j]))<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,iy[i])<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,dis(ix[i], iy[i], ix[j], iy[j]))<SUB>15</SUB>>", "137": "<(IDENTIFIER,ix,dis(ix[i], iy[i], ix[j], iy[j]))<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,iy[j])<SUB>15</SUB>>", "141": "<(IDENTIFIER,j,dis(ix[i], iy[i], ix[j], iy[j]))<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.addition,single[i] + single[j])<SUB>15</SUB>>", "145": "<(IDENTIFIER,single,single[i] + single[j])<SUB>15</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,single[j])<SUB>15</SUB>>", "149": "<(IDENTIFIER,j,single[i] + single[j])<SUB>15</SUB>>", "151": "<(LOCAL,int[] min: int[])<SUB>18</SUB>>", "153": "<(IDENTIFIER,min,int[] min = new int[1 &lt;&lt; n])<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>18</SUB>>", "157": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>18</SUB>>", "159": "<(&lt;operator&gt;.assignment,int[] pre = new int[1 &lt;&lt; n])<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "163": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "165": "<(CONTROL_STRUCTURE,for (int set = 1; Some(set &lt; 1 &lt;&lt; n); set++),for (int set = 1; Some(set &lt; 1 &lt;&lt; n); set++))<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.assignment,int set = 1)<SUB>20</SUB>>", "169": "<(LITERAL,1,int set = 1)<SUB>20</SUB>>", "171": "<(IDENTIFIER,set,set &lt; 1 &lt;&lt; n)<SUB>20</SUB>>", "173": "<(LITERAL,1,1 &lt;&lt; n)<SUB>20</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,set++)<SUB>20</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "179": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "181": "<(IDENTIFIER,i,i = 0)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "185": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "187": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "189": "<(CONTROL_STRUCTURE,if ((set &amp; (1 &lt;&lt; i)) != 0),if ((set &amp; (1 &lt;&lt; i)) != 0))<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.and,set &amp; (1 &lt;&lt; i))<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>23</SUB>>", "195": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>23</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.assignment,min[set] = min[set ^ (1 &lt;&lt; i)] + single[i])<SUB>27</SUB>>", "201": "<(IDENTIFIER,min,min[set] = min[set ^ (1 &lt;&lt; i)] + single[i])<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.addition,min[set ^ (1 &lt;&lt; i)] + single[i])<SUB>27</SUB>>", "205": "<(IDENTIFIER,min,min[set ^ (1 &lt;&lt; i)] + single[i])<SUB>27</SUB>>", "207": "<(IDENTIFIER,set,set ^ (1 &lt;&lt; i))<SUB>27</SUB>>", "209": "<(LITERAL,1,1 &lt;&lt; i)<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,single[i])<SUB>27</SUB>>", "213": "<(IDENTIFIER,i,min[set ^ (1 &lt;&lt; i)] + single[i])<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,pre[set])<SUB>28</SUB>>", "217": "<(IDENTIFIER,set,pre[set] = set ^ (1 &lt;&lt; i))<SUB>28</SUB>>", "219": "<(IDENTIFIER,set,set ^ (1 &lt;&lt; i))<SUB>28</SUB>>", "221": "<(LITERAL,1,1 &lt;&lt; i)<SUB>28</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>29</SUB>>", "227": "<(LITERAL,0,int j = 0)<SUB>29</SUB>>", "229": "<(IDENTIFIER,j,j &lt; n)<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.equals,(set &amp; (1 &lt;&lt; j)) == 0)<SUB>30</SUB>>", "237": "<(IDENTIFIER,set,set &amp; (1 &lt;&lt; j))<SUB>30</SUB>>", "239": "<(LITERAL,1,1 &lt;&lt; j)<SUB>30</SUB>>", "241": "<(LITERAL,0,(set &amp; (1 &lt;&lt; j)) == 0)<SUB>30</SUB>>", "243": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>31</SUB>>", "245": "<(&lt;operator&gt;.greaterThan,min[set] &gt; min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "247": "<(IDENTIFIER,min,min[set] &gt; min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.addition,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "251": "<(IDENTIFIER,min,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "253": "<(&lt;operator&gt;.xor,set ^ (1 &lt;&lt; i))<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>33</SUB>>", "257": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>33</SUB>>", "259": "<(LITERAL,1,1 &lt;&lt; j)<SUB>33</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,pair[i][j])<SUB>33</SUB>>", "263": "<(IDENTIFIER,pair,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "265": "<(IDENTIFIER,j,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>33</SUB>>", "267": "<(&lt;operator&gt;.assignment,min[set] = min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "269": "<(IDENTIFIER,min,min[set] = min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "271": "<(&lt;operator&gt;.addition,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "273": "<(IDENTIFIER,min,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "275": "<(&lt;operator&gt;.xor,set ^ (1 &lt;&lt; i))<SUB>34</SUB>>", "277": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>34</SUB>>", "279": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>34</SUB>>", "281": "<(LITERAL,1,1 &lt;&lt; j)<SUB>34</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,pair[i][j])<SUB>34</SUB>>", "285": "<(IDENTIFIER,pair,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "287": "<(IDENTIFIER,j,min[set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)] + pair[i][j])<SUB>34</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,pre[set])<SUB>35</SUB>>", "291": "<(IDENTIFIER,set,pre[set] = set ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j))<SUB>35</SUB>>", "293": "<(&lt;operator&gt;.xor,set ^ (1 &lt;&lt; i))<SUB>35</SUB>>", "295": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>35</SUB>>", "297": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>35</SUB>>", "299": "<(LITERAL,1,1 &lt;&lt; j)<SUB>35</SUB>>", "301": "<(println,System.out.println(min[(1 &lt;&lt; n) - 1]))<SUB>39</SUB>>", "303": "<(IDENTIFIER,System,System.out.println(min[(1 &lt;&lt; n) - 1]))<SUB>39</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,min[(1 &lt;&lt; n) - 1])<SUB>39</SUB>>", "307": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>39</SUB>>", "309": "<(LITERAL,1,1 &lt;&lt; n)<SUB>39</SUB>>", "311": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>39</SUB>>", "313": "<(LOCAL,int set: int)<SUB>40</SUB>>", "315": "<(IDENTIFIER,set,int set = (1 &lt;&lt; n) - 1)<SUB>40</SUB>>", "317": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>40</SUB>>", "319": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>40</SUB>>", "321": "<(&lt;operator&gt;.notEquals,set != 0)<SUB>40</SUB>>", "323": "<(LITERAL,0,set != 0)<SUB>40</SUB>>", "325": "<(IDENTIFIER,set,set = pre[set])<SUB>40</SUB>>", "327": "<(IDENTIFIER,pre,set = pre[set])<SUB>40</SUB>>", "329": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "331": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>41</SUB>>", "333": "<(FIELD_IDENTIFIER,out,out)<SUB>41</SUB>>", "335": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>42</SUB>>", "337": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>42</SUB>>", "339": "<(LITERAL,0,int i = 0)<SUB>42</SUB>>", "341": "<(IDENTIFIER,i,i &lt; n)<SUB>42</SUB>>", "343": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "345": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "347": "<(&lt;operator&gt;.notEquals,((set ^ pre[set]) &amp; (1 &lt;&lt; i)) != 0)<SUB>43</SUB>>", "349": "<(&lt;operator&gt;.xor,set ^ pre[set])<SUB>43</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,pre[set])<SUB>43</SUB>>", "353": "<(IDENTIFIER,set,set ^ pre[set])<SUB>43</SUB>>", "355": "<(LITERAL,1,1 &lt;&lt; i)<SUB>43</SUB>>", "357": "<(LITERAL,0,((set ^ pre[set]) &amp; (1 &lt;&lt; i)) != 0)<SUB>43</SUB>>", "359": "<(print,System.out.print((i + 1) + &quot; &quot;))<SUB>44</SUB>>", "361": "<(IDENTIFIER,System,System.out.print((i + 1) + &quot; &quot;))<SUB>44</SUB>>", "363": "<(&lt;operator&gt;.addition,(i + 1) + &quot; &quot;)<SUB>44</SUB>>", "365": "<(IDENTIFIER,i,i + 1)<SUB>44</SUB>>", "367": "<(LITERAL,&quot; &quot;,(i + 1) + &quot; &quot;)<SUB>44</SUB>>", "369": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>48</SUB>>", "371": "<(FIELD_IDENTIFIER,out,out)<SUB>48</SUB>>", "373": "<(close,close())<SUB>49</SUB>>", "375": "<(MODIFIER,PUBLIC)>", "377": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}