{"edges": [["31", "14"], ["31", "32"], ["31", "163"], ["31", "164"], ["31", "165"], ["32", "4"], ["32", "33"], ["32", "36"], ["32", "8"], ["32", "40"], ["32", "10"], ["32", "44"], ["32", "48"], ["32", "66"], ["32", "16"], ["32", "69"], ["32", "72"], ["32", "73"], ["32", "74"], ["32", "77"], ["32", "158"], ["33", "34"], ["33", "35"], ["36", "3"], ["36", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "12"], ["48", "49"], ["48", "52"], ["48", "55"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "64"], ["62", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "6"], ["69", "70"], ["69", "71"], ["72", "15"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "84"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "92"], ["89", "99"], ["89", "106"], ["89", "107"], ["89", "114"], ["89", "115"], ["89", "129"], ["89", "135"], ["89", "136"], ["89", "143"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "119"], ["115", "122"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "128"], ["126", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["131", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "152"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "151"], ["149", "150"], ["152", "153"], ["152", "154"], ["152", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["33", "39"], ["36", "42"], ["40", "46"], ["44", "49"], ["66", "71"], ["69", "72"], ["72", "74"], ["74", "81"], ["158", "165"], ["35", "33"], ["37", "36"], ["42", "40"], ["46", "44"], ["49", "52"], ["52", "58"], ["52", "6"], ["55", "52"], ["57", "55"], ["6", "66"], ["71", "69"], ["79", "84"], ["84", "95"], ["84", "161"], ["87", "84"], ["159", "158"], ["39", "37"], ["58", "62"], ["61", "57"], ["81", "79"], ["92", "102"], ["99", "111"], ["107", "116"], ["129", "140"], ["136", "145"], ["161", "159"], ["62", "64"], ["64", "61"], ["94", "92"], ["101", "99"], ["109", "107"], ["116", "119"], ["116", "126"], ["119", "131"], ["131", "129"], ["138", "136"], ["144", "154"], ["144", "87"], ["152", "87"], ["95", "94"], ["102", "101"], ["111", "109"], ["123", "131"], ["140", "138"], ["145", "144"], ["145", "149"], ["148", "144"], ["154", "152"], ["125", "123"], ["149", "148"], ["126", "125"], ["31", "35"], ["14", "165"], ["33", "165"], ["36", "165"], ["36", "165"], ["42", "165"], ["40", "165"], ["40", "165"], ["44", "165"], ["44", "165"], ["49", "165"], ["52", "165"], ["66", "165"], ["66", "165"], ["69", "165"], ["72", "165"], ["72", "165"], ["74", "165"], ["81", "165"], ["79", "165"], ["79", "165"], ["84", "165"], ["84", "165"], ["158", "165"], ["158", "165"], ["158", "165"], ["92", "165"], ["92", "165"], ["99", "165"], ["99", "165"], ["109", "165"], ["107", "165"], ["107", "165"], ["116", "165"], ["116", "165"], ["126", "165"], ["125", "165"], ["123", "165"], ["123", "165"], ["119", "165"], ["131", "165"], ["129", "165"], ["129", "165"], ["138", "165"], ["140", "165"], ["140", "165"], ["138", "165"], ["136", "165"], ["136", "165"], ["145", "165"], ["144", "165"], ["149", "165"], ["148", "165"], ["148", "165"], ["144", "165"], ["144", "165"], ["152", "165"], ["154", "165"], ["154", "165"], ["152", "165"], ["152", "165"], ["152", "165"], ["87", "165"], ["57", "165"], ["61", "165"], ["64", "165"], ["57", "165"], ["57", "165"], ["55", "165"], ["66", "165"], ["131", "165"], ["31", "14"], ["31", "33"], ["42", "40"], ["46", "44"], ["31", "69"], ["31", "74"], ["33", "36"], ["31", "36"], ["31", "49"], ["61", "57"], ["31", "66"], ["44", "66"], ["57", "66"], ["69", "72"], ["31", "72"], ["81", "79"], ["81", "79"], ["74", "158"], ["129", "158"], ["31", "158"], ["36", "42"], ["31", "42"], ["40", "46"], ["31", "46"], ["49", "52"], ["55", "52"], ["31", "52"], ["46", "52"], ["52", "55"], ["31", "55"], ["79", "84"], ["87", "84"], ["31", "84"], ["84", "87"], ["31", "87"], ["109", "107"], ["109", "107"], ["131", "129"], ["131", "129"], ["131", "129"], ["138", "136"], ["138", "136"], ["62", "61"], ["64", "61"], ["52", "81"], ["31", "81"], ["31", "119"], ["42", "62"], ["64", "62"], ["31", "62"], ["62", "64"], ["31", "64"], ["72", "109"], ["138", "109"], ["152", "109"], ["31", "109"], ["92", "109"], ["99", "109"], ["107", "116"], ["31", "116"], ["126", "123"], ["31", "123"], ["31", "131"], ["74", "131"], ["129", "131"], ["123", "131"], ["119", "131"], ["109", "138"], ["31", "138"], ["140", "138"], ["140", "138"], ["145", "144"], ["145", "144"], ["148", "144"], ["148", "144"], ["138", "152"], ["31", "152"], ["154", "152"], ["154", "152"], ["131", "152"], ["148", "152"], ["92", "111"], ["31", "111"], ["99", "111"], ["31", "140"], ["92", "140"], ["99", "140"], ["136", "145"], ["31", "145"], ["149", "148"], ["131", "148"], ["31", "148"], ["140", "154"], ["31", "154"], ["140", "154"], ["126", "125"], ["31", "125"], ["145", "149"], ["31", "149"], ["116", "126"], ["31", "126"], ["52", "64"], ["52", "57"], ["52", "52"], ["52", "58"], ["52", "61"], ["52", "55"], ["52", "62"], ["84", "107"], ["84", "94"], ["84", "136"], ["84", "116"], ["84", "145"], ["84", "99"], ["84", "84"], ["84", "102"], ["84", "131"], ["84", "95"], ["84", "92"], ["84", "87"], ["84", "144"], ["84", "129"], ["84", "138"], ["84", "140"], ["84", "101"], ["84", "111"], ["84", "109"], ["116", "119"], ["116", "123"], ["116", "126"], ["116", "125"], ["144", "154"], ["144", "152"], ["145", "149"], ["145", "148"]], "features": {"31": "<(METHOD,main)<SUB>1</SUB>>", "32": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "8": "<(LOCAL,int n: int)<SUB>3</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.assignment,int[][] point = new int[n][])<SUB>4</SUB>>", "46": "<(&lt;operator&gt;.alloc,new int[n][])>", "48": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.assignment,point[i] = new int[] { sc.nextInt(), sc.nextInt() })<SUB>5</SUB>>", "59": "<(IDENTIFIER,point,point[i] = new int[] { sc.nextInt(), sc.nextInt() })<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.arrayInitializer,new int[] { sc.nextInt(), sc.nextInt() })<SUB>5</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "67": "<(IDENTIFIER,Arrays,sort(point, &lt;lambda&gt;))<SUB>6</SUB>>", "6": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(2),sort(point, &lt;lambda&gt;))>", "69": "<(&lt;operator&gt;.assignment,ANY tm = new TreeMap&lt;&gt;())<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.alloc,new TreeMap&lt;&gt;())<SUB>7</SUB>>", "15": "<(IDENTIFIER,tm,new TreeMap&lt;&gt;())<SUB>7</SUB>>", "74": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>8</SUB>>", "76": "<(LITERAL,0,int ans = 0)<SUB>8</SUB>>", "78": "<(LOCAL,int i: int)<SUB>9</SUB>>", "80": "<(IDENTIFIER,i,int i = n - 1)<SUB>9</SUB>>", "82": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "84": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>9</SUB>>", "86": "<(LITERAL,0,i &gt;= 0)<SUB>9</SUB>>", "88": "<(IDENTIFIER,i,i--)<SUB>9</SUB>>", "90": "<(LOCAL,int x: int)<SUB>10</SUB>>", "92": "<(&lt;operator&gt;.assignment,int x = point[i][0])<SUB>10</SUB>>", "94": "<(&lt;operator&gt;.indexAccess,point[i][0])<SUB>10</SUB>>", "96": "<(IDENTIFIER,point,int x = point[i][0])<SUB>10</SUB>>", "98": "<(LITERAL,0,int x = point[i][0])<SUB>10</SUB>>", "100": "<(IDENTIFIER,w,int w = point[i][1])<SUB>10</SUB>>", "102": "<(&lt;operator&gt;.indexAccess,point[i])<SUB>10</SUB>>", "104": "<(IDENTIFIER,i,int w = point[i][1])<SUB>10</SUB>>", "106": "<(LOCAL,Map.Entry&lt;Integer, Integer&gt; cur: ANY)<SUB>11</SUB>>", "108": "<(IDENTIFIER,cur,ANY cur = ceilingEntry(x + w))<SUB>11</SUB>>", "110": "<(IDENTIFIER,tm,ceilingEntry(x + w))<SUB>11</SUB>>", "112": "<(IDENTIFIER,x,x + w)<SUB>11</SUB>>", "114": "<(LOCAL,int curRes: int)<SUB>12</SUB>>", "116": "<(&lt;operator&gt;.equals,cur == null)<SUB>13</SUB>>", "118": "<(LITERAL,null,cur == null)<SUB>13</SUB>>", "120": "<(IDENTIFIER,curRes,curRes = 1)<SUB>13</SUB>>", "122": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "124": "<(IDENTIFIER,curRes,curRes = cur.getValue() + 1)<SUB>14</SUB>>", "126": "<(getValue,getValue())<SUB>14</SUB>>", "128": "<(LITERAL,1,cur.getValue() + 1)<SUB>14</SUB>>", "130": "<(IDENTIFIER,ans,ans = Math.max(ans, curRes))<SUB>15</SUB>>", "132": "<(IDENTIFIER,Math,Math.max(ans, curRes))<SUB>15</SUB>>", "134": "<(IDENTIFIER,curRes,Math.max(ans, curRes))<SUB>15</SUB>>", "136": "<(&lt;operator&gt;.assignment,ANY upper = ceilingEntry(x - w))<SUB>16</SUB>>", "138": "<(ceilingEntry,ceilingEntry(x - w))<SUB>16</SUB>>", "140": "<(&lt;operator&gt;.subtraction,x - w)<SUB>16</SUB>>", "142": "<(IDENTIFIER,w,x - w)<SUB>16</SUB>>", "144": "<(&lt;operator&gt;.logicalOr,upper == null || upper.getValue() &lt; curRes)<SUB>17</SUB>>", "146": "<(IDENTIFIER,upper,upper == null)<SUB>17</SUB>>", "148": "<(&lt;operator&gt;.lessThan,upper.getValue() &lt; curRes)<SUB>17</SUB>>", "150": "<(IDENTIFIER,upper,getValue())<SUB>17</SUB>>", "152": "<(put,put(x - w, curRes))<SUB>17</SUB>>", "154": "<(&lt;operator&gt;.subtraction,x - w)<SUB>17</SUB>>", "156": "<(IDENTIFIER,w,x - w)<SUB>17</SUB>>", "158": "<(println,System.out.println(ans))<SUB>20</SUB>>", "160": "<(IDENTIFIER,System,System.out.println(ans))<SUB>20</SUB>>", "162": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>20</SUB>>", "164": "<(MODIFIER,STATIC)>"}}