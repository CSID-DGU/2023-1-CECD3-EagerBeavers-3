{"edges": [["22", "24"], ["22", "177"], ["22", "178"], ["22", "179"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "100"], ["24", "103"], ["24", "104"], ["24", "107"], ["24", "172"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "78"], ["74", "81"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["85", "99"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "95"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "119"], ["107", "121"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "152"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "141"], ["126", "127"], ["126", "133"], ["127", "128"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "140"], ["134", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "146"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "151"], ["147", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "158"], ["152", "161"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["159", "160"], ["161", "162"], ["162", "163"], ["162", "168"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "66"], ["100", "104"], ["104", "109"], ["172", "179"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["66", "69"], ["69", "77"], ["69", "100"], ["72", "69"], ["109", "117"], ["112", "130"], ["112", "175"], ["119", "117"], ["173", "172"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["75", "79"], ["78", "82"], ["81", "72"], ["114", "112"], ["123", "154"], ["175", "173"], ["32", "30"], ["35", "33"], ["77", "75"], ["79", "78"], ["82", "88"], ["115", "114"], ["125", "123"], ["153", "159"], ["153", "164"], ["37", "35"], ["86", "93"], ["89", "81"], ["117", "115"], ["126", "143"], ["141", "125"], ["154", "153"], ["159", "119"], ["88", "86"], ["91", "97"], ["95", "89"], ["127", "137"], ["133", "126"], ["142", "148"], ["146", "141"], ["163", "169"], ["163", "119"], ["93", "91"], ["97", "95"], ["128", "127"], ["134", "133"], ["143", "142"], ["147", "146"], ["164", "163"], ["169", "119"], ["130", "128"], ["135", "134"], ["148", "147"], ["137", "135"], ["22", "27"], ["23", "179"], ["25", "179"], ["30", "179"], ["33", "179"], ["33", "179"], ["33", "179"], ["28", "179"], ["39", "179"], ["43", "179"], ["42", "179"], ["42", "179"], ["46", "179"], ["46", "179"], ["53", "179"], ["55", "179"], ["57", "179"], ["55", "179"], ["53", "179"], ["53", "179"], ["60", "179"], ["60", "179"], ["69", "179"], ["69", "179"], ["100", "179"], ["100", "179"], ["104", "179"], ["109", "179"], ["112", "179"], ["114", "179"], ["112", "179"], ["112", "179"], ["172", "179"], ["172", "179"], ["172", "179"], ["134", "179"], ["126", "179"], ["125", "179"], ["141", "179"], ["147", "179"], ["146", "179"], ["141", "179"], ["125", "179"], ["123", "179"], ["123", "179"], ["154", "179"], ["154", "179"], ["153", "179"], ["153", "179"], ["164", "179"], ["164", "179"], ["163", "179"], ["163", "179"], ["169", "179"], ["159", "179"], ["119", "179"], ["75", "179"], ["79", "179"], ["78", "179"], ["78", "179"], ["81", "179"], ["86", "179"], ["89", "179"], ["89", "179"], ["95", "179"], ["97", "179"], ["95", "179"], ["89", "179"], ["81", "179"], ["72", "179"], ["48", "179"], ["100", "179"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["22", "104"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "66"], ["22", "100"], ["60", "100"], ["81", "100"], ["22", "109"], ["104", "172"], ["169", "172"], ["159", "172"], ["22", "172"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["66", "69"], ["72", "69"], ["22", "69"], ["62", "69"], ["69", "72"], ["22", "72"], ["22", "75"], ["86", "81"], ["89", "81"], ["22", "81"], ["109", "112"], ["119", "112"], ["22", "112"], ["114", "112"], ["114", "112"], ["22", "119"], ["112", "119"], ["125", "123"], ["125", "123"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["75", "78"], ["22", "78"], ["79", "78"], ["100", "114"], ["22", "114"], ["43", "79"], ["22", "79"], ["22", "86"], ["22", "99"], ["126", "125"], ["126", "125"], ["142", "125"], ["146", "125"], ["146", "125"], ["154", "153"], ["154", "153"], ["22", "153"], ["86", "89"], ["22", "89"], ["91", "89"], ["91", "89"], ["95", "89"], ["95", "89"], ["127", "126"], ["133", "126"], ["133", "126"], ["142", "141"], ["146", "141"], ["146", "141"], ["123", "154"], ["22", "154"], ["53", "154"], ["164", "154"], ["104", "159"], ["169", "159"], ["22", "159"], ["55", "91"], ["95", "91"], ["22", "91"], ["93", "91"], ["91", "95"], ["22", "95"], ["97", "95"], ["100", "127"], ["134", "127"], ["134", "133"], ["22", "133"], ["100", "142"], ["147", "142"], ["81", "142"], ["147", "146"], ["22", "146"], ["164", "163"], ["164", "163"], ["22", "163"], ["22", "169"], ["78", "93"], ["22", "93"], ["93", "97"], ["22", "97"], ["100", "134"], ["127", "134"], ["100", "147"], ["142", "147"], ["154", "164"], ["22", "164"], ["154", "164"], ["104", "169"], ["159", "169"], ["112", "130"], ["22", "130"], ["22", "137"], ["112", "137"], ["69", "77"], ["69", "89"], ["69", "75"], ["69", "81"], ["69", "72"], ["69", "69"], ["69", "95"], ["69", "97"], ["69", "91"], ["69", "82"], ["69", "93"], ["69", "79"], ["69", "88"], ["69", "78"], ["69", "86"], ["112", "115"], ["112", "141"], ["112", "154"], ["112", "146"], ["112", "128"], ["112", "114"], ["112", "142"], ["112", "119"], ["112", "153"], ["112", "123"], ["112", "112"], ["112", "134"], ["112", "148"], ["112", "143"], ["112", "126"], ["112", "137"], ["112", "130"], ["112", "147"], ["112", "135"], ["112", "117"], ["112", "127"], ["112", "125"], ["112", "133"], ["153", "163"], ["153", "159"], ["153", "164"], ["163", "169"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY split = new StringTokenizer(in.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,split,new StringTokenizer(in.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,in,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(split.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(split.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,double t: double)<SUB>5</SUB>>", "54": "<(IDENTIFIER,t,double t = parseDouble(split.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Double,parseDouble(split.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,split,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY xaxis = new House[n])<SUB>7</SUB>>", "62": "<(&lt;operator&gt;.alloc,new House[n])>", "64": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "68": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "70": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "72": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "74": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "76": "<(IDENTIFIER,split,split = new StringTokenizer(in.readLine()))<SUB>10</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>10</SUB>>", "79": "<(readLine,readLine())<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,xaxis[i] = new House(Double.parseDouble(split.nextToken()), Double.parseDouble(split.nextToken())))<SUB>11</SUB>>", "83": "<(IDENTIFIER,xaxis,xaxis[i] = new House(Double.parseDouble(split.nextToken()), Double.parseDouble(split.nextToken())))<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "89": "<(&lt;init&gt;,new House(Double.parseDouble(split.nextToken()), Double.parseDouble(split.nextToken())))<SUB>11</SUB>>", "91": "<(parseDouble,parseDouble(split.nextToken()))<SUB>11</SUB>>", "93": "<(nextToken,nextToken())<SUB>11</SUB>>", "95": "<(parseDouble,parseDouble(split.nextToken()))<SUB>11</SUB>>", "97": "<(nextToken,nextToken())<SUB>11</SUB>>", "99": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "101": "<(IDENTIFIER,Arrays,sort(xaxis))<SUB>13</SUB>>", "103": "<(LOCAL,int count: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,count,int count = 2)<SUB>14</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; xaxis.length - 1); i++),for (int i = 0; Some(i &lt; xaxis.length - 1); i++))<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,i &lt; xaxis.length - 1)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,xaxis.length)<SUB>15</SUB>>", "117": "<(FIELD_IDENTIFIER,length,length)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.assignment,double free = (xaxis[i + 1].getX() - xaxis[i + 1].getSize() / 2.0) - (xaxis[i].getX() + xaxis[i].getSize() / 2.0))<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.subtraction,(xaxis[i + 1].getX() - xaxis[i + 1].getSize() / 2.0) - (xaxis[i].getX() + xaxis[i].getSize() / 2.0))<SUB>16</SUB>>", "127": "<(getX,getX())<SUB>16</SUB>>", "129": "<(IDENTIFIER,xaxis,getX())<SUB>16</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.division,xaxis[i + 1].getSize() / 2.0)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,xaxis[i + 1])<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "139": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.addition,xaxis[i].getX() + xaxis[i].getSize() / 2.0)<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,xaxis[i])<SUB>16</SUB>>", "145": "<(IDENTIFIER,i,getX())<SUB>16</SUB>>", "147": "<(getSize,getSize())<SUB>16</SUB>>", "149": "<(IDENTIFIER,xaxis,getSize())<SUB>16</SUB>>", "151": "<(LITERAL,2.0,xaxis[i].getSize() / 2.0)<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.equals,free / t == 1.0)<SUB>17</SUB>>", "155": "<(IDENTIFIER,free,free / t)<SUB>17</SUB>>", "157": "<(LITERAL,1.0,free / t == 1.0)<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,count++)<SUB>18</SUB>>", "161": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.greaterThan,free / t &gt; 1.0)<SUB>19</SUB>>", "165": "<(IDENTIFIER,free,free / t)<SUB>19</SUB>>", "167": "<(LITERAL,1.0,free / t &gt; 1.0)<SUB>19</SUB>>", "169": "<(&lt;operator&gt;.assignmentPlus,count += 2)<SUB>20</SUB>>", "171": "<(LITERAL,2,count += 2)<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "175": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "177": "<(MODIFIER,PUBLIC)>", "179": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}