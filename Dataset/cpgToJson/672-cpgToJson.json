{"edges": [["19", "20"], ["19", "21"], ["19", "118"], ["19", "119"], ["19", "120"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "55"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "76"], ["65", "77"], ["65", "80"], ["65", "103"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "101"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "117"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "50"], ["44", "57"], ["47", "44"], ["49", "47"], ["57", "60"], ["60", "120"], ["60", "71"], ["63", "60"], ["28", "26"], ["50", "53"], ["53", "49"], ["67", "77"], ["77", "82"], ["69", "67"], ["82", "85"], ["85", "96"], ["85", "106"], ["88", "85"], ["104", "113"], ["104", "63"], ["70", "69"], ["106", "104"], ["110", "120"], ["71", "70"], ["92", "101"], ["92", "88"], ["101", "88"], ["111", "114"], ["114", "110"], ["94", "92"], ["113", "111"], ["95", "94"], ["96", "95"], ["19", "24"], ["20", "120"], ["22", "120"], ["25", "120"], ["25", "120"], ["32", "120"], ["30", "120"], ["30", "120"], ["35", "120"], ["35", "120"], ["35", "120"], ["57", "120"], ["60", "120"], ["60", "120"], ["60", "120"], ["67", "120"], ["70", "120"], ["69", "120"], ["67", "120"], ["67", "120"], ["77", "120"], ["82", "120"], ["85", "120"], ["85", "120"], ["104", "120"], ["104", "120"], ["104", "120"], ["63", "120"], ["92", "120"], ["95", "120"], ["94", "120"], ["92", "120"], ["92", "120"], ["101", "120"], ["88", "120"], ["49", "120"], ["53", "120"], ["49", "120"], ["49", "120"], ["47", "120"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["22", "25"], ["19", "25"], ["19", "41"], ["53", "49"], ["19", "57"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["57", "60"], ["63", "60"], ["19", "60"], ["44", "60"], ["106", "60"], ["60", "63"], ["19", "63"], ["69", "67"], ["69", "67"], ["19", "77"], ["32", "53"], ["19", "53"], ["19", "82"], ["70", "69"], ["70", "69"], ["19", "69"], ["82", "85"], ["88", "85"], ["19", "85"], ["60", "85"], ["85", "88"], ["19", "88"], ["77", "104"], ["101", "104"], ["19", "104"], ["106", "104"], ["106", "104"], ["35", "70"], ["49", "70"], ["19", "70"], ["85", "106"], ["19", "106"], ["60", "110"], ["19", "110"], ["67", "92"], ["19", "92"], ["94", "92"], ["94", "92"], ["77", "101"], ["19", "101"], ["60", "114"], ["19", "114"], ["95", "94"], ["95", "94"], ["19", "94"], ["35", "95"], ["19", "95"], ["44", "47"], ["44", "49"], ["44", "50"], ["44", "44"], ["44", "53"], ["60", "77"], ["60", "85"], ["60", "69"], ["60", "67"], ["60", "104"], ["60", "106"], ["60", "82"], ["60", "71"], ["60", "70"], ["85", "94"], ["85", "96"], ["85", "85"], ["85", "95"], ["85", "92"], ["85", "88"], ["104", "60"], ["104", "113"], ["104", "114"], ["104", "110"], ["104", "63"], ["104", "111"], ["92", "101"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,boolean x = a[i] % 2 == 0)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.equals,a[i] % 2 == 0)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,a[i] % 2)<SUB>8</SUB>>", "75": "<(LITERAL,0,a[i] % 2 == 0)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,int c = 0)<SUB>9</SUB>>", "81": "<(LOCAL,int j: int)<SUB>10</SUB>>", "83": "<(IDENTIFIER,j,int j = 0)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>10</SUB>>", "87": "<(IDENTIFIER,n,j &lt; n)<SUB>10</SUB>>", "89": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "91": "<(CONTROL_STRUCTURE,if (x != (a[j] % 2 == 0)),if (x != (a[j] % 2 == 0)))<SUB>11</SUB>>", "93": "<(IDENTIFIER,x,x != (a[j] % 2 == 0))<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.modulo,a[j] % 2)<SUB>11</SUB>>", "97": "<(IDENTIFIER,a,a[j] % 2)<SUB>11</SUB>>", "99": "<(LITERAL,2,a[j] % 2)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,c++)<SUB>12</SUB>>", "103": "<(CONTROL_STRUCTURE,if (c == n - 1),if (c == n - 1))<SUB>14</SUB>>", "105": "<(IDENTIFIER,c,c == n - 1)<SUB>14</SUB>>", "107": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "113": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "117": "<(CONTROL_STRUCTURE,break;,break;)<SUB>16</SUB>>", "119": "<(MODIFIER,STATIC)>"}}