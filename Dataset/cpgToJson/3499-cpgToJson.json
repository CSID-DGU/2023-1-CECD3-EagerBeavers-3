{"edges": [["21", "23"], ["21", "317"], ["21", "318"], ["21", "319"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "56"], ["23", "64"], ["23", "65"], ["23", "71"], ["23", "76"], ["23", "77"], ["23", "83"], ["23", "88"], ["23", "129"], ["23", "130"], ["23", "136"], ["23", "141"], ["23", "167"], ["23", "168"], ["23", "177"], ["23", "274"], ["23", "275"], ["23", "278"], ["23", "312"], ["23", "315"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "39"], ["35", "44"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["58", "63"], ["60", "61"], ["60", "62"], ["65", "66"], ["65", "67"], ["67", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "79"], ["79", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "98"], ["88", "100"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "114"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "113"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "128"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["130", "131"], ["130", "132"], ["132", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "151"], ["141", "153"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "166"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "187"], ["177", "189"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "209"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "208"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["209", "214"], ["209", "217"], ["209", "219"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["217", "218"], ["219", "220"], ["220", "221"], ["220", "222"], ["220", "227"], ["220", "230"], ["220", "232"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["232", "233"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "273"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["246", "247"], ["246", "272"], ["247", "248"], ["247", "265"], ["248", "249"], ["248", "264"], ["249", "250"], ["249", "257"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["278", "283"], ["278", "286"], ["278", "288"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["286", "287"], ["288", "289"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "311"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "310"], ["295", "296"], ["295", "303"], ["296", "297"], ["296", "302"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "301"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["312", "313"], ["312", "314"], ["315", "316"], ["24", "30"], ["27", "33"], ["31", "38"], ["34", "48"], ["46", "53"], ["51", "60"], ["56", "68"], ["65", "72"], ["71", "80"], ["77", "84"], ["83", "90"], ["130", "137"], ["136", "143"], ["168", "179"], ["275", "280"], ["312", "315"], ["315", "319"], ["26", "24"], ["28", "27"], ["33", "31"], ["48", "46"], ["53", "51"], ["58", "56"], ["67", "65"], ["72", "71"], ["79", "77"], ["84", "83"], ["90", "95"], ["93", "102"], ["93", "133"], ["98", "95"], ["132", "130"], ["137", "136"], ["143", "148"], ["146", "155"], ["146", "171"], ["151", "148"], ["170", "168"], ["179", "184"], ["182", "192"], ["182", "275"], ["187", "184"], ["280", "283"], ["283", "299"], ["283", "312"], ["286", "283"], ["30", "28"], ["36", "43"], ["39", "34"], ["60", "58"], ["68", "67"], ["80", "79"], ["95", "93"], ["101", "115"], ["114", "98"], ["133", "132"], ["148", "146"], ["154", "151"], ["171", "174"], ["174", "170"], ["184", "182"], ["190", "211"], ["289", "286"], ["38", "36"], ["41", "39"], ["102", "109"], ["105", "101"], ["115", "122"], ["118", "114"], ["155", "162"], ["158", "154"], ["191", "200"], ["196", "190"], ["211", "214"], ["214", "224"], ["214", "187"], ["217", "214"], ["291", "289"], ["43", "41"], ["106", "105"], ["119", "118"], ["159", "158"], ["192", "191"], ["197", "196"], ["292", "291"], ["107", "106"], ["120", "125"], ["125", "119"], ["160", "159"], ["198", "205"], ["203", "197"], ["222", "227"], ["227", "235"], ["227", "217"], ["230", "227"], ["294", "292"], ["109", "107"], ["122", "120"], ["162", "160"], ["200", "198"], ["205", "203"], ["224", "222"], ["233", "230"], ["295", "294"], ["234", "242"], ["239", "233"], ["296", "306"], ["303", "295"], ["235", "234"], ["240", "239"], ["297", "296"], ["305", "303"], ["241", "251"], ["246", "240"], ["299", "297"], ["306", "305"], ["242", "241"], ["247", "246"], ["248", "268"], ["265", "247"], ["249", "248"], ["267", "265"], ["250", "260"], ["257", "249"], ["268", "267"], ["251", "254"], ["254", "250"], ["259", "257"], ["260", "259"], ["21", "26"], ["22", "319"], ["24", "319"], ["27", "319"], ["27", "319"], ["31", "319"], ["36", "319"], ["39", "319"], ["39", "319"], ["39", "319"], ["34", "319"], ["46", "319"], ["46", "319"], ["53", "319"], ["51", "319"], ["51", "319"], ["56", "319"], ["58", "319"], ["56", "319"], ["56", "319"], ["65", "319"], ["65", "319"], ["71", "319"], ["71", "319"], ["77", "319"], ["77", "319"], ["77", "319"], ["83", "319"], ["83", "319"], ["93", "319"], ["130", "319"], ["130", "319"], ["130", "319"], ["136", "319"], ["136", "319"], ["143", "319"], ["146", "319"], ["146", "319"], ["168", "319"], ["170", "319"], ["168", "319"], ["168", "319"], ["179", "319"], ["182", "319"], ["182", "319"], ["182", "319"], ["275", "319"], ["280", "319"], ["283", "319"], ["283", "319"], ["283", "319"], ["312", "319"], ["312", "319"], ["315", "319"], ["315", "319"], ["295", "319"], ["305", "319"], ["295", "319"], ["294", "319"], ["292", "319"], ["291", "319"], ["291", "319"], ["289", "319"], ["289", "319"], ["286", "319"], ["190", "319"], ["197", "319"], ["197", "319"], ["196", "319"], ["196", "319"], ["190", "319"], ["190", "319"], ["211", "319"], ["187", "319"], ["222", "319"], ["222", "319"], ["227", "319"], ["227", "319"], ["217", "319"], ["233", "319"], ["249", "319"], ["249", "319"], ["248", "319"], ["247", "319"], ["267", "319"], ["247", "319"], ["246", "319"], ["240", "319"], ["239", "319"], ["239", "319"], ["233", "319"], ["233", "319"], ["230", "319"], ["154", "319"], ["159", "319"], ["158", "319"], ["158", "319"], ["154", "319"], ["154", "319"], ["151", "319"], ["101", "319"], ["106", "319"], ["105", "319"], ["101", "319"], ["101", "319"], ["114", "319"], ["119", "319"], ["119", "319"], ["118", "319"], ["118", "319"], ["114", "319"], ["114", "319"], ["98", "319"], ["58", "319"], ["21", "22"], ["21", "24"], ["21", "31"], ["48", "46"], ["53", "51"], ["58", "56"], ["58", "56"], ["58", "56"], ["67", "65"], ["21", "71"], ["79", "77"], ["21", "83"], ["132", "130"], ["21", "136"], ["170", "168"], ["21", "275"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["36", "34"], ["39", "34"], ["21", "90"], ["21", "143"], ["21", "179"], ["21", "280"], ["34", "312"], ["21", "312"], ["275", "312"], ["289", "312"], ["312", "315"], ["21", "315"], ["21", "36"], ["21", "44"], ["27", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["21", "58"], ["46", "58"], ["51", "58"], ["21", "67"], ["46", "67"], ["21", "79"], ["46", "79"], ["90", "93"], ["98", "93"], ["21", "93"], ["46", "93"], ["122", "98"], ["21", "98"], ["105", "101"], ["105", "101"], ["118", "114"], ["118", "114"], ["21", "132"], ["46", "132"], ["143", "146"], ["151", "146"], ["21", "146"], ["46", "146"], ["162", "151"], ["21", "151"], ["158", "154"], ["158", "154"], ["21", "170"], ["46", "170"], ["179", "182"], ["187", "182"], ["21", "182"], ["214", "182"], ["46", "182"], ["205", "187"], ["224", "187"], ["268", "187"], ["21", "187"], ["196", "190"], ["196", "190"], ["280", "283"], ["286", "283"], ["21", "283"], ["306", "283"], ["214", "283"], ["46", "283"], ["306", "286"], ["21", "286"], ["291", "289"], ["291", "289"], ["36", "39"], ["21", "39"], ["46", "60"], ["21", "60"], ["21", "68"], ["46", "68"], ["21", "80"], ["46", "80"], ["21", "95"], ["46", "95"], ["21", "133"], ["46", "133"], ["21", "148"], ["46", "148"], ["21", "171"], ["46", "171"], ["21", "174"], ["46", "174"], ["214", "184"], ["21", "184"], ["46", "184"], ["21", "211"], ["106", "105"], ["106", "105"], ["58", "105"], ["118", "105"], ["21", "105"], ["119", "118"], ["119", "118"], ["105", "118"], ["21", "118"], ["159", "158"], ["159", "158"], ["58", "158"], ["118", "158"], ["21", "158"], ["197", "196"], ["197", "196"], ["58", "196"], ["239", "196"], ["158", "196"], ["118", "196"], ["21", "196"], ["211", "214"], ["217", "214"], ["21", "214"], ["46", "214"], ["214", "217"], ["254", "217"], ["21", "217"], ["275", "291"], ["289", "291"], ["21", "291"], ["294", "291"], ["294", "291"], ["65", "106"], ["109", "106"], ["21", "106"], ["77", "119"], ["56", "119"], ["130", "159"], ["21", "159"], ["77", "197"], ["119", "197"], ["130", "197"], ["224", "222"], ["224", "222"], ["275", "292"], ["289", "292"], ["21", "292"], ["294", "292"], ["294", "292"], ["222", "227"], ["230", "227"], ["21", "227"], ["268", "230"], ["21", "230"], ["239", "233"], ["239", "233"], ["295", "294"], ["295", "294"], ["58", "294"], ["291", "294"], ["196", "294"], ["239", "294"], ["158", "294"], ["118", "294"], ["21", "294"], ["93", "109"], ["21", "109"], ["106", "122"], ["21", "122"], ["146", "162"], ["21", "162"], ["182", "200"], ["21", "200"], ["200", "205"], ["21", "205"], ["205", "224"], ["268", "224"], ["21", "224"], ["65", "295"], ["233", "239"], ["246", "239"], ["246", "239"], ["21", "239"], ["233", "240"], ["246", "240"], ["246", "240"], ["306", "305"], ["306", "305"], ["21", "305"], ["247", "246"], ["247", "246"], ["248", "246"], ["21", "246"], ["283", "299"], ["21", "299"], ["21", "306"], ["283", "306"], ["283", "306"], ["248", "247"], ["248", "247"], ["77", "247"], ["249", "248"], ["249", "248"], ["196", "248"], ["239", "248"], ["21", "248"], ["130", "249"], ["268", "267"], ["268", "267"], ["21", "267"], ["260", "268"], ["21", "268"], ["260", "268"], ["214", "254"], ["21", "254"], ["260", "259"], ["260", "259"], ["21", "259"], ["224", "260"], ["268", "260"], ["21", "260"], ["227", "260"], ["93", "107"], ["93", "115"], ["93", "98"], ["93", "120"], ["93", "102"], ["93", "114"], ["93", "119"], ["93", "95"], ["93", "93"], ["93", "101"], ["93", "118"], ["93", "122"], ["93", "106"], ["93", "105"], ["93", "125"], ["93", "109"], ["146", "154"], ["146", "146"], ["146", "151"], ["146", "162"], ["146", "148"], ["146", "155"], ["146", "158"], ["146", "160"], ["146", "159"], ["182", "214"], ["182", "192"], ["182", "196"], ["182", "197"], ["182", "198"], ["182", "191"], ["182", "187"], ["182", "190"], ["182", "184"], ["182", "182"], ["182", "205"], ["182", "200"], ["182", "211"], ["182", "203"], ["283", "292"], ["283", "283"], ["283", "291"], ["283", "306"], ["283", "289"], ["283", "296"], ["283", "286"], ["283", "295"], ["283", "299"], ["283", "294"], ["283", "305"], ["283", "303"], ["283", "297"], ["214", "214"], ["214", "224"], ["214", "217"], ["214", "227"], ["214", "222"], ["227", "230"], ["227", "240"], ["227", "257"], ["227", "247"], ["227", "242"], ["227", "259"], ["227", "246"], ["227", "267"], ["227", "268"], ["227", "233"], ["227", "249"], ["227", "265"], ["227", "239"], ["227", "235"], ["227", "260"], ["227", "251"], ["227", "234"], ["227", "254"], ["227", "241"], ["227", "248"], ["227", "227"], ["227", "250"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>5</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>5</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>5</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>5</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>6</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>6</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>6</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "37": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "39": "<(&lt;init&gt;,new BufferedOutputStream(System.out))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "43": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "45": "<(LOCAL,int n: int)<SUB>9</SUB>>", "47": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "49": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,long mod = nextLong())<SUB>10</SUB>>", "53": "<(nextLong,nextLong())<SUB>10</SUB>>", "55": "<(LOCAL,long[] invs: long[])<SUB>11</SUB>>", "57": "<(IDENTIFIER,invs,long[] invs = allInvs(n + 3, mod))<SUB>11</SUB>>", "59": "<(IDENTIFIER,this,allInvs(n + 3, mod))<SUB>11</SUB>>", "61": "<(IDENTIFIER,n,n + 3)<SUB>11</SUB>>", "63": "<(IDENTIFIER,mod,allInvs(n + 3, mod))<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,long[] facts = new long[n + 2])<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.alloc,new long[n + 2])>", "69": "<(IDENTIFIER,n,n + 2)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,facts[0] = 1)<SUB>13</SUB>>", "73": "<(IDENTIFIER,facts,facts[0] = 1)<SUB>13</SUB>>", "75": "<(LITERAL,1,facts[0] = 1)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,long[] invFacts = new long[n + 2])<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.alloc,new long[n + 2])>", "81": "<(IDENTIFIER,n,n + 2)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,invFacts[0] = 1)<SUB>15</SUB>>", "85": "<(IDENTIFIER,invFacts,invFacts[0] = 1)<SUB>15</SUB>>", "87": "<(LITERAL,1,invFacts[0] = 1)<SUB>15</SUB>>", "89": "<(LOCAL,int i: int)<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,int i = 1)<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n + 2)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.addition,n + 2)<SUB>16</SUB>>", "97": "<(LITERAL,2,n + 2)<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.assignment,facts[i] = (facts[i - 1] * i) % mod)<SUB>17</SUB>>", "103": "<(IDENTIFIER,facts,facts[i] = (facts[i - 1] * i) % mod)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.modulo,(facts[i - 1] * i) % mod)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,facts[i - 1])<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>17</SUB>>", "111": "<(LITERAL,1,i - 1)<SUB>17</SUB>>", "113": "<(IDENTIFIER,mod,(facts[i - 1] * i) % mod)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,invFacts[i])<SUB>18</SUB>>", "117": "<(IDENTIFIER,i,invFacts[i] = (invFacts[i - 1] * invs[i]) % mod)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.multiplication,invFacts[i - 1] * invs[i])<SUB>18</SUB>>", "121": "<(IDENTIFIER,invFacts,invFacts[i - 1] * invs[i])<SUB>18</SUB>>", "123": "<(IDENTIFIER,i,i - 1)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,invs[i])<SUB>18</SUB>>", "127": "<(IDENTIFIER,i,invFacts[i - 1] * invs[i])<SUB>18</SUB>>", "129": "<(LOCAL,long[] pow2: long[])<SUB>20</SUB>>", "131": "<(IDENTIFIER,pow2,long[] pow2 = new long[n + 3])<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.addition,n + 3)<SUB>20</SUB>>", "135": "<(LITERAL,3,n + 3)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,pow2[0])<SUB>21</SUB>>", "139": "<(LITERAL,0,pow2[0] = 1)<SUB>21</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n + 3); i++),for (int i = 1; Some(i &lt; n + 3); i++))<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>22</SUB>>", "145": "<(LITERAL,1,int i = 1)<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,i &lt; n + 3)<SUB>22</SUB>>", "149": "<(IDENTIFIER,n,n + 3)<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,pow2[i])<SUB>23</SUB>>", "157": "<(IDENTIFIER,i,pow2[i] = pow2[i - 1] * 2 % mod)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.multiplication,pow2[i - 1] * 2)<SUB>23</SUB>>", "161": "<(IDENTIFIER,pow2,pow2[i - 1] * 2)<SUB>23</SUB>>", "163": "<(IDENTIFIER,i,i - 1)<SUB>23</SUB>>", "165": "<(LITERAL,2,pow2[i - 1] * 2)<SUB>23</SUB>>", "167": "<(LOCAL,long[][] dp: long[][])<SUB>26</SUB>>", "169": "<(IDENTIFIER,dp,long[][] dp = new long[n + 2][n + 2])<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.addition,n + 2)<SUB>26</SUB>>", "173": "<(LITERAL,2,n + 2)<SUB>26</SUB>>", "175": "<(IDENTIFIER,n,n + 2)<SUB>26</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n + 1); i++),for (int i = 2; Some(i &lt;= n + 1); i++))<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>27</SUB>>", "181": "<(LITERAL,2,int i = 2)<SUB>27</SUB>>", "183": "<(IDENTIFIER,i,i &lt;= n + 1)<SUB>27</SUB>>", "185": "<(IDENTIFIER,n,n + 1)<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,dp[i][1])<SUB>28</SUB>>", "193": "<(IDENTIFIER,dp,dp[i][1] = invFacts[i - 1] * pow2[i - 2] % mod)<SUB>28</SUB>>", "195": "<(LITERAL,1,dp[i][1] = invFacts[i - 1] * pow2[i - 2] % mod)<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.multiplication,invFacts[i - 1] * pow2[i - 2])<SUB>28</SUB>>", "199": "<(IDENTIFIER,invFacts,invFacts[i - 1] * pow2[i - 2])<SUB>28</SUB>>", "201": "<(IDENTIFIER,i,i - 1)<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,pow2[i - 2])<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.subtraction,i - 2)<SUB>28</SUB>>", "207": "<(LITERAL,2,i - 2)<SUB>28</SUB>>", "209": "<(CONTROL_STRUCTURE,for (int k = 2; Some(k &lt;= n); k++),for (int k = 2; Some(k &lt;= n); k++))<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.assignment,int k = 2)<SUB>29</SUB>>", "213": "<(LITERAL,2,int k = 2)<SUB>29</SUB>>", "215": "<(IDENTIFIER,k,k &lt;= n)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.postIncrement,k++)<SUB>29</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "221": "<(LOCAL,int j: int)<SUB>30</SUB>>", "223": "<(IDENTIFIER,j,int j = i - 2)<SUB>30</SUB>>", "225": "<(IDENTIFIER,i,i - 2)<SUB>30</SUB>>", "227": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 1)<SUB>30</SUB>>", "229": "<(LITERAL,1,j &gt;= 1)<SUB>30</SUB>>", "231": "<(IDENTIFIER,j,j--)<SUB>30</SUB>>", "233": "<(&lt;operator&gt;.assignment,dp[i][k] = (dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod) % mod)<SUB>31</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>31</SUB>>", "237": "<(IDENTIFIER,i,dp[i][k] = (dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod) % mod)<SUB>31</SUB>>", "239": "<(&lt;operator&gt;.modulo,(dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod) % mod)<SUB>31</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,dp[i][k])<SUB>31</SUB>>", "243": "<(IDENTIFIER,dp,dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod)<SUB>31</SUB>>", "245": "<(IDENTIFIER,k,dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod)<SUB>31</SUB>>", "247": "<(&lt;operator&gt;.multiplication,dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1])<SUB>31</SUB>>", "249": "<(&lt;operator&gt;.multiplication,dp[j][k - 1] * pow2[i - j - 2])<SUB>31</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>31</SUB>>", "253": "<(IDENTIFIER,j,dp[j][k - 1] * pow2[i - j - 2])<SUB>31</SUB>>", "255": "<(IDENTIFIER,k,k - 1)<SUB>31</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,pow2[i - j - 2])<SUB>31</SUB>>", "259": "<(&lt;operator&gt;.subtraction,i - j - 2)<SUB>31</SUB>>", "261": "<(IDENTIFIER,i,i - j)<SUB>31</SUB>>", "263": "<(LITERAL,2,i - j - 2)<SUB>31</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,invFacts[i - j - 1])<SUB>31</SUB>>", "267": "<(&lt;operator&gt;.subtraction,i - j - 1)<SUB>31</SUB>>", "269": "<(IDENTIFIER,i,i - j)<SUB>31</SUB>>", "271": "<(LITERAL,1,i - j - 1)<SUB>31</SUB>>", "273": "<(IDENTIFIER,mod,(dp[i][k] + dp[j][k - 1] * pow2[i - j - 2] % mod * invFacts[i - j - 1] % mod) % mod)<SUB>31</SUB>>", "275": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>36</SUB>>", "277": "<(LITERAL,0,long ans = 0)<SUB>36</SUB>>", "279": "<(LOCAL,int k: int)<SUB>37</SUB>>", "281": "<(IDENTIFIER,k,int k = 1)<SUB>37</SUB>>", "283": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= n)<SUB>37</SUB>>", "285": "<(IDENTIFIER,n,k &lt;= n)<SUB>37</SUB>>", "287": "<(IDENTIFIER,k,k++)<SUB>37</SUB>>", "289": "<(&lt;operator&gt;.assignment,ans = (ans + dp[n + 1][k] * facts[n - k + 1] % mod) % mod)<SUB>39</SUB>>", "291": "<(&lt;operator&gt;.modulo,(ans + dp[n + 1][k] * facts[n - k + 1] % mod) % mod)<SUB>39</SUB>>", "293": "<(IDENTIFIER,ans,ans + dp[n + 1][k] * facts[n - k + 1] % mod)<SUB>39</SUB>>", "295": "<(&lt;operator&gt;.multiplication,dp[n + 1][k] * facts[n - k + 1])<SUB>39</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,dp[n + 1])<SUB>39</SUB>>", "299": "<(&lt;operator&gt;.addition,n + 1)<SUB>39</SUB>>", "301": "<(LITERAL,1,n + 1)<SUB>39</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,facts[n - k + 1])<SUB>39</SUB>>", "305": "<(&lt;operator&gt;.addition,n - k + 1)<SUB>39</SUB>>", "307": "<(IDENTIFIER,n,n - k)<SUB>39</SUB>>", "309": "<(LITERAL,1,n - k + 1)<SUB>39</SUB>>", "311": "<(IDENTIFIER,mod,(ans + dp[n + 1][k] * facts[n - k + 1] % mod) % mod)<SUB>39</SUB>>", "313": "<(IDENTIFIER,out,println(ans))<SUB>41</SUB>>", "315": "<(close,close())<SUB>43</SUB>>", "317": "<(MODIFIER,PUBLIC)>", "319": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}