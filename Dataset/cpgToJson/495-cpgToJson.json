{"edges": [["19", "20"], ["19", "21"], ["19", "290"], ["19", "291"], ["19", "292"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "27"], ["21", "28"], ["21", "32"], ["21", "33"], ["21", "37"], ["21", "38"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "147"], ["21", "239"], ["21", "240"], ["21", "243"], ["21", "285"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["40", "43"], ["40", "44"], ["40", "45"], ["40", "46"], ["40", "47"], ["40", "48"], ["40", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "71"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "74"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "77"], ["74", "87"], ["74", "97"], ["74", "107"], ["74", "108"], ["74", "109"], ["74", "128"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["83", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["104", "105"], ["104", "106"], ["109", "110"], ["109", "118"], ["110", "111"], ["110", "117"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "116"], ["114", "115"], ["118", "119"], ["119", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "127"], ["125", "126"], ["128", "129"], ["128", "137"], ["129", "130"], ["129", "136"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "135"], ["133", "134"], ["137", "138"], ["138", "139"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "146"], ["144", "145"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["157", "159"], ["157", "163"], ["159", "160"], ["159", "161"], ["161", "162"], ["163", "164"], ["163", "166"], ["164", "165"], ["166", "167"], ["166", "168"], ["166", "169"], ["166", "179"], ["166", "189"], ["166", "199"], ["166", "200"], ["166", "201"], ["166", "220"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["185", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["196", "197"], ["196", "198"], ["201", "202"], ["201", "210"], ["202", "203"], ["202", "209"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "208"], ["206", "207"], ["210", "211"], ["211", "212"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "219"], ["217", "218"], ["220", "221"], ["220", "229"], ["221", "222"], ["221", "228"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "227"], ["225", "226"], ["229", "230"], ["230", "231"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "238"], ["236", "237"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["243", "248"], ["243", "251"], ["243", "253"], ["245", "246"], ["245", "247"], ["248", "249"], ["248", "250"], ["251", "252"], ["253", "254"], ["254", "255"], ["254", "262"], ["254", "263"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["263", "264"], ["264", "265"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "277"], ["267", "284"], ["268", "269"], ["268", "276"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "281"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["22", "25"], ["25", "30"], ["28", "35"], ["33", "40"], ["38", "53"], ["51", "57"], ["240", "245"], ["285", "292"], ["24", "22"], ["30", "28"], ["35", "33"], ["40", "38"], ["53", "51"], ["57", "60"], ["60", "69"], ["60", "149"], ["63", "60"], ["149", "152"], ["152", "161"], ["152", "240"], ["155", "152"], ["245", "248"], ["248", "256"], ["248", "288"], ["251", "248"], ["286", "285"], ["67", "72"], ["159", "164"], ["288", "286"], ["69", "67"], ["72", "79"], ["72", "114"], ["161", "159"], ["164", "171"], ["164", "206"], ["255", "251"], ["255", "270"], ["256", "259"], ["259", "255"], ["78", "84"], ["78", "89"], ["83", "89"], ["88", "94"], ["88", "99"], ["93", "99"], ["98", "104"], ["98", "63"], ["103", "63"], ["110", "125"], ["110", "133"], ["129", "144"], ["129", "63"], ["170", "176"], ["170", "181"], ["175", "181"], ["180", "186"], ["180", "191"], ["185", "191"], ["190", "196"], ["190", "155"], ["195", "155"], ["202", "217"], ["202", "225"], ["221", "236"], ["221", "155"], ["265", "251"], ["79", "78"], ["84", "83"], ["89", "88"], ["94", "93"], ["99", "98"], ["104", "103"], ["111", "110"], ["119", "133"], ["130", "129"], ["138", "63"], ["171", "170"], ["176", "175"], ["181", "180"], ["186", "185"], ["191", "190"], ["196", "195"], ["203", "202"], ["211", "225"], ["222", "221"], ["230", "155"], ["267", "265"], ["113", "111"], ["120", "119"], ["132", "130"], ["139", "138"], ["205", "203"], ["212", "211"], ["224", "222"], ["231", "230"], ["268", "278"], ["268", "267"], ["277", "267"], ["114", "113"], ["122", "120"], ["133", "132"], ["141", "139"], ["206", "205"], ["214", "212"], ["225", "224"], ["233", "231"], ["269", "268"], ["278", "281"], ["281", "277"], ["124", "122"], ["143", "141"], ["216", "214"], ["235", "233"], ["270", "273"], ["273", "269"], ["125", "124"], ["144", "143"], ["217", "216"], ["236", "235"], ["19", "24"], ["20", "292"], ["22", "292"], ["25", "292"], ["28", "292"], ["28", "292"], ["33", "292"], ["33", "292"], ["33", "292"], ["38", "292"], ["38", "292"], ["38", "292"], ["53", "292"], ["51", "292"], ["51", "292"], ["152", "292"], ["152", "292"], ["240", "292"], ["245", "292"], ["248", "292"], ["248", "292"], ["285", "292"], ["285", "292"], ["285", "292"], ["255", "292"], ["255", "292"], ["255", "292"], ["269", "292"], ["269", "292"], ["267", "292"], ["277", "292"], ["277", "292"], ["267", "292"], ["265", "292"], ["265", "292"], ["251", "292"], ["161", "292"], ["159", "292"], ["159", "292"], ["164", "292"], ["202", "292"], ["211", "292"], ["211", "292"], ["222", "292"], ["224", "292"], ["222", "292"], ["221", "292"], ["221", "292"], ["236", "292"], ["235", "292"], ["233", "292"], ["230", "292"], ["230", "292"], ["170", "292"], ["175", "292"], ["175", "292"], ["180", "292"], ["185", "292"], ["185", "292"], ["191", "292"], ["190", "292"], ["190", "292"], ["195", "292"], ["195", "292"], ["155", "292"], ["69", "292"], ["67", "292"], ["67", "292"], ["72", "292"], ["110", "292"], ["119", "292"], ["119", "292"], ["130", "292"], ["132", "292"], ["130", "292"], ["129", "292"], ["129", "292"], ["144", "292"], ["143", "292"], ["141", "292"], ["138", "292"], ["138", "292"], ["78", "292"], ["83", "292"], ["83", "292"], ["88", "292"], ["93", "292"], ["93", "292"], ["99", "292"], ["98", "292"], ["98", "292"], ["103", "292"], ["103", "292"], ["63", "292"], ["19", "20"], ["19", "22"], ["30", "28"], ["35", "33"], ["40", "38"], ["40", "38"], ["40", "38"], ["40", "38"], ["53", "51"], ["19", "240"], ["22", "25"], ["19", "25"], ["19", "57"], ["19", "149"], ["19", "245"], ["240", "285"], ["265", "285"], ["19", "285"], ["19", "30"], ["19", "35"], ["19", "40"], ["25", "53"], ["19", "53"], ["57", "60"], ["63", "60"], ["19", "60"], ["51", "60"], ["60", "63"], ["19", "63"], ["69", "67"], ["149", "152"], ["155", "152"], ["19", "152"], ["60", "152"], ["152", "155"], ["19", "155"], ["161", "159"], ["245", "248"], ["251", "248"], ["19", "248"], ["248", "251"], ["19", "251"], ["53", "69"], ["19", "69"], ["67", "72"], ["19", "72"], ["19", "76"], ["53", "161"], ["69", "161"], ["19", "161"], ["159", "164"], ["19", "164"], ["19", "168"], ["28", "255"], ["269", "255"], ["277", "255"], ["33", "255"], ["269", "255"], ["277", "255"], ["277", "265"], ["277", "265"], ["268", "265"], ["19", "265"], ["79", "78"], ["79", "78"], ["19", "78"], ["28", "83"], ["89", "88"], ["89", "88"], ["19", "88"], ["28", "93"], ["99", "98"], ["99", "98"], ["19", "98"], ["28", "103"], ["111", "110"], ["111", "110"], ["19", "110"], ["130", "129"], ["130", "129"], ["19", "129"], ["171", "170"], ["171", "170"], ["19", "170"], ["33", "175"], ["181", "180"], ["181", "180"], ["19", "180"], ["33", "185"], ["191", "190"], ["191", "190"], ["19", "190"], ["33", "195"], ["203", "202"], ["203", "202"], ["19", "202"], ["222", "221"], ["222", "221"], ["19", "221"], ["240", "265"], ["72", "79"], ["19", "79"], ["79", "89"], ["19", "89"], ["89", "99"], ["19", "99"], ["114", "111"], ["19", "111"], ["113", "111"], ["113", "111"], ["28", "119"], ["133", "130"], ["19", "130"], ["132", "130"], ["132", "130"], ["28", "138"], ["164", "171"], ["19", "171"], ["171", "181"], ["19", "181"], ["181", "191"], ["19", "191"], ["206", "203"], ["19", "203"], ["205", "203"], ["205", "203"], ["33", "211"], ["225", "222"], ["19", "222"], ["224", "222"], ["224", "222"], ["33", "230"], ["277", "267"], ["277", "267"], ["268", "267"], ["19", "267"], ["114", "113"], ["19", "113"], ["133", "132"], ["19", "132"], ["206", "205"], ["19", "205"], ["225", "224"], ["19", "224"], ["269", "268"], ["269", "268"], ["19", "268"], ["33", "277"], ["269", "277"], ["28", "277"], ["269", "277"], ["72", "114"], ["19", "114"], ["19", "122"], ["124", "122"], ["124", "122"], ["111", "133"], ["125", "133"], ["19", "133"], ["19", "141"], ["143", "141"], ["143", "141"], ["164", "206"], ["19", "206"], ["19", "214"], ["216", "214"], ["216", "214"], ["203", "225"], ["217", "225"], ["19", "225"], ["19", "233"], ["235", "233"], ["235", "233"], ["33", "269"], ["255", "269"], ["28", "269"], ["255", "269"], ["125", "124"], ["19", "124"], ["144", "143"], ["19", "143"], ["217", "216"], ["19", "216"], ["236", "235"], ["19", "235"], ["111", "125"], ["19", "125"], ["130", "144"], ["19", "144"], ["203", "217"], ["19", "217"], ["222", "236"], ["19", "236"], ["60", "60"], ["60", "69"], ["60", "67"], ["60", "72"], ["60", "63"], ["152", "161"], ["152", "152"], ["152", "164"], ["152", "155"], ["152", "159"], ["248", "256"], ["248", "255"], ["248", "259"], ["248", "251"], ["248", "248"], ["72", "98"], ["72", "113"], ["72", "114"], ["72", "132"], ["72", "129"], ["72", "79"], ["72", "130"], ["72", "88"], ["72", "111"], ["72", "89"], ["72", "99"], ["72", "110"], ["72", "78"], ["72", "133"], ["164", "225"], ["164", "170"], ["164", "206"], ["164", "181"], ["164", "191"], ["164", "190"], ["164", "221"], ["164", "224"], ["164", "202"], ["164", "180"], ["164", "205"], ["164", "171"], ["164", "203"], ["164", "222"], ["255", "273"], ["255", "267"], ["255", "268"], ["255", "265"], ["255", "270"], ["255", "269"], ["78", "84"], ["78", "83"], ["88", "94"], ["88", "93"], ["98", "103"], ["98", "104"], ["110", "120"], ["110", "119"], ["110", "122"], ["110", "124"], ["110", "125"], ["129", "144"], ["129", "138"], ["129", "139"], ["129", "141"], ["129", "143"], ["170", "176"], ["170", "175"], ["180", "185"], ["180", "186"], ["190", "196"], ["190", "195"], ["202", "214"], ["202", "212"], ["202", "217"], ["202", "211"], ["202", "216"], ["221", "230"], ["221", "231"], ["221", "233"], ["221", "235"], ["221", "236"], ["268", "281"], ["268", "277"], ["268", "278"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(&quot;cfedu46a.in&quot;))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(&quot;cfedu46a.in&quot;))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(&quot;cfedu46a.in&quot;))<SUB>2</SUB>>", "27": "<(LOCAL,int[] arr: int[])<SUB>4</SUB>>", "29": "<(IDENTIFIER,arr,int[] arr = new int[9])<SUB>4</SUB>>", "31": "<(LITERAL,9,new int[9])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int[] arr2 = new int[9])<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.alloc,new int[9])>", "37": "<(LOCAL,int[] size: int[])<SUB>6</SUB>>", "39": "<(IDENTIFIER,size,int[] size = { 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "41": "<(LITERAL,4,{ 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "43": "<(LITERAL,2,{ 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "45": "<(LITERAL,1,{ 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "47": "<(LITERAL,2,{ 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "49": "<(LITERAL,4,{ 4, 3, 2, 1, 1, 1, 2, 3, 4 })<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "53": "<(nextInt,nextInt())<SUB>7</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,String s = next())<SUB>9</SUB>>", "69": "<(next,next())<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,switch(s.length()),switch(s.length()))>", "73": "<(IDENTIFIER,s,s.length())<SUB>10</SUB>>", "75": "<(JUMP_TARGET,case)>", "77": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'S'),if (s.charAt(0) == 'S'))<SUB>12</SUB>>", "79": "<(charAt,s.charAt(0))<SUB>12</SUB>>", "81": "<(LITERAL,0,s.charAt(0))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,arr[3]++)<SUB>13</SUB>>", "85": "<(IDENTIFIER,arr,arr[3]++)<SUB>13</SUB>>", "87": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'M'),if (s.charAt(0) == 'M'))<SUB>14</SUB>>", "89": "<(charAt,s.charAt(0))<SUB>14</SUB>>", "91": "<(LITERAL,0,s.charAt(0))<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,arr[4]++)<SUB>15</SUB>>", "95": "<(IDENTIFIER,arr,arr[4]++)<SUB>15</SUB>>", "97": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'L'),if (s.charAt(0) == 'L'))<SUB>16</SUB>>", "99": "<(charAt,s.charAt(0))<SUB>16</SUB>>", "101": "<(LITERAL,0,s.charAt(0))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,arr[5]++)<SUB>17</SUB>>", "105": "<(IDENTIFIER,arr,arr[5]++)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,break;,break;)<SUB>18</SUB>>", "109": "<(CONTROL_STRUCTURE,if (s.charAt(s.length() - 1) == 'S'),if (s.charAt(s.length() - 1) == 'S'))<SUB>20</SUB>>", "111": "<(charAt,s.charAt(s.length() - 1))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.subtraction,s.length() - 1)<SUB>20</SUB>>", "115": "<(IDENTIFIER,s,s.length())<SUB>20</SUB>>", "117": "<(LITERAL,'S',s.charAt(s.length() - 1) == 'S')<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,arr[3 - (s.length() - 1)]++)<SUB>21</SUB>>", "121": "<(IDENTIFIER,arr,arr[3 - (s.length() - 1)]++)<SUB>21</SUB>>", "123": "<(LITERAL,3,3 - (s.length() - 1))<SUB>21</SUB>>", "125": "<(length,s.length())<SUB>21</SUB>>", "127": "<(LITERAL,1,s.length() - 1)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.equals,s.charAt(s.length() - 1) == 'L')<SUB>23</SUB>>", "131": "<(IDENTIFIER,s,s.charAt(s.length() - 1))<SUB>23</SUB>>", "133": "<(length,s.length())<SUB>23</SUB>>", "135": "<(LITERAL,1,s.length() - 1)<SUB>23</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,arr[5 + (s.length() - 1)])<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.addition,5 + (s.length() - 1))<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.subtraction,s.length() - 1)<SUB>24</SUB>>", "145": "<(IDENTIFIER,s,s.length())<SUB>24</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>29</SUB>>", "151": "<(LITERAL,0,int i = 0)<SUB>29</SUB>>", "153": "<(IDENTIFIER,i,i &lt; n)<SUB>29</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>29</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.assignment,String s = next())<SUB>30</SUB>>", "161": "<(next,next())<SUB>30</SUB>>", "163": "<(CONTROL_STRUCTURE,switch(s.length()),switch(s.length()))>", "165": "<(IDENTIFIER,s,s.length())<SUB>31</SUB>>", "167": "<(JUMP_TARGET,case)>", "169": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'S'),if (s.charAt(0) == 'S'))<SUB>33</SUB>>", "171": "<(charAt,s.charAt(0))<SUB>33</SUB>>", "173": "<(LITERAL,0,s.charAt(0))<SUB>33</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,arr2[3]++)<SUB>34</SUB>>", "177": "<(IDENTIFIER,arr2,arr2[3]++)<SUB>34</SUB>>", "179": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'M'),if (s.charAt(0) == 'M'))<SUB>35</SUB>>", "181": "<(charAt,s.charAt(0))<SUB>35</SUB>>", "183": "<(LITERAL,0,s.charAt(0))<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,arr2[4]++)<SUB>36</SUB>>", "187": "<(IDENTIFIER,arr2,arr2[4]++)<SUB>36</SUB>>", "189": "<(CONTROL_STRUCTURE,if (s.charAt(0) == 'L'),if (s.charAt(0) == 'L'))<SUB>37</SUB>>", "191": "<(charAt,s.charAt(0))<SUB>37</SUB>>", "193": "<(LITERAL,0,s.charAt(0))<SUB>37</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,arr2[5]++)<SUB>38</SUB>>", "197": "<(IDENTIFIER,arr2,arr2[5]++)<SUB>38</SUB>>", "199": "<(CONTROL_STRUCTURE,break;,break;)<SUB>39</SUB>>", "201": "<(CONTROL_STRUCTURE,if (s.charAt(s.length() - 1) == 'S'),if (s.charAt(s.length() - 1) == 'S'))<SUB>41</SUB>>", "203": "<(charAt,s.charAt(s.length() - 1))<SUB>41</SUB>>", "205": "<(&lt;operator&gt;.subtraction,s.length() - 1)<SUB>41</SUB>>", "207": "<(IDENTIFIER,s,s.length())<SUB>41</SUB>>", "209": "<(LITERAL,'S',s.charAt(s.length() - 1) == 'S')<SUB>41</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,arr2[3 - (s.length() - 1)]++)<SUB>42</SUB>>", "213": "<(IDENTIFIER,arr2,arr2[3 - (s.length() - 1)]++)<SUB>42</SUB>>", "215": "<(LITERAL,3,3 - (s.length() - 1))<SUB>42</SUB>>", "217": "<(length,s.length())<SUB>42</SUB>>", "219": "<(LITERAL,1,s.length() - 1)<SUB>42</SUB>>", "221": "<(&lt;operator&gt;.equals,s.charAt(s.length() - 1) == 'L')<SUB>44</SUB>>", "223": "<(IDENTIFIER,s,s.charAt(s.length() - 1))<SUB>44</SUB>>", "225": "<(length,s.length())<SUB>44</SUB>>", "227": "<(LITERAL,1,s.length() - 1)<SUB>44</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,arr2[5 + (s.length() - 1)])<SUB>45</SUB>>", "233": "<(&lt;operator&gt;.addition,5 + (s.length() - 1))<SUB>45</SUB>>", "235": "<(&lt;operator&gt;.subtraction,s.length() - 1)<SUB>45</SUB>>", "237": "<(IDENTIFIER,s,s.length())<SUB>45</SUB>>", "239": "<(LOCAL,int cnt: int)<SUB>50</SUB>>", "241": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>50</SUB>>", "243": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 9); i++),for (int i = 0; Some(i &lt; 9); i++))<SUB>51</SUB>>", "245": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>51</SUB>>", "247": "<(LITERAL,0,int i = 0)<SUB>51</SUB>>", "249": "<(IDENTIFIER,i,i &lt; 9)<SUB>51</SUB>>", "251": "<(&lt;operator&gt;.postIncrement,i++)<SUB>51</SUB>>", "253": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "255": "<(&lt;operator&gt;.equals,arr[i] == arr2[i])<SUB>52</SUB>>", "257": "<(IDENTIFIER,arr,arr[i] == arr2[i])<SUB>52</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,arr2[i])<SUB>52</SUB>>", "261": "<(IDENTIFIER,i,arr[i] == arr2[i])<SUB>52</SUB>>", "263": "<(CONTROL_STRUCTURE,else,else)<SUB>54</SUB>>", "265": "<(&lt;operator&gt;.assignmentPlus,cnt += arr2[i] - arr[i] &gt; 0 ? arr2[i] - arr[i] : 0)<SUB>55</SUB>>", "267": "<(&lt;operator&gt;.conditional,arr2[i] - arr[i] &gt; 0 ? arr2[i] - arr[i] : 0)<SUB>55</SUB>>", "269": "<(&lt;operator&gt;.subtraction,arr2[i] - arr[i])<SUB>55</SUB>>", "271": "<(IDENTIFIER,arr2,arr2[i] - arr[i])<SUB>55</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>55</SUB>>", "275": "<(IDENTIFIER,i,arr2[i] - arr[i])<SUB>55</SUB>>", "277": "<(&lt;operator&gt;.subtraction,arr2[i] - arr[i])<SUB>55</SUB>>", "279": "<(IDENTIFIER,arr2,arr2[i] - arr[i])<SUB>55</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>55</SUB>>", "283": "<(IDENTIFIER,i,arr2[i] - arr[i])<SUB>55</SUB>>", "285": "<(println,System.out.println(cnt))<SUB>58</SUB>>", "287": "<(IDENTIFIER,System,System.out.println(cnt))<SUB>58</SUB>>", "289": "<(IDENTIFIER,cnt,System.out.println(cnt))<SUB>58</SUB>>", "291": "<(MODIFIER,STATIC)>"}}