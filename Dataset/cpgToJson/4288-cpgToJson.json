{"edges": [["24", "26"], ["24", "215"], ["24", "216"], ["24", "217"], ["26", "27"], ["26", "28"], ["26", "29"], ["26", "4"], ["26", "30"], ["26", "33"], ["26", "6"], ["26", "44"], ["26", "47"], ["26", "50"], ["26", "56"], ["26", "62"], ["26", "68"], ["26", "75"], ["26", "79"], ["26", "83"], ["26", "87"], ["26", "130"], ["26", "134"], ["26", "139"], ["26", "160"], ["26", "163"], ["26", "9"], ["26", "167"], ["26", "170"], ["26", "172"], ["26", "173"], ["26", "178"], ["26", "179"], ["26", "182"], ["26", "210"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "5"], ["47", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["87", "88"], ["87", "91"], ["87", "94"], ["87", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "100"], ["96", "103"], ["96", "111"], ["96", "119"], ["97", "98"], ["97", "99"], ["100", "7"], ["100", "101"], ["101", "102"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "143"], ["139", "146"], ["139", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "166"], ["167", "168"], ["167", "169"], ["170", "8"], ["170", "171"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "186"], ["182", "190"], ["182", "192"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["190", "191"], ["192", "193"], ["193", "194"], ["193", "199"], ["193", "203"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["204", "205"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["30", "37"], ["33", "46"], ["44", "48"], ["47", "54"], ["50", "60"], ["56", "66"], ["62", "71"], ["68", "77"], ["75", "81"], ["79", "85"], ["83", "88"], ["130", "135"], ["134", "140"], ["160", "163"], ["163", "169"], ["167", "170"], ["170", "175"], ["173", "179"], ["179", "183"], ["210", "217"], ["32", "30"], ["46", "44"], ["48", "47"], ["52", "50"], ["58", "56"], ["64", "62"], ["70", "68"], ["77", "75"], ["81", "79"], ["85", "83"], ["88", "91"], ["91", "99"], ["91", "132"], ["94", "91"], ["132", "130"], ["135", "134"], ["140", "143"], ["143", "150"], ["143", "160"], ["146", "143"], ["169", "167"], ["175", "173"], ["183", "188"], ["186", "195"], ["186", "213"], ["190", "188"], ["211", "210"], ["35", "42"], ["38", "33"], ["54", "52"], ["60", "58"], ["66", "64"], ["71", "70"], ["97", "101"], ["100", "104"], ["103", "112"], ["111", "120"], ["119", "94"], ["149", "146"], ["188", "186"], ["213", "211"], ["37", "35"], ["40", "38"], ["99", "97"], ["101", "100"], ["104", "109"], ["107", "103"], ["112", "117"], ["115", "111"], ["120", "125"], ["123", "119"], ["150", "156"], ["153", "149"], ["194", "200"], ["194", "207"], ["42", "40"], ["109", "107"], ["117", "115"], ["124", "123"], ["154", "153"], ["195", "194"], ["200", "190"], ["125", "126"], ["126", "124"], ["156", "154"], ["205", "190"], ["207", "205"], ["24", "32"], ["25", "217"], ["30", "217"], ["35", "217"], ["38", "217"], ["38", "217"], ["38", "217"], ["33", "217"], ["44", "217"], ["48", "217"], ["47", "217"], ["47", "217"], ["50", "217"], ["56", "217"], ["64", "217"], ["66", "217"], ["64", "217"], ["62", "217"], ["62", "217"], ["70", "217"], ["68", "217"], ["68", "217"], ["75", "217"], ["75", "217"], ["79", "217"], ["79", "217"], ["79", "217"], ["83", "217"], ["83", "217"], ["83", "217"], ["130", "217"], ["130", "217"], ["130", "217"], ["134", "217"], ["134", "217"], ["140", "217"], ["143", "217"], ["143", "217"], ["160", "217"], ["163", "217"], ["163", "217"], ["167", "217"], ["170", "217"], ["175", "217"], ["175", "217"], ["173", "217"], ["173", "217"], ["179", "217"], ["183", "217"], ["186", "217"], ["188", "217"], ["186", "217"], ["186", "217"], ["210", "217"], ["210", "217"], ["194", "217"], ["194", "217"], ["205", "217"], ["205", "217"], ["200", "217"], ["190", "217"], ["149", "217"], ["153", "217"], ["149", "217"], ["149", "217"], ["146", "217"], ["97", "217"], ["101", "217"], ["100", "217"], ["100", "217"], ["103", "217"], ["103", "217"], ["115", "217"], ["117", "217"], ["115", "217"], ["111", "217"], ["111", "217"], ["119", "217"], ["124", "217"], ["123", "217"], ["119", "217"], ["119", "217"], ["94", "217"], ["68", "217"], ["163", "217"], ["62", "217"], ["24", "25"], ["24", "30"], ["24", "44"], ["52", "50"], ["52", "50"], ["58", "56"], ["58", "56"], ["64", "62"], ["64", "62"], ["71", "68"], ["71", "68"], ["24", "68"], ["77", "75"], ["81", "79"], ["85", "83"], ["132", "130"], ["24", "134"], ["24", "160"], ["24", "167"], ["175", "173"], ["175", "173"], ["24", "179"], ["30", "33"], ["24", "33"], ["35", "33"], ["38", "33"], ["44", "47"], ["24", "47"], ["48", "47"], ["24", "88"], ["24", "140"], ["24", "163"], ["56", "163"], ["167", "170"], ["24", "170"], ["24", "183"], ["179", "210"], ["205", "210"], ["200", "210"], ["24", "210"], ["24", "35"], ["24", "43"], ["33", "48"], ["24", "48"], ["24", "52"], ["54", "52"], ["52", "58"], ["24", "58"], ["60", "58"], ["58", "64"], ["24", "64"], ["66", "64"], ["71", "70"], ["71", "70"], ["24", "70"], ["71", "77"], ["24", "77"], ["77", "81"], ["24", "81"], ["81", "85"], ["24", "85"], ["88", "91"], ["94", "91"], ["24", "91"], ["85", "91"], ["91", "94"], ["24", "94"], ["24", "97"], ["107", "103"], ["107", "103"], ["115", "111"], ["115", "111"], ["123", "119"], ["123", "119"], ["24", "132"], ["140", "143"], ["146", "143"], ["24", "143"], ["91", "143"], ["156", "146"], ["24", "146"], ["153", "149"], ["153", "149"], ["170", "175"], ["24", "175"], ["160", "175"], ["183", "186"], ["190", "186"], ["24", "186"], ["188", "186"], ["195", "190"], ["207", "190"], ["24", "190"], ["35", "38"], ["24", "38"], ["47", "54"], ["24", "54"], ["54", "60"], ["24", "60"], ["60", "66"], ["24", "66"], ["50", "71"], ["24", "71"], ["97", "100"], ["24", "100"], ["101", "100"], ["173", "188"], ["195", "188"], ["207", "188"], ["24", "188"], ["48", "101"], ["24", "101"], ["64", "107"], ["115", "107"], ["24", "107"], ["109", "107"], ["107", "115"], ["24", "115"], ["117", "115"], ["24", "123"], ["79", "123"], ["111", "123"], ["130", "153"], ["24", "153"], ["195", "194"], ["195", "194"], ["24", "194"], ["24", "200"], ["100", "109"], ["24", "109"], ["109", "117"], ["24", "117"], ["24", "124"], ["79", "124"], ["111", "124"], ["188", "195"], ["24", "195"], ["186", "195"], ["179", "200"], ["205", "200"], ["207", "205"], ["207", "205"], ["143", "156"], ["24", "156"], ["179", "205"], ["200", "205"], ["24", "205"], ["195", "207"], ["24", "207"], ["195", "207"], ["91", "107"], ["91", "94"], ["91", "115"], ["91", "120"], ["91", "99"], ["91", "103"], ["91", "104"], ["91", "119"], ["91", "123"], ["91", "97"], ["91", "91"], ["91", "112"], ["91", "101"], ["91", "126"], ["91", "100"], ["91", "117"], ["91", "124"], ["91", "125"], ["91", "111"], ["91", "109"], ["143", "154"], ["143", "146"], ["143", "149"], ["143", "150"], ["143", "153"], ["143", "143"], ["143", "156"], ["186", "188"], ["186", "195"], ["186", "190"], ["186", "194"], ["186", "186"], ["194", "200"], ["194", "207"], ["194", "205"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(LOCAL,int j: int)<SUB>2</SUB>>", "4": "<(LOCAL,BufferedReader br: ANY)<SUB>4</SUB>>", "31": "<(IDENTIFIER,br,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "33": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "34": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "36": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>4</SUB>>", "42": "<(FIELD_IDENTIFIER,in,in)<SUB>4</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>5</SUB>>", "45": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "47": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "48": "<(readLine,readLine())<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.assignment,N = parseInt(st.nextToken()))<SUB>7</SUB>>", "52": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "54": "<(nextToken,nextToken())<SUB>7</SUB>>", "56": "<(&lt;operator&gt;.assignment,K = parseInt(st.nextToken()))<SUB>8</SUB>>", "58": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "60": "<(nextToken,nextToken())<SUB>8</SUB>>", "62": "<(&lt;operator&gt;.assignment,A = parseInt(st.nextToken()))<SUB>9</SUB>>", "64": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "66": "<(nextToken,nextToken())<SUB>9</SUB>>", "68": "<(&lt;operator&gt;.assignment,needed = N / 2 + 1)<SUB>11</SUB>>", "70": "<(&lt;operator&gt;.addition,N / 2 + 1)<SUB>11</SUB>>", "72": "<(IDENTIFIER,N,N / 2)<SUB>11</SUB>>", "74": "<(LITERAL,1,N / 2 + 1)<SUB>11</SUB>>", "76": "<(IDENTIFIER,b,b = new int[N])<SUB>13</SUB>>", "78": "<(IDENTIFIER,N,new int[N])<SUB>13</SUB>>", "80": "<(IDENTIFIER,l,l = new int[N])<SUB>14</SUB>>", "82": "<(IDENTIFIER,N,new int[N])<SUB>14</SUB>>", "84": "<(IDENTIFIER,dl,dl = new double[N])<SUB>15</SUB>>", "86": "<(IDENTIFIER,N,new double[N])<SUB>15</SUB>>", "88": "<(&lt;operator&gt;.assignment,i = 0)<SUB>17</SUB>>", "90": "<(LITERAL,0,i = 0)<SUB>17</SUB>>", "92": "<(IDENTIFIER,i,i &lt; N)<SUB>17</SUB>>", "94": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "96": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "98": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>19</SUB>>", "100": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>19</SUB>>", "101": "<(readLine,readLine())<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignment,b[i] = parseInt(st.nextToken()))<SUB>20</SUB>>", "105": "<(IDENTIFIER,b,b[i] = parseInt(st.nextToken()))<SUB>20</SUB>>", "107": "<(parseInt,parseInt(st.nextToken()))<SUB>20</SUB>>", "109": "<(nextToken,nextToken())<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.assignment,l[i] = parseInt(st.nextToken()))<SUB>21</SUB>>", "113": "<(IDENTIFIER,l,l[i] = parseInt(st.nextToken()))<SUB>21</SUB>>", "115": "<(parseInt,parseInt(st.nextToken()))<SUB>21</SUB>>", "117": "<(nextToken,nextToken())<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.assignment,dl[i] = ((double) l[i]) / 100.0)<SUB>22</SUB>>", "121": "<(IDENTIFIER,dl,dl[i] = ((double) l[i]) / 100.0)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.division,((double) l[i]) / 100.0)<SUB>22</SUB>>", "125": "<(TYPE_REF,double,double)<SUB>22</SUB>>", "127": "<(IDENTIFIER,l,(double) l[i])<SUB>22</SUB>>", "129": "<(LITERAL,100.0,((double) l[i]) / 100.0)<SUB>22</SUB>>", "131": "<(IDENTIFIER,base,base = new int[8])<SUB>26</SUB>>", "133": "<(LITERAL,8,new int[8])<SUB>26</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,base[0])<SUB>27</SUB>>", "137": "<(LITERAL,0,base[0] = 1)<SUB>27</SUB>>", "139": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt; N); i++),for (i = 1; Some(i &lt; N); i++))<SUB>28</SUB>>", "141": "<(IDENTIFIER,i,i = 1)<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>28</SUB>>", "145": "<(IDENTIFIER,N,i &lt; N)<SUB>28</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.assignment,base[i] = base[i - 1] * 2)<SUB>29</SUB>>", "151": "<(IDENTIFIER,base,base[i] = base[i - 1] * 2)<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.multiplication,base[i - 1] * 2)<SUB>29</SUB>>", "155": "<(IDENTIFIER,base,base[i - 1] * 2)<SUB>29</SUB>>", "157": "<(IDENTIFIER,i,i - 1)<SUB>29</SUB>>", "159": "<(LITERAL,2,base[i - 1] * 2)<SUB>29</SUB>>", "161": "<(IDENTIFIER,best,best = 0.0)<SUB>32</SUB>>", "163": "<(giveCandies,giveCandies(0, K))<SUB>34</SUB>>", "165": "<(LITERAL,0,giveCandies(0, K))<SUB>34</SUB>>", "9": "<(LOCAL,DecimalFormat df: ANY)<SUB>36</SUB>>", "168": "<(IDENTIFIER,df,ANY df = new DecimalFormat(&quot;0.0000000000&quot;))<SUB>36</SUB>>", "170": "<(&lt;init&gt;,new DecimalFormat(&quot;0.0000000000&quot;))<SUB>36</SUB>>", "171": "<(LITERAL,&quot;0.0000000000&quot;,new DecimalFormat(&quot;0.0000000000&quot;))<SUB>36</SUB>>", "173": "<(&lt;operator&gt;.assignment,String rs = format(best))<SUB>38</SUB>>", "175": "<(format,format(best))<SUB>38</SUB>>", "177": "<(IDENTIFIER,best,format(best))<SUB>38</SUB>>", "179": "<(&lt;operator&gt;.assignment,String mrs = &quot;&quot;)<SUB>39</SUB>>", "181": "<(LITERAL,&quot;&quot;,String mrs = &quot;&quot;)<SUB>39</SUB>>", "183": "<(&lt;operator&gt;.assignment,i = 0)<SUB>41</SUB>>", "185": "<(LITERAL,0,i = 0)<SUB>41</SUB>>", "187": "<(IDENTIFIER,i,i &lt; rs.length())<SUB>41</SUB>>", "189": "<(IDENTIFIER,rs,rs.length())<SUB>41</SUB>>", "191": "<(IDENTIFIER,i,i++)<SUB>41</SUB>>", "193": "<(CONTROL_STRUCTURE,if (rs.charAt(i) == ','),if (rs.charAt(i) == ','))<SUB>42</SUB>>", "195": "<(charAt,rs.charAt(i))<SUB>42</SUB>>", "197": "<(IDENTIFIER,i,rs.charAt(i))<SUB>42</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "201": "<(IDENTIFIER,mrs,mrs += '.')<SUB>43</SUB>>", "203": "<(CONTROL_STRUCTURE,else,else)<SUB>44</SUB>>", "205": "<(&lt;operator&gt;.assignmentPlus,mrs += rs.charAt(i))<SUB>45</SUB>>", "207": "<(charAt,rs.charAt(i))<SUB>45</SUB>>", "209": "<(IDENTIFIER,i,rs.charAt(i))<SUB>45</SUB>>", "211": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "213": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "215": "<(MODIFIER,PUBLIC)>", "217": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}