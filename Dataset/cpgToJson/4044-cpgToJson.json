{"edges": [["17", "19"], ["17", "209"], ["17", "210"], ["17", "211"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "37"], ["19", "41"], ["19", "45"], ["19", "49"], ["19", "72"], ["19", "79"], ["19", "98"], ["19", "123"], ["19", "124"], ["19", "127"], ["19", "204"], ["19", "207"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "66"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "89"], ["79", "91"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "115"], ["110", "119"], ["111", "112"], ["111", "113"], ["111", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["119", "120"], ["119", "121"], ["119", "122"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "132"], ["127", "137"], ["127", "139"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["139", "141"], ["139", "144"], ["139", "169"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "152"], ["144", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["155", "156"], ["155", "163"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["163", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "181"], ["173", "184"], ["173", "191"], ["173", "194"], ["173", "201"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "35"], ["33", "39"], ["37", "43"], ["41", "47"], ["45", "51"], ["72", "81"], ["124", "129"], ["204", "207"], ["207", "211"], ["22", "20"], ["27", "25"], ["30", "28"], ["35", "33"], ["39", "37"], ["43", "41"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "75"], ["57", "54"], ["74", "72"], ["81", "86"], ["84", "93"], ["84", "100"], ["89", "86"], ["91", "89"], ["100", "105"], ["103", "111"], ["103", "124"], ["108", "105"], ["129", "134"], ["132", "141"], ["132", "204"], ["137", "134"], ["32", "30"], ["60", "67"], ["66", "57"], ["75", "74"], ["86", "84"], ["93", "96"], ["96", "91"], ["105", "103"], ["111", "115"], ["115", "119"], ["119", "108"], ["134", "132"], ["141", "146"], ["61", "64"], ["64", "60"], ["67", "70"], ["70", "66"], ["146", "149"], ["149", "158"], ["149", "170"], ["152", "149"], ["170", "177"], ["170", "137"], ["174", "181"], ["181", "187"], ["184", "191"], ["191", "197"], ["194", "201"], ["201", "137"], ["156", "166"], ["156", "152"], ["176", "174"], ["186", "184"], ["196", "194"], ["157", "156"], ["164", "152"], ["177", "176"], ["187", "186"], ["197", "196"], ["158", "157"], ["166", "164"], ["17", "22"], ["18", "211"], ["20", "211"], ["23", "211"], ["25", "211"], ["28", "211"], ["28", "211"], ["33", "211"], ["37", "211"], ["39", "211"], ["37", "211"], ["37", "211"], ["41", "211"], ["41", "211"], ["45", "211"], ["45", "211"], ["45", "211"], ["54", "211"], ["72", "211"], ["72", "211"], ["72", "211"], ["124", "211"], ["129", "211"], ["132", "211"], ["134", "211"], ["132", "211"], ["132", "211"], ["204", "211"], ["204", "211"], ["207", "211"], ["207", "211"], ["141", "211"], ["146", "211"], ["149", "211"], ["149", "211"], ["170", "211"], ["170", "211"], ["170", "211"], ["174", "211"], ["174", "211"], ["184", "211"], ["184", "211"], ["194", "211"], ["194", "211"], ["201", "211"], ["137", "211"], ["157", "211"], ["156", "211"], ["156", "211"], ["164", "211"], ["164", "211"], ["152", "211"], ["111", "211"], ["115", "211"], ["119", "211"], ["119", "211"], ["108", "211"], ["91", "211"], ["91", "211"], ["91", "211"], ["89", "211"], ["60", "211"], ["60", "211"], ["66", "211"], ["70", "211"], ["66", "211"], ["66", "211"], ["57", "211"], ["91", "211"], ["17", "18"], ["17", "20"], ["17", "25"], ["35", "33"], ["39", "37"], ["43", "41"], ["47", "45"], ["74", "72"], ["74", "72"], ["17", "124"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "51"], ["17", "81"], ["17", "100"], ["17", "129"], ["28", "204"], ["17", "204"], ["124", "204"], ["201", "204"], ["204", "207"], ["17", "207"], ["23", "35"], ["17", "35"], ["35", "39"], ["17", "39"], ["33", "43"], ["17", "43"], ["43", "47"], ["17", "47"], ["51", "54"], ["57", "54"], ["17", "54"], ["47", "54"], ["54", "57"], ["17", "57"], ["64", "60"], ["70", "66"], ["75", "74"], ["75", "74"], ["17", "74"], ["81", "84"], ["89", "84"], ["17", "84"], ["86", "84"], ["86", "84"], ["84", "89"], ["17", "89"], ["17", "91"], ["72", "91"], ["96", "91"], ["100", "103"], ["108", "103"], ["17", "103"], ["105", "103"], ["105", "103"], ["119", "108"], ["17", "108"], ["129", "132"], ["137", "132"], ["17", "132"], ["134", "132"], ["134", "132"], ["132", "137"], ["157", "137"], ["17", "137"], ["17", "141"], ["17", "75"], ["54", "75"], ["17", "86"], ["75", "86"], ["17", "96"], ["17", "105"], ["86", "105"], ["119", "111"], ["17", "111"], ["103", "111"], ["111", "115"], ["17", "115"], ["111", "115"], ["115", "119"], ["17", "119"], ["115", "119"], ["17", "134"], ["105", "134"], ["149", "134"], ["17", "146"], ["39", "64"], ["70", "64"], ["17", "64"], ["64", "70"], ["17", "70"], ["146", "149"], ["152", "149"], ["17", "149"], ["134", "149"], ["158", "152"], ["17", "152"], ["141", "170"], ["164", "170"], ["17", "170"], ["37", "170"], ["17", "181"], ["17", "191"], ["17", "201"], ["124", "174"], ["201", "174"], ["17", "174"], ["174", "181"], ["181", "184"], ["17", "184"], ["184", "191"], ["191", "194"], ["17", "194"], ["194", "201"], ["157", "156"], ["157", "156"], ["17", "156"], ["41", "164"], ["158", "157"], ["158", "157"], ["132", "157"], ["17", "157"], ["141", "164"], ["17", "164"], ["17", "158"], ["149", "158"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "67"], ["54", "54"], ["54", "61"], ["54", "70"], ["54", "66"], ["84", "96"], ["84", "84"], ["84", "91"], ["84", "93"], ["84", "86"], ["84", "89"], ["103", "115"], ["103", "103"], ["103", "119"], ["103", "108"], ["103", "111"], ["103", "105"], ["132", "146"], ["132", "149"], ["132", "132"], ["132", "170"], ["132", "134"], ["132", "137"], ["132", "141"], ["149", "149"], ["149", "152"], ["149", "158"], ["149", "157"], ["149", "156"], ["170", "196"], ["170", "197"], ["170", "181"], ["170", "191"], ["170", "187"], ["170", "184"], ["170", "174"], ["170", "194"], ["170", "186"], ["170", "201"], ["170", "176"], ["170", "177"], ["156", "164"], ["156", "166"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>6</SUB>>", "39": "<(nextInt,nextInt())<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,times = new int[n])<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(&lt;operator&gt;.assignment,genre = new int[n])<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "53": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "55": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,times[j])<SUB>10</SUB>>", "63": "<(IDENTIFIER,j,times[j] = nextInt())<SUB>10</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,genre[j])<SUB>11</SUB>>", "69": "<(IDENTIFIER,j,genre[j] = nextInt())<SUB>11</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "73": "<(IDENTIFIER,dp,dp = new int[1 &lt;&lt; n][4])<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>13</SUB>>", "77": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>13</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++))<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "85": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; n)<SUB>14</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "91": "<(fill,fill(dp[j], -1))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>15</SUB>>", "95": "<(IDENTIFIER,j,fill(dp[j], -1))<SUB>15</SUB>>", "97": "<(LITERAL,1,-1)<SUB>15</SUB>>", "99": "<(LOCAL,int j: int)<SUB>16</SUB>>", "101": "<(IDENTIFIER,j,int j = 0)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; n)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>16</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>16</SUB>>", "109": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "111": "<(letsgodp,letsgodp(j, 1))<SUB>17</SUB>>", "113": "<(IDENTIFIER,j,letsgodp(j, 1))<SUB>17</SUB>>", "115": "<(letsgodp,letsgodp(j, 2))<SUB>18</SUB>>", "117": "<(IDENTIFIER,j,letsgodp(j, 2))<SUB>18</SUB>>", "119": "<(letsgodp,letsgodp(j, 3))<SUB>19</SUB>>", "121": "<(IDENTIFIER,j,letsgodp(j, 3))<SUB>19</SUB>>", "123": "<(LOCAL,int ans: int)<SUB>21</SUB>>", "125": "<(IDENTIFIER,ans,int ans = 0)<SUB>21</SUB>>", "127": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++))<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>22</SUB>>", "131": "<(LITERAL,0,int j = 0)<SUB>22</SUB>>", "133": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; n)<SUB>22</SUB>>", "135": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.assignment,int time = 0)<SUB>23</SUB>>", "143": "<(LITERAL,0,int time = 0)<SUB>23</SUB>>", "145": "<(LOCAL,int k: int)<SUB>24</SUB>>", "147": "<(IDENTIFIER,k,int k = 0)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>24</SUB>>", "151": "<(IDENTIFIER,n,k &lt; n)<SUB>24</SUB>>", "153": "<(IDENTIFIER,k,k++)<SUB>24</SUB>>", "155": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; k) &amp; j) != 0),if (((1 &lt;&lt; k) &amp; j) != 0))<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.and,(1 &lt;&lt; k) &amp; j)<SUB>25</SUB>>", "159": "<(LITERAL,1,1 &lt;&lt; k)<SUB>25</SUB>>", "161": "<(IDENTIFIER,j,(1 &lt;&lt; k) &amp; j)<SUB>25</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "165": "<(IDENTIFIER,time,time += times[k])<SUB>26</SUB>>", "167": "<(IDENTIFIER,times,time += times[k])<SUB>26</SUB>>", "169": "<(CONTROL_STRUCTURE,if (time == t),if (time == t))<SUB>29</SUB>>", "171": "<(IDENTIFIER,time,time == t)<SUB>29</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "175": "<(IDENTIFIER,ans,ans += dp[j][1])<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>30</SUB>>", "179": "<(IDENTIFIER,j,ans += dp[j][1])<SUB>30</SUB>>", "181": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>31</SUB>>", "183": "<(IDENTIFIER,mod,ans %= mod)<SUB>31</SUB>>", "185": "<(IDENTIFIER,ans,ans += dp[j][2])<SUB>32</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>32</SUB>>", "189": "<(IDENTIFIER,j,ans += dp[j][2])<SUB>32</SUB>>", "191": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>33</SUB>>", "193": "<(IDENTIFIER,mod,ans %= mod)<SUB>33</SUB>>", "195": "<(IDENTIFIER,ans,ans += dp[j][3])<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>34</SUB>>", "199": "<(IDENTIFIER,j,ans += dp[j][3])<SUB>34</SUB>>", "201": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>35</SUB>>", "203": "<(IDENTIFIER,mod,ans %= mod)<SUB>35</SUB>>", "205": "<(IDENTIFIER,out,println(ans))<SUB>38</SUB>>", "207": "<(close,close())<SUB>39</SUB>>", "209": "<(MODIFIER,PUBLIC)>", "211": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}