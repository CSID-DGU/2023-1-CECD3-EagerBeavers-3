{"edges": [["19", "20"], ["19", "21"], ["19", "212"], ["19", "213"], ["19", "214"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "42"], ["21", "85"], ["21", "96"], ["21", "97"], ["21", "104"], ["21", "124"], ["21", "155"], ["21", "156"], ["21", "159"], ["21", "205"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "58"], ["52", "59"], ["52", "63"], ["52", "74"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["63", "73"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "84"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "114"], ["104", "116"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["117", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "134"], ["124", "136"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["148", "151"], ["148", "152"], ["148", "153"], ["148", "154"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "167"], ["159", "169"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "180"], ["170", "182"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["183", "184"], ["183", "197"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "44"], ["97", "106"], ["156", "161"], ["205", "214"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "47"], ["47", "56"], ["47", "86"], ["50", "47"], ["86", "93"], ["86", "100"], ["99", "97"], ["106", "111"], ["109", "119"], ["109", "126"], ["114", "111"], ["126", "131"], ["129", "139"], ["129", "156"], ["134", "131"], ["161", "164"], ["164", "172"], ["164", "208"], ["167", "164"], ["206", "209"], ["209", "205"], ["54", "61"], ["59", "67"], ["63", "78"], ["74", "50"], ["90", "95"], ["95", "214"], ["100", "99"], ["111", "109"], ["117", "114"], ["131", "129"], ["208", "206"], ["56", "54"], ["61", "59"], ["64", "63"], ["75", "74"], ["91", "90"], ["119", "122"], ["122", "117"], ["139", "142"], ["142", "148"], ["142", "134"], ["145", "142"], ["172", "177"], ["175", "186"], ["175", "167"], ["180", "177"], ["65", "70"], ["70", "64"], ["76", "81"], ["81", "75"], ["93", "91"], ["148", "145"], ["177", "175"], ["67", "65"], ["78", "76"], ["184", "201"], ["184", "180"], ["185", "184"], ["185", "193"], ["190", "184"], ["198", "180"], ["186", "185"], ["191", "190"], ["200", "198"], ["193", "191"], ["201", "200"], ["19", "24"], ["95", "214"], ["20", "214"], ["22", "214"], ["25", "214"], ["27", "214"], ["34", "214"], ["32", "214"], ["32", "214"], ["37", "214"], ["37", "214"], ["37", "214"], ["44", "214"], ["47", "214"], ["47", "214"], ["47", "214"], ["86", "214"], ["86", "214"], ["90", "214"], ["90", "214"], ["54", "214"], ["61", "214"], ["59", "214"], ["59", "214"], ["63", "214"], ["63", "214"], ["78", "214"], ["81", "214"], ["74", "214"], ["74", "214"], ["50", "214"], ["148", "214"], ["117", "214"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["99", "97"], ["99", "97"], ["19", "156"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "106"], ["19", "126"], ["19", "161"], ["209", "205"], ["209", "205"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["44", "47"], ["50", "47"], ["19", "47"], ["32", "47"], ["47", "50"], ["19", "50"], ["56", "54"], ["61", "59"], ["19", "63"], ["19", "74"], ["39", "86"], ["19", "86"], ["19", "95"], ["100", "99"], ["100", "99"], ["19", "99"], ["106", "109"], ["114", "109"], ["19", "109"], ["111", "109"], ["111", "109"], ["109", "114"], ["19", "114"], ["126", "129"], ["134", "129"], ["19", "129"], ["131", "129"], ["131", "129"], ["129", "134"], ["148", "134"], ["19", "134"], ["161", "164"], ["167", "164"], ["19", "164"], ["131", "164"], ["177", "164"], ["164", "167"], ["19", "167"], ["156", "209"], ["198", "209"], ["19", "209"], ["19", "90"], ["19", "100"], ["86", "100"], ["19", "111"], ["99", "111"], ["19", "117"], ["97", "117"], ["122", "117"], ["19", "131"], ["111", "131"], ["142", "131"], ["19", "139"], ["19", "172"], ["34", "56"], ["61", "56"], ["19", "56"], ["56", "61"], ["19", "61"], ["19", "122"], ["139", "142"], ["145", "142"], ["19", "142"], ["131", "142"], ["148", "142"], ["148", "145"], ["19", "145"], ["172", "175"], ["180", "175"], ["19", "175"], ["177", "175"], ["177", "175"], ["186", "180"], ["193", "180"], ["19", "180"], ["59", "70"], ["19", "70"], ["67", "81"], ["19", "81"], ["19", "148"], ["129", "148"], ["142", "148"], ["97", "148"], ["117", "148"], ["37", "148"], ["142", "148"], ["19", "177"], ["164", "177"], ["54", "67"], ["19", "67"], ["70", "78"], ["19", "78"], ["185", "184"], ["185", "184"], ["186", "185"], ["186", "185"], ["19", "185"], ["156", "198"], ["19", "198"], ["193", "186"], ["19", "186"], ["175", "186"], ["186", "193"], ["19", "193"], ["186", "193"], ["47", "64"], ["47", "75"], ["47", "81"], ["47", "56"], ["47", "67"], ["47", "74"], ["47", "76"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "61"], ["47", "70"], ["47", "47"], ["47", "65"], ["47", "63"], ["47", "78"], ["86", "161"], ["86", "131"], ["86", "209"], ["86", "95"], ["86", "97"], ["86", "91"], ["86", "206"], ["86", "129"], ["86", "208"], ["86", "93"], ["86", "90"], ["86", "100"], ["86", "164"], ["86", "205"], ["86", "111"], ["86", "99"], ["86", "106"], ["86", "126"], ["86", "156"], ["86", "109"], ["109", "114"], ["109", "119"], ["109", "111"], ["109", "122"], ["109", "117"], ["109", "109"], ["129", "131"], ["129", "129"], ["129", "134"], ["129", "139"], ["129", "142"], ["164", "167"], ["164", "164"], ["164", "177"], ["164", "175"], ["164", "172"], ["142", "145"], ["142", "148"], ["142", "142"], ["175", "185"], ["175", "184"], ["175", "186"], ["175", "180"], ["175", "177"], ["175", "175"], ["184", "198"], ["184", "201"], ["184", "200"], ["185", "191"], ["185", "190"], ["185", "193"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "29": "<(nextInt,nextInt())<SUB>4</SUB>>", "31": "<(LOCAL,int m: int)<SUB>5</SUB>>", "33": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "35": "<(IDENTIFIER,scanner,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,boolean[][] graph = new boolean[n][n])<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "41": "<(IDENTIFIER,n,new boolean[n][n])<SUB>7</SUB>>", "43": "<(LOCAL,int i: int)<SUB>8</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>8</SUB>>", "49": "<(IDENTIFIER,m,i &lt; m)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "53": "<(LOCAL,int a: int)<SUB>9</SUB>>", "55": "<(IDENTIFIER,a,int a = nextInt())<SUB>9</SUB>>", "57": "<(IDENTIFIER,scanner,nextInt())<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>10</SUB>>", "61": "<(nextInt,nextInt())<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,graph[a - 1][b - 1] = true)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,graph[a - 1])<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.subtraction,a - 1)<SUB>11</SUB>>", "69": "<(LITERAL,1,a - 1)<SUB>11</SUB>>", "71": "<(IDENTIFIER,b,b - 1)<SUB>11</SUB>>", "73": "<(LITERAL,true,graph[a - 1][b - 1] = true)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,graph[b - 1][a - 1])<SUB>12</SUB>>", "77": "<(IDENTIFIER,graph,graph[b - 1][a - 1] = true)<SUB>12</SUB>>", "79": "<(IDENTIFIER,b,b - 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.subtraction,a - 1)<SUB>12</SUB>>", "83": "<(LITERAL,1,a - 1)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,if (n &lt;= 2),if (n &lt;= 2))<SUB>15</SUB>>", "87": "<(IDENTIFIER,n,n &lt;= 2)<SUB>15</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "95": "<(RETURN,return;,return;)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.assignment,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>20</SUB>>", "99": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; n][n])>", "101": "<(LITERAL,1,1 &lt;&lt; n)<SUB>20</SUB>>", "103": "<(IDENTIFIER,n,new long[1 &lt;&lt; n][n])<SUB>20</SUB>>", "105": "<(LOCAL,int i: int)<SUB>22</SUB>>", "107": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>22</SUB>>", "113": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>22</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "117": "<(fill,fill(dp[i], -1))<SUB>23</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>23</SUB>>", "121": "<(IDENTIFIER,i,fill(dp[i], -1))<SUB>23</SUB>>", "123": "<(LITERAL,1,-1)<SUB>23</SUB>>", "125": "<(LOCAL,int i: int)<SUB>26</SUB>>", "127": "<(IDENTIFIER,i,int i = 1)<SUB>26</SUB>>", "129": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>26</SUB>>", "133": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>26</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>27</SUB>>", "139": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "141": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "143": "<(IDENTIFIER,j,j &lt; n)<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "149": "<(IDENTIFIER,this,f(i, j, dp, graph, n))<SUB>28</SUB>>", "151": "<(IDENTIFIER,j,f(i, j, dp, graph, n))<SUB>28</SUB>>", "153": "<(IDENTIFIER,graph,f(i, j, dp, graph, n))<SUB>28</SUB>>", "155": "<(LOCAL,long sum: long)<SUB>32</SUB>>", "157": "<(IDENTIFIER,sum,long sum = 0)<SUB>32</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>47</SUB>>", "161": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>47</SUB>>", "163": "<(LITERAL,0,int i = 0)<SUB>47</SUB>>", "165": "<(IDENTIFIER,i,i &lt; n)<SUB>47</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,i++)<SUB>47</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "171": "<(LOCAL,int j: int)<SUB>48</SUB>>", "173": "<(IDENTIFIER,j,int j = 0)<SUB>48</SUB>>", "175": "<(&lt;operator&gt;.lessThan,j &lt; (1 &lt;&lt; n))<SUB>48</SUB>>", "177": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>48</SUB>>", "179": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>48</SUB>>", "181": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "183": "<(CONTROL_STRUCTURE,if (Integer.bitCount(j) &gt;= 3 &amp;&amp; graph[Integer.numberOfTrailingZeros(j)][i]),if (Integer.bitCount(j) &gt;= 3 &amp;&amp; graph[Integer.numberOfTrailingZeros(j)][i]))<SUB>49</SUB>>", "185": "<(&lt;operator&gt;.greaterEqualsThan,Integer.bitCount(j) &gt;= 3)<SUB>49</SUB>>", "187": "<(IDENTIFIER,Integer,Integer.bitCount(j))<SUB>49</SUB>>", "189": "<(LITERAL,3,Integer.bitCount(j) &gt;= 3)<SUB>49</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,graph[Integer.numberOfTrailingZeros(j)])<SUB>49</SUB>>", "193": "<(numberOfTrailingZeros,Integer.numberOfTrailingZeros(j))<SUB>49</SUB>>", "195": "<(IDENTIFIER,j,Integer.numberOfTrailingZeros(j))<SUB>49</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "199": "<(IDENTIFIER,sum,sum += dp[j][i])<SUB>50</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>50</SUB>>", "203": "<(IDENTIFIER,j,sum += dp[j][i])<SUB>50</SUB>>", "205": "<(println,System.out.println(sum / 2))<SUB>55</SUB>>", "207": "<(IDENTIFIER,System,System.out.println(sum / 2))<SUB>55</SUB>>", "209": "<(&lt;operator&gt;.division,sum / 2)<SUB>55</SUB>>", "211": "<(LITERAL,2,sum / 2)<SUB>55</SUB>>", "213": "<(MODIFIER,STATIC)>"}}