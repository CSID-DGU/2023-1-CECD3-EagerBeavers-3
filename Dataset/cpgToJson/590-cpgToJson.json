{"edges": [["22", "23"], ["22", "24"], ["22", "140"], ["22", "141"], ["22", "142"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "62"], ["24", "65"], ["24", "66"], ["24", "70"], ["24", "88"], ["24", "89"], ["24", "92"], ["24", "135"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["62", "7"], ["62", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "102"], ["92", "104"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["104", "106"], ["104", "117"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "123"], ["117", "125"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "61"], ["59", "63"], ["62", "68"], ["66", "72"], ["89", "94"], ["135", "142"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["61", "59"], ["63", "62"], ["68", "66"], ["72", "75"], ["75", "81"], ["75", "89"], ["78", "75"], ["80", "78"], ["94", "99"], ["97", "111"], ["97", "138"], ["102", "99"], ["136", "135"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["81", "86"], ["84", "80"], ["99", "97"], ["106", "120"], ["138", "136"], ["32", "30"], ["35", "33"], ["86", "84"], ["108", "106"], ["118", "123"], ["118", "129"], ["123", "102"], ["37", "35"], ["109", "114"], ["114", "108"], ["120", "118"], ["111", "109"], ["127", "132"], ["127", "102"], ["132", "102"], ["129", "127"], ["22", "27"], ["23", "142"], ["25", "142"], ["30", "142"], ["33", "142"], ["33", "142"], ["33", "142"], ["28", "142"], ["39", "142"], ["46", "142"], ["53", "142"], ["55", "142"], ["55", "142"], ["53", "142"], ["53", "142"], ["59", "142"], ["62", "142"], ["63", "142"], ["62", "142"], ["62", "142"], ["66", "142"], ["66", "142"], ["66", "142"], ["75", "142"], ["89", "142"], ["94", "142"], ["97", "142"], ["99", "142"], ["97", "142"], ["97", "142"], ["135", "142"], ["135", "142"], ["135", "142"], ["108", "142"], ["108", "142"], ["106", "142"], ["106", "142"], ["118", "142"], ["120", "142"], ["118", "142"], ["118", "142"], ["127", "142"], ["129", "142"], ["127", "142"], ["127", "142"], ["132", "142"], ["123", "142"], ["102", "142"], ["80", "142"], ["84", "142"], ["86", "142"], ["84", "142"], ["80", "142"], ["80", "142"], ["78", "142"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["22", "59"], ["68", "66"], ["22", "89"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["59", "62"], ["22", "62"], ["63", "62"], ["22", "72"], ["84", "80"], ["84", "80"], ["22", "94"], ["89", "135"], ["132", "135"], ["123", "135"], ["22", "135"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["43", "63"], ["22", "63"], ["46", "68"], ["22", "68"], ["72", "75"], ["78", "75"], ["22", "75"], ["68", "75"], ["75", "78"], ["22", "78"], ["94", "97"], ["102", "97"], ["22", "97"], ["99", "97"], ["99", "97"], ["22", "102"], ["97", "102"], ["108", "106"], ["108", "106"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["55", "84"], ["22", "84"], ["86", "84"], ["75", "99"], ["22", "99"], ["62", "86"], ["22", "86"], ["66", "108"], ["80", "108"], ["106", "118"], ["22", "118"], ["120", "118"], ["120", "118"], ["89", "123"], ["132", "123"], ["22", "123"], ["22", "120"], ["53", "120"], ["129", "120"], ["22", "132"], ["97", "111"], ["22", "111"], ["118", "127"], ["22", "127"], ["129", "127"], ["129", "127"], ["89", "132"], ["123", "132"], ["22", "129"], ["120", "129"], ["75", "80"], ["75", "75"], ["75", "81"], ["75", "84"], ["75", "78"], ["75", "86"], ["97", "120"], ["97", "99"], ["97", "118"], ["97", "102"], ["97", "114"], ["97", "106"], ["97", "97"], ["97", "108"], ["97", "111"], ["97", "109"], ["118", "123"], ["118", "127"], ["118", "129"], ["127", "132"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "44": "<(IDENTIFIER,bf,readLine())<SUB>6</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>8</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "50": "<(nextToken,nextToken())<SUB>8</SUB>>", "52": "<(LOCAL,int d: int)<SUB>9</SUB>>", "54": "<(IDENTIFIER,d,int d = parseInt(st.nextToken()))<SUB>9</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "60": "<(IDENTIFIER,st,st = new StringTokenizer(bf.readLine()))<SUB>10</SUB>>", "62": "<(&lt;init&gt;,new StringTokenizer(bf.readLine()))<SUB>10</SUB>>", "63": "<(readLine,readLine())<SUB>10</SUB>>", "65": "<(LOCAL,int[] a: int[])<SUB>11</SUB>>", "67": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "71": "<(LOCAL,int i: int)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,a[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "85": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "87": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,int ans = 2)<SUB>12</SUB>>", "91": "<(LITERAL,2,int ans = 2)<SUB>12</SUB>>", "93": "<(LOCAL,int i: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "101": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "105": "<(LOCAL,int diff: int)<SUB>14</SUB>>", "107": "<(IDENTIFIER,diff,int diff = a[i + 1] - a[i])<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,a[i + 1])<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "113": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "115": "<(IDENTIFIER,a,a[i + 1] - a[i])<SUB>14</SUB>>", "117": "<(CONTROL_STRUCTURE,if (diff == 2 * d),if (diff == 2 * d))<SUB>15</SUB>>", "119": "<(IDENTIFIER,diff,diff == 2 * d)<SUB>15</SUB>>", "121": "<(LITERAL,2,2 * d)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>15</SUB>>", "125": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.greaterThan,diff &gt; 2 * d)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.multiplication,2 * d)<SUB>16</SUB>>", "131": "<(IDENTIFIER,d,2 * d)<SUB>16</SUB>>", "133": "<(IDENTIFIER,ans,ans += 2)<SUB>16</SUB>>", "135": "<(println,System.out.println(ans))<SUB>19</SUB>>", "137": "<(IDENTIFIER,System,System.out.println(ans))<SUB>19</SUB>>", "139": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>19</SUB>>", "141": "<(MODIFIER,STATIC)>"}}