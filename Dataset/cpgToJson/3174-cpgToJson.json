{"edges": [["19", "21"], ["19", "73"], ["19", "74"], ["19", "75"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "40"], ["21", "41"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "53"], ["21", "56"], ["21", "59"], ["21", "62"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["66", "69"], ["69", "70"], ["69", "71"], ["69", "72"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["41", "47"], ["45", "50"], ["50", "53"], ["53", "56"], ["56", "59"], ["59", "65"], ["62", "75"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["47", "45"], ["63", "69"], ["66", "62"], ["28", "26"], ["65", "63"], ["69", "66"], ["19", "24"], ["20", "75"], ["22", "75"], ["25", "75"], ["25", "75"], ["32", "75"], ["30", "75"], ["30", "75"], ["35", "75"], ["35", "75"], ["41", "75"], ["45", "75"], ["45", "75"], ["53", "75"], ["56", "75"], ["59", "75"], ["59", "75"], ["62", "75"], ["66", "75"], ["66", "75"], ["69", "75"], ["69", "75"], ["66", "75"], ["62", "75"], ["62", "75"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["37", "41"], ["19", "41"], ["47", "45"], ["47", "45"], ["19", "50"], ["19", "53"], ["19", "56"], ["45", "59"], ["19", "59"], ["22", "25"], ["19", "25"], ["41", "50"], ["50", "53"], ["53", "56"], ["56", "59"], ["66", "62"], ["66", "62"], ["66", "62"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["19", "47"], ["37", "47"], ["69", "66"], ["19", "66"], ["47", "66"], ["69", "66"], ["69", "66"], ["19", "69"], ["35", "69"], ["59", "69"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int a: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,a,int a = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int f1 = a / 10)<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.division,a / 10)<SUB>6</SUB>>", "39": "<(LITERAL,10,a / 10)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int b = a)<SUB>8</SUB>>", "43": "<(IDENTIFIER,a,int b = a)<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int last = a % 10)<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.modulo,a % 10)<SUB>9</SUB>>", "49": "<(LITERAL,10,a % 10)<SUB>9</SUB>>", "51": "<(IDENTIFIER,b,b /= 10)<SUB>11</SUB>>", "53": "<(&lt;operator&gt;.assignmentDivision,b /= 10)<SUB>12</SUB>>", "55": "<(LITERAL,10,b /= 10)<SUB>12</SUB>>", "57": "<(IDENTIFIER,b,b *= 10)<SUB>13</SUB>>", "59": "<(&lt;operator&gt;.assignmentPlus,b += last)<SUB>14</SUB>>", "61": "<(IDENTIFIER,last,b += last)<SUB>14</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "65": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "67": "<(IDENTIFIER,Math,Math.max(a, Math.max(f1, b)))<SUB>16</SUB>>", "69": "<(max,Math.max(f1, b))<SUB>16</SUB>>", "71": "<(IDENTIFIER,f1,Math.max(f1, b))<SUB>16</SUB>>", "73": "<(MODIFIER,PUBLIC)>", "75": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}