{"edges": [["19", "21"], ["19", "161"], ["19", "162"], ["19", "163"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "57"], ["21", "58"], ["21", "62"], ["21", "67"], ["21", "141"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "136"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "105"], ["92", "112"], ["92", "113"], ["92", "126"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["128", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "149"], ["141", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "43"], ["58", "63"], ["62", "69"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "52"], ["46", "60"], ["49", "46"], ["51", "49"], ["60", "58"], ["63", "62"], ["69", "72"], ["72", "79"], ["72", "143"], ["75", "72"], ["143", "146"], ["146", "163"], ["146", "155"], ["149", "146"], ["52", "55"], ["55", "51"], ["79", "84"], ["136", "75"], ["152", "149"], ["84", "87"], ["87", "99"], ["87", "137"], ["90", "87"], ["137", "136"], ["153", "157"], ["156", "152"], ["94", "108"], ["113", "133"], ["126", "90"], ["155", "153"], ["157", "156"], ["96", "94"], ["106", "90"], ["106", "119"], ["115", "113"], ["128", "126"], ["98", "96"], ["108", "106"], ["117", "115"], ["131", "128"], ["99", "102"], ["102", "98"], ["118", "123"], ["123", "117"], ["133", "131"], ["119", "118"], ["19", "24"], ["20", "163"], ["22", "163"], ["25", "163"], ["27", "163"], ["34", "163"], ["32", "163"], ["32", "163"], ["37", "163"], ["37", "163"], ["58", "163"], ["58", "163"], ["58", "163"], ["62", "163"], ["62", "163"], ["62", "163"], ["69", "163"], ["143", "163"], ["146", "163"], ["146", "163"], ["146", "163"], ["149", "163"], ["75", "163"], ["49", "163"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["60", "58"], ["32", "62"], ["19", "62"], ["22", "25"], ["19", "25"], ["19", "43"], ["55", "51"], ["19", "69"], ["19", "143"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["43", "46"], ["49", "46"], ["19", "46"], ["39", "46"], ["46", "49"], ["19", "49"], ["46", "60"], ["19", "60"], ["69", "72"], ["75", "72"], ["19", "72"], ["60", "72"], ["87", "75"], ["19", "75"], ["108", "79"], ["118", "79"], ["19", "79"], ["32", "79"], ["79", "136"], ["126", "136"], ["19", "136"], ["143", "146"], ["149", "146"], ["19", "146"], ["72", "146"], ["146", "149"], ["19", "149"], ["34", "55"], ["19", "55"], ["19", "84"], ["58", "152"], ["136", "152"], ["19", "152"], ["84", "87"], ["90", "87"], ["19", "87"], ["72", "87"], ["87", "90"], ["19", "90"], ["96", "94"], ["96", "94"], ["115", "113"], ["115", "113"], ["128", "126"], ["128", "126"], ["128", "126"], ["58", "156"], ["136", "156"], ["19", "156"], ["128", "96"], ["19", "96"], ["98", "96"], ["98", "96"], ["94", "106"], ["19", "106"], ["108", "106"], ["108", "106"], ["96", "115"], ["19", "115"], ["117", "115"], ["117", "115"], ["115", "128"], ["19", "128"], ["79", "128"], ["126", "128"], ["113", "128"], ["58", "128"], ["37", "98"], ["51", "98"], ["118", "108"], ["19", "108"], ["32", "108"], ["118", "117"], ["118", "117"], ["123", "117"], ["113", "131"], ["19", "131"], ["58", "131"], ["119", "118"], ["119", "118"], ["19", "118"], ["106", "123"], ["19", "123"], ["19", "119"], ["108", "119"], ["46", "49"], ["46", "51"], ["46", "52"], ["46", "46"], ["46", "55"], ["72", "136"], ["72", "75"], ["72", "84"], ["72", "72"], ["72", "87"], ["72", "137"], ["72", "79"], ["146", "146"], ["146", "149"], ["146", "153"], ["146", "157"], ["146", "152"], ["146", "155"], ["146", "156"], ["87", "94"], ["87", "96"], ["87", "98"], ["87", "99"], ["87", "102"], ["87", "106"], ["87", "87"], ["87", "90"], ["87", "108"], ["106", "115"], ["106", "113"], ["106", "128"], ["106", "131"], ["106", "119"], ["106", "123"], ["106", "126"], ["106", "118"], ["106", "117"], ["106", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,double r: double)<SUB>4</SUB>>", "33": "<(IDENTIFIER,r,double r = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,double[] x = new double[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new double[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,x[i] = nextDouble())<SUB>7</SUB>>", "53": "<(IDENTIFIER,x,x[i] = nextDouble())<SUB>7</SUB>>", "55": "<(nextDouble,nextDouble())<SUB>7</SUB>>", "57": "<(LOCAL,double[] y: double[])<SUB>9</SUB>>", "59": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>9</SUB>>", "61": "<(IDENTIFIER,n,new double[n])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,y[0])<SUB>10</SUB>>", "65": "<(LITERAL,0,y[0] = r)<SUB>10</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>12</SUB>>", "71": "<(LITERAL,1,int i = 1)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,double miny = r)<SUB>13</SUB>>", "81": "<(IDENTIFIER,r,double miny = r)<SUB>13</SUB>>", "83": "<(LOCAL,int j: int)<SUB>14</SUB>>", "85": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,j &lt; i)<SUB>14</SUB>>", "91": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "93": "<(LOCAL,double dx: double)<SUB>15</SUB>>", "95": "<(IDENTIFIER,dx,double dx = Math.abs(x[i] - x[j]))<SUB>15</SUB>>", "97": "<(IDENTIFIER,Math,Math.abs(x[i] - x[j]))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,x[i] - x[j])<SUB>15</SUB>>", "103": "<(IDENTIFIER,x,x[i] - x[j])<SUB>15</SUB>>", "105": "<(CONTROL_STRUCTURE,if (dx &gt; r * 2),if (dx &gt; r * 2))<SUB>16</SUB>>", "107": "<(IDENTIFIER,dx,dx &gt; r * 2)<SUB>16</SUB>>", "109": "<(IDENTIFIER,r,r * 2)<SUB>16</SUB>>", "111": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,double yy = Math.sqrt(4 * r * r - dx * dx))<SUB>17</SUB>>", "115": "<(sqrt,Math.sqrt(4 * r * r - dx * dx))<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.subtraction,4 * r * r - dx * dx)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>17</SUB>>", "121": "<(IDENTIFIER,r,4 * r)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.multiplication,dx * dx)<SUB>17</SUB>>", "125": "<(IDENTIFIER,dx,dx * dx)<SUB>17</SUB>>", "127": "<(IDENTIFIER,miny,miny = Math.max(miny, yy + y[j]))<SUB>18</SUB>>", "129": "<(IDENTIFIER,Math,Math.max(miny, yy + y[j]))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.addition,yy + y[j])<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>18</SUB>>", "135": "<(IDENTIFIER,j,yy + y[j])<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>20</SUB>>", "139": "<(IDENTIFIER,i,y[i] = miny)<SUB>20</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "145": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "155": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>23</SUB>>", "159": "<(IDENTIFIER,i,y[i] + &quot; &quot;)<SUB>23</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}