{"edges": [["25", "26"], ["25", "27"], ["25", "180"], ["25", "181"], ["25", "182"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "8"], ["27", "39"], ["27", "42"], ["27", "10"], ["27", "43"], ["27", "46"], ["27", "47"], ["27", "48"], ["27", "51"], ["27", "52"], ["27", "56"], ["27", "57"], ["27", "61"], ["27", "84"], ["27", "87"], ["27", "88"], ["27", "91"], ["27", "92"], ["27", "98"], ["27", "168"], ["27", "175"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "7"], ["43", "44"], ["43", "45"], ["46", "9"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "76"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["78", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "105"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["117", "124"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "130"], ["124", "164"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["130", "140"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["134", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "152"], ["140", "160"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "155"], ["153", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["161", "162"], ["162", "163"], ["164", "165"], ["165", "166"], ["166", "167"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["28", "31"], ["31", "34"], ["32", "38"], ["35", "41"], ["39", "42"], ["42", "45"], ["43", "46"], ["46", "48"], ["48", "54"], ["52", "59"], ["57", "63"], ["84", "88"], ["88", "95"], ["92", "102"], ["175", "182"], ["30", "28"], ["34", "32"], ["36", "35"], ["41", "39"], ["45", "43"], ["54", "52"], ["59", "57"], ["63", "66"], ["66", "74"], ["66", "84"], ["69", "66"], ["94", "92"], ["100", "105"], ["105", "113"], ["105", "169"], ["108", "105"], ["169", "172"], ["169", "178"], ["172", "178"], ["176", "175"], ["38", "36"], ["72", "81"], ["76", "69"], ["95", "94"], ["102", "100"], ["178", "176"], ["74", "72"], ["78", "76"], ["112", "121"], ["112", "108"], ["81", "78"], ["113", "112"], ["119", "126"], ["121", "119"], ["125", "137"], ["125", "166"], ["126", "125"], ["132", "142"], ["134", "132"], ["141", "153"], ["141", "162"], ["166", "108"], ["137", "134"], ["142", "141"], ["142", "146"], ["145", "141"], ["153", "156"], ["155", "108"], ["146", "149"], ["149", "145"], ["156", "155"], ["162", "108"], ["25", "30"], ["26", "182"], ["28", "182"], ["31", "182"], ["31", "182"], ["32", "182"], ["35", "182"], ["35", "182"], ["39", "182"], ["42", "182"], ["42", "182"], ["43", "182"], ["46", "182"], ["48", "182"], ["48", "182"], ["52", "182"], ["57", "182"], ["59", "182"], ["57", "182"], ["57", "182"], ["63", "182"], ["66", "182"], ["84", "182"], ["84", "182"], ["84", "182"], ["88", "182"], ["92", "182"], ["94", "182"], ["92", "182"], ["92", "182"], ["100", "182"], ["100", "182"], ["105", "182"], ["105", "182"], ["169", "182"], ["169", "182"], ["172", "182"], ["175", "182"], ["175", "182"], ["175", "182"], ["112", "182"], ["112", "182"], ["121", "182"], ["119", "182"], ["119", "182"], ["126", "182"], ["126", "182"], ["125", "182"], ["125", "182"], ["166", "182"], ["134", "182"], ["134", "182"], ["137", "182"], ["137", "182"], ["134", "182"], ["132", "182"], ["132", "182"], ["142", "182"], ["141", "182"], ["146", "182"], ["146", "182"], ["145", "182"], ["149", "182"], ["149", "182"], ["145", "182"], ["141", "182"], ["141", "182"], ["162", "182"], ["153", "182"], ["155", "182"], ["155", "182"], ["108", "182"], ["74", "182"], ["72", "182"], ["72", "182"], ["76", "182"], ["78", "182"], ["76", "182"], ["76", "182"], ["69", "182"], ["78", "182"], ["25", "26"], ["25", "28"], ["25", "32"], ["25", "39"], ["25", "43"], ["25", "48"], ["54", "52"], ["59", "57"], ["25", "88"], ["94", "92"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["39", "42"], ["25", "42"], ["43", "46"], ["25", "46"], ["25", "63"], ["25", "84"], ["46", "84"], ["81", "84"], ["102", "100"], ["102", "100"], ["25", "172"], ["88", "175"], ["172", "175"], ["166", "175"], ["162", "175"], ["153", "175"], ["25", "175"], ["35", "54"], ["25", "54"], ["54", "59"], ["25", "59"], ["63", "66"], ["69", "66"], ["25", "66"], ["52", "66"], ["81", "69"], ["25", "69"], ["78", "76"], ["78", "76"], ["78", "76"], ["66", "94"], ["25", "94"], ["100", "105"], ["108", "105"], ["25", "105"], ["105", "108"], ["121", "108"], ["25", "108"], ["102", "169"], ["25", "169"], ["46", "72"], ["81", "72"], ["25", "72"], ["74", "72"], ["66", "95"], ["25", "95"], ["25", "102"], ["66", "102"], ["59", "74"], ["25", "74"], ["25", "78"], ["48", "78"], ["76", "78"], ["81", "78"], ["81", "78"], ["92", "112"], ["25", "112"], ["121", "119"], ["121", "119"], ["72", "81"], ["25", "81"], ["66", "81"], ["84", "121"], ["134", "121"], ["146", "121"], ["25", "121"], ["105", "121"], ["126", "125"], ["126", "125"], ["25", "125"], ["134", "132"], ["134", "132"], ["134", "132"], ["119", "126"], ["25", "126"], ["57", "126"], ["137", "126"], ["149", "126"], ["84", "134"], ["25", "134"], ["121", "134"], ["137", "134"], ["137", "134"], ["142", "141"], ["142", "141"], ["145", "141"], ["145", "141"], ["25", "155"], ["88", "166"], ["162", "166"], ["153", "166"], ["25", "166"], ["126", "137"], ["25", "137"], ["126", "137"], ["132", "142"], ["25", "142"], ["146", "145"], ["146", "145"], ["149", "145"], ["149", "145"], ["88", "153"], ["166", "153"], ["162", "153"], ["25", "153"], ["134", "146"], ["25", "146"], ["142", "146"], ["137", "149"], ["25", "149"], ["137", "149"], ["88", "162"], ["166", "162"], ["153", "162"], ["25", "162"], ["66", "66"], ["66", "81"], ["66", "72"], ["66", "69"], ["66", "74"], ["66", "76"], ["66", "78"], ["105", "113"], ["105", "112"], ["105", "105"], ["105", "108"], ["169", "172"], ["112", "119"], ["112", "121"], ["112", "126"], ["112", "125"], ["125", "141"], ["125", "166"], ["125", "132"], ["125", "142"], ["125", "134"], ["125", "137"], ["141", "162"], ["141", "153"], ["141", "155"], ["141", "156"], ["142", "145"], ["142", "146"], ["142", "149"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY a = new div168C())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new div168C())<SUB>3</SUB>>", "3": "<(IDENTIFIER,a,new div168C())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY pd = a.new Parserdoubt(System.in))<SUB>4</SUB>>", "34": "<(&lt;operator&gt;.alloc,a.new Parserdoubt(System.in))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pd,a.new Parserdoubt(System.in))<SUB>4</SUB>>", "37": "<(IDENTIFIER,System,a.new Parserdoubt(System.in))<SUB>4</SUB>>", "8": "<(LOCAL,StringBuffer sb: java.lang.StringBuffer)<SUB>5</SUB>>", "40": "<(IDENTIFIER,sb,StringBuffer sb = new StringBuffer())<SUB>5</SUB>>", "42": "<(&lt;init&gt;,new StringBuffer())<SUB>5</SUB>>", "10": "<(LOCAL,ArrayList&lt;Integer&gt; arr: ANY)<SUB>7</SUB>>", "44": "<(IDENTIFIER,arr,ANY arr = new ArrayList&lt;Integer&gt;())<SUB>7</SUB>>", "46": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>7</SUB>>", "47": "<(LOCAL,int max: int)<SUB>8</SUB>>", "49": "<(IDENTIFIER,max,int max = 0)<SUB>8</SUB>>", "51": "<(LOCAL,int n: int)<SUB>9</SUB>>", "53": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "55": "<(IDENTIFIER,pd,nextInt())<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>10</SUB>>", "59": "<(nextInt,nextInt())<SUB>10</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "73": "<(IDENTIFIER,arr,add(pd.nextInt()))<SUB>12</SUB>>", "75": "<(IDENTIFIER,pd,nextInt())<SUB>12</SUB>>", "77": "<(IDENTIFIER,max,max = max(max, arr.get(i)))<SUB>13</SUB>>", "79": "<(IDENTIFIER,Math,max(max, arr.get(i)))<SUB>13</SUB>>", "81": "<(get,get(i))<SUB>13</SUB>>", "83": "<(IDENTIFIER,i,get(i))<SUB>13</SUB>>", "85": "<(IDENTIFIER,Collections,sort(arr))<SUB>15</SUB>>", "87": "<(LOCAL,int count: int)<SUB>17</SUB>>", "89": "<(IDENTIFIER,count,int count = 0)<SUB>17</SUB>>", "91": "<(LOCAL,int[] mat: int[])<SUB>18</SUB>>", "93": "<(IDENTIFIER,mat,int[] mat = new int[n + 1])<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.addition,n + 1)<SUB>18</SUB>>", "97": "<(LITERAL,1,n + 1)<SUB>18</SUB>>", "99": "<(LOCAL,int i: int)<SUB>19</SUB>>", "101": "<(IDENTIFIER,i,int i = n - 1)<SUB>19</SUB>>", "103": "<(IDENTIFIER,n,n - 1)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>19</SUB>>", "107": "<(LITERAL,0,i &gt;= 0)<SUB>19</SUB>>", "109": "<(IDENTIFIER,i,i--)<SUB>19</SUB>>", "111": "<(CONTROL_STRUCTURE,if (mat[i] != 1),if (mat[i] != 1))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>20</SUB>>", "115": "<(IDENTIFIER,i,mat[i] != 1)<SUB>20</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,int x = get(i))<SUB>21</SUB>>", "121": "<(get,get(i))<SUB>21</SUB>>", "123": "<(IDENTIFIER,i,get(i))<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.equals,x % k == 0)<SUB>22</SUB>>", "127": "<(IDENTIFIER,x,x % k)<SUB>22</SUB>>", "129": "<(LITERAL,0,x % k == 0)<SUB>22</SUB>>", "131": "<(LOCAL,int ans: int)<SUB>23</SUB>>", "133": "<(IDENTIFIER,ans,int ans = binarySearch(arr, x / k))<SUB>23</SUB>>", "135": "<(IDENTIFIER,Collections,binarySearch(arr, x / k))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.division,x / k)<SUB>23</SUB>>", "139": "<(IDENTIFIER,k,x / k)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.logicalAnd,ans &gt;= 0 &amp;&amp; arr.get(ans) == (x / k))<SUB>27</SUB>>", "143": "<(IDENTIFIER,ans,ans &gt;= 0)<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.equals,arr.get(ans) == (x / k))<SUB>27</SUB>>", "147": "<(IDENTIFIER,arr,get(ans))<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.division,x / k)<SUB>27</SUB>>", "151": "<(IDENTIFIER,k,x / k)<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,count++)<SUB>28</SUB>>", "155": "<(&lt;operator&gt;.assignment,mat[ans] = 1)<SUB>29</SUB>>", "157": "<(IDENTIFIER,mat,mat[ans] = 1)<SUB>29</SUB>>", "159": "<(LITERAL,1,mat[ans] = 1)<SUB>29</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "163": "<(IDENTIFIER,count,count++)<SUB>32</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "167": "<(IDENTIFIER,count,count++)<SUB>36</SUB>>", "169": "<(&lt;operator&gt;.equals,n == 1)<SUB>45</SUB>>", "171": "<(LITERAL,1,n == 1)<SUB>45</SUB>>", "173": "<(IDENTIFIER,count,count = 1)<SUB>46</SUB>>", "175": "<(println,System.out.println(count))<SUB>47</SUB>>", "177": "<(IDENTIFIER,System,System.out.println(count))<SUB>47</SUB>>", "179": "<(IDENTIFIER,count,System.out.println(count))<SUB>47</SUB>>", "181": "<(MODIFIER,STATIC)>"}}