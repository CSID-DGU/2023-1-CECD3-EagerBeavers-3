{"edges": [["25", "26"], ["25", "27"], ["25", "418"], ["25", "419"], ["25", "420"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "35"], ["27", "38"], ["27", "42"], ["27", "43"], ["27", "46"], ["27", "47"], ["27", "416"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "5"], ["38", "39"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "52"], ["48", "49"], ["48", "51"], ["49", "50"], ["52", "53"], ["52", "54"], ["52", "58"], ["52", "59"], ["52", "8"], ["52", "64"], ["52", "67"], ["52", "68"], ["52", "69"], ["52", "75"], ["52", "101"], ["52", "164"], ["52", "165"], ["52", "10"], ["52", "168"], ["52", "171"], ["52", "172"], ["52", "173"], ["52", "177"], ["52", "178"], ["52", "182"], ["52", "183"], ["52", "188"], ["52", "388"], ["52", "391"], ["52", "392"], ["52", "395"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "7"], ["69", "70"], ["69", "71"], ["71", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "124"], ["122", "135"], ["122", "151"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "140"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["141", "142"], ["141", "143"], ["141", "144"], ["144", "145"], ["144", "148"], ["144", "150"], ["145", "146"], ["145", "147"], ["148", "149"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["155", "163"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["159", "162"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "9"], ["173", "174"], ["173", "175"], ["175", "176"], ["178", "179"], ["178", "180"], ["180", "181"], ["183", "184"], ["183", "185"], ["185", "186"], ["186", "187"], ["188", "189"], ["188", "191"], ["189", "190"], ["191", "192"], ["191", "193"], ["191", "197"], ["191", "200"], ["191", "201"], ["191", "206"], ["191", "207"], ["191", "212"], ["191", "213"], ["191", "218"], ["191", "226"], ["191", "234"], ["191", "243"], ["191", "367"], ["193", "194"], ["193", "195"], ["195", "196"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["203", "204"], ["204", "205"], ["207", "208"], ["207", "209"], ["209", "210"], ["210", "211"], ["213", "214"], ["213", "215"], ["215", "216"], ["216", "217"], ["218", "219"], ["218", "225"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "224"], ["222", "223"], ["226", "227"], ["226", "233"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "232"], ["230", "231"], ["234", "235"], ["234", "241"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "240"], ["238", "239"], ["241", "242"], ["243", "244"], ["243", "245"], ["243", "251"], ["243", "254"], ["243", "256"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "250"], ["248", "249"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["256", "266"], ["256", "271"], ["256", "278"], ["256", "279"], ["256", "284"], ["256", "285"], ["256", "289"], ["256", "326"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "283"], ["285", "286"], ["285", "287"], ["287", "288"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["293", "300"], ["293", "303"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "315"], ["303", "319"], ["304", "305"], ["304", "310"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["315", "316"], ["316", "317"], ["316", "318"], ["319", "320"], ["320", "321"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "331"], ["327", "328"], ["327", "329"], ["329", "330"], ["331", "332"], ["332", "333"], ["332", "342"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "341"], ["342", "343"], ["342", "357"], ["342", "362"], ["343", "344"], ["343", "347"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "349"], ["347", "352"], ["349", "350"], ["349", "351"], ["352", "353"], ["352", "354"], ["354", "355"], ["354", "356"], ["357", "358"], ["357", "361"], ["358", "359"], ["358", "360"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["367", "368"], ["367", "373"], ["368", "369"], ["368", "372"], ["369", "370"], ["369", "371"], ["373", "374"], ["373", "379"], ["373", "382"], ["373", "385"], ["374", "375"], ["374", "376"], ["376", "377"], ["376", "378"], ["379", "380"], ["379", "381"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "387"], ["388", "389"], ["388", "390"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "400"], ["396", "397"], ["396", "398"], ["398", "399"], ["400", "401"], ["400", "411"], ["401", "402"], ["401", "405"], ["402", "403"], ["402", "404"], ["405", "406"], ["406", "407"], ["406", "408"], ["408", "409"], ["408", "410"], ["411", "412"], ["411", "413"], ["413", "414"], ["413", "415"], ["416", "417"], ["28", "34"], ["31", "37"], ["35", "41"], ["38", "43"], ["43", "49"], ["416", "420"], ["30", "28"], ["32", "31"], ["37", "35"], ["39", "38"], ["48", "56"], ["48", "416"], ["34", "32"], ["41", "39"], ["49", "48"], ["54", "61"], ["59", "66"], ["64", "67"], ["67", "72"], ["69", "77"], ["165", "170"], ["168", "171"], ["171", "175"], ["173", "180"], ["178", "186"], ["183", "189"], ["388", "392"], ["392", "398"], ["56", "54"], ["61", "59"], ["66", "64"], ["71", "69"], ["77", "80"], ["80", "87"], ["80", "103"], ["83", "80"], ["103", "106"], ["106", "114"], ["106", "165"], ["109", "106"], ["170", "168"], ["175", "173"], ["180", "178"], ["185", "183"], ["189", "195"], ["189", "388"], ["396", "49"], ["396", "402"], ["72", "71"], ["86", "83"], ["186", "185"], ["193", "197"], ["197", "204"], ["201", "210"], ["207", "216"], ["213", "222"], ["218", "230"], ["226", "238"], ["234", "248"], ["398", "396"], ["411", "398"], ["87", "93"], ["90", "86"], ["114", "117"], ["117", "127"], ["117", "109"], ["120", "117"], ["195", "193"], ["203", "201"], ["209", "207"], ["215", "213"], ["219", "218"], ["227", "226"], ["235", "241"], ["241", "234"], ["245", "251"], ["251", "258"], ["251", "369"], ["254", "251"], ["368", "189"], ["368", "376"], ["402", "408"], ["402", "413"], ["413", "411"], ["91", "98"], ["96", "90"], ["124", "137"], ["151", "120"], ["204", "203"], ["210", "209"], ["216", "215"], ["221", "219"], ["229", "227"], ["237", "235"], ["247", "245"], ["257", "267"], ["266", "272"], ["271", "281"], ["279", "287"], ["285", "290"], ["369", "368"], ["374", "379"], ["379", "382"], ["382", "385"], ["385", "189"], ["406", "413"], ["93", "91"], ["98", "96"], ["126", "124"], ["136", "147"], ["136", "152"], ["152", "158"], ["222", "221"], ["230", "229"], ["238", "237"], ["248", "247"], ["258", "263"], ["261", "257"], ["267", "266"], ["272", "275"], ["275", "271"], ["281", "279"], ["287", "285"], ["290", "297"], ["290", "329"], ["327", "334"], ["327", "254"], ["376", "374"], ["408", "406"], ["127", "132"], ["130", "126"], ["137", "136"], ["141", "152"], ["156", "159"], ["159", "151"], ["263", "261"], ["295", "300"], ["300", "306"], ["329", "327"], ["132", "130"], ["158", "156"], ["297", "295"], ["304", "316"], ["304", "323"], ["333", "344"], ["333", "254"], ["145", "148"], ["148", "141"], ["305", "311"], ["310", "304"], ["316", "290"], ["334", "339"], ["337", "333"], ["343", "358"], ["357", "363"], ["362", "254"], ["147", "145"], ["306", "309"], ["309", "305"], ["311", "314"], ["314", "310"], ["321", "290"], ["339", "337"], ["344", "349"], ["347", "343"], ["358", "357"], ["363", "362"], ["323", "321"], ["349", "354"], ["352", "347"], ["354", "352"], ["25", "30"], ["26", "420"], ["28", "420"], ["31", "420"], ["31", "420"], ["31", "420"], ["35", "420"], ["38", "420"], ["38", "420"], ["43", "420"], ["49", "420"], ["48", "420"], ["48", "420"], ["416", "420"], ["416", "420"], ["54", "420"], ["54", "420"], ["59", "420"], ["61", "420"], ["59", "420"], ["59", "420"], ["64", "420"], ["67", "420"], ["69", "420"], ["71", "420"], ["69", "420"], ["69", "420"], ["103", "420"], ["106", "420"], ["106", "420"], ["106", "420"], ["165", "420"], ["168", "420"], ["171", "420"], ["171", "420"], ["173", "420"], ["173", "420"], ["173", "420"], ["178", "420"], ["178", "420"], ["178", "420"], ["186", "420"], ["185", "420"], ["183", "420"], ["189", "420"], ["189", "420"], ["388", "420"], ["388", "420"], ["392", "420"], ["396", "420"], ["396", "420"], ["396", "420"], ["408", "420"], ["406", "420"], ["406", "420"], ["411", "420"], ["411", "420"], ["197", "420"], ["201", "420"], ["201", "420"], ["207", "420"], ["207", "420"], ["207", "420"], ["213", "420"], ["213", "420"], ["213", "420"], ["218", "420"], ["218", "420"], ["226", "420"], ["226", "420"], ["234", "420"], ["234", "420"], ["248", "420"], ["247", "420"], ["245", "420"], ["245", "420"], ["251", "420"], ["251", "420"], ["368", "420"], ["368", "420"], ["374", "420"], ["374", "420"], ["379", "420"], ["379", "420"], ["379", "420"], ["382", "420"], ["382", "420"], ["382", "420"], ["385", "420"], ["385", "420"], ["385", "420"], ["257", "420"], ["257", "420"], ["257", "420"], ["266", "420"], ["266", "420"], ["271", "420"], ["271", "420"], ["279", "420"], ["279", "420"], ["285", "420"], ["290", "420"], ["290", "420"], ["327", "420"], ["329", "420"], ["327", "420"], ["327", "420"], ["333", "420"], ["337", "420"], ["333", "420"], ["333", "420"], ["343", "420"], ["352", "420"], ["347", "420"], ["343", "420"], ["343", "420"], ["357", "420"], ["357", "420"], ["362", "420"], ["362", "420"], ["362", "420"], ["254", "420"], ["295", "420"], ["295", "420"], ["300", "420"], ["304", "420"], ["323", "420"], ["321", "420"], ["321", "420"], ["316", "420"], ["316", "420"], ["114", "420"], ["117", "420"], ["117", "420"], ["109", "420"], ["126", "420"], ["126", "420"], ["124", "420"], ["124", "420"], ["136", "420"], ["136", "420"], ["148", "420"], ["141", "420"], ["152", "420"], ["151", "420"], ["159", "420"], ["159", "420"], ["151", "420"], ["120", "420"], ["86", "420"], ["90", "420"], ["90", "420"], ["86", "420"], ["86", "420"], ["83", "420"], ["347", "420"], ["197", "420"], ["25", "26"], ["25", "28"], ["25", "35"], ["25", "43"], ["28", "31"], ["25", "31"], ["35", "38"], ["25", "38"], ["38", "416"], ["388", "416"], ["406", "416"], ["25", "416"], ["49", "48"], ["25", "48"], ["56", "54"], ["61", "59"], ["61", "59"], ["25", "64"], ["71", "69"], ["25", "165"], ["25", "168"], ["175", "173"], ["180", "178"], ["185", "183"], ["25", "392"], ["43", "49"], ["25", "49"], ["64", "67"], ["25", "67"], ["25", "77"], ["25", "103"], ["168", "171"], ["25", "171"], ["38", "388"], ["406", "388"], ["25", "388"], ["165", "388"], ["368", "388"], ["374", "388"], ["31", "56"], ["61", "56"], ["25", "56"], ["56", "61"], ["25", "61"], ["54", "61"], ["61", "71"], ["25", "71"], ["77", "80"], ["83", "80"], ["25", "80"], ["61", "80"], ["98", "83"], ["25", "83"], ["59", "86"], ["69", "86"], ["126", "86"], ["103", "106"], ["109", "106"], ["25", "106"], ["80", "106"], ["117", "106"], ["159", "109"], ["25", "109"], ["106", "109"], ["25", "175"], ["25", "180"], ["186", "185"], ["183", "189"], ["195", "189"], ["25", "189"], ["195", "193"], ["203", "201"], ["209", "207"], ["215", "213"], ["25", "218"], ["25", "226"], ["241", "234"], ["392", "396"], ["411", "396"], ["25", "396"], ["398", "396"], ["173", "411"], ["382", "411"], ["61", "72"], ["25", "72"], ["106", "114"], ["25", "114"], ["67", "186"], ["152", "186"], ["25", "186"], ["25", "197"], ["193", "197"], ["247", "245"], ["247", "245"], ["25", "398"], ["59", "90"], ["69", "90"], ["126", "90"], ["114", "117"], ["120", "117"], ["25", "117"], ["106", "117"], ["159", "120"], ["25", "120"], ["126", "124"], ["126", "124"], ["189", "195"], ["25", "195"], ["204", "203"], ["210", "209"], ["216", "215"], ["25", "241"], ["245", "251"], ["254", "251"], ["25", "251"], ["311", "254"], ["25", "254"], ["251", "254"], ["213", "257"], ["25", "266"], ["25", "271"], ["251", "271"], ["25", "279"], ["251", "279"], ["287", "285"], ["213", "368"], ["165", "368"], ["374", "368"], ["25", "368"], ["213", "374"], ["368", "374"], ["248", "379"], ["329", "379"], ["25", "379"], ["201", "382"], ["234", "382"], ["271", "382"], ["362", "382"], ["25", "382"], ["207", "385"], ["226", "385"], ["266", "385"], ["357", "385"], ["25", "385"], ["152", "151"], ["152", "151"], ["156", "151"], ["159", "151"], ["25", "151"], ["197", "204"], ["25", "204"], ["204", "210"], ["25", "210"], ["210", "216"], ["25", "216"], ["222", "221"], ["25", "221"], ["230", "229"], ["25", "229"], ["238", "237"], ["25", "237"], ["248", "247"], ["25", "247"], ["388", "406"], ["25", "406"], ["408", "406"], ["408", "406"], ["80", "93"], ["25", "93"], ["93", "98"], ["25", "98"], ["69", "126"], ["137", "136"], ["137", "136"], ["137", "152"], ["141", "152"], ["25", "152"], ["137", "152"], ["141", "152"], ["25", "156"], ["25", "163"], ["216", "222"], ["25", "222"], ["222", "230"], ["25", "230"], ["230", "238"], ["25", "238"], ["238", "248"], ["25", "248"], ["25", "275"], ["251", "275"], ["25", "281"], ["251", "281"], ["248", "287"], ["329", "287"], ["25", "287"], ["279", "290"], ["321", "290"], ["25", "290"], ["285", "290"], ["316", "290"], ["290", "295"], ["25", "295"], ["290", "295"], ["25", "300"], ["290", "327"], ["25", "327"], ["329", "327"], ["171", "408"], ["379", "408"], ["25", "408"], ["396", "408"], ["67", "137"], ["152", "137"], ["25", "137"], ["124", "137"], ["137", "141"], ["25", "141"], ["137", "141"], ["145", "141"], ["148", "141"], ["156", "159"], ["25", "159"], ["132", "159"], ["117", "159"], ["251", "263"], ["25", "263"], ["295", "300"], ["287", "329"], ["311", "329"], ["25", "329"], ["159", "132"], ["25", "132"], ["106", "132"], ["25", "145"], ["25", "150"], ["290", "297"], ["25", "297"], ["290", "297"], ["306", "316"], ["25", "316"], ["213", "333"], ["257", "333"], ["25", "333"], ["347", "343"], ["347", "343"], ["347", "343"], ["25", "357"], ["327", "362"], ["25", "362"], ["145", "148"], ["25", "148"], ["306", "321"], ["25", "321"], ["25", "337"], ["213", "337"], ["287", "306"], ["311", "306"], ["25", "306"], ["300", "306"], ["306", "311"], ["25", "311"], ["251", "311"], ["25", "347"], ["213", "347"], ["333", "347"], ["306", "323"], ["25", "323"], ["25", "352"], ["213", "352"], ["48", "168"], ["48", "170"], ["48", "59"], ["48", "392"], ["48", "396"], ["48", "54"], ["48", "80"], ["48", "61"], ["48", "186"], ["48", "180"], ["48", "48"], ["48", "49"], ["48", "66"], ["48", "72"], ["48", "388"], ["48", "71"], ["48", "77"], ["48", "64"], ["48", "178"], ["48", "103"], ["48", "56"], ["48", "69"], ["48", "67"], ["48", "185"], ["48", "189"], ["48", "173"], ["48", "171"], ["48", "398"], ["48", "183"], ["48", "106"], ["48", "165"], ["48", "175"], ["80", "93"], ["80", "80"], ["80", "86"], ["80", "96"], ["80", "98"], ["80", "87"], ["80", "91"], ["80", "90"], ["80", "83"], ["106", "114"], ["106", "117"], ["106", "109"], ["106", "106"], ["189", "230"], ["189", "215"], ["189", "209"], ["189", "226"], ["189", "213"], ["189", "204"], ["189", "247"], ["189", "195"], ["189", "238"], ["189", "201"], ["189", "368"], ["189", "237"], ["189", "229"], ["189", "241"], ["189", "216"], ["189", "227"], ["189", "222"], ["189", "197"], ["189", "189"], ["189", "245"], ["189", "207"], ["189", "221"], ["189", "235"], ["189", "193"], ["189", "210"], ["189", "251"], ["189", "234"], ["189", "369"], ["189", "248"], ["189", "203"], ["189", "218"], ["189", "219"], ["396", "396"], ["396", "402"], ["396", "413"], ["396", "411"], ["396", "398"], ["117", "120"], ["117", "136"], ["117", "152"], ["117", "127"], ["117", "158"], ["117", "159"], ["117", "117"], ["117", "132"], ["117", "151"], ["117", "137"], ["117", "130"], ["117", "126"], ["117", "156"], ["117", "124"], ["251", "272"], ["251", "290"], ["251", "281"], ["251", "258"], ["251", "329"], ["251", "254"], ["251", "257"], ["251", "261"], ["251", "279"], ["251", "275"], ["251", "285"], ["251", "267"], ["251", "327"], ["251", "287"], ["251", "251"], ["251", "263"], ["251", "271"], ["251", "266"], ["368", "376"], ["368", "382"], ["368", "374"], ["368", "385"], ["368", "379"], ["402", "408"], ["402", "406"], ["136", "148"], ["136", "141"], ["136", "147"], ["136", "145"], ["290", "290"], ["290", "300"], ["290", "306"], ["290", "304"], ["290", "311"], ["290", "310"], ["290", "305"], ["290", "297"], ["290", "309"], ["290", "314"], ["290", "295"], ["327", "334"], ["327", "337"], ["327", "339"], ["327", "333"], ["304", "323"], ["304", "316"], ["304", "321"], ["333", "358"], ["333", "349"], ["333", "362"], ["333", "347"], ["333", "357"], ["333", "352"], ["333", "343"], ["333", "354"], ["333", "363"], ["333", "344"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY s = new InputReader(System.in))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new InputReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "36": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "38": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "41": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,int t = 1)<SUB>5</SUB>>", "45": "<(LITERAL,1,int t = 1)<SUB>5</SUB>>", "47": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.postDecrement,t--)<SUB>8</SUB>>", "51": "<(LITERAL,0,t-- &gt; 0)<SUB>8</SUB>>", "53": "<(LOCAL,int n: int)<SUB>9</SUB>>", "55": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "57": "<(IDENTIFIER,s,nextInt())<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[] a = nextIntArray(n))<SUB>10</SUB>>", "61": "<(nextIntArray,nextIntArray(n))<SUB>10</SUB>>", "63": "<(IDENTIFIER,n,nextIntArray(n))<SUB>10</SUB>>", "64": "<(&lt;operator&gt;.assignment,ANY sets = new HashMap&lt;&gt;())<SUB>12</SUB>>", "66": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>12</SUB>>", "7": "<(IDENTIFIER,sets,new HashMap&lt;&gt;())<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.assignment,int[] pre = new int[n + 1])<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "73": "<(IDENTIFIER,n,n + 1)<SUB>13</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>14</SUB>>", "79": "<(LITERAL,1,int i = 1)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,i &lt;= n)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,pre[i])<SUB>15</SUB>>", "89": "<(IDENTIFIER,i,pre[i] = a[i - 1] + pre[i - 1])<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>15</SUB>>", "95": "<(LITERAL,1,i - 1)<SUB>15</SUB>>", "97": "<(IDENTIFIER,pre,a[i - 1] + pre[i - 1])<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "105": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "107": "<(IDENTIFIER,i,i &lt;= n)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(LOCAL,int j: int)<SUB>19</SUB>>", "115": "<(IDENTIFIER,j,int j = i)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>19</SUB>>", "119": "<(IDENTIFIER,n,j &lt;= n)<SUB>19</SUB>>", "121": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "123": "<(LOCAL,Integer key: java.lang.Integer)<SUB>20</SUB>>", "125": "<(IDENTIFIER,key,Integer key = pre[j] - pre[i - 1])<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>20</SUB>>", "129": "<(IDENTIFIER,j,pre[j] - pre[i - 1])<SUB>20</SUB>>", "131": "<(IDENTIFIER,pre,pre[j] - pre[i - 1])<SUB>20</SUB>>", "133": "<(IDENTIFIER,i,i - 1)<SUB>20</SUB>>", "135": "<(CONTROL_STRUCTURE,if (!sets.containsKey(key)),if (!sets.containsKey(key)))<SUB>21</SUB>>", "137": "<(containsKey,containsKey(key))<SUB>21</SUB>>", "139": "<(IDENTIFIER,key,containsKey(key))<SUB>21</SUB>>", "141": "<(put,put(key, new ArrayList&lt;&gt;()))<SUB>22</SUB>>", "143": "<(IDENTIFIER,key,put(key, new ArrayList&lt;&gt;()))<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "147": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>22</SUB>>", "149": "<(IDENTIFIER,$obj3,new ArrayList&lt;&gt;())>", "151": "<(add,add(new Pair(i, j)))<SUB>25</SUB>>", "153": "<(IDENTIFIER,sets,get(key))<SUB>25</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "157": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "159": "<(&lt;init&gt;,new Pair(i, j))<SUB>25</SUB>>", "161": "<(IDENTIFIER,i,new Pair(i, j))<SUB>25</SUB>>", "163": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "165": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>29</SUB>>", "167": "<(LITERAL,0,int ans = 0)<SUB>29</SUB>>", "168": "<(&lt;operator&gt;.assignment,ANY answer = new ArrayList&lt;&gt;())<SUB>30</SUB>>", "170": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>30</SUB>>", "9": "<(IDENTIFIER,answer,new ArrayList&lt;&gt;())<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.assignment,int[] ansNextPos = new int[1])<SUB>31</SUB>>", "175": "<(&lt;operator&gt;.alloc,new int[1])>", "177": "<(LOCAL,boolean[] ansTaken: boolean[])<SUB>32</SUB>>", "179": "<(IDENTIFIER,ansTaken,boolean[] ansTaken = new boolean[1])<SUB>32</SUB>>", "181": "<(LITERAL,1,new boolean[1])<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.assignment,)<SUB>33</SUB>>", "185": "<(iterator,&lt;empty&gt;)<SUB>33</SUB>>", "187": "<(IDENTIFIER,sets,values())<SUB>33</SUB>>", "189": "<(hasNext,&lt;empty&gt;)<SUB>33</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>33</SUB>>", "195": "<(next,&lt;empty&gt;)<SUB>33</SUB>>", "197": "<(sort,sort(intervals))<SUB>35</SUB>>", "199": "<(IDENTIFIER,intervals,sort(intervals))<SUB>35</SUB>>", "201": "<(&lt;operator&gt;.assignment,int[] nextPos = new int[intervals.size()])<SUB>36</SUB>>", "203": "<(&lt;operator&gt;.alloc,new int[intervals.size()])>", "205": "<(IDENTIFIER,intervals,size())<SUB>36</SUB>>", "207": "<(&lt;operator&gt;.assignment,boolean[] taken = new boolean[intervals.size()])<SUB>37</SUB>>", "209": "<(&lt;operator&gt;.alloc,new boolean[intervals.size()])>", "211": "<(IDENTIFIER,intervals,size())<SUB>37</SUB>>", "213": "<(&lt;operator&gt;.assignment,int[] dp = new int[intervals.size()])<SUB>39</SUB>>", "215": "<(&lt;operator&gt;.alloc,new int[intervals.size()])>", "217": "<(IDENTIFIER,intervals,size())<SUB>39</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[intervals.size() - 1])<SUB>40</SUB>>", "221": "<(&lt;operator&gt;.subtraction,intervals.size() - 1)<SUB>40</SUB>>", "223": "<(IDENTIFIER,intervals,size())<SUB>40</SUB>>", "225": "<(LITERAL,1,dp[intervals.size() - 1] = 1)<SUB>40</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,taken[intervals.size() - 1])<SUB>41</SUB>>", "229": "<(&lt;operator&gt;.subtraction,intervals.size() - 1)<SUB>41</SUB>>", "231": "<(IDENTIFIER,intervals,size())<SUB>41</SUB>>", "233": "<(LITERAL,true,taken[intervals.size() - 1] = true)<SUB>41</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,nextPos[intervals.size() - 1])<SUB>42</SUB>>", "237": "<(&lt;operator&gt;.subtraction,intervals.size() - 1)<SUB>42</SUB>>", "239": "<(IDENTIFIER,intervals,size())<SUB>42</SUB>>", "241": "<(&lt;operator&gt;.minus,-1)<SUB>42</SUB>>", "243": "<(CONTROL_STRUCTURE,for (int i = intervals.size() - 2; Some(i &gt;= 0); i--),for (int i = intervals.size() - 2; Some(i &gt;= 0); i--))<SUB>44</SUB>>", "245": "<(&lt;operator&gt;.assignment,int i = intervals.size() - 2)<SUB>44</SUB>>", "247": "<(&lt;operator&gt;.subtraction,intervals.size() - 2)<SUB>44</SUB>>", "249": "<(IDENTIFIER,intervals,size())<SUB>44</SUB>>", "251": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>44</SUB>>", "253": "<(LITERAL,0,i &gt;= 0)<SUB>44</SUB>>", "255": "<(IDENTIFIER,i,i--)<SUB>44</SUB>>", "257": "<(&lt;operator&gt;.assignment,dp[i] = dp[i + 1])<SUB>45</SUB>>", "259": "<(IDENTIFIER,dp,dp[i] = dp[i + 1])<SUB>45</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>45</SUB>>", "263": "<(&lt;operator&gt;.addition,i + 1)<SUB>45</SUB>>", "265": "<(LITERAL,1,i + 1)<SUB>45</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,taken[i])<SUB>46</SUB>>", "269": "<(IDENTIFIER,i,taken[i] = false)<SUB>46</SUB>>", "271": "<(&lt;operator&gt;.assignment,nextPos[i] = i + 1)<SUB>47</SUB>>", "273": "<(IDENTIFIER,nextPos,nextPos[i] = i + 1)<SUB>47</SUB>>", "275": "<(&lt;operator&gt;.addition,i + 1)<SUB>47</SUB>>", "277": "<(LITERAL,1,i + 1)<SUB>47</SUB>>", "279": "<(&lt;operator&gt;.assignment,int ll = i + 1)<SUB>49</SUB>>", "281": "<(&lt;operator&gt;.addition,i + 1)<SUB>49</SUB>>", "283": "<(LITERAL,1,i + 1)<SUB>49</SUB>>", "285": "<(&lt;operator&gt;.assignment,int rr = size())<SUB>50</SUB>>", "287": "<(size,size())<SUB>50</SUB>>", "289": "<(CONTROL_STRUCTURE,while (ll &lt; rr),while (ll &lt; rr))<SUB>52</SUB>>", "291": "<(IDENTIFIER,ll,ll &lt; rr)<SUB>52</SUB>>", "293": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "295": "<(&lt;operator&gt;.assignment,int mid = ll + rr)<SUB>53</SUB>>", "297": "<(&lt;operator&gt;.addition,ll + rr)<SUB>53</SUB>>", "299": "<(IDENTIFIER,rr,ll + rr)<SUB>53</SUB>>", "301": "<(IDENTIFIER,mid,mid /= 2)<SUB>54</SUB>>", "303": "<(CONTROL_STRUCTURE,if (intervals.get(mid).x &gt; intervals.get(i).y),if (intervals.get(mid).x &gt; intervals.get(i).y))<SUB>55</SUB>>", "305": "<(&lt;operator&gt;.fieldAccess,intervals.get(mid).x)<SUB>55</SUB>>", "307": "<(IDENTIFIER,intervals,get(mid))<SUB>55</SUB>>", "309": "<(FIELD_IDENTIFIER,x,x)<SUB>55</SUB>>", "311": "<(get,get(i))<SUB>55</SUB>>", "313": "<(IDENTIFIER,i,get(i))<SUB>55</SUB>>", "315": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "317": "<(IDENTIFIER,rr,rr = mid)<SUB>56</SUB>>", "319": "<(CONTROL_STRUCTURE,else,else)<SUB>57</SUB>>", "321": "<(&lt;operator&gt;.assignment,ll = mid + 1)<SUB>58</SUB>>", "323": "<(&lt;operator&gt;.addition,mid + 1)<SUB>58</SUB>>", "325": "<(LITERAL,1,mid + 1)<SUB>58</SUB>>", "327": "<(&lt;operator&gt;.lessThan,ll &lt; intervals.size())<SUB>61</SUB>>", "329": "<(size,size())<SUB>61</SUB>>", "331": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>>", "333": "<(&lt;operator&gt;.lessThan,dp[i] &lt; 1 + dp[ll])<SUB>62</SUB>>", "335": "<(IDENTIFIER,dp,dp[i] &lt; 1 + dp[ll])<SUB>62</SUB>>", "337": "<(&lt;operator&gt;.addition,1 + dp[ll])<SUB>62</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,dp[ll])<SUB>62</SUB>>", "341": "<(IDENTIFIER,ll,1 + dp[ll])<SUB>62</SUB>>", "343": "<(&lt;operator&gt;.assignment,dp[i] = Math.max(dp[i], 1 + dp[ll]))<SUB>63</SUB>>", "345": "<(IDENTIFIER,dp,dp[i] = Math.max(dp[i], 1 + dp[ll]))<SUB>63</SUB>>", "347": "<(max,Math.max(dp[i], 1 + dp[ll]))<SUB>63</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>63</SUB>>", "351": "<(IDENTIFIER,i,Math.max(dp[i], 1 + dp[ll]))<SUB>63</SUB>>", "353": "<(LITERAL,1,1 + dp[ll])<SUB>63</SUB>>", "355": "<(IDENTIFIER,dp,1 + dp[ll])<SUB>63</SUB>>", "357": "<(&lt;operator&gt;.assignment,taken[i] = true)<SUB>64</SUB>>", "359": "<(IDENTIFIER,taken,taken[i] = true)<SUB>64</SUB>>", "361": "<(LITERAL,true,taken[i] = true)<SUB>64</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,nextPos[i])<SUB>65</SUB>>", "365": "<(IDENTIFIER,i,nextPos[i] = ll)<SUB>65</SUB>>", "367": "<(CONTROL_STRUCTURE,if (dp[0] &gt; ans),if (dp[0] &gt; ans))<SUB>70</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>70</SUB>>", "371": "<(LITERAL,0,dp[0] &gt; ans)<SUB>70</SUB>>", "373": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>>", "375": "<(IDENTIFIER,ans,ans = dp[0])<SUB>71</SUB>>", "377": "<(IDENTIFIER,dp,ans = dp[0])<SUB>71</SUB>>", "379": "<(&lt;operator&gt;.assignment,answer = intervals)<SUB>72</SUB>>", "381": "<(IDENTIFIER,intervals,answer = intervals)<SUB>72</SUB>>", "383": "<(IDENTIFIER,ansNextPos,ansNextPos = nextPos)<SUB>73</SUB>>", "385": "<(&lt;operator&gt;.assignment,ansTaken = taken)<SUB>74</SUB>>", "387": "<(IDENTIFIER,taken,ansTaken = taken)<SUB>74</SUB>>", "389": "<(IDENTIFIER,out,println(ans))<SUB>79</SUB>>", "391": "<(LOCAL,int cur: int)<SUB>80</SUB>>", "393": "<(IDENTIFIER,cur,int cur = 0)<SUB>80</SUB>>", "395": "<(CONTROL_STRUCTURE,while (cur != -1),while (cur != -1))<SUB>81</SUB>>", "397": "<(IDENTIFIER,cur,cur != -1)<SUB>81</SUB>>", "399": "<(LITERAL,1,-1)<SUB>81</SUB>>", "401": "<(CONTROL_STRUCTURE,if (ansTaken[cur]),if (ansTaken[cur]))<SUB>82</SUB>>", "403": "<(IDENTIFIER,ansTaken,if (ansTaken[cur]))<SUB>82</SUB>>", "405": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>>", "407": "<(IDENTIFIER,out,println(answer.get(cur)))<SUB>83</SUB>>", "409": "<(IDENTIFIER,answer,get(cur))<SUB>83</SUB>>", "411": "<(&lt;operator&gt;.assignment,cur = ansNextPos[cur])<SUB>85</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,ansNextPos[cur])<SUB>85</SUB>>", "415": "<(IDENTIFIER,cur,cur = ansNextPos[cur])<SUB>85</SUB>>", "417": "<(IDENTIFIER,out,close())<SUB>89</SUB>>", "419": "<(MODIFIER,STATIC)>"}}