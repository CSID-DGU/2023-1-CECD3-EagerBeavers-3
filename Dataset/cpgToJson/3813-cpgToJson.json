{"edges": [["29", "30"], ["29", "31"], ["29", "536"], ["29", "537"], ["29", "538"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "46"], ["31", "49"], ["31", "8"], ["31", "53"], ["31", "56"], ["31", "59"], ["31", "60"], ["31", "66"], ["31", "67"], ["31", "73"], ["31", "74"], ["31", "80"], ["31", "81"], ["31", "88"], ["31", "89"], ["31", "96"], ["31", "136"], ["31", "176"], ["31", "532"], ["31", "534"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "40"], ["36", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "7"], ["56", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["106", "113"], ["107", "108"], ["107", "109"], ["110", "9"], ["110", "111"], ["111", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "123"], ["113", "125"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["136", "137"], ["136", "138"], ["136", "141"], ["136", "146"], ["136", "148"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "152"], ["148", "155"], ["149", "150"], ["149", "151"], ["152", "10"], ["152", "153"], ["153", "154"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["174", "175"], ["176", "177"], ["176", "182"], ["176", "226"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "191"], ["183", "193"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "12"], ["193", "194"], ["193", "197"], ["193", "198"], ["193", "222"], ["194", "195"], ["194", "196"], ["197", "11"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "206"], ["198", "208"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["208", "213"], ["209", "210"], ["209", "211"], ["211", "212"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["224", "225"], ["226", "227"], ["227", "228"], ["227", "229"], ["227", "237"], ["227", "278"], ["227", "484"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["231", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["237", "242"], ["237", "245"], ["237", "247"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "256"], ["248", "258"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["258", "259"], ["258", "269"], ["259", "260"], ["259", "261"], ["259", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "277"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["278", "279"], ["278", "280"], ["278", "283"], ["278", "286"], ["278", "289"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["289", "290"], ["290", "291"], ["290", "292"], ["290", "295"], ["290", "298"], ["290", "300"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["298", "299"], ["300", "301"], ["301", "302"], ["301", "303"], ["301", "306"], ["301", "309"], ["301", "311"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["309", "310"], ["311", "312"], ["311", "355"], ["311", "398"], ["311", "441"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["316", "317"], ["317", "318"], ["317", "325"], ["318", "319"], ["318", "324"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["325", "326"], ["325", "327"], ["325", "334"], ["327", "328"], ["327", "333"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["334", "335"], ["334", "346"], ["335", "336"], ["335", "343"], ["336", "337"], ["336", "342"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "341"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "348"], ["348", "349"], ["348", "354"], ["349", "350"], ["349", "351"], ["351", "352"], ["351", "353"], ["355", "356"], ["355", "361"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "360"], ["361", "362"], ["362", "363"], ["362", "370"], ["363", "364"], ["363", "369"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["370", "371"], ["370", "372"], ["370", "379"], ["372", "373"], ["372", "378"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["379", "380"], ["379", "391"], ["380", "381"], ["380", "388"], ["381", "382"], ["381", "387"], ["382", "383"], ["382", "384"], ["384", "385"], ["384", "386"], ["388", "389"], ["388", "390"], ["391", "392"], ["391", "393"], ["393", "394"], ["393", "397"], ["394", "395"], ["394", "396"], ["398", "399"], ["398", "402"], ["399", "400"], ["399", "401"], ["402", "403"], ["403", "404"], ["403", "411"], ["404", "405"], ["404", "410"], ["405", "406"], ["405", "409"], ["406", "407"], ["406", "408"], ["411", "412"], ["411", "413"], ["411", "420"], ["413", "414"], ["413", "419"], ["414", "415"], ["414", "418"], ["415", "416"], ["415", "417"], ["420", "421"], ["420", "432"], ["421", "422"], ["421", "429"], ["422", "423"], ["422", "426"], ["423", "424"], ["423", "425"], ["426", "427"], ["426", "428"], ["429", "430"], ["429", "431"], ["432", "433"], ["432", "434"], ["434", "435"], ["434", "438"], ["435", "436"], ["435", "437"], ["438", "439"], ["438", "440"], ["441", "442"], ["441", "447"], ["442", "443"], ["442", "444"], ["444", "445"], ["444", "446"], ["447", "448"], ["448", "449"], ["448", "456"], ["449", "450"], ["449", "455"], ["450", "451"], ["450", "454"], ["451", "452"], ["451", "453"], ["456", "457"], ["456", "458"], ["456", "465"], ["458", "459"], ["458", "464"], ["459", "460"], ["459", "463"], ["460", "461"], ["460", "462"], ["465", "466"], ["465", "477"], ["466", "467"], ["466", "474"], ["467", "468"], ["467", "471"], ["468", "469"], ["468", "470"], ["471", "472"], ["471", "473"], ["474", "475"], ["474", "476"], ["477", "478"], ["477", "479"], ["479", "480"], ["479", "483"], ["480", "481"], ["480", "482"], ["484", "485"], ["484", "486"], ["484", "489"], ["484", "492"], ["484", "494"], ["486", "487"], ["486", "488"], ["489", "490"], ["489", "491"], ["492", "493"], ["494", "14"], ["494", "495"], ["494", "498"], ["494", "499"], ["494", "528"], ["495", "496"], ["495", "497"], ["498", "13"], ["499", "500"], ["499", "501"], ["499", "504"], ["499", "507"], ["499", "509"], ["501", "502"], ["501", "503"], ["504", "505"], ["504", "506"], ["507", "508"], ["509", "510"], ["509", "519"], ["510", "511"], ["510", "512"], ["512", "513"], ["512", "518"], ["513", "514"], ["513", "517"], ["514", "515"], ["514", "516"], ["519", "520"], ["519", "525"], ["520", "521"], ["520", "522"], ["522", "523"], ["522", "524"], ["525", "526"], ["525", "527"], ["528", "529"], ["528", "530"], ["530", "531"], ["532", "533"], ["534", "535"], ["32", "39"], ["35", "48"], ["46", "52"], ["49", "55"], ["53", "57"], ["56", "64"], ["60", "71"], ["67", "78"], ["74", "85"], ["81", "92"], ["89", "98"], ["532", "534"], ["534", "538"], ["34", "32"], ["48", "46"], ["50", "49"], ["55", "53"], ["57", "56"], ["62", "60"], ["69", "67"], ["76", "74"], ["83", "81"], ["91", "89"], ["98", "101"], ["101", "109"], ["101", "138"], ["104", "101"], ["138", "143"], ["141", "151"], ["141", "178"], ["146", "143"], ["177", "185"], ["177", "234"], ["37", "44"], ["40", "35"], ["52", "50"], ["64", "62"], ["71", "69"], ["78", "76"], ["85", "83"], ["92", "91"], ["107", "111"], ["110", "115"], ["143", "141"], ["149", "153"], ["152", "157"], ["178", "177"], ["39", "37"], ["42", "40"], ["109", "107"], ["111", "110"], ["115", "120"], ["118", "128"], ["118", "104"], ["123", "120"], ["151", "149"], ["153", "152"], ["157", "160"], ["160", "168"], ["160", "146"], ["163", "160"], ["185", "188"], ["188", "196"], ["188", "532"], ["191", "188"], ["229", "239"], ["44", "42"], ["120", "118"], ["126", "123"], ["166", "163"], ["194", "197"], ["197", "200"], ["222", "191"], ["231", "229"], ["239", "242"], ["242", "250"], ["242", "280"], ["245", "242"], ["280", "283"], ["283", "292"], ["283", "486"], ["286", "283"], ["486", "489"], ["489", "497"], ["489", "532"], ["492", "489"], ["127", "134"], ["132", "126"], ["167", "174"], ["172", "166"], ["196", "194"], ["200", "203"], ["203", "211"], ["203", "224"], ["206", "203"], ["224", "222"], ["234", "231"], ["495", "498"], ["498", "501"], ["528", "492"], ["128", "127"], ["134", "132"], ["168", "167"], ["174", "172"], ["209", "216"], ["250", "253"], ["253", "262"], ["253", "245"], ["256", "253"], ["292", "295"], ["295", "303"], ["295", "286"], ["298", "295"], ["497", "495"], ["501", "504"], ["504", "514"], ["504", "530"], ["507", "504"], ["530", "528"], ["211", "209"], ["214", "219"], ["214", "206"], ["219", "206"], ["259", "272"], ["269", "256"], ["510", "522"], ["216", "214"], ["261", "268"], ["266", "259"], ["270", "269"], ["303", "306"], ["306", "313"], ["306", "298"], ["309", "306"], ["512", "510"], ["520", "525"], ["520", "507"], ["525", "507"], ["262", "261"], ["268", "266"], ["271", "270"], ["513", "512"], ["522", "520"], ["272", "271"], ["313", "320"], ["313", "358"], ["356", "365"], ["356", "399"], ["399", "406"], ["399", "444"], ["442", "451"], ["442", "309"], ["514", "513"], ["317", "358"], ["358", "356"], ["362", "399"], ["403", "444"], ["444", "442"], ["448", "309"], ["318", "329"], ["325", "317"], ["363", "374"], ["370", "362"], ["404", "415"], ["411", "403"], ["449", "460"], ["456", "448"], ["319", "318"], ["327", "339"], ["334", "325"], ["364", "363"], ["372", "384"], ["379", "370"], ["405", "404"], ["413", "423"], ["420", "411"], ["450", "449"], ["458", "468"], ["465", "456"], ["320", "319"], ["328", "327"], ["335", "351"], ["346", "334"], ["365", "364"], ["373", "372"], ["380", "394"], ["391", "379"], ["406", "405"], ["414", "413"], ["421", "435"], ["432", "420"], ["451", "450"], ["459", "458"], ["466", "480"], ["477", "465"], ["329", "328"], ["336", "343"], ["343", "335"], ["348", "346"], ["374", "373"], ["381", "388"], ["388", "380"], ["393", "391"], ["415", "414"], ["422", "429"], ["429", "421"], ["434", "432"], ["460", "459"], ["467", "474"], ["474", "466"], ["479", "477"], ["337", "336"], ["349", "348"], ["382", "381"], ["394", "393"], ["423", "426"], ["426", "422"], ["435", "438"], ["438", "434"], ["468", "471"], ["471", "467"], ["480", "479"], ["339", "337"], ["351", "349"], ["384", "382"], ["29", "34"], ["30", "538"], ["32", "538"], ["37", "538"], ["40", "538"], ["40", "538"], ["40", "538"], ["35", "538"], ["46", "538"], ["49", "538"], ["49", "538"], ["53", "538"], ["56", "538"], ["56", "538"], ["60", "538"], ["67", "538"], ["76", "538"], ["78", "538"], ["76", "538"], ["74", "538"], ["74", "538"], ["81", "538"], ["83", "538"], ["81", "538"], ["81", "538"], ["89", "538"], ["91", "538"], ["89", "538"], ["89", "538"], ["141", "538"], ["141", "538"], ["178", "538"], ["177", "538"], ["177", "538"], ["229", "538"], ["231", "538"], ["231", "538"], ["229", "538"], ["229", "538"], ["280", "538"], ["283", "538"], ["283", "538"], ["283", "538"], ["486", "538"], ["489", "538"], ["489", "538"], ["489", "538"], ["495", "538"], ["498", "538"], ["501", "538"], ["504", "538"], ["504", "538"], ["504", "538"], ["530", "538"], ["528", "538"], ["528", "538"], ["492", "538"], ["510", "538"], ["510", "538"], ["520", "538"], ["520", "538"], ["525", "538"], ["507", "538"], ["286", "538"], ["303", "538"], ["306", "538"], ["306", "538"], ["306", "538"], ["298", "538"], ["313", "538"], ["317", "538"], ["325", "538"], ["334", "538"], ["346", "538"], ["334", "538"], ["325", "538"], ["317", "538"], ["317", "538"], ["356", "538"], ["356", "538"], ["362", "538"], ["370", "538"], ["379", "538"], ["391", "538"], ["379", "538"], ["370", "538"], ["362", "538"], ["362", "538"], ["399", "538"], ["403", "538"], ["411", "538"], ["420", "538"], ["432", "538"], ["420", "538"], ["411", "538"], ["403", "538"], ["403", "538"], ["442", "538"], ["442", "538"], ["448", "538"], ["456", "538"], ["465", "538"], ["477", "538"], ["465", "538"], ["456", "538"], ["448", "538"], ["448", "538"], ["309", "538"], ["250", "538"], ["253", "538"], ["253", "538"], ["253", "538"], ["245", "538"], ["259", "538"], ["259", "538"], ["259", "538"], ["269", "538"], ["269", "538"], ["256", "538"], ["185", "538"], ["188", "538"], ["188", "538"], ["188", "538"], ["532", "538"], ["534", "538"], ["534", "538"], ["194", "538"], ["197", "538"], ["200", "538"], ["203", "538"], ["203", "538"], ["203", "538"], ["224", "538"], ["222", "538"], ["222", "538"], ["191", "538"], ["209", "538"], ["209", "538"], ["214", "538"], ["214", "538"], ["219", "538"], ["206", "538"], ["149", "538"], ["152", "538"], ["152", "538"], ["152", "538"], ["157", "538"], ["160", "538"], ["160", "538"], ["160", "538"], ["146", "538"], ["166", "538"], ["172", "538"], ["174", "538"], ["172", "538"], ["166", "538"], ["166", "538"], ["163", "538"], ["107", "538"], ["110", "538"], ["110", "538"], ["110", "538"], ["115", "538"], ["118", "538"], ["120", "538"], ["118", "538"], ["118", "538"], ["104", "538"], ["126", "538"], ["132", "538"], ["134", "538"], ["132", "538"], ["126", "538"], ["126", "538"], ["123", "538"], ["259", "538"], ["29", "30"], ["29", "32"], ["29", "46"], ["29", "53"], ["62", "60"], ["62", "60"], ["69", "67"], ["69", "67"], ["76", "74"], ["76", "74"], ["83", "81"], ["83", "81"], ["91", "89"], ["91", "89"], ["32", "35"], ["29", "35"], ["37", "35"], ["40", "35"], ["46", "49"], ["29", "49"], ["53", "56"], ["29", "56"], ["57", "56"], ["29", "98"], ["29", "138"], ["57", "532"], ["153", "532"], ["111", "532"], ["29", "532"], ["49", "534"], ["528", "534"], ["222", "534"], ["29", "534"], ["29", "37"], ["29", "45"], ["35", "57"], ["29", "57"], ["29", "62"], ["64", "62"], ["62", "69"], ["29", "69"], ["71", "69"], ["69", "76"], ["29", "76"], ["78", "76"], ["60", "83"], ["29", "83"], ["85", "83"], ["85", "83"], ["92", "91"], ["92", "91"], ["85", "91"], ["29", "91"], ["98", "101"], ["104", "101"], ["29", "101"], ["92", "101"], ["101", "104"], ["29", "104"], ["29", "107"], ["138", "141"], ["146", "141"], ["29", "141"], ["143", "141"], ["143", "141"], ["141", "146"], ["29", "146"], ["29", "149"], ["178", "177"], ["178", "177"], ["29", "177"], ["37", "40"], ["29", "40"], ["56", "64"], ["29", "64"], ["64", "71"], ["29", "71"], ["71", "78"], ["29", "78"], ["67", "85"], ["29", "85"], ["83", "92"], ["29", "92"], ["107", "110"], ["29", "110"], ["111", "110"], ["29", "115"], ["101", "143"], ["29", "143"], ["149", "152"], ["29", "152"], ["153", "152"], ["29", "157"], ["74", "178"], ["29", "178"], ["29", "185"], ["231", "229"], ["231", "229"], ["231", "229"], ["57", "111"], ["29", "111"], ["115", "118"], ["123", "118"], ["29", "118"], ["120", "118"], ["120", "118"], ["118", "123"], ["29", "123"], ["132", "126"], ["132", "126"], ["57", "153"], ["111", "153"], ["29", "153"], ["157", "160"], ["163", "160"], ["29", "160"], ["91", "160"], ["120", "160"], ["160", "163"], ["29", "163"], ["172", "166"], ["172", "166"], ["185", "188"], ["191", "188"], ["29", "188"], ["143", "188"], ["188", "191"], ["29", "191"], ["29", "194"], ["29", "239"], ["29", "280"], ["29", "286"], ["29", "486"], ["91", "120"], ["29", "120"], ["194", "197"], ["29", "197"], ["29", "200"], ["49", "222"], ["29", "222"], ["224", "222"], ["143", "231"], ["29", "231"], ["91", "231"], ["160", "231"], ["120", "231"], ["178", "231"], ["239", "242"], ["245", "242"], ["29", "242"], ["231", "242"], ["242", "245"], ["29", "245"], ["280", "283"], ["286", "283"], ["29", "283"], ["178", "283"], ["283", "286"], ["343", "286"], ["388", "286"], ["429", "286"], ["474", "286"], ["486", "489"], ["492", "489"], ["29", "489"], ["242", "489"], ["295", "489"], ["489", "492"], ["29", "492"], ["29", "495"], ["76", "132"], ["29", "132"], ["134", "132"], ["76", "172"], ["132", "172"], ["29", "172"], ["174", "172"], ["200", "203"], ["206", "203"], ["29", "203"], ["91", "203"], ["216", "203"], ["160", "203"], ["120", "203"], ["214", "206"], ["29", "206"], ["197", "224"], ["209", "224"], ["219", "224"], ["29", "224"], ["178", "234"], ["29", "234"], ["29", "250"], ["29", "292"], ["495", "498"], ["29", "498"], ["29", "501"], ["49", "528"], ["29", "528"], ["530", "528"], ["110", "134"], ["29", "134"], ["152", "174"], ["29", "174"], ["197", "209"], ["219", "209"], ["29", "209"], ["211", "209"], ["250", "253"], ["256", "253"], ["29", "253"], ["231", "253"], ["253", "256"], ["29", "256"], ["29", "269"], ["292", "295"], ["298", "295"], ["29", "295"], ["242", "295"], ["358", "295"], ["295", "298"], ["356", "298"], ["29", "298"], ["501", "504"], ["507", "504"], ["29", "504"], ["231", "504"], ["522", "504"], ["306", "504"], ["253", "504"], ["520", "507"], ["29", "507"], ["498", "530"], ["510", "530"], ["525", "530"], ["29", "530"], ["29", "211"], ["203", "214"], ["29", "214"], ["216", "214"], ["216", "214"], ["209", "219"], ["29", "219"], ["29", "259"], ["269", "259"], ["76", "259"], ["172", "259"], ["132", "259"], ["29", "303"], ["498", "510"], ["525", "510"], ["29", "510"], ["203", "216"], ["29", "216"], ["303", "306"], ["309", "306"], ["29", "306"], ["231", "306"], ["444", "306"], ["253", "306"], ["442", "309"], ["29", "309"], ["504", "520"], ["29", "520"], ["522", "520"], ["522", "520"], ["510", "525"], ["29", "525"], ["504", "522"], ["29", "522"], ["295", "313"], ["356", "313"], ["29", "313"], ["325", "317"], ["325", "317"], ["325", "317"], ["313", "356"], ["351", "356"], ["29", "356"], ["358", "356"], ["358", "356"], ["370", "362"], ["370", "362"], ["370", "362"], ["306", "399"], ["29", "399"], ["411", "403"], ["411", "403"], ["411", "403"], ["399", "442"], ["438", "442"], ["29", "442"], ["444", "442"], ["444", "442"], ["456", "448"], ["456", "448"], ["456", "448"], ["295", "358"], ["29", "358"], ["306", "444"], ["29", "444"], ["370", "325"], ["411", "325"], ["456", "325"], ["29", "325"], ["317", "325"], ["362", "325"], ["403", "325"], ["448", "325"], ["346", "325"], ["346", "325"], ["325", "370"], ["411", "370"], ["456", "370"], ["29", "370"], ["317", "370"], ["362", "370"], ["403", "370"], ["448", "370"], ["391", "370"], ["391", "370"], ["325", "411"], ["370", "411"], ["456", "411"], ["29", "411"], ["317", "411"], ["362", "411"], ["403", "411"], ["448", "411"], ["432", "411"], ["432", "411"], ["325", "456"], ["370", "456"], ["411", "456"], ["29", "456"], ["317", "456"], ["362", "456"], ["403", "456"], ["448", "456"], ["477", "456"], ["477", "456"], ["346", "334"], ["346", "334"], ["391", "379"], ["391", "379"], ["432", "420"], ["432", "420"], ["477", "465"], ["477", "465"], ["29", "346"], ["29", "391"], ["166", "391"], ["29", "432"], ["29", "477"], ["126", "477"], ["283", "343"], ["388", "343"], ["429", "343"], ["474", "343"], ["29", "343"], ["283", "388"], ["343", "388"], ["429", "388"], ["474", "388"], ["29", "388"], ["283", "429"], ["343", "429"], ["388", "429"], ["474", "429"], ["29", "429"], ["283", "474"], ["343", "474"], ["388", "474"], ["429", "474"], ["29", "474"], ["399", "426"], ["29", "426"], ["426", "438"], ["29", "438"], ["442", "471"], ["29", "471"], ["313", "339"], ["29", "339"], ["339", "351"], ["29", "351"], ["356", "384"], ["29", "384"], ["101", "120"], ["101", "104"], ["101", "118"], ["101", "109"], ["101", "107"], ["101", "115"], ["101", "101"], ["101", "111"], ["101", "110"], ["141", "146"], ["141", "152"], ["141", "160"], ["141", "141"], ["141", "149"], ["141", "151"], ["141", "153"], ["141", "157"], ["141", "143"], ["177", "188"], ["177", "283"], ["177", "242"], ["177", "486"], ["177", "229"], ["177", "185"], ["177", "489"], ["177", "231"], ["177", "280"], ["177", "239"], ["177", "234"], ["118", "120"], ["118", "128"], ["118", "134"], ["118", "118"], ["118", "127"], ["118", "123"], ["118", "132"], ["118", "126"], ["160", "167"], ["160", "163"], ["160", "168"], ["160", "174"], ["160", "160"], ["160", "172"], ["160", "166"], ["188", "188"], ["188", "196"], ["188", "194"], ["188", "224"], ["188", "200"], ["188", "222"], ["188", "197"], ["188", "191"], ["188", "203"], ["242", "242"], ["242", "253"], ["242", "245"], ["242", "250"], ["283", "292"], ["283", "283"], ["283", "286"], ["283", "295"], ["489", "528"], ["489", "492"], ["489", "498"], ["489", "530"], ["489", "504"], ["489", "489"], ["489", "497"], ["489", "495"], ["489", "501"], ["203", "214"], ["203", "209"], ["203", "206"], ["203", "216"], ["203", "211"], ["203", "203"], ["253", "272"], ["253", "256"], ["253", "262"], ["253", "268"], ["253", "253"], ["253", "269"], ["253", "261"], ["253", "259"], ["253", "270"], ["253", "271"], ["253", "266"], ["295", "298"], ["295", "306"], ["295", "295"], ["295", "303"], ["504", "514"], ["504", "522"], ["504", "512"], ["504", "510"], ["504", "504"], ["504", "507"], ["504", "520"], ["504", "513"], ["214", "219"], ["306", "358"], ["306", "356"], ["306", "306"], ["306", "442"], ["306", "309"], ["306", "313"], ["306", "399"], ["306", "444"], ["520", "525"], ["313", "334"], ["313", "317"], ["313", "349"], ["313", "336"], ["313", "346"], ["313", "329"], ["313", "348"], ["313", "328"], ["313", "335"], ["313", "351"], ["313", "319"], ["313", "320"], ["313", "337"], ["313", "339"], ["313", "325"], ["313", "318"], ["313", "343"], ["313", "327"], ["356", "384"], ["356", "370"], ["356", "394"], ["356", "362"], ["356", "382"], ["356", "374"], ["356", "380"], ["356", "388"], ["356", "364"], ["356", "372"], ["356", "365"], ["356", "379"], ["356", "373"], ["356", "393"], ["356", "381"], ["356", "363"], ["356", "391"], ["399", "435"], ["399", "403"], ["399", "426"], ["399", "414"], ["399", "405"], ["399", "404"], ["399", "429"], ["399", "415"], ["399", "413"], ["399", "411"], ["399", "420"], ["399", "434"], ["399", "421"], ["399", "423"], ["399", "422"], ["399", "432"], ["399", "406"], ["399", "438"], ["442", "460"], ["442", "450"], ["442", "480"], ["442", "456"], ["442", "471"], ["442", "479"], ["442", "448"], ["442", "466"], ["442", "467"], ["442", "477"], ["442", "474"], ["442", "449"], ["442", "468"], ["442", "458"], ["442", "465"], ["442", "451"], ["442", "459"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "43": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "45": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "46": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer line: ANY)<SUB>4</SUB>>", "54": "<(IDENTIFIER,line,ANY line = new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "56": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "57": "<(readLine,readLine())<SUB>4</SUB>>", "59": "<(LOCAL,int n: int)<SUB>5</SUB>>", "61": "<(IDENTIFIER,n,int n = parseInt(line.nextToken()))<SUB>5</SUB>>", "63": "<(IDENTIFIER,Integer,parseInt(line.nextToken()))<SUB>5</SUB>>", "65": "<(IDENTIFIER,line,nextToken())<SUB>5</SUB>>", "67": "<(&lt;operator&gt;.assignment,int m = parseInt(line.nextToken()))<SUB>6</SUB>>", "69": "<(parseInt,parseInt(line.nextToken()))<SUB>6</SUB>>", "71": "<(nextToken,nextToken())<SUB>6</SUB>>", "73": "<(LOCAL,int k: int)<SUB>7</SUB>>", "75": "<(IDENTIFIER,k,int k = parseInt(line.nextToken()))<SUB>7</SUB>>", "77": "<(IDENTIFIER,Integer,parseInt(line.nextToken()))<SUB>7</SUB>>", "79": "<(IDENTIFIER,line,nextToken())<SUB>7</SUB>>", "81": "<(&lt;operator&gt;.assignment,int[][] edges1 = new int[n][m - 1])<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.alloc,new int[n][m - 1])>", "85": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>8</SUB>>", "87": "<(LITERAL,1,m - 1)<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.assignment,int[][] edges2 = new int[n - 1][m])<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "93": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "95": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>9</SUB>>", "97": "<(LOCAL,int i: int)<SUB>10</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "107": "<(&lt;operator&gt;.assignment,line = new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "9": "<(IDENTIFIER,line,new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "112": "<(IDENTIFIER,in,readLine())<SUB>11</SUB>>", "114": "<(LOCAL,int j: int)<SUB>12</SUB>>", "116": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "118": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>12</SUB>>", "120": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>12</SUB>>", "122": "<(LITERAL,1,m - 1)<SUB>12</SUB>>", "124": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "126": "<(&lt;operator&gt;.assignment,edges1[i][j] = parseInt(line.nextToken()))<SUB>13</SUB>>", "128": "<(&lt;operator&gt;.indexAccess,edges1[i])<SUB>13</SUB>>", "130": "<(IDENTIFIER,i,edges1[i][j] = parseInt(line.nextToken()))<SUB>13</SUB>>", "132": "<(parseInt,parseInt(line.nextToken()))<SUB>13</SUB>>", "134": "<(nextToken,nextToken())<SUB>13</SUB>>", "136": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>16</SUB>>", "138": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "140": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "142": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>16</SUB>>", "144": "<(IDENTIFIER,n,n - 1)<SUB>16</SUB>>", "146": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "148": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "150": "<(IDENTIFIER,line,line = new StringTokenizer(in.readLine()))<SUB>17</SUB>>", "152": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>17</SUB>>", "153": "<(readLine,readLine())<SUB>17</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "159": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "161": "<(IDENTIFIER,j,j &lt; m)<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,edges2[i][j])<SUB>19</SUB>>", "169": "<(IDENTIFIER,edges2,edges2[i][j] = parseInt(line.nextToken()))<SUB>19</SUB>>", "171": "<(IDENTIFIER,j,edges2[i][j] = parseInt(line.nextToken()))<SUB>19</SUB>>", "173": "<(IDENTIFIER,Integer,parseInt(line.nextToken()))<SUB>19</SUB>>", "175": "<(IDENTIFIER,line,nextToken())<SUB>19</SUB>>", "177": "<(&lt;operator&gt;.equals,k % 2 == 1)<SUB>22</SUB>>", "179": "<(IDENTIFIER,k,k % 2)<SUB>22</SUB>>", "181": "<(LITERAL,1,k % 2 == 1)<SUB>22</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "187": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "189": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "194": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>24</SUB>>", "196": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>24</SUB>>", "11": "<(IDENTIFIER,sb,new StringBuilder())<SUB>24</SUB>>", "199": "<(LOCAL,int j: int)<SUB>25</SUB>>", "201": "<(IDENTIFIER,j,int j = 0)<SUB>25</SUB>>", "203": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>25</SUB>>", "205": "<(IDENTIFIER,m,j &lt; m)<SUB>25</SUB>>", "207": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "209": "<(append,sb.append(-1))<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "213": "<(CONTROL_STRUCTURE,if (j &lt; m - 1),if (j &lt; m - 1))<SUB>27</SUB>>", "215": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>27</SUB>>", "217": "<(IDENTIFIER,m,m - 1)<SUB>27</SUB>>", "219": "<(append,sb.append(' '))<SUB>27</SUB>>", "221": "<(LITERAL,' ',sb.append(' '))<SUB>27</SUB>>", "223": "<(IDENTIFIER,out,println(sb.toString()))<SUB>29</SUB>>", "225": "<(IDENTIFIER,sb,sb.toString())<SUB>29</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "229": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[n][m][k + 1])<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.alloc,new int[n][m][k + 1])>", "233": "<(IDENTIFIER,m,new int[n][m][k + 1])<SUB>32</SUB>>", "235": "<(IDENTIFIER,k,k + 1)<SUB>32</SUB>>", "237": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>33</SUB>>", "239": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "241": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "243": "<(IDENTIFIER,i,i &lt; n)<SUB>33</SUB>>", "245": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "249": "<(LOCAL,int j: int)<SUB>34</SUB>>", "251": "<(IDENTIFIER,j,int j = 0)<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>34</SUB>>", "255": "<(IDENTIFIER,m,j &lt; m)<SUB>34</SUB>>", "257": "<(IDENTIFIER,j,j++)<SUB>34</SUB>>", "259": "<(fill,fill(dp[i][j], Integer.MAX_VALUE))<SUB>35</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>35</SUB>>", "263": "<(IDENTIFIER,dp,fill(dp[i][j], Integer.MAX_VALUE))<SUB>35</SUB>>", "265": "<(IDENTIFIER,j,fill(dp[i][j], Integer.MAX_VALUE))<SUB>35</SUB>>", "267": "<(IDENTIFIER,Integer,fill(dp[i][j], Integer.MAX_VALUE))<SUB>35</SUB>>", "269": "<(&lt;operator&gt;.assignment,dp[i][j][0] = 0)<SUB>36</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>36</SUB>>", "273": "<(IDENTIFIER,dp,dp[i][j][0] = 0)<SUB>36</SUB>>", "275": "<(IDENTIFIER,j,dp[i][j][0] = 0)<SUB>36</SUB>>", "277": "<(LITERAL,0,dp[i][j][0] = 0)<SUB>36</SUB>>", "279": "<(LOCAL,int a: int)<SUB>39</SUB>>", "281": "<(IDENTIFIER,a,int a = 2)<SUB>39</SUB>>", "283": "<(&lt;operator&gt;.lessEqualsThan,a &lt;= k)<SUB>39</SUB>>", "285": "<(IDENTIFIER,k,a &lt;= k)<SUB>39</SUB>>", "287": "<(IDENTIFIER,a,a += 2)<SUB>39</SUB>>", "289": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "291": "<(LOCAL,int i: int)<SUB>40</SUB>>", "293": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "295": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>40</SUB>>", "297": "<(IDENTIFIER,n,i &lt; n)<SUB>40</SUB>>", "299": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "301": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>41</SUB>>", "303": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>41</SUB>>", "305": "<(LITERAL,0,int j = 0)<SUB>41</SUB>>", "307": "<(IDENTIFIER,j,j &lt; m)<SUB>41</SUB>>", "309": "<(&lt;operator&gt;.postIncrement,j++)<SUB>41</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "313": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>42</SUB>>", "315": "<(LITERAL,0,i &gt; 0)<SUB>42</SUB>>", "317": "<(&lt;operator&gt;.assignment,dp[i][j][a] = Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>43</SUB>>", "321": "<(IDENTIFIER,dp,dp[i][j][a] = Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "323": "<(IDENTIFIER,j,dp[i][j][a] = Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "325": "<(min,Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,dp[i][j][a])<SUB>43</SUB>>", "329": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>43</SUB>>", "331": "<(IDENTIFIER,i,Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "333": "<(IDENTIFIER,a,Math.min(dp[i][j][a], dp[i - 1][j][a - 2] + 2 * edges2[i - 1][j]))<SUB>43</SUB>>", "335": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j][a - 2])<SUB>43</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>43</SUB>>", "339": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>43</SUB>>", "341": "<(LITERAL,1,i - 1)<SUB>43</SUB>>", "343": "<(&lt;operator&gt;.subtraction,a - 2)<SUB>43</SUB>>", "345": "<(LITERAL,2,a - 2)<SUB>43</SUB>>", "347": "<(LITERAL,2,2 * edges2[i - 1][j])<SUB>43</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,edges2[i - 1])<SUB>43</SUB>>", "351": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>43</SUB>>", "353": "<(LITERAL,1,i - 1)<SUB>43</SUB>>", "355": "<(CONTROL_STRUCTURE,if (i &lt; n - 1),if (i &lt; n - 1))<SUB>45</SUB>>", "357": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>45</SUB>>", "359": "<(IDENTIFIER,n,n - 1)<SUB>45</SUB>>", "361": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp[i][j][a])<SUB>46</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>46</SUB>>", "367": "<(IDENTIFIER,i,dp[i][j][a] = Math.min(dp[i][j][a], dp[i + 1][j][a - 2] + 2 * edges2[i][j]))<SUB>46</SUB>>", "369": "<(IDENTIFIER,a,dp[i][j][a] = Math.min(dp[i][j][a], dp[i + 1][j][a - 2] + 2 * edges2[i][j]))<SUB>46</SUB>>", "371": "<(IDENTIFIER,Math,Math.min(dp[i][j][a], dp[i + 1][j][a - 2] + 2 * edges2[i][j]))<SUB>46</SUB>>", "373": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>46</SUB>>", "375": "<(IDENTIFIER,dp,Math.min(dp[i][j][a], dp[i + 1][j][a - 2] + 2 * edges2[i][j]))<SUB>46</SUB>>", "377": "<(IDENTIFIER,j,Math.min(dp[i][j][a], dp[i + 1][j][a - 2] + 2 * edges2[i][j]))<SUB>46</SUB>>", "379": "<(&lt;operator&gt;.addition,dp[i + 1][j][a - 2] + 2 * edges2[i][j])<SUB>46</SUB>>", "381": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>46</SUB>>", "383": "<(IDENTIFIER,dp,dp[i + 1][j][a - 2] + 2 * edges2[i][j])<SUB>46</SUB>>", "385": "<(IDENTIFIER,i,i + 1)<SUB>46</SUB>>", "387": "<(IDENTIFIER,j,dp[i + 1][j][a - 2] + 2 * edges2[i][j])<SUB>46</SUB>>", "389": "<(IDENTIFIER,a,a - 2)<SUB>46</SUB>>", "391": "<(&lt;operator&gt;.multiplication,2 * edges2[i][j])<SUB>46</SUB>>", "393": "<(&lt;operator&gt;.indexAccess,edges2[i][j])<SUB>46</SUB>>", "395": "<(IDENTIFIER,edges2,2 * edges2[i][j])<SUB>46</SUB>>", "397": "<(IDENTIFIER,j,2 * edges2[i][j])<SUB>46</SUB>>", "399": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>48</SUB>>", "401": "<(LITERAL,0,j &gt; 0)<SUB>48</SUB>>", "403": "<(&lt;operator&gt;.assignment,dp[i][j][a] = Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "405": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>49</SUB>>", "407": "<(IDENTIFIER,dp,dp[i][j][a] = Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "409": "<(IDENTIFIER,j,dp[i][j][a] = Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "411": "<(min,Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,dp[i][j][a])<SUB>49</SUB>>", "415": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>49</SUB>>", "417": "<(IDENTIFIER,i,Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "419": "<(IDENTIFIER,a,Math.min(dp[i][j][a], dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1]))<SUB>49</SUB>>", "421": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1][a - 2])<SUB>49</SUB>>", "423": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>49</SUB>>", "425": "<(IDENTIFIER,i,dp[i][j - 1][a - 2] + 2 * edges1[i][j - 1])<SUB>49</SUB>>", "427": "<(IDENTIFIER,j,j - 1)<SUB>49</SUB>>", "429": "<(&lt;operator&gt;.subtraction,a - 2)<SUB>49</SUB>>", "431": "<(LITERAL,2,a - 2)<SUB>49</SUB>>", "433": "<(LITERAL,2,2 * edges1[i][j - 1])<SUB>49</SUB>>", "435": "<(&lt;operator&gt;.indexAccess,edges1[i])<SUB>49</SUB>>", "437": "<(IDENTIFIER,i,2 * edges1[i][j - 1])<SUB>49</SUB>>", "439": "<(IDENTIFIER,j,j - 1)<SUB>49</SUB>>", "441": "<(CONTROL_STRUCTURE,if (j &lt; m - 1),if (j &lt; m - 1))<SUB>51</SUB>>", "443": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>51</SUB>>", "445": "<(IDENTIFIER,m,m - 1)<SUB>51</SUB>>", "447": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "449": "<(&lt;operator&gt;.indexAccess,dp[i][j][a])<SUB>52</SUB>>", "451": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>52</SUB>>", "453": "<(IDENTIFIER,i,dp[i][j][a] = Math.min(dp[i][j][a], dp[i][j + 1][a - 2] + 2 * edges1[i][j]))<SUB>52</SUB>>", "455": "<(IDENTIFIER,a,dp[i][j][a] = Math.min(dp[i][j][a], dp[i][j + 1][a - 2] + 2 * edges1[i][j]))<SUB>52</SUB>>", "457": "<(IDENTIFIER,Math,Math.min(dp[i][j][a], dp[i][j + 1][a - 2] + 2 * edges1[i][j]))<SUB>52</SUB>>", "459": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>52</SUB>>", "461": "<(IDENTIFIER,dp,Math.min(dp[i][j][a], dp[i][j + 1][a - 2] + 2 * edges1[i][j]))<SUB>52</SUB>>", "463": "<(IDENTIFIER,j,Math.min(dp[i][j][a], dp[i][j + 1][a - 2] + 2 * edges1[i][j]))<SUB>52</SUB>>", "465": "<(&lt;operator&gt;.addition,dp[i][j + 1][a - 2] + 2 * edges1[i][j])<SUB>52</SUB>>", "467": "<(&lt;operator&gt;.indexAccess,dp[i][j + 1])<SUB>52</SUB>>", "469": "<(IDENTIFIER,dp,dp[i][j + 1][a - 2] + 2 * edges1[i][j])<SUB>52</SUB>>", "471": "<(&lt;operator&gt;.addition,j + 1)<SUB>52</SUB>>", "473": "<(LITERAL,1,j + 1)<SUB>52</SUB>>", "475": "<(IDENTIFIER,a,a - 2)<SUB>52</SUB>>", "477": "<(&lt;operator&gt;.multiplication,2 * edges1[i][j])<SUB>52</SUB>>", "479": "<(&lt;operator&gt;.indexAccess,edges1[i][j])<SUB>52</SUB>>", "481": "<(IDENTIFIER,edges1,2 * edges1[i][j])<SUB>52</SUB>>", "483": "<(IDENTIFIER,j,2 * edges1[i][j])<SUB>52</SUB>>", "485": "<(LOCAL,int i: int)<SUB>57</SUB>>", "487": "<(IDENTIFIER,i,int i = 0)<SUB>57</SUB>>", "489": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>57</SUB>>", "491": "<(IDENTIFIER,n,i &lt; n)<SUB>57</SUB>>", "493": "<(IDENTIFIER,i,i++)<SUB>57</SUB>>", "14": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>58</SUB>>", "496": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>58</SUB>>", "498": "<(&lt;init&gt;,new StringBuilder())<SUB>58</SUB>>", "499": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>59</SUB>>", "501": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>59</SUB>>", "503": "<(LITERAL,0,int j = 0)<SUB>59</SUB>>", "505": "<(IDENTIFIER,j,j &lt; m)<SUB>59</SUB>>", "507": "<(&lt;operator&gt;.postIncrement,j++)<SUB>59</SUB>>", "509": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "511": "<(IDENTIFIER,sb,sb.append(dp[i][j][k]))<SUB>60</SUB>>", "513": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>60</SUB>>", "515": "<(IDENTIFIER,dp,sb.append(dp[i][j][k]))<SUB>60</SUB>>", "517": "<(IDENTIFIER,j,sb.append(dp[i][j][k]))<SUB>60</SUB>>", "519": "<(CONTROL_STRUCTURE,if (j &lt; m - 1),if (j &lt; m - 1))<SUB>61</SUB>>", "521": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>61</SUB>>", "523": "<(IDENTIFIER,m,m - 1)<SUB>61</SUB>>", "525": "<(append,sb.append(' '))<SUB>61</SUB>>", "527": "<(LITERAL,' ',sb.append(' '))<SUB>61</SUB>>", "529": "<(IDENTIFIER,out,println(sb.toString()))<SUB>63</SUB>>", "531": "<(IDENTIFIER,sb,sb.toString())<SUB>63</SUB>>", "533": "<(IDENTIFIER,in,close())<SUB>66</SUB>>", "535": "<(IDENTIFIER,out,close())<SUB>67</SUB>>", "537": "<(MODIFIER,STATIC)>"}}