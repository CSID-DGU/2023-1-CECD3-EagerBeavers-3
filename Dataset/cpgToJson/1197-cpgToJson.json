{"edges": [["17", "19"], ["17", "111"], ["17", "112"], ["17", "113"], ["19", "20"], ["19", "24"], ["19", "28"], ["19", "32"], ["19", "45"], ["20", "21"], ["20", "22"], ["22", "23"], ["24", "25"], ["24", "26"], ["26", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "42"], ["35", "36"], ["35", "39"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "49"], ["45", "55"], ["46", "47"], ["46", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["55", "56"], ["56", "57"], ["56", "62"], ["56", "67"], ["56", "84"], ["56", "106"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "83"], ["70", "71"], ["70", "80"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "105"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "104"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "103"], ["93", "94"], ["93", "102"], ["94", "95"], ["94", "101"], ["95", "96"], ["95", "97"], ["95", "98"], ["98", "99"], ["98", "100"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["20", "26"], ["24", "30"], ["28", "36"], ["32", "46"], ["22", "20"], ["26", "24"], ["30", "28"], ["34", "32"], ["46", "53"], ["46", "59"], ["35", "42"], ["42", "34"], ["50", "113"], ["36", "39"], ["39", "35"], ["51", "50"], ["57", "64"], ["62", "74"], ["67", "98"], ["84", "109"], ["106", "113"], ["53", "51"], ["59", "57"], ["64", "62"], ["69", "67"], ["86", "84"], ["107", "106"], ["70", "69"], ["87", "86"], ["109", "107"], ["71", "80"], ["80", "70"], ["89", "87"], ["73", "71"], ["90", "89"], ["74", "77"], ["77", "73"], ["92", "90"], ["93", "92"], ["94", "93"], ["95", "94"], ["98", "95"], ["17", "22"], ["18", "113"], ["20", "113"], ["24", "113"], ["30", "113"], ["28", "113"], ["28", "113"], ["35", "113"], ["35", "113"], ["34", "113"], ["42", "113"], ["42", "113"], ["34", "113"], ["32", "113"], ["32", "113"], ["46", "113"], ["46", "113"], ["50", "113"], ["50", "113"], ["50", "113"], ["95", "113"], ["17", "18"], ["22", "20"], ["26", "24"], ["30", "28"], ["35", "32"], ["35", "32"], ["42", "32"], ["42", "32"], ["17", "22"], ["22", "26"], ["17", "26"], ["26", "30"], ["17", "30"], ["35", "34"], ["35", "34"], ["42", "34"], ["42", "34"], ["24", "46"], ["17", "46"], ["32", "46"], ["36", "35"], ["36", "35"], ["39", "35"], ["39", "35"], ["39", "42"], ["17", "42"], ["39", "42"], ["46", "50"], ["17", "50"], ["59", "57"], ["59", "57"], ["64", "62"], ["64", "62"], ["69", "67"], ["69", "67"], ["86", "84"], ["86", "84"], ["28", "36"], ["17", "36"], ["20", "39"], ["17", "39"], ["36", "39"], ["84", "106"], ["17", "106"], ["42", "59"], ["17", "59"], ["42", "59"], ["46", "64"], ["17", "64"], ["46", "64"], ["17", "69"], ["73", "69"], ["73", "69"], ["80", "69"], ["80", "69"], ["67", "86"], ["17", "86"], ["89", "86"], ["89", "86"], ["17", "70"], ["73", "70"], ["73", "70"], ["80", "70"], ["80", "70"], ["67", "87"], ["17", "87"], ["89", "87"], ["89", "87"], ["17", "71"], ["73", "71"], ["73", "71"], ["59", "80"], ["17", "80"], ["77", "80"], ["90", "89"], ["90", "89"], ["92", "89"], ["17", "89"], ["74", "73"], ["74", "73"], ["77", "73"], ["77", "73"], ["80", "90"], ["17", "90"], ["92", "90"], ["92", "90"], ["57", "74"], ["17", "74"], ["62", "74"], ["59", "77"], ["17", "77"], ["94", "92"], ["94", "92"], ["69", "92"], ["17", "92"], ["94", "93"], ["94", "93"], ["69", "93"], ["17", "93"], ["95", "94"], ["95", "94"], ["95", "94"], ["17", "94"], ["17", "95"], ["74", "95"], ["74", "98"], ["17", "98"], ["46", "107"], ["46", "94"], ["46", "73"], ["46", "77"], ["46", "64"], ["46", "51"], ["46", "57"], ["46", "89"], ["46", "98"], ["46", "84"], ["46", "69"], ["46", "67"], ["46", "74"], ["46", "95"], ["46", "92"], ["46", "106"], ["46", "50"], ["46", "59"], ["46", "87"], ["46", "93"], ["46", "90"], ["46", "80"], ["46", "71"], ["46", "53"], ["46", "70"], ["46", "109"], ["46", "62"], ["46", "86"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,n,n = nextLong())<SUB>2</SUB>>", "23": "<(IDENTIFIER,cin,nextLong())<SUB>2</SUB>>", "25": "<(IDENTIFIER,m,m = nextLong())<SUB>2</SUB>>", "27": "<(IDENTIFIER,cin,nextLong())<SUB>2</SUB>>", "29": "<(IDENTIFIER,k,k = nextLong())<SUB>2</SUB>>", "31": "<(IDENTIFIER,cin,nextLong())<SUB>2</SUB>>", "33": "<(IDENTIFIER,l,l = (k - 1) * (n / k) + n % k)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.multiplication,(k - 1) * (n / k))<SUB>3</SUB>>", "37": "<(IDENTIFIER,k,k - 1)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.division,n / k)<SUB>3</SUB>>", "41": "<(IDENTIFIER,k,n / k)<SUB>3</SUB>>", "43": "<(IDENTIFIER,n,n % k)<SUB>3</SUB>>", "45": "<(CONTROL_STRUCTURE,if (m &lt;= l),if (m &lt;= l))<SUB>4</SUB>>", "47": "<(IDENTIFIER,m,m &lt;= l)<SUB>4</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "53": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "55": "<(CONTROL_STRUCTURE,else,else)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,t = n / k)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.division,n / k)<SUB>8</SUB>>", "61": "<(IDENTIFIER,k,n / k)<SUB>8</SUB>>", "63": "<(IDENTIFIER,u,u = m - l)<SUB>9</SUB>>", "65": "<(IDENTIFIER,m,m - l)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,ans = (0 + (t - u) * (k - 1) + n % k) % Mod)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.modulo,(0 + (t - u) * (k - 1) + n % k) % Mod)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.addition,0 + (t - u) * (k - 1))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.multiplication,(t - u) * (k - 1))<SUB>10</SUB>>", "75": "<(IDENTIFIER,t,t - u)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>10</SUB>>", "79": "<(LITERAL,1,k - 1)<SUB>10</SUB>>", "81": "<(IDENTIFIER,n,n % k)<SUB>10</SUB>>", "83": "<(IDENTIFIER,Mod,(0 + (t - u) * (k - 1) + n % k) % Mod)<SUB>10</SUB>>", "85": "<(IDENTIFIER,ans,ans = (ans + ((k) * ((multi_mod(2, u + 1) - 2 + Mod) % Mod)) % Mod) % Mod)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.addition,ans + ((k) * ((multi_mod(2, u + 1) - 2 + Mod) % Mod)) % Mod)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.modulo,((k) * ((multi_mod(2, u + 1) - 2 + Mod) % Mod)) % Mod)<SUB>11</SUB>>", "91": "<(IDENTIFIER,k,(k) * ((multi_mod(2, u + 1) - 2 + Mod) % Mod))<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.addition,multi_mod(2, u + 1) - 2 + Mod)<SUB>11</SUB>>", "95": "<(multi_mod,multi_mod(2, u + 1))<SUB>11</SUB>>", "97": "<(LITERAL,2,multi_mod(2, u + 1))<SUB>11</SUB>>", "99": "<(IDENTIFIER,u,u + 1)<SUB>11</SUB>>", "101": "<(LITERAL,2,multi_mod(2, u + 1) - 2)<SUB>11</SUB>>", "103": "<(IDENTIFIER,Mod,(multi_mod(2, u + 1) - 2 + Mod) % Mod)<SUB>11</SUB>>", "105": "<(IDENTIFIER,Mod,(ans + ((k) * ((multi_mod(2, u + 1) - 2 + Mod) % Mod)) % Mod) % Mod)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "111": "<(MODIFIER,PUBLIC)>", "113": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}