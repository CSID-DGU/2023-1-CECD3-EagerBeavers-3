{"edges": [["23", "24"], ["23", "25"], ["23", "184"], ["23", "185"], ["23", "186"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "8"], ["25", "40"], ["25", "43"], ["25", "44"], ["25", "45"], ["25", "49"], ["25", "50"], ["25", "53"], ["25", "70"], ["25", "179"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "7"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "86"], ["80", "87"], ["80", "90"], ["80", "91"], ["80", "96"], ["80", "101"], ["80", "126"], ["80", "173"], ["82", "83"], ["82", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["101", "108"], ["101", "117"], ["101", "119"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "124"], ["120", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "136"], ["126", "138"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "146"], ["138", "159"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["155", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["167", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["175", "178"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "42"], ["40", "43"], ["43", "47"], ["45", "50"], ["50", "55"], ["179", "186"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["42", "40"], ["47", "45"], ["55", "58"], ["58", "65"], ["58", "72"], ["61", "58"], ["72", "75"], ["75", "84"], ["75", "182"], ["78", "75"], ["180", "179"], ["32", "30"], ["39", "37"], ["64", "61"], ["82", "87"], ["87", "93"], ["91", "97"], ["96", "105"], ["173", "78"], ["182", "180"], ["65", "68"], ["68", "64"], ["84", "82"], ["93", "91"], ["97", "96"], ["103", "113"], ["108", "121"], ["108", "128"], ["117", "113"], ["128", "135"], ["131", "140"], ["131", "175"], ["136", "135"], ["175", "173"], ["105", "103"], ["109", "108"], ["109", "114"], ["114", "108"], ["120", "124"], ["124", "117"], ["133", "131"], ["139", "148"], ["111", "109"], ["121", "120"], ["135", "133"], ["140", "143"], ["143", "139"], ["147", "156"], ["147", "162"], ["160", "170"], ["160", "136"], ["113", "111"], ["148", "151"], ["151", "147"], ["155", "162"], ["161", "160"], ["168", "136"], ["156", "155"], ["162", "161"], ["170", "168"], ["23", "28"], ["24", "186"], ["26", "186"], ["29", "186"], ["29", "186"], ["33", "186"], ["36", "186"], ["36", "186"], ["36", "186"], ["40", "186"], ["43", "186"], ["43", "186"], ["45", "186"], ["45", "186"], ["45", "186"], ["50", "186"], ["72", "186"], ["75", "186"], ["75", "186"], ["179", "186"], ["179", "186"], ["179", "186"], ["82", "186"], ["84", "186"], ["82", "186"], ["82", "186"], ["87", "186"], ["91", "186"], ["91", "186"], ["96", "186"], ["96", "186"], ["103", "186"], ["103", "186"], ["114", "186"], ["108", "186"], ["108", "186"], ["128", "186"], ["131", "186"], ["131", "186"], ["131", "186"], ["175", "186"], ["173", "186"], ["173", "186"], ["78", "186"], ["139", "186"], ["139", "186"], ["147", "186"], ["151", "186"], ["147", "186"], ["147", "186"], ["155", "186"], ["161", "186"], ["160", "186"], ["160", "186"], ["168", "186"], ["168", "186"], ["136", "186"], ["120", "186"], ["120", "186"], ["124", "186"], ["124", "186"], ["117", "186"], ["64", "186"], ["68", "186"], ["64", "186"], ["64", "186"], ["61", "186"], ["175", "186"], ["23", "24"], ["23", "26"], ["23", "33"], ["23", "40"], ["47", "45"], ["23", "50"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["40", "43"], ["23", "43"], ["23", "55"], ["23", "72"], ["29", "179"], ["50", "179"], ["173", "179"], ["23", "179"], ["23", "47"], ["55", "58"], ["61", "58"], ["23", "58"], ["58", "61"], ["23", "61"], ["68", "64"], ["72", "75"], ["78", "75"], ["23", "75"], ["23", "78"], ["75", "78"], ["84", "82"], ["23", "87"], ["82", "91"], ["96", "91"], ["23", "96"], ["175", "173"], ["175", "173"], ["175", "173"], ["75", "103"], ["23", "103"], ["23", "128"], ["36", "68"], ["23", "68"], ["45", "84"], ["64", "84"], ["23", "84"], ["109", "108"], ["109", "108"], ["114", "108"], ["114", "108"], ["109", "117"], ["23", "117"], ["128", "131"], ["136", "131"], ["23", "131"], ["82", "131"], ["109", "131"], ["23", "136"], ["131", "136"], ["143", "139"], ["143", "139"], ["23", "175"], ["50", "175"], ["173", "175"], ["87", "175"], ["168", "175"], ["75", "105"], ["23", "105"], ["103", "109"], ["117", "109"], ["23", "109"], ["82", "109"], ["91", "114"], ["124", "114"], ["23", "114"], ["82", "120"], ["161", "120"], ["91", "124"], ["114", "124"], ["23", "124"], ["82", "139"], ["161", "139"], ["120", "139"], ["91", "143"], ["114", "143"], ["151", "143"], ["124", "143"], ["23", "143"], ["131", "147"], ["23", "147"], ["151", "147"], ["151", "147"], ["161", "160"], ["161", "160"], ["23", "160"], ["82", "168"], ["161", "168"], ["131", "148"], ["23", "148"], ["143", "151"], ["23", "151"], ["82", "155"], ["139", "155"], ["82", "161"], ["139", "161"], ["155", "161"], ["23", "161"], ["87", "168"], ["23", "168"], ["58", "68"], ["58", "64"], ["58", "58"], ["58", "61"], ["58", "65"], ["75", "96"], ["75", "113"], ["75", "75"], ["75", "128"], ["75", "84"], ["75", "131"], ["75", "103"], ["75", "87"], ["75", "97"], ["75", "91"], ["75", "93"], ["75", "173"], ["75", "108"], ["75", "111"], ["75", "82"], ["75", "105"], ["75", "135"], ["75", "175"], ["75", "78"], ["75", "109"], ["75", "133"], ["108", "120"], ["108", "113"], ["108", "121"], ["108", "108"], ["108", "111"], ["108", "117"], ["108", "124"], ["108", "109"], ["131", "136"], ["131", "161"], ["131", "131"], ["131", "151"], ["131", "162"], ["131", "148"], ["131", "139"], ["131", "160"], ["131", "140"], ["131", "143"], ["131", "147"], ["131", "135"], ["131", "133"], ["109", "114"], ["147", "155"], ["147", "156"], ["160", "168"], ["160", "170"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>2</SUB>>", "3": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>2</SUB>>", "6": "<(LOCAL,Scanner sc: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,sc,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new Scanner(System.in))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY hs = new HashSet&lt;String&gt;())<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new HashSet&lt;String&gt;())<SUB>4</SUB>>", "7": "<(IDENTIFIER,hs,new HashSet&lt;String&gt;())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] Arr = new int[14])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[14])>", "49": "<(LOCAL,long max: long)<SUB>6</SUB>>", "51": "<(IDENTIFIER,max,long max = 0)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 14); i++),for (int i = 0; Some(i &lt; 14); i++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i &lt; 14)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,Arr[i])<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,Arr[i] = nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "71": "<(LOCAL,int i: int)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; 14)<SUB>11</SUB>>", "77": "<(LITERAL,14,i &lt; 14)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "81": "<(LOCAL,int[] arr: int[])<SUB>12</SUB>>", "83": "<(IDENTIFIER,arr,int[] arr = Arr.clone())<SUB>12</SUB>>", "85": "<(IDENTIFIER,Arr,Arr.clone())<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>14</SUB>>", "89": "<(LITERAL,0,long sum = 0)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,int r = arr[i])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,int r = arr[i])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,arr[i] = 0)<SUB>16</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; arr.length &amp;&amp; r &gt; 0); j++),for (int j = i + 1; Some(j &lt; arr.length &amp;&amp; r &gt; 0); j++))<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.addition,i + 1)<SUB>17</SUB>>", "107": "<(LITERAL,1,i + 1)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.lessThan,j &lt; arr.length)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,arr.length)<SUB>17</SUB>>", "113": "<(FIELD_IDENTIFIER,length,length)<SUB>17</SUB>>", "115": "<(IDENTIFIER,r,r &gt; 0)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>18</SUB>>", "123": "<(IDENTIFIER,j,arr[j]++)<SUB>18</SUB>>", "125": "<(IDENTIFIER,r,r--)<SUB>19</SUB>>", "127": "<(LOCAL,int j: int)<SUB>21</SUB>>", "129": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; arr.length)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.fieldAccess,arr.length)<SUB>21</SUB>>", "135": "<(FIELD_IDENTIFIER,length,length)<SUB>21</SUB>>", "137": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.assignmentPlus,arr[j] += r / 14)<SUB>22</SUB>>", "141": "<(IDENTIFIER,arr,arr[j] += r / 14)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.division,r / 14)<SUB>22</SUB>>", "145": "<(LITERAL,14,r / 14)<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.lessEqualsThan,j + 1 &lt;= (r % 14))<SUB>23</SUB>>", "149": "<(IDENTIFIER,j,j + 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.modulo,r % 14)<SUB>23</SUB>>", "153": "<(LITERAL,14,r % 14)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,arr[j]++)<SUB>24</SUB>>", "157": "<(IDENTIFIER,arr,arr[j]++)<SUB>24</SUB>>", "159": "<(CONTROL_STRUCTURE,if (arr[j] % 2 == 0),if (arr[j] % 2 == 0))<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.modulo,arr[j] % 2)<SUB>26</SUB>>", "163": "<(IDENTIFIER,arr,arr[j] % 2)<SUB>26</SUB>>", "165": "<(LITERAL,2,arr[j] % 2)<SUB>26</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "169": "<(IDENTIFIER,sum,sum += arr[j])<SUB>27</SUB>>", "171": "<(IDENTIFIER,arr,sum += arr[j])<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.assignment,max = Math.max(max, sum))<SUB>30</SUB>>", "175": "<(max,Math.max(max, sum))<SUB>30</SUB>>", "177": "<(IDENTIFIER,max,Math.max(max, sum))<SUB>30</SUB>>", "179": "<(println,System.out.println(max))<SUB>33</SUB>>", "181": "<(IDENTIFIER,System,System.out.println(max))<SUB>33</SUB>>", "183": "<(IDENTIFIER,max,System.out.println(max))<SUB>33</SUB>>", "185": "<(MODIFIER,STATIC)>"}}