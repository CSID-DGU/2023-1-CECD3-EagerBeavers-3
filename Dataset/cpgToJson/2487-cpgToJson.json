{"edges": [["31", "32"], ["31", "33"], ["31", "410"], ["31", "411"], ["31", "412"], ["33", "4"], ["33", "34"], ["33", "37"], ["33", "6"], ["33", "38"], ["33", "41"], ["33", "45"], ["33", "46"], ["33", "49"], ["33", "408"], ["34", "35"], ["34", "36"], ["37", "3"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "54"], ["50", "51"], ["50", "53"], ["51", "52"], ["54", "55"], ["54", "56"], ["54", "60"], ["54", "61"], ["54", "65"], ["54", "8"], ["54", "82"], ["54", "85"], ["54", "86"], ["54", "160"], ["54", "161"], ["54", "166"], ["54", "167"], ["54", "10"], ["54", "172"], ["54", "175"], ["54", "176"], ["54", "374"], ["54", "377"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "84"], ["85", "7"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["117", "135"], ["118", "119"], ["118", "120"], ["121", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "130"], ["126", "134"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "133"], ["135", "136"], ["136", "137"], ["136", "147"], ["137", "138"], ["137", "139"], ["137", "140"], ["140", "141"], ["140", "144"], ["140", "146"], ["141", "142"], ["141", "143"], ["144", "145"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "155"], ["151", "159"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "158"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "169"], ["169", "170"], ["170", "171"], ["172", "173"], ["172", "174"], ["175", "9"], ["176", "177"], ["176", "179"], ["177", "178"], ["179", "180"], ["179", "181"], ["179", "187"], ["179", "188"], ["179", "194"], ["179", "204"], ["179", "205"], ["179", "12"], ["179", "210"], ["179", "213"], ["179", "221"], ["179", "222"], ["179", "227"], ["179", "228"], ["179", "232"], ["179", "293"], ["179", "294"], ["179", "297"], ["179", "298"], ["179", "14"], ["179", "301"], ["179", "304"], ["179", "305"], ["179", "363"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["194", "195"], ["194", "196"], ["194", "197"], ["197", "198"], ["197", "201"], ["197", "203"], ["198", "199"], ["198", "200"], ["201", "202"], ["205", "206"], ["205", "207"], ["207", "208"], ["208", "209"], ["210", "211"], ["210", "212"], ["213", "11"], ["213", "214"], ["214", "215"], ["214", "218"], ["214", "220"], ["215", "216"], ["215", "217"], ["218", "219"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["230", "231"], ["232", "233"], ["232", "234"], ["232", "240"], ["232", "243"], ["232", "245"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "239"], ["237", "238"], ["240", "241"], ["240", "242"], ["243", "244"], ["245", "246"], ["245", "265"], ["245", "278"], ["246", "247"], ["246", "254"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["254", "255"], ["254", "262"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "273"], ["269", "277"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["273", "276"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "284"], ["280", "292"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["284", "291"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["294", "295"], ["294", "296"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["304", "13"], ["305", "306"], ["305", "310"], ["306", "307"], ["306", "308"], ["308", "309"], ["310", "311"], ["310", "312"], ["310", "319"], ["310", "320"], ["310", "327"], ["310", "332"], ["310", "16"], ["310", "334"], ["310", "337"], ["310", "342"], ["312", "313"], ["312", "314"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["320", "321"], ["320", "322"], ["322", "323"], ["322", "326"], ["323", "324"], ["323", "325"], ["327", "328"], ["327", "329"], ["329", "330"], ["329", "331"], ["332", "333"], ["334", "335"], ["334", "336"], ["337", "15"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["342", "343"], ["342", "348"], ["342", "350"], ["343", "344"], ["343", "347"], ["344", "345"], ["344", "346"], ["348", "349"], ["350", "351"], ["351", "352"], ["351", "353"], ["351", "358"], ["353", "354"], ["353", "355"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "360"], ["360", "361"], ["360", "362"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "371"], ["368", "369"], ["368", "370"], ["371", "372"], ["371", "373"], ["374", "375"], ["374", "376"], ["377", "378"], ["377", "379"], ["377", "382"], ["377", "386"], ["377", "388"], ["379", "380"], ["379", "381"], ["382", "383"], ["382", "384"], ["384", "385"], ["386", "387"], ["388", "389"], ["389", "390"], ["389", "391"], ["391", "392"], ["391", "401"], ["392", "393"], ["392", "400"], ["393", "394"], ["393", "399"], ["394", "395"], ["394", "398"], ["395", "396"], ["395", "397"], ["401", "402"], ["401", "407"], ["402", "403"], ["402", "406"], ["403", "404"], ["403", "405"], ["408", "409"], ["34", "37"], ["37", "40"], ["38", "44"], ["41", "46"], ["46", "51"], ["408", "412"], ["36", "34"], ["40", "38"], ["42", "41"], ["50", "58"], ["50", "408"], ["44", "42"], ["51", "50"], ["56", "63"], ["61", "67"], ["82", "85"], ["85", "88"], ["161", "170"], ["167", "174"], ["172", "175"], ["175", "177"], ["374", "379"], ["58", "56"], ["63", "61"], ["67", "70"], ["70", "77"], ["70", "84"], ["73", "70"], ["84", "82"], ["88", "91"], ["91", "98"], ["91", "165"], ["94", "91"], ["163", "161"], ["169", "167"], ["174", "172"], ["177", "184"], ["177", "374"], ["379", "384"], ["382", "51"], ["382", "395"], ["386", "384"], ["76", "73"], ["98", "103"], ["165", "163"], ["170", "169"], ["181", "191"], ["188", "200"], ["194", "208"], ["205", "212"], ["210", "217"], ["213", "226"], ["222", "230"], ["228", "237"], ["294", "298"], ["298", "303"], ["301", "304"], ["304", "308"], ["384", "382"], ["389", "386"], ["77", "80"], ["80", "76"], ["103", "106"], ["106", "114"], ["106", "94"], ["109", "106"], ["183", "181"], ["190", "188"], ["207", "205"], ["212", "210"], ["224", "222"], ["230", "228"], ["234", "240"], ["240", "250"], ["240", "294"], ["243", "240"], ["303", "301"], ["306", "315"], ["306", "364"], ["364", "177"], ["364", "368"], ["391", "389"], ["112", "118"], ["184", "185"], ["185", "183"], ["191", "192"], ["192", "190"], ["198", "201"], ["201", "194"], ["208", "207"], ["215", "218"], ["218", "213"], ["226", "224"], ["236", "234"], ["265", "283"], ["278", "243"], ["308", "306"], ["312", "323"], ["320", "329"], ["327", "332"], ["332", "336"], ["334", "338"], ["337", "344"], ["368", "371"], ["371", "177"], ["392", "403"], ["401", "391"], ["114", "112"], ["118", "123"], ["118", "143"], ["200", "198"], ["217", "215"], ["237", "236"], ["247", "258"], ["247", "266"], ["266", "272"], ["314", "312"], ["322", "320"], ["329", "327"], ["336", "334"], ["338", "337"], ["343", "364"], ["343", "355"], ["393", "392"], ["402", "401"], ["122", "109"], ["249", "247"], ["255", "262"], ["262", "266"], ["270", "273"], ["273", "265"], ["281", "287"], ["284", "278"], ["315", "318"], ["318", "314"], ["323", "326"], ["326", "322"], ["344", "343"], ["394", "393"], ["403", "406"], ["406", "402"], ["123", "129"], ["137", "148"], ["147", "109"], ["250", "253"], ["253", "249"], ["257", "255"], ["272", "270"], ["283", "281"], ["286", "284"], ["353", "362"], ["358", "308"], ["395", "398"], ["398", "394"], ["127", "130"], ["130", "122"], ["148", "154"], ["258", "261"], ["261", "257"], ["287", "290"], ["290", "286"], ["355", "353"], ["360", "358"], ["129", "127"], ["141", "144"], ["144", "137"], ["152", "155"], ["155", "147"], ["362", "360"], ["143", "141"], ["154", "152"], ["31", "36"], ["32", "412"], ["34", "412"], ["37", "412"], ["37", "412"], ["38", "412"], ["41", "412"], ["41", "412"], ["46", "412"], ["51", "412"], ["50", "412"], ["50", "412"], ["408", "412"], ["408", "412"], ["58", "412"], ["56", "412"], ["56", "412"], ["61", "412"], ["61", "412"], ["61", "412"], ["82", "412"], ["85", "412"], ["91", "412"], ["91", "412"], ["161", "412"], ["161", "412"], ["170", "412"], ["169", "412"], ["167", "412"], ["167", "412"], ["172", "412"], ["175", "412"], ["177", "412"], ["177", "412"], ["374", "412"], ["374", "412"], ["379", "412"], ["382", "412"], ["384", "412"], ["382", "412"], ["382", "412"], ["392", "412"], ["391", "412"], ["391", "412"], ["389", "412"], ["389", "412"], ["386", "412"], ["183", "412"], ["181", "412"], ["181", "412"], ["192", "412"], ["190", "412"], ["188", "412"], ["188", "412"], ["201", "412"], ["194", "412"], ["205", "412"], ["205", "412"], ["205", "412"], ["210", "412"], ["213", "412"], ["215", "412"], ["218", "412"], ["218", "412"], ["213", "412"], ["222", "412"], ["222", "412"], ["222", "412"], ["228", "412"], ["228", "412"], ["228", "412"], ["234", "412"], ["234", "412"], ["240", "412"], ["294", "412"], ["298", "412"], ["301", "412"], ["304", "412"], ["304", "412"], ["306", "412"], ["308", "412"], ["306", "412"], ["312", "412"], ["312", "412"], ["320", "412"], ["320", "412"], ["327", "412"], ["329", "412"], ["329", "412"], ["327", "412"], ["327", "412"], ["332", "412"], ["334", "412"], ["338", "412"], ["337", "412"], ["337", "412"], ["344", "412"], ["344", "412"], ["343", "412"], ["343", "412"], ["353", "412"], ["355", "412"], ["355", "412"], ["353", "412"], ["353", "412"], ["358", "412"], ["358", "412"], ["364", "412"], ["364", "412"], ["368", "412"], ["368", "412"], ["371", "412"], ["371", "412"], ["247", "412"], ["255", "412"], ["262", "412"], ["265", "412"], ["273", "412"], ["273", "412"], ["273", "412"], ["273", "412"], ["265", "412"], ["278", "412"], ["281", "412"], ["284", "412"], ["284", "412"], ["278", "412"], ["243", "412"], ["98", "412"], ["98", "412"], ["103", "412"], ["106", "412"], ["106", "412"], ["94", "412"], ["112", "412"], ["112", "412"], ["118", "412"], ["144", "412"], ["137", "412"], ["148", "412"], ["147", "412"], ["152", "412"], ["155", "412"], ["155", "412"], ["147", "412"], ["123", "412"], ["122", "412"], ["127", "412"], ["130", "412"], ["130", "412"], ["122", "412"], ["109", "412"], ["76", "412"], ["80", "412"], ["76", "412"], ["76", "412"], ["73", "412"], ["194", "412"], ["31", "32"], ["31", "34"], ["31", "38"], ["31", "46"], ["34", "37"], ["31", "37"], ["38", "41"], ["31", "41"], ["41", "408"], ["374", "408"], ["389", "408"], ["31", "408"], ["51", "50"], ["31", "50"], ["58", "56"], ["63", "61"], ["31", "82"], ["169", "167"], ["31", "172"], ["46", "51"], ["31", "51"], ["31", "67"], ["82", "85"], ["31", "85"], ["31", "88"], ["172", "175"], ["31", "175"], ["41", "374"], ["389", "374"], ["31", "374"], ["161", "374"], ["364", "374"], ["368", "374"], ["31", "379"], ["37", "58"], ["80", "58"], ["31", "58"], ["56", "63"], ["31", "63"], ["67", "70"], ["73", "70"], ["31", "70"], ["63", "70"], ["70", "73"], ["31", "73"], ["80", "76"], ["88", "91"], ["94", "91"], ["31", "91"], ["70", "91"], ["106", "91"], ["155", "94"], ["130", "94"], ["31", "94"], ["91", "94"], ["31", "98"], ["170", "169"], ["167", "177"], ["185", "177"], ["31", "177"], ["31", "181"], ["185", "181"], ["31", "188"], ["192", "188"], ["207", "205"], ["31", "210"], ["230", "228"], ["31", "294"], ["31", "298"], ["31", "301"], ["379", "382"], ["386", "382"], ["31", "382"], ["384", "382"], ["403", "386"], ["31", "386"], ["91", "103"], ["31", "103"], ["85", "170"], ["148", "170"], ["123", "170"], ["31", "170"], ["31", "194"], ["188", "194"], ["198", "194"], ["201", "194"], ["210", "213"], ["31", "213"], ["215", "213"], ["218", "213"], ["236", "234"], ["236", "234"], ["301", "304"], ["31", "304"], ["175", "384"], ["403", "384"], ["371", "384"], ["31", "384"], ["374", "389"], ["31", "389"], ["58", "80"], ["31", "80"], ["103", "106"], ["109", "106"], ["31", "106"], ["91", "106"], ["155", "109"], ["130", "109"], ["31", "109"], ["61", "112"], ["31", "183"], ["185", "183"], ["31", "190"], ["192", "190"], ["31", "198"], ["31", "203"], ["208", "207"], ["31", "215"], ["31", "220"], ["31", "230"], ["234", "240"], ["243", "240"], ["31", "240"], ["284", "243"], ["31", "243"], ["270", "265"], ["273", "265"], ["31", "265"], ["298", "306"], ["358", "306"], ["31", "306"], ["308", "306"], ["31", "334"], ["161", "364"], ["368", "364"], ["31", "364"], ["294", "364"], ["332", "364"], ["364", "368"], ["31", "368"], ["304", "371"], ["327", "371"], ["31", "371"], ["31", "391"], ["98", "112"], ["148", "112"], ["123", "112"], ["31", "112"], ["177", "185"], ["31", "185"], ["181", "192"], ["31", "192"], ["198", "201"], ["31", "201"], ["194", "208"], ["31", "208"], ["215", "218"], ["31", "218"], ["237", "236"], ["31", "236"], ["213", "278"], ["31", "278"], ["281", "278"], ["284", "278"], ["237", "308"], ["329", "308"], ["287", "308"], ["31", "308"], ["304", "327"], ["31", "327"], ["329", "327"], ["329", "327"], ["294", "332"], ["31", "332"], ["334", "337"], ["31", "337"], ["312", "337"], ["31", "392"], ["31", "401"], ["85", "118"], ["148", "118"], ["123", "118"], ["31", "118"], ["112", "118"], ["208", "237"], ["31", "237"], ["222", "247"], ["273", "247"], ["31", "247"], ["258", "262"], ["31", "262"], ["31", "270"], ["31", "277"], ["31", "281"], ["31", "292"], ["308", "329"], ["31", "329"], ["320", "329"], ["312", "338"], ["31", "338"], ["344", "343"], ["344", "343"], ["31", "343"], ["31", "393"], ["123", "122"], ["123", "122"], ["127", "122"], ["130", "122"], ["31", "122"], ["270", "273"], ["31", "273"], ["247", "273"], ["255", "273"], ["228", "273"], ["262", "273"], ["281", "284"], ["31", "284"], ["287", "284"], ["213", "344"], ["355", "344"], ["278", "344"], ["31", "344"], ["337", "344"], ["355", "353"], ["355", "353"], ["353", "358"], ["395", "403"], ["31", "403"], ["395", "403"], ["118", "123"], ["31", "123"], ["118", "123"], ["31", "127"], ["31", "134"], ["118", "137"], ["31", "137"], ["118", "137"], ["141", "137"], ["144", "137"], ["148", "147"], ["148", "147"], ["152", "147"], ["155", "147"], ["31", "147"], ["237", "250"], ["287", "250"], ["31", "250"], ["240", "250"], ["384", "395"], ["31", "395"], ["382", "395"], ["127", "130"], ["31", "130"], ["155", "130"], ["91", "130"], ["106", "130"], ["31", "141"], ["31", "146"], ["137", "148"], ["31", "148"], ["137", "148"], ["31", "152"], ["31", "159"], ["250", "258"], ["31", "258"], ["250", "258"], ["250", "287"], ["258", "287"], ["31", "287"], ["250", "287"], ["258", "287"], ["344", "355"], ["31", "355"], ["344", "355"], ["141", "144"], ["31", "144"], ["152", "155"], ["31", "155"], ["130", "155"], ["91", "155"], ["106", "155"], ["50", "167"], ["50", "161"], ["50", "84"], ["50", "163"], ["50", "384"], ["50", "170"], ["50", "50"], ["50", "61"], ["50", "174"], ["50", "88"], ["50", "70"], ["50", "382"], ["50", "374"], ["50", "177"], ["50", "172"], ["50", "51"], ["50", "169"], ["50", "85"], ["50", "56"], ["50", "67"], ["50", "379"], ["50", "91"], ["50", "58"], ["50", "82"], ["50", "165"], ["50", "63"], ["50", "175"], ["70", "76"], ["70", "80"], ["70", "70"], ["70", "73"], ["70", "77"], ["91", "94"], ["91", "98"], ["91", "103"], ["91", "91"], ["91", "106"], ["177", "188"], ["177", "230"], ["177", "192"], ["177", "215"], ["177", "240"], ["177", "226"], ["177", "308"], ["177", "213"], ["177", "228"], ["177", "298"], ["177", "181"], ["177", "208"], ["177", "190"], ["177", "184"], ["177", "306"], ["177", "194"], ["177", "224"], ["177", "201"], ["177", "304"], ["177", "236"], ["177", "200"], ["177", "217"], ["177", "364"], ["177", "237"], ["177", "177"], ["177", "222"], ["177", "185"], ["177", "198"], ["177", "301"], ["177", "191"], ["177", "207"], ["177", "212"], ["177", "205"], ["177", "183"], ["177", "210"], ["177", "294"], ["177", "234"], ["177", "303"], ["177", "218"], ["382", "384"], ["382", "401"], ["382", "403"], ["382", "392"], ["382", "394"], ["382", "389"], ["382", "382"], ["382", "402"], ["382", "386"], ["382", "395"], ["382", "393"], ["382", "398"], ["382", "406"], ["382", "391"], ["106", "114"], ["106", "112"], ["106", "118"], ["106", "109"], ["106", "106"], ["240", "240"], ["240", "272"], ["240", "290"], ["240", "283"], ["240", "243"], ["240", "247"], ["240", "281"], ["240", "249"], ["240", "253"], ["240", "278"], ["240", "273"], ["240", "284"], ["240", "265"], ["240", "286"], ["240", "287"], ["240", "270"], ["240", "250"], ["240", "266"], ["306", "334"], ["306", "326"], ["306", "338"], ["306", "322"], ["306", "336"], ["306", "315"], ["306", "329"], ["306", "323"], ["306", "320"], ["306", "337"], ["306", "332"], ["306", "314"], ["306", "318"], ["306", "343"], ["306", "327"], ["306", "312"], ["306", "344"], ["364", "368"], ["364", "371"], ["118", "154"], ["118", "129"], ["118", "148"], ["118", "152"], ["118", "127"], ["118", "141"], ["118", "122"], ["118", "123"], ["118", "147"], ["118", "144"], ["118", "137"], ["118", "130"], ["118", "155"], ["118", "143"], ["247", "262"], ["247", "258"], ["247", "257"], ["247", "261"], ["247", "255"], ["343", "308"], ["343", "358"], ["343", "306"], ["343", "362"], ["343", "355"], ["343", "360"], ["343", "353"]], "features": {"31": "<(METHOD,main)<SUB>1</SUB>>", "33": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.assignment,ANY input = new FastReader())<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new FastReader())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,int T: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,T,int T = 1)<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postDecrement,T--)<SUB>6</SUB>>", "53": "<(LITERAL,0,T-- &gt; 0)<SUB>6</SUB>>", "55": "<(LOCAL,int n: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "59": "<(IDENTIFIER,input,nextInt())<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n])>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>12</SUB>>", "81": "<(IDENTIFIER,input,nextInt())<SUB>12</SUB>>", "82": "<(&lt;operator&gt;.assignment,ANY map = new HashMap&lt;&gt;())<SUB>14</SUB>>", "84": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>14</SUB>>", "7": "<(IDENTIFIER,map,new HashMap&lt;&gt;())<SUB>14</SUB>>", "87": "<(LOCAL,int i: int)<SUB>15</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "93": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "97": "<(LOCAL,int sum: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,sum,int sum = 0)<SUB>17</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt; n); j++),for (int j = i; Some(j &lt; n); j++))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = i)<SUB>18</SUB>>", "105": "<(IDENTIFIER,i,int j = i)<SUB>18</SUB>>", "107": "<(IDENTIFIER,j,j &lt; n)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "113": "<(IDENTIFIER,sum,sum += a[j])<SUB>20</SUB>>", "115": "<(IDENTIFIER,a,sum += a[j])<SUB>20</SUB>>", "117": "<(CONTROL_STRUCTURE,if (map.containsKey(sum)),if (map.containsKey(sum)))<SUB>21</SUB>>", "119": "<(IDENTIFIER,map,containsKey(sum))<SUB>21</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "123": "<(get,get(sum))<SUB>23</SUB>>", "125": "<(IDENTIFIER,sum,get(sum))<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "129": "<(&lt;operator&gt;.alloc,new Pair(i, j))<SUB>23</SUB>>", "131": "<(IDENTIFIER,$obj3,new Pair(i, j))>", "133": "<(IDENTIFIER,j,new Pair(i, j))<SUB>23</SUB>>", "135": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "137": "<(put,put(sum, new ArrayList&lt;&gt;()))<SUB>27</SUB>>", "139": "<(IDENTIFIER,sum,put(sum, new ArrayList&lt;&gt;()))<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "143": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>27</SUB>>", "145": "<(IDENTIFIER,$obj4,new ArrayList&lt;&gt;())>", "147": "<(add,add(new Pair(i, j)))<SUB>28</SUB>>", "149": "<(IDENTIFIER,map,get(sum))<SUB>28</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "153": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "155": "<(&lt;init&gt;,new Pair(i, j))<SUB>28</SUB>>", "157": "<(IDENTIFIER,i,new Pair(i, j))<SUB>28</SUB>>", "159": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "161": "<(&lt;operator&gt;.assignment,int max = Integer.MIN_VALUE)<SUB>32</SUB>>", "163": "<(&lt;operator&gt;.fieldAccess,Integer.MIN_VALUE)<SUB>32</SUB>>", "165": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>32</SUB>>", "167": "<(&lt;operator&gt;.assignment,ANY it = iterator())<SUB>33</SUB>>", "169": "<(iterator,iterator())<SUB>33</SUB>>", "171": "<(IDENTIFIER,map,entrySet())<SUB>33</SUB>>", "172": "<(&lt;operator&gt;.assignment,ANY setBlocks = new ArrayList&lt;&gt;())<SUB>34</SUB>>", "174": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>34</SUB>>", "9": "<(IDENTIFIER,setBlocks,new ArrayList&lt;&gt;())<SUB>34</SUB>>", "177": "<(hasNext,hasNext())<SUB>35</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "181": "<(&lt;operator&gt;.assignment,ANY e = (Map.Entry) it.next())<SUB>37</SUB>>", "183": "<(&lt;operator&gt;.cast,(Map.Entry) it.next())<SUB>37</SUB>>", "185": "<(next,next())<SUB>37</SUB>>", "187": "<(LOCAL,ArrayList&lt;Pair&gt; list: ANY)<SUB>38</SUB>>", "189": "<(IDENTIFIER,list,ANY list = (ArrayList) e.getValue())<SUB>38</SUB>>", "191": "<(TYPE_REF,ArrayList,ArrayList)<SUB>38</SUB>>", "193": "<(IDENTIFIER,e,getValue())<SUB>38</SUB>>", "195": "<(IDENTIFIER,Collections,sort(list, new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012}))<SUB>39</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "199": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "201": "<(&lt;init&gt;,new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012})<SUB>39</SUB>>", "203": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "205": "<(&lt;operator&gt;.assignment,ANY sufMin = new Pair1[list.size()])<SUB>52</SUB>>", "207": "<(&lt;operator&gt;.alloc,new Pair1[list.size()])>", "209": "<(IDENTIFIER,list,size())<SUB>52</SUB>>", "210": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;&gt;(new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012}))<SUB>53</SUB>>", "212": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;(new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012}))<SUB>53</SUB>>", "11": "<(IDENTIFIER,set,new TreeSet&lt;&gt;(new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012}))<SUB>53</SUB>>", "215": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "217": "<(&lt;operator&gt;.alloc,new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012})<SUB>53</SUB>>", "219": "<(IDENTIFIER,$obj8,new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (o1.l == o2.l) {\\012            return o1.r - o2.r;\\012        } else {\\012            return o1.l - o2.l;\\012        }\\012    }\\012})>", "221": "<(LOCAL,int min: int)<SUB>66</SUB>>", "223": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>66</SUB>>", "225": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>66</SUB>>", "227": "<(LOCAL,int index: int)<SUB>67</SUB>>", "229": "<(IDENTIFIER,index,int index = -1)<SUB>67</SUB>>", "231": "<(LITERAL,1,-1)<SUB>67</SUB>>", "233": "<(LOCAL,int j: int)<SUB>68</SUB>>", "235": "<(IDENTIFIER,j,int j = list.size() - 1)<SUB>68</SUB>>", "237": "<(size,size())<SUB>68</SUB>>", "239": "<(LITERAL,1,list.size() - 1)<SUB>68</SUB>>", "241": "<(IDENTIFIER,j,j &gt;= 0)<SUB>68</SUB>>", "243": "<(&lt;operator&gt;.postDecrement,j--)<SUB>68</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "247": "<(&lt;operator&gt;.greaterEqualsThan,min &gt;= list.get(j).r)<SUB>70</SUB>>", "249": "<(&lt;operator&gt;.fieldAccess,list.get(j).r)<SUB>70</SUB>>", "251": "<(IDENTIFIER,list,get(j))<SUB>70</SUB>>", "253": "<(FIELD_IDENTIFIER,r,r)<SUB>70</SUB>>", "255": "<(&lt;operator&gt;.assignment,min = list.get(j).r)<SUB>72</SUB>>", "257": "<(&lt;operator&gt;.fieldAccess,list.get(j).r)<SUB>72</SUB>>", "259": "<(IDENTIFIER,list,get(j))<SUB>72</SUB>>", "261": "<(FIELD_IDENTIFIER,r,r)<SUB>72</SUB>>", "263": "<(IDENTIFIER,index,index = j)<SUB>73</SUB>>", "265": "<(&lt;operator&gt;.assignment,sufMin[j] = new Pair1(min, index))<SUB>75</SUB>>", "267": "<(IDENTIFIER,sufMin,sufMin[j] = new Pair1(min, index))<SUB>75</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "271": "<(IDENTIFIER,$obj10,&lt;empty&gt;)>", "273": "<(&lt;init&gt;,new Pair1(min, index))<SUB>75</SUB>>", "275": "<(IDENTIFIER,min,new Pair1(min, index))<SUB>75</SUB>>", "277": "<(IDENTIFIER,$obj10,&lt;empty&gt;)>", "279": "<(IDENTIFIER,set,add(new Pair(list.get(j).l, j)))<SUB>76</SUB>>", "281": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "283": "<(&lt;operator&gt;.alloc,new Pair(list.get(j).l, j))<SUB>76</SUB>>", "285": "<(IDENTIFIER,$obj11,new Pair(list.get(j).l, j))>", "287": "<(get,get(j))<SUB>76</SUB>>", "289": "<(IDENTIFIER,j,get(j))<SUB>76</SUB>>", "291": "<(IDENTIFIER,j,new Pair(list.get(j).l, j))<SUB>76</SUB>>", "293": "<(LOCAL,int count: int)<SUB>78</SUB>>", "295": "<(IDENTIFIER,count,int count = 0)<SUB>78</SUB>>", "297": "<(LOCAL,int j: int)<SUB>79</SUB>>", "299": "<(IDENTIFIER,j,int j = 0)<SUB>79</SUB>>", "14": "<(LOCAL,ArrayList&lt;Pair&gt; blocks: ANY)<SUB>80</SUB>>", "302": "<(IDENTIFIER,blocks,ANY blocks = new ArrayList&lt;&gt;())<SUB>80</SUB>>", "304": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>80</SUB>>", "305": "<(CONTROL_STRUCTURE,while (j &lt; list.size()),while (j &lt; list.size()))<SUB>81</SUB>>", "307": "<(IDENTIFIER,j,j &lt; list.size())<SUB>81</SUB>>", "309": "<(IDENTIFIER,list,size())<SUB>81</SUB>>", "311": "<(LOCAL,int m: int)<SUB>83</SUB>>", "313": "<(IDENTIFIER,m,int m = sufMin[j].min)<SUB>83</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,sufMin[j])<SUB>83</SUB>>", "317": "<(IDENTIFIER,j,int m = sufMin[j].min)<SUB>83</SUB>>", "319": "<(LOCAL,int ind: int)<SUB>84</SUB>>", "321": "<(IDENTIFIER,ind,int ind = sufMin[j].index)<SUB>84</SUB>>", "323": "<(&lt;operator&gt;.indexAccess,sufMin[j])<SUB>84</SUB>>", "325": "<(IDENTIFIER,j,int ind = sufMin[j].index)<SUB>84</SUB>>", "327": "<(add,add(list.get(ind)))<SUB>85</SUB>>", "329": "<(get,get(ind))<SUB>85</SUB>>", "331": "<(IDENTIFIER,ind,get(ind))<SUB>85</SUB>>", "333": "<(IDENTIFIER,count,count++)<SUB>86</SUB>>", "334": "<(&lt;operator&gt;.assignment,ANY p = new Pair(m + 1, 0))<SUB>87</SUB>>", "336": "<(&lt;operator&gt;.alloc,new Pair(m + 1, 0))<SUB>87</SUB>>", "15": "<(IDENTIFIER,p,new Pair(m + 1, 0))<SUB>87</SUB>>", "339": "<(IDENTIFIER,m,m + 1)<SUB>87</SUB>>", "341": "<(LITERAL,0,new Pair(m + 1, 0))<SUB>87</SUB>>", "343": "<(&lt;operator&gt;.equals,set.ceiling(p) == null)<SUB>88</SUB>>", "345": "<(IDENTIFIER,set,ceiling(p))<SUB>88</SUB>>", "347": "<(LITERAL,null,set.ceiling(p) == null)<SUB>88</SUB>>", "349": "<(CONTROL_STRUCTURE,break;,break;)<SUB>90</SUB>>", "351": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>93</SUB>>", "353": "<(&lt;operator&gt;.assignment,ANY p1 = ceiling(p))<SUB>94</SUB>>", "355": "<(ceiling,ceiling(p))<SUB>94</SUB>>", "357": "<(IDENTIFIER,p,ceiling(p))<SUB>94</SUB>>", "359": "<(IDENTIFIER,j,j = p1.r)<SUB>95</SUB>>", "361": "<(IDENTIFIER,p1,j = p1.r)<SUB>95</SUB>>", "363": "<(CONTROL_STRUCTURE,if (max &lt; count),if (max &lt; count))<SUB>98</SUB>>", "365": "<(IDENTIFIER,max,max &lt; count)<SUB>98</SUB>>", "367": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>99</SUB>>", "369": "<(IDENTIFIER,max,max = count)<SUB>100</SUB>>", "371": "<(&lt;operator&gt;.assignment,setBlocks = blocks)<SUB>101</SUB>>", "373": "<(IDENTIFIER,blocks,setBlocks = blocks)<SUB>101</SUB>>", "375": "<(IDENTIFIER,out,println(max))<SUB>104</SUB>>", "377": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; setBlocks.size()); i++),for (int i = 0; Some(i &lt; setBlocks.size()); i++))<SUB>105</SUB>>", "379": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>105</SUB>>", "381": "<(LITERAL,0,int i = 0)<SUB>105</SUB>>", "383": "<(IDENTIFIER,i,i &lt; setBlocks.size())<SUB>105</SUB>>", "385": "<(IDENTIFIER,setBlocks,size())<SUB>105</SUB>>", "387": "<(IDENTIFIER,i,i++)<SUB>105</SUB>>", "389": "<(println,println((setBlocks.get(i).l + 1) + &quot; &quot; + (setBlocks.get(i).r + 1)))<SUB>107</SUB>>", "391": "<(&lt;operator&gt;.addition,(setBlocks.get(i).l + 1) + &quot; &quot; + (setBlocks.get(i).r + 1))<SUB>107</SUB>>", "393": "<(&lt;operator&gt;.addition,setBlocks.get(i).l + 1)<SUB>107</SUB>>", "395": "<(get,get(i))<SUB>107</SUB>>", "397": "<(IDENTIFIER,i,get(i))<SUB>107</SUB>>", "399": "<(LITERAL,1,setBlocks.get(i).l + 1)<SUB>107</SUB>>", "401": "<(&lt;operator&gt;.addition,setBlocks.get(i).r + 1)<SUB>107</SUB>>", "403": "<(get,get(i))<SUB>107</SUB>>", "405": "<(IDENTIFIER,i,get(i))<SUB>107</SUB>>", "407": "<(LITERAL,1,setBlocks.get(i).r + 1)<SUB>107</SUB>>", "409": "<(IDENTIFIER,out,close())<SUB>110</SUB>>", "411": "<(MODIFIER,STATIC)>"}}