{"edges": [["19", "20"], ["19", "21"], ["19", "208"], ["19", "209"], ["19", "210"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "46"], ["21", "50"], ["21", "59"], ["21", "60"], ["21", "65"], ["21", "95"], ["21", "186"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["46", "49"], ["50", "51"], ["50", "58"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "104"], ["95", "107"], ["95", "109"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["127", "128"], ["127", "135"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["135", "136"], ["136", "137"], ["136", "138"], ["136", "141"], ["136", "144"], ["136", "146"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["147", "148"], ["147", "155"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["155", "156"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["161", "162"], ["161", "169"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "179"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["22", "28"], ["25", "33"], ["29", "37"], ["35", "43"], ["40", "46"], ["46", "54"], ["50", "62"], ["60", "67"], ["24", "22"], ["26", "25"], ["31", "29"], ["37", "35"], ["42", "40"], ["51", "50"], ["62", "60"], ["67", "70"], ["70", "78"], ["70", "100"], ["73", "70"], ["97", "104"], ["104", "113"], ["104", "188"], ["107", "104"], ["188", "191"], ["191", "210"], ["191", "200"], ["194", "191"], ["28", "26"], ["33", "31"], ["43", "42"], ["53", "51"], ["99", "97"], ["111", "118"], ["197", "194"], ["54", "53"], ["78", "81"], ["81", "89"], ["81", "73"], ["84", "81"], ["100", "99"], ["113", "111"], ["118", "121"], ["121", "131"], ["121", "107"], ["124", "121"], ["198", "204"], ["201", "197"], ["87", "84"], ["200", "198"], ["202", "201"], ["88", "93"], ["93", "87"], ["128", "138"], ["128", "124"], ["204", "202"], ["89", "88"], ["129", "128"], ["131", "129"], ["138", "141"], ["141", "151"], ["141", "124"], ["144", "141"], ["148", "157"], ["148", "144"], ["149", "148"], ["151", "149"], ["157", "166"], ["157", "144"], ["161", "144"], ["162", "171"], ["169", "161"], ["164", "162"], ["170", "182"], ["179", "169"], ["166", "164"], ["171", "175"], ["174", "170"], ["180", "179"], ["175", "174"], ["182", "180"], ["19", "24"], ["20", "210"], ["22", "210"], ["25", "210"], ["25", "210"], ["29", "210"], ["29", "210"], ["37", "210"], ["35", "210"], ["35", "210"], ["40", "210"], ["40", "210"], ["46", "210"], ["46", "210"], ["50", "210"], ["50", "210"], ["60", "210"], ["60", "210"], ["60", "210"], ["99", "210"], ["97", "210"], ["97", "210"], ["104", "210"], ["104", "210"], ["188", "210"], ["191", "210"], ["191", "210"], ["191", "210"], ["194", "210"], ["107", "210"], ["73", "210"], ["46", "210"], ["113", "210"], ["19", "20"], ["19", "22"], ["37", "35"], ["42", "40"], ["19", "50"], ["62", "60"], ["22", "25"], ["19", "25"], ["25", "29"], ["19", "29"], ["19", "46"], ["40", "46"], ["19", "67"], ["99", "97"], ["99", "97"], ["19", "188"], ["29", "37"], ["19", "37"], ["43", "42"], ["43", "42"], ["54", "62"], ["19", "62"], ["67", "70"], ["73", "70"], ["19", "70"], ["62", "70"], ["81", "70"], ["70", "73"], ["19", "73"], ["97", "104"], ["107", "104"], ["19", "104"], ["113", "107"], ["129", "107"], ["149", "107"], ["164", "107"], ["19", "107"], ["113", "111"], ["113", "111"], ["188", "191"], ["194", "191"], ["19", "191"], ["100", "191"], ["121", "191"], ["204", "194"], ["19", "194"], ["19", "43"], ["35", "43"], ["54", "53"], ["54", "53"], ["19", "53"], ["19", "78"], ["100", "99"], ["100", "99"], ["19", "99"], ["19", "118"], ["46", "197"], ["19", "197"], ["19", "54"], ["43", "54"], ["78", "81"], ["84", "81"], ["19", "81"], ["70", "81"], ["81", "84"], ["19", "84"], ["93", "87"], ["19", "100"], ["70", "100"], ["19", "113"], ["104", "113"], ["118", "121"], ["124", "121"], ["19", "121"], ["100", "121"], ["141", "121"], ["131", "124"], ["157", "124"], ["19", "124"], ["46", "201"], ["19", "201"], ["37", "93"], ["19", "93"], ["129", "128"], ["129", "128"], ["19", "128"], ["19", "204"], ["191", "204"], ["113", "129"], ["149", "129"], ["164", "129"], ["19", "129"], ["131", "129"], ["131", "129"], ["19", "138"], ["19", "131"], ["121", "131"], ["138", "141"], ["144", "141"], ["19", "141"], ["121", "141"], ["151", "144"], ["157", "144"], ["166", "144"], ["19", "144"], ["149", "148"], ["149", "148"], ["19", "148"], ["129", "149"], ["164", "149"], ["19", "149"], ["151", "149"], ["151", "149"], ["19", "151"], ["141", "151"], ["131", "157"], ["19", "157"], ["151", "157"], ["169", "161"], ["169", "161"], ["46", "161"], ["170", "169"], ["170", "169"], ["179", "169"], ["179", "169"], ["149", "164"], ["19", "164"], ["166", "164"], ["166", "164"], ["46", "170"], ["87", "170"], ["180", "179"], ["180", "179"], ["19", "179"], ["19", "166"], ["157", "166"], ["182", "180"], ["19", "180"], ["182", "180"], ["111", "182"], ["180", "182"], ["19", "182"], ["70", "73"], ["70", "81"], ["70", "70"], ["70", "78"], ["104", "107"], ["104", "113"], ["104", "104"], ["104", "121"], ["104", "118"], ["104", "111"], ["191", "197"], ["191", "198"], ["191", "204"], ["191", "191"], ["191", "194"], ["191", "202"], ["191", "201"], ["191", "200"], ["81", "81"], ["81", "84"], ["81", "87"], ["81", "93"], ["81", "88"], ["81", "89"], ["121", "128"], ["121", "131"], ["121", "121"], ["121", "129"], ["121", "124"], ["128", "138"], ["128", "141"], ["141", "149"], ["141", "151"], ["141", "144"], ["141", "148"], ["141", "141"], ["148", "157"], ["157", "169"], ["157", "161"], ["157", "179"], ["157", "162"], ["157", "170"], ["157", "174"], ["157", "182"], ["157", "164"], ["157", "180"], ["157", "171"], ["157", "166"], ["157", "175"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(useLocale,useLocale(Locale.US))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,Locale.US)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,US,US)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,double[] dp: double[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,dp,double[] dp = new double[1 &lt;&lt; n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>6</SUB>>", "47": "<(IDENTIFIER,Arrays,fill(dp, 0))<SUB>7</SUB>>", "49": "<(LITERAL,0,fill(dp, 0))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>8</SUB>>", "55": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "57": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>8</SUB>>", "59": "<(LOCAL,double[][] prob: double[][])<SUB>10</SUB>>", "61": "<(IDENTIFIER,prob,double[][] prob = new double[n][n])<SUB>10</SUB>>", "63": "<(IDENTIFIER,n,new double[n][n])<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(LOCAL,int j: int)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "83": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "85": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.assignment,prob[i][j] = nextDouble())<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,prob[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,prob[i][j] = nextDouble())<SUB>13</SUB>>", "93": "<(nextDouble,nextDouble())<SUB>13</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int t = (1 &lt;&lt; n) - 1; Some(t &gt;= 0); t--),for (int t = (1 &lt;&lt; n) - 1; Some(t &gt;= 0); t--))<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.assignment,int t = (1 &lt;&lt; n) - 1)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>18</SUB>>", "101": "<(LITERAL,1,1 &lt;&lt; n)<SUB>18</SUB>>", "103": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>18</SUB>>", "105": "<(IDENTIFIER,t,t &gt;= 0)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,t--)<SUB>18</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.assignment,int k = Integer.bitCount(t))<SUB>19</SUB>>", "113": "<(bitCount,Integer.bitCount(t))<SUB>19</SUB>>", "115": "<(IDENTIFIER,t,Integer.bitCount(t))<SUB>19</SUB>>", "117": "<(LOCAL,int i: int)<SUB>20</SUB>>", "119": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "123": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "125": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "127": "<(CONTROL_STRUCTURE,if ((t &amp; (1 &lt;&lt; i)) &gt; 0),if ((t &amp; (1 &lt;&lt; i)) &gt; 0))<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.and,t &amp; (1 &lt;&lt; i))<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>21</SUB>>", "133": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>21</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "137": "<(LOCAL,int j: int)<SUB>22</SUB>>", "139": "<(IDENTIFIER,j,int j = 0)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>22</SUB>>", "143": "<(IDENTIFIER,n,j &lt; n)<SUB>22</SUB>>", "145": "<(IDENTIFIER,j,j++)<SUB>22</SUB>>", "147": "<(CONTROL_STRUCTURE,if ((t &amp; (1 &lt;&lt; j)) &gt; 0),if ((t &amp; (1 &lt;&lt; j)) &gt; 0))<SUB>23</SUB>>", "149": "<(&lt;operator&gt;.and,t &amp; (1 &lt;&lt; j))<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>23</SUB>>", "153": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>23</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.notEquals,i != j)<SUB>24</SUB>>", "159": "<(IDENTIFIER,j,i != j)<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.assignmentPlus,dp[t - (1 &lt;&lt; j)] += dp[t] * prob[i][j] / (k * (k - 1) / 2))<SUB>25</SUB>>", "163": "<(IDENTIFIER,dp,dp[t - (1 &lt;&lt; j)] += dp[t] * prob[i][j] / (k * (k - 1) / 2))<SUB>25</SUB>>", "165": "<(IDENTIFIER,t,t - (1 &lt;&lt; j))<SUB>25</SUB>>", "167": "<(LITERAL,1,1 &lt;&lt; j)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.division,dp[t] * prob[i][j] / (k * (k - 1) / 2))<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[t])<SUB>25</SUB>>", "173": "<(IDENTIFIER,t,dp[t] * prob[i][j])<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,prob[i])<SUB>25</SUB>>", "177": "<(IDENTIFIER,i,dp[t] * prob[i][j])<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.division,k * (k - 1) / 2)<SUB>25</SUB>>", "181": "<(IDENTIFIER,k,k * (k - 1))<SUB>25</SUB>>", "183": "<(IDENTIFIER,k,k - 1)<SUB>25</SUB>>", "185": "<(LITERAL,2,k * (k - 1) / 2)<SUB>25</SUB>>", "187": "<(LOCAL,int i: int)<SUB>33</SUB>>", "189": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "191": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "193": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "195": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "197": "<(print,System.out.print(dp[1 &lt;&lt; i] + &quot; &quot;))<SUB>34</SUB>>", "199": "<(IDENTIFIER,System,System.out.print(dp[1 &lt;&lt; i] + &quot; &quot;))<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.addition,dp[1 &lt;&lt; i] + &quot; &quot;)<SUB>34</SUB>>", "203": "<(IDENTIFIER,dp,dp[1 &lt;&lt; i] + &quot; &quot;)<SUB>34</SUB>>", "205": "<(LITERAL,1,1 &lt;&lt; i)<SUB>34</SUB>>", "207": "<(LITERAL,&quot; &quot;,dp[1 &lt;&lt; i] + &quot; &quot;)<SUB>34</SUB>>", "209": "<(MODIFIER,STATIC)>"}}