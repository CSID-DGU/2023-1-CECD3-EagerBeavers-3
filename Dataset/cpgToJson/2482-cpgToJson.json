{"edges": [["25", "27"], ["25", "287"], ["25", "288"], ["25", "289"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "35"], ["27", "36"], ["27", "40"], ["27", "41"], ["27", "45"], ["27", "62"], ["27", "63"], ["27", "66"], ["27", "67"], ["27", "6"], ["27", "70"], ["27", "73"], ["27", "74"], ["27", "246"], ["27", "251"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "5"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "8"], ["99", "105"], ["99", "108"], ["99", "111"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "7"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "116"], ["111", "135"], ["112", "113"], ["113", "114"], ["113", "115"], ["116", "10"], ["116", "117"], ["116", "120"], ["116", "121"], ["116", "124"], ["116", "128"], ["117", "118"], ["117", "119"], ["120", "9"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["136", "143"], ["136", "144"], ["136", "147"], ["136", "148"], ["136", "154"], ["136", "155"], ["136", "159"], ["136", "196"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "153"], ["151", "152"], ["155", "156"], ["155", "157"], ["157", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "172"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "180"], ["172", "189"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["190", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "201"], ["196", "220"], ["197", "198"], ["197", "199"], ["199", "200"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["229", "230"], ["229", "234"], ["230", "231"], ["230", "232"], ["230", "233"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "243"], ["239", "240"], ["239", "241"], ["241", "242"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["251", "252"], ["251", "253"], ["251", "256"], ["251", "259"], ["251", "261"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["259", "260"], ["261", "262"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "278"], ["267", "268"], ["267", "277"], ["268", "269"], ["268", "276"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["278", "279"], ["278", "286"], ["279", "280"], ["279", "285"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "47"], ["63", "67"], ["67", "72"], ["70", "73"], ["73", "76"], ["246", "253"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "50"], ["50", "57"], ["50", "63"], ["53", "50"], ["72", "70"], ["76", "79"], ["79", "86"], ["79", "249"], ["82", "79"], ["247", "246"], ["253", "256"], ["256", "289"], ["256", "265"], ["259", "256"], ["34", "32"], ["56", "53"], ["86", "91"], ["249", "247"], ["262", "259"], ["57", "60"], ["60", "56"], ["91", "94"], ["94", "102"], ["94", "82"], ["97", "94"], ["263", "271"], ["266", "262"], ["100", "107"], ["105", "108"], ["108", "113"], ["265", "263"], ["267", "281"], ["278", "266"], ["102", "100"], ["107", "105"], ["112", "119"], ["112", "140"], ["268", "267"], ["279", "278"], ["113", "112"], ["117", "120"], ["120", "121"], ["121", "124"], ["124", "129"], ["269", "268"], ["280", "285"], ["285", "279"], ["119", "117"], ["129", "132"], ["129", "97"], ["132", "97"], ["138", "144"], ["144", "151"], ["148", "157"], ["155", "160"], ["270", "275"], ["275", "269"], ["281", "280"], ["140", "138"], ["150", "148"], ["157", "155"], ["160", "168"], ["160", "199"], ["197", "202"], ["197", "224"], ["271", "270"], ["151", "150"], ["165", "175"], ["199", "197"], ["202", "208"], ["167", "165"], ["173", "181"], ["173", "193"], ["206", "214"], ["206", "97"], ["222", "230"], ["222", "97"], ["168", "167"], ["174", "173"], ["181", "186"], ["184", "160"], ["208", "206"], ["212", "217"], ["217", "97"], ["223", "222"], ["230", "235"], ["175", "178"], ["178", "174"], ["186", "184"], ["191", "160"], ["214", "212"], ["224", "227"], ["227", "223"], ["235", "241"], ["235", "97"], ["193", "191"], ["239", "243"], ["243", "97"], ["241", "239"], ["25", "30"], ["26", "289"], ["28", "289"], ["31", "289"], ["31", "289"], ["38", "289"], ["36", "289"], ["36", "289"], ["41", "289"], ["41", "289"], ["41", "289"], ["63", "289"], ["67", "289"], ["67", "289"], ["70", "289"], ["73", "289"], ["73", "289"], ["79", "289"], ["79", "289"], ["246", "289"], ["246", "289"], ["253", "289"], ["256", "289"], ["256", "289"], ["256", "289"], ["259", "289"], ["82", "289"], ["53", "289"], ["25", "26"], ["25", "28"], ["38", "36"], ["43", "41"], ["25", "63"], ["25", "67"], ["25", "70"], ["28", "31"], ["25", "31"], ["25", "47"], ["70", "73"], ["25", "73"], ["25", "76"], ["63", "246"], ["235", "246"], ["239", "246"], ["206", "246"], ["212", "246"], ["129", "246"], ["25", "246"], ["25", "253"], ["31", "38"], ["25", "38"], ["36", "43"], ["25", "43"], ["47", "50"], ["53", "50"], ["25", "50"], ["43", "50"], ["50", "53"], ["25", "53"], ["60", "56"], ["76", "79"], ["82", "79"], ["25", "79"], ["50", "79"], ["94", "79"], ["108", "82"], ["173", "82"], ["25", "82"], ["79", "82"], ["25", "86"], ["253", "256"], ["259", "256"], ["25", "256"], ["246", "256"], ["280", "259"], ["25", "259"], ["79", "91"], ["25", "91"], ["246", "262"], ["25", "262"], ["38", "60"], ["25", "60"], ["91", "94"], ["97", "94"], ["25", "94"], ["79", "94"], ["108", "97"], ["222", "97"], ["25", "97"], ["41", "100"], ["25", "105"], ["25", "266"], ["86", "100"], ["140", "100"], ["124", "100"], ["25", "100"], ["105", "108"], ["25", "108"], ["173", "108"], ["79", "108"], ["94", "108"], ["25", "267"], ["25", "278"], ["113", "112"], ["113", "112"], ["25", "117"], ["25", "268"], ["73", "113"], ["140", "113"], ["124", "113"], ["25", "113"], ["100", "113"], ["117", "120"], ["25", "120"], ["120", "121"], ["25", "121"], ["108", "121"], ["113", "124"], ["25", "124"], ["113", "124"], ["121", "124"], ["124", "132"], ["25", "132"], ["140", "138"], ["140", "138"], ["25", "144"], ["150", "148"], ["150", "148"], ["157", "155"], ["281", "280"], ["281", "280"], ["270", "280"], ["25", "280"], ["63", "129"], ["235", "129"], ["239", "129"], ["206", "129"], ["212", "129"], ["25", "129"], ["271", "270"], ["271", "270"], ["256", "270"], ["25", "270"], ["271", "281"], ["25", "281"], ["271", "281"], ["113", "140"], ["25", "140"], ["113", "140"], ["151", "150"], ["25", "150"], ["151", "157"], ["25", "157"], ["144", "160"], ["191", "160"], ["25", "160"], ["148", "160"], ["184", "160"], ["167", "165"], ["167", "165"], ["155", "197"], ["181", "197"], ["25", "197"], ["199", "197"], ["73", "271"], ["281", "271"], ["140", "271"], ["124", "271"], ["25", "271"], ["67", "271"], ["281", "271"], ["243", "271"], ["217", "271"], ["132", "271"], ["138", "151"], ["25", "151"], ["157", "199"], ["175", "199"], ["25", "199"], ["199", "202"], ["25", "202"], ["108", "202"], ["160", "167"], ["25", "167"], ["160", "167"], ["108", "173"], ["25", "173"], ["175", "181"], ["25", "181"], ["186", "184"], ["186", "184"], ["63", "206"], ["235", "206"], ["239", "206"], ["212", "206"], ["129", "206"], ["25", "206"], ["197", "206"], ["25", "212"], ["197", "212"], ["140", "217"], ["25", "217"], ["108", "222"], ["25", "222"], ["160", "168"], ["25", "168"], ["160", "168"], ["175", "191"], ["25", "191"], ["197", "208"], ["25", "208"], ["224", "230"], ["25", "230"], ["224", "230"], ["108", "230"], ["157", "175"], ["25", "175"], ["165", "175"], ["25", "186"], ["175", "186"], ["25", "214"], ["197", "214"], ["199", "224"], ["25", "224"], ["197", "224"], ["63", "235"], ["239", "235"], ["206", "235"], ["212", "235"], ["129", "235"], ["25", "235"], ["230", "235"], ["241", "239"], ["140", "243"], ["25", "243"], ["175", "193"], ["25", "193"], ["230", "241"], ["25", "241"], ["50", "60"], ["50", "57"], ["50", "56"], ["50", "50"], ["50", "53"], ["79", "94"], ["79", "91"], ["79", "79"], ["79", "86"], ["79", "82"], ["256", "279"], ["256", "275"], ["256", "256"], ["256", "262"], ["256", "281"], ["256", "285"], ["256", "259"], ["256", "267"], ["256", "268"], ["256", "280"], ["256", "265"], ["256", "270"], ["256", "263"], ["256", "278"], ["256", "271"], ["256", "269"], ["256", "266"], ["94", "107"], ["94", "94"], ["94", "113"], ["94", "102"], ["94", "97"], ["94", "112"], ["94", "100"], ["94", "108"], ["94", "105"], ["112", "120"], ["112", "150"], ["112", "151"], ["112", "197"], ["112", "119"], ["112", "121"], ["112", "144"], ["112", "129"], ["112", "138"], ["112", "148"], ["112", "155"], ["112", "160"], ["112", "157"], ["112", "140"], ["112", "199"], ["112", "117"], ["112", "124"], ["129", "132"], ["160", "167"], ["160", "178"], ["160", "168"], ["160", "173"], ["160", "174"], ["160", "160"], ["160", "165"], ["160", "175"], ["197", "206"], ["197", "208"], ["197", "223"], ["197", "224"], ["197", "202"], ["197", "227"], ["197", "222"], ["173", "181"], ["173", "191"], ["173", "184"], ["173", "186"], ["173", "193"], ["206", "214"], ["206", "212"], ["206", "217"], ["222", "230"], ["222", "235"], ["235", "243"], ["235", "239"], ["235", "241"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "35": "<(LOCAL,int a: int)<SUB>3</SUB>>", "37": "<(IDENTIFIER,a,int a = nextInt())<SUB>3</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] x = new int[a])<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[a])>", "45": "<(CONTROL_STRUCTURE,for (int n = 0; Some(n &lt; a); n++),for (int n = 0; Some(n &lt; a); n++))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = 0)<SUB>5</SUB>>", "49": "<(LITERAL,0,int n = 0)<SUB>5</SUB>>", "51": "<(IDENTIFIER,n,n &lt; a)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,n++)<SUB>5</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,x[n])<SUB>6</SUB>>", "59": "<(IDENTIFIER,n,x[n] = nextInt())<SUB>6</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int max = 1)<SUB>8</SUB>>", "65": "<(LITERAL,1,int max = 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>9</SUB>>", "69": "<(LITERAL,0,int t = 0)<SUB>9</SUB>>", "70": "<(&lt;operator&gt;.assignment,ANY map = new HashMap&lt;Integer, ArrayList&lt;node&gt;&gt;())<SUB>10</SUB>>", "72": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, ArrayList&lt;node&gt;&gt;())<SUB>10</SUB>>", "5": "<(IDENTIFIER,map,new HashMap&lt;Integer, ArrayList&lt;node&gt;&gt;())<SUB>10</SUB>>", "75": "<(LOCAL,int n: int)<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,int n = 0)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.lessThan,n &lt; a)<SUB>11</SUB>>", "81": "<(IDENTIFIER,a,n &lt; a)<SUB>11</SUB>>", "83": "<(IDENTIFIER,n,n++)<SUB>11</SUB>>", "85": "<(LOCAL,int num: int)<SUB>12</SUB>>", "87": "<(IDENTIFIER,num,int num = 0)<SUB>12</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int m = n; Some(m &lt; a); m++),for (int m = n; Some(m &lt; a); m++))<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,int m = n)<SUB>13</SUB>>", "93": "<(IDENTIFIER,n,int m = n)<SUB>13</SUB>>", "95": "<(IDENTIFIER,m,m &lt; a)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,m++)<SUB>13</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "101": "<(IDENTIFIER,num,num += x[m])<SUB>14</SUB>>", "103": "<(IDENTIFIER,x,num += x[m])<SUB>14</SUB>>", "8": "<(LOCAL,node node: ANY)<SUB>15</SUB>>", "106": "<(IDENTIFIER,node,ANY node = new node(n, m))<SUB>15</SUB>>", "108": "<(&lt;init&gt;,new node(n, m))<SUB>15</SUB>>", "109": "<(IDENTIFIER,n,new node(n, m))<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,if (!map.containsKey(num)),if (!map.containsKey(num)))<SUB>16</SUB>>", "113": "<(containsKey,containsKey(num))<SUB>16</SUB>>", "115": "<(IDENTIFIER,num,containsKey(num))<SUB>16</SUB>>", "10": "<(LOCAL,ArrayList&lt;node&gt; list: ANY)<SUB>17</SUB>>", "118": "<(IDENTIFIER,list,ANY list = new ArrayList&lt;node&gt;())<SUB>17</SUB>>", "120": "<(&lt;init&gt;,new ArrayList&lt;node&gt;())<SUB>17</SUB>>", "121": "<(add,add(node))<SUB>18</SUB>>", "123": "<(IDENTIFIER,node,add(node))<SUB>18</SUB>>", "125": "<(IDENTIFIER,map,put(num, list))<SUB>19</SUB>>", "127": "<(IDENTIFIER,list,put(num, list))<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.equals,max == 1)<SUB>20</SUB>>", "131": "<(LITERAL,1,max == 1)<SUB>20</SUB>>", "133": "<(IDENTIFIER,t,t = num)<SUB>20</SUB>>", "135": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "137": "<(LOCAL,ArrayList&lt;node&gt; list: ANY)<SUB>23</SUB>>", "139": "<(IDENTIFIER,list,ANY list = get(num))<SUB>23</SUB>>", "141": "<(IDENTIFIER,map,get(num))<SUB>23</SUB>>", "143": "<(LOCAL,int left: int)<SUB>24</SUB>>", "145": "<(IDENTIFIER,left,int left = 0)<SUB>24</SUB>>", "147": "<(LOCAL,int right: int)<SUB>25</SUB>>", "149": "<(IDENTIFIER,right,int right = list.size() - 1)<SUB>25</SUB>>", "151": "<(size,size())<SUB>25</SUB>>", "153": "<(LITERAL,1,list.size() - 1)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.assignment,int res = size())<SUB>26</SUB>>", "157": "<(size,size())<SUB>26</SUB>>", "159": "<(CONTROL_STRUCTURE,while (left &lt;= right),while (left &lt;= right))<SUB>27</SUB>>", "161": "<(IDENTIFIER,left,left &lt;= right)<SUB>27</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.assignment,int mid = (left + right) &gt;&gt; 1)<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.logicalShiftRight,(left + right) &gt;&gt; 1)<SUB>28</SUB>>", "169": "<(IDENTIFIER,left,left + right)<SUB>28</SUB>>", "171": "<(LITERAL,1,(left + right) &gt;&gt; 1)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.greaterEqualsThan,list.get(mid).r &gt;= n)<SUB>30</SUB>>", "175": "<(get,get(mid))<SUB>30</SUB>>", "177": "<(IDENTIFIER,mid,get(mid))<SUB>30</SUB>>", "179": "<(IDENTIFIER,n,list.get(mid).r &gt;= n)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.assignment,res = mid)<SUB>31</SUB>>", "183": "<(IDENTIFIER,mid,res = mid)<SUB>31</SUB>>", "185": "<(IDENTIFIER,right,right = mid - 1)<SUB>32</SUB>>", "187": "<(IDENTIFIER,mid,mid - 1)<SUB>32</SUB>>", "189": "<(CONTROL_STRUCTURE,else,else)<SUB>34</SUB>>", "191": "<(&lt;operator&gt;.assignment,left = mid + 1)<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.addition,mid + 1)<SUB>35</SUB>>", "195": "<(LITERAL,1,mid + 1)<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.equals,res == list.size())<SUB>38</SUB>>", "199": "<(size,size())<SUB>38</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "203": "<(IDENTIFIER,list,add(node))<SUB>39</SUB>>", "205": "<(CONTROL_STRUCTURE,if (max &lt; res + 1),if (max &lt; res + 1))<SUB>40</SUB>>", "207": "<(IDENTIFIER,max,max &lt; res + 1)<SUB>40</SUB>>", "209": "<(IDENTIFIER,res,res + 1)<SUB>40</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "213": "<(IDENTIFIER,max,max = res + 1)<SUB>41</SUB>>", "215": "<(IDENTIFIER,res,res + 1)<SUB>41</SUB>>", "217": "<(&lt;operator&gt;.assignment,t = num)<SUB>42</SUB>>", "219": "<(IDENTIFIER,num,t = num)<SUB>42</SUB>>", "221": "<(CONTROL_STRUCTURE,if (list.get(res).r &gt; m),if (list.get(res).r &gt; m))<SUB>45</SUB>>", "223": "<(&lt;operator&gt;.fieldAccess,list.get(res).r)<SUB>45</SUB>>", "225": "<(IDENTIFIER,list,get(res))<SUB>45</SUB>>", "227": "<(FIELD_IDENTIFIER,r,r)<SUB>45</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "231": "<(IDENTIFIER,list,set(res, node))<SUB>46</SUB>>", "233": "<(IDENTIFIER,node,set(res, node))<SUB>46</SUB>>", "235": "<(&lt;operator&gt;.lessThan,max &lt; res)<SUB>47</SUB>>", "237": "<(IDENTIFIER,res,max &lt; res)<SUB>47</SUB>>", "239": "<(&lt;operator&gt;.assignment,max = size())<SUB>48</SUB>>", "241": "<(size,size())<SUB>48</SUB>>", "243": "<(&lt;operator&gt;.assignment,t = num)<SUB>49</SUB>>", "245": "<(IDENTIFIER,num,t = num)<SUB>49</SUB>>", "247": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>56</SUB>>", "249": "<(FIELD_IDENTIFIER,out,out)<SUB>56</SUB>>", "251": "<(CONTROL_STRUCTURE,for (int n = 0; Some(n &lt; max); n++),for (int n = 0; Some(n &lt; max); n++))<SUB>57</SUB>>", "253": "<(&lt;operator&gt;.assignment,int n = 0)<SUB>57</SUB>>", "255": "<(LITERAL,0,int n = 0)<SUB>57</SUB>>", "257": "<(IDENTIFIER,n,n &lt; max)<SUB>57</SUB>>", "259": "<(&lt;operator&gt;.postIncrement,n++)<SUB>57</SUB>>", "261": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "263": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>58</SUB>>", "265": "<(FIELD_IDENTIFIER,out,out)<SUB>58</SUB>>", "267": "<(&lt;operator&gt;.addition,(map.get(t).get(n).l + 1) + &quot; &quot;)<SUB>58</SUB>>", "269": "<(&lt;operator&gt;.fieldAccess,map.get(t).get(n).l)<SUB>58</SUB>>", "271": "<(get,get(t))<SUB>58</SUB>>", "273": "<(IDENTIFIER,t,get(t))<SUB>58</SUB>>", "275": "<(FIELD_IDENTIFIER,l,l)<SUB>58</SUB>>", "277": "<(LITERAL,&quot; &quot;,(map.get(t).get(n).l + 1) + &quot; &quot;)<SUB>58</SUB>>", "279": "<(&lt;operator&gt;.fieldAccess,map.get(t).get(n).r)<SUB>58</SUB>>", "281": "<(get,get(t))<SUB>58</SUB>>", "283": "<(IDENTIFIER,t,get(t))<SUB>58</SUB>>", "285": "<(FIELD_IDENTIFIER,r,r)<SUB>58</SUB>>", "287": "<(MODIFIER,PUBLIC)>", "289": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}