{"edges": [["19", "20"], ["19", "21"], ["19", "110"], ["19", "111"], ["19", "112"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "68"], ["21", "71"], ["21", "72"], ["21", "75"], ["21", "95"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "61"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "93"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "99"], ["95", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["68", "72"], ["72", "77"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "68"], ["52", "49"], ["77", "80"], ["80", "87"], ["80", "96"], ["83", "80"], ["96", "102"], ["96", "108"], ["99", "112"], ["28", "26"], ["55", "62"], ["61", "52"], ["86", "93"], ["86", "83"], ["93", "83"], ["100", "99"], ["105", "112"], ["56", "59"], ["59", "55"], ["62", "65"], ["65", "61"], ["87", "90"], ["90", "86"], ["102", "100"], ["106", "105"], ["108", "106"], ["19", "24"], ["20", "112"], ["22", "112"], ["25", "112"], ["25", "112"], ["32", "112"], ["30", "112"], ["30", "112"], ["35", "112"], ["35", "112"], ["40", "112"], ["40", "112"], ["68", "112"], ["68", "112"], ["72", "112"], ["77", "112"], ["80", "112"], ["80", "112"], ["80", "112"], ["96", "112"], ["96", "112"], ["99", "112"], ["86", "112"], ["86", "112"], ["86", "112"], ["93", "112"], ["83", "112"], ["59", "112"], ["55", "112"], ["55", "112"], ["61", "112"], ["61", "112"], ["61", "112"], ["52", "112"], ["68", "112"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "72"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "68"], ["40", "68"], ["61", "68"], ["19", "77"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["35", "61"], ["55", "61"], ["77", "80"], ["83", "80"], ["19", "80"], ["49", "80"], ["80", "83"], ["19", "83"], ["72", "96"], ["93", "96"], ["19", "96"], ["19", "99"], ["35", "86"], ["55", "86"], ["68", "86"], ["61", "86"], ["72", "93"], ["19", "93"], ["19", "105"], ["32", "59"], ["19", "59"], ["49", "49"], ["49", "61"], ["49", "52"], ["49", "56"], ["49", "65"], ["49", "59"], ["49", "55"], ["49", "62"], ["80", "80"], ["80", "83"], ["80", "87"], ["80", "90"], ["80", "86"], ["96", "105"], ["96", "99"], ["96", "100"], ["96", "102"], ["96", "106"], ["96", "108"], ["86", "93"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(LOCAL,int[] b: int[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,b,int[] b = new int[n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "45": "<(LOCAL,int i: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>9</SUB>>", "57": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>9</SUB>>", "59": "<(nextInt,nextInt())<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,b[i] = a[i])<SUB>10</SUB>>", "63": "<(IDENTIFIER,b,b[i] = a[i])<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,b[i] = a[i])<SUB>10</SUB>>", "69": "<(IDENTIFIER,Arrays,sort(b))<SUB>12</SUB>>", "71": "<(LOCAL,int count: int)<SUB>13</SUB>>", "73": "<(IDENTIFIER,count,int count = 0)<SUB>13</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,if (a[i] != b[i]),if (a[i] != b[i]))<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "89": "<(IDENTIFIER,i,a[i] != b[i])<SUB>15</SUB>>", "91": "<(IDENTIFIER,b,a[i] != b[i])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,count++)<SUB>16</SUB>>", "95": "<(CONTROL_STRUCTURE,if (count &lt;= 2),if (count &lt;= 2))<SUB>17</SUB>>", "97": "<(IDENTIFIER,count,count &lt;= 2)<SUB>17</SUB>>", "99": "<(println,System.out.println(&quot;YES&quot;))<SUB>18</SUB>>", "101": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>18</SUB>>", "103": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>18</SUB>>", "105": "<(println,System.out.println(&quot;NO&quot;))<SUB>20</SUB>>", "107": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>20</SUB>>", "109": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>20</SUB>>", "111": "<(MODIFIER,STATIC)>"}}