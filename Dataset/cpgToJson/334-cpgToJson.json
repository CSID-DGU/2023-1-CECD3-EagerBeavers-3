{"edges": [["19", "21"], ["19", "141"], ["19", "142"], ["19", "143"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "50"], ["21", "74"], ["21", "75"], ["21", "78"], ["21", "79"], ["21", "95"], ["21", "96"], ["21", "99"], ["21", "136"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "60"], ["50", "62"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "69"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "83"], ["79", "86"], ["79", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "115"], ["105", "126"], ["105", "134"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "132"], ["128", "133"], ["129", "130"], ["129", "131"], ["134", "135"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["22", "28"], ["25", "32"], ["30", "34"], ["34", "39"], ["37", "44"], ["42", "47"], ["47", "52"], ["75", "80"], ["96", "102"], ["136", "143"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["44", "42"], ["52", "59"], ["55", "66"], ["55", "75"], ["60", "59"], ["80", "83"], ["83", "92"], ["83", "96"], ["86", "83"], ["88", "86"], ["100", "112"], ["100", "139"], ["137", "136"], ["28", "26"], ["57", "55"], ["64", "71"], ["69", "60"], ["90", "88"], ["102", "100"], ["106", "122"], ["115", "129"], ["126", "134"], ["134", "102"], ["139", "137"], ["59", "57"], ["66", "64"], ["71", "69"], ["92", "90"], ["108", "106"], ["117", "115"], ["128", "126"], ["110", "108"], ["119", "117"], ["129", "128"], ["112", "110"], ["121", "119"], ["122", "121"], ["19", "24"], ["20", "143"], ["22", "143"], ["25", "143"], ["25", "143"], ["30", "143"], ["30", "143"], ["39", "143"], ["37", "143"], ["37", "143"], ["42", "143"], ["44", "143"], ["42", "143"], ["42", "143"], ["47", "143"], ["52", "143"], ["55", "143"], ["55", "143"], ["55", "143"], ["75", "143"], ["80", "143"], ["83", "143"], ["96", "143"], ["96", "143"], ["100", "143"], ["102", "143"], ["102", "143"], ["100", "143"], ["100", "143"], ["136", "143"], ["136", "143"], ["136", "143"], ["108", "143"], ["106", "143"], ["106", "143"], ["117", "143"], ["121", "143"], ["117", "143"], ["115", "143"], ["115", "143"], ["128", "143"], ["128", "143"], ["126", "143"], ["126", "143"], ["134", "143"], ["90", "143"], ["90", "143"], ["88", "143"], ["88", "143"], ["86", "143"], ["64", "143"], ["71", "143"], ["71", "143"], ["69", "143"], ["69", "143"], ["60", "143"], ["19", "20"], ["19", "22"], ["32", "30"], ["39", "37"], ["44", "42"], ["19", "47"], ["47", "75"], ["69", "75"], ["19", "75"], ["75", "96"], ["88", "96"], ["19", "96"], ["22", "25"], ["19", "25"], ["32", "34"], ["19", "34"], ["19", "52"], ["19", "80"], ["90", "88"], ["90", "88"], ["96", "136"], ["126", "136"], ["19", "136"], ["25", "32"], ["19", "32"], ["34", "39"], ["19", "39"], ["37", "44"], ["19", "44"], ["52", "55"], ["60", "55"], ["19", "55"], ["42", "55"], ["55", "60"], ["19", "60"], ["42", "64"], ["71", "69"], ["71", "69"], ["80", "83"], ["86", "83"], ["19", "83"], ["47", "83"], ["69", "83"], ["83", "86"], ["19", "86"], ["75", "88"], ["19", "88"], ["83", "100"], ["134", "100"], ["19", "100"], ["83", "100"], ["122", "100"], ["30", "100"], ["121", "100"], ["108", "106"], ["108", "106"], ["117", "115"], ["117", "115"], ["129", "126"], ["19", "126"], ["129", "126"], ["47", "69"], ["19", "69"], ["71", "90"], ["19", "90"], ["42", "90"], ["83", "102"], ["122", "102"], ["19", "102"], ["30", "102"], ["121", "102"], ["19", "106"], ["75", "106"], ["88", "106"], ["129", "106"], ["106", "115"], ["19", "115"], ["122", "134"], ["19", "134"], ["19", "71"], ["64", "71"], ["117", "108"], ["90", "108"], ["71", "108"], ["19", "108"], ["42", "108"], ["108", "117"], ["19", "117"], ["42", "117"], ["129", "128"], ["19", "128"], ["129", "128"], ["96", "129"], ["126", "129"], ["19", "129"], ["115", "129"], ["100", "112"], ["19", "112"], ["30", "112"], ["121", "112"], ["122", "121"], ["122", "121"], ["112", "121"], ["19", "121"], ["112", "122"], ["19", "122"], ["83", "122"], ["55", "60"], ["55", "64"], ["55", "57"], ["55", "66"], ["55", "69"], ["55", "59"], ["55", "71"], ["55", "55"], ["83", "92"], ["83", "90"], ["83", "83"], ["83", "88"], ["83", "86"], ["100", "115"], ["100", "122"], ["100", "128"], ["100", "102"], ["100", "119"], ["100", "121"], ["100", "106"], ["100", "112"], ["100", "129"], ["100", "134"], ["100", "126"], ["100", "100"], ["100", "110"], ["100", "117"], ["100", "108"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int len: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,len,int len = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,s,nextLine())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,String l = nextLine())<SUB>5</SUB>>", "39": "<(nextLine,nextLine())<SUB>5</SUB>>", "41": "<(LOCAL,char[] ca: char[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,ca,char[] ca = l.toCharArray())<SUB>6</SUB>>", "45": "<(IDENTIFIER,l,l.toCharArray())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int h = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int h = 0)<SUB>7</SUB>>", "51": "<(LOCAL,$idx0: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "55": "<(&lt;operator&gt;.lessThan,$idx0 &lt; ca.length)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,ca.length)<SUB>8</SUB>>", "59": "<(FIELD_IDENTIFIER,length,length)<SUB>8</SUB>>", "61": "<(IDENTIFIER,$idx0,$idx0++)>", "63": "<(LOCAL,c: char)<SUB>8</SUB>>", "65": "<(IDENTIFIER,c,&lt;empty&gt;)>", "67": "<(IDENTIFIER,ca,&lt;empty&gt;)>", "69": "<(&lt;operator&gt;.assignmentPlus,h += A(c))<SUB>9</SUB>>", "71": "<(A,A(c))<SUB>9</SUB>>", "73": "<(IDENTIFIER,c,A(c))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int cur = h)<SUB>10</SUB>>", "77": "<(IDENTIFIER,h,int cur = h)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; h); i++),for (i = 0; Some(i &lt; h); i++))<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,i = 0)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; h)<SUB>12</SUB>>", "85": "<(IDENTIFIER,h,i &lt; h)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "89": "<(IDENTIFIER,cur,cur -= A(ca[i]))<SUB>13</SUB>>", "91": "<(IDENTIFIER,this,A(ca[i]))<SUB>13</SUB>>", "93": "<(IDENTIFIER,ca,A(ca[i]))<SUB>13</SUB>>", "95": "<(LOCAL,int best: int)<SUB>14</SUB>>", "97": "<(IDENTIFIER,best,int best = cur)<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,while (i != h + len),while (i != h + len))<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,i != h + len)<SUB>15</SUB>>", "103": "<(IDENTIFIER,h,h + len)<SUB>15</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "107": "<(IDENTIFIER,cur,cur -= A(ca[i % len]))<SUB>16</SUB>>", "109": "<(IDENTIFIER,this,A(ca[i % len]))<SUB>16</SUB>>", "111": "<(IDENTIFIER,ca,A(ca[i % len]))<SUB>16</SUB>>", "113": "<(IDENTIFIER,i,i % len)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignmentPlus,cur += A(ca[(i - h) % len]))<SUB>17</SUB>>", "117": "<(A,A(ca[(i - h) % len]))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,ca[(i - h) % len])<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.modulo,(i - h) % len)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,i - h)<SUB>17</SUB>>", "125": "<(IDENTIFIER,len,(i - h) % len)<SUB>17</SUB>>", "127": "<(IDENTIFIER,best,best = best &gt; cur ? cur : best)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.greaterThan,best &gt; cur)<SUB>18</SUB>>", "131": "<(IDENTIFIER,cur,best &gt; cur)<SUB>18</SUB>>", "133": "<(IDENTIFIER,best,best &gt; cur ? cur : best)<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "139": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}