{"edges": [["17", "19"], ["17", "371"], ["17", "372"], ["17", "373"], ["19", "20"], ["19", "21"], ["19", "22"], ["19", "23"], ["19", "24"], ["19", "28"], ["19", "32"], ["19", "36"], ["19", "43"], ["19", "44"], ["19", "48"], ["19", "68"], ["19", "69"], ["19", "72"], ["19", "73"], ["19", "77"], ["19", "366"], ["19", "369"], ["24", "25"], ["24", "26"], ["26", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "66"], ["64", "65"], ["66", "67"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["77", "84"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "116"], ["89", "124"], ["89", "127"], ["89", "128"], ["89", "131"], ["89", "167"], ["89", "174"], ["89", "176"], ["89", "179"], ["89", "180"], ["89", "183"], ["89", "232"], ["89", "333"], ["89", "360"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "113"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["113", "114"], ["114", "115"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["142", "143"], ["142", "150"], ["142", "153"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "162"], ["154", "164"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "191"], ["183", "193"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["193", "217"], ["194", "195"], ["194", "206"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "234"], ["232", "241"], ["232", "244"], ["232", "246"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["241", "242"], ["241", "243"], ["244", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "252"], ["246", "255"], ["246", "256"], ["246", "259"], ["246", "312"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["259", "264"], ["259", "267"], ["259", "269"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["267", "268"], ["269", "270"], ["270", "271"], ["270", "278"], ["270", "290"], ["271", "272"], ["271", "277"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["278", "279"], ["278", "288"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "287"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["288", "289"], ["290", "291"], ["291", "292"], ["291", "299"], ["291", "310"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["299", "300"], ["299", "301"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "309"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["310", "311"], ["312", "313"], ["312", "316"], ["312", "328"], ["313", "314"], ["313", "315"], ["316", "317"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "321"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["328", "329"], ["329", "330"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "341"], ["333", "343"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["341", "342"], ["343", "344"], ["344", "345"], ["344", "350"], ["345", "346"], ["345", "349"], ["346", "347"], ["346", "348"], ["350", "351"], ["350", "355"], ["351", "352"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "359"], ["356", "357"], ["356", "358"], ["360", "361"], ["360", "362"], ["362", "363"], ["362", "364"], ["362", "365"], ["366", "367"], ["366", "368"], ["369", "370"], ["24", "30"], ["28", "34"], ["32", "39"], ["36", "46"], ["44", "50"], ["69", "75"], ["73", "81"], ["366", "369"], ["369", "373"], ["26", "24"], ["30", "28"], ["34", "32"], ["38", "36"], ["46", "44"], ["50", "53"], ["53", "60"], ["53", "69"], ["56", "53"], ["75", "73"], ["79", "84"], ["84", "91"], ["84", "366"], ["87", "84"], ["39", "38"], ["59", "56"], ["81", "79"], ["91", "96"], ["124", "128"], ["128", "133"], ["167", "174"], ["174", "176"], ["176", "180"], ["180", "185"], ["360", "87"], ["60", "64"], ["63", "59"], ["96", "99"], ["99", "109"], ["99", "119"], ["102", "99"], ["117", "87"], ["117", "124"], ["133", "136"], ["136", "146"], ["136", "168"], ["139", "136"], ["168", "171"], ["171", "167"], ["185", "188"], ["188", "196"], ["188", "237"], ["191", "188"], ["234", "241"], ["241", "248"], ["241", "335"], ["244", "241"], ["335", "338"], ["338", "346"], ["338", "362"], ["341", "338"], ["362", "360"], ["64", "66"], ["66", "63"], ["119", "117"], ["217", "191"], ["236", "234"], ["248", "252"], ["252", "256"], ["256", "261"], ["344", "341"], ["106", "114"], ["106", "102"], ["143", "151"], ["143", "156"], ["195", "207"], ["195", "219"], ["206", "219"], ["218", "224"], ["223", "217"], ["237", "236"], ["261", "264"], ["264", "274"], ["264", "313"], ["267", "264"], ["313", "323"], ["313", "330"], ["345", "352"], ["350", "344"], ["107", "106"], ["114", "102"], ["144", "143"], ["151", "139"], ["196", "202"], ["199", "195"], ["207", "213"], ["210", "206"], ["219", "218"], ["224", "228"], ["227", "223"], ["317", "244"], ["346", "345"], ["351", "356"], ["355", "350"], ["109", "107"], ["146", "144"], ["155", "162"], ["162", "164"], ["164", "139"], ["201", "199"], ["212", "210"], ["228", "227"], ["271", "283"], ["271", "295"], ["319", "317"], ["330", "244"], ["352", "351"], ["356", "355"], ["156", "159"], ["159", "155"], ["202", "201"], ["213", "212"], ["272", "271"], ["279", "288"], ["288", "267"], ["321", "319"], ["274", "272"], ["281", "279"], ["292", "305"], ["299", "310"], ["310", "267"], ["322", "325"], ["325", "321"], ["282", "281"], ["294", "292"], ["301", "299"], ["323", "322"], ["283", "282"], ["295", "294"], ["303", "301"], ["304", "303"], ["305", "304"], ["17", "26"], ["18", "373"], ["24", "373"], ["28", "373"], ["32", "373"], ["34", "373"], ["32", "373"], ["32", "373"], ["39", "373"], ["38", "373"], ["36", "373"], ["36", "373"], ["44", "373"], ["44", "373"], ["44", "373"], ["50", "373"], ["53", "373"], ["53", "373"], ["69", "373"], ["73", "373"], ["75", "373"], ["73", "373"], ["73", "373"], ["81", "373"], ["79", "373"], ["79", "373"], ["84", "373"], ["84", "373"], ["366", "373"], ["366", "373"], ["369", "373"], ["369", "373"], ["91", "373"], ["96", "373"], ["99", "373"], ["99", "373"], ["99", "373"], ["117", "373"], ["119", "373"], ["117", "373"], ["117", "373"], ["128", "373"], ["136", "373"], ["136", "373"], ["167", "373"], ["167", "373"], ["167", "373"], ["174", "373"], ["174", "373"], ["176", "373"], ["176", "373"], ["180", "373"], ["236", "373"], ["234", "373"], ["234", "373"], ["241", "373"], ["335", "373"], ["338", "373"], ["338", "373"], ["338", "373"], ["362", "373"], ["360", "373"], ["360", "373"], ["344", "373"], ["351", "373"], ["350", "373"], ["344", "373"], ["344", "373"], ["341", "373"], ["248", "373"], ["252", "373"], ["252", "373"], ["256", "373"], ["261", "373"], ["264", "373"], ["264", "373"], ["313", "373"], ["313", "373"], ["330", "373"], ["330", "373"], ["319", "373"], ["321", "373"], ["325", "373"], ["325", "373"], ["321", "373"], ["319", "373"], ["317", "373"], ["317", "373"], ["244", "373"], ["272", "373"], ["271", "373"], ["271", "373"], ["292", "373"], ["292", "373"], ["292", "373"], ["303", "373"], ["301", "373"], ["299", "373"], ["299", "373"], ["310", "373"], ["281", "373"], ["279", "373"], ["279", "373"], ["288", "373"], ["267", "373"], ["195", "373"], ["195", "373"], ["206", "373"], ["206", "373"], ["217", "373"], ["223", "373"], ["217", "373"], ["217", "373"], ["191", "373"], ["144", "373"], ["143", "373"], ["143", "373"], ["151", "373"], ["139", "373"], ["87", "373"], ["107", "373"], ["106", "373"], ["106", "373"], ["114", "373"], ["102", "373"], ["59", "373"], ["63", "373"], ["66", "373"], ["59", "373"], ["59", "373"], ["56", "373"], ["362", "373"], ["17", "18"], ["26", "24"], ["30", "28"], ["34", "32"], ["38", "36"], ["38", "36"], ["46", "44"], ["17", "69"], ["75", "73"], ["17", "50"], ["81", "79"], ["81", "79"], ["17", "366"], ["69", "366"], ["360", "366"], ["366", "369"], ["17", "369"], ["17", "26"], ["26", "30"], ["17", "30"], ["30", "34"], ["17", "34"], ["24", "38"], ["17", "38"], ["28", "38"], ["17", "46"], ["24", "46"], ["50", "53"], ["56", "53"], ["17", "53"], ["46", "53"], ["53", "56"], ["17", "56"], ["63", "59"], ["53", "75"], ["17", "75"], ["79", "84"], ["87", "84"], ["17", "84"], ["84", "87"], ["144", "87"], ["107", "87"], ["17", "87"], ["17", "91"], ["17", "124"], ["17", "128"], ["171", "167"], ["171", "167"], ["17", "176"], ["17", "180"], ["362", "360"], ["362", "360"], ["362", "360"], ["24", "39"], ["17", "39"], ["28", "39"], ["17", "81"], ["36", "81"], ["17", "96"], ["17", "133"], ["128", "174"], ["162", "174"], ["17", "174"], ["17", "185"], ["236", "234"], ["236", "234"], ["17", "335"], ["64", "63"], ["66", "63"], ["96", "99"], ["102", "99"], ["17", "99"], ["81", "99"], ["136", "99"], ["109", "102"], ["17", "102"], ["91", "117"], ["114", "117"], ["17", "117"], ["119", "117"], ["119", "117"], ["133", "136"], ["139", "136"], ["17", "136"], ["99", "136"], ["146", "139"], ["17", "139"], ["124", "171"], ["164", "171"], ["151", "171"], ["17", "171"], ["185", "188"], ["191", "188"], ["17", "188"], ["119", "188"], ["188", "191"], ["17", "191"], ["73", "217"], ["195", "217"], ["206", "217"], ["199", "217"], ["210", "217"], ["234", "241"], ["244", "241"], ["17", "241"], ["241", "244"], ["272", "244"], ["17", "244"], ["17", "248"], ["17", "252"], ["17", "256"], ["335", "338"], ["341", "338"], ["17", "338"], ["237", "338"], ["264", "338"], ["338", "341"], ["17", "341"], ["351", "344"], ["217", "344"], ["17", "362"], ["69", "362"], ["360", "362"], ["180", "362"], ["330", "362"], ["317", "362"], ["34", "64"], ["66", "64"], ["17", "64"], ["64", "66"], ["17", "66"], ["75", "119"], ["338", "119"], ["17", "119"], ["210", "206"], ["210", "206"], ["237", "236"], ["237", "236"], ["17", "236"], ["17", "261"], ["107", "106"], ["107", "106"], ["17", "106"], ["144", "143"], ["144", "143"], ["17", "143"], ["73", "195"], ["351", "195"], ["206", "195"], ["199", "195"], ["199", "195"], ["73", "223"], ["195", "223"], ["206", "223"], ["199", "223"], ["210", "223"], ["17", "237"], ["188", "237"], ["261", "264"], ["267", "264"], ["17", "264"], ["237", "264"], ["274", "267"], ["17", "267"], ["256", "313"], ["310", "313"], ["288", "313"], ["17", "313"], ["319", "317"], ["319", "317"], ["351", "350"], ["344", "350"], ["217", "350"], ["84", "107"], ["17", "107"], ["109", "107"], ["109", "107"], ["91", "114"], ["17", "114"], ["84", "144"], ["107", "144"], ["17", "144"], ["146", "144"], ["146", "144"], ["124", "151"], ["164", "151"], ["17", "151"], ["159", "155"], ["159", "155"], ["17", "164"], ["17", "199"], ["344", "199"], ["217", "199"], ["17", "210"], ["199", "210"], ["180", "317"], ["330", "317"], ["17", "317"], ["248", "330"], ["299", "330"], ["279", "330"], ["17", "330"], ["73", "351"], ["195", "351"], ["206", "351"], ["17", "109"], ["99", "109"], ["17", "146"], ["136", "146"], ["128", "162"], ["17", "162"], ["272", "271"], ["272", "271"], ["17", "271"], ["281", "279"], ["281", "279"], ["248", "319"], ["299", "319"], ["279", "319"], ["17", "319"], ["321", "319"], ["321", "319"], ["180", "330"], ["317", "330"], ["124", "159"], ["164", "159"], ["151", "159"], ["17", "159"], ["241", "272"], ["17", "272"], ["274", "272"], ["274", "272"], ["248", "279"], ["299", "279"], ["17", "279"], ["256", "288"], ["310", "288"], ["17", "288"], ["301", "299"], ["301", "299"], ["17", "321"], ["32", "321"], ["252", "321"], ["292", "321"], ["17", "274"], ["264", "274"], ["303", "281"], ["17", "281"], ["252", "292"], ["17", "292"], ["248", "299"], ["279", "299"], ["17", "299"], ["256", "310"], ["288", "310"], ["17", "310"], ["17", "322"], ["32", "322"], ["17", "325"], ["252", "325"], ["292", "325"], ["17", "301"], ["303", "301"], ["303", "301"], ["281", "303"], ["17", "303"], ["53", "60"], ["53", "59"], ["53", "66"], ["53", "53"], ["53", "64"], ["53", "56"], ["53", "63"], ["84", "84"], ["84", "117"], ["84", "96"], ["84", "119"], ["84", "87"], ["84", "91"], ["84", "99"], ["99", "102"], ["99", "109"], ["99", "107"], ["99", "99"], ["99", "106"], ["117", "167"], ["117", "188"], ["117", "136"], ["117", "128"], ["117", "338"], ["117", "168"], ["117", "174"], ["117", "362"], ["117", "180"], ["117", "236"], ["117", "237"], ["117", "176"], ["117", "241"], ["117", "360"], ["117", "335"], ["117", "133"], ["117", "185"], ["117", "171"], ["117", "234"], ["117", "124"], ["136", "136"], ["136", "146"], ["136", "144"], ["136", "139"], ["136", "143"], ["188", "188"], ["188", "196"], ["188", "228"], ["188", "195"], ["188", "224"], ["188", "202"], ["188", "201"], ["188", "217"], ["188", "199"], ["188", "227"], ["188", "191"], ["188", "223"], ["188", "218"], ["188", "219"], ["241", "256"], ["241", "264"], ["241", "241"], ["241", "244"], ["241", "261"], ["241", "252"], ["241", "313"], ["241", "248"], ["338", "338"], ["338", "356"], ["338", "355"], ["338", "346"], ["338", "351"], ["338", "341"], ["338", "352"], ["338", "345"], ["338", "350"], ["338", "344"], ["106", "114"], ["143", "162"], ["143", "159"], ["143", "151"], ["143", "164"], ["143", "155"], ["143", "156"], ["195", "213"], ["195", "206"], ["195", "207"], ["195", "212"], ["195", "210"], ["264", "272"], ["264", "264"], ["264", "274"], ["264", "267"], ["264", "271"], ["313", "322"], ["313", "317"], ["313", "323"], ["313", "321"], ["313", "319"], ["313", "325"], ["313", "330"], ["271", "292"], ["271", "283"], ["271", "281"], ["271", "288"], ["271", "304"], ["271", "310"], ["271", "305"], ["271", "282"], ["271", "279"], ["271", "301"], ["271", "295"], ["271", "299"], ["271", "294"], ["271", "303"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(LOCAL,int k: int)<SUB>2</SUB>>", "23": "<(LOCAL,int r: int)<SUB>2</SUB>>", "25": "<(IDENTIFIER,n,int n = nextInt())<SUB>2</SUB>>", "27": "<(IDENTIFIER,this,nextInt())<SUB>2</SUB>>", "29": "<(IDENTIFIER,k,int k = nextInt())<SUB>2</SUB>>", "31": "<(IDENTIFIER,this,nextInt())<SUB>2</SUB>>", "33": "<(IDENTIFIER,A,int A = nextInt())<SUB>2</SUB>>", "35": "<(IDENTIFIER,this,nextInt())<SUB>2</SUB>>", "37": "<(IDENTIFIER,r,int r = n + k - 1)<SUB>2</SUB>>", "39": "<(&lt;operator&gt;.addition,n + k)<SUB>2</SUB>>", "41": "<(IDENTIFIER,k,n + k)<SUB>2</SUB>>", "43": "<(LOCAL,int[][] s: int[][])<SUB>3</SUB>>", "45": "<(IDENTIFIER,s,int[][] s = new int[n][])<SUB>3</SUB>>", "47": "<(IDENTIFIER,n,new int[n][])<SUB>3</SUB>>", "49": "<(LOCAL,int i: int)<SUB>4</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>4</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>4</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>4</SUB>>", "59": "<(&lt;operator&gt;.assignment,s[i] = new int[] { nextInt(), nextInt() })<SUB>5</SUB>>", "61": "<(IDENTIFIER,s,s[i] = new int[] { nextInt(), nextInt() })<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.arrayInitializer,new int[] { nextInt(), nextInt() })<SUB>5</SUB>>", "65": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "67": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "69": "<(&lt;operator&gt;.assignment,double max = 0)<SUB>7</SUB>>", "71": "<(LITERAL,0,double max = 0)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[] prb = new int[n])<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[n])>", "77": "<(CONTROL_STRUCTURE,for (int u = (1 &lt;&lt; r); Some(u &gt;= 0); u--),for (int u = (1 &lt;&lt; r); Some(u &gt;= 0); u--))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,int u = 1 &lt;&lt; r)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; r)<SUB>9</SUB>>", "83": "<(IDENTIFIER,r,1 &lt;&lt; r)<SUB>9</SUB>>", "85": "<(IDENTIFIER,u,u &gt;= 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.postDecrement,u--)<SUB>9</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.assignment,int ones = 0)<SUB>11</SUB>>", "93": "<(LITERAL,0,int ones = 0)<SUB>11</SUB>>", "95": "<(LOCAL,int i: int)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>12</SUB>>", "101": "<(IDENTIFIER,r,i &lt; r)<SUB>12</SUB>>", "103": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "105": "<(CONTROL_STRUCTURE,if ((u &amp; (1 &lt;&lt; i)) != 0),if ((u &amp; (1 &lt;&lt; i)) != 0))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.and,u &amp; (1 &lt;&lt; i))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>13</SUB>>", "111": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>13</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "115": "<(IDENTIFIER,ones,ones++)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.notEquals,ones != n - 1)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "121": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "123": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>18</SUB>>", "125": "<(IDENTIFIER,ones,ones = 0)<SUB>21</SUB>>", "127": "<(LOCAL,int p: int)<SUB>22</SUB>>", "129": "<(IDENTIFIER,p,int p = 0)<SUB>22</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "135": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "137": "<(IDENTIFIER,i,i &lt; r)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.equals,(u &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "145": "<(IDENTIFIER,u,u &amp; (1 &lt;&lt; i))<SUB>24</SUB>>", "147": "<(LITERAL,1,1 &lt;&lt; i)<SUB>24</SUB>>", "149": "<(LITERAL,0,(u &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,ones++)<SUB>25</SUB>>", "153": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.assignment,prb[p] = ones * 10)<SUB>27</SUB>>", "157": "<(IDENTIFIER,prb,prb[p] = ones * 10)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.multiplication,ones * 10)<SUB>27</SUB>>", "161": "<(LITERAL,10,ones * 10)<SUB>27</SUB>>", "163": "<(IDENTIFIER,p,p++)<SUB>28</SUB>>", "165": "<(IDENTIFIER,ones,ones = 0)<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.assignment,prb[p] = ones * 10)<SUB>32</SUB>>", "169": "<(IDENTIFIER,prb,prb[p] = ones * 10)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.multiplication,ones * 10)<SUB>32</SUB>>", "173": "<(LITERAL,10,ones * 10)<SUB>32</SUB>>", "175": "<(IDENTIFIER,p,p++)<SUB>33</SUB>>", "177": "<(IDENTIFIER,ones,ones = 0)<SUB>34</SUB>>", "179": "<(LOCAL,double sum: double)<SUB>35</SUB>>", "181": "<(IDENTIFIER,sum,double sum = 0)<SUB>35</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>36</SUB>>", "185": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>36</SUB>>", "187": "<(LITERAL,0,int i = 0)<SUB>36</SUB>>", "189": "<(IDENTIFIER,i,i &lt; n)<SUB>36</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,i++)<SUB>36</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "195": "<(&lt;operator&gt;.greaterThan,prb[i] &gt; 100 - s[i][1])<SUB>37</SUB>>", "197": "<(IDENTIFIER,prb,prb[i] &gt; 100 - s[i][1])<SUB>37</SUB>>", "199": "<(&lt;operator&gt;.subtraction,100 - s[i][1])<SUB>37</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,s[i][1])<SUB>37</SUB>>", "203": "<(IDENTIFIER,s,100 - s[i][1])<SUB>37</SUB>>", "205": "<(LITERAL,1,100 - s[i][1])<SUB>37</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,prb[i])<SUB>38</SUB>>", "209": "<(IDENTIFIER,i,prb[i] = 100 - s[i][1])<SUB>38</SUB>>", "211": "<(LITERAL,100,100 - s[i][1])<SUB>38</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>38</SUB>>", "215": "<(IDENTIFIER,i,100 - s[i][1])<SUB>38</SUB>>", "217": "<(&lt;operator&gt;.assignment,s[i][1] = prb[i] + s[i][1])<SUB>39</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>39</SUB>>", "221": "<(IDENTIFIER,i,s[i][1] = prb[i] + s[i][1])<SUB>39</SUB>>", "223": "<(&lt;operator&gt;.addition,prb[i] + s[i][1])<SUB>39</SUB>>", "225": "<(IDENTIFIER,prb,prb[i] + s[i][1])<SUB>39</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,s[i][1])<SUB>39</SUB>>", "229": "<(IDENTIFIER,s,prb[i] + s[i][1])<SUB>39</SUB>>", "231": "<(LITERAL,1,prb[i] + s[i][1])<SUB>39</SUB>>", "233": "<(LOCAL,int i: int)<SUB>41</SUB>>", "235": "<(IDENTIFIER,i,int i = (1 &lt;&lt; n) - 1)<SUB>41</SUB>>", "237": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>41</SUB>>", "239": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>41</SUB>>", "241": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>41</SUB>>", "243": "<(LITERAL,0,i &gt;= 0)<SUB>41</SUB>>", "245": "<(IDENTIFIER,i,i--)<SUB>41</SUB>>", "247": "<(LOCAL,double prob: double)<SUB>42</SUB>>", "249": "<(IDENTIFIER,prob,double prob = 1)<SUB>42</SUB>>", "251": "<(LOCAL,int lvl: int)<SUB>43</SUB>>", "253": "<(IDENTIFIER,lvl,int lvl = 0)<SUB>43</SUB>>", "255": "<(LOCAL,int kill: int)<SUB>44</SUB>>", "257": "<(IDENTIFIER,kill,int kill = 0)<SUB>44</SUB>>", "259": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>45</SUB>>", "261": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>45</SUB>>", "263": "<(LITERAL,0,int j = 0)<SUB>45</SUB>>", "265": "<(IDENTIFIER,j,j &lt; n)<SUB>45</SUB>>", "267": "<(&lt;operator&gt;.postIncrement,j++)<SUB>45</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "271": "<(&lt;operator&gt;.notEquals,(i &amp; (1 &lt;&lt; j)) != 0)<SUB>46</SUB>>", "273": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; j))<SUB>46</SUB>>", "275": "<(LITERAL,1,1 &lt;&lt; j)<SUB>46</SUB>>", "277": "<(LITERAL,0,(i &amp; (1 &lt;&lt; j)) != 0)<SUB>46</SUB>>", "279": "<(&lt;operator&gt;.assignmentMultiplication,prob *= s[j][1] / 100.0)<SUB>47</SUB>>", "281": "<(&lt;operator&gt;.division,s[j][1] / 100.0)<SUB>47</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>47</SUB>>", "285": "<(IDENTIFIER,j,s[j][1] / 100.0)<SUB>47</SUB>>", "287": "<(LITERAL,100.0,s[j][1] / 100.0)<SUB>47</SUB>>", "289": "<(IDENTIFIER,kill,kill--)<SUB>48</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "293": "<(IDENTIFIER,lvl,lvl += s[j][0])<SUB>50</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>50</SUB>>", "297": "<(IDENTIFIER,j,lvl += s[j][0])<SUB>50</SUB>>", "299": "<(&lt;operator&gt;.assignmentMultiplication,prob *= 1 - s[j][1] / 100.0)<SUB>51</SUB>>", "301": "<(&lt;operator&gt;.subtraction,1 - s[j][1] / 100.0)<SUB>51</SUB>>", "303": "<(&lt;operator&gt;.division,s[j][1] / 100.0)<SUB>51</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>51</SUB>>", "307": "<(IDENTIFIER,j,s[j][1] / 100.0)<SUB>51</SUB>>", "309": "<(LITERAL,100.0,s[j][1] / 100.0)<SUB>51</SUB>>", "311": "<(IDENTIFIER,kill,kill++)<SUB>52</SUB>>", "313": "<(&lt;operator&gt;.greaterEqualsThan,kill &gt;= 0)<SUB>55</SUB>>", "315": "<(LITERAL,0,kill &gt;= 0)<SUB>55</SUB>>", "317": "<(&lt;operator&gt;.assignmentPlus,sum += prob * ((double) A / (A + lvl)))<SUB>56</SUB>>", "319": "<(&lt;operator&gt;.multiplication,prob * ((double) A / (A + lvl)))<SUB>56</SUB>>", "321": "<(&lt;operator&gt;.division,(double) A / (A + lvl))<SUB>56</SUB>>", "323": "<(TYPE_REF,double,double)<SUB>56</SUB>>", "325": "<(&lt;operator&gt;.addition,A + lvl)<SUB>56</SUB>>", "327": "<(IDENTIFIER,lvl,A + lvl)<SUB>56</SUB>>", "329": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "331": "<(IDENTIFIER,sum,sum += prob)<SUB>58</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>61</SUB>>", "335": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>61</SUB>>", "337": "<(LITERAL,0,int i = 0)<SUB>61</SUB>>", "339": "<(IDENTIFIER,i,i &lt; n)<SUB>61</SUB>>", "341": "<(&lt;operator&gt;.postIncrement,i++)<SUB>61</SUB>>", "343": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,s[i][1])<SUB>62</SUB>>", "347": "<(IDENTIFIER,s,s[i][1] = -prb[i] + s[i][1])<SUB>62</SUB>>", "349": "<(LITERAL,1,s[i][1] = -prb[i] + s[i][1])<SUB>62</SUB>>", "351": "<(&lt;operator&gt;.minus,-prb[i])<SUB>62</SUB>>", "353": "<(IDENTIFIER,prb,-prb[i])<SUB>62</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,s[i][1])<SUB>62</SUB>>", "357": "<(IDENTIFIER,s,-prb[i] + s[i][1])<SUB>62</SUB>>", "359": "<(LITERAL,1,-prb[i] + s[i][1])<SUB>62</SUB>>", "361": "<(IDENTIFIER,max,max = Math.max(max, sum))<SUB>64</SUB>>", "363": "<(IDENTIFIER,Math,Math.max(max, sum))<SUB>64</SUB>>", "365": "<(IDENTIFIER,sum,Math.max(max, sum))<SUB>64</SUB>>", "367": "<(IDENTIFIER,out,println(max))<SUB>66</SUB>>", "369": "<(flush,flush())<SUB>67</SUB>>", "371": "<(MODIFIER,PUBLIC)>", "373": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}