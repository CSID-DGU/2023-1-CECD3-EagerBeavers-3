{"edges": [["21", "23"], ["21", "143"], ["21", "144"], ["21", "145"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "72"], ["23", "73"], ["23", "76"], ["23", "131"], ["23", "134"], ["23", "139"], ["23", "141"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "88"], ["76", "90"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "97"], ["90", "98"], ["90", "105"], ["90", "106"], ["90", "115"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "119"], ["115", "122"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["122", "123"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["141", "142"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "55"], ["73", "78"], ["131", "137"], ["134", "139"], ["139", "141"], ["141", "145"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["55", "62"], ["58", "67"], ["58", "73"], ["63", "62"], ["78", "86"], ["81", "94"], ["81", "131"], ["88", "86"], ["135", "134"], ["30", "28"], ["37", "35"], ["60", "58"], ["66", "63"], ["83", "81"], ["92", "102"], ["98", "110"], ["106", "116"], ["137", "135"], ["62", "60"], ["67", "70"], ["70", "66"], ["84", "83"], ["94", "92"], ["100", "98"], ["108", "106"], ["116", "120"], ["116", "124"], ["86", "84"], ["102", "100"], ["109", "108"], ["120", "88"], ["110", "109"], ["124", "128"], ["124", "88"], ["128", "88"], ["21", "26"], ["22", "145"], ["24", "145"], ["27", "145"], ["27", "145"], ["31", "145"], ["34", "145"], ["39", "145"], ["44", "145"], ["46", "145"], ["44", "145"], ["44", "145"], ["49", "145"], ["51", "145"], ["49", "145"], ["49", "145"], ["58", "145"], ["73", "145"], ["78", "145"], ["81", "145"], ["83", "145"], ["81", "145"], ["81", "145"], ["131", "145"], ["134", "145"], ["134", "145"], ["134", "145"], ["139", "145"], ["141", "145"], ["141", "145"], ["92", "145"], ["92", "145"], ["98", "145"], ["98", "145"], ["110", "145"], ["110", "145"], ["109", "145"], ["108", "145"], ["106", "145"], ["106", "145"], ["116", "145"], ["116", "145"], ["116", "145"], ["124", "145"], ["124", "145"], ["124", "145"], ["120", "145"], ["88", "145"], ["66", "145"], ["70", "145"], ["66", "145"], ["66", "145"], ["63", "145"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["21", "73"], ["21", "131"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["21", "78"], ["73", "131"], ["128", "131"], ["120", "131"], ["34", "134"], ["131", "134"], ["21", "134"], ["34", "139"], ["21", "139"], ["139", "141"], ["21", "141"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["55", "58"], ["63", "58"], ["21", "58"], ["49", "58"], ["58", "63"], ["21", "63"], ["70", "66"], ["78", "81"], ["88", "81"], ["21", "81"], ["83", "81"], ["83", "81"], ["21", "88"], ["81", "88"], ["49", "92"], ["66", "92"], ["49", "98"], ["108", "106"], ["108", "106"], ["49", "83"], ["58", "83"], ["21", "83"], ["46", "70"], ["21", "70"], ["109", "108"], ["109", "108"], ["21", "108"], ["106", "116"], ["21", "116"], ["44", "116"], ["124", "116"], ["81", "102"], ["21", "102"], ["110", "109"], ["110", "109"], ["21", "109"], ["73", "120"], ["128", "120"], ["21", "120"], ["98", "110"], ["21", "110"], ["92", "110"], ["116", "124"], ["21", "124"], ["116", "124"], ["21", "128"], ["73", "128"], ["120", "128"], ["58", "60"], ["58", "66"], ["58", "67"], ["58", "58"], ["58", "70"], ["58", "63"], ["58", "62"], ["81", "94"], ["81", "98"], ["81", "116"], ["81", "81"], ["81", "84"], ["81", "102"], ["81", "92"], ["81", "106"], ["81", "83"], ["81", "100"], ["81", "88"], ["81", "110"], ["81", "108"], ["81", "109"], ["81", "86"], ["116", "120"], ["116", "124"], ["124", "128"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int d: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,d,int d = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] hotels = new int[n])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; hotels.length); i++),for (int i = 0; Some(i &lt; hotels.length); i++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i &lt; hotels.length)<SUB>7</SUB>>", "61": "<(IDENTIFIER,hotels,i &lt; hotels.length)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,hotels[i])<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,hotels[i] = nextInt())<SUB>8</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>10</SUB>>", "75": "<(LITERAL,0,int count = 0)<SUB>10</SUB>>", "77": "<(LOCAL,int i: int)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; hotels.length - 1)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.subtraction,hotels.length - 1)<SUB>11</SUB>>", "85": "<(IDENTIFIER,hotels,hotels.length - 1)<SUB>11</SUB>>", "87": "<(LITERAL,1,hotels.length - 1)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "91": "<(LOCAL,int one: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,one,int one = hotels[i])<SUB>12</SUB>>", "95": "<(IDENTIFIER,hotels,int one = hotels[i])<SUB>12</SUB>>", "97": "<(LOCAL,int two: int)<SUB>13</SUB>>", "99": "<(IDENTIFIER,two,int two = hotels[i + 1])<SUB>13</SUB>>", "101": "<(IDENTIFIER,hotels,int two = hotels[i + 1])<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "105": "<(LOCAL,double mid: double)<SUB>14</SUB>>", "107": "<(IDENTIFIER,mid,double mid = (two - one) * 1.0 / 2.0)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.multiplication,(two - one) * 1.0)<SUB>14</SUB>>", "111": "<(IDENTIFIER,two,two - one)<SUB>14</SUB>>", "113": "<(LITERAL,1.0,(two - one) * 1.0)<SUB>14</SUB>>", "115": "<(CONTROL_STRUCTURE,if (mid == d),if (mid == d))<SUB>15</SUB>>", "117": "<(IDENTIFIER,mid,mid == d)<SUB>15</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "121": "<(IDENTIFIER,count,count++)<SUB>16</SUB>>", "123": "<(CONTROL_STRUCTURE,if (mid &gt; d),if (mid &gt; d))<SUB>19</SUB>>", "125": "<(IDENTIFIER,mid,mid &gt; d)<SUB>19</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "129": "<(IDENTIFIER,count,count += 2)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.assignmentPlus,count += 2)<SUB>26</SUB>>", "133": "<(LITERAL,2,count += 2)<SUB>26</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "139": "<(flush,flush())<SUB>30</SUB>>", "141": "<(close,close())<SUB>31</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}