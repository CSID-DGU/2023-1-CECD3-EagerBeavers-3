{"edges": [["19", "21"], ["19", "161"], ["19", "162"], ["19", "163"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "61"], ["21", "62"], ["21", "66"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "147"], ["76", "154"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "97"], ["81", "109"], ["81", "111"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["85", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["99", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["121", "124"], ["124", "125"], ["124", "144"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["62", "68"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "64"], ["52", "49"], ["64", "62"], ["68", "71"], ["71", "163"], ["71", "78"], ["74", "71"], ["28", "26"], ["55", "52"], ["78", "89"], ["147", "157"], ["154", "74"], ["56", "59"], ["59", "55"], ["83", "103"], ["97", "114"], ["97", "150"], ["109", "103"], ["148", "151"], ["151", "147"], ["155", "154"], ["85", "83"], ["99", "97"], ["150", "148"], ["157", "155"], ["88", "85"], ["102", "99"], ["113", "129"], ["113", "109"], ["89", "93"], ["92", "88"], ["103", "106"], ["106", "102"], ["114", "113"], ["119", "109"], ["93", "94"], ["94", "92"], ["121", "119"], ["124", "121"], ["125", "144"], ["144", "124"], ["127", "125"], ["128", "136"], ["133", "127"], ["129", "128"], ["134", "141"], ["139", "133"], ["136", "134"], ["141", "139"], ["19", "24"], ["20", "163"], ["22", "163"], ["25", "163"], ["25", "163"], ["30", "163"], ["35", "163"], ["37", "163"], ["35", "163"], ["35", "163"], ["40", "163"], ["40", "163"], ["40", "163"], ["62", "163"], ["62", "163"], ["62", "163"], ["68", "163"], ["71", "163"], ["71", "163"], ["71", "163"], ["74", "163"], ["52", "163"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["64", "62"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "68"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["19", "64"], ["68", "71"], ["74", "71"], ["19", "71"], ["49", "71"], ["71", "74"], ["19", "74"], ["35", "78"], ["106", "78"], ["19", "78"], ["19", "154"], ["78", "154"], ["119", "154"], ["85", "83"], ["85", "83"], ["85", "83"], ["78", "147"], ["119", "147"], ["19", "147"], ["37", "59"], ["19", "59"], ["83", "97"], ["109", "97"], ["19", "97"], ["99", "97"], ["99", "97"], ["99", "97"], ["97", "109"], ["139", "109"], ["19", "109"], ["78", "151"], ["119", "151"], ["19", "151"], ["99", "85"], ["19", "85"], ["88", "85"], ["88", "85"], ["85", "99"], ["121", "99"], ["19", "99"], ["40", "99"], ["88", "99"], ["139", "99"], ["106", "99"], ["106", "99"], ["40", "88"], ["55", "88"], ["139", "88"], ["19", "88"], ["94", "88"], ["94", "88"], ["40", "102"], ["88", "102"], ["139", "102"], ["106", "102"], ["106", "102"], ["62", "113"], ["19", "113"], ["121", "119"], ["121", "119"], ["121", "119"], ["19", "92"], ["94", "92"], ["94", "92"], ["19", "106"], ["94", "106"], ["128", "106"], ["19", "94"], ["35", "94"], ["106", "94"], ["125", "121"], ["19", "121"], ["78", "121"], ["119", "121"], ["125", "121"], ["62", "121"], ["113", "121"], ["125", "124"], ["125", "124"], ["62", "124"], ["113", "124"], ["99", "125"], ["19", "125"], ["127", "125"], ["127", "125"], ["128", "127"], ["128", "127"], ["133", "127"], ["129", "128"], ["129", "128"], ["19", "128"], ["134", "133"], ["134", "133"], ["139", "133"], ["139", "133"], ["19", "129"], ["106", "129"], ["97", "134"], ["19", "134"], ["40", "134"], ["88", "134"], ["139", "134"], ["134", "139"], ["19", "139"], ["40", "139"], ["134", "139"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "55"], ["71", "94"], ["71", "89"], ["71", "154"], ["71", "99"], ["71", "102"], ["71", "85"], ["71", "103"], ["71", "150"], ["71", "151"], ["71", "74"], ["71", "92"], ["71", "106"], ["71", "157"], ["71", "97"], ["71", "93"], ["71", "148"], ["71", "83"], ["71", "71"], ["71", "147"], ["71", "88"], ["71", "155"], ["71", "78"], ["97", "113"], ["97", "99"], ["97", "102"], ["97", "114"], ["97", "103"], ["97", "106"], ["97", "97"], ["97", "109"], ["113", "141"], ["113", "136"], ["113", "128"], ["113", "119"], ["113", "121"], ["113", "144"], ["113", "129"], ["113", "134"], ["113", "127"], ["113", "139"], ["113", "124"], ["113", "125"], ["113", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int numD: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,numD,int numD = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,double rad = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] xC: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,xC,int[] xC = new int[numD])<SUB>5</SUB>>", "43": "<(IDENTIFIER,numD,new int[numD])<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; numD)<SUB>6</SUB>>", "51": "<(IDENTIFIER,numD,i &lt; numD)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,xC[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,xC,xC[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(LOCAL,double[] maxY: double[])<SUB>9</SUB>>", "63": "<(IDENTIFIER,maxY,double[] maxY = new double[1001])<SUB>9</SUB>>", "65": "<(LITERAL,1001,new double[1001])<SUB>9</SUB>>", "67": "<(LOCAL,int i: int)<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; numD)<SUB>10</SUB>>", "73": "<(IDENTIFIER,numD,i &lt; numD)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "77": "<(LOCAL,double h: double)<SUB>11</SUB>>", "79": "<(IDENTIFIER,h,double h = rad)<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = Math.max(1, xC[i] - (int) (2 * rad)); Some(j &lt;= Math.min(1000, xC[i] + 2 * rad)); j++),for (int j = Math.max(1, xC[i] - (int) (2 * rad)); Some(j &lt;= Math.min(1000, xC[i] + 2 * rad)); j++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = Math.max(1, xC[i] - (int) (2 * rad)))<SUB>12</SUB>>", "85": "<(max,Math.max(1, xC[i] - (int) (2 * rad)))<SUB>12</SUB>>", "87": "<(LITERAL,1,Math.max(1, xC[i] - (int) (2 * rad)))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,xC[i])<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,xC[i] - (int) (2 * rad))<SUB>12</SUB>>", "93": "<(TYPE_REF,int,int)<SUB>12</SUB>>", "95": "<(LITERAL,2,2 * rad)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= Math.min(1000, xC[i] + 2 * rad))<SUB>12</SUB>>", "99": "<(min,Math.min(1000, xC[i] + 2 * rad))<SUB>12</SUB>>", "101": "<(LITERAL,1000,Math.min(1000, xC[i] + 2 * rad))<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,xC[i])<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,xC[i] + 2 * rad)<SUB>12</SUB>>", "107": "<(LITERAL,2,2 * rad)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.greaterThan,maxY[j] &gt; 0)<SUB>13</SUB>>", "115": "<(IDENTIFIER,maxY,maxY[j] &gt; 0)<SUB>13</SUB>>", "117": "<(LITERAL,0,maxY[j] &gt; 0)<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.assignment,h = Math.max(h, Math.sqrt(4 * rad * rad - (j - xC[i]) * (j - xC[i])) + maxY[j]))<SUB>14</SUB>>", "121": "<(max,Math.max(h, Math.sqrt(4 * rad * rad - (j - xC[i]) * (j - xC[i])) + maxY[j]))<SUB>14</SUB>>", "123": "<(IDENTIFIER,h,Math.max(h, Math.sqrt(4 * rad * rad - (j - xC[i]) * (j - xC[i])) + maxY[j]))<SUB>14</SUB>>", "125": "<(sqrt,Math.sqrt(4 * rad * rad - (j - xC[i]) * (j - xC[i])))<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.subtraction,4 * rad * rad - (j - xC[i]) * (j - xC[i]))<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.multiplication,4 * rad)<SUB>14</SUB>>", "131": "<(IDENTIFIER,rad,4 * rad)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.multiplication,(j - xC[i]) * (j - xC[i]))<SUB>14</SUB>>", "135": "<(IDENTIFIER,j,j - xC[i])<SUB>14</SUB>>", "137": "<(IDENTIFIER,xC,j - xC[i])<SUB>14</SUB>>", "139": "<(&lt;operator&gt;.subtraction,j - xC[i])<SUB>14</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,xC[i])<SUB>14</SUB>>", "143": "<(IDENTIFIER,i,j - xC[i])<SUB>14</SUB>>", "145": "<(IDENTIFIER,maxY,Math.sqrt(4 * rad * rad - (j - xC[i]) * (j - xC[i])) + maxY[j])<SUB>14</SUB>>", "147": "<(print,System.out.print(h + &quot; &quot;))<SUB>17</SUB>>", "149": "<(IDENTIFIER,System,System.out.print(h + &quot; &quot;))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.addition,h + &quot; &quot;)<SUB>17</SUB>>", "153": "<(LITERAL,&quot; &quot;,h + &quot; &quot;)<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,maxY[xC[i]])<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,xC[i])<SUB>18</SUB>>", "159": "<(IDENTIFIER,i,maxY[xC[i]] = h)<SUB>18</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}