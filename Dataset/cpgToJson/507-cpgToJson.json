{"edges": [["21", "22"], ["21", "23"], ["21", "146"], ["21", "147"], ["21", "148"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "48"], ["23", "49"], ["23", "54"], ["23", "55"], ["23", "60"], ["23", "61"], ["23", "64"], ["23", "79"], ["23", "119"], ["23", "129"], ["23", "139"], ["23", "142"], ["23", "144"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "74"], ["68", "76"], ["68", "78"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "101"], ["89", "112"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["24", "30"], ["27", "33"], ["31", "34"], ["34", "38"], ["36", "43"], ["41", "45"], ["45", "53"], ["49", "59"], ["55", "61"], ["61", "65"], ["139", "142"], ["142", "144"], ["144", "148"], ["26", "24"], ["28", "27"], ["33", "31"], ["38", "36"], ["43", "41"], ["51", "49"], ["57", "55"], ["65", "71"], ["65", "81"], ["81", "84"], ["84", "92"], ["84", "120"], ["87", "84"], ["120", "126"], ["120", "130"], ["130", "136"], ["130", "139"], ["30", "28"], ["53", "51"], ["59", "57"], ["69", "74"], ["74", "76"], ["76", "78"], ["78", "148"], ["112", "87"], ["124", "130"], ["134", "139"], ["71", "69"], ["91", "98"], ["91", "103"], ["96", "103"], ["102", "109"], ["102", "116"], ["107", "116"], ["114", "112"], ["126", "124"], ["136", "134"], ["92", "91"], ["98", "96"], ["103", "102"], ["109", "107"], ["116", "114"], ["21", "26"], ["78", "148"], ["22", "148"], ["24", "148"], ["27", "148"], ["27", "148"], ["31", "148"], ["34", "148"], ["36", "148"], ["36", "148"], ["41", "148"], ["41", "148"], ["45", "148"], ["45", "148"], ["45", "148"], ["49", "148"], ["49", "148"], ["49", "148"], ["55", "148"], ["55", "148"], ["55", "148"], ["61", "148"], ["61", "148"], ["65", "148"], ["65", "148"], ["69", "148"], ["69", "148"], ["74", "148"], ["76", "148"], ["76", "148"], ["114", "148"], ["21", "22"], ["21", "24"], ["21", "31"], ["38", "36"], ["43", "41"], ["21", "61"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["38", "45"], ["21", "45"], ["41", "45"], ["21", "81"], ["27", "139"], ["21", "139"], ["61", "139"], ["124", "139"], ["134", "139"], ["112", "139"], ["139", "142"], ["21", "142"], ["142", "144"], ["21", "144"], ["34", "38"], ["21", "38"], ["36", "43"], ["21", "43"], ["43", "65"], ["21", "65"], ["21", "78"], ["81", "84"], ["87", "84"], ["21", "84"], ["65", "84"], ["84", "87"], ["21", "87"], ["114", "112"], ["114", "112"], ["49", "120"], ["91", "120"], ["96", "120"], ["21", "120"], ["126", "124"], ["126", "124"], ["55", "130"], ["102", "130"], ["107", "130"], ["21", "130"], ["136", "134"], ["136", "134"], ["27", "69"], ["21", "69"], ["45", "69"], ["69", "74"], ["21", "74"], ["74", "76"], ["21", "76"], ["45", "96"], ["91", "96"], ["45", "107"], ["102", "107"], ["61", "112"], ["21", "112"], ["61", "124"], ["112", "124"], ["21", "124"], ["61", "134"], ["124", "134"], ["112", "134"], ["21", "134"], ["45", "91"], ["114", "91"], ["49", "91"], ["96", "91"], ["21", "91"], ["45", "102"], ["91", "102"], ["55", "102"], ["107", "102"], ["21", "102"], ["21", "114"], ["45", "114"], ["102", "114"], ["21", "126"], ["120", "126"], ["21", "136"], ["130", "136"], ["65", "120"], ["65", "81"], ["65", "84"], ["65", "69"], ["65", "142"], ["65", "74"], ["65", "76"], ["65", "144"], ["65", "71"], ["65", "130"], ["65", "139"], ["65", "78"], ["84", "116"], ["84", "84"], ["84", "102"], ["84", "114"], ["84", "103"], ["84", "92"], ["84", "87"], ["84", "91"], ["84", "112"], ["120", "126"], ["120", "124"], ["130", "136"], ["130", "134"], ["91", "96"], ["91", "98"], ["102", "107"], ["102", "109"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>14</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>14</SUB>>", "3": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>14</SUB>>", "29": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>14</SUB>>", "6": "<(LOCAL,FastReader fr: ANY)<SUB>15</SUB>>", "32": "<(IDENTIFIER,fr,ANY fr = new FastReader())<SUB>15</SUB>>", "34": "<(&lt;init&gt;,new FastReader())<SUB>15</SUB>>", "35": "<(LOCAL,int n: int)<SUB>16</SUB>>", "37": "<(IDENTIFIER,n,int n = i())<SUB>16</SUB>>", "39": "<(IDENTIFIER,fr,i())<SUB>16</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>17</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(scanIntArr,scanIntArr(arr))<SUB>18</SUB>>", "47": "<(IDENTIFIER,arr,scanIntArr(arr))<SUB>18</SUB>>", "49": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>19</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>19</SUB>>", "53": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>19</SUB>>", "55": "<(&lt;operator&gt;.assignment,int max = Integer.MIN_VALUE)<SUB>20</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,Integer.MIN_VALUE)<SUB>20</SUB>>", "59": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>20</SUB>>", "61": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>21</SUB>>", "63": "<(LITERAL,0,long sum = 0)<SUB>21</SUB>>", "65": "<(&lt;operator&gt;.equals,n == 1)<SUB>22</SUB>>", "67": "<(LITERAL,1,n == 1)<SUB>22</SUB>>", "69": "<(println,println(arr[0]))<SUB>24</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>24</SUB>>", "73": "<(LITERAL,0,println(arr[0]))<SUB>24</SUB>>", "75": "<(IDENTIFIER,pw,flush())<SUB>25</SUB>>", "77": "<(IDENTIFIER,pw,close())<SUB>26</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>29</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>29</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>29</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>29</SUB>>", "87": "<(&lt;operator&gt;.preIncrement,++i)<SUB>29</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "91": "<(&lt;operator&gt;.lessThan,arr[i] &lt; min)<SUB>31</SUB>>", "93": "<(IDENTIFIER,arr,arr[i] &lt; min)<SUB>31</SUB>>", "95": "<(IDENTIFIER,min,arr[i] &lt; min)<SUB>31</SUB>>", "97": "<(IDENTIFIER,min,min = arr[i])<SUB>32</SUB>>", "99": "<(IDENTIFIER,arr,min = arr[i])<SUB>32</SUB>>", "101": "<(CONTROL_STRUCTURE,if (arr[i] &gt; max),if (arr[i] &gt; max))<SUB>33</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>33</SUB>>", "105": "<(IDENTIFIER,i,arr[i] &gt; max)<SUB>33</SUB>>", "107": "<(&lt;operator&gt;.assignment,max = arr[i])<SUB>34</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>34</SUB>>", "111": "<(IDENTIFIER,i,max = arr[i])<SUB>34</SUB>>", "113": "<(IDENTIFIER,sum,sum += Math.abs(arr[i]))<SUB>35</SUB>>", "115": "<(IDENTIFIER,Math,Math.abs(arr[i]))<SUB>35</SUB>>", "117": "<(IDENTIFIER,arr,Math.abs(arr[i]))<SUB>35</SUB>>", "119": "<(CONTROL_STRUCTURE,if (min &gt; 0),if (min &gt; 0))<SUB>37</SUB>>", "121": "<(IDENTIFIER,min,min &gt; 0)<SUB>37</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "125": "<(IDENTIFIER,sum,sum -= 2 * min)<SUB>39</SUB>>", "127": "<(LITERAL,2,2 * min)<SUB>39</SUB>>", "129": "<(CONTROL_STRUCTURE,if (max &lt; 0),if (max &lt; 0))<SUB>41</SUB>>", "131": "<(IDENTIFIER,max,max &lt; 0)<SUB>41</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "135": "<(IDENTIFIER,sum,sum += 2 * max)<SUB>43</SUB>>", "137": "<(LITERAL,2,2 * max)<SUB>43</SUB>>", "139": "<(println,println(sum))<SUB>45</SUB>>", "141": "<(IDENTIFIER,sum,println(sum))<SUB>45</SUB>>", "143": "<(IDENTIFIER,pw,flush())<SUB>46</SUB>>", "145": "<(IDENTIFIER,pw,close())<SUB>47</SUB>>", "147": "<(MODIFIER,STATIC)>"}}