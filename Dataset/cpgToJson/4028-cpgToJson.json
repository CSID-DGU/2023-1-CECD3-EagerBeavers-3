{"edges": [["21", "22"], ["21", "23"], ["21", "170"], ["21", "171"], ["21", "172"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "81"], ["23", "82"], ["23", "85"], ["23", "163"], ["23", "166"], ["23", "168"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "75"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "103"], ["97", "107"], ["97", "138"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["105", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "145"], ["143", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "162"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "158"], ["150", "161"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "60"], ["82", "87"], ["163", "166"], ["166", "168"], ["168", "172"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["60", "63"], ["63", "70"], ["63", "82"], ["66", "63"], ["87", "92"], ["90", "99"], ["90", "163"], ["95", "92"], ["30", "28"], ["37", "35"], ["69", "76"], ["75", "66"], ["92", "90"], ["99", "105"], ["103", "109"], ["70", "73"], ["73", "69"], ["76", "79"], ["79", "75"], ["105", "103"], ["109", "112"], ["112", "121"], ["112", "139"], ["115", "112"], ["139", "143"], ["139", "95"], ["143", "152"], ["145", "95"], ["119", "129"], ["119", "115"], ["147", "145"], ["120", "119"], ["127", "135"], ["132", "115"], ["148", "147"], ["121", "120"], ["129", "127"], ["133", "132"], ["150", "148"], ["135", "133"], ["152", "155"], ["155", "158"], ["158", "150"], ["21", "26"], ["22", "172"], ["24", "172"], ["27", "172"], ["27", "172"], ["31", "172"], ["34", "172"], ["34", "172"], ["39", "172"], ["44", "172"], ["46", "172"], ["44", "172"], ["44", "172"], ["49", "172"], ["49", "172"], ["54", "172"], ["54", "172"], ["54", "172"], ["63", "172"], ["82", "172"], ["87", "172"], ["90", "172"], ["92", "172"], ["90", "172"], ["90", "172"], ["163", "172"], ["163", "172"], ["166", "172"], ["168", "172"], ["168", "172"], ["99", "172"], ["103", "172"], ["103", "172"], ["103", "172"], ["109", "172"], ["112", "172"], ["112", "172"], ["139", "172"], ["139", "172"], ["139", "172"], ["143", "172"], ["150", "172"], ["150", "172"], ["150", "172"], ["150", "172"], ["148", "172"], ["147", "172"], ["145", "172"], ["145", "172"], ["95", "172"], ["120", "172"], ["119", "172"], ["119", "172"], ["127", "172"], ["127", "172"], ["132", "172"], ["132", "172"], ["115", "172"], ["69", "172"], ["69", "172"], ["75", "172"], ["79", "172"], ["75", "172"], ["75", "172"], ["66", "172"], ["147", "172"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["21", "82"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "60"], ["21", "87"], ["34", "163"], ["21", "163"], ["82", "163"], ["145", "163"], ["163", "166"], ["21", "166"], ["166", "168"], ["21", "168"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["51", "56"], ["21", "56"], ["60", "63"], ["66", "63"], ["21", "63"], ["56", "63"], ["63", "66"], ["21", "66"], ["73", "69"], ["79", "75"], ["87", "90"], ["95", "90"], ["21", "90"], ["92", "90"], ["92", "90"], ["90", "95"], ["121", "95"], ["21", "95"], ["21", "99"], ["105", "103"], ["21", "92"], ["63", "92"], ["112", "92"], ["21", "109"], ["46", "73"], ["79", "73"], ["21", "73"], ["73", "79"], ["21", "79"], ["21", "105"], ["109", "112"], ["115", "112"], ["21", "112"], ["92", "112"], ["121", "115"], ["21", "115"], ["99", "139"], ["127", "139"], ["21", "139"], ["44", "139"], ["147", "145"], ["147", "145"], ["150", "143"], ["21", "143"], ["120", "119"], ["120", "119"], ["21", "119"], ["49", "127"], ["82", "147"], ["145", "147"], ["21", "147"], ["150", "147"], ["150", "147"], ["150", "147"], ["150", "147"], ["150", "147"], ["121", "120"], ["121", "120"], ["21", "120"], ["99", "127"], ["21", "127"], ["103", "132"], ["82", "148"], ["145", "148"], ["21", "148"], ["150", "148"], ["150", "148"], ["150", "148"], ["150", "148"], ["150", "148"], ["90", "121"], ["21", "121"], ["112", "121"], ["143", "150"], ["21", "150"], ["103", "150"], ["63", "73"], ["63", "66"], ["63", "75"], ["63", "69"], ["63", "76"], ["63", "79"], ["63", "70"], ["63", "63"], ["90", "99"], ["90", "103"], ["90", "95"], ["90", "92"], ["90", "112"], ["90", "90"], ["90", "105"], ["90", "139"], ["90", "109"], ["112", "115"], ["112", "120"], ["112", "119"], ["112", "121"], ["112", "112"], ["139", "145"], ["139", "150"], ["139", "148"], ["139", "143"], ["139", "152"], ["139", "147"], ["139", "155"], ["139", "158"], ["119", "132"], ["119", "129"], ["119", "135"], ["119", "127"], ["119", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int total: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,total,int total = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] t = new int[n])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(LOCAL,int[] g: int[])<SUB>8</SUB>>", "55": "<(IDENTIFIER,g,int[] g = new int[n])<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "59": "<(LOCAL,int i: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,t[i] = nextInt())<SUB>10</SUB>>", "71": "<(IDENTIFIER,t,t[i] = nextInt())<SUB>10</SUB>>", "73": "<(nextInt,nextInt())<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,g[i] = nextInt())<SUB>11</SUB>>", "77": "<(IDENTIFIER,g,g[i] = nextInt())<SUB>11</SUB>>", "79": "<(nextInt,nextInt())<SUB>11</SUB>>", "81": "<(LOCAL,long ans: long)<SUB>13</SUB>>", "83": "<(IDENTIFIER,ans,long ans = 0L)<SUB>13</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>14</SUB>>", "93": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>15</SUB>>", "101": "<(LITERAL,0,int sum = 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.assignment,int[] a = new int[4])<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.alloc,new int[4])>", "107": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "111": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "113": "<(IDENTIFIER,j,j &lt; n)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.equals,((i &gt;&gt; j) &amp; 1) == 1)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; j)<SUB>19</SUB>>", "123": "<(IDENTIFIER,j,i &gt;&gt; j)<SUB>19</SUB>>", "125": "<(LITERAL,1,((i &gt;&gt; j) &amp; 1) == 1)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.assignmentPlus,sum += t[j])<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,t[j])<SUB>20</SUB>>", "131": "<(IDENTIFIER,j,sum += t[j])<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,a[g[j]])<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>21</SUB>>", "137": "<(IDENTIFIER,j,a[g[j]]++)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.equals,sum == total)<SUB>24</SUB>>", "141": "<(IDENTIFIER,total,sum == total)<SUB>24</SUB>>", "143": "<(ini,ini())<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.assignment,ans = (ans + f(a[1], a[2], a[3], 0)) % mod)<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.modulo,(ans + f(a[1], a[2], a[3], 0)) % mod)<SUB>26</SUB>>", "149": "<(IDENTIFIER,ans,ans + f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "151": "<(IDENTIFIER,this,f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "153": "<(IDENTIFIER,a,f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,a[2])<SUB>26</SUB>>", "157": "<(LITERAL,2,f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "159": "<(IDENTIFIER,a,f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "161": "<(LITERAL,0,f(a[1], a[2], a[3], 0))<SUB>26</SUB>>", "163": "<(println,println(ans))<SUB>29</SUB>>", "165": "<(IDENTIFIER,ans,println(ans))<SUB>29</SUB>>", "167": "<(IDENTIFIER,pw,flush())<SUB>30</SUB>>", "169": "<(IDENTIFIER,pw,close())<SUB>31</SUB>>", "171": "<(MODIFIER,STATIC)>"}}