{"edges": [["19", "21"], ["19", "129"], ["19", "130"], ["19", "131"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "49"], ["21", "53"], ["21", "54"], ["21", "57"], ["21", "58"], ["21", "59"], ["21", "60"], ["21", "63"], ["21", "124"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "73"], ["67", "78"], ["67", "122"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["83", "84"], ["83", "111"], ["83", "117"], ["84", "85"], ["84", "102"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["22", "29"], ["25", "41"], ["37", "46"], ["44", "51"], ["49", "54"], ["54", "60"], ["60", "64"], ["124", "131"], ["24", "22"], ["39", "37"], ["46", "44"], ["51", "49"], ["64", "70"], ["64", "127"], ["125", "124"], ["27", "34"], ["30", "25"], ["41", "39"], ["68", "75"], ["73", "79"], ["122", "64"], ["127", "125"], ["29", "27"], ["32", "30"], ["70", "68"], ["75", "73"], ["79", "87"], ["79", "122"], ["34", "32"], ["84", "112"], ["84", "119"], ["85", "84"], ["85", "103"], ["102", "84"], ["112", "115"], ["115", "122"], ["86", "85"], ["86", "94"], ["91", "85"], ["103", "108"], ["106", "102"], ["119", "122"], ["87", "86"], ["92", "99"], ["97", "91"], ["108", "106"], ["94", "92"], ["99", "97"], ["19", "24"], ["20", "131"], ["22", "131"], ["27", "131"], ["30", "131"], ["30", "131"], ["30", "131"], ["25", "131"], ["37", "131"], ["37", "131"], ["44", "131"], ["44", "131"], ["49", "131"], ["51", "131"], ["49", "131"], ["49", "131"], ["54", "131"], ["60", "131"], ["64", "131"], ["64", "131"], ["64", "131"], ["124", "131"], ["124", "131"], ["124", "131"], ["70", "131"], ["68", "131"], ["68", "131"], ["75", "131"], ["73", "131"], ["73", "131"], ["79", "131"], ["79", "131"], ["79", "131"], ["86", "131"], ["85", "131"], ["92", "131"], ["91", "131"], ["97", "131"], ["97", "131"], ["91", "131"], ["85", "131"], ["84", "131"], ["102", "131"], ["106", "131"], ["106", "131"], ["102", "131"], ["84", "131"], ["84", "131"], ["119", "131"], ["112", "131"], ["122", "131"], ["39", "131"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["51", "49"], ["19", "54"], ["19", "60"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["60", "124"], ["119", "124"], ["112", "124"], ["19", "124"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["41", "46"], ["19", "46"], ["46", "51"], ["19", "51"], ["54", "64"], ["122", "64"], ["19", "64"], ["37", "64"], ["86", "64"], ["70", "68"], ["70", "68"], ["75", "73"], ["75", "73"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["75", "122"], ["115", "122"], ["19", "122"], ["103", "122"], ["44", "70"], ["92", "70"], ["106", "70"], ["19", "70"], ["64", "70"], ["49", "75"], ["97", "75"], ["19", "75"], ["70", "75"], ["68", "79"], ["19", "79"], ["73", "79"], ["85", "84"], ["85", "84"], ["102", "84"], ["102", "84"], ["19", "112"], ["86", "85"], ["86", "85"], ["91", "85"], ["91", "85"], ["103", "102"], ["103", "102"], ["106", "102"], ["106", "102"], ["60", "112"], ["119", "112"], ["19", "115"], ["75", "115"], ["103", "115"], ["19", "119"], ["75", "86"], ["19", "86"], ["64", "86"], ["92", "91"], ["92", "91"], ["97", "91"], ["97", "91"], ["70", "103"], ["92", "103"], ["19", "103"], ["75", "103"], ["103", "106"], ["19", "106"], ["103", "106"], ["60", "119"], ["112", "119"], ["75", "87"], ["19", "87"], ["70", "92"], ["19", "92"], ["75", "92"], ["75", "97"], ["19", "97"], ["75", "97"], ["103", "108"], ["19", "108"], ["19", "94"], ["75", "94"], ["19", "99"], ["75", "99"], ["64", "68"], ["64", "73"], ["64", "64"], ["64", "75"], ["64", "122"], ["64", "79"], ["64", "70"], ["79", "84"], ["79", "85"], ["79", "87"], ["79", "86"], ["84", "115"], ["84", "119"], ["84", "112"], ["85", "102"], ["85", "103"], ["85", "106"], ["85", "108"], ["86", "94"], ["86", "99"], ["86", "92"], ["86", "97"], ["86", "91"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(LOCAL,String s1: java.lang.String)<SUB>5</SUB>>", "45": "<(IDENTIFIER,s1,String s1 = readLine())<SUB>5</SUB>>", "47": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,String s2 = readLine())<SUB>6</SUB>>", "51": "<(readLine,readLine())<SUB>6</SUB>>", "53": "<(LOCAL,int i: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "57": "<(LOCAL,char c1: char)<SUB>8</SUB>>", "59": "<(LOCAL,int cost: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,cost,int cost = 0)<SUB>9</SUB>>", "63": "<(CONTROL_STRUCTURE,while (i &lt; n),while (i &lt; n))<SUB>10</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "69": "<(IDENTIFIER,c1,c1 = s1.charAt(i))<SUB>12</SUB>>", "71": "<(IDENTIFIER,s1,s1.charAt(i))<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,c2 = s2.charAt(i))<SUB>13</SUB>>", "75": "<(charAt,s2.charAt(i))<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,s2.charAt(i))<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.notEquals,c1 != c2)<SUB>14</SUB>>", "81": "<(IDENTIFIER,c2,c1 != c2)<SUB>14</SUB>>", "83": "<(CONTROL_STRUCTURE,if ((i + 1) &lt; n &amp;&amp; s1.charAt(i + 1) != s2.charAt(i + 1) &amp;&amp; s1.charAt(i) != s1.charAt(i + 1)),if ((i + 1) &lt; n &amp;&amp; s1.charAt(i + 1) != s2.charAt(i + 1) &amp;&amp; s1.charAt(i) != s1.charAt(i + 1)))<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.logicalAnd,(i + 1) &lt; n &amp;&amp; s1.charAt(i + 1) != s2.charAt(i + 1))<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "89": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.notEquals,s1.charAt(i + 1) != s2.charAt(i + 1))<SUB>16</SUB>>", "93": "<(IDENTIFIER,s1,s1.charAt(i + 1))<SUB>16</SUB>>", "95": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "97": "<(charAt,s2.charAt(i + 1))<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "101": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "103": "<(charAt,s1.charAt(i))<SUB>16</SUB>>", "105": "<(IDENTIFIER,i,s1.charAt(i))<SUB>16</SUB>>", "107": "<(IDENTIFIER,s1,s1.charAt(i + 1))<SUB>16</SUB>>", "109": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "113": "<(IDENTIFIER,cost,cost += 1)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "117": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.assignmentPlus,cost += 1)<SUB>23</SUB>>", "121": "<(LITERAL,1,cost += 1)<SUB>23</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "129": "<(MODIFIER,PUBLIC)>", "131": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}