{"edges": [["21", "22"], ["21", "23"], ["21", "160"], ["21", "161"], ["21", "162"], ["23", "24"], ["23", "25"], ["23", "31"], ["23", "32"], ["23", "4"], ["23", "37"], ["23", "40"], ["23", "41"], ["23", "63"], ["23", "64"], ["23", "6"], ["23", "68"], ["23", "71"], ["23", "72"], ["23", "73"], ["23", "78"], ["23", "79"], ["23", "82"], ["23", "157"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["40", "3"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "51"], ["41", "53"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "60"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["71", "5"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "106"], ["92", "118"], ["92", "124"], ["92", "147"], ["93", "94"], ["93", "100"], ["94", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["106", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "123"], ["119", "120"], ["119", "122"], ["120", "121"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "145"], ["133", "134"], ["133", "135"], ["133", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["145", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["149", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["25", "35"], ["32", "39"], ["37", "40"], ["40", "43"], ["64", "70"], ["68", "71"], ["71", "77"], ["73", "79"], ["79", "84"], ["157", "162"], ["27", "25"], ["34", "32"], ["39", "37"], ["43", "50"], ["46", "57"], ["46", "66"], ["51", "50"], ["66", "64"], ["70", "68"], ["75", "73"], ["84", "87"], ["87", "97"], ["87", "157"], ["90", "87"], ["29", "27"], ["35", "34"], ["48", "46"], ["55", "60"], ["60", "51"], ["77", "75"], ["106", "120"], ["147", "90"], ["50", "48"], ["57", "55"], ["94", "102"], ["94", "108"], ["100", "108"], ["108", "114"], ["111", "106"], ["119", "90"], ["119", "128"], ["125", "135"], ["125", "153"], ["149", "147"], ["95", "94"], ["102", "100"], ["112", "111"], ["120", "119"], ["126", "125"], ["133", "145"], ["145", "128"], ["152", "149"], ["97", "95"], ["114", "112"], ["128", "126"], ["135", "141"], ["138", "133"], ["153", "152"], ["139", "138"], ["141", "139"], ["21", "29"], ["22", "162"], ["27", "162"], ["25", "162"], ["25", "162"], ["32", "162"], ["35", "162"], ["34", "162"], ["32", "162"], ["32", "162"], ["37", "162"], ["40", "162"], ["43", "162"], ["46", "162"], ["46", "162"], ["46", "162"], ["64", "162"], ["66", "162"], ["64", "162"], ["64", "162"], ["68", "162"], ["71", "162"], ["71", "162"], ["73", "162"], ["73", "162"], ["79", "162"], ["79", "162"], ["84", "162"], ["87", "162"], ["87", "162"], ["87", "162"], ["157", "162"], ["157", "162"], ["94", "162"], ["94", "162"], ["100", "162"], ["106", "162"], ["111", "162"], ["106", "162"], ["106", "162"], ["120", "162"], ["119", "162"], ["119", "162"], ["119", "162"], ["126", "162"], ["126", "162"], ["125", "162"], ["125", "162"], ["153", "162"], ["152", "162"], ["149", "162"], ["147", "162"], ["147", "162"], ["133", "162"], ["133", "162"], ["145", "162"], ["90", "162"], ["55", "162"], ["60", "162"], ["60", "162"], ["51", "162"], ["157", "162"], ["149", "162"], ["21", "22"], ["27", "25"], ["27", "25"], ["34", "32"], ["21", "37"], ["66", "64"], ["21", "68"], ["27", "73"], ["21", "79"], ["37", "40"], ["21", "40"], ["21", "43"], ["68", "71"], ["21", "71"], ["21", "84"], ["21", "157"], ["73", "157"], ["147", "157"], ["21", "27"], ["29", "27"], ["35", "34"], ["43", "46"], ["51", "46"], ["21", "46"], ["32", "46"], ["46", "51"], ["21", "51"], ["32", "55"], ["40", "66"], ["60", "66"], ["21", "66"], ["84", "87"], ["90", "87"], ["21", "87"], ["25", "87"], ["87", "90"], ["153", "90"], ["21", "90"], ["149", "147"], ["149", "147"], ["149", "147"], ["21", "29"], ["29", "35"], ["21", "35"], ["40", "60"], ["21", "60"], ["55", "60"], ["112", "106"], ["21", "106"], ["32", "106"], ["112", "106"], ["95", "94"], ["95", "94"], ["95", "100"], ["21", "100"], ["32", "100"], ["95", "100"], ["112", "111"], ["112", "111"], ["21", "111"], ["120", "119"], ["64", "119"], ["21", "119"], ["126", "125"], ["126", "125"], ["21", "125"], ["21", "149"], ["73", "149"], ["147", "149"], ["153", "149"], ["153", "149"], ["71", "95"], ["120", "95"], ["126", "95"], ["21", "95"], ["32", "95"], ["106", "95"], ["95", "112"], ["100", "112"], ["21", "112"], ["32", "112"], ["95", "112"], ["100", "112"], ["106", "120"], ["21", "120"], ["120", "126"], ["133", "126"], ["21", "126"], ["32", "126"], ["133", "126"], ["139", "133"], ["21", "133"], ["32", "133"], ["139", "133"], ["138", "133"], ["138", "133"], ["79", "145"], ["153", "145"], ["21", "145"], ["153", "152"], ["153", "152"], ["21", "152"], ["139", "138"], ["139", "138"], ["21", "138"], ["87", "153"], ["21", "153"], ["79", "153"], ["145", "153"], ["126", "139"], ["21", "139"], ["32", "139"], ["126", "139"], ["46", "48"], ["46", "60"], ["46", "51"], ["46", "57"], ["46", "46"], ["46", "50"], ["46", "55"], ["87", "94"], ["87", "120"], ["87", "114"], ["87", "119"], ["87", "95"], ["87", "106"], ["87", "87"], ["87", "97"], ["87", "112"], ["87", "90"], ["87", "108"], ["87", "111"], ["94", "102"], ["94", "100"], ["119", "128"], ["119", "149"], ["119", "153"], ["119", "126"], ["119", "152"], ["119", "147"], ["119", "125"], ["125", "141"], ["125", "145"], ["125", "128"], ["125", "138"], ["125", "126"], ["125", "135"], ["125", "139"], ["125", "125"], ["125", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>2</SUB>>", "27": "<(parseInt,parseInt(in.readLine()))<SUB>2</SUB>>", "29": "<(readLine,readLine())<SUB>2</SUB>>", "31": "<(LOCAL,char[] s: char[])<SUB>3</SUB>>", "33": "<(IDENTIFIER,s,char[] s = toCharArray())<SUB>3</SUB>>", "35": "<(readLine,readLine())<SUB>3</SUB>>", "4": "<(LOCAL,HashSet&lt;Character&gt; all: ANY)<SUB>4</SUB>>", "38": "<(IDENTIFIER,all,ANY all = new HashSet&lt;Character&gt;())<SUB>4</SUB>>", "40": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>4</SUB>>", "41": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>5</SUB>>", "45": "<(LITERAL,0,int $idx0 = 0)<SUB>5</SUB>>", "47": "<(IDENTIFIER,$idx0,$idx0 &lt; s.length)>", "49": "<(IDENTIFIER,s,$idx0 &lt; s.length)>", "51": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>5</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>5</SUB>>", "59": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "61": "<(IDENTIFIER,all,add(c))<SUB>6</SUB>>", "63": "<(LOCAL,int totalCount: int)<SUB>7</SUB>>", "65": "<(IDENTIFIER,totalCount,int totalCount = size())<SUB>7</SUB>>", "67": "<(IDENTIFIER,all,size())<SUB>7</SUB>>", "68": "<(&lt;operator&gt;.assignment,ANY cnts = new HashMap&lt;Character, Integer&gt;())<SUB>8</SUB>>", "70": "<(&lt;operator&gt;.alloc,new HashMap&lt;Character, Integer&gt;())<SUB>8</SUB>>", "5": "<(IDENTIFIER,cnts,new HashMap&lt;Character, Integer&gt;())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int ans = Integer.MAX_VALUE)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>9</SUB>>", "77": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,int x = 0)<SUB>10</SUB>>", "83": "<(LOCAL,int y: int)<SUB>11</SUB>>", "85": "<(IDENTIFIER,y,int y = 0)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.lessThan,y &lt; n)<SUB>11</SUB>>", "89": "<(IDENTIFIER,n,y &lt; n)<SUB>11</SUB>>", "91": "<(IDENTIFIER,y,++y)<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,if (!cnts.containsKey(s[y])),if (!cnts.containsKey(s[y])))<SUB>12</SUB>>", "95": "<(containsKey,containsKey(s[y]))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,s[y])<SUB>12</SUB>>", "99": "<(IDENTIFIER,y,containsKey(s[y]))<SUB>12</SUB>>", "101": "<(IDENTIFIER,cnts,put(s[y], 0))<SUB>13</SUB>>", "103": "<(IDENTIFIER,s,put(s[y], 0))<SUB>13</SUB>>", "105": "<(LITERAL,0,put(s[y], 0))<SUB>13</SUB>>", "107": "<(IDENTIFIER,cnts,put(s[y], cnts.get(s[y]) + 1))<SUB>14</SUB>>", "109": "<(IDENTIFIER,s,put(s[y], cnts.get(s[y]) + 1))<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.addition,cnts.get(s[y]) + 1)<SUB>14</SUB>>", "113": "<(IDENTIFIER,cnts,get(s[y]))<SUB>14</SUB>>", "115": "<(IDENTIFIER,s,get(s[y]))<SUB>14</SUB>>", "117": "<(LITERAL,1,cnts.get(s[y]) + 1)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.lessThan,cnts.size() &lt; totalCount)<SUB>15</SUB>>", "121": "<(IDENTIFIER,cnts,size())<SUB>15</SUB>>", "123": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.greaterThan,cnts.get(s[x]) &gt; 1)<SUB>17</SUB>>", "127": "<(IDENTIFIER,cnts,get(s[x]))<SUB>17</SUB>>", "129": "<(IDENTIFIER,s,get(s[x]))<SUB>17</SUB>>", "131": "<(LITERAL,1,cnts.get(s[x]) &gt; 1)<SUB>17</SUB>>", "133": "<(put,put(s[x], cnts.get(s[x]) - 1))<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,s[x])<SUB>18</SUB>>", "137": "<(IDENTIFIER,x,put(s[x], cnts.get(s[x]) - 1))<SUB>18</SUB>>", "139": "<(get,get(s[x]))<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,s[x])<SUB>18</SUB>>", "143": "<(IDENTIFIER,x,get(s[x]))<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.preIncrement,++x)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.assignment,ans = Math.min(ans, y - x + 1))<SUB>21</SUB>>", "149": "<(min,Math.min(ans, y - x + 1))<SUB>21</SUB>>", "151": "<(IDENTIFIER,ans,Math.min(ans, y - x + 1))<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.subtraction,y - x)<SUB>21</SUB>>", "155": "<(IDENTIFIER,x,y - x)<SUB>21</SUB>>", "157": "<(println,println(ans))<SUB>23</SUB>>", "159": "<(IDENTIFIER,ans,println(ans))<SUB>23</SUB>>", "161": "<(MODIFIER,STATIC)>"}}