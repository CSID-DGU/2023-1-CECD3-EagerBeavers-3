{"edges": [["21", "22"], ["21", "23"], ["21", "86"], ["21", "87"], ["21", "88"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "52"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["63", "64"], ["63", "77"], ["64", "65"], ["64", "76"], ["65", "66"], ["65", "73"], ["66", "67"], ["66", "72"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "85"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "49"], ["49", "54"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["54", "57"], ["57", "88"], ["57", "69"], ["60", "57"], ["30", "28"], ["37", "35"], ["64", "81"], ["64", "60"], ["65", "64"], ["78", "88"], ["66", "73"], ["73", "65"], ["79", "82"], ["82", "78"], ["67", "66"], ["81", "79"], ["69", "67"], ["21", "26"], ["22", "88"], ["24", "88"], ["27", "88"], ["27", "88"], ["31", "88"], ["34", "88"], ["34", "88"], ["34", "88"], ["39", "88"], ["44", "88"], ["46", "88"], ["44", "88"], ["44", "88"], ["49", "88"], ["49", "88"], ["49", "88"], ["54", "88"], ["57", "88"], ["57", "88"], ["67", "88"], ["66", "88"], ["65", "88"], ["73", "88"], ["65", "88"], ["64", "88"], ["64", "88"], ["64", "88"], ["60", "88"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["39", "49"], ["21", "49"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "54"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["54", "57"], ["60", "57"], ["21", "57"], ["73", "60"], ["21", "60"], ["65", "64"], ["65", "64"], ["44", "64"], ["21", "64"], ["66", "65"], ["66", "65"], ["73", "65"], ["73", "65"], ["34", "78"], ["82", "78"], ["82", "78"], ["67", "66"], ["67", "66"], ["21", "66"], ["21", "73"], ["39", "73"], ["67", "73"], ["73", "82"], ["21", "82"], ["73", "82"], ["21", "67"], ["57", "67"], ["57", "69"], ["21", "69"], ["57", "73"], ["57", "64"], ["57", "66"], ["57", "69"], ["57", "67"], ["57", "65"], ["64", "60"], ["64", "57"], ["64", "81"], ["64", "82"], ["64", "78"], ["64", "79"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int k: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int sum = n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,int sum = n)<SUB>7</SUB>>", "53": "<(LOCAL,long i: long)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,long i = 0)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; 1e5)<SUB>9</SUB>>", "59": "<(LITERAL,1e5,i &lt; 1e5)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "63": "<(CONTROL_STRUCTURE,if (i * (i + 1) / 2 - (n - i) == k),if (i * (i + 1) / 2 - (n - i) == k))<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.subtraction,i * (i + 1) / 2 - (n - i))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.multiplication,i * (i + 1))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.addition,i + 1)<SUB>10</SUB>>", "71": "<(LITERAL,1,i + 1)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.subtraction,n - i)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,n - i)<SUB>10</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "81": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "83": "<(IDENTIFIER,n,n - i)<SUB>11</SUB>>", "85": "<(CONTROL_STRUCTURE,break;,break;)<SUB>12</SUB>>", "87": "<(MODIFIER,STATIC)>"}}