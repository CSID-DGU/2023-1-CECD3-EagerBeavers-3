{"edges": [["21", "22"], ["21", "23"], ["21", "258"], ["21", "259"], ["21", "260"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "43"], ["23", "46"], ["23", "62"], ["23", "63"], ["23", "67"], ["23", "68"], ["23", "73"], ["23", "74"], ["23", "81"], ["23", "82"], ["23", "89"], ["23", "90"], ["23", "96"], ["23", "97"], ["23", "101"], ["23", "102"], ["23", "106"], ["23", "110"], ["23", "115"], ["23", "155"], ["23", "156"], ["23", "160"], ["23", "161"], ["23", "165"], ["23", "166"], ["23", "170"], ["23", "243"], ["23", "254"], ["23", "256"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "42"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "38"], ["34", "41"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["47", "48"], ["47", "51"], ["47", "61"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "57"], ["53", "60"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["94", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "125"], ["115", "130"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "142"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["161", "162"], ["161", "163"], ["163", "164"], ["166", "167"], ["166", "168"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "189"], ["181", "191"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["191", "193"], ["191", "198"], ["191", "229"], ["191", "234"], ["191", "237"], ["191", "240"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "206"], ["198", "208"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["211", "214"], ["214", "215"], ["214", "222"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["24", "31"], ["27", "45"], ["43", "50"], ["46", "65"], ["63", "70"], ["68", "78"], ["74", "86"], ["82", "94"], ["90", "99"], ["97", "104"], ["102", "108"], ["106", "112"], ["110", "117"], ["156", "163"], ["161", "168"], ["166", "172"], ["243", "254"], ["254", "256"], ["256", "260"], ["26", "24"], ["45", "43"], ["65", "63"], ["70", "68"], ["76", "74"], ["84", "82"], ["92", "90"], ["99", "97"], ["104", "102"], ["108", "106"], ["112", "110"], ["117", "122"], ["120", "134"], ["120", "158"], ["125", "122"], ["158", "156"], ["163", "161"], ["168", "166"], ["172", "175"], ["175", "183"], ["175", "247"], ["178", "175"], ["245", "243"], ["29", "37"], ["32", "27"], ["48", "56"], ["51", "46"], ["78", "76"], ["86", "84"], ["94", "92"], ["122", "120"], ["127", "125"], ["131", "145"], ["142", "127"], ["246", "251"], ["251", "245"], ["31", "29"], ["50", "48"], ["132", "139"], ["137", "131"], ["143", "152"], ["148", "142"], ["183", "186"], ["186", "195"], ["186", "178"], ["189", "186"], ["247", "246"], ["35", "38"], ["38", "32"], ["54", "57"], ["57", "51"], ["134", "132"], ["139", "137"], ["145", "143"], ["150", "148"], ["193", "200"], ["234", "237"], ["237", "240"], ["240", "189"], ["37", "35"], ["56", "54"], ["152", "150"], ["195", "193"], ["200", "203"], ["203", "219"], ["203", "230"], ["206", "203"], ["230", "189"], ["230", "234"], ["209", "206"], ["211", "209"], ["214", "211"], ["215", "226"], ["222", "214"], ["217", "215"], ["224", "222"], ["219", "217"], ["226", "224"], ["21", "26"], ["22", "260"], ["24", "260"], ["32", "260"], ["38", "260"], ["38", "260"], ["32", "260"], ["27", "260"], ["43", "260"], ["51", "260"], ["54", "260"], ["57", "260"], ["57", "260"], ["51", "260"], ["46", "260"], ["63", "260"], ["68", "260"], ["76", "260"], ["74", "260"], ["74", "260"], ["82", "260"], ["84", "260"], ["82", "260"], ["82", "260"], ["90", "260"], ["90", "260"], ["97", "260"], ["97", "260"], ["102", "260"], ["102", "260"], ["102", "260"], ["106", "260"], ["106", "260"], ["110", "260"], ["112", "260"], ["110", "260"], ["110", "260"], ["117", "260"], ["122", "260"], ["120", "260"], ["120", "260"], ["156", "260"], ["156", "260"], ["161", "260"], ["166", "260"], ["166", "260"], ["172", "260"], ["175", "260"], ["175", "260"], ["175", "260"], ["247", "260"], ["246", "260"], ["245", "260"], ["251", "260"], ["251", "260"], ["245", "260"], ["243", "260"], ["243", "260"], ["254", "260"], ["256", "260"], ["256", "260"], ["183", "260"], ["186", "260"], ["186", "260"], ["186", "260"], ["178", "260"], ["193", "260"], ["193", "260"], ["200", "260"], ["203", "260"], ["203", "260"], ["203", "260"], ["230", "260"], ["230", "260"], ["230", "260"], ["234", "260"], ["234", "260"], ["234", "260"], ["237", "260"], ["240", "260"], ["189", "260"], ["211", "260"], ["217", "260"], ["215", "260"], ["214", "260"], ["224", "260"], ["222", "260"], ["214", "260"], ["211", "260"], ["209", "260"], ["209", "260"], ["206", "260"], ["131", "260"], ["137", "260"], ["131", "260"], ["131", "260"], ["142", "260"], ["148", "260"], ["142", "260"], ["142", "260"], ["125", "260"], ["125", "260"], ["21", "22"], ["21", "24"], ["21", "43"], ["65", "63"], ["70", "68"], ["70", "68"], ["76", "74"], ["76", "74"], ["84", "82"], ["84", "82"], ["92", "90"], ["92", "90"], ["99", "97"], ["104", "102"], ["108", "106"], ["112", "110"], ["112", "110"], ["158", "156"], ["163", "161"], ["168", "166"], ["24", "27"], ["21", "27"], ["35", "27"], ["32", "27"], ["43", "46"], ["21", "46"], ["54", "46"], ["51", "46"], ["21", "117"], ["21", "125"], ["145", "125"], ["21", "172"], ["46", "243"], ["21", "243"], ["247", "243"], ["247", "243"], ["251", "243"], ["251", "243"], ["108", "254"], ["21", "254"], ["243", "256"], ["21", "256"], ["21", "29"], ["21", "42"], ["21", "48"], ["21", "61"], ["27", "65"], ["21", "65"], ["63", "70"], ["21", "70"], ["21", "76"], ["68", "76"], ["76", "84"], ["21", "84"], ["68", "84"], ["84", "92"], ["21", "92"], ["94", "92"], ["90", "99"], ["21", "99"], ["99", "104"], ["21", "104"], ["94", "108"], ["21", "108"], ["106", "112"], ["21", "112"], ["117", "120"], ["125", "120"], ["21", "120"], ["122", "120"], ["122", "120"], ["137", "131"], ["137", "131"], ["148", "142"], ["148", "142"], ["21", "158"], ["21", "163"], ["21", "168"], ["172", "175"], ["178", "175"], ["21", "175"], ["74", "175"], ["175", "178"], ["217", "178"], ["21", "178"], ["247", "245"], ["247", "245"], ["21", "245"], ["251", "245"], ["251", "245"], ["29", "32"], ["21", "32"], ["35", "32"], ["38", "32"], ["48", "51"], ["21", "51"], ["54", "51"], ["57", "51"], ["65", "94"], ["21", "94"], ["21", "122"], ["104", "122"], ["21", "127"], ["145", "127"], ["21", "183"], ["247", "246"], ["247", "246"], ["21", "246"], ["247", "251"], ["21", "251"], ["166", "251"], ["240", "251"], ["21", "35"], ["21", "41"], ["21", "54"], ["21", "60"], ["92", "137"], ["148", "137"], ["21", "137"], ["110", "137"], ["137", "148"], ["21", "148"], ["110", "148"], ["183", "186"], ["189", "186"], ["21", "186"], ["82", "186"], ["186", "189"], ["224", "189"], ["21", "189"], ["186", "193"], ["21", "193"], ["175", "193"], ["230", "234"], ["21", "234"], ["175", "237"], ["217", "237"], ["21", "237"], ["186", "240"], ["224", "240"], ["21", "240"], ["92", "247"], ["148", "247"], ["21", "247"], ["161", "247"], ["237", "247"], ["35", "38"], ["21", "38"], ["54", "57"], ["21", "57"], ["120", "134"], ["21", "134"], ["134", "145"], ["21", "145"], ["21", "200"], ["145", "152"], ["21", "152"], ["186", "195"], ["21", "195"], ["175", "195"], ["200", "203"], ["206", "203"], ["21", "203"], ["122", "203"], ["203", "206"], ["21", "206"], ["211", "209"], ["211", "209"], ["211", "209"], ["193", "230"], ["209", "230"], ["21", "230"], ["156", "230"], ["234", "230"], ["222", "211"], ["21", "211"], ["193", "211"], ["209", "211"], ["215", "211"], ["215", "211"], ["222", "211"], ["215", "214"], ["215", "214"], ["222", "214"], ["222", "214"], ["211", "215"], ["21", "215"], ["217", "215"], ["217", "215"], ["215", "222"], ["21", "222"], ["224", "222"], ["224", "222"], ["175", "217"], ["21", "217"], ["97", "217"], ["186", "224"], ["21", "224"], ["102", "224"], ["120", "120"], ["120", "145"], ["120", "122"], ["120", "131"], ["120", "132"], ["120", "142"], ["120", "150"], ["120", "134"], ["120", "148"], ["120", "143"], ["120", "137"], ["120", "152"], ["120", "127"], ["120", "139"], ["120", "125"], ["175", "183"], ["175", "178"], ["175", "186"], ["175", "175"], ["186", "230"], ["186", "193"], ["186", "189"], ["186", "200"], ["186", "195"], ["186", "186"], ["186", "203"], ["203", "214"], ["203", "215"], ["203", "209"], ["203", "226"], ["203", "217"], ["203", "206"], ["203", "224"], ["203", "211"], ["203", "203"], ["203", "222"], ["203", "219"], ["230", "240"], ["230", "237"], ["230", "234"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new FileReader(new File(&quot;input.txt&quot;)))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj1,new FileReader(new File(&quot;input.txt&quot;)))>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new File(&quot;input.txt&quot;))>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "6": "<(LOCAL,BufferedWriter bw: ANY)<SUB>3</SUB>>", "44": "<(IDENTIFIER,bw,ANY bw = new BufferedWriter(new FileWriter(new File(&quot;output.txt&quot;))))<SUB>3</SUB>>", "46": "<(&lt;init&gt;,new BufferedWriter(new FileWriter(new File(&quot;output.txt&quot;))))<SUB>3</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "49": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "51": "<(&lt;init&gt;,new FileWriter(new File(&quot;output.txt&quot;)))<SUB>3</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "55": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "57": "<(&lt;init&gt;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "59": "<(LITERAL,&quot;output.txt&quot;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "61": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "63": "<(&lt;operator&gt;.assignment,String S = readLine())<SUB>4</SUB>>", "65": "<(readLine,readLine())<SUB>4</SUB>>", "67": "<(LOCAL,String[] J: java.lang.String[])<SUB>5</SUB>>", "69": "<(IDENTIFIER,J,String[] J = S.split(&quot; &quot;))<SUB>5</SUB>>", "71": "<(IDENTIFIER,S,S.split(&quot; &quot;))<SUB>5</SUB>>", "73": "<(LOCAL,int N: int)<SUB>6</SUB>>", "75": "<(IDENTIFIER,N,int N = Integer.parseInt(J[0]))<SUB>6</SUB>>", "77": "<(IDENTIFIER,Integer,Integer.parseInt(J[0]))<SUB>6</SUB>>", "79": "<(IDENTIFIER,J,Integer.parseInt(J[0]))<SUB>6</SUB>>", "81": "<(LOCAL,int M: int)<SUB>7</SUB>>", "83": "<(IDENTIFIER,M,int M = Integer.parseInt(J[1]))<SUB>7</SUB>>", "85": "<(IDENTIFIER,Integer,Integer.parseInt(J[1]))<SUB>7</SUB>>", "87": "<(IDENTIFIER,J,Integer.parseInt(J[1]))<SUB>7</SUB>>", "89": "<(LOCAL,int K: int)<SUB>9</SUB>>", "91": "<(IDENTIFIER,K,int K = parseInt(br.readLine()))<SUB>9</SUB>>", "93": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>9</SUB>>", "95": "<(IDENTIFIER,br,readLine())<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] x = new int[K])<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[K])>", "101": "<(LOCAL,int[] y: int[])<SUB>11</SUB>>", "103": "<(IDENTIFIER,y,int[] y = new int[K])<SUB>11</SUB>>", "105": "<(IDENTIFIER,K,new int[K])<SUB>11</SUB>>", "107": "<(IDENTIFIER,S,S = readLine())<SUB>12</SUB>>", "109": "<(IDENTIFIER,br,readLine())<SUB>12</SUB>>", "111": "<(IDENTIFIER,J,J = S.split(&quot; &quot;))<SUB>13</SUB>>", "113": "<(IDENTIFIER,S,S.split(&quot; &quot;))<SUB>13</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 2 * K); i = i + 2),for (int i = 0; Some(i &lt; 2 * K); i = i + 2))<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "121": "<(IDENTIFIER,i,i &lt; 2 * K)<SUB>14</SUB>>", "123": "<(LITERAL,2,2 * K)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,i = i + 2)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.addition,i + 2)<SUB>14</SUB>>", "129": "<(LITERAL,2,i + 2)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.assignment,x[i / 2] = Integer.parseInt(J[i]))<SUB>15</SUB>>", "133": "<(IDENTIFIER,x,x[i / 2] = Integer.parseInt(J[i]))<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,i / 2)<SUB>15</SUB>>", "137": "<(parseInt,Integer.parseInt(J[i]))<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,J[i])<SUB>15</SUB>>", "141": "<(IDENTIFIER,i,Integer.parseInt(J[i]))<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,y[i / 2])<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.division,i / 2)<SUB>16</SUB>>", "147": "<(LITERAL,2,i / 2)<SUB>16</SUB>>", "149": "<(IDENTIFIER,Integer,Integer.parseInt(J[i + 1]))<SUB>16</SUB>>", "151": "<(IDENTIFIER,J,Integer.parseInt(J[i + 1]))<SUB>16</SUB>>", "153": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "155": "<(LOCAL,int ans: int)<SUB>19</SUB>>", "157": "<(IDENTIFIER,ans,int ans = -1)<SUB>19</SUB>>", "159": "<(LITERAL,1,-1)<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.assignment,int ansX = -1)<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "165": "<(LOCAL,int ansY: int)<SUB>21</SUB>>", "167": "<(IDENTIFIER,ansY,int ansY = -1)<SUB>21</SUB>>", "169": "<(LITERAL,1,-1)<SUB>21</SUB>>", "171": "<(LOCAL,int i: int)<SUB>23</SUB>>", "173": "<(IDENTIFIER,i,int i = 1)<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>23</SUB>>", "177": "<(IDENTIFIER,N,i &lt;= N)<SUB>23</SUB>>", "179": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= M); j++),for (int j = 1; Some(j &lt;= M); j++))<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>24</SUB>>", "185": "<(LITERAL,1,int j = 1)<SUB>24</SUB>>", "187": "<(IDENTIFIER,j,j &lt;= M)<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.postIncrement,j++)<SUB>24</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.assignment,int W = M + N)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.addition,M + N)<SUB>25</SUB>>", "197": "<(IDENTIFIER,N,M + N)<SUB>25</SUB>>", "199": "<(LOCAL,int k: int)<SUB>26</SUB>>", "201": "<(IDENTIFIER,k,int k = 0)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.lessThan,k &lt; K)<SUB>26</SUB>>", "205": "<(IDENTIFIER,K,k &lt; K)<SUB>26</SUB>>", "207": "<(IDENTIFIER,k,k++)<SUB>26</SUB>>", "209": "<(&lt;operator&gt;.assignment,W = Math.min(W, Math.abs(i - x[k]) + Math.abs(j - y[k])))<SUB>27</SUB>>", "211": "<(min,Math.min(W, Math.abs(i - x[k]) + Math.abs(j - y[k])))<SUB>27</SUB>>", "213": "<(IDENTIFIER,W,Math.min(W, Math.abs(i - x[k]) + Math.abs(j - y[k])))<SUB>27</SUB>>", "215": "<(abs,Math.abs(i - x[k]))<SUB>27</SUB>>", "217": "<(&lt;operator&gt;.subtraction,i - x[k])<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,x[k])<SUB>27</SUB>>", "221": "<(IDENTIFIER,k,i - x[k])<SUB>27</SUB>>", "223": "<(IDENTIFIER,Math,Math.abs(j - y[k]))<SUB>27</SUB>>", "225": "<(IDENTIFIER,j,j - y[k])<SUB>27</SUB>>", "227": "<(IDENTIFIER,y,j - y[k])<SUB>27</SUB>>", "229": "<(CONTROL_STRUCTURE,if (W &lt; ans),if (W &lt; ans))<SUB>29</SUB>>", "231": "<(IDENTIFIER,W,W &lt; ans)<SUB>29</SUB>>", "233": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>29</SUB>>", "235": "<(IDENTIFIER,ans,ans = W)<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.assignment,ansX = i)<SUB>31</SUB>>", "239": "<(IDENTIFIER,i,ansX = i)<SUB>31</SUB>>", "241": "<(IDENTIFIER,ansY,ansY = j)<SUB>32</SUB>>", "243": "<(write,write(Integer.toString(ansX) + &quot; &quot; + Integer.toString(ansY)))<SUB>35</SUB>>", "245": "<(&lt;operator&gt;.addition,Integer.toString(ansX) + &quot; &quot; + Integer.toString(ansY))<SUB>35</SUB>>", "247": "<(toString,Integer.toString(ansX))<SUB>35</SUB>>", "249": "<(IDENTIFIER,ansX,Integer.toString(ansX))<SUB>35</SUB>>", "251": "<(toString,Integer.toString(ansY))<SUB>35</SUB>>", "253": "<(IDENTIFIER,ansY,Integer.toString(ansY))<SUB>35</SUB>>", "255": "<(IDENTIFIER,br,close())<SUB>36</SUB>>", "257": "<(IDENTIFIER,bw,close())<SUB>37</SUB>>", "259": "<(MODIFIER,STATIC)>"}}