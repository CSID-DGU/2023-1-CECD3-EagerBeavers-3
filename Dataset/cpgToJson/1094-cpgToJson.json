{"edges": [["19", "21"], ["19", "195"], ["19", "196"], ["19", "197"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "44"], ["21", "65"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "64"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "81"], ["75", "85"], ["75", "86"], ["75", "90"], ["75", "91"], ["75", "94"], ["75", "178"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "102"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "112"], ["102", "114"], ["102", "117"], ["102", "122"], ["102", "131"], ["102", "164"], ["102", "173"], ["102", "176"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "141"], ["131", "143"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "155"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["178", "182"], ["178", "189"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["39", "46"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "39"], ["46", "49"], ["49", "55"], ["49", "67"], ["52", "49"], ["54", "52"], ["67", "70"], ["70", "197"], ["70", "77"], ["73", "70"], ["28", "26"], ["55", "61"], ["58", "54"], ["77", "83"], ["81", "88"], ["86", "91"], ["91", "96"], ["59", "58"], ["83", "81"], ["88", "86"], ["95", "104"], ["95", "179"], ["179", "185"], ["179", "193"], ["182", "73"], ["61", "59"], ["96", "95"], ["96", "99"], ["99", "95"], ["112", "114"], ["114", "118"], ["173", "176"], ["176", "96"], ["183", "186"], ["186", "182"], ["190", "73"], ["104", "108"], ["104", "112"], ["118", "179"], ["118", "123"], ["123", "127"], ["123", "133"], ["133", "139"], ["136", "147"], ["136", "165"], ["141", "139"], ["165", "169"], ["165", "173"], ["185", "183"], ["191", "190"], ["108", "179"], ["127", "179"], ["138", "136"], ["144", "156"], ["169", "179"], ["193", "191"], ["139", "138"], ["146", "144"], ["156", "160"], ["156", "141"], ["147", "151"], ["150", "146"], ["160", "165"], ["151", "150"], ["19", "24"], ["20", "197"], ["22", "197"], ["25", "197"], ["25", "197"], ["32", "197"], ["30", "197"], ["30", "197"], ["35", "197"], ["35", "197"], ["35", "197"], ["39", "197"], ["39", "197"], ["46", "197"], ["49", "197"], ["49", "197"], ["67", "197"], ["70", "197"], ["70", "197"], ["70", "197"], ["73", "197"], ["52", "197"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "39"], ["22", "25"], ["19", "25"], ["19", "46"], ["58", "54"], ["58", "54"], ["19", "67"], ["25", "32"], ["19", "32"], ["19", "37"], ["46", "49"], ["52", "49"], ["19", "49"], ["61", "52"], ["19", "52"], ["67", "70"], ["73", "70"], ["19", "70"], ["30", "70"], ["70", "73"], ["19", "73"], ["19", "77"], ["83", "81"], ["88", "86"], ["19", "91"], ["35", "58"], ["19", "58"], ["32", "83"], ["88", "83"], ["19", "83"], ["83", "88"], ["19", "88"], ["96", "95"], ["96", "95"], ["99", "95"], ["99", "95"], ["91", "114"], ["176", "114"], ["19", "114"], ["19", "173"], ["96", "179"], ["118", "179"], ["169", "179"], ["127", "179"], ["108", "179"], ["19", "179"], ["190", "182"], ["19", "182"], ["81", "182"], ["99", "182"], ["112", "182"], ["123", "182"], ["49", "61"], ["19", "61"], ["86", "96"], ["165", "96"], ["19", "96"], ["81", "99"], ["19", "99"], ["123", "99"], ["81", "112"], ["99", "112"], ["19", "112"], ["123", "112"], ["104", "114"], ["19", "133"], ["151", "173"], ["91", "173"], ["176", "173"], ["173", "176"], ["19", "176"], ["19", "186"], ["81", "186"], ["99", "186"], ["112", "186"], ["123", "186"], ["182", "190"], ["19", "190"], ["96", "104"], ["19", "104"], ["77", "104"], ["165", "104"], ["19", "108"], ["114", "118"], ["19", "118"], ["112", "123"], ["19", "123"], ["19", "127"], ["133", "136"], ["141", "136"], ["19", "136"], ["123", "136"], ["136", "141"], ["19", "141"], ["146", "144"], ["146", "144"], ["118", "165"], ["156", "165"], ["160", "165"], ["19", "165"], ["104", "165"], ["156", "165"], ["19", "169"], ["19", "138"], ["123", "138"], ["104", "144"], ["156", "144"], ["19", "144"], ["35", "146"], ["54", "146"], ["150", "146"], ["150", "146"], ["118", "156"], ["19", "156"], ["144", "156"], ["19", "160"], ["151", "150"], ["151", "150"], ["19", "150"], ["19", "151"], ["91", "151"], ["176", "151"], ["49", "52"], ["49", "59"], ["49", "54"], ["49", "58"], ["49", "61"], ["49", "49"], ["49", "55"], ["70", "73"], ["70", "96"], ["70", "77"], ["70", "81"], ["70", "179"], ["70", "95"], ["70", "91"], ["70", "88"], ["70", "70"], ["70", "86"], ["70", "83"], ["95", "104"], ["179", "185"], ["179", "191"], ["179", "190"], ["179", "182"], ["179", "186"], ["179", "183"], ["179", "193"], ["96", "99"], ["104", "114"], ["104", "112"], ["104", "118"], ["104", "108"], ["118", "123"], ["123", "136"], ["123", "138"], ["123", "127"], ["123", "139"], ["123", "165"], ["123", "133"], ["136", "146"], ["136", "150"], ["136", "151"], ["136", "144"], ["136", "147"], ["136", "156"], ["165", "96"], ["165", "169"], ["165", "95"], ["165", "173"], ["165", "176"], ["156", "136"], ["156", "138"], ["156", "139"], ["156", "160"], ["156", "141"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int q: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,q,int q = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long[] d = new long[30])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[30])>", "39": "<(&lt;operator&gt;.assignment,d[0] = 1)<SUB>5</SUB>>", "41": "<(IDENTIFIER,d,d[0] = 1)<SUB>5</SUB>>", "43": "<(LITERAL,1,d[0] = 1)<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 1)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; 30)<SUB>6</SUB>>", "51": "<(LITERAL,30,i &lt; 30)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,d[i] = d[i - 1] * 4)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,d[i - 1])<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,i - 1)<SUB>6</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int z = 0; Some(z &lt; q); z++),for (int z = 0; Some(z &lt; q); z++))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,int z = 0)<SUB>7</SUB>>", "69": "<(LITERAL,0,int z = 0)<SUB>7</SUB>>", "71": "<(IDENTIFIER,z,z &lt; q)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,z++)<SUB>7</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.assignment,long r = 0)<SUB>8</SUB>>", "79": "<(LITERAL,0,long r = 0)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>9</SUB>>", "83": "<(nextLong,nextLong())<SUB>9</SUB>>", "85": "<(LOCAL,long k: long)<SUB>10</SUB>>", "87": "<(IDENTIFIER,k,long k = nextLong())<SUB>10</SUB>>", "89": "<(IDENTIFIER,sc,nextLong())<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,long c = 1)<SUB>11</SUB>>", "93": "<(LITERAL,1,long c = 1)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.logicalAnd,k &gt; 0 &amp;&amp; n &gt;= 1)<SUB>12</SUB>>", "97": "<(IDENTIFIER,k,k &gt; 0)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.greaterEqualsThan,n &gt;= 1)<SUB>12</SUB>>", "101": "<(LITERAL,1,n &gt;= 1)<SUB>12</SUB>>", "103": "<(CONTROL_STRUCTURE,if (k &lt;= r),if (k &lt;= r))<SUB>13</SUB>>", "105": "<(IDENTIFIER,k,k &lt;= r)<SUB>13</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "109": "<(IDENTIFIER,k,k = 0)<SUB>14</SUB>>", "111": "<(CONTROL_STRUCTURE,break;,break;)<SUB>15</SUB>>", "113": "<(IDENTIFIER,n,n--)<SUB>17</SUB>>", "115": "<(IDENTIFIER,k,k -= c)<SUB>18</SUB>>", "117": "<(CONTROL_STRUCTURE,if (k &lt;= 0),if (k &lt;= 0))<SUB>19</SUB>>", "119": "<(IDENTIFIER,k,k &lt;= 0)<SUB>19</SUB>>", "121": "<(CONTROL_STRUCTURE,break;,break;)<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.greaterThan,n &gt; 30)<SUB>22</SUB>>", "125": "<(LITERAL,30,n &gt; 30)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.assignment,k = 0)<SUB>23</SUB>>", "129": "<(LITERAL,0,k = 0)<SUB>23</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (int) n); i++),for (int i = 0; Some(i &lt; (int) n); i++))<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "135": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "137": "<(IDENTIFIER,i,i &lt; (int) n)<SUB>26</SUB>>", "139": "<(TYPE_REF,int,int)<SUB>26</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "145": "<(IDENTIFIER,r,r += d[i] * (c * 2 - 1))<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>27</SUB>>", "149": "<(IDENTIFIER,i,d[i] * (c * 2 - 1))<SUB>27</SUB>>", "151": "<(&lt;operator&gt;.multiplication,c * 2)<SUB>27</SUB>>", "153": "<(LITERAL,2,c * 2)<SUB>27</SUB>>", "155": "<(CONTROL_STRUCTURE,if (k &lt;= r),if (k &lt;= r))<SUB>28</SUB>>", "157": "<(IDENTIFIER,k,k &lt;= r)<SUB>28</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "161": "<(IDENTIFIER,k,k = 0)<SUB>29</SUB>>", "163": "<(CONTROL_STRUCTURE,break;,break;)<SUB>30</SUB>>", "165": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= r)<SUB>33</SUB>>", "167": "<(IDENTIFIER,r,k &lt;= r)<SUB>33</SUB>>", "169": "<(&lt;operator&gt;.assignment,k = 0)<SUB>34</SUB>>", "171": "<(LITERAL,0,k = 0)<SUB>34</SUB>>", "173": "<(&lt;operator&gt;.assignmentMultiplication,c *= 2)<SUB>37</SUB>>", "175": "<(LITERAL,2,c *= 2)<SUB>37</SUB>>", "177": "<(IDENTIFIER,c,c++)<SUB>38</SUB>>", "179": "<(&lt;operator&gt;.equals,k == 0)<SUB>40</SUB>>", "181": "<(LITERAL,0,k == 0)<SUB>40</SUB>>", "183": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "185": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "187": "<(LITERAL,&quot;YES &quot;,&quot;YES &quot; + n)<SUB>40</SUB>>", "189": "<(CONTROL_STRUCTURE,else,else)<SUB>41</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>41</SUB>>", "193": "<(FIELD_IDENTIFIER,out,out)<SUB>41</SUB>>", "195": "<(MODIFIER,PUBLIC)>", "197": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}