{"edges": [["21", "22"], ["21", "23"], ["21", "230"], ["21", "231"], ["21", "232"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "52"], ["23", "53"], ["23", "56"], ["23", "57"], ["23", "63"], ["23", "64"], ["23", "71"], ["23", "72"], ["23", "79"], ["23", "80"], ["23", "83"], ["23", "84"], ["23", "90"], ["23", "141"], ["23", "142"], ["23", "145"], ["23", "146"], ["23", "150"], ["23", "151"], ["23", "154"], ["23", "211"], ["23", "213"], ["23", "220"], ["23", "226"], ["23", "228"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "102"], ["100", "108"], ["100", "109"], ["100", "116"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["106", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "124"], ["116", "129"], ["116", "131"], ["118", "119"], ["118", "120"], ["120", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "140"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "160"], ["154", "162"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "208"], ["168", "169"], ["168", "173"], ["168", "176"], ["169", "170"], ["169", "171"], ["171", "172"], ["173", "174"], ["174", "175"], ["176", "177"], ["177", "178"], ["178", "179"], ["178", "192"], ["178", "194"], ["179", "180"], ["179", "191"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "205"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["220", "223"], ["220", "224"], ["224", "225"], ["226", "227"], ["228", "229"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "53"], ["53", "60"], ["57", "68"], ["64", "76"], ["72", "80"], ["80", "87"], ["84", "92"], ["142", "148"], ["146", "151"], ["151", "159"], ["211", "216"], ["213", "224"], ["220", "226"], ["226", "228"], ["228", "232"], ["26", "24"], ["40", "38"], ["59", "57"], ["66", "64"], ["74", "72"], ["86", "84"], ["92", "95"], ["95", "106"], ["95", "142"], ["98", "95"], ["148", "146"], ["155", "160"], ["160", "164"], ["160", "211"], ["215", "213"], ["224", "220"], ["29", "36"], ["32", "27"], ["43", "50"], ["46", "41"], ["60", "59"], ["68", "66"], ["76", "74"], ["87", "86"], ["102", "113"], ["109", "121"], ["157", "155"], ["216", "215"], ["31", "29"], ["34", "32"], ["45", "43"], ["48", "46"], ["104", "102"], ["111", "109"], ["118", "126"], ["124", "136"], ["124", "98"], ["129", "126"], ["159", "157"], ["164", "160"], ["164", "171"], ["36", "34"], ["50", "48"], ["106", "104"], ["113", "111"], ["120", "118"], ["126", "124"], ["132", "129"], ["208", "160"], ["121", "120"], ["133", "132"], ["169", "174"], ["169", "183"], ["135", "133"], ["171", "169"], ["174", "208"], ["136", "135"], ["179", "192"], ["179", "197"], ["192", "208"], ["180", "179"], ["182", "180"], ["196", "205"], ["196", "208"], ["205", "208"], ["183", "187"], ["186", "182"], ["197", "201"], ["200", "196"], ["187", "186"], ["201", "200"], ["21", "26"], ["22", "232"], ["24", "232"], ["32", "232"], ["32", "232"], ["32", "232"], ["27", "232"], ["38", "232"], ["43", "232"], ["46", "232"], ["46", "232"], ["46", "232"], ["41", "232"], ["53", "232"], ["57", "232"], ["59", "232"], ["57", "232"], ["57", "232"], ["66", "232"], ["64", "232"], ["64", "232"], ["72", "232"], ["74", "232"], ["72", "232"], ["72", "232"], ["80", "232"], ["84", "232"], ["87", "232"], ["86", "232"], ["84", "232"], ["84", "232"], ["92", "232"], ["95", "232"], ["95", "232"], ["95", "232"], ["142", "232"], ["146", "232"], ["146", "232"], ["146", "232"], ["151", "232"], ["155", "232"], ["155", "232"], ["160", "232"], ["160", "232"], ["211", "232"], ["216", "232"], ["215", "232"], ["213", "232"], ["213", "232"], ["220", "232"], ["220", "232"], ["220", "232"], ["226", "232"], ["228", "232"], ["228", "232"], ["169", "232"], ["169", "232"], ["182", "232"], ["187", "232"], ["186", "232"], ["182", "232"], ["180", "232"], ["179", "232"], ["179", "232"], ["196", "232"], ["201", "232"], ["200", "232"], ["196", "232"], ["196", "232"], ["205", "232"], ["208", "232"], ["208", "232"], ["102", "232"], ["104", "232"], ["102", "232"], ["102", "232"], ["109", "232"], ["111", "232"], ["109", "232"], ["109", "232"], ["118", "232"], ["118", "232"], ["124", "232"], ["124", "232"], ["124", "232"], ["98", "232"], ["136", "232"], ["136", "232"], ["135", "232"], ["132", "232"], ["132", "232"], ["129", "232"], ["74", "232"], ["180", "232"], ["66", "232"], ["104", "232"], ["21", "22"], ["21", "24"], ["21", "38"], ["21", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["74", "72"], ["74", "72"], ["21", "80"], ["86", "84"], ["21", "142"], ["148", "146"], ["21", "151"], ["21", "213"], ["211", "213"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["43", "41"], ["46", "41"], ["21", "92"], ["142", "211"], ["205", "211"], ["192", "211"], ["174", "211"], ["21", "211"], ["41", "220"], ["21", "220"], ["224", "220"], ["60", "226"], ["106", "226"], ["21", "226"], ["220", "228"], ["21", "228"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "51"], ["60", "59"], ["21", "59"], ["21", "66"], ["57", "66"], ["21", "74"], ["57", "74"], ["80", "86"], ["21", "86"], ["92", "95"], ["98", "95"], ["21", "95"], ["64", "95"], ["95", "98"], ["21", "98"], ["104", "102"], ["104", "102"], ["111", "109"], ["111", "109"], ["21", "148"], ["151", "155"], ["21", "155"], ["84", "155"], ["155", "160"], ["21", "160"], ["183", "160"], ["197", "160"], ["21", "215"], ["211", "215"], ["213", "224"], ["21", "224"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["27", "60"], ["21", "60"], ["80", "87"], ["21", "87"], ["120", "118"], ["21", "216"], ["211", "216"], ["21", "104"], ["106", "104"], ["21", "111"], ["102", "111"], ["118", "124"], ["129", "124"], ["21", "124"], ["102", "124"], ["120", "124"], ["21", "129"], ["124", "129"], ["21", "132"], ["160", "208"], ["183", "208"], ["197", "208"], ["21", "208"], ["60", "106"], ["21", "106"], ["102", "120"], ["124", "120"], ["146", "169"], ["208", "169"], ["21", "169"], ["171", "169"], ["109", "135"], ["21", "135"], ["80", "135"], ["124", "135"], ["21", "171"], ["142", "174"], ["205", "174"], ["192", "174"], ["21", "174"], ["109", "136"], ["21", "136"], ["80", "136"], ["180", "179"], ["180", "179"], ["21", "179"], ["142", "192"], ["205", "192"], ["174", "192"], ["21", "192"], ["21", "180"], ["182", "180"], ["182", "180"], ["21", "205"], ["183", "182"], ["183", "182"], ["187", "182"], ["187", "182"], ["21", "182"], ["197", "196"], ["197", "196"], ["201", "196"], ["201", "196"], ["21", "196"], ["142", "205"], ["192", "205"], ["174", "205"], ["160", "183"], ["21", "183"], ["169", "183"], ["187", "186"], ["187", "186"], ["21", "186"], ["183", "197"], ["21", "197"], ["183", "197"], ["201", "200"], ["201", "200"], ["21", "200"], ["21", "187"], ["72", "187"], ["201", "187"], ["21", "201"], ["187", "201"], ["95", "98"], ["95", "120"], ["95", "113"], ["95", "102"], ["95", "104"], ["95", "121"], ["95", "95"], ["95", "106"], ["95", "126"], ["95", "118"], ["95", "124"], ["95", "111"], ["95", "109"], ["160", "160"], ["160", "164"], ["124", "136"], ["124", "132"], ["124", "129"], ["124", "126"], ["124", "135"], ["124", "124"], ["124", "133"], ["164", "169"], ["164", "208"], ["164", "171"], ["169", "183"], ["169", "179"], ["169", "187"], ["169", "174"], ["169", "182"], ["169", "186"], ["169", "180"], ["179", "192"], ["179", "196"], ["179", "197"], ["179", "200"], ["179", "201"], ["196", "205"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,bw,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "49": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.assignment,String out = &quot;&quot;)<SUB>4</SUB>>", "55": "<(LITERAL,&quot;&quot;,String out = &quot;&quot;)<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.assignment,String[] p = split(&quot;[ ]&quot;))<SUB>5</SUB>>", "59": "<(split,split(&quot;[ ]&quot;))<SUB>5</SUB>>", "61": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "63": "<(LOCAL,int n: int)<SUB>6</SUB>>", "65": "<(IDENTIFIER,n,int n = Integer.valueOf(p[0]))<SUB>6</SUB>>", "67": "<(IDENTIFIER,Integer,Integer.valueOf(p[0]))<SUB>6</SUB>>", "69": "<(IDENTIFIER,p,Integer.valueOf(p[0]))<SUB>6</SUB>>", "71": "<(LOCAL,double t: double)<SUB>7</SUB>>", "73": "<(IDENTIFIER,t,double t = Double.valueOf(p[1]))<SUB>7</SUB>>", "75": "<(IDENTIFIER,Double,Double.valueOf(p[1]))<SUB>7</SUB>>", "77": "<(IDENTIFIER,p,Double.valueOf(p[1]))<SUB>7</SUB>>", "79": "<(LOCAL,int offset: int)<SUB>9</SUB>>", "81": "<(IDENTIFIER,offset,int offset = 5000)<SUB>9</SUB>>", "83": "<(LOCAL,boolean[] flags: boolean[])<SUB>10</SUB>>", "85": "<(IDENTIFIER,flags,boolean[] flags = new boolean[offset + 5000])<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.addition,offset + 5000)<SUB>10</SUB>>", "89": "<(LITERAL,5000,offset + 5000)<SUB>10</SUB>>", "91": "<(LOCAL,int i: int)<SUB>11</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "101": "<(LOCAL,int[] q: int[])<SUB>12</SUB>>", "103": "<(IDENTIFIER,q,int[] q = toIntArray(br.readLine()))<SUB>12</SUB>>", "105": "<(IDENTIFIER,this,toIntArray(br.readLine()))<SUB>12</SUB>>", "107": "<(IDENTIFIER,br,readLine())<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.assignment,int c = 2 * q[0])<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.multiplication,2 * q[0])<SUB>13</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,q[0])<SUB>13</SUB>>", "115": "<(LITERAL,0,2 * q[0])<SUB>13</SUB>>", "117": "<(LOCAL,int j: int)<SUB>14</SUB>>", "119": "<(IDENTIFIER,j,int j = -q[1])<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,q[1])<SUB>14</SUB>>", "123": "<(LITERAL,1,-q[1])<SUB>14</SUB>>", "125": "<(IDENTIFIER,j,j &lt; q[1])<SUB>14</SUB>>", "127": "<(IDENTIFIER,q,j &lt; q[1])<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,flags[c + offset + j])<SUB>15</SUB>>", "135": "<(&lt;operator&gt;.addition,c + offset + j)<SUB>15</SUB>>", "137": "<(IDENTIFIER,c,c + offset)<SUB>15</SUB>>", "139": "<(IDENTIFIER,j,c + offset + j)<SUB>15</SUB>>", "141": "<(LOCAL,int buf: int)<SUB>19</SUB>>", "143": "<(IDENTIFIER,buf,int buf = 0)<SUB>19</SUB>>", "145": "<(LOCAL,int last: int)<SUB>20</SUB>>", "147": "<(IDENTIFIER,last,int last = -1)<SUB>20</SUB>>", "149": "<(LITERAL,1,-1)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.assignment,int index = 0)<SUB>21</SUB>>", "153": "<(LITERAL,0,int index = 0)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.lessThan,index &lt; flags.length)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,flags.length)<SUB>22</SUB>>", "159": "<(FIELD_IDENTIFIER,length,length)<SUB>22</SUB>>", "161": "<(IDENTIFIER,index,index++)<SUB>22</SUB>>", "163": "<(CONTROL_STRUCTURE,if (flags[index]),if (flags[index]))<SUB>23</SUB>>", "165": "<(IDENTIFIER,flags,if (flags[index]))<SUB>23</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.equals,last == -1)<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.minus,-1)<SUB>24</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "175": "<(IDENTIFIER,buf,buf++)<SUB>25</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.lessThan,Math.abs(index - last - (2 * t + 1)) &lt; 1e-10)<SUB>29</SUB>>", "181": "<(IDENTIFIER,Math,Math.abs(index - last - (2 * t + 1)))<SUB>29</SUB>>", "183": "<(&lt;operator&gt;.subtraction,index - last)<SUB>29</SUB>>", "185": "<(IDENTIFIER,last,index - last)<SUB>29</SUB>>", "187": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>29</SUB>>", "189": "<(IDENTIFIER,t,2 * t)<SUB>29</SUB>>", "191": "<(LITERAL,1e-10,Math.abs(index - last - (2 * t + 1)) &lt; 1e-10)<SUB>29</SUB>>", "193": "<(IDENTIFIER,buf,buf++)<SUB>29</SUB>>", "195": "<(CONTROL_STRUCTURE,if (index - last &gt; 2 * t + 1),if (index - last &gt; 2 * t + 1))<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.subtraction,index - last)<SUB>30</SUB>>", "199": "<(IDENTIFIER,last,index - last)<SUB>30</SUB>>", "201": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>30</SUB>>", "203": "<(IDENTIFIER,t,2 * t)<SUB>30</SUB>>", "205": "<(&lt;operator&gt;.assignmentPlus,buf += 2)<SUB>30</SUB>>", "207": "<(LITERAL,2,buf += 2)<SUB>30</SUB>>", "209": "<(IDENTIFIER,last,last = index)<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,buf++)<SUB>35</SUB>>", "213": "<(&lt;operator&gt;.assignment,out = &quot;&quot; + buf + &quot;\\r\\n&quot;)<SUB>36</SUB>>", "215": "<(&lt;operator&gt;.addition,&quot;&quot; + buf + &quot;\\r\\n&quot;)<SUB>36</SUB>>", "217": "<(LITERAL,&quot;&quot;,&quot;&quot; + buf)<SUB>36</SUB>>", "219": "<(LITERAL,&quot;\\r\\n&quot;,&quot;&quot; + buf + &quot;\\r\\n&quot;)<SUB>36</SUB>>", "221": "<(IDENTIFIER,bw,write(out, 0, out.length()))<SUB>37</SUB>>", "223": "<(LITERAL,0,write(out, 0, out.length()))<SUB>37</SUB>>", "225": "<(IDENTIFIER,out,out.length())<SUB>37</SUB>>", "227": "<(IDENTIFIER,br,close())<SUB>38</SUB>>", "229": "<(IDENTIFIER,bw,close())<SUB>39</SUB>>", "231": "<(MODIFIER,STATIC)>"}}