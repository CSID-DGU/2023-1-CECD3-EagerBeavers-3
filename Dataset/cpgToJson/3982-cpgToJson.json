{"edges": [["19", "20"], ["19", "21"], ["19", "314"], ["19", "315"], ["19", "316"], ["21", "22"], ["21", "4"], ["21", "39"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "48"], ["21", "52"], ["21", "56"], ["21", "71"], ["21", "72"], ["21", "75"], ["21", "88"], ["21", "89"], ["21", "93"], ["21", "132"], ["21", "133"], ["21", "138"], ["21", "175"], ["21", "285"], ["21", "286"], ["21", "289"], ["21", "309"], ["22", "23"], ["22", "24"], ["24", "25"], ["25", "26"], ["25", "37"], ["26", "27"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "33"], ["29", "36"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["37", "38"], ["39", "40"], ["39", "41"], ["42", "3"], ["42", "43"], ["43", "44"], ["43", "45"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "123"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "120"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "156"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "164"], ["156", "166"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["175", "180"], ["175", "183"], ["175", "185"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["185", "187"], ["185", "192"], ["185", "282"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "210"], ["202", "212"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["212", "214"], ["212", "227"], ["212", "230"], ["212", "231"], ["212", "234"], ["212", "275"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "226"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["234", "239"], ["234", "242"], ["234", "244"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["244", "264"], ["245", "246"], ["245", "253"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "281"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["289", "294"], ["289", "297"], ["289", "299"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["297", "298"], ["299", "300"], ["299", "301"], ["301", "302"], ["301", "303"], ["301", "304"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["309", "310"], ["309", "313"], ["310", "311"], ["310", "312"], ["39", "45"], ["42", "50"], ["48", "54"], ["52", "57"], ["72", "77"], ["89", "95"], ["133", "140"], ["286", "291"], ["309", "316"], ["23", "32"], ["23", "41"], ["41", "39"], ["43", "42"], ["50", "48"], ["54", "52"], ["57", "62"], ["57", "72"], ["77", "80"], ["80", "85"], ["80", "91"], ["83", "80"], ["85", "83"], ["91", "89"], ["95", "98"], ["98", "105"], ["98", "135"], ["101", "98"], ["135", "133"], ["140", "143"], ["143", "151"], ["143", "177"], ["146", "143"], ["177", "180"], ["180", "189"], ["180", "286"], ["183", "180"], ["291", "294"], ["294", "305"], ["294", "312"], ["297", "294"], ["299", "297"], ["310", "309"], ["45", "43"], ["62", "65"], ["65", "68"], ["68", "72"], ["105", "109"], ["123", "101"], ["149", "158"], ["187", "194"], ["282", "183"], ["301", "299"], ["312", "310"], ["109", "114"], ["109", "124"], ["124", "129"], ["127", "123"], ["150", "149"], ["158", "161"], ["161", "168"], ["161", "146"], ["164", "161"], ["166", "164"], ["189", "187"], ["194", "197"], ["197", "204"], ["197", "282"], ["200", "197"], ["304", "301"], ["27", "41"], ["113", "120"], ["120", "109"], ["129", "127"], ["151", "150"], ["167", "174"], ["172", "166"], ["204", "207"], ["207", "220"], ["207", "200"], ["210", "207"], ["305", "304"], ["114", "117"], ["117", "113"], ["168", "167"], ["174", "172"], ["214", "227"], ["227", "231"], ["231", "236"], ["275", "210"], ["30", "33"], ["33", "27"], ["216", "214"], ["236", "239"], ["239", "247"], ["239", "277"], ["242", "239"], ["276", "275"], ["32", "30"], ["217", "216"], ["245", "267"], ["245", "242"], ["264", "242"], ["277", "276"], ["218", "223"], ["223", "217"], ["246", "245"], ["246", "256"], ["253", "245"], ["266", "264"], ["220", "218"], ["247", "250"], ["250", "246"], ["255", "253"], ["267", "271"], ["270", "266"], ["256", "260"], ["259", "255"], ["271", "270"], ["260", "259"], ["19", "23"], ["20", "316"], ["27", "316"], ["30", "316"], ["33", "316"], ["33", "316"], ["27", "316"], ["39", "316"], ["42", "316"], ["42", "316"], ["48", "316"], ["54", "316"], ["52", "316"], ["52", "316"], ["57", "316"], ["62", "316"], ["65", "316"], ["68", "316"], ["68", "316"], ["72", "316"], ["80", "316"], ["80", "316"], ["89", "316"], ["89", "316"], ["89", "316"], ["133", "316"], ["133", "316"], ["133", "316"], ["177", "316"], ["180", "316"], ["180", "316"], ["180", "316"], ["286", "316"], ["291", "316"], ["294", "316"], ["294", "316"], ["294", "316"], ["309", "316"], ["309", "316"], ["309", "316"], ["301", "316"], ["299", "316"], ["299", "316"], ["297", "316"], ["187", "316"], ["187", "316"], ["282", "316"], ["282", "316"], ["282", "316"], ["183", "316"], ["204", "316"], ["207", "316"], ["207", "316"], ["200", "316"], ["218", "316"], ["217", "316"], ["217", "316"], ["216", "316"], ["214", "316"], ["214", "316"], ["227", "316"], ["231", "316"], ["236", "316"], ["239", "316"], ["239", "316"], ["275", "316"], ["275", "316"], ["275", "316"], ["210", "316"], ["247", "316"], ["246", "316"], ["246", "316"], ["245", "316"], ["255", "316"], ["255", "316"], ["253", "316"], ["245", "316"], ["245", "316"], ["266", "316"], ["266", "316"], ["264", "316"], ["264", "316"], ["242", "316"], ["149", "316"], ["149", "316"], ["158", "316"], ["161", "316"], ["161", "316"], ["146", "316"], ["166", "316"], ["166", "316"], ["166", "316"], ["164", "316"], ["105", "316"], ["109", "316"], ["109", "316"], ["123", "316"], ["127", "316"], ["123", "316"], ["123", "316"], ["101", "316"], ["113", "316"], ["113", "316"], ["120", "316"], ["85", "316"], ["83", "316"], ["301", "316"], ["19", "20"], ["19", "39"], ["50", "48"], ["54", "52"], ["19", "72"], ["91", "89"], ["135", "133"], ["19", "286"], ["19", "23"], ["39", "42"], ["19", "42"], ["27", "42"], ["19", "77"], ["19", "85"], ["19", "95"], ["19", "140"], ["19", "177"], ["19", "291"], ["301", "299"], ["301", "299"], ["301", "299"], ["27", "309"], ["286", "309"], ["299", "309"], ["19", "309"], ["42", "50"], ["19", "50"], ["50", "54"], ["19", "54"], ["48", "57"], ["19", "57"], ["52", "57"], ["57", "62"], ["19", "62"], ["57", "65"], ["19", "65"], ["62", "68"], ["19", "68"], ["77", "80"], ["83", "80"], ["19", "80"], ["57", "80"], ["68", "80"], ["80", "83"], ["19", "83"], ["72", "85"], ["72", "91"], ["85", "91"], ["19", "91"], ["95", "98"], ["101", "98"], ["19", "98"], ["91", "98"], ["19", "101"], ["98", "101"], ["98", "105"], ["19", "105"], ["127", "123"], ["127", "123"], ["98", "135"], ["19", "135"], ["140", "143"], ["146", "143"], ["19", "143"], ["135", "143"], ["161", "143"], ["143", "146"], ["19", "146"], ["19", "149"], ["177", "180"], ["183", "180"], ["19", "180"], ["57", "180"], ["65", "180"], ["180", "183"], ["19", "183"], ["189", "187"], ["187", "282"], ["19", "282"], ["291", "294"], ["297", "294"], ["19", "294"], ["143", "294"], ["197", "294"], ["294", "297"], ["19", "297"], ["19", "158"], ["19", "194"], ["19", "301"], ["286", "301"], ["299", "301"], ["19", "38"], ["105", "109"], ["120", "109"], ["19", "109"], ["117", "113"], ["117", "113"], ["19", "120"], ["80", "127"], ["19", "127"], ["89", "127"], ["123", "127"], ["113", "127"], ["158", "161"], ["164", "161"], ["19", "161"], ["143", "161"], ["161", "164"], ["19", "164"], ["143", "189"], ["197", "189"], ["19", "189"], ["194", "197"], ["200", "197"], ["19", "197"], ["189", "197"], ["207", "197"], ["197", "200"], ["223", "200"], ["19", "200"], ["19", "204"], ["19", "27"], ["30", "27"], ["33", "27"], ["89", "113"], ["123", "113"], ["117", "120"], ["204", "207"], ["210", "207"], ["19", "207"], ["197", "207"], ["239", "207"], ["216", "210"], ["19", "210"], ["216", "214"], ["216", "214"], ["207", "227"], ["19", "227"], ["19", "231"], ["231", "275"], ["253", "275"], ["264", "275"], ["19", "275"], ["19", "30"], ["19", "36"], ["109", "117"], ["19", "117"], ["214", "227"], ["19", "236"], ["30", "33"], ["19", "33"], ["217", "216"], ["217", "216"], ["207", "216"], ["19", "216"], ["236", "239"], ["242", "239"], ["19", "239"], ["250", "239"], ["207", "239"], ["247", "242"], ["19", "242"], ["89", "264"], ["123", "264"], ["166", "264"], ["218", "217"], ["218", "217"], ["223", "217"], ["223", "217"], ["246", "245"], ["246", "245"], ["253", "245"], ["253", "245"], ["220", "218"], ["19", "218"], ["220", "218"], ["218", "223"], ["19", "223"], ["247", "246"], ["247", "246"], ["250", "246"], ["250", "246"], ["231", "253"], ["264", "253"], ["19", "253"], ["89", "253"], ["123", "253"], ["166", "253"], ["89", "266"], ["123", "266"], ["166", "266"], ["197", "220"], ["223", "220"], ["19", "220"], ["239", "247"], ["19", "247"], ["227", "247"], ["239", "250"], ["19", "250"], ["89", "255"], ["123", "255"], ["166", "255"], ["23", "30"], ["23", "27"], ["23", "33"], ["23", "32"], ["57", "68"], ["57", "65"], ["57", "62"], ["80", "80"], ["80", "85"], ["80", "83"], ["98", "129"], ["98", "127"], ["98", "123"], ["98", "109"], ["98", "98"], ["98", "101"], ["98", "105"], ["98", "124"], ["143", "146"], ["143", "161"], ["143", "150"], ["143", "158"], ["143", "149"], ["143", "151"], ["143", "143"], ["180", "194"], ["180", "180"], ["180", "282"], ["180", "197"], ["180", "189"], ["180", "187"], ["180", "183"], ["294", "304"], ["294", "305"], ["294", "297"], ["294", "301"], ["294", "299"], ["294", "294"], ["109", "120"], ["109", "114"], ["109", "117"], ["109", "109"], ["109", "113"], ["161", "167"], ["161", "161"], ["161", "168"], ["161", "174"], ["161", "172"], ["161", "164"], ["161", "166"], ["197", "204"], ["197", "200"], ["197", "197"], ["197", "207"], ["207", "214"], ["207", "276"], ["207", "236"], ["207", "217"], ["207", "216"], ["207", "227"], ["207", "275"], ["207", "223"], ["207", "231"], ["207", "207"], ["207", "239"], ["207", "277"], ["207", "210"], ["207", "220"], ["207", "218"], ["239", "247"], ["239", "242"], ["239", "245"], ["239", "246"], ["239", "239"], ["239", "250"], ["245", "264"], ["245", "267"], ["245", "270"], ["245", "271"], ["245", "266"], ["246", "256"], ["246", "260"], ["246", "253"], ["246", "255"], ["246", "259"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,DEBUG,if (DEBUG))<SUB>3</SUB>>", "25": "<(CONTROL_STRUCTURE,try,try)<SUB>5</SUB>>", "27": "<(setIn,setIn(new FileInputStream(&quot;input.txt&quot;)))<SUB>6</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "31": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "33": "<(&lt;init&gt;,new FileInputStream(&quot;input.txt&quot;))<SUB>6</SUB>>", "35": "<(LITERAL,&quot;input.txt&quot;,new FileInputStream(&quot;input.txt&quot;))<SUB>6</SUB>>", "37": "<(BLOCK,catch,catch)>", "4": "<(LOCAL,Scanner sc: ANY)<SUB>12</SUB>>", "40": "<(IDENTIFIER,sc,ANY sc = new Scanner(System.in))<SUB>12</SUB>>", "42": "<(&lt;init&gt;,new Scanner(System.in))<SUB>12</SUB>>", "43": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>12</SUB>>", "45": "<(FIELD_IDENTIFIER,in,in)<SUB>12</SUB>>", "47": "<(LOCAL,int m: int)<SUB>15</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>15</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>15</SUB>>", "53": "<(IDENTIFIER,m,int m = nextInt())<SUB>15</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>15</SUB>>", "57": "<(&lt;operator&gt;.lessThan,n &lt; m)<SUB>18</SUB>>", "59": "<(IDENTIFIER,m,n &lt; m)<SUB>18</SUB>>", "61": "<(LOCAL,int tmp: int)<SUB>19</SUB>>", "63": "<(IDENTIFIER,tmp,int tmp = n)<SUB>19</SUB>>", "65": "<(&lt;operator&gt;.assignment,n = m)<SUB>20</SUB>>", "67": "<(IDENTIFIER,m,n = m)<SUB>20</SUB>>", "69": "<(IDENTIFIER,m,m = tmp)<SUB>21</SUB>>", "71": "<(LOCAL,int pow: int)<SUB>24</SUB>>", "73": "<(IDENTIFIER,pow,int pow = 1)<SUB>24</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>25</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "81": "<(IDENTIFIER,i,i &lt; m)<SUB>25</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "85": "<(&lt;operator&gt;.assignmentMultiplication,pow *= 2)<SUB>26</SUB>>", "87": "<(LITERAL,2,pow *= 2)<SUB>26</SUB>>", "89": "<(&lt;operator&gt;.assignment,int[] count = new int[pow])<SUB>28</SUB>>", "91": "<(&lt;operator&gt;.alloc,new int[pow])>", "93": "<(CONTROL_STRUCTURE,for (int cur = 0; Some(cur &lt; pow); cur++),for (int cur = 0; Some(cur &lt; pow); cur++))<SUB>29</SUB>>", "95": "<(&lt;operator&gt;.assignment,int cur = 0)<SUB>29</SUB>>", "97": "<(LITERAL,0,int cur = 0)<SUB>29</SUB>>", "99": "<(IDENTIFIER,cur,cur &lt; pow)<SUB>29</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,cur++)<SUB>29</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "105": "<(&lt;operator&gt;.assignment,int x = cur)<SUB>31</SUB>>", "107": "<(IDENTIFIER,cur,int x = cur)<SUB>31</SUB>>", "109": "<(&lt;operator&gt;.greaterThan,x &gt; 0)<SUB>32</SUB>>", "111": "<(LITERAL,0,x &gt; 0)<SUB>32</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,count[cur] += x % 2)<SUB>34</SUB>>", "115": "<(IDENTIFIER,count,count[cur] += x % 2)<SUB>34</SUB>>", "117": "<(&lt;operator&gt;.modulo,x % 2)<SUB>34</SUB>>", "119": "<(LITERAL,2,x % 2)<SUB>34</SUB>>", "121": "<(IDENTIFIER,x,x /= 2)<SUB>35</SUB>>", "123": "<(&lt;operator&gt;.assignment,count[cur] = m - count[cur])<SUB>37</SUB>>", "125": "<(IDENTIFIER,count,count[cur] = m - count[cur])<SUB>37</SUB>>", "127": "<(&lt;operator&gt;.subtraction,m - count[cur])<SUB>37</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,count[cur])<SUB>37</SUB>>", "131": "<(IDENTIFIER,cur,m - count[cur])<SUB>37</SUB>>", "133": "<(&lt;operator&gt;.assignment,int[][] C = new int[pow][pow])<SUB>41</SUB>>", "135": "<(&lt;operator&gt;.alloc,new int[pow][pow])>", "137": "<(IDENTIFIER,pow,new int[pow][pow])<SUB>41</SUB>>", "139": "<(LOCAL,int cur: int)<SUB>42</SUB>>", "141": "<(IDENTIFIER,cur,int cur = 0)<SUB>42</SUB>>", "143": "<(&lt;operator&gt;.lessThan,cur &lt; pow)<SUB>42</SUB>>", "145": "<(IDENTIFIER,pow,cur &lt; pow)<SUB>42</SUB>>", "147": "<(IDENTIFIER,cur,cur++)<SUB>42</SUB>>", "149": "<(&lt;operator&gt;.assignment,C[0][cur] = 0)<SUB>44</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,C[0])<SUB>44</SUB>>", "153": "<(LITERAL,0,C[0][cur] = 0)<SUB>44</SUB>>", "155": "<(LITERAL,0,C[0][cur] = 0)<SUB>44</SUB>>", "157": "<(LOCAL,int last: int)<SUB>45</SUB>>", "159": "<(IDENTIFIER,last,int last = 1)<SUB>45</SUB>>", "161": "<(&lt;operator&gt;.lessThan,last &lt; pow)<SUB>45</SUB>>", "163": "<(IDENTIFIER,pow,last &lt; pow)<SUB>45</SUB>>", "165": "<(IDENTIFIER,last,last++)<SUB>45</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,C[last][cur])<SUB>46</SUB>>", "169": "<(IDENTIFIER,C,C[last][cur] = Integer.MIN_VALUE)<SUB>46</SUB>>", "171": "<(IDENTIFIER,cur,C[last][cur] = Integer.MIN_VALUE)<SUB>46</SUB>>", "173": "<(IDENTIFIER,Integer,C[last][cur] = Integer.MIN_VALUE)<SUB>46</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>49</SUB>>", "177": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>49</SUB>>", "179": "<(LITERAL,0,int i = 0)<SUB>49</SUB>>", "181": "<(IDENTIFIER,i,i &lt; n)<SUB>49</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,i++)<SUB>49</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "187": "<(&lt;operator&gt;.assignment,int[][] newC = new int[pow][pow])<SUB>51</SUB>>", "189": "<(&lt;operator&gt;.alloc,new int[pow][pow])>", "191": "<(IDENTIFIER,pow,new int[pow][pow])<SUB>51</SUB>>", "193": "<(LOCAL,int cur: int)<SUB>53</SUB>>", "195": "<(IDENTIFIER,cur,int cur = 0)<SUB>53</SUB>>", "197": "<(&lt;operator&gt;.lessThan,cur &lt; pow)<SUB>53</SUB>>", "199": "<(IDENTIFIER,pow,cur &lt; pow)<SUB>53</SUB>>", "201": "<(IDENTIFIER,cur,cur++)<SUB>53</SUB>>", "203": "<(LOCAL,int next: int)<SUB>54</SUB>>", "205": "<(IDENTIFIER,next,int next = 0)<SUB>54</SUB>>", "207": "<(&lt;operator&gt;.lessThan,next &lt; pow)<SUB>54</SUB>>", "209": "<(IDENTIFIER,pow,next &lt; pow)<SUB>54</SUB>>", "211": "<(IDENTIFIER,next,next++)<SUB>54</SUB>>", "213": "<(LOCAL,int mask: int)<SUB>56</SUB>>", "215": "<(IDENTIFIER,mask,int mask = cur | (cur &lt;&lt; 1) | (cur &gt;&gt; 1) | next)<SUB>56</SUB>>", "217": "<(&lt;operator&gt;.or,cur | (cur &lt;&lt; 1) | (cur &gt;&gt; 1))<SUB>56</SUB>>", "219": "<(IDENTIFIER,cur,cur | (cur &lt;&lt; 1))<SUB>56</SUB>>", "221": "<(IDENTIFIER,cur,cur &lt;&lt; 1)<SUB>56</SUB>>", "223": "<(&lt;operator&gt;.logicalShiftRight,cur &gt;&gt; 1)<SUB>56</SUB>>", "225": "<(LITERAL,1,cur &gt;&gt; 1)<SUB>56</SUB>>", "227": "<(&lt;operators&gt;.assignmentModulo,mask %= pow)<SUB>57</SUB>>", "229": "<(IDENTIFIER,pow,mask %= pow)<SUB>57</SUB>>", "231": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>59</SUB>>", "233": "<(LITERAL,0,int max = 0)<SUB>59</SUB>>", "235": "<(LOCAL,int last: int)<SUB>60</SUB>>", "237": "<(IDENTIFIER,last,int last = 0)<SUB>60</SUB>>", "239": "<(&lt;operator&gt;.lessThan,last &lt; pow)<SUB>60</SUB>>", "241": "<(IDENTIFIER,pow,last &lt; pow)<SUB>60</SUB>>", "243": "<(IDENTIFIER,last,last++)<SUB>60</SUB>>", "245": "<(&lt;operator&gt;.logicalAnd,((last | mask) == pow - 1) &amp;&amp; (max &lt; count[cur] + C[last][cur]))<SUB>61</SUB>>", "247": "<(&lt;operator&gt;.or,last | mask)<SUB>61</SUB>>", "249": "<(IDENTIFIER,mask,last | mask)<SUB>61</SUB>>", "251": "<(IDENTIFIER,pow,pow - 1)<SUB>61</SUB>>", "253": "<(&lt;operator&gt;.lessThan,max &lt; count[cur] + C[last][cur])<SUB>61</SUB>>", "255": "<(&lt;operator&gt;.addition,count[cur] + C[last][cur])<SUB>61</SUB>>", "257": "<(IDENTIFIER,count,count[cur] + C[last][cur])<SUB>61</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,C[last][cur])<SUB>61</SUB>>", "261": "<(IDENTIFIER,C,count[cur] + C[last][cur])<SUB>61</SUB>>", "263": "<(IDENTIFIER,cur,count[cur] + C[last][cur])<SUB>61</SUB>>", "265": "<(IDENTIFIER,max,max = count[cur] + C[last][cur])<SUB>62</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,count[cur])<SUB>62</SUB>>", "269": "<(IDENTIFIER,cur,count[cur] + C[last][cur])<SUB>62</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,C[last])<SUB>62</SUB>>", "273": "<(IDENTIFIER,last,count[cur] + C[last][cur])<SUB>62</SUB>>", "275": "<(&lt;operator&gt;.assignment,newC[cur][next] = max)<SUB>64</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,newC[cur])<SUB>64</SUB>>", "279": "<(IDENTIFIER,cur,newC[cur][next] = max)<SUB>64</SUB>>", "281": "<(IDENTIFIER,max,newC[cur][next] = max)<SUB>64</SUB>>", "283": "<(IDENTIFIER,C,C = newC)<SUB>66</SUB>>", "285": "<(LOCAL,int result: int)<SUB>69</SUB>>", "287": "<(IDENTIFIER,result,int result = 0)<SUB>69</SUB>>", "289": "<(CONTROL_STRUCTURE,for (int cur = 0; Some(cur &lt; pow); cur++),for (int cur = 0; Some(cur &lt; pow); cur++))<SUB>70</SUB>>", "291": "<(&lt;operator&gt;.assignment,int cur = 0)<SUB>70</SUB>>", "293": "<(LITERAL,0,int cur = 0)<SUB>70</SUB>>", "295": "<(IDENTIFIER,cur,cur &lt; pow)<SUB>70</SUB>>", "297": "<(&lt;operator&gt;.postIncrement,cur++)<SUB>70</SUB>>", "299": "<(&lt;operator&gt;.assignment,result = Math.max(result, C[cur][0]))<SUB>71</SUB>>", "301": "<(max,Math.max(result, C[cur][0]))<SUB>71</SUB>>", "303": "<(IDENTIFIER,result,Math.max(result, C[cur][0]))<SUB>71</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,C[cur])<SUB>71</SUB>>", "307": "<(IDENTIFIER,cur,Math.max(result, C[cur][0]))<SUB>71</SUB>>", "309": "<(println,System.out.println(result))<SUB>74</SUB>>", "311": "<(IDENTIFIER,System,System.out.println(result))<SUB>74</SUB>>", "313": "<(IDENTIFIER,result,System.out.println(result))<SUB>74</SUB>>", "315": "<(MODIFIER,STATIC)>"}}