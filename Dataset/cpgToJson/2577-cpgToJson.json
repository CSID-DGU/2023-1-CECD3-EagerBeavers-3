{"edges": [["19", "20"], ["19", "21"], ["19", "122"], ["19", "123"], ["19", "124"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "58"], ["21", "61"], ["21", "62"], ["21", "66"], ["21", "67"], ["21", "70"], ["21", "117"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "90"], ["81", "82"], ["81", "86"], ["82", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["56", "58"], ["58", "64"], ["62", "67"], ["67", "72"], ["117", "124"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "56"], ["47", "44"], ["64", "62"], ["72", "75"], ["75", "83"], ["75", "120"], ["78", "75"], ["118", "117"], ["28", "26"], ["50", "47"], ["120", "118"], ["51", "54"], ["54", "50"], ["82", "87"], ["82", "92"], ["92", "95"], ["95", "104"], ["95", "78"], ["98", "95"], ["83", "82"], ["87", "92"], ["102", "113"], ["102", "98"], ["103", "102"], ["112", "98"], ["104", "107"], ["107", "103"], ["113", "112"], ["19", "24"], ["20", "124"], ["22", "124"], ["25", "124"], ["25", "124"], ["30", "124"], ["30", "124"], ["35", "124"], ["35", "124"], ["56", "124"], ["56", "124"], ["58", "124"], ["58", "124"], ["62", "124"], ["62", "124"], ["62", "124"], ["67", "124"], ["72", "124"], ["75", "124"], ["75", "124"], ["75", "124"], ["117", "124"], ["117", "124"], ["117", "124"], ["82", "124"], ["82", "124"], ["87", "124"], ["92", "124"], ["95", "124"], ["95", "124"], ["78", "124"], ["103", "124"], ["103", "124"], ["102", "124"], ["102", "124"], ["112", "124"], ["112", "124"], ["98", "124"], ["50", "124"], ["50", "124"], ["50", "124"], ["47", "124"], ["58", "124"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["64", "62"], ["19", "67"], ["22", "25"], ["19", "25"], ["19", "41"], ["32", "56"], ["54", "56"], ["19", "56"], ["19", "58"], ["35", "58"], ["50", "58"], ["19", "72"], ["67", "117"], ["87", "117"], ["19", "117"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["44", "64"], ["19", "64"], ["72", "75"], ["78", "75"], ["19", "75"], ["64", "75"], ["95", "75"], ["19", "78"], ["75", "78"], ["75", "92"], ["19", "92"], ["32", "54"], ["19", "54"], ["62", "82"], ["19", "87"], ["92", "95"], ["98", "95"], ["19", "95"], ["75", "95"], ["95", "98"], ["19", "98"], ["67", "87"], ["103", "102"], ["103", "102"], ["19", "102"], ["19", "112"], ["58", "103"], ["50", "103"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["75", "83"], ["75", "75"], ["75", "95"], ["75", "92"], ["75", "82"], ["75", "78"], ["82", "87"], ["95", "107"], ["95", "98"], ["95", "102"], ["95", "103"], ["95", "104"], ["95", "95"], ["102", "113"], ["102", "112"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,scanner,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] numbers = new int[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,numbers[i])<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,numbers[i] = nextInt())<SUB>7</SUB>>", "55": "<(IDENTIFIER,scanner,nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,scanner,close())<SUB>9</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(numbers))<SUB>10</SUB>>", "61": "<(LOCAL,boolean[] colored: boolean[])<SUB>12</SUB>>", "63": "<(IDENTIFIER,colored,boolean[] colored = new boolean[n])<SUB>12</SUB>>", "65": "<(IDENTIFIER,n,new boolean[n])<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int res = 0)<SUB>13</SUB>>", "69": "<(LITERAL,0,int res = 0)<SUB>13</SUB>>", "71": "<(LOCAL,int i: int)<SUB>15</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "81": "<(CONTROL_STRUCTURE,if (!colored[i]),if (!colored[i]))<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,colored[i])<SUB>16</SUB>>", "85": "<(IDENTIFIER,i,!colored[i])<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.assignmentPlus,res += 1)<SUB>17</SUB>>", "89": "<(LITERAL,1,res += 1)<SUB>17</SUB>>", "91": "<(LOCAL,int j: int)<SUB>19</SUB>>", "93": "<(IDENTIFIER,j,int j = i)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>19</SUB>>", "97": "<(IDENTIFIER,n,j &lt; n)<SUB>19</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "101": "<(CONTROL_STRUCTURE,if (numbers[j] % numbers[i] == 0),if (numbers[j] % numbers[i] == 0))<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.modulo,numbers[j] % numbers[i])<SUB>20</SUB>>", "105": "<(IDENTIFIER,numbers,numbers[j] % numbers[i])<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,numbers[i])<SUB>20</SUB>>", "109": "<(IDENTIFIER,i,numbers[j] % numbers[i])<SUB>20</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,colored[j])<SUB>21</SUB>>", "115": "<(IDENTIFIER,j,colored[j] = true)<SUB>21</SUB>>", "117": "<(println,System.out.println(res))<SUB>26</SUB>>", "119": "<(IDENTIFIER,System,System.out.println(res))<SUB>26</SUB>>", "121": "<(IDENTIFIER,res,System.out.println(res))<SUB>26</SUB>>", "123": "<(MODIFIER,STATIC)>"}}