{"edges": [["21", "22"], ["21", "23"], ["21", "440"], ["21", "441"], ["21", "442"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "54"], ["23", "55"], ["23", "62"], ["23", "69"], ["23", "75"], ["23", "76"], ["23", "82"], ["23", "83"], ["23", "89"], ["23", "90"], ["23", "99"], ["23", "104"], ["23", "109"], ["23", "144"], ["23", "201"], ["23", "202"], ["23", "208"], ["23", "209"], ["23", "215"], ["23", "370"], ["23", "371"], ["23", "378"], ["23", "383"], ["23", "386"], ["23", "436"], ["23", "438"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "126"], ["119", "135"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "125"], ["123", "124"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "152"], ["144", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["155", "156"], ["155", "157"], ["155", "162"], ["155", "165"], ["155", "167"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "178"], ["167", "179"], ["167", "188"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "194"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "204"], ["204", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["211", "212"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["215", "220"], ["215", "225"], ["215", "227"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["227", "228"], ["227", "229"], ["227", "233"], ["227", "257"], ["227", "258"], ["227", "265"], ["227", "266"], ["227", "279"], ["227", "288"], ["227", "293"], ["229", "230"], ["229", "231"], ["231", "232"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["293", "294"], ["293", "295"], ["293", "300"], ["293", "303"], ["293", "305"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["303", "304"], ["305", "306"], ["306", "307"], ["306", "314"], ["307", "308"], ["307", "313"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["314", "315"], ["314", "326"], ["314", "345"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "320"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "340"], ["329", "330"], ["329", "335"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["335", "336"], ["335", "339"], ["336", "337"], ["336", "338"], ["340", "341"], ["340", "344"], ["341", "342"], ["341", "343"], ["345", "346"], ["345", "355"], ["346", "347"], ["346", "352"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "365"], ["356", "357"], ["356", "360"], ["357", "358"], ["357", "359"], ["360", "361"], ["360", "364"], ["361", "362"], ["361", "363"], ["365", "366"], ["365", "369"], ["366", "367"], ["366", "368"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["378", "379"], ["378", "380"], ["380", "381"], ["380", "382"], ["383", "384"], ["383", "385"], ["386", "387"], ["386", "390"], ["387", "388"], ["387", "389"], ["390", "391"], ["390", "392"], ["390", "397"], ["390", "398"], ["390", "403"], ["390", "430"], ["390", "433"], ["392", "393"], ["392", "394"], ["394", "395"], ["394", "396"], ["398", "399"], ["398", "400"], ["400", "401"], ["400", "402"], ["403", "404"], ["403", "405"], ["403", "408"], ["403", "411"], ["403", "413"], ["405", "406"], ["405", "407"], ["408", "409"], ["408", "410"], ["411", "412"], ["413", "414"], ["414", "415"], ["414", "422"], ["415", "416"], ["415", "421"], ["416", "417"], ["416", "418"], ["418", "419"], ["418", "420"], ["422", "423"], ["423", "424"], ["423", "425"], ["425", "426"], ["425", "427"], ["427", "428"], ["427", "429"], ["430", "431"], ["430", "432"], ["433", "434"], ["433", "435"], ["436", "437"], ["438", "439"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "49"], ["46", "59"], ["55", "66"], ["62", "73"], ["69", "79"], ["76", "86"], ["83", "93"], ["90", "100"], ["99", "105"], ["104", "111"], ["202", "212"], ["209", "217"], ["371", "380"], ["378", "383"], ["383", "387"], ["436", "438"], ["438", "442"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["57", "55"], ["64", "62"], ["71", "69"], ["78", "76"], ["85", "83"], ["92", "90"], ["100", "99"], ["105", "104"], ["111", "114"], ["114", "123"], ["114", "146"], ["117", "114"], ["146", "149"], ["149", "159"], ["149", "205"], ["152", "149"], ["204", "202"], ["211", "209"], ["217", "222"], ["220", "231"], ["220", "374"], ["225", "222"], ["373", "371"], ["380", "378"], ["387", "394"], ["387", "436"], ["29", "36"], ["32", "27"], ["44", "42"], ["49", "48"], ["59", "57"], ["66", "64"], ["73", "71"], ["79", "78"], ["86", "85"], ["93", "96"], ["96", "92"], ["120", "127"], ["126", "136"], ["135", "117"], ["205", "204"], ["212", "211"], ["222", "220"], ["229", "235"], ["258", "270"], ["266", "280"], ["279", "289"], ["288", "297"], ["374", "373"], ["392", "400"], ["398", "405"], ["430", "433"], ["433", "387"], ["31", "29"], ["34", "32"], ["122", "120"], ["127", "132"], ["130", "126"], ["136", "141"], ["139", "135"], ["157", "162"], ["162", "172"], ["162", "152"], ["165", "162"], ["231", "229"], ["235", "238"], ["238", "248"], ["238", "262"], ["241", "238"], ["260", "258"], ["268", "266"], ["280", "284"], ["283", "279"], ["289", "288"], ["295", "300"], ["300", "310"], ["300", "225"], ["303", "300"], ["394", "392"], ["400", "398"], ["405", "408"], ["408", "418"], ["408", "430"], ["411", "408"], ["36", "34"], ["123", "122"], ["132", "130"], ["141", "139"], ["159", "157"], ["169", "182"], ["179", "190"], ["188", "165"], ["262", "260"], ["269", "275"], ["274", "268"], ["284", "283"], ["297", "295"], ["171", "169"], ["181", "179"], ["189", "195"], ["194", "188"], ["245", "253"], ["245", "241"], ["270", "269"], ["275", "274"], ["307", "320"], ["307", "303"], ["415", "427"], ["415", "411"], ["172", "175"], ["175", "171"], ["182", "185"], ["185", "181"], ["190", "189"], ["195", "198"], ["198", "194"], ["246", "245"], ["253", "262"], ["308", "307"], ["315", "331"], ["326", "348"], ["416", "415"], ["423", "411"], ["248", "246"], ["310", "308"], ["317", "315"], ["328", "326"], ["346", "357"], ["346", "303"], ["418", "416"], ["425", "423"], ["318", "323"], ["323", "317"], ["329", "341"], ["340", "328"], ["347", "352"], ["352", "346"], ["356", "366"], ["365", "303"], ["427", "425"], ["320", "318"], ["330", "336"], ["335", "329"], ["341", "340"], ["348", "347"], ["357", "361"], ["360", "356"], ["366", "365"], ["331", "330"], ["336", "335"], ["361", "360"], ["21", "26"], ["22", "442"], ["24", "442"], ["29", "442"], ["32", "442"], ["32", "442"], ["32", "442"], ["27", "442"], ["38", "442"], ["41", "442"], ["41", "442"], ["46", "442"], ["46", "442"], ["46", "442"], ["57", "442"], ["55", "442"], ["55", "442"], ["64", "442"], ["62", "442"], ["62", "442"], ["71", "442"], ["71", "442"], ["69", "442"], ["69", "442"], ["76", "442"], ["76", "442"], ["83", "442"], ["83", "442"], ["83", "442"], ["90", "442"], ["92", "442"], ["90", "442"], ["90", "442"], ["99", "442"], ["99", "442"], ["99", "442"], ["104", "442"], ["104", "442"], ["104", "442"], ["114", "442"], ["146", "442"], ["149", "442"], ["202", "442"], ["202", "442"], ["209", "442"], ["209", "442"], ["209", "442"], ["217", "442"], ["220", "442"], ["220", "442"], ["374", "442"], ["373", "442"], ["371", "442"], ["371", "442"], ["378", "442"], ["378", "442"], ["383", "442"], ["387", "442"], ["387", "442"], ["436", "442"], ["438", "442"], ["438", "442"], ["392", "442"], ["392", "442"], ["398", "442"], ["398", "442"], ["398", "442"], ["405", "442"], ["408", "442"], ["408", "442"], ["408", "442"], ["430", "442"], ["433", "442"], ["433", "442"], ["416", "442"], ["416", "442"], ["415", "442"], ["415", "442"], ["425", "442"], ["423", "442"], ["423", "442"], ["411", "442"], ["229", "442"], ["229", "442"], ["235", "442"], ["238", "442"], ["238", "442"], ["246", "442"], ["245", "442"], ["245", "442"], ["241", "442"], ["253", "442"], ["253", "442"], ["260", "442"], ["258", "442"], ["258", "442"], ["268", "442"], ["266", "442"], ["266", "442"], ["279", "442"], ["283", "442"], ["283", "442"], ["279", "442"], ["279", "442"], ["288", "442"], ["288", "442"], ["288", "442"], ["297", "442"], ["295", "442"], ["295", "442"], ["300", "442"], ["300", "442"], ["225", "442"], ["308", "442"], ["307", "442"], ["307", "442"], ["315", "442"], ["320", "442"], ["318", "442"], ["317", "442"], ["317", "442"], ["315", "442"], ["315", "442"], ["329", "442"], ["329", "442"], ["328", "442"], ["328", "442"], ["326", "442"], ["326", "442"], ["347", "442"], ["347", "442"], ["346", "442"], ["346", "442"], ["346", "442"], ["356", "442"], ["360", "442"], ["360", "442"], ["356", "442"], ["356", "442"], ["365", "442"], ["365", "442"], ["365", "442"], ["303", "442"], ["157", "442"], ["157", "442"], ["162", "442"], ["162", "442"], ["152", "442"], ["171", "442"], ["171", "442"], ["169", "442"], ["169", "442"], ["181", "442"], ["181", "442"], ["179", "442"], ["179", "442"], ["188", "442"], ["195", "442"], ["194", "442"], ["198", "442"], ["194", "442"], ["188", "442"], ["188", "442"], ["165", "442"], ["120", "442"], ["122", "442"], ["120", "442"], ["120", "442"], ["126", "442"], ["130", "442"], ["126", "442"], ["126", "442"], ["135", "442"], ["139", "442"], ["139", "442"], ["135", "442"], ["135", "442"], ["117", "442"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["57", "55"], ["57", "55"], ["64", "62"], ["64", "62"], ["71", "69"], ["71", "69"], ["78", "76"], ["85", "83"], ["92", "90"], ["55", "99"], ["21", "99"], ["62", "104"], ["21", "104"], ["204", "202"], ["211", "209"], ["373", "371"], ["373", "371"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "111"], ["21", "146"], ["21", "217"], ["41", "378"], ["21", "378"], ["202", "378"], ["378", "383"], ["21", "383"], ["73", "436"], ["123", "436"], ["21", "436"], ["383", "438"], ["430", "438"], ["21", "438"], ["21", "29"], ["21", "37"], ["49", "48"], ["21", "48"], ["21", "57"], ["46", "57"], ["57", "64"], ["21", "64"], ["46", "64"], ["64", "71"], ["21", "71"], ["73", "71"], ["69", "78"], ["21", "78"], ["21", "85"], ["69", "85"], ["21", "92"], ["69", "92"], ["111", "114"], ["117", "114"], ["21", "114"], ["69", "114"], ["114", "117"], ["21", "117"], ["122", "120"], ["122", "120"], ["130", "126"], ["130", "126"], ["139", "135"], ["139", "135"], ["146", "149"], ["152", "149"], ["21", "149"], ["114", "149"], ["162", "149"], ["21", "152"], ["149", "152"], ["205", "204"], ["205", "204"], ["212", "211"], ["212", "211"], ["217", "220"], ["225", "220"], ["21", "220"], ["222", "220"], ["222", "220"], ["260", "225"], ["308", "225"], ["318", "225"], ["21", "225"], ["231", "229"], ["260", "258"], ["260", "258"], ["202", "279"], ["266", "279"], ["21", "279"], ["258", "288"], ["21", "288"], ["374", "373"], ["374", "373"], ["21", "373"], ["371", "387"], ["433", "387"], ["21", "387"], ["209", "392"], ["400", "398"], ["400", "398"], ["400", "433"], ["21", "433"], ["29", "32"], ["21", "32"], ["27", "49"], ["21", "49"], ["49", "73"], ["21", "73"], ["69", "79"], ["21", "79"], ["21", "86"], ["69", "86"], ["21", "93"], ["69", "93"], ["21", "96"], ["69", "96"], ["149", "157"], ["21", "157"], ["21", "205"], ["149", "205"], ["21", "212"], ["205", "212"], ["21", "222"], ["212", "222"], ["300", "222"], ["21", "235"], ["262", "295"], ["21", "295"], ["21", "374"], ["222", "374"], ["21", "405"], ["383", "430"], ["423", "430"], ["21", "430"], ["123", "122"], ["21", "122"], ["71", "130"], ["139", "130"], ["21", "130"], ["57", "130"], ["120", "130"], ["130", "139"], ["21", "139"], ["64", "139"], ["120", "139"], ["157", "162"], ["165", "162"], ["21", "162"], ["149", "162"], ["162", "165"], ["21", "165"], ["171", "169"], ["171", "169"], ["181", "179"], ["181", "179"], ["195", "188"], ["198", "188"], ["21", "231"], ["235", "238"], ["241", "238"], ["21", "238"], ["222", "238"], ["248", "241"], ["21", "241"], ["220", "260"], ["246", "260"], ["21", "260"], ["262", "260"], ["262", "260"], ["202", "283"], ["266", "283"], ["21", "283"], ["295", "300"], ["303", "300"], ["21", "300"], ["238", "300"], ["310", "303"], ["323", "303"], ["21", "303"], ["387", "400"], ["21", "400"], ["392", "400"], ["405", "408"], ["411", "408"], ["21", "408"], ["374", "408"], ["418", "411"], ["21", "411"], ["73", "123"], ["21", "123"], ["149", "159"], ["21", "159"], ["21", "262"], ["229", "262"], ["253", "262"], ["262", "297"], ["21", "297"], ["76", "171"], ["126", "171"], ["83", "181"], ["135", "181"], ["195", "194"], ["198", "194"], ["246", "245"], ["246", "245"], ["21", "245"], ["248", "253"], ["21", "253"], ["308", "307"], ["308", "307"], ["21", "307"], ["317", "315"], ["317", "315"], ["416", "415"], ["416", "415"], ["21", "415"], ["169", "195"], ["21", "195"], ["179", "198"], ["21", "198"], ["220", "246"], ["21", "246"], ["248", "246"], ["248", "246"], ["260", "308"], ["318", "308"], ["21", "308"], ["310", "308"], ["310", "308"], ["398", "416"], ["21", "416"], ["418", "416"], ["418", "416"], ["383", "423"], ["430", "423"], ["21", "423"], ["418", "423"], ["21", "248"], ["238", "248"], ["21", "310"], ["300", "310"], ["318", "317"], ["318", "317"], ["323", "317"], ["323", "317"], ["202", "346"], ["326", "346"], ["21", "346"], ["279", "346"], ["356", "346"], ["202", "356"], ["21", "356"], ["326", "356"], ["315", "365"], ["21", "365"], ["21", "418"], ["408", "418"], ["21", "425"], ["418", "425"], ["308", "318"], ["21", "318"], ["320", "318"], ["320", "318"], ["21", "323"], ["310", "323"], ["202", "347"], ["326", "347"], ["21", "347"], ["418", "427"], ["21", "427"], ["21", "320"], ["262", "320"], ["202", "360"], ["21", "360"], ["326", "360"], ["114", "120"], ["114", "136"], ["114", "114"], ["114", "127"], ["114", "141"], ["114", "122"], ["114", "123"], ["114", "135"], ["114", "117"], ["114", "132"], ["114", "130"], ["114", "139"], ["114", "126"], ["149", "162"], ["149", "152"], ["149", "159"], ["149", "149"], ["149", "157"], ["220", "283"], ["220", "262"], ["220", "300"], ["220", "238"], ["220", "288"], ["220", "258"], ["220", "268"], ["220", "274"], ["220", "260"], ["220", "229"], ["220", "269"], ["220", "222"], ["220", "297"], ["220", "225"], ["220", "279"], ["220", "275"], ["220", "284"], ["220", "231"], ["220", "289"], ["220", "280"], ["220", "295"], ["220", "235"], ["220", "270"], ["220", "220"], ["220", "266"], ["387", "430"], ["387", "392"], ["387", "394"], ["387", "408"], ["387", "405"], ["387", "433"], ["387", "400"], ["387", "387"], ["387", "398"], ["162", "188"], ["162", "162"], ["162", "181"], ["162", "195"], ["162", "190"], ["162", "194"], ["162", "182"], ["162", "172"], ["162", "169"], ["162", "179"], ["162", "185"], ["162", "198"], ["162", "189"], ["162", "171"], ["162", "165"], ["162", "175"], ["238", "245"], ["238", "246"], ["238", "248"], ["300", "308"], ["300", "300"], ["300", "310"], ["300", "307"], ["300", "303"], ["408", "418"], ["408", "408"], ["408", "416"], ["408", "415"], ["408", "411"], ["245", "238"], ["245", "253"], ["245", "241"], ["307", "326"], ["307", "317"], ["307", "336"], ["307", "340"], ["307", "315"], ["307", "346"], ["307", "329"], ["307", "348"], ["307", "347"], ["307", "328"], ["307", "323"], ["307", "335"], ["307", "320"], ["307", "341"], ["307", "318"], ["307", "352"], ["307", "330"], ["307", "331"], ["415", "425"], ["415", "427"], ["415", "423"], ["346", "356"], ["346", "357"], ["346", "365"], ["346", "360"], ["346", "366"], ["346", "361"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY kek = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,kek,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY outkek = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,outkek,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,String[] input: java.lang.String[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,input,String[] input = split(&quot; &quot;))<SUB>6</SUB>>", "49": "<(readLine,readLine())<SUB>6</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(LOCAL,int Y0: int)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int X0 = Integer.parseInt(input[0]))<SUB>7</SUB>>", "57": "<(parseInt,Integer.parseInt(input[0]))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,input[0])<SUB>7</SUB>>", "61": "<(LITERAL,0,Integer.parseInt(input[0]))<SUB>7</SUB>>", "63": "<(IDENTIFIER,Y0,int Y0 = Integer.parseInt(input[1]))<SUB>7</SUB>>", "65": "<(IDENTIFIER,Integer,Integer.parseInt(input[1]))<SUB>7</SUB>>", "67": "<(IDENTIFIER,input,Integer.parseInt(input[1]))<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,int N = parseInt(kek.readLine()))<SUB>7</SUB>>", "71": "<(parseInt,parseInt(kek.readLine()))<SUB>7</SUB>>", "73": "<(readLine,readLine())<SUB>7</SUB>>", "75": "<(LOCAL,int[] xCoords: int[])<SUB>9</SUB>>", "77": "<(IDENTIFIER,xCoords,int[] xCoords = new int[N + 1])<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.addition,N + 1)<SUB>9</SUB>>", "81": "<(LITERAL,1,N + 1)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.assignment,int[] yCoords = new int[N + 1])<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[N + 1])>", "87": "<(IDENTIFIER,N,N + 1)<SUB>10</SUB>>", "89": "<(LOCAL,int[][] distances: int[][])<SUB>11</SUB>>", "91": "<(IDENTIFIER,distances,int[][] distances = new int[N + 1][N + 1])<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.addition,N + 1)<SUB>11</SUB>>", "95": "<(LITERAL,1,N + 1)<SUB>11</SUB>>", "97": "<(IDENTIFIER,N,N + 1)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.assignment,xCoords[N] = X0)<SUB>12</SUB>>", "101": "<(IDENTIFIER,xCoords,xCoords[N] = X0)<SUB>12</SUB>>", "103": "<(IDENTIFIER,X0,xCoords[N] = X0)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,yCoords[N])<SUB>13</SUB>>", "107": "<(IDENTIFIER,N,yCoords[N] = Y0)<SUB>13</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,i &lt; N)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "121": "<(IDENTIFIER,input,input = split(&quot; &quot;))<SUB>16</SUB>>", "123": "<(readLine,readLine())<SUB>16</SUB>>", "125": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,xCoords[i])<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,xCoords[i] = Integer.parseInt(input[0]))<SUB>17</SUB>>", "131": "<(IDENTIFIER,Integer,Integer.parseInt(input[0]))<SUB>17</SUB>>", "133": "<(IDENTIFIER,input,Integer.parseInt(input[0]))<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.assignment,yCoords[i] = Integer.parseInt(input[1]))<SUB>18</SUB>>", "137": "<(IDENTIFIER,yCoords,yCoords[i] = Integer.parseInt(input[1]))<SUB>18</SUB>>", "139": "<(parseInt,Integer.parseInt(input[1]))<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,input[1])<SUB>18</SUB>>", "143": "<(LITERAL,1,Integer.parseInt(input[1]))<SUB>18</SUB>>", "145": "<(LOCAL,int i: int)<SUB>21</SUB>>", "147": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>21</SUB>>", "151": "<(IDENTIFIER,N,i &lt;= N)<SUB>21</SUB>>", "153": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt;= N); j++),for (int j = i + 1; Some(j &lt;= N); j++))<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.addition,i + 1)<SUB>22</SUB>>", "161": "<(LITERAL,1,i + 1)<SUB>22</SUB>>", "163": "<(IDENTIFIER,j,j &lt;= N)<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.assignment,int temp = xCoords[i] - xCoords[j])<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.subtraction,xCoords[i] - xCoords[j])<SUB>23</SUB>>", "173": "<(IDENTIFIER,xCoords,xCoords[i] - xCoords[j])<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,xCoords[j])<SUB>23</SUB>>", "177": "<(IDENTIFIER,j,xCoords[i] - xCoords[j])<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.assignment,int temp2 = yCoords[i] - yCoords[j])<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.subtraction,yCoords[i] - yCoords[j])<SUB>24</SUB>>", "183": "<(IDENTIFIER,yCoords,yCoords[i] - yCoords[j])<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,yCoords[j])<SUB>24</SUB>>", "187": "<(IDENTIFIER,j,yCoords[i] - yCoords[j])<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,distances[i][j])<SUB>25</SUB>>", "191": "<(IDENTIFIER,distances,distances[i][j] = (temp * temp) + (temp2 * temp2))<SUB>25</SUB>>", "193": "<(IDENTIFIER,j,distances[i][j] = (temp * temp) + (temp2 * temp2))<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.multiplication,temp * temp)<SUB>25</SUB>>", "197": "<(IDENTIFIER,temp,temp * temp)<SUB>25</SUB>>", "199": "<(IDENTIFIER,temp2,temp2 * temp2)<SUB>25</SUB>>", "201": "<(LOCAL,int[] aa: int[])<SUB>29</SUB>>", "203": "<(IDENTIFIER,aa,int[] aa = new int[1 &lt;&lt; N])<SUB>29</SUB>>", "205": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>29</SUB>>", "207": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.assignment,int[] bb = new int[1 &lt;&lt; N])<SUB>30</SUB>>", "211": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; N])>", "213": "<(LITERAL,1,1 &lt;&lt; N)<SUB>30</SUB>>", "215": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; 1 &lt;&lt; N); i++),for (int i = 1; Some(i &lt; 1 &lt;&lt; N); i++))<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>32</SUB>>", "219": "<(LITERAL,1,int i = 1)<SUB>32</SUB>>", "221": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; N)<SUB>32</SUB>>", "223": "<(LITERAL,1,1 &lt;&lt; N)<SUB>32</SUB>>", "225": "<(&lt;operator&gt;.postIncrement,i++)<SUB>32</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "229": "<(&lt;operator&gt;.assignment,int a = -1)<SUB>33</SUB>>", "231": "<(&lt;operator&gt;.minus,-1)<SUB>33</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); j++),for (int j = 0; Some(j &lt; N); j++))<SUB>34</SUB>>", "235": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>34</SUB>>", "237": "<(LITERAL,0,int j = 0)<SUB>34</SUB>>", "239": "<(IDENTIFIER,j,j &lt; N)<SUB>34</SUB>>", "241": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.greaterThan,(i &amp; 1 &lt;&lt; j) &gt; 0)<SUB>35</SUB>>", "247": "<(IDENTIFIER,i,i &amp; 1 &lt;&lt; j)<SUB>35</SUB>>", "249": "<(LITERAL,1,1 &lt;&lt; j)<SUB>35</SUB>>", "251": "<(LITERAL,0,(i &amp; 1 &lt;&lt; j) &gt; 0)<SUB>35</SUB>>", "253": "<(&lt;operator&gt;.assignment,a = j)<SUB>36</SUB>>", "255": "<(IDENTIFIER,j,a = j)<SUB>36</SUB>>", "257": "<(LOCAL,int l: int)<SUB>41</SUB>>", "259": "<(IDENTIFIER,l,int l = i ^ 1 &lt;&lt; a)<SUB>41</SUB>>", "261": "<(IDENTIFIER,i,i ^ 1 &lt;&lt; a)<SUB>41</SUB>>", "263": "<(LITERAL,1,1 &lt;&lt; a)<SUB>41</SUB>>", "265": "<(LOCAL,int dist: int)<SUB>42</SUB>>", "267": "<(IDENTIFIER,dist,int dist = distances[a][N] + distances[a][N])<SUB>42</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,distances[a][N])<SUB>42</SUB>>", "271": "<(IDENTIFIER,distances,distances[a][N] + distances[a][N])<SUB>42</SUB>>", "273": "<(IDENTIFIER,N,distances[a][N] + distances[a][N])<SUB>42</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,distances[a])<SUB>42</SUB>>", "277": "<(IDENTIFIER,a,distances[a][N] + distances[a][N])<SUB>42</SUB>>", "279": "<(&lt;operator&gt;.assignment,aa[i] = aa[l] + dist)<SUB>43</SUB>>", "281": "<(IDENTIFIER,aa,aa[i] = aa[l] + dist)<SUB>43</SUB>>", "283": "<(&lt;operator&gt;.addition,aa[l] + dist)<SUB>43</SUB>>", "285": "<(IDENTIFIER,aa,aa[l] + dist)<SUB>43</SUB>>", "287": "<(IDENTIFIER,dist,aa[l] + dist)<SUB>43</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,bb[i])<SUB>44</SUB>>", "291": "<(IDENTIFIER,i,bb[i] = l)<SUB>44</SUB>>", "293": "<(CONTROL_STRUCTURE,for (int k = a + 1; Some(k &lt; N); k++),for (int k = a + 1; Some(k &lt; N); k++))<SUB>46</SUB>>", "295": "<(&lt;operator&gt;.assignment,int k = a + 1)<SUB>46</SUB>>", "297": "<(&lt;operator&gt;.addition,a + 1)<SUB>46</SUB>>", "299": "<(LITERAL,1,a + 1)<SUB>46</SUB>>", "301": "<(IDENTIFIER,k,k &lt; N)<SUB>46</SUB>>", "303": "<(&lt;operator&gt;.postIncrement,k++)<SUB>46</SUB>>", "305": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "307": "<(&lt;operator&gt;.greaterThan,(i &amp; 1 &lt;&lt; k) &gt; 0)<SUB>47</SUB>>", "309": "<(IDENTIFIER,i,i &amp; 1 &lt;&lt; k)<SUB>47</SUB>>", "311": "<(LITERAL,1,1 &lt;&lt; k)<SUB>47</SUB>>", "313": "<(LITERAL,0,(i &amp; 1 &lt;&lt; k) &gt; 0)<SUB>47</SUB>>", "315": "<(&lt;operator&gt;.assignment,l = i ^ 1 &lt;&lt; a ^ 1 &lt;&lt; k)<SUB>48</SUB>>", "317": "<(&lt;operator&gt;.xor,i ^ 1 &lt;&lt; a ^ 1 &lt;&lt; k)<SUB>48</SUB>>", "319": "<(IDENTIFIER,i,i ^ 1 &lt;&lt; a)<SUB>48</SUB>>", "321": "<(LITERAL,1,1 &lt;&lt; a)<SUB>48</SUB>>", "323": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>48</SUB>>", "325": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>48</SUB>>", "327": "<(IDENTIFIER,dist,dist = distances[a][N] + distances[k][N] + distances[a][k])<SUB>49</SUB>>", "329": "<(&lt;operator&gt;.addition,distances[a][N] + distances[k][N])<SUB>49</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,distances[a])<SUB>49</SUB>>", "333": "<(IDENTIFIER,a,distances[a][N] + distances[k][N])<SUB>49</SUB>>", "335": "<(&lt;operator&gt;.indexAccess,distances[k][N])<SUB>49</SUB>>", "337": "<(IDENTIFIER,distances,distances[a][N] + distances[k][N])<SUB>49</SUB>>", "339": "<(IDENTIFIER,N,distances[a][N] + distances[k][N])<SUB>49</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,distances[a])<SUB>49</SUB>>", "343": "<(IDENTIFIER,a,distances[a][N] + distances[k][N] + distances[a][k])<SUB>49</SUB>>", "345": "<(CONTROL_STRUCTURE,if (aa[l] + dist &lt; aa[i]),if (aa[l] + dist &lt; aa[i]))<SUB>50</SUB>>", "347": "<(&lt;operator&gt;.addition,aa[l] + dist)<SUB>50</SUB>>", "349": "<(IDENTIFIER,aa,aa[l] + dist)<SUB>50</SUB>>", "351": "<(IDENTIFIER,dist,aa[l] + dist)<SUB>50</SUB>>", "353": "<(IDENTIFIER,aa,aa[l] + dist &lt; aa[i])<SUB>50</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "357": "<(&lt;operator&gt;.indexAccess,aa[i])<SUB>51</SUB>>", "359": "<(IDENTIFIER,i,aa[i] = aa[l] + dist)<SUB>51</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,aa[l])<SUB>51</SUB>>", "363": "<(IDENTIFIER,l,aa[l] + dist)<SUB>51</SUB>>", "365": "<(&lt;operator&gt;.assignment,bb[i] = l)<SUB>52</SUB>>", "367": "<(IDENTIFIER,bb,bb[i] = l)<SUB>52</SUB>>", "369": "<(IDENTIFIER,l,bb[i] = l)<SUB>52</SUB>>", "371": "<(&lt;operator&gt;.assignment,int fin = (1 &lt;&lt; N) - 1)<SUB>58</SUB>>", "373": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; N) - 1)<SUB>58</SUB>>", "375": "<(LITERAL,1,1 &lt;&lt; N)<SUB>58</SUB>>", "377": "<(LITERAL,1,(1 &lt;&lt; N) - 1)<SUB>58</SUB>>", "379": "<(IDENTIFIER,outkek,println(aa[fin]))<SUB>59</SUB>>", "381": "<(IDENTIFIER,aa,println(aa[fin]))<SUB>59</SUB>>", "383": "<(print,print('0'))<SUB>60</SUB>>", "385": "<(LITERAL,'0',print('0'))<SUB>60</SUB>>", "387": "<(&lt;operator&gt;.notEquals,fin != 0)<SUB>61</SUB>>", "389": "<(LITERAL,0,fin != 0)<SUB>61</SUB>>", "391": "<(LOCAL,int temp1: int)<SUB>62</SUB>>", "393": "<(IDENTIFIER,temp1,int temp1 = bb[fin])<SUB>62</SUB>>", "395": "<(IDENTIFIER,bb,int temp1 = bb[fin])<SUB>62</SUB>>", "397": "<(LOCAL,int temp2: int)<SUB>63</SUB>>", "399": "<(IDENTIFIER,temp2,int temp2 = fin ^ temp1)<SUB>63</SUB>>", "401": "<(IDENTIFIER,fin,fin ^ temp1)<SUB>63</SUB>>", "403": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>64</SUB>>", "405": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>>", "407": "<(LITERAL,0,int i = 0)<SUB>64</SUB>>", "409": "<(IDENTIFIER,i,i &lt; N)<SUB>64</SUB>>", "411": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "413": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "415": "<(&lt;operator&gt;.greaterThan,(temp2 &amp; 1 &lt;&lt; i) &gt; 0)<SUB>65</SUB>>", "417": "<(IDENTIFIER,temp2,temp2 &amp; 1 &lt;&lt; i)<SUB>65</SUB>>", "419": "<(LITERAL,1,1 &lt;&lt; i)<SUB>65</SUB>>", "421": "<(LITERAL,0,(temp2 &amp; 1 &lt;&lt; i) &gt; 0)<SUB>65</SUB>>", "423": "<(print,print(&quot; &quot; + (i + 1)))<SUB>66</SUB>>", "425": "<(&lt;operator&gt;.addition,&quot; &quot; + (i + 1))<SUB>66</SUB>>", "427": "<(&lt;operator&gt;.addition,i + 1)<SUB>66</SUB>>", "429": "<(LITERAL,1,i + 1)<SUB>66</SUB>>", "431": "<(IDENTIFIER,outkek,print(&quot; 0&quot;))<SUB>69</SUB>>", "433": "<(&lt;operator&gt;.assignment,fin = temp1)<SUB>70</SUB>>", "435": "<(IDENTIFIER,temp1,fin = temp1)<SUB>70</SUB>>", "437": "<(IDENTIFIER,kek,close())<SUB>72</SUB>>", "439": "<(IDENTIFIER,outkek,close())<SUB>73</SUB>>", "441": "<(MODIFIER,STATIC)>"}}