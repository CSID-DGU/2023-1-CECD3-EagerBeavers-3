{"edges": [["39", "40"], ["39", "41"], ["39", "192"], ["39", "193"], ["39", "194"], ["41", "42"], ["41", "43"], ["41", "10"], ["41", "46"], ["41", "16"], ["41", "49"], ["41", "4"], ["41", "52"], ["41", "55"], ["41", "12"], ["41", "14"], ["41", "19"], ["41", "22"], ["41", "24"], ["41", "56"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "3"], ["56", "57"], ["56", "190"], ["57", "6"], ["57", "58"], ["57", "61"], ["57", "8"], ["57", "70"], ["57", "73"], ["57", "75"], ["57", "79"], ["57", "82"], ["57", "84"], ["57", "87"], ["57", "90"], ["57", "93"], ["57", "96"], ["57", "99"], ["57", "102"], ["57", "106"], ["57", "109"], ["57", "111"], ["57", "114"], ["57", "117"], ["57", "121"], ["57", "124"], ["57", "126"], ["57", "177"], ["57", "178"], ["57", "184"], ["57", "188"], ["58", "59"], ["58", "60"], ["61", "5"], ["61", "62"], ["62", "63"], ["62", "66"], ["62", "69"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "72"], ["73", "7"], ["73", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["82", "9"], ["82", "83"], ["84", "85"], ["84", "86"], ["87", "11"], ["87", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["93", "13"], ["93", "94"], ["94", "95"], ["96", "97"], ["96", "98"], ["99", "15"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "108"], ["109", "17"], ["109", "110"], ["111", "112"], ["111", "113"], ["114", "18"], ["114", "115"], ["115", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["121", "122"], ["121", "123"], ["124", "20"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "140"], ["136", "143"], ["136", "146"], ["136", "149"], ["136", "162"], ["137", "138"], ["137", "139"], ["140", "21"], ["140", "141"], ["141", "142"], ["143", "144"], ["143", "145"], ["146", "23"], ["146", "147"], ["147", "148"], ["149", "150"], ["149", "161"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "168"], ["164", "176"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["180", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["188", "189"], ["190", "191"], ["43", "46"], ["46", "49"], ["49", "54"], ["52", "55"], ["55", "60"], ["54", "52"], ["58", "65"], ["61", "72"], ["70", "73"], ["73", "77"], ["75", "81"], ["79", "82"], ["82", "86"], ["84", "88"], ["87", "92"], ["90", "94"], ["93", "98"], ["96", "99"], ["99", "104"], ["102", "108"], ["106", "109"], ["109", "113"], ["111", "115"], ["114", "119"], ["117", "123"], ["121", "124"], ["124", "128"], ["178", "186"], ["184", "188"], ["188", "194"], ["60", "58"], ["72", "70"], ["77", "75"], ["81", "79"], ["86", "84"], ["88", "87"], ["92", "90"], ["94", "93"], ["98", "96"], ["104", "102"], ["108", "106"], ["113", "111"], ["115", "114"], ["119", "117"], ["123", "121"], ["128", "131"], ["131", "139"], ["131", "180"], ["134", "131"], ["180", "178"], ["186", "184"], ["63", "66"], ["66", "61"], ["137", "141"], ["140", "145"], ["143", "147"], ["146", "154"], ["149", "167"], ["162", "134"], ["65", "63"], ["139", "137"], ["141", "140"], ["145", "143"], ["147", "146"], ["150", "149"], ["151", "158"], ["158", "150"], ["165", "170"], ["168", "162"], ["152", "155"], ["155", "151"], ["167", "165"], ["170", "173"], ["173", "168"], ["154", "152"], ["39", "43"], ["40", "194"], ["43", "194"], ["46", "194"], ["49", "194"], ["52", "194"], ["55", "194"], ["58", "194"], ["63", "194"], ["66", "194"], ["66", "194"], ["61", "194"], ["70", "194"], ["73", "194"], ["84", "194"], ["90", "194"], ["96", "194"], ["99", "194"], ["99", "194"], ["99", "194"], ["111", "194"], ["114", "194"], ["114", "194"], ["119", "194"], ["117", "194"], ["117", "194"], ["121", "194"], ["124", "194"], ["124", "194"], ["124", "194"], ["128", "194"], ["131", "194"], ["131", "194"], ["131", "194"], ["180", "194"], ["180", "194"], ["178", "194"], ["178", "194"], ["186", "194"], ["184", "194"], ["184", "194"], ["188", "194"], ["188", "194"], ["137", "194"], ["143", "194"], ["147", "194"], ["146", "194"], ["146", "194"], ["149", "194"], ["149", "194"], ["165", "194"], ["168", "194"], ["170", "194"], ["168", "194"], ["173", "194"], ["168", "194"], ["168", "194"], ["162", "194"], ["134", "194"], ["180", "194"], ["39", "40"], ["39", "43"], ["39", "46"], ["39", "49"], ["39", "52"], ["52", "55"], ["39", "55"], ["39", "58"], ["39", "70"], ["77", "75"], ["39", "79"], ["39", "84"], ["39", "90"], ["39", "96"], ["104", "102"], ["39", "106"], ["39", "111"], ["119", "117"], ["39", "121"], ["180", "178"], ["180", "178"], ["180", "178"], ["39", "191"], ["58", "61"], ["39", "61"], ["63", "61"], ["66", "61"], ["70", "73"], ["39", "73"], ["79", "82"], ["39", "82"], ["75", "82"], ["84", "87"], ["39", "87"], ["88", "87"], ["90", "93"], ["39", "93"], ["94", "93"], ["96", "99"], ["39", "99"], ["87", "99"], ["93", "99"], ["106", "109"], ["39", "109"], ["102", "109"], ["111", "114"], ["39", "114"], ["115", "114"], ["121", "124"], ["39", "124"], ["117", "124"], ["39", "128"], ["73", "184"], ["39", "184"], ["186", "184"], ["184", "188"], ["39", "188"], ["39", "63"], ["39", "69"], ["61", "77"], ["39", "77"], ["82", "88"], ["39", "88"], ["88", "94"], ["39", "94"], ["77", "104"], ["39", "104"], ["109", "115"], ["39", "115"], ["104", "119"], ["39", "119"], ["128", "131"], ["134", "131"], ["39", "131"], ["114", "131"], ["131", "134"], ["39", "134"], ["39", "137"], ["39", "143"], ["39", "149"], ["39", "180"], ["99", "180"], ["55", "180"], ["162", "180"], ["178", "186"], ["39", "186"], ["63", "66"], ["39", "66"], ["137", "140"], ["39", "140"], ["141", "140"], ["143", "146"], ["39", "146"], ["147", "146"], ["55", "162"], ["39", "162"], ["165", "162"], ["168", "162"], ["124", "141"], ["147", "141"], ["39", "141"], ["141", "147"], ["39", "147"], ["39", "165"], ["39", "176"], ["146", "158"], ["39", "158"], ["165", "168"], ["39", "168"], ["170", "168"], ["170", "168"], ["173", "168"], ["173", "168"], ["140", "155"], ["39", "155"], ["155", "170"], ["39", "170"], ["158", "173"], ["39", "173"], ["131", "141"], ["131", "167"], ["131", "154"], ["131", "145"], ["131", "146"], ["131", "131"], ["131", "149"], ["131", "150"], ["131", "151"], ["131", "162"], ["131", "168"], ["131", "170"], ["131", "134"], ["131", "140"], ["131", "143"], ["131", "173"], ["131", "137"], ["131", "152"], ["131", "165"], ["131", "147"], ["131", "155"], ["131", "139"], ["131", "158"]], "features": {"39": "<(METHOD,main)<SUB>1</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "43": "<(&lt;operator&gt;.assignment,String buffer = null)<SUB>2</SUB>>", "45": "<(LITERAL,null,String buffer = null)<SUB>2</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY st = null)<SUB>3</SUB>>", "48": "<(LITERAL,null,ANY st = null)<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY f = null)<SUB>4</SUB>>", "51": "<(LITERAL,null,ANY f = null)<SUB>4</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY pairs = new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.alloc,new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "3": "<(IDENTIFIER,pairs,new LinkedList&lt;Pair&gt;())<SUB>5</SUB>>", "14": "<(LOCAL,Integer M: java.lang.Integer)<SUB>6</SUB>>", "22": "<(LOCAL,Integer x: java.lang.Integer)<SUB>6</SUB>>", "56": "<(CONTROL_STRUCTURE,try,try)<SUB>7</SUB>>", "6": "<(LOCAL,BufferedReader in: ANY)<SUB>8</SUB>>", "59": "<(IDENTIFIER,in,ANY in = new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>8</SUB>>", "61": "<(&lt;init&gt;,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>8</SUB>>", "62": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "64": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "66": "<(&lt;init&gt;,new FileReader(&quot;input.txt&quot;))<SUB>9</SUB>>", "68": "<(LITERAL,&quot;input.txt&quot;,new FileReader(&quot;input.txt&quot;))<SUB>9</SUB>>", "8": "<(LOCAL,FileWriter out: ANY)<SUB>11</SUB>>", "71": "<(IDENTIFIER,out,ANY out = new FileWriter(&quot;output.txt&quot;))<SUB>11</SUB>>", "73": "<(&lt;init&gt;,new FileWriter(&quot;output.txt&quot;))<SUB>11</SUB>>", "74": "<(LITERAL,&quot;output.txt&quot;,new FileWriter(&quot;output.txt&quot;))<SUB>11</SUB>>", "76": "<(IDENTIFIER,buffer,buffer = readLine())<SUB>12</SUB>>", "78": "<(IDENTIFIER,in,readLine())<SUB>12</SUB>>", "80": "<(IDENTIFIER,st,st = new StringTokenizer(buffer))<SUB>13</SUB>>", "82": "<(&lt;init&gt;,new StringTokenizer(buffer))<SUB>13</SUB>>", "83": "<(IDENTIFIER,buffer,new StringTokenizer(buffer))<SUB>13</SUB>>", "85": "<(IDENTIFIER,N,N = new Integer(st.nextToken()))<SUB>14</SUB>>", "87": "<(&lt;init&gt;,new Integer(st.nextToken()))<SUB>14</SUB>>", "88": "<(nextToken,nextToken())<SUB>14</SUB>>", "90": "<(&lt;operator&gt;.assignment,M = new Integer(st.nextToken()))<SUB>15</SUB>>", "92": "<(&lt;operator&gt;.alloc,new Integer(st.nextToken()))<SUB>15</SUB>>", "13": "<(IDENTIFIER,M,new Integer(st.nextToken()))<SUB>15</SUB>>", "95": "<(IDENTIFIER,st,nextToken())<SUB>15</SUB>>", "97": "<(IDENTIFIER,f,f = new Forest(N, M))<SUB>16</SUB>>", "99": "<(&lt;init&gt;,new Forest(N, M))<SUB>16</SUB>>", "100": "<(IDENTIFIER,N,new Forest(N, M))<SUB>16</SUB>>", "102": "<(&lt;operator&gt;.assignment,buffer = readLine())<SUB>17</SUB>>", "104": "<(readLine,readLine())<SUB>17</SUB>>", "106": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(buffer))<SUB>18</SUB>>", "108": "<(&lt;operator&gt;.alloc,new StringTokenizer(buffer))<SUB>18</SUB>>", "17": "<(IDENTIFIER,st,new StringTokenizer(buffer))<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.assignment,K = new Integer(st.nextToken()))<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.alloc,new Integer(st.nextToken()))<SUB>19</SUB>>", "18": "<(IDENTIFIER,K,new Integer(st.nextToken()))<SUB>19</SUB>>", "116": "<(IDENTIFIER,st,nextToken())<SUB>19</SUB>>", "118": "<(IDENTIFIER,buffer,buffer = readLine())<SUB>20</SUB>>", "120": "<(IDENTIFIER,in,readLine())<SUB>20</SUB>>", "122": "<(IDENTIFIER,st,st = new StringTokenizer(buffer))<SUB>21</SUB>>", "124": "<(&lt;init&gt;,new StringTokenizer(buffer))<SUB>21</SUB>>", "125": "<(IDENTIFIER,buffer,new StringTokenizer(buffer))<SUB>21</SUB>>", "127": "<(LOCAL,int i: int)<SUB>22</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; K)<SUB>22</SUB>>", "133": "<(IDENTIFIER,K,i &lt; K)<SUB>22</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.assignment,x = new Integer(st.nextToken()))<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.alloc,new Integer(st.nextToken()))<SUB>23</SUB>>", "21": "<(IDENTIFIER,x,new Integer(st.nextToken()))<SUB>23</SUB>>", "142": "<(IDENTIFIER,st,nextToken())<SUB>23</SUB>>", "144": "<(IDENTIFIER,y,y = new Integer(st.nextToken()))<SUB>24</SUB>>", "146": "<(&lt;init&gt;,new Integer(st.nextToken()))<SUB>24</SUB>>", "147": "<(nextToken,nextToken())<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.assignment,f.desk[x - 1][y - 1] = 1)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,f.desk[x - 1])<SUB>25</SUB>>", "153": "<(IDENTIFIER,f,f.desk[x - 1][y - 1] = 1)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.subtraction,x - 1)<SUB>25</SUB>>", "157": "<(LITERAL,1,x - 1)<SUB>25</SUB>>", "159": "<(IDENTIFIER,y,y - 1)<SUB>25</SUB>>", "161": "<(LITERAL,1,f.desk[x - 1][y - 1] = 1)<SUB>25</SUB>>", "163": "<(IDENTIFIER,pairs,add(new Pair(x - 1, y - 1)))<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "167": "<(&lt;operator&gt;.alloc,new Pair(x - 1, y - 1))<SUB>26</SUB>>", "169": "<(IDENTIFIER,$obj13,new Pair(x - 1, y - 1))>", "171": "<(IDENTIFIER,x,x - 1)<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.subtraction,y - 1)<SUB>26</SUB>>", "175": "<(LITERAL,1,y - 1)<SUB>26</SUB>>", "177": "<(LOCAL,Pair res: ANY)<SUB>28</SUB>>", "179": "<(IDENTIFIER,res,ANY res = solve(f, pairs))<SUB>28</SUB>>", "181": "<(IDENTIFIER,this,solve(f, pairs))<SUB>28</SUB>>", "183": "<(IDENTIFIER,pairs,solve(f, pairs))<SUB>28</SUB>>", "185": "<(IDENTIFIER,out,write(res.toString()))<SUB>30</SUB>>", "187": "<(IDENTIFIER,res,toString())<SUB>30</SUB>>", "189": "<(IDENTIFIER,out,flush())<SUB>31</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "193": "<(MODIFIER,STATIC)>"}}