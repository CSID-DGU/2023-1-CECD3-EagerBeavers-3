{"edges": [["21", "22"], ["21", "23"], ["21", "84"], ["21", "85"], ["21", "86"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "77"], ["23", "82"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "76"], ["52", "53"], ["52", "55"], ["53", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "53"], ["49", "79"], ["77", "82"], ["82", "86"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["79", "77"], ["30", "28"], ["37", "35"], ["52", "51"], ["53", "56"], ["55", "52"], ["56", "62"], ["57", "55"], ["59", "57"], ["61", "59"], ["62", "67"], ["65", "61"], ["66", "72"], ["71", "65"], ["67", "66"], ["72", "71"], ["21", "26"], ["22", "86"], ["24", "86"], ["27", "86"], ["27", "86"], ["31", "86"], ["34", "86"], ["34", "86"], ["39", "86"], ["46", "86"], ["44", "86"], ["44", "86"], ["52", "86"], ["61", "86"], ["67", "86"], ["66", "86"], ["65", "86"], ["71", "86"], ["65", "86"], ["61", "86"], ["59", "86"], ["57", "86"], ["55", "86"], ["52", "86"], ["51", "86"], ["49", "86"], ["49", "86"], ["79", "86"], ["79", "86"], ["77", "86"], ["77", "86"], ["82", "86"], ["82", "86"], ["57", "86"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["51", "49"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["34", "77"], ["21", "77"], ["79", "77"], ["79", "77"], ["77", "82"], ["21", "82"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["53", "51"], ["21", "51"], ["57", "51"], ["57", "51"], ["72", "79"], ["21", "79"], ["49", "79"], ["53", "52"], ["21", "52"], ["57", "52"], ["57", "52"], ["21", "53"], ["21", "55"], ["57", "55"], ["57", "55"], ["21", "57"], ["61", "57"], ["61", "57"], ["21", "59"], ["61", "59"], ["61", "59"], ["62", "61"], ["62", "61"], ["66", "61"], ["66", "61"], ["71", "61"], ["71", "61"], ["21", "62"], ["66", "65"], ["66", "65"], ["71", "65"], ["71", "65"], ["67", "66"], ["67", "66"], ["21", "66"], ["72", "71"], ["72", "71"], ["21", "71"], ["21", "67"], ["44", "67"], ["21", "72"], ["39", "72"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new MScanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MScanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new MScanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new MScanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int k: int)<SUB>7</SUB>>", "45": "<(IDENTIFIER,k,int k = nextInt())<SUB>7</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int x = (-3 + (int) Math.sqrt(9 + 4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0))) / 2)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.division,(-3 + (int) Math.sqrt(9 + 4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0))) / 2)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.minus,-3)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.cast,(int) Math.sqrt(9 + 4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0)))<SUB>8</SUB>>", "57": "<(sqrt,Math.sqrt(9 + 4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0)))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.addition,9 + 4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.multiplication,4 * 1.0 * (2 * k * 1.0 + 2 * n * 1.0))<SUB>8</SUB>>", "63": "<(LITERAL,4,4 * 1.0)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.addition,2 * k * 1.0 + 2 * n * 1.0)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.multiplication,2 * k)<SUB>8</SUB>>", "69": "<(IDENTIFIER,k,2 * k)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.multiplication,2 * n * 1.0)<SUB>8</SUB>>", "73": "<(LITERAL,2,2 * n)<SUB>8</SUB>>", "75": "<(LITERAL,1.0,2 * n * 1.0)<SUB>8</SUB>>", "77": "<(println,println(n - x))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.subtraction,n - x)<SUB>9</SUB>>", "81": "<(IDENTIFIER,x,n - x)<SUB>9</SUB>>", "83": "<(IDENTIFIER,pw,flush())<SUB>10</SUB>>", "85": "<(MODIFIER,STATIC)>"}}