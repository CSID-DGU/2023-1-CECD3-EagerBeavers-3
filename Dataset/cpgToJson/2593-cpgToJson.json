{"edges": [["22", "24"], ["22", "135"], ["22", "136"], ["22", "137"], ["24", "25"], ["24", "26"], ["24", "4"], ["24", "30"], ["24", "33"], ["24", "6"], ["24", "44"], ["24", "47"], ["24", "50"], ["24", "51"], ["24", "57"], ["24", "60"], ["24", "63"], ["24", "81"], ["24", "82"], ["24", "85"], ["24", "130"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "5"], ["47", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "7"], ["60", "61"], ["61", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["74", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["96", "97"], ["96", "102"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "108"], ["102", "128"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "118"], ["108", "120"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["128", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["26", "32"], ["30", "37"], ["33", "46"], ["44", "48"], ["47", "55"], ["51", "59"], ["57", "61"], ["60", "65"], ["82", "87"], ["130", "137"], ["28", "26"], ["32", "30"], ["46", "44"], ["48", "47"], ["53", "51"], ["59", "57"], ["61", "60"], ["65", "68"], ["68", "79"], ["68", "82"], ["71", "68"], ["87", "90"], ["90", "98"], ["90", "133"], ["93", "90"], ["131", "130"], ["35", "42"], ["38", "33"], ["55", "53"], ["74", "71"], ["133", "131"], ["37", "35"], ["40", "38"], ["75", "74"], ["97", "104"], ["97", "93"], ["42", "40"], ["77", "75"], ["98", "97"], ["103", "110"], ["128", "93"], ["79", "77"], ["104", "103"], ["110", "114"], ["113", "124"], ["113", "128"], ["118", "114"], ["114", "113"], ["121", "118"], ["122", "121"], ["124", "122"], ["22", "28"], ["23", "137"], ["26", "137"], ["26", "137"], ["26", "137"], ["30", "137"], ["35", "137"], ["38", "137"], ["38", "137"], ["38", "137"], ["33", "137"], ["44", "137"], ["53", "137"], ["53", "137"], ["51", "137"], ["51", "137"], ["57", "137"], ["60", "137"], ["61", "137"], ["60", "137"], ["60", "137"], ["65", "137"], ["68", "137"], ["68", "137"], ["82", "137"], ["87", "137"], ["90", "137"], ["90", "137"], ["130", "137"], ["130", "137"], ["130", "137"], ["97", "137"], ["97", "137"], ["103", "137"], ["103", "137"], ["110", "137"], ["114", "137"], ["113", "137"], ["113", "137"], ["128", "137"], ["93", "137"], ["121", "137"], ["121", "137"], ["118", "137"], ["77", "137"], ["79", "137"], ["77", "137"], ["74", "137"], ["74", "137"], ["71", "137"], ["22", "23"], ["28", "26"], ["22", "30"], ["22", "44"], ["53", "51"], ["53", "51"], ["22", "57"], ["22", "82"], ["30", "33"], ["22", "33"], ["35", "33"], ["38", "33"], ["44", "47"], ["22", "47"], ["48", "47"], ["57", "60"], ["22", "60"], ["61", "60"], ["22", "65"], ["22", "87"], ["82", "130"], ["128", "130"], ["22", "130"], ["22", "28"], ["22", "35"], ["22", "43"], ["33", "48"], ["22", "48"], ["22", "53"], ["55", "53"], ["48", "61"], ["22", "61"], ["65", "68"], ["71", "68"], ["22", "68"], ["51", "68"], ["68", "71"], ["22", "71"], ["87", "90"], ["93", "90"], ["22", "90"], ["90", "93"], ["114", "93"], ["22", "93"], ["35", "38"], ["22", "38"], ["47", "55"], ["22", "55"], ["26", "74"], ["26", "97"], ["103", "97"], ["22", "97"], ["22", "103"], ["53", "77"], ["22", "77"], ["79", "77"], ["22", "110"], ["82", "128"], ["22", "128"], ["60", "79"], ["22", "79"], ["114", "113"], ["114", "113"], ["22", "113"], ["124", "118"], ["22", "118"], ["22", "121"], ["110", "114"], ["118", "114"], ["22", "114"], ["90", "114"], ["124", "114"], ["114", "124"], ["22", "124"], ["114", "124"], ["68", "68"], ["68", "77"], ["68", "71"], ["68", "75"], ["68", "74"], ["68", "79"], ["90", "98"], ["90", "97"], ["90", "93"], ["90", "90"], ["97", "113"], ["97", "128"], ["97", "114"], ["97", "103"], ["97", "104"], ["97", "110"], ["113", "113"], ["113", "122"], ["113", "118"], ["113", "114"], ["113", "121"], ["113", "124"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,int[] colors = new int[101])<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new int[101])>", "4": "<(LOCAL,BufferedReader f: ANY)<SUB>3</SUB>>", "31": "<(IDENTIFIER,f,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "33": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "34": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "36": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "42": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "45": "<(IDENTIFIER,st,ANY st = new StringTokenizer(f.readLine()))<SUB>4</SUB>>", "47": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>4</SUB>>", "48": "<(readLine,readLine())<SUB>4</SUB>>", "50": "<(LOCAL,int N: int)<SUB>5</SUB>>", "52": "<(IDENTIFIER,N,int N = parseInt(st.nextToken()))<SUB>5</SUB>>", "54": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,st = new StringTokenizer(f.readLine()))<SUB>6</SUB>>", "60": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>6</SUB>>", "61": "<(readLine,readLine())<SUB>6</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i &lt; N)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,colors[Integer.parseInt(st.nextToken())])<SUB>8</SUB>>", "77": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "79": "<(nextToken,nextToken())<SUB>8</SUB>>", "81": "<(LOCAL,int colorCount: int)<SUB>10</SUB>>", "83": "<(IDENTIFIER,colorCount,int colorCount = 0)<SUB>10</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 100); i++),for (int i = 1; Some(i &lt;= 100); i++))<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "89": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,i &lt;= 100)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.notEquals,colors[i] != 0)<SUB>12</SUB>>", "99": "<(IDENTIFIER,colors,colors[i] != 0)<SUB>12</SUB>>", "101": "<(LITERAL,0,colors[i] != 0)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.assignment,colors[i] = 0)<SUB>13</SUB>>", "105": "<(IDENTIFIER,colors,colors[i] = 0)<SUB>13</SUB>>", "107": "<(LITERAL,0,colors[i] = 0)<SUB>13</SUB>>", "109": "<(LOCAL,int multiple: int)<SUB>14</SUB>>", "111": "<(IDENTIFIER,multiple,int multiple = 2)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.lessEqualsThan,multiple * i &lt;= 100)<SUB>14</SUB>>", "115": "<(IDENTIFIER,multiple,multiple * i)<SUB>14</SUB>>", "117": "<(LITERAL,100,multiple * i &lt;= 100)<SUB>14</SUB>>", "119": "<(IDENTIFIER,multiple,multiple++)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,colors[i * multiple] = 0)<SUB>15</SUB>>", "123": "<(IDENTIFIER,colors,colors[i * multiple] = 0)<SUB>15</SUB>>", "125": "<(IDENTIFIER,i,i * multiple)<SUB>15</SUB>>", "127": "<(LITERAL,0,colors[i * multiple] = 0)<SUB>15</SUB>>", "129": "<(IDENTIFIER,colorCount,colorCount++)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "133": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "135": "<(MODIFIER,PUBLIC)>", "137": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}