{"edges": [["21", "23"], ["21", "123"], ["21", "124"], ["21", "125"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "59"], ["23", "60"], ["23", "61"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "105"], ["23", "119"], ["23", "121"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "58"], ["56", "57"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "80"], ["70", "82"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "90"], ["82", "96"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "102"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "113"], ["107", "116"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "50"], ["46", "56"], ["53", "63"], ["61", "68"], ["66", "72"], ["105", "119"], ["119", "121"], ["121", "125"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["55", "53"], ["63", "61"], ["68", "66"], ["72", "79"], ["75", "87"], ["75", "109"], ["80", "79"], ["107", "105"], ["29", "36"], ["32", "27"], ["44", "42"], ["50", "48"], ["56", "55"], ["77", "75"], ["83", "93"], ["90", "99"], ["96", "80"], ["108", "113"], ["108", "116"], ["113", "107"], ["116", "107"], ["31", "29"], ["34", "32"], ["79", "77"], ["85", "83"], ["91", "90"], ["97", "102"], ["102", "96"], ["109", "108"], ["36", "34"], ["87", "85"], ["93", "91"], ["99", "97"], ["21", "26"], ["22", "125"], ["24", "125"], ["29", "125"], ["32", "125"], ["32", "125"], ["32", "125"], ["27", "125"], ["38", "125"], ["41", "125"], ["41", "125"], ["46", "125"], ["48", "125"], ["46", "125"], ["46", "125"], ["53", "125"], ["56", "125"], ["55", "125"], ["53", "125"], ["53", "125"], ["61", "125"], ["61", "125"], ["66", "125"], ["66", "125"], ["66", "125"], ["72", "125"], ["75", "125"], ["75", "125"], ["75", "125"], ["108", "125"], ["107", "125"], ["107", "125"], ["107", "125"], ["105", "125"], ["105", "125"], ["119", "125"], ["121", "125"], ["121", "125"], ["85", "125"], ["85", "125"], ["83", "125"], ["83", "125"], ["90", "125"], ["90", "125"], ["99", "125"], ["96", "125"], ["96", "125"], ["96", "125"], ["80", "125"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["63", "61"], ["68", "66"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "72"], ["41", "105"], ["21", "105"], ["66", "105"], ["105", "119"], ["21", "119"], ["119", "121"], ["21", "121"], ["21", "29"], ["21", "37"], ["21", "48"], ["50", "48"], ["56", "55"], ["21", "55"], ["21", "63"], ["21", "68"], ["72", "75"], ["80", "75"], ["21", "75"], ["53", "75"], ["21", "80"], ["75", "80"], ["85", "83"], ["85", "83"], ["75", "96"], ["21", "96"], ["66", "107"], ["29", "32"], ["21", "32"], ["27", "50"], ["21", "50"], ["50", "56"], ["21", "56"], ["61", "90"], ["61", "108"], ["21", "108"], ["48", "85"], ["21", "85"], ["53", "85"], ["75", "102"], ["21", "102"], ["83", "93"], ["21", "93"], ["93", "99"], ["21", "99"], ["75", "80"], ["75", "96"], ["75", "77"], ["75", "83"], ["75", "75"], ["75", "99"], ["75", "102"], ["75", "85"], ["75", "87"], ["75", "97"], ["75", "91"], ["75", "93"], ["75", "90"], ["75", "79"], ["108", "113"], ["108", "116"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY writer = new PrintWriter(System.out))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,writer,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(LOCAL,int n: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,int n = parseInt(reader.readLine()))<SUB>4</SUB>>", "49": "<(IDENTIFIER,Integer,parseInt(reader.readLine()))<SUB>4</SUB>>", "51": "<(IDENTIFIER,reader,readLine())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,String[] split = split(&quot;\\\\s+&quot;))<SUB>5</SUB>>", "55": "<(split,split(&quot;\\\\s+&quot;))<SUB>5</SUB>>", "57": "<(IDENTIFIER,reader,readLine())<SUB>5</SUB>>", "59": "<(LOCAL,int value: int)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] count = new int[2])<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[2])>", "65": "<(LOCAL,int[] pos: int[])<SUB>8</SUB>>", "67": "<(IDENTIFIER,pos,int[] pos = new int[2])<SUB>8</SUB>>", "69": "<(LITERAL,2,new int[2])<SUB>8</SUB>>", "71": "<(LOCAL,int i: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; split.length)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.fieldAccess,split.length)<SUB>9</SUB>>", "79": "<(FIELD_IDENTIFIER,length,length)<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.assignment,value = Integer.parseInt(split[i]))<SUB>10</SUB>>", "85": "<(parseInt,Integer.parseInt(split[i]))<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,split[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,Integer.parseInt(split[i]))<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,count[value % 2])<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.modulo,value % 2)<SUB>11</SUB>>", "95": "<(LITERAL,2,value % 2)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,pos[value % 2])<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.modulo,value % 2)<SUB>12</SUB>>", "101": "<(LITERAL,2,value % 2)<SUB>12</SUB>>", "103": "<(IDENTIFIER,i,i + 1)<SUB>12</SUB>>", "105": "<(println,println((count[0] == 1) ? pos[0] : pos[1]))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.conditional,(count[0] == 1) ? pos[0] : pos[1])<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,count[0])<SUB>14</SUB>>", "111": "<(LITERAL,0,count[0] == 1)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,pos[0])<SUB>14</SUB>>", "115": "<(LITERAL,0,(count[0] == 1) ? pos[0] : pos[1])<SUB>14</SUB>>", "117": "<(IDENTIFIER,pos,(count[0] == 1) ? pos[0] : pos[1])<SUB>14</SUB>>", "119": "<(flush,flush())<SUB>15</SUB>>", "121": "<(close,close())<SUB>16</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}