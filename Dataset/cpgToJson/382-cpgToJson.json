{"edges": [["23", "25"], ["23", "383"], ["23", "384"], ["23", "385"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "50"], ["25", "51"], ["25", "55"], ["25", "56"], ["25", "60"], ["25", "8"], ["25", "77"], ["25", "80"], ["25", "81"], ["25", "98"], ["25", "110"], ["25", "111"], ["25", "115"], ["25", "120"], ["25", "121"], ["25", "124"], ["25", "346"], ["25", "369"], ["25", "381"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "79"], ["80", "7"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "94"], ["92", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "109"], ["103", "104"], ["103", "105"], ["103", "106"], ["103", "107"], ["103", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["118", "119"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "144"], ["134", "145"], ["134", "150"], ["134", "151"], ["134", "156"], ["134", "157"], ["134", "162"], ["135", "136"], ["135", "142"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "170"], ["162", "172"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["172", "173"], ["173", "174"], ["173", "177"], ["173", "259"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "183"], ["177", "186"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "201"], ["188", "202"], ["188", "207"], ["188", "208"], ["188", "213"], ["188", "229"], ["188", "234"], ["188", "239"], ["188", "249"], ["188", "254"], ["189", "190"], ["189", "199"], ["190", "191"], ["190", "195"], ["191", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["196", "197"], ["196", "198"], ["199", "200"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "225"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "247"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["247", "248"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "258"], ["259", "260"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["264", "269"], ["264", "270"], ["264", "273"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "288"], ["275", "289"], ["275", "294"], ["275", "295"], ["275", "300"], ["275", "316"], ["275", "321"], ["275", "326"], ["275", "336"], ["275", "341"], ["276", "277"], ["276", "286"], ["277", "278"], ["277", "282"], ["278", "279"], ["279", "280"], ["279", "281"], ["282", "283"], ["283", "284"], ["283", "285"], ["286", "287"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "312"], ["301", "302"], ["301", "307"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["307", "308"], ["307", "311"], ["308", "309"], ["308", "310"], ["312", "313"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "320"], ["317", "318"], ["317", "319"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["326", "327"], ["326", "334"], ["327", "328"], ["327", "333"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["334", "335"], ["336", "337"], ["336", "338"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "343"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "348"], ["346", "351"], ["346", "354"], ["346", "356"], ["348", "349"], ["348", "350"], ["351", "352"], ["351", "353"], ["354", "355"], ["356", "357"], ["357", "358"], ["357", "364"], ["358", "359"], ["358", "362"], ["359", "360"], ["359", "361"], ["362", "363"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["369", "370"], ["369", "371"], ["369", "376"], ["371", "372"], ["372", "373"], ["372", "374"], ["372", "375"], ["376", "377"], ["377", "378"], ["378", "379"], ["378", "380"], ["381", "382"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "43"], ["41", "48"], ["46", "53"], ["51", "58"], ["56", "62"], ["77", "80"], ["80", "83"], ["111", "118"], ["115", "121"], ["121", "126"], ["381", "385"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["62", "65"], ["65", "72"], ["65", "79"], ["68", "65"], ["79", "77"], ["83", "86"], ["86", "94"], ["86", "99"], ["89", "86"], ["99", "103"], ["99", "113"], ["113", "111"], ["118", "115"], ["126", "129"], ["129", "137"], ["129", "348"], ["132", "129"], ["348", "351"], ["351", "370"], ["351", "359"], ["354", "351"], ["370", "372"], ["370", "378"], ["32", "30"], ["39", "37"], ["71", "68"], ["92", "89"], ["103", "109"], ["109", "385"], ["145", "153"], ["151", "159"], ["157", "164"], ["372", "381"], ["72", "75"], ["75", "71"], ["94", "92"], ["136", "132"], ["136", "147"], ["147", "145"], ["153", "151"], ["159", "157"], ["163", "132"], ["163", "174"], ["358", "365"], ["358", "354"], ["378", "381"], ["137", "140"], ["140", "136"], ["164", "163"], ["164", "167"], ["167", "163"], ["359", "362"], ["362", "358"], ["365", "370"], ["174", "179"], ["174", "261"], ["179", "183"], ["183", "192"], ["183", "132"], ["261", "266"], ["261", "132"], ["202", "210"], ["208", "216"], ["229", "235"], ["234", "242"], ["249", "256"], ["254", "192"], ["254", "132"], ["266", "270"], ["270", "279"], ["270", "132"], ["190", "132"], ["190", "204"], ["204", "202"], ["210", "208"], ["214", "226"], ["214", "230"], ["230", "229"], ["235", "234"], ["240", "132"], ["240", "251"], ["251", "249"], ["256", "254"], ["191", "190"], ["191", "196"], ["195", "190"], ["215", "214"], ["215", "221"], ["220", "214"], ["226", "230"], ["241", "240"], ["289", "297"], ["295", "303"], ["316", "322"], ["321", "329"], ["336", "343"], ["341", "279"], ["341", "132"], ["192", "191"], ["196", "195"], ["216", "215"], ["221", "220"], ["242", "241"], ["277", "132"], ["277", "291"], ["291", "289"], ["297", "295"], ["301", "313"], ["301", "317"], ["317", "316"], ["322", "321"], ["327", "132"], ["327", "338"], ["338", "336"], ["343", "341"], ["278", "277"], ["278", "283"], ["282", "277"], ["302", "301"], ["302", "308"], ["307", "301"], ["313", "317"], ["328", "327"], ["279", "278"], ["283", "282"], ["303", "302"], ["308", "307"], ["329", "328"], ["23", "28"], ["109", "385"], ["24", "385"], ["26", "385"], ["29", "385"], ["29", "385"], ["33", "385"], ["36", "385"], ["36", "385"], ["41", "385"], ["41", "385"], ["46", "385"], ["53", "385"], ["51", "385"], ["51", "385"], ["56", "385"], ["56", "385"], ["77", "385"], ["80", "385"], ["83", "385"], ["86", "385"], ["86", "385"], ["86", "385"], ["99", "385"], ["99", "385"], ["103", "385"], ["103", "385"], ["103", "385"], ["103", "385"], ["103", "385"], ["103", "385"], ["92", "385"], ["92", "385"], ["89", "385"], ["71", "385"], ["75", "385"], ["71", "385"], ["71", "385"], ["68", "385"], ["115", "385"], ["23", "24"], ["23", "26"], ["23", "33"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["23", "77"], ["113", "111"], ["23", "121"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["23", "62"], ["77", "80"], ["23", "80"], ["23", "83"], ["23", "115"], ["111", "115"], ["118", "115"], ["23", "126"], ["23", "348"], ["23", "370"], ["378", "381"], ["372", "381"], ["23", "381"], ["29", "43"], ["23", "43"], ["43", "48"], ["23", "48"], ["48", "53"], ["23", "53"], ["41", "58"], ["23", "58"], ["62", "65"], ["68", "65"], ["23", "65"], ["58", "65"], ["65", "68"], ["23", "68"], ["75", "71"], ["83", "86"], ["89", "86"], ["23", "86"], ["65", "86"], ["92", "89"], ["23", "89"], ["46", "99"], ["23", "99"], ["51", "99"], ["23", "109"], ["86", "113"], ["23", "113"], ["23", "118"], ["126", "129"], ["132", "129"], ["23", "129"], ["113", "129"], ["129", "132"], ["23", "132"], ["56", "145"], ["92", "145"], ["71", "145"], ["153", "151"], ["153", "151"], ["159", "157"], ["159", "157"], ["348", "351"], ["354", "351"], ["23", "351"], ["129", "351"], ["351", "354"], ["23", "354"], ["80", "92"], ["23", "92"], ["56", "92"], ["71", "92"], ["86", "92"], ["23", "103"], ["56", "103"], ["92", "103"], ["71", "103"], ["99", "103"], ["80", "103"], ["92", "103"], ["36", "103"], ["23", "372"], ["115", "372"], ["358", "372"], ["136", "372"], ["316", "372"], ["321", "372"], ["229", "372"], ["234", "372"], ["36", "372"], ["53", "75"], ["23", "75"], ["115", "136"], ["140", "136"], ["99", "153"], ["328", "153"], ["343", "153"], ["256", "153"], ["23", "153"], ["145", "153"], ["99", "159"], ["343", "159"], ["241", "159"], ["256", "159"], ["23", "159"], ["153", "159"], ["164", "163"], ["164", "163"], ["167", "163"], ["167", "163"], ["174", "163"], ["115", "358"], ["136", "358"], ["362", "358"], ["23", "365"], ["36", "378"], ["23", "378"], ["23", "140"], ["80", "164"], ["167", "164"], ["174", "164"], ["261", "164"], ["279", "164"], ["283", "164"], ["297", "164"], ["192", "164"], ["196", "164"], ["210", "164"], ["92", "164"], ["23", "164"], ["151", "164"], ["164", "167"], ["23", "167"], ["157", "167"], ["23", "362"], ["164", "174"], ["167", "174"], ["23", "174"], ["157", "174"], ["167", "174"], ["159", "179"], ["23", "179"], ["174", "183"], ["23", "183"], ["23", "187"], ["204", "202"], ["204", "202"], ["210", "208"], ["210", "208"], ["23", "229"], ["23", "234"], ["251", "249"], ["251", "249"], ["256", "254"], ["256", "254"], ["174", "261"], ["23", "261"], ["164", "261"], ["159", "266"], ["23", "266"], ["261", "270"], ["23", "270"], ["23", "249"], ["204", "249"], ["240", "254"], ["23", "254"], ["23", "274"], ["191", "190"], ["277", "190"], ["195", "190"], ["192", "204"], ["196", "204"], ["23", "204"], ["192", "204"], ["204", "210"], ["23", "210"], ["183", "210"], ["196", "210"], ["254", "210"], ["215", "214"], ["215", "214"], ["220", "214"], ["220", "214"], ["23", "226"], ["241", "240"], ["241", "240"], ["210", "240"], ["23", "240"], ["23", "251"], ["153", "251"], ["256", "251"], ["241", "251"], ["251", "256"], ["23", "256"], ["251", "256"], ["291", "289"], ["291", "289"], ["297", "295"], ["297", "295"], ["23", "316"], ["23", "321"], ["338", "336"], ["338", "336"], ["343", "341"], ["343", "341"], ["192", "191"], ["192", "191"], ["196", "195"], ["196", "195"], ["115", "215"], ["316", "215"], ["229", "215"], ["23", "215"], ["115", "220"], ["321", "220"], ["234", "220"], ["23", "220"], ["204", "241"], ["23", "241"], ["153", "241"], ["256", "241"], ["159", "241"], ["256", "241"], ["23", "336"], ["291", "336"], ["327", "341"], ["23", "341"], ["174", "192"], ["210", "192"], ["23", "192"], ["179", "192"], ["249", "192"], ["192", "196"], ["23", "196"], ["183", "196"], ["254", "196"], ["204", "242"], ["23", "242"], ["153", "242"], ["256", "242"], ["278", "277"], ["190", "277"], ["282", "277"], ["279", "291"], ["283", "291"], ["23", "291"], ["279", "291"], ["291", "297"], ["23", "297"], ["270", "297"], ["283", "297"], ["341", "297"], ["302", "301"], ["302", "301"], ["307", "301"], ["307", "301"], ["23", "313"], ["328", "327"], ["328", "327"], ["297", "327"], ["23", "327"], ["23", "338"], ["159", "338"], ["343", "338"], ["328", "338"], ["338", "343"], ["23", "343"], ["338", "343"], ["279", "278"], ["279", "278"], ["283", "282"], ["283", "282"], ["115", "302"], ["316", "302"], ["229", "302"], ["23", "302"], ["115", "307"], ["321", "307"], ["234", "307"], ["23", "307"], ["291", "328"], ["23", "328"], ["159", "328"], ["343", "328"], ["153", "328"], ["343", "328"], ["261", "279"], ["297", "279"], ["23", "279"], ["266", "279"], ["336", "279"], ["279", "283"], ["23", "283"], ["270", "283"], ["341", "283"], ["291", "329"], ["23", "329"], ["159", "329"], ["343", "329"], ["65", "68"], ["65", "72"], ["65", "65"], ["65", "71"], ["65", "75"], ["86", "86"], ["86", "94"], ["86", "92"], ["86", "89"], ["99", "129"], ["99", "370"], ["99", "118"], ["99", "348"], ["99", "351"], ["99", "109"], ["99", "115"], ["99", "113"], ["99", "103"], ["99", "121"], ["99", "111"], ["99", "381"], ["99", "126"], ["129", "136"], ["129", "129"], ["129", "140"], ["129", "132"], ["129", "137"], ["351", "358"], ["351", "362"], ["351", "359"], ["370", "378"], ["370", "372"], ["136", "163"], ["136", "159"], ["136", "147"], ["136", "145"], ["136", "151"], ["136", "153"], ["136", "164"], ["136", "157"], ["163", "174"], ["358", "365"], ["358", "351"], ["358", "354"], ["164", "167"], ["174", "179"], ["174", "261"], ["174", "183"], ["174", "192"], ["174", "190"], ["174", "191"], ["261", "270"], ["261", "266"], ["261", "278"], ["261", "279"], ["261", "277"], ["190", "214"], ["190", "230"], ["190", "215"], ["190", "240"], ["190", "204"], ["190", "208"], ["190", "242"], ["190", "202"], ["190", "229"], ["190", "241"], ["190", "216"], ["190", "235"], ["190", "210"], ["190", "234"], ["214", "226"], ["240", "256"], ["240", "249"], ["240", "254"], ["240", "251"], ["240", "192"], ["240", "190"], ["240", "191"], ["191", "196"], ["191", "195"], ["215", "221"], ["215", "220"], ["277", "322"], ["277", "317"], ["277", "302"], ["277", "329"], ["277", "328"], ["277", "316"], ["277", "297"], ["277", "321"], ["277", "291"], ["277", "301"], ["277", "289"], ["277", "327"], ["277", "295"], ["277", "303"], ["301", "313"], ["327", "338"], ["327", "336"], ["327", "341"], ["327", "343"], ["327", "278"], ["327", "279"], ["327", "277"], ["278", "283"], ["278", "282"], ["302", "308"], ["302", "307"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,long a: long)<SUB>6</SUB>>", "47": "<(IDENTIFIER,a,long a = nextLong())<SUB>6</SUB>>", "49": "<(IDENTIFIER,in,nextLong())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,long b = nextLong())<SUB>7</SUB>>", "53": "<(nextLong,nextLong())<SUB>7</SUB>>", "55": "<(LOCAL,long[] x: long[])<SUB>8</SUB>>", "57": "<(IDENTIFIER,x,long[] x = new long[n])<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,new long[n])<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,x[i] = nextLong())<SUB>10</SUB>>", "73": "<(IDENTIFIER,x,x[i] = nextLong())<SUB>10</SUB>>", "75": "<(nextLong,nextLong())<SUB>10</SUB>>", "8": "<(LOCAL,Map&lt;Long, Integer&gt; idxmap: ANY)<SUB>13</SUB>>", "78": "<(IDENTIFIER,idxmap,ANY idxmap = new HashMap&lt;&gt;())<SUB>13</SUB>>", "80": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>13</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(IDENTIFIER,idxmap,put(x[i], i))<SUB>15</SUB>>", "95": "<(IDENTIFIER,x,put(x[i], i))<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,put(x[i], i))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.equals,a == b)<SUB>17</SUB>>", "101": "<(IDENTIFIER,b,a == b)<SUB>17</SUB>>", "103": "<(solve1,solve1(x, a, idxmap, out))<SUB>18</SUB>>", "105": "<(IDENTIFIER,x,solve1(x, a, idxmap, out))<SUB>18</SUB>>", "107": "<(IDENTIFIER,idxmap,solve1(x, a, idxmap, out))<SUB>18</SUB>>", "109": "<(RETURN,return;,return;)<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,int[] mark = new int[n])<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.alloc,new int[n])>", "115": "<(fill,fill(mark, -1))<SUB>23</SUB>>", "117": "<(IDENTIFIER,mark,fill(mark, -1))<SUB>23</SUB>>", "119": "<(LITERAL,1,-1)<SUB>23</SUB>>", "121": "<(&lt;operator&gt;.assignment,boolean isok = true)<SUB>24</SUB>>", "123": "<(LITERAL,true,boolean isok = true)<SUB>24</SUB>>", "125": "<(LOCAL,int i: int)<SUB>25</SUB>>", "127": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>25</SUB>>", "131": "<(IDENTIFIER,n,i &lt; n)<SUB>25</SUB>>", "133": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "135": "<(CONTROL_STRUCTURE,if (mark[i] != -1),if (mark[i] != -1))<SUB>26</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,mark[i])<SUB>26</SUB>>", "139": "<(IDENTIFIER,i,mark[i] != -1)<SUB>26</SUB>>", "141": "<(LITERAL,1,-1)<SUB>26</SUB>>", "143": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.assignment,long w = x[i])<SUB>29</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>29</SUB>>", "149": "<(IDENTIFIER,i,long w = x[i])<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.assignment,long aw = a - w)<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.subtraction,a - w)<SUB>30</SUB>>", "155": "<(IDENTIFIER,w,a - w)<SUB>30</SUB>>", "157": "<(&lt;operator&gt;.assignment,long bw = b - w)<SUB>31</SUB>>", "159": "<(&lt;operator&gt;.subtraction,b - w)<SUB>31</SUB>>", "161": "<(IDENTIFIER,w,b - w)<SUB>31</SUB>>", "163": "<(&lt;operator&gt;.logicalAnd,idxmap.containsKey(aw) &amp;&amp; idxmap.containsKey(bw))<SUB>32</SUB>>", "165": "<(IDENTIFIER,idxmap,containsKey(aw))<SUB>32</SUB>>", "167": "<(containsKey,containsKey(bw))<SUB>32</SUB>>", "169": "<(IDENTIFIER,bw,containsKey(bw))<SUB>32</SUB>>", "171": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>33</SUB>>", "173": "<(CONTROL_STRUCTURE,if (idxmap.containsKey(bw)),if (idxmap.containsKey(bw)))<SUB>34</SUB>>", "175": "<(IDENTIFIER,idxmap,containsKey(bw))<SUB>34</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "179": "<(&lt;operator&gt;.assignment,long w1 = w)<SUB>35</SUB>>", "181": "<(IDENTIFIER,w,long w1 = w)<SUB>35</SUB>>", "183": "<(&lt;operator&gt;.assignment,long w2 = bw)<SUB>36</SUB>>", "185": "<(IDENTIFIER,bw,long w2 = bw)<SUB>36</SUB>>", "187": "<(LITERAL,true,while (true))<SUB>37</SUB>>", "189": "<(CONTROL_STRUCTURE,if (!idxmap.containsKey(w1) || !idxmap.containsKey(w2)),if (!idxmap.containsKey(w1) || !idxmap.containsKey(w2)))<SUB>38</SUB>>", "191": "<(&lt;operator&gt;.logicalNot,!idxmap.containsKey(w1))<SUB>38</SUB>>", "193": "<(IDENTIFIER,idxmap,containsKey(w1))<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.logicalNot,!idxmap.containsKey(w2))<SUB>38</SUB>>", "197": "<(IDENTIFIER,idxmap,containsKey(w2))<SUB>38</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "201": "<(LOCAL,int i1: int)<SUB>41</SUB>>", "203": "<(IDENTIFIER,i1,int i1 = get(w1))<SUB>41</SUB>>", "205": "<(IDENTIFIER,idxmap,get(w1))<SUB>41</SUB>>", "207": "<(LOCAL,int i2: int)<SUB>42</SUB>>", "209": "<(IDENTIFIER,i2,int i2 = get(w2))<SUB>42</SUB>>", "211": "<(IDENTIFIER,idxmap,get(w2))<SUB>42</SUB>>", "213": "<(CONTROL_STRUCTURE,if (mark[i1] == 0 || mark[i2] == 0),if (mark[i1] == 0 || mark[i2] == 0))<SUB>43</SUB>>", "215": "<(&lt;operator&gt;.equals,mark[i1] == 0)<SUB>43</SUB>>", "217": "<(IDENTIFIER,mark,mark[i1] == 0)<SUB>43</SUB>>", "219": "<(LITERAL,0,mark[i1] == 0)<SUB>43</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,mark[i2])<SUB>43</SUB>>", "223": "<(IDENTIFIER,i2,mark[i2] == 0)<SUB>43</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "227": "<(IDENTIFIER,isok,isok = false)<SUB>44</SUB>>", "229": "<(&lt;operator&gt;.assignment,mark[i1] = 1)<SUB>46</SUB>>", "231": "<(IDENTIFIER,mark,mark[i1] = 1)<SUB>46</SUB>>", "233": "<(LITERAL,1,mark[i1] = 1)<SUB>46</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,mark[i2])<SUB>47</SUB>>", "237": "<(IDENTIFIER,i2,mark[i2] = 1)<SUB>47</SUB>>", "239": "<(CONTROL_STRUCTURE,if (w1 + a - b == w2),if (w1 + a - b == w2))<SUB>48</SUB>>", "241": "<(&lt;operator&gt;.subtraction,w1 + a - b)<SUB>48</SUB>>", "243": "<(IDENTIFIER,w1,w1 + a)<SUB>48</SUB>>", "245": "<(IDENTIFIER,b,w1 + a - b)<SUB>48</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "249": "<(&lt;operator&gt;.assignmentPlus,w1 += a - b)<SUB>51</SUB>>", "251": "<(&lt;operator&gt;.subtraction,a - b)<SUB>51</SUB>>", "253": "<(IDENTIFIER,b,a - b)<SUB>51</SUB>>", "255": "<(IDENTIFIER,w2,w2 += b - a)<SUB>52</SUB>>", "257": "<(IDENTIFIER,b,b - a)<SUB>52</SUB>>", "259": "<(CONTROL_STRUCTURE,else,else)<SUB>54</SUB>>", "261": "<(containsKey,containsKey(aw))<SUB>54</SUB>>", "263": "<(IDENTIFIER,aw,containsKey(aw))<SUB>54</SUB>>", "265": "<(LOCAL,long w1: long)<SUB>55</SUB>>", "267": "<(IDENTIFIER,w1,long w1 = w)<SUB>55</SUB>>", "269": "<(LOCAL,long w2: long)<SUB>56</SUB>>", "271": "<(IDENTIFIER,w2,long w2 = aw)<SUB>56</SUB>>", "273": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>57</SUB>>", "275": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "277": "<(&lt;operator&gt;.logicalOr,!idxmap.containsKey(w1) || !idxmap.containsKey(w2))<SUB>58</SUB>>", "279": "<(containsKey,containsKey(w1))<SUB>58</SUB>>", "281": "<(IDENTIFIER,w1,containsKey(w1))<SUB>58</SUB>>", "283": "<(containsKey,containsKey(w2))<SUB>58</SUB>>", "285": "<(IDENTIFIER,w2,containsKey(w2))<SUB>58</SUB>>", "287": "<(CONTROL_STRUCTURE,break;,break;)<SUB>59</SUB>>", "289": "<(&lt;operator&gt;.assignment,int i1 = get(w1))<SUB>61</SUB>>", "291": "<(get,get(w1))<SUB>61</SUB>>", "293": "<(IDENTIFIER,w1,get(w1))<SUB>61</SUB>>", "295": "<(&lt;operator&gt;.assignment,int i2 = get(w2))<SUB>62</SUB>>", "297": "<(get,get(w2))<SUB>62</SUB>>", "299": "<(IDENTIFIER,w2,get(w2))<SUB>62</SUB>>", "301": "<(&lt;operator&gt;.logicalOr,mark[i1] == 1 || mark[i2] == 1)<SUB>63</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,mark[i1])<SUB>63</SUB>>", "305": "<(IDENTIFIER,i1,mark[i1] == 1)<SUB>63</SUB>>", "307": "<(&lt;operator&gt;.equals,mark[i2] == 1)<SUB>63</SUB>>", "309": "<(IDENTIFIER,mark,mark[i2] == 1)<SUB>63</SUB>>", "311": "<(LITERAL,1,mark[i2] == 1)<SUB>63</SUB>>", "313": "<(&lt;operator&gt;.assignment,isok = false)<SUB>64</SUB>>", "315": "<(LITERAL,false,isok = false)<SUB>64</SUB>>", "317": "<(&lt;operator&gt;.indexAccess,mark[i1])<SUB>66</SUB>>", "319": "<(IDENTIFIER,i1,mark[i1] = 0)<SUB>66</SUB>>", "321": "<(&lt;operator&gt;.assignment,mark[i2] = 0)<SUB>67</SUB>>", "323": "<(IDENTIFIER,mark,mark[i2] = 0)<SUB>67</SUB>>", "325": "<(LITERAL,0,mark[i2] = 0)<SUB>67</SUB>>", "327": "<(&lt;operator&gt;.equals,w1 + b - a == w2)<SUB>68</SUB>>", "329": "<(&lt;operator&gt;.addition,w1 + b)<SUB>68</SUB>>", "331": "<(IDENTIFIER,b,w1 + b)<SUB>68</SUB>>", "333": "<(IDENTIFIER,w2,w1 + b - a == w2)<SUB>68</SUB>>", "335": "<(CONTROL_STRUCTURE,break;,break;)<SUB>69</SUB>>", "337": "<(IDENTIFIER,w1,w1 += b - a)<SUB>71</SUB>>", "339": "<(IDENTIFIER,b,b - a)<SUB>71</SUB>>", "341": "<(&lt;operator&gt;.assignmentPlus,w2 += a - b)<SUB>72</SUB>>", "343": "<(&lt;operator&gt;.subtraction,a - b)<SUB>72</SUB>>", "345": "<(IDENTIFIER,b,a - b)<SUB>72</SUB>>", "347": "<(LOCAL,int i: int)<SUB>76</SUB>>", "349": "<(IDENTIFIER,i,int i = 0)<SUB>76</SUB>>", "351": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>76</SUB>>", "353": "<(IDENTIFIER,n,i &lt; n)<SUB>76</SUB>>", "355": "<(IDENTIFIER,i,i++)<SUB>76</SUB>>", "357": "<(CONTROL_STRUCTURE,if (mark[i] == -1),if (mark[i] == -1))<SUB>77</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,mark[i])<SUB>77</SUB>>", "361": "<(IDENTIFIER,i,mark[i] == -1)<SUB>77</SUB>>", "363": "<(LITERAL,1,-1)<SUB>77</SUB>>", "365": "<(&lt;operator&gt;.assignment,isok = false)<SUB>78</SUB>>", "367": "<(LITERAL,false,isok = false)<SUB>78</SUB>>", "369": "<(CONTROL_STRUCTURE,if (isok),if (isok))<SUB>82</SUB>>", "371": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>>", "373": "<(IDENTIFIER,this,printAnswer(mark, out))<SUB>83</SUB>>", "375": "<(IDENTIFIER,out,printAnswer(mark, out))<SUB>83</SUB>>", "377": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>>", "379": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>85</SUB>>", "381": "<(flush,flush())<SUB>87</SUB>>", "383": "<(MODIFIER,PUBLIC)>", "385": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}