{"edges": [["17", "19"], ["17", "379"], ["17", "380"], ["17", "381"], ["19", "20"], ["19", "24"], ["19", "28"], ["19", "56"], ["19", "102"], ["19", "212"], ["19", "235"], ["19", "374"], ["19", "377"], ["20", "21"], ["20", "22"], ["22", "23"], ["24", "25"], ["24", "26"], ["26", "27"], ["28", "29"], ["28", "30"], ["28", "33"], ["28", "36"], ["28", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "43"], ["38", "46"], ["38", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "54"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["54", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "66"], ["60", "96"], ["60", "99"], ["60", "101"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["78", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "138"], ["122", "174"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["154", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "169"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["190", "197"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "220"], ["212", "222"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["222", "232"], ["223", "224"], ["223", "231"], ["224", "225"], ["224", "230"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "229"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["235", "240"], ["235", "245"], ["235", "247"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["247", "253"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "255"], ["253", "258"], ["253", "261"], ["253", "263"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["263", "264"], ["263", "270"], ["264", "265"], ["264", "269"], ["265", "266"], ["265", "267"], ["265", "268"], ["270", "271"], ["270", "272"], ["270", "275"], ["270", "278"], ["270", "280"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["278", "279"], ["280", "281"], ["280", "291"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "290"], ["286", "287"], ["286", "288"], ["286", "289"], ["291", "292"], ["291", "347"], ["292", "293"], ["292", "294"], ["292", "297"], ["292", "300"], ["292", "302"], ["294", "295"], ["294", "296"], ["297", "298"], ["297", "299"], ["300", "301"], ["302", "303"], ["302", "313"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "312"], ["308", "309"], ["308", "310"], ["308", "311"], ["313", "314"], ["313", "321"], ["314", "315"], ["314", "320"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["321", "322"], ["321", "323"], ["321", "330"], ["323", "324"], ["323", "329"], ["324", "325"], ["324", "328"], ["325", "326"], ["325", "327"], ["330", "331"], ["330", "332"], ["330", "342"], ["332", "333"], ["332", "341"], ["333", "334"], ["333", "340"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "338"], ["336", "339"], ["342", "343"], ["342", "346"], ["343", "344"], ["343", "345"], ["347", "348"], ["347", "355"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "359"], ["357", "360"], ["360", "361"], ["360", "362"], ["360", "369"], ["362", "363"], ["362", "368"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["369", "370"], ["369", "373"], ["370", "371"], ["370", "372"], ["374", "375"], ["374", "376"], ["377", "378"], ["20", "26"], ["24", "30"], ["374", "377"], ["377", "381"], ["22", "20"], ["26", "24"], ["30", "33"], ["33", "40"], ["33", "57"], ["36", "33"], ["57", "64"], ["57", "104"], ["104", "107"], ["107", "114"], ["107", "214"], ["110", "107"], ["214", "217"], ["217", "227"], ["217", "237"], ["220", "217"], ["222", "220"], ["237", "242"], ["240", "249"], ["240", "374"], ["245", "242"], ["40", "43"], ["43", "50"], ["43", "36"], ["46", "43"], ["48", "46"], ["61", "68"], ["96", "99"], ["99", "101"], ["101", "381"], ["114", "117"], ["117", "125"], ["117", "110"], ["120", "117"], ["223", "233"], ["232", "222"], ["242", "240"], ["248", "255"], ["248", "245"], ["49", "54"], ["54", "48"], ["63", "61"], ["68", "71"], ["71", "85"], ["71", "96"], ["74", "71"], ["76", "74"], ["123", "140"], ["224", "223"], ["233", "232"], ["249", "248"], ["255", "258"], ["258", "265"], ["258", "245"], ["261", "258"], ["50", "49"], ["64", "63"], ["78", "76"], ["124", "131"], ["129", "123"], ["140", "143"], ["143", "150"], ["143", "176"], ["146", "143"], ["148", "146"], ["176", "179"], ["179", "186"], ["179", "120"], ["182", "179"], ["184", "182"], ["225", "224"], ["264", "272"], ["264", "261"], ["81", "78"], ["125", "124"], ["130", "136"], ["135", "129"], ["149", "157"], ["154", "148"], ["185", "193"], ["190", "184"], ["227", "225"], ["265", "264"], ["272", "275"], ["275", "282"], ["275", "261"], ["278", "275"], ["83", "81"], ["131", "130"], ["136", "135"], ["150", "149"], ["156", "165"], ["161", "154"], ["186", "185"], ["192", "201"], ["197", "190"], ["281", "294"], ["281", "278"], ["84", "90"], ["89", "83"], ["157", "156"], ["163", "161"], ["193", "192"], ["199", "197"], ["282", "281"], ["282", "286"], ["285", "281"], ["85", "84"], ["90", "93"], ["93", "89"], ["164", "170"], ["169", "163"], ["200", "206"], ["205", "199"], ["286", "285"], ["294", "297"], ["297", "304"], ["297", "351"], ["300", "297"], ["348", "364"], ["348", "278"], ["355", "278"], ["165", "164"], ["170", "169"], ["201", "200"], ["206", "209"], ["209", "205"], ["303", "316"], ["303", "300"], ["313", "300"], ["350", "348"], ["357", "355"], ["304", "303"], ["304", "308"], ["307", "303"], ["314", "325"], ["321", "313"], ["351", "350"], ["360", "357"], ["308", "307"], ["315", "314"], ["323", "336"], ["330", "321"], ["362", "370"], ["369", "360"], ["316", "315"], ["324", "323"], ["332", "343"], ["342", "330"], ["363", "362"], ["370", "369"], ["325", "324"], ["333", "332"], ["343", "342"], ["364", "363"], ["334", "333"], ["336", "334"], ["17", "22"], ["101", "381"], ["18", "381"], ["20", "381"], ["26", "381"], ["24", "381"], ["24", "381"], ["30", "381"], ["33", "381"], ["57", "381"], ["57", "381"], ["61", "381"], ["61", "381"], ["68", "381"], ["71", "381"], ["71", "381"], ["71", "381"], ["96", "381"], ["96", "381"], ["99", "381"], ["99", "381"], ["78", "381"], ["83", "381"], ["83", "381"], ["81", "381"], ["78", "381"], ["76", "381"], ["76", "381"], ["74", "381"], ["40", "381"], ["43", "381"], ["43", "381"], ["36", "381"], ["48", "381"], ["54", "381"], ["48", "381"], ["48", "381"], ["46", "381"], ["249", "381"], ["17", "18"], ["22", "20"], ["26", "24"], ["17", "30"], ["17", "104"], ["17", "214"], ["17", "222"], ["17", "237"], ["17", "374"], ["355", "374"], ["374", "377"], ["17", "377"], ["17", "22"], ["22", "26"], ["17", "26"], ["30", "33"], ["36", "33"], ["17", "33"], ["20", "33"], ["33", "36"], ["17", "36"], ["17", "40"], ["54", "48"], ["33", "57"], ["17", "57"], ["17", "61"], ["17", "101"], ["104", "107"], ["110", "107"], ["17", "107"], ["57", "107"], ["117", "107"], ["107", "110"], ["17", "110"], ["17", "114"], ["214", "217"], ["220", "217"], ["17", "217"], ["107", "217"], ["227", "220"], ["17", "220"], ["237", "240"], ["245", "240"], ["17", "240"], ["242", "240"], ["242", "240"], ["249", "245"], ["265", "245"], ["286", "245"], ["348", "245"], ["17", "245"], ["40", "43"], ["46", "43"], ["17", "43"], ["24", "43"], ["43", "46"], ["17", "46"], ["17", "68"], ["78", "76"], ["78", "76"], ["78", "76"], ["17", "96"], ["61", "96"], ["76", "96"], ["96", "99"], ["17", "99"], ["114", "117"], ["120", "117"], ["17", "117"], ["107", "117"], ["117", "120"], ["17", "120"], ["129", "123"], ["17", "123"], ["17", "232"], ["17", "242"], ["217", "242"], ["258", "242"], ["249", "248"], ["249", "248"], ["17", "248"], ["17", "255"], ["26", "54"], ["17", "54"], ["17", "63"], ["68", "71"], ["74", "71"], ["17", "71"], ["24", "71"], ["43", "71"], ["17", "74"], ["71", "74"], ["17", "140"], ["154", "148"], ["154", "148"], ["154", "148"], ["17", "176"], ["190", "184"], ["190", "184"], ["190", "184"], ["17", "249"], ["240", "249"], ["255", "258"], ["261", "258"], ["17", "258"], ["242", "258"], ["275", "258"], ["265", "261"], ["282", "261"], ["17", "261"], ["81", "78"], ["17", "78"], ["61", "78"], ["76", "78"], ["81", "78"], ["17", "129"], ["140", "143"], ["146", "143"], ["17", "143"], ["24", "143"], ["179", "143"], ["43", "143"], ["143", "146"], ["17", "146"], ["176", "179"], ["182", "179"], ["17", "179"], ["143", "179"], ["17", "182"], ["179", "182"], ["265", "264"], ["265", "264"], ["265", "264"], ["17", "264"], ["17", "272"], ["78", "81"], ["17", "81"], ["83", "81"], ["83", "81"], ["17", "135"], ["161", "154"], ["17", "154"], ["123", "154"], ["148", "154"], ["161", "154"], ["197", "190"], ["17", "190"], ["129", "190"], ["184", "190"], ["197", "190"], ["17", "227"], ["217", "227"], ["286", "265"], ["308", "265"], ["336", "265"], ["17", "265"], ["249", "265"], ["286", "265"], ["348", "265"], ["258", "265"], ["272", "275"], ["278", "275"], ["17", "275"], ["258", "275"], ["351", "275"], ["282", "278"], ["286", "278"], ["304", "278"], ["336", "278"], ["17", "278"], ["190", "161"], ["154", "161"], ["17", "161"], ["163", "161"], ["163", "161"], ["190", "197"], ["154", "197"], ["17", "197"], ["199", "197"], ["199", "197"], ["282", "281"], ["282", "281"], ["285", "281"], ["285", "281"], ["199", "163"], ["163", "199"], ["265", "282"], ["17", "282"], ["275", "282"], ["286", "285"], ["286", "285"], ["286", "285"], ["17", "285"], ["17", "294"], ["357", "355"], ["357", "355"], ["357", "355"], ["71", "93"], ["17", "93"], ["265", "286"], ["308", "286"], ["336", "286"], ["17", "286"], ["265", "286"], ["348", "286"], ["282", "286"], ["294", "297"], ["300", "297"], ["17", "297"], ["275", "297"], ["304", "300"], ["308", "300"], ["17", "300"], ["321", "313"], ["321", "313"], ["321", "313"], ["265", "348"], ["286", "348"], ["308", "348"], ["336", "348"], ["17", "348"], ["350", "348"], ["350", "348"], ["179", "209"], ["17", "209"], ["304", "303"], ["304", "303"], ["307", "303"], ["307", "303"], ["351", "350"], ["351", "350"], ["17", "350"], ["360", "357"], ["17", "357"], ["355", "357"], ["360", "357"], ["360", "357"], ["282", "304"], ["286", "304"], ["336", "304"], ["17", "304"], ["297", "304"], ["308", "307"], ["308", "307"], ["308", "307"], ["17", "307"], ["330", "321"], ["17", "321"], ["360", "321"], ["313", "321"], ["330", "321"], ["330", "321"], ["17", "351"], ["297", "351"], ["357", "360"], ["321", "360"], ["190", "360"], ["154", "360"], ["17", "360"], ["313", "360"], ["265", "308"], ["286", "308"], ["336", "308"], ["17", "308"], ["265", "308"], ["286", "308"], ["348", "308"], ["336", "308"], ["304", "308"], ["357", "330"], ["321", "330"], ["190", "330"], ["154", "330"], ["17", "330"], ["265", "336"], ["286", "336"], ["308", "336"], ["17", "336"], ["265", "336"], ["286", "336"], ["348", "336"], ["308", "336"], ["304", "336"], ["33", "40"], ["33", "36"], ["33", "43"], ["33", "33"], ["57", "214"], ["57", "68"], ["57", "240"], ["57", "104"], ["57", "242"], ["57", "61"], ["57", "374"], ["57", "217"], ["57", "237"], ["57", "71"], ["57", "107"], ["57", "96"], ["57", "64"], ["57", "377"], ["57", "101"], ["57", "99"], ["57", "63"], ["107", "114"], ["107", "117"], ["107", "107"], ["107", "110"], ["217", "224"], ["217", "217"], ["217", "227"], ["217", "222"], ["217", "225"], ["217", "232"], ["217", "223"], ["217", "233"], ["217", "220"], ["240", "240"], ["240", "242"], ["240", "249"], ["240", "245"], ["240", "248"], ["43", "50"], ["43", "54"], ["43", "48"], ["43", "49"], ["43", "43"], ["43", "46"], ["117", "120"], ["117", "136"], ["117", "129"], ["117", "123"], ["117", "176"], ["117", "140"], ["117", "135"], ["117", "117"], ["117", "131"], ["117", "179"], ["117", "130"], ["117", "143"], ["117", "124"], ["117", "125"], ["248", "258"], ["248", "255"], ["71", "84"], ["71", "74"], ["71", "76"], ["71", "93"], ["71", "71"], ["71", "81"], ["71", "85"], ["71", "90"], ["71", "89"], ["71", "83"], ["71", "78"], ["258", "264"], ["258", "258"], ["258", "261"], ["258", "265"], ["143", "154"], ["143", "146"], ["143", "161"], ["143", "163"], ["143", "150"], ["143", "170"], ["143", "148"], ["143", "169"], ["143", "149"], ["143", "164"], ["143", "157"], ["143", "143"], ["143", "165"], ["143", "156"], ["179", "192"], ["179", "209"], ["179", "206"], ["179", "190"], ["179", "184"], ["179", "182"], ["179", "186"], ["179", "201"], ["179", "200"], ["179", "199"], ["179", "179"], ["179", "185"], ["179", "197"], ["179", "205"], ["179", "193"], ["264", "272"], ["264", "275"], ["275", "281"], ["275", "278"], ["275", "282"], ["275", "275"], ["281", "348"], ["281", "297"], ["281", "351"], ["281", "294"], ["281", "350"], ["282", "285"], ["282", "286"], ["297", "300"], ["297", "304"], ["297", "297"], ["297", "303"], ["348", "370"], ["348", "362"], ["348", "355"], ["348", "364"], ["348", "357"], ["348", "360"], ["348", "369"], ["348", "363"], ["303", "334"], ["303", "324"], ["303", "336"], ["303", "315"], ["303", "323"], ["303", "316"], ["303", "321"], ["303", "342"], ["303", "332"], ["303", "325"], ["303", "314"], ["303", "343"], ["303", "333"], ["303", "330"], ["303", "313"], ["304", "308"], ["304", "307"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(IDENTIFIER,n,n = nextInt())<SUB>3</SUB>>", "23": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "25": "<(IDENTIFIER,m,m = nextInt())<SUB>4</SUB>>", "27": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "29": "<(LOCAL,int i: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "33": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "35": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "37": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "39": "<(LOCAL,int j: int)<SUB>6</SUB>>", "41": "<(IDENTIFIER,j,int j = 1)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>6</SUB>>", "45": "<(IDENTIFIER,m,j &lt;= m)<SUB>6</SUB>>", "47": "<(IDENTIFIER,j,j++)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>7</SUB>>", "51": "<(IDENTIFIER,a,a[i][j] = nextInt())<SUB>7</SUB>>", "53": "<(IDENTIFIER,j,a[i][j] = nextInt())<SUB>7</SUB>>", "55": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.equals,n == 1)<SUB>8</SUB>>", "59": "<(LITERAL,1,n == 1)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,res = (int) 1e9)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>10</SUB>>", "65": "<(LITERAL,1e9,(int) 1e9)<SUB>10</SUB>>", "67": "<(LOCAL,int i: int)<SUB>11</SUB>>", "69": "<(IDENTIFIER,i,int i = 1)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>11</SUB>>", "73": "<(IDENTIFIER,m,i &lt; m)<SUB>11</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "77": "<(IDENTIFIER,res,res = min(res, Math.abs(a[0][i] - a[0][i + 1])))<SUB>12</SUB>>", "79": "<(IDENTIFIER,Math,min(res, Math.abs(a[0][i] - a[0][i + 1])))<SUB>12</SUB>>", "81": "<(abs,abs(a[0][i] - a[0][i + 1]))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.subtraction,a[0][i] - a[0][i + 1])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,a[0])<SUB>12</SUB>>", "87": "<(LITERAL,0,a[0][i] - a[0][i + 1])<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,a[0][i + 1])<SUB>12</SUB>>", "91": "<(IDENTIFIER,a,a[0][i] - a[0][i + 1])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.addition,i + 1)<SUB>12</SUB>>", "95": "<(LITERAL,1,i + 1)<SUB>12</SUB>>", "97": "<(IDENTIFIER,out,print(res))<SUB>13</SUB>>", "99": "<(close,close())<SUB>14</SUB>>", "101": "<(RETURN,return;,return;)<SUB>15</SUB>>", "103": "<(LOCAL,int i: int)<SUB>17</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "113": "<(LOCAL,int j: int)<SUB>18</SUB>>", "115": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>18</SUB>>", "119": "<(IDENTIFIER,n,j &lt; n)<SUB>18</SUB>>", "121": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.assignment,Min[i][j] = Min1[i][j] = (int) 1e9)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,Min[i])<SUB>20</SUB>>", "127": "<(IDENTIFIER,i,Min[i][j] = Min1[i][j] = (int) 1e9)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.assignment,Min1[i][j] = (int) 1e9)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,Min1[i])<SUB>20</SUB>>", "133": "<(IDENTIFIER,i,Min1[i][j] = (int) 1e9)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>20</SUB>>", "137": "<(LITERAL,1e9,(int) 1e9)<SUB>20</SUB>>", "139": "<(LOCAL,int t: int)<SUB>21</SUB>>", "141": "<(IDENTIFIER,t,int t = 1)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.lessEqualsThan,t &lt;= m)<SUB>21</SUB>>", "145": "<(IDENTIFIER,m,t &lt;= m)<SUB>21</SUB>>", "147": "<(IDENTIFIER,t,t++)<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,Min[i][j])<SUB>22</SUB>>", "151": "<(IDENTIFIER,Min,Min[i][j] = min(Min[i][j], Math.abs(a[i][t] - a[j][t])))<SUB>22</SUB>>", "153": "<(IDENTIFIER,j,Min[i][j] = min(Min[i][j], Math.abs(a[i][t] - a[j][t])))<SUB>22</SUB>>", "155": "<(IDENTIFIER,Math,min(Min[i][j], Math.abs(a[i][t] - a[j][t])))<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,Min[i])<SUB>22</SUB>>", "159": "<(IDENTIFIER,i,min(Min[i][j], Math.abs(a[i][t] - a[j][t])))<SUB>22</SUB>>", "161": "<(abs,abs(a[i][t] - a[j][t]))<SUB>22</SUB>>", "163": "<(&lt;operator&gt;.subtraction,a[i][t] - a[j][t])<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>22</SUB>>", "167": "<(IDENTIFIER,i,a[i][t] - a[j][t])<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,a[j][t])<SUB>22</SUB>>", "171": "<(IDENTIFIER,a,a[i][t] - a[j][t])<SUB>22</SUB>>", "173": "<(IDENTIFIER,t,a[i][t] - a[j][t])<SUB>22</SUB>>", "175": "<(LOCAL,int t: int)<SUB>23</SUB>>", "177": "<(IDENTIFIER,t,int t = 1)<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.lessThan,t &lt; m)<SUB>23</SUB>>", "181": "<(IDENTIFIER,m,t &lt; m)<SUB>23</SUB>>", "183": "<(IDENTIFIER,t,t++)<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,Min1[i][j])<SUB>24</SUB>>", "187": "<(IDENTIFIER,Min1,Min1[i][j] = min(Min1[i][j], Math.abs(a[i][t] - a[j][t + 1])))<SUB>24</SUB>>", "189": "<(IDENTIFIER,j,Min1[i][j] = min(Min1[i][j], Math.abs(a[i][t] - a[j][t + 1])))<SUB>24</SUB>>", "191": "<(IDENTIFIER,Math,min(Min1[i][j], Math.abs(a[i][t] - a[j][t + 1])))<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,Min1[i])<SUB>24</SUB>>", "195": "<(IDENTIFIER,i,min(Min1[i][j], Math.abs(a[i][t] - a[j][t + 1])))<SUB>24</SUB>>", "197": "<(abs,abs(a[i][t] - a[j][t + 1]))<SUB>24</SUB>>", "199": "<(&lt;operator&gt;.subtraction,a[i][t] - a[j][t + 1])<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>24</SUB>>", "203": "<(IDENTIFIER,i,a[i][t] - a[j][t + 1])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,a[j][t + 1])<SUB>24</SUB>>", "207": "<(IDENTIFIER,a,a[i][t] - a[j][t + 1])<SUB>24</SUB>>", "209": "<(&lt;operator&gt;.addition,t + 1)<SUB>24</SUB>>", "211": "<(LITERAL,1,t + 1)<SUB>24</SUB>>", "213": "<(LOCAL,int i: int)<SUB>26</SUB>>", "215": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "217": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "219": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "221": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,f[1 &lt;&lt; i][i][i])<SUB>27</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,f[1 &lt;&lt; i])<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>27</SUB>>", "229": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>27</SUB>>", "231": "<(IDENTIFIER,i,f[1 &lt;&lt; i][i][i] = (int) 1e9)<SUB>27</SUB>>", "233": "<(TYPE_REF,int,int)<SUB>27</SUB>>", "235": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 0; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>28</SUB>>", "237": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>28</SUB>>", "239": "<(LITERAL,0,int mask = 0)<SUB>28</SUB>>", "241": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>28</SUB>>", "243": "<(LITERAL,1,1 &lt;&lt; n)<SUB>28</SUB>>", "245": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>28</SUB>>", "247": "<(CONTROL_STRUCTURE,if (Integer.bitCount(mask) &gt; 1),if (Integer.bitCount(mask) &gt; 1))<SUB>29</SUB>>", "249": "<(bitCount,Integer.bitCount(mask))<SUB>29</SUB>>", "251": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>29</SUB>>", "253": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>30</SUB>>", "255": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "257": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "259": "<(IDENTIFIER,i,i &lt; n)<SUB>30</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "263": "<(CONTROL_STRUCTURE,if (GetBit(mask, i) == 1),if (GetBit(mask, i) == 1))<SUB>31</SUB>>", "265": "<(GetBit,GetBit(mask, i))<SUB>31</SUB>>", "267": "<(IDENTIFIER,mask,GetBit(mask, i))<SUB>31</SUB>>", "269": "<(LITERAL,1,GetBit(mask, i) == 1)<SUB>31</SUB>>", "271": "<(LOCAL,int j: int)<SUB>32</SUB>>", "273": "<(IDENTIFIER,j,int j = 0)<SUB>32</SUB>>", "275": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>32</SUB>>", "277": "<(IDENTIFIER,n,j &lt; n)<SUB>32</SUB>>", "279": "<(IDENTIFIER,j,j++)<SUB>32</SUB>>", "281": "<(&lt;operator&gt;.logicalAnd,i != j &amp;&amp; GetBit(mask, j) == 1)<SUB>33</SUB>>", "283": "<(IDENTIFIER,i,i != j)<SUB>33</SUB>>", "285": "<(&lt;operator&gt;.equals,GetBit(mask, j) == 1)<SUB>33</SUB>>", "287": "<(IDENTIFIER,this,GetBit(mask, j))<SUB>33</SUB>>", "289": "<(IDENTIFIER,j,GetBit(mask, j))<SUB>33</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "293": "<(LOCAL,int t: int)<SUB>35</SUB>>", "295": "<(IDENTIFIER,t,int t = 0)<SUB>35</SUB>>", "297": "<(&lt;operator&gt;.lessThan,t &lt; n)<SUB>35</SUB>>", "299": "<(IDENTIFIER,n,t &lt; n)<SUB>35</SUB>>", "301": "<(IDENTIFIER,t,t++)<SUB>35</SUB>>", "303": "<(&lt;operator&gt;.logicalAnd,j != t &amp;&amp; GetBit(mask, t) == 1)<SUB>36</SUB>>", "305": "<(IDENTIFIER,j,j != t)<SUB>36</SUB>>", "307": "<(&lt;operator&gt;.equals,GetBit(mask, t) == 1)<SUB>36</SUB>>", "309": "<(IDENTIFIER,this,GetBit(mask, t))<SUB>36</SUB>>", "311": "<(IDENTIFIER,t,GetBit(mask, t))<SUB>36</SUB>>", "313": "<(&lt;operator&gt;.assignment,f[mask][i][j] = max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,f[mask][i])<SUB>37</SUB>>", "317": "<(IDENTIFIER,f,f[mask][i][j] = max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "319": "<(IDENTIFIER,i,f[mask][i][j] = max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "321": "<(max,max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "323": "<(&lt;operator&gt;.indexAccess,f[mask][i][j])<SUB>37</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,f[mask])<SUB>37</SUB>>", "327": "<(IDENTIFIER,mask,max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "329": "<(IDENTIFIER,j,max(f[mask][i][j], Math.min(f[TurnBit(mask, j)][i][t], Min[j][t])))<SUB>37</SUB>>", "331": "<(IDENTIFIER,Math,min(f[TurnBit(mask, j)][i][t], Min[j][t]))<SUB>37</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,f[TurnBit(mask, j)][i])<SUB>37</SUB>>", "335": "<(IDENTIFIER,f,min(f[TurnBit(mask, j)][i][t], Min[j][t]))<SUB>37</SUB>>", "337": "<(IDENTIFIER,this,TurnBit(mask, j))<SUB>37</SUB>>", "339": "<(IDENTIFIER,j,TurnBit(mask, j))<SUB>37</SUB>>", "341": "<(IDENTIFIER,t,min(f[TurnBit(mask, j)][i][t], Min[j][t]))<SUB>37</SUB>>", "343": "<(&lt;operator&gt;.indexAccess,Min[j])<SUB>37</SUB>>", "345": "<(IDENTIFIER,j,min(f[TurnBit(mask, j)][i][t], Min[j][t]))<SUB>37</SUB>>", "347": "<(CONTROL_STRUCTURE,if (mask == (1 &lt;&lt; n) - 1),if (mask == (1 &lt;&lt; n) - 1))<SUB>38</SUB>>", "349": "<(IDENTIFIER,mask,mask == (1 &lt;&lt; n) - 1)<SUB>38</SUB>>", "351": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>38</SUB>>", "353": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>38</SUB>>", "355": "<(&lt;operator&gt;.assignment,res = max(res, Math.min(f[mask][i][j], Min1[j][i])))<SUB>39</SUB>>", "357": "<(max,max(res, Math.min(f[mask][i][j], Min1[j][i])))<SUB>39</SUB>>", "359": "<(IDENTIFIER,res,max(res, Math.min(f[mask][i][j], Min1[j][i])))<SUB>39</SUB>>", "361": "<(IDENTIFIER,Math,min(f[mask][i][j], Min1[j][i]))<SUB>39</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,f[mask][i])<SUB>39</SUB>>", "365": "<(IDENTIFIER,f,min(f[mask][i][j], Min1[j][i]))<SUB>39</SUB>>", "367": "<(IDENTIFIER,i,min(f[mask][i][j], Min1[j][i]))<SUB>39</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,Min1[j][i])<SUB>39</SUB>>", "371": "<(IDENTIFIER,Min1,min(f[mask][i][j], Min1[j][i]))<SUB>39</SUB>>", "373": "<(IDENTIFIER,i,min(f[mask][i][j], Min1[j][i]))<SUB>39</SUB>>", "375": "<(IDENTIFIER,out,print(res))<SUB>41</SUB>>", "377": "<(close,close())<SUB>42</SUB>>", "379": "<(MODIFIER,PUBLIC)>", "381": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}