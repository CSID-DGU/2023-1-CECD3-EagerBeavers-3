{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "47"], ["21", "85"], ["21", "86"], ["21", "89"], ["21", "92"], ["21", "94"], ["21", "148"], ["21", "151"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "60"], ["57", "66"], ["57", "72"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "65"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "71"], ["69", "70"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "104"], ["94", "106"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "118"], ["106", "119"], ["106", "123"], ["106", "137"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["123", "124"], ["123", "126"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "132"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["132", "134"], ["132", "135"], ["135", "136"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "142"], ["140", "143"], ["140", "144"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["151", "152"], ["22", "29"], ["27", "33"], ["30", "36"], ["34", "40"], ["38", "44"], ["42", "49"], ["86", "91"], ["89", "92"], ["92", "98"], ["148", "151"], ["151", "155"], ["24", "22"], ["29", "27"], ["31", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["49", "52"], ["52", "63"], ["52", "86"], ["55", "52"], ["91", "89"], ["96", "101"], ["101", "110"], ["101", "148"], ["104", "101"], ["26", "24"], ["33", "31"], ["60", "69"], ["66", "74"], ["72", "55"], ["98", "96"], ["107", "121"], ["119", "124"], ["137", "104"], ["62", "60"], ["68", "66"], ["73", "80"], ["78", "72"], ["109", "107"], ["121", "119"], ["124", "130"], ["124", "144"], ["139", "137"], ["63", "62"], ["69", "68"], ["74", "73"], ["79", "78"], ["110", "115"], ["113", "109"], ["128", "135"], ["132", "124"], ["140", "139"], ["80", "79"], ["115", "113"], ["130", "128"], ["135", "132"], ["144", "140"], ["19", "26"], ["20", "155"], ["22", "155"], ["22", "155"], ["27", "155"], ["30", "155"], ["30", "155"], ["34", "155"], ["40", "155"], ["38", "155"], ["38", "155"], ["42", "155"], ["42", "155"], ["42", "155"], ["49", "155"], ["52", "155"], ["52", "155"], ["86", "155"], ["89", "155"], ["92", "155"], ["92", "155"], ["98", "155"], ["96", "155"], ["96", "155"], ["101", "155"], ["101", "155"], ["148", "155"], ["148", "155"], ["151", "155"], ["151", "155"], ["109", "155"], ["109", "155"], ["107", "155"], ["107", "155"], ["121", "155"], ["119", "155"], ["124", "155"], ["124", "155"], ["140", "155"], ["139", "155"], ["137", "155"], ["137", "155"], ["104", "155"], ["132", "155"], ["132", "155"], ["132", "155"], ["60", "155"], ["60", "155"], ["66", "155"], ["69", "155"], ["68", "155"], ["66", "155"], ["66", "155"], ["72", "155"], ["78", "155"], ["72", "155"], ["72", "155"], ["55", "155"], ["140", "155"], ["132", "155"], ["19", "20"], ["19", "27"], ["36", "34"], ["40", "38"], ["44", "42"], ["19", "86"], ["19", "89"], ["19", "22"], ["27", "30"], ["19", "30"], ["19", "49"], ["89", "92"], ["19", "92"], ["98", "96"], ["98", "96"], ["30", "148"], ["19", "148"], ["86", "148"], ["137", "148"], ["148", "151"], ["19", "151"], ["22", "36"], ["19", "36"], ["36", "40"], ["19", "40"], ["34", "44"], ["19", "44"], ["49", "52"], ["55", "52"], ["19", "52"], ["38", "52"], ["52", "55"], ["19", "55"], ["62", "60"], ["62", "60"], ["68", "66"], ["68", "66"], ["78", "72"], ["19", "72"], ["96", "101"], ["104", "101"], ["19", "101"], ["140", "104"], ["19", "104"], ["109", "107"], ["109", "107"], ["121", "119"], ["139", "137"], ["139", "137"], ["44", "98"], ["19", "98"], ["86", "137"], ["19", "137"], ["63", "62"], ["19", "62"], ["69", "68"], ["19", "68"], ["19", "78"], ["113", "109"], ["101", "109"], ["19", "109"], ["113", "109"], ["107", "121"], ["19", "121"], ["119", "124"], ["130", "124"], ["19", "124"], ["130", "128"], ["140", "139"], ["140", "139"], ["140", "139"], ["19", "139"], ["40", "63"], ["69", "63"], ["19", "63"], ["63", "69"], ["19", "69"], ["101", "110"], ["19", "110"], ["19", "113"], ["101", "113"], ["19", "132"], ["128", "132"], ["135", "132"], ["19", "140"], ["144", "140"], ["144", "140"], ["19", "115"], ["101", "115"], ["124", "130"], ["19", "130"], ["19", "135"], ["19", "144"], ["101", "144"], ["52", "68"], ["52", "60"], ["52", "73"], ["52", "66"], ["52", "52"], ["52", "72"], ["52", "69"], ["52", "74"], ["52", "79"], ["52", "80"], ["52", "63"], ["52", "55"], ["52", "78"], ["52", "62"], ["101", "107"], ["101", "115"], ["101", "113"], ["101", "104"], ["101", "119"], ["101", "121"], ["101", "144"], ["101", "140"], ["101", "101"], ["101", "137"], ["101", "110"], ["101", "139"], ["101", "124"], ["101", "109"], ["124", "128"], ["124", "132"], ["124", "130"], ["124", "135"], ["124", "124"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,input,init(System.in))<SUB>2</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,n = nextInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,input,nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,m,m = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,input,nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,g,g = new boolean[n][n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "59": "<(LOCAL,int b: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,a,int a = input.nextInt() - 1)<SUB>9</SUB>>", "63": "<(nextInt,nextInt())<SUB>9</SUB>>", "65": "<(LITERAL,1,input.nextInt() - 1)<SUB>9</SUB>>", "67": "<(IDENTIFIER,b,int b = input.nextInt() - 1)<SUB>9</SUB>>", "69": "<(nextInt,nextInt())<SUB>9</SUB>>", "71": "<(LITERAL,1,input.nextInt() - 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,g[a][b])<SUB>10</SUB>>", "75": "<(IDENTIFIER,g,g[a][b] = g[b][a] = true)<SUB>10</SUB>>", "77": "<(IDENTIFIER,b,g[a][b] = g[b][a] = true)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,g[b][a])<SUB>10</SUB>>", "81": "<(IDENTIFIER,g,g[b][a] = true)<SUB>10</SUB>>", "83": "<(IDENTIFIER,a,g[b][a] = true)<SUB>10</SUB>>", "85": "<(LOCAL,long res: long)<SUB>12</SUB>>", "87": "<(IDENTIFIER,res,long res = 0)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,map = new HashMap&lt;Integer, Long&gt;())<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Long&gt;())<SUB>13</SUB>>", "93": "<(IDENTIFIER,map,new HashMap&lt;Integer, Long&gt;())<SUB>13</SUB>>", "95": "<(LOCAL,int i: int)<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,int i = n - 1)<SUB>14</SUB>>", "99": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>14</SUB>>", "103": "<(LITERAL,0,i &gt;= 0)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,i--)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignment,memo = new long[i + 1][1 &lt;&lt; (i + 1)])<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.alloc,new long[i + 1][1 &lt;&lt; (i + 1)])>", "111": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (i + 1))<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "117": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.assignment,)<SUB>17</SUB>>", "121": "<(iterator,&lt;empty&gt;)<SUB>17</SUB>>", "123": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>17</SUB>>", "125": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "127": "<(LOCAL,A: long[])<SUB>17</SUB>>", "129": "<(IDENTIFIER,A,&lt;empty&gt;)>", "131": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "133": "<(IDENTIFIER,Arrays,fill(A, -1))<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.minus,-1)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.assignmentPlus,res += count(i, i, 1 &lt;&lt; i) / 2)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.division,count(i, i, 1 &lt;&lt; i) / 2)<SUB>18</SUB>>", "141": "<(IDENTIFIER,this,count(i, i, 1 &lt;&lt; i))<SUB>18</SUB>>", "143": "<(IDENTIFIER,i,count(i, i, 1 &lt;&lt; i))<SUB>18</SUB>>", "145": "<(LITERAL,1,1 &lt;&lt; i)<SUB>18</SUB>>", "147": "<(LITERAL,2,count(i, i, 1 &lt;&lt; i) / 2)<SUB>18</SUB>>", "149": "<(IDENTIFIER,out,println(res))<SUB>20</SUB>>", "151": "<(close,close())<SUB>21</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}