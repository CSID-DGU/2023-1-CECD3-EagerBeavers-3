{"edges": [["21", "23"], ["21", "419"], ["21", "420"], ["21", "421"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "51"], ["23", "63"], ["23", "64"], ["23", "70"], ["23", "77"], ["23", "112"], ["23", "138"], ["23", "139"], ["23", "140"], ["23", "143"], ["23", "146"], ["23", "147"], ["23", "150"], ["23", "151"], ["23", "154"], ["23", "411"], ["23", "417"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["49", "50"], ["51", "52"], ["51", "56"], ["52", "53"], ["52", "54"], ["52", "55"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["64", "65"], ["64", "66"], ["66", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["77", "84"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "106"], ["96", "111"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["112", "119"], ["112", "122"], ["112", "124"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "164"], ["154", "166"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["166", "167"], ["166", "168"], ["166", "178"], ["166", "179"], ["166", "220"], ["166", "221"], ["166", "222"], ["166", "232"], ["166", "246"], ["166", "247"], ["166", "269"], ["166", "279"], ["166", "320"], ["166", "330"], ["166", "344"], ["166", "345"], ["166", "367"], ["166", "377"], ["166", "385"], ["166", "405"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["170", "177"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "187"], ["181", "188"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["188", "189"], ["188", "208"], ["188", "215"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "228"], ["224", "229"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "240"], ["234", "241"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "261"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "260"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["261", "262"], ["261", "268"], ["262", "263"], ["262", "267"], ["263", "264"], ["263", "265"], ["263", "266"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "275"], ["271", "278"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "287"], ["281", "288"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["288", "289"], ["288", "308"], ["288", "315"], ["289", "290"], ["289", "297"], ["290", "291"], ["290", "296"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["297", "298"], ["297", "303"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["320", "321"], ["320", "322"], ["322", "323"], ["322", "326"], ["322", "327"], ["323", "324"], ["323", "325"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "332"], ["332", "333"], ["332", "338"], ["332", "339"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["339", "340"], ["339", "341"], ["341", "342"], ["341", "343"], ["345", "346"], ["345", "347"], ["347", "348"], ["347", "359"], ["348", "349"], ["348", "352"], ["349", "350"], ["349", "351"], ["352", "353"], ["352", "358"], ["353", "354"], ["353", "357"], ["354", "355"], ["354", "356"], ["359", "360"], ["359", "366"], ["360", "361"], ["360", "365"], ["361", "362"], ["361", "363"], ["361", "364"], ["367", "368"], ["367", "373"], ["368", "369"], ["368", "371"], ["369", "370"], ["371", "372"], ["373", "374"], ["374", "375"], ["374", "376"], ["377", "378"], ["377", "383"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["383", "384"], ["385", "386"], ["385", "399"], ["385", "401"], ["386", "387"], ["386", "390"], ["387", "388"], ["387", "389"], ["390", "391"], ["390", "394"], ["391", "392"], ["391", "393"], ["394", "395"], ["394", "396"], ["396", "397"], ["396", "398"], ["399", "400"], ["401", "402"], ["402", "403"], ["402", "404"], ["405", "406"], ["405", "407"], ["407", "408"], ["407", "409"], ["407", "410"], ["411", "412"], ["411", "413"], ["413", "414"], ["413", "415"], ["413", "416"], ["417", "418"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "43"], ["41", "49"], ["46", "52"], ["64", "73"], ["70", "81"], ["140", "143"], ["143", "147"], ["147", "151"], ["151", "156"], ["411", "417"], ["417", "421"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["43", "41"], ["48", "46"], ["52", "60"], ["52", "67"], ["66", "64"], ["71", "70"], ["79", "84"], ["84", "91"], ["84", "116"], ["87", "84"], ["114", "119"], ["119", "125"], ["119", "140"], ["122", "119"], ["124", "122"], ["156", "160"], ["159", "171"], ["159", "413"], ["164", "160"], ["413", "411"], ["34", "32"], ["49", "48"], ["57", "62"], ["62", "421"], ["67", "66"], ["73", "71"], ["81", "79"], ["90", "87"], ["116", "114"], ["125", "130"], ["128", "124"], ["160", "159"], ["168", "183"], ["179", "225"], ["222", "236"], ["232", "251"], ["247", "272"], ["269", "283"], ["279", "323"], ["320", "334"], ["330", "349"], ["345", "369"], ["405", "164"], ["58", "57"], ["91", "100"], ["94", "90"], ["130", "135"], ["133", "128"], ["170", "168"], ["181", "179"], ["224", "222"], ["234", "232"], ["249", "247"], ["271", "269"], ["281", "279"], ["322", "320"], ["332", "330"], ["347", "345"], ["368", "374"], ["368", "379"], ["378", "383"], ["378", "387"], ["383", "387"], ["386", "399"], ["386", "402"], ["399", "407"], ["407", "405"], ["60", "58"], ["96", "94"], ["135", "133"], ["171", "174"], ["171", "170"], ["174", "170"], ["182", "181"], ["182", "193"], ["188", "181"], ["225", "224"], ["225", "229"], ["229", "224"], ["235", "234"], ["235", "243"], ["241", "234"], ["250", "249"], ["250", "263"], ["261", "249"], ["272", "275"], ["272", "271"], ["275", "271"], ["282", "281"], ["282", "293"], ["288", "281"], ["323", "322"], ["323", "327"], ["327", "322"], ["333", "332"], ["333", "341"], ["339", "332"], ["348", "347"], ["348", "361"], ["359", "347"], ["369", "368"], ["369", "371"], ["371", "368"], ["374", "379"], ["379", "378"], ["387", "386"], ["387", "391"], ["390", "386"], ["402", "407"], ["97", "108"], ["97", "96"], ["106", "96"], ["183", "182"], ["189", "212"], ["189", "217"], ["208", "188"], ["215", "188"], ["236", "235"], ["243", "241"], ["251", "250"], ["251", "256"], ["254", "250"], ["262", "261"], ["283", "282"], ["289", "312"], ["289", "317"], ["308", "288"], ["315", "288"], ["334", "333"], ["341", "339"], ["349", "348"], ["349", "354"], ["352", "348"], ["360", "359"], ["391", "396"], ["394", "390"], ["98", "103"], ["103", "97"], ["108", "106"], ["190", "189"], ["190", "200"], ["197", "189"], ["210", "208"], ["217", "215"], ["255", "254"], ["263", "262"], ["290", "289"], ["290", "300"], ["297", "289"], ["310", "308"], ["317", "315"], ["353", "352"], ["361", "360"], ["396", "394"], ["100", "98"], ["191", "190"], ["198", "205"], ["203", "197"], ["212", "210"], ["256", "255"], ["291", "290"], ["298", "305"], ["303", "297"], ["312", "310"], ["354", "353"], ["193", "191"], ["200", "198"], ["205", "203"], ["293", "291"], ["300", "298"], ["305", "303"], ["21", "26"], ["62", "421"], ["22", "421"], ["24", "421"], ["27", "421"], ["28", "421"], ["31", "421"], ["31", "421"], ["37", "421"], ["37", "421"], ["41", "421"], ["41", "421"], ["49", "421"], ["48", "421"], ["46", "421"], ["46", "421"], ["52", "421"], ["52", "421"], ["52", "421"], ["57", "421"], ["52", "421"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["43", "41"], ["48", "46"], ["66", "64"], ["21", "70"], ["21", "140"], ["21", "143"], ["21", "147"], ["21", "151"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["81", "79"], ["81", "79"], ["116", "114"], ["116", "114"], ["128", "124"], ["128", "124"], ["128", "124"], ["21", "156"], ["31", "411"], ["21", "411"], ["411", "417"], ["21", "417"], ["27", "39"], ["21", "39"], ["39", "43"], ["21", "43"], ["49", "48"], ["21", "52"], ["46", "52"], ["41", "52"], ["21", "62"], ["37", "66"], ["21", "66"], ["79", "84"], ["87", "84"], ["21", "84"], ["21", "87"], ["84", "87"], ["21", "90"], ["64", "90"], ["114", "119"], ["122", "119"], ["21", "119"], ["21", "122"], ["119", "122"], ["156", "159"], ["164", "159"], ["21", "159"], ["52", "159"], ["116", "159"], ["333", "159"], ["341", "159"], ["352", "159"], ["359", "159"], ["387", "164"], ["396", "164"], ["21", "164"], ["21", "168"], ["272", "168"], ["171", "168"], ["140", "168"], ["405", "168"], ["21", "179"], ["64", "179"], ["297", "179"], ["197", "179"], ["21", "222"], ["52", "222"], ["21", "232"], ["52", "232"], ["249", "247"], ["249", "247"], ["21", "269"], ["272", "269"], ["140", "269"], ["405", "269"], ["21", "279"], ["64", "279"], ["297", "279"], ["197", "279"], ["21", "320"], ["52", "320"], ["21", "330"], ["52", "330"], ["347", "345"], ["347", "345"], ["407", "405"], ["407", "405"], ["407", "405"], ["21", "413"], ["43", "49"], ["21", "49"], ["31", "57"], ["21", "57"], ["37", "67"], ["21", "67"], ["21", "73"], ["37", "73"], ["73", "81"], ["21", "81"], ["81", "116"], ["21", "116"], ["21", "128"], ["64", "128"], ["124", "128"], ["90", "128"], ["156", "160"], ["164", "160"], ["21", "160"], ["52", "160"], ["21", "94"], ["64", "94"], ["21", "170"], ["272", "170"], ["171", "170"], ["140", "170"], ["405", "170"], ["21", "181"], ["64", "181"], ["297", "181"], ["197", "181"], ["21", "224"], ["52", "224"], ["21", "234"], ["52", "234"], ["250", "249"], ["250", "249"], ["261", "249"], ["261", "249"], ["347", "249"], ["21", "271"], ["272", "271"], ["140", "271"], ["405", "271"], ["21", "281"], ["64", "281"], ["297", "281"], ["197", "281"], ["21", "322"], ["52", "322"], ["21", "332"], ["52", "332"], ["348", "347"], ["348", "347"], ["249", "347"], ["359", "347"], ["359", "347"], ["369", "368"], ["371", "368"], ["21", "374"], ["52", "378"], ["390", "378"], ["97", "378"], ["21", "378"], ["272", "383"], ["21", "383"], ["387", "386"], ["387", "386"], ["390", "386"], ["390", "386"], ["143", "399"], ["407", "399"], ["21", "399"], ["21", "402"], ["263", "407"], ["361", "407"], ["128", "407"], ["21", "407"], ["140", "407"], ["405", "407"], ["402", "407"], ["399", "407"], ["64", "96"], ["21", "96"], ["119", "135"], ["21", "135"], ["151", "171"], ["272", "171"], ["383", "171"], ["21", "171"], ["156", "171"], ["164", "171"], ["21", "174"], ["171", "174"], ["171", "182"], ["21", "182"], ["159", "182"], ["21", "188"], ["64", "188"], ["297", "188"], ["197", "188"], ["21", "225"], ["171", "225"], ["225", "235"], ["21", "235"], ["182", "235"], ["203", "235"], ["251", "250"], ["251", "250"], ["254", "250"], ["254", "250"], ["348", "250"], ["263", "261"], ["263", "261"], ["263", "261"], ["21", "261"], ["235", "261"], ["243", "261"], ["254", "261"], ["171", "272"], ["21", "272"], ["21", "275"], ["272", "275"], ["21", "282"], ["225", "282"], ["235", "282"], ["243", "282"], ["254", "282"], ["261", "282"], ["21", "288"], ["64", "288"], ["297", "288"], ["197", "288"], ["21", "323"], ["225", "323"], ["323", "333"], ["21", "333"], ["282", "333"], ["303", "333"], ["349", "348"], ["349", "348"], ["352", "348"], ["352", "348"], ["250", "348"], ["361", "359"], ["361", "359"], ["361", "359"], ["21", "359"], ["333", "359"], ["341", "359"], ["352", "359"], ["247", "369"], ["21", "369"], ["345", "371"], ["21", "371"], ["21", "387"], ["323", "387"], ["52", "390"], ["378", "390"], ["52", "97"], ["171", "183"], ["21", "183"], ["190", "189"], ["190", "189"], ["289", "189"], ["197", "189"], ["197", "189"], ["21", "208"], ["64", "208"], ["197", "208"], ["297", "208"], ["225", "236"], ["21", "236"], ["235", "243"], ["21", "243"], ["222", "251"], ["21", "251"], ["232", "251"], ["168", "254"], ["21", "254"], ["179", "254"], ["235", "254"], ["243", "254"], ["263", "262"], ["263", "262"], ["263", "262"], ["21", "262"], ["21", "283"], ["225", "283"], ["290", "289"], ["290", "289"], ["297", "289"], ["297", "289"], ["189", "289"], ["21", "308"], ["64", "308"], ["297", "308"], ["197", "308"], ["323", "334"], ["21", "334"], ["333", "341"], ["21", "341"], ["320", "349"], ["21", "349"], ["330", "349"], ["269", "352"], ["21", "352"], ["279", "352"], ["333", "352"], ["341", "352"], ["361", "360"], ["361", "360"], ["361", "360"], ["21", "360"], ["21", "108"], ["84", "108"], ["52", "190"], ["290", "190"], ["21", "190"], ["64", "197"], ["297", "197"], ["203", "197"], ["203", "197"], ["21", "217"], ["171", "217"], ["168", "255"], ["21", "255"], ["179", "255"], ["407", "263"], ["128", "263"], ["21", "263"], ["168", "263"], ["179", "263"], ["52", "290"], ["190", "290"], ["21", "290"], ["64", "297"], ["197", "297"], ["303", "297"], ["303", "297"], ["21", "317"], ["225", "317"], ["269", "353"], ["21", "353"], ["279", "353"], ["263", "361"], ["407", "361"], ["128", "361"], ["21", "361"], ["269", "361"], ["279", "361"], ["387", "396"], ["21", "396"], ["84", "100"], ["21", "100"], ["182", "203"], ["21", "203"], ["171", "203"], ["21", "212"], ["171", "212"], ["168", "256"], ["21", "256"], ["179", "256"], ["282", "303"], ["21", "303"], ["225", "303"], ["21", "312"], ["225", "312"], ["269", "354"], ["21", "354"], ["279", "354"], ["21", "193"], ["171", "193"], ["21", "200"], ["171", "200"], ["21", "205"], ["171", "205"], ["21", "293"], ["225", "293"], ["21", "300"], ["225", "300"], ["21", "305"], ["225", "305"], ["52", "60"], ["52", "84"], ["52", "114"], ["52", "70"], ["52", "160"], ["52", "66"], ["52", "116"], ["52", "159"], ["52", "140"], ["52", "71"], ["52", "147"], ["52", "73"], ["52", "64"], ["52", "57"], ["52", "413"], ["52", "81"], ["52", "67"], ["52", "151"], ["52", "119"], ["52", "411"], ["52", "417"], ["52", "79"], ["52", "58"], ["52", "143"], ["52", "156"], ["52", "62"], ["84", "84"], ["84", "100"], ["84", "94"], ["84", "96"], ["84", "98"], ["84", "103"], ["84", "87"], ["84", "97"], ["84", "91"], ["84", "90"], ["119", "128"], ["119", "122"], ["119", "135"], ["119", "133"], ["119", "119"], ["119", "130"], ["119", "124"], ["119", "125"], ["159", "334"], ["159", "272"], ["159", "283"], ["159", "322"], ["159", "168"], ["159", "170"], ["159", "247"], ["159", "181"], ["159", "378"], ["159", "349"], ["159", "281"], ["159", "182"], ["159", "224"], ["159", "249"], ["159", "368"], ["159", "160"], ["159", "236"], ["159", "348"], ["159", "159"], ["159", "405"], ["159", "347"], ["159", "323"], ["159", "269"], ["159", "222"], ["159", "320"], ["159", "282"], ["159", "225"], ["159", "179"], ["159", "232"], ["159", "279"], ["159", "379"], ["159", "386"], ["159", "332"], ["159", "387"], ["159", "164"], ["159", "333"], ["159", "171"], ["159", "183"], ["159", "235"], ["159", "330"], ["159", "251"], ["159", "345"], ["159", "234"], ["159", "369"], ["159", "271"], ["159", "407"], ["159", "250"], ["368", "374"], ["378", "383"], ["386", "402"], ["386", "399"], ["171", "174"], ["182", "188"], ["182", "190"], ["182", "189"], ["182", "191"], ["182", "193"], ["225", "229"], ["235", "243"], ["235", "241"], ["250", "262"], ["250", "261"], ["250", "263"], ["272", "275"], ["282", "290"], ["282", "288"], ["282", "291"], ["282", "289"], ["282", "293"], ["323", "327"], ["333", "341"], ["333", "339"], ["348", "360"], ["348", "361"], ["348", "359"], ["369", "371"], ["387", "394"], ["387", "396"], ["387", "390"], ["387", "391"], ["97", "108"], ["97", "106"], ["189", "215"], ["189", "208"], ["189", "217"], ["189", "212"], ["189", "210"], ["251", "256"], ["251", "254"], ["251", "255"], ["289", "308"], ["289", "317"], ["289", "315"], ["289", "310"], ["289", "312"], ["349", "353"], ["349", "352"], ["349", "354"], ["190", "200"], ["190", "197"], ["190", "198"], ["190", "205"], ["190", "203"], ["290", "298"], ["290", "300"], ["290", "305"], ["290", "297"], ["290", "303"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,char[] s: char[])<SUB>5</SUB>>", "47": "<(IDENTIFIER,s,char[] s = toCharArray())<SUB>5</SUB>>", "49": "<(next,next())<SUB>5</SUB>>", "51": "<(CONTROL_STRUCTURE,if (canWinFromOneMove(s, k)),if (canWinFromOneMove(s, k)))<SUB>6</SUB>>", "53": "<(IDENTIFIER,this,canWinFromOneMove(s, k))<SUB>6</SUB>>", "55": "<(IDENTIFIER,k,canWinFromOneMove(s, k))<SUB>6</SUB>>", "57": "<(println,System.out.println(&quot;tokitsukaze&quot;))<SUB>7</SUB>>", "59": "<(IDENTIFIER,System,System.out.println(&quot;tokitsukaze&quot;))<SUB>7</SUB>>", "61": "<(LITERAL,&quot;tokitsukaze&quot;,System.out.println(&quot;tokitsukaze&quot;))<SUB>7</SUB>>", "63": "<(LOCAL,int[] suff: int[])<SUB>10</SUB>>", "65": "<(IDENTIFIER,suff,int[] suff = new int[n + 1])<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.addition,n + 1)<SUB>10</SUB>>", "69": "<(LITERAL,1,n + 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,suff[n - 1])<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "75": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = n - 2; Some(i &gt;= 0); i--),for (int i = n - 2; Some(i &gt;= 0); i--))<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = n - 2)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>12</SUB>>", "83": "<(LITERAL,2,n - 2)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,i &gt;= 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.postDecrement,i--)<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,suff[i])<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,suff[i] = 1 + (s[i + 1] == s[i] ? suff[i + 1] : 0))<SUB>13</SUB>>", "95": "<(LITERAL,1,1 + (s[i + 1] == s[i] ? suff[i + 1] : 0))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.equals,s[i + 1] == s[i])<SUB>13</SUB>>", "99": "<(IDENTIFIER,s,s[i + 1] == s[i])<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,s[i + 1] == s[i])<SUB>13</SUB>>", "107": "<(IDENTIFIER,suff,s[i + 1] == s[i] ? suff[i + 1] : 0)<SUB>13</SUB>>", "109": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "111": "<(LITERAL,0,s[i + 1] == s[i] ? suff[i + 1] : 0)<SUB>13</SUB>>", "113": "<(LOCAL,int i: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,int i = n - 2)<SUB>15</SUB>>", "117": "<(IDENTIFIER,n,n - 2)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>15</SUB>>", "121": "<(LITERAL,0,i &gt;= 0)<SUB>15</SUB>>", "123": "<(IDENTIFIER,i,i--)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,suff[i])<SUB>16</SUB>>", "127": "<(IDENTIFIER,i,suff[i] = Math.max(suff[i], suff[i + 1]))<SUB>16</SUB>>", "129": "<(IDENTIFIER,Math,Math.max(suff[i], suff[i + 1]))<SUB>16</SUB>>", "131": "<(IDENTIFIER,suff,Math.max(suff[i], suff[i + 1]))<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,suff[i + 1])<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "137": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "139": "<(LOCAL,int curr: int)<SUB>17</SUB>>", "141": "<(IDENTIFIER,max,int max = 0)<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.assignment,int curr = 0)<SUB>17</SUB>>", "145": "<(LITERAL,0,int curr = 0)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.assignment,boolean draw = false)<SUB>18</SUB>>", "149": "<(LITERAL,false,boolean draw = false)<SUB>18</SUB>>", "151": "<(&lt;operator&gt;.assignment,int ones = 0)<SUB>19</SUB>>", "153": "<(LITERAL,0,int ones = 0)<SUB>19</SUB>>", "155": "<(LOCAL,int i: int)<SUB>20</SUB>>", "157": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "159": "<(&lt;operator&gt;.lessEqualsThan,i + k &lt;= n)<SUB>20</SUB>>", "161": "<(IDENTIFIER,i,i + k)<SUB>20</SUB>>", "163": "<(IDENTIFIER,n,i + k &lt;= n)<SUB>20</SUB>>", "165": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "167": "<(LOCAL,int prefix: int)<SUB>23</SUB>>", "169": "<(IDENTIFIER,prefix,int prefix = ones == i ? k + ones : max)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.equals,ones == i)<SUB>23</SUB>>", "173": "<(IDENTIFIER,i,ones == i)<SUB>23</SUB>>", "175": "<(IDENTIFIER,k,k + ones)<SUB>23</SUB>>", "177": "<(IDENTIFIER,max,ones == i ? k + ones : max)<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.assignment,int suffix = i + k == n ? k : s[i + k] == '1' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.conditional,i + k == n ? k : s[i + k] == '1' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.addition,i + k)<SUB>24</SUB>>", "185": "<(IDENTIFIER,k,i + k)<SUB>24</SUB>>", "187": "<(IDENTIFIER,k,i + k == n ? k : s[i + k] == '1' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.logicalAnd,s[i + k] == '1' &amp;&amp; suff[i + k] == n - (i + k))<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,s[i + k])<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.addition,i + k)<SUB>24</SUB>>", "195": "<(IDENTIFIER,k,i + k)<SUB>24</SUB>>", "197": "<(&lt;operator&gt;.equals,suff[i + k] == n - (i + k))<SUB>24</SUB>>", "199": "<(IDENTIFIER,suff,suff[i + k] == n - (i + k))<SUB>24</SUB>>", "201": "<(IDENTIFIER,i,i + k)<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.subtraction,n - (i + k))<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.addition,i + k)<SUB>24</SUB>>", "207": "<(IDENTIFIER,k,i + k)<SUB>24</SUB>>", "209": "<(IDENTIFIER,k,k + suff[i + k])<SUB>24</SUB>>", "211": "<(IDENTIFIER,suff,k + suff[i + k])<SUB>24</SUB>>", "213": "<(IDENTIFIER,i,i + k)<SUB>24</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,suff[i + k])<SUB>24</SUB>>", "217": "<(&lt;operator&gt;.addition,i + k)<SUB>24</SUB>>", "219": "<(IDENTIFIER,k,i + k)<SUB>24</SUB>>", "221": "<(LOCAL,char last: char)<SUB>25</SUB>>", "223": "<(IDENTIFIER,first,char first = i == 0 ? '1' : s[0])<SUB>25</SUB>>", "225": "<(&lt;operator&gt;.equals,i == 0)<SUB>25</SUB>>", "227": "<(LITERAL,0,i == 0)<SUB>25</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>25</SUB>>", "231": "<(LITERAL,0,i == 0 ? '1' : s[0])<SUB>25</SUB>>", "233": "<(IDENTIFIER,last,char last = i + k == n ? '1' : s[n - 1])<SUB>25</SUB>>", "235": "<(&lt;operator&gt;.equals,i + k == n)<SUB>25</SUB>>", "237": "<(IDENTIFIER,i,i + k)<SUB>25</SUB>>", "239": "<(IDENTIFIER,n,i + k == n)<SUB>25</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,s[n - 1])<SUB>25</SUB>>", "243": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>25</SUB>>", "245": "<(LITERAL,1,n - 1)<SUB>25</SUB>>", "247": "<(&lt;operator&gt;.assignment,boolean zero = first == last &amp;&amp; prefix + suffix + k &gt;= n || Math.max(prefix, suffix) + k &gt;= n)<SUB>26</SUB>>", "249": "<(&lt;operator&gt;.logicalOr,first == last &amp;&amp; prefix + suffix + k &gt;= n || Math.max(prefix, suffix) + k &gt;= n)<SUB>26</SUB>>", "251": "<(&lt;operator&gt;.equals,first == last)<SUB>26</SUB>>", "253": "<(IDENTIFIER,last,first == last)<SUB>26</SUB>>", "255": "<(&lt;operator&gt;.addition,prefix + suffix + k)<SUB>26</SUB>>", "257": "<(IDENTIFIER,prefix,prefix + suffix)<SUB>26</SUB>>", "259": "<(IDENTIFIER,k,prefix + suffix + k)<SUB>26</SUB>>", "261": "<(&lt;operator&gt;.greaterEqualsThan,Math.max(prefix, suffix) + k &gt;= n)<SUB>26</SUB>>", "263": "<(max,Math.max(prefix, suffix))<SUB>26</SUB>>", "265": "<(IDENTIFIER,prefix,Math.max(prefix, suffix))<SUB>26</SUB>>", "267": "<(IDENTIFIER,k,Math.max(prefix, suffix) + k)<SUB>26</SUB>>", "269": "<(&lt;operator&gt;.assignment,prefix = ones == 0 ? k + ones : max)<SUB>28</SUB>>", "271": "<(&lt;operator&gt;.conditional,ones == 0 ? k + ones : max)<SUB>28</SUB>>", "273": "<(IDENTIFIER,ones,ones == 0)<SUB>28</SUB>>", "275": "<(&lt;operator&gt;.addition,k + ones)<SUB>28</SUB>>", "277": "<(IDENTIFIER,ones,k + ones)<SUB>28</SUB>>", "279": "<(&lt;operator&gt;.assignment,suffix = i + k == n ? k : s[i + k] == '0' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>29</SUB>>", "281": "<(&lt;operator&gt;.conditional,i + k == n ? k : s[i + k] == '0' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>29</SUB>>", "283": "<(&lt;operator&gt;.addition,i + k)<SUB>29</SUB>>", "285": "<(IDENTIFIER,k,i + k)<SUB>29</SUB>>", "287": "<(IDENTIFIER,k,i + k == n ? k : s[i + k] == '0' &amp;&amp; suff[i + k] == n - (i + k) ? k + suff[i + k] : suff[i + k])<SUB>29</SUB>>", "289": "<(&lt;operator&gt;.logicalAnd,s[i + k] == '0' &amp;&amp; suff[i + k] == n - (i + k))<SUB>29</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,s[i + k])<SUB>29</SUB>>", "293": "<(&lt;operator&gt;.addition,i + k)<SUB>29</SUB>>", "295": "<(IDENTIFIER,k,i + k)<SUB>29</SUB>>", "297": "<(&lt;operator&gt;.equals,suff[i + k] == n - (i + k))<SUB>29</SUB>>", "299": "<(IDENTIFIER,suff,suff[i + k] == n - (i + k))<SUB>29</SUB>>", "301": "<(IDENTIFIER,i,i + k)<SUB>29</SUB>>", "303": "<(&lt;operator&gt;.subtraction,n - (i + k))<SUB>29</SUB>>", "305": "<(&lt;operator&gt;.addition,i + k)<SUB>29</SUB>>", "307": "<(IDENTIFIER,k,i + k)<SUB>29</SUB>>", "309": "<(IDENTIFIER,k,k + suff[i + k])<SUB>29</SUB>>", "311": "<(IDENTIFIER,suff,k + suff[i + k])<SUB>29</SUB>>", "313": "<(IDENTIFIER,i,i + k)<SUB>29</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,suff[i + k])<SUB>29</SUB>>", "317": "<(&lt;operator&gt;.addition,i + k)<SUB>29</SUB>>", "319": "<(IDENTIFIER,k,i + k)<SUB>29</SUB>>", "321": "<(IDENTIFIER,first,first = i == 0 ? '0' : s[0])<SUB>30</SUB>>", "323": "<(&lt;operator&gt;.equals,i == 0)<SUB>30</SUB>>", "325": "<(LITERAL,0,i == 0)<SUB>30</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>30</SUB>>", "329": "<(LITERAL,0,i == 0 ? '0' : s[0])<SUB>30</SUB>>", "331": "<(IDENTIFIER,last,last = i + k == n ? '0' : s[n - 1])<SUB>31</SUB>>", "333": "<(&lt;operator&gt;.equals,i + k == n)<SUB>31</SUB>>", "335": "<(IDENTIFIER,i,i + k)<SUB>31</SUB>>", "337": "<(IDENTIFIER,n,i + k == n)<SUB>31</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,s[n - 1])<SUB>31</SUB>>", "341": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>31</SUB>>", "343": "<(LITERAL,1,n - 1)<SUB>31</SUB>>", "345": "<(&lt;operator&gt;.assignment,boolean one = first == last &amp;&amp; prefix + suffix + k &gt;= n || Math.max(prefix, suffix) + k &gt;= n)<SUB>32</SUB>>", "347": "<(&lt;operator&gt;.logicalOr,first == last &amp;&amp; prefix + suffix + k &gt;= n || Math.max(prefix, suffix) + k &gt;= n)<SUB>32</SUB>>", "349": "<(&lt;operator&gt;.equals,first == last)<SUB>32</SUB>>", "351": "<(IDENTIFIER,last,first == last)<SUB>32</SUB>>", "353": "<(&lt;operator&gt;.addition,prefix + suffix + k)<SUB>32</SUB>>", "355": "<(IDENTIFIER,prefix,prefix + suffix)<SUB>32</SUB>>", "357": "<(IDENTIFIER,k,prefix + suffix + k)<SUB>32</SUB>>", "359": "<(&lt;operator&gt;.greaterEqualsThan,Math.max(prefix, suffix) + k &gt;= n)<SUB>32</SUB>>", "361": "<(max,Math.max(prefix, suffix))<SUB>32</SUB>>", "363": "<(IDENTIFIER,prefix,Math.max(prefix, suffix))<SUB>32</SUB>>", "365": "<(IDENTIFIER,k,Math.max(prefix, suffix) + k)<SUB>32</SUB>>", "367": "<(CONTROL_STRUCTURE,if (!zero || !one),if (!zero || !one))<SUB>33</SUB>>", "369": "<(&lt;operator&gt;.logicalNot,!zero)<SUB>33</SUB>>", "371": "<(&lt;operator&gt;.logicalNot,!one)<SUB>33</SUB>>", "373": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "375": "<(IDENTIFIER,draw,draw = true)<SUB>35</SUB>>", "377": "<(CONTROL_STRUCTURE,if (s[i] == '1'),if (s[i] == '1'))<SUB>37</SUB>>", "379": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>37</SUB>>", "381": "<(IDENTIFIER,i,s[i] == '1')<SUB>37</SUB>>", "383": "<(&lt;operator&gt;.postIncrement,ones++)<SUB>38</SUB>>", "385": "<(CONTROL_STRUCTURE,if (i &gt; 0 &amp;&amp; s[i] == s[i - 1]),if (i &gt; 0 &amp;&amp; s[i] == s[i - 1]))<SUB>39</SUB>>", "387": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>39</SUB>>", "389": "<(LITERAL,0,i &gt; 0)<SUB>39</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>39</SUB>>", "393": "<(IDENTIFIER,i,s[i] == s[i - 1])<SUB>39</SUB>>", "395": "<(IDENTIFIER,s,s[i] == s[i - 1])<SUB>39</SUB>>", "397": "<(IDENTIFIER,i,i - 1)<SUB>39</SUB>>", "399": "<(&lt;operator&gt;.postIncrement,curr++)<SUB>40</SUB>>", "401": "<(CONTROL_STRUCTURE,else,else)<SUB>42</SUB>>", "403": "<(IDENTIFIER,curr,curr = 1)<SUB>42</SUB>>", "405": "<(&lt;operator&gt;.assignment,max = Math.max(max, curr))<SUB>43</SUB>>", "407": "<(max,Math.max(max, curr))<SUB>43</SUB>>", "409": "<(IDENTIFIER,max,Math.max(max, curr))<SUB>43</SUB>>", "411": "<(println,println(draw ? &quot;once again&quot; : &quot;quailty&quot;))<SUB>45</SUB>>", "413": "<(&lt;operator&gt;.conditional,draw ? &quot;once again&quot; : &quot;quailty&quot;)<SUB>45</SUB>>", "415": "<(LITERAL,&quot;once again&quot;,draw ? &quot;once again&quot; : &quot;quailty&quot;)<SUB>45</SUB>>", "417": "<(close,close())<SUB>46</SUB>>", "419": "<(MODIFIER,PUBLIC)>", "421": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}