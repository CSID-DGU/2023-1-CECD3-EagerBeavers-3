{"edges": [["19", "20"], ["19", "21"], ["19", "112"], ["19", "113"], ["19", "114"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "62"], ["21", "65"], ["21", "66"], ["21", "69"], ["21", "70"], ["21", "75"], ["21", "93"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "83"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "86"], ["83", "91"], ["84", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "97"], ["93", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["62", "66"], ["66", "72"], ["70", "77"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "57"], ["51", "62"], ["54", "51"], ["56", "54"], ["72", "70"], ["76", "84"], ["76", "94"], ["94", "100"], ["94", "106"], ["97", "114"], ["57", "60"], ["60", "56"], ["77", "76"], ["77", "80"], ["80", "76"], ["84", "88"], ["86", "91"], ["91", "77"], ["98", "97"], ["103", "114"], ["88", "86"], ["100", "98"], ["104", "108"], ["107", "103"], ["106", "104"], ["108", "107"], ["19", "24"], ["20", "114"], ["22", "114"], ["25", "114"], ["27", "114"], ["32", "114"], ["39", "114"], ["37", "114"], ["37", "114"], ["42", "114"], ["42", "114"], ["48", "114"], ["51", "114"], ["51", "114"], ["62", "114"], ["62", "114"], ["66", "114"], ["66", "114"], ["72", "114"], ["70", "114"], ["70", "114"], ["77", "114"], ["76", "114"], ["76", "114"], ["94", "114"], ["94", "114"], ["94", "114"], ["97", "114"], ["84", "114"], ["86", "114"], ["86", "114"], ["91", "114"], ["56", "114"], ["60", "114"], ["56", "114"], ["56", "114"], ["54", "114"], ["62", "114"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["37", "66"], ["19", "66"], ["72", "70"], ["72", "70"], ["22", "25"], ["19", "25"], ["19", "48"], ["60", "56"], ["19", "62"], ["42", "62"], ["56", "62"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["34", "39"], ["19", "39"], ["27", "44"], ["19", "44"], ["48", "51"], ["54", "51"], ["19", "51"], ["44", "51"], ["51", "54"], ["19", "54"], ["51", "72"], ["19", "72"], ["77", "76"], ["77", "76"], ["80", "76"], ["80", "76"], ["62", "86"], ["66", "94"], ["80", "94"], ["86", "94"], ["19", "94"], ["32", "94"], ["80", "94"], ["19", "97"], ["39", "60"], ["19", "60"], ["70", "77"], ["91", "77"], ["19", "77"], ["66", "80"], ["86", "80"], ["19", "80"], ["32", "80"], ["66", "84"], ["80", "84"], ["86", "84"], ["19", "84"], ["84", "86"], ["19", "86"], ["77", "91"], ["19", "91"], ["107", "103"], ["107", "103"], ["108", "107"], ["108", "107"], ["77", "107"], ["19", "107"], ["72", "108"], ["19", "108"], ["51", "60"], ["51", "51"], ["51", "57"], ["51", "56"], ["51", "54"], ["76", "77"], ["76", "84"], ["76", "88"], ["76", "76"], ["76", "91"], ["76", "86"], ["94", "107"], ["94", "98"], ["94", "100"], ["94", "103"], ["94", "104"], ["94", "106"], ["94", "97"], ["94", "108"], ["77", "80"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int M: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,M,int M = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int K = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(LOCAL,int[] array: int[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,array,int[] array = new int[N])<SUB>6</SUB>>", "45": "<(IDENTIFIER,N,new int[N])<SUB>6</SUB>>", "47": "<(LOCAL,int i: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>7</SUB>>", "53": "<(IDENTIFIER,N,i &lt; N)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,array[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "63": "<(IDENTIFIER,Arrays,sort(array))<SUB>9</SUB>>", "65": "<(LOCAL,int val: int)<SUB>10</SUB>>", "67": "<(IDENTIFIER,val,int val = K)<SUB>10</SUB>>", "69": "<(LOCAL,int index: int)<SUB>11</SUB>>", "71": "<(IDENTIFIER,index,int index = N - 1)<SUB>11</SUB>>", "73": "<(IDENTIFIER,N,N - 1)<SUB>11</SUB>>", "75": "<(CONTROL_STRUCTURE,while (index &gt;= 0 &amp;&amp; val &lt; M),while (index &gt;= 0 &amp;&amp; val &lt; M))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.greaterEqualsThan,index &gt;= 0)<SUB>12</SUB>>", "79": "<(LITERAL,0,index &gt;= 0)<SUB>12</SUB>>", "81": "<(IDENTIFIER,val,val &lt; M)<SUB>12</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "85": "<(IDENTIFIER,val,val--)<SUB>13</SUB>>", "87": "<(IDENTIFIER,val,val += array[index])<SUB>14</SUB>>", "89": "<(IDENTIFIER,array,val += array[index])<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.postDecrement,index--)<SUB>15</SUB>>", "93": "<(CONTROL_STRUCTURE,if (val &lt; M),if (val &lt; M))<SUB>17</SUB>>", "95": "<(IDENTIFIER,val,val &lt; M)<SUB>17</SUB>>", "97": "<(println,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "99": "<(IDENTIFIER,System,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "101": "<(LITERAL,&quot;-1&quot;,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "103": "<(println,System.out.println((N - 1) - index))<SUB>20</SUB>>", "105": "<(IDENTIFIER,System,System.out.println((N - 1) - index))<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.subtraction,(N - 1) - index)<SUB>20</SUB>>", "109": "<(IDENTIFIER,N,N - 1)<SUB>20</SUB>>", "111": "<(IDENTIFIER,index,(N - 1) - index)<SUB>20</SUB>>", "113": "<(MODIFIER,STATIC)>"}}