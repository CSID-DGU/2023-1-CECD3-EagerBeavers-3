{"edges": [["21", "22"], ["21", "23"], ["21", "160"], ["21", "161"], ["21", "162"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "6"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "69"], ["23", "72"], ["23", "73"], ["23", "76"], ["23", "155"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "5"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "62"], ["58", "68"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "66"], ["64", "65"], ["66", "67"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "87"], ["76", "89"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "86"], ["84", "85"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "96"], ["89", "97"], ["89", "104"], ["89", "105"], ["89", "116"], ["89", "117"], ["89", "128"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "141"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "145"], ["141", "147"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["41", "44"], ["44", "47"], ["69", "73"], ["73", "78"], ["155", "162"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "41"], ["47", "50"], ["50", "61"], ["50", "69"], ["53", "50"], ["78", "84"], ["81", "93"], ["81", "158"], ["87", "84"], ["156", "155"], ["30", "28"], ["56", "53"], ["83", "81"], ["91", "101"], ["97", "110"], ["105", "122"], ["117", "129"], ["158", "156"], ["84", "83"], ["93", "91"], ["99", "97"], ["107", "105"], ["119", "117"], ["129", "138"], ["129", "87"], ["59", "64"], ["62", "56"], ["101", "99"], ["108", "114"], ["111", "107"], ["120", "126"], ["123", "119"], ["134", "142"], ["61", "59"], ["64", "66"], ["66", "62"], ["110", "108"], ["112", "111"], ["122", "120"], ["124", "123"], ["136", "134"], ["142", "145"], ["142", "149"], ["145", "87"], ["114", "112"], ["126", "124"], ["138", "136"], ["149", "152"], ["149", "87"], ["152", "87"], ["21", "26"], ["22", "162"], ["24", "162"], ["27", "162"], ["27", "162"], ["32", "162"], ["37", "162"], ["39", "162"], ["37", "162"], ["37", "162"], ["41", "162"], ["44", "162"], ["50", "162"], ["50", "162"], ["69", "162"], ["73", "162"], ["78", "162"], ["81", "162"], ["84", "162"], ["83", "162"], ["81", "162"], ["81", "162"], ["155", "162"], ["155", "162"], ["155", "162"], ["91", "162"], ["91", "162"], ["91", "162"], ["97", "162"], ["99", "162"], ["97", "162"], ["97", "162"], ["107", "162"], ["111", "162"], ["107", "162"], ["105", "162"], ["105", "162"], ["119", "162"], ["123", "162"], ["119", "162"], ["117", "162"], ["117", "162"], ["129", "162"], ["129", "162"], ["129", "162"], ["138", "162"], ["138", "162"], ["136", "162"], ["134", "162"], ["134", "162"], ["142", "162"], ["142", "162"], ["142", "162"], ["149", "162"], ["149", "162"], ["149", "162"], ["152", "162"], ["145", "162"], ["87", "162"], ["59", "162"], ["62", "162"], ["62", "162"], ["66", "162"], ["62", "162"], ["56", "162"], ["53", "162"], ["136", "162"], ["69", "162"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "41"], ["21", "73"], ["24", "27"], ["21", "27"], ["41", "44"], ["21", "44"], ["21", "47"], ["21", "69"], ["44", "69"], ["56", "69"], ["21", "78"], ["73", "155"], ["152", "155"], ["145", "155"], ["21", "155"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["47", "50"], ["53", "50"], ["21", "50"], ["32", "50"], ["50", "53"], ["21", "53"], ["78", "81"], ["87", "81"], ["21", "81"], ["83", "81"], ["83", "81"], ["21", "87"], ["93", "87"], ["93", "91"], ["93", "91"], ["99", "97"], ["99", "97"], ["91", "105"], ["111", "105"], ["111", "105"], ["119", "117"], ["119", "117"], ["44", "56"], ["21", "56"], ["59", "56"], ["62", "56"], ["84", "83"], ["21", "83"], ["21", "59"], ["21", "68"], ["69", "84"], ["99", "84"], ["21", "84"], ["84", "93"], ["21", "93"], ["81", "93"], ["93", "99"], ["21", "99"], ["93", "99"], ["91", "107"], ["111", "107"], ["111", "107"], ["97", "119"], ["123", "119"], ["123", "119"], ["105", "129"], ["21", "129"], ["117", "129"], ["136", "134"], ["136", "134"], ["59", "62"], ["21", "62"], ["64", "62"], ["66", "62"], ["93", "101"], ["21", "101"], ["91", "111"], ["21", "111"], ["97", "123"], ["21", "123"], ["39", "64"], ["66", "64"], ["21", "64"], ["64", "66"], ["21", "66"], ["21", "136"], ["138", "136"], ["138", "136"], ["134", "142"], ["21", "142"], ["37", "142"], ["149", "142"], ["73", "145"], ["152", "145"], ["21", "145"], ["129", "138"], ["21", "138"], ["129", "138"], ["21", "152"], ["142", "149"], ["21", "149"], ["142", "149"], ["73", "152"], ["145", "152"], ["50", "64"], ["50", "66"], ["50", "56"], ["50", "50"], ["50", "59"], ["50", "61"], ["50", "53"], ["50", "62"], ["81", "107"], ["81", "120"], ["81", "122"], ["81", "99"], ["81", "81"], ["81", "84"], ["81", "114"], ["81", "119"], ["81", "123"], ["81", "87"], ["81", "97"], ["81", "91"], ["81", "112"], ["81", "129"], ["81", "93"], ["81", "101"], ["81", "126"], ["81", "83"], ["81", "105"], ["81", "110"], ["81", "117"], ["81", "124"], ["81", "108"], ["81", "111"], ["129", "136"], ["129", "142"], ["129", "134"], ["129", "138"], ["142", "145"], ["142", "149"], ["149", "152"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int size: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,size,int size = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int side = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "6": "<(LOCAL,ArrayList&lt;Pair&gt; lis: ANY)<SUB>5</SUB>>", "42": "<(IDENTIFIER,lis,ANY lis = new ArrayList&lt;Pair&gt;())<SUB>5</SUB>>", "44": "<(&lt;init&gt;,new ArrayList&lt;Pair&gt;())<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt; size); x++),for (int x = 0; Some(x &lt; size); x++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int x = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,x,x &lt; size)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,x++)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(IDENTIFIER,lis,add(new Pair(sc.nextInt(), sc.nextInt())))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.alloc,new Pair(sc.nextInt(), sc.nextInt()))<SUB>8</SUB>>", "63": "<(IDENTIFIER,$obj2,new Pair(sc.nextInt(), sc.nextInt()))>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "69": "<(sort,sort(lis))<SUB>11</SUB>>", "71": "<(IDENTIFIER,lis,sort(lis))<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,int count = 2)<SUB>12</SUB>>", "75": "<(LITERAL,2,int count = 2)<SUB>12</SUB>>", "77": "<(LOCAL,int x: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,x,int x = 0)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.lessThan,x &lt; lis.size() - 1)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.subtraction,lis.size() - 1)<SUB>13</SUB>>", "85": "<(IDENTIFIER,lis,size())<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,x++)<SUB>13</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,ANY a = get(x))<SUB>15</SUB>>", "93": "<(get,get(x))<SUB>15</SUB>>", "95": "<(IDENTIFIER,x,get(x))<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,ANY b = get(x + 1))<SUB>16</SUB>>", "99": "<(get,get(x + 1))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.addition,x + 1)<SUB>16</SUB>>", "103": "<(LITERAL,1,x + 1)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.assignment,double na = a.x + a.len / 2)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.addition,a.x + a.len / 2)<SUB>17</SUB>>", "109": "<(IDENTIFIER,a,a.x + a.len / 2)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.division,a.len / 2)<SUB>17</SUB>>", "113": "<(IDENTIFIER,a,a.len / 2)<SUB>17</SUB>>", "115": "<(LITERAL,2,a.len / 2)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,double nb = b.x - b.len / 2)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.subtraction,b.x - b.len / 2)<SUB>18</SUB>>", "121": "<(IDENTIFIER,b,b.x - b.len / 2)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.division,b.len / 2)<SUB>18</SUB>>", "125": "<(IDENTIFIER,b,b.len / 2)<SUB>18</SUB>>", "127": "<(LITERAL,2,b.len / 2)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.lessThan,na &lt; nb)<SUB>20</SUB>>", "131": "<(IDENTIFIER,nb,na &lt; nb)<SUB>20</SUB>>", "133": "<(LOCAL,double dif: double)<SUB>22</SUB>>", "135": "<(IDENTIFIER,dif,double dif = Math.abs(nb - na))<SUB>22</SUB>>", "137": "<(IDENTIFIER,Math,Math.abs(nb - na))<SUB>22</SUB>>", "139": "<(IDENTIFIER,nb,nb - na)<SUB>22</SUB>>", "141": "<(CONTROL_STRUCTURE,if (dif == side),if (dif == side))<SUB>23</SUB>>", "143": "<(IDENTIFIER,dif,dif == side)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,count++)<SUB>23</SUB>>", "147": "<(CONTROL_STRUCTURE,else,else)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.greaterThan,dif &gt; side)<SUB>24</SUB>>", "151": "<(IDENTIFIER,side,dif &gt; side)<SUB>24</SUB>>", "153": "<(IDENTIFIER,count,count += 2)<SUB>24</SUB>>", "155": "<(println,System.out.println(count))<SUB>27</SUB>>", "157": "<(IDENTIFIER,System,System.out.println(count))<SUB>27</SUB>>", "159": "<(IDENTIFIER,count,System.out.println(count))<SUB>27</SUB>>", "161": "<(MODIFIER,STATIC)>"}}