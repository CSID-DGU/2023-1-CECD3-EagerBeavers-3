{"edges": [["17", "19"], ["17", "173"], ["17", "174"], ["17", "175"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "50"], ["19", "56"], ["19", "60"], ["19", "66"], ["19", "88"], ["19", "91"], ["19", "96"], ["19", "97"], ["19", "100"], ["19", "101"], ["19", "106"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "74"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "81"], ["74", "83"], ["74", "85"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["108", "117"], ["108", "120"], ["108", "125"], ["108", "126"], ["108", "131"], ["108", "132"], ["108", "137"], ["108", "138"], ["108", "145"], ["108", "146"], ["108", "153"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "165"], ["153", "169"], ["154", "155"], ["154", "164"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["165", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["170", "171"], ["170", "172"], ["20", "28"], ["23", "37"], ["35", "43"], ["38", "54"], ["50", "58"], ["56", "65"], ["60", "69"], ["88", "93"], ["91", "97"], ["97", "103"], ["101", "175"], ["101", "113"], ["22", "20"], ["37", "35"], ["52", "50"], ["58", "56"], ["63", "60"], ["67", "79"], ["67", "88"], ["93", "91"], ["103", "101"], ["26", "33"], ["29", "23"], ["41", "48"], ["44", "38"], ["54", "52"], ["65", "63"], ["68", "67"], ["75", "81"], ["81", "83"], ["83", "85"], ["85", "88"], ["110", "117"], ["117", "122"], ["120", "128"], ["126", "134"], ["132", "142"], ["138", "150"], ["146", "158"], ["28", "26"], ["31", "29"], ["43", "41"], ["46", "44"], ["69", "68"], ["77", "75"], ["112", "110"], ["122", "120"], ["128", "126"], ["134", "132"], ["140", "138"], ["148", "146"], ["154", "166"], ["154", "170"], ["33", "31"], ["48", "46"], ["79", "77"], ["113", "112"], ["142", "140"], ["150", "148"], ["155", "154"], ["166", "175"], ["166", "113"], ["170", "175"], ["170", "113"], ["156", "161"], ["161", "155"], ["158", "156"], ["17", "22"], ["18", "175"], ["20", "175"], ["29", "175"], ["29", "175"], ["29", "175"], ["23", "175"], ["35", "175"], ["38", "175"], ["41", "175"], ["44", "175"], ["44", "175"], ["44", "175"], ["38", "175"], ["52", "175"], ["54", "175"], ["52", "175"], ["50", "175"], ["50", "175"], ["56", "175"], ["56", "175"], ["60", "175"], ["60", "175"], ["60", "175"], ["69", "175"], ["68", "175"], ["67", "175"], ["67", "175"], ["77", "175"], ["75", "175"], ["75", "175"], ["81", "175"], ["83", "175"], ["83", "175"], ["85", "175"], ["85", "175"], ["88", "175"], ["91", "175"], ["97", "175"], ["97", "175"], ["101", "175"], ["103", "175"], ["101", "175"], ["101", "175"], ["170", "175"], ["170", "175"], ["170", "175"], ["166", "175"], ["166", "175"], ["166", "175"], ["60", "175"], ["17", "18"], ["17", "20"], ["17", "35"], ["52", "50"], ["52", "50"], ["58", "56"], ["17", "97"], ["103", "101"], ["103", "101"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["41", "38"], ["44", "38"], ["17", "60"], ["56", "60"], ["52", "60"], ["17", "88"], ["93", "91"], ["17", "91"], ["93", "91"], ["17", "107"], ["17", "26"], ["17", "34"], ["17", "41"], ["17", "49"], ["17", "52"], ["54", "52"], ["50", "58"], ["17", "58"], ["68", "67"], ["68", "67"], ["17", "67"], ["88", "93"], ["17", "93"], ["91", "103"], ["17", "103"], ["112", "110"], ["112", "110"], ["60", "126"], ["60", "132"], ["60", "138"], ["60", "146"], ["26", "29"], ["17", "29"], ["41", "44"], ["17", "44"], ["23", "54"], ["17", "54"], ["69", "68"], ["69", "68"], ["17", "68"], ["38", "75"], ["17", "75"], ["79", "75"], ["75", "81"], ["17", "81"], ["81", "83"], ["17", "83"], ["29", "85"], ["44", "85"], ["17", "85"], ["103", "117"], ["150", "117"], ["17", "117"], ["110", "117"], ["122", "120"], ["17", "120"], ["122", "120"], ["58", "69"], ["17", "69"], ["17", "77"], ["79", "77"], ["97", "112"], ["142", "112"], ["170", "112"], ["17", "112"], ["101", "112"], ["166", "112"], ["117", "122"], ["17", "122"], ["117", "122"], ["155", "154"], ["155", "154"], ["17", "154"], ["150", "166"], ["17", "166"], ["150", "170"], ["17", "170"], ["17", "79"], ["97", "113"], ["142", "113"], ["170", "113"], ["17", "113"], ["101", "113"], ["166", "113"], ["120", "142"], ["17", "142"], ["97", "142"], ["170", "142"], ["142", "150"], ["17", "150"], ["122", "150"], ["156", "155"], ["156", "155"], ["161", "155"], ["161", "155"], ["17", "156"], ["158", "156"], ["158", "156"], ["132", "161"], ["17", "161"], ["146", "161"], ["126", "158"], ["17", "158"], ["138", "158"], ["67", "77"], ["67", "75"], ["67", "81"], ["67", "85"], ["67", "79"], ["67", "83"], ["154", "166"], ["154", "170"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,bf,bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "39": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "45": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "47": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "49": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "51": "<(IDENTIFIER,n,n = parseInt(bf.readLine()))<SUB>5</SUB>>", "53": "<(IDENTIFIER,Integer,parseInt(bf.readLine()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,bf,readLine())<SUB>5</SUB>>", "57": "<(IDENTIFIER,a,a = new int[n])<SUB>6</SUB>>", "59": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "61": "<(IDENTIFIER,Arrays,fill(a, Integer.MAX_VALUE))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>7</SUB>>", "65": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.notEquals,(n / 2) % 2 != 0)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.division,n / 2)<SUB>8</SUB>>", "71": "<(LITERAL,2,n / 2)<SUB>8</SUB>>", "73": "<(LITERAL,0,(n / 2) % 2 != 0)<SUB>8</SUB>>", "75": "<(println,println(&quot;! &quot; + (-1)))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.addition,&quot;! &quot; + (-1))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "81": "<(flush,flush())<SUB>10</SUB>>", "83": "<(close,close())<SUB>11</SUB>>", "85": "<(exit,System.exit(0))<SUB>11</SUB>>", "87": "<(LITERAL,0,System.exit(0))<SUB>11</SUB>>", "89": "<(IDENTIFIER,this,ask(0))<SUB>14</SUB>>", "91": "<(ask,ask(opp(0)))<SUB>15</SUB>>", "93": "<(opp,opp(0))<SUB>15</SUB>>", "95": "<(LITERAL,0,opp(0))<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,int low = 0)<SUB>17</SUB>>", "99": "<(LITERAL,0,int low = 0)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.assignment,int high = opp(0))<SUB>18</SUB>>", "103": "<(opp,opp(0))<SUB>18</SUB>>", "105": "<(LITERAL,0,opp(0))<SUB>18</SUB>>", "107": "<(LITERAL,true,while (true))<SUB>19</SUB>>", "109": "<(LOCAL,int test: int)<SUB>20</SUB>>", "111": "<(IDENTIFIER,test,int test = (low + high) / 2)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.addition,low + high)<SUB>20</SUB>>", "115": "<(IDENTIFIER,high,low + high)<SUB>20</SUB>>", "117": "<(ask,ask(test))<SUB>21</SUB>>", "119": "<(IDENTIFIER,test,ask(test))<SUB>21</SUB>>", "121": "<(IDENTIFIER,this,ask(opp(test)))<SUB>22</SUB>>", "123": "<(IDENTIFIER,this,opp(test))<SUB>22</SUB>>", "125": "<(LOCAL,int l_1: int)<SUB>23</SUB>>", "127": "<(IDENTIFIER,l_1,int l_1 = a[low])<SUB>23</SUB>>", "129": "<(IDENTIFIER,a,int l_1 = a[low])<SUB>23</SUB>>", "131": "<(LOCAL,int l_2: int)<SUB>24</SUB>>", "133": "<(IDENTIFIER,l_2,int l_2 = a[test])<SUB>24</SUB>>", "135": "<(IDENTIFIER,a,int l_2 = a[test])<SUB>24</SUB>>", "137": "<(LOCAL,int r_1: int)<SUB>25</SUB>>", "139": "<(IDENTIFIER,r_1,int r_1 = a[opp(low)])<SUB>25</SUB>>", "141": "<(IDENTIFIER,a,int r_1 = a[opp(low)])<SUB>25</SUB>>", "143": "<(IDENTIFIER,this,opp(low))<SUB>25</SUB>>", "145": "<(LOCAL,int r_2: int)<SUB>26</SUB>>", "147": "<(IDENTIFIER,r_2,int r_2 = a[opp(test)])<SUB>26</SUB>>", "149": "<(IDENTIFIER,a,int r_2 = a[opp(test)])<SUB>26</SUB>>", "151": "<(IDENTIFIER,this,opp(test))<SUB>26</SUB>>", "153": "<(CONTROL_STRUCTURE,if (1L * (l_1 - r_1) * (l_2 - r_2) &lt; 0L),if (1L * (l_1 - r_1) * (l_2 - r_2) &lt; 0L))<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.multiplication,1L * (l_1 - r_1) * (l_2 - r_2))<SUB>27</SUB>>", "157": "<(LITERAL,1L,1L * (l_1 - r_1))<SUB>27</SUB>>", "159": "<(IDENTIFIER,l_1,l_1 - r_1)<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.subtraction,l_2 - r_2)<SUB>27</SUB>>", "163": "<(IDENTIFIER,r_2,l_2 - r_2)<SUB>27</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "167": "<(IDENTIFIER,high,high = test)<SUB>28</SUB>>", "169": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "171": "<(IDENTIFIER,low,low = test)<SUB>30</SUB>>", "173": "<(MODIFIER,PUBLIC)>", "175": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}