{"edges": [["19", "20"], ["19", "21"], ["19", "288"], ["19", "289"], ["19", "290"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "84"], ["21", "85"], ["21", "90"], ["21", "91"], ["21", "96"], ["21", "97"], ["21", "103"], ["21", "104"], ["21", "109"], ["21", "186"], ["21", "187"], ["21", "190"], ["21", "191"], ["21", "196"], ["21", "270"], ["21", "273"], ["21", "286"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "68"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "76"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "169"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["143", "144"], ["143", "153"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["157", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["178", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "204"], ["196", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "212"], ["206", "217"], ["206", "253"], ["206", "258"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["217", "222"], ["217", "225"], ["217", "227"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["227", "228"], ["228", "229"], ["228", "236"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["236", "237"], ["236", "246"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["260", "263"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "285"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["286", "287"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "43"], ["85", "93"], ["91", "100"], ["97", "106"], ["104", "111"], ["187", "193"], ["191", "198"], ["270", "277"], ["273", "286"], ["286", "290"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "54"], ["46", "87"], ["49", "46"], ["87", "85"], ["93", "91"], ["99", "97"], ["106", "104"], ["111", "114"], ["114", "121"], ["114", "187"], ["117", "114"], ["193", "191"], ["198", "201"], ["201", "208"], ["201", "270"], ["204", "201"], ["275", "273"], ["100", "99"], ["121", "126"], ["208", "214"], ["212", "219"], ["258", "204"], ["276", "275"], ["54", "57"], ["57", "66"], ["57", "49"], ["60", "57"], ["126", "129"], ["129", "138"], ["129", "170"], ["132", "129"], ["170", "175"], ["170", "117"], ["214", "212"], ["219", "222"], ["222", "231"], ["222", "254"], ["225", "222"], ["254", "204"], ["254", "264"], ["260", "258"], ["277", "282"], ["280", "276"], ["64", "70"], ["174", "117"], ["263", "260"], ["282", "280"], ["66", "64"], ["69", "78"], ["69", "60"], ["136", "149"], ["136", "132"], ["175", "180"], ["178", "174"], ["229", "240"], ["229", "225"], ["264", "267"], ["267", "263"], ["70", "69"], ["70", "73"], ["73", "69"], ["77", "60"], ["137", "136"], ["144", "154"], ["153", "132"], ["180", "183"], ["183", "178"], ["230", "229"], ["237", "249"], ["246", "225"], ["78", "81"], ["81", "77"], ["138", "137"], ["146", "144"], ["154", "159"], ["157", "153"], ["231", "230"], ["239", "237"], ["248", "246"], ["147", "146"], ["159", "166"], ["162", "157"], ["240", "243"], ["243", "239"], ["249", "248"], ["149", "147"], ["164", "162"], ["166", "164"], ["19", "24"], ["20", "290"], ["22", "290"], ["25", "290"], ["27", "290"], ["34", "290"], ["32", "290"], ["32", "290"], ["37", "290"], ["37", "290"], ["37", "290"], ["43", "290"], ["46", "290"], ["46", "290"], ["85", "290"], ["85", "290"], ["93", "290"], ["91", "290"], ["91", "290"], ["97", "290"], ["97", "290"], ["97", "290"], ["106", "290"], ["104", "290"], ["104", "290"], ["111", "290"], ["114", "290"], ["114", "290"], ["187", "290"], ["193", "290"], ["191", "290"], ["191", "290"], ["198", "290"], ["201", "290"], ["201", "290"], ["201", "290"], ["270", "290"], ["277", "290"], ["276", "290"], ["280", "290"], ["280", "290"], ["276", "290"], ["275", "290"], ["273", "290"], ["273", "290"], ["286", "290"], ["286", "290"], ["208", "290"], ["212", "290"], ["214", "290"], ["212", "290"], ["212", "290"], ["219", "290"], ["222", "290"], ["222", "290"], ["222", "290"], ["254", "290"], ["254", "290"], ["260", "290"], ["264", "290"], ["263", "290"], ["263", "290"], ["260", "290"], ["258", "290"], ["258", "290"], ["204", "290"], ["230", "290"], ["229", "290"], ["229", "290"], ["239", "290"], ["237", "290"], ["246", "290"], ["248", "290"], ["246", "290"], ["225", "290"], ["121", "290"], ["126", "290"], ["129", "290"], ["129", "290"], ["129", "290"], ["170", "290"], ["170", "290"], ["174", "290"], ["178", "290"], ["183", "290"], ["178", "290"], ["174", "290"], ["174", "290"], ["117", "290"], ["137", "290"], ["136", "290"], ["136", "290"], ["146", "290"], ["144", "290"], ["153", "290"], ["157", "290"], ["164", "290"], ["157", "290"], ["153", "290"], ["153", "290"], ["132", "290"], ["54", "290"], ["57", "290"], ["57", "290"], ["49", "290"], ["66", "290"], ["64", "290"], ["64", "290"], ["70", "290"], ["69", "290"], ["69", "290"], ["69", "290"], ["77", "290"], ["77", "290"], ["60", "290"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["87", "85"], ["87", "85"], ["93", "91"], ["93", "91"], ["99", "97"], ["106", "104"], ["106", "104"], ["19", "187"], ["193", "191"], ["193", "191"], ["187", "270"], ["258", "270"], ["19", "270"], ["22", "25"], ["19", "25"], ["19", "43"], ["19", "111"], ["19", "198"], ["32", "270"], ["19", "273"], ["275", "273"], ["275", "273"], ["273", "286"], ["19", "286"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["43", "46"], ["49", "46"], ["19", "46"], ["39", "46"], ["57", "46"], ["46", "49"], ["73", "49"], ["19", "49"], ["46", "87"], ["19", "87"], ["87", "93"], ["19", "93"], ["85", "93"], ["100", "99"], ["100", "99"], ["19", "106"], ["100", "106"], ["111", "114"], ["117", "114"], ["19", "114"], ["104", "114"], ["170", "117"], ["183", "117"], ["19", "117"], ["114", "121"], ["19", "121"], ["19", "193"], ["91", "193"], ["146", "193"], ["198", "201"], ["204", "201"], ["19", "201"], ["191", "201"], ["243", "201"], ["254", "204"], ["264", "204"], ["19", "204"], ["201", "208"], ["19", "208"], ["214", "212"], ["214", "212"], ["260", "258"], ["260", "258"], ["260", "258"], ["276", "275"], ["276", "275"], ["19", "275"], ["19", "54"], ["19", "100"], ["93", "100"], ["19", "126"], ["19", "219"], ["277", "276"], ["280", "276"], ["280", "276"], ["54", "57"], ["60", "57"], ["19", "57"], ["46", "57"], ["57", "60"], ["73", "60"], ["81", "60"], ["19", "60"], ["66", "64"], ["126", "129"], ["132", "129"], ["19", "129"], ["106", "129"], ["138", "132"], ["166", "132"], ["19", "132"], ["137", "170"], ["164", "170"], ["19", "170"], ["114", "170"], ["121", "170"], ["144", "170"], ["178", "174"], ["178", "174"], ["178", "174"], ["114", "214"], ["19", "214"], ["219", "222"], ["225", "222"], ["19", "222"], ["193", "222"], ["248", "222"], ["231", "225"], ["19", "225"], ["208", "254"], ["237", "254"], ["19", "254"], ["230", "254"], ["201", "254"], ["178", "260"], ["157", "260"], ["19", "260"], ["187", "260"], ["258", "260"], ["264", "260"], ["264", "260"], ["97", "260"], ["270", "277"], ["19", "277"], ["282", "280"], ["19", "280"], ["282", "280"], ["264", "263"], ["264", "263"], ["97", "263"], ["19", "282"], ["187", "282"], ["258", "282"], ["34", "66"], ["19", "66"], ["70", "69"], ["70", "69"], ["73", "69"], ["73", "69"], ["81", "77"], ["81", "77"], ["137", "136"], ["137", "136"], ["19", "136"], ["146", "144"], ["146", "144"], ["157", "153"], ["157", "153"], ["157", "153"], ["157", "178"], ["19", "178"], ["97", "178"], ["174", "178"], ["153", "178"], ["183", "178"], ["183", "178"], ["230", "229"], ["230", "229"], ["19", "229"], ["239", "237"], ["239", "237"], ["248", "246"], ["248", "246"], ["183", "264"], ["19", "264"], ["254", "264"], ["64", "70"], ["19", "70"], ["46", "73"], ["19", "73"], ["57", "73"], ["37", "77"], ["138", "137"], ["138", "137"], ["164", "137"], ["19", "137"], ["114", "137"], ["121", "144"], ["19", "144"], ["19", "183"], ["170", "183"], ["231", "230"], ["231", "230"], ["19", "230"], ["201", "230"], ["208", "237"], ["19", "237"], ["212", "246"], ["19", "246"], ["19", "81"], ["57", "81"], ["73", "81"], ["19", "138"], ["129", "138"], ["37", "146"], ["19", "146"], ["91", "146"], ["178", "157"], ["19", "157"], ["97", "157"], ["174", "157"], ["153", "157"], ["19", "231"], ["222", "231"], ["37", "239"], ["248", "239"], ["243", "239"], ["243", "239"], ["37", "248"], ["239", "248"], ["222", "248"], ["19", "248"], ["201", "243"], ["19", "243"], ["138", "149"], ["19", "149"], ["91", "149"], ["146", "149"], ["137", "164"], ["19", "164"], ["166", "164"], ["166", "164"], ["19", "166"], ["138", "166"], ["46", "57"], ["46", "54"], ["46", "49"], ["46", "46"], ["114", "114"], ["114", "121"], ["114", "170"], ["114", "129"], ["114", "126"], ["114", "117"], ["201", "214"], ["201", "204"], ["201", "208"], ["201", "212"], ["201", "201"], ["201", "254"], ["201", "222"], ["201", "219"], ["57", "60"], ["57", "64"], ["57", "57"], ["57", "69"], ["57", "70"], ["57", "66"], ["129", "136"], ["129", "132"], ["129", "129"], ["129", "138"], ["129", "137"], ["170", "178"], ["170", "174"], ["170", "180"], ["170", "183"], ["170", "175"], ["222", "230"], ["222", "225"], ["222", "231"], ["222", "229"], ["222", "222"], ["254", "264"], ["254", "267"], ["254", "258"], ["254", "260"], ["254", "263"], ["69", "77"], ["69", "81"], ["69", "78"], ["136", "154"], ["136", "146"], ["136", "149"], ["136", "162"], ["136", "153"], ["136", "144"], ["136", "164"], ["136", "166"], ["136", "157"], ["136", "159"], ["136", "147"], ["229", "240"], ["229", "243"], ["229", "246"], ["229", "249"], ["229", "239"], ["229", "237"], ["229", "248"], ["70", "73"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY escanear = new Escanear())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Escanear())<SUB>2</SUB>>", "3": "<(IDENTIFIER,escanear,new Escanear())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int proximoInt = proximoNum())<SUB>3</SUB>>", "29": "<(proximoNum,proximoNum())<SUB>3</SUB>>", "31": "<(LOCAL,double proximoDouble: double)<SUB>4</SUB>>", "33": "<(IDENTIFIER,proximoDouble,double proximoDouble = proximoNum())<SUB>4</SUB>>", "35": "<(IDENTIFIER,escanear,proximoNum())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,long[] aux = new long[proximoInt])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new long[proximoInt])>", "41": "<(CONTROL_STRUCTURE,for (Integer i = 0; Some(i &lt; proximoInt); i++),for (Integer i = 0; Some(i &lt; proximoInt); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,Integer i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,Integer i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; proximoInt)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(LOCAL,Integer j: java.lang.Integer)<SUB>7</SUB>>", "55": "<(IDENTIFIER,j,Integer j = 0)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.lessThan,j &lt; proximoInt)<SUB>7</SUB>>", "59": "<(IDENTIFIER,proximoInt,j &lt; proximoInt)<SUB>7</SUB>>", "61": "<(IDENTIFIER,j,j++)<SUB>7</SUB>>", "63": "<(LOCAL,Integer val: java.lang.Integer)<SUB>8</SUB>>", "65": "<(IDENTIFIER,val,Integer val = proximoNum())<SUB>8</SUB>>", "67": "<(IDENTIFIER,escanear,proximoNum())<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.logicalOr,val.equals(1) || i.equals(j))<SUB>9</SUB>>", "71": "<(IDENTIFIER,val,val.equals(1))<SUB>9</SUB>>", "73": "<(equals,i.equals(j))<SUB>9</SUB>>", "75": "<(IDENTIFIER,j,i.equals(j))<SUB>9</SUB>>", "77": "<(&lt;operators&gt;.assignmentOr,aux[i] |= 1L &lt;&lt; j)<SUB>10</SUB>>", "79": "<(IDENTIFIER,aux,aux[i] |= 1L &lt;&lt; j)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.shiftLeft,1L &lt;&lt; j)<SUB>10</SUB>>", "83": "<(IDENTIFIER,j,1L &lt;&lt; j)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,int esquerda = proximoInt / 2)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.division,proximoInt / 2)<SUB>15</SUB>>", "89": "<(LITERAL,2,proximoInt / 2)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,int direita = proximoInt - esquerda)<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.subtraction,proximoInt - esquerda)<SUB>16</SUB>>", "95": "<(IDENTIFIER,esquerda,proximoInt - esquerda)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] depois = new int[1 &lt;&lt; esquerda])<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; esquerda])>", "101": "<(LITERAL,1,1 &lt;&lt; esquerda)<SUB>18</SUB>>", "103": "<(LOCAL,int maiorMascara: int)<SUB>19</SUB>>", "105": "<(IDENTIFIER,maiorMascara,int maiorMascara = 1 &lt;&lt; esquerda)<SUB>19</SUB>>", "107": "<(LITERAL,1,1 &lt;&lt; esquerda)<SUB>19</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int mascara = 1; Some(mascara &lt; maiorMascara); mascara++),for (int mascara = 1; Some(mascara &lt; maiorMascara); mascara++))<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.assignment,int mascara = 1)<SUB>21</SUB>>", "113": "<(LITERAL,1,int mascara = 1)<SUB>21</SUB>>", "115": "<(IDENTIFIER,mascara,mascara &lt; maiorMascara)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,mascara++)<SUB>21</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.assignment,int mascaraAtual = mascara)<SUB>22</SUB>>", "123": "<(IDENTIFIER,mascara,int mascaraAtual = mascara)<SUB>22</SUB>>", "125": "<(LOCAL,int j: int)<SUB>24</SUB>>", "127": "<(IDENTIFIER,j,int j = 0)<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.lessThan,j &lt; esquerda)<SUB>24</SUB>>", "131": "<(IDENTIFIER,esquerda,j &lt; esquerda)<SUB>24</SUB>>", "133": "<(IDENTIFIER,j,j++)<SUB>24</SUB>>", "135": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; mascara) &gt; 0),if (((1 &lt;&lt; j) &amp; mascara) &gt; 0))<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; mascara)<SUB>25</SUB>>", "139": "<(LITERAL,1,1 &lt;&lt; j)<SUB>25</SUB>>", "141": "<(IDENTIFIER,mascara,(1 &lt;&lt; j) &amp; mascara)<SUB>25</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "145": "<(IDENTIFIER,mascaraAtual,mascaraAtual &amp;= aux[j + direita] &gt;&gt; direita)<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,aux[j + direita])<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.addition,j + direita)<SUB>26</SUB>>", "151": "<(IDENTIFIER,direita,j + direita)<SUB>26</SUB>>", "153": "<(&lt;operator&gt;.assignment,depois[mascara] = Math.max(depois[mascara], depois[mascara ^ (1 &lt;&lt; j)]))<SUB>27</SUB>>", "155": "<(IDENTIFIER,depois,depois[mascara] = Math.max(depois[mascara], depois[mascara ^ (1 &lt;&lt; j)]))<SUB>27</SUB>>", "157": "<(max,Math.max(depois[mascara], depois[mascara ^ (1 &lt;&lt; j)]))<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,depois[mascara])<SUB>27</SUB>>", "161": "<(IDENTIFIER,mascara,Math.max(depois[mascara], depois[mascara ^ (1 &lt;&lt; j)]))<SUB>27</SUB>>", "163": "<(IDENTIFIER,depois,Math.max(depois[mascara], depois[mascara ^ (1 &lt;&lt; j)]))<SUB>27</SUB>>", "165": "<(IDENTIFIER,mascara,mascara ^ (1 &lt;&lt; j))<SUB>27</SUB>>", "167": "<(LITERAL,1,1 &lt;&lt; j)<SUB>27</SUB>>", "169": "<(CONTROL_STRUCTURE,if (mascara == mascaraAtual),if (mascara == mascaraAtual))<SUB>30</SUB>>", "171": "<(IDENTIFIER,mascara,mascara == mascaraAtual)<SUB>30</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,depois[mascara])<SUB>31</SUB>>", "177": "<(IDENTIFIER,mascara,depois[mascara] = Math.max(depois[mascara], Integer.bitCount(mascara)))<SUB>31</SUB>>", "179": "<(IDENTIFIER,Math,Math.max(depois[mascara], Integer.bitCount(mascara)))<SUB>31</SUB>>", "181": "<(IDENTIFIER,depois,Math.max(depois[mascara], Integer.bitCount(mascara)))<SUB>31</SUB>>", "183": "<(bitCount,Integer.bitCount(mascara))<SUB>31</SUB>>", "185": "<(IDENTIFIER,mascara,Integer.bitCount(mascara))<SUB>31</SUB>>", "187": "<(&lt;operator&gt;.assignment,int auxiliar = 0)<SUB>34</SUB>>", "189": "<(LITERAL,0,int auxiliar = 0)<SUB>34</SUB>>", "191": "<(&lt;operator&gt;.assignment,int mascaraMaxima = 1 &lt;&lt; direita)<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; direita)<SUB>35</SUB>>", "195": "<(IDENTIFIER,direita,1 &lt;&lt; direita)<SUB>35</SUB>>", "197": "<(LOCAL,int mascara: int)<SUB>36</SUB>>", "199": "<(IDENTIFIER,mascara,int mascara = 0)<SUB>36</SUB>>", "201": "<(&lt;operator&gt;.lessThan,mascara &lt; mascaraMaxima)<SUB>36</SUB>>", "203": "<(IDENTIFIER,mascaraMaxima,mascara &lt; mascaraMaxima)<SUB>36</SUB>>", "205": "<(IDENTIFIER,mascara,mascara++)<SUB>36</SUB>>", "207": "<(LOCAL,int mascaraCorrente: int)<SUB>37</SUB>>", "209": "<(IDENTIFIER,mascaraCorrente,int mascaraCorrente = mascara)<SUB>37</SUB>>", "211": "<(LOCAL,int mascaraValor: int)<SUB>38</SUB>>", "213": "<(IDENTIFIER,mascaraValor,int mascaraValor = maiorMascara - 1)<SUB>38</SUB>>", "215": "<(IDENTIFIER,maiorMascara,maiorMascara - 1)<SUB>38</SUB>>", "217": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; direita); j++),for (int j = 0; Some(j &lt; direita); j++))<SUB>39</SUB>>", "219": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>39</SUB>>", "221": "<(LITERAL,0,int j = 0)<SUB>39</SUB>>", "223": "<(IDENTIFIER,j,j &lt; direita)<SUB>39</SUB>>", "225": "<(&lt;operator&gt;.postIncrement,j++)<SUB>39</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "229": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; j) &amp; mascara) &gt; 0)<SUB>40</SUB>>", "231": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>40</SUB>>", "233": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>40</SUB>>", "235": "<(LITERAL,0,((1 &lt;&lt; j) &amp; mascara) &gt; 0)<SUB>40</SUB>>", "237": "<(&lt;operators&gt;.assignmentAnd,mascaraCorrente &amp;= aux[j] &amp; (mascaraMaxima - 1))<SUB>41</SUB>>", "239": "<(&lt;operator&gt;.and,aux[j] &amp; (mascaraMaxima - 1))<SUB>41</SUB>>", "241": "<(IDENTIFIER,aux,aux[j] &amp; (mascaraMaxima - 1))<SUB>41</SUB>>", "243": "<(&lt;operator&gt;.subtraction,mascaraMaxima - 1)<SUB>41</SUB>>", "245": "<(LITERAL,1,mascaraMaxima - 1)<SUB>41</SUB>>", "247": "<(IDENTIFIER,mascaraValor,mascaraValor &amp;= aux[j] &gt;&gt; direita)<SUB>42</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,aux[j])<SUB>42</SUB>>", "251": "<(IDENTIFIER,j,aux[j] &gt;&gt; direita)<SUB>42</SUB>>", "253": "<(CONTROL_STRUCTURE,if (mascaraCorrente != mascara),if (mascaraCorrente != mascara))<SUB>45</SUB>>", "255": "<(IDENTIFIER,mascaraCorrente,mascaraCorrente != mascara)<SUB>45</SUB>>", "257": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>45</SUB>>", "259": "<(IDENTIFIER,auxiliar,auxiliar = Math.max(auxiliar, Integer.bitCount(mascara) + depois[mascaraValor]))<SUB>46</SUB>>", "261": "<(IDENTIFIER,Math,Math.max(auxiliar, Integer.bitCount(mascara) + depois[mascaraValor]))<SUB>46</SUB>>", "263": "<(&lt;operator&gt;.addition,Integer.bitCount(mascara) + depois[mascaraValor])<SUB>46</SUB>>", "265": "<(IDENTIFIER,Integer,Integer.bitCount(mascara))<SUB>46</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,depois[mascaraValor])<SUB>46</SUB>>", "269": "<(IDENTIFIER,mascaraValor,Integer.bitCount(mascara) + depois[mascaraValor])<SUB>46</SUB>>", "271": "<(IDENTIFIER,proximoDouble,proximoDouble /= auxiliar)<SUB>48</SUB>>", "273": "<(println,println(proximoDouble * proximoDouble * (auxiliar * (auxiliar - 1)) / 2))<SUB>49</SUB>>", "275": "<(&lt;operator&gt;.division,proximoDouble * proximoDouble * (auxiliar * (auxiliar - 1)) / 2)<SUB>49</SUB>>", "277": "<(&lt;operator&gt;.multiplication,proximoDouble * proximoDouble)<SUB>49</SUB>>", "279": "<(IDENTIFIER,proximoDouble,proximoDouble * proximoDouble)<SUB>49</SUB>>", "281": "<(IDENTIFIER,auxiliar,auxiliar * (auxiliar - 1))<SUB>49</SUB>>", "283": "<(IDENTIFIER,auxiliar,auxiliar - 1)<SUB>49</SUB>>", "285": "<(LITERAL,2,proximoDouble * proximoDouble * (auxiliar * (auxiliar - 1)) / 2)<SUB>49</SUB>>", "287": "<(IDENTIFIER,saida,flush())<SUB>50</SUB>>", "289": "<(MODIFIER,STATIC)>"}}