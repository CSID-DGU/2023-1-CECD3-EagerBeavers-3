{"edges": [["21", "22"], ["21", "23"], ["21", "280"], ["21", "281"], ["21", "282"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "40"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "77"], ["23", "112"], ["23", "113"], ["23", "120"], ["23", "140"], ["23", "141"], ["23", "144"], ["23", "221"], ["23", "271"], ["23", "276"], ["23", "278"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["70", "76"], ["71", "72"], ["71", "73"], ["74", "75"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "90"], ["87", "96"], ["87", "102"], ["87", "107"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "95"], ["93", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "101"], ["99", "100"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "154"], ["144", "156"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "164"], ["157", "158"], ["157", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["174", "190"], ["174", "191"], ["174", "197"], ["175", "176"], ["175", "189"], ["176", "177"], ["176", "184"], ["177", "178"], ["177", "183"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["191", "192"], ["191", "193"], ["193", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "200"], ["198", "199"], ["200", "201"], ["200", "202"], ["200", "206"], ["202", "203"], ["202", "204"], ["204", "205"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "220"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "223"], ["221", "226"], ["221", "231"], ["221", "233"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["233", "241"], ["233", "242"], ["233", "247"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "249"], ["247", "252"], ["247", "255"], ["247", "257"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["255", "256"], ["257", "258"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["276", "277"], ["278", "279"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "42"], ["40", "46"], ["44", "51"], ["49", "55"], ["113", "122"], ["141", "146"], ["271", "276"], ["276", "278"], ["278", "282"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["42", "40"], ["46", "44"], ["51", "49"], ["55", "62"], ["58", "67"], ["58", "79"], ["63", "62"], ["79", "82"], ["82", "93"], ["82", "116"], ["85", "82"], ["115", "113"], ["122", "125"], ["125", "135"], ["125", "141"], ["128", "125"], ["146", "151"], ["149", "159"], ["149", "223"], ["154", "151"], ["223", "228"], ["226", "236"], ["226", "273"], ["231", "228"], ["273", "271"], ["30", "28"], ["37", "35"], ["60", "58"], ["66", "63"], ["90", "99"], ["96", "103"], ["102", "108"], ["107", "85"], ["116", "115"], ["131", "128"], ["151", "149"], ["228", "226"], ["242", "249"], ["62", "60"], ["67", "73"], ["92", "90"], ["98", "96"], ["103", "102"], ["108", "107"], ["132", "131"], ["158", "154"], ["158", "166"], ["166", "169"], ["169", "180"], ["169", "154"], ["172", "169"], ["235", "231"], ["235", "244"], ["244", "242"], ["249", "252"], ["252", "260"], ["252", "231"], ["255", "252"], ["71", "74"], ["74", "66"], ["93", "92"], ["99", "98"], ["133", "132"], ["159", "158"], ["191", "198"], ["236", "235"], ["73", "71"], ["135", "133"], ["176", "172"], ["176", "194"], ["193", "191"], ["198", "204"], ["198", "172"], ["259", "267"], ["259", "255"], ["264", "255"], ["177", "176"], ["177", "186"], ["184", "176"], ["194", "193"], ["202", "208"], ["206", "198"], ["260", "259"], ["266", "264"], ["178", "177"], ["186", "184"], ["204", "202"], ["207", "217"], ["212", "206"], ["267", "266"], ["180", "178"], ["208", "207"], ["213", "212"], ["215", "213"], ["217", "215"], ["21", "26"], ["22", "282"], ["24", "282"], ["27", "282"], ["27", "282"], ["31", "282"], ["34", "282"], ["34", "282"], ["40", "282"], ["46", "282"], ["44", "282"], ["44", "282"], ["49", "282"], ["49", "282"], ["49", "282"], ["58", "282"], ["58", "282"], ["82", "282"], ["82", "282"], ["113", "282"], ["113", "282"], ["113", "282"], ["122", "282"], ["125", "282"], ["141", "282"], ["223", "282"], ["226", "282"], ["228", "282"], ["226", "282"], ["226", "282"], ["273", "282"], ["271", "282"], ["271", "282"], ["276", "282"], ["278", "282"], ["278", "282"], ["236", "282"], ["235", "282"], ["235", "282"], ["242", "282"], ["244", "282"], ["242", "282"], ["242", "282"], ["249", "282"], ["252", "282"], ["252", "282"], ["259", "282"], ["259", "282"], ["259", "282"], ["264", "282"], ["264", "282"], ["255", "282"], ["231", "282"], ["159", "282"], ["158", "282"], ["158", "282"], ["166", "282"], ["169", "282"], ["169", "282"], ["178", "282"], ["177", "282"], ["176", "282"], ["186", "282"], ["184", "282"], ["176", "282"], ["176", "282"], ["193", "282"], ["191", "282"], ["198", "282"], ["198", "282"], ["202", "282"], ["206", "282"], ["215", "282"], ["206", "282"], ["206", "282"], ["172", "282"], ["154", "282"], ["131", "282"], ["131", "282"], ["128", "282"], ["90", "282"], ["99", "282"], ["98", "282"], ["96", "282"], ["96", "282"], ["102", "282"], ["102", "282"], ["102", "282"], ["107", "282"], ["107", "282"], ["107", "282"], ["85", "282"], ["66", "282"], ["71", "282"], ["74", "282"], ["74", "282"], ["66", "282"], ["63", "282"], ["21", "22"], ["21", "24"], ["21", "31"], ["42", "40"], ["46", "44"], ["51", "49"], ["115", "113"], ["115", "113"], ["21", "141"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["21", "79"], ["21", "122"], ["21", "146"], ["21", "223"], ["34", "271"], ["21", "271"], ["273", "271"], ["273", "271"], ["271", "276"], ["21", "276"], ["276", "278"], ["21", "278"], ["27", "42"], ["21", "42"], ["42", "46"], ["21", "46"], ["40", "51"], ["21", "51"], ["55", "58"], ["63", "58"], ["21", "58"], ["49", "58"], ["58", "63"], ["21", "63"], ["71", "66"], ["74", "66"], ["21", "66"], ["79", "82"], ["85", "82"], ["21", "82"], ["44", "82"], ["82", "85"], ["21", "85"], ["92", "90"], ["92", "90"], ["98", "96"], ["98", "96"], ["116", "115"], ["116", "115"], ["21", "115"], ["122", "125"], ["128", "125"], ["21", "125"], ["115", "125"], ["135", "128"], ["21", "128"], ["21", "131"], ["146", "149"], ["154", "149"], ["21", "149"], ["151", "149"], ["151", "149"], ["159", "154"], ["178", "154"], ["186", "154"], ["215", "154"], ["21", "154"], ["223", "226"], ["231", "226"], ["21", "226"], ["228", "226"], ["228", "226"], ["236", "231"], ["244", "231"], ["21", "231"], ["244", "242"], ["244", "242"], ["141", "273"], ["264", "273"], ["21", "273"], ["49", "102"], ["96", "102"], ["21", "102"], ["49", "107"], ["90", "107"], ["21", "107"], ["21", "116"], ["51", "116"], ["21", "151"], ["125", "151"], ["169", "151"], ["21", "166"], ["21", "228"], ["151", "228"], ["252", "228"], ["21", "249"], ["21", "71"], ["21", "76"], ["93", "92"], ["21", "92"], ["99", "98"], ["21", "98"], ["159", "158"], ["159", "158"], ["21", "158"], ["166", "169"], ["172", "169"], ["21", "169"], ["151", "169"], ["180", "172"], ["184", "172"], ["217", "172"], ["21", "172"], ["193", "191"], ["236", "235"], ["236", "235"], ["21", "235"], ["186", "244"], ["21", "244"], ["236", "244"], ["249", "252"], ["255", "252"], ["21", "252"], ["228", "252"], ["252", "255"], ["21", "255"], ["71", "74"], ["21", "74"], ["46", "93"], ["99", "93"], ["21", "93"], ["93", "99"], ["21", "99"], ["21", "159"], ["149", "159"], ["159", "236"], ["21", "236"], ["226", "236"], ["206", "264"], ["21", "135"], ["125", "135"], ["177", "176"], ["177", "176"], ["184", "176"], ["184", "176"], ["49", "193"], ["191", "198"], ["204", "198"], ["21", "198"], ["204", "202"], ["49", "259"], ["193", "259"], ["242", "259"], ["21", "259"], ["141", "264"], ["21", "264"], ["178", "177"], ["178", "177"], ["21", "177"], ["180", "184"], ["21", "184"], ["186", "184"], ["186", "184"], ["159", "178"], ["186", "178"], ["215", "178"], ["21", "178"], ["180", "178"], ["180", "178"], ["21", "186"], ["178", "186"], ["198", "204"], ["21", "204"], ["21", "180"], ["169", "180"], ["178", "215"], ["186", "215"], ["21", "215"], ["217", "215"], ["217", "215"], ["21", "217"], ["180", "217"], ["184", "217"], ["58", "60"], ["58", "73"], ["58", "67"], ["58", "74"], ["58", "58"], ["58", "66"], ["58", "71"], ["58", "63"], ["58", "62"], ["82", "107"], ["82", "96"], ["82", "98"], ["82", "102"], ["82", "85"], ["82", "103"], ["82", "92"], ["82", "93"], ["82", "90"], ["82", "108"], ["82", "99"], ["82", "82"], ["125", "128"], ["125", "131"], ["125", "132"], ["125", "135"], ["125", "125"], ["125", "133"], ["149", "154"], ["149", "149"], ["149", "151"], ["149", "158"], ["149", "159"], ["226", "226"], ["226", "228"], ["226", "231"], ["226", "235"], ["226", "236"], ["158", "169"], ["158", "166"], ["169", "169"], ["169", "178"], ["169", "180"], ["169", "176"], ["169", "177"], ["169", "172"], ["235", "244"], ["235", "242"], ["235", "249"], ["235", "252"], ["252", "255"], ["252", "259"], ["252", "252"], ["252", "260"], ["176", "198"], ["176", "191"], ["176", "194"], ["176", "193"], ["198", "215"], ["198", "198"], ["198", "213"], ["198", "204"], ["198", "206"], ["198", "208"], ["198", "207"], ["198", "212"], ["198", "202"], ["198", "217"], ["259", "264"], ["259", "267"], ["259", "266"], ["177", "184"], ["177", "186"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY bf = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,bf,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(LOCAL,int m: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,bf,nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,bf,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY adjList = new ArrayList[n])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.alloc,new ArrayList[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; adjList.length); i++),for (int i = 0; Some(i &lt; adjList.length); i++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i &lt; adjList.length)<SUB>7</SUB>>", "61": "<(IDENTIFIER,adjList,i &lt; adjList.length)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,adjList[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,adjList[i] = new ArrayList&lt;Integer&gt;())<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>9</SUB>>", "75": "<(IDENTIFIER,$obj2,new ArrayList&lt;Integer&gt;())>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,i &lt; m)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "89": "<(LOCAL,int v: int)<SUB>13</SUB>>", "91": "<(IDENTIFIER,u,int u = bf.nextInt() - 1)<SUB>13</SUB>>", "93": "<(nextInt,nextInt())<SUB>13</SUB>>", "95": "<(LITERAL,1,bf.nextInt() - 1)<SUB>13</SUB>>", "97": "<(IDENTIFIER,v,int v = bf.nextInt() - 1)<SUB>13</SUB>>", "99": "<(nextInt,nextInt())<SUB>13</SUB>>", "101": "<(LITERAL,1,bf.nextInt() - 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,adjList[u])<SUB>14</SUB>>", "105": "<(IDENTIFIER,u,add(v))<SUB>14</SUB>>", "107": "<(add,add(u))<SUB>15</SUB>>", "109": "<(IDENTIFIER,adjList,add(u))<SUB>15</SUB>>", "111": "<(IDENTIFIER,u,add(u))<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.assignment,long[][] memo = new long[(1 &lt;&lt; n)][n])<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.alloc,new long[(1 &lt;&lt; n)][n])>", "117": "<(LITERAL,1,1 &lt;&lt; n)<SUB>17</SUB>>", "119": "<(IDENTIFIER,n,new long[(1 &lt;&lt; n)][n])<SUB>17</SUB>>", "121": "<(LOCAL,int i: int)<SUB>18</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "127": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.assignment,memo[1 &lt;&lt; i][i] = 1)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,memo[1 &lt;&lt; i])<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>20</SUB>>", "137": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>20</SUB>>", "139": "<(LITERAL,1,memo[1 &lt;&lt; i][i] = 1)<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>22</SUB>>", "143": "<(LITERAL,0,long ans = 0)<SUB>22</SUB>>", "145": "<(LOCAL,int i: int)<SUB>23</SUB>>", "147": "<(IDENTIFIER,i,int i = 1)<SUB>23</SUB>>", "149": "<(&lt;operator&gt;.lessThan,i &lt; 1 &lt;&lt; n)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>23</SUB>>", "153": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>23</SUB>>", "155": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "157": "<(CONTROL_STRUCTURE,if (Integer.bitCount(i) == 1),if (Integer.bitCount(i) == 1))<SUB>25</SUB>>", "159": "<(bitCount,Integer.bitCount(i))<SUB>25</SUB>>", "161": "<(IDENTIFIER,i,Integer.bitCount(i))<SUB>25</SUB>>", "163": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>25</SUB>>", "165": "<(LOCAL,int j: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>26</SUB>>", "171": "<(IDENTIFIER,n,j &lt; n)<SUB>26</SUB>>", "173": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; j)) == 0 || j == first(i)),if ((i &amp; (1 &lt;&lt; j)) == 0 || j == first(i)))<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; j)) == 0)<SUB>28</SUB>>", "179": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; j))<SUB>28</SUB>>", "181": "<(LITERAL,1,1 &lt;&lt; j)<SUB>28</SUB>>", "183": "<(LITERAL,0,(i &amp; (1 &lt;&lt; j)) == 0)<SUB>28</SUB>>", "185": "<(IDENTIFIER,j,j == first(i))<SUB>28</SUB>>", "187": "<(IDENTIFIER,this,first(i))<SUB>28</SUB>>", "189": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.assignment,)<SUB>29</SUB>>", "193": "<(iterator,&lt;empty&gt;)<SUB>29</SUB>>", "195": "<(IDENTIFIER,adjList,&lt;empty&gt;)<SUB>29</SUB>>", "197": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>29</SUB>>", "199": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "201": "<(LOCAL,v: int)<SUB>29</SUB>>", "203": "<(IDENTIFIER,v,&lt;empty&gt;)>", "205": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "207": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>30</SUB>>", "209": "<(IDENTIFIER,memo,memo[i][j] += memo[i ^ (1 &lt;&lt; j)][v])<SUB>30</SUB>>", "211": "<(IDENTIFIER,j,memo[i][j] += memo[i ^ (1 &lt;&lt; j)][v])<SUB>30</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,memo[i ^ (1 &lt;&lt; j)])<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.xor,i ^ (1 &lt;&lt; j))<SUB>30</SUB>>", "217": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>30</SUB>>", "219": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>30</SUB>>", "221": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; 1 &lt;&lt; n); i++),for (int i = 1; Some(i &lt; 1 &lt;&lt; n); i++))<SUB>33</SUB>>", "223": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>33</SUB>>", "225": "<(LITERAL,1,int i = 1)<SUB>33</SUB>>", "227": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; n)<SUB>33</SUB>>", "229": "<(LITERAL,1,1 &lt;&lt; n)<SUB>33</SUB>>", "231": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "235": "<(&lt;operator&gt;.lessThan,Integer.bitCount(i) &lt; 3)<SUB>35</SUB>>", "237": "<(IDENTIFIER,Integer,Integer.bitCount(i))<SUB>35</SUB>>", "239": "<(LITERAL,3,Integer.bitCount(i) &lt; 3)<SUB>35</SUB>>", "241": "<(LOCAL,int t: int)<SUB>36</SUB>>", "243": "<(IDENTIFIER,t,int t = first(i))<SUB>36</SUB>>", "245": "<(IDENTIFIER,this,first(i))<SUB>36</SUB>>", "247": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>37</SUB>>", "249": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>37</SUB>>", "251": "<(LITERAL,0,int j = 0)<SUB>37</SUB>>", "253": "<(IDENTIFIER,j,j &lt; n)<SUB>37</SUB>>", "255": "<(&lt;operator&gt;.postIncrement,j++)<SUB>37</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "259": "<(contains,contains(t))<SUB>39</SUB>>", "261": "<(IDENTIFIER,adjList,contains(t))<SUB>39</SUB>>", "263": "<(IDENTIFIER,t,contains(t))<SUB>39</SUB>>", "265": "<(IDENTIFIER,ans,ans += memo[i][j])<SUB>40</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,memo[i])<SUB>40</SUB>>", "269": "<(IDENTIFIER,i,ans += memo[i][j])<SUB>40</SUB>>", "271": "<(println,println(ans / 2))<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.division,ans / 2)<SUB>43</SUB>>", "275": "<(LITERAL,2,ans / 2)<SUB>43</SUB>>", "277": "<(IDENTIFIER,out,flush())<SUB>44</SUB>>", "279": "<(IDENTIFIER,out,close())<SUB>45</SUB>>", "281": "<(MODIFIER,STATIC)>"}}