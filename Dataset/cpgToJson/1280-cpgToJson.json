{"edges": [["19", "20"], ["19", "21"], ["19", "112"], ["19", "113"], ["19", "114"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "43"], ["21", "54"], ["21", "57"], ["21", "58"], ["21", "72"], ["21", "73"], ["21", "85"], ["21", "86"], ["21", "97"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "53"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "68"], ["60", "69"], ["61", "62"], ["61", "65"], ["61", "67"], ["62", "63"], ["62", "64"], ["65", "66"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "83"], ["75", "84"], ["76", "77"], ["76", "80"], ["76", "82"], ["77", "78"], ["77", "79"], ["80", "81"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["40", "44"], ["54", "64"], ["58", "79"], ["73", "91"], ["86", "98"], ["105", "114"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "51"], ["44", "54"], ["60", "58"], ["75", "73"], ["88", "86"], ["98", "102"], ["98", "108"], ["106", "109"], ["109", "105"], ["28", "26"], ["48", "53"], ["53", "114"], ["69", "60"], ["89", "88"], ["102", "108"], ["108", "106"], ["49", "48"], ["62", "65"], ["65", "69"], ["77", "80"], ["80", "75"], ["90", "89"], ["51", "49"], ["64", "62"], ["79", "77"], ["91", "90"], ["19", "24"], ["53", "114"], ["20", "114"], ["22", "114"], ["25", "114"], ["25", "114"], ["30", "114"], ["35", "114"], ["37", "114"], ["35", "114"], ["35", "114"], ["40", "114"], ["40", "114"], ["44", "114"], ["44", "114"], ["48", "114"], ["48", "114"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "40"], ["40", "54"], ["19", "54"], ["60", "58"], ["60", "58"], ["60", "58"], ["60", "58"], ["75", "73"], ["75", "73"], ["75", "73"], ["75", "73"], ["89", "86"], ["89", "86"], ["19", "86"], ["22", "25"], ["19", "25"], ["44", "54"], ["109", "105"], ["109", "105"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "44"], ["19", "44"], ["19", "53"], ["62", "60"], ["65", "60"], ["19", "60"], ["35", "60"], ["77", "75"], ["80", "75"], ["19", "75"], ["35", "75"], ["89", "88"], ["89", "88"], ["19", "88"], ["86", "98"], ["19", "98"], ["90", "102"], ["19", "102"], ["98", "109"], ["102", "109"], ["19", "109"], ["90", "109"], ["19", "48"], ["19", "62"], ["19", "67"], ["35", "69"], ["19", "69"], ["19", "77"], ["19", "82"], ["90", "89"], ["90", "89"], ["73", "89"], ["19", "89"], ["98", "102"], ["62", "65"], ["19", "65"], ["77", "80"], ["19", "80"], ["91", "90"], ["91", "90"], ["19", "90"], ["40", "90"], ["58", "91"], ["19", "91"], ["54", "91"], ["44", "48"], ["44", "49"], ["44", "60"], ["44", "73"], ["44", "77"], ["44", "64"], ["44", "51"], ["44", "89"], ["44", "98"], ["44", "75"], ["44", "69"], ["44", "106"], ["44", "65"], ["44", "91"], ["44", "90"], ["44", "54"], ["44", "79"], ["44", "80"], ["44", "58"], ["44", "105"], ["44", "53"], ["44", "88"], ["44", "108"], ["44", "109"], ["44", "62"], ["44", "86"], ["98", "102"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long x: long)<SUB>4</SUB>>", "31": "<(IDENTIFIER,x,long x = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,scan,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(LOCAL,long MOD: long)<SUB>6</SUB>>", "41": "<(IDENTIFIER,MOD,long MOD = 1000000007)<SUB>6</SUB>>", "43": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>7</SUB>>", "45": "<(IDENTIFIER,x,x == 0)<SUB>7</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "53": "<(RETURN,return;,return;)<SUB>7</SUB>>", "55": "<(IDENTIFIER,x,x %= MOD)<SUB>8</SUB>>", "57": "<(LOCAL,long a: long)<SUB>9</SUB>>", "59": "<(IDENTIFIER,a,long a = pow(2L, k + 1))<SUB>9</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "63": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "65": "<(&lt;init&gt;,new Num())<SUB>9</SUB>>", "67": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "69": "<(&lt;operator&gt;.addition,k + 1)<SUB>9</SUB>>", "71": "<(LITERAL,1,k + 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,long b = pow(2L, k))<SUB>10</SUB>>", "75": "<(pow,pow(2L, k))<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "79": "<(&lt;operator&gt;.alloc,new Num())<SUB>10</SUB>>", "81": "<(IDENTIFIER,$obj2,new Num())>", "83": "<(LITERAL,2L,pow(2L, k))<SUB>10</SUB>>", "85": "<(LOCAL,long res: long)<SUB>11</SUB>>", "87": "<(IDENTIFIER,res,long res = (a * x) % MOD - b + 1)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.subtraction,(a * x) % MOD - b)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.multiplication,a * x)<SUB>11</SUB>>", "93": "<(IDENTIFIER,x,a * x)<SUB>11</SUB>>", "95": "<(IDENTIFIER,b,(a * x) % MOD - b)<SUB>11</SUB>>", "97": "<(CONTROL_STRUCTURE,if (res &lt; 0),if (res &lt; 0))<SUB>12</SUB>>", "99": "<(IDENTIFIER,res,res &lt; 0)<SUB>12</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "103": "<(IDENTIFIER,res,res += MOD)<SUB>12</SUB>>", "105": "<(println,System.out.println(res % MOD))<SUB>13</SUB>>", "107": "<(IDENTIFIER,System,System.out.println(res % MOD))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.modulo,res % MOD)<SUB>13</SUB>>", "111": "<(IDENTIFIER,MOD,res % MOD)<SUB>13</SUB>>", "113": "<(MODIFIER,STATIC)>"}}