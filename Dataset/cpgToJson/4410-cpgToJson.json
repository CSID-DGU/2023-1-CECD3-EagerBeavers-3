{"edges": [["19", "20"], ["19", "21"], ["19", "488"], ["19", "489"], ["19", "490"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "42"], ["21", "72"], ["21", "73"], ["21", "78"], ["21", "79"], ["21", "84"], ["21", "156"], ["21", "224"], ["21", "225"], ["21", "230"], ["21", "231"], ["21", "237"], ["21", "269"], ["21", "427"], ["21", "429"], ["21", "430"], ["21", "433"], ["21", "483"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "97"], ["95", "102"], ["95", "105"], ["95", "107"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "109"], ["107", "114"], ["107", "143"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["127", "130"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "164"], ["156", "166"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "184"], ["177", "217"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "194"], ["184", "196"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["199", "202"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["233", "236"], ["237", "238"], ["237", "239"], ["237", "242"], ["237", "245"], ["237", "247"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "256"], ["248", "258"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["258", "259"], ["259", "260"], ["259", "261"], ["259", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["269", "274"], ["269", "277"], ["269", "279"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["277", "278"], ["279", "280"], ["280", "281"], ["280", "282"], ["280", "285"], ["280", "288"], ["280", "290"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "287"], ["288", "289"], ["290", "291"], ["290", "300"], ["291", "292"], ["291", "299"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "297"], ["300", "301"], ["300", "302"], ["300", "305"], ["300", "308"], ["300", "310"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["308", "309"], ["310", "311"], ["310", "320"], ["310", "333"], ["311", "312"], ["311", "319"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["320", "321"], ["320", "332"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "330"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "341"], ["333", "343"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["341", "342"], ["343", "344"], ["343", "353"], ["343", "354"], ["343", "361"], ["344", "345"], ["344", "352"], ["345", "346"], ["345", "351"], ["346", "347"], ["346", "348"], ["348", "349"], ["348", "350"], ["354", "355"], ["354", "356"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "373"], ["361", "404"], ["362", "363"], ["362", "370"], ["363", "364"], ["363", "369"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["370", "371"], ["370", "372"], ["373", "374"], ["373", "381"], ["374", "375"], ["374", "380"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["381", "382"], ["381", "383"], ["381", "390"], ["383", "384"], ["383", "389"], ["384", "385"], ["384", "388"], ["385", "386"], ["385", "387"], ["390", "391"], ["390", "392"], ["390", "399"], ["392", "393"], ["392", "398"], ["393", "394"], ["393", "397"], ["394", "395"], ["394", "396"], ["399", "400"], ["399", "403"], ["400", "401"], ["400", "402"], ["404", "405"], ["405", "406"], ["405", "413"], ["406", "407"], ["406", "412"], ["407", "408"], ["407", "411"], ["408", "409"], ["408", "410"], ["413", "414"], ["413", "415"], ["413", "422"], ["415", "416"], ["415", "421"], ["416", "417"], ["416", "420"], ["417", "418"], ["417", "419"], ["422", "423"], ["422", "426"], ["423", "424"], ["423", "425"], ["427", "428"], ["430", "431"], ["430", "432"], ["433", "434"], ["433", "435"], ["433", "438"], ["433", "441"], ["433", "443"], ["435", "436"], ["435", "437"], ["438", "439"], ["438", "440"], ["441", "442"], ["443", "444"], ["444", "445"], ["444", "446"], ["444", "449"], ["444", "452"], ["444", "454"], ["446", "447"], ["446", "448"], ["449", "450"], ["449", "451"], ["452", "453"], ["454", "455"], ["454", "464"], ["455", "456"], ["455", "463"], ["456", "457"], ["456", "460"], ["457", "458"], ["457", "459"], ["460", "461"], ["460", "462"], ["464", "465"], ["464", "466"], ["466", "467"], ["466", "468"], ["466", "469"], ["469", "470"], ["469", "471"], ["469", "478"], ["471", "472"], ["471", "477"], ["472", "473"], ["472", "476"], ["473", "474"], ["473", "475"], ["478", "479"], ["478", "482"], ["479", "480"], ["479", "481"], ["483", "484"], ["483", "487"], ["484", "485"], ["484", "486"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "44"], ["73", "81"], ["79", "86"], ["225", "233"], ["231", "239"], ["427", "430"], ["430", "435"], ["483", "490"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "47"], ["47", "55"], ["47", "75"], ["50", "47"], ["75", "73"], ["81", "79"], ["86", "89"], ["89", "99"], ["89", "158"], ["92", "89"], ["158", "161"], ["161", "169"], ["161", "227"], ["164", "161"], ["227", "225"], ["233", "231"], ["239", "242"], ["242", "250"], ["242", "271"], ["245", "242"], ["271", "274"], ["274", "282"], ["274", "427"], ["277", "274"], ["435", "438"], ["438", "446"], ["438", "486"], ["441", "438"], ["484", "483"], ["486", "484"], ["55", "58"], ["58", "66"], ["58", "50"], ["61", "58"], ["97", "102"], ["102", "113"], ["102", "92"], ["105", "102"], ["169", "172"], ["172", "183"], ["172", "164"], ["175", "172"], ["250", "253"], ["253", "262"], ["253", "245"], ["256", "253"], ["282", "285"], ["285", "295"], ["285", "277"], ["288", "285"], ["446", "449"], ["449", "457"], ["449", "441"], ["452", "449"], ["64", "61"], ["99", "97"], ["109", "116"], ["143", "105"], ["179", "186"], ["217", "175"], ["259", "256"], ["464", "452"], ["65", "70"], ["70", "64"], ["111", "109"], ["116", "119"], ["119", "134"], ["119", "145"], ["122", "119"], ["144", "151"], ["149", "143"], ["181", "179"], ["186", "190"], ["189", "206"], ["189", "219"], ["194", "190"], ["218", "217"], ["261", "268"], ["266", "259"], ["292", "288"], ["292", "302"], ["302", "305"], ["305", "315"], ["305", "288"], ["308", "305"], ["456", "452"], ["456", "473"], ["466", "464"], ["66", "65"], ["113", "111"], ["125", "122"], ["145", "144"], ["150", "149"], ["183", "181"], ["190", "189"], ["197", "194"], ["219", "218"], ["262", "261"], ["268", "266"], ["293", "292"], ["457", "456"], ["457", "460"], ["460", "456"], ["469", "466"], ["127", "125"], ["151", "150"], ["199", "197"], ["295", "293"], ["312", "308"], ["312", "322"], ["321", "308"], ["321", "335"], ["335", "338"], ["338", "348"], ["338", "308"], ["341", "338"], ["471", "479"], ["478", "469"], ["130", "127"], ["202", "199"], ["313", "312"], ["322", "321"], ["322", "328"], ["325", "321"], ["354", "365"], ["472", "471"], ["479", "478"], ["132", "130"], ["204", "202"], ["315", "313"], ["326", "325"], ["345", "341"], ["345", "358"], ["356", "354"], ["362", "376"], ["362", "408"], ["373", "341"], ["473", "472"], ["133", "139"], ["138", "132"], ["205", "211"], ["210", "204"], ["328", "326"], ["346", "345"], ["358", "356"], ["363", "372"], ["370", "362"], ["374", "385"], ["381", "373"], ["405", "341"], ["134", "133"], ["139", "138"], ["206", "205"], ["211", "214"], ["214", "210"], ["348", "346"], ["364", "363"], ["372", "370"], ["375", "374"], ["383", "394"], ["390", "381"], ["406", "417"], ["413", "405"], ["365", "364"], ["376", "375"], ["384", "383"], ["392", "400"], ["399", "390"], ["407", "406"], ["415", "423"], ["422", "413"], ["385", "384"], ["393", "392"], ["400", "399"], ["408", "407"], ["416", "415"], ["423", "422"], ["394", "393"], ["417", "416"], ["19", "24"], ["20", "490"], ["22", "490"], ["25", "490"], ["27", "490"], ["34", "490"], ["32", "490"], ["32", "490"], ["37", "490"], ["39", "490"], ["37", "490"], ["37", "490"], ["73", "490"], ["73", "490"], ["79", "490"], ["79", "490"], ["79", "490"], ["225", "490"], ["225", "490"], ["231", "490"], ["231", "490"], ["231", "490"], ["242", "490"], ["271", "490"], ["274", "490"], ["274", "490"], ["427", "490"], ["427", "490"], ["430", "490"], ["435", "490"], ["438", "490"], ["438", "490"], ["438", "490"], ["483", "490"], ["483", "490"], ["483", "490"], ["446", "490"], ["449", "490"], ["449", "490"], ["441", "490"], ["456", "490"], ["456", "490"], ["456", "490"], ["466", "490"], ["469", "490"], ["469", "490"], ["466", "490"], ["464", "490"], ["464", "490"], ["452", "490"], ["282", "490"], ["285", "490"], ["285", "490"], ["277", "490"], ["293", "490"], ["292", "490"], ["292", "490"], ["302", "490"], ["305", "490"], ["305", "490"], ["313", "490"], ["312", "490"], ["312", "490"], ["321", "490"], ["326", "490"], ["325", "490"], ["321", "490"], ["321", "490"], ["346", "490"], ["345", "490"], ["345", "490"], ["354", "490"], ["356", "490"], ["354", "490"], ["354", "490"], ["362", "490"], ["362", "490"], ["405", "490"], ["413", "490"], ["413", "490"], ["413", "490"], ["405", "490"], ["405", "490"], ["373", "490"], ["381", "490"], ["390", "490"], ["390", "490"], ["381", "490"], ["373", "490"], ["373", "490"], ["341", "490"], ["308", "490"], ["288", "490"], ["250", "490"], ["253", "490"], ["253", "490"], ["245", "490"], ["259", "490"], ["259", "490"], ["259", "490"], ["256", "490"], ["169", "490"], ["172", "490"], ["172", "490"], ["164", "490"], ["179", "490"], ["179", "490"], ["186", "490"], ["190", "490"], ["189", "490"], ["189", "490"], ["189", "490"], ["217", "490"], ["217", "490"], ["217", "490"], ["175", "490"], ["199", "490"], ["204", "490"], ["204", "490"], ["202", "490"], ["199", "490"], ["197", "490"], ["197", "490"], ["194", "490"], ["97", "490"], ["97", "490"], ["102", "490"], ["102", "490"], ["92", "490"], ["109", "490"], ["109", "490"], ["116", "490"], ["119", "490"], ["119", "490"], ["119", "490"], ["143", "490"], ["149", "490"], ["149", "490"], ["143", "490"], ["143", "490"], ["105", "490"], ["127", "490"], ["132", "490"], ["132", "490"], ["130", "490"], ["127", "490"], ["125", "490"], ["125", "490"], ["122", "490"], ["55", "490"], ["58", "490"], ["58", "490"], ["58", "490"], ["50", "490"], ["64", "490"], ["70", "490"], ["64", "490"], ["64", "490"], ["61", "490"], ["259", "490"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["39", "37"], ["75", "73"], ["81", "79"], ["227", "225"], ["227", "225"], ["233", "231"], ["233", "231"], ["19", "430"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "86"], ["19", "158"], ["19", "239"], ["19", "271"], ["274", "427"], ["19", "427"], ["19", "435"], ["430", "483"], ["464", "483"], ["19", "483"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["32", "39"], ["44", "47"], ["50", "47"], ["19", "47"], ["39", "47"], ["47", "50"], ["19", "50"], ["47", "75"], ["19", "75"], ["75", "81"], ["19", "81"], ["86", "89"], ["92", "89"], ["19", "89"], ["81", "89"], ["102", "89"], ["19", "92"], ["89", "92"], ["158", "161"], ["164", "161"], ["19", "161"], ["89", "161"], ["172", "161"], ["161", "164"], ["19", "164"], ["19", "227"], ["161", "227"], ["225", "233"], ["19", "233"], ["227", "233"], ["239", "242"], ["245", "242"], ["19", "242"], ["233", "242"], ["242", "245"], ["19", "245"], ["271", "274"], ["277", "274"], ["19", "274"], ["242", "274"], ["274", "277"], ["293", "277"], ["313", "277"], ["326", "277"], ["346", "277"], ["356", "277"], ["19", "277"], ["435", "438"], ["441", "438"], ["19", "438"], ["233", "438"], ["449", "438"], ["285", "438"], ["253", "438"], ["438", "441"], ["457", "441"], ["19", "441"], ["19", "55"], ["89", "97"], ["19", "97"], ["19", "169"], ["19", "250"], ["19", "282"], ["19", "446"], ["55", "58"], ["61", "58"], ["19", "58"], ["39", "58"], ["58", "61"], ["19", "61"], ["70", "64"], ["97", "102"], ["105", "102"], ["19", "102"], ["89", "102"], ["102", "105"], ["19", "105"], ["149", "143"], ["109", "143"], ["125", "143"], ["19", "143"], ["169", "172"], ["175", "172"], ["19", "172"], ["161", "172"], ["172", "175"], ["19", "175"], ["179", "217"], ["197", "217"], ["19", "217"], ["250", "253"], ["256", "253"], ["19", "253"], ["233", "253"], ["253", "256"], ["19", "256"], ["282", "285"], ["288", "285"], ["19", "285"], ["233", "285"], ["305", "285"], ["253", "285"], ["295", "288"], ["322", "288"], ["19", "288"], ["446", "449"], ["452", "449"], ["19", "449"], ["438", "449"], ["460", "449"], ["457", "452"], ["19", "452"], ["466", "464"], ["466", "464"], ["466", "464"], ["89", "99"], ["19", "99"], ["19", "116"], ["19", "186"], ["19", "259"], ["19", "302"], ["34", "70"], ["19", "70"], ["116", "119"], ["122", "119"], ["19", "119"], ["39", "119"], ["58", "119"], ["119", "122"], ["19", "122"], ["127", "125"], ["127", "125"], ["127", "125"], ["109", "149"], ["125", "149"], ["19", "149"], ["186", "189"], ["194", "189"], ["19", "189"], ["39", "189"], ["119", "189"], ["58", "189"], ["19", "194"], ["186", "194"], ["199", "197"], ["199", "197"], ["199", "197"], ["293", "292"], ["293", "292"], ["19", "292"], ["302", "305"], ["308", "305"], ["19", "305"], ["285", "305"], ["338", "305"], ["315", "308"], ["322", "308"], ["328", "308"], ["19", "308"], ["457", "456"], ["457", "456"], ["460", "456"], ["460", "456"], ["469", "466"], ["19", "466"], ["430", "466"], ["464", "466"], ["469", "466"], ["469", "466"], ["186", "190"], ["194", "190"], ["19", "190"], ["274", "293"], ["313", "293"], ["326", "293"], ["346", "293"], ["356", "293"], ["19", "293"], ["295", "293"], ["295", "293"], ["19", "335"], ["438", "457"], ["19", "457"], ["449", "457"], ["449", "460"], ["19", "460"], ["466", "469"], ["413", "469"], ["381", "469"], ["199", "469"], ["127", "469"], ["19", "469"], ["217", "469"], ["130", "127"], ["19", "127"], ["109", "127"], ["125", "127"], ["130", "127"], ["202", "199"], ["19", "199"], ["179", "199"], ["197", "199"], ["202", "199"], ["19", "295"], ["285", "295"], ["313", "312"], ["313", "312"], ["19", "312"], ["322", "321"], ["322", "321"], ["325", "321"], ["325", "321"], ["335", "338"], ["341", "338"], ["19", "338"], ["305", "338"], ["348", "341"], ["358", "341"], ["19", "341"], ["356", "354"], ["356", "354"], ["127", "130"], ["19", "130"], ["132", "130"], ["132", "130"], ["199", "202"], ["127", "202"], ["19", "202"], ["204", "202"], ["204", "202"], ["293", "313"], ["326", "313"], ["346", "313"], ["356", "313"], ["19", "313"], ["315", "313"], ["315", "313"], ["295", "322"], ["19", "322"], ["315", "322"], ["326", "325"], ["326", "325"], ["19", "325"], ["381", "373"], ["381", "373"], ["381", "373"], ["132", "204"], ["19", "315"], ["305", "315"], ["313", "326"], ["19", "326"], ["328", "326"], ["328", "326"], ["346", "345"], ["346", "345"], ["19", "345"], ["346", "356"], ["19", "356"], ["358", "356"], ["358", "356"], ["405", "362"], ["373", "362"], ["259", "362"], ["413", "405"], ["413", "405"], ["413", "405"], ["19", "328"], ["322", "328"], ["313", "346"], ["326", "346"], ["356", "346"], ["19", "346"], ["348", "346"], ["348", "346"], ["19", "358"], ["348", "358"], ["390", "381"], ["19", "381"], ["362", "381"], ["390", "381"], ["390", "381"], ["19", "214"], ["186", "214"], ["194", "214"], ["19", "348"], ["338", "348"], ["413", "390"], ["381", "390"], ["199", "390"], ["127", "390"], ["19", "390"], ["413", "390"], ["413", "390"], ["143", "390"], ["381", "413"], ["199", "413"], ["127", "413"], ["19", "413"], ["390", "413"], ["390", "413"], ["143", "413"], ["47", "50"], ["47", "55"], ["47", "58"], ["47", "47"], ["89", "102"], ["89", "92"], ["89", "97"], ["89", "89"], ["89", "99"], ["161", "161"], ["161", "172"], ["161", "169"], ["161", "164"], ["242", "242"], ["242", "253"], ["242", "245"], ["242", "250"], ["274", "274"], ["274", "282"], ["274", "285"], ["274", "277"], ["438", "446"], ["438", "441"], ["438", "449"], ["438", "438"], ["58", "61"], ["58", "70"], ["58", "66"], ["58", "65"], ["58", "64"], ["58", "58"], ["102", "102"], ["102", "150"], ["102", "116"], ["102", "109"], ["102", "113"], ["102", "145"], ["102", "149"], ["102", "151"], ["102", "119"], ["102", "144"], ["102", "111"], ["102", "143"], ["102", "105"], ["172", "181"], ["172", "190"], ["172", "186"], ["172", "217"], ["172", "172"], ["172", "179"], ["172", "189"], ["172", "183"], ["172", "175"], ["172", "218"], ["172", "219"], ["253", "256"], ["253", "262"], ["253", "268"], ["253", "253"], ["253", "261"], ["253", "259"], ["253", "266"], ["285", "292"], ["285", "288"], ["285", "285"], ["285", "293"], ["285", "295"], ["449", "452"], ["449", "456"], ["449", "457"], ["449", "449"], ["119", "134"], ["119", "138"], ["119", "127"], ["119", "122"], ["119", "133"], ["119", "132"], ["119", "119"], ["119", "130"], ["119", "139"], ["119", "125"], ["189", "214"], ["189", "204"], ["189", "206"], ["189", "190"], ["189", "194"], ["189", "202"], ["189", "199"], ["189", "197"], ["189", "189"], ["189", "205"], ["189", "210"], ["189", "211"], ["292", "302"], ["292", "305"], ["305", "308"], ["305", "315"], ["305", "305"], ["305", "313"], ["305", "312"], ["456", "469"], ["456", "464"], ["456", "471"], ["456", "479"], ["456", "466"], ["456", "478"], ["456", "472"], ["456", "473"], ["457", "460"], ["312", "322"], ["312", "321"], ["321", "338"], ["321", "335"], ["338", "338"], ["338", "346"], ["338", "348"], ["338", "341"], ["338", "345"], ["322", "326"], ["322", "328"], ["322", "325"], ["345", "358"], ["345", "356"], ["345", "370"], ["345", "362"], ["345", "364"], ["345", "372"], ["345", "365"], ["345", "354"], ["345", "363"], ["362", "376"], ["362", "384"], ["362", "383"], ["362", "392"], ["362", "394"], ["362", "408"], ["362", "416"], ["362", "390"], ["362", "374"], ["362", "405"], ["362", "415"], ["362", "413"], ["362", "385"], ["362", "373"], ["362", "417"], ["362", "375"], ["362", "400"], ["362", "393"], ["362", "381"], ["362", "423"], ["362", "422"], ["362", "399"], ["362", "406"], ["362", "407"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int M: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,M,int M = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,scanner,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[][] arr = new int[N][M])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[N][M])>", "41": "<(IDENTIFIER,M,new int[N][M])<SUB>5</SUB>>", "43": "<(LOCAL,int i: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>6</SUB>>", "49": "<(IDENTIFIER,N,i &lt; N)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,j,j &lt; M)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,arr[i][j])<SUB>8</SUB>>", "67": "<(IDENTIFIER,arr,arr[i][j] = nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,j,arr[i][j] = nextInt())<SUB>8</SUB>>", "71": "<(IDENTIFIER,scanner,nextInt())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[][] distRow = new int[N][N])<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[N][N])>", "77": "<(IDENTIFIER,N,new int[N][N])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.assignment,int[][] distTop = new int[N][N])<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.alloc,new int[N][N])>", "83": "<(IDENTIFIER,N,new int[N][N])<SUB>12</SUB>>", "85": "<(LOCAL,int i: int)<SUB>18</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>18</SUB>>", "91": "<(IDENTIFIER,N,i &lt; N)<SUB>18</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; N); j++),for (int j = i + 1; Some(j &lt; N); j++))<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.addition,i + 1)<SUB>19</SUB>>", "101": "<(LITERAL,1,i + 1)<SUB>19</SUB>>", "103": "<(IDENTIFIER,j,j &lt; N)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,j++)<SUB>19</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.assignment,int curMin = Integer.MAX_VALUE)<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>20</SUB>>", "113": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>20</SUB>>", "115": "<(LOCAL,int k: int)<SUB>21</SUB>>", "117": "<(IDENTIFIER,k,int k = 0)<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.lessThan,k &lt; M)<SUB>21</SUB>>", "121": "<(IDENTIFIER,M,k &lt; M)<SUB>21</SUB>>", "123": "<(IDENTIFIER,k,k++)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.assignment,curMin = Math.min(curMin, Math.abs(arr[i][k] - arr[j][k])))<SUB>22</SUB>>", "127": "<(min,Math.min(curMin, Math.abs(arr[i][k] - arr[j][k])))<SUB>22</SUB>>", "129": "<(IDENTIFIER,curMin,Math.min(curMin, Math.abs(arr[i][k] - arr[j][k])))<SUB>22</SUB>>", "131": "<(IDENTIFIER,Math,Math.abs(arr[i][k] - arr[j][k]))<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[i][k])<SUB>22</SUB>>", "135": "<(IDENTIFIER,arr,arr[i][k] - arr[j][k])<SUB>22</SUB>>", "137": "<(IDENTIFIER,k,arr[i][k] - arr[j][k])<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>22</SUB>>", "141": "<(IDENTIFIER,j,arr[i][k] - arr[j][k])<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,distRow[i][j] = distRow[j][i] = curMin)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,distRow[i])<SUB>24</SUB>>", "147": "<(IDENTIFIER,i,distRow[i][j] = distRow[j][i] = curMin)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.assignment,distRow[j][i] = curMin)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,distRow[j])<SUB>24</SUB>>", "153": "<(IDENTIFIER,j,distRow[j][i] = curMin)<SUB>24</SUB>>", "155": "<(IDENTIFIER,curMin,distRow[j][i] = curMin)<SUB>24</SUB>>", "157": "<(LOCAL,int i: int)<SUB>28</SUB>>", "159": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>28</SUB>>", "163": "<(IDENTIFIER,N,i &lt; N)<SUB>28</SUB>>", "165": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); j++),for (int j = 0; Some(j &lt; N); j++))<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>29</SUB>>", "171": "<(LITERAL,0,int j = 0)<SUB>29</SUB>>", "173": "<(IDENTIFIER,j,j &lt; N)<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.assignment,int curMin = Integer.MAX_VALUE)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>30</SUB>>", "183": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>30</SUB>>", "185": "<(LOCAL,int k: int)<SUB>31</SUB>>", "187": "<(IDENTIFIER,k,int k = 0)<SUB>31</SUB>>", "189": "<(&lt;operator&gt;.lessThan,k + 1 &lt; M)<SUB>31</SUB>>", "191": "<(IDENTIFIER,k,k + 1)<SUB>31</SUB>>", "193": "<(IDENTIFIER,M,k + 1 &lt; M)<SUB>31</SUB>>", "195": "<(IDENTIFIER,k,k++)<SUB>31</SUB>>", "197": "<(&lt;operator&gt;.assignment,curMin = Math.min(curMin, Math.abs(arr[i][k] - arr[j][k + 1])))<SUB>32</SUB>>", "199": "<(min,Math.min(curMin, Math.abs(arr[i][k] - arr[j][k + 1])))<SUB>32</SUB>>", "201": "<(IDENTIFIER,curMin,Math.min(curMin, Math.abs(arr[i][k] - arr[j][k + 1])))<SUB>32</SUB>>", "203": "<(IDENTIFIER,Math,Math.abs(arr[i][k] - arr[j][k + 1]))<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,arr[i][k])<SUB>32</SUB>>", "207": "<(IDENTIFIER,arr,arr[i][k] - arr[j][k + 1])<SUB>32</SUB>>", "209": "<(IDENTIFIER,k,arr[i][k] - arr[j][k + 1])<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>32</SUB>>", "213": "<(IDENTIFIER,j,arr[i][k] - arr[j][k + 1])<SUB>32</SUB>>", "215": "<(IDENTIFIER,k,k + 1)<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.assignment,distTop[i][j] = curMin)<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,distTop[i])<SUB>34</SUB>>", "221": "<(IDENTIFIER,i,distTop[i][j] = curMin)<SUB>34</SUB>>", "223": "<(IDENTIFIER,curMin,distTop[i][j] = curMin)<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.assignment,int maxMask = 1 &lt;&lt; N)<SUB>37</SUB>>", "227": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>37</SUB>>", "229": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[maxMask][N][N])<SUB>38</SUB>>", "233": "<(&lt;operator&gt;.alloc,new int[maxMask][N][N])>", "235": "<(IDENTIFIER,N,new int[maxMask][N][N])<SUB>38</SUB>>", "237": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; maxMask); i++),for (int i = 0; Some(i &lt; maxMask); i++))<SUB>39</SUB>>", "239": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>39</SUB>>", "241": "<(LITERAL,0,int i = 0)<SUB>39</SUB>>", "243": "<(IDENTIFIER,i,i &lt; maxMask)<SUB>39</SUB>>", "245": "<(&lt;operator&gt;.postIncrement,i++)<SUB>39</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "249": "<(LOCAL,int j: int)<SUB>40</SUB>>", "251": "<(IDENTIFIER,j,int j = 0)<SUB>40</SUB>>", "253": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>40</SUB>>", "255": "<(IDENTIFIER,N,j &lt; N)<SUB>40</SUB>>", "257": "<(IDENTIFIER,j,j++)<SUB>40</SUB>>", "259": "<(fill,fill(dp[i][j], Integer.MAX_VALUE))<SUB>41</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>41</SUB>>", "263": "<(IDENTIFIER,dp,fill(dp[i][j], Integer.MAX_VALUE))<SUB>41</SUB>>", "265": "<(IDENTIFIER,j,fill(dp[i][j], Integer.MAX_VALUE))<SUB>41</SUB>>", "267": "<(IDENTIFIER,Integer,fill(dp[i][j], Integer.MAX_VALUE))<SUB>41</SUB>>", "269": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; maxMask); mask++),for (int mask = 1; Some(mask &lt; maxMask); mask++))<SUB>44</SUB>>", "271": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>44</SUB>>", "273": "<(LITERAL,1,int mask = 1)<SUB>44</SUB>>", "275": "<(IDENTIFIER,mask,mask &lt; maxMask)<SUB>44</SUB>>", "277": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>44</SUB>>", "279": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "281": "<(LOCAL,int j: int)<SUB>45</SUB>>", "283": "<(IDENTIFIER,j,int j = 0)<SUB>45</SUB>>", "285": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>45</SUB>>", "287": "<(IDENTIFIER,N,j &lt; N)<SUB>45</SUB>>", "289": "<(IDENTIFIER,j,j++)<SUB>45</SUB>>", "291": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; j)) == 0),if ((mask &amp; (1 &lt;&lt; j)) == 0))<SUB>46</SUB>>", "293": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; j))<SUB>46</SUB>>", "295": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>46</SUB>>", "297": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>46</SUB>>", "299": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>46</SUB>>", "301": "<(LOCAL,int k: int)<SUB>47</SUB>>", "303": "<(IDENTIFIER,k,int k = 0)<SUB>47</SUB>>", "305": "<(&lt;operator&gt;.lessThan,k &lt; N)<SUB>47</SUB>>", "307": "<(IDENTIFIER,N,k &lt; N)<SUB>47</SUB>>", "309": "<(IDENTIFIER,k,k++)<SUB>47</SUB>>", "311": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; k)) == 0),if ((mask &amp; (1 &lt;&lt; k)) == 0))<SUB>48</SUB>>", "313": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; k))<SUB>48</SUB>>", "315": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>48</SUB>>", "317": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>48</SUB>>", "319": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>48</SUB>>", "321": "<(&lt;operator&gt;.logicalAnd,j == k &amp;&amp; mask - (1 &lt;&lt; k) != 0)<SUB>49</SUB>>", "323": "<(IDENTIFIER,j,j == k)<SUB>49</SUB>>", "325": "<(&lt;operator&gt;.notEquals,mask - (1 &lt;&lt; k) != 0)<SUB>49</SUB>>", "327": "<(IDENTIFIER,mask,mask - (1 &lt;&lt; k))<SUB>49</SUB>>", "329": "<(LITERAL,1,1 &lt;&lt; k)<SUB>49</SUB>>", "331": "<(LITERAL,0,mask - (1 &lt;&lt; k) != 0)<SUB>49</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>50</SUB>>", "335": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>50</SUB>>", "337": "<(LITERAL,0,int i = 0)<SUB>50</SUB>>", "339": "<(IDENTIFIER,i,i &lt; N)<SUB>50</SUB>>", "341": "<(&lt;operator&gt;.postIncrement,i++)<SUB>50</SUB>>", "343": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "345": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>51</SUB>>", "347": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>51</SUB>>", "349": "<(LITERAL,1,1 &lt;&lt; i)<SUB>51</SUB>>", "351": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>51</SUB>>", "353": "<(LOCAL,int curMask: int)<SUB>52</SUB>>", "355": "<(IDENTIFIER,curMask,int curMask = mask | (1 &lt;&lt; i))<SUB>52</SUB>>", "357": "<(IDENTIFIER,mask,mask | (1 &lt;&lt; i))<SUB>52</SUB>>", "359": "<(LITERAL,1,1 &lt;&lt; i)<SUB>52</SUB>>", "361": "<(CONTROL_STRUCTURE,if (dp[curMask][i][k] != Integer.MAX_VALUE),if (dp[curMask][i][k] != Integer.MAX_VALUE))<SUB>53</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp[curMask][i][k])<SUB>53</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,dp[curMask])<SUB>53</SUB>>", "367": "<(IDENTIFIER,curMask,dp[curMask][i][k] != Integer.MAX_VALUE)<SUB>53</SUB>>", "369": "<(IDENTIFIER,k,dp[curMask][i][k] != Integer.MAX_VALUE)<SUB>53</SUB>>", "371": "<(IDENTIFIER,Integer,dp[curMask][i][k] != Integer.MAX_VALUE)<SUB>53</SUB>>", "373": "<(&lt;operator&gt;.assignment,dp[curMask][i][k] = Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,dp[curMask][i])<SUB>54</SUB>>", "377": "<(IDENTIFIER,dp,dp[curMask][i][k] = Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "379": "<(IDENTIFIER,i,dp[curMask][i][k] = Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "381": "<(max,Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "383": "<(&lt;operator&gt;.indexAccess,dp[curMask][i][k])<SUB>54</SUB>>", "385": "<(&lt;operator&gt;.indexAccess,dp[curMask])<SUB>54</SUB>>", "387": "<(IDENTIFIER,curMask,Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "389": "<(IDENTIFIER,k,Math.max(dp[curMask][i][k], Math.min(dp[mask][j][k], distRow[i][j])))<SUB>54</SUB>>", "391": "<(IDENTIFIER,Math,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>54</SUB>>", "393": "<(&lt;operator&gt;.indexAccess,dp[mask][j])<SUB>54</SUB>>", "395": "<(IDENTIFIER,dp,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>54</SUB>>", "397": "<(IDENTIFIER,j,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>54</SUB>>", "399": "<(&lt;operator&gt;.indexAccess,distRow[i][j])<SUB>54</SUB>>", "401": "<(IDENTIFIER,distRow,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>54</SUB>>", "403": "<(IDENTIFIER,j,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>54</SUB>>", "405": "<(&lt;operator&gt;.assignment,dp[curMask][i][k] = Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "407": "<(&lt;operator&gt;.indexAccess,dp[curMask][i])<SUB>56</SUB>>", "409": "<(IDENTIFIER,dp,dp[curMask][i][k] = Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "411": "<(IDENTIFIER,i,dp[curMask][i][k] = Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "413": "<(min,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "415": "<(&lt;operator&gt;.indexAccess,dp[mask][j][k])<SUB>56</SUB>>", "417": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>56</SUB>>", "419": "<(IDENTIFIER,mask,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "421": "<(IDENTIFIER,k,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "423": "<(&lt;operator&gt;.indexAccess,distRow[i])<SUB>56</SUB>>", "425": "<(IDENTIFIER,i,Math.min(dp[mask][j][k], distRow[i][j]))<SUB>56</SUB>>", "427": "<(&lt;operator&gt;.postDecrement,maxMask--)<SUB>61</SUB>>", "429": "<(LOCAL,int max: int)<SUB>62</SUB>>", "431": "<(IDENTIFIER,max,int max = 0)<SUB>62</SUB>>", "433": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>63</SUB>>", "435": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>63</SUB>>", "437": "<(LITERAL,0,int i = 0)<SUB>63</SUB>>", "439": "<(IDENTIFIER,i,i &lt; N)<SUB>63</SUB>>", "441": "<(&lt;operator&gt;.postIncrement,i++)<SUB>63</SUB>>", "443": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "445": "<(LOCAL,int j: int)<SUB>64</SUB>>", "447": "<(IDENTIFIER,j,int j = 0)<SUB>64</SUB>>", "449": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>64</SUB>>", "451": "<(IDENTIFIER,N,j &lt; N)<SUB>64</SUB>>", "453": "<(IDENTIFIER,j,j++)<SUB>64</SUB>>", "455": "<(CONTROL_STRUCTURE,if (i == j &amp;&amp; N != 1),if (i == j &amp;&amp; N != 1))<SUB>65</SUB>>", "457": "<(&lt;operator&gt;.equals,i == j)<SUB>65</SUB>>", "459": "<(IDENTIFIER,j,i == j)<SUB>65</SUB>>", "461": "<(IDENTIFIER,N,N != 1)<SUB>65</SUB>>", "463": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>65</SUB>>", "465": "<(IDENTIFIER,max,max = Math.max(max, Math.min(dp[maxMask][i][j], distTop[i][j])))<SUB>66</SUB>>", "467": "<(IDENTIFIER,Math,Math.max(max, Math.min(dp[maxMask][i][j], distTop[i][j])))<SUB>66</SUB>>", "469": "<(min,Math.min(dp[maxMask][i][j], distTop[i][j]))<SUB>66</SUB>>", "471": "<(&lt;operator&gt;.indexAccess,dp[maxMask][i][j])<SUB>66</SUB>>", "473": "<(&lt;operator&gt;.indexAccess,dp[maxMask])<SUB>66</SUB>>", "475": "<(IDENTIFIER,maxMask,Math.min(dp[maxMask][i][j], distTop[i][j]))<SUB>66</SUB>>", "477": "<(IDENTIFIER,j,Math.min(dp[maxMask][i][j], distTop[i][j]))<SUB>66</SUB>>", "479": "<(&lt;operator&gt;.indexAccess,distTop[i])<SUB>66</SUB>>", "481": "<(IDENTIFIER,i,Math.min(dp[maxMask][i][j], distTop[i][j]))<SUB>66</SUB>>", "483": "<(println,System.out.println(max))<SUB>69</SUB>>", "485": "<(IDENTIFIER,System,System.out.println(max))<SUB>69</SUB>>", "487": "<(IDENTIFIER,max,System.out.println(max))<SUB>69</SUB>>", "489": "<(MODIFIER,STATIC)>"}}