{"edges": [["23", "24"], ["23", "25"], ["23", "152"], ["23", "153"], ["23", "154"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "60"], ["25", "61"], ["25", "64"], ["25", "143"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "8"], ["74", "75"], ["74", "78"], ["74", "81"], ["74", "89"], ["74", "90"], ["74", "96"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["87", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "100"], ["96", "131"], ["97", "98"], ["97", "99"], ["100", "101"], ["101", "102"], ["101", "107"], ["101", "116"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["117", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "130"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["131", "132"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["26", "33"], ["29", "42"], ["40", "44"], ["43", "52"], ["48", "58"], ["54", "61"], ["61", "66"], ["143", "154"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["56", "54"], ["66", "69"], ["69", "77"], ["69", "146"], ["72", "69"], ["144", "149"], ["147", "143"], ["31", "38"], ["34", "29"], ["52", "50"], ["58", "56"], ["75", "79"], ["78", "87"], ["81", "94"], ["90", "97"], ["146", "144"], ["148", "147"], ["33", "31"], ["36", "34"], ["77", "75"], ["79", "78"], ["83", "81"], ["92", "90"], ["97", "103"], ["97", "136"], ["149", "148"], ["38", "36"], ["85", "83"], ["94", "92"], ["132", "72"], ["87", "85"], ["102", "111"], ["102", "122"], ["107", "72"], ["134", "132"], ["103", "102"], ["109", "107"], ["135", "134"], ["110", "109"], ["118", "72"], ["136", "139"], ["139", "135"], ["111", "110"], ["120", "118"], ["121", "120"], ["122", "126"], ["125", "121"], ["126", "125"], ["23", "28"], ["24", "154"], ["26", "154"], ["31", "154"], ["34", "154"], ["34", "154"], ["34", "154"], ["29", "154"], ["40", "154"], ["44", "154"], ["43", "154"], ["43", "154"], ["48", "154"], ["56", "154"], ["58", "154"], ["56", "154"], ["54", "154"], ["54", "154"], ["61", "154"], ["66", "154"], ["69", "154"], ["69", "154"], ["69", "154"], ["143", "154"], ["148", "154"], ["147", "154"], ["147", "154"], ["143", "154"], ["143", "154"], ["75", "154"], ["79", "154"], ["78", "154"], ["78", "154"], ["81", "154"], ["81", "154"], ["92", "154"], ["94", "154"], ["92", "154"], ["90", "154"], ["90", "154"], ["97", "154"], ["136", "154"], ["135", "154"], ["135", "154"], ["134", "154"], ["132", "154"], ["132", "154"], ["102", "154"], ["102", "154"], ["121", "154"], ["121", "154"], ["120", "154"], ["120", "154"], ["118", "154"], ["118", "154"], ["110", "154"], ["109", "154"], ["109", "154"], ["107", "154"], ["107", "154"], ["72", "154"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["56", "54"], ["56", "54"], ["23", "61"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "43"], ["23", "66"], ["147", "143"], ["147", "143"], ["23", "31"], ["23", "39"], ["29", "44"], ["23", "44"], ["23", "50"], ["52", "50"], ["50", "56"], ["23", "56"], ["58", "56"], ["66", "69"], ["72", "69"], ["23", "69"], ["54", "69"], ["69", "72"], ["23", "72"], ["23", "75"], ["83", "81"], ["83", "81"], ["92", "90"], ["92", "90"], ["23", "147"], ["61", "147"], ["132", "147"], ["118", "147"], ["107", "147"], ["48", "147"], ["139", "147"], ["126", "147"], ["111", "147"], ["31", "34"], ["23", "34"], ["43", "52"], ["23", "52"], ["52", "58"], ["23", "58"], ["75", "78"], ["23", "78"], ["79", "78"], ["61", "81"], ["132", "81"], ["118", "81"], ["107", "81"], ["23", "81"], ["23", "148"], ["61", "148"], ["132", "148"], ["118", "148"], ["107", "148"], ["44", "79"], ["23", "79"], ["48", "83"], ["139", "83"], ["126", "83"], ["111", "83"], ["23", "83"], ["85", "83"], ["85", "83"], ["85", "92"], ["23", "92"], ["94", "92"], ["90", "97"], ["23", "97"], ["134", "132"], ["134", "132"], ["56", "85"], ["92", "85"], ["23", "85"], ["87", "85"], ["87", "94"], ["23", "94"], ["109", "107"], ["109", "107"], ["81", "132"], ["23", "132"], ["78", "87"], ["23", "87"], ["103", "102"], ["103", "102"], ["23", "102"], ["81", "107"], ["23", "107"], ["135", "134"], ["135", "134"], ["23", "134"], ["83", "103"], ["23", "103"], ["110", "109"], ["110", "109"], ["97", "109"], ["23", "109"], ["120", "118"], ["120", "118"], ["136", "135"], ["136", "135"], ["139", "135"], ["139", "135"], ["111", "110"], ["23", "110"], ["81", "118"], ["23", "118"], ["97", "136"], ["23", "136"], ["83", "136"], ["136", "139"], ["23", "139"], ["103", "111"], ["23", "111"], ["121", "120"], ["121", "120"], ["97", "120"], ["23", "120"], ["122", "121"], ["122", "121"], ["126", "121"], ["126", "121"], ["23", "121"], ["103", "122"], ["23", "122"], ["126", "125"], ["126", "125"], ["23", "125"], ["122", "126"], ["23", "126"], ["69", "94"], ["69", "77"], ["69", "75"], ["69", "81"], ["69", "85"], ["69", "72"], ["69", "69"], ["69", "92"], ["69", "87"], ["69", "97"], ["69", "90"], ["69", "79"], ["69", "83"], ["69", "78"], ["97", "136"], ["97", "102"], ["97", "103"], ["97", "132"], ["97", "134"], ["97", "135"], ["97", "139"], ["102", "107"], ["102", "120"], ["102", "122"], ["102", "121"], ["102", "126"], ["102", "118"], ["102", "110"], ["102", "125"], ["102", "111"], ["102", "109"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "45": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "47": "<(LOCAL,long m: long)<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,long n = parseLong(st.nextToken()))<SUB>5</SUB>>", "51": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>5</SUB>>", "53": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "55": "<(IDENTIFIER,m,long m = parseLong(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>5</SUB>>", "59": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,long sum = 0)<SUB>7</SUB>>", "65": "<(LOCAL,int i: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>9</SUB>>", "71": "<(IDENTIFIER,m,i &lt; m)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "8": "<(LOCAL,StringTokenizer st1: ANY)<SUB>10</SUB>>", "76": "<(IDENTIFIER,st1,ANY st1 = new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "79": "<(readLine,readLine())<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignmentPlus,sum += n * Long.parseLong(st1.nextToken()))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.multiplication,n * Long.parseLong(st1.nextToken()))<SUB>11</SUB>>", "85": "<(parseLong,parseLong(st1.nextToken()))<SUB>11</SUB>>", "87": "<(nextToken,nextToken())<SUB>11</SUB>>", "89": "<(LOCAL,Long a: java.lang.Long)<SUB>12</SUB>>", "91": "<(IDENTIFIER,a,Long a = parseLong(st1.nextToken()))<SUB>12</SUB>>", "93": "<(IDENTIFIER,Long,parseLong(st1.nextToken()))<SUB>12</SUB>>", "95": "<(IDENTIFIER,st1,nextToken())<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.lessThan,a &lt; 0)<SUB>13</SUB>>", "99": "<(LITERAL,0,a &lt; 0)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.modulo,n % 2)<SUB>14</SUB>>", "105": "<(LITERAL,2,n % 2)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignmentPlus,sum += n * n / 4 * a)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.multiplication,n * n / 4 * a)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.multiplication,n * n)<SUB>15</SUB>>", "113": "<(IDENTIFIER,n,n * n)<SUB>15</SUB>>", "115": "<(IDENTIFIER,a,n * n / 4 * a)<SUB>15</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "119": "<(IDENTIFIER,sum,sum += (n / 2) * (n / 2 + 1) * a)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.multiplication,(n / 2) * (n / 2 + 1))<SUB>17</SUB>>", "123": "<(IDENTIFIER,n,n / 2)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.addition,n / 2 + 1)<SUB>17</SUB>>", "127": "<(IDENTIFIER,n,n / 2)<SUB>17</SUB>>", "129": "<(LITERAL,1,n / 2 + 1)<SUB>17</SUB>>", "131": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "133": "<(IDENTIFIER,sum,sum += a * (n) * (n - 1) / 2)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.multiplication,a * (n) * (n - 1))<SUB>21</SUB>>", "137": "<(IDENTIFIER,a,a * (n))<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>21</SUB>>", "141": "<(LITERAL,1,n - 1)<SUB>21</SUB>>", "143": "<(println,System.out.println((double) sum / n))<SUB>24</SUB>>", "145": "<(IDENTIFIER,System,System.out.println((double) sum / n))<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.division,(double) sum / n)<SUB>24</SUB>>", "149": "<(TYPE_REF,double,double)<SUB>24</SUB>>", "151": "<(IDENTIFIER,n,(double) sum / n)<SUB>24</SUB>>", "153": "<(MODIFIER,STATIC)>"}}