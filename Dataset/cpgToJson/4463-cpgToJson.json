{"edges": [["26", "11"], ["26", "27"], ["26", "298"], ["26", "299"], ["26", "300"], ["27", "28"], ["27", "31"], ["27", "36"], ["27", "39"], ["27", "9"], ["27", "44"], ["27", "48"], ["27", "296"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "53"], ["49", "50"], ["49", "52"], ["50", "51"], ["53", "54"], ["53", "58"], ["53", "4"], ["53", "62"], ["53", "66"], ["53", "73"], ["53", "123"], ["53", "126"], ["53", "133"], ["53", "140"], ["53", "147"], ["53", "217"], ["53", "290"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "7"], ["73", "74"], ["73", "77"], ["73", "80"], ["73", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "102"], ["93", "116"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["123", "124"], ["123", "125"], ["123", "5"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "170"], ["158", "172"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["172", "173"], ["172", "181"], ["172", "186"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "205"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["205", "206"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["217", "222"], ["217", "225"], ["217", "227"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["227", "228"], ["228", "229"], ["228", "230"], ["228", "233"], ["228", "238"], ["228", "240"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["238", "239"], ["240", "241"], ["240", "242"], ["240", "245"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "253"], ["245", "255"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["255", "256"], ["255", "274"], ["255", "275"], ["255", "280"], ["255", "283"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["262", "269"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "277"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["292", "295"], ["296", "297"], ["28", "35"], ["31", "38"], ["36", "43"], ["39", "46"], ["44", "50"], ["296", "300"], ["30", "28"], ["33", "31"], ["38", "36"], ["41", "39"], ["46", "44"], ["49", "56"], ["49", "296"], ["35", "33"], ["43", "41"], ["50", "49"], ["54", "60"], ["58", "64"], ["62", "70"], ["66", "74"], ["123", "130"], ["126", "137"], ["133", "144"], ["140", "149"], ["290", "50"], ["56", "54"], ["60", "58"], ["64", "62"], ["68", "66"], ["74", "77"], ["77", "85"], ["77", "5"], ["80", "77"], ["5", "123"], ["128", "126"], ["135", "133"], ["142", "140"], ["149", "152"], ["152", "160"], ["152", "219"], ["155", "152"], ["219", "222"], ["222", "230"], ["222", "292"], ["225", "222"], ["292", "290"], ["70", "68"], ["130", "128"], ["137", "135"], ["144", "142"], ["85", "88"], ["88", "96"], ["88", "80"], ["91", "88"], ["160", "166"], ["163", "175"], ["163", "155"], ["170", "166"], ["230", "235"], ["233", "242"], ["233", "225"], ["238", "235"], ["94", "103"], ["102", "118"], ["116", "91"], ["165", "163"], ["173", "182"], ["235", "233"], ["242", "247"], ["95", "100"], ["100", "94"], ["103", "108"], ["106", "102"], ["117", "116"], ["166", "169"], ["169", "165"], ["174", "179"], ["179", "173"], ["182", "170"], ["182", "188"], ["188", "191"], ["191", "200"], ["191", "170"], ["194", "191"], ["247", "250"], ["250", "258"], ["250", "238"], ["253", "250"], ["96", "95"], ["108", "112"], ["111", "106"], ["118", "117"], ["175", "174"], ["256", "277"], ["275", "280"], ["280", "287"], ["283", "253"], ["112", "111"], ["198", "208"], ["198", "194"], ["257", "265"], ["262", "256"], ["277", "275"], ["285", "283"], ["199", "198"], ["206", "194"], ["258", "257"], ["264", "270"], ["269", "262"], ["287", "285"], ["200", "199"], ["207", "213"], ["212", "206"], ["265", "264"], ["270", "269"], ["208", "207"], ["213", "212"], ["26", "30"], ["11", "300"], ["28", "300"], ["31", "300"], ["31", "300"], ["36", "300"], ["39", "300"], ["39", "300"], ["46", "300"], ["44", "300"], ["44", "300"], ["50", "300"], ["49", "300"], ["49", "300"], ["296", "300"], ["296", "300"], ["54", "300"], ["60", "300"], ["58", "300"], ["58", "300"], ["62", "300"], ["62", "300"], ["62", "300"], ["68", "300"], ["68", "300"], ["66", "300"], ["66", "300"], ["123", "300"], ["123", "300"], ["126", "300"], ["126", "300"], ["133", "300"], ["133", "300"], ["140", "300"], ["142", "300"], ["140", "300"], ["140", "300"], ["149", "300"], ["152", "300"], ["152", "300"], ["219", "300"], ["222", "300"], ["222", "300"], ["222", "300"], ["290", "300"], ["290", "300"], ["230", "300"], ["233", "300"], ["233", "300"], ["233", "300"], ["225", "300"], ["242", "300"], ["242", "300"], ["247", "300"], ["250", "300"], ["250", "300"], ["238", "300"], ["256", "300"], ["262", "300"], ["262", "300"], ["256", "300"], ["256", "300"], ["275", "300"], ["275", "300"], ["283", "300"], ["285", "300"], ["285", "300"], ["283", "300"], ["253", "300"], ["160", "300"], ["163", "300"], ["163", "300"], ["155", "300"], ["173", "300"], ["173", "300"], ["173", "300"], ["182", "300"], ["182", "300"], ["188", "300"], ["191", "300"], ["191", "300"], ["199", "300"], ["198", "300"], ["198", "300"], ["206", "300"], ["206", "300"], ["206", "300"], ["194", "300"], ["170", "300"], ["85", "300"], ["88", "300"], ["88", "300"], ["88", "300"], ["80", "300"], ["100", "300"], ["94", "300"], ["94", "300"], ["102", "300"], ["106", "300"], ["106", "300"], ["102", "300"], ["102", "300"], ["116", "300"], ["116", "300"], ["91", "300"], ["123", "300"], ["292", "300"], ["26", "11"], ["26", "28"], ["26", "36"], ["46", "44"], ["28", "31"], ["26", "31"], ["36", "39"], ["26", "39"], ["31", "296"], ["290", "296"], ["26", "296"], ["39", "46"], ["26", "46"], ["50", "49"], ["26", "49"], ["56", "54"], ["60", "58"], ["64", "62"], ["68", "66"], ["68", "66"], ["128", "126"], ["128", "126"], ["135", "133"], ["135", "133"], ["142", "140"], ["142", "140"], ["44", "50"], ["26", "50"], ["26", "74"], ["26", "123"], ["66", "123"], ["26", "149"], ["26", "219"], ["31", "290"], ["26", "290"], ["292", "290"], ["292", "290"], ["46", "56"], ["60", "56"], ["100", "56"], ["26", "56"], ["56", "60"], ["26", "60"], ["58", "64"], ["26", "64"], ["64", "68"], ["26", "68"], ["54", "68"], ["74", "77"], ["80", "77"], ["26", "77"], ["54", "77"], ["77", "80"], ["26", "80"], ["130", "128"], ["26", "128"], ["130", "128"], ["137", "135"], ["26", "135"], ["137", "135"], ["144", "142"], ["26", "142"], ["144", "142"], ["149", "152"], ["155", "152"], ["26", "152"], ["142", "152"], ["191", "152"], ["152", "155"], ["182", "155"], ["26", "155"], ["219", "222"], ["225", "222"], ["26", "222"], ["152", "222"], ["235", "222"], ["222", "225"], ["26", "225"], ["26", "292"], ["54", "70"], ["26", "70"], ["26", "85"], ["26", "130"], ["77", "130"], ["26", "137"], ["128", "137"], ["26", "144"], ["135", "144"], ["26", "160"], ["26", "230"], ["85", "88"], ["91", "88"], ["26", "88"], ["68", "88"], ["26", "91"], ["88", "91"], ["100", "94"], ["106", "102"], ["106", "102"], ["106", "102"], ["88", "116"], ["26", "116"], ["160", "163"], ["170", "163"], ["26", "163"], ["163", "170"], ["200", "170"], ["26", "170"], ["179", "173"], ["230", "233"], ["238", "233"], ["26", "233"], ["235", "233"], ["235", "233"], ["26", "238"], ["233", "238"], ["233", "242"], ["26", "242"], ["26", "188"], ["26", "235"], ["222", "235"], ["250", "235"], ["26", "247"], ["60", "100"], ["26", "100"], ["262", "106"], ["26", "106"], ["62", "106"], ["102", "106"], ["94", "106"], ["26", "179"], ["152", "182"], ["26", "182"], ["68", "182"], ["88", "182"], ["188", "191"], ["194", "191"], ["26", "191"], ["152", "191"], ["200", "194"], ["26", "194"], ["247", "250"], ["253", "250"], ["26", "250"], ["235", "250"], ["287", "250"], ["250", "253"], ["26", "253"], ["262", "256"], ["262", "256"], ["262", "256"], ["277", "275"], ["277", "275"], ["26", "280"], ["285", "283"], ["285", "283"], ["277", "280"], ["280", "283"], ["26", "283"], ["199", "198"], ["199", "198"], ["26", "198"], ["106", "262"], ["26", "262"], ["256", "262"], ["242", "277"], ["283", "277"], ["26", "277"], ["275", "285"], ["26", "285"], ["287", "285"], ["287", "285"], ["200", "199"], ["200", "199"], ["26", "199"], ["250", "287"], ["26", "287"], ["163", "200"], ["26", "200"], ["191", "200"], ["49", "68"], ["49", "60"], ["49", "128"], ["49", "292"], ["49", "290"], ["49", "74"], ["49", "50"], ["49", "54"], ["49", "152"], ["49", "70"], ["49", "49"], ["49", "66"], ["49", "123"], ["49", "140"], ["49", "135"], ["49", "222"], ["49", "133"], ["49", "77"], ["49", "64"], ["49", "149"], ["49", "56"], ["49", "144"], ["49", "137"], ["49", "58"], ["49", "130"], ["49", "5"], ["49", "142"], ["49", "126"], ["49", "219"], ["49", "62"], ["77", "80"], ["77", "88"], ["77", "77"], ["77", "85"], ["152", "163"], ["152", "152"], ["152", "160"], ["152", "169"], ["152", "155"], ["152", "166"], ["152", "165"], ["222", "230"], ["222", "222"], ["222", "225"], ["222", "233"], ["222", "235"], ["88", "102"], ["88", "95"], ["88", "112"], ["88", "118"], ["88", "100"], ["88", "88"], ["88", "108"], ["88", "116"], ["88", "117"], ["88", "94"], ["88", "96"], ["88", "103"], ["88", "91"], ["88", "111"], ["88", "106"], ["163", "163"], ["163", "170"], ["163", "174"], ["163", "182"], ["163", "169"], ["163", "179"], ["163", "173"], ["163", "166"], ["163", "165"], ["163", "175"], ["233", "247"], ["233", "242"], ["233", "238"], ["233", "233"], ["233", "235"], ["233", "250"], ["182", "188"], ["182", "191"], ["191", "194"], ["191", "200"], ["191", "199"], ["191", "198"], ["191", "191"], ["250", "283"], ["250", "256"], ["250", "262"], ["250", "264"], ["250", "258"], ["250", "253"], ["250", "269"], ["250", "257"], ["250", "275"], ["250", "285"], ["250", "280"], ["250", "265"], ["250", "277"], ["250", "287"], ["250", "270"], ["250", "250"], ["198", "213"], ["198", "206"], ["198", "208"], ["198", "207"], ["198", "212"]], "features": {"26": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "29": "<(IDENTIFIER,pw,pw = new PrintWriter(System.out))<SUB>2</SUB>>", "31": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>2</SUB>>", "35": "<(FIELD_IDENTIFIER,out,out)<SUB>2</SUB>>", "37": "<(IDENTIFIER,sc,sc = new MScanner(System.in))<SUB>3</SUB>>", "39": "<(&lt;init&gt;,new MScanner(System.in))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "43": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.assignment,int tc = nextInt())<SUB>4</SUB>>", "46": "<(nextInt,nextInt())<SUB>4</SUB>>", "48": "<(CONTROL_STRUCTURE,while (tc-- &gt; 0),while (tc-- &gt; 0))<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.postDecrement,tc--)<SUB>5</SUB>>", "52": "<(LITERAL,0,tc-- &gt; 0)<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>6</SUB>>", "56": "<(nextInt,nextInt())<SUB>6</SUB>>", "58": "<(&lt;operator&gt;.assignment,m = nextInt())<SUB>6</SUB>>", "60": "<(nextInt,nextInt())<SUB>6</SUB>>", "4": "<(LOCAL,int[] maxInCol: int[])<SUB>8</SUB>>", "63": "<(IDENTIFIER,maxInCol,int[] maxInCol = new int[m])<SUB>8</SUB>>", "65": "<(IDENTIFIER,m,new int[m])<SUB>8</SUB>>", "67": "<(IDENTIFIER,in,in = new int[m][n + 1])<SUB>9</SUB>>", "69": "<(IDENTIFIER,m,new int[m][n + 1])<SUB>9</SUB>>", "71": "<(IDENTIFIER,n,n + 1)<SUB>9</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "74": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "76": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "78": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "80": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "82": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "84": "<(LOCAL,int j: int)<SUB>12</SUB>>", "86": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "88": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>12</SUB>>", "90": "<(IDENTIFIER,m,j &lt; m)<SUB>12</SUB>>", "92": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "94": "<(&lt;operator&gt;.assignment,in[j][i] = nextInt())<SUB>13</SUB>>", "96": "<(&lt;operator&gt;.indexAccess,in[j])<SUB>13</SUB>>", "98": "<(IDENTIFIER,j,in[j][i] = nextInt())<SUB>13</SUB>>", "100": "<(nextInt,nextInt())<SUB>13</SUB>>", "102": "<(&lt;operator&gt;.assignment,maxInCol[j] = max(maxInCol[j], in[j][i]))<SUB>14</SUB>>", "104": "<(IDENTIFIER,maxInCol,maxInCol[j] = max(maxInCol[j], in[j][i]))<SUB>14</SUB>>", "106": "<(max,max(maxInCol[j], in[j][i]))<SUB>14</SUB>>", "108": "<(&lt;operator&gt;.indexAccess,maxInCol[j])<SUB>14</SUB>>", "110": "<(IDENTIFIER,j,max(maxInCol[j], in[j][i]))<SUB>14</SUB>>", "112": "<(&lt;operator&gt;.indexAccess,in[j])<SUB>14</SUB>>", "114": "<(IDENTIFIER,j,max(maxInCol[j], in[j][i]))<SUB>14</SUB>>", "116": "<(&lt;operator&gt;.assignment,in[j][n] = j)<SUB>15</SUB>>", "118": "<(&lt;operator&gt;.indexAccess,in[j])<SUB>15</SUB>>", "120": "<(IDENTIFIER,j,in[j][n] = j)<SUB>15</SUB>>", "122": "<(IDENTIFIER,j,in[j][n] = j)<SUB>15</SUB>>", "124": "<(IDENTIFIER,Arrays,sort(in, &lt;lambda&gt;))<SUB>18</SUB>>", "5": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(2),sort(in, &lt;lambda&gt;))>", "127": "<(IDENTIFIER,memo,memo = new int[n][1 &lt;&lt; n])<SUB>21</SUB>>", "129": "<(IDENTIFIER,n,new int[n][1 &lt;&lt; n])<SUB>21</SUB>>", "131": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.assignment,sumOfMask = new int[n][1 &lt;&lt; n])<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.alloc,new int[n][1 &lt;&lt; n])>", "137": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>22</SUB>>", "139": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>22</SUB>>", "141": "<(IDENTIFIER,maxMask,maxMask = new int[n][1 &lt;&lt; n])<SUB>23</SUB>>", "143": "<(IDENTIFIER,n,new int[n][1 &lt;&lt; n])<SUB>23</SUB>>", "145": "<(LITERAL,1,1 &lt;&lt; n)<SUB>23</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "151": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "153": "<(IDENTIFIER,i,i &lt; n)<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "159": "<(LOCAL,int msk: int)<SUB>25</SUB>>", "161": "<(IDENTIFIER,msk,int msk = 0)<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.lessThan,msk &lt; memo[i].length)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.fieldAccess,memo[i].length)<SUB>25</SUB>>", "167": "<(IDENTIFIER,memo,msk &lt; memo[i].length)<SUB>25</SUB>>", "169": "<(FIELD_IDENTIFIER,length,length)<SUB>25</SUB>>", "171": "<(IDENTIFIER,msk,msk++)<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.assignment,memo[i][msk] = -1)<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,memo[i])<SUB>26</SUB>>", "177": "<(IDENTIFIER,i,memo[i][msk] = -1)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "181": "<(CONTROL_STRUCTURE,if (i &gt;= m),if (i &gt;= m))<SUB>27</SUB>>", "183": "<(IDENTIFIER,i,i &gt;= m)<SUB>27</SUB>>", "185": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "187": "<(LOCAL,int bit: int)<SUB>28</SUB>>", "189": "<(IDENTIFIER,bit,int bit = 0)<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.lessThan,bit &lt; n)<SUB>28</SUB>>", "193": "<(IDENTIFIER,n,bit &lt; n)<SUB>28</SUB>>", "195": "<(IDENTIFIER,bit,bit++)<SUB>28</SUB>>", "197": "<(CONTROL_STRUCTURE,if (((msk &gt;&gt; bit) &amp; 1) != 0),if (((msk &gt;&gt; bit) &amp; 1) != 0))<SUB>29</SUB>>", "199": "<(&lt;operator&gt;.and,(msk &gt;&gt; bit) &amp; 1)<SUB>29</SUB>>", "201": "<(IDENTIFIER,msk,msk &gt;&gt; bit)<SUB>29</SUB>>", "203": "<(LITERAL,1,(msk &gt;&gt; bit) &amp; 1)<SUB>29</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,sumOfMask[i][msk])<SUB>30</SUB>>", "209": "<(IDENTIFIER,sumOfMask,sumOfMask[i][msk] += in[i][bit])<SUB>30</SUB>>", "211": "<(IDENTIFIER,msk,sumOfMask[i][msk] += in[i][bit])<SUB>30</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>30</SUB>>", "215": "<(IDENTIFIER,i,sumOfMask[i][msk] += in[i][bit])<SUB>30</SUB>>", "217": "<(CONTROL_STRUCTURE,for (int col = 0; Some(col &lt; n); col++),for (int col = 0; Some(col &lt; n); col++))<SUB>35</SUB>>", "219": "<(&lt;operator&gt;.assignment,int col = 0)<SUB>35</SUB>>", "221": "<(LITERAL,0,int col = 0)<SUB>35</SUB>>", "223": "<(IDENTIFIER,col,col &lt; n)<SUB>35</SUB>>", "225": "<(&lt;operator&gt;.postIncrement,col++)<SUB>35</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "229": "<(LOCAL,int msk: int)<SUB>36</SUB>>", "231": "<(IDENTIFIER,msk,int msk = 0)<SUB>36</SUB>>", "233": "<(&lt;operator&gt;.lessThan,msk &lt; (1 &lt;&lt; n))<SUB>36</SUB>>", "235": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>36</SUB>>", "237": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>36</SUB>>", "239": "<(IDENTIFIER,msk,msk++)<SUB>36</SUB>>", "241": "<(LOCAL,int curMask: int)<SUB>37</SUB>>", "243": "<(IDENTIFIER,curMask,int curMask = msk)<SUB>37</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int cyclicShift = 0; Some(cyclicShift &lt; n); cyclicShift++),for (int cyclicShift = 0; Some(cyclicShift &lt; n); cyclicShift++))<SUB>38</SUB>>", "247": "<(&lt;operator&gt;.assignment,int cyclicShift = 0)<SUB>38</SUB>>", "249": "<(LITERAL,0,int cyclicShift = 0)<SUB>38</SUB>>", "251": "<(IDENTIFIER,cyclicShift,cyclicShift &lt; n)<SUB>38</SUB>>", "253": "<(&lt;operator&gt;.postIncrement,cyclicShift++)<SUB>38</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,maxMask[col][msk])<SUB>39</SUB>>", "259": "<(IDENTIFIER,maxMask,maxMask[col][msk] = max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "261": "<(IDENTIFIER,msk,maxMask[col][msk] = max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "263": "<(IDENTIFIER,Math,max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,maxMask[col])<SUB>39</SUB>>", "267": "<(IDENTIFIER,col,max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,sumOfMask[col][curMask])<SUB>39</SUB>>", "271": "<(IDENTIFIER,sumOfMask,max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "273": "<(IDENTIFIER,curMask,max(maxMask[col][msk], sumOfMask[col][curMask]))<SUB>39</SUB>>", "275": "<(&lt;operator&gt;.assignment,int lastBit = curMask &amp; 1)<SUB>41</SUB>>", "277": "<(&lt;operator&gt;.and,curMask &amp; 1)<SUB>41</SUB>>", "279": "<(LITERAL,1,curMask &amp; 1)<SUB>41</SUB>>", "281": "<(IDENTIFIER,curMask,curMask &gt;&gt;= 1)<SUB>42</SUB>>", "283": "<(&lt;operators&gt;.assignmentOr,curMask |= lastBit &lt;&lt; (n - 1))<SUB>43</SUB>>", "285": "<(&lt;operator&gt;.shiftLeft,lastBit &lt;&lt; (n - 1))<SUB>43</SUB>>", "287": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>43</SUB>>", "289": "<(LITERAL,1,n - 1)<SUB>43</SUB>>", "291": "<(IDENTIFIER,pw,println(dp(0, 0)))<SUB>48</SUB>>", "293": "<(IDENTIFIER,this,dp(0, 0))<SUB>48</SUB>>", "295": "<(LITERAL,0,dp(0, 0))<SUB>48</SUB>>", "297": "<(IDENTIFIER,pw,flush())<SUB>52</SUB>>", "299": "<(MODIFIER,STATIC)>"}}