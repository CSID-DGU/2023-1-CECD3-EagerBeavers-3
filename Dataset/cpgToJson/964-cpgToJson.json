{"edges": [["19", "21"], ["19", "65"], ["19", "66"], ["19", "67"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "56"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "55"], ["43", "44"], ["43", "46"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "44"], ["40", "59"], ["56", "67"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["57", "61"], ["60", "56"], ["28", "26"], ["43", "42"], ["59", "57"], ["61", "62"], ["62", "60"], ["44", "52"], ["46", "43"], ["48", "46"], ["50", "48"], ["52", "50"], ["19", "24"], ["20", "67"], ["22", "67"], ["25", "67"], ["25", "67"], ["30", "67"], ["37", "67"], ["35", "67"], ["35", "67"], ["43", "67"], ["52", "67"], ["50", "67"], ["48", "67"], ["46", "67"], ["43", "67"], ["42", "67"], ["40", "67"], ["40", "67"], ["56", "67"], ["62", "67"], ["62", "67"], ["60", "67"], ["56", "67"], ["56", "67"], ["46", "67"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["22", "25"], ["19", "25"], ["19", "56"], ["62", "56"], ["62", "56"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["44", "42"], ["46", "42"], ["46", "42"], ["19", "42"], ["19", "60"], ["62", "60"], ["62", "60"], ["44", "43"], ["46", "43"], ["46", "43"], ["19", "62"], ["30", "62"], ["40", "62"], ["19", "44"], ["19", "46"], ["50", "46"], ["50", "46"], ["19", "48"], ["50", "48"], ["50", "48"], ["19", "50"], ["30", "50"], ["35", "50"], ["30", "52"], ["19", "52"], ["35", "52"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,double n: double)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,double n = nextLong())<SUB>5</SUB>>", "33": "<(IDENTIFIER,s,nextLong())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,double k = nextLong())<SUB>6</SUB>>", "37": "<(nextLong,nextLong())<SUB>6</SUB>>", "39": "<(LOCAL,double num: double)<SUB>8</SUB>>", "41": "<(IDENTIFIER,num,double num = (-3 + Math.sqrt(9 + 8 * (n + k))) / 2)<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.addition,-3 + Math.sqrt(9 + 8 * (n + k)))<SUB>8</SUB>>", "45": "<(LITERAL,3,-3)<SUB>8</SUB>>", "47": "<(IDENTIFIER,Math,Math.sqrt(9 + 8 * (n + k)))<SUB>8</SUB>>", "49": "<(LITERAL,9,9 + 8 * (n + k))<SUB>8</SUB>>", "51": "<(LITERAL,8,8 * (n + k))<SUB>8</SUB>>", "53": "<(IDENTIFIER,n,n + k)<SUB>8</SUB>>", "55": "<(LITERAL,2,(-3 + Math.sqrt(9 + 8 * (n + k))) / 2)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "59": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "61": "<(TYPE_REF,long,long)<SUB>10</SUB>>", "63": "<(IDENTIFIER,n,n - num)<SUB>10</SUB>>", "65": "<(MODIFIER,PUBLIC)>", "67": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}