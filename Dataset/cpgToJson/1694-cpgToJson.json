{"edges": [["19", "21"], ["19", "169"], ["19", "170"], ["19", "171"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "72"], ["21", "76"], ["21", "77"], ["21", "80"], ["21", "81"], ["21", "86"], ["21", "164"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "66"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "75"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "96"], ["86", "98"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "116"], ["98", "153"], ["99", "100"], ["99", "113"], ["100", "101"], ["100", "112"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["113", "114"], ["114", "115"], ["116", "117"], ["116", "150"], ["117", "118"], ["117", "125"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "149"], ["126", "127"], ["126", "140"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["151", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["72", "77"], ["77", "85"], ["81", "88"], ["164", "171"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "72"], ["57", "54"], ["83", "81"], ["88", "95"], ["91", "103"], ["91", "167"], ["96", "95"], ["165", "164"], ["28", "26"], ["60", "67"], ["66", "57"], ["85", "83"], ["93", "91"], ["153", "96"], ["167", "165"], ["61", "64"], ["64", "60"], ["67", "70"], ["70", "66"], ["95", "93"], ["100", "114"], ["100", "123"], ["117", "151"], ["117", "156"], ["155", "153"], ["101", "100"], ["114", "123"], ["118", "117"], ["118", "130"], ["125", "117"], ["151", "156"], ["156", "160"], ["159", "155"], ["102", "101"], ["120", "118"], ["126", "125"], ["160", "159"], ["103", "107"], ["106", "102"], ["121", "120"], ["127", "141"], ["140", "126"], ["107", "106"], ["123", "121"], ["128", "136"], ["133", "127"], ["141", "145"], ["144", "140"], ["130", "128"], ["134", "133"], ["145", "144"], ["136", "134"], ["19", "24"], ["20", "171"], ["22", "171"], ["25", "171"], ["25", "171"], ["30", "171"], ["35", "171"], ["37", "171"], ["35", "171"], ["35", "171"], ["40", "171"], ["45", "171"], ["45", "171"], ["54", "171"], ["54", "171"], ["72", "171"], ["72", "171"], ["72", "171"], ["77", "171"], ["81", "171"], ["81", "171"], ["81", "171"], ["88", "171"], ["91", "171"], ["91", "171"], ["91", "171"], ["164", "171"], ["164", "171"], ["164", "171"], ["101", "171"], ["100", "171"], ["100", "171"], ["100", "171"], ["114", "171"], ["118", "171"], ["117", "171"], ["127", "171"], ["133", "171"], ["127", "171"], ["126", "171"], ["125", "171"], ["125", "171"], ["117", "171"], ["117", "171"], ["151", "171"], ["153", "171"], ["155", "171"], ["159", "171"], ["155", "171"], ["153", "171"], ["153", "171"], ["96", "171"], ["60", "171"], ["60", "171"], ["66", "171"], ["70", "171"], ["66", "171"], ["66", "171"], ["57", "171"], ["72", "171"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["19", "77"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "72"], ["40", "72"], ["60", "72"], ["45", "72"], ["66", "72"], ["19", "88"], ["77", "164"], ["114", "164"], ["151", "164"], ["19", "164"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["64", "60"], ["70", "66"], ["88", "91"], ["96", "91"], ["19", "91"], ["72", "91"], ["120", "91"], ["118", "96"], ["19", "96"], ["72", "153"], ["102", "153"], ["159", "153"], ["159", "153"], ["37", "64"], ["70", "64"], ["19", "64"], ["64", "70"], ["19", "70"], ["101", "100"], ["101", "100"], ["35", "100"], ["125", "100"], ["19", "100"], ["118", "117"], ["118", "117"], ["125", "117"], ["125", "117"], ["72", "155"], ["102", "155"], ["159", "155"], ["159", "155"], ["102", "101"], ["102", "101"], ["81", "101"], ["153", "101"], ["19", "101"], ["77", "114"], ["151", "114"], ["19", "114"], ["91", "118"], ["19", "118"], ["120", "118"], ["120", "118"], ["126", "125"], ["126", "125"], ["100", "125"], ["19", "125"], ["77", "151"], ["114", "151"], ["19", "151"], ["72", "159"], ["106", "159"], ["144", "159"], ["19", "159"], ["72", "102"], ["60", "102"], ["106", "102"], ["106", "102"], ["72", "120"], ["91", "120"], ["19", "120"], ["127", "126"], ["127", "126"], ["72", "126"], ["102", "126"], ["144", "126"], ["144", "126"], ["72", "106"], ["159", "106"], ["66", "106"], ["19", "106"], ["72", "127"], ["133", "127"], ["133", "127"], ["72", "140"], ["102", "140"], ["144", "140"], ["144", "140"], ["72", "133"], ["19", "133"], ["72", "144"], ["106", "144"], ["19", "144"], ["118", "130"], ["19", "130"], ["19", "136"], ["118", "136"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "66"], ["54", "67"], ["54", "54"], ["54", "61"], ["54", "70"], ["91", "107"], ["91", "160"], ["91", "96"], ["91", "120"], ["91", "102"], ["91", "103"], ["91", "121"], ["91", "95"], ["91", "153"], ["91", "123"], ["91", "106"], ["91", "159"], ["91", "91"], ["91", "93"], ["91", "101"], ["91", "118"], ["91", "100"], ["91", "117"], ["91", "155"], ["91", "156"], ["100", "114"], ["117", "151"], ["118", "141"], ["118", "136"], ["118", "145"], ["118", "128"], ["118", "144"], ["118", "134"], ["118", "140"], ["118", "126"], ["118", "130"], ["118", "127"], ["118", "125"], ["118", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] c: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,c,int[] c = new int[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,c[i] = nextInt())<SUB>8</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>9</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "73": "<(IDENTIFIER,this,sort(c, a))<SUB>11</SUB>>", "75": "<(IDENTIFIER,a,sort(c, a))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int res = 1)<SUB>12</SUB>>", "79": "<(LITERAL,1,int res = 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,double prev = Integer.MIN_VALUE)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.fieldAccess,Integer.MIN_VALUE)<SUB>13</SUB>>", "85": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>13</SUB>>", "87": "<(LOCAL,int i: int)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; c.length)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,c.length)<SUB>14</SUB>>", "95": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,if (c[i] - a[i] / 2d - prev &gt;= t),if (c[i] - a[i] / 2d - prev &gt;= t))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.subtraction,c[i] - a[i] / 2d - prev)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>15</SUB>>", "105": "<(IDENTIFIER,i,c[i] - a[i] / 2d)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,a[i] / 2d)<SUB>15</SUB>>", "111": "<(IDENTIFIER,prev,c[i] - a[i] / 2d - prev)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(IDENTIFIER,res,res++)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.logicalAnd,i != c.length - 1 &amp;&amp; c[i + 1] - a[i + 1] / 2d - (c[i] + a[i] / 2d) &gt; t)<SUB>18</SUB>>", "119": "<(IDENTIFIER,i,i != c.length - 1)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,c.length)<SUB>18</SUB>>", "123": "<(FIELD_IDENTIFIER,length,length)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.greaterThan,c[i + 1] - a[i + 1] / 2d - (c[i] + a[i] / 2d) &gt; t)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.subtraction,c[i + 1] - a[i + 1] / 2d)<SUB>18</SUB>>", "129": "<(IDENTIFIER,c,c[i + 1] - a[i + 1] / 2d)<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.division,a[i + 1] / 2d)<SUB>18</SUB>>", "135": "<(IDENTIFIER,a,a[i + 1] / 2d)<SUB>18</SUB>>", "137": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "139": "<(LITERAL,2d,a[i + 1] / 2d)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>18</SUB>>", "143": "<(IDENTIFIER,i,c[i] + a[i] / 2d)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "147": "<(IDENTIFIER,i,a[i] / 2d)<SUB>18</SUB>>", "149": "<(IDENTIFIER,t,c[i + 1] - a[i + 1] / 2d - (c[i] + a[i] / 2d) &gt; t)<SUB>18</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,res++)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.assignment,prev = c[i] + a[i] / 2d)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.addition,c[i] + a[i] / 2d)<SUB>21</SUB>>", "157": "<(IDENTIFIER,c,c[i] + a[i] / 2d)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.division,a[i] / 2d)<SUB>21</SUB>>", "161": "<(IDENTIFIER,a,a[i] / 2d)<SUB>21</SUB>>", "163": "<(LITERAL,2d,a[i] / 2d)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "167": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "169": "<(MODIFIER,PUBLIC)>", "171": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}