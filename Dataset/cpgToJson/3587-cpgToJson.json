{"edges": [["27", "29"], ["27", "87"], ["27", "88"], ["27", "89"], ["29", "4"], ["29", "30"], ["29", "6"], ["29", "48"], ["29", "8"], ["29", "66"], ["29", "69"], ["29", "10"], ["29", "71"], ["29", "74"], ["29", "12"], ["29", "76"], ["29", "79"], ["29", "80"], ["29", "85"], ["30", "31"], ["30", "37"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["37", "38"], ["38", "39"], ["39", "40"], ["40", "41"], ["40", "44"], ["40", "47"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "55"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "5"], ["53", "54"], ["55", "56"], ["56", "57"], ["57", "58"], ["58", "59"], ["58", "62"], ["58", "65"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "7"], ["69", "70"], ["71", "72"], ["71", "73"], ["74", "9"], ["74", "75"], ["76", "77"], ["76", "78"], ["79", "11"], ["80", "81"], ["80", "82"], ["80", "83"], ["80", "84"], ["85", "86"], ["66", "69"], ["69", "73"], ["71", "74"], ["74", "78"], ["76", "79"], ["79", "80"], ["80", "85"], ["85", "89"], ["68", "66"], ["73", "71"], ["78", "76"], ["32", "35"], ["35", "43"], ["35", "52"], ["50", "53"], ["53", "61"], ["53", "68"], ["34", "32"], ["39", "52"], ["52", "50"], ["57", "68"], ["41", "44"], ["44", "39"], ["59", "62"], ["62", "57"], ["43", "41"], ["61", "59"], ["27", "34"], ["28", "89"], ["32", "89"], ["35", "89"], ["41", "89"], ["44", "89"], ["44", "89"], ["44", "89"], ["39", "89"], ["50", "89"], ["53", "89"], ["59", "89"], ["62", "89"], ["62", "89"], ["62", "89"], ["57", "89"], ["66", "89"], ["69", "89"], ["69", "89"], ["71", "89"], ["74", "89"], ["74", "89"], ["76", "89"], ["79", "89"], ["80", "89"], ["80", "89"], ["80", "89"], ["85", "89"], ["85", "89"], ["27", "28"], ["27", "66"], ["27", "71"], ["27", "76"], ["66", "69"], ["27", "69"], ["35", "69"], ["71", "74"], ["27", "74"], ["53", "74"], ["76", "79"], ["27", "79"], ["79", "80"], ["27", "80"], ["69", "80"], ["74", "80"], ["80", "85"], ["27", "85"], ["27", "32"], ["27", "38"], ["27", "50"], ["27", "56"], ["32", "35"], ["27", "35"], ["50", "53"], ["27", "53"], ["41", "39"], ["44", "39"], ["27", "39"], ["59", "57"], ["62", "57"], ["27", "57"], ["27", "41"], ["27", "47"], ["27", "59"], ["27", "65"], ["41", "44"], ["27", "44"], ["59", "62"], ["27", "62"], ["44", "62"], ["35", "44"], ["35", "41"], ["35", "39"], ["35", "43"], ["53", "61"], ["53", "59"], ["53", "57"], ["53", "62"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "30": "<(CONTROL_STRUCTURE,try,try)<SUB>4</SUB>>", "32": "<(&lt;operator&gt;.assignment,inputStream = new FileInputStream(&quot;input.txt&quot;))<SUB>6</SUB>>", "34": "<(&lt;operator&gt;.alloc,new FileInputStream(&quot;input.txt&quot;))<SUB>6</SUB>>", "3": "<(IDENTIFIER,inputStream,new FileInputStream(&quot;input.txt&quot;))<SUB>6</SUB>>", "37": "<(BLOCK,catch,catch)>", "39": "<(&lt;operator&gt;.throw,throw new RuntimeException(e);)<SUB>9</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new RuntimeException(e))<SUB>9</SUB>>", "45": "<(IDENTIFIER,$obj1,new RuntimeException(e))>", "47": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "48": "<(CONTROL_STRUCTURE,try,try)<SUB>12</SUB>>", "50": "<(&lt;operator&gt;.assignment,outputStream = new FileOutputStream(&quot;output.txt&quot;))<SUB>14</SUB>>", "52": "<(&lt;operator&gt;.alloc,new FileOutputStream(&quot;output.txt&quot;))<SUB>14</SUB>>", "5": "<(IDENTIFIER,outputStream,new FileOutputStream(&quot;output.txt&quot;))<SUB>14</SUB>>", "55": "<(BLOCK,catch,catch)>", "57": "<(&lt;operator&gt;.throw,throw new RuntimeException(e);)<SUB>17</SUB>>", "59": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.alloc,new RuntimeException(e))<SUB>17</SUB>>", "63": "<(IDENTIFIER,$obj3,new RuntimeException(e))>", "65": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "66": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(inputStream))<SUB>19</SUB>>", "68": "<(&lt;operator&gt;.alloc,new FastScanner(inputStream))<SUB>19</SUB>>", "7": "<(IDENTIFIER,in,new FastScanner(inputStream))<SUB>19</SUB>>", "10": "<(LOCAL,FastPrinter out: ANY)<SUB>20</SUB>>", "72": "<(IDENTIFIER,out,ANY out = new FastPrinter(outputStream))<SUB>20</SUB>>", "74": "<(&lt;init&gt;,new FastPrinter(outputStream))<SUB>20</SUB>>", "75": "<(IDENTIFIER,outputStream,new FastPrinter(outputStream))<SUB>20</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY solver = new TaskC())<SUB>21</SUB>>", "78": "<(&lt;operator&gt;.alloc,new TaskC())<SUB>21</SUB>>", "11": "<(IDENTIFIER,solver,new TaskC())<SUB>21</SUB>>", "81": "<(IDENTIFIER,solver,solve(1, in, out))<SUB>22</SUB>>", "83": "<(IDENTIFIER,in,solve(1, in, out))<SUB>22</SUB>>", "85": "<(close,close())<SUB>23</SUB>>", "87": "<(MODIFIER,PUBLIC)>", "89": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}