{"edges": [["19", "21"], ["19", "317"], ["19", "318"], ["19", "319"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "36"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "46"], ["21", "53"], ["21", "57"], ["21", "64"], ["21", "107"], ["21", "112"], ["21", "139"], ["21", "140"], ["21", "144"], ["21", "178"], ["21", "179"], ["21", "182"], ["21", "312"], ["21", "315"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["59", "62"], ["59", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "105"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "134"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "142"], ["142", "143"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "152"], ["144", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "156"], ["154", "157"], ["154", "161"], ["154", "165"], ["157", "158"], ["157", "159"], ["159", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["169", "177"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["173", "176"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["182", "187"], ["182", "192"], ["182", "194"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "200"], ["194", "204"], ["194", "205"], ["194", "206"], ["194", "207"], ["194", "210"], ["194", "213"], ["194", "216"], ["194", "217"], ["194", "221"], ["194", "222"], ["194", "227"], ["194", "281"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "202"], ["202", "203"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["219", "220"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["227", "232"], ["227", "235"], ["227", "237"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["238", "242"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "250"], ["242", "257"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["257", "258"], ["257", "265"], ["257", "267"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["265", "266"], ["267", "268"], ["268", "269"], ["268", "276"], ["268", "278"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["276", "277"], ["278", "279"], ["279", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "287"], ["285", "290"], ["285", "291"], ["285", "294"], ["285", "303"], ["285", "306"], ["285", "309"], ["287", "288"], ["287", "289"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["296", "299"], ["296", "300"], ["296", "301"], ["296", "302"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["315", "316"], ["22", "29"], ["27", "33"], ["30", "38"], ["36", "42"], ["40", "50"], ["46", "55"], ["53", "59"], ["57", "66"], ["107", "114"], ["140", "146"], ["179", "184"], ["312", "315"], ["315", "319"], ["24", "22"], ["29", "27"], ["31", "30"], ["38", "36"], ["42", "40"], ["48", "46"], ["55", "53"], ["59", "57"], ["66", "69"], ["69", "77"], ["69", "108"], ["72", "69"], ["108", "107"], ["114", "117"], ["117", "124"], ["117", "142"], ["120", "117"], ["142", "140"], ["146", "149"], ["149", "159"], ["149", "179"], ["152", "149"], ["184", "189"], ["187", "196"], ["187", "312"], ["192", "189"], ["26", "24"], ["33", "31"], ["49", "48"], ["123", "135"], ["134", "120"], ["157", "163"], ["161", "166"], ["165", "152"], ["189", "187"], ["196", "202"], ["200", "207"], ["207", "210"], ["210", "213"], ["213", "219"], ["217", "224"], ["222", "229"], ["50", "49"], ["77", "80"], ["80", "88"], ["80", "72"], ["83", "80"], ["124", "131"], ["127", "123"], ["135", "134"], ["159", "157"], ["163", "161"], ["166", "172"], ["202", "200"], ["219", "217"], ["224", "222"], ["229", "232"], ["232", "239"], ["232", "282"], ["235", "232"], ["282", "287"], ["282", "192"], ["129", "127"], ["170", "173"], ["173", "165"], ["287", "291"], ["291", "296"], ["294", "303"], ["303", "306"], ["306", "309"], ["309", "192"], ["88", "91"], ["91", "100"], ["91", "83"], ["94", "91"], ["96", "94"], ["131", "129"], ["172", "170"], ["239", "246"], ["239", "235"], ["296", "294"], ["98", "105"], ["105", "96"], ["243", "253"], ["250", "260"], ["99", "98"], ["245", "243"], ["252", "250"], ["258", "265"], ["258", "271"], ["265", "235"], ["100", "99"], ["246", "249"], ["249", "245"], ["253", "256"], ["256", "252"], ["259", "258"], ["260", "263"], ["263", "259"], ["269", "276"], ["269", "279"], ["276", "235"], ["270", "269"], ["279", "235"], ["271", "274"], ["274", "270"], ["19", "26"], ["20", "319"], ["22", "319"], ["22", "319"], ["27", "319"], ["30", "319"], ["30", "319"], ["36", "319"], ["40", "319"], ["42", "319"], ["40", "319"], ["40", "319"], ["46", "319"], ["48", "319"], ["46", "319"], ["46", "319"], ["53", "319"], ["53", "319"], ["53", "319"], ["57", "319"], ["57", "319"], ["57", "319"], ["69", "319"], ["107", "319"], ["107", "319"], ["114", "319"], ["117", "319"], ["140", "319"], ["140", "319"], ["140", "319"], ["149", "319"], ["179", "319"], ["184", "319"], ["187", "319"], ["189", "319"], ["187", "319"], ["187", "319"], ["312", "319"], ["312", "319"], ["315", "319"], ["315", "319"], ["196", "319"], ["200", "319"], ["200", "319"], ["200", "319"], ["207", "319"], ["207", "319"], ["210", "319"], ["210", "319"], ["213", "319"], ["213", "319"], ["217", "319"], ["217", "319"], ["222", "319"], ["224", "319"], ["222", "319"], ["222", "319"], ["229", "319"], ["232", "319"], ["232", "319"], ["282", "319"], ["282", "319"], ["282", "319"], ["287", "319"], ["291", "319"], ["291", "319"], ["296", "319"], ["296", "319"], ["296", "319"], ["294", "319"], ["294", "319"], ["306", "319"], ["306", "319"], ["309", "319"], ["192", "319"], ["239", "319"], ["239", "319"], ["243", "319"], ["250", "319"], ["250", "319"], ["258", "319"], ["269", "319"], ["279", "319"], ["279", "319"], ["276", "319"], ["276", "319"], ["265", "319"], ["265", "319"], ["235", "319"], ["157", "319"], ["163", "319"], ["161", "319"], ["161", "319"], ["165", "319"], ["170", "319"], ["173", "319"], ["173", "319"], ["173", "319"], ["173", "319"], ["165", "319"], ["152", "319"], ["127", "319"], ["123", "319"], ["123", "319"], ["134", "319"], ["134", "319"], ["120", "319"], ["77", "319"], ["80", "319"], ["80", "319"], ["72", "319"], ["88", "319"], ["91", "319"], ["91", "319"], ["83", "319"], ["96", "319"], ["96", "319"], ["96", "319"], ["94", "319"], ["96", "319"], ["224", "319"], ["296", "319"], ["19", "20"], ["19", "27"], ["38", "36"], ["42", "40"], ["19", "46"], ["55", "53"], ["59", "57"], ["59", "57"], ["19", "107"], ["142", "140"], ["19", "179"], ["19", "22"], ["27", "30"], ["19", "30"], ["19", "66"], ["19", "114"], ["19", "146"], ["19", "184"], ["30", "312"], ["19", "312"], ["179", "312"], ["309", "312"], ["312", "315"], ["19", "315"], ["22", "38"], ["19", "38"], ["38", "42"], ["19", "42"], ["19", "48"], ["19", "55"], ["19", "59"], ["66", "69"], ["72", "69"], ["19", "69"], ["69", "72"], ["19", "72"], ["114", "117"], ["120", "117"], ["19", "117"], ["127", "120"], ["19", "120"], ["127", "123"], ["127", "123"], ["46", "134"], ["19", "134"], ["36", "142"], ["19", "142"], ["146", "149"], ["152", "149"], ["19", "149"], ["142", "149"], ["149", "152"], ["19", "152"], ["159", "157"], ["163", "161"], ["170", "165"], ["173", "165"], ["19", "165"], ["184", "187"], ["192", "187"], ["19", "187"], ["189", "187"], ["189", "187"], ["219", "192"], ["19", "192"], ["19", "196"], ["202", "200"], ["19", "207"], ["19", "210"], ["19", "213"], ["219", "217"], ["224", "222"], ["224", "222"], ["19", "49"], ["19", "77"], ["53", "134"], ["123", "134"], ["19", "189"], ["149", "189"], ["232", "189"], ["19", "229"], ["77", "80"], ["83", "80"], ["19", "80"], ["80", "83"], ["19", "83"], ["131", "127"], ["19", "127"], ["53", "127"], ["42", "159"], ["163", "159"], ["19", "159"], ["159", "163"], ["19", "163"], ["19", "170"], ["19", "177"], ["19", "202"], ["187", "219"], ["19", "219"], ["19", "224"], ["217", "224"], ["229", "232"], ["235", "232"], ["19", "232"], ["189", "232"], ["239", "235"], ["19", "235"], ["196", "282"], ["243", "282"], ["19", "282"], ["40", "282"], ["19", "287"], ["19", "291"], ["296", "294"], ["296", "294"], ["296", "294"], ["296", "294"], ["296", "294"], ["296", "294"], ["296", "303"], ["19", "303"], ["303", "306"], ["19", "306"], ["19", "309"], ["296", "309"], ["19", "88"], ["170", "173"], ["19", "173"], ["157", "173"], ["161", "173"], ["287", "294"], ["19", "294"], ["294", "303"], ["179", "306"], ["309", "306"], ["306", "309"], ["88", "91"], ["94", "91"], ["19", "91"], ["91", "94"], ["19", "94"], ["19", "96"], ["105", "96"], ["117", "131"], ["19", "131"], ["222", "239"], ["19", "239"], ["232", "239"], ["19", "296"], ["207", "296"], ["265", "296"], ["210", "296"], ["276", "296"], ["213", "296"], ["279", "296"], ["46", "296"], ["19", "105"], ["196", "243"], ["19", "243"], ["19", "258"], ["207", "265"], ["19", "265"], ["258", "269"], ["19", "269"], ["210", "276"], ["19", "276"], ["213", "279"], ["19", "279"], ["69", "77"], ["69", "69"], ["69", "80"], ["69", "72"], ["117", "120"], ["117", "131"], ["117", "129"], ["117", "134"], ["117", "127"], ["117", "123"], ["117", "135"], ["117", "117"], ["117", "124"], ["149", "161"], ["149", "163"], ["149", "149"], ["149", "170"], ["149", "173"], ["149", "152"], ["149", "166"], ["149", "157"], ["149", "159"], ["149", "165"], ["149", "172"], ["187", "282"], ["187", "192"], ["187", "196"], ["187", "232"], ["187", "189"], ["187", "213"], ["187", "187"], ["187", "207"], ["187", "224"], ["187", "202"], ["187", "210"], ["187", "200"], ["187", "217"], ["187", "229"], ["187", "222"], ["187", "219"], ["80", "91"], ["80", "80"], ["80", "88"], ["80", "83"], ["232", "232"], ["232", "239"], ["232", "235"], ["282", "291"], ["282", "309"], ["282", "306"], ["282", "296"], ["282", "287"], ["282", "294"], ["282", "303"], ["91", "94"], ["91", "96"], ["91", "98"], ["91", "91"], ["91", "100"], ["91", "99"], ["91", "105"], ["239", "243"], ["239", "245"], ["239", "256"], ["239", "259"], ["239", "246"], ["239", "258"], ["239", "249"], ["239", "252"], ["239", "260"], ["239", "253"], ["239", "263"], ["239", "250"], ["258", "265"], ["258", "274"], ["258", "270"], ["258", "271"], ["258", "269"], ["269", "279"], ["269", "276"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,Reader,init(System.in))<SUB>3</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>3</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "35": "<(LOCAL,int t: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,Reader,nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,Reader,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,long[] fact: long[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,mod,long mod = (long) 1e9 + 7)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.cast,(long) 1e9)<SUB>6</SUB>>", "51": "<(LITERAL,1e9,(long) 1e9)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,long[] fact = new long[16])<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.alloc,new long[16])>", "57": "<(&lt;operator&gt;.assignment,dp = new long[16][16][16][4])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new long[16][16][16][4])>", "61": "<(LITERAL,16,new long[16][16][16][4])<SUB>7</SUB>>", "63": "<(LITERAL,4,new long[16][16][16][4])<SUB>7</SUB>>", "65": "<(LOCAL,int i: int)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; 16)<SUB>8</SUB>>", "71": "<(LITERAL,16,i &lt; 16)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 16); j++),for (int j = 0; Some(j &lt; 16); j++))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "81": "<(IDENTIFIER,j,j &lt; 16)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "87": "<(LOCAL,int k: int)<SUB>10</SUB>>", "89": "<(IDENTIFIER,k,int k = 0)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.lessThan,k &lt; 16)<SUB>10</SUB>>", "93": "<(LITERAL,16,k &lt; 16)<SUB>10</SUB>>", "95": "<(IDENTIFIER,k,k++)<SUB>10</SUB>>", "97": "<(IDENTIFIER,Arrays,fill(dp[i][j][k], -1))<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>11</SUB>>", "101": "<(IDENTIFIER,dp,fill(dp[i][j][k], -1))<SUB>11</SUB>>", "103": "<(IDENTIFIER,j,fill(dp[i][j][k], -1))<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.minus,-1)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.assignment,fact[0] = 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,fact,fact[0] = 1)<SUB>14</SUB>>", "111": "<(LITERAL,1,fact[0] = 1)<SUB>14</SUB>>", "113": "<(LOCAL,int i: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,int i = 1)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 15)<SUB>15</SUB>>", "119": "<(LITERAL,15,i &lt;= 15)<SUB>15</SUB>>", "121": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.assignment,fact[i] = i * fact[i - 1])<SUB>16</SUB>>", "125": "<(IDENTIFIER,fact,fact[i] = i * fact[i - 1])<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.multiplication,i * fact[i - 1])<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,fact[i - 1])<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>16</SUB>>", "133": "<(LITERAL,1,i - 1)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,fact[i])<SUB>17</SUB>>", "137": "<(IDENTIFIER,i,fact[i] %= mod)<SUB>17</SUB>>", "139": "<(LOCAL,NoD[] arr: ANY)<SUB>19</SUB>>", "141": "<(IDENTIFIER,arr,ANY arr = new NoD[n])<SUB>19</SUB>>", "143": "<(IDENTIFIER,n,new NoD[n])<SUB>19</SUB>>", "145": "<(LOCAL,int i: int)<SUB>20</SUB>>", "147": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "151": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "153": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "155": "<(LOCAL,int a: int)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>21</SUB>>", "159": "<(nextInt,nextInt())<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>21</SUB>>", "163": "<(nextInt,nextInt())<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.assignment,arr[i] = new NoD(a, b))<SUB>22</SUB>>", "167": "<(IDENTIFIER,arr,arr[i] = new NoD(a, b))<SUB>22</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "171": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "173": "<(&lt;init&gt;,new NoD(a, b))<SUB>22</SUB>>", "175": "<(IDENTIFIER,a,new NoD(a, b))<SUB>22</SUB>>", "177": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "179": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>25</SUB>>", "181": "<(LITERAL,0,long ans = 0)<SUB>25</SUB>>", "183": "<(LOCAL,int i: int)<SUB>26</SUB>>", "185": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>26</SUB>>", "191": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>26</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "195": "<(LOCAL,int time: int)<SUB>27</SUB>>", "197": "<(IDENTIFIER,time,int time = 0)<SUB>27</SUB>>", "199": "<(LOCAL,int prev: int)<SUB>28</SUB>>", "201": "<(IDENTIFIER,prev,int prev = -1)<SUB>28</SUB>>", "203": "<(LITERAL,1,-1)<SUB>28</SUB>>", "205": "<(LOCAL,int t2: int)<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.assignment,int t1 = 0)<SUB>29</SUB>>", "209": "<(LITERAL,0,int t1 = 0)<SUB>29</SUB>>", "211": "<(IDENTIFIER,t2,int t2 = 0)<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.assignment,int t3 = 0)<SUB>29</SUB>>", "215": "<(LITERAL,0,int t3 = 0)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.assignment,long[] c = { i })<SUB>30</SUB>>", "219": "<(&lt;operator&gt;.arrayInitializer,{ i })<SUB>30</SUB>>", "221": "<(LOCAL,BitSet b: ANY)<SUB>31</SUB>>", "223": "<(IDENTIFIER,b,ANY b = valueOf(c))<SUB>31</SUB>>", "225": "<(IDENTIFIER,BitSet,valueOf(c))<SUB>31</SUB>>", "227": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>32</SUB>>", "229": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>32</SUB>>", "231": "<(LITERAL,0,int j = 0)<SUB>32</SUB>>", "233": "<(IDENTIFIER,j,j &lt; n)<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,j++)<SUB>32</SUB>>", "237": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "239": "<(get,get(j))<SUB>33</SUB>>", "241": "<(IDENTIFIER,j,get(j))<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.assignmentPlus,time += arr[j].val)<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.fieldAccess,arr[j].val)<SUB>34</SUB>>", "247": "<(IDENTIFIER,arr,time += arr[j].val)<SUB>34</SUB>>", "249": "<(FIELD_IDENTIFIER,val,val)<SUB>34</SUB>>", "251": "<(IDENTIFIER,prev,prev = arr[j].index)<SUB>35</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>35</SUB>>", "255": "<(IDENTIFIER,j,prev = arr[j].index)<SUB>35</SUB>>", "257": "<(CONTROL_STRUCTURE,if (arr[j].index == 1),if (arr[j].index == 1))<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.fieldAccess,arr[j].index)<SUB>36</SUB>>", "261": "<(IDENTIFIER,arr,arr[j].index == 1)<SUB>36</SUB>>", "263": "<(FIELD_IDENTIFIER,index,index)<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.postIncrement,t1++)<SUB>36</SUB>>", "267": "<(CONTROL_STRUCTURE,else,else)<SUB>37</SUB>>", "269": "<(&lt;operator&gt;.equals,arr[j].index == 2)<SUB>37</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>37</SUB>>", "273": "<(IDENTIFIER,j,arr[j].index == 2)<SUB>37</SUB>>", "275": "<(LITERAL,2,arr[j].index == 2)<SUB>37</SUB>>", "277": "<(IDENTIFIER,t2,t2++)<SUB>37</SUB>>", "279": "<(&lt;operator&gt;.postIncrement,t3++)<SUB>38</SUB>>", "281": "<(CONTROL_STRUCTURE,if (time == t),if (time == t))<SUB>41</SUB>>", "283": "<(IDENTIFIER,time,time == t)<SUB>41</SUB>>", "285": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "287": "<(&lt;operator&gt;.assignment,long v = 1)<SUB>42</SUB>>", "289": "<(LITERAL,1,long v = 1)<SUB>42</SUB>>", "291": "<(&lt;operator&gt;.assignment,long v2 = 1)<SUB>43</SUB>>", "293": "<(LITERAL,1,long v2 = 1)<SUB>43</SUB>>", "295": "<(IDENTIFIER,v,v *= solve(t1, t2, t3, 0, mod))<SUB>44</SUB>>", "297": "<(IDENTIFIER,this,solve(t1, t2, t3, 0, mod))<SUB>44</SUB>>", "299": "<(IDENTIFIER,t2,solve(t1, t2, t3, 0, mod))<SUB>44</SUB>>", "301": "<(LITERAL,0,solve(t1, t2, t3, 0, mod))<SUB>44</SUB>>", "303": "<(&lt;operators&gt;.assignmentModulo,v %= mod)<SUB>45</SUB>>", "305": "<(IDENTIFIER,mod,v %= mod)<SUB>45</SUB>>", "307": "<(IDENTIFIER,ans,ans += v)<SUB>46</SUB>>", "309": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>47</SUB>>", "311": "<(IDENTIFIER,mod,ans %= mod)<SUB>47</SUB>>", "313": "<(IDENTIFIER,out,println(ans))<SUB>50</SUB>>", "315": "<(flush,flush())<SUB>51</SUB>>", "317": "<(MODIFIER,PUBLIC)>", "319": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}