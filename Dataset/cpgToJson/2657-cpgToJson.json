{"edges": [["21", "22"], ["21", "23"], ["21", "120"], ["21", "121"], ["21", "122"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "57"], ["23", "6"], ["23", "60"], ["23", "63"], ["23", "64"], ["23", "114"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "5"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "80"], ["74", "84"], ["74", "106"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "87"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "93"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "109"], ["107", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["57", "62"], ["60", "63"], ["63", "66"], ["114", "122"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "52"], ["46", "57"], ["49", "46"], ["51", "49"], ["62", "60"], ["66", "69"], ["69", "76"], ["69", "117"], ["72", "69"], ["115", "118"], ["118", "114"], ["30", "28"], ["52", "55"], ["55", "51"], ["76", "82"], ["80", "85"], ["117", "115"], ["82", "80"], ["85", "91"], ["85", "107"], ["107", "111"], ["107", "72"], ["109", "72"], ["89", "96"], ["111", "109"], ["91", "89"], ["94", "85"], ["94", "102"], ["95", "94"], ["102", "107"], ["96", "95"], ["21", "26"], ["22", "122"], ["24", "122"], ["27", "122"], ["27", "122"], ["34", "122"], ["32", "122"], ["32", "122"], ["37", "122"], ["37", "122"], ["57", "122"], ["57", "122"], ["60", "122"], ["63", "122"], ["66", "122"], ["69", "122"], ["69", "122"], ["69", "122"], ["114", "122"], ["118", "122"], ["114", "122"], ["114", "122"], ["76", "122"], ["80", "122"], ["85", "122"], ["85", "122"], ["91", "122"], ["89", "122"], ["95", "122"], ["95", "122"], ["94", "122"], ["94", "122"], ["102", "122"], ["107", "122"], ["107", "122"], ["109", "122"], ["109", "122"], ["72", "122"], ["51", "122"], ["55", "122"], ["51", "122"], ["51", "122"], ["49", "122"], ["57", "122"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "60"], ["24", "27"], ["21", "27"], ["21", "43"], ["55", "51"], ["21", "57"], ["37", "57"], ["51", "57"], ["60", "63"], ["21", "63"], ["21", "66"], ["118", "114"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["66", "69"], ["72", "69"], ["21", "69"], ["46", "69"], ["69", "72"], ["21", "72"], ["21", "76"], ["82", "80"], ["63", "118"], ["82", "118"], ["109", "118"], ["21", "118"], ["34", "55"], ["21", "55"], ["63", "82"], ["109", "82"], ["21", "82"], ["80", "85"], ["91", "85"], ["21", "85"], ["91", "89"], ["76", "107"], ["102", "107"], ["21", "107"], ["82", "109"], ["21", "109"], ["57", "109"], ["95", "109"], ["51", "109"], ["85", "91"], ["21", "91"], ["95", "94"], ["95", "94"], ["21", "94"], ["21", "102"], ["57", "95"], ["109", "95"], ["51", "95"], ["89", "95"], ["21", "95"], ["46", "49"], ["46", "51"], ["46", "52"], ["46", "46"], ["46", "55"], ["69", "107"], ["69", "80"], ["69", "85"], ["69", "72"], ["69", "69"], ["69", "76"], ["69", "82"], ["85", "94"], ["85", "96"], ["85", "89"], ["85", "95"], ["85", "91"], ["107", "111"], ["107", "109"], ["94", "102"], ["94", "85"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "55": "<(nextInt,nextInt())<SUB>6</SUB>>", "57": "<(sort,sort(arr))<SUB>7</SUB>>", "59": "<(IDENTIFIER,arr,sort(arr))<SUB>7</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;Integer&gt;())<SUB>8</SUB>>", "62": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>8</SUB>>", "5": "<(IDENTIFIER,set,new TreeSet&lt;Integer&gt;())<SUB>8</SUB>>", "65": "<(LOCAL,int i: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "75": "<(LOCAL,boolean flag: boolean)<SUB>10</SUB>>", "77": "<(IDENTIFIER,flag,boolean flag = false)<SUB>10</SUB>>", "79": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>11</SUB>>", "81": "<(IDENTIFIER,$iterLocal0,)<SUB>11</SUB>>", "83": "<(IDENTIFIER,set,&lt;empty&gt;)<SUB>11</SUB>>", "85": "<(hasNext,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>11</SUB>>", "91": "<(next,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,if (arr[i] % x == 0),if (arr[i] % x == 0))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.modulo,arr[i] % x)<SUB>12</SUB>>", "97": "<(IDENTIFIER,arr,arr[i] % x)<SUB>12</SUB>>", "99": "<(IDENTIFIER,x,arr[i] % x)<SUB>12</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "103": "<(IDENTIFIER,flag,flag = true)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,break;,break;)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.logicalNot,!flag)<SUB>17</SUB>>", "109": "<(add,add(arr[i]))<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,add(arr[i]))<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "117": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "119": "<(IDENTIFIER,set,size())<SUB>20</SUB>>", "121": "<(MODIFIER,STATIC)>"}}