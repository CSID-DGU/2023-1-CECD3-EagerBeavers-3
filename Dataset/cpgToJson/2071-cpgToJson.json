{"edges": [["21", "23"], ["21", "127"], ["21", "128"], ["21", "129"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "58"], ["23", "6"], ["23", "61"], ["23", "64"], ["23", "68"], ["23", "69"], ["23", "72"], ["23", "93"], ["23", "99"], ["23", "120"], ["23", "125"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "5"], ["64", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "96"], ["94", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["58", "63"], ["61", "67"], ["64", "69"], ["69", "74"], ["125", "129"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "58"], ["49", "46"], ["63", "61"], ["65", "64"], ["74", "77"], ["77", "84"], ["77", "94"], ["80", "77"], ["94", "96"], ["94", "101"], ["96", "101"], ["101", "106"], ["104", "121"], ["104", "112"], ["109", "106"], ["121", "122"], ["121", "125"], ["122", "125"], ["30", "28"], ["52", "49"], ["67", "65"], ["83", "89"], ["83", "80"], ["106", "104"], ["112", "117"], ["115", "109"], ["53", "56"], ["56", "52"], ["84", "83"], ["89", "94"], ["117", "115"], ["21", "26"], ["22", "129"], ["24", "129"], ["27", "129"], ["27", "129"], ["34", "129"], ["32", "129"], ["32", "129"], ["37", "129"], ["37", "129"], ["58", "129"], ["58", "129"], ["61", "129"], ["64", "129"], ["64", "129"], ["69", "129"], ["77", "129"], ["83", "129"], ["83", "129"], ["80", "129"], ["89", "129"], ["94", "129"], ["94", "129"], ["96", "129"], ["101", "129"], ["104", "129"], ["106", "129"], ["104", "129"], ["104", "129"], ["122", "129"], ["125", "129"], ["125", "129"], ["112", "129"], ["115", "129"], ["115", "129"], ["109", "129"], ["52", "129"], ["56", "129"], ["52", "129"], ["52", "129"], ["49", "129"], ["58", "129"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "61"], ["21", "69"], ["24", "27"], ["21", "27"], ["21", "43"], ["21", "58"], ["37", "58"], ["52", "58"], ["61", "64"], ["21", "64"], ["21", "74"], ["21", "101"], ["21", "121"], ["64", "125"], ["96", "125"], ["122", "125"], ["115", "125"], ["21", "125"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["56", "52"], ["74", "77"], ["80", "77"], ["21", "77"], ["46", "77"], ["77", "80"], ["21", "80"], ["69", "94"], ["89", "94"], ["21", "94"], ["64", "96"], ["21", "96"], ["101", "104"], ["109", "104"], ["21", "104"], ["106", "104"], ["106", "104"], ["104", "109"], ["21", "109"], ["64", "122"], ["96", "122"], ["115", "122"], ["21", "122"], ["58", "83"], ["52", "83"], ["21", "83"], ["21", "89"], ["77", "106"], ["21", "106"], ["64", "112"], ["96", "112"], ["115", "112"], ["21", "112"], ["112", "115"], ["21", "115"], ["58", "115"], ["83", "115"], ["52", "115"], ["34", "56"], ["21", "56"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "53"], ["46", "56"], ["77", "83"], ["77", "84"], ["94", "96"], ["104", "115"], ["104", "104"], ["104", "117"], ["104", "106"], ["104", "112"], ["104", "109"], ["121", "122"], ["83", "80"], ["83", "77"], ["83", "89"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int n: int)<SUB>5</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] mas = new int[n])<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,mas[i])<SUB>10</SUB>>", "55": "<(IDENTIFIER,i,mas[i] = nextInt())<SUB>10</SUB>>", "57": "<(IDENTIFIER,in,nextInt())<SUB>10</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(mas))<SUB>13</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>15</SUB>>", "62": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>15</SUB>>", "64": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>15</SUB>>", "65": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "67": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "69": "<(&lt;operator&gt;.assignment,boolean isEd = true)<SUB>17</SUB>>", "71": "<(LITERAL,true,boolean isEd = true)<SUB>17</SUB>>", "73": "<(LOCAL,int i: int)<SUB>18</SUB>>", "75": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "83": "<(&lt;operator&gt;.notEquals,mas[i] != 1)<SUB>19</SUB>>", "85": "<(IDENTIFIER,mas,mas[i] != 1)<SUB>19</SUB>>", "87": "<(LITERAL,1,mas[i] != 1)<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.assignment,isEd = false)<SUB>20</SUB>>", "91": "<(LITERAL,false,isEd = false)<SUB>20</SUB>>", "93": "<(CONTROL_STRUCTURE,if (!isEd),if (!isEd))<SUB>24</SUB>>", "95": "<(IDENTIFIER,isEd,!isEd)<SUB>24</SUB>>", "97": "<(IDENTIFIER,out,print('1'))<SUB>25</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>27</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "105": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>27</SUB>>", "107": "<(IDENTIFIER,n,n - 1)<SUB>27</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "113": "<(IDENTIFIER,out,print(' '))<SUB>28</SUB>>", "115": "<(print,print(mas[i]))<SUB>29</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,mas[i])<SUB>29</SUB>>", "119": "<(IDENTIFIER,i,print(mas[i]))<SUB>29</SUB>>", "121": "<(IDENTIFIER,isEd,if (isEd))<SUB>32</SUB>>", "123": "<(IDENTIFIER,out,print(&quot; 2&quot;))<SUB>33</SUB>>", "125": "<(flush,flush())<SUB>35</SUB>>", "127": "<(MODIFIER,PUBLIC)>", "129": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}