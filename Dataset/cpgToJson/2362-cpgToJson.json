{"edges": [["17", "18"], ["17", "19"], ["17", "134"], ["17", "135"], ["17", "136"], ["19", "20"], ["19", "21"], ["19", "22"], ["19", "26"], ["19", "29"], ["19", "30"], ["19", "35"], ["19", "70"], ["19", "71"], ["19", "76"], ["19", "77"], ["19", "81"], ["19", "132"], ["22", "23"], ["22", "24"], ["24", "25"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["46", "47"], ["46", "48"], ["46", "53"], ["46", "56"], ["46", "58"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["59", "60"], ["59", "67"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "86"], ["82", "83"], ["82", "85"], ["83", "84"], ["86", "87"], ["86", "88"], ["86", "89"], ["86", "93"], ["86", "97"], ["86", "98"], ["86", "109"], ["86", "119"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "108"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["119", "127"], ["120", "121"], ["120", "122"], ["123", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["128", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["22", "26"], ["26", "32"], ["30", "37"], ["71", "79"], ["77", "83"], ["132", "136"], ["24", "22"], ["32", "30"], ["37", "40"], ["40", "50"], ["40", "73"], ["43", "40"], ["73", "71"], ["79", "77"], ["82", "91"], ["82", "132"], ["83", "82"], ["89", "95"], ["93", "103"], ["98", "110"], ["48", "53"], ["53", "61"], ["53", "43"], ["56", "53"], ["91", "89"], ["95", "93"], ["100", "98"], ["110", "116"], ["110", "120"], ["120", "124"], ["120", "129"], ["50", "48"], ["101", "100"], ["114", "120"], ["124", "83"], ["60", "68"], ["60", "56"], ["102", "101"], ["116", "114"], ["129", "83"], ["61", "64"], ["64", "60"], ["68", "56"], ["103", "102"], ["17", "24"], ["18", "136"], ["22", "136"], ["26", "136"], ["30", "136"], ["30", "136"], ["30", "136"], ["37", "136"], ["40", "136"], ["40", "136"], ["40", "136"], ["71", "136"], ["73", "136"], ["71", "136"], ["71", "136"], ["79", "136"], ["77", "136"], ["77", "136"], ["83", "136"], ["82", "136"], ["82", "136"], ["132", "136"], ["132", "136"], ["89", "136"], ["95", "136"], ["93", "136"], ["93", "136"], ["103", "136"], ["103", "136"], ["102", "136"], ["101", "136"], ["100", "136"], ["98", "136"], ["98", "136"], ["110", "136"], ["110", "136"], ["114", "136"], ["114", "136"], ["120", "136"], ["120", "136"], ["129", "136"], ["124", "136"], ["48", "136"], ["48", "136"], ["53", "136"], ["53", "136"], ["43", "136"], ["60", "136"], ["60", "136"], ["60", "136"], ["68", "136"], ["56", "136"], ["17", "18"], ["24", "22"], ["17", "26"], ["32", "30"], ["32", "30"], ["73", "71"], ["73", "71"], ["79", "77"], ["17", "37"], ["129", "132"], ["124", "132"], ["17", "132"], ["17", "24"], ["24", "32"], ["17", "32"], ["22", "32"], ["37", "40"], ["43", "40"], ["17", "40"], ["32", "40"], ["53", "40"], ["17", "43"], ["40", "43"], ["26", "73"], ["68", "73"], ["17", "73"], ["32", "79"], ["17", "79"], ["83", "82"], ["17", "82"], ["91", "89"], ["95", "93"], ["100", "98"], ["100", "98"], ["40", "48"], ["17", "48"], ["77", "83"], ["17", "83"], ["48", "53"], ["56", "53"], ["17", "53"], ["40", "53"], ["53", "56"], ["17", "56"], ["79", "91"], ["95", "91"], ["17", "91"], ["91", "95"], ["17", "95"], ["101", "100"], ["101", "100"], ["17", "100"], ["98", "110"], ["17", "110"], ["116", "114"], ["116", "114"], ["71", "120"], ["114", "120"], ["17", "120"], ["40", "50"], ["17", "50"], ["103", "101"], ["103", "101"], ["17", "101"], ["129", "124"], ["17", "124"], ["30", "60"], ["103", "102"], ["103", "102"], ["17", "102"], ["17", "116"], ["71", "116"], ["120", "116"], ["124", "129"], ["17", "129"], ["26", "68"], ["17", "68"], ["93", "103"], ["17", "103"], ["89", "103"], ["40", "48"], ["40", "40"], ["40", "50"], ["40", "43"], ["40", "53"], ["82", "89"], ["82", "98"], ["82", "120"], ["82", "102"], ["82", "103"], ["82", "95"], ["82", "91"], ["82", "82"], ["82", "93"], ["82", "101"], ["82", "83"], ["82", "100"], ["82", "110"], ["53", "60"], ["53", "64"], ["53", "56"], ["53", "61"], ["53", "53"], ["110", "116"], ["110", "114"], ["120", "129"], ["120", "124"], ["60", "68"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(LOCAL,int inv: int)<SUB>7</SUB>>", "23": "<(IDENTIFIER,n,int n = nextInt())<SUB>7</SUB>>", "25": "<(IDENTIFIER,scn,nextInt())<SUB>7</SUB>>", "27": "<(IDENTIFIER,inv,int inv = 0)<SUB>7</SUB>>", "29": "<(LOCAL,int[] arr: int[])<SUB>8</SUB>>", "31": "<(IDENTIFIER,arr,int[] arr = nextIntArr(n))<SUB>8</SUB>>", "33": "<(IDENTIFIER,scn,nextIntArr(n))<SUB>8</SUB>>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "41": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "43": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "47": "<(LOCAL,int j: int)<SUB>10</SUB>>", "49": "<(IDENTIFIER,j,int j = i + 1)<SUB>10</SUB>>", "51": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>10</SUB>>", "55": "<(IDENTIFIER,n,j &lt; n)<SUB>10</SUB>>", "57": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "59": "<(CONTROL_STRUCTURE,if (arr[i] &gt; arr[j]),if (arr[i] &gt; arr[j]))<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>11</SUB>>", "63": "<(IDENTIFIER,i,arr[i] &gt; arr[j])<SUB>11</SUB>>", "65": "<(IDENTIFIER,arr,arr[i] &gt; arr[j])<SUB>11</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "69": "<(IDENTIFIER,inv,inv++)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,int ans = inv % 2)<SUB>17</SUB>>", "73": "<(&lt;operator&gt;.modulo,inv % 2)<SUB>17</SUB>>", "75": "<(LITERAL,2,inv % 2)<SUB>17</SUB>>", "77": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>19</SUB>>", "79": "<(nextInt,nextInt())<SUB>19</SUB>>", "81": "<(CONTROL_STRUCTURE,while (m-- &gt; 0),while (m-- &gt; 0))<SUB>20</SUB>>", "83": "<(&lt;operator&gt;.postDecrement,m--)<SUB>20</SUB>>", "85": "<(LITERAL,0,m-- &gt; 0)<SUB>20</SUB>>", "87": "<(LOCAL,int l: int)<SUB>21</SUB>>", "89": "<(&lt;operator&gt;.assignment,int l = nextInt())<SUB>21</SUB>>", "91": "<(nextInt,nextInt())<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>21</SUB>>", "95": "<(nextInt,nextInt())<SUB>21</SUB>>", "97": "<(LOCAL,int change: int)<SUB>23</SUB>>", "99": "<(IDENTIFIER,change,int change = ((r - l + 1) / 2) % 2)<SUB>23</SUB>>", "101": "<(&lt;operator&gt;.division,(r - l + 1) / 2)<SUB>23</SUB>>", "103": "<(&lt;operator&gt;.subtraction,r - l)<SUB>23</SUB>>", "105": "<(IDENTIFIER,l,r - l)<SUB>23</SUB>>", "107": "<(LITERAL,2,(r - l + 1) / 2)<SUB>23</SUB>>", "109": "<(CONTROL_STRUCTURE,if (change == 1),if (change == 1))<SUB>25</SUB>>", "111": "<(IDENTIFIER,change,change == 1)<SUB>25</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "115": "<(IDENTIFIER,ans,ans = 1 - ans)<SUB>26</SUB>>", "117": "<(LITERAL,1,1 - ans)<SUB>26</SUB>>", "119": "<(CONTROL_STRUCTURE,if (ans == 0),if (ans == 0))<SUB>29</SUB>>", "121": "<(IDENTIFIER,ans,ans == 0)<SUB>29</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "125": "<(IDENTIFIER,out,println(&quot;even&quot;))<SUB>30</SUB>>", "127": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "129": "<(println,println(&quot;odd&quot;))<SUB>32</SUB>>", "131": "<(LITERAL,&quot;odd&quot;,println(&quot;odd&quot;))<SUB>32</SUB>>", "133": "<(IDENTIFIER,out,close())<SUB>36</SUB>>", "135": "<(MODIFIER,STATIC)>"}}