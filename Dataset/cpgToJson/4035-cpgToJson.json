{"edges": [["22", "24"], ["22", "323"], ["22", "324"], ["22", "325"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "110"], ["24", "111"], ["24", "118"], ["24", "124"], ["24", "247"], ["24", "248"], ["24", "251"], ["24", "318"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "78"], ["74", "81"], ["74", "82"], ["74", "88"], ["74", "89"], ["74", "97"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "96"], ["92", "93"], ["92", "94"], ["94", "95"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "105"], ["101", "109"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["118", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "134"], ["124", "136"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "155"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["155", "162"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "172"], ["162", "198"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "185"], ["173", "174"], ["174", "175"], ["174", "182"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "197"], ["186", "187"], ["186", "194"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["198", "199"], ["199", "200"], ["200", "201"], ["200", "202"], ["200", "205"], ["200", "208"], ["200", "210"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "234"], ["217", "218"], ["217", "229"], ["218", "219"], ["218", "226"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "246"], ["235", "236"], ["235", "243"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["251", "256"], ["251", "261"], ["251", "263"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["263", "264"], ["263", "265"], ["263", "268"], ["263", "271"], ["263", "273"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["271", "272"], ["273", "274"], ["273", "275"], ["273", "278"], ["273", "303"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["278", "283"], ["278", "286"], ["278", "288"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["286", "287"], ["288", "289"], ["288", "296"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "317"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "66"], ["111", "120"], ["118", "126"], ["248", "253"], ["318", "325"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["66", "69"], ["69", "77"], ["69", "114"], ["72", "69"], ["113", "111"], ["120", "118"], ["126", "133"], ["129", "139"], ["129", "248"], ["134", "133"], ["253", "260"], ["256", "265"], ["256", "321"], ["261", "260"], ["319", "318"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["75", "79"], ["78", "86"], ["82", "94"], ["89", "98"], ["97", "72"], ["114", "113"], ["131", "129"], ["258", "256"], ["265", "268"], ["268", "275"], ["268", "261"], ["271", "268"], ["321", "319"], ["32", "30"], ["35", "33"], ["77", "75"], ["79", "78"], ["84", "82"], ["91", "89"], ["98", "104"], ["133", "131"], ["139", "142"], ["142", "151"], ["142", "134"], ["145", "142"], ["260", "258"], ["275", "280"], ["37", "35"], ["86", "84"], ["92", "91"], ["102", "105"], ["105", "97"], ["148", "159"], ["148", "145"], ["280", "283"], ["283", "292"], ["283", "304"], ["286", "283"], ["304", "313"], ["304", "271"], ["307", "271"], ["94", "92"], ["104", "102"], ["149", "148"], ["157", "164"], ["289", "299"], ["289", "286"], ["296", "286"], ["309", "307"], ["151", "149"], ["159", "157"], ["163", "179"], ["163", "202"], ["290", "289"], ["298", "296"], ["310", "309"], ["164", "163"], ["164", "170"], ["167", "163"], ["173", "191"], ["185", "145"], ["292", "290"], ["299", "302"], ["302", "298"], ["312", "310"], ["168", "167"], ["174", "173"], ["186", "185"], ["313", "312"], ["170", "168"], ["175", "184"], ["182", "174"], ["187", "196"], ["194", "186"], ["202", "205"], ["205", "215"], ["205", "145"], ["208", "205"], ["177", "175"], ["184", "182"], ["189", "187"], ["196", "194"], ["211", "223"], ["211", "208"], ["179", "177"], ["191", "189"], ["213", "211"], ["217", "240"], ["234", "208"], ["215", "213"], ["218", "230"], ["229", "217"], ["235", "234"], ["219", "228"], ["226", "218"], ["230", "229"], ["236", "245"], ["243", "235"], ["221", "219"], ["228", "226"], ["238", "236"], ["245", "243"], ["223", "221"], ["240", "238"], ["22", "27"], ["23", "325"], ["25", "325"], ["30", "325"], ["33", "325"], ["33", "325"], ["33", "325"], ["28", "325"], ["39", "325"], ["43", "325"], ["42", "325"], ["42", "325"], ["46", "325"], ["53", "325"], ["55", "325"], ["57", "325"], ["55", "325"], ["53", "325"], ["53", "325"], ["60", "325"], ["60", "325"], ["60", "325"], ["66", "325"], ["69", "325"], ["69", "325"], ["111", "325"], ["114", "325"], ["113", "325"], ["111", "325"], ["111", "325"], ["118", "325"], ["118", "325"], ["126", "325"], ["248", "325"], ["253", "325"], ["256", "325"], ["256", "325"], ["256", "325"], ["318", "325"], ["318", "325"], ["318", "325"], ["265", "325"], ["268", "325"], ["268", "325"], ["261", "325"], ["275", "325"], ["280", "325"], ["283", "325"], ["283", "325"], ["283", "325"], ["304", "325"], ["304", "325"], ["304", "325"], ["310", "325"], ["309", "325"], ["309", "325"], ["307", "325"], ["307", "325"], ["271", "325"], ["290", "325"], ["289", "325"], ["289", "325"], ["296", "325"], ["286", "325"], ["139", "325"], ["142", "325"], ["142", "325"], ["142", "325"], ["134", "325"], ["149", "325"], ["148", "325"], ["148", "325"], ["157", "325"], ["157", "325"], ["157", "325"], ["163", "325"], ["167", "325"], ["167", "325"], ["163", "325"], ["163", "325"], ["202", "325"], ["205", "325"], ["205", "325"], ["211", "325"], ["211", "325"], ["217", "325"], ["217", "325"], ["238", "325"], ["234", "325"], ["234", "325"], ["208", "325"], ["173", "325"], ["189", "325"], ["185", "325"], ["185", "325"], ["145", "325"], ["75", "325"], ["79", "325"], ["78", "325"], ["78", "325"], ["82", "325"], ["92", "325"], ["94", "325"], ["92", "325"], ["91", "325"], ["89", "325"], ["89", "325"], ["97", "325"], ["102", "325"], ["105", "325"], ["105", "325"], ["105", "325"], ["105", "325"], ["97", "325"], ["72", "325"], ["118", "325"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["113", "111"], ["113", "111"], ["22", "248"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "66"], ["22", "118"], ["111", "118"], ["22", "126"], ["22", "253"], ["248", "318"], ["307", "318"], ["22", "318"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["66", "69"], ["72", "69"], ["22", "69"], ["62", "69"], ["69", "72"], ["22", "72"], ["22", "75"], ["84", "82"], ["84", "82"], ["91", "89"], ["91", "89"], ["102", "97"], ["105", "97"], ["22", "97"], ["114", "113"], ["114", "113"], ["22", "113"], ["126", "129"], ["134", "129"], ["22", "129"], ["111", "129"], ["129", "134"], ["149", "134"], ["164", "134"], ["238", "134"], ["189", "134"], ["22", "134"], ["253", "256"], ["261", "256"], ["22", "256"], ["111", "256"], ["129", "256"], ["256", "261"], ["290", "261"], ["22", "261"], ["22", "265"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["75", "78"], ["22", "78"], ["79", "78"], ["22", "114"], ["69", "114"], ["22", "139"], ["265", "268"], ["271", "268"], ["22", "268"], ["268", "271"], ["22", "271"], ["22", "275"], ["43", "79"], ["22", "79"], ["55", "84"], ["92", "84"], ["22", "84"], ["86", "84"], ["92", "91"], ["92", "91"], ["22", "91"], ["22", "102"], ["22", "109"], ["139", "142"], ["145", "142"], ["22", "142"], ["114", "142"], ["151", "145"], ["240", "145"], ["191", "145"], ["22", "145"], ["22", "280"], ["309", "307"], ["309", "307"], ["78", "86"], ["22", "86"], ["84", "92"], ["22", "92"], ["94", "92"], ["102", "105"], ["22", "105"], ["82", "105"], ["89", "105"], ["149", "148"], ["149", "148"], ["22", "148"], ["60", "157"], ["97", "157"], ["280", "283"], ["286", "283"], ["22", "283"], ["114", "283"], ["142", "283"], ["292", "286"], ["22", "286"], ["275", "304"], ["296", "304"], ["22", "304"], ["53", "304"], ["167", "304"], ["86", "94"], ["22", "94"], ["129", "149"], ["164", "149"], ["238", "149"], ["189", "149"], ["22", "149"], ["151", "149"], ["151", "149"], ["290", "289"], ["290", "289"], ["22", "289"], ["275", "296"], ["22", "296"], ["248", "309"], ["307", "309"], ["22", "309"], ["22", "151"], ["142", "151"], ["164", "163"], ["164", "163"], ["167", "163"], ["167", "163"], ["22", "185"], ["256", "290"], ["22", "290"], ["292", "290"], ["292", "290"], ["248", "310"], ["307", "310"], ["22", "310"], ["149", "164"], ["22", "164"], ["157", "167"], ["53", "167"], ["22", "167"], ["234", "173"], ["185", "173"], ["173", "185"], ["22", "292"], ["283", "292"], ["22", "202"], ["202", "205"], ["208", "205"], ["22", "205"], ["211", "208"], ["22", "208"], ["164", "177"], ["22", "177"], ["179", "177"], ["179", "177"], ["177", "189"], ["22", "189"], ["191", "189"], ["191", "189"], ["205", "211"], ["22", "211"], ["157", "211"], ["22", "234"], ["22", "179"], ["151", "179"], ["22", "191"], ["179", "191"], ["234", "217"], ["185", "217"], ["217", "234"], ["164", "221"], ["238", "221"], ["22", "221"], ["223", "221"], ["223", "221"], ["221", "238"], ["22", "238"], ["240", "238"], ["240", "238"], ["22", "223"], ["151", "223"], ["240", "223"], ["22", "240"], ["223", "240"], ["69", "84"], ["69", "102"], ["69", "104"], ["69", "86"], ["69", "72"], ["69", "94"], ["69", "77"], ["69", "98"], ["69", "75"], ["69", "69"], ["69", "92"], ["69", "97"], ["69", "91"], ["69", "79"], ["69", "89"], ["69", "82"], ["69", "105"], ["69", "78"], ["129", "129"], ["129", "134"], ["129", "133"], ["129", "131"], ["129", "139"], ["129", "142"], ["256", "256"], ["256", "258"], ["256", "268"], ["256", "260"], ["256", "261"], ["256", "265"], ["268", "283"], ["268", "268"], ["268", "304"], ["268", "275"], ["268", "280"], ["268", "271"], ["142", "148"], ["142", "145"], ["142", "149"], ["142", "151"], ["142", "142"], ["148", "163"], ["148", "159"], ["148", "164"], ["148", "157"], ["283", "292"], ["283", "290"], ["283", "283"], ["283", "289"], ["283", "286"], ["304", "310"], ["304", "307"], ["304", "309"], ["304", "313"], ["304", "312"], ["289", "298"], ["289", "302"], ["289", "296"], ["289", "299"], ["163", "196"], ["163", "184"], ["163", "174"], ["163", "194"], ["163", "182"], ["163", "186"], ["163", "202"], ["163", "177"], ["163", "179"], ["163", "185"], ["163", "189"], ["163", "191"], ["163", "187"], ["163", "173"], ["163", "205"], ["163", "175"], ["164", "167"], ["164", "168"], ["164", "170"], ["205", "215"], ["205", "213"], ["205", "208"], ["205", "205"], ["205", "211"], ["211", "230"], ["211", "240"], ["211", "226"], ["211", "243"], ["211", "228"], ["211", "238"], ["211", "236"], ["211", "217"], ["211", "229"], ["211", "245"], ["211", "223"], ["211", "221"], ["211", "235"], ["211", "234"], ["211", "218"], ["211", "219"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "44": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "46": "<(&lt;operator&gt;.assignment,int N = parseInt(st.nextToken()))<SUB>5</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "50": "<(nextToken,nextToken())<SUB>5</SUB>>", "52": "<(LOCAL,int T: int)<SUB>6</SUB>>", "54": "<(IDENTIFIER,T,int T = parseInt(st.nextToken()))<SUB>6</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY arr = new Song[N])<SUB>7</SUB>>", "62": "<(&lt;operator&gt;.alloc,new Song[N])>", "64": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>8</SUB>>", "66": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "68": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "70": "<(IDENTIFIER,i,i &lt; N)<SUB>8</SUB>>", "72": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "74": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "76": "<(IDENTIFIER,st,st = new StringTokenizer(infile.readLine()))<SUB>10</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(infile.readLine()))<SUB>10</SUB>>", "79": "<(readLine,readLine())<SUB>10</SUB>>", "81": "<(LOCAL,int a: int)<SUB>11</SUB>>", "83": "<(IDENTIFIER,a,int a = parseInt(st.nextToken()))<SUB>11</SUB>>", "85": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "87": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,int b = Integer.parseInt(st.nextToken()) - 1)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.subtraction,Integer.parseInt(st.nextToken()) - 1)<SUB>12</SUB>>", "93": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>12</SUB>>", "95": "<(IDENTIFIER,st,nextToken())<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,arr[i] = new Song(a, b))<SUB>13</SUB>>", "99": "<(IDENTIFIER,arr,arr[i] = new Song(a, b))<SUB>13</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "105": "<(&lt;init&gt;,new Song(a, b))<SUB>13</SUB>>", "107": "<(IDENTIFIER,a,new Song(a, b))<SUB>13</SUB>>", "109": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "111": "<(&lt;operator&gt;.assignment,long[][] dp = new long[1 &lt;&lt; N][3])<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; N][3])>", "115": "<(LITERAL,1,1 &lt;&lt; N)<SUB>16</SUB>>", "117": "<(LITERAL,3,new long[1 &lt;&lt; N][3])<SUB>16</SUB>>", "119": "<(IDENTIFIER,Arrays,fill(dp[0], 1L))<SUB>17</SUB>>", "121": "<(IDENTIFIER,dp,fill(dp[0], 1L))<SUB>17</SUB>>", "123": "<(LITERAL,1L,fill(dp[0], 1L))<SUB>17</SUB>>", "125": "<(LOCAL,int mask: int)<SUB>18</SUB>>", "127": "<(IDENTIFIER,mask,int mask = 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.lessThan,mask &lt; dp.length)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,dp.length)<SUB>18</SUB>>", "133": "<(FIELD_IDENTIFIER,length,length)<SUB>18</SUB>>", "135": "<(IDENTIFIER,mask,mask++)<SUB>18</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "141": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "143": "<(IDENTIFIER,i,i &lt; N)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "147": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) == 0),if ((mask &amp; (1 &lt;&lt; i)) == 0))<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>21</SUB>>", "153": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>21</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.assignment,ANY c = arr[i])<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>23</SUB>>", "161": "<(IDENTIFIER,i,ANY c = arr[i])<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.logicalAnd,mask == 0 &amp;&amp; c.t &lt;= T)<SUB>25</SUB>>", "165": "<(IDENTIFIER,mask,mask == 0)<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.lessEqualsThan,c.t &lt;= T)<SUB>25</SUB>>", "169": "<(IDENTIFIER,c,c.t &lt;= T)<SUB>25</SUB>>", "171": "<(IDENTIFIER,T,c.t &lt;= T)<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,dp[mask | (1 &lt;&lt; i)][c.g]++)<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,dp[mask | (1 &lt;&lt; i)])<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.or,mask | (1 &lt;&lt; i))<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>27</SUB>>", "181": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>27</SUB>>", "183": "<(IDENTIFIER,c,dp[mask | (1 &lt;&lt; i)][c.g]++)<SUB>27</SUB>>", "185": "<(&lt;operators&gt;.assignmentModulo,dp[mask | (1 &lt;&lt; i)][c.g] %= MOD)<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[mask | (1 &lt;&lt; i)])<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.or,mask | (1 &lt;&lt; i))<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>28</SUB>>", "193": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>28</SUB>>", "195": "<(IDENTIFIER,c,dp[mask | (1 &lt;&lt; i)][c.g] %= MOD)<SUB>28</SUB>>", "197": "<(IDENTIFIER,MOD,dp[mask | (1 &lt;&lt; i)][c.g] %= MOD)<SUB>28</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "201": "<(LOCAL,int gen: int)<SUB>33</SUB>>", "203": "<(IDENTIFIER,gen,int gen = 0)<SUB>33</SUB>>", "205": "<(&lt;operator&gt;.lessThan,gen &lt; 3)<SUB>33</SUB>>", "207": "<(LITERAL,3,gen &lt; 3)<SUB>33</SUB>>", "209": "<(IDENTIFIER,gen,gen++)<SUB>33</SUB>>", "211": "<(&lt;operator&gt;.notEquals,gen != c.g)<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,c.g)<SUB>34</SUB>>", "215": "<(FIELD_IDENTIFIER,g,g)<SUB>34</SUB>>", "217": "<(&lt;operator&gt;.assignmentPlus,dp[mask | (1 &lt;&lt; i)][c.g] += dp[mask][gen])<SUB>36</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[mask | (1 &lt;&lt; i)])<SUB>36</SUB>>", "221": "<(&lt;operator&gt;.or,mask | (1 &lt;&lt; i))<SUB>36</SUB>>", "223": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>36</SUB>>", "225": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>36</SUB>>", "227": "<(IDENTIFIER,c,dp[mask | (1 &lt;&lt; i)][c.g] += dp[mask][gen])<SUB>36</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[mask][gen])<SUB>36</SUB>>", "231": "<(IDENTIFIER,dp,dp[mask | (1 &lt;&lt; i)][c.g] += dp[mask][gen])<SUB>36</SUB>>", "233": "<(IDENTIFIER,gen,dp[mask | (1 &lt;&lt; i)][c.g] += dp[mask][gen])<SUB>36</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[mask | (1 &lt;&lt; i)][c.g])<SUB>37</SUB>>", "237": "<(IDENTIFIER,dp,dp[mask | (1 &lt;&lt; i)][c.g] %= MOD)<SUB>37</SUB>>", "239": "<(IDENTIFIER,mask,mask | (1 &lt;&lt; i))<SUB>37</SUB>>", "241": "<(LITERAL,1,1 &lt;&lt; i)<SUB>37</SUB>>", "243": "<(&lt;operator&gt;.fieldAccess,c.g)<SUB>37</SUB>>", "245": "<(FIELD_IDENTIFIER,g,g)<SUB>37</SUB>>", "247": "<(LOCAL,long res: long)<SUB>43</SUB>>", "249": "<(IDENTIFIER,res,long res = 0L)<SUB>43</SUB>>", "251": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; dp.length); mask++),for (int mask = 1; Some(mask &lt; dp.length); mask++))<SUB>44</SUB>>", "253": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>44</SUB>>", "255": "<(LITERAL,1,int mask = 1)<SUB>44</SUB>>", "257": "<(IDENTIFIER,mask,mask &lt; dp.length)<SUB>44</SUB>>", "259": "<(IDENTIFIER,dp,mask &lt; dp.length)<SUB>44</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>44</SUB>>", "263": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 3); i++),for (int i = 0; Some(i &lt; 3); i++))<SUB>45</SUB>>", "265": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>45</SUB>>", "267": "<(LITERAL,0,int i = 0)<SUB>45</SUB>>", "269": "<(IDENTIFIER,i,i &lt; 3)<SUB>45</SUB>>", "271": "<(&lt;operator&gt;.postIncrement,i++)<SUB>45</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "275": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>47</SUB>>", "277": "<(LITERAL,0,int sum = 0)<SUB>47</SUB>>", "279": "<(LOCAL,int b: int)<SUB>48</SUB>>", "281": "<(IDENTIFIER,b,int b = 0)<SUB>48</SUB>>", "283": "<(&lt;operator&gt;.lessThan,b &lt; N)<SUB>48</SUB>>", "285": "<(IDENTIFIER,N,b &lt; N)<SUB>48</SUB>>", "287": "<(IDENTIFIER,b,b++)<SUB>48</SUB>>", "289": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>49</SUB>>", "291": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; b))<SUB>49</SUB>>", "293": "<(LITERAL,1,1 &lt;&lt; b)<SUB>49</SUB>>", "295": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>49</SUB>>", "297": "<(IDENTIFIER,sum,sum += arr[b].t)<SUB>50</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,arr[b])<SUB>50</SUB>>", "301": "<(IDENTIFIER,b,sum += arr[b].t)<SUB>50</SUB>>", "303": "<(CONTROL_STRUCTURE,if (sum == T),if (sum == T))<SUB>51</SUB>>", "305": "<(IDENTIFIER,sum,sum == T)<SUB>51</SUB>>", "307": "<(&lt;operator&gt;.assignment,res = (res + dp[mask][i]) % MOD)<SUB>52</SUB>>", "309": "<(&lt;operator&gt;.modulo,(res + dp[mask][i]) % MOD)<SUB>52</SUB>>", "311": "<(IDENTIFIER,res,res + dp[mask][i])<SUB>52</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>52</SUB>>", "315": "<(IDENTIFIER,mask,res + dp[mask][i])<SUB>52</SUB>>", "317": "<(IDENTIFIER,MOD,(res + dp[mask][i]) % MOD)<SUB>52</SUB>>", "319": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>54</SUB>>", "321": "<(FIELD_IDENTIFIER,out,out)<SUB>54</SUB>>", "323": "<(MODIFIER,PUBLIC)>", "325": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}