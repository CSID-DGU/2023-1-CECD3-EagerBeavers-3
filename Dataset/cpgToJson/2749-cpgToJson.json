{"edges": [["19", "20"], ["19", "21"], ["19", "112"], ["19", "113"], ["19", "114"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["43", "44"], ["44", "45"], ["45", "46"], ["45", "51"], ["45", "98"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["51", "54"], ["51", "57"], ["51", "60"], ["51", "77"], ["51", "79"], ["51", "90"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "41"], ["35", "47"], ["38", "114"], ["28", "26"], ["39", "38"], ["41", "39"], ["46", "54"], ["46", "102"], ["47", "46"], ["54", "57"], ["57", "62"], ["77", "84"], ["79", "93"], ["90", "114"], ["99", "114"], ["61", "71"], ["61", "77"], ["66", "77"], ["81", "79"], ["91", "94"], ["94", "90"], ["100", "106"], ["103", "99"], ["62", "61"], ["68", "66"], ["82", "87"], ["87", "81"], ["93", "91"], ["102", "100"], ["104", "109"], ["109", "103"], ["69", "74"], ["74", "68"], ["84", "82"], ["106", "104"], ["71", "69"], ["19", "24"], ["20", "114"], ["22", "114"], ["25", "114"], ["25", "114"], ["32", "114"], ["30", "114"], ["30", "114"], ["35", "114"], ["38", "114"], ["38", "114"], ["38", "114"], ["94", "114"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["35", "38"], ["19", "38"], ["47", "46"], ["47", "46"], ["19", "46"], ["19", "54"], ["19", "57"], ["81", "79"], ["81", "79"], ["35", "47"], ["19", "47"], ["68", "66"], ["68", "66"], ["62", "77"], ["74", "77"], ["19", "77"], ["94", "90"], ["94", "90"], ["94", "90"], ["103", "99"], ["103", "99"], ["62", "61"], ["62", "61"], ["19", "61"], ["82", "81"], ["82", "81"], ["87", "81"], ["87", "81"], ["19", "94"], ["54", "94"], ["66", "94"], ["79", "94"], ["104", "103"], ["104", "103"], ["109", "103"], ["109", "103"], ["47", "62"], ["19", "62"], ["69", "68"], ["69", "68"], ["74", "68"], ["74", "68"], ["84", "82"], ["19", "82"], ["84", "82"], ["82", "87"], ["19", "87"], ["106", "104"], ["19", "104"], ["106", "104"], ["104", "109"], ["19", "109"], ["71", "69"], ["19", "69"], ["71", "69"], ["69", "74"], ["19", "74"], ["77", "84"], ["19", "84"], ["47", "106"], ["19", "106"], ["62", "71"], ["19", "71"], ["35", "47"], ["35", "46"], ["35", "38"], ["35", "41"], ["35", "39"], ["46", "94"], ["46", "77"], ["46", "57"], ["46", "99"], ["46", "81"], ["46", "84"], ["46", "102"], ["46", "103"], ["46", "104"], ["46", "106"], ["46", "87"], ["46", "91"], ["46", "82"], ["46", "93"], ["46", "90"], ["46", "54"], ["46", "79"], ["46", "61"], ["46", "100"], ["46", "109"], ["46", "62"], ["61", "68"], ["61", "66"], ["61", "69"], ["61", "74"], ["61", "71"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY stdin = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,stdin,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,stdin,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.lessThan,n &lt; 3)<SUB>4</SUB>>", "37": "<(LITERAL,3,n &lt; 3)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "41": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "43": "<(CONTROL_STRUCTURE,else,else)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "49": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(LOCAL,long b: long)<SUB>7</SUB>>", "55": "<(IDENTIFIER,a,long a = 0)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,long b = 0)<SUB>7</SUB>>", "59": "<(LITERAL,0,long b = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.notEquals,n % 3 != 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,n,n % 3)<SUB>8</SUB>>", "65": "<(LITERAL,0,n % 3 != 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,a,a = n * (n - 1) * (n - 3))<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>8</SUB>>", "73": "<(LITERAL,1,n - 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,n,n - 3)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.postDecrement,n--)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,b = n * (n - 1) * (n - 2))<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 2))<SUB>10</SUB>>", "83": "<(IDENTIFIER,n,n * (n - 1))<SUB>10</SUB>>", "85": "<(IDENTIFIER,n,n - 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>10</SUB>>", "89": "<(LITERAL,2,n - 2)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "95": "<(IDENTIFIER,Math,Math.max(a, b))<SUB>11</SUB>>", "97": "<(IDENTIFIER,b,Math.max(a, b))<SUB>11</SUB>>", "99": "<(println,System.out.println(n * (n - 1) * (n - 2)))<SUB>13</SUB>>", "101": "<(IDENTIFIER,System,System.out.println(n * (n - 1) * (n - 2)))<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 2))<SUB>13</SUB>>", "105": "<(IDENTIFIER,n,n * (n - 1))<SUB>13</SUB>>", "107": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>13</SUB>>", "111": "<(LITERAL,2,n - 2)<SUB>13</SUB>>", "113": "<(MODIFIER,STATIC)>"}}