{"edges": [["21", "23"], ["21", "175"], ["21", "176"], ["21", "177"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "154"], ["23", "171"], ["23", "173"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "74"], ["68", "75"], ["68", "80"], ["68", "144"], ["68", "149"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "123"], ["91", "92"], ["91", "103"], ["92", "93"], ["92", "100"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["106", "109"], ["109", "110"], ["109", "111"], ["109", "116"], ["109", "119"], ["109", "122"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "135"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["138", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "167"], ["165", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "60"], ["171", "173"], ["173", "177"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["60", "63"], ["63", "72"], ["63", "156"], ["66", "63"], ["156", "159"], ["159", "168"], ["159", "171"], ["162", "159"], ["30", "28"], ["37", "35"], ["70", "78"], ["75", "82"], ["144", "150"], ["149", "66"], ["165", "162"], ["72", "70"], ["77", "75"], ["82", "85"], ["85", "97"], ["85", "145"], ["88", "85"], ["145", "144"], ["150", "149"], ["168", "165"], ["78", "77"], ["92", "112"], ["92", "129"], ["124", "141"], ["124", "88"], ["93", "100"], ["100", "92"], ["104", "129"], ["125", "132"], ["132", "124"], ["136", "88"], ["95", "93"], ["106", "104"], ["127", "125"], ["138", "136"], ["97", "95"], ["109", "106"], ["129", "127"], ["141", "138"], ["111", "116"], ["116", "120"], ["119", "109"], ["112", "113"], ["113", "111"], ["120", "119"], ["21", "26"], ["22", "177"], ["24", "177"], ["27", "177"], ["27", "177"], ["31", "177"], ["34", "177"], ["34", "177"], ["39", "177"], ["44", "177"], ["46", "177"], ["44", "177"], ["44", "177"], ["49", "177"], ["49", "177"], ["49", "177"], ["54", "177"], ["54", "177"], ["54", "177"], ["156", "177"], ["159", "177"], ["159", "177"], ["159", "177"], ["171", "177"], ["173", "177"], ["173", "177"], ["165", "177"], ["165", "177"], ["162", "177"], ["72", "177"], ["70", "177"], ["70", "177"], ["77", "177"], ["75", "177"], ["75", "177"], ["82", "177"], ["85", "177"], ["85", "177"], ["144", "177"], ["144", "177"], ["144", "177"], ["149", "177"], ["149", "177"], ["149", "177"], ["66", "177"], ["92", "177"], ["109", "177"], ["109", "177"], ["109", "177"], ["106", "177"], ["104", "177"], ["104", "177"], ["125", "177"], ["127", "177"], ["125", "177"], ["124", "177"], ["132", "177"], ["124", "177"], ["124", "177"], ["138", "177"], ["138", "177"], ["136", "177"], ["136", "177"], ["88", "177"], ["109", "177"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "60"], ["21", "156"], ["34", "171"], ["165", "171"], ["21", "171"], ["171", "173"], ["21", "173"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["51", "56"], ["21", "56"], ["60", "63"], ["66", "63"], ["21", "63"], ["56", "63"], ["85", "66"], ["21", "66"], ["72", "70"], ["21", "75"], ["44", "75"], ["132", "75"], ["70", "144"], ["127", "144"], ["21", "144"], ["75", "149"], ["104", "149"], ["136", "149"], ["21", "149"], ["156", "159"], ["162", "159"], ["21", "159"], ["63", "159"], ["159", "162"], ["21", "162"], ["21", "82"], ["34", "165"], ["21", "165"], ["54", "165"], ["149", "165"], ["46", "72"], ["21", "72"], ["21", "77"], ["44", "77"], ["132", "77"], ["82", "85"], ["88", "85"], ["21", "85"], ["63", "85"], ["85", "88"], ["21", "88"], ["93", "92"], ["93", "92"], ["100", "92"], ["100", "92"], ["106", "104"], ["106", "104"], ["106", "104"], ["125", "124"], ["125", "124"], ["132", "124"], ["132", "124"], ["138", "136"], ["138", "136"], ["138", "136"], ["125", "93"], ["138", "93"], ["21", "93"], ["95", "93"], ["95", "93"], ["21", "100"], ["132", "100"], ["44", "100"], ["93", "125"], ["106", "125"], ["21", "125"], ["127", "125"], ["127", "125"], ["21", "132"], ["100", "132"], ["109", "132"], ["70", "95"], ["127", "95"], ["21", "95"], ["49", "95"], ["127", "95"], ["93", "106"], ["21", "106"], ["75", "106"], ["104", "106"], ["136", "106"], ["109", "106"], ["109", "106"], ["109", "106"], ["109", "106"], ["109", "106"], ["95", "127"], ["21", "127"], ["49", "127"], ["95", "127"], ["125", "138"], ["21", "138"], ["75", "138"], ["104", "138"], ["136", "138"], ["54", "138"], ["109", "138"], ["21", "109"], ["49", "109"], ["95", "109"], ["54", "109"], ["138", "109"], ["95", "109"], ["100", "109"], ["21", "111"], ["49", "111"], ["95", "111"], ["21", "119"], ["95", "119"], ["63", "77"], ["63", "66"], ["63", "75"], ["63", "145"], ["63", "85"], ["63", "72"], ["63", "149"], ["63", "150"], ["63", "144"], ["63", "82"], ["63", "70"], ["63", "63"], ["63", "78"], ["159", "162"], ["159", "168"], ["159", "159"], ["159", "165"], ["85", "85"], ["85", "132"], ["85", "95"], ["85", "92"], ["85", "97"], ["85", "129"], ["85", "93"], ["85", "100"], ["85", "88"], ["85", "127"], ["85", "124"], ["85", "125"], ["92", "120"], ["92", "113"], ["92", "116"], ["92", "104"], ["92", "119"], ["92", "106"], ["92", "112"], ["92", "111"], ["92", "109"], ["124", "141"], ["124", "136"], ["124", "138"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new InputReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int r: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,r,int r = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,reader,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(LOCAL,double[] y: double[])<SUB>7</SUB>>", "55": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,new double[n])<SUB>7</SUB>>", "59": "<(LOCAL,int i: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,++i)<SUB>9</SUB>>", "69": "<(LOCAL,int iniX: int)<SUB>10</SUB>>", "71": "<(IDENTIFIER,iniX,int iniX = nextInt())<SUB>10</SUB>>", "73": "<(IDENTIFIER,reader,nextInt())<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,double bestY = (double) r)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.cast,(double) r)<SUB>11</SUB>>", "79": "<(IDENTIFIER,r,(double) r)<SUB>11</SUB>>", "81": "<(LOCAL,int j: int)<SUB>12</SUB>>", "83": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,j &lt; i)<SUB>12</SUB>>", "89": "<(IDENTIFIER,j,++j)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,if (Math.abs(iniX - x[j]) &lt; 2 * r),if (Math.abs(iniX - x[j]) &lt; 2 * r))<SUB>14</SUB>>", "93": "<(abs,Math.abs(iniX - x[j]))<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.subtraction,iniX - x[j])<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>14</SUB>>", "99": "<(IDENTIFIER,j,iniX - x[j])<SUB>14</SUB>>", "101": "<(LITERAL,2,2 * r)<SUB>14</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "105": "<(IDENTIFIER,bestY,bestY = max(bestY, collisionY((double) x[j], y[j], (double) iniX, r)))<SUB>16</SUB>>", "107": "<(IDENTIFIER,Math,max(bestY, collisionY((double) x[j], y[j], (double) iniX, r)))<SUB>16</SUB>>", "109": "<(collisionY,collisionY((double) x[j], y[j], (double) iniX, r))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.cast,(double) x[j])<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>16</SUB>>", "115": "<(IDENTIFIER,j,(double) x[j])<SUB>16</SUB>>", "117": "<(IDENTIFIER,y,collisionY((double) x[j], y[j], (double) iniX, r))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.cast,(double) iniX)<SUB>16</SUB>>", "121": "<(IDENTIFIER,iniX,(double) iniX)<SUB>16</SUB>>", "123": "<(CONTROL_STRUCTURE,if (Math.abs(iniX - x[j]) == 2 * r),if (Math.abs(iniX - x[j]) == 2 * r))<SUB>18</SUB>>", "125": "<(abs,Math.abs(iniX - x[j]))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.subtraction,iniX - x[j])<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>18</SUB>>", "131": "<(IDENTIFIER,j,iniX - x[j])<SUB>18</SUB>>", "133": "<(LITERAL,2,2 * r)<SUB>18</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "137": "<(IDENTIFIER,bestY,bestY = Math.max(bestY, y[j]))<SUB>20</SUB>>", "139": "<(IDENTIFIER,Math,Math.max(bestY, y[j]))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>20</SUB>>", "143": "<(IDENTIFIER,j,Math.max(bestY, y[j]))<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>23</SUB>>", "147": "<(IDENTIFIER,i,x[i] = iniX)<SUB>23</SUB>>", "149": "<(&lt;operator&gt;.assignment,y[i] = bestY)<SUB>24</SUB>>", "151": "<(IDENTIFIER,y,y[i] = bestY)<SUB>24</SUB>>", "153": "<(IDENTIFIER,bestY,y[i] = bestY)<SUB>24</SUB>>", "155": "<(LOCAL,int i: int)<SUB>26</SUB>>", "157": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "159": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "161": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "163": "<(IDENTIFIER,i,++i)<SUB>26</SUB>>", "165": "<(printf,printf(&quot;%.9f &quot;, y[i]))<SUB>27</SUB>>", "167": "<(LITERAL,&quot;%.9f &quot;,printf(&quot;%.9f &quot;, y[i]))<SUB>27</SUB>>", "169": "<(IDENTIFIER,y,printf(&quot;%.9f &quot;, y[i]))<SUB>27</SUB>>", "171": "<(flush,flush())<SUB>29</SUB>>", "173": "<(close,close())<SUB>30</SUB>>", "175": "<(MODIFIER,PUBLIC)>", "177": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}