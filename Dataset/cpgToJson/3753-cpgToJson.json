{"edges": [["21", "23"], ["21", "225"], ["21", "226"], ["21", "227"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "35"], ["23", "39"], ["23", "44"], ["23", "6"], ["23", "73"], ["23", "76"], ["23", "77"], ["23", "81"], ["23", "159"], ["23", "163"], ["23", "189"], ["23", "198"], ["23", "199"], ["23", "203"], ["23", "217"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "54"], ["44", "56"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "68"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "67"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["76", "5"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "97"], ["91", "98"], ["91", "101"], ["91", "139"], ["91", "142"], ["91", "153"], ["93", "94"], ["93", "95"], ["95", "96"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "111"], ["101", "113"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "131"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "147"], ["143", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["148", "151"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "171"], ["163", "173"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "201"], ["201", "202"], ["203", "204"], ["203", "206"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "212"], ["208", "209"], ["208", "210"], ["210", "211"], ["212", "213"], ["212", "214"], ["212", "215"], ["215", "216"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["221", "224"], ["24", "30"], ["27", "33"], ["31", "37"], ["35", "40"], ["39", "46"], ["73", "76"], ["76", "79"], ["77", "83"], ["159", "165"], ["189", "201"], ["199", "204"], ["217", "227"], ["26", "24"], ["28", "27"], ["33", "31"], ["37", "35"], ["40", "39"], ["46", "53"], ["49", "58"], ["49", "75"], ["54", "53"], ["75", "73"], ["79", "77"], ["83", "86"], ["86", "95"], ["86", "161"], ["89", "86"], ["161", "159"], ["165", "168"], ["168", "175"], ["168", "192"], ["171", "168"], ["191", "189"], ["201", "199"], ["204", "210"], ["204", "220"], ["218", "221"], ["221", "217"], ["30", "28"], ["51", "49"], ["57", "69"], ["68", "54"], ["93", "98"], ["98", "103"], ["139", "144"], ["153", "89"], ["174", "171"], ["192", "195"], ["195", "191"], ["208", "215"], ["212", "204"], ["220", "218"], ["53", "51"], ["58", "64"], ["61", "57"], ["69", "68"], ["95", "93"], ["103", "107"], ["106", "115"], ["106", "139"], ["111", "107"], ["143", "151"], ["143", "156"], ["154", "153"], ["175", "181"], ["178", "174"], ["210", "208"], ["215", "212"], ["62", "61"], ["107", "106"], ["115", "120"], ["144", "143"], ["148", "156"], ["156", "154"], ["179", "186"], ["184", "178"], ["64", "62"], ["119", "125"], ["119", "132"], ["132", "136"], ["132", "111"], ["151", "148"], ["181", "179"], ["186", "184"], ["120", "119"], ["125", "128"], ["128", "120"], ["136", "111"], ["21", "26"], ["22", "227"], ["24", "227"], ["27", "227"], ["27", "227"], ["33", "227"], ["31", "227"], ["31", "227"], ["35", "227"], ["35", "227"], ["35", "227"], ["39", "227"], ["39", "227"], ["49", "227"], ["49", "227"], ["73", "227"], ["76", "227"], ["76", "227"], ["77", "227"], ["77", "227"], ["83", "227"], ["159", "227"], ["159", "227"], ["159", "227"], ["165", "227"], ["168", "227"], ["168", "227"], ["191", "227"], ["195", "227"], ["189", "227"], ["189", "227"], ["201", "227"], ["199", "227"], ["204", "227"], ["204", "227"], ["217", "227"], ["217", "227"], ["217", "227"], ["212", "227"], ["212", "227"], ["212", "227"], ["174", "227"], ["178", "227"], ["178", "227"], ["174", "227"], ["174", "227"], ["171", "227"], ["95", "227"], ["93", "227"], ["93", "227"], ["98", "227"], ["103", "227"], ["107", "227"], ["106", "227"], ["106", "227"], ["139", "227"], ["139", "227"], ["143", "227"], ["143", "227"], ["148", "227"], ["148", "227"], ["156", "227"], ["156", "227"], ["153", "227"], ["153", "227"], ["89", "227"], ["115", "227"], ["119", "227"], ["119", "227"], ["132", "227"], ["132", "227"], ["136", "227"], ["111", "227"], ["125", "227"], ["61", "227"], ["57", "227"], ["57", "227"], ["68", "227"], ["54", "227"], ["212", "227"], ["68", "227"], ["221", "227"], ["21", "22"], ["21", "24"], ["33", "31"], ["37", "35"], ["21", "39"], ["21", "73"], ["79", "77"], ["161", "159"], ["191", "189"], ["201", "199"], ["24", "27"], ["21", "27"], ["21", "46"], ["73", "76"], ["21", "76"], ["21", "83"], ["21", "165"], ["221", "217"], ["221", "217"], ["27", "33"], ["21", "33"], ["21", "37"], ["46", "49"], ["54", "49"], ["21", "49"], ["35", "49"], ["61", "54"], ["21", "54"], ["61", "57"], ["61", "57"], ["21", "68"], ["31", "79"], ["21", "79"], ["83", "86"], ["89", "86"], ["21", "86"], ["79", "86"], ["86", "89"], ["21", "89"], ["95", "93"], ["21", "98"], ["106", "139"], ["21", "139"], ["86", "161"], ["21", "161"], ["165", "168"], ["171", "168"], ["21", "168"], ["161", "168"], ["186", "171"], ["21", "171"], ["159", "174"], ["77", "174"], ["168", "191"], ["21", "191"], ["189", "201"], ["21", "201"], ["199", "204"], ["210", "204"], ["21", "204"], ["210", "208"], ["21", "221"], ["35", "68"], ["57", "68"], ["21", "103"], ["98", "139"], ["136", "139"], ["77", "153"], ["168", "192"], ["21", "192"], ["21", "195"], ["168", "195"], ["21", "212"], ["208", "212"], ["215", "212"], ["35", "61"], ["64", "61"], ["21", "61"], ["33", "95"], ["21", "95"], ["107", "106"], ["93", "106"], ["120", "106"], ["21", "106"], ["120", "111"], ["21", "111"], ["21", "115"], ["144", "143"], ["144", "143"], ["159", "178"], ["77", "178"], ["204", "210"], ["21", "210"], ["21", "215"], ["103", "107"], ["111", "107"], ["21", "107"], ["76", "144"], ["156", "144"], ["21", "144"], ["139", "144"], ["151", "148"], ["21", "148"], ["144", "148"], ["144", "156"], ["148", "156"], ["21", "156"], ["144", "156"], ["148", "156"], ["49", "64"], ["21", "64"], ["120", "119"], ["120", "119"], ["21", "119"], ["120", "125"], ["21", "125"], ["21", "128"], ["115", "132"], ["128", "132"], ["21", "132"], ["120", "136"], ["21", "136"], ["144", "151"], ["21", "151"], ["168", "181"], ["21", "181"], ["181", "186"], ["21", "186"], ["106", "120"], ["125", "120"], ["21", "120"], ["107", "120"], ["120", "125"], ["115", "128"], ["98", "136"], ["49", "68"], ["49", "64"], ["49", "51"], ["49", "57"], ["49", "69"], ["49", "54"], ["49", "58"], ["49", "61"], ["49", "49"], ["49", "53"], ["49", "62"], ["86", "107"], ["86", "98"], ["86", "154"], ["86", "103"], ["86", "95"], ["86", "153"], ["86", "144"], ["86", "93"], ["86", "139"], ["86", "86"], ["86", "89"], ["86", "106"], ["86", "143"], ["86", "156"], ["168", "179"], ["168", "178"], ["168", "168"], ["168", "181"], ["168", "184"], ["168", "174"], ["168", "186"], ["168", "171"], ["168", "175"], ["204", "215"], ["204", "204"], ["204", "208"], ["204", "212"], ["204", "210"], ["106", "107"], ["106", "115"], ["106", "120"], ["106", "132"], ["106", "119"], ["106", "111"], ["106", "106"], ["143", "151"], ["143", "148"], ["119", "120"], ["119", "128"], ["119", "119"], ["119", "125"], ["132", "136"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,fact = new long[301])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[301])>", "39": "<(&lt;operator&gt;.assignment,fact[0] = 1)<SUB>5</SUB>>", "41": "<(IDENTIFIER,fact,fact[0] = 1)<SUB>5</SUB>>", "43": "<(LITERAL,1,fact[0] = 1)<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 1)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; fact.length)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,fact.length)<SUB>6</SUB>>", "53": "<(FIELD_IDENTIFIER,length,length)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,fact[i] = fact[i - 1] * i)<SUB>7</SUB>>", "59": "<(IDENTIFIER,fact,fact[i] = fact[i - 1] * i)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.multiplication,fact[i - 1] * i)<SUB>7</SUB>>", "63": "<(IDENTIFIER,fact,fact[i - 1] * i)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i - 1)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,fact[i - 1] * i)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,fact[i])<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,fact[i] %= MOD)<SUB>8</SUB>>", "6": "<(LOCAL,HashMap&lt;Long, Integer&gt; map: ANY)<SUB>10</SUB>>", "74": "<(IDENTIFIER,map,ANY map = new HashMap&lt;Long, Integer&gt;())<SUB>10</SUB>>", "76": "<(&lt;init&gt;,new HashMap&lt;Long, Integer&gt;())<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,fs = new int[n])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.alloc,new int[n])>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,long v = nextLong())<SUB>13</SUB>>", "95": "<(nextLong,nextLong())<SUB>13</SUB>>", "97": "<(LOCAL,long r: long)<SUB>14</SUB>>", "99": "<(IDENTIFIER,r,long r = 1)<SUB>14</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int d = 2; Some(d * d &lt;= v); d++),for (int d = 2; Some(d * d &lt;= v); d++))<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.assignment,int d = 2)<SUB>15</SUB>>", "105": "<(LITERAL,2,int d = 2)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.multiplication,d * d)<SUB>15</SUB>>", "109": "<(IDENTIFIER,d,d * d)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,d++)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>16</SUB>>", "117": "<(LITERAL,0,int cnt = 0)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.equals,v % d == 0)<SUB>17</SUB>>", "121": "<(IDENTIFIER,v,v % d)<SUB>17</SUB>>", "123": "<(LITERAL,0,v % d == 0)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.assignmentDivision,v /= d)<SUB>18</SUB>>", "127": "<(IDENTIFIER,d,v /= d)<SUB>18</SUB>>", "129": "<(IDENTIFIER,cnt,cnt ^= 1)<SUB>19</SUB>>", "131": "<(CONTROL_STRUCTURE,if (cnt == 1),if (cnt == 1))<SUB>21</SUB>>", "133": "<(IDENTIFIER,cnt,cnt == 1)<SUB>21</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "137": "<(IDENTIFIER,r,r *= d)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.assignmentMultiplication,r *= v)<SUB>25</SUB>>", "141": "<(IDENTIFIER,v,r *= v)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.logicalNot,!map.containsKey(r))<SUB>26</SUB>>", "145": "<(IDENTIFIER,map,containsKey(r))<SUB>26</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "149": "<(IDENTIFIER,map,put(r, map.size()))<SUB>27</SUB>>", "151": "<(size,size())<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,fs[map.get(r)]++)<SUB>29</SUB>>", "155": "<(IDENTIFIER,fs,fs[map.get(r)]++)<SUB>29</SUB>>", "157": "<(IDENTIFIER,map,get(r))<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.assignment,cfs = new int[n])<SUB>31</SUB>>", "161": "<(&lt;operator&gt;.alloc,new int[n])>", "163": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>32</SUB>>", "165": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>32</SUB>>", "167": "<(LITERAL,1,int i = 1)<SUB>32</SUB>>", "169": "<(IDENTIFIER,i,i &lt; n)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,i++)<SUB>32</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,cfs[i])<SUB>33</SUB>>", "177": "<(IDENTIFIER,i,cfs[i] = cfs[i - 1] + fs[i - 1])<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,cfs[i - 1])<SUB>33</SUB>>", "181": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>33</SUB>>", "183": "<(LITERAL,1,i - 1)<SUB>33</SUB>>", "185": "<(IDENTIFIER,fs,cfs[i - 1] + fs[i - 1])<SUB>33</SUB>>", "187": "<(IDENTIFIER,i,i - 1)<SUB>33</SUB>>", "189": "<(&lt;operator&gt;.assignment,memo = new long[n + 1][n + 1])<SUB>35</SUB>>", "191": "<(&lt;operator&gt;.alloc,new long[n + 1][n + 1])>", "193": "<(IDENTIFIER,n,n + 1)<SUB>35</SUB>>", "195": "<(&lt;operator&gt;.addition,n + 1)<SUB>35</SUB>>", "197": "<(LITERAL,1,n + 1)<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.assignment,)<SUB>36</SUB>>", "201": "<(iterator,&lt;empty&gt;)<SUB>36</SUB>>", "203": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>36</SUB>>", "205": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "207": "<(LOCAL,arr: long[])<SUB>36</SUB>>", "209": "<(IDENTIFIER,arr,&lt;empty&gt;)>", "211": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "213": "<(IDENTIFIER,Arrays,fill(arr, -1))<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.minus,-1)<SUB>37</SUB>>", "217": "<(println,println(go(0, 0)))<SUB>38</SUB>>", "219": "<(IDENTIFIER,System,println(go(0, 0)))<SUB>38</SUB>>", "221": "<(go,go(0, 0))<SUB>38</SUB>>", "223": "<(LITERAL,0,go(0, 0))<SUB>38</SUB>>", "225": "<(MODIFIER,PUBLIC)>", "227": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}