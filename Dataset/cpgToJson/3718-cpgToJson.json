{"edges": [["21", "23"], ["21", "307"], ["21", "308"], ["21", "309"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "46"], ["23", "47"], ["23", "51"], ["23", "67"], ["23", "105"], ["23", "106"], ["23", "110"], ["23", "111"], ["23", "115"], ["23", "120"], ["23", "305"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "77"], ["67", "79"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "86"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "97"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["108", "109"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["118", "119"], ["120", "121"], ["120", "125"], ["121", "122"], ["121", "124"], ["122", "123"], ["125", "126"], ["125", "127"], ["125", "131"], ["125", "132"], ["125", "136"], ["125", "137"], ["125", "141"], ["125", "164"], ["125", "165"], ["125", "171"], ["125", "172"], ["125", "178"], ["125", "280"], ["125", "287"], ["127", "128"], ["127", "129"], ["129", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "149"], ["141", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["151", "153"], ["151", "157"], ["153", "154"], ["153", "155"], ["155", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["174", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "186"], ["178", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "273"], ["189", "190"], ["189", "191"], ["189", "194"], ["189", "197"], ["189", "199"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["197", "198"], ["199", "200"], ["199", "220"], ["200", "201"], ["200", "210"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "215"], ["211", "212"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "254"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "235"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "245"], ["236", "237"], ["236", "242"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "264"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "279"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "289"], ["287", "292"], ["287", "295"], ["287", "297"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["295", "296"], ["297", "298"], ["297", "303"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["303", "304"], ["305", "306"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "43"], ["39", "49"], ["47", "53"], ["106", "113"], ["111", "118"], ["115", "122"], ["305", "309"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["49", "47"], ["53", "56"], ["56", "63"], ["56", "69"], ["59", "56"], ["69", "73"], ["72", "83"], ["72", "108"], ["77", "73"], ["108", "106"], ["113", "111"], ["118", "115"], ["121", "129"], ["121", "305"], ["30", "28"], ["37", "35"], ["42", "41"], ["62", "59"], ["73", "72"], ["81", "88"], ["122", "121"], ["127", "134"], ["132", "139"], ["137", "143"], ["165", "175"], ["172", "180"], ["280", "289"], ["43", "42"], ["63", "62"], ["83", "81"], ["88", "91"], ["91", "99"], ["91", "77"], ["94", "91"], ["129", "127"], ["134", "132"], ["139", "137"], ["143", "146"], ["146", "155"], ["146", "168"], ["149", "146"], ["167", "165"], ["174", "172"], ["180", "183"], ["183", "191"], ["183", "283"], ["186", "183"], ["282", "280"], ["289", "292"], ["292", "122"], ["292", "300"], ["295", "292"], ["297", "295"], ["98", "94"], ["153", "158"], ["157", "149"], ["168", "167"], ["175", "174"], ["273", "186"], ["283", "282"], ["298", "303"], ["303", "297"], ["99", "102"], ["102", "98"], ["155", "153"], ["158", "161"], ["161", "157"], ["191", "194"], ["194", "204"], ["194", "276"], ["197", "194"], ["274", "273"], ["300", "298"], ["276", "274"], ["201", "212"], ["201", "222"], ["221", "256"], ["221", "197"], ["202", "207"], ["207", "201"], ["211", "216"], ["215", "222"], ["222", "221"], ["222", "229"], ["225", "221"], ["255", "265"], ["264", "197"], ["204", "202"], ["212", "211"], ["216", "215"], ["226", "225"], ["226", "239"], ["235", "225"], ["256", "261"], ["259", "255"], ["265", "270"], ["268", "264"], ["227", "232"], ["232", "226"], ["236", "235"], ["236", "248"], ["245", "235"], ["261", "259"], ["270", "268"], ["229", "227"], ["237", "242"], ["242", "236"], ["246", "251"], ["251", "245"], ["239", "237"], ["248", "246"], ["21", "26"], ["22", "309"], ["24", "309"], ["27", "309"], ["27", "309"], ["31", "309"], ["34", "309"], ["34", "309"], ["41", "309"], ["39", "309"], ["39", "309"], ["47", "309"], ["47", "309"], ["53", "309"], ["56", "309"], ["69", "309"], ["73", "309"], ["72", "309"], ["72", "309"], ["108", "309"], ["106", "309"], ["106", "309"], ["113", "309"], ["111", "309"], ["111", "309"], ["115", "309"], ["115", "309"], ["115", "309"], ["122", "309"], ["121", "309"], ["121", "309"], ["305", "309"], ["305", "309"], ["127", "309"], ["134", "309"], ["132", "309"], ["132", "309"], ["137", "309"], ["137", "309"], ["137", "309"], ["165", "309"], ["165", "309"], ["172", "309"], ["175", "309"], ["174", "309"], ["172", "309"], ["172", "309"], ["282", "309"], ["280", "309"], ["280", "309"], ["289", "309"], ["292", "309"], ["292", "309"], ["292", "309"], ["297", "309"], ["297", "309"], ["297", "309"], ["295", "309"], ["191", "309"], ["191", "309"], ["194", "309"], ["194", "309"], ["273", "309"], ["273", "309"], ["186", "309"], ["201", "309"], ["201", "309"], ["211", "309"], ["211", "309"], ["215", "309"], ["215", "309"], ["221", "309"], ["226", "309"], ["226", "309"], ["225", "309"], ["236", "309"], ["236", "309"], ["235", "309"], ["245", "309"], ["245", "309"], ["235", "309"], ["225", "309"], ["221", "309"], ["221", "309"], ["255", "309"], ["255", "309"], ["255", "309"], ["264", "309"], ["264", "309"], ["264", "309"], ["197", "309"], ["153", "309"], ["155", "309"], ["153", "309"], ["153", "309"], ["157", "309"], ["157", "309"], ["157", "309"], ["149", "309"], ["81", "309"], ["88", "309"], ["88", "309"], ["91", "309"], ["91", "309"], ["77", "309"], ["98", "309"], ["98", "309"], ["98", "309"], ["94", "309"], ["94", "309"], ["62", "309"], ["62", "309"], ["59", "309"], ["115", "309"], ["21", "22"], ["21", "24"], ["21", "31"], ["21", "39"], ["49", "47"], ["108", "106"], ["113", "111"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "53"], ["21", "69"], ["21", "115"], ["111", "115"], ["118", "115"], ["34", "305"], ["280", "305"], ["21", "305"], ["21", "41"], ["39", "49"], ["21", "49"], ["53", "56"], ["59", "56"], ["21", "56"], ["49", "56"], ["21", "59"], ["56", "59"], ["56", "62"], ["21", "62"], ["73", "72"], ["56", "72"], ["91", "72"], ["21", "72"], ["83", "77"], ["21", "77"], ["83", "81"], ["27", "108"], ["21", "108"], ["72", "113"], ["21", "113"], ["21", "118"], ["122", "121"], ["21", "121"], ["129", "127"], ["134", "132"], ["139", "137"], ["167", "165"], ["174", "172"], ["21", "42"], ["69", "73"], ["77", "73"], ["21", "73"], ["81", "88"], ["21", "88"], ["102", "94"], ["21", "94"], ["106", "122"], ["21", "122"], ["21", "143"], ["21", "180"], ["34", "280"], ["21", "280"], ["165", "280"], ["21", "289"], ["303", "297"], ["73", "83"], ["21", "83"], ["88", "91"], ["94", "91"], ["21", "91"], ["72", "91"], ["102", "94"], ["102", "98"], ["102", "98"], ["108", "129"], ["134", "129"], ["155", "129"], ["21", "129"], ["129", "134"], ["21", "134"], ["127", "139"], ["21", "139"], ["143", "146"], ["149", "146"], ["21", "146"], ["139", "146"], ["146", "149"], ["21", "149"], ["155", "153"], ["47", "157"], ["132", "167"], ["21", "167"], ["21", "174"], ["132", "174"], ["180", "183"], ["186", "183"], ["21", "183"], ["146", "183"], ["21", "186"], ["183", "186"], ["183", "273"], ["21", "273"], ["165", "282"], ["21", "282"], ["289", "292"], ["295", "292"], ["21", "292"], ["183", "292"], ["292", "295"], ["21", "295"], ["132", "168"], ["21", "168"], ["21", "175"], ["132", "175"], ["21", "191"], ["132", "191"], ["21", "303"], ["91", "102"], ["21", "102"], ["81", "102"], ["134", "155"], ["21", "155"], ["191", "194"], ["197", "194"], ["21", "194"], ["222", "197"], ["229", "197"], ["239", "197"], ["248", "197"], ["270", "197"], ["21", "197"], ["115", "201"], ["297", "201"], ["273", "201"], ["172", "201"], ["215", "201"], ["245", "201"], ["264", "201"], ["183", "215"], ["21", "215"], ["222", "221"], ["222", "221"], ["225", "221"], ["225", "221"], ["165", "255"], ["226", "255"], ["236", "255"], ["172", "264"], ["245", "264"], ["165", "211"], ["226", "211"], ["236", "211"], ["255", "211"], ["194", "222"], ["21", "222"], ["226", "225"], ["226", "225"], ["235", "225"], ["235", "225"], ["165", "226"], ["236", "226"], ["211", "226"], ["236", "226"], ["255", "226"], ["236", "235"], ["236", "235"], ["245", "235"], ["245", "235"], ["165", "236"], ["226", "236"], ["226", "236"], ["172", "245"], ["201", "245"], ["215", "245"], ["222", "261"], ["229", "261"], ["239", "261"], ["248", "261"], ["21", "261"], ["261", "270"], ["21", "270"], ["222", "229"], ["21", "229"], ["229", "239"], ["21", "239"], ["239", "248"], ["21", "248"], ["56", "59"], ["56", "56"], ["56", "63"], ["56", "62"], ["72", "88"], ["72", "72"], ["72", "73"], ["72", "77"], ["72", "81"], ["72", "91"], ["72", "83"], ["121", "167"], ["121", "146"], ["121", "292"], ["121", "283"], ["121", "168"], ["121", "129"], ["121", "134"], ["121", "174"], ["121", "127"], ["121", "180"], ["121", "122"], ["121", "172"], ["121", "282"], ["121", "132"], ["121", "121"], ["121", "137"], ["121", "289"], ["121", "280"], ["121", "139"], ["121", "183"], ["121", "143"], ["121", "165"], ["121", "175"], ["91", "102"], ["91", "94"], ["91", "98"], ["91", "91"], ["91", "99"], ["146", "146"], ["146", "161"], ["146", "158"], ["146", "149"], ["146", "153"], ["146", "155"], ["146", "157"], ["183", "194"], ["183", "276"], ["183", "186"], ["183", "274"], ["183", "273"], ["183", "191"], ["183", "183"], ["292", "292"], ["292", "298"], ["292", "300"], ["292", "297"], ["292", "295"], ["292", "303"], ["194", "204"], ["194", "194"], ["194", "202"], ["194", "201"], ["194", "222"], ["194", "197"], ["194", "207"], ["194", "221"], ["201", "215"], ["201", "216"], ["201", "212"], ["201", "211"], ["221", "256"], ["221", "264"], ["221", "268"], ["221", "261"], ["221", "255"], ["221", "259"], ["221", "265"], ["221", "270"], ["222", "226"], ["222", "229"], ["222", "227"], ["222", "225"], ["222", "232"], ["226", "242"], ["226", "236"], ["226", "237"], ["226", "239"], ["226", "235"], ["236", "245"], ["236", "246"], ["236", "251"], ["236", "248"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int size = (int) 1e7 + 1)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.addition,(int) 1e7 + 1)<SUB>4</SUB>>", "43": "<(TYPE_REF,int,int)<SUB>4</SUB>>", "45": "<(LITERAL,1,(int) 1e7 + 1)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.assignment,int[] pr = new int[size])<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[size])>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; size); i++),for (int i = 0; Some(i &lt; size); i++))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,i &lt; size)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,pr[i])<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,pr[i] = i)<SUB>7</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i * i &lt; size); i++),for (int i = 2; Some(i * i &lt; size); i++))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>9</SUB>>", "71": "<(LITERAL,2,int i = 2)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.multiplication,i * i)<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,i * i)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int val = i * i)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.multiplication,i * i)<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,i * i)<SUB>10</SUB>>", "87": "<(LOCAL,int j: int)<SUB>11</SUB>>", "89": "<(IDENTIFIER,j,int j = val)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= size)<SUB>11</SUB>>", "93": "<(IDENTIFIER,size,j &lt;= size)<SUB>11</SUB>>", "95": "<(IDENTIFIER,j,j += val)<SUB>11</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,pr[j])<SUB>12</SUB>>", "101": "<(IDENTIFIER,j,pr[j] = j / val)<SUB>12</SUB>>", "103": "<(IDENTIFIER,j,j / val)<SUB>12</SUB>>", "105": "<(LOCAL,int t: int)<SUB>15</SUB>>", "107": "<(IDENTIFIER,t,int t = nextInt())<SUB>15</SUB>>", "109": "<(IDENTIFIER,sc,nextInt())<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,int[] dp = new int[size])<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new int[size])>", "115": "<(fill,fill(dp, -1))<SUB>17</SUB>>", "117": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>17</SUB>>", "119": "<(LITERAL,1,-1)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>18</SUB>>", "123": "<(IDENTIFIER,t,t--)<SUB>18</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>19</SUB>>", "129": "<(nextInt,nextInt())<SUB>19</SUB>>", "131": "<(LOCAL,int k: int)<SUB>20</SUB>>", "133": "<(IDENTIFIER,k,int k = nextInt())<SUB>20</SUB>>", "135": "<(IDENTIFIER,sc,nextInt())<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.assignment,int[] ar = new int[n])<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.alloc,new int[n])>", "141": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "145": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>23</SUB>>", "155": "<(nextInt,nextInt())<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,ar[i] = pr[a])<SUB>24</SUB>>", "159": "<(IDENTIFIER,ar,ar[i] = pr[a])<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,pr[a])<SUB>24</SUB>>", "163": "<(IDENTIFIER,a,ar[i] = pr[a])<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.assignment,int[] ans = new int[k + 1])<SUB>26</SUB>>", "167": "<(&lt;operator&gt;.alloc,new int[k + 1])>", "169": "<(IDENTIFIER,k,k + 1)<SUB>26</SUB>>", "171": "<(LOCAL,int[] ind: int[])<SUB>27</SUB>>", "173": "<(IDENTIFIER,ind,int[] ind = new int[k + 1])<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.addition,k + 1)<SUB>27</SUB>>", "177": "<(LITERAL,1,k + 1)<SUB>27</SUB>>", "179": "<(LOCAL,int i: int)<SUB>28</SUB>>", "181": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>28</SUB>>", "185": "<(IDENTIFIER,n,i &lt; n)<SUB>28</SUB>>", "187": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "189": "<(CONTROL_STRUCTURE,for (int h = k; Some(h &gt;= 0); h--),for (int h = k; Some(h &gt;= 0); h--))<SUB>29</SUB>>", "191": "<(&lt;operator&gt;.assignment,int h = k)<SUB>29</SUB>>", "193": "<(IDENTIFIER,k,int h = k)<SUB>29</SUB>>", "195": "<(IDENTIFIER,h,h &gt;= 0)<SUB>29</SUB>>", "197": "<(&lt;operator&gt;.postDecrement,h--)<SUB>29</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "201": "<(&lt;operator&gt;.greaterEqualsThan,dp[ar[i]] &gt;= ind[h])<SUB>30</SUB>>", "203": "<(IDENTIFIER,dp,dp[ar[i]] &gt;= ind[h])<SUB>30</SUB>>", "205": "<(IDENTIFIER,ar,dp[ar[i]] &gt;= ind[h])<SUB>30</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,ind[h])<SUB>30</SUB>>", "209": "<(IDENTIFIER,h,dp[ar[i]] &gt;= ind[h])<SUB>30</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,ans[h]++)<SUB>31</SUB>>", "213": "<(IDENTIFIER,ans,ans[h]++)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.assignment,ind[h] = i)<SUB>32</SUB>>", "217": "<(IDENTIFIER,ind,ind[h] = i)<SUB>32</SUB>>", "219": "<(IDENTIFIER,i,ind[h] = i)<SUB>32</SUB>>", "221": "<(&lt;operator&gt;.logicalAnd,h &gt; 0 &amp;&amp; (ans[h - 1] &lt; ans[h] || (ans[h - 1] == ans[h] &amp;&amp; ind[h - 1] &gt; ind[h])))<SUB>34</SUB>>", "223": "<(IDENTIFIER,h,h &gt; 0)<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.logicalOr,ans[h - 1] &lt; ans[h] || (ans[h - 1] == ans[h] &amp;&amp; ind[h - 1] &gt; ind[h]))<SUB>34</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,ans[h - 1])<SUB>34</SUB>>", "229": "<(&lt;operator&gt;.subtraction,h - 1)<SUB>34</SUB>>", "231": "<(LITERAL,1,h - 1)<SUB>34</SUB>>", "233": "<(IDENTIFIER,ans,ans[h - 1] &lt; ans[h])<SUB>34</SUB>>", "235": "<(&lt;operator&gt;.logicalAnd,ans[h - 1] == ans[h] &amp;&amp; ind[h - 1] &gt; ind[h])<SUB>34</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,ans[h - 1])<SUB>34</SUB>>", "239": "<(&lt;operator&gt;.subtraction,h - 1)<SUB>34</SUB>>", "241": "<(LITERAL,1,h - 1)<SUB>34</SUB>>", "243": "<(IDENTIFIER,ans,ans[h - 1] == ans[h])<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.greaterThan,ind[h - 1] &gt; ind[h])<SUB>34</SUB>>", "247": "<(IDENTIFIER,ind,ind[h - 1] &gt; ind[h])<SUB>34</SUB>>", "249": "<(IDENTIFIER,h,h - 1)<SUB>34</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,ind[h])<SUB>34</SUB>>", "253": "<(IDENTIFIER,h,ind[h - 1] &gt; ind[h])<SUB>34</SUB>>", "255": "<(&lt;operator&gt;.assignment,ans[h] = ans[h - 1])<SUB>36</SUB>>", "257": "<(IDENTIFIER,ans,ans[h] = ans[h - 1])<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,ans[h - 1])<SUB>36</SUB>>", "261": "<(&lt;operator&gt;.subtraction,h - 1)<SUB>36</SUB>>", "263": "<(LITERAL,1,h - 1)<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,ind[h])<SUB>37</SUB>>", "267": "<(IDENTIFIER,h,ind[h] = ind[h - 1])<SUB>37</SUB>>", "269": "<(IDENTIFIER,ind,ind[h] = ind[h - 1])<SUB>37</SUB>>", "271": "<(IDENTIFIER,h,h - 1)<SUB>37</SUB>>", "273": "<(&lt;operator&gt;.assignment,dp[ar[i]] = i)<SUB>40</SUB>>", "275": "<(IDENTIFIER,dp,dp[ar[i]] = i)<SUB>40</SUB>>", "277": "<(IDENTIFIER,ar,dp[ar[i]] = i)<SUB>40</SUB>>", "279": "<(IDENTIFIER,i,dp[ar[i]] = i)<SUB>40</SUB>>", "281": "<(IDENTIFIER,out,println(ans[k] + 1))<SUB>42</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,ans[k])<SUB>42</SUB>>", "285": "<(IDENTIFIER,k,ans[k] + 1)<SUB>42</SUB>>", "287": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>43</SUB>>", "289": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>43</SUB>>", "291": "<(LITERAL,0,int i = 0)<SUB>43</SUB>>", "293": "<(IDENTIFIER,i,i &lt; n)<SUB>43</SUB>>", "295": "<(&lt;operator&gt;.postIncrement,i++)<SUB>43</SUB>>", "297": "<(&lt;operator&gt;.assignment,dp[ar[i]] = -1)<SUB>43</SUB>>", "299": "<(IDENTIFIER,dp,dp[ar[i]] = -1)<SUB>43</SUB>>", "301": "<(IDENTIFIER,ar,dp[ar[i]] = -1)<SUB>43</SUB>>", "303": "<(&lt;operator&gt;.minus,-1)<SUB>43</SUB>>", "305": "<(close,close())<SUB>45</SUB>>", "307": "<(MODIFIER,PUBLIC)>", "309": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}