{"edges": [["22", "24"], ["22", "237"], ["22", "238"], ["22", "239"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "62"], ["24", "65"], ["24", "66"], ["24", "70"], ["24", "88"], ["24", "89"], ["24", "90"], ["24", "93"], ["24", "96"], ["24", "97"], ["24", "101"], ["24", "102"], ["24", "105"], ["24", "106"], ["24", "107"], ["24", "108"], ["24", "113"], ["24", "117"], ["24", "121"], ["24", "228"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["62", "7"], ["62", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["102", "103"], ["102", "104"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "133"], ["125", "137"], ["125", "145"], ["125", "172"], ["125", "199"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "160"], ["153", "164"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["160", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["172", "173"], ["172", "180"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["180", "193"], ["180", "197"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["203", "212"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "222"], ["216", "225"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "61"], ["59", "63"], ["62", "68"], ["66", "72"], ["90", "93"], ["93", "99"], ["97", "102"], ["102", "110"], ["108", "115"], ["113", "119"], ["117", "122"], ["228", "239"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["61", "59"], ["63", "62"], ["68", "66"], ["72", "75"], ["75", "81"], ["75", "90"], ["78", "75"], ["80", "78"], ["99", "97"], ["110", "108"], ["115", "113"], ["119", "117"], ["122", "131"], ["122", "231"], ["229", "233"], ["232", "228"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["81", "86"], ["84", "80"], ["127", "134"], ["133", "139"], ["231", "229"], ["233", "232"], ["32", "30"], ["35", "33"], ["86", "84"], ["129", "127"], ["134", "133"], ["138", "143"], ["138", "147"], ["143", "147"], ["146", "158"], ["146", "174"], ["173", "183"], ["173", "200"], ["200", "122"], ["200", "208"], ["37", "35"], ["131", "129"], ["139", "138"], ["147", "146"], ["147", "150"], ["150", "146"], ["154", "161"], ["160", "166"], ["174", "173"], ["174", "177"], ["177", "173"], ["181", "188"], ["193", "197"], ["197", "174"], ["205", "213"], ["156", "154"], ["161", "160"], ["165", "147"], ["165", "170"], ["170", "147"], ["183", "181"], ["187", "200"], ["187", "194"], ["194", "193"], ["207", "205"], ["213", "122"], ["213", "219"], ["158", "156"], ["166", "165"], ["188", "187"], ["208", "207"], ["217", "222"], ["222", "225"], ["225", "122"], ["219", "217"], ["22", "27"], ["23", "239"], ["25", "239"], ["30", "239"], ["33", "239"], ["33", "239"], ["33", "239"], ["28", "239"], ["39", "239"], ["46", "239"], ["53", "239"], ["55", "239"], ["55", "239"], ["53", "239"], ["53", "239"], ["59", "239"], ["62", "239"], ["63", "239"], ["62", "239"], ["62", "239"], ["66", "239"], ["66", "239"], ["66", "239"], ["72", "239"], ["75", "239"], ["75", "239"], ["90", "239"], ["90", "239"], ["93", "239"], ["97", "239"], ["97", "239"], ["97", "239"], ["102", "239"], ["102", "239"], ["108", "239"], ["108", "239"], ["108", "239"], ["113", "239"], ["117", "239"], ["117", "239"], ["122", "239"], ["122", "239"], ["122", "239"], ["228", "239"], ["233", "239"], ["232", "239"], ["232", "239"], ["228", "239"], ["127", "239"], ["127", "239"], ["127", "239"], ["133", "239"], ["138", "239"], ["138", "239"], ["143", "239"], ["146", "239"], ["146", "239"], ["177", "239"], ["173", "239"], ["173", "239"], ["181", "239"], ["181", "239"], ["181", "239"], ["187", "239"], ["187", "239"], ["193", "239"], ["193", "239"], ["197", "239"], ["197", "239"], ["200", "239"], ["200", "239"], ["200", "239"], ["208", "239"], ["207", "239"], ["205", "239"], ["205", "239"], ["213", "239"], ["213", "239"], ["213", "239"], ["219", "239"], ["217", "239"], ["217", "239"], ["222", "239"], ["225", "239"], ["225", "239"], ["225", "239"], ["154", "239"], ["154", "239"], ["154", "239"], ["160", "239"], ["165", "239"], ["165", "239"], ["170", "239"], ["80", "239"], ["84", "239"], ["86", "239"], ["84", "239"], ["80", "239"], ["80", "239"], ["78", "239"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["22", "59"], ["68", "66"], ["22", "90"], ["22", "93"], ["99", "97"], ["22", "102"], ["110", "108"], ["110", "108"], ["115", "113"], ["119", "117"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["59", "62"], ["22", "62"], ["63", "62"], ["22", "72"], ["84", "80"], ["84", "80"], ["113", "228"], ["217", "228"], ["22", "228"], ["117", "228"], ["222", "228"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["43", "63"], ["22", "63"], ["46", "68"], ["22", "68"], ["72", "75"], ["78", "75"], ["22", "75"], ["68", "75"], ["75", "78"], ["22", "78"], ["22", "99"], ["22", "110"], ["22", "115"], ["22", "119"], ["93", "122"], ["147", "122"], ["177", "122"], ["208", "122"], ["22", "122"], ["75", "122"], ["147", "122"], ["66", "127"], ["113", "232"], ["217", "232"], ["22", "232"], ["117", "232"], ["222", "232"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["55", "84"], ["22", "84"], ["86", "84"], ["97", "133"], ["138", "133"], ["187", "133"], ["193", "133"], ["165", "133"], ["113", "233"], ["217", "233"], ["22", "233"], ["62", "86"], ["22", "86"], ["97", "138"], ["133", "138"], ["22", "138"], ["102", "143"], ["200", "143"], ["22", "143"], ["147", "146"], ["147", "146"], ["150", "146"], ["150", "146"], ["66", "154"], ["174", "173"], ["174", "173"], ["177", "173"], ["177", "173"], ["66", "181"], ["174", "200"], ["22", "200"], ["174", "200"], ["208", "205"], ["208", "205"], ["22", "205"], ["122", "131"], ["22", "131"], ["131", "147"], ["158", "147"], ["22", "147"], ["122", "147"], ["102", "150"], ["143", "150"], ["200", "150"], ["170", "150"], ["22", "150"], ["53", "150"], ["200", "150"], ["97", "160"], ["138", "160"], ["165", "160"], ["102", "174"], ["143", "174"], ["150", "174"], ["200", "174"], ["170", "174"], ["22", "174"], ["53", "174"], ["150", "174"], ["200", "174"], ["90", "177"], ["197", "177"], ["208", "177"], ["22", "177"], ["147", "177"], ["97", "193"], ["187", "193"], ["90", "197"], ["177", "197"], ["208", "197"], ["22", "197"], ["97", "165"], ["160", "165"], ["22", "165"], ["102", "170"], ["143", "170"], ["150", "170"], ["200", "170"], ["22", "170"], ["97", "187"], ["138", "187"], ["193", "187"], ["165", "187"], ["22", "187"], ["208", "207"], ["208", "207"], ["22", "207"], ["205", "213"], ["22", "213"], ["108", "213"], ["225", "213"], ["208", "217"], ["22", "217"], ["208", "222"], ["22", "222"], ["213", "225"], ["22", "225"], ["147", "158"], ["22", "158"], ["147", "208"], ["177", "208"], ["22", "208"], ["90", "208"], ["177", "208"], ["197", "208"], ["208", "219"], ["22", "219"], ["75", "75"], ["75", "81"], ["75", "84"], ["75", "80"], ["75", "86"], ["75", "78"], ["122", "146"], ["122", "131"], ["122", "129"], ["122", "134"], ["122", "138"], ["122", "173"], ["122", "174"], ["122", "127"], ["122", "139"], ["122", "122"], ["122", "200"], ["122", "147"], ["122", "133"], ["138", "143"], ["146", "154"], ["146", "146"], ["146", "161"], ["146", "158"], ["146", "160"], ["146", "166"], ["146", "165"], ["146", "147"], ["146", "156"], ["173", "188"], ["173", "181"], ["173", "187"], ["173", "183"], ["200", "213"], ["200", "208"], ["200", "207"], ["200", "205"], ["147", "150"], ["174", "177"], ["165", "170"], ["187", "197"], ["187", "173"], ["187", "174"], ["187", "194"], ["187", "193"], ["213", "225"], ["213", "217"], ["213", "222"], ["213", "219"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>6</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "50": "<(nextToken,nextToken())<SUB>6</SUB>>", "52": "<(LOCAL,int k: int)<SUB>7</SUB>>", "54": "<(IDENTIFIER,k,int k = parseInt(st.nextToken()))<SUB>7</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "60": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "62": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "63": "<(readLine,readLine())<SUB>8</SUB>>", "65": "<(LOCAL,int[] a: int[])<SUB>9</SUB>>", "67": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>9</SUB>>", "69": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "71": "<(LOCAL,int i: int)<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,a[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "85": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "87": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "89": "<(LOCAL,int r: int)<SUB>13</SUB>>", "91": "<(IDENTIFIER,l,int l = 0)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>13</SUB>>", "95": "<(LITERAL,0,int r = 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] t = new int[100001])<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[100001])>", "101": "<(LOCAL,int kk: int)<SUB>15</SUB>>", "103": "<(IDENTIFIER,kk,int kk = 0)<SUB>15</SUB>>", "105": "<(LOCAL,int min: int)<SUB>16</SUB>>", "107": "<(LOCAL,int rr: int)<SUB>16</SUB>>", "109": "<(IDENTIFIER,min,int min = 1 &lt;&lt; 25)<SUB>16</SUB>>", "111": "<(LITERAL,1,1 &lt;&lt; 25)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,int ll = -1)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.assignment,int rr = -1)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "121": "<(CONTROL_STRUCTURE,while (r &lt; n),while (r &lt; n))<SUB>17</SUB>>", "123": "<(IDENTIFIER,r,r &lt; n)<SUB>17</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,int x = a[r++])<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,a[r++])<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,r++)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,t[x]++)<SUB>20</SUB>>", "135": "<(IDENTIFIER,t,t[x]++)<SUB>20</SUB>>", "137": "<(CONTROL_STRUCTURE,if (t[x] == 1),if (t[x] == 1))<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,t[x])<SUB>21</SUB>>", "141": "<(IDENTIFIER,x,t[x] == 1)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,kk++)<SUB>22</SUB>>", "145": "<(CONTROL_STRUCTURE,while (r &lt; n &amp;&amp; kk &lt; k),while (r &lt; n &amp;&amp; kk &lt; k))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.lessThan,r &lt; n)<SUB>23</SUB>>", "149": "<(IDENTIFIER,n,r &lt; n)<SUB>23</SUB>>", "151": "<(IDENTIFIER,kk,kk &lt; k)<SUB>23</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "155": "<(IDENTIFIER,x,x = a[r++])<SUB>25</SUB>>", "157": "<(IDENTIFIER,a,x = a[r++])<SUB>25</SUB>>", "159": "<(IDENTIFIER,r,r++)<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,t[x])<SUB>26</SUB>>", "163": "<(IDENTIFIER,x,t[x]++)<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.equals,t[x] == 1)<SUB>27</SUB>>", "167": "<(IDENTIFIER,t,t[x] == 1)<SUB>27</SUB>>", "169": "<(LITERAL,1,t[x] == 1)<SUB>27</SUB>>", "171": "<(IDENTIFIER,kk,kk++)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.logicalAnd,kk == k &amp;&amp; l &lt; r)<SUB>30</SUB>>", "175": "<(IDENTIFIER,kk,kk == k)<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.lessThan,l &lt; r)<SUB>30</SUB>>", "179": "<(IDENTIFIER,r,l &lt; r)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.assignment,x = a[l])<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,a[l])<SUB>32</SUB>>", "185": "<(IDENTIFIER,l,x = a[l])<SUB>32</SUB>>", "187": "<(&lt;operator&gt;.equals,t[x] == 1)<SUB>33</SUB>>", "189": "<(IDENTIFIER,t,t[x] == 1)<SUB>33</SUB>>", "191": "<(LITERAL,1,t[x] == 1)<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.postDecrement,t[x]--)<SUB>35</SUB>>", "195": "<(IDENTIFIER,t,t[x]--)<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.postIncrement,l++)<SUB>36</SUB>>", "199": "<(CONTROL_STRUCTURE,if (kk == k),if (kk == k))<SUB>38</SUB>>", "201": "<(IDENTIFIER,kk,kk == k)<SUB>38</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "205": "<(&lt;operator&gt;.assignment,int m = r - l + 1)<SUB>40</SUB>>", "207": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>40</SUB>>", "209": "<(IDENTIFIER,r,r - l)<SUB>40</SUB>>", "211": "<(LITERAL,1,r - l + 1)<SUB>40</SUB>>", "213": "<(&lt;operator&gt;.lessThan,m &lt; min)<SUB>41</SUB>>", "215": "<(IDENTIFIER,min,m &lt; min)<SUB>41</SUB>>", "217": "<(&lt;operator&gt;.assignment,ll = l + 1)<SUB>43</SUB>>", "219": "<(&lt;operator&gt;.addition,l + 1)<SUB>43</SUB>>", "221": "<(LITERAL,1,l + 1)<SUB>43</SUB>>", "223": "<(IDENTIFIER,rr,rr = r)<SUB>44</SUB>>", "225": "<(&lt;operator&gt;.assignment,min = m)<SUB>45</SUB>>", "227": "<(IDENTIFIER,m,min = m)<SUB>45</SUB>>", "229": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "231": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "233": "<(&lt;operator&gt;.addition,ll + &quot; &quot;)<SUB>49</SUB>>", "235": "<(LITERAL,&quot; &quot;,ll + &quot; &quot;)<SUB>49</SUB>>", "237": "<(MODIFIER,PUBLIC)>", "239": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}