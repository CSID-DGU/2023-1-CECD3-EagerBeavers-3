{"edges": [["17", "19"], ["17", "217"], ["17", "218"], ["17", "219"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "32"], ["19", "35"], ["19", "36"], ["19", "39"], ["19", "72"], ["19", "79"], ["19", "184"], ["19", "185"], ["19", "188"], ["19", "212"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "49"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "53"], ["49", "60"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "98"], ["90", "132"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "114"], ["99", "116"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["106", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["133", "141"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "158"], ["146", "161"], ["146", "163"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "157"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "177"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "176"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["177", "178"], ["177", "183"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "211"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["21", "28"], ["26", "32"], ["32", "36"], ["36", "40"], ["72", "81"], ["185", "190"], ["212", "219"], ["23", "21"], ["28", "26"], ["40", "47"], ["40", "74"], ["73", "72"], ["81", "84"], ["84", "94"], ["84", "185"], ["87", "84"], ["190", "193"], ["193", "207"], ["193", "215"], ["196", "193"], ["213", "212"], ["45", "50"], ["74", "73"], ["199", "196"], ["215", "213"], ["47", "45"], ["50", "54"], ["50", "62"], ["91", "101"], ["91", "137"], ["201", "199"], ["54", "57"], ["57", "40"], ["92", "91"], ["202", "201"], ["62", "40"], ["62", "66"], ["94", "92"], ["101", "109"], ["104", "119"], ["104", "87"], ["114", "109"], ["134", "143"], ["134", "87"], ["204", "202"], ["66", "69"], ["69", "40"], ["106", "104"], ["117", "114"], ["135", "134"], ["143", "153"], ["205", "204"], ["108", "106"], ["118", "126"], ["123", "117"], ["137", "135"], ["148", "158"], ["158", "172"], ["158", "87"], ["161", "158"], ["207", "205"], ["109", "108"], ["119", "118"], ["124", "129"], ["129", "123"], ["150", "148"], ["164", "179"], ["177", "161"], ["126", "124"], ["152", "150"], ["166", "164"], ["178", "177"], ["153", "152"], ["167", "166"], ["179", "178"], ["169", "167"], ["170", "169"], ["172", "170"], ["17", "23"], ["18", "219"], ["23", "219"], ["21", "219"], ["21", "219"], ["26", "219"], ["26", "219"], ["26", "219"], ["32", "219"], ["36", "219"], ["36", "219"], ["40", "219"], ["40", "219"], ["72", "219"], ["72", "219"], ["81", "219"], ["84", "219"], ["84", "219"], ["84", "219"], ["185", "219"], ["190", "219"], ["193", "219"], ["193", "219"], ["212", "219"], ["212", "219"], ["212", "219"], ["207", "219"], ["202", "219"], ["201", "219"], ["201", "219"], ["199", "219"], ["199", "219"], ["196", "219"], ["92", "219"], ["92", "219"], ["91", "219"], ["91", "219"], ["135", "219"], ["135", "219"], ["134", "219"], ["134", "219"], ["143", "219"], ["143", "219"], ["150", "219"], ["152", "219"], ["150", "219"], ["148", "219"], ["148", "219"], ["158", "219"], ["158", "219"], ["167", "219"], ["166", "219"], ["166", "219"], ["164", "219"], ["164", "219"], ["177", "219"], ["177", "219"], ["177", "219"], ["161", "219"], ["101", "219"], ["104", "219"], ["106", "219"], ["108", "219"], ["106", "219"], ["104", "219"], ["104", "219"], ["87", "219"], ["117", "219"], ["117", "219"], ["117", "219"], ["114", "219"], ["47", "219"], ["45", "219"], ["45", "219"], ["50", "219"], ["62", "219"], ["66", "219"], ["66", "219"], ["69", "219"], ["54", "219"], ["57", "219"], ["57", "219"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "32"], ["17", "36"], ["17", "72"], ["17", "185"], ["17", "81"], ["17", "190"], ["185", "212"], ["199", "212"], ["17", "212"], ["17", "23"], ["17", "28"], ["32", "40"], ["69", "40"], ["54", "40"], ["17", "40"], ["21", "40"], ["47", "45"], ["81", "84"], ["87", "84"], ["17", "84"], ["40", "84"], ["137", "87"], ["153", "87"], ["172", "87"], ["109", "87"], ["17", "87"], ["190", "193"], ["196", "193"], ["17", "193"], ["193", "196"], ["17", "196"], ["201", "199"], ["201", "199"], ["23", "47"], ["17", "47"], ["45", "50"], ["17", "50"], ["17", "54"], ["17", "57"], ["92", "91"], ["92", "91"], ["17", "91"], ["185", "201"], ["199", "201"], ["17", "201"], ["166", "201"], ["40", "54"], ["36", "57"], ["66", "57"], ["36", "92"], ["135", "92"], ["66", "92"], ["57", "92"], ["17", "92"], ["94", "92"], ["94", "92"], ["17", "101"], ["185", "202"], ["199", "202"], ["17", "202"], ["50", "62"], ["17", "62"], ["17", "66"], ["17", "69"], ["84", "94"], ["17", "94"], ["101", "104"], ["114", "104"], ["17", "104"], ["106", "104"], ["106", "104"], ["106", "104"], ["129", "114"], ["17", "114"], ["135", "134"], ["135", "134"], ["17", "134"], ["17", "143"], ["36", "66"], ["57", "66"], ["40", "69"], ["150", "106"], ["17", "106"], ["109", "106"], ["109", "106"], ["92", "135"], ["17", "135"], ["137", "135"], ["137", "135"], ["150", "148"], ["150", "148"], ["150", "148"], ["109", "108"], ["109", "108"], ["17", "108"], ["94", "137"], ["17", "137"], ["148", "158"], ["161", "158"], ["17", "158"], ["158", "161"], ["17", "161"], ["166", "164"], ["166", "164"], ["164", "177"], ["17", "177"], ["84", "207"], ["17", "207"], ["17", "109"], ["94", "109"], ["126", "109"], ["104", "129"], ["17", "129"], ["106", "150"], ["17", "150"], ["153", "150"], ["153", "150"], ["109", "126"], ["17", "126"], ["153", "152"], ["153", "152"], ["17", "152"], ["143", "166"], ["17", "166"], ["164", "166"], ["17", "153"], ["137", "153"], ["143", "167"], ["17", "167"], ["164", "167"], ["153", "172"], ["17", "172"], ["40", "40"], ["40", "50"], ["40", "47"], ["40", "45"], ["84", "94"], ["84", "84"], ["84", "92"], ["84", "87"], ["84", "91"], ["193", "196"], ["193", "204"], ["193", "207"], ["193", "202"], ["193", "201"], ["193", "205"], ["193", "193"], ["193", "199"], ["50", "57"], ["50", "54"], ["50", "62"], ["91", "104"], ["91", "134"], ["91", "101"], ["91", "137"], ["91", "108"], ["91", "106"], ["91", "135"], ["91", "109"], ["62", "69"], ["62", "66"], ["104", "114"], ["104", "104"], ["104", "119"], ["104", "129"], ["104", "118"], ["104", "108"], ["104", "123"], ["104", "106"], ["104", "126"], ["104", "117"], ["104", "124"], ["104", "109"], ["134", "150"], ["134", "153"], ["134", "148"], ["134", "152"], ["134", "158"], ["134", "143"], ["158", "167"], ["158", "169"], ["158", "161"], ["158", "179"], ["158", "178"], ["158", "170"], ["158", "164"], ["158", "158"], ["158", "166"], ["158", "177"], ["158", "172"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int commands = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[][] dp: int[][])<SUB>3</SUB>>", "27": "<(IDENTIFIER,dp,int[][] dp = new int[5000][5000])<SUB>3</SUB>>", "29": "<(LITERAL,5000,new int[5000][5000])<SUB>3</SUB>>", "31": "<(LOCAL,int interesting: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,interesting,int interesting = 0)<SUB>4</SUB>>", "35": "<(LOCAL,String prgm: java.lang.String)<SUB>5</SUB>>", "37": "<(IDENTIFIER,prgm,String prgm = &quot;&quot;)<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,while (interesting &lt; commands),while (interesting &lt; commands))<SUB>6</SUB>>", "41": "<(IDENTIFIER,interesting,interesting &lt; commands)<SUB>6</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,byte q = read())<SUB>7</SUB>>", "47": "<(read,read())<SUB>7</SUB>>", "49": "<(CONTROL_STRUCTURE,if (q == 115),if (q == 115))<SUB>8</SUB>>", "51": "<(IDENTIFIER,q,q == 115)<SUB>8</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "55": "<(IDENTIFIER,interesting,interesting += 1)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignmentPlus,prgm += &quot;s&quot;)<SUB>10</SUB>>", "59": "<(LITERAL,&quot;s&quot;,prgm += &quot;s&quot;)<SUB>10</SUB>>", "61": "<(CONTROL_STRUCTURE,if (q == 102),if (q == 102))<SUB>12</SUB>>", "63": "<(IDENTIFIER,q,q == 102)<SUB>12</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "67": "<(IDENTIFIER,prgm,prgm += &quot;f&quot;)<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.assignmentPlus,interesting += 1)<SUB>14</SUB>>", "71": "<(LITERAL,1,interesting += 1)<SUB>14</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>18</SUB>>", "75": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>18</SUB>>", "77": "<(LITERAL,0,dp[0][0] = 1)<SUB>18</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int line = 1; Some(line &lt; commands); line++),for (int line = 1; Some(line &lt; commands); line++))<SUB>19</SUB>>", "81": "<(&lt;operator&gt;.assignment,int line = 1)<SUB>19</SUB>>", "83": "<(LITERAL,1,int line = 1)<SUB>19</SUB>>", "85": "<(IDENTIFIER,line,line &lt; commands)<SUB>19</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,line++)<SUB>19</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.equals,prgm.charAt(line - 1) == 'f')<SUB>20</SUB>>", "93": "<(IDENTIFIER,prgm,prgm.charAt(line - 1))<SUB>20</SUB>>", "95": "<(IDENTIFIER,line,line - 1)<SUB>20</SUB>>", "97": "<(LITERAL,'f',prgm.charAt(line - 1) == 'f')<SUB>20</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int indent = 1; Some(indent &lt; Math.min(2 * line + 1, 5000)); indent++),for (int indent = 1; Some(indent &lt; Math.min(2 * line + 1, 5000)); indent++))<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.assignment,int indent = 1)<SUB>21</SUB>>", "103": "<(LITERAL,1,int indent = 1)<SUB>21</SUB>>", "105": "<(IDENTIFIER,indent,indent &lt; Math.min(2 * line + 1, 5000))<SUB>21</SUB>>", "107": "<(IDENTIFIER,Math,Math.min(2 * line + 1, 5000))<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.multiplication,2 * line)<SUB>21</SUB>>", "111": "<(IDENTIFIER,line,2 * line)<SUB>21</SUB>>", "113": "<(LITERAL,5000,Math.min(2 * line + 1, 5000))<SUB>21</SUB>>", "115": "<(IDENTIFIER,indent,indent++)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.assignment,dp[line][indent] = dp[line - 1][indent - 1])<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,dp[line])<SUB>22</SUB>>", "121": "<(IDENTIFIER,line,dp[line][indent] = dp[line - 1][indent - 1])<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,dp[line - 1][indent - 1])<SUB>22</SUB>>", "125": "<(IDENTIFIER,dp,dp[line][indent] = dp[line - 1][indent - 1])<SUB>22</SUB>>", "127": "<(IDENTIFIER,line,line - 1)<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.subtraction,indent - 1)<SUB>22</SUB>>", "131": "<(LITERAL,1,indent - 1)<SUB>22</SUB>>", "133": "<(CONTROL_STRUCTURE,if (prgm.charAt(line - 1) == 's'),if (prgm.charAt(line - 1) == 's'))<SUB>25</SUB>>", "135": "<(charAt,prgm.charAt(line - 1))<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.subtraction,line - 1)<SUB>25</SUB>>", "139": "<(LITERAL,1,line - 1)<SUB>25</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.assignment,int w = 0)<SUB>26</SUB>>", "145": "<(LITERAL,0,int w = 0)<SUB>26</SUB>>", "147": "<(LOCAL,int indent: int)<SUB>27</SUB>>", "149": "<(IDENTIFIER,indent,int indent = Math.min(2 * line + 1, 4999))<SUB>27</SUB>>", "151": "<(IDENTIFIER,Math,Math.min(2 * line + 1, 4999))<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.multiplication,2 * line)<SUB>27</SUB>>", "155": "<(IDENTIFIER,line,2 * line)<SUB>27</SUB>>", "157": "<(LITERAL,4999,Math.min(2 * line + 1, 4999))<SUB>27</SUB>>", "159": "<(IDENTIFIER,indent,indent &gt;= 0)<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.postDecrement,indent--)<SUB>27</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "165": "<(IDENTIFIER,w,w = (w + dp[line - 1][indent]) % STMOD)<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.addition,w + dp[line - 1][indent])<SUB>28</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dp[line - 1][indent])<SUB>28</SUB>>", "171": "<(IDENTIFIER,dp,w + dp[line - 1][indent])<SUB>28</SUB>>", "173": "<(IDENTIFIER,line,line - 1)<SUB>28</SUB>>", "175": "<(IDENTIFIER,indent,w + dp[line - 1][indent])<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.assignment,dp[line][indent] = w)<SUB>30</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[line])<SUB>30</SUB>>", "181": "<(IDENTIFIER,line,dp[line][indent] = w)<SUB>30</SUB>>", "183": "<(IDENTIFIER,w,dp[line][indent] = w)<SUB>30</SUB>>", "185": "<(&lt;operator&gt;.assignment,int q = 0)<SUB>34</SUB>>", "187": "<(LITERAL,0,int q = 0)<SUB>34</SUB>>", "189": "<(LOCAL,int i: int)<SUB>35</SUB>>", "191": "<(IDENTIFIER,i,int i = 0)<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.lessThan,i &lt; 5000)<SUB>35</SUB>>", "195": "<(LITERAL,5000,i &lt; 5000)<SUB>35</SUB>>", "197": "<(IDENTIFIER,i,i++)<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.assignment,q = (q + dp[commands - 1][i]) % STMOD)<SUB>36</SUB>>", "201": "<(&lt;operator&gt;.modulo,(q + dp[commands - 1][i]) % STMOD)<SUB>36</SUB>>", "203": "<(IDENTIFIER,q,q + dp[commands - 1][i])<SUB>36</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp[commands - 1])<SUB>36</SUB>>", "207": "<(&lt;operator&gt;.subtraction,commands - 1)<SUB>36</SUB>>", "209": "<(LITERAL,1,commands - 1)<SUB>36</SUB>>", "211": "<(IDENTIFIER,STMOD,(q + dp[commands - 1][i]) % STMOD)<SUB>36</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "215": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "217": "<(MODIFIER,PUBLIC)>", "219": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}