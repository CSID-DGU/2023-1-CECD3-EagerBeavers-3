{"edges": [["23", "24"], ["23", "25"], ["23", "142"], ["23", "143"], ["23", "144"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "8"], ["25", "59"], ["25", "62"], ["25", "65"], ["25", "84"], ["25", "85"], ["25", "89"], ["25", "90"], ["25", "93"], ["25", "132"], ["25", "138"], ["25", "140"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["62", "7"], ["62", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["104", "105"], ["104", "112"], ["104", "122"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "116"], ["112", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["123", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["126", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["138", "139"], ["140", "141"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "52"], ["48", "57"], ["55", "61"], ["59", "63"], ["62", "67"], ["85", "90"], ["90", "95"], ["138", "140"], ["140", "144"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["61", "59"], ["63", "62"], ["67", "70"], ["70", "77"], ["70", "87"], ["73", "70"], ["87", "85"], ["95", "98"], ["98", "133"], ["98", "106"], ["101", "98"], ["133", "136"], ["133", "138"], ["134", "138"], ["31", "38"], ["34", "29"], ["46", "44"], ["52", "50"], ["76", "73"], ["136", "134"], ["33", "31"], ["36", "34"], ["77", "82"], ["80", "76"], ["105", "113"], ["105", "129"], ["38", "36"], ["82", "80"], ["106", "109"], ["109", "105"], ["113", "118"], ["116", "133"], ["118", "116"], ["124", "101"], ["126", "124"], ["129", "126"], ["23", "28"], ["24", "144"], ["26", "144"], ["31", "144"], ["34", "144"], ["34", "144"], ["34", "144"], ["29", "144"], ["40", "144"], ["43", "144"], ["43", "144"], ["50", "144"], ["48", "144"], ["48", "144"], ["55", "144"], ["55", "144"], ["55", "144"], ["59", "144"], ["62", "144"], ["63", "144"], ["62", "144"], ["62", "144"], ["85", "144"], ["85", "144"], ["85", "144"], ["90", "144"], ["90", "144"], ["95", "144"], ["98", "144"], ["98", "144"], ["98", "144"], ["105", "144"], ["109", "144"], ["105", "144"], ["105", "144"], ["124", "144"], ["126", "144"], ["124", "144"], ["124", "144"], ["101", "144"], ["113", "144"], ["113", "144"], ["118", "144"], ["116", "144"], ["116", "144"], ["134", "144"], ["134", "144"], ["138", "144"], ["140", "144"], ["140", "144"], ["76", "144"], ["80", "144"], ["82", "144"], ["80", "144"], ["76", "144"], ["76", "144"], ["73", "144"], ["126", "144"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["23", "59"], ["87", "85"], ["23", "90"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["59", "62"], ["23", "62"], ["63", "62"], ["23", "67"], ["23", "95"], ["23", "133"], ["43", "138"], ["116", "138"], ["134", "138"], ["23", "138"], ["138", "140"], ["23", "140"], ["23", "31"], ["23", "39"], ["23", "50"], ["52", "50"], ["48", "57"], ["23", "57"], ["52", "63"], ["23", "63"], ["67", "70"], ["73", "70"], ["23", "70"], ["57", "70"], ["70", "73"], ["23", "73"], ["80", "76"], ["80", "76"], ["23", "87"], ["95", "98"], ["101", "98"], ["23", "98"], ["70", "98"], ["98", "101"], ["23", "101"], ["43", "134"], ["116", "134"], ["23", "134"], ["136", "134"], ["31", "34"], ["23", "34"], ["29", "52"], ["23", "52"], ["23", "136"], ["50", "80"], ["23", "80"], ["82", "80"], ["55", "105"], ["126", "105"], ["76", "105"], ["85", "105"], ["124", "105"], ["23", "105"], ["23", "113"], ["62", "82"], ["23", "82"], ["85", "109"], ["124", "109"], ["23", "109"], ["43", "116"], ["23", "116"], ["98", "116"], ["126", "124"], ["126", "124"], ["126", "124"], ["98", "118"], ["23", "118"], ["23", "126"], ["85", "126"], ["124", "126"], ["55", "126"], ["105", "126"], ["70", "80"], ["70", "73"], ["70", "77"], ["70", "70"], ["70", "76"], ["70", "82"], ["98", "105"], ["98", "106"], ["98", "109"], ["133", "136"], ["133", "134"], ["105", "98"], ["105", "113"], ["105", "116"], ["105", "118"], ["105", "129"], ["105", "101"], ["105", "124"], ["105", "126"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "47": "<(LOCAL,int n: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>6</SUB>>", "51": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>6</SUB>>", "53": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n])>", "8": "<(LOCAL,StringTokenizer st1: ANY)<SUB>10</SUB>>", "60": "<(IDENTIFIER,st1,ANY st1 = new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "62": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "63": "<(readLine,readLine())<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>14</SUB>>", "79": "<(IDENTIFIER,i,arr[i] = parseInt(st1.nextToken()))<SUB>14</SUB>>", "81": "<(IDENTIFIER,Integer,parseInt(st1.nextToken()))<SUB>14</SUB>>", "83": "<(IDENTIFIER,st1,nextToken())<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.assignment,int max = -1)<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.minus,-1)<SUB>17</SUB>>", "89": "<(LOCAL,boolean flag: boolean)<SUB>18</SUB>>", "91": "<(IDENTIFIER,flag,boolean flag = true)<SUB>18</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "99": "<(IDENTIFIER,i,i &lt; n)<SUB>20</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.greaterThan,arr[i] &gt; max + 1)<SUB>22</SUB>>", "107": "<(IDENTIFIER,arr,arr[i] &gt; max + 1)<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.addition,max + 1)<SUB>22</SUB>>", "111": "<(LITERAL,1,max + 1)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.assignment,flag = false)<SUB>24</SUB>>", "115": "<(LITERAL,false,flag = false)<SUB>24</SUB>>", "117": "<(IDENTIFIER,out,println(i + 1))<SUB>25</SUB>>", "119": "<(IDENTIFIER,i,i + 1)<SUB>25</SUB>>", "121": "<(CONTROL_STRUCTURE,break;,break;)<SUB>26</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "125": "<(IDENTIFIER,max,max = Math.max(max, arr[i]))<SUB>30</SUB>>", "127": "<(IDENTIFIER,Math,Math.max(max, arr[i]))<SUB>30</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>30</SUB>>", "131": "<(IDENTIFIER,i,Math.max(max, arr[i]))<SUB>30</SUB>>", "133": "<(IDENTIFIER,flag,if (flag))<SUB>34</SUB>>", "135": "<(IDENTIFIER,out,println(-1))<SUB>35</SUB>>", "137": "<(LITERAL,1,-1)<SUB>35</SUB>>", "139": "<(IDENTIFIER,out,flush())<SUB>37</SUB>>", "141": "<(IDENTIFIER,out,close())<SUB>38</SUB>>", "143": "<(MODIFIER,STATIC)>"}}