{"edges": [["19", "21"], ["19", "109"], ["19", "110"], ["19", "111"], ["21", "4"], ["21", "22"], ["21", "23"], ["21", "26"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "49"], ["21", "50"], ["21", "69"], ["21", "76"], ["21", "77"], ["21", "95"], ["21", "104"], ["21", "107"], ["23", "24"], ["23", "25"], ["26", "3"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "66"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "63"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "92"], ["80", "81"], ["80", "91"], ["81", "82"], ["81", "90"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "85"], ["83", "86"], ["86", "87"], ["86", "88"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["104", "105"], ["104", "106"], ["107", "108"], ["23", "26"], ["26", "27"], ["27", "32"], ["30", "36"], ["34", "40"], ["38", "46"], ["42", "59"], ["50", "70"], ["77", "99"], ["95", "104"], ["104", "107"], ["107", "111"], ["25", "23"], ["32", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["52", "50"], ["70", "73"], ["70", "86"], ["73", "86"], ["79", "77"], ["97", "95"], ["45", "44"], ["53", "66"], ["66", "52"], ["80", "92"], ["92", "79"], ["98", "97"], ["46", "45"], ["55", "53"], ["81", "80"], ["99", "98"], ["56", "63"], ["63", "55"], ["82", "81"], ["57", "56"], ["83", "82"], ["59", "57"], ["86", "83"], ["19", "25"], ["20", "111"], ["23", "111"], ["26", "111"], ["27", "111"], ["30", "111"], ["34", "111"], ["40", "111"], ["38", "111"], ["38", "111"], ["44", "111"], ["42", "111"], ["42", "111"], ["56", "111"], ["55", "111"], ["55", "111"], ["53", "111"], ["52", "111"], ["66", "111"], ["52", "111"], ["50", "111"], ["50", "111"], ["70", "111"], ["73", "111"], ["83", "111"], ["82", "111"], ["81", "111"], ["80", "111"], ["80", "111"], ["79", "111"], ["92", "111"], ["92", "111"], ["79", "111"], ["77", "111"], ["77", "111"], ["98", "111"], ["97", "111"], ["97", "111"], ["95", "111"], ["95", "111"], ["104", "111"], ["104", "111"], ["107", "111"], ["107", "111"], ["83", "111"], ["19", "20"], ["19", "23"], ["26", "27"], ["19", "27"], ["32", "30"], ["36", "34"], ["40", "38"], ["19", "42"], ["52", "50"], ["52", "50"], ["79", "77"], ["79", "77"], ["97", "95"], ["97", "95"], ["23", "26"], ["19", "26"], ["19", "73"], ["27", "104"], ["19", "104"], ["95", "104"], ["104", "107"], ["19", "107"], ["19", "32"], ["26", "32"], ["32", "36"], ["19", "36"], ["36", "40"], ["19", "40"], ["19", "44"], ["53", "52"], ["53", "52"], ["66", "52"], ["66", "52"], ["50", "70"], ["19", "70"], ["81", "79"], ["81", "79"], ["53", "79"], ["19", "79"], ["92", "79"], ["92", "79"], ["99", "97"], ["99", "97"], ["19", "97"], ["19", "45"], ["34", "53"], ["19", "53"], ["55", "53"], ["55", "53"], ["57", "66"], ["19", "66"], ["63", "66"], ["81", "80"], ["81", "80"], ["53", "80"], ["19", "80"], ["19", "92"], ["70", "92"], ["73", "92"], ["81", "92"], ["99", "98"], ["99", "98"], ["19", "98"], ["56", "55"], ["56", "55"], ["63", "55"], ["63", "55"], ["82", "81"], ["82", "81"], ["66", "81"], ["19", "81"], ["77", "99"], ["19", "99"], ["42", "99"], ["57", "56"], ["57", "56"], ["59", "56"], ["19", "56"], ["56", "63"], ["19", "63"], ["83", "82"], ["83", "82"], ["83", "82"], ["19", "82"], ["59", "57"], ["19", "57"], ["59", "57"], ["19", "83"], ["70", "83"], ["73", "83"], ["30", "59"], ["19", "59"], ["38", "59"], ["70", "86"], ["73", "86"], ["19", "86"], ["70", "73"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(LOCAL,FastIO out: ANY)<SUB>2</SUB>>", "24": "<(IDENTIFIER,in,ANY in = new FastIO())<SUB>2</SUB>>", "26": "<(&lt;init&gt;,new FastIO())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY out = in)<SUB>2</SUB>>", "29": "<(IDENTIFIER,in,ANY out = in)<SUB>2</SUB>>", "31": "<(IDENTIFIER,n,n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(IDENTIFIER,m,m = nextLong())<SUB>4</SUB>>", "37": "<(IDENTIFIER,in,nextLong())<SUB>4</SUB>>", "39": "<(IDENTIFIER,k,k = nextLong())<SUB>5</SUB>>", "41": "<(IDENTIFIER,in,nextLong())<SUB>5</SUB>>", "43": "<(IDENTIFIER,mod,mod = (long) 1e9 + 9)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.cast,(long) 1e9)<SUB>6</SUB>>", "47": "<(LITERAL,1e9,(long) 1e9)<SUB>6</SUB>>", "49": "<(LOCAL,long x: long)<SUB>7</SUB>>", "51": "<(IDENTIFIER,x,long x = m - (n - n % k) / k * (k - 1) - n % k)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.subtraction,m - (n - n % k) / k * (k - 1))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.multiplication,(n - n % k) / k * (k - 1))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.subtraction,n - n % k)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.modulo,n % k)<SUB>7</SUB>>", "61": "<(IDENTIFIER,k,n % k)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,k - 1)<SUB>7</SUB>>", "67": "<(IDENTIFIER,n,n % k)<SUB>7</SUB>>", "69": "<(CONTROL_STRUCTURE,if (x &lt; 0),if (x &lt; 0))<SUB>8</SUB>>", "71": "<(IDENTIFIER,x,x &lt; 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,x = 0)<SUB>8</SUB>>", "75": "<(LITERAL,0,x = 0)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,long ans = (pow(2, x + 1) - 2) * k + m - x * k)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.subtraction,(pow(2, x + 1) - 2) * k + m - x * k)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.multiplication,(pow(2, x + 1) - 2) * k)<SUB>9</SUB>>", "83": "<(pow,pow(2, x + 1))<SUB>9</SUB>>", "85": "<(LITERAL,2,pow(2, x + 1))<SUB>9</SUB>>", "87": "<(IDENTIFIER,x,x + 1)<SUB>9</SUB>>", "89": "<(LITERAL,2,pow(2, x + 1) - 2)<SUB>9</SUB>>", "91": "<(IDENTIFIER,m,(pow(2, x + 1) - 2) * k + m)<SUB>9</SUB>>", "93": "<(IDENTIFIER,x,x * k)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.assignment,ans = ((ans % mod) + mod) % mod)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.modulo,((ans % mod) + mod) % mod)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.modulo,ans % mod)<SUB>10</SUB>>", "101": "<(IDENTIFIER,mod,ans % mod)<SUB>10</SUB>>", "103": "<(IDENTIFIER,mod,((ans % mod) + mod) % mod)<SUB>10</SUB>>", "105": "<(IDENTIFIER,out,println(ans))<SUB>11</SUB>>", "107": "<(close,close())<SUB>12</SUB>>", "109": "<(MODIFIER,PUBLIC)>", "111": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}