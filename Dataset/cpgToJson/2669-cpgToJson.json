{"edges": [["21", "22"], ["21", "23"], ["21", "118"], ["21", "119"], ["21", "120"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "32"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["32", "33"], ["33", "34"], ["33", "35"], ["33", "36"], ["33", "37"], ["33", "38"], ["33", "39"], ["33", "40"], ["33", "41"], ["33", "42"], ["33", "43"], ["33", "44"], ["33", "45"], ["33", "46"], ["33", "47"], ["33", "48"], ["33", "49"], ["33", "50"], ["33", "116"], ["50", "51"], ["50", "55"], ["50", "56"], ["50", "60"], ["50", "75"], ["50", "78"], ["50", "113"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "64"], ["60", "67"], ["60", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["78", "85"], ["78", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "97"], ["95", "96"], ["97", "98"], ["97", "101"], ["97", "104"], ["97", "107"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["116", "117"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "53"], ["26", "24"], ["30", "28"], ["116", "120"], ["51", "58"], ["56", "61"], ["75", "79"], ["113", "116"], ["53", "51"], ["58", "56"], ["61", "64"], ["64", "73"], ["64", "75"], ["67", "64"], ["79", "82"], ["82", "90"], ["82", "113"], ["85", "82"], ["70", "67"], ["71", "70"], ["89", "95"], ["89", "85"], ["73", "71"], ["90", "89"], ["95", "98"], ["98", "101"], ["101", "109"], ["101", "85"], ["104", "101"], ["108", "104"], ["109", "108"], ["21", "26"], ["22", "120"], ["24", "120"], ["27", "120"], ["28", "120"], ["31", "120"], ["53", "120"], ["51", "120"], ["51", "120"], ["56", "120"], ["56", "120"], ["56", "120"], ["61", "120"], ["64", "120"], ["64", "120"], ["75", "120"], ["79", "120"], ["82", "120"], ["82", "120"], ["113", "120"], ["113", "120"], ["116", "120"], ["116", "120"], ["89", "120"], ["89", "120"], ["95", "120"], ["98", "120"], ["101", "120"], ["101", "120"], ["85", "120"], ["108", "120"], ["108", "120"], ["104", "120"], ["73", "120"], ["70", "120"], ["70", "120"], ["67", "120"], ["21", "22"], ["21", "24"], ["21", "28"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "50"], ["53", "51"], ["58", "56"], ["21", "75"], ["113", "116"], ["21", "116"], ["21", "61"], ["21", "79"], ["31", "113"], ["21", "113"], ["75", "113"], ["95", "113"], ["27", "53"], ["21", "53"], ["21", "58"], ["61", "64"], ["67", "64"], ["21", "64"], ["51", "64"], ["64", "67"], ["21", "67"], ["79", "82"], ["85", "82"], ["21", "82"], ["82", "85"], ["21", "85"], ["56", "70"], ["56", "89"], ["21", "89"], ["53", "73"], ["21", "73"], ["75", "95"], ["21", "95"], ["82", "98"], ["21", "98"], ["21", "104"], ["82", "104"], ["98", "101"], ["104", "101"], ["21", "101"], ["101", "104"], ["21", "108"], ["64", "73"], ["64", "64"], ["64", "71"], ["64", "67"], ["64", "70"], ["82", "89"], ["82", "85"], ["82", "82"], ["82", "90"], ["89", "98"], ["89", "95"], ["89", "101"], ["101", "104"], ["101", "101"], ["101", "108"], ["101", "109"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastReader())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new FastWriter())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new FastWriter())<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new FastWriter())<SUB>3</SUB>>", "33": "<(BLOCK,try,try)<SUB>3</SUB>>", "35": "<(LOCAL,int i: int)<SUB>4</SUB>>", "37": "<(LOCAL,int n: int)<SUB>4</SUB>>", "39": "<(LOCAL,int l: int)<SUB>4</SUB>>", "41": "<(LOCAL,int m: int)<SUB>4</SUB>>", "43": "<(LOCAL,int p: int)<SUB>4</SUB>>", "45": "<(LOCAL,int ti: int)<SUB>4</SUB>>", "47": "<(LOCAL,long x: long)<SUB>5</SUB>>", "49": "<(LOCAL,long z: long)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>10</SUB>>", "53": "<(nextInt,nextInt())<SUB>10</SUB>>", "55": "<(LOCAL,int[] a: int[])<SUB>11</SUB>>", "57": "<(IDENTIFIER,a,int[] a = new int[101])<SUB>11</SUB>>", "59": "<(LITERAL,101,new int[101])<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.assignment,i = 0)<SUB>12</SUB>>", "63": "<(LITERAL,0,i = 0)<SUB>12</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,a[in.nextInt()])<SUB>13</SUB>>", "73": "<(nextInt,nextInt())<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,m = 0)<SUB>15</SUB>>", "77": "<(LITERAL,0,m = 0)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.assignment,i = 1)<SUB>16</SUB>>", "81": "<(LITERAL,1,i = 1)<SUB>16</SUB>>", "83": "<(IDENTIFIER,i,i &lt; 101)<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.greaterThan,a[i] &gt; 0)<SUB>17</SUB>>", "91": "<(IDENTIFIER,a,a[i] &gt; 0)<SUB>17</SUB>>", "93": "<(LITERAL,0,a[i] &gt; 0)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,m++)<SUB>18</SUB>>", "97": "<(CONTROL_STRUCTURE,for (j = i; Some(j &lt;= 100); j += i),for (j = i; Some(j &lt;= 100); j += i))<SUB>19</SUB>>", "99": "<(IDENTIFIER,j,j = i)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 100)<SUB>19</SUB>>", "103": "<(LITERAL,100,j &lt;= 100)<SUB>19</SUB>>", "105": "<(IDENTIFIER,j,j += i)<SUB>19</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>20</SUB>>", "111": "<(IDENTIFIER,j,a[j] = 0)<SUB>20</SUB>>", "113": "<(println,println(m))<SUB>24</SUB>>", "115": "<(IDENTIFIER,m,println(m))<SUB>24</SUB>>", "117": "<(IDENTIFIER,out,commit())<SUB>26</SUB>>", "119": "<(MODIFIER,STATIC)>"}}