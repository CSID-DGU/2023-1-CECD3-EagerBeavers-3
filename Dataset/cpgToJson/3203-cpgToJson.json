{"edges": [["17", "18"], ["17", "19"], ["17", "70"], ["17", "71"], ["17", "72"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "35"], ["31", "39"], ["32", "33"], ["32", "34"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["40", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["43", "54"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["47", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "64"], ["57", "58"], ["57", "59"], ["57", "60"], ["60", "61"], ["60", "63"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["21", "28"], ["26", "32"], ["23", "21"], ["28", "26"], ["32", "36"], ["32", "51"], ["36", "72"], ["41", "72"], ["43", "41"], ["45", "61"], ["54", "43"], ["47", "45"], ["56", "54"], ["50", "47"], ["57", "67"], ["64", "56"], ["51", "50"], ["60", "57"], ["66", "64"], ["61", "60"], ["67", "66"], ["17", "23"], ["18", "72"], ["21", "72"], ["21", "72"], ["26", "72"], ["28", "72"], ["26", "72"], ["26", "72"], ["32", "72"], ["36", "72"], ["36", "72"], ["36", "72"], ["43", "72"], ["17", "18"], ["23", "21"], ["28", "26"], ["28", "26"], ["17", "23"], ["17", "28"], ["21", "28"], ["28", "32"], ["17", "32"], ["23", "36"], ["17", "36"], ["32", "36"], ["23", "41"], ["17", "41"], ["43", "41"], ["43", "41"], ["43", "41"], ["17", "43"], ["45", "43"], ["45", "43"], ["54", "43"], ["54", "43"], ["28", "45"], ["17", "45"], ["47", "45"], ["47", "45"], ["47", "45"], ["45", "54"], ["17", "54"], ["57", "54"], ["57", "54"], ["57", "54"], ["64", "54"], ["64", "54"], ["51", "47"], ["17", "47"], ["50", "47"], ["50", "47"], ["57", "56"], ["57", "56"], ["57", "56"], ["64", "56"], ["64", "56"], ["51", "50"], ["17", "50"], ["61", "57"], ["17", "57"], ["60", "57"], ["60", "57"], ["67", "64"], ["17", "64"], ["66", "64"], ["66", "64"], ["26", "51"], ["17", "51"], ["61", "60"], ["17", "60"], ["67", "66"], ["17", "66"], ["47", "61"], ["17", "61"], ["57", "67"], ["17", "67"], ["32", "47"], ["32", "60"], ["32", "61"], ["32", "64"], ["32", "51"], ["32", "57"], ["32", "66"], ["32", "36"], ["32", "56"], ["32", "67"], ["32", "41"], ["32", "45"], ["32", "50"], ["32", "54"], ["32", "43"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "23": "<(nextInt,nextInt())<SUB>3</SUB>>", "25": "<(LOCAL,String nn: java.lang.String)<SUB>4</SUB>>", "27": "<(IDENTIFIER,nn,String nn = Integer.toString(n))<SUB>4</SUB>>", "29": "<(IDENTIFIER,Integer,Integer.toString(n))<SUB>4</SUB>>", "31": "<(CONTROL_STRUCTURE,if (n &gt;= 0),if (n &gt;= 0))<SUB>5</SUB>>", "33": "<(IDENTIFIER,n,n &gt;= 0)<SUB>5</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "37": "<(IDENTIFIER,this,println(n))<SUB>6</SUB>>", "39": "<(CONTROL_STRUCTURE,else,else)<SUB>7</SUB>>", "41": "<(println,println(Math.max(Integer.parseInt(nn.substring(0, nn.length() - 1)), Integer.parseInt(nn.substring(0, nn.length() - 2) + nn.charAt(nn.length() - 1)))))<SUB>8</SUB>>", "43": "<(max,Math.max(Integer.parseInt(nn.substring(0, nn.length() - 1)), Integer.parseInt(nn.substring(0, nn.length() - 2) + nn.charAt(nn.length() - 1))))<SUB>8</SUB>>", "45": "<(parseInt,Integer.parseInt(nn.substring(0, nn.length() - 1)))<SUB>8</SUB>>", "47": "<(substring,nn.substring(0, nn.length() - 1))<SUB>8</SUB>>", "49": "<(LITERAL,0,nn.substring(0, nn.length() - 1))<SUB>8</SUB>>", "51": "<(length,nn.length())<SUB>8</SUB>>", "53": "<(LITERAL,1,nn.length() - 1)<SUB>8</SUB>>", "55": "<(IDENTIFIER,Integer,Integer.parseInt(nn.substring(0, nn.length() - 2) + nn.charAt(nn.length() - 1)))<SUB>8</SUB>>", "57": "<(substring,nn.substring(0, nn.length() - 2))<SUB>8</SUB>>", "59": "<(LITERAL,0,nn.substring(0, nn.length() - 2))<SUB>8</SUB>>", "61": "<(length,nn.length())<SUB>8</SUB>>", "63": "<(LITERAL,2,nn.length() - 2)<SUB>8</SUB>>", "65": "<(IDENTIFIER,nn,nn.charAt(nn.length() - 1))<SUB>8</SUB>>", "67": "<(length,nn.length())<SUB>8</SUB>>", "69": "<(LITERAL,1,nn.length() - 1)<SUB>8</SUB>>", "71": "<(MODIFIER,STATIC)>"}}