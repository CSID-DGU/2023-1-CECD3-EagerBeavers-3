{"edges": [["25", "27"], ["25", "251"], ["25", "252"], ["25", "253"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "42"], ["27", "45"], ["27", "49"], ["27", "50"], ["27", "56"], ["27", "249"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["45", "46"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "74"], ["66", "75"], ["66", "79"], ["66", "8"], ["66", "98"], ["66", "101"], ["66", "10"], ["66", "103"], ["66", "106"], ["66", "107"], ["66", "110"], ["66", "121"], ["66", "245"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["98", "100"], ["101", "7"], ["101", "102"], ["103", "104"], ["103", "105"], ["106", "9"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "116"], ["112", "120"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "119"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "138"], ["132", "162"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "148"], ["138", "151"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "147"], ["143", "144"], ["143", "146"], ["144", "145"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["153", "161"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["157", "160"], ["162", "163"], ["163", "164"], ["163", "182"], ["163", "186"], ["163", "187"], ["163", "190"], ["163", "191"], ["163", "199"], ["163", "227"], ["163", "230"], ["163", "232"], ["164", "165"], ["164", "179"], ["165", "166"], ["165", "169"], ["166", "167"], ["167", "168"], ["169", "170"], ["169", "174"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["180", "181"], ["182", "183"], ["182", "185"], ["183", "184"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "198"], ["194", "195"], ["194", "197"], ["195", "196"], ["199", "200"], ["199", "204"], ["199", "211"], ["200", "201"], ["200", "202"], ["202", "203"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "224"], ["215", "216"], ["215", "220"], ["215", "221"], ["216", "217"], ["216", "219"], ["217", "218"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "238"], ["234", "244"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["238", "241"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["247", "248"], ["249", "250"], ["28", "35"], ["31", "44"], ["42", "48"], ["45", "54"], ["50", "58"], ["249", "253"], ["30", "28"], ["44", "42"], ["46", "45"], ["52", "50"], ["58", "61"], ["61", "72"], ["61", "249"], ["64", "61"], ["33", "40"], ["36", "31"], ["48", "46"], ["54", "52"], ["68", "77"], ["75", "81"], ["98", "101"], ["101", "105"], ["103", "106"], ["106", "107"], ["107", "115"], ["110", "123"], ["245", "64"], ["35", "33"], ["38", "36"], ["70", "68"], ["77", "75"], ["81", "84"], ["84", "91"], ["84", "100"], ["87", "84"], ["100", "98"], ["105", "103"], ["123", "126"], ["126", "134"], ["126", "247"], ["129", "126"], ["247", "245"], ["40", "38"], ["72", "70"], ["90", "87"], ["113", "116"], ["116", "110"], ["91", "96"], ["94", "90"], ["115", "113"], ["133", "144"], ["133", "167"], ["96", "94"], ["134", "133"], ["140", "148"], ["148", "156"], ["151", "129"], ["142", "140"], ["187", "195"], ["191", "202"], ["227", "230"], ["230", "237"], ["232", "129"], ["143", "142"], ["154", "157"], ["157", "151"], ["165", "180"], ["165", "183"], ["183", "247"], ["183", "187"], ["193", "191"], ["200", "208"], ["200", "217"], ["204", "227"], ["144", "146"], ["146", "143"], ["156", "154"], ["166", "165"], ["166", "171"], ["169", "165"], ["180", "167"], ["194", "193"], ["202", "200"], ["206", "204"], ["212", "227"], ["235", "241"], ["238", "232"], ["167", "166"], ["170", "175"], ["174", "169"], ["195", "197"], ["197", "194"], ["208", "206"], ["214", "212"], ["237", "235"], ["241", "238"], ["171", "173"], ["173", "170"], ["175", "174"], ["215", "224"], ["224", "214"], ["216", "221"], ["221", "215"], ["217", "219"], ["219", "216"], ["25", "30"], ["26", "253"], ["28", "253"], ["33", "253"], ["36", "253"], ["36", "253"], ["36", "253"], ["31", "253"], ["42", "253"], ["45", "253"], ["45", "253"], ["52", "253"], ["54", "253"], ["52", "253"], ["50", "253"], ["50", "253"], ["58", "253"], ["61", "253"], ["61", "253"], ["61", "253"], ["249", "253"], ["249", "253"], ["70", "253"], ["72", "253"], ["70", "253"], ["68", "253"], ["68", "253"], ["75", "253"], ["75", "253"], ["75", "253"], ["81", "253"], ["98", "253"], ["101", "253"], ["103", "253"], ["106", "253"], ["107", "253"], ["110", "253"], ["113", "253"], ["116", "253"], ["116", "253"], ["110", "253"], ["123", "253"], ["126", "253"], ["126", "253"], ["126", "253"], ["133", "253"], ["133", "253"], ["165", "253"], ["174", "253"], ["169", "253"], ["165", "253"], ["165", "253"], ["183", "253"], ["183", "253"], ["187", "253"], ["191", "253"], ["191", "253"], ["200", "253"], ["200", "253"], ["200", "253"], ["221", "253"], ["215", "253"], ["214", "253"], ["212", "253"], ["212", "253"], ["204", "253"], ["204", "253"], ["227", "253"], ["230", "253"], ["232", "253"], ["235", "253"], ["238", "253"], ["238", "253"], ["238", "253"], ["238", "253"], ["232", "253"], ["247", "253"], ["245", "253"], ["245", "253"], ["64", "253"], ["180", "253"], ["140", "253"], ["140", "253"], ["148", "253"], ["151", "253"], ["154", "253"], ["157", "253"], ["157", "253"], ["157", "253"], ["151", "253"], ["129", "253"], ["90", "253"], ["94", "253"], ["96", "253"], ["94", "253"], ["90", "253"], ["90", "253"], ["87", "253"], ["25", "26"], ["25", "28"], ["25", "42"], ["52", "50"], ["52", "50"], ["28", "31"], ["25", "31"], ["33", "31"], ["36", "31"], ["42", "45"], ["25", "45"], ["25", "58"], ["45", "249"], ["245", "249"], ["25", "249"], ["25", "33"], ["25", "41"], ["25", "52"], ["54", "52"], ["58", "61"], ["64", "61"], ["25", "61"], ["50", "61"], ["61", "64"], ["25", "64"], ["70", "68"], ["70", "68"], ["77", "75"], ["25", "98"], ["25", "103"], ["33", "36"], ["25", "36"], ["31", "54"], ["25", "54"], ["25", "81"], ["98", "101"], ["25", "101"], ["103", "106"], ["25", "106"], ["101", "107"], ["25", "107"], ["106", "110"], ["25", "110"], ["113", "110"], ["116", "110"], ["25", "123"], ["45", "245"], ["25", "245"], ["247", "245"], ["52", "70"], ["94", "70"], ["25", "70"], ["72", "70"], ["68", "77"], ["25", "77"], ["81", "84"], ["87", "84"], ["25", "84"], ["77", "84"], ["84", "87"], ["25", "87"], ["94", "90"], ["94", "90"], ["25", "113"], ["25", "120"], ["123", "126"], ["129", "126"], ["25", "126"], ["84", "126"], ["126", "129"], ["25", "129"], ["107", "247"], ["227", "247"], ["148", "247"], ["25", "247"], ["54", "72"], ["96", "72"], ["25", "72"], ["113", "116"], ["25", "116"], ["70", "94"], ["25", "94"], ["96", "94"], ["75", "133"], ["174", "133"], ["238", "133"], ["90", "133"], ["25", "133"], ["25", "140"], ["72", "96"], ["25", "96"], ["107", "148"], ["227", "148"], ["25", "148"], ["140", "148"], ["144", "151"], ["25", "151"], ["154", "151"], ["157", "151"], ["25", "187"], ["193", "191"], ["193", "191"], ["25", "142"], ["25", "154"], ["25", "161"], ["25", "204"], ["75", "204"], ["133", "204"], ["174", "204"], ["107", "227"], ["148", "227"], ["25", "227"], ["212", "227"], ["204", "227"], ["195", "230"], ["217", "230"], ["25", "230"], ["230", "232"], ["25", "232"], ["235", "232"], ["238", "232"], ["154", "157"], ["25", "157"], ["148", "157"], ["166", "165"], ["169", "165"], ["169", "165"], ["167", "183"], ["171", "183"], ["25", "183"], ["25", "193"], ["191", "200"], ["25", "200"], ["202", "200"], ["215", "212"], ["215", "212"], ["215", "212"], ["75", "212"], ["133", "212"], ["174", "212"], ["25", "235"], ["25", "244"], ["110", "144"], ["232", "144"], ["151", "144"], ["25", "144"], ["167", "166"], ["174", "169"], ["174", "169"], ["167", "180"], ["171", "180"], ["25", "180"], ["25", "202"], ["25", "206"], ["75", "206"], ["133", "206"], ["174", "206"], ["235", "238"], ["25", "238"], ["227", "238"], ["75", "238"], ["133", "238"], ["174", "238"], ["110", "167"], ["232", "167"], ["180", "167"], ["151", "167"], ["25", "167"], ["75", "174"], ["133", "174"], ["25", "174"], ["183", "195"], ["25", "195"], ["215", "214"], ["215", "214"], ["215", "214"], ["75", "214"], ["133", "214"], ["174", "214"], ["167", "171"], ["25", "171"], ["25", "215"], ["200", "215"], ["200", "221"], ["25", "221"], ["195", "217"], ["25", "217"], ["61", "107"], ["61", "115"], ["61", "68"], ["61", "77"], ["61", "64"], ["61", "98"], ["61", "113"], ["61", "75"], ["61", "81"], ["61", "84"], ["61", "103"], ["61", "245"], ["61", "247"], ["61", "101"], ["61", "61"], ["61", "100"], ["61", "70"], ["61", "116"], ["61", "72"], ["61", "123"], ["61", "106"], ["61", "126"], ["61", "105"], ["61", "110"], ["84", "94"], ["84", "96"], ["84", "84"], ["84", "87"], ["84", "91"], ["84", "90"], ["126", "134"], ["126", "133"], ["133", "167"], ["133", "154"], ["133", "146"], ["133", "151"], ["133", "144"], ["133", "129"], ["133", "148"], ["133", "183"], ["133", "166"], ["133", "142"], ["133", "157"], ["133", "140"], ["133", "143"], ["133", "126"], ["133", "165"], ["133", "156"], ["165", "167"], ["165", "180"], ["165", "166"], ["165", "165"], ["183", "230"], ["183", "232"], ["183", "197"], ["183", "129"], ["183", "191"], ["183", "195"], ["183", "238"], ["183", "187"], ["183", "194"], ["183", "202"], ["183", "235"], ["183", "193"], ["183", "200"], ["183", "237"], ["183", "126"], ["183", "241"], ["183", "227"], ["200", "214"], ["200", "215"], ["200", "204"], ["200", "206"], ["200", "208"], ["200", "212"], ["200", "221"], ["200", "224"], ["200", "217"], ["200", "216"], ["200", "219"], ["166", "169"], ["166", "170"], ["166", "173"], ["166", "174"], ["166", "171"], ["166", "175"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "49": "<(LOCAL,int t: int)<SUB>5</SUB>>", "51": "<(IDENTIFIER,t,int t = parseInt(f.readLine()))<SUB>5</SUB>>", "53": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,f,readLine())<SUB>5</SUB>>", "57": "<(LOCAL,int q: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,q,int q = 1)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessEqualsThan,q &lt;= t)<SUB>7</SUB>>", "63": "<(IDENTIFIER,t,q &lt;= t)<SUB>7</SUB>>", "65": "<(IDENTIFIER,q,q++)<SUB>7</SUB>>", "67": "<(LOCAL,int n: int)<SUB>9</SUB>>", "69": "<(IDENTIFIER,n,int n = parseInt(f.readLine()))<SUB>9</SUB>>", "71": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>9</SUB>>", "73": "<(IDENTIFIER,f,readLine())<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[] array = new int[n])<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[n])>", "79": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>12</SUB>>", "83": "<(LITERAL,0,int k = 0)<SUB>12</SUB>>", "85": "<(IDENTIFIER,k,k &lt; n)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,k++)<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,array[k])<SUB>13</SUB>>", "93": "<(IDENTIFIER,k,array[k] = parseInt(f.readLine()))<SUB>13</SUB>>", "95": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>13</SUB>>", "97": "<(IDENTIFIER,f,readLine())<SUB>13</SUB>>", "98": "<(&lt;operator&gt;.assignment,ANY sj = new StringJoiner(&quot;\\n&quot;))<SUB>16</SUB>>", "100": "<(&lt;operator&gt;.alloc,new StringJoiner(&quot;\\n&quot;))<SUB>16</SUB>>", "7": "<(IDENTIFIER,sj,new StringJoiner(&quot;\\n&quot;))<SUB>16</SUB>>", "10": "<(LOCAL,Stack&lt;Entry&gt; stack: ANY)<SUB>17</SUB>>", "104": "<(IDENTIFIER,stack,ANY stack = new Stack&lt;Entry&gt;())<SUB>17</SUB>>", "106": "<(&lt;init&gt;,new Stack&lt;Entry&gt;())<SUB>17</SUB>>", "107": "<(add,add(&quot;1&quot;))<SUB>20</SUB>>", "109": "<(LITERAL,&quot;1&quot;,add(&quot;1&quot;))<SUB>20</SUB>>", "111": "<(IDENTIFIER,stack,push(new Entry(&quot;1&quot;, 1)))<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "115": "<(&lt;operator&gt;.alloc,new Entry(&quot;1&quot;, 1))<SUB>21</SUB>>", "117": "<(IDENTIFIER,$obj5,new Entry(&quot;1&quot;, 1))>", "119": "<(LITERAL,1,new Entry(&quot;1&quot;, 1))<SUB>21</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k &lt; n); k++),for (int k = 1; Some(k &lt; n); k++))<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>23</SUB>>", "125": "<(LITERAL,1,int k = 1)<SUB>23</SUB>>", "127": "<(IDENTIFIER,k,k &lt; n)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,k++)<SUB>23</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.equals,array[k] == 1)<SUB>24</SUB>>", "135": "<(IDENTIFIER,array,array[k] == 1)<SUB>24</SUB>>", "137": "<(LITERAL,1,array[k] == 1)<SUB>24</SUB>>", "139": "<(LOCAL,String s: java.lang.String)<SUB>26</SUB>>", "141": "<(IDENTIFIER,s,String s = stack.peek().s + &quot;.1&quot;)<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,stack.peek().s)<SUB>26</SUB>>", "145": "<(IDENTIFIER,stack,peek())<SUB>26</SUB>>", "147": "<(LITERAL,&quot;.1&quot;,stack.peek().s + &quot;.1&quot;)<SUB>26</SUB>>", "149": "<(IDENTIFIER,sj,add(s))<SUB>27</SUB>>", "151": "<(push,push(new Entry(s, 1)))<SUB>28</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "155": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "157": "<(&lt;init&gt;,new Entry(s, 1))<SUB>28</SUB>>", "159": "<(IDENTIFIER,s,new Entry(s, 1))<SUB>28</SUB>>", "161": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "165": "<(&lt;operator&gt;.logicalAnd,!stack.isEmpty() &amp;&amp; stack.peek().last != array[k] - 1)<SUB>30</SUB>>", "167": "<(isEmpty,isEmpty())<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.notEquals,stack.peek().last != array[k] - 1)<SUB>30</SUB>>", "171": "<(peek,peek())<SUB>30</SUB>>", "173": "<(FIELD_IDENTIFIER,last,last)<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,array[k])<SUB>30</SUB>>", "177": "<(IDENTIFIER,k,array[k] - 1)<SUB>30</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "181": "<(IDENTIFIER,stack,pop())<SUB>31</SUB>>", "183": "<(isEmpty,isEmpty())<SUB>34</SUB>>", "185": "<(CONTROL_STRUCTURE,break;,break;)<SUB>34</SUB>>", "187": "<(&lt;operator&gt;.assignment,String s = &quot;&quot;)<SUB>36</SUB>>", "189": "<(LITERAL,&quot;&quot;,String s = &quot;&quot;)<SUB>36</SUB>>", "191": "<(&lt;operator&gt;.assignment,int index = lastIndexOf(&quot;.&quot;))<SUB>37</SUB>>", "193": "<(lastIndexOf,lastIndexOf(&quot;.&quot;))<SUB>37</SUB>>", "195": "<(peek,peek())<SUB>37</SUB>>", "197": "<(FIELD_IDENTIFIER,s,s)<SUB>37</SUB>>", "199": "<(CONTROL_STRUCTURE,if (index == -1),if (index == -1))<SUB>38</SUB>>", "201": "<(IDENTIFIER,index,index == -1)<SUB>38</SUB>>", "203": "<(LITERAL,1,-1)<SUB>38</SUB>>", "205": "<(IDENTIFIER,s,s = &quot;&quot; + array[k])<SUB>38</SUB>>", "207": "<(LITERAL,&quot;&quot;,&quot;&quot; + array[k])<SUB>38</SUB>>", "209": "<(IDENTIFIER,array,&quot;&quot; + array[k])<SUB>38</SUB>>", "211": "<(CONTROL_STRUCTURE,else,else)<SUB>39</SUB>>", "213": "<(IDENTIFIER,s,s = stack.peek().s.substring(0, index + 1) + array[k])<SUB>39</SUB>>", "215": "<(substring,substring(0, index + 1))<SUB>39</SUB>>", "217": "<(peek,peek())<SUB>39</SUB>>", "219": "<(FIELD_IDENTIFIER,s,s)<SUB>39</SUB>>", "221": "<(&lt;operator&gt;.addition,index + 1)<SUB>39</SUB>>", "223": "<(LITERAL,1,index + 1)<SUB>39</SUB>>", "225": "<(IDENTIFIER,array,stack.peek().s.substring(0, index + 1) + array[k])<SUB>39</SUB>>", "227": "<(add,add(s))<SUB>40</SUB>>", "229": "<(IDENTIFIER,s,add(s))<SUB>40</SUB>>", "231": "<(IDENTIFIER,stack,pop())<SUB>41</SUB>>", "233": "<(IDENTIFIER,stack,push(new Entry(s, array[k])))<SUB>42</SUB>>", "235": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "237": "<(&lt;operator&gt;.alloc,new Entry(s, array[k]))<SUB>42</SUB>>", "239": "<(IDENTIFIER,$obj7,new Entry(s, array[k]))>", "241": "<(&lt;operator&gt;.indexAccess,array[k])<SUB>42</SUB>>", "243": "<(IDENTIFIER,k,new Entry(s, array[k]))<SUB>42</SUB>>", "245": "<(println,println(sj.toString()))<SUB>46</SUB>>", "247": "<(toString,toString())<SUB>46</SUB>>", "249": "<(close,close())<SUB>52</SUB>>", "251": "<(MODIFIER,PUBLIC)>", "253": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}