{"edges": [["19", "20"], ["19", "21"], ["19", "226"], ["19", "227"], ["19", "228"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "92"], ["21", "93"], ["21", "96"], ["21", "115"], ["21", "217"], ["21", "224"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["55", "77"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "125"], ["115", "127"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "134"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "158"], ["144", "198"], ["145", "146"], ["145", "157"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["169", "170"], ["169", "183"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "210"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["224", "225"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["85", "93"], ["93", "98"], ["217", "224"], ["224", "228"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "88"], ["53", "50"], ["87", "85"], ["98", "101"], ["101", "110"], ["101", "117"], ["104", "101"], ["106", "104"], ["117", "122"], ["120", "131"], ["120", "220"], ["125", "122"], ["218", "221"], ["221", "217"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "79"], ["77", "53"], ["88", "87"], ["107", "106"], ["122", "120"], ["129", "136"], ["220", "218"], ["59", "57"], ["66", "64"], ["71", "70"], ["78", "77"], ["108", "107"], ["131", "129"], ["136", "139"], ["139", "150"], ["139", "125"], ["142", "139"], ["60", "59"], ["67", "66"], ["72", "71"], ["79", "78"], ["110", "108"], ["146", "142"], ["146", "160"], ["160", "163"], ["163", "172"], ["163", "201"], ["166", "163"], ["199", "213"], ["199", "142"], ["210", "142"], ["147", "146"], ["147", "154"], ["154", "146"], ["200", "199"], ["200", "206"], ["205", "199"], ["212", "210"], ["148", "147"], ["170", "185"], ["170", "166"], ["183", "166"], ["201", "200"], ["206", "205"], ["213", "212"], ["150", "148"], ["171", "170"], ["171", "179"], ["176", "170"], ["184", "194"], ["189", "183"], ["172", "171"], ["177", "176"], ["185", "184"], ["190", "189"], ["179", "177"], ["192", "190"], ["194", "192"], ["19", "24"], ["20", "228"], ["22", "228"], ["25", "228"], ["25", "228"], ["30", "228"], ["35", "228"], ["35", "228"], ["40", "228"], ["40", "228"], ["40", "228"], ["50", "228"], ["50", "228"], ["85", "228"], ["85", "228"], ["85", "228"], ["93", "228"], ["98", "228"], ["101", "228"], ["101", "228"], ["117", "228"], ["120", "228"], ["122", "228"], ["120", "228"], ["120", "228"], ["217", "228"], ["221", "228"], ["217", "228"], ["217", "228"], ["224", "228"], ["224", "228"], ["129", "228"], ["131", "228"], ["129", "228"], ["129", "228"], ["136", "228"], ["139", "228"], ["139", "228"], ["125", "228"], ["148", "228"], ["147", "228"], ["146", "228"], ["154", "228"], ["146", "228"], ["146", "228"], ["160", "228"], ["163", "228"], ["163", "228"], ["201", "228"], ["200", "228"], ["199", "228"], ["199", "228"], ["199", "228"], ["210", "228"], ["210", "228"], ["170", "228"], ["177", "228"], ["176", "228"], ["170", "228"], ["170", "228"], ["183", "228"], ["192", "228"], ["183", "228"], ["183", "228"], ["166", "228"], ["142", "228"], ["106", "228"], ["106", "228"], ["104", "228"], ["57", "228"], ["57", "228"], ["64", "228"], ["66", "228"], ["64", "228"], ["64", "228"], ["70", "228"], ["70", "228"], ["77", "228"], ["77", "228"], ["53", "228"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["87", "85"], ["87", "85"], ["19", "93"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "98"], ["19", "106"], ["19", "117"], ["221", "217"], ["221", "217"], ["37", "224"], ["67", "224"], ["19", "224"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["19", "77"], ["88", "87"], ["88", "87"], ["19", "87"], ["98", "101"], ["104", "101"], ["19", "101"], ["87", "101"], ["110", "104"], ["19", "104"], ["117", "120"], ["125", "120"], ["19", "120"], ["122", "120"], ["122", "120"], ["131", "125"], ["148", "125"], ["201", "125"], ["19", "125"], ["131", "129"], ["131", "129"], ["93", "221"], ["210", "221"], ["19", "221"], ["19", "88"], ["42", "88"], ["19", "122"], ["101", "122"], ["139", "122"], ["19", "136"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["201", "131"], ["19", "131"], ["120", "131"], ["136", "139"], ["142", "139"], ["19", "139"], ["122", "139"], ["163", "139"], ["150", "142"], ["154", "142"], ["194", "142"], ["19", "142"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["19", "110"], ["101", "110"], ["19", "160"], ["183", "210"], ["147", "146"], ["147", "146"], ["154", "146"], ["154", "146"], ["160", "163"], ["166", "163"], ["19", "163"], ["139", "163"], ["163", "166"], ["179", "166"], ["19", "166"], ["200", "199"], ["200", "199"], ["93", "210"], ["19", "210"], ["148", "147"], ["148", "147"], ["19", "147"], ["129", "154"], ["19", "154"], ["150", "154"], ["201", "200"], ["201", "200"], ["19", "200"], ["131", "148"], ["201", "148"], ["19", "148"], ["150", "148"], ["150", "148"], ["176", "170"], ["176", "170"], ["131", "201"], ["19", "201"], ["148", "201"], ["177", "201"], ["192", "201"], ["19", "150"], ["139", "150"], ["177", "176"], ["177", "176"], ["19", "176"], ["148", "177"], ["192", "177"], ["19", "177"], ["179", "177"], ["179", "177"], ["19", "179"], ["163", "179"], ["148", "192"], ["177", "192"], ["19", "192"], ["194", "192"], ["194", "192"], ["19", "194"], ["150", "194"], ["154", "194"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "79"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["101", "107"], ["101", "104"], ["101", "101"], ["101", "108"], ["101", "106"], ["101", "110"], ["120", "120"], ["120", "136"], ["120", "131"], ["120", "129"], ["120", "139"], ["120", "122"], ["120", "125"], ["139", "146"], ["139", "150"], ["139", "148"], ["139", "139"], ["139", "142"], ["139", "147"], ["146", "163"], ["146", "201"], ["146", "160"], ["146", "200"], ["146", "199"], ["163", "163"], ["163", "170"], ["163", "171"], ["163", "166"], ["163", "172"], ["199", "213"], ["199", "212"], ["199", "210"], ["147", "154"], ["200", "206"], ["200", "205"], ["170", "192"], ["170", "185"], ["170", "189"], ["170", "190"], ["170", "184"], ["170", "194"], ["170", "183"], ["171", "179"], ["171", "176"], ["171", "177"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>6</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int u = scan.nextInt() - 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.subtraction,scan.nextInt() - 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "63": "<(LOCAL,int v: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,v,int v = scan.nextInt() - 1)<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(LITERAL,1,scan.nextInt() - 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[u][v])<SUB>10</SUB>>", "73": "<(IDENTIFIER,graph,graph[u][v] = true)<SUB>10</SUB>>", "75": "<(IDENTIFIER,v,graph[u][v] = true)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,graph[v][u] = true)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,graph[v])<SUB>11</SUB>>", "81": "<(IDENTIFIER,v,graph[v][u] = true)<SUB>11</SUB>>", "83": "<(LITERAL,true,graph[v][u] = true)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; n][n])>", "89": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "91": "<(IDENTIFIER,n,new long[1 &lt;&lt; n][n])<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>15</SUB>>", "95": "<(LITERAL,0,long sum = 0)<SUB>15</SUB>>", "97": "<(LOCAL,int i: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i][i])<SUB>18</SUB>>", "109": "<(IDENTIFIER,dp,dp[1 &lt;&lt; i][i] = 1)<SUB>18</SUB>>", "111": "<(LITERAL,1,1 &lt;&lt; i)<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,dp[1 &lt;&lt; i][i] = 1)<SUB>18</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>20</SUB>>", "119": "<(LITERAL,1,int mask = 1)<SUB>20</SUB>>", "121": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>20</SUB>>", "123": "<(LITERAL,1,1 &lt;&lt; n)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>20</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.assignment,int first = Integer.numberOfTrailingZeros(mask))<SUB>22</SUB>>", "131": "<(numberOfTrailingZeros,Integer.numberOfTrailingZeros(mask))<SUB>22</SUB>>", "133": "<(IDENTIFIER,mask,Integer.numberOfTrailingZeros(mask))<SUB>22</SUB>>", "135": "<(LOCAL,int i: int)<SUB>24</SUB>>", "137": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>24</SUB>>", "141": "<(IDENTIFIER,n,i &lt; n)<SUB>24</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "145": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) == 0 || first == i),if ((mask &amp; (1 &lt;&lt; i)) == 0 || first == i))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>25</SUB>>", "149": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>25</SUB>>", "151": "<(LITERAL,1,1 &lt;&lt; i)<SUB>25</SUB>>", "153": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>25</SUB>>", "155": "<(IDENTIFIER,first,first == i)<SUB>25</SUB>>", "157": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>26</SUB>>", "159": "<(LOCAL,int j: int)<SUB>28</SUB>>", "161": "<(IDENTIFIER,j,int j = 0)<SUB>28</SUB>>", "163": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>28</SUB>>", "165": "<(IDENTIFIER,n,j &lt; n)<SUB>28</SUB>>", "167": "<(IDENTIFIER,j,j++)<SUB>28</SUB>>", "169": "<(CONTROL_STRUCTURE,if (graph[i][j] &amp;&amp; (mask &amp; (1 &lt;&lt; j)) != 0),if (graph[i][j] &amp;&amp; (mask &amp; (1 &lt;&lt; j)) != 0))<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,graph[i][j])<SUB>29</SUB>>", "173": "<(IDENTIFIER,graph,graph[i][j] &amp;&amp; (mask &amp; (1 &lt;&lt; j)) != 0)<SUB>29</SUB>>", "175": "<(IDENTIFIER,j,graph[i][j] &amp;&amp; (mask &amp; (1 &lt;&lt; j)) != 0)<SUB>29</SUB>>", "177": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; j))<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>29</SUB>>", "181": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>29</SUB>>", "183": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>30</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>30</SUB>>", "187": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>30</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,dp[mask ^ 1 &lt;&lt; i][j])<SUB>30</SUB>>", "191": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>30</SUB>>", "193": "<(IDENTIFIER,mask,mask ^ 1 &lt;&lt; i)<SUB>30</SUB>>", "195": "<(LITERAL,1,1 &lt;&lt; i)<SUB>30</SUB>>", "197": "<(IDENTIFIER,j,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>30</SUB>>", "199": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[i][first])<SUB>33</SUB>>", "201": "<(bitCount,Integer.bitCount(mask))<SUB>33</SUB>>", "203": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>33</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,graph[i][first])<SUB>33</SUB>>", "207": "<(IDENTIFIER,graph,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[i][first])<SUB>33</SUB>>", "209": "<(IDENTIFIER,first,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[i][first])<SUB>33</SUB>>", "211": "<(IDENTIFIER,sum,sum += dp[mask][i])<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>34</SUB>>", "215": "<(IDENTIFIER,mask,sum += dp[mask][i])<SUB>34</SUB>>", "217": "<(println,System.out.println(sum / 2))<SUB>39</SUB>>", "219": "<(IDENTIFIER,System,System.out.println(sum / 2))<SUB>39</SUB>>", "221": "<(&lt;operator&gt;.division,sum / 2)<SUB>39</SUB>>", "223": "<(LITERAL,2,sum / 2)<SUB>39</SUB>>", "225": "<(IDENTIFIER,scan,close())<SUB>40</SUB>>", "227": "<(MODIFIER,STATIC)>"}}