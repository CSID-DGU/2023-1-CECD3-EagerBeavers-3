{"edges": [["21", "22"], ["21", "23"], ["21", "372"], ["21", "373"], ["21", "374"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "59"], ["23", "60"], ["23", "66"], ["23", "67"], ["23", "83"], ["23", "198"], ["23", "313"], ["23", "314"], ["23", "317"], ["23", "337"], ["23", "338"], ["23", "341"], ["23", "364"], ["23", "367"], ["23", "370"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "58"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "74"], ["69", "77"], ["69", "80"], ["70", "71"], ["70", "72"], ["70", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "99"], ["93", "110"], ["93", "121"], ["93", "132"], ["93", "143"], ["93", "154"], ["93", "165"], ["93", "176"], ["93", "187"], ["95", "96"], ["95", "97"], ["97", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["115", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["126", "127"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["137", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["159", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["170", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["181", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["191", "192"], ["192", "193"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "206"], ["198", "208"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["208", "210"], ["208", "214"], ["208", "225"], ["208", "236"], ["208", "247"], ["208", "258"], ["208", "269"], ["208", "280"], ["208", "291"], ["208", "302"], ["210", "211"], ["210", "212"], ["212", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["219", "220"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["229", "230"], ["230", "231"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["241", "242"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["252", "253"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["262", "263"], ["263", "264"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["273", "274"], ["274", "275"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["285", "286"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["295", "296"], ["296", "297"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["306", "307"], ["307", "308"], ["308", "309"], ["308", "312"], ["309", "310"], ["309", "311"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["317", "322"], ["317", "325"], ["317", "327"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["325", "326"], ["327", "328"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "332"], ["332", "333"], ["332", "336"], ["333", "334"], ["333", "335"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "343"], ["341", "346"], ["341", "349"], ["341", "351"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "348"], ["349", "350"], ["351", "352"], ["352", "353"], ["352", "354"], ["354", "355"], ["354", "356"], ["354", "357"], ["357", "358"], ["357", "359"], ["359", "360"], ["359", "363"], ["360", "361"], ["360", "362"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "369"], ["370", "371"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "64"], ["60", "70"], ["67", "85"], ["314", "319"], ["338", "343"], ["364", "367"], ["367", "370"], ["370", "374"], ["26", "24"], ["40", "38"], ["62", "60"], ["69", "67"], ["85", "88"], ["88", "97"], ["88", "200"], ["91", "88"], ["200", "203"], ["203", "212"], ["203", "314"], ["206", "203"], ["319", "322"], ["322", "333"], ["322", "338"], ["325", "322"], ["343", "346"], ["346", "360"], ["346", "364"], ["349", "346"], ["29", "36"], ["32", "27"], ["43", "51"], ["46", "41"], ["64", "62"], ["70", "74"], ["74", "77"], ["77", "80"], ["80", "69"], ["95", "100"], ["210", "215"], ["328", "325"], ["352", "349"], ["31", "29"], ["34", "32"], ["45", "43"], ["97", "95"], ["100", "106"], ["100", "111"], ["111", "117"], ["111", "122"], ["122", "128"], ["122", "133"], ["133", "139"], ["133", "144"], ["144", "150"], ["144", "155"], ["155", "161"], ["155", "166"], ["166", "172"], ["166", "177"], ["177", "183"], ["177", "188"], ["188", "194"], ["188", "91"], ["212", "210"], ["215", "221"], ["215", "226"], ["226", "232"], ["226", "237"], ["237", "243"], ["237", "248"], ["248", "254"], ["248", "259"], ["259", "265"], ["259", "270"], ["270", "276"], ["270", "281"], ["281", "287"], ["281", "292"], ["292", "298"], ["292", "303"], ["303", "309"], ["303", "206"], ["330", "328"], ["354", "352"], ["36", "34"], ["49", "56"], ["52", "46"], ["104", "111"], ["115", "122"], ["126", "133"], ["137", "144"], ["148", "155"], ["159", "166"], ["170", "177"], ["181", "188"], ["192", "91"], ["219", "226"], ["230", "237"], ["241", "248"], ["252", "259"], ["263", "270"], ["274", "281"], ["285", "292"], ["296", "303"], ["307", "206"], ["332", "330"], ["357", "354"], ["51", "49"], ["54", "52"], ["105", "104"], ["116", "115"], ["127", "126"], ["138", "137"], ["149", "148"], ["160", "159"], ["171", "170"], ["182", "181"], ["193", "192"], ["220", "219"], ["231", "230"], ["242", "241"], ["253", "252"], ["264", "263"], ["275", "274"], ["286", "285"], ["297", "296"], ["308", "307"], ["333", "332"], ["359", "357"], ["56", "54"], ["106", "105"], ["117", "116"], ["128", "127"], ["139", "138"], ["150", "149"], ["161", "160"], ["172", "171"], ["183", "182"], ["194", "193"], ["221", "220"], ["232", "231"], ["243", "242"], ["254", "253"], ["265", "264"], ["276", "275"], ["287", "286"], ["298", "297"], ["309", "308"], ["360", "359"], ["21", "26"], ["22", "374"], ["24", "374"], ["32", "374"], ["32", "374"], ["32", "374"], ["27", "374"], ["38", "374"], ["46", "374"], ["49", "374"], ["52", "374"], ["52", "374"], ["52", "374"], ["46", "374"], ["41", "374"], ["64", "374"], ["62", "374"], ["60", "374"], ["60", "374"], ["67", "374"], ["69", "374"], ["69", "374"], ["67", "374"], ["67", "374"], ["203", "374"], ["203", "374"], ["314", "374"], ["319", "374"], ["322", "374"], ["338", "374"], ["343", "374"], ["346", "374"], ["346", "374"], ["364", "374"], ["364", "374"], ["367", "374"], ["367", "374"], ["370", "374"], ["370", "374"], ["354", "374"], ["357", "374"], ["354", "374"], ["352", "374"], ["352", "374"], ["349", "374"], ["330", "374"], ["330", "374"], ["328", "374"], ["328", "374"], ["325", "374"], ["212", "374"], ["210", "374"], ["210", "374"], ["215", "374"], ["219", "374"], ["219", "374"], ["226", "374"], ["230", "374"], ["230", "374"], ["237", "374"], ["241", "374"], ["241", "374"], ["248", "374"], ["252", "374"], ["252", "374"], ["259", "374"], ["263", "374"], ["263", "374"], ["270", "374"], ["274", "374"], ["274", "374"], ["281", "374"], ["285", "374"], ["285", "374"], ["292", "374"], ["296", "374"], ["296", "374"], ["303", "374"], ["303", "374"], ["307", "374"], ["307", "374"], ["206", "374"], ["97", "374"], ["95", "374"], ["95", "374"], ["100", "374"], ["104", "374"], ["104", "374"], ["111", "374"], ["115", "374"], ["115", "374"], ["122", "374"], ["126", "374"], ["126", "374"], ["133", "374"], ["137", "374"], ["137", "374"], ["144", "374"], ["148", "374"], ["148", "374"], ["155", "374"], ["159", "374"], ["159", "374"], ["166", "374"], ["170", "374"], ["170", "374"], ["177", "374"], ["181", "374"], ["181", "374"], ["188", "374"], ["188", "374"], ["192", "374"], ["192", "374"], ["91", "374"], ["62", "374"], ["21", "22"], ["21", "24"], ["21", "38"], ["62", "60"], ["62", "60"], ["69", "67"], ["69", "67"], ["21", "314"], ["21", "338"], ["338", "364"], ["352", "364"], ["21", "364"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["49", "41"], ["46", "41"], ["21", "85"], ["21", "200"], ["21", "319"], ["21", "343"], ["314", "364"], ["328", "364"], ["41", "367"], ["21", "367"], ["364", "367"], ["367", "370"], ["21", "370"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "58"], ["21", "62"], ["64", "62"], ["70", "69"], ["74", "69"], ["77", "69"], ["80", "69"], ["85", "88"], ["91", "88"], ["21", "88"], ["60", "88"], ["88", "91"], ["21", "91"], ["97", "95"], ["200", "203"], ["206", "203"], ["21", "203"], ["88", "203"], ["203", "206"], ["21", "206"], ["212", "210"], ["319", "322"], ["325", "322"], ["21", "322"], ["322", "325"], ["21", "325"], ["330", "328"], ["330", "328"], ["343", "346"], ["349", "346"], ["21", "346"], ["346", "349"], ["21", "349"], ["354", "352"], ["354", "352"], ["354", "352"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["49", "46"], ["52", "46"], ["27", "64"], ["21", "64"], ["21", "70"], ["21", "74"], ["21", "77"], ["21", "80"], ["314", "328"], ["21", "328"], ["21", "49"], ["21", "57"], ["64", "97"], ["21", "97"], ["95", "100"], ["21", "100"], ["100", "111"], ["21", "111"], ["111", "122"], ["21", "122"], ["122", "133"], ["21", "133"], ["133", "144"], ["21", "144"], ["144", "155"], ["21", "155"], ["155", "166"], ["21", "166"], ["166", "177"], ["21", "177"], ["177", "188"], ["21", "188"], ["64", "212"], ["97", "212"], ["21", "212"], ["210", "215"], ["21", "215"], ["215", "226"], ["21", "226"], ["226", "237"], ["21", "237"], ["237", "248"], ["21", "248"], ["248", "259"], ["21", "259"], ["259", "270"], ["21", "270"], ["270", "281"], ["21", "281"], ["281", "292"], ["21", "292"], ["292", "303"], ["21", "303"], ["21", "330"], ["357", "354"], ["21", "354"], ["338", "354"], ["352", "354"], ["357", "354"], ["49", "52"], ["21", "52"], ["104", "219"], ["115", "230"], ["126", "241"], ["137", "252"], ["148", "263"], ["159", "274"], ["170", "285"], ["181", "296"], ["192", "307"], ["354", "357"], ["330", "357"], ["21", "357"], ["88", "188"], ["88", "95"], ["88", "100"], ["88", "88"], ["88", "122"], ["88", "177"], ["88", "133"], ["88", "144"], ["88", "97"], ["88", "91"], ["88", "155"], ["88", "111"], ["88", "166"], ["203", "215"], ["203", "226"], ["203", "292"], ["203", "206"], ["203", "281"], ["203", "237"], ["203", "259"], ["203", "212"], ["203", "210"], ["203", "270"], ["203", "303"], ["203", "248"], ["203", "203"], ["322", "322"], ["322", "328"], ["322", "332"], ["322", "325"], ["322", "333"], ["322", "330"], ["346", "349"], ["346", "346"], ["346", "357"], ["346", "360"], ["346", "352"], ["346", "359"], ["346", "354"], ["100", "104"], ["100", "106"], ["100", "105"], ["111", "116"], ["111", "117"], ["111", "115"], ["122", "128"], ["122", "127"], ["122", "126"], ["133", "138"], ["133", "137"], ["133", "139"], ["144", "150"], ["144", "148"], ["144", "149"], ["155", "161"], ["155", "160"], ["155", "159"], ["166", "170"], ["166", "172"], ["166", "171"], ["177", "181"], ["177", "182"], ["177", "183"], ["188", "192"], ["188", "194"], ["188", "193"], ["215", "221"], ["215", "220"], ["215", "219"], ["226", "230"], ["226", "232"], ["226", "231"], ["237", "243"], ["237", "242"], ["237", "241"], ["248", "253"], ["248", "254"], ["248", "252"], ["259", "264"], ["259", "265"], ["259", "263"], ["270", "276"], ["270", "274"], ["270", "275"], ["281", "285"], ["281", "286"], ["281", "287"], ["292", "298"], ["292", "296"], ["292", "297"], ["303", "308"], ["303", "307"], ["303", "309"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY printer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "5": "<(IDENTIFIER,printer,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "55": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(LOCAL,int nE: int)<SUB>4</SUB>>", "61": "<(IDENTIFIER,nE,int nE = parseInt(reader.readLine()))<SUB>4</SUB>>", "63": "<(IDENTIFIER,Integer,parseInt(reader.readLine()))<SUB>4</SUB>>", "65": "<(IDENTIFIER,reader,readLine())<SUB>4</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[][] cnt = new int[][] { { 0, 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } })<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.arrayInitializer,new int[][] { { 0, 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } })<SUB>6</SUB>>", "71": "<(LITERAL,0,{ 0, 0, 0 })<SUB>6</SUB>>", "73": "<(LITERAL,0,{ 0, 0, 0 })<SUB>6</SUB>>", "75": "<(LITERAL,0,{ 0, 0 })<SUB>6</SUB>>", "77": "<(&lt;operator&gt;.arrayInitializer,{ 0, 0 })<SUB>6</SUB>>", "79": "<(LITERAL,0,{ 0, 0 })<SUB>6</SUB>>", "81": "<(LITERAL,0,{ 0, 0 })<SUB>6</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; nE); i++),for (int i = 0; Some(i &lt; nE); i++))<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "89": "<(IDENTIFIER,i,i &lt; nE)<SUB>8</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "95": "<(&lt;operator&gt;.assignment,String nxt = readLine())<SUB>9</SUB>>", "97": "<(readLine,readLine())<SUB>9</SUB>>", "99": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;S&quot;)),if (nxt.equals(&quot;S&quot;)))<SUB>10</SUB>>", "101": "<(IDENTIFIER,nxt,nxt.equals(&quot;S&quot;))<SUB>10</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,cnt[0][0])<SUB>11</SUB>>", "107": "<(IDENTIFIER,cnt,cnt[0][0]++)<SUB>11</SUB>>", "109": "<(LITERAL,0,cnt[0][0]++)<SUB>11</SUB>>", "111": "<(equals,nxt.equals(&quot;M&quot;))<SUB>13</SUB>>", "113": "<(LITERAL,&quot;M&quot;,nxt.equals(&quot;M&quot;))<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,cnt[0][1]++)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,cnt[0])<SUB>14</SUB>>", "119": "<(LITERAL,0,cnt[0][1]++)<SUB>14</SUB>>", "121": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;L&quot;)),if (nxt.equals(&quot;L&quot;)))<SUB>16</SUB>>", "123": "<(IDENTIFIER,nxt,nxt.equals(&quot;L&quot;))<SUB>16</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,cnt[0][2])<SUB>17</SUB>>", "129": "<(IDENTIFIER,cnt,cnt[0][2]++)<SUB>17</SUB>>", "131": "<(LITERAL,2,cnt[0][2]++)<SUB>17</SUB>>", "133": "<(equals,nxt.equals(&quot;XS&quot;))<SUB>19</SUB>>", "135": "<(LITERAL,&quot;XS&quot;,nxt.equals(&quot;XS&quot;))<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,cnt[1][0]++)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,cnt[1])<SUB>20</SUB>>", "141": "<(LITERAL,1,cnt[1][0]++)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XL&quot;)),if (nxt.equals(&quot;XL&quot;)))<SUB>22</SUB>>", "145": "<(IDENTIFIER,nxt,nxt.equals(&quot;XL&quot;))<SUB>22</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,cnt[1][1])<SUB>23</SUB>>", "151": "<(IDENTIFIER,cnt,cnt[1][1]++)<SUB>23</SUB>>", "153": "<(LITERAL,1,cnt[1][1]++)<SUB>23</SUB>>", "155": "<(equals,nxt.equals(&quot;XXS&quot;))<SUB>25</SUB>>", "157": "<(LITERAL,&quot;XXS&quot;,nxt.equals(&quot;XXS&quot;))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,cnt[2][0]++)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,cnt[2])<SUB>26</SUB>>", "163": "<(LITERAL,2,cnt[2][0]++)<SUB>26</SUB>>", "165": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XXL&quot;)),if (nxt.equals(&quot;XXL&quot;)))<SUB>28</SUB>>", "167": "<(IDENTIFIER,nxt,nxt.equals(&quot;XXL&quot;))<SUB>28</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,cnt[2][1])<SUB>29</SUB>>", "173": "<(IDENTIFIER,cnt,cnt[2][1]++)<SUB>29</SUB>>", "175": "<(LITERAL,1,cnt[2][1]++)<SUB>29</SUB>>", "177": "<(equals,nxt.equals(&quot;XXXS&quot;))<SUB>31</SUB>>", "179": "<(LITERAL,&quot;XXXS&quot;,nxt.equals(&quot;XXXS&quot;))<SUB>31</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,cnt[3][0]++)<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,cnt[3])<SUB>32</SUB>>", "185": "<(LITERAL,3,cnt[3][0]++)<SUB>32</SUB>>", "187": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XXXL&quot;)),if (nxt.equals(&quot;XXXL&quot;)))<SUB>34</SUB>>", "189": "<(IDENTIFIER,nxt,nxt.equals(&quot;XXXL&quot;))<SUB>34</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,cnt[3][1])<SUB>35</SUB>>", "195": "<(IDENTIFIER,cnt,cnt[3][1]++)<SUB>35</SUB>>", "197": "<(LITERAL,1,cnt[3][1]++)<SUB>35</SUB>>", "199": "<(LOCAL,int i: int)<SUB>39</SUB>>", "201": "<(IDENTIFIER,i,int i = 0)<SUB>39</SUB>>", "203": "<(&lt;operator&gt;.lessThan,i &lt; nE)<SUB>39</SUB>>", "205": "<(IDENTIFIER,nE,i &lt; nE)<SUB>39</SUB>>", "207": "<(IDENTIFIER,i,i++)<SUB>39</SUB>>", "209": "<(LOCAL,String nxt: java.lang.String)<SUB>40</SUB>>", "211": "<(IDENTIFIER,nxt,String nxt = readLine())<SUB>40</SUB>>", "213": "<(IDENTIFIER,reader,readLine())<SUB>40</SUB>>", "215": "<(equals,nxt.equals(&quot;S&quot;))<SUB>41</SUB>>", "217": "<(LITERAL,&quot;S&quot;,nxt.equals(&quot;S&quot;))<SUB>41</SUB>>", "219": "<(&lt;operator&gt;.postDecrement,cnt[0][0]--)<SUB>42</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,cnt[0])<SUB>42</SUB>>", "223": "<(LITERAL,0,cnt[0][0]--)<SUB>42</SUB>>", "225": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;M&quot;)),if (nxt.equals(&quot;M&quot;)))<SUB>44</SUB>>", "227": "<(IDENTIFIER,nxt,nxt.equals(&quot;M&quot;))<SUB>44</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,cnt[0][1])<SUB>45</SUB>>", "233": "<(IDENTIFIER,cnt,cnt[0][1]--)<SUB>45</SUB>>", "235": "<(LITERAL,1,cnt[0][1]--)<SUB>45</SUB>>", "237": "<(equals,nxt.equals(&quot;L&quot;))<SUB>47</SUB>>", "239": "<(LITERAL,&quot;L&quot;,nxt.equals(&quot;L&quot;))<SUB>47</SUB>>", "241": "<(&lt;operator&gt;.postDecrement,cnt[0][2]--)<SUB>48</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,cnt[0])<SUB>48</SUB>>", "245": "<(LITERAL,0,cnt[0][2]--)<SUB>48</SUB>>", "247": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XS&quot;)),if (nxt.equals(&quot;XS&quot;)))<SUB>50</SUB>>", "249": "<(IDENTIFIER,nxt,nxt.equals(&quot;XS&quot;))<SUB>50</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,cnt[1][0])<SUB>51</SUB>>", "255": "<(IDENTIFIER,cnt,cnt[1][0]--)<SUB>51</SUB>>", "257": "<(LITERAL,0,cnt[1][0]--)<SUB>51</SUB>>", "259": "<(equals,nxt.equals(&quot;XL&quot;))<SUB>53</SUB>>", "261": "<(LITERAL,&quot;XL&quot;,nxt.equals(&quot;XL&quot;))<SUB>53</SUB>>", "263": "<(&lt;operator&gt;.postDecrement,cnt[1][1]--)<SUB>54</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,cnt[1])<SUB>54</SUB>>", "267": "<(LITERAL,1,cnt[1][1]--)<SUB>54</SUB>>", "269": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XXS&quot;)),if (nxt.equals(&quot;XXS&quot;)))<SUB>56</SUB>>", "271": "<(IDENTIFIER,nxt,nxt.equals(&quot;XXS&quot;))<SUB>56</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,cnt[2][0])<SUB>57</SUB>>", "277": "<(IDENTIFIER,cnt,cnt[2][0]--)<SUB>57</SUB>>", "279": "<(LITERAL,0,cnt[2][0]--)<SUB>57</SUB>>", "281": "<(equals,nxt.equals(&quot;XXL&quot;))<SUB>59</SUB>>", "283": "<(LITERAL,&quot;XXL&quot;,nxt.equals(&quot;XXL&quot;))<SUB>59</SUB>>", "285": "<(&lt;operator&gt;.postDecrement,cnt[2][1]--)<SUB>60</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,cnt[2])<SUB>60</SUB>>", "289": "<(LITERAL,2,cnt[2][1]--)<SUB>60</SUB>>", "291": "<(CONTROL_STRUCTURE,if (nxt.equals(&quot;XXXS&quot;)),if (nxt.equals(&quot;XXXS&quot;)))<SUB>62</SUB>>", "293": "<(IDENTIFIER,nxt,nxt.equals(&quot;XXXS&quot;))<SUB>62</SUB>>", "295": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,cnt[3][0])<SUB>63</SUB>>", "299": "<(IDENTIFIER,cnt,cnt[3][0]--)<SUB>63</SUB>>", "301": "<(LITERAL,0,cnt[3][0]--)<SUB>63</SUB>>", "303": "<(equals,nxt.equals(&quot;XXXL&quot;))<SUB>65</SUB>>", "305": "<(LITERAL,&quot;XXXL&quot;,nxt.equals(&quot;XXXL&quot;))<SUB>65</SUB>>", "307": "<(&lt;operator&gt;.postDecrement,cnt[3][1]--)<SUB>66</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,cnt[3])<SUB>66</SUB>>", "311": "<(LITERAL,3,cnt[3][1]--)<SUB>66</SUB>>", "313": "<(LOCAL,int ans: int)<SUB>70</SUB>>", "315": "<(IDENTIFIER,ans,int ans = 0)<SUB>70</SUB>>", "317": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 3); i++),for (int i = 1; Some(i &lt;= 3); i++))<SUB>71</SUB>>", "319": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>71</SUB>>", "321": "<(LITERAL,1,int i = 1)<SUB>71</SUB>>", "323": "<(IDENTIFIER,i,i &lt;= 3)<SUB>71</SUB>>", "325": "<(&lt;operator&gt;.postIncrement,i++)<SUB>71</SUB>>", "327": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>>", "329": "<(IDENTIFIER,ans,ans += Math.abs(cnt[i][0]))<SUB>72</SUB>>", "331": "<(IDENTIFIER,Math,Math.abs(cnt[i][0]))<SUB>72</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,cnt[i])<SUB>72</SUB>>", "335": "<(IDENTIFIER,i,Math.abs(cnt[i][0]))<SUB>72</SUB>>", "337": "<(LOCAL,int max: int)<SUB>75</SUB>>", "339": "<(IDENTIFIER,max,int max = 0)<SUB>75</SUB>>", "341": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 3); i++),for (int i = 0; Some(i &lt; 3); i++))<SUB>76</SUB>>", "343": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>76</SUB>>", "345": "<(LITERAL,0,int i = 0)<SUB>76</SUB>>", "347": "<(IDENTIFIER,i,i &lt; 3)<SUB>76</SUB>>", "349": "<(&lt;operator&gt;.postIncrement,i++)<SUB>76</SUB>>", "351": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>76</SUB>>", "353": "<(IDENTIFIER,max,max = Math.max(max, Math.abs(cnt[0][i])))<SUB>77</SUB>>", "355": "<(IDENTIFIER,Math,Math.max(max, Math.abs(cnt[0][i])))<SUB>77</SUB>>", "357": "<(abs,Math.abs(cnt[0][i]))<SUB>77</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,cnt[0][i])<SUB>77</SUB>>", "361": "<(IDENTIFIER,cnt,Math.abs(cnt[0][i]))<SUB>77</SUB>>", "363": "<(IDENTIFIER,i,Math.abs(cnt[0][i]))<SUB>77</SUB>>", "365": "<(IDENTIFIER,ans,ans += max)<SUB>79</SUB>>", "367": "<(println,println(ans))<SUB>80</SUB>>", "369": "<(IDENTIFIER,ans,println(ans))<SUB>80</SUB>>", "371": "<(IDENTIFIER,printer,close())<SUB>81</SUB>>", "373": "<(MODIFIER,STATIC)>"}}