{"edges": [["19", "20"], ["19", "21"], ["19", "94"], ["19", "95"], ["19", "96"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "40"], ["21", "89"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "48"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "76"], ["48", "77"], ["48", "83"], ["48", "86"], ["49", "50"], ["49", "53"], ["49", "64"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "59"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["79", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "37"], ["37", "42"], ["89", "96"], ["24", "22"], ["29", "27"], ["34", "32"], ["41", "50"], ["41", "92"], ["90", "89"], ["42", "41"], ["42", "45"], ["45", "41"], ["77", "83"], ["83", "86"], ["86", "42"], ["92", "90"], ["50", "56"], ["50", "68"], ["79", "77"], ["54", "61"], ["59", "79"], ["56", "54"], ["61", "59"], ["66", "73"], ["71", "79"], ["68", "66"], ["73", "71"], ["19", "24"], ["20", "96"], ["22", "96"], ["25", "96"], ["27", "96"], ["32", "96"], ["34", "96"], ["32", "96"], ["32", "96"], ["37", "96"], ["42", "96"], ["41", "96"], ["45", "96"], ["41", "96"], ["41", "96"], ["89", "96"], ["89", "96"], ["89", "96"], ["50", "96"], ["66", "96"], ["66", "96"], ["71", "96"], ["71", "96"], ["54", "96"], ["54", "96"], ["59", "96"], ["59", "96"], ["77", "96"], ["77", "96"], ["83", "96"], ["86", "96"], ["86", "96"], ["86", "96"], ["79", "96"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["19", "37"], ["22", "25"], ["19", "25"], ["37", "89"], ["66", "89"], ["54", "89"], ["19", "89"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["42", "41"], ["42", "41"], ["45", "41"], ["45", "41"], ["79", "77"], ["79", "77"], ["79", "77"], ["77", "83"], ["19", "83"], ["19", "86"], ["77", "86"], ["27", "42"], ["83", "42"], ["19", "42"], ["32", "45"], ["86", "45"], ["19", "45"], ["79", "83"], ["79", "86"], ["42", "50"], ["19", "50"], ["32", "50"], ["45", "50"], ["86", "50"], ["56", "54"], ["56", "54"], ["61", "59"], ["61", "59"], ["19", "79"], ["73", "79"], ["59", "79"], ["71", "79"], ["61", "79"], ["37", "54"], ["66", "54"], ["19", "54"], ["68", "66"], ["68", "66"], ["73", "71"], ["73", "71"], ["50", "56"], ["19", "56"], ["50", "56"], ["56", "61"], ["19", "61"], ["56", "61"], ["37", "66"], ["54", "66"], ["19", "66"], ["50", "68"], ["19", "68"], ["50", "68"], ["68", "73"], ["19", "73"], ["68", "73"], ["41", "77"], ["41", "42"], ["41", "83"], ["41", "41"], ["41", "50"], ["41", "79"], ["41", "86"], ["42", "45"], ["50", "68"], ["50", "73"], ["50", "61"], ["50", "66"], ["50", "71"], ["50", "56"], ["50", "59"], ["50", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long a = nextLong())<SUB>3</SUB>>", "29": "<(nextLong,nextLong())<SUB>3</SUB>>", "31": "<(LOCAL,long b: long)<SUB>4</SUB>>", "33": "<(IDENTIFIER,b,long b = nextLong())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextLong())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,long result = 0L)<SUB>5</SUB>>", "39": "<(LITERAL,0L,long result = 0L)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.logicalAnd,a != 0 &amp;&amp; b != 0)<SUB>7</SUB>>", "43": "<(IDENTIFIER,a,a != 0)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.notEquals,b != 0)<SUB>7</SUB>>", "47": "<(LITERAL,0,b != 0)<SUB>7</SUB>>", "49": "<(CONTROL_STRUCTURE,if (a &gt; b),if (a &gt; b))<SUB>8</SUB>>", "51": "<(IDENTIFIER,a,a &gt; b)<SUB>8</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "55": "<(IDENTIFIER,result,result += a / b)<SUB>9</SUB>>", "57": "<(IDENTIFIER,a,a / b)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,a = a % b)<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.modulo,a % b)<SUB>10</SUB>>", "63": "<(IDENTIFIER,b,a % b)<SUB>10</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "67": "<(IDENTIFIER,result,result += b / a)<SUB>12</SUB>>", "69": "<(IDENTIFIER,b,b / a)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,b = b % a)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.modulo,b % a)<SUB>13</SUB>>", "75": "<(IDENTIFIER,a,b % a)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,long gcd = gcd(a, b))<SUB>16</SUB>>", "79": "<(gcd,gcd(a, b))<SUB>16</SUB>>", "81": "<(IDENTIFIER,a,gcd(a, b))<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.assignmentDivision,a /= gcd)<SUB>17</SUB>>", "85": "<(IDENTIFIER,gcd,a /= gcd)<SUB>17</SUB>>", "87": "<(IDENTIFIER,b,b /= gcd)<SUB>18</SUB>>", "89": "<(println,System.out.println(result))<SUB>21</SUB>>", "91": "<(IDENTIFIER,System,System.out.println(result))<SUB>21</SUB>>", "93": "<(IDENTIFIER,result,System.out.println(result))<SUB>21</SUB>>", "95": "<(MODIFIER,STATIC)>"}}