{"edges": [["17", "18"], ["17", "19"], ["17", "416"], ["17", "417"], ["17", "418"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "36"], ["19", "40"], ["19", "41"], ["19", "45"], ["19", "46"], ["19", "50"], ["19", "51"], ["19", "55"], ["19", "56"], ["19", "60"], ["19", "61"], ["19", "65"], ["19", "66"], ["19", "71"], ["19", "94"], ["19", "120"], ["19", "182"], ["19", "183"], ["19", "189"], ["19", "190"], ["19", "196"], ["19", "326"], ["19", "327"], ["19", "334"], ["19", "343"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "88"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["110", "113"], ["110", "114"], ["110", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "138"], ["130", "140"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "172"], ["147", "148"], ["147", "158"], ["148", "149"], ["148", "150"], ["148", "151"], ["148", "152"], ["148", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "169"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "181"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["183", "184"], ["183", "185"], ["185", "186"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "206"], ["196", "208"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["208", "210"], ["208", "214"], ["208", "237"], ["208", "243"], ["208", "258"], ["208", "263"], ["210", "211"], ["210", "212"], ["212", "213"], ["214", "215"], ["214", "216"], ["214", "219"], ["214", "222"], ["214", "224"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["224", "225"], ["224", "232"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["237", "238"], ["237", "242"], ["238", "239"], ["238", "240"], ["240", "241"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "255"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["263", "270"], ["263", "273"], ["263", "275"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["275", "276"], ["276", "277"], ["276", "284"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["284", "285"], ["284", "286"], ["284", "305"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "294"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "302"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "311"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "317"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["317", "318"], ["317", "321"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "325"], ["327", "328"], ["327", "329"], ["329", "330"], ["329", "333"], ["330", "331"], ["330", "332"], ["334", "335"], ["334", "338"], ["334", "339"], ["335", "336"], ["335", "337"], ["339", "340"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "347"], ["344", "345"], ["344", "346"], ["347", "348"], ["348", "349"], ["348", "354"], ["348", "374"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["354", "355"], ["354", "367"], ["355", "356"], ["355", "359"], ["355", "360"], ["356", "357"], ["356", "358"], ["360", "361"], ["360", "366"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["367", "368"], ["367", "369"], ["369", "370"], ["369", "371"], ["371", "372"], ["371", "373"], ["374", "375"], ["375", "376"], ["375", "377"], ["375", "384"], ["375", "385"], ["375", "392"], ["375", "405"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "383"], ["380", "381"], ["380", "382"], ["385", "386"], ["385", "387"], ["387", "388"], ["387", "391"], ["388", "389"], ["388", "390"], ["392", "393"], ["392", "396"], ["392", "397"], ["393", "394"], ["393", "395"], ["397", "398"], ["397", "401"], ["397", "404"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["405", "406"], ["405", "407"], ["407", "408"], ["407", "413"], ["408", "409"], ["408", "410"], ["410", "411"], ["410", "412"], ["413", "414"], ["413", "415"], ["20", "28"], ["23", "38"], ["36", "43"], ["41", "48"], ["46", "53"], ["51", "58"], ["56", "63"], ["61", "68"], ["66", "73"], ["183", "193"], ["190", "198"], ["327", "337"], ["334", "344"], ["22", "20"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "61"], ["68", "66"], ["73", "76"], ["76", "83"], ["76", "96"], ["79", "76"], ["96", "99"], ["99", "105"], ["99", "122"], ["102", "99"], ["104", "102"], ["122", "125"], ["125", "132"], ["125", "186"], ["128", "125"], ["185", "183"], ["192", "190"], ["198", "203"], ["201", "212"], ["201", "330"], ["206", "203"], ["329", "327"], ["335", "340"], ["339", "334"], ["344", "418"], ["344", "350"], ["26", "33"], ["29", "23"], ["82", "89"], ["88", "79"], ["105", "114"], ["108", "104"], ["132", "135"], ["135", "142"], ["135", "128"], ["138", "135"], ["140", "138"], ["186", "185"], ["193", "192"], ["203", "201"], ["210", "216"], ["243", "259"], ["258", "267"], ["330", "329"], ["337", "335"], ["340", "339"], ["28", "26"], ["31", "29"], ["83", "86"], ["86", "82"], ["89", "92"], ["92", "88"], ["110", "108"], ["141", "152"], ["146", "140"], ["212", "210"], ["216", "219"], ["219", "227"], ["219", "240"], ["222", "219"], ["238", "206"], ["238", "244"], ["244", "252"], ["247", "243"], ["259", "258"], ["265", "270"], ["270", "279"], ["270", "206"], ["273", "270"], ["349", "358"], ["349", "380"], ["33", "31"], ["114", "117"], ["117", "110"], ["142", "141"], ["147", "174"], ["172", "146"], ["225", "233"], ["225", "222"], ["240", "238"], ["248", "255"], ["255", "247"], ["267", "265"], ["350", "349"], ["355", "371"], ["367", "344"], ["148", "160"], ["158", "147"], ["174", "177"], ["177", "172"], ["226", "225"], ["233", "240"], ["250", "248"], ["277", "290"], ["277", "273"], ["356", "362"], ["360", "355"], ["369", "367"], ["377", "388"], ["385", "395"], ["392", "410"], ["405", "344"], ["152", "155"], ["155", "148"], ["160", "163"], ["163", "166"], ["166", "169"], ["169", "158"], ["227", "226"], ["252", "250"], ["278", "277"], ["286", "308"], ["358", "356"], ["361", "360"], ["371", "369"], ["379", "377"], ["387", "385"], ["393", "398"], ["397", "392"], ["407", "405"], ["279", "278"], ["288", "286"], ["306", "313"], ["306", "273"], ["362", "361"], ["380", "379"], ["388", "387"], ["395", "393"], ["398", "401"], ["401", "397"], ["408", "413"], ["413", "407"], ["289", "299"], ["294", "288"], ["308", "306"], ["312", "318"], ["317", "273"], ["410", "408"], ["290", "289"], ["296", "294"], ["313", "312"], ["318", "323"], ["321", "317"], ["297", "302"], ["302", "296"], ["323", "321"], ["299", "297"], ["17", "22"], ["18", "418"], ["20", "418"], ["23", "418"], ["26", "418"], ["29", "418"], ["29", "418"], ["29", "418"], ["23", "418"], ["36", "418"], ["36", "418"], ["41", "418"], ["41", "418"], ["48", "418"], ["46", "418"], ["46", "418"], ["51", "418"], ["51", "418"], ["56", "418"], ["56", "418"], ["61", "418"], ["61", "418"], ["61", "418"], ["66", "418"], ["66", "418"], ["66", "418"], ["122", "418"], ["125", "418"], ["125", "418"], ["183", "418"], ["183", "418"], ["190", "418"], ["190", "418"], ["190", "418"], ["198", "418"], ["201", "418"], ["201", "418"], ["330", "418"], ["329", "418"], ["327", "418"], ["327", "418"], ["334", "418"], ["339", "418"], ["334", "418"], ["334", "418"], ["344", "418"], ["344", "418"], ["405", "418"], ["405", "418"], ["367", "418"], ["206", "418"], ["128", "418"], ["102", "418"], ["79", "418"], ["17", "18"], ["17", "20"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "61"], ["68", "66"], ["185", "183"], ["192", "190"], ["329", "327"], ["329", "327"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "73"], ["17", "96"], ["108", "104"], ["108", "104"], ["17", "122"], ["17", "198"], ["17", "334"], ["339", "334"], ["17", "26"], ["17", "34"], ["17", "38"], ["38", "43"], ["17", "43"], ["43", "48"], ["17", "48"], ["46", "53"], ["17", "53"], ["53", "58"], ["17", "58"], ["58", "63"], ["17", "63"], ["63", "68"], ["17", "68"], ["73", "76"], ["79", "76"], ["17", "76"], ["68", "76"], ["76", "79"], ["17", "79"], ["86", "82"], ["92", "88"], ["96", "99"], ["102", "99"], ["17", "99"], ["76", "99"], ["99", "102"], ["17", "102"], ["122", "125"], ["128", "125"], ["17", "125"], ["99", "125"], ["135", "125"], ["125", "128"], ["17", "128"], ["17", "132"], ["148", "140"], ["148", "140"], ["148", "140"], ["148", "140"], ["148", "140"], ["158", "140"], ["158", "140"], ["158", "140"], ["158", "140"], ["158", "140"], ["172", "140"], ["172", "140"], ["172", "140"], ["172", "140"], ["172", "140"], ["186", "185"], ["186", "185"], ["193", "192"], ["193", "192"], ["198", "201"], ["206", "201"], ["17", "201"], ["203", "201"], ["203", "201"], ["201", "206"], ["227", "206"], ["250", "206"], ["279", "206"], ["297", "206"], ["17", "206"], ["212", "210"], ["183", "243"], ["61", "243"], ["252", "258"], ["17", "258"], ["330", "329"], ["330", "329"], ["17", "329"], ["183", "339"], ["327", "344"], ["405", "344"], ["367", "344"], ["17", "344"], ["26", "29"], ["17", "29"], ["17", "108"], ["110", "108"], ["110", "108"], ["110", "108"], ["110", "108"], ["110", "108"], ["132", "135"], ["138", "135"], ["17", "135"], ["125", "135"], ["135", "138"], ["17", "138"], ["17", "186"], ["125", "186"], ["17", "193"], ["186", "193"], ["17", "203"], ["193", "203"], ["219", "203"], ["270", "203"], ["17", "216"], ["17", "265"], ["252", "265"], ["17", "330"], ["203", "330"], ["48", "86"], ["92", "86"], ["17", "86"], ["86", "92"], ["17", "92"], ["48", "110"], ["92", "110"], ["17", "110"], ["36", "110"], ["41", "110"], ["51", "110"], ["82", "110"], ["56", "110"], ["88", "110"], ["148", "146"], ["148", "146"], ["148", "146"], ["148", "146"], ["148", "146"], ["158", "146"], ["158", "146"], ["158", "146"], ["158", "146"], ["158", "146"], ["172", "146"], ["172", "146"], ["172", "146"], ["172", "146"], ["172", "146"], ["17", "212"], ["216", "219"], ["222", "219"], ["17", "219"], ["203", "219"], ["227", "222"], ["17", "222"], ["210", "238"], ["233", "238"], ["17", "238"], ["240", "238"], ["183", "247"], ["61", "247"], ["265", "270"], ["273", "270"], ["17", "270"], ["219", "270"], ["279", "273"], ["302", "273"], ["323", "273"], ["17", "273"], ["190", "349"], ["387", "349"], ["369", "349"], ["17", "349"], ["369", "367"], ["369", "367"], ["148", "147"], ["148", "147"], ["148", "147"], ["148", "147"], ["148", "147"], ["158", "147"], ["158", "147"], ["158", "147"], ["158", "147"], ["158", "147"], ["158", "172"], ["17", "172"], ["51", "172"], ["158", "172"], ["56", "172"], ["158", "172"], ["148", "172"], ["148", "172"], ["226", "225"], ["226", "225"], ["17", "225"], ["227", "233"], ["17", "233"], ["17", "240"], ["17", "267"], ["252", "267"], ["334", "355"], ["392", "355"], ["17", "355"], ["360", "355"], ["360", "355"], ["344", "367"], ["17", "367"], ["379", "377"], ["379", "377"], ["387", "385"], ["387", "385"], ["407", "405"], ["407", "405"], ["48", "148"], ["172", "148"], ["110", "148"], ["92", "148"], ["17", "148"], ["36", "148"], ["172", "148"], ["110", "148"], ["41", "148"], ["172", "148"], ["110", "148"], ["51", "148"], ["158", "148"], ["110", "148"], ["82", "148"], ["56", "148"], ["158", "148"], ["110", "148"], ["88", "148"], ["148", "158"], ["17", "158"], ["51", "158"], ["148", "158"], ["56", "158"], ["148", "158"], ["172", "158"], ["172", "158"], ["227", "226"], ["227", "226"], ["17", "226"], ["201", "250"], ["227", "250"], ["17", "250"], ["252", "250"], ["252", "250"], ["278", "277"], ["278", "277"], ["17", "277"], ["183", "286"], ["190", "360"], ["349", "360"], ["17", "360"], ["17", "369"], ["190", "369"], ["349", "369"], ["334", "392"], ["355", "392"], ["17", "392"], ["397", "392"], ["397", "392"], ["397", "392"], ["201", "227"], ["17", "227"], ["219", "227"], ["17", "252"], ["238", "252"], ["279", "278"], ["279", "278"], ["17", "278"], ["190", "361"], ["349", "361"], ["17", "361"], ["190", "379"], ["349", "379"], ["17", "379"], ["190", "387"], ["379", "387"], ["17", "387"], ["377", "397"], ["17", "397"], ["385", "397"], ["408", "407"], ["408", "407"], ["413", "407"], ["413", "407"], ["250", "279"], ["297", "279"], ["17", "279"], ["270", "279"], ["183", "288"], ["286", "306"], ["17", "306"], ["183", "306"], ["243", "306"], ["312", "306"], ["306", "312"], ["17", "312"], ["299", "317"], ["17", "317"], ["323", "317"], ["323", "317"], ["377", "398"], ["17", "398"], ["385", "401"], ["17", "401"], ["344", "408"], ["17", "408"], ["410", "408"], ["410", "408"], ["17", "413"], ["385", "413"], ["17", "410"], ["377", "410"], ["297", "296"], ["297", "296"], ["302", "296"], ["302", "296"], ["299", "321"], ["17", "321"], ["323", "321"], ["323", "321"], ["279", "297"], ["17", "297"], ["299", "297"], ["299", "297"], ["17", "302"], ["279", "302"], ["17", "323"], ["302", "323"], ["17", "299"], ["252", "299"], ["76", "76"], ["76", "88"], ["76", "86"], ["76", "92"], ["76", "79"], ["76", "89"], ["76", "82"], ["76", "83"], ["99", "102"], ["99", "114"], ["99", "104"], ["99", "108"], ["99", "117"], ["99", "99"], ["99", "105"], ["99", "110"], ["125", "128"], ["125", "135"], ["125", "132"], ["125", "125"], ["201", "240"], ["201", "206"], ["201", "238"], ["201", "201"], ["201", "216"], ["201", "212"], ["201", "210"], ["201", "203"], ["201", "219"], ["344", "349"], ["344", "350"], ["344", "344"], ["135", "146"], ["135", "163"], ["135", "138"], ["135", "148"], ["135", "152"], ["135", "174"], ["135", "158"], ["135", "160"], ["135", "141"], ["135", "140"], ["135", "177"], ["135", "147"], ["135", "135"], ["135", "172"], ["135", "169"], ["135", "155"], ["135", "166"], ["135", "142"], ["219", "226"], ["219", "227"], ["219", "225"], ["238", "243"], ["238", "247"], ["238", "258"], ["238", "244"], ["238", "255"], ["238", "259"], ["238", "267"], ["238", "265"], ["238", "252"], ["238", "270"], ["238", "248"], ["238", "250"], ["270", "278"], ["270", "273"], ["270", "279"], ["270", "277"], ["270", "270"], ["349", "401"], ["349", "358"], ["349", "356"], ["349", "392"], ["349", "408"], ["349", "362"], ["349", "355"], ["349", "380"], ["349", "388"], ["349", "405"], ["349", "360"], ["349", "397"], ["349", "410"], ["349", "413"], ["349", "385"], ["349", "377"], ["349", "379"], ["349", "395"], ["349", "387"], ["349", "361"], ["349", "393"], ["349", "367"], ["349", "398"], ["349", "371"], ["349", "369"], ["349", "407"], ["225", "222"], ["225", "233"], ["225", "219"], ["277", "290"], ["277", "308"], ["277", "302"], ["277", "306"], ["277", "288"], ["277", "296"], ["277", "297"], ["277", "289"], ["277", "286"], ["277", "299"], ["277", "294"], ["306", "317"], ["306", "323"], ["306", "321"], ["306", "318"], ["306", "313"], ["306", "312"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,reader,reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(LOCAL,int xs: int)<SUB>3</SUB>>", "37": "<(IDENTIFIER,xs,int xs = NextInt())<SUB>3</SUB>>", "39": "<(IDENTIFIER,this,NextInt())<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int ys = NextInt())<SUB>4</SUB>>", "43": "<(NextInt,NextInt())<SUB>4</SUB>>", "45": "<(LOCAL,int n: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,int n = NextInt())<SUB>5</SUB>>", "49": "<(IDENTIFIER,this,NextInt())<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(LOCAL,int[] y: int[])<SUB>8</SUB>>", "57": "<(IDENTIFIER,y,int[] y = new int[n])<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] single = new int[n])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n])>", "65": "<(LOCAL,int[][] pair: int[][])<SUB>10</SUB>>", "67": "<(IDENTIFIER,pair,int[][] pair = new int[n][n])<SUB>10</SUB>>", "69": "<(IDENTIFIER,n,new int[n][n])<SUB>10</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.preIncrement,++i)<SUB>11</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,x[i] = NextInt())<SUB>12</SUB>>", "87": "<(IDENTIFIER,this,NextInt())<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,y[i] = NextInt())<SUB>13</SUB>>", "93": "<(IDENTIFIER,this,NextInt())<SUB>13</SUB>>", "95": "<(LOCAL,int i: int)<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "101": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "103": "<(IDENTIFIER,i,++i)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,single[i])<SUB>16</SUB>>", "107": "<(IDENTIFIER,i,single[i] = 2 * dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "109": "<(LITERAL,2,2 * dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "111": "<(IDENTIFIER,this,dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "113": "<(IDENTIFIER,ys,dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "115": "<(IDENTIFIER,x,dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,dist(xs, ys, x[i], y[i]))<SUB>16</SUB>>", "121": "<(LOCAL,int i: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "127": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,++i)<SUB>17</SUB>>", "131": "<(LOCAL,int j: int)<SUB>18</SUB>>", "133": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>18</SUB>>", "137": "<(IDENTIFIER,n,j &lt; n)<SUB>18</SUB>>", "139": "<(IDENTIFIER,j,++j)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,pair[i][j])<SUB>19</SUB>>", "143": "<(IDENTIFIER,pair,pair[i][j] = dist(xs, ys, x[i], y[i]) + dist(x[i], y[i], x[j], y[j]) + dist(x[j], y[j], xs, ys))<SUB>19</SUB>>", "145": "<(IDENTIFIER,j,pair[i][j] = dist(xs, ys, x[i], y[i]) + dist(x[i], y[i], x[j], y[j]) + dist(x[j], y[j], xs, ys))<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.addition,dist(xs, ys, x[i], y[i]) + dist(x[i], y[i], x[j], y[j]))<SUB>19</SUB>>", "149": "<(IDENTIFIER,this,dist(xs, ys, x[i], y[i]))<SUB>19</SUB>>", "151": "<(IDENTIFIER,ys,dist(xs, ys, x[i], y[i]))<SUB>19</SUB>>", "153": "<(IDENTIFIER,x,dist(xs, ys, x[i], y[i]))<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>19</SUB>>", "157": "<(IDENTIFIER,i,dist(xs, ys, x[i], y[i]))<SUB>19</SUB>>", "159": "<(IDENTIFIER,this,dist(x[i], y[i], x[j], y[j]))<SUB>20</SUB>>", "161": "<(IDENTIFIER,x,dist(x[i], y[i], x[j], y[j]))<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>20</SUB>>", "165": "<(IDENTIFIER,i,dist(x[i], y[i], x[j], y[j]))<SUB>20</SUB>>", "167": "<(IDENTIFIER,x,dist(x[i], y[i], x[j], y[j]))<SUB>20</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>20</SUB>>", "171": "<(IDENTIFIER,j,dist(x[i], y[i], x[j], y[j]))<SUB>20</SUB>>", "173": "<(IDENTIFIER,this,dist(x[j], y[j], xs, ys))<SUB>21</SUB>>", "175": "<(IDENTIFIER,x,dist(x[j], y[j], xs, ys))<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>21</SUB>>", "179": "<(IDENTIFIER,j,dist(x[j], y[j], xs, ys))<SUB>21</SUB>>", "181": "<(IDENTIFIER,ys,dist(x[j], y[j], xs, ys))<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; n])<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "187": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "189": "<(LOCAL,int[] prev: int[])<SUB>23</SUB>>", "191": "<(IDENTIFIER,prev,int[] prev = new int[1 &lt;&lt; n])<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>23</SUB>>", "195": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>23</SUB>>", "197": "<(LOCAL,int mask: int)<SUB>24</SUB>>", "199": "<(IDENTIFIER,mask,int mask = 0)<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>24</SUB>>", "205": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>24</SUB>>", "207": "<(IDENTIFIER,mask,++mask)<SUB>24</SUB>>", "209": "<(LOCAL,int p: int)<SUB>25</SUB>>", "211": "<(IDENTIFIER,p,int p = -1)<SUB>25</SUB>>", "213": "<(LITERAL,1,-1)<SUB>25</SUB>>", "215": "<(LOCAL,int i: int)<SUB>26</SUB>>", "217": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "219": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "221": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "223": "<(IDENTIFIER,i,++i)<SUB>26</SUB>>", "225": "<(&lt;operator&gt;.notEquals,((mask &gt;&gt; i) &amp; 1) != 0)<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; i)<SUB>27</SUB>>", "229": "<(IDENTIFIER,i,mask &gt;&gt; i)<SUB>27</SUB>>", "231": "<(LITERAL,0,((mask &gt;&gt; i) &amp; 1) != 0)<SUB>27</SUB>>", "233": "<(&lt;operator&gt;.assignment,p = i)<SUB>28</SUB>>", "235": "<(IDENTIFIER,i,p = i)<SUB>28</SUB>>", "237": "<(CONTROL_STRUCTURE,if (p == -1),if (p == -1))<SUB>31</SUB>>", "239": "<(IDENTIFIER,p,p == -1)<SUB>31</SUB>>", "241": "<(LITERAL,1,-1)<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.assignment,dp[mask] = dp[mask ^ (1 &lt;&lt; p)] + single[p])<SUB>32</SUB>>", "245": "<(IDENTIFIER,dp,dp[mask] = dp[mask ^ (1 &lt;&lt; p)] + single[p])<SUB>32</SUB>>", "247": "<(&lt;operator&gt;.addition,dp[mask ^ (1 &lt;&lt; p)] + single[p])<SUB>32</SUB>>", "249": "<(IDENTIFIER,dp,dp[mask ^ (1 &lt;&lt; p)] + single[p])<SUB>32</SUB>>", "251": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; p))<SUB>32</SUB>>", "253": "<(LITERAL,1,1 &lt;&lt; p)<SUB>32</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,single[p])<SUB>32</SUB>>", "257": "<(IDENTIFIER,p,dp[mask ^ (1 &lt;&lt; p)] + single[p])<SUB>32</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,prev[mask])<SUB>33</SUB>>", "261": "<(IDENTIFIER,mask,prev[mask] = p)<SUB>33</SUB>>", "263": "<(CONTROL_STRUCTURE,for (int j = p + 1; Some(j &lt; n); ++j),for (int j = p + 1; Some(j &lt; n); ++j))<SUB>34</SUB>>", "265": "<(&lt;operator&gt;.assignment,int j = p + 1)<SUB>34</SUB>>", "267": "<(&lt;operator&gt;.addition,p + 1)<SUB>34</SUB>>", "269": "<(LITERAL,1,p + 1)<SUB>34</SUB>>", "271": "<(IDENTIFIER,j,j &lt; n)<SUB>34</SUB>>", "273": "<(&lt;operator&gt;.preIncrement,++j)<SUB>34</SUB>>", "275": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "277": "<(&lt;operator&gt;.notEquals,((mask &gt;&gt; j) &amp; 1) != 0)<SUB>35</SUB>>", "279": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; j)<SUB>35</SUB>>", "281": "<(IDENTIFIER,j,mask &gt;&gt; j)<SUB>35</SUB>>", "283": "<(LITERAL,0,((mask &gt;&gt; j) &amp; 1) != 0)<SUB>35</SUB>>", "285": "<(LOCAL,int res: int)<SUB>36</SUB>>", "287": "<(IDENTIFIER,res,int res = pair[p][j] + dp[mask ^ (1 &lt;&lt; p) ^ (1 &lt;&lt; j)])<SUB>36</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,pair[p][j])<SUB>36</SUB>>", "291": "<(IDENTIFIER,pair,pair[p][j] + dp[mask ^ (1 &lt;&lt; p) ^ (1 &lt;&lt; j)])<SUB>36</SUB>>", "293": "<(IDENTIFIER,j,pair[p][j] + dp[mask ^ (1 &lt;&lt; p) ^ (1 &lt;&lt; j)])<SUB>36</SUB>>", "295": "<(IDENTIFIER,dp,pair[p][j] + dp[mask ^ (1 &lt;&lt; p) ^ (1 &lt;&lt; j)])<SUB>36</SUB>>", "297": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; p))<SUB>36</SUB>>", "299": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; p)<SUB>36</SUB>>", "301": "<(IDENTIFIER,p,1 &lt;&lt; p)<SUB>36</SUB>>", "303": "<(LITERAL,1,1 &lt;&lt; j)<SUB>36</SUB>>", "305": "<(CONTROL_STRUCTURE,if (res &lt; dp[mask]),if (res &lt; dp[mask]))<SUB>37</SUB>>", "307": "<(IDENTIFIER,res,res &lt; dp[mask])<SUB>37</SUB>>", "309": "<(IDENTIFIER,dp,res &lt; dp[mask])<SUB>37</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>38</SUB>>", "315": "<(IDENTIFIER,mask,dp[mask] = res)<SUB>38</SUB>>", "317": "<(&lt;operator&gt;.assignment,prev[mask] = p + 100 * j)<SUB>39</SUB>>", "319": "<(IDENTIFIER,prev,prev[mask] = p + 100 * j)<SUB>39</SUB>>", "321": "<(&lt;operator&gt;.addition,p + 100 * j)<SUB>39</SUB>>", "323": "<(&lt;operator&gt;.multiplication,100 * j)<SUB>39</SUB>>", "325": "<(IDENTIFIER,j,100 * j)<SUB>39</SUB>>", "327": "<(&lt;operator&gt;.assignment,int cur = (1 &lt;&lt; n) - 1)<SUB>44</SUB>>", "329": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>44</SUB>>", "331": "<(LITERAL,1,1 &lt;&lt; n)<SUB>44</SUB>>", "333": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>44</SUB>>", "335": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "337": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "339": "<(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>45</SUB>>", "341": "<(IDENTIFIER,dp,&lt;operator&gt;.arrayInitializer)<SUB>45</SUB>>", "343": "<(CONTROL_STRUCTURE,while (cur != 0),while (cur != 0))<SUB>46</SUB>>", "345": "<(IDENTIFIER,cur,cur != 0)<SUB>46</SUB>>", "347": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "349": "<(&lt;operator&gt;.lessThan,prev[cur] &lt; 100)<SUB>47</SUB>>", "351": "<(IDENTIFIER,prev,prev[cur] &lt; 100)<SUB>47</SUB>>", "353": "<(LITERAL,100,prev[cur] &lt; 100)<SUB>47</SUB>>", "355": "<(printf,System.out.printf(&quot;%d %d &quot;, prev[cur] + 1, 0))<SUB>48</SUB>>", "357": "<(IDENTIFIER,System,System.out.printf(&quot;%d %d &quot;, prev[cur] + 1, 0))<SUB>48</SUB>>", "359": "<(LITERAL,&quot;%d %d &quot;,System.out.printf(&quot;%d %d &quot;, prev[cur] + 1, 0))<SUB>48</SUB>>", "361": "<(&lt;operator&gt;.addition,prev[cur] + 1)<SUB>48</SUB>>", "363": "<(IDENTIFIER,prev,prev[cur] + 1)<SUB>48</SUB>>", "365": "<(LITERAL,1,prev[cur] + 1)<SUB>48</SUB>>", "367": "<(&lt;operators&gt;.assignmentXor,cur ^= 1 &lt;&lt; prev[cur])<SUB>49</SUB>>", "369": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; prev[cur])<SUB>49</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,prev[cur])<SUB>49</SUB>>", "373": "<(IDENTIFIER,cur,1 &lt;&lt; prev[cur])<SUB>49</SUB>>", "375": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "377": "<(&lt;operator&gt;.assignment,int i = prev[cur] / 100)<SUB>51</SUB>>", "379": "<(&lt;operator&gt;.division,prev[cur] / 100)<SUB>51</SUB>>", "381": "<(IDENTIFIER,prev,prev[cur] / 100)<SUB>51</SUB>>", "383": "<(LITERAL,100,prev[cur] / 100)<SUB>51</SUB>>", "385": "<(&lt;operator&gt;.assignment,int j = prev[cur] % 100)<SUB>52</SUB>>", "387": "<(&lt;operator&gt;.modulo,prev[cur] % 100)<SUB>52</SUB>>", "389": "<(IDENTIFIER,prev,prev[cur] % 100)<SUB>52</SUB>>", "391": "<(LITERAL,100,prev[cur] % 100)<SUB>52</SUB>>", "393": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>53</SUB>>", "395": "<(FIELD_IDENTIFIER,out,out)<SUB>53</SUB>>", "397": "<(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>53</SUB>>", "399": "<(IDENTIFIER,i,i + 1)<SUB>53</SUB>>", "401": "<(&lt;operator&gt;.addition,j + 1)<SUB>53</SUB>>", "403": "<(LITERAL,1,j + 1)<SUB>53</SUB>>", "405": "<(&lt;operator&gt;.assignment,cur = cur ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j))<SUB>54</SUB>>", "407": "<(&lt;operator&gt;.xor,cur ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j))<SUB>54</SUB>>", "409": "<(IDENTIFIER,cur,cur ^ (1 &lt;&lt; i))<SUB>54</SUB>>", "411": "<(LITERAL,1,1 &lt;&lt; i)<SUB>54</SUB>>", "413": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>54</SUB>>", "415": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>54</SUB>>", "417": "<(MODIFIER,STATIC)>"}}