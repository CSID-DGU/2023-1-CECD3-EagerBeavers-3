{"edges": [["26", "28"], ["26", "179"], ["26", "180"], ["26", "181"], ["28", "4"], ["28", "29"], ["28", "32"], ["28", "6"], ["28", "43"], ["28", "46"], ["28", "50"], ["28", "51"], ["28", "57"], ["28", "58"], ["28", "64"], ["28", "67"], ["28", "71"], ["29", "30"], ["29", "31"], ["32", "3"], ["32", "33"], ["33", "34"], ["33", "37"], ["33", "42"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["46", "49"], ["47", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["67", "7"], ["67", "68"], ["67", "70"], ["68", "69"], ["71", "72"], ["71", "75"], ["71", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["81", "9"], ["81", "82"], ["81", "85"], ["81", "11"], ["81", "86"], ["81", "89"], ["81", "90"], ["81", "91"], ["81", "92"], ["81", "96"], ["81", "115"], ["81", "118"], ["81", "121"], ["81", "173"], ["82", "83"], ["82", "84"], ["85", "8"], ["86", "87"], ["86", "88"], ["89", "10"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "137"], ["131", "152"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "164"], ["153", "154"], ["153", "158"], ["154", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["29", "36"], ["32", "45"], ["43", "47"], ["46", "55"], ["51", "62"], ["58", "66"], ["64", "68"], ["67", "72"], ["31", "29"], ["45", "43"], ["47", "46"], ["53", "51"], ["60", "58"], ["66", "64"], ["68", "67"], ["72", "78"], ["72", "84"], ["75", "181"], ["34", "41"], ["37", "32"], ["55", "53"], ["62", "60"], ["76", "75"], ["36", "34"], ["39", "37"], ["78", "76"], ["82", "85"], ["85", "88"], ["86", "89"], ["89", "94"], ["92", "98"], ["115", "118"], ["118", "123"], ["173", "181"], ["41", "39"], ["84", "82"], ["88", "86"], ["94", "92"], ["98", "101"], ["101", "108"], ["101", "115"], ["104", "101"], ["123", "126"], ["126", "134"], ["126", "176"], ["129", "126"], ["174", "177"], ["177", "173"], ["107", "104"], ["132", "139"], ["176", "174"], ["108", "113"], ["111", "107"], ["134", "132"], ["138", "144"], ["138", "155"], ["153", "167"], ["153", "129"], ["113", "111"], ["139", "138"], ["144", "149"], ["147", "155"], ["154", "153"], ["154", "161"], ["158", "153"], ["165", "170"], ["170", "129"], ["149", "147"], ["155", "154"], ["159", "158"], ["167", "165"], ["161", "159"], ["26", "31"], ["27", "181"], ["29", "181"], ["34", "181"], ["37", "181"], ["37", "181"], ["37", "181"], ["32", "181"], ["43", "181"], ["51", "181"], ["60", "181"], ["60", "181"], ["58", "181"], ["58", "181"], ["64", "181"], ["67", "181"], ["68", "181"], ["67", "181"], ["67", "181"], ["72", "181"], ["72", "181"], ["75", "181"], ["75", "181"], ["75", "181"], ["115", "181"], ["118", "181"], ["26", "27"], ["26", "29"], ["26", "43"], ["53", "51"], ["53", "51"], ["60", "58"], ["60", "58"], ["26", "64"], ["29", "32"], ["26", "32"], ["34", "32"], ["37", "32"], ["43", "46"], ["26", "46"], ["47", "46"], ["64", "67"], ["26", "67"], ["68", "67"], ["26", "34"], ["26", "42"], ["32", "47"], ["26", "47"], ["26", "53"], ["55", "53"], ["53", "60"], ["26", "60"], ["62", "60"], ["47", "68"], ["26", "68"], ["58", "72"], ["26", "72"], ["51", "75"], ["26", "75"], ["34", "37"], ["26", "37"], ["46", "55"], ["26", "55"], ["55", "62"], ["26", "62"], ["26", "82"], ["26", "86"], ["94", "92"], ["82", "85"], ["26", "85"], ["86", "89"], ["26", "89"], ["26", "98"], ["26", "115"], ["92", "115"], ["107", "115"], ["26", "118"], ["115", "118"], ["107", "118"], ["26", "123"], ["177", "173"], ["51", "94"], ["26", "94"], ["98", "101"], ["104", "101"], ["26", "101"], ["94", "101"], ["101", "104"], ["26", "104"], ["111", "107"], ["111", "107"], ["123", "126"], ["129", "126"], ["26", "126"], ["101", "126"], ["126", "129"], ["26", "129"], ["118", "132"], ["107", "132"], ["85", "177"], ["144", "177"], ["159", "177"], ["170", "177"], ["26", "177"], ["60", "111"], ["26", "111"], ["113", "111"], ["139", "138"], ["139", "138"], ["26", "138"], ["154", "153"], ["158", "153"], ["67", "113"], ["26", "113"], ["132", "139"], ["26", "139"], ["72", "139"], ["149", "139"], ["161", "139"], ["167", "139"], ["85", "144"], ["159", "144"], ["170", "144"], ["26", "144"], ["139", "144"], ["89", "147"], ["155", "147"], ["165", "147"], ["26", "147"], ["149", "147"], ["149", "147"], ["155", "154"], ["155", "154"], ["159", "158"], ["159", "158"], ["155", "165"], ["26", "165"], ["167", "165"], ["167", "165"], ["85", "170"], ["144", "170"], ["159", "170"], ["26", "170"], ["167", "170"], ["144", "149"], ["26", "149"], ["139", "149"], ["89", "155"], ["147", "155"], ["165", "155"], ["26", "155"], ["139", "155"], ["149", "155"], ["85", "159"], ["144", "159"], ["170", "159"], ["26", "159"], ["161", "159"], ["161", "159"], ["155", "167"], ["161", "167"], ["26", "167"], ["139", "167"], ["149", "167"], ["161", "167"], ["155", "161"], ["26", "161"], ["139", "161"], ["149", "161"], ["72", "94"], ["72", "115"], ["72", "89"], ["72", "98"], ["72", "75"], ["72", "84"], ["72", "85"], ["72", "92"], ["72", "123"], ["72", "76"], ["72", "176"], ["72", "82"], ["72", "101"], ["72", "126"], ["72", "173"], ["72", "177"], ["72", "118"], ["72", "174"], ["72", "88"], ["72", "78"], ["72", "86"], ["101", "107"], ["101", "113"], ["101", "104"], ["101", "101"], ["101", "108"], ["101", "111"], ["126", "154"], ["126", "132"], ["126", "153"], ["126", "129"], ["126", "134"], ["126", "138"], ["126", "126"], ["126", "155"], ["126", "139"], ["138", "149"], ["138", "144"], ["138", "147"], ["153", "167"], ["153", "170"], ["153", "165"], ["154", "161"], ["154", "159"], ["154", "158"]], "features": {"26": "<(METHOD,main)<SUB>1</SUB>>", "28": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "29": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "38": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "40": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "42": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>4</SUB>>", "48": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "50": "<(LOCAL,int num: int)<SUB>6</SUB>>", "52": "<(IDENTIFIER,num,int num = parseInt(st.nextToken()))<SUB>6</SUB>>", "54": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "56": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "58": "<(&lt;operator&gt;.assignment,int k = parseInt(st.nextToken()))<SUB>7</SUB>>", "60": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "62": "<(nextToken,nextToken())<SUB>7</SUB>>", "64": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>9</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine(), &quot; &quot;))<SUB>9</SUB>>", "69": "<(IDENTIFIER,br,readLine())<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,if (k == 1),if (k == 1))<SUB>11</SUB>>", "73": "<(IDENTIFIER,k,k == 1)<SUB>11</SUB>>", "75": "<(println,System.out.println(num))<SUB>11</SUB>>", "77": "<(IDENTIFIER,System,System.out.println(num))<SUB>11</SUB>>", "79": "<(IDENTIFIER,num,System.out.println(num))<SUB>11</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "82": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;Integer&gt;())<SUB>13</SUB>>", "84": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>13</SUB>>", "8": "<(IDENTIFIER,set,new TreeSet&lt;Integer&gt;())<SUB>13</SUB>>", "86": "<(&lt;operator&gt;.assignment,ANY bad = new TreeSet&lt;Integer&gt;())<SUB>14</SUB>>", "88": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>14</SUB>>", "10": "<(IDENTIFIER,bad,new TreeSet&lt;Integer&gt;())<SUB>14</SUB>>", "91": "<(LOCAL,int[] arr: int[])<SUB>17</SUB>>", "93": "<(IDENTIFIER,arr,int[] arr = new int[num])<SUB>17</SUB>>", "95": "<(IDENTIFIER,num,new int[num])<SUB>17</SUB>>", "97": "<(LOCAL,int i: int)<SUB>18</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; num)<SUB>18</SUB>>", "103": "<(IDENTIFIER,num,i &lt; num)<SUB>18</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.assignment,arr[i] = parseInt((st.nextToken())))<SUB>19</SUB>>", "109": "<(IDENTIFIER,arr,arr[i] = parseInt((st.nextToken())))<SUB>19</SUB>>", "111": "<(parseInt,parseInt((st.nextToken())))<SUB>19</SUB>>", "113": "<(nextToken,nextToken())<SUB>19</SUB>>", "115": "<(shuffle,shuffle(arr))<SUB>22</SUB>>", "117": "<(IDENTIFIER,arr,shuffle(arr))<SUB>22</SUB>>", "119": "<(IDENTIFIER,Arrays,sort(arr))<SUB>23</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; num); i++),for (int i = 0; Some(i &lt; num); i++))<SUB>25</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "127": "<(IDENTIFIER,i,i &lt; num)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "133": "<(IDENTIFIER,sel,sel = arr[i])<SUB>26</SUB>>", "135": "<(IDENTIFIER,arr,sel = arr[i])<SUB>26</SUB>>", "137": "<(CONTROL_STRUCTURE,if (sel % k != 0),if (sel % k != 0))<SUB>27</SUB>>", "139": "<(&lt;operator&gt;.modulo,sel % k)<SUB>27</SUB>>", "141": "<(IDENTIFIER,k,sel % k)<SUB>27</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "145": "<(IDENTIFIER,set,add(sel))<SUB>28</SUB>>", "147": "<(add,add(sel * k))<SUB>29</SUB>>", "149": "<(&lt;operator&gt;.multiplication,sel * k)<SUB>29</SUB>>", "151": "<(IDENTIFIER,k,sel * k)<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.logicalAnd,!bad.contains(sel) &amp;&amp; !set.contains(sel / k))<SUB>31</SUB>>", "155": "<(contains,contains(sel))<SUB>31</SUB>>", "157": "<(IDENTIFIER,sel,contains(sel))<SUB>31</SUB>>", "159": "<(contains,contains(sel / k))<SUB>31</SUB>>", "161": "<(&lt;operator&gt;.division,sel / k)<SUB>31</SUB>>", "163": "<(IDENTIFIER,k,sel / k)<SUB>31</SUB>>", "165": "<(add,add(sel * k))<SUB>32</SUB>>", "167": "<(&lt;operator&gt;.multiplication,sel * k)<SUB>32</SUB>>", "169": "<(IDENTIFIER,k,sel * k)<SUB>32</SUB>>", "171": "<(IDENTIFIER,set,add(sel))<SUB>33</SUB>>", "173": "<(println,println(set.size()))<SUB>37</SUB>>", "175": "<(IDENTIFIER,System,println(set.size()))<SUB>37</SUB>>", "177": "<(size,size())<SUB>37</SUB>>", "179": "<(MODIFIER,PUBLIC)>", "181": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}