{"edges": [["19", "21"], ["19", "201"], ["19", "202"], ["19", "203"], ["21", "22"], ["22", "23"], ["22", "180"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "53"], ["23", "54"], ["23", "63"], ["23", "64"], ["23", "70"], ["23", "125"], ["23", "128"], ["23", "129"], ["23", "132"], ["23", "175"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "44"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "87"], ["80", "88"], ["80", "97"], ["80", "98"], ["80", "105"], ["80", "114"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "86"], ["84", "85"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "122"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "144"], ["132", "147"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "160"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "164"], ["160", "167"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "191"], ["181", "182"], ["182", "183"], ["183", "184"], ["183", "187"], ["183", "190"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["191", "192"], ["192", "193"], ["193", "194"], ["193", "197"], ["193", "200"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["24", "31"], ["27", "42"], ["39", "50"], ["46", "59"], ["54", "67"], ["64", "72"], ["125", "129"], ["129", "134"], ["175", "203"], ["175", "186"], ["26", "24"], ["41", "39"], ["48", "46"], ["56", "54"], ["66", "64"], ["72", "75"], ["75", "84"], ["75", "125"], ["78", "75"], ["134", "140"], ["137", "154"], ["137", "178"], ["144", "140"], ["176", "175"], ["182", "196"], ["192", "203"], ["29", "36"], ["32", "27"], ["42", "41"], ["50", "48"], ["57", "56"], ["67", "66"], ["81", "93"], ["88", "102"], ["98", "108"], ["105", "118"], ["114", "78"], ["139", "137"], ["149", "161"], ["178", "176"], ["31", "29"], ["34", "32"], ["59", "57"], ["83", "81"], ["90", "88"], ["100", "98"], ["106", "111"], ["111", "105"], ["115", "122"], ["122", "114"], ["140", "139"], ["151", "149"], ["161", "164"], ["161", "169"], ["164", "144"], ["184", "187"], ["187", "182"], ["194", "197"], ["197", "192"], ["36", "34"], ["84", "83"], ["91", "90"], ["102", "100"], ["108", "106"], ["117", "115"], ["152", "157"], ["157", "151"], ["186", "184"], ["196", "194"], ["93", "91"], ["118", "117"], ["154", "152"], ["169", "172"], ["169", "144"], ["172", "144"], ["19", "26"], ["20", "203"], ["24", "203"], ["29", "203"], ["32", "203"], ["32", "203"], ["32", "203"], ["27", "203"], ["39", "203"], ["42", "203"], ["41", "203"], ["39", "203"], ["39", "203"], ["48", "203"], ["46", "203"], ["46", "203"], ["54", "203"], ["57", "203"], ["57", "203"], ["56", "203"], ["54", "203"], ["54", "203"], ["64", "203"], ["64", "203"], ["72", "203"], ["75", "203"], ["125", "203"], ["125", "203"], ["129", "203"], ["134", "203"], ["137", "203"], ["140", "203"], ["139", "203"], ["137", "203"], ["137", "203"], ["175", "203"], ["175", "203"], ["175", "203"], ["151", "203"], ["151", "203"], ["149", "203"], ["149", "203"], ["161", "203"], ["161", "203"], ["161", "203"], ["169", "203"], ["169", "203"], ["169", "203"], ["172", "203"], ["164", "203"], ["144", "203"], ["81", "203"], ["84", "203"], ["83", "203"], ["81", "203"], ["81", "203"], ["91", "203"], ["90", "203"], ["88", "203"], ["88", "203"], ["100", "203"], ["100", "203"], ["98", "203"], ["98", "203"], ["105", "203"], ["105", "203"], ["105", "203"], ["117", "203"], ["114", "203"], ["122", "203"], ["122", "203"], ["114", "203"], ["114", "203"], ["78", "203"], ["125", "203"], ["19", "20"], ["19", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["48", "46"], ["56", "54"], ["56", "54"], ["66", "64"], ["19", "129"], ["19", "181"], ["19", "191"], ["24", "27"], ["19", "27"], ["29", "27"], ["32", "27"], ["19", "72"], ["19", "125"], ["64", "125"], ["105", "125"], ["114", "125"], ["19", "134"], ["19", "144"], ["129", "175"], ["172", "175"], ["164", "175"], ["19", "175"], ["19", "29"], ["19", "37"], ["42", "41"], ["19", "41"], ["19", "48"], ["39", "48"], ["57", "56"], ["57", "56"], ["19", "56"], ["67", "66"], ["67", "66"], ["72", "75"], ["78", "75"], ["19", "75"], ["67", "75"], ["118", "78"], ["19", "78"], ["83", "81"], ["83", "81"], ["90", "88"], ["90", "88"], ["100", "98"], ["100", "98"], ["111", "105"], ["111", "105"], ["111", "114"], ["19", "114"], ["111", "114"], ["134", "137"], ["144", "137"], ["19", "137"], ["139", "137"], ["139", "137"], ["137", "144"], ["151", "149"], ["151", "149"], ["184", "182"], ["187", "182"], ["19", "182"], ["194", "192"], ["197", "192"], ["19", "192"], ["29", "32"], ["19", "32"], ["27", "42"], ["19", "42"], ["48", "57"], ["19", "57"], ["39", "57"], ["46", "67"], ["19", "67"], ["140", "139"], ["140", "139"], ["19", "139"], ["19", "164"], ["19", "184"], ["19", "190"], ["19", "194"], ["19", "200"], ["84", "83"], ["19", "83"], ["91", "90"], ["91", "90"], ["19", "90"], ["91", "100"], ["19", "100"], ["57", "100"], ["81", "100"], ["88", "111"], ["19", "111"], ["98", "111"], ["111", "122"], ["19", "122"], ["111", "122"], ["75", "140"], ["19", "140"], ["125", "151"], ["149", "161"], ["19", "161"], ["54", "161"], ["169", "161"], ["129", "164"], ["172", "164"], ["184", "187"], ["19", "187"], ["194", "197"], ["19", "197"], ["187", "197"], ["42", "84"], ["19", "84"], ["57", "91"], ["100", "91"], ["19", "91"], ["48", "91"], ["81", "91"], ["75", "108"], ["19", "108"], ["118", "117"], ["118", "117"], ["19", "117"], ["19", "172"], ["108", "118"], ["19", "118"], ["137", "154"], ["19", "154"], ["161", "169"], ["19", "169"], ["161", "169"], ["129", "172"], ["164", "172"], ["175", "192"], ["175", "196"], ["175", "197"], ["175", "187"], ["175", "184"], ["175", "194"], ["175", "182"], ["175", "186"], ["75", "115"], ["75", "98"], ["75", "75"], ["75", "81"], ["75", "84"], ["75", "102"], ["75", "114"], ["75", "91"], ["75", "93"], ["75", "90"], ["75", "118"], ["75", "100"], ["75", "88"], ["75", "108"], ["75", "111"], ["75", "122"], ["75", "106"], ["75", "83"], ["75", "105"], ["75", "117"], ["75", "78"], ["137", "154"], ["137", "161"], ["137", "149"], ["137", "151"], ["137", "144"], ["137", "137"], ["137", "152"], ["137", "139"], ["137", "157"], ["137", "140"], ["161", "169"], ["161", "164"], ["169", "172"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(BLOCK,try,try)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] s = split(&quot; &quot;))<SUB>5</SUB>>", "41": "<(split,split(&quot; &quot;))<SUB>5</SUB>>", "43": "<(IDENTIFIER,in,readLine())<SUB>5</SUB>>", "45": "<(LOCAL,int n: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,int n = Integer.parseInt(s[0]))<SUB>6</SUB>>", "49": "<(IDENTIFIER,Integer,Integer.parseInt(s[0]))<SUB>6</SUB>>", "51": "<(IDENTIFIER,s,Integer.parseInt(s[0]))<SUB>6</SUB>>", "53": "<(LOCAL,int t: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,t,int t = Integer.parseInt(s[1]) * 2)<SUB>7</SUB>>", "57": "<(parseInt,Integer.parseInt(s[1]))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,s[1])<SUB>7</SUB>>", "61": "<(LITERAL,1,Integer.parseInt(s[1]))<SUB>7</SUB>>", "63": "<(LOCAL,int[] walls: int[])<SUB>9</SUB>>", "65": "<(IDENTIFIER,walls,int[] walls = new int[n * 2])<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.multiplication,n * 2)<SUB>9</SUB>>", "69": "<(LITERAL,2,n * 2)<SUB>9</SUB>>", "71": "<(LOCAL,int i: int)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,s = split(&quot; &quot;))<SUB>13</SUB>>", "83": "<(split,split(&quot; &quot;))<SUB>13</SUB>>", "85": "<(IDENTIFIER,in,readLine())<SUB>13</SUB>>", "87": "<(LOCAL,int x: int)<SUB>14</SUB>>", "89": "<(IDENTIFIER,x,int x = Integer.parseInt(s[0]) * 2)<SUB>14</SUB>>", "91": "<(parseInt,Integer.parseInt(s[0]))<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>14</SUB>>", "95": "<(LITERAL,0,Integer.parseInt(s[0]))<SUB>14</SUB>>", "97": "<(LOCAL,int a: int)<SUB>15</SUB>>", "99": "<(IDENTIFIER,a,int a = Integer.parseInt(s[1]))<SUB>15</SUB>>", "101": "<(IDENTIFIER,Integer,Integer.parseInt(s[1]))<SUB>15</SUB>>", "103": "<(IDENTIFIER,s,Integer.parseInt(s[1]))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.assignment,walls[i * 2] = x - a)<SUB>16</SUB>>", "107": "<(IDENTIFIER,walls,walls[i * 2] = x - a)<SUB>16</SUB>>", "109": "<(IDENTIFIER,i,i * 2)<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.subtraction,x - a)<SUB>16</SUB>>", "113": "<(IDENTIFIER,a,x - a)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,walls[i * 2 + 1])<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.addition,i * 2 + 1)<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,i * 2)<SUB>17</SUB>>", "121": "<(LITERAL,1,i * 2 + 1)<SUB>17</SUB>>", "123": "<(IDENTIFIER,x,x + a)<SUB>17</SUB>>", "125": "<(sort,sort(walls))<SUB>20</SUB>>", "127": "<(IDENTIFIER,walls,sort(walls))<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.assignment,int count = 2)<SUB>22</SUB>>", "131": "<(LITERAL,2,int count = 2)<SUB>22</SUB>>", "133": "<(LOCAL,int i: int)<SUB>24</SUB>>", "135": "<(IDENTIFIER,i,int i = 1)<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; n * 2 - 2)<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.subtraction,n * 2 - 2)<SUB>24</SUB>>", "141": "<(IDENTIFIER,n,n * 2)<SUB>24</SUB>>", "143": "<(LITERAL,2,n * 2 - 2)<SUB>24</SUB>>", "145": "<(IDENTIFIER,i,i += 2)<SUB>24</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.assignment,int space = walls[i + 1] - walls[i])<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.subtraction,walls[i + 1] - walls[i])<SUB>25</SUB>>", "153": "<(IDENTIFIER,walls,walls[i + 1] - walls[i])<SUB>25</SUB>>", "155": "<(IDENTIFIER,i,i + 1)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,walls[i])<SUB>25</SUB>>", "159": "<(IDENTIFIER,i,walls[i + 1] - walls[i])<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.equals,space == t)<SUB>26</SUB>>", "163": "<(IDENTIFIER,t,space == t)<SUB>26</SUB>>", "165": "<(IDENTIFIER,count,count += 1)<SUB>27</SUB>>", "167": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "169": "<(&lt;operator&gt;.greaterThan,space &gt; t)<SUB>28</SUB>>", "171": "<(IDENTIFIER,t,space &gt; t)<SUB>28</SUB>>", "173": "<(IDENTIFIER,count,count += 2)<SUB>29</SUB>>", "175": "<(println,System.out.println(count))<SUB>32</SUB>>", "177": "<(IDENTIFIER,System,System.out.println(count))<SUB>32</SUB>>", "179": "<(IDENTIFIER,count,System.out.println(count))<SUB>32</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "185": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "187": "<(&lt;init&gt;,new RuntimeException(e))<SUB>35</SUB>>", "189": "<(IDENTIFIER,e,new RuntimeException(e))<SUB>35</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "195": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "197": "<(&lt;init&gt;,new RuntimeException(e))<SUB>37</SUB>>", "199": "<(IDENTIFIER,e,new RuntimeException(e))<SUB>37</SUB>>", "201": "<(MODIFIER,PUBLIC)>", "203": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}