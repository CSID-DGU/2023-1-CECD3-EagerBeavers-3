{"edges": [["19", "20"], ["19", "21"], ["19", "90"], ["19", "91"], ["19", "92"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "39"], ["21", "45"], ["21", "74"], ["21", "81"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "55"], ["45", "57"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "66"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "65"], ["63", "64"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "73"], ["71", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["76", "79"], ["79", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "88"], ["85", "89"], ["86", "87"], ["22", "28"], ["25", "31"], ["29", "36"], ["33", "42"], ["39", "47"], ["74", "84"], ["81", "92"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["41", "39"], ["47", "52"], ["50", "59"], ["50", "79"], ["55", "52"], ["76", "74"], ["82", "86"], ["85", "81"], ["28", "26"], ["36", "35"], ["42", "41"], ["52", "50"], ["58", "67"], ["66", "55"], ["79", "76"], ["84", "82"], ["86", "85"], ["59", "63"], ["62", "58"], ["67", "71"], ["70", "66"], ["63", "62"], ["71", "70"], ["19", "24"], ["20", "92"], ["22", "92"], ["25", "92"], ["25", "92"], ["29", "92"], ["29", "92"], ["33", "92"], ["33", "92"], ["39", "92"], ["39", "92"], ["39", "92"], ["47", "92"], ["50", "92"], ["50", "92"], ["50", "92"], ["76", "92"], ["76", "92"], ["76", "92"], ["74", "92"], ["74", "92"], ["81", "92"], ["85", "92"], ["81", "92"], ["58", "92"], ["58", "92"], ["66", "92"], ["70", "92"], ["66", "92"], ["66", "92"], ["55", "92"], ["74", "92"], ["86", "92"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["41", "39"], ["76", "74"], ["76", "74"], ["76", "74"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "81"], ["25", "31"], ["19", "31"], ["36", "35"], ["36", "35"], ["42", "41"], ["42", "41"], ["47", "50"], ["55", "50"], ["19", "50"], ["52", "50"], ["52", "50"], ["50", "55"], ["19", "55"], ["62", "58"], ["62", "58"], ["70", "66"], ["70", "66"], ["31", "76"], ["71", "76"], ["19", "76"], ["52", "76"], ["79", "76"], ["19", "85"], ["29", "36"], ["19", "36"], ["36", "42"], ["19", "42"], ["42", "52"], ["19", "52"], ["19", "79"], ["19", "86"], ["63", "62"], ["19", "62"], ["71", "70"], ["19", "70"], ["31", "63"], ["71", "63"], ["19", "63"], ["63", "71"], ["19", "71"], ["50", "58"], ["50", "66"], ["50", "71"], ["50", "52"], ["50", "67"], ["50", "70"], ["50", "63"], ["50", "50"], ["50", "59"], ["50", "55"], ["50", "62"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,N = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,U = new int[N - 1])<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.alloc,new int[N - 1])>", "37": "<(IDENTIFIER,N,N - 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,V = new int[N - 1])<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[N - 1])>", "43": "<(IDENTIFIER,N,N - 1)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>6</SUB>>", "53": "<(IDENTIFIER,N,N - 1)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,U[i])<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,U[i] = sc.nextInt() - 1)<SUB>7</SUB>>", "63": "<(nextInt,nextInt())<SUB>7</SUB>>", "65": "<(LITERAL,1,sc.nextInt() - 1)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,V[i])<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,V[i] = sc.nextInt() - 1)<SUB>8</SUB>>", "71": "<(nextInt,nextInt())<SUB>8</SUB>>", "73": "<(LITERAL,1,sc.nextInt() - 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,A,A = nextIntArray(N, -1))<SUB>10</SUB>>", "77": "<(IDENTIFIER,sc,nextIntArray(N, -1))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.minus,-1)<SUB>10</SUB>>", "81": "<(println,System.out.println(solve() ? &quot;Yes&quot; : &quot;No&quot;))<SUB>12</SUB>>", "83": "<(IDENTIFIER,System,System.out.println(solve() ? &quot;Yes&quot; : &quot;No&quot;))<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.conditional,solve() ? &quot;Yes&quot; : &quot;No&quot;)<SUB>12</SUB>>", "87": "<(IDENTIFIER,this,solve())<SUB>12</SUB>>", "89": "<(LITERAL,&quot;No&quot;,solve() ? &quot;Yes&quot; : &quot;No&quot;)<SUB>12</SUB>>", "91": "<(MODIFIER,STATIC)>"}}