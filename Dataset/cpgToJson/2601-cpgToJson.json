{"edges": [["19", "21"], ["19", "123"], ["19", "124"], ["19", "125"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "61"], ["21", "64"], ["21", "65"], ["21", "68"], ["21", "118"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "78"], ["68", "80"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "86"], ["82", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "89"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "112"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["61", "65"], ["65", "70"], ["118", "125"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "61"], ["52", "49"], ["70", "77"], ["73", "83"], ["73", "121"], ["78", "77"], ["119", "118"], ["28", "26"], ["55", "52"], ["75", "73"], ["121", "119"], ["56", "59"], ["59", "55"], ["77", "75"], ["82", "87"], ["82", "78"], ["83", "82"], ["87", "91"], ["91", "98"], ["94", "105"], ["94", "78"], ["99", "98"], ["96", "94"], ["98", "96"], ["103", "114"], ["103", "99"], ["104", "103"], ["113", "99"], ["105", "108"], ["108", "104"], ["114", "113"], ["19", "24"], ["20", "125"], ["22", "125"], ["25", "125"], ["25", "125"], ["32", "125"], ["30", "125"], ["30", "125"], ["35", "125"], ["35", "125"], ["40", "125"], ["40", "125"], ["40", "125"], ["49", "125"], ["49", "125"], ["61", "125"], ["61", "125"], ["65", "125"], ["70", "125"], ["73", "125"], ["73", "125"], ["73", "125"], ["118", "125"], ["118", "125"], ["118", "125"], ["82", "125"], ["82", "125"], ["87", "125"], ["91", "125"], ["94", "125"], ["94", "125"], ["78", "125"], ["104", "125"], ["104", "125"], ["103", "125"], ["103", "125"], ["113", "125"], ["113", "125"], ["99", "125"], ["55", "125"], ["59", "125"], ["55", "125"], ["55", "125"], ["52", "125"], ["61", "125"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "65"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "61"], ["35", "61"], ["55", "61"], ["19", "70"], ["65", "118"], ["87", "118"], ["19", "118"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["70", "73"], ["78", "73"], ["19", "73"], ["40", "73"], ["94", "73"], ["73", "78"], ["19", "78"], ["32", "59"], ["19", "59"], ["40", "82"], ["65", "87"], ["19", "87"], ["73", "91"], ["19", "91"], ["91", "94"], ["99", "94"], ["19", "94"], ["40", "94"], ["73", "94"], ["94", "99"], ["19", "99"], ["104", "103"], ["104", "103"], ["19", "103"], ["19", "113"], ["61", "104"], ["55", "104"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "55"], ["73", "73"], ["73", "77"], ["73", "75"], ["73", "82"], ["73", "83"], ["73", "78"], ["82", "94"], ["82", "96"], ["82", "98"], ["82", "87"], ["82", "91"], ["94", "94"], ["94", "96"], ["94", "98"], ["94", "99"], ["94", "103"], ["94", "104"], ["94", "105"], ["94", "108"], ["103", "113"], ["103", "114"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(LOCAL,boolean[] used: boolean[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,used,boolean[] used = new boolean[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n])<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(sort,sort(a))<SUB>9</SUB>>", "63": "<(IDENTIFIER,a,sort(a))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>10</SUB>>", "67": "<(LITERAL,0,int ans = 0)<SUB>10</SUB>>", "69": "<(LOCAL,int i: int)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; used.length)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,used.length)<SUB>11</SUB>>", "77": "<(FIELD_IDENTIFIER,length,length)<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,if (!used[i]),if (!used[i]))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,used[i])<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,!used[i])<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>13</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt; used.length); j++),for (int j = i; Some(j &lt; used.length); j++))<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,int j = i)<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,int j = i)<SUB>14</SUB>>", "95": "<(IDENTIFIER,j,j &lt; used.length)<SUB>14</SUB>>", "97": "<(IDENTIFIER,used,j &lt; used.length)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>15</SUB>>", "107": "<(IDENTIFIER,j,a[j] % a[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,a,a[j] % a[i])<SUB>15</SUB>>", "111": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.assignment,used[j] = true)<SUB>16</SUB>>", "115": "<(IDENTIFIER,used,used[j] = true)<SUB>16</SUB>>", "117": "<(LITERAL,true,used[j] = true)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "121": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}