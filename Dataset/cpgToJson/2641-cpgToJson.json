{"edges": [["17", "19"], ["17", "131"], ["17", "132"], ["17", "133"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "43"], ["19", "44"], ["19", "48"], ["19", "49"], ["19", "53"], ["19", "69"], ["19", "70"], ["19", "73"], ["19", "74"], ["19", "78"], ["19", "81"], ["19", "126"], ["19", "129"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "97"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "124"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["20", "28"], ["23", "37"], ["35", "42"], ["38", "46"], ["44", "51"], ["49", "55"], ["70", "76"], ["74", "78"], ["78", "83"], ["126", "129"], ["129", "133"], ["22", "20"], ["37", "35"], ["40", "38"], ["46", "44"], ["51", "49"], ["55", "58"], ["58", "64"], ["58", "70"], ["61", "58"], ["63", "61"], ["76", "74"], ["83", "86"], ["86", "94"], ["86", "126"], ["89", "86"], ["26", "33"], ["29", "23"], ["42", "40"], ["64", "67"], ["67", "63"], ["28", "26"], ["31", "29"], ["93", "100"], ["93", "89"], ["33", "31"], ["94", "93"], ["124", "89"], ["100", "103"], ["103", "112"], ["103", "124"], ["106", "103"], ["110", "120"], ["110", "106"], ["119", "106"], ["111", "110"], ["120", "119"], ["112", "115"], ["115", "111"], ["17", "22"], ["18", "133"], ["20", "133"], ["23", "133"], ["26", "133"], ["29", "133"], ["29", "133"], ["29", "133"], ["23", "133"], ["35", "133"], ["38", "133"], ["38", "133"], ["46", "133"], ["44", "133"], ["44", "133"], ["49", "133"], ["49", "133"], ["70", "133"], ["74", "133"], ["74", "133"], ["74", "133"], ["78", "133"], ["78", "133"], ["83", "133"], ["86", "133"], ["86", "133"], ["86", "133"], ["126", "133"], ["126", "133"], ["129", "133"], ["129", "133"], ["93", "133"], ["93", "133"], ["100", "133"], ["103", "133"], ["103", "133"], ["124", "133"], ["89", "133"], ["111", "133"], ["111", "133"], ["110", "133"], ["110", "133"], ["119", "133"], ["119", "133"], ["106", "133"], ["63", "133"], ["67", "133"], ["63", "133"], ["63", "133"], ["61", "133"], ["78", "133"], ["17", "18"], ["17", "20"], ["17", "35"], ["46", "44"], ["51", "49"], ["17", "70"], ["76", "74"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["17", "55"], ["67", "63"], ["17", "78"], ["49", "78"], ["63", "78"], ["17", "83"], ["38", "126"], ["17", "126"], ["70", "126"], ["124", "126"], ["126", "129"], ["17", "129"], ["17", "26"], ["17", "34"], ["17", "46"], ["44", "51"], ["17", "51"], ["55", "58"], ["61", "58"], ["17", "58"], ["51", "58"], ["58", "61"], ["17", "61"], ["58", "76"], ["17", "76"], ["83", "86"], ["89", "86"], ["17", "86"], ["76", "86"], ["103", "86"], ["86", "89"], ["17", "89"], ["26", "29"], ["17", "29"], ["46", "67"], ["17", "67"], ["74", "93"], ["86", "100"], ["17", "100"], ["70", "124"], ["17", "124"], ["100", "103"], ["106", "103"], ["17", "103"], ["86", "103"], ["103", "106"], ["17", "106"], ["17", "119"], ["111", "110"], ["111", "110"], ["17", "110"], ["78", "111"], ["63", "111"], ["58", "58"], ["58", "61"], ["58", "64"], ["58", "67"], ["58", "63"], ["86", "94"], ["86", "89"], ["86", "93"], ["86", "86"], ["93", "100"], ["93", "103"], ["93", "124"], ["103", "115"], ["103", "103"], ["103", "110"], ["103", "106"], ["103", "112"], ["103", "111"], ["110", "120"], ["110", "119"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "39": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "41": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(LOCAL,int n: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,this,nextInt())<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>6</SUB>>", "65": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>6</SUB>>", "67": "<(nextInt,nextInt())<SUB>6</SUB>>", "69": "<(LOCAL,int ans: int)<SUB>7</SUB>>", "71": "<(IDENTIFIER,ans,int ans = 0)<SUB>7</SUB>>", "73": "<(LOCAL,boolean[] b: boolean[])<SUB>8</SUB>>", "75": "<(IDENTIFIER,b,boolean[] b = new boolean[n])<SUB>8</SUB>>", "77": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "79": "<(IDENTIFIER,Arrays,sort(a))<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.logicalNot,!b[i])<SUB>12</SUB>>", "95": "<(IDENTIFIER,b,!b[i])<SUB>12</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "99": "<(LOCAL,int j: int)<SUB>13</SUB>>", "101": "<(IDENTIFIER,j,int j = i)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>13</SUB>>", "105": "<(IDENTIFIER,n,j &lt; n)<SUB>13</SUB>>", "107": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "109": "<(CONTROL_STRUCTURE,if (a[j] % a[i] == 0),if (a[j] % a[i] == 0))<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.modulo,a[j] % a[i])<SUB>14</SUB>>", "113": "<(IDENTIFIER,a,a[j] % a[i])<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "117": "<(IDENTIFIER,i,a[j] % a[i])<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.assignment,b[j] = true)<SUB>14</SUB>>", "121": "<(IDENTIFIER,b,b[j] = true)<SUB>14</SUB>>", "123": "<(LITERAL,true,b[j] = true)<SUB>14</SUB>>", "125": "<(IDENTIFIER,ans,ans++)<SUB>16</SUB>>", "127": "<(IDENTIFIER,pw,println(ans))<SUB>19</SUB>>", "129": "<(close,close())<SUB>20</SUB>>", "131": "<(MODIFIER,PUBLIC)>", "133": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}