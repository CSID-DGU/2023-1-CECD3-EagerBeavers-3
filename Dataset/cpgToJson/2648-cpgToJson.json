{"edges": [["23", "25"], ["23", "151"], ["23", "152"], ["23", "153"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "34"], ["25", "35"], ["25", "39"], ["25", "40"], ["25", "8"], ["25", "45"], ["25", "48"], ["25", "49"], ["25", "65"], ["25", "66"], ["25", "69"], ["25", "143"], ["25", "146"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "7"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["71", "72"], ["73", "74"], ["73", "76"], ["73", "77"], ["73", "81"], ["73", "82"], ["73", "85"], ["73", "110"], ["74", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "92"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "117"], ["110", "120"], ["110", "122"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "124"], ["122", "131"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["26", "29"], ["29", "32"], ["30", "33"], ["33", "37"], ["35", "42"], ["40", "47"], ["45", "48"], ["48", "51"], ["66", "71"], ["143", "149"], ["146", "153"], ["28", "26"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "62"], ["54", "66"], ["57", "54"], ["70", "74"], ["70", "143"], ["147", "146"], ["60", "57"], ["71", "70"], ["74", "79"], ["77", "82"], ["82", "89"], ["149", "147"], ["62", "60"], ["79", "77"], ["87", "92"], ["92", "100"], ["92", "114"], ["95", "92"], ["112", "117"], ["117", "71"], ["117", "127"], ["120", "117"], ["89", "87"], ["114", "112"], ["124", "133"], ["99", "107"], ["99", "95"], ["126", "124"], ["132", "140"], ["132", "120"], ["100", "99"], ["105", "95"], ["127", "126"], ["133", "136"], ["136", "132"], ["140", "120"], ["107", "105"], ["23", "28"], ["24", "153"], ["26", "153"], ["29", "153"], ["30", "153"], ["33", "153"], ["35", "153"], ["35", "153"], ["40", "153"], ["42", "153"], ["40", "153"], ["40", "153"], ["45", "153"], ["48", "153"], ["51", "153"], ["54", "153"], ["54", "153"], ["54", "153"], ["66", "153"], ["71", "153"], ["70", "153"], ["70", "153"], ["143", "153"], ["143", "153"], ["146", "153"], ["146", "153"], ["146", "153"], ["74", "153"], ["77", "153"], ["77", "153"], ["82", "153"], ["82", "153"], ["114", "153"], ["112", "153"], ["112", "153"], ["117", "153"], ["117", "153"], ["124", "153"], ["124", "153"], ["133", "153"], ["133", "153"], ["132", "153"], ["132", "153"], ["132", "153"], ["140", "153"], ["120", "153"], ["99", "153"], ["99", "153"], ["99", "153"], ["105", "153"], ["105", "153"], ["105", "153"], ["95", "153"], ["60", "153"], ["60", "153"], ["57", "153"], ["23", "24"], ["23", "26"], ["23", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["23", "45"], ["23", "66"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["45", "48"], ["23", "48"], ["23", "51"], ["33", "143"], ["23", "143"], ["66", "143"], ["74", "143"], ["143", "146"], ["23", "146"], ["29", "37"], ["23", "37"], ["37", "42"], ["23", "42"], ["35", "42"], ["51", "54"], ["57", "54"], ["23", "54"], ["42", "54"], ["54", "57"], ["23", "57"], ["71", "70"], ["79", "77"], ["23", "82"], ["48", "60"], ["23", "60"], ["40", "60"], ["48", "71"], ["79", "71"], ["136", "71"], ["140", "71"], ["100", "71"], ["107", "71"], ["60", "71"], ["23", "71"], ["66", "74"], ["23", "74"], ["89", "87"], ["89", "87"], ["114", "112"], ["114", "112"], ["71", "79"], ["23", "79"], ["87", "92"], ["95", "92"], ["23", "92"], ["100", "95"], ["107", "95"], ["23", "95"], ["112", "117"], ["120", "117"], ["23", "117"], ["136", "120"], ["140", "120"], ["23", "120"], ["126", "124"], ["126", "124"], ["77", "89"], ["23", "89"], ["89", "114"], ["23", "114"], ["100", "99"], ["100", "99"], ["82", "99"], ["105", "99"], ["23", "99"], ["107", "105"], ["107", "105"], ["127", "126"], ["127", "126"], ["82", "126"], ["133", "126"], ["99", "126"], ["105", "126"], ["23", "126"], ["133", "132"], ["133", "132"], ["136", "132"], ["136", "132"], ["79", "100"], ["107", "100"], ["23", "100"], ["92", "100"], ["79", "127"], ["136", "127"], ["140", "127"], ["100", "127"], ["107", "127"], ["23", "127"], ["117", "127"], ["124", "133"], ["23", "133"], ["126", "133"], ["127", "136"], ["23", "136"], ["127", "136"], ["136", "140"], ["23", "140"], ["136", "140"], ["100", "107"], ["23", "107"], ["100", "107"], ["54", "60"], ["54", "57"], ["54", "54"], ["54", "62"], ["70", "77"], ["70", "89"], ["70", "114"], ["70", "74"], ["70", "92"], ["70", "87"], ["70", "112"], ["70", "82"], ["70", "79"], ["70", "71"], ["70", "70"], ["70", "117"], ["92", "99"], ["92", "95"], ["92", "92"], ["92", "100"], ["117", "120"], ["117", "136"], ["117", "132"], ["117", "126"], ["117", "117"], ["117", "127"], ["117", "124"], ["117", "133"], ["99", "107"], ["99", "105"], ["132", "140"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] nums: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,nums,int[] nums = readIntArray(N))<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,readIntArray(N))<SUB>5</SUB>>", "8": "<(LOCAL,ArrayList&lt;Integer&gt; num: ANY)<SUB>6</SUB>>", "46": "<(IDENTIFIER,num,ANY num = new ArrayList&lt;&gt;())<SUB>6</SUB>>", "48": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt; N)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(IDENTIFIER,num,add(nums[i]))<SUB>9</SUB>>", "63": "<(IDENTIFIER,nums,add(nums[i]))<SUB>9</SUB>>", "65": "<(LOCAL,int count: int)<SUB>13</SUB>>", "67": "<(IDENTIFIER,count,int count = 0)<SUB>13</SUB>>", "69": "<(CONTROL_STRUCTURE,while (!num.isEmpty()),while (!num.isEmpty()))<SUB>14</SUB>>", "71": "<(isEmpty,isEmpty())<SUB>14</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "75": "<(IDENTIFIER,count,count++)<SUB>15</SUB>>", "77": "<(&lt;operator&gt;.assignment,int size = size())<SUB>16</SUB>>", "79": "<(size,size())<SUB>16</SUB>>", "81": "<(LOCAL,int min: int)<SUB>17</SUB>>", "83": "<(IDENTIFIER,min,int min = 200)<SUB>17</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int j = size - 1; Some(j &gt;= 0); j--),for (int j = size - 1; Some(j &gt;= 0); j--))<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.assignment,int j = size - 1)<SUB>18</SUB>>", "89": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>18</SUB>>", "91": "<(LITERAL,1,size - 1)<SUB>18</SUB>>", "93": "<(IDENTIFIER,j,j &gt;= 0)<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.postDecrement,j--)<SUB>18</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.lessThan,num.get(j) &lt; min)<SUB>19</SUB>>", "101": "<(IDENTIFIER,num,get(j))<SUB>19</SUB>>", "103": "<(IDENTIFIER,min,num.get(j) &lt; min)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.assignment,min = get(j))<SUB>20</SUB>>", "107": "<(get,get(j))<SUB>20</SUB>>", "109": "<(IDENTIFIER,j,get(j))<SUB>20</SUB>>", "111": "<(LOCAL,int j: int)<SUB>23</SUB>>", "113": "<(IDENTIFIER,j,int j = size - 1)<SUB>23</SUB>>", "115": "<(IDENTIFIER,size,size - 1)<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>23</SUB>>", "119": "<(LITERAL,0,j &gt;= 0)<SUB>23</SUB>>", "121": "<(IDENTIFIER,j,j--)<SUB>23</SUB>>", "123": "<(LOCAL,int div: int)<SUB>24</SUB>>", "125": "<(IDENTIFIER,div,int div = num.get(j) / min)<SUB>24</SUB>>", "127": "<(get,get(j))<SUB>24</SUB>>", "129": "<(IDENTIFIER,j,get(j))<SUB>24</SUB>>", "131": "<(CONTROL_STRUCTURE,if ((div * min) == num.get(j)),if ((div * min) == num.get(j)))<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.multiplication,div * min)<SUB>25</SUB>>", "135": "<(IDENTIFIER,min,div * min)<SUB>25</SUB>>", "137": "<(IDENTIFIER,num,get(j))<SUB>25</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "141": "<(IDENTIFIER,num,remove(j))<SUB>26</SUB>>", "143": "<(append,sb.append(count))<SUB>30</SUB>>", "145": "<(IDENTIFIER,count,sb.append(count))<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "151": "<(MODIFIER,PUBLIC)>", "153": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}