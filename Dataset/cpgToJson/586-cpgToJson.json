{"edges": [["19", "20"], ["19", "21"], ["19", "116"], ["19", "117"], ["19", "118"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "64"], ["21", "111"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "89"], ["75", "93"], ["76", "77"], ["76", "86"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "108"], ["95", "96"], ["95", "105"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["40", "46"], ["44", "50"], ["111", "118"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["46", "44"], ["50", "53"], ["53", "59"], ["53", "66"], ["56", "53"], ["58", "56"], ["66", "69"], ["69", "78"], ["69", "114"], ["72", "69"], ["112", "111"], ["28", "26"], ["59", "62"], ["62", "58"], ["114", "112"], ["76", "90"], ["76", "97"], ["77", "86"], ["86", "76"], ["90", "72"], ["78", "83"], ["81", "77"], ["95", "108"], ["95", "72"], ["108", "72"], ["83", "81"], ["96", "105"], ["105", "95"], ["97", "102"], ["100", "96"], ["102", "100"], ["19", "24"], ["20", "118"], ["22", "118"], ["25", "118"], ["25", "118"], ["30", "118"], ["35", "118"], ["37", "118"], ["35", "118"], ["35", "118"], ["40", "118"], ["44", "118"], ["44", "118"], ["44", "118"], ["50", "118"], ["66", "118"], ["69", "118"], ["69", "118"], ["69", "118"], ["111", "118"], ["111", "118"], ["111", "118"], ["77", "118"], ["77", "118"], ["76", "118"], ["86", "118"], ["76", "118"], ["76", "118"], ["96", "118"], ["96", "118"], ["95", "118"], ["105", "118"], ["95", "118"], ["95", "118"], ["108", "118"], ["90", "118"], ["72", "118"], ["58", "118"], ["62", "118"], ["58", "118"], ["58", "118"], ["56", "118"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "40"], ["46", "44"], ["22", "25"], ["19", "25"], ["19", "50"], ["62", "58"], ["19", "66"], ["40", "111"], ["108", "111"], ["90", "111"], ["19", "111"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "46"], ["19", "46"], ["50", "53"], ["56", "53"], ["19", "53"], ["46", "53"], ["53", "56"], ["19", "56"], ["66", "69"], ["72", "69"], ["19", "69"], ["53", "69"], ["83", "72"], ["102", "72"], ["19", "72"], ["37", "62"], ["19", "62"], ["77", "76"], ["77", "76"], ["86", "76"], ["86", "76"], ["19", "90"], ["44", "77"], ["96", "77"], ["58", "77"], ["96", "77"], ["19", "86"], ["35", "86"], ["105", "86"], ["40", "90"], ["108", "90"], ["19", "108"], ["96", "95"], ["96", "95"], ["105", "95"], ["105", "95"], ["40", "108"], ["90", "108"], ["69", "83"], ["19", "83"], ["44", "96"], ["77", "96"], ["77", "96"], ["19", "105"], ["86", "105"], ["83", "102"], ["19", "102"], ["53", "56"], ["53", "59"], ["53", "58"], ["53", "53"], ["53", "62"], ["69", "77"], ["69", "81"], ["69", "72"], ["69", "69"], ["69", "76"], ["69", "83"], ["69", "78"], ["69", "86"], ["76", "96"], ["76", "102"], ["76", "95"], ["76", "97"], ["76", "90"], ["76", "105"], ["76", "100"], ["95", "108"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,int d = nextInt())<SUB>6</SUB>>", "37": "<(nextInt,nextInt())<SUB>6</SUB>>", "39": "<(LOCAL,int ans: int)<SUB>7</SUB>>", "41": "<(IDENTIFIER,ans,int ans = 2)<SUB>7</SUB>>", "43": "<(LOCAL,int[] a: int[])<SUB>9</SUB>>", "45": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>9</SUB>>", "47": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "49": "<(LOCAL,int i: int)<SUB>11</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "61": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>12</SUB>>", "63": "<(IDENTIFIER,in,nextInt())<SUB>12</SUB>>", "65": "<(LOCAL,int i: int)<SUB>14</SUB>>", "67": "<(IDENTIFIER,i,int i = 1)<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "75": "<(CONTROL_STRUCTURE,if (a[i] - a[i - 1] &gt; 2 * d),if (a[i] - a[i - 1] &gt; 2 * d))<SUB>16</SUB>>", "77": "<(&lt;operator&gt;.subtraction,a[i] - a[i - 1])<SUB>16</SUB>>", "79": "<(IDENTIFIER,a,a[i] - a[i - 1])<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>16</SUB>>", "85": "<(LITERAL,1,i - 1)<SUB>16</SUB>>", "87": "<(LITERAL,2,2 * d)<SUB>16</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "91": "<(IDENTIFIER,ans,ans += 2)<SUB>18</SUB>>", "93": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.equals,a[i] - a[i - 1] == 2 * d)<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>20</SUB>>", "99": "<(IDENTIFIER,i,a[i] - a[i - 1])<SUB>20</SUB>>", "101": "<(IDENTIFIER,a,a[i] - a[i - 1])<SUB>20</SUB>>", "103": "<(IDENTIFIER,i,i - 1)<SUB>20</SUB>>", "105": "<(&lt;operator&gt;.multiplication,2 * d)<SUB>20</SUB>>", "107": "<(IDENTIFIER,d,2 * d)<SUB>20</SUB>>", "109": "<(IDENTIFIER,ans,ans += 1)<SUB>21</SUB>>", "111": "<(println,System.out.println(ans))<SUB>24</SUB>>", "113": "<(IDENTIFIER,System,System.out.println(ans))<SUB>24</SUB>>", "115": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>24</SUB>>", "117": "<(MODIFIER,STATIC)>"}}