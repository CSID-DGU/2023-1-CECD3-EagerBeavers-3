{"edges": [["19", "20"], ["19", "21"], ["19", "98"], ["19", "99"], ["19", "100"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "58"], ["21", "61"], ["21", "93"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "86"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["78", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["58", "63"], ["93", "100"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "58"], ["47", "44"], ["63", "66"], ["66", "75"], ["66", "96"], ["69", "66"], ["94", "93"], ["28", "26"], ["50", "47"], ["72", "87"], ["96", "94"], ["51", "54"], ["54", "50"], ["74", "72"], ["87", "90"], ["87", "69"], ["90", "69"], ["75", "82"], ["78", "74"], ["81", "78"], ["82", "81"], ["19", "24"], ["20", "100"], ["22", "100"], ["25", "100"], ["25", "100"], ["32", "100"], ["30", "100"], ["30", "100"], ["35", "100"], ["35", "100"], ["35", "100"], ["58", "100"], ["63", "100"], ["66", "100"], ["66", "100"], ["66", "100"], ["93", "100"], ["93", "100"], ["93", "100"], ["74", "100"], ["81", "100"], ["78", "100"], ["74", "100"], ["72", "100"], ["72", "100"], ["87", "100"], ["87", "100"], ["90", "100"], ["90", "100"], ["69", "100"], ["50", "100"], ["54", "100"], ["50", "100"], ["50", "100"], ["47", "100"], ["78", "100"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "58"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "63"], ["58", "93"], ["87", "93"], ["90", "93"], ["19", "93"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["63", "66"], ["69", "66"], ["19", "66"], ["44", "66"], ["82", "66"], ["78", "69"], ["19", "69"], ["74", "72"], ["74", "72"], ["87", "90"], ["19", "90"], ["32", "54"], ["19", "54"], ["35", "74"], ["50", "74"], ["78", "74"], ["78", "74"], ["78", "74"], ["72", "87"], ["19", "87"], ["58", "87"], ["90", "87"], ["19", "78"], ["81", "78"], ["81", "78"], ["82", "81"], ["82", "81"], ["66", "81"], ["19", "81"], ["66", "82"], ["19", "82"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["66", "66"], ["66", "75"], ["66", "81"], ["66", "72"], ["66", "69"], ["66", "74"], ["66", "87"], ["66", "82"], ["66", "78"], ["87", "90"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>9</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "57": "<(LOCAL,int temp: int)<SUB>12</SUB>>", "59": "<(IDENTIFIER,min,int min = 1000000000)<SUB>12</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "73": "<(IDENTIFIER,temp,temp = arr[i] / Math.max(i, n - 1 - i))<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "77": "<(IDENTIFIER,i,arr[i] / Math.max(i, n - 1 - i))<SUB>15</SUB>>", "79": "<(IDENTIFIER,Math,Math.max(i, n - 1 - i))<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.subtraction,n - 1 - i)<SUB>15</SUB>>", "83": "<(IDENTIFIER,n,n - 1)<SUB>15</SUB>>", "85": "<(IDENTIFIER,i,n - 1 - i)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.lessThan,temp &lt; min)<SUB>16</SUB>>", "89": "<(IDENTIFIER,min,temp &lt; min)<SUB>16</SUB>>", "91": "<(IDENTIFIER,min,min = temp)<SUB>17</SUB>>", "93": "<(println,System.out.println(min))<SUB>21</SUB>>", "95": "<(IDENTIFIER,System,System.out.println(min))<SUB>21</SUB>>", "97": "<(IDENTIFIER,min,System.out.println(min))<SUB>21</SUB>>", "99": "<(MODIFIER,STATIC)>"}}