{"edges": [["19", "21"], ["19", "245"], ["19", "246"], ["19", "247"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "66"], ["21", "83"], ["21", "132"], ["21", "220"], ["21", "225"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "119"], ["94", "95"], ["94", "110"], ["95", "96"], ["95", "103"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "144"], ["142", "145"], ["142", "148"], ["142", "151"], ["142", "175"], ["142", "199"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["164", "165"], ["164", "172"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["173", "174"], ["175", "176"], ["175", "177"], ["175", "182"], ["175", "185"], ["175", "187"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["188", "189"], ["188", "196"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["197", "198"], ["199", "200"], ["199", "211"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["225", "230"], ["225", "233"], ["225", "235"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["233", "234"], ["235", "236"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["220", "227"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "68"], ["57", "54"], ["68", "71"], ["71", "78"], ["71", "85"], ["74", "71"], ["85", "88"], ["88", "97"], ["88", "134"], ["91", "88"], ["134", "137"], ["137", "145"], ["137", "223"], ["140", "137"], ["221", "220"], ["227", "230"], ["230", "247"], ["230", "239"], ["233", "230"], ["28", "26"], ["60", "57"], ["77", "74"], ["119", "91"], ["145", "148"], ["148", "153"], ["223", "221"], ["236", "233"], ["61", "64"], ["64", "60"], ["78", "81"], ["81", "77"], ["95", "114"], ["95", "120"], ["120", "126"], ["123", "119"], ["153", "158"], ["156", "166"], ["156", "179"], ["161", "158"], ["177", "182"], ["182", "190"], ["182", "203"], ["185", "182"], ["200", "215"], ["200", "140"], ["237", "241"], ["240", "236"], ["96", "95"], ["96", "104"], ["103", "95"], ["111", "116"], ["116", "120"], ["124", "129"], ["129", "123"], ["158", "156"], ["179", "177"], ["201", "200"], ["201", "208"], ["206", "200"], ["212", "217"], ["217", "140"], ["239", "237"], ["241", "240"], ["97", "100"], ["100", "96"], ["104", "107"], ["107", "103"], ["112", "111"], ["126", "124"], ["165", "173"], ["165", "161"], ["189", "197"], ["189", "185"], ["203", "201"], ["208", "206"], ["213", "212"], ["114", "112"], ["166", "169"], ["169", "165"], ["173", "161"], ["190", "193"], ["193", "189"], ["197", "185"], ["215", "213"], ["19", "24"], ["20", "247"], ["22", "247"], ["25", "247"], ["25", "247"], ["32", "247"], ["30", "247"], ["30", "247"], ["35", "247"], ["35", "247"], ["40", "247"], ["40", "247"], ["45", "247"], ["45", "247"], ["45", "247"], ["220", "247"], ["227", "247"], ["230", "247"], ["230", "247"], ["230", "247"], ["233", "247"], ["140", "247"], ["91", "247"], ["74", "247"], ["57", "247"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "68"], ["19", "85"], ["19", "134"], ["217", "220"], ["116", "220"], ["19", "220"], ["19", "227"], ["25", "32"], ["19", "32"], ["19", "37"], ["19", "42"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["30", "54"], ["54", "57"], ["19", "57"], ["64", "60"], ["68", "71"], ["74", "71"], ["19", "71"], ["54", "71"], ["71", "74"], ["19", "74"], ["81", "77"], ["85", "88"], ["91", "88"], ["19", "88"], ["71", "88"], ["124", "88"], ["100", "91"], ["107", "91"], ["19", "91"], ["123", "119"], ["123", "119"], ["134", "137"], ["140", "137"], ["19", "137"], ["88", "137"], ["182", "137"], ["19", "140"], ["158", "140"], ["19", "145"], ["19", "148"], ["227", "230"], ["233", "230"], ["19", "230"], ["137", "230"], ["230", "233"], ["19", "233"], ["19", "153"], ["158", "177"], ["19", "177"], ["220", "236"], ["217", "236"], ["116", "236"], ["45", "236"], ["189", "236"], ["165", "236"], ["119", "236"], ["19", "236"], ["32", "64"], ["19", "64"], ["32", "81"], ["64", "81"], ["19", "81"], ["96", "95"], ["96", "95"], ["103", "95"], ["103", "95"], ["124", "123"], ["124", "123"], ["40", "123"], ["103", "123"], ["77", "123"], ["153", "156"], ["161", "156"], ["19", "156"], ["158", "156"], ["158", "156"], ["156", "161"], ["19", "161"], ["177", "182"], ["185", "182"], ["19", "182"], ["137", "182"], ["182", "185"], ["19", "185"], ["201", "200"], ["201", "200"], ["206", "200"], ["206", "200"], ["45", "240"], ["189", "240"], ["165", "240"], ["119", "240"], ["19", "240"], ["35", "96"], ["124", "96"], ["60", "96"], ["100", "96"], ["100", "96"], ["40", "103"], ["123", "103"], ["77", "103"], ["107", "103"], ["107", "103"], ["116", "111"], ["19", "111"], ["25", "116"], ["111", "116"], ["19", "116"], ["88", "124"], ["107", "124"], ["19", "124"], ["35", "124"], ["96", "124"], ["137", "158"], ["19", "158"], ["158", "179"], ["19", "179"], ["145", "201"], ["173", "201"], ["19", "201"], ["35", "201"], ["124", "201"], ["60", "201"], ["148", "206"], ["197", "206"], ["19", "206"], ["40", "206"], ["123", "206"], ["77", "206"], ["217", "212"], ["116", "212"], ["19", "212"], ["25", "217"], ["212", "217"], ["116", "217"], ["19", "217"], ["88", "100"], ["19", "100"], ["88", "107"], ["19", "107"], ["100", "107"], ["45", "165"], ["189", "165"], ["189", "165"], ["119", "165"], ["45", "189"], ["165", "189"], ["165", "189"], ["119", "189"], ["145", "173"], ["19", "173"], ["148", "197"], ["19", "197"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "54"], ["54", "61"], ["71", "77"], ["71", "81"], ["71", "74"], ["71", "71"], ["71", "78"], ["88", "96"], ["88", "120"], ["88", "119"], ["88", "95"], ["88", "97"], ["88", "91"], ["88", "129"], ["88", "100"], ["88", "88"], ["88", "123"], ["88", "126"], ["88", "124"], ["137", "145"], ["137", "179"], ["137", "153"], ["137", "148"], ["137", "137"], ["137", "182"], ["137", "201"], ["137", "158"], ["137", "200"], ["137", "140"], ["137", "177"], ["137", "203"], ["137", "156"], ["230", "230"], ["230", "240"], ["230", "233"], ["230", "239"], ["230", "236"], ["230", "237"], ["230", "241"], ["95", "114"], ["95", "112"], ["95", "111"], ["95", "116"], ["156", "169"], ["156", "161"], ["156", "158"], ["156", "166"], ["156", "165"], ["156", "156"], ["182", "185"], ["182", "189"], ["182", "190"], ["182", "182"], ["182", "193"], ["200", "215"], ["200", "213"], ["200", "212"], ["200", "217"], ["96", "107"], ["96", "103"], ["96", "104"], ["201", "206"], ["201", "208"], ["165", "173"], ["189", "197"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY r = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,r,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] l = new int[1005])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[1005])>", "39": "<(LOCAL,int[] ri: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,ri,int[] ri = new int[1005])<SUB>5</SUB>>", "43": "<(LITERAL,1005,new int[1005])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] candy = new int[1005])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[1005])>", "49": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); ++i),for (int i = 1; Some(i &lt;= n); ++i))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "53": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.preIncrement,++i)<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,l[i])<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,l[i] = nextInt())<SUB>9</SUB>>", "65": "<(IDENTIFIER,r,nextInt())<SUB>9</SUB>>", "67": "<(LOCAL,int i: int)<SUB>11</SUB>>", "69": "<(IDENTIFIER,i,int i = 1)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>11</SUB>>", "73": "<(IDENTIFIER,n,i &lt;= n)<SUB>11</SUB>>", "75": "<(IDENTIFIER,i,++i)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,ri[i] = nextInt())<SUB>13</SUB>>", "79": "<(IDENTIFIER,ri,ri[i] = nextInt())<SUB>13</SUB>>", "81": "<(nextInt,nextInt())<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); ++i),for (int i = 1; Some(i &lt;= n); ++i))<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>15</SUB>>", "87": "<(LITERAL,1,int i = 1)<SUB>15</SUB>>", "89": "<(IDENTIFIER,i,i &lt;= n)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.preIncrement,++i)<SUB>15</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.logicalOr,l[i] &gt; i - 1 || ri[i] &gt; n - i)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,l[i])<SUB>17</SUB>>", "99": "<(IDENTIFIER,i,l[i] &gt; i - 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,i,i - 1)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.greaterThan,ri[i] &gt; n - i)<SUB>17</SUB>>", "105": "<(IDENTIFIER,ri,ri[i] &gt; n - i)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.subtraction,n - i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,i,n - i)<SUB>17</SUB>>", "111": "<(println,System.out.println(&quot;NO&quot;))<SUB>19</SUB>>", "113": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>19</SUB>>", "115": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>19</SUB>>", "117": "<(IDENTIFIER,System,System.exit(0))<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,candy[i] = n - l[i] - ri[i])<SUB>22</SUB>>", "121": "<(IDENTIFIER,candy,candy[i] = n - l[i] - ri[i])<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.subtraction,n - l[i] - ri[i])<SUB>22</SUB>>", "125": "<(IDENTIFIER,n,n - l[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,l,n - l[i])<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,ri[i])<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,n - l[i] - ri[i])<SUB>22</SUB>>", "133": "<(LOCAL,int i: int)<SUB>24</SUB>>", "135": "<(IDENTIFIER,i,int i = 1)<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>24</SUB>>", "139": "<(IDENTIFIER,n,i &lt;= n)<SUB>24</SUB>>", "141": "<(IDENTIFIER,i,++i)<SUB>24</SUB>>", "143": "<(LOCAL,int left: int)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.assignment,int left = 0)<SUB>26</SUB>>", "147": "<(LITERAL,0,int left = 0)<SUB>26</SUB>>", "149": "<(IDENTIFIER,right,int right = 0)<SUB>26</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= i - 1); ++j),for (int j = 1; Some(j &lt;= i - 1); ++j))<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>27</SUB>>", "155": "<(LITERAL,1,int j = 1)<SUB>27</SUB>>", "157": "<(IDENTIFIER,j,j &lt;= i - 1)<SUB>27</SUB>>", "159": "<(IDENTIFIER,i,i - 1)<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.preIncrement,++j)<SUB>27</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "165": "<(&lt;operator&gt;.greaterThan,candy[j] &gt; candy[i])<SUB>29</SUB>>", "167": "<(IDENTIFIER,candy,candy[j] &gt; candy[i])<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,candy[i])<SUB>29</SUB>>", "171": "<(IDENTIFIER,i,candy[j] &gt; candy[i])<SUB>29</SUB>>", "173": "<(&lt;operator&gt;.preIncrement,++left)<SUB>31</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt;= n); ++j),for (int j = i + 1; Some(j &lt;= n); ++j))<SUB>34</SUB>>", "177": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>34</SUB>>", "179": "<(&lt;operator&gt;.addition,i + 1)<SUB>34</SUB>>", "181": "<(LITERAL,1,i + 1)<SUB>34</SUB>>", "183": "<(IDENTIFIER,j,j &lt;= n)<SUB>34</SUB>>", "185": "<(&lt;operator&gt;.preIncrement,++j)<SUB>34</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "189": "<(&lt;operator&gt;.greaterThan,candy[j] &gt; candy[i])<SUB>36</SUB>>", "191": "<(IDENTIFIER,candy,candy[j] &gt; candy[i])<SUB>36</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,candy[i])<SUB>36</SUB>>", "195": "<(IDENTIFIER,i,candy[j] &gt; candy[i])<SUB>36</SUB>>", "197": "<(&lt;operator&gt;.preIncrement,++right)<SUB>38</SUB>>", "199": "<(CONTROL_STRUCTURE,if (left != l[i] || right != ri[i]),if (left != l[i] || right != ri[i]))<SUB>41</SUB>>", "201": "<(&lt;operator&gt;.notEquals,left != l[i])<SUB>41</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,l[i])<SUB>41</SUB>>", "205": "<(IDENTIFIER,i,left != l[i])<SUB>41</SUB>>", "207": "<(IDENTIFIER,right,right != ri[i])<SUB>41</SUB>>", "209": "<(IDENTIFIER,ri,right != ri[i])<SUB>41</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>43</SUB>>", "215": "<(FIELD_IDENTIFIER,out,out)<SUB>43</SUB>>", "217": "<(exit,System.exit(0))<SUB>44</SUB>>", "219": "<(LITERAL,0,System.exit(0))<SUB>44</SUB>>", "221": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "223": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "225": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); ++i),for (int i = 1; Some(i &lt;= n); ++i))<SUB>48</SUB>>", "227": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>48</SUB>>", "229": "<(LITERAL,1,int i = 1)<SUB>48</SUB>>", "231": "<(IDENTIFIER,i,i &lt;= n)<SUB>48</SUB>>", "233": "<(&lt;operator&gt;.preIncrement,++i)<SUB>48</SUB>>", "235": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "237": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>50</SUB>>", "239": "<(FIELD_IDENTIFIER,out,out)<SUB>50</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,candy[i])<SUB>50</SUB>>", "243": "<(IDENTIFIER,i,candy[i] + &quot; &quot;)<SUB>50</SUB>>", "245": "<(MODIFIER,PUBLIC)>", "247": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}