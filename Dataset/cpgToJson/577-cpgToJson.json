{"edges": [["23", "24"], ["23", "25"], ["23", "116"], ["23", "117"], ["23", "118"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "44"], ["25", "45"], ["25", "8"], ["25", "49"], ["25", "52"], ["25", "53"], ["25", "70"], ["25", "114"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["52", "7"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "75"], ["71", "72"], ["71", "74"], ["72", "73"], ["75", "76"], ["75", "77"], ["75", "81"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "105"], ["81", "109"], ["82", "83"], ["82", "94"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["26", "29"], ["29", "32"], ["30", "37"], ["33", "47"], ["45", "51"], ["49", "52"], ["52", "55"], ["114", "118"], ["28", "26"], ["32", "30"], ["47", "45"], ["51", "49"], ["55", "61"], ["58", "67"], ["58", "72"], ["63", "61"], ["65", "63"], ["71", "79"], ["71", "114"], ["35", "42"], ["38", "33"], ["60", "58"], ["67", "65"], ["72", "71"], ["77", "85"], ["37", "35"], ["40", "38"], ["61", "60"], ["79", "77"], ["82", "106"], ["82", "111"], ["42", "40"], ["83", "82"], ["83", "96"], ["94", "82"], ["106", "72"], ["84", "83"], ["84", "91"], ["89", "83"], ["95", "94"], ["95", "102"], ["100", "94"], ["111", "72"], ["85", "84"], ["91", "89"], ["96", "95"], ["102", "100"], ["23", "28"], ["24", "118"], ["26", "118"], ["29", "118"], ["30", "118"], ["35", "118"], ["38", "118"], ["38", "118"], ["38", "118"], ["33", "118"], ["47", "118"], ["45", "118"], ["45", "118"], ["49", "118"], ["52", "118"], ["52", "118"], ["55", "118"], ["58", "118"], ["58", "118"], ["58", "118"], ["72", "118"], ["71", "118"], ["71", "118"], ["114", "118"], ["114", "118"], ["79", "118"], ["77", "118"], ["77", "118"], ["85", "118"], ["84", "118"], ["83", "118"], ["89", "118"], ["91", "118"], ["89", "118"], ["83", "118"], ["82", "118"], ["96", "118"], ["95", "118"], ["94", "118"], ["100", "118"], ["102", "118"], ["100", "118"], ["94", "118"], ["82", "118"], ["82", "118"], ["111", "118"], ["106", "118"], ["65", "118"], ["65", "118"], ["65", "118"], ["63", "118"], ["23", "24"], ["23", "26"], ["23", "30"], ["47", "45"], ["23", "49"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["35", "33"], ["38", "33"], ["49", "52"], ["23", "52"], ["23", "55"], ["33", "114"], ["111", "114"], ["106", "114"], ["23", "114"], ["23", "35"], ["23", "43"], ["29", "47"], ["23", "47"], ["55", "58"], ["63", "58"], ["23", "58"], ["67", "63"], ["23", "63"], ["52", "65"], ["23", "65"], ["67", "65"], ["72", "71"], ["23", "71"], ["79", "77"], ["35", "38"], ["23", "38"], ["23", "60"], ["58", "67"], ["23", "67"], ["45", "72"], ["23", "72"], ["47", "79"], ["23", "79"], ["83", "82"], ["83", "82"], ["94", "82"], ["94", "82"], ["84", "83"], ["84", "83"], ["89", "83"], ["89", "83"], ["95", "94"], ["95", "94"], ["100", "94"], ["100", "94"], ["33", "106"], ["111", "106"], ["23", "106"], ["85", "84"], ["85", "84"], ["23", "84"], ["52", "89"], ["100", "89"], ["65", "89"], ["23", "89"], ["91", "89"], ["91", "89"], ["96", "95"], ["96", "95"], ["23", "95"], ["52", "100"], ["89", "100"], ["65", "100"], ["23", "100"], ["102", "100"], ["102", "100"], ["33", "111"], ["106", "111"], ["23", "111"], ["77", "85"], ["23", "85"], ["85", "91"], ["23", "91"], ["85", "96"], ["91", "96"], ["23", "96"], ["96", "102"], ["23", "102"], ["58", "60"], ["58", "67"], ["58", "65"], ["58", "58"], ["58", "61"], ["58", "63"], ["71", "77"], ["71", "84"], ["71", "85"], ["71", "72"], ["71", "82"], ["71", "79"], ["71", "83"], ["71", "71"], ["82", "106"], ["82", "111"], ["83", "94"], ["83", "96"], ["83", "95"], ["84", "89"], ["84", "91"], ["95", "102"], ["95", "100"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj1,new BufferedOutputStream(System.out))>", "41": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "47": "<(nextInt,nextInt())<SUB>4</SUB>>", "8": "<(LOCAL,Set&lt;Long&gt; square: ANY)<SUB>5</SUB>>", "50": "<(IDENTIFIER,square,ANY square = new HashSet&lt;&gt;())<SUB>5</SUB>>", "52": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>5</SUB>>", "53": "<(CONTROL_STRUCTURE,for (long i = 1; Some(i &lt;= (long) 1e5); i++),for (long i = 1; Some(i &lt;= (long) 1e5); i++))<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,long i = 1)<SUB>6</SUB>>", "57": "<(LITERAL,1,long i = 1)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,i &lt;= (long) 1e5)<SUB>6</SUB>>", "61": "<(TYPE_REF,long,long)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "65": "<(add,add(i * i))<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.multiplication,i * i)<SUB>6</SUB>>", "69": "<(IDENTIFIER,i,i * i)<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>7</SUB>>", "73": "<(IDENTIFIER,t,t--)<SUB>7</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>8</SUB>>", "79": "<(nextLong,nextLong())<SUB>8</SUB>>", "81": "<(CONTROL_STRUCTURE,if ((n % 2 == 0 &amp;&amp; square.contains(n / 2)) || (n % 4 == 0 &amp;&amp; square.contains(n / 4))),if ((n % 2 == 0 &amp;&amp; square.contains(n / 2)) || (n % 4 == 0 &amp;&amp; square.contains(n / 4))))<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.logicalAnd,n % 2 == 0 &amp;&amp; square.contains(n / 2))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.modulo,n % 2)<SUB>9</SUB>>", "87": "<(LITERAL,2,n % 2)<SUB>9</SUB>>", "89": "<(contains,contains(n / 2))<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.division,n / 2)<SUB>9</SUB>>", "93": "<(LITERAL,2,n / 2)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.equals,n % 4 == 0)<SUB>9</SUB>>", "97": "<(IDENTIFIER,n,n % 4)<SUB>9</SUB>>", "99": "<(LITERAL,0,n % 4 == 0)<SUB>9</SUB>>", "101": "<(IDENTIFIER,square,contains(n / 4))<SUB>9</SUB>>", "103": "<(IDENTIFIER,n,n / 4)<SUB>9</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "107": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>10</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "111": "<(println,println(&quot;NO&quot;))<SUB>12</SUB>>", "113": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>12</SUB>>", "115": "<(IDENTIFIER,out,close())<SUB>15</SUB>>", "117": "<(MODIFIER,STATIC)>"}}