{"edges": [["21", "23"], ["21", "263"], ["21", "264"], ["21", "265"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "47"], ["23", "52"], ["23", "53"], ["23", "58"], ["23", "59"], ["23", "63"], ["23", "64"], ["23", "69"], ["23", "110"], ["23", "111"], ["23", "115"], ["23", "175"], ["23", "183"], ["23", "188"], ["23", "254"], ["23", "261"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "88"], ["79", "89"], ["79", "98"], ["79", "104"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "146"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "166"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["175", "178"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "210"], ["199", "200"], ["199", "209"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "218"], ["210", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["220", "230"], ["220", "231"], ["220", "238"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "242"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["242", "247"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "44"], ["42", "50"], ["47", "55"], ["53", "61"], ["59", "66"], ["64", "71"], ["111", "117"], ["175", "184"], ["183", "190"], ["254", "261"], ["261", "265"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["44", "42"], ["49", "47"], ["55", "53"], ["61", "59"], ["66", "64"], ["71", "74"], ["74", "84"], ["74", "113"], ["77", "74"], ["113", "111"], ["117", "120"], ["120", "128"], ["120", "181"], ["123", "120"], ["178", "175"], ["184", "183"], ["190", "193"], ["193", "201"], ["193", "258"], ["196", "193"], ["256", "254"], ["34", "32"], ["50", "49"], ["81", "94"], ["89", "100"], ["98", "106"], ["104", "77"], ["179", "178"], ["258", "256"], ["83", "81"], ["91", "89"], ["99", "98"], ["105", "104"], ["128", "131"], ["131", "140"], ["131", "123"], ["134", "131"], ["181", "179"], ["200", "196"], ["200", "212"], ["212", "215"], ["215", "224"], ["215", "196"], ["218", "215"], ["84", "83"], ["92", "91"], ["100", "99"], ["106", "105"], ["201", "207"], ["204", "200"], ["231", "239"], ["238", "218"], ["94", "92"], ["138", "134"], ["138", "148"], ["148", "151"], ["151", "160"], ["151", "134"], ["154", "151"], ["205", "204"], ["222", "218"], ["222", "235"], ["233", "231"], ["239", "244"], ["242", "238"], ["139", "138"], ["166", "154"], ["207", "205"], ["223", "222"], ["235", "233"], ["244", "248"], ["247", "242"], ["140", "139"], ["158", "154"], ["158", "167"], ["167", "171"], ["170", "166"], ["224", "223"], ["248", "251"], ["251", "247"], ["159", "158"], ["171", "170"], ["160", "159"], ["21", "26"], ["22", "265"], ["24", "265"], ["27", "265"], ["28", "265"], ["31", "265"], ["31", "265"], ["37", "265"], ["42", "265"], ["42", "265"], ["47", "265"], ["50", "265"], ["49", "265"], ["47", "265"], ["47", "265"], ["53", "265"], ["53", "265"], ["59", "265"], ["59", "265"], ["64", "265"], ["66", "265"], ["64", "265"], ["64", "265"], ["71", "265"], ["74", "265"], ["74", "265"], ["74", "265"], ["111", "265"], ["111", "265"], ["111", "265"], ["175", "265"], ["178", "265"], ["175", "265"], ["175", "265"], ["183", "265"], ["183", "265"], ["190", "265"], ["193", "265"], ["193", "265"], ["258", "265"], ["254", "265"], ["254", "265"], ["261", "265"], ["261", "265"], ["200", "265"], ["204", "265"], ["200", "265"], ["200", "265"], ["212", "265"], ["215", "265"], ["215", "265"], ["215", "265"], ["223", "265"], ["222", "265"], ["222", "265"], ["231", "265"], ["233", "265"], ["231", "265"], ["231", "265"], ["238", "265"], ["247", "265"], ["247", "265"], ["242", "265"], ["238", "265"], ["238", "265"], ["218", "265"], ["196", "265"], ["128", "265"], ["131", "265"], ["131", "265"], ["131", "265"], ["123", "265"], ["139", "265"], ["138", "265"], ["138", "265"], ["148", "265"], ["151", "265"], ["151", "265"], ["159", "265"], ["158", "265"], ["158", "265"], ["166", "265"], ["166", "265"], ["166", "265"], ["154", "265"], ["134", "265"], ["81", "265"], ["83", "265"], ["81", "265"], ["81", "265"], ["89", "265"], ["91", "265"], ["89", "265"], ["89", "265"], ["98", "265"], ["98", "265"], ["104", "265"], ["104", "265"], ["77", "265"], ["242", "265"], ["175", "265"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["44", "42"], ["49", "47"], ["55", "53"], ["55", "53"], ["61", "59"], ["66", "64"], ["113", "111"], ["21", "183"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "71"], ["21", "117"], ["21", "175"], ["59", "175"], ["178", "175"], ["178", "175"], ["21", "190"], ["31", "254"], ["21", "254"], ["175", "254"], ["254", "261"], ["21", "261"], ["27", "39"], ["21", "39"], ["39", "44"], ["21", "44"], ["50", "49"], ["21", "55"], ["42", "55"], ["53", "61"], ["21", "61"], ["55", "66"], ["21", "66"], ["71", "74"], ["77", "74"], ["21", "74"], ["37", "74"], ["94", "77"], ["21", "77"], ["83", "81"], ["83", "81"], ["91", "89"], ["91", "89"], ["61", "113"], ["21", "113"], ["117", "120"], ["123", "120"], ["21", "120"], ["113", "120"], ["120", "123"], ["139", "123"], ["159", "123"], ["21", "123"], ["21", "178"], ["190", "193"], ["196", "193"], ["21", "193"], ["120", "193"], ["193", "196"], ["223", "196"], ["233", "196"], ["21", "196"], ["44", "50"], ["21", "50"], ["21", "128"], ["21", "212"], ["193", "258"], ["21", "258"], ["47", "83"], ["21", "83"], ["47", "91"], ["21", "91"], ["128", "131"], ["134", "131"], ["21", "131"], ["66", "131"], ["151", "131"], ["140", "134"], ["21", "134"], ["175", "200"], ["204", "200"], ["204", "200"], ["212", "215"], ["218", "215"], ["21", "215"], ["66", "215"], ["131", "215"], ["224", "218"], ["235", "218"], ["21", "218"], ["233", "231"], ["233", "231"], ["242", "238"], ["242", "238"], ["242", "238"], ["21", "148"], ["178", "204"], ["21", "204"], ["74", "94"], ["21", "94"], ["139", "138"], ["139", "138"], ["21", "138"], ["148", "151"], ["154", "151"], ["21", "151"], ["131", "151"], ["160", "154"], ["21", "154"], ["223", "222"], ["223", "222"], ["21", "222"], ["223", "233"], ["21", "233"], ["235", "233"], ["235", "233"], ["21", "242"], ["175", "242"], ["238", "242"], ["200", "242"], ["111", "242"], ["140", "139"], ["140", "139"], ["120", "139"], ["159", "139"], ["21", "139"], ["111", "166"], ["224", "223"], ["224", "223"], ["193", "223"], ["233", "223"], ["21", "223"], ["21", "235"], ["224", "235"], ["175", "247"], ["200", "247"], ["111", "247"], ["21", "140"], ["131", "140"], ["159", "158"], ["159", "158"], ["21", "158"], ["21", "224"], ["215", "224"], ["160", "159"], ["160", "159"], ["139", "159"], ["21", "159"], ["21", "160"], ["151", "160"], ["74", "94"], ["74", "77"], ["74", "98"], ["74", "81"], ["74", "84"], ["74", "104"], ["74", "74"], ["74", "92"], ["74", "91"], ["74", "100"], ["74", "89"], ["74", "99"], ["74", "106"], ["74", "83"], ["74", "105"], ["120", "120"], ["120", "128"], ["120", "131"], ["120", "123"], ["193", "196"], ["193", "204"], ["193", "207"], ["193", "201"], ["193", "205"], ["193", "193"], ["193", "200"], ["131", "131"], ["131", "134"], ["131", "138"], ["131", "139"], ["131", "140"], ["200", "215"], ["200", "212"], ["215", "215"], ["215", "223"], ["215", "224"], ["215", "222"], ["215", "218"], ["138", "151"], ["138", "148"], ["151", "154"], ["151", "151"], ["151", "158"], ["151", "160"], ["151", "159"], ["222", "244"], ["222", "247"], ["222", "242"], ["222", "238"], ["222", "231"], ["222", "233"], ["222", "239"], ["222", "235"], ["222", "251"], ["222", "248"], ["158", "167"], ["158", "170"], ["158", "171"], ["158", "166"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,int m: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,scanner,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,char[] str = toCharArray())<SUB>6</SUB>>", "49": "<(toCharArray,toCharArray())<SUB>6</SUB>>", "51": "<(IDENTIFIER,scanner,next())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int maxMask = 1 &lt;&lt; m)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>7</SUB>>", "57": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,long[] dp = new long[maxMask])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.alloc,new long[maxMask])>", "63": "<(LOCAL,int[][] dists: int[][])<SUB>9</SUB>>", "65": "<(IDENTIFIER,dists,int[][] dists = new int[m][m])<SUB>9</SUB>>", "67": "<(IDENTIFIER,m,new int[m][m])<SUB>9</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,int c1 = str[i] - 'a')<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.subtraction,str[i] - 'a')<SUB>11</SUB>>", "85": "<(IDENTIFIER,str,str[i] - 'a')<SUB>11</SUB>>", "87": "<(LITERAL,'a',str[i] - 'a')<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,int c2 = str[i - 1] - 'a')<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.subtraction,str[i - 1] - 'a')<SUB>12</SUB>>", "93": "<(IDENTIFIER,str,str[i - 1] - 'a')<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,i - 1)<SUB>12</SUB>>", "97": "<(LITERAL,'a',str[i - 1] - 'a')<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,dists[c1][c2])<SUB>13</SUB>>", "101": "<(IDENTIFIER,dists,dists[c1][c2]++)<SUB>13</SUB>>", "103": "<(IDENTIFIER,c2,dists[c1][c2]++)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dists[c2][c1])<SUB>14</SUB>>", "107": "<(IDENTIFIER,dists,dists[c2][c1]++)<SUB>14</SUB>>", "109": "<(IDENTIFIER,c1,dists[c2][c1]++)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.assignment,int[] pre = new int[maxMask])<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new int[maxMask])>", "115": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; maxMask); mask++),for (int mask = 0; Some(mask &lt; maxMask); mask++))<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>17</SUB>>", "119": "<(LITERAL,0,int mask = 0)<SUB>17</SUB>>", "121": "<(IDENTIFIER,mask,mask &lt; maxMask)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>17</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "127": "<(LOCAL,int i: int)<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>18</SUB>>", "133": "<(IDENTIFIER,m,i &lt; m)<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "137": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; mask) == 0),if (((1 &lt;&lt; i) &amp; mask) == 0))<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; mask)<SUB>19</SUB>>", "141": "<(LITERAL,1,1 &lt;&lt; i)<SUB>19</SUB>>", "143": "<(IDENTIFIER,mask,(1 &lt;&lt; i) &amp; mask)<SUB>19</SUB>>", "145": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>19</SUB>>", "147": "<(LOCAL,int j: int)<SUB>20</SUB>>", "149": "<(IDENTIFIER,j,int j = 0)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>20</SUB>>", "153": "<(IDENTIFIER,m,j &lt; m)<SUB>20</SUB>>", "155": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "157": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; mask) &gt; 0),if (((1 &lt;&lt; j) &amp; mask) &gt; 0))<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; mask)<SUB>21</SUB>>", "161": "<(LITERAL,1,1 &lt;&lt; j)<SUB>21</SUB>>", "163": "<(IDENTIFIER,mask,(1 &lt;&lt; j) &amp; mask)<SUB>21</SUB>>", "165": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,pre[mask])<SUB>22</SUB>>", "169": "<(IDENTIFIER,mask,pre[mask] += dists[i][j])<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dists[i])<SUB>22</SUB>>", "173": "<(IDENTIFIER,i,pre[mask] += dists[i][j])<SUB>22</SUB>>", "175": "<(fill,fill(dp, Long.MAX_VALUE / 4))<SUB>26</SUB>>", "177": "<(IDENTIFIER,dp,fill(dp, Long.MAX_VALUE / 4))<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.fieldAccess,Long.MAX_VALUE)<SUB>26</SUB>>", "181": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>27</SUB>>", "185": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>27</SUB>>", "187": "<(LITERAL,0,dp[0] = 0)<SUB>27</SUB>>", "189": "<(LOCAL,int mask: int)<SUB>28</SUB>>", "191": "<(IDENTIFIER,mask,int mask = 0)<SUB>28</SUB>>", "193": "<(&lt;operator&gt;.lessThan,mask &lt; maxMask)<SUB>28</SUB>>", "195": "<(IDENTIFIER,maxMask,mask &lt; maxMask)<SUB>28</SUB>>", "197": "<(IDENTIFIER,mask,mask++)<SUB>28</SUB>>", "199": "<(CONTROL_STRUCTURE,if (dp[mask] == Long.MAX_VALUE / 4),if (dp[mask] == Long.MAX_VALUE / 4))<SUB>29</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>29</SUB>>", "203": "<(IDENTIFIER,mask,dp[mask] == Long.MAX_VALUE / 4)<SUB>29</SUB>>", "205": "<(&lt;operator&gt;.fieldAccess,Long.MAX_VALUE)<SUB>29</SUB>>", "207": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>29</SUB>>", "209": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>29</SUB>>", "211": "<(LOCAL,int i: int)<SUB>30</SUB>>", "213": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>30</SUB>>", "217": "<(IDENTIFIER,m,i &lt; m)<SUB>30</SUB>>", "219": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "221": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; mask) &gt; 0),if (((1 &lt;&lt; i) &amp; mask) &gt; 0))<SUB>31</SUB>>", "223": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; mask)<SUB>31</SUB>>", "225": "<(LITERAL,1,1 &lt;&lt; i)<SUB>31</SUB>>", "227": "<(IDENTIFIER,mask,(1 &lt;&lt; i) &amp; mask)<SUB>31</SUB>>", "229": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>31</SUB>>", "231": "<(&lt;operator&gt;.assignment,int nmask = mask | (1 &lt;&lt; i))<SUB>32</SUB>>", "233": "<(&lt;operator&gt;.or,mask | (1 &lt;&lt; i))<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>32</SUB>>", "237": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>32</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,dp[nmask])<SUB>33</SUB>>", "241": "<(IDENTIFIER,nmask,dp[nmask] = Math.min(dp[nmask], dp[mask] + pre[nmask]))<SUB>33</SUB>>", "243": "<(IDENTIFIER,Math,Math.min(dp[nmask], dp[mask] + pre[nmask]))<SUB>33</SUB>>", "245": "<(IDENTIFIER,dp,Math.min(dp[nmask], dp[mask] + pre[nmask]))<SUB>33</SUB>>", "247": "<(&lt;operator&gt;.addition,dp[mask] + pre[nmask])<SUB>33</SUB>>", "249": "<(IDENTIFIER,dp,dp[mask] + pre[nmask])<SUB>33</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,pre[nmask])<SUB>33</SUB>>", "253": "<(IDENTIFIER,nmask,dp[mask] + pre[nmask])<SUB>33</SUB>>", "255": "<(IDENTIFIER,out,println(dp[maxMask - 1]))<SUB>36</SUB>>", "257": "<(IDENTIFIER,dp,println(dp[maxMask - 1]))<SUB>36</SUB>>", "259": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>36</SUB>>", "261": "<(flush,flush())<SUB>37</SUB>>", "263": "<(MODIFIER,PUBLIC)>", "265": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}