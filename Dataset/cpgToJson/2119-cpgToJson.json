{"edges": [["21", "23"], ["21", "291"], ["21", "292"], ["21", "293"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "289"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "45"], ["41", "42"], ["41", "44"], ["42", "43"], ["45", "46"], ["45", "47"], ["45", "51"], ["45", "52"], ["45", "56"], ["45", "57"], ["45", "60"], ["45", "61"], ["45", "64"], ["45", "65"], ["45", "68"], ["45", "69"], ["45", "74"], ["45", "75"], ["45", "79"], ["45", "132"], ["45", "133"], ["45", "148"], ["45", "286"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "96"], ["89", "108"], ["89", "120"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "104"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "128"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["135", "145"], ["137", "138"], ["137", "139"], ["137", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "156"], ["148", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["158", "160"], ["158", "167"], ["158", "168"], ["158", "172"], ["158", "179"], ["158", "186"], ["158", "193"], ["158", "205"], ["158", "217"], ["158", "229"], ["158", "241"], ["158", "253"], ["158", "265"], ["158", "268"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["168", "169"], ["168", "170"], ["170", "171"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "201"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "213"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "237"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "249"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["249", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "261"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["268", "273"], ["268", "276"], ["268", "278"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["276", "277"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "282"], ["280", "283"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["289", "290"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "42"], ["289", "293"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["41", "49"], ["41", "289"], ["34", "32"], ["42", "41"], ["47", "54"], ["52", "57"], ["57", "61"], ["61", "65"], ["65", "72"], ["69", "77"], ["75", "81"], ["133", "150"], ["286", "42"], ["49", "47"], ["54", "52"], ["71", "69"], ["77", "75"], ["81", "84"], ["84", "93"], ["84", "139"], ["87", "84"], ["135", "133"], ["150", "153"], ["153", "163"], ["153", "286"], ["156", "153"], ["72", "71"], ["91", "98"], ["137", "145"], ["145", "135"], ["160", "170"], ["168", "173"], ["172", "180"], ["179", "187"], ["186", "198"], ["265", "270"], ["93", "91"], ["97", "105"], ["97", "110"], ["104", "110"], ["109", "117"], ["109", "122"], ["116", "122"], ["121", "129"], ["121", "87"], ["128", "87"], ["139", "142"], ["142", "137"], ["162", "160"], ["170", "168"], ["173", "176"], ["176", "172"], ["180", "183"], ["183", "179"], ["187", "190"], ["190", "186"], ["194", "202"], ["194", "210"], ["201", "210"], ["206", "214"], ["206", "222"], ["213", "222"], ["218", "226"], ["218", "231"], ["225", "231"], ["230", "238"], ["230", "243"], ["237", "243"], ["242", "250"], ["242", "255"], ["249", "255"], ["254", "262"], ["254", "265"], ["261", "265"], ["270", "273"], ["273", "283"], ["273", "156"], ["276", "273"], ["278", "276"], ["98", "101"], ["101", "97"], ["105", "104"], ["110", "113"], ["113", "109"], ["117", "116"], ["122", "125"], ["125", "121"], ["129", "128"], ["163", "162"], ["196", "194"], ["202", "201"], ["208", "206"], ["214", "213"], ["220", "218"], ["226", "225"], ["231", "234"], ["234", "230"], ["238", "237"], ["243", "246"], ["246", "242"], ["250", "249"], ["255", "258"], ["258", "254"], ["262", "261"], ["280", "278"], ["198", "196"], ["210", "208"], ["222", "220"], ["283", "280"], ["21", "26"], ["22", "293"], ["24", "293"], ["27", "293"], ["28", "293"], ["31", "293"], ["31", "293"], ["38", "293"], ["36", "293"], ["36", "293"], ["42", "293"], ["41", "293"], ["41", "293"], ["289", "293"], ["289", "293"], ["47", "293"], ["52", "293"], ["52", "293"], ["57", "293"], ["57", "293"], ["61", "293"], ["61", "293"], ["65", "293"], ["65", "293"], ["69", "293"], ["72", "293"], ["71", "293"], ["69", "293"], ["69", "293"], ["75", "293"], ["75", "293"], ["75", "293"], ["81", "293"], ["84", "293"], ["135", "293"], ["137", "293"], ["137", "293"], ["135", "293"], ["135", "293"], ["133", "293"], ["133", "293"], ["150", "293"], ["150", "293"], ["153", "293"], ["153", "293"], ["153", "293"], ["286", "293"], ["286", "293"], ["162", "293"], ["160", "293"], ["160", "293"], ["168", "293"], ["168", "293"], ["172", "293"], ["172", "293"], ["172", "293"], ["179", "293"], ["179", "293"], ["179", "293"], ["186", "293"], ["186", "293"], ["186", "293"], ["194", "293"], ["201", "293"], ["201", "293"], ["206", "293"], ["213", "293"], ["213", "293"], ["222", "293"], ["218", "293"], ["218", "293"], ["225", "293"], ["225", "293"], ["234", "293"], ["230", "293"], ["230", "293"], ["237", "293"], ["237", "293"], ["246", "293"], ["242", "293"], ["242", "293"], ["249", "293"], ["249", "293"], ["254", "293"], ["258", "293"], ["258", "293"], ["254", "293"], ["254", "293"], ["261", "293"], ["261", "293"], ["265", "293"], ["265", "293"], ["265", "293"], ["270", "293"], ["273", "293"], ["273", "293"], ["156", "293"], ["280", "293"], ["280", "293"], ["278", "293"], ["278", "293"], ["276", "293"], ["91", "293"], ["91", "293"], ["101", "293"], ["97", "293"], ["97", "293"], ["104", "293"], ["113", "293"], ["109", "293"], ["109", "293"], ["116", "293"], ["121", "293"], ["125", "293"], ["125", "293"], ["121", "293"], ["121", "293"], ["128", "293"], ["87", "293"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "289"], ["286", "289"], ["21", "289"], ["27", "38"], ["21", "38"], ["42", "41"], ["21", "41"], ["49", "47"], ["54", "52"], ["21", "57"], ["21", "61"], ["21", "65"], ["71", "69"], ["77", "75"], ["135", "133"], ["135", "133"], ["135", "133"], ["36", "42"], ["21", "42"], ["21", "81"], ["84", "150"], ["21", "150"], ["31", "286"], ["21", "286"], ["133", "286"], ["278", "286"], ["38", "49"], ["72", "49"], ["21", "49"], ["49", "54"], ["21", "54"], ["72", "71"], ["21", "77"], ["81", "84"], ["87", "84"], ["21", "84"], ["52", "84"], ["93", "87"], ["21", "87"], ["93", "91"], ["93", "91"], ["137", "135"], ["21", "135"], ["137", "135"], ["137", "135"], ["75", "135"], ["128", "135"], ["265", "135"], ["150", "153"], ["156", "153"], ["21", "153"], ["47", "153"], ["222", "156"], ["21", "156"], ["162", "160"], ["162", "160"], ["170", "168"], ["75", "172"], ["137", "172"], ["265", "172"], ["75", "179"], ["137", "179"], ["265", "179"], ["75", "186"], ["135", "186"], ["265", "186"], ["168", "265"], ["172", "265"], ["179", "265"], ["186", "265"], ["201", "265"], ["213", "265"], ["225", "265"], ["237", "265"], ["249", "265"], ["261", "265"], ["21", "265"], ["54", "72"], ["21", "72"], ["135", "137"], ["280", "137"], ["21", "137"], ["75", "137"], ["104", "137"], ["265", "137"], ["116", "137"], ["21", "270"], ["280", "278"], ["280", "278"], ["280", "278"], ["84", "93"], ["21", "93"], ["69", "97"], ["254", "97"], ["121", "97"], ["101", "97"], ["101", "97"], ["75", "104"], ["137", "104"], ["265", "104"], ["69", "109"], ["97", "109"], ["113", "109"], ["113", "109"], ["75", "116"], ["137", "116"], ["265", "116"], ["69", "121"], ["109", "121"], ["125", "121"], ["125", "121"], ["75", "128"], ["135", "128"], ["265", "128"], ["163", "162"], ["163", "162"], ["21", "162"], ["21", "170"], ["21", "194"], ["69", "194"], ["218", "194"], ["168", "201"], ["172", "201"], ["21", "206"], ["69", "206"], ["194", "206"], ["168", "213"], ["179", "213"], ["21", "218"], ["69", "218"], ["206", "218"], ["168", "225"], ["186", "225"], ["69", "230"], ["254", "230"], ["121", "230"], ["234", "230"], ["234", "230"], ["168", "237"], ["186", "237"], ["225", "237"], ["69", "242"], ["230", "242"], ["246", "242"], ["246", "242"], ["168", "249"], ["172", "249"], ["201", "249"], ["69", "254"], ["242", "254"], ["258", "254"], ["258", "254"], ["168", "261"], ["179", "261"], ["213", "261"], ["270", "273"], ["276", "273"], ["21", "273"], ["273", "276"], ["21", "276"], ["57", "101"], ["21", "101"], ["91", "101"], ["61", "113"], ["21", "113"], ["101", "113"], ["65", "125"], ["21", "125"], ["113", "125"], ["222", "163"], ["21", "163"], ["84", "163"], ["57", "234"], ["101", "234"], ["21", "234"], ["160", "234"], ["61", "246"], ["113", "246"], ["21", "246"], ["234", "246"], ["65", "258"], ["125", "258"], ["21", "258"], ["246", "258"], ["135", "280"], ["21", "280"], ["133", "280"], ["278", "280"], ["265", "280"], ["153", "198"], ["21", "198"], ["163", "198"], ["198", "210"], ["21", "210"], ["198", "210"], ["210", "222"], ["21", "222"], ["210", "222"], ["41", "42"], ["41", "52"], ["41", "84"], ["41", "150"], ["41", "54"], ["41", "61"], ["41", "49"], ["41", "72"], ["41", "65"], ["41", "71"], ["41", "135"], ["41", "41"], ["41", "133"], ["41", "77"], ["41", "57"], ["41", "75"], ["41", "145"], ["41", "81"], ["41", "69"], ["41", "153"], ["41", "137"], ["41", "139"], ["41", "286"], ["41", "47"], ["41", "142"], ["84", "84"], ["84", "93"], ["84", "122"], ["84", "109"], ["84", "98"], ["84", "113"], ["84", "121"], ["84", "87"], ["84", "97"], ["84", "91"], ["84", "101"], ["84", "110"], ["84", "125"], ["153", "230"], ["153", "163"], ["153", "196"], ["153", "243"], ["153", "162"], ["153", "168"], ["153", "170"], ["153", "206"], ["153", "208"], ["153", "242"], ["153", "190"], ["153", "194"], ["153", "258"], ["153", "186"], ["153", "180"], ["153", "160"], ["153", "176"], ["153", "254"], ["153", "222"], ["153", "172"], ["153", "179"], ["153", "273"], ["153", "198"], ["153", "153"], ["153", "255"], ["153", "187"], ["153", "231"], ["153", "246"], ["153", "173"], ["153", "265"], ["153", "183"], ["153", "210"], ["153", "270"], ["153", "220"], ["153", "234"], ["153", "156"], ["153", "218"], ["97", "104"], ["97", "105"], ["109", "116"], ["109", "117"], ["121", "128"], ["121", "129"], ["194", "202"], ["194", "201"], ["206", "214"], ["206", "213"], ["218", "226"], ["218", "225"], ["230", "238"], ["230", "237"], ["242", "249"], ["242", "250"], ["254", "262"], ["254", "261"], ["273", "283"], ["273", "276"], ["273", "278"], ["273", "273"], ["273", "280"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int Q: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,Q,int Q = nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,scanner,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.greaterThan,Q-- &gt; 0)<SUB>5</SUB>>", "43": "<(IDENTIFIER,Q,Q--)<SUB>5</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>6</SUB>>", "49": "<(nextInt,nextInt())<SUB>6</SUB>>", "51": "<(LOCAL,int K: int)<SUB>7</SUB>>", "53": "<(IDENTIFIER,K,int K = nextInt())<SUB>7</SUB>>", "55": "<(IDENTIFIER,scanner,nextInt())<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,String s1 = &quot;RGB&quot;)<SUB>8</SUB>>", "59": "<(LITERAL,&quot;RGB&quot;,String s1 = &quot;RGB&quot;)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,String s2 = &quot;GBR&quot;)<SUB>9</SUB>>", "63": "<(LITERAL,&quot;GBR&quot;,String s2 = &quot;GBR&quot;)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,String s3 = &quot;BRG&quot;)<SUB>10</SUB>>", "67": "<(LITERAL,&quot;BRG&quot;,String s3 = &quot;BRG&quot;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,char[] arr = toCharArray())<SUB>11</SUB>>", "71": "<(toCharArray,toCharArray())<SUB>11</SUB>>", "73": "<(IDENTIFIER,scanner,next())<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[] cnts = new int[3])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[3])>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; K); i++),for (int i = 0; Some(i &lt; K); i++))<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,i &lt; K)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,int ind = i % 3)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.modulo,i % 3)<SUB>14</SUB>>", "95": "<(LITERAL,3,i % 3)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.notEquals,arr[i] != s1.charAt(ind))<SUB>15</SUB>>", "99": "<(IDENTIFIER,arr,arr[i] != s1.charAt(ind))<SUB>15</SUB>>", "101": "<(charAt,s1.charAt(ind))<SUB>15</SUB>>", "103": "<(IDENTIFIER,ind,s1.charAt(ind))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,cnts[0])<SUB>15</SUB>>", "107": "<(LITERAL,0,cnts[0]++)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.notEquals,arr[i] != s2.charAt(ind))<SUB>16</SUB>>", "111": "<(IDENTIFIER,arr,arr[i] != s2.charAt(ind))<SUB>16</SUB>>", "113": "<(charAt,s2.charAt(ind))<SUB>16</SUB>>", "115": "<(IDENTIFIER,ind,s2.charAt(ind))<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,cnts[1])<SUB>16</SUB>>", "119": "<(LITERAL,1,cnts[1]++)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.notEquals,arr[i] != s3.charAt(ind))<SUB>17</SUB>>", "123": "<(IDENTIFIER,arr,arr[i] != s3.charAt(ind))<SUB>17</SUB>>", "125": "<(charAt,s3.charAt(ind))<SUB>17</SUB>>", "127": "<(IDENTIFIER,ind,s3.charAt(ind))<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,cnts[2])<SUB>17</SUB>>", "131": "<(LITERAL,2,cnts[2]++)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.assignment,int ans = Math.min(Math.min(cnts[0], cnts[1]), cnts[2]))<SUB>19</SUB>>", "135": "<(min,Math.min(Math.min(cnts[0], cnts[1]), cnts[2]))<SUB>19</SUB>>", "137": "<(min,Math.min(cnts[0], cnts[1]))<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,cnts[0])<SUB>19</SUB>>", "141": "<(LITERAL,0,Math.min(cnts[0], cnts[1]))<SUB>19</SUB>>", "143": "<(IDENTIFIER,cnts,Math.min(cnts[0], cnts[1]))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,cnts[2])<SUB>19</SUB>>", "147": "<(LITERAL,2,Math.min(Math.min(cnts[0], cnts[1]), cnts[2]))<SUB>19</SUB>>", "149": "<(LOCAL,int i: int)<SUB>20</SUB>>", "151": "<(IDENTIFIER,i,int i = K)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>20</SUB>>", "155": "<(IDENTIFIER,N,i &lt; N)<SUB>20</SUB>>", "157": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "159": "<(LOCAL,int ind: int)<SUB>21</SUB>>", "161": "<(IDENTIFIER,ind,int ind = (K - 1) % 3)<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.subtraction,K - 1)<SUB>21</SUB>>", "165": "<(LITERAL,1,K - 1)<SUB>21</SUB>>", "167": "<(LOCAL,int[] nextCnts: int[])<SUB>22</SUB>>", "169": "<(IDENTIFIER,nextCnts,int[] nextCnts = new int[3])<SUB>22</SUB>>", "171": "<(LITERAL,3,new int[3])<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,nextCnts[1])<SUB>23</SUB>>", "175": "<(LITERAL,1,nextCnts[1] = cnts[0])<SUB>23</SUB>>", "177": "<(IDENTIFIER,cnts,nextCnts[1] = cnts[0])<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.assignment,nextCnts[2] = cnts[1])<SUB>24</SUB>>", "181": "<(IDENTIFIER,nextCnts,nextCnts[2] = cnts[1])<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,cnts[1])<SUB>24</SUB>>", "185": "<(LITERAL,1,nextCnts[2] = cnts[1])<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,nextCnts[0])<SUB>25</SUB>>", "189": "<(LITERAL,0,nextCnts[0] = cnts[2])<SUB>25</SUB>>", "191": "<(IDENTIFIER,cnts,nextCnts[0] = cnts[2])<SUB>25</SUB>>", "193": "<(CONTROL_STRUCTURE,if ('R' != arr[i - K]),if ('R' != arr[i - K]))<SUB>26</SUB>>", "195": "<(LITERAL,'R','R' != arr[i - K])<SUB>26</SUB>>", "197": "<(IDENTIFIER,arr,'R' != arr[i - K])<SUB>26</SUB>>", "199": "<(IDENTIFIER,i,i - K)<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.postDecrement,nextCnts[1]--)<SUB>26</SUB>>", "203": "<(IDENTIFIER,nextCnts,nextCnts[1]--)<SUB>26</SUB>>", "205": "<(CONTROL_STRUCTURE,if ('G' != arr[i - K]),if ('G' != arr[i - K]))<SUB>27</SUB>>", "207": "<(LITERAL,'G','G' != arr[i - K])<SUB>27</SUB>>", "209": "<(IDENTIFIER,arr,'G' != arr[i - K])<SUB>27</SUB>>", "211": "<(IDENTIFIER,i,i - K)<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.postDecrement,nextCnts[2]--)<SUB>27</SUB>>", "215": "<(IDENTIFIER,nextCnts,nextCnts[2]--)<SUB>27</SUB>>", "217": "<(CONTROL_STRUCTURE,if ('B' != arr[i - K]),if ('B' != arr[i - K]))<SUB>28</SUB>>", "219": "<(LITERAL,'B','B' != arr[i - K])<SUB>28</SUB>>", "221": "<(IDENTIFIER,arr,'B' != arr[i - K])<SUB>28</SUB>>", "223": "<(IDENTIFIER,i,i - K)<SUB>28</SUB>>", "225": "<(&lt;operator&gt;.postDecrement,nextCnts[0]--)<SUB>28</SUB>>", "227": "<(IDENTIFIER,nextCnts,nextCnts[0]--)<SUB>28</SUB>>", "229": "<(CONTROL_STRUCTURE,if (arr[i] != s1.charAt(ind)),if (arr[i] != s1.charAt(ind)))<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>29</SUB>>", "233": "<(IDENTIFIER,i,arr[i] != s1.charAt(ind))<SUB>29</SUB>>", "235": "<(IDENTIFIER,s1,s1.charAt(ind))<SUB>29</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,nextCnts[0]++)<SUB>29</SUB>>", "239": "<(IDENTIFIER,nextCnts,nextCnts[0]++)<SUB>29</SUB>>", "241": "<(CONTROL_STRUCTURE,if (arr[i] != s2.charAt(ind)),if (arr[i] != s2.charAt(ind)))<SUB>30</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>30</SUB>>", "245": "<(IDENTIFIER,i,arr[i] != s2.charAt(ind))<SUB>30</SUB>>", "247": "<(IDENTIFIER,s2,s2.charAt(ind))<SUB>30</SUB>>", "249": "<(&lt;operator&gt;.postIncrement,nextCnts[1]++)<SUB>30</SUB>>", "251": "<(IDENTIFIER,nextCnts,nextCnts[1]++)<SUB>30</SUB>>", "253": "<(CONTROL_STRUCTURE,if (arr[i] != s3.charAt(ind)),if (arr[i] != s3.charAt(ind)))<SUB>31</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>31</SUB>>", "257": "<(IDENTIFIER,i,arr[i] != s3.charAt(ind))<SUB>31</SUB>>", "259": "<(IDENTIFIER,s3,s3.charAt(ind))<SUB>31</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,nextCnts[2]++)<SUB>31</SUB>>", "263": "<(IDENTIFIER,nextCnts,nextCnts[2]++)<SUB>31</SUB>>", "265": "<(&lt;operator&gt;.assignment,cnts = nextCnts)<SUB>32</SUB>>", "267": "<(IDENTIFIER,nextCnts,cnts = nextCnts)<SUB>32</SUB>>", "269": "<(LOCAL,int j: int)<SUB>33</SUB>>", "271": "<(IDENTIFIER,j,int j = 0)<SUB>33</SUB>>", "273": "<(&lt;operator&gt;.lessThan,j &lt; 3)<SUB>33</SUB>>", "275": "<(LITERAL,3,j &lt; 3)<SUB>33</SUB>>", "277": "<(IDENTIFIER,j,j++)<SUB>33</SUB>>", "279": "<(IDENTIFIER,ans,ans = Math.min(ans, cnts[j]))<SUB>33</SUB>>", "281": "<(IDENTIFIER,Math,Math.min(ans, cnts[j]))<SUB>33</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,cnts[j])<SUB>33</SUB>>", "285": "<(IDENTIFIER,j,Math.min(ans, cnts[j]))<SUB>33</SUB>>", "287": "<(IDENTIFIER,out,println(ans))<SUB>35</SUB>>", "289": "<(flush,flush())<SUB>37</SUB>>", "291": "<(MODIFIER,PUBLIC)>", "293": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}