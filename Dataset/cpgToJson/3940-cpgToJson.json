{"edges": [["23", "25"], ["23", "139"], ["23", "140"], ["23", "141"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "62"], ["25", "63"], ["25", "8"], ["25", "70"], ["25", "73"], ["25", "75"], ["25", "114"], ["25", "115"], ["25", "119"], ["25", "137"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "7"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "92"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "91"], ["89", "90"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "122"], ["122", "123"], ["122", "136"], ["123", "124"], ["123", "135"], ["124", "125"], ["124", "134"], ["125", "126"], ["125", "133"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["137", "138"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "51"], ["48", "59"], ["55", "67"], ["63", "72"], ["70", "73"], ["73", "77"], ["115", "129"], ["119", "137"], ["137", "141"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["65", "63"], ["72", "70"], ["77", "80"], ["80", "89"], ["80", "117"], ["83", "80"], ["117", "115"], ["122", "119"], ["31", "38"], ["34", "29"], ["46", "44"], ["51", "50"], ["59", "57"], ["67", "65"], ["86", "94"], ["123", "122"], ["33", "31"], ["36", "34"], ["88", "86"], ["94", "97"], ["97", "105"], ["97", "83"], ["100", "97"], ["124", "123"], ["38", "36"], ["89", "88"], ["125", "124"], ["104", "110"], ["104", "100"], ["126", "125"], ["105", "104"], ["110", "100"], ["127", "126"], ["129", "127"], ["23", "28"], ["24", "141"], ["26", "141"], ["31", "141"], ["34", "141"], ["34", "141"], ["34", "141"], ["29", "141"], ["40", "141"], ["43", "141"], ["43", "141"], ["48", "141"], ["51", "141"], ["50", "141"], ["48", "141"], ["48", "141"], ["57", "141"], ["55", "141"], ["55", "141"], ["65", "141"], ["65", "141"], ["63", "141"], ["63", "141"], ["70", "141"], ["73", "141"], ["77", "141"], ["80", "141"], ["80", "141"], ["80", "141"], ["117", "141"], ["115", "141"], ["115", "141"], ["127", "141"], ["126", "141"], ["125", "141"], ["124", "141"], ["123", "141"], ["123", "141"], ["122", "141"], ["122", "141"], ["119", "141"], ["119", "141"], ["137", "141"], ["137", "141"], ["86", "141"], ["89", "141"], ["88", "141"], ["86", "141"], ["86", "141"], ["94", "141"], ["97", "141"], ["97", "141"], ["83", "141"], ["104", "141"], ["104", "141"], ["110", "141"], ["100", "141"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["65", "63"], ["65", "63"], ["23", "70"], ["117", "115"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["70", "73"], ["23", "73"], ["55", "73"], ["23", "77"], ["43", "119"], ["23", "119"], ["122", "119"], ["122", "119"], ["119", "137"], ["23", "137"], ["23", "31"], ["23", "39"], ["51", "50"], ["23", "50"], ["23", "57"], ["48", "57"], ["57", "65"], ["23", "65"], ["48", "65"], ["77", "80"], ["83", "80"], ["23", "80"], ["73", "80"], ["97", "80"], ["80", "83"], ["110", "83"], ["23", "83"], ["88", "86"], ["88", "86"], ["73", "117"], ["110", "117"], ["23", "117"], ["123", "122"], ["123", "122"], ["124", "122"], ["23", "122"], ["31", "34"], ["23", "34"], ["29", "51"], ["23", "51"], ["23", "94"], ["124", "123"], ["124", "123"], ["125", "123"], ["23", "123"], ["89", "88"], ["23", "88"], ["94", "97"], ["100", "97"], ["23", "97"], ["80", "97"], ["97", "100"], ["110", "100"], ["23", "100"], ["125", "124"], ["125", "124"], ["127", "124"], ["23", "124"], ["51", "89"], ["23", "89"], ["126", "125"], ["126", "125"], ["63", "125"], ["23", "125"], ["86", "104"], ["23", "104"], ["127", "126"], ["127", "126"], ["23", "126"], ["73", "110"], ["23", "110"], ["80", "110"], ["97", "110"], ["129", "127"], ["23", "127"], ["129", "127"], ["115", "129"], ["23", "129"], ["80", "80"], ["80", "94"], ["80", "83"], ["80", "89"], ["80", "88"], ["80", "97"], ["80", "86"], ["97", "105"], ["97", "100"], ["97", "104"], ["97", "97"], ["104", "110"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY bff = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,bff,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY wff = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,wff,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(LOCAL,String[] st: java.lang.String[])<SUB>4</SUB>>", "49": "<(IDENTIFIER,st,String[] st = split(&quot; &quot;))<SUB>4</SUB>>", "51": "<(readLine,readLine())<SUB>4</SUB>>", "53": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,int V = Integer.parseInt(st[0]))<SUB>5</SUB>>", "57": "<(parseInt,Integer.parseInt(st[0]))<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,st[0])<SUB>5</SUB>>", "61": "<(LITERAL,0,Integer.parseInt(st[0]))<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.assignment,int K = Integer.parseInt(st[1]))<SUB>6</SUB>>", "65": "<(parseInt,Integer.parseInt(st[1]))<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,st[1])<SUB>6</SUB>>", "69": "<(LITERAL,1,Integer.parseInt(st[1]))<SUB>6</SUB>>", "70": "<(&lt;operator&gt;.assignment,ANY bk = new BronKerbosch(V))<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.alloc,new BronKerbosch(V))<SUB>7</SUB>>", "7": "<(IDENTIFIER,bk,new BronKerbosch(V))<SUB>7</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; V); i++),for (int i = 0; Some(i &lt; V); i++))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i &lt; V)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "87": "<(IDENTIFIER,st,st = split(&quot; &quot;))<SUB>9</SUB>>", "89": "<(readLine,readLine())<SUB>9</SUB>>", "91": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>9</SUB>>", "93": "<(LOCAL,int j: int)<SUB>10</SUB>>", "95": "<(IDENTIFIER,j,int j = 0)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.lessThan,j &lt; V)<SUB>10</SUB>>", "99": "<(IDENTIFIER,V,j &lt; V)<SUB>10</SUB>>", "101": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "103": "<(CONTROL_STRUCTURE,if (st[j].equals(&quot;1&quot;)),if (st[j].equals(&quot;1&quot;)))<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,st[j])<SUB>11</SUB>>", "107": "<(IDENTIFIER,j,this.equals(&quot;1&quot;))<SUB>11</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "111": "<(IDENTIFIER,bk,anadir(i, j))<SUB>12</SUB>>", "113": "<(IDENTIFIER,j,anadir(i, j))<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.assignment,long num = numeroCamarilla())<SUB>16</SUB>>", "117": "<(numeroCamarilla,numeroCamarilla())<SUB>16</SUB>>", "119": "<(printf,printf(&quot;%.12f\\n&quot;, num * (num - 1.0) / 2 * K / num * K / num))<SUB>17</SUB>>", "121": "<(LITERAL,&quot;%.12f\\n&quot;,printf(&quot;%.12f\\n&quot;, num * (num - 1.0) / 2 * K / num * K / num))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.multiplication,num * (num - 1.0) / 2 * K / num * K)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.multiplication,num * (num - 1.0) / 2 * K)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.multiplication,num * (num - 1.0))<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.subtraction,num - 1.0)<SUB>17</SUB>>", "131": "<(LITERAL,1.0,num - 1.0)<SUB>17</SUB>>", "133": "<(IDENTIFIER,K,num * (num - 1.0) / 2 * K)<SUB>17</SUB>>", "135": "<(IDENTIFIER,K,num * (num - 1.0) / 2 * K / num * K)<SUB>17</SUB>>", "137": "<(flush,flush())<SUB>18</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}