{"edges": [["23", "24"], ["23", "25"], ["23", "536"], ["23", "537"], ["23", "538"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "53"], ["25", "56"], ["25", "58"], ["25", "64"], ["25", "124"], ["25", "125"], ["25", "131"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "90"], ["74", "91"], ["74", "95"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["95", "98"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "104"], ["98", "117"], ["100", "101"], ["100", "102"], ["102", "103"], ["104", "105"], ["104", "116"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "127"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["141", "145"], ["141", "148"], ["141", "149"], ["141", "155"], ["141", "156"], ["141", "162"], ["141", "163"], ["141", "167"], ["141", "171"], ["141", "174"], ["141", "177"], ["141", "253"], ["141", "254"], ["141", "261"], ["141", "362"], ["141", "363"], ["141", "372"], ["141", "395"], ["141", "414"], ["141", "492"], ["141", "493"], ["141", "500"], ["141", "501"], ["141", "506"], ["141", "531"], ["142", "143"], ["142", "144"], ["145", "7"], ["145", "146"], ["146", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["160", "161"], ["163", "164"], ["163", "165"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "170"], ["171", "172"], ["171", "173"], ["174", "8"], ["174", "175"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["187", "189"], ["187", "195"], ["187", "196"], ["187", "199"], ["187", "200"], ["187", "203"], ["187", "242"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["207", "214"], ["207", "239"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "218"], ["214", "220"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["221", "222"], ["221", "233"], ["221", "236"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["261", "266"], ["261", "271"], ["261", "273"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["271", "272"], ["273", "274"], ["273", "275"], ["273", "278"], ["273", "279"], ["273", "282"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["282", "289"], ["282", "292"], ["282", "294"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["294", "295"], ["294", "339"], ["294", "346"], ["294", "356"], ["295", "296"], ["295", "318"], ["296", "297"], ["296", "302"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["302", "303"], ["302", "317"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "315"], ["305", "316"], ["306", "307"], ["306", "314"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["311", "312"], ["311", "313"], ["318", "319"], ["318", "321"], ["318", "333"], ["319", "320"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "331"], ["323", "332"], ["324", "325"], ["324", "330"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["333", "334"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "345"], ["340", "341"], ["340", "344"], ["341", "342"], ["341", "343"], ["346", "347"], ["346", "354"], ["347", "348"], ["347", "353"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "352"], ["354", "355"], ["356", "357"], ["357", "358"], ["357", "359"], ["359", "360"], ["359", "361"], ["363", "364"], ["363", "365"], ["365", "366"], ["365", "369"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "371"], ["372", "373"], ["372", "374"], ["372", "377"], ["372", "382"], ["372", "384"], ["374", "375"], ["374", "376"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "381"], ["382", "383"], ["384", "385"], ["385", "386"], ["385", "387"], ["385", "390"], ["387", "388"], ["387", "389"], ["390", "391"], ["390", "394"], ["391", "392"], ["391", "393"], ["395", "396"], ["395", "397"], ["395", "400"], ["395", "405"], ["395", "407"], ["397", "398"], ["397", "399"], ["400", "401"], ["400", "402"], ["402", "403"], ["402", "404"], ["405", "406"], ["407", "408"], ["407", "413"], ["408", "409"], ["408", "412"], ["409", "410"], ["409", "411"], ["414", "415"], ["414", "416"], ["414", "419"], ["414", "422"], ["414", "424"], ["416", "417"], ["416", "418"], ["419", "420"], ["419", "421"], ["422", "423"], ["424", "425"], ["425", "426"], ["425", "427"], ["425", "430"], ["425", "433"], ["425", "435"], ["427", "428"], ["427", "429"], ["430", "431"], ["430", "432"], ["433", "434"], ["435", "436"], ["435", "453"], ["436", "437"], ["436", "440"], ["437", "438"], ["437", "439"], ["440", "441"], ["440", "446"], ["441", "442"], ["441", "445"], ["442", "443"], ["442", "444"], ["446", "447"], ["446", "450"], ["447", "448"], ["447", "449"], ["450", "451"], ["450", "452"], ["453", "454"], ["453", "455"], ["453", "458"], ["453", "461"], ["453", "463"], ["455", "456"], ["455", "457"], ["458", "459"], ["458", "460"], ["461", "462"], ["463", "464"], ["464", "465"], ["464", "470"], ["465", "466"], ["465", "469"], ["466", "467"], ["466", "468"], ["470", "471"], ["470", "472"], ["470", "477"], ["472", "473"], ["472", "476"], ["473", "474"], ["473", "475"], ["477", "478"], ["477", "491"], ["478", "479"], ["478", "488"], ["479", "480"], ["479", "481"], ["481", "482"], ["481", "487"], ["482", "483"], ["482", "484"], ["484", "485"], ["484", "486"], ["488", "489"], ["488", "490"], ["493", "494"], ["493", "495"], ["495", "496"], ["495", "499"], ["496", "497"], ["496", "498"], ["501", "502"], ["501", "503"], ["503", "504"], ["503", "505"], ["506", "507"], ["506", "508"], ["506", "511"], ["506", "516"], ["506", "518"], ["508", "509"], ["508", "510"], ["511", "512"], ["511", "513"], ["513", "514"], ["513", "515"], ["516", "517"], ["518", "519"], ["518", "520"], ["518", "525"], ["520", "521"], ["520", "522"], ["522", "523"], ["522", "524"], ["525", "526"], ["525", "527"], ["527", "528"], ["527", "529"], ["527", "530"], ["531", "532"], ["531", "535"], ["532", "533"], ["532", "534"], ["26", "33"], ["29", "42"], ["40", "44"], ["43", "51"], ["47", "55"], ["53", "56"], ["56", "61"], ["58", "66"], ["125", "133"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["55", "53"], ["60", "58"], ["66", "69"], ["69", "77"], ["69", "128"], ["72", "69"], ["127", "125"], ["133", "136"], ["136", "538"], ["136", "144"], ["139", "136"], ["31", "38"], ["34", "29"], ["51", "49"], ["61", "60"], ["91", "96"], ["128", "127"], ["142", "146"], ["145", "153"], ["149", "160"], ["156", "165"], ["163", "167"], ["167", "173"], ["171", "175"], ["174", "179"], ["254", "263"], ["363", "374"], ["493", "503"], ["501", "508"], ["531", "139"], ["33", "31"], ["36", "34"], ["76", "82"], ["76", "93"], ["93", "91"], ["96", "102"], ["96", "72"], ["144", "142"], ["146", "145"], ["151", "149"], ["158", "156"], ["165", "163"], ["173", "171"], ["175", "174"], ["179", "182"], ["182", "193"], ["182", "258"], ["185", "182"], ["256", "254"], ["263", "268"], ["266", "275"], ["266", "366"], ["271", "268"], ["365", "363"], ["374", "379"], ["377", "387"], ["377", "397"], ["382", "379"], ["397", "402"], ["400", "409"], ["400", "416"], ["405", "402"], ["407", "405"], ["416", "419"], ["419", "427"], ["419", "497"], ["422", "419"], ["495", "493"], ["503", "501"], ["508", "515"], ["511", "522"], ["511", "534"], ["516", "515"], ["532", "531"], ["38", "36"], ["77", "76"], ["82", "86"], ["85", "93"], ["100", "108"], ["117", "96"], ["153", "151"], ["160", "158"], ["189", "196"], ["196", "200"], ["200", "204"], ["258", "256"], ["268", "266"], ["275", "279"], ["279", "286"], ["366", "369"], ["369", "365"], ["379", "377"], ["385", "382"], ["402", "400"], ["408", "407"], ["496", "495"], ["513", "511"], ["520", "527"], ["525", "516"], ["534", "532"], ["86", "85"], ["102", "100"], ["105", "72"], ["105", "120"], ["118", "117"], ["191", "189"], ["204", "211"], ["204", "244"], ["243", "249"], ["243", "185"], ["248", "185"], ["284", "289"], ["289", "298"], ["289", "271"], ["292", "289"], ["387", "392"], ["390", "385"], ["409", "408"], ["427", "430"], ["430", "437"], ["430", "422"], ["433", "430"], ["497", "496"], ["515", "513"], ["522", "520"], ["527", "525"], ["106", "105"], ["106", "112"], ["111", "105"], ["120", "118"], ["193", "191"], ["209", "215"], ["239", "204"], ["244", "243"], ["249", "248"], ["286", "284"], ["339", "350"], ["356", "292"], ["391", "390"], ["108", "106"], ["112", "111"], ["211", "209"], ["215", "218"], ["215", "224"], ["218", "239"], ["296", "319"], ["296", "341"], ["340", "339"], ["347", "354"], ["347", "359"], ["354", "359"], ["357", "356"], ["392", "391"], ["437", "442"], ["437", "455"], ["440", "455"], ["455", "458"], ["458", "466"], ["458", "433"], ["461", "458"], ["297", "296"], ["297", "311"], ["302", "296"], ["319", "327"], ["321", "336"], ["333", "298"], ["341", "340"], ["348", "347"], ["359", "357"], ["441", "447"], ["446", "440"], ["464", "461"], ["233", "236"], ["236", "239"], ["298", "297"], ["303", "302"], ["323", "321"], ["334", "333"], ["350", "348"], ["442", "441"], ["447", "450"], ["450", "446"], ["465", "473"], ["470", "464"], ["223", "229"], ["223", "233"], ["228", "233"], ["305", "303"], ["324", "323"], ["336", "334"], ["466", "465"], ["472", "484"], ["477", "470"], ["224", "223"], ["229", "228"], ["306", "305"], ["325", "324"], ["473", "472"], ["478", "477"], ["307", "306"], ["327", "325"], ["479", "488"], ["488", "478"], ["309", "307"], ["481", "479"], ["311", "309"], ["482", "481"], ["484", "482"], ["23", "28"], ["24", "538"], ["26", "538"], ["31", "538"], ["34", "538"], ["34", "538"], ["34", "538"], ["29", "538"], ["40", "538"], ["44", "538"], ["43", "538"], ["43", "538"], ["49", "538"], ["51", "538"], ["49", "538"], ["47", "538"], ["47", "538"], ["53", "538"], ["56", "538"], ["56", "538"], ["58", "538"], ["58", "538"], ["66", "538"], ["69", "538"], ["69", "538"], ["125", "538"], ["128", "538"], ["127", "538"], ["125", "538"], ["125", "538"], ["133", "538"], ["136", "538"], ["136", "538"], ["136", "538"], ["139", "538"], ["72", "538"], ["23", "24"], ["23", "26"], ["23", "40"], ["49", "47"], ["49", "47"], ["23", "53"], ["60", "58"], ["127", "125"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "43"], ["53", "56"], ["23", "56"], ["23", "66"], ["23", "133"], ["23", "31"], ["23", "39"], ["29", "44"], ["23", "44"], ["23", "49"], ["51", "49"], ["23", "60"], ["66", "69"], ["72", "69"], ["23", "69"], ["111", "69"], ["69", "72"], ["112", "72"], ["120", "72"], ["23", "72"], ["82", "72"], ["93", "91"], ["69", "127"], ["23", "127"], ["133", "136"], ["139", "136"], ["23", "136"], ["47", "136"], ["136", "139"], ["23", "139"], ["23", "142"], ["151", "149"], ["151", "149"], ["158", "156"], ["158", "156"], ["165", "163"], ["23", "171"], ["256", "254"], ["256", "254"], ["365", "363"], ["365", "363"], ["23", "493"], ["363", "501"], ["31", "34"], ["23", "34"], ["43", "51"], ["23", "51"], ["23", "61"], ["69", "128"], ["23", "128"], ["142", "145"], ["23", "145"], ["146", "145"], ["385", "167"], ["23", "167"], ["163", "167"], ["248", "167"], ["228", "167"], ["171", "174"], ["23", "174"], ["175", "174"], ["23", "179"], ["23", "263"], ["23", "374"], ["23", "397"], ["23", "407"], ["23", "416"], ["23", "508"], ["493", "531"], ["525", "531"], ["23", "531"], ["58", "76"], ["85", "76"], ["106", "76"], ["23", "76"], ["82", "85"], ["23", "85"], ["56", "93"], ["82", "93"], ["23", "93"], ["91", "96"], ["102", "96"], ["23", "96"], ["102", "100"], ["120", "117"], ["23", "117"], ["44", "146"], ["175", "146"], ["23", "146"], ["49", "151"], ["158", "151"], ["191", "151"], ["23", "151"], ["153", "151"], ["151", "158"], ["23", "158"], ["160", "158"], ["149", "165"], ["23", "165"], ["146", "175"], ["23", "175"], ["179", "182"], ["185", "182"], ["23", "182"], ["165", "182"], ["182", "185"], ["23", "185"], ["191", "189"], ["191", "189"], ["23", "196"], ["23", "200"], ["182", "256"], ["23", "256"], ["156", "256"], ["263", "266"], ["271", "266"], ["23", "266"], ["156", "266"], ["266", "271"], ["302", "271"], ["23", "271"], ["256", "275"], ["286", "275"], ["23", "275"], ["23", "279"], ["256", "365"], ["286", "365"], ["23", "365"], ["156", "365"], ["374", "377"], ["382", "377"], ["23", "377"], ["256", "377"], ["286", "377"], ["377", "382"], ["23", "382"], ["397", "400"], ["405", "400"], ["23", "400"], ["156", "400"], ["400", "405"], ["23", "405"], ["416", "419"], ["422", "419"], ["23", "419"], ["256", "419"], ["286", "419"], ["419", "422"], ["484", "422"], ["23", "422"], ["23", "495"], ["508", "511"], ["516", "511"], ["23", "511"], ["501", "511"], ["511", "516"], ["23", "516"], ["31", "520"], ["501", "520"], ["96", "520"], ["100", "520"], ["102", "520"], ["527", "525"], ["527", "525"], ["527", "525"], ["56", "82"], ["93", "82"], ["23", "82"], ["69", "82"], ["145", "153"], ["23", "153"], ["153", "160"], ["23", "160"], ["200", "248"], ["215", "248"], ["233", "248"], ["23", "248"], ["156", "258"], ["23", "258"], ["23", "268"], ["156", "268"], ["286", "284"], ["286", "284"], ["256", "366"], ["286", "366"], ["23", "366"], ["23", "369"], ["156", "369"], ["23", "379"], ["256", "379"], ["286", "379"], ["167", "385"], ["23", "385"], ["363", "385"], ["440", "385"], ["464", "385"], ["23", "402"], ["156", "402"], ["23", "427"], ["23", "496"], ["96", "102"], ["23", "102"], ["106", "105"], ["106", "105"], ["111", "105"], ["111", "105"], ["158", "191"], ["23", "191"], ["193", "191"], ["189", "204"], ["239", "204"], ["23", "204"], ["58", "209"], ["215", "239"], ["23", "239"], ["244", "243"], ["244", "243"], ["23", "243"], ["167", "248"], ["228", "248"], ["284", "289"], ["292", "289"], ["23", "289"], ["289", "292"], ["23", "292"], ["298", "339"], ["311", "339"], ["23", "339"], ["23", "390"], ["427", "430"], ["433", "430"], ["23", "430"], ["156", "430"], ["458", "433"], ["23", "433"], ["470", "527"], ["23", "527"], ["493", "527"], ["525", "527"], ["520", "527"], ["100", "106"], ["23", "106"], ["58", "106"], ["76", "106"], ["85", "106"], ["112", "111"], ["112", "111"], ["69", "111"], ["23", "111"], ["106", "120"], ["112", "120"], ["23", "120"], ["69", "120"], ["112", "120"], ["82", "120"], ["174", "193"], ["23", "193"], ["204", "239"], ["196", "244"], ["236", "244"], ["218", "244"], ["23", "244"], ["23", "286"], ["256", "286"], ["125", "356"], ["347", "356"], ["23", "391"], ["23", "455"], ["106", "112"], ["23", "112"], ["69", "112"], ["120", "112"], ["82", "112"], ["200", "215"], ["233", "215"], ["23", "215"], ["209", "215"], ["196", "218"], ["236", "218"], ["23", "218"], ["297", "296"], ["297", "296"], ["302", "296"], ["302", "296"], ["23", "321"], ["125", "347"], ["356", "347"], ["23", "347"], ["279", "354"], ["321", "354"], ["23", "354"], ["430", "437"], ["23", "437"], ["455", "458"], ["461", "458"], ["23", "458"], ["437", "458"], ["450", "458"], ["488", "458"], ["488", "461"], ["23", "461"], ["470", "464"], ["470", "464"], ["470", "464"], ["215", "233"], ["23", "233"], ["23", "236"], ["298", "297"], ["298", "297"], ["23", "297"], ["279", "302"], ["354", "302"], ["321", "302"], ["23", "302"], ["266", "302"], ["298", "319"], ["311", "319"], ["23", "319"], ["279", "321"], ["354", "321"], ["125", "333"], ["324", "333"], ["215", "228"], ["23", "228"], ["275", "298"], ["319", "298"], ["23", "298"], ["311", "298"], ["279", "303"], ["354", "303"], ["321", "303"], ["23", "303"], ["23", "323"], ["437", "450"], ["23", "450"], ["527", "470"], ["23", "470"], ["440", "470"], ["464", "470"], ["224", "223"], ["224", "223"], ["23", "223"], ["167", "228"], ["248", "228"], ["23", "305"], ["125", "324"], ["333", "324"], ["23", "324"], ["23", "477"], ["196", "224"], ["236", "224"], ["218", "224"], ["23", "224"], ["125", "306"], ["23", "306"], ["458", "488"], ["23", "488"], ["458", "488"], ["298", "311"], ["23", "311"], ["419", "484"], ["23", "484"], ["69", "76"], ["69", "72"], ["69", "96"], ["69", "77"], ["69", "93"], ["69", "69"], ["69", "91"], ["136", "167"], ["136", "136"], ["136", "256"], ["136", "258"], ["136", "268"], ["136", "416"], ["136", "160"], ["136", "254"], ["136", "365"], ["136", "402"], ["136", "493"], ["136", "397"], ["136", "179"], ["136", "149"], ["136", "151"], ["136", "377"], ["136", "153"], ["136", "379"], ["136", "144"], ["136", "400"], ["136", "419"], ["136", "513"], ["136", "508"], ["136", "142"], ["136", "263"], ["136", "165"], ["136", "363"], ["136", "501"], ["136", "266"], ["136", "146"], ["136", "163"], ["136", "503"], ["136", "511"], ["136", "174"], ["136", "182"], ["136", "374"], ["136", "158"], ["136", "534"], ["136", "366"], ["136", "145"], ["136", "497"], ["136", "173"], ["136", "495"], ["136", "531"], ["136", "139"], ["136", "515"], ["136", "171"], ["136", "369"], ["136", "496"], ["136", "175"], ["136", "532"], ["136", "156"], ["76", "85"], ["76", "82"], ["76", "86"], ["96", "100"], ["96", "108"], ["96", "106"], ["96", "105"], ["96", "102"], ["182", "243"], ["182", "204"], ["182", "200"], ["182", "244"], ["182", "189"], ["182", "196"], ["182", "182"], ["182", "185"], ["182", "191"], ["182", "193"], ["266", "268"], ["266", "289"], ["266", "271"], ["266", "266"], ["266", "279"], ["266", "275"], ["266", "284"], ["266", "286"], ["377", "392"], ["377", "390"], ["377", "377"], ["377", "379"], ["377", "387"], ["377", "391"], ["377", "382"], ["377", "385"], ["400", "408"], ["400", "402"], ["400", "400"], ["400", "409"], ["400", "407"], ["400", "405"], ["419", "430"], ["419", "419"], ["419", "427"], ["419", "422"], ["511", "516"], ["511", "527"], ["511", "520"], ["511", "513"], ["511", "522"], ["511", "511"], ["511", "525"], ["511", "515"], ["105", "120"], ["105", "118"], ["105", "117"], ["105", "96"], ["204", "209"], ["204", "204"], ["204", "239"], ["204", "211"], ["204", "215"], ["243", "249"], ["243", "248"], ["289", "292"], ["289", "340"], ["289", "296"], ["289", "348"], ["289", "357"], ["289", "297"], ["289", "289"], ["289", "356"], ["289", "298"], ["289", "347"], ["289", "341"], ["289", "339"], ["289", "359"], ["289", "350"], ["430", "430"], ["430", "437"], ["430", "458"], ["430", "433"], ["430", "455"], ["106", "112"], ["106", "111"], ["215", "224"], ["215", "236"], ["215", "223"], ["215", "218"], ["215", "233"], ["296", "334"], ["296", "324"], ["296", "336"], ["296", "296"], ["296", "323"], ["296", "297"], ["296", "325"], ["296", "333"], ["296", "327"], ["296", "298"], ["296", "321"], ["296", "319"], ["347", "354"], ["437", "441"], ["437", "450"], ["437", "446"], ["437", "442"], ["437", "447"], ["437", "440"], ["458", "484"], ["458", "479"], ["458", "472"], ["458", "481"], ["458", "461"], ["458", "458"], ["458", "482"], ["458", "465"], ["458", "464"], ["458", "488"], ["458", "466"], ["458", "478"], ["458", "470"], ["458", "473"], ["458", "477"], ["297", "311"], ["297", "305"], ["297", "303"], ["297", "302"], ["297", "306"], ["297", "307"], ["297", "309"], ["223", "228"], ["223", "229"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "45": "<(IDENTIFIER,f,readLine())<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,int t = parseInt(st.nextToken()))<SUB>4</SUB>>", "49": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "51": "<(nextToken,nextToken())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,primes = new ArrayList&lt;&gt;())<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>5</SUB>>", "57": "<(IDENTIFIER,primes,new ArrayList&lt;&gt;())<SUB>5</SUB>>", "59": "<(IDENTIFIER,mind,mind = new int[MAXA + 1])<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.addition,MAXA + 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,MAXA + 1)<SUB>6</SUB>>", "65": "<(LOCAL,int i: int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,int i = 2)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= MAXA)<SUB>7</SUB>>", "71": "<(IDENTIFIER,MAXA,i &lt;= MAXA)<SUB>7</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "75": "<(CONTROL_STRUCTURE,if (mind[i] == 0),if (mind[i] == 0))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,mind[i])<SUB>8</SUB>>", "79": "<(IDENTIFIER,i,mind[i] == 0)<SUB>8</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "83": "<(IDENTIFIER,primes,add(i))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,mind[i] = i)<SUB>10</SUB>>", "87": "<(IDENTIFIER,mind,mind[i] = i)<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,mind[i] = i)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,)<SUB>12</SUB>>", "93": "<(iterator,&lt;empty&gt;)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>12</SUB>>", "97": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "99": "<(LOCAL,x: int)<SUB>12</SUB>>", "101": "<(IDENTIFIER,x,&lt;empty&gt;)>", "103": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "105": "<(&lt;operator&gt;.logicalOr,x &gt; mind[i] || x * i &gt; MAXA)<SUB>13</SUB>>", "107": "<(IDENTIFIER,x,x &gt; mind[i])<SUB>13</SUB>>", "109": "<(IDENTIFIER,mind,x &gt; mind[i])<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.greaterThan,x * i &gt; MAXA)<SUB>13</SUB>>", "113": "<(IDENTIFIER,x,x * i)<SUB>13</SUB>>", "115": "<(IDENTIFIER,MAXA,x * i &gt; MAXA)<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.assignment,mind[x * i] = x)<SUB>14</SUB>>", "119": "<(IDENTIFIER,mind,mind[x * i] = x)<SUB>14</SUB>>", "121": "<(IDENTIFIER,x,x * i)<SUB>14</SUB>>", "123": "<(IDENTIFIER,x,mind[x * i] = x)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,int[] count = new int[MAXA + 1])<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.alloc,new int[MAXA + 1])>", "129": "<(IDENTIFIER,MAXA,MAXA + 1)<SUB>17</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int on8y = 0; Some(on8y &lt; t); on8y++),for (int on8y = 0; Some(on8y &lt; t); on8y++))<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.assignment,int on8y = 0)<SUB>18</SUB>>", "135": "<(LITERAL,0,int on8y = 0)<SUB>18</SUB>>", "137": "<(IDENTIFIER,on8y,on8y &lt; t)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,on8y++)<SUB>18</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "143": "<(IDENTIFIER,st,st = new StringTokenizer(f.readLine()))<SUB>19</SUB>>", "145": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>19</SUB>>", "146": "<(readLine,readLine())<SUB>19</SUB>>", "148": "<(LOCAL,int n: int)<SUB>20</SUB>>", "150": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>20</SUB>>", "152": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>20</SUB>>", "154": "<(IDENTIFIER,st,nextToken())<SUB>20</SUB>>", "156": "<(&lt;operator&gt;.assignment,int k = parseInt(st.nextToken()))<SUB>21</SUB>>", "158": "<(parseInt,parseInt(st.nextToken()))<SUB>21</SUB>>", "160": "<(nextToken,nextToken())<SUB>21</SUB>>", "162": "<(LOCAL,int[] a: int[])<SUB>22</SUB>>", "164": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>22</SUB>>", "166": "<(IDENTIFIER,n,new int[n])<SUB>22</SUB>>", "168": "<(IDENTIFIER,Arrays,fill(a, 1))<SUB>23</SUB>>", "170": "<(LITERAL,1,fill(a, 1))<SUB>23</SUB>>", "172": "<(IDENTIFIER,st,st = new StringTokenizer(f.readLine()))<SUB>24</SUB>>", "174": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>24</SUB>>", "175": "<(readLine,readLine())<SUB>24</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "181": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "183": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.assignment,int x = parseInt(st.nextToken()))<SUB>26</SUB>>", "191": "<(parseInt,parseInt(st.nextToken()))<SUB>26</SUB>>", "193": "<(nextToken,nextToken())<SUB>26</SUB>>", "195": "<(LOCAL,int cnt: int)<SUB>27</SUB>>", "197": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>27</SUB>>", "199": "<(LOCAL,int last: int)<SUB>28</SUB>>", "201": "<(IDENTIFIER,last,int last = 0)<SUB>28</SUB>>", "203": "<(CONTROL_STRUCTURE,while (x &gt; 1),while (x &gt; 1))<SUB>29</SUB>>", "205": "<(IDENTIFIER,x,x &gt; 1)<SUB>29</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.assignment,int p = mind[x])<SUB>30</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,mind[x])<SUB>30</SUB>>", "213": "<(IDENTIFIER,x,int p = mind[x])<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.equals,last == p)<SUB>31</SUB>>", "217": "<(IDENTIFIER,p,last == p)<SUB>31</SUB>>", "219": "<(IDENTIFIER,cnt,cnt++)<SUB>31</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "223": "<(&lt;operator&gt;.equals,cnt % 2 == 1)<SUB>33</SUB>>", "225": "<(IDENTIFIER,cnt,cnt % 2)<SUB>33</SUB>>", "227": "<(LITERAL,1,cnt % 2 == 1)<SUB>33</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>33</SUB>>", "231": "<(IDENTIFIER,i,a[i] *= last)<SUB>33</SUB>>", "233": "<(&lt;operator&gt;.assignment,last = p)<SUB>34</SUB>>", "235": "<(IDENTIFIER,p,last = p)<SUB>34</SUB>>", "237": "<(IDENTIFIER,cnt,cnt = 1)<SUB>35</SUB>>", "239": "<(&lt;operator&gt;.assignmentDivision,x /= p)<SUB>37</SUB>>", "241": "<(IDENTIFIER,p,x /= p)<SUB>37</SUB>>", "243": "<(&lt;operator&gt;.equals,cnt % 2 == 1)<SUB>39</SUB>>", "245": "<(IDENTIFIER,cnt,cnt % 2)<SUB>39</SUB>>", "247": "<(LITERAL,1,cnt % 2 == 1)<SUB>39</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>39</SUB>>", "251": "<(IDENTIFIER,i,a[i] *= last)<SUB>39</SUB>>", "253": "<(LOCAL,int[][] mnleft: int[][])<SUB>41</SUB>>", "255": "<(IDENTIFIER,mnleft,int[][] mnleft = new int[n][k + 1])<SUB>41</SUB>>", "257": "<(IDENTIFIER,n,new int[n][k + 1])<SUB>41</SUB>>", "259": "<(IDENTIFIER,k,k + 1)<SUB>41</SUB>>", "261": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; k + 1); j++),for (int j = 0; Some(j &lt; k + 1); j++))<SUB>42</SUB>>", "263": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>42</SUB>>", "265": "<(LITERAL,0,int j = 0)<SUB>42</SUB>>", "267": "<(IDENTIFIER,j,j &lt; k + 1)<SUB>42</SUB>>", "269": "<(IDENTIFIER,k,k + 1)<SUB>42</SUB>>", "271": "<(&lt;operator&gt;.postIncrement,j++)<SUB>42</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "275": "<(&lt;operator&gt;.assignment,int l = n)<SUB>43</SUB>>", "277": "<(IDENTIFIER,n,int l = n)<SUB>43</SUB>>", "279": "<(&lt;operator&gt;.assignment,int now = 0)<SUB>44</SUB>>", "281": "<(LITERAL,0,int now = 0)<SUB>44</SUB>>", "283": "<(LOCAL,int i: int)<SUB>45</SUB>>", "285": "<(IDENTIFIER,i,int i = n - 1)<SUB>45</SUB>>", "287": "<(IDENTIFIER,n,n - 1)<SUB>45</SUB>>", "289": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>45</SUB>>", "291": "<(LITERAL,0,i &gt;= 0)<SUB>45</SUB>>", "293": "<(IDENTIFIER,i,i--)<SUB>45</SUB>>", "295": "<(CONTROL_STRUCTURE,while (l - 1 &gt;= 0 &amp;&amp; now + ((count[a[l - 1]] &gt; 0) ? 1 : 0) &lt;= j),while (l - 1 &gt;= 0 &amp;&amp; now + ((count[a[l - 1]] &gt; 0) ? 1 : 0) &lt;= j))<SUB>46</SUB>>", "297": "<(&lt;operator&gt;.greaterEqualsThan,l - 1 &gt;= 0)<SUB>46</SUB>>", "299": "<(IDENTIFIER,l,l - 1)<SUB>46</SUB>>", "301": "<(LITERAL,0,l - 1 &gt;= 0)<SUB>46</SUB>>", "303": "<(&lt;operator&gt;.addition,now + ((count[a[l - 1]] &gt; 0) ? 1 : 0))<SUB>46</SUB>>", "305": "<(&lt;operator&gt;.conditional,(count[a[l - 1]] &gt; 0) ? 1 : 0)<SUB>46</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,count[a[l - 1]])<SUB>46</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,a[l - 1])<SUB>46</SUB>>", "311": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>46</SUB>>", "313": "<(LITERAL,1,l - 1)<SUB>46</SUB>>", "315": "<(LITERAL,1,(count[a[l - 1]] &gt; 0) ? 1 : 0)<SUB>46</SUB>>", "317": "<(IDENTIFIER,j,now + ((count[a[l - 1]] &gt; 0) ? 1 : 0) &lt;= j)<SUB>46</SUB>>", "319": "<(&lt;operator&gt;.postDecrement,l--)<SUB>47</SUB>>", "321": "<(&lt;operator&gt;.assignmentPlus,now += (count[a[l]] &gt; 0) ? 1 : 0)<SUB>48</SUB>>", "323": "<(&lt;operator&gt;.conditional,(count[a[l]] &gt; 0) ? 1 : 0)<SUB>48</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,count[a[l]])<SUB>48</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,a[l])<SUB>48</SUB>>", "329": "<(IDENTIFIER,l,count[a[l]] &gt; 0)<SUB>48</SUB>>", "331": "<(LITERAL,1,(count[a[l]] &gt; 0) ? 1 : 0)<SUB>48</SUB>>", "333": "<(&lt;operator&gt;.postIncrement,count[a[l]]++)<SUB>49</SUB>>", "335": "<(IDENTIFIER,count,count[a[l]]++)<SUB>49</SUB>>", "337": "<(IDENTIFIER,a,count[a[l]]++)<SUB>49</SUB>>", "339": "<(&lt;operator&gt;.assignment,mnleft[i][j] = l)<SUB>51</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,mnleft[i])<SUB>51</SUB>>", "343": "<(IDENTIFIER,i,mnleft[i][j] = l)<SUB>51</SUB>>", "345": "<(IDENTIFIER,l,mnleft[i][j] = l)<SUB>51</SUB>>", "347": "<(&lt;operator&gt;.greaterThan,count[a[i]] &gt; 1)<SUB>52</SUB>>", "349": "<(IDENTIFIER,count,count[a[i]] &gt; 1)<SUB>52</SUB>>", "351": "<(IDENTIFIER,a,count[a[i]] &gt; 1)<SUB>52</SUB>>", "353": "<(LITERAL,1,count[a[i]] &gt; 1)<SUB>52</SUB>>", "355": "<(IDENTIFIER,now,now--)<SUB>52</SUB>>", "357": "<(&lt;operator&gt;.indexAccess,count[a[i]])<SUB>53</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>53</SUB>>", "361": "<(IDENTIFIER,i,count[a[i]]--)<SUB>53</SUB>>", "363": "<(&lt;operator&gt;.assignment,int[][] dp = new int[n + 1][k + 1])<SUB>56</SUB>>", "365": "<(&lt;operator&gt;.alloc,new int[n + 1][k + 1])>", "367": "<(IDENTIFIER,n,n + 1)<SUB>56</SUB>>", "369": "<(&lt;operator&gt;.addition,k + 1)<SUB>56</SUB>>", "371": "<(LITERAL,1,k + 1)<SUB>56</SUB>>", "373": "<(LOCAL,int i: int)<SUB>57</SUB>>", "375": "<(IDENTIFIER,i,int i = 0)<SUB>57</SUB>>", "377": "<(&lt;operator&gt;.lessThan,i &lt; n + 1)<SUB>57</SUB>>", "379": "<(&lt;operator&gt;.addition,n + 1)<SUB>57</SUB>>", "381": "<(LITERAL,1,n + 1)<SUB>57</SUB>>", "383": "<(IDENTIFIER,i,i++)<SUB>57</SUB>>", "385": "<(fill,fill(dp[i], (int) 1e9 + 1))<SUB>58</SUB>>", "387": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>58</SUB>>", "389": "<(IDENTIFIER,i,fill(dp[i], (int) 1e9 + 1))<SUB>58</SUB>>", "391": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>58</SUB>>", "393": "<(LITERAL,1e9,(int) 1e9)<SUB>58</SUB>>", "395": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k + 1); i++),for (int i = 0; Some(i &lt; k + 1); i++))<SUB>60</SUB>>", "397": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>60</SUB>>", "399": "<(LITERAL,0,int i = 0)<SUB>60</SUB>>", "401": "<(IDENTIFIER,i,i &lt; k + 1)<SUB>60</SUB>>", "403": "<(IDENTIFIER,k,k + 1)<SUB>60</SUB>>", "405": "<(&lt;operator&gt;.postIncrement,i++)<SUB>60</SUB>>", "407": "<(&lt;operator&gt;.assignment,dp[0][i] = 0)<SUB>60</SUB>>", "409": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>60</SUB>>", "411": "<(LITERAL,0,dp[0][i] = 0)<SUB>60</SUB>>", "413": "<(LITERAL,0,dp[0][i] = 0)<SUB>60</SUB>>", "415": "<(LOCAL,int i: int)<SUB>61</SUB>>", "417": "<(IDENTIFIER,i,int i = 1)<SUB>61</SUB>>", "419": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>61</SUB>>", "421": "<(IDENTIFIER,n,i &lt;= n)<SUB>61</SUB>>", "423": "<(IDENTIFIER,i,i++)<SUB>61</SUB>>", "425": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= k); j++),for (int j = 0; Some(j &lt;= k); j++))<SUB>62</SUB>>", "427": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>62</SUB>>", "429": "<(LITERAL,0,int j = 0)<SUB>62</SUB>>", "431": "<(IDENTIFIER,j,j &lt;= k)<SUB>62</SUB>>", "433": "<(&lt;operator&gt;.postIncrement,j++)<SUB>62</SUB>>", "435": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "437": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>63</SUB>>", "439": "<(LITERAL,0,j &gt; 0)<SUB>63</SUB>>", "441": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>63</SUB>>", "443": "<(IDENTIFIER,dp,dp[i][j] = dp[i][j - 1])<SUB>63</SUB>>", "445": "<(IDENTIFIER,j,dp[i][j] = dp[i][j - 1])<SUB>63</SUB>>", "447": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>63</SUB>>", "449": "<(IDENTIFIER,i,dp[i][j] = dp[i][j - 1])<SUB>63</SUB>>", "451": "<(IDENTIFIER,j,j - 1)<SUB>63</SUB>>", "453": "<(CONTROL_STRUCTURE,for (int lst = 0; Some(lst &lt;= j); lst++),for (int lst = 0; Some(lst &lt;= j); lst++))<SUB>64</SUB>>", "455": "<(&lt;operator&gt;.assignment,int lst = 0)<SUB>64</SUB>>", "457": "<(LITERAL,0,int lst = 0)<SUB>64</SUB>>", "459": "<(IDENTIFIER,lst,lst &lt;= j)<SUB>64</SUB>>", "461": "<(&lt;operator&gt;.postIncrement,lst++)<SUB>64</SUB>>", "463": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "465": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>65</SUB>>", "467": "<(IDENTIFIER,dp,dp[i][j] = Math.min(dp[i][j], dp[mnleft[i - 1][lst]][j - lst] + 1))<SUB>65</SUB>>", "469": "<(IDENTIFIER,j,dp[i][j] = Math.min(dp[i][j], dp[mnleft[i - 1][lst]][j - lst] + 1))<SUB>65</SUB>>", "471": "<(IDENTIFIER,Math,Math.min(dp[i][j], dp[mnleft[i - 1][lst]][j - lst] + 1))<SUB>65</SUB>>", "473": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>65</SUB>>", "475": "<(IDENTIFIER,i,Math.min(dp[i][j], dp[mnleft[i - 1][lst]][j - lst] + 1))<SUB>65</SUB>>", "477": "<(&lt;operator&gt;.addition,dp[mnleft[i - 1][lst]][j - lst] + 1)<SUB>65</SUB>>", "479": "<(&lt;operator&gt;.indexAccess,dp[mnleft[i - 1][lst]])<SUB>65</SUB>>", "481": "<(&lt;operator&gt;.indexAccess,mnleft[i - 1][lst])<SUB>65</SUB>>", "483": "<(IDENTIFIER,mnleft,dp[mnleft[i - 1][lst]][j - lst] + 1)<SUB>65</SUB>>", "485": "<(IDENTIFIER,i,i - 1)<SUB>65</SUB>>", "487": "<(IDENTIFIER,lst,dp[mnleft[i - 1][lst]][j - lst] + 1)<SUB>65</SUB>>", "489": "<(IDENTIFIER,j,j - lst)<SUB>65</SUB>>", "491": "<(LITERAL,1,dp[mnleft[i - 1][lst]][j - lst] + 1)<SUB>65</SUB>>", "493": "<(&lt;operator&gt;.assignment,int ans = (int) 1e9 + 1)<SUB>69</SUB>>", "495": "<(&lt;operator&gt;.addition,(int) 1e9 + 1)<SUB>69</SUB>>", "497": "<(TYPE_REF,int,int)<SUB>69</SUB>>", "499": "<(LITERAL,1,(int) 1e9 + 1)<SUB>69</SUB>>", "501": "<(&lt;operator&gt;.assignment,)<SUB>70</SUB>>", "503": "<(&lt;operator&gt;.indexAccess,dp[n])<SUB>70</SUB>>", "505": "<(IDENTIFIER,n,)<SUB>70</SUB>>", "507": "<(LOCAL,$idx0: int)<SUB>70</SUB>>", "509": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "511": "<(&lt;operator&gt;.lessThan,$idx0 &lt; $iterLocal1.length)<SUB>70</SUB>>", "513": "<(&lt;operator&gt;.fieldAccess,$iterLocal1.length)<SUB>70</SUB>>", "515": "<(FIELD_IDENTIFIER,length,length)<SUB>70</SUB>>", "517": "<(IDENTIFIER,$idx0,$idx0++)>", "519": "<(LOCAL,c: int)<SUB>70</SUB>>", "521": "<(IDENTIFIER,c,&lt;empty&gt;)>", "523": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "525": "<(&lt;operator&gt;.assignment,ans = Math.min(ans, c))<SUB>70</SUB>>", "527": "<(min,Math.min(ans, c))<SUB>70</SUB>>", "529": "<(IDENTIFIER,ans,Math.min(ans, c))<SUB>70</SUB>>", "531": "<(println,System.out.println(ans))<SUB>71</SUB>>", "533": "<(IDENTIFIER,System,System.out.println(ans))<SUB>71</SUB>>", "535": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>71</SUB>>", "537": "<(MODIFIER,STATIC)>"}}