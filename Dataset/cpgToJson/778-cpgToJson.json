{"edges": [["19", "21"], ["19", "105"], ["19", "106"], ["19", "107"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "38"], ["21", "41"], ["21", "48"], ["21", "54"], ["21", "61"], ["21", "62"], ["21", "75"], ["21", "76"], ["21", "81"], ["21", "100"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "57"], ["54", "60"], ["57", "58"], ["57", "59"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["64", "67"], ["64", "70"], ["64", "71"], ["64", "74"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["93", "96"], ["96", "97"], ["96", "98"], ["96", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "38"], ["38", "42"], ["48", "57"], ["54", "67"], ["62", "78"], ["76", "83"], ["100", "107"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["42", "45"], ["42", "51"], ["45", "42"], ["50", "48"], ["57", "54"], ["64", "62"], ["78", "76"], ["83", "86"], ["86", "96"], ["86", "103"], ["89", "86"], ["91", "89"], ["101", "100"], ["28", "26"], ["51", "50"], ["67", "71"], ["71", "64"], ["93", "91"], ["103", "101"], ["96", "93"], ["19", "24"], ["20", "107"], ["22", "107"], ["25", "107"], ["25", "107"], ["29", "107"], ["29", "107"], ["35", "107"], ["33", "107"], ["33", "107"], ["38", "107"], ["42", "107"], ["51", "107"], ["50", "107"], ["48", "107"], ["48", "107"], ["54", "107"], ["62", "107"], ["64", "107"], ["64", "107"], ["62", "107"], ["62", "107"], ["76", "107"], ["76", "107"], ["83", "107"], ["86", "107"], ["86", "107"], ["86", "107"], ["100", "107"], ["100", "107"], ["100", "107"], ["96", "107"], ["96", "107"], ["93", "107"], ["91", "107"], ["91", "107"], ["89", "107"], ["45", "107"], ["33", "107"], ["93", "107"], ["48", "107"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["19", "38"], ["50", "48"], ["64", "62"], ["64", "62"], ["64", "62"], ["78", "76"], ["78", "76"], ["22", "25"], ["19", "25"], ["19", "45"], ["19", "54"], ["57", "54"], ["57", "54"], ["19", "83"], ["93", "91"], ["93", "91"], ["93", "91"], ["76", "100"], ["91", "100"], ["19", "100"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["38", "42"], ["45", "42"], ["19", "42"], ["29", "42"], ["42", "45"], ["51", "50"], ["51", "50"], ["42", "57"], ["19", "57"], ["54", "64"], ["19", "64"], ["67", "64"], ["67", "64"], ["71", "64"], ["71", "64"], ["19", "78"], ["83", "86"], ["89", "86"], ["19", "86"], ["71", "86"], ["96", "89"], ["19", "89"], ["42", "51"], ["19", "51"], ["57", "67"], ["19", "67"], ["67", "71"], ["19", "71"], ["19", "93"], ["76", "93"], ["91", "93"], ["96", "93"], ["96", "93"], ["96", "93"], ["64", "96"], ["19", "96"], ["86", "96"], ["62", "96"], ["42", "42"], ["42", "45"], ["86", "96"], ["86", "91"], ["86", "89"], ["86", "93"], ["86", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,N = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,s = next())<SUB>4</SUB>>", "35": "<(next,next())<SUB>4</SUB>>", "37": "<(LOCAL,int size: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,size,int size = 1)<SUB>5</SUB>>", "41": "<(CONTROL_STRUCTURE,while (size &lt;= N),while (size &lt;= N))<SUB>6</SUB>>", "43": "<(IDENTIFIER,size,size &lt;= N)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignmentMultiplication,size *= 2)<SUB>6</SUB>>", "47": "<(LITERAL,2,size *= 2)<SUB>6</SUB>>", "49": "<(IDENTIFIER,val,val = new long[size * 2])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.multiplication,size * 2)<SUB>7</SUB>>", "53": "<(LITERAL,2,size * 2)<SUB>7</SUB>>", "55": "<(IDENTIFIER,this,setup(0, N - 1, 0))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>8</SUB>>", "59": "<(LITERAL,1,N - 1)<SUB>8</SUB>>", "61": "<(LOCAL,long toFind: long)<SUB>10</SUB>>", "63": "<(IDENTIFIER,toFind,long toFind = query(0, N - 1, 0, N - 1, 0))<SUB>10</SUB>>", "65": "<(IDENTIFIER,this,query(0, N - 1, 0, N - 1, 0))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>10</SUB>>", "69": "<(LITERAL,1,N - 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,N - 1)<SUB>10</SUB>>", "75": "<(LOCAL,long ans: long)<SUB>11</SUB>>", "77": "<(IDENTIFIER,ans,long ans = 1L &lt;&lt; 29)<SUB>11</SUB>>", "79": "<(LITERAL,1L,1L &lt;&lt; 29)<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i &lt; N)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,ans = min(ans, binarySearch(i, toFind)))<SUB>13</SUB>>", "93": "<(min,min(ans, binarySearch(i, toFind)))<SUB>13</SUB>>", "95": "<(IDENTIFIER,ans,min(ans, binarySearch(i, toFind)))<SUB>13</SUB>>", "97": "<(IDENTIFIER,this,binarySearch(i, toFind))<SUB>13</SUB>>", "99": "<(IDENTIFIER,toFind,binarySearch(i, toFind))<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>14</SUB>>", "103": "<(FIELD_IDENTIFIER,out,out)<SUB>14</SUB>>", "105": "<(MODIFIER,PUBLIC)>", "107": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}