{"edges": [["19", "21"], ["19", "463"], ["19", "464"], ["19", "465"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "52"], ["21", "79"], ["21", "80"], ["21", "84"], ["21", "109"], ["21", "110"], ["21", "115"], ["21", "177"], ["21", "178"], ["21", "183"], ["21", "184"], ["21", "188"], ["21", "189"], ["21", "193"], ["21", "198"], ["21", "203"], ["21", "354"], ["21", "363"], ["21", "364"], ["21", "369"], ["21", "370"], ["21", "375"], ["21", "380"], ["21", "459"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "71"], ["63", "64"], ["63", "69"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["69", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["101", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "133"], ["126", "136"], ["126", "138"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "169"], ["152", "153"], ["152", "161"], ["153", "154"], ["153", "155"], ["153", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["161", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["169", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["186", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["193", "194"], ["193", "195"], ["193", "196"], ["196", "197"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "205"], ["203", "208"], ["203", "211"], ["203", "213"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "215"], ["213", "220"], ["213", "221"], ["213", "224"], ["213", "225"], ["213", "228"], ["213", "238"], ["213", "240"], ["213", "241"], ["213", "244"], ["213", "254"], ["213", "344"], ["213", "349"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "236"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["236", "237"], ["238", "239"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["252", "253"], ["254", "255"], ["254", "262"], ["255", "256"], ["255", "261"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["262", "271"], ["262", "272"], ["262", "281"], ["262", "292"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["292", "299"], ["292", "302"], ["292", "304"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["302", "303"], ["304", "305"], ["305", "306"], ["305", "313"], ["306", "307"], ["306", "312"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["313", "314"], ["313", "315"], ["313", "322"], ["313", "333"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["324", "325"], ["324", "330"], ["325", "326"], ["325", "329"], ["326", "327"], ["326", "328"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "343"], ["344", "345"], ["344", "348"], ["345", "346"], ["345", "347"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["354", "355"], ["354", "358"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "360"], ["360", "361"], ["360", "362"], ["364", "365"], ["364", "366"], ["366", "367"], ["366", "368"], ["370", "371"], ["370", "372"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "384"], ["381", "382"], ["381", "383"], ["384", "385"], ["384", "386"], ["384", "391"], ["384", "392"], ["384", "395"], ["384", "405"], ["384", "406"], ["384", "409"], ["384", "419"], ["384", "420"], ["384", "440"], ["384", "451"], ["384", "454"], ["386", "387"], ["386", "388"], ["388", "389"], ["388", "390"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "403"], ["396", "397"], ["396", "402"], ["397", "398"], ["397", "399"], ["399", "400"], ["399", "401"], ["403", "404"], ["406", "407"], ["406", "408"], ["409", "410"], ["409", "417"], ["410", "411"], ["410", "416"], ["411", "412"], ["411", "413"], ["413", "414"], ["413", "415"], ["417", "418"], ["420", "421"], ["420", "422"], ["422", "423"], ["422", "426"], ["422", "431"], ["423", "424"], ["423", "425"], ["426", "427"], ["426", "428"], ["428", "429"], ["428", "430"], ["431", "432"], ["431", "437"], ["432", "433"], ["432", "436"], ["433", "434"], ["433", "435"], ["437", "438"], ["437", "439"], ["440", "441"], ["440", "444"], ["441", "442"], ["441", "443"], ["444", "445"], ["444", "450"], ["445", "446"], ["445", "449"], ["446", "447"], ["446", "448"], ["451", "452"], ["451", "453"], ["454", "455"], ["454", "456"], ["456", "457"], ["456", "458"], ["459", "460"], ["460", "461"], ["460", "462"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "39"], ["39", "44"], ["42", "49"], ["47", "54"], ["80", "86"], ["110", "117"], ["178", "186"], ["184", "191"], ["189", "196"], ["193", "199"], ["198", "205"], ["354", "366"], ["364", "372"], ["370", "378"], ["375", "381"], ["459", "465"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "42"], ["49", "47"], ["54", "57"], ["57", "65"], ["57", "82"], ["60", "57"], ["82", "80"], ["86", "89"], ["89", "96"], ["89", "112"], ["92", "89"], ["112", "110"], ["117", "120"], ["120", "130"], ["120", "180"], ["123", "120"], ["180", "178"], ["186", "184"], ["191", "189"], ["196", "193"], ["199", "198"], ["205", "208"], ["208", "219"], ["208", "357"], ["211", "208"], ["355", "360"], ["358", "354"], ["366", "364"], ["372", "370"], ["376", "375"], ["381", "388"], ["381", "462"], ["460", "459"], ["28", "26"], ["63", "73"], ["71", "60"], ["95", "92"], ["215", "221"], ["221", "225"], ["225", "232"], ["238", "241"], ["241", "248"], ["344", "350"], ["349", "211"], ["357", "355"], ["360", "358"], ["378", "376"], ["386", "392"], ["392", "399"], ["406", "413"], ["420", "443"], ["440", "451"], ["451", "456"], ["454", "381"], ["462", "460"], ["64", "69"], ["69", "63"], ["72", "77"], ["77", "71"], ["96", "103"], ["99", "95"], ["128", "133"], ["133", "141"], ["133", "123"], ["136", "133"], ["217", "215"], ["229", "236"], ["229", "238"], ["236", "232"], ["245", "252"], ["245", "258"], ["252", "248"], ["255", "268"], ["255", "345"], ["345", "344"], ["350", "349"], ["388", "386"], ["396", "403"], ["396", "406"], ["403", "399"], ["410", "417"], ["410", "423"], ["417", "413"], ["422", "420"], ["441", "446"], ["444", "440"], ["456", "454"], ["65", "64"], ["73", "72"], ["101", "99"], ["130", "128"], ["139", "136"], ["219", "217"], ["230", "229"], ["246", "245"], ["256", "255"], ["264", "275"], ["272", "282"], ["397", "396"], ["411", "410"], ["423", "428"], ["423", "433"], ["426", "422"], ["431", "422"], ["443", "441"], ["445", "444"], ["103", "106"], ["106", "101"], ["140", "147"], ["145", "139"], ["232", "230"], ["248", "246"], ["258", "256"], ["266", "264"], ["274", "272"], ["282", "286"], ["282", "296"], ["294", "299"], ["299", "309"], ["299", "345"], ["302", "299"], ["399", "397"], ["413", "411"], ["428", "426"], ["432", "437"], ["437", "431"], ["446", "445"], ["141", "140"], ["146", "155"], ["151", "145"], ["268", "266"], ["275", "278"], ["278", "274"], ["286", "289"], ["289", "296"], ["296", "294"], ["433", "432"], ["147", "146"], ["152", "171"], ["169", "151"], ["306", "319"], ["306", "302"], ["153", "163"], ["161", "152"], ["171", "174"], ["174", "169"], ["307", "306"], ["315", "326"], ["322", "334"], ["155", "158"], ["158", "153"], ["163", "166"], ["166", "161"], ["309", "307"], ["317", "315"], ["324", "322"], ["334", "338"], ["334", "302"], ["319", "317"], ["325", "330"], ["330", "324"], ["338", "341"], ["341", "302"], ["326", "325"], ["19", "24"], ["20", "465"], ["22", "465"], ["25", "465"], ["25", "465"], ["30", "465"], ["30", "465"], ["35", "465"], ["35", "465"], ["39", "465"], ["44", "465"], ["42", "465"], ["42", "465"], ["47", "465"], ["47", "465"], ["47", "465"], ["80", "465"], ["80", "465"], ["80", "465"], ["110", "465"], ["110", "465"], ["110", "465"], ["117", "465"], ["120", "465"], ["120", "465"], ["180", "465"], ["178", "465"], ["178", "465"], ["184", "465"], ["189", "465"], ["189", "465"], ["189", "465"], ["193", "465"], ["193", "465"], ["193", "465"], ["198", "465"], ["198", "465"], ["205", "465"], ["208", "465"], ["208", "465"], ["354", "465"], ["354", "465"], ["366", "465"], ["364", "465"], ["364", "465"], ["370", "465"], ["370", "465"], ["370", "465"], ["375", "465"], ["381", "465"], ["381", "465"], ["459", "465"], ["459", "465"], ["386", "465"], ["386", "465"], ["392", "465"], ["397", "465"], ["396", "465"], ["396", "465"], ["406", "465"], ["411", "465"], ["411", "465"], ["410", "465"], ["410", "465"], ["423", "465"], ["422", "465"], ["433", "465"], ["432", "465"], ["431", "465"], ["437", "465"], ["431", "465"], ["422", "465"], ["428", "465"], ["426", "465"], ["422", "465"], ["420", "465"], ["420", "465"], ["446", "465"], ["445", "465"], ["444", "465"], ["440", "465"], ["440", "465"], ["451", "465"], ["454", "465"], ["454", "465"], ["454", "465"], ["417", "465"], ["403", "465"], ["215", "465"], ["215", "465"], ["221", "465"], ["225", "465"], ["230", "465"], ["229", "465"], ["229", "465"], ["238", "465"], ["238", "465"], ["241", "465"], ["245", "465"], ["245", "465"], ["258", "465"], ["256", "465"], ["255", "465"], ["255", "465"], ["264", "465"], ["266", "465"], ["264", "465"], ["264", "465"], ["274", "465"], ["274", "465"], ["272", "465"], ["272", "465"], ["282", "465"], ["282", "465"], ["286", "465"], ["286", "465"], ["289", "465"], ["289", "465"], ["296", "465"], ["294", "465"], ["294", "465"], ["299", "465"], ["299", "465"], ["299", "465"], ["344", "465"], ["344", "465"], ["344", "465"], ["349", "465"], ["349", "465"], ["349", "465"], ["211", "465"], ["307", "465"], ["307", "465"], ["306", "465"], ["306", "465"], ["315", "465"], ["317", "465"], ["317", "465"], ["315", "465"], ["315", "465"], ["324", "465"], ["324", "465"], ["322", "465"], ["322", "465"], ["334", "465"], ["334", "465"], ["338", "465"], ["338", "465"], ["341", "465"], ["341", "465"], ["302", "465"], ["252", "465"], ["236", "465"], ["128", "465"], ["128", "465"], ["133", "465"], ["133", "465"], ["123", "465"], ["139", "465"], ["145", "465"], ["152", "465"], ["166", "465"], ["166", "465"], ["161", "465"], ["152", "465"], ["151", "465"], ["169", "465"], ["169", "465"], ["169", "465"], ["151", "465"], ["145", "465"], ["139", "465"], ["139", "465"], ["136", "465"], ["95", "465"], ["101", "465"], ["101", "465"], ["106", "465"], ["106", "465"], ["101", "465"], ["99", "465"], ["95", "465"], ["95", "465"], ["92", "465"], ["63", "465"], ["63", "465"], ["71", "465"], ["77", "465"], ["71", "465"], ["71", "465"], ["60", "465"], ["193", "465"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["44", "42"], ["49", "47"], ["49", "47"], ["82", "80"], ["112", "110"], ["180", "178"], ["180", "178"], ["186", "184"], ["191", "189"], ["19", "198"], ["366", "364"], ["366", "364"], ["189", "370"], ["22", "25"], ["19", "25"], ["37", "39"], ["19", "39"], ["19", "54"], ["19", "86"], ["19", "117"], ["19", "193"], ["184", "193"], ["196", "193"], ["19", "205"], ["193", "354"], ["354", "375"], ["19", "375"], ["375", "459"], ["440", "459"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["39", "44"], ["19", "44"], ["42", "49"], ["19", "49"], ["54", "57"], ["60", "57"], ["19", "57"], ["49", "57"], ["57", "60"], ["19", "60"], ["69", "63"], ["77", "71"], ["57", "82"], ["19", "82"], ["86", "89"], ["92", "89"], ["19", "89"], ["82", "89"], ["89", "92"], ["19", "92"], ["99", "95"], ["99", "95"], ["89", "112"], ["19", "112"], ["117", "120"], ["123", "120"], ["19", "120"], ["112", "120"], ["133", "120"], ["19", "123"], ["120", "123"], ["19", "180"], ["120", "180"], ["178", "186"], ["19", "186"], ["186", "191"], ["19", "191"], ["19", "196"], ["205", "208"], ["211", "208"], ["19", "208"], ["191", "208"], ["256", "211"], ["266", "211"], ["19", "211"], ["19", "221"], ["19", "225"], ["19", "241"], ["215", "344"], ["282", "344"], ["286", "344"], ["334", "344"], ["338", "344"], ["19", "344"], ["221", "349"], ["289", "349"], ["341", "349"], ["19", "349"], ["360", "366"], ["19", "366"], ["364", "381"], ["451", "381"], ["19", "381"], ["388", "386"], ["388", "386"], ["19", "392"], ["19", "406"], ["19", "420"], ["423", "420"], ["423", "420"], ["388", "451"], ["19", "451"], ["189", "454"], ["120", "128"], ["19", "128"], ["232", "238"], ["19", "238"], ["208", "360"], ["19", "360"], ["375", "440"], ["420", "440"], ["19", "440"], ["44", "69"], ["77", "69"], ["19", "69"], ["69", "77"], ["19", "77"], ["19", "99"], ["101", "99"], ["101", "99"], ["101", "99"], ["128", "133"], ["136", "133"], ["19", "133"], ["120", "133"], ["133", "136"], ["19", "136"], ["145", "139"], ["153", "139"], ["153", "139"], ["153", "139"], ["161", "139"], ["161", "139"], ["161", "139"], ["169", "139"], ["169", "139"], ["169", "139"], ["230", "229"], ["230", "229"], ["19", "229"], ["232", "236"], ["19", "236"], ["246", "245"], ["246", "245"], ["19", "245"], ["248", "252"], ["19", "252"], ["256", "255"], ["256", "255"], ["19", "255"], ["266", "264"], ["266", "264"], ["80", "272"], ["193", "272"], ["381", "388"], ["19", "388"], ["370", "388"], ["454", "388"], ["397", "396"], ["397", "396"], ["19", "396"], ["399", "403"], ["19", "403"], ["411", "410"], ["411", "410"], ["19", "410"], ["413", "417"], ["19", "417"], ["19", "422"], ["423", "422"], ["423", "422"], ["420", "444"], ["19", "444"], ["19", "101"], ["47", "101"], ["63", "101"], ["71", "101"], ["106", "101"], ["106", "101"], ["120", "130"], ["19", "130"], ["208", "230"], ["19", "230"], ["232", "230"], ["232", "230"], ["230", "246"], ["19", "246"], ["248", "246"], ["248", "246"], ["246", "256"], ["19", "256"], ["258", "256"], ["258", "256"], ["268", "294"], ["19", "294"], ["386", "397"], ["19", "397"], ["399", "397"], ["399", "397"], ["397", "411"], ["19", "411"], ["413", "411"], ["413", "411"], ["399", "423"], ["19", "423"], ["413", "423"], ["19", "426"], ["423", "426"], ["423", "431"], ["19", "431"], ["423", "431"], ["420", "445"], ["19", "445"], ["30", "106"], ["19", "106"], ["35", "106"], ["153", "145"], ["153", "145"], ["153", "145"], ["161", "145"], ["161", "145"], ["161", "145"], ["169", "145"], ["169", "145"], ["169", "145"], ["19", "232"], ["225", "232"], ["236", "232"], ["19", "248"], ["241", "248"], ["252", "248"], ["19", "258"], ["248", "258"], ["256", "266"], ["19", "266"], ["268", "266"], ["268", "266"], ["80", "274"], ["193", "274"], ["272", "282"], ["19", "282"], ["215", "282"], ["282", "286"], ["19", "286"], ["264", "289"], ["19", "289"], ["294", "299"], ["302", "299"], ["19", "299"], ["238", "299"], ["309", "302"], ["319", "302"], ["19", "302"], ["19", "399"], ["392", "399"], ["403", "399"], ["19", "413"], ["406", "413"], ["417", "413"], ["423", "428"], ["19", "428"], ["423", "432"], ["19", "432"], ["423", "437"], ["19", "437"], ["420", "446"], ["19", "446"], ["153", "151"], ["153", "151"], ["153", "151"], ["161", "151"], ["161", "151"], ["161", "151"], ["169", "151"], ["169", "151"], ["169", "151"], ["19", "268"], ["258", "268"], ["268", "296"], ["19", "296"], ["423", "433"], ["19", "433"], ["153", "152"], ["153", "152"], ["153", "152"], ["161", "152"], ["161", "152"], ["161", "152"], ["161", "169"], ["19", "169"], ["47", "169"], ["153", "169"], ["63", "169"], ["71", "169"], ["161", "169"], ["307", "306"], ["307", "306"], ["19", "306"], ["317", "315"], ["317", "315"], ["193", "322"], ["169", "153"], ["101", "153"], ["19", "153"], ["47", "153"], ["169", "153"], ["101", "153"], ["63", "153"], ["71", "153"], ["158", "153"], ["158", "153"], ["153", "161"], ["19", "161"], ["47", "161"], ["169", "161"], ["166", "161"], ["166", "161"], ["264", "307"], ["317", "307"], ["19", "307"], ["309", "307"], ["309", "307"], ["30", "158"], ["166", "158"], ["106", "158"], ["19", "158"], ["35", "158"], ["166", "158"], ["106", "158"], ["158", "166"], ["19", "166"], ["158", "166"], ["19", "309"], ["299", "309"], ["307", "317"], ["19", "317"], ["319", "317"], ["319", "317"], ["193", "324"], ["322", "334"], ["19", "334"], ["282", "334"], ["286", "334"], ["338", "334"], ["334", "338"], ["19", "338"], ["315", "341"], ["19", "341"], ["19", "319"], ["309", "319"], ["57", "60"], ["57", "72"], ["57", "65"], ["57", "71"], ["57", "73"], ["57", "77"], ["57", "64"], ["57", "57"], ["57", "69"], ["57", "63"], ["89", "95"], ["89", "96"], ["89", "103"], ["89", "92"], ["89", "101"], ["89", "89"], ["89", "99"], ["89", "106"], ["120", "120"], ["120", "128"], ["120", "123"], ["120", "133"], ["120", "130"], ["208", "230"], ["208", "215"], ["208", "256"], ["208", "208"], ["208", "238"], ["208", "349"], ["208", "258"], ["208", "217"], ["208", "229"], ["208", "241"], ["208", "225"], ["208", "232"], ["208", "245"], ["208", "255"], ["208", "246"], ["208", "221"], ["208", "345"], ["208", "211"], ["208", "350"], ["208", "248"], ["208", "219"], ["208", "344"], ["381", "392"], ["381", "396"], ["381", "456"], ["381", "446"], ["381", "388"], ["381", "441"], ["381", "397"], ["381", "410"], ["381", "413"], ["381", "386"], ["381", "411"], ["381", "420"], ["381", "443"], ["381", "440"], ["381", "381"], ["381", "423"], ["381", "422"], ["381", "451"], ["381", "399"], ["381", "406"], ["381", "454"], ["381", "444"], ["381", "445"], ["133", "136"], ["133", "146"], ["133", "161"], ["133", "163"], ["133", "152"], ["133", "174"], ["133", "158"], ["133", "141"], ["133", "140"], ["133", "147"], ["133", "133"], ["133", "145"], ["133", "169"], ["133", "151"], ["133", "153"], ["133", "155"], ["133", "139"], ["133", "171"], ["133", "166"], ["229", "230"], ["229", "236"], ["229", "229"], ["229", "232"], ["245", "245"], ["245", "246"], ["245", "252"], ["245", "248"], ["255", "272"], ["255", "264"], ["255", "268"], ["255", "296"], ["255", "274"], ["255", "278"], ["255", "282"], ["255", "275"], ["255", "299"], ["255", "294"], ["255", "266"], ["396", "403"], ["396", "396"], ["396", "397"], ["396", "399"], ["410", "410"], ["410", "413"], ["410", "411"], ["410", "417"], ["423", "428"], ["423", "426"], ["423", "437"], ["423", "433"], ["423", "432"], ["423", "431"], ["282", "289"], ["282", "286"], ["299", "302"], ["299", "306"], ["299", "307"], ["299", "309"], ["299", "299"], ["306", "334"], ["306", "326"], ["306", "322"], ["306", "317"], ["306", "324"], ["306", "315"], ["306", "319"], ["306", "325"], ["306", "330"], ["334", "338"], ["334", "341"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int bx: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,bx,int bx = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int by = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(nextLine,nextLine())<SUB>5</SUB>>", "41": "<(LOCAL,int n: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int[][] objects = new int[n][2])<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[n][2])>", "51": "<(LITERAL,2,new int[n][2])<SUB>7</SUB>>", "53": "<(LOCAL,int i: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,objects[i][0] = nextInt())<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,objects[i])<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,objects[i][0] = nextInt())<SUB>9</SUB>>", "69": "<(nextInt,nextInt())<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,objects[i][1] = nextInt())<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,objects[i])<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,objects[i][1] = nextInt())<SUB>10</SUB>>", "77": "<(nextInt,nextInt())<SUB>10</SUB>>", "79": "<(LOCAL,int[] cs: int[])<SUB>13</SUB>>", "81": "<(IDENTIFIER,cs,int[] cs = new int[n])<SUB>13</SUB>>", "83": "<(IDENTIFIER,n,new int[n])<SUB>13</SUB>>", "85": "<(LOCAL,int i: int)<SUB>14</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "91": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.assignment,cs[i] = 2 * time(objects[i], new int[] { bx, by }))<SUB>15</SUB>>", "97": "<(IDENTIFIER,cs,cs[i] = 2 * time(objects[i], new int[] { bx, by }))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.multiplication,2 * time(objects[i], new int[] { bx, by }))<SUB>15</SUB>>", "101": "<(time,time(objects[i], new int[] { bx, by }))<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,objects[i])<SUB>15</SUB>>", "105": "<(IDENTIFIER,i,time(objects[i], new int[] { bx, by }))<SUB>15</SUB>>", "107": "<(IDENTIFIER,bx,new int[] { bx, by })<SUB>15</SUB>>", "109": "<(LOCAL,int[][] cd: int[][])<SUB>18</SUB>>", "111": "<(IDENTIFIER,cd,int[][] cd = new int[n][n])<SUB>18</SUB>>", "113": "<(IDENTIFIER,n,new int[n][n])<SUB>18</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "127": "<(LOCAL,int j: int)<SUB>20</SUB>>", "129": "<(IDENTIFIER,j,int j = i + 1)<SUB>20</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>20</SUB>>", "135": "<(IDENTIFIER,n,j &lt; n)<SUB>20</SUB>>", "137": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.assignment,cd[j][i] = cd[i][j] = time(objects[i], new int[] { bx, by }) + time(objects[j], new int[] { bx, by }) + time(objects[i], objects[j]))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,cd[j])<SUB>21</SUB>>", "143": "<(IDENTIFIER,j,cd[j][i] = cd[i][j] = time(objects[i], new int[] { bx, by }) + time(objects[j], new int[] { bx, by }) + time(objects[i], objects[j]))<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.assignment,cd[i][j] = time(objects[i], new int[] { bx, by }) + time(objects[j], new int[] { bx, by }) + time(objects[i], objects[j]))<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,cd[i])<SUB>21</SUB>>", "149": "<(IDENTIFIER,i,cd[i][j] = time(objects[i], new int[] { bx, by }) + time(objects[j], new int[] { bx, by }) + time(objects[i], objects[j]))<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.addition,time(objects[i], new int[] { bx, by }) + time(objects[j], new int[] { bx, by }) + time(objects[i], objects[j]))<SUB>21</SUB>>", "153": "<(time,time(objects[i], new int[] { bx, by }))<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,objects[i])<SUB>21</SUB>>", "157": "<(IDENTIFIER,i,time(objects[i], new int[] { bx, by }))<SUB>21</SUB>>", "159": "<(IDENTIFIER,bx,new int[] { bx, by })<SUB>21</SUB>>", "161": "<(time,time(objects[j], new int[] { bx, by }))<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,objects[j])<SUB>21</SUB>>", "165": "<(IDENTIFIER,j,time(objects[j], new int[] { bx, by }))<SUB>21</SUB>>", "167": "<(IDENTIFIER,bx,new int[] { bx, by })<SUB>21</SUB>>", "169": "<(time,time(objects[i], objects[j]))<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,objects[i])<SUB>21</SUB>>", "173": "<(IDENTIFIER,i,time(objects[i], objects[j]))<SUB>21</SUB>>", "175": "<(IDENTIFIER,objects,time(objects[i], objects[j]))<SUB>21</SUB>>", "177": "<(LOCAL,int maxMask: int)<SUB>25</SUB>>", "179": "<(IDENTIFIER,maxMask,int maxMask = 1 &lt;&lt; n)<SUB>25</SUB>>", "181": "<(LITERAL,1,1 &lt;&lt; n)<SUB>25</SUB>>", "183": "<(LOCAL,int[] dp: int[])<SUB>26</SUB>>", "185": "<(IDENTIFIER,dp,int[] dp = new int[maxMask])<SUB>26</SUB>>", "187": "<(IDENTIFIER,maxMask,new int[maxMask])<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.assignment,int[] path = new int[maxMask])<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.alloc,new int[maxMask])>", "193": "<(fill,fill(dp, -1))<SUB>28</SUB>>", "195": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>28</SUB>>", "197": "<(LITERAL,1,-1)<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>29</SUB>>", "201": "<(LITERAL,0,dp[0] = 0)<SUB>29</SUB>>", "203": "<(CONTROL_STRUCTURE,for (int g = 1; Some(g &lt; maxMask); g++),for (int g = 1; Some(g &lt; maxMask); g++))<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.assignment,int g = 1)<SUB>31</SUB>>", "207": "<(LITERAL,1,int g = 1)<SUB>31</SUB>>", "209": "<(IDENTIFIER,g,g &lt; maxMask)<SUB>31</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,g++)<SUB>31</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>32</SUB>>", "219": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>32</SUB>>", "221": "<(&lt;operator&gt;.assignment,int minPath = 0)<SUB>33</SUB>>", "223": "<(LITERAL,0,int minPath = 0)<SUB>33</SUB>>", "225": "<(&lt;operator&gt;.assignment,int h = 31)<SUB>34</SUB>>", "227": "<(LITERAL,31,int h = 31)<SUB>34</SUB>>", "229": "<(&lt;operator&gt;.equals,(g &amp; (1 &lt;&lt; h)) == 0)<SUB>35</SUB>>", "231": "<(IDENTIFIER,g,g &amp; (1 &lt;&lt; h))<SUB>35</SUB>>", "233": "<(LITERAL,1,1 &lt;&lt; h)<SUB>35</SUB>>", "235": "<(LITERAL,0,(g &amp; (1 &lt;&lt; h)) == 0)<SUB>35</SUB>>", "237": "<(IDENTIFIER,h,h--)<SUB>36</SUB>>", "239": "<(IDENTIFIER,h,h++)<SUB>37</SUB>>", "241": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>38</SUB>>", "243": "<(LITERAL,0,int l = 0)<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.equals,(g &amp; (1 &lt;&lt; l)) == 0)<SUB>39</SUB>>", "247": "<(IDENTIFIER,g,g &amp; (1 &lt;&lt; l))<SUB>39</SUB>>", "249": "<(LITERAL,1,1 &lt;&lt; l)<SUB>39</SUB>>", "251": "<(LITERAL,0,(g &amp; (1 &lt;&lt; l)) == 0)<SUB>39</SUB>>", "253": "<(IDENTIFIER,l,l++)<SUB>40</SUB>>", "255": "<(&lt;operator&gt;.greaterThan,(g &amp; 1 &lt;&lt; l) &gt; 0)<SUB>41</SUB>>", "257": "<(IDENTIFIER,g,g &amp; 1 &lt;&lt; l)<SUB>41</SUB>>", "259": "<(LITERAL,1,1 &lt;&lt; l)<SUB>41</SUB>>", "261": "<(LITERAL,0,(g &amp; 1 &lt;&lt; l) &gt; 0)<SUB>41</SUB>>", "263": "<(LOCAL,int oneleft: int)<SUB>42</SUB>>", "265": "<(IDENTIFIER,oneleft,int oneleft = g ^ (1 &lt;&lt; l))<SUB>42</SUB>>", "267": "<(IDENTIFIER,g,g ^ (1 &lt;&lt; l))<SUB>42</SUB>>", "269": "<(LITERAL,1,1 &lt;&lt; l)<SUB>42</SUB>>", "271": "<(LOCAL,int t: int)<SUB>43</SUB>>", "273": "<(IDENTIFIER,t,int t = cs[l] + dp[oneleft])<SUB>43</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,cs[l])<SUB>43</SUB>>", "277": "<(IDENTIFIER,l,cs[l] + dp[oneleft])<SUB>43</SUB>>", "279": "<(IDENTIFIER,dp,cs[l] + dp[oneleft])<SUB>43</SUB>>", "281": "<(CONTROL_STRUCTURE,if (t &lt; min),if (t &lt; min))<SUB>44</SUB>>", "283": "<(IDENTIFIER,t,t &lt; min)<SUB>44</SUB>>", "285": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "287": "<(IDENTIFIER,min,min = t)<SUB>45</SUB>>", "289": "<(&lt;operator&gt;.assignment,minPath = oneleft)<SUB>46</SUB>>", "291": "<(IDENTIFIER,oneleft,minPath = oneleft)<SUB>46</SUB>>", "293": "<(LOCAL,int j: int)<SUB>48</SUB>>", "295": "<(IDENTIFIER,j,int j = l + 1)<SUB>48</SUB>>", "297": "<(IDENTIFIER,l,l + 1)<SUB>48</SUB>>", "299": "<(&lt;operator&gt;.lessThan,j &lt; h)<SUB>48</SUB>>", "301": "<(IDENTIFIER,h,j &lt; h)<SUB>48</SUB>>", "303": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "305": "<(CONTROL_STRUCTURE,if ((oneleft &amp; 1 &lt;&lt; j) &gt; 0),if ((oneleft &amp; 1 &lt;&lt; j) &gt; 0))<SUB>49</SUB>>", "307": "<(&lt;operator&gt;.and,oneleft &amp; 1 &lt;&lt; j)<SUB>49</SUB>>", "309": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>49</SUB>>", "311": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>49</SUB>>", "313": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "315": "<(&lt;operator&gt;.assignment,int twoleft = oneleft ^ (1 &lt;&lt; j))<SUB>50</SUB>>", "317": "<(&lt;operator&gt;.xor,oneleft ^ (1 &lt;&lt; j))<SUB>50</SUB>>", "319": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>50</SUB>>", "321": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>50</SUB>>", "323": "<(IDENTIFIER,t,t = cd[l][j] + dp[twoleft])<SUB>51</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,cd[l][j])<SUB>51</SUB>>", "327": "<(IDENTIFIER,cd,cd[l][j] + dp[twoleft])<SUB>51</SUB>>", "329": "<(IDENTIFIER,j,cd[l][j] + dp[twoleft])<SUB>51</SUB>>", "331": "<(IDENTIFIER,dp,cd[l][j] + dp[twoleft])<SUB>51</SUB>>", "333": "<(CONTROL_STRUCTURE,if (t &lt; min),if (t &lt; min))<SUB>52</SUB>>", "335": "<(IDENTIFIER,t,t &lt; min)<SUB>52</SUB>>", "337": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "339": "<(IDENTIFIER,min,min = t)<SUB>53</SUB>>", "341": "<(&lt;operator&gt;.assignment,minPath = twoleft)<SUB>54</SUB>>", "343": "<(IDENTIFIER,twoleft,minPath = twoleft)<SUB>54</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,dp[g])<SUB>59</SUB>>", "347": "<(IDENTIFIER,g,dp[g] = min)<SUB>59</SUB>>", "349": "<(&lt;operator&gt;.assignment,path[g] = minPath)<SUB>60</SUB>>", "351": "<(IDENTIFIER,path,path[g] = minPath)<SUB>60</SUB>>", "353": "<(IDENTIFIER,minPath,path[g] = minPath)<SUB>60</SUB>>", "355": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>63</SUB>>", "357": "<(FIELD_IDENTIFIER,out,out)<SUB>63</SUB>>", "359": "<(IDENTIFIER,dp,System.out.println(dp[maxMask - 1]))<SUB>63</SUB>>", "361": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>63</SUB>>", "363": "<(LOCAL,int previous: int)<SUB>65</SUB>>", "365": "<(IDENTIFIER,previous,int previous = maxMask - 1)<SUB>65</SUB>>", "367": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>65</SUB>>", "369": "<(LOCAL,int pathElt: int)<SUB>66</SUB>>", "371": "<(IDENTIFIER,pathElt,int pathElt = path[previous])<SUB>66</SUB>>", "373": "<(IDENTIFIER,path,int pathElt = path[previous])<SUB>66</SUB>>", "375": "<(print,System.out.print(&quot;0 &quot;))<SUB>67</SUB>>", "377": "<(IDENTIFIER,System,System.out.print(&quot;0 &quot;))<SUB>67</SUB>>", "379": "<(LITERAL,&quot;0 &quot;,System.out.print(&quot;0 &quot;))<SUB>67</SUB>>", "381": "<(&lt;operator&gt;.greaterThan,previous &gt; 0)<SUB>68</SUB>>", "383": "<(LITERAL,0,previous &gt; 0)<SUB>68</SUB>>", "385": "<(LOCAL,int bits: int)<SUB>69</SUB>>", "387": "<(IDENTIFIER,bits,int bits = previous - pathElt)<SUB>69</SUB>>", "389": "<(IDENTIFIER,previous,previous - pathElt)<SUB>69</SUB>>", "391": "<(LOCAL,int h: int)<SUB>70</SUB>>", "393": "<(IDENTIFIER,h,int h = 31)<SUB>70</SUB>>", "395": "<(CONTROL_STRUCTURE,while ((bits &amp; (1 &lt;&lt; h)) == 0),while ((bits &amp; (1 &lt;&lt; h)) == 0))<SUB>71</SUB>>", "397": "<(&lt;operator&gt;.and,bits &amp; (1 &lt;&lt; h))<SUB>71</SUB>>", "399": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; h)<SUB>71</SUB>>", "401": "<(IDENTIFIER,h,1 &lt;&lt; h)<SUB>71</SUB>>", "403": "<(&lt;operator&gt;.postDecrement,h--)<SUB>72</SUB>>", "405": "<(LOCAL,int l: int)<SUB>73</SUB>>", "407": "<(IDENTIFIER,l,int l = 0)<SUB>73</SUB>>", "409": "<(CONTROL_STRUCTURE,while ((bits &amp; (1 &lt;&lt; l)) == 0),while ((bits &amp; (1 &lt;&lt; l)) == 0))<SUB>74</SUB>>", "411": "<(&lt;operator&gt;.and,bits &amp; (1 &lt;&lt; l))<SUB>74</SUB>>", "413": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; l)<SUB>74</SUB>>", "415": "<(IDENTIFIER,l,1 &lt;&lt; l)<SUB>74</SUB>>", "417": "<(&lt;operator&gt;.postIncrement,l++)<SUB>75</SUB>>", "419": "<(LOCAL,String el: java.lang.String)<SUB>76</SUB>>", "421": "<(IDENTIFIER,el,String el = h == l ? &quot;&quot; + (h + 1) : (h + 1) + &quot; &quot; + (l + 1))<SUB>76</SUB>>", "423": "<(&lt;operator&gt;.equals,h == l)<SUB>76</SUB>>", "425": "<(IDENTIFIER,l,h == l)<SUB>76</SUB>>", "427": "<(LITERAL,&quot;&quot;,&quot;&quot; + (h + 1))<SUB>76</SUB>>", "429": "<(IDENTIFIER,h,h + 1)<SUB>76</SUB>>", "431": "<(&lt;operator&gt;.addition,(h + 1) + &quot; &quot; + (l + 1))<SUB>76</SUB>>", "433": "<(&lt;operator&gt;.addition,h + 1)<SUB>76</SUB>>", "435": "<(LITERAL,1,h + 1)<SUB>76</SUB>>", "437": "<(&lt;operator&gt;.addition,l + 1)<SUB>76</SUB>>", "439": "<(LITERAL,1,l + 1)<SUB>76</SUB>>", "441": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>77</SUB>>", "443": "<(FIELD_IDENTIFIER,out,out)<SUB>77</SUB>>", "445": "<(&lt;operator&gt;.addition,el + &quot; &quot; + 0)<SUB>77</SUB>>", "447": "<(IDENTIFIER,el,el + &quot; &quot;)<SUB>77</SUB>>", "449": "<(LITERAL,0,el + &quot; &quot; + 0)<SUB>77</SUB>>", "451": "<(&lt;operator&gt;.assignment,previous = pathElt)<SUB>78</SUB>>", "453": "<(IDENTIFIER,pathElt,previous = pathElt)<SUB>78</SUB>>", "455": "<(IDENTIFIER,pathElt,pathElt = path[pathElt])<SUB>79</SUB>>", "457": "<(IDENTIFIER,path,pathElt = path[pathElt])<SUB>79</SUB>>", "459": "<(println,System.out.println())<SUB>81</SUB>>", "461": "<(IDENTIFIER,System,System.out.println())<SUB>81</SUB>>", "463": "<(MODIFIER,PUBLIC)>", "465": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}