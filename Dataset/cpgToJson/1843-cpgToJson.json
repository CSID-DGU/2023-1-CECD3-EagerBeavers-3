{"edges": [["21", "23"], ["21", "139"], ["21", "140"], ["21", "141"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "52"], ["23", "53"], ["23", "59"], ["23", "81"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "132"], ["23", "137"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "76"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "121"], ["99", "100"], ["99", "109"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "49"], ["49", "56"], ["53", "61"], ["81", "85"], ["85", "90"], ["132", "137"], ["137", "141"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["55", "53"], ["61", "64"], ["64", "71"], ["64", "81"], ["67", "64"], ["90", "93"], ["93", "103"], ["93", "134"], ["96", "93"], ["134", "132"], ["30", "28"], ["37", "35"], ["56", "55"], ["70", "78"], ["76", "67"], ["121", "96"], ["71", "74"], ["74", "70"], ["78", "76"], ["100", "113"], ["100", "124"], ["123", "121"], ["101", "106"], ["106", "100"], ["110", "124"], ["124", "129"], ["127", "123"], ["103", "101"], ["111", "117"], ["116", "110"], ["129", "127"], ["113", "111"], ["117", "116"], ["21", "26"], ["22", "141"], ["24", "141"], ["27", "141"], ["27", "141"], ["31", "141"], ["34", "141"], ["34", "141"], ["39", "141"], ["44", "141"], ["46", "141"], ["44", "141"], ["44", "141"], ["49", "141"], ["55", "141"], ["53", "141"], ["53", "141"], ["61", "141"], ["64", "141"], ["81", "141"], ["81", "141"], ["85", "141"], ["90", "141"], ["90", "141"], ["93", "141"], ["93", "141"], ["134", "141"], ["134", "141"], ["132", "141"], ["132", "141"], ["137", "141"], ["137", "141"], ["100", "141"], ["110", "141"], ["110", "141"], ["123", "141"], ["123", "141"], ["121", "141"], ["121", "141"], ["96", "141"], ["74", "141"], ["70", "141"], ["70", "141"], ["76", "141"], ["76", "141"], ["67", "141"], ["81", "141"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["21", "49"], ["55", "53"], ["21", "85"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "61"], ["21", "81"], ["53", "81"], ["70", "81"], ["64", "90"], ["21", "90"], ["34", "132"], ["21", "132"], ["134", "132"], ["134", "132"], ["132", "137"], ["21", "137"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "55"], ["21", "55"], ["61", "64"], ["67", "64"], ["21", "64"], ["39", "64"], ["64", "67"], ["21", "67"], ["74", "70"], ["53", "76"], ["70", "76"], ["90", "93"], ["96", "93"], ["21", "93"], ["129", "96"], ["21", "96"], ["123", "121"], ["123", "121"], ["49", "134"], ["76", "134"], ["21", "134"], ["85", "134"], ["121", "134"], ["39", "56"], ["21", "56"], ["49", "76"], ["21", "76"], ["85", "121"], ["21", "121"], ["46", "74"], ["21", "74"], ["81", "100"], ["123", "100"], ["123", "100"], ["53", "100"], ["70", "100"], ["116", "110"], ["116", "110"], ["81", "123"], ["100", "123"], ["116", "123"], ["100", "123"], ["110", "123"], ["93", "103"], ["21", "103"], ["81", "116"], ["100", "116"], ["21", "116"], ["103", "129"], ["113", "129"], ["21", "129"], ["103", "113"], ["21", "113"], ["64", "64"], ["64", "67"], ["64", "74"], ["64", "76"], ["64", "71"], ["64", "70"], ["64", "78"], ["93", "96"], ["93", "103"], ["93", "121"], ["93", "123"], ["93", "106"], ["93", "129"], ["93", "93"], ["93", "101"], ["93", "100"], ["93", "127"], ["93", "124"], ["100", "113"], ["100", "116"], ["100", "110"], ["100", "117"], ["100", "111"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastIO(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastIO(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastIO(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastIO(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int m: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,long remove = 0)<SUB>8</SUB>>", "51": "<(LITERAL,0,long remove = 0)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[] heights = new int[n + 1])<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "57": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,heights[i])<SUB>13</SUB>>", "73": "<(IDENTIFIER,i,heights[i] = nextInt())<SUB>13</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>13</SUB>>", "77": "<(IDENTIFIER,remove,remove += heights[i])<SUB>14</SUB>>", "79": "<(IDENTIFIER,heights,remove += heights[i])<SUB>14</SUB>>", "81": "<(sort,sort(heights))<SUB>17</SUB>>", "83": "<(IDENTIFIER,heights,sort(heights))<SUB>17</SUB>>", "85": "<(&lt;operator&gt;.assignment,long keep = 0)<SUB>19</SUB>>", "87": "<(LITERAL,0,long keep = 0)<SUB>19</SUB>>", "89": "<(LOCAL,int i: int)<SUB>20</SUB>>", "91": "<(IDENTIFIER,i,int i = n)<SUB>20</SUB>>", "93": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>20</SUB>>", "95": "<(LITERAL,0,i &gt; 0)<SUB>20</SUB>>", "97": "<(IDENTIFIER,i,i--)<SUB>20</SUB>>", "99": "<(CONTROL_STRUCTURE,if (heights[i - 1] &gt;= heights[i]),if (heights[i - 1] &gt;= heights[i]))<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,heights[i - 1])<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>21</SUB>>", "105": "<(LITERAL,1,i - 1)<SUB>21</SUB>>", "107": "<(IDENTIFIER,heights,heights[i - 1] &gt;= heights[i])<SUB>21</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,heights[i - 1])<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>22</SUB>>", "115": "<(LITERAL,1,i - 1)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,heights[i])<SUB>22</SUB>>", "119": "<(IDENTIFIER,i,heights[i] - 1)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignmentPlus,keep += heights[i] - heights[i - 1])<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.subtraction,heights[i] - heights[i - 1])<SUB>24</SUB>>", "125": "<(IDENTIFIER,heights,heights[i] - heights[i - 1])<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,heights[i - 1])<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>24</SUB>>", "131": "<(LITERAL,1,i - 1)<SUB>24</SUB>>", "133": "<(IDENTIFIER,pw,println(remove - keep))<SUB>28</SUB>>", "135": "<(IDENTIFIER,remove,remove - keep)<SUB>28</SUB>>", "137": "<(close,close())<SUB>29</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}