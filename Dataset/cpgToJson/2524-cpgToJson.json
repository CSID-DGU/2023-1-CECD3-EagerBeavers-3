{"edges": [["40", "23"], ["40", "41"], ["40", "463"], ["40", "464"], ["40", "465"], ["41", "4"], ["41", "42"], ["41", "45"], ["41", "14"], ["41", "49"], ["41", "16"], ["41", "53"], ["41", "59"], ["41", "21"], ["41", "76"], ["41", "82"], ["41", "87"], ["41", "6"], ["41", "111"], ["41", "114"], ["41", "115"], ["41", "154"], ["41", "155"], ["41", "158"], ["41", "159"], ["41", "164"], ["41", "430"], ["41", "436"], ["41", "437"], ["41", "441"], ["41", "461"], ["42", "43"], ["42", "44"], ["45", "3"], ["45", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "5"], ["115", "19"], ["115", "116"], ["115", "119"], ["115", "122"], ["115", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "11"], ["125", "126"], ["125", "129"], ["125", "132"], ["125", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "8"], ["134", "135"], ["134", "146"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["147", "9"], ["150", "151"], ["150", "152"], ["150", "153"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "161"], ["161", "162"], ["162", "163"], ["164", "165"], ["164", "167"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "173"], ["167", "174"], ["167", "179"], ["167", "180"], ["167", "184"], ["167", "185"], ["167", "189"], ["167", "190"], ["167", "194"], ["167", "195"], ["167", "199"], ["167", "206"], ["167", "214"], ["167", "221"], ["167", "222"], ["167", "227"], ["167", "25"], ["167", "387"], ["167", "390"], ["167", "391"], ["167", "392"], ["167", "395"], ["167", "416"], ["169", "170"], ["169", "171"], ["171", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "182"], ["182", "183"], ["185", "186"], ["185", "187"], ["187", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["195", "196"], ["195", "197"], ["197", "198"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["212", "213"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["227", "234"], ["227", "237"], ["227", "239"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["239", "240"], ["239", "241"], ["239", "313"], ["239", "328"], ["239", "333"], ["239", "338"], ["239", "370"], ["241", "242"], ["241", "255"], ["241", "260"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "254"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["255", "256"], ["256", "257"], ["256", "258"], ["258", "259"], ["260", "261"], ["261", "262"], ["261", "263"], ["261", "268"], ["261", "269"], ["261", "274"], ["261", "310"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["278", "287"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "299"], ["287", "305"], ["288", "289"], ["288", "294"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["299", "300"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "304"], ["305", "306"], ["306", "307"], ["307", "308"], ["307", "309"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "324"], ["319", "325"], ["320", "321"], ["320", "322"], ["322", "323"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["338", "339"], ["338", "348"], ["339", "340"], ["339", "345"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "354"], ["348", "363"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["354", "355"], ["354", "358"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "360"], ["360", "361"], ["360", "362"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "369"], ["370", "371"], ["370", "383"], ["371", "372"], ["371", "376"], ["372", "373"], ["372", "374"], ["374", "375"], ["376", "377"], ["376", "380"], ["377", "378"], ["377", "379"], ["380", "381"], ["380", "382"], ["383", "384"], ["384", "385"], ["384", "386"], ["387", "388"], ["387", "389"], ["390", "24"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "412"], ["396", "397"], ["396", "407"], ["397", "398"], ["397", "401"], ["398", "399"], ["398", "400"], ["401", "402"], ["402", "403"], ["402", "404"], ["404", "405"], ["404", "406"], ["407", "408"], ["407", "409"], ["409", "410"], ["409", "411"], ["412", "413"], ["412", "414"], ["414", "415"], ["416", "417"], ["416", "426"], ["417", "418"], ["417", "421"], ["418", "419"], ["418", "420"], ["421", "422"], ["421", "424"], ["422", "423"], ["424", "425"], ["426", "427"], ["427", "428"], ["427", "429"], ["430", "431"], ["430", "434"], ["431", "432"], ["431", "433"], ["434", "435"], ["437", "438"], ["437", "439"], ["439", "440"], ["441", "442"], ["441", "444"], ["442", "443"], ["444", "445"], ["444", "446"], ["444", "450"], ["446", "447"], ["446", "448"], ["448", "449"], ["450", "451"], ["450", "454"], ["450", "455"], ["450", "458"], ["451", "452"], ["451", "453"], ["455", "456"], ["455", "457"], ["458", "459"], ["458", "460"], ["461", "462"], ["42", "48"], ["45", "51"], ["49", "56"], ["53", "61"], ["76", "83"], ["82", "89"], ["111", "114"], ["114", "116"], ["155", "162"], ["159", "165"], ["430", "439"], ["437", "442"], ["461", "465"], ["44", "42"], ["46", "45"], ["51", "49"], ["55", "53"], ["61", "64"], ["64", "71"], ["64", "79"], ["67", "64"], ["78", "76"], ["83", "82"], ["89", "92"], ["92", "99"], ["92", "113"], ["95", "92"], ["113", "111"], ["116", "119"], ["119", "126"], ["119", "155"], ["122", "119"], ["161", "159"], ["165", "171"], ["165", "433"], ["431", "434"], ["434", "430"], ["439", "437"], ["442", "448"], ["442", "461"], ["48", "46"], ["56", "55"], ["70", "67"], ["79", "78"], ["98", "95"], ["162", "161"], ["169", "176"], ["174", "182"], ["180", "187"], ["185", "192"], ["190", "197"], ["195", "202"], ["199", "209"], ["206", "217"], ["214", "224"], ["222", "231"], ["387", "390"], ["390", "392"], ["392", "398"], ["433", "431"], ["446", "453"], ["450", "442"], ["71", "74"], ["74", "70"], ["99", "105"], ["102", "98"], ["126", "129"], ["129", "138"], ["129", "122"], ["132", "129"], ["171", "169"], ["176", "174"], ["182", "180"], ["187", "185"], ["192", "190"], ["197", "195"], ["200", "199"], ["207", "212"], ["212", "206"], ["215", "214"], ["224", "222"], ["229", "234"], ["234", "244"], ["234", "389"], ["237", "234"], ["389", "387"], ["412", "398"], ["412", "418"], ["417", "165"], ["417", "427"], ["448", "446"], ["451", "457"], ["455", "460"], ["458", "450"], ["103", "108"], ["108", "102"], ["135", "9"], ["146", "132"], ["202", "200"], ["209", "207"], ["217", "215"], ["231", "229"], ["313", "329"], ["328", "334"], ["333", "342"], ["407", "414"], ["414", "412"], ["418", "417"], ["418", "422"], ["421", "417"], ["427", "165"], ["453", "451"], ["457", "455"], ["460", "458"], ["105", "103"], ["137", "135"], ["147", "150"], ["150", "146"], ["242", "258"], ["242", "265"], ["314", "322"], ["317", "313"], ["329", "328"], ["334", "333"], ["339", "350"], ["339", "374"], ["371", "384"], ["371", "237"], ["398", "404"], ["398", "409"], ["409", "407"], ["422", "424"], ["424", "421"], ["138", "143"], ["141", "137"], ["9", "147"], ["243", "251"], ["248", "242"], ["256", "314"], ["319", "317"], ["340", "345"], ["345", "339"], ["349", "355"], ["354", "364"], ["363", "374"], ["372", "371"], ["372", "377"], ["376", "371"], ["384", "237"], ["402", "409"], ["143", "141"], ["244", "247"], ["247", "243"], ["249", "254"], ["254", "248"], ["258", "256"], ["263", "271"], ["269", "275"], ["310", "314"], ["320", "319"], ["320", "325"], ["325", "319"], ["342", "340"], ["350", "349"], ["355", "360"], ["358", "354"], ["364", "367"], ["367", "363"], ["374", "372"], ["377", "380"], ["380", "376"], ["404", "402"], ["251", "249"], ["265", "263"], ["271", "269"], ["275", "283"], ["275", "310"], ["322", "320"], ["360", "358"], ["280", "290"], ["282", "280"], ["288", "302"], ["288", "307"], ["283", "282"], ["289", "295"], ["294", "288"], ["300", "275"], ["290", "293"], ["293", "289"], ["295", "298"], ["298", "294"], ["302", "300"], ["307", "275"], ["40", "44"], ["23", "465"], ["42", "465"], ["45", "465"], ["45", "465"], ["49", "465"], ["49", "465"], ["53", "465"], ["53", "465"], ["76", "465"], ["78", "465"], ["76", "465"], ["76", "465"], ["82", "465"], ["82", "465"], ["111", "465"], ["114", "465"], ["116", "465"], ["119", "465"], ["119", "465"], ["119", "465"], ["155", "465"], ["162", "465"], ["161", "465"], ["165", "465"], ["430", "465"], ["430", "465"], ["430", "465"], ["439", "465"], ["437", "465"], ["442", "465"], ["442", "465"], ["461", "465"], ["461", "465"], ["446", "465"], ["450", "465"], ["450", "465"], ["450", "465"], ["450", "465"], ["176", "465"], ["176", "465"], ["174", "465"], ["174", "465"], ["182", "465"], ["180", "465"], ["185", "465"], ["185", "465"], ["190", "465"], ["190", "465"], ["190", "465"], ["195", "465"], ["195", "465"], ["195", "465"], ["199", "465"], ["199", "465"], ["206", "465"], ["206", "465"], ["214", "465"], ["214", "465"], ["222", "465"], ["222", "465"], ["231", "465"], ["229", "465"], ["229", "465"], ["234", "465"], ["234", "465"], ["387", "465"], ["390", "465"], ["390", "465"], ["392", "465"], ["392", "465"], ["402", "465"], ["404", "465"], ["402", "465"], ["402", "465"], ["407", "465"], ["407", "465"], ["412", "465"], ["412", "465"], ["412", "465"], ["417", "465"], ["422", "465"], ["417", "465"], ["417", "465"], ["427", "465"], ["427", "465"], ["249", "465"], ["251", "465"], ["249", "465"], ["242", "465"], ["242", "465"], ["263", "465"], ["271", "465"], ["269", "465"], ["269", "465"], ["275", "465"], ["275", "465"], ["310", "465"], ["310", "465"], ["282", "465"], ["280", "465"], ["280", "465"], ["295", "465"], ["288", "465"], ["307", "465"], ["307", "465"], ["302", "465"], ["300", "465"], ["300", "465"], ["256", "465"], ["319", "465"], ["319", "465"], ["317", "465"], ["313", "465"], ["313", "465"], ["328", "465"], ["328", "465"], ["328", "465"], ["333", "465"], ["333", "465"], ["339", "465"], ["339", "465"], ["339", "465"], ["349", "465"], ["349", "465"], ["354", "465"], ["354", "465"], ["354", "465"], ["363", "465"], ["363", "465"], ["363", "465"], ["371", "465"], ["376", "465"], ["376", "465"], ["371", "465"], ["371", "465"], ["384", "465"], ["237", "465"], ["126", "465"], ["129", "465"], ["129", "465"], ["122", "465"], ["137", "465"], ["137", "465"], ["135", "465"], ["135", "465"], ["147", "465"], ["146", "465"], ["146", "465"], ["146", "465"], ["132", "465"], ["98", "465"], ["102", "465"], ["102", "465"], ["98", "465"], ["98", "465"], ["95", "465"], ["70", "465"], ["70", "465"], ["70", "465"], ["67", "465"], ["150", "465"], ["40", "23"], ["40", "42"], ["51", "49"], ["55", "53"], ["78", "76"], ["40", "82"], ["40", "111"], ["40", "155"], ["161", "159"], ["439", "437"], ["42", "45"], ["40", "45"], ["40", "61"], ["40", "89"], ["111", "114"], ["40", "114"], ["40", "116"], ["434", "430"], ["51", "461"], ["74", "461"], ["40", "461"], ["45", "51"], ["40", "51"], ["49", "55"], ["40", "55"], ["61", "64"], ["67", "64"], ["40", "64"], ["49", "64"], ["64", "67"], ["40", "67"], ["74", "70"], ["64", "78"], ["40", "78"], ["89", "92"], ["95", "92"], ["40", "92"], ["64", "92"], ["105", "95"], ["40", "95"], ["76", "98"], ["53", "98"], ["70", "98"], ["116", "119"], ["122", "119"], ["40", "119"], ["92", "119"], ["129", "119"], ["150", "122"], ["40", "122"], ["119", "122"], ["162", "161"], ["159", "165"], ["171", "165"], ["40", "165"], ["171", "169"], ["176", "174"], ["176", "174"], ["182", "180"], ["187", "185"], ["192", "190"], ["197", "195"], ["40", "199"], ["212", "206"], ["40", "214"], ["224", "222"], ["224", "222"], ["40", "387"], ["222", "392"], ["372", "392"], ["384", "392"], ["40", "392"], ["155", "434"], ["418", "434"], ["424", "434"], ["427", "434"], ["40", "434"], ["434", "439"], ["40", "439"], ["437", "442"], ["448", "442"], ["40", "442"], ["448", "446"], ["49", "56"], ["40", "56"], ["64", "79"], ["40", "79"], ["119", "126"], ["40", "126"], ["114", "162"], ["147", "162"], ["40", "162"], ["231", "229"], ["231", "229"], ["387", "390"], ["40", "390"], ["430", "450"], ["40", "450"], ["446", "450"], ["51", "74"], ["40", "74"], ["76", "102"], ["53", "102"], ["70", "102"], ["126", "129"], ["132", "129"], ["40", "129"], ["119", "129"], ["150", "132"], ["40", "132"], ["137", "135"], ["137", "135"], ["165", "171"], ["40", "171"], ["162", "176"], ["40", "176"], ["169", "176"], ["174", "182"], ["40", "182"], ["180", "187"], ["40", "187"], ["187", "192"], ["40", "192"], ["192", "197"], ["40", "197"], ["40", "212"], ["217", "224"], ["40", "224"], ["229", "234"], ["237", "234"], ["40", "234"], ["40", "237"], ["244", "237"], ["290", "237"], ["40", "313"], ["185", "313"], ["320", "328"], ["40", "328"], ["40", "333"], ["190", "407"], ["407", "412"], ["40", "412"], ["414", "412"], ["418", "417"], ["418", "417"], ["421", "417"], ["390", "427"], ["402", "427"], ["422", "427"], ["40", "427"], ["442", "448"], ["40", "448"], ["147", "146"], ["147", "146"], ["147", "146"], ["150", "146"], ["150", "146"], ["150", "146"], ["197", "202"], ["40", "202"], ["202", "209"], ["40", "209"], ["209", "217"], ["40", "217"], ["224", "231"], ["40", "231"], ["40", "414"], ["155", "418"], ["424", "418"], ["427", "418"], ["40", "418"], ["422", "421"], ["424", "421"], ["92", "105"], ["40", "105"], ["76", "137"], ["114", "147"], ["40", "147"], ["135", "147"], ["40", "150"], ["143", "150"], ["129", "150"], ["258", "256"], ["40", "317"], ["185", "317"], ["185", "339"], ["313", "339"], ["40", "349"], ["185", "354"], ["339", "354"], ["40", "363"], ["244", "363"], ["290", "363"], ["372", "371"], ["372", "371"], ["376", "371"], ["376", "371"], ["40", "384"], ["244", "384"], ["290", "384"], ["390", "422"], ["402", "422"], ["40", "422"], ["418", "424"], ["40", "424"], ["244", "263"], ["40", "263"], ["271", "269"], ["271", "269"], ["275", "310"], ["40", "310"], ["40", "319"], ["185", "319"], ["222", "372"], ["384", "372"], ["40", "372"], ["374", "372"], ["185", "376"], ["339", "376"], ["354", "376"], ["390", "402"], ["40", "402"], ["404", "402"], ["404", "402"], ["150", "143"], ["40", "143"], ["119", "143"], ["182", "244"], ["249", "244"], ["295", "244"], ["40", "244"], ["234", "244"], ["244", "249"], ["40", "249"], ["251", "249"], ["251", "249"], ["40", "258"], ["310", "320"], ["256", "320"], ["40", "320"], ["322", "320"], ["244", "342"], ["290", "342"], ["40", "342"], ["40", "367"], ["244", "367"], ["290", "367"], ["40", "374"], ["182", "404"], ["249", "404"], ["295", "404"], ["40", "404"], ["392", "404"], ["412", "404"], ["231", "251"], ["271", "251"], ["40", "251"], ["244", "265"], ["40", "265"], ["251", "271"], ["40", "271"], ["263", "275"], ["300", "275"], ["40", "275"], ["269", "275"], ["307", "275"], ["282", "280"], ["282", "280"], ["40", "322"], ["40", "360"], ["244", "360"], ["290", "360"], ["275", "282"], ["40", "282"], ["275", "282"], ["295", "300"], ["40", "300"], ["275", "283"], ["40", "283"], ["275", "283"], ["295", "307"], ["40", "307"], ["249", "290"], ["295", "290"], ["40", "290"], ["244", "290"], ["290", "295"], ["40", "295"], ["280", "295"], ["295", "302"], ["40", "302"], ["64", "74"], ["64", "70"], ["64", "71"], ["64", "64"], ["64", "67"], ["92", "102"], ["92", "95"], ["92", "108"], ["92", "98"], ["92", "103"], ["92", "92"], ["92", "99"], ["92", "105"], ["119", "129"], ["119", "122"], ["119", "119"], ["119", "126"], ["165", "214"], ["165", "192"], ["165", "215"], ["165", "209"], ["165", "418"], ["165", "392"], ["165", "206"], ["165", "195"], ["165", "190"], ["165", "174"], ["165", "182"], ["165", "412"], ["165", "224"], ["165", "389"], ["165", "202"], ["165", "390"], ["165", "180"], ["165", "414"], ["165", "200"], ["165", "217"], ["165", "176"], ["165", "199"], ["165", "229"], ["165", "222"], ["165", "169"], ["165", "185"], ["165", "197"], ["165", "417"], ["165", "187"], ["165", "231"], ["165", "207"], ["165", "212"], ["165", "387"], ["165", "409"], ["165", "171"], ["165", "398"], ["165", "234"], ["165", "165"], ["165", "407"], ["442", "460"], ["442", "450"], ["442", "446"], ["442", "442"], ["442", "448"], ["442", "457"], ["442", "455"], ["442", "453"], ["442", "458"], ["442", "451"], ["129", "146"], ["129", "150"], ["129", "129"], ["129", "138"], ["129", "141"], ["129", "147"], ["129", "135"], ["129", "9"], ["129", "132"], ["129", "137"], ["129", "143"], ["234", "334"], ["234", "243"], ["234", "322"], ["234", "317"], ["234", "247"], ["234", "242"], ["234", "340"], ["234", "249"], ["234", "374"], ["234", "329"], ["234", "237"], ["234", "328"], ["234", "254"], ["234", "372"], ["234", "342"], ["234", "319"], ["234", "320"], ["234", "244"], ["234", "339"], ["234", "314"], ["234", "333"], ["234", "371"], ["234", "251"], ["234", "345"], ["234", "234"], ["234", "313"], ["234", "248"], ["412", "412"], ["412", "414"], ["412", "409"], ["412", "398"], ["412", "407"], ["417", "427"], ["418", "424"], ["418", "421"], ["418", "422"], ["242", "256"], ["242", "258"], ["242", "310"], ["242", "269"], ["242", "275"], ["242", "265"], ["242", "263"], ["242", "271"], ["339", "358"], ["339", "349"], ["339", "355"], ["339", "364"], ["339", "360"], ["339", "367"], ["339", "354"], ["339", "350"], ["339", "363"], ["371", "384"], ["398", "404"], ["398", "402"], ["372", "376"], ["372", "380"], ["372", "377"], ["320", "325"], ["275", "290"], ["275", "283"], ["275", "298"], ["275", "288"], ["275", "282"], ["275", "275"], ["275", "289"], ["275", "293"], ["275", "280"], ["275", "295"], ["275", "294"], ["288", "300"], ["288", "302"], ["288", "307"]], "features": {"40": "<(METHOD,main)<SUB>1</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "42": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "44": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "47": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "14": "<(LOCAL,int n: int)<SUB>4</SUB>>", "50": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "52": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[] a = new int[n + 1])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "57": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,i &lt;= n)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "73": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>7</SUB>>", "75": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "76": "<(&lt;operator&gt;.assignment,int[] prefixSum = new int[n + 1])<SUB>10</SUB>>", "78": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "80": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "82": "<(&lt;operator&gt;.assignment,prefixSum[0] = 0)<SUB>11</SUB>>", "84": "<(IDENTIFIER,prefixSum,prefixSum[0] = 0)<SUB>11</SUB>>", "86": "<(LITERAL,0,prefixSum[0] = 0)<SUB>11</SUB>>", "88": "<(LOCAL,int i: int)<SUB>12</SUB>>", "90": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "92": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>12</SUB>>", "94": "<(IDENTIFIER,n,i &lt;= n)<SUB>12</SUB>>", "96": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "98": "<(&lt;operator&gt;.assignment,prefixSum[i] = prefixSum[i - 1] + a[i])<SUB>13</SUB>>", "100": "<(IDENTIFIER,prefixSum,prefixSum[i] = prefixSum[i - 1] + a[i])<SUB>13</SUB>>", "102": "<(&lt;operator&gt;.addition,prefixSum[i - 1] + a[i])<SUB>13</SUB>>", "104": "<(IDENTIFIER,prefixSum,prefixSum[i - 1] + a[i])<SUB>13</SUB>>", "106": "<(IDENTIFIER,i,i - 1)<SUB>13</SUB>>", "108": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>13</SUB>>", "110": "<(IDENTIFIER,i,prefixSum[i - 1] + a[i])<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,ANY sumToSegments = new HashMap&lt;&gt;())<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>16</SUB>>", "5": "<(IDENTIFIER,sumToSegments,new HashMap&lt;&gt;())<SUB>16</SUB>>", "19": "<(LOCAL,int i: int)<SUB>17</SUB>>", "117": "<(IDENTIFIER,i,int i = 1)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>17</SUB>>", "121": "<(IDENTIFIER,n,i &lt;= n)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt;= n); j++),for (int j = i; Some(j &lt;= n); j++))<SUB>18</SUB>>", "126": "<(&lt;operator&gt;.assignment,int j = i)<SUB>18</SUB>>", "128": "<(IDENTIFIER,i,int j = i)<SUB>18</SUB>>", "130": "<(IDENTIFIER,j,j &lt;= n)<SUB>18</SUB>>", "132": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "134": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,int sum = prefixSum[j] - prefixSum[i - 1])<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.subtraction,prefixSum[j] - prefixSum[i - 1])<SUB>19</SUB>>", "139": "<(IDENTIFIER,prefixSum,prefixSum[j] - prefixSum[i - 1])<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,prefixSum[i - 1])<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>19</SUB>>", "145": "<(LITERAL,1,i - 1)<SUB>19</SUB>>", "147": "<(computeIfAbsent,computeIfAbsent(sum, &lt;lambda&gt;))<SUB>20</SUB>>", "149": "<(IDENTIFIER,sum,computeIfAbsent(sum, &lt;lambda&gt;))<SUB>21</SUB>>", "150": "<(make,make(i, j))<SUB>22</SUB>>", "152": "<(IDENTIFIER,i,make(i, j))<SUB>22</SUB>>", "154": "<(LOCAL,List&lt;Segment&gt; bestSegments: ANY)<SUB>26</SUB>>", "156": "<(IDENTIFIER,bestSegments,ANY bestSegments = null)<SUB>26</SUB>>", "158": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>27</SUB>>", "160": "<(IDENTIFIER,$iterLocal0,)<SUB>27</SUB>>", "162": "<(keySet,keySet())<SUB>27</SUB>>", "164": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>27</SUB>>", "166": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "168": "<(LOCAL,sum: int)<SUB>27</SUB>>", "170": "<(IDENTIFIER,sum,&lt;empty&gt;)>", "172": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "174": "<(&lt;operator&gt;.assignment,ANY segments = get(sum))<SUB>28</SUB>>", "176": "<(get,get(sum))<SUB>28</SUB>>", "178": "<(IDENTIFIER,sum,get(sum))<SUB>28</SUB>>", "180": "<(&lt;operator&gt;.assignment,int size = size())<SUB>29</SUB>>", "182": "<(size,size())<SUB>29</SUB>>", "184": "<(LOCAL,int[] f: int[])<SUB>31</SUB>>", "186": "<(IDENTIFIER,f,int[] f = new int[size])<SUB>31</SUB>>", "188": "<(IDENTIFIER,size,new int[size])<SUB>31</SUB>>", "190": "<(&lt;operator&gt;.assignment,int[] next = new int[size])<SUB>32</SUB>>", "192": "<(&lt;operator&gt;.alloc,new int[size])>", "194": "<(LOCAL,boolean[] take: boolean[])<SUB>33</SUB>>", "196": "<(IDENTIFIER,take,boolean[] take = new boolean[size])<SUB>33</SUB>>", "198": "<(IDENTIFIER,size,new boolean[size])<SUB>33</SUB>>", "200": "<(&lt;operator&gt;.indexAccess,f[size - 1])<SUB>35</SUB>>", "202": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>35</SUB>>", "204": "<(LITERAL,1,size - 1)<SUB>35</SUB>>", "206": "<(&lt;operator&gt;.assignment,next[size - 1] = -1)<SUB>36</SUB>>", "208": "<(IDENTIFIER,next,next[size - 1] = -1)<SUB>36</SUB>>", "210": "<(IDENTIFIER,size,size - 1)<SUB>36</SUB>>", "212": "<(&lt;operator&gt;.minus,-1)<SUB>36</SUB>>", "214": "<(&lt;operator&gt;.assignment,take[size - 1] = true)<SUB>37</SUB>>", "216": "<(IDENTIFIER,take,take[size - 1] = true)<SUB>37</SUB>>", "218": "<(IDENTIFIER,size,size - 1)<SUB>37</SUB>>", "220": "<(LITERAL,true,take[size - 1] = true)<SUB>37</SUB>>", "222": "<(&lt;operator&gt;.assignment,int bestStartIndex = size - 1)<SUB>38</SUB>>", "224": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>38</SUB>>", "226": "<(LITERAL,1,size - 1)<SUB>38</SUB>>", "228": "<(LOCAL,int i: int)<SUB>40</SUB>>", "230": "<(IDENTIFIER,i,int i = size - 2)<SUB>40</SUB>>", "232": "<(IDENTIFIER,size,size - 2)<SUB>40</SUB>>", "234": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>40</SUB>>", "236": "<(LITERAL,0,i &gt;= 0)<SUB>40</SUB>>", "238": "<(IDENTIFIER,i,i--)<SUB>40</SUB>>", "240": "<(LOCAL,int nextIndex: int)<SUB>41</SUB>>", "242": "<(&lt;operator&gt;.greaterEqualsThan,segments.get(i).q &gt;= segments.get(size - 1).p)<SUB>43</SUB>>", "244": "<(get,get(i))<SUB>43</SUB>>", "246": "<(IDENTIFIER,i,get(i))<SUB>43</SUB>>", "248": "<(&lt;operator&gt;.fieldAccess,segments.get(size - 1).p)<SUB>43</SUB>>", "250": "<(IDENTIFIER,segments,get(size - 1))<SUB>43</SUB>>", "252": "<(IDENTIFIER,size,size - 1)<SUB>43</SUB>>", "254": "<(FIELD_IDENTIFIER,p,p)<SUB>43</SUB>>", "256": "<(&lt;operator&gt;.assignment,nextIndex = -1)<SUB>44</SUB>>", "258": "<(&lt;operator&gt;.minus,-1)<SUB>44</SUB>>", "260": "<(CONTROL_STRUCTURE,else,else)<SUB>45</SUB>>", "262": "<(LOCAL,int L: int)<SUB>46</SUB>>", "264": "<(IDENTIFIER,L,int L = i + 1)<SUB>46</SUB>>", "266": "<(IDENTIFIER,i,i + 1)<SUB>46</SUB>>", "268": "<(LOCAL,int R: int)<SUB>47</SUB>>", "270": "<(IDENTIFIER,R,int R = size - 1)<SUB>47</SUB>>", "272": "<(IDENTIFIER,size,size - 1)<SUB>47</SUB>>", "274": "<(CONTROL_STRUCTURE,while (L &lt; R),while (L &lt; R))<SUB>48</SUB>>", "276": "<(IDENTIFIER,L,L &lt; R)<SUB>48</SUB>>", "278": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "280": "<(&lt;operator&gt;.assignment,int M = (L + R) / 2)<SUB>49</SUB>>", "282": "<(&lt;operator&gt;.division,(L + R) / 2)<SUB>49</SUB>>", "284": "<(IDENTIFIER,L,L + R)<SUB>49</SUB>>", "286": "<(LITERAL,2,(L + R) / 2)<SUB>49</SUB>>", "288": "<(&lt;operator&gt;.greaterEqualsThan,segments.get(i).q &gt;= segments.get(M).p)<SUB>50</SUB>>", "290": "<(get,get(i))<SUB>50</SUB>>", "292": "<(IDENTIFIER,i,get(i))<SUB>50</SUB>>", "294": "<(&lt;operator&gt;.fieldAccess,segments.get(M).p)<SUB>50</SUB>>", "296": "<(IDENTIFIER,segments,get(M))<SUB>50</SUB>>", "298": "<(FIELD_IDENTIFIER,p,p)<SUB>50</SUB>>", "300": "<(&lt;operator&gt;.assignment,L = M + 1)<SUB>51</SUB>>", "302": "<(&lt;operator&gt;.addition,M + 1)<SUB>51</SUB>>", "304": "<(LITERAL,1,M + 1)<SUB>51</SUB>>", "306": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "308": "<(IDENTIFIER,R,R = M)<SUB>53</SUB>>", "310": "<(&lt;operator&gt;.assignment,nextIndex = L)<SUB>56</SUB>>", "312": "<(IDENTIFIER,L,nextIndex = L)<SUB>56</SUB>>", "314": "<(&lt;operator&gt;.indexAccess,f[i])<SUB>59</SUB>>", "316": "<(IDENTIFIER,i,f[i] = 1 + ((nextIndex == -1) ? 0 : f[nextIndex]))<SUB>59</SUB>>", "318": "<(LITERAL,1,1 + ((nextIndex == -1) ? 0 : f[nextIndex]))<SUB>59</SUB>>", "320": "<(&lt;operator&gt;.equals,nextIndex == -1)<SUB>59</SUB>>", "322": "<(&lt;operator&gt;.minus,-1)<SUB>59</SUB>>", "324": "<(LITERAL,0,(nextIndex == -1) ? 0 : f[nextIndex])<SUB>59</SUB>>", "326": "<(IDENTIFIER,f,(nextIndex == -1) ? 0 : f[nextIndex])<SUB>59</SUB>>", "328": "<(&lt;operator&gt;.assignment,next[i] = nextIndex)<SUB>60</SUB>>", "330": "<(IDENTIFIER,next,next[i] = nextIndex)<SUB>60</SUB>>", "332": "<(IDENTIFIER,nextIndex,next[i] = nextIndex)<SUB>60</SUB>>", "334": "<(&lt;operator&gt;.indexAccess,take[i])<SUB>61</SUB>>", "336": "<(IDENTIFIER,i,take[i] = true)<SUB>61</SUB>>", "338": "<(CONTROL_STRUCTURE,if (f[i + 1] &gt; f[i]),if (f[i + 1] &gt; f[i]))<SUB>63</SUB>>", "340": "<(&lt;operator&gt;.indexAccess,f[i + 1])<SUB>63</SUB>>", "342": "<(&lt;operator&gt;.addition,i + 1)<SUB>63</SUB>>", "344": "<(LITERAL,1,i + 1)<SUB>63</SUB>>", "346": "<(IDENTIFIER,f,f[i + 1] &gt; f[i])<SUB>63</SUB>>", "348": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "350": "<(&lt;operator&gt;.indexAccess,take[i])<SUB>64</SUB>>", "352": "<(IDENTIFIER,i,take[i] = false)<SUB>64</SUB>>", "354": "<(&lt;operator&gt;.assignment,f[i] = f[i + 1])<SUB>65</SUB>>", "356": "<(IDENTIFIER,f,f[i] = f[i + 1])<SUB>65</SUB>>", "358": "<(&lt;operator&gt;.indexAccess,f[i + 1])<SUB>65</SUB>>", "360": "<(&lt;operator&gt;.addition,i + 1)<SUB>65</SUB>>", "362": "<(LITERAL,1,i + 1)<SUB>65</SUB>>", "364": "<(&lt;operator&gt;.indexAccess,next[i])<SUB>66</SUB>>", "366": "<(IDENTIFIER,i,next[i] = i + 1)<SUB>66</SUB>>", "368": "<(IDENTIFIER,i,i + 1)<SUB>66</SUB>>", "370": "<(CONTROL_STRUCTURE,if (bestStartIndex == -1 || f[i] &gt; f[bestStartIndex]),if (bestStartIndex == -1 || f[i] &gt; f[bestStartIndex]))<SUB>69</SUB>>", "372": "<(&lt;operator&gt;.equals,bestStartIndex == -1)<SUB>69</SUB>>", "374": "<(&lt;operator&gt;.minus,-1)<SUB>69</SUB>>", "376": "<(&lt;operator&gt;.greaterThan,f[i] &gt; f[bestStartIndex])<SUB>69</SUB>>", "378": "<(IDENTIFIER,f,f[i] &gt; f[bestStartIndex])<SUB>69</SUB>>", "380": "<(&lt;operator&gt;.indexAccess,f[bestStartIndex])<SUB>69</SUB>>", "382": "<(IDENTIFIER,bestStartIndex,f[i] &gt; f[bestStartIndex])<SUB>69</SUB>>", "384": "<(&lt;operator&gt;.assignment,bestStartIndex = i)<SUB>70</SUB>>", "386": "<(IDENTIFIER,i,bestStartIndex = i)<SUB>70</SUB>>", "387": "<(&lt;operator&gt;.assignment,ANY maxForSum = new ArrayList&lt;&gt;())<SUB>75</SUB>>", "389": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>75</SUB>>", "24": "<(IDENTIFIER,maxForSum,new ArrayList&lt;&gt;())<SUB>75</SUB>>", "392": "<(&lt;operator&gt;.assignment,int index = bestStartIndex)<SUB>76</SUB>>", "394": "<(IDENTIFIER,bestStartIndex,int index = bestStartIndex)<SUB>76</SUB>>", "396": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>77</SUB>>", "398": "<(&lt;operator&gt;.indexAccess,take[index])<SUB>78</SUB>>", "400": "<(IDENTIFIER,index,if (take[index]))<SUB>78</SUB>>", "402": "<(add,add(segments.get(index)))<SUB>79</SUB>>", "404": "<(get,get(index))<SUB>79</SUB>>", "406": "<(IDENTIFIER,index,get(index))<SUB>79</SUB>>", "408": "<(IDENTIFIER,index,index = next[index])<SUB>81</SUB>>", "410": "<(IDENTIFIER,next,index = next[index])<SUB>81</SUB>>", "412": "<(&lt;operator&gt;.notEquals,index != -1)<SUB>82</SUB>>", "414": "<(&lt;operator&gt;.minus,-1)<SUB>82</SUB>>", "416": "<(CONTROL_STRUCTURE,if (bestSegments == null || maxForSum.size() &gt; bestSegments.size()),if (bestSegments == null || maxForSum.size() &gt; bestSegments.size()))<SUB>84</SUB>>", "418": "<(&lt;operator&gt;.equals,bestSegments == null)<SUB>84</SUB>>", "420": "<(LITERAL,null,bestSegments == null)<SUB>84</SUB>>", "422": "<(size,size())<SUB>84</SUB>>", "424": "<(size,size())<SUB>84</SUB>>", "426": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>>", "428": "<(IDENTIFIER,bestSegments,bestSegments = maxForSum)<SUB>85</SUB>>", "430": "<(println,println(bestSegments.size()))<SUB>89</SUB>>", "432": "<(IDENTIFIER,System,println(bestSegments.size()))<SUB>89</SUB>>", "434": "<(size,size())<SUB>89</SUB>>", "436": "<(LOCAL,$iterLocal1: java.util.Iterator)<SUB>90</SUB>>", "438": "<(IDENTIFIER,$iterLocal1,)<SUB>90</SUB>>", "440": "<(IDENTIFIER,bestSegments,&lt;empty&gt;)<SUB>90</SUB>>", "442": "<(hasNext,&lt;empty&gt;)<SUB>90</SUB>>", "444": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>90</SUB>>", "446": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>90</SUB>>", "448": "<(next,&lt;empty&gt;)<SUB>90</SUB>>", "450": "<(printf,printf(&quot;%s %s%n&quot;, segment.p, segment.q))<SUB>91</SUB>>", "452": "<(IDENTIFIER,System,printf(&quot;%s %s%n&quot;, segment.p, segment.q))<SUB>91</SUB>>", "454": "<(LITERAL,&quot;%s %s%n&quot;,printf(&quot;%s %s%n&quot;, segment.p, segment.q))<SUB>91</SUB>>", "456": "<(IDENTIFIER,segment,printf(&quot;%s %s%n&quot;, segment.p, segment.q))<SUB>91</SUB>>", "458": "<(&lt;operator&gt;.fieldAccess,segment.q)<SUB>91</SUB>>", "460": "<(FIELD_IDENTIFIER,q,q)<SUB>91</SUB>>", "462": "<(IDENTIFIER,in,close())<SUB>94</SUB>>", "464": "<(MODIFIER,STATIC)>"}}