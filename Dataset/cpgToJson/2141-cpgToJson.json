{"edges": [["19", "20"], ["19", "21"], ["19", "280"], ["19", "281"], ["19", "282"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "40"], ["21", "41"], ["21", "47"], ["21", "48"], ["21", "55"], ["21", "56"], ["21", "63"], ["21", "64"], ["21", "68"], ["21", "74"], ["21", "94"], ["21", "95"], ["21", "96"], ["21", "97"], ["21", "98"], ["21", "102"], ["21", "107"], ["21", "252"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "46"], ["44", "45"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "73"], ["71", "72"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "131"], ["123", "133"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "139"], ["133", "144"], ["133", "205"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "196"], ["160", "200"], ["161", "162"], ["161", "193"], ["162", "163"], ["162", "192"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "181"], ["166", "167"], ["166", "174"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["193", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["201", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "241"], ["206", "207"], ["206", "236"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "225"], ["210", "211"], ["210", "218"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["241", "242"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["252", "257"], ["252", "262"], ["252", "264"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "261"], ["262", "263"], ["264", "265"], ["264", "266"], ["264", "271"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "275"], ["271", "278"], ["271", "279"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["22", "29"], ["25", "37"], ["37", "44"], ["41", "52"], ["48", "60"], ["56", "66"], ["64", "71"], ["68", "76"], ["98", "103"], ["102", "109"], ["24", "22"], ["43", "41"], ["50", "48"], ["58", "56"], ["66", "64"], ["70", "68"], ["76", "79"], ["79", "86"], ["79", "100"], ["82", "79"], ["100", "98"], ["103", "102"], ["109", "112"], ["112", "119"], ["112", "254"], ["115", "112"], ["254", "261"], ["257", "282"], ["257", "268"], ["262", "261"], ["27", "34"], ["30", "25"], ["44", "43"], ["52", "50"], ["60", "58"], ["71", "70"], ["85", "82"], ["118", "125"], ["259", "257"], ["266", "274"], ["271", "262"], ["29", "27"], ["32", "30"], ["86", "91"], ["89", "85"], ["119", "118"], ["125", "128"], ["128", "136"], ["128", "115"], ["131", "128"], ["261", "259"], ["268", "266"], ["272", "277"], ["275", "271"], ["34", "32"], ["91", "89"], ["134", "141"], ["139", "148"], ["274", "272"], ["277", "275"], ["136", "134"], ["141", "139"], ["145", "156"], ["145", "212"], ["206", "243"], ["206", "131"], ["146", "145"], ["153", "168"], ["207", "237"], ["236", "206"], ["242", "131"], ["148", "146"], ["155", "153"], ["161", "197"], ["161", "202"], ["209", "207"], ["237", "236"], ["243", "248"], ["246", "242"], ["156", "155"], ["162", "193"], ["193", "161"], ["197", "148"], ["210", "227"], ["225", "209"], ["248", "246"], ["163", "162"], ["202", "148"], ["211", "219"], ["218", "210"], ["226", "232"], ["231", "225"], ["165", "163"], ["212", "215"], ["215", "211"], ["219", "222"], ["222", "218"], ["227", "226"], ["232", "231"], ["166", "183"], ["181", "165"], ["167", "175"], ["174", "166"], ["182", "188"], ["187", "181"], ["168", "171"], ["171", "167"], ["175", "178"], ["178", "174"], ["183", "182"], ["188", "187"], ["19", "24"], ["20", "282"], ["22", "282"], ["27", "282"], ["30", "282"], ["30", "282"], ["30", "282"], ["25", "282"], ["37", "282"], ["37", "282"], ["41", "282"], ["50", "282"], ["48", "282"], ["48", "282"], ["58", "282"], ["58", "282"], ["56", "282"], ["56", "282"], ["64", "282"], ["64", "282"], ["68", "282"], ["71", "282"], ["70", "282"], ["68", "282"], ["68", "282"], ["76", "282"], ["98", "282"], ["98", "282"], ["98", "282"], ["102", "282"], ["102", "282"], ["102", "282"], ["109", "282"], ["112", "282"], ["112", "282"], ["112", "282"], ["254", "282"], ["257", "282"], ["257", "282"], ["257", "282"], ["262", "282"], ["115", "282"], ["82", "282"], ["50", "282"], ["19", "20"], ["19", "22"], ["19", "37"], ["43", "41"], ["43", "41"], ["50", "48"], ["50", "48"], ["58", "56"], ["58", "56"], ["66", "64"], ["70", "68"], ["70", "68"], ["100", "98"], ["56", "102"], ["19", "102"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "76"], ["19", "109"], ["19", "254"], ["19", "27"], ["19", "35"], ["44", "43"], ["19", "43"], ["19", "50"], ["41", "50"], ["19", "58"], ["41", "58"], ["48", "66"], ["19", "66"], ["71", "70"], ["19", "70"], ["76", "79"], ["82", "79"], ["19", "79"], ["66", "79"], ["79", "82"], ["19", "82"], ["89", "85"], ["89", "85"], ["79", "100"], ["19", "100"], ["109", "112"], ["115", "112"], ["19", "112"], ["100", "112"], ["128", "115"], ["19", "115"], ["237", "118"], ["19", "118"], ["56", "118"], ["254", "257"], ["262", "257"], ["19", "257"], ["98", "257"], ["257", "262"], ["19", "262"], ["27", "266"], ["98", "266"], ["27", "30"], ["19", "30"], ["25", "44"], ["19", "44"], ["44", "71"], ["19", "71"], ["19", "125"], ["19", "271"], ["266", "271"], ["58", "89"], ["19", "89"], ["68", "89"], ["125", "128"], ["131", "128"], ["19", "128"], ["112", "128"], ["128", "131"], ["19", "131"], ["98", "134"], ["231", "134"], ["141", "139"], ["19", "141"], ["146", "145"], ["146", "145"], ["37", "145"], ["19", "145"], ["155", "153"], ["155", "153"], ["207", "206"], ["207", "206"], ["237", "206"], ["237", "206"], ["145", "206"], ["19", "206"], ["246", "242"], ["246", "242"], ["246", "242"], ["207", "146"], ["246", "146"], ["163", "146"], ["19", "146"], ["148", "146"], ["148", "146"], ["146", "207"], ["19", "207"], ["210", "207"], ["225", "207"], ["237", "236"], ["237", "236"], ["145", "236"], ["19", "236"], ["139", "148"], ["197", "148"], ["19", "148"], ["134", "148"], ["202", "148"], ["148", "155"], ["19", "155"], ["148", "155"], ["163", "161"], ["163", "161"], ["145", "161"], ["19", "161"], ["193", "161"], ["193", "161"], ["187", "197"], ["19", "197"], ["210", "209"], ["225", "209"], ["19", "237"], ["193", "237"], ["56", "237"], ["207", "246"], ["19", "246"], ["98", "246"], ["118", "246"], ["242", "246"], ["231", "246"], ["148", "156"], ["19", "156"], ["148", "156"], ["163", "162"], ["163", "162"], ["145", "162"], ["19", "162"], ["19", "193"], ["237", "193"], ["56", "193"], ["187", "202"], ["19", "202"], ["211", "210"], ["211", "210"], ["218", "210"], ["218", "210"], ["226", "225"], ["226", "225"], ["231", "225"], ["231", "225"], ["146", "163"], ["19", "163"], ["166", "163"], ["181", "163"], ["64", "211"], ["218", "211"], ["174", "211"], ["85", "211"], ["218", "211"], ["174", "211"], ["64", "218"], ["211", "218"], ["211", "218"], ["98", "226"], ["187", "226"], ["231", "226"], ["148", "226"], ["19", "226"], ["98", "231"], ["226", "231"], ["226", "231"], ["19", "231"], ["166", "165"], ["181", "165"], ["167", "166"], ["167", "166"], ["174", "166"], ["174", "166"], ["182", "181"], ["182", "181"], ["187", "181"], ["187", "181"], ["64", "167"], ["218", "167"], ["174", "167"], ["85", "167"], ["218", "167"], ["174", "167"], ["64", "174"], ["167", "174"], ["167", "174"], ["98", "182"], ["187", "182"], ["231", "182"], ["153", "182"], ["19", "182"], ["98", "187"], ["182", "187"], ["182", "187"], ["19", "187"], ["79", "85"], ["79", "91"], ["79", "79"], ["79", "86"], ["79", "89"], ["79", "82"], ["112", "115"], ["112", "128"], ["112", "119"], ["112", "112"], ["112", "118"], ["112", "125"], ["257", "257"], ["257", "272"], ["257", "261"], ["257", "275"], ["257", "262"], ["257", "259"], ["257", "268"], ["257", "274"], ["257", "277"], ["257", "271"], ["257", "266"], ["128", "136"], ["128", "145"], ["128", "146"], ["128", "128"], ["128", "225"], ["128", "131"], ["128", "215"], ["128", "209"], ["128", "232"], ["128", "226"], ["128", "206"], ["128", "134"], ["128", "148"], ["128", "231"], ["128", "207"], ["128", "212"], ["128", "139"], ["128", "141"], ["128", "210"], ["128", "236"], ["128", "237"], ["128", "211"], ["128", "227"], ["128", "222"], ["128", "218"], ["128", "219"], ["145", "167"], ["145", "188"], ["145", "145"], ["145", "146"], ["145", "161"], ["145", "163"], ["145", "178"], ["145", "162"], ["145", "153"], ["145", "168"], ["145", "181"], ["145", "148"], ["145", "187"], ["145", "174"], ["145", "182"], ["145", "155"], ["145", "171"], ["145", "183"], ["145", "193"], ["145", "166"], ["145", "165"], ["145", "175"], ["145", "156"], ["206", "243"], ["206", "242"], ["206", "246"], ["206", "248"], ["161", "197"], ["161", "202"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,double eps = 1e-7)<SUB>3</SUB>>", "39": "<(LITERAL,1e-7,double eps = 1e-7)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,String[] toks = split(&quot; &quot;))<SUB>4</SUB>>", "43": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "45": "<(IDENTIFIER,in,readLine())<SUB>4</SUB>>", "47": "<(LOCAL,int n: int)<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,int n = Integer.parseInt(toks[0]))<SUB>5</SUB>>", "51": "<(IDENTIFIER,Integer,Integer.parseInt(toks[0]))<SUB>5</SUB>>", "53": "<(IDENTIFIER,toks,Integer.parseInt(toks[0]))<SUB>5</SUB>>", "55": "<(LOCAL,double r: double)<SUB>6</SUB>>", "57": "<(IDENTIFIER,r,double r = Double.parseDouble(toks[1]))<SUB>6</SUB>>", "59": "<(IDENTIFIER,Double,Double.parseDouble(toks[1]))<SUB>6</SUB>>", "61": "<(IDENTIFIER,toks,Double.parseDouble(toks[1]))<SUB>6</SUB>>", "63": "<(LOCAL,double[] x: double[])<SUB>7</SUB>>", "65": "<(IDENTIFIER,x,double[] x = new double[n])<SUB>7</SUB>>", "67": "<(IDENTIFIER,n,new double[n])<SUB>7</SUB>>", "69": "<(IDENTIFIER,toks,toks = split(&quot; &quot;))<SUB>8</SUB>>", "71": "<(readLine,readLine())<SUB>8</SUB>>", "73": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>8</SUB>>", "75": "<(LOCAL,int i: int)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,x[i] = Double.parseDouble(toks[i]))<SUB>10</SUB>>", "87": "<(IDENTIFIER,x,x[i] = Double.parseDouble(toks[i]))<SUB>10</SUB>>", "89": "<(parseDouble,Double.parseDouble(toks[i]))<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,toks[i])<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,Double.parseDouble(toks[i]))<SUB>10</SUB>>", "95": "<(LOCAL,double hi: double)<SUB>12</SUB>>", "97": "<(LOCAL,double[] y: double[])<SUB>13</SUB>>", "99": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>13</SUB>>", "101": "<(IDENTIFIER,n,new double[n])<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,y[0])<SUB>14</SUB>>", "105": "<(LITERAL,0,y[0] = r)<SUB>14</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>15</SUB>>", "111": "<(LITERAL,1,int i = 1)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,i,y[i] = r)<SUB>16</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "127": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "129": "<(IDENTIFIER,j,j &lt; i)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "135": "<(IDENTIFIER,lo,lo = y[j])<SUB>18</SUB>>", "137": "<(IDENTIFIER,y,lo = y[j])<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,hi = 2000 * 2000)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.multiplication,2000 * 2000)<SUB>18</SUB>>", "143": "<(LITERAL,2000,2000 * 2000)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.greaterEqualsThan,Math.abs(hi - lo) &gt;= eps)<SUB>19</SUB>>", "147": "<(IDENTIFIER,Math,Math.abs(hi - lo))<SUB>19</SUB>>", "149": "<(IDENTIFIER,hi,hi - lo)<SUB>19</SUB>>", "151": "<(IDENTIFIER,eps,Math.abs(hi - lo) &gt;= eps)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.assignment,mid = (hi + lo) / 2)<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.division,(hi + lo) / 2)<SUB>20</SUB>>", "157": "<(IDENTIFIER,hi,hi + lo)<SUB>20</SUB>>", "159": "<(LITERAL,2,(hi + lo) / 2)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.greaterThan,Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[j] - mid) * (y[j] - mid)) + eps &gt; 2 * r)<SUB>21</SUB>>", "163": "<(sqrt,Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[j] - mid) * (y[j] - mid)))<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.addition,(x[i] - x[j]) * (x[i] - x[j]) + (y[j] - mid) * (y[j] - mid))<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>21</SUB>>", "169": "<(IDENTIFIER,x,x[i] - x[j])<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>21</SUB>>", "173": "<(IDENTIFIER,j,x[i] - x[j])<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>21</SUB>>", "177": "<(IDENTIFIER,i,x[i] - x[j])<SUB>21</SUB>>", "179": "<(IDENTIFIER,x,x[i] - x[j])<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.multiplication,(y[j] - mid) * (y[j] - mid))<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>21</SUB>>", "185": "<(IDENTIFIER,j,y[j] - mid)<SUB>21</SUB>>", "187": "<(&lt;operator&gt;.subtraction,y[j] - mid)<SUB>21</SUB>>", "189": "<(IDENTIFIER,y,y[j] - mid)<SUB>21</SUB>>", "191": "<(IDENTIFIER,mid,y[j] - mid)<SUB>21</SUB>>", "193": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>21</SUB>>", "195": "<(IDENTIFIER,r,2 * r)<SUB>21</SUB>>", "197": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>22</SUB>>", "199": "<(IDENTIFIER,mid,hi = mid)<SUB>22</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "203": "<(IDENTIFIER,lo,lo = mid)<SUB>24</SUB>>", "205": "<(CONTROL_STRUCTURE,if (Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[j] - lo) * (y[j] - lo)) &lt; 2 * r + eps),if (Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[j] - lo) * (y[j] - lo)) &lt; 2 * r + eps))<SUB>27</SUB>>", "207": "<(sqrt,Math.sqrt((x[i] - x[j]) * (x[i] - x[j]) + (y[j] - lo) * (y[j] - lo)))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.addition,(x[i] - x[j]) * (x[i] - x[j]) + (y[j] - lo) * (y[j] - lo))<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>27</SUB>>", "213": "<(IDENTIFIER,x,x[i] - x[j])<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>27</SUB>>", "217": "<(IDENTIFIER,j,x[i] - x[j])<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>27</SUB>>", "221": "<(IDENTIFIER,i,x[i] - x[j])<SUB>27</SUB>>", "223": "<(IDENTIFIER,x,x[i] - x[j])<SUB>27</SUB>>", "225": "<(&lt;operator&gt;.multiplication,(y[j] - lo) * (y[j] - lo))<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>27</SUB>>", "229": "<(IDENTIFIER,j,y[j] - lo)<SUB>27</SUB>>", "231": "<(&lt;operator&gt;.subtraction,y[j] - lo)<SUB>27</SUB>>", "233": "<(IDENTIFIER,y,y[j] - lo)<SUB>27</SUB>>", "235": "<(IDENTIFIER,lo,y[j] - lo)<SUB>27</SUB>>", "237": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>27</SUB>>", "239": "<(IDENTIFIER,r,2 * r)<SUB>27</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>28</SUB>>", "245": "<(IDENTIFIER,i,y[i] = Math.max(y[i], lo))<SUB>28</SUB>>", "247": "<(IDENTIFIER,Math,Math.max(y[i], lo))<SUB>28</SUB>>", "249": "<(IDENTIFIER,y,Math.max(y[i], lo))<SUB>28</SUB>>", "251": "<(IDENTIFIER,lo,Math.max(y[i], lo))<SUB>28</SUB>>", "253": "<(LOCAL,$idx0: int)<SUB>32</SUB>>", "255": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "257": "<(&lt;operator&gt;.lessThan,$idx0 &lt; y.length)<SUB>32</SUB>>", "259": "<(&lt;operator&gt;.fieldAccess,y.length)<SUB>32</SUB>>", "261": "<(FIELD_IDENTIFIER,length,length)<SUB>32</SUB>>", "263": "<(IDENTIFIER,$idx0,$idx0++)>", "265": "<(LOCAL,z: double)<SUB>32</SUB>>", "267": "<(IDENTIFIER,z,&lt;empty&gt;)>", "269": "<(IDENTIFIER,y,&lt;empty&gt;)>", "271": "<(printf,printf(Locale.US, &quot;%.7f &quot;, z))<SUB>33</SUB>>", "273": "<(IDENTIFIER,System,printf(Locale.US, &quot;%.7f &quot;, z))<SUB>33</SUB>>", "275": "<(&lt;operator&gt;.fieldAccess,Locale.US)<SUB>33</SUB>>", "277": "<(FIELD_IDENTIFIER,US,US)<SUB>33</SUB>>", "279": "<(IDENTIFIER,z,printf(Locale.US, &quot;%.7f &quot;, z))<SUB>33</SUB>>", "281": "<(MODIFIER,STATIC)>"}}