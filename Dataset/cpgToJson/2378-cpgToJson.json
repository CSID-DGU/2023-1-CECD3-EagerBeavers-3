{"edges": [["19", "21"], ["19", "249"], ["19", "250"], ["19", "251"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "41"], ["21", "58"], ["21", "59"], ["21", "63"], ["21", "64"], ["21", "67"], ["21", "102"], ["21", "117"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "80"], ["78", "85"], ["78", "88"], ["78", "90"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "99"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["100", "101"], ["102", "103"], ["102", "108"], ["102", "112"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["113", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "133"], ["127", "134"], ["127", "138"], ["127", "163"], ["127", "164"], ["127", "171"], ["127", "172"], ["127", "175"], ["127", "176"], ["127", "185"], ["129", "130"], ["129", "131"], ["131", "132"], ["134", "135"], ["134", "136"], ["136", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "162"], ["143", "144"], ["143", "149"], ["143", "155"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["156", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "197"], ["185", "206"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["207", "208"], ["207", "219"], ["207", "228"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["229", "230"], ["230", "231"], ["230", "236"], ["230", "242"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["243", "244"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["22", "28"], ["25", "32"], ["30", "38"], ["35", "43"], ["59", "64"], ["64", "69"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["43", "46"], ["46", "53"], ["46", "61"], ["49", "46"], ["61", "59"], ["69", "72"], ["72", "82"], ["72", "104"], ["75", "72"], ["103", "109"], ["103", "114"], ["119", "122"], ["122", "251"], ["122", "131"], ["125", "122"], ["28", "26"], ["38", "37"], ["52", "49"], ["104", "103"], ["109", "119"], ["129", "136"], ["134", "139"], ["164", "172"], ["172", "181"], ["176", "188"], ["53", "56"], ["56", "52"], ["80", "85"], ["85", "93"], ["85", "75"], ["88", "85"], ["114", "119"], ["131", "129"], ["136", "134"], ["139", "145"], ["139", "167"], ["166", "164"], ["178", "176"], ["186", "198"], ["186", "210"], ["82", "80"], ["167", "166"], ["179", "178"], ["187", "186"], ["187", "193"], ["192", "186"], ["198", "204"], ["201", "125"], ["92", "100"], ["92", "88"], ["144", "153"], ["144", "160"], ["181", "179"], ["188", "187"], ["193", "192"], ["202", "201"], ["208", "220"], ["208", "232"], ["93", "96"], ["96", "92"], ["100", "88"], ["145", "144"], ["150", "125"], ["204", "202"], ["209", "208"], ["209", "215"], ["214", "208"], ["220", "226"], ["223", "125"], ["151", "150"], ["157", "125"], ["210", "209"], ["215", "214"], ["224", "223"], ["153", "151"], ["158", "157"], ["226", "224"], ["231", "240"], ["231", "247"], ["160", "158"], ["232", "231"], ["237", "125"], ["238", "237"], ["244", "125"], ["240", "238"], ["245", "244"], ["247", "245"], ["19", "24"], ["20", "251"], ["22", "251"], ["25", "251"], ["25", "251"], ["30", "251"], ["35", "251"], ["37", "251"], ["35", "251"], ["35", "251"], ["61", "251"], ["59", "251"], ["59", "251"], ["64", "251"], ["69", "251"], ["72", "251"], ["72", "251"], ["103", "251"], ["103", "251"], ["114", "251"], ["114", "251"], ["109", "251"], ["109", "251"], ["119", "251"], ["122", "251"], ["122", "251"], ["122", "251"], ["125", "251"], ["75", "251"], ["49", "251"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["61", "59"], ["19", "64"], ["22", "25"], ["19", "25"], ["19", "43"], ["19", "69"], ["19", "119"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["43", "46"], ["49", "46"], ["19", "46"], ["30", "46"], ["46", "49"], ["19", "49"], ["56", "52"], ["32", "61"], ["56", "61"], ["19", "61"], ["69", "72"], ["75", "72"], ["19", "72"], ["46", "72"], ["85", "72"], ["19", "75"], ["72", "75"], ["104", "103"], ["104", "103"], ["19", "103"], ["19", "109"], ["119", "122"], ["125", "122"], ["19", "122"], ["59", "122"], ["122", "125"], ["19", "125"], ["131", "129"], ["136", "134"], ["167", "164"], ["167", "164"], ["19", "164"], ["19", "172"], ["178", "176"], ["178", "176"], ["30", "38"], ["19", "38"], ["72", "80"], ["19", "80"], ["64", "104"], ["100", "104"], ["19", "104"], ["19", "114"], ["32", "56"], ["19", "56"], ["80", "85"], ["88", "85"], ["19", "85"], ["72", "85"], ["85", "88"], ["19", "88"], ["61", "131"], ["136", "131"], ["19", "131"], ["131", "136"], ["19", "136"], ["129", "139"], ["19", "139"], ["134", "139"], ["167", "166"], ["167", "166"], ["19", "166"], ["179", "178"], ["179", "178"], ["19", "178"], ["187", "186"], ["187", "186"], ["192", "186"], ["192", "186"], ["231", "186"], ["144", "186"], ["19", "198"], ["72", "82"], ["19", "82"], ["139", "167"], ["19", "167"], ["139", "167"], ["181", "179"], ["19", "179"], ["181", "179"], ["188", "187"], ["188", "187"], ["19", "187"], ["193", "192"], ["193", "192"], ["19", "192"], ["244", "201"], ["237", "201"], ["223", "201"], ["157", "201"], ["150", "201"], ["19", "201"], ["35", "92"], ["52", "92"], ["145", "144"], ["145", "144"], ["19", "144"], ["164", "181"], ["19", "181"], ["176", "188"], ["19", "188"], ["114", "193"], ["109", "193"], ["232", "193"], ["220", "193"], ["198", "193"], ["145", "193"], ["19", "193"], ["209", "208"], ["209", "208"], ["214", "208"], ["214", "208"], ["19", "220"], ["64", "100"], ["19", "100"], ["114", "145"], ["109", "145"], ["232", "145"], ["220", "145"], ["198", "145"], ["19", "145"], ["244", "150"], ["237", "150"], ["223", "150"], ["201", "150"], ["157", "150"], ["19", "150"], ["210", "209"], ["210", "209"], ["19", "209"], ["215", "214"], ["215", "214"], ["19", "214"], ["244", "223"], ["237", "223"], ["201", "223"], ["157", "223"], ["150", "223"], ["19", "223"], ["244", "157"], ["237", "157"], ["223", "157"], ["201", "157"], ["150", "157"], ["19", "157"], ["188", "210"], ["19", "210"], ["114", "215"], ["109", "215"], ["193", "215"], ["232", "215"], ["220", "215"], ["198", "215"], ["145", "215"], ["19", "215"], ["232", "231"], ["232", "231"], ["19", "231"], ["114", "232"], ["109", "232"], ["193", "232"], ["215", "232"], ["220", "232"], ["198", "232"], ["145", "232"], ["19", "232"], ["244", "237"], ["223", "237"], ["201", "237"], ["157", "237"], ["150", "237"], ["19", "237"], ["237", "244"], ["223", "244"], ["201", "244"], ["157", "244"], ["150", "244"], ["19", "244"], ["46", "52"], ["46", "56"], ["46", "49"], ["46", "46"], ["46", "53"], ["72", "75"], ["72", "85"], ["72", "80"], ["72", "72"], ["72", "82"], ["103", "114"], ["103", "109"], ["122", "136"], ["122", "131"], ["122", "129"], ["122", "134"], ["122", "139"], ["122", "122"], ["122", "125"], ["85", "96"], ["85", "85"], ["85", "92"], ["85", "93"], ["85", "88"], ["139", "167"], ["139", "188"], ["139", "145"], ["139", "179"], ["139", "178"], ["139", "144"], ["139", "181"], ["139", "187"], ["139", "164"], ["139", "186"], ["139", "166"], ["139", "176"], ["139", "172"], ["186", "209"], ["186", "198"], ["186", "204"], ["186", "208"], ["186", "202"], ["186", "201"], ["186", "210"], ["187", "192"], ["187", "193"], ["92", "100"], ["144", "150"], ["144", "151"], ["144", "153"], ["144", "158"], ["144", "160"], ["144", "157"], ["208", "232"], ["208", "226"], ["208", "223"], ["208", "231"], ["208", "224"], ["208", "220"], ["209", "214"], ["209", "215"], ["231", "240"], ["231", "244"], ["231", "245"], ["231", "247"], ["231", "238"], ["231", "237"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n + 1])<SUB>7</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "39": "<(IDENTIFIER,n,n + 1)<SUB>7</SUB>>", "41": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>9</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "45": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "47": "<(IDENTIFIER,i,i &lt;= n)<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "55": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>10</SUB>>", "57": "<(IDENTIFIER,s,nextInt())<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>13</SUB>>", "61": "<(nextInt,nextInt())<SUB>13</SUB>>", "63": "<(LOCAL,int count: int)<SUB>14</SUB>>", "65": "<(IDENTIFIER,count,int count = 0)<SUB>14</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>16</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>16</SUB>>", "71": "<(LITERAL,1,int i = 1)<SUB>16</SUB>>", "73": "<(IDENTIFIER,i,i &lt;= n)<SUB>16</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "79": "<(LOCAL,int j: int)<SUB>17</SUB>>", "81": "<(IDENTIFIER,j,int j = i + 1)<SUB>17</SUB>>", "83": "<(IDENTIFIER,i,i + 1)<SUB>17</SUB>>", "85": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>17</SUB>>", "87": "<(IDENTIFIER,n,j &lt;= n)<SUB>17</SUB>>", "89": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "91": "<(CONTROL_STRUCTURE,if (a[i] &gt; a[j]),if (a[i] &gt; a[j]))<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "95": "<(IDENTIFIER,i,a[i] &gt; a[j])<SUB>18</SUB>>", "97": "<(IDENTIFIER,a,a[i] &gt; a[j])<SUB>18</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "101": "<(IDENTIFIER,count,count++)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.equals,count % 2 == 0)<SUB>24</SUB>>", "105": "<(IDENTIFIER,count,count % 2)<SUB>24</SUB>>", "107": "<(LITERAL,0,count % 2 == 0)<SUB>24</SUB>>", "109": "<(&lt;operator&gt;.assignment,count = 0)<SUB>25</SUB>>", "111": "<(LITERAL,0,count = 0)<SUB>25</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "115": "<(IDENTIFIER,count,count = 1)<SUB>27</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>31</SUB>>", "119": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>31</SUB>>", "121": "<(LITERAL,0,int i = 0)<SUB>31</SUB>>", "123": "<(IDENTIFIER,i,i &lt; m)<SUB>31</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "129": "<(&lt;operator&gt;.assignment,int l = nextInt())<SUB>32</SUB>>", "131": "<(nextInt,nextInt())<SUB>32</SUB>>", "133": "<(LOCAL,int r: int)<SUB>33</SUB>>", "135": "<(IDENTIFIER,r,int r = nextInt())<SUB>33</SUB>>", "137": "<(IDENTIFIER,s,nextInt())<SUB>33</SUB>>", "139": "<(&lt;operator&gt;.equals,l == r)<SUB>35</SUB>>", "141": "<(IDENTIFIER,r,l == r)<SUB>35</SUB>>", "143": "<(CONTROL_STRUCTURE,if ((count &amp; 1) == 1),if ((count &amp; 1) == 1))<SUB>36</SUB>>", "145": "<(&lt;operator&gt;.and,count &amp; 1)<SUB>36</SUB>>", "147": "<(LITERAL,1,count &amp; 1)<SUB>36</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>37</SUB>>", "153": "<(FIELD_IDENTIFIER,out,out)<SUB>37</SUB>>", "155": "<(CONTROL_STRUCTURE,else,else)<SUB>38</SUB>>", "157": "<(println,System.out.println(&quot;even&quot;))<SUB>39</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>39</SUB>>", "161": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>39</SUB>>", "163": "<(LOCAL,int d: int)<SUB>44</SUB>>", "165": "<(IDENTIFIER,d,int d = r - l + 1)<SUB>44</SUB>>", "167": "<(&lt;operator&gt;.subtraction,r - l)<SUB>44</SUB>>", "169": "<(IDENTIFIER,l,r - l)<SUB>44</SUB>>", "171": "<(LOCAL,int segcount: int)<SUB>45</SUB>>", "173": "<(IDENTIFIER,segcount,int segcount = 0)<SUB>45</SUB>>", "175": "<(LOCAL,int temp: int)<SUB>49</SUB>>", "177": "<(IDENTIFIER,temp,int temp = (d * (d - 1)) / 2)<SUB>49</SUB>>", "179": "<(&lt;operator&gt;.multiplication,d * (d - 1))<SUB>49</SUB>>", "181": "<(&lt;operator&gt;.subtraction,d - 1)<SUB>49</SUB>>", "183": "<(LITERAL,1,d - 1)<SUB>49</SUB>>", "185": "<(CONTROL_STRUCTURE,if ((temp &amp; 1) == 1 &amp;&amp; (count &amp; 1) == 1),if ((temp &amp; 1) == 1 &amp;&amp; (count &amp; 1) == 1))<SUB>51</SUB>>", "187": "<(&lt;operator&gt;.equals,(temp &amp; 1) == 1)<SUB>51</SUB>>", "189": "<(IDENTIFIER,temp,temp &amp; 1)<SUB>51</SUB>>", "191": "<(LITERAL,1,(temp &amp; 1) == 1)<SUB>51</SUB>>", "193": "<(&lt;operator&gt;.and,count &amp; 1)<SUB>51</SUB>>", "195": "<(LITERAL,1,count &amp; 1)<SUB>51</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "199": "<(IDENTIFIER,count,count = 0)<SUB>52</SUB>>", "201": "<(println,System.out.println(&quot;even&quot;))<SUB>53</SUB>>", "203": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>53</SUB>>", "205": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>53</SUB>>", "207": "<(CONTROL_STRUCTURE,if ((temp &amp; 1) == 1 &amp;&amp; (count &amp; 1) == 0),if ((temp &amp; 1) == 1 &amp;&amp; (count &amp; 1) == 0))<SUB>54</SUB>>", "209": "<(&lt;operator&gt;.equals,(temp &amp; 1) == 1)<SUB>54</SUB>>", "211": "<(IDENTIFIER,temp,temp &amp; 1)<SUB>54</SUB>>", "213": "<(LITERAL,1,(temp &amp; 1) == 1)<SUB>54</SUB>>", "215": "<(&lt;operator&gt;.and,count &amp; 1)<SUB>54</SUB>>", "217": "<(LITERAL,1,count &amp; 1)<SUB>54</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "221": "<(IDENTIFIER,count,count = 1)<SUB>55</SUB>>", "223": "<(println,System.out.println(&quot;odd&quot;))<SUB>56</SUB>>", "225": "<(IDENTIFIER,System,System.out.println(&quot;odd&quot;))<SUB>56</SUB>>", "227": "<(LITERAL,&quot;odd&quot;,System.out.println(&quot;odd&quot;))<SUB>56</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "231": "<(&lt;operator&gt;.equals,(count &amp; 1) == 1)<SUB>58</SUB>>", "233": "<(IDENTIFIER,count,count &amp; 1)<SUB>58</SUB>>", "235": "<(LITERAL,1,(count &amp; 1) == 1)<SUB>58</SUB>>", "237": "<(println,System.out.println(&quot;odd&quot;))<SUB>59</SUB>>", "239": "<(IDENTIFIER,System,System.out.println(&quot;odd&quot;))<SUB>59</SUB>>", "241": "<(LITERAL,&quot;odd&quot;,System.out.println(&quot;odd&quot;))<SUB>59</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>>", "245": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>61</SUB>>", "247": "<(FIELD_IDENTIFIER,out,out)<SUB>61</SUB>>", "249": "<(MODIFIER,PUBLIC)>", "251": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}