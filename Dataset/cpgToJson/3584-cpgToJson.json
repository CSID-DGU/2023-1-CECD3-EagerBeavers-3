{"edges": [["23", "25"], ["23", "269"], ["23", "270"], ["23", "271"], ["25", "26"], ["25", "27"], ["25", "4"], ["25", "30"], ["25", "33"], ["25", "6"], ["25", "42"], ["25", "45"], ["25", "54"], ["25", "55"], ["25", "56"], ["25", "60"], ["25", "64"], ["25", "65"], ["25", "66"], ["25", "67"], ["25", "73"], ["25", "81"], ["25", "89"], ["25", "8"], ["25", "94"], ["25", "97"], ["25", "98"], ["25", "99"], ["25", "100"], ["25", "104"], ["25", "107"], ["25", "142"], ["25", "254"], ["25", "265"], ["25", "267"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "41"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["45", "46"], ["46", "47"], ["46", "50"], ["46", "53"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["67", "68"], ["67", "69"], ["69", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["75", "79"], ["75", "80"], ["77", "78"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["83", "86"], ["83", "88"], ["86", "87"], ["89", "90"], ["89", "91"], ["89", "92"], ["92", "93"], ["94", "95"], ["94", "96"], ["97", "7"], ["100", "101"], ["100", "102"], ["102", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "120"], ["117", "124"], ["117", "128"], ["117", "139"], ["120", "121"], ["120", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "138"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["144", "145"], ["146", "147"], ["146", "148"], ["146", "152"], ["146", "153"], ["146", "154"], ["146", "159"], ["146", "164"], ["148", "149"], ["148", "150"], ["150", "151"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["174", "176"], ["174", "191"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "230"], ["192", "193"], ["192", "224"], ["193", "194"], ["193", "217"], ["194", "195"], ["194", "210"], ["195", "196"], ["195", "203"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["230", "240"], ["230", "243"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "251"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["265", "266"], ["267", "268"], ["27", "32"], ["30", "37"], ["33", "44"], ["42", "49"], ["45", "58"], ["56", "62"], ["60", "70"], ["67", "77"], ["73", "86"], ["81", "92"], ["89", "96"], ["94", "97"], ["97", "102"], ["100", "104"], ["104", "109"], ["254", "265"], ["265", "267"], ["267", "271"], ["32", "30"], ["44", "42"], ["58", "56"], ["62", "60"], ["69", "67"], ["75", "73"], ["83", "81"], ["92", "89"], ["96", "94"], ["102", "100"], ["109", "112"], ["112", "122"], ["112", "144"], ["115", "112"], ["143", "150"], ["143", "258"], ["256", "254"], ["35", "38"], ["38", "33"], ["47", "50"], ["50", "45"], ["70", "69"], ["77", "75"], ["86", "83"], ["120", "126"], ["124", "134"], ["128", "139"], ["139", "115"], ["144", "143"], ["148", "156"], ["154", "161"], ["159", "166"], ["257", "262"], ["262", "256"], ["37", "35"], ["49", "47"], ["122", "120"], ["126", "124"], ["129", "128"], ["150", "148"], ["156", "154"], ["161", "159"], ["166", "169"], ["169", "144"], ["169", "181"], ["172", "169"], ["258", "257"], ["131", "129"], ["176", "198"], ["133", "131"], ["178", "176"], ["192", "232"], ["192", "172"], ["134", "133"], ["179", "187"], ["186", "178"], ["193", "192"], ["193", "225"], ["224", "192"], ["231", "240"], ["240", "245"], ["180", "179"], ["187", "186"], ["194", "193"], ["194", "219"], ["217", "193"], ["225", "228"], ["228", "224"], ["232", "236"], ["235", "231"], ["244", "251"], ["244", "172"], ["251", "172"], ["181", "180"], ["195", "194"], ["195", "212"], ["210", "194"], ["218", "217"], ["236", "235"], ["245", "248"], ["248", "244"], ["196", "195"], ["196", "205"], ["203", "195"], ["211", "210"], ["219", "218"], ["197", "196"], ["204", "203"], ["212", "211"], ["198", "197"], ["205", "204"], ["23", "27"], ["24", "271"], ["27", "271"], ["30", "271"], ["38", "271"], ["38", "271"], ["33", "271"], ["42", "271"], ["47", "271"], ["50", "271"], ["50", "271"], ["45", "271"], ["56", "271"], ["56", "271"], ["60", "271"], ["60", "271"], ["69", "271"], ["67", "271"], ["67", "271"], ["73", "271"], ["73", "271"], ["73", "271"], ["81", "271"], ["81", "271"], ["81", "271"], ["89", "271"], ["89", "271"], ["89", "271"], ["94", "271"], ["97", "271"], ["100", "271"], ["100", "271"], ["104", "271"], ["109", "271"], ["112", "271"], ["112", "271"], ["112", "271"], ["144", "271"], ["143", "271"], ["143", "271"], ["257", "271"], ["256", "271"], ["262", "271"], ["262", "271"], ["256", "271"], ["254", "271"], ["254", "271"], ["265", "271"], ["267", "271"], ["267", "271"], ["148", "271"], ["148", "271"], ["154", "271"], ["154", "271"], ["154", "271"], ["159", "271"], ["161", "271"], ["159", "271"], ["159", "271"], ["166", "271"], ["169", "271"], ["169", "271"], ["176", "271"], ["178", "271"], ["186", "271"], ["186", "271"], ["178", "271"], ["176", "271"], ["176", "271"], ["197", "271"], ["197", "271"], ["196", "271"], ["196", "271"], ["195", "271"], ["204", "271"], ["204", "271"], ["203", "271"], ["195", "271"], ["194", "271"], ["211", "271"], ["211", "271"], ["210", "271"], ["210", "271"], ["194", "271"], ["193", "271"], ["218", "271"], ["218", "271"], ["217", "271"], ["193", "271"], ["192", "271"], ["224", "271"], ["224", "271"], ["192", "271"], ["192", "271"], ["235", "271"], ["231", "271"], ["231", "271"], ["240", "271"], ["240", "271"], ["244", "271"], ["244", "271"], ["244", "271"], ["251", "271"], ["251", "271"], ["172", "271"], ["120", "271"], ["124", "271"], ["124", "271"], ["134", "271"], ["133", "271"], ["133", "271"], ["131", "271"], ["128", "271"], ["128", "271"], ["139", "271"], ["115", "271"], ["89", "271"], ["23", "24"], ["23", "27"], ["23", "30"], ["23", "42"], ["58", "56"], ["62", "60"], ["69", "67"], ["75", "73"], ["75", "73"], ["75", "73"], ["83", "81"], ["83", "81"], ["83", "81"], ["23", "94"], ["102", "100"], ["23", "104"], ["30", "33"], ["23", "33"], ["35", "33"], ["38", "33"], ["42", "45"], ["23", "45"], ["47", "45"], ["50", "45"], ["23", "89"], ["67", "89"], ["92", "89"], ["94", "97"], ["23", "97"], ["23", "109"], ["45", "254"], ["23", "254"], ["258", "254"], ["258", "254"], ["262", "254"], ["262", "254"], ["254", "265"], ["23", "265"], ["102", "267"], ["126", "267"], ["23", "267"], ["23", "35"], ["23", "41"], ["23", "47"], ["23", "53"], ["33", "58"], ["23", "58"], ["58", "62"], ["23", "62"], ["70", "69"], ["23", "75"], ["77", "75"], ["23", "83"], ["86", "83"], ["23", "92"], ["62", "102"], ["23", "102"], ["109", "112"], ["115", "112"], ["23", "112"], ["100", "112"], ["112", "115"], ["23", "115"], ["122", "120"], ["126", "124"], ["23", "128"], ["144", "143"], ["150", "148"], ["156", "154"], ["156", "154"], ["161", "159"], ["161", "159"], ["258", "256"], ["258", "256"], ["23", "256"], ["262", "256"], ["262", "256"], ["35", "38"], ["23", "38"], ["47", "50"], ["23", "50"], ["27", "70"], ["23", "70"], ["23", "77"], ["23", "86"], ["97", "139"], ["23", "139"], ["131", "139"], ["97", "144"], ["150", "144"], ["240", "144"], ["139", "144"], ["23", "144"], ["23", "166"], ["258", "257"], ["258", "257"], ["23", "257"], ["258", "262"], ["23", "262"], ["258", "262"], ["102", "122"], ["126", "122"], ["23", "122"], ["122", "126"], ["23", "126"], ["144", "150"], ["23", "150"], ["148", "156"], ["23", "156"], ["70", "156"], ["161", "156"], ["179", "156"], ["134", "156"], ["156", "161"], ["23", "161"], ["156", "161"], ["166", "169"], ["172", "169"], ["23", "169"], ["169", "172"], ["23", "172"], ["179", "176"], ["179", "176"], ["81", "176"], ["159", "176"], ["23", "176"], ["104", "258"], ["251", "258"], ["139", "258"], ["23", "258"], ["70", "258"], ["161", "258"], ["179", "258"], ["134", "258"], ["134", "131"], ["134", "131"], ["124", "131"], ["23", "131"], ["134", "133"], ["134", "133"], ["124", "133"], ["23", "133"], ["179", "178"], ["179", "178"], ["81", "178"], ["159", "178"], ["23", "178"], ["193", "192"], ["193", "192"], ["224", "192"], ["224", "192"], ["89", "231"], ["23", "231"], ["120", "134"], ["23", "134"], ["70", "134"], ["73", "179"], ["154", "179"], ["23", "179"], ["161", "179"], ["81", "186"], ["159", "186"], ["23", "186"], ["194", "193"], ["194", "193"], ["217", "193"], ["217", "193"], ["89", "224"], ["244", "224"], ["228", "224"], ["150", "240"], ["23", "240"], ["176", "240"], ["240", "251"], ["23", "251"], ["73", "180"], ["154", "180"], ["23", "180"], ["195", "194"], ["195", "194"], ["210", "194"], ["210", "194"], ["81", "217"], ["23", "217"], ["23", "228"], ["89", "235"], ["23", "235"], ["89", "244"], ["231", "244"], ["196", "195"], ["196", "195"], ["203", "195"], ["203", "195"], ["81", "210"], ["23", "210"], ["60", "210"], ["81", "218"], ["23", "218"], ["73", "196"], ["23", "196"], ["56", "196"], ["73", "203"], ["23", "203"], ["81", "211"], ["23", "211"], ["73", "197"], ["23", "197"], ["73", "204"], ["23", "204"], ["112", "115"], ["112", "120"], ["112", "128"], ["112", "131"], ["112", "112"], ["112", "129"], ["112", "134"], ["112", "139"], ["112", "122"], ["112", "126"], ["112", "124"], ["112", "133"], ["143", "154"], ["143", "169"], ["143", "161"], ["143", "150"], ["143", "144"], ["143", "148"], ["143", "166"], ["143", "159"], ["143", "143"], ["143", "156"], ["169", "192"], ["169", "169"], ["169", "179"], ["169", "178"], ["169", "196"], ["169", "197"], ["169", "198"], ["169", "181"], ["169", "195"], ["169", "187"], ["169", "194"], ["169", "186"], ["169", "180"], ["169", "193"], ["169", "176"], ["169", "172"], ["192", "240"], ["192", "232"], ["192", "244"], ["192", "245"], ["192", "231"], ["192", "235"], ["192", "236"], ["192", "248"], ["193", "225"], ["193", "228"], ["193", "224"], ["194", "217"], ["194", "218"], ["194", "219"], ["244", "251"], ["195", "212"], ["195", "210"], ["195", "211"], ["196", "204"], ["196", "205"], ["196", "203"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,int fuck = 2001)<SUB>2</SUB>>", "29": "<(LITERAL,2001,int fuck = 2001)<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "32": "<(&lt;operator&gt;.alloc,new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>4</SUB>>", "39": "<(IDENTIFIER,$obj0,new File(&quot;input.txt&quot;))>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "44": "<(&lt;operator&gt;.alloc,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new File(&quot;output.txt&quot;))<SUB>5</SUB>>", "51": "<(IDENTIFIER,$obj2,new File(&quot;output.txt&quot;))>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "55": "<(LOCAL,int m: int)<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,int n = nextInt())<SUB>7</SUB>>", "59": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "61": "<(IDENTIFIER,m,int m = nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "65": "<(LOCAL,int[] dx: int[])<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] D = new int[fuck * fuck])<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[fuck * fuck])>", "71": "<(IDENTIFIER,fuck,fuck * fuck)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[] dx = new int[] { 1, -1, 0, 0 })<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.arrayInitializer,new int[] { 1, -1, 0, 0 })<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "79": "<(LITERAL,0,new int[] { 1, -1, 0, 0 })<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int[] dy = new int[] { 0, 0, -1, 1 })<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.arrayInitializer,new int[] { 0, 0, -1, 1 })<SUB>10</SUB>>", "85": "<(LITERAL,0,new int[] { 0, 0, -1, 1 })<SUB>10</SUB>>", "87": "<(LITERAL,1,-1)<SUB>10</SUB>>", "89": "<(fill,fill(D, -1))<SUB>11</SUB>>", "91": "<(IDENTIFIER,D,fill(D, -1))<SUB>11</SUB>>", "93": "<(LITERAL,1,-1)<SUB>11</SUB>>", "94": "<(&lt;operator&gt;.assignment,ANY Q = new ArrayDeque&lt;&gt;())<SUB>13</SUB>>", "96": "<(&lt;operator&gt;.alloc,new ArrayDeque&lt;&gt;())<SUB>13</SUB>>", "7": "<(IDENTIFIER,Q,new ArrayDeque&lt;&gt;())<SUB>13</SUB>>", "99": "<(LOCAL,int ans: int)<SUB>14</SUB>>", "101": "<(IDENTIFIER,k,int k = nextInt())<SUB>14</SUB>>", "103": "<(IDENTIFIER,in,nextInt())<SUB>14</SUB>>", "105": "<(IDENTIFIER,ans,int ans = 0)<SUB>14</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); ++i),for (int i = 0; Some(i &lt; k); ++i))<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,i &lt; k)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.preIncrement,++i)<SUB>15</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "119": "<(LOCAL,int y: int)<SUB>16</SUB>>", "121": "<(IDENTIFIER,x,int x = nextInt())<SUB>16</SUB>>", "123": "<(IDENTIFIER,in,nextInt())<SUB>16</SUB>>", "125": "<(IDENTIFIER,y,int y = nextInt())<SUB>16</SUB>>", "127": "<(IDENTIFIER,in,nextInt())<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,D[ans = (x * fuck + y)])<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,ans = x * fuck + y)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.addition,x * fuck + y)<SUB>17</SUB>>", "135": "<(IDENTIFIER,x,x * fuck)<SUB>17</SUB>>", "137": "<(IDENTIFIER,y,x * fuck + y)<SUB>17</SUB>>", "139": "<(offer,offer(ans))<SUB>18</SUB>>", "141": "<(IDENTIFIER,ans,offer(ans))<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.logicalNot,!Q.isEmpty())<SUB>21</SUB>>", "145": "<(IDENTIFIER,Q,isEmpty())<SUB>21</SUB>>", "147": "<(LOCAL,int idx: int)<SUB>22</SUB>>", "149": "<(IDENTIFIER,idx,int idx = poll())<SUB>22</SUB>>", "151": "<(IDENTIFIER,Q,poll())<SUB>22</SUB>>", "153": "<(LOCAL,int y: int)<SUB>23</SUB>>", "155": "<(IDENTIFIER,x,int x = idx / fuck)<SUB>23</SUB>>", "157": "<(IDENTIFIER,idx,idx / fuck)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.assignment,int y = idx % fuck)<SUB>23</SUB>>", "161": "<(&lt;operator&gt;.modulo,idx % fuck)<SUB>23</SUB>>", "163": "<(IDENTIFIER,fuck,idx % fuck)<SUB>23</SUB>>", "165": "<(LOCAL,int i: int)<SUB>24</SUB>>", "167": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>24</SUB>>", "171": "<(LITERAL,4,i &lt; 4)<SUB>24</SUB>>", "173": "<(IDENTIFIER,i,++i)<SUB>24</SUB>>", "175": "<(LOCAL,int wtf: int)<SUB>25</SUB>>", "177": "<(IDENTIFIER,wtf,int wtf = (dx[i] + x) * fuck + (dy[i] + y))<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.multiplication,(dx[i] + x) * fuck)<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>25</SUB>>", "183": "<(IDENTIFIER,i,dx[i] + x)<SUB>25</SUB>>", "185": "<(IDENTIFIER,fuck,(dx[i] + x) * fuck)<SUB>25</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>25</SUB>>", "189": "<(IDENTIFIER,i,dy[i] + y)<SUB>25</SUB>>", "191": "<(CONTROL_STRUCTURE,if (dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1 &amp;&amp; D[wtf] == -1),if (dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1 &amp;&amp; D[wtf] == -1))<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.logicalAnd,dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1)<SUB>26</SUB>>", "195": "<(&lt;operator&gt;.logicalAnd,dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1)<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.addition,dx[i] + x)<SUB>26</SUB>>", "199": "<(IDENTIFIER,dx,dx[i] + x)<SUB>26</SUB>>", "201": "<(IDENTIFIER,x,dx[i] + x)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.greaterEqualsThan,dx[i] + x &gt;= 1)<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>26</SUB>>", "207": "<(IDENTIFIER,i,dx[i] + x)<SUB>26</SUB>>", "209": "<(LITERAL,1,dx[i] + x &gt;= 1)<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.addition,dy[i] + y)<SUB>26</SUB>>", "213": "<(IDENTIFIER,dy,dy[i] + y)<SUB>26</SUB>>", "215": "<(IDENTIFIER,y,dy[i] + y)<SUB>26</SUB>>", "217": "<(&lt;operator&gt;.greaterEqualsThan,dy[i] + y &gt;= 1)<SUB>26</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>26</SUB>>", "221": "<(IDENTIFIER,i,dy[i] + y)<SUB>26</SUB>>", "223": "<(LITERAL,1,dy[i] + y &gt;= 1)<SUB>26</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,D[wtf])<SUB>26</SUB>>", "227": "<(IDENTIFIER,wtf,D[wtf] == -1)<SUB>26</SUB>>", "229": "<(LITERAL,1,-1)<SUB>26</SUB>>", "231": "<(&lt;operator&gt;.assignment,D[wtf] = D[idx] + 1)<SUB>27</SUB>>", "233": "<(IDENTIFIER,D,D[wtf] = D[idx] + 1)<SUB>27</SUB>>", "235": "<(&lt;operator&gt;.addition,D[idx] + 1)<SUB>27</SUB>>", "237": "<(IDENTIFIER,D,D[idx] + 1)<SUB>27</SUB>>", "239": "<(LITERAL,1,D[idx] + 1)<SUB>27</SUB>>", "241": "<(IDENTIFIER,Q,offer(wtf))<SUB>28</SUB>>", "243": "<(CONTROL_STRUCTURE,if (D[wtf] &gt;= D[ans]),if (D[wtf] &gt;= D[ans]))<SUB>30</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,D[wtf])<SUB>30</SUB>>", "247": "<(IDENTIFIER,wtf,D[wtf] &gt;= D[ans])<SUB>30</SUB>>", "249": "<(IDENTIFIER,D,D[wtf] &gt;= D[ans])<SUB>30</SUB>>", "251": "<(&lt;operator&gt;.assignment,ans = wtf)<SUB>31</SUB>>", "253": "<(IDENTIFIER,wtf,ans = wtf)<SUB>31</SUB>>", "255": "<(IDENTIFIER,out,println((ans / fuck) + &quot; &quot; + (ans % fuck)))<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.addition,(ans / fuck) + &quot; &quot;)<SUB>36</SUB>>", "259": "<(IDENTIFIER,ans,ans / fuck)<SUB>36</SUB>>", "261": "<(LITERAL,&quot; &quot;,(ans / fuck) + &quot; &quot;)<SUB>36</SUB>>", "263": "<(IDENTIFIER,ans,ans % fuck)<SUB>36</SUB>>", "265": "<(close,close())<SUB>37</SUB>>", "267": "<(close,close())<SUB>38</SUB>>", "269": "<(MODIFIER,PUBLIC)>", "271": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}