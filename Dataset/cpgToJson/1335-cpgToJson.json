{"edges": [["23", "24"], ["23", "25"], ["23", "134"], ["23", "135"], ["23", "136"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "43"], ["25", "46"], ["25", "57"], ["25", "58"], ["25", "8"], ["25", "62"], ["25", "65"], ["25", "68"], ["25", "69"], ["25", "75"], ["25", "76"], ["25", "82"], ["25", "132"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["29", "40"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["47", "48"], ["47", "51"], ["47", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "7"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "86"], ["82", "92"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["93", "94"], ["93", "95"], ["93", "101"], ["93", "102"], ["93", "115"], ["93", "120"], ["93", "127"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["97", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "114"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["26", "33"], ["29", "45"], ["43", "50"], ["46", "60"], ["58", "64"], ["62", "65"], ["65", "73"], ["69", "80"], ["76", "83"], ["132", "136"], ["28", "26"], ["40", "29"], ["45", "43"], ["60", "58"], ["64", "62"], ["71", "69"], ["78", "76"], ["83", "89"], ["83", "97"], ["31", "38"], ["34", "40"], ["48", "55"], ["51", "46"], ["73", "71"], ["80", "78"], ["87", "132"], ["33", "31"], ["36", "34"], ["50", "48"], ["53", "51"], ["89", "87"], ["95", "107"], ["102", "117"], ["115", "123"], ["120", "129"], ["127", "132"], ["38", "36"], ["55", "53"], ["97", "95"], ["104", "102"], ["117", "115"], ["122", "120"], ["129", "127"], ["105", "104"], ["123", "122"], ["106", "111"], ["111", "105"], ["107", "106"], ["23", "28"], ["24", "136"], ["26", "136"], ["34", "136"], ["34", "136"], ["34", "136"], ["29", "136"], ["29", "136"], ["43", "136"], ["48", "136"], ["51", "136"], ["51", "136"], ["51", "136"], ["46", "136"], ["60", "136"], ["58", "136"], ["58", "136"], ["62", "136"], ["65", "136"], ["65", "136"], ["69", "136"], ["76", "136"], ["78", "136"], ["80", "136"], ["78", "136"], ["76", "136"], ["76", "136"], ["83", "136"], ["83", "136"], ["97", "136"], ["95", "136"], ["95", "136"], ["106", "136"], ["105", "136"], ["111", "136"], ["105", "136"], ["104", "136"], ["102", "136"], ["102", "136"], ["117", "136"], ["115", "136"], ["115", "136"], ["122", "136"], ["120", "136"], ["120", "136"], ["129", "136"], ["127", "136"], ["127", "136"], ["87", "136"], ["87", "136"], ["132", "136"], ["132", "136"], ["97", "136"], ["23", "24"], ["23", "26"], ["23", "43"], ["60", "58"], ["23", "62"], ["71", "69"], ["71", "69"], ["78", "76"], ["78", "76"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "29"], ["40", "29"], ["43", "46"], ["23", "46"], ["48", "46"], ["51", "46"], ["62", "65"], ["23", "65"], ["58", "65"], ["127", "132"], ["87", "132"], ["23", "132"], ["23", "31"], ["23", "39"], ["23", "40"], ["23", "48"], ["23", "56"], ["29", "60"], ["23", "60"], ["23", "71"], ["73", "71"], ["71", "78"], ["23", "78"], ["80", "78"], ["69", "83"], ["23", "83"], ["31", "34"], ["23", "34"], ["48", "51"], ["23", "51"], ["65", "73"], ["23", "73"], ["73", "80"], ["23", "80"], ["46", "87"], ["23", "87"], ["97", "95"], ["97", "95"], ["97", "95"], ["104", "102"], ["104", "102"], ["117", "115"], ["117", "115"], ["122", "120"], ["122", "120"], ["23", "89"], ["102", "115"], ["23", "115"], ["46", "127"], ["23", "127"], ["120", "127"], ["23", "97"], ["76", "97"], ["105", "104"], ["105", "104"], ["23", "104"], ["107", "117"], ["23", "117"], ["115", "122"], ["23", "122"], ["120", "129"], ["23", "129"], ["106", "105"], ["106", "105"], ["111", "105"], ["111", "105"], ["115", "123"], ["23", "123"], ["107", "106"], ["107", "106"], ["23", "106"], ["83", "111"], ["23", "111"], ["95", "107"], ["23", "107"], ["83", "107"], ["83", "115"], ["83", "89"], ["83", "120"], ["83", "105"], ["83", "122"], ["83", "102"], ["83", "104"], ["83", "117"], ["83", "95"], ["83", "123"], ["83", "106"], ["83", "127"], ["83", "87"], ["83", "97"], ["83", "129"], ["83", "111"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in), 1024 * 48))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in), 1024 * 48))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in), 1024 * 48))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(LITERAL,1024,1024 * 48)<SUB>2</SUB>>", "6": "<(LOCAL,BufferedWriter bw: ANY)<SUB>3</SUB>>", "44": "<(IDENTIFIER,bw,ANY bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "46": "<(&lt;init&gt;,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "49": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "51": "<(&lt;init&gt;,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "57": "<(LOCAL,String str: java.lang.String)<SUB>4</SUB>>", "59": "<(IDENTIFIER,str,String str = readLine())<SUB>4</SUB>>", "61": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "62": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(str, &quot; &quot;))<SUB>5</SUB>>", "64": "<(&lt;operator&gt;.alloc,new StringTokenizer(str, &quot; &quot;))<SUB>5</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(str, &quot; &quot;))<SUB>5</SUB>>", "67": "<(LITERAL,&quot; &quot;,new StringTokenizer(str, &quot; &quot;))<SUB>5</SUB>>", "69": "<(&lt;operator&gt;.assignment,long x = parseLong(st.nextToken()))<SUB>6</SUB>>", "71": "<(parseLong,parseLong(st.nextToken()))<SUB>6</SUB>>", "73": "<(nextToken,nextToken())<SUB>6</SUB>>", "75": "<(LOCAL,long k: long)<SUB>7</SUB>>", "77": "<(IDENTIFIER,k,long k = parseLong(st.nextToken()))<SUB>7</SUB>>", "79": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>7</SUB>>", "81": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.equals,x == 0)<SUB>8</SUB>>", "85": "<(LITERAL,0,x == 0)<SUB>8</SUB>>", "87": "<(write,write(0 + &quot;\\n&quot;))<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.addition,0 + &quot;\\n&quot;)<SUB>9</SUB>>", "91": "<(LITERAL,&quot;\\n&quot;,0 + &quot;\\n&quot;)<SUB>9</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,int power = power(k, 1000000007))<SUB>11</SUB>>", "97": "<(power,power(k, 1000000007))<SUB>11</SUB>>", "99": "<(IDENTIFIER,k,power(k, 1000000007))<SUB>11</SUB>>", "101": "<(LOCAL,long answer: long)<SUB>12</SUB>>", "103": "<(IDENTIFIER,answer,long answer = (((power * 2) % 1000000007) * (x % 1000000007)) % 1000000007)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.multiplication,((power * 2) % 1000000007) * (x % 1000000007))<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.multiplication,power * 2)<SUB>12</SUB>>", "109": "<(LITERAL,2,power * 2)<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.modulo,x % 1000000007)<SUB>12</SUB>>", "113": "<(LITERAL,1000000007,x % 1000000007)<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.assignmentMinus,answer -= power - 1)<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.subtraction,power - 1)<SUB>13</SUB>>", "119": "<(LITERAL,1,power - 1)<SUB>13</SUB>>", "121": "<(IDENTIFIER,answer,answer = (answer + 1000000007) % 1000000007)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.addition,answer + 1000000007)<SUB>14</SUB>>", "125": "<(LITERAL,1000000007,answer + 1000000007)<SUB>14</SUB>>", "127": "<(write,write(answer + &quot;\\n&quot;))<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.addition,answer + &quot;\\n&quot;)<SUB>15</SUB>>", "131": "<(LITERAL,&quot;\\n&quot;,answer + &quot;\\n&quot;)<SUB>15</SUB>>", "133": "<(IDENTIFIER,bw,flush())<SUB>17</SUB>>", "135": "<(MODIFIER,STATIC)>"}}