{"edges": [["21", "23"], ["21", "331"], ["21", "332"], ["21", "333"], ["23", "24"], ["23", "27"], ["23", "39"], ["23", "42"], ["23", "54"], ["23", "55"], ["23", "61"], ["23", "62"], ["23", "66"], ["23", "67"], ["23", "4"], ["23", "72"], ["23", "75"], ["23", "76"], ["23", "79"], ["23", "83"], ["23", "189"], ["23", "6"], ["23", "253"], ["23", "256"], ["23", "257"], ["23", "258"], ["23", "263"], ["23", "287"], ["23", "295"], ["23", "327"], ["23", "329"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "48"], ["44", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "3"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "102"], ["93", "103"], ["93", "106"], ["93", "115"], ["93", "138"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "124"], ["116", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["124", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "135"], ["131", "137"], ["132", "133"], ["132", "134"], ["135", "136"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "166"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "163"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "175"], ["167", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["175", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "186"], ["182", "188"], ["183", "184"], ["183", "185"], ["186", "187"], ["189", "190"], ["189", "191"], ["189", "194"], ["189", "197"], ["189", "199"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["197", "198"], ["199", "200"], ["200", "201"], ["200", "202"], ["200", "205"], ["200", "208"], ["200", "210"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["210", "212"], ["210", "219"], ["210", "220"], ["210", "225"], ["210", "226"], ["210", "230"], ["210", "242"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["232", "233"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "241"], ["239", "240"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "5"], ["258", "259"], ["258", "260"], ["260", "261"], ["261", "262"], ["263", "264"], ["263", "266"], ["264", "265"], ["266", "267"], ["266", "268"], ["266", "272"], ["266", "273"], ["266", "277"], ["268", "269"], ["268", "270"], ["270", "271"], ["273", "274"], ["273", "275"], ["275", "276"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "281"], ["279", "280"], ["281", "282"], ["283", "284"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "294"], ["290", "291"], ["290", "293"], ["291", "292"], ["295", "296"], ["295", "297"], ["295", "300"], ["295", "304"], ["295", "307"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["302", "303"], ["304", "305"], ["304", "306"], ["307", "308"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "326"], ["311", "312"], ["311", "319"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["319", "320"], ["319", "325"], ["320", "321"], ["320", "322"], ["322", "323"], ["322", "324"], ["327", "328"], ["329", "330"], ["24", "32"], ["27", "41"], ["39", "47"], ["42", "59"], ["55", "64"], ["62", "69"], ["67", "74"], ["72", "75"], ["75", "78"], ["76", "81"], ["79", "85"], ["253", "256"], ["256", "261"], ["258", "264"], ["287", "297"], ["327", "329"], ["329", "333"], ["26", "24"], ["41", "39"], ["57", "55"], ["64", "62"], ["69", "67"], ["74", "72"], ["78", "76"], ["81", "79"], ["85", "88"], ["88", "95"], ["88", "191"], ["91", "88"], ["191", "194"], ["194", "202"], ["194", "255"], ["197", "194"], ["255", "253"], ["260", "258"], ["264", "270"], ["264", "291"], ["289", "287"], ["297", "302"], ["300", "314"], ["300", "327"], ["304", "302"], ["30", "37"], ["33", "27"], ["45", "52"], ["48", "42"], ["59", "57"], ["94", "103"], ["103", "108"], ["106", "120"], ["261", "260"], ["268", "275"], ["273", "279"], ["290", "289"], ["302", "300"], ["308", "304"], ["32", "30"], ["35", "33"], ["47", "45"], ["50", "48"], ["95", "100"], ["98", "94"], ["107", "112"], ["112", "106"], ["116", "127"], ["116", "140"], ["124", "140"], ["140", "143"], ["143", "151"], ["143", "91"], ["146", "143"], ["202", "205"], ["205", "215"], ["205", "197"], ["208", "205"], ["270", "268"], ["275", "273"], ["278", "264"], ["278", "284"], ["291", "290"], ["310", "308"], ["37", "35"], ["52", "50"], ["100", "98"], ["108", "107"], ["117", "116"], ["126", "134"], ["149", "171"], ["212", "222"], ["220", "228"], ["226", "232"], ["279", "281"], ["281", "278"], ["284", "264"], ["311", "310"], ["119", "117"], ["127", "126"], ["132", "135"], ["135", "124"], ["150", "157"], ["155", "149"], ["167", "178"], ["167", "146"], ["175", "146"], ["214", "212"], ["222", "220"], ["228", "226"], ["231", "239"], ["231", "243"], ["234", "243"], ["243", "247"], ["243", "208"], ["312", "322"], ["319", "311"], ["120", "119"], ["134", "132"], ["151", "150"], ["156", "163"], ["163", "155"], ["168", "167"], ["177", "185"], ["215", "214"], ["232", "231"], ["236", "234"], ["247", "250"], ["250", "208"], ["313", "312"], ["320", "319"], ["157", "160"], ["160", "156"], ["170", "168"], ["178", "177"], ["183", "186"], ["186", "175"], ["238", "236"], ["314", "313"], ["322", "320"], ["171", "170"], ["185", "183"], ["239", "238"], ["21", "26"], ["22", "333"], ["24", "333"], ["33", "333"], ["33", "333"], ["33", "333"], ["27", "333"], ["39", "333"], ["48", "333"], ["48", "333"], ["48", "333"], ["42", "333"], ["57", "333"], ["55", "333"], ["55", "333"], ["62", "333"], ["62", "333"], ["62", "333"], ["67", "333"], ["67", "333"], ["67", "333"], ["72", "333"], ["75", "333"], ["76", "333"], ["79", "333"], ["79", "333"], ["79", "333"], ["88", "333"], ["191", "333"], ["194", "333"], ["194", "333"], ["194", "333"], ["253", "333"], ["256", "333"], ["261", "333"], ["260", "333"], ["258", "333"], ["264", "333"], ["264", "333"], ["289", "333"], ["287", "333"], ["287", "333"], ["297", "333"], ["300", "333"], ["302", "333"], ["300", "333"], ["300", "333"], ["327", "333"], ["329", "333"], ["329", "333"], ["313", "333"], ["312", "333"], ["311", "333"], ["320", "333"], ["319", "333"], ["311", "333"], ["310", "333"], ["308", "333"], ["308", "333"], ["304", "333"], ["275", "333"], ["273", "333"], ["273", "333"], ["279", "333"], ["278", "333"], ["284", "333"], ["284", "333"], ["202", "333"], ["205", "333"], ["205", "333"], ["197", "333"], ["212", "333"], ["212", "333"], ["222", "333"], ["220", "333"], ["220", "333"], ["226", "333"], ["226", "333"], ["232", "333"], ["231", "333"], ["231", "333"], ["236", "333"], ["236", "333"], ["234", "333"], ["234", "333"], ["243", "333"], ["243", "333"], ["247", "333"], ["250", "333"], ["250", "333"], ["208", "333"], ["94", "333"], ["98", "333"], ["100", "333"], ["98", "333"], ["94", "333"], ["94", "333"], ["103", "333"], ["106", "333"], ["106", "333"], ["117", "333"], ["116", "333"], ["116", "333"], ["124", "333"], ["135", "333"], ["124", "333"], ["140", "333"], ["143", "333"], ["143", "333"], ["91", "333"], ["155", "333"], ["155", "333"], ["149", "333"], ["149", "333"], ["168", "333"], ["167", "333"], ["167", "333"], ["175", "333"], ["186", "333"], ["175", "333"], ["146", "333"], ["21", "22"], ["21", "24"], ["21", "39"], ["57", "55"], ["57", "55"], ["64", "62"], ["69", "67"], ["21", "72"], ["21", "76"], ["21", "253"], ["260", "258"], ["24", "27"], ["21", "27"], ["30", "27"], ["33", "27"], ["39", "42"], ["21", "42"], ["45", "42"], ["48", "42"], ["72", "75"], ["21", "75"], ["76", "79"], ["21", "79"], ["81", "79"], ["21", "85"], ["21", "191"], ["253", "256"], ["21", "256"], ["42", "287"], ["21", "287"], ["290", "287"], ["290", "287"], ["21", "297"], ["21", "304"], ["81", "327"], ["21", "327"], ["287", "329"], ["308", "329"], ["21", "329"], ["21", "30"], ["21", "38"], ["21", "45"], ["21", "53"], ["21", "57"], ["59", "57"], ["55", "64"], ["21", "64"], ["64", "69"], ["21", "69"], ["59", "81"], ["21", "81"], ["85", "88"], ["91", "88"], ["21", "88"], ["69", "88"], ["21", "91"], ["88", "91"], ["98", "94"], ["98", "94"], ["88", "103"], ["21", "103"], ["62", "106"], ["191", "194"], ["197", "194"], ["21", "194"], ["88", "194"], ["205", "197"], ["21", "197"], ["261", "260"], ["258", "264"], ["270", "264"], ["21", "264"], ["270", "268"], ["275", "273"], ["290", "289"], ["290", "289"], ["21", "289"], ["297", "300"], ["304", "300"], ["21", "300"], ["302", "300"], ["314", "304"], ["30", "33"], ["21", "33"], ["45", "48"], ["21", "48"], ["27", "59"], ["21", "59"], ["21", "140"], ["21", "202"], ["75", "261"], ["222", "261"], ["117", "261"], ["124", "261"], ["168", "261"], ["175", "261"], ["21", "261"], ["291", "290"], ["21", "290"], ["291", "302"], ["320", "302"], ["21", "302"], ["287", "308"], ["21", "308"], ["314", "308"], ["314", "308"], ["320", "308"], ["320", "308"], ["57", "98"], ["21", "98"], ["100", "98"], ["117", "116"], ["117", "116"], ["117", "124"], ["21", "124"], ["117", "124"], ["132", "124"], ["135", "124"], ["140", "143"], ["146", "143"], ["21", "143"], ["103", "143"], ["160", "143"], ["143", "146"], ["21", "146"], ["62", "149"], ["202", "205"], ["208", "205"], ["21", "205"], ["194", "205"], ["250", "205"], ["243", "208"], ["247", "208"], ["21", "208"], ["168", "212"], ["175", "212"], ["222", "220"], ["222", "220"], ["228", "226"], ["264", "270"], ["21", "270"], ["268", "275"], ["21", "275"], ["279", "278"], ["281", "278"], ["279", "284"], ["21", "284"], ["256", "291"], ["281", "291"], ["284", "291"], ["21", "291"], ["314", "310"], ["314", "310"], ["21", "310"], ["320", "310"], ["320", "310"], ["79", "100"], ["21", "100"], ["75", "117"], ["124", "117"], ["168", "117"], ["175", "117"], ["21", "117"], ["106", "117"], ["21", "132"], ["21", "137"], ["236", "234"], ["236", "234"], ["273", "279"], ["21", "279"], ["256", "281"], ["284", "281"], ["21", "281"], ["314", "311"], ["314", "311"], ["21", "311"], ["320", "311"], ["320", "311"], ["132", "135"], ["21", "135"], ["62", "155"], ["168", "167"], ["168", "167"], ["168", "175"], ["21", "175"], ["168", "175"], ["183", "175"], ["186", "175"], ["75", "222"], ["117", "222"], ["124", "222"], ["168", "222"], ["175", "222"], ["21", "222"], ["212", "222"], ["21", "228"], ["232", "231"], ["205", "243"], ["21", "243"], ["226", "243"], ["234", "243"], ["314", "312"], ["314", "312"], ["21", "312"], ["320", "319"], ["320", "319"], ["21", "319"], ["117", "168"], ["124", "168"], ["175", "168"], ["21", "168"], ["149", "168"], ["21", "183"], ["21", "188"], ["220", "232"], ["21", "232"], ["239", "236"], ["21", "236"], ["238", "236"], ["238", "236"], ["232", "247"], ["236", "247"], ["21", "247"], ["243", "247"], ["247", "250"], ["21", "250"], ["205", "250"], ["314", "313"], ["314", "313"], ["21", "313"], ["314", "320"], ["21", "320"], ["314", "320"], ["143", "160"], ["21", "160"], ["183", "186"], ["21", "186"], ["239", "238"], ["21", "238"], ["302", "314"], ["21", "314"], ["300", "314"], ["314", "322"], ["21", "322"], ["232", "239"], ["21", "239"], ["88", "107"], ["88", "94"], ["88", "98"], ["88", "120"], ["88", "103"], ["88", "119"], ["88", "95"], ["88", "91"], ["88", "112"], ["88", "100"], ["88", "88"], ["88", "108"], ["88", "116"], ["88", "106"], ["88", "140"], ["88", "143"], ["88", "117"], ["194", "197"], ["194", "194"], ["194", "202"], ["194", "205"], ["264", "273"], ["264", "279"], ["264", "275"], ["264", "264"], ["264", "281"], ["264", "268"], ["264", "270"], ["264", "278"], ["300", "319"], ["300", "320"], ["300", "308"], ["300", "322"], ["300", "300"], ["300", "302"], ["300", "314"], ["300", "304"], ["300", "311"], ["300", "310"], ["300", "313"], ["300", "312"], ["116", "132"], ["116", "134"], ["116", "127"], ["116", "126"], ["116", "135"], ["116", "124"], ["143", "167"], ["143", "146"], ["143", "163"], ["143", "149"], ["143", "150"], ["143", "151"], ["143", "168"], ["143", "170"], ["143", "155"], ["143", "171"], ["143", "160"], ["143", "157"], ["143", "143"], ["143", "156"], ["205", "214"], ["205", "215"], ["205", "232"], ["205", "226"], ["205", "243"], ["205", "228"], ["205", "208"], ["205", "231"], ["205", "212"], ["205", "205"], ["205", "220"], ["205", "222"], ["278", "284"], ["167", "178"], ["167", "185"], ["167", "186"], ["167", "183"], ["167", "177"], ["167", "175"], ["231", "238"], ["231", "239"], ["231", "236"], ["231", "234"], ["243", "247"], ["243", "250"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "33": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "37": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "39": "<(&lt;operator&gt;.assignment,bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "43": "<(IDENTIFIER,bw,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "49": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "51": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "55": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>5</SUB>>", "57": "<(parseInt,parseInt(br.readLine()))<SUB>5</SUB>>", "59": "<(readLine,readLine())<SUB>5</SUB>>", "61": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "63": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>6</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[][] b = new int[n][n])<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n][n])>", "71": "<(IDENTIFIER,n,new int[n][n])<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.assignment,ANY map = new HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "74": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "3": "<(IDENTIFIER,map,new HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "77": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "79": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "81": "<(readLine,readLine())<SUB>10</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.preIncrement,++i)<SUB>11</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,a[i] = parseInt(st.nextToken()))<SUB>12</SUB>>", "99": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>12</SUB>>", "101": "<(IDENTIFIER,st,nextToken())<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.assignment,int r = i)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,int r = i)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,b[r][r])<SUB>15</SUB>>", "109": "<(IDENTIFIER,b,b[r][r] = a[r])<SUB>15</SUB>>", "111": "<(IDENTIFIER,r,b[r][r] = a[r])<SUB>15</SUB>>", "113": "<(IDENTIFIER,a,b[r][r] = a[r])<SUB>15</SUB>>", "115": "<(CONTROL_STRUCTURE,if (!map.containsKey(b[r][r])),if (!map.containsKey(b[r][r])))<SUB>16</SUB>>", "117": "<(containsKey,containsKey(b[r][r]))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,b[r][r])<SUB>16</SUB>>", "121": "<(IDENTIFIER,b,containsKey(b[r][r]))<SUB>16</SUB>>", "123": "<(IDENTIFIER,r,containsKey(b[r][r]))<SUB>16</SUB>>", "125": "<(IDENTIFIER,map,put(b[r][r], new ArrayList&lt;Integer&gt;()))<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,b[r])<SUB>17</SUB>>", "129": "<(IDENTIFIER,r,put(b[r][r], new ArrayList&lt;Integer&gt;()))<SUB>17</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "133": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "135": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>17</SUB>>", "137": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "139": "<(LOCAL,int l: int)<SUB>18</SUB>>", "141": "<(IDENTIFIER,l,int l = 0)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.lessThan,l &lt; r)<SUB>18</SUB>>", "145": "<(IDENTIFIER,r,l &lt; r)<SUB>18</SUB>>", "147": "<(IDENTIFIER,l,++l)<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.assignment,b[l][r] = b[l][r - 1] + a[r])<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,b[l])<SUB>19</SUB>>", "153": "<(IDENTIFIER,l,b[l][r] = b[l][r - 1] + a[r])<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.addition,b[l][r - 1] + a[r])<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,b[l])<SUB>19</SUB>>", "159": "<(IDENTIFIER,l,b[l][r - 1] + a[r])<SUB>19</SUB>>", "161": "<(IDENTIFIER,r,r - 1)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,a[r])<SUB>19</SUB>>", "165": "<(IDENTIFIER,r,b[l][r - 1] + a[r])<SUB>19</SUB>>", "167": "<(&lt;operator&gt;.logicalNot,!map.containsKey(b[l][r]))<SUB>20</SUB>>", "169": "<(IDENTIFIER,map,containsKey(b[l][r]))<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,b[l])<SUB>20</SUB>>", "173": "<(IDENTIFIER,l,containsKey(b[l][r]))<SUB>20</SUB>>", "175": "<(put,put(b[l][r], new ArrayList&lt;Integer&gt;()))<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,b[l][r])<SUB>21</SUB>>", "179": "<(IDENTIFIER,b,put(b[l][r], new ArrayList&lt;Integer&gt;()))<SUB>21</SUB>>", "181": "<(IDENTIFIER,r,put(b[l][r], new ArrayList&lt;Integer&gt;()))<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "185": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "187": "<(IDENTIFIER,$obj7,new ArrayList&lt;Integer&gt;())>", "189": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; n); ++r),for (int r = 0; Some(r &lt; n); ++r))<SUB>26</SUB>>", "191": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>26</SUB>>", "193": "<(LITERAL,0,int r = 0)<SUB>26</SUB>>", "195": "<(IDENTIFIER,r,r &lt; n)<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.preIncrement,++r)<SUB>26</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "201": "<(LOCAL,int l: int)<SUB>27</SUB>>", "203": "<(IDENTIFIER,l,int l = 0)<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= r)<SUB>27</SUB>>", "207": "<(IDENTIFIER,r,l &lt;= r)<SUB>27</SUB>>", "209": "<(IDENTIFIER,l,++l)<SUB>27</SUB>>", "211": "<(LOCAL,int sum: int)<SUB>28</SUB>>", "213": "<(IDENTIFIER,sum,int sum = b[l][r])<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,b[l])<SUB>28</SUB>>", "217": "<(IDENTIFIER,l,int sum = b[l][r])<SUB>28</SUB>>", "219": "<(LOCAL,ArrayList&lt;Integer&gt; intervals: ANY)<SUB>29</SUB>>", "221": "<(IDENTIFIER,intervals,ANY intervals = get(sum))<SUB>29</SUB>>", "223": "<(IDENTIFIER,map,get(sum))<SUB>29</SUB>>", "225": "<(LOCAL,int last_r: int)<SUB>30</SUB>>", "227": "<(IDENTIFIER,last_r,int last_r = -1)<SUB>30</SUB>>", "229": "<(LITERAL,1,-1)<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.logicalNot,!intervals.isEmpty())<SUB>31</SUB>>", "233": "<(IDENTIFIER,intervals,isEmpty())<SUB>31</SUB>>", "235": "<(IDENTIFIER,last_r,last_r = get(intervals.size() - 1))<SUB>32</SUB>>", "237": "<(IDENTIFIER,intervals,get(intervals.size() - 1))<SUB>32</SUB>>", "239": "<(size,size())<SUB>32</SUB>>", "241": "<(LITERAL,1,intervals.size() - 1)<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.greaterThan,l &gt; last_r)<SUB>34</SUB>>", "245": "<(IDENTIFIER,last_r,l &gt; last_r)<SUB>34</SUB>>", "247": "<(add,add(l))<SUB>35</SUB>>", "249": "<(IDENTIFIER,l,add(l))<SUB>35</SUB>>", "251": "<(IDENTIFIER,intervals,add(r))<SUB>36</SUB>>", "6": "<(LOCAL,ArrayList&lt;Integer&gt; best_intervals: ANY)<SUB>43</SUB>>", "254": "<(IDENTIFIER,best_intervals,ANY best_intervals = new ArrayList&lt;Integer&gt;())<SUB>43</SUB>>", "256": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>43</SUB>>", "257": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>45</SUB>>", "259": "<(IDENTIFIER,$iterLocal0,)<SUB>45</SUB>>", "261": "<(entrySet,entrySet())<SUB>45</SUB>>", "263": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>45</SUB>>", "265": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "267": "<(LOCAL,entry: ANY)<SUB>45</SUB>>", "269": "<(IDENTIFIER,entry,&lt;empty&gt;)>", "271": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "273": "<(&lt;operator&gt;.assignment,ANY intervals = getValue())<SUB>47</SUB>>", "275": "<(getValue,getValue())<SUB>47</SUB>>", "277": "<(CONTROL_STRUCTURE,if (intervals.size() &gt; best_intervals.size()),if (intervals.size() &gt; best_intervals.size()))<SUB>49</SUB>>", "279": "<(size,size())<SUB>49</SUB>>", "281": "<(size,size())<SUB>49</SUB>>", "283": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "285": "<(IDENTIFIER,best_intervals,best_intervals = intervals)<SUB>50</SUB>>", "287": "<(write,write(best_intervals.size() / 2 + &quot;\\n&quot;))<SUB>54</SUB>>", "289": "<(&lt;operator&gt;.addition,best_intervals.size() / 2 + &quot;\\n&quot;)<SUB>54</SUB>>", "291": "<(size,size())<SUB>54</SUB>>", "293": "<(LITERAL,2,best_intervals.size() / 2)<SUB>54</SUB>>", "295": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; best_intervals.size()); i += 2),for (int i = 0; Some(i &lt; best_intervals.size()); i += 2))<SUB>55</SUB>>", "297": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>55</SUB>>", "299": "<(LITERAL,0,int i = 0)<SUB>55</SUB>>", "301": "<(IDENTIFIER,i,i &lt; best_intervals.size())<SUB>55</SUB>>", "303": "<(IDENTIFIER,best_intervals,size())<SUB>55</SUB>>", "305": "<(IDENTIFIER,i,i += 2)<SUB>55</SUB>>", "307": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "309": "<(IDENTIFIER,bw,write((best_intervals.get(i) + 1) + &quot; &quot; + (best_intervals.get(i + 1) + 1) + &quot;\\n&quot;))<SUB>56</SUB>>", "311": "<(&lt;operator&gt;.addition,(best_intervals.get(i) + 1) + &quot; &quot; + (best_intervals.get(i + 1) + 1))<SUB>56</SUB>>", "313": "<(&lt;operator&gt;.addition,best_intervals.get(i) + 1)<SUB>56</SUB>>", "315": "<(IDENTIFIER,best_intervals,get(i))<SUB>56</SUB>>", "317": "<(LITERAL,1,best_intervals.get(i) + 1)<SUB>56</SUB>>", "319": "<(&lt;operator&gt;.addition,best_intervals.get(i + 1) + 1)<SUB>56</SUB>>", "321": "<(IDENTIFIER,best_intervals,get(i + 1))<SUB>56</SUB>>", "323": "<(IDENTIFIER,i,i + 1)<SUB>56</SUB>>", "325": "<(LITERAL,1,best_intervals.get(i + 1) + 1)<SUB>56</SUB>>", "327": "<(close,close())<SUB>60</SUB>>", "329": "<(close,close())<SUB>61</SUB>>", "331": "<(MODIFIER,PUBLIC)>", "333": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}