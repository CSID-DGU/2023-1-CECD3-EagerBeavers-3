{"edges": [["19", "20"], ["19", "21"], ["19", "84"], ["19", "85"], ["19", "86"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "41"], ["21", "42"], ["21", "49"], ["21", "63"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "59"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["55", "56"], ["55", "57"], ["55", "58"], ["59", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["63", "73"], ["64", "65"], ["64", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["74", "75"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "39"], ["39", "46"], ["42", "51"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "42"], ["50", "60"], ["50", "64"], ["64", "71"], ["64", "78"], ["28", "26"], ["46", "44"], ["51", "50"], ["51", "55"], ["54", "50"], ["60", "51"], ["68", "86"], ["55", "54"], ["69", "68"], ["75", "86"], ["71", "69"], ["76", "80"], ["79", "75"], ["78", "76"], ["80", "79"], ["19", "24"], ["20", "86"], ["22", "86"], ["25", "86"], ["25", "86"], ["30", "86"], ["35", "86"], ["35", "86"], ["39", "86"], ["39", "86"], ["44", "86"], ["44", "86"], ["42", "86"], ["42", "86"], ["50", "86"], ["55", "86"], ["54", "86"], ["50", "86"], ["50", "86"], ["64", "86"], ["64", "86"], ["64", "86"], ["68", "86"], ["68", "86"], ["60", "86"], ["55", "86"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["44", "42"], ["44", "42"], ["22", "25"], ["19", "25"], ["37", "39"], ["19", "39"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["46", "44"], ["19", "44"], ["46", "44"], ["51", "50"], ["51", "50"], ["54", "50"], ["19", "60"], ["51", "64"], ["55", "64"], ["19", "64"], ["51", "64"], ["35", "46"], ["19", "46"], ["42", "51"], ["60", "51"], ["19", "51"], ["30", "51"], ["55", "54"], ["55", "54"], ["55", "54"], ["51", "60"], ["55", "60"], ["19", "68"], ["19", "55"], ["51", "55"], ["44", "55"], ["80", "75"], ["80", "75"], ["19", "75"], ["80", "79"], ["80", "79"], ["19", "79"], ["64", "80"], ["19", "80"], ["64", "80"], ["50", "60"], ["50", "51"], ["50", "50"], ["64", "80"], ["64", "68"], ["64", "71"], ["64", "75"], ["64", "69"], ["64", "76"], ["64", "78"], ["64", "79"], ["51", "55"], ["51", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long s = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(close,close())<SUB>5</SUB>>", "41": "<(LOCAL,long start: long)<SUB>6</SUB>>", "43": "<(IDENTIFIER,start,long start = s - s % 10)<SUB>6</SUB>>", "45": "<(IDENTIFIER,s,s - s % 10)<SUB>6</SUB>>", "47": "<(IDENTIFIER,s,s % 10)<SUB>6</SUB>>", "49": "<(CONTROL_STRUCTURE,while (start &lt;= n &amp;&amp; !isBig(start, s)),while (start &lt;= n &amp;&amp; !isBig(start, s)))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.lessEqualsThan,start &lt;= n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,n,start &lt;= n)<SUB>7</SUB>>", "55": "<(isBig,isBig(start, s))<SUB>7</SUB>>", "57": "<(IDENTIFIER,start,isBig(start, s))<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "61": "<(IDENTIFIER,start,start += 10)<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,if (start &gt; n),if (start &gt; n))<SUB>10</SUB>>", "65": "<(IDENTIFIER,start,start &gt; n)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "71": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "75": "<(println,System.out.println(n - start + 1))<SUB>13</SUB>>", "77": "<(IDENTIFIER,System,System.out.println(n - start + 1))<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.addition,n - start + 1)<SUB>13</SUB>>", "81": "<(IDENTIFIER,n,n - start)<SUB>13</SUB>>", "83": "<(LITERAL,1,n - start + 1)<SUB>13</SUB>>", "85": "<(MODIFIER,STATIC)>"}}