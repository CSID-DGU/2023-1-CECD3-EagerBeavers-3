{"edges": [["19", "20"], ["19", "21"], ["19", "394"], ["19", "395"], ["19", "396"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "30"], ["21", "34"], ["21", "38"], ["21", "45"], ["21", "52"], ["21", "84"], ["21", "116"], ["21", "117"], ["21", "123"], ["21", "338"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "73"], ["63", "75"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "94"], ["84", "96"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "105"], ["97", "107"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["119", "122"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "131"], ["123", "134"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "166"], ["156", "209"], ["156", "252"], ["156", "295"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["171", "172"], ["171", "179"], ["172", "173"], ["172", "178"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "181"], ["179", "188"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["188", "189"], ["188", "200"], ["189", "190"], ["189", "199"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "215"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["224", "225"], ["224", "226"], ["224", "233"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["233", "234"], ["233", "245"], ["234", "235"], ["234", "244"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["256", "257"], ["257", "258"], ["257", "265"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["265", "266"], ["265", "267"], ["265", "274"], ["267", "268"], ["267", "273"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["274", "275"], ["274", "286"], ["275", "276"], ["275", "283"], ["276", "277"], ["276", "282"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["302", "303"], ["302", "310"], ["303", "304"], ["303", "309"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["310", "311"], ["310", "312"], ["310", "319"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["319", "320"], ["319", "331"], ["320", "321"], ["320", "328"], ["321", "322"], ["321", "327"], ["322", "323"], ["322", "324"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["338", "339"], ["338", "340"], ["338", "343"], ["338", "346"], ["338", "348"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["346", "347"], ["348", "349"], ["348", "390"], ["349", "350"], ["349", "351"], ["349", "354"], ["349", "357"], ["349", "359"], ["351", "352"], ["351", "353"], ["354", "355"], ["354", "356"], ["357", "358"], ["359", "360"], ["360", "361"], ["360", "366"], ["360", "375"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["366", "367"], ["367", "368"], ["367", "371"], ["368", "369"], ["368", "370"], ["371", "372"], ["371", "374"], ["372", "373"], ["375", "376"], ["376", "377"], ["377", "378"], ["377", "381"], ["378", "379"], ["378", "380"], ["381", "382"], ["381", "389"], ["382", "383"], ["382", "388"], ["383", "384"], ["383", "387"], ["384", "385"], ["384", "386"], ["390", "391"], ["391", "392"], ["391", "393"], ["22", "25"], ["25", "28"], ["26", "32"], ["30", "36"], ["34", "42"], ["38", "48"], ["45", "54"], ["117", "125"], ["24", "22"], ["28", "26"], ["32", "30"], ["36", "34"], ["40", "38"], ["47", "45"], ["54", "57"], ["57", "65"], ["57", "86"], ["60", "57"], ["86", "91"], ["89", "99"], ["89", "119"], ["94", "91"], ["119", "117"], ["125", "128"], ["128", "137"], ["128", "340"], ["131", "128"], ["340", "343"], ["343", "396"], ["343", "351"], ["346", "343"], ["42", "40"], ["48", "47"], ["91", "89"], ["390", "346"], ["65", "70"], ["68", "78"], ["68", "60"], ["73", "70"], ["99", "102"], ["102", "110"], ["102", "94"], ["105", "102"], ["137", "140"], ["140", "148"], ["140", "131"], ["143", "140"], ["351", "354"], ["354", "362"], ["354", "393"], ["357", "354"], ["391", "390"], ["70", "68"], ["76", "73"], ["108", "105"], ["393", "391"], ["77", "82"], ["82", "76"], ["109", "114"], ["114", "108"], ["148", "151"], ["151", "160"], ["151", "143"], ["154", "151"], ["361", "370"], ["361", "380"], ["78", "77"], ["110", "109"], ["157", "167"], ["362", "361"], ["367", "357"], ["158", "157"], ["167", "174"], ["167", "211"], ["210", "219"], ["210", "253"], ["253", "260"], ["253", "297"], ["296", "305"], ["296", "154"], ["368", "372"], ["371", "367"], ["377", "357"], ["159", "158"], ["171", "211"], ["211", "210"], ["216", "253"], ["257", "297"], ["297", "296"], ["302", "154"], ["370", "368"], ["372", "371"], ["378", "384"], ["381", "377"], ["160", "159"], ["172", "183"], ["179", "171"], ["217", "228"], ["224", "216"], ["258", "269"], ["265", "257"], ["303", "314"], ["310", "302"], ["380", "378"], ["382", "381"], ["173", "172"], ["181", "193"], ["188", "179"], ["218", "217"], ["226", "238"], ["233", "224"], ["259", "258"], ["267", "279"], ["274", "265"], ["304", "303"], ["312", "324"], ["319", "310"], ["383", "382"], ["174", "173"], ["182", "181"], ["189", "205"], ["200", "188"], ["219", "218"], ["227", "226"], ["234", "248"], ["245", "233"], ["260", "259"], ["268", "267"], ["275", "289"], ["286", "274"], ["305", "304"], ["313", "312"], ["320", "334"], ["331", "319"], ["384", "383"], ["183", "182"], ["190", "189"], ["202", "200"], ["228", "227"], ["235", "234"], ["247", "245"], ["269", "268"], ["276", "283"], ["283", "275"], ["288", "286"], ["314", "313"], ["321", "328"], ["328", "320"], ["333", "331"], ["191", "196"], ["196", "190"], ["203", "202"], ["236", "241"], ["241", "235"], ["248", "247"], ["277", "276"], ["289", "292"], ["292", "288"], ["322", "321"], ["334", "333"], ["193", "191"], ["205", "203"], ["238", "236"], ["279", "277"], ["324", "322"], ["19", "24"], ["20", "396"], ["22", "396"], ["25", "396"], ["26", "396"], ["30", "396"], ["36", "396"], ["34", "396"], ["34", "396"], ["38", "396"], ["40", "396"], ["38", "396"], ["38", "396"], ["45", "396"], ["45", "396"], ["45", "396"], ["89", "396"], ["89", "396"], ["117", "396"], ["119", "396"], ["117", "396"], ["117", "396"], ["125", "396"], ["128", "396"], ["128", "396"], ["128", "396"], ["340", "396"], ["343", "396"], ["343", "396"], ["343", "396"], ["346", "396"], ["131", "396"], ["94", "396"], ["60", "396"], ["19", "20"], ["19", "22"], ["28", "26"], ["32", "30"], ["36", "34"], ["40", "38"], ["40", "38"], ["47", "45"], ["47", "45"], ["119", "117"], ["119", "117"], ["119", "117"], ["22", "25"], ["19", "25"], ["19", "54"], ["19", "86"], ["19", "125"], ["19", "131"], ["19", "340"], ["25", "28"], ["19", "28"], ["28", "32"], ["19", "32"], ["32", "36"], ["19", "36"], ["26", "40"], ["19", "40"], ["42", "40"], ["42", "40"], ["48", "47"], ["48", "47"], ["42", "47"], ["19", "47"], ["54", "57"], ["60", "57"], ["19", "57"], ["48", "57"], ["57", "60"], ["19", "60"], ["86", "89"], ["94", "89"], ["19", "89"], ["91", "89"], ["91", "89"], ["89", "94"], ["19", "94"], ["19", "119"], ["91", "119"], ["47", "119"], ["102", "119"], ["70", "119"], ["125", "128"], ["131", "128"], ["19", "128"], ["34", "128"], ["128", "131"], ["193", "131"], ["238", "131"], ["279", "131"], ["324", "131"], ["340", "343"], ["346", "343"], ["19", "343"], ["119", "343"], ["140", "343"], ["343", "346"], ["19", "346"], ["30", "42"], ["19", "42"], ["40", "48"], ["19", "48"], ["19", "65"], ["57", "91"], ["19", "91"], ["19", "99"], ["19", "137"], ["19", "351"], ["377", "390"], ["367", "390"], ["65", "68"], ["73", "68"], ["19", "68"], ["70", "68"], ["70", "68"], ["68", "73"], ["19", "73"], ["82", "76"], ["99", "102"], ["105", "102"], ["19", "102"], ["47", "102"], ["70", "102"], ["102", "105"], ["19", "105"], ["114", "108"], ["137", "140"], ["143", "140"], ["19", "140"], ["119", "140"], ["210", "140"], ["140", "143"], ["19", "143"], ["167", "143"], ["205", "143"], ["351", "354"], ["357", "354"], ["19", "354"], ["119", "354"], ["151", "354"], ["354", "357"], ["19", "357"], ["47", "70"], ["19", "70"], ["19", "148"], ["36", "82"], ["19", "82"], ["36", "114"], ["82", "114"], ["19", "114"], ["148", "151"], ["154", "151"], ["19", "151"], ["119", "151"], ["296", "151"], ["19", "154"], ["253", "154"], ["292", "154"], ["19", "157"], ["362", "361"], ["362", "361"], ["19", "361"], ["128", "362"], ["19", "362"], ["390", "367"], ["377", "367"], ["372", "367"], ["19", "367"], ["140", "167"], ["19", "167"], ["205", "167"], ["179", "171"], ["179", "171"], ["179", "171"], ["167", "210"], ["205", "210"], ["19", "210"], ["140", "210"], ["224", "216"], ["224", "216"], ["224", "216"], ["151", "253"], ["19", "253"], ["265", "257"], ["265", "257"], ["265", "257"], ["253", "296"], ["292", "296"], ["19", "296"], ["151", "296"], ["310", "302"], ["310", "302"], ["310", "302"], ["372", "371"], ["19", "371"], ["390", "377"], ["367", "377"], ["19", "377"], ["167", "211"], ["205", "211"], ["19", "211"], ["253", "297"], ["292", "297"], ["19", "297"], ["19", "372"], ["19", "381"], ["224", "179"], ["265", "179"], ["310", "179"], ["19", "179"], ["157", "179"], ["200", "179"], ["200", "179"], ["179", "224"], ["265", "224"], ["310", "224"], ["19", "224"], ["157", "224"], ["171", "224"], ["245", "224"], ["245", "224"], ["179", "265"], ["224", "265"], ["310", "265"], ["19", "265"], ["157", "265"], ["171", "265"], ["216", "265"], ["286", "265"], ["286", "265"], ["179", "310"], ["224", "310"], ["265", "310"], ["19", "310"], ["157", "310"], ["171", "310"], ["216", "310"], ["257", "310"], ["331", "310"], ["331", "310"], ["200", "188"], ["200", "188"], ["245", "233"], ["245", "233"], ["286", "274"], ["286", "274"], ["331", "319"], ["331", "319"], ["19", "200"], ["19", "245"], ["108", "245"], ["19", "286"], ["19", "331"], ["76", "331"], ["253", "283"], ["19", "283"], ["19", "328"], ["253", "328"], ["292", "328"], ["167", "196"], ["19", "196"], ["19", "241"], ["167", "241"], ["205", "241"], ["283", "292"], ["19", "292"], ["128", "193"], ["238", "193"], ["279", "193"], ["324", "193"], ["19", "193"], ["196", "205"], ["19", "205"], ["128", "238"], ["193", "238"], ["279", "238"], ["324", "238"], ["19", "238"], ["128", "279"], ["193", "279"], ["238", "279"], ["324", "279"], ["19", "279"], ["128", "324"], ["193", "324"], ["238", "324"], ["279", "324"], ["19", "324"], ["57", "68"], ["57", "60"], ["57", "70"], ["57", "65"], ["57", "57"], ["89", "102"], ["89", "94"], ["89", "91"], ["89", "89"], ["89", "99"], ["128", "128"], ["128", "140"], ["128", "131"], ["128", "137"], ["343", "390"], ["343", "346"], ["343", "351"], ["343", "343"], ["343", "393"], ["343", "354"], ["343", "391"], ["68", "68"], ["68", "76"], ["68", "70"], ["68", "73"], ["68", "77"], ["68", "82"], ["68", "78"], ["102", "102"], ["102", "114"], ["102", "108"], ["102", "109"], ["102", "105"], ["102", "110"], ["140", "148"], ["140", "140"], ["140", "151"], ["140", "143"], ["354", "362"], ["354", "357"], ["354", "361"], ["354", "354"], ["151", "167"], ["151", "154"], ["151", "296"], ["151", "158"], ["151", "160"], ["151", "159"], ["151", "253"], ["151", "297"], ["151", "151"], ["151", "210"], ["151", "157"], ["151", "211"], ["361", "384"], ["361", "383"], ["361", "370"], ["361", "378"], ["361", "382"], ["361", "380"], ["361", "368"], ["361", "372"], ["361", "377"], ["361", "367"], ["361", "381"], ["361", "371"], ["167", "188"], ["167", "196"], ["167", "181"], ["167", "190"], ["167", "174"], ["167", "182"], ["167", "202"], ["167", "200"], ["167", "172"], ["167", "179"], ["167", "189"], ["167", "191"], ["167", "173"], ["167", "205"], ["167", "171"], ["167", "183"], ["167", "193"], ["167", "203"], ["210", "226"], ["210", "228"], ["210", "247"], ["210", "238"], ["210", "224"], ["210", "236"], ["210", "217"], ["210", "241"], ["210", "216"], ["210", "227"], ["210", "245"], ["210", "233"], ["210", "235"], ["210", "234"], ["210", "248"], ["210", "218"], ["210", "219"], ["253", "292"], ["253", "283"], ["253", "288"], ["253", "258"], ["253", "268"], ["253", "276"], ["253", "274"], ["253", "260"], ["253", "269"], ["253", "257"], ["253", "279"], ["253", "275"], ["253", "259"], ["253", "289"], ["253", "267"], ["253", "265"], ["253", "286"], ["253", "277"], ["296", "334"], ["296", "322"], ["296", "302"], ["296", "324"], ["296", "304"], ["296", "328"], ["296", "310"], ["296", "305"], ["296", "321"], ["296", "319"], ["296", "320"], ["296", "314"], ["296", "333"], ["296", "331"], ["296", "313"], ["296", "303"], ["296", "312"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "27": "<(IDENTIFIER,n,n = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,fs,nextInt())<SUB>3</SUB>>", "31": "<(IDENTIFIER,m,m = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,fs,nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,k,k = nextInt())<SUB>5</SUB>>", "37": "<(IDENTIFIER,fs,nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,rows,rows = new int[n][m - 1])<SUB>6</SUB>>", "41": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>6</SUB>>", "43": "<(IDENTIFIER,m,m - 1)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,cols = new int[n - 1][m])<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "49": "<(IDENTIFIER,n,n - 1)<SUB>7</SUB>>", "51": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>7</SUB>>", "53": "<(LOCAL,int i: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m - 1); j++),for (int j = 0; Some(j &lt; m - 1); j++))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "67": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "69": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>9</SUB>>", "71": "<(IDENTIFIER,m,m - 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,rows[i][j])<SUB>10</SUB>>", "79": "<(IDENTIFIER,rows,rows[i][j] = nextInt())<SUB>10</SUB>>", "81": "<(IDENTIFIER,j,rows[i][j] = nextInt())<SUB>10</SUB>>", "83": "<(IDENTIFIER,fs,nextInt())<SUB>10</SUB>>", "85": "<(LOCAL,int i: int)<SUB>13</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "93": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "101": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "103": "<(IDENTIFIER,j,j &lt; m)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,cols[i][j])<SUB>15</SUB>>", "111": "<(IDENTIFIER,cols,cols[i][j] = nextInt())<SUB>15</SUB>>", "113": "<(IDENTIFIER,j,cols[i][j] = nextInt())<SUB>15</SUB>>", "115": "<(IDENTIFIER,fs,nextInt())<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.assignment,int[][][] res = new int[100][n][m])<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.alloc,new int[100][n][m])>", "121": "<(IDENTIFIER,n,new int[100][n][m])<SUB>18</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int o = 2; Some(o &lt;= k); o += 2),for (int o = 2; Some(o &lt;= k); o += 2))<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.assignment,int o = 2)<SUB>19</SUB>>", "127": "<(LITERAL,2,int o = 2)<SUB>19</SUB>>", "129": "<(IDENTIFIER,o,o &lt;= k)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.assignmentPlus,o += 2)<SUB>19</SUB>>", "133": "<(LITERAL,2,o += 2)<SUB>19</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "139": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "141": "<(IDENTIFIER,i,i &lt; n)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "147": "<(LOCAL,int j: int)<SUB>21</SUB>>", "149": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>21</SUB>>", "153": "<(IDENTIFIER,m,j &lt; m)<SUB>21</SUB>>", "155": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.assignment,res[o][i][j] = 0x3f3f3f3f)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,res[o][i])<SUB>22</SUB>>", "161": "<(IDENTIFIER,res,res[o][i][j] = 0x3f3f3f3f)<SUB>22</SUB>>", "163": "<(IDENTIFIER,i,res[o][i][j] = 0x3f3f3f3f)<SUB>22</SUB>>", "165": "<(LITERAL,0x3f3f3f3f,res[o][i][j] = 0x3f3f3f3f)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>23</SUB>>", "169": "<(LITERAL,0,i &gt; 0)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.assignment,res[o][i][j] = min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,res[o][i])<SUB>24</SUB>>", "175": "<(IDENTIFIER,res,res[o][i][j] = min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "177": "<(IDENTIFIER,i,res[o][i][j] = min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "179": "<(min,min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,res[o][i][j])<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,res[o])<SUB>24</SUB>>", "185": "<(IDENTIFIER,o,min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "187": "<(IDENTIFIER,j,min(res[o][i][j], res[o - 2][i - 1][j] + 2 * cols[i - 1][j]))<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,res[o - 2][i - 1][j])<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,res[o - 2])<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.subtraction,o - 2)<SUB>24</SUB>>", "195": "<(LITERAL,2,o - 2)<SUB>24</SUB>>", "197": "<(IDENTIFIER,i,i - 1)<SUB>24</SUB>>", "199": "<(IDENTIFIER,j,res[o - 2][i - 1][j] + 2 * cols[i - 1][j])<SUB>24</SUB>>", "201": "<(LITERAL,2,2 * cols[i - 1][j])<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,cols[i - 1])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>24</SUB>>", "207": "<(LITERAL,1,i - 1)<SUB>24</SUB>>", "209": "<(CONTROL_STRUCTURE,if (i + 1 &lt; n),if (i + 1 &lt; n))<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.addition,i + 1)<SUB>26</SUB>>", "213": "<(LITERAL,1,i + 1)<SUB>26</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,res[o][i][j])<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,res[o])<SUB>27</SUB>>", "221": "<(IDENTIFIER,o,res[o][i][j] = min(res[o][i][j], res[o - 2][i + 1][j] + 2 * cols[i][j]))<SUB>27</SUB>>", "223": "<(IDENTIFIER,j,res[o][i][j] = min(res[o][i][j], res[o - 2][i + 1][j] + 2 * cols[i][j]))<SUB>27</SUB>>", "225": "<(IDENTIFIER,Math,min(res[o][i][j], res[o - 2][i + 1][j] + 2 * cols[i][j]))<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,res[o][i])<SUB>27</SUB>>", "229": "<(IDENTIFIER,res,min(res[o][i][j], res[o - 2][i + 1][j] + 2 * cols[i][j]))<SUB>27</SUB>>", "231": "<(IDENTIFIER,i,min(res[o][i][j], res[o - 2][i + 1][j] + 2 * cols[i][j]))<SUB>27</SUB>>", "233": "<(&lt;operator&gt;.addition,res[o - 2][i + 1][j] + 2 * cols[i][j])<SUB>27</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,res[o - 2][i + 1])<SUB>27</SUB>>", "237": "<(IDENTIFIER,res,res[o - 2][i + 1][j] + 2 * cols[i][j])<SUB>27</SUB>>", "239": "<(IDENTIFIER,o,o - 2)<SUB>27</SUB>>", "241": "<(&lt;operator&gt;.addition,i + 1)<SUB>27</SUB>>", "243": "<(LITERAL,1,i + 1)<SUB>27</SUB>>", "245": "<(&lt;operator&gt;.multiplication,2 * cols[i][j])<SUB>27</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,cols[i][j])<SUB>27</SUB>>", "249": "<(IDENTIFIER,cols,2 * cols[i][j])<SUB>27</SUB>>", "251": "<(IDENTIFIER,j,2 * cols[i][j])<SUB>27</SUB>>", "253": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>29</SUB>>", "255": "<(LITERAL,0,j &gt; 0)<SUB>29</SUB>>", "257": "<(&lt;operator&gt;.assignment,res[o][i][j] = min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,res[o][i])<SUB>30</SUB>>", "261": "<(IDENTIFIER,res,res[o][i][j] = min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "263": "<(IDENTIFIER,i,res[o][i][j] = min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "265": "<(min,min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,res[o][i][j])<SUB>30</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,res[o])<SUB>30</SUB>>", "271": "<(IDENTIFIER,o,min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "273": "<(IDENTIFIER,j,min(res[o][i][j], res[o - 2][i][j - 1] + 2 * rows[i][j - 1]))<SUB>30</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,res[o - 2][i][j - 1])<SUB>30</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,res[o - 2])<SUB>30</SUB>>", "279": "<(&lt;operator&gt;.subtraction,o - 2)<SUB>30</SUB>>", "281": "<(LITERAL,2,o - 2)<SUB>30</SUB>>", "283": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>30</SUB>>", "285": "<(LITERAL,1,j - 1)<SUB>30</SUB>>", "287": "<(LITERAL,2,2 * rows[i][j - 1])<SUB>30</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,rows[i])<SUB>30</SUB>>", "291": "<(IDENTIFIER,i,2 * rows[i][j - 1])<SUB>30</SUB>>", "293": "<(IDENTIFIER,j,j - 1)<SUB>30</SUB>>", "295": "<(CONTROL_STRUCTURE,if (j + 1 &lt; m),if (j + 1 &lt; m))<SUB>32</SUB>>", "297": "<(&lt;operator&gt;.addition,j + 1)<SUB>32</SUB>>", "299": "<(LITERAL,1,j + 1)<SUB>32</SUB>>", "301": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,res[o][i][j])<SUB>33</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,res[o])<SUB>33</SUB>>", "307": "<(IDENTIFIER,o,res[o][i][j] = min(res[o][i][j], res[o - 2][i][j + 1] + 2 * rows[i][j]))<SUB>33</SUB>>", "309": "<(IDENTIFIER,j,res[o][i][j] = min(res[o][i][j], res[o - 2][i][j + 1] + 2 * rows[i][j]))<SUB>33</SUB>>", "311": "<(IDENTIFIER,Math,min(res[o][i][j], res[o - 2][i][j + 1] + 2 * rows[i][j]))<SUB>33</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,res[o][i])<SUB>33</SUB>>", "315": "<(IDENTIFIER,res,min(res[o][i][j], res[o - 2][i][j + 1] + 2 * rows[i][j]))<SUB>33</SUB>>", "317": "<(IDENTIFIER,i,min(res[o][i][j], res[o - 2][i][j + 1] + 2 * rows[i][j]))<SUB>33</SUB>>", "319": "<(&lt;operator&gt;.addition,res[o - 2][i][j + 1] + 2 * rows[i][j])<SUB>33</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,res[o - 2][i])<SUB>33</SUB>>", "323": "<(IDENTIFIER,res,res[o - 2][i][j + 1] + 2 * rows[i][j])<SUB>33</SUB>>", "325": "<(IDENTIFIER,o,o - 2)<SUB>33</SUB>>", "327": "<(IDENTIFIER,i,res[o - 2][i][j + 1] + 2 * rows[i][j])<SUB>33</SUB>>", "329": "<(IDENTIFIER,j,j + 1)<SUB>33</SUB>>", "331": "<(&lt;operator&gt;.multiplication,2 * rows[i][j])<SUB>33</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,rows[i][j])<SUB>33</SUB>>", "335": "<(IDENTIFIER,rows,2 * rows[i][j])<SUB>33</SUB>>", "337": "<(IDENTIFIER,j,2 * rows[i][j])<SUB>33</SUB>>", "339": "<(LOCAL,int i: int)<SUB>39</SUB>>", "341": "<(IDENTIFIER,i,int i = 0)<SUB>39</SUB>>", "343": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>39</SUB>>", "345": "<(IDENTIFIER,n,i &lt; n)<SUB>39</SUB>>", "347": "<(IDENTIFIER,i,i++)<SUB>39</SUB>>", "349": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>40</SUB>>", "351": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>40</SUB>>", "353": "<(LITERAL,0,int j = 0)<SUB>40</SUB>>", "355": "<(IDENTIFIER,j,j &lt; m)<SUB>40</SUB>>", "357": "<(&lt;operator&gt;.postIncrement,j++)<SUB>40</SUB>>", "359": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "361": "<(&lt;operator&gt;.equals,k % 2 == 1)<SUB>41</SUB>>", "363": "<(IDENTIFIER,k,k % 2)<SUB>41</SUB>>", "365": "<(LITERAL,1,k % 2 == 1)<SUB>41</SUB>>", "367": "<(print,System.out.print(-1 + &quot; &quot;))<SUB>42</SUB>>", "369": "<(IDENTIFIER,System,System.out.print(-1 + &quot; &quot;))<SUB>42</SUB>>", "371": "<(&lt;operator&gt;.addition,-1 + &quot; &quot;)<SUB>42</SUB>>", "373": "<(LITERAL,1,-1)<SUB>42</SUB>>", "375": "<(CONTROL_STRUCTURE,else,else)<SUB>43</SUB>>", "377": "<(print,System.out.print(res[k][i][j] + &quot; &quot;))<SUB>44</SUB>>", "379": "<(IDENTIFIER,System,System.out.print(res[k][i][j] + &quot; &quot;))<SUB>44</SUB>>", "381": "<(&lt;operator&gt;.addition,res[k][i][j] + &quot; &quot;)<SUB>44</SUB>>", "383": "<(&lt;operator&gt;.indexAccess,res[k][i])<SUB>44</SUB>>", "385": "<(IDENTIFIER,res,res[k][i][j] + &quot; &quot;)<SUB>44</SUB>>", "387": "<(IDENTIFIER,i,res[k][i][j] + &quot; &quot;)<SUB>44</SUB>>", "389": "<(LITERAL,&quot; &quot;,res[k][i][j] + &quot; &quot;)<SUB>44</SUB>>", "391": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>48</SUB>>", "393": "<(FIELD_IDENTIFIER,out,out)<SUB>48</SUB>>", "395": "<(MODIFIER,STATIC)>"}}