{"edges": [["21", "22"], ["21", "23"], ["21", "214"], ["21", "215"], ["21", "216"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "71"], ["23", "75"], ["23", "80"], ["23", "125"], ["23", "126"], ["23", "137"], ["23", "212"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "100"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "107"], ["100", "110"], ["100", "112"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "121"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "149"], ["147", "155"], ["147", "156"], ["147", "162"], ["147", "176"], ["147", "177"], ["147", "184"], ["147", "193"], ["147", "204"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "154"], ["152", "153"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "161"], ["159", "160"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "175"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "174"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["200", "201"], ["200", "202"], ["202", "203"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["208", "211"], ["212", "213"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "50"], ["66", "73"], ["71", "76"], ["75", "82"], ["126", "139"], ["212", "216"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["50", "53"], ["53", "60"], ["53", "68"], ["56", "53"], ["68", "66"], ["73", "71"], ["76", "75"], ["82", "85"], ["85", "92"], ["85", "132"], ["88", "85"], ["128", "126"], ["139", "142"], ["142", "152"], ["142", "212"], ["145", "142"], ["30", "28"], ["37", "35"], ["59", "56"], ["91", "104"], ["129", "128"], ["149", "159"], ["156", "163"], ["177", "189"], ["184", "195"], ["204", "145"], ["60", "63"], ["63", "59"], ["92", "97"], ["95", "91"], ["102", "107"], ["107", "115"], ["107", "88"], ["110", "107"], ["130", "129"], ["151", "149"], ["158", "156"], ["163", "170"], ["163", "180"], ["179", "177"], ["186", "184"], ["194", "202"], ["194", "207"], ["205", "208"], ["208", "204"], ["97", "95"], ["104", "102"], ["132", "130"], ["152", "151"], ["159", "158"], ["167", "145"], ["180", "179"], ["187", "186"], ["195", "194"], ["200", "207"], ["207", "205"], ["114", "122"], ["114", "110"], ["121", "110"], ["168", "171"], ["171", "167"], ["189", "187"], ["202", "200"], ["115", "118"], ["118", "114"], ["122", "121"], ["170", "168"], ["21", "26"], ["22", "216"], ["24", "216"], ["27", "216"], ["27", "216"], ["31", "216"], ["34", "216"], ["34", "216"], ["39", "216"], ["44", "216"], ["44", "216"], ["68", "216"], ["66", "216"], ["66", "216"], ["71", "216"], ["71", "216"], ["71", "216"], ["75", "216"], ["75", "216"], ["82", "216"], ["85", "216"], ["126", "216"], ["132", "216"], ["129", "216"], ["128", "216"], ["126", "216"], ["126", "216"], ["139", "216"], ["142", "216"], ["142", "216"], ["142", "216"], ["212", "216"], ["212", "216"], ["149", "216"], ["159", "216"], ["158", "216"], ["156", "216"], ["156", "216"], ["163", "216"], ["163", "216"], ["163", "216"], ["180", "216"], ["180", "216"], ["179", "216"], ["177", "216"], ["177", "216"], ["187", "216"], ["186", "216"], ["184", "216"], ["184", "216"], ["195", "216"], ["194", "216"], ["194", "216"], ["200", "216"], ["200", "216"], ["204", "216"], ["208", "216"], ["204", "216"], ["167", "216"], ["171", "216"], ["167", "216"], ["145", "216"], ["91", "216"], ["91", "216"], ["91", "216"], ["102", "216"], ["102", "216"], ["107", "216"], ["107", "216"], ["88", "216"], ["114", "216"], ["114", "216"], ["114", "216"], ["121", "216"], ["121", "216"], ["110", "216"], ["59", "216"], ["59", "216"], ["56", "216"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["68", "66"], ["73", "71"], ["21", "75"], ["128", "126"], ["128", "126"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "50"], ["21", "82"], ["21", "139"], ["34", "212"], ["21", "212"], ["27", "41"], ["21", "41"], ["39", "46"], ["21", "46"], ["50", "53"], ["56", "53"], ["21", "53"], ["46", "53"], ["53", "56"], ["21", "56"], ["63", "59"], ["41", "68"], ["63", "68"], ["21", "68"], ["53", "73"], ["21", "73"], ["82", "85"], ["88", "85"], ["21", "85"], ["73", "85"], ["104", "88"], ["21", "88"], ["71", "91"], ["129", "128"], ["129", "128"], ["21", "128"], ["139", "142"], ["145", "142"], ["21", "142"], ["66", "142"], ["142", "145"], ["21", "145"], ["151", "149"], ["151", "149"], ["158", "156"], ["158", "156"], ["180", "177"], ["180", "177"], ["21", "177"], ["186", "184"], ["186", "184"], ["104", "102"], ["104", "102"], ["71", "129"], ["21", "129"], ["34", "204"], ["167", "204"], ["21", "204"], ["41", "63"], ["21", "63"], ["102", "107"], ["110", "107"], ["21", "107"], ["107", "110"], ["21", "110"], ["152", "151"], ["21", "151"], ["159", "158"], ["21", "158"], ["149", "163"], ["21", "163"], ["156", "163"], ["180", "179"], ["180", "179"], ["21", "179"], ["187", "186"], ["187", "186"], ["21", "186"], ["195", "194"], ["195", "194"], ["21", "194"], ["202", "200"], ["21", "208"], ["85", "97"], ["21", "97"], ["97", "104"], ["21", "104"], ["85", "132"], ["21", "132"], ["68", "152"], ["159", "152"], ["21", "152"], ["152", "159"], ["21", "159"], ["34", "167"], ["204", "167"], ["21", "167"], ["163", "180"], ["21", "180"], ["163", "180"], ["189", "187"], ["21", "187"], ["189", "187"], ["184", "195"], ["21", "195"], ["44", "114"], ["59", "114"], ["71", "121"], ["91", "121"], ["21", "171"], ["177", "189"], ["21", "189"], ["126", "202"], ["21", "202"], ["53", "60"], ["53", "56"], ["53", "59"], ["53", "53"], ["53", "63"], ["85", "107"], ["85", "102"], ["85", "85"], ["85", "104"], ["85", "95"], ["85", "92"], ["85", "97"], ["85", "91"], ["85", "88"], ["142", "145"], ["142", "163"], ["142", "149"], ["142", "151"], ["142", "152"], ["142", "158"], ["142", "142"], ["142", "159"], ["142", "156"], ["107", "107"], ["107", "115"], ["107", "114"], ["107", "118"], ["107", "110"], ["163", "167"], ["163", "179"], ["163", "189"], ["163", "168"], ["163", "204"], ["163", "170"], ["163", "208"], ["163", "195"], ["163", "187"], ["163", "184"], ["163", "207"], ["163", "194"], ["163", "186"], ["163", "180"], ["163", "205"], ["163", "171"], ["163", "177"], ["194", "202"], ["194", "200"], ["114", "121"], ["114", "122"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int[] perm: int[])<SUB>6</SUB>>", "45": "<(IDENTIFIER,perm,int[] perm = new int[n])<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "49": "<(LOCAL,int i: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,perm[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,perm,perm[i] = nextInt())<SUB>8</SUB>>", "63": "<(nextInt,nextInt())<SUB>8</SUB>>", "65": "<(LOCAL,int q: int)<SUB>10</SUB>>", "67": "<(IDENTIFIER,q,int q = nextInt())<SUB>10</SUB>>", "69": "<(IDENTIFIER,in,nextInt())<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,int[] inv = new int[n])<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[n])>", "75": "<(&lt;operator&gt;.assignment,inv[0] = 0)<SUB>13</SUB>>", "77": "<(IDENTIFIER,inv,inv[0] = 0)<SUB>13</SUB>>", "79": "<(LITERAL,0,inv[0] = 0)<SUB>13</SUB>>", "81": "<(LOCAL,int i: int)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,int i = 1)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "87": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,inv[i] = inv[i - 1])<SUB>15</SUB>>", "93": "<(IDENTIFIER,inv,inv[i] = inv[i - 1])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,inv[i - 1])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>15</SUB>>", "99": "<(LITERAL,1,i - 1)<SUB>15</SUB>>", "101": "<(LOCAL,int j: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,j,int j = i - 1)<SUB>16</SUB>>", "105": "<(IDENTIFIER,i,i - 1)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>16</SUB>>", "109": "<(LITERAL,0,j &gt;= 0)<SUB>16</SUB>>", "111": "<(IDENTIFIER,j,j--)<SUB>16</SUB>>", "113": "<(CONTROL_STRUCTURE,if (perm[i] &lt; perm[j]),if (perm[i] &lt; perm[j]))<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,perm[i])<SUB>17</SUB>>", "117": "<(IDENTIFIER,i,perm[i] &lt; perm[j])<SUB>17</SUB>>", "119": "<(IDENTIFIER,perm,perm[i] &lt; perm[j])<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,inv[i]++)<SUB>17</SUB>>", "123": "<(IDENTIFIER,inv,inv[i]++)<SUB>17</SUB>>", "125": "<(LOCAL,boolean parity: boolean)<SUB>20</SUB>>", "127": "<(IDENTIFIER,parity,boolean parity = inv[n - 1] % 2 == 0)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.modulo,inv[n - 1] % 2)<SUB>20</SUB>>", "131": "<(IDENTIFIER,inv,inv[n - 1] % 2)<SUB>20</SUB>>", "133": "<(IDENTIFIER,n,n - 1)<SUB>20</SUB>>", "135": "<(LITERAL,2,inv[n - 1] % 2)<SUB>20</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; q); i++),for (int i = 0; Some(i &lt; q); i++))<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "141": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "143": "<(IDENTIFIER,i,i &lt; q)<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.assignment,int l = in.nextInt() - 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>23</SUB>>", "153": "<(IDENTIFIER,in,nextInt())<SUB>23</SUB>>", "155": "<(LOCAL,int r: int)<SUB>24</SUB>>", "157": "<(IDENTIFIER,r,int r = in.nextInt() - 1)<SUB>24</SUB>>", "159": "<(nextInt,nextInt())<SUB>24</SUB>>", "161": "<(LITERAL,1,in.nextInt() - 1)<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.equals,l == r)<SUB>25</SUB>>", "165": "<(IDENTIFIER,r,l == r)<SUB>25</SUB>>", "167": "<(println,System.out.println(parity ? &quot;even&quot; : &quot;odd&quot;))<SUB>26</SUB>>", "169": "<(IDENTIFIER,System,System.out.println(parity ? &quot;even&quot; : &quot;odd&quot;))<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.conditional,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>26</SUB>>", "173": "<(LITERAL,&quot;even&quot;,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.assignment,int s = r - l + 1)<SUB>30</SUB>>", "179": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>30</SUB>>", "181": "<(IDENTIFIER,r,r - l)<SUB>30</SUB>>", "183": "<(LITERAL,1,r - l + 1)<SUB>30</SUB>>", "185": "<(IDENTIFIER,s,s = s * (s - 1) / 2)<SUB>31</SUB>>", "187": "<(&lt;operator&gt;.multiplication,s * (s - 1))<SUB>31</SUB>>", "189": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>31</SUB>>", "191": "<(LITERAL,1,s - 1)<SUB>31</SUB>>", "193": "<(CONTROL_STRUCTURE,if (s % 2 != 0),if (s % 2 != 0))<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.modulo,s % 2)<SUB>32</SUB>>", "197": "<(LITERAL,2,s % 2)<SUB>32</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "201": "<(IDENTIFIER,parity,parity = !parity)<SUB>33</SUB>>", "203": "<(IDENTIFIER,parity,!parity)<SUB>33</SUB>>", "205": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "207": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "209": "<(IDENTIFIER,parity,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>35</SUB>>", "211": "<(LITERAL,&quot;odd&quot;,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>35</SUB>>", "213": "<(IDENTIFIER,out,close())<SUB>37</SUB>>", "215": "<(MODIFIER,STATIC)>"}}