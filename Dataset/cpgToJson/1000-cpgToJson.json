{"edges": [["19", "20"], ["19", "21"], ["19", "162"], ["19", "163"], ["19", "164"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "40"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "45"], ["40", "51"], ["41", "42"], ["41", "44"], ["42", "43"], ["45", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "58"], ["52", "61"], ["52", "62"], ["52", "65"], ["52", "66"], ["52", "69"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "83"], ["79", "90"], ["79", "154"], ["79", "159"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "102"], ["94", "107"], ["94", "108"], ["94", "113"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["113", "129"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["117", "128"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["129", "130"], ["130", "131"], ["130", "136"], ["130", "137"], ["130", "142"], ["130", "153"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "49"], ["41", "54"], ["28", "26"], ["42", "41"], ["46", "164"], ["47", "46"], ["54", "58"], ["58", "62"], ["62", "66"], ["66", "71"], ["49", "47"], ["71", "74"], ["74", "164"], ["74", "80"], ["77", "74"], ["80", "87"], ["83", "91"], ["154", "159"], ["159", "77"], ["85", "83"], ["91", "98"], ["91", "156"], ["156", "154"], ["87", "85"], ["96", "104"], ["102", "110"], ["108", "114"], ["98", "96"], ["104", "102"], ["110", "108"], ["114", "118"], ["114", "133"], ["118", "124"], ["121", "164"], ["122", "125"], ["125", "121"], ["131", "139"], ["137", "145"], ["142", "164"], ["124", "122"], ["133", "131"], ["139", "137"], ["143", "150"], ["146", "142"], ["145", "143"], ["148", "146"], ["149", "148"], ["150", "149"], ["19", "24"], ["20", "164"], ["22", "164"], ["25", "164"], ["25", "164"], ["32", "164"], ["30", "164"], ["30", "164"], ["37", "164"], ["35", "164"], ["35", "164"], ["42", "164"], ["41", "164"], ["41", "164"], ["46", "164"], ["46", "164"], ["46", "164"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["19", "37"], ["30", "37"], ["42", "41"], ["19", "41"], ["35", "42"], ["19", "42"], ["37", "46"], ["19", "46"], ["19", "54"], ["19", "58"], ["19", "62"], ["19", "66"], ["19", "71"], ["71", "74"], ["77", "74"], ["19", "74"], ["85", "77"], ["19", "77"], ["19", "80"], ["85", "83"], ["85", "83"], ["156", "154"], ["156", "154"], ["91", "159"], ["19", "159"], ["54", "80"], ["156", "80"], ["62", "83"], ["19", "83"], ["91", "83"], ["58", "154"], ["19", "154"], ["74", "85"], ["19", "85"], ["87", "85"], ["87", "85"], ["37", "91"], ["19", "91"], ["83", "91"], ["98", "96"], ["98", "96"], ["104", "102"], ["104", "102"], ["110", "108"], ["110", "108"], ["19", "156"], ["87", "156"], ["80", "87"], ["19", "87"], ["91", "98"], ["19", "98"], ["66", "98"], ["159", "98"], ["96", "104"], ["19", "104"], ["85", "104"], ["104", "110"], ["19", "110"], ["104", "110"], ["108", "114"], ["19", "114"], ["102", "118"], ["19", "118"], ["58", "118"], ["154", "118"], ["125", "121"], ["125", "121"], ["102", "131"], ["19", "131"], ["139", "137"], ["139", "137"], ["118", "125"], ["19", "125"], ["58", "131"], ["154", "131"], ["146", "142"], ["146", "142"], ["102", "133"], ["19", "133"], ["37", "139"], ["19", "139"], ["131", "139"], ["137", "146"], ["19", "146"], ["148", "146"], ["148", "146"], ["19", "148"], ["114", "148"], ["19", "149"], ["114", "149"], ["41", "74"], ["41", "54"], ["41", "58"], ["41", "47"], ["41", "49"], ["41", "66"], ["41", "46"], ["41", "71"], ["41", "62"], ["74", "85"], ["74", "87"], ["74", "91"], ["74", "80"], ["74", "83"], ["91", "96"], ["91", "77"], ["91", "98"], ["91", "154"], ["91", "102"], ["91", "114"], ["91", "104"], ["91", "74"], ["91", "108"], ["91", "159"], ["91", "110"], ["91", "156"], ["114", "145"], ["114", "146"], ["114", "131"], ["114", "149"], ["114", "150"], ["114", "121"], ["114", "148"], ["114", "137"], ["114", "118"], ["114", "139"], ["114", "122"], ["114", "142"], ["114", "143"], ["114", "124"], ["114", "125"], ["114", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,String st = String.valueOf(n))<SUB>4</SUB>>", "37": "<(valueOf,String.valueOf(n))<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,String.valueOf(n))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.equals,st.length() == 1)<SUB>5</SUB>>", "43": "<(IDENTIFIER,st,st.length())<SUB>5</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "49": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "51": "<(CONTROL_STRUCTURE,else,else)<SUB>7</SUB>>", "53": "<(LOCAL,long val: long)<SUB>8</SUB>>", "55": "<(IDENTIFIER,val,long val = 1)<SUB>8</SUB>>", "57": "<(LOCAL,long prev: long)<SUB>9</SUB>>", "59": "<(IDENTIFIER,prev,long prev = 9)<SUB>9</SUB>>", "61": "<(LOCAL,long total: long)<SUB>10</SUB>>", "63": "<(IDENTIFIER,total,long total = 9)<SUB>10</SUB>>", "65": "<(LOCAL,long late: long)<SUB>11</SUB>>", "67": "<(IDENTIFIER,late,long late = 9)<SUB>11</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= 12); i++),for (int i = 2; Some(i &lt;= 12); i++))<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>12</SUB>>", "73": "<(LITERAL,2,int i = 2)<SUB>12</SUB>>", "75": "<(IDENTIFIER,i,i &lt;= 12)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "81": "<(IDENTIFIER,val,val *= 10)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignmentPlus,total += i * (val * 9))<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.multiplication,i * (val * 9))<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.multiplication,val * 9)<SUB>15</SUB>>", "89": "<(LITERAL,9,val * 9)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= total)<SUB>16</SUB>>", "93": "<(IDENTIFIER,total,n &lt;= total)<SUB>16</SUB>>", "95": "<(LOCAL,long diff: long)<SUB>17</SUB>>", "97": "<(IDENTIFIER,diff,long diff = n - late)<SUB>17</SUB>>", "99": "<(IDENTIFIER,n,n - late)<SUB>17</SUB>>", "101": "<(LOCAL,long div: long)<SUB>18</SUB>>", "103": "<(IDENTIFIER,div,long div = diff / i)<SUB>18</SUB>>", "105": "<(IDENTIFIER,diff,diff / i)<SUB>18</SUB>>", "107": "<(LOCAL,long mod: long)<SUB>19</SUB>>", "109": "<(IDENTIFIER,mod,long mod = diff % i)<SUB>19</SUB>>", "111": "<(IDENTIFIER,diff,diff % i)<SUB>19</SUB>>", "113": "<(CONTROL_STRUCTURE,if (mod == 0),if (mod == 0))<SUB>21</SUB>>", "115": "<(IDENTIFIER,mod,mod == 0)<SUB>21</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "119": "<(IDENTIFIER,prev,prev += div)<SUB>22</SUB>>", "121": "<(println,System.out.println((prev) % 10))<SUB>23</SUB>>", "123": "<(IDENTIFIER,System,System.out.println((prev) % 10))<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.modulo,(prev) % 10)<SUB>23</SUB>>", "127": "<(LITERAL,10,(prev) % 10)<SUB>23</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.assignmentPlus,prev += div + 1)<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.addition,div + 1)<SUB>26</SUB>>", "135": "<(LITERAL,1,div + 1)<SUB>26</SUB>>", "137": "<(&lt;operator&gt;.assignment,String fg = String.valueOf(prev))<SUB>27</SUB>>", "139": "<(valueOf,String.valueOf(prev))<SUB>27</SUB>>", "141": "<(IDENTIFIER,prev,String.valueOf(prev))<SUB>27</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "145": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "147": "<(IDENTIFIER,fg,fg.charAt((int) mod - 1))<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.cast,(int) mod)<SUB>28</SUB>>", "151": "<(IDENTIFIER,mod,(int) mod)<SUB>28</SUB>>", "153": "<(CONTROL_STRUCTURE,break;,break;)<SUB>29</SUB>>", "155": "<(IDENTIFIER,prev,prev += 9 * val)<SUB>32</SUB>>", "157": "<(LITERAL,9,9 * val)<SUB>32</SUB>>", "159": "<(&lt;operator&gt;.assignment,late = total)<SUB>33</SUB>>", "161": "<(IDENTIFIER,total,late = total)<SUB>33</SUB>>", "163": "<(MODIFIER,STATIC)>"}}