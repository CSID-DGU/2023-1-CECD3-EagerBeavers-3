{"edges": [["21", "23"], ["21", "221"], ["21", "222"], ["21", "223"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "59"], ["23", "64"], ["23", "84"], ["23", "85"], ["23", "89"], ["23", "159"], ["23", "160"], ["23", "163"], ["23", "164"], ["23", "167"], ["23", "208"], ["23", "219"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "35"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "5"], ["39", "40"], ["40", "41"], ["40", "44"], ["40", "47"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "101"], ["99", "107"], ["99", "108"], ["99", "114"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "106"], ["104", "105"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "113"], ["111", "112"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "186"], ["178", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["189", "190"], ["189", "201"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["216", "217"], ["216", "218"], ["219", "220"], ["24", "31"], ["27", "38"], ["36", "43"], ["39", "51"], ["49", "56"], ["54", "61"], ["59", "66"], ["85", "91"], ["160", "164"], ["164", "169"], ["208", "219"], ["219", "223"], ["26", "24"], ["38", "36"], ["51", "49"], ["56", "54"], ["61", "59"], ["66", "69"], ["69", "76"], ["69", "87"], ["72", "69"], ["74", "72"], ["87", "85"], ["91", "94"], ["94", "104"], ["94", "160"], ["97", "94"], ["169", "172"], ["172", "180"], ["172", "212"], ["175", "172"], ["210", "208"], ["29", "32"], ["32", "27"], ["41", "44"], ["44", "39"], ["76", "82"], ["79", "74"], ["101", "111"], ["108", "116"], ["211", "216"], ["216", "210"], ["31", "29"], ["43", "41"], ["80", "79"], ["103", "101"], ["110", "108"], ["116", "119"], ["119", "127"], ["119", "97"], ["122", "119"], ["180", "183"], ["183", "192"], ["183", "175"], ["186", "183"], ["212", "211"], ["82", "80"], ["104", "103"], ["111", "110"], ["127", "130"], ["130", "137"], ["130", "122"], ["133", "130"], ["135", "133"], ["190", "202"], ["190", "186"], ["136", "144"], ["141", "135"], ["191", "197"], ["196", "190"], ["202", "205"], ["205", "186"], ["137", "136"], ["143", "151"], ["148", "141"], ["192", "191"], ["197", "196"], ["144", "143"], ["149", "156"], ["154", "148"], ["151", "149"], ["156", "154"], ["21", "26"], ["22", "223"], ["24", "223"], ["32", "223"], ["32", "223"], ["27", "223"], ["36", "223"], ["41", "223"], ["44", "223"], ["44", "223"], ["39", "223"], ["49", "223"], ["54", "223"], ["59", "223"], ["61", "223"], ["59", "223"], ["59", "223"], ["87", "223"], ["85", "223"], ["85", "223"], ["94", "223"], ["94", "223"], ["160", "223"], ["164", "223"], ["169", "223"], ["172", "223"], ["172", "223"], ["172", "223"], ["212", "223"], ["211", "223"], ["210", "223"], ["216", "223"], ["210", "223"], ["208", "223"], ["208", "223"], ["219", "223"], ["219", "223"], ["180", "223"], ["183", "223"], ["183", "223"], ["183", "223"], ["175", "223"], ["190", "223"], ["190", "223"], ["190", "223"], ["202", "223"], ["205", "223"], ["186", "223"], ["101", "223"], ["101", "223"], ["108", "223"], ["111", "223"], ["110", "223"], ["108", "223"], ["108", "223"], ["116", "223"], ["119", "223"], ["119", "223"], ["97", "223"], ["127", "223"], ["130", "223"], ["130", "223"], ["130", "223"], ["122", "223"], ["135", "223"], ["141", "223"], ["151", "223"], ["149", "223"], ["148", "223"], ["156", "223"], ["154", "223"], ["148", "223"], ["141", "223"], ["135", "223"], ["135", "223"], ["133", "223"], ["74", "223"], ["79", "223"], ["74", "223"], ["74", "223"], ["72", "223"], ["74", "223"], ["21", "22"], ["21", "24"], ["21", "36"], ["51", "49"], ["56", "54"], ["61", "59"], ["61", "59"], ["87", "85"], ["21", "160"], ["21", "164"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["36", "39"], ["21", "39"], ["41", "39"], ["44", "39"], ["21", "66"], ["21", "91"], ["21", "169"], ["39", "208"], ["21", "208"], ["160", "208"], ["202", "208"], ["164", "208"], ["205", "208"], ["208", "219"], ["21", "219"], ["21", "29"], ["21", "35"], ["21", "41"], ["21", "47"], ["27", "51"], ["21", "51"], ["51", "56"], ["21", "56"], ["49", "61"], ["21", "61"], ["54", "61"], ["66", "69"], ["72", "69"], ["21", "69"], ["61", "69"], ["69", "72"], ["21", "72"], ["21", "74"], ["59", "74"], ["79", "74"], ["79", "74"], ["56", "87"], ["21", "87"], ["91", "94"], ["97", "94"], ["21", "94"], ["85", "94"], ["94", "97"], ["21", "97"], ["103", "101"], ["103", "101"], ["110", "108"], ["110", "108"], ["169", "172"], ["175", "172"], ["21", "172"], ["69", "172"], ["119", "172"], ["172", "175"], ["21", "175"], ["160", "210"], ["202", "210"], ["21", "210"], ["164", "210"], ["205", "210"], ["29", "32"], ["21", "32"], ["41", "44"], ["21", "44"], ["21", "79"], ["21", "116"], ["21", "180"], ["160", "211"], ["202", "211"], ["21", "211"], ["164", "216"], ["205", "216"], ["21", "216"], ["104", "103"], ["21", "103"], ["111", "110"], ["21", "110"], ["116", "119"], ["122", "119"], ["21", "119"], ["69", "119"], ["119", "122"], ["151", "122"], ["21", "122"], ["180", "183"], ["186", "183"], ["21", "183"], ["61", "183"], ["130", "183"], ["183", "186"], ["21", "186"], ["160", "212"], ["202", "212"], ["21", "212"], ["87", "104"], ["111", "104"], ["21", "104"], ["104", "111"], ["21", "111"], ["21", "127"], ["141", "135"], ["141", "135"], ["141", "135"], ["127", "130"], ["133", "130"], ["21", "130"], ["61", "130"], ["156", "133"], ["21", "133"], ["172", "202"], ["21", "202"], ["183", "205"], ["21", "205"], ["154", "141"], ["21", "141"], ["135", "141"], ["149", "141"], ["149", "141"], ["154", "141"], ["149", "148"], ["149", "148"], ["154", "148"], ["154", "148"], ["141", "149"], ["21", "149"], ["151", "149"], ["151", "149"], ["149", "154"], ["21", "154"], ["156", "154"], ["156", "154"], ["119", "151"], ["21", "151"], ["101", "151"], ["130", "156"], ["21", "156"], ["108", "156"], ["69", "69"], ["69", "74"], ["69", "76"], ["69", "79"], ["69", "80"], ["69", "72"], ["69", "82"], ["94", "94"], ["94", "103"], ["94", "104"], ["94", "119"], ["94", "97"], ["94", "101"], ["94", "108"], ["94", "111"], ["94", "116"], ["94", "110"], ["172", "180"], ["172", "183"], ["172", "175"], ["172", "172"], ["119", "119"], ["119", "130"], ["119", "127"], ["119", "122"], ["183", "192"], ["183", "196"], ["183", "197"], ["183", "191"], ["183", "190"], ["183", "186"], ["183", "183"], ["130", "136"], ["130", "154"], ["130", "149"], ["130", "151"], ["130", "144"], ["130", "148"], ["130", "137"], ["130", "130"], ["130", "141"], ["130", "143"], ["130", "135"], ["130", "156"], ["130", "133"], ["190", "202"], ["190", "205"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY c = new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,c,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>4</SUB>>", "38": "<(&lt;operator&gt;.alloc,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new File(&quot;output.txt&quot;))<SUB>4</SUB>>", "45": "<(IDENTIFIER,$obj2,new File(&quot;output.txt&quot;))>", "47": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(LOCAL,int M: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,M,int M = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,c,nextInt())<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[][] A = new int[N][M])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[N][M])>", "63": "<(IDENTIFIER,M,new int[N][M])<SUB>8</SUB>>", "65": "<(LOCAL,int i: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "71": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "75": "<(IDENTIFIER,Arrays,fill(A[i], Integer.MAX_VALUE / 100))<SUB>10</SUB>>", "77": "<(IDENTIFIER,A,fill(A[i], Integer.MAX_VALUE / 100))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.division,Integer.MAX_VALUE / 100)<SUB>10</SUB>>", "81": "<(IDENTIFIER,Integer,Integer.MAX_VALUE / 100)<SUB>10</SUB>>", "83": "<(LITERAL,100,Integer.MAX_VALUE / 100)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,int K = nextInt())<SUB>11</SUB>>", "87": "<(nextInt,nextInt())<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; K); i++),for (int i = 0; Some(i &lt; K); i++))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "93": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,i &lt; K)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.assignment,int x = c.nextInt() - 1)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.subtraction,c.nextInt() - 1)<SUB>14</SUB>>", "105": "<(IDENTIFIER,c,nextInt())<SUB>14</SUB>>", "107": "<(LOCAL,int y: int)<SUB>15</SUB>>", "109": "<(IDENTIFIER,y,int y = c.nextInt() - 1)<SUB>15</SUB>>", "111": "<(nextInt,nextInt())<SUB>15</SUB>>", "113": "<(LITERAL,1,c.nextInt() - 1)<SUB>15</SUB>>", "115": "<(LOCAL,int i1: int)<SUB>16</SUB>>", "117": "<(IDENTIFIER,i1,int i1 = 0)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i1 &lt; N)<SUB>16</SUB>>", "121": "<(IDENTIFIER,N,i1 &lt; N)<SUB>16</SUB>>", "123": "<(IDENTIFIER,i1,i1++)<SUB>16</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j1 = 0; Some(j1 &lt; M); j1++),for (int j1 = 0; Some(j1 &lt; M); j1++))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,int j1 = 0)<SUB>18</SUB>>", "129": "<(LITERAL,0,int j1 = 0)<SUB>18</SUB>>", "131": "<(IDENTIFIER,j1,j1 &lt; M)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,j1++)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,A[i1][j1] = Math.min(A[i1][j1], Math.abs(i1 - x) + Math.abs(j1 - y)))<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,A[i1])<SUB>19</SUB>>", "139": "<(IDENTIFIER,i1,A[i1][j1] = Math.min(A[i1][j1], Math.abs(i1 - x) + Math.abs(j1 - y)))<SUB>19</SUB>>", "141": "<(min,Math.min(A[i1][j1], Math.abs(i1 - x) + Math.abs(j1 - y)))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,A[i1][j1])<SUB>19</SUB>>", "145": "<(IDENTIFIER,A,Math.min(A[i1][j1], Math.abs(i1 - x) + Math.abs(j1 - y)))<SUB>19</SUB>>", "147": "<(IDENTIFIER,j1,Math.min(A[i1][j1], Math.abs(i1 - x) + Math.abs(j1 - y)))<SUB>19</SUB>>", "149": "<(abs,Math.abs(i1 - x))<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.subtraction,i1 - x)<SUB>19</SUB>>", "153": "<(IDENTIFIER,x,i1 - x)<SUB>19</SUB>>", "155": "<(IDENTIFIER,Math,Math.abs(j1 - y))<SUB>19</SUB>>", "157": "<(IDENTIFIER,j1,j1 - y)<SUB>19</SUB>>", "159": "<(LOCAL,int maxi: int)<SUB>22</SUB>>", "161": "<(IDENTIFIER,maxi,int maxi = 0)<SUB>22</SUB>>", "163": "<(LOCAL,int maxj: int)<SUB>23</SUB>>", "165": "<(IDENTIFIER,maxj,int maxj = 0)<SUB>23</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "171": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "173": "<(IDENTIFIER,i,i &lt; N)<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "179": "<(LOCAL,int j: int)<SUB>26</SUB>>", "181": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>26</SUB>>", "185": "<(IDENTIFIER,M,j &lt; M)<SUB>26</SUB>>", "187": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "189": "<(CONTROL_STRUCTURE,if (A[i][j] &gt; A[maxi][maxj]),if (A[i][j] &gt; A[maxi][maxj]))<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,A[i][j])<SUB>28</SUB>>", "193": "<(IDENTIFIER,A,A[i][j] &gt; A[maxi][maxj])<SUB>28</SUB>>", "195": "<(IDENTIFIER,j,A[i][j] &gt; A[maxi][maxj])<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,A[maxi])<SUB>28</SUB>>", "199": "<(IDENTIFIER,maxi,A[i][j] &gt; A[maxi][maxj])<SUB>28</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "203": "<(IDENTIFIER,maxi,maxi = i)<SUB>30</SUB>>", "205": "<(&lt;operator&gt;.assignment,maxj = j)<SUB>31</SUB>>", "207": "<(IDENTIFIER,j,maxj = j)<SUB>31</SUB>>", "209": "<(IDENTIFIER,out,println((maxi + 1) + &quot; &quot; + (maxj + 1)))<SUB>35</SUB>>", "211": "<(&lt;operator&gt;.addition,(maxi + 1) + &quot; &quot;)<SUB>35</SUB>>", "213": "<(IDENTIFIER,maxi,maxi + 1)<SUB>35</SUB>>", "215": "<(LITERAL,&quot; &quot;,(maxi + 1) + &quot; &quot;)<SUB>35</SUB>>", "217": "<(IDENTIFIER,maxj,maxj + 1)<SUB>35</SUB>>", "219": "<(close,close())<SUB>36</SUB>>", "221": "<(MODIFIER,PUBLIC)>", "223": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}