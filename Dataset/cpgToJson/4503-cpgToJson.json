{"edges": [["21", "23"], ["21", "307"], ["21", "308"], ["21", "309"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "42"], ["23", "43"], ["23", "47"], ["23", "48"], ["23", "52"], ["23", "53"], ["23", "57"], ["23", "58"], ["23", "62"], ["23", "63"], ["23", "68"], ["23", "69"], ["23", "76"], ["23", "132"], ["23", "199"], ["23", "200"], ["23", "206"], ["23", "212"], ["23", "217"], ["23", "296"], ["23", "305"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "86"], ["76", "88"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "100"], ["88", "116"], ["89", "90"], ["89", "99"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["101", "102"], ["101", "109"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["117", "118"], ["117", "127"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "148"], ["142", "151"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "178"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "171"], ["169", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "194"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["200", "201"], ["200", "202"], ["202", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "209"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["217", "222"], ["217", "227"], ["217", "229"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["230", "231"], ["230", "232"], ["230", "235"], ["230", "238"], ["230", "240"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["240", "241"], ["240", "250"], ["240", "251"], ["240", "260"], ["240", "261"], ["240", "284"], ["241", "242"], ["241", "249"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "281"], ["264", "265"], ["264", "270"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "280"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["288", "289"], ["288", "290"], ["288", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["305", "306"], ["24", "27"], ["27", "30"], ["28", "35"], ["31", "45"], ["43", "50"], ["48", "55"], ["53", "60"], ["58", "65"], ["63", "73"], ["69", "78"], ["200", "211"], ["206", "213"], ["212", "219"], ["296", "305"], ["305", "309"], ["26", "24"], ["30", "28"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["71", "69"], ["78", "83"], ["81", "91"], ["81", "134"], ["86", "83"], ["134", "137"], ["137", "144"], ["137", "203"], ["140", "137"], ["202", "200"], ["209", "206"], ["213", "212"], ["219", "224"], ["222", "232"], ["222", "301"], ["227", "224"], ["298", "296"], ["33", "40"], ["36", "31"], ["73", "71"], ["83", "81"], ["100", "123"], ["116", "86"], ["144", "148"], ["148", "153"], ["203", "202"], ["211", "209"], ["224", "222"], ["300", "298"], ["35", "33"], ["38", "36"], ["90", "86"], ["90", "105"], ["101", "100"], ["117", "116"], ["153", "158"], ["156", "165"], ["156", "140"], ["161", "158"], ["232", "235"], ["235", "244"], ["235", "227"], ["238", "235"], ["301", "300"], ["40", "38"], ["91", "96"], ["94", "90"], ["102", "112"], ["109", "101"], ["118", "128"], ["127", "117"], ["158", "156"], ["178", "161"], ["251", "266"], ["261", "285"], ["284", "238"], ["96", "94"], ["104", "102"], ["110", "109"], ["120", "118"], ["128", "127"], ["165", "169"], ["165", "180"], ["179", "186"], ["184", "178"], ["242", "238"], ["242", "257"], ["253", "251"], ["263", "261"], ["285", "290"], ["288", "284"], ["105", "104"], ["112", "110"], ["121", "120"], ["169", "175"], ["171", "180"], ["180", "179"], ["185", "195"], ["194", "184"], ["243", "242"], ["255", "253"], ["264", "281"], ["281", "263"], ["290", "293"], ["293", "288"], ["123", "121"], ["173", "171"], ["186", "191"], ["189", "185"], ["195", "194"], ["244", "243"], ["257", "255"], ["265", "271"], ["270", "264"], ["175", "173"], ["191", "189"], ["266", "265"], ["271", "276"], ["274", "270"], ["275", "274"], ["276", "275"], ["21", "26"], ["22", "309"], ["24", "309"], ["27", "309"], ["28", "309"], ["33", "309"], ["36", "309"], ["36", "309"], ["31", "309"], ["43", "309"], ["48", "309"], ["48", "309"], ["53", "309"], ["55", "309"], ["53", "309"], ["53", "309"], ["58", "309"], ["60", "309"], ["58", "309"], ["58", "309"], ["63", "309"], ["63", "309"], ["63", "309"], ["69", "309"], ["69", "309"], ["69", "309"], ["83", "309"], ["81", "309"], ["81", "309"], ["134", "309"], ["137", "309"], ["137", "309"], ["200", "309"], ["200", "309"], ["206", "309"], ["206", "309"], ["206", "309"], ["212", "309"], ["212", "309"], ["219", "309"], ["222", "309"], ["222", "309"], ["301", "309"], ["300", "309"], ["296", "309"], ["296", "309"], ["305", "309"], ["305", "309"], ["232", "309"], ["235", "309"], ["235", "309"], ["227", "309"], ["243", "309"], ["242", "309"], ["242", "309"], ["255", "309"], ["251", "309"], ["251", "309"], ["264", "309"], ["264", "309"], ["263", "309"], ["281", "309"], ["263", "309"], ["261", "309"], ["261", "309"], ["284", "309"], ["293", "309"], ["293", "309"], ["288", "309"], ["284", "309"], ["284", "309"], ["238", "309"], ["144", "309"], ["144", "309"], ["148", "309"], ["148", "309"], ["153", "309"], ["156", "309"], ["156", "309"], ["140", "309"], ["165", "309"], ["165", "309"], ["169", "309"], ["171", "309"], ["173", "309"], ["171", "309"], ["171", "309"], ["178", "309"], ["191", "309"], ["189", "309"], ["184", "309"], ["184", "309"], ["178", "309"], ["178", "309"], ["161", "309"], ["90", "309"], ["94", "309"], ["94", "309"], ["90", "309"], ["90", "309"], ["100", "309"], ["100", "309"], ["121", "309"], ["120", "309"], ["128", "309"], ["127", "309"], ["116", "309"], ["116", "309"], ["86", "309"], ["288", "309"], ["206", "309"], ["21", "22"], ["21", "24"], ["21", "28"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["71", "69"], ["71", "69"], ["202", "200"], ["21", "212"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["33", "31"], ["36", "31"], ["21", "78"], ["21", "134"], ["21", "206"], ["200", "206"], ["21", "219"], ["31", "296"], ["21", "296"], ["206", "296"], ["296", "305"], ["21", "305"], ["21", "33"], ["21", "41"], ["27", "45"], ["21", "45"], ["45", "50"], ["21", "50"], ["50", "55"], ["21", "55"], ["36", "60"], ["21", "60"], ["48", "65"], ["21", "65"], ["73", "71"], ["21", "71"], ["73", "71"], ["78", "81"], ["86", "81"], ["21", "81"], ["83", "81"], ["83", "81"], ["128", "86"], ["21", "86"], ["91", "86"], ["134", "137"], ["140", "137"], ["21", "137"], ["71", "137"], ["158", "137"], ["137", "140"], ["21", "140"], ["21", "144"], ["21", "148"], ["203", "202"], ["203", "202"], ["219", "222"], ["227", "222"], ["21", "222"], ["224", "222"], ["224", "222"], ["222", "227"], ["244", "227"], ["281", "227"], ["21", "227"], ["33", "36"], ["21", "36"], ["21", "73"], ["65", "73"], ["43", "83"], ["21", "83"], ["21", "153"], ["21", "203"], ["137", "203"], ["21", "224"], ["203", "224"], ["235", "224"], ["21", "232"], ["301", "300"], ["301", "300"], ["21", "300"], ["91", "90"], ["91", "90"], ["94", "90"], ["94", "90"], ["153", "156"], ["161", "156"], ["21", "156"], ["158", "156"], ["158", "156"], ["189", "161"], ["21", "161"], ["232", "235"], ["238", "235"], ["21", "235"], ["224", "235"], ["276", "235"], ["244", "238"], ["257", "238"], ["21", "238"], ["206", "251"], ["263", "261"], ["263", "261"], ["288", "284"], ["288", "284"], ["288", "284"], ["21", "301"], ["224", "301"], ["53", "91"], ["94", "91"], ["128", "91"], ["21", "91"], ["81", "91"], ["91", "94"], ["21", "94"], ["91", "94"], ["110", "109"], ["110", "109"], ["21", "109"], ["128", "127"], ["128", "127"], ["21", "127"], ["21", "158"], ["137", "158"], ["91", "96"], ["21", "96"], ["105", "104"], ["105", "104"], ["21", "104"], ["105", "110"], ["21", "110"], ["105", "110"], ["121", "120"], ["121", "120"], ["21", "120"], ["121", "128"], ["21", "128"], ["105", "128"], ["156", "165"], ["21", "165"], ["148", "165"], ["171", "165"], ["173", "171"], ["173", "171"], ["243", "242"], ["243", "242"], ["21", "242"], ["264", "263"], ["264", "263"], ["281", "263"], ["281", "263"], ["21", "288"], ["206", "288"], ["284", "288"], ["251", "288"], ["261", "288"], ["94", "105"], ["21", "105"], ["91", "105"], ["105", "112"], ["21", "112"], ["110", "121"], ["21", "121"], ["105", "121"], ["144", "169"], ["191", "169"], ["21", "169"], ["244", "243"], ["244", "243"], ["21", "243"], ["244", "255"], ["21", "255"], ["257", "255"], ["257", "255"], ["206", "281"], ["21", "281"], ["274", "281"], ["251", "293"], ["21", "293"], ["261", "293"], ["21", "123"], ["105", "123"], ["21", "173"], ["169", "173"], ["165", "189"], ["21", "189"], ["191", "189"], ["191", "189"], ["222", "244"], ["281", "244"], ["21", "244"], ["235", "244"], ["21", "257"], ["244", "257"], ["169", "175"], ["21", "175"], ["21", "191"], ["144", "191"], ["169", "191"], ["275", "274"], ["275", "274"], ["255", "274"], ["21", "274"], ["276", "275"], ["276", "275"], ["21", "275"], ["21", "276"], ["235", "276"], ["81", "94"], ["81", "96"], ["81", "81"], ["81", "91"], ["81", "90"], ["81", "86"], ["81", "83"], ["137", "153"], ["137", "144"], ["137", "148"], ["137", "137"], ["137", "158"], ["137", "140"], ["137", "156"], ["222", "232"], ["222", "224"], ["222", "235"], ["222", "227"], ["222", "222"], ["90", "120"], ["90", "128"], ["90", "102"], ["90", "104"], ["90", "121"], ["90", "112"], ["90", "101"], ["90", "118"], ["90", "100"], ["90", "127"], ["90", "116"], ["90", "123"], ["90", "105"], ["90", "110"], ["90", "117"], ["90", "109"], ["156", "161"], ["156", "179"], ["156", "178"], ["156", "185"], ["156", "189"], ["156", "191"], ["156", "195"], ["156", "184"], ["156", "194"], ["156", "186"], ["156", "180"], ["156", "158"], ["156", "165"], ["156", "156"], ["235", "244"], ["235", "243"], ["235", "242"], ["235", "238"], ["235", "235"], ["165", "169"], ["165", "173"], ["165", "171"], ["165", "175"], ["242", "257"], ["242", "261"], ["242", "290"], ["242", "275"], ["242", "264"], ["242", "284"], ["242", "255"], ["242", "281"], ["242", "285"], ["242", "293"], ["242", "288"], ["242", "276"], ["242", "265"], ["242", "274"], ["242", "270"], ["242", "251"], ["242", "253"], ["242", "263"], ["242", "271"], ["242", "266"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj1,new BufferedOutputStream(System.out))>", "39": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "45": "<(nextInt,nextInt())<SUB>4</SUB>>", "47": "<(LOCAL,int m: int)<SUB>4</SUB>>", "49": "<(IDENTIFIER,m,int m = nextInt())<SUB>4</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,String s = next())<SUB>5</SUB>>", "55": "<(next,next())<SUB>5</SUB>>", "57": "<(LOCAL,long time: long)<SUB>6</SUB>>", "59": "<(IDENTIFIER,time,long time = System.currentTimeMillis())<SUB>6</SUB>>", "61": "<(IDENTIFIER,System,System.currentTimeMillis())<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[][] a = new int[m][m])<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[m][m])>", "67": "<(IDENTIFIER,m,new int[m][m])<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,int[][] pre = new int[m][(1 &lt;&lt; m)])<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.alloc,new int[m][(1 &lt;&lt; m)])>", "73": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>8</SUB>>", "75": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>8</SUB>>", "77": "<(LOCAL,int i: int)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>9</SUB>>", "85": "<(LITERAL,1,n - 1)<SUB>9</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "89": "<(CONTROL_STRUCTURE,if (s.charAt(i) == s.charAt(i + 1)),if (s.charAt(i) == s.charAt(i + 1)))<SUB>10</SUB>>", "91": "<(charAt,s.charAt(i))<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,s.charAt(i))<SUB>10</SUB>>", "95": "<(IDENTIFIER,s,s.charAt(i + 1))<SUB>10</SUB>>", "97": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "99": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,a[s.charAt(i) - 'a'][s.charAt(i + 1) - 'a'])<SUB>11</SUB>>", "103": "<(IDENTIFIER,a,a[s.charAt(i) - 'a'][s.charAt(i + 1) - 'a']++)<SUB>11</SUB>>", "105": "<(charAt,s.charAt(i))<SUB>11</SUB>>", "107": "<(IDENTIFIER,i,s.charAt(i))<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.subtraction,s.charAt(i + 1) - 'a')<SUB>11</SUB>>", "111": "<(IDENTIFIER,s,s.charAt(i + 1))<SUB>11</SUB>>", "113": "<(IDENTIFIER,i,i + 1)<SUB>11</SUB>>", "115": "<(LITERAL,'a',s.charAt(i + 1) - 'a')<SUB>11</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[s.charAt(i + 1) - 'a'][s.charAt(i) - 'a'])<SUB>12</SUB>>", "119": "<(IDENTIFIER,a,a[s.charAt(i + 1) - 'a'][s.charAt(i) - 'a']++)<SUB>12</SUB>>", "121": "<(charAt,s.charAt(i + 1))<SUB>12</SUB>>", "123": "<(&lt;operator&gt;.addition,i + 1)<SUB>12</SUB>>", "125": "<(LITERAL,1,i + 1)<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.subtraction,s.charAt(i) - 'a')<SUB>12</SUB>>", "129": "<(IDENTIFIER,s,s.charAt(i))<SUB>12</SUB>>", "131": "<(LITERAL,'a',s.charAt(i) - 'a')<SUB>12</SUB>>", "133": "<(LOCAL,int i: int)<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>15</SUB>>", "139": "<(IDENTIFIER,m,i &lt; m)<SUB>15</SUB>>", "141": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "143": "<(LOCAL,int b: int)<SUB>16</SUB>>", "145": "<(IDENTIFIER,b,int b = 0)<SUB>16</SUB>>", "147": "<(LOCAL,int stor: int)<SUB>16</SUB>>", "149": "<(IDENTIFIER,stor,int stor = 2)<SUB>16</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; (1 &lt;&lt; m)); j++),for (int j = 1; Some(j &lt; (1 &lt;&lt; m)); j++))<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>17</SUB>>", "155": "<(LITERAL,1,int j = 1)<SUB>17</SUB>>", "157": "<(IDENTIFIER,j,j &lt; (1 &lt;&lt; m))<SUB>17</SUB>>", "159": "<(LITERAL,1,1 &lt;&lt; m)<SUB>17</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "165": "<(&lt;operator&gt;.equals,j == stor)<SUB>18</SUB>>", "167": "<(IDENTIFIER,stor,j == stor)<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,b++)<SUB>19</SUB>>", "171": "<(&lt;operator&gt;.assignment,stor = 1 &lt;&lt; (b + 1))<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (b + 1))<SUB>20</SUB>>", "175": "<(&lt;operator&gt;.addition,b + 1)<SUB>20</SUB>>", "177": "<(LITERAL,1,b + 1)<SUB>20</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,pre[i][j])<SUB>22</SUB>>", "181": "<(IDENTIFIER,pre,pre[i][j] = pre[i][j ^ (1 &lt;&lt; b)] + a[i][b])<SUB>22</SUB>>", "183": "<(IDENTIFIER,j,pre[i][j] = pre[i][j ^ (1 &lt;&lt; b)] + a[i][b])<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,pre[i][j ^ (1 &lt;&lt; b)])<SUB>22</SUB>>", "187": "<(IDENTIFIER,pre,pre[i][j ^ (1 &lt;&lt; b)] + a[i][b])<SUB>22</SUB>>", "189": "<(&lt;operator&gt;.xor,j ^ (1 &lt;&lt; b))<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>22</SUB>>", "193": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>22</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>22</SUB>>", "197": "<(IDENTIFIER,i,pre[i][j ^ (1 &lt;&lt; b)] + a[i][b])<SUB>22</SUB>>", "199": "<(LOCAL,long[] dp: long[])<SUB>26</SUB>>", "201": "<(IDENTIFIER,dp,long[] dp = new long[1 &lt;&lt; m])<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>26</SUB>>", "205": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>26</SUB>>", "207": "<(IDENTIFIER,Arrays,fill(dp, Integer.MAX_VALUE))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>27</SUB>>", "211": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>28</SUB>>", "215": "<(LITERAL,0,dp[0] = 0)<SUB>28</SUB>>", "217": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; m)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; m)); mask++))<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>29</SUB>>", "221": "<(LITERAL,1,int mask = 1)<SUB>29</SUB>>", "223": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; m))<SUB>29</SUB>>", "225": "<(LITERAL,1,1 &lt;&lt; m)<SUB>29</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>29</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "231": "<(LOCAL,int i: int)<SUB>31</SUB>>", "233": "<(IDENTIFIER,i,int i = 0)<SUB>31</SUB>>", "235": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>31</SUB>>", "237": "<(IDENTIFIER,m,i &lt; m)<SUB>31</SUB>>", "239": "<(IDENTIFIER,i,i++)<SUB>31</SUB>>", "241": "<(CONTROL_STRUCTURE,if (((mask &gt;&gt; i) &amp; 1) == 0),if (((mask &gt;&gt; i) &amp; 1) == 0))<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.and,(mask &gt;&gt; i) &amp; 1)<SUB>32</SUB>>", "245": "<(IDENTIFIER,mask,mask &gt;&gt; i)<SUB>32</SUB>>", "247": "<(LITERAL,1,(mask &gt;&gt; i) &amp; 1)<SUB>32</SUB>>", "249": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>32</SUB>>", "251": "<(&lt;operator&gt;.assignment,long prev = dp[mask ^ (1 &lt;&lt; i)])<SUB>33</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)])<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>33</SUB>>", "257": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>33</SUB>>", "259": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>33</SUB>>", "261": "<(&lt;operator&gt;.assignment,long contribution = (pre[i][mask] - pre[i][((1 &lt;&lt; m) - 1) ^ mask]) * Integer.bitCount(mask))<SUB>34</SUB>>", "263": "<(&lt;operator&gt;.multiplication,(pre[i][mask] - pre[i][((1 &lt;&lt; m) - 1) ^ mask]) * Integer.bitCount(mask))<SUB>34</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,pre[i][mask])<SUB>34</SUB>>", "267": "<(IDENTIFIER,pre,pre[i][mask] - pre[i][((1 &lt;&lt; m) - 1) ^ mask])<SUB>34</SUB>>", "269": "<(IDENTIFIER,mask,pre[i][mask] - pre[i][((1 &lt;&lt; m) - 1) ^ mask])<SUB>34</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,pre[i])<SUB>34</SUB>>", "273": "<(IDENTIFIER,i,pre[i][mask] - pre[i][((1 &lt;&lt; m) - 1) ^ mask])<SUB>34</SUB>>", "275": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; m) - 1)<SUB>34</SUB>>", "277": "<(LITERAL,1,1 &lt;&lt; m)<SUB>34</SUB>>", "279": "<(LITERAL,1,(1 &lt;&lt; m) - 1)<SUB>34</SUB>>", "281": "<(bitCount,Integer.bitCount(mask))<SUB>34</SUB>>", "283": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>34</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>35</SUB>>", "287": "<(IDENTIFIER,mask,dp[mask] = Math.min(dp[mask], prev + contribution))<SUB>35</SUB>>", "289": "<(IDENTIFIER,Math,Math.min(dp[mask], prev + contribution))<SUB>35</SUB>>", "291": "<(IDENTIFIER,dp,Math.min(dp[mask], prev + contribution))<SUB>35</SUB>>", "293": "<(&lt;operator&gt;.addition,prev + contribution)<SUB>35</SUB>>", "295": "<(IDENTIFIER,contribution,prev + contribution)<SUB>35</SUB>>", "297": "<(IDENTIFIER,out,println(dp[(1 &lt;&lt; m) - 1]))<SUB>39</SUB>>", "299": "<(IDENTIFIER,dp,println(dp[(1 &lt;&lt; m) - 1]))<SUB>39</SUB>>", "301": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>39</SUB>>", "303": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>39</SUB>>", "305": "<(close,close())<SUB>40</SUB>>", "307": "<(MODIFIER,PUBLIC)>", "309": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}