{"edges": [["23", "24"], ["23", "25"], ["23", "388"], ["23", "389"], ["23", "390"], ["25", "26"], ["25", "31"], ["25", "55"], ["25", "60"], ["25", "4"], ["25", "86"], ["25", "89"], ["25", "6"], ["25", "100"], ["25", "103"], ["25", "121"], ["25", "122"], ["25", "128"], ["25", "129"], ["25", "135"], ["25", "136"], ["25", "142"], ["25", "143"], ["25", "8"], ["25", "146"], ["25", "149"], ["25", "152"], ["25", "153"], ["25", "207"], ["25", "208"], ["25", "215"], ["25", "222"], ["25", "223"], ["25", "226"], ["25", "379"], ["25", "386"], ["26", "27"], ["26", "30"], ["27", "28"], ["27", "29"], ["31", "32"], ["31", "33"], ["31", "36"], ["31", "39"], ["31", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["41", "42"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "54"], ["47", "48"], ["47", "53"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "85"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["89", "3"], ["89", "90"], ["90", "91"], ["90", "94"], ["90", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "5"], ["103", "104"], ["104", "105"], ["104", "108"], ["104", "120"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "114"], ["110", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "7"], ["149", "150"], ["150", "151"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "161"], ["153", "163"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "165"], ["163", "171"], ["163", "196"], ["163", "202"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["169", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "179"], ["171", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["182", "183"], ["182", "190"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "195"], ["191", "192"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "201"], ["197", "198"], ["197", "199"], ["199", "200"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["226", "231"], ["226", "234"], ["226", "236"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["236", "372"], ["237", "238"], ["237", "239"], ["237", "242"], ["237", "245"], ["237", "247"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["247", "258"], ["247", "259"], ["247", "266"], ["248", "249"], ["248", "256"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["256", "257"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["266", "271"], ["266", "279"], ["266", "281"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["273", "276"], ["276", "277"], ["276", "278"], ["279", "280"], ["281", "282"], ["282", "283"], ["282", "284"], ["282", "287"], ["282", "293"], ["282", "295"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "291"], ["289", "292"], ["293", "294"], ["295", "296"], ["295", "297"], ["295", "341"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "340"], ["300", "301"], ["300", "330"], ["301", "302"], ["301", "329"], ["302", "303"], ["302", "325"], ["303", "304"], ["303", "324"], ["304", "305"], ["304", "316"], ["305", "306"], ["305", "315"], ["306", "307"], ["306", "312"], ["307", "308"], ["307", "311"], ["308", "309"], ["308", "310"], ["312", "313"], ["312", "314"], ["316", "317"], ["316", "318"], ["316", "321"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "327"], ["325", "328"], ["330", "331"], ["330", "332"], ["330", "337"], ["332", "333"], ["332", "336"], ["333", "334"], ["333", "335"], ["337", "338"], ["337", "339"], ["341", "342"], ["341", "355"], ["342", "343"], ["342", "348"], ["343", "344"], ["343", "345"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "354"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["355", "356"], ["355", "371"], ["356", "357"], ["356", "370"], ["357", "358"], ["357", "363"], ["358", "359"], ["358", "360"], ["360", "361"], ["360", "362"], ["363", "364"], ["363", "369"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["372", "373"], ["372", "374"], ["374", "375"], ["374", "376"], ["376", "377"], ["376", "378"], ["379", "380"], ["379", "381"], ["381", "382"], ["381", "385"], ["382", "383"], ["382", "384"], ["386", "387"], ["26", "33"], ["55", "62"], ["86", "93"], ["89", "102"], ["100", "107"], ["103", "126"], ["122", "132"], ["129", "139"], ["136", "143"], ["143", "148"], ["146", "150"], ["149", "155"], ["208", "217"], ["215", "223"], ["223", "228"], ["379", "386"], ["386", "390"], ["27", "26"], ["33", "36"], ["36", "43"], ["36", "56"], ["39", "36"], ["56", "55"], ["62", "65"], ["65", "72"], ["65", "88"], ["68", "65"], ["88", "86"], ["102", "100"], ["124", "122"], ["131", "129"], ["138", "136"], ["148", "146"], ["150", "149"], ["155", "158"], ["158", "169"], ["158", "211"], ["161", "158"], ["210", "208"], ["216", "215"], ["228", "231"], ["231", "239"], ["231", "382"], ["234", "231"], ["381", "379"], ["42", "39"], ["71", "68"], ["91", "98"], ["94", "89"], ["105", "113"], ["108", "103"], ["126", "124"], ["132", "131"], ["139", "138"], ["165", "173"], ["196", "203"], ["202", "161"], ["211", "210"], ["217", "216"], ["372", "234"], ["382", "381"], ["43", "50"], ["46", "42"], ["72", "79"], ["75", "71"], ["93", "91"], ["96", "94"], ["107", "105"], ["167", "165"], ["173", "176"], ["176", "187"], ["176", "199"], ["179", "176"], ["197", "196"], ["203", "202"], ["239", "242"], ["242", "251"], ["242", "376"], ["245", "242"], ["374", "372"], ["47", "46"], ["76", "75"], ["98", "96"], ["111", "118"], ["114", "108"], ["169", "167"], ["199", "197"], ["259", "268"], ["376", "374"], ["48", "47"], ["77", "82"], ["82", "76"], ["113", "111"], ["116", "114"], ["183", "192"], ["183", "179"], ["249", "245"], ["249", "263"], ["261", "259"], ["268", "276"], ["271", "284"], ["271", "245"], ["279", "276"], ["50", "48"], ["79", "77"], ["118", "116"], ["185", "183"], ["191", "179"], ["250", "249"], ["263", "261"], ["273", "271"], ["187", "185"], ["192", "191"], ["251", "250"], ["276", "273"], ["284", "289"], ["287", "308"], ["287", "279"], ["293", "289"], ["289", "287"], ["297", "345"], ["341", "293"], ["299", "297"], ["342", "360"], ["355", "341"], ["300", "299"], ["343", "350"], ["348", "342"], ["356", "355"], ["301", "333"], ["330", "300"], ["345", "343"], ["349", "348"], ["357", "356"], ["302", "301"], ["332", "337"], ["337", "330"], ["350", "349"], ["358", "365"], ["363", "357"], ["303", "325"], ["325", "302"], ["333", "332"], ["360", "358"], ["364", "363"], ["304", "303"], ["365", "364"], ["305", "318"], ["316", "304"], ["306", "305"], ["318", "321"], ["321", "316"], ["307", "312"], ["312", "306"], ["308", "307"], ["23", "27"], ["24", "390"], ["26", "390"], ["26", "390"], ["33", "390"], ["36", "390"], ["55", "390"], ["55", "390"], ["62", "390"], ["65", "390"], ["86", "390"], ["94", "390"], ["94", "390"], ["94", "390"], ["89", "390"], ["100", "390"], ["108", "390"], ["111", "390"], ["114", "390"], ["114", "390"], ["114", "390"], ["108", "390"], ["103", "390"], ["124", "390"], ["122", "390"], ["122", "390"], ["129", "390"], ["129", "390"], ["129", "390"], ["136", "390"], ["138", "390"], ["136", "390"], ["136", "390"], ["143", "390"], ["146", "390"], ["149", "390"], ["150", "390"], ["149", "390"], ["149", "390"], ["155", "390"], ["158", "390"], ["158", "390"], ["208", "390"], ["210", "390"], ["210", "390"], ["208", "390"], ["208", "390"], ["215", "390"], ["215", "390"], ["223", "390"], ["223", "390"], ["228", "390"], ["231", "390"], ["231", "390"], ["231", "390"], ["379", "390"], ["379", "390"], ["386", "390"], ["386", "390"], ["239", "390"], ["242", "390"], ["242", "390"], ["242", "390"], ["372", "390"], ["372", "390"], ["372", "390"], ["234", "390"], ["249", "390"], ["249", "390"], ["259", "390"], ["268", "390"], ["271", "390"], ["273", "390"], ["273", "390"], ["273", "390"], ["271", "390"], ["271", "390"], ["284", "390"], ["287", "390"], ["287", "390"], ["287", "390"], ["279", "390"], ["306", "390"], ["306", "390"], ["305", "390"], ["304", "390"], ["316", "390"], ["316", "390"], ["304", "390"], ["303", "390"], ["302", "390"], ["302", "390"], ["301", "390"], ["300", "390"], ["330", "390"], ["330", "390"], ["330", "390"], ["300", "390"], ["299", "390"], ["297", "390"], ["297", "390"], ["341", "390"], ["364", "390"], ["363", "390"], ["356", "390"], ["355", "390"], ["355", "390"], ["341", "390"], ["341", "390"], ["293", "390"], ["245", "390"], ["167", "390"], ["169", "390"], ["167", "390"], ["165", "390"], ["165", "390"], ["173", "390"], ["176", "390"], ["176", "390"], ["196", "390"], ["196", "390"], ["196", "390"], ["202", "390"], ["202", "390"], ["161", "390"], ["183", "390"], ["185", "390"], ["183", "390"], ["183", "390"], ["191", "390"], ["191", "390"], ["179", "390"], ["71", "390"], ["76", "390"], ["76", "390"], ["75", "390"], ["75", "390"], ["71", "390"], ["71", "390"], ["68", "390"], ["42", "390"], ["47", "390"], ["46", "390"], ["46", "390"], ["42", "390"], ["42", "390"], ["39", "390"], ["55", "390"], ["23", "24"], ["23", "26"], ["23", "55"], ["23", "86"], ["23", "100"], ["124", "122"], ["124", "122"], ["131", "129"], ["138", "136"], ["23", "143"], ["23", "146"], ["210", "208"], ["210", "208"], ["23", "215"], ["23", "223"], ["23", "33"], ["23", "62"], ["86", "89"], ["23", "89"], ["91", "89"], ["94", "89"], ["100", "103"], ["23", "103"], ["111", "103"], ["108", "103"], ["146", "149"], ["23", "149"], ["150", "149"], ["23", "155"], ["23", "228"], ["103", "379"], ["23", "379"], ["379", "386"], ["23", "386"], ["33", "36"], ["39", "36"], ["23", "36"], ["47", "39"], ["23", "39"], ["46", "42"], ["46", "42"], ["62", "65"], ["68", "65"], ["23", "65"], ["23", "68"], ["65", "68"], ["75", "71"], ["75", "71"], ["23", "91"], ["23", "99"], ["23", "105"], ["23", "120"], ["23", "124"], ["126", "124"], ["122", "131"], ["23", "131"], ["23", "138"], ["122", "138"], ["126", "150"], ["23", "150"], ["155", "158"], ["161", "158"], ["23", "158"], ["122", "158"], ["158", "161"], ["23", "161"], ["167", "165"], ["167", "165"], ["165", "196"], ["185", "196"], ["23", "196"], ["23", "202"], ["143", "210"], ["199", "210"], ["23", "210"], ["158", "210"], ["228", "231"], ["234", "231"], ["23", "231"], ["143", "231"], ["199", "231"], ["23", "234"], ["231", "234"], ["136", "372"], ["91", "94"], ["23", "94"], ["105", "108"], ["23", "108"], ["111", "108"], ["114", "108"], ["89", "126"], ["23", "126"], ["122", "132"], ["23", "132"], ["23", "139"], ["122", "139"], ["23", "173"], ["143", "211"], ["199", "211"], ["23", "211"], ["23", "239"], ["223", "372"], ["23", "372"], ["47", "46"], ["47", "46"], ["23", "46"], ["76", "75"], ["76", "75"], ["46", "75"], ["23", "75"], ["23", "111"], ["23", "119"], ["124", "167"], ["23", "167"], ["169", "167"], ["173", "176"], ["179", "176"], ["23", "176"], ["143", "176"], ["199", "176"], ["176", "179"], ["23", "179"], ["239", "242"], ["245", "242"], ["23", "242"], ["210", "242"], ["242", "245"], ["289", "245"], ["23", "245"], ["136", "259"], ["50", "47"], ["23", "47"], ["23", "76"], ["65", "76"], ["111", "114"], ["23", "114"], ["149", "169"], ["23", "169"], ["176", "199"], ["23", "199"], ["23", "268"], ["231", "376"], ["23", "376"], ["23", "82"], ["65", "82"], ["23", "183"], ["185", "183"], ["185", "183"], ["306", "249"], ["23", "249"], ["268", "271"], ["279", "271"], ["23", "271"], ["273", "271"], ["273", "271"], ["273", "271"], ["289", "279"], ["23", "279"], ["36", "50"], ["23", "50"], ["65", "79"], ["23", "79"], ["165", "185"], ["23", "185"], ["129", "185"], ["136", "191"], ["231", "263"], ["23", "263"], ["289", "273"], ["23", "273"], ["259", "273"], ["318", "273"], ["223", "273"], ["372", "273"], ["23", "284"], ["223", "276"], ["372", "276"], ["23", "276"], ["284", "287"], ["293", "287"], ["23", "287"], ["289", "287"], ["289", "287"], ["289", "287"], ["365", "293"], ["23", "293"], ["299", "297"], ["299", "297"], ["355", "341"], ["355", "341"], ["273", "289"], ["23", "289"], ["242", "289"], ["365", "289"], ["271", "289"], ["363", "289"], ["300", "299"], ["300", "299"], ["301", "299"], ["23", "299"], ["341", "355"], ["297", "355"], ["23", "355"], ["299", "355"], ["301", "300"], ["301", "300"], ["330", "300"], ["330", "300"], ["330", "300"], ["350", "348"], ["350", "348"], ["318", "348"], ["23", "348"], ["337", "348"], ["341", "356"], ["297", "356"], ["23", "356"], ["302", "301"], ["302", "301"], ["303", "301"], ["23", "301"], ["325", "330"], ["23", "330"], ["332", "330"], ["332", "330"], ["337", "330"], ["337", "330"], ["23", "345"], ["350", "349"], ["350", "349"], ["318", "349"], ["23", "349"], ["303", "302"], ["303", "302"], ["325", "302"], ["325", "302"], ["325", "302"], ["23", "332"], ["325", "332"], ["321", "337"], ["23", "337"], ["325", "337"], ["332", "350"], ["23", "350"], ["337", "350"], ["365", "363"], ["365", "363"], ["23", "363"], ["318", "363"], ["348", "363"], ["304", "303"], ["304", "303"], ["305", "303"], ["23", "303"], ["316", "325"], ["23", "325"], ["289", "325"], ["287", "325"], ["23", "333"], ["23", "360"], ["365", "364"], ["365", "364"], ["23", "364"], ["318", "364"], ["305", "304"], ["305", "304"], ["316", "304"], ["316", "304"], ["316", "304"], ["350", "365"], ["23", "365"], ["350", "365"], ["306", "305"], ["306", "305"], ["355", "305"], ["75", "305"], ["46", "305"], ["23", "305"], ["330", "316"], ["183", "316"], ["23", "316"], ["318", "316"], ["318", "316"], ["321", "316"], ["321", "316"], ["249", "306"], ["273", "318"], ["23", "318"], ["289", "321"], ["23", "321"], ["36", "42"], ["36", "50"], ["36", "36"], ["36", "48"], ["36", "39"], ["36", "43"], ["36", "47"], ["36", "46"], ["65", "68"], ["65", "76"], ["65", "72"], ["65", "65"], ["65", "71"], ["65", "77"], ["65", "75"], ["65", "79"], ["65", "82"], ["158", "167"], ["158", "161"], ["158", "196"], ["158", "202"], ["158", "158"], ["158", "176"], ["158", "199"], ["158", "169"], ["158", "197"], ["158", "173"], ["158", "165"], ["158", "203"], ["231", "376"], ["231", "242"], ["231", "374"], ["231", "372"], ["231", "231"], ["231", "239"], ["231", "234"], ["176", "176"], ["176", "179"], ["176", "185"], ["176", "187"], ["176", "183"], ["242", "242"], ["242", "249"], ["242", "245"], ["242", "251"], ["242", "250"], ["183", "192"], ["183", "191"], ["249", "268"], ["249", "276"], ["249", "273"], ["249", "261"], ["249", "259"], ["249", "263"], ["249", "271"], ["271", "276"], ["271", "273"], ["271", "279"], ["271", "284"], ["271", "289"], ["271", "287"], ["271", "271"], ["287", "308"], ["287", "358"], ["287", "356"], ["287", "300"], ["287", "302"], ["287", "349"], ["287", "306"], ["287", "355"], ["287", "304"], ["287", "348"], ["287", "364"], ["287", "357"], ["287", "365"], ["287", "305"], ["287", "360"], ["287", "316"], ["287", "297"], ["287", "321"], ["287", "342"], ["287", "337"], ["287", "307"], ["287", "341"], ["287", "301"], ["287", "332"], ["287", "289"], ["287", "293"], ["287", "325"], ["287", "318"], ["287", "343"], ["287", "333"], ["287", "299"], ["287", "287"], ["287", "330"], ["287", "345"], ["287", "350"], ["287", "303"], ["287", "312"], ["287", "363"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.indexAccess,fact[0])<SUB>2</SUB>>", "29": "<(LITERAL,0,fact[0] = 1)<SUB>2</SUB>>", "31": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; 305); i++),for (int i = 1; Some(i &lt; 305); i++))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>3</SUB>>", "35": "<(LITERAL,1,int i = 1)<SUB>3</SUB>>", "37": "<(IDENTIFIER,i,i &lt; 305)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,i++)<SUB>3</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.indexAccess,fact[i])<SUB>4</SUB>>", "45": "<(IDENTIFIER,i,fact[i] = fact[i - 1] * i % MOD)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.multiplication,fact[i - 1] * i)<SUB>4</SUB>>", "49": "<(IDENTIFIER,fact,fact[i - 1] * i)<SUB>4</SUB>>", "51": "<(IDENTIFIER,i,i - 1)<SUB>4</SUB>>", "53": "<(IDENTIFIER,i,fact[i - 1] * i)<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,iFact[304] = I304)<SUB>6</SUB>>", "57": "<(IDENTIFIER,iFact,iFact[304] = I304)<SUB>6</SUB>>", "59": "<(IDENTIFIER,I304,iFact[304] = I304)<SUB>6</SUB>>", "61": "<(LOCAL,int i: int)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,int i = 303)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>7</SUB>>", "67": "<(LITERAL,0,i &gt;= 0)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i--)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,iFact[i] = iFact[i + 1] * (i + 1) % MOD)<SUB>8</SUB>>", "73": "<(IDENTIFIER,iFact,iFact[i] = iFact[i + 1] * (i + 1) % MOD)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.modulo,iFact[i + 1] * (i + 1) % MOD)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,iFact[i + 1])<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.addition,i + 1)<SUB>8</SUB>>", "81": "<(LITERAL,1,i + 1)<SUB>8</SUB>>", "83": "<(IDENTIFIER,i,i + 1)<SUB>8</SUB>>", "85": "<(IDENTIFIER,MOD,iFact[i + 1] * (i + 1) % MOD)<SUB>8</SUB>>", "86": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>11</SUB>>", "88": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>11</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "93": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>11</SUB>>", "95": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "97": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>11</SUB>>", "99": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "100": "<(&lt;operator&gt;.assignment,ANY printer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>12</SUB>>", "102": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>12</SUB>>", "5": "<(IDENTIFIER,printer,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "107": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>12</SUB>>", "109": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "111": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "113": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>12</SUB>>", "115": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "117": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>12</SUB>>", "119": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "121": "<(LOCAL,int len: int)<SUB>13</SUB>>", "123": "<(IDENTIFIER,len,int len = parseInt(reader.readLine()))<SUB>13</SUB>>", "125": "<(IDENTIFIER,Integer,parseInt(reader.readLine()))<SUB>13</SUB>>", "127": "<(IDENTIFIER,reader,readLine())<SUB>13</SUB>>", "129": "<(&lt;operator&gt;.assignment,long[] groups = new long[len + 1])<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.alloc,new long[len + 1])>", "133": "<(IDENTIFIER,len,len + 1)<SUB>14</SUB>>", "135": "<(LOCAL,int[] gSizes: int[])<SUB>15</SUB>>", "137": "<(IDENTIFIER,gSizes,int[] gSizes = new int[len + 1])<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.addition,len + 1)<SUB>15</SUB>>", "141": "<(LITERAL,1,len + 1)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.assignment,int nG = 0)<SUB>16</SUB>>", "145": "<(LITERAL,0,int nG = 0)<SUB>16</SUB>>", "146": "<(&lt;operator&gt;.assignment,ANY inputData = new StringTokenizer(reader.readLine()))<SUB>18</SUB>>", "148": "<(&lt;operator&gt;.alloc,new StringTokenizer(reader.readLine()))<SUB>18</SUB>>", "7": "<(IDENTIFIER,inputData,new StringTokenizer(reader.readLine()))<SUB>18</SUB>>", "151": "<(IDENTIFIER,reader,readLine())<SUB>18</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; len); i++),for (int i = 0; Some(i &lt; len); i++))<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "157": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "159": "<(IDENTIFIER,i,i &lt; len)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.assignment,long nxt = parseInt(inputData.nextToken()))<SUB>21</SUB>>", "167": "<(parseInt,parseInt(inputData.nextToken()))<SUB>21</SUB>>", "169": "<(nextToken,nextToken())<SUB>21</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= nG); j++),for (int j = 1; Some(j &lt;= nG); j++))<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>22</SUB>>", "175": "<(LITERAL,1,int j = 1)<SUB>22</SUB>>", "177": "<(IDENTIFIER,j,j &lt;= nG)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "183": "<(isSquare,isSquare(nxt * groups[j]))<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.multiplication,nxt * groups[j])<SUB>23</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,groups[j])<SUB>23</SUB>>", "189": "<(IDENTIFIER,j,nxt * groups[j])<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,gSizes[j]++)<SUB>24</SUB>>", "193": "<(IDENTIFIER,gSizes,gSizes[j]++)<SUB>24</SUB>>", "195": "<(CONTROL_STRUCTURE,continue iLoop;,continue iLoop;)<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,groups[++nG])<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.preIncrement,++nG)<SUB>28</SUB>>", "201": "<(IDENTIFIER,nxt,groups[++nG] = nxt)<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,gSizes[nG])<SUB>29</SUB>>", "205": "<(IDENTIFIER,nG,gSizes[nG] = 1)<SUB>29</SUB>>", "207": "<(LOCAL,long[][] dp: long[][])<SUB>32</SUB>>", "209": "<(IDENTIFIER,dp,long[][] dp = new long[nG + 1][len])<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.addition,nG + 1)<SUB>32</SUB>>", "213": "<(LITERAL,1,nG + 1)<SUB>32</SUB>>", "215": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>34</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>34</SUB>>", "219": "<(LITERAL,0,dp[0][0] = 1)<SUB>34</SUB>>", "221": "<(LITERAL,1,dp[0][0] = 1)<SUB>34</SUB>>", "223": "<(&lt;operator&gt;.assignment,int fTotal = 0)<SUB>36</SUB>>", "225": "<(LITERAL,0,int fTotal = 0)<SUB>36</SUB>>", "227": "<(LOCAL,int fG: int)<SUB>37</SUB>>", "229": "<(IDENTIFIER,fG,int fG = 0)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.lessThan,fG &lt; nG)<SUB>37</SUB>>", "233": "<(IDENTIFIER,nG,fG &lt; nG)<SUB>37</SUB>>", "235": "<(IDENTIFIER,fG,fG++)<SUB>37</SUB>>", "237": "<(CONTROL_STRUCTURE,for (int fB = 0; Some(fB &lt; len); fB++),for (int fB = 0; Some(fB &lt; len); fB++))<SUB>38</SUB>>", "239": "<(&lt;operator&gt;.assignment,int fB = 0)<SUB>38</SUB>>", "241": "<(LITERAL,0,int fB = 0)<SUB>38</SUB>>", "243": "<(IDENTIFIER,fB,fB &lt; len)<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.postIncrement,fB++)<SUB>38</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "249": "<(&lt;operator&gt;.equals,dp[fG][fB] == 0)<SUB>39</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,dp[fG])<SUB>39</SUB>>", "253": "<(IDENTIFIER,fG,dp[fG][fB] == 0)<SUB>39</SUB>>", "255": "<(LITERAL,0,dp[fG][fB] == 0)<SUB>39</SUB>>", "257": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>40</SUB>>", "259": "<(&lt;operator&gt;.assignment,int nGSize = gSizes[fG + 1])<SUB>42</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,gSizes[fG + 1])<SUB>42</SUB>>", "263": "<(&lt;operator&gt;.addition,fG + 1)<SUB>42</SUB>>", "265": "<(LITERAL,1,fG + 1)<SUB>42</SUB>>", "267": "<(LOCAL,int nS: int)<SUB>43</SUB>>", "269": "<(IDENTIFIER,nS,int nS = 1)<SUB>43</SUB>>", "271": "<(&lt;operator&gt;.lessEqualsThan,nS &lt;= Math.min(nGSize, fTotal + 1))<SUB>43</SUB>>", "273": "<(min,Math.min(nGSize, fTotal + 1))<SUB>43</SUB>>", "275": "<(IDENTIFIER,nGSize,Math.min(nGSize, fTotal + 1))<SUB>43</SUB>>", "277": "<(IDENTIFIER,fTotal,fTotal + 1)<SUB>43</SUB>>", "279": "<(&lt;operator&gt;.postIncrement,nS++)<SUB>43</SUB>>", "281": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "283": "<(LOCAL,int nBR: int)<SUB>44</SUB>>", "285": "<(IDENTIFIER,nBR,int nBR = 0)<SUB>44</SUB>>", "287": "<(&lt;operator&gt;.lessEqualsThan,nBR &lt;= Math.min(fB, nS))<SUB>44</SUB>>", "289": "<(min,Math.min(fB, nS))<SUB>44</SUB>>", "291": "<(IDENTIFIER,fB,Math.min(fB, nS))<SUB>44</SUB>>", "293": "<(&lt;operator&gt;.postIncrement,nBR++)<SUB>44</SUB>>", "295": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "297": "<(&lt;operator&gt;.assignment,long nW = dp[fG][fB] * fact[nGSize] % MOD * comb(nGSize - 1, nS - 1) % MOD * comb(fB, nBR) % MOD * comb(fTotal + 1 - fB, nS - nBR) % MOD)<SUB>45</SUB>>", "299": "<(&lt;operator&gt;.modulo,dp[fG][fB] * fact[nGSize] % MOD * comb(nGSize - 1, nS - 1) % MOD * comb(fB, nBR) % MOD * comb(fTotal + 1 - fB, nS - nBR) % MOD)<SUB>45</SUB>>", "301": "<(&lt;operator&gt;.modulo,dp[fG][fB] * fact[nGSize] % MOD * comb(nGSize - 1, nS - 1) % MOD * comb(fB, nBR) % MOD)<SUB>45</SUB>>", "303": "<(&lt;operator&gt;.modulo,dp[fG][fB] * fact[nGSize] % MOD * comb(nGSize - 1, nS - 1) % MOD)<SUB>45</SUB>>", "305": "<(&lt;operator&gt;.modulo,dp[fG][fB] * fact[nGSize] % MOD)<SUB>45</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,dp[fG][fB])<SUB>45</SUB>>", "309": "<(IDENTIFIER,dp,dp[fG][fB] * fact[nGSize])<SUB>45</SUB>>", "311": "<(IDENTIFIER,fB,dp[fG][fB] * fact[nGSize])<SUB>45</SUB>>", "313": "<(IDENTIFIER,fact,dp[fG][fB] * fact[nGSize])<SUB>45</SUB>>", "315": "<(IDENTIFIER,MOD,dp[fG][fB] * fact[nGSize] % MOD)<SUB>45</SUB>>", "317": "<(IDENTIFIER,this,comb(nGSize - 1, nS - 1))<SUB>45</SUB>>", "319": "<(IDENTIFIER,nGSize,nGSize - 1)<SUB>45</SUB>>", "321": "<(&lt;operator&gt;.subtraction,nS - 1)<SUB>45</SUB>>", "323": "<(LITERAL,1,nS - 1)<SUB>45</SUB>>", "325": "<(comb,comb(fB, nBR))<SUB>45</SUB>>", "327": "<(IDENTIFIER,fB,comb(fB, nBR))<SUB>45</SUB>>", "329": "<(IDENTIFIER,MOD,dp[fG][fB] * fact[nGSize] % MOD * comb(nGSize - 1, nS - 1) % MOD * comb(fB, nBR) % MOD)<SUB>45</SUB>>", "331": "<(IDENTIFIER,this,comb(fTotal + 1 - fB, nS - nBR))<SUB>46</SUB>>", "333": "<(&lt;operator&gt;.addition,fTotal + 1)<SUB>46</SUB>>", "335": "<(LITERAL,1,fTotal + 1)<SUB>46</SUB>>", "337": "<(&lt;operator&gt;.subtraction,nS - nBR)<SUB>46</SUB>>", "339": "<(IDENTIFIER,nBR,nS - nBR)<SUB>46</SUB>>", "341": "<(&lt;operator&gt;.assignment,dp[fG + 1][fB - nBR + nGSize - nS] = (dp[fG + 1][fB - nBR + nGSize - nS] + nW) % MOD)<SUB>47</SUB>>", "343": "<(&lt;operator&gt;.indexAccess,dp[fG + 1])<SUB>47</SUB>>", "345": "<(&lt;operator&gt;.addition,fG + 1)<SUB>47</SUB>>", "347": "<(LITERAL,1,fG + 1)<SUB>47</SUB>>", "349": "<(&lt;operator&gt;.addition,fB - nBR + nGSize)<SUB>47</SUB>>", "351": "<(IDENTIFIER,fB,fB - nBR)<SUB>47</SUB>>", "353": "<(IDENTIFIER,nGSize,fB - nBR + nGSize)<SUB>47</SUB>>", "355": "<(&lt;operator&gt;.modulo,(dp[fG + 1][fB - nBR + nGSize - nS] + nW) % MOD)<SUB>47</SUB>>", "357": "<(&lt;operator&gt;.indexAccess,dp[fG + 1][fB - nBR + nGSize - nS])<SUB>47</SUB>>", "359": "<(IDENTIFIER,dp,dp[fG + 1][fB - nBR + nGSize - nS] + nW)<SUB>47</SUB>>", "361": "<(IDENTIFIER,fG,fG + 1)<SUB>47</SUB>>", "363": "<(&lt;operator&gt;.subtraction,fB - nBR + nGSize - nS)<SUB>47</SUB>>", "365": "<(&lt;operator&gt;.subtraction,fB - nBR)<SUB>47</SUB>>", "367": "<(IDENTIFIER,nBR,fB - nBR)<SUB>47</SUB>>", "369": "<(IDENTIFIER,nS,fB - nBR + nGSize - nS)<SUB>47</SUB>>", "371": "<(IDENTIFIER,MOD,(dp[fG + 1][fB - nBR + nGSize - nS] + nW) % MOD)<SUB>47</SUB>>", "373": "<(IDENTIFIER,fTotal,fTotal += gSizes[fG + 1])<SUB>51</SUB>>", "375": "<(IDENTIFIER,gSizes,fTotal += gSizes[fG + 1])<SUB>51</SUB>>", "377": "<(IDENTIFIER,fG,fG + 1)<SUB>51</SUB>>", "379": "<(println,println(dp[nG][0]))<SUB>53</SUB>>", "381": "<(&lt;operator&gt;.indexAccess,dp[nG][0])<SUB>53</SUB>>", "383": "<(IDENTIFIER,dp,println(dp[nG][0]))<SUB>53</SUB>>", "385": "<(LITERAL,0,println(dp[nG][0]))<SUB>53</SUB>>", "387": "<(IDENTIFIER,printer,close())<SUB>54</SUB>>", "389": "<(MODIFIER,STATIC)>"}}