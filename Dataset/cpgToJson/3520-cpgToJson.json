{"edges": [["19", "21"], ["19", "319"], ["19", "320"], ["19", "321"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "43"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "47"], ["43", "96"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "57"], ["47", "58"], ["47", "61"], ["47", "91"], ["49", "50"], ["49", "51"], ["51", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "71"], ["61", "73"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "80"], ["73", "83"], ["73", "88"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["97", "98"], ["97", "107"], ["97", "114"], ["97", "168"], ["97", "177"], ["97", "186"], ["97", "224"], ["97", "225"], ["97", "228"], ["97", "314"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "167"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["197", "202"], ["197", "205"], ["197", "207"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "216"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["216", "217"], ["216", "222"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["228", "233"], ["228", "236"], ["228", "238"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["236", "237"], ["238", "239"], ["239", "240"], ["239", "241"], ["239", "244"], ["239", "249"], ["239", "251"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["249", "250"], ["251", "252"], ["252", "253"], ["252", "254"], ["252", "257"], ["252", "260"], ["252", "262"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "259"], ["260", "261"], ["262", "263"], ["262", "264"], ["262", "270"], ["262", "271"], ["262", "283"], ["262", "284"], ["262", "291"], ["262", "292"], ["262", "299"], ["262", "300"], ["262", "307"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["266", "269"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["273", "280"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "282"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "313"], ["310", "311"], ["310", "312"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["39", "44"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "39"], ["44", "54"], ["44", "101"], ["28", "26"], ["49", "58"], ["58", "63"], ["91", "321"], ["51", "49"], ["63", "70"], ["66", "77"], ["66", "94"], ["71", "70"], ["92", "91"], ["98", "109"], ["107", "116"], ["168", "180"], ["177", "188"], ["225", "230"], ["314", "321"], ["52", "51"], ["68", "66"], ["75", "80"], ["80", "85"], ["83", "88"], ["88", "71"], ["94", "92"], ["100", "98"], ["108", "107"], ["116", "119"], ["119", "127"], ["119", "171"], ["122", "119"], ["170", "168"], ["179", "177"], ["188", "191"], ["191", "199"], ["191", "225"], ["194", "191"], ["230", "233"], ["233", "241"], ["233", "317"], ["236", "233"], ["315", "314"], ["54", "52"], ["70", "68"], ["77", "75"], ["85", "83"], ["101", "104"], ["104", "100"], ["109", "108"], ["125", "134"], ["171", "174"], ["174", "170"], ["180", "183"], ["183", "179"], ["317", "315"], ["126", "125"], ["134", "137"], ["137", "145"], ["137", "122"], ["140", "137"], ["199", "202"], ["202", "210"], ["202", "194"], ["205", "202"], ["241", "246"], ["244", "254"], ["244", "236"], ["249", "246"], ["127", "126"], ["143", "140"], ["208", "218"], ["216", "205"], ["246", "244"], ["144", "154"], ["149", "143"], ["209", "214"], ["214", "208"], ["217", "222"], ["222", "216"], ["254", "257"], ["257", "266"], ["257", "249"], ["260", "257"], ["145", "144"], ["150", "149"], ["210", "209"], ["218", "217"], ["264", "276"], ["271", "287"], ["284", "295"], ["292", "303"], ["300", "310"], ["307", "260"], ["151", "161"], ["158", "150"], ["266", "264"], ["273", "271"], ["286", "284"], ["294", "292"], ["302", "300"], ["309", "307"], ["152", "151"], ["159", "164"], ["164", "158"], ["275", "280"], ["280", "273"], ["287", "286"], ["295", "294"], ["303", "302"], ["310", "309"], ["154", "152"], ["161", "159"], ["276", "275"], ["19", "24"], ["20", "321"], ["22", "321"], ["25", "321"], ["25", "321"], ["30", "321"], ["32", "321"], ["30", "321"], ["30", "321"], ["35", "321"], ["35", "321"], ["39", "321"], ["41", "321"], ["39", "321"], ["39", "321"], ["44", "321"], ["49", "321"], ["54", "321"], ["51", "321"], ["49", "321"], ["49", "321"], ["58", "321"], ["63", "321"], ["66", "321"], ["66", "321"], ["66", "321"], ["91", "321"], ["91", "321"], ["91", "321"], ["75", "321"], ["80", "321"], ["80", "321"], ["85", "321"], ["85", "321"], ["83", "321"], ["83", "321"], ["88", "321"], ["71", "321"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["41", "39"], ["22", "25"], ["19", "25"], ["19", "32"], ["25", "37"], ["19", "37"], ["37", "41"], ["19", "41"], ["35", "44"], ["19", "44"], ["51", "49"], ["19", "58"], ["19", "63"], ["58", "91"], ["88", "91"], ["19", "91"], ["100", "98"], ["19", "107"], ["170", "168"], ["179", "177"], ["19", "225"], ["63", "66"], ["71", "66"], ["19", "66"], ["49", "66"], ["66", "71"], ["19", "71"], ["49", "75"], ["30", "80"], ["19", "80"], ["85", "83"], ["85", "83"], ["39", "88"], ["19", "88"], ["19", "116"], ["19", "188"], ["19", "230"], ["225", "314"], ["307", "314"], ["19", "314"], ["58", "80"], ["88", "80"], ["80", "83"], ["19", "83"], ["83", "88"], ["19", "100"], ["116", "119"], ["122", "119"], ["19", "119"], ["44", "119"], ["137", "122"], ["19", "122"], ["19", "125"], ["19", "170"], ["19", "179"], ["188", "191"], ["194", "191"], ["19", "191"], ["202", "191"], ["191", "194"], ["19", "194"], ["230", "233"], ["236", "233"], ["19", "233"], ["119", "233"], ["246", "233"], ["233", "236"], ["276", "236"], ["19", "236"], ["44", "54"], ["19", "54"], ["32", "85"], ["19", "85"], ["75", "85"], ["19", "101"], ["19", "104"], ["19", "134"], ["19", "171"], ["19", "174"], ["19", "180"], ["19", "183"], ["19", "199"], ["19", "241"], ["134", "137"], ["140", "137"], ["19", "137"], ["119", "137"], ["161", "137"], ["164", "140"], ["19", "140"], ["149", "143"], ["149", "143"], ["199", "202"], ["205", "202"], ["19", "202"], ["191", "202"], ["202", "205"], ["19", "205"], ["214", "208"], ["222", "216"], ["241", "244"], ["249", "244"], ["19", "244"], ["246", "244"], ["246", "244"], ["257", "249"], ["19", "249"], ["233", "246"], ["276", "246"], ["19", "246"], ["19", "254"], ["39", "149"], ["19", "149"], ["19", "214"], ["19", "222"], ["254", "257"], ["260", "257"], ["19", "257"], ["244", "257"], ["280", "257"], ["280", "260"], ["19", "260"], ["266", "264"], ["266", "264"], ["266", "264"], ["273", "271"], ["273", "271"], ["273", "271"], ["286", "284"], ["286", "284"], ["302", "300"], ["302", "300"], ["309", "307"], ["309", "307"], ["273", "266"], ["19", "266"], ["233", "266"], ["276", "266"], ["257", "266"], ["266", "273"], ["19", "273"], ["275", "273"], ["275", "273"], ["280", "273"], ["280", "273"], ["287", "286"], ["287", "286"], ["39", "286"], ["309", "286"], ["149", "286"], ["19", "286"], ["303", "302"], ["303", "302"], ["286", "302"], ["19", "302"], ["225", "309"], ["307", "309"], ["19", "309"], ["300", "309"], ["302", "309"], ["137", "164"], ["19", "164"], ["276", "275"], ["276", "275"], ["19", "275"], ["257", "280"], ["19", "280"], ["266", "280"], ["264", "287"], ["19", "287"], ["271", "287"], ["284", "303"], ["19", "303"], ["292", "303"], ["225", "310"], ["307", "310"], ["19", "310"], ["300", "310"], ["137", "154"], ["19", "154"], ["154", "161"], ["19", "161"], ["246", "276"], ["19", "276"], ["266", "276"], ["44", "68"], ["44", "188"], ["44", "230"], ["44", "52"], ["44", "104"], ["44", "168"], ["44", "170"], ["44", "317"], ["44", "54"], ["44", "100"], ["44", "174"], ["44", "70"], ["44", "315"], ["44", "180"], ["44", "108"], ["44", "49"], ["44", "66"], ["44", "116"], ["44", "177"], ["44", "109"], ["44", "107"], ["44", "94"], ["44", "51"], ["44", "98"], ["44", "225"], ["44", "179"], ["44", "119"], ["44", "92"], ["44", "91"], ["44", "191"], ["44", "101"], ["44", "58"], ["44", "314"], ["44", "233"], ["44", "171"], ["44", "183"], ["44", "63"], ["66", "68"], ["66", "80"], ["66", "88"], ["66", "70"], ["66", "66"], ["66", "71"], ["66", "77"], ["66", "75"], ["66", "85"], ["66", "83"], ["119", "134"], ["119", "127"], ["119", "122"], ["119", "119"], ["119", "137"], ["119", "126"], ["119", "125"], ["191", "194"], ["191", "202"], ["191", "199"], ["191", "191"], ["233", "236"], ["233", "241"], ["233", "244"], ["233", "246"], ["233", "233"], ["137", "154"], ["137", "161"], ["137", "150"], ["137", "152"], ["137", "158"], ["137", "159"], ["137", "140"], ["137", "145"], ["137", "149"], ["137", "151"], ["137", "144"], ["137", "137"], ["137", "164"], ["137", "143"], ["202", "214"], ["202", "209"], ["202", "208"], ["202", "202"], ["202", "217"], ["202", "216"], ["202", "222"], ["202", "205"], ["202", "210"], ["202", "218"], ["244", "249"], ["244", "254"], ["244", "257"], ["244", "244"], ["244", "246"], ["257", "292"], ["257", "264"], ["257", "300"], ["257", "302"], ["257", "276"], ["257", "260"], ["257", "310"], ["257", "257"], ["257", "273"], ["257", "275"], ["257", "307"], ["257", "309"], ["257", "284"], ["257", "280"], ["257", "286"], ["257", "295"], ["257", "287"], ["257", "294"], ["257", "303"], ["257", "271"], ["257", "266"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long b: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,b,long b = length())<SUB>3</SUB>>", "33": "<(IDENTIFIER,chars,length())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,mod = nextLong())<SUB>5</SUB>>", "41": "<(nextLong,nextLong())<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n &gt; 110),if (n &gt; 110))<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,n &gt; 110)<SUB>6</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,char[] s = toCharArray())<SUB>7</SUB>>", "51": "<(toCharArray,toCharArray())<SUB>7</SUB>>", "53": "<(IDENTIFIER,vals,toCharArray())<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,n - 111)<SUB>7</SUB>>", "57": "<(LOCAL,long res: long)<SUB>8</SUB>>", "59": "<(IDENTIFIER,res,long res = 0)<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "63": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>9</SUB>>", "65": "<(LITERAL,0,int $idx0 = 0)<SUB>9</SUB>>", "67": "<(IDENTIFIER,$idx0,$idx0 &lt; s.length)>", "69": "<(IDENTIFIER,s,$idx0 &lt; s.length)>", "71": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>9</SUB>>", "79": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "81": "<(IDENTIFIER,res,res *= b)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignmentPlus,res += indexOf(c))<SUB>11</SUB>>", "85": "<(indexOf,indexOf(c))<SUB>11</SUB>>", "87": "<(IDENTIFIER,c,indexOf(c))<SUB>11</SUB>>", "89": "<(IDENTIFIER,res,res %= mod)<SUB>12</SUB>>", "91": "<(println,System.out.println(res))<SUB>14</SUB>>", "93": "<(IDENTIFIER,System,System.out.println(res))<SUB>14</SUB>>", "95": "<(IDENTIFIER,res,System.out.println(res))<SUB>14</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(IDENTIFIER,c,c = new long[N + 1][N + 1])<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.addition,N + 1)<SUB>17</SUB>>", "103": "<(LITERAL,1,N + 1)<SUB>17</SUB>>", "105": "<(IDENTIFIER,N,N + 1)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.assignment,c[0][0] = 1)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>18</SUB>>", "111": "<(LITERAL,0,c[0][0] = 1)<SUB>18</SUB>>", "113": "<(LITERAL,1,c[0][0] = 1)<SUB>18</SUB>>", "115": "<(LOCAL,int i: int)<SUB>19</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "121": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.assignment,c[i][0] = 1)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>20</SUB>>", "129": "<(IDENTIFIER,i,c[i][0] = 1)<SUB>20</SUB>>", "131": "<(LITERAL,1,c[i][0] = 1)<SUB>20</SUB>>", "133": "<(LOCAL,int j: int)<SUB>21</SUB>>", "135": "<(IDENTIFIER,j,int j = 1)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= i)<SUB>21</SUB>>", "139": "<(IDENTIFIER,i,j &lt;= i)<SUB>21</SUB>>", "141": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.assignment,c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod)<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.modulo,(c[i - 1][j] + c[i - 1][j - 1]) % mod)<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,c[i - 1][j])<SUB>22</SUB>>", "153": "<(IDENTIFIER,c,c[i - 1][j] + c[i - 1][j - 1])<SUB>22</SUB>>", "155": "<(IDENTIFIER,i,i - 1)<SUB>22</SUB>>", "157": "<(IDENTIFIER,j,c[i - 1][j] + c[i - 1][j - 1])<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,c[i - 1])<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>22</SUB>>", "163": "<(LITERAL,1,i - 1)<SUB>22</SUB>>", "165": "<(IDENTIFIER,j,j - 1)<SUB>22</SUB>>", "167": "<(IDENTIFIER,mod,(c[i - 1][j] + c[i - 1][j - 1]) % mod)<SUB>22</SUB>>", "169": "<(IDENTIFIER,dpcl,dpcl = new long[N + 1][N + 1])<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.addition,N + 1)<SUB>25</SUB>>", "173": "<(LITERAL,1,N + 1)<SUB>25</SUB>>", "175": "<(IDENTIFIER,N,N + 1)<SUB>25</SUB>>", "177": "<(&lt;operator&gt;.assignment,dpop = new long[N + 1][N + 1])<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.alloc,new long[N + 1][N + 1])>", "181": "<(IDENTIFIER,N,N + 1)<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.addition,N + 1)<SUB>26</SUB>>", "185": "<(LITERAL,1,N + 1)<SUB>26</SUB>>", "187": "<(LOCAL,int i: int)<SUB>27</SUB>>", "189": "<(IDENTIFIER,i,int i = 0)<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>27</SUB>>", "193": "<(IDENTIFIER,N,i &lt;= N)<SUB>27</SUB>>", "195": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "197": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= N); j++),for (int j = 0; Some(j &lt;= N); j++))<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "201": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "203": "<(IDENTIFIER,j,j &lt;= N)<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,dpcl[i][j])<SUB>29</SUB>>", "211": "<(IDENTIFIER,dpcl,dpcl[i][j] = -1)<SUB>29</SUB>>", "213": "<(IDENTIFIER,j,dpcl[i][j] = -1)<SUB>29</SUB>>", "215": "<(LITERAL,1,-1)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dpop[i][j])<SUB>30</SUB>>", "219": "<(IDENTIFIER,dpop,dpop[i][j] = -1)<SUB>30</SUB>>", "221": "<(IDENTIFIER,j,dpop[i][j] = -1)<SUB>30</SUB>>", "223": "<(LITERAL,1,-1)<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>33</SUB>>", "227": "<(LITERAL,0,long res = 0)<SUB>33</SUB>>", "229": "<(LOCAL,int i: int)<SUB>34</SUB>>", "231": "<(IDENTIFIER,i,int i = 0)<SUB>34</SUB>>", "233": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>34</SUB>>", "235": "<(IDENTIFIER,n,i &lt; n)<SUB>34</SUB>>", "237": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "239": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= n - 1); j++),for (int j = 0; Some(j &lt;= n - 1); j++))<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>35</SUB>>", "243": "<(LITERAL,0,int j = 0)<SUB>35</SUB>>", "245": "<(IDENTIFIER,j,j &lt;= n - 1)<SUB>35</SUB>>", "247": "<(IDENTIFIER,n,n - 1)<SUB>35</SUB>>", "249": "<(&lt;operator&gt;.postIncrement,j++)<SUB>35</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "253": "<(LOCAL,int a: int)<SUB>36</SUB>>", "255": "<(IDENTIFIER,a,int a = 0)<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.lessEqualsThan,a &lt;= j)<SUB>36</SUB>>", "259": "<(IDENTIFIER,j,a &lt;= j)<SUB>36</SUB>>", "261": "<(IDENTIFIER,a,a++)<SUB>36</SUB>>", "263": "<(LOCAL,long leftv: long)<SUB>37</SUB>>", "265": "<(IDENTIFIER,leftv,long leftv = dpop(i, a))<SUB>37</SUB>>", "267": "<(IDENTIFIER,this,dpop(i, a))<SUB>37</SUB>>", "269": "<(IDENTIFIER,a,dpop(i, a))<SUB>37</SUB>>", "271": "<(&lt;operator&gt;.assignment,long rightv = dpop(n - i - 1, j - a))<SUB>38</SUB>>", "273": "<(dpop,dpop(n - i - 1, j - a))<SUB>38</SUB>>", "275": "<(&lt;operator&gt;.subtraction,n - i - 1)<SUB>38</SUB>>", "277": "<(IDENTIFIER,n,n - i)<SUB>38</SUB>>", "279": "<(LITERAL,1,n - i - 1)<SUB>38</SUB>>", "281": "<(IDENTIFIER,j,j - a)<SUB>38</SUB>>", "283": "<(LOCAL,long curr: long)<SUB>39</SUB>>", "285": "<(IDENTIFIER,curr,long curr = leftv * rightv % mod)<SUB>39</SUB>>", "287": "<(&lt;operator&gt;.multiplication,leftv * rightv)<SUB>39</SUB>>", "289": "<(IDENTIFIER,rightv,leftv * rightv)<SUB>39</SUB>>", "291": "<(LOCAL,long fac: long)<SUB>40</SUB>>", "293": "<(IDENTIFIER,fac,long fac = c[j][a])<SUB>40</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,c[j])<SUB>40</SUB>>", "297": "<(IDENTIFIER,j,long fac = c[j][a])<SUB>40</SUB>>", "299": "<(LOCAL,long v: long)<SUB>41</SUB>>", "301": "<(IDENTIFIER,v,long v = curr * fac % mod)<SUB>41</SUB>>", "303": "<(&lt;operator&gt;.multiplication,curr * fac)<SUB>41</SUB>>", "305": "<(IDENTIFIER,fac,curr * fac)<SUB>41</SUB>>", "307": "<(&lt;operator&gt;.assignment,res = (res + v) % mod)<SUB>42</SUB>>", "309": "<(&lt;operator&gt;.modulo,(res + v) % mod)<SUB>42</SUB>>", "311": "<(IDENTIFIER,res,res + v)<SUB>42</SUB>>", "313": "<(IDENTIFIER,mod,(res + v) % mod)<SUB>42</SUB>>", "315": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "317": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "319": "<(MODIFIER,PUBLIC)>", "321": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}