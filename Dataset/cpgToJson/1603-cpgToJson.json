{"edges": [["23", "25"], ["23", "117"], ["23", "118"], ["23", "119"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "34"], ["25", "6"], ["25", "38"], ["25", "41"], ["25", "8"], ["25", "42"], ["25", "45"], ["25", "46"], ["25", "68"], ["25", "71"], ["25", "72"], ["25", "75"], ["25", "98"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["41", "5"], ["42", "43"], ["42", "44"], ["45", "7"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "62"], ["56", "65"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "96"], ["87", "88"], ["87", "92"], ["88", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "106"], ["98", "111"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["26", "32"], ["29", "36"], ["34", "40"], ["38", "41"], ["41", "44"], ["42", "45"], ["45", "48"], ["68", "72"], ["72", "77"], ["28", "26"], ["30", "29"], ["36", "34"], ["40", "38"], ["44", "42"], ["48", "51"], ["51", "60"], ["51", "68"], ["54", "51"], ["77", "80"], ["80", "89"], ["80", "100"], ["83", "80"], ["99", "109"], ["99", "115"], ["106", "119"], ["32", "30"], ["58", "62"], ["62", "65"], ["65", "54"], ["100", "99"], ["100", "103"], ["103", "99"], ["107", "106"], ["112", "119"], ["60", "58"], ["87", "96"], ["87", "83"], ["96", "83"], ["109", "107"], ["113", "112"], ["88", "93"], ["92", "87"], ["115", "113"], ["89", "88"], ["93", "92"], ["23", "28"], ["24", "119"], ["26", "119"], ["29", "119"], ["29", "119"], ["36", "119"], ["34", "119"], ["34", "119"], ["38", "119"], ["41", "119"], ["42", "119"], ["45", "119"], ["68", "119"], ["68", "119"], ["72", "119"], ["77", "119"], ["80", "119"], ["80", "119"], ["80", "119"], ["100", "119"], ["99", "119"], ["103", "119"], ["99", "119"], ["99", "119"], ["106", "119"], ["89", "119"], ["87", "119"], ["93", "119"], ["92", "119"], ["87", "119"], ["96", "119"], ["83", "119"], ["60", "119"], ["58", "119"], ["58", "119"], ["62", "119"], ["65", "119"], ["65", "119"], ["54", "119"], ["68", "119"], ["23", "24"], ["23", "26"], ["36", "34"], ["23", "38"], ["23", "42"], ["23", "72"], ["26", "29"], ["23", "29"], ["38", "41"], ["23", "41"], ["42", "45"], ["23", "45"], ["23", "48"], ["23", "68"], ["45", "68"], ["65", "68"], ["23", "77"], ["29", "36"], ["23", "36"], ["48", "51"], ["54", "51"], ["23", "51"], ["34", "51"], ["51", "54"], ["23", "54"], ["60", "58"], ["77", "80"], ["83", "80"], ["23", "80"], ["51", "80"], ["93", "83"], ["23", "83"], ["100", "99"], ["100", "99"], ["103", "99"], ["103", "99"], ["23", "106"], ["41", "62"], ["23", "62"], ["58", "62"], ["45", "65"], ["23", "65"], ["62", "65"], ["72", "100"], ["96", "100"], ["23", "100"], ["100", "103"], ["23", "103"], ["23", "112"], ["36", "60"], ["23", "60"], ["88", "87"], ["92", "87"], ["72", "96"], ["23", "96"], ["89", "88"], ["89", "88"], ["93", "92"], ["93", "92"], ["68", "89"], ["23", "89"], ["80", "89"], ["41", "93"], ["62", "93"], ["23", "93"], ["89", "93"], ["51", "58"], ["51", "60"], ["51", "51"], ["51", "65"], ["51", "54"], ["51", "62"], ["80", "80"], ["80", "83"], ["80", "89"], ["80", "88"], ["80", "92"], ["80", "87"], ["80", "93"], ["99", "107"], ["99", "115"], ["99", "113"], ["99", "106"], ["99", "112"], ["99", "109"], ["100", "103"], ["87", "96"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(LOCAL,int N: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,N,int N = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "5": "<(IDENTIFIER,list,new ArrayList&lt;Integer&gt;())<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.assignment,ANY sort = new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "44": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "7": "<(IDENTIFIER,sort,new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "47": "<(LOCAL,int i: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>6</SUB>>", "53": "<(IDENTIFIER,N,i &lt; N)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "57": "<(LOCAL,int k: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,k,int k = nextInt())<SUB>7</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,list,add(k))<SUB>8</SUB>>", "65": "<(add,add(k))<SUB>9</SUB>>", "67": "<(IDENTIFIER,k,add(k))<SUB>9</SUB>>", "69": "<(IDENTIFIER,Collections,sort(sort))<SUB>12</SUB>>", "71": "<(LOCAL,int count: int)<SUB>14</SUB>>", "73": "<(IDENTIFIER,count,int count = 0)<SUB>14</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>15</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "81": "<(IDENTIFIER,i,i &lt; N)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.notEquals,sort.get(i).intValue() != list.get(i).intValue())<SUB>16</SUB>>", "89": "<(get,get(i))<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,get(i))<SUB>16</SUB>>", "93": "<(get,get(i))<SUB>16</SUB>>", "95": "<(IDENTIFIER,i,get(i))<SUB>16</SUB>>", "97": "<(IDENTIFIER,count,count++)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.logicalAnd,count != 2 &amp;&amp; count != 0)<SUB>19</SUB>>", "101": "<(IDENTIFIER,count,count != 2)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.notEquals,count != 0)<SUB>19</SUB>>", "105": "<(LITERAL,0,count != 0)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "115": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "117": "<(MODIFIER,PUBLIC)>", "119": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}