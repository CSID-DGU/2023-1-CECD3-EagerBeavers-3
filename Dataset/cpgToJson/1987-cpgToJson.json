{"edges": [["19", "21"], ["19", "189"], ["19", "190"], ["19", "191"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "50"], ["21", "54"], ["21", "92"], ["21", "93"], ["21", "97"], ["21", "98"], ["21", "101"], ["21", "102"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "71"], ["64", "77"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "113"], ["107", "116"], ["107", "145"], ["107", "180"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["127", "128"], ["127", "139"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "168"], ["162", "170"], ["162", "172"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["170", "171"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["176", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "52"], ["50", "56"], ["93", "98"], ["98", "102"], ["102", "191"], ["102", "109"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["56", "59"], ["59", "66"], ["59", "95"], ["62", "59"], ["95", "93"], ["28", "26"], ["65", "72"], ["71", "78"], ["77", "62"], ["109", "113"], ["113", "118"], ["66", "69"], ["69", "65"], ["72", "75"], ["75", "71"], ["78", "83"], ["81", "77"], ["118", "121"], ["121", "130"], ["121", "147"], ["124", "121"], ["147", "150"], ["150", "181"], ["150", "159"], ["153", "150"], ["181", "191"], ["181", "109"], ["181", "186"], ["82", "89"], ["87", "81"], ["183", "191"], ["83", "82"], ["89", "87"], ["128", "142"], ["128", "124"], ["157", "164"], ["157", "153"], ["184", "183"], ["129", "128"], ["129", "135"], ["134", "128"], ["140", "124"], ["159", "157"], ["163", "168"], ["168", "170"], ["170", "173"], ["186", "184"], ["130", "129"], ["135", "134"], ["142", "140"], ["164", "163"], ["173", "177"], ["173", "153"], ["177", "153"], ["19", "24"], ["20", "191"], ["22", "191"], ["25", "191"], ["25", "191"], ["30", "191"], ["35", "191"], ["37", "191"], ["35", "191"], ["35", "191"], ["40", "191"], ["40", "191"], ["45", "191"], ["45", "191"], ["50", "191"], ["50", "191"], ["50", "191"], ["56", "191"], ["59", "191"], ["59", "191"], ["93", "191"], ["95", "191"], ["93", "191"], ["93", "191"], ["98", "191"], ["98", "191"], ["102", "191"], ["102", "191"], ["109", "191"], ["109", "191"], ["113", "191"], ["113", "191"], ["147", "191"], ["150", "191"], ["150", "191"], ["150", "191"], ["157", "191"], ["157", "191"], ["157", "191"], ["163", "191"], ["163", "191"], ["168", "191"], ["170", "191"], ["170", "191"], ["173", "191"], ["173", "191"], ["173", "191"], ["177", "191"], ["177", "191"], ["153", "191"], ["129", "191"], ["128", "191"], ["134", "191"], ["134", "191"], ["128", "191"], ["128", "191"], ["140", "191"], ["140", "191"], ["140", "191"], ["124", "191"], ["65", "191"], ["75", "191"], ["71", "191"], ["71", "191"], ["77", "191"], ["82", "191"], ["81", "191"], ["87", "191"], ["81", "191"], ["77", "191"], ["77", "191"], ["62", "191"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["95", "93"], ["19", "98"], ["19", "102"], ["22", "25"], ["19", "25"], ["19", "56"], ["19", "106"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["47", "52"], ["19", "52"], ["56", "59"], ["62", "59"], ["19", "59"], ["52", "59"], ["59", "62"], ["19", "62"], ["69", "65"], ["75", "71"], ["82", "77"], ["82", "77"], ["87", "77"], ["87", "77"], ["59", "95"], ["19", "95"], ["19", "109"], ["19", "113"], ["19", "118"], ["19", "147"], ["19", "181"], ["37", "69"], ["75", "69"], ["19", "69"], ["69", "75"], ["19", "75"], ["82", "81"], ["82", "81"], ["87", "81"], ["87", "81"], ["118", "121"], ["124", "121"], ["19", "121"], ["95", "121"], ["150", "121"], ["121", "124"], ["19", "124"], ["147", "150"], ["153", "150"], ["19", "150"], ["121", "150"], ["150", "153"], ["19", "153"], ["40", "82"], ["65", "82"], ["19", "82"], ["19", "87"], ["45", "87"], ["71", "87"], ["113", "183"], ["170", "183"], ["19", "183"], ["129", "128"], ["129", "128"], ["134", "128"], ["134", "128"], ["50", "140"], ["157", "140"], ["134", "140"], ["77", "140"], ["109", "157"], ["134", "157"], ["140", "157"], ["19", "157"], ["50", "157"], ["134", "157"], ["77", "157"], ["19", "163"], ["93", "129"], ["163", "129"], ["19", "129"], ["50", "134"], ["157", "134"], ["77", "134"], ["109", "134"], ["140", "134"], ["19", "134"], ["98", "168"], ["173", "168"], ["19", "168"], ["113", "170"], ["19", "170"], ["168", "173"], ["19", "173"], ["35", "173"], ["19", "177"], ["59", "77"], ["59", "75"], ["59", "81"], ["59", "69"], ["59", "59"], ["59", "87"], ["59", "89"], ["59", "66"], ["59", "72"], ["59", "65"], ["59", "82"], ["59", "83"], ["59", "71"], ["59", "78"], ["59", "62"], ["121", "128"], ["121", "121"], ["121", "129"], ["121", "130"], ["121", "124"], ["150", "150"], ["150", "153"], ["150", "157"], ["150", "159"], ["181", "184"], ["181", "186"], ["181", "183"], ["181", "113"], ["181", "150"], ["181", "121"], ["181", "181"], ["181", "118"], ["181", "147"], ["181", "109"], ["128", "142"], ["128", "140"], ["157", "163"], ["157", "168"], ["157", "170"], ["157", "173"], ["157", "164"], ["129", "134"], ["129", "135"], ["173", "177"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>6</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>7</SUB>>", "37": "<(nextInt,nextInt())<SUB>7</SUB>>", "39": "<(LOCAL,int[] p: int[])<SUB>8</SUB>>", "41": "<(IDENTIFIER,p,int[] p = new int[n])<SUB>8</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] t = new int[n])<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(LOCAL,int[] score: int[])<SUB>10</SUB>>", "51": "<(IDENTIFIER,score,int[] score = new int[n])<SUB>10</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "55": "<(LOCAL,int i: int)<SUB>11</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,p[i] = nextInt())<SUB>12</SUB>>", "67": "<(IDENTIFIER,p,p[i] = nextInt())<SUB>12</SUB>>", "69": "<(nextInt,nextInt())<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,t[i] = nextInt())<SUB>13</SUB>>", "73": "<(IDENTIFIER,t,t[i] = nextInt())<SUB>13</SUB>>", "75": "<(nextInt,nextInt())<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,score[i] = p[i] * 100 + (50 - t[i]))<SUB>14</SUB>>", "79": "<(IDENTIFIER,score,score[i] = p[i] * 100 + (50 - t[i]))<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.addition,p[i] * 100 + (50 - t[i]))<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>14</SUB>>", "85": "<(IDENTIFIER,i,p[i] * 100)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.subtraction,50 - t[i])<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,t[i])<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,50 - t[i])<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,boolean[] called = new boolean[n])<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.alloc,new boolean[n])>", "97": "<(LOCAL,int x: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,x,int x = 0)<SUB>17</SUB>>", "101": "<(LOCAL,boolean check: boolean)<SUB>18</SUB>>", "103": "<(IDENTIFIER,check,boolean check = false)<SUB>18</SUB>>", "105": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>19</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>20</SUB>>", "111": "<(LITERAL,0,int max = 0)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.assignment,int y = 0)<SUB>21</SUB>>", "115": "<(LITERAL,0,int y = 0)<SUB>21</SUB>>", "117": "<(LOCAL,int i: int)<SUB>22</SUB>>", "119": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "123": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "125": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "127": "<(CONTROL_STRUCTURE,if (called[i] == false &amp;&amp; score[i] &gt; max),if (called[i] == false &amp;&amp; score[i] &gt; max))<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.equals,called[i] == false)<SUB>23</SUB>>", "131": "<(IDENTIFIER,called,called[i] == false)<SUB>23</SUB>>", "133": "<(LITERAL,false,called[i] == false)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,score[i])<SUB>23</SUB>>", "137": "<(IDENTIFIER,i,score[i] &gt; max)<SUB>23</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "141": "<(IDENTIFIER,max,max = score[i])<SUB>23</SUB>>", "143": "<(IDENTIFIER,score,max = score[i])<SUB>23</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "149": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "151": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.equals,max == score[i])<SUB>26</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,score[i])<SUB>26</SUB>>", "161": "<(IDENTIFIER,i,max == score[i])<SUB>26</SUB>>", "163": "<(&lt;operator&gt;.assignment,called[i] = true)<SUB>27</SUB>>", "165": "<(IDENTIFIER,called,called[i] = true)<SUB>27</SUB>>", "167": "<(LITERAL,true,called[i] = true)<SUB>27</SUB>>", "169": "<(IDENTIFIER,x,x++)<SUB>28</SUB>>", "171": "<(IDENTIFIER,y,y++)<SUB>29</SUB>>", "173": "<(&lt;operator&gt;.equals,x == k)<SUB>30</SUB>>", "175": "<(IDENTIFIER,k,x == k)<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.assignment,check = true)<SUB>30</SUB>>", "179": "<(LITERAL,true,check = true)<SUB>30</SUB>>", "181": "<(IDENTIFIER,check,if (check))<SUB>33</SUB>>", "183": "<(println,System.out.println(y))<SUB>34</SUB>>", "185": "<(IDENTIFIER,System,System.out.println(y))<SUB>34</SUB>>", "187": "<(IDENTIFIER,y,System.out.println(y))<SUB>34</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}