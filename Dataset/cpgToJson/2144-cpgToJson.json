{"edges": [["19", "20"], ["19", "21"], ["19", "174"], ["19", "175"], ["19", "176"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "60"], ["21", "61"], ["21", "65"], ["21", "66"], ["21", "71"], ["21", "151"], ["21", "170"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "146"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "112"], ["96", "113"], ["96", "124"], ["96", "125"], ["96", "140"], ["97", "98"], ["97", "111"], ["98", "99"], ["98", "108"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "137"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["142", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "159"], ["151", "161"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["171", "172"], ["171", "173"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["61", "68"], ["66", "73"], ["170", "176"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "55"], ["49", "63"], ["52", "49"], ["54", "52"], ["63", "61"], ["68", "66"], ["73", "76"], ["76", "83"], ["76", "153"], ["79", "76"], ["153", "156"], ["156", "164"], ["156", "173"], ["159", "156"], ["161", "159"], ["171", "170"], ["28", "26"], ["55", "58"], ["58", "54"], ["83", "88"], ["146", "79"], ["162", "166"], ["165", "161"], ["173", "171"], ["88", "91"], ["91", "102"], ["91", "147"], ["94", "91"], ["147", "146"], ["164", "162"], ["166", "165"], ["113", "131"], ["125", "142"], ["140", "94"], ["98", "94"], ["98", "118"], ["115", "113"], ["127", "125"], ["142", "140"], ["99", "108"], ["108", "98"], ["117", "115"], ["128", "137"], ["137", "127"], ["101", "99"], ["118", "121"], ["121", "117"], ["130", "128"], ["102", "105"], ["105", "101"], ["131", "134"], ["134", "130"], ["19", "24"], ["20", "176"], ["22", "176"], ["25", "176"], ["25", "176"], ["30", "176"], ["37", "176"], ["35", "176"], ["35", "176"], ["40", "176"], ["40", "176"], ["40", "176"], ["61", "176"], ["61", "176"], ["61", "176"], ["66", "176"], ["68", "176"], ["66", "176"], ["66", "176"], ["73", "176"], ["76", "176"], ["76", "176"], ["153", "176"], ["156", "176"], ["156", "176"], ["156", "176"], ["170", "176"], ["170", "176"], ["165", "176"], ["161", "176"], ["161", "176"], ["159", "176"], ["83", "176"], ["83", "176"], ["88", "176"], ["91", "176"], ["91", "176"], ["146", "176"], ["146", "176"], ["146", "176"], ["79", "176"], ["99", "176"], ["101", "176"], ["101", "176"], ["99", "176"], ["98", "176"], ["108", "176"], ["98", "176"], ["98", "176"], ["117", "176"], ["117", "176"], ["115", "176"], ["113", "176"], ["113", "176"], ["131", "176"], ["130", "176"], ["134", "176"], ["130", "176"], ["128", "176"], ["127", "176"], ["127", "176"], ["125", "176"], ["125", "176"], ["142", "176"], ["142", "176"], ["140", "176"], ["140", "176"], ["94", "176"], ["54", "176"], ["58", "176"], ["54", "176"], ["54", "176"], ["52", "176"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["63", "61"], ["68", "66"], ["68", "66"], ["22", "25"], ["19", "25"], ["19", "46"], ["58", "54"], ["19", "73"], ["19", "153"], ["161", "170"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["49", "63"], ["19", "63"], ["35", "68"], ["19", "68"], ["73", "76"], ["79", "76"], ["19", "76"], ["63", "76"], ["91", "79"], ["19", "79"], ["68", "83"], ["108", "83"], ["19", "83"], ["83", "146"], ["140", "146"], ["19", "146"], ["153", "156"], ["159", "156"], ["19", "156"], ["76", "156"], ["156", "159"], ["19", "159"], ["61", "161"], ["19", "161"], ["37", "58"], ["19", "58"], ["19", "88"], ["61", "165"], ["19", "165"], ["88", "91"], ["94", "91"], ["19", "91"], ["76", "91"], ["91", "94"], ["19", "94"], ["115", "113"], ["115", "113"], ["128", "125"], ["128", "125"], ["61", "125"], ["142", "140"], ["142", "140"], ["142", "140"], ["99", "98"], ["99", "98"], ["108", "98"], ["108", "98"], ["99", "115"], ["19", "115"], ["117", "115"], ["117", "115"], ["128", "127"], ["128", "127"], ["61", "127"], ["128", "142"], ["19", "142"], ["125", "142"], ["83", "142"], ["140", "142"], ["142", "99"], ["19", "99"], ["101", "99"], ["101", "99"], ["19", "108"], ["68", "108"], ["40", "117"], ["101", "117"], ["101", "117"], ["115", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["40", "101"], ["117", "101"], ["117", "101"], ["131", "130"], ["134", "130"], ["66", "131"], ["19", "131"], ["113", "134"], ["19", "134"], ["49", "49"], ["49", "52"], ["49", "54"], ["49", "58"], ["49", "55"], ["76", "146"], ["76", "76"], ["76", "91"], ["76", "79"], ["76", "83"], ["76", "147"], ["76", "88"], ["156", "161"], ["156", "166"], ["156", "162"], ["156", "159"], ["156", "165"], ["156", "164"], ["156", "156"], ["91", "94"], ["91", "98"], ["91", "99"], ["91", "102"], ["91", "91"], ["91", "101"], ["91", "105"], ["91", "108"], ["98", "115"], ["98", "113"], ["98", "128"], ["98", "131"], ["98", "142"], ["98", "121"], ["98", "134"], ["98", "140"], ["98", "137"], ["98", "130"], ["98", "118"], ["98", "117"], ["98", "127"], ["98", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int num: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,num,int num = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int rad = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,int[] start: int[])<SUB>7</SUB>>", "41": "<(IDENTIFIER,start,int[] start = new int[num])<SUB>7</SUB>>", "43": "<(IDENTIFIER,num,new int[num])<SUB>7</SUB>>", "45": "<(LOCAL,int i: int)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; num)<SUB>8</SUB>>", "51": "<(IDENTIFIER,num,i &lt; num)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,start[i])<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,start[i] = nextInt())<SUB>9</SUB>>", "59": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,double[] finalY = new double[num])<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.alloc,new double[num])>", "65": "<(LOCAL,double hyp: double)<SUB>13</SUB>>", "67": "<(IDENTIFIER,hyp,double hyp = rad * 2)<SUB>13</SUB>>", "69": "<(IDENTIFIER,rad,rad * 2)<SUB>13</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int cur = 0; Some(cur &lt; num); cur++),for (int cur = 0; Some(cur &lt; num); cur++))<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.assignment,int cur = 0)<SUB>15</SUB>>", "75": "<(LITERAL,0,int cur = 0)<SUB>15</SUB>>", "77": "<(IDENTIFIER,cur,cur &lt; num)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,cur++)<SUB>15</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignment,double stopAt = rad)<SUB>17</SUB>>", "85": "<(IDENTIFIER,rad,double stopAt = rad)<SUB>17</SUB>>", "87": "<(LOCAL,int comp: int)<SUB>18</SUB>>", "89": "<(IDENTIFIER,comp,int comp = 0)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.lessThan,comp &lt; cur)<SUB>18</SUB>>", "93": "<(IDENTIFIER,cur,comp &lt; cur)<SUB>18</SUB>>", "95": "<(IDENTIFIER,comp,comp++)<SUB>18</SUB>>", "97": "<(CONTROL_STRUCTURE,if (Math.abs(start[comp] - start[cur]) &gt; rad * 2),if (Math.abs(start[comp] - start[cur]) &gt; rad * 2))<SUB>19</SUB>>", "99": "<(abs,Math.abs(start[comp] - start[cur]))<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.subtraction,start[comp] - start[cur])<SUB>19</SUB>>", "103": "<(IDENTIFIER,start,start[comp] - start[cur])<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,start[cur])<SUB>19</SUB>>", "107": "<(IDENTIFIER,cur,start[comp] - start[cur])<SUB>19</SUB>>", "109": "<(IDENTIFIER,rad,rad * 2)<SUB>19</SUB>>", "111": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.assignment,double base = Math.abs(start[comp] - start[cur]))<SUB>21</SUB>>", "115": "<(abs,Math.abs(start[comp] - start[cur]))<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.subtraction,start[comp] - start[cur])<SUB>21</SUB>>", "119": "<(IDENTIFIER,start,start[comp] - start[cur])<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,start[cur])<SUB>21</SUB>>", "123": "<(IDENTIFIER,cur,start[comp] - start[cur])<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.assignment,double ny = Math.sqrt(hyp * hyp - base * base) + finalY[comp])<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.addition,Math.sqrt(hyp * hyp - base * base) + finalY[comp])<SUB>22</SUB>>", "129": "<(IDENTIFIER,Math,Math.sqrt(hyp * hyp - base * base))<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.multiplication,hyp * hyp)<SUB>22</SUB>>", "133": "<(IDENTIFIER,hyp,hyp * hyp)<SUB>22</SUB>>", "135": "<(IDENTIFIER,base,base * base)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,finalY[comp])<SUB>22</SUB>>", "139": "<(IDENTIFIER,comp,Math.sqrt(hyp * hyp - base * base) + finalY[comp])<SUB>22</SUB>>", "141": "<(IDENTIFIER,stopAt,stopAt = Math.max(ny, stopAt))<SUB>24</SUB>>", "143": "<(IDENTIFIER,Math,Math.max(ny, stopAt))<SUB>24</SUB>>", "145": "<(IDENTIFIER,stopAt,Math.max(ny, stopAt))<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,finalY[cur])<SUB>27</SUB>>", "149": "<(IDENTIFIER,cur,finalY[cur] = stopAt)<SUB>27</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; num); i++),for (int i = 0; Some(i &lt; num); i++))<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "155": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "157": "<(IDENTIFIER,i,i &lt; num)<SUB>30</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "161": "<(print,System.out.print(finalY[i] + &quot; &quot;))<SUB>31</SUB>>", "163": "<(IDENTIFIER,System,System.out.print(finalY[i] + &quot; &quot;))<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.addition,finalY[i] + &quot; &quot;)<SUB>31</SUB>>", "167": "<(IDENTIFIER,finalY,finalY[i] + &quot; &quot;)<SUB>31</SUB>>", "169": "<(LITERAL,&quot; &quot;,finalY[i] + &quot; &quot;)<SUB>31</SUB>>", "171": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "173": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "175": "<(MODIFIER,STATIC)>"}}