{"edges": [["19", "21"], ["19", "121"], ["19", "122"], ["19", "123"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "55"], ["21", "58"], ["21", "59"], ["21", "62"], ["21", "63"], ["21", "67"], ["21", "68"], ["21", "71"], ["21", "116"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["82", "87"], ["83", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "90"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["55", "59"], ["59", "65"], ["63", "68"], ["68", "73"], ["116", "123"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "50"], ["44", "55"], ["47", "44"], ["49", "47"], ["65", "63"], ["73", "76"], ["76", "84"], ["76", "119"], ["79", "76"], ["117", "116"], ["28", "26"], ["50", "53"], ["53", "49"], ["119", "117"], ["83", "88"], ["83", "79"], ["84", "83"], ["88", "92"], ["92", "95"], ["95", "104"], ["95", "79"], ["98", "95"], ["102", "112"], ["102", "98"], ["111", "98"], ["103", "102"], ["112", "111"], ["104", "107"], ["107", "103"], ["19", "24"], ["20", "123"], ["22", "123"], ["25", "123"], ["25", "123"], ["32", "123"], ["30", "123"], ["30", "123"], ["35", "123"], ["35", "123"], ["55", "123"], ["55", "123"], ["59", "123"], ["59", "123"], ["63", "123"], ["63", "123"], ["63", "123"], ["68", "123"], ["73", "123"], ["76", "123"], ["76", "123"], ["76", "123"], ["116", "123"], ["116", "123"], ["116", "123"], ["83", "123"], ["83", "123"], ["88", "123"], ["92", "123"], ["95", "123"], ["95", "123"], ["79", "123"], ["103", "123"], ["103", "123"], ["102", "123"], ["102", "123"], ["111", "123"], ["111", "123"], ["98", "123"], ["49", "123"], ["53", "123"], ["49", "123"], ["49", "123"], ["47", "123"], ["55", "123"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "59"], ["65", "63"], ["19", "68"], ["22", "25"], ["19", "25"], ["19", "41"], ["53", "49"], ["19", "55"], ["35", "55"], ["49", "55"], ["19", "73"], ["68", "116"], ["88", "116"], ["19", "116"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["44", "65"], ["19", "65"], ["73", "76"], ["79", "76"], ["19", "76"], ["65", "76"], ["95", "76"], ["76", "79"], ["19", "79"], ["32", "53"], ["19", "53"], ["63", "83"], ["68", "88"], ["19", "88"], ["76", "92"], ["19", "92"], ["92", "95"], ["98", "95"], ["19", "95"], ["76", "95"], ["95", "98"], ["19", "98"], ["19", "111"], ["103", "102"], ["103", "102"], ["19", "102"], ["55", "103"], ["49", "103"], ["44", "47"], ["44", "49"], ["44", "53"], ["44", "50"], ["44", "44"], ["76", "83"], ["76", "84"], ["76", "76"], ["76", "79"], ["83", "88"], ["83", "95"], ["83", "92"], ["95", "107"], ["95", "98"], ["95", "102"], ["95", "103"], ["95", "104"], ["95", "95"], ["102", "112"], ["102", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>7</SUB>>", "51": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>7</SUB>>", "53": "<(nextInt,nextInt())<SUB>7</SUB>>", "55": "<(sort,sort(arr))<SUB>8</SUB>>", "57": "<(IDENTIFIER,arr,sort(arr))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>9</SUB>>", "61": "<(LITERAL,0,int max = 0)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,boolean[] check = new boolean[n])<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.alloc,new boolean[n])>", "67": "<(LOCAL,int count: int)<SUB>11</SUB>>", "69": "<(IDENTIFIER,count,int count = 0)<SUB>11</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.logicalNot,!check[i])<SUB>15</SUB>>", "85": "<(IDENTIFIER,check,!check[i])<SUB>15</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "89": "<(IDENTIFIER,count,count++)<SUB>17</SUB>>", "91": "<(LOCAL,int j: int)<SUB>19</SUB>>", "93": "<(IDENTIFIER,j,int j = i)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>19</SUB>>", "97": "<(IDENTIFIER,n,j &lt; n)<SUB>19</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "101": "<(CONTROL_STRUCTURE,if (arr[j] % arr[i] == 0),if (arr[j] % arr[i] == 0))<SUB>22</SUB>>", "103": "<(&lt;operator&gt;.modulo,arr[j] % arr[i])<SUB>22</SUB>>", "105": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>22</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>22</SUB>>", "109": "<(IDENTIFIER,i,arr[j] % arr[i])<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.assignment,check[j] = true)<SUB>23</SUB>>", "113": "<(IDENTIFIER,check,check[j] = true)<SUB>23</SUB>>", "115": "<(LITERAL,true,check[j] = true)<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}