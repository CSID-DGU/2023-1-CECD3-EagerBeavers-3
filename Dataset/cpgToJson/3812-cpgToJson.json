{"edges": [["23", "24"], ["23", "25"], ["23", "320"], ["23", "321"], ["23", "322"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "62"], ["25", "63"], ["25", "70"], ["25", "71"], ["25", "78"], ["25", "86"], ["25", "87"], ["25", "94"], ["25", "95"], ["25", "102"], ["25", "148"], ["25", "194"], ["25", "195"], ["25", "200"], ["25", "279"], ["25", "318"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["80", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "118"], ["112", "119"], ["112", "124"], ["114", "115"], ["114", "116"], ["116", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "134"], ["124", "136"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "158"], ["148", "160"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["160", "162"], ["160", "166"], ["160", "167"], ["160", "172"], ["162", "163"], ["162", "164"], ["164", "165"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "206"], ["200", "237"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["218", "219"], ["218", "220"], ["218", "223"], ["218", "226"], ["218", "228"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["228", "229"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["237", "238"], ["238", "239"], ["239", "240"], ["239", "241"], ["239", "244"], ["239", "247"], ["239", "249"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["247", "248"], ["249", "250"], ["250", "251"], ["250", "252"], ["250", "255"], ["250", "258"], ["250", "260"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["258", "259"], ["260", "261"], ["261", "262"], ["261", "267"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["267", "268"], ["267", "269"], ["267", "270"], ["267", "271"], ["267", "272"], ["267", "273"], ["267", "274"], ["267", "275"], ["267", "276"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "281"], ["279", "284"], ["279", "287"], ["279", "289"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["287", "288"], ["289", "8"], ["289", "290"], ["289", "293"], ["289", "294"], ["289", "314"], ["290", "291"], ["290", "292"], ["293", "7"], ["294", "295"], ["294", "296"], ["294", "299"], ["294", "302"], ["294", "304"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["302", "303"], ["304", "305"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "313"], ["308", "309"], ["308", "312"], ["309", "310"], ["309", "311"], ["314", "315"], ["314", "316"], ["316", "317"], ["318", "319"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "51"], ["48", "59"], ["55", "67"], ["63", "75"], ["71", "83"], ["78", "91"], ["87", "98"], ["95", "104"], ["195", "202"], ["318", "322"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["65", "63"], ["73", "71"], ["80", "78"], ["89", "87"], ["97", "95"], ["104", "107"], ["107", "116"], ["107", "150"], ["110", "107"], ["150", "155"], ["153", "164"], ["153", "197"], ["158", "155"], ["197", "195"], ["201", "209"], ["201", "241"], ["281", "284"], ["284", "292"], ["284", "318"], ["287", "284"], ["31", "38"], ["34", "29"], ["46", "44"], ["51", "50"], ["59", "57"], ["67", "65"], ["75", "73"], ["83", "80"], ["91", "89"], ["98", "97"], ["114", "121"], ["119", "126"], ["155", "153"], ["162", "169"], ["167", "174"], ["202", "201"], ["290", "293"], ["293", "296"], ["314", "287"], ["33", "31"], ["36", "34"], ["116", "114"], ["121", "119"], ["126", "131"], ["129", "139"], ["129", "110"], ["134", "131"], ["164", "162"], ["169", "167"], ["174", "177"], ["177", "185"], ["177", "158"], ["180", "177"], ["209", "212"], ["212", "220"], ["212", "281"], ["215", "212"], ["292", "290"], ["296", "299"], ["299", "309"], ["299", "316"], ["302", "299"], ["316", "314"], ["38", "36"], ["131", "129"], ["137", "134"], ["183", "180"], ["241", "244"], ["244", "252"], ["244", "281"], ["247", "244"], ["305", "302"], ["138", "145"], ["143", "137"], ["184", "191"], ["189", "183"], ["220", "223"], ["223", "231"], ["223", "215"], ["226", "223"], ["307", "305"], ["139", "138"], ["145", "143"], ["185", "184"], ["191", "189"], ["229", "226"], ["252", "255"], ["255", "263"], ["255", "247"], ["258", "255"], ["308", "307"], ["230", "235"], ["235", "229"], ["261", "258"], ["309", "308"], ["231", "230"], ["262", "278"], ["267", "261"], ["263", "262"], ["276", "267"], ["278", "276"], ["23", "28"], ["24", "322"], ["26", "322"], ["31", "322"], ["34", "322"], ["34", "322"], ["34", "322"], ["29", "322"], ["40", "322"], ["43", "322"], ["43", "322"], ["48", "322"], ["51", "322"], ["50", "322"], ["48", "322"], ["48", "322"], ["57", "322"], ["55", "322"], ["55", "322"], ["65", "322"], ["63", "322"], ["63", "322"], ["73", "322"], ["73", "322"], ["71", "322"], ["71", "322"], ["80", "322"], ["78", "322"], ["78", "322"], ["87", "322"], ["89", "322"], ["87", "322"], ["87", "322"], ["95", "322"], ["95", "322"], ["95", "322"], ["153", "322"], ["153", "322"], ["195", "322"], ["197", "322"], ["195", "322"], ["195", "322"], ["202", "322"], ["201", "322"], ["201", "322"], ["252", "322"], ["255", "322"], ["255", "322"], ["255", "322"], ["247", "322"], ["261", "322"], ["267", "322"], ["267", "322"], ["267", "322"], ["267", "322"], ["261", "322"], ["261", "322"], ["258", "322"], ["281", "322"], ["284", "322"], ["284", "322"], ["284", "322"], ["318", "322"], ["318", "322"], ["290", "322"], ["293", "322"], ["296", "322"], ["299", "322"], ["299", "322"], ["299", "322"], ["316", "322"], ["314", "322"], ["314", "322"], ["287", "322"], ["307", "322"], ["305", "322"], ["305", "322"], ["302", "322"], ["220", "322"], ["223", "322"], ["223", "322"], ["223", "322"], ["215", "322"], ["229", "322"], ["229", "322"], ["229", "322"], ["226", "322"], ["164", "322"], ["162", "322"], ["162", "322"], ["167", "322"], ["169", "322"], ["167", "322"], ["167", "322"], ["174", "322"], ["177", "322"], ["177", "322"], ["158", "322"], ["183", "322"], ["189", "322"], ["189", "322"], ["183", "322"], ["183", "322"], ["180", "322"], ["116", "322"], ["114", "322"], ["114", "322"], ["119", "322"], ["121", "322"], ["119", "322"], ["119", "322"], ["126", "322"], ["129", "322"], ["129", "322"], ["129", "322"], ["110", "322"], ["137", "322"], ["143", "322"], ["143", "322"], ["137", "322"], ["137", "322"], ["134", "322"], ["78", "322"], ["267", "322"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["65", "63"], ["65", "63"], ["73", "71"], ["73", "71"], ["80", "78"], ["80", "78"], ["80", "78"], ["89", "87"], ["89", "87"], ["97", "95"], ["97", "95"], ["197", "195"], ["197", "195"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["23", "104"], ["23", "150"], ["23", "281"], ["43", "318"], ["314", "318"], ["23", "318"], ["23", "31"], ["23", "39"], ["51", "50"], ["23", "50"], ["23", "57"], ["48", "57"], ["57", "65"], ["23", "65"], ["48", "65"], ["65", "73"], ["23", "73"], ["48", "73"], ["55", "80"], ["23", "80"], ["63", "80"], ["71", "80"], ["80", "89"], ["23", "89"], ["91", "89"], ["91", "89"], ["98", "97"], ["98", "97"], ["91", "97"], ["23", "97"], ["104", "107"], ["110", "107"], ["23", "107"], ["98", "107"], ["107", "110"], ["23", "110"], ["116", "114"], ["121", "119"], ["121", "119"], ["150", "153"], ["158", "153"], ["23", "153"], ["155", "153"], ["155", "153"], ["153", "158"], ["23", "158"], ["164", "162"], ["169", "167"], ["169", "167"], ["155", "197"], ["23", "197"], ["97", "197"], ["177", "197"], ["131", "197"], ["202", "201"], ["202", "201"], ["23", "201"], ["281", "284"], ["287", "284"], ["23", "284"], ["244", "284"], ["212", "284"], ["284", "287"], ["23", "287"], ["23", "290"], ["31", "34"], ["23", "34"], ["29", "51"], ["23", "51"], ["71", "83"], ["23", "83"], ["80", "91"], ["23", "91"], ["89", "98"], ["23", "98"], ["23", "126"], ["107", "155"], ["23", "155"], ["23", "174"], ["23", "202"], ["71", "202"], ["23", "209"], ["290", "293"], ["23", "293"], ["23", "296"], ["43", "314"], ["23", "314"], ["316", "314"], ["51", "116"], ["23", "116"], ["114", "121"], ["23", "121"], ["126", "129"], ["134", "129"], ["23", "129"], ["131", "129"], ["131", "129"], ["129", "134"], ["23", "134"], ["143", "137"], ["143", "137"], ["51", "164"], ["116", "164"], ["23", "164"], ["162", "169"], ["23", "169"], ["174", "177"], ["180", "177"], ["23", "177"], ["97", "177"], ["131", "177"], ["177", "180"], ["23", "180"], ["189", "183"], ["189", "183"], ["209", "212"], ["215", "212"], ["23", "212"], ["197", "212"], ["212", "215"], ["23", "215"], ["23", "241"], ["296", "299"], ["302", "299"], ["23", "299"], ["197", "299"], ["255", "299"], ["223", "299"], ["299", "302"], ["23", "302"], ["293", "316"], ["305", "316"], ["23", "316"], ["97", "131"], ["23", "131"], ["23", "220"], ["241", "244"], ["247", "244"], ["23", "244"], ["197", "244"], ["267", "244"], ["244", "247"], ["267", "247"], ["23", "247"], ["293", "305"], ["23", "305"], ["261", "305"], ["229", "305"], ["73", "143"], ["23", "143"], ["119", "143"], ["73", "189"], ["143", "189"], ["23", "189"], ["167", "189"], ["143", "189"], ["220", "223"], ["226", "223"], ["23", "223"], ["197", "223"], ["223", "226"], ["23", "226"], ["235", "229"], ["23", "252"], ["261", "307"], ["229", "307"], ["23", "307"], ["252", "255"], ["258", "255"], ["23", "255"], ["197", "255"], ["267", "255"], ["267", "258"], ["23", "258"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["267", "261"], ["23", "235"], ["23", "267"], ["244", "267"], ["255", "267"], ["202", "267"], ["87", "267"], ["95", "267"], ["244", "267"], ["255", "267"], ["73", "267"], ["189", "267"], ["143", "267"], ["107", "107"], ["107", "114"], ["107", "131"], ["107", "119"], ["107", "121"], ["107", "129"], ["107", "116"], ["107", "126"], ["107", "110"], ["153", "167"], ["153", "169"], ["153", "162"], ["153", "153"], ["153", "174"], ["153", "164"], ["153", "155"], ["153", "158"], ["153", "177"], ["201", "209"], ["201", "244"], ["201", "212"], ["201", "241"], ["284", "292"], ["284", "290"], ["284", "284"], ["284", "293"], ["284", "314"], ["284", "296"], ["284", "299"], ["284", "287"], ["284", "316"], ["129", "145"], ["129", "131"], ["129", "129"], ["129", "134"], ["129", "138"], ["129", "137"], ["129", "139"], ["129", "143"], ["177", "185"], ["177", "189"], ["177", "191"], ["177", "184"], ["177", "180"], ["177", "183"], ["177", "177"], ["212", "215"], ["212", "223"], ["212", "212"], ["212", "220"], ["299", "308"], ["299", "307"], ["299", "309"], ["299", "302"], ["299", "299"], ["299", "305"], ["244", "244"], ["244", "247"], ["244", "255"], ["244", "252"], ["223", "230"], ["223", "226"], ["223", "223"], ["223", "231"], ["223", "235"], ["223", "229"], ["255", "261"], ["255", "262"], ["255", "255"], ["255", "267"], ["255", "258"], ["255", "276"], ["255", "263"], ["255", "278"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(LOCAL,String[] s2: java.lang.String[])<SUB>7</SUB>>", "49": "<(IDENTIFIER,s2,String[] s2 = split(&quot; &quot;))<SUB>7</SUB>>", "51": "<(readLine,readLine())<SUB>7</SUB>>", "53": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int n = Integer.parseInt(s2[0]))<SUB>8</SUB>>", "57": "<(parseInt,Integer.parseInt(s2[0]))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,s2[0])<SUB>8</SUB>>", "61": "<(LITERAL,0,Integer.parseInt(s2[0]))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int m = Integer.parseInt(s2[1]))<SUB>9</SUB>>", "65": "<(parseInt,Integer.parseInt(s2[1]))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,s2[1])<SUB>9</SUB>>", "69": "<(LITERAL,1,Integer.parseInt(s2[1]))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,int k = Integer.parseInt(s2[2]))<SUB>10</SUB>>", "73": "<(parseInt,Integer.parseInt(s2[2]))<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,s2[2])<SUB>10</SUB>>", "77": "<(LITERAL,2,Integer.parseInt(s2[2]))<SUB>10</SUB>>", "79": "<(IDENTIFIER,dp,dp = new long[n][m][k + 1])<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,new long[n][m][k + 1])<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.addition,k + 1)<SUB>11</SUB>>", "85": "<(LITERAL,1,k + 1)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,int[][] hori = new int[n][m - 1])<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.alloc,new int[n][m - 1])>", "91": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>12</SUB>>", "93": "<(LITERAL,1,m - 1)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,int[][] verti = new int[n - 1][m])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "99": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>13</SUB>>", "103": "<(LOCAL,int i: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "113": "<(LOCAL,String str: java.lang.String)<SUB>15</SUB>>", "115": "<(IDENTIFIER,str,String str = readLine())<SUB>15</SUB>>", "117": "<(IDENTIFIER,br,readLine())<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,String[] s1 = str.split(&quot; &quot;))<SUB>16</SUB>>", "121": "<(split,str.split(&quot; &quot;))<SUB>16</SUB>>", "123": "<(LITERAL,&quot; &quot;,str.split(&quot; &quot;))<SUB>16</SUB>>", "125": "<(LOCAL,int j: int)<SUB>17</SUB>>", "127": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>17</SUB>>", "133": "<(LITERAL,1,m - 1)<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.assignment,hori[i][j] = Integer.parseInt(s1[j]))<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,hori[i])<SUB>18</SUB>>", "141": "<(IDENTIFIER,i,hori[i][j] = Integer.parseInt(s1[j]))<SUB>18</SUB>>", "143": "<(parseInt,Integer.parseInt(s1[j]))<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,s1[j])<SUB>18</SUB>>", "147": "<(IDENTIFIER,j,Integer.parseInt(s1[j]))<SUB>18</SUB>>", "149": "<(LOCAL,int i: int)<SUB>21</SUB>>", "151": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>21</SUB>>", "157": "<(LITERAL,1,n - 1)<SUB>21</SUB>>", "159": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "161": "<(LOCAL,String str: java.lang.String)<SUB>22</SUB>>", "163": "<(IDENTIFIER,str,String str = readLine())<SUB>22</SUB>>", "165": "<(IDENTIFIER,br,readLine())<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.assignment,String[] s1 = str.split(&quot; &quot;))<SUB>23</SUB>>", "169": "<(split,str.split(&quot; &quot;))<SUB>23</SUB>>", "171": "<(LITERAL,&quot; &quot;,str.split(&quot; &quot;))<SUB>23</SUB>>", "173": "<(LOCAL,int j: int)<SUB>24</SUB>>", "175": "<(IDENTIFIER,j,int j = 0)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>24</SUB>>", "179": "<(IDENTIFIER,m,j &lt; m)<SUB>24</SUB>>", "181": "<(IDENTIFIER,j,j++)<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.assignment,verti[i][j] = Integer.parseInt(s1[j]))<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,verti[i])<SUB>25</SUB>>", "187": "<(IDENTIFIER,i,verti[i][j] = Integer.parseInt(s1[j]))<SUB>25</SUB>>", "189": "<(parseInt,Integer.parseInt(s1[j]))<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,s1[j])<SUB>25</SUB>>", "193": "<(IDENTIFIER,j,Integer.parseInt(s1[j]))<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.assignment,long[][] ans = new long[n][m])<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.alloc,new long[n][m])>", "199": "<(IDENTIFIER,m,new long[n][m])<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.notEquals,k % 2 != 0)<SUB>29</SUB>>", "203": "<(IDENTIFIER,k,k % 2)<SUB>29</SUB>>", "205": "<(LITERAL,0,k % 2 != 0)<SUB>29</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>30</SUB>>", "209": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "211": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "213": "<(IDENTIFIER,i,i &lt; n)<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "217": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "219": "<(LOCAL,int j: int)<SUB>31</SUB>>", "221": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "223": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>31</SUB>>", "225": "<(IDENTIFIER,m,j &lt; m)<SUB>31</SUB>>", "227": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "229": "<(&lt;operator&gt;.assignment,ans[i][j] = -1)<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>32</SUB>>", "233": "<(IDENTIFIER,i,ans[i][j] = -1)<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.minus,-1)<SUB>32</SUB>>", "237": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "239": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>36</SUB>>", "241": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>36</SUB>>", "243": "<(LITERAL,0,int i = 0)<SUB>36</SUB>>", "245": "<(IDENTIFIER,i,i &lt; n)<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.postIncrement,i++)<SUB>36</SUB>>", "249": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "251": "<(LOCAL,int j: int)<SUB>37</SUB>>", "253": "<(IDENTIFIER,j,int j = 0)<SUB>37</SUB>>", "255": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>37</SUB>>", "257": "<(IDENTIFIER,m,j &lt; m)<SUB>37</SUB>>", "259": "<(IDENTIFIER,j,j++)<SUB>37</SUB>>", "261": "<(&lt;operator&gt;.assignment,ans[i][j] = findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>38</SUB>>", "265": "<(IDENTIFIER,i,ans[i][j] = findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "267": "<(findAns,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "269": "<(IDENTIFIER,i,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "271": "<(IDENTIFIER,k,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "273": "<(IDENTIFIER,verti,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "275": "<(IDENTIFIER,m,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "277": "<(IDENTIFIER,Integer,findAns(i, j, k, hori, verti, n, m, Integer.MAX_VALUE))<SUB>38</SUB>>", "279": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>42</SUB>>", "281": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>42</SUB>>", "283": "<(LITERAL,0,int i = 0)<SUB>42</SUB>>", "285": "<(IDENTIFIER,i,i &lt; n)<SUB>42</SUB>>", "287": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "289": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "290": "<(&lt;operator&gt;.assignment,StringBuilder str = new StringBuilder())<SUB>43</SUB>>", "292": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>43</SUB>>", "7": "<(IDENTIFIER,str,new StringBuilder())<SUB>43</SUB>>", "295": "<(LOCAL,int j: int)<SUB>44</SUB>>", "297": "<(IDENTIFIER,j,int j = 0)<SUB>44</SUB>>", "299": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>44</SUB>>", "301": "<(IDENTIFIER,m,j &lt; m)<SUB>44</SUB>>", "303": "<(IDENTIFIER,j,j++)<SUB>44</SUB>>", "305": "<(append,str.append(ans[i][j] + &quot; &quot;))<SUB>45</SUB>>", "307": "<(&lt;operator&gt;.addition,ans[i][j] + &quot; &quot;)<SUB>45</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>45</SUB>>", "311": "<(IDENTIFIER,i,ans[i][j] + &quot; &quot;)<SUB>45</SUB>>", "313": "<(LITERAL,&quot; &quot;,ans[i][j] + &quot; &quot;)<SUB>45</SUB>>", "315": "<(IDENTIFIER,pw,println(str.toString()))<SUB>46</SUB>>", "317": "<(IDENTIFIER,str,str.toString())<SUB>46</SUB>>", "319": "<(IDENTIFIER,pw,close())<SUB>50</SUB>>", "321": "<(MODIFIER,STATIC)>"}}