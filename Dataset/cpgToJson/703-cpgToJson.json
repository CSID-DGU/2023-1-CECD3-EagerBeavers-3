{"edges": [["19", "21"], ["19", "221"], ["19", "222"], ["19", "223"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "39"], ["35", "36"], ["35", "38"], ["36", "37"], ["39", "40"], ["39", "41"], ["39", "45"], ["39", "46"], ["39", "51"], ["39", "52"], ["39", "57"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "60"], ["57", "151"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "67"], ["60", "68"], ["60", "73"], ["60", "74"], ["60", "79"], ["60", "80"], ["60", "83"], ["60", "84"], ["60", "89"], ["60", "125"], ["60", "146"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "100"], ["94", "115"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "112"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "114"], ["115", "116"], ["116", "117"], ["116", "120"], ["116", "123"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "127"], ["125", "133"], ["125", "136"], ["125", "138"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "132"], ["130", "131"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["152", "153"], ["152", "154"], ["152", "161"], ["152", "162"], ["152", "169"], ["152", "176"], ["152", "177"], ["152", "178"], ["152", "181"], ["152", "184"], ["152", "214"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "192"], ["184", "195"], ["184", "197"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "191"], ["189", "190"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "211"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "210"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["22", "28"], ["25", "32"], ["30", "36"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "223"], ["35", "43"], ["28", "26"], ["36", "35"], ["41", "48"], ["46", "54"], ["52", "58"], ["43", "41"], ["48", "46"], ["54", "52"], ["58", "64"], ["58", "157"], ["62", "70"], ["68", "76"], ["74", "80"], ["80", "86"], ["84", "90"], ["146", "36"], ["64", "62"], ["70", "68"], ["76", "74"], ["86", "84"], ["90", "96"], ["90", "130"], ["127", "133"], ["133", "142"], ["133", "149"], ["136", "133"], ["147", "146"], ["154", "165"], ["162", "172"], ["169", "178"], ["178", "181"], ["181", "189"], ["214", "36"], ["129", "127"], ["139", "136"], ["149", "147"], ["156", "154"], ["164", "162"], ["170", "173"], ["173", "169"], ["186", "192"], ["192", "202"], ["192", "217"], ["195", "192"], ["215", "218"], ["218", "214"], ["95", "104"], ["95", "117"], ["130", "129"], ["140", "143"], ["143", "139"], ["157", "156"], ["165", "164"], ["172", "170"], ["188", "186"], ["198", "211"], ["211", "195"], ["217", "215"], ["96", "95"], ["101", "112"], ["112", "90"], ["142", "140"], ["189", "188"], ["200", "198"], ["103", "101"], ["117", "120"], ["120", "123"], ["123", "90"], ["201", "200"], ["104", "107"], ["105", "103"], ["202", "205"], ["203", "201"], ["106", "105"], ["204", "203"], ["107", "106"], ["205", "204"], ["19", "24"], ["20", "223"], ["22", "223"], ["25", "223"], ["25", "223"], ["32", "223"], ["30", "223"], ["30", "223"], ["36", "223"], ["35", "223"], ["35", "223"], ["214", "223"], ["214", "223"], ["146", "223"], ["146", "223"], ["86", "223"], ["48", "223"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["36", "35"], ["19", "35"], ["43", "41"], ["48", "46"], ["48", "46"], ["54", "52"], ["54", "52"], ["30", "36"], ["19", "36"], ["32", "43"], ["19", "43"], ["19", "48"], ["46", "54"], ["19", "54"], ["41", "54"], ["52", "58"], ["19", "58"], ["64", "62"], ["64", "62"], ["62", "68"], ["62", "74"], ["19", "80"], ["86", "84"], ["86", "84"], ["129", "127"], ["129", "127"], ["214", "146"], ["139", "146"], ["68", "146"], ["19", "146"], ["19", "178"], ["19", "181"], ["54", "64"], ["19", "64"], ["19", "86"], ["74", "86"], ["84", "90"], ["123", "90"], ["112", "90"], ["19", "90"], ["127", "133"], ["136", "133"], ["19", "133"], ["143", "136"], ["19", "136"], ["214", "169"], ["146", "169"], ["19", "169"], ["162", "169"], ["188", "186"], ["188", "186"], ["169", "214"], ["19", "214"], ["178", "214"], ["198", "214"], ["130", "129"], ["19", "129"], ["214", "139"], ["146", "139"], ["143", "139"], ["143", "139"], ["19", "173"], ["162", "173"], ["186", "192"], ["195", "192"], ["19", "192"], ["205", "195"], ["19", "195"], ["200", "198"], ["200", "198"], ["19", "211"], ["19", "218"], ["178", "218"], ["198", "218"], ["96", "95"], ["96", "95"], ["19", "95"], ["19", "101"], ["105", "101"], ["105", "101"], ["19", "112"], ["80", "130"], ["117", "130"], ["101", "130"], ["19", "130"], ["130", "143"], ["19", "143"], ["133", "143"], ["54", "157"], ["19", "157"], ["157", "165"], ["19", "165"], ["189", "188"], ["19", "188"], ["178", "198"], ["19", "198"], ["200", "211"], ["90", "96"], ["19", "96"], ["80", "101"], ["117", "101"], ["107", "112"], ["19", "117"], ["19", "120"], ["154", "189"], ["19", "189"], ["19", "200"], ["204", "200"], ["204", "200"], ["181", "200"], ["211", "200"], ["19", "103"], ["105", "103"], ["105", "103"], ["80", "117"], ["101", "117"], ["96", "120"], ["120", "123"], ["19", "123"], ["19", "201"], ["204", "201"], ["204", "201"], ["107", "105"], ["107", "105"], ["19", "105"], ["204", "203"], ["204", "203"], ["19", "203"], ["107", "106"], ["107", "106"], ["19", "106"], ["205", "204"], ["205", "204"], ["19", "204"], ["96", "107"], ["19", "107"], ["189", "205"], ["19", "205"], ["192", "205"], ["35", "52"], ["35", "35"], ["35", "54"], ["35", "43"], ["35", "58"], ["35", "36"], ["35", "48"], ["35", "46"], ["35", "41"], ["58", "214"], ["58", "68"], ["58", "64"], ["58", "188"], ["58", "192"], ["58", "154"], ["58", "146"], ["58", "169"], ["58", "84"], ["58", "178"], ["58", "215"], ["58", "149"], ["58", "74"], ["58", "189"], ["58", "162"], ["58", "170"], ["58", "76"], ["58", "129"], ["58", "181"], ["58", "90"], ["58", "173"], ["58", "80"], ["58", "130"], ["58", "70"], ["58", "164"], ["58", "127"], ["58", "186"], ["58", "86"], ["58", "217"], ["58", "157"], ["58", "165"], ["58", "147"], ["58", "156"], ["58", "218"], ["58", "62"], ["58", "133"], ["58", "172"], ["90", "96"], ["90", "95"], ["90", "90"], ["133", "136"], ["133", "139"], ["133", "142"], ["133", "140"], ["133", "143"], ["133", "133"], ["192", "192"], ["192", "198"], ["192", "204"], ["192", "195"], ["192", "202"], ["192", "201"], ["192", "205"], ["192", "200"], ["192", "211"], ["192", "203"], ["95", "107"], ["95", "120"], ["95", "103"], ["95", "104"], ["95", "112"], ["95", "101"], ["95", "123"], ["95", "106"], ["95", "105"], ["95", "117"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scn = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scn,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int t: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,t,int t = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,scn,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>5</SUB>>", "37": "<(IDENTIFIER,t,t--)<SUB>5</SUB>>", "39": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,String str = next())<SUB>6</SUB>>", "43": "<(next,next())<SUB>6</SUB>>", "45": "<(LOCAL,Pattern p: ANY)<SUB>7</SUB>>", "47": "<(IDENTIFIER,p,ANY p = compile(&quot;R[0-9]+C[0-9]+&quot;))<SUB>7</SUB>>", "49": "<(IDENTIFIER,Pattern,compile(&quot;R[0-9]+C[0-9]+&quot;))<SUB>7</SUB>>", "51": "<(LOCAL,Matcher m: ANY)<SUB>8</SUB>>", "53": "<(IDENTIFIER,m,ANY m = matcher(str))<SUB>8</SUB>>", "55": "<(IDENTIFIER,p,matcher(str))<SUB>8</SUB>>", "57": "<(CONTROL_STRUCTURE,if (m.matches()),if (m.matches()))<SUB>9</SUB>>", "59": "<(IDENTIFIER,m,matches())<SUB>9</SUB>>", "61": "<(LOCAL,String[] nums: java.lang.String[])<SUB>10</SUB>>", "63": "<(IDENTIFIER,nums,String[] nums = str.split(&quot;[RC]&quot;))<SUB>10</SUB>>", "65": "<(IDENTIFIER,str,str.split(&quot;[RC]&quot;))<SUB>10</SUB>>", "67": "<(LOCAL,String first: java.lang.String)<SUB>11</SUB>>", "69": "<(IDENTIFIER,first,String first = nums[1])<SUB>11</SUB>>", "71": "<(IDENTIFIER,nums,String first = nums[1])<SUB>11</SUB>>", "73": "<(LOCAL,String second: java.lang.String)<SUB>12</SUB>>", "75": "<(IDENTIFIER,second,String second = nums[2])<SUB>12</SUB>>", "77": "<(IDENTIFIER,nums,String second = nums[2])<SUB>12</SUB>>", "79": "<(LOCAL,String ans: java.lang.String)<SUB>14</SUB>>", "81": "<(IDENTIFIER,ans,String ans = &quot;&quot;)<SUB>14</SUB>>", "83": "<(LOCAL,long num: long)<SUB>15</SUB>>", "85": "<(IDENTIFIER,num,long num = Integer.parseInt(second))<SUB>15</SUB>>", "87": "<(IDENTIFIER,Integer,Integer.parseInt(second))<SUB>15</SUB>>", "89": "<(CONTROL_STRUCTURE,while (num &gt; 0),while (num &gt; 0))<SUB>16</SUB>>", "91": "<(IDENTIFIER,num,num &gt; 0)<SUB>16</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.greaterThan,num % 26 &gt; 0)<SUB>17</SUB>>", "97": "<(IDENTIFIER,num,num % 26)<SUB>17</SUB>>", "99": "<(LITERAL,0,num % 26 &gt; 0)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.assignmentPlus,ans += (char) (num % 26 + 'A' - 1))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.cast,(char) (num % 26 + 'A' - 1))<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.subtraction,num % 26 + 'A' - 1)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.modulo,num % 26)<SUB>18</SUB>>", "109": "<(LITERAL,26,num % 26)<SUB>18</SUB>>", "111": "<(LITERAL,1,num % 26 + 'A' - 1)<SUB>18</SUB>>", "113": "<(IDENTIFIER,num,num /= 26)<SUB>19</SUB>>", "115": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.assignmentPlus,ans += 'Z')<SUB>21</SUB>>", "119": "<(LITERAL,'Z',ans += 'Z')<SUB>21</SUB>>", "121": "<(IDENTIFIER,num,num /= 26)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.postDecrement,num--)<SUB>23</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int i = ans.length() - 1; Some(i &gt;= 0); --i),for (int i = ans.length() - 1; Some(i &gt;= 0); --i))<SUB>26</SUB>>", "127": "<(&lt;operator&gt;.assignment,int i = ans.length() - 1)<SUB>26</SUB>>", "129": "<(&lt;operator&gt;.subtraction,ans.length() - 1)<SUB>26</SUB>>", "131": "<(IDENTIFIER,ans,ans.length())<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>26</SUB>>", "135": "<(LITERAL,0,i &gt;= 0)<SUB>26</SUB>>", "137": "<(IDENTIFIER,i,--i)<SUB>26</SUB>>", "139": "<(print,System.out.print(ans.charAt(i)))<SUB>27</SUB>>", "141": "<(IDENTIFIER,System,System.out.print(ans.charAt(i)))<SUB>27</SUB>>", "143": "<(charAt,ans.charAt(i))<SUB>27</SUB>>", "145": "<(IDENTIFIER,i,ans.charAt(i))<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "151": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "153": "<(LOCAL,String first: java.lang.String)<SUB>32</SUB>>", "155": "<(IDENTIFIER,first,String first = str.split(&quot;[0-9]+&quot;)[0])<SUB>32</SUB>>", "157": "<(split,str.split(&quot;[0-9]+&quot;))<SUB>32</SUB>>", "159": "<(LITERAL,&quot;[0-9]+&quot;,str.split(&quot;[0-9]+&quot;))<SUB>32</SUB>>", "161": "<(LOCAL,String second: java.lang.String)<SUB>33</SUB>>", "163": "<(IDENTIFIER,second,String second = str.split(&quot;[A-Z]+&quot;)[1])<SUB>33</SUB>>", "165": "<(split,str.split(&quot;[A-Z]+&quot;))<SUB>33</SUB>>", "167": "<(LITERAL,&quot;[A-Z]+&quot;,str.split(&quot;[A-Z]+&quot;))<SUB>33</SUB>>", "169": "<(print,System.out.print(&quot;R&quot; + second))<SUB>34</SUB>>", "171": "<(IDENTIFIER,System,System.out.print(&quot;R&quot; + second))<SUB>34</SUB>>", "173": "<(&lt;operator&gt;.addition,&quot;R&quot; + second)<SUB>34</SUB>>", "175": "<(IDENTIFIER,second,&quot;R&quot; + second)<SUB>34</SUB>>", "177": "<(LOCAL,long pow: long)<SUB>36</SUB>>", "179": "<(IDENTIFIER,num,long num = 0)<SUB>36</SUB>>", "181": "<(&lt;operator&gt;.assignment,long pow = 1)<SUB>36</SUB>>", "183": "<(LITERAL,1,long pow = 1)<SUB>36</SUB>>", "185": "<(LOCAL,int i: int)<SUB>37</SUB>>", "187": "<(IDENTIFIER,i,int i = first.length() - 1)<SUB>37</SUB>>", "189": "<(length,first.length())<SUB>37</SUB>>", "191": "<(LITERAL,1,first.length() - 1)<SUB>37</SUB>>", "193": "<(IDENTIFIER,i,i &gt;= 0)<SUB>37</SUB>>", "195": "<(&lt;operator&gt;.preDecrement,--i)<SUB>37</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "199": "<(IDENTIFIER,num,num += (long) (first.charAt(i) - 'A' + 1) * pow)<SUB>38</SUB>>", "201": "<(&lt;operator&gt;.cast,(long) (first.charAt(i) - 'A' + 1))<SUB>38</SUB>>", "203": "<(&lt;operator&gt;.addition,first.charAt(i) - 'A' + 1)<SUB>38</SUB>>", "205": "<(charAt,first.charAt(i))<SUB>38</SUB>>", "207": "<(IDENTIFIER,i,first.charAt(i))<SUB>38</SUB>>", "209": "<(LITERAL,1,first.charAt(i) - 'A' + 1)<SUB>38</SUB>>", "211": "<(&lt;operator&gt;.assignmentMultiplication,pow *= 26)<SUB>39</SUB>>", "213": "<(LITERAL,26,pow *= 26)<SUB>39</SUB>>", "215": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>41</SUB>>", "217": "<(FIELD_IDENTIFIER,out,out)<SUB>41</SUB>>", "219": "<(LITERAL,&quot;C&quot;,&quot;C&quot; + num)<SUB>41</SUB>>", "221": "<(MODIFIER,PUBLIC)>", "223": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}