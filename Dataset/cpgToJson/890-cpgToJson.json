{"edges": [["21", "23"], ["21", "181"], ["21", "182"], ["21", "183"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "54"], ["23", "55"], ["23", "59"], ["23", "64"], ["23", "65"], ["23", "68"], ["23", "106"], ["23", "117"], ["23", "118"], ["23", "121"], ["23", "122"], ["23", "126"], ["23", "168"], ["23", "170"], ["23", "172"], ["23", "179"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "85"], ["78", "95"], ["78", "100"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "92"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["93", "94"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["110", "116"], ["111", "112"], ["111", "113"], ["114", "115"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "156"], ["137", "138"], ["137", "150"], ["138", "139"], ["138", "145"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "57"], ["55", "62"], ["59", "65"], ["65", "70"], ["118", "124"], ["122", "128"], ["168", "170"], ["170", "175"], ["172", "179"], ["179", "183"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["57", "55"], ["62", "59"], ["70", "73"], ["73", "82"], ["73", "107"], ["76", "73"], ["107", "111"], ["107", "118"], ["124", "122"], ["128", "131"], ["131", "140"], ["131", "168"], ["134", "131"], ["174", "172"], ["30", "28"], ["37", "35"], ["80", "87"], ["95", "101"], ["111", "114"], ["114", "116"], ["116", "183"], ["175", "174"], ["82", "80"], ["86", "93"], ["86", "96"], ["96", "95"], ["101", "107"], ["101", "76"], ["138", "153"], ["138", "158"], ["157", "165"], ["157", "134"], ["87", "90"], ["90", "86"], ["93", "96"], ["139", "138"], ["139", "146"], ["145", "138"], ["151", "158"], ["158", "157"], ["163", "134"], ["140", "143"], ["143", "139"], ["146", "145"], ["153", "151"], ["165", "163"], ["21", "26"], ["116", "183"], ["22", "183"], ["24", "183"], ["27", "183"], ["27", "183"], ["31", "183"], ["34", "183"], ["34", "183"], ["39", "183"], ["44", "183"], ["44", "183"], ["49", "183"], ["51", "183"], ["49", "183"], ["49", "183"], ["55", "183"], ["55", "183"], ["59", "183"], ["59", "183"], ["59", "183"], ["65", "183"], ["70", "183"], ["73", "183"], ["73", "183"], ["73", "183"], ["80", "183"], ["80", "183"], ["80", "183"], ["86", "183"], ["86", "183"], ["93", "183"], ["95", "183"], ["95", "183"], ["95", "183"], ["101", "183"], ["76", "183"], ["107", "183"], ["107", "183"], ["107", "183"], ["111", "183"], ["114", "183"], ["114", "183"], ["59", "183"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["51", "49"], ["57", "55"], ["21", "65"], ["21", "118"], ["124", "122"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "59"], ["55", "59"], ["62", "59"], ["21", "70"], ["21", "128"], ["118", "168"], ["145", "168"], ["151", "168"], ["21", "168"], ["122", "170"], ["157", "170"], ["163", "170"], ["21", "170"], ["34", "172"], ["21", "172"], ["168", "172"], ["170", "172"], ["172", "179"], ["21", "179"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["46", "51"], ["21", "51"], ["39", "51"], ["21", "57"], ["21", "62"], ["70", "73"], ["76", "73"], ["21", "73"], ["51", "73"], ["21", "76"], ["73", "76"], ["49", "80"], ["73", "95"], ["21", "95"], ["65", "107"], ["101", "107"], ["21", "107"], ["44", "107"], ["101", "107"], ["21", "116"], ["21", "124"], ["128", "131"], ["134", "131"], ["21", "131"], ["131", "134"], ["21", "134"], ["168", "174"], ["21", "174"], ["170", "174"], ["34", "111"], ["21", "111"], ["111", "114"], ["21", "114"], ["168", "175"], ["21", "175"], ["59", "86"], ["95", "86"], ["90", "86"], ["65", "101"], ["93", "101"], ["21", "101"], ["44", "101"], ["139", "138"], ["139", "138"], ["145", "138"], ["145", "138"], ["59", "151"], ["139", "151"], ["145", "151"], ["59", "157"], ["139", "157"], ["145", "157"], ["122", "157"], ["163", "157"], ["21", "157"], ["59", "163"], ["157", "163"], ["21", "90"], ["65", "93"], ["101", "93"], ["21", "93"], ["59", "139"], ["157", "139"], ["143", "139"], ["59", "145"], ["139", "145"], ["118", "145"], ["151", "145"], ["21", "145"], ["21", "143"], ["73", "96"], ["73", "95"], ["73", "87"], ["73", "82"], ["73", "101"], ["73", "90"], ["73", "80"], ["73", "86"], ["107", "116"], ["107", "122"], ["107", "128"], ["107", "114"], ["107", "131"], ["107", "179"], ["107", "168"], ["107", "170"], ["107", "118"], ["107", "174"], ["107", "175"], ["107", "124"], ["107", "111"], ["107", "172"], ["131", "131"], ["131", "157"], ["131", "134"], ["131", "138"], ["131", "140"], ["131", "143"], ["131", "139"], ["131", "158"], ["86", "93"], ["101", "73"], ["101", "76"], ["138", "151"], ["138", "153"], ["157", "163"], ["157", "165"], ["139", "145"], ["139", "146"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY p = new Parser(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Parser(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,p,new Parser(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Parser(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int k: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,p,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] a = nextIntArray(n))<SUB>8</SUB>>", "51": "<(nextIntArray,nextIntArray(n))<SUB>8</SUB>>", "53": "<(IDENTIFIER,n,nextIntArray(n))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] pos = new int[100001])<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[100001])>", "59": "<(fill,fill(pos, -1))<SUB>10</SUB>>", "61": "<(IDENTIFIER,pos,fill(pos, -1))<SUB>10</SUB>>", "63": "<(LITERAL,1,-1)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>11</SUB>>", "67": "<(LITERAL,0,int cnt = 0)<SUB>11</SUB>>", "69": "<(LOCAL,int i: int)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,++i)<SUB>12</SUB>>", "79": "<(LOCAL,int e: int)<SUB>13</SUB>>", "81": "<(IDENTIFIER,e,int e = a[i])<SUB>13</SUB>>", "83": "<(IDENTIFIER,a,int e = a[i])<SUB>13</SUB>>", "85": "<(CONTROL_STRUCTURE,if (pos[e] == -1),if (pos[e] == -1))<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,pos[e])<SUB>14</SUB>>", "89": "<(IDENTIFIER,e,pos[e] == -1)<SUB>14</SUB>>", "91": "<(LITERAL,1,-1)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.preIncrement,++cnt)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,pos[e] = i)<SUB>17</SUB>>", "97": "<(IDENTIFIER,pos,pos[e] = i)<SUB>17</SUB>>", "99": "<(IDENTIFIER,i,pos[e] = i)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.equals,cnt == k)<SUB>18</SUB>>", "103": "<(IDENTIFIER,k,cnt == k)<SUB>18</SUB>>", "105": "<(CONTROL_STRUCTURE,break;,break;)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.lessThan,cnt &lt; k)<SUB>22</SUB>>", "109": "<(IDENTIFIER,k,cnt &lt; k)<SUB>22</SUB>>", "111": "<(println,println(&quot;-1 -1&quot;))<SUB>23</SUB>>", "113": "<(LITERAL,&quot;-1 -1&quot;,println(&quot;-1 -1&quot;))<SUB>23</SUB>>", "115": "<(IDENTIFIER,pw,close())<SUB>24</SUB>>", "117": "<(LOCAL,int min: int)<SUB>27</SUB>>", "119": "<(IDENTIFIER,min,int min = 1000000)<SUB>27</SUB>>", "121": "<(LOCAL,int max: int)<SUB>28</SUB>>", "123": "<(IDENTIFIER,max,int max = -1)<SUB>28</SUB>>", "125": "<(LITERAL,1,-1)<SUB>28</SUB>>", "127": "<(LOCAL,int i: int)<SUB>29</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; 100001)<SUB>29</SUB>>", "133": "<(LITERAL,100001,i &lt; 100001)<SUB>29</SUB>>", "135": "<(IDENTIFIER,i,++i)<SUB>29</SUB>>", "137": "<(CONTROL_STRUCTURE,if (pos[i] != -1 &amp;&amp; pos[i] &lt; min),if (pos[i] != -1 &amp;&amp; pos[i] &lt; min))<SUB>30</SUB>>", "139": "<(&lt;operator&gt;.notEquals,pos[i] != -1)<SUB>30</SUB>>", "141": "<(IDENTIFIER,pos,pos[i] != -1)<SUB>30</SUB>>", "143": "<(&lt;operator&gt;.minus,-1)<SUB>30</SUB>>", "145": "<(&lt;operator&gt;.lessThan,pos[i] &lt; min)<SUB>30</SUB>>", "147": "<(IDENTIFIER,pos,pos[i] &lt; min)<SUB>30</SUB>>", "149": "<(IDENTIFIER,min,pos[i] &lt; min)<SUB>30</SUB>>", "151": "<(&lt;operator&gt;.assignment,min = pos[i])<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>31</SUB>>", "155": "<(IDENTIFIER,i,min = pos[i])<SUB>31</SUB>>", "157": "<(&lt;operator&gt;.greaterThan,pos[i] &gt; max)<SUB>33</SUB>>", "159": "<(IDENTIFIER,pos,pos[i] &gt; max)<SUB>33</SUB>>", "161": "<(IDENTIFIER,max,pos[i] &gt; max)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.assignment,max = pos[i])<SUB>34</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>34</SUB>>", "167": "<(IDENTIFIER,i,max = pos[i])<SUB>34</SUB>>", "169": "<(IDENTIFIER,min,++min)<SUB>37</SUB>>", "171": "<(IDENTIFIER,max,++max)<SUB>38</SUB>>", "173": "<(IDENTIFIER,pw,println(min + &quot; &quot; + max))<SUB>40</SUB>>", "175": "<(&lt;operator&gt;.addition,min + &quot; &quot;)<SUB>40</SUB>>", "177": "<(LITERAL,&quot; &quot;,min + &quot; &quot;)<SUB>40</SUB>>", "179": "<(close,close())<SUB>41</SUB>>", "181": "<(MODIFIER,PUBLIC)>", "183": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}