{"edges": [["19", "20"], ["19", "21"], ["19", "102"], ["19", "103"], ["19", "104"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "27"], ["21", "28"], ["21", "33"], ["21", "61"], ["21", "62"], ["21", "63"], ["21", "67"], ["21", "71"], ["21", "92"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["33", "38"], ["33", "45"], ["33", "47"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["41", "42"], ["41", "43"], ["45", "46"], ["47", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "60"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["82", "90"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["96", "101"], ["97", "98"], ["97", "99"], ["22", "25"], ["25", "30"], ["28", "35"], ["63", "69"], ["67", "73"], ["92", "104"], ["24", "22"], ["30", "28"], ["35", "43"], ["38", "52"], ["38", "65"], ["45", "43"], ["65", "63"], ["69", "67"], ["73", "76"], ["76", "84"], ["76", "95"], ["79", "76"], ["93", "97"], ["96", "92"], ["40", "38"], ["48", "45"], ["95", "93"], ["97", "96"], ["41", "40"], ["50", "48"], ["83", "90"], ["83", "79"], ["90", "79"], ["43", "41"], ["51", "50"], ["84", "83"], ["84", "87"], ["87", "83"], ["52", "57"], ["55", "51"], ["57", "55"], ["19", "24"], ["20", "104"], ["22", "104"], ["25", "104"], ["25", "104"], ["28", "104"], ["28", "104"], ["28", "104"], ["35", "104"], ["38", "104"], ["40", "104"], ["38", "104"], ["38", "104"], ["63", "104"], ["69", "104"], ["67", "104"], ["67", "104"], ["73", "104"], ["76", "104"], ["76", "104"], ["76", "104"], ["92", "104"], ["97", "104"], ["96", "104"], ["92", "104"], ["84", "104"], ["83", "104"], ["87", "104"], ["83", "104"], ["90", "104"], ["79", "104"], ["48", "104"], ["51", "104"], ["51", "104"], ["50", "104"], ["48", "104"], ["48", "104"], ["45", "104"], ["30", "104"], ["19", "20"], ["19", "22"], ["30", "28"], ["30", "28"], ["65", "63"], ["69", "67"], ["22", "25"], ["19", "25"], ["19", "35"], ["19", "73"], ["19", "92"], ["19", "30"], ["35", "38"], ["45", "38"], ["19", "38"], ["40", "38"], ["40", "38"], ["19", "45"], ["38", "45"], ["19", "65"], ["65", "69"], ["19", "69"], ["73", "76"], ["79", "76"], ["19", "76"], ["63", "76"], ["84", "79"], ["87", "79"], ["19", "79"], ["19", "96"], ["19", "40"], ["25", "48"], ["19", "48"], ["67", "97"], ["90", "97"], ["19", "97"], ["19", "50"], ["84", "83"], ["84", "83"], ["87", "83"], ["87", "83"], ["67", "90"], ["19", "90"], ["25", "84"], ["48", "84"], ["19", "84"], ["76", "84"], ["28", "87"], ["19", "87"], ["84", "87"], ["38", "57"], ["19", "57"], ["38", "48"], ["38", "51"], ["38", "57"], ["38", "52"], ["38", "38"], ["38", "41"], ["38", "45"], ["38", "40"], ["38", "50"], ["38", "55"], ["38", "43"], ["76", "83"], ["76", "84"], ["76", "76"], ["76", "79"], ["83", "90"], ["84", "87"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY b = new BitSet(1001))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BitSet(1001))<SUB>2</SUB>>", "3": "<(IDENTIFIER,b,new BitSet(1001))<SUB>2</SUB>>", "27": "<(LOCAL,BitSet p: ANY)<SUB>3</SUB>>", "29": "<(IDENTIFIER,p,ANY p = primes(1001))<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,primes(1001))<SUB>3</SUB>>", "33": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; ps.length - 1); i++),for (int i = 0; Some(i &lt; ps.length - 1); i++))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>4</SUB>>", "37": "<(LITERAL,0,int i = 0)<SUB>4</SUB>>", "39": "<(IDENTIFIER,i,i &lt; ps.length - 1)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,ps.length)<SUB>4</SUB>>", "43": "<(FIELD_IDENTIFIER,length,length)<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.postIncrement,i++)<SUB>4</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "49": "<(IDENTIFIER,b,set(ps[i] + ps[i + 1] + 1))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.addition,ps[i] + ps[i + 1])<SUB>5</SUB>>", "53": "<(IDENTIFIER,ps,ps[i] + ps[i + 1])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,ps[i + 1])<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.addition,i + 1)<SUB>5</SUB>>", "59": "<(LITERAL,1,i + 1)<SUB>5</SUB>>", "61": "<(LOCAL,int n: int)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "65": "<(nextInt,nextInt())<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>7</SUB>>", "69": "<(nextInt,nextInt())<SUB>7</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt;= n); x++),for (int x = 0; Some(x &lt;= n); x++))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>8</SUB>>", "75": "<(LITERAL,0,int x = 0)<SUB>8</SUB>>", "77": "<(IDENTIFIER,x,x &lt;= n)<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,x++)<SUB>8</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.logicalAnd,b.get(x) &amp;&amp; p.get(x))<SUB>9</SUB>>", "85": "<(IDENTIFIER,b,get(x))<SUB>9</SUB>>", "87": "<(get,get(x))<SUB>9</SUB>>", "89": "<(IDENTIFIER,x,get(x))<SUB>9</SUB>>", "91": "<(IDENTIFIER,k,k--)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "95": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.greaterThan,k &gt; 0)<SUB>11</SUB>>", "99": "<(LITERAL,0,k &gt; 0)<SUB>11</SUB>>", "101": "<(LITERAL,&quot;YES&quot;,k &gt; 0 ? &quot;NO&quot; : &quot;YES&quot;)<SUB>11</SUB>>", "103": "<(MODIFIER,STATIC)>"}}