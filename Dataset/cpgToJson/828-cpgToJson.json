{"edges": [["21", "22"], ["21", "23"], ["21", "166"], ["21", "167"], ["21", "168"], ["23", "24"], ["24", "25"], ["24", "162"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "48"], ["25", "55"], ["25", "56"], ["25", "63"], ["25", "64"], ["25", "6"], ["25", "69"], ["25", "72"], ["25", "73"], ["25", "93"], ["25", "94"], ["25", "97"], ["25", "145"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "46"], ["44", "45"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "5"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "83"], ["73", "85"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "105"], ["97", "107"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "124"], ["113", "126"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "123"], ["121", "122"], ["124", "125"], ["126", "127"], ["127", "128"], ["127", "141"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "140"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "144"], ["142", "143"], ["145", "146"], ["145", "149"], ["145", "155"], ["146", "147"], ["146", "148"], ["149", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["156", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["163", "164"], ["164", "165"], ["26", "33"], ["29", "44"], ["41", "52"], ["48", "60"], ["56", "66"], ["64", "71"], ["69", "72"], ["72", "75"], ["94", "99"], ["28", "26"], ["43", "41"], ["50", "48"], ["58", "56"], ["66", "64"], ["71", "69"], ["75", "82"], ["78", "87"], ["78", "94"], ["83", "82"], ["99", "102"], ["102", "109"], ["102", "146"], ["105", "102"], ["146", "153"], ["146", "160"], ["164", "168"], ["31", "38"], ["34", "29"], ["44", "43"], ["52", "50"], ["60", "58"], ["80", "78"], ["150", "168"], ["150", "164"], ["33", "31"], ["36", "34"], ["82", "80"], ["87", "90"], ["87", "83"], ["90", "83"], ["109", "115"], ["109", "105"], ["151", "150"], ["157", "168"], ["157", "164"], ["38", "36"], ["153", "151"], ["158", "157"], ["115", "121"], ["118", "132"], ["118", "105"], ["124", "121"], ["160", "158"], ["120", "118"], ["121", "120"], ["128", "142"], ["128", "124"], ["130", "128"], ["142", "105"], ["131", "130"], ["132", "137"], ["135", "131"], ["137", "135"], ["21", "28"], ["22", "168"], ["26", "168"], ["31", "168"], ["34", "168"], ["34", "168"], ["34", "168"], ["29", "168"], ["41", "168"], ["44", "168"], ["43", "168"], ["41", "168"], ["41", "168"], ["50", "168"], ["48", "168"], ["48", "168"], ["58", "168"], ["58", "168"], ["56", "168"], ["56", "168"], ["64", "168"], ["64", "168"], ["64", "168"], ["69", "168"], ["72", "168"], ["72", "168"], ["75", "168"], ["78", "168"], ["78", "168"], ["94", "168"], ["99", "168"], ["102", "168"], ["102", "168"], ["102", "168"], ["146", "168"], ["146", "168"], ["146", "168"], ["150", "168"], ["115", "168"], ["118", "168"], ["121", "168"], ["120", "168"], ["118", "168"], ["118", "168"], ["131", "168"], ["135", "168"], ["137", "168"], ["135", "168"], ["131", "168"], ["130", "168"], ["128", "168"], ["128", "168"], ["124", "168"], ["142", "168"], ["105", "168"], ["90", "168"], ["90", "168"], ["83", "168"], ["66", "168"], ["164", "168"], ["21", "22"], ["21", "26"], ["43", "41"], ["43", "41"], ["50", "48"], ["50", "48"], ["58", "56"], ["58", "56"], ["66", "64"], ["66", "64"], ["21", "69"], ["21", "94"], ["21", "163"], ["26", "29"], ["21", "29"], ["31", "29"], ["34", "29"], ["69", "72"], ["21", "72"], ["21", "75"], ["21", "99"], ["21", "31"], ["21", "39"], ["44", "43"], ["21", "43"], ["21", "50"], ["41", "50"], ["50", "58"], ["21", "58"], ["41", "58"], ["21", "66"], ["48", "66"], ["75", "78"], ["83", "78"], ["21", "78"], ["64", "78"], ["78", "83"], ["90", "83"], ["21", "83"], ["99", "102"], ["105", "102"], ["21", "102"], ["66", "102"], ["102", "105"], ["128", "105"], ["21", "105"], ["94", "146"], ["142", "146"], ["21", "146"], ["56", "146"], ["21", "164"], ["31", "34"], ["21", "34"], ["29", "44"], ["21", "44"], ["21", "150"], ["72", "90"], ["21", "90"], ["78", "90"], ["21", "157"], ["21", "115"], ["115", "118"], ["124", "118"], ["21", "118"], ["120", "118"], ["120", "118"], ["21", "124"], ["132", "124"], ["121", "120"], ["21", "120"], ["72", "121"], ["135", "121"], ["90", "121"], ["21", "121"], ["102", "128"], ["21", "128"], ["132", "128"], ["132", "128"], ["135", "128"], ["135", "128"], ["132", "130"], ["132", "130"], ["135", "130"], ["135", "130"], ["21", "130"], ["94", "142"], ["21", "142"], ["132", "131"], ["132", "131"], ["135", "131"], ["135", "131"], ["121", "132"], ["21", "132"], ["118", "132"], ["132", "135"], ["21", "135"], ["132", "135"], ["132", "137"], ["21", "137"], ["78", "87"], ["78", "82"], ["78", "80"], ["78", "83"], ["78", "78"], ["102", "102"], ["102", "105"], ["102", "109"], ["146", "160"], ["146", "150"], ["146", "151"], ["146", "153"], ["146", "157"], ["146", "158"], ["150", "164"], ["87", "90"], ["109", "115"], ["109", "120"], ["109", "121"], ["109", "118"], ["157", "164"], ["118", "128"], ["118", "131"], ["118", "132"], ["118", "137"], ["118", "130"], ["118", "135"], ["128", "120"], ["128", "142"], ["128", "121"], ["128", "118"], ["128", "124"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(BLOCK,try,try)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,String[] tmp = split(&quot; &quot;))<SUB>4</SUB>>", "43": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "45": "<(IDENTIFIER,reader,readLine())<SUB>4</SUB>>", "47": "<(LOCAL,int n: int)<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,int n = Integer.parseInt(tmp[0]))<SUB>5</SUB>>", "51": "<(IDENTIFIER,Integer,Integer.parseInt(tmp[0]))<SUB>5</SUB>>", "53": "<(IDENTIFIER,tmp,Integer.parseInt(tmp[0]))<SUB>5</SUB>>", "55": "<(LOCAL,int k: int)<SUB>6</SUB>>", "57": "<(IDENTIFIER,k,int k = Integer.parseInt(tmp[1]))<SUB>6</SUB>>", "59": "<(IDENTIFIER,Integer,Integer.parseInt(tmp[1]))<SUB>6</SUB>>", "61": "<(IDENTIFIER,tmp,Integer.parseInt(tmp[1]))<SUB>6</SUB>>", "63": "<(LOCAL,boolean[] m: boolean[])<SUB>7</SUB>>", "65": "<(IDENTIFIER,m,boolean[] m = getPrime(n))<SUB>7</SUB>>", "67": "<(IDENTIFIER,this,getPrime(n))<SUB>7</SUB>>", "6": "<(LOCAL,ArrayList&lt;Integer&gt; prime: ANY)<SUB>8</SUB>>", "70": "<(IDENTIFIER,prime,ANY prime = new ArrayList&lt;Integer&gt;())<SUB>8</SUB>>", "72": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>8</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m.length); i++),for (int i = 0; Some(i &lt; m.length); i++))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "77": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,i &lt; m.length)<SUB>9</SUB>>", "81": "<(IDENTIFIER,m,i &lt; m.length)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,m[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,if (m[i]))<SUB>10</SUB>>", "91": "<(IDENTIFIER,prime,add(i))<SUB>10</SUB>>", "93": "<(LOCAL,int sum: int)<SUB>12</SUB>>", "95": "<(IDENTIFIER,sum,int sum = 0)<SUB>12</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n); i++),for (int i = 2; Some(i &lt;= n); i++))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>13</SUB>>", "101": "<(LITERAL,2,int i = 2)<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,i &lt;= n)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,m[i])<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,if (m[i]))<SUB>14</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; prime.size() - 1); j++),for (int j = 0; Some(j &lt; prime.size() - 1); j++))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "117": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "119": "<(IDENTIFIER,j,j &lt; prime.size() - 1)<SUB>15</SUB>>", "121": "<(size,size())<SUB>15</SUB>>", "123": "<(LITERAL,1,prime.size() - 1)<SUB>15</SUB>>", "125": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "127": "<(CONTROL_STRUCTURE,if (i == prime.get(j) + prime.get(j + 1) + 1),if (i == prime.get(j) + prime.get(j + 1) + 1))<SUB>16</SUB>>", "129": "<(IDENTIFIER,i,i == prime.get(j) + prime.get(j + 1) + 1)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.addition,prime.get(j) + prime.get(j + 1))<SUB>16</SUB>>", "133": "<(IDENTIFIER,prime,get(j))<SUB>16</SUB>>", "135": "<(get,get(j + 1))<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.addition,j + 1)<SUB>16</SUB>>", "139": "<(LITERAL,1,j + 1)<SUB>16</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "143": "<(IDENTIFIER,sum,sum++)<SUB>17</SUB>>", "145": "<(CONTROL_STRUCTURE,if (sum &gt;= k),if (sum &gt;= k))<SUB>23</SUB>>", "147": "<(IDENTIFIER,sum,sum &gt;= k)<SUB>23</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "153": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "155": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "157": "<(println,System.out.println(&quot;NO&quot;))<SUB>26</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>26</SUB>>", "161": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>26</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "165": "<(IDENTIFIER,e,printStackTrace())<SUB>29</SUB>>", "167": "<(MODIFIER,STATIC)>"}}