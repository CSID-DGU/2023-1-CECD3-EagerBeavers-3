{"edges": [["19", "21"], ["19", "121"], ["19", "122"], ["19", "123"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "43"], ["21", "68"], ["21", "69"], ["21", "70"], ["21", "71"], ["21", "74"], ["21", "77"], ["21", "80"], ["21", "116"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "59"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "95"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "100"], ["95", "109"], ["96", "97"], ["96", "98"], ["96", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "41"], ["39", "45"], ["71", "74"], ["74", "77"], ["77", "81"], ["116", "123"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["41", "39"], ["45", "48"], ["48", "57"], ["48", "71"], ["51", "48"], ["81", "91"], ["81", "119"], ["117", "116"], ["28", "26"], ["55", "60"], ["59", "51"], ["86", "96"], ["119", "117"], ["57", "55"], ["60", "64"], ["63", "59"], ["88", "86"], ["96", "101"], ["96", "113"], ["64", "63"], ["90", "88"], ["101", "106"], ["104", "81"], ["91", "90"], ["106", "104"], ["111", "81"], ["113", "111"], ["19", "24"], ["20", "123"], ["22", "123"], ["25", "123"], ["25", "123"], ["31", "123"], ["31", "123"], ["37", "123"], ["35", "123"], ["35", "123"], ["39", "123"], ["39", "123"], ["39", "123"], ["45", "123"], ["48", "123"], ["48", "123"], ["48", "123"], ["71", "123"], ["74", "123"], ["77", "123"], ["81", "123"], ["81", "123"], ["81", "123"], ["116", "123"], ["116", "123"], ["116", "123"], ["90", "123"], ["88", "123"], ["86", "123"], ["86", "123"], ["96", "123"], ["96", "123"], ["113", "123"], ["111", "123"], ["111", "123"], ["101", "123"], ["106", "123"], ["104", "123"], ["104", "123"], ["55", "123"], ["57", "123"], ["55", "123"], ["55", "123"], ["59", "123"], ["59", "123"], ["59", "123"], ["51", "123"], ["96", "123"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["41", "39"], ["19", "71"], ["19", "74"], ["19", "77"], ["22", "25"], ["19", "25"], ["19", "45"], ["77", "116"], ["101", "116"], ["19", "116"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["19", "41"], ["45", "48"], ["51", "48"], ["19", "48"], ["35", "48"], ["48", "51"], ["19", "51"], ["57", "55"], ["39", "59"], ["19", "59"], ["71", "81"], ["104", "81"], ["19", "81"], ["91", "81"], ["74", "81"], ["91", "81"], ["111", "81"], ["91", "86"], ["19", "86"], ["90", "86"], ["90", "86"], ["37", "57"], ["19", "57"], ["39", "63"], ["59", "63"], ["19", "63"], ["91", "88"], ["19", "88"], ["90", "88"], ["90", "88"], ["19", "96"], ["31", "96"], ["86", "96"], ["96", "101"], ["19", "101"], ["19", "104"], ["96", "104"], ["91", "90"], ["91", "90"], ["19", "90"], ["113", "111"], ["113", "111"], ["81", "91"], ["19", "91"], ["81", "91"], ["19", "106"], ["96", "106"], ["96", "113"], ["19", "113"], ["48", "48"], ["48", "60"], ["48", "64"], ["48", "51"], ["48", "57"], ["48", "63"], ["48", "59"], ["48", "55"], ["81", "96"], ["81", "81"], ["81", "88"], ["81", "91"], ["81", "90"], ["81", "86"], ["96", "113"], ["96", "104"], ["96", "106"], ["96", "101"], ["96", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,a = new int[101])<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[101])>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int type = nextInt())<SUB>8</SUB>>", "57": "<(nextInt,nextInt())<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,a[type] = a[type] + 1)<SUB>9</SUB>>", "61": "<(IDENTIFIER,a,a[type] = a[type] + 1)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.addition,a[type] + 1)<SUB>9</SUB>>", "65": "<(IDENTIFIER,a,a[type] + 1)<SUB>9</SUB>>", "67": "<(LITERAL,1,a[type] + 1)<SUB>9</SUB>>", "69": "<(LOCAL,int hi: int)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,int lo = 1)<SUB>12</SUB>>", "73": "<(LITERAL,1,int lo = 1)<SUB>12</SUB>>", "75": "<(IDENTIFIER,hi,int hi = 100)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>12</SUB>>", "79": "<(LITERAL,0,int max = 0)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>14</SUB>>", "83": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>14</SUB>>", "85": "<(LOCAL,int mid: int)<SUB>15</SUB>>", "87": "<(IDENTIFIER,mid,int mid = lo + (hi - lo) / 2)<SUB>15</SUB>>", "89": "<(IDENTIFIER,lo,lo + (hi - lo) / 2)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.subtraction,hi - lo)<SUB>15</SUB>>", "93": "<(IDENTIFIER,lo,hi - lo)<SUB>15</SUB>>", "95": "<(CONTROL_STRUCTURE,if (check(n, mid)),if (check(n, mid)))<SUB>16</SUB>>", "97": "<(IDENTIFIER,this,check(n, mid))<SUB>16</SUB>>", "99": "<(IDENTIFIER,mid,check(n, mid))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.assignment,max = mid)<SUB>17</SUB>>", "103": "<(IDENTIFIER,mid,max = mid)<SUB>17</SUB>>", "105": "<(IDENTIFIER,lo,lo = mid + 1)<SUB>18</SUB>>", "107": "<(IDENTIFIER,mid,mid + 1)<SUB>18</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,hi = mid - 1)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>20</SUB>>", "115": "<(LITERAL,1,mid - 1)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}