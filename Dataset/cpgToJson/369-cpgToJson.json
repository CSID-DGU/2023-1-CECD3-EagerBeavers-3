{"edges": [["23", "24"], ["23", "25"], ["23", "224"], ["23", "225"], ["23", "226"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "53"], ["25", "54"], ["25", "60"], ["25", "61"], ["25", "64"], ["25", "65"], ["25", "71"], ["25", "72"], ["25", "8"], ["25", "75"], ["25", "78"], ["25", "81"], ["25", "119"], ["25", "131"], ["25", "134"], ["25", "135"], ["25", "140"], ["25", "202"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "100"], ["91", "114"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "145"], ["141", "142"], ["141", "144"], ["142", "143"], ["145", "146"], ["145", "147"], ["145", "152"], ["145", "191"], ["145", "194"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "158"], ["152", "174"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "169"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["175", "176"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["196", "199"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "207"], ["202", "213"], ["203", "204"], ["203", "205"], ["205", "206"], ["207", "208"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["214", "215"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["26", "33"], ["29", "42"], ["40", "44"], ["43", "51"], ["47", "58"], ["54", "61"], ["61", "68"], ["65", "72"], ["72", "77"], ["75", "79"], ["78", "83"], ["131", "139"], ["135", "142"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["56", "54"], ["67", "65"], ["77", "75"], ["79", "78"], ["83", "86"], ["86", "93"], ["86", "121"], ["89", "86"], ["120", "128"], ["120", "131"], ["137", "135"], ["141", "149"], ["141", "205"], ["203", "211"], ["203", "218"], ["31", "38"], ["34", "29"], ["51", "49"], ["58", "56"], ["68", "67"], ["92", "102"], ["114", "89"], ["121", "120"], ["126", "131"], ["139", "137"], ["142", "141"], ["147", "154"], ["191", "199"], ["194", "142"], ["205", "203"], ["208", "226"], ["33", "31"], ["36", "34"], ["93", "98"], ["96", "92"], ["101", "110"], ["101", "116"], ["116", "114"], ["128", "126"], ["149", "147"], ["153", "160"], ["153", "177"], ["196", "194"], ["209", "208"], ["215", "226"], ["38", "36"], ["98", "96"], ["102", "101"], ["107", "116"], ["154", "153"], ["159", "191"], ["199", "196"], ["211", "209"], ["216", "221"], ["219", "215"], ["109", "107"], ["160", "166"], ["163", "159"], ["176", "191"], ["218", "216"], ["221", "219"], ["110", "109"], ["164", "171"], ["169", "163"], ["177", "183"], ["180", "176"], ["166", "164"], ["171", "169"], ["181", "188"], ["186", "180"], ["183", "181"], ["188", "186"], ["23", "28"], ["24", "226"], ["26", "226"], ["31", "226"], ["34", "226"], ["34", "226"], ["34", "226"], ["29", "226"], ["40", "226"], ["47", "226"], ["56", "226"], ["58", "226"], ["56", "226"], ["54", "226"], ["54", "226"], ["61", "226"], ["65", "226"], ["67", "226"], ["65", "226"], ["65", "226"], ["72", "226"], ["75", "226"], ["78", "226"], ["79", "226"], ["78", "226"], ["78", "226"], ["83", "226"], ["86", "226"], ["86", "226"], ["120", "226"], ["120", "226"], ["126", "226"], ["126", "226"], ["131", "226"], ["131", "226"], ["131", "226"], ["135", "226"], ["135", "226"], ["142", "226"], ["141", "226"], ["141", "226"], ["203", "226"], ["203", "226"], ["203", "226"], ["208", "226"], ["208", "226"], ["208", "226"], ["147", "226"], ["153", "226"], ["153", "226"], ["180", "226"], ["180", "226"], ["176", "226"], ["176", "226"], ["163", "226"], ["163", "226"], ["159", "226"], ["159", "226"], ["191", "226"], ["191", "226"], ["191", "226"], ["196", "226"], ["194", "226"], ["194", "226"], ["96", "226"], ["98", "226"], ["96", "226"], ["92", "226"], ["92", "226"], ["101", "226"], ["101", "226"], ["107", "226"], ["107", "226"], ["114", "226"], ["114", "226"], ["89", "226"], ["196", "226"], ["23", "24"], ["23", "26"], ["23", "40"], ["49", "47"], ["49", "47"], ["56", "54"], ["56", "54"], ["23", "61"], ["67", "65"], ["23", "72"], ["23", "75"], ["54", "131"], ["128", "131"], ["23", "131"], ["56", "135"], ["96", "135"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "43"], ["75", "78"], ["23", "78"], ["79", "78"], ["23", "83"], ["23", "31"], ["23", "39"], ["29", "44"], ["23", "44"], ["23", "49"], ["51", "49"], ["49", "56"], ["23", "56"], ["58", "56"], ["47", "67"], ["23", "67"], ["44", "79"], ["23", "79"], ["83", "86"], ["89", "86"], ["23", "86"], ["47", "86"], ["102", "89"], ["23", "89"], ["96", "92"], ["96", "92"], ["65", "114"], ["92", "114"], ["109", "114"], ["121", "120"], ["121", "120"], ["23", "120"], ["128", "126"], ["128", "126"], ["142", "141"], ["23", "141"], ["65", "147"], ["196", "147"], ["147", "191"], ["23", "191"], ["196", "194"], ["196", "194"], ["196", "194"], ["135", "203"], ["194", "203"], ["23", "203"], ["205", "203"], ["31", "34"], ["23", "34"], ["43", "51"], ["23", "51"], ["51", "58"], ["23", "58"], ["47", "68"], ["23", "68"], ["86", "121"], ["23", "121"], ["72", "126"], ["107", "126"], ["23", "126"], ["121", "142"], ["23", "142"], ["154", "142"], ["23", "205"], ["72", "208"], ["126", "208"], ["107", "208"], ["23", "208"], ["56", "96"], ["23", "96"], ["98", "96"], ["102", "101"], ["102", "101"], ["23", "101"], ["109", "107"], ["109", "107"], ["54", "128"], ["23", "128"], ["61", "128"], ["114", "128"], ["154", "153"], ["154", "153"], ["23", "153"], ["163", "159"], ["163", "159"], ["23", "196"], ["135", "196"], ["194", "196"], ["65", "196"], ["176", "196"], ["159", "196"], ["219", "215"], ["219", "215"], ["78", "98"], ["23", "98"], ["86", "102"], ["23", "102"], ["72", "107"], ["23", "107"], ["142", "154"], ["23", "154"], ["65", "176"], ["163", "176"], ["186", "176"], ["186", "176"], ["72", "219"], ["126", "219"], ["107", "219"], ["23", "219"], ["203", "219"], ["65", "109"], ["92", "109"], ["61", "109"], ["114", "109"], ["23", "109"], ["65", "163"], ["169", "163"], ["169", "163"], ["203", "221"], ["23", "221"], ["131", "169"], ["191", "169"], ["23", "169"], ["65", "169"], ["196", "169"], ["65", "180"], ["163", "180"], ["186", "180"], ["186", "180"], ["154", "166"], ["23", "166"], ["131", "186"], ["191", "186"], ["23", "186"], ["65", "186"], ["196", "186"], ["154", "183"], ["23", "183"], ["86", "96"], ["86", "98"], ["86", "102"], ["86", "114"], ["86", "92"], ["86", "93"], ["86", "101"], ["86", "86"], ["86", "89"], ["86", "116"], ["120", "128"], ["120", "126"], ["141", "154"], ["141", "196"], ["141", "149"], ["141", "153"], ["141", "191"], ["141", "194"], ["141", "141"], ["141", "142"], ["141", "199"], ["141", "147"], ["203", "215"], ["203", "209"], ["203", "208"], ["203", "221"], ["203", "211"], ["203", "216"], ["203", "218"], ["203", "219"], ["101", "107"], ["101", "110"], ["101", "109"], ["153", "188"], ["153", "169"], ["153", "163"], ["153", "181"], ["153", "164"], ["153", "186"], ["153", "180"], ["153", "171"], ["153", "160"], ["153", "183"], ["153", "166"], ["153", "159"], ["153", "176"], ["153", "177"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "45": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>5</SUB>>", "49": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "51": "<(nextToken,nextToken())<SUB>5</SUB>>", "53": "<(LOCAL,int m: int)<SUB>6</SUB>>", "55": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>6</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int previous = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int previous = 0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int[] array = new int[n + 1])<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "69": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "71": "<(LOCAL,int answer: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,answer,int answer = 0)<SUB>9</SUB>>", "8": "<(LOCAL,StringTokenizer st1: ANY)<SUB>11</SUB>>", "76": "<(IDENTIFIER,st1,ANY st1 = new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "79": "<(readLine,readLine())<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,array[i] = parseInt(st1.nextToken()))<SUB>13</SUB>>", "97": "<(IDENTIFIER,Integer,parseInt(st1.nextToken()))<SUB>13</SUB>>", "99": "<(IDENTIFIER,st1,nextToken())<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.equals,i % 2 == 0)<SUB>14</SUB>>", "103": "<(IDENTIFIER,i,i % 2)<SUB>14</SUB>>", "105": "<(LITERAL,0,i % 2 == 0)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignmentPlus,answer += array[i] - previous)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.subtraction,array[i] - previous)<SUB>15</SUB>>", "111": "<(IDENTIFIER,array,array[i] - previous)<SUB>15</SUB>>", "113": "<(IDENTIFIER,previous,array[i] - previous)<SUB>15</SUB>>", "115": "<(IDENTIFIER,previous,previous = array[i])<SUB>17</SUB>>", "117": "<(IDENTIFIER,array,previous = array[i])<SUB>17</SUB>>", "119": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.modulo,n % 2)<SUB>20</SUB>>", "123": "<(LITERAL,2,n % 2)<SUB>20</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "127": "<(IDENTIFIER,answer,answer += m - previous)<SUB>21</SUB>>", "129": "<(IDENTIFIER,m,m - previous)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.assignment,previous = m)<SUB>23</SUB>>", "133": "<(IDENTIFIER,m,previous = m)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.assignment,int max = Integer.MAX_VALUE)<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>24</SUB>>", "139": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.notEquals,n-- != 0)<SUB>26</SUB>>", "143": "<(IDENTIFIER,n,n--)<SUB>26</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.assignment,int temp = array[n])<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,array[n])<SUB>27</SUB>>", "151": "<(IDENTIFIER,n,int temp = array[n])<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>28</SUB>>", "155": "<(IDENTIFIER,n,n % 2)<SUB>28</SUB>>", "157": "<(LITERAL,0,n % 2 == 0)<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.assignment,array[n] = array[n + 1] - (previous - array[n]))<SUB>29</SUB>>", "161": "<(IDENTIFIER,array,array[n] = array[n + 1] - (previous - array[n]))<SUB>29</SUB>>", "163": "<(&lt;operator&gt;.subtraction,array[n + 1] - (previous - array[n]))<SUB>29</SUB>>", "165": "<(IDENTIFIER,array,array[n + 1] - (previous - array[n]))<SUB>29</SUB>>", "167": "<(IDENTIFIER,n,n + 1)<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.subtraction,previous - array[n])<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,array[n])<SUB>29</SUB>>", "173": "<(IDENTIFIER,n,previous - array[n])<SUB>29</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,array[n])<SUB>32</SUB>>", "179": "<(IDENTIFIER,n,array[n] = array[n + 1] + (previous - array[n]))<SUB>32</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,array[n + 1])<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.addition,n + 1)<SUB>32</SUB>>", "185": "<(LITERAL,1,n + 1)<SUB>32</SUB>>", "187": "<(IDENTIFIER,previous,previous - array[n])<SUB>32</SUB>>", "189": "<(IDENTIFIER,array,previous - array[n])<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.assignment,previous = temp)<SUB>34</SUB>>", "193": "<(IDENTIFIER,temp,previous = temp)<SUB>34</SUB>>", "195": "<(IDENTIFIER,max,max = Math.min(max, array[n]))<SUB>35</SUB>>", "197": "<(IDENTIFIER,Math,Math.min(max, array[n]))<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,array[n])<SUB>35</SUB>>", "201": "<(IDENTIFIER,n,Math.min(max, array[n]))<SUB>35</SUB>>", "203": "<(&lt;operator&gt;.greaterEqualsThan,max &gt;= -1)<SUB>37</SUB>>", "205": "<(&lt;operator&gt;.minus,-1)<SUB>37</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "211": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "213": "<(CONTROL_STRUCTURE,else,else)<SUB>40</SUB>>", "215": "<(println,System.out.println(answer - (max + 1)))<SUB>41</SUB>>", "217": "<(IDENTIFIER,System,System.out.println(answer - (max + 1)))<SUB>41</SUB>>", "219": "<(&lt;operator&gt;.subtraction,answer - (max + 1))<SUB>41</SUB>>", "221": "<(&lt;operator&gt;.addition,max + 1)<SUB>41</SUB>>", "223": "<(LITERAL,1,max + 1)<SUB>41</SUB>>", "225": "<(MODIFIER,STATIC)>"}}