{"edges": [["23", "24"], ["23", "25"], ["23", "184"], ["23", "185"], ["23", "186"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "62"], ["25", "63"], ["25", "70"], ["25", "71"], ["25", "75"], ["25", "76"], ["25", "82"], ["25", "102"], ["25", "140"], ["25", "8"], ["25", "143"], ["25", "146"], ["25", "147"], ["25", "148"], ["25", "151"], ["25", "179"], ["25", "182"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "122"], ["112", "123"], ["112", "128"], ["112", "135"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "121"], ["119", "120"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "7"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "159"], ["151", "161"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["162", "163"], ["162", "169"], ["163", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "172"], ["170", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["182", "183"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "51"], ["48", "59"], ["55", "67"], ["63", "73"], ["71", "79"], ["76", "84"], ["140", "145"], ["143", "146"], ["146", "148"], ["148", "153"], ["179", "182"], ["182", "186"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["65", "63"], ["73", "71"], ["78", "76"], ["84", "87"], ["87", "94"], ["87", "104"], ["90", "87"], ["104", "107"], ["107", "117"], ["107", "140"], ["110", "107"], ["145", "143"], ["153", "156"], ["156", "166"], ["156", "179"], ["159", "156"], ["31", "38"], ["34", "29"], ["46", "44"], ["51", "50"], ["59", "57"], ["67", "65"], ["79", "78"], ["93", "90"], ["114", "125"], ["123", "129"], ["128", "136"], ["135", "110"], ["33", "31"], ["36", "34"], ["94", "99"], ["97", "93"], ["116", "114"], ["125", "123"], ["129", "132"], ["132", "128"], ["136", "135"], ["163", "170"], ["163", "159"], ["38", "36"], ["99", "97"], ["117", "119"], ["118", "116"], ["164", "163"], ["170", "175"], ["172", "159"], ["119", "118"], ["166", "164"], ["174", "172"], ["175", "174"], ["23", "28"], ["24", "186"], ["26", "186"], ["31", "186"], ["34", "186"], ["34", "186"], ["34", "186"], ["29", "186"], ["40", "186"], ["43", "186"], ["43", "186"], ["48", "186"], ["48", "186"], ["57", "186"], ["55", "186"], ["55", "186"], ["63", "186"], ["65", "186"], ["65", "186"], ["63", "186"], ["63", "186"], ["71", "186"], ["71", "186"], ["76", "186"], ["79", "186"], ["78", "186"], ["76", "186"], ["76", "186"], ["140", "186"], ["140", "186"], ["143", "186"], ["146", "186"], ["146", "186"], ["148", "186"], ["153", "186"], ["156", "186"], ["156", "186"], ["156", "186"], ["179", "186"], ["179", "186"], ["182", "186"], ["182", "186"], ["164", "186"], ["164", "186"], ["163", "186"], ["163", "186"], ["170", "186"], ["172", "186"], ["174", "186"], ["174", "186"], ["172", "186"], ["172", "186"], ["159", "186"], ["114", "186"], ["118", "186"], ["116", "186"], ["114", "186"], ["114", "186"], ["123", "186"], ["128", "186"], ["128", "186"], ["135", "186"], ["135", "186"], ["135", "186"], ["110", "186"], ["93", "186"], ["97", "186"], ["97", "186"], ["93", "186"], ["93", "186"], ["90", "186"], ["140", "186"], ["119", "186"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["65", "63"], ["65", "63"], ["73", "71"], ["78", "76"], ["78", "76"], ["23", "143"], ["23", "148"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["23", "84"], ["23", "104"], ["23", "140"], ["71", "140"], ["128", "140"], ["135", "140"], ["93", "140"], ["143", "146"], ["23", "146"], ["23", "153"], ["43", "179"], ["23", "179"], ["148", "179"], ["170", "179"], ["179", "182"], ["23", "182"], ["23", "31"], ["23", "39"], ["51", "50"], ["23", "50"], ["23", "57"], ["48", "57"], ["57", "65"], ["23", "65"], ["48", "65"], ["55", "73"], ["23", "73"], ["79", "78"], ["23", "78"], ["84", "87"], ["90", "87"], ["23", "87"], ["73", "87"], ["87", "90"], ["23", "90"], ["97", "93"], ["97", "93"], ["104", "107"], ["110", "107"], ["23", "107"], ["87", "107"], ["118", "107"], ["107", "110"], ["23", "110"], ["23", "114"], ["118", "114"], ["118", "114"], ["71", "123"], ["128", "123"], ["71", "128"], ["135", "128"], ["93", "128"], ["123", "135"], ["23", "135"], ["153", "156"], ["159", "156"], ["23", "156"], ["107", "156"], ["156", "159"], ["23", "159"], ["31", "34"], ["23", "34"], ["29", "51"], ["23", "51"], ["51", "79"], ["23", "79"], ["65", "97"], ["23", "97"], ["76", "97"], ["23", "116"], ["118", "116"], ["118", "116"], ["164", "163"], ["164", "163"], ["119", "118"], ["107", "118"], ["23", "118"], ["146", "164"], ["172", "164"], ["23", "164"], ["140", "164"], ["174", "164"], ["135", "164"], ["93", "164"], ["148", "170"], ["23", "170"], ["164", "172"], ["23", "172"], ["174", "172"], ["174", "172"], ["23", "119"], ["140", "174"], ["164", "174"], ["63", "174"], ["23", "174"], ["87", "94"], ["87", "99"], ["87", "87"], ["87", "97"], ["87", "93"], ["87", "90"], ["107", "107"], ["107", "136"], ["107", "116"], ["107", "128"], ["107", "114"], ["107", "132"], ["107", "119"], ["107", "123"], ["107", "129"], ["107", "118"], ["107", "135"], ["107", "110"], ["107", "117"], ["107", "125"], ["156", "163"], ["156", "166"], ["156", "159"], ["156", "164"], ["156", "156"], ["163", "170"], ["163", "174"], ["163", "175"], ["163", "172"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(LOCAL,String[] data: java.lang.String[])<SUB>5</SUB>>", "49": "<(IDENTIFIER,data,String[] data = split(&quot; &quot;))<SUB>5</SUB>>", "51": "<(readLine,readLine())<SUB>5</SUB>>", "53": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int n = Integer.valueOf(data[0]))<SUB>6</SUB>>", "57": "<(valueOf,Integer.valueOf(data[0]))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,data[0])<SUB>6</SUB>>", "61": "<(LITERAL,0,Integer.valueOf(data[0]))<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int k = Integer.valueOf(data[1]))<SUB>7</SUB>>", "65": "<(valueOf,Integer.valueOf(data[1]))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,data[1])<SUB>7</SUB>>", "69": "<(LITERAL,1,Integer.valueOf(data[1]))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,long[] a = new long[n])<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.alloc,new long[n])>", "75": "<(LOCAL,String[] ai: java.lang.String[])<SUB>11</SUB>>", "77": "<(IDENTIFIER,ai,String[] ai = split(&quot; &quot;))<SUB>11</SUB>>", "79": "<(readLine,readLine())<SUB>11</SUB>>", "81": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>11</SUB>>", "83": "<(LOCAL,int i: int)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,a[i] = Integer.valueOf(ai[i]))<SUB>13</SUB>>", "95": "<(IDENTIFIER,a,a[i] = Integer.valueOf(ai[i]))<SUB>13</SUB>>", "97": "<(valueOf,Integer.valueOf(ai[i]))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,ai[i])<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,Integer.valueOf(ai[i]))<SUB>13</SUB>>", "103": "<(LOCAL,int i: int)<SUB>15</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "113": "<(LOCAL,int tm: int)<SUB>16</SUB>>", "115": "<(IDENTIFIER,tm,int tm = (int) (Math.random() * n))<SUB>16</SUB>>", "117": "<(TYPE_REF,int,int)<SUB>16</SUB>>", "119": "<(random,Math.random())<SUB>16</SUB>>", "121": "<(IDENTIFIER,n,Math.random() * n)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,long tmp = a[tm])<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,a[tm])<SUB>17</SUB>>", "127": "<(IDENTIFIER,tm,long tmp = a[tm])<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,a[tm])<SUB>18</SUB>>", "131": "<(IDENTIFIER,tm,a[tm] = a[i])<SUB>18</SUB>>", "133": "<(IDENTIFIER,a,a[tm] = a[i])<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,a[i] = tmp)<SUB>19</SUB>>", "137": "<(IDENTIFIER,a,a[i] = tmp)<SUB>19</SUB>>", "139": "<(IDENTIFIER,tmp,a[i] = tmp)<SUB>19</SUB>>", "141": "<(IDENTIFIER,Arrays,sort(a))<SUB>21</SUB>>", "8": "<(LOCAL,Set&lt;Long&gt; invalid: ANY)<SUB>23</SUB>>", "144": "<(IDENTIFIER,invalid,ANY invalid = new HashSet&lt;Long&gt;())<SUB>23</SUB>>", "146": "<(&lt;init&gt;,new HashSet&lt;Long&gt;())<SUB>23</SUB>>", "147": "<(LOCAL,int cnt: int)<SUB>24</SUB>>", "149": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>24</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "155": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "157": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.logicalNot,!invalid.contains(a[i]))<SUB>26</SUB>>", "165": "<(IDENTIFIER,invalid,contains(a[i]))<SUB>26</SUB>>", "167": "<(IDENTIFIER,a,contains(a[i]))<SUB>26</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "171": "<(IDENTIFIER,cnt,cnt++)<SUB>27</SUB>>", "173": "<(IDENTIFIER,invalid,add(a[i] * k))<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>28</SUB>>", "177": "<(IDENTIFIER,i,a[i] * k)<SUB>28</SUB>>", "179": "<(println,println(cnt))<SUB>31</SUB>>", "181": "<(IDENTIFIER,cnt,println(cnt))<SUB>31</SUB>>", "183": "<(IDENTIFIER,out,flush())<SUB>32</SUB>>", "185": "<(MODIFIER,STATIC)>"}}