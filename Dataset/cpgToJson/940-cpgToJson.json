{"edges": [["19", "20"], ["19", "21"], ["19", "68"], ["19", "69"], ["19", "70"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "61"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "60"], ["45", "46"], ["45", "59"], ["46", "47"], ["46", "52"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "43"], ["40", "64"], ["61", "70"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["62", "65"], ["65", "61"], ["28", "26"], ["43", "50"], ["44", "42"], ["64", "62"], ["45", "44"], ["46", "45"], ["47", "56"], ["52", "46"], ["48", "51"], ["51", "47"], ["54", "52"], ["50", "48"], ["56", "54"], ["19", "24"], ["20", "70"], ["22", "70"], ["25", "70"], ["25", "70"], ["30", "70"], ["37", "70"], ["35", "70"], ["35", "70"], ["46", "70"], ["56", "70"], ["54", "70"], ["52", "70"], ["46", "70"], ["45", "70"], ["44", "70"], ["42", "70"], ["40", "70"], ["40", "70"], ["61", "70"], ["65", "70"], ["65", "70"], ["61", "70"], ["61", "70"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "40"], ["44", "40"], ["44", "40"], ["22", "25"], ["19", "25"], ["65", "61"], ["65", "61"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["19", "42"], ["44", "42"], ["44", "42"], ["19", "65"], ["30", "65"], ["40", "65"], ["45", "44"], ["45", "44"], ["19", "44"], ["46", "45"], ["46", "45"], ["19", "45"], ["19", "46"], ["54", "46"], ["54", "46"], ["19", "52"], ["54", "52"], ["54", "52"], ["19", "54"], ["30", "54"], ["35", "54"], ["30", "56"], ["19", "56"], ["35", "56"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long n: long)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(LOCAL,long ans: long)<SUB>7</SUB>>", "41": "<(IDENTIFIER,ans,long ans = (long) ((java.lang.Math.sqrt((9 + (8 * (n + k)))) - 3) / 2))<SUB>7</SUB>>", "43": "<(TYPE_REF,long,long)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.subtraction,java.lang.Math.sqrt((9 + (8 * (n + k)))) - 3)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,java.lang.Math)<SUB>7</SUB>>", "49": "<(IDENTIFIER,java,java.lang.Math.sqrt((9 + (8 * (n + k)))))<SUB>7</SUB>>", "51": "<(FIELD_IDENTIFIER,Math,Math)<SUB>7</SUB>>", "53": "<(LITERAL,9,9 + (8 * (n + k)))<SUB>7</SUB>>", "55": "<(LITERAL,8,8 * (n + k))<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,n + k)<SUB>7</SUB>>", "59": "<(LITERAL,3,java.lang.Math.sqrt((9 + (8 * (n + k)))) - 3)<SUB>7</SUB>>", "61": "<(println,System.out.println(n - ans))<SUB>8</SUB>>", "63": "<(IDENTIFIER,System,System.out.println(n - ans))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.subtraction,n - ans)<SUB>8</SUB>>", "67": "<(IDENTIFIER,ans,n - ans)<SUB>8</SUB>>", "69": "<(MODIFIER,STATIC)>"}}