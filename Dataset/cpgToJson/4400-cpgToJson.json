{"edges": [["24", "26"], ["24", "351"], ["24", "352"], ["24", "353"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "8"], ["26", "47"], ["26", "50"], ["26", "54"], ["26", "60"], ["26", "66"], ["26", "67"], ["26", "72"], ["26", "80"], ["26", "85"], ["26", "90"], ["26", "128"], ["26", "155"], ["26", "186"], ["26", "245"], ["26", "308"], ["26", "309"], ["26", "312"], ["26", "335"], ["26", "346"], ["26", "349"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["50", "7"], ["50", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["74", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "104"], ["100", "107"], ["101", "102"], ["101", "103"], ["104", "9"], ["104", "105"], ["105", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "147"], ["139", "140"], ["139", "141"], ["139", "144"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["177", "178"], ["177", "179"], ["177", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["197", "202"], ["197", "205"], ["197", "207"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["225", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "253"], ["245", "255"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["255", "256"], ["256", "257"], ["256", "258"], ["256", "261"], ["256", "264"], ["256", "266"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "265"], ["266", "267"], ["267", "268"], ["267", "269"], ["267", "272"], ["267", "277"], ["267", "279"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["277", "278"], ["279", "280"], ["280", "281"], ["280", "286"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "288"], ["286", "293"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "305"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["312", "317"], ["312", "320"], ["312", "322"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["320", "321"], ["322", "323"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "327"], ["325", "328"], ["328", "329"], ["328", "330"], ["328", "333"], ["328", "334"], ["330", "331"], ["330", "332"], ["335", "336"], ["335", "339"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "341"], ["341", "342"], ["341", "345"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "348"], ["349", "350"], ["27", "34"], ["30", "43"], ["41", "45"], ["44", "49"], ["47", "53"], ["50", "58"], ["54", "64"], ["60", "69"], ["67", "77"], ["72", "82"], ["80", "87"], ["85", "92"], ["309", "314"], ["346", "349"], ["349", "353"], ["29", "27"], ["43", "41"], ["45", "44"], ["49", "47"], ["51", "50"], ["56", "54"], ["62", "60"], ["69", "67"], ["74", "72"], ["82", "80"], ["87", "85"], ["92", "95"], ["95", "103"], ["95", "130"], ["98", "95"], ["130", "133"], ["133", "141"], ["133", "157"], ["136", "133"], ["157", "160"], ["160", "168"], ["160", "188"], ["163", "160"], ["188", "191"], ["191", "199"], ["191", "247"], ["194", "191"], ["247", "250"], ["250", "258"], ["250", "309"], ["253", "250"], ["314", "317"], ["317", "330"], ["317", "336"], ["320", "317"], ["336", "342"], ["336", "346"], ["339", "346"], ["32", "39"], ["35", "30"], ["53", "51"], ["58", "56"], ["64", "62"], ["77", "74"], ["101", "105"], ["104", "109"], ["139", "149"], ["147", "136"], ["323", "320"], ["341", "339"], ["34", "32"], ["37", "35"], ["103", "101"], ["105", "104"], ["109", "112"], ["112", "120"], ["112", "98"], ["115", "112"], ["141", "145"], ["144", "139"], ["149", "153"], ["152", "147"], ["168", "171"], ["171", "180"], ["171", "163"], ["174", "171"], ["199", "202"], ["202", "210"], ["202", "194"], ["205", "202"], ["258", "261"], ["261", "269"], ["261", "253"], ["264", "261"], ["325", "323"], ["342", "341"], ["39", "37"], ["118", "115"], ["145", "144"], ["153", "152"], ["177", "174"], ["328", "325"], ["119", "126"], ["124", "118"], ["179", "184"], ["184", "177"], ["210", "213"], ["213", "221"], ["213", "205"], ["216", "213"], ["269", "274"], ["272", "282"], ["272", "264"], ["277", "274"], ["330", "328"], ["120", "119"], ["126", "124"], ["180", "179"], ["219", "216"], ["274", "272"], ["280", "277"], ["220", "228"], ["225", "219"], ["281", "289"], ["286", "280"], ["221", "220"], ["227", "236"], ["232", "225"], ["282", "281"], ["288", "297"], ["293", "286"], ["228", "227"], ["234", "232"], ["289", "288"], ["295", "293"], ["235", "241"], ["240", "234"], ["296", "302"], ["301", "295"], ["236", "235"], ["241", "240"], ["297", "296"], ["302", "305"], ["305", "301"], ["24", "29"], ["25", "353"], ["27", "353"], ["32", "353"], ["35", "353"], ["35", "353"], ["35", "353"], ["30", "353"], ["41", "353"], ["45", "353"], ["44", "353"], ["44", "353"], ["47", "353"], ["50", "353"], ["50", "353"], ["54", "353"], ["62", "353"], ["64", "353"], ["62", "353"], ["60", "353"], ["60", "353"], ["67", "353"], ["69", "353"], ["67", "353"], ["67", "353"], ["72", "353"], ["74", "353"], ["72", "353"], ["72", "353"], ["80", "353"], ["80", "353"], ["85", "353"], ["85", "353"], ["85", "353"], ["309", "353"], ["314", "353"], ["317", "353"], ["317", "353"], ["336", "353"], ["336", "353"], ["339", "353"], ["339", "353"], ["346", "353"], ["346", "353"], ["349", "353"], ["349", "353"], ["325", "353"], ["328", "353"], ["325", "353"], ["323", "353"], ["323", "353"], ["320", "353"], ["258", "353"], ["261", "353"], ["261", "353"], ["253", "353"], ["269", "353"], ["272", "353"], ["274", "353"], ["272", "353"], ["272", "353"], ["264", "353"], ["280", "353"], ["286", "353"], ["295", "353"], ["295", "353"], ["293", "353"], ["286", "353"], ["280", "353"], ["280", "353"], ["277", "353"], ["199", "353"], ["202", "353"], ["202", "353"], ["194", "353"], ["210", "353"], ["213", "353"], ["213", "353"], ["213", "353"], ["205", "353"], ["219", "353"], ["225", "353"], ["234", "353"], ["234", "353"], ["232", "353"], ["225", "353"], ["219", "353"], ["219", "353"], ["216", "353"], ["168", "353"], ["171", "353"], ["171", "353"], ["163", "353"], ["177", "353"], ["177", "353"], ["177", "353"], ["177", "353"], ["174", "353"], ["139", "353"], ["139", "353"], ["147", "353"], ["147", "353"], ["147", "353"], ["147", "353"], ["136", "353"], ["101", "353"], ["104", "353"], ["105", "353"], ["104", "353"], ["104", "353"], ["109", "353"], ["112", "353"], ["112", "353"], ["112", "353"], ["98", "353"], ["118", "353"], ["124", "353"], ["126", "353"], ["124", "353"], ["118", "353"], ["118", "353"], ["115", "353"], ["328", "353"], ["24", "25"], ["24", "27"], ["24", "41"], ["24", "47"], ["56", "54"], ["56", "54"], ["62", "60"], ["62", "60"], ["69", "67"], ["69", "67"], ["74", "72"], ["74", "72"], ["82", "80"], ["87", "85"], ["24", "309"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["45", "44"], ["47", "50"], ["24", "50"], ["24", "92"], ["24", "130"], ["24", "157"], ["24", "188"], ["24", "247"], ["24", "314"], ["50", "346"], ["24", "346"], ["309", "346"], ["339", "346"], ["323", "346"], ["346", "349"], ["24", "349"], ["24", "32"], ["24", "40"], ["30", "45"], ["24", "45"], ["24", "56"], ["58", "56"], ["56", "62"], ["24", "62"], ["64", "62"], ["54", "69"], ["24", "69"], ["60", "69"], ["77", "74"], ["24", "74"], ["77", "74"], ["74", "82"], ["24", "82"], ["82", "87"], ["24", "87"], ["92", "95"], ["98", "95"], ["24", "95"], ["87", "95"], ["95", "98"], ["24", "98"], ["24", "101"], ["130", "133"], ["136", "133"], ["24", "133"], ["95", "133"], ["133", "136"], ["24", "136"], ["157", "160"], ["163", "160"], ["24", "160"], ["133", "160"], ["171", "160"], ["160", "163"], ["24", "163"], ["188", "191"], ["194", "191"], ["24", "191"], ["160", "191"], ["202", "191"], ["191", "194"], ["24", "194"], ["247", "250"], ["253", "250"], ["24", "250"], ["191", "250"], ["261", "250"], ["250", "253"], ["24", "253"], ["314", "317"], ["320", "317"], ["24", "317"], ["250", "317"], ["328", "320"], ["24", "320"], ["325", "323"], ["325", "323"], ["325", "323"], ["317", "336"], ["24", "336"], ["32", "35"], ["24", "35"], ["44", "58"], ["24", "58"], ["58", "64"], ["24", "64"], ["24", "77"], ["69", "77"], ["101", "104"], ["24", "104"], ["105", "104"], ["24", "109"], ["147", "139"], ["24", "139"], ["80", "139"], ["139", "147"], ["24", "147"], ["85", "147"], ["24", "168"], ["24", "199"], ["24", "258"], ["45", "105"], ["24", "105"], ["109", "112"], ["115", "112"], ["24", "112"], ["69", "112"], ["112", "115"], ["24", "115"], ["124", "118"], ["124", "118"], ["24", "144"], ["24", "152"], ["168", "171"], ["174", "171"], ["24", "171"], ["160", "171"], ["171", "174"], ["24", "174"], ["199", "202"], ["205", "202"], ["24", "202"], ["191", "202"], ["202", "205"], ["24", "205"], ["258", "261"], ["264", "261"], ["24", "261"], ["250", "261"], ["261", "264"], ["24", "264"], ["286", "325"], ["225", "325"], ["24", "325"], ["309", "325"], ["323", "325"], ["328", "325"], ["328", "325"], ["328", "325"], ["147", "177"], ["24", "177"], ["184", "177"], ["24", "210"], ["24", "269"], ["24", "328"], ["330", "328"], ["330", "328"], ["62", "124"], ["24", "124"], ["126", "124"], ["24", "184"], ["210", "213"], ["216", "213"], ["24", "213"], ["69", "213"], ["112", "213"], ["213", "216"], ["24", "216"], ["225", "219"], ["225", "219"], ["225", "219"], ["269", "272"], ["277", "272"], ["24", "272"], ["274", "272"], ["274", "272"], ["24", "277"], ["272", "277"], ["286", "280"], ["286", "280"], ["286", "280"], ["24", "330"], ["317", "330"], ["104", "126"], ["24", "126"], ["69", "274"], ["213", "274"], ["112", "274"], ["24", "274"], ["232", "225"], ["24", "225"], ["219", "225"], ["232", "225"], ["293", "286"], ["24", "286"], ["280", "286"], ["293", "286"], ["225", "232"], ["24", "232"], ["234", "232"], ["234", "232"], ["286", "293"], ["225", "293"], ["24", "293"], ["295", "293"], ["295", "293"], ["234", "295"], ["272", "305"], ["24", "305"], ["95", "104"], ["95", "95"], ["95", "112"], ["95", "109"], ["95", "98"], ["95", "103"], ["95", "101"], ["95", "105"], ["133", "136"], ["133", "152"], ["133", "141"], ["133", "147"], ["133", "133"], ["133", "145"], ["133", "149"], ["133", "153"], ["133", "144"], ["133", "139"], ["160", "163"], ["160", "168"], ["160", "160"], ["160", "171"], ["191", "194"], ["191", "202"], ["191", "199"], ["191", "191"], ["250", "258"], ["250", "253"], ["250", "261"], ["250", "250"], ["317", "317"], ["317", "328"], ["317", "323"], ["317", "320"], ["317", "325"], ["317", "330"], ["336", "342"], ["336", "341"], ["336", "339"], ["112", "120"], ["112", "112"], ["112", "118"], ["112", "115"], ["112", "119"], ["112", "126"], ["112", "124"], ["171", "184"], ["171", "174"], ["171", "180"], ["171", "177"], ["171", "179"], ["171", "171"], ["202", "213"], ["202", "202"], ["202", "205"], ["202", "210"], ["261", "272"], ["261", "264"], ["261", "274"], ["261", "269"], ["261", "261"], ["213", "240"], ["213", "213"], ["213", "228"], ["213", "236"], ["213", "241"], ["213", "216"], ["213", "227"], ["213", "225"], ["213", "232"], ["213", "221"], ["213", "235"], ["213", "220"], ["213", "234"], ["213", "219"], ["272", "272"], ["272", "302"], ["272", "281"], ["272", "288"], ["272", "296"], ["272", "274"], ["272", "305"], ["272", "297"], ["272", "282"], ["272", "301"], ["272", "289"], ["272", "293"], ["272", "280"], ["272", "286"], ["272", "295"], ["272", "277"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "46": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "7": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "52": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "54": "<(&lt;operator&gt;.assignment,r = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(nextToken,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,c = parseInt(st.nextToken()))<SUB>7</SUB>>", "62": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "64": "<(nextToken,nextToken())<SUB>7</SUB>>", "66": "<(LOCAL,int[][] arr: int[][])<SUB>8</SUB>>", "68": "<(IDENTIFIER,arr,int[][] arr = new int[r][c])<SUB>8</SUB>>", "70": "<(IDENTIFIER,r,new int[r][c])<SUB>8</SUB>>", "72": "<(&lt;operator&gt;.assignment,memo = new int[r][r][1 &lt;&lt; r])<SUB>9</SUB>>", "74": "<(&lt;operator&gt;.alloc,new int[r][r][1 &lt;&lt; r])>", "76": "<(IDENTIFIER,r,new int[r][r][1 &lt;&lt; r])<SUB>9</SUB>>", "78": "<(LITERAL,1,1 &lt;&lt; r)<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.assignment,mn1 = new int[r][r])<SUB>10</SUB>>", "82": "<(&lt;operator&gt;.alloc,new int[r][r])>", "84": "<(IDENTIFIER,r,new int[r][r])<SUB>10</SUB>>", "86": "<(IDENTIFIER,mn2,mn2 = new int[r][r])<SUB>11</SUB>>", "88": "<(IDENTIFIER,r,new int[r][r])<SUB>11</SUB>>", "90": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>12</SUB>>", "92": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "94": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "96": "<(IDENTIFIER,i,i &lt; r)<SUB>12</SUB>>", "98": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "100": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "102": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>13</SUB>>", "104": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>13</SUB>>", "105": "<(readLine,readLine())<SUB>13</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; c); j++),for (int j = 0; Some(j &lt; c); j++))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "111": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "113": "<(IDENTIFIER,j,j &lt; c)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,arr[i][j])<SUB>15</SUB>>", "121": "<(IDENTIFIER,arr,arr[i][j] = parseInt(st.nextToken()))<SUB>15</SUB>>", "123": "<(IDENTIFIER,j,arr[i][j] = parseInt(st.nextToken()))<SUB>15</SUB>>", "125": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>15</SUB>>", "127": "<(IDENTIFIER,st,nextToken())<SUB>15</SUB>>", "129": "<(LOCAL,int i: int)<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>18</SUB>>", "135": "<(IDENTIFIER,r,i &lt; r)<SUB>18</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "139": "<(fill,fill(mn1[i], (int) 1e9))<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,mn1[i])<SUB>19</SUB>>", "143": "<(IDENTIFIER,i,fill(mn1[i], (int) 1e9))<SUB>19</SUB>>", "145": "<(TYPE_REF,int,int)<SUB>19</SUB>>", "147": "<(fill,fill(mn2[i], (int) 1e9))<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,mn2[i])<SUB>20</SUB>>", "151": "<(IDENTIFIER,i,fill(mn2[i], (int) 1e9))<SUB>20</SUB>>", "153": "<(TYPE_REF,int,int)<SUB>20</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "159": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "161": "<(IDENTIFIER,i,i &lt; r)<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "167": "<(LOCAL,int j: int)<SUB>24</SUB>>", "169": "<(IDENTIFIER,j,int j = 0)<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.lessThan,j &lt; r)<SUB>24</SUB>>", "173": "<(IDENTIFIER,r,j &lt; r)<SUB>24</SUB>>", "175": "<(IDENTIFIER,j,j++)<SUB>24</SUB>>", "177": "<(fill,fill(memo[i][j], -1))<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>25</SUB>>", "181": "<(IDENTIFIER,memo,fill(memo[i][j], -1))<SUB>25</SUB>>", "183": "<(IDENTIFIER,j,fill(memo[i][j], -1))<SUB>25</SUB>>", "185": "<(LITERAL,1,-1)<SUB>25</SUB>>", "187": "<(LOCAL,int i: int)<SUB>28</SUB>>", "189": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>28</SUB>>", "193": "<(IDENTIFIER,r,i &lt; r)<SUB>28</SUB>>", "195": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "197": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; r); j++),for (int j = 0; Some(j &lt; r); j++))<SUB>29</SUB>>", "199": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>29</SUB>>", "201": "<(LITERAL,0,int j = 0)<SUB>29</SUB>>", "203": "<(IDENTIFIER,j,j &lt; r)<SUB>29</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "209": "<(LOCAL,int k: int)<SUB>30</SUB>>", "211": "<(IDENTIFIER,k,int k = 0)<SUB>30</SUB>>", "213": "<(&lt;operator&gt;.lessThan,k &lt; c)<SUB>30</SUB>>", "215": "<(IDENTIFIER,c,k &lt; c)<SUB>30</SUB>>", "217": "<(IDENTIFIER,k,k++)<SUB>30</SUB>>", "219": "<(&lt;operator&gt;.assignment,mn1[i][j] = min(mn1[i][j], Math.abs(arr[i][k] - arr[j][k])))<SUB>32</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,mn1[i])<SUB>32</SUB>>", "223": "<(IDENTIFIER,i,mn1[i][j] = min(mn1[i][j], Math.abs(arr[i][k] - arr[j][k])))<SUB>32</SUB>>", "225": "<(min,min(mn1[i][j], Math.abs(arr[i][k] - arr[j][k])))<SUB>32</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,mn1[i][j])<SUB>32</SUB>>", "229": "<(IDENTIFIER,mn1,min(mn1[i][j], Math.abs(arr[i][k] - arr[j][k])))<SUB>32</SUB>>", "231": "<(IDENTIFIER,j,min(mn1[i][j], Math.abs(arr[i][k] - arr[j][k])))<SUB>32</SUB>>", "233": "<(IDENTIFIER,Math,Math.abs(arr[i][k] - arr[j][k]))<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,arr[i][k])<SUB>32</SUB>>", "237": "<(IDENTIFIER,arr,arr[i][k] - arr[j][k])<SUB>32</SUB>>", "239": "<(IDENTIFIER,k,arr[i][k] - arr[j][k])<SUB>32</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>32</SUB>>", "243": "<(IDENTIFIER,j,arr[i][k] - arr[j][k])<SUB>32</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>37</SUB>>", "247": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>37</SUB>>", "249": "<(LITERAL,0,int i = 0)<SUB>37</SUB>>", "251": "<(IDENTIFIER,i,i &lt; r)<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "257": "<(LOCAL,int j: int)<SUB>38</SUB>>", "259": "<(IDENTIFIER,j,int j = 0)<SUB>38</SUB>>", "261": "<(&lt;operator&gt;.lessThan,j &lt; r)<SUB>38</SUB>>", "263": "<(IDENTIFIER,r,j &lt; r)<SUB>38</SUB>>", "265": "<(IDENTIFIER,j,j++)<SUB>38</SUB>>", "267": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; c - 1); k++),for (int k = 0; Some(k &lt; c - 1); k++))<SUB>39</SUB>>", "269": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>39</SUB>>", "271": "<(LITERAL,0,int k = 0)<SUB>39</SUB>>", "273": "<(IDENTIFIER,k,k &lt; c - 1)<SUB>39</SUB>>", "275": "<(IDENTIFIER,c,c - 1)<SUB>39</SUB>>", "277": "<(&lt;operator&gt;.postIncrement,k++)<SUB>39</SUB>>", "279": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,mn2[i][j])<SUB>41</SUB>>", "283": "<(IDENTIFIER,mn2,mn2[i][j] = min(mn2[i][j], Math.abs(arr[j][k] - arr[i][k + 1])))<SUB>41</SUB>>", "285": "<(IDENTIFIER,j,mn2[i][j] = min(mn2[i][j], Math.abs(arr[j][k] - arr[i][k + 1])))<SUB>41</SUB>>", "287": "<(IDENTIFIER,Math,min(mn2[i][j], Math.abs(arr[j][k] - arr[i][k + 1])))<SUB>41</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,mn2[i])<SUB>41</SUB>>", "291": "<(IDENTIFIER,i,min(mn2[i][j], Math.abs(arr[j][k] - arr[i][k + 1])))<SUB>41</SUB>>", "293": "<(abs,Math.abs(arr[j][k] - arr[i][k + 1]))<SUB>41</SUB>>", "295": "<(&lt;operator&gt;.subtraction,arr[j][k] - arr[i][k + 1])<SUB>41</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>41</SUB>>", "299": "<(IDENTIFIER,j,arr[j][k] - arr[i][k + 1])<SUB>41</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,arr[i][k + 1])<SUB>41</SUB>>", "303": "<(IDENTIFIER,arr,arr[j][k] - arr[i][k + 1])<SUB>41</SUB>>", "305": "<(&lt;operator&gt;.addition,k + 1)<SUB>41</SUB>>", "307": "<(LITERAL,1,k + 1)<SUB>41</SUB>>", "309": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>47</SUB>>", "311": "<(LITERAL,0,int ans = 0)<SUB>47</SUB>>", "313": "<(LOCAL,int i: int)<SUB>48</SUB>>", "315": "<(IDENTIFIER,i,int i = 0)<SUB>48</SUB>>", "317": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>48</SUB>>", "319": "<(IDENTIFIER,r,i &lt; r)<SUB>48</SUB>>", "321": "<(IDENTIFIER,i,i++)<SUB>48</SUB>>", "323": "<(&lt;operator&gt;.assignment,ans = max(ans, dp(1 &lt;&lt; i, i, i)))<SUB>49</SUB>>", "325": "<(max,max(ans, dp(1 &lt;&lt; i, i, i)))<SUB>49</SUB>>", "327": "<(IDENTIFIER,ans,max(ans, dp(1 &lt;&lt; i, i, i)))<SUB>49</SUB>>", "329": "<(IDENTIFIER,this,dp(1 &lt;&lt; i, i, i))<SUB>49</SUB>>", "331": "<(LITERAL,1,1 &lt;&lt; i)<SUB>49</SUB>>", "333": "<(IDENTIFIER,i,dp(1 &lt;&lt; i, i, i))<SUB>49</SUB>>", "335": "<(CONTROL_STRUCTURE,if (r == 1),if (r == 1))<SUB>51</SUB>>", "337": "<(IDENTIFIER,r,r == 1)<SUB>51</SUB>>", "339": "<(&lt;operator&gt;.assignment,ans = mn2[0][0])<SUB>52</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,mn2[0][0])<SUB>52</SUB>>", "343": "<(IDENTIFIER,mn2,ans = mn2[0][0])<SUB>52</SUB>>", "345": "<(LITERAL,0,ans = mn2[0][0])<SUB>52</SUB>>", "347": "<(IDENTIFIER,out,println(ans))<SUB>53</SUB>>", "349": "<(flush,flush())<SUB>54</SUB>>", "351": "<(MODIFIER,PUBLIC)>", "353": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}