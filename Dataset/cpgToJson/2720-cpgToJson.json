{"edges": [["21", "23"], ["21", "115"], ["21", "116"], ["21", "117"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "113"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "56"], ["52", "59"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["60", "61"], ["61", "62"], ["61", "67"], ["61", "81"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "78"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["82", "83"], ["82", "88"], ["82", "100"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["101", "102"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "50"], ["46", "53"], ["113", "117"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["53", "56"], ["53", "63"], ["56", "113"], ["29", "36"], ["32", "27"], ["44", "42"], ["50", "48"], ["31", "29"], ["34", "32"], ["36", "34"], ["62", "72"], ["62", "84"], ["63", "62"], ["68", "113"], ["70", "68"], ["83", "94"], ["83", "107"], ["71", "78"], ["78", "70"], ["84", "83"], ["89", "113"], ["72", "75"], ["75", "71"], ["91", "89"], ["102", "113"], ["92", "97"], ["97", "91"], ["104", "102"], ["94", "92"], ["105", "110"], ["110", "104"], ["107", "105"], ["21", "26"], ["22", "117"], ["24", "117"], ["29", "117"], ["32", "117"], ["32", "117"], ["32", "117"], ["27", "117"], ["38", "117"], ["41", "117"], ["41", "117"], ["50", "117"], ["48", "117"], ["46", "117"], ["46", "117"], ["53", "117"], ["62", "117"], ["62", "117"], ["83", "117"], ["83", "117"], ["105", "117"], ["104", "117"], ["110", "117"], ["104", "117"], ["102", "117"], ["102", "117"], ["92", "117"], ["91", "117"], ["97", "117"], ["91", "117"], ["89", "117"], ["89", "117"], ["71", "117"], ["71", "117"], ["70", "117"], ["78", "117"], ["70", "117"], ["68", "117"], ["68", "117"], ["56", "117"], ["56", "117"], ["113", "117"], ["113", "117"], ["48", "117"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["102", "113"], ["89", "113"], ["68", "113"], ["56", "113"], ["21", "113"], ["21", "29"], ["21", "37"], ["21", "48"], ["50", "48"], ["46", "53"], ["21", "53"], ["41", "56"], ["21", "56"], ["53", "56"], ["29", "32"], ["21", "32"], ["27", "50"], ["21", "50"], ["63", "62"], ["63", "62"], ["21", "62"], ["53", "63"], ["21", "63"], ["41", "68"], ["21", "68"], ["70", "68"], ["70", "68"], ["71", "70"], ["71", "70"], ["78", "70"], ["78", "70"], ["84", "83"], ["84", "83"], ["21", "83"], ["72", "71"], ["72", "71"], ["75", "71"], ["75", "71"], ["75", "78"], ["21", "78"], ["63", "84"], ["21", "84"], ["41", "89"], ["21", "89"], ["91", "89"], ["91", "89"], ["63", "72"], ["21", "72"], ["72", "75"], ["21", "75"], ["92", "91"], ["92", "91"], ["97", "91"], ["97", "91"], ["41", "102"], ["21", "102"], ["104", "102"], ["104", "102"], ["94", "92"], ["21", "92"], ["94", "92"], ["92", "97"], ["21", "97"], ["105", "104"], ["105", "104"], ["110", "104"], ["110", "104"], ["84", "94"], ["21", "94"], ["107", "105"], ["21", "105"], ["107", "105"], ["105", "110"], ["21", "110"], ["84", "107"], ["21", "107"], ["53", "56"], ["53", "63"], ["53", "62"], ["62", "68"], ["62", "75"], ["62", "84"], ["62", "72"], ["62", "83"], ["62", "71"], ["62", "70"], ["62", "78"], ["83", "107"], ["83", "94"], ["83", "89"], ["83", "102"], ["83", "104"], ["83", "92"], ["83", "97"], ["83", "91"], ["83", "105"], ["83", "110"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,long n: long)<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,long n = parseLong(br.readLine()))<SUB>5</SUB>>", "49": "<(IDENTIFIER,Long,parseLong(br.readLine()))<SUB>5</SUB>>", "51": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 2)<SUB>6</SUB>>", "55": "<(LITERAL,2,n &lt;= 2)<SUB>6</SUB>>", "57": "<(IDENTIFIER,pw,println(n))<SUB>7</SUB>>", "59": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "61": "<(CONTROL_STRUCTURE,if (n % 6 == 0),if (n % 6 == 0))<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.modulo,n % 6)<SUB>11</SUB>>", "65": "<(LITERAL,6,n % 6)<SUB>11</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "69": "<(IDENTIFIER,pw,println(((n - 1) * (n - 2) * (n - 3))))<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2))<SUB>13</SUB>>", "73": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>13</SUB>>", "77": "<(LITERAL,2,n - 2)<SUB>13</SUB>>", "79": "<(IDENTIFIER,n,n - 3)<SUB>13</SUB>>", "81": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>15</SUB>>", "85": "<(IDENTIFIER,n,n % 2)<SUB>15</SUB>>", "87": "<(LITERAL,0,n % 2 == 0)<SUB>15</SUB>>", "89": "<(println,println((n * (n - 1) * (n - 3))))<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 3))<SUB>17</SUB>>", "93": "<(IDENTIFIER,n,n * (n - 1))<SUB>17</SUB>>", "95": "<(IDENTIFIER,n,n - 1)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>17</SUB>>", "99": "<(LITERAL,3,n - 3)<SUB>17</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "103": "<(IDENTIFIER,pw,println((n * (n - 1) * (n - 2))))<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>21</SUB>>", "109": "<(LITERAL,1,n - 1)<SUB>21</SUB>>", "111": "<(IDENTIFIER,n,n - 2)<SUB>21</SUB>>", "113": "<(flush,flush())<SUB>24</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}