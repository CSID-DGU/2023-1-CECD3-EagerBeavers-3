{"edges": [["19", "20"], ["19", "21"], ["19", "320"], ["19", "321"], ["19", "322"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "54"], ["21", "55"], ["21", "64"], ["21", "68"], ["21", "74"], ["21", "273"], ["21", "274"], ["21", "277"], ["21", "311"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "95"], ["84", "99"], ["84", "270"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "131"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "148"], ["131", "150"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "144"], ["138", "145"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "246"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["165", "173"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["173", "174"], ["173", "175"], ["173", "180"], ["173", "181"], ["173", "186"], ["173", "203"], ["173", "220"], ["173", "233"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "198"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "197"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "215"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "228"], ["221", "222"], ["221", "227"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["252", "259"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["259", "260"], ["259", "267"], ["260", "261"], ["260", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["277", "282"], ["277", "287"], ["277", "289"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["287", "288"], ["289", "290"], ["289", "291"], ["289", "294"], ["289", "299"], ["289", "301"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["303", "306"], ["306", "307"], ["306", "310"], ["307", "308"], ["307", "309"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["55", "64"], ["64", "70"], ["68", "76"], ["274", "279"], ["311", "322"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "45"], ["40", "58"], ["57", "55"], ["70", "68"], ["76", "79"], ["79", "89"], ["79", "274"], ["82", "79"], ["279", "284"], ["282", "291"], ["282", "314"], ["287", "284"], ["312", "316"], ["315", "311"], ["28", "26"], ["45", "48"], ["48", "51"], ["51", "58"], ["58", "61"], ["61", "57"], ["86", "95"], ["95", "101"], ["270", "82"], ["284", "282"], ["291", "296"], ["294", "307"], ["294", "287"], ["299", "296"], ["301", "299"], ["314", "312"], ["316", "315"], ["88", "86"], ["101", "106"], ["104", "113"], ["104", "270"], ["109", "106"], ["296", "294"], ["303", "301"], ["89", "92"], ["92", "88"], ["106", "104"], ["113", "118"], ["116", "126"], ["116", "109"], ["121", "118"], ["306", "303"], ["118", "116"], ["124", "133"], ["124", "121"], ["307", "306"], ["125", "124"], ["133", "141"], ["136", "152"], ["136", "121"], ["148", "141"], ["126", "125"], ["138", "136"], ["152", "157"], ["246", "148"], ["139", "138"], ["139", "145"], ["145", "138"], ["157", "160"], ["160", "168"], ["160", "248"], ["163", "160"], ["247", "255"], ["252", "246"], ["141", "139"], ["166", "177"], ["166", "163"], ["248", "247"], ["254", "262"], ["259", "252"], ["167", "166"], ["175", "183"], ["181", "188"], ["255", "254"], ["260", "267"], ["267", "259"], ["168", "167"], ["177", "175"], ["183", "181"], ["187", "200"], ["187", "205"], ["198", "205"], ["204", "217"], ["204", "223"], ["215", "223"], ["221", "230"], ["221", "236"], ["228", "236"], ["234", "243"], ["234", "163"], ["241", "163"], ["261", "260"], ["188", "187"], ["188", "193"], ["191", "187"], ["200", "198"], ["205", "204"], ["205", "210"], ["208", "204"], ["217", "215"], ["222", "221"], ["230", "228"], ["235", "234"], ["243", "241"], ["262", "261"], ["192", "191"], ["209", "208"], ["223", "222"], ["236", "235"], ["193", "192"], ["210", "209"], ["19", "24"], ["20", "322"], ["22", "322"], ["25", "322"], ["25", "322"], ["30", "322"], ["37", "322"], ["35", "322"], ["35", "322"], ["40", "322"], ["45", "322"], ["48", "322"], ["51", "322"], ["51", "322"], ["55", "322"], ["55", "322"], ["64", "322"], ["64", "322"], ["64", "322"], ["68", "322"], ["68", "322"], ["76", "322"], ["79", "322"], ["79", "322"], ["274", "322"], ["274", "322"], ["279", "322"], ["282", "322"], ["282", "322"], ["282", "322"], ["311", "322"], ["316", "322"], ["316", "322"], ["315", "322"], ["315", "322"], ["311", "322"], ["311", "322"], ["291", "322"], ["294", "322"], ["294", "322"], ["287", "322"], ["303", "322"], ["303", "322"], ["301", "322"], ["301", "322"], ["299", "322"], ["86", "322"], ["86", "322"], ["95", "322"], ["95", "322"], ["101", "322"], ["104", "322"], ["104", "322"], ["270", "322"], ["270", "322"], ["270", "322"], ["82", "322"], ["113", "322"], ["116", "322"], ["116", "322"], ["109", "322"], ["124", "322"], ["124", "322"], ["133", "322"], ["136", "322"], ["139", "322"], ["138", "322"], ["136", "322"], ["136", "322"], ["121", "322"], ["152", "322"], ["160", "322"], ["246", "322"], ["252", "322"], ["260", "322"], ["259", "322"], ["267", "322"], ["259", "322"], ["252", "322"], ["246", "322"], ["246", "322"], ["148", "322"], ["167", "322"], ["166", "322"], ["166", "322"], ["175", "322"], ["175", "322"], ["181", "322"], ["181", "322"], ["188", "322"], ["187", "322"], ["193", "322"], ["192", "322"], ["191", "322"], ["187", "322"], ["187", "322"], ["205", "322"], ["204", "322"], ["210", "322"], ["209", "322"], ["208", "322"], ["204", "322"], ["204", "322"], ["221", "322"], ["221", "322"], ["235", "322"], ["234", "322"], ["234", "322"], ["241", "322"], ["163", "322"], ["68", "322"], ["267", "322"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["57", "55"], ["64", "274"], ["95", "274"], ["124", "274"], ["19", "274"], ["22", "25"], ["19", "25"], ["19", "64"], ["55", "64"], ["19", "68"], ["64", "68"], ["19", "76"], ["19", "279"], ["315", "311"], ["315", "311"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "40"], ["19", "40"], ["35", "40"], ["40", "45"], ["19", "45"], ["40", "48"], ["19", "48"], ["45", "51"], ["19", "51"], ["58", "57"], ["58", "57"], ["61", "57"], ["61", "57"], ["76", "79"], ["82", "79"], ["19", "79"], ["40", "79"], ["51", "79"], ["141", "79"], ["79", "82"], ["139", "82"], ["19", "82"], ["88", "86"], ["95", "270"], ["19", "270"], ["279", "282"], ["287", "282"], ["19", "282"], ["284", "282"], ["284", "282"], ["282", "287"], ["19", "287"], ["19", "291"], ["303", "301"], ["303", "301"], ["303", "301"], ["316", "315"], ["316", "315"], ["274", "315"], ["301", "315"], ["19", "315"], ["19", "58"], ["40", "58"], ["48", "58"], ["19", "61"], ["58", "61"], ["64", "95"], ["19", "95"], ["86", "95"], ["64", "95"], ["124", "95"], ["19", "101"], ["19", "284"], ["61", "284"], ["296", "284"], ["106", "284"], ["291", "294"], ["299", "294"], ["19", "294"], ["296", "294"], ["296", "294"], ["294", "299"], ["19", "299"], ["284", "316"], ["19", "316"], ["79", "316"], ["89", "88"], ["89", "88"], ["92", "88"], ["92", "88"], ["101", "104"], ["109", "104"], ["19", "104"], ["106", "104"], ["106", "104"], ["104", "109"], ["222", "109"], ["19", "109"], ["19", "113"], ["19", "296"], ["284", "296"], ["252", "303"], ["19", "303"], ["274", "303"], ["301", "303"], ["19", "89"], ["61", "89"], ["106", "89"], ["19", "92"], ["89", "92"], ["19", "106"], ["92", "106"], ["118", "106"], ["113", "116"], ["121", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["116", "121"], ["167", "121"], ["192", "121"], ["209", "121"], ["19", "121"], ["19", "118"], ["106", "118"], ["145", "118"], ["160", "118"], ["95", "124"], ["19", "124"], ["19", "133"], ["133", "136"], ["148", "136"], ["19", "136"], ["145", "136"], ["145", "136"], ["116", "136"], ["136", "148"], ["235", "148"], ["19", "148"], ["19", "152"], ["252", "246"], ["252", "246"], ["252", "246"], ["19", "138"], ["145", "138"], ["145", "138"], ["116", "138"], ["19", "157"], ["79", "139"], ["19", "139"], ["141", "139"], ["141", "139"], ["19", "145"], ["118", "145"], ["160", "145"], ["157", "160"], ["163", "160"], ["19", "160"], ["118", "160"], ["145", "160"], ["205", "160"], ["168", "163"], ["236", "163"], ["243", "163"], ["19", "163"], ["19", "252"], ["246", "252"], ["259", "252"], ["259", "252"], ["79", "141"], ["19", "141"], ["167", "166"], ["167", "166"], ["19", "166"], ["177", "175"], ["177", "175"], ["177", "181"], ["19", "181"], ["124", "259"], ["160", "259"], ["19", "259"], ["267", "259"], ["267", "259"], ["168", "167"], ["168", "167"], ["116", "167"], ["192", "167"], ["209", "167"], ["19", "167"], ["200", "198"], ["200", "198"], ["217", "215"], ["217", "215"], ["230", "228"], ["230", "228"], ["243", "241"], ["243", "241"], ["124", "260"], ["160", "260"], ["19", "260"], ["19", "267"], ["152", "267"], ["198", "267"], ["215", "267"], ["228", "267"], ["241", "267"], ["19", "168"], ["160", "168"], ["168", "177"], ["19", "177"], ["177", "183"], ["19", "183"], ["188", "187"], ["188", "187"], ["191", "187"], ["191", "187"], ["152", "198"], ["215", "198"], ["228", "198"], ["241", "198"], ["19", "198"], ["205", "204"], ["205", "204"], ["208", "204"], ["208", "204"], ["152", "215"], ["198", "215"], ["228", "215"], ["241", "215"], ["19", "215"], ["222", "221"], ["222", "221"], ["19", "221"], ["152", "228"], ["198", "228"], ["215", "228"], ["241", "228"], ["19", "228"], ["235", "234"], ["235", "234"], ["19", "234"], ["152", "241"], ["198", "241"], ["215", "241"], ["228", "241"], ["19", "241"], ["175", "188"], ["19", "188"], ["192", "191"], ["192", "191"], ["19", "191"], ["19", "200"], ["177", "200"], ["181", "205"], ["19", "205"], ["160", "205"], ["209", "208"], ["209", "208"], ["19", "208"], ["19", "217"], ["200", "217"], ["177", "217"], ["223", "222"], ["223", "222"], ["104", "222"], ["19", "222"], ["19", "230"], ["223", "230"], ["236", "235"], ["236", "235"], ["136", "235"], ["19", "235"], ["19", "243"], ["236", "243"], ["193", "192"], ["193", "192"], ["167", "192"], ["19", "192"], ["210", "209"], ["210", "209"], ["167", "209"], ["192", "209"], ["19", "209"], ["19", "223"], ["200", "223"], ["217", "223"], ["177", "223"], ["19", "236"], ["223", "236"], ["230", "236"], ["19", "193"], ["188", "193"], ["19", "210"], ["205", "210"], ["40", "48"], ["40", "51"], ["40", "45"], ["79", "104"], ["79", "95"], ["79", "88"], ["79", "86"], ["79", "92"], ["79", "101"], ["79", "79"], ["79", "89"], ["79", "106"], ["79", "270"], ["79", "82"], ["282", "296"], ["282", "282"], ["282", "291"], ["282", "284"], ["282", "287"], ["282", "294"], ["294", "306"], ["294", "296"], ["294", "307"], ["294", "301"], ["294", "299"], ["294", "294"], ["294", "303"], ["104", "104"], ["104", "118"], ["104", "116"], ["104", "109"], ["104", "113"], ["104", "106"], ["116", "118"], ["116", "116"], ["116", "121"], ["116", "126"], ["116", "124"], ["116", "125"], ["124", "136"], ["124", "138"], ["124", "141"], ["124", "133"], ["124", "139"], ["136", "136"], ["136", "262"], ["136", "138"], ["136", "247"], ["136", "148"], ["136", "152"], ["136", "160"], ["136", "141"], ["136", "260"], ["136", "254"], ["136", "261"], ["136", "255"], ["136", "259"], ["136", "246"], ["136", "267"], ["136", "139"], ["136", "252"], ["136", "157"], ["136", "248"], ["139", "145"], ["160", "167"], ["160", "163"], ["160", "168"], ["160", "160"], ["160", "166"], ["166", "188"], ["166", "204"], ["166", "181"], ["166", "236"], ["166", "177"], ["166", "222"], ["166", "223"], ["166", "187"], ["166", "221"], ["166", "205"], ["166", "183"], ["166", "235"], ["166", "234"], ["166", "175"], ["187", "200"], ["187", "198"], ["204", "215"], ["204", "217"], ["221", "230"], ["221", "228"], ["234", "243"], ["234", "241"], ["188", "192"], ["188", "191"], ["188", "193"], ["205", "209"], ["205", "208"], ["205", "210"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,if (n &gt; m),if (n &gt; m))<SUB>6</SUB>>", "41": "<(IDENTIFIER,n,n &gt; m)<SUB>6</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int t = n)<SUB>8</SUB>>", "47": "<(IDENTIFIER,n,int t = n)<SUB>8</SUB>>", "49": "<(IDENTIFIER,n,n = m)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,m = t)<SUB>10</SUB>>", "53": "<(IDENTIFIER,t,m = t)<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[][] curr = new int[1 &lt;&lt; n][1 &lt;&lt; n])<SUB>13</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n][1 &lt;&lt; n])>", "59": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>13</SUB>>", "63": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>13</SUB>>", "65": "<(IDENTIFIER,this,fill(curr, oo))<SUB>14</SUB>>", "67": "<(IDENTIFIER,oo,fill(curr, oo))<SUB>14</SUB>>", "69": "<(IDENTIFIER,Arrays,fill(curr[0], 0))<SUB>15</SUB>>", "71": "<(IDENTIFIER,curr,fill(curr[0], 0))<SUB>15</SUB>>", "73": "<(LITERAL,0,fill(curr[0], 0))<SUB>15</SUB>>", "75": "<(LOCAL,int j: int)<SUB>17</SUB>>", "77": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "79": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>17</SUB>>", "81": "<(IDENTIFIER,m,j &lt; m)<SUB>17</SUB>>", "83": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "85": "<(LOCAL,int[][] next: int[][])<SUB>19</SUB>>", "87": "<(IDENTIFIER,next,int[][] next = new int[1 &lt;&lt; n][1 &lt;&lt; n])<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "91": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "93": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "95": "<(fill,fill(next, oo))<SUB>20</SUB>>", "97": "<(IDENTIFIER,next,fill(next, oo))<SUB>20</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int c0 = 0; Some(c0 &lt; 1 &lt;&lt; n); c0++),for (int c0 = 0; Some(c0 &lt; 1 &lt;&lt; n); c0++))<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.assignment,int c0 = 0)<SUB>21</SUB>>", "103": "<(LITERAL,0,int c0 = 0)<SUB>21</SUB>>", "105": "<(IDENTIFIER,c0,c0 &lt; 1 &lt;&lt; n)<SUB>21</SUB>>", "107": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,c0++)<SUB>21</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int c1 = 0; Some(c1 &lt; 1 &lt;&lt; n); c1++),for (int c1 = 0; Some(c1 &lt; 1 &lt;&lt; n); c1++))<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.assignment,int c1 = 0)<SUB>22</SUB>>", "115": "<(LITERAL,0,int c1 = 0)<SUB>22</SUB>>", "117": "<(IDENTIFIER,c1,c1 &lt; 1 &lt;&lt; n)<SUB>22</SUB>>", "119": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,c1++)<SUB>22</SUB>>", "123": "<(CONTROL_STRUCTURE,if (curr[c0][c1] != oo),if (curr[c0][c1] != oo))<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,curr[c0][c1])<SUB>23</SUB>>", "127": "<(IDENTIFIER,curr,curr[c0][c1] != oo)<SUB>23</SUB>>", "129": "<(IDENTIFIER,c1,curr[c0][c1] != oo)<SUB>23</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int c2 = 0; Some(c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n)); c2++),for (int c2 = 0; Some(c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n)); c2++))<SUB>24</SUB>>", "133": "<(&lt;operator&gt;.assignment,int c2 = 0)<SUB>24</SUB>>", "135": "<(LITERAL,0,int c2 = 0)<SUB>24</SUB>>", "137": "<(IDENTIFIER,c2,c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n))<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.equals,j == m - 1)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>24</SUB>>", "143": "<(LITERAL,1,m - 1)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>24</SUB>>", "147": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>24</SUB>>", "149": "<(IDENTIFIER,c2,c2++)<SUB>24</SUB>>", "151": "<(LOCAL,int done: int)<SUB>26</SUB>>", "153": "<(IDENTIFIER,done,int done = 0)<SUB>26</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "157": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "159": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "161": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "165": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; c1) == 0),if (((1 &lt;&lt; i) &amp; c1) == 0))<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; c1)<SUB>28</SUB>>", "169": "<(LITERAL,1,1 &lt;&lt; i)<SUB>28</SUB>>", "171": "<(IDENTIFIER,c1,(1 &lt;&lt; i) &amp; c1)<SUB>28</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.assignment,int up = i - 1)<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>30</SUB>>", "179": "<(LITERAL,1,i - 1)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.assignment,int down = i + 1)<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.addition,i + 1)<SUB>31</SUB>>", "185": "<(LITERAL,1,i + 1)<SUB>31</SUB>>", "187": "<(&lt;operator&gt;.logicalAnd,up &gt;= 0 &amp;&amp; ((1 &lt;&lt; up) &amp; c1) != 0)<SUB>32</SUB>>", "189": "<(IDENTIFIER,up,up &gt;= 0)<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; up) &amp; c1) != 0)<SUB>32</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; up)<SUB>32</SUB>>", "195": "<(IDENTIFIER,up,1 &lt;&lt; up)<SUB>32</SUB>>", "197": "<(LITERAL,0,((1 &lt;&lt; up) &amp; c1) != 0)<SUB>32</SUB>>", "199": "<(IDENTIFIER,done,done |= 1 &lt;&lt; i)<SUB>33</SUB>>", "201": "<(LITERAL,1,1 &lt;&lt; i)<SUB>33</SUB>>", "203": "<(CONTROL_STRUCTURE,if (down &lt; n &amp;&amp; ((1 &lt;&lt; down) &amp; c1) != 0),if (down &lt; n &amp;&amp; ((1 &lt;&lt; down) &amp; c1) != 0))<SUB>34</SUB>>", "205": "<(&lt;operator&gt;.lessThan,down &lt; n)<SUB>34</SUB>>", "207": "<(IDENTIFIER,n,down &lt; n)<SUB>34</SUB>>", "209": "<(&lt;operator&gt;.and,(1 &lt;&lt; down) &amp; c1)<SUB>34</SUB>>", "211": "<(LITERAL,1,1 &lt;&lt; down)<SUB>34</SUB>>", "213": "<(IDENTIFIER,c1,(1 &lt;&lt; down) &amp; c1)<SUB>34</SUB>>", "215": "<(&lt;operators&gt;.assignmentOr,done |= 1 &lt;&lt; i)<SUB>35</SUB>>", "217": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>35</SUB>>", "219": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>35</SUB>>", "221": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; i) &amp; c0) != 0)<SUB>36</SUB>>", "223": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>36</SUB>>", "225": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>36</SUB>>", "227": "<(LITERAL,0,((1 &lt;&lt; i) &amp; c0) != 0)<SUB>36</SUB>>", "229": "<(IDENTIFIER,done,done |= 1 &lt;&lt; i)<SUB>37</SUB>>", "231": "<(LITERAL,1,1 &lt;&lt; i)<SUB>37</SUB>>", "233": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; c2) != 0),if (((1 &lt;&lt; i) &amp; c2) != 0))<SUB>38</SUB>>", "235": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; c2)<SUB>38</SUB>>", "237": "<(LITERAL,1,1 &lt;&lt; i)<SUB>38</SUB>>", "239": "<(IDENTIFIER,c2,(1 &lt;&lt; i) &amp; c2)<SUB>38</SUB>>", "241": "<(&lt;operators&gt;.assignmentOr,done |= 1 &lt;&lt; i)<SUB>39</SUB>>", "243": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>39</SUB>>", "245": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>39</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,next[c1][c2])<SUB>42</SUB>>", "249": "<(IDENTIFIER,next,next[c1][c2] = Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>42</SUB>>", "251": "<(IDENTIFIER,c2,next[c1][c2] = Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>42</SUB>>", "253": "<(IDENTIFIER,Math,Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>42</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,next[c1])<SUB>42</SUB>>", "257": "<(IDENTIFIER,c1,Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>42</SUB>>", "259": "<(&lt;operator&gt;.subtraction,curr[c0][c1] + n - Integer.bitCount(done))<SUB>42</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,curr[c0][c1])<SUB>42</SUB>>", "263": "<(IDENTIFIER,curr,curr[c0][c1] + n)<SUB>42</SUB>>", "265": "<(IDENTIFIER,c1,curr[c0][c1] + n)<SUB>42</SUB>>", "267": "<(bitCount,Integer.bitCount(done))<SUB>42</SUB>>", "269": "<(IDENTIFIER,done,Integer.bitCount(done))<SUB>42</SUB>>", "271": "<(IDENTIFIER,curr,curr = next)<SUB>45</SUB>>", "273": "<(LOCAL,int res: int)<SUB>48</SUB>>", "275": "<(IDENTIFIER,res,int res = oo)<SUB>48</SUB>>", "277": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i++),for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i++))<SUB>49</SUB>>", "279": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>49</SUB>>", "281": "<(LITERAL,0,int i = 0)<SUB>49</SUB>>", "283": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; n)<SUB>49</SUB>>", "285": "<(LITERAL,1,1 &lt;&lt; n)<SUB>49</SUB>>", "287": "<(&lt;operator&gt;.postIncrement,i++)<SUB>49</SUB>>", "289": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++))<SUB>50</SUB>>", "291": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>50</SUB>>", "293": "<(LITERAL,0,int j = 0)<SUB>50</SUB>>", "295": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; n)<SUB>50</SUB>>", "297": "<(LITERAL,1,1 &lt;&lt; n)<SUB>50</SUB>>", "299": "<(&lt;operator&gt;.postIncrement,j++)<SUB>50</SUB>>", "301": "<(&lt;operator&gt;.assignment,res = Math.min(res, curr[i][j]))<SUB>51</SUB>>", "303": "<(min,Math.min(res, curr[i][j]))<SUB>51</SUB>>", "305": "<(IDENTIFIER,res,Math.min(res, curr[i][j]))<SUB>51</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,curr[i])<SUB>51</SUB>>", "309": "<(IDENTIFIER,i,Math.min(res, curr[i][j]))<SUB>51</SUB>>", "311": "<(println,System.out.println(n * m - res))<SUB>53</SUB>>", "313": "<(IDENTIFIER,System,System.out.println(n * m - res))<SUB>53</SUB>>", "315": "<(&lt;operator&gt;.subtraction,n * m - res)<SUB>53</SUB>>", "317": "<(IDENTIFIER,n,n * m)<SUB>53</SUB>>", "319": "<(IDENTIFIER,res,n * m - res)<SUB>53</SUB>>", "321": "<(MODIFIER,STATIC)>"}}