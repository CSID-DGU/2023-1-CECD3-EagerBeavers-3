{"edges": [["19", "20"], ["19", "21"], ["19", "204"], ["19", "205"], ["19", "206"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "41"], ["21", "42"], ["21", "43"], ["21", "47"], ["21", "51"], ["21", "52"], ["21", "55"], ["21", "56"], ["21", "60"], ["21", "61"], ["21", "62"], ["21", "66"], ["21", "70"], ["21", "96"], ["21", "99"], ["21", "128"], ["21", "199"], ["21", "202"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["85", "95"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "93"], ["91", "92"], ["93", "94"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "138"], ["128", "140"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["141", "142"], ["141", "167"], ["141", "169"], ["142", "143"], ["142", "154"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "162"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["170", "171"], ["170", "196"], ["171", "172"], ["171", "183"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "191"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["22", "29"], ["27", "34"], ["30", "45"], ["43", "49"], ["47", "52"], ["52", "58"], ["56", "64"], ["62", "68"], ["66", "72"], ["96", "101"], ["199", "202"], ["202", "206"], ["24", "22"], ["29", "27"], ["45", "43"], ["49", "47"], ["58", "56"], ["64", "62"], ["68", "66"], ["72", "75"], ["75", "82"], ["75", "96"], ["78", "75"], ["101", "104"], ["104", "111"], ["104", "130"], ["107", "104"], ["130", "135"], ["133", "148"], ["133", "199"], ["138", "135"], ["26", "24"], ["32", "39"], ["35", "30"], ["81", "78"], ["110", "120"], ["119", "107"], ["135", "133"], ["34", "32"], ["37", "35"], ["82", "88"], ["111", "115"], ["114", "110"], ["120", "124"], ["123", "119"], ["142", "167"], ["142", "177"], ["167", "138"], ["39", "37"], ["86", "91"], ["89", "81"], ["115", "118"], ["118", "114"], ["124", "127"], ["127", "123"], ["143", "156"], ["154", "142"], ["88", "86"], ["91", "93"], ["93", "89"], ["145", "143"], ["155", "164"], ["162", "154"], ["171", "196"], ["171", "138"], ["196", "138"], ["146", "151"], ["151", "145"], ["156", "159"], ["159", "155"], ["164", "162"], ["172", "185"], ["183", "171"], ["148", "146"], ["174", "172"], ["184", "193"], ["191", "183"], ["175", "180"], ["180", "174"], ["185", "188"], ["188", "184"], ["193", "191"], ["177", "175"], ["19", "26"], ["20", "206"], ["22", "206"], ["22", "206"], ["27", "206"], ["32", "206"], ["35", "206"], ["35", "206"], ["35", "206"], ["30", "206"], ["43", "206"], ["47", "206"], ["49", "206"], ["47", "206"], ["47", "206"], ["52", "206"], ["56", "206"], ["56", "206"], ["62", "206"], ["62", "206"], ["66", "206"], ["66", "206"], ["66", "206"], ["96", "206"], ["96", "206"], ["104", "206"], ["130", "206"], ["133", "206"], ["135", "206"], ["133", "206"], ["133", "206"], ["199", "206"], ["199", "206"], ["202", "206"], ["202", "206"], ["145", "206"], ["145", "206"], ["143", "206"], ["142", "206"], ["156", "206"], ["155", "206"], ["155", "206"], ["154", "206"], ["154", "206"], ["142", "206"], ["142", "206"], ["174", "206"], ["174", "206"], ["172", "206"], ["171", "206"], ["185", "206"], ["184", "206"], ["184", "206"], ["183", "206"], ["183", "206"], ["171", "206"], ["171", "206"], ["196", "206"], ["167", "206"], ["138", "206"], ["110", "206"], ["110", "206"], ["119", "206"], ["119", "206"], ["107", "206"], ["81", "206"], ["86", "206"], ["89", "206"], ["89", "206"], ["93", "206"], ["89", "206"], ["81", "206"], ["78", "206"], ["96", "206"], ["19", "20"], ["19", "27"], ["45", "43"], ["49", "47"], ["19", "52"], ["58", "56"], ["64", "62"], ["68", "66"], ["19", "22"], ["27", "30"], ["19", "30"], ["32", "30"], ["35", "30"], ["19", "72"], ["19", "96"], ["56", "96"], ["81", "96"], ["19", "101"], ["19", "130"], ["30", "199"], ["19", "199"], ["52", "199"], ["196", "199"], ["167", "199"], ["199", "202"], ["19", "202"], ["19", "32"], ["19", "40"], ["22", "45"], ["19", "45"], ["45", "49"], ["19", "49"], ["43", "58"], ["19", "58"], ["58", "64"], ["19", "64"], ["64", "68"], ["19", "68"], ["72", "75"], ["78", "75"], ["19", "75"], ["68", "75"], ["75", "78"], ["19", "78"], ["86", "81"], ["89", "81"], ["19", "81"], ["101", "104"], ["107", "104"], ["19", "104"], ["75", "104"], ["104", "107"], ["19", "107"], ["130", "133"], ["138", "133"], ["19", "133"], ["135", "133"], ["135", "133"], ["19", "138"], ["133", "138"], ["32", "35"], ["19", "35"], ["104", "135"], ["19", "135"], ["19", "86"], ["19", "95"], ["143", "142"], ["143", "142"], ["156", "142"], ["156", "142"], ["66", "142"], ["119", "142"], ["52", "167"], ["196", "167"], ["19", "167"], ["86", "89"], ["19", "89"], ["91", "89"], ["93", "89"], ["19", "143"], ["145", "143"], ["145", "143"], ["156", "154"], ["156", "154"], ["66", "154"], ["119", "154"], ["19", "196"], ["49", "91"], ["93", "91"], ["19", "91"], ["91", "93"], ["19", "93"], ["62", "145"], ["174", "145"], ["174", "145"], ["110", "145"], ["156", "155"], ["156", "155"], ["66", "155"], ["119", "155"], ["172", "171"], ["172", "171"], ["185", "171"], ["185", "171"], ["66", "171"], ["52", "196"], ["167", "196"], ["19", "156"], ["47", "156"], ["185", "156"], ["19", "164"], ["133", "164"], ["19", "172"], ["174", "172"], ["174", "172"], ["185", "183"], ["185", "183"], ["66", "183"], ["133", "148"], ["19", "148"], ["62", "174"], ["145", "174"], ["145", "174"], ["185", "184"], ["185", "184"], ["66", "184"], ["19", "185"], ["156", "185"], ["19", "193"], ["133", "193"], ["19", "177"], ["133", "177"], ["75", "75"], ["75", "81"], ["75", "91"], ["75", "93"], ["75", "88"], ["75", "86"], ["75", "89"], ["75", "82"], ["75", "78"], ["104", "107"], ["104", "115"], ["104", "120"], ["104", "114"], ["104", "104"], ["104", "119"], ["104", "118"], ["104", "127"], ["104", "111"], ["104", "123"], ["104", "110"], ["104", "124"], ["133", "154"], ["133", "145"], ["133", "146"], ["133", "151"], ["133", "162"], ["133", "138"], ["133", "148"], ["133", "164"], ["133", "155"], ["133", "142"], ["133", "159"], ["133", "143"], ["133", "135"], ["133", "156"], ["133", "133"], ["142", "167"], ["142", "188"], ["142", "185"], ["142", "191"], ["142", "184"], ["142", "174"], ["142", "180"], ["142", "171"], ["142", "183"], ["142", "193"], ["142", "177"], ["142", "175"], ["142", "172"], ["171", "196"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "23": "<(IDENTIFIER,input,init(System.in))<SUB>3</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>3</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter(new PrintStream(System.out)))<SUB>4</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter(new PrintStream(System.out)))<SUB>4</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new PrintStream(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(LOCAL,int n: int)<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "45": "<(nextInt,nextInt())<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>8</SUB>>", "49": "<(nextInt,nextInt())<SUB>8</SUB>>", "51": "<(LOCAL,int res: int)<SUB>9</SUB>>", "53": "<(IDENTIFIER,res,int res = 2)<SUB>9</SUB>>", "55": "<(LOCAL,Cottage[] data: ANY)<SUB>10</SUB>>", "57": "<(IDENTIFIER,data,ANY data = new Cottage[n])<SUB>10</SUB>>", "59": "<(IDENTIFIER,n,new Cottage[n])<SUB>10</SUB>>", "61": "<(LOCAL,int[] as: int[])<SUB>11</SUB>>", "63": "<(IDENTIFIER,xs,int[] xs = new int[n])<SUB>11</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "67": "<(IDENTIFIER,as,int[] as = new int[n])<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "71": "<(LOCAL,int i: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,data[i] = new Cottage(input.nextInt(), input.nextInt()))<SUB>14</SUB>>", "83": "<(IDENTIFIER,data,data[i] = new Cottage(input.nextInt(), input.nextInt()))<SUB>14</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "87": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "89": "<(&lt;init&gt;,new Cottage(input.nextInt(), input.nextInt()))<SUB>14</SUB>>", "91": "<(nextInt,nextInt())<SUB>14</SUB>>", "93": "<(nextInt,nextInt())<SUB>14</SUB>>", "95": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "97": "<(IDENTIFIER,Arrays,sort(data))<SUB>16</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "105": "<(IDENTIFIER,i,i &lt; n)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,xs[i] = data[i].x)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>19</SUB>>", "117": "<(IDENTIFIER,i,xs[i] = data[i].x)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.assignment,as[i] = data[i].a)<SUB>20</SUB>>", "121": "<(IDENTIFIER,as,as[i] = data[i].a)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,data[i].a)<SUB>20</SUB>>", "125": "<(IDENTIFIER,data,as[i] = data[i].a)<SUB>20</SUB>>", "127": "<(FIELD_IDENTIFIER,a,a)<SUB>20</SUB>>", "129": "<(LOCAL,int i: int)<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>22</SUB>>", "137": "<(LITERAL,1,n - 1)<SUB>22</SUB>>", "139": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "141": "<(CONTROL_STRUCTURE,if (2 * (xs[i + 1] - xs[i]) == 2 * t + as[i] + as[i + 1]),if (2 * (xs[i + 1] - xs[i]) == 2 * t + as[i] + as[i + 1]))<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.multiplication,2 * (xs[i + 1] - xs[i]))<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.subtraction,xs[i + 1] - xs[i])<SUB>24</SUB>>", "147": "<(IDENTIFIER,xs,xs[i + 1] - xs[i])<SUB>24</SUB>>", "149": "<(IDENTIFIER,i,i + 1)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>24</SUB>>", "153": "<(IDENTIFIER,i,xs[i + 1] - xs[i])<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.addition,2 * t + as[i])<SUB>24</SUB>>", "157": "<(LITERAL,2,2 * t)<SUB>24</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,as[i])<SUB>24</SUB>>", "161": "<(IDENTIFIER,i,2 * t + as[i])<SUB>24</SUB>>", "163": "<(IDENTIFIER,as,2 * t + as[i] + as[i + 1])<SUB>24</SUB>>", "165": "<(IDENTIFIER,i,i + 1)<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,res++)<SUB>24</SUB>>", "169": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.greaterThan,2 * (xs[i + 1] - xs[i]) &gt; 2 * t + as[i] + as[i + 1])<SUB>25</SUB>>", "173": "<(LITERAL,2,2 * (xs[i + 1] - xs[i]))<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,xs[i + 1])<SUB>25</SUB>>", "177": "<(&lt;operator&gt;.addition,i + 1)<SUB>25</SUB>>", "179": "<(LITERAL,1,i + 1)<SUB>25</SUB>>", "181": "<(IDENTIFIER,xs,xs[i + 1] - xs[i])<SUB>25</SUB>>", "183": "<(&lt;operator&gt;.addition,2 * t + as[i] + as[i + 1])<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>25</SUB>>", "187": "<(IDENTIFIER,t,2 * t)<SUB>25</SUB>>", "189": "<(IDENTIFIER,as,2 * t + as[i])<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,as[i + 1])<SUB>25</SUB>>", "193": "<(&lt;operator&gt;.addition,i + 1)<SUB>25</SUB>>", "195": "<(LITERAL,1,i + 1)<SUB>25</SUB>>", "197": "<(IDENTIFIER,res,res += 2)<SUB>25</SUB>>", "199": "<(println,println(res))<SUB>27</SUB>>", "201": "<(IDENTIFIER,res,println(res))<SUB>27</SUB>>", "203": "<(IDENTIFIER,out,close())<SUB>29</SUB>>", "205": "<(MODIFIER,STATIC)>"}}