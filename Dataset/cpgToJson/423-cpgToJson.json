{"edges": [["28", "29"], ["28", "30"], ["28", "296"], ["28", "297"], ["28", "298"], ["30", "4"], ["30", "31"], ["30", "34"], ["30", "6"], ["30", "45"], ["30", "48"], ["30", "8"], ["30", "59"], ["30", "62"], ["30", "65"], ["30", "66"], ["30", "72"], ["30", "73"], ["30", "79"], ["30", "80"], ["30", "86"], ["30", "89"], ["30", "11"], ["30", "92"], ["30", "95"], ["30", "96"], ["30", "97"], ["30", "102"], ["30", "131"], ["30", "132"], ["30", "135"], ["30", "136"], ["30", "139"], ["30", "157"], ["30", "167"], ["30", "168"], ["30", "172"], ["30", "13"], ["30", "244"], ["30", "247"], ["30", "248"], ["30", "269"], ["30", "276"], ["30", "291"], ["30", "293"], ["31", "32"], ["31", "33"], ["34", "3"], ["34", "35"], ["35", "36"], ["35", "39"], ["35", "44"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["49", "53"], ["49", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["62", "7"], ["62", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["89", "9"], ["89", "90"], ["90", "91"], ["92", "93"], ["92", "94"], ["95", "10"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "120"], ["112", "127"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "130"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "147"], ["143", "148"], ["143", "151"], ["143", "154"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["157", "160"], ["160", "161"], ["160", "164"], ["160", "166"], ["161", "162"], ["161", "163"], ["164", "165"], ["168", "169"], ["168", "170"], ["170", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "182"], ["172", "184"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["184", "186"], ["184", "191"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "199"], ["191", "216"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "209"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["217", "218"], ["217", "225"], ["217", "240"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "233"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["247", "12"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "258"], ["248", "260"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["260", "261"], ["260", "266"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["276", "286"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["284", "285"], ["286", "287"], ["287", "288"], ["288", "289"], ["288", "290"], ["291", "292"], ["293", "294"], ["293", "295"], ["31", "38"], ["34", "47"], ["45", "52"], ["48", "61"], ["59", "63"], ["62", "70"], ["66", "77"], ["73", "84"], ["80", "88"], ["86", "90"], ["89", "94"], ["92", "95"], ["95", "99"], ["97", "104"], ["132", "136"], ["136", "140"], ["157", "170"], ["168", "174"], ["244", "247"], ["247", "250"], ["269", "277"], ["291", "293"], ["293", "298"], ["33", "31"], ["47", "45"], ["61", "59"], ["63", "62"], ["68", "66"], ["75", "73"], ["82", "80"], ["88", "86"], ["90", "89"], ["94", "92"], ["99", "97"], ["104", "107"], ["107", "118"], ["107", "132"], ["110", "107"], ["140", "144"], ["140", "163"], ["170", "168"], ["174", "181"], ["177", "188"], ["177", "246"], ["182", "181"], ["246", "244"], ["250", "255"], ["253", "263"], ["253", "273"], ["258", "255"], ["271", "269"], ["277", "279"], ["277", "288"], ["36", "43"], ["39", "34"], ["50", "57"], ["53", "48"], ["70", "68"], ["77", "75"], ["84", "82"], ["114", "121"], ["120", "127"], ["127", "110"], ["144", "148"], ["148", "151"], ["151", "154"], ["154", "163"], ["161", "164"], ["164", "157"], ["179", "177"], ["186", "196"], ["255", "253"], ["261", "266"], ["266", "258"], ["273", "271"], ["279", "284"], ["282", "291"], ["38", "36"], ["41", "39"], ["52", "50"], ["55", "53"], ["116", "114"], ["121", "124"], ["124", "120"], ["163", "161"], ["181", "179"], ["188", "186"], ["192", "203"], ["192", "222"], ["263", "261"], ["284", "282"], ["288", "291"], ["43", "41"], ["57", "55"], ["118", "116"], ["194", "192"], ["200", "213"], ["209", "182"], ["196", "194"], ["201", "206"], ["206", "200"], ["211", "209"], ["218", "229"], ["218", "241"], ["203", "201"], ["213", "211"], ["220", "218"], ["226", "237"], ["233", "182"], ["241", "182"], ["222", "220"], ["227", "226"], ["235", "233"], ["229", "227"], ["237", "235"], ["28", "33"], ["29", "298"], ["31", "298"], ["39", "298"], ["39", "298"], ["34", "298"], ["45", "298"], ["53", "298"], ["53", "298"], ["48", "298"], ["59", "298"], ["66", "298"], ["73", "298"], ["82", "298"], ["82", "298"], ["80", "298"], ["80", "298"], ["86", "298"], ["89", "298"], ["90", "298"], ["89", "298"], ["89", "298"], ["92", "298"], ["95", "298"], ["95", "298"], ["97", "298"], ["97", "298"], ["107", "298"], ["132", "298"], ["132", "298"], ["136", "298"], ["136", "298"], ["140", "298"], ["140", "298"], ["140", "298"], ["144", "298"], ["144", "298"], ["148", "298"], ["151", "298"], ["151", "298"], ["154", "298"], ["154", "298"], ["154", "298"], ["157", "298"], ["161", "298"], ["164", "298"], ["164", "298"], ["157", "298"], ["168", "298"], ["168", "298"], ["168", "298"], ["174", "298"], ["177", "298"], ["177", "298"], ["177", "298"], ["244", "298"], ["247", "298"], ["250", "298"], ["253", "298"], ["253", "298"], ["269", "298"], ["273", "298"], ["269", "298"], ["269", "298"], ["288", "298"], ["279", "298"], ["284", "298"], ["282", "298"], ["282", "298"], ["291", "298"], ["291", "298"], ["293", "298"], ["293", "298"], ["261", "298"], ["261", "298"], ["266", "298"], ["258", "298"], ["186", "298"], ["194", "298"], ["192", "298"], ["192", "298"], ["218", "298"], ["220", "298"], ["220", "298"], ["218", "298"], ["218", "298"], ["241", "298"], ["241", "298"], ["226", "298"], ["226", "298"], ["226", "298"], ["233", "298"], ["235", "298"], ["235", "298"], ["233", "298"], ["233", "298"], ["200", "298"], ["206", "298"], ["200", "298"], ["200", "298"], ["209", "298"], ["211", "298"], ["211", "298"], ["209", "298"], ["209", "298"], ["182", "298"], ["116", "298"], ["118", "298"], ["116", "298"], ["114", "298"], ["114", "298"], ["120", "298"], ["120", "298"], ["120", "298"], ["127", "298"], ["127", "298"], ["127", "298"], ["110", "298"], ["157", "298"], ["28", "29"], ["28", "31"], ["28", "45"], ["28", "59"], ["68", "66"], ["68", "66"], ["75", "73"], ["75", "73"], ["82", "80"], ["82", "80"], ["28", "86"], ["28", "92"], ["99", "97"], ["99", "97"], ["28", "132"], ["28", "136"], ["170", "168"], ["28", "244"], ["31", "34"], ["28", "34"], ["36", "34"], ["39", "34"], ["45", "48"], ["28", "48"], ["50", "48"], ["53", "48"], ["59", "62"], ["28", "62"], ["63", "62"], ["86", "89"], ["28", "89"], ["90", "89"], ["92", "95"], ["28", "95"], ["28", "104"], ["28", "157"], ["97", "157"], ["120", "157"], ["161", "157"], ["164", "157"], ["28", "174"], ["244", "247"], ["28", "247"], ["28", "250"], ["247", "269"], ["266", "269"], ["28", "269"], ["168", "269"], ["28", "277"], ["288", "291"], ["282", "291"], ["28", "291"], ["39", "293"], ["53", "293"], ["28", "293"], ["28", "36"], ["28", "44"], ["28", "50"], ["28", "58"], ["34", "63"], ["28", "63"], ["28", "68"], ["70", "68"], ["68", "75"], ["28", "75"], ["77", "75"], ["75", "82"], ["28", "82"], ["84", "82"], ["63", "90"], ["28", "90"], ["66", "99"], ["28", "99"], ["104", "107"], ["110", "107"], ["28", "107"], ["99", "107"], ["127", "110"], ["28", "110"], ["116", "114"], ["116", "114"], ["124", "120"], ["124", "120"], ["73", "140"], ["28", "140"], ["80", "140"], ["28", "144"], ["140", "148"], ["28", "148"], ["140", "151"], ["28", "151"], ["148", "154"], ["28", "154"], ["28", "161"], ["28", "166"], ["107", "170"], ["28", "170"], ["174", "177"], ["182", "177"], ["28", "177"], ["157", "177"], ["177", "182"], ["28", "182"], ["157", "186"], ["161", "186"], ["250", "253"], ["258", "253"], ["220", "253"], ["235", "253"], ["211", "253"], ["28", "253"], ["255", "253"], ["255", "253"], ["253", "258"], ["220", "258"], ["235", "258"], ["211", "258"], ["28", "258"], ["36", "39"], ["28", "39"], ["50", "53"], ["28", "53"], ["62", "70"], ["28", "70"], ["70", "77"], ["28", "77"], ["77", "84"], ["28", "84"], ["95", "127"], ["28", "127"], ["124", "127"], ["124", "127"], ["161", "164"], ["28", "164"], ["170", "255"], ["28", "255"], ["247", "261"], ["266", "261"], ["28", "261"], ["168", "261"], ["261", "266"], ["28", "266"], ["255", "273"], ["28", "273"], ["48", "279"], ["28", "279"], ["279", "282"], ["28", "282"], ["284", "282"], ["82", "116"], ["28", "116"], ["118", "116"], ["114", "124"], ["28", "124"], ["107", "124"], ["95", "192"], ["218", "192"], ["233", "192"], ["209", "192"], ["127", "192"], ["28", "192"], ["194", "192"], ["194", "192"], ["206", "200"], ["206", "200"], ["269", "284"], ["28", "284"], ["48", "288"], ["28", "288"], ["89", "118"], ["28", "118"], ["140", "194"], ["154", "194"], ["211", "194"], ["28", "194"], ["186", "194"], ["220", "194"], ["235", "194"], ["211", "194"], ["192", "209"], ["28", "209"], ["211", "209"], ["211", "209"], ["28", "206"], ["136", "206"], ["144", "206"], ["194", "211"], ["28", "211"], ["186", "211"], ["194", "211"], ["192", "218"], ["28", "218"], ["220", "218"], ["220", "218"], ["136", "226"], ["144", "226"], ["206", "226"], ["28", "226"], ["28", "241"], ["140", "220"], ["151", "220"], ["235", "220"], ["28", "220"], ["186", "220"], ["194", "220"], ["218", "233"], ["28", "233"], ["235", "233"], ["235", "233"], ["220", "235"], ["28", "235"], ["186", "235"], ["220", "235"], ["107", "107"], ["107", "120"], ["107", "114"], ["107", "121"], ["107", "118"], ["107", "127"], ["107", "116"], ["107", "110"], ["107", "124"], ["140", "154"], ["140", "151"], ["140", "144"], ["140", "148"], ["177", "188"], ["177", "192"], ["177", "179"], ["177", "196"], ["177", "181"], ["177", "194"], ["177", "182"], ["177", "186"], ["177", "177"], ["253", "261"], ["253", "255"], ["253", "258"], ["253", "253"], ["253", "263"], ["253", "266"], ["277", "282"], ["277", "279"], ["277", "284"], ["277", "288"], ["192", "209"], ["192", "213"], ["192", "206"], ["192", "201"], ["192", "200"], ["192", "220"], ["192", "211"], ["192", "203"], ["192", "222"], ["192", "218"], ["218", "226"], ["218", "233"], ["218", "235"], ["218", "237"], ["218", "229"], ["218", "241"], ["218", "227"]], "features": {"28": "<(METHOD,main)<SUB>1</SUB>>", "30": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "31": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "40": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "42": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "44": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>4</SUB>>", "50": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "52": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>4</SUB>>", "54": "<(IDENTIFIER,$obj2,new BufferedOutputStream(System.out))>", "56": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>4</SUB>>", "58": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "64": "<(IDENTIFIER,f,readLine())<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>8</SUB>>", "68": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "70": "<(nextToken,nextToken())<SUB>8</SUB>>", "72": "<(LOCAL,int a: int)<SUB>9</SUB>>", "74": "<(IDENTIFIER,a,int a = parseInt(st.nextToken()))<SUB>9</SUB>>", "76": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "78": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.assignment,int b = parseInt(st.nextToken()))<SUB>10</SUB>>", "82": "<(parseInt,parseInt(st.nextToken()))<SUB>10</SUB>>", "84": "<(nextToken,nextToken())<SUB>10</SUB>>", "86": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(f.readLine()))<SUB>11</SUB>>", "88": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>11</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>11</SUB>>", "91": "<(IDENTIFIER,f,readLine())<SUB>11</SUB>>", "92": "<(&lt;operator&gt;.assignment,ANY in = new HashMap&lt;Integer, Integer&gt;())<SUB>12</SUB>>", "94": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Integer&gt;())<SUB>12</SUB>>", "10": "<(IDENTIFIER,in,new HashMap&lt;Integer, Integer&gt;())<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[][] locs = new int[n][2])<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[n][2])>", "101": "<(LITERAL,2,new int[n][2])<SUB>13</SUB>>", "103": "<(LOCAL,int i: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "113": "<(LOCAL,int num: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,num,int num = parseInt(st.nextToken()))<SUB>15</SUB>>", "117": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>15</SUB>>", "119": "<(IDENTIFIER,st,nextToken())<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,locs[i])<SUB>16</SUB>>", "123": "<(IDENTIFIER,i,locs[i] = new int[] { num, i })<SUB>16</SUB>>", "125": "<(IDENTIFIER,num,new int[] { num, i })<SUB>16</SUB>>", "127": "<(put,put(num, i))<SUB>17</SUB>>", "129": "<(IDENTIFIER,num,put(num, i))<SUB>17</SUB>>", "131": "<(LOCAL,boolean ok: boolean)<SUB>21</SUB>>", "133": "<(IDENTIFIER,ok,boolean ok = true)<SUB>21</SUB>>", "135": "<(LOCAL,int swap: int)<SUB>22</SUB>>", "137": "<(IDENTIFIER,swap,int swap = 0)<SUB>22</SUB>>", "139": "<(CONTROL_STRUCTURE,if (a &gt; b),if (a &gt; b))<SUB>23</SUB>>", "141": "<(IDENTIFIER,a,a &gt; b)<SUB>23</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "145": "<(IDENTIFIER,swap,swap = 1)<SUB>23</SUB>>", "147": "<(LOCAL,int t: int)<SUB>24</SUB>>", "149": "<(IDENTIFIER,t,int t = a)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.assignment,a = b)<SUB>25</SUB>>", "153": "<(IDENTIFIER,b,a = b)<SUB>25</SUB>>", "155": "<(IDENTIFIER,b,b = t)<SUB>26</SUB>>", "157": "<(sort,sort(locs, new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return (new Integer(a[0])).compareTo(b[0]);\\012    }\\012}))<SUB>28</SUB>>", "159": "<(IDENTIFIER,locs,sort(locs, new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return (new Integer(a[0])).compareTo(b[0]);\\012    }\\012}))<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "163": "<(&lt;operator&gt;.alloc,new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return (new Integer(a[0])).compareTo(b[0]);\\012    }\\012})<SUB>28</SUB>>", "165": "<(IDENTIFIER,$obj7,new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return (new Integer(a[0])).compareTo(b[0]);\\012    }\\012})>", "167": "<(LOCAL,int[] inB: int[])<SUB>33</SUB>>", "169": "<(IDENTIFIER,inB,int[] inB = new int[n])<SUB>33</SUB>>", "171": "<(IDENTIFIER,n,new int[n])<SUB>33</SUB>>", "173": "<(LOCAL,$idx0: int)<SUB>34</SUB>>", "175": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "177": "<(&lt;operator&gt;.lessThan,$idx0 &lt; locs.length)<SUB>34</SUB>>", "179": "<(&lt;operator&gt;.fieldAccess,locs.length)<SUB>34</SUB>>", "181": "<(FIELD_IDENTIFIER,length,length)<SUB>34</SUB>>", "183": "<(IDENTIFIER,$idx0,$idx0++)>", "185": "<(LOCAL,i: int[])<SUB>34</SUB>>", "187": "<(IDENTIFIER,i,&lt;empty&gt;)>", "189": "<(IDENTIFIER,locs,&lt;empty&gt;)>", "191": "<(CONTROL_STRUCTURE,if (in.containsKey(b - i[0])),if (in.containsKey(b - i[0])))<SUB>35</SUB>>", "193": "<(IDENTIFIER,in,containsKey(b - i[0]))<SUB>35</SUB>>", "195": "<(IDENTIFIER,b,b - i[0])<SUB>35</SUB>>", "197": "<(IDENTIFIER,i,b - i[0])<SUB>35</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,inB[i[1]])<SUB>36</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,i[1])<SUB>36</SUB>>", "205": "<(LITERAL,1,inB[i[1]] = 1 - swap)<SUB>36</SUB>>", "207": "<(LITERAL,1,1 - swap)<SUB>36</SUB>>", "209": "<(remove,remove(b - i[0]))<SUB>37</SUB>>", "211": "<(&lt;operator&gt;.subtraction,b - i[0])<SUB>37</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,i[0])<SUB>37</SUB>>", "215": "<(LITERAL,0,b - i[0])<SUB>37</SUB>>", "217": "<(CONTROL_STRUCTURE,if (in.containsKey(a - i[0])),if (in.containsKey(a - i[0])))<SUB>38</SUB>>", "219": "<(IDENTIFIER,in,containsKey(a - i[0]))<SUB>38</SUB>>", "221": "<(IDENTIFIER,a,a - i[0])<SUB>38</SUB>>", "223": "<(IDENTIFIER,i,a - i[0])<SUB>38</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,inB[i[1]])<SUB>39</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,i[1])<SUB>39</SUB>>", "231": "<(LITERAL,1,inB[i[1]] = swap)<SUB>39</SUB>>", "233": "<(remove,remove(a - i[0]))<SUB>40</SUB>>", "235": "<(&lt;operator&gt;.subtraction,a - i[0])<SUB>40</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,i[0])<SUB>40</SUB>>", "239": "<(LITERAL,0,a - i[0])<SUB>40</SUB>>", "241": "<(&lt;operator&gt;.assignment,ok = false)<SUB>41</SUB>>", "243": "<(LITERAL,false,ok = false)<SUB>41</SUB>>", "244": "<(&lt;operator&gt;.assignment,StringBuffer p = new StringBuffer())<SUB>45</SUB>>", "246": "<(&lt;operator&gt;.alloc,new StringBuffer())<SUB>45</SUB>>", "12": "<(IDENTIFIER,p,new StringBuffer())<SUB>45</SUB>>", "249": "<(LOCAL,int i: int)<SUB>46</SUB>>", "251": "<(IDENTIFIER,i,int i = 0)<SUB>46</SUB>>", "253": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>46</SUB>>", "255": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>46</SUB>>", "257": "<(LITERAL,1,n - 1)<SUB>46</SUB>>", "259": "<(IDENTIFIER,i,i++)<SUB>46</SUB>>", "261": "<(append,p.append(inB[i]))<SUB>47</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,inB[i])<SUB>47</SUB>>", "265": "<(IDENTIFIER,i,p.append(inB[i]))<SUB>47</SUB>>", "267": "<(IDENTIFIER,p,p.append(&quot; &quot;))<SUB>48</SUB>>", "269": "<(append,p.append(inB[n - 1]))<SUB>50</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,inB[n - 1])<SUB>50</SUB>>", "273": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>50</SUB>>", "275": "<(LITERAL,1,n - 1)<SUB>50</SUB>>", "277": "<(IDENTIFIER,ok,if (ok))<SUB>51</SUB>>", "279": "<(println,println(&quot;YES&quot;))<SUB>52</SUB>>", "281": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>52</SUB>>", "283": "<(IDENTIFIER,out,println(p.toString()))<SUB>53</SUB>>", "285": "<(IDENTIFIER,p,p.toString())<SUB>53</SUB>>", "287": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "289": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>55</SUB>>", "291": "<(close,close())<SUB>59</SUB>>", "293": "<(exit,System.exit(0))<SUB>60</SUB>>", "295": "<(LITERAL,0,System.exit(0))<SUB>60</SUB>>", "297": "<(MODIFIER,STATIC)>"}}