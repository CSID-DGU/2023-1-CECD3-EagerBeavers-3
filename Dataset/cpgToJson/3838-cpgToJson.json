{"edges": [["21", "22"], ["21", "23"], ["21", "228"], ["21", "229"], ["21", "230"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "40"], ["23", "41"], ["23", "6"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "223"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "5"], ["52", "53"], ["52", "57"], ["53", "54"], ["53", "56"], ["54", "55"], ["57", "58"], ["57", "65"], ["57", "66"], ["57", "70"], ["57", "88"], ["57", "89"], ["57", "92"], ["57", "93"], ["57", "100"], ["57", "107"], ["57", "171"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "74"], ["70", "77"], ["70", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["86", "87"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "111"], ["107", "114"], ["107", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["116", "137"], ["116", "160"], ["116", "169"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "135"], ["120", "121"], ["120", "134"], ["121", "122"], ["121", "129"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "175"], ["171", "178"], ["171", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "220"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "197"], ["181", "199"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["197", "198"], ["199", "200"], ["199", "207"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "217"], ["208", "209"], ["208", "216"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["24", "31"], ["27", "46"], ["41", "50"], ["48", "51"], ["51", "54"], ["223", "230"], ["26", "24"], ["43", "41"], ["50", "48"], ["53", "63"], ["53", "226"], ["224", "223"], ["29", "36"], ["32", "27"], ["45", "43"], ["54", "53"], ["58", "68"], ["66", "71"], ["89", "97"], ["93", "102"], ["100", "108"], ["226", "224"], ["31", "29"], ["34", "32"], ["46", "45"], ["60", "58"], ["68", "66"], ["71", "74"], ["74", "80"], ["74", "89"], ["77", "74"], ["79", "77"], ["95", "93"], ["101", "100"], ["108", "111"], ["111", "125"], ["111", "139"], ["111", "172"], ["114", "111"], ["172", "175"], ["175", "54"], ["175", "183"], ["178", "175"], ["36", "34"], ["62", "60"], ["80", "86"], ["83", "79"], ["97", "95"], ["102", "101"], ["160", "169"], ["169", "114"], ["220", "178"], ["63", "62"], ["85", "83"], ["139", "142"], ["142", "149"], ["142", "162"], ["145", "142"], ["147", "145"], ["161", "166"], ["166", "160"], ["183", "187"], ["186", "203"], ["186", "220"], ["197", "187"], ["86", "85"], ["135", "125"], ["135", "139"], ["148", "156"], ["153", "147"], ["162", "161"], ["187", "186"], ["187", "192"], ["190", "186"], ["200", "210"], ["121", "139"], ["121", "135"], ["149", "148"], ["154", "153"], ["191", "190"], ["202", "200"], ["208", "217"], ["208", "197"], ["217", "197"], ["122", "130"], ["129", "121"], ["156", "154"], ["192", "191"], ["203", "202"], ["209", "208"], ["123", "122"], ["130", "129"], ["210", "213"], ["213", "209"], ["125", "123"], ["21", "26"], ["22", "230"], ["24", "230"], ["29", "230"], ["32", "230"], ["32", "230"], ["32", "230"], ["27", "230"], ["43", "230"], ["46", "230"], ["45", "230"], ["43", "230"], ["41", "230"], ["41", "230"], ["48", "230"], ["51", "230"], ["54", "230"], ["53", "230"], ["53", "230"], ["223", "230"], ["223", "230"], ["223", "230"], ["60", "230"], ["63", "230"], ["62", "230"], ["60", "230"], ["58", "230"], ["58", "230"], ["66", "230"], ["66", "230"], ["66", "230"], ["89", "230"], ["89", "230"], ["93", "230"], ["95", "230"], ["93", "230"], ["93", "230"], ["100", "230"], ["100", "230"], ["108", "230"], ["172", "230"], ["175", "230"], ["175", "230"], ["175", "230"], ["183", "230"], ["187", "230"], ["186", "230"], ["190", "230"], ["186", "230"], ["186", "230"], ["220", "230"], ["178", "230"], ["200", "230"], ["200", "230"], ["208", "230"], ["208", "230"], ["217", "230"], ["197", "230"], ["121", "230"], ["121", "230"], ["121", "230"], ["135", "230"], ["139", "230"], ["142", "230"], ["142", "230"], ["160", "230"], ["160", "230"], ["160", "230"], ["169", "230"], ["169", "230"], ["114", "230"], ["147", "230"], ["147", "230"], ["147", "230"], ["145", "230"], ["79", "230"], ["83", "230"], ["86", "230"], ["85", "230"], ["83", "230"], ["79", "230"], ["79", "230"], ["77", "230"], ["21", "22"], ["21", "24"], ["43", "41"], ["43", "41"], ["21", "48"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["48", "51"], ["21", "51"], ["51", "223"], ["220", "223"], ["21", "223"], ["21", "29"], ["21", "37"], ["21", "43"], ["45", "43"], ["54", "53"], ["21", "53"], ["60", "58"], ["60", "58"], ["68", "66"], ["21", "89"], ["95", "93"], ["95", "93"], ["21", "100"], ["29", "32"], ["21", "32"], ["46", "45"], ["41", "54"], ["21", "54"], ["21", "71"], ["83", "79"], ["83", "79"], ["21", "108"], ["21", "172"], ["27", "46"], ["21", "46"], ["43", "60"], ["83", "60"], ["21", "60"], ["62", "60"], ["58", "68"], ["21", "68"], ["71", "74"], ["77", "74"], ["21", "74"], ["68", "74"], ["74", "77"], ["21", "77"], ["21", "95"], ["74", "95"], ["108", "111"], ["114", "111"], ["21", "111"], ["95", "111"], ["111", "114"], ["125", "114"], ["156", "114"], ["21", "114"], ["66", "160"], ["129", "160"], ["79", "160"], ["172", "175"], ["178", "175"], ["21", "175"], ["111", "175"], ["187", "175"], ["175", "178"], ["21", "178"], ["63", "62"], ["60", "83"], ["21", "83"], ["85", "83"], ["74", "97"], ["21", "97"], ["21", "118"], ["21", "139"], ["142", "169"], ["21", "169"], ["21", "183"], ["51", "220"], ["200", "220"], ["217", "220"], ["21", "220"], ["46", "63"], ["86", "63"], ["21", "63"], ["86", "85"], ["139", "142"], ["145", "142"], ["21", "142"], ["89", "142"], ["135", "142"], ["169", "142"], ["142", "145"], ["21", "145"], ["187", "186"], ["187", "186"], ["190", "186"], ["190", "186"], ["21", "197"], ["187", "197"], ["63", "86"], ["21", "86"], ["89", "135"], ["169", "135"], ["21", "135"], ["183", "187"], ["197", "187"], ["21", "187"], ["175", "187"], ["200", "190"], ["147", "190"], ["21", "190"], ["51", "200"], ["220", "200"], ["217", "200"], ["21", "200"], ["190", "200"], ["147", "200"], ["129", "121"], ["129", "121"], ["21", "208"], ["200", "217"], ["21", "217"], ["66", "129"], ["79", "129"], ["21", "129"], ["111", "156"], ["125", "156"], ["21", "156"], ["187", "213"], ["21", "213"], ["111", "125"], ["21", "125"], ["53", "68"], ["53", "60"], ["53", "102"], ["53", "74"], ["53", "95"], ["53", "97"], ["53", "93"], ["53", "101"], ["53", "54"], ["53", "58"], ["53", "100"], ["53", "108"], ["53", "111"], ["53", "89"], ["53", "66"], ["53", "71"], ["53", "53"], ["53", "63"], ["53", "175"], ["53", "62"], ["53", "172"], ["74", "77"], ["74", "85"], ["74", "74"], ["74", "79"], ["74", "80"], ["74", "86"], ["74", "83"], ["111", "169"], ["111", "161"], ["111", "114"], ["111", "162"], ["111", "139"], ["111", "111"], ["111", "160"], ["111", "166"], ["111", "142"], ["111", "121"], ["111", "129"], ["111", "130"], ["111", "122"], ["111", "123"], ["111", "125"], ["175", "178"], ["175", "187"], ["175", "186"], ["175", "183"], ["175", "220"], ["175", "175"], ["142", "154"], ["142", "145"], ["142", "149"], ["142", "153"], ["142", "148"], ["142", "142"], ["142", "147"], ["142", "156"], ["186", "209"], ["186", "197"], ["186", "213"], ["186", "208"], ["186", "187"], ["186", "186"], ["186", "202"], ["186", "210"], ["186", "200"], ["186", "203"], ["187", "192"], ["187", "191"], ["187", "190"], ["121", "135"], ["121", "121"], ["121", "129"], ["121", "130"], ["121", "122"], ["121", "123"], ["121", "125"], ["208", "217"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(LOCAL,int N: int)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int T = parseInt(br.readLine().trim()))<SUB>7</SUB>>", "43": "<(parseInt,parseInt(br.readLine().trim()))<SUB>7</SUB>>", "45": "<(trim,trim())<SUB>7</SUB>>", "47": "<(IDENTIFIER,br,readLine())<SUB>7</SUB>>", "48": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>8</SUB>>", "50": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>8</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.greaterThan,T-- &gt; 0)<SUB>10</SUB>>", "55": "<(IDENTIFIER,T,T--)<SUB>10</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "59": "<(IDENTIFIER,N,N = parseInt(br.readLine().trim()))<SUB>12</SUB>>", "61": "<(IDENTIFIER,Integer,parseInt(br.readLine().trim()))<SUB>12</SUB>>", "63": "<(readLine,readLine())<SUB>12</SUB>>", "65": "<(LOCAL,int[] a: int[])<SUB>14</SUB>>", "67": "<(IDENTIFIER,a,int[] a = new int[N])<SUB>14</SUB>>", "69": "<(IDENTIFIER,N,new int[N])<SUB>14</SUB>>", "71": "<(&lt;operator&gt;.assignment,i = 0)<SUB>15</SUB>>", "73": "<(LITERAL,0,i = 0)<SUB>15</SUB>>", "75": "<(IDENTIFIER,i,i &lt; N)<SUB>15</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.assignment,a[i] = parseInt(br.readLine().trim()))<SUB>15</SUB>>", "81": "<(IDENTIFIER,a,a[i] = parseInt(br.readLine().trim()))<SUB>15</SUB>>", "83": "<(parseInt,parseInt(br.readLine().trim()))<SUB>15</SUB>>", "85": "<(trim,trim())<SUB>15</SUB>>", "87": "<(IDENTIFIER,br,readLine())<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.assignment,int end = 1)<SUB>17</SUB>>", "91": "<(LITERAL,1,int end = 1)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.assignment,int[][] ans = new int[N][N + 10])<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.alloc,new int[N][N + 10])>", "97": "<(&lt;operator&gt;.addition,N + 10)<SUB>18</SUB>>", "99": "<(LITERAL,10,N + 10)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,ans[0][0])<SUB>20</SUB>>", "103": "<(IDENTIFIER,ans,ans[0][0] = 1)<SUB>20</SUB>>", "105": "<(LITERAL,0,ans[0][0] = 1)<SUB>20</SUB>>", "107": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt; N); i++),for (i = 1; Some(i &lt; N); i++))<SUB>21</SUB>>", "109": "<(IDENTIFIER,i,i = 1)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>21</SUB>>", "113": "<(IDENTIFIER,N,i &lt; N)<SUB>21</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "117": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>23</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "121": "<(&lt;operator&gt;.equals,ans[i - 1][end] == a[i] - 1)<SUB>25</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,ans[i - 1])<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>25</SUB>>", "127": "<(LITERAL,1,i - 1)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.subtraction,a[i] - 1)<SUB>25</SUB>>", "131": "<(IDENTIFIER,a,a[i] - 1)<SUB>25</SUB>>", "133": "<(LITERAL,1,a[i] - 1)<SUB>25</SUB>>", "135": "<(&lt;operator&gt;.postDecrement,end--)<SUB>26</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; end); j++),for (int j = 0; Some(j &lt; end); j++))<SUB>28</SUB>>", "139": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "141": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "143": "<(IDENTIFIER,j,j &lt; end)<SUB>28</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "147": "<(&lt;operator&gt;.assignment,ans[i][j] = ans[i - 1][j])<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>28</SUB>>", "151": "<(IDENTIFIER,i,ans[i][j] = ans[i - 1][j])<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,ans[i - 1][j])<SUB>28</SUB>>", "155": "<(IDENTIFIER,ans,ans[i][j] = ans[i - 1][j])<SUB>28</SUB>>", "157": "<(IDENTIFIER,i,i - 1)<SUB>28</SUB>>", "159": "<(IDENTIFIER,j,ans[i][j] = ans[i - 1][j])<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,ans[i][end])<SUB>30</SUB>>", "163": "<(IDENTIFIER,ans,ans[i][end] = a[i])<SUB>30</SUB>>", "165": "<(IDENTIFIER,end,ans[i][end] = a[i])<SUB>30</SUB>>", "167": "<(IDENTIFIER,a,ans[i][end] = a[i])<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,end++)<SUB>31</SUB>>", "171": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; N); i++),for (i = 0; Some(i &lt; N); i++))<SUB>34</SUB>>", "173": "<(IDENTIFIER,i,i = 0)<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>34</SUB>>", "177": "<(IDENTIFIER,N,i &lt; N)<SUB>34</SUB>>", "179": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N &amp;&amp; ans[i][j] != 0); j++),for (int j = 0; Some(j &lt; N &amp;&amp; ans[i][j] != 0); j++))<SUB>36</SUB>>", "183": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "185": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "187": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>36</SUB>>", "189": "<(IDENTIFIER,N,j &lt; N)<SUB>36</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>36</SUB>>", "193": "<(IDENTIFIER,ans,ans[i][j] != 0)<SUB>36</SUB>>", "195": "<(IDENTIFIER,j,ans[i][j] != 0)<SUB>36</SUB>>", "197": "<(&lt;operator&gt;.postIncrement,j++)<SUB>36</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "201": "<(IDENTIFIER,sb,sb.append(ans[i][j]))<SUB>38</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>38</SUB>>", "205": "<(IDENTIFIER,i,sb.append(ans[i][j]))<SUB>38</SUB>>", "207": "<(CONTROL_STRUCTURE,if (ans[i][j + 1] != 0),if (ans[i][j + 1] != 0))<SUB>39</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,ans[i][j + 1])<SUB>39</SUB>>", "211": "<(IDENTIFIER,ans,ans[i][j + 1] != 0)<SUB>39</SUB>>", "213": "<(&lt;operator&gt;.addition,j + 1)<SUB>39</SUB>>", "215": "<(LITERAL,1,j + 1)<SUB>39</SUB>>", "217": "<(append,sb.append('.'))<SUB>39</SUB>>", "219": "<(LITERAL,'.',sb.append('.'))<SUB>39</SUB>>", "221": "<(IDENTIFIER,sb,sb.append(&quot;\\n&quot;))<SUB>41</SUB>>", "223": "<(println,System.out.println(sb))<SUB>44</SUB>>", "225": "<(IDENTIFIER,System,System.out.println(sb))<SUB>44</SUB>>", "227": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>44</SUB>>", "229": "<(MODIFIER,STATIC)>"}}