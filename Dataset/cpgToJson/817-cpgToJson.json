{"edges": [["21", "22"], ["21", "23"], ["21", "166"], ["21", "167"], ["21", "168"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "6"], ["23", "51"], ["23", "54"], ["23", "55"], ["23", "90"], ["23", "91"], ["23", "94"], ["23", "151"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["54", "5"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "70"], ["66", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "85"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["104", "146"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "127"], ["116", "129"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "126"], ["124", "125"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "142"], ["131", "132"], ["131", "141"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "145"], ["143", "144"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "155"], ["151", "160"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "47"], ["46", "53"], ["51", "54"], ["54", "57"], ["91", "96"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["47", "46"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "91"], ["63", "60"], ["96", "99"], ["99", "106"], ["99", "152"], ["102", "99"], ["152", "158"], ["152", "164"], ["155", "168"], ["30", "28"], ["66", "71"], ["66", "63"], ["156", "155"], ["161", "168"], ["67", "66"], ["71", "76"], ["106", "113"], ["106", "147"], ["147", "152"], ["147", "102"], ["158", "156"], ["162", "161"], ["76", "79"], ["79", "86"], ["79", "63"], ["82", "79"], ["85", "82"], ["111", "118"], ["164", "162"], ["86", "85"], ["113", "111"], ["118", "124"], ["121", "133"], ["121", "147"], ["127", "124"], ["123", "121"], ["124", "123"], ["131", "143"], ["131", "127"], ["132", "131"], ["143", "147"], ["133", "138"], ["136", "132"], ["138", "136"], ["21", "26"], ["22", "168"], ["24", "168"], ["27", "168"], ["27", "168"], ["32", "168"], ["39", "168"], ["37", "168"], ["37", "168"], ["42", "168"], ["42", "168"], ["42", "168"], ["46", "168"], ["46", "168"], ["51", "168"], ["54", "168"], ["54", "168"], ["60", "168"], ["91", "168"], ["96", "168"], ["99", "168"], ["99", "168"], ["99", "168"], ["106", "168"], ["106", "168"], ["106", "168"], ["111", "168"], ["113", "168"], ["111", "168"], ["111", "168"], ["118", "168"], ["121", "168"], ["124", "168"], ["123", "168"], ["121", "168"], ["121", "168"], ["132", "168"], ["136", "168"], ["138", "168"], ["136", "168"], ["132", "168"], ["131", "168"], ["131", "168"], ["131", "168"], ["127", "168"], ["143", "168"], ["102", "168"], ["152", "168"], ["152", "168"], ["152", "168"], ["155", "168"], ["66", "168"], ["66", "168"], ["71", "168"], ["71", "168"], ["76", "168"], ["79", "168"], ["79", "168"], ["63", "168"], ["85", "168"], ["85", "168"], ["82", "168"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["21", "46"], ["21", "51"], ["21", "91"], ["24", "27"], ["21", "27"], ["51", "54"], ["21", "54"], ["21", "57"], ["21", "96"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["21", "44"], ["57", "60"], ["63", "60"], ["21", "60"], ["60", "63"], ["21", "63"], ["71", "63"], ["96", "99"], ["102", "99"], ["21", "99"], ["32", "99"], ["106", "102"], ["113", "102"], ["21", "102"], ["91", "152"], ["147", "152"], ["21", "152"], ["37", "152"], ["147", "152"], ["21", "155"], ["42", "66"], ["21", "161"], ["54", "71"], ["21", "71"], ["60", "71"], ["71", "76"], ["21", "76"], ["21", "82"], ["71", "82"], ["21", "85"], ["54", "106"], ["124", "106"], ["136", "106"], ["71", "106"], ["21", "106"], ["99", "106"], ["113", "111"], ["113", "111"], ["91", "147"], ["143", "147"], ["21", "147"], ["37", "147"], ["76", "79"], ["82", "79"], ["21", "79"], ["79", "82"], ["21", "118"], ["106", "113"], ["21", "113"], ["118", "121"], ["127", "121"], ["21", "121"], ["123", "121"], ["123", "121"], ["21", "127"], ["133", "127"], ["124", "123"], ["21", "123"], ["106", "124"], ["136", "124"], ["21", "124"], ["133", "131"], ["133", "131"], ["136", "131"], ["136", "131"], ["111", "131"], ["21", "131"], ["133", "132"], ["133", "132"], ["136", "132"], ["136", "132"], ["91", "143"], ["147", "143"], ["21", "143"], ["124", "133"], ["21", "133"], ["121", "133"], ["133", "136"], ["21", "136"], ["133", "136"], ["133", "138"], ["21", "138"], ["60", "60"], ["60", "66"], ["60", "67"], ["60", "63"], ["99", "106"], ["99", "147"], ["152", "161"], ["152", "162"], ["152", "164"], ["152", "155"], ["152", "156"], ["152", "158"], ["66", "76"], ["66", "79"], ["66", "71"], ["106", "113"], ["106", "121"], ["106", "123"], ["106", "118"], ["106", "124"], ["106", "111"], ["147", "99"], ["147", "102"], ["79", "85"], ["79", "82"], ["79", "79"], ["79", "86"], ["121", "136"], ["121", "131"], ["121", "132"], ["121", "138"], ["121", "133"], ["131", "121"], ["131", "123"], ["131", "143"], ["131", "127"], ["131", "124"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,boolean[] sieve: boolean[])<SUB>5</SUB>>", "43": "<(IDENTIFIER,sieve,boolean[] sieve = new boolean[1001])<SUB>5</SUB>>", "45": "<(LITERAL,1001,new boolean[1001])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,sieve[2])<SUB>6</SUB>>", "49": "<(LITERAL,2,sieve[2] = false)<SUB>6</SUB>>", "6": "<(LOCAL,ArrayList&lt;Integer&gt; primes: ANY)<SUB>7</SUB>>", "52": "<(IDENTIFIER,primes,ANY primes = new ArrayList&lt;Integer&gt;())<SUB>7</SUB>>", "54": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>7</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int x = 2; Some(x &lt; 1001); x++),for (int x = 2; Some(x &lt; 1001); x++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int x = 2)<SUB>8</SUB>>", "59": "<(LITERAL,2,int x = 2)<SUB>8</SUB>>", "61": "<(IDENTIFIER,x,x &lt; 1001)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,x++)<SUB>8</SUB>>", "65": "<(CONTROL_STRUCTURE,if (!sieve[x]),if (!sieve[x]))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,sieve[x])<SUB>9</SUB>>", "69": "<(IDENTIFIER,x,!sieve[x])<SUB>9</SUB>>", "71": "<(add,add(x))<SUB>11</SUB>>", "73": "<(IDENTIFIER,x,add(x))<SUB>11</SUB>>", "75": "<(LOCAL,int y: int)<SUB>12</SUB>>", "77": "<(IDENTIFIER,y,int y = x)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.lessThan,y &lt; 1001)<SUB>12</SUB>>", "81": "<(LITERAL,1001,y &lt; 1001)<SUB>12</SUB>>", "83": "<(IDENTIFIER,y,y += x)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,sieve[y] = true)<SUB>13</SUB>>", "87": "<(IDENTIFIER,sieve,sieve[y] = true)<SUB>13</SUB>>", "89": "<(LITERAL,true,sieve[y] = true)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>15</SUB>>", "93": "<(LITERAL,0,int sum = 0)<SUB>15</SUB>>", "95": "<(LOCAL,int x: int)<SUB>16</SUB>>", "97": "<(IDENTIFIER,x,int x = 2)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.lessEqualsThan,x &lt;= n)<SUB>16</SUB>>", "101": "<(IDENTIFIER,n,x &lt;= n)<SUB>16</SUB>>", "103": "<(IDENTIFIER,x,x++)<SUB>16</SUB>>", "105": "<(CONTROL_STRUCTURE,if (primes.contains(x)),if (primes.contains(x)))<SUB>18</SUB>>", "107": "<(IDENTIFIER,primes,contains(x))<SUB>18</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,int need = x - 1)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.subtraction,x - 1)<SUB>20</SUB>>", "115": "<(LITERAL,1,x - 1)<SUB>20</SUB>>", "117": "<(LOCAL,int y: int)<SUB>21</SUB>>", "119": "<(IDENTIFIER,y,int y = 0)<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.lessThan,y &lt; primes.size() - 1)<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.subtraction,primes.size() - 1)<SUB>21</SUB>>", "125": "<(IDENTIFIER,primes,size())<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,y++)<SUB>21</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.equals,primes.get(y) + primes.get(y + 1) == need)<SUB>23</SUB>>", "133": "<(get,get(y))<SUB>23</SUB>>", "135": "<(IDENTIFIER,y,get(y))<SUB>23</SUB>>", "137": "<(IDENTIFIER,primes,get(y + 1))<SUB>23</SUB>>", "139": "<(IDENTIFIER,y,y + 1)<SUB>23</SUB>>", "141": "<(IDENTIFIER,need,primes.get(y) + primes.get(y + 1) == need)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,sum++)<SUB>25</SUB>>", "145": "<(CONTROL_STRUCTURE,break;,break;)<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.equals,sum == k)<SUB>30</SUB>>", "149": "<(IDENTIFIER,k,sum == k)<SUB>30</SUB>>", "151": "<(CONTROL_STRUCTURE,if (sum == k),if (sum == k))<SUB>32</SUB>>", "153": "<(IDENTIFIER,sum,sum == k)<SUB>32</SUB>>", "155": "<(println,System.out.println(&quot;YES&quot;))<SUB>32</SUB>>", "157": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>32</SUB>>", "159": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>32</SUB>>", "161": "<(println,System.out.println(&quot;NO&quot;))<SUB>33</SUB>>", "163": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>33</SUB>>", "165": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>33</SUB>>", "167": "<(MODIFIER,STATIC)>"}}