{"edges": [["19", "20"], ["19", "21"], ["19", "152"], ["19", "153"], ["19", "154"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "60"], ["21", "100"], ["21", "101"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "82"], ["75", "85"], ["75", "87"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["115", "122"], ["115", "126"], ["115", "142"], ["118", "119"], ["118", "120"], ["120", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["126", "127"], ["126", "138"], ["127", "128"], ["127", "137"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["138", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["146", "151"], ["147", "148"], ["147", "149"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "62"], ["101", "107"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "57"], ["47", "44"], ["62", "65"], ["65", "72"], ["65", "103"], ["68", "65"], ["103", "101"], ["107", "110"], ["110", "154"], ["110", "120"], ["113", "110"], ["28", "26"], ["50", "47"], ["72", "79"], ["118", "124"], ["122", "131"], ["142", "113"], ["51", "54"], ["54", "50"], ["77", "82"], ["82", "90"], ["82", "68"], ["85", "82"], ["120", "118"], ["124", "122"], ["127", "139"], ["127", "145"], ["143", "147"], ["146", "142"], ["79", "77"], ["128", "127"], ["139", "145"], ["145", "143"], ["147", "146"], ["89", "97"], ["89", "85"], ["129", "128"], ["90", "93"], ["93", "89"], ["97", "85"], ["130", "129"], ["131", "130"], ["19", "24"], ["20", "154"], ["22", "154"], ["25", "154"], ["25", "154"], ["30", "154"], ["35", "154"], ["35", "154"], ["35", "154"], ["57", "154"], ["57", "154"], ["65", "154"], ["65", "154"], ["103", "154"], ["101", "154"], ["101", "154"], ["107", "154"], ["110", "154"], ["110", "154"], ["110", "154"], ["113", "154"], ["68", "154"], ["47", "154"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "57"], ["103", "101"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "62"], ["19", "107"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["62", "65"], ["68", "65"], ["19", "65"], ["44", "65"], ["82", "65"], ["19", "68"], ["65", "68"], ["19", "72"], ["32", "103"], ["54", "103"], ["19", "103"], ["107", "110"], ["113", "110"], ["19", "110"], ["101", "110"], ["110", "113"], ["19", "113"], ["120", "118"], ["124", "122"], ["65", "77"], ["19", "77"], ["19", "142"], ["32", "54"], ["19", "54"], ["77", "82"], ["85", "82"], ["19", "82"], ["65", "82"], ["82", "85"], ["19", "85"], ["103", "120"], ["124", "120"], ["19", "120"], ["120", "124"], ["19", "124"], ["128", "127"], ["128", "127"], ["19", "127"], ["19", "139"], ["19", "146"], ["65", "79"], ["19", "79"], ["129", "128"], ["129", "128"], ["19", "128"], ["57", "139"], ["147", "139"], ["97", "139"], ["57", "147"], ["139", "147"], ["97", "147"], ["19", "147"], ["35", "89"], ["50", "89"], ["19", "97"], ["131", "129"], ["131", "129"], ["19", "129"], ["57", "97"], ["131", "130"], ["131", "130"], ["19", "130"], ["122", "131"], ["19", "131"], ["118", "131"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["65", "68"], ["65", "77"], ["65", "72"], ["65", "65"], ["65", "82"], ["65", "79"], ["110", "120"], ["110", "113"], ["110", "145"], ["110", "146"], ["110", "122"], ["110", "128"], ["110", "131"], ["110", "142"], ["110", "129"], ["110", "143"], ["110", "130"], ["110", "118"], ["110", "147"], ["110", "110"], ["110", "127"], ["110", "124"], ["82", "89"], ["82", "85"], ["82", "82"], ["82", "93"], ["82", "90"], ["127", "139"], ["89", "97"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,s,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int parity = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int parity = 0)<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "71": "<(LOCAL,int count: int)<SUB>10</SUB>>", "73": "<(IDENTIFIER,count,int count = 0)<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.addition,i + 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,i + 1)<SUB>11</SUB>>", "83": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.lessThan,arr[j] &lt; arr[i])<SUB>12</SUB>>", "91": "<(IDENTIFIER,arr,arr[j] &lt; arr[i])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,arr[j] &lt; arr[i])<SUB>12</SUB>>", "97": "<(&lt;operators&gt;.assignmentXor,parity ^= 1)<SUB>13</SUB>>", "99": "<(LITERAL,1,parity ^= 1)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>17</SUB>>", "103": "<(nextInt,nextInt())<SUB>17</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "111": "<(IDENTIFIER,i,i &lt; m)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "117": "<(LOCAL,int r: int)<SUB>19</SUB>>", "119": "<(IDENTIFIER,l,int l = nextInt())<SUB>19</SUB>>", "121": "<(IDENTIFIER,s,nextInt())<SUB>19</SUB>>", "123": "<(IDENTIFIER,r,int r = nextInt())<SUB>19</SUB>>", "125": "<(IDENTIFIER,s,nextInt())<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.equals,((r - l + 1) / 2) % 2 == 1)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.division,(r - l + 1) / 2)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.subtraction,r - l)<SUB>20</SUB>>", "133": "<(IDENTIFIER,l,r - l)<SUB>20</SUB>>", "135": "<(LITERAL,2,(r - l + 1) / 2)<SUB>20</SUB>>", "137": "<(LITERAL,1,((r - l + 1) / 2) % 2 == 1)<SUB>20</SUB>>", "139": "<(&lt;operators&gt;.assignmentXor,parity ^= 1)<SUB>21</SUB>>", "141": "<(LITERAL,1,parity ^= 1)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "145": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.equals,parity == 1)<SUB>23</SUB>>", "149": "<(LITERAL,1,parity == 1)<SUB>23</SUB>>", "151": "<(LITERAL,&quot;even&quot;,parity == 1 ? &quot;odd&quot; : &quot;even&quot;)<SUB>23</SUB>>", "153": "<(MODIFIER,STATIC)>"}}