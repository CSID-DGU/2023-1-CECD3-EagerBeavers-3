{"edges": [["19", "21"], ["19", "333"], ["19", "334"], ["19", "335"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "30"], ["21", "34"], ["21", "37"], ["21", "39"], ["21", "43"], ["21", "47"], ["21", "50"], ["21", "112"], ["21", "125"], ["21", "128"], ["21", "132"], ["21", "253"], ["21", "259"], ["21", "264"], ["21", "265"], ["21", "270"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "67"], ["60", "75"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "85"], ["75", "87"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "93"], ["87", "96"], ["87", "101"], ["87", "108"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["108", "110"], ["108", "111"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "151"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "165"], ["163", "170"], ["163", "171"], ["163", "174"], ["163", "175"], ["163", "188"], ["163", "244"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "197"], ["190", "198"], ["190", "203"], ["191", "192"], ["191", "196"], ["192", "193"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "207"], ["203", "218"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "217"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["218", "219"], ["219", "220"], ["219", "227"], ["219", "228"], ["220", "221"], ["220", "226"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["228", "229"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["253", "254"], ["253", "255"], ["255", "256"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["259", "262"], ["262", "263"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "274"], ["270", "280"], ["271", "272"], ["271", "273"], ["274", "275"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["280", "281"], ["281", "282"], ["281", "287"], ["281", "291"], ["281", "295"], ["281", "300"], ["281", "303"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "289"], ["289", "290"], ["291", "292"], ["291", "293"], ["293", "294"], ["295", "296"], ["295", "297"], ["295", "298"], ["298", "299"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["303", "308"], ["303", "311"], ["303", "313"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["311", "312"], ["313", "314"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["318", "319"], ["318", "328"], ["319", "320"], ["319", "327"], ["320", "321"], ["320", "324"], ["321", "322"], ["321", "323"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["22", "25"], ["25", "28"], ["26", "32"], ["30", "36"], ["34", "37"], ["37", "41"], ["39", "45"], ["43", "47"], ["47", "52"], ["125", "130"], ["128", "134"], ["253", "262"], ["259", "267"], ["265", "271"], ["24", "22"], ["28", "26"], ["32", "30"], ["36", "34"], ["41", "39"], ["45", "43"], ["52", "55"], ["55", "62"], ["55", "114"], ["58", "55"], ["113", "122"], ["113", "125"], ["130", "128"], ["134", "137"], ["137", "144"], ["137", "256"], ["140", "137"], ["255", "253"], ["262", "259"], ["267", "265"], ["271", "278"], ["271", "285"], ["61", "68"], ["67", "77"], ["114", "113"], ["119", "124"], ["124", "335"], ["143", "153"], ["256", "255"], ["275", "335"], ["62", "65"], ["65", "61"], ["68", "72"], ["71", "67"], ["77", "82"], ["80", "91"], ["80", "58"], ["85", "82"], ["120", "119"], ["144", "148"], ["147", "143"], ["153", "158"], ["156", "167"], ["156", "140"], ["161", "158"], ["276", "275"], ["282", "289"], ["287", "293"], ["291", "298"], ["295", "300"], ["300", "305"], ["72", "71"], ["82", "80"], ["89", "93"], ["93", "97"], ["96", "103"], ["101", "108"], ["108", "85"], ["122", "120"], ["148", "147"], ["158", "156"], ["165", "171"], ["171", "180"], ["175", "245"], ["175", "193"], ["278", "276"], ["283", "282"], ["289", "287"], ["293", "291"], ["298", "295"], ["305", "308"], ["308", "335"], ["308", "317"], ["311", "308"], ["91", "89"], ["97", "96"], ["102", "101"], ["167", "165"], ["177", "175"], ["245", "248"], ["245", "161"], ["246", "161"], ["285", "283"], ["314", "311"], ["103", "102"], ["179", "177"], ["198", "204"], ["247", "246"], ["315", "321"], ["318", "314"], ["180", "184"], ["183", "179"], ["192", "245"], ["192", "200"], ["200", "198"], ["204", "213"], ["204", "223"], ["248", "247"], ["317", "315"], ["319", "329"], ["328", "318"], ["184", "183"], ["193", "192"], ["208", "245"], ["320", "319"], ["329", "328"], ["210", "208"], ["220", "245"], ["220", "232"], ["321", "324"], ["324", "320"], ["212", "210"], ["221", "220"], ["213", "212"], ["223", "221"], ["230", "240"], ["235", "245"], ["235", "193"], ["232", "230"], ["237", "235"], ["239", "237"], ["240", "239"], ["19", "24"], ["124", "335"], ["20", "335"], ["22", "335"], ["25", "335"], ["28", "335"], ["26", "335"], ["26", "335"], ["30", "335"], ["30", "335"], ["30", "335"], ["34", "335"], ["37", "335"], ["37", "335"], ["39", "335"], ["39", "335"], ["39", "335"], ["43", "335"], ["43", "335"], ["43", "335"], ["47", "335"], ["52", "335"], ["55", "335"], ["55", "335"], ["114", "335"], ["114", "335"], ["113", "335"], ["113", "335"], ["119", "335"], ["65", "335"], ["61", "335"], ["61", "335"], ["67", "335"], ["67", "335"], ["67", "335"], ["77", "335"], ["80", "335"], ["80", "335"], ["80", "335"], ["58", "335"], ["91", "335"], ["89", "335"], ["89", "335"], ["93", "335"], ["96", "335"], ["96", "335"], ["101", "335"], ["101", "335"], ["108", "335"], ["108", "335"], ["108", "335"], ["85", "335"], ["19", "20"], ["19", "22"], ["28", "26"], ["32", "30"], ["19", "34"], ["41", "39"], ["45", "43"], ["19", "47"], ["114", "125"], ["19", "125"], ["130", "128"], ["255", "253"], ["267", "265"], ["267", "265"], ["22", "25"], ["19", "25"], ["34", "37"], ["19", "37"], ["19", "52"], ["114", "125"], ["19", "134"], ["19", "259"], ["253", "259"], ["262", "259"], ["25", "28"], ["19", "28"], ["26", "32"], ["19", "32"], ["32", "41"], ["19", "41"], ["41", "45"], ["19", "45"], ["52", "55"], ["58", "55"], ["19", "55"], ["45", "55"], ["55", "58"], ["108", "58"], ["19", "58"], ["65", "61"], ["71", "67"], ["114", "113"], ["114", "113"], ["19", "113"], ["19", "124"], ["19", "130"], ["114", "130"], ["134", "137"], ["140", "137"], ["19", "137"], ["130", "137"], ["137", "140"], ["167", "140"], ["204", "140"], ["19", "140"], ["147", "143"], ["256", "255"], ["256", "255"], ["19", "262"], ["19", "267"], ["265", "271"], ["19", "271"], ["19", "77"], ["47", "114"], ["93", "114"], ["19", "114"], ["55", "114"], ["19", "119"], ["19", "153"], ["19", "256"], ["137", "256"], ["19", "275"], ["289", "287"], ["293", "291"], ["28", "65"], ["91", "65"], ["19", "65"], ["30", "71"], ["61", "71"], ["77", "80"], ["85", "80"], ["19", "80"], ["30", "80"], ["71", "80"], ["80", "85"], ["19", "85"], ["91", "89"], ["89", "93"], ["19", "93"], ["19", "96"], ["89", "96"], ["19", "101"], ["89", "101"], ["30", "147"], ["156", "147"], ["80", "147"], ["153", "156"], ["161", "156"], ["19", "156"], ["30", "156"], ["147", "156"], ["156", "161"], ["19", "161"], ["167", "165"], ["167", "165"], ["19", "171"], ["177", "175"], ["177", "175"], ["19", "282"], ["259", "295"], ["19", "295"], ["287", "295"], ["298", "295"], ["267", "300"], ["19", "300"], ["19", "305"], ["47", "93"], ["43", "96"], ["37", "108"], ["19", "108"], ["89", "108"], ["55", "108"], ["19", "189"], ["19", "245"], ["165", "246"], ["221", "246"], ["230", "246"], ["19", "246"], ["256", "289"], ["19", "289"], ["289", "293"], ["19", "293"], ["19", "298"], ["305", "308"], ["311", "308"], ["19", "308"], ["293", "308"], ["308", "311"], ["19", "311"], ["65", "91"], ["19", "91"], ["19", "167"], ["137", "167"], ["204", "167"], ["125", "177"], ["237", "177"], ["19", "177"], ["179", "177"], ["179", "177"], ["200", "198"], ["200", "198"], ["282", "314"], ["19", "314"], ["291", "314"], ["43", "179"], ["96", "179"], ["210", "179"], ["101", "179"], ["19", "318"], ["291", "318"], ["193", "192"], ["193", "192"], ["193", "200"], ["19", "200"], ["193", "200"], ["198", "204"], ["19", "204"], ["167", "204"], ["210", "208"], ["210", "208"], ["19", "319"], ["291", "328"], ["19", "328"], ["37", "193"], ["200", "193"], ["108", "193"], ["19", "193"], ["175", "193"], ["235", "193"], ["200", "210"], ["19", "210"], ["179", "210"], ["221", "220"], ["221", "220"], ["19", "220"], ["165", "221"], ["230", "221"], ["19", "221"], ["223", "221"], ["223", "221"], ["232", "230"], ["232", "230"], ["237", "235"], ["237", "235"], ["19", "223"], ["204", "223"], ["221", "230"], ["19", "230"], ["19", "232"], ["223", "232"], ["177", "237"], ["19", "237"], ["239", "237"], ["239", "237"], ["43", "239"], ["200", "239"], ["19", "239"], ["55", "68"], ["55", "80"], ["55", "61"], ["55", "72"], ["55", "65"], ["55", "71"], ["55", "55"], ["55", "77"], ["55", "67"], ["55", "58"], ["55", "82"], ["55", "62"], ["113", "120"], ["113", "128"], ["113", "256"], ["113", "262"], ["113", "134"], ["113", "122"], ["113", "253"], ["113", "119"], ["113", "255"], ["113", "259"], ["113", "137"], ["113", "267"], ["113", "130"], ["113", "265"], ["113", "271"], ["113", "124"], ["113", "125"], ["137", "148"], ["137", "158"], ["137", "140"], ["137", "147"], ["137", "153"], ["137", "144"], ["137", "137"], ["137", "143"], ["137", "156"], ["271", "308"], ["271", "283"], ["271", "298"], ["271", "300"], ["271", "276"], ["271", "278"], ["271", "305"], ["271", "282"], ["271", "275"], ["271", "291"], ["271", "285"], ["271", "289"], ["271", "293"], ["271", "295"], ["271", "287"], ["80", "102"], ["80", "93"], ["80", "80"], ["80", "108"], ["80", "96"], ["80", "85"], ["80", "103"], ["80", "97"], ["80", "91"], ["80", "101"], ["80", "89"], ["80", "82"], ["156", "167"], ["156", "161"], ["156", "184"], ["156", "180"], ["156", "158"], ["156", "177"], ["156", "179"], ["156", "245"], ["156", "171"], ["156", "183"], ["156", "165"], ["156", "175"], ["156", "156"], ["156", "192"], ["156", "193"], ["308", "308"], ["308", "317"], ["308", "324"], ["308", "315"], ["308", "329"], ["308", "311"], ["308", "328"], ["308", "321"], ["308", "319"], ["308", "320"], ["308", "314"], ["308", "318"], ["245", "247"], ["245", "246"], ["245", "248"], ["192", "204"], ["192", "200"], ["192", "198"], ["204", "213"], ["204", "208"], ["204", "223"], ["204", "212"], ["204", "221"], ["204", "210"], ["204", "220"], ["220", "230"], ["220", "240"], ["220", "237"], ["220", "232"], ["220", "239"], ["220", "235"], ["220", "192"], ["220", "193"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FS())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FS())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FS())<SUB>2</SUB>>", "27": "<(IDENTIFIER,K,K = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "31": "<(IDENTIFIER,sz,sz = new int[K])<SUB>4</SUB>>", "33": "<(IDENTIFIER,K,new int[K])<SUB>4</SUB>>", "35": "<(IDENTIFIER,valToBucket,valToBucket = new HashMap&lt;Long, Integer&gt;())<SUB>5</SUB>>", "37": "<(&lt;init&gt;,new HashMap&lt;Long, Integer&gt;())<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,vs = new long[K][])<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.alloc,new long[K][])>", "43": "<(&lt;operator&gt;.assignment,curSum = new long[K])<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.alloc,new long[K])>", "47": "<(&lt;operator&gt;.assignment,sum = 0)<SUB>8</SUB>>", "49": "<(LITERAL,0,sum = 0)<SUB>8</SUB>>", "51": "<(LOCAL,int i: int)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; K)<SUB>9</SUB>>", "57": "<(IDENTIFIER,K,i &lt; K)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,sz[i] = nextInt())<SUB>10</SUB>>", "63": "<(IDENTIFIER,sz,sz[i] = nextInt())<SUB>10</SUB>>", "65": "<(nextInt,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,vs[i] = new long[sz[i]])<SUB>11</SUB>>", "69": "<(IDENTIFIER,vs,vs[i] = new long[sz[i]])<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.alloc,new long[sz[i]])>", "73": "<(IDENTIFIER,sz,new long[sz[i]])<SUB>11</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; sz[i]); j++),for (int j = 0; Some(j &lt; sz[i]); j++))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "79": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "81": "<(IDENTIFIER,j,j &lt; sz[i])<SUB>12</SUB>>", "83": "<(IDENTIFIER,sz,j &lt; sz[i])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,long v = nextLong())<SUB>13</SUB>>", "91": "<(nextLong,nextLong())<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignmentPlus,sum += v)<SUB>14</SUB>>", "95": "<(IDENTIFIER,v,sum += v)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,curSum[i])<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,curSum[i] += v)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,vs[i][j] = v)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,vs[i])<SUB>16</SUB>>", "105": "<(IDENTIFIER,i,vs[i][j] = v)<SUB>16</SUB>>", "107": "<(IDENTIFIER,v,vs[i][j] = v)<SUB>16</SUB>>", "109": "<(IDENTIFIER,valToBucket,put(v, i))<SUB>17</SUB>>", "111": "<(IDENTIFIER,i,put(v, i))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.notEquals,sum % K != 0)<SUB>21</SUB>>", "115": "<(IDENTIFIER,sum,sum % K)<SUB>21</SUB>>", "117": "<(LITERAL,0,sum % K != 0)<SUB>21</SUB>>", "119": "<(println,System.out.println(&quot;No&quot;))<SUB>22</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(&quot;No&quot;))<SUB>22</SUB>>", "123": "<(LITERAL,&quot;No&quot;,System.out.println(&quot;No&quot;))<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.assignmentDivision,sum /= K)<SUB>26</SUB>>", "127": "<(IDENTIFIER,K,sum /= K)<SUB>26</SUB>>", "129": "<(IDENTIFIER,maskIfPick,maskIfPick = new int[K][])<SUB>27</SUB>>", "131": "<(IDENTIFIER,K,new int[K][])<SUB>27</SUB>>", "133": "<(LOCAL,int i: int)<SUB>29</SUB>>", "135": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; K)<SUB>29</SUB>>", "139": "<(IDENTIFIER,K,i &lt; K)<SUB>29</SUB>>", "141": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.assignment,maskIfPick[i] = new int[sz[i]])<SUB>30</SUB>>", "145": "<(IDENTIFIER,maskIfPick,maskIfPick[i] = new int[sz[i]])<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.alloc,new int[sz[i]])>", "149": "<(IDENTIFIER,sz,new int[sz[i]])<SUB>30</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; sz[i]); j++),for (int j = 0; Some(j &lt; sz[i]); j++))<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>31</SUB>>", "155": "<(LITERAL,0,int j = 0)<SUB>31</SUB>>", "157": "<(IDENTIFIER,j,j &lt; sz[i])<SUB>31</SUB>>", "159": "<(IDENTIFIER,sz,j &lt; sz[i])<SUB>31</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,j++)<SUB>31</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.assignment,int mask = 1 &lt;&lt; i)<SUB>33</SUB>>", "167": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>33</SUB>>", "169": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>33</SUB>>", "171": "<(&lt;operator&gt;.assignment,boolean works = false)<SUB>34</SUB>>", "173": "<(LITERAL,false,boolean works = false)<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.assignment,long curLookfor = sum - (curSum[i] - vs[i][j]))<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.subtraction,sum - (curSum[i] - vs[i][j]))<SUB>35</SUB>>", "179": "<(&lt;operator&gt;.subtraction,curSum[i] - vs[i][j])<SUB>35</SUB>>", "181": "<(IDENTIFIER,curSum,curSum[i] - vs[i][j])<SUB>35</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,vs[i][j])<SUB>35</SUB>>", "185": "<(IDENTIFIER,vs,curSum[i] - vs[i][j])<SUB>35</SUB>>", "187": "<(IDENTIFIER,j,curSum[i] - vs[i][j])<SUB>35</SUB>>", "189": "<(LITERAL,true,while (true))<SUB>36</SUB>>", "191": "<(CONTROL_STRUCTURE,if (!valToBucket.containsKey(curLookfor)),if (!valToBucket.containsKey(curLookfor)))<SUB>37</SUB>>", "193": "<(containsKey,containsKey(curLookfor))<SUB>37</SUB>>", "195": "<(IDENTIFIER,curLookfor,containsKey(curLookfor))<SUB>37</SUB>>", "197": "<(LOCAL,int nextBucket: int)<SUB>38</SUB>>", "199": "<(IDENTIFIER,nextBucket,int nextBucket = get(curLookfor))<SUB>38</SUB>>", "201": "<(IDENTIFIER,valToBucket,get(curLookfor))<SUB>38</SUB>>", "203": "<(CONTROL_STRUCTURE,if (nextBucket == i),if (nextBucket == i))<SUB>39</SUB>>", "205": "<(IDENTIFIER,nextBucket,nextBucket == i)<SUB>39</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "209": "<(IDENTIFIER,works,works = curLookfor == vs[i][j])<SUB>40</SUB>>", "211": "<(IDENTIFIER,curLookfor,curLookfor == vs[i][j])<SUB>40</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,vs[i])<SUB>40</SUB>>", "215": "<(IDENTIFIER,i,curLookfor == vs[i][j])<SUB>40</SUB>>", "217": "<(CONTROL_STRUCTURE,break;,break;)<SUB>41</SUB>>", "219": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; nextBucket)) &gt; 0),if ((mask &amp; (1 &lt;&lt; nextBucket)) &gt; 0))<SUB>43</SUB>>", "221": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; nextBucket))<SUB>43</SUB>>", "223": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; nextBucket)<SUB>43</SUB>>", "225": "<(IDENTIFIER,nextBucket,1 &lt;&lt; nextBucket)<SUB>43</SUB>>", "227": "<(CONTROL_STRUCTURE,break;,break;)<SUB>43</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "231": "<(IDENTIFIER,mask,mask |= 1 &lt;&lt; nextBucket)<SUB>45</SUB>>", "233": "<(LITERAL,1,1 &lt;&lt; nextBucket)<SUB>45</SUB>>", "235": "<(&lt;operator&gt;.assignment,curLookfor = sum - (curSum[nextBucket] - curLookfor))<SUB>46</SUB>>", "237": "<(&lt;operator&gt;.subtraction,sum - (curSum[nextBucket] - curLookfor))<SUB>46</SUB>>", "239": "<(&lt;operator&gt;.subtraction,curSum[nextBucket] - curLookfor)<SUB>46</SUB>>", "241": "<(IDENTIFIER,curSum,curSum[nextBucket] - curLookfor)<SUB>46</SUB>>", "243": "<(IDENTIFIER,curLookfor,curSum[nextBucket] - curLookfor)<SUB>46</SUB>>", "245": "<(IDENTIFIER,works,if (works))<SUB>49</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,maskIfPick[i][j])<SUB>49</SUB>>", "249": "<(IDENTIFIER,maskIfPick,maskIfPick[i][j] = mask)<SUB>49</SUB>>", "251": "<(IDENTIFIER,j,maskIfPick[i][j] = mask)<SUB>49</SUB>>", "253": "<(&lt;operator&gt;.assignment,dp = new int[1 &lt;&lt; K])<SUB>53</SUB>>", "255": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; K])>", "257": "<(LITERAL,1,1 &lt;&lt; K)<SUB>53</SUB>>", "259": "<(fill,fill(dp, -1))<SUB>54</SUB>>", "261": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>54</SUB>>", "263": "<(LITERAL,1,-1)<SUB>54</SUB>>", "265": "<(&lt;operator&gt;.assignment,int res = go(0))<SUB>55</SUB>>", "267": "<(go,go(0))<SUB>55</SUB>>", "269": "<(LITERAL,0,go(0))<SUB>55</SUB>>", "271": "<(&lt;operator&gt;.equals,res == 0)<SUB>56</SUB>>", "273": "<(LITERAL,0,res == 0)<SUB>56</SUB>>", "275": "<(println,System.out.println(&quot;No&quot;))<SUB>57</SUB>>", "277": "<(IDENTIFIER,System,System.out.println(&quot;No&quot;))<SUB>57</SUB>>", "279": "<(LITERAL,&quot;No&quot;,System.out.println(&quot;No&quot;))<SUB>57</SUB>>", "281": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "283": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>60</SUB>>", "285": "<(FIELD_IDENTIFIER,out,out)<SUB>60</SUB>>", "287": "<(&lt;operator&gt;.assignment,pickId = new int[K])<SUB>61</SUB>>", "289": "<(&lt;operator&gt;.alloc,new int[K])>", "291": "<(&lt;operator&gt;.assignment,newBox = new int[K])<SUB>62</SUB>>", "293": "<(&lt;operator&gt;.alloc,new int[K])>", "295": "<(fill,fill(pickId, -1))<SUB>63</SUB>>", "297": "<(IDENTIFIER,pickId,fill(pickId, -1))<SUB>63</SUB>>", "299": "<(LITERAL,1,-1)<SUB>63</SUB>>", "301": "<(IDENTIFIER,this,buildback(0))<SUB>64</SUB>>", "303": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; K); i++),for (int i = 0; Some(i &lt; K); i++))<SUB>65</SUB>>", "305": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>65</SUB>>", "307": "<(LITERAL,0,int i = 0)<SUB>65</SUB>>", "309": "<(IDENTIFIER,i,i &lt; K)<SUB>65</SUB>>", "311": "<(&lt;operator&gt;.postIncrement,i++)<SUB>65</SUB>>", "313": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>65</SUB>>", "315": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>66</SUB>>", "317": "<(FIELD_IDENTIFIER,out,out)<SUB>66</SUB>>", "319": "<(&lt;operator&gt;.addition,vs[i][pickId[i]] + &quot; &quot;)<SUB>66</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,vs[i])<SUB>66</SUB>>", "323": "<(IDENTIFIER,i,vs[i][pickId[i]] + &quot; &quot;)<SUB>66</SUB>>", "325": "<(IDENTIFIER,pickId,vs[i][pickId[i]] + &quot; &quot;)<SUB>66</SUB>>", "327": "<(LITERAL,&quot; &quot;,vs[i][pickId[i]] + &quot; &quot;)<SUB>66</SUB>>", "329": "<(&lt;operator&gt;.indexAccess,newBox[i])<SUB>66</SUB>>", "331": "<(IDENTIFIER,i,newBox[i] + 1)<SUB>66</SUB>>", "333": "<(MODIFIER,PUBLIC)>", "335": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}