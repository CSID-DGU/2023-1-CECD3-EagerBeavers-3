{"edges": [["19", "21"], ["19", "95"], ["19", "96"], ["19", "97"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "55"], ["21", "58"], ["21", "59"], ["21", "62"], ["21", "78"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "76"], ["67", "68"], ["67", "75"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["76", "77"], ["78", "79"], ["78", "82"], ["78", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["55", "59"], ["59", "63"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "50"], ["44", "55"], ["47", "44"], ["49", "47"], ["63", "69"], ["63", "79"], ["79", "85"], ["79", "91"], ["82", "97"], ["28", "26"], ["50", "53"], ["53", "49"], ["76", "63"], ["83", "82"], ["88", "97"], ["68", "79"], ["68", "76"], ["85", "83"], ["89", "92"], ["92", "88"], ["69", "72"], ["72", "68"], ["91", "89"], ["19", "24"], ["20", "97"], ["22", "97"], ["25", "97"], ["25", "97"], ["32", "97"], ["30", "97"], ["30", "97"], ["35", "97"], ["35", "97"], ["55", "97"], ["55", "97"], ["59", "97"], ["63", "97"], ["68", "97"], ["68", "97"], ["68", "97"], ["76", "97"], ["79", "97"], ["79", "97"], ["79", "97"], ["82", "97"], ["49", "97"], ["53", "97"], ["49", "97"], ["49", "97"], ["47", "97"], ["55", "97"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "59"], ["22", "25"], ["19", "25"], ["19", "41"], ["53", "49"], ["19", "55"], ["35", "55"], ["49", "55"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["59", "63"], ["76", "63"], ["19", "63"], ["44", "63"], ["63", "79"], ["19", "79"], ["63", "79"], ["19", "82"], ["32", "53"], ["19", "53"], ["63", "76"], ["19", "76"], ["55", "88"], ["68", "88"], ["49", "88"], ["55", "68"], ["49", "68"], ["44", "47"], ["44", "49"], ["44", "53"], ["44", "50"], ["44", "44"], ["63", "68"], ["63", "72"], ["63", "69"], ["79", "83"], ["79", "89"], ["79", "85"], ["79", "88"], ["79", "92"], ["79", "91"], ["79", "82"], ["68", "63"], ["68", "76"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,cin,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,cin,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] num = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,num[i] = nextInt())<SUB>7</SUB>>", "51": "<(IDENTIFIER,num,num[i] = nextInt())<SUB>7</SUB>>", "53": "<(nextInt,nextInt())<SUB>7</SUB>>", "55": "<(sort,sort(num))<SUB>9</SUB>>", "57": "<(IDENTIFIER,num,sort(num))<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "65": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "67": "<(CONTROL_STRUCTURE,if (num[i] != num[0]),if (num[i] != num[0]))<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>13</SUB>>", "71": "<(IDENTIFIER,i,num[i] != num[0])<SUB>13</SUB>>", "73": "<(IDENTIFIER,num,num[i] != num[0])<SUB>13</SUB>>", "75": "<(CONTROL_STRUCTURE,break;,break;)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.equals,i == n)<SUB>17</SUB>>", "81": "<(IDENTIFIER,n,i == n)<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "85": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "87": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "91": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "93": "<(IDENTIFIER,num,System.out.println(num[i]))<SUB>18</SUB>>", "95": "<(MODIFIER,PUBLIC)>", "97": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}