{"edges": [["23", "25"], ["23", "139"], ["23", "140"], ["23", "141"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "47"], ["25", "50"], ["25", "53"], ["25", "54"], ["25", "60"], ["25", "61"], ["25", "67"], ["25", "68"], ["25", "71"], ["25", "72"], ["25", "75"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "7"], ["50", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["79", "88"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "102"], ["88", "111"], ["89", "90"], ["89", "101"], ["90", "91"], ["90", "98"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["112", "126"], ["112", "132"], ["113", "114"], ["113", "125"], ["114", "115"], ["114", "122"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["126", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "49"], ["47", "51"], ["50", "58"], ["54", "65"], ["61", "68"], ["68", "72"], ["72", "76"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["51", "50"], ["56", "54"], ["63", "61"], ["76", "141"], ["76", "84"], ["31", "38"], ["34", "29"], ["46", "44"], ["58", "56"], ["65", "63"], ["81", "94"], ["33", "31"], ["36", "34"], ["83", "81"], ["89", "106"], ["89", "118"], ["38", "36"], ["84", "83"], ["90", "89"], ["103", "110"], ["110", "141"], ["91", "98"], ["98", "90"], ["104", "107"], ["107", "103"], ["113", "129"], ["113", "136"], ["92", "91"], ["106", "104"], ["114", "113"], ["127", "76"], ["94", "92"], ["115", "122"], ["122", "114"], ["129", "127"], ["134", "76"], ["116", "115"], ["136", "134"], ["118", "116"], ["23", "28"], ["110", "141"], ["24", "141"], ["26", "141"], ["31", "141"], ["34", "141"], ["34", "141"], ["34", "141"], ["29", "141"], ["40", "141"], ["43", "141"], ["43", "141"], ["47", "141"], ["51", "141"], ["50", "141"], ["50", "141"], ["54", "141"], ["63", "141"], ["65", "141"], ["63", "141"], ["61", "141"], ["61", "141"], ["68", "141"], ["72", "141"], ["76", "141"], ["84", "141"], ["84", "141"], ["83", "141"], ["81", "141"], ["81", "141"], ["92", "141"], ["91", "141"], ["90", "141"], ["89", "141"], ["89", "141"], ["89", "141"], ["113", "141"], ["134", "141"], ["127", "141"], ["127", "141"], ["103", "141"], ["107", "141"], ["107", "141"], ["103", "141"], ["103", "141"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "47"], ["56", "54"], ["56", "54"], ["63", "61"], ["63", "61"], ["23", "68"], ["54", "72"], ["23", "72"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["47", "50"], ["23", "50"], ["51", "50"], ["23", "31"], ["23", "39"], ["29", "51"], ["23", "51"], ["23", "56"], ["58", "56"], ["56", "63"], ["23", "63"], ["65", "63"], ["68", "76"], ["134", "76"], ["23", "76"], ["72", "76"], ["127", "76"], ["83", "81"], ["83", "81"], ["31", "34"], ["23", "34"], ["50", "58"], ["23", "58"], ["58", "65"], ["23", "65"], ["76", "83"], ["23", "83"], ["76", "83"], ["90", "89"], ["90", "89"], ["61", "89"], ["113", "89"], ["23", "89"], ["23", "110"], ["76", "84"], ["23", "84"], ["76", "84"], ["91", "90"], ["91", "90"], ["98", "90"], ["98", "90"], ["43", "103"], ["107", "103"], ["107", "103"], ["92", "91"], ["92", "91"], ["23", "91"], ["122", "98"], ["23", "98"], ["54", "98"], ["92", "98"], ["98", "107"], ["23", "107"], ["98", "107"], ["114", "113"], ["114", "113"], ["89", "113"], ["23", "113"], ["129", "127"], ["129", "127"], ["23", "92"], ["81", "92"], ["115", "114"], ["115", "114"], ["122", "114"], ["122", "114"], ["122", "134"], ["23", "134"], ["81", "94"], ["23", "94"], ["116", "115"], ["116", "115"], ["23", "115"], ["98", "122"], ["23", "122"], ["116", "122"], ["122", "129"], ["23", "129"], ["23", "116"], ["98", "116"], ["122", "136"], ["23", "136"], ["98", "118"], ["23", "118"], ["76", "94"], ["76", "89"], ["76", "98"], ["76", "81"], ["76", "84"], ["76", "92"], ["76", "91"], ["76", "90"], ["76", "83"], ["89", "107"], ["89", "115"], ["89", "113"], ["89", "116"], ["89", "122"], ["89", "114"], ["89", "103"], ["89", "104"], ["89", "106"], ["89", "76"], ["89", "118"], ["89", "110"], ["113", "136"], ["113", "129"], ["113", "134"], ["113", "127"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY writer = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,writer,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "48": "<(IDENTIFIER,st,ANY st = new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "50": "<(&lt;init&gt;,new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "51": "<(readLine,readLine())<SUB>4</SUB>>", "53": "<(LOCAL,long n: long)<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,long n = parseInt(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "59": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,long k = parseInt(st.nextToken()))<SUB>6</SUB>>", "63": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "65": "<(nextToken,nextToken())<SUB>6</SUB>>", "67": "<(LOCAL,long l: long)<SUB>7</SUB>>", "69": "<(IDENTIFIER,l,long l = 0)<SUB>7</SUB>>", "71": "<(LOCAL,long r: long)<SUB>8</SUB>>", "73": "<(IDENTIFIER,r,long r = n)<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,while (l &lt;= r),while (l &lt;= r))<SUB>9</SUB>>", "77": "<(IDENTIFIER,l,l &lt;= r)<SUB>9</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,long min = (l + r) / 2)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.division,(l + r) / 2)<SUB>10</SUB>>", "85": "<(IDENTIFIER,l,l + r)<SUB>10</SUB>>", "87": "<(LITERAL,2,(l + r) / 2)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.equals,min * (min + 1) / 2 - (n - min) == k)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.division,min * (min + 1) / 2)<SUB>11</SUB>>", "93": "<(IDENTIFIER,min,min * (min + 1))<SUB>11</SUB>>", "95": "<(IDENTIFIER,min,min + 1)<SUB>11</SUB>>", "97": "<(LITERAL,2,min * (min + 1) / 2)<SUB>11</SUB>>", "99": "<(IDENTIFIER,n,n - min)<SUB>11</SUB>>", "101": "<(IDENTIFIER,k,min * (min + 1) / 2 - (n - min) == k)<SUB>11</SUB>>", "103": "<(println,System.out.println(n - min))<SUB>12</SUB>>", "105": "<(IDENTIFIER,System,System.out.println(n - min))<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.subtraction,n - min)<SUB>12</SUB>>", "109": "<(IDENTIFIER,min,n - min)<SUB>12</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.greaterThan,min * (min + 1) / 2 - (n - min) &gt; k)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.division,min * (min + 1) / 2)<SUB>15</SUB>>", "117": "<(IDENTIFIER,min,min * (min + 1))<SUB>15</SUB>>", "119": "<(IDENTIFIER,min,min + 1)<SUB>15</SUB>>", "121": "<(LITERAL,2,min * (min + 1) / 2)<SUB>15</SUB>>", "123": "<(IDENTIFIER,n,n - min)<SUB>15</SUB>>", "125": "<(IDENTIFIER,k,min * (min + 1) / 2 - (n - min) &gt; k)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.assignment,r = min - 1)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.subtraction,min - 1)<SUB>16</SUB>>", "131": "<(LITERAL,1,min - 1)<SUB>16</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "135": "<(IDENTIFIER,l,l = min + 1)<SUB>19</SUB>>", "137": "<(IDENTIFIER,min,min + 1)<SUB>19</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}