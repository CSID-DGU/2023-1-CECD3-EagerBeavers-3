{"edges": [["19", "21"], ["19", "223"], ["19", "224"], ["19", "225"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "33"], ["21", "37"], ["21", "42"], ["21", "47"], ["21", "68"], ["21", "69"], ["21", "73"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "67"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "88"], ["83", "92"], ["83", "95"], ["83", "96"], ["83", "97"], ["83", "100"], ["83", "139"], ["83", "140"], ["83", "147"], ["83", "166"], ["83", "167"], ["83", "180"], ["83", "216"], ["84", "85"], ["84", "86"], ["86", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["92", "93"], ["92", "94"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "107"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "136"], ["108", "109"], ["108", "120"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["120", "121"], ["120", "124"], ["120", "135"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "159"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "177"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "197"], ["180", "204"], ["181", "182"], ["181", "194"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["204", "205"], ["205", "206"], ["205", "213"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["214", "215"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["22", "28"], ["25", "35"], ["33", "38"], ["37", "43"], ["42", "49"], ["69", "75"], ["24", "22"], ["26", "25"], ["35", "33"], ["38", "37"], ["43", "42"], ["49", "52"], ["52", "58"], ["52", "71"], ["55", "52"], ["57", "55"], ["71", "69"], ["75", "78"], ["78", "225"], ["78", "86"], ["81", "78"], ["28", "26"], ["58", "64"], ["61", "57"], ["84", "90"], ["88", "92"], ["92", "97"], ["97", "102"], ["140", "149"], ["167", "183"], ["216", "81"], ["62", "61"], ["86", "84"], ["90", "88"], ["102", "105"], ["105", "114"], ["105", "143"], ["142", "140"], ["148", "163"], ["148", "171"], ["169", "167"], ["181", "201"], ["181", "207"], ["217", "220"], ["220", "216"], ["64", "62"], ["136", "105"], ["143", "142"], ["149", "148"], ["149", "153"], ["152", "148"], ["160", "81"], ["170", "177"], ["177", "169"], ["182", "181"], ["182", "194"], ["194", "181"], ["198", "81"], ["219", "217"], ["109", "121"], ["109", "136"], ["153", "152"], ["153", "156"], ["156", "152"], ["161", "160"], ["171", "174"], ["174", "170"], ["183", "182"], ["183", "189"], ["186", "182"], ["199", "198"], ["206", "214"], ["206", "219"], ["110", "109"], ["121", "130"], ["163", "161"], ["187", "192"], ["192", "186"], ["201", "199"], ["207", "206"], ["207", "210"], ["210", "206"], ["214", "219"], ["111", "110"], ["126", "124"], ["189", "187"], ["112", "111"], ["128", "126"], ["114", "112"], ["129", "128"], ["130", "129"], ["19", "24"], ["20", "225"], ["22", "225"], ["25", "225"], ["25", "225"], ["33", "225"], ["33", "225"], ["33", "225"], ["37", "225"], ["37", "225"], ["42", "225"], ["42", "225"], ["49", "225"], ["52", "225"], ["52", "225"], ["71", "225"], ["69", "225"], ["69", "225"], ["75", "225"], ["78", "225"], ["78", "225"], ["78", "225"], ["81", "225"], ["55", "225"], ["19", "20"], ["19", "22"], ["35", "33"], ["19", "37"], ["19", "42"], ["71", "69"], ["22", "25"], ["19", "25"], ["19", "49"], ["61", "57"], ["61", "57"], ["19", "75"], ["19", "35"], ["49", "52"], ["55", "52"], ["19", "52"], ["64", "55"], ["19", "55"], ["25", "71"], ["19", "71"], ["75", "78"], ["81", "78"], ["19", "78"], ["69", "78"], ["78", "81"], ["19", "81"], ["86", "84"], ["90", "88"], ["84", "92"], ["19", "92"], ["19", "97"], ["142", "140"], ["142", "140"], ["169", "167"], ["169", "167"], ["33", "61"], ["19", "61"], ["19", "102"], ["198", "216"], ["160", "216"], ["19", "216"], ["207", "216"], ["214", "216"], ["71", "86"], ["90", "86"], ["19", "86"], ["86", "90"], ["19", "90"], ["102", "105"], ["19", "105"], ["19", "136"], ["143", "142"], ["143", "142"], ["19", "142"], ["149", "148"], ["149", "148"], ["152", "148"], ["152", "148"], ["170", "169"], ["177", "169"], ["177", "169"], ["182", "181"], ["182", "181"], ["194", "181"], ["194", "181"], ["19", "220"], ["207", "220"], ["214", "220"], ["52", "64"], ["19", "64"], ["97", "136"], ["97", "143"], ["136", "143"], ["19", "143"], ["92", "149"], ["19", "149"], ["153", "152"], ["153", "152"], ["156", "152"], ["156", "152"], ["216", "160"], ["198", "160"], ["19", "160"], ["171", "170"], ["171", "170"], ["174", "170"], ["174", "170"], ["174", "177"], ["19", "177"], ["140", "177"], ["183", "182"], ["183", "182"], ["186", "182"], ["186", "182"], ["156", "194"], ["189", "194"], ["210", "194"], ["19", "194"], ["177", "194"], ["216", "198"], ["160", "198"], ["19", "198"], ["110", "109"], ["110", "109"], ["88", "109"], ["19", "109"], ["19", "121"], ["105", "121"], ["126", "124"], ["126", "124"], ["149", "153"], ["19", "153"], ["189", "156"], ["194", "156"], ["210", "156"], ["19", "156"], ["177", "171"], ["189", "171"], ["19", "171"], ["143", "171"], ["171", "174"], ["19", "174"], ["171", "174"], ["149", "183"], ["153", "183"], ["19", "183"], ["187", "186"], ["187", "186"], ["192", "186"], ["207", "206"], ["207", "206"], ["210", "206"], ["210", "206"], ["111", "110"], ["111", "110"], ["19", "110"], ["92", "121"], ["167", "187"], ["19", "187"], ["189", "187"], ["189", "187"], ["19", "192"], ["183", "207"], ["19", "207"], ["156", "210"], ["189", "210"], ["194", "210"], ["19", "210"], ["177", "210"], ["194", "210"], ["207", "214"], ["19", "214"], ["33", "111"], ["19", "111"], ["109", "126"], ["19", "126"], ["128", "126"], ["128", "126"], ["177", "189"], ["19", "189"], ["156", "189"], ["194", "189"], ["210", "189"], ["129", "128"], ["129", "128"], ["19", "128"], ["105", "114"], ["19", "114"], ["33", "129"], ["57", "129"], ["19", "129"], ["52", "64"], ["52", "57"], ["52", "52"], ["52", "58"], ["52", "61"], ["52", "55"], ["52", "62"], ["78", "81"], ["78", "84"], ["78", "102"], ["78", "149"], ["78", "92"], ["78", "97"], ["78", "148"], ["78", "90"], ["78", "88"], ["78", "86"], ["78", "142"], ["78", "140"], ["78", "143"], ["78", "105"], ["78", "78"], ["105", "136"], ["105", "114"], ["105", "112"], ["105", "111"], ["105", "105"], ["105", "110"], ["105", "109"], ["148", "167"], ["148", "169"], ["148", "161"], ["148", "163"], ["148", "170"], ["148", "181"], ["148", "174"], ["148", "182"], ["148", "171"], ["148", "160"], ["148", "183"], ["148", "177"], ["181", "198"], ["181", "206"], ["181", "207"], ["181", "201"], ["181", "217"], ["181", "220"], ["181", "199"], ["181", "216"], ["181", "219"], ["149", "153"], ["149", "152"], ["182", "194"], ["153", "156"], ["183", "192"], ["183", "189"], ["183", "187"], ["183", "186"], ["206", "214"], ["207", "210"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sca = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sca,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long k: long)<SUB>3</SUB>>", "31": "<(LOCAL,long ans: long)<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,long[] pw = new long[33])<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.alloc,new long[33])>", "37": "<(&lt;operator&gt;.assignment,pw[1] = 4)<SUB>6</SUB>>", "39": "<(IDENTIFIER,pw,pw[1] = 4)<SUB>6</SUB>>", "41": "<(LITERAL,4,pw[1] = 4)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.indexAccess,pw[0])<SUB>7</SUB>>", "45": "<(LITERAL,0,pw[0] = 1)<SUB>7</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= 31); i++),for (int i = 2; Some(i &lt;= 31); i++))<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>8</SUB>>", "51": "<(LITERAL,2,int i = 2)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,i &lt;= 31)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,pw[i] = pw[i - 1] &lt;&lt; 2)<SUB>9</SUB>>", "59": "<(IDENTIFIER,pw,pw[i] = pw[i - 1] &lt;&lt; 2)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.shiftLeft,pw[i - 1] &lt;&lt; 2)<SUB>9</SUB>>", "63": "<(IDENTIFIER,pw,pw[i - 1] &lt;&lt; 2)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i - 1)<SUB>9</SUB>>", "67": "<(LITERAL,2,pw[i - 1] &lt;&lt; 2)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>11</SUB>>", "71": "<(nextInt,nextInt())<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int cas = 1; Some(cas &lt;= t); cas++),for (int cas = 1; Some(cas &lt;= t); cas++))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,int cas = 1)<SUB>12</SUB>>", "77": "<(LITERAL,1,int cas = 1)<SUB>12</SUB>>", "79": "<(IDENTIFIER,cas,cas &lt;= t)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,cas++)<SUB>12</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "85": "<(IDENTIFIER,n,n = nextLong())<SUB>13</SUB>>", "87": "<(IDENTIFIER,sca,nextLong())<SUB>13</SUB>>", "89": "<(IDENTIFIER,k,k = nextLong())<SUB>14</SUB>>", "91": "<(IDENTIFIER,sca,nextLong())<SUB>14</SUB>>", "93": "<(IDENTIFIER,ans,ans = n)<SUB>15</SUB>>", "95": "<(LOCAL,long last: long)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.assignment,long path = 1)<SUB>16</SUB>>", "99": "<(LITERAL,1,long path = 1)<SUB>16</SUB>>", "101": "<(LOCAL,int i: int)<SUB>17</SUB>>", "103": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.greaterThan,(pw[i + 1] - 1) / 3 &gt; k)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.subtraction,pw[i + 1] - 1)<SUB>18</SUB>>", "113": "<(IDENTIFIER,pw,pw[i + 1] - 1)<SUB>18</SUB>>", "115": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "117": "<(LITERAL,1,pw[i + 1] - 1)<SUB>18</SUB>>", "119": "<(IDENTIFIER,k,(pw[i + 1] - 1) / 3 &gt; k)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.assignmentMinus,ans -= i)<SUB>19</SUB>>", "123": "<(IDENTIFIER,i,ans -= i)<SUB>19</SUB>>", "125": "<(IDENTIFIER,last,last = k - (pw[i] - 1) / 3)<SUB>20</SUB>>", "127": "<(IDENTIFIER,k,k - (pw[i] - 1) / 3)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.subtraction,pw[i] - 1)<SUB>20</SUB>>", "131": "<(IDENTIFIER,pw,pw[i] - 1)<SUB>20</SUB>>", "133": "<(LITERAL,1,pw[i] - 1)<SUB>20</SUB>>", "135": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "137": "<(IDENTIFIER,path,path *= 2)<SUB>23</SUB>>", "139": "<(LOCAL,long sp: long)<SUB>25</SUB>>", "141": "<(IDENTIFIER,sp,long sp = path * 2 - 1)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.multiplication,path * 2)<SUB>25</SUB>>", "145": "<(LITERAL,2,path * 2)<SUB>25</SUB>>", "147": "<(CONTROL_STRUCTURE,if (ans &lt; 0 || (ans == 0 &amp;&amp; last &gt; 0)),if (ans &lt; 0 || (ans == 0 &amp;&amp; last &gt; 0)))<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.lessThan,ans &lt; 0)<SUB>26</SUB>>", "151": "<(LITERAL,0,ans &lt; 0)<SUB>26</SUB>>", "153": "<(&lt;operator&gt;.equals,ans == 0)<SUB>26</SUB>>", "155": "<(LITERAL,0,ans == 0)<SUB>26</SUB>>", "157": "<(IDENTIFIER,last,last &gt; 0)<SUB>26</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "163": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "165": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.assignment,ANY sq = subtract(BigInteger.valueOf(sp)))<SUB>30</SUB>>", "169": "<(subtract,subtract(BigInteger.valueOf(sp)))<SUB>30</SUB>>", "171": "<(valueOf,valueOf(path))<SUB>30</SUB>>", "173": "<(IDENTIFIER,path,valueOf(path))<SUB>30</SUB>>", "175": "<(IDENTIFIER,BigInteger,valueOf(path))<SUB>30</SUB>>", "177": "<(valueOf,valueOf(sp))<SUB>30</SUB>>", "179": "<(IDENTIFIER,sp,valueOf(sp))<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.logicalAnd,ans == 1 &amp;&amp; sq.compareTo(BigInteger.valueOf(last)) == -1 &amp;&amp; last &lt; sp)<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.equals,ans == 1)<SUB>31</SUB>>", "185": "<(LITERAL,1,ans == 1)<SUB>31</SUB>>", "187": "<(compareTo,compareTo(BigInteger.valueOf(last)))<SUB>31</SUB>>", "189": "<(valueOf,valueOf(last))<SUB>31</SUB>>", "191": "<(IDENTIFIER,last,valueOf(last))<SUB>31</SUB>>", "193": "<(LITERAL,1,-1)<SUB>31</SUB>>", "195": "<(IDENTIFIER,last,last &lt; sp)<SUB>31</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "201": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "203": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>33</SUB>>", "205": "<(CONTROL_STRUCTURE,if (ans == 1 &amp;&amp; last &gt;= sp),if (ans == 1 &amp;&amp; last &gt;= sp))<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.equals,ans == 1)<SUB>34</SUB>>", "209": "<(LITERAL,1,ans == 1)<SUB>34</SUB>>", "211": "<(IDENTIFIER,last,last &gt;= sp)<SUB>34</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "215": "<(IDENTIFIER,ans,ans--)<SUB>35</SUB>>", "217": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>37</SUB>>", "219": "<(FIELD_IDENTIFIER,out,out)<SUB>37</SUB>>", "221": "<(LITERAL,&quot;YES &quot;,&quot;YES &quot; + ans)<SUB>37</SUB>>", "223": "<(MODIFIER,PUBLIC)>", "225": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}