{"edges": [["17", "18"], ["17", "19"], ["17", "134"], ["17", "135"], ["17", "136"], ["19", "20"], ["19", "23"], ["19", "42"], ["19", "45"], ["19", "50"], ["19", "54"], ["19", "58"], ["19", "63"], ["19", "101"], ["19", "102"], ["19", "105"], ["19", "127"], ["19", "132"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "41"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "76"], ["73", "82"], ["73", "88"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "87"], ["85", "86"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "112"], ["105", "115"], ["105", "117"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "124"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["20", "28"], ["23", "44"], ["42", "49"], ["45", "52"], ["50", "56"], ["54", "60"], ["58", "65"], ["102", "109"], ["127", "132"], ["132", "136"], ["22", "20"], ["44", "42"], ["47", "45"], ["52", "50"], ["56", "54"], ["60", "58"], ["65", "68"], ["68", "79"], ["68", "102"], ["71", "68"], ["107", "112"], ["112", "121"], ["112", "129"], ["115", "112"], ["129", "127"], ["26", "34"], ["29", "23"], ["49", "47"], ["76", "85"], ["82", "90"], ["88", "71"], ["109", "107"], ["119", "124"], ["124", "115"], ["28", "26"], ["78", "76"], ["84", "82"], ["89", "96"], ["94", "88"], ["121", "119"], ["32", "39"], ["35", "29"], ["79", "78"], ["85", "84"], ["90", "89"], ["95", "94"], ["34", "32"], ["37", "35"], ["96", "95"], ["39", "37"], ["17", "22"], ["18", "136"], ["20", "136"], ["23", "136"], ["29", "136"], ["32", "136"], ["35", "136"], ["35", "136"], ["35", "136"], ["29", "136"], ["23", "136"], ["42", "136"], ["45", "136"], ["45", "136"], ["50", "136"], ["56", "136"], ["54", "136"], ["54", "136"], ["58", "136"], ["58", "136"], ["58", "136"], ["65", "136"], ["68", "136"], ["68", "136"], ["102", "136"], ["109", "136"], ["107", "136"], ["107", "136"], ["112", "136"], ["112", "136"], ["129", "136"], ["127", "136"], ["127", "136"], ["132", "136"], ["132", "136"], ["121", "136"], ["119", "136"], ["119", "136"], ["124", "136"], ["124", "136"], ["115", "136"], ["76", "136"], ["76", "136"], ["82", "136"], ["85", "136"], ["84", "136"], ["82", "136"], ["82", "136"], ["88", "136"], ["94", "136"], ["88", "136"], ["88", "136"], ["71", "136"], ["17", "18"], ["17", "20"], ["17", "42"], ["52", "50"], ["56", "54"], ["60", "58"], ["17", "102"], ["20", "23"], ["17", "23"], ["32", "23"], ["29", "23"], ["42", "45"], ["17", "45"], ["17", "65"], ["109", "107"], ["109", "107"], ["45", "127"], ["17", "127"], ["129", "127"], ["129", "127"], ["127", "132"], ["17", "132"], ["17", "26"], ["17", "41"], ["17", "52"], ["52", "56"], ["17", "56"], ["50", "60"], ["17", "60"], ["65", "68"], ["71", "68"], ["17", "68"], ["54", "68"], ["68", "71"], ["17", "71"], ["78", "76"], ["78", "76"], ["84", "82"], ["84", "82"], ["94", "88"], ["17", "88"], ["107", "112"], ["115", "112"], ["17", "112"], ["121", "115"], ["17", "115"], ["121", "119"], ["121", "119"], ["119", "124"], ["17", "124"], ["102", "129"], ["124", "129"], ["17", "129"], ["26", "29"], ["17", "29"], ["32", "29"], ["35", "29"], ["60", "109"], ["17", "109"], ["102", "124"], ["17", "32"], ["17", "40"], ["79", "78"], ["17", "78"], ["85", "84"], ["17", "84"], ["17", "94"], ["56", "121"], ["85", "121"], ["17", "121"], ["112", "121"], ["32", "35"], ["17", "35"], ["56", "79"], ["85", "79"], ["17", "79"], ["79", "85"], ["17", "85"], ["68", "94"], ["68", "68"], ["68", "96"], ["68", "89"], ["68", "71"], ["68", "84"], ["68", "85"], ["68", "88"], ["68", "95"], ["68", "76"], ["68", "82"], ["68", "90"], ["68", "78"], ["68", "79"], ["112", "115"], ["112", "119"], ["112", "121"], ["112", "112"], ["112", "124"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "39": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "49": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "51": "<(IDENTIFIER,n,n = nextInt())<SUB>5</SUB>>", "53": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "55": "<(IDENTIFIER,m,m = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,this,nextInt())<SUB>6</SUB>>", "59": "<(IDENTIFIER,g,g = new boolean[n][n])<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,new boolean[n][n])<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i &lt; m)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(LOCAL,int b: int)<SUB>10</SUB>>", "77": "<(IDENTIFIER,a,int a = nextInt() - 1)<SUB>10</SUB>>", "79": "<(nextInt,nextInt())<SUB>10</SUB>>", "81": "<(LITERAL,1,nextInt() - 1)<SUB>10</SUB>>", "83": "<(IDENTIFIER,b,int b = nextInt() - 1)<SUB>10</SUB>>", "85": "<(nextInt,nextInt())<SUB>10</SUB>>", "87": "<(LITERAL,1,nextInt() - 1)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,g[a][b])<SUB>11</SUB>>", "91": "<(IDENTIFIER,g,g[a][b] = g[b][a] = true)<SUB>11</SUB>>", "93": "<(IDENTIFIER,b,g[a][b] = g[b][a] = true)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,g[b][a])<SUB>11</SUB>>", "97": "<(IDENTIFIER,g,g[b][a] = true)<SUB>11</SUB>>", "99": "<(IDENTIFIER,a,g[b][a] = true)<SUB>11</SUB>>", "101": "<(LOCAL,long ans: long)<SUB>14</SUB>>", "103": "<(IDENTIFIER,ans,long ans = 0)<SUB>14</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); i--),for (int i = n - 1; Some(i &gt;= 0); i--))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>15</SUB>>", "111": "<(LITERAL,1,n - 1)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,i &gt;= 0)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.postDecrement,i--)<SUB>15</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,long cur = solve(i))<SUB>16</SUB>>", "121": "<(solve,solve(i))<SUB>16</SUB>>", "123": "<(IDENTIFIER,i,solve(i))<SUB>16</SUB>>", "125": "<(IDENTIFIER,ans,ans += cur)<SUB>17</SUB>>", "127": "<(println,println(ans / 2))<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.division,ans / 2)<SUB>20</SUB>>", "131": "<(LITERAL,2,ans / 2)<SUB>20</SUB>>", "133": "<(IDENTIFIER,out,flush())<SUB>22</SUB>>", "135": "<(MODIFIER,STATIC)>"}}