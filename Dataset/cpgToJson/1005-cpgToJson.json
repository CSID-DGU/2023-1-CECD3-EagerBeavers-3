{"edges": [["19", "21"], ["19", "193"], ["19", "194"], ["19", "195"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "88"], ["21", "120"], ["21", "121"], ["21", "130"], ["21", "131"], ["21", "140"], ["21", "141"], ["21", "145"], ["21", "146"], ["21", "149"], ["21", "156"], ["21", "166"], ["21", "182"], ["21", "185"], ["21", "188"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "55"], ["45", "57"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "70"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["66", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "83"], ["75", "76"], ["75", "82"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["78", "81"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "98"], ["88", "100"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "117"], ["102", "103"], ["102", "112"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["141", "142"], ["141", "143"], ["143", "144"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["174", "177"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["39", "47"], ["85", "90"], ["121", "135"], ["131", "143"], ["141", "146"], ["146", "150"], ["166", "182"], ["182", "185"], ["185", "191"], ["188", "195"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "43"], ["43", "39"], ["47", "54"], ["50", "59"], ["50", "85"], ["55", "54"], ["90", "97"], ["93", "108"], ["93", "127"], ["98", "97"], ["123", "121"], ["133", "131"], ["143", "141"], ["150", "153"], ["150", "159"], ["153", "159"], ["157", "164"], ["157", "173"], ["162", "173"], ["168", "166"], ["189", "188"], ["28", "26"], ["52", "50"], ["58", "71"], ["70", "55"], ["95", "93"], ["125", "123"], ["134", "133"], ["159", "157"], ["164", "162"], ["170", "168"], ["191", "189"], ["54", "52"], ["59", "65"], ["62", "58"], ["71", "77"], ["74", "70"], ["97", "95"], ["102", "117"], ["102", "98"], ["117", "98"], ["127", "125"], ["135", "134"], ["172", "170"], ["64", "62"], ["75", "74"], ["103", "102"], ["103", "114"], ["112", "102"], ["173", "178"], ["174", "172"], ["65", "66"], ["66", "64"], ["76", "75"], ["105", "103"], ["114", "112"], ["177", "174"], ["77", "78"], ["78", "76"], ["106", "105"], ["178", "177"], ["108", "106"], ["19", "24"], ["20", "195"], ["22", "195"], ["25", "195"], ["25", "195"], ["32", "195"], ["30", "195"], ["30", "195"], ["35", "195"], ["35", "195"], ["35", "195"], ["39", "195"], ["39", "195"], ["85", "195"], ["90", "195"], ["93", "195"], ["93", "195"], ["93", "195"], ["123", "195"], ["123", "195"], ["121", "195"], ["121", "195"], ["134", "195"], ["133", "195"], ["131", "195"], ["131", "195"], ["141", "195"], ["141", "195"], ["146", "195"], ["150", "195"], ["153", "195"], ["157", "195"], ["162", "195"], ["162", "195"], ["168", "195"], ["170", "195"], ["174", "195"], ["177", "195"], ["177", "195"], ["174", "195"], ["172", "195"], ["170", "195"], ["168", "195"], ["166", "195"], ["166", "195"], ["182", "195"], ["182", "195"], ["188", "195"], ["188", "195"], ["188", "195"], ["105", "195"], ["103", "195"], ["102", "195"], ["112", "195"], ["102", "195"], ["102", "195"], ["117", "195"], ["98", "195"], ["58", "195"], ["58", "195"], ["70", "195"], ["76", "195"], ["75", "195"], ["74", "195"], ["70", "195"], ["70", "195"], ["55", "195"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["43", "39"], ["19", "85"], ["123", "121"], ["123", "121"], ["133", "131"], ["133", "131"], ["143", "141"], ["19", "146"], ["168", "166"], ["168", "166"], ["146", "182"], ["153", "182"], ["162", "182"], ["19", "182"], ["19", "185"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "90"], ["19", "153"], ["164", "162"], ["166", "182"], ["182", "185"], ["185", "188"], ["19", "188"], ["25", "32"], ["19", "32"], ["19", "37"], ["19", "43"], ["47", "50"], ["55", "50"], ["19", "50"], ["35", "50"], ["78", "55"], ["19", "55"], ["62", "58"], ["62", "58"], ["74", "70"], ["74", "70"], ["90", "93"], ["98", "93"], ["19", "93"], ["35", "93"], ["50", "93"], ["108", "98"], ["19", "98"], ["30", "123"], ["103", "123"], ["112", "123"], ["19", "123"], ["35", "123"], ["134", "133"], ["134", "133"], ["19", "133"], ["127", "133"], ["19", "143"], ["131", "150"], ["19", "150"], ["150", "157"], ["19", "157"], ["159", "157"], ["159", "157"], ["19", "168"], ["121", "168"], ["170", "168"], ["170", "168"], ["35", "70"], ["58", "70"], ["108", "117"], ["19", "117"], ["121", "134"], ["19", "134"], ["127", "134"], ["133", "159"], ["19", "159"], ["19", "164"], ["178", "170"], ["19", "170"], ["174", "170"], ["174", "170"], ["174", "170"], ["66", "62"], ["19", "62"], ["66", "62"], ["66", "62"], ["75", "74"], ["75", "74"], ["19", "74"], ["103", "102"], ["103", "102"], ["112", "102"], ["112", "102"], ["85", "127"], ["117", "127"], ["19", "127"], ["121", "135"], ["19", "135"], ["127", "135"], ["19", "172"], ["174", "172"], ["174", "172"], ["174", "172"], ["19", "64"], ["66", "64"], ["66", "64"], ["66", "64"], ["19", "75"], ["78", "75"], ["78", "75"], ["78", "75"], ["30", "103"], ["112", "103"], ["19", "103"], ["35", "103"], ["103", "112"], ["19", "112"], ["35", "112"], ["70", "112"], ["78", "174"], ["19", "174"], ["177", "174"], ["177", "174"], ["78", "66"], ["19", "66"], ["50", "66"], ["19", "76"], ["78", "76"], ["78", "76"], ["78", "76"], ["35", "105"], ["19", "105"], ["178", "177"], ["178", "177"], ["157", "177"], ["19", "177"], ["66", "78"], ["19", "78"], ["62", "78"], ["159", "178"], ["19", "178"], ["93", "108"], ["19", "108"], ["50", "77"], ["50", "64"], ["50", "66"], ["50", "75"], ["50", "52"], ["50", "74"], ["50", "76"], ["50", "65"], ["50", "50"], ["50", "59"], ["50", "54"], ["50", "58"], ["50", "71"], ["50", "70"], ["50", "55"], ["50", "78"], ["50", "62"], ["93", "98"], ["93", "102"], ["93", "103"], ["93", "95"], ["93", "106"], ["93", "97"], ["93", "93"], ["93", "105"], ["93", "108"], ["150", "153"], ["157", "162"], ["157", "164"], ["102", "117"], ["103", "114"], ["103", "112"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long k: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,k,long k = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long[] end = new long[12])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[12])>", "39": "<(&lt;operator&gt;.assignment,end[0] = -1)<SUB>5</SUB>>", "41": "<(IDENTIFIER,end,end[0] = -1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.minus,-1)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; end.length); i++),for (int i = 1; Some(i &lt; end.length); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "49": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; end.length)<SUB>6</SUB>>", "53": "<(IDENTIFIER,end,i &lt; end.length)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,end[i])<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,end[i] = i * (long) (Math.pow(10, i)))<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i * (long) (Math.pow(10, i)))<SUB>7</SUB>>", "65": "<(TYPE_REF,long,long)<SUB>7</SUB>>", "67": "<(IDENTIFIER,Math,Math.pow(10, i))<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,Math.pow(10, i))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,end[i])<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,end[i] -= ((long) (Math.pow(10, i)) - 1) / 9)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.subtraction,(long) (Math.pow(10, i)) - 1)<SUB>8</SUB>>", "77": "<(TYPE_REF,long,long)<SUB>8</SUB>>", "79": "<(IDENTIFIER,Math,Math.pow(10, i))<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,Math.pow(10, i))<SUB>8</SUB>>", "83": "<(LITERAL,9,((long) (Math.pow(10, i)) - 1) / 9)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.assignment,int st = 0)<SUB>11</SUB>>", "87": "<(LITERAL,0,int st = 0)<SUB>11</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; end.length)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.fieldAccess,end.length)<SUB>12</SUB>>", "97": "<(FIELD_IDENTIFIER,length,length)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "101": "<(CONTROL_STRUCTURE,if (k &gt;= end[i - 1] + 1 &amp;&amp; k &lt;= end[i]),if (k &gt;= end[i - 1] + 1 &amp;&amp; k &lt;= end[i]))<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.greaterEqualsThan,k &gt;= end[i - 1] + 1)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.addition,end[i - 1] + 1)<SUB>13</SUB>>", "107": "<(IDENTIFIER,end,end[i - 1] + 1)<SUB>13</SUB>>", "109": "<(IDENTIFIER,i,i - 1)<SUB>13</SUB>>", "111": "<(LITERAL,1,end[i - 1] + 1)<SUB>13</SUB>>", "113": "<(IDENTIFIER,k,k &lt;= end[i])<SUB>13</SUB>>", "115": "<(IDENTIFIER,end,k &lt;= end[i])<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.assignment,st = i)<SUB>13</SUB>>", "119": "<(IDENTIFIER,i,st = i)<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.assignment,long diff = k - end[st - 1])<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.subtraction,k - end[st - 1])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,end[st - 1])<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.subtraction,st - 1)<SUB>16</SUB>>", "129": "<(LITERAL,1,st - 1)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.assignment,long mod = (diff + st - 1) % st)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.modulo,(diff + st - 1) % st)<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.addition,diff + st)<SUB>17</SUB>>", "137": "<(IDENTIFIER,st,diff + st)<SUB>17</SUB>>", "139": "<(IDENTIFIER,st,(diff + st - 1) % st)<SUB>17</SUB>>", "141": "<(&lt;operator&gt;.assignment,long digit = -1)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "145": "<(LOCAL,int addOn: int)<SUB>21</SUB>>", "147": "<(IDENTIFIER,addOn,int addOn = 0)<SUB>21</SUB>>", "149": "<(CONTROL_STRUCTURE,if (mod == 0),if (mod == 0))<SUB>22</SUB>>", "151": "<(IDENTIFIER,mod,mod == 0)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,addOn = 1)<SUB>22</SUB>>", "155": "<(LITERAL,1,addOn = 1)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.equals,mod == st - 1)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.subtraction,st - 1)<SUB>23</SUB>>", "161": "<(LITERAL,1,st - 1)<SUB>23</SUB>>", "163": "<(IDENTIFIER,addOn,addOn = -1)<SUB>23</SUB>>", "165": "<(LITERAL,1,-1)<SUB>23</SUB>>", "167": "<(IDENTIFIER,digit,digit = diff / (st * (long) (Math.pow(10, st - 1 - mod))))<SUB>24</SUB>>", "169": "<(IDENTIFIER,diff,diff / (st * (long) (Math.pow(10, st - 1 - mod))))<SUB>24</SUB>>", "171": "<(IDENTIFIER,st,st * (long) (Math.pow(10, st - 1 - mod)))<SUB>24</SUB>>", "173": "<(TYPE_REF,long,long)<SUB>24</SUB>>", "175": "<(IDENTIFIER,Math,Math.pow(10, st - 1 - mod))<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.subtraction,st - 1 - mod)<SUB>24</SUB>>", "179": "<(IDENTIFIER,st,st - 1)<SUB>24</SUB>>", "181": "<(IDENTIFIER,mod,st - 1 - mod)<SUB>24</SUB>>", "183": "<(IDENTIFIER,digit,digit += addOn)<SUB>25</SUB>>", "185": "<(&lt;operators&gt;.assignmentModulo,digit %= 10)<SUB>26</SUB>>", "187": "<(LITERAL,10,digit %= 10)<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "191": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}