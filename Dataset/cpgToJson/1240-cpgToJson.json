{"edges": [["17", "18"], ["17", "19"], ["17", "178"], ["17", "179"], ["17", "180"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "41"], ["19", "44"], ["19", "63"], ["19", "64"], ["19", "68"], ["19", "69"], ["19", "73"], ["19", "74"], ["19", "78"], ["19", "79"], ["19", "86"], ["19", "87"], ["19", "94"], ["19", "95"], ["19", "100"], ["19", "101"], ["19", "173"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["46", "62"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "56"], ["52", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["64", "65"], ["64", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "105"], ["101", "109"], ["102", "103"], ["102", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["110", "114"], ["110", "115"], ["110", "120"], ["110", "121"], ["110", "135"], ["110", "145"], ["110", "154"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "127"], ["123", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "144"], ["138", "139"], ["138", "143"], ["139", "140"], ["139", "142"], ["140", "141"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "172"], ["157", "158"], ["157", "171"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["20", "28"], ["23", "37"], ["35", "38"], ["38", "43"], ["41", "49"], ["44", "66"], ["64", "71"], ["69", "76"], ["74", "82"], ["79", "91"], ["87", "97"], ["95", "102"], ["173", "180"], ["22", "20"], ["37", "35"], ["43", "41"], ["66", "64"], ["71", "69"], ["76", "74"], ["81", "79"], ["89", "87"], ["97", "95"], ["102", "106"], ["102", "111"], ["174", "173"], ["26", "33"], ["29", "23"], ["47", "55"], ["50", "44"], ["82", "83"], ["83", "81"], ["91", "89"], ["106", "176"], ["176", "174"], ["28", "26"], ["31", "29"], ["49", "47"], ["111", "117"], ["115", "124"], ["121", "140"], ["135", "151"], ["145", "162"], ["154", "176"], ["33", "31"], ["53", "60"], ["56", "50"], ["117", "115"], ["123", "121"], ["137", "135"], ["147", "145"], ["156", "154"], ["55", "53"], ["58", "56"], ["124", "129"], ["127", "132"], ["132", "123"], ["138", "137"], ["148", "147"], ["157", "156"], ["60", "58"], ["129", "127"], ["139", "138"], ["150", "148"], ["158", "157"], ["140", "139"], ["151", "150"], ["160", "158"], ["161", "167"], ["166", "160"], ["162", "163"], ["163", "161"], ["167", "168"], ["168", "166"], ["17", "22"], ["18", "180"], ["20", "180"], ["23", "180"], ["29", "180"], ["29", "180"], ["29", "180"], ["23", "180"], ["35", "180"], ["38", "180"], ["38", "180"], ["41", "180"], ["44", "180"], ["50", "180"], ["53", "180"], ["56", "180"], ["56", "180"], ["50", "180"], ["44", "180"], ["64", "180"], ["69", "180"], ["76", "180"], ["74", "180"], ["74", "180"], ["79", "180"], ["81", "180"], ["79", "180"], ["79", "180"], ["89", "180"], ["87", "180"], ["87", "180"], ["95", "180"], ["97", "180"], ["97", "180"], ["95", "180"], ["95", "180"], ["102", "180"], ["102", "180"], ["111", "180"], ["111", "180"], ["117", "180"], ["115", "180"], ["115", "180"], ["123", "180"], ["127", "180"], ["123", "180"], ["132", "180"], ["123", "180"], ["121", "180"], ["121", "180"], ["140", "180"], ["139", "180"], ["138", "180"], ["137", "180"], ["135", "180"], ["135", "180"], ["148", "180"], ["147", "180"], ["145", "180"], ["145", "180"], ["163", "180"], ["163", "180"], ["161", "180"], ["160", "180"], ["168", "180"], ["166", "180"], ["160", "180"], ["158", "180"], ["157", "180"], ["157", "180"], ["156", "180"], ["156", "180"], ["154", "180"], ["154", "180"], ["106", "180"], ["106", "180"], ["173", "180"], ["173", "180"], ["173", "180"], ["17", "18"], ["17", "20"], ["17", "35"], ["17", "41"], ["66", "64"], ["71", "69"], ["76", "74"], ["17", "79"], ["89", "87"], ["89", "87"], ["97", "95"], ["97", "95"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["41", "44"], ["17", "44"], ["53", "44"], ["50", "44"], ["56", "173"], ["154", "173"], ["106", "173"], ["17", "173"], ["17", "26"], ["17", "34"], ["17", "47"], ["17", "62"], ["17", "66"], ["66", "71"], ["17", "71"], ["71", "76"], ["17", "76"], ["17", "81"], ["91", "89"], ["17", "89"], ["91", "89"], ["89", "97"], ["17", "97"], ["91", "97"], ["87", "102"], ["17", "102"], ["69", "102"], ["102", "106"], ["17", "106"], ["26", "29"], ["17", "29"], ["47", "50"], ["17", "50"], ["53", "50"], ["56", "50"], ["17", "83"], ["64", "91"], ["17", "91"], ["74", "91"], ["102", "111"], ["17", "111"], ["117", "115"], ["117", "115"], ["123", "121"], ["123", "121"], ["123", "121"], ["137", "135"], ["137", "135"], ["147", "145"], ["147", "145"], ["156", "154"], ["156", "154"], ["17", "53"], ["17", "61"], ["102", "111"], ["53", "56"], ["17", "56"], ["97", "117"], ["17", "117"], ["97", "117"], ["124", "123"], ["124", "123"], ["127", "123"], ["127", "123"], ["132", "123"], ["132", "123"], ["139", "137"], ["139", "137"], ["132", "137"], ["17", "137"], ["148", "147"], ["148", "147"], ["137", "147"], ["17", "147"], ["145", "156"], ["17", "156"], ["160", "156"], ["160", "156"], ["95", "156"], ["147", "156"], ["17", "124"], ["124", "127"], ["17", "127"], ["111", "127"], ["127", "132"], ["17", "132"], ["79", "132"], ["139", "138"], ["139", "138"], ["132", "138"], ["17", "138"], ["135", "148"], ["17", "148"], ["117", "148"], ["145", "157"], ["17", "157"], ["160", "157"], ["160", "157"], ["95", "157"], ["111", "129"], ["17", "129"], ["140", "139"], ["17", "139"], ["17", "150"], ["117", "150"], ["145", "158"], ["17", "158"], ["160", "158"], ["160", "158"], ["121", "140"], ["17", "140"], ["17", "160"], ["163", "160"], ["163", "160"], ["168", "160"], ["168", "160"], ["17", "161"], ["163", "161"], ["163", "161"], ["17", "166"], ["168", "166"], ["168", "166"], ["115", "163"], ["17", "163"], ["111", "163"], ["17", "168"], ["117", "168"], ["102", "160"], ["102", "115"], ["102", "167"], ["102", "154"], ["102", "145"], ["102", "161"], ["102", "163"], ["102", "166"], ["102", "132"], ["102", "150"], ["102", "151"], ["102", "121"], ["102", "162"], ["102", "123"], ["102", "106"], ["102", "168"], ["102", "157"], ["102", "129"], ["102", "138"], ["102", "140"], ["102", "148"], ["102", "137"], ["102", "147"], ["102", "135"], ["102", "117"], ["102", "127"], ["102", "139"], ["102", "156"], ["102", "124"], ["102", "158"], ["102", "111"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(&quot;&quot;))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new StringTokenizer(&quot;&quot;))<SUB>3</SUB>>", "39": "<(IDENTIFIER,st,new StringTokenizer(&quot;&quot;))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "45": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "51": "<(IDENTIFIER,$obj4,new BufferedWriter(new OutputStreamWriter(System.out)))>", "53": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "55": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "57": "<(IDENTIFIER,$obj3,new OutputStreamWriter(System.out))>", "59": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "61": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "63": "<(LOCAL,int n: int)<SUB>5</SUB>>", "65": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "67": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "69": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "71": "<(nextInt,nextInt())<SUB>6</SUB>>", "73": "<(LOCAL,int k: int)<SUB>7</SUB>>", "75": "<(IDENTIFIER,k,int k = nextInt())<SUB>7</SUB>>", "77": "<(IDENTIFIER,this,nextInt())<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.assignment,int mod = (int) (1e9 + 9))<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.cast,(int) (1e9 + 9))<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.addition,1e9 + 9)<SUB>8</SUB>>", "85": "<(LITERAL,9,1e9 + 9)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.assignment,int correct = n - n / k)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.subtraction,n - n / k)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.division,n / k)<SUB>9</SUB>>", "93": "<(IDENTIFIER,k,n / k)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.assignment,int carry = n % k)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.modulo,n % k)<SUB>10</SUB>>", "99": "<(IDENTIFIER,k,n % k)<SUB>10</SUB>>", "101": "<(CONTROL_STRUCTURE,if (correct &gt;= m),if (correct &gt;= m))<SUB>12</SUB>>", "103": "<(IDENTIFIER,correct,correct &gt;= m)<SUB>12</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "107": "<(IDENTIFIER,ans,ans = m)<SUB>13</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.assignmentMinus,m -= correct)<SUB>15</SUB>>", "113": "<(IDENTIFIER,correct,m -= correct)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,int block = n / k)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.division,n / k)<SUB>16</SUB>>", "119": "<(IDENTIFIER,k,n / k)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.assignment,ANY pow = modPow(BigInteger.valueOf(m + 1), BigInteger.valueOf(mod)))<SUB>17</SUB>>", "123": "<(modPow,modPow(BigInteger.valueOf(m + 1), BigInteger.valueOf(mod)))<SUB>17</SUB>>", "125": "<(IDENTIFIER,BigInteger,valueOf(2))<SUB>17</SUB>>", "127": "<(valueOf,valueOf(m + 1))<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.addition,m + 1)<SUB>17</SUB>>", "131": "<(LITERAL,1,m + 1)<SUB>17</SUB>>", "133": "<(IDENTIFIER,BigInteger,valueOf(mod))<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.assignment,ans = (pow.longValue() - 2 + mod) % mod)<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.modulo,(pow.longValue() - 2 + mod) % mod)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.subtraction,pow.longValue() - 2)<SUB>18</SUB>>", "141": "<(IDENTIFIER,pow,longValue())<SUB>18</SUB>>", "143": "<(IDENTIFIER,mod,pow.longValue() - 2 + mod)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.assignment,ans = (ans * (long) k) % mod)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.modulo,(ans * (long) k) % mod)<SUB>19</SUB>>", "149": "<(IDENTIFIER,ans,ans * (long) k)<SUB>19</SUB>>", "151": "<(TYPE_REF,long,long)<SUB>19</SUB>>", "153": "<(IDENTIFIER,mod,(ans * (long) k) % mod)<SUB>19</SUB>>", "155": "<(IDENTIFIER,ans,ans = (ans + (long) (block - m) * (long) (k - 1) + carry) % mod)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.addition,ans + (long) (block - m) * (long) (k - 1) + carry)<SUB>20</SUB>>", "159": "<(IDENTIFIER,ans,ans + (long) (block - m) * (long) (k - 1))<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.cast,(long) (block - m))<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.subtraction,block - m)<SUB>20</SUB>>", "165": "<(IDENTIFIER,m,block - m)<SUB>20</SUB>>", "167": "<(TYPE_REF,long,long)<SUB>20</SUB>>", "169": "<(IDENTIFIER,k,k - 1)<SUB>20</SUB>>", "171": "<(IDENTIFIER,carry,ans + (long) (block - m) * (long) (k - 1) + carry)<SUB>20</SUB>>", "173": "<(println,System.out.println(ans))<SUB>22</SUB>>", "175": "<(IDENTIFIER,System,System.out.println(ans))<SUB>22</SUB>>", "177": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>22</SUB>>", "179": "<(MODIFIER,STATIC)>"}}