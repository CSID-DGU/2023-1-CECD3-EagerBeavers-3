{"edges": [["19", "21"], ["19", "293"], ["19", "294"], ["19", "295"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "44"], ["21", "51"], ["21", "55"], ["21", "73"], ["21", "111"], ["21", "112"], ["21", "113"], ["21", "284"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "37"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "43"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "72"], ["70", "71"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "90"], ["84", "101"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "98"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["113", "114"], ["113", "115"], ["113", "120"], ["113", "123"], ["113", "125"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "137"], ["126", "225"], ["127", "128"], ["127", "131"], ["127", "132"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["138", "139"], ["138", "142"], ["138", "182"], ["139", "140"], ["139", "141"], ["142", "143"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "181"], ["161", "162"], ["161", "174"], ["162", "163"], ["162", "166"], ["162", "167"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["182", "183"], ["183", "184"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "224"], ["202", "203"], ["202", "215"], ["203", "204"], ["203", "207"], ["203", "208"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["225", "226"], ["226", "227"], ["227", "228"], ["227", "231"], ["227", "256"], ["228", "229"], ["228", "230"], ["231", "232"], ["232", "233"], ["232", "234"], ["232", "237"], ["232", "240"], ["232", "242"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["240", "241"], ["242", "243"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["256", "257"], ["257", "258"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "266"], ["258", "268"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["268", "269"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "281"], ["276", "277"], ["276", "278"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["22", "28"], ["25", "31"], ["29", "34"], ["44", "53"], ["51", "57"], ["284", "295"], ["24", "22"], ["26", "25"], ["31", "29"], ["34", "41"], ["34", "48"], ["46", "44"], ["53", "51"], ["57", "60"], ["60", "66"], ["60", "75"], ["63", "60"], ["65", "63"], ["75", "78"], ["78", "87"], ["78", "117"], ["81", "78"], ["115", "120"], ["120", "128"], ["120", "287"], ["123", "120"], ["285", "289"], ["288", "284"], ["28", "26"], ["38", "43"], ["43", "295"], ["48", "46"], ["66", "70"], ["69", "65"], ["117", "115"], ["287", "285"], ["289", "288"], ["39", "38"], ["70", "69"], ["85", "94"], ["85", "106"], ["90", "81"], ["127", "139"], ["127", "228"], ["41", "39"], ["87", "85"], ["91", "98"], ["98", "90"], ["102", "81"], ["128", "127"], ["128", "134"], ["132", "127"], ["92", "91"], ["103", "102"], ["134", "132"], ["139", "145"], ["139", "186"], ["94", "92"], ["104", "103"], ["228", "234"], ["228", "260"], ["106", "104"], ["145", "148"], ["148", "156"], ["148", "123"], ["151", "148"], ["154", "151"], ["186", "189"], ["189", "197"], ["189", "123"], ["192", "189"], ["234", "237"], ["237", "245"], ["237", "123"], ["240", "237"], ["155", "163"], ["160", "154"], ["195", "192"], ["243", "240"], ["260", "263"], ["263", "271"], ["263", "123"], ["266", "263"], ["156", "155"], ["161", "160"], ["196", "204"], ["201", "195"], ["244", "252"], ["249", "243"], ["269", "266"], ["162", "177"], ["174", "161"], ["197", "196"], ["202", "201"], ["245", "244"], ["250", "249"], ["270", "278"], ["275", "269"], ["163", "162"], ["163", "168"], ["167", "162"], ["175", "174"], ["203", "218"], ["215", "202"], ["252", "250"], ["271", "270"], ["276", "281"], ["281", "275"], ["168", "171"], ["171", "167"], ["177", "175"], ["204", "203"], ["204", "209"], ["208", "203"], ["216", "221"], ["221", "215"], ["278", "276"], ["209", "212"], ["212", "208"], ["218", "216"], ["19", "24"], ["43", "295"], ["20", "295"], ["22", "295"], ["25", "295"], ["25", "295"], ["31", "295"], ["29", "295"], ["29", "295"], ["34", "295"], ["34", "295"], ["38", "295"], ["38", "295"], ["19", "20"], ["19", "22"], ["31", "29"], ["46", "44"], ["46", "44"], ["53", "51"], ["22", "25"], ["19", "25"], ["19", "57"], ["69", "65"], ["69", "65"], ["19", "75"], ["117", "115"], ["117", "115"], ["25", "31"], ["19", "31"], ["29", "34"], ["19", "34"], ["19", "43"], ["19", "46"], ["34", "46"], ["46", "53"], ["19", "53"], ["57", "60"], ["63", "60"], ["19", "60"], ["53", "60"], ["60", "63"], ["19", "63"], ["75", "78"], ["81", "78"], ["19", "78"], ["60", "78"], ["106", "78"], ["94", "78"], ["78", "81"], ["19", "81"], ["115", "120"], ["123", "120"], ["19", "120"], ["128", "123"], ["134", "123"], ["19", "123"], ["19", "38"], ["34", "48"], ["19", "48"], ["70", "69"], ["19", "69"], ["78", "90"], ["19", "90"], ["78", "117"], ["19", "117"], ["19", "127"], ["51", "127"], ["31", "70"], ["19", "70"], ["19", "102"], ["78", "87"], ["19", "87"], ["78", "98"], ["19", "98"], ["120", "128"], ["19", "128"], ["128", "134"], ["19", "134"], ["87", "94"], ["19", "94"], ["19", "145"], ["87", "106"], ["19", "106"], ["145", "148"], ["151", "148"], ["19", "148"], ["117", "148"], ["263", "148"], ["237", "148"], ["189", "148"], ["163", "151"], ["171", "151"], ["19", "151"], ["160", "154"], ["160", "154"], ["19", "186"], ["19", "234"], ["186", "189"], ["192", "189"], ["19", "189"], ["117", "189"], ["263", "189"], ["237", "189"], ["148", "189"], ["19", "192"], ["204", "192"], ["212", "192"], ["201", "195"], ["201", "195"], ["234", "237"], ["240", "237"], ["19", "237"], ["117", "237"], ["263", "237"], ["189", "237"], ["148", "237"], ["237", "240"], ["19", "240"], ["19", "260"], ["19", "160"], ["260", "263"], ["266", "263"], ["19", "263"], ["117", "263"], ["237", "263"], ["189", "263"], ["148", "263"], ["19", "266"], ["263", "266"], ["19", "161"], ["19", "201"], ["19", "162"], ["19", "202"], ["148", "163"], ["19", "163"], ["19", "203"], ["128", "252"], ["134", "252"], ["19", "252"], ["263", "281"], ["19", "281"], ["163", "171"], ["19", "171"], ["128", "177"], ["134", "177"], ["19", "177"], ["189", "204"], ["19", "204"], ["204", "221"], ["212", "221"], ["19", "221"], ["128", "278"], ["134", "278"], ["19", "278"], ["204", "212"], ["19", "212"], ["128", "218"], ["134", "218"], ["19", "218"], ["34", "60"], ["34", "120"], ["34", "38"], ["34", "288"], ["34", "48"], ["34", "53"], ["34", "41"], ["34", "117"], ["34", "39"], ["34", "115"], ["34", "51"], ["34", "57"], ["34", "75"], ["34", "284"], ["34", "44"], ["34", "285"], ["34", "289"], ["34", "43"], ["34", "46"], ["34", "287"], ["34", "78"], ["60", "60"], ["60", "70"], ["60", "66"], ["60", "65"], ["60", "69"], ["60", "63"], ["78", "81"], ["78", "85"], ["78", "87"], ["78", "78"], ["120", "120"], ["120", "128"], ["120", "127"], ["120", "123"], ["85", "102"], ["85", "104"], ["85", "94"], ["85", "98"], ["85", "103"], ["85", "92"], ["85", "91"], ["85", "90"], ["85", "106"], ["127", "228"], ["127", "139"], ["128", "134"], ["128", "132"], ["139", "148"], ["139", "186"], ["139", "145"], ["139", "189"], ["228", "260"], ["228", "237"], ["228", "234"], ["228", "263"], ["148", "154"], ["148", "161"], ["148", "163"], ["148", "162"], ["148", "148"], ["148", "174"], ["148", "160"], ["148", "177"], ["148", "151"], ["148", "155"], ["148", "175"], ["148", "156"], ["189", "192"], ["189", "215"], ["189", "196"], ["189", "204"], ["189", "195"], ["189", "202"], ["189", "201"], ["189", "216"], ["189", "197"], ["189", "189"], ["189", "221"], ["189", "203"], ["189", "218"], ["237", "240"], ["237", "243"], ["237", "249"], ["237", "237"], ["237", "244"], ["237", "245"], ["237", "252"], ["237", "250"], ["263", "281"], ["263", "276"], ["263", "278"], ["263", "269"], ["263", "275"], ["263", "270"], ["263", "263"], ["263", "271"], ["263", "266"], ["163", "167"], ["163", "168"], ["163", "171"], ["204", "209"], ["204", "208"], ["204", "212"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>4</SUB>>", "31": "<(nextInt,nextInt())<SUB>4</SUB>>", "33": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>5</SUB>>", "35": "<(IDENTIFIER,n,n == 1)<SUB>5</SUB>>", "37": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "41": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "43": "<(RETURN,return;,return;)<SUB>7</SUB>>", "45": "<(IDENTIFIER,dp,dp = new int[n][n + 1])<SUB>9</SUB>>", "47": "<(IDENTIFIER,n,new int[n][n + 1])<SUB>9</SUB>>", "49": "<(IDENTIFIER,n,n + 1)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,s = new boolean[n])<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.alloc,new boolean[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,s[i] = equals(&quot;s&quot;))<SUB>11</SUB>>", "67": "<(IDENTIFIER,s,s[i] = equals(&quot;s&quot;))<SUB>11</SUB>>", "69": "<(equals,equals(&quot;s&quot;))<SUB>11</SUB>>", "71": "<(IDENTIFIER,in,next())<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "77": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,s[n - 2])<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>13</SUB>>", "89": "<(LITERAL,2,n - 2)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,dp[n - 1][j])<SUB>13</SUB>>", "93": "<(IDENTIFIER,dp,dp[n - 1][j] = j + 1)<SUB>13</SUB>>", "95": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "97": "<(IDENTIFIER,j,dp[n - 1][j] = j + 1)<SUB>13</SUB>>", "99": "<(IDENTIFIER,j,j + 1)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,dp[n - 1][j])<SUB>14</SUB>>", "105": "<(IDENTIFIER,dp,dp[n - 1][j] = 1)<SUB>14</SUB>>", "107": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,j,dp[n - 1][j] = 1)<SUB>14</SUB>>", "111": "<(LOCAL,int suma: int)<SUB>16</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int i = n - 2; Some(i &gt;= 0); i--),for (int i = n - 2; Some(i &gt;= 0); i--))<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.assignment,int i = n - 2)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>17</SUB>>", "119": "<(LITERAL,2,n - 2)<SUB>17</SUB>>", "121": "<(IDENTIFIER,i,i &gt;= 0)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.postDecrement,i--)<SUB>17</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.conditional,i == 0 ? true : s[i - 1])<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,i == 0)<SUB>18</SUB>>", "131": "<(LITERAL,true,i == 0 ? true : s[i - 1])<SUB>18</SUB>>", "133": "<(IDENTIFIER,s,i == 0 ? true : s[i - 1])<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,i - 1)<SUB>18</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>19</SUB>>", "141": "<(IDENTIFIER,i,if (s[i]))<SUB>19</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>20</SUB>>", "147": "<(LITERAL,0,int j = 0)<SUB>20</SUB>>", "149": "<(IDENTIFIER,j,j &lt; n)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,j++)<SUB>20</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>21</SUB>>", "157": "<(IDENTIFIER,dp,dp[i][j] = ((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j]) % 1000000007)<SUB>21</SUB>>", "159": "<(IDENTIFIER,j,dp[i][j] = ((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j]) % 1000000007)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.addition,(j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j])<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.equals,j == 0)<SUB>21</SUB>>", "165": "<(LITERAL,0,j == 0)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1])<SUB>21</SUB>>", "169": "<(IDENTIFIER,dp,j == 0 ? 0 : dp[i][j - 1])<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>21</SUB>>", "173": "<(LITERAL,1,j - 1)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.addition,i + 1)<SUB>21</SUB>>", "179": "<(LITERAL,1,i + 1)<SUB>21</SUB>>", "181": "<(LITERAL,1000000007,((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j]) % 1000000007)<SUB>21</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "185": "<(LOCAL,int j: int)<SUB>25</SUB>>", "187": "<(IDENTIFIER,j,int j = 0)<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>25</SUB>>", "191": "<(IDENTIFIER,n,j &lt; n)<SUB>25</SUB>>", "193": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.assignment,dp[i][j] = ((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j + 1]) % 1000000007)<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>26</SUB>>", "199": "<(IDENTIFIER,i,dp[i][j] = ((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j + 1]) % 1000000007)<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.modulo,((j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j + 1]) % 1000000007)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.conditional,j == 0 ? 0 : dp[i][j - 1])<SUB>26</SUB>>", "205": "<(IDENTIFIER,j,j == 0)<SUB>26</SUB>>", "207": "<(LITERAL,0,j == 0 ? 0 : dp[i][j - 1])<SUB>26</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>26</SUB>>", "211": "<(IDENTIFIER,i,j == 0 ? 0 : dp[i][j - 1])<SUB>26</SUB>>", "213": "<(IDENTIFIER,j,j - 1)<SUB>26</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j + 1])<SUB>26</SUB>>", "217": "<(IDENTIFIER,dp,(j == 0 ? 0 : dp[i][j - 1]) + dp[i + 1][j + 1])<SUB>26</SUB>>", "219": "<(IDENTIFIER,i,i + 1)<SUB>26</SUB>>", "221": "<(&lt;operator&gt;.addition,j + 1)<SUB>26</SUB>>", "223": "<(LITERAL,1,j + 1)<SUB>26</SUB>>", "225": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "227": "<(CONTROL_STRUCTURE,if (s[i]),if (s[i]))<SUB>31</SUB>>", "229": "<(IDENTIFIER,s,if (s[i]))<SUB>31</SUB>>", "231": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "233": "<(LOCAL,int j: int)<SUB>32</SUB>>", "235": "<(IDENTIFIER,j,int j = 0)<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>32</SUB>>", "239": "<(IDENTIFIER,n,j &lt; n)<SUB>32</SUB>>", "241": "<(IDENTIFIER,j,j++)<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i + 1][j])<SUB>33</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>33</SUB>>", "247": "<(IDENTIFIER,i,dp[i][j] = dp[i + 1][j])<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>33</SUB>>", "251": "<(IDENTIFIER,dp,dp[i][j] = dp[i + 1][j])<SUB>33</SUB>>", "253": "<(IDENTIFIER,i,i + 1)<SUB>33</SUB>>", "255": "<(IDENTIFIER,j,dp[i][j] = dp[i + 1][j])<SUB>33</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "259": "<(LOCAL,int j: int)<SUB>37</SUB>>", "261": "<(IDENTIFIER,j,int j = 0)<SUB>37</SUB>>", "263": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>37</SUB>>", "265": "<(IDENTIFIER,n,j &lt; n)<SUB>37</SUB>>", "267": "<(IDENTIFIER,j,j++)<SUB>37</SUB>>", "269": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i + 1][j + 1])<SUB>38</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>38</SUB>>", "273": "<(IDENTIFIER,i,dp[i][j] = dp[i + 1][j + 1])<SUB>38</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j + 1])<SUB>38</SUB>>", "277": "<(IDENTIFIER,dp,dp[i][j] = dp[i + 1][j + 1])<SUB>38</SUB>>", "279": "<(IDENTIFIER,i,i + 1)<SUB>38</SUB>>", "281": "<(&lt;operator&gt;.addition,j + 1)<SUB>38</SUB>>", "283": "<(LITERAL,1,j + 1)<SUB>38</SUB>>", "285": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>43</SUB>>", "287": "<(FIELD_IDENTIFIER,out,out)<SUB>43</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>43</SUB>>", "291": "<(LITERAL,0,println(dp[0][0]))<SUB>43</SUB>>", "293": "<(MODIFIER,PUBLIC)>", "295": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}