{"edges": [["21", "23"], ["21", "129"], ["21", "130"], ["21", "131"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "64"], ["23", "65"], ["23", "68"], ["23", "69"], ["23", "72"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "86"], ["76", "87"], ["76", "96"], ["76", "97"], ["76", "102"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "108"], ["102", "111"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["111", "112"], ["112", "113"], ["112", "118"], ["112", "125"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["125", "126"], ["126", "127"], ["126", "128"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "62"], ["59", "65"], ["65", "69"], ["69", "73"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["73", "131"], ["73", "81"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["62", "61"], ["77", "92"], ["87", "99"], ["97", "104"], ["31", "29"], ["34", "32"], ["79", "77"], ["89", "87"], ["99", "97"], ["103", "108"], ["103", "114"], ["108", "73"], ["36", "34"], ["80", "79"], ["90", "89"], ["104", "103"], ["81", "80"], ["92", "90"], ["113", "122"], ["113", "126"], ["114", "113"], ["119", "131"], ["126", "73"], ["120", "119"], ["122", "120"], ["21", "26"], ["22", "131"], ["24", "131"], ["29", "131"], ["32", "131"], ["32", "131"], ["32", "131"], ["27", "131"], ["38", "131"], ["42", "131"], ["41", "131"], ["41", "131"], ["45", "131"], ["52", "131"], ["54", "131"], ["56", "131"], ["54", "131"], ["52", "131"], ["52", "131"], ["59", "131"], ["59", "131"], ["59", "131"], ["65", "131"], ["69", "131"], ["69", "131"], ["73", "131"], ["73", "131"], ["73", "131"], ["80", "131"], ["79", "131"], ["77", "131"], ["77", "131"], ["90", "131"], ["89", "131"], ["87", "131"], ["87", "131"], ["99", "131"], ["97", "131"], ["97", "131"], ["104", "131"], ["104", "131"], ["103", "131"], ["103", "131"], ["103", "131"], ["114", "131"], ["114", "131"], ["113", "131"], ["113", "131"], ["113", "131"], ["126", "131"], ["126", "131"], ["108", "131"], ["108", "131"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["21", "59"], ["45", "59"], ["21", "65"], ["21", "69"], ["45", "69"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["21", "61"], ["45", "61"], ["65", "73"], ["126", "73"], ["21", "73"], ["69", "73"], ["108", "73"], ["79", "77"], ["79", "77"], ["89", "87"], ["89", "87"], ["99", "97"], ["99", "97"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["99", "108"], ["21", "108"], ["73", "79"], ["21", "79"], ["73", "79"], ["90", "89"], ["90", "89"], ["21", "89"], ["21", "99"], ["45", "99"], ["90", "99"], ["104", "103"], ["104", "103"], ["52", "103"], ["113", "103"], ["21", "103"], ["73", "80"], ["21", "80"], ["73", "80"], ["21", "90"], ["77", "90"], ["87", "104"], ["21", "104"], ["97", "104"], ["73", "81"], ["21", "81"], ["73", "81"], ["77", "92"], ["21", "92"], ["114", "113"], ["114", "113"], ["103", "113"], ["21", "113"], ["99", "126"], ["21", "126"], ["104", "114"], ["21", "114"], ["104", "114"], ["114", "119"], ["21", "119"], ["73", "77"], ["73", "89"], ["73", "99"], ["73", "81"], ["73", "103"], ["73", "104"], ["73", "92"], ["73", "87"], ["73", "97"], ["73", "90"], ["73", "79"], ["73", "80"], ["103", "73"], ["103", "113"], ["103", "114"], ["103", "108"], ["113", "73"], ["113", "120"], ["113", "122"], ["113", "119"], ["113", "126"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int N = parseInt(st.nextToken()))<SUB>5</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "49": "<(nextToken,nextToken())<SUB>5</SUB>>", "51": "<(LOCAL,int K: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,K,int K = parseInt(st.nextToken()))<SUB>6</SUB>>", "55": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,long x = (long) N)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.cast,(long) N)<SUB>9</SUB>>", "63": "<(IDENTIFIER,N,(long) N)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,long low = 0L)<SUB>10</SUB>>", "67": "<(LITERAL,0L,long low = 0L)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,long high = N)<SUB>11</SUB>>", "71": "<(IDENTIFIER,N,long high = N)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.notEquals,low != high)<SUB>12</SUB>>", "75": "<(IDENTIFIER,high,low != high)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,x = (low + high + 1) / 2)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.division,(low + high + 1) / 2)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.addition,low + high)<SUB>14</SUB>>", "83": "<(IDENTIFIER,high,low + high)<SUB>14</SUB>>", "85": "<(LITERAL,2,(low + high + 1) / 2)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,long add = (x * (x + 1)) / 2)<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.division,(x * (x + 1)) / 2)<SUB>15</SUB>>", "91": "<(IDENTIFIER,x,x * (x + 1))<SUB>15</SUB>>", "93": "<(IDENTIFIER,x,x + 1)<SUB>15</SUB>>", "95": "<(LITERAL,2,(x * (x + 1)) / 2)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,long y = N - x)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.subtraction,N - x)<SUB>16</SUB>>", "101": "<(IDENTIFIER,x,N - x)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.greaterThan,add - y &gt; K)<SUB>17</SUB>>", "105": "<(IDENTIFIER,add,add - y)<SUB>17</SUB>>", "107": "<(IDENTIFIER,K,add - y &gt; K)<SUB>17</SUB>>", "109": "<(IDENTIFIER,high,high = x)<SUB>18</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.equals,add - y == K)<SUB>19</SUB>>", "115": "<(IDENTIFIER,add,add - y)<SUB>19</SUB>>", "117": "<(IDENTIFIER,K,add - y == K)<SUB>19</SUB>>", "119": "<(println,System.out.println(y))<SUB>21</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(y))<SUB>21</SUB>>", "123": "<(IDENTIFIER,y,System.out.println(y))<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "127": "<(IDENTIFIER,low,low = x)<SUB>25</SUB>>", "129": "<(MODIFIER,PUBLIC)>", "131": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}