{"edges": [["19", "21"], ["19", "529"], ["19", "530"], ["19", "531"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "29"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "51"], ["21", "52"], ["21", "57"], ["21", "87"], ["21", "136"], ["21", "137"], ["21", "142"], ["21", "143"], ["21", "148"], ["21", "300"], ["21", "301"], ["21", "309"], ["21", "310"], ["21", "316"], ["21", "343"], ["21", "468"], ["21", "469"], ["21", "472"], ["21", "524"], ["21", "527"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["91", "98"], ["91", "131"], ["91", "134"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["113", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "156"], ["148", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["159", "160"], ["159", "161"], ["159", "166"], ["159", "169"], ["159", "171"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "173"], ["171", "178"], ["171", "207"], ["171", "214"], ["171", "221"], ["171", "222"], ["171", "227"], ["171", "228"], ["171", "233"], ["171", "286"], ["171", "293"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "186"], ["178", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["191", "194"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "243"], ["233", "245"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["245", "246"], ["245", "266"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["248", "251"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "259"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["268", "271"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "281"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "292"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["293", "294"], ["293", "299"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["305", "308"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "314"], ["312", "315"], ["316", "317"], ["316", "318"], ["316", "321"], ["316", "324"], ["316", "326"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "323"], ["324", "325"], ["326", "327"], ["327", "328"], ["327", "340"], ["328", "329"], ["328", "339"], ["329", "330"], ["329", "338"], ["330", "331"], ["330", "332"], ["332", "333"], ["332", "334"], ["334", "335"], ["334", "336"], ["334", "337"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["343", "348"], ["343", "351"], ["343", "353"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "350"], ["351", "352"], ["353", "354"], ["354", "355"], ["354", "356"], ["354", "359"], ["354", "362"], ["354", "364"], ["356", "357"], ["356", "358"], ["359", "360"], ["359", "361"], ["362", "363"], ["364", "365"], ["365", "366"], ["365", "367"], ["365", "370"], ["365", "373"], ["365", "375"], ["367", "368"], ["367", "369"], ["370", "371"], ["370", "372"], ["373", "374"], ["375", "376"], ["376", "377"], ["376", "396"], ["377", "378"], ["377", "393"], ["378", "379"], ["378", "386"], ["379", "380"], ["379", "385"], ["380", "381"], ["380", "382"], ["382", "383"], ["382", "384"], ["386", "387"], ["386", "392"], ["387", "388"], ["387", "389"], ["389", "390"], ["389", "391"], ["393", "394"], ["393", "395"], ["396", "397"], ["396", "398"], ["396", "401"], ["396", "407"], ["396", "408"], ["396", "411"], ["396", "454"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["403", "404"], ["404", "405"], ["404", "406"], ["408", "409"], ["408", "410"], ["411", "412"], ["411", "413"], ["411", "416"], ["411", "419"], ["411", "421"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "418"], ["419", "420"], ["421", "422"], ["422", "423"], ["422", "430"], ["423", "424"], ["423", "429"], ["424", "425"], ["424", "426"], ["426", "427"], ["426", "428"], ["430", "431"], ["430", "432"], ["430", "448"], ["432", "433"], ["432", "434"], ["434", "435"], ["434", "436"], ["434", "443"], ["436", "437"], ["436", "442"], ["437", "438"], ["437", "441"], ["438", "439"], ["438", "440"], ["443", "444"], ["443", "447"], ["444", "445"], ["444", "446"], ["448", "449"], ["448", "450"], ["450", "451"], ["450", "452"], ["450", "453"], ["454", "455"], ["454", "458"], ["455", "456"], ["455", "457"], ["458", "459"], ["459", "460"], ["459", "467"], ["460", "461"], ["460", "466"], ["461", "462"], ["461", "465"], ["462", "463"], ["462", "464"], ["469", "470"], ["469", "471"], ["472", "473"], ["472", "474"], ["472", "477"], ["472", "480"], ["472", "482"], ["474", "475"], ["474", "476"], ["477", "478"], ["477", "479"], ["480", "481"], ["482", "483"], ["483", "484"], ["483", "485"], ["483", "488"], ["483", "491"], ["483", "493"], ["485", "486"], ["485", "487"], ["488", "489"], ["488", "490"], ["491", "492"], ["493", "494"], ["494", "495"], ["494", "498"], ["495", "496"], ["495", "497"], ["498", "499"], ["498", "500"], ["498", "518"], ["500", "501"], ["500", "502"], ["502", "503"], ["502", "504"], ["502", "513"], ["504", "505"], ["504", "512"], ["505", "506"], ["505", "511"], ["506", "507"], ["506", "508"], ["508", "509"], ["508", "510"], ["513", "514"], ["513", "517"], ["514", "515"], ["514", "516"], ["518", "519"], ["518", "520"], ["520", "521"], ["520", "522"], ["520", "523"], ["524", "525"], ["524", "526"], ["527", "528"], ["22", "25"], ["25", "28"], ["26", "34"], ["29", "44"], ["42", "49"], ["47", "54"], ["52", "59"], ["137", "145"], ["143", "150"], ["301", "312"], ["310", "318"], ["469", "474"], ["524", "527"], ["527", "531"], ["24", "22"], ["28", "26"], ["44", "42"], ["49", "47"], ["54", "52"], ["59", "62"], ["62", "70"], ["62", "88"], ["65", "62"], ["88", "97"], ["88", "139"], ["139", "137"], ["145", "143"], ["150", "153"], ["153", "163"], ["153", "304"], ["156", "153"], ["303", "301"], ["312", "310"], ["318", "321"], ["321", "333"], ["321", "345"], ["324", "321"], ["345", "348"], ["348", "356"], ["348", "469"], ["351", "348"], ["474", "477"], ["477", "485"], ["477", "524"], ["480", "477"], ["32", "39"], ["35", "29"], ["93", "100"], ["131", "134"], ["134", "139"], ["304", "305"], ["305", "303"], ["327", "324"], ["34", "32"], ["37", "35"], ["70", "73"], ["73", "81"], ["73", "65"], ["76", "73"], ["95", "93"], ["100", "105"], ["103", "120"], ["103", "131"], ["108", "105"], ["161", "166"], ["166", "177"], ["166", "156"], ["169", "166"], ["328", "342"], ["340", "327"], ["356", "359"], ["359", "367"], ["359", "351"], ["362", "359"], ["485", "488"], ["488", "495"], ["488", "480"], ["491", "488"], ["39", "37"], ["79", "76"], ["97", "95"], ["105", "103"], ["111", "108"], ["163", "161"], ["173", "180"], ["207", "216"], ["214", "226"], ["222", "232"], ["228", "235"], ["286", "295"], ["293", "169"], ["329", "328"], ["342", "340"], ["80", "85"], ["85", "79"], ["113", "111"], ["175", "173"], ["180", "183"], ["183", "198"], ["183", "209"], ["186", "183"], ["208", "207"], ["215", "214"], ["224", "222"], ["230", "228"], ["235", "240"], ["238", "255"], ["238", "288"], ["243", "240"], ["287", "286"], ["294", "293"], ["330", "329"], ["367", "370"], ["370", "382"], ["370", "362"], ["373", "370"], ["495", "508"], ["495", "491"], ["81", "80"], ["116", "113"], ["177", "175"], ["189", "186"], ["209", "208"], ["216", "215"], ["226", "224"], ["232", "230"], ["240", "238"], ["246", "275"], ["266", "243"], ["288", "287"], ["295", "294"], ["332", "330"], ["500", "520"], ["518", "491"], ["118", "116"], ["191", "189"], ["248", "246"], ["268", "266"], ["333", "334"], ["334", "332"], ["377", "398"], ["377", "373"], ["502", "500"], ["520", "518"], ["119", "125"], ["124", "118"], ["194", "191"], ["251", "248"], ["271", "268"], ["378", "377"], ["378", "393"], ["393", "377"], ["398", "404"], ["401", "408"], ["408", "413"], ["504", "514"], ["513", "502"], ["120", "119"], ["125", "128"], ["128", "124"], ["196", "194"], ["253", "251"], ["273", "271"], ["379", "378"], ["379", "389"], ["386", "378"], ["403", "401"], ["413", "416"], ["416", "426"], ["416", "455"], ["419", "416"], ["455", "462"], ["455", "373"], ["505", "504"], ["514", "513"], ["197", "203"], ["202", "196"], ["254", "260"], ["259", "253"], ["274", "282"], ["281", "273"], ["380", "379"], ["387", "386"], ["404", "403"], ["459", "373"], ["506", "505"], ["198", "197"], ["203", "202"], ["255", "254"], ["260", "263"], ["263", "259"], ["275", "278"], ["278", "274"], ["282", "281"], ["382", "380"], ["389", "387"], ["423", "438"], ["423", "419"], ["460", "459"], ["508", "506"], ["424", "423"], ["432", "450"], ["448", "419"], ["461", "460"], ["426", "424"], ["434", "432"], ["450", "448"], ["462", "461"], ["436", "444"], ["443", "434"], ["437", "436"], ["444", "443"], ["438", "437"], ["19", "24"], ["20", "531"], ["22", "531"], ["25", "531"], ["26", "531"], ["32", "531"], ["35", "531"], ["35", "531"], ["35", "531"], ["29", "531"], ["42", "531"], ["49", "531"], ["47", "531"], ["47", "531"], ["52", "531"], ["54", "531"], ["52", "531"], ["52", "531"], ["88", "531"], ["93", "531"], ["93", "531"], ["105", "531"], ["103", "531"], ["103", "531"], ["131", "531"], ["131", "531"], ["137", "531"], ["137", "531"], ["143", "531"], ["143", "531"], ["143", "531"], ["305", "531"], ["303", "531"], ["301", "531"], ["301", "531"], ["310", "531"], ["310", "531"], ["310", "531"], ["345", "531"], ["348", "531"], ["348", "531"], ["348", "531"], ["469", "531"], ["474", "531"], ["477", "531"], ["477", "531"], ["477", "531"], ["524", "531"], ["524", "531"], ["527", "531"], ["527", "531"], ["485", "531"], ["488", "531"], ["488", "531"], ["480", "531"], ["495", "531"], ["508", "531"], ["502", "531"], ["502", "531"], ["500", "531"], ["500", "531"], ["520", "531"], ["520", "531"], ["518", "531"], ["518", "531"], ["491", "531"], ["356", "531"], ["359", "531"], ["359", "531"], ["351", "531"], ["367", "531"], ["370", "531"], ["370", "531"], ["362", "531"], ["380", "531"], ["379", "531"], ["378", "531"], ["387", "531"], ["386", "531"], ["378", "531"], ["377", "531"], ["377", "531"], ["377", "531"], ["398", "531"], ["401", "531"], ["403", "531"], ["401", "531"], ["408", "531"], ["408", "531"], ["413", "531"], ["416", "531"], ["416", "531"], ["455", "531"], ["459", "531"], ["459", "531"], ["459", "531"], ["373", "531"], ["424", "531"], ["424", "531"], ["423", "531"], ["423", "531"], ["434", "531"], ["434", "531"], ["432", "531"], ["432", "531"], ["448", "531"], ["450", "531"], ["450", "531"], ["448", "531"], ["448", "531"], ["419", "531"], ["334", "531"], ["332", "531"], ["327", "531"], ["327", "531"], ["327", "531"], ["324", "531"], ["161", "531"], ["161", "531"], ["166", "531"], ["166", "531"], ["156", "531"], ["173", "531"], ["183", "531"], ["207", "531"], ["207", "531"], ["214", "531"], ["214", "531"], ["214", "531"], ["222", "531"], ["228", "531"], ["228", "531"], ["235", "531"], ["238", "531"], ["240", "531"], ["238", "531"], ["238", "531"], ["286", "531"], ["286", "531"], ["286", "531"], ["293", "531"], ["293", "531"], ["293", "531"], ["169", "531"], ["253", "531"], ["253", "531"], ["251", "531"], ["248", "531"], ["246", "531"], ["246", "531"], ["273", "531"], ["273", "531"], ["271", "531"], ["268", "531"], ["266", "531"], ["266", "531"], ["243", "531"], ["196", "531"], ["196", "531"], ["194", "531"], ["191", "531"], ["189", "531"], ["189", "531"], ["186", "531"], ["118", "531"], ["118", "531"], ["116", "531"], ["113", "531"], ["111", "531"], ["111", "531"], ["108", "531"], ["70", "531"], ["73", "531"], ["73", "531"], ["73", "531"], ["65", "531"], ["79", "531"], ["85", "531"], ["79", "531"], ["79", "531"], ["76", "531"], ["19", "20"], ["19", "22"], ["19", "26"], ["44", "42"], ["49", "47"], ["54", "52"], ["54", "52"], ["139", "137"], ["145", "143"], ["19", "301"], ["305", "301"], ["305", "301"], ["305", "301"], ["312", "310"], ["312", "310"], ["19", "469"], ["22", "25"], ["19", "25"], ["26", "29"], ["19", "29"], ["32", "29"], ["35", "29"], ["19", "59"], ["19", "150"], ["19", "318"], ["19", "345"], ["19", "474"], ["29", "524"], ["134", "524"], ["19", "524"], ["469", "524"], ["518", "524"], ["524", "527"], ["19", "527"], ["19", "32"], ["19", "40"], ["25", "44"], ["19", "44"], ["44", "49"], ["19", "49"], ["42", "54"], ["19", "54"], ["47", "54"], ["59", "62"], ["65", "62"], ["19", "62"], ["54", "62"], ["62", "65"], ["19", "65"], ["62", "88"], ["19", "88"], ["88", "139"], ["19", "139"], ["139", "145"], ["19", "145"], ["150", "153"], ["156", "153"], ["19", "153"], ["145", "153"], ["166", "153"], ["19", "156"], ["153", "156"], ["19", "303"], ["305", "303"], ["305", "303"], ["305", "303"], ["301", "312"], ["19", "312"], ["305", "312"], ["318", "321"], ["324", "321"], ["19", "321"], ["312", "321"], ["334", "324"], ["19", "324"], ["345", "348"], ["351", "348"], ["19", "348"], ["312", "348"], ["348", "351"], ["380", "351"], ["387", "351"], ["19", "351"], ["474", "477"], ["480", "477"], ["19", "477"], ["321", "477"], ["488", "477"], ["359", "477"], ["477", "480"], ["495", "480"], ["19", "480"], ["32", "35"], ["19", "35"], ["19", "70"], ["19", "100"], ["29", "131"], ["19", "131"], ["93", "131"], ["111", "131"], ["131", "134"], ["19", "134"], ["153", "161"], ["19", "161"], ["268", "305"], ["191", "305"], ["113", "305"], ["19", "305"], ["153", "305"], ["19", "356"], ["19", "485"], ["70", "73"], ["76", "73"], ["19", "73"], ["54", "73"], ["73", "76"], ["19", "76"], ["85", "79"], ["100", "103"], ["108", "103"], ["19", "103"], ["105", "103"], ["105", "103"], ["19", "108"], ["103", "108"], ["113", "111"], ["113", "111"], ["113", "111"], ["161", "166"], ["169", "166"], ["19", "166"], ["153", "166"], ["166", "169"], ["19", "169"], ["173", "207"], ["189", "207"], ["19", "207"], ["19", "214"], ["173", "214"], ["189", "214"], ["222", "286"], ["246", "286"], ["19", "286"], ["228", "293"], ["266", "293"], ["19", "293"], ["356", "359"], ["362", "359"], ["19", "359"], ["321", "359"], ["370", "359"], ["359", "362"], ["382", "362"], ["393", "362"], ["455", "362"], ["19", "362"], ["485", "488"], ["491", "488"], ["19", "488"], ["477", "488"], ["495", "491"], ["19", "491"], ["54", "105"], ["73", "105"], ["19", "105"], ["153", "163"], ["19", "163"], ["19", "180"], ["19", "235"], ["19", "367"], ["49", "85"], ["19", "85"], ["116", "113"], ["19", "113"], ["93", "113"], ["111", "113"], ["116", "113"], ["180", "183"], ["186", "183"], ["19", "183"], ["54", "183"], ["105", "183"], ["240", "183"], ["73", "183"], ["183", "186"], ["19", "186"], ["191", "189"], ["191", "189"], ["191", "189"], ["235", "238"], ["243", "238"], ["19", "238"], ["240", "238"], ["240", "238"], ["19", "243"], ["238", "243"], ["248", "246"], ["248", "246"], ["248", "246"], ["268", "266"], ["268", "266"], ["268", "266"], ["367", "370"], ["373", "370"], ["19", "370"], ["359", "370"], ["416", "370"], ["370", "373"], ["389", "373"], ["393", "373"], ["455", "373"], ["19", "373"], ["477", "495"], ["19", "495"], ["488", "495"], ["502", "500"], ["502", "500"], ["502", "500"], ["520", "518"], ["520", "518"], ["520", "518"], ["113", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["183", "240"], ["19", "240"], ["19", "332"], ["334", "332"], ["334", "332"], ["334", "332"], ["194", "191"], ["19", "191"], ["173", "191"], ["189", "191"], ["194", "191"], ["251", "248"], ["19", "248"], ["222", "248"], ["246", "248"], ["251", "248"], ["271", "268"], ["19", "268"], ["228", "268"], ["266", "268"], ["271", "268"], ["305", "334"], ["19", "334"], ["321", "334"], ["378", "377"], ["378", "377"], ["455", "377"], ["393", "377"], ["393", "377"], ["380", "398"], ["387", "398"], ["19", "398"], ["403", "401"], ["19", "408"], ["305", "502"], ["520", "502"], ["450", "502"], ["334", "502"], ["19", "502"], ["286", "502"], ["502", "520"], ["19", "520"], ["469", "520"], ["518", "520"], ["500", "520"], ["268", "194"], ["191", "194"], ["113", "194"], ["19", "194"], ["196", "194"], ["196", "194"], ["268", "251"], ["191", "251"], ["113", "251"], ["19", "251"], ["253", "251"], ["253", "251"], ["248", "271"], ["19", "271"], ["273", "271"], ["273", "271"], ["379", "378"], ["379", "378"], ["386", "378"], ["386", "378"], ["382", "393"], ["19", "393"], ["370", "393"], ["389", "393"], ["398", "401"], ["19", "401"], ["19", "413"], ["103", "128"], ["19", "128"], ["253", "196"], ["273", "196"], ["196", "253"], ["196", "273"], ["380", "379"], ["380", "379"], ["19", "379"], ["387", "386"], ["387", "386"], ["19", "386"], ["404", "403"], ["404", "403"], ["413", "416"], ["419", "416"], ["19", "416"], ["370", "416"], ["426", "419"], ["19", "419"], ["382", "455"], ["393", "455"], ["19", "455"], ["404", "455"], ["408", "459"], ["448", "459"], ["19", "459"], ["348", "380"], ["387", "380"], ["19", "380"], ["382", "380"], ["382", "380"], ["380", "387"], ["19", "387"], ["389", "387"], ["389", "387"], ["19", "404"], ["370", "404"], ["389", "404"], ["393", "404"], ["238", "263"], ["19", "263"], ["19", "278"], ["238", "278"], ["19", "382"], ["359", "382"], ["393", "382"], ["455", "382"], ["19", "389"], ["370", "389"], ["424", "423"], ["424", "423"], ["19", "423"], ["434", "432"], ["434", "432"], ["434", "432"], ["450", "448"], ["450", "448"], ["450", "448"], ["348", "508"], ["19", "508"], ["401", "424"], ["19", "424"], ["426", "424"], ["426", "424"], ["19", "426"], ["416", "426"], ["305", "434"], ["450", "434"], ["334", "434"], ["19", "434"], ["434", "450"], ["19", "450"], ["408", "450"], ["448", "450"], ["432", "450"], ["62", "70"], ["62", "65"], ["62", "73"], ["62", "62"], ["88", "95"], ["88", "134"], ["88", "93"], ["88", "100"], ["88", "131"], ["88", "103"], ["88", "97"], ["88", "105"], ["153", "161"], ["153", "163"], ["153", "153"], ["153", "166"], ["153", "156"], ["321", "334"], ["321", "324"], ["321", "340"], ["321", "329"], ["321", "328"], ["321", "321"], ["321", "342"], ["321", "332"], ["321", "333"], ["321", "327"], ["321", "330"], ["348", "356"], ["348", "348"], ["348", "351"], ["348", "359"], ["477", "480"], ["477", "488"], ["477", "485"], ["477", "477"], ["73", "76"], ["73", "80"], ["73", "73"], ["73", "81"], ["73", "85"], ["73", "79"], ["103", "120"], ["103", "128"], ["103", "118"], ["103", "108"], ["103", "116"], ["103", "113"], ["103", "103"], ["103", "119"], ["103", "111"], ["103", "105"], ["103", "124"], ["103", "125"], ["166", "214"], ["166", "230"], ["166", "215"], ["166", "209"], ["166", "240"], ["166", "226"], ["166", "228"], ["166", "208"], ["166", "238"], ["166", "288"], ["166", "224"], ["166", "180"], ["166", "177"], ["166", "216"], ["166", "222"], ["166", "169"], ["166", "232"], ["166", "173"], ["166", "207"], ["166", "293"], ["166", "286"], ["166", "295"], ["166", "183"], ["166", "235"], ["166", "287"], ["166", "166"], ["166", "294"], ["166", "175"], ["359", "370"], ["359", "362"], ["359", "359"], ["359", "367"], ["488", "488"], ["488", "495"], ["488", "491"], ["183", "196"], ["183", "194"], ["183", "186"], ["183", "202"], ["183", "197"], ["183", "198"], ["183", "189"], ["183", "191"], ["183", "183"], ["183", "203"], ["238", "240"], ["238", "243"], ["238", "238"], ["238", "281"], ["238", "268"], ["238", "274"], ["238", "260"], ["238", "253"], ["238", "254"], ["238", "278"], ["238", "282"], ["238", "273"], ["238", "275"], ["238", "255"], ["238", "259"], ["238", "246"], ["238", "251"], ["238", "263"], ["238", "271"], ["238", "248"], ["238", "266"], ["370", "370"], ["370", "378"], ["370", "382"], ["370", "380"], ["370", "377"], ["370", "379"], ["370", "373"], ["495", "514"], ["495", "505"], ["495", "518"], ["495", "504"], ["495", "520"], ["495", "513"], ["495", "502"], ["495", "506"], ["495", "508"], ["495", "500"], ["377", "401"], ["377", "403"], ["377", "408"], ["377", "416"], ["377", "404"], ["377", "413"], ["377", "455"], ["377", "398"], ["378", "393"], ["379", "389"], ["379", "386"], ["379", "387"], ["416", "426"], ["416", "416"], ["416", "424"], ["416", "419"], ["416", "423"], ["455", "460"], ["455", "462"], ["455", "461"], ["455", "459"], ["423", "450"], ["423", "437"], ["423", "448"], ["423", "443"], ["423", "434"], ["423", "432"], ["423", "436"], ["423", "444"], ["423", "438"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "27": "<(IDENTIFIER,out,out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "29": "<(&lt;init&gt;,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "41": "<(LOCAL,int n: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "49": "<(nextInt,nextInt())<SUB>6</SUB>>", "51": "<(LOCAL,int[][] arr: int[][])<SUB>7</SUB>>", "53": "<(IDENTIFIER,arr,int[][] arr = new int[n][m])<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,new int[n][m])<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(LOCAL,int j: int)<SUB>9</SUB>>", "71": "<(IDENTIFIER,j,int j = 0)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>9</SUB>>", "75": "<(IDENTIFIER,m,j &lt; m)<SUB>9</SUB>>", "77": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,arr[i][j] = nextInt())<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,arr[i][j] = nextInt())<SUB>10</SUB>>", "85": "<(nextInt,nextInt())<SUB>10</SUB>>", "87": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>13</SUB>>", "89": "<(IDENTIFIER,n,n == 1)<SUB>13</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>14</SUB>>", "97": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>14</SUB>>", "99": "<(LOCAL,int i: int)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; m - 1)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>15</SUB>>", "107": "<(LITERAL,1,m - 1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,min = Math.min(min, Math.abs(arr[0][i] - arr[0][i + 1])))<SUB>16</SUB>>", "113": "<(min,Math.min(min, Math.abs(arr[0][i] - arr[0][i + 1])))<SUB>16</SUB>>", "115": "<(IDENTIFIER,min,Math.min(min, Math.abs(arr[0][i] - arr[0][i + 1])))<SUB>16</SUB>>", "117": "<(IDENTIFIER,Math,Math.abs(arr[0][i] - arr[0][i + 1]))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,arr[0][i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,arr,arr[0][i] - arr[0][i + 1])<SUB>16</SUB>>", "123": "<(IDENTIFIER,i,arr[0][i] - arr[0][i + 1])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>16</SUB>>", "127": "<(LITERAL,0,arr[0][i] - arr[0][i + 1])<SUB>16</SUB>>", "129": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "131": "<(println,println(min))<SUB>18</SUB>>", "133": "<(IDENTIFIER,min,println(min))<SUB>18</SUB>>", "135": "<(IDENTIFIER,out,close())<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.assignment,int[][] adj = new int[n][n])<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.alloc,new int[n][n])>", "141": "<(IDENTIFIER,n,new int[n][n])<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.assignment,int[][] edgeadj = new int[n][n])<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.alloc,new int[n][n])>", "147": "<(IDENTIFIER,n,new int[n][n])<SUB>22</SUB>>", "149": "<(LOCAL,int i: int)<SUB>23</SUB>>", "151": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "153": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>23</SUB>>", "155": "<(IDENTIFIER,n,i &lt; n)<SUB>23</SUB>>", "157": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.addition,i + 1)<SUB>24</SUB>>", "165": "<(LITERAL,1,i + 1)<SUB>24</SUB>>", "167": "<(IDENTIFIER,j,j &lt; n)<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,j++)<SUB>24</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "173": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>25</SUB>>", "177": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>25</SUB>>", "179": "<(LOCAL,int k: int)<SUB>26</SUB>>", "181": "<(IDENTIFIER,k,int k = 0)<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>26</SUB>>", "185": "<(IDENTIFIER,m,k &lt; m)<SUB>26</SUB>>", "187": "<(IDENTIFIER,k,k++)<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.assignment,min = Math.min(min, Math.abs(arr[i][k] - arr[j][k])))<SUB>27</SUB>>", "191": "<(min,Math.min(min, Math.abs(arr[i][k] - arr[j][k])))<SUB>27</SUB>>", "193": "<(IDENTIFIER,min,Math.min(min, Math.abs(arr[i][k] - arr[j][k])))<SUB>27</SUB>>", "195": "<(IDENTIFIER,Math,Math.abs(arr[i][k] - arr[j][k]))<SUB>27</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,arr[i][k])<SUB>27</SUB>>", "199": "<(IDENTIFIER,arr,arr[i][k] - arr[j][k])<SUB>27</SUB>>", "201": "<(IDENTIFIER,k,arr[i][k] - arr[j][k])<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>27</SUB>>", "205": "<(IDENTIFIER,j,arr[i][k] - arr[j][k])<SUB>27</SUB>>", "207": "<(&lt;operator&gt;.assignment,adj[i][j] = min)<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,adj[i])<SUB>29</SUB>>", "211": "<(IDENTIFIER,i,adj[i][j] = min)<SUB>29</SUB>>", "213": "<(IDENTIFIER,min,adj[i][j] = min)<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,adj[j][i])<SUB>30</SUB>>", "217": "<(IDENTIFIER,adj,adj[j][i] = min)<SUB>30</SUB>>", "219": "<(IDENTIFIER,i,adj[j][i] = min)<SUB>30</SUB>>", "221": "<(LOCAL,int min1: int)<SUB>31</SUB>>", "223": "<(IDENTIFIER,min1,int min1 = Integer.MAX_VALUE)<SUB>31</SUB>>", "225": "<(IDENTIFIER,Integer,int min1 = Integer.MAX_VALUE)<SUB>31</SUB>>", "227": "<(LOCAL,int min2: int)<SUB>32</SUB>>", "229": "<(IDENTIFIER,min2,int min2 = Integer.MAX_VALUE)<SUB>32</SUB>>", "231": "<(IDENTIFIER,Integer,int min2 = Integer.MAX_VALUE)<SUB>32</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; m - 1); k++),for (int k = 0; Some(k &lt; m - 1); k++))<SUB>33</SUB>>", "235": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>33</SUB>>", "237": "<(LITERAL,0,int k = 0)<SUB>33</SUB>>", "239": "<(IDENTIFIER,k,k &lt; m - 1)<SUB>33</SUB>>", "241": "<(IDENTIFIER,m,m - 1)<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.postIncrement,k++)<SUB>33</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "247": "<(IDENTIFIER,min1,min1 = Math.min(min1, Math.abs(arr[i][k] - arr[j][k + 1])))<SUB>34</SUB>>", "249": "<(IDENTIFIER,Math,Math.min(min1, Math.abs(arr[i][k] - arr[j][k + 1])))<SUB>34</SUB>>", "251": "<(abs,Math.abs(arr[i][k] - arr[j][k + 1]))<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.subtraction,arr[i][k] - arr[j][k + 1])<SUB>34</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>34</SUB>>", "257": "<(IDENTIFIER,i,arr[i][k] - arr[j][k + 1])<SUB>34</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,arr[j][k + 1])<SUB>34</SUB>>", "261": "<(IDENTIFIER,arr,arr[i][k] - arr[j][k + 1])<SUB>34</SUB>>", "263": "<(&lt;operator&gt;.addition,k + 1)<SUB>34</SUB>>", "265": "<(LITERAL,1,k + 1)<SUB>34</SUB>>", "267": "<(IDENTIFIER,min2,min2 = Math.min(min2, Math.abs(arr[i][k + 1] - arr[j][k])))<SUB>35</SUB>>", "269": "<(IDENTIFIER,Math,Math.min(min2, Math.abs(arr[i][k + 1] - arr[j][k])))<SUB>35</SUB>>", "271": "<(abs,Math.abs(arr[i][k + 1] - arr[j][k]))<SUB>35</SUB>>", "273": "<(&lt;operator&gt;.subtraction,arr[i][k + 1] - arr[j][k])<SUB>35</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>35</SUB>>", "277": "<(IDENTIFIER,i,arr[i][k + 1] - arr[j][k])<SUB>35</SUB>>", "279": "<(IDENTIFIER,k,k + 1)<SUB>35</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,arr[j][k])<SUB>35</SUB>>", "283": "<(IDENTIFIER,arr,arr[i][k + 1] - arr[j][k])<SUB>35</SUB>>", "285": "<(IDENTIFIER,k,arr[i][k + 1] - arr[j][k])<SUB>35</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,edgeadj[i][j])<SUB>37</SUB>>", "289": "<(IDENTIFIER,edgeadj,edgeadj[i][j] = min1)<SUB>37</SUB>>", "291": "<(IDENTIFIER,j,edgeadj[i][j] = min1)<SUB>37</SUB>>", "293": "<(&lt;operator&gt;.assignment,edgeadj[j][i] = min2)<SUB>38</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,edgeadj[j])<SUB>38</SUB>>", "297": "<(IDENTIFIER,j,edgeadj[j][i] = min2)<SUB>38</SUB>>", "299": "<(IDENTIFIER,min2,edgeadj[j][i] = min2)<SUB>38</SUB>>", "301": "<(&lt;operator&gt;.assignment,int power = (int) Math.pow(2, n))<SUB>41</SUB>>", "303": "<(&lt;operator&gt;.cast,(int) Math.pow(2, n))<SUB>41</SUB>>", "305": "<(pow,Math.pow(2, n))<SUB>41</SUB>>", "307": "<(LITERAL,2,Math.pow(2, n))<SUB>41</SUB>>", "309": "<(LOCAL,int[][][] dp: int[][][])<SUB>42</SUB>>", "311": "<(IDENTIFIER,dp,int[][][] dp = new int[power][n][n])<SUB>42</SUB>>", "313": "<(IDENTIFIER,power,new int[power][n][n])<SUB>42</SUB>>", "315": "<(IDENTIFIER,n,new int[power][n][n])<SUB>42</SUB>>", "317": "<(LOCAL,int i: int)<SUB>43</SUB>>", "319": "<(IDENTIFIER,i,int i = 0)<SUB>43</SUB>>", "321": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>43</SUB>>", "323": "<(IDENTIFIER,n,i &lt; n)<SUB>43</SUB>>", "325": "<(IDENTIFIER,i,i++)<SUB>43</SUB>>", "327": "<(&lt;operator&gt;.assignment,dp[(int) Math.pow(2, i)][i][i] = Integer.MAX_VALUE)<SUB>44</SUB>>", "329": "<(&lt;operator&gt;.indexAccess,dp[(int) Math.pow(2, i)][i])<SUB>44</SUB>>", "331": "<(IDENTIFIER,dp,dp[(int) Math.pow(2, i)][i][i] = Integer.MAX_VALUE)<SUB>44</SUB>>", "333": "<(TYPE_REF,int,int)<SUB>44</SUB>>", "335": "<(IDENTIFIER,Math,Math.pow(2, i))<SUB>44</SUB>>", "337": "<(IDENTIFIER,i,Math.pow(2, i))<SUB>44</SUB>>", "339": "<(IDENTIFIER,i,dp[(int) Math.pow(2, i)][i][i] = Integer.MAX_VALUE)<SUB>44</SUB>>", "341": "<(IDENTIFIER,Integer,dp[(int) Math.pow(2, i)][i][i] = Integer.MAX_VALUE)<SUB>44</SUB>>", "343": "<(CONTROL_STRUCTURE,for (int bit = 0; Some(bit &lt; power); bit++),for (int bit = 0; Some(bit &lt; power); bit++))<SUB>46</SUB>>", "345": "<(&lt;operator&gt;.assignment,int bit = 0)<SUB>46</SUB>>", "347": "<(LITERAL,0,int bit = 0)<SUB>46</SUB>>", "349": "<(IDENTIFIER,bit,bit &lt; power)<SUB>46</SUB>>", "351": "<(&lt;operator&gt;.postIncrement,bit++)<SUB>46</SUB>>", "353": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "355": "<(LOCAL,int j: int)<SUB>47</SUB>>", "357": "<(IDENTIFIER,j,int j = 0)<SUB>47</SUB>>", "359": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>47</SUB>>", "361": "<(IDENTIFIER,n,j &lt; n)<SUB>47</SUB>>", "363": "<(IDENTIFIER,j,j++)<SUB>47</SUB>>", "365": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>48</SUB>>", "367": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>48</SUB>>", "369": "<(LITERAL,0,int k = 0)<SUB>48</SUB>>", "371": "<(IDENTIFIER,k,k &lt; n)<SUB>48</SUB>>", "373": "<(&lt;operator&gt;.postIncrement,k++)<SUB>48</SUB>>", "375": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "377": "<(&lt;operator&gt;.logicalAnd,(bit &amp; (1 &lt;&lt; j)) &gt; 0 &amp;&amp; (bit &amp; (1 &lt;&lt; k)) &gt; 0 &amp;&amp; j != k)<SUB>49</SUB>>", "379": "<(&lt;operator&gt;.greaterThan,(bit &amp; (1 &lt;&lt; j)) &gt; 0)<SUB>49</SUB>>", "381": "<(IDENTIFIER,bit,bit &amp; (1 &lt;&lt; j))<SUB>49</SUB>>", "383": "<(LITERAL,1,1 &lt;&lt; j)<SUB>49</SUB>>", "385": "<(LITERAL,0,(bit &amp; (1 &lt;&lt; j)) &gt; 0)<SUB>49</SUB>>", "387": "<(&lt;operator&gt;.and,bit &amp; (1 &lt;&lt; k))<SUB>49</SUB>>", "389": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>49</SUB>>", "391": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>49</SUB>>", "393": "<(&lt;operator&gt;.notEquals,j != k)<SUB>49</SUB>>", "395": "<(IDENTIFIER,k,j != k)<SUB>49</SUB>>", "397": "<(LOCAL,int temp: int)<SUB>50</SUB>>", "399": "<(IDENTIFIER,temp,int temp = bit)<SUB>50</SUB>>", "401": "<(&lt;operators&gt;.assignmentAnd,temp &amp;= ~(1 &lt;&lt; k))<SUB>51</SUB>>", "403": "<(&lt;operator&gt;.not,~(1 &lt;&lt; k))<SUB>51</SUB>>", "405": "<(LITERAL,1,1 &lt;&lt; k)<SUB>51</SUB>>", "407": "<(LOCAL,int ans: int)<SUB>52</SUB>>", "409": "<(IDENTIFIER,ans,int ans = 0)<SUB>52</SUB>>", "411": "<(CONTROL_STRUCTURE,for (int l = 0; Some(l &lt; n); l++),for (int l = 0; Some(l &lt; n); l++))<SUB>53</SUB>>", "413": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>53</SUB>>", "415": "<(LITERAL,0,int l = 0)<SUB>53</SUB>>", "417": "<(IDENTIFIER,l,l &lt; n)<SUB>53</SUB>>", "419": "<(&lt;operator&gt;.postIncrement,l++)<SUB>53</SUB>>", "421": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "423": "<(&lt;operator&gt;.greaterThan,(temp &amp; (1 &lt;&lt; l)) &gt; 0)<SUB>54</SUB>>", "425": "<(IDENTIFIER,temp,temp &amp; (1 &lt;&lt; l))<SUB>54</SUB>>", "427": "<(LITERAL,1,1 &lt;&lt; l)<SUB>54</SUB>>", "429": "<(LITERAL,0,(temp &amp; (1 &lt;&lt; l)) &gt; 0)<SUB>54</SUB>>", "431": "<(LOCAL,int min: int)<SUB>55</SUB>>", "433": "<(IDENTIFIER,min,int min = Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "435": "<(IDENTIFIER,Math,Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "437": "<(&lt;operator&gt;.indexAccess,dp[temp][j])<SUB>55</SUB>>", "439": "<(IDENTIFIER,dp,Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "441": "<(IDENTIFIER,j,Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "443": "<(&lt;operator&gt;.indexAccess,adj[l][k])<SUB>55</SUB>>", "445": "<(IDENTIFIER,adj,Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "447": "<(IDENTIFIER,k,Math.min(dp[temp][j][l], adj[l][k]))<SUB>55</SUB>>", "449": "<(IDENTIFIER,ans,ans = Math.max(ans, min))<SUB>56</SUB>>", "451": "<(IDENTIFIER,Math,Math.max(ans, min))<SUB>56</SUB>>", "453": "<(IDENTIFIER,min,Math.max(ans, min))<SUB>56</SUB>>", "455": "<(&lt;operator&gt;.notEquals,j != k)<SUB>59</SUB>>", "457": "<(IDENTIFIER,k,j != k)<SUB>59</SUB>>", "459": "<(&lt;operator&gt;.assignment,dp[bit][j][k] = ans)<SUB>60</SUB>>", "461": "<(&lt;operator&gt;.indexAccess,dp[bit][j])<SUB>60</SUB>>", "463": "<(IDENTIFIER,dp,dp[bit][j][k] = ans)<SUB>60</SUB>>", "465": "<(IDENTIFIER,j,dp[bit][j][k] = ans)<SUB>60</SUB>>", "467": "<(IDENTIFIER,ans,dp[bit][j][k] = ans)<SUB>60</SUB>>", "469": "<(&lt;operator&gt;.assignment,int answer = 0)<SUB>67</SUB>>", "471": "<(LITERAL,0,int answer = 0)<SUB>67</SUB>>", "473": "<(LOCAL,int i: int)<SUB>68</SUB>>", "475": "<(IDENTIFIER,i,int i = 0)<SUB>68</SUB>>", "477": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>68</SUB>>", "479": "<(IDENTIFIER,n,i &lt; n)<SUB>68</SUB>>", "481": "<(IDENTIFIER,i,i++)<SUB>68</SUB>>", "483": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>69</SUB>>", "485": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>69</SUB>>", "487": "<(LITERAL,0,int j = 0)<SUB>69</SUB>>", "489": "<(IDENTIFIER,j,j &lt; n)<SUB>69</SUB>>", "491": "<(&lt;operator&gt;.postIncrement,j++)<SUB>69</SUB>>", "493": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "495": "<(&lt;operator&gt;.notEquals,i != j)<SUB>70</SUB>>", "497": "<(IDENTIFIER,j,i != j)<SUB>70</SUB>>", "499": "<(LOCAL,int ans: int)<SUB>71</SUB>>", "501": "<(IDENTIFIER,ans,int ans = Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "503": "<(IDENTIFIER,Math,Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "505": "<(&lt;operator&gt;.indexAccess,dp[power - 1][i])<SUB>71</SUB>>", "507": "<(IDENTIFIER,dp,Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "509": "<(IDENTIFIER,power,power - 1)<SUB>71</SUB>>", "511": "<(IDENTIFIER,i,Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "513": "<(&lt;operator&gt;.indexAccess,edgeadj[i][j])<SUB>71</SUB>>", "515": "<(IDENTIFIER,edgeadj,Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "517": "<(IDENTIFIER,j,Math.min(dp[power - 1][i][j], edgeadj[i][j]))<SUB>71</SUB>>", "519": "<(IDENTIFIER,answer,answer = Math.max(answer, ans))<SUB>72</SUB>>", "521": "<(IDENTIFIER,Math,Math.max(answer, ans))<SUB>72</SUB>>", "523": "<(IDENTIFIER,ans,Math.max(answer, ans))<SUB>72</SUB>>", "525": "<(IDENTIFIER,out,println(answer))<SUB>81</SUB>>", "527": "<(close,close())<SUB>97</SUB>>", "529": "<(MODIFIER,PUBLIC)>", "531": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}