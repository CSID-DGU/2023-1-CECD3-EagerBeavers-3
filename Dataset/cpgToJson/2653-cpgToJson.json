{"edges": [["19", "20"], ["19", "21"], ["19", "152"], ["19", "153"], ["19", "154"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "147"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "108"], ["75", "138"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "102"], ["92", "93"], ["92", "97"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["119", "120"], ["119", "132"], ["120", "121"], ["120", "125"], ["121", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["132", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["138", "145"], ["139", "140"], ["139", "141"], ["142", "143"], ["143", "144"], ["145", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "62"], ["62", "67"], ["147", "154"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "59"], ["47", "44"], ["59", "57"], ["67", "70"], ["70", "77"], ["70", "150"], ["73", "70"], ["148", "147"], ["28", "26"], ["50", "47"], ["77", "82"], ["150", "148"], ["51", "54"], ["54", "50"], ["82", "85"], ["85", "94"], ["85", "110"], ["88", "85"], ["110", "113"], ["113", "122"], ["113", "139"], ["116", "113"], ["139", "143"], ["139", "150"], ["143", "73"], ["92", "105"], ["92", "88"], ["120", "134"], ["120", "116"], ["93", "92"], ["93", "99"], ["97", "92"], ["103", "88"], ["121", "120"], ["121", "127"], ["125", "120"], ["133", "116"], ["94", "93"], ["99", "97"], ["105", "103"], ["122", "121"], ["126", "125"], ["134", "133"], ["127", "126"], ["19", "24"], ["20", "154"], ["22", "154"], ["25", "154"], ["25", "154"], ["32", "154"], ["30", "154"], ["30", "154"], ["35", "154"], ["35", "154"], ["35", "154"], ["57", "154"], ["57", "154"], ["57", "154"], ["62", "154"], ["67", "154"], ["70", "154"], ["70", "154"], ["70", "154"], ["77", "154"], ["110", "154"], ["113", "154"], ["113", "154"], ["113", "154"], ["139", "154"], ["139", "154"], ["147", "154"], ["147", "154"], ["147", "154"], ["143", "154"], ["73", "154"], ["121", "154"], ["120", "154"], ["126", "154"], ["125", "154"], ["120", "154"], ["120", "154"], ["133", "154"], ["133", "154"], ["116", "154"], ["93", "154"], ["92", "154"], ["97", "154"], ["92", "154"], ["92", "154"], ["103", "154"], ["103", "154"], ["88", "154"], ["50", "154"], ["54", "154"], ["50", "154"], ["50", "154"], ["47", "154"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["59", "57"], ["19", "62"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "67"], ["62", "147"], ["143", "147"], ["19", "147"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["44", "59"], ["19", "59"], ["67", "70"], ["73", "70"], ["19", "70"], ["59", "70"], ["113", "70"], ["70", "73"], ["19", "73"], ["19", "77"], ["19", "82"], ["19", "110"], ["32", "54"], ["19", "54"], ["82", "85"], ["88", "85"], ["19", "85"], ["70", "85"], ["85", "88"], ["19", "88"], ["110", "113"], ["116", "113"], ["19", "113"], ["85", "113"], ["113", "116"], ["19", "116"], ["77", "139"], ["126", "139"], ["97", "139"], ["103", "139"], ["19", "139"], ["62", "143"], ["19", "143"], ["93", "92"], ["97", "92"], ["97", "92"], ["35", "103"], ["126", "103"], ["97", "103"], ["121", "120"], ["125", "120"], ["125", "120"], ["19", "133"], ["57", "93"], ["121", "93"], ["133", "93"], ["77", "97"], ["103", "97"], ["19", "97"], ["35", "97"], ["126", "97"], ["57", "121"], ["133", "121"], ["93", "121"], ["126", "125"], ["126", "125"], ["19", "125"], ["35", "126"], ["97", "126"], ["77", "126"], ["97", "126"], ["103", "126"], ["19", "126"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["70", "77"], ["70", "113"], ["70", "85"], ["70", "82"], ["70", "110"], ["70", "139"], ["85", "94"], ["85", "85"], ["85", "92"], ["85", "93"], ["85", "88"], ["113", "120"], ["113", "113"], ["113", "116"], ["113", "122"], ["113", "121"], ["139", "73"], ["139", "143"], ["139", "70"], ["92", "103"], ["92", "105"], ["120", "134"], ["120", "133"], ["93", "99"], ["93", "97"], ["121", "126"], ["121", "127"], ["121", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean[] vis = new boolean[n])<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.alloc,new boolean[n])>", "61": "<(LOCAL,int c: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,int min = 200)<SUB>11</SUB>>", "79": "<(LITERAL,200,int min = 200)<SUB>11</SUB>>", "81": "<(LOCAL,int j: int)<SUB>12</SUB>>", "83": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "87": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,if (!vis[j] &amp;&amp; min &gt; arr[j]),if (!vis[j] &amp;&amp; min &gt; arr[j]))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.logicalNot,!vis[j])<SUB>13</SUB>>", "95": "<(IDENTIFIER,vis,!vis[j])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.greaterThan,min &gt; arr[j])<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>13</SUB>>", "101": "<(IDENTIFIER,j,min &gt; arr[j])<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.assignment,min = arr[j])<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>14</SUB>>", "107": "<(IDENTIFIER,j,min = arr[j])<SUB>14</SUB>>", "109": "<(LOCAL,int j: int)<SUB>17</SUB>>", "111": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>17</SUB>>", "115": "<(IDENTIFIER,n,j &lt; n)<SUB>17</SUB>>", "117": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "119": "<(CONTROL_STRUCTURE,if (!vis[j] &amp;&amp; arr[j] % min == 0),if (!vis[j] &amp;&amp; arr[j] % min == 0))<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.logicalNot,!vis[j])<SUB>18</SUB>>", "123": "<(IDENTIFIER,vis,!vis[j])<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.equals,arr[j] % min == 0)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>18</SUB>>", "129": "<(IDENTIFIER,j,arr[j] % min)<SUB>18</SUB>>", "131": "<(LITERAL,0,arr[j] % min == 0)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.assignment,vis[j] = true)<SUB>19</SUB>>", "135": "<(IDENTIFIER,vis,vis[j] = true)<SUB>19</SUB>>", "137": "<(LITERAL,true,vis[j] = true)<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.notEquals,min != 200)<SUB>23</SUB>>", "141": "<(LITERAL,200,min != 200)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,c++)<SUB>24</SUB>>", "145": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "147": "<(println,System.out.println(c))<SUB>28</SUB>>", "149": "<(IDENTIFIER,System,System.out.println(c))<SUB>28</SUB>>", "151": "<(IDENTIFIER,c,System.out.println(c))<SUB>28</SUB>>", "153": "<(MODIFIER,STATIC)>"}}