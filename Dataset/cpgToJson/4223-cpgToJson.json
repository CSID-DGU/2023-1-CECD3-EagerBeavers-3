{"edges": [["21", "23"], ["21", "243"], ["21", "244"], ["21", "245"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "241"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "46"], ["42", "43"], ["42", "45"], ["43", "44"], ["46", "47"], ["46", "48"], ["46", "52"], ["46", "53"], ["46", "57"], ["46", "58"], ["46", "63"], ["46", "93"], ["46", "94"], ["46", "99"], ["46", "100"], ["46", "104"], ["46", "109"], ["46", "114"], ["46", "234"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["104", "105"], ["104", "106"], ["104", "107"], ["107", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "127"], ["125", "132"], ["125", "135"], ["125", "137"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "145"], ["139", "140"], ["139", "141"], ["141", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["155", "229"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "164"], ["156", "171"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "180"], ["171", "181"], ["171", "184"], ["171", "210"], ["171", "224"], ["172", "173"], ["172", "179"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "205"], ["196", "197"], ["196", "204"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["214", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["241", "242"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "43"], ["241", "245"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["42", "50"], ["42", "241"], ["34", "32"], ["43", "42"], ["48", "55"], ["53", "60"], ["58", "65"], ["94", "102"], ["100", "107"], ["104", "110"], ["109", "116"], ["234", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "68"], ["68", "76"], ["68", "96"], ["71", "68"], ["96", "94"], ["102", "100"], ["107", "104"], ["110", "109"], ["116", "119"], ["119", "129"], ["119", "238"], ["122", "119"], ["236", "234"], ["238", "236"], ["76", "79"], ["79", "87"], ["79", "71"], ["82", "79"], ["127", "132"], ["132", "142"], ["132", "122"], ["135", "132"], ["85", "82"], ["129", "127"], ["139", "147"], ["86", "91"], ["91", "85"], ["141", "139"], ["147", "150"], ["150", "158"], ["150", "135"], ["153", "150"], ["87", "86"], ["142", "141"], ["229", "153"], ["158", "161"], ["161", "174"], ["161", "231"], ["164", "161"], ["231", "229"], ["166", "164"], ["181", "186"], ["210", "225"], ["167", "166"], ["173", "167"], ["173", "181"], ["186", "189"], ["189", "198"], ["189", "211"], ["192", "189"], ["211", "216"], ["214", "210"], ["225", "231"], ["225", "167"], ["174", "177"], ["177", "173"], ["216", "220"], ["219", "214"], ["196", "207"], ["196", "192"], ["205", "192"], ["220", "219"], ["197", "196"], ["207", "205"], ["198", "201"], ["201", "197"], ["21", "26"], ["22", "245"], ["24", "245"], ["27", "245"], ["28", "245"], ["31", "245"], ["31", "245"], ["39", "245"], ["37", "245"], ["37", "245"], ["43", "245"], ["42", "245"], ["42", "245"], ["241", "245"], ["241", "245"], ["48", "245"], ["55", "245"], ["53", "245"], ["53", "245"], ["58", "245"], ["58", "245"], ["58", "245"], ["68", "245"], ["96", "245"], ["94", "245"], ["94", "245"], ["100", "245"], ["100", "245"], ["104", "245"], ["104", "245"], ["104", "245"], ["109", "245"], ["109", "245"], ["116", "245"], ["119", "245"], ["119", "245"], ["119", "245"], ["238", "245"], ["234", "245"], ["234", "245"], ["127", "245"], ["132", "245"], ["132", "245"], ["122", "245"], ["139", "245"], ["141", "245"], ["139", "245"], ["139", "245"], ["147", "245"], ["150", "245"], ["150", "245"], ["150", "245"], ["135", "245"], ["158", "245"], ["161", "245"], ["161", "245"], ["173", "245"], ["173", "245"], ["173", "245"], ["181", "245"], ["186", "245"], ["189", "245"], ["189", "245"], ["210", "245"], ["219", "245"], ["219", "245"], ["214", "245"], ["210", "245"], ["210", "245"], ["225", "245"], ["225", "245"], ["229", "245"], ["229", "245"], ["229", "245"], ["153", "245"], ["197", "245"], ["197", "245"], ["196", "245"], ["196", "245"], ["205", "245"], ["205", "245"], ["192", "245"], ["166", "245"], ["164", "245"], ["164", "245"], ["76", "245"], ["79", "245"], ["79", "245"], ["71", "245"], ["85", "245"], ["91", "245"], ["85", "245"], ["85", "245"], ["82", "245"], ["231", "245"], ["214", "245"], ["104", "245"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "241"], ["234", "241"], ["21", "241"], ["27", "39"], ["21", "39"], ["43", "42"], ["21", "42"], ["50", "48"], ["55", "53"], ["60", "58"], ["60", "58"], ["96", "94"], ["96", "94"], ["102", "100"], ["21", "109"], ["37", "43"], ["21", "43"], ["21", "65"], ["21", "104"], ["100", "104"], ["109", "104"], ["234", "104"], ["173", "104"], ["210", "104"], ["107", "104"], ["21", "116"], ["31", "234"], ["21", "234"], ["104", "234"], ["39", "50"], ["55", "50"], ["91", "50"], ["21", "50"], ["50", "55"], ["21", "55"], ["53", "60"], ["21", "60"], ["48", "60"], ["65", "68"], ["71", "68"], ["21", "68"], ["60", "68"], ["68", "71"], ["21", "71"], ["21", "96"], ["68", "96"], ["94", "102"], ["21", "102"], ["21", "107"], ["116", "119"], ["122", "119"], ["21", "119"], ["60", "119"], ["79", "119"], ["119", "122"], ["21", "122"], ["21", "76"], ["129", "127"], ["129", "127"], ["102", "238"], ["129", "238"], ["21", "238"], ["76", "79"], ["82", "79"], ["21", "79"], ["60", "79"], ["79", "82"], ["21", "82"], ["91", "85"], ["127", "132"], ["135", "132"], ["21", "132"], ["132", "135"], ["198", "135"], ["166", "135"], ["21", "135"], ["141", "139"], ["102", "129"], ["21", "129"], ["21", "147"], ["55", "91"], ["21", "91"], ["58", "141"], ["147", "150"], ["153", "150"], ["21", "150"], ["96", "150"], ["189", "150"], ["150", "153"], ["21", "153"], ["231", "229"], ["231", "229"], ["132", "158"], ["198", "158"], ["166", "158"], ["21", "158"], ["166", "164"], ["166", "164"], ["158", "161"], ["164", "161"], ["21", "161"], ["21", "181"], ["214", "210"], ["214", "210"], ["214", "210"], ["21", "231"], ["139", "231"], ["229", "231"], ["167", "166"], ["167", "166"], ["198", "166"], ["21", "166"], ["132", "166"], ["21", "186"], ["161", "167"], ["225", "167"], ["21", "167"], ["104", "173"], ["177", "173"], ["186", "189"], ["192", "189"], ["21", "189"], ["150", "189"], ["201", "192"], ["21", "192"], ["21", "214"], ["104", "214"], ["210", "214"], ["173", "214"], ["181", "214"], ["205", "214"], ["161", "225"], ["198", "225"], ["21", "225"], ["21", "177"], ["139", "205"], ["229", "205"], ["104", "219"], ["173", "219"], ["181", "219"], ["205", "219"], ["21", "219"], ["197", "196"], ["197", "196"], ["21", "196"], ["181", "205"], ["21", "205"], ["198", "197"], ["198", "197"], ["201", "197"], ["201", "197"], ["166", "198"], ["21", "198"], ["132", "198"], ["161", "198"], ["21", "201"], ["189", "201"], ["42", "107"], ["42", "94"], ["42", "68"], ["42", "60"], ["42", "96"], ["42", "42"], ["42", "102"], ["42", "104"], ["42", "119"], ["42", "50"], ["42", "238"], ["42", "43"], ["42", "58"], ["42", "100"], ["42", "48"], ["42", "116"], ["42", "236"], ["42", "65"], ["42", "234"], ["42", "53"], ["42", "110"], ["42", "55"], ["42", "109"], ["68", "68"], ["68", "76"], ["68", "79"], ["68", "71"], ["119", "132"], ["119", "119"], ["119", "129"], ["119", "127"], ["119", "122"], ["79", "85"], ["79", "87"], ["79", "91"], ["79", "79"], ["79", "86"], ["79", "82"], ["132", "132"], ["132", "150"], ["132", "139"], ["132", "141"], ["132", "142"], ["132", "147"], ["132", "135"], ["150", "161"], ["150", "150"], ["150", "153"], ["150", "231"], ["150", "158"], ["150", "229"], ["161", "173"], ["161", "174"], ["161", "177"], ["173", "214"], ["173", "167"], ["173", "161"], ["173", "225"], ["173", "189"], ["173", "181"], ["173", "164"], ["173", "186"], ["173", "166"], ["173", "210"], ["173", "220"], ["173", "211"], ["173", "216"], ["173", "219"], ["189", "192"], ["189", "196"], ["189", "197"], ["189", "198"], ["189", "189"], ["189", "201"], ["225", "167"], ["225", "161"], ["225", "164"], ["225", "166"], ["196", "207"], ["196", "205"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.postDecrement,t--)<SUB>5</SUB>>", "45": "<(LITERAL,0,t-- &gt; 0)<SUB>5</SUB>>", "47": "<(LOCAL,int n: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,scanner,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(LOCAL,int[][] cols: int[][])<SUB>8</SUB>>", "59": "<(IDENTIFIER,cols,int[][] cols = new int[m][n])<SUB>8</SUB>>", "61": "<(IDENTIFIER,m,new int[m][n])<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(LOCAL,int j: int)<SUB>10</SUB>>", "77": "<(IDENTIFIER,j,int j = 0)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>10</SUB>>", "81": "<(IDENTIFIER,m,j &lt; m)<SUB>10</SUB>>", "83": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,cols[j][i] = nextInt())<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,cols[j])<SUB>11</SUB>>", "89": "<(IDENTIFIER,j,cols[j][i] = nextInt())<SUB>11</SUB>>", "91": "<(nextInt,nextInt())<SUB>11</SUB>>", "93": "<(LOCAL,int maxMask: int)<SUB>14</SUB>>", "95": "<(IDENTIFIER,maxMask,int maxMask = 1 &lt;&lt; n)<SUB>14</SUB>>", "97": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "99": "<(LOCAL,int[] dp: int[])<SUB>15</SUB>>", "101": "<(IDENTIFIER,dp,int[] dp = new int[maxMask])<SUB>15</SUB>>", "103": "<(IDENTIFIER,maxMask,new int[maxMask])<SUB>15</SUB>>", "105": "<(IDENTIFIER,Arrays,fill(dp, -1))<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>17</SUB>>", "111": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>17</SUB>>", "113": "<(LITERAL,0,dp[0] = 0)<SUB>17</SUB>>", "115": "<(LOCAL,int i: int)<SUB>18</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>18</SUB>>", "121": "<(IDENTIFIER,m,i &lt; m)<SUB>18</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int mask = maxMask - 1; Some(mask &gt;= 0); mask--),for (int mask = maxMask - 1; Some(mask &gt;= 0); mask--))<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.assignment,int mask = maxMask - 1)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.subtraction,maxMask - 1)<SUB>19</SUB>>", "131": "<(LITERAL,1,maxMask - 1)<SUB>19</SUB>>", "133": "<(IDENTIFIER,mask,mask &gt;= 0)<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.postDecrement,mask--)<SUB>19</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.assignment,int[] arr = this.clone())<SUB>20</SUB>>", "141": "<(clone,this.clone())<SUB>20</SUB>>", "143": "<(IDENTIFIER,cols,this.clone())<SUB>20</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "149": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "151": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "157": "<(LOCAL,int smask: int)<SUB>22</SUB>>", "159": "<(IDENTIFIER,smask,int smask = mask)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.greaterEqualsThan,smask &gt;= 0)<SUB>22</SUB>>", "163": "<(LITERAL,0,smask &gt;= 0)<SUB>22</SUB>>", "165": "<(IDENTIFIER,smask,smask = (smask - 1) &amp; mask)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.subtraction,smask - 1)<SUB>22</SUB>>", "169": "<(LITERAL,1,smask - 1)<SUB>22</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.equals,dp[smask] == -1)<SUB>23</SUB>>", "175": "<(IDENTIFIER,dp,dp[smask] == -1)<SUB>23</SUB>>", "177": "<(&lt;operator&gt;.minus,-1)<SUB>23</SUB>>", "179": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.assignment,int add = 0)<SUB>24</SUB>>", "183": "<(LITERAL,0,int add = 0)<SUB>24</SUB>>", "185": "<(LOCAL,int k: int)<SUB>25</SUB>>", "187": "<(IDENTIFIER,k,int k = 0)<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>25</SUB>>", "191": "<(IDENTIFIER,n,k &lt; n)<SUB>25</SUB>>", "193": "<(IDENTIFIER,k,k++)<SUB>25</SUB>>", "195": "<(CONTROL_STRUCTURE,if (((mask ^ smask) &amp; (1 &lt;&lt; k)) &gt; 0),if (((mask ^ smask) &amp; (1 &lt;&lt; k)) &gt; 0))<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.and,(mask ^ smask) &amp; (1 &lt;&lt; k))<SUB>26</SUB>>", "199": "<(IDENTIFIER,mask,mask ^ smask)<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>26</SUB>>", "203": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.assignmentPlus,add += arr[k])<SUB>26</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>26</SUB>>", "209": "<(IDENTIFIER,k,add += arr[k])<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>28</SUB>>", "213": "<(IDENTIFIER,mask,dp[mask] = Math.max(dp[mask], dp[smask] + add))<SUB>28</SUB>>", "215": "<(IDENTIFIER,Math,Math.max(dp[mask], dp[smask] + add))<SUB>28</SUB>>", "217": "<(IDENTIFIER,dp,Math.max(dp[mask], dp[smask] + add))<SUB>28</SUB>>", "219": "<(&lt;operator&gt;.addition,dp[smask] + add)<SUB>28</SUB>>", "221": "<(IDENTIFIER,dp,dp[smask] + add)<SUB>28</SUB>>", "223": "<(IDENTIFIER,add,dp[smask] + add)<SUB>28</SUB>>", "225": "<(&lt;operator&gt;.equals,smask == 0)<SUB>29</SUB>>", "227": "<(LITERAL,0,smask == 0)<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.assignment,arr = shift(arr))<SUB>31</SUB>>", "231": "<(shift,shift(arr))<SUB>31</SUB>>", "233": "<(IDENTIFIER,arr,shift(arr))<SUB>31</SUB>>", "235": "<(IDENTIFIER,out,println(dp[maxMask - 1]))<SUB>35</SUB>>", "237": "<(IDENTIFIER,dp,println(dp[maxMask - 1]))<SUB>35</SUB>>", "239": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>35</SUB>>", "241": "<(flush,flush())<SUB>37</SUB>>", "243": "<(MODIFIER,PUBLIC)>", "245": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}