{"edges": [["19", "20"], ["19", "21"], ["19", "166"], ["19", "167"], ["19", "168"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "42"], ["21", "49"], ["21", "134"], ["21", "135"], ["21", "138"], ["21", "161"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "48"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "59"], ["49", "61"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "69"], ["62", "95"], ["63", "64"], ["63", "68"], ["64", "65"], ["64", "67"], ["65", "66"], ["69", "70"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "88"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["96", "97"], ["97", "98"], ["97", "99"], ["97", "104"], ["97", "107"], ["97", "109"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "117"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "133"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "160"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["22", "28"], ["25", "32"], ["30", "39"], ["35", "44"], ["42", "51"], ["135", "140"], ["161", "168"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["43", "42"], ["51", "56"], ["54", "65"], ["54", "135"], ["59", "56"], ["140", "143"], ["143", "156"], ["143", "164"], ["146", "143"], ["148", "146"], ["162", "161"], ["28", "26"], ["39", "37"], ["44", "43"], ["56", "54"], ["150", "148"], ["164", "162"], ["63", "72"], ["63", "101"], ["151", "150"], ["64", "63"], ["153", "151"], ["65", "64"], ["72", "75"], ["75", "84"], ["75", "59"], ["78", "75"], ["80", "78"], ["154", "153"], ["81", "89"], ["88", "80"], ["99", "104"], ["104", "113"], ["104", "59"], ["107", "104"], ["109", "107"], ["156", "154"], ["82", "81"], ["89", "92"], ["92", "88"], ["101", "99"], ["110", "120"], ["117", "109"], ["84", "82"], ["111", "110"], ["118", "117"], ["113", "111"], ["119", "127"], ["124", "118"], ["120", "119"], ["125", "130"], ["130", "124"], ["127", "125"], ["19", "24"], ["20", "168"], ["22", "168"], ["25", "168"], ["25", "168"], ["32", "168"], ["30", "168"], ["30", "168"], ["35", "168"], ["37", "168"], ["35", "168"], ["35", "168"], ["42", "168"], ["42", "168"], ["54", "168"], ["54", "168"], ["135", "168"], ["140", "168"], ["143", "168"], ["143", "168"], ["143", "168"], ["161", "168"], ["161", "168"], ["161", "168"], ["151", "168"], ["150", "168"], ["150", "168"], ["148", "168"], ["148", "168"], ["146", "168"], ["65", "168"], ["64", "168"], ["63", "168"], ["63", "168"], ["99", "168"], ["104", "168"], ["104", "168"], ["109", "168"], ["118", "168"], ["118", "168"], ["117", "168"], ["117", "168"], ["109", "168"], ["109", "168"], ["107", "168"], ["72", "168"], ["75", "168"], ["75", "168"], ["59", "168"], ["80", "168"], ["80", "168"], ["80", "168"], ["78", "168"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["19", "42"], ["19", "135"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "140"], ["150", "148"], ["150", "148"], ["135", "161"], ["148", "161"], ["19", "161"], ["25", "32"], ["19", "32"], ["19", "37"], ["30", "37"], ["51", "54"], ["59", "54"], ["19", "54"], ["56", "54"], ["56", "54"], ["54", "59"], ["19", "59"], ["140", "143"], ["146", "143"], ["19", "143"], ["56", "143"], ["156", "143"], ["143", "146"], ["19", "146"], ["30", "39"], ["19", "39"], ["37", "56"], ["101", "56"], ["75", "56"], ["19", "56"], ["135", "150"], ["148", "150"], ["19", "150"], ["117", "150"], ["64", "63"], ["64", "63"], ["19", "63"], ["135", "151"], ["148", "151"], ["19", "151"], ["65", "64"], ["19", "64"], ["19", "72"], ["32", "65"], ["19", "65"], ["72", "75"], ["78", "75"], ["19", "75"], ["56", "75"], ["92", "78"], ["19", "78"], ["101", "99"], ["101", "99"], ["117", "109"], ["117", "109"], ["99", "104"], ["107", "104"], ["19", "104"], ["19", "107"], ["104", "107"], ["143", "156"], ["19", "156"], ["75", "92"], ["19", "92"], ["56", "101"], ["19", "101"], ["19", "117"], ["54", "84"], ["19", "84"], ["54", "113"], ["19", "113"], ["104", "130"], ["19", "130"], ["19", "127"], ["54", "127"], ["54", "64"], ["54", "56"], ["54", "65"], ["54", "59"], ["54", "54"], ["54", "63"], ["143", "154"], ["143", "146"], ["143", "150"], ["143", "151"], ["143", "153"], ["143", "148"], ["143", "143"], ["143", "156"], ["63", "75"], ["63", "99"], ["63", "72"], ["63", "104"], ["63", "101"], ["75", "89"], ["75", "75"], ["75", "81"], ["75", "84"], ["75", "92"], ["75", "82"], ["75", "80"], ["75", "88"], ["75", "78"], ["104", "107"], ["104", "120"], ["104", "113"], ["104", "104"], ["104", "119"], ["104", "130"], ["104", "118"], ["104", "110"], ["104", "117"], ["104", "127"], ["104", "124"], ["104", "125"], ["104", "111"], ["104", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[][] DP = new int[n][n + 1])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n][n + 1])>", "39": "<(&lt;operator&gt;.addition,n + 1)<SUB>5</SUB>>", "41": "<(LITERAL,1,n + 1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.indexAccess,DP[0][0])<SUB>6</SUB>>", "45": "<(IDENTIFIER,DP,DP[0][0] = 1)<SUB>6</SUB>>", "47": "<(LITERAL,0,DP[0][0] = 1)<SUB>6</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,n - 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.equals,in.next().charAt(0) == 'f')<SUB>9</SUB>>", "65": "<(next,next())<SUB>9</SUB>>", "67": "<(LITERAL,0,charAt(0))<SUB>9</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "71": "<(LOCAL,int j: int)<SUB>10</SUB>>", "73": "<(IDENTIFIER,j,int j = 1)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>10</SUB>>", "77": "<(IDENTIFIER,n,j &lt; n)<SUB>10</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,DP[i + 1][j])<SUB>11</SUB>>", "83": "<(IDENTIFIER,DP,DP[i + 1][j] = DP[i][j - 1])<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i + 1)<SUB>11</SUB>>", "87": "<(IDENTIFIER,j,DP[i + 1][j] = DP[i][j - 1])<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,DP[i])<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,DP[i + 1][j] = DP[i][j - 1])<SUB>11</SUB>>", "93": "<(IDENTIFIER,j,j - 1)<SUB>11</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int j = n - 1; Some(j &gt;= 0); j--),for (int j = n - 1; Some(j &gt;= 0); j--))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int j = n - 1)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "103": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "105": "<(IDENTIFIER,j,j &gt;= 0)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,j--)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,DP[i + 1][j] = (DP[i][j] + DP[i + 1][j + 1]) % MOD)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,DP[i + 1])<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "115": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.modulo,(DP[i][j] + DP[i + 1][j + 1]) % MOD)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,DP[i][j])<SUB>14</SUB>>", "121": "<(IDENTIFIER,DP,DP[i][j] + DP[i + 1][j + 1])<SUB>14</SUB>>", "123": "<(IDENTIFIER,j,DP[i][j] + DP[i + 1][j + 1])<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,DP[i + 1])<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "129": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "131": "<(IDENTIFIER,j,j + 1)<SUB>14</SUB>>", "133": "<(IDENTIFIER,MOD,(DP[i][j] + DP[i + 1][j + 1]) % MOD)<SUB>14</SUB>>", "135": "<(&lt;operator&gt;.assignment,int answer = 0)<SUB>18</SUB>>", "137": "<(LITERAL,0,int answer = 0)<SUB>18</SUB>>", "139": "<(LOCAL,int i: int)<SUB>19</SUB>>", "141": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "145": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "149": "<(IDENTIFIER,answer,answer = (answer + DP[n - 1][i]) % MOD)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.addition,answer + DP[n - 1][i])<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,DP[n - 1][i])<SUB>20</SUB>>", "155": "<(IDENTIFIER,DP,answer + DP[n - 1][i])<SUB>20</SUB>>", "157": "<(IDENTIFIER,n,n - 1)<SUB>20</SUB>>", "159": "<(IDENTIFIER,i,answer + DP[n - 1][i])<SUB>20</SUB>>", "161": "<(println,System.out.println(answer))<SUB>21</SUB>>", "163": "<(IDENTIFIER,System,System.out.println(answer))<SUB>21</SUB>>", "165": "<(IDENTIFIER,answer,System.out.println(answer))<SUB>21</SUB>>", "167": "<(MODIFIER,STATIC)>"}}