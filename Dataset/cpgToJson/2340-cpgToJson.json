{"edges": [["19", "20"], ["19", "21"], ["19", "164"], ["19", "165"], ["19", "166"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "45"], ["21", "61"], ["21", "101"], ["21", "102"], ["21", "106"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "49"], ["45", "52"], ["45", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "65"], ["61", "68"], ["61", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "75"], ["71", "78"], ["71", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "93"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "110"], ["106", "113"], ["106", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "121"], ["115", "122"], ["115", "126"], ["115", "127"], ["115", "142"], ["115", "149"], ["117", "118"], ["117", "119"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "141"], ["130", "131"], ["130", "140"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "153"], ["149", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["22", "28"], ["25", "34"], ["32", "39"], ["37", "42"], ["42", "46"], ["102", "107"], ["24", "22"], ["26", "25"], ["34", "32"], ["39", "37"], ["46", "49"], ["49", "56"], ["49", "62"], ["52", "49"], ["62", "65"], ["65", "72"], ["65", "104"], ["68", "65"], ["104", "102"], ["107", "110"], ["110", "166"], ["110", "119"], ["113", "110"], ["28", "26"], ["55", "52"], ["117", "124"], ["122", "132"], ["127", "145"], ["142", "150"], ["56", "59"], ["59", "55"], ["72", "75"], ["75", "83"], ["75", "68"], ["78", "75"], ["119", "117"], ["124", "122"], ["129", "127"], ["144", "142"], ["150", "156"], ["150", "162"], ["153", "113"], ["130", "129"], ["145", "144"], ["154", "153"], ["159", "113"], ["82", "97"], ["82", "78"], ["131", "130"], ["156", "154"], ["160", "159"], ["83", "82"], ["83", "87"], ["86", "82"], ["94", "78"], ["132", "136"], ["135", "131"], ["162", "160"], ["87", "90"], ["90", "86"], ["96", "94"], ["136", "135"], ["97", "96"], ["19", "24"], ["20", "166"], ["22", "166"], ["25", "166"], ["25", "166"], ["32", "166"], ["37", "166"], ["37", "166"], ["37", "166"], ["42", "166"], ["42", "166"], ["65", "166"], ["65", "166"], ["104", "166"], ["102", "166"], ["102", "166"], ["107", "166"], ["110", "166"], ["110", "166"], ["110", "166"], ["113", "166"], ["68", "166"], ["52", "166"], ["19", "20"], ["19", "22"], ["34", "32"], ["39", "37"], ["19", "42"], ["104", "102"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "62"], ["19", "107"], ["25", "34"], ["19", "34"], ["32", "39"], ["19", "39"], ["46", "49"], ["52", "49"], ["19", "49"], ["39", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["62", "65"], ["68", "65"], ["19", "65"], ["49", "65"], ["75", "65"], ["65", "68"], ["83", "68"], ["19", "68"], ["34", "104"], ["59", "104"], ["19", "104"], ["107", "110"], ["113", "110"], ["19", "110"], ["102", "110"], ["110", "113"], ["19", "113"], ["119", "117"], ["124", "122"], ["129", "127"], ["129", "127"], ["144", "142"], ["144", "142"], ["19", "72"], ["34", "59"], ["19", "59"], ["72", "75"], ["78", "75"], ["19", "75"], ["65", "75"], ["83", "78"], ["19", "78"], ["104", "119"], ["124", "119"], ["19", "119"], ["119", "124"], ["19", "124"], ["130", "129"], ["130", "129"], ["19", "129"], ["42", "144"], ["150", "144"], ["94", "144"], ["19", "144"], ["127", "144"], ["142", "150"], ["19", "150"], ["159", "153"], ["19", "153"], ["131", "130"], ["131", "130"], ["19", "130"], ["42", "145"], ["150", "145"], ["94", "145"], ["19", "145"], ["127", "145"], ["153", "159"], ["19", "159"], ["83", "82"], ["83", "82"], ["86", "82"], ["86", "82"], ["96", "94"], ["96", "94"], ["132", "131"], ["132", "131"], ["136", "131"], ["136", "131"], ["19", "131"], ["65", "83"], ["19", "83"], ["75", "83"], ["37", "86"], ["55", "86"], ["122", "132"], ["19", "132"], ["117", "132"], ["136", "135"], ["136", "135"], ["19", "135"], ["42", "96"], ["94", "96"], ["19", "96"], ["132", "136"], ["19", "136"], ["132", "136"], ["42", "97"], ["94", "97"], ["19", "97"], ["49", "49"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "55"], ["65", "68"], ["65", "75"], ["65", "72"], ["65", "65"], ["110", "113"], ["110", "136"], ["110", "145"], ["110", "122"], ["110", "131"], ["110", "132"], ["110", "142"], ["110", "150"], ["110", "119"], ["110", "144"], ["110", "129"], ["110", "130"], ["110", "135"], ["110", "110"], ["110", "117"], ["110", "127"], ["110", "124"], ["75", "75"], ["75", "82"], ["75", "83"], ["75", "78"], ["150", "160"], ["150", "154"], ["150", "162"], ["150", "153"], ["150", "159"], ["150", "156"], ["82", "94"], ["82", "96"], ["82", "97"], ["83", "87"], ["83", "90"], ["83", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(LOCAL,int j: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] ar = new int[n])<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(LOCAL,int inv: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,inv,int inv = 0)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,i = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,ar[i] = nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,ar,ar[i] = nextInt())<SUB>8</SUB>>", "59": "<(nextInt,nextInt())<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "63": "<(IDENTIFIER,i,i = 0)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "71": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; n); j++),for (j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "73": "<(IDENTIFIER,j,j = 0)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,if (i &gt; j &amp;&amp; ar[i] &lt; ar[j]),if (i &gt; j &amp;&amp; ar[i] &lt; ar[j]))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.greaterThan,i &gt; j)<SUB>13</SUB>>", "85": "<(IDENTIFIER,j,i &gt; j)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>13</SUB>>", "89": "<(IDENTIFIER,i,ar[i] &lt; ar[j])<SUB>13</SUB>>", "91": "<(IDENTIFIER,ar,ar[i] &lt; ar[j])<SUB>13</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "95": "<(IDENTIFIER,inv,inv = (inv + 1) % 2)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.addition,inv + 1)<SUB>14</SUB>>", "99": "<(LITERAL,1,inv + 1)<SUB>14</SUB>>", "101": "<(LOCAL,int q: int)<SUB>19</SUB>>", "103": "<(IDENTIFIER,q,int q = nextInt())<SUB>19</SUB>>", "105": "<(IDENTIFIER,sc,nextInt())<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.assignment,i = 0)<SUB>21</SUB>>", "109": "<(LITERAL,0,i = 0)<SUB>21</SUB>>", "111": "<(IDENTIFIER,i,i &lt; q)<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.assignment,int l = nextInt())<SUB>22</SUB>>", "119": "<(nextInt,nextInt())<SUB>22</SUB>>", "121": "<(LOCAL,int r: int)<SUB>23</SUB>>", "123": "<(IDENTIFIER,r,int r = nextInt())<SUB>23</SUB>>", "125": "<(IDENTIFIER,sc,nextInt())<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.assignment,int c = (((r - l) * (r - l + 1)) / 2) % 2)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.modulo,(((r - l) * (r - l + 1)) / 2) % 2)<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.multiplication,(r - l) * (r - l + 1))<SUB>25</SUB>>", "133": "<(IDENTIFIER,r,r - l)<SUB>25</SUB>>", "135": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>25</SUB>>", "137": "<(IDENTIFIER,r,r - l)<SUB>25</SUB>>", "139": "<(LITERAL,1,r - l + 1)<SUB>25</SUB>>", "141": "<(LITERAL,2,(((r - l) * (r - l + 1)) / 2) % 2)<SUB>25</SUB>>", "143": "<(IDENTIFIER,inv,inv = (inv + c) % 2)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.addition,inv + c)<SUB>26</SUB>>", "147": "<(IDENTIFIER,c,inv + c)<SUB>26</SUB>>", "149": "<(CONTROL_STRUCTURE,if (inv == 0),if (inv == 0))<SUB>28</SUB>>", "151": "<(IDENTIFIER,inv,inv == 0)<SUB>28</SUB>>", "153": "<(println,System.out.println(&quot;even&quot;))<SUB>29</SUB>>", "155": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>29</SUB>>", "157": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>29</SUB>>", "159": "<(println,System.out.println(&quot;odd&quot;))<SUB>31</SUB>>", "161": "<(IDENTIFIER,System,System.out.println(&quot;odd&quot;))<SUB>31</SUB>>", "163": "<(LITERAL,&quot;odd&quot;,System.out.println(&quot;odd&quot;))<SUB>31</SUB>>", "165": "<(MODIFIER,STATIC)>"}}