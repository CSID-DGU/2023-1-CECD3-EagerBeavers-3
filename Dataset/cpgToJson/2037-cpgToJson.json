{"edges": [["27", "29"], ["27", "133"], ["27", "134"], ["27", "135"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "6"], ["29", "44"], ["29", "47"], ["29", "65"], ["29", "66"], ["29", "8"], ["29", "72"], ["29", "75"], ["29", "10"], ["29", "76"], ["29", "79"], ["29", "82"], ["29", "12"], ["29", "83"], ["29", "86"], ["29", "87"], ["29", "109"], ["29", "128"], ["29", "130"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "5"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "64"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "58"], ["54", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["72", "74"], ["75", "7"], ["76", "77"], ["76", "78"], ["79", "9"], ["79", "80"], ["80", "81"], ["83", "84"], ["83", "85"], ["86", "11"], ["87", "88"], ["87", "90"], ["88", "89"], ["90", "91"], ["90", "97"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "102"], ["98", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "114"], ["109", "118"], ["110", "111"], ["110", "113"], ["111", "112"], ["114", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "132"], ["30", "37"], ["33", "46"], ["44", "51"], ["47", "70"], ["66", "74"], ["72", "75"], ["75", "78"], ["76", "80"], ["79", "85"], ["83", "86"], ["86", "88"], ["128", "130"], ["130", "135"], ["32", "30"], ["46", "44"], ["68", "66"], ["74", "72"], ["78", "76"], ["80", "79"], ["85", "83"], ["88", "95"], ["88", "111"], ["110", "115"], ["110", "120"], ["35", "42"], ["38", "33"], ["49", "57"], ["52", "47"], ["70", "68"], ["91", "99"], ["111", "110"], ["115", "128"], ["37", "35"], ["40", "38"], ["51", "49"], ["93", "91"], ["98", "88"], ["98", "103"], ["120", "125"], ["123", "128"], ["42", "40"], ["55", "62"], ["58", "52"], ["95", "93"], ["99", "98"], ["103", "106"], ["106", "88"], ["125", "123"], ["57", "55"], ["60", "58"], ["62", "60"], ["27", "32"], ["28", "135"], ["30", "135"], ["38", "135"], ["38", "135"], ["33", "135"], ["44", "135"], ["52", "135"], ["55", "135"], ["58", "135"], ["58", "135"], ["52", "135"], ["47", "135"], ["66", "135"], ["68", "135"], ["66", "135"], ["66", "135"], ["72", "135"], ["75", "135"], ["75", "135"], ["76", "135"], ["80", "135"], ["79", "135"], ["79", "135"], ["83", "135"], ["86", "135"], ["88", "135"], ["88", "135"], ["111", "135"], ["110", "135"], ["110", "135"], ["120", "135"], ["125", "135"], ["123", "135"], ["123", "135"], ["115", "135"], ["128", "135"], ["128", "135"], ["130", "135"], ["130", "135"], ["93", "135"], ["93", "135"], ["91", "135"], ["91", "135"], ["99", "135"], ["99", "135"], ["98", "135"], ["98", "135"], ["106", "135"], ["106", "135"], ["106", "135"], ["120", "135"], ["27", "28"], ["27", "30"], ["27", "44"], ["68", "66"], ["68", "66"], ["27", "72"], ["27", "76"], ["27", "83"], ["30", "33"], ["27", "33"], ["35", "33"], ["38", "33"], ["44", "47"], ["27", "47"], ["55", "47"], ["52", "47"], ["72", "75"], ["27", "75"], ["76", "79"], ["27", "79"], ["80", "79"], ["83", "86"], ["27", "86"], ["123", "128"], ["115", "128"], ["27", "128"], ["38", "130"], ["58", "130"], ["27", "130"], ["27", "35"], ["27", "43"], ["27", "49"], ["27", "64"], ["27", "68"], ["70", "68"], ["70", "80"], ["27", "80"], ["79", "88"], ["95", "88"], ["27", "88"], ["93", "91"], ["93", "91"], ["111", "110"], ["27", "110"], ["35", "38"], ["27", "38"], ["49", "52"], ["27", "52"], ["55", "52"], ["58", "52"], ["33", "70"], ["27", "70"], ["86", "111"], ["103", "111"], ["27", "111"], ["47", "115"], ["27", "115"], ["27", "55"], ["27", "63"], ["68", "93"], ["27", "93"], ["95", "93"], ["99", "98"], ["99", "98"], ["27", "120"], ["111", "120"], ["47", "123"], ["27", "123"], ["125", "123"], ["125", "123"], ["55", "58"], ["27", "58"], ["88", "95"], ["27", "95"], ["75", "99"], ["106", "99"], ["27", "99"], ["91", "99"], ["86", "103"], ["27", "103"], ["99", "103"], ["99", "106"], ["27", "106"], ["103", "106"], ["120", "125"], ["27", "125"], ["88", "98"], ["88", "99"], ["88", "88"], ["88", "95"], ["88", "91"], ["88", "93"], ["110", "115"], ["110", "120"], ["110", "123"], ["110", "125"], ["98", "103"], ["98", "106"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "41": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "44": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "55": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "57": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "59": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "61": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "63": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "65": "<(LOCAL,int n: int)<SUB>5</SUB>>", "67": "<(IDENTIFIER,n,int n = parseInt(in.readLine()))<SUB>5</SUB>>", "69": "<(IDENTIFIER,Integer,parseInt(in.readLine()))<SUB>5</SUB>>", "71": "<(IDENTIFIER,in,readLine())<SUB>5</SUB>>", "72": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "74": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "7": "<(IDENTIFIER,set,new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(in.readLine()))<SUB>7</SUB>>", "78": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine()))<SUB>7</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(in.readLine()))<SUB>7</SUB>>", "81": "<(IDENTIFIER,in,readLine())<SUB>7</SUB>>", "12": "<(LOCAL,List&lt;Integer&gt; list: ANY)<SUB>9</SUB>>", "84": "<(IDENTIFIER,list,ANY list = new LinkedList&lt;Integer&gt;())<SUB>9</SUB>>", "86": "<(&lt;init&gt;,new LinkedList&lt;Integer&gt;())<SUB>9</SUB>>", "87": "<(CONTROL_STRUCTURE,while (st.hasMoreTokens()),while (st.hasMoreTokens()))<SUB>10</SUB>>", "89": "<(IDENTIFIER,st,hasMoreTokens())<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,a = parseInt(st.nextToken()))<SUB>11</SUB>>", "93": "<(parseInt,parseInt(st.nextToken()))<SUB>11</SUB>>", "95": "<(nextToken,nextToken())<SUB>11</SUB>>", "97": "<(CONTROL_STRUCTURE,if (!set.contains(a)),if (!set.contains(a)))<SUB>12</SUB>>", "99": "<(contains,contains(a))<SUB>12</SUB>>", "101": "<(IDENTIFIER,a,contains(a))<SUB>12</SUB>>", "103": "<(add,add(a))<SUB>13</SUB>>", "105": "<(IDENTIFIER,a,add(a))<SUB>13</SUB>>", "107": "<(IDENTIFIER,set,add(a))<SUB>14</SUB>>", "109": "<(CONTROL_STRUCTURE,if (list.size() == 1),if (list.size() == 1))<SUB>18</SUB>>", "111": "<(size,size())<SUB>18</SUB>>", "113": "<(LITERAL,1,list.size() == 1)<SUB>18</SUB>>", "115": "<(println,println(&quot;NO&quot;))<SUB>19</SUB>>", "117": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "121": "<(IDENTIFIER,Collections,sort(list))<SUB>21</SUB>>", "123": "<(println,println(list.get(1)))<SUB>22</SUB>>", "125": "<(get,get(1))<SUB>22</SUB>>", "127": "<(LITERAL,1,get(1))<SUB>22</SUB>>", "129": "<(IDENTIFIER,out,close())<SUB>24</SUB>>", "131": "<(IDENTIFIER,System,System.exit(0))<SUB>25</SUB>>", "133": "<(MODIFIER,PUBLIC)>", "135": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}