{"edges": [["21", "23"], ["21", "125"], ["21", "126"], ["21", "127"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "69"], ["23", "70"], ["23", "73"], ["23", "116"], ["23", "118"], ["23", "121"], ["23", "123"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "83"], ["73", "85"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "98"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "104"], ["98", "106"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "55"], ["70", "75"], ["116", "118"], ["118", "121"], ["121", "123"], ["123", "127"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["55", "58"], ["58", "64"], ["58", "70"], ["61", "58"], ["63", "61"], ["75", "80"], ["78", "92"], ["78", "116"], ["83", "80"], ["30", "28"], ["37", "35"], ["64", "67"], ["67", "63"], ["80", "78"], ["87", "101"], ["89", "87"], ["99", "104"], ["99", "110"], ["104", "83"], ["90", "95"], ["95", "89"], ["101", "99"], ["92", "90"], ["108", "113"], ["108", "83"], ["113", "83"], ["110", "108"], ["21", "26"], ["22", "127"], ["24", "127"], ["27", "127"], ["27", "127"], ["31", "127"], ["34", "127"], ["34", "127"], ["39", "127"], ["39", "127"], ["44", "127"], ["46", "127"], ["44", "127"], ["44", "127"], ["49", "127"], ["49", "127"], ["49", "127"], ["58", "127"], ["70", "127"], ["75", "127"], ["78", "127"], ["80", "127"], ["78", "127"], ["78", "127"], ["116", "127"], ["118", "127"], ["118", "127"], ["121", "127"], ["123", "127"], ["123", "127"], ["89", "127"], ["89", "127"], ["87", "127"], ["87", "127"], ["99", "127"], ["101", "127"], ["99", "127"], ["99", "127"], ["108", "127"], ["110", "127"], ["108", "127"], ["108", "127"], ["113", "127"], ["83", "127"], ["63", "127"], ["67", "127"], ["63", "127"], ["63", "127"], ["61", "127"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["21", "70"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["67", "63"], ["21", "75"], ["70", "116"], ["113", "116"], ["104", "116"], ["21", "116"], ["34", "118"], ["21", "118"], ["116", "118"], ["118", "121"], ["21", "121"], ["121", "123"], ["21", "123"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["55", "58"], ["61", "58"], ["21", "58"], ["51", "58"], ["58", "61"], ["21", "61"], ["75", "78"], ["83", "78"], ["21", "78"], ["80", "78"], ["80", "78"], ["21", "83"], ["78", "83"], ["89", "87"], ["89", "87"], ["46", "67"], ["21", "67"], ["58", "80"], ["21", "80"], ["49", "89"], ["63", "89"], ["87", "99"], ["21", "99"], ["101", "99"], ["101", "99"], ["70", "104"], ["113", "104"], ["21", "104"], ["21", "101"], ["44", "101"], ["110", "101"], ["21", "113"], ["78", "92"], ["21", "92"], ["99", "108"], ["21", "108"], ["110", "108"], ["110", "108"], ["70", "113"], ["104", "113"], ["21", "110"], ["101", "110"], ["58", "58"], ["58", "61"], ["58", "64"], ["58", "67"], ["58", "63"], ["78", "80"], ["78", "83"], ["78", "89"], ["78", "99"], ["78", "95"], ["78", "92"], ["78", "87"], ["78", "101"], ["78", "90"], ["78", "78"], ["99", "104"], ["99", "110"], ["99", "108"], ["108", "113"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "41": "<(nextInt,nextInt())<SUB>6</SUB>>", "43": "<(LOCAL,long d: long)<SUB>7</SUB>>", "45": "<(IDENTIFIER,d,long d = nextLong())<SUB>7</SUB>>", "47": "<(IDENTIFIER,in,nextLong())<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,long[] a = new long[n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new long[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,a[i] = nextLong())<SUB>10</SUB>>", "65": "<(IDENTIFIER,a,a[i] = nextLong())<SUB>10</SUB>>", "67": "<(nextLong,nextLong())<SUB>10</SUB>>", "69": "<(LOCAL,int ans: int)<SUB>11</SUB>>", "71": "<(IDENTIFIER,ans,int ans = 1)<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "77": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>12</SUB>>", "81": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,long x = a[i + 1] - a[i])<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.subtraction,a[i + 1] - a[i])<SUB>14</SUB>>", "91": "<(IDENTIFIER,a,a[i + 1] - a[i])<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,i + 1)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,a[i + 1] - a[i])<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.equals,x == 2 * d)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.multiplication,2 * d)<SUB>15</SUB>>", "103": "<(IDENTIFIER,d,2 * d)<SUB>15</SUB>>", "105": "<(IDENTIFIER,ans,ans++)<SUB>16</SUB>>", "107": "<(CONTROL_STRUCTURE,if (x &gt; 2 * d),if (x &gt; 2 * d))<SUB>17</SUB>>", "109": "<(IDENTIFIER,x,x &gt; 2 * d)<SUB>17</SUB>>", "111": "<(LITERAL,2,2 * d)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,ans += 2)<SUB>18</SUB>>", "115": "<(LITERAL,2,ans += 2)<SUB>18</SUB>>", "117": "<(IDENTIFIER,ans,ans++)<SUB>21</SUB>>", "119": "<(IDENTIFIER,pw,print(ans))<SUB>22</SUB>>", "121": "<(flush,flush())<SUB>23</SUB>>", "123": "<(close,close())<SUB>24</SUB>>", "125": "<(MODIFIER,PUBLIC)>", "127": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}