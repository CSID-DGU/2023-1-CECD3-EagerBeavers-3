{"edges": [["17", "18"], ["17", "19"], ["17", "232"], ["17", "233"], ["17", "234"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "43"], ["19", "44"], ["19", "48"], ["19", "49"], ["19", "54"], ["19", "84"], ["19", "85"], ["19", "91"], ["19", "100"], ["19", "207"], ["19", "228"], ["19", "230"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "99"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["100", "101"], ["100", "102"], ["100", "109"], ["100", "112"], ["100", "114"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "121"], ["114", "122"], ["114", "131"], ["114", "132"], ["114", "135"], ["114", "202"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["154", "155"], ["154", "156"], ["154", "165"], ["154", "166"], ["154", "169"], ["154", "195"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["169", "174"], ["169", "177"], ["169", "179"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["180", "181"], ["180", "188"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["20", "28"], ["23", "37"], ["35", "42"], ["38", "46"], ["44", "51"], ["49", "56"], ["85", "95"], ["91", "105"], ["228", "230"], ["230", "234"], ["22", "20"], ["37", "35"], ["40", "38"], ["46", "44"], ["51", "49"], ["56", "59"], ["59", "67"], ["59", "88"], ["62", "59"], ["87", "85"], ["92", "91"], ["102", "109"], ["109", "118"], ["109", "209"], ["112", "109"], ["209", "212"], ["212", "222"], ["212", "228"], ["215", "212"], ["26", "33"], ["29", "23"], ["42", "40"], ["88", "87"], ["94", "92"], ["104", "102"], ["116", "128"], ["122", "132"], ["132", "137"], ["202", "112"], ["218", "225"], ["225", "215"], ["28", "26"], ["31", "29"], ["67", "70"], ["70", "78"], ["70", "62"], ["73", "70"], ["95", "94"], ["105", "104"], ["118", "116"], ["124", "122"], ["137", "140"], ["140", "149"], ["140", "203"], ["143", "140"], ["203", "202"], ["220", "218"], ["33", "31"], ["76", "73"], ["126", "124"], ["222", "220"], ["77", "82"], ["82", "76"], ["128", "126"], ["147", "161"], ["147", "143"], ["78", "77"], ["148", "147"], ["156", "166"], ["166", "171"], ["195", "143"], ["149", "148"], ["158", "156"], ["171", "174"], ["174", "183"], ["174", "198"], ["177", "174"], ["197", "195"], ["160", "158"], ["198", "197"], ["161", "160"], ["181", "191"], ["181", "177"], ["188", "177"], ["182", "181"], ["190", "188"], ["183", "182"], ["191", "190"], ["17", "22"], ["18", "234"], ["20", "234"], ["26", "234"], ["29", "234"], ["29", "234"], ["29", "234"], ["23", "234"], ["35", "234"], ["38", "234"], ["38", "234"], ["46", "234"], ["44", "234"], ["44", "234"], ["49", "234"], ["49", "234"], ["49", "234"], ["85", "234"], ["85", "234"], ["85", "234"], ["91", "234"], ["91", "234"], ["104", "234"], ["102", "234"], ["102", "234"], ["109", "234"], ["109", "234"], ["209", "234"], ["212", "234"], ["212", "234"], ["212", "234"], ["228", "234"], ["230", "234"], ["230", "234"], ["218", "234"], ["218", "234"], ["225", "234"], ["215", "234"], ["116", "234"], ["116", "234"], ["122", "234"], ["126", "234"], ["126", "234"], ["124", "234"], ["122", "234"], ["122", "234"], ["132", "234"], ["202", "234"], ["202", "234"], ["202", "234"], ["112", "234"], ["148", "234"], ["147", "234"], ["147", "234"], ["160", "234"], ["156", "234"], ["156", "234"], ["166", "234"], ["171", "234"], ["174", "234"], ["174", "234"], ["198", "234"], ["198", "234"], ["197", "234"], ["197", "234"], ["195", "234"], ["195", "234"], ["143", "234"], ["182", "234"], ["181", "234"], ["181", "234"], ["188", "234"], ["188", "234"], ["177", "234"], ["67", "234"], ["70", "234"], ["70", "234"], ["62", "234"], ["76", "234"], ["82", "234"], ["76", "234"], ["76", "234"], ["73", "234"], ["118", "234"], ["17", "18"], ["17", "20"], ["17", "35"], ["46", "44"], ["51", "49"], ["87", "85"], ["17", "91"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["17", "56"], ["104", "102"], ["104", "102"], ["17", "209"], ["23", "228"], ["17", "228"], ["38", "230"], ["225", "230"], ["17", "230"], ["17", "26"], ["17", "34"], ["17", "46"], ["44", "51"], ["17", "51"], ["56", "59"], ["62", "59"], ["17", "59"], ["51", "59"], ["70", "59"], ["59", "62"], ["17", "62"], ["88", "87"], ["88", "87"], ["102", "109"], ["112", "109"], ["17", "109"], ["118", "112"], ["148", "112"], ["160", "112"], ["182", "112"], ["17", "112"], ["118", "116"], ["118", "116"], ["124", "122"], ["124", "122"], ["17", "132"], ["132", "202"], ["195", "202"], ["17", "202"], ["209", "212"], ["215", "212"], ["17", "212"], ["105", "212"], ["140", "212"], ["222", "215"], ["17", "215"], ["26", "29"], ["17", "29"], ["17", "67"], ["17", "88"], ["59", "88"], ["95", "94"], ["95", "94"], ["17", "94"], ["105", "104"], ["105", "104"], ["17", "104"], ["17", "137"], ["38", "218"], ["225", "218"], ["17", "218"], ["85", "218"], ["218", "225"], ["17", "225"], ["67", "70"], ["73", "70"], ["17", "70"], ["59", "70"], ["70", "73"], ["17", "73"], ["82", "76"], ["17", "95"], ["88", "95"], ["17", "105"], ["95", "105"], ["17", "118"], ["109", "118"], ["17", "124"], ["126", "124"], ["126", "124"], ["137", "140"], ["143", "140"], ["17", "140"], ["105", "140"], ["174", "140"], ["149", "143"], ["161", "143"], ["17", "143"], ["17", "126"], ["116", "126"], ["17", "222"], ["212", "222"], ["46", "82"], ["17", "82"], ["116", "128"], ["17", "128"], ["148", "147"], ["148", "147"], ["17", "147"], ["85", "156"], ["17", "166"], ["197", "195"], ["197", "195"], ["149", "148"], ["149", "148"], ["118", "148"], ["160", "148"], ["182", "148"], ["17", "148"], ["17", "171"], ["132", "195"], ["17", "195"], ["17", "149"], ["140", "149"], ["171", "174"], ["177", "174"], ["17", "174"], ["140", "174"], ["183", "177"], ["17", "177"], ["198", "197"], ["198", "197"], ["166", "197"], ["188", "197"], ["17", "197"], ["161", "160"], ["161", "160"], ["148", "160"], ["17", "160"], ["122", "198"], ["17", "198"], ["156", "198"], ["17", "161"], ["149", "161"], ["182", "181"], ["182", "181"], ["17", "181"], ["166", "188"], ["17", "188"], ["183", "182"], ["183", "182"], ["160", "182"], ["17", "182"], ["17", "183"], ["174", "183"], ["59", "67"], ["59", "59"], ["59", "70"], ["59", "62"], ["109", "128"], ["109", "132"], ["109", "112"], ["109", "137"], ["109", "118"], ["109", "202"], ["109", "116"], ["109", "122"], ["109", "140"], ["109", "126"], ["109", "203"], ["109", "124"], ["109", "109"], ["212", "225"], ["212", "215"], ["212", "212"], ["212", "220"], ["212", "222"], ["212", "218"], ["70", "73"], ["70", "77"], ["70", "76"], ["70", "70"], ["70", "82"], ["70", "78"], ["140", "149"], ["140", "148"], ["140", "140"], ["140", "143"], ["140", "147"], ["147", "161"], ["147", "197"], ["147", "198"], ["147", "195"], ["147", "174"], ["147", "158"], ["147", "171"], ["147", "160"], ["147", "166"], ["147", "156"], ["174", "181"], ["174", "174"], ["174", "182"], ["174", "183"], ["174", "177"], ["181", "188"], ["181", "191"], ["181", "190"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "39": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "41": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(LOCAL,int n: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,this,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,double[][] a = new double[n][n])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new double[n][n])>", "53": "<(IDENTIFIER,n,new double[n][n])<SUB>7</SUB>>", "55": "<(LOCAL,int i: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "69": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "71": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>10</SUB>>", "79": "<(IDENTIFIER,a,a[i][j] = nextDouble())<SUB>10</SUB>>", "81": "<(IDENTIFIER,j,a[i][j] = nextDouble())<SUB>10</SUB>>", "83": "<(IDENTIFIER,this,nextDouble())<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,double[] dp = new double[1 &lt;&lt; n])<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; n])>", "89": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,dp[(1 &lt;&lt; n) - 1] = 1.0)<SUB>14</SUB>>", "93": "<(IDENTIFIER,dp,dp[(1 &lt;&lt; n) - 1] = 1.0)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>14</SUB>>", "97": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>14</SUB>>", "99": "<(LITERAL,1.0,dp[(1 &lt;&lt; n) - 1] = 1.0)<SUB>14</SUB>>", "101": "<(LOCAL,int mask: int)<SUB>15</SUB>>", "103": "<(IDENTIFIER,mask,int mask = (1 &lt;&lt; n) - 2)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.greaterThan,mask &gt; 0)<SUB>15</SUB>>", "111": "<(LITERAL,0,mask &gt; 0)<SUB>15</SUB>>", "113": "<(IDENTIFIER,mask,mask--)<SUB>15</SUB>>", "115": "<(LOCAL,int count: int)<SUB>16</SUB>>", "117": "<(IDENTIFIER,count,int count = Integer.bitCount(mask))<SUB>16</SUB>>", "119": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>16</SUB>>", "121": "<(LOCAL,double pPair: double)<SUB>17</SUB>>", "123": "<(IDENTIFIER,pPair,double pPair = 2.0 / (count * (count + 1)))<SUB>17</SUB>>", "125": "<(LITERAL,2.0,2.0 / (count * (count + 1)))<SUB>17</SUB>>", "127": "<(IDENTIFIER,count,count * (count + 1))<SUB>17</SUB>>", "129": "<(IDENTIFIER,count,count + 1)<SUB>17</SUB>>", "131": "<(LOCAL,double ans: double)<SUB>18</SUB>>", "133": "<(IDENTIFIER,ans,double ans = 0.0)<SUB>18</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "139": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "141": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.equals,((1 &lt;&lt; i) &amp; mask) == 0)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>20</SUB>>", "151": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>20</SUB>>", "153": "<(LITERAL,0,((1 &lt;&lt; i) &amp; mask) == 0)<SUB>20</SUB>>", "155": "<(LOCAL,double p: double)<SUB>21</SUB>>", "157": "<(IDENTIFIER,p,double p = dp[(1 &lt;&lt; i) | mask])<SUB>21</SUB>>", "159": "<(IDENTIFIER,dp,double p = dp[(1 &lt;&lt; i) | mask])<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>21</SUB>>", "163": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>21</SUB>>", "165": "<(LOCAL,double s: double)<SUB>22</SUB>>", "167": "<(IDENTIFIER,s,double s = 0.0)<SUB>22</SUB>>", "169": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "173": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "175": "<(IDENTIFIER,j,j &lt; n)<SUB>23</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; j) &amp; mask) != 0)<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>24</SUB>>", "185": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>24</SUB>>", "187": "<(LITERAL,0,((1 &lt;&lt; j) &amp; mask) != 0)<SUB>24</SUB>>", "189": "<(IDENTIFIER,s,s += a[j][i])<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>25</SUB>>", "193": "<(IDENTIFIER,j,s += a[j][i])<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.assignmentPlus,ans += pPair * p * s)<SUB>27</SUB>>", "197": "<(&lt;operator&gt;.multiplication,pPair * p * s)<SUB>27</SUB>>", "199": "<(IDENTIFIER,pPair,pPair * p)<SUB>27</SUB>>", "201": "<(IDENTIFIER,s,pPair * p * s)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>30</SUB>>", "205": "<(IDENTIFIER,mask,dp[mask] = ans)<SUB>30</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>33</SUB>>", "209": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "211": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "213": "<(IDENTIFIER,i,i &lt; n)<SUB>33</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "217": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "219": "<(IDENTIFIER,out,print(dp[1 &lt;&lt; i]))<SUB>34</SUB>>", "221": "<(IDENTIFIER,dp,print(dp[1 &lt;&lt; i]))<SUB>34</SUB>>", "223": "<(LITERAL,1,1 &lt;&lt; i)<SUB>34</SUB>>", "225": "<(print,print(' '))<SUB>35</SUB>>", "227": "<(LITERAL,' ',print(' '))<SUB>35</SUB>>", "229": "<(IDENTIFIER,in,close())<SUB>38</SUB>>", "231": "<(IDENTIFIER,out,close())<SUB>39</SUB>>", "233": "<(MODIFIER,STATIC)>"}}