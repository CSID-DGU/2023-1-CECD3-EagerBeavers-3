{"edges": [["17", "19"], ["17", "89"], ["17", "90"], ["17", "91"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "34"], ["19", "35"], ["19", "39"], ["19", "84"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "60"], ["49", "65"], ["49", "66"], ["49", "69"], ["49", "70"], ["49", "75"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "59"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["21", "28"], ["26", "31"], ["31", "37"], ["35", "41"], ["84", "91"], ["23", "21"], ["28", "26"], ["37", "35"], ["41", "44"], ["44", "56"], ["44", "87"], ["47", "44"], ["85", "84"], ["51", "61"], ["66", "72"], ["70", "77"], ["87", "85"], ["53", "51"], ["61", "47"], ["61", "66"], ["72", "70"], ["76", "81"], ["76", "47"], ["81", "47"], ["54", "53"], ["77", "76"], ["56", "54"], ["17", "23"], ["18", "91"], ["21", "91"], ["21", "91"], ["26", "91"], ["28", "91"], ["26", "91"], ["26", "91"], ["31", "91"], ["31", "91"], ["35", "91"], ["35", "91"], ["41", "91"], ["41", "91"], ["44", "91"], ["84", "91"], ["84", "91"], ["84", "91"], ["54", "91"], ["53", "91"], ["51", "91"], ["51", "91"], ["61", "91"], ["61", "91"], ["61", "91"], ["66", "91"], ["66", "91"], ["72", "91"], ["70", "91"], ["70", "91"], ["77", "91"], ["77", "91"], ["76", "91"], ["76", "91"], ["76", "91"], ["81", "91"], ["81", "91"], ["47", "91"], ["47", "91"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "31"], ["37", "35"], ["17", "41"], ["44", "84"], ["17", "84"], ["17", "23"], ["23", "28"], ["17", "28"], ["17", "37"], ["35", "44"], ["81", "44"], ["17", "44"], ["54", "47"], ["72", "47"], ["17", "47"], ["53", "51"], ["53", "51"], ["54", "66"], ["17", "66"], ["72", "70"], ["72", "70"], ["77", "81"], ["17", "81"], ["54", "53"], ["54", "53"], ["17", "53"], ["51", "61"], ["17", "61"], ["26", "61"], ["76", "61"], ["21", "72"], ["17", "72"], ["54", "72"], ["77", "76"], ["77", "76"], ["61", "76"], ["17", "76"], ["17", "54"], ["41", "54"], ["47", "54"], ["61", "77"], ["17", "77"], ["70", "77"], ["41", "56"], ["47", "56"], ["17", "56"], ["44", "47"], ["44", "61"], ["44", "51"], ["44", "53"], ["44", "56"], ["44", "44"], ["44", "54"], ["61", "77"], ["61", "66"], ["61", "72"], ["61", "70"], ["61", "76"], ["76", "81"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int k: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,k,int k = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,this,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,long ate = 0)<SUB>5</SUB>>", "33": "<(LITERAL,0,long ate = 0)<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,long ans = -1)<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.minus,-1)<SUB>6</SUB>>", "39": "<(CONTROL_STRUCTURE,for (long i = 1; Some(ans &lt; 0); ++i),for (long i = 1; Some(ans &lt; 0); ++i))<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.assignment,long i = 1)<SUB>7</SUB>>", "43": "<(LITERAL,1,long i = 1)<SUB>7</SUB>>", "45": "<(IDENTIFIER,ans,ans &lt; 0)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.preIncrement,++i)<SUB>7</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,long test = (i * (i + 1)) / 2)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.division,(i * (i + 1)) / 2)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i * (i + 1))<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,i + 1)<SUB>8</SUB>>", "59": "<(LITERAL,2,(i * (i + 1)) / 2)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.lessThan,test &lt; k)<SUB>9</SUB>>", "63": "<(IDENTIFIER,k,test &lt; k)<SUB>9</SUB>>", "65": "<(LOCAL,long adding_moves: long)<SUB>11</SUB>>", "67": "<(IDENTIFIER,adding_moves,long adding_moves = i)<SUB>11</SUB>>", "69": "<(LOCAL,long eating_moves: long)<SUB>12</SUB>>", "71": "<(IDENTIFIER,eating_moves,long eating_moves = n - i)<SUB>12</SUB>>", "73": "<(IDENTIFIER,n,n - i)<SUB>12</SUB>>", "75": "<(CONTROL_STRUCTURE,if (test - eating_moves == k),if (test - eating_moves == k))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.subtraction,test - eating_moves)<SUB>13</SUB>>", "79": "<(IDENTIFIER,eating_moves,test - eating_moves)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.assignment,ans = eating_moves)<SUB>13</SUB>>", "83": "<(IDENTIFIER,eating_moves,ans = eating_moves)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "87": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "89": "<(MODIFIER,PUBLIC)>", "91": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}