{"edges": [["21", "23"], ["21", "143"], ["21", "144"], ["21", "145"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "52"], ["23", "54"], ["23", "55"], ["23", "62"], ["23", "63"], ["23", "67"], ["23", "89"], ["23", "90"], ["23", "96"], ["23", "99"], ["23", "100"], ["23", "103"], ["23", "124"], ["23", "139"], ["23", "141"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "44"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "80"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["92", "95"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "111"], ["103", "113"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "122"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "132"], ["124", "135"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["24", "31"], ["27", "47"], ["45", "51"], ["48", "52"], ["52", "58"], ["55", "65"], ["63", "69"], ["90", "96"], ["96", "100"], ["100", "105"], ["139", "141"], ["141", "145"], ["26", "24"], ["47", "45"], ["49", "48"], ["57", "55"], ["65", "63"], ["69", "72"], ["72", "78"], ["72", "92"], ["75", "72"], ["92", "90"], ["105", "108"], ["108", "116"], ["108", "126"], ["111", "108"], ["125", "132"], ["125", "136"], ["132", "139"], ["29", "37"], ["32", "27"], ["51", "49"], ["58", "61"], ["59", "57"], ["78", "81"], ["80", "75"], ["126", "125"], ["126", "129"], ["129", "125"], ["136", "139"], ["31", "29"], ["61", "59"], ["81", "85"], ["84", "80"], ["115", "122"], ["115", "111"], ["122", "111"], ["35", "42"], ["38", "32"], ["85", "88"], ["86", "84"], ["116", "119"], ["119", "115"], ["37", "35"], ["40", "38"], ["88", "86"], ["42", "40"], ["21", "26"], ["22", "145"], ["24", "145"], ["32", "145"], ["35", "145"], ["38", "145"], ["38", "145"], ["38", "145"], ["32", "145"], ["27", "145"], ["45", "145"], ["48", "145"], ["48", "145"], ["52", "145"], ["52", "145"], ["57", "145"], ["55", "145"], ["55", "145"], ["63", "145"], ["63", "145"], ["90", "145"], ["90", "145"], ["90", "145"], ["96", "145"], ["96", "145"], ["96", "145"], ["100", "145"], ["105", "145"], ["108", "145"], ["108", "145"], ["108", "145"], ["126", "145"], ["125", "145"], ["129", "145"], ["125", "145"], ["125", "145"], ["136", "145"], ["132", "145"], ["139", "145"], ["141", "145"], ["141", "145"], ["115", "145"], ["115", "145"], ["115", "145"], ["122", "145"], ["111", "145"], ["78", "145"], ["78", "145"], ["80", "145"], ["84", "145"], ["80", "145"], ["80", "145"], ["75", "145"], ["21", "22"], ["21", "24"], ["21", "45"], ["21", "55"], ["52", "55"], ["65", "63"], ["92", "90"], ["92", "90"], ["92", "90"], ["21", "100"], ["24", "27"], ["21", "27"], ["35", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["27", "52"], ["21", "52"], ["21", "69"], ["92", "96"], ["21", "96"], ["92", "96"], ["80", "96"], ["21", "105"], ["136", "139"], ["132", "139"], ["21", "139"], ["139", "141"], ["21", "141"], ["21", "29"], ["21", "44"], ["21", "57"], ["52", "57"], ["55", "65"], ["21", "65"], ["69", "72"], ["75", "72"], ["21", "72"], ["65", "72"], ["72", "75"], ["21", "75"], ["21", "80"], ["78", "80"], ["21", "92"], ["63", "92"], ["80", "92"], ["72", "92"], ["105", "108"], ["111", "108"], ["21", "108"], ["92", "108"], ["108", "111"], ["21", "111"], ["126", "125"], ["126", "125"], ["129", "125"], ["129", "125"], ["48", "132"], ["21", "132"], ["29", "32"], ["21", "32"], ["35", "32"], ["38", "32"], ["52", "78"], ["21", "78"], ["100", "126"], ["122", "126"], ["21", "126"], ["126", "129"], ["21", "129"], ["48", "136"], ["21", "136"], ["21", "35"], ["21", "43"], ["21", "84"], ["78", "84"], ["96", "115"], ["80", "115"], ["90", "115"], ["100", "122"], ["21", "122"], ["35", "38"], ["21", "38"], ["72", "80"], ["72", "75"], ["72", "81"], ["72", "84"], ["72", "85"], ["72", "72"], ["72", "88"], ["72", "78"], ["72", "86"], ["108", "115"], ["108", "116"], ["108", "119"], ["108", "108"], ["108", "111"], ["125", "136"], ["125", "132"], ["126", "129"], ["115", "122"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj1,new BufferedReader(new InputStreamReader(System.in)))>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "41": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "53": "<(IDENTIFIER,in,nextToken())<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int n = (int) in.nval)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.cast,(int) in.nval)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,in.nval)<SUB>6</SUB>>", "61": "<(FIELD_IDENTIFIER,nval,nval)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[n])>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "79": "<(IDENTIFIER,in,nextToken())<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,a[i] = (int) in.nval)<SUB>10</SUB>>", "85": "<(TYPE_REF,int,int)<SUB>10</SUB>>", "87": "<(IDENTIFIER,in,(int) in.nval)<SUB>10</SUB>>", "89": "<(LOCAL,int[] b: int[])<SUB>12</SUB>>", "91": "<(IDENTIFIER,b,int[] b = copyOf(a, n))<SUB>12</SUB>>", "93": "<(IDENTIFIER,Arrays,copyOf(a, n))<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,copyOf(a, n))<SUB>12</SUB>>", "97": "<(IDENTIFIER,Arrays,sort(a))<SUB>13</SUB>>", "99": "<(LOCAL,int k: int)<SUB>14</SUB>>", "101": "<(IDENTIFIER,k,int k = 0)<SUB>14</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "107": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.notEquals,a[i] != b[i])<SUB>16</SUB>>", "117": "<(IDENTIFIER,a,a[i] != b[i])<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,i,a[i] != b[i])<SUB>16</SUB>>", "123": "<(IDENTIFIER,k,k++)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.logicalOr,k == 0 || k == 2)<SUB>18</SUB>>", "127": "<(IDENTIFIER,k,k == 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.equals,k == 2)<SUB>18</SUB>>", "131": "<(LITERAL,2,k == 2)<SUB>18</SUB>>", "133": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>19</SUB>>", "135": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "137": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>21</SUB>>", "139": "<(flush,flush())<SUB>22</SUB>>", "141": "<(close,close())<SUB>23</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}