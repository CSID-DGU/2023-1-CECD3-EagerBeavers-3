{"edges": [["23", "25"], ["23", "183"], ["23", "184"], ["23", "185"], ["25", "26"], ["25", "29"], ["25", "31"], ["25", "34"], ["25", "39"], ["25", "40"], ["25", "44"], ["25", "181"], ["26", "27"], ["26", "28"], ["29", "30"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "49"], ["45", "46"], ["45", "48"], ["46", "47"], ["49", "50"], ["49", "51"], ["49", "4"], ["49", "55"], ["49", "58"], ["49", "6"], ["49", "59"], ["49", "62"], ["49", "63"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["58", "3"], ["59", "60"], ["59", "61"], ["62", "5"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "79"], ["73", "80"], ["73", "83"], ["73", "112"], ["73", "125"], ["73", "8"], ["73", "128"], ["73", "131"], ["73", "132"], ["73", "133"], ["73", "137"], ["73", "149"], ["73", "171"], ["73", "179"], ["75", "76"], ["75", "77"], ["77", "78"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "87"], ["84", "85"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "93"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "99"], ["93", "106"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["99", "105"], ["100", "101"], ["100", "102"], ["103", "104"], ["106", "107"], ["107", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["112", "113"], ["112", "115"], ["113", "114"], ["115", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "7"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["137", "140"], ["138", "139"], ["140", "141"], ["140", "142"], ["140", "146"], ["142", "143"], ["142", "144"], ["144", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "160"], ["149", "162"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "159"], ["157", "158"], ["160", "161"], ["162", "163"], ["162", "168"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "178"], ["176", "177"], ["179", "180"], ["181", "182"], ["26", "29"], ["29", "33"], ["31", "38"], ["34", "42"], ["40", "46"], ["181", "185"], ["28", "26"], ["33", "31"], ["36", "34"], ["42", "40"], ["45", "53"], ["45", "181"], ["38", "36"], ["46", "45"], ["51", "57"], ["55", "58"], ["58", "61"], ["59", "62"], ["62", "65"], ["53", "51"], ["57", "55"], ["61", "59"], ["65", "68"], ["68", "46"], ["68", "77"], ["71", "68"], ["75", "80"], ["80", "85"], ["125", "130"], ["128", "131"], ["131", "135"], ["133", "138"], ["171", "179"], ["179", "71"], ["77", "75"], ["84", "91"], ["84", "113"], ["113", "118"], ["113", "125"], ["130", "128"], ["135", "133"], ["138", "144"], ["138", "151"], ["151", "157"], ["154", "165"], ["154", "176"], ["160", "157"], ["173", "171"], ["85", "84"], ["89", "96"], ["142", "146"], ["146", "138"], ["156", "154"], ["163", "168"], ["168", "160"], ["175", "173"], ["91", "89"], ["94", "100"], ["94", "110"], ["117", "123"], ["117", "125"], ["144", "142"], ["157", "156"], ["165", "163"], ["176", "175"], ["96", "94"], ["100", "103"], ["103", "113"], ["118", "117"], ["121", "118"], ["108", "85"], ["123", "121"], ["110", "108"], ["23", "28"], ["24", "185"], ["26", "185"], ["29", "185"], ["31", "185"], ["34", "185"], ["34", "185"], ["42", "185"], ["40", "185"], ["40", "185"], ["46", "185"], ["45", "185"], ["45", "185"], ["181", "185"], ["181", "185"], ["53", "185"], ["51", "185"], ["51", "185"], ["55", "185"], ["58", "185"], ["59", "185"], ["62", "185"], ["62", "185"], ["65", "185"], ["68", "185"], ["68", "185"], ["68", "185"], ["77", "185"], ["75", "185"], ["75", "185"], ["80", "185"], ["84", "185"], ["84", "185"], ["89", "185"], ["89", "185"], ["96", "185"], ["94", "185"], ["94", "185"], ["108", "185"], ["108", "185"], ["100", "185"], ["103", "185"], ["113", "185"], ["113", "185"], ["117", "185"], ["117", "185"], ["125", "185"], ["125", "185"], ["128", "185"], ["131", "185"], ["135", "185"], ["133", "185"], ["138", "185"], ["138", "185"], ["151", "185"], ["154", "185"], ["154", "185"], ["173", "185"], ["175", "185"], ["173", "185"], ["171", "185"], ["171", "185"], ["179", "185"], ["179", "185"], ["71", "185"], ["163", "185"], ["163", "185"], ["168", "185"], ["160", "185"], ["146", "185"], ["121", "185"], ["121", "185"], ["23", "24"], ["23", "26"], ["23", "31"], ["42", "40"], ["26", "29"], ["23", "29"], ["31", "34"], ["23", "34"], ["34", "181"], ["171", "181"], ["23", "181"], ["29", "42"], ["23", "42"], ["46", "45"], ["23", "45"], ["53", "51"], ["23", "55"], ["23", "59"], ["40", "46"], ["23", "46"], ["55", "58"], ["23", "58"], ["59", "62"], ["23", "62"], ["23", "65"], ["42", "53"], ["77", "53"], ["23", "53"], ["65", "68"], ["71", "68"], ["23", "68"], ["51", "68"], ["68", "71"], ["23", "71"], ["77", "75"], ["23", "80"], ["23", "128"], ["135", "133"], ["85", "125"], ["103", "125"], ["121", "125"], ["23", "125"], ["75", "125"], ["94", "125"], ["128", "131"], ["23", "131"], ["23", "151"], ["34", "171"], ["168", "171"], ["23", "171"], ["173", "171"], ["173", "171"], ["62", "179"], ["108", "179"], ["118", "179"], ["23", "179"], ["53", "77"], ["23", "77"], ["85", "84"], ["91", "89"], ["80", "113"], ["100", "113"], ["23", "113"], ["125", "135"], ["23", "135"], ["133", "138"], ["144", "138"], ["23", "138"], ["144", "142"], ["151", "154"], ["160", "154"], ["23", "154"], ["156", "154"], ["156", "154"], ["165", "160"], ["23", "160"], ["176", "173"], ["23", "173"], ["175", "173"], ["175", "173"], ["58", "85"], ["110", "85"], ["135", "85"], ["23", "85"], ["131", "146"], ["23", "146"], ["142", "146"], ["157", "156"], ["23", "156"], ["34", "163"], ["171", "163"], ["168", "163"], ["23", "163"], ["165", "163"], ["165", "163"], ["163", "168"], ["23", "168"], ["176", "175"], ["23", "175"], ["85", "91"], ["23", "91"], ["75", "94"], ["23", "94"], ["89", "94"], ["23", "100"], ["118", "117"], ["138", "144"], ["23", "144"], ["131", "157"], ["165", "157"], ["146", "157"], ["23", "157"], ["157", "165"], ["23", "165"], ["154", "165"], ["157", "176"], ["23", "176"], ["89", "96"], ["23", "96"], ["91", "103"], ["23", "103"], ["62", "118"], ["108", "118"], ["179", "118"], ["123", "118"], ["23", "118"], ["85", "121"], ["103", "121"], ["23", "121"], ["123", "121"], ["62", "108"], ["179", "108"], ["23", "108"], ["110", "108"], ["118", "123"], ["23", "123"], ["91", "110"], ["23", "110"], ["45", "68"], ["45", "51"], ["45", "57"], ["45", "59"], ["45", "58"], ["45", "61"], ["45", "46"], ["45", "45"], ["45", "65"], ["45", "53"], ["45", "55"], ["45", "62"], ["68", "68"], ["68", "77"], ["68", "113"], ["68", "75"], ["68", "154"], ["68", "128"], ["68", "84"], ["68", "131"], ["68", "85"], ["68", "179"], ["68", "151"], ["68", "138"], ["68", "173"], ["68", "80"], ["68", "130"], ["68", "171"], ["68", "157"], ["68", "176"], ["68", "71"], ["68", "135"], ["68", "175"], ["68", "156"], ["68", "125"], ["68", "133"], ["84", "94"], ["84", "96"], ["84", "91"], ["84", "89"], ["113", "118"], ["113", "117"], ["138", "146"], ["138", "144"], ["138", "138"], ["138", "142"], ["154", "154"], ["154", "163"], ["154", "168"], ["154", "160"], ["154", "157"], ["154", "165"], ["154", "156"], ["94", "84"], ["94", "85"], ["94", "103"], ["94", "100"], ["94", "108"], ["94", "110"], ["117", "121"], ["117", "118"], ["117", "123"], ["117", "117"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "29": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "39": "<(LOCAL,int t: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,t,t--)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "53": "<(nextInt,nextInt())<SUB>7</SUB>>", "4": "<(LOCAL,Stack&lt;Integer&gt; st: ANY)<SUB>9</SUB>>", "56": "<(IDENTIFIER,st,ANY st = new Stack&lt;&gt;())<SUB>9</SUB>>", "58": "<(&lt;init&gt;,new Stack&lt;&gt;())<SUB>9</SUB>>", "6": "<(LOCAL,Stack&lt;Integer&gt; temporary: ANY)<SUB>10</SUB>>", "60": "<(IDENTIFIER,temporary,ANY temporary = new Stack&lt;&gt;())<SUB>10</SUB>>", "62": "<(&lt;init&gt;,new Stack&lt;&gt;())<SUB>10</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "67": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "69": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,int val = nextInt())<SUB>12</SUB>>", "77": "<(nextInt,nextInt())<SUB>12</SUB>>", "79": "<(LOCAL,boolean found: boolean)<SUB>13</SUB>>", "81": "<(IDENTIFIER,found,boolean found = false)<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,while (!st.isEmpty()),while (!st.isEmpty()))<SUB>14</SUB>>", "85": "<(isEmpty,isEmpty())<SUB>14</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.assignment,int temp = peek())<SUB>15</SUB>>", "91": "<(peek,peek())<SUB>15</SUB>>", "93": "<(CONTROL_STRUCTURE,if (val == temp + 1),if (val == temp + 1))<SUB>16</SUB>>", "95": "<(IDENTIFIER,val,val == temp + 1)<SUB>16</SUB>>", "97": "<(IDENTIFIER,temp,temp + 1)<SUB>16</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "101": "<(IDENTIFIER,found,found = true)<SUB>17</SUB>>", "103": "<(pop,pop())<SUB>18</SUB>>", "105": "<(CONTROL_STRUCTURE,break;,break;)<SUB>19</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "109": "<(IDENTIFIER,temporary,add(st.pop()))<SUB>22</SUB>>", "111": "<(IDENTIFIER,st,pop())<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.logicalNot,!found)<SUB>25</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "117": "<(&lt;operator&gt;.logicalNot,!temporary.isEmpty())<SUB>26</SUB>>", "119": "<(IDENTIFIER,temporary,isEmpty())<SUB>26</SUB>>", "121": "<(add,add(temporary.pop()))<SUB>27</SUB>>", "123": "<(pop,pop())<SUB>27</SUB>>", "125": "<(add,add(val))<SUB>30</SUB>>", "127": "<(IDENTIFIER,val,add(val))<SUB>30</SUB>>", "128": "<(&lt;operator&gt;.assignment,ANY arr = new ArrayList&lt;&gt;())<SUB>31</SUB>>", "130": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>31</SUB>>", "7": "<(IDENTIFIER,arr,new ArrayList&lt;&gt;())<SUB>31</SUB>>", "133": "<(&lt;operator&gt;.assignment,)<SUB>33</SUB>>", "135": "<(iterator,&lt;empty&gt;)<SUB>33</SUB>>", "137": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>33</SUB>>", "139": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "141": "<(LOCAL,s: int)<SUB>33</SUB>>", "143": "<(IDENTIFIER,s,&lt;empty&gt;)>", "145": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "147": "<(IDENTIFIER,arr,add(s))<SUB>34</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int s = 0; Some(s &lt; arr.size() - 1); s++),for (int s = 0; Some(s &lt; arr.size() - 1); s++))<SUB>36</SUB>>", "151": "<(&lt;operator&gt;.assignment,int s = 0)<SUB>36</SUB>>", "153": "<(LITERAL,0,int s = 0)<SUB>36</SUB>>", "155": "<(IDENTIFIER,s,s &lt; arr.size() - 1)<SUB>36</SUB>>", "157": "<(size,size())<SUB>36</SUB>>", "159": "<(LITERAL,1,arr.size() - 1)<SUB>36</SUB>>", "161": "<(IDENTIFIER,s,s++)<SUB>36</SUB>>", "163": "<(print,print(arr.get(s)))<SUB>37</SUB>>", "165": "<(get,get(s))<SUB>37</SUB>>", "167": "<(IDENTIFIER,s,get(s))<SUB>37</SUB>>", "169": "<(IDENTIFIER,out,print(&quot;.&quot;))<SUB>38</SUB>>", "171": "<(println,println(arr.get(arr.size() - 1)))<SUB>40</SUB>>", "173": "<(get,get(arr.size() - 1))<SUB>40</SUB>>", "175": "<(&lt;operator&gt;.subtraction,arr.size() - 1)<SUB>40</SUB>>", "177": "<(IDENTIFIER,arr,size())<SUB>40</SUB>>", "179": "<(clear,clear())<SUB>41</SUB>>", "181": "<(close,close())<SUB>46</SUB>>", "183": "<(MODIFIER,PUBLIC)>", "185": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}