{"edges": [["17", "19"], ["17", "157"], ["17", "158"], ["17", "159"], ["19", "20"], ["19", "21"], ["19", "34"], ["19", "35"], ["19", "38"], ["19", "39"], ["19", "42"], ["19", "68"], ["19", "71"], ["19", "96"], ["19", "97"], ["19", "102"], ["19", "103"], ["19", "119"], ["21", "22"], ["21", "23"], ["23", "24"], ["24", "25"], ["24", "28"], ["24", "33"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "60"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "54"], ["50", "51"], ["50", "52"], ["50", "53"], ["54", "55"], ["54", "56"], ["54", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "64"], ["60", "66"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "90"], ["86", "87"], ["86", "88"], ["86", "89"], ["90", "91"], ["90", "92"], ["90", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "116"], ["106", "107"], ["106", "115"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["109", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["119", "132"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["133", "136"], ["133", "137"], ["133", "144"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["21", "35"], ["35", "39"], ["39", "50"], ["39", "68"], ["68", "73"], ["97", "108"], ["103", "121"], ["23", "21"], ["73", "76"], ["76", "86"], ["76", "99"], ["79", "76"], ["81", "79"], ["99", "97"], ["105", "103"], ["120", "128"], ["120", "134"], ["125", "159"], ["45", "61"], ["83", "81"], ["106", "116"], ["116", "105"], ["121", "120"], ["126", "129"], ["129", "125"], ["25", "32"], ["28", "23"], ["47", "45"], ["61", "64"], ["61", "68"], ["64", "50"], ["64", "68"], ["85", "83"], ["107", "106"], ["128", "126"], ["134", "140"], ["137", "147"], ["144", "159"], ["27", "25"], ["30", "28"], ["49", "47"], ["86", "93"], ["90", "85"], ["108", "112"], ["109", "107"], ["139", "137"], ["145", "149"], ["148", "144"], ["32", "30"], ["50", "57"], ["54", "49"], ["93", "90"], ["112", "109"], ["140", "141"], ["141", "139"], ["147", "145"], ["149", "154"], ["152", "148"], ["57", "54"], ["153", "152"], ["154", "153"], ["17", "27"], ["18", "159"], ["25", "159"], ["28", "159"], ["28", "159"], ["28", "159"], ["21", "159"], ["21", "159"], ["35", "159"], ["39", "159"], ["49", "159"], ["47", "159"], ["45", "159"], ["45", "159"], ["61", "159"], ["68", "159"], ["73", "159"], ["76", "159"], ["76", "159"], ["99", "159"], ["99", "159"], ["97", "159"], ["97", "159"], ["109", "159"], ["109", "159"], ["107", "159"], ["106", "159"], ["105", "159"], ["105", "159"], ["103", "159"], ["103", "159"], ["121", "159"], ["121", "159"], ["120", "159"], ["120", "159"], ["125", "159"], ["129", "159"], ["125", "159"], ["125", "159"], ["85", "159"], ["90", "159"], ["85", "159"], ["83", "159"], ["81", "159"], ["81", "159"], ["79", "159"], ["64", "159"], ["149", "159"], ["17", "18"], ["23", "21"], ["23", "21"], ["17", "35"], ["17", "39"], ["17", "68"], ["99", "97"], ["99", "97"], ["106", "103"], ["106", "103"], ["116", "103"], ["116", "103"], ["17", "43"], ["17", "73"], ["83", "81"], ["83", "81"], ["25", "23"], ["28", "23"], ["17", "23"], ["47", "45"], ["47", "45"], ["73", "76"], ["79", "76"], ["17", "76"], ["35", "76"], ["47", "76"], ["64", "76"], ["83", "79"], ["17", "79"], ["68", "81"], ["17", "81"], ["21", "99"], ["61", "99"], ["17", "99"], ["68", "99"], ["81", "99"], ["106", "105"], ["106", "105"], ["116", "105"], ["116", "105"], ["121", "120"], ["121", "120"], ["17", "120"], ["129", "125"], ["129", "125"], ["17", "25"], ["17", "33"], ["39", "45"], ["61", "45"], ["17", "45"], ["93", "83"], ["17", "83"], ["85", "83"], ["85", "83"], ["17", "106"], ["109", "106"], ["109", "106"], ["109", "106"], ["97", "116"], ["17", "116"], ["112", "116"], ["116", "121"], ["17", "121"], ["116", "121"], ["103", "129"], ["17", "129"], ["17", "137"], ["141", "137"], ["141", "137"], ["25", "28"], ["17", "28"], ["57", "47"], ["17", "47"], ["49", "47"], ["49", "47"], ["21", "61"], ["17", "61"], ["45", "61"], ["47", "64"], ["17", "64"], ["86", "85"], ["86", "85"], ["86", "85"], ["90", "85"], ["90", "85"], ["90", "85"], ["17", "107"], ["109", "107"], ["109", "107"], ["109", "107"], ["103", "134"], ["17", "134"], ["148", "144"], ["148", "144"], ["50", "49"], ["50", "49"], ["50", "49"], ["54", "49"], ["54", "49"], ["54", "49"], ["54", "86"], ["90", "86"], ["17", "86"], ["76", "86"], ["86", "90"], ["17", "90"], ["93", "90"], ["93", "90"], ["54", "109"], ["90", "109"], ["17", "109"], ["112", "109"], ["112", "109"], ["17", "139"], ["141", "139"], ["141", "139"], ["149", "148"], ["149", "148"], ["152", "148"], ["152", "148"], ["54", "50"], ["17", "50"], ["35", "50"], ["64", "50"], ["50", "54"], ["17", "54"], ["57", "54"], ["57", "54"], ["86", "93"], ["17", "93"], ["76", "112"], ["17", "112"], ["121", "141"], ["17", "141"], ["121", "141"], ["17", "149"], ["134", "149"], ["17", "152"], ["137", "152"], ["50", "57"], ["17", "57"], ["17", "153"], ["137", "153"], ["76", "81"], ["76", "85"], ["76", "76"], ["76", "93"], ["76", "90"], ["76", "79"], ["76", "83"], ["76", "86"], ["120", "141"], ["120", "154"], ["120", "145"], ["120", "128"], ["120", "149"], ["120", "153"], ["120", "144"], ["120", "129"], ["120", "134"], ["120", "140"], ["120", "148"], ["120", "126"], ["120", "137"], ["120", "152"], ["120", "147"], ["120", "139"], ["120", "125"], ["61", "64"], ["61", "47"], ["61", "49"], ["61", "57"], ["61", "45"], ["61", "50"], ["61", "54"], ["61", "61"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>3</SUB>>", "23": "<(nextLong,nextLong())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "27": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,$obj0,new Scanner(System.in))>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.assignment,long league = 1)<SUB>10</SUB>>", "37": "<(LITERAL,1,long league = 1)<SUB>10</SUB>>", "39": "<(&lt;operator&gt;.assignment,long irrelevancy = 0)<SUB>11</SUB>>", "41": "<(LITERAL,0,long irrelevancy = 0)<SUB>11</SUB>>", "43": "<(LITERAL,true,while (true))<SUB>12</SUB>>", "45": "<(&lt;operator&gt;.assignmentPlus,irrelevancy += league * (Math.pow(10, league) - Math.pow(10, league - 1)))<SUB>14</SUB>>", "47": "<(&lt;operator&gt;.multiplication,league * (Math.pow(10, league) - Math.pow(10, league - 1)))<SUB>14</SUB>>", "49": "<(&lt;operator&gt;.subtraction,Math.pow(10, league) - Math.pow(10, league - 1))<SUB>14</SUB>>", "51": "<(IDENTIFIER,Math,Math.pow(10, league))<SUB>14</SUB>>", "53": "<(IDENTIFIER,league,Math.pow(10, league))<SUB>14</SUB>>", "55": "<(IDENTIFIER,Math,Math.pow(10, league - 1))<SUB>14</SUB>>", "57": "<(&lt;operator&gt;.subtraction,league - 1)<SUB>14</SUB>>", "59": "<(LITERAL,1,league - 1)<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.greaterThan,k &gt; irrelevancy)<SUB>15</SUB>>", "63": "<(IDENTIFIER,irrelevancy,k &gt; irrelevancy)<SUB>15</SUB>>", "65": "<(IDENTIFIER,league,league++)<SUB>16</SUB>>", "67": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "69": "<(IDENTIFIER,irrelevancy,irrelevancy = 0)<SUB>24</SUB>>", "71": "<(CONTROL_STRUCTURE,for (long i = 1; Some(i &lt; league); i++),for (long i = 1; Some(i &lt; league); i++))<SUB>25</SUB>>", "73": "<(&lt;operator&gt;.assignment,long i = 1)<SUB>25</SUB>>", "75": "<(LITERAL,1,long i = 1)<SUB>25</SUB>>", "77": "<(IDENTIFIER,i,i &lt; league)<SUB>25</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "81": "<(&lt;operator&gt;.assignmentPlus,irrelevancy += i * (Math.pow(10, i) - Math.pow(10, i - 1)))<SUB>26</SUB>>", "83": "<(&lt;operator&gt;.multiplication,i * (Math.pow(10, i) - Math.pow(10, i - 1)))<SUB>26</SUB>>", "85": "<(&lt;operator&gt;.subtraction,Math.pow(10, i) - Math.pow(10, i - 1))<SUB>26</SUB>>", "87": "<(IDENTIFIER,Math,Math.pow(10, i))<SUB>26</SUB>>", "89": "<(IDENTIFIER,i,Math.pow(10, i))<SUB>26</SUB>>", "91": "<(IDENTIFIER,Math,Math.pow(10, i - 1))<SUB>26</SUB>>", "93": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>26</SUB>>", "95": "<(LITERAL,1,i - 1)<SUB>26</SUB>>", "97": "<(&lt;operator&gt;.assignment,long modified_k = k - irrelevancy)<SUB>30</SUB>>", "99": "<(&lt;operator&gt;.subtraction,k - irrelevancy)<SUB>30</SUB>>", "101": "<(IDENTIFIER,irrelevancy,k - irrelevancy)<SUB>30</SUB>>", "103": "<(&lt;operator&gt;.assignment,long number = (long) (Math.pow(10, league - 1)) - 1 + modified_k / league)<SUB>34</SUB>>", "105": "<(&lt;operator&gt;.addition,(long) (Math.pow(10, league - 1)) - 1 + modified_k / league)<SUB>34</SUB>>", "107": "<(&lt;operator&gt;.cast,(long) (Math.pow(10, league - 1)))<SUB>34</SUB>>", "109": "<(pow,Math.pow(10, league - 1))<SUB>34</SUB>>", "111": "<(LITERAL,10,Math.pow(10, league - 1))<SUB>34</SUB>>", "113": "<(IDENTIFIER,league,league - 1)<SUB>34</SUB>>", "115": "<(LITERAL,1,(long) (Math.pow(10, league - 1)) - 1)<SUB>34</SUB>>", "117": "<(IDENTIFIER,modified_k,modified_k / league)<SUB>34</SUB>>", "119": "<(CONTROL_STRUCTURE,if (modified_k % league == 0),if (modified_k % league == 0))<SUB>37</SUB>>", "121": "<(&lt;operator&gt;.modulo,modified_k % league)<SUB>37</SUB>>", "123": "<(IDENTIFIER,league,modified_k % league)<SUB>37</SUB>>", "125": "<(println,System.out.println(number % 10))<SUB>38</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(number % 10))<SUB>38</SUB>>", "129": "<(&lt;operator&gt;.modulo,number % 10)<SUB>38</SUB>>", "131": "<(LITERAL,10,number % 10)<SUB>38</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "135": "<(IDENTIFIER,number,number++)<SUB>41</SUB>>", "137": "<(&lt;operator&gt;.assignment,long position_of_digit = (long) (modified_k % league))<SUB>42</SUB>>", "139": "<(&lt;operator&gt;.cast,(long) (modified_k % league))<SUB>42</SUB>>", "141": "<(&lt;operator&gt;.modulo,modified_k % league)<SUB>42</SUB>>", "143": "<(IDENTIFIER,league,modified_k % league)<SUB>42</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "149": "<(toString,Long.toString(number))<SUB>46</SUB>>", "151": "<(IDENTIFIER,number,Long.toString(number))<SUB>46</SUB>>", "153": "<(&lt;operator&gt;.cast,(int) position_of_digit)<SUB>46</SUB>>", "155": "<(IDENTIFIER,position_of_digit,(int) position_of_digit)<SUB>46</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}