{"edges": [["21", "23"], ["21", "233"], ["21", "234"], ["21", "235"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "231"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "45"], ["41", "42"], ["41", "44"], ["42", "43"], ["45", "46"], ["45", "47"], ["45", "48"], ["45", "52"], ["45", "56"], ["45", "57"], ["45", "58"], ["45", "62"], ["45", "66"], ["45", "89"], ["45", "90"], ["45", "97"], ["45", "104"], ["45", "105"], ["45", "108"], ["45", "228"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "83"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "118"], ["108", "120"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "186"], ["131", "187"], ["131", "190"], ["131", "214"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "156"], ["143", "144"], ["143", "151"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "168"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "181"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "209"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["220", "223"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["231", "232"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "36"], ["36", "42"], ["231", "235"], ["26", "24"], ["30", "28"], ["32", "31"], ["41", "50"], ["41", "231"], ["34", "32"], ["42", "41"], ["48", "54"], ["52", "60"], ["58", "64"], ["62", "68"], ["90", "99"], ["97", "105"], ["105", "110"], ["228", "42"], ["50", "48"], ["54", "52"], ["60", "58"], ["64", "62"], ["68", "71"], ["71", "78"], ["71", "93"], ["74", "71"], ["92", "90"], ["98", "97"], ["110", "115"], ["113", "123"], ["113", "228"], ["118", "115"], ["77", "84"], ["83", "74"], ["93", "92"], ["99", "98"], ["115", "113"], ["78", "81"], ["81", "77"], ["84", "87"], ["87", "83"], ["123", "126"], ["126", "134"], ["126", "118"], ["129", "126"], ["187", "192"], ["134", "137"], ["137", "147"], ["137", "187"], ["140", "137"], ["192", "195"], ["195", "205"], ["195", "215"], ["198", "195"], ["215", "224"], ["215", "129"], ["218", "129"], ["143", "162"], ["143", "140"], ["156", "140"], ["220", "218"], ["144", "143"], ["144", "152"], ["151", "143"], ["157", "175"], ["168", "156"], ["202", "211"], ["202", "198"], ["209", "198"], ["223", "220"], ["145", "144"], ["152", "151"], ["158", "165"], ["165", "157"], ["170", "182"], ["181", "168"], ["203", "202"], ["211", "209"], ["224", "223"], ["147", "145"], ["160", "158"], ["171", "178"], ["178", "170"], ["182", "181"], ["205", "203"], ["162", "160"], ["173", "171"], ["175", "173"], ["21", "26"], ["22", "235"], ["24", "235"], ["27", "235"], ["27", "235"], ["28", "235"], ["31", "235"], ["31", "235"], ["36", "235"], ["42", "235"], ["41", "235"], ["41", "235"], ["231", "235"], ["231", "235"], ["48", "235"], ["52", "235"], ["54", "235"], ["52", "235"], ["52", "235"], ["58", "235"], ["58", "235"], ["62", "235"], ["62", "235"], ["62", "235"], ["68", "235"], ["71", "235"], ["71", "235"], ["90", "235"], ["90", "235"], ["90", "235"], ["97", "235"], ["97", "235"], ["105", "235"], ["110", "235"], ["113", "235"], ["115", "235"], ["113", "235"], ["113", "235"], ["228", "235"], ["228", "235"], ["123", "235"], ["126", "235"], ["126", "235"], ["118", "235"], ["187", "235"], ["192", "235"], ["195", "235"], ["195", "235"], ["215", "235"], ["215", "235"], ["215", "235"], ["220", "235"], ["220", "235"], ["218", "235"], ["218", "235"], ["129", "235"], ["203", "235"], ["202", "235"], ["202", "235"], ["209", "235"], ["209", "235"], ["198", "235"], ["145", "235"], ["144", "235"], ["143", "235"], ["151", "235"], ["143", "235"], ["143", "235"], ["156", "235"], ["168", "235"], ["173", "235"], ["168", "235"], ["156", "235"], ["156", "235"], ["140", "235"], ["77", "235"], ["77", "235"], ["83", "235"], ["87", "235"], ["83", "235"], ["83", "235"], ["74", "235"], ["21", "22"], ["21", "24"], ["21", "28"], ["21", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "231"], ["228", "231"], ["21", "231"], ["42", "41"], ["21", "41"], ["50", "48"], ["54", "52"], ["60", "58"], ["64", "62"], ["92", "90"], ["92", "90"], ["21", "97"], ["21", "105"], ["36", "42"], ["21", "42"], ["21", "68"], ["21", "110"], ["31", "228"], ["21", "228"], ["105", "228"], ["218", "228"], ["27", "50"], ["54", "50"], ["87", "50"], ["21", "50"], ["50", "54"], ["21", "54"], ["48", "60"], ["21", "60"], ["60", "64"], ["21", "64"], ["68", "71"], ["74", "71"], ["21", "71"], ["64", "71"], ["71", "74"], ["21", "74"], ["81", "77"], ["87", "83"], ["93", "92"], ["93", "92"], ["21", "92"], ["110", "113"], ["118", "113"], ["21", "113"], ["115", "113"], ["115", "113"], ["113", "118"], ["203", "118"], ["145", "118"], ["173", "118"], ["21", "118"], ["21", "93"], ["71", "93"], ["21", "115"], ["93", "115"], ["195", "115"], ["21", "123"], ["54", "81"], ["87", "81"], ["21", "81"], ["81", "87"], ["21", "87"], ["123", "126"], ["129", "126"], ["21", "126"], ["126", "129"], ["151", "129"], ["21", "129"], ["21", "187"], ["21", "134"], ["21", "192"], ["220", "218"], ["220", "218"], ["220", "218"], ["134", "137"], ["140", "137"], ["21", "137"], ["115", "137"], ["195", "137"], ["147", "140"], ["175", "140"], ["21", "140"], ["168", "156"], ["168", "156"], ["168", "156"], ["192", "195"], ["198", "195"], ["21", "195"], ["137", "195"], ["205", "198"], ["21", "198"], ["187", "215"], ["209", "215"], ["21", "215"], ["52", "215"], ["144", "143"], ["144", "143"], ["151", "143"], ["151", "143"], ["58", "209"], ["77", "209"], ["168", "220"], ["21", "220"], ["105", "220"], ["218", "220"], ["168", "220"], ["145", "144"], ["145", "144"], ["21", "144"], ["62", "151"], ["83", "151"], ["126", "151"], ["21", "151"], ["220", "168"], ["21", "168"], ["156", "168"], ["220", "168"], ["203", "202"], ["203", "202"], ["21", "202"], ["187", "209"], ["21", "209"], ["113", "145"], ["203", "145"], ["173", "145"], ["21", "145"], ["147", "145"], ["147", "145"], ["113", "203"], ["145", "203"], ["173", "203"], ["21", "203"], ["205", "203"], ["205", "203"], ["21", "147"], ["137", "147"], ["145", "160"], ["21", "160"], ["162", "160"], ["162", "160"], ["21", "205"], ["195", "205"], ["21", "162"], ["147", "162"], ["160", "173"], ["21", "173"], ["175", "173"], ["175", "173"], ["21", "175"], ["162", "175"], ["41", "115"], ["41", "68"], ["41", "60"], ["41", "64"], ["41", "42"], ["41", "98"], ["41", "113"], ["41", "52"], ["41", "92"], ["41", "228"], ["41", "50"], ["41", "97"], ["41", "93"], ["41", "90"], ["41", "54"], ["41", "58"], ["41", "48"], ["41", "99"], ["41", "71"], ["41", "105"], ["41", "41"], ["41", "110"], ["41", "62"], ["71", "77"], ["71", "81"], ["71", "84"], ["71", "74"], ["71", "87"], ["71", "83"], ["71", "71"], ["71", "78"], ["113", "115"], ["113", "113"], ["113", "118"], ["113", "123"], ["113", "126"], ["126", "192"], ["126", "215"], ["126", "129"], ["126", "134"], ["126", "195"], ["126", "187"], ["126", "137"], ["126", "126"], ["137", "145"], ["137", "144"], ["137", "137"], ["137", "140"], ["137", "143"], ["137", "147"], ["195", "198"], ["195", "195"], ["195", "202"], ["195", "205"], ["195", "203"], ["215", "223"], ["215", "224"], ["215", "220"], ["215", "218"], ["143", "178"], ["143", "162"], ["143", "168"], ["143", "170"], ["143", "181"], ["143", "173"], ["143", "182"], ["143", "158"], ["143", "171"], ["143", "160"], ["143", "157"], ["143", "165"], ["143", "175"], ["143", "156"], ["144", "151"], ["144", "152"], ["202", "209"], ["202", "211"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int tt: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,tt,int tt = 1)<SUB>5</SUB>>", "39": "<(JUMP_TARGET,outer)>", "41": "<(&lt;operator&gt;.greaterThan,tt-- &gt; 0)<SUB>7</SUB>>", "43": "<(IDENTIFIER,tt,tt--)<SUB>7</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "47": "<(LOCAL,int T: int)<SUB>9</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "51": "<(IDENTIFIER,fs,nextInt())<SUB>9</SUB>>", "53": "<(IDENTIFIER,T,int T = nextInt())<SUB>9</SUB>>", "55": "<(IDENTIFIER,fs,nextInt())<SUB>9</SUB>>", "57": "<(LOCAL,int[] g: int[])<SUB>10</SUB>>", "59": "<(IDENTIFIER,t,int[] t = new int[n])<SUB>10</SUB>>", "61": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "63": "<(IDENTIFIER,g,int[] g = new int[n])<SUB>10</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "67": "<(LOCAL,int i: int)<SUB>12</SUB>>", "69": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "73": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,t[i] = nextInt())<SUB>13</SUB>>", "79": "<(IDENTIFIER,t,t[i] = nextInt())<SUB>13</SUB>>", "81": "<(nextInt,nextInt())<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,g[i] = nextInt())<SUB>13</SUB>>", "85": "<(IDENTIFIER,g,g[i] = nextInt())<SUB>13</SUB>>", "87": "<(nextInt,nextInt())<SUB>13</SUB>>", "89": "<(LOCAL,long[][] dp: long[][])<SUB>17</SUB>>", "91": "<(IDENTIFIER,dp,long[][] dp = new long[1 &lt;&lt; n][4])<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>17</SUB>>", "95": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>18</SUB>>", "101": "<(LITERAL,0,dp[0][0] = 1)<SUB>18</SUB>>", "103": "<(LITERAL,1,dp[0][0] = 1)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>20</SUB>>", "107": "<(LITERAL,0,long ans = 0)<SUB>20</SUB>>", "109": "<(LOCAL,int mask: int)<SUB>22</SUB>>", "111": "<(IDENTIFIER,mask,int mask = 0)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>22</SUB>>", "115": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>22</SUB>>", "117": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>22</SUB>>", "119": "<(IDENTIFIER,mask,mask++)<SUB>22</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int pre = 0; Some(pre &lt;= 3); pre++),for (int pre = 0; Some(pre &lt;= 3); pre++))<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.assignment,int pre = 0)<SUB>23</SUB>>", "125": "<(LITERAL,0,int pre = 0)<SUB>23</SUB>>", "127": "<(IDENTIFIER,pre,pre &lt;= 3)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,pre++)<SUB>23</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "133": "<(LOCAL,int i: int)<SUB>24</SUB>>", "135": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>24</SUB>>", "139": "<(IDENTIFIER,n,i &lt; n)<SUB>24</SUB>>", "141": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.logicalAnd,(mask &amp; (1 &lt;&lt; i)) == 0 &amp;&amp; g[i] != pre)<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>25</SUB>>", "149": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.notEquals,g[i] != pre)<SUB>25</SUB>>", "153": "<(IDENTIFIER,g,g[i] != pre)<SUB>25</SUB>>", "155": "<(IDENTIFIER,pre,g[i] != pre)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)][g[i]])<SUB>26</SUB>>", "159": "<(IDENTIFIER,dp,dp[mask ^ (1 &lt;&lt; i)][g[i]] = add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "161": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; i))<SUB>26</SUB>>", "163": "<(LITERAL,1,1 &lt;&lt; i)<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>26</SUB>>", "167": "<(IDENTIFIER,i,dp[mask ^ (1 &lt;&lt; i)][g[i]] = add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "169": "<(IDENTIFIER,this,add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)])<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>26</SUB>>", "177": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>26</SUB>>", "179": "<(IDENTIFIER,g,add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dp[mask][pre])<SUB>26</SUB>>", "183": "<(IDENTIFIER,dp,add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "185": "<(IDENTIFIER,pre,add(dp[mask ^ (1 &lt;&lt; i)][g[i]], dp[mask][pre]))<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>27</SUB>>", "189": "<(LITERAL,0,int sum = 0)<SUB>27</SUB>>", "191": "<(LOCAL,int i: int)<SUB>28</SUB>>", "193": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>28</SUB>>", "197": "<(IDENTIFIER,n,i &lt; n)<SUB>28</SUB>>", "199": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "201": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) != 0),if ((mask &amp; (1 &lt;&lt; i)) != 0))<SUB>29</SUB>>", "203": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>29</SUB>>", "205": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>29</SUB>>", "207": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.assignmentPlus,sum += t[i])<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,t[i])<SUB>29</SUB>>", "213": "<(IDENTIFIER,i,sum += t[i])<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.equals,sum == T)<SUB>31</SUB>>", "217": "<(IDENTIFIER,T,sum == T)<SUB>31</SUB>>", "219": "<(IDENTIFIER,ans,ans = add(ans, dp[mask][pre]))<SUB>31</SUB>>", "221": "<(IDENTIFIER,this,add(ans, dp[mask][pre]))<SUB>31</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,dp[mask][pre])<SUB>31</SUB>>", "225": "<(IDENTIFIER,dp,add(ans, dp[mask][pre]))<SUB>31</SUB>>", "227": "<(IDENTIFIER,pre,add(ans, dp[mask][pre]))<SUB>31</SUB>>", "229": "<(IDENTIFIER,out,println(ans))<SUB>35</SUB>>", "231": "<(close,close())<SUB>44</SUB>>", "233": "<(MODIFIER,PUBLIC)>", "235": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}