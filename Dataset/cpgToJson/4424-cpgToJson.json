{"edges": [["19", "20"], ["19", "21"], ["19", "334"], ["19", "335"], ["19", "336"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "33"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "70"], ["21", "148"], ["21", "227"], ["21", "289"], ["21", "290"], ["21", "291"], ["21", "294"], ["21", "297"], ["21", "327"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "46"], ["42", "49"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["52", "59"], ["52", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["70", "71"], ["70", "74"], ["70", "77"], ["70", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "86"], ["80", "89"], ["80", "91"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "97"], ["91", "135"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "101"], ["97", "104"], ["97", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "108"], ["106", "123"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "131"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["148", "152"], ["148", "155"], ["148", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["158", "159"], ["158", "162"], ["158", "165"], ["158", "167"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "178"], ["172", "220"], ["174", "175"], ["174", "176"], ["176", "177"], ["178", "179"], ["178", "182"], ["178", "187"], ["178", "189"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "191"], ["189", "208"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "216"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "226"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["227", "228"], ["227", "231"], ["227", "234"], ["227", "236"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["236", "238"], ["236", "242"], ["236", "284"], ["238", "239"], ["238", "240"], ["240", "241"], ["242", "243"], ["242", "246"], ["242", "251"], ["242", "253"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["253", "254"], ["253", "255"], ["253", "272"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "265"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "280"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["280", "281"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["301", "310"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "316"], ["310", "322"], ["311", "312"], ["311", "313"], ["311", "314"], ["311", "315"], ["316", "317"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "321"], ["322", "323"], ["323", "324"], ["324", "325"], ["324", "326"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["22", "28"], ["25", "36"], ["34", "40"], ["38", "43"], ["291", "294"], ["294", "298"], ["327", "336"], ["24", "22"], ["26", "25"], ["36", "34"], ["40", "38"], ["43", "46"], ["46", "53"], ["46", "71"], ["49", "46"], ["71", "74"], ["74", "83"], ["74", "149"], ["77", "74"], ["149", "152"], ["152", "159"], ["152", "228"], ["155", "152"], ["228", "231"], ["231", "240"], ["231", "291"], ["234", "231"], ["298", "306"], ["298", "330"], ["328", "331"], ["331", "327"], ["28", "26"], ["238", "243"], ["284", "234"], ["303", "311"], ["330", "328"], ["53", "56"], ["56", "64"], ["56", "49"], ["59", "56"], ["81", "86"], ["86", "95"], ["86", "77"], ["89", "86"], ["159", "162"], ["162", "169"], ["162", "155"], ["165", "162"], ["240", "238"], ["243", "248"], ["246", "261"], ["246", "285"], ["251", "248"], ["285", "284"], ["305", "303"], ["311", "319"], ["311", "324"], ["62", "59"], ["83", "81"], ["93", "98"], ["135", "89"], ["248", "246"], ["255", "274"], ["306", "305"], ["317", "298"], ["63", "68"], ["68", "62"], ["95", "93"], ["98", "101"], ["101", "114"], ["101", "137"], ["104", "101"], ["136", "143"], ["141", "135"], ["169", "176"], ["169", "165"], ["257", "255"], ["273", "281"], ["273", "251"], ["319", "317"], ["324", "298"], ["64", "63"], ["108", "125"], ["137", "136"], ["142", "141"], ["174", "179"], ["220", "165"], ["259", "257"], ["274", "273"], ["274", "277"], ["277", "273"], ["281", "251"], ["110", "108"], ["124", "132"], ["124", "104"], ["143", "142"], ["176", "174"], ["179", "184"], ["182", "197"], ["182", "222"], ["187", "184"], ["221", "220"], ["260", "266"], ["265", "259"], ["112", "110"], ["125", "124"], ["125", "128"], ["128", "124"], ["132", "104"], ["184", "182"], ["191", "210"], ["222", "221"], ["261", "260"], ["266", "269"], ["269", "265"], ["113", "119"], ["118", "112"], ["193", "191"], ["209", "217"], ["209", "187"], ["114", "113"], ["119", "118"], ["195", "193"], ["210", "209"], ["210", "213"], ["213", "209"], ["217", "187"], ["196", "202"], ["201", "195"], ["197", "196"], ["202", "205"], ["205", "201"], ["19", "24"], ["20", "336"], ["22", "336"], ["25", "336"], ["25", "336"], ["34", "336"], ["38", "336"], ["40", "336"], ["38", "336"], ["38", "336"], ["228", "336"], ["231", "336"], ["231", "336"], ["231", "336"], ["291", "336"], ["294", "336"], ["298", "336"], ["298", "336"], ["327", "336"], ["331", "336"], ["327", "336"], ["327", "336"], ["305", "336"], ["303", "336"], ["303", "336"], ["311", "336"], ["311", "336"], ["311", "336"], ["324", "336"], ["324", "336"], ["319", "336"], ["317", "336"], ["317", "336"], ["238", "336"], ["238", "336"], ["243", "336"], ["246", "336"], ["248", "336"], ["246", "336"], ["246", "336"], ["284", "336"], ["284", "336"], ["284", "336"], ["234", "336"], ["257", "336"], ["259", "336"], ["259", "336"], ["257", "336"], ["255", "336"], ["255", "336"], ["274", "336"], ["273", "336"], ["273", "336"], ["273", "336"], ["281", "336"], ["281", "336"], ["251", "336"], ["159", "336"], ["162", "336"], ["162", "336"], ["155", "336"], ["169", "336"], ["174", "336"], ["174", "336"], ["179", "336"], ["182", "336"], ["184", "336"], ["182", "336"], ["182", "336"], ["220", "336"], ["220", "336"], ["220", "336"], ["165", "336"], ["193", "336"], ["195", "336"], ["195", "336"], ["193", "336"], ["191", "336"], ["191", "336"], ["210", "336"], ["209", "336"], ["209", "336"], ["209", "336"], ["217", "336"], ["217", "336"], ["187", "336"], ["81", "336"], ["81", "336"], ["86", "336"], ["86", "336"], ["77", "336"], ["93", "336"], ["93", "336"], ["98", "336"], ["101", "336"], ["101", "336"], ["101", "336"], ["135", "336"], ["141", "336"], ["141", "336"], ["135", "336"], ["135", "336"], ["89", "336"], ["110", "336"], ["112", "336"], ["112", "336"], ["110", "336"], ["108", "336"], ["108", "336"], ["125", "336"], ["124", "336"], ["124", "336"], ["124", "336"], ["132", "336"], ["132", "336"], ["104", "336"], ["53", "336"], ["56", "336"], ["56", "336"], ["56", "336"], ["49", "336"], ["62", "336"], ["68", "336"], ["62", "336"], ["62", "336"], ["59", "336"], ["311", "336"], ["19", "20"], ["19", "22"], ["36", "34"], ["40", "38"], ["19", "291"], ["19", "294"], ["22", "25"], ["19", "25"], ["19", "43"], ["19", "71"], ["19", "149"], ["19", "228"], ["331", "327"], ["331", "327"], ["25", "36"], ["19", "36"], ["36", "40"], ["19", "40"], ["43", "46"], ["49", "46"], ["19", "46"], ["34", "46"], ["46", "49"], ["19", "49"], ["71", "74"], ["77", "74"], ["19", "74"], ["46", "74"], ["86", "74"], ["19", "77"], ["74", "77"], ["149", "152"], ["155", "152"], ["19", "152"], ["74", "152"], ["162", "152"], ["152", "155"], ["169", "155"], ["19", "155"], ["228", "231"], ["234", "231"], ["19", "231"], ["152", "231"], ["231", "234"], ["19", "234"], ["240", "238"], ["238", "284"], ["274", "284"], ["277", "284"], ["281", "284"], ["19", "284"], ["291", "298"], ["317", "298"], ["19", "298"], ["294", "298"], ["324", "298"], ["305", "303"], ["305", "303"], ["298", "331"], ["19", "331"], ["19", "53"], ["74", "81"], ["19", "81"], ["19", "159"], ["19", "243"], ["53", "56"], ["59", "56"], ["19", "56"], ["38", "56"], ["56", "59"], ["19", "59"], ["68", "62"], ["81", "86"], ["89", "86"], ["19", "86"], ["74", "86"], ["86", "89"], ["19", "89"], ["95", "93"], ["141", "135"], ["93", "135"], ["125", "135"], ["128", "135"], ["132", "135"], ["19", "135"], ["159", "162"], ["165", "162"], ["19", "162"], ["152", "162"], ["169", "165"], ["19", "165"], ["19", "240"], ["243", "246"], ["251", "246"], ["19", "246"], ["248", "246"], ["248", "246"], ["19", "251"], ["246", "251"], ["257", "255"], ["257", "255"], ["298", "305"], ["19", "305"], ["298", "305"], ["19", "311"], ["231", "311"], ["38", "311"], ["248", "311"], ["184", "311"], ["101", "311"], ["56", "311"], ["303", "311"], ["311", "317"], ["19", "317"], ["74", "83"], ["19", "83"], ["19", "98"], ["38", "248"], ["184", "248"], ["101", "248"], ["56", "248"], ["19", "248"], ["298", "306"], ["19", "306"], ["298", "306"], ["311", "324"], ["19", "324"], ["40", "68"], ["19", "68"], ["19", "95"], ["98", "101"], ["104", "101"], ["19", "101"], ["38", "101"], ["56", "101"], ["101", "104"], ["19", "104"], ["110", "108"], ["110", "108"], ["93", "141"], ["125", "141"], ["128", "141"], ["132", "141"], ["19", "141"], ["152", "169"], ["19", "169"], ["162", "169"], ["176", "174"], ["174", "220"], ["210", "220"], ["213", "220"], ["217", "220"], ["19", "220"], ["193", "257"], ["110", "257"], ["19", "257"], ["259", "257"], ["259", "257"], ["274", "273"], ["274", "273"], ["277", "273"], ["277", "273"], ["209", "273"], ["124", "273"], ["274", "281"], ["19", "281"], ["311", "319"], ["19", "319"], ["19", "179"], ["62", "259"], ["255", "274"], ["19", "274"], ["238", "274"], ["277", "274"], ["281", "274"], ["274", "277"], ["19", "277"], ["19", "110"], ["112", "110"], ["112", "110"], ["125", "124"], ["125", "124"], ["128", "124"], ["128", "124"], ["125", "132"], ["19", "132"], ["19", "176"], ["179", "182"], ["187", "182"], ["19", "182"], ["184", "182"], ["184", "182"], ["19", "187"], ["182", "187"], ["193", "191"], ["193", "191"], ["108", "125"], ["19", "125"], ["93", "125"], ["128", "125"], ["132", "125"], ["125", "128"], ["19", "128"], ["38", "184"], ["101", "184"], ["56", "184"], ["19", "184"], ["246", "269"], ["19", "269"], ["110", "193"], ["19", "193"], ["195", "193"], ["195", "193"], ["210", "209"], ["210", "209"], ["124", "209"], ["213", "209"], ["213", "209"], ["210", "217"], ["19", "217"], ["112", "195"], ["191", "210"], ["19", "210"], ["174", "210"], ["213", "210"], ["217", "210"], ["210", "213"], ["19", "213"], ["182", "205"], ["19", "205"], ["46", "49"], ["46", "53"], ["46", "56"], ["46", "46"], ["74", "74"], ["74", "86"], ["74", "77"], ["74", "81"], ["74", "83"], ["152", "162"], ["152", "152"], ["152", "159"], ["152", "155"], ["231", "240"], ["231", "243"], ["231", "238"], ["231", "284"], ["231", "285"], ["231", "231"], ["231", "246"], ["231", "234"], ["231", "248"], ["298", "298"], ["298", "306"], ["298", "311"], ["298", "305"], ["298", "303"], ["56", "68"], ["56", "59"], ["56", "64"], ["56", "56"], ["56", "63"], ["56", "62"], ["86", "136"], ["86", "95"], ["86", "93"], ["86", "86"], ["86", "141"], ["86", "135"], ["86", "98"], ["86", "101"], ["86", "137"], ["86", "89"], ["86", "142"], ["86", "143"], ["162", "162"], ["162", "169"], ["162", "165"], ["246", "274"], ["246", "260"], ["246", "269"], ["246", "257"], ["246", "273"], ["246", "261"], ["246", "255"], ["246", "259"], ["246", "246"], ["246", "265"], ["246", "251"], ["246", "248"], ["246", "266"], ["311", "317"], ["311", "324"], ["311", "319"], ["101", "114"], ["101", "104"], ["101", "112"], ["101", "118"], ["101", "108"], ["101", "113"], ["101", "119"], ["101", "101"], ["101", "110"], ["101", "124"], ["101", "125"], ["169", "184"], ["169", "174"], ["169", "182"], ["169", "176"], ["169", "222"], ["169", "179"], ["169", "221"], ["169", "220"], ["273", "281"], ["274", "277"], ["124", "132"], ["182", "209"], ["182", "196"], ["182", "195"], ["182", "184"], ["182", "182"], ["182", "202"], ["182", "201"], ["182", "197"], ["182", "191"], ["182", "187"], ["182", "205"], ["182", "193"], ["182", "210"], ["125", "128"], ["209", "217"], ["210", "213"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int i: int)<SUB>5</SUB>>", "31": "<(LOCAL,int k: int)<SUB>5</SUB>>", "33": "<(LOCAL,int m: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,n,n = nextInt())<SUB>6</SUB>>", "37": "<(IDENTIFIER,scan,nextInt())<SUB>6</SUB>>", "39": "<(IDENTIFIER,m,m = nextInt())<SUB>7</SUB>>", "41": "<(IDENTIFIER,scan,nextInt())<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,i = 0)<SUB>8</SUB>>", "45": "<(LITERAL,0,i = 0)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,j = 0)<SUB>9</SUB>>", "55": "<(LITERAL,0,j = 0)<SUB>9</SUB>>", "57": "<(IDENTIFIER,j,j &lt; m)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,input[i][j])<SUB>10</SUB>>", "65": "<(IDENTIFIER,input,input[i][j] = nextInt())<SUB>10</SUB>>", "67": "<(IDENTIFIER,j,input[i][j] = nextInt())<SUB>10</SUB>>", "69": "<(IDENTIFIER,scan,nextInt())<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,i = 0)<SUB>13</SUB>>", "73": "<(LITERAL,0,i = 0)<SUB>13</SUB>>", "75": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.assignment,j = i + 1)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "85": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "87": "<(IDENTIFIER,j,j &lt; n)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,int minDist = -1)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.minus,-1)<SUB>15</SUB>>", "97": "<(CONTROL_STRUCTURE,for (k = 0; Some(k &lt; m); k++),for (k = 0; Some(k &lt; m); k++))<SUB>16</SUB>>", "99": "<(IDENTIFIER,k,k = 0)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>16</SUB>>", "103": "<(IDENTIFIER,m,k &lt; m)<SUB>16</SUB>>", "105": "<(IDENTIFIER,k,k++)<SUB>16</SUB>>", "107": "<(LOCAL,int dist: int)<SUB>17</SUB>>", "109": "<(IDENTIFIER,dist,int dist = abs(input[i][k] - input[j][k]))<SUB>17</SUB>>", "111": "<(IDENTIFIER,Math,abs(input[i][k] - input[j][k]))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,input[i][k])<SUB>17</SUB>>", "115": "<(IDENTIFIER,input,input[i][k] - input[j][k])<SUB>17</SUB>>", "117": "<(IDENTIFIER,k,input[i][k] - input[j][k])<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,input[j])<SUB>17</SUB>>", "121": "<(IDENTIFIER,j,input[i][k] - input[j][k])<SUB>17</SUB>>", "123": "<(CONTROL_STRUCTURE,if (dist &lt; minDist || minDist &lt; 0),if (dist &lt; minDist || minDist &lt; 0))<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.lessThan,dist &lt; minDist)<SUB>18</SUB>>", "127": "<(IDENTIFIER,minDist,dist &lt; minDist)<SUB>18</SUB>>", "129": "<(IDENTIFIER,minDist,minDist &lt; 0)<SUB>18</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "133": "<(IDENTIFIER,minDist,minDist = dist)<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.assignment,minDistBetweenRow[i][j] = minDistBetweenRow[j][i] = minDist)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,minDistBetweenRow[i])<SUB>22</SUB>>", "139": "<(IDENTIFIER,i,minDistBetweenRow[i][j] = minDistBetweenRow[j][i] = minDist)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.assignment,minDistBetweenRow[j][i] = minDist)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,minDistBetweenRow[j])<SUB>22</SUB>>", "145": "<(IDENTIFIER,j,minDistBetweenRow[j][i] = minDist)<SUB>22</SUB>>", "147": "<(IDENTIFIER,minDist,minDistBetweenRow[j][i] = minDist)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.assignment,i = 0)<SUB>25</SUB>>", "151": "<(LITERAL,0,i = 0)<SUB>25</SUB>>", "153": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.assignment,j = 0)<SUB>26</SUB>>", "161": "<(LITERAL,0,j = 0)<SUB>26</SUB>>", "163": "<(IDENTIFIER,j,j &lt; n)<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.postIncrement,j++)<SUB>26</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.notEquals,i != j)<SUB>27</SUB>>", "171": "<(IDENTIFIER,j,i != j)<SUB>27</SUB>>", "173": "<(LOCAL,int minDist: int)<SUB>29</SUB>>", "175": "<(IDENTIFIER,minDist,int minDist = -1)<SUB>29</SUB>>", "177": "<(LITERAL,1,-1)<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.assignment,k = 0)<SUB>30</SUB>>", "181": "<(LITERAL,0,k = 0)<SUB>30</SUB>>", "183": "<(IDENTIFIER,k,k &lt; m - 1)<SUB>30</SUB>>", "185": "<(IDENTIFIER,m,m - 1)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,k++)<SUB>30</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "191": "<(&lt;operator&gt;.assignment,int dist = abs(input[j][k] - input[i][k + 1]))<SUB>31</SUB>>", "193": "<(abs,abs(input[j][k] - input[i][k + 1]))<SUB>31</SUB>>", "195": "<(&lt;operator&gt;.subtraction,input[j][k] - input[i][k + 1])<SUB>31</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,input[j])<SUB>31</SUB>>", "199": "<(IDENTIFIER,j,input[j][k] - input[i][k + 1])<SUB>31</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,input[i][k + 1])<SUB>31</SUB>>", "203": "<(IDENTIFIER,input,input[j][k] - input[i][k + 1])<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.addition,k + 1)<SUB>31</SUB>>", "207": "<(LITERAL,1,k + 1)<SUB>31</SUB>>", "209": "<(&lt;operator&gt;.logicalOr,dist &lt; minDist || minDist &lt; 0)<SUB>32</SUB>>", "211": "<(IDENTIFIER,dist,dist &lt; minDist)<SUB>32</SUB>>", "213": "<(&lt;operator&gt;.lessThan,minDist &lt; 0)<SUB>32</SUB>>", "215": "<(LITERAL,0,minDist &lt; 0)<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.assignment,minDist = dist)<SUB>33</SUB>>", "219": "<(IDENTIFIER,dist,minDist = dist)<SUB>33</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,minDistBetweenHeadAndTail[i][j])<SUB>36</SUB>>", "223": "<(IDENTIFIER,minDistBetweenHeadAndTail,minDistBetweenHeadAndTail[i][j] = minDist)<SUB>36</SUB>>", "225": "<(IDENTIFIER,j,minDistBetweenHeadAndTail[i][j] = minDist)<SUB>36</SUB>>", "227": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>40</SUB>>", "229": "<(IDENTIFIER,i,i = 0)<SUB>40</SUB>>", "231": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>40</SUB>>", "233": "<(IDENTIFIER,n,i &lt; n)<SUB>40</SUB>>", "235": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "237": "<(LOCAL,int minDist: int)<SUB>41</SUB>>", "239": "<(IDENTIFIER,minDist,int minDist = -1)<SUB>41</SUB>>", "241": "<(LITERAL,1,-1)<SUB>41</SUB>>", "243": "<(&lt;operator&gt;.assignment,j = 0)<SUB>42</SUB>>", "245": "<(LITERAL,0,j = 0)<SUB>42</SUB>>", "247": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>42</SUB>>", "249": "<(IDENTIFIER,m,m - 1)<SUB>42</SUB>>", "251": "<(&lt;operator&gt;.postIncrement,j++)<SUB>42</SUB>>", "253": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "255": "<(&lt;operator&gt;.assignment,int dist = abs(input[i][j] - input[i][j + 1]))<SUB>43</SUB>>", "257": "<(abs,abs(input[i][j] - input[i][j + 1]))<SUB>43</SUB>>", "259": "<(&lt;operator&gt;.subtraction,input[i][j] - input[i][j + 1])<SUB>43</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,input[i])<SUB>43</SUB>>", "263": "<(IDENTIFIER,i,input[i][j] - input[i][j + 1])<SUB>43</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,input[i][j + 1])<SUB>43</SUB>>", "267": "<(IDENTIFIER,input,input[i][j] - input[i][j + 1])<SUB>43</SUB>>", "269": "<(&lt;operator&gt;.addition,j + 1)<SUB>43</SUB>>", "271": "<(LITERAL,1,j + 1)<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.logicalOr,dist &lt; minDist || minDist &lt; 0)<SUB>44</SUB>>", "275": "<(IDENTIFIER,dist,dist &lt; minDist)<SUB>44</SUB>>", "277": "<(&lt;operator&gt;.lessThan,minDist &lt; 0)<SUB>44</SUB>>", "279": "<(LITERAL,0,minDist &lt; 0)<SUB>44</SUB>>", "281": "<(&lt;operator&gt;.assignment,minDist = dist)<SUB>45</SUB>>", "283": "<(IDENTIFIER,dist,minDist = dist)<SUB>45</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,rowMinDist[i])<SUB>48</SUB>>", "287": "<(IDENTIFIER,i,rowMinDist[i] = minDist)<SUB>48</SUB>>", "289": "<(LOCAL,int low: int)<SUB>50</SUB>>", "291": "<(&lt;operator&gt;.assignment,int low = 0)<SUB>50</SUB>>", "293": "<(LITERAL,0,int low = 0)<SUB>50</SUB>>", "295": "<(IDENTIFIER,high,int high = 1000000010)<SUB>50</SUB>>", "297": "<(CONTROL_STRUCTURE,while (low &lt; high),while (low &lt; high))<SUB>51</SUB>>", "299": "<(IDENTIFIER,low,low &lt; high)<SUB>51</SUB>>", "301": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "303": "<(&lt;operator&gt;.assignment,int mid = (low + high) / 2)<SUB>52</SUB>>", "305": "<(&lt;operator&gt;.division,(low + high) / 2)<SUB>52</SUB>>", "307": "<(IDENTIFIER,low,low + high)<SUB>52</SUB>>", "309": "<(LITERAL,2,(low + high) / 2)<SUB>52</SUB>>", "311": "<(check,check(n, m, mid))<SUB>53</SUB>>", "313": "<(IDENTIFIER,n,check(n, m, mid))<SUB>53</SUB>>", "315": "<(IDENTIFIER,mid,check(n, m, mid))<SUB>53</SUB>>", "317": "<(&lt;operator&gt;.assignment,low = mid + 1)<SUB>54</SUB>>", "319": "<(&lt;operator&gt;.addition,mid + 1)<SUB>54</SUB>>", "321": "<(LITERAL,1,mid + 1)<SUB>54</SUB>>", "323": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "325": "<(IDENTIFIER,high,high = mid)<SUB>56</SUB>>", "327": "<(println,System.out.println(high - 1))<SUB>59</SUB>>", "329": "<(IDENTIFIER,System,System.out.println(high - 1))<SUB>59</SUB>>", "331": "<(&lt;operator&gt;.subtraction,high - 1)<SUB>59</SUB>>", "333": "<(LITERAL,1,high - 1)<SUB>59</SUB>>", "335": "<(MODIFIER,STATIC)>"}}