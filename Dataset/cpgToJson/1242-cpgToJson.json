{"edges": [["21", "23"], ["21", "153"], ["21", "154"], ["21", "155"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "59"], ["23", "60"], ["23", "69"], ["23", "151"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "73"], ["69", "77"], ["70", "71"], ["70", "72"], ["73", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["78", "79"], ["78", "80"], ["78", "91"], ["78", "92"], ["78", "99"], ["78", "100"], ["78", "105"], ["78", "106"], ["78", "111"], ["78", "116"], ["78", "117"], ["78", "128"], ["78", "129"], ["78", "136"], ["78", "137"], ["78", "148"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["131", "134"], ["131", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["148", "149"], ["148", "150"], ["151", "152"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "64"], ["60", "70"], ["151", "155"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["62", "60"], ["70", "74"], ["70", "86"], ["30", "28"], ["37", "35"], ["63", "62"], ["74", "151"], ["64", "63"], ["80", "95"], ["92", "102"], ["100", "108"], ["106", "113"], ["111", "122"], ["117", "131"], ["129", "142"], ["137", "148"], ["148", "151"], ["82", "80"], ["94", "92"], ["102", "100"], ["108", "106"], ["113", "111"], ["119", "117"], ["131", "129"], ["139", "137"], ["84", "82"], ["95", "94"], ["120", "125"], ["125", "119"], ["140", "139"], ["85", "84"], ["122", "120"], ["141", "140"], ["86", "85"], ["142", "141"], ["21", "26"], ["22", "155"], ["24", "155"], ["27", "155"], ["27", "155"], ["31", "155"], ["34", "155"], ["34", "155"], ["39", "155"], ["44", "155"], ["51", "155"], ["49", "155"], ["49", "155"], ["54", "155"], ["54", "155"], ["64", "155"], ["63", "155"], ["63", "155"], ["62", "155"], ["60", "155"], ["60", "155"], ["70", "155"], ["70", "155"], ["70", "155"], ["82", "155"], ["86", "155"], ["85", "155"], ["84", "155"], ["82", "155"], ["80", "155"], ["80", "155"], ["95", "155"], ["94", "155"], ["92", "155"], ["92", "155"], ["102", "155"], ["100", "155"], ["100", "155"], ["106", "155"], ["106", "155"], ["113", "155"], ["111", "155"], ["111", "155"], ["122", "155"], ["120", "155"], ["119", "155"], ["119", "155"], ["117", "155"], ["117", "155"], ["129", "155"], ["131", "155"], ["131", "155"], ["129", "155"], ["129", "155"], ["140", "155"], ["140", "155"], ["139", "155"], ["139", "155"], ["137", "155"], ["137", "155"], ["148", "155"], ["148", "155"], ["74", "155"], ["74", "155"], ["151", "155"], ["151", "155"], ["131", "155"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["56", "54"], ["62", "60"], ["62", "60"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["148", "151"], ["74", "151"], ["21", "151"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["46", "51"], ["21", "51"], ["39", "56"], ["21", "56"], ["44", "56"], ["64", "62"], ["64", "62"], ["21", "62"], ["60", "70"], ["21", "70"], ["56", "70"], ["64", "63"], ["64", "63"], ["21", "63"], ["34", "74"], ["21", "74"], ["56", "74"], ["82", "80"], ["82", "80"], ["94", "92"], ["94", "92"], ["102", "100"], ["102", "100"], ["108", "106"], ["108", "106"], ["113", "111"], ["113", "111"], ["119", "117"], ["119", "117"], ["131", "129"], ["131", "129"], ["131", "129"], ["131", "129"], ["139", "137"], ["139", "137"], ["54", "64"], ["21", "64"], ["49", "64"], ["100", "111"], ["21", "111"], ["34", "148"], ["21", "148"], ["137", "148"], ["70", "82"], ["21", "82"], ["84", "82"], ["84", "82"], ["80", "94"], ["21", "94"], ["86", "94"], ["56", "102"], ["21", "102"], ["92", "102"], ["102", "108"], ["21", "108"], ["86", "108"], ["108", "113"], ["21", "113"], ["108", "113"], ["120", "119"], ["120", "119"], ["125", "119"], ["125", "119"], ["21", "131"], ["117", "131"], ["106", "131"], ["111", "139"], ["21", "139"], ["131", "139"], ["86", "84"], ["86", "84"], ["21", "84"], ["80", "95"], ["21", "95"], ["86", "95"], ["21", "120"], ["122", "120"], ["122", "120"], ["21", "125"], ["111", "140"], ["21", "140"], ["86", "85"], ["86", "85"], ["21", "85"], ["21", "122"], ["113", "122"], ["64", "86"], ["21", "86"], ["64", "86"], ["70", "94"], ["70", "141"], ["70", "120"], ["70", "113"], ["70", "122"], ["70", "84"], ["70", "102"], ["70", "131"], ["70", "85"], ["70", "142"], ["70", "74"], ["70", "119"], ["70", "95"], ["70", "92"], ["70", "106"], ["70", "129"], ["70", "82"], ["70", "140"], ["70", "148"], ["70", "137"], ["70", "80"], ["70", "100"], ["70", "117"], ["70", "139"], ["70", "108"], ["70", "125"], ["70", "111"], ["70", "86"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,long n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,long correct: long)<SUB>6</SUB>>", "45": "<(IDENTIFIER,correct,long correct = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,long k = nextInt())<SUB>7</SUB>>", "51": "<(nextInt,nextInt())<SUB>7</SUB>>", "53": "<(LOCAL,long wrong: long)<SUB>8</SUB>>", "55": "<(IDENTIFIER,wrong,long wrong = n - correct)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,n - correct)<SUB>8</SUB>>", "59": "<(LOCAL,long set: long)<SUB>9</SUB>>", "61": "<(IDENTIFIER,set,long set = wrong * k + k - 1)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.addition,wrong * k + k)<SUB>9</SUB>>", "65": "<(IDENTIFIER,wrong,wrong * k)<SUB>9</SUB>>", "67": "<(IDENTIFIER,k,wrong * k + k)<SUB>9</SUB>>", "69": "<(CONTROL_STRUCTURE,if (set &gt;= n),if (set &gt;= n))<SUB>10</SUB>>", "71": "<(IDENTIFIER,set,set &gt;= n)<SUB>10</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "75": "<(IDENTIFIER,out,println(correct))<SUB>11</SUB>>", "77": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "79": "<(LOCAL,long needExtraCorrect: long)<SUB>13</SUB>>", "81": "<(IDENTIFIER,needExtraCorrect,long needExtraCorrect = n - (wrong * k + k - 1))<SUB>13</SUB>>", "83": "<(IDENTIFIER,n,n - (wrong * k + k - 1))<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.addition,wrong * k + k)<SUB>13</SUB>>", "87": "<(IDENTIFIER,wrong,wrong * k)<SUB>13</SUB>>", "89": "<(IDENTIFIER,k,wrong * k + k)<SUB>13</SUB>>", "91": "<(LOCAL,long firstSet: long)<SUB>14</SUB>>", "93": "<(IDENTIFIER,firstSet,long firstSet = needExtraCorrect + k - 1)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.addition,needExtraCorrect + k)<SUB>14</SUB>>", "97": "<(IDENTIFIER,k,needExtraCorrect + k)<SUB>14</SUB>>", "99": "<(LOCAL,long otherSet: long)<SUB>15</SUB>>", "101": "<(IDENTIFIER,otherSet,long otherSet = correct - firstSet)<SUB>15</SUB>>", "103": "<(IDENTIFIER,correct,correct - firstSet)<SUB>15</SUB>>", "105": "<(LOCAL,long firstDouble: long)<SUB>17</SUB>>", "107": "<(IDENTIFIER,firstDouble,long firstDouble = firstSet / k)<SUB>17</SUB>>", "109": "<(IDENTIFIER,firstSet,firstSet / k)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.assignmentPlus,otherSet += firstSet % k)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.modulo,firstSet % k)<SUB>18</SUB>>", "115": "<(IDENTIFIER,k,firstSet % k)<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.assignment,long[][] mat = new long[][] { { 2, 2 * k }, { 0, 1 } })<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.arrayInitializer,new long[][] { { 2, 2 * k }, { 0, 1 } })<SUB>19</SUB>>", "121": "<(LITERAL,2,{ 2, 2 * k })<SUB>19</SUB>>", "123": "<(LITERAL,2,2 * k)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.arrayInitializer,{ 0, 1 })<SUB>19</SUB>>", "127": "<(LITERAL,1,{ 0, 1 })<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.assignment,long[][] A = pow(mat, firstDouble, MOD))<SUB>20</SUB>>", "131": "<(pow,pow(mat, firstDouble, MOD))<SUB>20</SUB>>", "133": "<(IDENTIFIER,mat,pow(mat, firstDouble, MOD))<SUB>20</SUB>>", "135": "<(IDENTIFIER,MOD,pow(mat, firstDouble, MOD))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.assignment,long score = (A[0][1] + otherSet) % MOD)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.modulo,(A[0][1] + otherSet) % MOD)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,A[0][1])<SUB>21</SUB>>", "143": "<(IDENTIFIER,A,A[0][1] + otherSet)<SUB>21</SUB>>", "145": "<(LITERAL,1,A[0][1] + otherSet)<SUB>21</SUB>>", "147": "<(IDENTIFIER,MOD,(A[0][1] + otherSet) % MOD)<SUB>21</SUB>>", "149": "<(IDENTIFIER,out,println(score))<SUB>22</SUB>>", "151": "<(flush,flush())<SUB>24</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}