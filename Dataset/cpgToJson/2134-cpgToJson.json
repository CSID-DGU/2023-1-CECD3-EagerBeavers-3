{"edges": [["24", "26"], ["24", "199"], ["24", "200"], ["24", "201"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "8"], ["26", "48"], ["26", "51"], ["26", "54"], ["26", "55"], ["26", "61"], ["26", "62"], ["26", "68"], ["26", "69"], ["26", "73"], ["26", "76"], ["26", "79"], ["26", "97"], ["26", "98"], ["26", "102"], ["26", "171"], ["26", "176"], ["26", "193"], ["26", "195"], ["26", "197"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "7"], ["51", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["76", "9"], ["76", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "166"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "140"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["148", "151"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "184"], ["176", "186"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["197", "198"], ["27", "34"], ["30", "43"], ["41", "47"], ["44", "50"], ["48", "52"], ["51", "59"], ["55", "66"], ["62", "71"], ["69", "75"], ["73", "77"], ["76", "81"], ["98", "104"], ["171", "178"], ["193", "195"], ["195", "197"], ["197", "201"], ["29", "27"], ["43", "41"], ["45", "44"], ["50", "48"], ["52", "51"], ["57", "55"], ["64", "62"], ["71", "69"], ["75", "73"], ["77", "76"], ["81", "84"], ["84", "90"], ["84", "100"], ["87", "84"], ["89", "87"], ["100", "98"], ["104", "107"], ["107", "114"], ["107", "173"], ["110", "107"], ["173", "171"], ["178", "181"], ["181", "190"], ["181", "193"], ["184", "181"], ["186", "184"], ["32", "39"], ["35", "30"], ["47", "45"], ["59", "57"], ["66", "64"], ["90", "95"], ["93", "89"], ["114", "119"], ["166", "110"], ["188", "186"], ["34", "32"], ["37", "35"], ["95", "93"], ["119", "122"], ["122", "134"], ["122", "167"], ["125", "122"], ["167", "166"], ["190", "188"], ["39", "37"], ["129", "143"], ["131", "129"], ["141", "152"], ["141", "125"], ["146", "125"], ["133", "131"], ["143", "141"], ["148", "146"], ["134", "137"], ["137", "133"], ["151", "148"], ["152", "159"], ["155", "151"], ["157", "155"], ["158", "163"], ["163", "157"], ["159", "158"], ["24", "29"], ["25", "201"], ["27", "201"], ["32", "201"], ["35", "201"], ["35", "201"], ["35", "201"], ["30", "201"], ["41", "201"], ["44", "201"], ["44", "201"], ["48", "201"], ["55", "201"], ["62", "201"], ["64", "201"], ["64", "201"], ["62", "201"], ["62", "201"], ["69", "201"], ["69", "201"], ["69", "201"], ["73", "201"], ["76", "201"], ["76", "201"], ["76", "201"], ["98", "201"], ["98", "201"], ["98", "201"], ["104", "201"], ["171", "201"], ["171", "201"], ["178", "201"], ["181", "201"], ["181", "201"], ["181", "201"], ["193", "201"], ["195", "201"], ["197", "201"], ["197", "201"], ["188", "201"], ["186", "201"], ["186", "201"], ["184", "201"], ["114", "201"], ["114", "201"], ["119", "201"], ["122", "201"], ["122", "201"], ["166", "201"], ["166", "201"], ["166", "201"], ["110", "201"], ["131", "201"], ["133", "201"], ["133", "201"], ["131", "201"], ["129", "201"], ["129", "201"], ["141", "201"], ["143", "201"], ["141", "201"], ["141", "201"], ["148", "201"], ["151", "201"], ["158", "201"], ["158", "201"], ["157", "201"], ["163", "201"], ["157", "201"], ["155", "201"], ["151", "201"], ["148", "201"], ["146", "201"], ["146", "201"], ["125", "201"], ["89", "201"], ["93", "201"], ["95", "201"], ["93", "201"], ["89", "201"], ["89", "201"], ["87", "201"], ["24", "25"], ["24", "27"], ["24", "41"], ["24", "48"], ["57", "55"], ["57", "55"], ["64", "62"], ["64", "62"], ["71", "69"], ["24", "73"], ["100", "98"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["48", "51"], ["24", "51"], ["52", "51"], ["73", "76"], ["24", "76"], ["77", "76"], ["24", "81"], ["93", "89"], ["93", "89"], ["24", "104"], ["44", "171"], ["24", "171"], ["98", "171"], ["24", "178"], ["171", "193"], ["186", "193"], ["24", "193"], ["77", "195"], ["24", "195"], ["193", "197"], ["24", "197"], ["24", "32"], ["24", "40"], ["30", "52"], ["24", "52"], ["24", "57"], ["59", "57"], ["57", "64"], ["24", "64"], ["66", "64"], ["55", "71"], ["24", "71"], ["52", "77"], ["24", "77"], ["81", "84"], ["87", "84"], ["24", "84"], ["71", "84"], ["84", "87"], ["24", "87"], ["84", "100"], ["24", "100"], ["104", "107"], ["110", "107"], ["24", "107"], ["100", "107"], ["122", "110"], ["24", "110"], ["62", "114"], ["143", "114"], ["158", "114"], ["24", "114"], ["114", "166"], ["146", "166"], ["24", "166"], ["178", "181"], ["184", "181"], ["24", "181"], ["107", "181"], ["181", "184"], ["24", "184"], ["171", "186"], ["24", "186"], ["98", "186"], ["166", "186"], ["32", "35"], ["24", "35"], ["51", "59"], ["24", "59"], ["59", "66"], ["24", "66"], ["64", "93"], ["24", "93"], ["95", "93"], ["24", "119"], ["24", "188"], ["98", "188"], ["166", "188"], ["76", "95"], ["24", "95"], ["119", "122"], ["125", "122"], ["24", "122"], ["107", "122"], ["122", "125"], ["24", "125"], ["131", "129"], ["131", "129"], ["148", "146"], ["148", "146"], ["148", "146"], ["148", "131"], ["24", "131"], ["133", "131"], ["133", "131"], ["129", "141"], ["24", "141"], ["143", "141"], ["143", "141"], ["69", "133"], ["89", "133"], ["24", "143"], ["158", "143"], ["62", "143"], ["155", "148"], ["24", "148"], ["114", "148"], ["146", "148"], ["98", "148"], ["155", "148"], ["98", "151"], ["155", "151"], ["155", "151"], ["131", "155"], ["24", "155"], ["157", "155"], ["157", "155"], ["158", "157"], ["158", "157"], ["163", "157"], ["159", "158"], ["159", "158"], ["24", "158"], ["141", "163"], ["24", "163"], ["24", "159"], ["143", "159"], ["84", "89"], ["84", "84"], ["84", "95"], ["84", "87"], ["84", "93"], ["84", "90"], ["107", "107"], ["107", "167"], ["107", "122"], ["107", "114"], ["107", "166"], ["107", "119"], ["107", "110"], ["181", "188"], ["181", "181"], ["181", "190"], ["181", "184"], ["181", "186"], ["122", "141"], ["122", "122"], ["122", "131"], ["122", "129"], ["122", "134"], ["122", "143"], ["122", "137"], ["122", "125"], ["122", "133"], ["141", "146"], ["141", "163"], ["141", "151"], ["141", "157"], ["141", "159"], ["141", "148"], ["141", "152"], ["141", "155"], ["141", "158"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "46": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer t: ANY)<SUB>4</SUB>>", "49": "<(IDENTIFIER,t,ANY t = new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "51": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "52": "<(readLine,readLine())<SUB>4</SUB>>", "54": "<(LOCAL,int N: int)<SUB>5</SUB>>", "56": "<(IDENTIFIER,N,int N = parseInt(t.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,Integer,parseInt(t.nextToken()))<SUB>5</SUB>>", "60": "<(IDENTIFIER,t,nextToken())<SUB>5</SUB>>", "62": "<(&lt;operator&gt;.assignment,int R = parseInt(t.nextToken()))<SUB>6</SUB>>", "64": "<(parseInt,parseInt(t.nextToken()))<SUB>6</SUB>>", "66": "<(nextToken,nextToken())<SUB>6</SUB>>", "68": "<(LOCAL,int[] x: int[])<SUB>7</SUB>>", "70": "<(IDENTIFIER,x,int[] x = new int[N])<SUB>7</SUB>>", "72": "<(IDENTIFIER,N,new int[N])<SUB>7</SUB>>", "74": "<(IDENTIFIER,t,t = new StringTokenizer(in.readLine()))<SUB>8</SUB>>", "76": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>8</SUB>>", "77": "<(readLine,readLine())<SUB>8</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,i &lt; N)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.assignment,x[i] = parseInt(t.nextToken()))<SUB>10</SUB>>", "91": "<(IDENTIFIER,x,x[i] = parseInt(t.nextToken()))<SUB>10</SUB>>", "93": "<(parseInt,parseInt(t.nextToken()))<SUB>10</SUB>>", "95": "<(nextToken,nextToken())<SUB>10</SUB>>", "97": "<(LOCAL,double[] y: double[])<SUB>11</SUB>>", "99": "<(IDENTIFIER,y,double[] y = new double[N])<SUB>11</SUB>>", "101": "<(IDENTIFIER,N,new double[N])<SUB>11</SUB>>", "103": "<(LOCAL,int i: int)<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>12</SUB>>", "109": "<(IDENTIFIER,N,i &lt; N)<SUB>12</SUB>>", "111": "<(IDENTIFIER,i,++i)<SUB>12</SUB>>", "113": "<(LOCAL,double max: double)<SUB>13</SUB>>", "115": "<(IDENTIFIER,max,double max = R)<SUB>13</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); ++j),for (int j = 0; Some(j &lt; i); ++j))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "121": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "123": "<(IDENTIFIER,j,j &lt; i)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.preIncrement,++j)<SUB>14</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.assignment,int xDiff = Math.abs(x[i] - x[j]))<SUB>15</SUB>>", "131": "<(abs,Math.abs(x[i] - x[j]))<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>15</SUB>>", "135": "<(IDENTIFIER,x,x[i] - x[j])<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>15</SUB>>", "139": "<(IDENTIFIER,j,x[i] - x[j])<SUB>15</SUB>>", "141": "<(&lt;operator&gt;.lessEqualsThan,xDiff &lt;= 2 * R)<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.multiplication,2 * R)<SUB>16</SUB>>", "145": "<(IDENTIFIER,R,2 * R)<SUB>16</SUB>>", "147": "<(IDENTIFIER,max,max = Math.max(max, y[j] + Math.sqrt(4 * R * R - xDiff * xDiff)))<SUB>17</SUB>>", "149": "<(IDENTIFIER,Math,Math.max(max, y[j] + Math.sqrt(4 * R * R - xDiff * xDiff)))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.addition,y[j] + Math.sqrt(4 * R * R - xDiff * xDiff))<SUB>17</SUB>>", "153": "<(IDENTIFIER,y,y[j] + Math.sqrt(4 * R * R - xDiff * xDiff))<SUB>17</SUB>>", "155": "<(sqrt,Math.sqrt(4 * R * R - xDiff * xDiff))<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.subtraction,4 * R * R - xDiff * xDiff)<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.multiplication,4 * R)<SUB>17</SUB>>", "161": "<(IDENTIFIER,R,4 * R)<SUB>17</SUB>>", "163": "<(&lt;operator&gt;.multiplication,xDiff * xDiff)<SUB>17</SUB>>", "165": "<(IDENTIFIER,xDiff,xDiff * xDiff)<SUB>17</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>19</SUB>>", "169": "<(IDENTIFIER,i,y[i] = max)<SUB>19</SUB>>", "171": "<(print,print(y[0]))<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,y[0])<SUB>21</SUB>>", "175": "<(LITERAL,0,print(y[0]))<SUB>21</SUB>>", "177": "<(LOCAL,int i: int)<SUB>22</SUB>>", "179": "<(IDENTIFIER,i,int i = 1)<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>22</SUB>>", "183": "<(IDENTIFIER,N,i &lt; N)<SUB>22</SUB>>", "185": "<(IDENTIFIER,i,++i)<SUB>22</SUB>>", "187": "<(IDENTIFIER,out,print(&quot; &quot; + y[i]))<SUB>23</SUB>>", "189": "<(LITERAL,&quot; &quot;,&quot; &quot; + y[i])<SUB>23</SUB>>", "191": "<(IDENTIFIER,y,&quot; &quot; + y[i])<SUB>23</SUB>>", "193": "<(println,println())<SUB>24</SUB>>", "195": "<(close,close())<SUB>25</SUB>>", "197": "<(close,close())<SUB>26</SUB>>", "199": "<(MODIFIER,PUBLIC)>", "201": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}