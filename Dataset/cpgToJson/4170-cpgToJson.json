{"edges": [["21", "22"], ["21", "23"], ["21", "268"], ["21", "269"], ["21", "270"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "6"], ["23", "50"], ["23", "88"], ["23", "93"], ["23", "97"], ["23", "102"], ["23", "233"], ["23", "264"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "64"], ["60", "67"], ["61", "62"], ["61", "63"], ["64", "5"], ["64", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "119"], ["112", "120"], ["112", "123"], ["112", "144"], ["112", "149"], ["112", "150"], ["112", "161"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "131"], ["123", "133"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["161", "166"], ["161", "169"], ["161", "171"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "179"], ["171", "180"], ["171", "185"], ["172", "173"], ["172", "178"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "226"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "209"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "215"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["243", "254"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["248", "249"], ["248", "252"], ["248", "253"], ["249", "250"], ["249", "251"], ["254", "255"], ["254", "258"], ["254", "259"], ["255", "256"], ["255", "257"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["264", "265"], ["265", "266"], ["265", "267"], ["24", "31"], ["27", "40"], ["38", "43"], ["41", "47"], ["45", "52"], ["88", "95"], ["93", "99"], ["97", "104"], ["264", "270"], ["26", "24"], ["40", "38"], ["43", "41"], ["47", "45"], ["52", "55"], ["55", "63"], ["55", "90"], ["58", "55"], ["90", "88"], ["95", "93"], ["99", "97"], ["104", "107"], ["107", "114"], ["107", "235"], ["110", "107"], ["235", "238"], ["238", "245"], ["238", "267"], ["241", "238"], ["265", "264"], ["29", "36"], ["32", "27"], ["61", "65"], ["64", "69"], ["113", "120"], ["120", "125"], ["150", "163"], ["254", "241"], ["267", "265"], ["31", "29"], ["34", "32"], ["63", "61"], ["65", "64"], ["69", "72"], ["72", "80"], ["72", "58"], ["75", "72"], ["114", "117"], ["117", "113"], ["125", "128"], ["128", "138"], ["128", "145"], ["131", "128"], ["145", "110"], ["145", "157"], ["152", "150"], ["163", "166"], ["166", "174"], ["166", "110"], ["169", "166"], ["245", "251"], ["245", "257"], ["248", "257"], ["255", "261"], ["259", "254"], ["36", "34"], ["78", "75"], ["154", "152"], ["172", "182"], ["180", "187"], ["249", "253"], ["253", "248"], ["257", "255"], ["261", "259"], ["79", "86"], ["84", "78"], ["135", "142"], ["135", "131"], ["142", "131"], ["155", "154"], ["173", "172"], ["182", "180"], ["186", "194"], ["186", "169"], ["251", "249"], ["80", "79"], ["86", "84"], ["136", "135"], ["157", "155"], ["174", "173"], ["187", "186"], ["226", "169"], ["138", "136"], ["194", "197"], ["197", "206"], ["197", "228"], ["200", "197"], ["227", "226"], ["204", "211"], ["228", "227"], ["206", "204"], ["210", "217"], ["210", "200"], ["215", "200"], ["211", "210"], ["216", "222"], ["221", "215"], ["217", "216"], ["222", "221"], ["21", "26"], ["22", "270"], ["24", "270"], ["29", "270"], ["32", "270"], ["32", "270"], ["32", "270"], ["27", "270"], ["38", "270"], ["43", "270"], ["41", "270"], ["41", "270"], ["45", "270"], ["45", "270"], ["45", "270"], ["52", "270"], ["55", "270"], ["55", "270"], ["88", "270"], ["88", "270"], ["93", "270"], ["93", "270"], ["93", "270"], ["97", "270"], ["97", "270"], ["97", "270"], ["104", "270"], ["107", "270"], ["107", "270"], ["107", "270"], ["235", "270"], ["238", "270"], ["238", "270"], ["238", "270"], ["264", "270"], ["264", "270"], ["245", "270"], ["248", "270"], ["248", "270"], ["259", "270"], ["254", "270"], ["254", "270"], ["241", "270"], ["113", "270"], ["113", "270"], ["113", "270"], ["120", "270"], ["125", "270"], ["128", "270"], ["128", "270"], ["145", "270"], ["145", "270"], ["150", "270"], ["155", "270"], ["155", "270"], ["154", "270"], ["152", "270"], ["150", "270"], ["150", "270"], ["163", "270"], ["166", "270"], ["166", "270"], ["172", "270"], ["172", "270"], ["180", "270"], ["180", "270"], ["187", "270"], ["186", "270"], ["186", "270"], ["194", "270"], ["197", "270"], ["197", "270"], ["226", "270"], ["226", "270"], ["226", "270"], ["169", "270"], ["204", "270"], ["204", "270"], ["211", "270"], ["210", "270"], ["210", "270"], ["215", "270"], ["215", "270"], ["200", "270"], ["110", "270"], ["136", "270"], ["135", "270"], ["135", "270"], ["142", "270"], ["131", "270"], ["61", "270"], ["64", "270"], ["65", "270"], ["64", "270"], ["64", "270"], ["69", "270"], ["72", "270"], ["72", "270"], ["58", "270"], ["78", "270"], ["86", "270"], ["84", "270"], ["78", "270"], ["78", "270"], ["75", "270"], ["84", "270"], ["259", "270"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["90", "88"], ["90", "88"], ["95", "93"], ["99", "97"], ["99", "97"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["43", "41"], ["21", "52"], ["21", "104"], ["21", "235"], ["254", "264"], ["21", "29"], ["21", "37"], ["27", "43"], ["21", "43"], ["41", "47"], ["21", "47"], ["52", "55"], ["58", "55"], ["21", "55"], ["47", "55"], ["72", "55"], ["55", "58"], ["21", "58"], ["21", "61"], ["21", "90"], ["55", "90"], ["88", "95"], ["21", "95"], ["90", "99"], ["21", "99"], ["95", "99"], ["104", "107"], ["110", "107"], ["21", "107"], ["99", "107"], ["107", "110"], ["187", "110"], ["211", "110"], ["136", "110"], ["21", "110"], ["117", "113"], ["21", "120"], ["152", "150"], ["152", "150"], ["235", "238"], ["241", "238"], ["21", "238"], ["99", "238"], ["128", "238"], ["166", "238"], ["261", "241"], ["21", "241"], ["29", "32"], ["21", "32"], ["61", "64"], ["21", "64"], ["65", "64"], ["21", "69"], ["21", "125"], ["21", "163"], ["248", "254"], ["21", "254"], ["259", "254"], ["259", "254"], ["43", "65"], ["21", "65"], ["69", "72"], ["75", "72"], ["21", "72"], ["55", "72"], ["72", "75"], ["21", "75"], ["84", "78"], ["84", "78"], ["21", "117"], ["125", "128"], ["131", "128"], ["21", "128"], ["99", "128"], ["166", "128"], ["138", "131"], ["21", "131"], ["120", "145"], ["142", "145"], ["21", "145"], ["21", "152"], ["154", "152"], ["154", "152"], ["163", "166"], ["169", "166"], ["21", "166"], ["128", "166"], ["197", "166"], ["182", "169"], ["21", "169"], ["21", "172"], ["182", "180"], ["182", "180"], ["238", "245"], ["21", "245"], ["254", "248"], ["21", "248"], ["21", "259"], ["261", "259"], ["261", "259"], ["155", "154"], ["155", "154"], ["21", "154"], ["21", "261"], ["245", "261"], ["21", "84"], ["86", "84"], ["136", "135"], ["136", "135"], ["21", "135"], ["120", "142"], ["21", "142"], ["157", "155"], ["21", "155"], ["157", "155"], ["21", "182"], ["166", "182"], ["187", "186"], ["187", "186"], ["21", "186"], ["150", "226"], ["21", "226"], ["64", "86"], ["21", "86"], ["107", "136"], ["21", "136"], ["138", "136"], ["138", "136"], ["145", "157"], ["21", "157"], ["180", "187"], ["21", "187"], ["107", "187"], ["211", "187"], ["136", "187"], ["21", "194"], ["172", "226"], ["215", "226"], ["21", "138"], ["128", "138"], ["194", "197"], ["200", "197"], ["21", "197"], ["166", "197"], ["206", "200"], ["21", "200"], ["206", "204"], ["206", "204"], ["21", "206"], ["197", "206"], ["211", "210"], ["211", "210"], ["21", "210"], ["172", "215"], ["204", "211"], ["21", "211"], ["187", "211"], ["55", "64"], ["55", "69"], ["55", "58"], ["55", "61"], ["55", "72"], ["55", "65"], ["55", "63"], ["55", "55"], ["107", "107"], ["107", "120"], ["107", "113"], ["107", "145"], ["107", "128"], ["107", "114"], ["107", "110"], ["107", "117"], ["107", "125"], ["238", "257"], ["238", "261"], ["238", "245"], ["238", "255"], ["238", "238"], ["238", "259"], ["238", "254"], ["238", "241"], ["72", "75"], ["72", "84"], ["72", "79"], ["72", "80"], ["72", "86"], ["72", "72"], ["72", "78"], ["128", "136"], ["128", "128"], ["128", "131"], ["128", "138"], ["128", "135"], ["145", "154"], ["145", "163"], ["145", "150"], ["145", "152"], ["145", "155"], ["145", "166"], ["145", "157"], ["166", "169"], ["166", "187"], ["166", "173"], ["166", "174"], ["166", "182"], ["166", "186"], ["166", "180"], ["166", "166"], ["166", "172"], ["245", "249"], ["245", "251"], ["245", "253"], ["245", "248"], ["135", "142"], ["186", "226"], ["186", "197"], ["186", "228"], ["186", "194"], ["186", "227"], ["197", "197"], ["197", "204"], ["197", "206"], ["197", "210"], ["197", "200"], ["197", "211"], ["210", "215"], ["210", "221"], ["210", "217"], ["210", "216"], ["210", "222"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(IDENTIFIER,n,n = new Integer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;init&gt;,new Integer(br.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,arr = new double[n][n])<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.alloc,new double[n][n])>", "49": "<(IDENTIFIER,n,new double[n][n])<SUB>4</SUB>>", "50": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "52": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "54": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "56": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "58": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "60": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "62": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "64": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "65": "<(readLine,readLine())<SUB>7</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "71": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "73": "<(IDENTIFIER,j,j &lt; n)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,arr[i][j])<SUB>9</SUB>>", "81": "<(IDENTIFIER,arr,arr[i][j] = parseDouble(st.nextToken()))<SUB>9</SUB>>", "83": "<(IDENTIFIER,j,arr[i][j] = parseDouble(st.nextToken()))<SUB>9</SUB>>", "85": "<(IDENTIFIER,Double,parseDouble(st.nextToken()))<SUB>9</SUB>>", "87": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "89": "<(IDENTIFIER,exp,exp = 1 &lt;&lt; n)<SUB>12</SUB>>", "91": "<(LITERAL,1,1 &lt;&lt; n)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,dp = new double[exp])<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.alloc,new double[exp])>", "97": "<(&lt;operator&gt;.assignment,dies = new double[n][exp])<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.alloc,new double[n][exp])>", "101": "<(IDENTIFIER,exp,new double[n][exp])<SUB>14</SUB>>", "103": "<(LOCAL,int all: int)<SUB>15</SUB>>", "105": "<(IDENTIFIER,all,int all = 0)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.lessThan,all &lt; exp)<SUB>15</SUB>>", "109": "<(IDENTIFIER,exp,all &lt; exp)<SUB>15</SUB>>", "111": "<(IDENTIFIER,all,all++)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.assignment,dp[all] = -1)<SUB>16</SUB>>", "115": "<(IDENTIFIER,dp,dp[all] = -1)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "119": "<(LOCAL,int countAlive: int)<SUB>17</SUB>>", "121": "<(IDENTIFIER,countAlive,int countAlive = 0)<SUB>17</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "127": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.notEquals,(all &amp; (1 &lt;&lt; i)) != 0)<SUB>19</SUB>>", "137": "<(IDENTIFIER,all,all &amp; (1 &lt;&lt; i))<SUB>19</SUB>>", "139": "<(LITERAL,1,1 &lt;&lt; i)<SUB>19</SUB>>", "141": "<(LITERAL,0,(all &amp; (1 &lt;&lt; i)) != 0)<SUB>19</SUB>>", "143": "<(IDENTIFIER,countAlive,countAlive++)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.lessThan,countAlive &lt; 2)<SUB>22</SUB>>", "147": "<(LITERAL,2,countAlive &lt; 2)<SUB>22</SUB>>", "149": "<(LOCAL,double x: double)<SUB>23</SUB>>", "151": "<(IDENTIFIER,x,double x = 1.0 / (countAlive * (countAlive - 1) / 2.0))<SUB>23</SUB>>", "153": "<(LITERAL,1.0,1.0 / (countAlive * (countAlive - 1) / 2.0))<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.multiplication,countAlive * (countAlive - 1))<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.subtraction,countAlive - 1)<SUB>23</SUB>>", "159": "<(LITERAL,1,countAlive - 1)<SUB>23</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "165": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "167": "<(IDENTIFIER,i,i &lt; n)<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dies[i][all])<SUB>25</SUB>>", "175": "<(IDENTIFIER,dies,dies[i][all] = 0)<SUB>25</SUB>>", "177": "<(IDENTIFIER,all,dies[i][all] = 0)<SUB>25</SUB>>", "179": "<(LOCAL,int mask: int)<SUB>26</SUB>>", "181": "<(IDENTIFIER,mask,int mask = 1 &lt;&lt; i)<SUB>26</SUB>>", "183": "<(LITERAL,1,1 &lt;&lt; i)<SUB>26</SUB>>", "185": "<(CONTROL_STRUCTURE,if ((mask &amp; all) &gt; 0),if ((mask &amp; all) &gt; 0))<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.and,mask &amp; all)<SUB>27</SUB>>", "189": "<(IDENTIFIER,all,mask &amp; all)<SUB>27</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "193": "<(LOCAL,int j: int)<SUB>28</SUB>>", "195": "<(IDENTIFIER,j,int j = 0)<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>28</SUB>>", "199": "<(IDENTIFIER,n,j &lt; n)<SUB>28</SUB>>", "201": "<(IDENTIFIER,j,j++)<SUB>28</SUB>>", "203": "<(LOCAL,int mask2: int)<SUB>30</SUB>>", "205": "<(IDENTIFIER,mask2,int mask2 = 1 &lt;&lt; j)<SUB>30</SUB>>", "207": "<(LITERAL,1,1 &lt;&lt; j)<SUB>30</SUB>>", "209": "<(CONTROL_STRUCTURE,if ((mask2 &amp; all) &gt; 0),if ((mask2 &amp; all) &gt; 0))<SUB>31</SUB>>", "211": "<(&lt;operator&gt;.and,mask2 &amp; all)<SUB>31</SUB>>", "213": "<(IDENTIFIER,all,mask2 &amp; all)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.assignmentPlus,dies[i][all] += arr[j][i])<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dies[i])<SUB>32</SUB>>", "219": "<(IDENTIFIER,i,dies[i][all] += arr[j][i])<SUB>32</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,arr[j][i])<SUB>32</SUB>>", "223": "<(IDENTIFIER,arr,dies[i][all] += arr[j][i])<SUB>32</SUB>>", "225": "<(IDENTIFIER,i,dies[i][all] += arr[j][i])<SUB>32</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,dies[i][all])<SUB>34</SUB>>", "229": "<(IDENTIFIER,dies,dies[i][all] *= x)<SUB>34</SUB>>", "231": "<(IDENTIFIER,all,dies[i][all] *= x)<SUB>34</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int myFish = 0; Some(myFish &lt; n); myFish++),for (int myFish = 0; Some(myFish &lt; n); myFish++))<SUB>38</SUB>>", "235": "<(&lt;operator&gt;.assignment,int myFish = 0)<SUB>38</SUB>>", "237": "<(LITERAL,0,int myFish = 0)<SUB>38</SUB>>", "239": "<(IDENTIFIER,myFish,myFish &lt; n)<SUB>38</SUB>>", "241": "<(&lt;operator&gt;.postIncrement,myFish++)<SUB>38</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.greaterThan,myFish &gt; 0)<SUB>39</SUB>>", "247": "<(LITERAL,0,myFish &gt; 0)<SUB>39</SUB>>", "249": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "251": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "253": "<(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>39</SUB>>", "255": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "257": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "259": "<(ff,ff(1 &lt;&lt; myFish))<SUB>40</SUB>>", "261": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; myFish)<SUB>40</SUB>>", "263": "<(IDENTIFIER,myFish,1 &lt;&lt; myFish)<SUB>40</SUB>>", "265": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>42</SUB>>", "267": "<(FIELD_IDENTIFIER,out,out)<SUB>42</SUB>>", "269": "<(MODIFIER,STATIC)>"}}