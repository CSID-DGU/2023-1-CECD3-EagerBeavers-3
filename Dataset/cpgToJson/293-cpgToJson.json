{"edges": [["21", "23"], ["21", "185"], ["21", "186"], ["21", "187"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "86"], ["23", "87"], ["23", "91"], ["23", "96"], ["23", "123"], ["23", "124"], ["23", "127"], ["23", "128"], ["23", "131"], ["23", "180"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "61"], ["58", "64"], ["58", "67"], ["58", "70"], ["58", "72"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "85"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["96", "99"], ["96", "102"], ["96", "105"], ["96", "108"], ["96", "110"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "138"], ["131", "141"], ["131", "143"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "161"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "160"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "179"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "176"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "49"], ["48", "55"], ["52", "61"], ["87", "92"], ["91", "99"], ["124", "128"], ["128", "135"], ["180", "187"], ["26", "24"], ["41", "39"], ["47", "45"], ["49", "48"], ["54", "52"], ["61", "64"], ["64", "70"], ["64", "89"], ["67", "64"], ["70", "67"], ["89", "87"], ["92", "91"], ["99", "102"], ["102", "108"], ["102", "124"], ["105", "102"], ["108", "105"], ["133", "138"], ["138", "149"], ["138", "183"], ["141", "138"], ["181", "180"], ["29", "36"], ["32", "27"], ["43", "41"], ["55", "54"], ["135", "133"], ["144", "168"], ["161", "141"], ["183", "181"], ["31", "29"], ["34", "32"], ["146", "144"], ["163", "161"], ["36", "34"], ["147", "146"], ["164", "163"], ["148", "156"], ["153", "147"], ["166", "164"], ["149", "148"], ["155", "153"], ["167", "176"], ["176", "166"], ["156", "155"], ["168", "173"], ["169", "167"], ["171", "169"], ["173", "171"], ["21", "26"], ["22", "187"], ["24", "187"], ["29", "187"], ["32", "187"], ["32", "187"], ["32", "187"], ["27", "187"], ["41", "187"], ["39", "187"], ["39", "187"], ["45", "187"], ["48", "187"], ["49", "187"], ["48", "187"], ["48", "187"], ["52", "187"], ["54", "187"], ["52", "187"], ["52", "187"], ["64", "187"], ["64", "187"], ["87", "187"], ["87", "187"], ["87", "187"], ["91", "187"], ["91", "187"], ["99", "187"], ["102", "187"], ["102", "187"], ["124", "187"], ["124", "187"], ["128", "187"], ["135", "187"], ["133", "187"], ["133", "187"], ["138", "187"], ["138", "187"], ["180", "187"], ["180", "187"], ["180", "187"], ["148", "187"], ["147", "187"], ["155", "187"], ["147", "187"], ["146", "187"], ["144", "187"], ["144", "187"], ["169", "187"], ["173", "187"], ["169", "187"], ["167", "187"], ["166", "187"], ["166", "187"], ["164", "187"], ["163", "187"], ["163", "187"], ["161", "187"], ["161", "187"], ["141", "187"], ["108", "187"], ["105", "187"], ["70", "187"], ["67", "187"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["54", "52"], ["89", "87"], ["21", "91"], ["21", "124"], ["21", "128"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["49", "48"], ["21", "61"], ["21", "64"], ["21", "99"], ["21", "102"], ["135", "133"], ["135", "133"], ["128", "180"], ["161", "180"], ["21", "180"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["43", "49"], ["21", "49"], ["21", "54"], ["39", "54"], ["70", "67"], ["21", "67"], ["39", "67"], ["61", "70"], ["67", "70"], ["21", "70"], ["67", "89"], ["21", "89"], ["39", "89"], ["108", "105"], ["21", "105"], ["89", "105"], ["99", "108"], ["105", "108"], ["21", "108"], ["133", "138"], ["141", "138"], ["21", "138"], ["173", "141"], ["21", "141"], ["146", "144"], ["146", "144"], ["163", "161"], ["163", "161"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["21", "55"], ["39", "55"], ["89", "135"], ["105", "135"], ["21", "135"], ["148", "146"], ["148", "146"], ["52", "146"], ["21", "146"], ["128", "163"], ["161", "163"], ["21", "163"], ["166", "163"], ["166", "163"], ["146", "163"], ["148", "147"], ["148", "147"], ["52", "147"], ["128", "164"], ["161", "164"], ["21", "164"], ["166", "164"], ["166", "164"], ["149", "148"], ["149", "148"], ["163", "148"], ["21", "148"], ["21", "166"], ["144", "166"], ["52", "166"], ["87", "166"], ["124", "149"], ["21", "149"], ["144", "149"], ["156", "155"], ["156", "155"], ["138", "155"], ["21", "155"], ["21", "167"], ["144", "167"], ["52", "167"], ["135", "156"], ["173", "156"], ["21", "156"], ["144", "169"], ["21", "169"], ["52", "169"], ["156", "173"], ["21", "173"], ["155", "173"], ["64", "64"], ["64", "67"], ["64", "70"], ["102", "102"], ["102", "105"], ["102", "108"], ["138", "141"], ["138", "167"], ["138", "146"], ["138", "169"], ["138", "161"], ["138", "163"], ["138", "166"], ["138", "149"], ["138", "153"], ["138", "168"], ["138", "144"], ["138", "138"], ["138", "176"], ["138", "148"], ["138", "173"], ["138", "147"], ["138", "164"], ["138", "155"], ["138", "156"], ["138", "171"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "49": "<(readLine,readLine())<SUB>4</SUB>>", "51": "<(LOCAL,int[] aa: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,aa,int[] aa = new int[1 + n])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.addition,1 + n)<SUB>5</SUB>>", "57": "<(IDENTIFIER,n,1 + n)<SUB>5</SUB>>", "59": "<(LOCAL,int i: int)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "65": "<(IDENTIFIER,a,int a = 0)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>6</SUB>>", "69": "<(IDENTIFIER,n,i &lt;= n)<SUB>6</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,aa[i])<SUB>7</SUB>>", "75": "<(IDENTIFIER,i,aa[i] = a = (a + Integer.parseInt(st.nextToken())) % MD)<SUB>7</SUB>>", "77": "<(IDENTIFIER,a,a = (a + Integer.parseInt(st.nextToken())) % MD)<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.addition,a + Integer.parseInt(st.nextToken()))<SUB>7</SUB>>", "81": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "83": "<(nextToken,nextToken())<SUB>7</SUB>>", "85": "<(IDENTIFIER,MD,(a + Integer.parseInt(st.nextToken())) % MD)<SUB>7</SUB>>", "87": "<(&lt;operator&gt;.assignment,int[] pp = new int[n])<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.alloc,new int[n])>", "91": "<(&lt;operator&gt;.assignment,pp[0] = 1)<SUB>9</SUB>>", "93": "<(IDENTIFIER,pp,pp[0] = 1)<SUB>9</SUB>>", "95": "<(LITERAL,1,pp[0] = 1)<SUB>9</SUB>>", "97": "<(LOCAL,int i: int)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "101": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "103": "<(IDENTIFIER,p,int p = 1)<SUB>10</SUB>>", "105": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "107": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "111": "<(&lt;operator&gt;.assignment,pp[i] = p)<SUB>11</SUB>>", "113": "<(IDENTIFIER,pp,pp[i] = p)<SUB>11</SUB>>", "115": "<(IDENTIFIER,p,pp[i] = p)<SUB>11</SUB>>", "117": "<(IDENTIFIER,p,p = p * 2 % MD)<SUB>12</SUB>>", "119": "<(&lt;operator&gt;.multiplication,p * 2)<SUB>12</SUB>>", "121": "<(LITERAL,2,p * 2)<SUB>12</SUB>>", "123": "<(LOCAL,int d: int)<SUB>14</SUB>>", "125": "<(IDENTIFIER,d,int d = 0)<SUB>14</SUB>>", "127": "<(LOCAL,long ans: long)<SUB>15</SUB>>", "129": "<(IDENTIFIER,ans,long ans = 0)<SUB>15</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); i--),for (int i = n - 1; Some(i &gt;= 0); i--))<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>16</SUB>>", "137": "<(LITERAL,1,n - 1)<SUB>16</SUB>>", "139": "<(IDENTIFIER,i,i &gt;= 0)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.postDecrement,i--)<SUB>16</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "145": "<(IDENTIFIER,d,d = (d * 2 % MD + aa[n - 1 - i]) % MD)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.addition,d * 2 % MD + aa[n - 1 - i])<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.multiplication,d * 2)<SUB>17</SUB>>", "151": "<(LITERAL,2,d * 2)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,aa[n - 1 - i])<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.subtraction,n - 1 - i)<SUB>17</SUB>>", "157": "<(IDENTIFIER,n,n - 1)<SUB>17</SUB>>", "159": "<(IDENTIFIER,i,n - 1 - i)<SUB>17</SUB>>", "161": "<(&lt;operator&gt;.assignment,ans = (ans + (long) (d + aa[n - i]) * pp[i]) % MD)<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.modulo,(ans + (long) (d + aa[n - i]) * pp[i]) % MD)<SUB>18</SUB>>", "165": "<(IDENTIFIER,ans,ans + (long) (d + aa[n - i]) * pp[i])<SUB>18</SUB>>", "167": "<(&lt;operator&gt;.cast,(long) (d + aa[n - i]))<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.addition,d + aa[n - i])<SUB>18</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,aa[n - i])<SUB>18</SUB>>", "173": "<(&lt;operator&gt;.subtraction,n - i)<SUB>18</SUB>>", "175": "<(IDENTIFIER,i,n - i)<SUB>18</SUB>>", "177": "<(IDENTIFIER,pp,(long) (d + aa[n - i]) * pp[i])<SUB>18</SUB>>", "179": "<(IDENTIFIER,MD,(ans + (long) (d + aa[n - i]) * pp[i]) % MD)<SUB>18</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "183": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "185": "<(MODIFIER,PUBLIC)>", "187": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}