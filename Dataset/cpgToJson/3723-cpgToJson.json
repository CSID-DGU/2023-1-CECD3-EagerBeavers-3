{"edges": [["17", "18"], ["17", "19"], ["17", "382"], ["17", "383"], ["17", "384"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "32"], ["19", "38"], ["19", "43"], ["19", "104"], ["19", "105"], ["19", "111"], ["19", "380"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "72"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "81"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "87"], ["81", "95"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["96", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "116"], ["112", "113"], ["112", "115"], ["113", "114"], ["116", "117"], ["116", "118"], ["116", "122"], ["116", "123"], ["116", "127"], ["116", "128"], ["116", "134"], ["116", "135"], ["116", "142"], ["116", "143"], ["116", "150"], ["116", "151"], ["116", "154"], ["116", "349"], ["116", "373"], ["118", "119"], ["118", "120"], ["120", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "171"], ["164", "179"], ["164", "339"], ["164", "346"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["177", "178"], ["179", "180"], ["179", "181"], ["179", "184"], ["179", "187"], ["179", "189"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "247"], ["190", "191"], ["190", "202"], ["190", "225"], ["191", "192"], ["191", "197"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "214"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["226", "227"], ["226", "240"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["247", "248"], ["247", "269"], ["248", "249"], ["248", "256"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "264"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["270", "271"], ["270", "312"], ["271", "272"], ["271", "285"], ["272", "273"], ["272", "280"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["285", "286"], ["285", "299"], ["286", "287"], ["286", "294"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["299", "300"], ["299", "307"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "311"], ["308", "309"], ["308", "310"], ["312", "313"], ["312", "326"], ["313", "314"], ["313", "319"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "332"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["332", "333"], ["332", "336"], ["333", "334"], ["333", "335"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "345"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "351"], ["349", "354"], ["349", "359"], ["349", "361"], ["351", "352"], ["351", "353"], ["354", "355"], ["354", "356"], ["356", "357"], ["356", "358"], ["359", "360"], ["361", "362"], ["361", "363"], ["361", "368"], ["363", "364"], ["363", "365"], ["365", "366"], ["365", "367"], ["368", "369"], ["368", "372"], ["369", "370"], ["369", "371"], ["373", "374"], ["373", "375"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["21", "29"], ["26", "35"], ["32", "39"], ["38", "45"], ["105", "113"], ["380", "384"], ["23", "21"], ["28", "26"], ["34", "32"], ["39", "38"], ["45", "48"], ["48", "56"], ["48", "108"], ["51", "48"], ["107", "105"], ["112", "120"], ["112", "380"], ["29", "28"], ["35", "34"], ["108", "107"], ["113", "112"], ["118", "125"], ["123", "131"], ["128", "139"], ["135", "147"], ["143", "151"], ["151", "156"], ["373", "113"], ["55", "63"], ["55", "51"], ["120", "118"], ["125", "123"], ["130", "128"], ["137", "135"], ["145", "143"], ["156", "159"], ["159", "168"], ["159", "351"], ["162", "159"], ["351", "358"], ["354", "365"], ["354", "376"], ["359", "358"], ["375", "373"], ["56", "55"], ["131", "130"], ["139", "137"], ["147", "145"], ["166", "172"], ["171", "181"], ["339", "346"], ["346", "162"], ["356", "354"], ["363", "369"], ["368", "359"], ["376", "375"], ["63", "66"], ["66", "78"], ["66", "51"], ["69", "66"], ["168", "166"], ["172", "177"], ["175", "171"], ["181", "184"], ["184", "193"], ["184", "342"], ["187", "184"], ["340", "339"], ["358", "356"], ["365", "363"], ["369", "368"], ["74", "83"], ["177", "175"], ["342", "340"], ["76", "74"], ["82", "89"], ["82", "98"], ["191", "205"], ["191", "229"], ["248", "274"], ["248", "187"], ["78", "76"], ["83", "82"], ["88", "69"], ["192", "199"], ["197", "191"], ["203", "216"], ["214", "250"], ["249", "248"], ["249", "258"], ["256", "248"], ["89", "92"], ["92", "88"], ["97", "69"], ["193", "192"], ["199", "197"], ["204", "210"], ["209", "203"], ["215", "221"], ["220", "214"], ["227", "242"], ["240", "250"], ["250", "249"], ["250", "253"], ["253", "249"], ["257", "266"], ["264", "256"], ["271", "315"], ["271", "187"], ["98", "101"], ["101", "97"], ["205", "204"], ["210", "209"], ["216", "215"], ["221", "220"], ["228", "235"], ["233", "227"], ["241", "240"], ["258", "261"], ["261", "257"], ["266", "264"], ["272", "271"], ["272", "288"], ["285", "271"], ["313", "328"], ["326", "187"], ["229", "228"], ["234", "233"], ["242", "241"], ["273", "281"], ["280", "272"], ["286", "285"], ["286", "301"], ["299", "285"], ["314", "320"], ["319", "313"], ["327", "333"], ["332", "326"], ["235", "234"], ["274", "277"], ["277", "273"], ["281", "280"], ["287", "295"], ["294", "286"], ["300", "308"], ["307", "299"], ["315", "314"], ["320", "323"], ["323", "319"], ["328", "327"], ["333", "336"], ["336", "332"], ["288", "291"], ["291", "287"], ["295", "294"], ["301", "304"], ["304", "300"], ["308", "307"], ["17", "23"], ["18", "384"], ["23", "384"], ["21", "384"], ["21", "384"], ["26", "384"], ["26", "384"], ["32", "384"], ["32", "384"], ["38", "384"], ["38", "384"], ["45", "384"], ["48", "384"], ["48", "384"], ["105", "384"], ["108", "384"], ["107", "384"], ["105", "384"], ["105", "384"], ["113", "384"], ["112", "384"], ["112", "384"], ["380", "384"], ["380", "384"], ["118", "384"], ["125", "384"], ["123", "384"], ["123", "384"], ["128", "384"], ["130", "384"], ["128", "384"], ["128", "384"], ["135", "384"], ["135", "384"], ["143", "384"], ["147", "384"], ["145", "384"], ["143", "384"], ["143", "384"], ["151", "384"], ["151", "384"], ["156", "384"], ["159", "384"], ["159", "384"], ["159", "384"], ["351", "384"], ["354", "384"], ["354", "384"], ["354", "384"], ["373", "384"], ["373", "384"], ["363", "384"], ["363", "384"], ["368", "384"], ["368", "384"], ["359", "384"], ["166", "384"], ["166", "384"], ["171", "384"], ["177", "384"], ["171", "384"], ["171", "384"], ["181", "384"], ["184", "384"], ["184", "384"], ["184", "384"], ["339", "384"], ["339", "384"], ["346", "384"], ["346", "384"], ["346", "384"], ["162", "384"], ["191", "384"], ["191", "384"], ["227", "384"], ["233", "384"], ["227", "384"], ["227", "384"], ["240", "384"], ["240", "384"], ["203", "384"], ["203", "384"], ["203", "384"], ["214", "384"], ["214", "384"], ["214", "384"], ["249", "384"], ["249", "384"], ["248", "384"], ["256", "384"], ["248", "384"], ["248", "384"], ["272", "384"], ["272", "384"], ["271", "384"], ["286", "384"], ["286", "384"], ["285", "384"], ["299", "384"], ["299", "384"], ["285", "384"], ["271", "384"], ["271", "384"], ["313", "384"], ["313", "384"], ["313", "384"], ["326", "384"], ["326", "384"], ["326", "384"], ["187", "384"], ["55", "384"], ["55", "384"], ["63", "384"], ["66", "384"], ["66", "384"], ["51", "384"], ["74", "384"], ["74", "384"], ["82", "384"], ["82", "384"], ["97", "384"], ["101", "384"], ["97", "384"], ["97", "384"], ["88", "384"], ["92", "384"], ["88", "384"], ["88", "384"], ["69", "384"], ["17", "18"], ["23", "21"], ["17", "26"], ["34", "32"], ["17", "38"], ["107", "105"], ["17", "45"], ["373", "380"], ["17", "380"], ["17", "23"], ["17", "28"], ["26", "34"], ["17", "34"], ["45", "48"], ["51", "48"], ["17", "48"], ["66", "48"], ["26", "48"], ["48", "51"], ["17", "51"], ["101", "51"], ["92", "51"], ["48", "107"], ["17", "107"], ["113", "112"], ["17", "112"], ["120", "118"], ["125", "123"], ["130", "128"], ["137", "135"], ["137", "135"], ["145", "143"], ["145", "143"], ["17", "151"], ["26", "35"], ["17", "35"], ["48", "108"], ["17", "108"], ["21", "113"], ["17", "113"], ["17", "156"], ["17", "351"], ["17", "373"], ["32", "55"], ["17", "55"], ["23", "120"], ["125", "120"], ["177", "120"], ["17", "120"], ["120", "125"], ["17", "125"], ["118", "130"], ["17", "130"], ["17", "137"], ["123", "137"], ["17", "145"], ["123", "145"], ["156", "159"], ["162", "159"], ["17", "159"], ["118", "159"], ["17", "162"], ["159", "162"], ["250", "162"], ["168", "166"], ["168", "166"], ["32", "171"], ["159", "339"], ["250", "339"], ["17", "339"], ["166", "346"], ["17", "346"], ["351", "354"], ["359", "354"], ["17", "354"], ["128", "354"], ["354", "359"], ["17", "359"], ["128", "363"], ["17", "368"], ["48", "63"], ["17", "63"], ["101", "69"], ["92", "69"], ["17", "69"], ["118", "131"], ["17", "131"], ["123", "139"], ["17", "139"], ["17", "147"], ["123", "147"], ["17", "181"], ["63", "66"], ["69", "66"], ["17", "66"], ["48", "66"], ["78", "69"], ["32", "74"], ["17", "168"], ["151", "168"], ["346", "168"], ["181", "184"], ["187", "184"], ["17", "184"], ["123", "184"], ["184", "187"], ["253", "187"], ["261", "187"], ["277", "187"], ["291", "187"], ["304", "187"], ["336", "187"], ["17", "187"], ["125", "177"], ["17", "177"], ["83", "82"], ["83", "82"], ["17", "82"], ["92", "88"], ["92", "88"], ["105", "191"], ["339", "191"], ["256", "191"], ["191", "214"], ["249", "248"], ["249", "248"], ["256", "248"], ["256", "248"], ["66", "78"], ["17", "78"], ["48", "78"], ["101", "78"], ["92", "78"], ["74", "83"], ["17", "83"], ["78", "83"], ["101", "97"], ["101", "97"], ["17", "227"], ["159", "240"], ["250", "240"], ["17", "240"], ["250", "249"], ["250", "249"], ["253", "249"], ["253", "249"], ["299", "256"], ["105", "256"], ["191", "256"], ["83", "92"], ["17", "92"], ["83", "92"], ["159", "250"], ["17", "250"], ["184", "253"], ["17", "253"], ["272", "271"], ["272", "271"], ["285", "271"], ["285", "271"], ["272", "313"], ["286", "313"], ["256", "326"], ["299", "326"], ["83", "101"], ["17", "101"], ["83", "101"], ["17", "233"], ["184", "261"], ["253", "261"], ["17", "261"], ["286", "272"], ["227", "272"], ["203", "272"], ["286", "285"], ["286", "285"], ["299", "285"], ["299", "285"], ["272", "286"], ["272", "286"], ["256", "299"], ["240", "299"], ["214", "299"], ["184", "277"], ["253", "277"], ["261", "277"], ["17", "277"], ["277", "323"], ["291", "323"], ["304", "323"], ["17", "323"], ["323", "336"], ["17", "336"], ["277", "291"], ["17", "291"], ["291", "304"], ["17", "304"], ["48", "48"], ["48", "55"], ["48", "51"], ["48", "56"], ["112", "120"], ["112", "128"], ["112", "376"], ["112", "358"], ["112", "356"], ["112", "112"], ["112", "118"], ["112", "123"], ["112", "159"], ["112", "147"], ["112", "135"], ["112", "351"], ["112", "113"], ["112", "145"], ["112", "131"], ["112", "151"], ["112", "373"], ["112", "375"], ["112", "137"], ["112", "130"], ["112", "139"], ["112", "354"], ["112", "143"], ["112", "156"], ["112", "125"], ["55", "66"], ["55", "63"], ["159", "162"], ["159", "168"], ["159", "181"], ["159", "184"], ["159", "340"], ["159", "346"], ["159", "159"], ["159", "177"], ["159", "342"], ["159", "172"], ["159", "339"], ["159", "171"], ["159", "166"], ["159", "175"], ["354", "358"], ["354", "356"], ["354", "368"], ["354", "365"], ["354", "359"], ["354", "354"], ["354", "369"], ["354", "363"], ["66", "74"], ["66", "76"], ["66", "66"], ["66", "69"], ["66", "82"], ["66", "83"], ["66", "78"], ["184", "192"], ["184", "184"], ["184", "249"], ["184", "199"], ["184", "197"], ["184", "191"], ["184", "187"], ["184", "193"], ["184", "248"], ["184", "250"], ["82", "88"], ["82", "98"], ["82", "92"], ["82", "97"], ["82", "101"], ["82", "89"], ["191", "214"], ["191", "215"], ["191", "209"], ["191", "240"], ["191", "228"], ["191", "204"], ["191", "242"], ["191", "229"], ["191", "241"], ["191", "216"], ["191", "227"], ["191", "221"], ["191", "233"], ["191", "205"], ["191", "235"], ["191", "210"], ["191", "220"], ["191", "234"], ["191", "203"], ["248", "272"], ["248", "281"], ["248", "274"], ["248", "273"], ["248", "280"], ["248", "277"], ["248", "271"], ["249", "256"], ["249", "264"], ["249", "258"], ["249", "257"], ["249", "261"], ["249", "266"], ["250", "253"], ["271", "326"], ["271", "336"], ["271", "315"], ["271", "328"], ["271", "323"], ["271", "319"], ["271", "320"], ["271", "332"], ["271", "314"], ["271", "333"], ["271", "327"], ["271", "313"], ["272", "288"], ["272", "291"], ["272", "285"], ["272", "286"], ["272", "295"], ["272", "287"], ["272", "294"], ["286", "308"], ["286", "300"], ["286", "304"], ["286", "307"], ["286", "301"], ["286", "299"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>3</SUB>>", "23": "<(nextInt,nextInt())<SUB>3</SUB>>", "25": "<(LOCAL,int MAX: int)<SUB>4</SUB>>", "27": "<(IDENTIFIER,MAX,int MAX = (int) 1e7)<SUB>4</SUB>>", "29": "<(TYPE_REF,int,int)<SUB>4</SUB>>", "31": "<(LOCAL,int[] canonical: int[])<SUB>5</SUB>>", "33": "<(IDENTIFIER,canonical,int[] canonical = new int[MAX + 1])<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.addition,MAX + 1)<SUB>5</SUB>>", "37": "<(LITERAL,1,MAX + 1)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.indexAccess,canonical[1])<SUB>6</SUB>>", "41": "<(LITERAL,1,canonical[1] = 1)<SUB>6</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int factor = 2; Some(factor &lt;= MAX); factor++),for (int factor = 2; Some(factor &lt;= MAX); factor++))<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int factor = 2)<SUB>7</SUB>>", "47": "<(LITERAL,2,int factor = 2)<SUB>7</SUB>>", "49": "<(IDENTIFIER,factor,factor &lt;= MAX)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,factor++)<SUB>7</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.equals,canonical[factor] == 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,canonical,canonical[factor] == 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,canonical[factor] == 0)<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int mult = factor; Some(mult &lt;= MAX); mult += factor),for (int mult = factor; Some(mult &lt;= MAX); mult += factor))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int mult = factor)<SUB>9</SUB>>", "65": "<(IDENTIFIER,factor,int mult = factor)<SUB>9</SUB>>", "67": "<(IDENTIFIER,mult,mult &lt;= MAX)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignmentPlus,mult += factor)<SUB>9</SUB>>", "71": "<(IDENTIFIER,factor,mult += factor)<SUB>9</SUB>>", "73": "<(LOCAL,int prev: int)<SUB>10</SUB>>", "75": "<(IDENTIFIER,prev,int prev = canonical[mult / factor])<SUB>10</SUB>>", "77": "<(IDENTIFIER,canonical,int prev = canonical[mult / factor])<SUB>10</SUB>>", "79": "<(IDENTIFIER,mult,mult / factor)<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,if (prev % factor == 0),if (prev % factor == 0))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.modulo,prev % factor)<SUB>11</SUB>>", "85": "<(IDENTIFIER,factor,prev % factor)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,canonical[mult])<SUB>12</SUB>>", "91": "<(IDENTIFIER,mult,canonical[mult] = prev / factor)<SUB>12</SUB>>", "93": "<(IDENTIFIER,prev,prev / factor)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,canonical[mult] = prev * factor)<SUB>14</SUB>>", "99": "<(IDENTIFIER,canonical,canonical[mult] = prev * factor)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.multiplication,prev * factor)<SUB>14</SUB>>", "103": "<(IDENTIFIER,factor,prev * factor)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,int[] last = new int[MAX + 1])<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.alloc,new int[MAX + 1])>", "109": "<(IDENTIFIER,MAX,MAX + 1)<SUB>19</SUB>>", "111": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.postDecrement,T--)<SUB>20</SUB>>", "115": "<(LITERAL,0,T-- &gt; 0)<SUB>20</SUB>>", "117": "<(LOCAL,int N: int)<SUB>21</SUB>>", "119": "<(IDENTIFIER,N,int N = nextInt())<SUB>21</SUB>>", "121": "<(IDENTIFIER,sc,nextInt())<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.assignment,int K = nextInt())<SUB>22</SUB>>", "125": "<(nextInt,nextInt())<SUB>22</SUB>>", "127": "<(LOCAL,int[] a: int[])<SUB>23</SUB>>", "129": "<(IDENTIFIER,a,int[] a = new int[N + 1])<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.addition,N + 1)<SUB>23</SUB>>", "133": "<(LITERAL,1,N + 1)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.assignment,int[][] dp = new int[2][K + 1])<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.alloc,new int[2][K + 1])>", "139": "<(&lt;operator&gt;.addition,K + 1)<SUB>24</SUB>>", "141": "<(LITERAL,1,K + 1)<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.assignment,int[][] start = new int[2][K + 1])<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.alloc,new int[2][K + 1])>", "147": "<(&lt;operator&gt;.addition,K + 1)<SUB>25</SUB>>", "149": "<(LITERAL,1,K + 1)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.assignment,int ptr = 0)<SUB>26</SUB>>", "153": "<(LITERAL,0,int ptr = 0)<SUB>26</SUB>>", "155": "<(LOCAL,int i: int)<SUB>27</SUB>>", "157": "<(IDENTIFIER,i,int i = 1)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>27</SUB>>", "161": "<(IDENTIFIER,N,i &lt;= N)<SUB>27</SUB>>", "163": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "165": "<(LOCAL,int nxt: int)<SUB>28</SUB>>", "167": "<(IDENTIFIER,nxt,int nxt = 1 ^ ptr)<SUB>28</SUB>>", "169": "<(LITERAL,1,1 ^ ptr)<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.assignment,a[i] = canonical[sc.nextInt()])<SUB>29</SUB>>", "173": "<(IDENTIFIER,a,a[i] = canonical[sc.nextInt()])<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,canonical[sc.nextInt()])<SUB>29</SUB>>", "177": "<(nextInt,nextInt())<SUB>29</SUB>>", "179": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt;= K); k++),for (int k = 0; Some(k &lt;= K); k++))<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>30</SUB>>", "183": "<(LITERAL,0,int k = 0)<SUB>30</SUB>>", "185": "<(IDENTIFIER,k,k &lt;= K)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,k++)<SUB>30</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "191": "<(&lt;operator&gt;.greaterThan,start[ptr][k] &gt; last[a[i]])<SUB>31</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,start[ptr])<SUB>31</SUB>>", "195": "<(IDENTIFIER,ptr,start[ptr][k] &gt; last[a[i]])<SUB>31</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,last[a[i]])<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>31</SUB>>", "201": "<(IDENTIFIER,i,start[ptr][k] &gt; last[a[i]])<SUB>31</SUB>>", "203": "<(&lt;operator&gt;.assignment,dp[nxt][k] = dp[ptr][k])<SUB>33</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>33</SUB>>", "207": "<(IDENTIFIER,nxt,dp[nxt][k] = dp[ptr][k])<SUB>33</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,dp[ptr][k])<SUB>33</SUB>>", "211": "<(IDENTIFIER,dp,dp[nxt][k] = dp[ptr][k])<SUB>33</SUB>>", "213": "<(IDENTIFIER,k,dp[nxt][k] = dp[ptr][k])<SUB>33</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,start[nxt][k])<SUB>34</SUB>>", "217": "<(IDENTIFIER,start,start[nxt][k] = start[ptr][k])<SUB>34</SUB>>", "219": "<(IDENTIFIER,k,start[nxt][k] = start[ptr][k])<SUB>34</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,start[ptr])<SUB>34</SUB>>", "223": "<(IDENTIFIER,ptr,start[nxt][k] = start[ptr][k])<SUB>34</SUB>>", "225": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.assignment,dp[nxt][k] = dp[ptr][k] + 1)<SUB>37</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>37</SUB>>", "231": "<(IDENTIFIER,nxt,dp[nxt][k] = dp[ptr][k] + 1)<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.addition,dp[ptr][k] + 1)<SUB>37</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[ptr])<SUB>37</SUB>>", "237": "<(IDENTIFIER,ptr,dp[ptr][k] + 1)<SUB>37</SUB>>", "239": "<(LITERAL,1,dp[ptr][k] + 1)<SUB>37</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,start[nxt][k])<SUB>38</SUB>>", "243": "<(IDENTIFIER,start,start[nxt][k] = i)<SUB>38</SUB>>", "245": "<(IDENTIFIER,k,start[nxt][k] = i)<SUB>38</SUB>>", "247": "<(CONTROL_STRUCTURE,if (i &gt; 1 &amp;&amp; k &gt; 0 &amp;&amp; start[ptr][k - 1] &lt;= last[a[i]]),if (i &gt; 1 &amp;&amp; k &gt; 0 &amp;&amp; start[ptr][k - 1] &lt;= last[a[i]]))<SUB>41</SUB>>", "249": "<(&lt;operator&gt;.logicalAnd,i &gt; 1 &amp;&amp; k &gt; 0)<SUB>41</SUB>>", "251": "<(IDENTIFIER,i,i &gt; 1)<SUB>41</SUB>>", "253": "<(&lt;operator&gt;.greaterThan,k &gt; 0)<SUB>41</SUB>>", "255": "<(LITERAL,0,k &gt; 0)<SUB>41</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,start[ptr][k - 1])<SUB>41</SUB>>", "259": "<(IDENTIFIER,start,start[ptr][k - 1] &lt;= last[a[i]])<SUB>41</SUB>>", "261": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>41</SUB>>", "263": "<(LITERAL,1,k - 1)<SUB>41</SUB>>", "265": "<(IDENTIFIER,last,start[ptr][k - 1] &lt;= last[a[i]])<SUB>41</SUB>>", "267": "<(IDENTIFIER,a,start[ptr][k - 1] &lt;= last[a[i]])<SUB>41</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "271": "<(&lt;operator&gt;.logicalOr,dp[ptr][k - 1] &lt; dp[nxt][k] || (dp[ptr][k - 1] == dp[nxt][k] &amp;&amp; start[ptr][k - 1] &gt; start[nxt][k]))<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,dp[ptr][k - 1])<SUB>43</SUB>>", "275": "<(IDENTIFIER,dp,dp[ptr][k - 1] &lt; dp[nxt][k])<SUB>43</SUB>>", "277": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>43</SUB>>", "279": "<(LITERAL,1,k - 1)<SUB>43</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>43</SUB>>", "283": "<(IDENTIFIER,nxt,dp[ptr][k - 1] &lt; dp[nxt][k])<SUB>43</SUB>>", "285": "<(&lt;operator&gt;.logicalAnd,dp[ptr][k - 1] == dp[nxt][k] &amp;&amp; start[ptr][k - 1] &gt; start[nxt][k])<SUB>43</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,dp[ptr][k - 1])<SUB>43</SUB>>", "289": "<(IDENTIFIER,dp,dp[ptr][k - 1] == dp[nxt][k])<SUB>43</SUB>>", "291": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>43</SUB>>", "293": "<(LITERAL,1,k - 1)<SUB>43</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>43</SUB>>", "297": "<(IDENTIFIER,nxt,dp[ptr][k - 1] == dp[nxt][k])<SUB>43</SUB>>", "299": "<(&lt;operator&gt;.greaterThan,start[ptr][k - 1] &gt; start[nxt][k])<SUB>43</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,start[ptr])<SUB>43</SUB>>", "303": "<(IDENTIFIER,ptr,start[ptr][k - 1] &gt; start[nxt][k])<SUB>43</SUB>>", "305": "<(IDENTIFIER,k,k - 1)<SUB>43</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,start[nxt][k])<SUB>43</SUB>>", "309": "<(IDENTIFIER,start,start[ptr][k - 1] &gt; start[nxt][k])<SUB>43</SUB>>", "311": "<(IDENTIFIER,k,start[ptr][k - 1] &gt; start[nxt][k])<SUB>43</SUB>>", "313": "<(&lt;operator&gt;.assignment,dp[nxt][k] = dp[ptr][k - 1])<SUB>44</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>44</SUB>>", "317": "<(IDENTIFIER,nxt,dp[nxt][k] = dp[ptr][k - 1])<SUB>44</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[ptr][k - 1])<SUB>44</SUB>>", "321": "<(IDENTIFIER,dp,dp[nxt][k] = dp[ptr][k - 1])<SUB>44</SUB>>", "323": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>44</SUB>>", "325": "<(LITERAL,1,k - 1)<SUB>44</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,start[nxt][k])<SUB>45</SUB>>", "329": "<(IDENTIFIER,start,start[nxt][k] = start[ptr][k - 1])<SUB>45</SUB>>", "331": "<(IDENTIFIER,k,start[nxt][k] = start[ptr][k - 1])<SUB>45</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,start[ptr])<SUB>45</SUB>>", "335": "<(IDENTIFIER,ptr,start[nxt][k] = start[ptr][k - 1])<SUB>45</SUB>>", "337": "<(IDENTIFIER,k,k - 1)<SUB>45</SUB>>", "339": "<(&lt;operator&gt;.assignment,last[a[i]] = i)<SUB>51</SUB>>", "341": "<(IDENTIFIER,last,last[a[i]] = i)<SUB>51</SUB>>", "343": "<(IDENTIFIER,a,last[a[i]] = i)<SUB>51</SUB>>", "345": "<(IDENTIFIER,i,last[a[i]] = i)<SUB>51</SUB>>", "347": "<(IDENTIFIER,ptr,ptr = nxt)<SUB>52</SUB>>", "349": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "351": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>54</SUB>>", "353": "<(LITERAL,0,int $idx0 = 0)<SUB>54</SUB>>", "355": "<(IDENTIFIER,$idx0,$idx0 &lt; a.length)>", "357": "<(IDENTIFIER,a,$idx0 &lt; a.length)>", "359": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>54</SUB>>", "361": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "363": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>54</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>54</SUB>>", "367": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "369": "<(&lt;operator&gt;.indexAccess,last[v])<SUB>55</SUB>>", "371": "<(IDENTIFIER,v,last[v] = 0)<SUB>55</SUB>>", "373": "<(println,println(dp[ptr][K]))<SUB>58</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,dp[ptr][K])<SUB>58</SUB>>", "377": "<(IDENTIFIER,dp,println(dp[ptr][K]))<SUB>58</SUB>>", "379": "<(IDENTIFIER,K,println(dp[ptr][K]))<SUB>58</SUB>>", "381": "<(IDENTIFIER,out,close())<SUB>60</SUB>>", "383": "<(MODIFIER,STATIC)>"}}