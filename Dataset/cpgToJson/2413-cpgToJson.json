{"edges": [["19", "20"], ["19", "21"], ["19", "218"], ["19", "219"], ["19", "220"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "56"], ["21", "62"], ["21", "82"], ["21", "83"], ["21", "86"], ["21", "123"], ["21", "128"], ["21", "134"], ["21", "135"], ["21", "142"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "61"], ["59", "60"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "96"], ["86", "98"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "101"], ["99", "106"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "120"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["121", "122"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "133"], ["131", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "150"], ["142", "152"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "153"], ["152", "159"], ["152", "160"], ["152", "167"], ["152", "168"], ["152", "175"], ["152", "201"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "158"], ["156", "157"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "195"], ["176", "177"], ["176", "186"], ["177", "178"], ["177", "185"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["186", "187"], ["186", "194"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["195", "196"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "205"], ["201", "211"], ["202", "203"], ["202", "204"], ["205", "206"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["212", "213"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "54"], ["52", "59"], ["56", "64"], ["83", "88"], ["123", "131"], ["128", "139"], ["135", "144"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["58", "56"], ["64", "67"], ["67", "74"], ["67", "83"], ["70", "67"], ["88", "93"], ["91", "103"], ["91", "125"], ["96", "93"], ["125", "123"], ["130", "128"], ["137", "135"], ["144", "147"], ["147", "220"], ["147", "156"], ["150", "147"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["59", "58"], ["73", "70"], ["93", "91"], ["131", "130"], ["139", "137"], ["153", "164"], ["160", "172"], ["168", "180"], ["29", "27"], ["32", "30"], ["74", "79"], ["77", "73"], ["101", "106"], ["106", "114"], ["106", "96"], ["109", "106"], ["155", "153"], ["162", "160"], ["170", "168"], ["176", "198"], ["176", "202"], ["202", "209"], ["202", "216"], ["34", "32"], ["79", "77"], ["103", "101"], ["156", "155"], ["164", "162"], ["172", "170"], ["177", "176"], ["177", "189"], ["186", "176"], ["196", "202"], ["206", "150"], ["113", "121"], ["113", "109"], ["178", "177"], ["187", "186"], ["198", "196"], ["207", "206"], ["213", "150"], ["114", "117"], ["117", "113"], ["121", "109"], ["179", "178"], ["188", "187"], ["209", "207"], ["214", "213"], ["180", "179"], ["189", "188"], ["216", "214"], ["19", "24"], ["20", "220"], ["22", "220"], ["27", "220"], ["30", "220"], ["30", "220"], ["30", "220"], ["25", "220"], ["37", "220"], ["44", "220"], ["52", "220"], ["52", "220"], ["52", "220"], ["67", "220"], ["83", "220"], ["93", "220"], ["91", "220"], ["91", "220"], ["123", "220"], ["123", "220"], ["123", "220"], ["128", "220"], ["131", "220"], ["130", "220"], ["128", "220"], ["128", "220"], ["137", "220"], ["137", "220"], ["135", "220"], ["135", "220"], ["144", "220"], ["147", "220"], ["147", "220"], ["147", "220"], ["150", "220"], ["96", "220"], ["70", "220"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["58", "56"], ["58", "56"], ["19", "83"], ["125", "123"], ["125", "123"], ["130", "128"], ["130", "128"], ["137", "135"], ["137", "135"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "64"], ["19", "88"], ["19", "144"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["44", "54"], ["19", "54"], ["59", "58"], ["19", "58"], ["64", "67"], ["70", "67"], ["19", "67"], ["54", "67"], ["67", "70"], ["19", "70"], ["77", "73"], ["77", "73"], ["88", "91"], ["96", "91"], ["19", "91"], ["93", "91"], ["93", "91"], ["19", "96"], ["91", "96"], ["83", "125"], ["121", "125"], ["19", "125"], ["131", "130"], ["19", "130"], ["46", "137"], ["77", "137"], ["19", "137"], ["46", "137"], ["128", "137"], ["144", "147"], ["150", "147"], ["19", "147"], ["135", "147"], ["147", "150"], ["19", "150"], ["155", "153"], ["155", "153"], ["162", "160"], ["162", "160"], ["170", "168"], ["170", "168"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["40", "59"], ["19", "59"], ["67", "93"], ["106", "93"], ["19", "93"], ["91", "101"], ["19", "101"], ["59", "131"], ["19", "131"], ["46", "77"], ["19", "77"], ["56", "77"], ["101", "106"], ["109", "106"], ["19", "106"], ["93", "106"], ["106", "109"], ["19", "109"], ["156", "155"], ["19", "155"], ["137", "162"], ["170", "162"], ["19", "162"], ["137", "162"], ["153", "162"], ["162", "170"], ["19", "170"], ["153", "170"], ["177", "176"], ["177", "176"], ["186", "176"], ["186", "176"], ["198", "196"], ["198", "196"], ["123", "202"], ["196", "202"], ["19", "202"], ["91", "103"], ["19", "103"], ["131", "156"], ["19", "156"], ["178", "177"], ["178", "177"], ["19", "177"], ["187", "186"], ["187", "186"], ["19", "186"], ["213", "206"], ["19", "206"], ["52", "113"], ["73", "113"], ["180", "178"], ["180", "178"], ["19", "178"], ["189", "187"], ["189", "187"], ["19", "187"], ["19", "198"], ["123", "198"], ["202", "198"], ["206", "213"], ["19", "213"], ["83", "121"], ["19", "121"], ["180", "179"], ["180", "179"], ["19", "179"], ["189", "188"], ["189", "188"], ["19", "188"], ["168", "180"], ["19", "180"], ["160", "180"], ["180", "189"], ["19", "189"], ["180", "189"], ["67", "73"], ["67", "77"], ["67", "67"], ["67", "74"], ["67", "79"], ["67", "70"], ["91", "96"], ["91", "103"], ["91", "91"], ["91", "93"], ["91", "101"], ["91", "106"], ["147", "179"], ["147", "178"], ["147", "150"], ["147", "162"], ["147", "153"], ["147", "168"], ["147", "170"], ["147", "164"], ["147", "155"], ["147", "202"], ["147", "180"], ["147", "160"], ["147", "176"], ["147", "177"], ["147", "147"], ["147", "156"], ["147", "172"], ["106", "113"], ["106", "114"], ["106", "106"], ["106", "117"], ["106", "109"], ["176", "196"], ["176", "198"], ["202", "214"], ["202", "209"], ["202", "213"], ["202", "206"], ["202", "207"], ["202", "216"], ["177", "188"], ["177", "189"], ["177", "187"], ["177", "186"], ["113", "121"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] sp = split(&quot; &quot;))<SUB>3</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int n: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,int n = Integer.parseInt(sp[0]))<SUB>4</SUB>>", "47": "<(IDENTIFIER,Integer,Integer.parseInt(sp[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,sp,Integer.parseInt(sp[0]))<SUB>4</SUB>>", "51": "<(LOCAL,int[] a: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "57": "<(IDENTIFIER,sp,sp = split(&quot; &quot;))<SUB>6</SUB>>", "59": "<(readLine,readLine())<SUB>6</SUB>>", "61": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "63": "<(LOCAL,int i: int)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.assignment,a[i] = Integer.parseInt(sp[i]))<SUB>8</SUB>>", "75": "<(IDENTIFIER,a,a[i] = Integer.parseInt(sp[i]))<SUB>8</SUB>>", "77": "<(parseInt,Integer.parseInt(sp[i]))<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,sp[i])<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,Integer.parseInt(sp[i]))<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.assignment,int inversions = 0)<SUB>10</SUB>>", "85": "<(LITERAL,0,int inversions = 0)<SUB>10</SUB>>", "87": "<(LOCAL,int i: int)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "95": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.addition,i + 1)<SUB>12</SUB>>", "105": "<(LITERAL,1,i + 1)<SUB>12</SUB>>", "107": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.greaterThan,a[i] &gt; a[j])<SUB>13</SUB>>", "115": "<(IDENTIFIER,a,a[i] &gt; a[j])<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>13</SUB>>", "119": "<(IDENTIFIER,j,a[i] &gt; a[j])<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,inversions++)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.assignment,inversions = inversions % 2)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.modulo,inversions % 2)<SUB>18</SUB>>", "127": "<(LITERAL,2,inversions % 2)<SUB>18</SUB>>", "129": "<(IDENTIFIER,sp,sp = split(&quot; &quot;))<SUB>20</SUB>>", "131": "<(readLine,readLine())<SUB>20</SUB>>", "133": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.assignment,int m = Integer.parseInt(sp[0]))<SUB>21</SUB>>", "137": "<(parseInt,Integer.parseInt(sp[0]))<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,sp[0])<SUB>21</SUB>>", "141": "<(LITERAL,0,Integer.parseInt(sp[0]))<SUB>21</SUB>>", "143": "<(LOCAL,int i: int)<SUB>22</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>22</SUB>>", "149": "<(IDENTIFIER,m,i &lt; m)<SUB>22</SUB>>", "151": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,sp = split(&quot; &quot;))<SUB>23</SUB>>", "155": "<(split,split(&quot; &quot;))<SUB>23</SUB>>", "157": "<(IDENTIFIER,br,readLine())<SUB>23</SUB>>", "159": "<(LOCAL,int l: int)<SUB>24</SUB>>", "161": "<(IDENTIFIER,l,int l = Integer.parseInt(sp[0]))<SUB>24</SUB>>", "163": "<(IDENTIFIER,Integer,Integer.parseInt(sp[0]))<SUB>24</SUB>>", "165": "<(IDENTIFIER,sp,Integer.parseInt(sp[0]))<SUB>24</SUB>>", "167": "<(LOCAL,int r: int)<SUB>25</SUB>>", "169": "<(IDENTIFIER,r,int r = Integer.parseInt(sp[1]))<SUB>25</SUB>>", "171": "<(IDENTIFIER,Integer,Integer.parseInt(sp[1]))<SUB>25</SUB>>", "173": "<(IDENTIFIER,sp,Integer.parseInt(sp[1]))<SUB>25</SUB>>", "175": "<(CONTROL_STRUCTURE,if ((r - l + 1) % 4 == 2 || (r - l + 1) % 4 == 3),if ((r - l + 1) % 4 == 2 || (r - l + 1) % 4 == 3))<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.equals,(r - l + 1) % 4 == 2)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>26</SUB>>", "181": "<(IDENTIFIER,r,r - l)<SUB>26</SUB>>", "183": "<(LITERAL,1,r - l + 1)<SUB>26</SUB>>", "185": "<(LITERAL,2,(r - l + 1) % 4 == 2)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.modulo,(r - l + 1) % 4)<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.subtraction,r - l)<SUB>26</SUB>>", "191": "<(IDENTIFIER,l,r - l)<SUB>26</SUB>>", "193": "<(LITERAL,4,(r - l + 1) % 4)<SUB>26</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "197": "<(IDENTIFIER,inversions,inversions = 1 - inversions)<SUB>27</SUB>>", "199": "<(LITERAL,1,1 - inversions)<SUB>27</SUB>>", "201": "<(CONTROL_STRUCTURE,if (inversions == 1),if (inversions == 1))<SUB>29</SUB>>", "203": "<(IDENTIFIER,inversions,inversions == 1)<SUB>29</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "209": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "211": "<(CONTROL_STRUCTURE,else,else)<SUB>32</SUB>>", "213": "<(println,System.out.println(&quot;even&quot;))<SUB>33</SUB>>", "215": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>33</SUB>>", "217": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>33</SUB>>", "219": "<(MODIFIER,STATIC)>"}}