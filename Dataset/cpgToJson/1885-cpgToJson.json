{"edges": [["23", "24"], ["23", "25"], ["23", "202"], ["23", "203"], ["23", "204"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "46"], ["25", "47"], ["25", "51"], ["25", "52"], ["25", "56"], ["25", "57"], ["25", "61"], ["25", "77"], ["25", "110"], ["25", "8"], ["25", "139"], ["25", "142"], ["25", "143"], ["25", "195"], ["25", "198"], ["25", "200"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "136"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "7"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "168"], ["153", "182"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["160", "167"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["174", "181"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["182", "183"], ["182", "184"], ["182", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "194"], ["188", "189"], ["188", "190"], ["188", "193"], ["190", "191"], ["190", "192"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "45"], ["41", "49"], ["47", "54"], ["52", "59"], ["57", "63"], ["139", "142"], ["142", "145"], ["195", "198"], ["198", "200"], ["200", "204"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["49", "47"], ["54", "52"], ["59", "57"], ["63", "66"], ["66", "72"], ["66", "79"], ["69", "66"], ["71", "69"], ["79", "86"], ["82", "91"], ["82", "112"], ["87", "86"], ["112", "115"], ["115", "130"], ["115", "141"], ["118", "115"], ["120", "118"], ["141", "139"], ["145", "148"], ["148", "163"], ["148", "195"], ["151", "148"], ["32", "30"], ["39", "37"], ["45", "43"], ["72", "75"], ["75", "71"], ["84", "82"], ["90", "98"], ["122", "120"], ["154", "177"], ["168", "184"], ["182", "151"], ["86", "84"], ["91", "94"], ["94", "90"], ["98", "102"], ["98", "87"], ["101", "87"], ["124", "122"], ["156", "154"], ["170", "168"], ["184", "190"], ["187", "182"], ["102", "107"], ["105", "101"], ["126", "124"], ["158", "156"], ["172", "170"], ["188", "187"], ["107", "105"], ["127", "136"], ["136", "126"], ["160", "158"], ["174", "172"], ["190", "188"], ["128", "133"], ["133", "127"], ["162", "160"], ["176", "174"], ["130", "128"], ["163", "162"], ["177", "176"], ["23", "28"], ["24", "204"], ["26", "204"], ["29", "204"], ["29", "204"], ["33", "204"], ["36", "204"], ["36", "204"], ["41", "204"], ["41", "204"], ["49", "204"], ["47", "204"], ["47", "204"], ["52", "204"], ["52", "204"], ["52", "204"], ["57", "204"], ["57", "204"], ["57", "204"], ["82", "204"], ["82", "204"], ["139", "204"], ["142", "204"], ["142", "204"], ["145", "204"], ["148", "204"], ["148", "204"], ["148", "204"], ["195", "204"], ["195", "204"], ["198", "204"], ["200", "204"], ["200", "204"], ["160", "204"], ["158", "204"], ["156", "204"], ["154", "204"], ["154", "204"], ["172", "204"], ["174", "204"], ["172", "204"], ["170", "204"], ["168", "204"], ["168", "204"], ["182", "204"], ["182", "204"], ["187", "204"], ["182", "204"], ["182", "204"], ["151", "204"], ["124", "204"], ["128", "204"], ["127", "204"], ["127", "204"], ["126", "204"], ["126", "204"], ["124", "204"], ["122", "204"], ["120", "204"], ["120", "204"], ["118", "204"], ["90", "204"], ["90", "204"], ["90", "204"], ["98", "204"], ["101", "204"], ["101", "204"], ["101", "204"], ["87", "204"], ["71", "204"], ["75", "204"], ["71", "204"], ["71", "204"], ["69", "204"], ["23", "24"], ["23", "26"], ["23", "33"], ["49", "47"], ["54", "52"], ["59", "57"], ["23", "139"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["23", "63"], ["75", "71"], ["23", "79"], ["23", "112"], ["122", "120"], ["122", "120"], ["139", "142"], ["23", "142"], ["23", "145"], ["36", "195"], ["23", "195"], ["41", "195"], ["168", "195"], ["120", "195"], ["195", "198"], ["23", "198"], ["198", "200"], ["23", "200"], ["29", "49"], ["23", "49"], ["47", "54"], ["23", "54"], ["54", "59"], ["23", "59"], ["63", "66"], ["69", "66"], ["23", "66"], ["59", "66"], ["66", "69"], ["23", "69"], ["79", "82"], ["87", "82"], ["23", "82"], ["57", "82"], ["98", "87"], ["107", "87"], ["23", "87"], ["52", "90"], ["71", "90"], ["112", "115"], ["118", "115"], ["23", "115"], ["66", "115"], ["23", "118"], ["115", "118"], ["145", "148"], ["151", "148"], ["23", "148"], ["115", "148"], ["148", "151"], ["23", "151"], ["156", "154"], ["156", "154"], ["170", "168"], ["170", "168"], ["49", "75"], ["23", "75"], ["57", "101"], ["41", "122"], ["120", "122"], ["23", "122"], ["124", "122"], ["124", "122"], ["188", "182"], ["23", "182"], ["52", "182"], ["188", "182"], ["188", "182"], ["82", "98"], ["23", "98"], ["90", "101"], ["23", "124"], ["126", "124"], ["126", "124"], ["41", "156"], ["168", "156"], ["120", "156"], ["23", "156"], ["158", "156"], ["158", "156"], ["154", "170"], ["23", "170"], ["172", "170"], ["172", "170"], ["188", "187"], ["188", "187"], ["188", "187"], ["23", "187"], ["127", "126"], ["127", "126"], ["57", "126"], ["90", "126"], ["101", "126"], ["172", "158"], ["124", "158"], ["23", "158"], ["160", "158"], ["160", "158"], ["160", "158"], ["158", "172"], ["23", "172"], ["174", "172"], ["174", "172"], ["174", "172"], ["174", "188"], ["23", "188"], ["52", "188"], ["162", "188"], ["98", "107"], ["23", "107"], ["128", "127"], ["128", "127"], ["52", "127"], ["71", "127"], ["142", "160"], ["182", "160"], ["23", "160"], ["162", "160"], ["162", "160"], ["160", "174"], ["23", "174"], ["52", "174"], ["162", "174"], ["23", "128"], ["115", "128"], ["52", "162"], ["182", "162"], ["127", "162"], ["71", "162"], ["23", "162"], ["52", "176"], ["162", "176"], ["23", "176"], ["115", "130"], ["23", "130"], ["66", "75"], ["66", "69"], ["66", "66"], ["66", "72"], ["66", "71"], ["82", "94"], ["82", "98"], ["82", "84"], ["82", "87"], ["82", "91"], ["82", "90"], ["82", "86"], ["82", "82"], ["115", "115"], ["115", "120"], ["115", "136"], ["115", "128"], ["115", "130"], ["115", "118"], ["115", "127"], ["115", "122"], ["115", "126"], ["115", "124"], ["115", "133"], ["148", "188"], ["148", "154"], ["148", "163"], ["148", "151"], ["148", "162"], ["148", "168"], ["148", "170"], ["148", "148"], ["148", "187"], ["148", "190"], ["148", "184"], ["148", "174"], ["148", "182"], ["148", "158"], ["148", "160"], ["148", "176"], ["148", "177"], ["148", "156"], ["148", "172"], ["98", "107"], ["98", "102"], ["98", "101"], ["98", "105"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,ANY ans = BigInteger.ZERO)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.fieldAccess,BigInteger.ZERO)<SUB>6</SUB>>", "45": "<(FIELD_IDENTIFIER,ZERO,ZERO)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "49": "<(nextInt,nextInt())<SUB>7</SUB>>", "51": "<(LOCAL,int[] arr: int[])<SUB>8</SUB>>", "53": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,long[] cum = new long[n])<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.alloc,new long[n])>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>12</SUB>>", "73": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>12</SUB>>", "75": "<(nextInt,nextInt())<SUB>12</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; cum.length); i++),for (int i = 0; Some(i &lt; cum.length); i++))<SUB>21</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "83": "<(IDENTIFIER,i,i &lt; cum.length)<SUB>21</SUB>>", "85": "<(IDENTIFIER,cum,i &lt; cum.length)<SUB>21</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,cum[i])<SUB>23</SUB>>", "93": "<(IDENTIFIER,i,cum[i] = arr[i])<SUB>23</SUB>>", "95": "<(IDENTIFIER,arr,cum[i] = arr[i])<SUB>23</SUB>>", "97": "<(CONTROL_STRUCTURE,if (i &gt; 0),if (i &gt; 0))<SUB>24</SUB>>", "99": "<(IDENTIFIER,i,i &gt; 0)<SUB>24</SUB>>", "101": "<(&lt;operator&gt;.assignmentPlus,cum[i] += cum[i - 1])<SUB>25</SUB>>", "103": "<(IDENTIFIER,cum,cum[i] += cum[i - 1])<SUB>25</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,cum[i - 1])<SUB>25</SUB>>", "107": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>25</SUB>>", "109": "<(LITERAL,1,i - 1)<SUB>25</SUB>>", "111": "<(LOCAL,int i: int)<SUB>28</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>28</SUB>>", "117": "<(IDENTIFIER,n,i &lt; n)<SUB>28</SUB>>", "119": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "121": "<(IDENTIFIER,ans,ans = add(BigInteger.valueOf((1l * (i + 1) * arr[i] - cum[i]))))<SUB>29</SUB>>", "123": "<(IDENTIFIER,ans,add(BigInteger.valueOf((1l * (i + 1) * arr[i] - cum[i]))))<SUB>29</SUB>>", "125": "<(IDENTIFIER,BigInteger,valueOf((1l * (i + 1) * arr[i] - cum[i])))<SUB>29</SUB>>", "127": "<(&lt;operator&gt;.multiplication,1l * (i + 1) * arr[i])<SUB>29</SUB>>", "129": "<(LITERAL,1l,1l * (i + 1))<SUB>29</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>29</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>29</SUB>>", "135": "<(IDENTIFIER,i,1l * (i + 1) * arr[i])<SUB>29</SUB>>", "137": "<(IDENTIFIER,cum,1l * (i + 1) * arr[i] - cum[i])<SUB>29</SUB>>", "8": "<(LOCAL,HashMap&lt;Integer, Integer&gt; map: ANY)<SUB>31</SUB>>", "140": "<(IDENTIFIER,map,ANY map = new HashMap&lt;Integer, Integer&gt;())<SUB>31</SUB>>", "142": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>31</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>32</SUB>>", "145": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>32</SUB>>", "147": "<(LITERAL,0,int i = 0)<SUB>32</SUB>>", "149": "<(IDENTIFIER,i,i &lt; n)<SUB>32</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,i++)<SUB>32</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "155": "<(IDENTIFIER,ans,ans = subtract(BigInteger.valueOf(map.getOrDefault(arr[i] - 1, 0))))<SUB>34</SUB>>", "157": "<(IDENTIFIER,ans,subtract(BigInteger.valueOf(map.getOrDefault(arr[i] - 1, 0))))<SUB>34</SUB>>", "159": "<(IDENTIFIER,BigInteger,valueOf(map.getOrDefault(arr[i] - 1, 0)))<SUB>34</SUB>>", "161": "<(IDENTIFIER,map,getOrDefault(arr[i] - 1, 0))<SUB>34</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>34</SUB>>", "165": "<(IDENTIFIER,i,arr[i] - 1)<SUB>34</SUB>>", "167": "<(LITERAL,0,getOrDefault(arr[i] - 1, 0))<SUB>34</SUB>>", "169": "<(IDENTIFIER,ans,ans = add(BigInteger.valueOf(map.getOrDefault(arr[i] + 1, 0))))<SUB>35</SUB>>", "171": "<(IDENTIFIER,ans,add(BigInteger.valueOf(map.getOrDefault(arr[i] + 1, 0))))<SUB>35</SUB>>", "173": "<(IDENTIFIER,BigInteger,valueOf(map.getOrDefault(arr[i] + 1, 0)))<SUB>35</SUB>>", "175": "<(IDENTIFIER,map,getOrDefault(arr[i] + 1, 0))<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>35</SUB>>", "179": "<(IDENTIFIER,i,arr[i] + 1)<SUB>35</SUB>>", "181": "<(LITERAL,0,getOrDefault(arr[i] + 1, 0))<SUB>35</SUB>>", "183": "<(IDENTIFIER,map,put(arr[i], map.getOrDefault(arr[i], 0) + 1))<SUB>36</SUB>>", "185": "<(IDENTIFIER,arr,put(arr[i], map.getOrDefault(arr[i], 0) + 1))<SUB>36</SUB>>", "187": "<(&lt;operator&gt;.addition,map.getOrDefault(arr[i], 0) + 1)<SUB>36</SUB>>", "189": "<(IDENTIFIER,map,getOrDefault(arr[i], 0))<SUB>36</SUB>>", "191": "<(IDENTIFIER,arr,getOrDefault(arr[i], 0))<SUB>36</SUB>>", "193": "<(LITERAL,0,getOrDefault(arr[i], 0))<SUB>36</SUB>>", "195": "<(println,println(ans))<SUB>39</SUB>>", "197": "<(IDENTIFIER,ans,println(ans))<SUB>39</SUB>>", "199": "<(IDENTIFIER,pw,flush())<SUB>40</SUB>>", "201": "<(IDENTIFIER,pw,close())<SUB>41</SUB>>", "203": "<(MODIFIER,STATIC)>"}}