{"edges": [["19", "21"], ["19", "83"], ["19", "84"], ["19", "85"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "33"], ["31", "36"], ["31", "39"], ["31", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "47"], ["41", "48"], ["41", "55"], ["41", "64"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "61"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "70"], ["64", "76"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["77", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["22", "25"], ["25", "29"], ["27", "33"], ["24", "22"], ["29", "27"], ["33", "36"], ["36", "85"], ["36", "45"], ["39", "36"], ["43", "51"], ["48", "57"], ["45", "43"], ["50", "48"], ["56", "61"], ["56", "66"], ["61", "57"], ["65", "74"], ["65", "81"], ["51", "50"], ["57", "56"], ["66", "65"], ["71", "39"], ["72", "71"], ["78", "39"], ["74", "72"], ["79", "78"], ["81", "79"], ["19", "24"], ["20", "85"], ["22", "85"], ["25", "85"], ["29", "85"], ["27", "85"], ["27", "85"], ["33", "85"], ["36", "85"], ["36", "85"], ["36", "85"], ["39", "85"], ["66", "85"], ["19", "20"], ["19", "22"], ["29", "27"], ["22", "25"], ["19", "25"], ["19", "33"], ["25", "29"], ["19", "29"], ["33", "36"], ["39", "36"], ["19", "36"], ["27", "36"], ["36", "39"], ["19", "39"], ["45", "43"], ["50", "48"], ["50", "48"], ["19", "61"], ["29", "45"], ["19", "45"], ["51", "50"], ["51", "50"], ["19", "50"], ["57", "56"], ["57", "56"], ["19", "56"], ["57", "61"], ["66", "65"], ["66", "65"], ["48", "65"], ["19", "65"], ["43", "51"], ["19", "51"], ["51", "57"], ["61", "57"], ["19", "57"], ["19", "66"], ["57", "66"], ["78", "71"], ["19", "71"], ["71", "78"], ["19", "78"], ["36", "48"], ["36", "51"], ["36", "57"], ["36", "66"], ["36", "36"], ["36", "56"], ["36", "45"], ["36", "65"], ["36", "50"], ["36", "39"], ["36", "43"], ["56", "61"], ["56", "57"], ["56", "56"], ["65", "71"], ["65", "81"], ["65", "72"], ["65", "74"], ["65", "78"], ["65", "79"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(CONTROL_STRUCTURE,for (int tt = 0; Some(tt &lt; T); tt++),for (int tt = 0; Some(tt &lt; T); tt++))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int tt = 0)<SUB>4</SUB>>", "35": "<(LITERAL,0,int tt = 0)<SUB>4</SUB>>", "37": "<(IDENTIFIER,tt,tt &lt; T)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,tt++)<SUB>4</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "45": "<(nextInt,nextInt())<SUB>5</SUB>>", "47": "<(LOCAL,boolean isEven: boolean)<SUB>6</SUB>>", "49": "<(IDENTIFIER,isEven,boolean isEven = n % 2 == 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "53": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "55": "<(CONTROL_STRUCTURE,while (n % 2 == 0),while (n % 2 == 0))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.modulo,n % 2)<SUB>7</SUB>>", "59": "<(LITERAL,2,n % 2)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignmentDivision,n /= 2)<SUB>7</SUB>>", "63": "<(LITERAL,2,n /= 2)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.logicalAnd,isSquare(n) &amp;&amp; isEven)<SUB>8</SUB>>", "67": "<(IDENTIFIER,this,isSquare(n))<SUB>8</SUB>>", "69": "<(IDENTIFIER,isEven,isSquare(n) &amp;&amp; isEven)<SUB>8</SUB>>", "71": "<(println,System.out.println(&quot;YES&quot;))<SUB>9</SUB>>", "73": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>9</SUB>>", "75": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>9</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "81": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "83": "<(MODIFIER,PUBLIC)>", "85": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}