{"edges": [["23", "24"], ["23", "25"], ["23", "184"], ["23", "185"], ["23", "186"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "47"], ["25", "8"], ["25", "64"], ["25", "67"], ["25", "71"], ["25", "72"], ["25", "75"], ["25", "106"], ["25", "107"], ["25", "111"], ["25", "112"], ["25", "116"], ["25", "182"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "66"], ["67", "7"], ["67", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "82"], ["75", "85"], ["75", "87"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "94"], ["87", "103"], ["88", "89"], ["88", "90"], ["88", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "134"], ["126", "135"], ["126", "141"], ["126", "142"], ["126", "149"], ["126", "158"], ["126", "161"], ["126", "164"], ["126", "167"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "133"], ["131", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "140"], ["138", "139"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "173"], ["167", "177"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["178", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["26", "32"], ["29", "35"], ["33", "36"], ["36", "40"], ["38", "45"], ["43", "49"], ["64", "68"], ["67", "72"], ["72", "79"], ["107", "114"], ["112", "118"], ["182", "186"], ["28", "26"], ["30", "29"], ["35", "33"], ["40", "38"], ["45", "43"], ["49", "52"], ["52", "59"], ["52", "66"], ["55", "52"], ["66", "64"], ["68", "67"], ["77", "82"], ["82", "90"], ["82", "109"], ["85", "82"], ["109", "107"], ["114", "112"], ["118", "121"], ["121", "131"], ["121", "182"], ["124", "121"], ["32", "30"], ["58", "55"], ["79", "77"], ["88", "99"], ["94", "103"], ["103", "85"], ["128", "138"], ["135", "145"], ["142", "154"], ["149", "158"], ["158", "161"], ["161", "164"], ["164", "169"], ["59", "62"], ["62", "58"], ["90", "88"], ["96", "94"], ["130", "128"], ["137", "135"], ["144", "142"], ["151", "149"], ["168", "174"], ["168", "179"], ["98", "96"], ["131", "130"], ["138", "137"], ["145", "144"], ["152", "151"], ["169", "168"], ["174", "124"], ["99", "98"], ["154", "152"], ["179", "124"], ["23", "28"], ["24", "186"], ["26", "186"], ["29", "186"], ["29", "186"], ["33", "186"], ["36", "186"], ["38", "186"], ["43", "186"], ["43", "186"], ["52", "186"], ["64", "186"], ["67", "186"], ["67", "186"], ["67", "186"], ["72", "186"], ["72", "186"], ["77", "186"], ["77", "186"], ["82", "186"], ["109", "186"], ["107", "186"], ["107", "186"], ["112", "186"], ["114", "186"], ["112", "186"], ["112", "186"], ["118", "186"], ["121", "186"], ["121", "186"], ["121", "186"], ["182", "186"], ["182", "186"], ["128", "186"], ["138", "186"], ["137", "186"], ["135", "186"], ["135", "186"], ["145", "186"], ["145", "186"], ["144", "186"], ["142", "186"], ["142", "186"], ["152", "186"], ["151", "186"], ["149", "186"], ["149", "186"], ["161", "186"], ["161", "186"], ["169", "186"], ["168", "186"], ["168", "186"], ["179", "186"], ["174", "186"], ["124", "186"], ["88", "186"], ["96", "186"], ["98", "186"], ["96", "186"], ["94", "186"], ["94", "186"], ["103", "186"], ["85", "186"], ["58", "186"], ["58", "186"], ["55", "186"], ["23", "24"], ["23", "26"], ["23", "33"], ["40", "38"], ["45", "43"], ["23", "64"], ["23", "72"], ["109", "107"], ["114", "112"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["23", "49"], ["64", "67"], ["23", "67"], ["52", "67"], ["79", "77"], ["79", "77"], ["23", "118"], ["29", "182"], ["179", "182"], ["174", "182"], ["23", "182"], ["36", "40"], ["23", "40"], ["38", "45"], ["23", "45"], ["49", "52"], ["55", "52"], ["23", "52"], ["45", "52"], ["52", "55"], ["23", "55"], ["62", "58"], ["52", "68"], ["23", "68"], ["77", "82"], ["85", "82"], ["23", "82"], ["82", "85"], ["23", "85"], ["96", "94"], ["96", "94"], ["23", "103"], ["40", "109"], ["62", "109"], ["23", "109"], ["79", "114"], ["23", "114"], ["118", "121"], ["124", "121"], ["23", "121"], ["107", "121"], ["121", "124"], ["23", "124"], ["130", "128"], ["130", "128"], ["137", "135"], ["137", "135"], ["145", "142"], ["145", "142"], ["23", "142"], ["151", "149"], ["151", "149"], ["23", "158"], ["158", "161"], ["23", "161"], ["23", "164"], ["23", "79"], ["52", "79"], ["67", "88"], ["96", "88"], ["23", "88"], ["43", "88"], ["98", "88"], ["58", "88"], ["72", "94"], ["103", "94"], ["23", "94"], ["94", "103"], ["149", "158"], ["72", "161"], ["169", "161"], ["103", "161"], ["161", "164"], ["40", "62"], ["23", "62"], ["88", "96"], ["23", "96"], ["98", "96"], ["98", "96"], ["131", "130"], ["23", "130"], ["138", "137"], ["23", "137"], ["145", "144"], ["145", "144"], ["23", "144"], ["152", "151"], ["152", "151"], ["23", "151"], ["169", "168"], ["169", "168"], ["23", "168"], ["43", "98"], ["88", "98"], ["23", "98"], ["109", "131"], ["138", "131"], ["23", "131"], ["131", "138"], ["23", "138"], ["135", "145"], ["23", "145"], ["128", "145"], ["154", "152"], ["23", "152"], ["154", "152"], ["164", "169"], ["23", "169"], ["29", "174"], ["179", "174"], ["23", "174"], ["142", "154"], ["23", "154"], ["29", "179"], ["174", "179"], ["23", "179"], ["52", "52"], ["52", "59"], ["52", "58"], ["52", "55"], ["52", "62"], ["82", "94"], ["82", "96"], ["82", "98"], ["82", "99"], ["82", "85"], ["82", "103"], ["82", "82"], ["82", "90"], ["82", "88"], ["121", "154"], ["121", "145"], ["121", "128"], ["121", "169"], ["121", "161"], ["121", "131"], ["121", "149"], ["121", "142"], ["121", "151"], ["121", "121"], ["121", "168"], ["121", "144"], ["121", "138"], ["121", "137"], ["121", "152"], ["121", "130"], ["121", "135"], ["121", "164"], ["121", "124"], ["121", "158"], ["168", "179"], ["168", "174"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "28": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "6": "<(LOCAL,Scanner in: ANY)<SUB>5</SUB>>", "34": "<(IDENTIFIER,in,ANY in = new Scanner())<SUB>5</SUB>>", "36": "<(&lt;init&gt;,new Scanner())<SUB>5</SUB>>", "37": "<(LOCAL,int n: int)<SUB>6</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int[] data = new int[n])<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[n])>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,data[i] = nextInt())<SUB>9</SUB>>", "63": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "64": "<(&lt;operator&gt;.assignment,ANY tree = new FT(n + 1))<SUB>11</SUB>>", "66": "<(&lt;operator&gt;.alloc,new FT(n + 1))<SUB>11</SUB>>", "7": "<(IDENTIFIER,tree,new FT(n + 1))<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,n + 1)<SUB>11</SUB>>", "71": "<(LOCAL,int result: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,result,int result = 0)<SUB>12</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); i--),for (int i = n - 1; Some(i &gt;= 0); i--))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "81": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "83": "<(IDENTIFIER,i,i &gt;= 0)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.postDecrement,i--)<SUB>13</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "89": "<(IDENTIFIER,tree,update(data[i], 1))<SUB>14</SUB>>", "91": "<(IDENTIFIER,data,update(data[i], 1))<SUB>14</SUB>>", "93": "<(LITERAL,1,update(data[i], 1))<SUB>14</SUB>>", "95": "<(IDENTIFIER,result,result += get(data[i] - 1))<SUB>15</SUB>>", "97": "<(IDENTIFIER,tree,get(data[i] - 1))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,data[i] - 1)<SUB>15</SUB>>", "103": "<(&lt;operators&gt;.assignmentModulo,result %= 2)<SUB>16</SUB>>", "105": "<(LITERAL,2,result %= 2)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,int q = nextInt())<SUB>18</SUB>>", "109": "<(nextInt,nextInt())<SUB>18</SUB>>", "111": "<(LOCAL,int[] tmp: int[])<SUB>19</SUB>>", "113": "<(IDENTIFIER,tmp,int[] tmp = new int[n])<SUB>19</SUB>>", "115": "<(IDENTIFIER,n,new int[n])<SUB>19</SUB>>", "117": "<(LOCAL,int i: int)<SUB>20</SUB>>", "119": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>20</SUB>>", "123": "<(IDENTIFIER,q,i &lt; q)<SUB>20</SUB>>", "125": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "127": "<(LOCAL,int l: int)<SUB>21</SUB>>", "129": "<(IDENTIFIER,l,int l = in.nextInt() - 1)<SUB>21</SUB>>", "131": "<(nextInt,nextInt())<SUB>21</SUB>>", "133": "<(LITERAL,1,in.nextInt() - 1)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,int r = in.nextInt() - 1)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>22</SUB>>", "139": "<(IDENTIFIER,in,nextInt())<SUB>22</SUB>>", "141": "<(LOCAL,int total: int)<SUB>24</SUB>>", "143": "<(IDENTIFIER,total,int total = r - l + 1)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.subtraction,r - l)<SUB>24</SUB>>", "147": "<(IDENTIFIER,l,r - l)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.assignment,total = total * (total - 1) / 2)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.division,total * (total - 1) / 2)<SUB>25</SUB>>", "153": "<(IDENTIFIER,total,total * (total - 1))<SUB>25</SUB>>", "155": "<(IDENTIFIER,total,total - 1)<SUB>25</SUB>>", "157": "<(LITERAL,2,total * (total - 1) / 2)<SUB>25</SUB>>", "159": "<(IDENTIFIER,total,total %= 2)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.assignmentPlus,result += total)<SUB>28</SUB>>", "163": "<(IDENTIFIER,total,result += total)<SUB>28</SUB>>", "165": "<(IDENTIFIER,result,result %= 2)<SUB>29</SUB>>", "167": "<(CONTROL_STRUCTURE,if (result % 2 == 0),if (result % 2 == 0))<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.modulo,result % 2)<SUB>30</SUB>>", "171": "<(LITERAL,2,result % 2)<SUB>30</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "175": "<(IDENTIFIER,out,println(&quot;even&quot;))<SUB>31</SUB>>", "177": "<(CONTROL_STRUCTURE,else,else)<SUB>32</SUB>>", "179": "<(println,println(&quot;odd&quot;))<SUB>33</SUB>>", "181": "<(LITERAL,&quot;odd&quot;,println(&quot;odd&quot;))<SUB>33</SUB>>", "183": "<(IDENTIFIER,out,close())<SUB>36</SUB>>", "185": "<(MODIFIER,STATIC)>"}}