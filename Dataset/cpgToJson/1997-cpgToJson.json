{"edges": [["23", "25"], ["23", "135"], ["23", "136"], ["23", "137"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "53"], ["25", "54"], ["25", "60"], ["25", "61"], ["25", "8"], ["25", "65"], ["25", "68"], ["25", "71"], ["25", "89"], ["25", "90"], ["25", "95"], ["25", "130"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["68", "7"], ["68", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["87", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["106", "107"], ["106", "112"], ["106", "126"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "123"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["128", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["26", "33"], ["29", "42"], ["40", "44"], ["43", "51"], ["47", "58"], ["54", "63"], ["61", "67"], ["65", "69"], ["68", "73"], ["90", "97"], ["130", "137"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["56", "54"], ["63", "61"], ["67", "65"], ["69", "68"], ["73", "76"], ["76", "87"], ["76", "92"], ["79", "76"], ["92", "90"], ["97", "100"], ["100", "108"], ["100", "133"], ["103", "100"], ["131", "130"], ["31", "38"], ["34", "29"], ["51", "49"], ["58", "56"], ["82", "79"], ["133", "131"], ["33", "31"], ["36", "34"], ["83", "82"], ["107", "114"], ["107", "128"], ["38", "36"], ["85", "83"], ["108", "107"], ["123", "103"], ["87", "85"], ["114", "120"], ["114", "123"], ["128", "103"], ["118", "123"], ["120", "118"], ["23", "28"], ["24", "137"], ["26", "137"], ["31", "137"], ["34", "137"], ["34", "137"], ["34", "137"], ["29", "137"], ["40", "137"], ["47", "137"], ["56", "137"], ["58", "137"], ["56", "137"], ["54", "137"], ["54", "137"], ["61", "137"], ["61", "137"], ["61", "137"], ["65", "137"], ["68", "137"], ["69", "137"], ["68", "137"], ["68", "137"], ["73", "137"], ["76", "137"], ["90", "137"], ["92", "137"], ["90", "137"], ["90", "137"], ["97", "137"], ["100", "137"], ["100", "137"], ["130", "137"], ["130", "137"], ["130", "137"], ["107", "137"], ["107", "137"], ["128", "137"], ["128", "137"], ["114", "137"], ["114", "137"], ["118", "137"], ["118", "137"], ["123", "137"], ["123", "137"], ["103", "137"], ["85", "137"], ["87", "137"], ["85", "137"], ["82", "137"], ["82", "137"], ["79", "137"], ["23", "24"], ["23", "26"], ["23", "40"], ["49", "47"], ["49", "47"], ["56", "54"], ["56", "54"], ["63", "61"], ["23", "65"], ["54", "90"], ["23", "90"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "43"], ["65", "68"], ["23", "68"], ["69", "68"], ["23", "73"], ["23", "97"], ["76", "130"], ["118", "130"], ["23", "130"], ["23", "31"], ["23", "39"], ["29", "44"], ["23", "44"], ["23", "49"], ["51", "49"], ["49", "56"], ["23", "56"], ["58", "56"], ["23", "63"], ["44", "69"], ["23", "69"], ["73", "76"], ["79", "76"], ["23", "76"], ["47", "76"], ["76", "79"], ["23", "79"], ["54", "92"], ["23", "92"], ["97", "100"], ["103", "100"], ["23", "100"], ["100", "103"], ["23", "103"], ["31", "34"], ["23", "34"], ["43", "51"], ["23", "51"], ["51", "58"], ["23", "58"], ["61", "82"], ["61", "107"], ["23", "107"], ["23", "123"], ["56", "85"], ["23", "85"], ["87", "85"], ["68", "87"], ["23", "87"], ["90", "114"], ["128", "114"], ["123", "114"], ["23", "114"], ["54", "114"], ["61", "118"], ["107", "118"], ["90", "128"], ["123", "128"], ["23", "128"], ["76", "118"], ["23", "118"], ["76", "83"], ["76", "85"], ["76", "76"], ["76", "87"], ["76", "82"], ["76", "79"], ["100", "107"], ["100", "100"], ["100", "103"], ["100", "108"], ["107", "128"], ["107", "114"], ["107", "123"], ["114", "120"], ["114", "118"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "45": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>6</SUB>>", "49": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "51": "<(nextToken,nextToken())<SUB>6</SUB>>", "53": "<(LOCAL,int k: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,k,int k = parseInt(st.nextToken()))<SUB>7</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "59": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] temp = new int[1000001])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[1000001])>", "8": "<(LOCAL,StringTokenizer st1: ANY)<SUB>11</SUB>>", "66": "<(IDENTIFIER,st1,ANY st1 = new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "68": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "69": "<(readLine,readLine())<SUB>11</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,temp[Integer.parseInt(st1.nextToken())])<SUB>15</SUB>>", "85": "<(parseInt,parseInt(st1.nextToken()))<SUB>15</SUB>>", "87": "<(nextToken,nextToken())<SUB>15</SUB>>", "89": "<(LOCAL,int b: int)<SUB>18</SUB>>", "91": "<(IDENTIFIER,b,int b = k + 1)<SUB>18</SUB>>", "93": "<(IDENTIFIER,k,k + 1)<SUB>18</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int i = 1000000; Some(i &gt; 0); i--),for (int i = 1000000; Some(i &gt; 0); i--))<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.assignment,int i = 1000000)<SUB>20</SUB>>", "99": "<(LITERAL,1000000,int i = 1000000)<SUB>20</SUB>>", "101": "<(IDENTIFIER,i,i &gt; 0)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.postDecrement,i--)<SUB>20</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.greaterThan,temp[i] &gt; 0)<SUB>22</SUB>>", "109": "<(IDENTIFIER,temp,temp[i] &gt; 0)<SUB>22</SUB>>", "111": "<(LITERAL,0,temp[i] &gt; 0)<SUB>22</SUB>>", "113": "<(CONTROL_STRUCTURE,if (b &lt;= k),if (b &lt;= k))<SUB>23</SUB>>", "115": "<(IDENTIFIER,b,b &lt;= k)<SUB>23</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "119": "<(IDENTIFIER,n,n -= temp[i])<SUB>24</SUB>>", "121": "<(IDENTIFIER,temp,n -= temp[i])<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.assignment,b = 1)<SUB>26</SUB>>", "125": "<(LITERAL,1,b = 1)<SUB>26</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "129": "<(IDENTIFIER,b,b++)<SUB>28</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "133": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "135": "<(MODIFIER,PUBLIC)>", "137": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}