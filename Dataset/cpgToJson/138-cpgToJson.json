{"edges": [["21", "23"], ["21", "373"], ["21", "374"], ["21", "375"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "62"], ["23", "81"], ["23", "82"], ["23", "88"], ["23", "89"], ["23", "95"], ["23", "96"], ["23", "99"], ["23", "152"], ["23", "155"], ["23", "156"], ["23", "159"], ["23", "160"], ["23", "161"], ["23", "164"], ["23", "167"], ["23", "168"], ["23", "171"], ["23", "176"], ["23", "232"], ["23", "235"], ["23", "236"], ["23", "239"], ["23", "240"], ["23", "245"], ["23", "285"], ["23", "286"], ["23", "289"], ["23", "355"], ["23", "371"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "61"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["62", "63"], ["62", "74"], ["63", "64"], ["63", "71"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["74", "80"], ["75", "76"], ["75", "77"], ["78", "79"], ["82", "83"], ["82", "84"], ["84", "85"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["99", "105"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "108"], ["105", "109"], ["105", "112"], ["105", "115"], ["105", "118"], ["105", "119"], ["105", "122"], ["105", "147"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "132"], ["126", "134"], ["126", "144"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["138", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "183"], ["180", "188"], ["180", "189"], ["180", "196"], ["180", "197"], ["180", "212"], ["180", "217"], ["180", "229"], ["181", "182"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["197", "198"], ["197", "201"], ["197", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["221", "224"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "258"], ["249", "262"], ["249", "263"], ["249", "272"], ["249", "279"], ["250", "251"], ["250", "256"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["256", "257"], ["258", "259"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["265", "269"], ["267", "268"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["289", "294"], ["289", "297"], ["289", "299"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["297", "298"], ["299", "300"], ["299", "301"], ["299", "302"], ["299", "305"], ["299", "316"], ["299", "350"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "315"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "314"], ["316", "317"], ["316", "318"], ["316", "323"], ["316", "330"], ["316", "332"], ["318", "319"], ["318", "320"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["330", "331"], ["332", "333"], ["332", "343"], ["332", "345"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "340"], ["338", "339"], ["340", "341"], ["340", "342"], ["343", "344"], ["345", "346"], ["345", "349"], ["346", "347"], ["346", "348"], ["350", "351"], ["350", "352"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "357"], ["355", "360"], ["355", "363"], ["355", "365"], ["357", "358"], ["357", "359"], ["360", "361"], ["360", "362"], ["363", "364"], ["365", "366"], ["365", "367"], ["365", "368"], ["368", "369"], ["368", "370"], ["371", "372"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "54"], ["49", "67"], ["82", "92"], ["89", "96"], ["96", "100"], ["152", "156"], ["156", "161"], ["161", "164"], ["164", "168"], ["168", "172"], ["171", "177"], ["232", "236"], ["236", "242"], ["240", "246"], ["286", "291"], ["371", "375"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["63", "75"], ["63", "85"], ["84", "82"], ["91", "89"], ["100", "103"], ["103", "109"], ["103", "152"], ["172", "171"], ["177", "181"], ["177", "232"], ["242", "240"], ["246", "252"], ["246", "286"], ["291", "294"], ["294", "302"], ["294", "357"], ["297", "294"], ["357", "360"], ["360", "368"], ["360", "371"], ["363", "360"], ["365", "363"], ["30", "28"], ["37", "35"], ["52", "51"], ["64", "63"], ["64", "71"], ["71", "63"], ["75", "78"], ["78", "80"], ["80", "375"], ["85", "84"], ["92", "91"], ["109", "112"], ["112", "115"], ["115", "119"], ["119", "123"], ["181", "185"], ["183", "193"], ["189", "198"], ["212", "226"], ["217", "229"], ["229", "177"], ["258", "267"], ["263", "276"], ["272", "283"], ["279", "246"], ["302", "312"], ["305", "320"], ["350", "297"], ["368", "365"], ["53", "58"], ["56", "52"], ["66", "64"], ["123", "129"], ["123", "148"], ["148", "103"], ["185", "183"], ["191", "189"], ["198", "204"], ["198", "210"], ["201", "213"], ["213", "212"], ["219", "217"], ["251", "256"], ["251", "259"], ["256", "259"], ["259", "258"], ["265", "263"], ["274", "272"], ["280", "279"], ["307", "305"], ["318", "327"], ["323", "334"], ["323", "352"], ["330", "327"], ["352", "350"], ["54", "53"], ["57", "56"], ["67", "66"], ["127", "132"], ["132", "141"], ["134", "144"], ["144", "123"], ["192", "191"], ["203", "201"], ["207", "213"], ["221", "219"], ["252", "251"], ["267", "269"], ["269", "265"], ["275", "274"], ["282", "280"], ["308", "307"], ["320", "318"], ["325", "323"], ["343", "346"], ["345", "330"], ["58", "57"], ["129", "127"], ["136", "134"], ["193", "192"], ["204", "203"], ["209", "207"], ["224", "221"], ["276", "275"], ["283", "282"], ["310", "308"], ["327", "325"], ["334", "338"], ["334", "343"], ["346", "345"], ["138", "136"], ["210", "209"], ["225", "224"], ["312", "310"], ["338", "340"], ["340", "343"], ["141", "138"], ["226", "225"], ["21", "26"], ["80", "375"], ["22", "375"], ["24", "375"], ["27", "375"], ["27", "375"], ["31", "375"], ["34", "375"], ["34", "375"], ["39", "375"], ["39", "375"], ["46", "375"], ["44", "375"], ["44", "375"], ["49", "375"], ["52", "375"], ["52", "375"], ["51", "375"], ["49", "375"], ["49", "375"], ["64", "375"], ["67", "375"], ["66", "375"], ["64", "375"], ["63", "375"], ["71", "375"], ["71", "375"], ["63", "375"], ["63", "375"], ["75", "375"], ["78", "375"], ["78", "375"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["51", "49"], ["84", "82"], ["91", "89"], ["21", "96"], ["21", "156"], ["21", "161"], ["21", "164"], ["21", "168"], ["21", "171"], ["168", "232"], ["217", "232"], ["21", "232"], ["156", "236"], ["219", "236"], ["21", "236"], ["21", "240"], ["156", "240"], ["219", "240"], ["21", "286"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["34", "152"], ["21", "152"], ["64", "232"], ["71", "232"], ["148", "232"], ["21", "291"], ["21", "357"], ["152", "371"], ["365", "371"], ["21", "371"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["52", "51"], ["52", "51"], ["21", "51"], ["64", "63"], ["64", "63"], ["71", "63"], ["71", "63"], ["21", "80"], ["67", "84"], ["21", "84"], ["21", "91"], ["67", "91"], ["96", "100"], ["21", "100"], ["67", "100"], ["100", "103"], ["129", "103"], ["21", "103"], ["21", "109"], ["21", "112"], ["21", "115"], ["21", "119"], ["161", "177"], ["229", "177"], ["21", "177"], ["100", "177"], ["123", "177"], ["185", "183"], ["185", "183"], ["191", "189"], ["191", "189"], ["207", "212"], ["201", "212"], ["21", "212"], ["219", "217"], ["219", "217"], ["221", "229"], ["21", "229"], ["21", "242"], ["156", "242"], ["219", "242"], ["232", "246"], ["272", "246"], ["21", "246"], ["265", "263"], ["265", "263"], ["265", "263"], ["274", "272"], ["274", "272"], ["291", "294"], ["297", "294"], ["21", "294"], ["240", "294"], ["267", "294"], ["312", "297"], ["21", "297"], ["21", "302"], ["308", "305"], ["308", "305"], ["21", "305"], ["82", "350"], ["357", "360"], ["363", "360"], ["21", "360"], ["177", "360"], ["360", "363"], ["21", "363"], ["152", "365"], ["21", "365"], ["89", "365"], ["21", "52"], ["39", "52"], ["44", "64"], ["21", "64"], ["66", "64"], ["66", "64"], ["64", "71"], ["21", "71"], ["49", "71"], ["34", "75"], ["21", "75"], ["75", "78"], ["21", "78"], ["67", "85"], ["21", "85"], ["21", "92"], ["67", "92"], ["156", "181"], ["219", "181"], ["21", "181"], ["21", "201"], ["198", "201"], ["168", "217"], ["21", "217"], ["224", "229"], ["82", "258"], ["251", "258"], ["21", "272"], ["246", "272"], ["82", "279"], ["308", "318"], ["21", "318"], ["21", "350"], ["308", "350"], ["21", "53"], ["39", "53"], ["21", "56"], ["39", "56"], ["67", "66"], ["67", "66"], ["21", "66"], ["112", "123"], ["144", "123"], ["21", "123"], ["100", "123"], ["141", "123"], ["129", "127"], ["129", "127"], ["136", "134"], ["136", "134"], ["138", "144"], ["21", "144"], ["119", "148"], ["134", "148"], ["21", "148"], ["64", "148"], ["71", "148"], ["164", "185"], ["21", "185"], ["221", "185"], ["103", "185"], ["21", "191"], ["177", "191"], ["177", "191"], ["183", "198"], ["21", "198"], ["189", "198"], ["21", "207"], ["198", "207"], ["181", "219"], ["21", "219"], ["221", "219"], ["221", "219"], ["221", "219"], ["82", "251"], ["258", "251"], ["21", "251"], ["236", "256"], ["274", "256"], ["21", "256"], ["221", "265"], ["138", "265"], ["21", "265"], ["267", "265"], ["246", "265"], ["236", "265"], ["256", "265"], ["274", "265"], ["21", "274"], ["263", "274"], ["236", "274"], ["256", "274"], ["308", "307"], ["308", "307"], ["21", "307"], ["318", "323"], ["330", "323"], ["21", "323"], ["308", "323"], ["82", "323"], ["323", "330"], ["21", "330"], ["305", "345"], ["338", "345"], ["21", "345"], ["21", "57"], ["39", "57"], ["21", "67"], ["39", "67"], ["109", "132"], ["136", "132"], ["21", "132"], ["119", "134"], ["21", "134"], ["141", "144"], ["21", "192"], ["177", "192"], ["21", "203"], ["198", "203"], ["138", "221"], ["21", "221"], ["198", "221"], ["224", "221"], ["224", "221"], ["240", "267"], ["21", "267"], ["246", "269"], ["21", "269"], ["236", "269"], ["256", "269"], ["274", "269"], ["21", "275"], ["263", "275"], ["21", "282"], ["263", "282"], ["286", "308"], ["350", "308"], ["21", "308"], ["82", "308"], ["308", "320"], ["21", "320"], ["21", "325"], ["308", "325"], ["82", "325"], ["334", "343"], ["340", "343"], ["21", "343"], ["115", "129"], ["21", "129"], ["138", "129"], ["103", "129"], ["132", "136"], ["21", "136"], ["138", "136"], ["138", "136"], ["138", "136"], ["21", "209"], ["198", "209"], ["21", "224"], ["177", "224"], ["191", "224"], ["302", "334"], ["343", "334"], ["21", "334"], ["103", "334"], ["185", "334"], ["21", "340"], ["21", "138"], ["127", "138"], ["141", "138"], ["141", "138"], ["21", "225"], ["177", "225"], ["294", "312"], ["21", "312"], ["305", "338"], ["21", "338"], ["123", "141"], ["21", "141"], ["123", "141"], ["63", "161"], ["63", "84"], ["63", "240"], ["63", "168"], ["63", "242"], ["63", "80"], ["63", "152"], ["63", "100"], ["63", "236"], ["63", "357"], ["63", "177"], ["63", "360"], ["63", "172"], ["63", "96"], ["63", "75"], ["63", "85"], ["63", "103"], ["63", "232"], ["63", "92"], ["63", "291"], ["63", "91"], ["63", "246"], ["63", "164"], ["63", "286"], ["63", "171"], ["63", "89"], ["63", "371"], ["63", "294"], ["63", "82"], ["63", "156"], ["63", "78"], ["103", "112"], ["103", "148"], ["103", "123"], ["103", "109"], ["103", "115"], ["103", "103"], ["103", "119"], ["177", "192"], ["177", "226"], ["177", "213"], ["177", "181"], ["177", "224"], ["177", "217"], ["177", "177"], ["177", "229"], ["177", "225"], ["177", "185"], ["177", "198"], ["177", "189"], ["177", "191"], ["177", "212"], ["177", "221"], ["177", "183"], ["177", "193"], ["177", "219"], ["246", "272"], ["246", "283"], ["246", "258"], ["246", "276"], ["246", "274"], ["246", "269"], ["246", "282"], ["246", "279"], ["246", "275"], ["246", "259"], ["246", "246"], ["246", "267"], ["246", "280"], ["246", "265"], ["246", "252"], ["246", "251"], ["246", "263"], ["294", "308"], ["294", "302"], ["294", "310"], ["294", "323"], ["294", "305"], ["294", "297"], ["294", "320"], ["294", "307"], ["294", "325"], ["294", "318"], ["294", "352"], ["294", "327"], ["294", "294"], ["294", "350"], ["294", "312"], ["360", "368"], ["360", "365"], ["360", "360"], ["360", "363"], ["64", "71"], ["123", "136"], ["123", "129"], ["123", "134"], ["123", "138"], ["123", "127"], ["123", "141"], ["123", "123"], ["123", "132"], ["123", "144"], ["198", "209"], ["198", "204"], ["198", "201"], ["198", "207"], ["198", "210"], ["198", "203"], ["251", "256"], ["323", "334"], ["323", "346"], ["323", "323"], ["323", "325"], ["323", "343"], ["323", "327"], ["323", "330"], ["323", "345"], ["334", "338"], ["334", "340"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,long dest: long)<SUB>5</SUB>>", "45": "<(IDENTIFIER,dest,long dest = nextLong())<SUB>5</SUB>>", "47": "<(IDENTIFIER,sc,nextLong())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,long max = (long) N * ((long) N + 1L) / 2L)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.division,(long) N * ((long) N + 1L) / 2L)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.cast,(long) N)<SUB>6</SUB>>", "55": "<(IDENTIFIER,N,(long) N)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.cast,(long) N)<SUB>6</SUB>>", "59": "<(IDENTIFIER,N,(long) N)<SUB>6</SUB>>", "61": "<(LITERAL,2L,(long) N * ((long) N + 1L) / 2L)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.logicalOr,dest &lt; 2 * N - 1 || dest &gt; max)<SUB>7</SUB>>", "65": "<(IDENTIFIER,dest,dest &lt; 2 * N - 1)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.multiplication,2 * N)<SUB>7</SUB>>", "69": "<(IDENTIFIER,N,2 * N)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,dest &gt; max)<SUB>7</SUB>>", "73": "<(IDENTIFIER,max,dest &gt; max)<SUB>7</SUB>>", "75": "<(println,println(&quot;No&quot;))<SUB>8</SUB>>", "77": "<(LITERAL,&quot;No&quot;,println(&quot;No&quot;))<SUB>8</SUB>>", "79": "<(IDENTIFIER,out,close())<SUB>9</SUB>>", "81": "<(LOCAL,int[] d: int[])<SUB>12</SUB>>", "83": "<(IDENTIFIER,d,int[] d = new int[N + 1])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.addition,N + 1)<SUB>12</SUB>>", "87": "<(LITERAL,1,N + 1)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,int[] f = new int[N + 1])<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.alloc,new int[N + 1])>", "93": "<(IDENTIFIER,N,N + 1)<SUB>13</SUB>>", "95": "<(LOCAL,int K: int)<SUB>14</SUB>>", "97": "<(IDENTIFIER,K,int K = 1)<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,for (; Some(K &lt;= N); K++),for (; Some(K &lt;= N); K++))<SUB>15</SUB>>", "101": "<(IDENTIFIER,K,K &lt;= N)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,K++)<SUB>15</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "107": "<(LOCAL,long cnt: long)<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.assignment,long dep = 1L)<SUB>16</SUB>>", "111": "<(LITERAL,1L,long dep = 1L)<SUB>16</SUB>>", "113": "<(IDENTIFIER,cnt,long cnt = 1L)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,long c = 1L)<SUB>16</SUB>>", "117": "<(LITERAL,1L,long c = 1L)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.assignment,long t = 1L)<SUB>17</SUB>>", "121": "<(LITERAL,1L,long t = 1L)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.lessThan,cnt &lt; N)<SUB>18</SUB>>", "125": "<(IDENTIFIER,N,cnt &lt; N)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,c = c * K)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.multiplication,c * K)<SUB>19</SUB>>", "131": "<(IDENTIFIER,K,c * K)<SUB>19</SUB>>", "133": "<(IDENTIFIER,dep,dep++)<SUB>20</SUB>>", "135": "<(IDENTIFIER,t,t += dep * Math.min(c, N - cnt))<SUB>21</SUB>>", "137": "<(IDENTIFIER,dep,dep * Math.min(c, N - cnt))<SUB>21</SUB>>", "139": "<(IDENTIFIER,Math,Math.min(c, N - cnt))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.subtraction,N - cnt)<SUB>21</SUB>>", "143": "<(IDENTIFIER,cnt,N - cnt)<SUB>21</SUB>>", "145": "<(IDENTIFIER,cnt,cnt += c)<SUB>22</SUB>>", "147": "<(CONTROL_STRUCTURE,if (t &lt;= dest),if (t &lt;= dest))<SUB>24</SUB>>", "149": "<(IDENTIFIER,t,t &lt;= dest)<SUB>24</SUB>>", "151": "<(CONTROL_STRUCTURE,break;,break;)<SUB>24</SUB>>", "153": "<(IDENTIFIER,out,println(&quot;Yes&quot;))<SUB>26</SUB>>", "155": "<(LOCAL,int dep: int)<SUB>27</SUB>>", "157": "<(IDENTIFIER,dep,int dep = 1)<SUB>27</SUB>>", "159": "<(LOCAL,long cnt: long)<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.assignment,long cnt = 1L)<SUB>27</SUB>>", "163": "<(LITERAL,1L,long cnt = 1L)<SUB>27</SUB>>", "165": "<(IDENTIFIER,c,long c = 1L)<SUB>27</SUB>>", "167": "<(LOCAL,long t: long)<SUB>28</SUB>>", "169": "<(IDENTIFIER,t,long t = 1L)<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.assignment,d[1] = 1)<SUB>29</SUB>>", "173": "<(IDENTIFIER,d,d[1] = 1)<SUB>29</SUB>>", "175": "<(LITERAL,1,d[1] = 1)<SUB>29</SUB>>", "177": "<(&lt;operator&gt;.lessThan,cnt &lt; N)<SUB>30</SUB>>", "179": "<(IDENTIFIER,N,cnt &lt; N)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,dep++)<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.assignment,c = c * K)<SUB>31</SUB>>", "185": "<(&lt;operator&gt;.multiplication,c * K)<SUB>31</SUB>>", "187": "<(IDENTIFIER,K,c * K)<SUB>31</SUB>>", "189": "<(&lt;operator&gt;.assignment,long x = (long) N - cnt)<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.subtraction,(long) N - cnt)<SUB>32</SUB>>", "193": "<(TYPE_REF,long,long)<SUB>32</SUB>>", "195": "<(IDENTIFIER,cnt,(long) N - cnt)<SUB>32</SUB>>", "197": "<(CONTROL_STRUCTURE,if (c &gt;= x),if (c &gt;= x))<SUB>34</SUB>>", "199": "<(IDENTIFIER,c,c &gt;= x)<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.assignment,min = (int) x)<SUB>34</SUB>>", "203": "<(&lt;operator&gt;.cast,(int) x)<SUB>34</SUB>>", "205": "<(IDENTIFIER,x,(int) x)<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.assignment,min = (int) c)<SUB>35</SUB>>", "209": "<(&lt;operator&gt;.cast,(int) c)<SUB>35</SUB>>", "211": "<(IDENTIFIER,c,(int) c)<SUB>35</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,d[dep])<SUB>36</SUB>>", "215": "<(IDENTIFIER,dep,d[dep] = min)<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.assignmentPlus,t += dep * Math.min(c, (long) N - cnt))<SUB>37</SUB>>", "219": "<(&lt;operator&gt;.multiplication,dep * Math.min(c, (long) N - cnt))<SUB>37</SUB>>", "221": "<(min,Math.min(c, (long) N - cnt))<SUB>37</SUB>>", "223": "<(IDENTIFIER,c,Math.min(c, (long) N - cnt))<SUB>37</SUB>>", "225": "<(&lt;operator&gt;.cast,(long) N)<SUB>37</SUB>>", "227": "<(IDENTIFIER,N,(long) N)<SUB>37</SUB>>", "229": "<(&lt;operator&gt;.assignmentPlus,cnt += c)<SUB>37</SUB>>", "231": "<(IDENTIFIER,c,cnt += c)<SUB>37</SUB>>", "233": "<(IDENTIFIER,dest,dest -= t)<SUB>39</SUB>>", "235": "<(LOCAL,int curDep: int)<SUB>40</SUB>>", "237": "<(IDENTIFIER,curDep,int curDep = dep)<SUB>40</SUB>>", "239": "<(LOCAL,int nextDep: int)<SUB>40</SUB>>", "241": "<(IDENTIFIER,nextDep,int nextDep = dep + 1)<SUB>40</SUB>>", "243": "<(IDENTIFIER,dep,dep + 1)<SUB>40</SUB>>", "245": "<(CONTROL_STRUCTURE,while (dest &gt; 0),while (dest &gt; 0))<SUB>41</SUB>>", "247": "<(IDENTIFIER,dest,dest &gt; 0)<SUB>41</SUB>>", "249": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "251": "<(&lt;operator&gt;.lessEqualsThan,d[curDep] &lt;= 1)<SUB>42</SUB>>", "253": "<(IDENTIFIER,d,d[curDep] &lt;= 1)<SUB>42</SUB>>", "255": "<(LITERAL,1,d[curDep] &lt;= 1)<SUB>42</SUB>>", "257": "<(IDENTIFIER,curDep,curDep--)<SUB>42</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,d[curDep])<SUB>43</SUB>>", "261": "<(IDENTIFIER,curDep,d[curDep]--)<SUB>43</SUB>>", "263": "<(&lt;operator&gt;.assignment,long next = Math.min(nextDep++, dest + curDep))<SUB>44</SUB>>", "265": "<(min,Math.min(nextDep++, dest + curDep))<SUB>44</SUB>>", "267": "<(&lt;operator&gt;.postIncrement,nextDep++)<SUB>44</SUB>>", "269": "<(&lt;operator&gt;.addition,dest + curDep)<SUB>44</SUB>>", "271": "<(IDENTIFIER,curDep,dest + curDep)<SUB>44</SUB>>", "273": "<(IDENTIFIER,dest,dest -= (int) next - curDep)<SUB>45</SUB>>", "275": "<(&lt;operator&gt;.cast,(int) next)<SUB>45</SUB>>", "277": "<(IDENTIFIER,next,(int) next)<SUB>45</SUB>>", "279": "<(&lt;operator&gt;.postIncrement,d[(int) next]++)<SUB>46</SUB>>", "281": "<(IDENTIFIER,d,d[(int) next]++)<SUB>46</SUB>>", "283": "<(TYPE_REF,int,int)<SUB>46</SUB>>", "285": "<(LOCAL,int first: int)<SUB>48</SUB>>", "287": "<(IDENTIFIER,first,int first = 1)<SUB>48</SUB>>", "289": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt; nextDep); i++),for (int i = 2; Some(i &lt; nextDep); i++))<SUB>49</SUB>>", "291": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>49</SUB>>", "293": "<(LITERAL,2,int i = 2)<SUB>49</SUB>>", "295": "<(IDENTIFIER,i,i &lt; nextDep)<SUB>49</SUB>>", "297": "<(&lt;operator&gt;.postIncrement,i++)<SUB>49</SUB>>", "299": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "301": "<(LOCAL,int fn: int)<SUB>50</SUB>>", "303": "<(IDENTIFIER,p,int p = 0)<SUB>50</SUB>>", "305": "<(&lt;operator&gt;.assignment,int fn = first - d[i - 1] + 1)<SUB>50</SUB>>", "307": "<(&lt;operator&gt;.addition,first - d[i - 1] + 1)<SUB>50</SUB>>", "309": "<(IDENTIFIER,first,first - d[i - 1])<SUB>50</SUB>>", "311": "<(IDENTIFIER,d,first - d[i - 1])<SUB>50</SUB>>", "313": "<(IDENTIFIER,i,i - 1)<SUB>50</SUB>>", "315": "<(LITERAL,1,first - d[i - 1] + 1)<SUB>50</SUB>>", "317": "<(LOCAL,int j: int)<SUB>51</SUB>>", "319": "<(IDENTIFIER,j,int j = first + 1)<SUB>51</SUB>>", "321": "<(IDENTIFIER,first,first + 1)<SUB>51</SUB>>", "323": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= first + d[i])<SUB>51</SUB>>", "325": "<(&lt;operator&gt;.addition,first + d[i])<SUB>51</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>51</SUB>>", "329": "<(IDENTIFIER,i,first + d[i])<SUB>51</SUB>>", "331": "<(IDENTIFIER,j,j++)<SUB>51</SUB>>", "333": "<(CONTROL_STRUCTURE,if (p == K),if (p == K))<SUB>52</SUB>>", "335": "<(IDENTIFIER,p,p == K)<SUB>52</SUB>>", "337": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "339": "<(IDENTIFIER,fn,fn++)<SUB>53</SUB>>", "341": "<(IDENTIFIER,p,p = 0)<SUB>53</SUB>>", "343": "<(&lt;operator&gt;.postIncrement,p++)<SUB>55</SUB>>", "345": "<(&lt;operator&gt;.assignment,f[j] = fn)<SUB>55</SUB>>", "347": "<(IDENTIFIER,f,f[j] = fn)<SUB>55</SUB>>", "349": "<(IDENTIFIER,fn,f[j] = fn)<SUB>55</SUB>>", "351": "<(IDENTIFIER,first,first += d[i])<SUB>57</SUB>>", "353": "<(IDENTIFIER,d,first += d[i])<SUB>57</SUB>>", "355": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= N); i++),for (int i = 2; Some(i &lt;= N); i++))<SUB>59</SUB>>", "357": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>59</SUB>>", "359": "<(LITERAL,2,int i = 2)<SUB>59</SUB>>", "361": "<(IDENTIFIER,i,i &lt;= N)<SUB>59</SUB>>", "363": "<(&lt;operator&gt;.postIncrement,i++)<SUB>59</SUB>>", "365": "<(format,format(&quot;%d &quot;, f[i]))<SUB>60</SUB>>", "367": "<(LITERAL,&quot;%d &quot;,format(&quot;%d &quot;, f[i]))<SUB>60</SUB>>", "369": "<(IDENTIFIER,f,format(&quot;%d &quot;, f[i]))<SUB>60</SUB>>", "371": "<(close,close())<SUB>61</SUB>>", "373": "<(MODIFIER,PUBLIC)>", "375": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}