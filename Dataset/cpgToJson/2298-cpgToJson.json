{"edges": [["21", "23"], ["21", "177"], ["21", "178"], ["21", "179"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "46"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "72"], ["23", "85"], ["23", "140"], ["23", "148"], ["23", "149"], ["23", "153"], ["23", "167"], ["23", "173"], ["23", "175"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "71"], ["69", "70"], ["72", "73"], ["72", "78"], ["72", "81"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["96", "97"], ["96", "104"], ["96", "125"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "113"], ["111", "117"], ["113", "114"], ["113", "116"], ["114", "115"], ["117", "118"], ["117", "124"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "123"], ["121", "122"], ["125", "126"], ["126", "127"], ["127", "128"], ["127", "133"], ["127", "136"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "145"], ["143", "144"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["153", "154"], ["153", "156"], ["154", "155"], ["156", "157"], ["156", "158"], ["156", "162"], ["158", "159"], ["158", "160"], ["160", "161"], ["162", "163"], ["162", "164"], ["162", "165"], ["165", "166"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["169", "172"], ["173", "174"], ["175", "176"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "45"], ["43", "46"], ["46", "51"], ["49", "55"], ["140", "151"], ["149", "154"], ["167", "173"], ["173", "175"], ["175", "179"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["45", "43"], ["51", "49"], ["55", "58"], ["58", "65"], ["58", "74"], ["61", "58"], ["73", "78"], ["73", "82"], ["78", "87"], ["87", "90"], ["90", "100"], ["90", "143"], ["93", "90"], ["142", "140"], ["151", "149"], ["154", "160"], ["154", "169"], ["169", "167"], ["30", "28"], ["37", "35"], ["64", "61"], ["74", "73"], ["82", "87"], ["143", "145"], ["145", "142"], ["158", "165"], ["162", "154"], ["65", "69"], ["68", "64"], ["97", "107"], ["97", "129"], ["160", "158"], ["165", "162"], ["69", "68"], ["98", "97"], ["100", "98"], ["106", "114"], ["106", "93"], ["111", "93"], ["107", "106"], ["113", "121"], ["117", "111"], ["128", "133"], ["128", "137"], ["133", "93"], ["114", "113"], ["118", "117"], ["129", "128"], ["137", "93"], ["120", "118"], ["121", "120"], ["21", "26"], ["22", "179"], ["24", "179"], ["27", "179"], ["27", "179"], ["31", "179"], ["34", "179"], ["34", "179"], ["41", "179"], ["39", "179"], ["39", "179"], ["43", "179"], ["46", "179"], ["49", "179"], ["49", "179"], ["49", "179"], ["55", "179"], ["73", "179"], ["73", "179"], ["82", "179"], ["78", "179"], ["87", "179"], ["90", "179"], ["90", "179"], ["143", "179"], ["142", "179"], ["145", "179"], ["142", "179"], ["140", "179"], ["140", "179"], ["151", "179"], ["149", "179"], ["154", "179"], ["154", "179"], ["167", "179"], ["167", "179"], ["173", "179"], ["175", "179"], ["175", "179"], ["162", "179"], ["162", "179"], ["162", "179"], ["97", "179"], ["97", "179"], ["128", "179"], ["128", "179"], ["137", "179"], ["133", "179"], ["106", "179"], ["106", "179"], ["111", "179"], ["117", "179"], ["111", "179"], ["111", "179"], ["93", "179"], ["64", "179"], ["69", "179"], ["68", "179"], ["64", "179"], ["64", "179"], ["61", "179"], ["169", "179"], ["162", "179"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["21", "43"], ["51", "49"], ["142", "140"], ["142", "140"], ["151", "149"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["43", "46"], ["21", "46"], ["21", "55"], ["21", "87"], ["34", "167"], ["21", "167"], ["169", "167"], ["169", "167"], ["167", "173"], ["21", "173"], ["173", "175"], ["21", "175"], ["27", "41"], ["21", "41"], ["39", "51"], ["21", "51"], ["55", "58"], ["61", "58"], ["21", "58"], ["51", "58"], ["58", "61"], ["21", "61"], ["68", "64"], ["68", "64"], ["49", "73"], ["21", "73"], ["46", "78"], ["21", "78"], ["87", "90"], ["93", "90"], ["21", "90"], ["58", "90"], ["100", "93"], ["21", "93"], ["143", "142"], ["90", "142"], ["21", "142"], ["140", "151"], ["21", "151"], ["149", "154"], ["160", "154"], ["21", "154"], ["160", "158"], ["21", "169"], ["46", "82"], ["21", "82"], ["82", "143"], ["78", "143"], ["137", "143"], ["133", "143"], ["111", "143"], ["21", "143"], ["90", "145"], ["21", "145"], ["21", "162"], ["158", "162"], ["165", "162"], ["69", "68"], ["21", "68"], ["49", "97"], ["21", "97"], ["154", "160"], ["21", "160"], ["21", "165"], ["41", "69"], ["21", "69"], ["90", "100"], ["21", "100"], ["49", "106"], ["128", "106"], ["64", "106"], ["21", "106"], ["118", "111"], ["21", "111"], ["118", "111"], ["113", "111"], ["113", "111"], ["114", "113"], ["21", "113"], ["118", "117"], ["118", "117"], ["21", "117"], ["49", "128"], ["106", "128"], ["64", "128"], ["21", "128"], ["82", "133"], ["78", "133"], ["137", "133"], ["111", "133"], ["21", "133"], ["82", "114"], ["78", "114"], ["137", "114"], ["133", "114"], ["111", "114"], ["21", "114"], ["121", "118"], ["21", "118"], ["120", "118"], ["120", "118"], ["82", "137"], ["78", "137"], ["133", "137"], ["111", "137"], ["21", "137"], ["121", "120"], ["21", "120"], ["114", "121"], ["21", "121"], ["58", "68"], ["58", "64"], ["58", "69"], ["58", "65"], ["58", "58"], ["58", "61"], ["73", "82"], ["73", "78"], ["90", "98"], ["90", "97"], ["90", "93"], ["90", "90"], ["90", "100"], ["154", "160"], ["154", "154"], ["154", "162"], ["154", "165"], ["154", "158"], ["97", "107"], ["97", "128"], ["97", "106"], ["97", "129"], ["106", "120"], ["106", "113"], ["106", "114"], ["106", "121"], ["106", "118"], ["106", "117"], ["106", "111"], ["128", "137"], ["128", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,statements = new ArrayList&lt;&gt;())<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "47": "<(IDENTIFIER,statements,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,char[] c = new char[n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new char[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,c[i] = charAt(0))<SUB>10</SUB>>", "69": "<(next,next())<SUB>10</SUB>>", "71": "<(LITERAL,0,charAt(0))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.equals,c[0] == 's')<SUB>13</SUB>>", "75": "<(IDENTIFIER,c,c[0] == 's')<SUB>13</SUB>>", "77": "<(LITERAL,'s',c[0] == 's')<SUB>13</SUB>>", "79": "<(IDENTIFIER,statements,add(0))<SUB>14</SUB>>", "81": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "83": "<(IDENTIFIER,statements,add(1))<SUB>16</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "89": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.equals,c[i - 1] == 'f')<SUB>19</SUB>>", "99": "<(IDENTIFIER,c,c[i - 1] == 'f')<SUB>19</SUB>>", "101": "<(IDENTIFIER,i,i - 1)<SUB>19</SUB>>", "103": "<(LITERAL,'f',c[i - 1] == 'f')<SUB>19</SUB>>", "105": "<(CONTROL_STRUCTURE,if (c[i] == 'f'),if (c[i] == 'f'))<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>20</SUB>>", "109": "<(IDENTIFIER,i,c[i] == 'f')<SUB>20</SUB>>", "111": "<(set,set(statements.size() - 1, statements.get(statements.size() - 1) + 1))<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.subtraction,statements.size() - 1)<SUB>21</SUB>>", "115": "<(IDENTIFIER,statements,size())<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.addition,statements.get(statements.size() - 1) + 1)<SUB>21</SUB>>", "119": "<(IDENTIFIER,statements,get(statements.size() - 1))<SUB>21</SUB>>", "121": "<(size,size())<SUB>21</SUB>>", "123": "<(LITERAL,1,statements.size() - 1)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "127": "<(CONTROL_STRUCTURE,if (c[i] == 's'),if (c[i] == 's'))<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>24</SUB>>", "131": "<(IDENTIFIER,i,c[i] == 's')<SUB>24</SUB>>", "133": "<(add,add(0))<SUB>25</SUB>>", "135": "<(LITERAL,0,add(0))<SUB>25</SUB>>", "137": "<(add,add(1))<SUB>27</SUB>>", "139": "<(LITERAL,1,add(1))<SUB>27</SUB>>", "141": "<(IDENTIFIER,memo,memo = new int[statements.size()][n + 1])<SUB>32</SUB>>", "143": "<(size,size())<SUB>32</SUB>>", "145": "<(&lt;operator&gt;.addition,n + 1)<SUB>32</SUB>>", "147": "<(LITERAL,1,n + 1)<SUB>32</SUB>>", "149": "<(&lt;operator&gt;.assignment,)<SUB>34</SUB>>", "151": "<(iterator,&lt;empty&gt;)<SUB>34</SUB>>", "153": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>34</SUB>>", "155": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "157": "<(LOCAL,a: int[])<SUB>34</SUB>>", "159": "<(IDENTIFIER,a,&lt;empty&gt;)>", "161": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "163": "<(IDENTIFIER,Arrays,fill(a, -1))<SUB>35</SUB>>", "165": "<(&lt;operator&gt;.minus,-1)<SUB>35</SUB>>", "167": "<(println,println(solve(0, 0)))<SUB>36</SUB>>", "169": "<(solve,solve(0, 0))<SUB>36</SUB>>", "171": "<(LITERAL,0,solve(0, 0))<SUB>36</SUB>>", "173": "<(flush,flush())<SUB>37</SUB>>", "175": "<(close,close())<SUB>38</SUB>>", "177": "<(MODIFIER,PUBLIC)>", "179": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}