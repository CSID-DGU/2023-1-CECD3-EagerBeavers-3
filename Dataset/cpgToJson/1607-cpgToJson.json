{"edges": [["21", "23"], ["21", "141"], ["21", "142"], ["21", "143"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "49"], ["23", "6"], ["23", "53"], ["23", "56"], ["23", "59"], ["23", "60"], ["23", "63"], ["23", "89"], ["23", "92"], ["23", "120"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["56", "5"], ["56", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "82"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "114"], ["112", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "128"], ["120", "134"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["135", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "51"], ["49", "55"], ["53", "57"], ["56", "60"], ["60", "65"], ["89", "94"], ["26", "24"], ["41", "39"], ["47", "45"], ["51", "49"], ["55", "53"], ["57", "56"], ["65", "68"], ["68", "75"], ["68", "89"], ["71", "68"], ["94", "97"], ["97", "105"], ["97", "122"], ["100", "97"], ["121", "132"], ["121", "139"], ["29", "36"], ["32", "27"], ["43", "41"], ["74", "83"], ["82", "71"], ["122", "121"], ["122", "125"], ["125", "121"], ["129", "143"], ["31", "29"], ["34", "32"], ["75", "80"], ["78", "74"], ["83", "86"], ["86", "82"], ["104", "112"], ["104", "100"], ["130", "129"], ["136", "143"], ["36", "34"], ["80", "78"], ["105", "108"], ["108", "104"], ["112", "115"], ["132", "130"], ["137", "136"], ["115", "122"], ["115", "100"], ["139", "137"], ["21", "26"], ["22", "143"], ["24", "143"], ["29", "143"], ["32", "143"], ["32", "143"], ["32", "143"], ["27", "143"], ["41", "143"], ["39", "143"], ["39", "143"], ["45", "143"], ["49", "143"], ["49", "143"], ["49", "143"], ["53", "143"], ["56", "143"], ["57", "143"], ["56", "143"], ["56", "143"], ["60", "143"], ["89", "143"], ["89", "143"], ["94", "143"], ["97", "143"], ["97", "143"], ["97", "143"], ["104", "143"], ["104", "143"], ["104", "143"], ["112", "143"], ["115", "143"], ["100", "143"], ["122", "143"], ["121", "143"], ["125", "143"], ["121", "143"], ["121", "143"], ["129", "143"], ["78", "143"], ["80", "143"], ["78", "143"], ["74", "143"], ["74", "143"], ["82", "143"], ["82", "143"], ["82", "143"], ["71", "143"], ["89", "143"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["47", "45"], ["51", "49"], ["21", "53"], ["21", "60"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["53", "56"], ["21", "56"], ["57", "56"], ["21", "65"], ["21", "89"], ["45", "89"], ["74", "89"], ["21", "94"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["39", "47"], ["21", "47"], ["47", "51"], ["21", "51"], ["43", "57"], ["21", "57"], ["65", "68"], ["71", "68"], ["21", "68"], ["51", "68"], ["68", "71"], ["21", "71"], ["78", "74"], ["78", "74"], ["45", "82"], ["74", "82"], ["94", "97"], ["100", "97"], ["21", "97"], ["68", "97"], ["97", "100"], ["21", "100"], ["122", "121"], ["122", "121"], ["125", "121"], ["125", "121"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["60", "122"], ["115", "122"], ["21", "122"], ["122", "125"], ["21", "125"], ["21", "129"], ["41", "78"], ["21", "78"], ["80", "78"], ["89", "104"], ["45", "104"], ["74", "104"], ["49", "104"], ["82", "104"], ["21", "136"], ["56", "80"], ["21", "80"], ["60", "112"], ["115", "112"], ["21", "112"], ["112", "115"], ["21", "115"], ["68", "68"], ["68", "75"], ["68", "74"], ["68", "82"], ["68", "80"], ["68", "83"], ["68", "71"], ["68", "78"], ["68", "86"], ["97", "104"], ["97", "105"], ["97", "108"], ["121", "136"], ["121", "132"], ["121", "129"], ["121", "137"], ["121", "130"], ["121", "139"], ["122", "125"], ["104", "115"], ["104", "97"], ["104", "112"], ["104", "100"], ["115", "97"], ["115", "100"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int i = parseInt(in.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(in.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,numbers = new int[i])<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[i])>", "49": "<(&lt;operator&gt;.assignment,numbersCopy = new int[i])<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[i])>", "6": "<(LOCAL,StringTokenizer stringTokenizer: ANY)<SUB>6</SUB>>", "54": "<(IDENTIFIER,stringTokenizer,ANY stringTokenizer = new StringTokenizer(in.readLine()))<SUB>6</SUB>>", "56": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>6</SUB>>", "57": "<(readLine,readLine())<SUB>6</SUB>>", "59": "<(LOCAL,int numOutOfPlace: int)<SUB>7</SUB>>", "61": "<(IDENTIFIER,numOutOfPlace,int numOutOfPlace = 0)<SUB>7</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "67": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "69": "<(IDENTIFIER,j,j &lt; i)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,numbers[j])<SUB>9</SUB>>", "77": "<(IDENTIFIER,j,numbers[j] = parseInt(stringTokenizer.nextToken()))<SUB>9</SUB>>", "79": "<(IDENTIFIER,Integer,parseInt(stringTokenizer.nextToken()))<SUB>9</SUB>>", "81": "<(IDENTIFIER,stringTokenizer,nextToken())<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,numbersCopy[j])<SUB>10</SUB>>", "85": "<(IDENTIFIER,j,numbersCopy[j] = numbers[j])<SUB>10</SUB>>", "87": "<(IDENTIFIER,numbers,numbersCopy[j] = numbers[j])<SUB>10</SUB>>", "89": "<(sort,sort(numbers))<SUB>12</SUB>>", "91": "<(IDENTIFIER,numbers,sort(numbers))<SUB>12</SUB>>", "93": "<(LOCAL,int j: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,j &lt; i)<SUB>13</SUB>>", "101": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,if (numbers[j] != numbersCopy[j]),if (numbers[j] != numbersCopy[j]))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,numbers[j])<SUB>14</SUB>>", "107": "<(IDENTIFIER,j,numbers[j] != numbersCopy[j])<SUB>14</SUB>>", "109": "<(IDENTIFIER,numbersCopy,numbers[j] != numbersCopy[j])<SUB>14</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "113": "<(IDENTIFIER,numOutOfPlace,numOutOfPlace++)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.greaterThan,numOutOfPlace &gt; 2)<SUB>16</SUB>>", "117": "<(LITERAL,2,numOutOfPlace &gt; 2)<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,break;,break;)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.logicalOr,numOutOfPlace == 0 || numOutOfPlace == 2)<SUB>21</SUB>>", "123": "<(IDENTIFIER,numOutOfPlace,numOutOfPlace == 0)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.equals,numOutOfPlace == 2)<SUB>21</SUB>>", "127": "<(LITERAL,2,numOutOfPlace == 2)<SUB>21</SUB>>", "129": "<(println,System.out.println(&quot;YES&quot;))<SUB>22</SUB>>", "131": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>22</SUB>>", "133": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>22</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "139": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}