{"edges": [["19", "20"], ["19", "21"], ["19", "428"], ["19", "429"], ["19", "430"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "58"], ["21", "59"], ["21", "66"], ["21", "98"], ["21", "130"], ["21", "131"], ["21", "136"], ["21", "391"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "142"], ["136", "173"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["173", "174"], ["174", "175"], ["174", "176"], ["174", "186"], ["174", "352"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "184"], ["178", "185"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "196"], ["186", "198"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["199", "200"], ["199", "201"], ["199", "204"], ["199", "207"], ["199", "209"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["209", "210"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "218"], ["210", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["220", "222"], ["220", "227"], ["220", "256"], ["220", "285"], ["220", "314"], ["220", "343"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["231", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["234", "237"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "244"], ["239", "240"], ["239", "241"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "255"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["260", "261"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["263", "266"], ["266", "267"], ["266", "274"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "282"], ["275", "276"], ["275", "281"], ["276", "277"], ["276", "278"], ["278", "279"], ["278", "280"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "291"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "290"], ["291", "292"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "296"], ["294", "297"], ["297", "298"], ["297", "303"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["303", "304"], ["303", "313"], ["304", "305"], ["304", "310"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "309"], ["310", "311"], ["310", "312"], ["314", "315"], ["314", "320"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["320", "321"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "325"], ["323", "326"], ["326", "327"], ["326", "332"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["332", "333"], ["332", "340"], ["333", "334"], ["333", "339"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "338"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "351"], ["344", "345"], ["344", "350"], ["345", "346"], ["345", "349"], ["346", "347"], ["346", "348"], ["352", "353"], ["352", "354"], ["352", "357"], ["352", "360"], ["352", "362"], ["354", "355"], ["354", "356"], ["357", "358"], ["357", "359"], ["360", "361"], ["362", "363"], ["363", "364"], ["363", "365"], ["363", "368"], ["363", "371"], ["363", "373"], ["365", "366"], ["365", "367"], ["368", "369"], ["368", "370"], ["371", "372"], ["373", "374"], ["374", "375"], ["374", "380"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "382"], ["382", "383"], ["382", "390"], ["383", "384"], ["383", "389"], ["384", "385"], ["384", "386"], ["386", "387"], ["386", "388"], ["391", "392"], ["391", "393"], ["391", "396"], ["391", "399"], ["391", "401"], ["393", "394"], ["393", "395"], ["396", "397"], ["396", "398"], ["399", "400"], ["401", "402"], ["401", "424"], ["402", "403"], ["402", "404"], ["402", "407"], ["402", "410"], ["402", "412"], ["404", "405"], ["404", "406"], ["407", "408"], ["407", "409"], ["410", "411"], ["412", "413"], ["413", "414"], ["413", "417"], ["414", "415"], ["414", "416"], ["417", "418"], ["417", "423"], ["418", "419"], ["418", "422"], ["419", "420"], ["419", "421"], ["424", "425"], ["425", "426"], ["425", "427"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "55"], ["51", "62"], ["59", "68"], ["131", "138"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "51"], ["61", "59"], ["68", "71"], ["71", "79"], ["71", "100"], ["74", "71"], ["100", "105"], ["103", "113"], ["103", "133"], ["108", "105"], ["133", "131"], ["137", "145"], ["137", "180"], ["393", "396"], ["396", "430"], ["396", "404"], ["399", "396"], ["28", "26"], ["55", "53"], ["62", "61"], ["105", "103"], ["138", "137"], ["424", "399"], ["79", "84"], ["82", "92"], ["82", "74"], ["87", "84"], ["113", "116"], ["116", "124"], ["116", "108"], ["119", "116"], ["145", "148"], ["148", "156"], ["148", "393"], ["151", "148"], ["176", "188"], ["404", "407"], ["407", "416"], ["407", "427"], ["410", "407"], ["425", "424"], ["84", "82"], ["90", "87"], ["122", "119"], ["178", "176"], ["188", "193"], ["191", "201"], ["191", "354"], ["196", "193"], ["354", "357"], ["357", "365"], ["357", "393"], ["360", "357"], ["413", "410"], ["427", "425"], ["91", "96"], ["96", "90"], ["123", "128"], ["128", "122"], ["156", "159"], ["159", "167"], ["159", "151"], ["162", "159"], ["179", "178"], ["193", "191"], ["414", "419"], ["417", "413"], ["92", "91"], ["124", "123"], ["165", "162"], ["180", "179"], ["201", "204"], ["204", "212"], ["204", "196"], ["207", "204"], ["365", "368"], ["368", "376"], ["368", "360"], ["371", "368"], ["416", "414"], ["418", "417"], ["166", "171"], ["171", "165"], ["374", "371"], ["419", "418"], ["167", "166"], ["212", "215"], ["215", "226"], ["215", "207"], ["218", "215"], ["375", "386"], ["380", "374"], ["222", "228"], ["343", "218"], ["376", "375"], ["382", "380"], ["224", "222"], ["228", "241"], ["228", "257"], ["257", "268"], ["257", "288"], ["286", "299"], ["286", "317"], ["315", "328"], ["315", "346"], ["344", "343"], ["383", "382"], ["226", "224"], ["232", "257"], ["261", "288"], ["288", "286"], ["292", "317"], ["317", "315"], ["321", "346"], ["345", "344"], ["384", "383"], ["234", "232"], ["263", "261"], ["294", "292"], ["323", "321"], ["346", "345"], ["386", "384"], ["237", "234"], ["266", "263"], ["297", "294"], ["326", "323"], ["238", "249"], ["245", "237"], ["267", "278"], ["274", "266"], ["298", "307"], ["303", "297"], ["327", "336"], ["332", "326"], ["239", "238"], ["246", "245"], ["268", "271"], ["271", "267"], ["275", "282"], ["282", "274"], ["299", "298"], ["304", "303"], ["328", "327"], ["333", "340"], ["340", "332"], ["241", "239"], ["247", "252"], ["252", "246"], ["276", "275"], ["305", "310"], ["310", "304"], ["334", "333"], ["249", "247"], ["278", "276"], ["307", "305"], ["336", "334"], ["19", "24"], ["20", "430"], ["22", "430"], ["25", "430"], ["25", "430"], ["30", "430"], ["35", "430"], ["42", "430"], ["40", "430"], ["40", "430"], ["45", "430"], ["45", "430"], ["51", "430"], ["53", "430"], ["51", "430"], ["51", "430"], ["59", "430"], ["59", "430"], ["59", "430"], ["103", "430"], ["103", "430"], ["131", "430"], ["133", "430"], ["131", "430"], ["131", "430"], ["138", "430"], ["137", "430"], ["137", "430"], ["176", "430"], ["178", "430"], ["178", "430"], ["176", "430"], ["176", "430"], ["188", "430"], ["191", "430"], ["193", "430"], ["191", "430"], ["191", "430"], ["360", "430"], ["196", "430"], ["393", "430"], ["396", "430"], ["396", "430"], ["396", "430"], ["399", "430"], ["151", "430"], ["108", "430"], ["74", "430"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["61", "59"], ["61", "59"], ["133", "131"], ["133", "131"], ["22", "25"], ["19", "25"], ["19", "68"], ["19", "100"], ["19", "393"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["35", "47"], ["47", "53"], ["19", "53"], ["55", "53"], ["55", "53"], ["62", "61"], ["62", "61"], ["55", "61"], ["19", "61"], ["68", "71"], ["74", "71"], ["19", "71"], ["62", "71"], ["71", "74"], ["19", "74"], ["100", "103"], ["108", "103"], ["19", "103"], ["105", "103"], ["105", "103"], ["103", "108"], ["19", "108"], ["105", "133"], ["19", "133"], ["61", "133"], ["116", "133"], ["84", "133"], ["138", "137"], ["138", "137"], ["19", "137"], ["393", "396"], ["399", "396"], ["19", "396"], ["357", "396"], ["148", "396"], ["396", "399"], ["19", "399"], ["47", "55"], ["19", "55"], ["53", "62"], ["19", "62"], ["19", "79"], ["71", "105"], ["19", "105"], ["19", "113"], ["40", "138"], ["19", "138"], ["19", "145"], ["178", "176"], ["178", "176"], ["178", "176"], ["19", "404"], ["413", "424"], ["79", "82"], ["87", "82"], ["19", "82"], ["84", "82"], ["84", "82"], ["82", "87"], ["19", "87"], ["96", "90"], ["113", "116"], ["119", "116"], ["19", "116"], ["61", "116"], ["84", "116"], ["116", "119"], ["19", "119"], ["128", "122"], ["145", "148"], ["151", "148"], ["19", "148"], ["133", "148"], ["148", "151"], ["19", "151"], ["19", "188"], ["19", "354"], ["404", "407"], ["410", "407"], ["19", "407"], ["133", "407"], ["178", "407"], ["368", "407"], ["215", "407"], ["159", "407"], ["407", "410"], ["19", "410"], ["61", "84"], ["19", "84"], ["19", "156"], ["180", "178"], ["180", "178"], ["19", "178"], ["133", "178"], ["133", "178"], ["188", "191"], ["196", "191"], ["19", "191"], ["193", "191"], ["193", "191"], ["191", "196"], ["249", "196"], ["278", "196"], ["307", "196"], ["336", "196"], ["19", "196"], ["354", "357"], ["360", "357"], ["19", "357"], ["178", "357"], ["204", "357"], ["357", "360"], ["19", "360"], ["424", "413"], ["374", "413"], ["165", "413"], ["19", "413"], ["42", "96"], ["19", "96"], ["42", "128"], ["96", "128"], ["19", "128"], ["156", "159"], ["162", "159"], ["19", "159"], ["133", "159"], ["159", "162"], ["19", "162"], ["171", "165"], ["180", "179"], ["180", "179"], ["19", "179"], ["180", "193"], ["19", "193"], ["19", "201"], ["19", "365"], ["374", "417"], ["165", "417"], ["19", "417"], ["138", "180"], ["19", "180"], ["201", "204"], ["207", "204"], ["19", "204"], ["178", "204"], ["288", "204"], ["204", "207"], ["286", "207"], ["19", "207"], ["365", "368"], ["371", "368"], ["19", "368"], ["178", "368"], ["215", "368"], ["368", "371"], ["19", "371"], ["380", "374"], ["380", "374"], ["19", "171"], ["19", "212"], ["212", "215"], ["218", "215"], ["19", "215"], ["178", "215"], ["317", "215"], ["315", "218"], ["19", "218"], ["222", "343"], ["232", "343"], ["261", "343"], ["292", "343"], ["321", "343"], ["19", "343"], ["19", "380"], ["204", "228"], ["286", "228"], ["19", "228"], ["234", "232"], ["234", "232"], ["234", "232"], ["215", "257"], ["19", "257"], ["263", "261"], ["263", "261"], ["263", "261"], ["228", "286"], ["252", "286"], ["19", "286"], ["288", "286"], ["288", "286"], ["294", "292"], ["294", "292"], ["294", "292"], ["257", "315"], ["282", "315"], ["19", "315"], ["317", "315"], ["317", "315"], ["323", "321"], ["323", "321"], ["323", "321"], ["204", "288"], ["19", "288"], ["215", "317"], ["19", "317"], ["263", "234"], ["294", "234"], ["323", "234"], ["19", "234"], ["222", "234"], ["234", "263"], ["294", "263"], ["323", "263"], ["19", "263"], ["222", "263"], ["232", "263"], ["234", "294"], ["263", "294"], ["323", "294"], ["19", "294"], ["222", "294"], ["232", "294"], ["261", "294"], ["122", "294"], ["234", "323"], ["263", "323"], ["294", "323"], ["19", "323"], ["222", "323"], ["232", "323"], ["261", "323"], ["292", "323"], ["90", "323"], ["193", "386"], ["19", "386"], ["122", "297"], ["90", "326"], ["257", "271"], ["19", "271"], ["271", "282"], ["19", "282"], ["315", "340"], ["19", "340"], ["228", "241"], ["19", "241"], ["241", "252"], ["19", "252"], ["286", "310"], ["19", "310"], ["191", "249"], ["278", "249"], ["307", "249"], ["336", "249"], ["19", "249"], ["191", "278"], ["249", "278"], ["307", "278"], ["336", "278"], ["19", "278"], ["191", "307"], ["249", "307"], ["278", "307"], ["336", "307"], ["19", "307"], ["191", "336"], ["249", "336"], ["278", "336"], ["307", "336"], ["19", "336"], ["71", "84"], ["71", "74"], ["71", "71"], ["71", "79"], ["71", "82"], ["103", "108"], ["103", "116"], ["103", "113"], ["103", "103"], ["103", "105"], ["137", "188"], ["137", "148"], ["137", "180"], ["137", "176"], ["137", "357"], ["137", "145"], ["137", "179"], ["137", "178"], ["137", "191"], ["137", "193"], ["137", "354"], ["396", "396"], ["396", "424"], ["396", "425"], ["396", "404"], ["396", "427"], ["396", "399"], ["396", "407"], ["82", "84"], ["82", "96"], ["82", "92"], ["82", "87"], ["82", "91"], ["82", "90"], ["82", "82"], ["116", "128"], ["116", "116"], ["116", "122"], ["116", "123"], ["116", "119"], ["116", "124"], ["148", "148"], ["148", "159"], ["148", "151"], ["148", "156"], ["407", "418"], ["407", "416"], ["407", "414"], ["407", "410"], ["407", "413"], ["407", "417"], ["407", "419"], ["407", "407"], ["191", "196"], ["191", "204"], ["191", "201"], ["191", "191"], ["191", "193"], ["357", "368"], ["357", "357"], ["357", "365"], ["357", "360"], ["159", "167"], ["159", "162"], ["159", "159"], ["159", "171"], ["159", "166"], ["159", "165"], ["204", "215"], ["204", "204"], ["204", "207"], ["204", "212"], ["368", "376"], ["368", "384"], ["368", "383"], ["368", "382"], ["368", "374"], ["368", "380"], ["368", "368"], ["368", "386"], ["368", "375"], ["368", "371"], ["215", "215"], ["215", "226"], ["215", "228"], ["215", "317"], ["215", "288"], ["215", "224"], ["215", "315"], ["215", "346"], ["215", "222"], ["215", "257"], ["215", "343"], ["215", "286"], ["215", "345"], ["215", "218"], ["215", "344"], ["228", "247"], ["228", "238"], ["228", "249"], ["228", "237"], ["228", "241"], ["228", "232"], ["228", "245"], ["228", "246"], ["228", "239"], ["228", "252"], ["228", "234"], ["257", "268"], ["257", "276"], ["257", "274"], ["257", "278"], ["257", "282"], ["257", "261"], ["257", "275"], ["257", "267"], ["257", "263"], ["257", "271"], ["257", "266"], ["286", "292"], ["286", "298"], ["286", "304"], ["286", "310"], ["286", "305"], ["286", "297"], ["286", "307"], ["286", "299"], ["286", "294"], ["286", "303"], ["315", "334"], ["315", "326"], ["315", "336"], ["315", "340"], ["315", "328"], ["315", "323"], ["315", "321"], ["315", "332"], ["315", "333"], ["315", "327"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int k: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,k,int k = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[][] arr = new int[n][m])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n][m])>", "49": "<(IDENTIFIER,m,new int[n][m])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[][] cross = new int[n][m - 1])<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n][m - 1])>", "55": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>7</SUB>>", "57": "<(LITERAL,1,m - 1)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[][] up = new int[n - 1][m])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "63": "<(IDENTIFIER,n,n - 1)<SUB>8</SUB>>", "65": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>8</SUB>>", "67": "<(LOCAL,int i: int)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "73": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m - 1); j++),for (int j = 0; Some(j &lt; m - 1); j++))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "83": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>10</SUB>>", "85": "<(IDENTIFIER,m,m - 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>10</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,cross[i][j])<SUB>11</SUB>>", "93": "<(IDENTIFIER,cross,cross[i][j] = nextInt())<SUB>11</SUB>>", "95": "<(IDENTIFIER,j,cross[i][j] = nextInt())<SUB>11</SUB>>", "97": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "99": "<(LOCAL,int i: int)<SUB>14</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "107": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "115": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "117": "<(IDENTIFIER,j,j &lt; m)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,up[i][j])<SUB>16</SUB>>", "125": "<(IDENTIFIER,up,up[i][j] = nextInt())<SUB>16</SUB>>", "127": "<(IDENTIFIER,j,up[i][j] = nextInt())<SUB>16</SUB>>", "129": "<(IDENTIFIER,sc,nextInt())<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.assignment,int[][] fans = new int[n][m])<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.alloc,new int[n][m])>", "135": "<(IDENTIFIER,m,new int[n][m])<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.notEquals,k % 2 != 0)<SUB>20</SUB>>", "139": "<(IDENTIFIER,k,k % 2)<SUB>20</SUB>>", "141": "<(LITERAL,0,k % 2 != 0)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "147": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "149": "<(IDENTIFIER,i,i &lt; n)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "155": "<(LOCAL,int j: int)<SUB>22</SUB>>", "157": "<(IDENTIFIER,j,int j = 0)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>22</SUB>>", "161": "<(IDENTIFIER,m,j &lt; m)<SUB>22</SUB>>", "163": "<(IDENTIFIER,j,j++)<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.assignment,fans[i][j] = -1)<SUB>23</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,fans[i])<SUB>23</SUB>>", "169": "<(IDENTIFIER,i,fans[i][j] = -1)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.minus,-1)<SUB>23</SUB>>", "173": "<(CONTROL_STRUCTURE,else,else)<SUB>27</SUB>>", "175": "<(LOCAL,int[][][] ans: int[][][])<SUB>28</SUB>>", "177": "<(IDENTIFIER,ans,int[][][] ans = new int[(k / 2) + 1][n][m])<SUB>28</SUB>>", "179": "<(&lt;operator&gt;.addition,(k / 2) + 1)<SUB>28</SUB>>", "181": "<(IDENTIFIER,k,k / 2)<SUB>28</SUB>>", "183": "<(LITERAL,1,(k / 2) + 1)<SUB>28</SUB>>", "185": "<(IDENTIFIER,m,new int[(k / 2) + 1][n][m])<SUB>28</SUB>>", "187": "<(LOCAL,int l: int)<SUB>29</SUB>>", "189": "<(IDENTIFIER,l,int l = 1)<SUB>29</SUB>>", "191": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= k / 2)<SUB>29</SUB>>", "193": "<(&lt;operator&gt;.division,k / 2)<SUB>29</SUB>>", "195": "<(LITERAL,2,k / 2)<SUB>29</SUB>>", "197": "<(IDENTIFIER,l,l++)<SUB>29</SUB>>", "199": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>30</SUB>>", "201": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "203": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "205": "<(IDENTIFIER,i,i &lt; n)<SUB>30</SUB>>", "207": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "211": "<(LOCAL,int j: int)<SUB>31</SUB>>", "213": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>31</SUB>>", "217": "<(IDENTIFIER,m,j &lt; m)<SUB>31</SUB>>", "219": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "221": "<(LOCAL,int min: int)<SUB>32</SUB>>", "223": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>32</SUB>>", "225": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>32</SUB>>", "227": "<(CONTROL_STRUCTURE,if (i &gt; 0),if (i &gt; 0))<SUB>33</SUB>>", "229": "<(IDENTIFIER,i,i &gt; 0)<SUB>33</SUB>>", "231": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "233": "<(IDENTIFIER,min,min = Math.min(min, up[i - 1][j] + ans[l - 1][i - 1][j]))<SUB>34</SUB>>", "235": "<(IDENTIFIER,Math,Math.min(min, up[i - 1][j] + ans[l - 1][i - 1][j]))<SUB>34</SUB>>", "237": "<(&lt;operator&gt;.addition,up[i - 1][j] + ans[l - 1][i - 1][j])<SUB>34</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,up[i - 1])<SUB>34</SUB>>", "241": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>34</SUB>>", "243": "<(LITERAL,1,i - 1)<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,ans[l - 1][i - 1][j])<SUB>34</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,ans[l - 1])<SUB>34</SUB>>", "249": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>34</SUB>>", "251": "<(LITERAL,1,l - 1)<SUB>34</SUB>>", "253": "<(IDENTIFIER,i,i - 1)<SUB>34</SUB>>", "255": "<(IDENTIFIER,j,up[i - 1][j] + ans[l - 1][i - 1][j])<SUB>34</SUB>>", "257": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>36</SUB>>", "259": "<(LITERAL,0,j &gt; 0)<SUB>36</SUB>>", "261": "<(&lt;operator&gt;.assignment,min = Math.min(min, cross[i][j - 1] + ans[l - 1][i][j - 1]))<SUB>37</SUB>>", "263": "<(min,Math.min(min, cross[i][j - 1] + ans[l - 1][i][j - 1]))<SUB>37</SUB>>", "265": "<(IDENTIFIER,min,Math.min(min, cross[i][j - 1] + ans[l - 1][i][j - 1]))<SUB>37</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,cross[i][j - 1])<SUB>37</SUB>>", "269": "<(IDENTIFIER,cross,cross[i][j - 1] + ans[l - 1][i][j - 1])<SUB>37</SUB>>", "271": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>37</SUB>>", "273": "<(LITERAL,1,j - 1)<SUB>37</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,ans[l - 1][i])<SUB>37</SUB>>", "277": "<(IDENTIFIER,ans,cross[i][j - 1] + ans[l - 1][i][j - 1])<SUB>37</SUB>>", "279": "<(IDENTIFIER,l,l - 1)<SUB>37</SUB>>", "281": "<(IDENTIFIER,i,cross[i][j - 1] + ans[l - 1][i][j - 1])<SUB>37</SUB>>", "283": "<(IDENTIFIER,j,j - 1)<SUB>37</SUB>>", "285": "<(CONTROL_STRUCTURE,if (i &lt; n - 1),if (i &lt; n - 1))<SUB>39</SUB>>", "287": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>39</SUB>>", "289": "<(IDENTIFIER,n,n - 1)<SUB>39</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "293": "<(IDENTIFIER,min,min = Math.min(min, up[i][j] + ans[l - 1][i + 1][j]))<SUB>40</SUB>>", "295": "<(IDENTIFIER,Math,Math.min(min, up[i][j] + ans[l - 1][i + 1][j]))<SUB>40</SUB>>", "297": "<(&lt;operator&gt;.addition,up[i][j] + ans[l - 1][i + 1][j])<SUB>40</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,up[i])<SUB>40</SUB>>", "301": "<(IDENTIFIER,i,up[i][j] + ans[l - 1][i + 1][j])<SUB>40</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,ans[l - 1][i + 1][j])<SUB>40</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,ans[l - 1])<SUB>40</SUB>>", "307": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>40</SUB>>", "309": "<(LITERAL,1,l - 1)<SUB>40</SUB>>", "311": "<(IDENTIFIER,i,i + 1)<SUB>40</SUB>>", "313": "<(IDENTIFIER,j,up[i][j] + ans[l - 1][i + 1][j])<SUB>40</SUB>>", "315": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>42</SUB>>", "317": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>42</SUB>>", "319": "<(LITERAL,1,m - 1)<SUB>42</SUB>>", "321": "<(&lt;operator&gt;.assignment,min = Math.min(min, cross[i][j] + ans[l - 1][i][j + 1]))<SUB>43</SUB>>", "323": "<(min,Math.min(min, cross[i][j] + ans[l - 1][i][j + 1]))<SUB>43</SUB>>", "325": "<(IDENTIFIER,min,Math.min(min, cross[i][j] + ans[l - 1][i][j + 1]))<SUB>43</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,cross[i][j])<SUB>43</SUB>>", "329": "<(IDENTIFIER,cross,cross[i][j] + ans[l - 1][i][j + 1])<SUB>43</SUB>>", "331": "<(IDENTIFIER,j,cross[i][j] + ans[l - 1][i][j + 1])<SUB>43</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,ans[l - 1][i])<SUB>43</SUB>>", "335": "<(IDENTIFIER,ans,cross[i][j] + ans[l - 1][i][j + 1])<SUB>43</SUB>>", "337": "<(IDENTIFIER,l,l - 1)<SUB>43</SUB>>", "339": "<(IDENTIFIER,i,cross[i][j] + ans[l - 1][i][j + 1])<SUB>43</SUB>>", "341": "<(IDENTIFIER,j,j + 1)<SUB>43</SUB>>", "343": "<(&lt;operator&gt;.assignment,ans[l][i][j] = min)<SUB>45</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,ans[l][i])<SUB>45</SUB>>", "347": "<(IDENTIFIER,ans,ans[l][i][j] = min)<SUB>45</SUB>>", "349": "<(IDENTIFIER,i,ans[l][i][j] = min)<SUB>45</SUB>>", "351": "<(IDENTIFIER,min,ans[l][i][j] = min)<SUB>45</SUB>>", "353": "<(LOCAL,int i: int)<SUB>49</SUB>>", "355": "<(IDENTIFIER,i,int i = 0)<SUB>49</SUB>>", "357": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>49</SUB>>", "359": "<(IDENTIFIER,n,i &lt; n)<SUB>49</SUB>>", "361": "<(IDENTIFIER,i,i++)<SUB>49</SUB>>", "363": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>50</SUB>>", "365": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>50</SUB>>", "367": "<(LITERAL,0,int j = 0)<SUB>50</SUB>>", "369": "<(IDENTIFIER,j,j &lt; m)<SUB>50</SUB>>", "371": "<(&lt;operator&gt;.postIncrement,j++)<SUB>50</SUB>>", "373": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,fans[i][j])<SUB>51</SUB>>", "377": "<(IDENTIFIER,fans,fans[i][j] = 2 * ans[k / 2][i][j])<SUB>51</SUB>>", "379": "<(IDENTIFIER,j,fans[i][j] = 2 * ans[k / 2][i][j])<SUB>51</SUB>>", "381": "<(LITERAL,2,2 * ans[k / 2][i][j])<SUB>51</SUB>>", "383": "<(&lt;operator&gt;.indexAccess,ans[k / 2][i])<SUB>51</SUB>>", "385": "<(IDENTIFIER,ans,2 * ans[k / 2][i][j])<SUB>51</SUB>>", "387": "<(IDENTIFIER,k,k / 2)<SUB>51</SUB>>", "389": "<(IDENTIFIER,i,2 * ans[k / 2][i][j])<SUB>51</SUB>>", "391": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>55</SUB>>", "393": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>55</SUB>>", "395": "<(LITERAL,0,int i = 0)<SUB>55</SUB>>", "397": "<(IDENTIFIER,i,i &lt; n)<SUB>55</SUB>>", "399": "<(&lt;operator&gt;.postIncrement,i++)<SUB>55</SUB>>", "401": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "403": "<(LOCAL,int j: int)<SUB>56</SUB>>", "405": "<(IDENTIFIER,j,int j = 0)<SUB>56</SUB>>", "407": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>56</SUB>>", "409": "<(IDENTIFIER,m,j &lt; m)<SUB>56</SUB>>", "411": "<(IDENTIFIER,j,j++)<SUB>56</SUB>>", "413": "<(print,System.out.print(fans[i][j] + &quot; &quot;))<SUB>57</SUB>>", "415": "<(IDENTIFIER,System,System.out.print(fans[i][j] + &quot; &quot;))<SUB>57</SUB>>", "417": "<(&lt;operator&gt;.addition,fans[i][j] + &quot; &quot;)<SUB>57</SUB>>", "419": "<(&lt;operator&gt;.indexAccess,fans[i])<SUB>57</SUB>>", "421": "<(IDENTIFIER,i,fans[i][j] + &quot; &quot;)<SUB>57</SUB>>", "423": "<(LITERAL,&quot; &quot;,fans[i][j] + &quot; &quot;)<SUB>57</SUB>>", "425": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>59</SUB>>", "427": "<(FIELD_IDENTIFIER,out,out)<SUB>59</SUB>>", "429": "<(MODIFIER,STATIC)>"}}