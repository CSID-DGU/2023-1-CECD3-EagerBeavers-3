{"edges": [["29", "30"], ["29", "31"], ["29", "292"], ["29", "293"], ["29", "294"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "39"], ["31", "42"], ["31", "46"], ["31", "47"], ["31", "51"], ["31", "52"], ["31", "56"], ["31", "8"], ["31", "73"], ["31", "76"], ["31", "77"], ["31", "147"], ["31", "148"], ["31", "12"], ["31", "151"], ["31", "154"], ["31", "155"], ["31", "156"], ["31", "161"], ["31", "253"], ["31", "258"], ["31", "290"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["76", "7"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["108", "126"], ["109", "110"], ["109", "111"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["117", "125"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "124"], ["126", "127"], ["127", "10"], ["127", "128"], ["127", "131"], ["127", "132"], ["127", "143"], ["128", "129"], ["128", "130"], ["131", "9"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "138"], ["134", "142"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "141"], ["143", "144"], ["143", "145"], ["143", "146"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "11"], ["156", "157"], ["156", "158"], ["158", "159"], ["159", "160"], ["161", "162"], ["161", "164"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "170"], ["164", "182"], ["164", "183"], ["164", "14"], ["164", "188"], ["164", "191"], ["164", "192"], ["164", "193"], ["164", "198"], ["164", "240"], ["166", "167"], ["166", "168"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "179"], ["175", "181"], ["176", "177"], ["176", "178"], ["179", "180"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "13"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "207"], ["198", "209"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["205", "206"], ["207", "208"], ["209", "210"], ["210", "211"], ["210", "218"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["218", "219"], ["218", "226"], ["218", "233"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "245"], ["241", "242"], ["241", "243"], ["243", "244"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "251"], ["251", "252"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "267"], ["258", "269"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["265", "266"], ["267", "268"], ["269", "270"], ["269", "279"], ["269", "281"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["279", "280"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "289"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["290", "291"], ["32", "38"], ["35", "41"], ["39", "45"], ["42", "49"], ["47", "54"], ["52", "58"], ["73", "76"], ["76", "79"], ["148", "153"], ["151", "154"], ["154", "159"], ["156", "162"], ["253", "260"], ["290", "294"], ["34", "32"], ["36", "35"], ["41", "39"], ["43", "42"], ["49", "47"], ["54", "52"], ["58", "61"], ["61", "68"], ["61", "75"], ["64", "61"], ["75", "73"], ["79", "82"], ["82", "89"], ["82", "148"], ["85", "82"], ["153", "151"], ["158", "156"], ["162", "168"], ["162", "255"], ["255", "253"], ["260", "265"], ["263", "274"], ["263", "290"], ["267", "265"], ["38", "36"], ["45", "43"], ["67", "64"], ["89", "94"], ["159", "158"], ["166", "172"], ["170", "185"], ["183", "190"], ["188", "191"], ["191", "197"], ["193", "200"], ["265", "263"], ["270", "279"], ["279", "285"], ["281", "267"], ["68", "71"], ["71", "67"], ["94", "97"], ["97", "105"], ["97", "85"], ["100", "97"], ["168", "166"], ["172", "178"], ["185", "183"], ["190", "188"], ["195", "193"], ["200", "205"], ["203", "213"], ["203", "243"], ["207", "205"], ["241", "162"], ["241", "246"], ["272", "270"], ["283", "281"], ["103", "109"], ["176", "179"], ["179", "170"], ["197", "195"], ["205", "203"], ["243", "241"], ["246", "251"], ["249", "162"], ["273", "272"], ["284", "283"], ["105", "103"], ["109", "114"], ["109", "130"], ["178", "176"], ["211", "222"], ["211", "207"], ["251", "249"], ["274", "273"], ["285", "284"], ["113", "100"], ["212", "211"], ["219", "229"], ["226", "236"], ["233", "207"], ["114", "120"], ["128", "131"], ["131", "137"], ["132", "143"], ["143", "100"], ["213", "216"], ["216", "212"], ["221", "219"], ["228", "226"], ["235", "233"], ["118", "121"], ["121", "113"], ["130", "128"], ["222", "225"], ["225", "221"], ["229", "232"], ["232", "228"], ["236", "239"], ["239", "235"], ["120", "118"], ["135", "138"], ["138", "132"], ["137", "135"], ["29", "34"], ["30", "294"], ["32", "294"], ["35", "294"], ["35", "294"], ["39", "294"], ["42", "294"], ["42", "294"], ["49", "294"], ["47", "294"], ["47", "294"], ["52", "294"], ["52", "294"], ["52", "294"], ["73", "294"], ["76", "294"], ["82", "294"], ["82", "294"], ["148", "294"], ["151", "294"], ["154", "294"], ["159", "294"], ["158", "294"], ["156", "294"], ["162", "294"], ["162", "294"], ["255", "294"], ["253", "294"], ["253", "294"], ["260", "294"], ["263", "294"], ["265", "294"], ["263", "294"], ["263", "294"], ["290", "294"], ["290", "294"], ["270", "294"], ["284", "294"], ["283", "294"], ["281", "294"], ["281", "294"], ["267", "294"], ["179", "294"], ["179", "294"], ["170", "294"], ["185", "294"], ["185", "294"], ["183", "294"], ["183", "294"], ["188", "294"], ["191", "294"], ["193", "294"], ["193", "294"], ["193", "294"], ["205", "294"], ["203", "294"], ["243", "294"], ["241", "294"], ["246", "294"], ["246", "294"], ["249", "294"], ["211", "294"], ["211", "294"], ["219", "294"], ["219", "294"], ["226", "294"], ["233", "294"], ["207", "294"], ["89", "294"], ["89", "294"], ["94", "294"], ["97", "294"], ["97", "294"], ["85", "294"], ["103", "294"], ["103", "294"], ["109", "294"], ["128", "294"], ["138", "294"], ["138", "294"], ["132", "294"], ["143", "294"], ["143", "294"], ["143", "294"], ["114", "294"], ["113", "294"], ["121", "294"], ["121", "294"], ["113", "294"], ["100", "294"], ["67", "294"], ["71", "294"], ["67", "294"], ["67", "294"], ["64", "294"], ["170", "294"], ["29", "30"], ["29", "32"], ["29", "39"], ["49", "47"], ["54", "52"], ["29", "73"], ["29", "148"], ["29", "151"], ["158", "156"], ["32", "35"], ["29", "35"], ["39", "42"], ["29", "42"], ["29", "58"], ["73", "76"], ["29", "76"], ["29", "79"], ["151", "154"], ["29", "154"], ["42", "253"], ["29", "253"], ["255", "253"], ["255", "253"], ["29", "260"], ["253", "290"], ["281", "290"], ["29", "290"], ["35", "49"], ["29", "49"], ["47", "54"], ["29", "54"], ["58", "61"], ["64", "61"], ["29", "61"], ["54", "61"], ["61", "64"], ["29", "64"], ["71", "67"], ["79", "82"], ["85", "82"], ["29", "82"], ["61", "82"], ["97", "82"], ["138", "85"], ["121", "85"], ["29", "85"], ["82", "85"], ["29", "89"], ["159", "158"], ["156", "162"], ["168", "162"], ["29", "162"], ["168", "166"], ["185", "183"], ["185", "183"], ["29", "188"], ["148", "255"], ["241", "255"], ["249", "255"], ["29", "255"], ["260", "263"], ["267", "263"], ["29", "263"], ["265", "263"], ["285", "267"], ["29", "267"], ["82", "94"], ["29", "94"], ["76", "159"], ["143", "159"], ["114", "159"], ["29", "159"], ["29", "170"], ["172", "170"], ["172", "170"], ["176", "170"], ["179", "170"], ["188", "191"], ["29", "191"], ["29", "200"], ["154", "265"], ["285", "265"], ["251", "265"], ["29", "265"], ["253", "270"], ["281", "270"], ["29", "270"], ["274", "270"], ["274", "270"], ["274", "279"], ["29", "279"], ["270", "281"], ["29", "281"], ["285", "281"], ["285", "281"], ["49", "71"], ["29", "71"], ["94", "97"], ["100", "97"], ["29", "97"], ["82", "97"], ["138", "100"], ["121", "100"], ["29", "100"], ["52", "103"], ["162", "168"], ["29", "168"], ["159", "172"], ["185", "172"], ["29", "172"], ["166", "172"], ["29", "176"], ["29", "181"], ["172", "185"], ["29", "185"], ["172", "185"], ["200", "203"], ["207", "203"], ["29", "203"], ["205", "203"], ["213", "207"], ["236", "207"], ["29", "207"], ["148", "241"], ["249", "241"], ["29", "241"], ["243", "241"], ["243", "246"], ["29", "246"], ["251", "249"], ["274", "272"], ["274", "272"], ["29", "272"], ["285", "283"], ["285", "283"], ["29", "283"], ["89", "103"], ["143", "103"], ["114", "103"], ["29", "103"], ["176", "179"], ["29", "179"], ["183", "205"], ["213", "205"], ["236", "205"], ["29", "205"], ["191", "243"], ["233", "243"], ["29", "243"], ["274", "273"], ["274", "273"], ["29", "273"], ["285", "284"], ["285", "284"], ["29", "284"], ["76", "109"], ["143", "109"], ["114", "109"], ["29", "109"], ["103", "109"], ["193", "211"], ["219", "211"], ["29", "211"], ["246", "251"], ["29", "251"], ["265", "274"], ["29", "274"], ["263", "274"], ["274", "285"], ["29", "285"], ["279", "285"], ["114", "113"], ["114", "113"], ["118", "113"], ["121", "113"], ["29", "113"], ["29", "128"], ["191", "226"], ["233", "226"], ["29", "226"], ["226", "233"], ["29", "233"], ["109", "114"], ["29", "114"], ["109", "114"], ["29", "118"], ["29", "125"], ["128", "131"], ["29", "131"], ["131", "132"], ["29", "132"], ["135", "132"], ["138", "132"], ["109", "143"], ["29", "143"], ["109", "143"], ["132", "143"], ["205", "213"], ["29", "213"], ["203", "213"], ["118", "121"], ["29", "121"], ["138", "121"], ["82", "121"], ["97", "121"], ["29", "135"], ["29", "142"], ["213", "222"], ["29", "222"], ["213", "222"], ["222", "229"], ["29", "229"], ["222", "229"], ["229", "236"], ["29", "236"], ["229", "236"], ["135", "138"], ["29", "138"], ["121", "138"], ["82", "138"], ["97", "138"], ["61", "68"], ["61", "64"], ["61", "67"], ["61", "61"], ["61", "71"], ["82", "94"], ["82", "85"], ["82", "97"], ["82", "89"], ["82", "82"], ["162", "188"], ["162", "179"], ["162", "178"], ["162", "185"], ["162", "197"], ["162", "243"], ["162", "162"], ["162", "168"], ["162", "170"], ["162", "191"], ["162", "195"], ["162", "190"], ["162", "205"], ["162", "183"], ["162", "193"], ["162", "166"], ["162", "200"], ["162", "176"], ["162", "241"], ["162", "203"], ["162", "172"], ["263", "273"], ["263", "272"], ["263", "279"], ["263", "283"], ["263", "284"], ["263", "281"], ["263", "285"], ["263", "267"], ["263", "265"], ["263", "274"], ["263", "270"], ["263", "263"], ["97", "103"], ["97", "97"], ["97", "100"], ["97", "105"], ["97", "109"], ["203", "213"], ["203", "207"], ["203", "212"], ["203", "205"], ["203", "211"], ["203", "216"], ["203", "203"], ["241", "246"], ["241", "249"], ["241", "251"], ["109", "120"], ["109", "113"], ["109", "128"], ["109", "114"], ["109", "131"], ["109", "132"], ["109", "121"], ["109", "138"], ["109", "137"], ["109", "130"], ["109", "118"], ["109", "143"], ["109", "135"], ["211", "225"], ["211", "232"], ["211", "226"], ["211", "228"], ["211", "221"], ["211", "233"], ["211", "239"], ["211", "235"], ["211", "236"], ["211", "229"], ["211", "222"], ["211", "219"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "40": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "45": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "49": "<(nextInt,nextInt())<SUB>5</SUB>>", "51": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "53": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "57": "<(LOCAL,int i: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>8</SUB>>", "71": "<(nextInt,nextInt())<SUB>8</SUB>>", "8": "<(LOCAL,HashMap&lt;Integer, ArrayList&lt;Node&gt;&gt; h: ANY)<SUB>11</SUB>>", "74": "<(IDENTIFIER,h,ANY h = new HashMap&lt;&gt;())<SUB>11</SUB>>", "76": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>11</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>13</SUB>>", "91": "<(LITERAL,0,int sum = 0)<SUB>13</SUB>>", "93": "<(LOCAL,int j: int)<SUB>14</SUB>>", "95": "<(IDENTIFIER,j,int j = i)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>14</SUB>>", "99": "<(IDENTIFIER,n,j &lt; n)<SUB>14</SUB>>", "101": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.assignmentPlus,sum += a[j])<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>15</SUB>>", "107": "<(IDENTIFIER,j,sum += a[j])<SUB>15</SUB>>", "109": "<(containsKey,containsKey(sum))<SUB>16</SUB>>", "111": "<(IDENTIFIER,sum,containsKey(sum))<SUB>16</SUB>>", "113": "<(add,add(new Node(i, j)))<SUB>17</SUB>>", "115": "<(IDENTIFIER,h,get(sum))<SUB>17</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "119": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "121": "<(&lt;init&gt;,new Node(i, j))<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,new Node(i, j))<SUB>17</SUB>>", "125": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "128": "<(&lt;operator&gt;.assignment,ANY temp = new ArrayList&lt;&gt;())<SUB>20</SUB>>", "130": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>20</SUB>>", "9": "<(IDENTIFIER,temp,new ArrayList&lt;&gt;())<SUB>20</SUB>>", "133": "<(IDENTIFIER,temp,add(new Node(i, j)))<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "137": "<(&lt;operator&gt;.alloc,new Node(i, j))<SUB>21</SUB>>", "139": "<(IDENTIFIER,$obj5,new Node(i, j))>", "141": "<(IDENTIFIER,j,new Node(i, j))<SUB>21</SUB>>", "143": "<(put,put(sum, temp))<SUB>22</SUB>>", "145": "<(IDENTIFIER,sum,put(sum, temp))<SUB>22</SUB>>", "147": "<(LOCAL,long ans: long)<SUB>27</SUB>>", "149": "<(IDENTIFIER,ans,long ans = 0)<SUB>27</SUB>>", "12": "<(LOCAL,ArrayList&lt;Integer&gt; ansList: ANY)<SUB>28</SUB>>", "152": "<(IDENTIFIER,ansList,ANY ansList = new ArrayList&lt;&gt;())<SUB>28</SUB>>", "154": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>28</SUB>>", "155": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>30</SUB>>", "157": "<(IDENTIFIER,$iterLocal0,)<SUB>30</SUB>>", "159": "<(keySet,keySet())<SUB>30</SUB>>", "161": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>30</SUB>>", "163": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "165": "<(LOCAL,x: int)<SUB>30</SUB>>", "167": "<(IDENTIFIER,x,&lt;empty&gt;)>", "169": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "171": "<(IDENTIFIER,Collections,sort(h.get(x), new Comparator&lt;Node&gt;() {\\012\\012    @Override\\012    public int compare(Node o1, Node o2) {\\012        return Integer.compare(o1.r, o2.r);\\012    }\\012}))<SUB>31</SUB>>", "173": "<(IDENTIFIER,h,get(x))<SUB>31</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "177": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "179": "<(&lt;init&gt;,new Comparator&lt;Node&gt;() {\\012\\012    @Override\\012    public int compare(Node o1, Node o2) {\\012        return Integer.compare(o1.r, o2.r);\\012    }\\012})<SUB>31</SUB>>", "181": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "183": "<(&lt;operator&gt;.assignment,ANY l = get(x))<SUB>39</SUB>>", "185": "<(get,get(x))<SUB>39</SUB>>", "187": "<(IDENTIFIER,x,get(x))<SUB>39</SUB>>", "188": "<(&lt;operator&gt;.assignment,ANY temp = new ArrayList&lt;&gt;())<SUB>41</SUB>>", "190": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>41</SUB>>", "13": "<(IDENTIFIER,temp,new ArrayList&lt;&gt;())<SUB>41</SUB>>", "193": "<(&lt;operator&gt;.assignment,int lasty = Integer.MIN_VALUE)<SUB>42</SUB>>", "195": "<(&lt;operator&gt;.fieldAccess,Integer.MIN_VALUE)<SUB>42</SUB>>", "197": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>42</SUB>>", "199": "<(LOCAL,int i: int)<SUB>43</SUB>>", "201": "<(IDENTIFIER,i,int i = 0)<SUB>43</SUB>>", "203": "<(&lt;operator&gt;.lessThan,i &lt; l.size())<SUB>43</SUB>>", "205": "<(size,size())<SUB>43</SUB>>", "207": "<(&lt;operator&gt;.postIncrement,i++)<SUB>43</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "211": "<(&lt;operator&gt;.greaterThan,l.get(i).l &gt; lasty)<SUB>44</SUB>>", "213": "<(get,get(i))<SUB>44</SUB>>", "215": "<(IDENTIFIER,i,get(i))<SUB>44</SUB>>", "217": "<(IDENTIFIER,lasty,l.get(i).l &gt; lasty)<SUB>44</SUB>>", "219": "<(&lt;operator&gt;.assignment,lasty = l.get(i).r)<SUB>45</SUB>>", "221": "<(&lt;operator&gt;.fieldAccess,l.get(i).r)<SUB>45</SUB>>", "223": "<(IDENTIFIER,l,get(i))<SUB>45</SUB>>", "225": "<(FIELD_IDENTIFIER,r,r)<SUB>45</SUB>>", "227": "<(IDENTIFIER,temp,add(l.get(i).l))<SUB>46</SUB>>", "229": "<(get,get(i))<SUB>46</SUB>>", "231": "<(IDENTIFIER,i,get(i))<SUB>46</SUB>>", "233": "<(add,add(l.get(i).r))<SUB>47</SUB>>", "235": "<(&lt;operator&gt;.fieldAccess,l.get(i).r)<SUB>47</SUB>>", "237": "<(IDENTIFIER,l,get(i))<SUB>47</SUB>>", "239": "<(FIELD_IDENTIFIER,r,r)<SUB>47</SUB>>", "241": "<(&lt;operator&gt;.lessThan,ans &lt; temp.size())<SUB>51</SUB>>", "243": "<(size,size())<SUB>51</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "247": "<(IDENTIFIER,ansList,ansList = temp)<SUB>52</SUB>>", "249": "<(&lt;operator&gt;.assignment,ans = size())<SUB>53</SUB>>", "251": "<(size,size())<SUB>53</SUB>>", "253": "<(println,println(ans / 2))<SUB>57</SUB>>", "255": "<(&lt;operator&gt;.division,ans / 2)<SUB>57</SUB>>", "257": "<(LITERAL,2,ans / 2)<SUB>57</SUB>>", "259": "<(LOCAL,int i: int)<SUB>58</SUB>>", "261": "<(IDENTIFIER,i,int i = 0)<SUB>58</SUB>>", "263": "<(&lt;operator&gt;.lessThan,i &lt; ansList.size())<SUB>58</SUB>>", "265": "<(size,size())<SUB>58</SUB>>", "267": "<(&lt;operator&gt;.postIncrement,i++)<SUB>58</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "271": "<(IDENTIFIER,out,print((ansList.get(i) + 1) + &quot; &quot;))<SUB>59</SUB>>", "273": "<(&lt;operator&gt;.addition,ansList.get(i) + 1)<SUB>59</SUB>>", "275": "<(IDENTIFIER,ansList,get(i))<SUB>59</SUB>>", "277": "<(LITERAL,1,ansList.get(i) + 1)<SUB>59</SUB>>", "279": "<(&lt;operator&gt;.postIncrement,i++)<SUB>60</SUB>>", "281": "<(println,println((ansList.get(i) + 1) + &quot; &quot;))<SUB>61</SUB>>", "283": "<(&lt;operator&gt;.addition,(ansList.get(i) + 1) + &quot; &quot;)<SUB>61</SUB>>", "285": "<(get,get(i))<SUB>61</SUB>>", "287": "<(IDENTIFIER,i,get(i))<SUB>61</SUB>>", "289": "<(LITERAL,&quot; &quot;,(ansList.get(i) + 1) + &quot; &quot;)<SUB>61</SUB>>", "291": "<(IDENTIFIER,out,close())<SUB>66</SUB>>", "293": "<(MODIFIER,STATIC)>"}}