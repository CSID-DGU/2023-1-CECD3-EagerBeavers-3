{"edges": [["27", "28"], ["27", "29"], ["27", "296"], ["27", "297"], ["27", "298"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "6"], ["29", "35"], ["29", "38"], ["29", "8"], ["29", "40"], ["29", "43"], ["29", "59"], ["29", "60"], ["29", "64"], ["29", "65"], ["29", "69"], ["29", "70"], ["29", "75"], ["29", "10"], ["29", "102"], ["29", "105"], ["29", "106"], ["29", "107"], ["29", "111"], ["29", "12"], ["29", "154"], ["29", "157"], ["29", "162"], ["29", "273"], ["29", "290"], ["29", "292"], ["29", "294"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["35", "36"], ["35", "37"], ["38", "5"], ["38", "39"], ["40", "41"], ["40", "42"], ["43", "7"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "58"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "54"], ["50", "57"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["105", "9"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "127"], ["121", "128"], ["121", "132"], ["121", "134"], ["121", "136"], ["121", "143"], ["123", "124"], ["123", "125"], ["125", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["134", "135"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "149"], ["145", "153"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "152"], ["154", "155"], ["154", "156"], ["157", "11"], ["157", "158"], ["157", "160"], ["158", "159"], ["160", "161"], ["162", "163"], ["162", "166"], ["163", "164"], ["164", "165"], ["166", "167"], ["166", "168"], ["166", "172"], ["166", "175"], ["168", "169"], ["168", "170"], ["170", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["175", "181"], ["175", "184"], ["175", "186"], ["177", "178"], ["177", "179"], ["179", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["187", "188"], ["187", "189"], ["187", "193"], ["187", "196"], ["187", "198"], ["189", "190"], ["189", "191"], ["191", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "208"], ["199", "200"], ["199", "207"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "238"], ["209", "210"], ["209", "224"], ["210", "211"], ["210", "212"], ["210", "217"], ["210", "222"], ["210", "223"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["224", "225"], ["225", "226"], ["225", "233"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["238", "239"], ["238", "254"], ["239", "240"], ["239", "253"], ["240", "241"], ["240", "248"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "260"], ["256", "272"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["260", "267"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "289"], ["276", "277"], ["276", "284"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["290", "291"], ["292", "293"], ["294", "295"], ["30", "33"], ["33", "37"], ["35", "38"], ["38", "42"], ["40", "47"], ["43", "62"], ["60", "67"], ["65", "72"], ["70", "77"], ["102", "105"], ["105", "109"], ["107", "113"], ["154", "158"], ["157", "164"], ["273", "290"], ["290", "292"], ["292", "294"], ["294", "298"], ["32", "30"], ["37", "35"], ["42", "40"], ["62", "60"], ["67", "65"], ["72", "70"], ["77", "80"], ["80", "87"], ["80", "104"], ["83", "80"], ["104", "102"], ["109", "107"], ["113", "116"], ["116", "125"], ["116", "156"], ["119", "116"], ["156", "154"], ["158", "160"], ["160", "157"], ["163", "170"], ["163", "281"], ["275", "273"], ["45", "53"], ["48", "43"], ["87", "90"], ["90", "97"], ["90", "83"], ["93", "90"], ["95", "93"], ["123", "130"], ["128", "132"], ["132", "134"], ["134", "138"], ["136", "148"], ["143", "119"], ["164", "163"], ["168", "172"], ["172", "179"], ["276", "275"], ["47", "45"], ["96", "95"], ["125", "123"], ["130", "128"], ["137", "136"], ["170", "168"], ["177", "181"], ["181", "164"], ["181", "191"], ["184", "181"], ["277", "287"], ["284", "276"], ["51", "54"], ["54", "48"], ["97", "96"], ["138", "137"], ["146", "149"], ["149", "143"], ["179", "177"], ["278", "277"], ["285", "284"], ["53", "51"], ["148", "146"], ["189", "193"], ["193", "201"], ["193", "184"], ["196", "193"], ["279", "278"], ["287", "285"], ["191", "189"], ["281", "279"], ["200", "196"], ["200", "215"], ["209", "246"], ["209", "196"], ["201", "200"], ["201", "204"], ["204", "200"], ["210", "209"], ["210", "231"], ["224", "209"], ["239", "259"], ["254", "196"], ["212", "220"], ["217", "210"], ["225", "224"], ["240", "239"], ["213", "212"], ["218", "217"], ["226", "236"], ["233", "225"], ["241", "251"], ["248", "240"], ["257", "265"], ["260", "254"], ["215", "213"], ["220", "218"], ["228", "226"], ["234", "233"], ["243", "241"], ["249", "248"], ["259", "257"], ["262", "270"], ["267", "260"], ["229", "228"], ["236", "234"], ["244", "243"], ["251", "249"], ["263", "262"], ["268", "267"], ["231", "229"], ["246", "244"], ["265", "263"], ["270", "268"], ["27", "32"], ["28", "298"], ["30", "298"], ["33", "298"], ["35", "298"], ["38", "298"], ["38", "298"], ["40", "298"], ["48", "298"], ["51", "298"], ["54", "298"], ["54", "298"], ["48", "298"], ["43", "298"], ["60", "298"], ["65", "298"], ["70", "298"], ["72", "298"], ["70", "298"], ["70", "298"], ["80", "298"], ["80", "298"], ["102", "298"], ["105", "298"], ["107", "298"], ["107", "298"], ["113", "298"], ["116", "298"], ["116", "298"], ["116", "298"], ["154", "298"], ["157", "298"], ["157", "298"], ["157", "298"], ["164", "298"], ["163", "298"], ["163", "298"], ["278", "298"], ["277", "298"], ["276", "298"], ["284", "298"], ["276", "298"], ["275", "298"], ["273", "298"], ["273", "298"], ["290", "298"], ["292", "298"], ["294", "298"], ["294", "298"], ["168", "298"], ["168", "298"], ["172", "298"], ["172", "298"], ["172", "298"], ["177", "298"], ["177", "298"], ["181", "298"], ["181", "298"], ["189", "298"], ["189", "298"], ["193", "298"], ["193", "298"], ["184", "298"], ["200", "298"], ["200", "298"], ["200", "298"], ["212", "298"], ["210", "298"], ["217", "298"], ["210", "298"], ["210", "298"], ["210", "298"], ["209", "298"], ["228", "298"], ["233", "298"], ["224", "298"], ["209", "298"], ["209", "298"], ["239", "298"], ["239", "298"], ["257", "298"], ["260", "298"], ["262", "298"], ["260", "298"], ["267", "298"], ["260", "298"], ["260", "298"], ["254", "298"], ["196", "298"], ["123", "298"], ["128", "298"], ["128", "298"], ["132", "298"], ["134", "298"], ["136", "298"], ["136", "298"], ["146", "298"], ["149", "298"], ["149", "298"], ["149", "298"], ["149", "298"], ["143", "298"], ["119", "298"], ["87", "298"], ["90", "298"], ["90", "298"], ["90", "298"], ["83", "298"], ["95", "298"], ["95", "298"], ["93", "298"], ["210", "298"], ["27", "28"], ["27", "30"], ["27", "35"], ["27", "40"], ["62", "60"], ["67", "65"], ["72", "70"], ["72", "70"], ["27", "102"], ["109", "107"], ["27", "154"], ["30", "33"], ["27", "33"], ["35", "38"], ["27", "38"], ["33", "38"], ["40", "43"], ["27", "43"], ["51", "43"], ["48", "43"], ["27", "77"], ["102", "105"], ["27", "105"], ["27", "113"], ["154", "157"], ["27", "157"], ["158", "157"], ["160", "157"], ["43", "273"], ["27", "273"], ["157", "273"], ["172", "273"], ["273", "290"], ["27", "290"], ["290", "292"], ["27", "292"], ["109", "294"], ["130", "294"], ["27", "294"], ["27", "45"], ["27", "58"], ["38", "62"], ["27", "62"], ["62", "67"], ["27", "67"], ["60", "72"], ["27", "72"], ["65", "72"], ["77", "80"], ["83", "80"], ["27", "80"], ["72", "80"], ["80", "83"], ["27", "83"], ["27", "87"], ["27", "95"], ["67", "109"], ["27", "109"], ["113", "116"], ["119", "116"], ["27", "116"], ["107", "116"], ["116", "119"], ["27", "119"], ["125", "123"], ["130", "128"], ["27", "136"], ["27", "158"], ["27", "160"], ["164", "163"], ["170", "168"], ["168", "172"], ["27", "172"], ["157", "275"], ["172", "275"], ["27", "275"], ["45", "48"], ["27", "48"], ["51", "48"], ["54", "48"], ["87", "90"], ["93", "90"], ["27", "90"], ["72", "90"], ["90", "93"], ["27", "93"], ["123", "132"], ["27", "132"], ["128", "134"], ["27", "134"], ["105", "143"], ["27", "143"], ["146", "143"], ["149", "143"], ["105", "164"], ["170", "164"], ["254", "164"], ["143", "164"], ["27", "164"], ["179", "177"], ["157", "276"], ["172", "276"], ["27", "276"], ["27", "51"], ["27", "57"], ["109", "125"], ["130", "125"], ["27", "125"], ["125", "130"], ["27", "130"], ["27", "146"], ["27", "153"], ["164", "170"], ["27", "170"], ["177", "181"], ["184", "181"], ["27", "181"], ["181", "184"], ["201", "184"], ["27", "184"], ["157", "277"], ["172", "277"], ["27", "277"], ["157", "284"], ["172", "284"], ["27", "284"], ["51", "54"], ["27", "54"], ["146", "149"], ["27", "149"], ["132", "149"], ["134", "149"], ["27", "179"], ["191", "189"], ["157", "278"], ["172", "278"], ["27", "278"], ["189", "193"], ["196", "193"], ["27", "193"], ["193", "196"], ["204", "196"], ["27", "196"], ["27", "191"], ["201", "200"], ["201", "200"], ["204", "200"], ["204", "200"], ["210", "209"], ["210", "209"], ["210", "209"], ["210", "209"], ["210", "209"], ["224", "209"], ["27", "239"], ["181", "201"], ["27", "201"], ["193", "204"], ["27", "204"], ["27", "210"], ["168", "210"], ["201", "210"], ["193", "210"], ["204", "210"], ["80", "210"], ["72", "210"], ["90", "210"], ["239", "224"], ["170", "254"], ["27", "254"], ["257", "254"], ["260", "254"], ["168", "212"], ["27", "212"], ["201", "212"], ["168", "217"], ["27", "217"], ["193", "217"], ["204", "217"], ["27", "257"], ["27", "272"], ["168", "233"], ["27", "233"], ["193", "233"], ["204", "233"], ["168", "248"], ["27", "248"], ["193", "248"], ["204", "248"], ["257", "260"], ["27", "260"], ["168", "260"], ["201", "260"], ["193", "260"], ["204", "260"], ["168", "228"], ["27", "228"], ["201", "228"], ["168", "243"], ["27", "243"], ["201", "243"], ["168", "262"], ["27", "262"], ["201", "262"], ["168", "267"], ["27", "267"], ["193", "267"], ["204", "267"], ["80", "87"], ["80", "90"], ["80", "80"], ["80", "83"], ["116", "136"], ["116", "146"], ["116", "128"], ["116", "149"], ["116", "132"], ["116", "119"], ["116", "134"], ["116", "138"], ["116", "148"], ["116", "137"], ["116", "130"], ["116", "116"], ["116", "123"], ["116", "143"], ["116", "125"], ["163", "163"], ["163", "179"], ["163", "168"], ["163", "170"], ["163", "181"], ["163", "164"], ["163", "177"], ["163", "172"], ["90", "96"], ["90", "95"], ["90", "97"], ["90", "93"], ["90", "90"], ["181", "189"], ["181", "181"], ["181", "191"], ["181", "184"], ["181", "193"], ["193", "196"], ["193", "201"], ["193", "193"], ["193", "200"], ["200", "215"], ["200", "209"], ["200", "213"], ["200", "212"], ["200", "210"], ["200", "217"], ["200", "220"], ["200", "218"], ["209", "240"], ["209", "257"], ["209", "244"], ["209", "243"], ["209", "262"], ["209", "259"], ["209", "246"], ["209", "267"], ["209", "268"], ["209", "249"], ["209", "265"], ["209", "239"], ["209", "260"], ["209", "270"], ["209", "251"], ["209", "254"], ["209", "263"], ["209", "241"], ["209", "248"], ["201", "204"], ["210", "225"], ["210", "226"], ["210", "228"], ["210", "231"], ["210", "224"], ["210", "233"], ["210", "236"], ["210", "234"], ["210", "229"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY f = new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "6": "<(LOCAL,Scanner sc: ANY)<SUB>3</SUB>>", "36": "<(IDENTIFIER,sc,ANY sc = new Scanner(f))<SUB>3</SUB>>", "38": "<(&lt;init&gt;,new Scanner(f))<SUB>3</SUB>>", "39": "<(IDENTIFIER,f,new Scanner(f))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY bw = new BufferedWriter(new FileWriter(new File(&quot;output.txt&quot;))))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new BufferedWriter(new FileWriter(new File(&quot;output.txt&quot;))))<SUB>4</SUB>>", "7": "<(IDENTIFIER,bw,new BufferedWriter(new FileWriter(new File(&quot;output.txt&quot;))))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new FileWriter(new File(&quot;output.txt&quot;)))<SUB>4</SUB>>", "49": "<(IDENTIFIER,$obj3,new FileWriter(new File(&quot;output.txt&quot;)))>", "51": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.alloc,new File(&quot;output.txt&quot;))<SUB>4</SUB>>", "55": "<(IDENTIFIER,$obj2,new File(&quot;output.txt&quot;))>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(LOCAL,int n: int)<SUB>5</SUB>>", "61": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "65": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "67": "<(nextInt,nextInt())<SUB>6</SUB>>", "69": "<(LOCAL,boolean[][] grid: boolean[][])<SUB>7</SUB>>", "71": "<(IDENTIFIER,grid,boolean[][] grid = new boolean[n][m])<SUB>7</SUB>>", "73": "<(IDENTIFIER,n,new boolean[n][m])<SUB>7</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "89": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "91": "<(IDENTIFIER,j,j &lt; m)<SUB>8</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "95": "<(&lt;operator&gt;.assignment,grid[i][j] = false)<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>9</SUB>>", "99": "<(IDENTIFIER,i,grid[i][j] = false)<SUB>9</SUB>>", "101": "<(LITERAL,false,grid[i][j] = false)<SUB>9</SUB>>", "102": "<(&lt;operator&gt;.assignment,ANY q = new LinkedList&lt;&gt;())<SUB>10</SUB>>", "104": "<(&lt;operator&gt;.alloc,new LinkedList&lt;&gt;())<SUB>10</SUB>>", "9": "<(IDENTIFIER,q,new LinkedList&lt;&gt;())<SUB>10</SUB>>", "107": "<(&lt;operator&gt;.assignment,int cnt = nextInt())<SUB>11</SUB>>", "109": "<(nextInt,nextInt())<SUB>11</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; cnt); i++),for (int i = 0; Some(i &lt; cnt); i++))<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "115": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "117": "<(IDENTIFIER,i,i &lt; cnt)<SUB>12</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "123": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>13</SUB>>", "125": "<(nextInt,nextInt())<SUB>13</SUB>>", "127": "<(LOCAL,int y: int)<SUB>14</SUB>>", "129": "<(IDENTIFIER,y,int y = nextInt())<SUB>14</SUB>>", "131": "<(IDENTIFIER,sc,nextInt())<SUB>14</SUB>>", "133": "<(IDENTIFIER,x,x--)<SUB>15</SUB>>", "135": "<(IDENTIFIER,y,y--)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,grid[x][y])<SUB>17</SUB>>", "139": "<(IDENTIFIER,grid,grid[x][y] = true)<SUB>17</SUB>>", "141": "<(IDENTIFIER,y,grid[x][y] = true)<SUB>17</SUB>>", "143": "<(add,add(new Pair(x, y)))<SUB>18</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "147": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "149": "<(&lt;init&gt;,new Pair(x, y))<SUB>18</SUB>>", "151": "<(IDENTIFIER,x,new Pair(x, y))<SUB>18</SUB>>", "153": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "154": "<(&lt;operator&gt;.assignment,ANY last = new Pair(-1, -1))<SUB>20</SUB>>", "156": "<(&lt;operator&gt;.alloc,new Pair(-1, -1))<SUB>20</SUB>>", "11": "<(IDENTIFIER,last,new Pair(-1, -1))<SUB>20</SUB>>", "159": "<(LITERAL,1,-1)<SUB>20</SUB>>", "161": "<(LITERAL,1,-1)<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>21</SUB>>", "165": "<(IDENTIFIER,q,isEmpty())<SUB>21</SUB>>", "167": "<(LOCAL,Pair current: ANY)<SUB>22</SUB>>", "169": "<(IDENTIFIER,current,ANY current = poll())<SUB>22</SUB>>", "171": "<(IDENTIFIER,q,poll())<SUB>22</SUB>>", "173": "<(IDENTIFIER,last,last = current)<SUB>23</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int i = -1; Some(i &lt;= 1); i++),for (int i = -1; Some(i &lt;= 1); i++))<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.assignment,int i = -1)<SUB>24</SUB>>", "179": "<(&lt;operator&gt;.minus,-1)<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 1)<SUB>24</SUB>>", "183": "<(LITERAL,1,i &lt;= 1)<SUB>24</SUB>>", "185": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int j = -1; Some(j &lt;= 1); j++),for (int j = -1; Some(j &lt;= 1); j++))<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.assignment,int j = -1)<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.minus,-1)<SUB>25</SUB>>", "193": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 1)<SUB>25</SUB>>", "195": "<(LITERAL,1,j &lt;= 1)<SUB>25</SUB>>", "197": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "199": "<(CONTROL_STRUCTURE,if (i != 0 &amp;&amp; j != 0),if (i != 0 &amp;&amp; j != 0))<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.notEquals,i != 0)<SUB>26</SUB>>", "203": "<(LITERAL,0,i != 0)<SUB>26</SUB>>", "205": "<(IDENTIFIER,j,j != 0)<SUB>26</SUB>>", "207": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>26</SUB>>", "209": "<(&lt;operator&gt;.logicalAnd,inside(current.x + i, current.y + j, n, m) &amp;&amp; !grid[current.x + i][current.y + j])<SUB>27</SUB>>", "211": "<(IDENTIFIER,this,inside(current.x + i, current.y + j, n, m))<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,current.x)<SUB>27</SUB>>", "215": "<(FIELD_IDENTIFIER,x,x)<SUB>27</SUB>>", "217": "<(&lt;operator&gt;.addition,current.y + j)<SUB>27</SUB>>", "219": "<(IDENTIFIER,current,current.y + j)<SUB>27</SUB>>", "221": "<(IDENTIFIER,j,current.y + j)<SUB>27</SUB>>", "223": "<(IDENTIFIER,m,inside(current.x + i, current.y + j, n, m))<SUB>27</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,grid[current.x + i][current.y + j])<SUB>28</SUB>>", "227": "<(IDENTIFIER,grid,!grid[current.x + i][current.y + j])<SUB>28</SUB>>", "229": "<(&lt;operator&gt;.fieldAccess,current.x)<SUB>28</SUB>>", "231": "<(FIELD_IDENTIFIER,x,x)<SUB>28</SUB>>", "233": "<(&lt;operator&gt;.addition,current.y + j)<SUB>28</SUB>>", "235": "<(IDENTIFIER,current,current.y + j)<SUB>28</SUB>>", "237": "<(IDENTIFIER,j,current.y + j)<SUB>28</SUB>>", "239": "<(&lt;operator&gt;.assignment,grid[current.x + i][current.y + j] = true)<SUB>29</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,grid[current.x + i])<SUB>29</SUB>>", "243": "<(&lt;operator&gt;.addition,current.x + i)<SUB>29</SUB>>", "245": "<(IDENTIFIER,current,current.x + i)<SUB>29</SUB>>", "247": "<(IDENTIFIER,i,current.x + i)<SUB>29</SUB>>", "249": "<(&lt;operator&gt;.fieldAccess,current.y)<SUB>29</SUB>>", "251": "<(FIELD_IDENTIFIER,y,y)<SUB>29</SUB>>", "253": "<(LITERAL,true,grid[current.x + i][current.y + j] = true)<SUB>29</SUB>>", "255": "<(IDENTIFIER,q,add(new Pair(current.x + i, current.y + j)))<SUB>30</SUB>>", "257": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "259": "<(&lt;operator&gt;.alloc,new Pair(current.x + i, current.y + j))<SUB>30</SUB>>", "261": "<(IDENTIFIER,$obj8,new Pair(current.x + i, current.y + j))>", "263": "<(&lt;operator&gt;.fieldAccess,current.x)<SUB>30</SUB>>", "265": "<(FIELD_IDENTIFIER,x,x)<SUB>30</SUB>>", "267": "<(&lt;operator&gt;.addition,current.y + j)<SUB>30</SUB>>", "269": "<(IDENTIFIER,current,current.y + j)<SUB>30</SUB>>", "271": "<(IDENTIFIER,j,current.y + j)<SUB>30</SUB>>", "273": "<(append,append((last.x + 1) + &quot; &quot; + (last.y + 1) + &quot;\\n&quot;))<SUB>37</SUB>>", "275": "<(&lt;operator&gt;.addition,(last.x + 1) + &quot; &quot; + (last.y + 1) + &quot;\\n&quot;)<SUB>37</SUB>>", "277": "<(&lt;operator&gt;.addition,(last.x + 1) + &quot; &quot;)<SUB>37</SUB>>", "279": "<(&lt;operator&gt;.fieldAccess,last.x)<SUB>37</SUB>>", "281": "<(FIELD_IDENTIFIER,x,x)<SUB>37</SUB>>", "283": "<(LITERAL,&quot; &quot;,(last.x + 1) + &quot; &quot;)<SUB>37</SUB>>", "285": "<(&lt;operator&gt;.fieldAccess,last.y)<SUB>37</SUB>>", "287": "<(FIELD_IDENTIFIER,y,y)<SUB>37</SUB>>", "289": "<(LITERAL,&quot;\\n&quot;,(last.x + 1) + &quot; &quot; + (last.y + 1) + &quot;\\n&quot;)<SUB>37</SUB>>", "291": "<(IDENTIFIER,bw,flush())<SUB>38</SUB>>", "293": "<(IDENTIFIER,bw,close())<SUB>39</SUB>>", "295": "<(IDENTIFIER,sc,close())<SUB>41</SUB>>", "297": "<(MODIFIER,STATIC)>"}}