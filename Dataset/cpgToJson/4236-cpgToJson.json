{"edges": [["23", "24"], ["23", "25"], ["23", "652"], ["23", "653"], ["23", "654"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "40"], ["25", "41"], ["25", "45"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["33", "36"], ["33", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "61"], ["55", "62"], ["55", "66"], ["55", "67"], ["55", "72"], ["55", "73"], ["55", "77"], ["55", "78"], ["55", "6"], ["55", "81"], ["55", "84"], ["55", "85"], ["55", "170"], ["55", "171"], ["55", "179"], ["55", "180"], ["55", "183"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "5"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "8"], ["95", "96"], ["95", "99"], ["95", "100"], ["95", "145"], ["95", "150"], ["96", "97"], ["96", "98"], ["99", "7"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "119"], ["110", "131"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["122", "123"], ["122", "130"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "161"], ["150", "163"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["157", "160"], ["161", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "169"], ["166", "167"], ["167", "168"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "177"], ["174", "175"], ["175", "176"], ["177", "178"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "190"], ["183", "196"], ["184", "185"], ["184", "189"], ["185", "186"], ["185", "187"], ["185", "188"], ["190", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["197", "198"], ["197", "204"], ["197", "301"], ["198", "199"], ["198", "203"], ["199", "200"], ["199", "201"], ["199", "202"], ["204", "205"], ["204", "296"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "214"], ["205", "216"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["212", "213"], ["214", "215"], ["216", "217"], ["216", "218"], ["216", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "232"], ["223", "234"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["230", "231"], ["232", "233"], ["234", "235"], ["234", "240"], ["234", "241"], ["234", "246"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["256", "258"], ["256", "261"], ["256", "290"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["261", "266"], ["261", "269"], ["261", "271"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["269", "270"], ["271", "272"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["274", "281"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "289"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["292", "295"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["302", "303"], ["302", "309"], ["302", "453"], ["303", "304"], ["303", "308"], ["304", "305"], ["304", "306"], ["304", "307"], ["309", "310"], ["309", "448"], ["310", "311"], ["310", "312"], ["310", "315"], ["310", "319"], ["310", "321"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["317", "318"], ["319", "320"], ["321", "322"], ["321", "323"], ["321", "328"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["328", "335"], ["328", "339"], ["328", "341"], ["330", "331"], ["330", "332"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "337"], ["337", "338"], ["339", "340"], ["341", "342"], ["341", "343"], ["341", "348"], ["343", "344"], ["343", "345"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "350"], ["348", "353"], ["348", "357"], ["348", "359"], ["350", "351"], ["350", "352"], ["353", "354"], ["353", "355"], ["355", "356"], ["357", "358"], ["359", "360"], ["359", "365"], ["359", "370"], ["359", "371"], ["359", "376"], ["360", "361"], ["360", "364"], ["361", "362"], ["361", "363"], ["365", "366"], ["365", "369"], ["366", "367"], ["366", "368"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "375"], ["376", "377"], ["376", "378"], ["376", "381"], ["376", "384"], ["376", "386"], ["378", "379"], ["378", "380"], ["381", "382"], ["381", "383"], ["384", "385"], ["386", "387"], ["387", "388"], ["387", "389"], ["387", "392"], ["387", "395"], ["387", "397"], ["389", "390"], ["389", "391"], ["392", "393"], ["392", "394"], ["395", "396"], ["397", "398"], ["397", "399"], ["397", "402"], ["397", "442"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "404"], ["402", "407"], ["402", "410"], ["402", "412"], ["404", "405"], ["404", "406"], ["407", "408"], ["407", "409"], ["410", "411"], ["412", "413"], ["413", "414"], ["413", "415"], ["415", "416"], ["415", "417"], ["415", "422"], ["417", "418"], ["417", "421"], ["418", "419"], ["418", "420"], ["422", "423"], ["422", "424"], ["422", "433"], ["424", "425"], ["424", "432"], ["425", "426"], ["425", "427"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["433", "434"], ["433", "441"], ["434", "435"], ["434", "436"], ["436", "437"], ["436", "440"], ["437", "438"], ["437", "439"], ["442", "443"], ["442", "444"], ["444", "445"], ["444", "446"], ["444", "447"], ["448", "449"], ["448", "452"], ["449", "450"], ["449", "451"], ["453", "454"], ["454", "455"], ["454", "461"], ["455", "456"], ["455", "460"], ["456", "457"], ["456", "458"], ["456", "459"], ["461", "462"], ["461", "647"], ["462", "463"], ["462", "464"], ["462", "467"], ["462", "471"], ["462", "473"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "469"], ["469", "470"], ["471", "472"], ["473", "474"], ["473", "475"], ["473", "480"], ["475", "476"], ["475", "477"], ["477", "478"], ["477", "479"], ["480", "481"], ["480", "482"], ["480", "487"], ["480", "491"], ["480", "493"], ["482", "483"], ["482", "484"], ["484", "485"], ["484", "486"], ["487", "488"], ["487", "489"], ["489", "490"], ["491", "492"], ["493", "494"], ["493", "495"], ["493", "500"], ["495", "496"], ["495", "497"], ["497", "498"], ["497", "499"], ["500", "501"], ["500", "502"], ["500", "507"], ["500", "511"], ["500", "513"], ["502", "503"], ["502", "504"], ["504", "505"], ["504", "506"], ["507", "508"], ["507", "509"], ["509", "510"], ["511", "512"], ["513", "514"], ["513", "515"], ["513", "520"], ["515", "516"], ["515", "517"], ["517", "518"], ["517", "519"], ["520", "521"], ["520", "522"], ["520", "525"], ["520", "529"], ["520", "531"], ["522", "523"], ["522", "524"], ["525", "526"], ["525", "527"], ["527", "528"], ["529", "530"], ["531", "532"], ["531", "537"], ["531", "542"], ["531", "547"], ["531", "548"], ["531", "553"], ["532", "533"], ["532", "536"], ["533", "534"], ["533", "535"], ["537", "538"], ["537", "541"], ["538", "539"], ["538", "540"], ["542", "543"], ["542", "546"], ["543", "544"], ["543", "545"], ["548", "549"], ["548", "550"], ["550", "551"], ["550", "552"], ["553", "554"], ["553", "555"], ["553", "558"], ["553", "561"], ["553", "563"], ["555", "556"], ["555", "557"], ["558", "559"], ["558", "560"], ["561", "562"], ["563", "564"], ["564", "565"], ["564", "566"], ["564", "569"], ["564", "572"], ["564", "574"], ["566", "567"], ["566", "568"], ["569", "570"], ["569", "571"], ["572", "573"], ["574", "575"], ["575", "576"], ["575", "577"], ["575", "580"], ["575", "583"], ["575", "585"], ["577", "578"], ["577", "579"], ["580", "581"], ["580", "582"], ["583", "584"], ["585", "586"], ["585", "587"], ["585", "590"], ["585", "641"], ["587", "588"], ["587", "589"], ["590", "591"], ["590", "592"], ["590", "595"], ["590", "598"], ["590", "600"], ["592", "593"], ["592", "594"], ["595", "596"], ["595", "597"], ["598", "599"], ["600", "601"], ["601", "602"], ["601", "603"], ["603", "604"], ["603", "605"], ["603", "610"], ["605", "606"], ["605", "609"], ["606", "607"], ["606", "608"], ["610", "611"], ["610", "612"], ["610", "621"], ["612", "613"], ["612", "620"], ["613", "614"], ["613", "615"], ["615", "616"], ["615", "619"], ["616", "617"], ["616", "618"], ["621", "622"], ["621", "623"], ["621", "632"], ["623", "624"], ["623", "631"], ["624", "625"], ["624", "626"], ["626", "627"], ["626", "630"], ["627", "628"], ["627", "629"], ["632", "633"], ["632", "640"], ["633", "634"], ["633", "635"], ["635", "636"], ["635", "639"], ["636", "637"], ["636", "638"], ["641", "642"], ["641", "643"], ["643", "644"], ["643", "645"], ["643", "646"], ["647", "648"], ["647", "651"], ["648", "649"], ["648", "650"], ["26", "32"], ["29", "37"], ["33", "43"], ["41", "47"], ["28", "26"], ["30", "29"], ["37", "33"], ["43", "41"], ["47", "50"], ["50", "654"], ["50", "59"], ["53", "50"], ["32", "30"], ["57", "64"], ["62", "69"], ["67", "75"], ["73", "78"], ["78", "83"], ["81", "84"], ["84", "87"], ["171", "180"], ["180", "185"], ["59", "57"], ["64", "62"], ["69", "67"], ["75", "73"], ["83", "81"], ["87", "90"], ["90", "98"], ["90", "175"], ["93", "90"], ["173", "171"], ["184", "194"], ["184", "199"], ["96", "99"], ["99", "102"], ["145", "152"], ["174", "177"], ["177", "173"], ["185", "184"], ["191", "53"], ["98", "96"], ["102", "105"], ["105", "113"], ["105", "147"], ["108", "105"], ["147", "145"], ["152", "157"], ["155", "167"], ["155", "93"], ["161", "157"], ["163", "161"], ["175", "174"], ["192", "191"], ["198", "207"], ["198", "304"], ["111", "125"], ["119", "132"], ["131", "108"], ["157", "155"], ["165", "163"], ["194", "192"], ["199", "198"], ["296", "53"], ["112", "117"], ["117", "111"], ["121", "119"], ["132", "137"], ["135", "131"], ["166", "165"], ["207", "212"], ["210", "220"], ["210", "299"], ["214", "212"], ["297", "296"], ["303", "312"], ["303", "456"], ["113", "112"], ["122", "121"], ["137", "141"], ["140", "135"], ["167", "166"], ["212", "210"], ["218", "225"], ["299", "297"], ["304", "303"], ["448", "53"], ["123", "122"], ["141", "140"], ["220", "218"], ["225", "230"], ["228", "236"], ["228", "214"], ["232", "230"], ["312", "317"], ["315", "325"], ["315", "451"], ["319", "317"], ["449", "448"], ["455", "464"], ["455", "53"], ["124", "123"], ["230", "228"], ["241", "248"], ["317", "315"], ["323", "332"], ["451", "449"], ["456", "455"], ["647", "53"], ["125", "124"], ["236", "232"], ["236", "243"], ["243", "241"], ["248", "251"], ["251", "258"], ["251", "232"], ["254", "251"], ["325", "323"], ["330", "337"], ["335", "345"], ["335", "319"], ["339", "337"], ["464", "469"], ["467", "477"], ["467", "650"], ["471", "469"], ["648", "647"], ["258", "263"], ["290", "254"], ["332", "330"], ["337", "335"], ["343", "350"], ["469", "467"], ["475", "484"], ["650", "648"], ["263", "266"], ["266", "277"], ["266", "292"], ["269", "266"], ["292", "290"], ["345", "343"], ["350", "355"], ["353", "361"], ["353", "339"], ["357", "355"], ["477", "475"], ["482", "489"], ["487", "497"], ["487", "471"], ["491", "489"], ["272", "269"], ["355", "353"], ["371", "378"], ["484", "482"], ["489", "487"], ["495", "504"], ["274", "272"], ["361", "357"], ["361", "366"], ["366", "357"], ["366", "373"], ["373", "371"], ["378", "381"], ["381", "389"], ["381", "357"], ["384", "381"], ["497", "495"], ["502", "509"], ["507", "517"], ["507", "491"], ["511", "509"], ["276", "285"], ["281", "274"], ["504", "502"], ["509", "507"], ["515", "522"], ["277", "276"], ["282", "281"], ["389", "392"], ["392", "399"], ["392", "384"], ["395", "392"], ["517", "515"], ["522", "527"], ["525", "533"], ["525", "511"], ["529", "527"], ["284", "282"], ["399", "404"], ["442", "395"], ["527", "525"], ["548", "555"], ["285", "284"], ["404", "407"], ["407", "418"], ["407", "444"], ["410", "407"], ["444", "442"], ["533", "529"], ["533", "538"], ["538", "529"], ["538", "543"], ["543", "529"], ["543", "550"], ["550", "548"], ["555", "558"], ["558", "566"], ["558", "529"], ["561", "558"], ["413", "410"], ["415", "413"], ["566", "569"], ["569", "577"], ["569", "561"], ["572", "569"], ["417", "428"], ["422", "415"], ["418", "417"], ["424", "437"], ["433", "422"], ["577", "580"], ["580", "587"], ["580", "572"], ["583", "580"], ["425", "424"], ["434", "433"], ["587", "592"], ["641", "583"], ["427", "425"], ["436", "434"], ["592", "595"], ["595", "606"], ["595", "643"], ["598", "595"], ["643", "641"], ["428", "427"], ["437", "436"], ["601", "598"], ["603", "601"], ["605", "616"], ["610", "603"], ["606", "605"], ["612", "627"], ["621", "610"], ["613", "612"], ["623", "636"], ["632", "621"], ["615", "613"], ["624", "623"], ["633", "632"], ["616", "615"], ["626", "624"], ["635", "633"], ["627", "626"], ["636", "635"], ["23", "28"], ["24", "654"], ["26", "654"], ["29", "654"], ["29", "654"], ["33", "654"], ["33", "654"], ["33", "654"], ["43", "654"], ["41", "654"], ["41", "654"], ["47", "654"], ["50", "654"], ["50", "654"], ["50", "654"], ["53", "654"], ["33", "654"], ["177", "654"], ["23", "24"], ["23", "26"], ["43", "41"], ["26", "29"], ["23", "29"], ["29", "33"], ["23", "33"], ["37", "33"], ["37", "33"], ["23", "47"], ["23", "37"], ["23", "43"], ["47", "50"], ["53", "50"], ["23", "50"], ["41", "50"], ["50", "53"], ["23", "53"], ["59", "57"], ["64", "62"], ["69", "67"], ["69", "67"], ["75", "73"], ["23", "78"], ["23", "81"], ["173", "171"], ["173", "171"], ["78", "180"], ["145", "180"], ["23", "180"], ["81", "84"], ["23", "84"], ["23", "87"], ["43", "59"], ["64", "59"], ["117", "59"], ["23", "59"], ["59", "64"], ["23", "64"], ["57", "69"], ["23", "69"], ["62", "69"], ["69", "75"], ["23", "75"], ["87", "90"], ["93", "90"], ["23", "90"], ["75", "90"], ["157", "90"], ["90", "93"], ["23", "93"], ["23", "96"], ["73", "145"], ["131", "145"], ["174", "173"], ["177", "173"], ["185", "184"], ["185", "184"], ["185", "184"], ["23", "184"], ["96", "99"], ["23", "99"], ["23", "102"], ["78", "145"], ["23", "145"], ["23", "152"], ["175", "174"], ["23", "177"], ["199", "185"], ["304", "185"], ["456", "185"], ["643", "185"], ["444", "185"], ["292", "185"], ["157", "185"], ["23", "185"], ["69", "185"], ["157", "185"], ["90", "185"], ["647", "191"], ["448", "191"], ["296", "191"], ["180", "191"], ["23", "191"], ["102", "105"], ["108", "105"], ["23", "105"], ["69", "105"], ["157", "105"], ["23", "108"], ["105", "108"], ["117", "111"], ["135", "131"], ["135", "131"], ["135", "131"], ["152", "155"], ["161", "155"], ["23", "155"], ["157", "155"], ["157", "155"], ["157", "155"], ["155", "161"], ["23", "161"], ["84", "163"], ["23", "163"], ["165", "163"], ["165", "163"], ["84", "175"], ["163", "175"], ["23", "175"], ["199", "198"], ["199", "198"], ["199", "198"], ["23", "198"], ["99", "119"], ["23", "119"], ["121", "119"], ["185", "157"], ["199", "157"], ["304", "157"], ["456", "157"], ["643", "157"], ["444", "157"], ["292", "157"], ["135", "157"], ["23", "157"], ["105", "157"], ["90", "157"], ["166", "165"], ["23", "165"], ["185", "199"], ["23", "199"], ["185", "199"], ["185", "199"], ["23", "207"], ["647", "296"], ["448", "296"], ["191", "296"], ["180", "296"], ["290", "296"], ["23", "296"], ["64", "117"], ["23", "117"], ["123", "121"], ["123", "121"], ["105", "121"], ["23", "121"], ["185", "135"], ["199", "135"], ["304", "135"], ["456", "135"], ["643", "135"], ["444", "135"], ["292", "135"], ["157", "135"], ["23", "135"], ["73", "135"], ["131", "135"], ["123", "135"], ["167", "166"], ["207", "210"], ["214", "210"], ["23", "210"], ["212", "210"], ["220", "214"], ["236", "214"], ["23", "214"], ["220", "218"], ["220", "218"], ["304", "303"], ["304", "303"], ["304", "303"], ["23", "303"], ["123", "122"], ["123", "122"], ["105", "122"], ["23", "122"], ["99", "167"], ["119", "167"], ["23", "167"], ["171", "212"], ["230", "212"], ["23", "212"], ["23", "225"], ["199", "304"], ["23", "304"], ["199", "304"], ["199", "304"], ["23", "312"], ["647", "448"], ["296", "448"], ["191", "448"], ["180", "448"], ["442", "448"], ["23", "448"], ["111", "123"], ["23", "123"], ["212", "220"], ["23", "220"], ["210", "220"], ["225", "228"], ["232", "228"], ["23", "228"], ["230", "228"], ["236", "232"], ["243", "232"], ["23", "232"], ["243", "241"], ["243", "241"], ["312", "315"], ["319", "315"], ["23", "315"], ["317", "315"], ["361", "319"], ["23", "319"], ["325", "319"], ["325", "323"], ["325", "323"], ["456", "455"], ["456", "455"], ["456", "455"], ["23", "455"], ["220", "230"], ["243", "230"], ["23", "230"], ["23", "248"], ["171", "317"], ["337", "317"], ["23", "317"], ["325", "330"], ["23", "330"], ["304", "456"], ["23", "456"], ["304", "456"], ["304", "456"], ["23", "464"], ["448", "647"], ["296", "647"], ["191", "647"], ["180", "647"], ["641", "647"], ["23", "647"], ["228", "236"], ["23", "236"], ["220", "236"], ["230", "243"], ["23", "243"], ["236", "243"], ["248", "251"], ["254", "251"], ["23", "251"], ["199", "251"], ["266", "251"], ["251", "254"], ["23", "254"], ["23", "258"], ["292", "290"], ["292", "290"], ["292", "290"], ["317", "325"], ["23", "325"], ["315", "325"], ["330", "335"], ["339", "335"], ["23", "335"], ["337", "335"], ["345", "339"], ["366", "339"], ["23", "339"], ["345", "343"], ["345", "343"], ["464", "467"], ["471", "467"], ["23", "467"], ["469", "467"], ["533", "471"], ["23", "471"], ["477", "471"], ["477", "475"], ["477", "475"], ["23", "263"], ["325", "332"], ["23", "332"], ["325", "337"], ["355", "337"], ["23", "337"], ["23", "350"], ["171", "469"], ["489", "469"], ["23", "469"], ["477", "482"], ["23", "482"], ["263", "266"], ["269", "266"], ["23", "266"], ["251", "266"], ["284", "266"], ["23", "269"], ["266", "269"], ["274", "272"], ["274", "272"], ["274", "272"], ["199", "292"], ["274", "292"], ["23", "292"], ["180", "292"], ["290", "292"], ["258", "292"], ["272", "292"], ["337", "345"], ["23", "345"], ["335", "345"], ["350", "353"], ["357", "353"], ["23", "353"], ["355", "353"], ["361", "357"], ["366", "357"], ["373", "357"], ["23", "357"], ["373", "371"], ["373", "371"], ["469", "477"], ["23", "477"], ["467", "477"], ["482", "487"], ["491", "487"], ["23", "487"], ["489", "487"], ["538", "491"], ["23", "491"], ["497", "491"], ["497", "495"], ["497", "495"], ["258", "272"], ["23", "272"], ["345", "355"], ["373", "355"], ["23", "355"], ["23", "378"], ["477", "484"], ["23", "484"], ["477", "489"], ["509", "489"], ["23", "489"], ["497", "502"], ["23", "502"], ["199", "274"], ["292", "274"], ["23", "274"], ["603", "274"], ["415", "274"], ["610", "274"], ["422", "274"], ["353", "361"], ["23", "361"], ["325", "361"], ["361", "366"], ["23", "366"], ["345", "366"], ["355", "373"], ["23", "373"], ["366", "373"], ["378", "381"], ["384", "381"], ["23", "381"], ["304", "381"], ["392", "381"], ["381", "384"], ["23", "384"], ["489", "497"], ["23", "497"], ["487", "497"], ["502", "507"], ["511", "507"], ["23", "507"], ["509", "507"], ["517", "511"], ["543", "511"], ["23", "511"], ["517", "515"], ["517", "515"], ["23", "389"], ["497", "504"], ["23", "504"], ["497", "509"], ["527", "509"], ["23", "509"], ["23", "522"], ["389", "392"], ["395", "392"], ["23", "392"], ["381", "392"], ["407", "392"], ["392", "395"], ["23", "395"], ["23", "399"], ["444", "442"], ["444", "442"], ["444", "442"], ["509", "517"], ["23", "517"], ["507", "517"], ["522", "525"], ["529", "525"], ["23", "525"], ["527", "525"], ["533", "529"], ["538", "529"], ["543", "529"], ["550", "529"], ["23", "529"], ["550", "548"], ["550", "548"], ["251", "284"], ["23", "284"], ["266", "284"], ["266", "284"], ["23", "404"], ["517", "527"], ["550", "527"], ["23", "527"], ["23", "555"], ["251", "285"], ["23", "285"], ["266", "285"], ["404", "407"], ["410", "407"], ["23", "407"], ["392", "407"], ["436", "407"], ["23", "410"], ["407", "410"], ["415", "413"], ["415", "413"], ["415", "413"], ["304", "444"], ["415", "444"], ["23", "444"], ["180", "444"], ["442", "444"], ["399", "444"], ["413", "444"], ["525", "533"], ["23", "533"], ["477", "533"], ["533", "538"], ["23", "538"], ["497", "538"], ["538", "543"], ["23", "543"], ["517", "543"], ["527", "550"], ["23", "550"], ["543", "550"], ["555", "558"], ["561", "558"], ["23", "558"], ["456", "558"], ["569", "558"], ["558", "561"], ["23", "561"], ["399", "413"], ["23", "413"], ["23", "566"], ["422", "415"], ["23", "415"], ["603", "415"], ["274", "415"], ["422", "415"], ["422", "415"], ["566", "569"], ["572", "569"], ["23", "569"], ["558", "569"], ["580", "569"], ["569", "572"], ["23", "572"], ["304", "422"], ["444", "422"], ["415", "422"], ["23", "422"], ["610", "422"], ["274", "422"], ["621", "422"], ["23", "577"], ["577", "580"], ["583", "580"], ["23", "580"], ["569", "580"], ["595", "580"], ["580", "583"], ["23", "583"], ["23", "587"], ["643", "641"], ["643", "641"], ["643", "641"], ["23", "592"], ["381", "427"], ["23", "427"], ["407", "427"], ["407", "427"], ["392", "436"], ["23", "436"], ["407", "436"], ["427", "436"], ["592", "595"], ["598", "595"], ["23", "595"], ["580", "595"], ["635", "595"], ["23", "598"], ["595", "598"], ["603", "601"], ["603", "601"], ["603", "601"], ["456", "643"], ["603", "643"], ["23", "643"], ["180", "643"], ["641", "643"], ["587", "643"], ["601", "643"], ["381", "428"], ["23", "428"], ["407", "428"], ["392", "437"], ["23", "437"], ["407", "437"], ["587", "601"], ["23", "601"], ["610", "603"], ["23", "603"], ["415", "603"], ["274", "603"], ["610", "603"], ["610", "603"], ["621", "610"], ["23", "610"], ["422", "610"], ["274", "610"], ["621", "610"], ["621", "610"], ["456", "621"], ["643", "621"], ["603", "621"], ["23", "621"], ["422", "621"], ["558", "615"], ["23", "615"], ["595", "615"], ["595", "615"], ["558", "616"], ["23", "616"], ["595", "616"], ["569", "626"], ["23", "626"], ["595", "626"], ["615", "626"], ["580", "635"], ["23", "635"], ["595", "635"], ["626", "635"], ["569", "627"], ["23", "627"], ["595", "627"], ["580", "636"], ["23", "636"], ["595", "636"], ["50", "84"], ["50", "50"], ["50", "53"], ["50", "73"], ["50", "75"], ["50", "87"], ["50", "78"], ["50", "59"], ["50", "184"], ["50", "174"], ["50", "180"], ["50", "177"], ["50", "64"], ["50", "57"], ["50", "81"], ["50", "69"], ["50", "67"], ["50", "185"], ["50", "90"], ["50", "173"], ["50", "171"], ["50", "83"], ["50", "175"], ["50", "62"], ["90", "152"], ["90", "96"], ["90", "98"], ["90", "105"], ["90", "102"], ["90", "93"], ["90", "147"], ["90", "145"], ["90", "90"], ["90", "155"], ["90", "99"], ["90", "157"], ["184", "192"], ["184", "194"], ["184", "199"], ["184", "198"], ["184", "191"], ["105", "108"], ["105", "141"], ["105", "122"], ["105", "140"], ["105", "117"], ["105", "113"], ["105", "132"], ["105", "137"], ["105", "105"], ["105", "125"], ["105", "112"], ["105", "123"], ["105", "135"], ["105", "131"], ["105", "119"], ["105", "121"], ["105", "111"], ["105", "124"], ["155", "167"], ["155", "165"], ["155", "161"], ["155", "163"], ["155", "155"], ["155", "166"], ["155", "157"], ["198", "296"], ["198", "304"], ["198", "297"], ["198", "207"], ["198", "299"], ["198", "303"], ["198", "212"], ["198", "210"], ["210", "228"], ["210", "225"], ["210", "218"], ["210", "214"], ["210", "230"], ["210", "212"], ["210", "210"], ["210", "220"], ["303", "456"], ["303", "315"], ["303", "448"], ["303", "449"], ["303", "451"], ["303", "317"], ["303", "455"], ["303", "312"], ["228", "228"], ["228", "236"], ["228", "232"], ["228", "230"], ["315", "315"], ["315", "323"], ["315", "325"], ["315", "317"], ["315", "335"], ["315", "319"], ["315", "337"], ["315", "332"], ["315", "330"], ["455", "648"], ["455", "647"], ["455", "469"], ["455", "464"], ["455", "650"], ["455", "467"], ["236", "243"], ["236", "251"], ["236", "241"], ["236", "248"], ["251", "292"], ["251", "258"], ["251", "254"], ["251", "251"], ["251", "263"], ["251", "266"], ["251", "290"], ["335", "355"], ["335", "353"], ["335", "343"], ["335", "345"], ["335", "335"], ["335", "337"], ["335", "339"], ["335", "350"], ["467", "484"], ["467", "489"], ["467", "482"], ["467", "469"], ["467", "471"], ["467", "467"], ["467", "477"], ["467", "487"], ["467", "475"], ["266", "272"], ["266", "276"], ["266", "269"], ["266", "282"], ["266", "266"], ["266", "281"], ["266", "274"], ["266", "284"], ["266", "285"], ["266", "277"], ["353", "355"], ["353", "357"], ["353", "353"], ["353", "361"], ["487", "509"], ["487", "489"], ["487", "491"], ["487", "504"], ["487", "507"], ["487", "497"], ["487", "502"], ["487", "495"], ["487", "487"], ["361", "366"], ["366", "373"], ["366", "378"], ["366", "381"], ["366", "371"], ["381", "384"], ["381", "392"], ["381", "389"], ["381", "381"], ["507", "509"], ["507", "517"], ["507", "527"], ["507", "522"], ["507", "511"], ["507", "525"], ["507", "507"], ["507", "515"], ["392", "392"], ["392", "404"], ["392", "399"], ["392", "444"], ["392", "407"], ["392", "442"], ["392", "395"], ["525", "527"], ["525", "529"], ["525", "525"], ["525", "533"], ["407", "428"], ["407", "418"], ["407", "437"], ["407", "425"], ["407", "417"], ["407", "434"], ["407", "427"], ["407", "407"], ["407", "424"], ["407", "415"], ["407", "410"], ["407", "413"], ["407", "433"], ["407", "422"], ["407", "436"], ["533", "538"], ["538", "543"], ["543", "548"], ["543", "555"], ["543", "550"], ["543", "558"], ["558", "566"], ["558", "558"], ["558", "561"], ["558", "569"], ["569", "580"], ["569", "577"], ["569", "572"], ["569", "569"], ["580", "580"], ["580", "592"], ["580", "583"], ["580", "587"], ["580", "643"], ["580", "641"], ["580", "595"], ["595", "616"], ["595", "623"], ["595", "612"], ["595", "613"], ["595", "615"], ["595", "610"], ["595", "627"], ["595", "632"], ["595", "601"], ["595", "603"], ["595", "636"], ["595", "635"], ["595", "598"], ["595", "621"], ["595", "605"], ["595", "633"], ["595", "626"], ["595", "606"], ["595", "624"], ["595", "595"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new DataInputStream(System.in))<SUB>4</SUB>>", "28": "<(&lt;operator&gt;.alloc,new DataInputStream(System.in))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new DataInputStream(System.in))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new DataInputStream(System.in))<SUB>4</SUB>>", "33": "<(read,read(buf, 0, 1 &lt;&lt; 26))<SUB>9</SUB>>", "35": "<(IDENTIFIER,buf,read(buf, 0, 1 &lt;&lt; 26))<SUB>9</SUB>>", "37": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 26)<SUB>9</SUB>>", "39": "<(LITERAL,26,1 &lt;&lt; 26)<SUB>9</SUB>>", "41": "<(&lt;operator&gt;.assignment,int t = nni())<SUB>10</SUB>>", "43": "<(nni,nni())<SUB>10</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int z = 0; Some(z &lt; t); z++),for (int z = 0; Some(z &lt; t); z++))<SUB>11</SUB>>", "47": "<(&lt;operator&gt;.assignment,int z = 0)<SUB>11</SUB>>", "49": "<(LITERAL,0,int z = 0)<SUB>11</SUB>>", "51": "<(IDENTIFIER,z,z &lt; t)<SUB>11</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,z++)<SUB>11</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,int n = nni())<SUB>12</SUB>>", "59": "<(nni,nni())<SUB>12</SUB>>", "61": "<(LOCAL,int m: int)<SUB>13</SUB>>", "63": "<(IDENTIFIER,m,int m = nni())<SUB>13</SUB>>", "65": "<(IDENTIFIER,this,nni())<SUB>13</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[][] mat = new int[n][m])<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n][m])>", "71": "<(IDENTIFIER,m,new int[n][m])<SUB>14</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[] rmax = new int[n])<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[n])>", "77": "<(LOCAL,int tot: int)<SUB>16</SUB>>", "79": "<(IDENTIFIER,tot,int tot = 0)<SUB>16</SUB>>", "6": "<(LOCAL,HashSet&lt;Integer&gt; care: ANY)<SUB>17</SUB>>", "82": "<(IDENTIFIER,care,ANY care = new HashSet&lt;&gt;())<SUB>17</SUB>>", "84": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>17</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "96": "<(&lt;operator&gt;.assignment,ANY cols = new PriorityQueue&lt;&gt;())<SUB>19</SUB>>", "98": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;&gt;())<SUB>19</SUB>>", "7": "<(IDENTIFIER,cols,new PriorityQueue&lt;&gt;())<SUB>19</SUB>>", "101": "<(LOCAL,int j: int)<SUB>20</SUB>>", "103": "<(IDENTIFIER,j,int j = 0)<SUB>20</SUB>>", "105": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>20</SUB>>", "107": "<(IDENTIFIER,m,j &lt; m)<SUB>20</SUB>>", "109": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.assignment,mat[i][j] = nni())<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>21</SUB>>", "115": "<(IDENTIFIER,i,mat[i][j] = nni())<SUB>21</SUB>>", "117": "<(nni,nni())<SUB>21</SUB>>", "119": "<(add,add(-(mat[i][j] * 2000 + j)))<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.minus,-(mat[i][j] * 2000 + j))<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.multiplication,mat[i][j] * 2000)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,i,mat[i][j] * 2000)<SUB>22</SUB>>", "129": "<(LITERAL,2000,mat[i][j] * 2000)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.assignment,rmax[i] = Math.max(rmax[i], mat[i][j]))<SUB>23</SUB>>", "133": "<(IDENTIFIER,rmax,rmax[i] = Math.max(rmax[i], mat[i][j]))<SUB>23</SUB>>", "135": "<(max,Math.max(rmax[i], mat[i][j]))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,rmax[i])<SUB>23</SUB>>", "139": "<(IDENTIFIER,i,Math.max(rmax[i], mat[i][j]))<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>23</SUB>>", "143": "<(IDENTIFIER,i,Math.max(rmax[i], mat[i][j]))<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.assignmentPlus,tot += rmax[i])<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,rmax[i])<SUB>25</SUB>>", "149": "<(IDENTIFIER,i,tot += rmax[i])<SUB>25</SUB>>", "151": "<(LOCAL,int j: int)<SUB>26</SUB>>", "153": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.lessThan,j &lt; Math.min(m, n))<SUB>26</SUB>>", "157": "<(min,Math.min(m, n))<SUB>26</SUB>>", "159": "<(IDENTIFIER,m,Math.min(m, n))<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,j++)<SUB>26</SUB>>", "163": "<(add,add((-cols.poll()) % 2000))<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.modulo,(-cols.poll()) % 2000)<SUB>27</SUB>>", "167": "<(poll,poll())<SUB>27</SUB>>", "169": "<(LITERAL,2000,(-cols.poll()) % 2000)<SUB>27</SUB>>", "171": "<(&lt;operator&gt;.assignment,ANY cal = collect(Collectors.toList()))<SUB>29</SUB>>", "173": "<(collect,collect(Collectors.toList()))<SUB>29</SUB>>", "175": "<(stream,stream())<SUB>29</SUB>>", "177": "<(toList,toList())<SUB>29</SUB>>", "179": "<(LOCAL,int ret: int)<SUB>30</SUB>>", "181": "<(IDENTIFIER,ret,int ret = tot)<SUB>30</SUB>>", "183": "<(CONTROL_STRUCTURE,if (Math.min(m, n) == 1),if (Math.min(m, n) == 1))<SUB>31</SUB>>", "185": "<(min,Math.min(m, n))<SUB>31</SUB>>", "187": "<(IDENTIFIER,m,Math.min(m, n))<SUB>31</SUB>>", "189": "<(LITERAL,1,Math.min(m, n) == 1)<SUB>31</SUB>>", "191": "<(println,System.out.println(ret))<SUB>32</SUB>>", "193": "<(IDENTIFIER,System,System.out.println(ret))<SUB>32</SUB>>", "195": "<(IDENTIFIER,ret,System.out.println(ret))<SUB>32</SUB>>", "197": "<(CONTROL_STRUCTURE,if (Math.min(m, n) == 2),if (Math.min(m, n) == 2))<SUB>33</SUB>>", "199": "<(min,Math.min(m, n))<SUB>33</SUB>>", "201": "<(IDENTIFIER,m,Math.min(m, n))<SUB>33</SUB>>", "203": "<(LITERAL,2,Math.min(m, n) == 2)<SUB>33</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; cal.size()); a++),for (int a = 0; Some(a &lt; cal.size()); a++))<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>34</SUB>>", "209": "<(LITERAL,0,int a = 0)<SUB>34</SUB>>", "211": "<(IDENTIFIER,a,a &lt; cal.size())<SUB>34</SUB>>", "213": "<(IDENTIFIER,cal,size())<SUB>34</SUB>>", "215": "<(IDENTIFIER,a,a++)<SUB>34</SUB>>", "217": "<(LOCAL,int la: int)<SUB>35</SUB>>", "219": "<(IDENTIFIER,la,int la = get(a))<SUB>35</SUB>>", "221": "<(IDENTIFIER,cal,get(a))<SUB>35</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int d = 0; Some(d &lt; cal.size()); d++),for (int d = 0; Some(d &lt; cal.size()); d++))<SUB>36</SUB>>", "225": "<(&lt;operator&gt;.assignment,int d = 0)<SUB>36</SUB>>", "227": "<(LITERAL,0,int d = 0)<SUB>36</SUB>>", "229": "<(IDENTIFIER,d,d &lt; cal.size())<SUB>36</SUB>>", "231": "<(IDENTIFIER,cal,size())<SUB>36</SUB>>", "233": "<(IDENTIFIER,d,d++)<SUB>36</SUB>>", "235": "<(CONTROL_STRUCTURE,if (d == a),if (d == a))<SUB>37</SUB>>", "237": "<(IDENTIFIER,d,d == a)<SUB>37</SUB>>", "239": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>38</SUB>>", "241": "<(&lt;operator&gt;.assignment,int ld = get(d))<SUB>39</SUB>>", "243": "<(get,get(d))<SUB>39</SUB>>", "245": "<(IDENTIFIER,d,get(d))<SUB>39</SUB>>", "247": "<(LOCAL,int i: int)<SUB>40</SUB>>", "249": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "251": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>40</SUB>>", "253": "<(IDENTIFIER,n,i &lt; n)<SUB>40</SUB>>", "255": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "257": "<(LOCAL,int tret: int)<SUB>41</SUB>>", "259": "<(IDENTIFIER,tret,int tret = 0)<SUB>41</SUB>>", "261": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt; n); x++),for (int x = 0; Some(x &lt; n); x++))<SUB>42</SUB>>", "263": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>42</SUB>>", "265": "<(LITERAL,0,int x = 0)<SUB>42</SUB>>", "267": "<(IDENTIFIER,x,x &lt; n)<SUB>42</SUB>>", "269": "<(&lt;operator&gt;.postIncrement,x++)<SUB>42</SUB>>", "271": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "273": "<(IDENTIFIER,tret,tret += Math.max(mat[x][ld], mat[(i + x) % n][la]))<SUB>43</SUB>>", "275": "<(IDENTIFIER,Math,Math.max(mat[x][ld], mat[(i + x) % n][la]))<SUB>43</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,mat[x])<SUB>43</SUB>>", "279": "<(IDENTIFIER,x,Math.max(mat[x][ld], mat[(i + x) % n][la]))<SUB>43</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,mat[(i + x) % n][la])<SUB>43</SUB>>", "283": "<(IDENTIFIER,mat,Math.max(mat[x][ld], mat[(i + x) % n][la]))<SUB>43</SUB>>", "285": "<(&lt;operator&gt;.addition,i + x)<SUB>43</SUB>>", "287": "<(IDENTIFIER,x,i + x)<SUB>43</SUB>>", "289": "<(IDENTIFIER,la,Math.max(mat[x][ld], mat[(i + x) % n][la]))<SUB>43</SUB>>", "291": "<(IDENTIFIER,ret,ret = Math.max(ret, tret))<SUB>45</SUB>>", "293": "<(IDENTIFIER,Math,Math.max(ret, tret))<SUB>45</SUB>>", "295": "<(IDENTIFIER,tret,Math.max(ret, tret))<SUB>45</SUB>>", "297": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "299": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "301": "<(CONTROL_STRUCTURE,else,else)<SUB>50</SUB>>", "303": "<(&lt;operator&gt;.equals,Math.min(m, n) == 3)<SUB>50</SUB>>", "305": "<(IDENTIFIER,Math,Math.min(m, n))<SUB>50</SUB>>", "307": "<(IDENTIFIER,n,Math.min(m, n))<SUB>50</SUB>>", "309": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "311": "<(LOCAL,int a: int)<SUB>51</SUB>>", "313": "<(IDENTIFIER,a,int a = 0)<SUB>51</SUB>>", "315": "<(&lt;operator&gt;.lessThan,a &lt; cal.size())<SUB>51</SUB>>", "317": "<(size,size())<SUB>51</SUB>>", "319": "<(&lt;operator&gt;.postIncrement,a++)<SUB>51</SUB>>", "321": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "323": "<(&lt;operator&gt;.assignment,int la = get(a))<SUB>52</SUB>>", "325": "<(get,get(a))<SUB>52</SUB>>", "327": "<(IDENTIFIER,a,get(a))<SUB>52</SUB>>", "329": "<(LOCAL,int b: int)<SUB>53</SUB>>", "331": "<(IDENTIFIER,b,int b = a + 1)<SUB>53</SUB>>", "333": "<(IDENTIFIER,a,a + 1)<SUB>53</SUB>>", "335": "<(&lt;operator&gt;.lessThan,b &lt; cal.size())<SUB>53</SUB>>", "337": "<(size,size())<SUB>53</SUB>>", "339": "<(&lt;operator&gt;.postIncrement,b++)<SUB>53</SUB>>", "341": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "343": "<(&lt;operator&gt;.assignment,int lb = get(b))<SUB>54</SUB>>", "345": "<(get,get(b))<SUB>54</SUB>>", "347": "<(IDENTIFIER,b,get(b))<SUB>54</SUB>>", "349": "<(LOCAL,int d: int)<SUB>55</SUB>>", "351": "<(IDENTIFIER,d,int d = 0)<SUB>55</SUB>>", "353": "<(&lt;operator&gt;.lessThan,d &lt; cal.size())<SUB>55</SUB>>", "355": "<(size,size())<SUB>55</SUB>>", "357": "<(&lt;operator&gt;.postIncrement,d++)<SUB>55</SUB>>", "359": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>>", "361": "<(&lt;operator&gt;.equals,d == a)<SUB>56</SUB>>", "363": "<(IDENTIFIER,a,d == a)<SUB>56</SUB>>", "365": "<(CONTROL_STRUCTURE,if (d == b),if (d == b))<SUB>58</SUB>>", "367": "<(IDENTIFIER,d,d == b)<SUB>58</SUB>>", "369": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>59</SUB>>", "371": "<(&lt;operator&gt;.assignment,int ld = get(d))<SUB>60</SUB>>", "373": "<(get,get(d))<SUB>60</SUB>>", "375": "<(IDENTIFIER,d,get(d))<SUB>60</SUB>>", "377": "<(LOCAL,int i: int)<SUB>61</SUB>>", "379": "<(IDENTIFIER,i,int i = 0)<SUB>61</SUB>>", "381": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>61</SUB>>", "383": "<(IDENTIFIER,n,i &lt; n)<SUB>61</SUB>>", "385": "<(IDENTIFIER,i,i++)<SUB>61</SUB>>", "387": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>62</SUB>>", "389": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>62</SUB>>", "391": "<(LITERAL,0,int j = 0)<SUB>62</SUB>>", "393": "<(IDENTIFIER,j,j &lt; n)<SUB>62</SUB>>", "395": "<(&lt;operator&gt;.postIncrement,j++)<SUB>62</SUB>>", "397": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "399": "<(&lt;operator&gt;.assignment,int tret = 0)<SUB>63</SUB>>", "401": "<(LITERAL,0,int tret = 0)<SUB>63</SUB>>", "403": "<(LOCAL,int x: int)<SUB>64</SUB>>", "405": "<(IDENTIFIER,x,int x = 0)<SUB>64</SUB>>", "407": "<(&lt;operator&gt;.lessThan,x &lt; n)<SUB>64</SUB>>", "409": "<(IDENTIFIER,n,x &lt; n)<SUB>64</SUB>>", "411": "<(IDENTIFIER,x,x++)<SUB>64</SUB>>", "413": "<(&lt;operator&gt;.assignmentPlus,tret += Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb])))<SUB>65</SUB>>", "415": "<(max,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb])))<SUB>65</SUB>>", "417": "<(&lt;operator&gt;.indexAccess,mat[x][ld])<SUB>65</SUB>>", "419": "<(IDENTIFIER,mat,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb])))<SUB>65</SUB>>", "421": "<(IDENTIFIER,ld,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb])))<SUB>65</SUB>>", "423": "<(IDENTIFIER,Math,Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb]))<SUB>65</SUB>>", "425": "<(&lt;operator&gt;.indexAccess,mat[(i + x) % n])<SUB>65</SUB>>", "427": "<(&lt;operator&gt;.modulo,(i + x) % n)<SUB>65</SUB>>", "429": "<(IDENTIFIER,i,i + x)<SUB>65</SUB>>", "431": "<(IDENTIFIER,n,(i + x) % n)<SUB>65</SUB>>", "433": "<(&lt;operator&gt;.indexAccess,mat[(j + x) % n][lb])<SUB>65</SUB>>", "435": "<(IDENTIFIER,mat,Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb]))<SUB>65</SUB>>", "437": "<(&lt;operator&gt;.addition,j + x)<SUB>65</SUB>>", "439": "<(IDENTIFIER,x,j + x)<SUB>65</SUB>>", "441": "<(IDENTIFIER,lb,Math.max(mat[(i + x) % n][la], mat[(j + x) % n][lb]))<SUB>65</SUB>>", "443": "<(IDENTIFIER,ret,ret = Math.max(ret, tret))<SUB>67</SUB>>", "445": "<(IDENTIFIER,Math,Math.max(ret, tret))<SUB>67</SUB>>", "447": "<(IDENTIFIER,tret,Math.max(ret, tret))<SUB>67</SUB>>", "449": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>73</SUB>>", "451": "<(FIELD_IDENTIFIER,out,out)<SUB>73</SUB>>", "453": "<(CONTROL_STRUCTURE,else,else)<SUB>74</SUB>>", "455": "<(&lt;operator&gt;.equals,Math.min(m, n) == 4)<SUB>74</SUB>>", "457": "<(IDENTIFIER,Math,Math.min(m, n))<SUB>74</SUB>>", "459": "<(IDENTIFIER,n,Math.min(m, n))<SUB>74</SUB>>", "461": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>>", "463": "<(LOCAL,int a: int)<SUB>75</SUB>>", "465": "<(IDENTIFIER,a,int a = 0)<SUB>75</SUB>>", "467": "<(&lt;operator&gt;.lessThan,a &lt; cal.size())<SUB>75</SUB>>", "469": "<(size,size())<SUB>75</SUB>>", "471": "<(&lt;operator&gt;.postIncrement,a++)<SUB>75</SUB>>", "473": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "475": "<(&lt;operator&gt;.assignment,int la = get(a))<SUB>76</SUB>>", "477": "<(get,get(a))<SUB>76</SUB>>", "479": "<(IDENTIFIER,a,get(a))<SUB>76</SUB>>", "481": "<(LOCAL,int b: int)<SUB>77</SUB>>", "483": "<(IDENTIFIER,b,int b = a + 1)<SUB>77</SUB>>", "485": "<(IDENTIFIER,a,a + 1)<SUB>77</SUB>>", "487": "<(&lt;operator&gt;.lessThan,b &lt; cal.size())<SUB>77</SUB>>", "489": "<(size,size())<SUB>77</SUB>>", "491": "<(&lt;operator&gt;.postIncrement,b++)<SUB>77</SUB>>", "493": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>77</SUB>>", "495": "<(&lt;operator&gt;.assignment,int lb = get(b))<SUB>78</SUB>>", "497": "<(get,get(b))<SUB>78</SUB>>", "499": "<(IDENTIFIER,b,get(b))<SUB>78</SUB>>", "501": "<(LOCAL,int c: int)<SUB>79</SUB>>", "503": "<(IDENTIFIER,c,int c = b + 1)<SUB>79</SUB>>", "505": "<(IDENTIFIER,b,b + 1)<SUB>79</SUB>>", "507": "<(&lt;operator&gt;.lessThan,c &lt; cal.size())<SUB>79</SUB>>", "509": "<(size,size())<SUB>79</SUB>>", "511": "<(&lt;operator&gt;.postIncrement,c++)<SUB>79</SUB>>", "513": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>79</SUB>>", "515": "<(&lt;operator&gt;.assignment,int lc = get(c))<SUB>80</SUB>>", "517": "<(get,get(c))<SUB>80</SUB>>", "519": "<(IDENTIFIER,c,get(c))<SUB>80</SUB>>", "521": "<(LOCAL,int d: int)<SUB>81</SUB>>", "523": "<(IDENTIFIER,d,int d = 0)<SUB>81</SUB>>", "525": "<(&lt;operator&gt;.lessThan,d &lt; cal.size())<SUB>81</SUB>>", "527": "<(size,size())<SUB>81</SUB>>", "529": "<(&lt;operator&gt;.postIncrement,d++)<SUB>81</SUB>>", "531": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>81</SUB>>", "533": "<(&lt;operator&gt;.equals,d == a)<SUB>82</SUB>>", "535": "<(IDENTIFIER,a,d == a)<SUB>82</SUB>>", "537": "<(CONTROL_STRUCTURE,if (d == b),if (d == b))<SUB>84</SUB>>", "539": "<(IDENTIFIER,d,d == b)<SUB>84</SUB>>", "541": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>85</SUB>>", "543": "<(&lt;operator&gt;.equals,d == c)<SUB>86</SUB>>", "545": "<(IDENTIFIER,c,d == c)<SUB>86</SUB>>", "547": "<(LOCAL,int ld: int)<SUB>88</SUB>>", "549": "<(IDENTIFIER,ld,int ld = get(d))<SUB>88</SUB>>", "551": "<(IDENTIFIER,cal,get(d))<SUB>88</SUB>>", "553": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>89</SUB>>", "555": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>89</SUB>>", "557": "<(LITERAL,0,int i = 0)<SUB>89</SUB>>", "559": "<(IDENTIFIER,i,i &lt; n)<SUB>89</SUB>>", "561": "<(&lt;operator&gt;.postIncrement,i++)<SUB>89</SUB>>", "563": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>89</SUB>>", "565": "<(LOCAL,int j: int)<SUB>90</SUB>>", "567": "<(IDENTIFIER,j,int j = 0)<SUB>90</SUB>>", "569": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>90</SUB>>", "571": "<(IDENTIFIER,n,j &lt; n)<SUB>90</SUB>>", "573": "<(IDENTIFIER,j,j++)<SUB>90</SUB>>", "575": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>91</SUB>>", "577": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>91</SUB>>", "579": "<(LITERAL,0,int k = 0)<SUB>91</SUB>>", "581": "<(IDENTIFIER,k,k &lt; n)<SUB>91</SUB>>", "583": "<(&lt;operator&gt;.postIncrement,k++)<SUB>91</SUB>>", "585": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>91</SUB>>", "587": "<(&lt;operator&gt;.assignment,int tret = 0)<SUB>92</SUB>>", "589": "<(LITERAL,0,int tret = 0)<SUB>92</SUB>>", "591": "<(LOCAL,int x: int)<SUB>93</SUB>>", "593": "<(IDENTIFIER,x,int x = 0)<SUB>93</SUB>>", "595": "<(&lt;operator&gt;.lessThan,x &lt; n)<SUB>93</SUB>>", "597": "<(IDENTIFIER,n,x &lt; n)<SUB>93</SUB>>", "599": "<(IDENTIFIER,x,x++)<SUB>93</SUB>>", "601": "<(&lt;operator&gt;.assignmentPlus,tret += Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))))<SUB>94</SUB>>", "603": "<(max,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))))<SUB>94</SUB>>", "605": "<(&lt;operator&gt;.indexAccess,mat[x][ld])<SUB>94</SUB>>", "607": "<(IDENTIFIER,mat,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))))<SUB>94</SUB>>", "609": "<(IDENTIFIER,ld,Math.max(mat[x][ld], Math.max(mat[(i + x) % n][la], Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))))<SUB>94</SUB>>", "611": "<(IDENTIFIER,Math,Math.max(mat[(i + x) % n][la], Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc])))<SUB>94</SUB>>", "613": "<(&lt;operator&gt;.indexAccess,mat[(i + x) % n])<SUB>94</SUB>>", "615": "<(&lt;operator&gt;.modulo,(i + x) % n)<SUB>94</SUB>>", "617": "<(IDENTIFIER,i,i + x)<SUB>94</SUB>>", "619": "<(IDENTIFIER,n,(i + x) % n)<SUB>94</SUB>>", "621": "<(max,Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))<SUB>94</SUB>>", "623": "<(&lt;operator&gt;.indexAccess,mat[(j + x) % n][lb])<SUB>94</SUB>>", "625": "<(IDENTIFIER,mat,Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))<SUB>94</SUB>>", "627": "<(&lt;operator&gt;.addition,j + x)<SUB>94</SUB>>", "629": "<(IDENTIFIER,x,j + x)<SUB>94</SUB>>", "631": "<(IDENTIFIER,lb,Math.max(mat[(j + x) % n][lb], mat[(k + x) % n][lc]))<SUB>94</SUB>>", "633": "<(&lt;operator&gt;.indexAccess,mat[(k + x) % n])<SUB>94</SUB>>", "635": "<(&lt;operator&gt;.modulo,(k + x) % n)<SUB>94</SUB>>", "637": "<(IDENTIFIER,k,k + x)<SUB>94</SUB>>", "639": "<(IDENTIFIER,n,(k + x) % n)<SUB>94</SUB>>", "641": "<(&lt;operator&gt;.assignment,ret = Math.max(ret, tret))<SUB>96</SUB>>", "643": "<(max,Math.max(ret, tret))<SUB>96</SUB>>", "645": "<(IDENTIFIER,ret,Math.max(ret, tret))<SUB>96</SUB>>", "647": "<(println,System.out.println(ret))<SUB>104</SUB>>", "649": "<(IDENTIFIER,System,System.out.println(ret))<SUB>104</SUB>>", "651": "<(IDENTIFIER,ret,System.out.println(ret))<SUB>104</SUB>>", "653": "<(MODIFIER,STATIC)>"}}