{"edges": [["19", "20"], ["19", "21"], ["19", "114"], ["19", "115"], ["19", "116"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "50"], ["21", "65"], ["21", "66"], ["21", "72"], ["21", "73"], ["21", "84"], ["21", "91"], ["21", "96"], ["21", "109"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "64"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["68", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["66", "78"], ["73", "87"], ["84", "93"], ["91", "97"], ["109", "116"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "47"], ["40", "51"], ["51", "58"], ["51", "68"], ["68", "66"], ["75", "73"], ["86", "84"], ["93", "91"], ["97", "104"], ["97", "112"], ["100", "112"], ["110", "109"], ["28", "26"], ["44", "49"], ["49", "116"], ["55", "64"], ["64", "116"], ["76", "81"], ["81", "75"], ["87", "86"], ["102", "100"], ["112", "110"], ["45", "44"], ["56", "60"], ["59", "55"], ["78", "76"], ["103", "102"], ["47", "45"], ["58", "56"], ["60", "59"], ["104", "103"], ["19", "24"], ["49", "116"], ["64", "116"], ["20", "116"], ["22", "116"], ["25", "116"], ["25", "116"], ["30", "116"], ["35", "116"], ["37", "116"], ["35", "116"], ["35", "116"], ["40", "116"], ["40", "116"], ["44", "116"], ["44", "116"], ["68", "116"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["68", "66"], ["68", "66"], ["68", "66"], ["75", "73"], ["75", "73"], ["87", "84"], ["87", "84"], ["19", "84"], ["93", "91"], ["93", "91"], ["22", "25"], ["19", "25"], ["102", "100"], ["102", "100"], ["97", "109"], ["100", "109"], ["19", "109"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "40"], ["19", "40"], ["19", "49"], ["35", "51"], ["19", "51"], ["19", "64"], ["19", "68"], ["51", "68"], ["76", "75"], ["76", "75"], ["81", "75"], ["81", "75"], ["87", "86"], ["87", "86"], ["19", "86"], ["84", "93"], ["19", "93"], ["81", "93"], ["91", "97"], ["19", "97"], ["19", "44"], ["59", "55"], ["59", "55"], ["19", "76"], ["78", "76"], ["78", "76"], ["66", "81"], ["19", "81"], ["78", "81"], ["73", "87"], ["19", "87"], ["81", "87"], ["104", "102"], ["104", "102"], ["19", "102"], ["60", "59"], ["60", "59"], ["19", "59"], ["40", "78"], ["19", "78"], ["104", "103"], ["104", "103"], ["19", "103"], ["19", "60"], ["40", "60"], ["97", "104"], ["19", "104"], ["93", "104"], ["40", "47"], ["40", "49"], ["40", "51"], ["40", "45"], ["40", "44"], ["51", "68"], ["51", "60"], ["51", "73"], ["51", "64"], ["51", "66"], ["51", "75"], ["51", "81"], ["51", "84"], ["51", "56"], ["51", "76"], ["51", "59"], ["51", "87"], ["51", "97"], ["51", "91"], ["51", "112"], ["51", "93"], ["51", "58"], ["51", "110"], ["51", "55"], ["51", "78"], ["51", "109"], ["51", "86"], ["97", "102"], ["97", "103"], ["97", "104"], ["97", "100"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long x: long)<SUB>4</SUB>>", "31": "<(IDENTIFIER,x,long x = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>6</SUB>>", "41": "<(IDENTIFIER,x,x == 0)<SUB>6</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "49": "<(RETURN,return;,return;)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.equals,k == 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,k == 0)<SUB>8</SUB>>", "55": "<(println,println((2l * x) % mod))<SUB>9</SUB>>", "57": "<(IDENTIFIER,System,println((2l * x) % mod))<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.modulo,(2l * x) % mod)<SUB>9</SUB>>", "61": "<(LITERAL,2l,2l * x)<SUB>9</SUB>>", "63": "<(IDENTIFIER,mod,(2l * x) % mod)<SUB>9</SUB>>", "65": "<(LOCAL,long m: long)<SUB>12</SUB>>", "67": "<(IDENTIFIER,m,long m = pow(2, k))<SUB>12</SUB>>", "69": "<(IDENTIFIER,this,pow(2, k))<SUB>12</SUB>>", "71": "<(IDENTIFIER,k,pow(2, k))<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,long a = 2l * (x % mod) * (m % mod))<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.multiplication,2l * (x % mod) * (m % mod))<SUB>15</SUB>>", "77": "<(LITERAL,2l,2l * (x % mod))<SUB>15</SUB>>", "79": "<(IDENTIFIER,x,x % mod)<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.modulo,m % mod)<SUB>15</SUB>>", "83": "<(IDENTIFIER,mod,m % mod)<SUB>15</SUB>>", "85": "<(IDENTIFIER,a,a = a - m + 1)<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.subtraction,a - m)<SUB>18</SUB>>", "89": "<(IDENTIFIER,m,a - m)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.assignment,a = a % mod)<SUB>20</SUB>>", "93": "<(&lt;operator&gt;.modulo,a % mod)<SUB>20</SUB>>", "95": "<(IDENTIFIER,mod,a % mod)<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.lessThan,a &lt; 0)<SUB>21</SUB>>", "99": "<(LITERAL,0,a &lt; 0)<SUB>21</SUB>>", "101": "<(IDENTIFIER,a,a = (a % mod + mod) % mod)<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.addition,a % mod + mod)<SUB>21</SUB>>", "105": "<(IDENTIFIER,a,a % mod)<SUB>21</SUB>>", "107": "<(IDENTIFIER,mod,a % mod + mod)<SUB>21</SUB>>", "109": "<(println,System.out.println(a))<SUB>23</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(a))<SUB>23</SUB>>", "113": "<(IDENTIFIER,a,System.out.println(a))<SUB>23</SUB>>", "115": "<(MODIFIER,STATIC)>"}}