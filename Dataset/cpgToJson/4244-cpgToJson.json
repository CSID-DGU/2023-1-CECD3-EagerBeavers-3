{"edges": [["21", "22"], ["21", "23"], ["21", "298"], ["21", "299"], ["21", "300"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "296"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "48"], ["44", "45"], ["44", "47"], ["45", "46"], ["48", "49"], ["48", "50"], ["48", "54"], ["48", "55"], ["48", "59"], ["48", "60"], ["48", "67"], ["48", "115"], ["48", "122"], ["48", "132"], ["48", "139"], ["48", "140"], ["48", "146"], ["48", "287"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "97"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["103", "110"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["117", "120"], ["117", "121"], ["122", "123"], ["122", "124"], ["122", "125"], ["125", "126"], ["125", "129"], ["125", "131"], ["126", "127"], ["126", "128"], ["129", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["134", "137"], ["134", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "157"], ["146", "159"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["153", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "167"], ["159", "235"], ["159", "236"], ["159", "240"], ["161", "162"], ["161", "163"], ["163", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "177"], ["167", "179"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["180", "181"], ["180", "182"], ["180", "185"], ["180", "188"], ["180", "190"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "225"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "203"], ["195", "205"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["206", "207"], ["206", "214"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "231"], ["229", "234"], ["231", "232"], ["231", "233"], ["236", "237"], ["236", "238"], ["238", "239"], ["240", "241"], ["240", "242"], ["240", "245"], ["240", "250"], ["240", "252"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["250", "251"], ["252", "253"], ["253", "254"], ["253", "255"], ["253", "258"], ["253", "261"], ["253", "268"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["268", "269"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["273", "278"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "284"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["296", "297"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "45"], ["296", "300"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["44", "52"], ["44", "296"], ["30", "28"], ["37", "35"], ["45", "44"], ["50", "57"], ["55", "63"], ["60", "69"], ["115", "128"], ["122", "134"], ["132", "143"], ["140", "148"], ["287", "45"], ["52", "50"], ["57", "55"], ["62", "60"], ["69", "72"], ["72", "80"], ["72", "117"], ["75", "72"], ["117", "115"], ["134", "132"], ["142", "140"], ["148", "153"], ["151", "164"], ["151", "292"], ["157", "153"], ["289", "287"], ["63", "62"], ["126", "129"], ["129", "122"], ["143", "142"], ["153", "151"], ["161", "169"], ["236", "242"], ["291", "289"], ["80", "83"], ["83", "91"], ["83", "75"], ["86", "83"], ["128", "126"], ["163", "161"], ["169", "174"], ["172", "182"], ["172", "238"], ["177", "174"], ["238", "236"], ["242", "247"], ["245", "255"], ["245", "157"], ["250", "247"], ["292", "291"], ["89", "99"], ["97", "86"], ["164", "163"], ["174", "172"], ["247", "245"], ["90", "95"], ["95", "89"], ["98", "106"], ["103", "97"], ["182", "185"], ["185", "192"], ["185", "177"], ["188", "185"], ["255", "258"], ["258", "270"], ["258", "250"], ["261", "258"], ["91", "90"], ["99", "98"], ["105", "111"], ["110", "103"], ["192", "197"], ["225", "188"], ["263", "261"], ["269", "264"], ["106", "105"], ["111", "110"], ["197", "200"], ["200", "210"], ["200", "226"], ["203", "200"], ["226", "231"], ["229", "225"], ["264", "263"], ["270", "275"], ["273", "269"], ["231", "229"], ["275", "281"], ["278", "273"], ["207", "220"], ["207", "203"], ["214", "203"], ["279", "284"], ["284", "278"], ["208", "207"], ["216", "214"], ["281", "279"], ["210", "208"], ["217", "216"], ["219", "217"], ["220", "219"], ["21", "26"], ["22", "300"], ["24", "300"], ["27", "300"], ["27", "300"], ["31", "300"], ["34", "300"], ["34", "300"], ["41", "300"], ["39", "300"], ["39", "300"], ["45", "300"], ["44", "300"], ["44", "300"], ["296", "300"], ["296", "300"], ["50", "300"], ["57", "300"], ["55", "300"], ["55", "300"], ["62", "300"], ["60", "300"], ["60", "300"], ["72", "300"], ["115", "300"], ["115", "300"], ["126", "300"], ["129", "300"], ["129", "300"], ["122", "300"], ["132", "300"], ["134", "300"], ["132", "300"], ["132", "300"], ["140", "300"], ["140", "300"], ["140", "300"], ["148", "300"], ["151", "300"], ["153", "300"], ["153", "300"], ["151", "300"], ["151", "300"], ["292", "300"], ["291", "300"], ["287", "300"], ["287", "300"], ["161", "300"], ["161", "300"], ["161", "300"], ["169", "300"], ["236", "300"], ["238", "300"], ["236", "300"], ["236", "300"], ["242", "300"], ["245", "300"], ["245", "300"], ["157", "300"], ["255", "300"], ["258", "300"], ["258", "300"], ["250", "300"], ["269", "300"], ["278", "300"], ["278", "300"], ["273", "300"], ["269", "300"], ["269", "300"], ["263", "300"], ["261", "300"], ["261", "300"], ["182", "300"], ["185", "300"], ["185", "300"], ["177", "300"], ["192", "300"], ["197", "300"], ["200", "300"], ["200", "300"], ["225", "300"], ["229", "300"], ["225", "300"], ["225", "300"], ["188", "300"], ["208", "300"], ["207", "300"], ["207", "300"], ["219", "300"], ["214", "300"], ["214", "300"], ["203", "300"], ["80", "300"], ["83", "300"], ["83", "300"], ["75", "300"], ["95", "300"], ["89", "300"], ["89", "300"], ["97", "300"], ["103", "300"], ["97", "300"], ["97", "300"], ["86", "300"], ["122", "300"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["34", "296"], ["287", "296"], ["21", "296"], ["27", "41"], ["21", "41"], ["45", "44"], ["21", "44"], ["52", "50"], ["57", "55"], ["62", "60"], ["62", "60"], ["117", "115"], ["117", "115"], ["117", "115"], ["117", "115"], ["134", "132"], ["134", "132"], ["134", "132"], ["134", "132"], ["142", "140"], ["39", "45"], ["21", "45"], ["21", "69"], ["21", "122"], ["115", "122"], ["126", "122"], ["129", "122"], ["21", "148"], ["34", "287"], ["21", "287"], ["140", "287"], ["238", "287"], ["41", "52"], ["57", "52"], ["95", "52"], ["21", "52"], ["52", "57"], ["21", "57"], ["50", "62"], ["21", "62"], ["55", "62"], ["69", "72"], ["75", "72"], ["21", "72"], ["50", "72"], ["72", "75"], ["21", "75"], ["134", "117"], ["21", "117"], ["60", "117"], ["72", "117"], ["62", "117"], ["83", "117"], ["21", "126"], ["21", "131"], ["117", "134"], ["21", "134"], ["122", "134"], ["117", "134"], ["117", "134"], ["143", "142"], ["143", "142"], ["148", "151"], ["157", "151"], ["21", "151"], ["153", "151"], ["153", "151"], ["153", "151"], ["151", "157"], ["21", "157"], ["163", "161"], ["238", "236"], ["50", "63"], ["21", "63"], ["21", "80"], ["126", "129"], ["21", "129"], ["21", "143"], ["134", "143"], ["273", "153"], ["229", "153"], ["103", "153"], ["21", "153"], ["143", "153"], ["247", "153"], ["134", "153"], ["21", "169"], ["21", "242"], ["292", "291"], ["292", "291"], ["21", "291"], ["80", "83"], ["86", "83"], ["21", "83"], ["62", "83"], ["83", "86"], ["21", "86"], ["95", "89"], ["103", "97"], ["103", "97"], ["103", "97"], ["164", "163"], ["164", "163"], ["169", "172"], ["177", "172"], ["21", "172"], ["174", "172"], ["174", "172"], ["172", "177"], ["208", "177"], ["21", "177"], ["140", "238"], ["287", "238"], ["269", "238"], ["21", "238"], ["242", "245"], ["250", "245"], ["21", "245"], ["247", "245"], ["247", "245"], ["263", "250"], ["21", "250"], ["245", "250"], ["21", "292"], ["153", "292"], ["21", "164"], ["153", "164"], ["21", "174"], ["164", "174"], ["185", "174"], ["21", "182"], ["21", "247"], ["174", "247"], ["245", "255"], ["21", "255"], ["263", "261"], ["263", "261"], ["57", "95"], ["21", "95"], ["153", "103"], ["21", "103"], ["97", "103"], ["89", "103"], ["182", "185"], ["188", "185"], ["21", "185"], ["174", "185"], ["200", "185"], ["185", "188"], ["21", "188"], ["21", "192"], ["229", "225"], ["229", "225"], ["229", "225"], ["255", "258"], ["261", "258"], ["21", "258"], ["273", "269"], ["273", "269"], ["273", "269"], ["21", "197"], ["264", "263"], ["264", "263"], ["281", "263"], ["21", "263"], ["197", "200"], ["203", "200"], ["21", "200"], ["185", "200"], ["219", "200"], ["210", "203"], ["21", "203"], ["153", "229"], ["21", "229"], ["161", "229"], ["225", "229"], ["192", "229"], ["214", "229"], ["281", "264"], ["21", "264"], ["153", "273"], ["229", "273"], ["21", "273"], ["238", "273"], ["269", "273"], ["236", "273"], ["161", "273"], ["236", "278"], ["161", "278"], ["208", "207"], ["208", "207"], ["21", "207"], ["192", "214"], ["21", "214"], ["172", "208"], ["21", "208"], ["210", "208"], ["210", "208"], ["258", "281"], ["21", "281"], ["263", "281"], ["245", "281"], ["21", "210"], ["200", "210"], ["210", "219"], ["21", "219"], ["185", "219"], ["200", "219"], ["210", "220"], ["21", "220"], ["185", "220"], ["44", "60"], ["44", "52"], ["44", "128"], ["44", "292"], ["44", "50"], ["44", "129"], ["44", "134"], ["44", "148"], ["44", "122"], ["44", "72"], ["44", "140"], ["44", "117"], ["44", "55"], ["44", "115"], ["44", "57"], ["44", "69"], ["44", "132"], ["44", "151"], ["44", "153"], ["44", "291"], ["44", "44"], ["44", "289"], ["44", "287"], ["44", "142"], ["44", "45"], ["44", "143"], ["44", "126"], ["44", "63"], ["44", "62"], ["72", "80"], ["72", "72"], ["72", "75"], ["72", "83"], ["151", "161"], ["151", "163"], ["151", "247"], ["151", "242"], ["151", "238"], ["151", "174"], ["151", "236"], ["151", "172"], ["151", "169"], ["151", "151"], ["151", "245"], ["151", "153"], ["151", "164"], ["151", "157"], ["83", "95"], ["83", "86"], ["83", "98"], ["83", "103"], ["83", "97"], ["83", "91"], ["83", "90"], ["83", "111"], ["83", "89"], ["83", "99"], ["83", "106"], ["83", "83"], ["83", "105"], ["83", "110"], ["172", "174"], ["172", "182"], ["172", "177"], ["172", "172"], ["172", "185"], ["245", "247"], ["245", "258"], ["245", "245"], ["245", "255"], ["245", "250"], ["185", "188"], ["185", "192"], ["185", "226"], ["185", "200"], ["185", "229"], ["185", "225"], ["185", "185"], ["185", "197"], ["185", "231"], ["258", "264"], ["258", "281"], ["258", "258"], ["258", "278"], ["258", "269"], ["258", "273"], ["258", "261"], ["258", "279"], ["258", "275"], ["258", "284"], ["258", "270"], ["258", "263"], ["200", "208"], ["200", "200"], ["200", "207"], ["200", "210"], ["200", "203"], ["207", "214"], ["207", "217"], ["207", "216"], ["207", "220"], ["207", "219"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>8</SUB>>", "41": "<(nextInt,nextInt())<SUB>8</SUB>>", "43": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>10</SUB>>", "45": "<(&lt;operator&gt;.postDecrement,t--)<SUB>10</SUB>>", "47": "<(LITERAL,0,t-- &gt; 0)<SUB>10</SUB>>", "49": "<(LOCAL,int n: int)<SUB>11</SUB>>", "51": "<(IDENTIFIER,n,int n = nextInt())<SUB>11</SUB>>", "53": "<(IDENTIFIER,in,nextInt())<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>12</SUB>>", "57": "<(nextInt,nextInt())<SUB>12</SUB>>", "59": "<(LOCAL,int[][] a: int[][])<SUB>14</SUB>>", "61": "<(IDENTIFIER,a,int[][] a = new int[n + 1][m])<SUB>14</SUB>>", "63": "<(&lt;operator&gt;.addition,n + 1)<SUB>14</SUB>>", "65": "<(LITERAL,1,n + 1)<SUB>14</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "79": "<(LOCAL,int j: int)<SUB>17</SUB>>", "81": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>17</SUB>>", "85": "<(IDENTIFIER,m,j &lt; m)<SUB>17</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.assignment,a[i][j] = nextInt())<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "93": "<(IDENTIFIER,i,a[i][j] = nextInt())<SUB>18</SUB>>", "95": "<(nextInt,nextInt())<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.assignment,a[n][j] = Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,a[n])<SUB>19</SUB>>", "101": "<(IDENTIFIER,n,a[n][j] = Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "103": "<(max,Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,a[n][j])<SUB>19</SUB>>", "107": "<(IDENTIFIER,a,Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "109": "<(IDENTIFIER,j,Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,Math.max(a[n][j], a[i][j]))<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.assignment,a = transpose(a, n, m))<SUB>23</SUB>>", "117": "<(transpose,transpose(a, n, m))<SUB>23</SUB>>", "119": "<(IDENTIFIER,a,transpose(a, n, m))<SUB>23</SUB>>", "121": "<(IDENTIFIER,m,transpose(a, n, m))<SUB>23</SUB>>", "123": "<(IDENTIFIER,Arrays,sort(a, new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        int max1 = 0;\\012        for (int i = 0; i &lt; o1.length; i++) {\\012            max1 = Math.max(max1, o1[i]);\\012        }\\012        int max2 = 0;\\012        for (int i = 0; i &lt; o2.length; i++) {\\012            max2 = Math.max(max2, o2[i]);\\012        }\\012        return max2 - max1;\\012    }\\012}))<SUB>25</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "127": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "129": "<(&lt;init&gt;,new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        int max1 = 0;\\012        for (int i = 0; i &lt; o1.length; i++) {\\012            max1 = Math.max(max1, o1[i]);\\012        }\\012        int max2 = 0;\\012        for (int i = 0; i &lt; o2.length; i++) {\\012            max2 = Math.max(max2, o2[i]);\\012        }\\012        return max2 - max1;\\012    }\\012})<SUB>25</SUB>>", "131": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "133": "<(IDENTIFIER,a,a = transpose(a, m, n))<SUB>42</SUB>>", "135": "<(IDENTIFIER,this,transpose(a, m, n))<SUB>42</SUB>>", "137": "<(IDENTIFIER,m,transpose(a, m, n))<SUB>42</SUB>>", "139": "<(LOCAL,int[] dp: int[])<SUB>44</SUB>>", "141": "<(IDENTIFIER,dp,int[] dp = new int[1 &lt;&lt; n])<SUB>44</SUB>>", "143": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>44</SUB>>", "145": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>44</SUB>>", "147": "<(LOCAL,int i: int)<SUB>46</SUB>>", "149": "<(IDENTIFIER,i,int i = 0)<SUB>46</SUB>>", "151": "<(&lt;operator&gt;.lessThan,i &lt; Math.min(n, m))<SUB>46</SUB>>", "153": "<(min,Math.min(n, m))<SUB>46</SUB>>", "155": "<(IDENTIFIER,n,Math.min(n, m))<SUB>46</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>46</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "161": "<(&lt;operator&gt;.assignment,int[] best = new int[1 &lt;&lt; n])<SUB>47</SUB>>", "163": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "165": "<(LITERAL,1,1 &lt;&lt; n)<SUB>47</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; (1 &lt;&lt; n)); j++),for (int j = 1; Some(j &lt; (1 &lt;&lt; n)); j++))<SUB>49</SUB>>", "169": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>49</SUB>>", "171": "<(LITERAL,1,int j = 1)<SUB>49</SUB>>", "173": "<(IDENTIFIER,j,j &lt; (1 &lt;&lt; n))<SUB>49</SUB>>", "175": "<(LITERAL,1,1 &lt;&lt; n)<SUB>49</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,j++)<SUB>49</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "181": "<(LOCAL,int k: int)<SUB>50</SUB>>", "183": "<(IDENTIFIER,k,int k = 0)<SUB>50</SUB>>", "185": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>50</SUB>>", "187": "<(IDENTIFIER,n,k &lt; n)<SUB>50</SUB>>", "189": "<(IDENTIFIER,k,k++)<SUB>50</SUB>>", "191": "<(LOCAL,int sum: int)<SUB>51</SUB>>", "193": "<(IDENTIFIER,sum,int sum = 0)<SUB>51</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int l = 0; Some(l &lt; n); l++),for (int l = 0; Some(l &lt; n); l++))<SUB>52</SUB>>", "197": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>52</SUB>>", "199": "<(LITERAL,0,int l = 0)<SUB>52</SUB>>", "201": "<(IDENTIFIER,l,l &lt; n)<SUB>52</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,l++)<SUB>52</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "207": "<(&lt;operator&gt;.notEquals,(j &amp; (1 &lt;&lt; l)) != 0)<SUB>53</SUB>>", "209": "<(IDENTIFIER,j,j &amp; (1 &lt;&lt; l))<SUB>53</SUB>>", "211": "<(LITERAL,1,1 &lt;&lt; l)<SUB>53</SUB>>", "213": "<(LITERAL,0,(j &amp; (1 &lt;&lt; l)) != 0)<SUB>53</SUB>>", "215": "<(IDENTIFIER,sum,sum += a[(l + k) % n][i])<SUB>54</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,a[(l + k) % n])<SUB>54</SUB>>", "219": "<(&lt;operator&gt;.modulo,(l + k) % n)<SUB>54</SUB>>", "221": "<(IDENTIFIER,l,l + k)<SUB>54</SUB>>", "223": "<(IDENTIFIER,n,(l + k) % n)<SUB>54</SUB>>", "225": "<(&lt;operator&gt;.assignment,best[j] = Math.max(best[j], sum))<SUB>56</SUB>>", "227": "<(IDENTIFIER,best,best[j] = Math.max(best[j], sum))<SUB>56</SUB>>", "229": "<(max,Math.max(best[j], sum))<SUB>56</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,best[j])<SUB>56</SUB>>", "233": "<(IDENTIFIER,j,Math.max(best[j], sum))<SUB>56</SUB>>", "235": "<(LOCAL,int[] dp1: int[])<SUB>60</SUB>>", "237": "<(IDENTIFIER,dp1,int[] dp1 = dp.clone())<SUB>60</SUB>>", "239": "<(IDENTIFIER,dp,dp.clone())<SUB>60</SUB>>", "241": "<(LOCAL,int j: int)<SUB>62</SUB>>", "243": "<(IDENTIFIER,j,int j = 0)<SUB>62</SUB>>", "245": "<(&lt;operator&gt;.lessThan,j &lt; (1 &lt;&lt; n))<SUB>62</SUB>>", "247": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>62</SUB>>", "249": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>62</SUB>>", "251": "<(IDENTIFIER,j,j++)<SUB>62</SUB>>", "253": "<(CONTROL_STRUCTURE,for (int k = j; Some(k &gt; 0); k = (k - 1) &amp; j),for (int k = j; Some(k &gt; 0); k = (k - 1) &amp; j))<SUB>63</SUB>>", "255": "<(&lt;operator&gt;.assignment,int k = j)<SUB>63</SUB>>", "257": "<(IDENTIFIER,j,int k = j)<SUB>63</SUB>>", "259": "<(IDENTIFIER,k,k &gt; 0)<SUB>63</SUB>>", "261": "<(&lt;operator&gt;.assignment,k = (k - 1) &amp; j)<SUB>63</SUB>>", "263": "<(&lt;operator&gt;.and,(k - 1) &amp; j)<SUB>63</SUB>>", "265": "<(IDENTIFIER,k,k - 1)<SUB>63</SUB>>", "267": "<(IDENTIFIER,j,(k - 1) &amp; j)<SUB>63</SUB>>", "269": "<(&lt;operator&gt;.assignment,dp[j] = Math.max(dp[j], dp1[k ^ j] + best[k]))<SUB>64</SUB>>", "271": "<(IDENTIFIER,dp,dp[j] = Math.max(dp[j], dp1[k ^ j] + best[k]))<SUB>64</SUB>>", "273": "<(max,Math.max(dp[j], dp1[k ^ j] + best[k]))<SUB>64</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>64</SUB>>", "277": "<(IDENTIFIER,j,Math.max(dp[j], dp1[k ^ j] + best[k]))<SUB>64</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,dp1[k ^ j])<SUB>64</SUB>>", "281": "<(&lt;operator&gt;.xor,k ^ j)<SUB>64</SUB>>", "283": "<(IDENTIFIER,j,k ^ j)<SUB>64</SUB>>", "285": "<(IDENTIFIER,best,dp1[k ^ j] + best[k])<SUB>64</SUB>>", "287": "<(println,println(dp[(1 &lt;&lt; n) - 1]))<SUB>69</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>69</SUB>>", "291": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>69</SUB>>", "293": "<(LITERAL,1,1 &lt;&lt; n)<SUB>69</SUB>>", "295": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>69</SUB>>", "297": "<(IDENTIFIER,out,close())<SUB>76</SUB>>", "299": "<(MODIFIER,STATIC)>"}}