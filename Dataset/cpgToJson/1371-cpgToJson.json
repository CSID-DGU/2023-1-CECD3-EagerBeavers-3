{"edges": [["21", "23"], ["21", "209"], ["21", "210"], ["21", "211"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "205"], ["23", "207"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "52"], ["48", "56"], ["49", "50"], ["49", "51"], ["52", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["57", "58"], ["57", "61"], ["57", "65"], ["58", "59"], ["58", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["66", "67"], ["66", "78"], ["66", "83"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "77"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["78", "79"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "90"], ["84", "98"], ["84", "99"], ["84", "110"], ["84", "111"], ["84", "115"], ["84", "198"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["92", "97"], ["94", "95"], ["94", "96"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "109"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "127"], ["125", "134"], ["125", "135"], ["125", "152"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "151"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["152", "153"], ["152", "160"], ["152", "164"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["160", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["165", "166"], ["165", "173"], ["165", "192"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["173", "174"], ["173", "177"], ["173", "183"], ["173", "189"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["185", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["207", "208"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "49"], ["205", "207"], ["207", "211"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["49", "53"], ["49", "58"], ["30", "28"], ["37", "35"], ["53", "205"], ["58", "62"], ["58", "72"], ["62", "205"], ["67", "81"], ["67", "86"], ["69", "67"], ["79", "205"], ["70", "69"], ["81", "79"], ["86", "94"], ["90", "103"], ["99", "113"], ["111", "117"], ["198", "205"], ["71", "70"], ["92", "90"], ["101", "99"], ["113", "111"], ["117", "120"], ["120", "130"], ["120", "202"], ["123", "120"], ["200", "198"], ["72", "71"], ["94", "92"], ["102", "101"], ["127", "140"], ["135", "155"], ["201", "200"], ["103", "106"], ["106", "102"], ["129", "127"], ["137", "135"], ["153", "161"], ["153", "168"], ["202", "201"], ["130", "129"], ["138", "137"], ["154", "153"], ["161", "123"], ["139", "146"], ["144", "138"], ["155", "154"], ["166", "174"], ["166", "194"], ["140", "139"], ["145", "144"], ["167", "166"], ["174", "178"], ["183", "189"], ["189", "123"], ["146", "145"], ["168", "167"], ["178", "181"], ["178", "185"], ["181", "185"], ["185", "183"], ["194", "202"], ["21", "26"], ["22", "211"], ["24", "211"], ["27", "211"], ["27", "211"], ["31", "211"], ["34", "211"], ["34", "211"], ["39", "211"], ["44", "211"], ["44", "211"], ["44", "211"], ["49", "211"], ["49", "211"], ["58", "211"], ["58", "211"], ["58", "211"], ["67", "211"], ["71", "211"], ["71", "211"], ["70", "211"], ["69", "211"], ["67", "211"], ["67", "211"], ["86", "211"], ["90", "211"], ["92", "211"], ["90", "211"], ["90", "211"], ["99", "211"], ["102", "211"], ["106", "211"], ["102", "211"], ["101", "211"], ["99", "211"], ["99", "211"], ["111", "211"], ["111", "211"], ["111", "211"], ["117", "211"], ["120", "211"], ["120", "211"], ["130", "211"], ["129", "211"], ["127", "211"], ["127", "211"], ["138", "211"], ["145", "211"], ["138", "211"], ["137", "211"], ["135", "211"], ["135", "211"], ["155", "211"], ["155", "211"], ["154", "211"], ["154", "211"], ["153", "211"], ["153", "211"], ["153", "211"], ["168", "211"], ["168", "211"], ["167", "211"], ["167", "211"], ["166", "211"], ["166", "211"], ["166", "211"], ["194", "211"], ["194", "211"], ["201", "211"], ["200", "211"], ["198", "211"], ["198", "211"], ["174", "211"], ["178", "211"], ["181", "211"], ["185", "211"], ["185", "211"], ["183", "211"], ["183", "211"], ["189", "211"], ["189", "211"], ["189", "211"], ["161", "211"], ["161", "211"], ["161", "211"], ["123", "211"], ["79", "211"], ["79", "211"], ["62", "211"], ["53", "211"], ["205", "211"], ["207", "211"], ["207", "211"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["46", "205"], ["21", "205"], ["198", "207"], ["79", "207"], ["62", "207"], ["53", "207"], ["21", "207"], ["34", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "49"], ["21", "49"], ["27", "53"], ["21", "53"], ["49", "58"], ["21", "58"], ["44", "58"], ["27", "62"], ["21", "62"], ["58", "67"], ["21", "67"], ["70", "67"], ["70", "67"], ["70", "69"], ["70", "69"], ["21", "69"], ["27", "79"], ["21", "79"], ["81", "79"], ["21", "86"], ["92", "90"], ["92", "90"], ["92", "90"], ["101", "99"], ["101", "99"], ["113", "111"], ["71", "70"], ["71", "70"], ["21", "70"], ["21", "81"], ["21", "117"], ["27", "198"], ["21", "198"], ["86", "198"], ["194", "198"], ["183", "198"], ["72", "71"], ["72", "71"], ["21", "71"], ["21", "92"], ["94", "92"], ["94", "92"], ["102", "101"], ["102", "101"], ["21", "101"], ["21", "113"], ["117", "120"], ["123", "120"], ["21", "120"], ["120", "123"], ["21", "123"], ["129", "127"], ["129", "127"], ["137", "135"], ["137", "135"], ["21", "200"], ["86", "200"], ["194", "200"], ["183", "200"], ["58", "72"], ["21", "72"], ["71", "94"], ["21", "94"], ["103", "102"], ["103", "102"], ["106", "102"], ["106", "102"], ["21", "201"], ["86", "201"], ["194", "201"], ["183", "201"], ["94", "103"], ["21", "103"], ["103", "106"], ["21", "106"], ["86", "129"], ["183", "129"], ["21", "129"], ["90", "129"], ["185", "129"], ["161", "129"], ["138", "137"], ["138", "137"], ["21", "137"], ["154", "153"], ["154", "153"], ["67", "153"], ["166", "153"], ["21", "153"], ["145", "161"], ["21", "161"], ["86", "130"], ["183", "130"], ["21", "130"], ["90", "130"], ["185", "130"], ["161", "130"], ["139", "138"], ["139", "138"], ["145", "138"], ["145", "138"], ["21", "138"], ["146", "154"], ["21", "154"], ["99", "154"], ["135", "154"], ["140", "139"], ["140", "139"], ["127", "139"], ["21", "139"], ["145", "144"], ["145", "144"], ["21", "144"], ["146", "155"], ["21", "155"], ["99", "155"], ["167", "166"], ["167", "166"], ["153", "166"], ["21", "166"], ["145", "174"], ["21", "174"], ["185", "183"], ["185", "183"], ["185", "183"], ["178", "189"], ["21", "189"], ["106", "140"], ["21", "140"], ["146", "140"], ["146", "145"], ["146", "145"], ["139", "145"], ["21", "145"], ["21", "167"], ["146", "167"], ["154", "167"], ["145", "194"], ["21", "194"], ["140", "146"], ["21", "146"], ["21", "168"], ["146", "168"], ["111", "178"], ["189", "178"], ["21", "178"], ["145", "178"], ["174", "181"], ["21", "181"], ["92", "185"], ["21", "185"], ["174", "185"], ["181", "185"], ["90", "185"], ["161", "185"], ["49", "58"], ["49", "53"], ["58", "69"], ["58", "67"], ["58", "70"], ["58", "72"], ["58", "71"], ["58", "62"], ["67", "94"], ["67", "120"], ["67", "113"], ["67", "81"], ["67", "102"], ["67", "103"], ["67", "198"], ["67", "92"], ["67", "101"], ["67", "90"], ["67", "79"], ["67", "202"], ["67", "201"], ["67", "111"], ["67", "86"], ["67", "99"], ["67", "200"], ["67", "106"], ["67", "117"], ["120", "154"], ["120", "145"], ["120", "146"], ["120", "153"], ["120", "144"], ["120", "129"], ["120", "138"], ["120", "137"], ["120", "130"], ["120", "127"], ["120", "155"], ["120", "139"], ["120", "140"], ["120", "135"], ["153", "167"], ["153", "120"], ["153", "161"], ["153", "168"], ["153", "166"], ["153", "123"], ["166", "120"], ["166", "178"], ["166", "185"], ["166", "189"], ["166", "174"], ["166", "194"], ["166", "183"], ["166", "123"], ["178", "181"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>2</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>2</SUB>>", "6": "<(LOCAL,Scanner sc: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,sc,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new Scanner(System.in))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,long N = nextLong())<SUB>5</SUB>>", "41": "<(nextLong,nextLong())<SUB>5</SUB>>", "43": "<(LOCAL,long K: long)<SUB>6</SUB>>", "45": "<(IDENTIFIER,K,long K = nextLong())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextLong())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.equals,N == 1)<SUB>8</SUB>>", "51": "<(LITERAL,1,N == 1)<SUB>8</SUB>>", "53": "<(println,println(0))<SUB>9</SUB>>", "55": "<(LITERAL,0,println(0))<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,if (N &lt;= K),if (N &lt;= K))<SUB>10</SUB>>", "59": "<(IDENTIFIER,N,N &lt;= K)<SUB>10</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "63": "<(IDENTIFIER,out,println(1))<SUB>11</SUB>>", "65": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.greaterThan,N &gt; ((K - 1) * (K)) / 2 + 1)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.addition,((K - 1) * (K)) / 2 + 1)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.multiplication,(K - 1) * (K))<SUB>12</SUB>>", "73": "<(IDENTIFIER,K,K - 1)<SUB>12</SUB>>", "75": "<(IDENTIFIER,K,(K - 1) * (K))<SUB>12</SUB>>", "77": "<(LITERAL,1,((K - 1) * (K)) / 2 + 1)<SUB>12</SUB>>", "79": "<(println,println(-1))<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.minus,-1)<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "85": "<(LOCAL,long lo: long)<SUB>16</SUB>>", "87": "<(IDENTIFIER,lo,long lo = 1)<SUB>16</SUB>>", "89": "<(LOCAL,long hi: long)<SUB>17</SUB>>", "91": "<(IDENTIFIER,hi,long hi = Math.max(K - 2, 1))<SUB>17</SUB>>", "93": "<(IDENTIFIER,Math,Math.max(K - 2, 1))<SUB>17</SUB>>", "95": "<(IDENTIFIER,K,K - 2)<SUB>17</SUB>>", "97": "<(LITERAL,1,Math.max(K - 2, 1))<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.assignment,long big = ((K - 2) * (K - 1)) / 2)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.division,((K - 2) * (K - 1)) / 2)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.subtraction,K - 2)<SUB>19</SUB>>", "105": "<(LITERAL,2,K - 2)<SUB>19</SUB>>", "107": "<(IDENTIFIER,K,K - 1)<SUB>19</SUB>>", "109": "<(LITERAL,2,((K - 2) * (K - 1)) / 2)<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,long prevmid = -1)<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.minus,-1)<SUB>21</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 10000); i++),for (int i = 0; Some(i &lt; 10000); i++))<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "121": "<(IDENTIFIER,i,i &lt; 10000)<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.assignment,long mid = (lo + hi) / 2)<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.division,(lo + hi) / 2)<SUB>24</SUB>>", "131": "<(IDENTIFIER,lo,lo + hi)<SUB>24</SUB>>", "133": "<(LITERAL,2,(lo + hi) / 2)<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.assignment,long tmp = ((K - 2 - mid) * (K - 2 - mid + 1)) / 2)<SUB>31</SUB>>", "137": "<(&lt;operator&gt;.division,((K - 2 - mid) * (K - 2 - mid + 1)) / 2)<SUB>31</SUB>>", "139": "<(&lt;operator&gt;.subtraction,K - 2 - mid)<SUB>31</SUB>>", "141": "<(IDENTIFIER,K,K - 2)<SUB>31</SUB>>", "143": "<(IDENTIFIER,mid,K - 2 - mid)<SUB>31</SUB>>", "145": "<(&lt;operator&gt;.subtraction,K - 2 - mid)<SUB>31</SUB>>", "147": "<(IDENTIFIER,K,K - 2)<SUB>31</SUB>>", "149": "<(IDENTIFIER,mid,K - 2 - mid)<SUB>31</SUB>>", "151": "<(LITERAL,2,((K - 2 - mid) * (K - 2 - mid + 1)) / 2)<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.greaterThan,K + big - tmp &gt; N)<SUB>34</SUB>>", "155": "<(&lt;operator&gt;.addition,K + big)<SUB>34</SUB>>", "157": "<(IDENTIFIER,big,K + big)<SUB>34</SUB>>", "159": "<(IDENTIFIER,N,K + big - tmp &gt; N)<SUB>34</SUB>>", "161": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>35</SUB>>", "163": "<(IDENTIFIER,mid,hi = mid)<SUB>35</SUB>>", "165": "<(CONTROL_STRUCTURE,if (K + big - tmp &lt; N),if (K + big - tmp &lt; N))<SUB>36</SUB>>", "167": "<(&lt;operator&gt;.subtraction,K + big - tmp)<SUB>36</SUB>>", "169": "<(IDENTIFIER,K,K + big)<SUB>36</SUB>>", "171": "<(IDENTIFIER,tmp,K + big - tmp)<SUB>36</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "175": "<(IDENTIFIER,lo,lo = mid)<SUB>37</SUB>>", "177": "<(CONTROL_STRUCTURE,if (prevmid == mid),if (prevmid == mid))<SUB>38</SUB>>", "179": "<(IDENTIFIER,prevmid,prevmid == mid)<SUB>38</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,lo++)<SUB>39</SUB>>", "183": "<(&lt;operator&gt;.assignment,lo = Math.min(lo, hi))<SUB>40</SUB>>", "185": "<(min,Math.min(lo, hi))<SUB>40</SUB>>", "187": "<(IDENTIFIER,lo,Math.min(lo, hi))<SUB>40</SUB>>", "189": "<(&lt;operator&gt;.assignment,prevmid = mid)<SUB>41</SUB>>", "191": "<(IDENTIFIER,mid,prevmid = mid)<SUB>41</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "195": "<(IDENTIFIER,lo,lo = mid)<SUB>43</SUB>>", "197": "<(CONTROL_STRUCTURE,break;,break;)<SUB>44</SUB>>", "199": "<(IDENTIFIER,out,println((long) lo + 1))<SUB>47</SUB>>", "201": "<(&lt;operator&gt;.cast,(long) lo)<SUB>47</SUB>>", "203": "<(IDENTIFIER,lo,(long) lo)<SUB>47</SUB>>", "205": "<(close,close())<SUB>49</SUB>>", "207": "<(close,close())<SUB>50</SUB>>", "209": "<(MODIFIER,PUBLIC)>", "211": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}