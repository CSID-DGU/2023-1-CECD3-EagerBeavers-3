{"edges": [["19", "20"], ["19", "21"], ["19", "100"], ["19", "101"], ["19", "102"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "89"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "51"], ["39", "53"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["53", "54"], ["53", "73"], ["54", "55"], ["54", "72"], ["55", "56"], ["55", "69"], ["56", "57"], ["56", "68"], ["57", "58"], ["57", "67"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "87"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "86"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["89", "90"], ["89", "93"], ["89", "96"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "49"], ["44", "59"], ["44", "90"], ["51", "49"], ["90", "93"], ["90", "97"], ["93", "102"], ["28", "26"], ["46", "44"], ["97", "102"], ["47", "46"], ["55", "90"], ["55", "78"], ["74", "87"], ["74", "51"], ["87", "51"], ["49", "47"], ["56", "55"], ["56", "69"], ["69", "55"], ["76", "74"], ["57", "56"], ["77", "76"], ["58", "57"], ["78", "83"], ["81", "77"], ["59", "64"], ["62", "58"], ["83", "81"], ["64", "62"], ["19", "24"], ["20", "102"], ["22", "102"], ["25", "102"], ["25", "102"], ["30", "102"], ["30", "102"], ["37", "102"], ["35", "102"], ["35", "102"], ["41", "102"], ["44", "102"], ["46", "102"], ["44", "102"], ["44", "102"], ["58", "102"], ["64", "102"], ["58", "102"], ["57", "102"], ["56", "102"], ["56", "102"], ["55", "102"], ["55", "102"], ["77", "102"], ["77", "102"], ["76", "102"], ["74", "102"], ["74", "102"], ["87", "102"], ["51", "102"], ["90", "102"], ["90", "102"], ["93", "102"], ["93", "102"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["22", "25"], ["19", "25"], ["19", "41"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["41", "44"], ["51", "44"], ["19", "44"], ["46", "44"], ["46", "44"], ["19", "51"], ["44", "51"], ["35", "90"], ["69", "90"], ["87", "90"], ["19", "90"], ["74", "93"], ["19", "93"], ["19", "46"], ["74", "97"], ["19", "97"], ["56", "55"], ["56", "55"], ["69", "55"], ["69", "55"], ["19", "74"], ["35", "87"], ["69", "87"], ["19", "87"], ["19", "56"], ["30", "56"], ["35", "69"], ["87", "69"], ["19", "69"], ["19", "76"], ["19", "57"], ["19", "83"], ["44", "83"], ["44", "64"], ["19", "64"], ["44", "64"], ["44", "57"], ["44", "56"], ["44", "59"], ["44", "58"], ["44", "55"], ["44", "62"], ["90", "97"], ["90", "93"], ["55", "47"], ["55", "49"], ["55", "77"], ["55", "51"], ["55", "46"], ["55", "81"], ["55", "74"], ["55", "76"], ["55", "44"], ["55", "83"], ["55", "78"], ["74", "87"], ["56", "69"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; prime.length - 1); i++),for (int i = 0; Some(i &lt; prime.length - 1); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; prime.length - 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,prime.length)<SUB>6</SUB>>", "49": "<(FIELD_IDENTIFIER,length,length)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.logicalOr,(prime[i] + prime[i + 1] + 1) &gt; n || k == 0)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.addition,prime[i] + prime[i + 1] + 1)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,prime[i])<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,prime[i] + prime[i + 1])<SUB>7</SUB>>", "63": "<(IDENTIFIER,prime,prime[i] + prime[i + 1])<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i + 1)<SUB>7</SUB>>", "67": "<(LITERAL,1,prime[i] + prime[i + 1] + 1)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.equals,k == 0)<SUB>7</SUB>>", "71": "<(LITERAL,0,k == 0)<SUB>7</SUB>>", "73": "<(CONTROL_STRUCTURE,if (isPrime(prime[i] + prime[i + 1] + 1)),if (isPrime(prime[i] + prime[i + 1] + 1)))<SUB>9</SUB>>", "75": "<(IDENTIFIER,this,isPrime(prime[i] + prime[i + 1] + 1))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.addition,prime[i] + prime[i + 1])<SUB>9</SUB>>", "79": "<(IDENTIFIER,prime,prime[i] + prime[i + 1])<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,prime[i + 1])<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.addition,i + 1)<SUB>9</SUB>>", "85": "<(LITERAL,1,i + 1)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.postDecrement,k--)<SUB>10</SUB>>", "89": "<(CONTROL_STRUCTURE,if (k == 0),if (k == 0))<SUB>13</SUB>>", "91": "<(IDENTIFIER,k,k == 0)<SUB>13</SUB>>", "93": "<(outnl,outnl(&quot;YES&quot;))<SUB>14</SUB>>", "95": "<(LITERAL,&quot;YES&quot;,outnl(&quot;YES&quot;))<SUB>14</SUB>>", "97": "<(outnl,outnl(&quot;NO&quot;))<SUB>16</SUB>>", "99": "<(LITERAL,&quot;NO&quot;,outnl(&quot;NO&quot;))<SUB>16</SUB>>", "101": "<(MODIFIER,STATIC)>"}}