{"edges": [["21", "22"], ["21", "23"], ["21", "258"], ["21", "259"], ["21", "260"], ["23", "24"], ["23", "4"], ["23", "29"], ["23", "32"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "56"], ["23", "61"], ["23", "104"], ["23", "105"], ["23", "111"], ["23", "119"], ["23", "137"], ["23", "247"], ["23", "256"], ["24", "25"], ["24", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["32", "3"], ["32", "33"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "5"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "88"], ["72", "73"], ["73", "74"], ["73", "81"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["88", "89"], ["89", "90"], ["89", "99"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "107"], ["107", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "147"], ["137", "149"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "205"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "173"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["173", "174"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "197"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "213"], ["205", "215"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["215", "216"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["224", "225"], ["225", "226"], ["225", "233"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["233", "242"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["256", "257"], ["24", "31"], ["29", "35"], ["32", "38"], ["36", "39"], ["39", "43"], ["41", "48"], ["46", "53"], ["51", "58"], ["56", "63"], ["105", "117"], ["111", "121"], ["247", "256"], ["256", "260"], ["26", "24"], ["31", "29"], ["33", "32"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "66"], ["66", "77"], ["66", "108"], ["69", "66"], ["107", "105"], ["114", "111"], ["121", "124"], ["124", "133"], ["124", "139"], ["127", "124"], ["139", "144"], ["142", "151"], ["142", "252"], ["147", "144"], ["249", "247"], ["28", "26"], ["35", "33"], ["72", "95"], ["88", "69"], ["108", "107"], ["115", "114"], ["130", "127"], ["144", "142"], ["151", "156"], ["251", "249"], ["73", "72"], ["89", "88"], ["117", "115"], ["131", "130"], ["156", "159"], ["159", "169"], ["159", "207"], ["162", "159"], ["207", "210"], ["210", "220"], ["210", "147"], ["213", "210"], ["252", "251"], ["74", "84"], ["81", "73"], ["90", "100"], ["99", "89"], ["133", "131"], ["76", "74"], ["82", "81"], ["92", "90"], ["100", "99"], ["166", "176"], ["166", "162"], ["217", "230"], ["217", "213"], ["77", "76"], ["84", "82"], ["93", "92"], ["167", "166"], ["218", "217"], ["225", "213"], ["95", "93"], ["169", "167"], ["176", "179"], ["179", "187"], ["179", "162"], ["182", "179"], ["220", "218"], ["226", "239"], ["233", "225"], ["228", "226"], ["235", "243"], ["242", "233"], ["186", "201"], ["186", "182"], ["230", "228"], ["237", "235"], ["243", "242"], ["187", "186"], ["187", "193"], ["190", "186"], ["198", "182"], ["239", "237"], ["191", "190"], ["200", "198"], ["193", "191"], ["201", "200"], ["21", "28"], ["22", "260"], ["24", "260"], ["24", "260"], ["29", "260"], ["32", "260"], ["32", "260"], ["36", "260"], ["39", "260"], ["39", "260"], ["41", "260"], ["46", "260"], ["46", "260"], ["51", "260"], ["53", "260"], ["51", "260"], ["51", "260"], ["56", "260"], ["56", "260"], ["56", "260"], ["63", "260"], ["66", "260"], ["66", "260"], ["105", "260"], ["105", "260"], ["111", "260"], ["114", "260"], ["111", "260"], ["111", "260"], ["124", "260"], ["139", "260"], ["142", "260"], ["142", "260"], ["252", "260"], ["251", "260"], ["247", "260"], ["247", "260"], ["256", "260"], ["256", "260"], ["151", "260"], ["151", "260"], ["207", "260"], ["210", "260"], ["210", "260"], ["147", "260"], ["218", "260"], ["217", "260"], ["217", "260"], ["225", "260"], ["237", "260"], ["242", "260"], ["242", "260"], ["233", "260"], ["225", "260"], ["225", "260"], ["213", "260"], ["167", "260"], ["166", "260"], ["166", "260"], ["176", "260"], ["179", "260"], ["179", "260"], ["162", "260"], ["186", "260"], ["191", "260"], ["190", "260"], ["186", "260"], ["186", "260"], ["198", "260"], ["198", "260"], ["198", "260"], ["182", "260"], ["130", "260"], ["130", "260"], ["127", "260"], ["72", "260"], ["72", "260"], ["93", "260"], ["92", "260"], ["100", "260"], ["99", "260"], ["88", "260"], ["88", "260"], ["69", "260"], ["111", "260"], ["233", "260"], ["21", "22"], ["21", "29"], ["21", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["58", "56"], ["107", "105"], ["21", "24"], ["29", "32"], ["21", "32"], ["36", "39"], ["21", "39"], ["21", "63"], ["21", "111"], ["105", "111"], ["114", "111"], ["114", "111"], ["21", "121"], ["21", "139"], ["32", "247"], ["21", "247"], ["111", "247"], ["247", "256"], ["21", "256"], ["24", "43"], ["21", "43"], ["43", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["46", "58"], ["21", "58"], ["63", "66"], ["69", "66"], ["21", "66"], ["41", "66"], ["100", "69"], ["21", "69"], ["108", "107"], ["108", "107"], ["21", "114"], ["121", "124"], ["127", "124"], ["21", "124"], ["108", "124"], ["133", "127"], ["21", "127"], ["21", "130"], ["139", "142"], ["147", "142"], ["21", "142"], ["144", "142"], ["144", "142"], ["142", "147"], ["218", "147"], ["237", "147"], ["167", "147"], ["191", "147"], ["21", "147"], ["21", "151"], ["21", "108"], ["58", "108"], ["21", "144"], ["124", "144"], ["210", "144"], ["21", "156"], ["21", "207"], ["252", "251"], ["252", "251"], ["21", "251"], ["156", "159"], ["162", "159"], ["21", "159"], ["144", "159"], ["179", "159"], ["169", "162"], ["187", "162"], ["21", "162"], ["207", "210"], ["213", "210"], ["21", "210"], ["159", "210"], ["220", "213"], ["239", "213"], ["21", "213"], ["21", "252"], ["144", "252"], ["82", "81"], ["82", "81"], ["21", "81"], ["100", "99"], ["100", "99"], ["21", "99"], ["21", "133"], ["124", "133"], ["77", "76"], ["77", "76"], ["21", "76"], ["77", "82"], ["21", "82"], ["84", "82"], ["84", "82"], ["93", "92"], ["93", "92"], ["21", "92"], ["93", "100"], ["21", "100"], ["95", "100"], ["167", "166"], ["167", "166"], ["21", "166"], ["218", "217"], ["218", "217"], ["21", "217"], ["233", "225"], ["233", "225"], ["233", "225"], ["51", "77"], ["100", "77"], ["21", "77"], ["66", "77"], ["77", "84"], ["21", "84"], ["82", "93"], ["21", "93"], ["95", "93"], ["95", "93"], ["142", "167"], ["191", "167"], ["21", "167"], ["169", "167"], ["169", "167"], ["21", "176"], ["142", "218"], ["237", "218"], ["167", "218"], ["191", "218"], ["21", "218"], ["220", "218"], ["220", "218"], ["84", "95"], ["21", "95"], ["21", "169"], ["159", "169"], ["176", "179"], ["182", "179"], ["21", "179"], ["159", "179"], ["187", "182"], ["193", "182"], ["21", "182"], ["21", "220"], ["210", "220"], ["21", "233"], ["111", "233"], ["225", "233"], ["151", "233"], ["198", "233"], ["218", "228"], ["21", "228"], ["230", "228"], ["230", "228"], ["111", "242"], ["151", "242"], ["198", "242"], ["21", "242"], ["187", "186"], ["187", "186"], ["190", "186"], ["190", "186"], ["21", "230"], ["220", "230"], ["228", "237"], ["21", "237"], ["239", "237"], ["239", "237"], ["169", "187"], ["21", "187"], ["179", "187"], ["191", "190"], ["191", "190"], ["21", "190"], ["151", "198"], ["21", "198"], ["21", "239"], ["230", "239"], ["167", "191"], ["21", "191"], ["193", "191"], ["193", "191"], ["21", "193"], ["187", "193"], ["66", "73"], ["66", "77"], ["66", "81"], ["66", "84"], ["66", "69"], ["66", "74"], ["66", "95"], ["66", "92"], ["66", "76"], ["66", "93"], ["66", "90"], ["66", "100"], ["66", "88"], ["66", "89"], ["66", "66"], ["66", "99"], ["66", "72"], ["66", "82"], ["124", "131"], ["124", "130"], ["124", "127"], ["124", "124"], ["124", "133"], ["142", "151"], ["142", "144"], ["142", "207"], ["142", "142"], ["142", "210"], ["142", "159"], ["142", "147"], ["142", "156"], ["159", "167"], ["159", "169"], ["159", "162"], ["159", "166"], ["159", "159"], ["210", "213"], ["210", "210"], ["210", "217"], ["210", "220"], ["210", "218"], ["166", "179"], ["166", "176"], ["217", "230"], ["217", "225"], ["217", "226"], ["217", "243"], ["217", "228"], ["217", "242"], ["217", "233"], ["217", "239"], ["217", "235"], ["217", "237"], ["179", "179"], ["179", "187"], ["179", "182"], ["179", "186"], ["186", "198"], ["186", "201"], ["186", "200"], ["187", "191"], ["187", "190"], ["187", "193"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,Reader,init(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,init(System.in))<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "30": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "32": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "35": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.assignment,Main mm = new Main())<SUB>4</SUB>>", "38": "<(&lt;operator&gt;.alloc,new Main())<SUB>4</SUB>>", "5": "<(IDENTIFIER,mm,new Main())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,int m: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,Reader,nextInt())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,String s = next())<SUB>7</SUB>>", "53": "<(next,next())<SUB>7</SUB>>", "55": "<(LOCAL,int[][] count: int[][])<SUB>8</SUB>>", "57": "<(IDENTIFIER,count,int[][] count = new int[m][m])<SUB>8</SUB>>", "59": "<(IDENTIFIER,m,new int[m][m])<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "65": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,count[s.charAt(i) - 'a'][s.charAt(i - 1) - 'a'])<SUB>10</SUB>>", "75": "<(IDENTIFIER,count,count[s.charAt(i) - 'a'][s.charAt(i - 1) - 'a']++)<SUB>10</SUB>>", "77": "<(charAt,s.charAt(i))<SUB>10</SUB>>", "79": "<(IDENTIFIER,i,s.charAt(i))<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.subtraction,s.charAt(i - 1) - 'a')<SUB>10</SUB>>", "83": "<(IDENTIFIER,s,s.charAt(i - 1))<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "87": "<(LITERAL,'a',s.charAt(i - 1) - 'a')<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,count[s.charAt(i - 1) - 'a'][s.charAt(i) - 'a'])<SUB>11</SUB>>", "91": "<(IDENTIFIER,count,count[s.charAt(i - 1) - 'a'][s.charAt(i) - 'a']++)<SUB>11</SUB>>", "93": "<(charAt,s.charAt(i - 1))<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>11</SUB>>", "97": "<(LITERAL,1,i - 1)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.subtraction,s.charAt(i) - 'a')<SUB>11</SUB>>", "101": "<(IDENTIFIER,s,s.charAt(i))<SUB>11</SUB>>", "103": "<(LITERAL,'a',s.charAt(i) - 'a')<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; m])<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; m])>", "109": "<(LITERAL,1,1 &lt;&lt; m)<SUB>13</SUB>>", "111": "<(fill,fill(dp, Integer.MAX_VALUE / 10))<SUB>14</SUB>>", "113": "<(IDENTIFIER,dp,fill(dp, Integer.MAX_VALUE / 10))<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>14</SUB>>", "117": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>14</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "123": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "125": "<(IDENTIFIER,i,i &lt; m)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i])<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>16</SUB>>", "135": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>16</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (1 &lt;&lt; m)); i++),for (int i = 0; Some(i &lt; (1 &lt;&lt; m)); i++))<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "141": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "143": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; m))<SUB>18</SUB>>", "145": "<(LITERAL,1,1 &lt;&lt; m)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "151": "<(&lt;operator&gt;.assignment,int extra = 0)<SUB>19</SUB>>", "153": "<(LITERAL,0,int extra = 0)<SUB>19</SUB>>", "155": "<(LOCAL,int j: int)<SUB>20</SUB>>", "157": "<(IDENTIFIER,j,int j = 0)<SUB>20</SUB>>", "159": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>20</SUB>>", "161": "<(IDENTIFIER,m,j &lt; m)<SUB>20</SUB>>", "163": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "165": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; j)) &gt; 0),if ((i &amp; (1 &lt;&lt; j)) &gt; 0))<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; j))<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>21</SUB>>", "171": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>21</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "175": "<(LOCAL,int k: int)<SUB>22</SUB>>", "177": "<(IDENTIFIER,k,int k = 0)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>22</SUB>>", "181": "<(IDENTIFIER,m,k &lt; m)<SUB>22</SUB>>", "183": "<(IDENTIFIER,k,k++)<SUB>22</SUB>>", "185": "<(CONTROL_STRUCTURE,if (j != k &amp;&amp; (i &amp; (1 &lt;&lt; k)) == 0),if (j != k &amp;&amp; (i &amp; (1 &lt;&lt; k)) == 0))<SUB>23</SUB>>", "187": "<(&lt;operator&gt;.notEquals,j != k)<SUB>23</SUB>>", "189": "<(IDENTIFIER,k,j != k)<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; k))<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>23</SUB>>", "195": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>23</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "199": "<(IDENTIFIER,extra,extra += count[j][k])<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,count[j])<SUB>24</SUB>>", "203": "<(IDENTIFIER,j,extra += count[j][k])<SUB>24</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>29</SUB>>", "209": "<(LITERAL,0,int j = 0)<SUB>29</SUB>>", "211": "<(IDENTIFIER,j,j &lt; m)<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; j)) == 0)<SUB>30</SUB>>", "219": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; j))<SUB>30</SUB>>", "221": "<(LITERAL,1,1 &lt;&lt; j)<SUB>30</SUB>>", "223": "<(LITERAL,0,(i &amp; (1 &lt;&lt; j)) == 0)<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.assignment,dp[i | (1 &lt;&lt; j)] = Math.min(dp[i | (1 &lt;&lt; j)], dp[i] + extra))<SUB>31</SUB>>", "227": "<(IDENTIFIER,dp,dp[i | (1 &lt;&lt; j)] = Math.min(dp[i | (1 &lt;&lt; j)], dp[i] + extra))<SUB>31</SUB>>", "229": "<(IDENTIFIER,i,i | (1 &lt;&lt; j))<SUB>31</SUB>>", "231": "<(LITERAL,1,1 &lt;&lt; j)<SUB>31</SUB>>", "233": "<(min,Math.min(dp[i | (1 &lt;&lt; j)], dp[i] + extra))<SUB>31</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; j)])<SUB>31</SUB>>", "237": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; j))<SUB>31</SUB>>", "239": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>31</SUB>>", "241": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>31</SUB>>", "245": "<(IDENTIFIER,i,dp[i] + extra)<SUB>31</SUB>>", "247": "<(println,println(dp[(1 &lt;&lt; m) - 1]))<SUB>35</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; m) - 1])<SUB>35</SUB>>", "251": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; m) - 1)<SUB>35</SUB>>", "253": "<(LITERAL,1,1 &lt;&lt; m)<SUB>35</SUB>>", "255": "<(LITERAL,1,(1 &lt;&lt; m) - 1)<SUB>35</SUB>>", "257": "<(IDENTIFIER,out,close())<SUB>36</SUB>>", "259": "<(MODIFIER,STATIC)>"}}