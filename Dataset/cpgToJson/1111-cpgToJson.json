{"edges": [["17", "18"], ["17", "19"], ["17", "114"], ["17", "115"], ["17", "116"], ["19", "20"], ["19", "21"], ["19", "24"], ["19", "112"], ["21", "22"], ["21", "23"], ["24", "25"], ["24", "29"], ["25", "26"], ["25", "28"], ["26", "27"], ["29", "30"], ["29", "34"], ["29", "35"], ["29", "36"], ["29", "39"], ["29", "46"], ["29", "51"], ["29", "64"], ["29", "75"], ["29", "107"], ["30", "31"], ["30", "32"], ["32", "33"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "61"], ["57", "63"], ["58", "59"], ["58", "60"], ["61", "62"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "72"], ["68", "74"], ["69", "70"], ["69", "71"], ["72", "73"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["79", "88"], ["79", "103"], ["79", "104"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "92"], ["88", "98"], ["89", "90"], ["89", "91"], ["92", "93"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["99", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["21", "26"], ["112", "116"], ["25", "32"], ["25", "112"], ["26", "25"], ["30", "36"], ["36", "43"], ["39", "48"], ["46", "53"], ["107", "26"], ["32", "30"], ["41", "39"], ["48", "46"], ["52", "58"], ["52", "65"], ["65", "69"], ["65", "76"], ["76", "84"], ["76", "109"], ["109", "107"], ["43", "41"], ["53", "52"], ["58", "61"], ["61", "63"], ["63", "116"], ["69", "72"], ["72", "74"], ["74", "116"], ["81", "89"], ["104", "76"], ["83", "81"], ["89", "95"], ["89", "100"], ["84", "83"], ["93", "104"], ["95", "93"], ["100", "104"], ["17", "21"], ["74", "116"], ["63", "116"], ["18", "116"], ["21", "116"], ["26", "116"], ["25", "116"], ["25", "116"], ["30", "116"], ["30", "116"], ["36", "116"], ["39", "116"], ["43", "116"], ["41", "116"], ["39", "116"], ["39", "116"], ["48", "116"], ["48", "116"], ["46", "116"], ["46", "116"], ["53", "116"], ["52", "116"], ["52", "116"], ["65", "116"], ["76", "116"], ["107", "116"], ["107", "116"], ["83", "116"], ["81", "116"], ["81", "116"], ["89", "116"], ["100", "116"], ["100", "116"], ["95", "116"], ["93", "116"], ["93", "116"], ["104", "116"], ["104", "116"], ["58", "116"], ["61", "116"], ["61", "116"], ["32", "116"], ["17", "18"], ["17", "21"], ["107", "112"], ["17", "112"], ["26", "25"], ["17", "25"], ["32", "30"], ["17", "36"], ["17", "39"], ["43", "39"], ["43", "39"], ["48", "46"], ["48", "46"], ["21", "26"], ["17", "26"], ["17", "107"], ["76", "107"], ["17", "32"], ["17", "41"], ["43", "41"], ["43", "41"], ["89", "48"], ["17", "48"], ["36", "48"], ["53", "52"], ["53", "52"], ["17", "52"], ["17", "63"], ["53", "65"], ["17", "65"], ["17", "74"], ["48", "76"], ["93", "76"], ["17", "76"], ["39", "76"], ["100", "76"], ["83", "81"], ["83", "81"], ["17", "104"], ["17", "109"], ["76", "109"], ["30", "43"], ["17", "43"], ["46", "53"], ["17", "53"], ["107", "58"], ["17", "58"], ["58", "61"], ["17", "61"], ["107", "69"], ["17", "69"], ["69", "72"], ["17", "72"], ["76", "83"], ["17", "83"], ["76", "83"], ["48", "89"], ["17", "89"], ["81", "89"], ["89", "93"], ["17", "93"], ["76", "84"], ["17", "84"], ["76", "84"], ["89", "100"], ["17", "100"], ["89", "95"], ["17", "95"], ["25", "30"], ["25", "48"], ["25", "32"], ["25", "52"], ["25", "46"], ["25", "112"], ["25", "43"], ["25", "36"], ["25", "53"], ["25", "41"], ["25", "39"], ["52", "65"], ["52", "58"], ["52", "61"], ["52", "63"], ["65", "107"], ["65", "26"], ["65", "25"], ["65", "72"], ["65", "69"], ["65", "74"], ["65", "76"], ["65", "109"], ["76", "89"], ["76", "81"], ["76", "84"], ["76", "104"], ["76", "76"], ["76", "83"], ["89", "95"], ["89", "93"], ["89", "100"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int tt = 1)<SUB>7</SUB>>", "23": "<(LITERAL,1,int tt = 1)<SUB>7</SUB>>", "25": "<(&lt;operator&gt;.greaterThan,tt-- &gt; 0)<SUB>8</SUB>>", "27": "<(IDENTIFIER,tt,tt--)<SUB>8</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "31": "<(IDENTIFIER,n,n = nextInt())<SUB>11</SUB>>", "33": "<(IDENTIFIER,fs,nextInt())<SUB>11</SUB>>", "35": "<(LOCAL,int r: int)<SUB>12</SUB>>", "37": "<(IDENTIFIER,l,int l = 1)<SUB>12</SUB>>", "39": "<(&lt;operator&gt;.assignment,int r = 1 + n / 2)<SUB>12</SUB>>", "41": "<(&lt;operator&gt;.addition,1 + n / 2)<SUB>12</SUB>>", "43": "<(&lt;operator&gt;.division,n / 2)<SUB>12</SUB>>", "45": "<(LITERAL,2,n / 2)<SUB>12</SUB>>", "47": "<(IDENTIFIER,d,d = getB(l))<SUB>14</SUB>>", "49": "<(IDENTIFIER,this,getB(l))<SUB>14</SUB>>", "51": "<(CONTROL_STRUCTURE,if (d % 2 != 0),if (d % 2 != 0))<SUB>15</SUB>>", "53": "<(&lt;operator&gt;.modulo,d % 2)<SUB>15</SUB>>", "55": "<(LITERAL,2,d % 2)<SUB>15</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "59": "<(IDENTIFIER,out,println(&quot;! -1&quot;))<SUB>16</SUB>>", "61": "<(flush,flush())<SUB>17</SUB>>", "63": "<(RETURN,return;,return;)<SUB>18</SUB>>", "65": "<(&lt;operator&gt;.equals,d == 0)<SUB>21</SUB>>", "67": "<(LITERAL,0,d == 0)<SUB>21</SUB>>", "69": "<(println,println(&quot;! 1&quot;))<SUB>22</SUB>>", "71": "<(LITERAL,&quot;! 1&quot;,println(&quot;! 1&quot;))<SUB>22</SUB>>", "73": "<(IDENTIFIER,out,flush())<SUB>23</SUB>>", "75": "<(CONTROL_STRUCTURE,while (l &lt; r),while (l &lt; r))<SUB>33</SUB>>", "77": "<(IDENTIFIER,l,l &lt; r)<SUB>33</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "81": "<(&lt;operator&gt;.assignment,int mid = (l + r) / 2)<SUB>34</SUB>>", "83": "<(&lt;operator&gt;.division,(l + r) / 2)<SUB>34</SUB>>", "85": "<(IDENTIFIER,l,l + r)<SUB>34</SUB>>", "87": "<(LITERAL,2,(l + r) / 2)<SUB>34</SUB>>", "89": "<(check,check(mid))<SUB>35</SUB>>", "91": "<(IDENTIFIER,mid,check(mid))<SUB>35</SUB>>", "93": "<(&lt;operator&gt;.assignment,l = mid + 1)<SUB>36</SUB>>", "95": "<(&lt;operator&gt;.addition,mid + 1)<SUB>36</SUB>>", "97": "<(LITERAL,1,mid + 1)<SUB>36</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "101": "<(IDENTIFIER,r,r = mid)<SUB>39</SUB>>", "103": "<(LOCAL,int f: int)<SUB>41</SUB>>", "105": "<(IDENTIFIER,f,int f = 1)<SUB>41</SUB>>", "107": "<(println,println(&quot;! &quot; + l))<SUB>45</SUB>>", "109": "<(&lt;operator&gt;.addition,&quot;! &quot; + l)<SUB>45</SUB>>", "111": "<(IDENTIFIER,l,&quot;! &quot; + l)<SUB>45</SUB>>", "113": "<(IDENTIFIER,out,close())<SUB>58</SUB>>", "115": "<(MODIFIER,STATIC)>"}}