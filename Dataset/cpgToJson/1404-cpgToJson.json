{"edges": [["19", "21"], ["19", "145"], ["19", "146"], ["19", "147"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "40"], ["21", "41"], ["21", "48"], ["21", "49"], ["21", "56"], ["21", "58"], ["21", "59"], ["21", "70"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "69"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["70", "71"], ["70", "74"], ["70", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["80", "81"], ["80", "84"], ["80", "90"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["91", "94"], ["91", "97"], ["91", "102"], ["91", "140"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["108", "117"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "133"], ["117", "136"], ["118", "119"], ["118", "132"], ["119", "120"], ["119", "131"], ["120", "121"], ["120", "130"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["133", "134"], ["133", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "45"], ["41", "53"], ["49", "56"], ["56", "65"], ["59", "71"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["43", "41"], ["51", "49"], ["61", "59"], ["71", "77"], ["71", "81"], ["74", "147"], ["28", "26"], ["45", "43"], ["53", "51"], ["62", "61"], ["75", "74"], ["63", "62"], ["77", "75"], ["81", "87"], ["81", "94"], ["84", "147"], ["65", "63"], ["85", "88"], ["88", "84"], ["87", "85"], ["94", "99"], ["97", "104"], ["140", "147"], ["99", "97"], ["103", "113"], ["103", "143"], ["141", "140"], ["104", "103"], ["110", "125"], ["143", "141"], ["112", "110"], ["118", "133"], ["118", "137"], ["133", "104"], ["113", "112"], ["119", "118"], ["137", "104"], ["120", "119"], ["121", "120"], ["123", "121"], ["124", "123"], ["125", "124"], ["19", "24"], ["20", "147"], ["22", "147"], ["25", "147"], ["25", "147"], ["30", "147"], ["30", "147"], ["35", "147"], ["37", "147"], ["35", "147"], ["35", "147"], ["43", "147"], ["41", "147"], ["41", "147"], ["51", "147"], ["51", "147"], ["49", "147"], ["49", "147"], ["56", "147"], ["56", "147"], ["59", "147"], ["63", "147"], ["63", "147"], ["62", "147"], ["61", "147"], ["59", "147"], ["59", "147"], ["71", "147"], ["71", "147"], ["74", "147"], ["74", "147"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["43", "41"], ["43", "41"], ["51", "49"], ["51", "49"], ["62", "59"], ["62", "59"], ["19", "59"], ["22", "25"], ["19", "25"], ["32", "56"], ["19", "56"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["19", "43"], ["35", "43"], ["43", "51"], ["19", "51"], ["35", "51"], ["62", "61"], ["62", "61"], ["19", "61"], ["41", "71"], ["19", "71"], ["19", "74"], ["63", "62"], ["63", "62"], ["19", "62"], ["65", "63"], ["19", "63"], ["65", "63"], ["71", "81"], ["19", "81"], ["59", "81"], ["88", "84"], ["49", "65"], ["19", "65"], ["19", "88"], ["19", "94"], ["99", "97"], ["99", "97"], ["103", "140"], ["19", "140"], ["63", "99"], ["19", "99"], ["94", "103"], ["137", "103"], ["19", "103"], ["97", "103"], ["133", "103"], ["112", "110"], ["112", "110"], ["94", "104"], ["137", "104"], ["19", "104"], ["121", "133"], ["19", "133"], ["103", "112"], ["19", "112"], ["120", "118"], ["120", "118"], ["19", "118"], ["81", "118"], ["121", "137"], ["19", "137"], ["103", "113"], ["19", "113"], ["120", "119"], ["120", "119"], ["19", "119"], ["121", "120"], ["121", "120"], ["19", "120"], ["123", "121"], ["19", "121"], ["123", "121"], ["125", "123"], ["125", "123"], ["19", "123"], ["110", "123"], ["125", "124"], ["125", "124"], ["19", "124"], ["99", "125"], ["19", "125"], ["71", "77"], ["71", "75"], ["71", "81"], ["71", "74"], ["81", "94"], ["81", "141"], ["81", "99"], ["81", "84"], ["81", "85"], ["81", "103"], ["81", "104"], ["81", "87"], ["81", "97"], ["81", "140"], ["81", "143"], ["81", "88"], ["103", "120"], ["103", "113"], ["103", "103"], ["103", "104"], ["103", "119"], ["103", "121"], ["103", "123"], ["103", "112"], ["103", "118"], ["103", "110"], ["103", "124"], ["103", "125"], ["118", "137"], ["118", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String s: java.lang.String)<SUB>3</SUB>>", "31": "<(IDENTIFIER,s,String s = nextLine())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextLine())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,String[] info = s.split(&quot; &quot;))<SUB>4</SUB>>", "37": "<(split,s.split(&quot; &quot;))<SUB>4</SUB>>", "39": "<(LITERAL,&quot; &quot;,s.split(&quot; &quot;))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,long n = Long.parseLong(info[0]))<SUB>5</SUB>>", "43": "<(parseLong,Long.parseLong(info[0]))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.indexAccess,info[0])<SUB>5</SUB>>", "47": "<(LITERAL,0,Long.parseLong(info[0]))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,long k = Long.parseLong(info[1]))<SUB>6</SUB>>", "51": "<(parseLong,Long.parseLong(info[1]))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,info[1])<SUB>6</SUB>>", "55": "<(LITERAL,1,Long.parseLong(info[1]))<SUB>6</SUB>>", "57": "<(IDENTIFIER,sc,close())<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,long maximum = k * (k - 1) / 2 + 1)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.addition,k * (k - 1) / 2 + 1)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.multiplication,k * (k - 1))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>9</SUB>>", "67": "<(LITERAL,1,k - 1)<SUB>9</SUB>>", "69": "<(LITERAL,1,k * (k - 1) / 2 + 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.equals,n == 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,n == 1)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.greaterThan,n &gt; maximum)<SUB>12</SUB>>", "83": "<(IDENTIFIER,maximum,n &gt; maximum)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "87": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "89": "<(LITERAL,1,-1)<SUB>13</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(LOCAL,long right: long)<SUB>15</SUB>>", "95": "<(IDENTIFIER,left,long left = 0)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,long right = k - 1)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>15</SUB>>", "101": "<(LITERAL,1,k - 1)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.lessThan,left + 1 &lt; right)<SUB>16</SUB>>", "105": "<(IDENTIFIER,left,left + 1)<SUB>16</SUB>>", "107": "<(IDENTIFIER,right,left + 1 &lt; right)<SUB>16</SUB>>", "109": "<(LOCAL,long mid: long)<SUB>17</SUB>>", "111": "<(IDENTIFIER,mid,long mid = (right + left) / 2)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.addition,right + left)<SUB>17</SUB>>", "115": "<(IDENTIFIER,left,right + left)<SUB>17</SUB>>", "117": "<(CONTROL_STRUCTURE,if (mid * (k - 1 + k - mid) / 2 + 1 &gt;= n),if (mid * (k - 1 + k - mid) / 2 + 1 &gt;= n))<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.addition,mid * (k - 1 + k - mid) / 2 + 1)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.multiplication,mid * (k - 1 + k - mid))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.subtraction,k - 1 + k - mid)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>18</SUB>>", "127": "<(LITERAL,1,k - 1)<SUB>18</SUB>>", "129": "<(IDENTIFIER,mid,k - 1 + k - mid)<SUB>18</SUB>>", "131": "<(LITERAL,1,mid * (k - 1 + k - mid) / 2 + 1)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.assignment,right = mid)<SUB>19</SUB>>", "135": "<(IDENTIFIER,mid,right = mid)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.assignment,left = mid)<SUB>21</SUB>>", "139": "<(IDENTIFIER,mid,left = mid)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "143": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}