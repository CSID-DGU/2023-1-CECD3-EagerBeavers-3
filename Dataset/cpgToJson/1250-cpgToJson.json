{"edges": [["21", "22"], ["21", "23"], ["21", "128"], ["21", "129"], ["21", "130"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "59"], ["23", "63"], ["23", "67"], ["23", "78"], ["23", "79"], ["23", "93"], ["23", "94"], ["23", "100"], ["23", "101"], ["23", "104"], ["23", "105"], ["23", "116"], ["23", "123"], ["23", "126"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "58"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "92"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "85"], ["83", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["96", "99"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "115"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "61"], ["59", "65"], ["63", "68"], ["79", "96"], ["94", "101"], ["101", "110"], ["105", "119"], ["116", "123"], ["123", "126"], ["126", "130"], ["26", "24"], ["40", "38"], ["61", "59"], ["65", "63"], ["68", "75"], ["68", "86"], ["81", "79"], ["96", "94"], ["107", "105"], ["118", "116"], ["29", "36"], ["32", "27"], ["43", "51"], ["46", "41"], ["72", "77"], ["77", "130"], ["82", "81"], ["108", "107"], ["119", "118"], ["31", "29"], ["34", "32"], ["45", "43"], ["73", "72"], ["83", "89"], ["89", "82"], ["109", "108"], ["36", "34"], ["49", "56"], ["52", "46"], ["75", "73"], ["86", "83"], ["110", "109"], ["51", "49"], ["54", "52"], ["56", "54"], ["21", "26"], ["77", "130"], ["22", "130"], ["24", "130"], ["32", "130"], ["32", "130"], ["32", "130"], ["27", "130"], ["38", "130"], ["41", "130"], ["46", "130"], ["49", "130"], ["52", "130"], ["52", "130"], ["46", "130"], ["41", "130"], ["59", "130"], ["63", "130"], ["65", "130"], ["63", "130"], ["63", "130"], ["68", "130"], ["68", "130"], ["72", "130"], ["72", "130"], ["21", "22"], ["21", "24"], ["21", "38"], ["61", "59"], ["65", "63"], ["81", "79"], ["81", "79"], ["96", "94"], ["96", "94"], ["96", "94"], ["21", "101"], ["107", "105"], ["107", "105"], ["118", "116"], ["118", "116"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["49", "41"], ["46", "41"], ["41", "123"], ["21", "123"], ["116", "123"], ["123", "126"], ["21", "126"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "58"], ["27", "61"], ["21", "61"], ["61", "65"], ["21", "65"], ["59", "68"], ["21", "68"], ["21", "77"], ["82", "81"], ["82", "81"], ["89", "81"], ["21", "81"], ["83", "96"], ["21", "96"], ["63", "96"], ["110", "107"], ["110", "107"], ["81", "107"], ["21", "107"], ["105", "118"], ["21", "118"], ["101", "118"], ["107", "118"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["49", "46"], ["52", "46"], ["52", "72"], ["21", "72"], ["83", "82"], ["83", "82"], ["83", "82"], ["89", "82"], ["89", "82"], ["110", "108"], ["110", "108"], ["81", "108"], ["21", "108"], ["105", "119"], ["21", "119"], ["101", "119"], ["21", "49"], ["21", "57"], ["21", "83"], ["63", "83"], ["68", "89"], ["21", "89"], ["110", "109"], ["110", "109"], ["81", "109"], ["21", "109"], ["49", "52"], ["21", "52"], ["63", "86"], ["21", "86"], ["79", "110"], ["21", "110"], ["94", "110"], ["68", "107"], ["68", "94"], ["68", "73"], ["68", "96"], ["68", "77"], ["68", "89"], ["68", "116"], ["68", "75"], ["68", "81"], ["68", "72"], ["68", "119"], ["68", "123"], ["68", "82"], ["68", "101"], ["68", "126"], ["68", "79"], ["68", "83"], ["68", "105"], ["68", "118"], ["68", "110"], ["68", "108"], ["68", "109"], ["68", "86"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY fi = new FastInput(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastInput(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,fi,new FastInput(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "55": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.assignment,x = nextLong())<SUB>5</SUB>>", "61": "<(nextLong,nextLong())<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.assignment,k = nextLong())<SUB>6</SUB>>", "65": "<(nextLong,nextLong())<SUB>6</SUB>>", "67": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>8</SUB>>", "69": "<(IDENTIFIER,x,x == 0)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "75": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "77": "<(RETURN,return;,return;)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,long q1 = (pow(2, k + 1) * (x % MOD)) % MOD)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.modulo,(pow(2, k + 1) * (x % MOD)) % MOD)<SUB>14</SUB>>", "83": "<(pow,pow(2, k + 1))<SUB>14</SUB>>", "85": "<(LITERAL,2,pow(2, k + 1))<SUB>14</SUB>>", "87": "<(IDENTIFIER,k,k + 1)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.modulo,x % MOD)<SUB>14</SUB>>", "91": "<(IDENTIFIER,MOD,x % MOD)<SUB>14</SUB>>", "93": "<(LOCAL,long q2: long)<SUB>15</SUB>>", "95": "<(IDENTIFIER,q2,long q2 = pow(2, k))<SUB>15</SUB>>", "97": "<(IDENTIFIER,this,pow(2, k))<SUB>15</SUB>>", "99": "<(IDENTIFIER,k,pow(2, k))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,long q3 = 1)<SUB>16</SUB>>", "103": "<(LITERAL,1,long q3 = 1)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.assignment,long exp = (q1 - q2 + MOD + MOD) % MOD)<SUB>22</SUB>>", "107": "<(&lt;operator&gt;.modulo,(q1 - q2 + MOD + MOD) % MOD)<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.addition,q1 - q2 + MOD)<SUB>22</SUB>>", "111": "<(IDENTIFIER,q1,q1 - q2)<SUB>22</SUB>>", "113": "<(IDENTIFIER,MOD,q1 - q2 + MOD)<SUB>22</SUB>>", "115": "<(IDENTIFIER,MOD,(q1 - q2 + MOD + MOD) % MOD)<SUB>22</SUB>>", "117": "<(IDENTIFIER,exp,exp = (exp + q3) % MOD)<SUB>23</SUB>>", "119": "<(&lt;operator&gt;.addition,exp + q3)<SUB>23</SUB>>", "121": "<(IDENTIFIER,q3,exp + q3)<SUB>23</SUB>>", "123": "<(println,println(exp))<SUB>27</SUB>>", "125": "<(IDENTIFIER,exp,println(exp))<SUB>27</SUB>>", "127": "<(IDENTIFIER,pw,close())<SUB>29</SUB>>", "129": "<(MODIFIER,STATIC)>"}}