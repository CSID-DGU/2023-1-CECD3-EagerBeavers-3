{"edges": [["19", "20"], ["19", "21"], ["19", "134"], ["19", "135"], ["19", "136"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "29"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "59"], ["21", "63"], ["21", "64"], ["21", "67"], ["21", "126"], ["21", "129"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["29", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "77"], ["67", "79"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "95"], ["80", "81"], ["80", "84"], ["80", "86"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "90"], ["88", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["95", "102"], ["95", "107"], ["95", "109"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["110", "111"], ["110", "120"], ["111", "112"], ["111", "119"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["120", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["22", "25"], ["25", "28"], ["26", "29"], ["29", "33"], ["31", "37"], ["35", "41"], ["56", "61"], ["59", "64"], ["64", "69"], ["126", "132"], ["129", "136"], ["24", "22"], ["28", "26"], ["33", "31"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "56"], ["47", "44"], ["61", "59"], ["69", "76"], ["72", "81"], ["72", "126"], ["77", "76"], ["130", "129"], ["50", "47"], ["74", "72"], ["132", "130"], ["51", "54"], ["54", "50"], ["76", "74"], ["81", "77"], ["81", "88"], ["97", "106"], ["102", "113"], ["102", "77"], ["107", "106"], ["99", "97"], ["104", "102"], ["88", "91"], ["90", "99"], ["106", "104"], ["111", "122"], ["111", "107"], ["91", "90"], ["112", "111"], ["121", "107"], ["113", "116"], ["116", "112"], ["122", "121"], ["19", "24"], ["20", "136"], ["22", "136"], ["25", "136"], ["26", "136"], ["29", "136"], ["33", "136"], ["31", "136"], ["31", "136"], ["35", "136"], ["35", "136"], ["44", "136"], ["56", "136"], ["56", "136"], ["59", "136"], ["61", "136"], ["59", "136"], ["59", "136"], ["64", "136"], ["69", "136"], ["72", "136"], ["72", "136"], ["72", "136"], ["126", "136"], ["126", "136"], ["129", "136"], ["129", "136"], ["129", "136"], ["88", "136"], ["90", "136"], ["90", "136"], ["97", "136"], ["97", "136"], ["102", "136"], ["102", "136"], ["112", "136"], ["112", "136"], ["111", "136"], ["111", "136"], ["121", "136"], ["121", "136"], ["107", "136"], ["77", "136"], ["50", "136"], ["54", "136"], ["50", "136"], ["50", "136"], ["47", "136"], ["56", "136"], ["19", "20"], ["19", "22"], ["19", "26"], ["33", "31"], ["37", "35"], ["61", "59"], ["19", "64"], ["22", "25"], ["19", "25"], ["26", "29"], ["19", "29"], ["19", "41"], ["19", "56"], ["35", "56"], ["50", "56"], ["19", "69"], ["29", "126"], ["19", "126"], ["64", "126"], ["88", "126"], ["126", "129"], ["19", "129"], ["25", "33"], ["19", "33"], ["31", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["44", "61"], ["19", "61"], ["69", "72"], ["77", "72"], ["19", "72"], ["56", "72"], ["102", "72"], ["72", "77"], ["19", "77"], ["72", "97"], ["19", "97"], ["33", "54"], ["19", "54"], ["97", "102"], ["107", "102"], ["19", "102"], ["56", "102"], ["72", "102"], ["102", "107"], ["19", "107"], ["19", "90"], ["72", "99"], ["19", "99"], ["64", "88"], ["19", "88"], ["112", "111"], ["112", "111"], ["19", "111"], ["19", "121"], ["56", "112"], ["50", "112"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["72", "77"], ["72", "81"], ["72", "72"], ["72", "74"], ["72", "76"], ["81", "99"], ["81", "102"], ["81", "104"], ["81", "106"], ["81", "97"], ["81", "91"], ["81", "90"], ["81", "88"], ["102", "107"], ["102", "113"], ["102", "116"], ["102", "102"], ["102", "104"], ["102", "106"], ["102", "112"], ["102", "111"], ["111", "122"], ["111", "121"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(IDENTIFIER,sb,sb = new StringBuilder())<SUB>4</SUB>>", "29": "<(&lt;init&gt;,new StringBuilder())<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,N = nextInt())<SUB>5</SUB>>", "33": "<(nextInt,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,A = new int[N])<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[N])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "45": "<(IDENTIFIER,i,i &lt; N)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,A[i] = nextInt())<SUB>8</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,Arrays,sort(A))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,B = new boolean[N])<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.alloc,new boolean[N])>", "63": "<(LOCAL,int count: int)<SUB>12</SUB>>", "65": "<(IDENTIFIER,count,int count = 0)<SUB>12</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; A.length); i++),for (int i = 0; Some(i &lt; A.length); i++))<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "73": "<(IDENTIFIER,i,i &lt; A.length)<SUB>13</SUB>>", "75": "<(IDENTIFIER,A,i &lt; A.length)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,B[i])<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,if (B[i]))<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>15</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "89": "<(IDENTIFIER,count,count++)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,B[i])<SUB>19</SUB>>", "93": "<(IDENTIFIER,i,B[i] = true)<SUB>19</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; A.length); j++),for (int j = i + 1; Some(j &lt; A.length); j++))<SUB>21</SUB>>", "97": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>21</SUB>>", "99": "<(&lt;operator&gt;.addition,i + 1)<SUB>21</SUB>>", "101": "<(LITERAL,1,i + 1)<SUB>21</SUB>>", "103": "<(IDENTIFIER,j,j &lt; A.length)<SUB>21</SUB>>", "105": "<(IDENTIFIER,A,j &lt; A.length)<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.equals,A[j] % A[i] == 0)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,A[j])<SUB>22</SUB>>", "115": "<(IDENTIFIER,j,A[j] % A[i])<SUB>22</SUB>>", "117": "<(IDENTIFIER,A,A[j] % A[i])<SUB>22</SUB>>", "119": "<(LITERAL,0,A[j] % A[i] == 0)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignment,B[j] = true)<SUB>23</SUB>>", "123": "<(IDENTIFIER,B,B[j] = true)<SUB>23</SUB>>", "125": "<(LITERAL,true,B[j] = true)<SUB>23</SUB>>", "127": "<(IDENTIFIER,sb,append(count))<SUB>27</SUB>>", "129": "<(println,println(sb))<SUB>28</SUB>>", "131": "<(IDENTIFIER,System,println(sb))<SUB>28</SUB>>", "133": "<(IDENTIFIER,sb,println(sb))<SUB>28</SUB>>", "135": "<(MODIFIER,STATIC)>"}}