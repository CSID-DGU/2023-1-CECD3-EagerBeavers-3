{"edges": [["28", "29"], ["28", "30"], ["28", "330"], ["28", "331"], ["28", "332"], ["30", "4"], ["30", "31"], ["30", "34"], ["30", "6"], ["30", "43"], ["30", "46"], ["30", "10"], ["30", "8"], ["30", "47"], ["30", "50"], ["30", "53"], ["30", "54"], ["30", "55"], ["30", "63"], ["30", "71"], ["30", "74"], ["30", "77"], ["30", "78"], ["30", "79"], ["30", "85"], ["30", "91"], ["30", "92"], ["30", "98"], ["30", "99"], ["30", "104"], ["30", "121"], ["30", "122"], ["30", "123"], ["30", "124"], ["30", "128"], ["30", "132"], ["30", "12"], ["30", "136"], ["30", "139"], ["30", "140"], ["30", "143"], ["30", "146"], ["30", "188"], ["30", "321"], ["30", "328"], ["31", "32"], ["31", "33"], ["34", "3"], ["34", "35"], ["35", "36"], ["35", "39"], ["35", "42"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["46", "5"], ["47", "48"], ["47", "49"], ["50", "7"], ["50", "51"], ["50", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "60"], ["57", "61"], ["57", "62"], ["58", "59"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["65", "68"], ["65", "70"], ["68", "69"], ["71", "72"], ["71", "73"], ["74", "9"], ["74", "75"], ["75", "76"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "112"], ["104", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["136", "137"], ["136", "138"], ["139", "11"], ["140", "141"], ["140", "142"], ["143", "13"], ["143", "144"], ["144", "145"], ["146", "147"], ["146", "151"], ["147", "148"], ["147", "150"], ["148", "149"], ["151", "152"], ["151", "153"], ["151", "154"], ["151", "162"], ["151", "170"], ["151", "177"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "161"], ["157", "158"], ["157", "159"], ["159", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "169"], ["165", "166"], ["165", "167"], ["167", "168"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["179", "187"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["183", "186"], ["188", "189"], ["188", "192"], ["189", "190"], ["190", "191"], ["192", "193"], ["192", "194"], ["192", "198"], ["192", "236"], ["194", "195"], ["194", "196"], ["196", "197"], ["198", "199"], ["198", "210"], ["199", "200"], ["199", "209"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "222"], ["210", "229"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "238"], ["236", "241"], ["236", "244"], ["236", "246"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["244", "245"], ["246", "247"], ["246", "248"], ["246", "257"], ["246", "258"], ["246", "267"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "292"], ["268", "269"], ["268", "284"], ["269", "270"], ["269", "281"], ["270", "271"], ["270", "278"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "290"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["290", "291"], ["292", "293"], ["292", "310"], ["293", "294"], ["293", "299"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["299", "300"], ["299", "309"], ["300", "301"], ["300", "306"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "316"], ["312", "320"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "318"], ["316", "319"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "327"], ["324", "325"], ["324", "326"], ["328", "329"], ["31", "38"], ["34", "45"], ["43", "46"], ["46", "49"], ["47", "50"], ["50", "58"], ["55", "68"], ["63", "73"], ["71", "75"], ["74", "83"], ["79", "89"], ["85", "96"], ["92", "101"], ["99", "106"], ["124", "130"], ["128", "134"], ["132", "138"], ["136", "139"], ["139", "142"], ["140", "144"], ["143", "148"], ["321", "328"], ["328", "332"], ["33", "31"], ["45", "43"], ["49", "47"], ["57", "55"], ["65", "63"], ["73", "71"], ["75", "74"], ["81", "79"], ["87", "85"], ["94", "92"], ["101", "99"], ["106", "109"], ["109", "116"], ["109", "126"], ["112", "109"], ["114", "112"], ["126", "124"], ["130", "128"], ["134", "132"], ["138", "136"], ["142", "140"], ["144", "143"], ["147", "159"], ["147", "190"], ["189", "196"], ["189", "324"], ["323", "321"], ["36", "39"], ["39", "34"], ["58", "57"], ["68", "65"], ["83", "81"], ["89", "87"], ["96", "94"], ["116", "119"], ["119", "114"], ["148", "147"], ["154", "167"], ["162", "172"], ["170", "182"], ["177", "148"], ["190", "189"], ["194", "205"], ["324", "323"], ["38", "36"], ["156", "154"], ["164", "162"], ["171", "170"], ["196", "194"], ["199", "218"], ["199", "238"], ["238", "241"], ["241", "190"], ["241", "253"], ["244", "241"], ["157", "156"], ["165", "164"], ["172", "171"], ["180", "183"], ["183", "177"], ["200", "199"], ["211", "227"], ["222", "234"], ["229", "238"], ["248", "263"], ["258", "272"], ["159", "157"], ["167", "165"], ["182", "180"], ["201", "208"], ["206", "200"], ["213", "211"], ["224", "222"], ["231", "229"], ["250", "248"], ["260", "258"], ["268", "295"], ["268", "244"], ["203", "201"], ["208", "206"], ["214", "221"], ["219", "213"], ["225", "224"], ["232", "231"], ["251", "254"], ["254", "250"], ["261", "264"], ["264", "260"], ["269", "268"], ["269", "286"], ["284", "268"], ["293", "315"], ["310", "244"], ["205", "203"], ["216", "214"], ["221", "219"], ["227", "225"], ["234", "232"], ["253", "251"], ["263", "261"], ["270", "269"], ["270", "281"], ["281", "269"], ["285", "290"], ["290", "284"], ["294", "305"], ["299", "293"], ["218", "216"], ["271", "270"], ["271", "278"], ["278", "270"], ["286", "285"], ["295", "294"], ["300", "299"], ["313", "316"], ["316", "310"], ["272", "271"], ["272", "275"], ["275", "271"], ["301", "308"], ["306", "300"], ["315", "313"], ["303", "301"], ["308", "306"], ["305", "303"], ["28", "33"], ["29", "332"], ["31", "332"], ["36", "332"], ["39", "332"], ["39", "332"], ["34", "332"], ["43", "332"], ["46", "332"], ["46", "332"], ["47", "332"], ["50", "332"], ["55", "332"], ["55", "332"], ["55", "332"], ["63", "332"], ["63", "332"], ["63", "332"], ["79", "332"], ["87", "332"], ["85", "332"], ["85", "332"], ["94", "332"], ["92", "332"], ["92", "332"], ["99", "332"], ["101", "332"], ["99", "332"], ["99", "332"], ["106", "332"], ["109", "332"], ["109", "332"], ["109", "332"], ["124", "332"], ["124", "332"], ["128", "332"], ["132", "332"], ["132", "332"], ["136", "332"], ["139", "332"], ["140", "332"], ["143", "332"], ["144", "332"], ["143", "332"], ["143", "332"], ["148", "332"], ["147", "332"], ["147", "332"], ["190", "332"], ["189", "332"], ["189", "332"], ["324", "332"], ["323", "332"], ["323", "332"], ["321", "332"], ["321", "332"], ["328", "332"], ["328", "332"], ["194", "332"], ["194", "332"], ["194", "332"], ["199", "332"], ["199", "332"], ["199", "332"], ["211", "332"], ["211", "332"], ["211", "332"], ["224", "332"], ["222", "332"], ["222", "332"], ["231", "332"], ["229", "332"], ["229", "332"], ["238", "332"], ["241", "332"], ["241", "332"], ["250", "332"], ["250", "332"], ["248", "332"], ["248", "332"], ["258", "332"], ["260", "332"], ["260", "332"], ["258", "332"], ["258", "332"], ["272", "332"], ["271", "332"], ["275", "332"], ["275", "332"], ["271", "332"], ["270", "332"], ["278", "332"], ["270", "332"], ["269", "332"], ["281", "332"], ["281", "332"], ["269", "332"], ["268", "332"], ["284", "332"], ["284", "332"], ["268", "332"], ["268", "332"], ["293", "332"], ["299", "332"], ["293", "332"], ["293", "332"], ["313", "332"], ["316", "332"], ["316", "332"], ["316", "332"], ["316", "332"], ["310", "332"], ["244", "332"], ["154", "332"], ["165", "332"], ["167", "332"], ["165", "332"], ["164", "332"], ["162", "332"], ["162", "332"], ["170", "332"], ["170", "332"], ["180", "332"], ["183", "332"], ["183", "332"], ["183", "332"], ["183", "332"], ["177", "332"], ["114", "332"], ["114", "332"], ["112", "332"], ["114", "332"], ["28", "29"], ["28", "31"], ["28", "43"], ["28", "47"], ["57", "55"], ["57", "55"], ["57", "55"], ["65", "63"], ["65", "63"], ["65", "63"], ["28", "71"], ["81", "79"], ["81", "79"], ["87", "85"], ["87", "85"], ["94", "92"], ["94", "92"], ["101", "99"], ["101", "99"], ["126", "124"], ["130", "128"], ["134", "132"], ["28", "136"], ["28", "140"], ["31", "34"], ["28", "34"], ["36", "34"], ["39", "34"], ["43", "46"], ["28", "46"], ["47", "50"], ["28", "50"], ["71", "74"], ["28", "74"], ["75", "74"], ["28", "106"], ["136", "139"], ["28", "139"], ["140", "143"], ["28", "143"], ["144", "143"], ["50", "321"], ["28", "321"], ["128", "321"], ["222", "321"], ["132", "321"], ["229", "321"], ["321", "328"], ["28", "328"], ["28", "36"], ["28", "42"], ["58", "57"], ["28", "57"], ["28", "65"], ["68", "65"], ["34", "75"], ["28", "75"], ["28", "81"], ["83", "81"], ["81", "87"], ["28", "87"], ["89", "87"], ["87", "94"], ["28", "94"], ["96", "94"], ["79", "101"], ["28", "101"], ["85", "101"], ["106", "109"], ["112", "109"], ["28", "109"], ["101", "109"], ["109", "112"], ["28", "112"], ["28", "114"], ["99", "114"], ["119", "114"], ["28", "126"], ["28", "130"], ["28", "134"], ["96", "144"], ["28", "144"], ["148", "147"], ["28", "147"], ["156", "154"], ["156", "154"], ["164", "162"], ["164", "162"], ["28", "170"], ["190", "189"], ["196", "194"], ["128", "323"], ["222", "323"], ["28", "323"], ["132", "323"], ["229", "323"], ["36", "39"], ["28", "39"], ["28", "58"], ["28", "68"], ["74", "83"], ["28", "83"], ["83", "89"], ["28", "89"], ["75", "96"], ["28", "96"], ["28", "119"], ["92", "148"], ["28", "148"], ["139", "177"], ["28", "177"], ["180", "177"], ["183", "177"], ["139", "190"], ["196", "190"], ["310", "190"], ["177", "190"], ["28", "190"], ["28", "238"], ["128", "324"], ["222", "324"], ["28", "324"], ["157", "156"], ["157", "156"], ["28", "156"], ["165", "164"], ["165", "164"], ["28", "164"], ["28", "180"], ["28", "187"], ["190", "196"], ["28", "196"], ["124", "199"], ["211", "199"], ["28", "199"], ["199", "211"], ["194", "222"], ["28", "222"], ["194", "229"], ["28", "229"], ["238", "241"], ["244", "241"], ["28", "241"], ["241", "244"], ["28", "244"], ["194", "248"], ["55", "248"], ["194", "258"], ["63", "258"], ["94", "157"], ["165", "157"], ["28", "157"], ["159", "157"], ["157", "165"], ["28", "165"], ["167", "165"], ["180", "183"], ["28", "183"], ["154", "183"], ["162", "183"], ["143", "159"], ["167", "159"], ["28", "159"], ["159", "167"], ["28", "167"], ["194", "224"], ["28", "224"], ["194", "231"], ["28", "231"], ["194", "250"], ["55", "250"], ["194", "260"], ["63", "260"], ["269", "268"], ["269", "268"], ["284", "268"], ["284", "268"], ["199", "293"], ["28", "293"], ["270", "269"], ["270", "269"], ["281", "269"], ["281", "269"], ["293", "284"], ["290", "284"], ["196", "310"], ["28", "310"], ["313", "310"], ["316", "310"], ["271", "270"], ["271", "270"], ["278", "270"], ["278", "270"], ["258", "281"], ["278", "281"], ["28", "281"], ["101", "281"], ["28", "290"], ["199", "299"], ["28", "299"], ["28", "313"], ["28", "320"], ["272", "271"], ["272", "271"], ["275", "271"], ["275", "271"], ["258", "278"], ["28", "278"], ["313", "316"], ["28", "316"], ["272", "316"], ["275", "316"], ["258", "316"], ["278", "316"], ["281", "316"], ["248", "272"], ["28", "272"], ["272", "275"], ["28", "275"], ["109", "275"], ["109", "114"], ["109", "119"], ["109", "112"], ["109", "116"], ["109", "109"], ["147", "167"], ["147", "154"], ["147", "162"], ["147", "170"], ["147", "148"], ["147", "182"], ["147", "164"], ["147", "180"], ["147", "171"], ["147", "183"], ["147", "157"], ["147", "159"], ["147", "177"], ["147", "165"], ["147", "147"], ["147", "156"], ["147", "172"], ["189", "196"], ["189", "189"], ["189", "206"], ["189", "208"], ["189", "238"], ["189", "190"], ["189", "194"], ["189", "201"], ["189", "205"], ["189", "200"], ["189", "199"], ["189", "241"], ["189", "203"], ["199", "214"], ["199", "225"], ["199", "232"], ["199", "213"], ["199", "231"], ["199", "221"], ["199", "224"], ["199", "234"], ["199", "229"], ["199", "211"], ["199", "216"], ["199", "227"], ["199", "222"], ["199", "218"], ["199", "219"], ["241", "272"], ["241", "244"], ["241", "261"], ["241", "264"], ["241", "258"], ["241", "268"], ["241", "260"], ["241", "270"], ["241", "251"], ["241", "253"], ["241", "254"], ["241", "263"], ["241", "241"], ["241", "271"], ["241", "248"], ["241", "250"], ["241", "269"], ["268", "308"], ["268", "301"], ["268", "300"], ["268", "306"], ["268", "293"], ["268", "315"], ["268", "295"], ["268", "299"], ["268", "294"], ["268", "310"], ["268", "305"], ["268", "313"], ["268", "303"], ["268", "316"], ["269", "290"], ["269", "284"], ["269", "285"], ["269", "286"], ["270", "281"], ["271", "278"], ["272", "275"]], "features": {"28": "<(METHOD,main)<SUB>1</SUB>>", "30": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "31": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.alloc,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>4</SUB>>", "40": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "42": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,StringBuilder out = new StringBuilder())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>5</SUB>>", "5": "<(IDENTIFIER,out,new StringBuilder())<SUB>5</SUB>>", "8": "<(LOCAL,PrintWriter pw: ANY)<SUB>7</SUB>>", "48": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(&quot;output.txt&quot;, &quot;UTF-8&quot;))<SUB>7</SUB>>", "50": "<(&lt;init&gt;,new PrintWriter(&quot;output.txt&quot;, &quot;UTF-8&quot;))<SUB>7</SUB>>", "51": "<(LITERAL,&quot;output.txt&quot;,new PrintWriter(&quot;output.txt&quot;, &quot;UTF-8&quot;))<SUB>7</SUB>>", "53": "<(LOCAL,int[] dx: int[])<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] dx = { -1, 1, 0, 0 })<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.arrayInitializer,{ -1, 1, 0, 0 })<SUB>9</SUB>>", "59": "<(LITERAL,1,-1)<SUB>9</SUB>>", "61": "<(LITERAL,0,{ -1, 1, 0, 0 })<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] dy = { 0, 0, -1, 1 })<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.arrayInitializer,{ 0, 0, -1, 1 })<SUB>9</SUB>>", "67": "<(LITERAL,0,{ 0, 0, -1, 1 })<SUB>9</SUB>>", "69": "<(LITERAL,1,-1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,tk = new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "9": "<(IDENTIFIER,tk,new StringTokenizer(in.readLine()))<SUB>11</SUB>>", "76": "<(IDENTIFIER,in,readLine())<SUB>11</SUB>>", "78": "<(LOCAL,int m: int)<SUB>12</SUB>>", "80": "<(IDENTIFIER,n,int n = parseInt(tk.nextToken()))<SUB>12</SUB>>", "82": "<(IDENTIFIER,this,parseInt(tk.nextToken()))<SUB>12</SUB>>", "84": "<(IDENTIFIER,tk,nextToken())<SUB>12</SUB>>", "86": "<(IDENTIFIER,m,int m = parseInt(tk.nextToken()))<SUB>12</SUB>>", "88": "<(IDENTIFIER,this,parseInt(tk.nextToken()))<SUB>12</SUB>>", "90": "<(IDENTIFIER,tk,nextToken())<SUB>12</SUB>>", "92": "<(&lt;operator&gt;.assignment,int k = parseInt(in.readLine()))<SUB>13</SUB>>", "94": "<(parseInt,parseInt(in.readLine()))<SUB>13</SUB>>", "96": "<(readLine,readLine())<SUB>13</SUB>>", "98": "<(LOCAL,int[][] dist: int[][])<SUB>15</SUB>>", "100": "<(IDENTIFIER,dist,int[][] dist = new int[n][m])<SUB>15</SUB>>", "102": "<(IDENTIFIER,n,new int[n][m])<SUB>15</SUB>>", "104": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "106": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "108": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "110": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "112": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "114": "<(fill,fill(dist[i], -1))<SUB>17</SUB>>", "116": "<(&lt;operator&gt;.indexAccess,dist[i])<SUB>17</SUB>>", "118": "<(IDENTIFIER,i,fill(dist[i], -1))<SUB>17</SUB>>", "120": "<(LITERAL,1,-1)<SUB>17</SUB>>", "122": "<(LOCAL,int atx: int)<SUB>19</SUB>>", "124": "<(&lt;operator&gt;.assignment,int ans = -1)<SUB>19</SUB>>", "126": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "128": "<(&lt;operator&gt;.assignment,int atx = -1)<SUB>19</SUB>>", "130": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "132": "<(&lt;operator&gt;.assignment,int aty = -1)<SUB>19</SUB>>", "134": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "12": "<(LOCAL,Queue&lt;point&gt; q: ANY)<SUB>21</SUB>>", "137": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;point&gt;())<SUB>21</SUB>>", "139": "<(&lt;init&gt;,new LinkedList&lt;point&gt;())<SUB>21</SUB>>", "140": "<(&lt;operator&gt;.assignment,tk = new StringTokenizer(in.readLine()))<SUB>23</SUB>>", "142": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine()))<SUB>23</SUB>>", "13": "<(IDENTIFIER,tk,new StringTokenizer(in.readLine()))<SUB>23</SUB>>", "145": "<(IDENTIFIER,in,readLine())<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,k-- &gt; 0)<SUB>24</SUB>>", "149": "<(IDENTIFIER,k,k--)<SUB>24</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "153": "<(LOCAL,int y: int)<SUB>25</SUB>>", "155": "<(IDENTIFIER,x,int x = parseInt(tk.nextToken()) - 1)<SUB>25</SUB>>", "157": "<(parseInt,parseInt(tk.nextToken()))<SUB>25</SUB>>", "159": "<(nextToken,nextToken())<SUB>25</SUB>>", "161": "<(LITERAL,1,parseInt(tk.nextToken()) - 1)<SUB>25</SUB>>", "163": "<(IDENTIFIER,y,int y = parseInt(tk.nextToken()) - 1)<SUB>25</SUB>>", "165": "<(parseInt,parseInt(tk.nextToken()))<SUB>25</SUB>>", "167": "<(nextToken,nextToken())<SUB>25</SUB>>", "169": "<(LITERAL,1,parseInt(tk.nextToken()) - 1)<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dist[x][y])<SUB>27</SUB>>", "173": "<(IDENTIFIER,dist,dist[x][y] = 0)<SUB>27</SUB>>", "175": "<(IDENTIFIER,y,dist[x][y] = 0)<SUB>27</SUB>>", "177": "<(add,add(new point(x, y)))<SUB>28</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "181": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "183": "<(&lt;init&gt;,new point(x, y))<SUB>28</SUB>>", "185": "<(IDENTIFIER,x,new point(x, y))<SUB>28</SUB>>", "187": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "189": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>31</SUB>>", "191": "<(IDENTIFIER,q,isEmpty())<SUB>31</SUB>>", "193": "<(LOCAL,point p: ANY)<SUB>32</SUB>>", "195": "<(IDENTIFIER,p,ANY p = remove())<SUB>32</SUB>>", "197": "<(IDENTIFIER,q,remove())<SUB>32</SUB>>", "199": "<(&lt;operator&gt;.greaterThan,dist[p.x][p.y] &gt; ans)<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dist[p.x])<SUB>34</SUB>>", "203": "<(&lt;operator&gt;.fieldAccess,p.x)<SUB>34</SUB>>", "205": "<(FIELD_IDENTIFIER,x,x)<SUB>34</SUB>>", "207": "<(IDENTIFIER,p,dist[p.x][p.y] &gt; ans)<SUB>34</SUB>>", "209": "<(IDENTIFIER,ans,dist[p.x][p.y] &gt; ans)<SUB>34</SUB>>", "211": "<(&lt;operator&gt;.assignment,ans = dist[p.x][p.y])<SUB>35</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dist[p.x][p.y])<SUB>35</SUB>>", "215": "<(IDENTIFIER,dist,ans = dist[p.x][p.y])<SUB>35</SUB>>", "217": "<(IDENTIFIER,p,ans = dist[p.x][p.y])<SUB>35</SUB>>", "219": "<(&lt;operator&gt;.fieldAccess,p.y)<SUB>35</SUB>>", "221": "<(FIELD_IDENTIFIER,y,y)<SUB>35</SUB>>", "223": "<(IDENTIFIER,atx,atx = p.x + 1)<SUB>36</SUB>>", "225": "<(&lt;operator&gt;.fieldAccess,p.x)<SUB>36</SUB>>", "227": "<(FIELD_IDENTIFIER,x,x)<SUB>36</SUB>>", "229": "<(&lt;operator&gt;.assignment,aty = p.y + 1)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.addition,p.y + 1)<SUB>37</SUB>>", "233": "<(IDENTIFIER,p,p.y + 1)<SUB>37</SUB>>", "235": "<(LITERAL,1,p.y + 1)<SUB>37</SUB>>", "237": "<(LOCAL,int i: int)<SUB>40</SUB>>", "239": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "241": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>40</SUB>>", "243": "<(LITERAL,4,i &lt; 4)<SUB>40</SUB>>", "245": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "247": "<(LOCAL,int nx: int)<SUB>41</SUB>>", "249": "<(IDENTIFIER,nx,int nx = p.x + dx[i])<SUB>41</SUB>>", "251": "<(&lt;operator&gt;.fieldAccess,p.x)<SUB>41</SUB>>", "253": "<(FIELD_IDENTIFIER,x,x)<SUB>41</SUB>>", "255": "<(IDENTIFIER,dx,p.x + dx[i])<SUB>41</SUB>>", "257": "<(LOCAL,int ny: int)<SUB>42</SUB>>", "259": "<(IDENTIFIER,ny,int ny = p.y + dy[i])<SUB>42</SUB>>", "261": "<(&lt;operator&gt;.fieldAccess,p.y)<SUB>42</SUB>>", "263": "<(FIELD_IDENTIFIER,y,y)<SUB>42</SUB>>", "265": "<(IDENTIFIER,dy,p.y + dy[i])<SUB>42</SUB>>", "267": "<(CONTROL_STRUCTURE,if (nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; m &amp;&amp; dist[nx][ny] == -1),if (nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; m &amp;&amp; dist[nx][ny] == -1))<SUB>44</SUB>>", "269": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; m)<SUB>44</SUB>>", "271": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; nx &lt; n)<SUB>44</SUB>>", "273": "<(IDENTIFIER,nx,nx &gt;= 0)<SUB>44</SUB>>", "275": "<(&lt;operator&gt;.lessThan,nx &lt; n)<SUB>44</SUB>>", "277": "<(IDENTIFIER,n,nx &lt; n)<SUB>44</SUB>>", "279": "<(IDENTIFIER,ny,ny &gt;= 0)<SUB>44</SUB>>", "281": "<(&lt;operator&gt;.lessThan,ny &lt; m)<SUB>44</SUB>>", "283": "<(IDENTIFIER,m,ny &lt; m)<SUB>44</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dist[nx][ny])<SUB>44</SUB>>", "287": "<(IDENTIFIER,dist,dist[nx][ny] == -1)<SUB>44</SUB>>", "289": "<(IDENTIFIER,ny,dist[nx][ny] == -1)<SUB>44</SUB>>", "291": "<(LITERAL,1,-1)<SUB>44</SUB>>", "293": "<(&lt;operator&gt;.assignment,dist[nx][ny] = dist[p.x][p.y] + 1)<SUB>45</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dist[nx])<SUB>45</SUB>>", "297": "<(IDENTIFIER,nx,dist[nx][ny] = dist[p.x][p.y] + 1)<SUB>45</SUB>>", "299": "<(&lt;operator&gt;.addition,dist[p.x][p.y] + 1)<SUB>45</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,dist[p.x])<SUB>45</SUB>>", "303": "<(&lt;operator&gt;.fieldAccess,p.x)<SUB>45</SUB>>", "305": "<(FIELD_IDENTIFIER,x,x)<SUB>45</SUB>>", "307": "<(IDENTIFIER,p,dist[p.x][p.y] + 1)<SUB>45</SUB>>", "309": "<(LITERAL,1,dist[p.x][p.y] + 1)<SUB>45</SUB>>", "311": "<(IDENTIFIER,q,add(new point(nx, ny)))<SUB>46</SUB>>", "313": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "315": "<(&lt;operator&gt;.alloc,new point(nx, ny))<SUB>46</SUB>>", "317": "<(IDENTIFIER,$obj8,new point(nx, ny))>", "319": "<(IDENTIFIER,ny,new point(nx, ny))<SUB>46</SUB>>", "321": "<(println,println(atx + &quot; &quot; + aty))<SUB>51</SUB>>", "323": "<(&lt;operator&gt;.addition,atx + &quot; &quot; + aty)<SUB>51</SUB>>", "325": "<(IDENTIFIER,atx,atx + &quot; &quot;)<SUB>51</SUB>>", "327": "<(IDENTIFIER,aty,atx + &quot; &quot; + aty)<SUB>51</SUB>>", "329": "<(IDENTIFIER,pw,close())<SUB>52</SUB>>", "331": "<(MODIFIER,STATIC)>"}}