{"edges": [["19", "20"], ["19", "21"], ["19", "170"], ["19", "171"], ["19", "172"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "39"], ["21", "43"], ["21", "48"], ["21", "53"], ["21", "58"], ["21", "63"], ["21", "74"], ["21", "85"], ["21", "96"], ["21", "107"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "169"], ["108", "109"], ["108", "114"], ["108", "123"], ["108", "148"], ["108", "155"], ["108", "162"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "147"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "144"], ["133", "134"], ["133", "143"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "41"], ["39", "44"], ["43", "49"], ["48", "54"], ["53", "59"], ["58", "64"], ["24", "22"], ["26", "25"], ["32", "30"], ["41", "39"], ["44", "43"], ["49", "48"], ["54", "53"], ["59", "58"], ["64", "71"], ["64", "75"], ["75", "82"], ["75", "86"], ["86", "93"], ["86", "97"], ["97", "104"], ["97", "110"], ["28", "26"], ["68", "73"], ["73", "172"], ["79", "84"], ["84", "172"], ["90", "95"], ["95", "172"], ["101", "106"], ["106", "172"], ["109", "117"], ["114", "124"], ["148", "156"], ["155", "163"], ["162", "172"], ["162", "110"], ["69", "68"], ["80", "79"], ["91", "90"], ["102", "101"], ["110", "109"], ["116", "114"], ["124", "131"], ["124", "149"], ["149", "152"], ["152", "148"], ["156", "159"], ["159", "155"], ["163", "166"], ["166", "162"], ["71", "69"], ["82", "80"], ["93", "91"], ["104", "102"], ["117", "120"], ["120", "116"], ["128", "147"], ["147", "172"], ["129", "136"], ["132", "128"], ["131", "129"], ["133", "144"], ["144", "132"], ["134", "133"], ["135", "140"], ["140", "134"], ["136", "135"], ["19", "24"], ["84", "172"], ["106", "172"], ["95", "172"], ["147", "172"], ["73", "172"], ["20", "172"], ["22", "172"], ["25", "172"], ["25", "172"], ["32", "172"], ["30", "172"], ["30", "172"], ["35", "172"], ["35", "172"], ["39", "172"], ["39", "172"], ["39", "172"], ["43", "172"], ["43", "172"], ["48", "172"], ["48", "172"], ["53", "172"], ["53", "172"], ["58", "172"], ["58", "172"], ["64", "172"], ["64", "172"], ["68", "172"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["41", "39"], ["19", "43"], ["19", "48"], ["19", "53"], ["19", "58"], ["22", "25"], ["19", "25"], ["19", "169"], ["25", "32"], ["19", "32"], ["19", "41"], ["30", "64"], ["19", "64"], ["19", "73"], ["64", "75"], ["19", "75"], ["19", "84"], ["75", "86"], ["19", "86"], ["19", "95"], ["86", "97"], ["19", "97"], ["19", "106"], ["35", "109"], ["124", "109"], ["19", "109"], ["39", "114"], ["53", "114"], ["162", "114"], ["109", "114"], ["39", "148"], ["48", "148"], ["155", "148"], ["39", "155"], ["53", "155"], ["162", "155"], ["39", "162"], ["109", "162"], ["19", "68"], ["19", "79"], ["19", "90"], ["19", "101"], ["39", "116"], ["53", "116"], ["162", "116"], ["109", "116"], ["114", "124"], ["19", "124"], ["97", "124"], ["19", "147"], ["39", "128"], ["43", "128"], ["148", "128"], ["19", "128"], ["48", "128"], ["155", "128"], ["109", "128"], ["39", "132"], ["43", "132"], ["148", "132"], ["19", "132"], ["48", "132"], ["155", "132"], ["109", "132"], ["39", "133"], ["43", "133"], ["148", "133"], ["19", "133"], ["48", "133"], ["155", "133"], ["39", "134"], ["43", "134"], ["148", "134"], ["19", "134"], ["48", "134"], ["155", "134"], ["39", "135"], ["43", "135"], ["148", "135"], ["19", "135"], ["64", "68"], ["64", "73"], ["64", "75"], ["64", "69"], ["64", "71"], ["75", "84"], ["75", "82"], ["75", "79"], ["75", "80"], ["75", "86"], ["86", "95"], ["86", "97"], ["86", "91"], ["86", "93"], ["86", "90"], ["97", "120"], ["97", "116"], ["97", "102"], ["97", "114"], ["97", "104"], ["97", "106"], ["97", "101"], ["97", "110"], ["97", "117"], ["97", "124"], ["97", "109"], ["124", "136"], ["124", "128"], ["124", "163"], ["124", "131"], ["124", "166"], ["124", "149"], ["124", "132"], ["124", "162"], ["124", "159"], ["124", "144"], ["124", "129"], ["124", "134"], ["124", "140"], ["124", "148"], ["124", "152"], ["124", "147"], ["124", "135"], ["124", "155"], ["124", "156"], ["124", "133"], ["124", "120"], ["124", "116"], ["124", "114"], ["124", "110"], ["124", "117"], ["124", "124"], ["124", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,cin,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,cin,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long res = 2)<SUB>4</SUB>>", "37": "<(LITERAL,2,long res = 2)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,long[] a = new long[4])<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.alloc,new long[4])>", "43": "<(&lt;operator&gt;.assignment,a[0] = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,a,a[0] = 0)<SUB>6</SUB>>", "47": "<(LITERAL,0,a[0] = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,a[1])<SUB>7</SUB>>", "51": "<(LITERAL,1,a[1] = 1)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,a[2] = 1)<SUB>8</SUB>>", "55": "<(IDENTIFIER,a,a[2] = 1)<SUB>8</SUB>>", "57": "<(LITERAL,1,a[2] = 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,a[3])<SUB>9</SUB>>", "61": "<(LITERAL,3,a[3] = 2)<SUB>9</SUB>>", "63": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>10</SUB>>", "65": "<(IDENTIFIER,n,n == 1)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "71": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "73": "<(RETURN,return;,return;)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.equals,n == 2)<SUB>14</SUB>>", "77": "<(LITERAL,2,n == 2)<SUB>14</SUB>>", "79": "<(println,System.out.println(&quot;0 1 1&quot;))<SUB>15</SUB>>", "81": "<(IDENTIFIER,System,System.out.println(&quot;0 1 1&quot;))<SUB>15</SUB>>", "83": "<(LITERAL,&quot;0 1 1&quot;,System.out.println(&quot;0 1 1&quot;))<SUB>15</SUB>>", "85": "<(CONTROL_STRUCTURE,if (n == 0),if (n == 0))<SUB>18</SUB>>", "87": "<(IDENTIFIER,n,n == 0)<SUB>18</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "95": "<(RETURN,return;,return;)<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.equals,n == 3)<SUB>26</SUB>>", "99": "<(LITERAL,3,n == 3)<SUB>26</SUB>>", "101": "<(println,System.out.println(&quot;1 1 1&quot;))<SUB>27</SUB>>", "103": "<(IDENTIFIER,System,System.out.println(&quot;1 1 1&quot;))<SUB>27</SUB>>", "105": "<(LITERAL,&quot;1 1 1&quot;,System.out.println(&quot;1 1 1&quot;))<SUB>27</SUB>>", "107": "<(CONTROL_STRUCTURE,do {...} while (true),do {...} while (true))<SUB>30</SUB>>", "109": "<(&lt;operator&gt;.assignment,a[3] = res)<SUB>31</SUB>>", "111": "<(IDENTIFIER,a,a[3] = res)<SUB>31</SUB>>", "113": "<(IDENTIFIER,res,a[3] = res)<SUB>31</SUB>>", "115": "<(IDENTIFIER,res,res = a[2] + a[3])<SUB>32</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[2])<SUB>32</SUB>>", "119": "<(LITERAL,2,a[2] + a[3])<SUB>32</SUB>>", "121": "<(IDENTIFIER,a,a[2] + a[3])<SUB>32</SUB>>", "123": "<(CONTROL_STRUCTURE,if (res == n),if (res == n))<SUB>33</SUB>>", "125": "<(IDENTIFIER,res,res == n)<SUB>33</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "133": "<(&lt;operator&gt;.addition,a[0] + &quot; &quot; + a[1] + &quot; &quot;)<SUB>34</SUB>>", "135": "<(&lt;operator&gt;.addition,a[0] + &quot; &quot;)<SUB>34</SUB>>", "137": "<(IDENTIFIER,a,a[0] + &quot; &quot;)<SUB>34</SUB>>", "139": "<(LITERAL,&quot; &quot;,a[0] + &quot; &quot;)<SUB>34</SUB>>", "141": "<(IDENTIFIER,a,a[0] + &quot; &quot; + a[1])<SUB>34</SUB>>", "143": "<(LITERAL,&quot; &quot;,a[0] + &quot; &quot; + a[1] + &quot; &quot;)<SUB>34</SUB>>", "145": "<(IDENTIFIER,a,a[0] + &quot; &quot; + a[1] + &quot; &quot; + a[3])<SUB>34</SUB>>", "147": "<(RETURN,return;,return;)<SUB>35</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,a[0])<SUB>37</SUB>>", "151": "<(LITERAL,0,a[0] = a[1])<SUB>37</SUB>>", "153": "<(IDENTIFIER,a,a[0] = a[1])<SUB>37</SUB>>", "155": "<(&lt;operator&gt;.assignment,a[1] = a[2])<SUB>38</SUB>>", "157": "<(IDENTIFIER,a,a[1] = a[2])<SUB>38</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,a[2])<SUB>38</SUB>>", "161": "<(LITERAL,2,a[1] = a[2])<SUB>38</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,a[2])<SUB>39</SUB>>", "165": "<(LITERAL,2,a[2] = a[3])<SUB>39</SUB>>", "167": "<(IDENTIFIER,a,a[2] = a[3])<SUB>39</SUB>>", "169": "<(LITERAL,true,do {...} while (true))<SUB>41</SUB>>", "171": "<(MODIFIER,STATIC)>"}}