{"edges": [["19", "20"], ["19", "21"], ["19", "136"], ["19", "137"], ["19", "138"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "58"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "131"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["69", "96"], ["69", "129"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "121"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["121", "122"], ["121", "124"], ["122", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["58", "62"], ["62", "66"], ["131", "138"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "58"], ["47", "44"], ["66", "70"], ["66", "134"], ["132", "131"], ["28", "26"], ["50", "47"], ["70", "75"], ["129", "66"], ["134", "132"], ["51", "54"], ["54", "50"], ["75", "78"], ["78", "86"], ["78", "98"], ["81", "78"], ["98", "101"], ["101", "110"], ["101", "129"], ["104", "101"], ["85", "93"], ["85", "81"], ["108", "122"], ["108", "104"], ["86", "85"], ["91", "81"], ["109", "108"], ["109", "116"], ["114", "108"], ["122", "125"], ["124", "104"], ["93", "91"], ["110", "109"], ["115", "114"], ["125", "124"], ["116", "115"], ["19", "24"], ["20", "138"], ["22", "138"], ["25", "138"], ["25", "138"], ["32", "138"], ["30", "138"], ["30", "138"], ["35", "138"], ["35", "138"], ["35", "138"], ["41", "138"], ["44", "138"], ["44", "138"], ["58", "138"], ["62", "138"], ["66", "138"], ["66", "138"], ["66", "138"], ["131", "138"], ["131", "138"], ["131", "138"], ["70", "138"], ["70", "138"], ["98", "138"], ["101", "138"], ["101", "138"], ["129", "138"], ["109", "138"], ["108", "138"], ["115", "138"], ["115", "138"], ["114", "138"], ["108", "138"], ["108", "138"], ["122", "138"], ["124", "138"], ["124", "138"], ["104", "138"], ["85", "138"], ["85", "138"], ["85", "138"], ["91", "138"], ["91", "138"], ["91", "138"], ["81", "138"], ["50", "138"], ["54", "138"], ["50", "138"], ["50", "138"], ["47", "138"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "58"], ["19", "62"], ["22", "25"], ["19", "25"], ["19", "41"], ["62", "131"], ["129", "131"], ["19", "131"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["58", "66"], ["122", "66"], ["19", "66"], ["44", "66"], ["101", "66"], ["19", "70"], ["19", "75"], ["19", "98"], ["62", "129"], ["19", "129"], ["32", "54"], ["19", "54"], ["75", "78"], ["81", "78"], ["19", "78"], ["66", "78"], ["78", "81"], ["19", "81"], ["98", "101"], ["104", "101"], ["19", "101"], ["78", "101"], ["101", "104"], ["19", "104"], ["35", "85"], ["109", "85"], ["115", "85"], ["124", "85"], ["50", "85"], ["70", "85"], ["91", "85"], ["19", "85"], ["35", "91"], ["85", "91"], ["109", "108"], ["109", "108"], ["114", "108"], ["114", "108"], ["19", "124"], ["35", "109"], ["115", "109"], ["124", "109"], ["85", "109"], ["50", "109"], ["19", "109"], ["115", "114"], ["115", "114"], ["19", "114"], ["66", "122"], ["19", "122"], ["35", "115"], ["109", "115"], ["70", "115"], ["85", "115"], ["91", "115"], ["19", "115"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["66", "66"], ["66", "98"], ["66", "75"], ["66", "129"], ["66", "101"], ["66", "70"], ["66", "78"], ["78", "81"], ["78", "85"], ["78", "78"], ["78", "86"], ["101", "104"], ["101", "101"], ["101", "110"], ["101", "108"], ["101", "109"], ["85", "91"], ["85", "93"], ["108", "122"], ["108", "124"], ["108", "125"], ["109", "115"], ["109", "116"], ["109", "114"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "57": "<(LOCAL,int count: int)<SUB>9</SUB>>", "59": "<(IDENTIFIER,count,int count = 0)<SUB>9</SUB>>", "61": "<(LOCAL,int c: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,while (count != n),while (count != n))<SUB>11</SUB>>", "67": "<(IDENTIFIER,count,count != n)<SUB>11</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "71": "<(IDENTIFIER,min,min = 1000)<SUB>12</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "77": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "79": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.lessThan,a[i] &lt; min)<SUB>14</SUB>>", "87": "<(IDENTIFIER,a,a[i] &lt; min)<SUB>14</SUB>>", "89": "<(IDENTIFIER,min,a[i] &lt; min)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,min = a[i])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,min = a[i])<SUB>15</SUB>>", "97": "<(LOCAL,int i: int)<SUB>18</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "107": "<(CONTROL_STRUCTURE,if (a[i] != 1000 &amp;&amp; a[i] % min == 0),if (a[i] != 1000 &amp;&amp; a[i] % min == 0))<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.notEquals,a[i] != 1000)<SUB>19</SUB>>", "111": "<(IDENTIFIER,a,a[i] != 1000)<SUB>19</SUB>>", "113": "<(LITERAL,1000,a[i] != 1000)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.modulo,a[i] % min)<SUB>19</SUB>>", "117": "<(IDENTIFIER,a,a[i] % min)<SUB>19</SUB>>", "119": "<(IDENTIFIER,min,a[i] % min)<SUB>19</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "123": "<(IDENTIFIER,count,count++)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>21</SUB>>", "127": "<(IDENTIFIER,i,a[i] = 1000)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,c++)<SUB>24</SUB>>", "131": "<(println,System.out.println(c))<SUB>26</SUB>>", "133": "<(IDENTIFIER,System,System.out.println(c))<SUB>26</SUB>>", "135": "<(IDENTIFIER,c,System.out.println(c))<SUB>26</SUB>>", "137": "<(MODIFIER,STATIC)>"}}