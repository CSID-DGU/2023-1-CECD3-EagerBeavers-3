{"edges": [["24", "26"], ["24", "309"], ["24", "310"], ["24", "311"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "46"], ["26", "49"], ["26", "8"], ["26", "58"], ["26", "61"], ["26", "64"], ["26", "65"], ["26", "66"], ["26", "67"], ["26", "73"], ["26", "79"], ["26", "85"], ["26", "86"], ["26", "91"], ["26", "94"], ["26", "97"], ["26", "200"], ["26", "201"], ["26", "202"], ["26", "205"], ["26", "208"], ["26", "246"], ["26", "296"], ["26", "307"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "45"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "41"], ["37", "44"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "54"], ["50", "57"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["61", "7"], ["61", "62"], ["62", "63"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "9"], ["94", "95"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "105"], ["97", "107"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "109"], ["107", "110"], ["107", "118"], ["107", "126"], ["107", "134"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "117"], ["113", "114"], ["113", "115"], ["115", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "125"], ["121", "122"], ["121", "123"], ["123", "124"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "182"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "229"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["230", "231"], ["230", "239"], ["231", "232"], ["231", "237"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["237", "238"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["257", "258"], ["257", "259"], ["257", "262"], ["257", "265"], ["257", "267"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["265", "266"], ["267", "268"], ["268", "269"], ["268", "289"], ["269", "270"], ["269", "281"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "287"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "304"], ["299", "300"], ["299", "303"], ["300", "301"], ["300", "302"], ["304", "305"], ["304", "306"], ["307", "308"], ["27", "34"], ["30", "48"], ["46", "53"], ["49", "60"], ["58", "62"], ["61", "71"], ["67", "77"], ["73", "83"], ["79", "88"], ["86", "93"], ["91", "95"], ["94", "99"], ["202", "205"], ["205", "210"], ["296", "307"], ["307", "311"], ["29", "27"], ["48", "46"], ["60", "58"], ["62", "61"], ["69", "67"], ["75", "73"], ["81", "79"], ["88", "86"], ["93", "91"], ["95", "94"], ["99", "102"], ["102", "115"], ["102", "202"], ["105", "102"], ["210", "213"], ["213", "221"], ["213", "248"], ["216", "213"], ["248", "251"], ["251", "259"], ["251", "300"], ["254", "251"], ["298", "296"], ["32", "40"], ["35", "30"], ["51", "54"], ["54", "49"], ["71", "69"], ["77", "75"], ["83", "81"], ["110", "123"], ["118", "128"], ["126", "136"], ["299", "304"], ["304", "298"], ["34", "32"], ["53", "51"], ["112", "110"], ["120", "118"], ["127", "132"], ["132", "126"], ["136", "139"], ["139", "147"], ["139", "105"], ["142", "139"], ["221", "224"], ["224", "233"], ["224", "216"], ["227", "224"], ["259", "262"], ["262", "272"], ["262", "254"], ["265", "262"], ["300", "299"], ["38", "41"], ["41", "35"], ["113", "112"], ["121", "120"], ["128", "127"], ["40", "38"], ["115", "113"], ["123", "121"], ["147", "150"], ["150", "160"], ["150", "142"], ["153", "150"], ["231", "240"], ["231", "227"], ["269", "290"], ["269", "265"], ["232", "237"], ["237", "231"], ["240", "243"], ["243", "227"], ["270", "269"], ["270", "283"], ["281", "269"], ["290", "293"], ["293", "265"], ["157", "185"], ["157", "153"], ["233", "232"], ["271", "277"], ["276", "270"], ["282", "287"], ["287", "281"], ["158", "157"], ["158", "167"], ["165", "157"], ["183", "153"], ["272", "271"], ["277", "276"], ["283", "282"], ["159", "158"], ["166", "174"], ["171", "165"], ["184", "192"], ["189", "183"], ["160", "159"], ["167", "166"], ["172", "179"], ["177", "171"], ["185", "184"], ["190", "197"], ["195", "189"], ["174", "172"], ["179", "177"], ["192", "190"], ["197", "195"], ["24", "29"], ["25", "311"], ["27", "311"], ["35", "311"], ["41", "311"], ["41", "311"], ["35", "311"], ["30", "311"], ["46", "311"], ["51", "311"], ["54", "311"], ["54", "311"], ["49", "311"], ["67", "311"], ["75", "311"], ["73", "311"], ["73", "311"], ["81", "311"], ["79", "311"], ["79", "311"], ["86", "311"], ["88", "311"], ["86", "311"], ["86", "311"], ["91", "311"], ["94", "311"], ["95", "311"], ["94", "311"], ["94", "311"], ["102", "311"], ["102", "311"], ["202", "311"], ["205", "311"], ["248", "311"], ["251", "311"], ["251", "311"], ["251", "311"], ["300", "311"], ["299", "311"], ["298", "311"], ["304", "311"], ["298", "311"], ["296", "311"], ["296", "311"], ["307", "311"], ["307", "311"], ["259", "311"], ["262", "311"], ["262", "311"], ["262", "311"], ["254", "311"], ["270", "311"], ["270", "311"], ["269", "311"], ["281", "311"], ["281", "311"], ["269", "311"], ["269", "311"], ["290", "311"], ["293", "311"], ["265", "311"], ["221", "311"], ["224", "311"], ["224", "311"], ["224", "311"], ["216", "311"], ["231", "311"], ["231", "311"], ["231", "311"], ["240", "311"], ["243", "311"], ["227", "311"], ["110", "311"], ["110", "311"], ["118", "311"], ["121", "311"], ["123", "311"], ["121", "311"], ["120", "311"], ["118", "311"], ["118", "311"], ["126", "311"], ["126", "311"], ["126", "311"], ["136", "311"], ["139", "311"], ["139", "311"], ["105", "311"], ["147", "311"], ["150", "311"], ["150", "311"], ["150", "311"], ["142", "311"], ["158", "311"], ["157", "311"], ["165", "311"], ["174", "311"], ["172", "311"], ["171", "311"], ["177", "311"], ["179", "311"], ["177", "311"], ["171", "311"], ["165", "311"], ["157", "311"], ["157", "311"], ["183", "311"], ["192", "311"], ["190", "311"], ["189", "311"], ["195", "311"], ["197", "311"], ["195", "311"], ["189", "311"], ["183", "311"], ["183", "311"], ["153", "311"], ["24", "25"], ["24", "27"], ["24", "46"], ["24", "58"], ["69", "67"], ["69", "67"], ["75", "73"], ["75", "73"], ["81", "79"], ["81", "79"], ["88", "86"], ["88", "86"], ["24", "91"], ["24", "202"], ["24", "205"], ["27", "30"], ["24", "30"], ["38", "30"], ["35", "30"], ["46", "49"], ["24", "49"], ["51", "49"], ["54", "49"], ["58", "61"], ["24", "61"], ["62", "61"], ["91", "94"], ["24", "94"], ["95", "94"], ["24", "99"], ["24", "210"], ["24", "248"], ["49", "296"], ["24", "296"], ["202", "296"], ["290", "296"], ["240", "296"], ["205", "296"], ["293", "296"], ["243", "296"], ["296", "307"], ["24", "307"], ["24", "32"], ["24", "45"], ["24", "51"], ["24", "57"], ["30", "62"], ["24", "62"], ["24", "69"], ["71", "69"], ["69", "75"], ["24", "75"], ["77", "75"], ["75", "81"], ["24", "81"], ["83", "81"], ["67", "88"], ["24", "88"], ["73", "88"], ["83", "95"], ["24", "95"], ["99", "102"], ["105", "102"], ["24", "102"], ["79", "102"], ["102", "105"], ["24", "105"], ["112", "110"], ["112", "110"], ["120", "118"], ["120", "118"], ["132", "126"], ["210", "213"], ["216", "213"], ["24", "213"], ["88", "213"], ["139", "213"], ["213", "216"], ["24", "216"], ["248", "251"], ["254", "251"], ["24", "251"], ["213", "251"], ["251", "254"], ["24", "254"], ["202", "298"], ["290", "298"], ["240", "298"], ["24", "298"], ["205", "298"], ["293", "298"], ["243", "298"], ["32", "35"], ["24", "35"], ["38", "35"], ["41", "35"], ["51", "54"], ["24", "54"], ["61", "71"], ["24", "71"], ["71", "77"], ["24", "77"], ["62", "83"], ["24", "83"], ["24", "136"], ["24", "221"], ["24", "259"], ["202", "299"], ["290", "299"], ["240", "299"], ["24", "299"], ["205", "304"], ["293", "304"], ["243", "304"], ["24", "304"], ["24", "38"], ["24", "44"], ["113", "112"], ["113", "112"], ["24", "112"], ["121", "120"], ["121", "120"], ["24", "120"], ["24", "132"], ["136", "139"], ["142", "139"], ["24", "139"], ["88", "139"], ["139", "142"], ["179", "142"], ["197", "142"], ["24", "142"], ["221", "224"], ["227", "224"], ["24", "224"], ["88", "224"], ["150", "224"], ["224", "227"], ["24", "227"], ["259", "262"], ["265", "262"], ["24", "262"], ["88", "262"], ["224", "262"], ["150", "262"], ["262", "265"], ["24", "265"], ["202", "300"], ["290", "300"], ["240", "300"], ["24", "300"], ["38", "41"], ["24", "41"], ["81", "113"], ["121", "113"], ["24", "113"], ["115", "113"], ["113", "121"], ["24", "121"], ["123", "121"], ["24", "147"], ["94", "115"], ["123", "115"], ["24", "115"], ["115", "123"], ["24", "123"], ["147", "150"], ["153", "150"], ["24", "150"], ["88", "150"], ["150", "153"], ["174", "153"], ["192", "153"], ["24", "153"], ["237", "231"], ["213", "240"], ["24", "240"], ["224", "243"], ["24", "243"], ["270", "269"], ["270", "269"], ["281", "269"], ["281", "269"], ["231", "269"], ["251", "290"], ["24", "290"], ["262", "293"], ["24", "293"], ["24", "237"], ["281", "270"], ["231", "270"], ["270", "281"], ["287", "281"], ["158", "157"], ["158", "157"], ["165", "157"], ["165", "157"], ["190", "183"], ["190", "183"], ["195", "183"], ["195", "183"], ["24", "287"], ["165", "158"], ["183", "158"], ["24", "158"], ["158", "165"], ["172", "165"], ["172", "165"], ["177", "165"], ["177", "165"], ["172", "171"], ["172", "171"], ["177", "171"], ["177", "171"], ["190", "189"], ["190", "189"], ["195", "189"], ["195", "189"], ["177", "172"], ["195", "172"], ["24", "172"], ["174", "172"], ["174", "172"], ["172", "177"], ["24", "177"], ["179", "177"], ["179", "177"], ["177", "190"], ["195", "190"], ["24", "190"], ["192", "190"], ["192", "190"], ["190", "195"], ["24", "195"], ["197", "195"], ["197", "195"], ["118", "174"], ["192", "174"], ["24", "174"], ["150", "174"], ["110", "179"], ["197", "179"], ["24", "179"], ["139", "179"], ["197", "179"], ["118", "192"], ["174", "192"], ["24", "192"], ["150", "192"], ["174", "192"], ["110", "197"], ["179", "197"], ["24", "197"], ["139", "197"], ["179", "197"], ["102", "115"], ["102", "120"], ["102", "113"], ["102", "136"], ["102", "128"], ["102", "102"], ["102", "132"], ["102", "121"], ["102", "112"], ["102", "118"], ["102", "127"], ["102", "139"], ["102", "123"], ["102", "126"], ["102", "105"], ["102", "110"], ["213", "213"], ["213", "221"], ["213", "224"], ["213", "216"], ["251", "262"], ["251", "259"], ["251", "251"], ["251", "254"], ["139", "150"], ["139", "139"], ["139", "142"], ["139", "147"], ["224", "232"], ["224", "231"], ["224", "224"], ["224", "233"], ["224", "237"], ["224", "227"], ["262", "272"], ["262", "262"], ["262", "276"], ["262", "265"], ["262", "277"], ["262", "270"], ["262", "271"], ["262", "269"], ["150", "150"], ["150", "153"], ["150", "158"], ["150", "160"], ["150", "157"], ["150", "159"], ["231", "240"], ["231", "243"], ["269", "290"], ["269", "293"], ["270", "282"], ["270", "283"], ["270", "281"], ["270", "287"], ["157", "192"], ["157", "185"], ["157", "197"], ["157", "189"], ["157", "195"], ["157", "190"], ["157", "184"], ["157", "183"], ["158", "167"], ["158", "179"], ["158", "174"], ["158", "171"], ["158", "166"], ["158", "177"], ["158", "165"], ["158", "172"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new FileReader(new File(&quot;input.txt&quot;))))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new FileReader(new File(&quot;input.txt&quot;)))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj1,new FileReader(new File(&quot;input.txt&quot;)))>", "38": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "42": "<(IDENTIFIER,$obj0,new File(&quot;input.txt&quot;))>", "44": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "47": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>3</SUB>>", "49": "<(&lt;init&gt;,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>3</SUB>>", "50": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "52": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "54": "<(&lt;init&gt;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "56": "<(LITERAL,&quot;output.txt&quot;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>5</SUB>>", "59": "<(IDENTIFIER,st,st = new StringTokenizer(in.readLine()))<SUB>7</SUB>>", "61": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>7</SUB>>", "62": "<(readLine,readLine())<SUB>7</SUB>>", "64": "<(LOCAL,int n: int)<SUB>9</SUB>>", "66": "<(LOCAL,int k: int)<SUB>9</SUB>>", "68": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>9</SUB>>", "70": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "72": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "74": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>10</SUB>>", "76": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "78": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "80": "<(IDENTIFIER,k,int k = parseInt(in.readLine()))<SUB>11</SUB>>", "82": "<(IDENTIFIER,Integer,parseInt(in.readLine()))<SUB>11</SUB>>", "84": "<(IDENTIFIER,in,readLine())<SUB>11</SUB>>", "86": "<(&lt;operator&gt;.assignment,int[][] A = new int[n][m])<SUB>13</SUB>>", "88": "<(&lt;operator&gt;.alloc,new int[n][m])>", "90": "<(IDENTIFIER,m,new int[n][m])<SUB>13</SUB>>", "92": "<(IDENTIFIER,st,st = new StringTokenizer(in.readLine()))<SUB>15</SUB>>", "94": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>15</SUB>>", "95": "<(readLine,readLine())<SUB>15</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "101": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "103": "<(IDENTIFIER,i,i &lt; k)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "109": "<(LOCAL,int y1: int)<SUB>17</SUB>>", "111": "<(IDENTIFIER,x1,int x1 = Integer.parseInt(st.nextToken()) - 1)<SUB>17</SUB>>", "113": "<(parseInt,parseInt(st.nextToken()))<SUB>17</SUB>>", "115": "<(nextToken,nextToken())<SUB>17</SUB>>", "117": "<(LITERAL,1,Integer.parseInt(st.nextToken()) - 1)<SUB>17</SUB>>", "119": "<(IDENTIFIER,y1,int y1 = Integer.parseInt(st.nextToken()) - 1)<SUB>18</SUB>>", "121": "<(parseInt,parseInt(st.nextToken()))<SUB>18</SUB>>", "123": "<(nextToken,nextToken())<SUB>18</SUB>>", "125": "<(LITERAL,1,Integer.parseInt(st.nextToken()) - 1)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,A[x1][y1])<SUB>20</SUB>>", "129": "<(IDENTIFIER,A,A[x1][y1] = -10000000)<SUB>20</SUB>>", "131": "<(IDENTIFIER,y1,A[x1][y1] = -10000000)<SUB>20</SUB>>", "133": "<(LITERAL,10000000,-10000000)<SUB>20</SUB>>", "135": "<(LOCAL,int j: int)<SUB>22</SUB>>", "137": "<(IDENTIFIER,j,int j = 0)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>22</SUB>>", "141": "<(IDENTIFIER,n,j &lt; n)<SUB>22</SUB>>", "143": "<(IDENTIFIER,j,j++)<SUB>22</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int g = 0; Some(g &lt; m); g++),for (int g = 0; Some(g &lt; m); g++))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.assignment,int g = 0)<SUB>23</SUB>>", "149": "<(LITERAL,0,int g = 0)<SUB>23</SUB>>", "151": "<(IDENTIFIER,g,g &lt; m)<SUB>23</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,g++)<SUB>23</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.logicalOr,A[j][g] == 0 || (A[j][g] &gt; (Math.abs(y1 - g) + Math.abs(x1 - j))))<SUB>24</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,A[j][g])<SUB>24</SUB>>", "161": "<(IDENTIFIER,A,A[j][g] == 0)<SUB>24</SUB>>", "163": "<(IDENTIFIER,g,A[j][g] == 0)<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.greaterThan,A[j][g] &gt; (Math.abs(y1 - g) + Math.abs(x1 - j)))<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,A[j])<SUB>24</SUB>>", "169": "<(IDENTIFIER,j,A[j][g] &gt; (Math.abs(y1 - g) + Math.abs(x1 - j)))<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.addition,Math.abs(y1 - g) + Math.abs(x1 - j))<SUB>24</SUB>>", "173": "<(IDENTIFIER,Math,Math.abs(y1 - g))<SUB>24</SUB>>", "175": "<(IDENTIFIER,y1,y1 - g)<SUB>24</SUB>>", "177": "<(abs,Math.abs(x1 - j))<SUB>24</SUB>>", "179": "<(&lt;operator&gt;.subtraction,x1 - j)<SUB>24</SUB>>", "181": "<(IDENTIFIER,j,x1 - j)<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.assignment,A[j][g] = Math.abs(y1 - g) + Math.abs(x1 - j))<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,A[j])<SUB>25</SUB>>", "187": "<(IDENTIFIER,j,A[j][g] = Math.abs(y1 - g) + Math.abs(x1 - j))<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.addition,Math.abs(y1 - g) + Math.abs(x1 - j))<SUB>25</SUB>>", "191": "<(IDENTIFIER,Math,Math.abs(y1 - g))<SUB>25</SUB>>", "193": "<(IDENTIFIER,y1,y1 - g)<SUB>25</SUB>>", "195": "<(abs,Math.abs(x1 - j))<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.subtraction,x1 - j)<SUB>25</SUB>>", "199": "<(IDENTIFIER,j,x1 - j)<SUB>25</SUB>>", "201": "<(LOCAL,int h: int)<SUB>31</SUB>>", "203": "<(IDENTIFIER,f,int f = 0)<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.assignment,int h = 0)<SUB>31</SUB>>", "207": "<(LITERAL,0,int h = 0)<SUB>31</SUB>>", "209": "<(LOCAL,int i: int)<SUB>33</SUB>>", "211": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "213": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "215": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "217": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "219": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>34</SUB>>", "221": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>34</SUB>>", "223": "<(LITERAL,0,int j = 0)<SUB>34</SUB>>", "225": "<(IDENTIFIER,j,j &lt; m)<SUB>34</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.notEquals,A[i][j] != -10000000)<SUB>35</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>35</SUB>>", "235": "<(IDENTIFIER,i,A[i][j] != -10000000)<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.minus,-10000000)<SUB>35</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "241": "<(IDENTIFIER,f,f = i)<SUB>36</SUB>>", "243": "<(&lt;operator&gt;.assignment,h = j)<SUB>37</SUB>>", "245": "<(IDENTIFIER,j,h = j)<SUB>37</SUB>>", "247": "<(LOCAL,int i: int)<SUB>42</SUB>>", "249": "<(IDENTIFIER,i,int i = 0)<SUB>42</SUB>>", "251": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>42</SUB>>", "253": "<(IDENTIFIER,n,i &lt; n)<SUB>42</SUB>>", "255": "<(IDENTIFIER,i,i++)<SUB>42</SUB>>", "257": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>43</SUB>>", "259": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>43</SUB>>", "261": "<(LITERAL,0,int j = 0)<SUB>43</SUB>>", "263": "<(IDENTIFIER,j,j &lt; m)<SUB>43</SUB>>", "265": "<(&lt;operator&gt;.postIncrement,j++)<SUB>43</SUB>>", "267": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "269": "<(&lt;operator&gt;.logicalAnd,A[i][j] &gt; A[f][h] &amp;&amp; A[i][j] != -10000000)<SUB>44</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,A[i][j])<SUB>44</SUB>>", "273": "<(IDENTIFIER,A,A[i][j] &gt; A[f][h])<SUB>44</SUB>>", "275": "<(IDENTIFIER,j,A[i][j] &gt; A[f][h])<SUB>44</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,A[f])<SUB>44</SUB>>", "279": "<(IDENTIFIER,f,A[i][j] &gt; A[f][h])<SUB>44</SUB>>", "281": "<(&lt;operator&gt;.notEquals,A[i][j] != -10000000)<SUB>44</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>44</SUB>>", "285": "<(IDENTIFIER,i,A[i][j] != -10000000)<SUB>44</SUB>>", "287": "<(&lt;operator&gt;.minus,-10000000)<SUB>44</SUB>>", "289": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "291": "<(IDENTIFIER,f,f = i)<SUB>45</SUB>>", "293": "<(&lt;operator&gt;.assignment,h = j)<SUB>46</SUB>>", "295": "<(IDENTIFIER,j,h = j)<SUB>46</SUB>>", "297": "<(IDENTIFIER,pw,println((f + 1) + &quot; &quot; + (h + 1)))<SUB>51</SUB>>", "299": "<(&lt;operator&gt;.addition,(f + 1) + &quot; &quot;)<SUB>51</SUB>>", "301": "<(IDENTIFIER,f,f + 1)<SUB>51</SUB>>", "303": "<(LITERAL,&quot; &quot;,(f + 1) + &quot; &quot;)<SUB>51</SUB>>", "305": "<(IDENTIFIER,h,h + 1)<SUB>51</SUB>>", "307": "<(close,close())<SUB>52</SUB>>", "309": "<(MODIFIER,PUBLIC)>", "311": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}