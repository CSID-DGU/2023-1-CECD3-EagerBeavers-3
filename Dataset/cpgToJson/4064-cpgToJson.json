{"edges": [["19", "21"], ["19", "167"], ["19", "168"], ["19", "169"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "59"], ["21", "60"], ["21", "66"], ["21", "67"], ["21", "74"], ["21", "81"], ["21", "88"], ["21", "127"], ["21", "128"], ["21", "137"], ["21", "142"], ["21", "143"], ["21", "149"], ["21", "150"], ["21", "156"], ["21", "162"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "105"], ["98", "116"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "104"], ["102", "103"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["137", "140"], ["137", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "152"], ["152", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["156", "159"], ["156", "160"], ["156", "161"], ["162", "163"], ["162", "164"], ["162", "165"], ["162", "166"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "56"], ["52", "64"], ["60", "70"], ["67", "76"], ["74", "83"], ["81", "90"], ["128", "137"], ["137", "146"], ["143", "153"], ["150", "156"], ["156", "162"], ["162", "169"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["62", "60"], ["69", "67"], ["75", "74"], ["82", "81"], ["90", "93"], ["93", "102"], ["93", "131"], ["96", "93"], ["130", "128"], ["145", "143"], ["152", "150"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["56", "54"], ["64", "62"], ["70", "69"], ["76", "75"], ["83", "82"], ["99", "107"], ["105", "118"], ["116", "96"], ["131", "134"], ["134", "130"], ["146", "145"], ["153", "152"], ["29", "27"], ["32", "30"], ["101", "99"], ["106", "113"], ["111", "105"], ["117", "124"], ["122", "116"], ["34", "32"], ["102", "101"], ["107", "106"], ["113", "111"], ["118", "117"], ["124", "122"], ["19", "24"], ["20", "169"], ["22", "169"], ["27", "169"], ["30", "169"], ["30", "169"], ["30", "169"], ["25", "169"], ["37", "169"], ["37", "169"], ["37", "169"], ["46", "169"], ["44", "169"], ["44", "169"], ["54", "169"], ["52", "169"], ["52", "169"], ["62", "169"], ["64", "169"], ["62", "169"], ["60", "169"], ["60", "169"], ["67", "169"], ["67", "169"], ["74", "169"], ["74", "169"], ["74", "169"], ["81", "169"], ["81", "169"], ["81", "169"], ["90", "169"], ["93", "169"], ["93", "169"], ["130", "169"], ["128", "169"], ["128", "169"], ["137", "169"], ["137", "169"], ["143", "169"], ["152", "169"], ["150", "169"], ["150", "169"], ["156", "169"], ["156", "169"], ["162", "169"], ["162", "169"], ["162", "169"], ["162", "169"], ["162", "169"], ["99", "169"], ["102", "169"], ["101", "169"], ["99", "169"], ["99", "169"], ["105", "169"], ["111", "169"], ["105", "169"], ["105", "169"], ["116", "169"], ["122", "169"], ["122", "169"], ["116", "169"], ["116", "169"], ["96", "169"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["54", "52"], ["62", "60"], ["62", "60"], ["69", "67"], ["69", "67"], ["44", "74"], ["19", "74"], ["52", "81"], ["19", "81"], ["130", "128"], ["145", "143"], ["152", "150"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "90"], ["19", "137"], ["67", "137"], ["128", "137"], ["93", "137"], ["137", "156"], ["19", "156"], ["143", "156"], ["150", "156"], ["137", "156"], ["153", "156"], ["156", "162"], ["19", "162"], ["156", "162"], ["156", "162"], ["156", "162"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["46", "54"], ["19", "54"], ["37", "54"], ["54", "62"], ["19", "62"], ["64", "62"], ["60", "69"], ["19", "69"], ["90", "93"], ["96", "93"], ["19", "93"], ["60", "93"], ["93", "96"], ["19", "96"], ["101", "99"], ["101", "99"], ["111", "105"], ["111", "105"], ["122", "116"], ["122", "116"], ["93", "130"], ["19", "130"], ["146", "145"], ["146", "145"], ["153", "152"], ["153", "152"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["40", "64"], ["19", "64"], ["60", "70"], ["19", "70"], ["93", "131"], ["19", "131"], ["19", "134"], ["93", "134"], ["19", "146"], ["137", "146"], ["19", "153"], ["146", "153"], ["102", "101"], ["19", "101"], ["62", "111"], ["122", "111"], ["19", "111"], ["46", "111"], ["99", "111"], ["111", "122"], ["19", "122"], ["54", "122"], ["99", "122"], ["64", "102"], ["19", "102"], ["93", "107"], ["93", "96"], ["93", "113"], ["93", "105"], ["93", "116"], ["93", "122"], ["93", "99"], ["93", "118"], ["93", "102"], ["93", "117"], ["93", "106"], ["93", "93"], ["93", "101"], ["93", "124"], ["93", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] line = split(&quot; &quot;))<SUB>3</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,in,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int Xs: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,Xs,int Xs = Integer.parseInt(line[0]))<SUB>4</SUB>>", "47": "<(IDENTIFIER,Integer,Integer.parseInt(line[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,line,Integer.parseInt(line[0]))<SUB>4</SUB>>", "51": "<(LOCAL,int Ys: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,Ys,int Ys = Integer.parseInt(line[1]))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Integer,Integer.parseInt(line[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,line,Integer.parseInt(line[1]))<SUB>5</SUB>>", "59": "<(LOCAL,int n: int)<SUB>6</SUB>>", "61": "<(IDENTIFIER,n,int n = parseInt(in.readLine()))<SUB>6</SUB>>", "63": "<(IDENTIFIER,Integer,parseInt(in.readLine()))<SUB>6</SUB>>", "65": "<(IDENTIFIER,in,readLine())<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[][] points = new int[n + 1][2])<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n + 1][2])>", "71": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "73": "<(LITERAL,2,new int[n + 1][2])<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,points[n][0])<SUB>9</SUB>>", "77": "<(IDENTIFIER,points,points[n][0] = Xs)<SUB>9</SUB>>", "79": "<(LITERAL,0,points[n][0] = Xs)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,points[n][1] = Ys)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,points[n])<SUB>10</SUB>>", "85": "<(IDENTIFIER,n,points[n][1] = Ys)<SUB>10</SUB>>", "87": "<(IDENTIFIER,Ys,points[n][1] = Ys)<SUB>10</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,line = split(&quot; &quot;))<SUB>14</SUB>>", "101": "<(split,split(&quot; &quot;))<SUB>14</SUB>>", "103": "<(IDENTIFIER,in,readLine())<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,points[i][0] = Integer.parseInt(line[0]))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,points[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,points[i][0] = Integer.parseInt(line[0]))<SUB>15</SUB>>", "111": "<(parseInt,Integer.parseInt(line[0]))<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,line[0])<SUB>15</SUB>>", "115": "<(LITERAL,0,Integer.parseInt(line[0]))<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,points[i][1])<SUB>16</SUB>>", "119": "<(IDENTIFIER,points,points[i][1] = Integer.parseInt(line[1]))<SUB>16</SUB>>", "121": "<(LITERAL,1,points[i][1] = Integer.parseInt(line[1]))<SUB>16</SUB>>", "123": "<(IDENTIFIER,Integer,Integer.parseInt(line[1]))<SUB>16</SUB>>", "125": "<(IDENTIFIER,line,Integer.parseInt(line[1]))<SUB>16</SUB>>", "127": "<(LOCAL,int[][] distances: int[][])<SUB>20</SUB>>", "129": "<(IDENTIFIER,distances,int[][] distances = new int[n + 1][n + 1])<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.addition,n + 1)<SUB>20</SUB>>", "133": "<(LITERAL,1,n + 1)<SUB>20</SUB>>", "135": "<(IDENTIFIER,n,n + 1)<SUB>20</SUB>>", "137": "<(ComputeDistances,ComputeDistances(points, distances, n))<SUB>21</SUB>>", "139": "<(IDENTIFIER,points,ComputeDistances(points, distances, n))<SUB>21</SUB>>", "141": "<(IDENTIFIER,n,ComputeDistances(points, distances, n))<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; n])<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "147": "<(LITERAL,1,1 &lt;&lt; n)<SUB>23</SUB>>", "149": "<(LOCAL,int[] path: int[])<SUB>24</SUB>>", "151": "<(IDENTIFIER,path,int[] path = new int[1 &lt;&lt; n])<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>24</SUB>>", "155": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>24</SUB>>", "157": "<(IDENTIFIER,this,ComputeLowestPath(dp, path, distances, n))<SUB>25</SUB>>", "159": "<(IDENTIFIER,path,ComputeLowestPath(dp, path, distances, n))<SUB>25</SUB>>", "161": "<(IDENTIFIER,n,ComputeLowestPath(dp, path, distances, n))<SUB>25</SUB>>", "163": "<(IDENTIFIER,this,OutputLowestAndPath(dp, path, n))<SUB>26</SUB>>", "165": "<(IDENTIFIER,path,OutputLowestAndPath(dp, path, n))<SUB>26</SUB>>", "167": "<(MODIFIER,PUBLIC)>", "169": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}