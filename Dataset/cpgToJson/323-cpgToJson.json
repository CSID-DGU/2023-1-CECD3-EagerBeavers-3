{"edges": [["17", "18"], ["17", "19"], ["17", "202"], ["17", "203"], ["17", "204"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "37"], ["19", "54"], ["19", "55"], ["19", "61"], ["19", "78"], ["19", "79"], ["19", "85"], ["19", "127"], ["19", "128"], ["19", "131"], ["19", "168"], ["19", "169"], ["19", "172"], ["19", "195"], ["19", "200"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["37", "42"], ["37", "45"], ["37", "47"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["47", "48"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["96", "97"], ["96", "102"], ["96", "116"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["117", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "143"], ["131", "145"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "162"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "157"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["164", "167"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["21", "28"], ["26", "34"], ["31", "39"], ["55", "63"], ["79", "87"], ["128", "133"], ["169", "174"], ["195", "200"], ["200", "204"], ["23", "21"], ["28", "26"], ["33", "31"], ["39", "42"], ["42", "49"], ["42", "58"], ["45", "42"], ["57", "55"], ["63", "66"], ["66", "73"], ["66", "82"], ["69", "66"], ["81", "79"], ["87", "90"], ["90", "98"], ["90", "128"], ["93", "90"], ["133", "139"], ["136", "153"], ["136", "169"], ["143", "139"], ["174", "177"], ["177", "185"], ["177", "197"], ["180", "177"], ["197", "195"], ["34", "33"], ["48", "45"], ["58", "57"], ["72", "69"], ["82", "81"], ["138", "136"], ["147", "164"], ["162", "143"], ["49", "52"], ["52", "48"], ["73", "76"], ["76", "72"], ["97", "104"], ["97", "119"], ["139", "138"], ["149", "147"], ["164", "162"], ["184", "192"], ["184", "180"], ["98", "97"], ["103", "93"], ["150", "159"], ["157", "149"], ["185", "184"], ["190", "180"], ["104", "110"], ["107", "103"], ["118", "93"], ["152", "150"], ["159", "157"], ["192", "190"], ["108", "113"], ["113", "107"], ["119", "124"], ["122", "118"], ["153", "152"], ["110", "108"], ["124", "122"], ["17", "23"], ["18", "204"], ["21", "204"], ["28", "204"], ["26", "204"], ["26", "204"], ["31", "204"], ["31", "204"], ["55", "204"], ["55", "204"], ["79", "204"], ["81", "204"], ["79", "204"], ["79", "204"], ["128", "204"], ["139", "204"], ["138", "204"], ["136", "204"], ["136", "204"], ["169", "204"], ["174", "204"], ["177", "204"], ["177", "204"], ["177", "204"], ["197", "204"], ["197", "204"], ["195", "204"], ["195", "204"], ["200", "204"], ["200", "204"], ["184", "204"], ["184", "204"], ["190", "204"], ["190", "204"], ["180", "204"], ["152", "204"], ["149", "204"], ["149", "204"], ["147", "204"], ["147", "204"], ["164", "204"], ["162", "204"], ["162", "204"], ["143", "204"], ["97", "204"], ["97", "204"], ["118", "204"], ["118", "204"], ["118", "204"], ["103", "204"], ["107", "204"], ["107", "204"], ["103", "204"], ["103", "204"], ["93", "204"], ["72", "204"], ["76", "204"], ["72", "204"], ["72", "204"], ["69", "204"], ["48", "204"], ["52", "204"], ["48", "204"], ["48", "204"], ["45", "204"], ["164", "204"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["57", "55"], ["81", "79"], ["17", "128"], ["17", "169"], ["17", "39"], ["17", "63"], ["17", "87"], ["17", "133"], ["17", "174"], ["17", "195"], ["169", "195"], ["190", "195"], ["128", "195"], ["162", "195"], ["195", "200"], ["17", "200"], ["17", "23"], ["23", "28"], ["17", "28"], ["21", "33"], ["17", "33"], ["39", "42"], ["45", "42"], ["17", "42"], ["21", "42"], ["42", "45"], ["17", "45"], ["52", "48"], ["42", "57"], ["17", "57"], ["63", "66"], ["69", "66"], ["17", "66"], ["42", "66"], ["66", "69"], ["17", "69"], ["76", "72"], ["66", "81"], ["17", "81"], ["87", "90"], ["93", "90"], ["17", "90"], ["66", "90"], ["124", "93"], ["110", "93"], ["17", "93"], ["133", "136"], ["143", "136"], ["17", "136"], ["139", "136"], ["139", "136"], ["159", "143"], ["17", "143"], ["149", "147"], ["149", "147"], ["164", "162"], ["164", "162"], ["164", "162"], ["174", "177"], ["180", "177"], ["17", "177"], ["139", "177"], ["177", "180"], ["17", "180"], ["169", "197"], ["190", "197"], ["17", "197"], ["128", "197"], ["162", "197"], ["21", "34"], ["17", "34"], ["42", "58"], ["17", "58"], ["66", "82"], ["17", "82"], ["139", "138"], ["139", "138"], ["17", "138"], ["28", "52"], ["17", "52"], ["28", "76"], ["52", "76"], ["17", "76"], ["55", "97"], ["72", "97"], ["17", "97"], ["79", "103"], ["31", "103"], ["48", "103"], ["90", "139"], ["17", "139"], ["26", "139"], ["79", "149"], ["17", "164"], ["128", "164"], ["162", "164"], ["147", "164"], ["55", "184"], ["97", "184"], ["72", "184"], ["17", "184"], ["31", "190"], ["48", "190"], ["79", "118"], ["169", "190"], ["17", "190"], ["79", "107"], ["31", "107"], ["48", "107"], ["136", "152"], ["17", "152"], ["139", "152"], ["17", "159"], ["136", "159"], ["136", "153"], ["17", "153"], ["139", "153"], ["90", "110"], ["17", "110"], ["90", "124"], ["17", "124"], ["42", "42"], ["42", "52"], ["42", "48"], ["42", "49"], ["42", "45"], ["66", "73"], ["66", "69"], ["66", "76"], ["66", "66"], ["66", "72"], ["90", "98"], ["90", "97"], ["90", "93"], ["90", "90"], ["136", "136"], ["136", "149"], ["136", "150"], ["136", "162"], ["136", "153"], ["136", "138"], ["136", "152"], ["136", "164"], ["136", "139"], ["136", "157"], ["136", "159"], ["136", "143"], ["136", "147"], ["177", "185"], ["177", "184"], ["177", "180"], ["177", "177"], ["97", "107"], ["97", "113"], ["97", "103"], ["97", "104"], ["97", "119"], ["97", "118"], ["97", "108"], ["97", "122"], ["97", "110"], ["97", "124"], ["184", "192"], ["184", "190"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int k: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,k,int k = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,r,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int[] theorems = new int[n + 1])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "35": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "37": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "41": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "43": "<(IDENTIFIER,i,i &lt;= n)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,theorems[i])<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,theorems[i] = nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,r,nextInt())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] mishka = new int[n + 1])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "59": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "65": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,i &lt;= n)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,mishka[i])<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,mishka[i] = nextInt())<SUB>10</SUB>>", "77": "<(IDENTIFIER,r,nextInt())<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,int[] sums = new int[n + 1])<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "83": "<(IDENTIFIER,n,n + 1)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>13</SUB>>", "89": "<(LITERAL,1,int i = 1)<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,i &lt;= n)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.equals,mishka[i] == 0)<SUB>14</SUB>>", "99": "<(IDENTIFIER,mishka,mishka[i] == 0)<SUB>14</SUB>>", "101": "<(LITERAL,0,mishka[i] == 0)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.assignment,sums[i] = sums[i - 1] + theorems[i])<SUB>15</SUB>>", "105": "<(IDENTIFIER,sums,sums[i] = sums[i - 1] + theorems[i])<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.addition,sums[i - 1] + theorems[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,sums,sums[i - 1] + theorems[i])<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,theorems[i])<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,sums[i - 1] + theorems[i])<SUB>15</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>17</SUB>>", "121": "<(IDENTIFIER,i,sums[i] = sums[i - 1])<SUB>17</SUB>>", "123": "<(IDENTIFIER,sums,sums[i] = sums[i - 1])<SUB>17</SUB>>", "125": "<(IDENTIFIER,i,i - 1)<SUB>17</SUB>>", "127": "<(LOCAL,int max: int)<SUB>20</SUB>>", "129": "<(IDENTIFIER,max,int max = 0)<SUB>20</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n - k + 1); i++),for (int i = 1; Some(i &lt;= n - k + 1); i++))<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>21</SUB>>", "135": "<(LITERAL,1,int i = 1)<SUB>21</SUB>>", "137": "<(IDENTIFIER,i,i &lt;= n - k + 1)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.subtraction,n - k)<SUB>21</SUB>>", "141": "<(IDENTIFIER,k,n - k)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.assignment,int sum = sums[i + k - 1] - sums[i - 1])<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.subtraction,sums[i + k - 1] - sums[i - 1])<SUB>22</SUB>>", "151": "<(IDENTIFIER,sums,sums[i + k - 1] - sums[i - 1])<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.addition,i + k)<SUB>22</SUB>>", "155": "<(IDENTIFIER,k,i + k)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,sums[i - 1])<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>22</SUB>>", "161": "<(LITERAL,1,i - 1)<SUB>22</SUB>>", "163": "<(IDENTIFIER,max,max = Math.max(max, sum))<SUB>23</SUB>>", "165": "<(IDENTIFIER,Math,Math.max(max, sum))<SUB>23</SUB>>", "167": "<(IDENTIFIER,sum,Math.max(max, sum))<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.assignment,int totalSum = 0)<SUB>25</SUB>>", "171": "<(LITERAL,0,int totalSum = 0)<SUB>25</SUB>>", "173": "<(LOCAL,int i: int)<SUB>26</SUB>>", "175": "<(IDENTIFIER,i,int i = 1)<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>26</SUB>>", "179": "<(IDENTIFIER,n,i &lt;= n)<SUB>26</SUB>>", "181": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "183": "<(CONTROL_STRUCTURE,if (mishka[i] == 1),if (mishka[i] == 1))<SUB>27</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,mishka[i])<SUB>27</SUB>>", "187": "<(IDENTIFIER,i,mishka[i] == 1)<SUB>27</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "191": "<(IDENTIFIER,totalSum,totalSum += theorems[i])<SUB>28</SUB>>", "193": "<(IDENTIFIER,theorems,totalSum += theorems[i])<SUB>28</SUB>>", "195": "<(println,println(totalSum + max))<SUB>32</SUB>>", "197": "<(&lt;operator&gt;.addition,totalSum + max)<SUB>32</SUB>>", "199": "<(IDENTIFIER,max,totalSum + max)<SUB>32</SUB>>", "201": "<(IDENTIFIER,pw,close())<SUB>34</SUB>>", "203": "<(MODIFIER,STATIC)>"}}