{"edges": [["21", "23"], ["21", "121"], ["21", "122"], ["21", "123"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "52"], ["23", "53"], ["23", "56"], ["23", "57"], ["23", "60"], ["23", "116"], ["23", "119"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "73"], ["64", "74"], ["64", "79"], ["64", "84"], ["64", "87"], ["64", "90"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["90", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["100", "101"], ["100", "104"], ["100", "110"], ["101", "102"], ["101", "103"], ["104", "105"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "49"], ["49", "53"], ["53", "57"], ["57", "61"], ["116", "119"], ["119", "123"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["61", "69"], ["61", "116"], ["30", "28"], ["37", "35"], ["66", "76"], ["74", "81"], ["79", "84"], ["84", "87"], ["87", "91"], ["68", "66"], ["76", "74"], ["81", "79"], ["91", "95"], ["91", "101"], ["69", "68"], ["95", "116"], ["101", "107"], ["101", "113"], ["105", "61"], ["111", "61"], ["107", "105"], ["113", "111"], ["21", "26"], ["22", "123"], ["24", "123"], ["27", "123"], ["27", "123"], ["31", "123"], ["34", "123"], ["34", "123"], ["39", "123"], ["44", "123"], ["46", "123"], ["44", "123"], ["44", "123"], ["49", "123"], ["53", "123"], ["53", "123"], ["57", "123"], ["61", "123"], ["61", "123"], ["61", "123"], ["69", "123"], ["69", "123"], ["68", "123"], ["66", "123"], ["66", "123"], ["76", "123"], ["74", "123"], ["74", "123"], ["79", "123"], ["79", "123"], ["84", "123"], ["87", "123"], ["91", "123"], ["91", "123"], ["91", "123"], ["101", "123"], ["101", "123"], ["101", "123"], ["113", "123"], ["111", "123"], ["111", "123"], ["107", "123"], ["105", "123"], ["105", "123"], ["95", "123"], ["95", "123"], ["116", "123"], ["116", "123"], ["119", "123"], ["119", "123"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["21", "49"], ["39", "53"], ["21", "53"], ["21", "57"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["34", "116"], ["21", "116"], ["57", "116"], ["95", "116"], ["116", "119"], ["21", "119"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["49", "61"], ["105", "61"], ["21", "61"], ["53", "61"], ["111", "61"], ["68", "66"], ["68", "66"], ["76", "74"], ["76", "74"], ["74", "79"], ["21", "79"], ["21", "84"], ["76", "87"], ["21", "87"], ["79", "84"], ["84", "87"], ["61", "68"], ["21", "68"], ["61", "68"], ["21", "76"], ["39", "76"], ["66", "76"], ["74", "81"], ["21", "81"], ["87", "91"], ["21", "91"], ["44", "91"], ["101", "91"], ["21", "95"], ["76", "95"], ["61", "69"], ["21", "69"], ["61", "69"], ["91", "101"], ["21", "101"], ["91", "101"], ["21", "105"], ["76", "105"], ["113", "111"], ["113", "111"], ["21", "107"], ["76", "107"], ["21", "113"], ["76", "113"], ["61", "68"], ["61", "66"], ["61", "81"], ["61", "84"], ["61", "69"], ["61", "74"], ["61", "76"], ["61", "87"], ["61", "91"], ["61", "79"], ["91", "61"], ["91", "95"], ["91", "101"], ["101", "107"], ["101", "113"], ["101", "105"], ["101", "111"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int k: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int lo = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int lo = 0)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int hi = n)<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,int hi = n)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>9</SUB>>", "59": "<(LITERAL,0,int ans = 0)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>10</SUB>>", "63": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>10</SUB>>", "65": "<(LOCAL,int mid: int)<SUB>11</SUB>>", "67": "<(IDENTIFIER,mid,int mid = lo + hi &gt;&gt; 1)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.addition,lo + hi)<SUB>11</SUB>>", "71": "<(IDENTIFIER,hi,lo + hi)<SUB>11</SUB>>", "73": "<(LOCAL,long rem: long)<SUB>12</SUB>>", "75": "<(IDENTIFIER,rem,long rem = n - mid)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,n - mid)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignmentMultiplication,rem *= rem + 1)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.addition,rem + 1)<SUB>13</SUB>>", "83": "<(LITERAL,1,rem + 1)<SUB>13</SUB>>", "85": "<(IDENTIFIER,rem,rem /= 2)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignmentMinus,rem -= mid)<SUB>15</SUB>>", "89": "<(IDENTIFIER,mid,rem -= mid)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.equals,rem == k)<SUB>17</SUB>>", "93": "<(IDENTIFIER,k,rem == k)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.assignment,ans = mid)<SUB>18</SUB>>", "97": "<(IDENTIFIER,mid,ans = mid)<SUB>18</SUB>>", "99": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.greaterThan,rem &gt; k)<SUB>21</SUB>>", "103": "<(IDENTIFIER,k,rem &gt; k)<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.assignment,lo = mid + 1)<SUB>22</SUB>>", "107": "<(&lt;operator&gt;.addition,mid + 1)<SUB>22</SUB>>", "109": "<(LITERAL,1,mid + 1)<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.assignment,hi = mid - 1)<SUB>24</SUB>>", "113": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>24</SUB>>", "115": "<(LITERAL,1,mid - 1)<SUB>24</SUB>>", "117": "<(IDENTIFIER,pw,println(ans))<SUB>26</SUB>>", "119": "<(flush,flush())<SUB>27</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}