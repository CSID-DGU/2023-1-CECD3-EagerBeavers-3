{"edges": [["17", "19"], ["17", "247"], ["17", "248"], ["17", "249"], ["19", "20"], ["19", "21"], ["19", "28"], ["19", "29"], ["19", "36"], ["19", "37"], ["19", "44"], ["19", "45"], ["19", "49"], ["19", "56"], ["19", "76"], ["19", "77"], ["19", "81"], ["19", "88"], ["19", "108"], ["19", "111"], ["19", "114"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "27"], ["24", "25"], ["25", "26"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "55"], ["52", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["85", "86"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "124"], ["114", "130"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["131", "132"], ["131", "141"], ["131", "187"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "162"], ["141", "182"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["162", "167"], ["162", "172"], ["162", "174"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "209"], ["188", "229"], ["188", "242"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["193", "198"], ["193", "201"], ["193", "203"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["201", "202"], ["203", "204"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["209", "214"], ["209", "219"], ["209", "221"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["219", "220"], ["221", "222"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "237"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["21", "33"], ["29", "41"], ["37", "47"], ["45", "53"], ["49", "58"], ["77", "85"], ["81", "90"], ["108", "111"], ["111", "116"], ["23", "21"], ["31", "29"], ["39", "37"], ["47", "45"], ["51", "49"], ["58", "61"], ["61", "68"], ["61", "79"], ["64", "61"], ["79", "77"], ["83", "81"], ["90", "93"], ["93", "100"], ["93", "108"], ["96", "93"], ["115", "128"], ["115", "133"], ["24", "23"], ["33", "31"], ["41", "39"], ["52", "51"], ["67", "64"], ["84", "83"], ["99", "96"], ["116", "121"], ["119", "115"], ["125", "249"], ["25", "24"], ["53", "52"], ["68", "73"], ["71", "67"], ["85", "84"], ["100", "105"], ["103", "99"], ["121", "119"], ["126", "125"], ["132", "143"], ["132", "190"], ["73", "71"], ["105", "103"], ["128", "126"], ["133", "138"], ["136", "132"], ["143", "148"], ["182", "249"], ["138", "136"], ["148", "151"], ["151", "159"], ["151", "164"], ["154", "151"], ["164", "169"], ["167", "179"], ["167", "185"], ["172", "169"], ["183", "182"], ["190", "195"], ["229", "245"], ["242", "249"], ["157", "154"], ["169", "167"], ["175", "172"], ["185", "183"], ["195", "198"], ["198", "206"], ["198", "211"], ["201", "198"], ["211", "216"], ["214", "226"], ["214", "234"], ["219", "216"], ["231", "229"], ["243", "242"], ["159", "157"], ["177", "175"], ["204", "201"], ["216", "214"], ["222", "219"], ["232", "239"], ["237", "231"], ["245", "243"], ["179", "177"], ["206", "204"], ["224", "222"], ["234", "232"], ["239", "237"], ["226", "224"], ["17", "25"], ["18", "249"], ["21", "249"], ["31", "249"], ["29", "249"], ["29", "249"], ["39", "249"], ["39", "249"], ["37", "249"], ["37", "249"], ["45", "249"], ["45", "249"], ["61", "249"], ["77", "249"], ["77", "249"], ["81", "249"], ["85", "249"], ["84", "249"], ["83", "249"], ["81", "249"], ["81", "249"], ["90", "249"], ["93", "249"], ["93", "249"], ["93", "249"], ["108", "249"], ["108", "249"], ["111", "249"], ["111", "249"], ["111", "249"], ["115", "249"], ["121", "249"], ["115", "249"], ["115", "249"], ["125", "249"], ["99", "249"], ["103", "249"], ["103", "249"], ["99", "249"], ["99", "249"], ["96", "249"], ["67", "249"], ["71", "249"], ["71", "249"], ["67", "249"], ["67", "249"], ["64", "249"], ["17", "18"], ["23", "21"], ["23", "21"], ["31", "29"], ["31", "29"], ["39", "37"], ["39", "37"], ["47", "45"], ["51", "49"], ["51", "49"], ["79", "77"], ["83", "81"], ["83", "81"], ["17", "58"], ["17", "90"], ["17", "108"], ["45", "108"], ["67", "108"], ["108", "111"], ["17", "111"], ["77", "111"], ["99", "111"], ["24", "23"], ["17", "23"], ["17", "31"], ["21", "31"], ["31", "39"], ["17", "39"], ["21", "39"], ["29", "47"], ["17", "47"], ["52", "51"], ["17", "51"], ["58", "61"], ["64", "61"], ["17", "61"], ["47", "61"], ["61", "64"], ["17", "64"], ["71", "67"], ["71", "67"], ["37", "79"], ["17", "79"], ["84", "83"], ["17", "83"], ["90", "93"], ["96", "93"], ["17", "93"], ["79", "93"], ["93", "96"], ["17", "96"], ["103", "99"], ["103", "99"], ["111", "115"], ["108", "115"], ["25", "24"], ["53", "52"], ["85", "84"], ["17", "125"], ["17", "25"], ["25", "53"], ["17", "53"], ["39", "71"], ["17", "71"], ["49", "71"], ["53", "85"], ["17", "85"], ["39", "103"], ["71", "103"], ["17", "103"], ["81", "103"], ["71", "103"], ["61", "121"], ["17", "121"], ["111", "132"], ["115", "132"], ["108", "132"], ["115", "132"], ["17", "143"], ["17", "148"], ["17", "164"], ["143", "182"], ["175", "182"], ["157", "182"], ["17", "182"], ["17", "190"], ["231", "229"], ["231", "229"], ["121", "138"], ["17", "138"], ["148", "151"], ["154", "151"], ["17", "151"], ["93", "151"], ["151", "154"], ["17", "154"], ["111", "157"], ["99", "157"], ["164", "167"], ["172", "167"], ["17", "167"], ["169", "167"], ["169", "167"], ["167", "172"], ["17", "172"], ["177", "175"], ["177", "175"], ["17", "195"], ["17", "211"], ["190", "229"], ["222", "229"], ["204", "229"], ["17", "229"], ["229", "242"], ["17", "242"], ["143", "157"], ["17", "157"], ["138", "169"], ["17", "169"], ["143", "175"], ["157", "175"], ["17", "175"], ["195", "198"], ["201", "198"], ["17", "198"], ["93", "198"], ["198", "201"], ["17", "201"], ["111", "204"], ["99", "204"], ["211", "214"], ["219", "214"], ["17", "214"], ["216", "214"], ["216", "214"], ["214", "219"], ["17", "219"], ["224", "222"], ["224", "222"], ["108", "231"], ["132", "231"], ["151", "177"], ["17", "177"], ["108", "177"], ["67", "177"], ["190", "204"], ["17", "204"], ["138", "216"], ["17", "216"], ["190", "222"], ["204", "222"], ["17", "222"], ["198", "224"], ["17", "224"], ["108", "224"], ["67", "224"], ["216", "234"], ["17", "234"], ["234", "239"], ["17", "239"], ["61", "68"], ["61", "73"], ["61", "64"], ["61", "67"], ["61", "61"], ["61", "71"], ["93", "96"], ["93", "103"], ["93", "93"], ["93", "100"], ["93", "99"], ["93", "105"], ["115", "136"], ["115", "128"], ["115", "132"], ["115", "138"], ["115", "126"], ["115", "125"], ["115", "133"], ["132", "214"], ["132", "167"], ["132", "169"], ["132", "185"], ["132", "232"], ["132", "151"], ["132", "198"], ["132", "243"], ["132", "245"], ["132", "195"], ["132", "148"], ["132", "242"], ["132", "190"], ["132", "231"], ["132", "182"], ["132", "164"], ["132", "239"], ["132", "183"], ["132", "237"], ["132", "143"], ["132", "234"], ["132", "229"], ["132", "211"], ["132", "216"], ["151", "154"], ["151", "151"], ["151", "157"], ["151", "159"], ["167", "167"], ["167", "169"], ["167", "179"], ["167", "177"], ["167", "175"], ["167", "172"], ["198", "198"], ["198", "204"], ["198", "206"], ["198", "201"], ["214", "214"], ["214", "226"], ["214", "224"], ["214", "216"], ["214", "222"], ["214", "219"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,String[] s = split(&quot; &quot;))<SUB>2</SUB>>", "23": "<(split,split(&quot; &quot;))<SUB>2</SUB>>", "25": "<(readLine,readLine())<SUB>2</SUB>>", "27": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,int n = Integer.parseInt(s[0]))<SUB>3</SUB>>", "31": "<(parseInt,Integer.parseInt(s[0]))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>3</SUB>>", "35": "<(LITERAL,0,Integer.parseInt(s[0]))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int m = Integer.parseInt(s[1]))<SUB>4</SUB>>", "39": "<(parseInt,Integer.parseInt(s[1]))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,s[1])<SUB>4</SUB>>", "43": "<(LITERAL,1,Integer.parseInt(s[1]))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,long[] b = new long[n])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.alloc,new long[n])>", "49": "<(&lt;operator&gt;.assignment,s = split(&quot; &quot;))<SUB>6</SUB>>", "51": "<(split,split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(readLine,readLine())<SUB>6</SUB>>", "55": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "57": "<(LOCAL,int i: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,b[i] = Integer.parseInt(s[i]))<SUB>8</SUB>>", "69": "<(IDENTIFIER,b,b[i] = Integer.parseInt(s[i]))<SUB>8</SUB>>", "71": "<(parseInt,Integer.parseInt(s[i]))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,Integer.parseInt(s[i]))<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,long[] g = new long[m])<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.alloc,new long[m])>", "81": "<(&lt;operator&gt;.assignment,s = split(&quot; &quot;))<SUB>11</SUB>>", "83": "<(split,split(&quot; &quot;))<SUB>11</SUB>>", "85": "<(readLine,readLine())<SUB>11</SUB>>", "87": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>11</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>12</SUB>>", "95": "<(IDENTIFIER,m,i &lt; m)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,g[i] = Integer.parseInt(s[i]))<SUB>13</SUB>>", "101": "<(IDENTIFIER,g,g[i] = Integer.parseInt(s[i]))<SUB>13</SUB>>", "103": "<(parseInt,Integer.parseInt(s[i]))<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>13</SUB>>", "107": "<(IDENTIFIER,i,Integer.parseInt(s[i]))<SUB>13</SUB>>", "109": "<(IDENTIFIER,Arrays,sort(b))<SUB>15</SUB>>", "111": "<(sort,sort(g))<SUB>16</SUB>>", "113": "<(IDENTIFIER,g,sort(g))<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.lessThan,g[0] &lt; b[n - 1])<SUB>17</SUB>>", "117": "<(IDENTIFIER,g,g[0] &lt; b[n - 1])<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,b[n - 1])<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "123": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "125": "<(println,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "129": "<(LITERAL,&quot;-1&quot;,System.out.println(&quot;-1&quot;))<SUB>18</SUB>>", "131": "<(CONTROL_STRUCTURE,if (g[0] == b[n - 1]),if (g[0] == b[n - 1]))<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,g[0])<SUB>20</SUB>>", "135": "<(LITERAL,0,g[0] == b[n - 1])<SUB>20</SUB>>", "137": "<(IDENTIFIER,b,g[0] == b[n - 1])<SUB>20</SUB>>", "139": "<(IDENTIFIER,n,n - 1)<SUB>20</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>21</SUB>>", "145": "<(LITERAL,0,long ans = 0)<SUB>21</SUB>>", "147": "<(LOCAL,int i: int)<SUB>22</SUB>>", "149": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>22</SUB>>", "153": "<(IDENTIFIER,m,i &lt; m)<SUB>22</SUB>>", "155": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.assignmentPlus,ans += g[i])<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>23</SUB>>", "161": "<(IDENTIFIER,i,ans += g[i])<SUB>23</SUB>>", "163": "<(LOCAL,int i: int)<SUB>25</SUB>>", "165": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>25</SUB>>", "171": "<(LITERAL,1,n - 1)<SUB>25</SUB>>", "173": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.assignmentPlus,ans += (m) * b[i])<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.multiplication,(m) * b[i])<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>26</SUB>>", "181": "<(IDENTIFIER,i,(m) * b[i])<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "185": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "187": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "189": "<(LOCAL,long ans: long)<SUB>32</SUB>>", "191": "<(IDENTIFIER,ans,long ans = 0)<SUB>32</SUB>>", "193": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>33</SUB>>", "195": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "197": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "199": "<(IDENTIFIER,i,i &lt; m)<SUB>33</SUB>>", "201": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "205": "<(IDENTIFIER,ans,ans += g[i])<SUB>34</SUB>>", "207": "<(IDENTIFIER,g,ans += g[i])<SUB>34</SUB>>", "209": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>36</SUB>>", "211": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>36</SUB>>", "213": "<(LITERAL,0,int i = 0)<SUB>36</SUB>>", "215": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>36</SUB>>", "217": "<(IDENTIFIER,n,n - 1)<SUB>36</SUB>>", "219": "<(&lt;operator&gt;.postIncrement,i++)<SUB>36</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "223": "<(IDENTIFIER,ans,ans += (m) * b[i])<SUB>37</SUB>>", "225": "<(IDENTIFIER,m,(m) * b[i])<SUB>37</SUB>>", "227": "<(IDENTIFIER,b,(m) * b[i])<SUB>37</SUB>>", "229": "<(&lt;operator&gt;.assignmentPlus,ans += b[n - 1] - b[n - 2])<SUB>39</SUB>>", "231": "<(&lt;operator&gt;.subtraction,b[n - 1] - b[n - 2])<SUB>39</SUB>>", "233": "<(IDENTIFIER,b,b[n - 1] - b[n - 2])<SUB>39</SUB>>", "235": "<(IDENTIFIER,n,n - 1)<SUB>39</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,b[n - 2])<SUB>39</SUB>>", "239": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>39</SUB>>", "241": "<(LITERAL,2,n - 2)<SUB>39</SUB>>", "243": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "245": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "247": "<(MODIFIER,PUBLIC)>", "249": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}