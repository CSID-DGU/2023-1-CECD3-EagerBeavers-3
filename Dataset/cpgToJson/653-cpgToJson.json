{"edges": [["19", "20"], ["19", "21"], ["19", "120"], ["19", "121"], ["19", "122"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "46"], ["21", "47"], ["21", "51"], ["21", "56"], ["21", "57"], ["21", "60"], ["21", "90"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "86"], ["61", "62"], ["61", "85"], ["62", "63"], ["62", "78"], ["63", "64"], ["63", "71"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "119"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["22", "29"], ["27", "33"], ["30", "37"], ["35", "42"], ["40", "44"], ["44", "49"], ["47", "53"], ["51", "57"], ["57", "67"], ["24", "22"], ["29", "27"], ["31", "30"], ["37", "35"], ["42", "40"], ["49", "47"], ["53", "51"], ["61", "87"], ["61", "92"], ["92", "95"], ["95", "122"], ["95", "106"], ["98", "95"], ["26", "24"], ["33", "31"], ["62", "61"], ["87", "92"], ["63", "81"], ["78", "62"], ["102", "115"], ["102", "98"], ["64", "74"], ["71", "63"], ["79", "78"], ["103", "102"], ["112", "122"], ["65", "64"], ["72", "71"], ["81", "79"], ["104", "103"], ["113", "116"], ["116", "112"], ["67", "65"], ["74", "72"], ["106", "104"], ["115", "113"], ["19", "26"], ["20", "122"], ["22", "122"], ["22", "122"], ["22", "122"], ["27", "122"], ["30", "122"], ["30", "122"], ["35", "122"], ["35", "122"], ["40", "122"], ["40", "122"], ["49", "122"], ["47", "122"], ["47", "122"], ["51", "122"], ["53", "122"], ["51", "122"], ["51", "122"], ["57", "122"], ["57", "122"], ["65", "122"], ["64", "122"], ["63", "122"], ["72", "122"], ["71", "122"], ["63", "122"], ["62", "122"], ["79", "122"], ["79", "122"], ["78", "122"], ["62", "122"], ["61", "122"], ["61", "122"], ["87", "122"], ["87", "122"], ["92", "122"], ["95", "122"], ["95", "122"], ["95", "122"], ["104", "122"], ["104", "122"], ["103", "122"], ["102", "122"], ["102", "122"], ["102", "122"], ["98", "122"], ["19", "20"], ["19", "27"], ["37", "35"], ["42", "40"], ["49", "47"], ["53", "51"], ["53", "51"], ["19", "57"], ["19", "22"], ["27", "30"], ["19", "30"], ["37", "44"], ["19", "44"], ["19", "92"], ["30", "37"], ["19", "37"], ["35", "42"], ["19", "42"], ["44", "49"], ["19", "49"], ["47", "53"], ["19", "53"], ["64", "61"], ["64", "61"], ["71", "61"], ["71", "61"], ["78", "61"], ["78", "61"], ["19", "61"], ["19", "87"], ["92", "95"], ["98", "95"], ["19", "95"], ["42", "95"], ["95", "98"], ["19", "98"], ["64", "62"], ["64", "62"], ["71", "62"], ["71", "62"], ["78", "62"], ["78", "62"], ["64", "63"], ["64", "63"], ["71", "63"], ["71", "63"], ["79", "78"], ["79", "78"], ["19", "78"], ["103", "102"], ["103", "102"], ["57", "102"], ["87", "102"], ["19", "102"], ["65", "64"], ["65", "64"], ["19", "64"], ["72", "71"], ["72", "71"], ["19", "71"], ["72", "79"], ["19", "79"], ["51", "79"], ["104", "103"], ["104", "103"], ["19", "103"], ["95", "112"], ["19", "112"], ["19", "65"], ["51", "65"], ["65", "72"], ["19", "72"], ["51", "72"], ["79", "104"], ["19", "104"], ["51", "104"], ["95", "116"], ["19", "116"], ["61", "87"], ["95", "102"], ["95", "103"], ["95", "104"], ["95", "106"], ["102", "115"], ["102", "98"], ["102", "113"], ["102", "116"], ["102", "95"], ["102", "112"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,Locale,setDefault(Locale.US))<SUB>2</SUB>>", "25": "<(IDENTIFIER,Locale,setDefault(Locale.US))<SUB>2</SUB>>", "4": "<(LOCAL,Scanner sc: ANY)<SUB>3</SUB>>", "28": "<(IDENTIFIER,sc,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "30": "<(&lt;init&gt;,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,String[] number: java.lang.String[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,number,String[] number = new String[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new String[n])<SUB>5</SUB>>", "45": "<(IDENTIFIER,sc,nextLine())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,String l = nextLine())<SUB>7</SUB>>", "49": "<(nextLine,nextLine())<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,number = l.split(&quot; &quot;))<SUB>8</SUB>>", "53": "<(split,l.split(&quot; &quot;))<SUB>8</SUB>>", "55": "<(LITERAL,&quot; &quot;,l.split(&quot; &quot;))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int oe = 1)<SUB>9</SUB>>", "59": "<(LITERAL,1,int oe = 1)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.greaterThan,(Integer.valueOf(number[0]) % 2 + Integer.valueOf(number[1]) % 2 + Integer.valueOf(number[2]) % 2) &gt; 1)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.addition,Integer.valueOf(number[0]) % 2 + Integer.valueOf(number[1]) % 2)<SUB>10</SUB>>", "65": "<(valueOf,Integer.valueOf(number[0]))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,number[0])<SUB>10</SUB>>", "69": "<(LITERAL,0,Integer.valueOf(number[0]))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.modulo,Integer.valueOf(number[1]) % 2)<SUB>11</SUB>>", "73": "<(IDENTIFIER,Integer,Integer.valueOf(number[1]))<SUB>11</SUB>>", "75": "<(IDENTIFIER,number,Integer.valueOf(number[1]))<SUB>11</SUB>>", "77": "<(LITERAL,2,Integer.valueOf(number[1]) % 2)<SUB>11</SUB>>", "79": "<(valueOf,Integer.valueOf(number[2]))<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,number[2])<SUB>12</SUB>>", "83": "<(LITERAL,2,Integer.valueOf(number[2]))<SUB>12</SUB>>", "85": "<(LITERAL,1,(Integer.valueOf(number[0]) % 2 + Integer.valueOf(number[1]) % 2 + Integer.valueOf(number[2]) % 2) &gt; 1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.assignment,oe = 0)<SUB>13</SUB>>", "89": "<(LITERAL,0,oe = 0)<SUB>13</SUB>>", "91": "<(LOCAL,int i: int)<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,if ((Integer.valueOf(number[i]) % 2) == oe),if ((Integer.valueOf(number[i]) % 2) == oe))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.modulo,Integer.valueOf(number[i]) % 2)<SUB>16</SUB>>", "105": "<(IDENTIFIER,Integer,Integer.valueOf(number[i]))<SUB>16</SUB>>", "107": "<(IDENTIFIER,number,Integer.valueOf(number[i]))<SUB>16</SUB>>", "109": "<(LITERAL,2,Integer.valueOf(number[i]) % 2)<SUB>16</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "115": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "117": "<(IDENTIFIER,i,i + 1)<SUB>17</SUB>>", "119": "<(CONTROL_STRUCTURE,break;,break;)<SUB>18</SUB>>", "121": "<(MODIFIER,STATIC)>"}}