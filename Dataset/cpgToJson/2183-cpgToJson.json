{"edges": [["21", "22"], ["21", "23"], ["21", "158"], ["21", "159"], ["21", "160"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "75"], ["23", "152"], ["23", "154"], ["23", "156"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "91"], ["85", "145"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "114"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["154", "155"], ["156", "157"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "56"], ["54", "60"], ["152", "154"], ["154", "156"], ["156", "160"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["60", "63"], ["63", "70"], ["63", "77"], ["66", "63"], ["77", "80"], ["80", "87"], ["80", "152"], ["83", "80"], ["30", "28"], ["37", "35"], ["69", "66"], ["86", "93"], ["145", "83"], ["70", "73"], ["73", "69"], ["87", "86"], ["93", "96"], ["96", "108"], ["96", "148"], ["99", "96"], ["147", "145"], ["103", "117"], ["148", "147"], ["105", "103"], ["115", "122"], ["115", "99"], ["107", "105"], ["117", "115"], ["121", "99"], ["108", "111"], ["111", "107"], ["122", "127"], ["125", "121"], ["127", "131"], ["130", "125"], ["131", "138"], ["134", "130"], ["136", "134"], ["137", "142"], ["142", "136"], ["138", "137"], ["21", "26"], ["22", "160"], ["24", "160"], ["27", "160"], ["27", "160"], ["31", "160"], ["34", "160"], ["34", "160"], ["39", "160"], ["44", "160"], ["46", "160"], ["44", "160"], ["44", "160"], ["49", "160"], ["49", "160"], ["49", "160"], ["54", "160"], ["54", "160"], ["54", "160"], ["77", "160"], ["80", "160"], ["80", "160"], ["80", "160"], ["152", "160"], ["154", "160"], ["156", "160"], ["156", "160"], ["86", "160"], ["86", "160"], ["93", "160"], ["96", "160"], ["96", "160"], ["147", "160"], ["145", "160"], ["145", "160"], ["83", "160"], ["105", "160"], ["107", "160"], ["107", "160"], ["105", "160"], ["103", "160"], ["103", "160"], ["115", "160"], ["117", "160"], ["115", "160"], ["115", "160"], ["125", "160"], ["130", "160"], ["137", "160"], ["137", "160"], ["136", "160"], ["142", "160"], ["136", "160"], ["134", "160"], ["130", "160"], ["125", "160"], ["121", "160"], ["121", "160"], ["99", "160"], ["69", "160"], ["73", "160"], ["69", "160"], ["69", "160"], ["66", "160"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "60"], ["21", "77"], ["34", "152"], ["145", "152"], ["21", "152"], ["152", "154"], ["21", "154"], ["154", "156"], ["21", "156"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["51", "56"], ["21", "56"], ["60", "63"], ["66", "63"], ["21", "63"], ["56", "63"], ["63", "66"], ["21", "66"], ["73", "69"], ["77", "80"], ["83", "80"], ["21", "80"], ["63", "80"], ["96", "83"], ["21", "83"], ["44", "86"], ["117", "86"], ["137", "86"], ["21", "86"], ["21", "93"], ["34", "145"], ["21", "145"], ["49", "145"], ["86", "145"], ["121", "145"], ["46", "73"], ["21", "73"], ["93", "96"], ["99", "96"], ["21", "96"], ["80", "96"], ["96", "99"], ["21", "99"], ["105", "103"], ["105", "103"], ["49", "147"], ["86", "147"], ["121", "147"], ["21", "147"], ["125", "105"], ["21", "105"], ["107", "105"], ["107", "105"], ["103", "115"], ["21", "115"], ["117", "115"], ["117", "115"], ["125", "121"], ["125", "121"], ["125", "121"], ["54", "107"], ["69", "107"], ["21", "117"], ["137", "117"], ["44", "117"], ["134", "125"], ["21", "125"], ["49", "125"], ["86", "125"], ["121", "125"], ["134", "125"], ["49", "130"], ["134", "130"], ["134", "130"], ["105", "134"], ["21", "134"], ["136", "134"], ["136", "134"], ["137", "136"], ["137", "136"], ["142", "136"], ["138", "137"], ["138", "137"], ["21", "137"], ["115", "142"], ["21", "142"], ["21", "138"], ["117", "138"], ["63", "73"], ["63", "66"], ["63", "69"], ["63", "70"], ["63", "63"], ["80", "96"], ["80", "145"], ["80", "87"], ["80", "93"], ["80", "148"], ["80", "80"], ["80", "83"], ["80", "147"], ["80", "86"], ["96", "107"], ["96", "115"], ["96", "96"], ["96", "99"], ["96", "103"], ["96", "105"], ["96", "117"], ["96", "108"], ["96", "111"], ["115", "136"], ["115", "122"], ["115", "131"], ["115", "142"], ["115", "121"], ["115", "134"], ["115", "138"], ["115", "137"], ["115", "130"], ["115", "127"], ["115", "125"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int r: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,r,int r = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,double[] ans = new double[n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new double[n])>", "53": "<(LOCAL,int[] x: int[])<SUB>10</SUB>>", "55": "<(IDENTIFIER,x,int[] x = new int[n])<SUB>10</SUB>>", "57": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "59": "<(LOCAL,int i: int)<SUB>12</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "65": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.assignment,x[i] = nextInt())<SUB>13</SUB>>", "71": "<(IDENTIFIER,x,x[i] = nextInt())<SUB>13</SUB>>", "73": "<(nextInt,nextInt())<SUB>13</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "81": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>17</SUB>>", "89": "<(IDENTIFIER,i,ans[i] = r)<SUB>17</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "95": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "97": "<(IDENTIFIER,j,j &lt; i)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,int d = Math.abs(x[i] - x[j]))<SUB>19</SUB>>", "105": "<(abs,Math.abs(x[i] - x[j]))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>19</SUB>>", "109": "<(IDENTIFIER,x,x[i] - x[j])<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>19</SUB>>", "113": "<(IDENTIFIER,j,x[i] - x[j])<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.lessEqualsThan,d &lt;= 2 * r)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>20</SUB>>", "119": "<(IDENTIFIER,r,2 * r)<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.assignment,ans[i] = Math.max(ans[i], ans[j] + Math.sqrt(4 * r * r - d * d)))<SUB>21</SUB>>", "123": "<(IDENTIFIER,ans,ans[i] = Math.max(ans[i], ans[j] + Math.sqrt(4 * r * r - d * d)))<SUB>21</SUB>>", "125": "<(max,Math.max(ans[i], ans[j] + Math.sqrt(4 * r * r - d * d)))<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>21</SUB>>", "129": "<(IDENTIFIER,i,Math.max(ans[i], ans[j] + Math.sqrt(4 * r * r - d * d)))<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,ans[j])<SUB>21</SUB>>", "133": "<(IDENTIFIER,j,ans[j] + Math.sqrt(4 * r * r - d * d))<SUB>21</SUB>>", "135": "<(IDENTIFIER,Math,Math.sqrt(4 * r * r - d * d))<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.multiplication,4 * r * r)<SUB>21</SUB>>", "139": "<(LITERAL,4,4 * r)<SUB>21</SUB>>", "141": "<(IDENTIFIER,r,4 * r * r)<SUB>21</SUB>>", "143": "<(IDENTIFIER,d,d * d)<SUB>21</SUB>>", "145": "<(print,print(ans[i] + &quot; &quot;))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.addition,ans[i] + &quot; &quot;)<SUB>25</SUB>>", "149": "<(IDENTIFIER,ans,ans[i] + &quot; &quot;)<SUB>25</SUB>>", "151": "<(LITERAL,&quot; &quot;,ans[i] + &quot; &quot;)<SUB>25</SUB>>", "153": "<(IDENTIFIER,out,println())<SUB>27</SUB>>", "155": "<(IDENTIFIER,out,flush())<SUB>29</SUB>>", "157": "<(IDENTIFIER,out,close())<SUB>30</SUB>>", "159": "<(MODIFIER,STATIC)>"}}