{"edges": [["19", "20"], ["19", "21"], ["19", "114"], ["19", "115"], ["19", "116"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "52"], ["21", "55"], ["21", "56"], ["21", "60"], ["21", "61"], ["21", "64"], ["21", "109"], ["21", "112"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "79"], ["75", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "82"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "89"], ["82", "92"], ["82", "94"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "104"], ["95", "96"], ["95", "103"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["112", "113"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["52", "58"], ["56", "61"], ["61", "66"], ["109", "112"], ["112", "116"], ["24", "22"], ["29", "27"], ["34", "32"], ["38", "41"], ["41", "47"], ["41", "52"], ["44", "41"], ["46", "44"], ["58", "56"], ["66", "69"], ["69", "76"], ["69", "109"], ["72", "69"], ["47", "50"], ["50", "46"], ["75", "80"], ["75", "72"], ["76", "75"], ["80", "86"], ["84", "89"], ["89", "97"], ["89", "72"], ["92", "89"], ["86", "84"], ["95", "105"], ["95", "92"], ["104", "92"], ["96", "95"], ["105", "104"], ["97", "100"], ["100", "96"], ["19", "24"], ["20", "116"], ["22", "116"], ["25", "116"], ["29", "116"], ["27", "116"], ["27", "116"], ["32", "116"], ["32", "116"], ["52", "116"], ["52", "116"], ["56", "116"], ["56", "116"], ["56", "116"], ["61", "116"], ["66", "116"], ["69", "116"], ["69", "116"], ["69", "116"], ["109", "116"], ["109", "116"], ["112", "116"], ["112", "116"], ["75", "116"], ["75", "116"], ["80", "116"], ["84", "116"], ["84", "116"], ["89", "116"], ["89", "116"], ["72", "116"], ["96", "116"], ["96", "116"], ["95", "116"], ["95", "116"], ["104", "116"], ["104", "116"], ["92", "116"], ["46", "116"], ["50", "116"], ["46", "116"], ["46", "116"], ["44", "116"], ["52", "116"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["58", "56"], ["19", "61"], ["22", "25"], ["19", "25"], ["19", "38"], ["50", "46"], ["19", "52"], ["32", "52"], ["46", "52"], ["19", "66"], ["19", "109"], ["61", "109"], ["80", "109"], ["109", "112"], ["19", "112"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["38", "41"], ["44", "41"], ["19", "41"], ["34", "41"], ["41", "44"], ["19", "44"], ["41", "58"], ["19", "58"], ["66", "69"], ["72", "69"], ["19", "69"], ["58", "69"], ["89", "69"], ["69", "72"], ["19", "72"], ["29", "50"], ["19", "50"], ["56", "75"], ["61", "80"], ["19", "80"], ["69", "84"], ["19", "84"], ["84", "89"], ["92", "89"], ["19", "89"], ["69", "89"], ["89", "92"], ["19", "92"], ["19", "104"], ["69", "86"], ["19", "86"], ["96", "95"], ["96", "95"], ["19", "95"], ["52", "96"], ["46", "96"], ["41", "47"], ["41", "46"], ["41", "41"], ["41", "50"], ["41", "44"], ["69", "75"], ["69", "72"], ["69", "69"], ["69", "76"], ["75", "80"], ["75", "89"], ["75", "84"], ["75", "86"], ["89", "96"], ["89", "89"], ["89", "100"], ["89", "95"], ["89", "92"], ["89", "97"], ["95", "105"], ["95", "104"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,Integer[] a: java.lang.Integer[])<SUB>4</SUB>>", "33": "<(IDENTIFIER,a,Integer[] a = new Integer[n])<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,new Integer[n])<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,Arrays,sort(a))<SUB>7</SUB>>", "55": "<(LOCAL,boolean[] b: boolean[])<SUB>8</SUB>>", "57": "<(IDENTIFIER,b,boolean[] b = new boolean[n])<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>9</SUB>>", "63": "<(LITERAL,0,int ans = 0)<SUB>9</SUB>>", "65": "<(LOCAL,int i: int)<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.logicalNot,!b[i])<SUB>11</SUB>>", "77": "<(IDENTIFIER,b,!b[i])<SUB>11</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "81": "<(IDENTIFIER,ans,ans++)<SUB>12</SUB>>", "83": "<(LOCAL,int j: int)<SUB>13</SUB>>", "85": "<(IDENTIFIER,j,int j = i + 1)<SUB>13</SUB>>", "87": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>13</SUB>>", "91": "<(IDENTIFIER,n,j &lt; n)<SUB>13</SUB>>", "93": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>14</SUB>>", "99": "<(IDENTIFIER,j,a[j] % a[i])<SUB>14</SUB>>", "101": "<(IDENTIFIER,a,a[j] % a[i])<SUB>14</SUB>>", "103": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,b[j])<SUB>15</SUB>>", "107": "<(IDENTIFIER,j,b[j] = true)<SUB>15</SUB>>", "109": "<(println,println(ans))<SUB>17</SUB>>", "111": "<(IDENTIFIER,ans,println(ans))<SUB>17</SUB>>", "113": "<(IDENTIFIER,out,close())<SUB>18</SUB>>", "115": "<(MODIFIER,STATIC)>"}}