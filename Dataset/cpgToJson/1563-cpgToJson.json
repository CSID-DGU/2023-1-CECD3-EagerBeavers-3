{"edges": [["23", "25"], ["23", "165"], ["23", "166"], ["23", "167"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "53"], ["25", "54"], ["25", "8"], ["25", "60"], ["25", "63"], ["25", "66"], ["25", "67"], ["25", "71"], ["25", "90"], ["25", "91"], ["25", "94"], ["25", "97"], ["25", "98"], ["25", "102"], ["25", "160"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["63", "7"], ["63", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "121"], ["112", "122"], ["112", "127"], ["112", "130"], ["112", "136"], ["112", "137"], ["112", "145"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "120"], ["118", "119"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["139", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "154"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["26", "33"], ["29", "42"], ["40", "44"], ["43", "51"], ["47", "58"], ["54", "62"], ["60", "64"], ["63", "69"], ["67", "73"], ["91", "94"], ["94", "100"], ["98", "104"], ["160", "167"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["56", "54"], ["62", "60"], ["64", "63"], ["69", "67"], ["73", "76"], ["76", "83"], ["76", "91"], ["79", "76"], ["100", "98"], ["104", "107"], ["107", "114"], ["107", "163"], ["110", "107"], ["161", "160"], ["31", "38"], ["34", "29"], ["51", "49"], ["58", "56"], ["82", "79"], ["122", "127"], ["127", "131"], ["137", "147"], ["163", "161"], ["33", "31"], ["36", "34"], ["83", "88"], ["86", "82"], ["114", "118"], ["114", "124"], ["124", "122"], ["131", "110"], ["131", "143"], ["139", "137"], ["146", "156"], ["146", "110"], ["38", "36"], ["88", "86"], ["118", "110"], ["142", "139"], ["147", "146"], ["147", "151"], ["150", "146"], ["155", "110"], ["143", "142"], ["151", "150"], ["156", "155"], ["23", "28"], ["24", "167"], ["26", "167"], ["31", "167"], ["34", "167"], ["34", "167"], ["34", "167"], ["29", "167"], ["40", "167"], ["47", "167"], ["54", "167"], ["56", "167"], ["58", "167"], ["56", "167"], ["54", "167"], ["54", "167"], ["60", "167"], ["63", "167"], ["64", "167"], ["63", "167"], ["63", "167"], ["67", "167"], ["67", "167"], ["91", "167"], ["94", "167"], ["94", "167"], ["94", "167"], ["98", "167"], ["98", "167"], ["98", "167"], ["104", "167"], ["107", "167"], ["107", "167"], ["107", "167"], ["160", "167"], ["160", "167"], ["160", "167"], ["122", "167"], ["122", "167"], ["127", "167"], ["127", "167"], ["131", "167"], ["131", "167"], ["139", "167"], ["139", "167"], ["142", "167"], ["139", "167"], ["137", "167"], ["137", "167"], ["147", "167"], ["146", "167"], ["150", "167"], ["146", "167"], ["146", "167"], ["155", "167"], ["155", "167"], ["118", "167"], ["110", "167"], ["82", "167"], ["86", "167"], ["88", "167"], ["86", "167"], ["82", "167"], ["82", "167"], ["79", "167"], ["131", "167"], ["23", "24"], ["23", "26"], ["23", "40"], ["49", "47"], ["49", "47"], ["56", "54"], ["56", "54"], ["23", "60"], ["69", "67"], ["76", "91"], ["23", "91"], ["100", "98"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["44", "43"], ["60", "63"], ["23", "63"], ["64", "63"], ["23", "73"], ["23", "94"], ["67", "94"], ["82", "94"], ["23", "104"], ["91", "160"], ["118", "160"], ["23", "160"], ["23", "31"], ["23", "39"], ["29", "44"], ["23", "44"], ["23", "49"], ["51", "49"], ["49", "56"], ["23", "56"], ["58", "56"], ["44", "64"], ["23", "64"], ["47", "69"], ["23", "69"], ["73", "76"], ["79", "76"], ["23", "76"], ["69", "76"], ["76", "79"], ["23", "79"], ["86", "82"], ["86", "82"], ["23", "100"], ["76", "100"], ["104", "107"], ["110", "107"], ["23", "107"], ["100", "107"], ["107", "110"], ["23", "110"], ["94", "122"], ["139", "122"], ["82", "122"], ["54", "127"], ["23", "127"], ["139", "137"], ["139", "137"], ["139", "137"], ["31", "34"], ["23", "34"], ["43", "51"], ["23", "51"], ["51", "58"], ["23", "58"], ["122", "127"], ["56", "86"], ["23", "86"], ["88", "86"], ["127", "131"], ["23", "131"], ["94", "139"], ["23", "139"], ["94", "139"], ["82", "139"], ["131", "139"], ["147", "146"], ["147", "146"], ["150", "146"], ["23", "155"], ["63", "88"], ["23", "88"], ["91", "118"], ["23", "118"], ["23", "142"], ["131", "142"], ["137", "147"], ["23", "147"], ["98", "150"], ["155", "150"], ["76", "76"], ["76", "82"], ["76", "79"], ["76", "83"], ["76", "88"], ["76", "86"], ["107", "107"], ["107", "114"], ["107", "110"], ["114", "122"], ["114", "131"], ["114", "118"], ["114", "127"], ["114", "124"], ["131", "146"], ["131", "142"], ["131", "143"], ["131", "137"], ["131", "147"], ["131", "139"], ["146", "155"], ["146", "156"], ["147", "150"], ["147", "151"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY tok1 = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,tok1,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "45": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = parseInt(tok1.nextToken()))<SUB>5</SUB>>", "49": "<(parseInt,parseInt(tok1.nextToken()))<SUB>5</SUB>>", "51": "<(nextToken,nextToken())<SUB>5</SUB>>", "53": "<(LOCAL,long k: long)<SUB>6</SUB>>", "55": "<(IDENTIFIER,k,long k = parseInt(tok1.nextToken()))<SUB>6</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(tok1.nextToken()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,tok1,nextToken())<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY tok2 = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "62": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "7": "<(IDENTIFIER,tok2,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "65": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] array = new int[n])<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n])>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,array[i] = parseInt(tok2.nextToken()))<SUB>11</SUB>>", "87": "<(IDENTIFIER,Integer,parseInt(tok2.nextToken()))<SUB>11</SUB>>", "89": "<(IDENTIFIER,tok2,nextToken())<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,int size = n)<SUB>14</SUB>>", "93": "<(IDENTIFIER,n,int size = n)<SUB>14</SUB>>", "95": "<(IDENTIFIER,Arrays,sort(array))<SUB>16</SUB>>", "97": "<(LOCAL,boolean[] skip: boolean[])<SUB>18</SUB>>", "99": "<(IDENTIFIER,skip,boolean[] skip = new boolean[n])<SUB>18</SUB>>", "101": "<(IDENTIFIER,n,new boolean[n])<SUB>18</SUB>>", "103": "<(LOCAL,int i: int)<SUB>19</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "113": "<(CONTROL_STRUCTURE,if (skip[i]),if (skip[i]))<SUB>20</SUB>>", "115": "<(IDENTIFIER,skip,if (skip[i]))<SUB>20</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "119": "<(IDENTIFIER,size,size--)<SUB>21</SUB>>", "121": "<(LOCAL,long input: long)<SUB>25</SUB>>", "123": "<(IDENTIFIER,input,long input = array[i])<SUB>25</SUB>>", "125": "<(IDENTIFIER,array,long input = array[i])<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.assignmentMultiplication,input *= k)<SUB>26</SUB>>", "129": "<(IDENTIFIER,k,input *= k)<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.greaterThan,input &gt; MAX)<SUB>27</SUB>>", "133": "<(IDENTIFIER,MAX,input &gt; MAX)<SUB>27</SUB>>", "135": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>28</SUB>>", "137": "<(&lt;operator&gt;.assignment,int pos = binarySearch(array, (int) (input)))<SUB>32</SUB>>", "139": "<(binarySearch,binarySearch(array, (int) (input)))<SUB>32</SUB>>", "141": "<(IDENTIFIER,array,binarySearch(array, (int) (input)))<SUB>32</SUB>>", "143": "<(TYPE_REF,int,int)<SUB>32</SUB>>", "145": "<(CONTROL_STRUCTURE,if (pos &gt;= 0 &amp;&amp; !skip[pos]),if (pos &gt;= 0 &amp;&amp; !skip[pos]))<SUB>33</SUB>>", "147": "<(&lt;operator&gt;.greaterEqualsThan,pos &gt;= 0)<SUB>33</SUB>>", "149": "<(LITERAL,0,pos &gt;= 0)<SUB>33</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,skip[pos])<SUB>33</SUB>>", "153": "<(IDENTIFIER,pos,!skip[pos])<SUB>33</SUB>>", "155": "<(&lt;operator&gt;.assignment,skip[pos] = true)<SUB>34</SUB>>", "157": "<(IDENTIFIER,skip,skip[pos] = true)<SUB>34</SUB>>", "159": "<(LITERAL,true,skip[pos] = true)<SUB>34</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "163": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "165": "<(MODIFIER,PUBLIC)>", "167": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}