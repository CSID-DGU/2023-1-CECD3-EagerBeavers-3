{"edges": [["19", "21"], ["19", "99"], ["19", "100"], ["19", "101"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "47"], ["21", "48"], ["21", "52"], ["21", "53"], ["21", "56"], ["21", "57"], ["21", "60"], ["21", "91"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["32", "35"], ["32", "36"], ["32", "37"], ["32", "38"], ["32", "39"], ["32", "40"], ["32", "41"], ["32", "42"], ["32", "43"], ["32", "44"], ["32", "45"], ["32", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "70"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "89"], ["71", "72"], ["71", "79"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "85"], ["79", "88"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["89", "90"], ["91", "92"], ["91", "94"], ["92", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["22", "28"], ["25", "32"], ["30", "50"], ["48", "53"], ["53", "57"], ["57", "62"], ["24", "22"], ["26", "25"], ["32", "30"], ["50", "48"], ["61", "75"], ["61", "92"], ["92", "101"], ["92", "97"], ["94", "101"], ["28", "26"], ["62", "61"], ["62", "66"], ["65", "61"], ["89", "62"], ["95", "94"], ["66", "65"], ["72", "83"], ["72", "89"], ["97", "95"], ["73", "72"], ["80", "85"], ["85", "92"], ["75", "73"], ["81", "80"], ["83", "81"], ["19", "24"], ["20", "101"], ["22", "101"], ["25", "101"], ["25", "101"], ["30", "101"], ["30", "101"], ["30", "101"], ["48", "101"], ["50", "101"], ["48", "101"], ["48", "101"], ["53", "101"], ["57", "101"], ["62", "101"], ["61", "101"], ["65", "101"], ["65", "101"], ["61", "101"], ["61", "101"], ["73", "101"], ["73", "101"], ["72", "101"], ["72", "101"], ["89", "101"], ["80", "101"], ["85", "101"], ["92", "101"], ["92", "101"], ["94", "101"], ["94", "101"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["32", "30"], ["50", "48"], ["19", "53"], ["19", "57"], ["22", "25"], ["19", "25"], ["19", "32"], ["25", "50"], ["19", "50"], ["62", "61"], ["62", "61"], ["65", "61"], ["65", "61"], ["57", "92"], ["85", "92"], ["19", "92"], ["80", "94"], ["19", "94"], ["53", "62"], ["89", "62"], ["19", "62"], ["30", "65"], ["73", "65"], ["48", "65"], ["73", "65"], ["19", "65"], ["62", "89"], ["19", "89"], ["73", "72"], ["73", "72"], ["19", "72"], ["19", "85"], ["48", "73"], ["65", "73"], ["19", "73"], ["30", "73"], ["65", "73"], ["19", "80"], ["61", "73"], ["61", "75"], ["61", "72"], ["92", "94"], ["92", "95"], ["92", "97"], ["62", "66"], ["62", "65"], ["72", "80"], ["72", "61"], ["72", "83"], ["72", "89"], ["72", "81"], ["72", "85"], ["72", "62"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int[] a: int[])<SUB>3</SUB>>", "31": "<(IDENTIFIER,a,int[] a = { 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "33": "<(LITERAL,4,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "35": "<(LITERAL,44,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "37": "<(LITERAL,74,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "39": "<(LITERAL,444,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "41": "<(LITERAL,474,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "43": "<(LITERAL,744,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "45": "<(LITERAL,774,{ 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777 })<SUB>3</SUB>>", "47": "<(LOCAL,int n: int)<SUB>4</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "51": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean yes = false)<SUB>6</SUB>>", "59": "<(LITERAL,false,boolean yes = false)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.logicalAnd,(i &lt; 14) &amp;&amp; (a[i] &lt;= n))<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i &lt; 14)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.lessEqualsThan,a[i] &lt;= n)<SUB>7</SUB>>", "67": "<(IDENTIFIER,a,a[i] &lt;= n)<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,a[i] &lt;= n)<SUB>7</SUB>>", "71": "<(CONTROL_STRUCTURE,if (n % a[i] == 0),if (n % a[i] == 0))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.modulo,n % a[i])<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,n % a[i])<SUB>8</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "83": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,yes = true)<SUB>10</SUB>>", "87": "<(LITERAL,true,yes = true)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,if (!yes),if (!yes))<SUB>14</SUB>>", "93": "<(IDENTIFIER,yes,!yes)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "97": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "99": "<(MODIFIER,PUBLIC)>", "101": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}