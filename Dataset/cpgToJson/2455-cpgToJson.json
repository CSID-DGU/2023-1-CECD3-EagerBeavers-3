{"edges": [["23", "25"], ["23", "257"], ["23", "258"], ["23", "259"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "36"], ["25", "38"], ["25", "42"], ["25", "120"], ["25", "121"], ["25", "122"], ["25", "6"], ["25", "8"], ["25", "125"], ["25", "126"], ["25", "129"], ["25", "130"], ["25", "131"], ["25", "136"], ["25", "223"], ["25", "228"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "59"], ["52", "62"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["78", "95"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["86", "94"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "93"], ["95", "96"], ["96", "97"], ["96", "107"], ["97", "98"], ["97", "99"], ["97", "100"], ["100", "101"], ["100", "104"], ["100", "106"], ["101", "102"], ["101", "103"], ["104", "105"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["111", "119"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["129", "5"], ["131", "132"], ["131", "133"], ["133", "134"], ["134", "135"], ["136", "137"], ["136", "139"], ["137", "138"], ["139", "140"], ["139", "143"], ["139", "144"], ["139", "147"], ["139", "148"], ["139", "154"], ["139", "160"], ["139", "163"], ["139", "212"], ["140", "141"], ["140", "142"], ["143", "7"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["152", "153"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "172"], ["163", "174"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "183"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "191"], ["183", "193"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "199"], ["195", "211"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["199", "206"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["228", "233"], ["228", "237"], ["228", "239"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["235", "236"], ["237", "238"], ["239", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["26", "32"], ["29", "35"], ["33", "36"], ["36", "40"], ["38", "44"], ["122", "128"], ["126", "129"], ["129", "134"], ["131", "137"], ["223", "230"], ["28", "26"], ["30", "29"], ["35", "33"], ["40", "38"], ["44", "47"], ["47", "54"], ["47", "122"], ["50", "47"], ["128", "126"], ["133", "131"], ["137", "142"], ["137", "226"], ["224", "223"], ["230", "235"], ["233", "259"], ["233", "243"], ["237", "235"], ["32", "30"], ["53", "59"], ["59", "64"], ["134", "133"], ["140", "143"], ["143", "144"], ["144", "151"], ["148", "157"], ["154", "160"], ["160", "165"], ["226", "224"], ["235", "233"], ["240", "237"], ["54", "57"], ["57", "53"], ["64", "67"], ["67", "75"], ["67", "50"], ["70", "67"], ["142", "140"], ["150", "148"], ["156", "154"], ["165", "170"], ["168", "178"], ["168", "213"], ["172", "170"], ["213", "137"], ["213", "217"], ["241", "247"], ["244", "240"], ["73", "79"], ["151", "152"], ["152", "150"], ["157", "158"], ["158", "156"], ["170", "168"], ["217", "220"], ["220", "137"], ["243", "241"], ["245", "253"], ["252", "244"], ["75", "73"], ["79", "83"], ["79", "103"], ["82", "70"], ["176", "187"], ["176", "172"], ["246", "245"], ["253", "256"], ["256", "252"], ["83", "89"], ["177", "176"], ["184", "191"], ["191", "198"], ["193", "172"], ["247", "250"], ["250", "246"], ["87", "90"], ["90", "82"], ["97", "108"], ["107", "70"], ["178", "181"], ["181", "177"], ["186", "184"], ["89", "87"], ["108", "114"], ["187", "190"], ["190", "186"], ["196", "202"], ["199", "193"], ["101", "104"], ["104", "97"], ["112", "115"], ["115", "107"], ["198", "196"], ["201", "207"], ["206", "199"], ["103", "101"], ["114", "112"], ["202", "205"], ["205", "201"], ["207", "210"], ["210", "206"], ["23", "28"], ["24", "259"], ["26", "259"], ["29", "259"], ["29", "259"], ["33", "259"], ["36", "259"], ["40", "259"], ["38", "259"], ["38", "259"], ["44", "259"], ["47", "259"], ["47", "259"], ["122", "259"], ["126", "259"], ["129", "259"], ["134", "259"], ["133", "259"], ["131", "259"], ["131", "259"], ["137", "259"], ["137", "259"], ["223", "259"], ["223", "259"], ["223", "259"], ["230", "259"], ["233", "259"], ["235", "259"], ["233", "259"], ["233", "259"], ["237", "259"], ["213", "259"], ["213", "259"], ["220", "259"], ["220", "259"], ["50", "259"], ["23", "24"], ["23", "26"], ["23", "33"], ["40", "38"], ["23", "122"], ["23", "126"], ["133", "131"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["23", "44"], ["126", "129"], ["23", "129"], ["122", "223"], ["213", "223"], ["217", "223"], ["23", "223"], ["23", "230"], ["29", "40"], ["23", "40"], ["44", "47"], ["50", "47"], ["23", "47"], ["38", "47"], ["115", "50"], ["90", "50"], ["23", "50"], ["47", "50"], ["57", "53"], ["23", "59"], ["134", "133"], ["131", "137"], ["152", "137"], ["23", "137"], ["23", "140"], ["23", "144"], ["23", "148"], ["152", "148"], ["23", "154"], ["158", "154"], ["23", "160"], ["230", "233"], ["237", "233"], ["23", "233"], ["235", "233"], ["253", "237"], ["23", "237"], ["47", "64"], ["23", "64"], ["36", "134"], ["108", "134"], ["83", "134"], ["23", "134"], ["140", "143"], ["23", "143"], ["23", "165"], ["129", "235"], ["253", "235"], ["220", "235"], ["23", "235"], ["223", "240"], ["23", "240"], ["40", "57"], ["23", "57"], ["64", "67"], ["70", "67"], ["23", "67"], ["115", "70"], ["90", "70"], ["23", "70"], ["23", "150"], ["152", "150"], ["23", "156"], ["158", "156"], ["165", "168"], ["172", "168"], ["23", "168"], ["170", "168"], ["178", "172"], ["207", "172"], ["23", "172"], ["144", "213"], ["191", "213"], ["23", "213"], ["122", "213"], ["217", "213"], ["213", "217"], ["23", "217"], ["143", "220"], ["193", "220"], ["23", "220"], ["23", "244"], ["59", "73"], ["108", "73"], ["83", "73"], ["23", "73"], ["137", "152"], ["23", "152"], ["148", "158"], ["23", "158"], ["154", "170"], ["178", "170"], ["207", "170"], ["23", "170"], ["23", "245"], ["36", "79"], ["108", "79"], ["83", "79"], ["23", "79"], ["73", "79"], ["83", "82"], ["83", "82"], ["87", "82"], ["90", "82"], ["23", "82"], ["160", "176"], ["184", "176"], ["23", "176"], ["247", "253"], ["23", "253"], ["247", "253"], ["79", "83"], ["23", "83"], ["79", "83"], ["23", "87"], ["23", "94"], ["144", "191"], ["23", "191"], ["143", "193"], ["23", "193"], ["196", "193"], ["199", "193"], ["235", "247"], ["23", "247"], ["233", "247"], ["87", "90"], ["23", "90"], ["67", "90"], ["115", "90"], ["47", "90"], ["79", "97"], ["23", "97"], ["79", "97"], ["101", "97"], ["104", "97"], ["108", "107"], ["108", "107"], ["112", "107"], ["115", "107"], ["23", "107"], ["170", "178"], ["23", "178"], ["168", "178"], ["23", "196"], ["23", "211"], ["23", "101"], ["23", "106"], ["97", "108"], ["23", "108"], ["97", "108"], ["23", "112"], ["23", "119"], ["178", "187"], ["23", "187"], ["178", "187"], ["196", "199"], ["23", "199"], ["101", "104"], ["23", "104"], ["112", "115"], ["23", "115"], ["67", "115"], ["90", "115"], ["47", "115"], ["187", "202"], ["23", "202"], ["187", "202"], ["202", "207"], ["23", "207"], ["202", "207"], ["47", "64"], ["47", "57"], ["47", "67"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "47"], ["47", "53"], ["137", "154"], ["137", "150"], ["137", "151"], ["137", "213"], ["137", "168"], ["137", "170"], ["137", "144"], ["137", "148"], ["137", "137"], ["137", "152"], ["137", "158"], ["137", "160"], ["137", "142"], ["137", "157"], ["137", "140"], ["137", "143"], ["137", "165"], ["137", "156"], ["233", "240"], ["233", "244"], ["233", "243"], ["233", "245"], ["233", "256"], ["233", "247"], ["233", "246"], ["233", "233"], ["233", "252"], ["233", "235"], ["233", "237"], ["233", "253"], ["233", "241"], ["233", "250"], ["67", "73"], ["67", "75"], ["67", "67"], ["67", "79"], ["67", "70"], ["168", "178"], ["168", "168"], ["168", "170"], ["168", "181"], ["168", "176"], ["168", "177"], ["168", "172"], ["213", "217"], ["213", "220"], ["79", "107"], ["79", "115"], ["79", "114"], ["79", "103"], ["79", "104"], ["79", "87"], ["79", "97"], ["79", "112"], ["79", "101"], ["79", "90"], ["79", "108"], ["79", "89"], ["79", "82"], ["79", "83"], ["176", "196"], ["176", "198"], ["176", "206"], ["176", "191"], ["176", "187"], ["176", "190"], ["176", "184"], ["176", "207"], ["176", "186"], ["176", "202"], ["176", "201"], ["176", "205"], ["176", "193"], ["176", "210"], ["176", "199"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,cin,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,ma = new HashMap())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.alloc,new HashMap())<SUB>3</SUB>>", "37": "<(IDENTIFIER,ma,new HashMap())<SUB>3</SUB>>", "39": "<(IDENTIFIER,n,n = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,cin,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int i: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,int i = 1)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,i &lt;= n)<SUB>5</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "57": "<(nextInt,nextInt())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,sum = 0)<SUB>7</SUB>>", "61": "<(LITERAL,0,sum = 0)<SUB>7</SUB>>", "63": "<(LOCAL,int j: int)<SUB>8</SUB>>", "65": "<(IDENTIFIER,j,int j = i)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>8</SUB>>", "69": "<(LITERAL,0,j &gt; 0)<SUB>8</SUB>>", "71": "<(IDENTIFIER,j,j--)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignmentPlus,sum += arr[j])<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>9</SUB>>", "77": "<(IDENTIFIER,j,sum += arr[j])<SUB>9</SUB>>", "79": "<(containsKey,containsKey(sum))<SUB>10</SUB>>", "81": "<(IDENTIFIER,sum,containsKey(sum))<SUB>10</SUB>>", "83": "<(get,get(sum))<SUB>10</SUB>>", "85": "<(IDENTIFIER,sum,get(sum))<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "89": "<(&lt;operator&gt;.alloc,new seg(j, i))<SUB>10</SUB>>", "91": "<(IDENTIFIER,$obj2,new seg(j, i))>", "93": "<(IDENTIFIER,i,new seg(j, i))<SUB>10</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "97": "<(put,put(sum, new ArrayList&lt;seg&gt;()))<SUB>12</SUB>>", "99": "<(IDENTIFIER,sum,put(sum, new ArrayList&lt;seg&gt;()))<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "103": "<(&lt;operator&gt;.alloc,new ArrayList&lt;seg&gt;())<SUB>12</SUB>>", "105": "<(IDENTIFIER,$obj3,new ArrayList&lt;seg&gt;())>", "107": "<(add,add(new seg(j, i)))<SUB>13</SUB>>", "109": "<(IDENTIFIER,ma,get(sum))<SUB>13</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "113": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "115": "<(&lt;init&gt;,new seg(j, i))<SUB>13</SUB>>", "117": "<(IDENTIFIER,j,new seg(j, i))<SUB>13</SUB>>", "119": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "121": "<(LOCAL,int te: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,ans,int ans = 0)<SUB>17</SUB>>", "6": "<(LOCAL,ArrayList&lt;seg&gt; best: ANY)<SUB>18</SUB>>", "125": "<(LOCAL,ArrayList&lt;seg&gt; temp: ANY)<SUB>18</SUB>>", "127": "<(IDENTIFIER,best,ANY best = new ArrayList())<SUB>18</SUB>>", "129": "<(&lt;init&gt;,new ArrayList())<SUB>18</SUB>>", "130": "<(LOCAL,Iterator it: ANY)<SUB>19</SUB>>", "132": "<(IDENTIFIER,it,ANY it = iterator())<SUB>19</SUB>>", "134": "<(entrySet,entrySet())<SUB>19</SUB>>", "136": "<(CONTROL_STRUCTURE,while (it.hasNext()),while (it.hasNext()))<SUB>20</SUB>>", "138": "<(IDENTIFIER,it,hasNext())<SUB>20</SUB>>", "140": "<(&lt;operator&gt;.assignment,now = new ArrayList())<SUB>21</SUB>>", "142": "<(&lt;operator&gt;.alloc,new ArrayList())<SUB>21</SUB>>", "7": "<(IDENTIFIER,now,new ArrayList())<SUB>21</SUB>>", "145": "<(IDENTIFIER,te,te = 0)<SUB>22</SUB>>", "147": "<(LOCAL,Map.Entry entry: ANY)<SUB>23</SUB>>", "149": "<(IDENTIFIER,entry,ANY entry = (Map.Entry) it.next())<SUB>23</SUB>>", "151": "<(TYPE_REF,Map.Entry,Map.Entry)<SUB>23</SUB>>", "153": "<(IDENTIFIER,it,next())<SUB>23</SUB>>", "155": "<(IDENTIFIER,temp,temp = (ArrayList&lt;seg&gt;) entry.getValue())<SUB>24</SUB>>", "157": "<(TYPE_REF,ArrayList&lt;seg&gt;,ArrayList&lt;seg&gt;)<SUB>24</SUB>>", "159": "<(IDENTIFIER,entry,getValue())<SUB>24</SUB>>", "161": "<(IDENTIFIER,dex,dex = 0)<SUB>25</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; temp.size()); i++),for (int i = 0; Some(i &lt; temp.size()); i++))<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "167": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "169": "<(IDENTIFIER,i,i &lt; temp.size())<SUB>26</SUB>>", "171": "<(IDENTIFIER,temp,size())<SUB>26</SUB>>", "173": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,if (temp.get(i).l &gt; dex),if (temp.get(i).l &gt; dex))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.fieldAccess,temp.get(i).l)<SUB>27</SUB>>", "179": "<(IDENTIFIER,temp,get(i))<SUB>27</SUB>>", "181": "<(FIELD_IDENTIFIER,l,l)<SUB>27</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "185": "<(IDENTIFIER,dex,dex = temp.get(i).r)<SUB>28</SUB>>", "187": "<(get,get(i))<SUB>28</SUB>>", "189": "<(IDENTIFIER,i,get(i))<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,te++)<SUB>29</SUB>>", "193": "<(add,add(new seg(temp.get(i).l, temp.get(i).r)))<SUB>30</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "197": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "199": "<(&lt;init&gt;,new seg(temp.get(i).l, temp.get(i).r))<SUB>30</SUB>>", "201": "<(&lt;operator&gt;.fieldAccess,temp.get(i).l)<SUB>30</SUB>>", "203": "<(IDENTIFIER,temp,get(i))<SUB>30</SUB>>", "205": "<(FIELD_IDENTIFIER,l,l)<SUB>30</SUB>>", "207": "<(get,get(i))<SUB>30</SUB>>", "209": "<(IDENTIFIER,i,get(i))<SUB>30</SUB>>", "211": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "213": "<(&lt;operator&gt;.greaterThan,te &gt; ans)<SUB>33</SUB>>", "215": "<(IDENTIFIER,ans,te &gt; ans)<SUB>33</SUB>>", "217": "<(&lt;operator&gt;.assignment,ans = te)<SUB>34</SUB>>", "219": "<(IDENTIFIER,te,ans = te)<SUB>34</SUB>>", "221": "<(IDENTIFIER,best,best = now)<SUB>35</SUB>>", "223": "<(println,System.out.println(ans))<SUB>38</SUB>>", "225": "<(IDENTIFIER,System,System.out.println(ans))<SUB>38</SUB>>", "227": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>38</SUB>>", "229": "<(LOCAL,int i: int)<SUB>39</SUB>>", "231": "<(IDENTIFIER,i,int i = 0)<SUB>39</SUB>>", "233": "<(&lt;operator&gt;.lessThan,i &lt; best.size())<SUB>39</SUB>>", "235": "<(size,size())<SUB>39</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,i++)<SUB>39</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "245": "<(&lt;operator&gt;.addition,best.get(i).l + &quot; &quot;)<SUB>40</SUB>>", "247": "<(get,get(i))<SUB>40</SUB>>", "249": "<(IDENTIFIER,i,get(i))<SUB>40</SUB>>", "251": "<(LITERAL,&quot; &quot;,best.get(i).l + &quot; &quot;)<SUB>40</SUB>>", "253": "<(get,get(i))<SUB>40</SUB>>", "255": "<(IDENTIFIER,i,get(i))<SUB>40</SUB>>", "257": "<(MODIFIER,PUBLIC)>", "259": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}