{"edges": [["19", "20"], ["19", "21"], ["19", "86"], ["19", "87"], ["19", "88"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "36"], ["32", "33"], ["32", "35"], ["33", "34"], ["36", "37"], ["36", "38"], ["36", "42"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "54"], ["42", "60"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["61", "62"], ["61", "73"], ["61", "79"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["80", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["22", "25"], ["25", "29"], ["27", "33"], ["24", "22"], ["29", "27"], ["32", "88"], ["32", "40"], ["33", "32"], ["38", "45"], ["40", "38"], ["43", "58"], ["43", "64"], ["44", "43"], ["44", "51"], ["49", "43"], ["55", "33"], ["45", "44"], ["51", "49"], ["56", "55"], ["62", "77"], ["62", "84"], ["58", "56"], ["63", "62"], ["63", "70"], ["68", "62"], ["74", "33"], ["64", "63"], ["70", "68"], ["75", "74"], ["81", "33"], ["77", "75"], ["82", "81"], ["84", "82"], ["19", "24"], ["20", "88"], ["22", "88"], ["25", "88"], ["29", "88"], ["27", "88"], ["27", "88"], ["33", "88"], ["32", "88"], ["32", "88"], ["81", "88"], ["74", "88"], ["55", "88"], ["19", "20"], ["19", "22"], ["29", "27"], ["22", "25"], ["19", "25"], ["25", "29"], ["19", "29"], ["33", "32"], ["19", "32"], ["40", "38"], ["27", "33"], ["19", "33"], ["29", "40"], ["19", "40"], ["44", "43"], ["44", "43"], ["49", "43"], ["49", "43"], ["45", "44"], ["45", "44"], ["19", "44"], ["68", "49"], ["19", "49"], ["51", "49"], ["51", "49"], ["81", "55"], ["74", "55"], ["19", "55"], ["38", "45"], ["19", "45"], ["45", "51"], ["19", "51"], ["63", "62"], ["63", "62"], ["68", "62"], ["68", "62"], ["64", "63"], ["64", "63"], ["19", "63"], ["49", "68"], ["19", "68"], ["70", "68"], ["70", "68"], ["81", "74"], ["55", "74"], ["19", "74"], ["45", "64"], ["51", "64"], ["19", "64"], ["64", "70"], ["19", "70"], ["74", "81"], ["55", "81"], ["19", "81"], ["32", "32"], ["32", "33"], ["32", "38"], ["32", "45"], ["32", "40"], ["32", "44"], ["32", "43"], ["43", "58"], ["43", "64"], ["43", "56"], ["43", "63"], ["43", "55"], ["43", "62"], ["44", "49"], ["44", "51"], ["62", "77"], ["62", "75"], ["62", "81"], ["62", "84"], ["62", "74"], ["62", "82"], ["63", "68"], ["63", "70"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.postDecrement,T--)<SUB>4</SUB>>", "35": "<(LITERAL,0,T-- &gt; 0)<SUB>4</SUB>>", "37": "<(LOCAL,int n: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.logicalAnd,n % 2 == 0 &amp;&amp; issq(n / 2))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "47": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "49": "<(issq,issq(n / 2))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.division,n / 2)<SUB>6</SUB>>", "53": "<(LITERAL,2,n / 2)<SUB>6</SUB>>", "55": "<(println,System.out.println(&quot;YES&quot;))<SUB>7</SUB>>", "57": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>7</SUB>>", "59": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,if (n % 4 == 0 &amp;&amp; issq(n / 4)),if (n % 4 == 0 &amp;&amp; issq(n / 4)))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.equals,n % 4 == 0)<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,n % 4)<SUB>9</SUB>>", "67": "<(LITERAL,0,n % 4 == 0)<SUB>9</SUB>>", "69": "<(IDENTIFIER,this,issq(n / 4))<SUB>9</SUB>>", "71": "<(IDENTIFIER,n,n / 4)<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "81": "<(println,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "83": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "85": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "87": "<(MODIFIER,STATIC)>"}}