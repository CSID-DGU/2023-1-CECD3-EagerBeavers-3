{"edges": [["19", "20"], ["19", "21"], ["19", "194"], ["19", "195"], ["19", "196"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "57"], ["21", "58"], ["21", "63"], ["21", "64"], ["21", "69"], ["21", "76"], ["21", "83"], ["21", "183"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "56"], ["54", "55"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "104"], ["94", "106"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "162"], ["107", "108"], ["107", "119"], ["107", "137"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "136"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["137", "138"], ["138", "139"], ["138", "146"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["146", "147"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "161"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "168"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "182"], ["169", "170"], ["169", "177"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["58", "66"], ["64", "71"], ["69", "78"], ["76", "85"], ["183", "196"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "50"], ["44", "60"], ["47", "44"], ["49", "47"], ["60", "58"], ["66", "64"], ["70", "69"], ["77", "76"], ["85", "88"], ["88", "98"], ["88", "186"], ["91", "88"], ["184", "190"], ["187", "183"], ["28", "26"], ["50", "54"], ["53", "49"], ["71", "70"], ["78", "77"], ["186", "184"], ["188", "187"], ["54", "53"], ["96", "101"], ["101", "112"], ["101", "91"], ["104", "101"], ["190", "188"], ["98", "96"], ["162", "104"], ["108", "122"], ["108", "142"], ["163", "171"], ["168", "162"], ["109", "108"], ["109", "116"], ["116", "108"], ["120", "164"], ["164", "163"], ["169", "168"], ["110", "109"], ["121", "130"], ["126", "120"], ["139", "149"], ["139", "164"], ["170", "178"], ["177", "169"], ["112", "110"], ["122", "121"], ["127", "126"], ["140", "139"], ["147", "164"], ["171", "174"], ["174", "170"], ["178", "177"], ["128", "133"], ["133", "127"], ["142", "140"], ["148", "157"], ["153", "147"], ["130", "128"], ["149", "148"], ["154", "153"], ["155", "154"], ["157", "155"], ["19", "24"], ["20", "196"], ["22", "196"], ["25", "196"], ["25", "196"], ["32", "196"], ["30", "196"], ["30", "196"], ["35", "196"], ["35", "196"], ["35", "196"], ["41", "196"], ["58", "196"], ["58", "196"], ["64", "196"], ["64", "196"], ["64", "196"], ["69", "196"], ["69", "196"], ["76", "196"], ["76", "196"], ["85", "196"], ["88", "196"], ["88", "196"], ["183", "196"], ["190", "196"], ["183", "196"], ["183", "196"], ["96", "196"], ["101", "196"], ["101", "196"], ["91", "196"], ["109", "196"], ["108", "196"], ["108", "196"], ["108", "196"], ["139", "196"], ["139", "196"], ["153", "196"], ["147", "196"], ["147", "196"], ["126", "196"], ["120", "196"], ["120", "196"], ["162", "196"], ["169", "196"], ["169", "196"], ["168", "196"], ["168", "196"], ["162", "196"], ["162", "196"], ["104", "196"], ["49", "196"], ["54", "196"], ["53", "196"], ["49", "196"], ["49", "196"], ["47", "196"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["60", "58"], ["66", "64"], ["19", "69"], ["19", "76"], ["22", "25"], ["19", "25"], ["19", "41"], ["53", "49"], ["53", "49"], ["19", "85"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["19", "60"], ["19", "66"], ["85", "88"], ["91", "88"], ["19", "88"], ["44", "88"], ["98", "88"], ["88", "91"], ["142", "91"], ["157", "91"], ["130", "91"], ["19", "91"], ["54", "53"], ["19", "53"], ["98", "96"], ["98", "96"], ["32", "54"], ["19", "54"], ["96", "101"], ["104", "101"], ["19", "101"], ["19", "104"], ["101", "104"], ["116", "104"], ["133", "104"], ["168", "162"], ["168", "162"], ["88", "190"], ["19", "190"], ["88", "98"], ["19", "98"], ["109", "108"], ["109", "108"], ["116", "108"], ["116", "108"], ["126", "120"], ["126", "120"], ["147", "168"], ["120", "168"], ["153", "168"], ["126", "168"], ["19", "168"], ["35", "109"], ["139", "109"], ["19", "109"], ["101", "116"], ["19", "116"], ["147", "169"], ["120", "169"], ["168", "126"], ["19", "126"], ["35", "139"], ["109", "139"], ["19", "139"], ["153", "147"], ["153", "147"], ["88", "112"], ["142", "112"], ["157", "112"], ["130", "112"], ["19", "112"], ["101", "174"], ["116", "174"], ["133", "174"], ["19", "174"], ["101", "133"], ["116", "133"], ["19", "133"], ["112", "142"], ["19", "142"], ["168", "153"], ["19", "153"], ["112", "130"], ["19", "130"], ["142", "157"], ["19", "157"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["44", "49"], ["44", "53"], ["88", "96"], ["88", "98"], ["88", "91"], ["88", "101"], ["88", "88"], ["101", "169"], ["101", "163"], ["101", "178"], ["101", "104"], ["101", "162"], ["101", "168"], ["101", "170"], ["101", "112"], ["101", "101"], ["101", "174"], ["101", "164"], ["101", "108"], ["101", "171"], ["101", "177"], ["101", "110"], ["101", "109"], ["108", "120"], ["108", "128"], ["108", "121"], ["108", "130"], ["108", "127"], ["108", "139"], ["108", "122"], ["108", "142"], ["108", "140"], ["108", "126"], ["108", "133"], ["109", "116"], ["139", "154"], ["139", "149"], ["139", "153"], ["139", "148"], ["139", "155"], ["139", "157"], ["139", "147"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,char[] s = new char[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new char[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,s[i] = charAt(0))<SUB>6</SUB>>", "51": "<(IDENTIFIER,s,s[i] = charAt(0))<SUB>6</SUB>>", "53": "<(charAt,charAt(0))<SUB>6</SUB>>", "55": "<(IDENTIFIER,sc,next())<SUB>6</SUB>>", "57": "<(LOCAL,int[][] dp: int[][])<SUB>7</SUB>>", "59": "<(IDENTIFIER,dp,int[][] dp = new int[5001][5001])<SUB>7</SUB>>", "61": "<(LITERAL,5001,new int[5001][5001])<SUB>7</SUB>>", "63": "<(LOCAL,int[][] sum: int[][])<SUB>8</SUB>>", "65": "<(IDENTIFIER,sum,int[][] sum = new int[5001][5001])<SUB>8</SUB>>", "67": "<(LITERAL,5001,new int[5001][5001])<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>9</SUB>>", "73": "<(LITERAL,0,dp[0][0] = 1)<SUB>9</SUB>>", "75": "<(LITERAL,1,dp[0][0] = 1)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,sum[0][0])<SUB>10</SUB>>", "79": "<(IDENTIFIER,sum,sum[0][0] = 1)<SUB>10</SUB>>", "81": "<(LITERAL,0,sum[0][0] = 1)<SUB>10</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "87": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "89": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "95": "<(LOCAL,int j: int)<SUB>12</SUB>>", "97": "<(IDENTIFIER,j,int j = n - 1)<SUB>12</SUB>>", "99": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>12</SUB>>", "103": "<(LITERAL,0,j &gt;= 0)<SUB>12</SUB>>", "105": "<(IDENTIFIER,j,j--)<SUB>12</SUB>>", "107": "<(CONTROL_STRUCTURE,if (s[i - 1] == 'f' &amp;&amp; j &gt; 0),if (s[i - 1] == 'f' &amp;&amp; j &gt; 0))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.equals,s[i - 1] == 'f')<SUB>13</SUB>>", "111": "<(IDENTIFIER,s,s[i - 1] == 'f')<SUB>13</SUB>>", "113": "<(IDENTIFIER,i,i - 1)<SUB>13</SUB>>", "115": "<(LITERAL,'f',s[i - 1] == 'f')<SUB>13</SUB>>", "117": "<(IDENTIFIER,j,j &gt; 0)<SUB>13</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>14</SUB>>", "123": "<(IDENTIFIER,dp,dp[i][j] = dp[i - 1][j - 1] % mod)<SUB>14</SUB>>", "125": "<(IDENTIFIER,j,dp[i][j] = dp[i - 1][j - 1] % mod)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j - 1])<SUB>14</SUB>>", "129": "<(IDENTIFIER,dp,dp[i - 1][j - 1] % mod)<SUB>14</SUB>>", "131": "<(IDENTIFIER,i,i - 1)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>14</SUB>>", "135": "<(LITERAL,1,j - 1)<SUB>14</SUB>>", "137": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.equals,s[i - 1] == 's')<SUB>15</SUB>>", "141": "<(IDENTIFIER,s,s[i - 1] == 's')<SUB>15</SUB>>", "143": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "145": "<(LITERAL,'s',s[i - 1] == 's')<SUB>15</SUB>>", "147": "<(&lt;operator&gt;.assignment,dp[i][j] = sum[i - 1][j] % mod)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>16</SUB>>", "151": "<(IDENTIFIER,i,dp[i][j] = sum[i - 1][j] % mod)<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.modulo,sum[i - 1][j] % mod)<SUB>16</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,sum[i - 1])<SUB>16</SUB>>", "157": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>16</SUB>>", "159": "<(LITERAL,1,i - 1)<SUB>16</SUB>>", "161": "<(IDENTIFIER,mod,sum[i - 1][j] % mod)<SUB>16</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,sum[i][j])<SUB>18</SUB>>", "165": "<(IDENTIFIER,sum,sum[i][j] = (sum[i][j + 1] + dp[i][j]) % mod)<SUB>18</SUB>>", "167": "<(IDENTIFIER,j,sum[i][j] = (sum[i][j + 1] + dp[i][j]) % mod)<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.addition,sum[i][j + 1] + dp[i][j])<SUB>18</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,sum[i])<SUB>18</SUB>>", "173": "<(IDENTIFIER,i,sum[i][j + 1] + dp[i][j])<SUB>18</SUB>>", "175": "<(IDENTIFIER,j,j + 1)<SUB>18</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>18</SUB>>", "179": "<(IDENTIFIER,dp,sum[i][j + 1] + dp[i][j])<SUB>18</SUB>>", "181": "<(IDENTIFIER,j,sum[i][j + 1] + dp[i][j])<SUB>18</SUB>>", "183": "<(println,System.out.println(sum[n - 1][0]))<SUB>21</SUB>>", "185": "<(IDENTIFIER,System,System.out.println(sum[n - 1][0]))<SUB>21</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,sum[n - 1][0])<SUB>21</SUB>>", "189": "<(IDENTIFIER,sum,System.out.println(sum[n - 1][0]))<SUB>21</SUB>>", "191": "<(IDENTIFIER,n,n - 1)<SUB>21</SUB>>", "193": "<(LITERAL,0,System.out.println(sum[n - 1][0]))<SUB>21</SUB>>", "195": "<(MODIFIER,STATIC)>"}}