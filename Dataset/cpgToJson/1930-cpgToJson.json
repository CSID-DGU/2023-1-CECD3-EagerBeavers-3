{"edges": [["19", "21"], ["19", "83"], ["19", "84"], ["19", "85"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "49"], ["21", "55"], ["21", "75"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "54"], ["52", "53"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["79", "82"], ["22", "29"], ["25", "41"], ["37", "46"], ["44", "52"], ["49", "57"], ["75", "85"], ["24", "22"], ["39", "37"], ["46", "44"], ["51", "49"], ["57", "60"], ["60", "67"], ["60", "78"], ["63", "60"], ["76", "79"], ["79", "75"], ["27", "34"], ["30", "25"], ["41", "39"], ["52", "51"], ["66", "63"], ["78", "76"], ["29", "27"], ["32", "30"], ["67", "72"], ["70", "66"], ["34", "32"], ["72", "70"], ["19", "24"], ["20", "85"], ["22", "85"], ["27", "85"], ["30", "85"], ["30", "85"], ["30", "85"], ["25", "85"], ["39", "85"], ["37", "85"], ["37", "85"], ["44", "85"], ["44", "85"], ["49", "85"], ["52", "85"], ["51", "85"], ["49", "85"], ["49", "85"], ["57", "85"], ["60", "85"], ["60", "85"], ["75", "85"], ["79", "85"], ["79", "85"], ["75", "85"], ["75", "85"], ["66", "85"], ["70", "85"], ["70", "85"], ["66", "85"], ["66", "85"], ["63", "85"], ["79", "85"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["51", "49"], ["51", "49"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "57"], ["79", "75"], ["79", "75"], ["79", "75"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["37", "46"], ["19", "46"], ["52", "51"], ["19", "51"], ["57", "60"], ["63", "60"], ["19", "60"], ["46", "60"], ["60", "63"], ["19", "63"], ["70", "66"], ["70", "66"], ["19", "79"], ["60", "79"], ["44", "79"], ["66", "79"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["41", "52"], ["19", "52"], ["39", "70"], ["19", "70"], ["49", "70"], ["60", "60"], ["60", "66"], ["60", "72"], ["60", "67"], ["60", "70"], ["60", "63"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int[] a: int[])<SUB>4</SUB>>", "45": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,String[] parts = split(&quot; &quot;))<SUB>5</SUB>>", "51": "<(split,split(&quot; &quot;))<SUB>5</SUB>>", "53": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.preIncrement,++i)<SUB>6</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,a[i] = Integer.parseInt(parts[i]))<SUB>7</SUB>>", "71": "<(IDENTIFIER,Integer,Integer.parseInt(parts[i]))<SUB>7</SUB>>", "73": "<(IDENTIFIER,parts,Integer.parseInt(parts[i]))<SUB>7</SUB>>", "75": "<(println,println(solve(n, a)))<SUB>9</SUB>>", "77": "<(IDENTIFIER,System,println(solve(n, a)))<SUB>9</SUB>>", "79": "<(solve,solve(n, a))<SUB>9</SUB>>", "81": "<(IDENTIFIER,n,solve(n, a))<SUB>9</SUB>>", "83": "<(MODIFIER,PUBLIC)>", "85": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}