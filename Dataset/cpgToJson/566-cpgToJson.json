{"edges": [["21", "22"], ["21", "23"], ["21", "152"], ["21", "153"], ["21", "154"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "46"], ["23", "59"], ["23", "82"], ["23", "83"], ["23", "86"], ["23", "115"], ["23", "116"], ["23", "122"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "52"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "63"], ["59", "72"], ["59", "74"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "69"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["86", "99"], ["86", "102"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["122", "123"], ["122", "127"], ["123", "124"], ["123", "126"], ["124", "125"], ["127", "128"], ["127", "129"], ["127", "135"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["135", "136"], ["135", "139"], ["135", "145"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["146", "147"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["24", "31"], ["27", "40"], ["38", "41"], ["41", "43"], ["43", "50"], ["83", "87"], ["116", "124"], ["26", "24"], ["40", "38"], ["47", "53"], ["60", "65"], ["63", "78"], ["63", "83"], ["72", "65"], ["87", "93"], ["90", "107"], ["90", "120"], ["99", "93"], ["118", "116"], ["123", "154"], ["123", "133"], ["29", "36"], ["32", "27"], ["49", "47"], ["53", "56"], ["56", "53"], ["56", "60"], ["64", "70"], ["69", "63"], ["75", "72"], ["91", "97"], ["96", "90"], ["103", "112"], ["110", "99"], ["120", "118"], ["124", "123"], ["129", "136"], ["31", "29"], ["34", "32"], ["50", "49"], ["65", "64"], ["70", "69"], ["77", "75"], ["93", "91"], ["97", "96"], ["105", "103"], ["112", "110"], ["131", "129"], ["136", "143"], ["136", "150"], ["36", "34"], ["78", "77"], ["107", "105"], ["133", "131"], ["140", "124"], ["141", "140"], ["147", "124"], ["143", "141"], ["148", "147"], ["150", "148"], ["21", "26"], ["22", "154"], ["24", "154"], ["29", "154"], ["32", "154"], ["32", "154"], ["32", "154"], ["27", "154"], ["38", "154"], ["41", "154"], ["43", "154"], ["47", "154"], ["56", "154"], ["56", "154"], ["64", "154"], ["63", "154"], ["63", "154"], ["83", "154"], ["87", "154"], ["91", "154"], ["93", "154"], ["91", "154"], ["90", "154"], ["90", "154"], ["90", "154"], ["118", "154"], ["120", "154"], ["118", "154"], ["116", "154"], ["116", "154"], ["124", "154"], ["123", "154"], ["123", "154"], ["147", "154"], ["140", "154"], ["99", "154"], ["72", "154"], ["21", "22"], ["21", "24"], ["21", "38"], ["21", "43"], ["21", "83"], ["118", "116"], ["118", "116"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "60"], ["21", "87"], ["21", "99"], ["21", "29"], ["21", "37"], ["43", "47"], ["21", "47"], ["21", "53"], ["64", "63"], ["64", "63"], ["21", "63"], ["78", "72"], ["21", "72"], ["83", "90"], ["110", "90"], ["21", "90"], ["93", "90"], ["93", "90"], ["112", "99"], ["112", "110"], ["112", "110"], ["21", "118"], ["120", "118"], ["124", "123"], ["21", "123"], ["131", "129"], ["131", "129"], ["29", "32"], ["21", "32"], ["21", "49"], ["47", "53"], ["56", "53"], ["41", "56"], ["21", "56"], ["53", "56"], ["65", "64"], ["21", "64"], ["21", "69"], ["56", "75"], ["21", "75"], ["77", "75"], ["77", "75"], ["83", "91"], ["110", "91"], ["21", "91"], ["93", "91"], ["93", "91"], ["21", "96"], ["56", "103"], ["75", "103"], ["21", "103"], ["83", "103"], ["110", "103"], ["107", "103"], ["107", "103"], ["21", "110"], ["83", "110"], ["27", "120"], ["21", "120"], ["116", "124"], ["21", "124"], ["60", "65"], ["72", "65"], ["21", "65"], ["78", "77"], ["21", "77"], ["87", "93"], ["99", "93"], ["21", "93"], ["21", "105"], ["83", "105"], ["110", "105"], ["107", "105"], ["107", "105"], ["107", "112"], ["21", "112"], ["118", "131"], ["21", "131"], ["133", "131"], ["56", "136"], ["103", "136"], ["75", "136"], ["21", "136"], ["129", "136"], ["65", "78"], ["21", "78"], ["93", "107"], ["21", "107"], ["120", "133"], ["21", "133"], ["147", "140"], ["21", "140"], ["140", "147"], ["21", "147"], ["63", "77"], ["63", "64"], ["63", "75"], ["63", "72"], ["63", "69"], ["63", "65"], ["63", "70"], ["63", "63"], ["63", "78"], ["90", "107"], ["90", "96"], ["90", "99"], ["90", "103"], ["90", "97"], ["90", "91"], ["90", "112"], ["90", "93"], ["90", "90"], ["90", "105"], ["90", "110"], ["123", "136"], ["123", "131"], ["123", "123"], ["123", "129"], ["123", "124"], ["123", "133"], ["56", "56"], ["56", "53"], ["136", "141"], ["136", "150"], ["136", "140"], ["136", "148"], ["136", "143"], ["136", "147"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY good = new HashSet&lt;&gt;())<SUB>5</SUB>>", "40": "<(&lt;operator&gt;.alloc,new HashSet&lt;&gt;())<SUB>5</SUB>>", "5": "<(IDENTIFIER,good,new HashSet&lt;&gt;())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "45": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= (int) (1e9))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.cast,(int) (1e9))<SUB>7</SUB>>", "51": "<(LITERAL,1e9,(int) (1e9))<SUB>7</SUB>>", "53": "<(&lt;operators&gt;.assignmentShiftLeft,i &lt;&lt;= 1)<SUB>8</SUB>>", "55": "<(LITERAL,1,i &lt;&lt;= 1)<SUB>8</SUB>>", "57": "<(IDENTIFIER,good,add(i))<SUB>9</SUB>>", "59": "<(CONTROL_STRUCTURE,for (i = 3; Some(i * i * 2 &lt;= (int) (1e9)); i++),for (i = 3; Some(i * i * 2 &lt;= (int) (1e9)); i++))<SUB>12</SUB>>", "61": "<(IDENTIFIER,i,i = 3)<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.lessEqualsThan,i * i * 2 &lt;= (int) (1e9))<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.multiplication,i * i)<SUB>12</SUB>>", "67": "<(IDENTIFIER,i,i * i)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.cast,(int) (1e9))<SUB>12</SUB>>", "71": "<(LITERAL,1e9,(int) (1e9))<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "75": "<(add,add(i * i * 2))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.multiplication,i * i * 2)<SUB>13</SUB>>", "79": "<(IDENTIFIER,i,i * i)<SUB>13</SUB>>", "81": "<(LITERAL,2,i * i * 2)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,int beg = 4)<SUB>16</SUB>>", "85": "<(LITERAL,4,int beg = 4)<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.assignment,i = 3)<SUB>17</SUB>>", "89": "<(LITERAL,3,i = 3)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.addition,beg + i * 4)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.multiplication,i * 4)<SUB>17</SUB>>", "95": "<(LITERAL,4,i * 4)<SUB>17</SUB>>", "97": "<(TYPE_REF,int,int)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.assignmentPlus,i += 2)<SUB>17</SUB>>", "101": "<(LITERAL,2,i += 2)<SUB>17</SUB>>", "103": "<(add,add(beg + i * 4))<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.addition,beg + i * 4)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.multiplication,i * 4)<SUB>18</SUB>>", "109": "<(LITERAL,4,i * 4)<SUB>18</SUB>>", "111": "<(IDENTIFIER,beg,beg += i * 4)<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,i * 4)<SUB>19</SUB>>", "115": "<(LOCAL,int t: int)<SUB>22</SUB>>", "117": "<(IDENTIFIER,t,int t = parseInt(in.readLine()))<SUB>22</SUB>>", "119": "<(IDENTIFIER,Integer,parseInt(in.readLine()))<SUB>22</SUB>>", "121": "<(IDENTIFIER,in,readLine())<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>23</SUB>>", "125": "<(IDENTIFIER,t,t--)<SUB>23</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>24</SUB>>", "131": "<(parseInt,parseInt(in.readLine()))<SUB>24</SUB>>", "133": "<(readLine,readLine())<SUB>24</SUB>>", "135": "<(CONTROL_STRUCTURE,if (good.contains(n)),if (good.contains(n)))<SUB>25</SUB>>", "137": "<(IDENTIFIER,good,contains(n))<SUB>25</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "141": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "143": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "145": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "147": "<(println,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "149": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "151": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "153": "<(MODIFIER,STATIC)>"}}