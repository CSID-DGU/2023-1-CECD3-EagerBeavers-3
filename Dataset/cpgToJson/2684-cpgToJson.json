{"edges": [["17", "19"], ["17", "143"], ["17", "144"], ["17", "145"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "42"], ["19", "62"], ["19", "63"], ["19", "66"], ["19", "69"], ["19", "70"], ["19", "74"], ["19", "136"], ["19", "139"], ["19", "141"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "90"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "93"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "100"], ["93", "103"], ["93", "108"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "131"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["21", "30"], ["26", "36"], ["34", "40"], ["38", "44"], ["63", "66"], ["66", "72"], ["70", "76"], ["136", "139"], ["139", "141"], ["141", "145"], ["23", "21"], ["28", "26"], ["36", "34"], ["40", "38"], ["44", "47"], ["47", "54"], ["47", "63"], ["50", "47"], ["72", "70"], ["76", "79"], ["79", "87"], ["79", "136"], ["82", "79"], ["30", "28"], ["53", "50"], ["54", "59"], ["57", "53"], ["86", "91"], ["86", "82"], ["59", "57"], ["87", "86"], ["91", "97"], ["95", "100"], ["100", "111"], ["100", "82"], ["103", "100"], ["97", "95"], ["105", "103"], ["111", "114"], ["114", "123"], ["114", "105"], ["117", "114"], ["121", "132"], ["121", "117"], ["131", "117"], ["122", "121"], ["122", "128"], ["127", "121"], ["132", "131"], ["123", "122"], ["128", "127"], ["17", "23"], ["18", "145"], ["21", "145"], ["28", "145"], ["26", "145"], ["26", "145"], ["34", "145"], ["34", "145"], ["38", "145"], ["40", "145"], ["38", "145"], ["38", "145"], ["63", "145"], ["66", "145"], ["66", "145"], ["70", "145"], ["70", "145"], ["70", "145"], ["76", "145"], ["79", "145"], ["79", "145"], ["79", "145"], ["136", "145"], ["136", "145"], ["139", "145"], ["141", "145"], ["141", "145"], ["86", "145"], ["86", "145"], ["91", "145"], ["95", "145"], ["95", "145"], ["100", "145"], ["100", "145"], ["82", "145"], ["111", "145"], ["114", "145"], ["114", "145"], ["103", "145"], ["103", "145"], ["122", "145"], ["121", "145"], ["127", "145"], ["121", "145"], ["121", "145"], ["131", "145"], ["131", "145"], ["117", "145"], ["53", "145"], ["57", "145"], ["57", "145"], ["53", "145"], ["53", "145"], ["50", "145"], ["66", "145"], ["17", "18"], ["23", "21"], ["28", "26"], ["28", "26"], ["36", "34"], ["40", "38"], ["17", "63"], ["72", "70"], ["17", "44"], ["17", "66"], ["34", "66"], ["53", "66"], ["17", "76"], ["17", "136"], ["63", "136"], ["91", "136"], ["136", "139"], ["17", "139"], ["139", "141"], ["17", "141"], ["17", "23"], ["23", "28"], ["17", "28"], ["21", "28"], ["26", "36"], ["17", "36"], ["28", "40"], ["17", "40"], ["44", "47"], ["50", "47"], ["17", "47"], ["36", "47"], ["47", "50"], ["17", "50"], ["57", "53"], ["57", "53"], ["47", "72"], ["17", "72"], ["76", "79"], ["82", "79"], ["17", "79"], ["72", "79"], ["114", "79"], ["79", "82"], ["17", "82"], ["40", "57"], ["17", "57"], ["38", "57"], ["70", "86"], ["63", "91"], ["17", "91"], ["66", "95"], ["53", "95"], ["66", "103"], ["95", "100"], ["103", "100"], ["17", "100"], ["100", "103"], ["122", "103"], ["17", "103"], ["79", "111"], ["17", "111"], ["111", "114"], ["117", "114"], ["17", "114"], ["79", "114"], ["114", "117"], ["17", "117"], ["17", "131"], ["122", "121"], ["122", "121"], ["127", "121"], ["66", "122"], ["100", "122"], ["17", "122"], ["70", "127"], ["131", "127"], ["47", "47"], ["47", "57"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "53"], ["79", "87"], ["79", "82"], ["79", "79"], ["79", "86"], ["86", "95"], ["86", "97"], ["86", "91"], ["86", "100"], ["100", "114"], ["100", "103"], ["100", "105"], ["100", "100"], ["100", "111"], ["114", "122"], ["114", "114"], ["114", "121"], ["114", "123"], ["114", "117"], ["121", "131"], ["121", "132"], ["122", "128"], ["122", "127"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,String[] st = nl())<SUB>2</SUB>>", "23": "<(nl,nl())<SUB>2</SUB>>", "25": "<(LOCAL,int n: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,n,int n = pi(st[0]))<SUB>3</SUB>>", "29": "<(IDENTIFIER,this,pi(st[0]))<SUB>3</SUB>>", "31": "<(IDENTIFIER,st,pi(st[0]))<SUB>3</SUB>>", "33": "<(LOCAL,int[] input: int[])<SUB>4</SUB>>", "35": "<(IDENTIFIER,input,int[] input = new int[n])<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "39": "<(IDENTIFIER,st,st = nl())<SUB>5</SUB>>", "41": "<(IDENTIFIER,this,nl())<SUB>5</SUB>>", "43": "<(LOCAL,int i: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,input[i] = pi(st[i]))<SUB>7</SUB>>", "55": "<(IDENTIFIER,input,input[i] = pi(st[i]))<SUB>7</SUB>>", "57": "<(pi,pi(st[i]))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,st[i])<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,pi(st[i]))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>9</SUB>>", "65": "<(LITERAL,0,int ans = 0)<SUB>9</SUB>>", "67": "<(IDENTIFIER,Arrays,sort(input))<SUB>10</SUB>>", "69": "<(LOCAL,boolean[] dp: boolean[])<SUB>11</SUB>>", "71": "<(IDENTIFIER,dp,boolean[] dp = new boolean[n])<SUB>11</SUB>>", "73": "<(IDENTIFIER,n,new boolean[n])<SUB>11</SUB>>", "75": "<(LOCAL,int i: int)<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,if (!dp[i]),if (!dp[i]))<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>13</SUB>>", "89": "<(IDENTIFIER,i,!dp[i])<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>14</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int j = input[i]; Some(j &lt;= 200); j += input[i]),for (int j = input[i]; Some(j &lt;= 200); j += input[i]))<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,int j = input[i])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,input[i])<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,int j = input[i])<SUB>15</SUB>>", "101": "<(IDENTIFIER,j,j &lt;= 200)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.assignmentPlus,j += input[i])<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,input[i])<SUB>15</SUB>>", "107": "<(IDENTIFIER,i,j += input[i])<SUB>15</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int k = i; Some(k &lt; n); k++),for (int k = i; Some(k &lt; n); k++))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,int k = i)<SUB>16</SUB>>", "113": "<(IDENTIFIER,i,int k = i)<SUB>16</SUB>>", "115": "<(IDENTIFIER,k,k &lt; n)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,k++)<SUB>16</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.logicalAnd,input[k] == j &amp;&amp; !dp[k])<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,input[k])<SUB>17</SUB>>", "125": "<(IDENTIFIER,k,input[k] == j)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.logicalNot,!dp[k])<SUB>17</SUB>>", "129": "<(IDENTIFIER,dp,!dp[k])<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,dp[k] = true)<SUB>17</SUB>>", "133": "<(IDENTIFIER,dp,dp[k] = true)<SUB>17</SUB>>", "135": "<(LITERAL,true,dp[k] = true)<SUB>17</SUB>>", "137": "<(IDENTIFIER,out,println(ans))<SUB>22</SUB>>", "139": "<(flush,flush())<SUB>24</SUB>>", "141": "<(close,close())<SUB>25</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}