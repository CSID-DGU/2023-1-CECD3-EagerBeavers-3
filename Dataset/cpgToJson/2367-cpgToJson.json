{"edges": [["17", "19"], ["17", "145"], ["17", "146"], ["17", "147"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "46"], ["19", "47"], ["19", "50"], ["19", "82"], ["19", "85"], ["19", "86"], ["19", "90"], ["19", "143"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["30", "35"], ["30", "38"], ["30", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "39"], ["40", "41"], ["40", "44"], ["41", "42"], ["41", "43"], ["44", "45"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "80"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "102"], ["100", "106"], ["100", "107"], ["100", "111"], ["100", "112"], ["100", "119"], ["100", "132"], ["102", "103"], ["102", "104"], ["104", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "131"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["132", "133"], ["132", "136"], ["132", "139"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["21", "28"], ["26", "32"], ["47", "52"], ["82", "88"], ["86", "92"], ["143", "147"], ["23", "21"], ["28", "26"], ["32", "35"], ["35", "41"], ["35", "47"], ["38", "35"], ["40", "38"], ["52", "55"], ["55", "63"], ["55", "82"], ["58", "55"], ["88", "86"], ["92", "95"], ["95", "104"], ["95", "143"], ["98", "95"], ["41", "44"], ["44", "40"], ["102", "109"], ["107", "115"], ["112", "127"], ["119", "133"], ["63", "66"], ["66", "74"], ["66", "58"], ["69", "66"], ["104", "102"], ["109", "107"], ["114", "112"], ["121", "119"], ["133", "136"], ["133", "140"], ["136", "98"], ["115", "114"], ["122", "121"], ["140", "98"], ["73", "80"], ["73", "69"], ["80", "69"], ["124", "122"], ["74", "77"], ["77", "73"], ["125", "124"], ["127", "125"], ["17", "23"], ["18", "147"], ["21", "147"], ["26", "147"], ["26", "147"], ["26", "147"], ["47", "147"], ["55", "147"], ["55", "147"], ["82", "147"], ["88", "147"], ["86", "147"], ["86", "147"], ["92", "147"], ["95", "147"], ["95", "147"], ["95", "147"], ["143", "147"], ["102", "147"], ["109", "147"], ["107", "147"], ["107", "147"], ["115", "147"], ["115", "147"], ["114", "147"], ["112", "147"], ["112", "147"], ["125", "147"], ["125", "147"], ["124", "147"], ["122", "147"], ["121", "147"], ["119", "147"], ["119", "147"], ["133", "147"], ["133", "147"], ["140", "147"], ["140", "147"], ["136", "147"], ["136", "147"], ["98", "147"], ["63", "147"], ["66", "147"], ["66", "147"], ["58", "147"], ["73", "147"], ["73", "147"], ["73", "147"], ["80", "147"], ["69", "147"], ["40", "147"], ["40", "147"], ["38", "147"], ["143", "147"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "47"], ["17", "82"], ["88", "86"], ["17", "32"], ["44", "40"], ["17", "52"], ["47", "82"], ["80", "82"], ["17", "92"], ["17", "143"], ["17", "23"], ["21", "28"], ["17", "28"], ["32", "35"], ["38", "35"], ["17", "35"], ["28", "35"], ["35", "38"], ["17", "38"], ["52", "55"], ["58", "55"], ["17", "55"], ["35", "55"], ["66", "58"], ["17", "58"], ["23", "88"], ["44", "88"], ["17", "88"], ["92", "95"], ["98", "95"], ["17", "95"], ["86", "95"], ["95", "98"], ["17", "98"], ["104", "102"], ["109", "107"], ["115", "112"], ["115", "112"], ["17", "112"], ["121", "119"], ["121", "119"], ["23", "44"], ["17", "44"], ["17", "63"], ["63", "66"], ["69", "66"], ["17", "66"], ["55", "66"], ["66", "69"], ["17", "69"], ["88", "104"], ["109", "104"], ["17", "104"], ["104", "109"], ["17", "109"], ["115", "114"], ["115", "114"], ["17", "114"], ["82", "121"], ["133", "121"], ["17", "121"], ["124", "121"], ["124", "121"], ["119", "133"], ["17", "133"], ["140", "136"], ["17", "136"], ["107", "115"], ["17", "115"], ["102", "115"], ["82", "122"], ["133", "122"], ["17", "122"], ["124", "122"], ["124", "122"], ["136", "140"], ["17", "140"], ["26", "73"], ["40", "73"], ["47", "80"], ["17", "80"], ["125", "124"], ["125", "124"], ["17", "124"], ["127", "125"], ["17", "125"], ["127", "125"], ["112", "127"], ["17", "127"], ["35", "38"], ["35", "40"], ["35", "44"], ["35", "35"], ["35", "41"], ["55", "66"], ["55", "58"], ["55", "63"], ["55", "55"], ["95", "107"], ["95", "115"], ["95", "98"], ["95", "122"], ["95", "102"], ["95", "114"], ["95", "104"], ["95", "119"], ["95", "121"], ["95", "95"], ["95", "112"], ["95", "127"], ["95", "124"], ["95", "125"], ["95", "109"], ["95", "133"], ["66", "73"], ["66", "77"], ["66", "66"], ["66", "69"], ["66", "74"], ["133", "136"], ["133", "140"], ["73", "80"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] a: int[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>3</SUB>>", "29": "<(IDENTIFIER,n,new int[n])<SUB>3</SUB>>", "31": "<(LOCAL,int i: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,i,int i = 0)<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,i &lt; n)<SUB>4</SUB>>", "39": "<(IDENTIFIER,i,i++)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>5</SUB>>", "43": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int inv = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int inv = 0)<SUB>6</SUB>>", "51": "<(LOCAL,int i: int)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "65": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,j,j &lt; i)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.greaterThan,a[j] &gt; a[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,a,a[j] &gt; a[i])<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,a[j] &gt; a[i])<SUB>9</SUB>>", "81": "<(IDENTIFIER,inv,inv++)<SUB>10</SUB>>", "83": "<(IDENTIFIER,inv,inv %= 2)<SUB>13</SUB>>", "85": "<(LOCAL,int q: int)<SUB>14</SUB>>", "87": "<(IDENTIFIER,q,int q = nextInt())<SUB>14</SUB>>", "89": "<(IDENTIFIER,in,nextInt())<SUB>14</SUB>>", "91": "<(LOCAL,int i: int)<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>15</SUB>>", "97": "<(IDENTIFIER,q,i &lt; q)<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "101": "<(LOCAL,int l: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,l,int l = nextInt())<SUB>16</SUB>>", "105": "<(IDENTIFIER,in,nextInt())<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>17</SUB>>", "109": "<(nextInt,nextInt())<SUB>17</SUB>>", "111": "<(LOCAL,int num: int)<SUB>18</SUB>>", "113": "<(IDENTIFIER,num,int num = r - l + 1)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.subtraction,r - l)<SUB>18</SUB>>", "117": "<(IDENTIFIER,l,r - l)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.assignment,inv = (inv + num * (num - 1) / 2) % 2)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.modulo,(inv + num * (num - 1) / 2) % 2)<SUB>19</SUB>>", "123": "<(IDENTIFIER,inv,inv + num * (num - 1) / 2)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.multiplication,num * (num - 1))<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.subtraction,num - 1)<SUB>19</SUB>>", "129": "<(LITERAL,1,num - 1)<SUB>19</SUB>>", "131": "<(LITERAL,2,(inv + num * (num - 1) / 2) % 2)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.equals,inv == 0)<SUB>20</SUB>>", "135": "<(LITERAL,0,inv == 0)<SUB>20</SUB>>", "137": "<(IDENTIFIER,printWriter,println(&quot;even&quot;))<SUB>21</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>23</SUB>>", "141": "<(IDENTIFIER,printWriter,println(&quot;odd&quot;))<SUB>23</SUB>>", "143": "<(closeall,closeall())<SUB>25</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}