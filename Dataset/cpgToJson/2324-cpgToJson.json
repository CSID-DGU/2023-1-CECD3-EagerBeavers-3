{"edges": [["19", "21"], ["19", "193"], ["19", "194"], ["19", "195"], ["21", "22"], ["21", "23"], ["21", "4"], ["21", "26"], ["21", "29"], ["21", "33"], ["21", "34"], ["21", "38"], ["21", "39"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "68"], ["21", "75"], ["21", "76"], ["21", "80"], ["21", "85"], ["21", "186"], ["23", "24"], ["23", "25"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "67"], ["65", "66"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "149"], ["95", "158"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "115"], ["107", "138"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["139", "140"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "185"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["23", "28"], ["26", "32"], ["29", "36"], ["34", "41"], ["39", "47"], ["45", "51"], ["68", "78"], ["76", "81"], ["80", "87"], ["186", "195"], ["28", "26"], ["30", "29"], ["36", "34"], ["41", "39"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "70"], ["57", "54"], ["69", "68"], ["78", "76"], ["81", "80"], ["87", "90"], ["90", "98"], ["90", "189"], ["93", "90"], ["187", "190"], ["190", "186"], ["32", "30"], ["60", "57"], ["70", "69"], ["149", "160"], ["189", "187"], ["61", "65"], ["64", "60"], ["98", "101"], ["101", "111"], ["101", "150"], ["104", "101"], ["150", "154"], ["153", "149"], ["160", "163"], ["163", "170"], ["163", "93"], ["166", "163"], ["65", "64"], ["154", "153"], ["169", "166"], ["108", "118"], ["108", "142"], ["170", "177"], ["173", "169"], ["109", "108"], ["174", "173"], ["111", "109"], ["117", "125"], ["117", "104"], ["140", "104"], ["175", "181"], ["180", "174"], ["118", "117"], ["123", "104"], ["141", "146"], ["146", "140"], ["177", "175"], ["181", "180"], ["124", "132"], ["129", "123"], ["142", "141"], ["125", "124"], ["130", "135"], ["135", "129"], ["132", "130"], ["19", "23"], ["20", "195"], ["23", "195"], ["23", "195"], ["26", "195"], ["29", "195"], ["29", "195"], ["36", "195"], ["34", "195"], ["34", "195"], ["39", "195"], ["39", "195"], ["39", "195"], ["45", "195"], ["45", "195"], ["45", "195"], ["51", "195"], ["68", "195"], ["68", "195"], ["76", "195"], ["76", "195"], ["76", "195"], ["80", "195"], ["87", "195"], ["90", "195"], ["90", "195"], ["90", "195"], ["186", "195"], ["186", "195"], ["186", "195"], ["98", "195"], ["101", "195"], ["149", "195"], ["149", "195"], ["149", "195"], ["160", "195"], ["163", "195"], ["163", "195"], ["93", "195"], ["169", "195"], ["174", "195"], ["174", "195"], ["173", "195"], ["173", "195"], ["169", "195"], ["169", "195"], ["166", "195"], ["108", "195"], ["108", "195"], ["140", "195"], ["140", "195"], ["140", "195"], ["117", "195"], ["117", "195"], ["123", "195"], ["123", "195"], ["123", "195"], ["104", "195"], ["60", "195"], ["65", "195"], ["64", "195"], ["60", "195"], ["60", "195"], ["57", "195"], ["19", "20"], ["19", "23"], ["19", "26"], ["36", "34"], ["41", "39"], ["41", "39"], ["47", "45"], ["19", "68"], ["78", "76"], ["19", "80"], ["26", "29"], ["19", "29"], ["19", "51"], ["19", "87"], ["76", "186"], ["80", "186"], ["29", "36"], ["19", "36"], ["34", "41"], ["19", "41"], ["41", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["64", "60"], ["64", "60"], ["19", "78"], ["87", "90"], ["93", "90"], ["19", "90"], ["54", "90"], ["90", "93"], ["111", "93"], ["132", "93"], ["19", "93"], ["19", "98"], ["19", "160"], ["65", "64"], ["19", "64"], ["98", "101"], ["104", "101"], ["19", "101"], ["101", "104"], ["118", "104"], ["135", "104"], ["19", "104"], ["160", "163"], ["166", "163"], ["19", "163"], ["19", "166"], ["163", "166"], ["173", "169"], ["173", "169"], ["36", "65"], ["19", "65"], ["45", "108"], ["19", "108"], ["76", "173"], ["140", "173"], ["123", "173"], ["23", "173"], ["19", "173"], ["76", "140"], ["169", "140"], ["76", "174"], ["140", "174"], ["123", "174"], ["90", "111"], ["132", "111"], ["19", "111"], ["118", "117"], ["118", "117"], ["19", "117"], ["101", "118"], ["19", "118"], ["163", "177"], ["19", "177"], ["118", "135"], ["19", "135"], ["111", "132"], ["19", "132"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "54"], ["54", "61"], ["54", "65"], ["90", "98"], ["90", "154"], ["90", "163"], ["90", "149"], ["90", "150"], ["90", "153"], ["90", "93"], ["90", "101"], ["90", "90"], ["90", "160"], ["101", "104"], ["101", "101"], ["101", "108"], ["101", "111"], ["101", "109"], ["163", "169"], ["163", "163"], ["163", "170"], ["163", "181"], ["163", "173"], ["163", "174"], ["163", "180"], ["163", "166"], ["163", "177"], ["163", "175"], ["108", "146"], ["108", "118"], ["108", "141"], ["108", "142"], ["108", "140"], ["108", "117"], ["117", "132"], ["117", "129"], ["117", "130"], ["117", "123"], ["117", "135"], ["117", "124"], ["117", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,long MOD = 1000000007)<SUB>2</SUB>>", "25": "<(LITERAL,1000000007,long MOD = 1000000007)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(LOCAL,int n: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n][5010])<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.alloc,new long[n][5010])>", "43": "<(LITERAL,5010,new long[n][5010])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,char[] program = new char[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new char[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,program[i])<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,program[i] = charAt(0))<SUB>9</SUB>>", "65": "<(next,next())<SUB>9</SUB>>", "67": "<(LITERAL,0,charAt(0))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>12</SUB>>", "71": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>12</SUB>>", "73": "<(LITERAL,0,dp[0][0] = 1)<SUB>12</SUB>>", "75": "<(LOCAL,long[] acc: long[])<SUB>14</SUB>>", "77": "<(IDENTIFIER,acc,long[] acc = new long[5010])<SUB>14</SUB>>", "79": "<(LITERAL,5010,new long[5010])<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,acc[0])<SUB>16</SUB>>", "83": "<(LITERAL,0,acc[0] = 1)<SUB>16</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>18</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "89": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "97": "<(LOCAL,int j: int)<SUB>19</SUB>>", "99": "<(IDENTIFIER,j,int j = 0)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.lessThan,j &lt; 5010)<SUB>19</SUB>>", "103": "<(LITERAL,5010,j &lt; 5010)<SUB>19</SUB>>", "105": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "107": "<(CONTROL_STRUCTURE,if (program[i - 1] == 'f'),if (program[i - 1] == 'f'))<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,program[i - 1])<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>20</SUB>>", "113": "<(LITERAL,1,i - 1)<SUB>20</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.greaterEqualsThan,j - 1 &gt;= 0)<SUB>21</SUB>>", "119": "<(IDENTIFIER,j,j - 1)<SUB>21</SUB>>", "121": "<(LITERAL,0,j - 1 &gt;= 0)<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i - 1][j - 1])<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,i,dp[i][j] = dp[i - 1][j - 1])<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j - 1])<SUB>22</SUB>>", "131": "<(IDENTIFIER,dp,dp[i][j] = dp[i - 1][j - 1])<SUB>22</SUB>>", "133": "<(IDENTIFIER,i,i - 1)<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>22</SUB>>", "137": "<(LITERAL,1,j - 1)<SUB>22</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>25</SUB>>", "143": "<(IDENTIFIER,dp,dp[i][j] = acc[j])<SUB>25</SUB>>", "145": "<(IDENTIFIER,j,dp[i][j] = acc[j])<SUB>25</SUB>>", "147": "<(IDENTIFIER,acc,dp[i][j] = acc[j])<SUB>25</SUB>>", "149": "<(&lt;operator&gt;.assignment,acc[5009] = dp[i][5009])<SUB>28</SUB>>", "151": "<(IDENTIFIER,acc,acc[5009] = dp[i][5009])<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,dp[i][5009])<SUB>28</SUB>>", "155": "<(IDENTIFIER,dp,acc[5009] = dp[i][5009])<SUB>28</SUB>>", "157": "<(LITERAL,5009,acc[5009] = dp[i][5009])<SUB>28</SUB>>", "159": "<(LOCAL,int j: int)<SUB>29</SUB>>", "161": "<(IDENTIFIER,j,int j = 5008)<SUB>29</SUB>>", "163": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>29</SUB>>", "165": "<(LITERAL,0,j &gt;= 0)<SUB>29</SUB>>", "167": "<(IDENTIFIER,j,j--)<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.assignment,acc[j] = (acc[j + 1] + dp[i][j]) % MOD)<SUB>30</SUB>>", "171": "<(IDENTIFIER,acc,acc[j] = (acc[j + 1] + dp[i][j]) % MOD)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.modulo,(acc[j + 1] + dp[i][j]) % MOD)<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,acc[j + 1])<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.addition,j + 1)<SUB>30</SUB>>", "179": "<(LITERAL,1,j + 1)<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>30</SUB>>", "183": "<(IDENTIFIER,i,acc[j + 1] + dp[i][j])<SUB>30</SUB>>", "185": "<(IDENTIFIER,MOD,(acc[j + 1] + dp[i][j]) % MOD)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "189": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "191": "<(IDENTIFIER,acc,System.out.println(acc[0]))<SUB>33</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}