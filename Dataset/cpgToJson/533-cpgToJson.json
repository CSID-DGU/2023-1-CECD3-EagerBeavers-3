{"edges": [["21", "22"], ["21", "23"], ["21", "160"], ["21", "161"], ["21", "162"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "155"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "42"], ["38", "39"], ["38", "41"], ["39", "40"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "48"], ["42", "52"], ["42", "68"], ["42", "109"], ["42", "145"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "60"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["68", "69"], ["68", "78"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "96"], ["82", "104"], ["83", "84"], ["83", "95"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "102"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["104", "105"], ["105", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "137"], ["124", "125"], ["124", "136"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "35"], ["33", "39"], ["155", "162"], ["26", "24"], ["30", "28"], ["35", "33"], ["38", "44"], ["38", "158"], ["156", "155"], ["39", "38"], ["44", "50"], ["48", "54"], ["158", "156"], ["50", "48"], ["53", "62"], ["53", "71"], ["69", "79"], ["69", "112"], ["110", "120"], ["110", "146"], ["146", "39"], ["146", "151"], ["54", "53"], ["54", "57"], ["57", "53"], ["61", "66"], ["66", "71"], ["70", "69"], ["70", "75"], ["75", "69"], ["79", "86"], ["111", "110"], ["111", "116"], ["116", "110"], ["120", "127"], ["150", "39"], ["62", "61"], ["71", "70"], ["83", "98"], ["83", "106"], ["112", "111"], ["124", "139"], ["124", "146"], ["151", "150"], ["84", "83"], ["97", "102"], ["102", "112"], ["125", "124"], ["138", "143"], ["143", "146"], ["85", "91"], ["90", "84"], ["98", "97"], ["106", "112"], ["126", "132"], ["131", "125"], ["139", "138"], ["86", "87"], ["87", "85"], ["91", "92"], ["92", "90"], ["127", "128"], ["128", "126"], ["132", "133"], ["133", "131"], ["21", "26"], ["22", "162"], ["24", "162"], ["27", "162"], ["28", "162"], ["31", "162"], ["35", "162"], ["33", "162"], ["33", "162"], ["39", "162"], ["38", "162"], ["38", "162"], ["155", "162"], ["155", "162"], ["155", "162"], ["44", "162"], ["50", "162"], ["48", "162"], ["48", "162"], ["53", "162"], ["53", "162"], ["53", "162"], ["61", "162"], ["61", "162"], ["66", "162"], ["70", "162"], ["69", "162"], ["69", "162"], ["79", "162"], ["84", "162"], ["92", "162"], ["90", "162"], ["83", "162"], ["83", "162"], ["106", "162"], ["97", "162"], ["97", "162"], ["102", "162"], ["112", "162"], ["111", "162"], ["110", "162"], ["110", "162"], ["120", "162"], ["125", "162"], ["133", "162"], ["131", "162"], ["124", "162"], ["124", "162"], ["124", "162"], ["138", "162"], ["138", "162"], ["143", "162"], ["146", "162"], ["146", "162"], ["150", "162"], ["150", "162"], ["21", "22"], ["21", "24"], ["21", "28"], ["35", "33"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "155"], ["62", "155"], ["98", "155"], ["139", "155"], ["151", "155"], ["21", "155"], ["27", "35"], ["21", "35"], ["39", "38"], ["21", "38"], ["21", "44"], ["50", "48"], ["33", "39"], ["21", "39"], ["35", "50"], ["21", "50"], ["54", "53"], ["54", "53"], ["57", "53"], ["57", "53"], ["70", "69"], ["70", "69"], ["75", "69"], ["75", "69"], ["146", "69"], ["21", "79"], ["111", "110"], ["111", "110"], ["69", "110"], ["116", "110"], ["116", "110"], ["21", "120"], ["44", "146"], ["66", "146"], ["75", "146"], ["102", "146"], ["116", "146"], ["143", "146"], ["21", "146"], ["48", "54"], ["21", "54"], ["54", "57"], ["21", "57"], ["62", "61"], ["62", "61"], ["21", "61"], ["44", "66"], ["21", "66"], ["71", "70"], ["71", "70"], ["21", "70"], ["44", "75"], ["66", "75"], ["21", "75"], ["71", "79"], ["112", "111"], ["112", "111"], ["21", "111"], ["44", "116"], ["66", "116"], ["75", "116"], ["102", "116"], ["21", "116"], ["112", "120"], ["151", "150"], ["151", "150"], ["21", "150"], ["31", "62"], ["98", "62"], ["139", "62"], ["151", "62"], ["21", "62"], ["54", "71"], ["57", "71"], ["21", "71"], ["84", "83"], ["92", "83"], ["21", "83"], ["71", "112"], ["83", "112"], ["106", "112"], ["21", "112"], ["125", "124"], ["133", "124"], ["21", "124"], ["31", "151"], ["62", "151"], ["98", "151"], ["139", "151"], ["21", "151"], ["21", "84"], ["87", "84"], ["87", "84"], ["92", "84"], ["92", "84"], ["98", "97"], ["98", "97"], ["21", "97"], ["44", "102"], ["66", "102"], ["75", "102"], ["21", "102"], ["21", "106"], ["21", "125"], ["128", "125"], ["128", "125"], ["133", "125"], ["133", "125"], ["139", "138"], ["139", "138"], ["21", "138"], ["44", "143"], ["66", "143"], ["75", "143"], ["102", "143"], ["116", "143"], ["21", "143"], ["21", "85"], ["87", "85"], ["87", "85"], ["21", "90"], ["92", "90"], ["92", "90"], ["31", "98"], ["62", "98"], ["139", "98"], ["151", "98"], ["21", "98"], ["83", "106"], ["21", "126"], ["128", "126"], ["128", "126"], ["21", "131"], ["133", "131"], ["133", "131"], ["31", "139"], ["62", "139"], ["98", "139"], ["151", "139"], ["21", "139"], ["92", "87"], ["133", "87"], ["21", "87"], ["79", "87"], ["87", "92"], ["21", "92"], ["87", "92"], ["92", "128"], ["133", "128"], ["21", "128"], ["120", "128"], ["128", "133"], ["21", "133"], ["128", "133"], ["38", "146"], ["38", "38"], ["38", "69"], ["38", "50"], ["38", "112"], ["38", "44"], ["38", "54"], ["38", "70"], ["38", "111"], ["38", "48"], ["38", "71"], ["38", "53"], ["38", "110"], ["38", "39"], ["53", "61"], ["53", "66"], ["53", "62"], ["69", "84"], ["69", "85"], ["69", "92"], ["69", "87"], ["69", "91"], ["69", "90"], ["69", "79"], ["69", "86"], ["69", "83"], ["110", "120"], ["110", "128"], ["110", "131"], ["110", "132"], ["110", "127"], ["110", "126"], ["110", "124"], ["110", "125"], ["110", "133"], ["146", "150"], ["146", "151"], ["54", "57"], ["70", "75"], ["111", "116"], ["83", "98"], ["83", "102"], ["83", "97"], ["83", "106"], ["124", "138"], ["124", "139"], ["124", "143"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Reader())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Reader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Reader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,StringBuilder finalAnswer = new StringBuilder())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,finalAnswer,new StringBuilder())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.postDecrement,t--)<SUB>6</SUB>>", "41": "<(LITERAL,0,t-- &gt; 0)<SUB>6</SUB>>", "43": "<(LOCAL,int count: int)<SUB>7</SUB>>", "45": "<(IDENTIFIER,count,int count = 0)<SUB>7</SUB>>", "47": "<(LOCAL,int n: int)<SUB>8</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.logicalOr,n == 2 || n == 4)<SUB>9</SUB>>", "55": "<(IDENTIFIER,n,n == 2)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.equals,n == 4)<SUB>9</SUB>>", "59": "<(LITERAL,4,n == 4)<SUB>9</SUB>>", "61": "<(append,finalAnswer.append(&quot;YES&quot;).append('\\n'))<SUB>10</SUB>>", "63": "<(IDENTIFIER,finalAnswer,finalAnswer.append(&quot;YES&quot;))<SUB>10</SUB>>", "65": "<(LITERAL,'\\n',finalAnswer.append(&quot;YES&quot;).append('\\n'))<SUB>10</SUB>>", "67": "<(IDENTIFIER,count,count++)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.logicalAnd,n % 2 == 0 &amp;&amp; count == 0)<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.modulo,n % 2)<SUB>13</SUB>>", "73": "<(LITERAL,2,n % 2)<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.equals,count == 0)<SUB>13</SUB>>", "77": "<(LITERAL,0,count == 0)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.assignmentDivision,n /= 2)<SUB>14</SUB>>", "81": "<(LITERAL,2,n /= 2)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.equals,(int) Math.sqrt(n) * (int) Math.sqrt(n) == n)<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n))<SUB>15</SUB>>", "87": "<(sqrt,Math.sqrt(n))<SUB>15</SUB>>", "89": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>15</SUB>>", "91": "<(TYPE_REF,int,int)<SUB>15</SUB>>", "93": "<(IDENTIFIER,Math,Math.sqrt(n))<SUB>15</SUB>>", "95": "<(IDENTIFIER,n,(int) Math.sqrt(n) * (int) Math.sqrt(n) == n)<SUB>15</SUB>>", "97": "<(append,finalAnswer.append(&quot;YES&quot;).append('\\n'))<SUB>16</SUB>>", "99": "<(IDENTIFIER,finalAnswer,finalAnswer.append(&quot;YES&quot;))<SUB>16</SUB>>", "101": "<(LITERAL,'\\n',finalAnswer.append(&quot;YES&quot;).append('\\n'))<SUB>16</SUB>>", "103": "<(IDENTIFIER,count,count++)<SUB>17</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "107": "<(IDENTIFIER,n,n *= 2)<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,if (n % 4 == 0 &amp;&amp; count == 0),if (n % 4 == 0 &amp;&amp; count == 0))<SUB>23</SUB>>", "111": "<(&lt;operator&gt;.equals,n % 4 == 0)<SUB>23</SUB>>", "113": "<(IDENTIFIER,n,n % 4)<SUB>23</SUB>>", "115": "<(LITERAL,0,n % 4 == 0)<SUB>23</SUB>>", "117": "<(IDENTIFIER,count,count == 0)<SUB>23</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "121": "<(IDENTIFIER,n,n /= 4)<SUB>24</SUB>>", "123": "<(CONTROL_STRUCTURE,if ((int) Math.sqrt(n) * (int) Math.sqrt(n) == n),if ((int) Math.sqrt(n) * (int) Math.sqrt(n) == n))<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.multiplication,(int) Math.sqrt(n) * (int) Math.sqrt(n))<SUB>25</SUB>>", "127": "<(TYPE_REF,int,int)<SUB>25</SUB>>", "129": "<(IDENTIFIER,Math,Math.sqrt(n))<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n))<SUB>25</SUB>>", "133": "<(sqrt,Math.sqrt(n))<SUB>25</SUB>>", "135": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>25</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "139": "<(append,finalAnswer.append(&quot;YES&quot;))<SUB>26</SUB>>", "141": "<(LITERAL,&quot;YES&quot;,finalAnswer.append(&quot;YES&quot;))<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,count++)<SUB>27</SUB>>", "145": "<(CONTROL_STRUCTURE,if (count == 0),if (count == 0))<SUB>30</SUB>>", "147": "<(IDENTIFIER,count,count == 0)<SUB>30</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "151": "<(append,finalAnswer.append(&quot;NO&quot;))<SUB>31</SUB>>", "153": "<(LITERAL,&quot;NO&quot;,finalAnswer.append(&quot;NO&quot;))<SUB>31</SUB>>", "155": "<(println,System.out.println(finalAnswer))<SUB>34</SUB>>", "157": "<(IDENTIFIER,System,System.out.println(finalAnswer))<SUB>34</SUB>>", "159": "<(IDENTIFIER,finalAnswer,System.out.println(finalAnswer))<SUB>34</SUB>>", "161": "<(MODIFIER,STATIC)>"}}