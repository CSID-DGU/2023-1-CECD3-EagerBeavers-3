{"edges": [["19", "21"], ["19", "129"], ["19", "130"], ["19", "131"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "33"], ["21", "41"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "36"], ["34", "35"], ["36", "37"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "48"], ["45", "49"], ["45", "53"], ["45", "54"], ["45", "57"], ["45", "124"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "63"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["63", "70"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "86"], ["70", "90"], ["71", "72"], ["71", "79"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["91", "92"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "120"], ["105", "106"], ["105", "113"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["22", "28"], ["25", "30"], ["30", "34"], ["24", "22"], ["26", "25"], ["34", "39"], ["34", "42"], ["42", "131"], ["42", "46"], ["28", "26"], ["37", "42"], ["46", "51"], ["49", "54"], ["54", "59"], ["124", "42"], ["39", "37"], ["51", "49"], ["58", "67"], ["58", "127"], ["125", "124"], ["59", "58"], ["65", "77"], ["127", "125"], ["67", "65"], ["71", "87"], ["71", "94"], ["72", "84"], ["79", "71"], ["87", "127"], ["74", "72"], ["81", "79"], ["76", "74"], ["83", "81"], ["93", "101"], ["93", "127"], ["77", "76"], ["84", "83"], ["94", "93"], ["99", "111"], ["101", "99"], ["105", "121"], ["105", "127"], ["106", "118"], ["113", "105"], ["121", "127"], ["108", "106"], ["115", "113"], ["110", "108"], ["117", "115"], ["111", "110"], ["118", "117"], ["19", "24"], ["20", "131"], ["22", "131"], ["25", "131"], ["25", "131"], ["30", "131"], ["34", "131"], ["34", "131"], ["39", "131"], ["37", "131"], ["37", "131"], ["42", "131"], ["42", "131"], ["124", "131"], ["124", "131"], ["19", "20"], ["19", "22"], ["19", "30"], ["22", "25"], ["19", "25"], ["25", "34"], ["19", "34"], ["39", "37"], ["30", "42"], ["37", "42"], ["46", "42"], ["19", "42"], ["51", "49"], ["19", "54"], ["42", "46"], ["19", "46"], ["54", "124"], ["121", "124"], ["87", "124"], ["19", "124"], ["34", "39"], ["19", "39"], ["34", "51"], ["39", "51"], ["19", "51"], ["59", "58"], ["59", "58"], ["19", "58"], ["67", "65"], ["67", "65"], ["49", "59"], ["19", "59"], ["59", "67"], ["19", "67"], ["72", "71"], ["72", "71"], ["79", "71"], ["79", "71"], ["19", "87"], ["74", "72"], ["19", "72"], ["74", "72"], ["81", "79"], ["19", "79"], ["81", "79"], ["79", "74"], ["113", "74"], ["19", "74"], ["65", "74"], ["72", "81"], ["19", "81"], ["65", "81"], ["19", "76"], ["65", "76"], ["19", "83"], ["65", "83"], ["94", "93"], ["94", "93"], ["19", "93"], ["101", "99"], ["101", "99"], ["67", "94"], ["19", "94"], ["94", "101"], ["19", "101"], ["106", "105"], ["106", "105"], ["113", "105"], ["113", "105"], ["19", "121"], ["108", "106"], ["19", "106"], ["108", "106"], ["115", "113"], ["19", "113"], ["115", "113"], ["79", "108"], ["19", "108"], ["99", "108"], ["106", "115"], ["19", "115"], ["99", "115"], ["19", "110"], ["99", "110"], ["19", "117"], ["99", "117"], ["34", "37"], ["34", "39"], ["42", "49"], ["42", "42"], ["42", "51"], ["42", "46"], ["42", "59"], ["42", "54"], ["42", "58"], ["42", "127"], ["42", "124"], ["42", "125"], ["58", "77"], ["58", "81"], ["58", "84"], ["58", "72"], ["58", "67"], ["58", "74"], ["58", "76"], ["58", "65"], ["58", "79"], ["58", "83"], ["58", "71"], ["71", "94"], ["71", "87"], ["71", "93"], ["93", "115"], ["93", "113"], ["93", "99"], ["93", "106"], ["93", "101"], ["93", "105"], ["93", "118"], ["93", "110"], ["93", "117"], ["93", "108"], ["93", "111"], ["105", "121"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int t: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,t,int t = 0)<SUB>3</SUB>>", "33": "<(CONTROL_STRUCTURE,if (sc.hasNextInt()),if (sc.hasNextInt()))<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,hasNextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(CONTROL_STRUCTURE,while (t &gt; 0),while (t &gt; 0))<SUB>7</SUB>>", "43": "<(IDENTIFIER,t,t &gt; 0)<SUB>7</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "47": "<(IDENTIFIER,t,t--)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>9</SUB>>", "51": "<(nextInt,nextInt())<SUB>9</SUB>>", "53": "<(LOCAL,String ans: java.lang.String)<SUB>10</SUB>>", "55": "<(IDENTIFIER,ans,String ans = &quot;NO&quot;)<SUB>10</SUB>>", "57": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.modulo,n % 2)<SUB>11</SUB>>", "61": "<(LITERAL,2,n % 2)<SUB>11</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,int p = n / 2)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.division,n / 2)<SUB>12</SUB>>", "69": "<(LITERAL,2,n / 2)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.equals,Math.ceil(Math.sqrt((double) p)) == Math.floor(Math.sqrt((double) p)))<SUB>13</SUB>>", "73": "<(IDENTIFIER,Math,Math.ceil(Math.sqrt((double) p)))<SUB>13</SUB>>", "75": "<(IDENTIFIER,Math,Math.sqrt((double) p))<SUB>13</SUB>>", "77": "<(TYPE_REF,double,double)<SUB>13</SUB>>", "79": "<(floor,Math.floor(Math.sqrt((double) p)))<SUB>13</SUB>>", "81": "<(sqrt,Math.sqrt((double) p))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.cast,(double) p)<SUB>13</SUB>>", "85": "<(IDENTIFIER,p,(double) p)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,ans = &quot;YES&quot;)<SUB>14</SUB>>", "89": "<(LITERAL,&quot;YES&quot;,ans = &quot;YES&quot;)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.equals,n % 4 == 0)<SUB>17</SUB>>", "95": "<(IDENTIFIER,n,n % 4)<SUB>17</SUB>>", "97": "<(LITERAL,0,n % 4 == 0)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.assignment,p = n / 4)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.division,n / 4)<SUB>18</SUB>>", "103": "<(LITERAL,4,n / 4)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.equals,Math.ceil(Math.sqrt((double) p)) == Math.floor(Math.sqrt((double) p)))<SUB>19</SUB>>", "107": "<(IDENTIFIER,Math,Math.ceil(Math.sqrt((double) p)))<SUB>19</SUB>>", "109": "<(IDENTIFIER,Math,Math.sqrt((double) p))<SUB>19</SUB>>", "111": "<(TYPE_REF,double,double)<SUB>19</SUB>>", "113": "<(floor,Math.floor(Math.sqrt((double) p)))<SUB>19</SUB>>", "115": "<(sqrt,Math.sqrt((double) p))<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.cast,(double) p)<SUB>19</SUB>>", "119": "<(IDENTIFIER,p,(double) p)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,ans = &quot;YES&quot;)<SUB>20</SUB>>", "123": "<(LITERAL,&quot;YES&quot;,ans = &quot;YES&quot;)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "129": "<(MODIFIER,PUBLIC)>", "131": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}