{"edges": [["19", "21"], ["19", "121"], ["19", "122"], ["19", "123"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "53"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "66"], ["21", "69"], ["21", "116"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "114"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "83"], ["80", "84"], ["80", "89"], ["81", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["100", "101"], ["100", "108"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["53", "59"], ["57", "62"], ["62", "66"], ["66", "70"], ["116", "123"], ["24", "22"], ["29", "27"], ["34", "32"], ["38", "41"], ["41", "48"], ["41", "53"], ["44", "41"], ["59", "57"], ["70", "76"], ["70", "119"], ["117", "116"], ["47", "44"], ["114", "70"], ["119", "117"], ["48", "51"], ["51", "47"], ["75", "81"], ["75", "114"], ["76", "75"], ["81", "86"], ["84", "91"], ["86", "84"], ["91", "94"], ["94", "103"], ["94", "114"], ["97", "94"], ["101", "110"], ["101", "97"], ["102", "101"], ["109", "97"], ["103", "102"], ["110", "109"], ["19", "24"], ["20", "123"], ["22", "123"], ["25", "123"], ["29", "123"], ["27", "123"], ["27", "123"], ["32", "123"], ["32", "123"], ["38", "123"], ["41", "123"], ["41", "123"], ["53", "123"], ["53", "123"], ["57", "123"], ["57", "123"], ["57", "123"], ["62", "123"], ["66", "123"], ["70", "123"], ["70", "123"], ["70", "123"], ["116", "123"], ["116", "123"], ["116", "123"], ["75", "123"], ["75", "123"], ["81", "123"], ["84", "123"], ["84", "123"], ["84", "123"], ["91", "123"], ["94", "123"], ["94", "123"], ["114", "123"], ["102", "123"], ["102", "123"], ["101", "123"], ["101", "123"], ["109", "123"], ["109", "123"], ["97", "123"], ["47", "123"], ["51", "123"], ["47", "123"], ["47", "123"], ["44", "123"], ["53", "123"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["59", "57"], ["19", "62"], ["19", "66"], ["22", "25"], ["19", "25"], ["19", "38"], ["19", "53"], ["32", "53"], ["47", "53"], ["62", "116"], ["81", "116"], ["19", "116"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["38", "41"], ["44", "41"], ["19", "41"], ["34", "41"], ["41", "44"], ["19", "44"], ["51", "47"], ["41", "59"], ["19", "59"], ["66", "70"], ["114", "70"], ["19", "70"], ["59", "70"], ["94", "70"], ["70", "114"], ["19", "114"], ["29", "51"], ["19", "51"], ["57", "75"], ["19", "75"], ["53", "84"], ["62", "81"], ["19", "81"], ["70", "91"], ["19", "91"], ["91", "94"], ["97", "94"], ["19", "94"], ["70", "94"], ["94", "97"], ["19", "97"], ["102", "101"], ["102", "101"], ["19", "101"], ["19", "109"], ["53", "102"], ["47", "102"], ["84", "102"], ["19", "102"], ["41", "47"], ["41", "48"], ["41", "51"], ["41", "44"], ["41", "41"], ["70", "75"], ["70", "114"], ["70", "76"], ["70", "70"], ["75", "94"], ["75", "81"], ["75", "84"], ["75", "91"], ["75", "86"], ["94", "94"], ["94", "102"], ["94", "103"], ["94", "97"], ["94", "101"], ["101", "110"], ["101", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int[] nums: int[])<SUB>4</SUB>>", "33": "<(IDENTIFIER,nums,int[] nums = new int[N])<SUB>4</SUB>>", "35": "<(IDENTIFIER,N,new int[N])<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>5</SUB>>", "43": "<(IDENTIFIER,N,i &lt; N)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,nums[i] = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,nums,nums[i] = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(sort,sort(nums))<SUB>8</SUB>>", "55": "<(IDENTIFIER,nums,sort(nums))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean[] hit = new boolean[N])<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.alloc,new boolean[N])>", "61": "<(LOCAL,int colors: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,colors,int colors = 0)<SUB>10</SUB>>", "65": "<(LOCAL,int index: int)<SUB>11</SUB>>", "67": "<(IDENTIFIER,index,int index = 0)<SUB>11</SUB>>", "69": "<(CONTROL_STRUCTURE,while (index &lt; N),while (index &lt; N))<SUB>12</SUB>>", "71": "<(IDENTIFIER,index,index &lt; N)<SUB>12</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.equals,hit[index] == false)<SUB>13</SUB>>", "77": "<(IDENTIFIER,hit,hit[index] == false)<SUB>13</SUB>>", "79": "<(LITERAL,false,hit[index] == false)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,colors++)<SUB>14</SUB>>", "83": "<(LOCAL,int div: int)<SUB>15</SUB>>", "85": "<(IDENTIFIER,div,int div = nums[index])<SUB>15</SUB>>", "87": "<(IDENTIFIER,nums,int div = nums[index])<SUB>15</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int i = index; Some(i &lt; N); i++),for (int i = index; Some(i &lt; N); i++))<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.assignment,int i = index)<SUB>16</SUB>>", "93": "<(IDENTIFIER,index,int i = index)<SUB>16</SUB>>", "95": "<(IDENTIFIER,i,i &lt; N)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.equals,nums[i] % div == 0)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>17</SUB>>", "105": "<(IDENTIFIER,i,nums[i] % div)<SUB>17</SUB>>", "107": "<(LITERAL,0,nums[i] % div == 0)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.assignment,hit[i] = true)<SUB>18</SUB>>", "111": "<(IDENTIFIER,hit,hit[i] = true)<SUB>18</SUB>>", "113": "<(LITERAL,true,hit[i] = true)<SUB>18</SUB>>", "115": "<(IDENTIFIER,index,index++)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}