{"edges": [["21", "23"], ["21", "213"], ["21", "214"], ["21", "215"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "69"], ["23", "70"], ["23", "74"], ["23", "79"], ["23", "195"], ["23", "211"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "190"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "113"], ["105", "126"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["116", "119"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["127", "128"], ["127", "149"], ["128", "129"], ["128", "144"], ["129", "130"], ["129", "137"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["149", "156"], ["149", "157"], ["149", "168"], ["149", "169"], ["149", "176"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["178", "189"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "203"], ["195", "205"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["205", "207"], ["205", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "55"], ["70", "75"], ["74", "81"], ["211", "215"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["55", "58"], ["58", "64"], ["58", "72"], ["61", "58"], ["63", "61"], ["72", "70"], ["75", "74"], ["81", "84"], ["84", "91"], ["84", "197"], ["87", "84"], ["197", "200"], ["200", "208"], ["200", "211"], ["203", "200"], ["205", "203"], ["30", "28"], ["37", "35"], ["64", "67"], ["67", "63"], ["91", "96"], ["190", "87"], ["208", "205"], ["96", "99"], ["99", "107"], ["99", "191"], ["102", "99"], ["191", "190"], ["106", "121"], ["106", "131"], ["107", "110"], ["110", "106"], ["114", "102"], ["116", "114"], ["128", "153"], ["128", "102"], ["119", "116"], ["129", "145"], ["144", "128"], ["151", "162"], ["157", "173"], ["169", "183"], ["176", "102"], ["120", "119"], ["130", "138"], ["137", "129"], ["145", "144"], ["153", "151"], ["159", "157"], ["171", "169"], ["178", "176"], ["121", "120"], ["131", "134"], ["134", "130"], ["138", "141"], ["141", "137"], ["161", "159"], ["173", "171"], ["180", "178"], ["162", "165"], ["165", "161"], ["181", "186"], ["186", "180"], ["183", "181"], ["21", "26"], ["22", "215"], ["24", "215"], ["27", "215"], ["27", "215"], ["31", "215"], ["34", "215"], ["34", "215"], ["39", "215"], ["46", "215"], ["44", "215"], ["44", "215"], ["49", "215"], ["49", "215"], ["49", "215"], ["70", "215"], ["70", "215"], ["70", "215"], ["74", "215"], ["74", "215"], ["74", "215"], ["81", "215"], ["197", "215"], ["200", "215"], ["200", "215"], ["200", "215"], ["211", "215"], ["211", "215"], ["205", "215"], ["205", "215"], ["203", "215"], ["91", "215"], ["91", "215"], ["96", "215"], ["99", "215"], ["99", "215"], ["190", "215"], ["190", "215"], ["190", "215"], ["87", "215"], ["106", "215"], ["106", "215"], ["106", "215"], ["129", "215"], ["137", "215"], ["137", "215"], ["128", "215"], ["144", "215"], ["144", "215"], ["128", "215"], ["128", "215"], ["153", "215"], ["151", "215"], ["151", "215"], ["161", "215"], ["161", "215"], ["159", "215"], ["157", "215"], ["157", "215"], ["173", "215"], ["171", "215"], ["169", "215"], ["169", "215"], ["178", "215"], ["181", "215"], ["183", "215"], ["181", "215"], ["180", "215"], ["180", "215"], ["178", "215"], ["176", "215"], ["176", "215"], ["116", "215"], ["120", "215"], ["119", "215"], ["119", "215"], ["116", "215"], ["114", "215"], ["114", "215"], ["102", "215"], ["63", "215"], ["67", "215"], ["63", "215"], ["63", "215"], ["61", "215"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["72", "70"], ["44", "74"], ["21", "74"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["67", "63"], ["21", "81"], ["21", "197"], ["34", "211"], ["205", "211"], ["21", "211"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["55", "58"], ["61", "58"], ["21", "58"], ["51", "58"], ["58", "61"], ["21", "61"], ["58", "72"], ["21", "72"], ["81", "84"], ["87", "84"], ["21", "84"], ["72", "84"], ["99", "87"], ["21", "87"], ["144", "91"], ["21", "91"], ["44", "91"], ["91", "190"], ["176", "190"], ["114", "190"], ["21", "190"], ["197", "200"], ["203", "200"], ["21", "200"], ["84", "200"], ["200", "203"], ["21", "203"], ["34", "205"], ["21", "205"], ["70", "205"], ["190", "205"], ["46", "67"], ["21", "67"], ["21", "96"], ["96", "99"], ["102", "99"], ["21", "99"], ["84", "99"], ["99", "102"], ["21", "102"], ["49", "106"], ["137", "106"], ["161", "106"], ["63", "106"], ["137", "106"], ["161", "106"], ["116", "114"], ["116", "114"], ["116", "114"], ["178", "116"], ["21", "116"], ["91", "116"], ["176", "116"], ["114", "116"], ["70", "116"], ["144", "116"], ["129", "128"], ["144", "128"], ["144", "128"], ["144", "151"], ["21", "151"], ["159", "157"], ["159", "157"], ["171", "169"], ["171", "169"], ["178", "176"], ["178", "176"], ["178", "176"], ["70", "119"], ["144", "119"], ["21", "119"], ["130", "129"], ["130", "129"], ["137", "129"], ["137", "129"], ["145", "144"], ["145", "144"], ["21", "144"], ["70", "120"], ["144", "120"], ["21", "120"], ["49", "130"], ["106", "130"], ["106", "130"], ["49", "137"], ["130", "137"], ["130", "137"], ["21", "145"], ["144", "145"], ["44", "145"], ["144", "153"], ["21", "153"], ["178", "159"], ["116", "159"], ["21", "159"], ["161", "159"], ["161", "159"], ["159", "171"], ["21", "171"], ["173", "171"], ["173", "171"], ["183", "178"], ["21", "178"], ["181", "178"], ["181", "178"], ["70", "178"], ["91", "178"], ["176", "178"], ["114", "178"], ["49", "161"], ["137", "161"], ["137", "161"], ["157", "173"], ["21", "173"], ["151", "173"], ["181", "180"], ["181", "180"], ["70", "180"], ["173", "181"], ["21", "181"], ["183", "181"], ["183", "181"], ["171", "183"], ["21", "183"], ["169", "183"], ["58", "64"], ["58", "67"], ["58", "58"], ["58", "61"], ["58", "63"], ["84", "96"], ["84", "84"], ["84", "87"], ["84", "91"], ["84", "191"], ["84", "190"], ["84", "99"], ["200", "208"], ["200", "205"], ["200", "200"], ["200", "203"], ["99", "107"], ["99", "102"], ["99", "99"], ["99", "106"], ["99", "110"], ["106", "120"], ["106", "145"], ["106", "128"], ["106", "114"], ["106", "131"], ["106", "119"], ["106", "121"], ["106", "144"], ["106", "129"], ["106", "134"], ["106", "138"], ["106", "137"], ["106", "130"], ["106", "141"], ["106", "116"], ["128", "169"], ["128", "161"], ["128", "178"], ["128", "151"], ["128", "162"], ["128", "153"], ["128", "181"], ["128", "173"], ["128", "186"], ["128", "180"], ["128", "171"], ["128", "183"], ["128", "157"], ["128", "159"], ["128", "176"], ["128", "165"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int r: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,r,int r = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] xs = new int[n])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,xs[i] = nextInt())<SUB>8</SUB>>", "65": "<(IDENTIFIER,xs,xs[i] = nextInt())<SUB>8</SUB>>", "67": "<(nextInt,nextInt())<SUB>8</SUB>>", "69": "<(LOCAL,double[] ys: double[])<SUB>9</SUB>>", "71": "<(IDENTIFIER,ys,double[] ys = new double[n])<SUB>9</SUB>>", "73": "<(IDENTIFIER,n,new double[n])<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,ys[0])<SUB>10</SUB>>", "77": "<(LITERAL,0,ys[0] = r)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "83": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,double worst = r)<SUB>12</SUB>>", "93": "<(IDENTIFIER,r,double worst = r)<SUB>12</SUB>>", "95": "<(LOCAL,int j: int)<SUB>13</SUB>>", "97": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,j &lt; i)<SUB>13</SUB>>", "103": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,if (xs[i] == xs[j]),if (xs[i] == xs[j]))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>14</SUB>>", "109": "<(IDENTIFIER,i,xs[i] == xs[j])<SUB>14</SUB>>", "111": "<(IDENTIFIER,xs,xs[i] == xs[j])<SUB>14</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "115": "<(IDENTIFIER,worst,worst = Math.max(worst, ys[j] + r + r))<SUB>15</SUB>>", "117": "<(IDENTIFIER,Math,Math.max(worst, ys[j] + r + r))<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.addition,ys[j] + r + r)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,ys[j])<SUB>15</SUB>>", "123": "<(IDENTIFIER,j,ys[j] + r)<SUB>15</SUB>>", "125": "<(IDENTIFIER,r,ys[j] + r + r)<SUB>15</SUB>>", "127": "<(CONTROL_STRUCTURE,if ((xs[i] - xs[j]) * (xs[i] - xs[j]) &lt;= 4 * r * r),if ((xs[i] - xs[j]) * (xs[i] - xs[j]) &lt;= 4 * r * r))<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.multiplication,(xs[i] - xs[j]) * (xs[i] - xs[j]))<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>16</SUB>>", "133": "<(IDENTIFIER,i,xs[i] - xs[j])<SUB>16</SUB>>", "135": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.subtraction,xs[i] - xs[j])<SUB>16</SUB>>", "139": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,xs[j])<SUB>16</SUB>>", "143": "<(IDENTIFIER,j,xs[i] - xs[j])<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>16</SUB>>", "147": "<(IDENTIFIER,r,4 * r)<SUB>16</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.assignment,double hypot = r + r)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.addition,r + r)<SUB>18</SUB>>", "155": "<(IDENTIFIER,r,r + r)<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.assignment,double adj = Math.abs((xs[i] - xs[j])))<SUB>19</SUB>>", "159": "<(abs,Math.abs((xs[i] - xs[j])))<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.subtraction,xs[i] - xs[j])<SUB>19</SUB>>", "163": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,xs[j])<SUB>19</SUB>>", "167": "<(IDENTIFIER,j,xs[i] - xs[j])<SUB>19</SUB>>", "169": "<(&lt;operator&gt;.assignment,double theta = Math.acos(adj / hypot))<SUB>20</SUB>>", "171": "<(acos,Math.acos(adj / hypot))<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.division,adj / hypot)<SUB>20</SUB>>", "175": "<(IDENTIFIER,hypot,adj / hypot)<SUB>20</SUB>>", "177": "<(IDENTIFIER,worst,worst = Math.max(hypot * Math.sin(theta) + ys[j], worst))<SUB>21</SUB>>", "179": "<(IDENTIFIER,Math,Math.max(hypot * Math.sin(theta) + ys[j], worst))<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.multiplication,hypot * Math.sin(theta))<SUB>21</SUB>>", "183": "<(sin,Math.sin(theta))<SUB>21</SUB>>", "185": "<(IDENTIFIER,theta,Math.sin(theta))<SUB>21</SUB>>", "187": "<(IDENTIFIER,ys,hypot * Math.sin(theta) + ys[j])<SUB>21</SUB>>", "189": "<(IDENTIFIER,worst,Math.max(hypot * Math.sin(theta) + ys[j], worst))<SUB>21</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>24</SUB>>", "193": "<(IDENTIFIER,i,ys[i] = worst)<SUB>24</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "199": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "201": "<(IDENTIFIER,i,i &lt; n)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "205": "<(printf,printf(&quot;%.10f &quot;, ys[i]))<SUB>27</SUB>>", "207": "<(LITERAL,&quot;%.10f &quot;,printf(&quot;%.10f &quot;, ys[i]))<SUB>27</SUB>>", "209": "<(IDENTIFIER,ys,printf(&quot;%.10f &quot;, ys[i]))<SUB>27</SUB>>", "211": "<(close,close())<SUB>28</SUB>>", "213": "<(MODIFIER,PUBLIC)>", "215": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}