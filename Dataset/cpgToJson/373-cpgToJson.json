{"edges": [["21", "23"], ["21", "231"], ["21", "232"], ["21", "233"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "58"], ["23", "6"], ["23", "204"], ["23", "207"], ["23", "208"], ["23", "226"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "64"], ["58", "95"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["64", "65"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "94"], ["88", "89"], ["88", "91"], ["89", "90"], ["91", "92"], ["91", "93"], ["95", "96"], ["96", "97"], ["96", "98"], ["96", "103"], ["96", "104"], ["96", "107"], ["96", "148"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "124"], ["117", "137"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "136"], ["132", "133"], ["132", "135"], ["133", "134"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "156"], ["148", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["159", "160"], ["159", "163"], ["159", "183"], ["160", "161"], ["160", "162"], ["163", "164"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "182"], ["176", "177"], ["176", "179"], ["177", "178"], ["179", "180"], ["179", "181"], ["183", "184"], ["184", "185"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "203"], ["197", "198"], ["197", "200"], ["198", "199"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "206"], ["207", "5"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["204", "207"], ["207", "210"], ["226", "233"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "60"], ["49", "46"], ["59", "67"], ["59", "102"], ["206", "204"], ["210", "213"], ["213", "222"], ["213", "229"], ["216", "213"], ["227", "226"], ["30", "28"], ["52", "49"], ["60", "59"], ["219", "216"], ["229", "227"], ["53", "56"], ["56", "52"], ["67", "70"], ["70", "78"], ["70", "206"], ["73", "70"], ["98", "104"], ["104", "109"], ["221", "219"], ["100", "98"], ["109", "112"], ["112", "121"], ["112", "150"], ["115", "112"], ["150", "153"], ["153", "160"], ["153", "206"], ["156", "153"], ["222", "221"], ["77", "84"], ["77", "73"], ["102", "100"], ["119", "125"], ["78", "77"], ["83", "73"], ["121", "119"], ["125", "133"], ["125", "138"], ["138", "142"], ["138", "115"], ["160", "166"], ["160", "187"], ["84", "89"], ["87", "83"], ["129", "138"], ["142", "145"], ["145", "115"], ["88", "87"], ["131", "129"], ["165", "172"], ["165", "156"], ["89", "91"], ["91", "88"], ["132", "131"], ["166", "165"], ["171", "156"], ["186", "193"], ["186", "156"], ["133", "132"], ["172", "177"], ["175", "171"], ["187", "186"], ["192", "156"], ["176", "175"], ["193", "198"], ["196", "192"], ["177", "179"], ["179", "176"], ["197", "196"], ["198", "200"], ["200", "197"], ["21", "26"], ["22", "233"], ["24", "233"], ["27", "233"], ["27", "233"], ["34", "233"], ["32", "233"], ["32", "233"], ["37", "233"], ["37", "233"], ["37", "233"], ["59", "233"], ["59", "233"], ["98", "233"], ["98", "233"], ["98", "233"], ["104", "233"], ["104", "233"], ["160", "233"], ["160", "233"], ["186", "233"], ["186", "233"], ["192", "233"], ["197", "233"], ["196", "233"], ["192", "233"], ["192", "233"], ["165", "233"], ["165", "233"], ["171", "233"], ["176", "233"], ["175", "233"], ["171", "233"], ["171", "233"], ["156", "233"], ["119", "233"], ["119", "233"], ["125", "233"], ["132", "233"], ["131", "233"], ["129", "233"], ["129", "233"], ["138", "233"], ["138", "233"], ["138", "233"], ["142", "233"], ["142", "233"], ["142", "233"], ["145", "233"], ["145", "233"], ["115", "233"], ["204", "233"], ["207", "233"], ["210", "233"], ["213", "233"], ["213", "233"], ["213", "233"], ["226", "233"], ["226", "233"], ["226", "233"], ["221", "233"], ["219", "233"], ["219", "233"], ["216", "233"], ["77", "233"], ["77", "233"], ["83", "233"], ["88", "233"], ["87", "233"], ["83", "233"], ["83", "233"], ["73", "233"], ["52", "233"], ["56", "233"], ["52", "233"], ["52", "233"], ["49", "233"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "204"], ["24", "27"], ["21", "27"], ["21", "43"], ["204", "207"], ["21", "207"], ["21", "210"], ["207", "226"], ["219", "226"], ["21", "226"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["56", "52"], ["60", "59"], ["60", "59"], ["21", "59"], ["210", "213"], ["216", "213"], ["21", "213"], ["153", "213"], ["70", "213"], ["213", "216"], ["21", "216"], ["46", "60"], ["21", "60"], ["21", "67"], ["21", "104"], ["207", "219"], ["21", "219"], ["37", "219"], ["186", "219"], ["192", "219"], ["165", "219"], ["171", "219"], ["77", "219"], ["83", "219"], ["52", "219"], ["34", "56"], ["21", "56"], ["67", "70"], ["73", "70"], ["21", "70"], ["60", "70"], ["70", "73"], ["21", "73"], ["21", "109"], ["21", "150"], ["37", "221"], ["186", "221"], ["192", "221"], ["165", "221"], ["171", "221"], ["77", "221"], ["83", "221"], ["52", "221"], ["21", "221"], ["109", "112"], ["115", "112"], ["21", "112"], ["60", "112"], ["112", "115"], ["21", "115"], ["37", "119"], ["52", "119"], ["150", "153"], ["156", "153"], ["21", "153"], ["112", "153"], ["160", "156"], ["21", "156"], ["37", "77"], ["83", "77"], ["52", "77"], ["21", "77"], ["87", "83"], ["87", "83"], ["119", "125"], ["21", "125"], ["131", "129"], ["131", "129"], ["125", "138"], ["129", "138"], ["21", "138"], ["98", "138"], ["142", "138"], ["138", "142"], ["21", "142"], ["112", "145"], ["21", "145"], ["153", "160"], ["21", "160"], ["104", "160"], ["145", "160"], ["88", "87"], ["88", "87"], ["21", "87"], ["89", "88"], ["37", "88"], ["77", "88"], ["132", "131"], ["132", "131"], ["21", "131"], ["37", "165"], ["186", "165"], ["192", "165"], ["171", "165"], ["52", "165"], ["21", "165"], ["175", "171"], ["175", "171"], ["21", "89"], ["133", "132"], ["125", "132"], ["21", "132"], ["37", "186"], ["192", "186"], ["165", "186"], ["171", "186"], ["52", "186"], ["21", "186"], ["196", "192"], ["196", "192"], ["21", "133"], ["176", "175"], ["176", "175"], ["21", "175"], ["177", "176"], ["37", "176"], ["165", "176"], ["197", "196"], ["197", "196"], ["21", "196"], ["21", "177"], ["198", "197"], ["37", "197"], ["186", "197"], ["21", "198"], ["46", "52"], ["46", "56"], ["46", "49"], ["46", "46"], ["46", "53"], ["59", "98"], ["59", "102"], ["59", "67"], ["59", "150"], ["59", "104"], ["59", "153"], ["59", "112"], ["59", "100"], ["59", "70"], ["59", "109"], ["213", "213"], ["213", "221"], ["213", "216"], ["213", "222"], ["213", "219"], ["70", "73"], ["70", "77"], ["70", "70"], ["70", "78"], ["112", "115"], ["112", "119"], ["112", "121"], ["112", "112"], ["112", "138"], ["112", "125"], ["153", "153"], ["153", "160"], ["153", "156"], ["77", "84"], ["77", "87"], ["77", "91"], ["77", "88"], ["77", "89"], ["77", "83"], ["125", "131"], ["125", "132"], ["125", "129"], ["125", "133"], ["138", "145"], ["138", "142"], ["160", "187"], ["160", "186"], ["160", "166"], ["160", "165"], ["165", "179"], ["165", "171"], ["165", "176"], ["165", "177"], ["165", "175"], ["165", "172"], ["186", "192"], ["186", "196"], ["186", "197"], ["186", "198"], ["186", "193"], ["186", "200"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>9</SUB>>", "61": "<(IDENTIFIER,n,n % 2)<SUB>9</SUB>>", "63": "<(LITERAL,0,n % 2 == 0)<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.greaterEqualsThan,arr[i] &gt;= 0)<SUB>11</SUB>>", "79": "<(IDENTIFIER,arr,arr[i] &gt;= 0)<SUB>11</SUB>>", "81": "<(LITERAL,0,arr[i] &gt;= 0)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,arr[i] = -1 * arr[i] - 1)<SUB>12</SUB>>", "85": "<(IDENTIFIER,arr,arr[i] = -1 * arr[i] - 1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.subtraction,-1 * arr[i] - 1)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.minus,-1)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>12</SUB>>", "93": "<(IDENTIFIER,i,-1 * arr[i])<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "97": "<(LOCAL,int max: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,max,int max = Integer.MIN_VALUE)<SUB>17</SUB>>", "101": "<(IDENTIFIER,Integer,int max = Integer.MIN_VALUE)<SUB>17</SUB>>", "103": "<(LOCAL,int maxIndex: int)<SUB>18</SUB>>", "105": "<(IDENTIFIER,maxIndex,int maxIndex = 0)<SUB>18</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.assignment,int elem = arr[i])<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>20</SUB>>", "123": "<(IDENTIFIER,i,int elem = arr[i])<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.lessThan,elem &lt; 0)<SUB>21</SUB>>", "127": "<(LITERAL,0,elem &lt; 0)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.assignment,elem = -1 * elem - 1)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.subtraction,-1 * elem - 1)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "135": "<(IDENTIFIER,elem,-1 * elem)<SUB>22</SUB>>", "137": "<(CONTROL_STRUCTURE,if (elem &gt; max),if (elem &gt; max))<SUB>24</SUB>>", "139": "<(IDENTIFIER,elem,elem &gt; max)<SUB>24</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "143": "<(IDENTIFIER,max,max = elem)<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.assignment,maxIndex = i)<SUB>26</SUB>>", "147": "<(IDENTIFIER,i,maxIndex = i)<SUB>26</SUB>>", "149": "<(LOCAL,int i: int)<SUB>29</SUB>>", "151": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>29</SUB>>", "155": "<(IDENTIFIER,n,i &lt; n)<SUB>29</SUB>>", "157": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "159": "<(CONTROL_STRUCTURE,if (i == maxIndex),if (i == maxIndex))<SUB>30</SUB>>", "161": "<(IDENTIFIER,i,i == maxIndex)<SUB>30</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "165": "<(&lt;operator&gt;.lessThan,arr[i] &lt; 0)<SUB>31</SUB>>", "167": "<(IDENTIFIER,arr,arr[i] &lt; 0)<SUB>31</SUB>>", "169": "<(LITERAL,0,arr[i] &lt; 0)<SUB>31</SUB>>", "171": "<(&lt;operator&gt;.assignment,arr[i] = -1 * arr[i] - 1)<SUB>32</SUB>>", "173": "<(IDENTIFIER,arr,arr[i] = -1 * arr[i] - 1)<SUB>32</SUB>>", "175": "<(&lt;operator&gt;.subtraction,-1 * arr[i] - 1)<SUB>32</SUB>>", "177": "<(&lt;operator&gt;.minus,-1)<SUB>32</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>32</SUB>>", "181": "<(IDENTIFIER,i,-1 * arr[i])<SUB>32</SUB>>", "183": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "185": "<(CONTROL_STRUCTURE,if (arr[i] &gt;= 0),if (arr[i] &gt;= 0))<SUB>36</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>36</SUB>>", "189": "<(IDENTIFIER,i,arr[i] &gt;= 0)<SUB>36</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>37</SUB>>", "195": "<(IDENTIFIER,i,arr[i] = -1 * arr[i] - 1)<SUB>37</SUB>>", "197": "<(&lt;operator&gt;.multiplication,-1 * arr[i])<SUB>37</SUB>>", "199": "<(LITERAL,1,-1)<SUB>37</SUB>>", "201": "<(IDENTIFIER,arr,-1 * arr[i])<SUB>37</SUB>>", "203": "<(LITERAL,1,-1 * arr[i] - 1)<SUB>37</SUB>>", "204": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>42</SUB>>", "206": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>42</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>42</SUB>>", "209": "<(LOCAL,int i: int)<SUB>43</SUB>>", "211": "<(IDENTIFIER,i,int i = 0)<SUB>43</SUB>>", "213": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>43</SUB>>", "215": "<(IDENTIFIER,n,i &lt; n)<SUB>43</SUB>>", "217": "<(IDENTIFIER,i,i++)<SUB>43</SUB>>", "219": "<(append,sb.append(arr[i] + &quot; &quot;))<SUB>44</SUB>>", "221": "<(&lt;operator&gt;.addition,arr[i] + &quot; &quot;)<SUB>44</SUB>>", "223": "<(IDENTIFIER,arr,arr[i] + &quot; &quot;)<SUB>44</SUB>>", "225": "<(LITERAL,&quot; &quot;,arr[i] + &quot; &quot;)<SUB>44</SUB>>", "227": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "229": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "231": "<(MODIFIER,PUBLIC)>", "233": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}