{"edges": [["21", "22"], ["21", "23"], ["21", "230"], ["21", "231"], ["21", "232"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "59"], ["23", "62"], ["23", "63"], ["23", "66"], ["23", "67"], ["23", "70"], ["23", "89"], ["23", "96"], ["23", "97"], ["23", "104"], ["23", "111"], ["23", "196"], ["23", "197"], ["23", "200"], ["23", "223"], ["23", "228"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "88"], ["86", "87"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "130"], ["122", "166"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["130", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "159"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "158"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["166", "167"], ["167", "168"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "176"], ["168", "178"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "195"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["200", "205"], ["200", "208"], ["200", "210"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["210", "220"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["228", "229"], ["24", "31"], ["27", "40"], ["38", "41"], ["41", "45"], ["43", "51"], ["49", "56"], ["54", "59"], ["59", "63"], ["63", "67"], ["67", "72"], ["89", "101"], ["97", "106"], ["104", "113"], ["197", "202"], ["223", "228"], ["228", "232"], ["26", "24"], ["40", "38"], ["45", "43"], ["51", "49"], ["56", "54"], ["72", "75"], ["75", "82"], ["75", "91"], ["78", "75"], ["90", "89"], ["99", "97"], ["105", "104"], ["113", "116"], ["116", "126"], ["116", "197"], ["119", "116"], ["202", "205"], ["205", "215"], ["205", "225"], ["208", "205"], ["225", "223"], ["29", "36"], ["32", "27"], ["81", "78"], ["91", "90"], ["100", "99"], ["106", "105"], ["211", "220"], ["220", "208"], ["31", "29"], ["34", "32"], ["82", "86"], ["85", "81"], ["101", "100"], ["123", "132"], ["123", "170"], ["213", "211"], ["36", "34"], ["86", "85"], ["124", "123"], ["132", "137"], ["214", "213"], ["126", "124"], ["137", "140"], ["140", "154"], ["140", "119"], ["143", "140"], ["215", "214"], ["146", "161"], ["159", "143"], ["170", "173"], ["173", "181"], ["173", "119"], ["176", "173"], ["148", "146"], ["160", "159"], ["179", "176"], ["149", "148"], ["161", "160"], ["180", "189"], ["185", "179"], ["151", "149"], ["181", "180"], ["186", "185"], ["152", "151"], ["187", "192"], ["192", "186"], ["154", "152"], ["189", "187"], ["21", "26"], ["22", "232"], ["24", "232"], ["29", "232"], ["32", "232"], ["32", "232"], ["32", "232"], ["27", "232"], ["38", "232"], ["41", "232"], ["43", "232"], ["43", "232"], ["43", "232"], ["49", "232"], ["49", "232"], ["49", "232"], ["56", "232"], ["54", "232"], ["54", "232"], ["59", "232"], ["59", "232"], ["63", "232"], ["63", "232"], ["67", "232"], ["67", "232"], ["72", "232"], ["99", "232"], ["97", "232"], ["97", "232"], ["104", "232"], ["104", "232"], ["113", "232"], ["116", "232"], ["116", "232"], ["197", "232"], ["202", "232"], ["205", "232"], ["205", "232"], ["225", "232"], ["225", "232"], ["223", "232"], ["223", "232"], ["228", "232"], ["228", "232"], ["213", "232"], ["211", "232"], ["211", "232"], ["208", "232"], ["123", "232"], ["123", "232"], ["170", "232"], ["173", "232"], ["173", "232"], ["179", "232"], ["185", "232"], ["179", "232"], ["179", "232"], ["176", "232"], ["132", "232"], ["132", "232"], ["137", "232"], ["140", "232"], ["140", "232"], ["119", "232"], ["149", "232"], ["148", "232"], ["146", "232"], ["146", "232"], ["159", "232"], ["159", "232"], ["159", "232"], ["143", "232"], ["81", "232"], ["86", "232"], ["85", "232"], ["81", "232"], ["81", "232"], ["78", "232"], ["21", "22"], ["21", "24"], ["21", "38"], ["45", "43"], ["51", "49"], ["56", "54"], ["21", "59"], ["21", "63"], ["21", "67"], ["21", "89"], ["21", "97"], ["21", "104"], ["21", "197"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "72"], ["21", "113"], ["21", "202"], ["27", "223"], ["21", "223"], ["225", "223"], ["225", "223"], ["223", "228"], ["21", "228"], ["21", "29"], ["21", "37"], ["21", "45"], ["21", "51"], ["41", "56"], ["21", "56"], ["72", "75"], ["78", "75"], ["21", "75"], ["54", "75"], ["75", "78"], ["21", "78"], ["85", "81"], ["85", "81"], ["21", "99"], ["113", "116"], ["119", "116"], ["21", "116"], ["75", "116"], ["126", "119"], ["189", "119"], ["154", "119"], ["21", "119"], ["202", "205"], ["208", "205"], ["21", "205"], ["205", "208"], ["21", "208"], ["213", "211"], ["213", "211"], ["213", "220"], ["21", "220"], ["197", "225"], ["220", "225"], ["21", "225"], ["97", "225"], ["185", "225"], ["148", "225"], ["213", "225"], ["29", "32"], ["21", "32"], ["21", "100"], ["197", "211"], ["220", "211"], ["21", "211"], ["211", "220"], ["86", "85"], ["21", "85"], ["49", "123"], ["21", "123"], ["21", "132"], ["97", "213"], ["185", "213"], ["148", "213"], ["21", "213"], ["56", "86"], ["21", "86"], ["21", "137"], ["116", "126"], ["21", "126"], ["137", "140"], ["143", "140"], ["21", "140"], ["140", "143"], ["21", "143"], ["148", "146"], ["148", "146"], ["146", "159"], ["21", "159"], ["21", "170"], ["170", "173"], ["176", "173"], ["21", "173"], ["192", "176"], ["21", "176"], ["185", "179"], ["185", "179"], ["132", "148"], ["21", "148"], ["146", "148"], ["97", "148"], ["185", "148"], ["132", "149"], ["21", "149"], ["146", "149"], ["97", "185"], ["148", "185"], ["21", "185"], ["173", "192"], ["21", "192"], ["126", "154"], ["21", "154"], ["126", "189"], ["21", "189"], ["75", "75"], ["75", "81"], ["75", "85"], ["75", "86"], ["75", "82"], ["75", "78"], ["116", "119"], ["116", "116"], ["116", "123"], ["116", "126"], ["116", "124"], ["205", "214"], ["205", "215"], ["205", "213"], ["205", "208"], ["205", "205"], ["205", "220"], ["205", "211"], ["123", "132"], ["123", "170"], ["123", "173"], ["123", "137"], ["123", "140"], ["140", "154"], ["140", "146"], ["140", "161"], ["140", "149"], ["140", "151"], ["140", "148"], ["140", "152"], ["140", "160"], ["140", "159"], ["140", "140"], ["140", "143"], ["173", "192"], ["173", "179"], ["173", "185"], ["173", "189"], ["173", "181"], ["173", "187"], ["173", "173"], ["173", "186"], ["173", "180"], ["173", "176"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,$obj0,new OutputStreamWriter(System.out))>", "35": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>5</SUB>>", "40": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>5</SUB>>", "5": "<(IDENTIFIER,sc,new FastScanner())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int[][] dp = new int[6000][6000])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[6000][6000])>", "47": "<(LITERAL,6000,new int[6000][6000])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,char[] a = new char[6000])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new char[6000])>", "53": "<(LOCAL,int n: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,boolean flag = false)<SUB>9</SUB>>", "61": "<(LITERAL,false,boolean flag = false)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>10</SUB>>", "65": "<(LITERAL,0,int cnt = 0)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,char pre = 'f')<SUB>11</SUB>>", "69": "<(LITERAL,'f',char pre = 'f')<SUB>11</SUB>>", "71": "<(LOCAL,int i: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,i &lt;= n)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,a[i] = charAt(0))<SUB>14</SUB>>", "83": "<(IDENTIFIER,a,a[i] = charAt(0))<SUB>14</SUB>>", "85": "<(charAt,charAt(0))<SUB>14</SUB>>", "87": "<(IDENTIFIER,sc,next())<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.assignment,dp[1][1] = 1)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,dp[1])<SUB>17</SUB>>", "93": "<(LITERAL,1,dp[1][1] = 1)<SUB>17</SUB>>", "95": "<(LITERAL,1,dp[1][1] = 1)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.assignment,int mod = (int) 1e9 + 7)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.addition,(int) 1e9 + 7)<SUB>18</SUB>>", "101": "<(TYPE_REF,int,int)<SUB>18</SUB>>", "103": "<(LITERAL,7,(int) 1e9 + 7)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dp[1][1])<SUB>19</SUB>>", "107": "<(IDENTIFIER,dp,dp[1][1] = 1)<SUB>19</SUB>>", "109": "<(LITERAL,1,dp[1][1] = 1)<SUB>19</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n); i++),for (int i = 2; Some(i &lt;= n); i++))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>20</SUB>>", "115": "<(LITERAL,2,int i = 2)<SUB>20</SUB>>", "117": "<(IDENTIFIER,i,i &lt;= n)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.equals,a[i - 1] == 's')<SUB>22</SUB>>", "125": "<(IDENTIFIER,a,a[i - 1] == 's')<SUB>22</SUB>>", "127": "<(IDENTIFIER,i,i - 1)<SUB>22</SUB>>", "129": "<(LITERAL,'s',a[i - 1] == 's')<SUB>22</SUB>>", "131": "<(LOCAL,int now: int)<SUB>24</SUB>>", "133": "<(IDENTIFIER,now,int now = 0)<SUB>24</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int j = 5050; Some(j &gt;= 1); j--),for (int j = 5050; Some(j &gt;= 1); j--))<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.assignment,int j = 5050)<SUB>25</SUB>>", "139": "<(LITERAL,5050,int j = 5050)<SUB>25</SUB>>", "141": "<(IDENTIFIER,j,j &gt;= 1)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.postDecrement,j--)<SUB>25</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "147": "<(IDENTIFIER,now,now = (now + dp[i - 1][j]) % mod)<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.addition,now + dp[i - 1][j])<SUB>27</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j])<SUB>27</SUB>>", "153": "<(IDENTIFIER,dp,now + dp[i - 1][j])<SUB>27</SUB>>", "155": "<(IDENTIFIER,i,i - 1)<SUB>27</SUB>>", "157": "<(IDENTIFIER,j,now + dp[i - 1][j])<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.assignment,dp[i][j] = now)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>28</SUB>>", "163": "<(IDENTIFIER,i,dp[i][j] = now)<SUB>28</SUB>>", "165": "<(IDENTIFIER,now,dp[i][j] = now)<SUB>28</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "169": "<(LOCAL,int j: int)<SUB>33</SUB>>", "171": "<(IDENTIFIER,j,int j = 5050)<SUB>33</SUB>>", "173": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 1)<SUB>33</SUB>>", "175": "<(LITERAL,1,j &gt;= 1)<SUB>33</SUB>>", "177": "<(IDENTIFIER,j,j--)<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i - 1][j - 1] % mod)<SUB>35</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>35</SUB>>", "183": "<(IDENTIFIER,i,dp[i][j] = dp[i - 1][j - 1] % mod)<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.modulo,dp[i - 1][j - 1] % mod)<SUB>35</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>35</SUB>>", "189": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>35</SUB>>", "191": "<(LITERAL,1,i - 1)<SUB>35</SUB>>", "193": "<(IDENTIFIER,j,j - 1)<SUB>35</SUB>>", "195": "<(IDENTIFIER,mod,dp[i - 1][j - 1] % mod)<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>39</SUB>>", "199": "<(LITERAL,0,int ans = 0)<SUB>39</SUB>>", "201": "<(LOCAL,int i: int)<SUB>40</SUB>>", "203": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "205": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 5050)<SUB>40</SUB>>", "207": "<(LITERAL,5050,i &lt;= 5050)<SUB>40</SUB>>", "209": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "211": "<(&lt;operator&gt;.assignmentPlus,ans += dp[n][i] % mod)<SUB>42</SUB>>", "213": "<(&lt;operator&gt;.modulo,dp[n][i] % mod)<SUB>42</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[n])<SUB>42</SUB>>", "217": "<(IDENTIFIER,n,dp[n][i] % mod)<SUB>42</SUB>>", "219": "<(IDENTIFIER,mod,dp[n][i] % mod)<SUB>42</SUB>>", "221": "<(IDENTIFIER,ans,ans %= mod)<SUB>43</SUB>>", "223": "<(println,println(ans % mod))<SUB>45</SUB>>", "225": "<(&lt;operator&gt;.modulo,ans % mod)<SUB>45</SUB>>", "227": "<(IDENTIFIER,mod,ans % mod)<SUB>45</SUB>>", "229": "<(IDENTIFIER,out,flush())<SUB>47</SUB>>", "231": "<(MODIFIER,STATIC)>"}}