{"edges": [["30", "32"], ["30", "241"], ["30", "242"], ["30", "243"], ["32", "4"], ["32", "33"], ["32", "36"], ["32", "37"], ["32", "38"], ["32", "42"], ["32", "43"], ["32", "6"], ["32", "48"], ["32", "51"], ["32", "52"], ["32", "12"], ["32", "116"], ["32", "119"], ["32", "120"], ["32", "121"], ["32", "126"], ["32", "208"], ["32", "214"], ["32", "215"], ["32", "219"], ["33", "34"], ["33", "35"], ["36", "3"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "5"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "8"], ["77", "83"], ["77", "86"], ["77", "93"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "7"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "97"], ["93", "103"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["104", "10"], ["104", "105"], ["104", "108"], ["104", "109"], ["104", "112"], ["105", "106"], ["105", "107"], ["108", "9"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "115"], ["116", "117"], ["116", "118"], ["119", "11"], ["121", "122"], ["121", "123"], ["123", "124"], ["124", "125"], ["126", "127"], ["126", "129"], ["127", "128"], ["129", "130"], ["129", "131"], ["129", "135"], ["129", "136"], ["129", "140"], ["129", "14"], ["129", "143"], ["129", "146"], ["129", "147"], ["131", "132"], ["131", "133"], ["133", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "13"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "156"], ["147", "158"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["154", "155"], ["156", "157"], ["158", "159"], ["158", "160"], ["158", "165"], ["158", "197"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "177"], ["165", "181"], ["166", "167"], ["166", "169"], ["167", "168"], ["169", "170"], ["169", "174"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["182", "183"], ["182", "191"], ["183", "184"], ["183", "188"], ["184", "185"], ["184", "187"], ["185", "186"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "194"], ["192", "193"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "203"], ["197", "206"], ["198", "199"], ["198", "201"], ["199", "200"], ["201", "202"], ["203", "204"], ["203", "205"], ["206", "15"], ["206", "207"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["215", "216"], ["215", "217"], ["217", "218"], ["219", "220"], ["219", "222"], ["220", "221"], ["222", "223"], ["222", "224"], ["222", "228"], ["224", "225"], ["224", "226"], ["226", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["238", "239"], ["238", "240"], ["33", "36"], ["36", "40"], ["38", "45"], ["43", "50"], ["48", "51"], ["51", "54"], ["116", "119"], ["119", "124"], ["121", "127"], ["208", "217"], ["215", "220"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["54", "57"], ["57", "64"], ["57", "118"], ["60", "57"], ["118", "116"], ["123", "121"], ["127", "133"], ["127", "211"], ["209", "212"], ["212", "208"], ["217", "215"], ["220", "243"], ["220", "226"], ["64", "69"], ["124", "123"], ["131", "138"], ["136", "140"], ["140", "145"], ["143", "146"], ["146", "149"], ["211", "209"], ["224", "231"], ["228", "220"], ["69", "72"], ["72", "80"], ["72", "60"], ["75", "72"], ["133", "131"], ["138", "136"], ["145", "143"], ["149", "154"], ["152", "127"], ["152", "162"], ["156", "154"], ["226", "224"], ["229", "236"], ["232", "228"], ["78", "85"], ["83", "87"], ["86", "94"], ["154", "152"], ["160", "167"], ["231", "229"], ["233", "240"], ["238", "232"], ["80", "78"], ["85", "83"], ["87", "90"], ["90", "86"], ["94", "99"], ["94", "107"], ["162", "160"], ["166", "178"], ["166", "185"], ["198", "205"], ["198", "206"], ["203", "156"], ["206", "156"], ["234", "233"], ["240", "238"], ["98", "75"], ["167", "166"], ["167", "171"], ["169", "166"], ["178", "199"], ["199", "201"], ["201", "198"], ["205", "203"], ["236", "234"], ["99", "98"], ["105", "108"], ["108", "109"], ["109", "112"], ["112", "75"], ["170", "176"], ["174", "169"], ["183", "192"], ["183", "199"], ["107", "105"], ["171", "173"], ["173", "170"], ["176", "174"], ["184", "190"], ["188", "183"], ["192", "194"], ["194", "199"], ["185", "187"], ["187", "184"], ["190", "188"], ["30", "35"], ["31", "243"], ["33", "243"], ["36", "243"], ["38", "243"], ["38", "243"], ["43", "243"], ["45", "243"], ["43", "243"], ["43", "243"], ["48", "243"], ["51", "243"], ["54", "243"], ["57", "243"], ["57", "243"], ["57", "243"], ["116", "243"], ["119", "243"], ["124", "243"], ["123", "243"], ["127", "243"], ["208", "243"], ["208", "243"], ["208", "243"], ["217", "243"], ["215", "243"], ["220", "243"], ["220", "243"], ["228", "243"], ["228", "243"], ["228", "243"], ["152", "243"], ["152", "243"], ["60", "243"], ["140", "243"], ["30", "31"], ["30", "33"], ["40", "38"], ["45", "43"], ["45", "43"], ["30", "48"], ["30", "116"], ["123", "121"], ["217", "215"], ["33", "36"], ["30", "36"], ["48", "51"], ["30", "51"], ["30", "54"], ["116", "119"], ["30", "119"], ["212", "208"], ["36", "40"], ["30", "40"], ["40", "45"], ["30", "45"], ["38", "45"], ["54", "57"], ["60", "57"], ["30", "57"], ["45", "57"], ["72", "57"], ["30", "60"], ["57", "60"], ["30", "64"], ["124", "123"], ["121", "127"], ["133", "127"], ["30", "127"], ["133", "131"], ["138", "136"], ["30", "143"], ["119", "212"], ["206", "212"], ["203", "212"], ["30", "212"], ["212", "217"], ["30", "217"], ["215", "220"], ["226", "220"], ["30", "220"], ["226", "224"], ["57", "69"], ["30", "69"], ["51", "124"], ["112", "124"], ["99", "124"], ["30", "124"], ["30", "140"], ["136", "140"], ["143", "146"], ["30", "146"], ["30", "149"], ["208", "228"], ["224", "228"], ["30", "228"], ["69", "72"], ["75", "72"], ["30", "72"], ["57", "72"], ["30", "75"], ["72", "75"], ["43", "78"], ["30", "83"], ["127", "133"], ["30", "133"], ["131", "138"], ["30", "138"], ["149", "152"], ["156", "152"], ["30", "152"], ["154", "152"], ["162", "156"], ["30", "156"], ["162", "160"], ["162", "160"], ["220", "226"], ["30", "226"], ["224", "232"], ["30", "232"], ["64", "78"], ["112", "78"], ["99", "78"], ["30", "78"], ["83", "86"], ["30", "86"], ["57", "86"], ["72", "86"], ["140", "154"], ["162", "154"], ["30", "154"], ["30", "203"], ["224", "233"], ["30", "233"], ["30", "87"], ["57", "87"], ["72", "90"], ["30", "90"], ["51", "94"], ["112", "94"], ["99", "94"], ["30", "94"], ["78", "94"], ["154", "162"], ["30", "162"], ["152", "162"], ["167", "166"], ["169", "166"], ["169", "166"], ["199", "198"], ["201", "198"], ["201", "206"], ["30", "206"], ["199", "206"], ["99", "98"], ["99", "98"], ["86", "98"], ["30", "98"], ["30", "105"], ["146", "167"], ["199", "167"], ["206", "167"], ["30", "167"], ["160", "169"], ["167", "178"], ["171", "178"], ["30", "178"], ["160", "178"], ["169", "178"], ["185", "199"], ["194", "199"], ["178", "199"], ["30", "199"], ["119", "201"], ["206", "201"], ["203", "201"], ["30", "201"], ["94", "99"], ["30", "99"], ["94", "99"], ["105", "108"], ["30", "108"], ["108", "109"], ["30", "109"], ["86", "109"], ["94", "112"], ["30", "112"], ["94", "112"], ["109", "112"], ["160", "183"], ["167", "171"], ["30", "171"], ["185", "192"], ["30", "192"], ["192", "194"], ["30", "194"], ["160", "194"], ["169", "194"], ["183", "194"], ["167", "185"], ["171", "185"], ["30", "185"], ["57", "60"], ["57", "64"], ["57", "57"], ["57", "69"], ["57", "72"], ["127", "136"], ["127", "154"], ["127", "145"], ["127", "146"], ["127", "131"], ["127", "149"], ["127", "138"], ["127", "152"], ["127", "127"], ["127", "140"], ["127", "143"], ["127", "133"], ["220", "240"], ["220", "232"], ["220", "226"], ["220", "228"], ["220", "238"], ["220", "231"], ["220", "224"], ["220", "233"], ["220", "236"], ["220", "220"], ["220", "234"], ["220", "229"], ["72", "94"], ["72", "75"], ["72", "85"], ["72", "87"], ["72", "90"], ["72", "80"], ["72", "86"], ["72", "72"], ["72", "83"], ["72", "78"], ["152", "167"], ["152", "154"], ["152", "198"], ["152", "162"], ["152", "152"], ["152", "201"], ["152", "160"], ["152", "166"], ["152", "199"], ["152", "156"], ["94", "107"], ["94", "98"], ["94", "112"], ["94", "108"], ["94", "99"], ["94", "105"], ["94", "109"], ["166", "188"], ["166", "178"], ["166", "185"], ["166", "187"], ["166", "190"], ["166", "184"], ["166", "183"], ["198", "206"], ["198", "205"], ["198", "203"], ["167", "169"], ["167", "170"], ["167", "173"], ["167", "174"], ["167", "171"], ["167", "176"], ["183", "192"], ["183", "194"]], "features": {"30": "<(METHOD,main)<SUB>1</SUB>>", "32": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY in = new Reader())<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.alloc,new Reader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Reader())<SUB>2</SUB>>", "38": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "40": "<(nextInt,nextInt())<SUB>3</SUB>>", "42": "<(LOCAL,int[] a: int[])<SUB>4</SUB>>", "44": "<(IDENTIFIER,a,int[] a = na(n))<SUB>4</SUB>>", "46": "<(IDENTIFIER,in,na(n))<SUB>4</SUB>>", "6": "<(LOCAL,HashMap&lt;Long, ArrayList&lt;Pair&gt;&gt; v: ANY)<SUB>5</SUB>>", "49": "<(IDENTIFIER,v,ANY v = new HashMap&lt;&gt;())<SUB>5</SUB>>", "51": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>5</SUB>>", "52": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "54": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "56": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "58": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "62": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "64": "<(&lt;operator&gt;.assignment,long s = 0)<SUB>7</SUB>>", "66": "<(LITERAL,0,long s = 0)<SUB>7</SUB>>", "68": "<(LOCAL,int j: int)<SUB>8</SUB>>", "70": "<(IDENTIFIER,j,int j = i)<SUB>8</SUB>>", "72": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>8</SUB>>", "74": "<(IDENTIFIER,n,j &lt; n)<SUB>8</SUB>>", "76": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "78": "<(&lt;operator&gt;.assignmentPlus,s += a[j])<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>9</SUB>>", "82": "<(IDENTIFIER,j,s += a[j])<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.assignment,ANY p = new Pair(i + 1, j + 1))<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.alloc,new Pair(i + 1, j + 1))<SUB>10</SUB>>", "7": "<(IDENTIFIER,p,new Pair(i + 1, j + 1))<SUB>10</SUB>>", "88": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "90": "<(&lt;operator&gt;.addition,j + 1)<SUB>10</SUB>>", "92": "<(LITERAL,1,j + 1)<SUB>10</SUB>>", "94": "<(containsKey,containsKey(s))<SUB>11</SUB>>", "96": "<(IDENTIFIER,s,containsKey(s))<SUB>11</SUB>>", "98": "<(add,add(p))<SUB>12</SUB>>", "100": "<(IDENTIFIER,v,get(s))<SUB>12</SUB>>", "102": "<(IDENTIFIER,p,add(p))<SUB>12</SUB>>", "104": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.assignment,ANY xd = new ArrayList&lt;&gt;())<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>14</SUB>>", "9": "<(IDENTIFIER,xd,new ArrayList&lt;&gt;())<SUB>14</SUB>>", "110": "<(IDENTIFIER,xd,add(p))<SUB>15</SUB>>", "112": "<(put,put(s, xd))<SUB>16</SUB>>", "114": "<(IDENTIFIER,s,put(s, xd))<SUB>16</SUB>>", "12": "<(LOCAL,ArrayList&lt;Pair&gt; ans: ANY)<SUB>20</SUB>>", "117": "<(IDENTIFIER,ans,ANY ans = new ArrayList&lt;&gt;())<SUB>20</SUB>>", "119": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>20</SUB>>", "120": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>21</SUB>>", "122": "<(IDENTIFIER,$iterLocal0,)<SUB>21</SUB>>", "124": "<(entrySet,entrySet())<SUB>21</SUB>>", "126": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>21</SUB>>", "128": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "130": "<(LOCAL,e: ANY)<SUB>21</SUB>>", "132": "<(IDENTIFIER,e,&lt;empty&gt;)>", "134": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "136": "<(&lt;operator&gt;.assignment,ANY pairs = getValue())<SUB>22</SUB>>", "138": "<(getValue,getValue())<SUB>22</SUB>>", "140": "<(sort,sort(pairs))<SUB>23</SUB>>", "142": "<(IDENTIFIER,pairs,sort(pairs))<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.assignment,ANY st = new Stack&lt;&gt;())<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.alloc,new Stack&lt;&gt;())<SUB>24</SUB>>", "13": "<(IDENTIFIER,st,new Stack&lt;&gt;())<SUB>24</SUB>>", "148": "<(LOCAL,int i: int)<SUB>25</SUB>>", "150": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "152": "<(&lt;operator&gt;.lessThan,i &lt; pairs.size())<SUB>25</SUB>>", "154": "<(size,size())<SUB>25</SUB>>", "156": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "158": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "160": "<(&lt;operator&gt;.assignment,ANY cur = get(i))<SUB>26</SUB>>", "162": "<(get,get(i))<SUB>26</SUB>>", "164": "<(IDENTIFIER,i,get(i))<SUB>26</SUB>>", "166": "<(&lt;operator&gt;.logicalOr,st.isEmpty() || st.peek().r &lt; cur.l)<SUB>27</SUB>>", "168": "<(IDENTIFIER,st,isEmpty())<SUB>27</SUB>>", "170": "<(&lt;operator&gt;.fieldAccess,st.peek().r)<SUB>27</SUB>>", "172": "<(IDENTIFIER,st,peek())<SUB>27</SUB>>", "174": "<(&lt;operator&gt;.fieldAccess,cur.l)<SUB>27</SUB>>", "176": "<(FIELD_IDENTIFIER,l,l)<SUB>27</SUB>>", "178": "<(push,push(cur))<SUB>28</SUB>>", "180": "<(IDENTIFIER,cur,push(cur))<SUB>28</SUB>>", "182": "<(CONTROL_STRUCTURE,if (st.peek().r &gt; cur.r),if (st.peek().r &gt; cur.r))<SUB>29</SUB>>", "184": "<(&lt;operator&gt;.fieldAccess,st.peek().r)<SUB>29</SUB>>", "186": "<(IDENTIFIER,st,peek())<SUB>29</SUB>>", "188": "<(&lt;operator&gt;.fieldAccess,cur.r)<SUB>29</SUB>>", "190": "<(FIELD_IDENTIFIER,r,r)<SUB>29</SUB>>", "192": "<(pop,pop())<SUB>30</SUB>>", "194": "<(push,push(cur))<SUB>31</SUB>>", "196": "<(IDENTIFIER,cur,push(cur))<SUB>31</SUB>>", "198": "<(&lt;operator&gt;.greaterThan,st.size() &gt; ans.size())<SUB>33</SUB>>", "200": "<(IDENTIFIER,st,size())<SUB>33</SUB>>", "202": "<(IDENTIFIER,ans,size())<SUB>33</SUB>>", "204": "<(IDENTIFIER,ans,ans = new ArrayList&lt;&gt;(st))<SUB>33</SUB>>", "206": "<(&lt;init&gt;,new ArrayList&lt;&gt;(st))<SUB>33</SUB>>", "207": "<(IDENTIFIER,st,new ArrayList&lt;&gt;(st))<SUB>33</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>36</SUB>>", "211": "<(FIELD_IDENTIFIER,out,out)<SUB>36</SUB>>", "213": "<(IDENTIFIER,ans,size())<SUB>36</SUB>>", "215": "<(&lt;operator&gt;.assignment,)<SUB>37</SUB>>", "217": "<(iterator,&lt;empty&gt;)<SUB>37</SUB>>", "219": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>37</SUB>>", "221": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "223": "<(LOCAL,p: ANY)<SUB>37</SUB>>", "225": "<(IDENTIFIER,p,&lt;empty&gt;)>", "227": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "229": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "231": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "233": "<(&lt;operator&gt;.addition,p.l + &quot; &quot;)<SUB>38</SUB>>", "235": "<(IDENTIFIER,p,p.l + &quot; &quot;)<SUB>38</SUB>>", "237": "<(LITERAL,&quot; &quot;,p.l + &quot; &quot;)<SUB>38</SUB>>", "239": "<(IDENTIFIER,p,p.l + &quot; &quot; + p.r)<SUB>38</SUB>>", "241": "<(MODIFIER,PUBLIC)>", "243": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}