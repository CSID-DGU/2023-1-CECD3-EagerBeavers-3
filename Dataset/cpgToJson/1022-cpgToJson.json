{"edges": [["19", "21"], ["19", "145"], ["19", "146"], ["19", "147"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "54"], ["21", "55"], ["21", "58"], ["21", "59"], ["21", "62"], ["21", "63"], ["21", "66"], ["21", "67"], ["21", "70"], ["21", "108"], ["21", "109"], ["21", "114"], ["21", "115"], ["21", "120"], ["21", "121"], ["21", "128"], ["21", "129"], ["21", "140"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "53"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "85"], ["76", "86"], ["76", "91"], ["76", "94"], ["76", "105"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["81", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["22", "29"], ["25", "41"], ["37", "44"], ["55", "59"], ["59", "63"], ["63", "67"], ["67", "72"], ["109", "117"], ["115", "124"], ["121", "135"], ["129", "143"], ["140", "147"], ["24", "22"], ["39", "37"], ["44", "51"], ["44", "55"], ["71", "80"], ["71", "111"], ["111", "109"], ["117", "115"], ["123", "121"], ["131", "129"], ["141", "140"], ["27", "34"], ["30", "25"], ["41", "39"], ["48", "53"], ["53", "147"], ["72", "71"], ["77", "88"], ["86", "91"], ["91", "99"], ["94", "105"], ["105", "72"], ["124", "125"], ["125", "123"], ["132", "131"], ["143", "141"], ["29", "27"], ["32", "30"], ["49", "48"], ["79", "77"], ["88", "86"], ["96", "94"], ["133", "132"], ["34", "32"], ["51", "49"], ["80", "81"], ["81", "79"], ["98", "96"], ["135", "133"], ["99", "102"], ["102", "98"], ["19", "24"], ["53", "147"], ["20", "147"], ["22", "147"], ["27", "147"], ["30", "147"], ["30", "147"], ["30", "147"], ["25", "147"], ["39", "147"], ["41", "147"], ["39", "147"], ["37", "147"], ["37", "147"], ["44", "147"], ["48", "147"], ["48", "147"], ["48", "147"], ["81", "147"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["19", "55"], ["19", "59"], ["19", "63"], ["19", "67"], ["111", "109"], ["111", "109"], ["117", "115"], ["117", "115"], ["19", "121"], ["125", "121"], ["125", "121"], ["132", "129"], ["132", "129"], ["19", "129"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["129", "140"], ["19", "140"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["37", "44"], ["19", "44"], ["19", "53"], ["72", "71"], ["72", "71"], ["44", "71"], ["19", "71"], ["19", "77"], ["81", "77"], ["81", "77"], ["81", "77"], ["88", "86"], ["88", "86"], ["72", "91"], ["19", "91"], ["19", "94"], ["72", "94"], ["98", "94"], ["98", "94"], ["19", "105"], ["71", "111"], ["19", "111"], ["63", "111"], ["91", "111"], ["109", "117"], ["19", "117"], ["55", "117"], ["105", "117"], ["19", "123"], ["125", "123"], ["125", "123"], ["132", "131"], ["132", "131"], ["19", "131"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["44", "48"], ["19", "48"], ["59", "72"], ["94", "72"], ["19", "72"], ["81", "105"], ["117", "125"], ["19", "125"], ["117", "125"], ["133", "132"], ["133", "132"], ["121", "132"], ["19", "132"], ["19", "79"], ["81", "79"], ["81", "79"], ["81", "79"], ["77", "88"], ["19", "88"], ["19", "96"], ["72", "96"], ["98", "96"], ["98", "96"], ["39", "133"], ["19", "133"], ["67", "133"], ["99", "133"], ["115", "133"], ["19", "81"], ["55", "81"], ["105", "81"], ["99", "98"], ["99", "98"], ["81", "98"], ["19", "98"], ["67", "135"], ["99", "135"], ["19", "135"], ["115", "135"], ["86", "99"], ["19", "99"], ["88", "99"], ["81", "102"], ["19", "102"], ["44", "48"], ["44", "115"], ["44", "141"], ["44", "49"], ["44", "51"], ["44", "131"], ["44", "72"], ["44", "132"], ["44", "67"], ["44", "121"], ["44", "123"], ["44", "59"], ["44", "129"], ["44", "140"], ["44", "143"], ["44", "71"], ["44", "53"], ["44", "135"], ["44", "117"], ["44", "63"], ["44", "55"], ["44", "124"], ["44", "125"], ["44", "111"], ["44", "109"], ["44", "133"], ["71", "94"], ["71", "96"], ["71", "77"], ["71", "98"], ["71", "99"], ["71", "81"], ["71", "102"], ["71", "72"], ["71", "91"], ["71", "79"], ["71", "80"], ["71", "71"], ["71", "105"], ["71", "88"], ["71", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY r = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,long n = parseLong(r.readLine()))<SUB>3</SUB>>", "39": "<(parseLong,parseLong(r.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n &lt; 10),if (n &lt; 10))<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,n &lt; 10)<SUB>4</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "53": "<(RETURN,return;,return;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int len = 1)<SUB>9</SUB>>", "57": "<(LITERAL,1,int len = 1)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,long edge = 10)<SUB>10</SUB>>", "61": "<(LITERAL,10,long edge = 10)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,long prev = 0)<SUB>11</SUB>>", "65": "<(LITERAL,0,long prev = 0)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.assignment,long prepow = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,long prepow = 0)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.lessThan,edge - 1 &lt; n)<SUB>13</SUB>>", "73": "<(IDENTIFIER,edge,edge - 1)<SUB>13</SUB>>", "75": "<(IDENTIFIER,n,edge - 1 &lt; n)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,prepow = (long) Math.pow(10, len))<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.cast,(long) Math.pow(10, len))<SUB>14</SUB>>", "81": "<(pow,Math.pow(10, len))<SUB>14</SUB>>", "83": "<(LITERAL,10,Math.pow(10, len))<SUB>14</SUB>>", "85": "<(LOCAL,long pow: long)<SUB>15</SUB>>", "87": "<(IDENTIFIER,pow,long pow = prepow * 10)<SUB>15</SUB>>", "89": "<(IDENTIFIER,prepow,prepow * 10)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,prev = edge)<SUB>16</SUB>>", "93": "<(IDENTIFIER,edge,prev = edge)<SUB>16</SUB>>", "95": "<(IDENTIFIER,edge,edge = edge + (pow - prepow) * (len + 1))<SUB>17</SUB>>", "97": "<(IDENTIFIER,edge,edge + (pow - prepow) * (len + 1))<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.subtraction,pow - prepow)<SUB>17</SUB>>", "101": "<(IDENTIFIER,prepow,pow - prepow)<SUB>17</SUB>>", "103": "<(IDENTIFIER,len,len + 1)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.assignmentPlus,len += 1)<SUB>18</SUB>>", "107": "<(LITERAL,1,len += 1)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,long b = n - prev)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.subtraction,n - prev)<SUB>21</SUB>>", "113": "<(IDENTIFIER,prev,n - prev)<SUB>21</SUB>>", "115": "<(&lt;operator&gt;.assignment,long c = b / len)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.division,b / len)<SUB>22</SUB>>", "119": "<(IDENTIFIER,len,b / len)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.assignment,int rem = (int) (b % len))<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.cast,(int) (b % len))<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.modulo,b % len)<SUB>23</SUB>>", "127": "<(IDENTIFIER,len,b % len)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.assignment,String s = Long.toString(prepow + c).charAt(rem) + &quot;&quot;)<SUB>24</SUB>>", "131": "<(&lt;operator&gt;.addition,Long.toString(prepow + c).charAt(rem) + &quot;&quot;)<SUB>24</SUB>>", "133": "<(toString,Long.toString(prepow + c))<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.addition,prepow + c)<SUB>24</SUB>>", "137": "<(IDENTIFIER,c,prepow + c)<SUB>24</SUB>>", "139": "<(LITERAL,&quot;&quot;,Long.toString(prepow + c).charAt(rem) + &quot;&quot;)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "143": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}