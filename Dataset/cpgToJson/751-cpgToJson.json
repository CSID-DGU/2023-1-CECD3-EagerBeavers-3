{"edges": [["29", "30"], ["29", "31"], ["29", "228"], ["29", "229"], ["29", "230"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "39"], ["31", "42"], ["31", "46"], ["31", "47"], ["31", "51"], ["31", "52"], ["31", "56"], ["31", "57"], ["31", "8"], ["31", "61"], ["31", "64"], ["31", "10"], ["31", "65"], ["31", "68"], ["31", "12"], ["31", "69"], ["31", "72"], ["31", "14"], ["31", "73"], ["31", "76"], ["31", "77"], ["31", "93"], ["31", "94"], ["31", "98"], ["31", "103"], ["31", "108"], ["31", "114"], ["31", "115"], ["31", "120"], ["31", "133"], ["31", "223"], ["31", "226"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["64", "7"], ["65", "66"], ["65", "67"], ["68", "9"], ["69", "70"], ["69", "71"], ["72", "11"], ["73", "74"], ["73", "75"], ["76", "13"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "125"], ["121", "122"], ["121", "124"], ["122", "123"], ["125", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["128", "131"], ["131", "132"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "149"], ["143", "154"], ["143", "184"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "160"], ["154", "177"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "169"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["169", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["178", "179"], ["178", "180"], ["178", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "189"], ["185", "186"], ["185", "188"], ["186", "187"], ["189", "190"], ["189", "197"], ["189", "198"], ["189", "202"], ["189", "203"], ["189", "208"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["192", "195"], ["195", "196"], ["198", "199"], ["198", "200"], ["200", "201"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "212"], ["208", "213"], ["209", "210"], ["209", "211"], ["213", "214"], ["214", "215"], ["214", "221"], ["215", "216"], ["215", "217"], ["215", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["32", "38"], ["35", "41"], ["39", "45"], ["42", "49"], ["47", "54"], ["52", "59"], ["57", "63"], ["61", "64"], ["64", "67"], ["65", "68"], ["68", "71"], ["69", "72"], ["72", "75"], ["73", "76"], ["76", "79"], ["94", "100"], ["98", "105"], ["103", "110"], ["108", "119"], ["115", "122"], ["223", "226"], ["226", "230"], ["34", "32"], ["36", "35"], ["41", "39"], ["43", "42"], ["49", "47"], ["54", "52"], ["59", "57"], ["63", "61"], ["67", "65"], ["71", "69"], ["75", "73"], ["79", "82"], ["82", "90"], ["82", "96"], ["85", "82"], ["96", "94"], ["100", "98"], ["105", "103"], ["110", "108"], ["117", "115"], ["121", "131"], ["121", "135"], ["135", "138"], ["138", "146"], ["138", "223"], ["141", "138"], ["38", "36"], ["45", "43"], ["88", "85"], ["119", "117"], ["122", "121"], ["126", "135"], ["144", "151"], ["149", "157"], ["90", "88"], ["128", "126"], ["146", "144"], ["151", "149"], ["155", "166"], ["155", "180"], ["185", "195"], ["185", "141"], ["131", "128"], ["157", "155"], ["162", "171"], ["169", "186"], ["178", "186"], ["186", "185"], ["190", "200"], ["198", "205"], ["203", "209"], ["164", "162"], ["171", "174"], ["174", "169"], ["180", "178"], ["192", "190"], ["200", "198"], ["205", "203"], ["209", "141"], ["209", "218"], ["166", "164"], ["195", "192"], ["215", "221"], ["221", "186"], ["218", "215"], ["29", "34"], ["30", "230"], ["32", "230"], ["35", "230"], ["35", "230"], ["39", "230"], ["42", "230"], ["42", "230"], ["47", "230"], ["47", "230"], ["54", "230"], ["52", "230"], ["52", "230"], ["57", "230"], ["59", "230"], ["57", "230"], ["57", "230"], ["61", "230"], ["65", "230"], ["68", "230"], ["69", "230"], ["72", "230"], ["73", "230"], ["76", "230"], ["79", "230"], ["96", "230"], ["94", "230"], ["98", "230"], ["98", "230"], ["103", "230"], ["108", "230"], ["108", "230"], ["108", "230"], ["115", "230"], ["115", "230"], ["122", "230"], ["121", "230"], ["121", "230"], ["121", "230"], ["128", "230"], ["131", "230"], ["128", "230"], ["126", "230"], ["126", "230"], ["135", "230"], ["138", "230"], ["138", "230"], ["138", "230"], ["223", "230"], ["223", "230"], ["226", "230"], ["226", "230"], ["144", "230"], ["144", "230"], ["149", "230"], ["155", "230"], ["178", "230"], ["178", "230"], ["178", "230"], ["162", "230"], ["162", "230"], ["169", "230"], ["169", "230"], ["174", "230"], ["169", "230"], ["169", "230"], ["186", "230"], ["185", "230"], ["185", "230"], ["185", "230"], ["192", "230"], ["192", "230"], ["190", "230"], ["190", "230"], ["200", "230"], ["198", "230"], ["198", "230"], ["205", "230"], ["205", "230"], ["203", "230"], ["203", "230"], ["209", "230"], ["209", "230"], ["215", "230"], ["215", "230"], ["218", "230"], ["215", "230"], ["215", "230"], ["221", "230"], ["221", "230"], ["141", "230"], ["88", "230"], ["88", "230"], ["85", "230"], ["29", "30"], ["29", "32"], ["29", "39"], ["49", "47"], ["54", "52"], ["59", "57"], ["29", "61"], ["29", "65"], ["29", "69"], ["29", "73"], ["96", "94"], ["32", "35"], ["29", "35"], ["39", "42"], ["29", "42"], ["61", "64"], ["29", "64"], ["65", "68"], ["29", "68"], ["69", "72"], ["29", "72"], ["73", "76"], ["29", "76"], ["29", "79"], ["68", "98"], ["29", "98"], ["57", "98"], ["72", "103"], ["29", "103"], ["57", "103"], ["98", "103"], ["76", "108"], ["29", "108"], ["57", "108"], ["103", "108"], ["29", "135"], ["42", "223"], ["29", "223"], ["115", "223"], ["126", "223"], ["190", "223"], ["223", "226"], ["29", "226"], ["35", "49"], ["29", "49"], ["49", "54"], ["29", "54"], ["52", "59"], ["29", "59"], ["79", "82"], ["85", "82"], ["29", "82"], ["47", "82"], ["82", "85"], ["29", "85"], ["64", "96"], ["88", "96"], ["29", "96"], ["122", "121"], ["94", "121"], ["29", "121"], ["128", "126"], ["128", "126"], ["128", "126"], ["135", "138"], ["141", "138"], ["29", "138"], ["82", "138"], ["138", "141"], ["29", "141"], ["64", "88"], ["29", "88"], ["57", "88"], ["103", "122"], ["29", "122"], ["98", "144"], ["131", "144"], ["200", "144"], ["221", "144"], ["29", "144"], ["57", "144"], ["178", "144"], ["169", "144"], ["88", "144"], ["122", "149"], ["186", "149"], ["29", "149"], ["57", "149"], ["144", "149"], ["29", "128"], ["115", "128"], ["131", "128"], ["108", "155"], ["178", "155"], ["169", "155"], ["205", "155"], ["215", "155"], ["29", "155"], ["57", "155"], ["149", "155"], ["164", "162"], ["164", "162"], ["186", "185"], ["121", "185"], ["29", "185"], ["192", "190"], ["192", "190"], ["192", "190"], ["200", "198"], ["205", "203"], ["205", "203"], ["98", "131"], ["29", "131"], ["164", "169"], ["29", "169"], ["57", "169"], ["164", "169"], ["162", "169"], ["155", "178"], ["29", "178"], ["57", "178"], ["155", "178"], ["149", "186"], ["29", "186"], ["155", "164"], ["29", "164"], ["57", "164"], ["155", "164"], ["162", "174"], ["29", "174"], ["128", "192"], ["29", "192"], ["115", "192"], ["126", "192"], ["190", "192"], ["195", "192"], ["195", "200"], ["29", "200"], ["178", "205"], ["169", "205"], ["215", "205"], ["29", "205"], ["198", "205"], ["203", "209"], ["29", "209"], ["144", "195"], ["221", "195"], ["29", "195"], ["205", "215"], ["29", "215"], ["205", "215"], ["218", "215"], ["218", "215"], ["200", "221"], ["29", "221"], ["209", "218"], ["29", "218"], ["82", "85"], ["82", "82"], ["82", "90"], ["82", "88"], ["121", "128"], ["121", "131"], ["121", "126"], ["138", "141"], ["138", "146"], ["138", "149"], ["138", "185"], ["138", "151"], ["138", "157"], ["138", "144"], ["138", "138"], ["138", "155"], ["138", "186"], ["155", "169"], ["155", "166"], ["155", "178"], ["155", "162"], ["155", "174"], ["155", "164"], ["155", "180"], ["155", "171"], ["185", "192"], ["185", "209"], ["185", "198"], ["185", "200"], ["185", "195"], ["185", "190"], ["185", "203"], ["185", "205"], ["209", "215"], ["209", "185"], ["209", "221"], ["209", "186"], ["209", "218"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "40": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "45": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = readInt())<SUB>10</SUB>>", "49": "<(readInt,readInt())<SUB>10</SUB>>", "51": "<(LOCAL,String a: java.lang.String)<SUB>17</SUB>>", "53": "<(IDENTIFIER,a,String a = readString())<SUB>17</SUB>>", "55": "<(IDENTIFIER,in,readString())<SUB>17</SUB>>", "57": "<(&lt;operator&gt;.assignment,char[] c = a.toCharArray())<SUB>18</SUB>>", "59": "<(toCharArray,a.toCharArray())<SUB>18</SUB>>", "8": "<(LOCAL,HashSet&lt;Character&gt; ht: ANY)<SUB>19</SUB>>", "62": "<(IDENTIFIER,ht,ANY ht = new HashSet&lt;Character&gt;())<SUB>19</SUB>>", "64": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>19</SUB>>", "10": "<(LOCAL,Deque&lt;Character&gt; q: ANY)<SUB>20</SUB>>", "66": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;Character&gt;())<SUB>20</SUB>>", "68": "<(&lt;init&gt;,new LinkedList&lt;Character&gt;())<SUB>20</SUB>>", "12": "<(LOCAL,HashSet&lt;Character&gt; hs: ANY)<SUB>21</SUB>>", "70": "<(IDENTIFIER,hs,ANY hs = new HashSet&lt;Character&gt;())<SUB>21</SUB>>", "72": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>21</SUB>>", "14": "<(LOCAL,HashMap&lt;Character, Integer&gt; hm: ANY)<SUB>22</SUB>>", "74": "<(IDENTIFIER,hm,ANY hm = new HashMap&lt;Character, Integer&gt;())<SUB>22</SUB>>", "76": "<(&lt;init&gt;,new HashMap&lt;Character, Integer&gt;())<SUB>22</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>23</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "83": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "89": "<(IDENTIFIER,ht,add(c[i]))<SUB>25</SUB>>", "91": "<(IDENTIFIER,c,add(c[i]))<SUB>25</SUB>>", "93": "<(LOCAL,int t: int)<SUB>27</SUB>>", "95": "<(IDENTIFIER,t,int t = size())<SUB>27</SUB>>", "97": "<(IDENTIFIER,ht,size())<SUB>27</SUB>>", "99": "<(IDENTIFIER,q,addLast(c[0]))<SUB>28</SUB>>", "101": "<(IDENTIFIER,c,addLast(c[0]))<SUB>28</SUB>>", "103": "<(add,add(c[0]))<SUB>29</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>29</SUB>>", "107": "<(LITERAL,0,add(c[0]))<SUB>29</SUB>>", "109": "<(IDENTIFIER,hm,put(c[0], 1))<SUB>30</SUB>>", "111": "<(IDENTIFIER,c,put(c[0], 1))<SUB>30</SUB>>", "113": "<(LITERAL,1,put(c[0], 1))<SUB>30</SUB>>", "115": "<(&lt;operator&gt;.assignment,int ans = Integer.MAX_VALUE)<SUB>31</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>31</SUB>>", "119": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>31</SUB>>", "121": "<(&lt;operator&gt;.equals,hs.size() == t)<SUB>32</SUB>>", "123": "<(IDENTIFIER,hs,size())<SUB>32</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "127": "<(IDENTIFIER,ans,ans = min(ans, q.size()))<SUB>34</SUB>>", "129": "<(IDENTIFIER,this,min(ans, q.size()))<SUB>34</SUB>>", "131": "<(size,size())<SUB>34</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>37</SUB>>", "135": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>37</SUB>>", "137": "<(LITERAL,1,int i = 1)<SUB>37</SUB>>", "139": "<(IDENTIFIER,i,i &lt; n)<SUB>37</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "145": "<(IDENTIFIER,q,addLast(c[i]))<SUB>39</SUB>>", "147": "<(IDENTIFIER,c,addLast(c[i]))<SUB>39</SUB>>", "149": "<(add,add(c[i]))<SUB>40</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>40</SUB>>", "153": "<(IDENTIFIER,i,add(c[i]))<SUB>40</SUB>>", "155": "<(containsKey,containsKey(c[i]))<SUB>41</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>41</SUB>>", "159": "<(IDENTIFIER,i,containsKey(c[i]))<SUB>41</SUB>>", "161": "<(LOCAL,int x: int)<SUB>43</SUB>>", "163": "<(IDENTIFIER,x,int x = get(c[i]))<SUB>43</SUB>>", "165": "<(IDENTIFIER,hm,get(c[i]))<SUB>43</SUB>>", "167": "<(IDENTIFIER,c,get(c[i]))<SUB>43</SUB>>", "169": "<(put,put(c[i], x + 1))<SUB>44</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>44</SUB>>", "173": "<(IDENTIFIER,i,put(c[i], x + 1))<SUB>44</SUB>>", "175": "<(IDENTIFIER,x,x + 1)<SUB>44</SUB>>", "177": "<(CONTROL_STRUCTURE,else,else)<SUB>47</SUB>>", "179": "<(IDENTIFIER,hm,put(c[i], 1))<SUB>47</SUB>>", "181": "<(IDENTIFIER,c,put(c[i], 1))<SUB>47</SUB>>", "183": "<(LITERAL,1,put(c[i], 1))<SUB>47</SUB>>", "185": "<(&lt;operator&gt;.equals,hs.size() == t)<SUB>48</SUB>>", "187": "<(IDENTIFIER,hs,size())<SUB>48</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "191": "<(IDENTIFIER,ans,ans = min(ans, q.size()))<SUB>50</SUB>>", "193": "<(IDENTIFIER,this,min(ans, q.size()))<SUB>50</SUB>>", "195": "<(size,size())<SUB>50</SUB>>", "197": "<(LOCAL,char ch: char)<SUB>51</SUB>>", "199": "<(IDENTIFIER,ch,char ch = peekFirst())<SUB>51</SUB>>", "201": "<(IDENTIFIER,q,peekFirst())<SUB>51</SUB>>", "203": "<(&lt;operator&gt;.assignment,int x = get(ch))<SUB>52</SUB>>", "205": "<(get,get(ch))<SUB>52</SUB>>", "207": "<(IDENTIFIER,ch,get(ch))<SUB>52</SUB>>", "209": "<(&lt;operator&gt;.equals,x == 1)<SUB>53</SUB>>", "211": "<(LITERAL,1,x == 1)<SUB>53</SUB>>", "213": "<(CONTROL_STRUCTURE,else,else)<SUB>56</SUB>>", "215": "<(put,put(ch, x - 1))<SUB>57</SUB>>", "217": "<(IDENTIFIER,ch,put(ch, x - 1))<SUB>57</SUB>>", "219": "<(IDENTIFIER,x,x - 1)<SUB>57</SUB>>", "221": "<(pollFirst,pollFirst())<SUB>58</SUB>>", "223": "<(println,println(ans))<SUB>65</SUB>>", "225": "<(IDENTIFIER,ans,println(ans))<SUB>65</SUB>>", "227": "<(IDENTIFIER,pw,close())<SUB>69</SUB>>", "229": "<(MODIFIER,STATIC)>"}}