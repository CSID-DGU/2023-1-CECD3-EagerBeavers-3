{"edges": [["19", "20"], ["19", "21"], ["19", "172"], ["19", "173"], ["19", "174"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "46"], ["21", "49"], ["21", "50"], ["21", "53"], ["21", "98"], ["21", "109"], ["21", "110"], ["21", "113"], ["21", "165"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "68"], ["63", "72"], ["63", "85"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["98", "101"], ["101", "102"], ["101", "105"], ["101", "108"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "123"], ["113", "125"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "142"], ["126", "144"], ["127", "128"], ["127", "141"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "161"], ["146", "147"], ["146", "160"], ["147", "148"], ["147", "155"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["161", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["46", "50"], ["50", "55"], ["98", "110"], ["110", "115"], ["165", "174"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["55", "58"], ["58", "66"], ["58", "104"], ["61", "58"], ["115", "120"], ["118", "132"], ["118", "168"], ["123", "120"], ["166", "169"], ["169", "165"], ["28", "26"], ["64", "70"], ["68", "74"], ["72", "87"], ["85", "61"], ["102", "105"], ["105", "98"], ["120", "118"], ["168", "166"], ["66", "64"], ["70", "68"], ["73", "82"], ["78", "72"], ["86", "95"], ["91", "85"], ["104", "102"], ["127", "142"], ["127", "151"], ["142", "123"], ["74", "73"], ["80", "78"], ["87", "86"], ["93", "91"], ["128", "127"], ["81", "80"], ["94", "93"], ["129", "137"], ["136", "128"], ["146", "162"], ["146", "123"], ["82", "81"], ["95", "94"], ["130", "129"], ["137", "136"], ["147", "146"], ["162", "123"], ["132", "130"], ["148", "156"], ["155", "147"], ["149", "148"], ["156", "155"], ["151", "149"], ["19", "24"], ["20", "174"], ["22", "174"], ["25", "174"], ["25", "174"], ["30", "174"], ["35", "174"], ["37", "174"], ["35", "174"], ["35", "174"], ["40", "174"], ["40", "174"], ["46", "174"], ["46", "174"], ["50", "174"], ["50", "174"], ["58", "174"], ["98", "174"], ["102", "174"], ["105", "174"], ["105", "174"], ["98", "174"], ["110", "174"], ["115", "174"], ["118", "174"], ["120", "174"], ["118", "174"], ["118", "174"], ["165", "174"], ["169", "174"], ["165", "174"], ["165", "174"], ["128", "174"], ["128", "174"], ["127", "174"], ["127", "174"], ["127", "174"], ["147", "174"], ["147", "174"], ["146", "174"], ["146", "174"], ["146", "174"], ["162", "174"], ["142", "174"], ["123", "174"], ["64", "174"], ["70", "174"], ["68", "174"], ["68", "174"], ["72", "174"], ["72", "174"], ["72", "174"], ["85", "174"], ["91", "174"], ["94", "174"], ["93", "174"], ["91", "174"], ["85", "174"], ["85", "174"], ["61", "174"], ["98", "174"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["19", "46"], ["19", "50"], ["19", "110"], ["22", "25"], ["19", "25"], ["19", "55"], ["19", "98"], ["40", "98"], ["102", "98"], ["105", "98"], ["19", "115"], ["110", "165"], ["162", "165"], ["142", "165"], ["19", "165"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["55", "58"], ["61", "58"], ["19", "58"], ["42", "58"], ["58", "61"], ["19", "61"], ["66", "64"], ["70", "68"], ["78", "72"], ["78", "72"], ["78", "85"], ["19", "85"], ["93", "85"], ["93", "85"], ["19", "102"], ["19", "108"], ["115", "118"], ["123", "118"], ["19", "118"], ["120", "118"], ["120", "118"], ["19", "123"], ["118", "123"], ["110", "169"], ["162", "169"], ["142", "169"], ["19", "169"], ["102", "105"], ["19", "105"], ["58", "120"], ["19", "120"], ["37", "66"], ["70", "66"], ["19", "66"], ["66", "70"], ["19", "70"], ["64", "78"], ["19", "78"], ["80", "78"], ["80", "78"], ["78", "91"], ["19", "91"], ["93", "91"], ["93", "91"], ["128", "127"], ["128", "127"], ["35", "127"], ["146", "127"], ["19", "127"], ["110", "142"], ["162", "142"], ["19", "142"], ["19", "80"], ["68", "80"], ["19", "93"], ["68", "93"], ["147", "128"], ["147", "128"], ["85", "128"], ["19", "81"], ["68", "81"], ["19", "94"], ["68", "94"], ["147", "146"], ["147", "146"], ["127", "146"], ["19", "146"], ["19", "162"], ["128", "147"], ["128", "147"], ["110", "162"], ["142", "162"], ["118", "132"], ["19", "132"], ["19", "151"], ["118", "151"], ["58", "94"], ["58", "68"], ["58", "73"], ["58", "64"], ["58", "66"], ["58", "81"], ["58", "85"], ["58", "72"], ["58", "74"], ["58", "95"], ["58", "87"], ["58", "91"], ["58", "82"], ["58", "93"], ["58", "80"], ["58", "58"], ["58", "61"], ["58", "70"], ["58", "78"], ["58", "86"], ["118", "120"], ["118", "136"], ["118", "128"], ["118", "132"], ["118", "123"], ["118", "129"], ["118", "137"], ["118", "130"], ["118", "118"], ["118", "127"], ["127", "146"], ["127", "149"], ["127", "142"], ["127", "151"], ["127", "148"], ["127", "147"], ["127", "155"], ["127", "156"], ["146", "162"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,double[][] nm: double[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,nm,double[][] nm = new double[n][2])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new double[n][2])<SUB>5</SUB>>", "45": "<(LOCAL,int a: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,a,int a = 0)<SUB>6</SUB>>", "49": "<(LOCAL,int b: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,b,int b = 0)<SUB>7</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "65": "<(IDENTIFIER,a,a = nextInt())<SUB>9</SUB>>", "67": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,b,b = nextInt())<SUB>10</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,nm[i][0])<SUB>11</SUB>>", "75": "<(IDENTIFIER,nm,nm[i][0] = a - (double) b / 2)<SUB>11</SUB>>", "77": "<(LITERAL,0,nm[i][0] = a - (double) b / 2)<SUB>11</SUB>>", "79": "<(IDENTIFIER,a,a - (double) b / 2)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.cast,(double) b)<SUB>11</SUB>>", "83": "<(IDENTIFIER,b,(double) b)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,nm[i][1] = a + (double) b / 2)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,nm[i])<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,nm[i][1] = a + (double) b / 2)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.addition,a + (double) b / 2)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.division,(double) b / 2)<SUB>12</SUB>>", "95": "<(TYPE_REF,double,double)<SUB>12</SUB>>", "97": "<(LITERAL,2,(double) b / 2)<SUB>12</SUB>>", "99": "<(IDENTIFIER,Arrays,sort(nm, new ArrayColumnComparator(1)))<SUB>16</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "105": "<(&lt;init&gt;,new ArrayColumnComparator(1))<SUB>16</SUB>>", "107": "<(LITERAL,1,new ArrayColumnComparator(1))<SUB>16</SUB>>", "109": "<(LOCAL,int sum: int)<SUB>18</SUB>>", "111": "<(IDENTIFIER,sum,int sum = 0)<SUB>18</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "117": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "119": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>19</SUB>>", "121": "<(IDENTIFIER,n,n - 1)<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.equals,nm[i + 1][0] - nm[i][1] == t)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,nm[i + 1][0])<SUB>20</SUB>>", "131": "<(IDENTIFIER,nm,nm[i + 1][0] - nm[i][1])<SUB>20</SUB>>", "133": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "135": "<(LITERAL,0,nm[i + 1][0] - nm[i][1])<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,nm[i])<SUB>20</SUB>>", "139": "<(IDENTIFIER,i,nm[i + 1][0] - nm[i][1])<SUB>20</SUB>>", "141": "<(IDENTIFIER,t,nm[i + 1][0] - nm[i][1] == t)<SUB>20</SUB>>", "143": "<(IDENTIFIER,sum,sum++)<SUB>21</SUB>>", "145": "<(CONTROL_STRUCTURE,if (nm[i + 1][0] - nm[i][1] &gt; t),if (nm[i + 1][0] - nm[i][1] &gt; t))<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.subtraction,nm[i + 1][0] - nm[i][1])<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,nm[i + 1])<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.addition,i + 1)<SUB>22</SUB>>", "153": "<(LITERAL,1,i + 1)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,nm[i][1])<SUB>22</SUB>>", "157": "<(IDENTIFIER,nm,nm[i + 1][0] - nm[i][1])<SUB>22</SUB>>", "159": "<(LITERAL,1,nm[i + 1][0] - nm[i][1])<SUB>22</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "163": "<(IDENTIFIER,sum,sum += 2)<SUB>23</SUB>>", "165": "<(println,System.out.println(sum + 2))<SUB>28</SUB>>", "167": "<(IDENTIFIER,System,System.out.println(sum + 2))<SUB>28</SUB>>", "169": "<(&lt;operator&gt;.addition,sum + 2)<SUB>28</SUB>>", "171": "<(LITERAL,2,sum + 2)<SUB>28</SUB>>", "173": "<(MODIFIER,STATIC)>"}}