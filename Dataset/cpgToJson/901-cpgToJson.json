{"edges": [["19", "21"], ["19", "189"], ["19", "190"], ["19", "191"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "46"], ["21", "47"], ["21", "51"], ["21", "68"], ["21", "69"], ["21", "72"], ["21", "73"], ["21", "76"], ["21", "113"], ["21", "114"], ["21", "118"], ["21", "119"], ["21", "122"], ["21", "123"], ["21", "126"], ["21", "143"], ["21", "180"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "104"], ["87", "88"], ["87", "94"], ["88", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "97"], ["95", "96"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["116", "117"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "142"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "140"], ["136", "137"], ["136", "139"], ["137", "138"], ["140", "141"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "171"], ["154", "155"], ["154", "161"], ["155", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "164"], ["162", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "43"], ["40", "49"], ["47", "53"], ["69", "73"], ["73", "78"], ["114", "119"], ["119", "123"], ["123", "127"], ["180", "191"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["49", "47"], ["53", "56"], ["56", "63"], ["56", "69"], ["59", "56"], ["78", "81"], ["81", "91"], ["81", "116"], ["84", "81"], ["116", "114"], ["127", "134"], ["127", "145"], ["145", "148"], ["148", "158"], ["148", "183"], ["151", "148"], ["181", "185"], ["184", "180"], ["28", "26"], ["43", "42"], ["62", "59"], ["131", "142"], ["142", "191"], ["183", "181"], ["185", "184"], ["63", "66"], ["66", "62"], ["88", "95"], ["88", "105"], ["105", "109"], ["105", "84"], ["132", "137"], ["135", "131"], ["155", "162"], ["155", "172"], ["172", "176"], ["172", "151"], ["89", "88"], ["95", "100"], ["97", "105"], ["109", "116"], ["134", "132"], ["136", "140"], ["140", "135"], ["156", "155"], ["162", "167"], ["164", "172"], ["176", "183"], ["91", "89"], ["98", "97"], ["137", "136"], ["158", "156"], ["165", "164"], ["100", "98"], ["167", "165"], ["19", "24"], ["142", "191"], ["20", "191"], ["22", "191"], ["25", "191"], ["25", "191"], ["30", "191"], ["35", "191"], ["37", "191"], ["35", "191"], ["35", "191"], ["40", "191"], ["42", "191"], ["40", "191"], ["40", "191"], ["47", "191"], ["47", "191"], ["47", "191"], ["69", "191"], ["69", "191"], ["73", "191"], ["78", "191"], ["81", "191"], ["81", "191"], ["81", "191"], ["88", "191"], ["88", "191"], ["95", "191"], ["97", "191"], ["97", "191"], ["105", "191"], ["105", "191"], ["105", "191"], ["84", "191"], ["109", "191"], ["109", "191"], ["114", "191"], ["114", "191"], ["114", "191"], ["119", "191"], ["119", "191"], ["123", "191"], ["123", "191"], ["127", "191"], ["127", "191"], ["131", "191"], ["135", "191"], ["135", "191"], ["131", "191"], ["62", "191"], ["66", "191"], ["62", "191"], ["62", "191"], ["59", "191"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["49", "47"], ["19", "69"], ["19", "73"], ["116", "114"], ["19", "119"], ["19", "123"], ["22", "25"], ["19", "25"], ["19", "53"], ["19", "78"], ["127", "145"], ["19", "145"], ["123", "180"], ["176", "180"], ["19", "180"], ["127", "180"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["19", "49"], ["53", "56"], ["59", "56"], ["19", "56"], ["30", "56"], ["56", "59"], ["19", "59"], ["66", "62"], ["78", "81"], ["84", "81"], ["19", "81"], ["56", "81"], ["81", "84"], ["19", "84"], ["19", "116"], ["73", "127"], ["109", "127"], ["19", "127"], ["19", "142"], ["145", "148"], ["151", "148"], ["19", "148"], ["148", "151"], ["19", "151"], ["123", "184"], ["176", "184"], ["19", "184"], ["127", "184"], ["30", "43"], ["19", "43"], ["137", "131"], ["19", "131"], ["140", "131"], ["123", "185"], ["176", "185"], ["19", "185"], ["37", "66"], ["19", "66"], ["47", "88"], ["97", "88"], ["19", "97"], ["69", "105"], ["95", "105"], ["19", "105"], ["35", "105"], ["81", "109"], ["19", "109"], ["137", "135"], ["19", "135"], ["140", "135"], ["114", "155"], ["164", "155"], ["19", "164"], ["119", "172"], ["162", "172"], ["19", "172"], ["35", "172"], ["105", "172"], ["148", "176"], ["19", "176"], ["69", "95"], ["105", "95"], ["19", "95"], ["137", "136"], ["19", "136"], ["19", "140"], ["119", "162"], ["172", "162"], ["19", "162"], ["19", "137"], ["56", "66"], ["56", "56"], ["56", "59"], ["56", "63"], ["56", "62"], ["81", "89"], ["81", "91"], ["81", "105"], ["81", "88"], ["127", "183"], ["127", "136"], ["127", "145"], ["127", "131"], ["127", "132"], ["127", "142"], ["127", "185"], ["127", "134"], ["127", "181"], ["127", "140"], ["127", "148"], ["127", "184"], ["127", "137"], ["127", "135"], ["127", "180"], ["148", "155"], ["148", "156"], ["148", "158"], ["148", "172"], ["88", "98"], ["88", "95"], ["88", "97"], ["88", "100"], ["105", "81"], ["105", "84"], ["105", "109"], ["155", "167"], ["155", "162"], ["155", "165"], ["155", "164"], ["172", "151"], ["172", "176"], ["172", "148"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] a: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,a,int[] a = new int[n + 1])<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.addition,n + 1)<SUB>5</SUB>>", "45": "<(LITERAL,1,n + 1)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,boolean[] used = new boolean[100009])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.alloc,new boolean[100009])>", "51": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "55": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>10</SUB>>", "71": "<(LITERAL,0,int cnt = 0)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.assignment,int id = 0)<SUB>11</SUB>>", "75": "<(LITERAL,0,int id = 0)<SUB>11</SUB>>", "77": "<(LOCAL,int i: int)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>12</SUB>>", "83": "<(IDENTIFIER,n,i &lt;= n)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "87": "<(CONTROL_STRUCTURE,if (!used[a[i]]),if (!used[a[i]]))<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,used[a[i]])<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,!used[a[i]])<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.assignment,used[a[i]] = true)<SUB>15</SUB>>", "99": "<(IDENTIFIER,used,used[a[i]] = true)<SUB>15</SUB>>", "101": "<(IDENTIFIER,a,used[a[i]] = true)<SUB>15</SUB>>", "103": "<(LITERAL,true,used[a[i]] = true)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.equals,cnt == k)<SUB>17</SUB>>", "107": "<(IDENTIFIER,k,cnt == k)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.assignment,id = i)<SUB>18</SUB>>", "111": "<(IDENTIFIER,i,id = i)<SUB>18</SUB>>", "113": "<(LOCAL,boolean[] x: boolean[])<SUB>22</SUB>>", "115": "<(IDENTIFIER,x,boolean[] x = new boolean[100005])<SUB>22</SUB>>", "117": "<(LITERAL,100005,new boolean[100005])<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.assignment,int y = 0)<SUB>23</SUB>>", "121": "<(LITERAL,0,int y = 0)<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.assignment,int id1 = 0)<SUB>24</SUB>>", "125": "<(LITERAL,0,int id1 = 0)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.equals,id == 0)<SUB>25</SUB>>", "129": "<(LITERAL,0,id == 0)<SUB>25</SUB>>", "131": "<(println,System.out.println(-1 + &quot; &quot; + -1))<SUB>26</SUB>>", "133": "<(IDENTIFIER,System,System.out.println(-1 + &quot; &quot; + -1))<SUB>26</SUB>>", "135": "<(&lt;operator&gt;.addition,-1 + &quot; &quot; + -1)<SUB>26</SUB>>", "137": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "139": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>26</SUB>>", "141": "<(LITERAL,1,-1)<SUB>26</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int i = id; Some(i &gt;= 1); i--),for (int i = id; Some(i &gt;= 1); i--))<SUB>29</SUB>>", "145": "<(&lt;operator&gt;.assignment,int i = id)<SUB>29</SUB>>", "147": "<(IDENTIFIER,id,int i = id)<SUB>29</SUB>>", "149": "<(IDENTIFIER,i,i &gt;= 1)<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.postDecrement,i--)<SUB>29</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "155": "<(&lt;operator&gt;.logicalNot,!x[a[i]])<SUB>30</SUB>>", "157": "<(IDENTIFIER,x,!x[a[i]])<SUB>30</SUB>>", "159": "<(IDENTIFIER,a,!x[a[i]])<SUB>30</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "163": "<(IDENTIFIER,y,y++)<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,x[a[i]])<SUB>32</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>32</SUB>>", "169": "<(IDENTIFIER,i,x[a[i]] = true)<SUB>32</SUB>>", "171": "<(CONTROL_STRUCTURE,if (y == k),if (y == k))<SUB>34</SUB>>", "173": "<(IDENTIFIER,y,y == k)<SUB>34</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "177": "<(IDENTIFIER,id1,id1 = i)<SUB>35</SUB>>", "179": "<(CONTROL_STRUCTURE,break;,break;)<SUB>36</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "183": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "185": "<(&lt;operator&gt;.addition,id1 + &quot; &quot;)<SUB>39</SUB>>", "187": "<(LITERAL,&quot; &quot;,id1 + &quot; &quot;)<SUB>39</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}