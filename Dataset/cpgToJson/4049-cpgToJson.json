{"edges": [["22", "24"], ["22", "247"], ["22", "248"], ["22", "249"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "65"], ["24", "69"], ["24", "102"], ["24", "103"], ["24", "106"], ["24", "240"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "83"], ["79", "86"], ["79", "94"], ["80", "81"], ["80", "82"], ["83", "7"], ["83", "84"], ["84", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "116"], ["106", "118"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "123"], ["118", "124"], ["118", "127"], ["118", "128"], ["118", "131"], ["118", "132"], ["118", "135"], ["118", "184"], ["118", "187"], ["118", "198"], ["118", "211"], ["118", "224"], ["118", "237"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["154", "155"], ["154", "160"], ["154", "168"], ["154", "176"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["166", "167"], ["168", "169"], ["168", "174"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["191", "194"], ["191", "195"], ["191", "196"], ["196", "197"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "206"], ["198", "208"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["211", "216"], ["211", "219"], ["211", "221"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["219", "220"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["224", "229"], ["224", "232"], ["224", "234"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "231"], ["232", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["65", "71"], ["103", "108"], ["240", "249"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["67", "65"], ["71", "74"], ["74", "82"], ["74", "103"], ["77", "74"], ["108", "113"], ["111", "120"], ["111", "243"], ["116", "113"], ["241", "244"], ["244", "240"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["80", "84"], ["83", "87"], ["86", "95"], ["94", "77"], ["113", "111"], ["120", "124"], ["124", "128"], ["128", "132"], ["132", "137"], ["184", "188"], ["237", "116"], ["243", "241"], ["32", "30"], ["35", "33"], ["82", "80"], ["84", "83"], ["87", "92"], ["90", "86"], ["95", "100"], ["98", "94"], ["137", "140"], ["140", "149"], ["140", "184"], ["143", "140"], ["188", "196"], ["188", "200"], ["191", "200"], ["200", "203"], ["203", "208"], ["203", "213"], ["206", "203"], ["208", "206"], ["213", "216"], ["216", "221"], ["216", "226"], ["219", "216"], ["221", "219"], ["226", "229"], ["229", "234"], ["229", "237"], ["232", "229"], ["234", "232"], ["37", "35"], ["92", "90"], ["100", "98"], ["196", "191"], ["147", "157"], ["147", "143"], ["148", "147"], ["155", "162"], ["149", "148"], ["157", "155"], ["161", "166"], ["161", "170"], ["166", "170"], ["169", "174"], ["169", "178"], ["174", "178"], ["177", "182"], ["177", "143"], ["182", "143"], ["162", "161"], ["170", "169"], ["178", "177"], ["22", "27"], ["23", "249"], ["25", "249"], ["30", "249"], ["33", "249"], ["33", "249"], ["33", "249"], ["28", "249"], ["39", "249"], ["43", "249"], ["42", "249"], ["42", "249"], ["46", "249"], ["53", "249"], ["55", "249"], ["57", "249"], ["55", "249"], ["53", "249"], ["53", "249"], ["60", "249"], ["60", "249"], ["65", "249"], ["65", "249"], ["65", "249"], ["71", "249"], ["74", "249"], ["74", "249"], ["103", "249"], ["108", "249"], ["111", "249"], ["113", "249"], ["111", "249"], ["111", "249"], ["240", "249"], ["244", "249"], ["240", "249"], ["240", "249"], ["120", "249"], ["124", "249"], ["128", "249"], ["132", "249"], ["137", "249"], ["140", "249"], ["184", "249"], ["188", "249"], ["188", "249"], ["188", "249"], ["191", "249"], ["191", "249"], ["203", "249"], ["203", "249"], ["216", "249"], ["216", "249"], ["226", "249"], ["229", "249"], ["229", "249"], ["229", "249"], ["237", "249"], ["237", "249"], ["116", "249"], ["234", "249"], ["232", "249"], ["221", "249"], ["219", "249"], ["208", "249"], ["206", "249"], ["148", "249"], ["147", "249"], ["147", "249"], ["155", "249"], ["155", "249"], ["161", "249"], ["166", "249"], ["169", "249"], ["174", "249"], ["177", "249"], ["177", "249"], ["182", "249"], ["143", "249"], ["80", "249"], ["84", "249"], ["83", "249"], ["83", "249"], ["86", "249"], ["86", "249"], ["94", "249"], ["98", "249"], ["100", "249"], ["98", "249"], ["94", "249"], ["94", "249"], ["77", "249"], ["191", "249"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["67", "65"], ["22", "103"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "71"], ["22", "108"], ["244", "240"], ["244", "240"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["62", "67"], ["22", "67"], ["71", "74"], ["77", "74"], ["22", "74"], ["67", "74"], ["74", "77"], ["22", "77"], ["22", "80"], ["90", "86"], ["90", "86"], ["98", "94"], ["98", "94"], ["108", "111"], ["116", "111"], ["22", "111"], ["113", "111"], ["113", "111"], ["111", "116"], ["148", "116"], ["22", "116"], ["22", "120"], ["22", "124"], ["22", "128"], ["22", "132"], ["22", "184"], ["184", "237"], ["234", "237"], ["221", "237"], ["208", "237"], ["22", "237"], ["103", "244"], ["237", "244"], ["22", "244"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["80", "83"], ["22", "83"], ["84", "83"], ["22", "113"], ["74", "113"], ["140", "113"], ["22", "137"], ["22", "200"], ["203", "208"], ["22", "208"], ["22", "213"], ["216", "221"], ["22", "221"], ["22", "226"], ["229", "234"], ["22", "234"], ["103", "237"], ["43", "84"], ["22", "84"], ["55", "90"], ["98", "90"], ["22", "90"], ["92", "90"], ["90", "98"], ["22", "98"], ["100", "98"], ["137", "140"], ["143", "140"], ["22", "140"], ["113", "140"], ["149", "143"], ["22", "143"], ["120", "188"], ["155", "188"], ["22", "188"], ["53", "188"], ["22", "191"], ["124", "191"], ["166", "191"], ["128", "191"], ["174", "191"], ["132", "191"], ["182", "191"], ["196", "191"], ["200", "203"], ["206", "203"], ["22", "203"], ["124", "203"], ["191", "203"], ["166", "203"], ["22", "206"], ["203", "206"], ["184", "208"], ["213", "216"], ["219", "216"], ["22", "216"], ["128", "216"], ["191", "216"], ["174", "216"], ["22", "219"], ["216", "219"], ["184", "221"], ["208", "221"], ["226", "229"], ["232", "229"], ["22", "229"], ["132", "229"], ["191", "229"], ["182", "229"], ["22", "232"], ["229", "232"], ["184", "234"], ["221", "234"], ["208", "234"], ["83", "92"], ["22", "92"], ["92", "100"], ["22", "100"], ["22", "196"], ["148", "147"], ["148", "147"], ["22", "147"], ["60", "155"], ["86", "155"], ["149", "148"], ["149", "148"], ["111", "148"], ["22", "148"], ["120", "155"], ["22", "155"], ["22", "149"], ["140", "149"], ["65", "161"], ["177", "161"], ["94", "161"], ["22", "161"], ["124", "166"], ["22", "166"], ["65", "169"], ["161", "169"], ["22", "169"], ["128", "174"], ["22", "174"], ["65", "177"], ["169", "177"], ["22", "177"], ["132", "182"], ["22", "182"], ["74", "94"], ["74", "77"], ["74", "98"], ["74", "84"], ["74", "74"], ["74", "95"], ["74", "92"], ["74", "87"], ["74", "90"], ["74", "80"], ["74", "100"], ["74", "86"], ["74", "82"], ["74", "83"], ["111", "188"], ["111", "120"], ["111", "113"], ["111", "128"], ["111", "132"], ["111", "226"], ["111", "213"], ["111", "184"], ["111", "137"], ["111", "111"], ["111", "116"], ["111", "200"], ["111", "237"], ["111", "140"], ["111", "229"], ["111", "216"], ["111", "203"], ["111", "124"], ["140", "149"], ["140", "148"], ["140", "140"], ["140", "143"], ["140", "147"], ["188", "196"], ["188", "191"], ["203", "206"], ["203", "208"], ["203", "203"], ["216", "221"], ["216", "216"], ["216", "219"], ["229", "232"], ["229", "234"], ["229", "229"], ["147", "169"], ["147", "161"], ["147", "178"], ["147", "162"], ["147", "170"], ["147", "155"], ["147", "157"], ["147", "177"], ["161", "166"], ["169", "174"], ["177", "182"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY scan = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(scan.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(scan.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(scan.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,scan,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int t: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,t,int t = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[] T = new int[n])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[n])>", "64": "<(LOCAL,int[] G: int[])<SUB>7</SUB>>", "66": "<(IDENTIFIER,G,int[] G = new int[n])<SUB>7</SUB>>", "68": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "70": "<(LOCAL,int i: int)<SUB>8</SUB>>", "72": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "74": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "76": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "78": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "80": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(scan.readLine()))<SUB>9</SUB>>", "82": "<(&lt;operator&gt;.alloc,new StringTokenizer(scan.readLine()))<SUB>9</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(scan.readLine()))<SUB>9</SUB>>", "85": "<(IDENTIFIER,scan,readLine())<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,T[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,T[i] = parseInt(st.nextToken()))<SUB>10</SUB>>", "91": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "93": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,G[i])<SUB>11</SUB>>", "97": "<(IDENTIFIER,i,G[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "99": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "101": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>13</SUB>>", "105": "<(LITERAL,0,long ans = 0)<SUB>13</SUB>>", "107": "<(LOCAL,int mask: int)<SUB>14</SUB>>", "109": "<(IDENTIFIER,mask,int mask = 1)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>14</SUB>>", "115": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>14</SUB>>", "117": "<(IDENTIFIER,mask,mask++)<SUB>14</SUB>>", "119": "<(LOCAL,int sum: int)<SUB>15</SUB>>", "121": "<(IDENTIFIER,sum,int sum = 0)<SUB>15</SUB>>", "123": "<(LOCAL,int g1: int)<SUB>16</SUB>>", "125": "<(IDENTIFIER,g1,int g1 = 0)<SUB>16</SUB>>", "127": "<(LOCAL,int g2: int)<SUB>17</SUB>>", "129": "<(IDENTIFIER,g2,int g2 = 0)<SUB>17</SUB>>", "131": "<(LOCAL,int g3: int)<SUB>18</SUB>>", "133": "<(IDENTIFIER,g3,int g3 = 0)<SUB>18</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "139": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "141": "<(IDENTIFIER,i,i &lt; n)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; i) &amp; mask) &gt; 0)<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>21</SUB>>", "151": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>21</SUB>>", "153": "<(LITERAL,0,((1 &lt;&lt; i) &amp; mask) &gt; 0)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.assignmentPlus,sum += T[i])<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,T[i])<SUB>22</SUB>>", "159": "<(IDENTIFIER,i,sum += T[i])<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.equals,G[i] == 1)<SUB>23</SUB>>", "163": "<(IDENTIFIER,G,G[i] == 1)<SUB>23</SUB>>", "165": "<(LITERAL,1,G[i] == 1)<SUB>23</SUB>>", "167": "<(IDENTIFIER,g1,g1++)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.equals,G[i] == 2)<SUB>24</SUB>>", "171": "<(IDENTIFIER,G,G[i] == 2)<SUB>24</SUB>>", "173": "<(LITERAL,2,G[i] == 2)<SUB>24</SUB>>", "175": "<(IDENTIFIER,g2,g2++)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.equals,G[i] == 3)<SUB>25</SUB>>", "179": "<(IDENTIFIER,G,G[i] == 3)<SUB>25</SUB>>", "181": "<(LITERAL,3,G[i] == 3)<SUB>25</SUB>>", "183": "<(IDENTIFIER,g3,g3++)<SUB>25</SUB>>", "185": "<(IDENTIFIER,cnt,cnt = 0)<SUB>28</SUB>>", "187": "<(CONTROL_STRUCTURE,if (sum == t),if (sum == t))<SUB>29</SUB>>", "189": "<(IDENTIFIER,sum,sum == t)<SUB>29</SUB>>", "191": "<(f,f(g1, g2, g3, -1))<SUB>29</SUB>>", "193": "<(IDENTIFIER,g1,f(g1, g2, g3, -1))<SUB>29</SUB>>", "195": "<(IDENTIFIER,g3,f(g1, g2, g3, -1))<SUB>29</SUB>>", "197": "<(LITERAL,1,-1)<SUB>29</SUB>>", "199": "<(LOCAL,long i: long)<SUB>30</SUB>>", "201": "<(IDENTIFIER,i,long i = 1)<SUB>30</SUB>>", "203": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= g1)<SUB>30</SUB>>", "205": "<(IDENTIFIER,g1,i &lt;= g1)<SUB>30</SUB>>", "207": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "209": "<(IDENTIFIER,cnt,cnt *= i)<SUB>30</SUB>>", "211": "<(CONTROL_STRUCTURE,for (long i = 1; Some(i &lt;= g2); i++),for (long i = 1; Some(i &lt;= g2); i++))<SUB>31</SUB>>", "213": "<(&lt;operator&gt;.assignment,long i = 1)<SUB>31</SUB>>", "215": "<(LITERAL,1,long i = 1)<SUB>31</SUB>>", "217": "<(IDENTIFIER,i,i &lt;= g2)<SUB>31</SUB>>", "219": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "221": "<(&lt;operator&gt;.assignmentMultiplication,cnt *= i)<SUB>31</SUB>>", "223": "<(IDENTIFIER,i,cnt *= i)<SUB>31</SUB>>", "225": "<(LOCAL,long i: long)<SUB>32</SUB>>", "227": "<(IDENTIFIER,i,long i = 1)<SUB>32</SUB>>", "229": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= g3)<SUB>32</SUB>>", "231": "<(IDENTIFIER,g3,i &lt;= g3)<SUB>32</SUB>>", "233": "<(IDENTIFIER,i,i++)<SUB>32</SUB>>", "235": "<(IDENTIFIER,cnt,cnt *= i)<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.assignmentPlus,ans += cnt)<SUB>33</SUB>>", "239": "<(IDENTIFIER,cnt,ans += cnt)<SUB>33</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "245": "<(IDENTIFIER,ans,ans % 1000000007)<SUB>35</SUB>>", "247": "<(MODIFIER,PUBLIC)>", "249": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}