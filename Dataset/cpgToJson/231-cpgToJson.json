{"edges": [["19", "20"], ["19", "21"], ["19", "166"], ["19", "167"], ["19", "168"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "71"], ["21", "72"], ["21", "76"], ["21", "77"], ["21", "80"], ["21", "91"], ["21", "159"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "60"], ["54", "66"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["72", "73"], ["72", "74"], ["74", "75"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "151"], ["102", "103"], ["102", "108"], ["102", "118"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["119", "130"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "134"], ["130", "140"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["141", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["153", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["72", "77"], ["77", "82"], ["159", "168"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "58"], ["49", "74"], ["52", "49"], ["74", "72"], ["81", "87"], ["81", "93"], ["86", "93"], ["93", "96"], ["96", "104"], ["96", "162"], ["99", "96"], ["160", "163"], ["163", "159"], ["28", "26"], ["56", "61"], ["60", "67"], ["66", "52"], ["82", "81"], ["87", "86"], ["151", "99"], ["162", "160"], ["58", "56"], ["61", "64"], ["64", "60"], ["67", "66"], ["103", "110"], ["103", "126"], ["153", "151"], ["104", "103"], ["109", "156"], ["156", "153"], ["110", "115"], ["113", "109"], ["121", "131"], ["115", "113"], ["123", "121"], ["131", "136"], ["131", "143"], ["124", "123"], ["135", "156"], ["126", "124"], ["136", "135"], ["142", "156"], ["143", "147"], ["146", "142"], ["147", "146"], ["19", "24"], ["20", "168"], ["22", "168"], ["25", "168"], ["25", "168"], ["32", "168"], ["30", "168"], ["30", "168"], ["35", "168"], ["35", "168"], ["40", "168"], ["40", "168"], ["40", "168"], ["46", "168"], ["49", "168"], ["72", "168"], ["72", "168"], ["72", "168"], ["77", "168"], ["81", "168"], ["81", "168"], ["86", "168"], ["86", "168"], ["93", "168"], ["96", "168"], ["96", "168"], ["159", "168"], ["163", "168"], ["163", "168"], ["159", "168"], ["159", "168"], ["103", "168"], ["103", "168"], ["124", "168"], ["123", "168"], ["121", "168"], ["121", "168"], ["131", "168"], ["131", "168"], ["146", "168"], ["142", "168"], ["142", "168"], ["135", "168"], ["109", "168"], ["109", "168"], ["153", "168"], ["151", "168"], ["151", "168"], ["99", "168"], ["56", "168"], ["60", "168"], ["64", "168"], ["60", "168"], ["60", "168"], ["66", "168"], ["66", "168"], ["66", "168"], ["52", "168"], ["153", "168"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["74", "72"], ["19", "77"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "86"], ["19", "93"], ["163", "159"], ["163", "159"], ["25", "32"], ["19", "32"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["58", "56"], ["64", "60"], ["56", "66"], ["19", "66"], ["19", "74"], ["35", "81"], ["19", "81"], ["93", "96"], ["99", "96"], ["19", "96"], ["124", "99"], ["115", "99"], ["19", "99"], ["153", "151"], ["153", "151"], ["153", "151"], ["49", "163"], ["19", "163"], ["77", "163"], ["151", "163"], ["32", "58"], ["64", "58"], ["19", "58"], ["58", "64"], ["19", "64"], ["35", "103"], ["124", "103"], ["19", "103"], ["72", "109"], ["19", "153"], ["77", "153"], ["151", "153"], ["72", "153"], ["142", "153"], ["135", "153"], ["109", "153"], ["123", "121"], ["123", "121"], ["96", "115"], ["19", "115"], ["124", "123"], ["124", "123"], ["19", "123"], ["121", "131"], ["19", "131"], ["19", "135"], ["96", "124"], ["19", "124"], ["35", "124"], ["103", "124"], ["72", "142"], ["19", "142"], ["72", "146"], ["19", "146"], ["49", "49"], ["49", "60"], ["49", "64"], ["49", "66"], ["49", "52"], ["49", "56"], ["49", "67"], ["49", "58"], ["49", "61"], ["81", "87"], ["81", "86"], ["96", "96"], ["96", "99"], ["96", "103"], ["96", "151"], ["96", "104"], ["96", "153"], ["96", "156"], ["103", "115"], ["103", "113"], ["103", "131"], ["103", "121"], ["103", "123"], ["103", "126"], ["103", "110"], ["103", "124"], ["103", "109"], ["131", "136"], ["131", "146"], ["131", "142"], ["131", "143"], ["131", "147"], ["131", "135"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int num: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,num,int num = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] beacon = new int[1000001])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[1000001])>", "39": "<(LOCAL,int[] pos: int[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,pos,int[] pos = new int[num])<SUB>6</SUB>>", "43": "<(IDENTIFIER,num,new int[num])<SUB>6</SUB>>", "45": "<(LOCAL,int i: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; num)<SUB>7</SUB>>", "51": "<(IDENTIFIER,num,i &lt; num)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "55": "<(LOCAL,int position: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,position,int position = nextInt())<SUB>8</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,beacon[position])<SUB>9</SUB>>", "63": "<(IDENTIFIER,position,beacon[position] = nextInt())<SUB>9</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,pos[i] = position)<SUB>10</SUB>>", "71": "<(LOCAL,int[] dp: int[])<SUB>12</SUB>>", "73": "<(IDENTIFIER,dp,int[] dp = new int[1000001])<SUB>12</SUB>>", "75": "<(LITERAL,1000001,new int[1000001])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>13</SUB>>", "79": "<(LITERAL,0,int max = 0)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.notEquals,beacon[0] != 0)<SUB>14</SUB>>", "83": "<(IDENTIFIER,beacon,beacon[0] != 0)<SUB>14</SUB>>", "85": "<(LITERAL,0,beacon[0] != 0)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>15</SUB>>", "89": "<(LITERAL,0,dp[0] = 1)<SUB>15</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 1000000); i++),for (int i = 1; Some(i &lt;= 1000000); i++))<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>17</SUB>>", "95": "<(LITERAL,1,int i = 1)<SUB>17</SUB>>", "97": "<(IDENTIFIER,i,i &lt;= 1000000)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.equals,beacon[i] == 0)<SUB>18</SUB>>", "105": "<(IDENTIFIER,beacon,beacon[i] == 0)<SUB>18</SUB>>", "107": "<(LITERAL,0,beacon[i] == 0)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,dp[i] = dp[i - 1])<SUB>19</SUB>>", "111": "<(IDENTIFIER,dp,dp[i] = dp[i - 1])<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>19</SUB>>", "117": "<(LITERAL,1,i - 1)<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.assignment,int j = i - beacon[i] - 1)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.subtraction,i - beacon[i] - 1)<SUB>22</SUB>>", "125": "<(IDENTIFIER,i,i - beacon[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,beacon,i - beacon[i])<SUB>22</SUB>>", "129": "<(LITERAL,1,i - beacon[i] - 1)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; 0)<SUB>23</SUB>>", "133": "<(LITERAL,0,j &lt; 0)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.assignment,dp[i] = 1)<SUB>24</SUB>>", "137": "<(IDENTIFIER,dp,dp[i] = 1)<SUB>24</SUB>>", "139": "<(LITERAL,1,dp[i] = 1)<SUB>24</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>27</SUB>>", "145": "<(IDENTIFIER,i,dp[i] = dp[j] + 1)<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>27</SUB>>", "149": "<(IDENTIFIER,j,dp[j] + 1)<SUB>27</SUB>>", "151": "<(&lt;operator&gt;.assignment,max = Math.max(max, dp[i]))<SUB>30</SUB>>", "153": "<(max,Math.max(max, dp[i]))<SUB>30</SUB>>", "155": "<(IDENTIFIER,max,Math.max(max, dp[i]))<SUB>30</SUB>>", "157": "<(IDENTIFIER,dp,Math.max(max, dp[i]))<SUB>30</SUB>>", "159": "<(println,System.out.println(num - max))<SUB>32</SUB>>", "161": "<(IDENTIFIER,System,System.out.println(num - max))<SUB>32</SUB>>", "163": "<(&lt;operator&gt;.subtraction,num - max)<SUB>32</SUB>>", "165": "<(IDENTIFIER,max,num - max)<SUB>32</SUB>>", "167": "<(MODIFIER,STATIC)>"}}