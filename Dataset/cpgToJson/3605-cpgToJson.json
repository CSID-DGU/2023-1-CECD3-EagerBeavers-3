{"edges": [["26", "27"], ["26", "28"], ["26", "556"], ["26", "557"], ["26", "558"], ["28", "4"], ["28", "29"], ["28", "32"], ["28", "41"], ["28", "42"], ["28", "46"], ["28", "47"], ["28", "50"], ["28", "51"], ["28", "52"], ["28", "55"], ["28", "88"], ["28", "93"], ["28", "94"], ["28", "98"], ["28", "99"], ["28", "104"], ["28", "105"], ["28", "109"], ["28", "110"], ["28", "114"], ["28", "115"], ["28", "118"], ["28", "119"], ["28", "122"], ["28", "123"], ["28", "126"], ["28", "225"], ["28", "226"], ["28", "229"], ["28", "230"], ["28", "231"], ["28", "234"], ["28", "267"], ["28", "272"], ["28", "285"], ["28", "287"], ["28", "289"], ["28", "290"], ["28", "299"], ["28", "6"], ["28", "362"], ["28", "365"], ["28", "366"], ["28", "8"], ["28", "399"], ["28", "402"], ["28", "403"], ["28", "11"], ["28", "531"], ["28", "534"], ["28", "543"], ["28", "554"], ["29", "30"], ["29", "31"], ["32", "3"], ["32", "33"], ["33", "34"], ["33", "37"], ["33", "40"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "64"], ["55", "66"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["66", "67"], ["66", "83"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "79"], ["73", "82"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "135"], ["126", "137"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["135", "136"], ["137", "138"], ["137", "146"], ["137", "220"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["144", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "156"], ["150", "157"], ["150", "160"], ["150", "193"], ["150", "198"], ["150", "211"], ["150", "213"], ["150", "216"], ["150", "219"], ["152", "153"], ["152", "154"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "165"], ["160", "169"], ["160", "171"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["167", "168"], ["169", "170"], ["171", "172"], ["171", "188"], ["172", "173"], ["172", "178"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "184"], ["178", "187"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "206"], ["202", "210"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "209"], ["211", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["234", "239"], ["234", "243"], ["234", "245"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["241", "242"], ["243", "244"], ["245", "246"], ["245", "262"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "258"], ["252", "261"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "280"], ["276", "284"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["280", "283"], ["285", "286"], ["287", "288"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "296"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["299", "304"], ["299", "309"], ["299", "311"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "308"], ["309", "310"], ["311", "312"], ["312", "313"], ["312", "314"], ["312", "317"], ["312", "324"], ["312", "326"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["324", "325"], ["326", "327"], ["327", "328"], ["327", "347"], ["327", "354"], ["328", "329"], ["328", "342"], ["329", "330"], ["329", "339"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "341"], ["342", "343"], ["342", "344"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "353"], ["348", "349"], ["348", "352"], ["349", "350"], ["349", "351"], ["354", "355"], ["355", "356"], ["355", "361"], ["356", "357"], ["356", "360"], ["357", "358"], ["357", "359"], ["362", "363"], ["362", "364"], ["365", "5"], ["366", "367"], ["366", "368"], ["366", "371"], ["366", "376"], ["366", "378"], ["368", "369"], ["368", "370"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "375"], ["376", "377"], ["378", "379"], ["378", "394"], ["379", "380"], ["379", "393"], ["380", "381"], ["380", "388"], ["381", "382"], ["381", "383"], ["383", "384"], ["383", "387"], ["384", "385"], ["384", "386"], ["388", "389"], ["388", "392"], ["389", "390"], ["389", "391"], ["394", "395"], ["394", "396"], ["396", "397"], ["396", "398"], ["399", "400"], ["399", "401"], ["402", "7"], ["403", "404"], ["403", "407"], ["404", "405"], ["405", "406"], ["407", "408"], ["407", "409"], ["407", "413"], ["407", "424"], ["407", "437"], ["409", "410"], ["409", "411"], ["411", "412"], ["413", "414"], ["413", "423"], ["414", "415"], ["414", "420"], ["415", "416"], ["415", "417"], ["417", "418"], ["417", "419"], ["420", "421"], ["420", "422"], ["424", "425"], ["424", "427"], ["424", "430"], ["425", "426"], ["427", "428"], ["427", "429"], ["430", "9"], ["430", "431"], ["430", "434"], ["431", "432"], ["431", "433"], ["434", "435"], ["434", "436"], ["437", "438"], ["437", "439"], ["437", "443"], ["437", "446"], ["437", "448"], ["439", "440"], ["439", "441"], ["441", "442"], ["443", "444"], ["443", "445"], ["446", "447"], ["448", "449"], ["449", "450"], ["449", "451"], ["449", "455"], ["449", "458"], ["449", "460"], ["451", "452"], ["451", "453"], ["453", "454"], ["455", "456"], ["455", "457"], ["458", "459"], ["460", "461"], ["460", "478"], ["461", "462"], ["461", "477"], ["462", "463"], ["462", "470"], ["463", "464"], ["463", "467"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "469"], ["470", "471"], ["470", "474"], ["471", "472"], ["471", "473"], ["474", "475"], ["474", "476"], ["478", "479"], ["478", "494"], ["478", "495"], ["479", "480"], ["479", "493"], ["480", "481"], ["480", "488"], ["481", "482"], ["481", "483"], ["483", "484"], ["483", "487"], ["484", "485"], ["484", "486"], ["488", "489"], ["488", "492"], ["489", "490"], ["489", "491"], ["495", "496"], ["496", "497"], ["496", "512"], ["497", "498"], ["497", "511"], ["498", "499"], ["498", "506"], ["499", "500"], ["499", "501"], ["501", "502"], ["501", "505"], ["502", "503"], ["502", "504"], ["506", "507"], ["506", "510"], ["507", "508"], ["507", "509"], ["512", "513"], ["512", "514"], ["514", "515"], ["514", "518"], ["514", "530"], ["515", "516"], ["515", "517"], ["518", "519"], ["518", "520"], ["518", "525"], ["520", "521"], ["520", "524"], ["521", "522"], ["521", "523"], ["525", "526"], ["525", "529"], ["526", "527"], ["526", "528"], ["531", "532"], ["531", "533"], ["534", "10"], ["534", "535"], ["535", "536"], ["535", "539"], ["535", "542"], ["536", "537"], ["536", "538"], ["539", "540"], ["539", "541"], ["543", "544"], ["543", "545"], ["545", "546"], ["545", "551"], ["546", "547"], ["546", "550"], ["547", "548"], ["547", "549"], ["551", "552"], ["551", "553"], ["554", "555"], ["29", "36"], ["32", "44"], ["42", "47"], ["47", "52"], ["52", "57"], ["88", "96"], ["94", "101"], ["99", "107"], ["105", "112"], ["110", "115"], ["115", "119"], ["119", "123"], ["123", "128"], ["226", "231"], ["231", "236"], ["267", "273"], ["272", "285"], ["285", "287"], ["287", "293"], ["290", "301"], ["362", "365"], ["365", "368"], ["399", "402"], ["402", "405"], ["531", "538"], ["534", "549"], ["543", "554"], ["554", "558"], ["31", "29"], ["44", "42"], ["57", "62"], ["60", "69"], ["60", "90"], ["64", "62"], ["90", "88"], ["96", "94"], ["101", "99"], ["107", "105"], ["112", "110"], ["128", "133"], ["131", "140"], ["131", "226"], ["135", "133"], ["236", "241"], ["239", "248"], ["239", "269"], ["243", "241"], ["269", "267"], ["273", "279"], ["292", "290"], ["301", "308"], ["304", "314"], ["304", "364"], ["309", "308"], ["364", "362"], ["368", "375"], ["371", "384"], ["371", "401"], ["376", "375"], ["401", "399"], ["404", "411"], ["404", "533"], ["533", "531"], ["545", "543"], ["34", "37"], ["37", "32"], ["62", "60"], ["83", "64"], ["133", "131"], ["220", "135"], ["241", "239"], ["262", "243"], ["277", "280"], ["280", "272"], ["293", "296"], ["296", "292"], ["306", "304"], ["373", "371"], ["379", "396"], ["394", "376"], ["405", "404"], ["409", "419"], ["413", "425"], ["536", "539"], ["539", "534"], ["546", "553"], ["551", "545"], ["36", "34"], ["68", "76"], ["68", "85"], ["85", "83"], ["139", "144"], ["139", "147"], ["144", "147"], ["147", "152"], ["147", "222"], ["222", "220"], ["247", "255"], ["247", "264"], ["264", "262"], ["279", "277"], ["308", "306"], ["314", "320"], ["317", "331"], ["317", "309"], ["324", "320"], ["375", "373"], ["380", "379"], ["396", "394"], ["411", "409"], ["414", "413"], ["425", "429"], ["425", "433"], ["427", "441"], ["430", "441"], ["439", "443"], ["443", "405"], ["443", "453"], ["446", "443"], ["538", "536"], ["547", "546"], ["553", "551"], ["69", "68"], ["74", "79"], ["79", "64"], ["140", "139"], ["152", "157"], ["157", "162"], ["193", "199"], ["198", "211"], ["211", "213"], ["213", "216"], ["216", "135"], ["248", "247"], ["253", "258"], ["258", "243"], ["319", "317"], ["381", "389"], ["388", "380"], ["415", "422"], ["420", "414"], ["429", "427"], ["431", "436"], ["434", "430"], ["441", "439"], ["549", "547"], ["76", "74"], ["162", "167"], ["165", "174"], ["165", "195"], ["169", "167"], ["195", "193"], ["199", "205"], ["255", "253"], ["320", "323"], ["323", "319"], ["328", "349"], ["328", "357"], ["347", "324"], ["383", "381"], ["389", "392"], ["392", "388"], ["417", "415"], ["422", "420"], ["433", "431"], ["436", "434"], ["451", "455"], ["455", "464"], ["455", "446"], ["458", "455"], ["167", "165"], ["188", "169"], ["203", "206"], ["206", "198"], ["329", "328"], ["329", "344"], ["342", "328"], ["348", "347"], ["355", "324"], ["384", "387"], ["387", "383"], ["419", "417"], ["453", "451"], ["173", "181"], ["173", "190"], ["190", "188"], ["205", "203"], ["330", "329"], ["330", "339"], ["339", "329"], ["344", "342"], ["349", "348"], ["356", "355"], ["462", "458"], ["462", "486"], ["479", "458"], ["479", "504"], ["174", "173"], ["179", "184"], ["184", "169"], ["331", "330"], ["331", "336"], ["334", "330"], ["357", "356"], ["463", "462"], ["463", "471"], ["470", "462"], ["480", "479"], ["181", "179"], ["336", "334"], ["464", "463"], ["464", "467"], ["467", "463"], ["471", "470"], ["471", "474"], ["474", "470"], ["481", "491"], ["488", "480"], ["497", "517"], ["512", "458"], ["483", "481"], ["489", "488"], ["498", "497"], ["484", "483"], ["491", "489"], ["499", "509"], ["506", "498"], ["515", "523"], ["518", "512"], ["486", "484"], ["501", "499"], ["507", "506"], ["517", "515"], ["520", "528"], ["525", "518"], ["502", "501"], ["509", "507"], ["521", "520"], ["526", "525"], ["504", "502"], ["523", "521"], ["528", "526"], ["26", "31"], ["27", "558"], ["29", "558"], ["37", "558"], ["37", "558"], ["32", "558"], ["42", "558"], ["47", "558"], ["52", "558"], ["62", "558"], ["60", "558"], ["60", "558"], ["90", "558"], ["88", "558"], ["88", "558"], ["94", "558"], ["101", "558"], ["99", "558"], ["99", "558"], ["105", "558"], ["107", "558"], ["105", "558"], ["105", "558"], ["110", "558"], ["110", "558"], ["115", "558"], ["115", "558"], ["119", "558"], ["123", "558"], ["133", "558"], ["131", "558"], ["131", "558"], ["226", "558"], ["231", "558"], ["236", "558"], ["239", "558"], ["241", "558"], ["239", "558"], ["239", "558"], ["269", "558"], ["269", "558"], ["267", "558"], ["267", "558"], ["272", "558"], ["280", "558"], ["280", "558"], ["280", "558"], ["280", "558"], ["272", "558"], ["285", "558"], ["285", "558"], ["287", "558"], ["290", "558"], ["293", "558"], ["292", "558"], ["296", "558"], ["292", "558"], ["290", "558"], ["290", "558"], ["304", "558"], ["304", "558"], ["362", "558"], ["365", "558"], ["368", "558"], ["371", "558"], ["371", "558"], ["371", "558"], ["399", "558"], ["402", "558"], ["402", "558"], ["405", "558"], ["404", "558"], ["404", "558"], ["531", "558"], ["536", "558"], ["539", "558"], ["539", "558"], ["534", "558"], ["546", "558"], ["545", "558"], ["545", "558"], ["543", "558"], ["543", "558"], ["554", "558"], ["554", "558"], ["409", "558"], ["409", "558"], ["409", "558"], ["413", "558"], ["413", "558"], ["430", "558"], ["430", "558"], ["430", "558"], ["430", "558"], ["427", "558"], ["427", "558"], ["427", "558"], ["439", "558"], ["439", "558"], ["443", "558"], ["443", "558"], ["451", "558"], ["451", "558"], ["455", "558"], ["455", "558"], ["446", "558"], ["463", "558"], ["463", "558"], ["462", "558"], ["470", "558"], ["470", "558"], ["462", "558"], ["462", "558"], ["483", "558"], ["488", "558"], ["479", "558"], ["479", "558"], ["497", "558"], ["497", "558"], ["518", "558"], ["520", "558"], ["518", "558"], ["525", "558"], ["518", "558"], ["518", "558"], ["512", "558"], ["458", "558"], ["379", "558"], ["379", "558"], ["394", "558"], ["394", "558"], ["376", "558"], ["314", "558"], ["317", "558"], ["317", "558"], ["309", "558"], ["330", "558"], ["336", "558"], ["334", "558"], ["330", "558"], ["329", "558"], ["329", "558"], ["328", "558"], ["344", "558"], ["342", "558"], ["328", "558"], ["328", "558"], ["355", "558"], ["355", "558"], ["347", "558"], ["347", "558"], ["324", "558"], ["247", "558"], ["247", "558"], ["262", "558"], ["262", "558"], ["253", "558"], ["258", "558"], ["243", "558"], ["139", "558"], ["139", "558"], ["144", "558"], ["147", "558"], ["147", "558"], ["220", "558"], ["220", "558"], ["206", "558"], ["213", "558"], ["216", "558"], ["216", "558"], ["135", "558"], ["173", "558"], ["173", "558"], ["188", "558"], ["188", "558"], ["179", "558"], ["184", "558"], ["169", "558"], ["68", "558"], ["68", "558"], ["83", "558"], ["83", "558"], ["74", "558"], ["79", "558"], ["64", "558"], ["26", "27"], ["26", "29"], ["44", "42"], ["26", "47"], ["26", "52"], ["90", "88"], ["90", "88"], ["96", "94"], ["101", "99"], ["101", "99"], ["107", "105"], ["112", "110"], ["26", "115"], ["26", "119"], ["26", "123"], ["26", "226"], ["26", "231"], ["269", "267"], ["269", "267"], ["277", "272"], ["280", "272"], ["26", "272"], ["292", "290"], ["292", "290"], ["26", "362"], ["26", "399"], ["26", "531"], ["29", "32"], ["26", "32"], ["34", "32"], ["37", "32"], ["26", "57"], ["26", "128"], ["26", "236"], ["123", "285"], ["211", "285"], ["26", "285"], ["112", "287"], ["26", "287"], ["26", "301"], ["362", "365"], ["26", "365"], ["26", "368"], ["399", "402"], ["26", "402"], ["531", "534"], ["26", "534"], ["536", "534"], ["539", "534"], ["534", "543"], ["26", "543"], ["402", "543"], ["430", "543"], ["427", "543"], ["543", "554"], ["26", "554"], ["26", "34"], ["26", "40"], ["32", "44"], ["26", "44"], ["57", "60"], ["64", "60"], ["26", "60"], ["62", "60"], ["69", "64"], ["85", "64"], ["26", "64"], ["85", "83"], ["85", "83"], ["76", "90"], ["26", "90"], ["47", "90"], ["83", "90"], ["79", "90"], ["44", "96"], ["26", "96"], ["90", "101"], ["26", "101"], ["94", "101"], ["99", "107"], ["26", "107"], ["96", "112"], ["26", "112"], ["128", "131"], ["135", "131"], ["26", "131"], ["133", "131"], ["140", "135"], ["222", "135"], ["26", "135"], ["222", "220"], ["222", "220"], ["236", "239"], ["243", "239"], ["26", "239"], ["241", "239"], ["248", "243"], ["264", "243"], ["26", "243"], ["264", "262"], ["264", "262"], ["101", "269"], ["255", "269"], ["195", "269"], ["26", "269"], ["226", "269"], ["262", "269"], ["258", "269"], ["26", "277"], ["26", "284"], ["52", "292"], ["74", "292"], ["26", "292"], ["88", "292"], ["301", "304"], ["309", "304"], ["26", "304"], ["290", "304"], ["304", "309"], ["331", "309"], ["334", "309"], ["26", "309"], ["368", "371"], ["376", "371"], ["26", "371"], ["105", "371"], ["371", "376"], ["26", "376"], ["26", "379"], ["405", "404"], ["411", "409"], ["26", "413"], ["26", "536"], ["26", "542"], ["402", "545"], ["430", "545"], ["427", "545"], ["26", "545"], ["34", "37"], ["26", "37"], ["42", "62"], ["69", "62"], ["85", "62"], ["26", "62"], ["47", "83"], ["79", "83"], ["26", "83"], ["110", "133"], ["140", "133"], ["222", "133"], ["26", "133"], ["119", "220"], ["213", "220"], ["26", "220"], ["119", "241"], ["248", "241"], ["264", "241"], ["220", "241"], ["213", "241"], ["26", "241"], ["226", "262"], ["258", "262"], ["26", "262"], ["277", "280"], ["26", "280"], ["231", "280"], ["253", "280"], ["267", "280"], ["52", "293"], ["74", "293"], ["26", "293"], ["88", "296"], ["26", "296"], ["26", "314"], ["365", "394"], ["26", "394"], ["105", "394"], ["365", "405"], ["425", "405"], ["512", "405"], ["394", "405"], ["26", "405"], ["26", "427"], ["441", "439"], ["536", "539"], ["26", "539"], ["402", "546"], ["430", "546"], ["427", "546"], ["26", "546"], ["69", "68"], ["69", "68"], ["26", "68"], ["76", "74"], ["76", "74"], ["26", "79"], ["69", "85"], ["26", "85"], ["69", "85"], ["140", "139"], ["140", "139"], ["26", "139"], ["115", "144"], ["147", "144"], ["216", "144"], ["26", "144"], ["115", "147"], ["144", "147"], ["216", "147"], ["26", "147"], ["26", "152"], ["26", "157"], ["195", "193"], ["195", "193"], ["203", "198"], ["206", "198"], ["26", "198"], ["26", "213"], ["26", "216"], ["140", "222"], ["26", "222"], ["140", "222"], ["248", "247"], ["248", "247"], ["26", "247"], ["255", "253"], ["255", "253"], ["26", "258"], ["248", "264"], ["26", "264"], ["248", "264"], ["314", "317"], ["324", "317"], ["26", "317"], ["317", "324"], ["339", "324"], ["342", "324"], ["26", "324"], ["405", "411"], ["26", "411"], ["411", "425"], ["26", "425"], ["402", "430"], ["427", "430"], ["26", "430"], ["409", "430"], ["439", "443"], ["446", "443"], ["26", "443"], ["443", "446"], ["464", "446"], ["471", "446"], ["26", "446"], ["62", "69"], ["26", "69"], ["60", "69"], ["133", "140"], ["26", "140"], ["131", "140"], ["26", "162"], ["123", "211"], ["26", "211"], ["241", "248"], ["26", "248"], ["239", "248"], ["26", "347"], ["26", "441"], ["453", "451"], ["26", "76"], ["47", "76"], ["83", "76"], ["79", "76"], ["162", "165"], ["169", "165"], ["26", "165"], ["167", "165"], ["174", "169"], ["190", "169"], ["26", "169"], ["190", "188"], ["190", "188"], ["101", "195"], ["181", "195"], ["26", "195"], ["152", "195"], ["188", "195"], ["184", "195"], ["26", "203"], ["26", "210"], ["101", "255"], ["195", "255"], ["26", "255"], ["226", "255"], ["262", "255"], ["258", "255"], ["329", "328"], ["329", "328"], ["342", "328"], ["342", "328"], ["26", "355"], ["451", "455"], ["458", "455"], ["26", "455"], ["455", "458"], ["467", "458"], ["474", "458"], ["26", "458"], ["119", "167"], ["220", "167"], ["213", "167"], ["174", "167"], ["190", "167"], ["26", "167"], ["152", "188"], ["184", "188"], ["26", "188"], ["203", "206"], ["26", "206"], ["157", "206"], ["179", "206"], ["193", "206"], ["330", "329"], ["330", "329"], ["339", "329"], ["339", "329"], ["317", "342"], ["339", "342"], ["26", "342"], ["88", "342"], ["26", "453"], ["174", "173"], ["174", "173"], ["26", "173"], ["181", "179"], ["181", "179"], ["26", "184"], ["174", "190"], ["26", "190"], ["174", "190"], ["331", "330"], ["331", "330"], ["334", "330"], ["334", "330"], ["317", "339"], ["26", "339"], ["26", "344"], ["88", "344"], ["463", "462"], ["463", "462"], ["470", "462"], ["470", "462"], ["497", "479"], ["26", "479"], ["167", "174"], ["26", "174"], ["165", "174"], ["304", "331"], ["334", "331"], ["26", "331"], ["331", "334"], ["26", "334"], ["52", "334"], ["74", "334"], ["464", "463"], ["464", "463"], ["467", "463"], ["467", "463"], ["471", "470"], ["471", "470"], ["474", "470"], ["474", "470"], ["329", "470"], ["26", "497"], ["101", "181"], ["195", "181"], ["26", "181"], ["152", "181"], ["188", "181"], ["184", "181"], ["26", "336"], ["52", "336"], ["74", "336"], ["443", "464"], ["471", "464"], ["26", "464"], ["455", "467"], ["26", "467"], ["464", "471"], ["26", "471"], ["455", "474"], ["467", "474"], ["26", "474"], ["409", "488"], ["430", "488"], ["455", "488"], ["467", "488"], ["474", "488"], ["26", "488"], ["425", "512"], ["26", "512"], ["515", "512"], ["518", "512"], ["409", "483"], ["430", "483"], ["464", "483"], ["471", "483"], ["26", "483"], ["26", "515"], ["26", "530"], ["409", "506"], ["26", "506"], ["455", "506"], ["467", "506"], ["474", "506"], ["515", "518"], ["26", "518"], ["409", "518"], ["464", "518"], ["471", "518"], ["455", "518"], ["467", "518"], ["474", "518"], ["409", "501"], ["26", "501"], ["464", "501"], ["471", "501"], ["409", "520"], ["26", "520"], ["464", "520"], ["471", "520"], ["409", "525"], ["26", "525"], ["455", "525"], ["467", "525"], ["474", "525"], ["60", "68"], ["60", "60"], ["60", "64"], ["60", "69"], ["60", "62"], ["131", "140"], ["131", "147"], ["131", "135"], ["131", "133"], ["131", "131"], ["131", "139"], ["239", "243"], ["239", "247"], ["239", "241"], ["239", "239"], ["239", "248"], ["304", "308"], ["304", "317"], ["304", "306"], ["304", "304"], ["304", "323"], ["304", "319"], ["304", "320"], ["304", "309"], ["304", "314"], ["371", "376"], ["371", "384"], ["371", "383"], ["371", "392"], ["371", "394"], ["371", "396"], ["371", "389"], ["371", "380"], ["371", "388"], ["371", "379"], ["371", "373"], ["371", "375"], ["371", "387"], ["371", "381"], ["371", "371"], ["404", "414"], ["404", "405"], ["404", "441"], ["404", "425"], ["404", "404"], ["404", "415"], ["404", "413"], ["404", "411"], ["404", "420"], ["404", "417"], ["404", "443"], ["404", "409"], ["404", "419"], ["404", "439"], ["404", "422"], ["68", "74"], ["68", "76"], ["68", "85"], ["68", "79"], ["68", "83"], ["139", "144"], ["147", "167"], ["147", "213"], ["147", "162"], ["147", "206"], ["147", "195"], ["147", "152"], ["147", "199"], ["147", "216"], ["147", "222"], ["147", "198"], ["147", "205"], ["147", "193"], ["147", "157"], ["147", "220"], ["147", "165"], ["147", "211"], ["147", "203"], ["247", "262"], ["247", "264"], ["247", "258"], ["247", "253"], ["247", "255"], ["317", "317"], ["317", "324"], ["317", "329"], ["317", "328"], ["317", "323"], ["317", "319"], ["317", "320"], ["317", "330"], ["317", "331"], ["425", "430"], ["425", "429"], ["425", "433"], ["425", "434"], ["425", "427"], ["425", "431"], ["425", "436"], ["443", "446"], ["443", "443"], ["443", "455"], ["443", "453"], ["443", "451"], ["165", "167"], ["165", "174"], ["165", "169"], ["165", "173"], ["165", "165"], ["328", "356"], ["328", "349"], ["328", "355"], ["328", "348"], ["328", "347"], ["328", "357"], ["455", "464"], ["455", "462"], ["455", "455"], ["455", "458"], ["455", "463"], ["329", "342"], ["329", "344"], ["173", "188"], ["173", "181"], ["173", "190"], ["173", "184"], ["173", "179"], ["330", "339"], ["462", "480"], ["462", "488"], ["462", "486"], ["462", "484"], ["462", "479"], ["462", "489"], ["462", "481"], ["462", "483"], ["462", "491"], ["479", "512"], ["479", "528"], ["479", "518"], ["479", "509"], ["479", "517"], ["479", "499"], ["479", "498"], ["479", "525"], ["479", "523"], ["479", "504"], ["479", "507"], ["479", "497"], ["479", "520"], ["479", "521"], ["479", "502"], ["479", "506"], ["479", "515"], ["479", "526"], ["479", "501"], ["331", "334"], ["331", "336"], ["463", "471"], ["463", "470"], ["464", "467"], ["471", "474"]], "features": {"26": "<(METHOD,main)<SUB>1</SUB>>", "28": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "29": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.alloc,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>3</SUB>>", "38": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,String dimensions = readLine())<SUB>5</SUB>>", "44": "<(readLine,readLine())<SUB>5</SUB>>", "46": "<(LOCAL,String extractDim: java.lang.String)<SUB>6</SUB>>", "48": "<(IDENTIFIER,extractDim,String extractDim = &quot;&quot;)<SUB>6</SUB>>", "50": "<(LOCAL,int n: int)<SUB>7</SUB>>", "52": "<(&lt;operator&gt;.assignment,int n = 0)<SUB>7</SUB>>", "54": "<(LITERAL,0,int n = 0)<SUB>7</SUB>>", "56": "<(LOCAL,int i: int)<SUB>8</SUB>>", "58": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "60": "<(&lt;operator&gt;.lessThan,i &lt; dimensions.length())<SUB>8</SUB>>", "62": "<(length,dimensions.length())<SUB>8</SUB>>", "64": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "66": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "68": "<(&lt;operator&gt;.equals,dimensions.charAt(i) == ' ')<SUB>10</SUB>>", "70": "<(IDENTIFIER,dimensions,dimensions.charAt(i))<SUB>10</SUB>>", "72": "<(LITERAL,' ',dimensions.charAt(i) == ' ')<SUB>10</SUB>>", "74": "<(&lt;operator&gt;.assignment,n = Integer.parseInt(extractDim))<SUB>12</SUB>>", "76": "<(parseInt,Integer.parseInt(extractDim))<SUB>12</SUB>>", "78": "<(IDENTIFIER,extractDim,Integer.parseInt(extractDim))<SUB>12</SUB>>", "80": "<(IDENTIFIER,extractDim,extractDim = &quot;&quot;)<SUB>13</SUB>>", "82": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>14</SUB>>", "84": "<(IDENTIFIER,extractDim,extractDim += dimensions.charAt(i))<SUB>16</SUB>>", "86": "<(IDENTIFIER,dimensions,dimensions.charAt(i))<SUB>16</SUB>>", "88": "<(&lt;operator&gt;.assignment,m = Integer.parseInt(extractDim))<SUB>18</SUB>>", "90": "<(parseInt,Integer.parseInt(extractDim))<SUB>18</SUB>>", "92": "<(IDENTIFIER,extractDim,Integer.parseInt(extractDim))<SUB>18</SUB>>", "94": "<(&lt;operator&gt;.assignment,String burningTrees = readLine())<SUB>20</SUB>>", "96": "<(readLine,readLine())<SUB>20</SUB>>", "98": "<(LOCAL,int k: int)<SUB>22</SUB>>", "100": "<(IDENTIFIER,k,int k = Integer.parseInt(burningTrees))<SUB>22</SUB>>", "102": "<(IDENTIFIER,Integer,Integer.parseInt(burningTrees))<SUB>22</SUB>>", "104": "<(LOCAL,Point[] coord: ANY)<SUB>24</SUB>>", "106": "<(IDENTIFIER,coord,ANY coord = new Point[k])<SUB>24</SUB>>", "108": "<(IDENTIFIER,k,new Point[k])<SUB>24</SUB>>", "110": "<(&lt;operator&gt;.assignment,String coordSet = readLine())<SUB>26</SUB>>", "112": "<(readLine,readLine())<SUB>26</SUB>>", "114": "<(LOCAL,int spaceCount: int)<SUB>27</SUB>>", "116": "<(IDENTIFIER,spaceCount,int spaceCount = 0)<SUB>27</SUB>>", "118": "<(LOCAL,String newCoord: java.lang.String)<SUB>28</SUB>>", "120": "<(IDENTIFIER,newCoord,String newCoord = &quot;&quot;)<SUB>28</SUB>>", "122": "<(LOCAL,int s: int)<SUB>29</SUB>>", "124": "<(IDENTIFIER,s,int s = 0)<SUB>29</SUB>>", "126": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; coordSet.length()); i++),for (int i = 0; Some(i &lt; coordSet.length()); i++))<SUB>30</SUB>>", "128": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "130": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "132": "<(IDENTIFIER,i,i &lt; coordSet.length())<SUB>30</SUB>>", "134": "<(IDENTIFIER,coordSet,coordSet.length())<SUB>30</SUB>>", "136": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "138": "<(CONTROL_STRUCTURE,if (coordSet.charAt(i) == ' '),if (coordSet.charAt(i) == ' '))<SUB>32</SUB>>", "140": "<(charAt,coordSet.charAt(i))<SUB>32</SUB>>", "142": "<(IDENTIFIER,i,coordSet.charAt(i))<SUB>32</SUB>>", "144": "<(&lt;operator&gt;.postIncrement,spaceCount++)<SUB>33</SUB>>", "146": "<(CONTROL_STRUCTURE,if (spaceCount == 2),if (spaceCount == 2))<SUB>35</SUB>>", "148": "<(IDENTIFIER,spaceCount,spaceCount == 2)<SUB>35</SUB>>", "150": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "152": "<(&lt;operator&gt;.assignment,String extractCoord = &quot;&quot;)<SUB>37</SUB>>", "154": "<(LITERAL,&quot;&quot;,String extractCoord = &quot;&quot;)<SUB>37</SUB>>", "156": "<(LOCAL,int y: int)<SUB>38</SUB>>", "158": "<(IDENTIFIER,x,int x = 0)<SUB>38</SUB>>", "160": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; newCoord.length()); j++),for (int j = 0; Some(j &lt; newCoord.length()); j++))<SUB>39</SUB>>", "162": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>39</SUB>>", "164": "<(LITERAL,0,int j = 0)<SUB>39</SUB>>", "166": "<(IDENTIFIER,j,j &lt; newCoord.length())<SUB>39</SUB>>", "168": "<(IDENTIFIER,newCoord,newCoord.length())<SUB>39</SUB>>", "170": "<(IDENTIFIER,j,j++)<SUB>39</SUB>>", "172": "<(CONTROL_STRUCTURE,if (newCoord.charAt(j) == ' '),if (newCoord.charAt(j) == ' '))<SUB>41</SUB>>", "174": "<(charAt,newCoord.charAt(j))<SUB>41</SUB>>", "176": "<(IDENTIFIER,j,newCoord.charAt(j))<SUB>41</SUB>>", "178": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "180": "<(IDENTIFIER,x,x = Integer.parseInt(extractCoord))<SUB>43</SUB>>", "182": "<(IDENTIFIER,Integer,Integer.parseInt(extractCoord))<SUB>43</SUB>>", "184": "<(&lt;operator&gt;.assignment,extractCoord = &quot;&quot;)<SUB>44</SUB>>", "186": "<(LITERAL,&quot;&quot;,extractCoord = &quot;&quot;)<SUB>44</SUB>>", "188": "<(&lt;operator&gt;.assignmentPlus,extractCoord += newCoord.charAt(j))<SUB>47</SUB>>", "190": "<(charAt,newCoord.charAt(j))<SUB>47</SUB>>", "192": "<(IDENTIFIER,j,newCoord.charAt(j))<SUB>47</SUB>>", "194": "<(IDENTIFIER,y,y = Integer.parseInt(extractCoord))<SUB>49</SUB>>", "196": "<(IDENTIFIER,Integer,Integer.parseInt(extractCoord))<SUB>49</SUB>>", "198": "<(&lt;operator&gt;.assignment,coord[s] = new Point(x, y))<SUB>51</SUB>>", "200": "<(IDENTIFIER,coord,coord[s] = new Point(x, y))<SUB>51</SUB>>", "202": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "204": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "206": "<(&lt;init&gt;,new Point(x, y))<SUB>51</SUB>>", "208": "<(IDENTIFIER,x,new Point(x, y))<SUB>51</SUB>>", "210": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "212": "<(IDENTIFIER,s,s++)<SUB>52</SUB>>", "214": "<(IDENTIFIER,newCoord,newCoord = &quot;&quot;)<SUB>53</SUB>>", "216": "<(&lt;operator&gt;.assignment,spaceCount = 0)<SUB>54</SUB>>", "218": "<(LITERAL,0,spaceCount = 0)<SUB>54</SUB>>", "220": "<(&lt;operator&gt;.assignmentPlus,newCoord += coordSet.charAt(i))<SUB>58</SUB>>", "222": "<(charAt,coordSet.charAt(i))<SUB>58</SUB>>", "224": "<(IDENTIFIER,i,coordSet.charAt(i))<SUB>58</SUB>>", "226": "<(&lt;operator&gt;.assignment,String extractCoord = &quot;&quot;)<SUB>61</SUB>>", "228": "<(LITERAL,&quot;&quot;,String extractCoord = &quot;&quot;)<SUB>61</SUB>>", "230": "<(LOCAL,int y: int)<SUB>62</SUB>>", "232": "<(IDENTIFIER,x,int x = 0)<SUB>62</SUB>>", "234": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; newCoord.length()); j++),for (int j = 0; Some(j &lt; newCoord.length()); j++))<SUB>63</SUB>>", "236": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>63</SUB>>", "238": "<(LITERAL,0,int j = 0)<SUB>63</SUB>>", "240": "<(IDENTIFIER,j,j &lt; newCoord.length())<SUB>63</SUB>>", "242": "<(IDENTIFIER,newCoord,newCoord.length())<SUB>63</SUB>>", "244": "<(IDENTIFIER,j,j++)<SUB>63</SUB>>", "246": "<(CONTROL_STRUCTURE,if (newCoord.charAt(j) == ' '),if (newCoord.charAt(j) == ' '))<SUB>65</SUB>>", "248": "<(charAt,newCoord.charAt(j))<SUB>65</SUB>>", "250": "<(IDENTIFIER,j,newCoord.charAt(j))<SUB>65</SUB>>", "252": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>66</SUB>>", "254": "<(IDENTIFIER,x,x = Integer.parseInt(extractCoord))<SUB>67</SUB>>", "256": "<(IDENTIFIER,Integer,Integer.parseInt(extractCoord))<SUB>67</SUB>>", "258": "<(&lt;operator&gt;.assignment,extractCoord = &quot;&quot;)<SUB>68</SUB>>", "260": "<(LITERAL,&quot;&quot;,extractCoord = &quot;&quot;)<SUB>68</SUB>>", "262": "<(&lt;operator&gt;.assignmentPlus,extractCoord += newCoord.charAt(j))<SUB>71</SUB>>", "264": "<(charAt,newCoord.charAt(j))<SUB>71</SUB>>", "266": "<(IDENTIFIER,j,newCoord.charAt(j))<SUB>71</SUB>>", "268": "<(IDENTIFIER,y,y = Integer.parseInt(extractCoord))<SUB>73</SUB>>", "270": "<(IDENTIFIER,Integer,Integer.parseInt(extractCoord))<SUB>73</SUB>>", "272": "<(&lt;operator&gt;.assignment,coord[s] = new Point(x, y))<SUB>75</SUB>>", "274": "<(IDENTIFIER,coord,coord[s] = new Point(x, y))<SUB>75</SUB>>", "276": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "278": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "280": "<(&lt;init&gt;,new Point(x, y))<SUB>75</SUB>>", "282": "<(IDENTIFIER,x,new Point(x, y))<SUB>75</SUB>>", "284": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "286": "<(IDENTIFIER,s,s++)<SUB>76</SUB>>", "288": "<(IDENTIFIER,br,close())<SUB>78</SUB>>", "290": "<(&lt;operator&gt;.assignment,int[][] forest = new int[n + 2][m + 2])<SUB>80</SUB>>", "292": "<(&lt;operator&gt;.alloc,new int[n + 2][m + 2])>", "294": "<(IDENTIFIER,n,n + 2)<SUB>80</SUB>>", "296": "<(&lt;operator&gt;.addition,m + 2)<SUB>80</SUB>>", "298": "<(LITERAL,2,m + 2)<SUB>80</SUB>>", "300": "<(LOCAL,int i: int)<SUB>82</SUB>>", "302": "<(IDENTIFIER,i,int i = 0)<SUB>82</SUB>>", "304": "<(&lt;operator&gt;.lessThan,i &lt; forest.length)<SUB>82</SUB>>", "306": "<(&lt;operator&gt;.fieldAccess,forest.length)<SUB>82</SUB>>", "308": "<(FIELD_IDENTIFIER,length,length)<SUB>82</SUB>>", "310": "<(IDENTIFIER,i,i++)<SUB>82</SUB>>", "312": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; forest[i].length); j++),for (int j = 0; Some(j &lt; forest[i].length); j++))<SUB>84</SUB>>", "314": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>84</SUB>>", "316": "<(LITERAL,0,int j = 0)<SUB>84</SUB>>", "318": "<(IDENTIFIER,j,j &lt; forest[i].length)<SUB>84</SUB>>", "320": "<(&lt;operator&gt;.indexAccess,forest[i])<SUB>84</SUB>>", "322": "<(IDENTIFIER,i,j &lt; forest[i].length)<SUB>84</SUB>>", "324": "<(&lt;operator&gt;.postIncrement,j++)<SUB>84</SUB>>", "326": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>85</SUB>>", "328": "<(&lt;operator&gt;.logicalOr,i == 0 || i == n + 1 || j == 0 || j == m + 1)<SUB>86</SUB>>", "330": "<(&lt;operator&gt;.logicalOr,i == 0 || i == n + 1)<SUB>86</SUB>>", "332": "<(IDENTIFIER,i,i == 0)<SUB>86</SUB>>", "334": "<(&lt;operator&gt;.equals,i == n + 1)<SUB>86</SUB>>", "336": "<(&lt;operator&gt;.addition,n + 1)<SUB>86</SUB>>", "338": "<(LITERAL,1,n + 1)<SUB>86</SUB>>", "340": "<(IDENTIFIER,j,j == 0)<SUB>86</SUB>>", "342": "<(&lt;operator&gt;.equals,j == m + 1)<SUB>86</SUB>>", "344": "<(&lt;operator&gt;.addition,m + 1)<SUB>86</SUB>>", "346": "<(LITERAL,1,m + 1)<SUB>86</SUB>>", "348": "<(&lt;operator&gt;.indexAccess,forest[i][j])<SUB>87</SUB>>", "350": "<(IDENTIFIER,forest,forest[i][j] = 0)<SUB>87</SUB>>", "352": "<(IDENTIFIER,j,forest[i][j] = 0)<SUB>87</SUB>>", "354": "<(CONTROL_STRUCTURE,else,else)<SUB>89</SUB>>", "356": "<(&lt;operator&gt;.indexAccess,forest[i][j])<SUB>89</SUB>>", "358": "<(IDENTIFIER,forest,forest[i][j] = 1)<SUB>89</SUB>>", "360": "<(IDENTIFIER,j,forest[i][j] = 1)<SUB>89</SUB>>", "6": "<(LOCAL,Queue&lt;Point&gt; q: ANY)<SUB>94</SUB>>", "363": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;&gt;())<SUB>94</SUB>>", "365": "<(&lt;init&gt;,new LinkedList&lt;&gt;())<SUB>94</SUB>>", "366": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; coord.length); i++),for (int i = 0; Some(i &lt; coord.length); i++))<SUB>96</SUB>>", "368": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>96</SUB>>", "370": "<(LITERAL,0,int i = 0)<SUB>96</SUB>>", "372": "<(IDENTIFIER,i,i &lt; coord.length)<SUB>96</SUB>>", "374": "<(IDENTIFIER,coord,i &lt; coord.length)<SUB>96</SUB>>", "376": "<(&lt;operator&gt;.postIncrement,i++)<SUB>96</SUB>>", "378": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>97</SUB>>", "380": "<(&lt;operator&gt;.indexAccess,forest[coord[i].x][coord[i].y])<SUB>98</SUB>>", "382": "<(IDENTIFIER,forest,forest[coord[i].x][coord[i].y] = 0)<SUB>98</SUB>>", "384": "<(&lt;operator&gt;.indexAccess,coord[i])<SUB>98</SUB>>", "386": "<(IDENTIFIER,i,forest[coord[i].x][coord[i].y] = 0)<SUB>98</SUB>>", "388": "<(&lt;operator&gt;.fieldAccess,coord[i].y)<SUB>98</SUB>>", "390": "<(IDENTIFIER,coord,forest[coord[i].x][coord[i].y] = 0)<SUB>98</SUB>>", "392": "<(FIELD_IDENTIFIER,y,y)<SUB>98</SUB>>", "394": "<(add,add(coord[i]))<SUB>99</SUB>>", "396": "<(&lt;operator&gt;.indexAccess,coord[i])<SUB>99</SUB>>", "398": "<(IDENTIFIER,i,add(coord[i]))<SUB>99</SUB>>", "399": "<(&lt;operator&gt;.assignment,ANY tree = new Point())<SUB>102</SUB>>", "401": "<(&lt;operator&gt;.alloc,new Point())<SUB>102</SUB>>", "7": "<(IDENTIFIER,tree,new Point())<SUB>102</SUB>>", "404": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>103</SUB>>", "406": "<(IDENTIFIER,q,isEmpty())<SUB>103</SUB>>", "408": "<(LOCAL,Point temp: ANY)<SUB>105</SUB>>", "410": "<(IDENTIFIER,temp,ANY temp = remove())<SUB>105</SUB>>", "412": "<(IDENTIFIER,q,remove())<SUB>105</SUB>>", "414": "<(&lt;operator&gt;.indexAccess,forest[temp.x][temp.y])<SUB>106</SUB>>", "416": "<(IDENTIFIER,forest,forest[temp.x][temp.y] = 0)<SUB>106</SUB>>", "418": "<(IDENTIFIER,temp,forest[temp.x][temp.y] = 0)<SUB>106</SUB>>", "420": "<(&lt;operator&gt;.fieldAccess,temp.y)<SUB>106</SUB>>", "422": "<(FIELD_IDENTIFIER,y,y)<SUB>106</SUB>>", "424": "<(CONTROL_STRUCTURE,if (q.isEmpty()),if (q.isEmpty()))<SUB>108</SUB>>", "426": "<(IDENTIFIER,q,isEmpty())<SUB>108</SUB>>", "428": "<(IDENTIFIER,tree,tree = new Point(temp.x, temp.y))<SUB>109</SUB>>", "430": "<(&lt;init&gt;,new Point(temp.x, temp.y))<SUB>109</SUB>>", "431": "<(&lt;operator&gt;.fieldAccess,temp.x)<SUB>109</SUB>>", "433": "<(FIELD_IDENTIFIER,x,x)<SUB>109</SUB>>", "435": "<(IDENTIFIER,temp,new Point(temp.x, temp.y))<SUB>109</SUB>>", "437": "<(CONTROL_STRUCTURE,for (int i = -1; Some(i &lt;= 1); i++),for (int i = -1; Some(i &lt;= 1); i++))<SUB>110</SUB>>", "439": "<(&lt;operator&gt;.assignment,int i = -1)<SUB>110</SUB>>", "441": "<(&lt;operator&gt;.minus,-1)<SUB>110</SUB>>", "443": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 1)<SUB>110</SUB>>", "445": "<(LITERAL,1,i &lt;= 1)<SUB>110</SUB>>", "447": "<(IDENTIFIER,i,i++)<SUB>110</SUB>>", "449": "<(CONTROL_STRUCTURE,for (int j = -1; Some(j &lt;= 1); j++),for (int j = -1; Some(j &lt;= 1); j++))<SUB>112</SUB>>", "451": "<(&lt;operator&gt;.assignment,int j = -1)<SUB>112</SUB>>", "453": "<(&lt;operator&gt;.minus,-1)<SUB>112</SUB>>", "455": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 1)<SUB>112</SUB>>", "457": "<(LITERAL,1,j &lt;= 1)<SUB>112</SUB>>", "459": "<(IDENTIFIER,j,j++)<SUB>112</SUB>>", "461": "<(CONTROL_STRUCTURE,if (i != 0 &amp;&amp; j != 0 || i == 0 &amp;&amp; j == 0),if (i != 0 &amp;&amp; j != 0 || i == 0 &amp;&amp; j == 0))<SUB>114</SUB>>", "463": "<(&lt;operator&gt;.logicalAnd,i != 0 &amp;&amp; j != 0)<SUB>114</SUB>>", "465": "<(IDENTIFIER,i,i != 0)<SUB>114</SUB>>", "467": "<(&lt;operator&gt;.notEquals,j != 0)<SUB>114</SUB>>", "469": "<(LITERAL,0,j != 0)<SUB>114</SUB>>", "471": "<(&lt;operator&gt;.equals,i == 0)<SUB>114</SUB>>", "473": "<(LITERAL,0,i == 0)<SUB>114</SUB>>", "475": "<(IDENTIFIER,j,j == 0)<SUB>114</SUB>>", "477": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>115</SUB>>", "479": "<(&lt;operator&gt;.equals,forest[temp.x + i][temp.y + j] == 0)<SUB>116</SUB>>", "481": "<(&lt;operator&gt;.indexAccess,forest[temp.x + i])<SUB>116</SUB>>", "483": "<(&lt;operator&gt;.addition,temp.x + i)<SUB>116</SUB>>", "485": "<(IDENTIFIER,temp,temp.x + i)<SUB>116</SUB>>", "487": "<(IDENTIFIER,i,temp.x + i)<SUB>116</SUB>>", "489": "<(&lt;operator&gt;.fieldAccess,temp.y)<SUB>116</SUB>>", "491": "<(FIELD_IDENTIFIER,y,y)<SUB>116</SUB>>", "493": "<(LITERAL,0,forest[temp.x + i][temp.y + j] == 0)<SUB>116</SUB>>", "495": "<(CONTROL_STRUCTURE,else,else)<SUB>119</SUB>>", "497": "<(&lt;operator&gt;.assignment,forest[temp.x + i][temp.y + j] = 0)<SUB>120</SUB>>", "499": "<(&lt;operator&gt;.indexAccess,forest[temp.x + i])<SUB>120</SUB>>", "501": "<(&lt;operator&gt;.addition,temp.x + i)<SUB>120</SUB>>", "503": "<(IDENTIFIER,temp,temp.x + i)<SUB>120</SUB>>", "505": "<(IDENTIFIER,i,temp.x + i)<SUB>120</SUB>>", "507": "<(&lt;operator&gt;.fieldAccess,temp.y)<SUB>120</SUB>>", "509": "<(FIELD_IDENTIFIER,y,y)<SUB>120</SUB>>", "511": "<(LITERAL,0,forest[temp.x + i][temp.y + j] = 0)<SUB>120</SUB>>", "513": "<(IDENTIFIER,q,add(new Point(temp.x + i, temp.y + j)))<SUB>121</SUB>>", "515": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "517": "<(&lt;operator&gt;.alloc,new Point(temp.x + i, temp.y + j))<SUB>121</SUB>>", "519": "<(IDENTIFIER,$obj7,new Point(temp.x + i, temp.y + j))>", "521": "<(&lt;operator&gt;.fieldAccess,temp.x)<SUB>121</SUB>>", "523": "<(FIELD_IDENTIFIER,x,x)<SUB>121</SUB>>", "525": "<(&lt;operator&gt;.addition,temp.y + j)<SUB>121</SUB>>", "527": "<(IDENTIFIER,temp,temp.y + j)<SUB>121</SUB>>", "529": "<(IDENTIFIER,j,temp.y + j)<SUB>121</SUB>>", "11": "<(LOCAL,BufferedWriter bw: ANY)<SUB>129</SUB>>", "532": "<(IDENTIFIER,bw,ANY bw = new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>129</SUB>>", "534": "<(&lt;init&gt;,new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>129</SUB>>", "535": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>129</SUB>>", "537": "<(IDENTIFIER,$obj8,&lt;empty&gt;)>", "539": "<(&lt;init&gt;,new FileWriter(&quot;output.txt&quot;))<SUB>129</SUB>>", "541": "<(LITERAL,&quot;output.txt&quot;,new FileWriter(&quot;output.txt&quot;))<SUB>129</SUB>>", "543": "<(write,write(tree.x + &quot; &quot; + tree.y))<SUB>130</SUB>>", "545": "<(&lt;operator&gt;.addition,tree.x + &quot; &quot; + tree.y)<SUB>130</SUB>>", "547": "<(&lt;operator&gt;.fieldAccess,tree.x)<SUB>130</SUB>>", "549": "<(FIELD_IDENTIFIER,x,x)<SUB>130</SUB>>", "551": "<(&lt;operator&gt;.fieldAccess,tree.y)<SUB>130</SUB>>", "553": "<(FIELD_IDENTIFIER,y,y)<SUB>130</SUB>>", "555": "<(IDENTIFIER,bw,close())<SUB>131</SUB>>", "557": "<(MODIFIER,STATIC)>"}}