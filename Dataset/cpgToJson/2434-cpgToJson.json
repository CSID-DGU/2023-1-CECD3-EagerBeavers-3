{"edges": [["19", "20"], ["19", "21"], ["19", "164"], ["19", "165"], ["19", "166"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "100"], ["21", "101"], ["21", "108"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "78"], ["76", "83"], ["76", "86"], ["76", "88"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "124"], ["118", "125"], ["118", "131"], ["118", "132"], ["118", "145"], ["118", "156"], ["120", "121"], ["120", "122"], ["122", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "130"], ["128", "129"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "144"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["152", "153"], ["152", "154"], ["154", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "163"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "62"], ["62", "67"], ["101", "110"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "59"], ["47", "44"], ["59", "57"], ["67", "70"], ["70", "80"], ["70", "104"], ["73", "70"], ["103", "101"], ["110", "113"], ["113", "166"], ["113", "122"], ["116", "113"], ["28", "26"], ["50", "47"], ["104", "103"], ["120", "128"], ["125", "136"], ["132", "147"], ["156", "116"], ["51", "54"], ["54", "50"], ["78", "83"], ["83", "91"], ["83", "73"], ["86", "83"], ["122", "120"], ["127", "125"], ["134", "132"], ["146", "154"], ["146", "159"], ["157", "160"], ["160", "156"], ["80", "78"], ["128", "127"], ["135", "134"], ["147", "146"], ["152", "159"], ["159", "157"], ["90", "98"], ["90", "86"], ["136", "140"], ["139", "135"], ["154", "152"], ["91", "94"], ["94", "90"], ["98", "86"], ["140", "139"], ["19", "24"], ["20", "166"], ["22", "166"], ["25", "166"], ["25", "166"], ["30", "166"], ["35", "166"], ["35", "166"], ["35", "166"], ["59", "166"], ["57", "166"], ["57", "166"], ["62", "166"], ["70", "166"], ["70", "166"], ["101", "166"], ["104", "166"], ["103", "166"], ["101", "166"], ["101", "166"], ["110", "166"], ["113", "166"], ["113", "166"], ["113", "166"], ["116", "166"], ["73", "166"], ["47", "166"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["59", "57"], ["19", "62"], ["103", "101"], ["103", "101"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "67"], ["19", "110"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["32", "59"], ["54", "59"], ["19", "59"], ["67", "70"], ["73", "70"], ["19", "70"], ["44", "70"], ["83", "70"], ["19", "73"], ["70", "73"], ["104", "103"], ["104", "103"], ["19", "103"], ["110", "113"], ["116", "113"], ["19", "113"], ["57", "113"], ["113", "116"], ["19", "116"], ["122", "120"], ["128", "125"], ["19", "125"], ["134", "132"], ["134", "132"], ["70", "78"], ["19", "78"], ["62", "104"], ["98", "104"], ["19", "104"], ["19", "156"], ["32", "54"], ["19", "54"], ["78", "83"], ["86", "83"], ["19", "83"], ["70", "83"], ["83", "86"], ["19", "86"], ["59", "122"], ["128", "122"], ["19", "122"], ["128", "127"], ["19", "127"], ["135", "134"], ["135", "134"], ["19", "134"], ["147", "146"], ["147", "146"], ["19", "146"], ["154", "152"], ["19", "160"], ["70", "80"], ["19", "80"], ["122", "128"], ["19", "128"], ["139", "135"], ["136", "135"], ["136", "135"], ["139", "135"], ["132", "147"], ["19", "147"], ["35", "90"], ["50", "90"], ["125", "136"], ["19", "136"], ["120", "136"], ["140", "139"], ["140", "139"], ["19", "139"], ["101", "154"], ["19", "154"], ["62", "98"], ["19", "98"], ["136", "140"], ["19", "140"], ["136", "140"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["70", "73"], ["70", "80"], ["70", "83"], ["70", "70"], ["70", "78"], ["113", "160"], ["113", "120"], ["113", "113"], ["113", "136"], ["113", "116"], ["113", "146"], ["113", "122"], ["113", "128"], ["113", "132"], ["113", "157"], ["113", "159"], ["113", "134"], ["113", "140"], ["113", "147"], ["113", "135"], ["113", "127"], ["113", "139"], ["113", "156"], ["113", "125"], ["83", "94"], ["83", "91"], ["83", "90"], ["83", "83"], ["83", "86"], ["146", "154"], ["146", "152"], ["90", "98"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,s,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>8</SUB>>", "59": "<(nextInt,nextInt())<SUB>8</SUB>>", "61": "<(LOCAL,int inv: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,inv,int inv = 0)<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "77": "<(LOCAL,int j: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,j,int j = i + 1)<SUB>13</SUB>>", "81": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>13</SUB>>", "85": "<(IDENTIFIER,n,j &lt; n)<SUB>13</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "89": "<(CONTROL_STRUCTURE,if (a[i] &gt; a[j]),if (a[i] &gt; a[j]))<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,a[i] &gt; a[j])<SUB>14</SUB>>", "95": "<(IDENTIFIER,a,a[i] &gt; a[j])<SUB>14</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "99": "<(IDENTIFIER,inv,inv++)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,boolean odd = inv % 2 == 1)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.equals,inv % 2 == 1)<SUB>20</SUB>>", "105": "<(IDENTIFIER,inv,inv % 2)<SUB>20</SUB>>", "107": "<(LITERAL,1,inv % 2 == 1)<SUB>20</SUB>>", "109": "<(LOCAL,int i: int)<SUB>22</SUB>>", "111": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>22</SUB>>", "115": "<(IDENTIFIER,m,i &lt; m)<SUB>22</SUB>>", "117": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "119": "<(LOCAL,int l: int)<SUB>23</SUB>>", "121": "<(IDENTIFIER,l,int l = nextInt())<SUB>23</SUB>>", "123": "<(IDENTIFIER,s,nextInt())<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.assignment,int r = s.nextInt() + 1)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.addition,s.nextInt() + 1)<SUB>24</SUB>>", "129": "<(IDENTIFIER,s,nextInt())<SUB>24</SUB>>", "131": "<(LOCAL,int num: int)<SUB>25</SUB>>", "133": "<(IDENTIFIER,num,int num = (r - l) * (r - l - 1) / 2)<SUB>25</SUB>>", "135": "<(&lt;operator&gt;.multiplication,(r - l) * (r - l - 1))<SUB>25</SUB>>", "137": "<(IDENTIFIER,r,r - l)<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.subtraction,r - l - 1)<SUB>25</SUB>>", "141": "<(IDENTIFIER,r,r - l)<SUB>25</SUB>>", "143": "<(LITERAL,1,r - l - 1)<SUB>25</SUB>>", "145": "<(CONTROL_STRUCTURE,if (num % 2 == 1),if (num % 2 == 1))<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.modulo,num % 2)<SUB>26</SUB>>", "149": "<(LITERAL,2,num % 2)<SUB>26</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "153": "<(IDENTIFIER,odd,odd = !odd)<SUB>27</SUB>>", "155": "<(IDENTIFIER,odd,!odd)<SUB>27</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "161": "<(IDENTIFIER,odd,(odd) ? &quot;odd&quot; : &quot;even&quot;)<SUB>29</SUB>>", "163": "<(LITERAL,&quot;even&quot;,(odd) ? &quot;odd&quot; : &quot;even&quot;)<SUB>29</SUB>>", "165": "<(MODIFIER,STATIC)>"}}