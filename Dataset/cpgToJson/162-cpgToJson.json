{"edges": [["19", "20"], ["19", "21"], ["19", "146"], ["19", "147"], ["19", "148"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "66"], ["59", "67"], ["59", "70"], ["59", "71"], ["59", "76"], ["59", "128"], ["59", "133"], ["59", "134"], ["59", "139"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "99"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["99", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["102", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "148"], ["54", "61"], ["57", "54"], ["28", "26"], ["60", "67"], ["67", "73"], ["71", "78"], ["128", "136"], ["134", "142"], ["139", "57"], ["61", "64"], ["64", "60"], ["73", "71"], ["78", "81"], ["81", "92"], ["81", "129"], ["84", "81"], ["129", "128"], ["136", "134"], ["140", "143"], ["143", "139"], ["142", "140"], ["88", "106"], ["88", "84"], ["89", "96"], ["96", "88"], ["100", "84"], ["91", "89"], ["102", "100"], ["92", "91"], ["105", "102"], ["106", "113"], ["109", "105"], ["111", "109"], ["112", "119"], ["117", "111"], ["113", "112"], ["118", "124"], ["123", "117"], ["119", "118"], ["124", "123"], ["19", "24"], ["20", "148"], ["22", "148"], ["25", "148"], ["25", "148"], ["30", "148"], ["35", "148"], ["37", "148"], ["35", "148"], ["35", "148"], ["40", "148"], ["40", "148"], ["40", "148"], ["45", "148"], ["45", "148"], ["45", "148"], ["51", "148"], ["54", "148"], ["54", "148"], ["54", "148"], ["57", "148"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["22", "25"], ["19", "25"], ["19", "51"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["81", "57"], ["19", "57"], ["64", "60"], ["35", "67"], ["96", "67"], ["112", "67"], ["19", "67"], ["45", "71"], ["60", "71"], ["67", "128"], ["100", "128"], ["19", "128"], ["40", "134"], ["128", "134"], ["19", "78"], ["134", "139"], ["19", "139"], ["37", "64"], ["19", "64"], ["78", "81"], ["84", "81"], ["19", "81"], ["54", "81"], ["81", "84"], ["19", "84"], ["134", "143"], ["19", "143"], ["89", "88"], ["89", "88"], ["96", "88"], ["96", "88"], ["102", "100"], ["102", "100"], ["102", "100"], ["102", "89"], ["19", "89"], ["91", "89"], ["91", "89"], ["19", "96"], ["112", "96"], ["35", "96"], ["45", "91"], ["123", "91"], ["71", "91"], ["123", "91"], ["19", "91"], ["109", "102"], ["19", "102"], ["67", "102"], ["100", "102"], ["40", "102"], ["109", "102"], ["40", "105"], ["109", "105"], ["109", "105"], ["89", "109"], ["19", "109"], ["111", "109"], ["111", "109"], ["112", "111"], ["112", "111"], ["117", "111"], ["113", "112"], ["113", "112"], ["19", "112"], ["118", "117"], ["118", "117"], ["123", "117"], ["123", "117"], ["19", "113"], ["96", "113"], ["45", "118"], ["91", "118"], ["91", "118"], ["19", "118"], ["45", "123"], ["118", "123"], ["118", "123"], ["19", "123"], ["54", "60"], ["54", "73"], ["54", "64"], ["54", "57"], ["54", "136"], ["54", "128"], ["54", "81"], ["54", "67"], ["54", "142"], ["54", "129"], ["54", "134"], ["54", "140"], ["54", "143"], ["54", "54"], ["54", "61"], ["54", "71"], ["54", "139"], ["54", "78"], ["81", "96"], ["81", "89"], ["81", "81"], ["81", "84"], ["81", "92"], ["81", "91"], ["81", "88"], ["88", "113"], ["88", "102"], ["88", "119"], ["88", "123"], ["88", "106"], ["88", "112"], ["88", "105"], ["88", "118"], ["88", "100"], ["88", "117"], ["88", "124"], ["88", "111"], ["88", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,double[] y: double[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new double[n])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>10</SUB>>", "63": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>10</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,double top = r)<SUB>11</SUB>>", "69": "<(IDENTIFIER,r,double top = r)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,int x = arr[i])<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>12</SUB>>", "75": "<(IDENTIFIER,i,int x = arr[i])<SUB>12</SUB>>", "77": "<(LOCAL,int j: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>13</SUB>>", "83": "<(IDENTIFIER,i,j &lt; i)<SUB>13</SUB>>", "85": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "87": "<(CONTROL_STRUCTURE,if (Math.abs(arr[j] - x) &lt;= 2 * r),if (Math.abs(arr[j] - x) &lt;= 2 * r))<SUB>15</SUB>>", "89": "<(abs,Math.abs(arr[j] - x))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.subtraction,arr[j] - x)<SUB>15</SUB>>", "93": "<(IDENTIFIER,arr,arr[j] - x)<SUB>15</SUB>>", "95": "<(IDENTIFIER,x,arr[j] - x)<SUB>15</SUB>>", "97": "<(LITERAL,2,2 * r)<SUB>15</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "101": "<(IDENTIFIER,top,top = Math.max(top, y[j] + Math.sqrt((4 * r * r) - ((arr[j] - x) * (arr[j] - x)))))<SUB>17</SUB>>", "103": "<(IDENTIFIER,Math,Math.max(top, y[j] + Math.sqrt((4 * r * r) - ((arr[j] - x) * (arr[j] - x)))))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.addition,y[j] + Math.sqrt((4 * r * r) - ((arr[j] - x) * (arr[j] - x))))<SUB>17</SUB>>", "107": "<(IDENTIFIER,y,y[j] + Math.sqrt((4 * r * r) - ((arr[j] - x) * (arr[j] - x))))<SUB>17</SUB>>", "109": "<(sqrt,Math.sqrt((4 * r * r) - ((arr[j] - x) * (arr[j] - x))))<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.subtraction,(4 * r * r) - ((arr[j] - x) * (arr[j] - x)))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>17</SUB>>", "115": "<(IDENTIFIER,r,4 * r)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.multiplication,(arr[j] - x) * (arr[j] - x))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>17</SUB>>", "121": "<(IDENTIFIER,j,arr[j] - x)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.subtraction,arr[j] - x)<SUB>17</SUB>>", "125": "<(IDENTIFIER,arr,arr[j] - x)<SUB>17</SUB>>", "127": "<(IDENTIFIER,x,arr[j] - x)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>21</SUB>>", "131": "<(IDENTIFIER,i,y[i] = top)<SUB>21</SUB>>", "133": "<(LOCAL,double res: double)<SUB>22</SUB>>", "135": "<(IDENTIFIER,res,double res = y[i])<SUB>22</SUB>>", "137": "<(IDENTIFIER,y,double res = y[i])<SUB>22</SUB>>", "139": "<(print,System.out.print(res + &quot; &quot;))<SUB>23</SUB>>", "141": "<(IDENTIFIER,System,System.out.print(res + &quot; &quot;))<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.addition,res + &quot; &quot;)<SUB>23</SUB>>", "145": "<(LITERAL,&quot; &quot;,res + &quot; &quot;)<SUB>23</SUB>>", "147": "<(MODIFIER,STATIC)>"}}