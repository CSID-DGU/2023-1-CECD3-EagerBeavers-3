{"edges": [["19", "20"], ["19", "21"], ["19", "152"], ["19", "153"], ["19", "154"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "51"], ["21", "55"], ["21", "74"], ["21", "75"], ["21", "84"], ["21", "85"], ["21", "91"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "105"], ["101", "109"], ["101", "110"], ["101", "116"], ["101", "117"], ["101", "123"], ["101", "124"], ["101", "131"], ["101", "144"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["139", "140"], ["140", "141"], ["140", "142"], ["142", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "151"], ["22", "29"], ["25", "41"], ["37", "46"], ["44", "50"], ["48", "53"], ["51", "57"], ["75", "89"], ["85", "93"], ["24", "22"], ["39", "37"], ["46", "44"], ["50", "48"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "79"], ["63", "60"], ["77", "75"], ["87", "85"], ["93", "96"], ["96", "154"], ["96", "104"], ["99", "96"], ["27", "34"], ["30", "25"], ["41", "39"], ["66", "63"], ["78", "77"], ["89", "87"], ["102", "107"], ["105", "114"], ["110", "121"], ["117", "127"], ["124", "134"], ["144", "99"], ["29", "27"], ["32", "30"], ["67", "72"], ["70", "66"], ["79", "78"], ["104", "102"], ["107", "105"], ["112", "110"], ["119", "117"], ["126", "124"], ["132", "142"], ["132", "147"], ["145", "148"], ["148", "144"], ["34", "32"], ["72", "70"], ["114", "112"], ["121", "119"], ["127", "126"], ["133", "132"], ["140", "147"], ["147", "145"], ["134", "133"], ["142", "140"], ["19", "24"], ["20", "154"], ["22", "154"], ["27", "154"], ["30", "154"], ["30", "154"], ["30", "154"], ["25", "154"], ["37", "154"], ["44", "154"], ["44", "154"], ["48", "154"], ["51", "154"], ["51", "154"], ["60", "154"], ["60", "154"], ["75", "154"], ["79", "154"], ["78", "154"], ["77", "154"], ["75", "154"], ["75", "154"], ["87", "154"], ["89", "154"], ["87", "154"], ["85", "154"], ["85", "154"], ["93", "154"], ["96", "154"], ["96", "154"], ["96", "154"], ["99", "154"], ["63", "154"], ["79", "154"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["19", "48"], ["77", "75"], ["77", "75"], ["87", "85"], ["87", "85"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["48", "51"], ["19", "51"], ["53", "51"], ["19", "57"], ["19", "93"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["37", "46"], ["19", "46"], ["41", "53"], ["19", "53"], ["57", "60"], ["63", "60"], ["19", "60"], ["46", "60"], ["60", "63"], ["19", "63"], ["70", "66"], ["70", "66"], ["78", "77"], ["78", "77"], ["19", "77"], ["39", "87"], ["70", "87"], ["19", "87"], ["89", "87"], ["93", "96"], ["99", "96"], ["19", "96"], ["85", "96"], ["96", "99"], ["19", "99"], ["19", "102"], ["112", "110"], ["112", "110"], ["119", "117"], ["119", "117"], ["127", "124"], ["127", "124"], ["19", "124"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["79", "78"], ["79", "78"], ["19", "78"], ["53", "89"], ["19", "89"], ["102", "105"], ["19", "105"], ["107", "105"], ["19", "144"], ["39", "70"], ["19", "70"], ["72", "70"], ["19", "79"], ["44", "79"], ["66", "79"], ["89", "107"], ["19", "107"], ["87", "112"], ["119", "112"], ["19", "112"], ["114", "112"], ["112", "119"], ["19", "119"], ["121", "119"], ["127", "126"], ["127", "126"], ["19", "126"], ["133", "132"], ["133", "132"], ["19", "132"], ["142", "140"], ["19", "148"], ["51", "72"], ["19", "72"], ["105", "114"], ["19", "114"], ["114", "121"], ["19", "121"], ["117", "127"], ["19", "127"], ["110", "127"], ["134", "133"], ["134", "133"], ["19", "133"], ["124", "134"], ["19", "134"], ["75", "142"], ["19", "142"], ["60", "60"], ["60", "66"], ["60", "72"], ["60", "67"], ["60", "70"], ["60", "63"], ["96", "107"], ["96", "96"], ["96", "145"], ["96", "99"], ["96", "102"], ["96", "114"], ["96", "132"], ["96", "104"], ["96", "119"], ["96", "121"], ["96", "144"], ["96", "112"], ["96", "134"], ["96", "148"], ["96", "126"], ["96", "105"], ["96", "147"], ["96", "110"], ["96", "117"], ["96", "127"], ["96", "124"], ["96", "133"], ["132", "142"], ["132", "140"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int N = parseInt(br.readLine()))<SUB>5</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>5</SUB>>", "41": "<(readLine,readLine())<SUB>5</SUB>>", "43": "<(LOCAL,int[] d: int[])<SUB>6</SUB>>", "45": "<(IDENTIFIER,d,int[] d = new int[N])<SUB>6</SUB>>", "47": "<(IDENTIFIER,N,new int[N])<SUB>6</SUB>>", "49": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "51": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "53": "<(readLine,readLine())<SUB>7</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i &lt; N)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,d[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "71": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "73": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,boolean cur = ((inv(d)) % 2) == 1)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.equals,((inv(d)) % 2) == 1)<SUB>11</SUB>>", "79": "<(inv,inv(d))<SUB>11</SUB>>", "81": "<(IDENTIFIER,d,inv(d))<SUB>11</SUB>>", "83": "<(LITERAL,1,((inv(d)) % 2) == 1)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,int Q = parseInt(br.readLine()))<SUB>13</SUB>>", "87": "<(parseInt,parseInt(br.readLine()))<SUB>13</SUB>>", "89": "<(readLine,readLine())<SUB>13</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; Q); i++),for (int i = 0; Some(i &lt; Q); i++))<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,i &lt; Q)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "103": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>15</SUB>>", "105": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>15</SUB>>", "107": "<(readLine,readLine())<SUB>15</SUB>>", "109": "<(LOCAL,int a: int)<SUB>16</SUB>>", "111": "<(IDENTIFIER,a,int a = parseInt(st.nextToken()))<SUB>16</SUB>>", "113": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>16</SUB>>", "115": "<(IDENTIFIER,st,nextToken())<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.assignment,int b = parseInt(st.nextToken()))<SUB>17</SUB>>", "119": "<(parseInt,parseInt(st.nextToken()))<SUB>17</SUB>>", "121": "<(nextToken,nextToken())<SUB>17</SUB>>", "123": "<(LOCAL,int dif: int)<SUB>19</SUB>>", "125": "<(IDENTIFIER,dif,int dif = b - a + 1)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.subtraction,b - a)<SUB>19</SUB>>", "129": "<(IDENTIFIER,a,b - a)<SUB>19</SUB>>", "131": "<(CONTROL_STRUCTURE,if (dif / 2 % 2 == 1),if (dif / 2 % 2 == 1))<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.modulo,dif / 2 % 2)<SUB>20</SUB>>", "135": "<(IDENTIFIER,dif,dif / 2)<SUB>20</SUB>>", "137": "<(LITERAL,2,dif / 2 % 2)<SUB>20</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "141": "<(IDENTIFIER,cur,cur = !cur)<SUB>21</SUB>>", "143": "<(IDENTIFIER,cur,!cur)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "149": "<(IDENTIFIER,cur,(cur) ? &quot;odd&quot; : &quot;even&quot;)<SUB>24</SUB>>", "151": "<(LITERAL,&quot;even&quot;,(cur) ? &quot;odd&quot; : &quot;even&quot;)<SUB>24</SUB>>", "153": "<(MODIFIER,STATIC)>"}}