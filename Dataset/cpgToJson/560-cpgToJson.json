{"edges": [["21", "23"], ["21", "117"], ["21", "118"], ["21", "119"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "44"], ["23", "115"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "49"], ["45", "46"], ["45", "48"], ["46", "47"], ["49", "50"], ["49", "51"], ["49", "55"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "61"], ["55", "64"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "79"], ["69", "82"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["83", "84"], ["84", "85"], ["84", "90"], ["84", "93"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "108"], ["98", "111"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "41"], ["41", "46"], ["115", "119"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["45", "53"], ["45", "115"], ["34", "32"], ["46", "45"], ["51", "57"], ["53", "51"], ["56", "61"], ["56", "66"], ["61", "46"], ["57", "56"], ["66", "71"], ["70", "79"], ["70", "86"], ["79", "46"], ["71", "76"], ["74", "70"], ["76", "74"], ["85", "90"], ["85", "95"], ["90", "46"], ["86", "85"], ["95", "100"], ["99", "108"], ["99", "112"], ["108", "46"], ["100", "105"], ["103", "99"], ["112", "46"], ["105", "103"], ["21", "26"], ["22", "119"], ["24", "119"], ["27", "119"], ["28", "119"], ["31", "119"], ["31", "119"], ["39", "119"], ["37", "119"], ["37", "119"], ["41", "119"], ["41", "119"], ["46", "119"], ["45", "119"], ["45", "119"], ["115", "119"], ["115", "119"], ["53", "119"], ["51", "119"], ["51", "119"], ["57", "119"], ["56", "119"], ["56", "119"], ["66", "119"], ["70", "119"], ["74", "119"], ["76", "119"], ["70", "119"], ["70", "119"], ["86", "119"], ["85", "119"], ["85", "119"], ["95", "119"], ["99", "119"], ["103", "119"], ["105", "119"], ["99", "119"], ["99", "119"], ["112", "119"], ["108", "119"], ["90", "119"], ["79", "119"], ["61", "119"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["21", "41"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "115"], ["112", "115"], ["108", "115"], ["90", "115"], ["79", "115"], ["61", "115"], ["21", "115"], ["27", "39"], ["21", "39"], ["46", "45"], ["21", "45"], ["53", "51"], ["37", "46"], ["21", "46"], ["39", "53"], ["21", "53"], ["57", "56"], ["57", "56"], ["21", "56"], ["31", "61"], ["112", "61"], ["108", "61"], ["90", "61"], ["79", "61"], ["21", "61"], ["51", "57"], ["21", "57"], ["21", "66"], ["57", "66"], ["74", "70"], ["71", "70"], ["71", "70"], ["74", "70"], ["31", "79"], ["112", "79"], ["108", "79"], ["90", "79"], ["61", "79"], ["21", "79"], ["74", "71"], ["103", "71"], ["21", "71"], ["66", "71"], ["76", "74"], ["21", "74"], ["76", "74"], ["71", "76"], ["21", "76"], ["71", "76"], ["86", "85"], ["86", "85"], ["21", "85"], ["31", "90"], ["112", "90"], ["108", "90"], ["79", "90"], ["61", "90"], ["21", "90"], ["76", "86"], ["21", "86"], ["21", "95"], ["86", "95"], ["103", "99"], ["100", "99"], ["100", "99"], ["103", "99"], ["31", "108"], ["112", "108"], ["90", "108"], ["79", "108"], ["61", "108"], ["21", "108"], ["74", "100"], ["21", "100"], ["95", "100"], ["105", "103"], ["21", "103"], ["105", "103"], ["31", "112"], ["108", "112"], ["90", "112"], ["79", "112"], ["61", "112"], ["21", "112"], ["100", "105"], ["21", "105"], ["100", "105"], ["45", "51"], ["45", "57"], ["45", "46"], ["45", "56"], ["45", "45"], ["45", "53"], ["56", "66"], ["56", "74"], ["56", "76"], ["56", "61"], ["56", "71"], ["56", "70"], ["70", "85"], ["70", "79"], ["70", "86"], ["85", "99"], ["85", "103"], ["85", "95"], ["85", "90"], ["85", "105"], ["85", "100"], ["99", "112"], ["99", "108"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int t: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int tt = 0)<SUB>4</SUB>>", "43": "<(LITERAL,0,int tt = 0)<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>5</SUB>>", "47": "<(IDENTIFIER,t,t--)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "55": "<(CONTROL_STRUCTURE,if (n % 2 != 0),if (n % 2 != 0))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.modulo,n % 2)<SUB>7</SUB>>", "59": "<(LITERAL,2,n % 2)<SUB>7</SUB>>", "61": "<(println,println(&quot;NO&quot;))<SUB>7</SUB>>", "63": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(IDENTIFIER,n,n /= 2)<SUB>9</SUB>>", "69": "<(CONTROL_STRUCTURE,if (Math.sqrt(n) == Math.ceil(Math.sqrt(n))),if (Math.sqrt(n) == Math.ceil(Math.sqrt(n))))<SUB>10</SUB>>", "71": "<(sqrt,Math.sqrt(n))<SUB>10</SUB>>", "73": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>10</SUB>>", "75": "<(IDENTIFIER,Math,Math.ceil(Math.sqrt(n)))<SUB>10</SUB>>", "77": "<(IDENTIFIER,Math,Math.sqrt(n))<SUB>10</SUB>>", "79": "<(println,println(&quot;YES&quot;))<SUB>10</SUB>>", "81": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>10</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.notEquals,n % 2 != 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,n,n % 2)<SUB>12</SUB>>", "89": "<(LITERAL,0,n % 2 != 0)<SUB>12</SUB>>", "91": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>12</SUB>>", "93": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignmentDivision,n /= 2)<SUB>14</SUB>>", "97": "<(LITERAL,2,n /= 2)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.equals,Math.sqrt(n) == Math.ceil(Math.sqrt(n)))<SUB>15</SUB>>", "101": "<(IDENTIFIER,Math,Math.sqrt(n))<SUB>15</SUB>>", "103": "<(ceil,Math.ceil(Math.sqrt(n)))<SUB>15</SUB>>", "105": "<(sqrt,Math.sqrt(n))<SUB>15</SUB>>", "107": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>15</SUB>>", "109": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "113": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>16</SUB>>", "115": "<(flush,flush())<SUB>22</SUB>>", "117": "<(MODIFIER,PUBLIC)>", "119": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}