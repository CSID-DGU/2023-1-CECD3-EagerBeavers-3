{"edges": [["27", "29"], ["27", "423"], ["27", "424"], ["27", "425"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "34"], ["29", "35"], ["29", "39"], ["29", "40"], ["29", "44"], ["29", "45"], ["29", "49"], ["29", "50"], ["29", "57"], ["29", "89"], ["29", "90"], ["29", "97"], ["29", "129"], ["30", "31"], ["30", "32"], ["33", "3"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "78"], ["68", "80"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "107"], ["97", "109"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["129", "130"], ["129", "135"], ["129", "191"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "6"], ["135", "136"], ["135", "139"], ["135", "140"], ["135", "8"], ["135", "177"], ["135", "180"], ["135", "184"], ["135", "189"], ["136", "137"], ["136", "138"], ["139", "5"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "168"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "159"], ["151", "161"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "167"], ["165", "166"], ["168", "169"], ["168", "170"], ["168", "174"], ["168", "176"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["177", "178"], ["177", "179"], ["180", "7"], ["180", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["187", "188"], ["189", "190"], ["191", "192"], ["192", "193"], ["192", "194"], ["192", "211"], ["192", "212"], ["192", "222"], ["192", "10"], ["192", "361"], ["192", "364"], ["192", "365"], ["192", "12"], ["192", "409"], ["192", "412"], ["192", "416"], ["192", "421"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "200"], ["196", "204"], ["196", "207"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["202", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "210"], ["208", "209"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "220"], ["214", "221"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["222", "223"], ["222", "224"], ["222", "227"], ["222", "232"], ["222", "234"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["234", "235"], ["235", "236"], ["235", "237"], ["235", "240"], ["235", "243"], ["235", "245"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["243", "244"], ["245", "246"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["256", "268"], ["257", "258"], ["257", "265"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["268", "273"], ["268", "278"], ["268", "280"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "277"], ["278", "279"], ["280", "281"], ["280", "282"], ["280", "287"], ["280", "288"], ["280", "289"], ["280", "296"], ["280", "303"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "319"], ["304", "305"], ["304", "316"], ["305", "306"], ["305", "313"], ["306", "307"], ["306", "310"], ["307", "308"], ["307", "309"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "321"], ["319", "331"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "325"], ["323", "326"], ["323", "327"], ["323", "328"], ["323", "329"], ["323", "330"], ["331", "332"], ["331", "339"], ["332", "333"], ["332", "338"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["339", "340"], ["339", "341"], ["339", "348"], ["341", "342"], ["341", "347"], ["342", "343"], ["342", "346"], ["343", "344"], ["343", "345"], ["348", "349"], ["348", "358"], ["349", "350"], ["349", "357"], ["350", "351"], ["350", "356"], ["351", "352"], ["351", "353"], ["353", "354"], ["353", "355"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "363"], ["364", "9"], ["365", "366"], ["365", "367"], ["365", "370"], ["365", "373"], ["365", "375"], ["367", "368"], ["367", "369"], ["370", "371"], ["370", "372"], ["373", "374"], ["375", "376"], ["375", "400"], ["376", "377"], ["376", "378"], ["376", "381"], ["376", "384"], ["376", "386"], ["378", "379"], ["378", "380"], ["381", "382"], ["381", "383"], ["384", "385"], ["386", "387"], ["387", "388"], ["387", "389"], ["389", "390"], ["389", "399"], ["390", "391"], ["390", "398"], ["391", "392"], ["391", "397"], ["392", "393"], ["392", "394"], ["394", "395"], ["394", "396"], ["400", "401"], ["400", "402"], ["400", "406"], ["400", "408"], ["402", "403"], ["402", "405"], ["403", "404"], ["406", "407"], ["409", "410"], ["409", "411"], ["412", "11"], ["412", "413"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "418"], ["418", "419"], ["419", "420"], ["421", "422"], ["30", "33"], ["33", "37"], ["35", "42"], ["40", "47"], ["45", "54"], ["50", "59"], ["90", "99"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["59", "62"], ["62", "70"], ["62", "93"], ["65", "62"], ["92", "90"], ["99", "104"], ["102", "112"], ["102", "131"], ["107", "104"], ["130", "138"], ["130", "197"], ["54", "52"], ["93", "92"], ["104", "102"], ["131", "130"], ["136", "139"], ["139", "142"], ["177", "183"], ["180", "187"], ["184", "189"], ["189", "425"], ["70", "75"], ["73", "83"], ["73", "65"], ["78", "75"], ["112", "115"], ["115", "123"], ["115", "107"], ["118", "115"], ["138", "136"], ["142", "145"], ["145", "153"], ["145", "179"], ["148", "145"], ["179", "177"], ["181", "180"], ["186", "184"], ["194", "216"], ["212", "224"], ["361", "364"], ["364", "367"], ["409", "415"], ["412", "419"], ["416", "421"], ["421", "425"], ["75", "73"], ["81", "78"], ["121", "118"], ["168", "148"], ["183", "181"], ["187", "186"], ["196", "194"], ["214", "212"], ["224", "229"], ["227", "237"], ["227", "363"], ["232", "229"], ["363", "361"], ["367", "370"], ["370", "378"], ["370", "411"], ["373", "370"], ["411", "409"], ["413", "412"], ["418", "416"], ["82", "87"], ["87", "81"], ["122", "127"], ["127", "121"], ["153", "156"], ["156", "165"], ["156", "171"], ["159", "156"], ["170", "174"], ["174", "168"], ["197", "202"], ["200", "204"], ["204", "208"], ["207", "196"], ["215", "214"], ["229", "227"], ["400", "373"], ["415", "413"], ["419", "418"], ["83", "82"], ["123", "122"], ["162", "159"], ["171", "170"], ["202", "200"], ["208", "207"], ["216", "215"], ["237", "240"], ["240", "248"], ["240", "232"], ["243", "240"], ["378", "381"], ["381", "394"], ["381", "403"], ["384", "381"], ["402", "406"], ["406", "400"], ["164", "162"], ["387", "384"], ["403", "402"], ["165", "164"], ["248", "251"], ["251", "260"], ["251", "243"], ["254", "251"], ["389", "387"], ["257", "270"], ["390", "389"], ["258", "267"], ["265", "257"], ["270", "277"], ["273", "284"], ["273", "254"], ["278", "277"], ["391", "390"], ["259", "258"], ["267", "265"], ["275", "273"], ["282", "293"], ["289", "300"], ["296", "307"], ["392", "391"], ["260", "259"], ["277", "275"], ["284", "282"], ["291", "289"], ["298", "296"], ["304", "323"], ["304", "278"], ["394", "392"], ["293", "291"], ["300", "298"], ["305", "304"], ["305", "316"], ["316", "304"], ["321", "334"], ["331", "278"], ["306", "305"], ["306", "313"], ["313", "305"], ["323", "321"], ["332", "343"], ["339", "331"], ["307", "306"], ["307", "310"], ["310", "306"], ["333", "332"], ["341", "353"], ["348", "339"], ["334", "333"], ["342", "341"], ["349", "358"], ["358", "348"], ["343", "342"], ["350", "349"], ["351", "350"], ["353", "351"], ["27", "32"], ["28", "425"], ["30", "425"], ["33", "425"], ["35", "425"], ["40", "425"], ["47", "425"], ["45", "425"], ["45", "425"], ["50", "425"], ["52", "425"], ["50", "425"], ["50", "425"], ["90", "425"], ["92", "425"], ["90", "425"], ["90", "425"], ["102", "425"], ["102", "425"], ["131", "425"], ["130", "425"], ["130", "425"], ["136", "425"], ["139", "425"], ["142", "425"], ["145", "425"], ["145", "425"], ["145", "425"], ["177", "425"], ["180", "425"], ["180", "425"], ["187", "425"], ["186", "425"], ["184", "425"], ["184", "425"], ["189", "425"], ["189", "425"], ["153", "425"], ["156", "425"], ["156", "425"], ["156", "425"], ["168", "425"], ["168", "425"], ["168", "425"], ["148", "425"], ["164", "425"], ["162", "425"], ["162", "425"], ["159", "425"], ["112", "425"], ["115", "425"], ["115", "425"], ["115", "425"], ["107", "425"], ["121", "425"], ["127", "425"], ["121", "425"], ["121", "425"], ["118", "425"], ["70", "425"], ["73", "425"], ["73", "425"], ["73", "425"], ["65", "425"], ["81", "425"], ["87", "425"], ["81", "425"], ["81", "425"], ["78", "425"], ["323", "425"], ["339", "425"], ["27", "28"], ["27", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["52", "50"], ["92", "90"], ["92", "90"], ["30", "33"], ["27", "33"], ["27", "59"], ["27", "99"], ["33", "37"], ["27", "37"], ["37", "42"], ["27", "42"], ["42", "47"], ["27", "47"], ["35", "52"], ["27", "52"], ["54", "52"], ["54", "52"], ["59", "62"], ["65", "62"], ["27", "62"], ["52", "62"], ["62", "65"], ["27", "65"], ["93", "92"], ["93", "92"], ["54", "92"], ["75", "92"], ["27", "92"], ["99", "102"], ["107", "102"], ["27", "102"], ["104", "102"], ["104", "102"], ["102", "107"], ["27", "107"], ["131", "130"], ["131", "130"], ["27", "130"], ["27", "136"], ["27", "177"], ["40", "54"], ["27", "54"], ["27", "70"], ["62", "93"], ["27", "93"], ["93", "104"], ["27", "104"], ["27", "112"], ["45", "131"], ["27", "131"], ["136", "139"], ["27", "139"], ["27", "142"], ["177", "180"], ["27", "180"], ["180", "184"], ["27", "184"], ["186", "184"], ["184", "189"], ["27", "189"], ["196", "194"], ["196", "194"], ["196", "194"], ["196", "194"], ["214", "212"], ["214", "212"], ["214", "212"], ["27", "361"], ["27", "409"], ["70", "73"], ["78", "73"], ["27", "73"], ["75", "73"], ["75", "73"], ["73", "78"], ["27", "78"], ["87", "81"], ["112", "115"], ["118", "115"], ["27", "115"], ["92", "115"], ["115", "118"], ["27", "118"], ["127", "121"], ["142", "145"], ["148", "145"], ["27", "145"], ["104", "145"], ["145", "148"], ["27", "148"], ["187", "186"], ["27", "224"], ["361", "364"], ["27", "364"], ["27", "367"], ["409", "412"], ["27", "412"], ["412", "416"], ["27", "416"], ["418", "416"], ["416", "421"], ["27", "421"], ["54", "75"], ["27", "75"], ["27", "153"], ["174", "168"], ["27", "168"], ["170", "168"], ["170", "168"], ["139", "187"], ["168", "187"], ["27", "187"], ["197", "196"], ["197", "196"], ["200", "196"], ["200", "196"], ["204", "196"], ["204", "196"], ["207", "196"], ["207", "196"], ["216", "214"], ["216", "214"], ["27", "214"], ["104", "214"], ["92", "214"], ["115", "214"], ["224", "227"], ["232", "227"], ["27", "227"], ["229", "227"], ["229", "227"], ["227", "232"], ["353", "232"], ["27", "232"], ["367", "370"], ["373", "370"], ["27", "370"], ["214", "370"], ["240", "370"], ["370", "373"], ["27", "373"], ["419", "418"], ["47", "87"], ["27", "87"], ["47", "127"], ["87", "127"], ["27", "127"], ["153", "156"], ["159", "156"], ["27", "156"], ["92", "156"], ["115", "156"], ["156", "159"], ["27", "159"], ["171", "170"], ["27", "170"], ["171", "174"], ["27", "174"], ["27", "197"], ["27", "200"], ["202", "200"], ["27", "204"], ["208", "207"], ["27", "207"], ["216", "215"], ["216", "215"], ["27", "215"], ["216", "229"], ["27", "229"], ["27", "237"], ["27", "378"], ["406", "400"], ["27", "400"], ["402", "400"], ["402", "400"], ["364", "419"], ["400", "419"], ["27", "419"], ["139", "162"], ["168", "162"], ["27", "162"], ["165", "162"], ["139", "171"], ["168", "171"], ["162", "171"], ["27", "171"], ["27", "202"], ["27", "208"], ["131", "216"], ["27", "216"], ["237", "240"], ["243", "240"], ["27", "240"], ["214", "240"], ["310", "240"], ["240", "243"], ["323", "243"], ["27", "243"], ["378", "381"], ["384", "381"], ["27", "381"], ["214", "381"], ["251", "381"], ["381", "384"], ["27", "384"], ["403", "402"], ["27", "402"], ["403", "406"], ["27", "406"], ["165", "164"], ["27", "164"], ["27", "248"], ["364", "387"], ["400", "387"], ["27", "387"], ["364", "403"], ["400", "403"], ["387", "403"], ["27", "403"], ["27", "165"], ["248", "251"], ["254", "251"], ["27", "251"], ["214", "251"], ["316", "251"], ["251", "254"], ["323", "254"], ["27", "254"], ["27", "389"], ["27", "270"], ["270", "273"], ["278", "273"], ["27", "273"], ["194", "273"], ["273", "278"], ["27", "278"], ["194", "282"], ["240", "289"], ["323", "289"], ["27", "289"], ["282", "289"], ["251", "296"], ["323", "296"], ["27", "296"], ["282", "296"], ["240", "291"], ["323", "291"], ["27", "291"], ["282", "291"], ["251", "298"], ["323", "298"], ["27", "298"], ["282", "298"], ["305", "304"], ["305", "304"], ["316", "304"], ["316", "304"], ["323", "321"], ["323", "321"], ["323", "321"], ["323", "321"], ["323", "321"], ["323", "321"], ["323", "321"], ["339", "331"], ["339", "331"], ["339", "331"], ["229", "394"], ["27", "394"], ["306", "305"], ["306", "305"], ["313", "305"], ["313", "305"], ["296", "316"], ["313", "316"], ["27", "316"], ["251", "316"], ["307", "306"], ["307", "306"], ["310", "306"], ["310", "306"], ["296", "313"], ["27", "313"], ["27", "323"], ["240", "323"], ["251", "323"], ["307", "323"], ["310", "323"], ["296", "323"], ["313", "323"], ["316", "323"], ["50", "323"], ["90", "323"], ["27", "339"], ["257", "339"], ["331", "339"], ["358", "339"], ["358", "339"], ["289", "307"], ["27", "307"], ["307", "310"], ["27", "310"], ["240", "310"], ["358", "348"], ["358", "348"], ["27", "358"], ["321", "358"], ["227", "353"], ["27", "353"], ["62", "70"], ["62", "65"], ["62", "73"], ["62", "75"], ["62", "62"], ["102", "102"], ["102", "104"], ["102", "112"], ["102", "107"], ["102", "115"], ["130", "214"], ["130", "136"], ["130", "215"], ["130", "196"], ["130", "204"], ["130", "418"], ["130", "138"], ["130", "370"], ["130", "181"], ["130", "208"], ["130", "184"], ["130", "194"], ["130", "412"], ["130", "224"], ["130", "416"], ["130", "186"], ["130", "202"], ["130", "180"], ["130", "200"], ["130", "364"], ["130", "177"], ["130", "229"], ["130", "415"], ["130", "216"], ["130", "227"], ["130", "413"], ["130", "145"], ["130", "179"], ["130", "197"], ["130", "189"], ["130", "411"], ["130", "187"], ["130", "207"], ["130", "212"], ["130", "409"], ["130", "419"], ["130", "361"], ["130", "139"], ["130", "421"], ["130", "367"], ["130", "183"], ["130", "142"], ["130", "363"], ["73", "73"], ["73", "75"], ["73", "81"], ["73", "87"], ["73", "82"], ["73", "83"], ["73", "78"], ["115", "118"], ["115", "127"], ["115", "122"], ["115", "123"], ["115", "115"], ["115", "121"], ["145", "168"], ["145", "170"], ["145", "148"], ["145", "174"], ["145", "145"], ["145", "153"], ["145", "171"], ["145", "156"], ["227", "240"], ["227", "237"], ["227", "229"], ["227", "227"], ["227", "232"], ["370", "403"], ["370", "370"], ["370", "378"], ["370", "402"], ["370", "373"], ["370", "400"], ["370", "381"], ["370", "406"], ["156", "162"], ["156", "159"], ["156", "164"], ["156", "165"], ["156", "156"], ["240", "240"], ["240", "243"], ["240", "251"], ["240", "248"], ["381", "384"], ["381", "392"], ["381", "394"], ["381", "389"], ["381", "390"], ["381", "387"], ["381", "381"], ["381", "391"], ["251", "258"], ["251", "260"], ["251", "254"], ["251", "257"], ["251", "273"], ["251", "275"], ["251", "259"], ["251", "267"], ["251", "265"], ["251", "277"], ["251", "270"], ["251", "251"], ["273", "298"], ["273", "300"], ["273", "306"], ["273", "296"], ["273", "304"], ["273", "278"], ["273", "305"], ["273", "282"], ["273", "273"], ["273", "275"], ["273", "291"], ["273", "307"], ["273", "284"], ["273", "289"], ["273", "293"], ["273", "277"], ["304", "334"], ["304", "358"], ["304", "349"], ["304", "348"], ["304", "323"], ["304", "321"], ["304", "351"], ["304", "342"], ["304", "341"], ["304", "339"], ["304", "332"], ["304", "353"], ["304", "343"], ["304", "333"], ["304", "331"], ["304", "350"], ["305", "316"], ["306", "313"], ["307", "310"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "37": "<(nextInt,nextInt())<SUB>3</SUB>>", "39": "<(LOCAL,int m: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,m,int m = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>5</SUB>>", "47": "<(nextInt,nextInt())<SUB>5</SUB>>", "49": "<(LOCAL,int[][] lr: int[][])<SUB>6</SUB>>", "51": "<(IDENTIFIER,lr,int[][] lr = new int[n][m - 1])<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>6</SUB>>", "55": "<(IDENTIFIER,m,m - 1)<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "69": "<(LOCAL,int j: int)<SUB>8</SUB>>", "71": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>8</SUB>>", "77": "<(LITERAL,1,m - 1)<SUB>8</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,lr[i][j] = nextInt())<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,lr[i])<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,lr[i][j] = nextInt())<SUB>9</SUB>>", "87": "<(nextInt,nextInt())<SUB>9</SUB>>", "89": "<(LOCAL,int[][] ud: int[][])<SUB>12</SUB>>", "91": "<(IDENTIFIER,ud,int[][] ud = new int[n - 1][m])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>12</SUB>>", "95": "<(LITERAL,1,n - 1)<SUB>12</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "101": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>13</SUB>>", "105": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "111": "<(LOCAL,int j: int)<SUB>14</SUB>>", "113": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>14</SUB>>", "117": "<(IDENTIFIER,m,j &lt; m)<SUB>14</SUB>>", "119": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,ud[i][j] = nextInt())<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,ud[i])<SUB>15</SUB>>", "125": "<(IDENTIFIER,i,ud[i][j] = nextInt())<SUB>15</SUB>>", "127": "<(nextInt,nextInt())<SUB>15</SUB>>", "129": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.modulo,k % 2)<SUB>18</SUB>>", "133": "<(LITERAL,2,k % 2)<SUB>18</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "136": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>19</SUB>>", "138": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>19</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>19</SUB>>", "141": "<(LOCAL,int i: int)<SUB>20</SUB>>", "143": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "147": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "149": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "155": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "157": "<(IDENTIFIER,j,j &lt; m)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "163": "<(IDENTIFIER,sb,sb.append(-1 + &quot; &quot;))<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "167": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>22</SUB>>", "169": "<(IDENTIFIER,sb,sb.replace(sb.length() - 1, sb.length(), &quot;\\n&quot;))<SUB>24</SUB>>", "171": "<(length,sb.length())<SUB>24</SUB>>", "173": "<(LITERAL,1,sb.length() - 1)<SUB>24</SUB>>", "175": "<(IDENTIFIER,sb,sb.length())<SUB>24</SUB>>", "8": "<(LOCAL,PrintWriter pw: ANY)<SUB>26</SUB>>", "178": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>26</SUB>>", "180": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>26</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "183": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "185": "<(IDENTIFIER,pw,println(sb.toString().trim()))<SUB>27</SUB>>", "187": "<(toString,sb.toString())<SUB>27</SUB>>", "189": "<(flush,flush())<SUB>28</SUB>>", "191": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "193": "<(LOCAL,int[][] dir: int[][])<SUB>31</SUB>>", "195": "<(IDENTIFIER,dir,int[][] dir = { { 0, 1 }, { 0, -1 }, { 1, 0 }, { -1, 0 } })<SUB>31</SUB>>", "197": "<(&lt;operator&gt;.arrayInitializer,{ 0, 1 })<SUB>31</SUB>>", "199": "<(LITERAL,1,{ 0, 1 })<SUB>31</SUB>>", "201": "<(LITERAL,0,{ 0, -1 })<SUB>31</SUB>>", "203": "<(LITERAL,1,-1)<SUB>31</SUB>>", "205": "<(LITERAL,1,{ 1, 0 })<SUB>31</SUB>>", "207": "<(&lt;operator&gt;.arrayInitializer,{ -1, 0 })<SUB>31</SUB>>", "209": "<(LITERAL,1,-1)<SUB>31</SUB>>", "211": "<(LOCAL,long[][][] dp: long[][][])<SUB>32</SUB>>", "213": "<(IDENTIFIER,dp,long[][][] dp = new long[k / 2 + 1][n][m])<SUB>32</SUB>>", "215": "<(&lt;operator&gt;.addition,k / 2 + 1)<SUB>32</SUB>>", "217": "<(IDENTIFIER,k,k / 2)<SUB>32</SUB>>", "219": "<(LITERAL,1,k / 2 + 1)<SUB>32</SUB>>", "221": "<(IDENTIFIER,m,new long[k / 2 + 1][n][m])<SUB>32</SUB>>", "223": "<(LOCAL,int s: int)<SUB>33</SUB>>", "225": "<(IDENTIFIER,s,int s = 1)<SUB>33</SUB>>", "227": "<(&lt;operator&gt;.lessEqualsThan,s &lt;= k / 2)<SUB>33</SUB>>", "229": "<(&lt;operator&gt;.division,k / 2)<SUB>33</SUB>>", "231": "<(LITERAL,2,k / 2)<SUB>33</SUB>>", "233": "<(IDENTIFIER,s,s++)<SUB>33</SUB>>", "235": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>34</SUB>>", "237": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>34</SUB>>", "239": "<(LITERAL,0,int i = 0)<SUB>34</SUB>>", "241": "<(IDENTIFIER,i,i &lt; n)<SUB>34</SUB>>", "243": "<(&lt;operator&gt;.postIncrement,i++)<SUB>34</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "247": "<(LOCAL,int j: int)<SUB>35</SUB>>", "249": "<(IDENTIFIER,j,int j = 0)<SUB>35</SUB>>", "251": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>35</SUB>>", "253": "<(IDENTIFIER,m,j &lt; m)<SUB>35</SUB>>", "255": "<(IDENTIFIER,j,j++)<SUB>35</SUB>>", "257": "<(&lt;operator&gt;.assignment,dp[s][i][j] = Long.MAX_VALUE)<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[s][i])<SUB>36</SUB>>", "261": "<(IDENTIFIER,dp,dp[s][i][j] = Long.MAX_VALUE)<SUB>36</SUB>>", "263": "<(IDENTIFIER,i,dp[s][i][j] = Long.MAX_VALUE)<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.fieldAccess,Long.MAX_VALUE)<SUB>36</SUB>>", "267": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>36</SUB>>", "269": "<(LOCAL,$idx0: int)<SUB>37</SUB>>", "271": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "273": "<(&lt;operator&gt;.lessThan,$idx0 &lt; dir.length)<SUB>37</SUB>>", "275": "<(&lt;operator&gt;.fieldAccess,dir.length)<SUB>37</SUB>>", "277": "<(FIELD_IDENTIFIER,length,length)<SUB>37</SUB>>", "279": "<(IDENTIFIER,$idx0,$idx0++)>", "281": "<(LOCAL,d: int[])<SUB>37</SUB>>", "283": "<(IDENTIFIER,d,&lt;empty&gt;)>", "285": "<(IDENTIFIER,dir,&lt;empty&gt;)>", "287": "<(LOCAL,int u: int)<SUB>38</SUB>>", "289": "<(&lt;operator&gt;.assignment,int u = i + d[0])<SUB>38</SUB>>", "291": "<(&lt;operator&gt;.addition,i + d[0])<SUB>38</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,d[0])<SUB>38</SUB>>", "295": "<(LITERAL,0,i + d[0])<SUB>38</SUB>>", "297": "<(IDENTIFIER,v,int v = j + d[1])<SUB>38</SUB>>", "299": "<(IDENTIFIER,j,j + d[1])<SUB>38</SUB>>", "301": "<(IDENTIFIER,d,j + d[1])<SUB>38</SUB>>", "303": "<(CONTROL_STRUCTURE,if (u &gt;= 0 &amp;&amp; u &lt; n &amp;&amp; v &gt;= 0 &amp;&amp; v &lt; m),if (u &gt;= 0 &amp;&amp; u &lt; n &amp;&amp; v &gt;= 0 &amp;&amp; v &lt; m))<SUB>39</SUB>>", "305": "<(&lt;operator&gt;.logicalAnd,u &gt;= 0 &amp;&amp; u &lt; n &amp;&amp; v &gt;= 0)<SUB>39</SUB>>", "307": "<(&lt;operator&gt;.greaterEqualsThan,u &gt;= 0)<SUB>39</SUB>>", "309": "<(LITERAL,0,u &gt;= 0)<SUB>39</SUB>>", "311": "<(IDENTIFIER,u,u &lt; n)<SUB>39</SUB>>", "313": "<(&lt;operator&gt;.greaterEqualsThan,v &gt;= 0)<SUB>39</SUB>>", "315": "<(LITERAL,0,v &gt;= 0)<SUB>39</SUB>>", "317": "<(IDENTIFIER,v,v &lt; m)<SUB>39</SUB>>", "319": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "321": "<(&lt;operator&gt;.assignment,long w = calc(i, j, u, v, lr, ud))<SUB>40</SUB>>", "323": "<(calc,calc(i, j, u, v, lr, ud))<SUB>40</SUB>>", "325": "<(IDENTIFIER,i,calc(i, j, u, v, lr, ud))<SUB>40</SUB>>", "327": "<(IDENTIFIER,u,calc(i, j, u, v, lr, ud))<SUB>40</SUB>>", "329": "<(IDENTIFIER,lr,calc(i, j, u, v, lr, ud))<SUB>40</SUB>>", "331": "<(&lt;operator&gt;.assignment,dp[s][i][j] = Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,dp[s][i])<SUB>41</SUB>>", "335": "<(IDENTIFIER,dp,dp[s][i][j] = Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "337": "<(IDENTIFIER,i,dp[s][i][j] = Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "339": "<(min,Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,dp[s][i][j])<SUB>41</SUB>>", "343": "<(&lt;operator&gt;.indexAccess,dp[s])<SUB>41</SUB>>", "345": "<(IDENTIFIER,s,Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "347": "<(IDENTIFIER,j,Math.min(dp[s][i][j], dp[s - 1][u][v] + 2 * w))<SUB>41</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,dp[s - 1][u][v])<SUB>41</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,dp[s - 1])<SUB>41</SUB>>", "353": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>41</SUB>>", "355": "<(LITERAL,1,s - 1)<SUB>41</SUB>>", "357": "<(IDENTIFIER,v,dp[s - 1][u][v] + 2 * w)<SUB>41</SUB>>", "359": "<(LITERAL,2,2 * w)<SUB>41</SUB>>", "10": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>47</SUB>>", "362": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>47</SUB>>", "364": "<(&lt;init&gt;,new StringBuilder())<SUB>47</SUB>>", "365": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>48</SUB>>", "367": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>48</SUB>>", "369": "<(LITERAL,0,int i = 0)<SUB>48</SUB>>", "371": "<(IDENTIFIER,i,i &lt; n)<SUB>48</SUB>>", "373": "<(&lt;operator&gt;.postIncrement,i++)<SUB>48</SUB>>", "375": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "377": "<(LOCAL,int j: int)<SUB>49</SUB>>", "379": "<(IDENTIFIER,j,int j = 0)<SUB>49</SUB>>", "381": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>49</SUB>>", "383": "<(IDENTIFIER,m,j &lt; m)<SUB>49</SUB>>", "385": "<(IDENTIFIER,j,j++)<SUB>49</SUB>>", "387": "<(append,sb.append(dp[k / 2][i][j] + &quot; &quot;))<SUB>50</SUB>>", "389": "<(&lt;operator&gt;.addition,dp[k / 2][i][j] + &quot; &quot;)<SUB>50</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,dp[k / 2][i])<SUB>50</SUB>>", "393": "<(IDENTIFIER,dp,dp[k / 2][i][j] + &quot; &quot;)<SUB>50</SUB>>", "395": "<(IDENTIFIER,k,k / 2)<SUB>50</SUB>>", "397": "<(IDENTIFIER,i,dp[k / 2][i][j] + &quot; &quot;)<SUB>50</SUB>>", "399": "<(LITERAL,&quot; &quot;,dp[k / 2][i][j] + &quot; &quot;)<SUB>50</SUB>>", "401": "<(IDENTIFIER,sb,sb.replace(sb.length() - 1, sb.length(), &quot;\\n&quot;))<SUB>52</SUB>>", "403": "<(length,sb.length())<SUB>52</SUB>>", "405": "<(LITERAL,1,sb.length() - 1)<SUB>52</SUB>>", "407": "<(IDENTIFIER,sb,sb.length())<SUB>52</SUB>>", "12": "<(LOCAL,PrintWriter pw: ANY)<SUB>54</SUB>>", "410": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>54</SUB>>", "412": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>54</SUB>>", "413": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>54</SUB>>", "415": "<(FIELD_IDENTIFIER,out,out)<SUB>54</SUB>>", "417": "<(IDENTIFIER,pw,println(sb.toString().trim()))<SUB>55</SUB>>", "419": "<(toString,sb.toString())<SUB>55</SUB>>", "421": "<(flush,flush())<SUB>56</SUB>>", "423": "<(MODIFIER,PUBLIC)>", "425": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}