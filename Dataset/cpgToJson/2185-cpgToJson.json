{"edges": [["24", "26"], ["24", "195"], ["24", "196"], ["24", "197"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "34"], ["26", "37"], ["26", "40"], ["26", "41"], ["26", "47"], ["26", "48"], ["26", "54"], ["26", "57"], ["26", "60"], ["26", "61"], ["26", "65"], ["26", "9"], ["26", "84"], ["26", "87"], ["26", "88"], ["26", "193"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["37", "5"], ["37", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["57", "7"], ["57", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["87", "8"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "173"], ["98", "186"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "112"], ["103", "114"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "128"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "125"], ["121", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["135", "154"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "143"], ["139", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "162"], ["158", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "179"], ["175", "185"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["179", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["27", "33"], ["30", "36"], ["34", "38"], ["37", "45"], ["41", "52"], ["48", "56"], ["54", "58"], ["57", "63"], ["61", "67"], ["84", "87"], ["87", "90"], ["193", "197"], ["29", "27"], ["31", "30"], ["36", "34"], ["38", "37"], ["43", "41"], ["50", "48"], ["56", "54"], ["58", "57"], ["63", "61"], ["67", "70"], ["70", "77"], ["70", "86"], ["73", "70"], ["86", "84"], ["90", "93"], ["93", "100"], ["93", "193"], ["96", "93"], ["33", "31"], ["45", "43"], ["52", "50"], ["76", "73"], ["100", "105"], ["173", "189"], ["186", "96"], ["77", "82"], ["80", "76"], ["105", "110"], ["108", "122"], ["108", "178"], ["112", "110"], ["187", "190"], ["190", "186"], ["82", "80"], ["110", "108"], ["116", "131"], ["176", "181"], ["179", "173"], ["189", "187"], ["118", "116"], ["129", "140"], ["129", "112"], ["178", "176"], ["181", "179"], ["120", "118"], ["131", "129"], ["121", "125"], ["125", "120"], ["136", "159"], ["136", "112"], ["122", "121"], ["138", "136"], ["155", "112"], ["139", "147"], ["143", "138"], ["157", "155"], ["140", "139"], ["145", "143"], ["158", "166"], ["162", "157"], ["146", "151"], ["151", "145"], ["159", "158"], ["164", "162"], ["147", "146"], ["165", "170"], ["170", "164"], ["166", "165"], ["24", "29"], ["25", "197"], ["27", "197"], ["30", "197"], ["30", "197"], ["34", "197"], ["41", "197"], ["48", "197"], ["50", "197"], ["50", "197"], ["48", "197"], ["48", "197"], ["54", "197"], ["57", "197"], ["57", "197"], ["57", "197"], ["61", "197"], ["61", "197"], ["61", "197"], ["84", "197"], ["87", "197"], ["87", "197"], ["90", "197"], ["93", "197"], ["93", "197"], ["93", "197"], ["193", "197"], ["193", "197"], ["100", "197"], ["100", "197"], ["105", "197"], ["108", "197"], ["108", "197"], ["108", "197"], ["173", "197"], ["176", "197"], ["179", "197"], ["179", "197"], ["179", "197"], ["173", "197"], ["186", "197"], ["190", "197"], ["186", "197"], ["186", "197"], ["96", "197"], ["118", "197"], ["121", "197"], ["120", "197"], ["118", "197"], ["116", "197"], ["116", "197"], ["129", "197"], ["131", "197"], ["129", "197"], ["129", "197"], ["139", "197"], ["138", "197"], ["143", "197"], ["146", "197"], ["146", "197"], ["145", "197"], ["151", "197"], ["145", "197"], ["143", "197"], ["138", "197"], ["136", "197"], ["136", "197"], ["158", "197"], ["157", "197"], ["162", "197"], ["165", "197"], ["165", "197"], ["164", "197"], ["170", "197"], ["164", "197"], ["162", "197"], ["157", "197"], ["155", "197"], ["155", "197"], ["112", "197"], ["76", "197"], ["80", "197"], ["82", "197"], ["80", "197"], ["76", "197"], ["76", "197"], ["73", "197"], ["24", "25"], ["24", "27"], ["24", "34"], ["43", "41"], ["43", "41"], ["50", "48"], ["50", "48"], ["24", "54"], ["63", "61"], ["24", "84"], ["27", "30"], ["24", "30"], ["34", "37"], ["24", "37"], ["38", "37"], ["54", "57"], ["24", "57"], ["58", "57"], ["24", "67"], ["84", "87"], ["24", "87"], ["24", "90"], ["58", "193"], ["24", "193"], ["30", "38"], ["24", "38"], ["24", "43"], ["45", "43"], ["43", "50"], ["24", "50"], ["52", "50"], ["38", "58"], ["24", "58"], ["41", "63"], ["24", "63"], ["67", "70"], ["73", "70"], ["24", "70"], ["63", "70"], ["70", "73"], ["24", "73"], ["80", "76"], ["80", "76"], ["90", "93"], ["96", "93"], ["24", "93"], ["70", "93"], ["93", "96"], ["24", "96"], ["48", "100"], ["131", "100"], ["146", "100"], ["165", "100"], ["24", "100"], ["37", "45"], ["24", "45"], ["45", "52"], ["24", "52"], ["24", "105"], ["110", "173"], ["24", "173"], ["176", "173"], ["179", "173"], ["179", "186"], ["24", "186"], ["50", "80"], ["24", "80"], ["82", "80"], ["105", "108"], ["112", "108"], ["24", "108"], ["110", "108"], ["122", "112"], ["140", "112"], ["159", "112"], ["24", "112"], ["118", "116"], ["118", "116"], ["24", "176"], ["24", "185"], ["179", "190"], ["24", "190"], ["57", "82"], ["24", "82"], ["87", "110"], ["173", "110"], ["122", "110"], ["140", "110"], ["159", "110"], ["24", "110"], ["176", "179"], ["24", "179"], ["61", "179"], ["120", "179"], ["76", "179"], ["100", "179"], ["136", "179"], ["155", "179"], ["143", "118"], ["162", "118"], ["24", "118"], ["120", "118"], ["120", "118"], ["116", "129"], ["24", "129"], ["131", "129"], ["131", "129"], ["121", "120"], ["61", "120"], ["179", "120"], ["76", "120"], ["24", "131"], ["146", "131"], ["165", "131"], ["48", "131"], ["122", "121"], ["122", "121"], ["100", "136"], ["155", "136"], ["24", "136"], ["139", "136"], ["143", "136"], ["143", "136"], ["158", "155"], ["162", "155"], ["162", "155"], ["110", "122"], ["24", "122"], ["108", "122"], ["139", "138"], ["143", "138"], ["143", "138"], ["140", "139"], ["140", "139"], ["118", "143"], ["24", "143"], ["145", "143"], ["145", "143"], ["158", "157"], ["162", "157"], ["162", "157"], ["122", "140"], ["24", "140"], ["122", "140"], ["146", "145"], ["146", "145"], ["151", "145"], ["159", "158"], ["159", "158"], ["143", "162"], ["24", "162"], ["164", "162"], ["164", "162"], ["147", "146"], ["147", "146"], ["24", "146"], ["129", "151"], ["24", "151"], ["140", "159"], ["24", "159"], ["140", "159"], ["165", "164"], ["165", "164"], ["170", "164"], ["24", "147"], ["131", "147"], ["166", "165"], ["166", "165"], ["24", "165"], ["151", "170"], ["24", "170"], ["24", "166"], ["146", "166"], ["70", "73"], ["70", "77"], ["70", "76"], ["70", "80"], ["70", "70"], ["70", "82"], ["93", "96"], ["93", "179"], ["93", "178"], ["93", "189"], ["93", "181"], ["93", "93"], ["93", "187"], ["93", "190"], ["93", "173"], ["93", "100"], ["93", "186"], ["93", "108"], ["93", "176"], ["93", "105"], ["93", "110"], ["108", "120"], ["108", "131"], ["108", "121"], ["108", "112"], ["108", "129"], ["108", "118"], ["108", "108"], ["108", "116"], ["108", "122"], ["108", "110"], ["108", "125"], ["129", "136"], ["129", "145"], ["129", "146"], ["129", "151"], ["129", "138"], ["129", "139"], ["129", "140"], ["129", "143"], ["129", "147"], ["136", "162"], ["136", "170"], ["136", "164"], ["136", "155"], ["136", "158"], ["136", "166"], ["136", "157"], ["136", "159"], ["136", "165"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "32": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>3</SUB>>", "35": "<(IDENTIFIER,st,ANY st = new StringTokenizer(s.nextLine()))<SUB>3</SUB>>", "37": "<(&lt;init&gt;,new StringTokenizer(s.nextLine()))<SUB>3</SUB>>", "38": "<(nextLine,nextLine())<SUB>3</SUB>>", "40": "<(LOCAL,int n: int)<SUB>4</SUB>>", "42": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "44": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>4</SUB>>", "46": "<(IDENTIFIER,st,nextToken())<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.assignment,int r = parseInt(st.nextToken()))<SUB>5</SUB>>", "50": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "52": "<(nextToken,nextToken())<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(s.nextLine()))<SUB>6</SUB>>", "56": "<(&lt;operator&gt;.alloc,new StringTokenizer(s.nextLine()))<SUB>6</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(s.nextLine()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,s,nextLine())<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] array = new int[n])<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n])>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,array[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "81": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "83": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "84": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;State&gt;())<SUB>11</SUB>>", "86": "<(&lt;operator&gt;.alloc,new ArrayList&lt;State&gt;())<SUB>11</SUB>>", "8": "<(IDENTIFIER,list,new ArrayList&lt;State&gt;())<SUB>11</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(LOCAL,double currY: double)<SUB>13</SUB>>", "101": "<(IDENTIFIER,currY,double currY = r)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; list.size()); j++),for (int j = 0; Some(j &lt; list.size()); j++))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "107": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "109": "<(IDENTIFIER,j,j &lt; list.size())<SUB>14</SUB>>", "111": "<(IDENTIFIER,list,size())<SUB>14</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "115": "<(LOCAL,double xDiff: double)<SUB>15</SUB>>", "117": "<(IDENTIFIER,xDiff,double xDiff = abs(list.get(j).getX() - array[i]))<SUB>15</SUB>>", "119": "<(IDENTIFIER,Math,abs(list.get(j).getX() - array[i]))<SUB>15</SUB>>", "121": "<(getX,getX())<SUB>15</SUB>>", "123": "<(IDENTIFIER,list,get(j))<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>15</SUB>>", "127": "<(IDENTIFIER,i,list.get(j).getX() - array[i])<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.lessEqualsThan,xDiff &lt;= 2 * r)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>16</SUB>>", "133": "<(IDENTIFIER,r,2 * r)<SUB>16</SUB>>", "135": "<(CONTROL_STRUCTURE,if (currY &lt; list.get(j).getY() + Math.sqrt(4 * r * r - xDiff * xDiff)),if (currY &lt; list.get(j).getY() + Math.sqrt(4 * r * r - xDiff * xDiff)))<SUB>17</SUB>>", "137": "<(IDENTIFIER,currY,currY &lt; list.get(j).getY() + Math.sqrt(4 * r * r - xDiff * xDiff))<SUB>17</SUB>>", "139": "<(getY,getY())<SUB>17</SUB>>", "141": "<(IDENTIFIER,list,get(j))<SUB>17</SUB>>", "143": "<(sqrt,Math.sqrt(4 * r * r - xDiff * xDiff))<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.subtraction,4 * r * r - xDiff * xDiff)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>17</SUB>>", "149": "<(IDENTIFIER,r,4 * r)<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.multiplication,xDiff * xDiff)<SUB>17</SUB>>", "153": "<(IDENTIFIER,xDiff,xDiff * xDiff)<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.assignment,currY = list.get(j).getY() + Math.sqrt(4 * r * r - xDiff * xDiff))<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.addition,list.get(j).getY() + Math.sqrt(4 * r * r - xDiff * xDiff))<SUB>18</SUB>>", "159": "<(get,get(j))<SUB>18</SUB>>", "161": "<(IDENTIFIER,j,get(j))<SUB>18</SUB>>", "163": "<(IDENTIFIER,Math,Math.sqrt(4 * r * r - xDiff * xDiff))<SUB>18</SUB>>", "165": "<(&lt;operator&gt;.multiplication,4 * r * r)<SUB>18</SUB>>", "167": "<(LITERAL,4,4 * r)<SUB>18</SUB>>", "169": "<(IDENTIFIER,r,4 * r * r)<SUB>18</SUB>>", "171": "<(IDENTIFIER,xDiff,xDiff * xDiff)<SUB>18</SUB>>", "173": "<(add,add(new State(array[i], currY)))<SUB>22</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "177": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "179": "<(&lt;init&gt;,new State(array[i], currY))<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>22</SUB>>", "183": "<(IDENTIFIER,i,new State(array[i], currY))<SUB>22</SUB>>", "185": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "187": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "189": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "191": "<(IDENTIFIER,currY,currY + &quot; &quot;)<SUB>23</SUB>>", "193": "<(close,close())<SUB>25</SUB>>", "195": "<(MODIFIER,PUBLIC)>", "197": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}