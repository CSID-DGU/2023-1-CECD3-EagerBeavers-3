{"edges": [["21", "23"], ["21", "175"], ["21", "176"], ["21", "177"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["32", "33"], ["32", "34"], ["32", "38"], ["32", "39"], ["32", "43"], ["32", "62"], ["32", "63"], ["32", "6"], ["32", "66"], ["32", "69"], ["32", "71"], ["32", "96"], ["32", "97"], ["32", "104"], ["32", "105"], ["32", "109"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "61"], ["59", "60"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "5"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "90"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["84", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["90", "95"], ["92", "93"], ["92", "94"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "127"], ["119", "128"], ["119", "134"], ["119", "135"], ["119", "142"], ["119", "165"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "126"], ["124", "125"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "133"], ["131", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["147", "148"], ["147", "159"], ["148", "149"], ["148", "158"], ["149", "150"], ["149", "157"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["159", "160"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["169", "174"], ["170", "171"], ["170", "172"], ["24", "30"], ["27", "36"], ["26", "24"], ["28", "27"], ["30", "28"], ["34", "41"], ["39", "45"], ["63", "68"], ["66", "69"], ["69", "73"], ["97", "107"], ["105", "111"], ["36", "34"], ["41", "39"], ["45", "48"], ["48", "55"], ["48", "63"], ["51", "48"], ["68", "66"], ["73", "76"], ["76", "86"], ["76", "100"], ["79", "76"], ["99", "97"], ["107", "105"], ["111", "114"], ["114", "177"], ["114", "124"], ["117", "114"], ["54", "51"], ["82", "92"], ["90", "79"], ["100", "101"], ["101", "99"], ["121", "131"], ["128", "138"], ["135", "143"], ["165", "117"], ["55", "59"], ["58", "54"], ["84", "82"], ["92", "90"], ["123", "121"], ["130", "128"], ["137", "135"], ["143", "153"], ["143", "168"], ["166", "170"], ["169", "165"], ["59", "58"], ["86", "84"], ["124", "123"], ["131", "130"], ["138", "137"], ["168", "166"], ["170", "169"], ["148", "162"], ["148", "168"], ["149", "148"], ["160", "168"], ["150", "149"], ["162", "160"], ["151", "150"], ["153", "151"], ["21", "26"], ["22", "177"], ["24", "177"], ["27", "177"], ["27", "177"], ["34", "177"], ["39", "177"], ["39", "177"], ["39", "177"], ["63", "177"], ["66", "177"], ["69", "177"], ["69", "177"], ["76", "177"], ["76", "177"], ["97", "177"], ["101", "177"], ["99", "177"], ["97", "177"], ["97", "177"], ["107", "177"], ["105", "177"], ["105", "177"], ["111", "177"], ["114", "177"], ["114", "177"], ["114", "177"], ["117", "177"], ["79", "177"], ["51", "177"], ["21", "22"], ["21", "24"], ["24", "27"], ["21", "27"], ["36", "34"], ["41", "39"], ["21", "63"], ["21", "66"], ["21", "97"], ["101", "97"], ["101", "97"], ["107", "105"], ["21", "45"], ["66", "69"], ["21", "69"], ["48", "69"], ["21", "73"], ["21", "111"], ["27", "36"], ["21", "36"], ["34", "41"], ["21", "41"], ["45", "48"], ["51", "48"], ["21", "48"], ["41", "48"], ["48", "51"], ["21", "51"], ["58", "54"], ["58", "54"], ["73", "76"], ["79", "76"], ["21", "76"], ["69", "76"], ["84", "76"], ["76", "79"], ["21", "79"], ["84", "82"], ["84", "82"], ["84", "82"], ["21", "99"], ["101", "99"], ["101", "99"], ["36", "107"], ["59", "107"], ["21", "107"], ["111", "114"], ["117", "114"], ["21", "114"], ["105", "114"], ["114", "117"], ["21", "117"], ["123", "121"], ["123", "121"], ["130", "128"], ["130", "128"], ["138", "135"], ["138", "135"], ["21", "135"], ["63", "82"], ["21", "82"], ["84", "90"], ["21", "90"], ["39", "90"], ["84", "90"], ["63", "101"], ["82", "101"], ["21", "101"], ["21", "165"], ["59", "58"], ["21", "58"], ["69", "84"], ["90", "84"], ["21", "84"], ["39", "84"], ["90", "84"], ["54", "84"], ["76", "84"], ["124", "123"], ["21", "123"], ["131", "130"], ["21", "130"], ["138", "137"], ["138", "137"], ["21", "137"], ["135", "143"], ["21", "143"], ["21", "169"], ["36", "59"], ["21", "59"], ["107", "124"], ["131", "124"], ["21", "124"], ["124", "131"], ["21", "131"], ["128", "138"], ["21", "138"], ["121", "138"], ["97", "170"], ["160", "170"], ["21", "170"], ["149", "148"], ["149", "148"], ["21", "148"], ["162", "160"], ["162", "160"], ["150", "149"], ["150", "149"], ["21", "149"], ["151", "150"], ["151", "150"], ["21", "150"], ["21", "162"], ["97", "162"], ["170", "162"], ["153", "151"], ["21", "151"], ["153", "151"], ["143", "153"], ["21", "153"], ["48", "48"], ["48", "51"], ["48", "59"], ["48", "54"], ["48", "58"], ["48", "55"], ["76", "84"], ["76", "92"], ["76", "76"], ["76", "82"], ["76", "90"], ["76", "79"], ["76", "86"], ["114", "128"], ["114", "169"], ["114", "114"], ["114", "131"], ["114", "166"], ["114", "121"], ["114", "123"], ["114", "168"], ["114", "170"], ["114", "138"], ["114", "143"], ["114", "137"], ["114", "130"], ["114", "165"], ["114", "135"], ["114", "117"], ["114", "124"], ["143", "149"], ["143", "150"], ["143", "151"], ["143", "153"], ["143", "148"], ["148", "160"], ["148", "162"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(CONTROL_STRUCTURE,try,try)<SUB>2</SUB>>", "33": "<(LOCAL,int N: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,N,int N = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int[] array = new int[N])<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[N])>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "49": "<(IDENTIFIER,i,i &lt; N)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,array[i] = sc.nextInt() - 1)<SUB>6</SUB>>", "59": "<(nextInt,nextInt())<SUB>6</SUB>>", "61": "<(LITERAL,1,sc.nextInt() - 1)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,long inv = 0)<SUB>9</SUB>>", "65": "<(LITERAL,0,long inv = 0)<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY bit = new BIT(N))<SUB>10</SUB>>", "68": "<(&lt;operator&gt;.alloc,new BIT(N))<SUB>10</SUB>>", "5": "<(IDENTIFIER,bit,new BIT(N))<SUB>10</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,i &lt; N)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "83": "<(IDENTIFIER,inv,inv += sum(array[i], N))<SUB>12</SUB>>", "85": "<(IDENTIFIER,bit,sum(array[i], N))<SUB>12</SUB>>", "87": "<(IDENTIFIER,array,sum(array[i], N))<SUB>12</SUB>>", "89": "<(IDENTIFIER,N,sum(array[i], N))<SUB>12</SUB>>", "91": "<(IDENTIFIER,bit,add(array[i], 1))<SUB>13</SUB>>", "93": "<(IDENTIFIER,array,add(array[i], 1))<SUB>13</SUB>>", "95": "<(LITERAL,1,add(array[i], 1))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,int mod2 = (int) (inv % 2))<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.cast,(int) (inv % 2))<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.modulo,inv % 2)<SUB>17</SUB>>", "103": "<(LITERAL,2,inv % 2)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.assignment,int M = nextInt())<SUB>18</SUB>>", "107": "<(nextInt,nextInt())<SUB>18</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; M); i++),for (int i = 0; Some(i &lt; M); i++))<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "115": "<(IDENTIFIER,i,i &lt; M)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,int l = sc.nextInt() - 1)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>20</SUB>>", "125": "<(IDENTIFIER,sc,nextInt())<SUB>20</SUB>>", "127": "<(LOCAL,int r: int)<SUB>21</SUB>>", "129": "<(IDENTIFIER,r,int r = sc.nextInt() - 1)<SUB>21</SUB>>", "131": "<(nextInt,nextInt())<SUB>21</SUB>>", "133": "<(LITERAL,1,sc.nextInt() - 1)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,long size = (r - l) + 1)<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.addition,(r - l) + 1)<SUB>23</SUB>>", "139": "<(IDENTIFIER,r,r - l)<SUB>23</SUB>>", "141": "<(LITERAL,1,(r - l) + 1)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.greaterThan,size &gt; 1)<SUB>24</SUB>>", "145": "<(LITERAL,1,size &gt; 1)<SUB>24</SUB>>", "147": "<(CONTROL_STRUCTURE,if ((size * (size - 1) / 2) % 2 == 1),if ((size * (size - 1) / 2) % 2 == 1))<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.modulo,(size * (size - 1) / 2) % 2)<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.multiplication,size * (size - 1))<SUB>26</SUB>>", "153": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>26</SUB>>", "155": "<(LITERAL,1,size - 1)<SUB>26</SUB>>", "157": "<(LITERAL,2,(size * (size - 1) / 2) % 2)<SUB>26</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(IDENTIFIER,mod2,mod2 = 1 - mod2)<SUB>27</SUB>>", "163": "<(LITERAL,1,1 - mod2)<SUB>27</SUB>>", "165": "<(println,System.out.println((mod2 == 0) ? &quot;even&quot; : &quot;odd&quot;))<SUB>31</SUB>>", "167": "<(IDENTIFIER,System,System.out.println((mod2 == 0) ? &quot;even&quot; : &quot;odd&quot;))<SUB>31</SUB>>", "169": "<(&lt;operator&gt;.conditional,(mod2 == 0) ? &quot;even&quot; : &quot;odd&quot;)<SUB>31</SUB>>", "171": "<(IDENTIFIER,mod2,mod2 == 0)<SUB>31</SUB>>", "173": "<(LITERAL,&quot;even&quot;,(mod2 == 0) ? &quot;even&quot; : &quot;odd&quot;)<SUB>31</SUB>>", "175": "<(MODIFIER,PUBLIC)>", "177": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}