{"edges": [["19", "20"], ["19", "21"], ["19", "324"], ["19", "325"], ["19", "326"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "35"], ["21", "44"], ["21", "45"], ["21", "51"], ["21", "81"], ["21", "82"], ["21", "89"], ["21", "95"], ["21", "99"], ["21", "104"], ["21", "112"], ["21", "116"], ["21", "126"], ["21", "184"], ["21", "185"], ["21", "186"], ["21", "189"], ["21", "195"], ["21", "307"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "98"], ["99", "100"], ["99", "101"], ["99", "102"], ["99", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "122"], ["116", "125"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "138"], ["126", "140"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "142"], ["140", "147"], ["140", "150"], ["140", "152"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "153"], ["152", "164"], ["153", "154"], ["153", "163"], ["154", "155"], ["154", "162"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "205"], ["195", "207"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["211", "214"], ["211", "217"], ["211", "220"], ["211", "246"], ["211", "297"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["220", "225"], ["220", "228"], ["220", "230"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["230", "240"], ["231", "232"], ["231", "239"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["240", "241"], ["240", "245"], ["241", "242"], ["241", "243"], ["243", "244"], ["246", "247"], ["246", "248"], ["246", "253"], ["246", "256"], ["246", "258"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "286"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["263", "268"], ["263", "271"], ["263", "273"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["271", "272"], ["273", "274"], ["273", "283"], ["274", "275"], ["274", "282"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "290"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "296"], ["293", "294"], ["293", "295"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "301"], ["299", "302"], ["302", "303"], ["302", "304"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "311"], ["307", "312"], ["308", "309"], ["308", "310"], ["312", "313"], ["313", "314"], ["313", "323"], ["314", "315"], ["314", "322"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "321"], ["22", "28"], ["25", "33"], ["29", "38"], ["35", "49"], ["45", "53"], ["82", "92"], ["89", "95"], ["95", "99"], ["99", "109"], ["104", "112"], ["112", "118"], ["116", "128"], ["186", "192"], ["189", "197"], ["307", "326"], ["24", "22"], ["26", "25"], ["31", "29"], ["37", "35"], ["47", "45"], ["53", "56"], ["56", "63"], ["56", "85"], ["59", "56"], ["84", "82"], ["91", "89"], ["106", "104"], ["118", "122"], ["122", "116"], ["128", "135"], ["131", "144"], ["131", "186"], ["138", "135"], ["191", "189"], ["197", "202"], ["200", "208"], ["200", "310"], ["205", "202"], ["308", "316"], ["312", "307"], ["28", "26"], ["33", "31"], ["38", "41"], ["41", "37"], ["49", "47"], ["63", "66"], ["66", "73"], ["66", "59"], ["69", "66"], ["71", "69"], ["85", "84"], ["92", "91"], ["107", "106"], ["133", "131"], ["142", "147"], ["147", "158"], ["147", "138"], ["150", "147"], ["192", "191"], ["202", "200"], ["208", "214"], ["208", "205"], ["310", "308"], ["313", "312"], ["72", "79"], ["77", "71"], ["109", "107"], ["135", "133"], ["144", "142"], ["153", "165"], ["153", "150"], ["164", "150"], ["214", "217"], ["217", "222"], ["297", "205"], ["314", "313"], ["73", "72"], ["79", "77"], ["154", "153"], ["165", "170"], ["168", "164"], ["222", "225"], ["225", "235"], ["225", "250"], ["228", "225"], ["248", "253"], ["253", "260"], ["253", "304"], ["256", "253"], ["299", "297"], ["315", "314"], ["155", "154"], ["170", "180"], ["173", "168"], ["231", "243"], ["231", "228"], ["240", "228"], ["250", "248"], ["260", "265"], ["302", "299"], ["316", "319"], ["319", "315"], ["157", "155"], ["175", "173"], ["232", "231"], ["241", "240"], ["265", "268"], ["268", "287"], ["268", "276"], ["271", "268"], ["287", "293"], ["287", "256"], ["288", "256"], ["304", "302"], ["158", "157"], ["177", "175"], ["233", "232"], ["243", "241"], ["274", "283"], ["274", "271"], ["283", "271"], ["290", "288"], ["179", "177"], ["235", "233"], ["275", "274"], ["292", "290"], ["180", "179"], ["276", "279"], ["279", "275"], ["293", "292"], ["19", "24"], ["20", "326"], ["22", "326"], ["25", "326"], ["25", "326"], ["29", "326"], ["35", "326"], ["37", "326"], ["35", "326"], ["35", "326"], ["47", "326"], ["49", "326"], ["47", "326"], ["45", "326"], ["45", "326"], ["56", "326"], ["84", "326"], ["82", "326"], ["82", "326"], ["89", "326"], ["89", "326"], ["95", "326"], ["95", "326"], ["99", "326"], ["104", "326"], ["104", "326"], ["112", "326"], ["112", "326"], ["112", "326"], ["116", "326"], ["116", "326"], ["116", "326"], ["128", "326"], ["135", "326"], ["133", "326"], ["131", "326"], ["131", "326"], ["186", "326"], ["189", "326"], ["191", "326"], ["189", "326"], ["189", "326"], ["197", "326"], ["200", "326"], ["202", "326"], ["200", "326"], ["200", "326"], ["307", "326"], ["316", "326"], ["315", "326"], ["315", "326"], ["314", "326"], ["313", "326"], ["313", "326"], ["312", "326"], ["307", "326"], ["307", "326"], ["214", "326"], ["214", "326"], ["217", "326"], ["222", "326"], ["225", "326"], ["248", "326"], ["248", "326"], ["253", "326"], ["253", "326"], ["253", "326"], ["299", "326"], ["302", "326"], ["302", "326"], ["299", "326"], ["297", "326"], ["297", "326"], ["205", "326"], ["260", "326"], ["260", "326"], ["265", "326"], ["268", "326"], ["268", "326"], ["288", "326"], ["292", "326"], ["290", "326"], ["288", "326"], ["256", "326"], ["274", "326"], ["274", "326"], ["283", "326"], ["283", "326"], ["271", "326"], ["233", "326"], ["232", "326"], ["231", "326"], ["231", "326"], ["240", "326"], ["240", "326"], ["228", "326"], ["142", "326"], ["142", "326"], ["147", "326"], ["147", "326"], ["138", "326"], ["157", "326"], ["155", "326"], ["154", "326"], ["153", "326"], ["153", "326"], ["164", "326"], ["168", "326"], ["179", "326"], ["177", "326"], ["175", "326"], ["168", "326"], ["164", "326"], ["164", "326"], ["150", "326"], ["63", "326"], ["66", "326"], ["66", "326"], ["59", "326"], ["71", "326"], ["77", "326"], ["79", "326"], ["77", "326"], ["71", "326"], ["71", "326"], ["69", "326"], ["19", "20"], ["19", "22"], ["31", "29"], ["31", "29"], ["37", "35"], ["47", "45"], ["47", "45"], ["84", "82"], ["84", "82"], ["91", "89"], ["106", "104"], ["19", "186"], ["191", "189"], ["22", "25"], ["19", "25"], ["19", "53"], ["19", "95"], ["89", "95"], ["19", "99"], ["92", "99"], ["95", "112"], ["19", "112"], ["104", "112"], ["99", "116"], ["19", "116"], ["109", "116"], ["109", "116"], ["19", "128"], ["19", "197"], ["19", "307"], ["312", "307"], ["19", "31"], ["33", "31"], ["29", "37"], ["19", "37"], ["31", "47"], ["19", "47"], ["49", "47"], ["53", "56"], ["59", "56"], ["19", "56"], ["66", "56"], ["29", "56"], ["56", "59"], ["19", "59"], ["19", "63"], ["77", "71"], ["77", "71"], ["56", "84"], ["19", "84"], ["92", "91"], ["92", "91"], ["107", "106"], ["107", "106"], ["109", "118"], ["19", "118"], ["19", "122"], ["109", "122"], ["128", "131"], ["138", "131"], ["19", "131"], ["133", "131"], ["133", "131"], ["131", "138"], ["155", "138"], ["175", "138"], ["19", "138"], ["135", "142"], ["19", "142"], ["135", "191"], ["19", "191"], ["197", "200"], ["205", "200"], ["19", "200"], ["202", "200"], ["202", "200"], ["200", "205"], ["233", "205"], ["19", "205"], ["313", "312"], ["313", "312"], ["25", "33"], ["19", "33"], ["29", "38"], ["19", "38"], ["19", "41"], ["29", "41"], ["33", "49"], ["19", "49"], ["63", "66"], ["69", "66"], ["19", "66"], ["56", "66"], ["66", "69"], ["19", "69"], ["56", "85"], ["19", "85"], ["19", "92"], ["82", "92"], ["19", "107"], ["109", "107"], ["109", "107"], ["19", "133"], ["135", "133"], ["135", "133"], ["142", "147"], ["150", "147"], ["19", "147"], ["135", "147"], ["158", "150"], ["180", "150"], ["19", "150"], ["168", "164"], ["168", "164"], ["168", "164"], ["135", "192"], ["19", "192"], ["19", "202"], ["293", "202"], ["135", "202"], ["225", "202"], ["19", "214"], ["19", "217"], ["299", "297"], ["299", "297"], ["299", "297"], ["314", "313"], ["314", "313"], ["319", "313"], ["19", "313"], ["47", "77"], ["19", "77"], ["79", "77"], ["19", "109"], ["56", "109"], ["99", "109"], ["116", "135"], ["147", "135"], ["19", "135"], ["158", "135"], ["180", "135"], ["109", "135"], ["135", "144"], ["19", "144"], ["154", "153"], ["154", "153"], ["19", "153"], ["19", "222"], ["225", "248"], ["19", "248"], ["315", "314"], ["315", "314"], ["19", "314"], ["49", "79"], ["19", "79"], ["155", "154"], ["155", "154"], ["19", "154"], ["19", "168"], ["112", "168"], ["164", "168"], ["222", "225"], ["228", "225"], ["19", "225"], ["202", "225"], ["235", "228"], ["19", "228"], ["235", "240"], ["19", "240"], ["248", "253"], ["256", "253"], ["19", "253"], ["135", "253"], ["253", "256"], ["293", "256"], ["19", "256"], ["19", "260"], ["168", "299"], ["19", "299"], ["186", "299"], ["297", "299"], ["217", "299"], ["268", "299"], ["243", "299"], ["112", "299"], ["316", "315"], ["319", "315"], ["319", "315"], ["131", "155"], ["175", "155"], ["19", "155"], ["157", "155"], ["157", "155"], ["232", "231"], ["232", "231"], ["19", "231"], ["225", "250"], ["19", "250"], ["19", "265"], ["19", "287"], ["290", "288"], ["290", "288"], ["217", "302"], ["268", "302"], ["243", "302"], ["19", "302"], ["112", "302"], ["45", "316"], ["19", "316"], ["186", "319"], ["297", "319"], ["19", "319"], ["158", "157"], ["158", "157"], ["19", "157"], ["155", "175"], ["19", "175"], ["177", "175"], ["177", "175"], ["233", "232"], ["233", "232"], ["19", "232"], ["265", "268"], ["271", "268"], ["19", "268"], ["217", "268"], ["243", "268"], ["268", "271"], ["19", "271"], ["19", "283"], ["214", "288"], ["19", "288"], ["147", "158"], ["19", "158"], ["180", "158"], ["135", "158"], ["19", "177"], ["179", "177"], ["179", "177"], ["200", "233"], ["19", "233"], ["235", "233"], ["235", "233"], ["217", "243"], ["19", "243"], ["19", "274"], ["19", "290"], ["292", "290"], ["292", "290"], ["180", "179"], ["180", "179"], ["19", "179"], ["225", "235"], ["19", "235"], ["293", "292"], ["293", "292"], ["19", "292"], ["158", "180"], ["19", "180"], ["158", "180"], ["253", "293"], ["19", "293"], ["225", "293"], ["56", "56"], ["56", "59"], ["56", "66"], ["56", "63"], ["131", "131"], ["131", "144"], ["131", "138"], ["131", "142"], ["131", "147"], ["131", "135"], ["131", "133"], ["200", "208"], ["200", "202"], ["200", "205"], ["200", "200"], ["66", "73"], ["66", "77"], ["66", "69"], ["66", "79"], ["66", "66"], ["66", "72"], ["66", "71"], ["147", "154"], ["147", "150"], ["147", "153"], ["147", "155"], ["147", "158"], ["147", "157"], ["147", "147"], ["208", "214"], ["208", "225"], ["208", "302"], ["208", "299"], ["208", "304"], ["208", "217"], ["208", "253"], ["208", "248"], ["208", "250"], ["208", "222"], ["208", "297"], ["153", "179"], ["153", "168"], ["153", "170"], ["153", "173"], ["153", "164"], ["153", "180"], ["153", "177"], ["153", "165"], ["153", "175"], ["225", "225"], ["225", "232"], ["225", "228"], ["225", "231"], ["225", "233"], ["225", "235"], ["253", "256"], ["253", "268"], ["253", "265"], ["253", "287"], ["253", "260"], ["253", "253"], ["231", "240"], ["231", "243"], ["231", "241"], ["268", "279"], ["268", "275"], ["268", "268"], ["268", "276"], ["268", "274"], ["268", "271"], ["287", "292"], ["287", "290"], ["287", "293"], ["287", "288"], ["274", "283"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = parseInt(sc.next()))<SUB>4</SUB>>", "31": "<(parseInt,parseInt(sc.next()))<SUB>4</SUB>>", "33": "<(next,next())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,a = new int[n + 10][n + 10])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n + 10][n + 10])>", "39": "<(IDENTIFIER,n,n + 10)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.addition,n + 10)<SUB>5</SUB>>", "43": "<(LITERAL,10,n + 10)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int cap = parseInt(sc.next()))<SUB>6</SUB>>", "47": "<(parseInt,parseInt(sc.next()))<SUB>6</SUB>>", "49": "<(next,next())<SUB>6</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); ++i),for (int i = 1; Some(i &lt;= n); ++i))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "55": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.preIncrement,++i)<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= n); ++j),for (int j = 1; Some(j &lt;= n); ++j))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>8</SUB>>", "65": "<(LITERAL,1,int j = 1)<SUB>8</SUB>>", "67": "<(IDENTIFIER,j,j &lt;= n)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.preIncrement,++j)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,a[i][j] = parseInt(sc.next()))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,a[i][j] = parseInt(sc.next()))<SUB>9</SUB>>", "77": "<(parseInt,parseInt(sc.next()))<SUB>9</SUB>>", "79": "<(next,next())<SUB>9</SUB>>", "81": "<(LOCAL,int m: int)<SUB>10</SUB>>", "83": "<(IDENTIFIER,m,int m = (n + 1) &gt;&gt; 1)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.addition,n + 1)<SUB>10</SUB>>", "87": "<(LITERAL,1,n + 1)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.assignment,isClique = new boolean[1 &lt;&lt; m])<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.alloc,new boolean[1 &lt;&lt; m])>", "93": "<(LITERAL,1,1 &lt;&lt; m)<SUB>11</SUB>>", "95": "<(fill,fill(isClique, false))<SUB>12</SUB>>", "97": "<(IDENTIFIER,isClique,fill(isClique, false))<SUB>12</SUB>>", "99": "<(DFS1,DFS1(1, m, 0))<SUB>13</SUB>>", "101": "<(LITERAL,1,DFS1(1, m, 0))<SUB>13</SUB>>", "103": "<(LITERAL,0,DFS1(1, m, 0))<SUB>13</SUB>>", "105": "<(IDENTIFIER,maxClique,maxClique = new int[1 &lt;&lt; (n - m)])<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n - m))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.subtraction,n - m)<SUB>14</SUB>>", "111": "<(IDENTIFIER,m,n - m)<SUB>14</SUB>>", "113": "<(IDENTIFIER,Arrays,fill(maxClique, 0))<SUB>15</SUB>>", "115": "<(LITERAL,0,fill(maxClique, 0))<SUB>15</SUB>>", "117": "<(IDENTIFIER,this,DFS2(m + 1, n, m + 1, 0))<SUB>16</SUB>>", "119": "<(IDENTIFIER,m,m + 1)<SUB>16</SUB>>", "121": "<(IDENTIFIER,n,DFS2(m + 1, n, m + 1, 0))<SUB>16</SUB>>", "123": "<(IDENTIFIER,m,m + 1)<SUB>16</SUB>>", "125": "<(LITERAL,0,DFS2(m + 1, n, m + 1, 0))<SUB>16</SUB>>", "127": "<(LOCAL,int i: int)<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,int i = 1)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; 1 &lt;&lt; (n - m))<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n - m))<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.subtraction,n - m)<SUB>17</SUB>>", "137": "<(IDENTIFIER,m,n - m)<SUB>17</SUB>>", "139": "<(IDENTIFIER,i,++i)<SUB>17</SUB>>", "141": "<(LOCAL,int j: int)<SUB>18</SUB>>", "143": "<(IDENTIFIER,j,int j = m + 1)<SUB>18</SUB>>", "145": "<(IDENTIFIER,m,m + 1)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>18</SUB>>", "149": "<(IDENTIFIER,n,j &lt;= n)<SUB>18</SUB>>", "151": "<(IDENTIFIER,j,++j)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.equals,(i &gt;&gt; (j - m - 1) &amp; 1) == 1)<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; (j - m - 1))<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.subtraction,j - m - 1)<SUB>19</SUB>>", "159": "<(IDENTIFIER,j,j - m)<SUB>19</SUB>>", "161": "<(LITERAL,1,j - m - 1)<SUB>19</SUB>>", "163": "<(LITERAL,1,(i &gt;&gt; (j - m - 1) &amp; 1) == 1)<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,maxClique[i])<SUB>20</SUB>>", "167": "<(IDENTIFIER,i,maxClique[i] = max(maxClique[i], maxClique[i - (1 &lt;&lt; (j - m - 1))]))<SUB>20</SUB>>", "169": "<(IDENTIFIER,Math,max(maxClique[i], maxClique[i - (1 &lt;&lt; (j - m - 1))]))<SUB>20</SUB>>", "171": "<(IDENTIFIER,maxClique,max(maxClique[i], maxClique[i - (1 &lt;&lt; (j - m - 1))]))<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,maxClique[i - (1 &lt;&lt; (j - m - 1))])<SUB>20</SUB>>", "175": "<(&lt;operator&gt;.subtraction,i - (1 &lt;&lt; (j - m - 1)))<SUB>20</SUB>>", "177": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (j - m - 1))<SUB>20</SUB>>", "179": "<(&lt;operator&gt;.subtraction,j - m - 1)<SUB>20</SUB>>", "181": "<(IDENTIFIER,j,j - m)<SUB>20</SUB>>", "183": "<(LITERAL,1,j - m - 1)<SUB>20</SUB>>", "185": "<(LOCAL,int[] tmp: int[])<SUB>21</SUB>>", "187": "<(IDENTIFIER,ans,int ans = 0)<SUB>21</SUB>>", "189": "<(&lt;operator&gt;.assignment,int[] tmp = new int[m + 10])<SUB>21</SUB>>", "191": "<(&lt;operator&gt;.alloc,new int[m + 10])>", "193": "<(IDENTIFIER,m,m + 10)<SUB>21</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 1 &lt;&lt; m); ++i),for (int i = 0; Some(i &lt; 1 &lt;&lt; m); ++i))<SUB>22</SUB>>", "197": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "199": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "201": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; m)<SUB>22</SUB>>", "203": "<(LITERAL,1,1 &lt;&lt; m)<SUB>22</SUB>>", "205": "<(&lt;operator&gt;.preIncrement,++i)<SUB>22</SUB>>", "207": "<(CONTROL_STRUCTURE,if (isClique[i]),if (isClique[i]))<SUB>23</SUB>>", "209": "<(IDENTIFIER,isClique,if (isClique[i]))<SUB>23</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "213": "<(LOCAL,int cnt: int)<SUB>25</SUB>>", "215": "<(IDENTIFIER,mask,int mask = 0)<SUB>25</SUB>>", "217": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>25</SUB>>", "219": "<(LITERAL,0,int cnt = 0)<SUB>25</SUB>>", "221": "<(LOCAL,int j: int)<SUB>26</SUB>>", "223": "<(IDENTIFIER,j,int j = 1)<SUB>26</SUB>>", "225": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>26</SUB>>", "227": "<(IDENTIFIER,m,j &lt;= m)<SUB>26</SUB>>", "229": "<(IDENTIFIER,j,++j)<SUB>26</SUB>>", "231": "<(&lt;operator&gt;.equals,(i &gt;&gt; (j - 1) &amp; 1) == 1)<SUB>27</SUB>>", "233": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; (j - 1))<SUB>27</SUB>>", "235": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>27</SUB>>", "237": "<(LITERAL,1,j - 1)<SUB>27</SUB>>", "239": "<(LITERAL,1,(i &gt;&gt; (j - 1) &amp; 1) == 1)<SUB>27</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,tmp[++cnt])<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.preIncrement,++cnt)<SUB>28</SUB>>", "245": "<(IDENTIFIER,j,tmp[++cnt] = j)<SUB>28</SUB>>", "247": "<(LOCAL,int j: int)<SUB>29</SUB>>", "249": "<(IDENTIFIER,j,int j = m + 1)<SUB>29</SUB>>", "251": "<(IDENTIFIER,m,m + 1)<SUB>29</SUB>>", "253": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>29</SUB>>", "255": "<(IDENTIFIER,n,j &lt;= n)<SUB>29</SUB>>", "257": "<(IDENTIFIER,j,++j)<SUB>29</SUB>>", "259": "<(LOCAL,boolean mark: boolean)<SUB>31</SUB>>", "261": "<(IDENTIFIER,mark,boolean mark = true)<SUB>31</SUB>>", "263": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k &lt;= cnt); ++k),for (int k = 1; Some(k &lt;= cnt); ++k))<SUB>32</SUB>>", "265": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>32</SUB>>", "267": "<(LITERAL,1,int k = 1)<SUB>32</SUB>>", "269": "<(IDENTIFIER,k,k &lt;= cnt)<SUB>32</SUB>>", "271": "<(&lt;operator&gt;.preIncrement,++k)<SUB>32</SUB>>", "273": "<(CONTROL_STRUCTURE,if (a[j][tmp[k]] == 0),if (a[j][tmp[k]] == 0))<SUB>33</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,a[j][tmp[k]])<SUB>33</SUB>>", "277": "<(IDENTIFIER,a,a[j][tmp[k]] == 0)<SUB>33</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,tmp[k])<SUB>33</SUB>>", "281": "<(IDENTIFIER,k,a[j][tmp[k]] == 0)<SUB>33</SUB>>", "283": "<(&lt;operator&gt;.assignment,mark = false)<SUB>34</SUB>>", "285": "<(LITERAL,false,mark = false)<SUB>34</SUB>>", "287": "<(IDENTIFIER,mark,if (mark))<SUB>35</SUB>>", "289": "<(IDENTIFIER,mask,mask |= 1 &lt;&lt; (j - m - 1))<SUB>36</SUB>>", "291": "<(LITERAL,1,1 &lt;&lt; (j - m - 1))<SUB>36</SUB>>", "293": "<(&lt;operator&gt;.subtraction,j - m)<SUB>36</SUB>>", "295": "<(IDENTIFIER,m,j - m)<SUB>36</SUB>>", "297": "<(&lt;operator&gt;.assignment,ans = max(ans, cnt + maxClique[mask]))<SUB>38</SUB>>", "299": "<(max,max(ans, cnt + maxClique[mask]))<SUB>38</SUB>>", "301": "<(IDENTIFIER,ans,max(ans, cnt + maxClique[mask]))<SUB>38</SUB>>", "303": "<(IDENTIFIER,cnt,cnt + maxClique[mask])<SUB>38</SUB>>", "305": "<(IDENTIFIER,maxClique,cnt + maxClique[mask])<SUB>38</SUB>>", "307": "<(printf,System.out.printf(&quot;%.9f\\n&quot;, cap * cap * (ans - 1) / 2.0 / ans))<SUB>40</SUB>>", "309": "<(IDENTIFIER,System,System.out.printf(&quot;%.9f\\n&quot;, cap * cap * (ans - 1) / 2.0 / ans))<SUB>40</SUB>>", "311": "<(LITERAL,&quot;%.9f\\n&quot;,System.out.printf(&quot;%.9f\\n&quot;, cap * cap * (ans - 1) / 2.0 / ans))<SUB>40</SUB>>", "313": "<(&lt;operator&gt;.division,cap * cap * (ans - 1) / 2.0 / ans)<SUB>40</SUB>>", "315": "<(&lt;operator&gt;.multiplication,cap * cap * (ans - 1))<SUB>40</SUB>>", "317": "<(IDENTIFIER,cap,cap * cap)<SUB>40</SUB>>", "319": "<(&lt;operator&gt;.subtraction,ans - 1)<SUB>40</SUB>>", "321": "<(LITERAL,1,ans - 1)<SUB>40</SUB>>", "323": "<(IDENTIFIER,ans,cap * cap * (ans - 1) / 2.0 / ans)<SUB>40</SUB>>", "325": "<(MODIFIER,STATIC)>"}}