{"edges": [["19", "20"], ["19", "21"], ["19", "120"], ["19", "121"], ["19", "122"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "32"], ["30", "31"], ["32", "33"], ["32", "34"], ["32", "38"], ["32", "39"], ["32", "43"], ["32", "44"], ["32", "47"], ["32", "48"], ["32", "51"], ["32", "52"], ["32", "56"], ["32", "57"], ["32", "61"], ["32", "103"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "78"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "86"], ["78", "94"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["86", "87"], ["86", "89"], ["87", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["95", "96"], ["95", "98"], ["96", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "107"], ["103", "113"], ["104", "105"], ["104", "106"], ["107", "108"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["114", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["22", "28"], ["25", "30"], ["24", "22"], ["26", "25"], ["30", "122"], ["30", "36"], ["28", "26"], ["34", "41"], ["39", "44"], ["44", "48"], ["48", "54"], ["52", "59"], ["57", "63"], ["36", "34"], ["41", "39"], ["54", "52"], ["59", "57"], ["63", "66"], ["66", "73"], ["66", "104"], ["69", "66"], ["104", "111"], ["104", "118"], ["72", "81"], ["108", "30"], ["73", "76"], ["76", "72"], ["79", "87"], ["79", "96"], ["109", "108"], ["115", "30"], ["80", "79"], ["87", "91"], ["89", "69"], ["111", "109"], ["116", "115"], ["81", "80"], ["91", "89"], ["96", "100"], ["98", "69"], ["118", "116"], ["100", "98"], ["19", "24"], ["20", "122"], ["22", "122"], ["25", "122"], ["25", "122"], ["30", "122"], ["30", "122"], ["115", "122"], ["115", "122"], ["115", "122"], ["108", "122"], ["108", "122"], ["108", "122"], ["19", "20"], ["19", "22"], ["22", "25"], ["19", "25"], ["25", "30"], ["36", "30"], ["76", "30"], ["19", "30"], ["36", "34"], ["41", "39"], ["19", "44"], ["19", "48"], ["54", "52"], ["59", "57"], ["19", "63"], ["30", "36"], ["19", "36"], ["34", "41"], ["19", "41"], ["19", "54"], ["19", "59"], ["63", "66"], ["69", "66"], ["19", "66"], ["41", "66"], ["19", "69"], ["66", "69"], ["76", "72"], ["44", "104"], ["96", "104"], ["19", "104"], ["115", "108"], ["52", "108"], ["98", "108"], ["19", "108"], ["36", "76"], ["19", "76"], ["80", "79"], ["80", "79"], ["19", "79"], ["66", "89"], ["19", "89"], ["108", "115"], ["57", "115"], ["89", "115"], ["19", "115"], ["39", "80"], ["72", "80"], ["19", "80"], ["48", "87"], ["19", "87"], ["66", "98"], ["19", "98"], ["66", "91"], ["19", "91"], ["44", "96"], ["19", "96"], ["66", "100"], ["19", "100"], ["30", "30"], ["30", "34"], ["30", "48"], ["30", "57"], ["30", "66"], ["30", "52"], ["30", "104"], ["30", "59"], ["30", "44"], ["30", "54"], ["30", "36"], ["30", "41"], ["30", "63"], ["30", "39"], ["66", "73"], ["66", "66"], ["66", "81"], ["66", "72"], ["66", "69"], ["66", "76"], ["66", "79"], ["66", "80"], ["104", "115"], ["104", "116"], ["104", "118"], ["104", "108"], ["104", "111"], ["104", "109"], ["79", "96"], ["79", "89"], ["79", "98"], ["79", "87"], ["79", "91"], ["79", "100"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(CONTROL_STRUCTURE,while (s.hasNext()),while (s.hasNext()))<SUB>3</SUB>>", "31": "<(IDENTIFIER,s,hasNext())<SUB>3</SUB>>", "33": "<(LOCAL,int n: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,s,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[n])>", "43": "<(LOCAL,int odd: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,odd,int odd = 0)<SUB>6</SUB>>", "47": "<(LOCAL,int even: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,even,int even = 0)<SUB>7</SUB>>", "51": "<(LOCAL,int po: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,po,int po = -1)<SUB>8</SUB>>", "55": "<(LITERAL,1,-1)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int ev = -1)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "75": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>11</SUB>>", "77": "<(IDENTIFIER,s,nextInt())<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.equals,a[i] % 2 == 0)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,a[i] % 2)<SUB>12</SUB>>", "85": "<(LITERAL,0,a[i] % 2 == 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,even++)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,ev = i + 1)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "93": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "97": "<(IDENTIFIER,odd,odd++)<SUB>16</SUB>>", "99": "<(IDENTIFIER,po,po = i + 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,i,i + 1)<SUB>17</SUB>>", "103": "<(CONTROL_STRUCTURE,if (odd == 1),if (odd == 1))<SUB>20</SUB>>", "105": "<(IDENTIFIER,odd,odd == 1)<SUB>20</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "115": "<(println,System.out.println(ev))<SUB>23</SUB>>", "117": "<(IDENTIFIER,System,System.out.println(ev))<SUB>23</SUB>>", "119": "<(IDENTIFIER,ev,System.out.println(ev))<SUB>23</SUB>>", "121": "<(MODIFIER,STATIC)>"}}