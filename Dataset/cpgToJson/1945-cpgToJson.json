{"edges": [["19", "20"], ["19", "21"], ["19", "158"], ["19", "159"], ["19", "160"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "71"], ["21", "81"], ["21", "82"], ["21", "85"], ["21", "86"], ["21", "89"], ["21", "119"], ["21", "149"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "40"], ["38", "39"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "64"], ["60", "70"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "68"], ["66", "67"], ["68", "69"], ["71", "72"], ["71", "73"], ["71", "74"], ["74", "75"], ["74", "78"], ["74", "80"], ["75", "76"], ["75", "77"], ["78", "79"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "117"], ["90", "91"], ["90", "106"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["119", "120"], ["119", "147"], ["120", "121"], ["120", "136"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["22", "28"], ["25", "32"], ["30", "38"], ["35", "44"], ["42", "48"], ["71", "82"], ["82", "86"], ["86", "92"], ["149", "160"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "42"], ["48", "51"], ["51", "57"], ["51", "77"], ["54", "51"], ["56", "54"], ["90", "117"], ["90", "122"], ["117", "92"], ["120", "147"], ["120", "152"], ["147", "122"], ["150", "154"], ["153", "149"], ["28", "26"], ["38", "37"], ["57", "63"], ["75", "78"], ["78", "71"], ["91", "90"], ["91", "108"], ["106", "90"], ["121", "120"], ["121", "138"], ["136", "120"], ["152", "150"], ["154", "153"], ["61", "66"], ["64", "56"], ["77", "75"], ["92", "91"], ["92", "97"], ["95", "91"], ["107", "113"], ["112", "106"], ["122", "121"], ["122", "127"], ["125", "121"], ["137", "143"], ["142", "136"], ["63", "61"], ["66", "68"], ["68", "64"], ["96", "102"], ["101", "95"], ["108", "111"], ["111", "107"], ["113", "116"], ["116", "112"], ["126", "132"], ["131", "125"], ["138", "141"], ["141", "137"], ["143", "146"], ["146", "142"], ["97", "100"], ["100", "96"], ["102", "105"], ["105", "101"], ["127", "130"], ["130", "126"], ["132", "135"], ["135", "131"], ["19", "24"], ["20", "160"], ["22", "160"], ["25", "160"], ["25", "160"], ["30", "160"], ["38", "160"], ["37", "160"], ["35", "160"], ["35", "160"], ["42", "160"], ["42", "160"], ["48", "160"], ["51", "160"], ["71", "160"], ["75", "160"], ["78", "160"], ["78", "160"], ["71", "160"], ["82", "160"], ["86", "160"], ["86", "160"], ["91", "160"], ["95", "160"], ["91", "160"], ["90", "160"], ["106", "160"], ["90", "160"], ["90", "160"], ["122", "160"], ["121", "160"], ["125", "160"], ["121", "160"], ["120", "160"], ["136", "160"], ["120", "160"], ["120", "160"], ["149", "160"], ["154", "160"], ["154", "160"], ["153", "160"], ["149", "160"], ["149", "160"], ["147", "160"], ["117", "160"], ["56", "160"], ["64", "160"], ["64", "160"], ["68", "160"], ["64", "160"], ["56", "160"], ["54", "160"], ["71", "160"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["37", "35"], ["44", "42"], ["35", "82"], ["19", "82"], ["19", "86"], ["35", "86"], ["22", "25"], ["19", "25"], ["19", "48"], ["61", "56"], ["64", "56"], ["19", "56"], ["19", "71"], ["42", "71"], ["56", "71"], ["75", "71"], ["78", "71"], ["153", "149"], ["153", "149"], ["25", "32"], ["19", "32"], ["38", "37"], ["19", "37"], ["30", "44"], ["19", "44"], ["48", "51"], ["54", "51"], ["19", "51"], ["44", "51"], ["51", "54"], ["19", "54"], ["19", "75"], ["19", "80"], ["91", "90"], ["91", "90"], ["106", "90"], ["106", "90"], ["92", "117"], ["19", "117"], ["121", "120"], ["121", "120"], ["136", "120"], ["136", "120"], ["122", "147"], ["19", "147"], ["154", "153"], ["154", "153"], ["19", "153"], ["32", "38"], ["19", "38"], ["19", "61"], ["19", "70"], ["75", "78"], ["19", "78"], ["92", "91"], ["92", "91"], ["95", "91"], ["95", "91"], ["122", "121"], ["122", "121"], ["125", "121"], ["125", "121"], ["106", "136"], ["122", "154"], ["19", "154"], ["92", "154"], ["61", "64"], ["19", "64"], ["66", "64"], ["68", "64"], ["82", "92"], ["117", "92"], ["19", "92"], ["86", "122"], ["147", "122"], ["19", "122"], ["51", "122"], ["95", "125"], ["38", "66"], ["68", "66"], ["19", "66"], ["66", "68"], ["19", "68"], ["51", "68"], ["51", "64"], ["51", "51"], ["51", "57"], ["51", "66"], ["51", "56"], ["51", "54"], ["51", "61"], ["51", "63"], ["90", "92"], ["90", "91"], ["90", "90"], ["90", "117"], ["120", "120"], ["120", "122"], ["120", "121"], ["120", "147"], ["91", "107"], ["91", "113"], ["91", "116"], ["91", "106"], ["91", "112"], ["91", "108"], ["91", "111"], ["121", "141"], ["121", "136"], ["121", "146"], ["121", "142"], ["121", "138"], ["121", "143"], ["121", "137"], ["92", "96"], ["92", "102"], ["92", "95"], ["92", "97"], ["92", "101"], ["92", "105"], ["92", "100"], ["122", "131"], ["122", "132"], ["122", "126"], ["122", "130"], ["122", "135"], ["122", "127"], ["122", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = in.nextInt() - 1)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>4</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,Point[] A: ANY)<SUB>5</SUB>>", "43": "<(IDENTIFIER,A,ANY A = new Point[n])<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,new Point[n])<SUB>5</SUB>>", "47": "<(LOCAL,int i: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,A[i] = new Point(in.nextInt(), in.nextInt()))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "63": "<(&lt;operator&gt;.alloc,new Point(in.nextInt(), in.nextInt()))<SUB>7</SUB>>", "65": "<(IDENTIFIER,$obj1,new Point(in.nextInt(), in.nextInt()))>", "67": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "69": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "71": "<(sort,sort(A, new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point o1, Point o2) {\\012        if (o1.x != o2.x)\\012            return o2.x - o1.x;\\012        if (o1.y != o2.y)\\012            return o1.y - o2.y;\\012        return 0;\\012    }\\012}))<SUB>8</SUB>>", "73": "<(IDENTIFIER,A,sort(A, new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point o1, Point o2) {\\012        if (o1.x != o2.x)\\012            return o2.x - o1.x;\\012        if (o1.y != o2.y)\\012            return o1.y - o2.y;\\012        return 0;\\012    }\\012}))<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "77": "<(&lt;operator&gt;.alloc,new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point o1, Point o2) {\\012        if (o1.x != o2.x)\\012            return o2.x - o1.x;\\012        if (o1.y != o2.y)\\012            return o1.y - o2.y;\\012        return 0;\\012    }\\012})<SUB>8</SUB>>", "79": "<(IDENTIFIER,$obj2,new Comparator&lt;Point&gt;() {\\012\\012    public int compare(Point o1, Point o2) {\\012        if (o1.x != o2.x)\\012            return o2.x - o1.x;\\012        if (o1.y != o2.y)\\012            return o1.y - o2.y;\\012        return 0;\\012    }\\012})>", "81": "<(LOCAL,int i: int)<SUB>17</SUB>>", "83": "<(IDENTIFIER,i,int i = k)<SUB>17</SUB>>", "85": "<(LOCAL,int j: int)<SUB>18</SUB>>", "87": "<(IDENTIFIER,j,int j = k)<SUB>18</SUB>>", "89": "<(CONTROL_STRUCTURE,while (i &gt;= 0 &amp;&amp; A[i].x == A[k].x &amp;&amp; A[i].y == A[k].y),while (i &gt;= 0 &amp;&amp; A[i].x == A[k].x &amp;&amp; A[i].y == A[k].y))<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.logicalAnd,i &gt;= 0 &amp;&amp; A[i].x == A[k].x)<SUB>19</SUB>>", "93": "<(IDENTIFIER,i,i &gt;= 0)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.equals,A[i].x == A[k].x)<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>19</SUB>>", "99": "<(IDENTIFIER,i,A[i].x == A[k].x)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.fieldAccess,A[k].x)<SUB>19</SUB>>", "103": "<(IDENTIFIER,A,A[i].x == A[k].x)<SUB>19</SUB>>", "105": "<(FIELD_IDENTIFIER,x,x)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,A[i].y)<SUB>19</SUB>>", "109": "<(IDENTIFIER,A,A[i].y == A[k].y)<SUB>19</SUB>>", "111": "<(FIELD_IDENTIFIER,y,y)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,A[k])<SUB>19</SUB>>", "115": "<(IDENTIFIER,k,A[i].y == A[k].y)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.postDecrement,i--)<SUB>20</SUB>>", "119": "<(CONTROL_STRUCTURE,while (j &lt; n &amp;&amp; A[j].x == A[k].x &amp;&amp; A[j].y == A[k].y),while (j &lt; n &amp;&amp; A[j].x == A[k].x &amp;&amp; A[j].y == A[k].y))<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.logicalAnd,j &lt; n &amp;&amp; A[j].x == A[k].x)<SUB>21</SUB>>", "123": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.equals,A[j].x == A[k].x)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,A[j])<SUB>21</SUB>>", "129": "<(IDENTIFIER,j,A[j].x == A[k].x)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,A[k].x)<SUB>21</SUB>>", "133": "<(IDENTIFIER,A,A[j].x == A[k].x)<SUB>21</SUB>>", "135": "<(FIELD_IDENTIFIER,x,x)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,A[j].y)<SUB>21</SUB>>", "139": "<(IDENTIFIER,A,A[j].y == A[k].y)<SUB>21</SUB>>", "141": "<(FIELD_IDENTIFIER,y,y)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,A[k])<SUB>21</SUB>>", "145": "<(IDENTIFIER,k,A[j].y == A[k].y)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "149": "<(println,System.out.println(j - i - 1))<SUB>23</SUB>>", "151": "<(IDENTIFIER,System,System.out.println(j - i - 1))<SUB>23</SUB>>", "153": "<(&lt;operator&gt;.subtraction,j - i - 1)<SUB>23</SUB>>", "155": "<(IDENTIFIER,j,j - i)<SUB>23</SUB>>", "157": "<(LITERAL,1,j - i - 1)<SUB>23</SUB>>", "159": "<(MODIFIER,STATIC)>"}}