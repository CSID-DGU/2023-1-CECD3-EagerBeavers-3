{"edges": [["19", "21"], ["19", "149"], ["19", "150"], ["19", "151"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "41"], ["38", "42"], ["38", "46"], ["38", "59"], ["38", "60"], ["38", "65"], ["38", "66"], ["38", "73"], ["38", "96"], ["38", "101"], ["38", "114"], ["38", "121"], ["38", "144"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "52"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "58"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "89"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "88"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "137"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "151"], ["35", "39"], ["28", "26"], ["39", "44"], ["42", "48"], ["60", "69"], ["66", "76"], ["96", "103"], ["114", "124"], ["144", "35"], ["44", "42"], ["47", "56"], ["47", "62"], ["62", "60"], ["68", "66"], ["74", "93"], ["74", "98"], ["98", "96"], ["102", "111"], ["102", "117"], ["116", "114"], ["122", "141"], ["122", "147"], ["145", "144"], ["48", "47"], ["53", "35"], ["69", "70"], ["70", "68"], ["75", "74"], ["75", "82"], ["80", "74"], ["90", "35"], ["103", "102"], ["108", "35"], ["117", "118"], ["118", "116"], ["123", "122"], ["123", "130"], ["128", "122"], ["138", "35"], ["147", "145"], ["54", "53"], ["76", "75"], ["81", "80"], ["91", "90"], ["109", "108"], ["124", "123"], ["129", "128"], ["139", "138"], ["56", "54"], ["82", "85"], ["85", "81"], ["93", "91"], ["111", "109"], ["130", "133"], ["133", "129"], ["141", "139"], ["19", "24"], ["20", "151"], ["22", "151"], ["25", "151"], ["25", "151"], ["32", "151"], ["30", "151"], ["30", "151"], ["35", "151"], ["35", "151"], ["144", "151"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["39", "35"], ["19", "35"], ["44", "42"], ["62", "60"], ["62", "60"], ["19", "66"], ["70", "66"], ["70", "66"], ["98", "96"], ["98", "96"], ["19", "114"], ["118", "114"], ["118", "114"], ["35", "39"], ["19", "39"], ["138", "144"], ["108", "144"], ["90", "144"], ["53", "144"], ["19", "144"], ["32", "44"], ["19", "44"], ["48", "47"], ["48", "47"], ["19", "47"], ["48", "62"], ["19", "62"], ["19", "68"], ["70", "68"], ["70", "68"], ["75", "74"], ["75", "74"], ["122", "74"], ["80", "74"], ["80", "74"], ["62", "98"], ["19", "98"], ["103", "102"], ["103", "102"], ["19", "102"], ["19", "116"], ["118", "116"], ["118", "116"], ["123", "122"], ["123", "122"], ["128", "122"], ["128", "122"], ["74", "122"], ["42", "48"], ["19", "48"], ["144", "53"], ["138", "53"], ["108", "53"], ["90", "53"], ["19", "53"], ["118", "70"], ["19", "70"], ["60", "70"], ["76", "75"], ["70", "75"], ["19", "75"], ["81", "80"], ["75", "80"], ["19", "80"], ["144", "90"], ["138", "90"], ["108", "90"], ["53", "90"], ["19", "90"], ["98", "103"], ["19", "103"], ["144", "108"], ["138", "108"], ["90", "108"], ["53", "108"], ["19", "108"], ["70", "118"], ["19", "118"], ["96", "118"], ["124", "123"], ["118", "123"], ["19", "123"], ["129", "128"], ["123", "128"], ["19", "128"], ["144", "138"], ["108", "138"], ["90", "138"], ["53", "138"], ["19", "138"], ["66", "76"], ["19", "76"], ["76", "81"], ["19", "81"], ["114", "124"], ["19", "124"], ["124", "129"], ["19", "129"], ["76", "82"], ["19", "82"], ["19", "85"], ["76", "85"], ["124", "130"], ["19", "130"], ["19", "133"], ["124", "133"], ["35", "42"], ["35", "44"], ["35", "35"], ["35", "47"], ["35", "48"], ["35", "39"], ["47", "68"], ["47", "60"], ["47", "75"], ["47", "56"], ["47", "69"], ["47", "74"], ["47", "76"], ["47", "54"], ["47", "70"], ["47", "66"], ["47", "53"], ["47", "62"], ["74", "96"], ["74", "98"], ["74", "102"], ["74", "103"], ["74", "91"], ["74", "93"], ["74", "90"], ["102", "114"], ["102", "118"], ["102", "108"], ["102", "111"], ["102", "116"], ["102", "122"], ["102", "123"], ["102", "117"], ["102", "124"], ["102", "109"], ["122", "145"], ["122", "144"], ["122", "138"], ["122", "139"], ["122", "141"], ["122", "147"], ["75", "81"], ["75", "85"], ["75", "80"], ["75", "82"], ["123", "128"], ["123", "129"], ["123", "130"], ["123", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int t: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.greaterThan,t &gt; 0)<SUB>6</SUB>>", "37": "<(LITERAL,0,t &gt; 0)<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.postDecrement,t--)<SUB>7</SUB>>", "41": "<(LOCAL,int n: int)<SUB>8</SUB>>", "43": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.notEquals,n % 2 != 0)<SUB>9</SUB>>", "49": "<(IDENTIFIER,n,n % 2)<SUB>9</SUB>>", "51": "<(LITERAL,0,n % 2 != 0)<SUB>9</SUB>>", "53": "<(println,System.out.println(&quot;NO&quot;))<SUB>10</SUB>>", "55": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>10</SUB>>", "57": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>10</SUB>>", "59": "<(LOCAL,int a: int)<SUB>13</SUB>>", "61": "<(IDENTIFIER,a,int a = n / 2)<SUB>13</SUB>>", "63": "<(IDENTIFIER,n,n / 2)<SUB>13</SUB>>", "65": "<(LOCAL,int x: int)<SUB>14</SUB>>", "67": "<(IDENTIFIER,x,int x = (int) Math.sqrt(a))<SUB>14</SUB>>", "69": "<(TYPE_REF,int,int)<SUB>14</SUB>>", "71": "<(IDENTIFIER,Math,Math.sqrt(a))<SUB>14</SUB>>", "73": "<(CONTROL_STRUCTURE,if (x * x == a || (x + 1) * (x + 1) == a),if (x * x == a || (x + 1) * (x + 1) == a))<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.equals,x * x == a)<SUB>15</SUB>>", "77": "<(IDENTIFIER,x,x * x)<SUB>15</SUB>>", "79": "<(IDENTIFIER,a,x * x == a)<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.multiplication,(x + 1) * (x + 1))<SUB>15</SUB>>", "83": "<(IDENTIFIER,x,x + 1)<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.addition,x + 1)<SUB>15</SUB>>", "87": "<(LITERAL,1,x + 1)<SUB>15</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "95": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>17</SUB>>", "97": "<(IDENTIFIER,a,a = n / 4)<SUB>19</SUB>>", "99": "<(IDENTIFIER,n,n / 4)<SUB>19</SUB>>", "101": "<(CONTROL_STRUCTURE,if (n % 4 != 0),if (n % 4 != 0))<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.modulo,n % 4)<SUB>20</SUB>>", "105": "<(LITERAL,4,n % 4)<SUB>20</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "113": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>22</SUB>>", "115": "<(IDENTIFIER,x,x = (int) Math.sqrt(a))<SUB>24</SUB>>", "117": "<(TYPE_REF,int,int)<SUB>24</SUB>>", "119": "<(IDENTIFIER,Math,Math.sqrt(a))<SUB>24</SUB>>", "121": "<(CONTROL_STRUCTURE,if (x * x == a || (x + 1) * (x + 1) == a),if (x * x == a || (x + 1) * (x + 1) == a))<SUB>25</SUB>>", "123": "<(&lt;operator&gt;.equals,x * x == a)<SUB>25</SUB>>", "125": "<(IDENTIFIER,x,x * x)<SUB>25</SUB>>", "127": "<(IDENTIFIER,a,x * x == a)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.multiplication,(x + 1) * (x + 1))<SUB>25</SUB>>", "131": "<(IDENTIFIER,x,x + 1)<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.addition,x + 1)<SUB>25</SUB>>", "135": "<(LITERAL,1,x + 1)<SUB>25</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "141": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "143": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}