{"edges": [["21", "23"], ["21", "131"], ["21", "132"], ["21", "133"], ["23", "24"], ["23", "25"], ["23", "26"], ["23", "27"], ["23", "28"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "4"], ["23", "38"], ["23", "41"], ["23", "52"], ["23", "53"], ["23", "6"], ["23", "59"], ["23", "62"], ["23", "65"], ["23", "91"], ["23", "106"], ["28", "29"], ["28", "30"], ["30", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["41", "3"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["62", "5"], ["62", "63"], ["63", "64"], ["65", "66"], ["65", "69"], ["65", "72"], ["65", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "83"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "97"], ["91", "101"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "110"], ["106", "113"], ["106", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["116", "117"], ["116", "124"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["28", "35"], ["33", "40"], ["38", "45"], ["41", "57"], ["53", "61"], ["59", "63"], ["62", "66"], ["30", "28"], ["35", "33"], ["40", "38"], ["55", "53"], ["61", "59"], ["63", "62"], ["66", "69"], ["69", "76"], ["69", "93"], ["72", "69"], ["92", "98"], ["92", "103"], ["107", "110"], ["110", "133"], ["110", "119"], ["113", "110"], ["43", "50"], ["46", "41"], ["57", "55"], ["75", "87"], ["83", "72"], ["93", "92"], ["98", "107"], ["45", "43"], ["48", "46"], ["76", "81"], ["79", "75"], ["84", "83"], ["103", "107"], ["117", "128"], ["117", "113"], ["50", "48"], ["81", "79"], ["86", "84"], ["118", "117"], ["125", "130"], ["130", "133"], ["87", "86"], ["119", "118"], ["126", "125"], ["128", "126"], ["21", "30"], ["130", "133"], ["22", "133"], ["28", "133"], ["28", "133"], ["28", "133"], ["33", "133"], ["33", "133"], ["33", "133"], ["38", "133"], ["43", "133"], ["46", "133"], ["46", "133"], ["46", "133"], ["41", "133"], ["55", "133"], ["53", "133"], ["53", "133"], ["59", "133"], ["62", "133"], ["63", "133"], ["62", "133"], ["62", "133"], ["92", "133"], ["92", "133"], ["103", "133"], ["98", "133"], ["107", "133"], ["110", "133"], ["110", "133"], ["118", "133"], ["117", "133"], ["117", "133"], ["117", "133"], ["113", "133"], ["125", "133"], ["125", "133"], ["125", "133"], ["79", "133"], ["81", "133"], ["79", "133"], ["75", "133"], ["75", "133"], ["83", "133"], ["83", "133"], ["72", "133"], ["21", "22"], ["30", "28"], ["35", "33"], ["21", "38"], ["55", "53"], ["55", "53"], ["21", "59"], ["38", "41"], ["21", "41"], ["43", "41"], ["46", "41"], ["59", "62"], ["21", "62"], ["63", "62"], ["21", "66"], ["21", "107"], ["21", "30"], ["21", "35"], ["21", "43"], ["21", "51"], ["21", "55"], ["57", "55"], ["57", "63"], ["21", "63"], ["66", "69"], ["72", "69"], ["21", "69"], ["53", "69"], ["69", "72"], ["21", "72"], ["79", "75"], ["79", "75"], ["28", "92"], ["21", "92"], ["21", "98"], ["107", "110"], ["113", "110"], ["21", "110"], ["69", "110"], ["110", "113"], ["21", "113"], ["43", "46"], ["21", "46"], ["41", "57"], ["21", "57"], ["28", "83"], ["21", "103"], ["55", "79"], ["21", "79"], ["81", "79"], ["118", "117"], ["118", "117"], ["103", "117"], ["98", "117"], ["21", "117"], ["21", "130"], ["62", "81"], ["21", "81"], ["33", "86"], ["75", "86"], ["21", "86"], ["33", "118"], ["86", "118"], ["21", "118"], ["110", "125"], ["21", "125"], ["69", "83"], ["69", "75"], ["69", "81"], ["69", "84"], ["69", "72"], ["69", "69"], ["69", "76"], ["69", "87"], ["69", "79"], ["69", "86"], ["92", "98"], ["92", "103"], ["110", "118"], ["110", "119"], ["110", "117"], ["117", "113"], ["117", "128"], ["117", "130"], ["117", "110"], ["117", "125"], ["117", "126"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(LOCAL,int j: int)<SUB>2</SUB>>", "27": "<(LOCAL,int[] counter: int[])<SUB>3</SUB>>", "29": "<(IDENTIFIER,counter,int[] counter = new int[2])<SUB>3</SUB>>", "31": "<(LITERAL,2,new int[2])<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int[] a = new int[200])<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.alloc,new int[200])>", "37": "<(LOCAL,int needed: int)<SUB>5</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>7</SUB>>", "40": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>7</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>7</SUB>>", "47": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "49": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>7</SUB>>", "51": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.assignment,int N = parseInt(br.readLine()))<SUB>9</SUB>>", "55": "<(parseInt,parseInt(br.readLine()))<SUB>9</SUB>>", "57": "<(readLine,readLine())<SUB>9</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>10</SUB>>", "60": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "62": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "63": "<(readLine,readLine())<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt;= N); i++),for (i = 1; Some(i &lt;= N); i++))<SUB>12</SUB>>", "67": "<(IDENTIFIER,i,i = 1)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>12</SUB>>", "71": "<(IDENTIFIER,N,i &lt;= N)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,a[i] = parseInt(st.nextToken()))<SUB>13</SUB>>", "77": "<(IDENTIFIER,a,a[i] = parseInt(st.nextToken()))<SUB>13</SUB>>", "79": "<(parseInt,parseInt(st.nextToken()))<SUB>13</SUB>>", "81": "<(nextToken,nextToken())<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,counter[a[i] % 2]++)<SUB>14</SUB>>", "85": "<(IDENTIFIER,counter,counter[a[i] % 2]++)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,a[i] % 2)<SUB>14</SUB>>", "91": "<(CONTROL_STRUCTURE,if (counter[0] == 1),if (counter[0] == 1))<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,counter[0])<SUB>17</SUB>>", "95": "<(LITERAL,0,counter[0] == 1)<SUB>17</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "99": "<(IDENTIFIER,needed,needed = 0)<SUB>18</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignment,needed = 1)<SUB>20</SUB>>", "105": "<(LITERAL,1,needed = 1)<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.assignment,i = 1)<SUB>23</SUB>>", "109": "<(LITERAL,1,i = 1)<SUB>23</SUB>>", "111": "<(IDENTIFIER,i,i &lt;= N)<SUB>23</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.equals,a[i] % 2 == needed)<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>24</SUB>>", "121": "<(IDENTIFIER,i,a[i] % 2)<SUB>24</SUB>>", "123": "<(IDENTIFIER,needed,a[i] % 2 == needed)<SUB>24</SUB>>", "125": "<(println,System.out.println(i))<SUB>25</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(i))<SUB>25</SUB>>", "129": "<(IDENTIFIER,i,System.out.println(i))<SUB>25</SUB>>", "131": "<(MODIFIER,PUBLIC)>", "133": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}