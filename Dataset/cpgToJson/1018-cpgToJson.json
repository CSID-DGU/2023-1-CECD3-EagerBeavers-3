{"edges": [["19", "21"], ["19", "193"], ["19", "194"], ["19", "195"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "36"], ["21", "68"], ["21", "69"], ["21", "73"], ["21", "74"], ["21", "77"], ["21", "99"], ["21", "112"], ["21", "113"], ["21", "120"], ["21", "121"], ["21", "124"], ["21", "125"], ["21", "130"], ["21", "131"], ["21", "134"], ["21", "152"], ["21", "153"], ["21", "162"], ["21", "163"], ["21", "172"], ["21", "173"], ["21", "178"], ["21", "179"], ["21", "184"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "56"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "67"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["61", "64"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["22", "25"], ["25", "29"], ["27", "32"], ["31", "38"], ["69", "74"], ["74", "79"], ["113", "121"], ["121", "127"], ["125", "131"], ["131", "136"], ["153", "168"], ["163", "175"], ["173", "181"], ["179", "187"], ["184", "195"], ["24", "22"], ["29", "27"], ["32", "31"], ["38", "41"], ["41", "47"], ["41", "71"], ["44", "41"], ["46", "44"], ["71", "69"], ["79", "82"], ["82", "91"], ["82", "100"], ["85", "82"], ["100", "107"], ["100", "117"], ["115", "113"], ["127", "125"], ["136", "139"], ["139", "148"], ["139", "158"], ["142", "139"], ["155", "153"], ["165", "163"], ["175", "173"], ["181", "179"], ["185", "191"], ["188", "184"], ["47", "53"], ["50", "46"], ["104", "109"], ["109", "117"], ["117", "115"], ["145", "142"], ["156", "155"], ["166", "165"], ["187", "185"], ["190", "188"], ["51", "60"], ["56", "50"], ["89", "95"], ["89", "85"], ["105", "104"], ["147", "145"], ["158", "156"], ["168", "166"], ["191", "190"], ["53", "51"], ["57", "56"], ["91", "89"], ["95", "100"], ["107", "105"], ["148", "147"], ["59", "57"], ["60", "64"], ["61", "59"], ["64", "61"], ["19", "24"], ["20", "195"], ["22", "195"], ["25", "195"], ["27", "195"], ["27", "195"], ["27", "195"], ["31", "195"], ["31", "195"], ["71", "195"], ["69", "195"], ["69", "195"], ["74", "195"], ["79", "195"], ["82", "195"], ["89", "195"], ["89", "195"], ["85", "195"], ["95", "195"], ["100", "195"], ["104", "195"], ["109", "195"], ["109", "195"], ["113", "195"], ["113", "195"], ["121", "195"], ["121", "195"], ["127", "195"], ["127", "195"], ["125", "195"], ["125", "195"], ["131", "195"], ["136", "195"], ["139", "195"], ["139", "195"], ["153", "195"], ["153", "195"], ["166", "195"], ["166", "195"], ["165", "195"], ["165", "195"], ["163", "195"], ["163", "195"], ["175", "195"], ["175", "195"], ["173", "195"], ["173", "195"], ["181", "195"], ["179", "195"], ["179", "195"], ["184", "195"], ["188", "195"], ["190", "195"], ["188", "195"], ["184", "195"], ["184", "195"], ["147", "195"], ["145", "195"], ["145", "195"], ["142", "195"], ["46", "195"], ["50", "195"], ["61", "195"], ["59", "195"], ["57", "195"], ["56", "195"], ["50", "195"], ["46", "195"], ["46", "195"], ["44", "195"], ["61", "195"], ["181", "195"], ["19", "20"], ["19", "22"], ["29", "27"], ["19", "31"], ["71", "69"], ["19", "74"], ["27", "113"], ["69", "121"], ["89", "121"], ["104", "121"], ["19", "121"], ["127", "125"], ["127", "125"], ["19", "131"], ["155", "153"], ["155", "153"], ["165", "163"], ["165", "163"], ["131", "173"], ["145", "173"], ["19", "173"], ["153", "173"], ["181", "179"], ["181", "179"], ["22", "25"], ["19", "25"], ["19", "38"], ["27", "46"], ["56", "46"], ["56", "46"], ["19", "79"], ["19", "136"], ["109", "184"], ["188", "184"], ["188", "184"], ["19", "29"], ["38", "41"], ["44", "41"], ["19", "41"], ["56", "44"], ["19", "44"], ["25", "71"], ["19", "71"], ["79", "82"], ["85", "82"], ["19", "82"], ["82", "85"], ["19", "85"], ["74", "100"], ["95", "100"], ["19", "100"], ["121", "127"], ["19", "127"], ["113", "127"], ["136", "139"], ["142", "139"], ["19", "139"], ["117", "139"], ["139", "142"], ["19", "142"], ["148", "145"], ["148", "145"], ["19", "145"], ["125", "155"], ["19", "155"], ["158", "155"], ["158", "155"], ["19", "165"], ["125", "165"], ["168", "165"], ["168", "165"], ["131", "175"], ["145", "175"], ["19", "175"], ["153", "175"], ["19", "181"], ["173", "181"], ["179", "188"], ["19", "188"], ["163", "188"], ["27", "50"], ["56", "50"], ["56", "50"], ["69", "104"], ["89", "104"], ["19", "104"], ["104", "109"], ["19", "109"], ["100", "117"], ["19", "117"], ["125", "156"], ["19", "156"], ["158", "156"], ["158", "156"], ["19", "166"], ["125", "166"], ["168", "166"], ["168", "166"], ["19", "190"], ["163", "190"], ["57", "56"], ["57", "56"], ["64", "56"], ["19", "56"], ["69", "89"], ["19", "89"], ["27", "89"], ["46", "89"], ["82", "95"], ["19", "95"], ["148", "147"], ["148", "147"], ["19", "147"], ["139", "158"], ["19", "158"], ["155", "168"], ["19", "168"], ["41", "53"], ["19", "53"], ["19", "57"], ["61", "57"], ["61", "57"], ["61", "57"], ["131", "148"], ["145", "148"], ["19", "148"], ["19", "59"], ["61", "59"], ["61", "59"], ["61", "59"], ["19", "61"], ["64", "61"], ["64", "61"], ["53", "64"], ["19", "64"], ["41", "47"], ["41", "60"], ["41", "64"], ["41", "51"], ["41", "57"], ["41", "46"], ["41", "56"], ["41", "50"], ["41", "59"], ["41", "44"], ["41", "61"], ["41", "53"], ["41", "41"], ["82", "89"], ["82", "91"], ["100", "107"], ["100", "104"], ["100", "105"], ["100", "109"], ["139", "145"], ["139", "142"], ["139", "148"], ["139", "147"], ["139", "139"], ["89", "85"], ["89", "95"], ["89", "82"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long[] a = new long[16])<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.alloc,new long[16])>", "31": "<(&lt;operator&gt;.assignment,a[0] = 0)<SUB>4</SUB>>", "33": "<(IDENTIFIER,a,a[0] = 0)<SUB>4</SUB>>", "35": "<(LITERAL,0,a[0] = 0)<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 1)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; 16)<SUB>5</SUB>>", "43": "<(LITERAL,16,i &lt; 16)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,++i)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,a[i] = a[i - 1] + ((9 * (long) Math.pow(10, i - 1)) * i))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>6</SUB>>", "55": "<(LITERAL,1,i - 1)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.multiplication,9 * (long) Math.pow(10, i - 1))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.cast,(long) Math.pow(10, i - 1))<SUB>6</SUB>>", "61": "<(pow,Math.pow(10, i - 1))<SUB>6</SUB>>", "63": "<(LITERAL,10,Math.pow(10, i - 1))<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,i - 1)<SUB>6</SUB>>", "67": "<(IDENTIFIER,i,(9 * (long) Math.pow(10, i - 1)) * i)<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.assignment,long N = nextLong())<SUB>7</SUB>>", "71": "<(nextLong,nextLong())<SUB>7</SUB>>", "73": "<(LOCAL,int pos: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,pos,int pos = 0)<SUB>8</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 16); ++i),for (int i = 0; Some(i &lt; 16); ++i))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,i &lt; 16)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.lessEqualsThan,N &lt;= a[i])<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,N &lt;= a[i])<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,pos = i)<SUB>11</SUB>>", "97": "<(IDENTIFIER,i,pos = i)<SUB>11</SUB>>", "99": "<(CONTROL_STRUCTURE,if (pos == 1),if (pos == 1))<SUB>15</SUB>>", "101": "<(IDENTIFIER,pos,pos == 1)<SUB>15</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "109": "<(exit,System.exit(0))<SUB>17</SUB>>", "111": "<(LITERAL,0,System.exit(0))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,long prev = a[pos - 1])<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,a[pos - 1])<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.subtraction,pos - 1)<SUB>19</SUB>>", "119": "<(LITERAL,1,pos - 1)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,long curr = N)<SUB>20</SUB>>", "123": "<(IDENTIFIER,N,long curr = N)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.assignment,long rem = curr - prev)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.subtraction,curr - prev)<SUB>21</SUB>>", "129": "<(IDENTIFIER,prev,curr - prev)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>22</SUB>>", "133": "<(LITERAL,0,long ans = 0)<SUB>22</SUB>>", "135": "<(LOCAL,int i: int)<SUB>23</SUB>>", "137": "<(IDENTIFIER,i,int i = 1)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; pos)<SUB>23</SUB>>", "141": "<(IDENTIFIER,pos,i &lt; pos)<SUB>23</SUB>>", "143": "<(IDENTIFIER,i,++i)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.assignment,ans = ans * 10 + 9)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.addition,ans * 10 + 9)<SUB>24</SUB>>", "149": "<(IDENTIFIER,ans,ans * 10)<SUB>24</SUB>>", "151": "<(LITERAL,9,ans * 10 + 9)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.assignment,long g = (rem + (pos - 1)) / pos)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.division,(rem + (pos - 1)) / pos)<SUB>26</SUB>>", "157": "<(IDENTIFIER,rem,rem + (pos - 1))<SUB>26</SUB>>", "159": "<(IDENTIFIER,pos,pos - 1)<SUB>26</SUB>>", "161": "<(IDENTIFIER,pos,(rem + (pos - 1)) / pos)<SUB>26</SUB>>", "163": "<(&lt;operator&gt;.assignment,long take = (rem + (pos - 1)) % pos)<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.modulo,(rem + (pos - 1)) % pos)<SUB>27</SUB>>", "167": "<(IDENTIFIER,rem,rem + (pos - 1))<SUB>27</SUB>>", "169": "<(IDENTIFIER,pos,pos - 1)<SUB>27</SUB>>", "171": "<(IDENTIFIER,pos,(rem + (pos - 1)) % pos)<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.assignment,long number = ans + g)<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.addition,ans + g)<SUB>28</SUB>>", "177": "<(IDENTIFIER,g,ans + g)<SUB>28</SUB>>", "179": "<(&lt;operator&gt;.assignment,String str = Long.toString(number))<SUB>29</SUB>>", "181": "<(toString,Long.toString(number))<SUB>29</SUB>>", "183": "<(IDENTIFIER,number,Long.toString(number))<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "187": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "189": "<(IDENTIFIER,str,str.charAt((int) take))<SUB>30</SUB>>", "191": "<(TYPE_REF,int,int)<SUB>30</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}