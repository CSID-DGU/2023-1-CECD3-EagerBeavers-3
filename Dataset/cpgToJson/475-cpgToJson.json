{"edges": [["21", "22"], ["21", "23"], ["21", "146"], ["21", "147"], ["21", "148"], ["23", "4"], ["23", "6"], ["23", "24"], ["23", "27"], ["23", "28"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "71"], ["23", "72"], ["23", "75"], ["23", "109"], ["23", "110"], ["23", "115"], ["23", "141"], ["23", "144"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["37", "42"], ["37", "45"], ["37", "47"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["47", "48"], ["47", "49"], ["47", "53"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "58"], ["53", "62"], ["54", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "61"], ["62", "63"], ["63", "64"], ["63", "65"], ["63", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "91"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "96"], ["91", "100"], ["92", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "99"], ["100", "101"], ["101", "102"], ["101", "103"], ["101", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["110", "111"], ["110", "112"], ["112", "113"], ["113", "114"], ["115", "116"], ["115", "118"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "124"], ["120", "121"], ["120", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["126", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["133", "140"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["144", "145"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "35"], ["33", "39"], ["72", "77"], ["110", "116"], ["141", "144"], ["144", "148"], ["26", "24"], ["30", "28"], ["35", "33"], ["39", "42"], ["42", "51"], ["42", "72"], ["45", "42"], ["77", "80"], ["80", "89"], ["80", "113"], ["83", "80"], ["112", "110"], ["116", "122"], ["116", "141"], ["49", "55"], ["87", "93"], ["113", "112"], ["120", "130"], ["124", "116"], ["51", "49"], ["54", "58"], ["54", "67"], ["58", "45"], ["89", "87"], ["92", "96"], ["92", "105"], ["96", "83"], ["122", "120"], ["126", "124"], ["55", "54"], ["63", "45"], ["93", "92"], ["101", "83"], ["129", "126"], ["66", "63"], ["104", "101"], ["130", "134"], ["133", "129"], ["67", "66"], ["105", "104"], ["134", "137"], ["134", "133"], ["137", "133"], ["21", "26"], ["22", "148"], ["24", "148"], ["27", "148"], ["28", "148"], ["31", "148"], ["33", "148"], ["33", "148"], ["72", "148"], ["77", "148"], ["80", "148"], ["80", "148"], ["80", "148"], ["113", "148"], ["112", "148"], ["110", "148"], ["116", "148"], ["116", "148"], ["141", "148"], ["141", "148"], ["144", "148"], ["144", "148"], ["130", "148"], ["129", "148"], ["134", "148"], ["134", "148"], ["133", "148"], ["137", "148"], ["137", "148"], ["129", "148"], ["126", "148"], ["124", "148"], ["124", "148"], ["87", "148"], ["87", "148"], ["92", "148"], ["92", "148"], ["101", "148"], ["104", "148"], ["101", "148"], ["101", "148"], ["96", "148"], ["96", "148"], ["83", "148"], ["49", "148"], ["49", "148"], ["54", "148"], ["54", "148"], ["63", "148"], ["63", "148"], ["66", "148"], ["63", "148"], ["63", "148"], ["58", "148"], ["58", "148"], ["58", "148"], ["45", "148"], ["126", "148"], ["21", "22"], ["21", "24"], ["21", "28"], ["35", "33"], ["21", "72"], ["112", "110"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "39"], ["21", "77"], ["35", "141"], ["89", "141"], ["51", "141"], ["21", "141"], ["72", "141"], ["124", "141"], ["141", "144"], ["21", "144"], ["21", "35"], ["39", "42"], ["45", "42"], ["21", "42"], ["33", "42"], ["42", "45"], ["21", "45"], ["51", "49"], ["77", "80"], ["83", "80"], ["21", "80"], ["42", "80"], ["80", "83"], ["21", "83"], ["89", "87"], ["113", "112"], ["110", "116"], ["122", "116"], ["21", "116"], ["122", "120"], ["126", "124"], ["126", "124"], ["126", "124"], ["31", "113"], ["101", "113"], ["96", "113"], ["21", "113"], ["72", "124"], ["21", "124"], ["35", "51"], ["21", "51"], ["55", "54"], ["55", "54"], ["55", "58"], ["21", "58"], ["55", "58"], ["35", "89"], ["51", "89"], ["21", "89"], ["93", "92"], ["93", "92"], ["93", "96"], ["21", "96"], ["93", "96"], ["116", "122"], ["21", "122"], ["21", "126"], ["129", "126"], ["129", "126"], ["27", "55"], ["63", "55"], ["58", "55"], ["21", "55"], ["49", "55"], ["67", "63"], ["21", "63"], ["67", "63"], ["31", "93"], ["101", "93"], ["96", "93"], ["21", "93"], ["87", "93"], ["105", "101"], ["21", "101"], ["105", "101"], ["130", "129"], ["130", "129"], ["137", "129"], ["137", "129"], ["21", "129"], ["67", "66"], ["67", "66"], ["21", "66"], ["105", "104"], ["105", "104"], ["21", "104"], ["113", "130"], ["21", "130"], ["120", "130"], ["129", "133"], ["137", "133"], ["137", "133"], ["21", "133"], ["55", "67"], ["21", "67"], ["55", "67"], ["93", "105"], ["21", "105"], ["93", "105"], ["27", "134"], ["137", "134"], ["63", "134"], ["58", "134"], ["21", "134"], ["130", "134"], ["134", "137"], ["21", "137"], ["134", "137"], ["42", "49"], ["42", "42"], ["42", "51"], ["42", "45"], ["42", "54"], ["42", "55"], ["80", "89"], ["80", "92"], ["80", "87"], ["80", "93"], ["80", "80"], ["80", "83"], ["116", "120"], ["116", "116"], ["116", "122"], ["116", "129"], ["116", "134"], ["116", "126"], ["116", "130"], ["116", "124"], ["116", "133"], ["54", "66"], ["54", "67"], ["54", "58"], ["54", "63"], ["92", "96"], ["92", "104"], ["92", "101"], ["92", "105"], ["134", "137"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "6": "<(LOCAL,HashMap&lt;String, Integer&gt; map2: ANY)<SUB>2</SUB>>", "25": "<(IDENTIFIER,map1,ANY map1 = new HashMap&lt;&gt;())<SUB>2</SUB>>", "27": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY map2 = new HashMap&lt;&gt;())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>2</SUB>>", "5": "<(IDENTIFIER,map2,new HashMap&lt;&gt;())<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,int N = readInt())<SUB>2</SUB>>", "35": "<(readInt,readInt())<SUB>2</SUB>>", "37": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= N); i++),for (int i = 1; Some(i &lt;= N); i++))<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>3</SUB>>", "41": "<(LITERAL,1,int i = 1)<SUB>3</SUB>>", "43": "<(IDENTIFIER,i,i &lt;= N)<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.postIncrement,i++)<SUB>3</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.assignment,String s = read())<SUB>4</SUB>>", "51": "<(read,read())<SUB>4</SUB>>", "53": "<(CONTROL_STRUCTURE,if (!map1.containsKey(s)),if (!map1.containsKey(s)))<SUB>4</SUB>>", "55": "<(containsKey,containsKey(s))<SUB>4</SUB>>", "57": "<(IDENTIFIER,s,containsKey(s))<SUB>4</SUB>>", "59": "<(IDENTIFIER,map1,put(s, 1))<SUB>4</SUB>>", "61": "<(LITERAL,1,put(s, 1))<SUB>4</SUB>>", "63": "<(put,put(s, map1.get(s) + 1))<SUB>4</SUB>>", "65": "<(IDENTIFIER,s,put(s, map1.get(s) + 1))<SUB>4</SUB>>", "67": "<(get,get(s))<SUB>4</SUB>>", "69": "<(IDENTIFIER,s,get(s))<SUB>4</SUB>>", "71": "<(LOCAL,int tot: int)<SUB>6</SUB>>", "73": "<(IDENTIFIER,tot,int tot = 0)<SUB>6</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= N); i++),for (int i = 1; Some(i &lt;= N); i++))<SUB>6</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "79": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "81": "<(IDENTIFIER,i,i &lt;= N)<SUB>6</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "87": "<(&lt;operator&gt;.assignment,String s = read())<SUB>7</SUB>>", "89": "<(read,read())<SUB>7</SUB>>", "91": "<(CONTROL_STRUCTURE,if (!map2.containsKey(s)),if (!map2.containsKey(s)))<SUB>7</SUB>>", "93": "<(containsKey,containsKey(s))<SUB>7</SUB>>", "95": "<(IDENTIFIER,s,containsKey(s))<SUB>7</SUB>>", "97": "<(IDENTIFIER,map2,put(s, 1))<SUB>7</SUB>>", "99": "<(LITERAL,1,put(s, 1))<SUB>7</SUB>>", "101": "<(put,put(s, map2.get(s) + 1))<SUB>7</SUB>>", "103": "<(IDENTIFIER,s,put(s, map2.get(s) + 1))<SUB>7</SUB>>", "105": "<(get,get(s))<SUB>7</SUB>>", "107": "<(IDENTIFIER,s,get(s))<SUB>7</SUB>>", "109": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>9</SUB>>", "111": "<(IDENTIFIER,$iterLocal0,)<SUB>9</SUB>>", "113": "<(keySet,keySet())<SUB>9</SUB>>", "115": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>9</SUB>>", "117": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "119": "<(LOCAL,s: java.lang.String)<SUB>9</SUB>>", "121": "<(IDENTIFIER,s,&lt;empty&gt;)>", "123": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "125": "<(IDENTIFIER,tot,tot += max(0, map2.get(s) - (map1.containsKey(s) ? map1.get(s) : 0)))<SUB>10</SUB>>", "127": "<(IDENTIFIER,Math,max(0, map2.get(s) - (map1.containsKey(s) ? map1.get(s) : 0)))<SUB>10</SUB>>", "129": "<(&lt;operator&gt;.subtraction,map2.get(s) - (map1.containsKey(s) ? map1.get(s) : 0))<SUB>10</SUB>>", "131": "<(IDENTIFIER,map2,get(s))<SUB>10</SUB>>", "133": "<(&lt;operator&gt;.conditional,map1.containsKey(s) ? map1.get(s) : 0)<SUB>10</SUB>>", "135": "<(IDENTIFIER,map1,containsKey(s))<SUB>10</SUB>>", "137": "<(get,get(s))<SUB>10</SUB>>", "139": "<(IDENTIFIER,s,get(s))<SUB>10</SUB>>", "141": "<(println,println(tot))<SUB>12</SUB>>", "143": "<(IDENTIFIER,tot,println(tot))<SUB>12</SUB>>", "145": "<(IDENTIFIER,this,exit())<SUB>12</SUB>>", "147": "<(MODIFIER,STATIC)>"}}