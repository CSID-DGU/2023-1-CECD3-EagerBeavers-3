{"edges": [["23", "25"], ["23", "75"], ["23", "76"], ["23", "77"], ["25", "26"], ["25", "27"], ["25", "32"], ["25", "33"], ["25", "4"], ["25", "38"], ["25", "41"], ["25", "6"], ["25", "43"], ["25", "46"], ["25", "48"], ["25", "49"], ["25", "53"], ["25", "73"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["41", "3"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "8"], ["63", "64"], ["63", "67"], ["63", "68"], ["64", "65"], ["64", "66"], ["67", "7"], ["68", "69"], ["68", "70"], ["68", "71"], ["68", "72"], ["73", "74"], ["27", "37"], ["33", "40"], ["38", "41"], ["41", "45"], ["43", "46"], ["46", "51"], ["49", "55"], ["73", "77"], ["29", "27"], ["35", "33"], ["40", "38"], ["45", "43"], ["51", "49"], ["55", "58"], ["58", "66"], ["58", "73"], ["61", "58"], ["31", "29"], ["37", "35"], ["64", "67"], ["67", "68"], ["68", "61"], ["66", "64"], ["23", "31"], ["24", "77"], ["27", "77"], ["27", "77"], ["33", "77"], ["33", "77"], ["38", "77"], ["41", "77"], ["41", "77"], ["43", "77"], ["46", "77"], ["46", "77"], ["51", "77"], ["49", "77"], ["49", "77"], ["55", "77"], ["58", "77"], ["58", "77"], ["58", "77"], ["73", "77"], ["73", "77"], ["64", "77"], ["67", "77"], ["68", "77"], ["68", "77"], ["68", "77"], ["61", "77"], ["23", "24"], ["23", "38"], ["23", "43"], ["51", "49"], ["38", "41"], ["23", "41"], ["27", "41"], ["43", "46"], ["23", "46"], ["33", "46"], ["23", "55"], ["46", "73"], ["68", "73"], ["23", "73"], ["41", "51"], ["23", "51"], ["55", "58"], ["61", "58"], ["23", "58"], ["49", "58"], ["68", "61"], ["23", "61"], ["23", "64"], ["64", "67"], ["23", "67"], ["67", "68"], ["23", "68"], ["58", "68"], ["51", "68"], ["46", "68"], ["58", "58"], ["58", "68"], ["58", "61"], ["58", "64"], ["58", "66"], ["58", "67"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY inputStream = System.in)<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "31": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY outputStream = System.out)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(inputStream))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new InputReader(inputStream))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(inputStream))<SUB>4</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>5</SUB>>", "44": "<(IDENTIFIER,out,ANY out = new PrintWriter(outputStream))<SUB>5</SUB>>", "46": "<(&lt;init&gt;,new PrintWriter(outputStream))<SUB>5</SUB>>", "47": "<(IDENTIFIER,outputStream,new PrintWriter(outputStream))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int T = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int cT = 1; Some(cT &lt;= T); cT++),for (int cT = 1; Some(cT &lt;= T); cT++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int cT = 1)<SUB>7</SUB>>", "57": "<(LITERAL,1,int cT = 1)<SUB>7</SUB>>", "59": "<(IDENTIFIER,cT,cT &lt;= T)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,cT++)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "64": "<(&lt;operator&gt;.assignment,ANY solver = new Task())<SUB>8</SUB>>", "66": "<(&lt;operator&gt;.alloc,new Task())<SUB>8</SUB>>", "7": "<(IDENTIFIER,solver,new Task())<SUB>8</SUB>>", "69": "<(IDENTIFIER,solver,solve(cT, in, out))<SUB>9</SUB>>", "71": "<(IDENTIFIER,in,solve(cT, in, out))<SUB>9</SUB>>", "73": "<(close,close())<SUB>11</SUB>>", "75": "<(MODIFIER,PUBLIC)>", "77": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}