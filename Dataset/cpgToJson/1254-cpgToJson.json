{"edges": [["19", "20"], ["19", "21"], ["19", "102"], ["19", "103"], ["19", "104"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "59"], ["21", "60"], ["21", "66"], ["21", "67"], ["21", "74"], ["21", "75"], ["21", "92"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["62", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "91"], ["78", "79"], ["78", "90"], ["79", "80"], ["79", "87"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["96", "101"], ["97", "98"], ["97", "99"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "56"], ["52", "62"], ["60", "70"], ["67", "83"], ["75", "95"], ["92", "104"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["62", "60"], ["69", "67"], ["77", "75"], ["93", "97"], ["96", "92"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["56", "54"], ["70", "69"], ["78", "77"], ["95", "93"], ["97", "96"], ["29", "27"], ["32", "30"], ["79", "78"], ["34", "32"], ["80", "87"], ["87", "79"], ["81", "80"], ["83", "81"], ["19", "24"], ["20", "104"], ["22", "104"], ["27", "104"], ["30", "104"], ["30", "104"], ["30", "104"], ["25", "104"], ["37", "104"], ["40", "104"], ["39", "104"], ["37", "104"], ["37", "104"], ["46", "104"], ["44", "104"], ["44", "104"], ["54", "104"], ["54", "104"], ["52", "104"], ["52", "104"], ["62", "104"], ["60", "104"], ["60", "104"], ["69", "104"], ["67", "104"], ["67", "104"], ["81", "104"], ["81", "104"], ["80", "104"], ["79", "104"], ["87", "104"], ["79", "104"], ["78", "104"], ["77", "104"], ["77", "104"], ["75", "104"], ["75", "104"], ["92", "104"], ["96", "104"], ["96", "104"], ["96", "104"], ["92", "104"], ["92", "104"], ["62", "104"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["54", "52"], ["62", "60"], ["62", "60"], ["62", "60"], ["69", "67"], ["69", "67"], ["77", "75"], ["77", "75"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["97", "92"], ["19", "92"], ["75", "92"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["46", "54"], ["19", "54"], ["37", "54"], ["19", "62"], ["52", "62"], ["70", "69"], ["70", "69"], ["19", "69"], ["79", "77"], ["79", "77"], ["80", "77"], ["19", "77"], ["97", "96"], ["19", "96"], ["75", "96"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["60", "70"], ["19", "70"], ["79", "78"], ["79", "78"], ["80", "78"], ["19", "78"], ["83", "97"], ["19", "97"], ["80", "79"], ["80", "79"], ["87", "79"], ["87", "79"], ["81", "80"], ["81", "80"], ["83", "80"], ["19", "80"], ["70", "87"], ["19", "87"], ["67", "81"], ["19", "81"], ["83", "81"], ["83", "81"], ["44", "83"], ["19", "83"], ["69", "83"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] strs = split(&quot; &quot;))<SUB>3</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,reader,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,long x: long)<SUB>4</SUB>>", "45": "<(IDENTIFIER,x,long x = Long.parseLong(strs[0]))<SUB>4</SUB>>", "47": "<(IDENTIFIER,Long,Long.parseLong(strs[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,strs,Long.parseLong(strs[0]))<SUB>4</SUB>>", "51": "<(LOCAL,long k: long)<SUB>5</SUB>>", "53": "<(IDENTIFIER,k,long k = Long.parseLong(strs[1]))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Long,Long.parseLong(strs[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,strs,Long.parseLong(strs[1]))<SUB>5</SUB>>", "59": "<(LOCAL,long twoPK: long)<SUB>6</SUB>>", "61": "<(IDENTIFIER,twoPK,long twoPK = modPow(2, k))<SUB>6</SUB>>", "63": "<(IDENTIFIER,this,modPow(2, k))<SUB>6</SUB>>", "65": "<(IDENTIFIER,k,modPow(2, k))<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,long twoPK_1 = (twoPK * 2) % mod)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.modulo,(twoPK * 2) % mod)<SUB>7</SUB>>", "71": "<(IDENTIFIER,twoPK,twoPK * 2)<SUB>7</SUB>>", "73": "<(IDENTIFIER,mod,(twoPK * 2) % mod)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.assignment,long res = ((twoPK_1 * (x % mod)) % mod - (twoPK - 1) + mod) % mod)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.modulo,((twoPK_1 * (x % mod)) % mod - (twoPK - 1) + mod) % mod)<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.subtraction,(twoPK_1 * (x % mod)) % mod - (twoPK - 1))<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.multiplication,twoPK_1 * (x % mod))<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.modulo,x % mod)<SUB>8</SUB>>", "85": "<(IDENTIFIER,mod,x % mod)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.subtraction,twoPK - 1)<SUB>8</SUB>>", "89": "<(LITERAL,1,twoPK - 1)<SUB>8</SUB>>", "91": "<(IDENTIFIER,mod,((twoPK_1 * (x % mod)) % mod - (twoPK - 1) + mod) % mod)<SUB>8</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "95": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.equals,x == 0)<SUB>9</SUB>>", "99": "<(LITERAL,0,x == 0)<SUB>9</SUB>>", "101": "<(IDENTIFIER,res,x == 0 ? x : res)<SUB>9</SUB>>", "103": "<(MODIFIER,STATIC)>"}}