{"edges": [["17", "18"], ["17", "19"], ["17", "304"], ["17", "305"], ["17", "306"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "32"], ["19", "36"], ["19", "37"], ["19", "44"], ["19", "45"], ["19", "51"], ["19", "71"], ["19", "72"], ["19", "76"], ["19", "140"], ["19", "141"], ["19", "146"], ["19", "299"], ["19", "302"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "93"], ["86", "100"], ["86", "120"], ["87", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "158"], ["156", "159"], ["156", "162"], ["156", "169"], ["156", "170"], ["156", "173"], ["156", "284"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "186"], ["177", "187"], ["177", "190"], ["177", "229"], ["177", "268"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["206", "207"], ["206", "224"], ["207", "208"], ["207", "223"], ["208", "209"], ["208", "216"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "237"], ["229", "239"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["239", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["245", "246"], ["245", "263"], ["246", "247"], ["246", "262"], ["247", "248"], ["247", "255"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["268", "277"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["277", "278"], ["278", "279"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["286", "287"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "291"], ["289", "292"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["299", "300"], ["299", "301"], ["302", "303"], ["21", "29"], ["26", "34"], ["32", "41"], ["37", "48"], ["45", "53"], ["72", "78"], ["141", "148"], ["299", "302"], ["302", "306"], ["23", "21"], ["28", "26"], ["34", "32"], ["39", "37"], ["47", "45"], ["53", "56"], ["56", "63"], ["56", "74"], ["59", "56"], ["74", "72"], ["78", "81"], ["81", "90"], ["81", "145"], ["84", "81"], ["143", "141"], ["148", "151"], ["151", "159"], ["151", "299"], ["154", "151"], ["29", "28"], ["41", "39"], ["48", "47"], ["62", "59"], ["87", "96"], ["93", "102"], ["145", "143"], ["159", "165"], ["162", "170"], ["170", "174"], ["63", "68"], ["66", "62"], ["88", "87"], ["94", "93"], ["102", "105"], ["105", "113"], ["105", "122"], ["108", "105"], ["122", "125"], ["125", "133"], ["125", "84"], ["128", "125"], ["164", "162"], ["174", "285"], ["174", "182"], ["285", "294"], ["285", "154"], ["68", "66"], ["90", "88"], ["96", "94"], ["111", "108"], ["131", "128"], ["165", "164"], ["179", "187"], ["187", "192"], ["287", "154"], ["112", "117"], ["117", "111"], ["132", "137"], ["137", "131"], ["181", "179"], ["192", "195"], ["195", "202"], ["195", "231"], ["198", "195"], ["231", "234"], ["234", "269"], ["234", "241"], ["237", "234"], ["269", "271"], ["269", "281"], ["289", "287"], ["113", "112"], ["133", "132"], ["182", "181"], ["271", "274"], ["274", "174"], ["292", "289"], ["202", "210"], ["202", "198"], ["241", "249"], ["241", "237"], ["279", "174"], ["293", "292"], ["281", "279"], ["294", "293"], ["207", "225"], ["207", "198"], ["246", "264"], ["246", "237"], ["208", "207"], ["225", "231"], ["247", "246"], ["264", "269"], ["209", "217"], ["216", "208"], ["248", "256"], ["255", "247"], ["210", "213"], ["213", "209"], ["217", "220"], ["220", "216"], ["249", "252"], ["252", "248"], ["256", "259"], ["259", "255"], ["17", "23"], ["18", "306"], ["21", "306"], ["21", "306"], ["26", "306"], ["29", "306"], ["28", "306"], ["26", "306"], ["26", "306"], ["32", "306"], ["32", "306"], ["32", "306"], ["37", "306"], ["37", "306"], ["37", "306"], ["45", "306"], ["47", "306"], ["45", "306"], ["45", "306"], ["72", "306"], ["72", "306"], ["72", "306"], ["141", "306"], ["141", "306"], ["148", "306"], ["151", "306"], ["151", "306"], ["151", "306"], ["299", "306"], ["299", "306"], ["302", "306"], ["302", "306"], ["159", "306"], ["164", "306"], ["162", "306"], ["162", "306"], ["170", "306"], ["170", "306"], ["174", "306"], ["174", "306"], ["174", "306"], ["294", "306"], ["293", "306"], ["292", "306"], ["289", "306"], ["287", "306"], ["287", "306"], ["154", "306"], ["181", "306"], ["179", "306"], ["179", "306"], ["187", "306"], ["187", "306"], ["192", "306"], ["195", "306"], ["208", "306"], ["208", "306"], ["207", "306"], ["207", "306"], ["198", "306"], ["225", "306"], ["225", "306"], ["231", "306"], ["234", "306"], ["234", "306"], ["247", "306"], ["247", "306"], ["246", "306"], ["246", "306"], ["237", "306"], ["264", "306"], ["264", "306"], ["281", "306"], ["279", "306"], ["279", "306"], ["271", "306"], ["271", "306"], ["274", "306"], ["274", "306"], ["87", "306"], ["87", "306"], ["93", "306"], ["93", "306"], ["102", "306"], ["105", "306"], ["122", "306"], ["125", "306"], ["125", "306"], ["84", "306"], ["131", "306"], ["131", "306"], ["131", "306"], ["128", "306"], ["111", "306"], ["111", "306"], ["111", "306"], ["108", "306"], ["62", "306"], ["62", "306"], ["62", "306"], ["59", "306"], ["289", "306"], ["17", "18"], ["23", "21"], ["28", "26"], ["34", "32"], ["39", "37"], ["39", "37"], ["47", "45"], ["74", "72"], ["17", "53"], ["17", "78"], ["17", "148"], ["17", "299"], ["141", "299"], ["287", "299"], ["299", "302"], ["17", "302"], ["17", "23"], ["29", "28"], ["17", "34"], ["17", "39"], ["21", "39"], ["17", "47"], ["21", "47"], ["53", "56"], ["59", "56"], ["17", "56"], ["21", "56"], ["68", "59"], ["17", "59"], ["26", "62"], ["17", "74"], ["78", "81"], ["84", "81"], ["17", "81"], ["56", "81"], ["81", "84"], ["17", "84"], ["17", "93"], ["148", "151"], ["154", "151"], ["17", "151"], ["81", "151"], ["165", "151"], ["165", "154"], ["293", "154"], ["220", "154"], ["259", "154"], ["17", "154"], ["17", "159"], ["165", "162"], ["165", "162"], ["17", "162"], ["17", "170"], ["23", "29"], ["17", "29"], ["21", "41"], ["17", "41"], ["17", "48"], ["21", "48"], ["32", "87"], ["17", "102"], ["17", "122"], ["17", "285"], ["102", "105"], ["108", "105"], ["17", "105"], ["105", "108"], ["17", "108"], ["32", "111"], ["122", "125"], ["128", "125"], ["17", "125"], ["125", "128"], ["17", "128"], ["32", "131"], ["165", "164"], ["165", "164"], ["17", "164"], ["159", "174"], ["279", "174"], ["17", "174"], ["162", "174"], ["274", "174"], ["181", "179"], ["181", "179"], ["17", "187"], ["289", "287"], ["289", "287"], ["289", "287"], ["56", "68"], ["17", "68"], ["151", "165"], ["17", "165"], ["151", "165"], ["17", "192"], ["17", "231"], ["17", "269"], ["174", "181"], ["17", "181"], ["174", "181"], ["192", "195"], ["198", "195"], ["17", "195"], ["195", "198"], ["17", "198"], ["231", "234"], ["237", "234"], ["17", "234"], ["234", "237"], ["17", "237"], ["17", "271"], ["179", "274"], ["17", "274"], ["17", "289"], ["141", "289"], ["287", "289"], ["293", "289"], ["293", "289"], ["174", "182"], ["17", "182"], ["174", "182"], ["179", "279"], ["17", "279"], ["293", "292"], ["293", "292"], ["17", "292"], ["165", "293"], ["220", "293"], ["259", "293"], ["17", "293"], ["174", "293"], ["179", "281"], ["17", "281"], ["165", "294"], ["220", "294"], ["259", "294"], ["17", "294"], ["174", "294"], ["208", "207"], ["208", "207"], ["17", "207"], ["17", "225"], ["247", "246"], ["247", "246"], ["17", "246"], ["17", "264"], ["247", "208"], ["247", "208"], ["208", "247"], ["208", "247"], ["165", "213"], ["220", "213"], ["259", "213"], ["17", "213"], ["179", "213"], ["17", "220"], ["165", "220"], ["259", "220"], ["165", "252"], ["220", "252"], ["259", "252"], ["17", "252"], ["179", "252"], ["17", "259"], ["165", "259"], ["220", "259"], ["56", "68"], ["56", "56"], ["56", "59"], ["56", "66"], ["56", "63"], ["56", "62"], ["81", "94"], ["81", "96"], ["81", "81"], ["81", "84"], ["81", "102"], ["81", "87"], ["81", "93"], ["81", "90"], ["81", "88"], ["81", "122"], ["81", "105"], ["81", "125"], ["151", "154"], ["151", "151"], ["151", "162"], ["151", "170"], ["151", "285"], ["151", "174"], ["151", "164"], ["151", "159"], ["151", "165"], ["105", "113"], ["105", "112"], ["105", "108"], ["105", "111"], ["105", "105"], ["105", "117"], ["125", "128"], ["125", "131"], ["125", "132"], ["125", "137"], ["125", "125"], ["125", "133"], ["174", "192"], ["174", "179"], ["174", "181"], ["174", "195"], ["174", "187"], ["174", "231"], ["174", "174"], ["174", "182"], ["174", "234"], ["174", "269"], ["285", "292"], ["285", "289"], ["285", "293"], ["285", "287"], ["285", "294"], ["195", "202"], ["234", "241"], ["269", "279"], ["269", "281"], ["269", "274"], ["269", "271"], ["202", "209"], ["202", "198"], ["202", "213"], ["202", "208"], ["202", "195"], ["202", "207"], ["202", "210"], ["202", "217"], ["202", "220"], ["202", "216"], ["241", "256"], ["241", "247"], ["241", "255"], ["241", "259"], ["241", "246"], ["241", "249"], ["241", "252"], ["241", "237"], ["241", "234"], ["241", "248"], ["207", "225"], ["207", "198"], ["207", "195"], ["246", "264"], ["246", "237"], ["246", "234"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "23": "<(nextInt,nextInt())<SUB>3</SUB>>", "25": "<(LOCAL,char[] arr: char[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,arr,char[] arr = toCharArray())<SUB>3</SUB>>", "29": "<(next,next())<SUB>3</SUB>>", "31": "<(LOCAL,int[] sum: int[])<SUB>3</SUB>>", "33": "<(IDENTIFIER,sum,int[] sum = new int[123])<SUB>3</SUB>>", "35": "<(LITERAL,123,new int[123])<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[][] pre = new int[123][n + 1])<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[123][n + 1])>", "41": "<(&lt;operator&gt;.addition,n + 1)<SUB>3</SUB>>", "43": "<(LITERAL,1,n + 1)<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,char[] a = new char[n + 1])<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.alloc,new char[n + 1])>", "49": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "55": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "57": "<(IDENTIFIER,i,i &lt;= n)<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,a[i] = arr[i - 1])<SUB>7</SUB>>", "67": "<(IDENTIFIER,arr,a[i] = arr[i - 1])<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i - 1)<SUB>7</SUB>>", "71": "<(LOCAL,boolean[] v: boolean[])<SUB>9</SUB>>", "73": "<(IDENTIFIER,v,boolean[] v = new boolean[123])<SUB>9</SUB>>", "75": "<(LITERAL,123,new boolean[123])<SUB>9</SUB>>", "77": "<(LOCAL,int i: int)<SUB>10</SUB>>", "79": "<(IDENTIFIER,i,int i = 1)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>10</SUB>>", "83": "<(IDENTIFIER,n,i &lt;= n)<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,sum[a[i]]++)<SUB>12</SUB>>", "89": "<(IDENTIFIER,sum,sum[a[i]]++)<SUB>12</SUB>>", "91": "<(IDENTIFIER,a,sum[a[i]]++)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,v[a[i]] = true)<SUB>12</SUB>>", "95": "<(IDENTIFIER,v,v[a[i]] = true)<SUB>12</SUB>>", "97": "<(IDENTIFIER,a,v[a[i]] = true)<SUB>12</SUB>>", "99": "<(LITERAL,true,v[a[i]] = true)<SUB>12</SUB>>", "101": "<(LOCAL,int j: int)<SUB>13</SUB>>", "103": "<(IDENTIFIER,j,int j = 65)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 90)<SUB>13</SUB>>", "107": "<(LITERAL,90,j &lt;= 90)<SUB>13</SUB>>", "109": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,pre[j][i] = sum[j])<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,pre[j][i] = sum[j])<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,sum[j])<SUB>15</SUB>>", "119": "<(IDENTIFIER,j,pre[j][i] = sum[j])<SUB>15</SUB>>", "121": "<(LOCAL,int j: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,j,int j = 97)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 122)<SUB>17</SUB>>", "127": "<(LITERAL,122,j &lt;= 122)<SUB>17</SUB>>", "129": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,pre[j][i] = sum[j])<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>19</SUB>>", "135": "<(IDENTIFIER,j,pre[j][i] = sum[j])<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,sum[j])<SUB>19</SUB>>", "139": "<(IDENTIFIER,j,pre[j][i] = sum[j])<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.assignment,long min = Integer.MAX_VALUE)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>22</SUB>>", "145": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>22</SUB>>", "147": "<(LOCAL,int i: int)<SUB>23</SUB>>", "149": "<(IDENTIFIER,i,int i = 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>23</SUB>>", "153": "<(IDENTIFIER,n,i &lt;= n)<SUB>23</SUB>>", "155": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "157": "<(LOCAL,int low: int)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.assignment,int low = 0)<SUB>25</SUB>>", "161": "<(LITERAL,0,int low = 0)<SUB>25</SUB>>", "163": "<(IDENTIFIER,high,int high = n - i + 1)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.subtraction,n - i)<SUB>25</SUB>>", "167": "<(IDENTIFIER,i,n - i)<SUB>25</SUB>>", "169": "<(LOCAL,boolean got: boolean)<SUB>25</SUB>>", "171": "<(IDENTIFIER,got,boolean got = false)<SUB>25</SUB>>", "173": "<(CONTROL_STRUCTURE,while (low &lt; high),while (low &lt; high))<SUB>26</SUB>>", "175": "<(IDENTIFIER,low,low &lt; high)<SUB>26</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.assignment,int mid = (low + high) &gt;&gt; 1)<SUB>28</SUB>>", "181": "<(&lt;operator&gt;.logicalShiftRight,(low + high) &gt;&gt; 1)<SUB>28</SUB>>", "183": "<(IDENTIFIER,low,low + high)<SUB>28</SUB>>", "185": "<(LITERAL,1,(low + high) &gt;&gt; 1)<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.assignment,boolean curr = true)<SUB>29</SUB>>", "189": "<(LITERAL,true,boolean curr = true)<SUB>29</SUB>>", "191": "<(LOCAL,int j: int)<SUB>30</SUB>>", "193": "<(IDENTIFIER,j,int j = 65)<SUB>30</SUB>>", "195": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 90)<SUB>30</SUB>>", "197": "<(LITERAL,90,j &lt;= 90)<SUB>30</SUB>>", "199": "<(IDENTIFIER,j,j++)<SUB>30</SUB>>", "201": "<(CONTROL_STRUCTURE,if (v[j]),if (v[j]))<SUB>32</SUB>>", "203": "<(IDENTIFIER,v,if (v[j]))<SUB>32</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "207": "<(&lt;operator&gt;.lessEqualsThan,pre[j][i + mid] - pre[j][i - 1] &lt;= 0)<SUB>34</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,pre[j][i + mid])<SUB>34</SUB>>", "211": "<(IDENTIFIER,pre,pre[j][i + mid] - pre[j][i - 1])<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.addition,i + mid)<SUB>34</SUB>>", "215": "<(IDENTIFIER,mid,i + mid)<SUB>34</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>34</SUB>>", "219": "<(IDENTIFIER,j,pre[j][i + mid] - pre[j][i - 1])<SUB>34</SUB>>", "221": "<(IDENTIFIER,i,i - 1)<SUB>34</SUB>>", "223": "<(LITERAL,0,pre[j][i + mid] - pre[j][i - 1] &lt;= 0)<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.assignment,curr = false)<SUB>36</SUB>>", "227": "<(LITERAL,false,curr = false)<SUB>36</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int j = 97; Some(j &lt;= 122); j++),for (int j = 97; Some(j &lt;= 122); j++))<SUB>41</SUB>>", "231": "<(&lt;operator&gt;.assignment,int j = 97)<SUB>41</SUB>>", "233": "<(LITERAL,97,int j = 97)<SUB>41</SUB>>", "235": "<(IDENTIFIER,j,j &lt;= 122)<SUB>41</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,j++)<SUB>41</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,v[j])<SUB>43</SUB>>", "243": "<(IDENTIFIER,j,if (v[j]))<SUB>43</SUB>>", "245": "<(CONTROL_STRUCTURE,if (pre[j][i + mid] - pre[j][i - 1] &lt;= 0),if (pre[j][i + mid] - pre[j][i - 1] &lt;= 0))<SUB>45</SUB>>", "247": "<(&lt;operator&gt;.subtraction,pre[j][i + mid] - pre[j][i - 1])<SUB>45</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>45</SUB>>", "251": "<(IDENTIFIER,j,pre[j][i + mid] - pre[j][i - 1])<SUB>45</SUB>>", "253": "<(IDENTIFIER,i,i + mid)<SUB>45</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,pre[j][i - 1])<SUB>45</SUB>>", "257": "<(IDENTIFIER,pre,pre[j][i + mid] - pre[j][i - 1])<SUB>45</SUB>>", "259": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>45</SUB>>", "261": "<(LITERAL,1,i - 1)<SUB>45</SUB>>", "263": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "265": "<(IDENTIFIER,curr,curr = false)<SUB>47</SUB>>", "267": "<(CONTROL_STRUCTURE,break;,break;)<SUB>48</SUB>>", "269": "<(IDENTIFIER,curr,if (curr))<SUB>52</SUB>>", "271": "<(&lt;operator&gt;.assignment,got = true)<SUB>54</SUB>>", "273": "<(LITERAL,true,got = true)<SUB>54</SUB>>", "275": "<(IDENTIFIER,high,high = mid)<SUB>55</SUB>>", "277": "<(CONTROL_STRUCTURE,else,else)<SUB>58</SUB>>", "279": "<(&lt;operator&gt;.assignment,low = mid + 1)<SUB>59</SUB>>", "281": "<(&lt;operator&gt;.addition,mid + 1)<SUB>59</SUB>>", "283": "<(LITERAL,1,mid + 1)<SUB>59</SUB>>", "285": "<(IDENTIFIER,got,if (got))<SUB>62</SUB>>", "287": "<(&lt;operator&gt;.assignment,min = Math.min(min, (i + low) - i + 1))<SUB>64</SUB>>", "289": "<(min,Math.min(min, (i + low) - i + 1))<SUB>64</SUB>>", "291": "<(IDENTIFIER,min,Math.min(min, (i + low) - i + 1))<SUB>64</SUB>>", "293": "<(&lt;operator&gt;.subtraction,(i + low) - i)<SUB>64</SUB>>", "295": "<(IDENTIFIER,i,i + low)<SUB>64</SUB>>", "297": "<(IDENTIFIER,i,(i + low) - i)<SUB>64</SUB>>", "299": "<(println,println(min))<SUB>67</SUB>>", "301": "<(IDENTIFIER,min,println(min))<SUB>67</SUB>>", "303": "<(IDENTIFIER,out,close())<SUB>68</SUB>>", "305": "<(MODIFIER,STATIC)>"}}