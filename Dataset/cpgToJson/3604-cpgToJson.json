{"edges": [["23", "25"], ["23", "211"], ["23", "212"], ["23", "213"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "38"], ["25", "41"], ["25", "50"], ["25", "51"], ["25", "55"], ["25", "56"], ["25", "60"], ["25", "61"], ["25", "66"], ["25", "67"], ["25", "8"], ["25", "71"], ["25", "74"], ["25", "75"], ["25", "113"], ["25", "114"], ["25", "117"], ["25", "118"], ["25", "121"], ["25", "198"], ["25", "209"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "37"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "49"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["74", "7"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "93"], ["85", "94"], ["85", "100"], ["85", "103"], ["85", "106"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "92"], ["90", "91"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "99"], ["97", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["123", "124"], ["125", "126"], ["125", "130"], ["125", "134"], ["126", "127"], ["126", "128"], ["128", "129"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "146"], ["144", "153"], ["144", "154"], ["144", "161"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "184"], ["162", "163"], ["162", "178"], ["163", "164"], ["163", "175"], ["164", "165"], ["164", "172"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "192"], ["184", "195"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["209", "210"], ["26", "33"], ["29", "40"], ["38", "45"], ["41", "53"], ["51", "58"], ["56", "63"], ["61", "69"], ["67", "73"], ["71", "74"], ["74", "77"], ["114", "118"], ["118", "123"], ["198", "209"], ["209", "213"], ["28", "26"], ["40", "38"], ["53", "51"], ["58", "56"], ["63", "61"], ["69", "67"], ["73", "71"], ["77", "80"], ["80", "90"], ["80", "114"], ["83", "80"], ["122", "128"], ["122", "202"], ["200", "198"], ["31", "34"], ["34", "29"], ["43", "46"], ["46", "41"], ["87", "97"], ["94", "100"], ["100", "103"], ["103", "108"], ["106", "83"], ["123", "122"], ["126", "132"], ["130", "136"], ["201", "206"], ["206", "200"], ["33", "31"], ["45", "43"], ["89", "87"], ["96", "94"], ["107", "106"], ["128", "126"], ["132", "130"], ["136", "139"], ["139", "123"], ["139", "150"], ["142", "139"], ["202", "201"], ["90", "89"], ["97", "96"], ["108", "107"], ["146", "158"], ["154", "166"], ["148", "146"], ["156", "154"], ["162", "187"], ["162", "142"], ["150", "148"], ["158", "156"], ["163", "162"], ["163", "180"], ["178", "162"], ["185", "192"], ["192", "195"], ["195", "142"], ["164", "163"], ["164", "175"], ["175", "163"], ["179", "178"], ["186", "185"], ["165", "164"], ["165", "172"], ["172", "164"], ["180", "179"], ["187", "186"], ["166", "165"], ["166", "169"], ["169", "165"], ["23", "28"], ["24", "213"], ["26", "213"], ["34", "213"], ["34", "213"], ["29", "213"], ["38", "213"], ["43", "213"], ["46", "213"], ["46", "213"], ["41", "213"], ["51", "213"], ["56", "213"], ["61", "213"], ["63", "213"], ["63", "213"], ["61", "213"], ["61", "213"], ["69", "213"], ["67", "213"], ["67", "213"], ["71", "213"], ["74", "213"], ["77", "213"], ["80", "213"], ["80", "213"], ["80", "213"], ["114", "213"], ["118", "213"], ["123", "213"], ["122", "213"], ["122", "213"], ["202", "213"], ["201", "213"], ["200", "213"], ["206", "213"], ["200", "213"], ["198", "213"], ["198", "213"], ["209", "213"], ["209", "213"], ["126", "213"], ["130", "213"], ["130", "213"], ["136", "213"], ["139", "213"], ["139", "213"], ["148", "213"], ["146", "213"], ["146", "213"], ["154", "213"], ["156", "213"], ["154", "213"], ["154", "213"], ["166", "213"], ["165", "213"], ["169", "213"], ["165", "213"], ["164", "213"], ["172", "213"], ["172", "213"], ["164", "213"], ["163", "213"], ["175", "213"], ["175", "213"], ["163", "213"], ["162", "213"], ["178", "213"], ["162", "213"], ["162", "213"], ["185", "213"], ["185", "213"], ["192", "213"], ["192", "213"], ["195", "213"], ["195", "213"], ["142", "213"], ["87", "213"], ["97", "213"], ["96", "213"], ["94", "213"], ["94", "213"], ["100", "213"], ["100", "213"], ["103", "213"], ["103", "213"], ["106", "213"], ["106", "213"], ["83", "213"], ["23", "24"], ["23", "26"], ["23", "38"], ["53", "51"], ["58", "56"], ["63", "61"], ["63", "61"], ["69", "67"], ["23", "71"], ["23", "114"], ["23", "118"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["38", "41"], ["23", "41"], ["43", "41"], ["46", "41"], ["71", "74"], ["23", "74"], ["23", "77"], ["41", "198"], ["23", "198"], ["114", "198"], ["126", "198"], ["118", "198"], ["130", "198"], ["198", "209"], ["23", "209"], ["23", "31"], ["23", "37"], ["23", "43"], ["23", "49"], ["29", "53"], ["23", "53"], ["53", "58"], ["23", "58"], ["51", "63"], ["23", "63"], ["56", "63"], ["58", "69"], ["23", "69"], ["77", "80"], ["83", "80"], ["23", "80"], ["67", "80"], ["80", "83"], ["23", "83"], ["89", "87"], ["89", "87"], ["96", "94"], ["96", "94"], ["23", "106"], ["123", "122"], ["128", "126"], ["132", "130"], ["114", "200"], ["126", "200"], ["23", "200"], ["118", "200"], ["130", "200"], ["31", "34"], ["23", "34"], ["43", "46"], ["23", "46"], ["74", "100"], ["103", "100"], ["23", "100"], ["87", "100"], ["100", "103"], ["23", "103"], ["94", "103"], ["74", "123"], ["132", "123"], ["195", "123"], ["103", "123"], ["23", "123"], ["23", "136"], ["114", "201"], ["126", "201"], ["23", "201"], ["118", "206"], ["130", "206"], ["23", "206"], ["90", "89"], ["23", "89"], ["97", "96"], ["23", "96"], ["123", "128"], ["23", "128"], ["128", "132"], ["23", "132"], ["136", "139"], ["142", "139"], ["23", "139"], ["139", "142"], ["23", "142"], ["126", "146"], ["23", "146"], ["130", "154"], ["23", "154"], ["114", "202"], ["126", "202"], ["23", "202"], ["69", "90"], ["97", "90"], ["23", "90"], ["90", "97"], ["23", "97"], ["126", "148"], ["23", "148"], ["130", "156"], ["23", "156"], ["163", "162"], ["163", "162"], ["178", "162"], ["23", "185"], ["164", "163"], ["164", "163"], ["175", "163"], ["175", "163"], ["185", "178"], ["132", "192"], ["195", "192"], ["23", "192"], ["166", "192"], ["172", "192"], ["192", "195"], ["23", "195"], ["154", "195"], ["169", "195"], ["175", "195"], ["165", "164"], ["165", "164"], ["172", "164"], ["172", "164"], ["154", "175"], ["169", "175"], ["23", "175"], ["63", "175"], ["166", "165"], ["166", "165"], ["169", "165"], ["169", "165"], ["166", "172"], ["23", "172"], ["63", "172"], ["146", "166"], ["23", "166"], ["154", "169"], ["23", "169"], ["80", "107"], ["80", "94"], ["80", "96"], ["80", "103"], ["80", "87"], ["80", "97"], ["80", "90"], ["80", "80"], ["80", "100"], ["80", "108"], ["80", "89"], ["80", "106"], ["80", "83"], ["122", "136"], ["122", "128"], ["122", "132"], ["122", "130"], ["122", "139"], ["122", "122"], ["122", "123"], ["122", "126"], ["139", "154"], ["139", "146"], ["139", "163"], ["139", "150"], ["139", "162"], ["139", "148"], ["139", "164"], ["139", "139"], ["139", "158"], ["139", "166"], ["139", "142"], ["139", "165"], ["139", "156"], ["162", "192"], ["162", "185"], ["162", "195"], ["162", "187"], ["162", "186"], ["163", "179"], ["163", "178"], ["163", "180"], ["164", "175"], ["165", "172"], ["166", "169"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(new File(&quot;input.txt&quot;)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(new File(&quot;input.txt&quot;)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(new File(&quot;input.txt&quot;)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new File(&quot;input.txt&quot;))>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY write = new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,write,new BufferedWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new FileWriter(&quot;output.txt&quot;))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj2,new FileWriter(&quot;output.txt&quot;))>", "49": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "53": "<(nextInt,nextInt())<SUB>4</SUB>>", "55": "<(LOCAL,int m: int)<SUB>5</SUB>>", "57": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,boolean[][] v = new boolean[n][m])<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.alloc,new boolean[n][m])>", "65": "<(IDENTIFIER,m,new boolean[n][m])<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>7</SUB>>", "69": "<(nextInt,nextInt())<SUB>7</SUB>>", "8": "<(LOCAL,Queue&lt;Integer&gt; q: ANY)<SUB>8</SUB>>", "72": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;Integer&gt;())<SUB>8</SUB>>", "74": "<(&lt;init&gt;,new LinkedList&lt;Integer&gt;())<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,i &lt; k)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,int x = sc.nextInt() - 1)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>10</SUB>>", "91": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "93": "<(LOCAL,int y: int)<SUB>11</SUB>>", "95": "<(IDENTIFIER,y,int y = sc.nextInt() - 1)<SUB>11</SUB>>", "97": "<(nextInt,nextInt())<SUB>11</SUB>>", "99": "<(LITERAL,1,sc.nextInt() - 1)<SUB>11</SUB>>", "101": "<(IDENTIFIER,q,add(x))<SUB>12</SUB>>", "103": "<(add,add(y))<SUB>13</SUB>>", "105": "<(IDENTIFIER,y,add(y))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,v[x][y])<SUB>14</SUB>>", "109": "<(IDENTIFIER,v,v[x][y] = true)<SUB>14</SUB>>", "111": "<(IDENTIFIER,y,v[x][y] = true)<SUB>14</SUB>>", "113": "<(LOCAL,int lastx: int)<SUB>16</SUB>>", "115": "<(IDENTIFIER,lastx,int lastx = 0)<SUB>16</SUB>>", "117": "<(LOCAL,int lasty: int)<SUB>17</SUB>>", "119": "<(IDENTIFIER,lasty,int lasty = 0)<SUB>17</SUB>>", "121": "<(CONTROL_STRUCTURE,while (!q.isEmpty()),while (!q.isEmpty()))<SUB>18</SUB>>", "123": "<(isEmpty,isEmpty())<SUB>18</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "127": "<(IDENTIFIER,lastx,lastx = poll())<SUB>19</SUB>>", "129": "<(IDENTIFIER,q,poll())<SUB>19</SUB>>", "131": "<(IDENTIFIER,lasty,lasty = poll())<SUB>20</SUB>>", "133": "<(IDENTIFIER,q,poll())<SUB>20</SUB>>", "135": "<(LOCAL,int i: int)<SUB>21</SUB>>", "137": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>21</SUB>>", "141": "<(LITERAL,4,i &lt; 4)<SUB>21</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "145": "<(LOCAL,int r: int)<SUB>22</SUB>>", "147": "<(IDENTIFIER,r,int r = lastx + dx[i])<SUB>22</SUB>>", "149": "<(IDENTIFIER,lastx,lastx + dx[i])<SUB>22</SUB>>", "151": "<(IDENTIFIER,dx,lastx + dx[i])<SUB>22</SUB>>", "153": "<(LOCAL,int c: int)<SUB>23</SUB>>", "155": "<(IDENTIFIER,c,int c = lasty + dy[i])<SUB>23</SUB>>", "157": "<(IDENTIFIER,lasty,lasty + dy[i])<SUB>23</SUB>>", "159": "<(IDENTIFIER,dy,lasty + dy[i])<SUB>23</SUB>>", "161": "<(CONTROL_STRUCTURE,if (r &gt;= 0 &amp;&amp; c &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &lt; m &amp;&amp; !v[r][c]),if (r &gt;= 0 &amp;&amp; c &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &lt; m &amp;&amp; !v[r][c]))<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.logicalAnd,r &gt;= 0 &amp;&amp; c &gt;= 0 &amp;&amp; r &lt; n &amp;&amp; c &lt; m)<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.logicalAnd,r &gt;= 0 &amp;&amp; c &gt;= 0)<SUB>24</SUB>>", "167": "<(IDENTIFIER,r,r &gt;= 0)<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.greaterEqualsThan,c &gt;= 0)<SUB>24</SUB>>", "171": "<(LITERAL,0,c &gt;= 0)<SUB>24</SUB>>", "173": "<(IDENTIFIER,r,r &lt; n)<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.lessThan,c &lt; m)<SUB>24</SUB>>", "177": "<(IDENTIFIER,m,c &lt; m)<SUB>24</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,v[r][c])<SUB>24</SUB>>", "181": "<(IDENTIFIER,v,!v[r][c])<SUB>24</SUB>>", "183": "<(IDENTIFIER,c,!v[r][c])<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.assignment,v[r][c] = true)<SUB>25</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,v[r])<SUB>25</SUB>>", "189": "<(IDENTIFIER,r,v[r][c] = true)<SUB>25</SUB>>", "191": "<(LITERAL,true,v[r][c] = true)<SUB>25</SUB>>", "193": "<(IDENTIFIER,q,add(r))<SUB>26</SUB>>", "195": "<(add,add(c))<SUB>27</SUB>>", "197": "<(IDENTIFIER,c,add(c))<SUB>27</SUB>>", "199": "<(IDENTIFIER,write,write((lastx + 1) + &quot; &quot; + (lasty + 1)))<SUB>31</SUB>>", "201": "<(&lt;operator&gt;.addition,(lastx + 1) + &quot; &quot;)<SUB>31</SUB>>", "203": "<(IDENTIFIER,lastx,lastx + 1)<SUB>31</SUB>>", "205": "<(LITERAL,&quot; &quot;,(lastx + 1) + &quot; &quot;)<SUB>31</SUB>>", "207": "<(IDENTIFIER,lasty,lasty + 1)<SUB>31</SUB>>", "209": "<(close,close())<SUB>32</SUB>>", "211": "<(MODIFIER,PUBLIC)>", "213": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}