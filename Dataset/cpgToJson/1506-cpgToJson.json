{"edges": [["25", "27"], ["25", "217"], ["25", "218"], ["25", "219"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "32"], ["27", "36"], ["27", "37"], ["27", "41"], ["27", "42"], ["27", "46"], ["27", "6"], ["27", "59"], ["27", "62"], ["27", "8"], ["27", "63"], ["27", "66"], ["27", "67"], ["27", "68"], ["27", "71"], ["27", "92"], ["27", "95"], ["27", "98"], ["27", "119"], ["27", "120"], ["27", "127"], ["27", "137"], ["27", "10"], ["27", "140"], ["27", "143"], ["27", "144"], ["27", "145"], ["27", "148"], ["27", "166"], ["27", "180"], ["27", "181"], ["27", "184"], ["27", "187"], ["27", "188"], ["27", "191"], ["27", "194"], ["27", "212"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["32", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "56"], ["50", "58"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["56", "57"], ["59", "60"], ["59", "61"], ["62", "5"], ["63", "64"], ["63", "65"], ["66", "7"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "89"], ["76", "77"], ["76", "82"], ["76", "85"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "116"], ["103", "104"], ["103", "109"], ["103", "112"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["112", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "125"], ["123", "124"], ["125", "126"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "9"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "156"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "160"], ["156", "163"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "175"], ["166", "177"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["175", "176"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "199"], ["195", "196"], ["195", "197"], ["197", "198"], ["199", "200"], ["199", "207"], ["199", "210"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["28", "31"], ["31", "32"], ["32", "39"], ["37", "44"], ["42", "47"], ["59", "62"], ["62", "65"], ["63", "66"], ["66", "68"], ["68", "72"], ["92", "95"], ["95", "99"], ["120", "128"], ["137", "142"], ["140", "143"], ["143", "145"], ["145", "150"], ["181", "184"], ["184", "188"], ["188", "191"], ["191", "197"], ["212", "219"], ["30", "28"], ["39", "37"], ["44", "42"], ["47", "54"], ["47", "61"], ["61", "59"], ["65", "63"], ["72", "78"], ["72", "92"], ["99", "105"], ["99", "123"], ["122", "120"], ["128", "132"], ["128", "137"], ["142", "140"], ["149", "157"], ["149", "168"], ["168", "173"], ["171", "177"], ["171", "181"], ["175", "173"], ["177", "175"], ["195", "201"], ["195", "215"], ["213", "212"], ["51", "56"], ["56", "58"], ["58", "219"], ["89", "72"], ["116", "99"], ["123", "125"], ["125", "122"], ["132", "135"], ["135", "128"], ["150", "153"], ["153", "149"], ["157", "160"], ["160", "163"], ["163", "150"], ["173", "171"], ["197", "195"], ["207", "210"], ["210", "197"], ["215", "213"], ["52", "51"], ["77", "82"], ["77", "86"], ["82", "89"], ["104", "109"], ["104", "113"], ["109", "116"], ["201", "204"], ["201", "207"], ["204", "207"], ["54", "52"], ["78", "77"], ["86", "89"], ["105", "104"], ["113", "116"], ["25", "30"], ["58", "219"], ["26", "219"], ["28", "219"], ["31", "219"], ["32", "219"], ["37", "219"], ["42", "219"], ["42", "219"], ["47", "219"], ["47", "219"], ["47", "219"], ["51", "219"], ["51", "219"], ["56", "219"], ["56", "219"], ["25", "26"], ["25", "28"], ["39", "37"], ["44", "42"], ["25", "59"], ["25", "63"], ["47", "68"], ["25", "68"], ["47", "95"], ["25", "95"], ["122", "120"], ["25", "140"], ["25", "145"], ["25", "181"], ["25", "184"], ["25", "188"], ["28", "31"], ["25", "31"], ["31", "32"], ["25", "32"], ["59", "62"], ["25", "62"], ["63", "66"], ["25", "66"], ["25", "92"], ["62", "92"], ["86", "92"], ["82", "92"], ["92", "137"], ["25", "137"], ["125", "137"], ["132", "137"], ["140", "143"], ["25", "143"], ["25", "168"], ["137", "191"], ["25", "191"], ["143", "191"], ["177", "191"], ["157", "191"], ["181", "212"], ["204", "212"], ["25", "212"], ["32", "39"], ["25", "39"], ["39", "44"], ["25", "44"], ["37", "47"], ["25", "47"], ["42", "47"], ["25", "58"], ["68", "72"], ["89", "72"], ["25", "72"], ["25", "89"], ["95", "99"], ["116", "99"], ["25", "99"], ["25", "116"], ["123", "122"], ["125", "122"], ["120", "128"], ["135", "128"], ["25", "128"], ["150", "149"], ["150", "149"], ["153", "149"], ["153", "149"], ["168", "171"], ["175", "171"], ["25", "171"], ["173", "171"], ["171", "175"], ["25", "175"], ["143", "177"], ["157", "177"], ["25", "177"], ["184", "195"], ["210", "195"], ["25", "195"], ["197", "195"], ["25", "207"], ["25", "51"], ["44", "56"], ["25", "56"], ["78", "89"], ["105", "116"], ["92", "123"], ["25", "123"], ["66", "125"], ["113", "125"], ["109", "125"], ["25", "125"], ["125", "132"], ["25", "132"], ["128", "135"], ["25", "135"], ["123", "150"], ["160", "150"], ["25", "150"], ["137", "153"], ["163", "153"], ["25", "153"], ["143", "157"], ["25", "157"], ["150", "160"], ["25", "160"], ["153", "163"], ["25", "163"], ["150", "173"], ["25", "173"], ["191", "197"], ["201", "197"], ["25", "197"], ["188", "204"], ["207", "204"], ["25", "204"], ["188", "207"], ["201", "210"], ["25", "210"], ["78", "77"], ["78", "77"], ["25", "77"], ["62", "82"], ["86", "82"], ["25", "82"], ["105", "104"], ["105", "104"], ["25", "104"], ["66", "109"], ["113", "109"], ["25", "109"], ["197", "201"], ["25", "201"], ["195", "201"], ["181", "204"], ["72", "78"], ["25", "78"], ["62", "86"], ["82", "86"], ["25", "86"], ["99", "105"], ["25", "105"], ["66", "113"], ["109", "113"], ["25", "113"], ["47", "68"], ["47", "188"], ["47", "51"], ["47", "120"], ["47", "52"], ["47", "145"], ["47", "128"], ["47", "215"], ["47", "149"], ["47", "56"], ["47", "150"], ["47", "197"], ["47", "95"], ["47", "213"], ["47", "92"], ["47", "153"], ["47", "168"], ["47", "59"], ["47", "181"], ["47", "191"], ["47", "195"], ["47", "184"], ["47", "54"], ["47", "173"], ["47", "137"], ["47", "212"], ["47", "58"], ["47", "61"], ["47", "171"], ["47", "66"], ["47", "122"], ["47", "99"], ["47", "72"], ["47", "142"], ["47", "123"], ["47", "65"], ["47", "140"], ["47", "143"], ["47", "63"], ["47", "125"], ["47", "62"], ["72", "77"], ["72", "89"], ["72", "72"], ["72", "78"], ["99", "104"], ["99", "116"], ["99", "99"], ["99", "105"], ["128", "128"], ["128", "132"], ["128", "135"], ["149", "163"], ["149", "149"], ["149", "150"], ["149", "153"], ["149", "160"], ["149", "157"], ["171", "173"], ["171", "171"], ["171", "177"], ["171", "175"], ["195", "197"], ["195", "195"], ["195", "207"], ["195", "201"], ["195", "210"], ["77", "86"], ["77", "82"], ["104", "113"], ["104", "109"], ["201", "204"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY z = new Codeforces())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Codeforces())<SUB>3</SUB>>", "3": "<(IDENTIFIER,z,new Codeforces())<SUB>3</SUB>>", "33": "<(IDENTIFIER,z,init(&quot;&quot;, &quot;&quot;))<SUB>4</SUB>>", "35": "<(LITERAL,&quot;&quot;,init(&quot;&quot;, &quot;&quot;))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,long l = nL())<SUB>6</SUB>>", "39": "<(nL,nL())<SUB>6</SUB>>", "41": "<(LOCAL,long r: long)<SUB>7</SUB>>", "43": "<(IDENTIFIER,r,long r = nL())<SUB>7</SUB>>", "45": "<(IDENTIFIER,z,nL())<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.equals,l == r)<SUB>8</SUB>>", "49": "<(IDENTIFIER,r,l == r)<SUB>8</SUB>>", "51": "<(println,System.out.println(0))<SUB>10</SUB>>", "53": "<(IDENTIFIER,System,System.out.println(0))<SUB>10</SUB>>", "55": "<(LITERAL,0,System.out.println(0))<SUB>10</SUB>>", "57": "<(IDENTIFIER,z,close())<SUB>11</SUB>>", "6": "<(LOCAL,List&lt;Boolean&gt; R: ANY)<SUB>15</SUB>>", "60": "<(IDENTIFIER,R,ANY R = new ArrayList&lt;Boolean&gt;())<SUB>15</SUB>>", "62": "<(&lt;init&gt;,new ArrayList&lt;Boolean&gt;())<SUB>15</SUB>>", "8": "<(LOCAL,List&lt;Boolean&gt; L: ANY)<SUB>16</SUB>>", "64": "<(IDENTIFIER,L,ANY L = new ArrayList&lt;Boolean&gt;())<SUB>16</SUB>>", "66": "<(&lt;init&gt;,new ArrayList&lt;Boolean&gt;())<SUB>16</SUB>>", "67": "<(LOCAL,long temp: long)<SUB>18</SUB>>", "69": "<(IDENTIFIER,temp,long temp = r)<SUB>18</SUB>>", "71": "<(CONTROL_STRUCTURE,while (temp != 0),while (temp != 0))<SUB>19</SUB>>", "73": "<(IDENTIFIER,temp,temp != 0)<SUB>19</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "77": "<(&lt;operator&gt;.equals,temp % 2 == 1)<SUB>21</SUB>>", "79": "<(IDENTIFIER,temp,temp % 2)<SUB>21</SUB>>", "81": "<(LITERAL,1,temp % 2 == 1)<SUB>21</SUB>>", "83": "<(IDENTIFIER,R,add(true))<SUB>22</SUB>>", "85": "<(CONTROL_STRUCTURE,else,else)<SUB>24</SUB>>", "87": "<(IDENTIFIER,R,add(false))<SUB>24</SUB>>", "89": "<(&lt;operator&gt;.assignmentDivision,temp /= 2)<SUB>25</SUB>>", "91": "<(LITERAL,2,temp /= 2)<SUB>25</SUB>>", "93": "<(IDENTIFIER,Collections,reverse(R))<SUB>28</SUB>>", "95": "<(&lt;operator&gt;.assignment,temp = l)<SUB>30</SUB>>", "97": "<(IDENTIFIER,l,temp = l)<SUB>30</SUB>>", "99": "<(&lt;operator&gt;.notEquals,temp != 0)<SUB>31</SUB>>", "101": "<(LITERAL,0,temp != 0)<SUB>31</SUB>>", "103": "<(CONTROL_STRUCTURE,if (temp % 2 == 1),if (temp % 2 == 1))<SUB>33</SUB>>", "105": "<(&lt;operator&gt;.modulo,temp % 2)<SUB>33</SUB>>", "107": "<(LITERAL,2,temp % 2)<SUB>33</SUB>>", "109": "<(add,add(true))<SUB>34</SUB>>", "111": "<(LITERAL,true,add(true))<SUB>34</SUB>>", "113": "<(add,add(false))<SUB>36</SUB>>", "115": "<(LITERAL,false,add(false))<SUB>36</SUB>>", "117": "<(IDENTIFIER,temp,temp /= 2)<SUB>37</SUB>>", "119": "<(LOCAL,int n: int)<SUB>40</SUB>>", "121": "<(IDENTIFIER,n,int n = R.size() - L.size())<SUB>40</SUB>>", "123": "<(size,size())<SUB>40</SUB>>", "125": "<(size,size())<SUB>40</SUB>>", "127": "<(CONTROL_STRUCTURE,while (n != 0),while (n != 0))<SUB>41</SUB>>", "129": "<(IDENTIFIER,n,n != 0)<SUB>41</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "133": "<(IDENTIFIER,L,add(false))<SUB>43</SUB>>", "135": "<(&lt;operator&gt;.preDecrement,--n)<SUB>44</SUB>>", "137": "<(reverse,reverse(L))<SUB>46</SUB>>", "139": "<(IDENTIFIER,L,reverse(L))<SUB>46</SUB>>", "140": "<(&lt;operator&gt;.assignment,ANY res = new ArrayList&lt;Boolean&gt;())<SUB>48</SUB>>", "142": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Boolean&gt;())<SUB>48</SUB>>", "9": "<(IDENTIFIER,res,new ArrayList&lt;Boolean&gt;())<SUB>48</SUB>>", "145": "<(&lt;operator&gt;.assignment,int it = 0)<SUB>52</SUB>>", "147": "<(LITERAL,0,int it = 0)<SUB>52</SUB>>", "149": "<(&lt;operator&gt;.equals,R.get(0) == L.get(0))<SUB>54</SUB>>", "151": "<(IDENTIFIER,R,get(0))<SUB>54</SUB>>", "153": "<(get,get(0))<SUB>54</SUB>>", "155": "<(LITERAL,0,get(0))<SUB>54</SUB>>", "157": "<(add,add(false))<SUB>56</SUB>>", "159": "<(LITERAL,false,add(false))<SUB>56</SUB>>", "161": "<(IDENTIFIER,R,remove(0))<SUB>57</SUB>>", "163": "<(remove,remove(0))<SUB>58</SUB>>", "165": "<(LITERAL,0,remove(0))<SUB>58</SUB>>", "167": "<(LOCAL,int i: int)<SUB>61</SUB>>", "169": "<(IDENTIFIER,i,int i = 0)<SUB>61</SUB>>", "171": "<(&lt;operator&gt;.lessThan,i &lt; R.size())<SUB>61</SUB>>", "173": "<(size,size())<SUB>61</SUB>>", "175": "<(&lt;operator&gt;.preIncrement,++i)<SUB>61</SUB>>", "177": "<(add,add(true))<SUB>62</SUB>>", "179": "<(LITERAL,true,add(true))<SUB>62</SUB>>", "181": "<(&lt;operator&gt;.assignment,long out = 0)<SUB>64</SUB>>", "183": "<(LITERAL,0,long out = 0)<SUB>64</SUB>>", "185": "<(IDENTIFIER,it,it = 0)<SUB>65</SUB>>", "187": "<(LOCAL,long add: long)<SUB>66</SUB>>", "189": "<(IDENTIFIER,add,long add = 1)<SUB>66</SUB>>", "191": "<(reverse,reverse(res))<SUB>67</SUB>>", "193": "<(IDENTIFIER,res,reverse(res))<SUB>67</SUB>>", "195": "<(&lt;operator&gt;.lessThan,it &lt; res.size())<SUB>68</SUB>>", "197": "<(size,size())<SUB>68</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "201": "<(get,get(it))<SUB>70</SUB>>", "203": "<(IDENTIFIER,it,get(it))<SUB>70</SUB>>", "205": "<(IDENTIFIER,out,out += add)<SUB>71</SUB>>", "207": "<(&lt;operator&gt;.assignmentMultiplication,add *= 2)<SUB>72</SUB>>", "209": "<(LITERAL,2,add *= 2)<SUB>72</SUB>>", "211": "<(IDENTIFIER,it,++it)<SUB>73</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>75</SUB>>", "215": "<(FIELD_IDENTIFIER,out,out)<SUB>75</SUB>>", "217": "<(MODIFIER,PUBLIC)>", "219": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}