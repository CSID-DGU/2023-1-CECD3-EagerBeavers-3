{"edges": [["19", "21"], ["19", "249"], ["19", "250"], ["19", "251"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "92"], ["21", "111"], ["21", "186"], ["21", "187"], ["21", "190"], ["21", "240"], ["21", "247"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["55", "77"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "125"], ["123", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "138"], ["130", "140"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "154"], ["141", "142"], ["141", "153"], ["142", "143"], ["142", "150"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "185"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "200"], ["190", "202"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "210"], ["202", "211"], ["202", "216"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["216", "221"], ["216", "224"], ["216", "226"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["224", "225"], ["226", "227"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["247", "248"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["85", "94"], ["187", "192"], ["240", "247"], ["247", "251"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "88"], ["53", "50"], ["87", "85"], ["94", "97"], ["97", "106"], ["97", "113"], ["100", "97"], ["102", "100"], ["113", "118"], ["116", "127"], ["116", "187"], ["121", "118"], ["192", "197"], ["195", "205"], ["195", "243"], ["200", "197"], ["241", "244"], ["244", "240"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "79"], ["77", "53"], ["88", "87"], ["103", "102"], ["118", "116"], ["125", "132"], ["197", "195"], ["211", "218"], ["243", "241"], ["59", "57"], ["66", "64"], ["71", "70"], ["78", "77"], ["104", "103"], ["127", "125"], ["132", "135"], ["135", "146"], ["135", "121"], ["138", "135"], ["204", "200"], ["204", "213"], ["213", "211"], ["218", "221"], ["221", "229"], ["221", "200"], ["224", "221"], ["60", "59"], ["67", "66"], ["72", "71"], ["79", "78"], ["106", "104"], ["205", "204"], ["142", "138"], ["142", "156"], ["156", "159"], ["159", "167"], ["159", "138"], ["162", "159"], ["228", "236"], ["228", "224"], ["233", "224"], ["143", "142"], ["143", "150"], ["150", "142"], ["229", "228"], ["235", "233"], ["144", "143"], ["166", "173"], ["166", "162"], ["171", "162"], ["236", "235"], ["146", "144"], ["167", "166"], ["172", "182"], ["177", "171"], ["173", "172"], ["178", "177"], ["180", "178"], ["182", "180"], ["19", "24"], ["20", "251"], ["22", "251"], ["25", "251"], ["25", "251"], ["30", "251"], ["35", "251"], ["35", "251"], ["40", "251"], ["40", "251"], ["40", "251"], ["50", "251"], ["50", "251"], ["85", "251"], ["85", "251"], ["85", "251"], ["94", "251"], ["97", "251"], ["97", "251"], ["187", "251"], ["192", "251"], ["195", "251"], ["197", "251"], ["195", "251"], ["195", "251"], ["240", "251"], ["244", "251"], ["240", "251"], ["240", "251"], ["247", "251"], ["247", "251"], ["205", "251"], ["204", "251"], ["204", "251"], ["211", "251"], ["213", "251"], ["211", "251"], ["211", "251"], ["218", "251"], ["221", "251"], ["221", "251"], ["233", "251"], ["233", "251"], ["224", "251"], ["200", "251"], ["125", "251"], ["127", "251"], ["125", "251"], ["125", "251"], ["132", "251"], ["135", "251"], ["135", "251"], ["121", "251"], ["144", "251"], ["143", "251"], ["142", "251"], ["150", "251"], ["142", "251"], ["142", "251"], ["156", "251"], ["159", "251"], ["159", "251"], ["171", "251"], ["180", "251"], ["171", "251"], ["171", "251"], ["162", "251"], ["138", "251"], ["102", "251"], ["102", "251"], ["100", "251"], ["57", "251"], ["57", "251"], ["64", "251"], ["66", "251"], ["64", "251"], ["64", "251"], ["70", "251"], ["70", "251"], ["77", "251"], ["77", "251"], ["53", "251"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["87", "85"], ["87", "85"], ["19", "187"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "94"], ["19", "102"], ["19", "113"], ["19", "192"], ["244", "240"], ["244", "240"], ["37", "247"], ["67", "247"], ["19", "247"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["19", "77"], ["88", "87"], ["88", "87"], ["19", "87"], ["94", "97"], ["100", "97"], ["19", "97"], ["87", "97"], ["106", "100"], ["19", "100"], ["113", "116"], ["121", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["127", "121"], ["144", "121"], ["180", "121"], ["19", "121"], ["127", "125"], ["127", "125"], ["192", "195"], ["200", "195"], ["19", "195"], ["197", "195"], ["197", "195"], ["205", "200"], ["213", "200"], ["19", "200"], ["213", "211"], ["213", "211"], ["187", "244"], ["233", "244"], ["19", "244"], ["19", "88"], ["42", "88"], ["19", "118"], ["97", "118"], ["135", "118"], ["19", "132"], ["19", "197"], ["118", "197"], ["221", "197"], ["19", "218"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["19", "127"], ["116", "127"], ["132", "135"], ["138", "135"], ["19", "135"], ["118", "135"], ["159", "135"], ["146", "138"], ["150", "138"], ["182", "138"], ["19", "138"], ["205", "204"], ["205", "204"], ["19", "204"], ["205", "213"], ["19", "213"], ["205", "213"], ["218", "221"], ["224", "221"], ["19", "221"], ["197", "221"], ["221", "224"], ["19", "224"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["19", "106"], ["97", "106"], ["19", "156"], ["213", "205"], ["127", "205"], ["19", "205"], ["195", "205"], ["171", "233"], ["143", "142"], ["143", "142"], ["150", "142"], ["150", "142"], ["156", "159"], ["162", "159"], ["19", "159"], ["135", "159"], ["159", "162"], ["19", "162"], ["187", "233"], ["19", "233"], ["144", "143"], ["144", "143"], ["19", "143"], ["125", "150"], ["19", "150"], ["146", "150"], ["127", "144"], ["180", "144"], ["19", "144"], ["146", "144"], ["146", "144"], ["19", "146"], ["135", "146"], ["144", "180"], ["19", "180"], ["182", "180"], ["182", "180"], ["19", "182"], ["146", "182"], ["150", "182"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "79"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["97", "102"], ["97", "103"], ["97", "104"], ["97", "97"], ["97", "100"], ["97", "106"], ["116", "132"], ["116", "121"], ["116", "118"], ["116", "127"], ["116", "116"], ["116", "135"], ["116", "125"], ["195", "197"], ["195", "204"], ["195", "195"], ["195", "205"], ["195", "200"], ["135", "146"], ["135", "144"], ["135", "138"], ["135", "142"], ["135", "143"], ["135", "135"], ["204", "213"], ["204", "221"], ["204", "211"], ["204", "218"], ["221", "228"], ["221", "221"], ["221", "224"], ["221", "229"], ["142", "159"], ["142", "156"], ["159", "167"], ["159", "162"], ["159", "166"], ["159", "159"], ["228", "233"], ["228", "235"], ["228", "236"], ["143", "150"], ["166", "178"], ["166", "173"], ["166", "182"], ["166", "180"], ["166", "171"], ["166", "177"], ["166", "172"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>6</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int u = scan.nextInt() - 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.subtraction,scan.nextInt() - 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "63": "<(LOCAL,int v: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,v,int v = scan.nextInt() - 1)<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(LITERAL,1,scan.nextInt() - 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[u][v])<SUB>10</SUB>>", "73": "<(IDENTIFIER,graph,graph[u][v] = true)<SUB>10</SUB>>", "75": "<(IDENTIFIER,v,graph[u][v] = true)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,graph[v][u] = true)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,graph[v])<SUB>11</SUB>>", "81": "<(IDENTIFIER,v,graph[v][u] = true)<SUB>11</SUB>>", "83": "<(LITERAL,true,graph[v][u] = true)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; n][n])>", "89": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "91": "<(IDENTIFIER,n,new long[1 &lt;&lt; n][n])<SUB>14</SUB>>", "93": "<(LOCAL,int i: int)<SUB>16</SUB>>", "95": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>16</SUB>>", "99": "<(IDENTIFIER,n,i &lt; n)<SUB>16</SUB>>", "101": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i][i])<SUB>17</SUB>>", "105": "<(IDENTIFIER,dp,dp[1 &lt;&lt; i][i] = 1)<SUB>17</SUB>>", "107": "<(LITERAL,1,1 &lt;&lt; i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,i,dp[1 &lt;&lt; i][i] = 1)<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>19</SUB>>", "115": "<(LITERAL,1,int mask = 1)<SUB>19</SUB>>", "117": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>19</SUB>>", "119": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>19</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.assignment,int first = Integer.numberOfTrailingZeros(mask))<SUB>21</SUB>>", "127": "<(numberOfTrailingZeros,Integer.numberOfTrailingZeros(mask))<SUB>21</SUB>>", "129": "<(IDENTIFIER,mask,Integer.numberOfTrailingZeros(mask))<SUB>21</SUB>>", "131": "<(LOCAL,int i: int)<SUB>23</SUB>>", "133": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>23</SUB>>", "137": "<(IDENTIFIER,n,i &lt; n)<SUB>23</SUB>>", "139": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "141": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; i)) == 0 || first == i),if ((mask &amp; (1 &lt;&lt; i)) == 0 || first == i))<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "145": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>24</SUB>>", "147": "<(LITERAL,1,1 &lt;&lt; i)<SUB>24</SUB>>", "149": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) == 0)<SUB>24</SUB>>", "151": "<(IDENTIFIER,first,first == i)<SUB>24</SUB>>", "153": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>25</SUB>>", "155": "<(LOCAL,int j: int)<SUB>27</SUB>>", "157": "<(IDENTIFIER,j,int j = 0)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>27</SUB>>", "161": "<(IDENTIFIER,n,j &lt; n)<SUB>27</SUB>>", "163": "<(IDENTIFIER,j,j++)<SUB>27</SUB>>", "165": "<(CONTROL_STRUCTURE,if (graph[i][j]),if (graph[i][j]))<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,graph[i])<SUB>28</SUB>>", "169": "<(IDENTIFIER,i,if (graph[i][j]))<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>29</SUB>>", "175": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "179": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "181": "<(IDENTIFIER,mask,mask ^ 1 &lt;&lt; i)<SUB>29</SUB>>", "183": "<(LITERAL,1,1 &lt;&lt; i)<SUB>29</SUB>>", "185": "<(IDENTIFIER,j,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "187": "<(&lt;operator&gt;.assignment,long answer = 0)<SUB>34</SUB>>", "189": "<(LITERAL,0,long answer = 0)<SUB>34</SUB>>", "191": "<(LOCAL,int mask: int)<SUB>35</SUB>>", "193": "<(IDENTIFIER,mask,int mask = 1)<SUB>35</SUB>>", "195": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>35</SUB>>", "199": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>35</SUB>>", "201": "<(IDENTIFIER,mask,mask++)<SUB>35</SUB>>", "203": "<(CONTROL_STRUCTURE,if (Integer.bitCount(mask) &lt; 3),if (Integer.bitCount(mask) &lt; 3))<SUB>36</SUB>>", "205": "<(bitCount,Integer.bitCount(mask))<SUB>36</SUB>>", "207": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>36</SUB>>", "209": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>37</SUB>>", "211": "<(&lt;operator&gt;.assignment,int first = Integer.numberOfTrailingZeros(mask))<SUB>39</SUB>>", "213": "<(numberOfTrailingZeros,Integer.numberOfTrailingZeros(mask))<SUB>39</SUB>>", "215": "<(IDENTIFIER,mask,Integer.numberOfTrailingZeros(mask))<SUB>39</SUB>>", "217": "<(LOCAL,int i: int)<SUB>40</SUB>>", "219": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "221": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>40</SUB>>", "223": "<(IDENTIFIER,n,i &lt; n)<SUB>40</SUB>>", "225": "<(IDENTIFIER,i,i++)<SUB>40</SUB>>", "227": "<(CONTROL_STRUCTURE,if (graph[first][i]),if (graph[first][i]))<SUB>41</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,graph[first])<SUB>41</SUB>>", "231": "<(IDENTIFIER,first,if (graph[first][i]))<SUB>41</SUB>>", "233": "<(&lt;operator&gt;.assignmentPlus,answer += dp[mask][i])<SUB>42</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>42</SUB>>", "237": "<(IDENTIFIER,dp,answer += dp[mask][i])<SUB>42</SUB>>", "239": "<(IDENTIFIER,i,answer += dp[mask][i])<SUB>42</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "245": "<(IDENTIFIER,answer,answer / 2)<SUB>46</SUB>>", "247": "<(close,close())<SUB>47</SUB>>", "249": "<(MODIFIER,PUBLIC)>", "251": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}