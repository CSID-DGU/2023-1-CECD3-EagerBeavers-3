{"edges": [["19", "21"], ["19", "139"], ["19", "140"], ["19", "141"], ["21", "22"], ["21", "27"], ["21", "28"], ["21", "29"], ["21", "33"], ["21", "4"], ["21", "37"], ["21", "40"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "63"], ["21", "66"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["40", "3"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "84"], ["66", "91"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "81"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["92", "93"], ["92", "133"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["104", "105"], ["104", "112"], ["104", "117"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["118", "119"], ["119", "120"], ["119", "128"], ["120", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["22", "31"], ["29", "35"], ["33", "39"], ["37", "40"], ["40", "44"], ["42", "48"], ["63", "68"], ["24", "22"], ["31", "29"], ["35", "33"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "63"], ["54", "51"], ["67", "87"], ["67", "95"], ["84", "141"], ["26", "24"], ["57", "54"], ["68", "67"], ["68", "78"], ["71", "67"], ["85", "88"], ["88", "84"], ["58", "61"], ["61", "57"], ["73", "71"], ["87", "85"], ["133", "141"], ["74", "81"], ["81", "73"], ["95", "98"], ["98", "107"], ["98", "136"], ["101", "98"], ["134", "137"], ["137", "133"], ["76", "74"], ["136", "134"], ["78", "76"], ["105", "114"], ["105", "124"], ["112", "101"], ["106", "105"], ["114", "112"], ["107", "106"], ["120", "130"], ["120", "101"], ["128", "101"], ["121", "120"], ["130", "128"], ["123", "121"], ["124", "123"], ["19", "26"], ["20", "141"], ["22", "141"], ["22", "141"], ["29", "141"], ["33", "141"], ["35", "141"], ["33", "141"], ["33", "141"], ["37", "141"], ["40", "141"], ["40", "141"], ["42", "141"], ["42", "141"], ["48", "141"], ["51", "141"], ["51", "141"], ["63", "141"], ["63", "141"], ["67", "141"], ["71", "141"], ["74", "141"], ["73", "141"], ["73", "141"], ["71", "141"], ["67", "141"], ["67", "141"], ["84", "141"], ["88", "141"], ["84", "141"], ["84", "141"], ["57", "141"], ["61", "141"], ["57", "141"], ["57", "141"], ["54", "141"], ["63", "141"], ["19", "20"], ["31", "29"], ["35", "33"], ["19", "37"], ["44", "42"], ["19", "22"], ["37", "40"], ["19", "40"], ["19", "48"], ["19", "63"], ["42", "63"], ["57", "63"], ["22", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["29", "44"], ["19", "44"], ["48", "51"], ["54", "51"], ["19", "51"], ["44", "51"], ["51", "54"], ["19", "54"], ["61", "57"], ["68", "67"], ["68", "67"], ["71", "67"], ["71", "67"], ["88", "84"], ["88", "84"], ["51", "68"], ["19", "68"], ["33", "71"], ["19", "71"], ["73", "71"], ["73", "71"], ["68", "88"], ["78", "88"], ["19", "88"], ["35", "61"], ["19", "61"], ["74", "73"], ["74", "73"], ["63", "73"], ["19", "95"], ["137", "133"], ["19", "74"], ["63", "74"], ["95", "98"], ["101", "98"], ["19", "98"], ["68", "98"], ["78", "98"], ["98", "101"], ["19", "101"], ["40", "137"], ["121", "137"], ["128", "137"], ["112", "137"], ["19", "137"], ["68", "78"], ["19", "78"], ["106", "105"], ["106", "105"], ["19", "105"], ["40", "112"], ["121", "112"], ["128", "112"], ["19", "112"], ["63", "112"], ["106", "112"], ["63", "106"], ["123", "106"], ["128", "106"], ["112", "106"], ["57", "106"], ["33", "106"], ["71", "106"], ["123", "106"], ["19", "106"], ["121", "120"], ["121", "120"], ["121", "128"], ["19", "128"], ["63", "128"], ["123", "128"], ["40", "121"], ["128", "121"], ["112", "121"], ["19", "121"], ["123", "121"], ["123", "121"], ["63", "123"], ["106", "123"], ["106", "123"], ["19", "123"], ["51", "51"], ["51", "57"], ["51", "54"], ["51", "58"], ["51", "61"], ["67", "98"], ["67", "136"], ["67", "84"], ["67", "85"], ["67", "95"], ["67", "87"], ["67", "134"], ["67", "137"], ["67", "88"], ["67", "133"], ["68", "73"], ["68", "81"], ["68", "74"], ["68", "76"], ["68", "71"], ["68", "78"], ["98", "107"], ["98", "98"], ["98", "106"], ["98", "101"], ["98", "105"], ["105", "120"], ["105", "114"], ["105", "121"], ["105", "123"], ["105", "112"], ["105", "124"], ["120", "128"], ["120", "130"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "23": "<(IDENTIFIER,input,init(System.in))<SUB>3</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>3</SUB>>", "27": "<(LOCAL,int n: int)<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "31": "<(nextInt,nextInt())<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "4": "<(LOCAL,TreeSet&lt;Integer&gt; ts: ANY)<SUB>5</SUB>>", "38": "<(IDENTIFIER,ts,ANY ts = new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "40": "<(&lt;init&gt;,new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "41": "<(LOCAL,int[] data: int[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,data,int[] data = new int[n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "47": "<(LOCAL,int i: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,data[i] = nextInt())<SUB>9</SUB>>", "59": "<(IDENTIFIER,data,data[i] = nextInt())<SUB>9</SUB>>", "61": "<(nextInt,nextInt())<SUB>9</SUB>>", "63": "<(sort,sort(data))<SUB>11</SUB>>", "65": "<(IDENTIFIER,data,sort(data))<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.logicalAnd,n &gt; 1 &amp;&amp; k == 1. * data[n - 1] / data[0])<SUB>12</SUB>>", "69": "<(IDENTIFIER,n,n &gt; 1)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.equals,k == 1. * data[n - 1] / data[0])<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.division,1. * data[n - 1] / data[0])<SUB>12</SUB>>", "75": "<(LITERAL,1.,1. * data[n - 1])<SUB>12</SUB>>", "77": "<(IDENTIFIER,data,1. * data[n - 1])<SUB>12</SUB>>", "79": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,data[0])<SUB>12</SUB>>", "83": "<(LITERAL,0,1. * data[n - 1] / data[0])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "87": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "89": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "91": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.notEquals,data[i] % k != 0)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>18</SUB>>", "109": "<(IDENTIFIER,i,data[i] % k)<SUB>18</SUB>>", "111": "<(LITERAL,0,data[i] % k != 0)<SUB>18</SUB>>", "113": "<(IDENTIFIER,ts,add(data[i]))<SUB>19</SUB>>", "115": "<(IDENTIFIER,data,add(data[i]))<SUB>19</SUB>>", "117": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "119": "<(CONTROL_STRUCTURE,if (!ts.contains(data[i] / k)),if (!ts.contains(data[i] / k)))<SUB>22</SUB>>", "121": "<(contains,contains(data[i] / k))<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.division,data[i] / k)<SUB>22</SUB>>", "125": "<(IDENTIFIER,data,data[i] / k)<SUB>22</SUB>>", "127": "<(IDENTIFIER,k,data[i] / k)<SUB>22</SUB>>", "129": "<(IDENTIFIER,ts,add(data[i]))<SUB>23</SUB>>", "131": "<(IDENTIFIER,data,add(data[i]))<SUB>23</SUB>>", "133": "<(println,println(ts.size()))<SUB>26</SUB>>", "135": "<(IDENTIFIER,System,println(ts.size()))<SUB>26</SUB>>", "137": "<(size,size())<SUB>26</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}