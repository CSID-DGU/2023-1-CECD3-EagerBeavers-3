{"edges": [["23", "24"], ["23", "25"], ["23", "74"], ["23", "75"], ["23", "76"], ["25", "26"], ["25", "27"], ["25", "32"], ["25", "33"], ["25", "4"], ["25", "38"], ["25", "41"], ["25", "6"], ["25", "43"], ["25", "46"], ["25", "8"], ["25", "48"], ["25", "51"], ["25", "52"], ["25", "53"], ["25", "57"], ["25", "72"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["41", "3"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "7"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "70"], ["67", "71"], ["72", "73"], ["27", "37"], ["33", "40"], ["38", "41"], ["41", "45"], ["43", "46"], ["46", "50"], ["48", "51"], ["51", "55"], ["53", "59"], ["72", "76"], ["29", "27"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["55", "53"], ["59", "62"], ["62", "67"], ["62", "72"], ["65", "62"], ["67", "65"], ["31", "29"], ["37", "35"], ["23", "31"], ["24", "76"], ["27", "76"], ["27", "76"], ["33", "76"], ["33", "76"], ["38", "76"], ["41", "76"], ["41", "76"], ["43", "76"], ["46", "76"], ["46", "76"], ["48", "76"], ["51", "76"], ["51", "76"], ["55", "76"], ["53", "76"], ["53", "76"], ["59", "76"], ["62", "76"], ["62", "76"], ["62", "76"], ["72", "76"], ["72", "76"], ["67", "76"], ["67", "76"], ["67", "76"], ["65", "76"], ["23", "24"], ["23", "38"], ["23", "43"], ["23", "48"], ["55", "53"], ["38", "41"], ["23", "41"], ["27", "41"], ["43", "46"], ["23", "46"], ["33", "46"], ["48", "51"], ["23", "51"], ["23", "59"], ["46", "72"], ["67", "72"], ["23", "72"], ["41", "55"], ["23", "55"], ["59", "62"], ["65", "62"], ["23", "62"], ["53", "62"], ["67", "65"], ["23", "65"], ["51", "67"], ["23", "67"], ["62", "67"], ["55", "67"], ["46", "67"], ["62", "67"], ["62", "65"], ["62", "62"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY inputStream = System.in)<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "31": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY outputStream = System.out)<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(inputStream))<SUB>5</SUB>>", "40": "<(&lt;operator&gt;.alloc,new InputReader(inputStream))<SUB>5</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(inputStream))<SUB>5</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>6</SUB>>", "44": "<(IDENTIFIER,out,ANY out = new PrintWriter(outputStream))<SUB>6</SUB>>", "46": "<(&lt;init&gt;,new PrintWriter(outputStream))<SUB>6</SUB>>", "47": "<(IDENTIFIER,outputStream,new PrintWriter(outputStream))<SUB>6</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY solver = new Task())<SUB>7</SUB>>", "50": "<(&lt;operator&gt;.alloc,new Task())<SUB>7</SUB>>", "7": "<(IDENTIFIER,solver,new Task())<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int tc = nextInt())<SUB>8</SUB>>", "55": "<(nextInt,nextInt())<SUB>8</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; tc); i++),for (int i = 0; Some(i &lt; tc); i++))<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,i &lt; tc)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "67": "<(solve,solve(i, in, out))<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,solve(i, in, out))<SUB>10</SUB>>", "71": "<(IDENTIFIER,out,solve(i, in, out))<SUB>10</SUB>>", "73": "<(IDENTIFIER,out,close())<SUB>11</SUB>>", "75": "<(MODIFIER,STATIC)>"}}