{"edges": [["19", "20"], ["19", "21"], ["19", "156"], ["19", "157"], ["19", "158"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["38", "44"], ["38", "45"], ["38", "49"], ["38", "50"], ["38", "51"], ["38", "54"], ["38", "57"], ["38", "154"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "63"], ["57", "71"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["72", "73"], ["72", "78"], ["72", "86"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "149"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["97", "101"], ["97", "120"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "109"], ["101", "114"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "125"], ["121", "144"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "133"], ["125", "138"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "158"], ["35", "42"], ["28", "26"], ["40", "47"], ["45", "51"], ["51", "54"], ["54", "59"], ["154", "35"], ["42", "40"], ["47", "45"], ["58", "67"], ["58", "74"], ["59", "58"], ["64", "154"], ["65", "68"], ["68", "64"], ["73", "82"], ["73", "90"], ["67", "65"], ["74", "73"], ["79", "154"], ["80", "83"], ["83", "79"], ["149", "154"], ["82", "80"], ["89", "98"], ["89", "152"], ["150", "149"], ["90", "89"], ["90", "93"], ["93", "89"], ["152", "150"], ["98", "106"], ["98", "122"], ["102", "111"], ["109", "115"], ["104", "102"], ["111", "109"], ["115", "90"], ["115", "152"], ["122", "130"], ["122", "146"], ["106", "104"], ["126", "135"], ["133", "139"], ["128", "126"], ["135", "133"], ["139", "90"], ["139", "152"], ["146", "90"], ["130", "128"], ["19", "24"], ["20", "158"], ["22", "158"], ["25", "158"], ["25", "158"], ["32", "158"], ["30", "158"], ["30", "158"], ["35", "158"], ["35", "158"], ["154", "158"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["154", "35"], ["19", "35"], ["42", "40"], ["47", "45"], ["19", "51"], ["19", "54"], ["35", "154"], ["19", "154"], ["32", "42"], ["47", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["59", "58"], ["59", "58"], ["19", "58"], ["40", "59"], ["19", "59"], ["45", "59"], ["146", "64"], ["149", "64"], ["79", "64"], ["68", "64"], ["68", "64"], ["59", "68"], ["19", "68"], ["59", "68"], ["74", "73"], ["74", "73"], ["19", "73"], ["59", "74"], ["19", "74"], ["59", "74"], ["146", "79"], ["149", "79"], ["64", "79"], ["83", "79"], ["83", "79"], ["74", "83"], ["19", "83"], ["74", "83"], ["146", "149"], ["79", "149"], ["64", "149"], ["51", "149"], ["126", "149"], ["102", "149"], ["19", "149"], ["90", "89"], ["90", "89"], ["93", "89"], ["93", "89"], ["74", "90"], ["122", "90"], ["135", "90"], ["115", "90"], ["19", "90"], ["74", "93"], ["122", "93"], ["139", "93"], ["111", "93"], ["19", "93"], ["90", "98"], ["19", "98"], ["74", "98"], ["93", "98"], ["122", "98"], ["139", "98"], ["111", "98"], ["51", "102"], ["126", "102"], ["19", "102"], ["106", "102"], ["106", "102"], ["111", "109"], ["111", "109"], ["51", "104"], ["126", "104"], ["102", "104"], ["19", "104"], ["106", "104"], ["106", "104"], ["106", "111"], ["19", "111"], ["106", "111"], ["109", "115"], ["19", "115"], ["98", "122"], ["19", "122"], ["98", "122"], ["51", "126"], ["102", "126"], ["19", "126"], ["130", "126"], ["130", "126"], ["135", "133"], ["135", "133"], ["98", "106"], ["19", "106"], ["98", "106"], ["51", "128"], ["126", "128"], ["102", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["130", "135"], ["19", "135"], ["130", "135"], ["133", "139"], ["19", "139"], ["25", "146"], ["149", "146"], ["79", "146"], ["64", "146"], ["19", "146"], ["122", "130"], ["19", "130"], ["122", "130"], ["35", "42"], ["35", "51"], ["35", "154"], ["35", "40"], ["35", "59"], ["35", "35"], ["35", "54"], ["35", "58"], ["35", "47"], ["35", "45"], ["58", "68"], ["58", "73"], ["58", "64"], ["58", "67"], ["58", "74"], ["58", "65"], ["73", "149"], ["73", "150"], ["73", "90"], ["73", "79"], ["73", "80"], ["73", "152"], ["73", "89"], ["73", "82"], ["73", "83"], ["89", "98"], ["90", "93"], ["98", "115"], ["98", "102"], ["98", "104"], ["98", "111"], ["98", "122"], ["98", "106"], ["98", "109"], ["115", "90"], ["115", "89"], ["122", "146"], ["122", "128"], ["122", "90"], ["122", "130"], ["122", "139"], ["122", "89"], ["122", "126"], ["122", "135"], ["122", "133"], ["139", "90"], ["139", "89"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int t: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,t,t = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.notEquals,t != 0)<SUB>6</SUB>>", "37": "<(LITERAL,0,t != 0)<SUB>6</SUB>>", "39": "<(LOCAL,int a: int)<SUB>8</SUB>>", "41": "<(IDENTIFIER,a,int a = nextInt())<SUB>8</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>9</SUB>>", "47": "<(nextInt,nextInt())<SUB>9</SUB>>", "49": "<(LOCAL,int total: int)<SUB>10</SUB>>", "51": "<(&lt;operator&gt;.assignment,int total = 0)<SUB>10</SUB>>", "53": "<(LITERAL,0,int total = 0)<SUB>10</SUB>>", "55": "<(IDENTIFIER,neww,int neww = 0)<SUB>10</SUB>>", "57": "<(CONTROL_STRUCTURE,if (a % b == 0),if (a % b == 0))<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.modulo,a % b)<SUB>11</SUB>>", "61": "<(IDENTIFIER,b,a % b)<SUB>11</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "67": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "69": "<(IDENTIFIER,a,a / b)<SUB>13</SUB>>", "71": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.equals,b % a == 0)<SUB>15</SUB>>", "75": "<(IDENTIFIER,b,b % a)<SUB>15</SUB>>", "77": "<(LITERAL,0,b % a == 0)<SUB>15</SUB>>", "79": "<(println,System.out.println(b / a))<SUB>17</SUB>>", "81": "<(IDENTIFIER,System,System.out.println(b / a))<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.division,b / a)<SUB>17</SUB>>", "85": "<(IDENTIFIER,a,b / a)<SUB>17</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "89": "<(&lt;operator&gt;.logicalAnd,a != 0 &amp;&amp; b != 0)<SUB>21</SUB>>", "91": "<(IDENTIFIER,a,a != 0)<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.notEquals,b != 0)<SUB>21</SUB>>", "95": "<(LITERAL,0,b != 0)<SUB>21</SUB>>", "97": "<(CONTROL_STRUCTURE,if (a &gt; b),if (a &gt; b))<SUB>23</SUB>>", "99": "<(IDENTIFIER,a,a &gt; b)<SUB>23</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "103": "<(IDENTIFIER,total,total = total + (a / b))<SUB>25</SUB>>", "105": "<(IDENTIFIER,total,total + (a / b))<SUB>25</SUB>>", "107": "<(IDENTIFIER,a,a / b)<SUB>25</SUB>>", "109": "<(&lt;operator&gt;.assignment,a = a % b)<SUB>26</SUB>>", "111": "<(&lt;operator&gt;.modulo,a % b)<SUB>26</SUB>>", "113": "<(IDENTIFIER,b,a % b)<SUB>26</SUB>>", "115": "<(&lt;operator&gt;.equals,a == 0)<SUB>27</SUB>>", "117": "<(LITERAL,0,a == 0)<SUB>27</SUB>>", "119": "<(CONTROL_STRUCTURE,break;,break;)<SUB>29</SUB>>", "121": "<(CONTROL_STRUCTURE,if (b &gt; a),if (b &gt; a))<SUB>32</SUB>>", "123": "<(IDENTIFIER,b,b &gt; a)<SUB>32</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "127": "<(IDENTIFIER,total,total = total + (b / a))<SUB>34</SUB>>", "129": "<(IDENTIFIER,total,total + (b / a))<SUB>34</SUB>>", "131": "<(IDENTIFIER,b,b / a)<SUB>34</SUB>>", "133": "<(&lt;operator&gt;.assignment,b = b % a)<SUB>35</SUB>>", "135": "<(&lt;operator&gt;.modulo,b % a)<SUB>35</SUB>>", "137": "<(IDENTIFIER,a,b % a)<SUB>35</SUB>>", "139": "<(&lt;operator&gt;.equals,b == 0)<SUB>36</SUB>>", "141": "<(LITERAL,0,b == 0)<SUB>36</SUB>>", "143": "<(CONTROL_STRUCTURE,break;,break;)<SUB>38</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "147": "<(IDENTIFIER,System,System.exit(0))<SUB>43</SUB>>", "149": "<(println,System.out.println(total))<SUB>46</SUB>>", "151": "<(IDENTIFIER,System,System.out.println(total))<SUB>46</SUB>>", "153": "<(IDENTIFIER,total,System.out.println(total))<SUB>46</SUB>>", "155": "<(IDENTIFIER,t,t--)<SUB>48</SUB>>", "157": "<(MODIFIER,STATIC)>"}}