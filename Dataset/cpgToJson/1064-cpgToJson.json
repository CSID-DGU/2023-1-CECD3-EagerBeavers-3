{"edges": [["19", "21"], ["19", "145"], ["19", "146"], ["19", "147"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "45"], ["21", "46"], ["21", "49"], ["21", "50"], ["21", "53"], ["21", "54"], ["21", "62"], ["21", "63"], ["21", "66"], ["21", "67"], ["21", "70"], ["21", "73"], ["21", "134"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["58", "61"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "92"], ["77", "118"], ["77", "132"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["85", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "105"], ["96", "117"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["101", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "116"], ["110", "111"], ["110", "112"], ["110", "113"], ["113", "114"], ["113", "115"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "129"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["125", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "141"], ["138", "142"], ["138", "143"], ["138", "144"], ["22", "29"], ["25", "41"], ["37", "43"], ["43", "46"], ["46", "50"], ["50", "57"], ["54", "63"], ["63", "67"], ["67", "70"], ["70", "74"], ["134", "147"], ["24", "22"], ["39", "37"], ["56", "54"], ["74", "81"], ["74", "137"], ["135", "138"], ["138", "134"], ["27", "34"], ["30", "25"], ["41", "39"], ["57", "58"], ["58", "56"], ["78", "93"], ["118", "132"], ["132", "74"], ["137", "135"], ["29", "27"], ["32", "30"], ["80", "78"], ["93", "100"], ["93", "121"], ["120", "118"], ["34", "32"], ["81", "85"], ["82", "80"], ["97", "108"], ["105", "137"], ["121", "125"], ["122", "120"], ["83", "89"], ["89", "82"], ["99", "97"], ["107", "105"], ["123", "129"], ["129", "122"], ["85", "83"], ["100", "101"], ["101", "99"], ["108", "113"], ["109", "107"], ["125", "123"], ["110", "109"], ["113", "110"], ["19", "24"], ["20", "147"], ["22", "147"], ["27", "147"], ["30", "147"], ["30", "147"], ["30", "147"], ["25", "147"], ["39", "147"], ["37", "147"], ["37", "147"], ["43", "147"], ["43", "147"], ["46", "147"], ["50", "147"], ["58", "147"], ["56", "147"], ["54", "147"], ["54", "147"], ["63", "147"], ["67", "147"], ["70", "147"], ["74", "147"], ["74", "147"], ["82", "147"], ["80", "147"], ["78", "147"], ["78", "147"], ["93", "147"], ["93", "147"], ["125", "147"], ["123", "147"], ["122", "147"], ["122", "147"], ["120", "147"], ["118", "147"], ["118", "147"], ["132", "147"], ["99", "147"], ["97", "147"], ["97", "147"], ["110", "147"], ["110", "147"], ["109", "147"], ["107", "147"], ["105", "147"], ["105", "147"], ["134", "147"], ["138", "147"], ["138", "147"], ["138", "147"], ["138", "147"], ["138", "147"], ["134", "147"], ["134", "147"], ["39", "147"], ["138", "147"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["19", "46"], ["19", "50"], ["19", "54"], ["58", "54"], ["58", "54"], ["58", "54"], ["19", "63"], ["19", "67"], ["37", "70"], ["19", "70"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["41", "43"], ["19", "43"], ["67", "70"], ["138", "134"], ["138", "134"], ["138", "134"], ["138", "134"], ["138", "134"], ["138", "134"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["19", "56"], ["58", "56"], ["58", "56"], ["58", "56"], ["70", "74"], ["93", "74"], ["19", "74"], ["19", "78"], ["82", "78"], ["82", "78"], ["19", "118"], ["122", "118"], ["122", "118"], ["19", "138"], ["50", "138"], ["97", "138"], ["54", "138"], ["105", "138"], ["63", "138"], ["118", "138"], ["46", "138"], ["132", "138"], ["101", "138"], ["37", "138"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["19", "58"], ["74", "78"], ["63", "118"], ["19", "132"], ["125", "132"], ["19", "80"], ["82", "80"], ["82", "80"], ["78", "93"], ["19", "93"], ["19", "97"], ["101", "97"], ["101", "97"], ["101", "97"], ["19", "105"], ["109", "105"], ["109", "105"], ["19", "120"], ["122", "120"], ["122", "120"], ["83", "82"], ["83", "82"], ["85", "82"], ["19", "82"], ["123", "122"], ["123", "122"], ["125", "122"], ["19", "122"], ["19", "83"], ["85", "83"], ["85", "83"], ["85", "83"], ["85", "89"], ["19", "89"], ["19", "99"], ["101", "99"], ["101", "99"], ["101", "99"], ["19", "107"], ["109", "107"], ["109", "107"], ["19", "123"], ["125", "123"], ["125", "123"], ["125", "123"], ["125", "129"], ["19", "129"], ["58", "85"], ["125", "85"], ["19", "85"], ["46", "85"], ["132", "85"], ["85", "101"], ["19", "101"], ["85", "101"], ["110", "109"], ["110", "109"], ["110", "109"], ["19", "109"], ["85", "125"], ["19", "125"], ["85", "125"], ["101", "110"], ["19", "110"], ["101", "110"], ["101", "113"], ["19", "113"], ["74", "89"], ["74", "81"], ["74", "85"], ["74", "82"], ["74", "93"], ["74", "80"], ["74", "83"], ["74", "78"], ["93", "107"], ["93", "120"], ["93", "113"], ["93", "122"], ["93", "99"], ["93", "132"], ["93", "74"], ["93", "121"], ["93", "123"], ["93", "97"], ["93", "129"], ["93", "101"], ["93", "105"], ["93", "118"], ["93", "100"], ["93", "110"], ["93", "108"], ["93", "125"], ["93", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY inputs = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,inputs,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,long indexPosition = parseLong(inputs.readLine()))<SUB>4</SUB>>", "39": "<(parseLong,parseLong(inputs.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(close,close())<SUB>6</SUB>>", "45": "<(LOCAL,int tenFactor: int)<SUB>9</SUB>>", "47": "<(IDENTIFIER,tenFactor,int tenFactor = 0)<SUB>9</SUB>>", "49": "<(LOCAL,long lowerBound: long)<SUB>10</SUB>>", "51": "<(IDENTIFIER,lowerBound,long lowerBound = 1)<SUB>10</SUB>>", "53": "<(LOCAL,long upperBound: long)<SUB>11</SUB>>", "55": "<(IDENTIFIER,upperBound,long upperBound = (long) (Math.pow(10, 12)))<SUB>11</SUB>>", "57": "<(TYPE_REF,long,long)<SUB>11</SUB>>", "59": "<(IDENTIFIER,Math,Math.pow(10, 12))<SUB>11</SUB>>", "61": "<(LITERAL,12,Math.pow(10, 12))<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.assignment,long lowerIndexBound = 1)<SUB>12</SUB>>", "65": "<(LITERAL,1,long lowerIndexBound = 1)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,long redIndex = 0)<SUB>13</SUB>>", "69": "<(LITERAL,0,long redIndex = 0)<SUB>13</SUB>>", "71": "<(IDENTIFIER,redIndex,redIndex += indexPosition)<SUB>14</SUB>>", "73": "<(CONTROL_STRUCTURE,while (redIndex &gt; 0),while (redIndex &gt; 0))<SUB>16</SUB>>", "75": "<(IDENTIFIER,redIndex,redIndex &gt; 0)<SUB>16</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "79": "<(IDENTIFIER,redIndex,redIndex -= (long) (9 * Math.pow(10, tenFactor) * (tenFactor + 1)))<SUB>17</SUB>>", "81": "<(TYPE_REF,long,long)<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.multiplication,9 * Math.pow(10, tenFactor))<SUB>17</SUB>>", "85": "<(pow,Math.pow(10, tenFactor))<SUB>17</SUB>>", "87": "<(LITERAL,10,Math.pow(10, tenFactor))<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.addition,tenFactor + 1)<SUB>17</SUB>>", "91": "<(LITERAL,1,tenFactor + 1)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.lessEqualsThan,redIndex &lt;= 0)<SUB>18</SUB>>", "95": "<(LITERAL,0,redIndex &lt;= 0)<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.assignment,lowerBound = (long) (Math.pow(10, tenFactor)))<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.cast,(long) (Math.pow(10, tenFactor)))<SUB>19</SUB>>", "101": "<(pow,Math.pow(10, tenFactor))<SUB>19</SUB>>", "103": "<(LITERAL,10,Math.pow(10, tenFactor))<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.assignment,upperBound = (long) (Math.pow(10, tenFactor + 1) - 1))<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.cast,(long) (Math.pow(10, tenFactor + 1) - 1))<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.subtraction,Math.pow(10, tenFactor + 1) - 1)<SUB>20</SUB>>", "111": "<(IDENTIFIER,Math,Math.pow(10, tenFactor + 1))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.addition,tenFactor + 1)<SUB>20</SUB>>", "115": "<(LITERAL,1,tenFactor + 1)<SUB>20</SUB>>", "117": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "119": "<(IDENTIFIER,lowerIndexBound,lowerIndexBound += (long) (9 * Math.pow(10, tenFactor) * (tenFactor + 1)))<SUB>24</SUB>>", "121": "<(TYPE_REF,long,long)<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.multiplication,9 * Math.pow(10, tenFactor))<SUB>24</SUB>>", "125": "<(pow,Math.pow(10, tenFactor))<SUB>24</SUB>>", "127": "<(LITERAL,10,Math.pow(10, tenFactor))<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.addition,tenFactor + 1)<SUB>24</SUB>>", "131": "<(LITERAL,1,tenFactor + 1)<SUB>24</SUB>>", "133": "<(IDENTIFIER,tenFactor,tenFactor++)<SUB>25</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "139": "<(IDENTIFIER,this,custBinSearch(lowerBound, upperBound, lowerIndexBound, tenFactor, indexPosition))<SUB>29</SUB>>", "141": "<(IDENTIFIER,upperBound,custBinSearch(lowerBound, upperBound, lowerIndexBound, tenFactor, indexPosition))<SUB>29</SUB>>", "143": "<(IDENTIFIER,tenFactor,custBinSearch(lowerBound, upperBound, lowerIndexBound, tenFactor, indexPosition))<SUB>29</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}