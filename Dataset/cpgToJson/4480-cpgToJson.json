{"edges": [["21", "22"], ["21", "23"], ["21", "140"], ["21", "141"], ["21", "142"], ["23", "24"], ["23", "25"], ["23", "31"], ["23", "32"], ["23", "35"], ["23", "36"], ["23", "41"], ["23", "42"], ["23", "4"], ["23", "79"], ["23", "82"], ["23", "92"], ["23", "118"], ["23", "138"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "30"], ["28", "29"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["44", "65"], ["46", "47"], ["46", "50"], ["46", "64"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "60"], ["50", "63"], ["52", "53"], ["52", "56"], ["52", "59"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["65", "66"], ["65", "69"], ["65", "78"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["79", "80"], ["79", "81"], ["82", "3"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "88"], ["84", "91"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["92", "114"], ["94", "6"], ["94", "95"], ["94", "98"], ["94", "105"], ["94", "110"], ["94", "112"], ["95", "96"], ["95", "97"], ["98", "5"], ["98", "99"], ["98", "100"], ["98", "101"], ["98", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["114", "115"], ["115", "116"], ["116", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "137"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "133"], ["130", "131"], ["131", "132"], ["133", "134"], ["134", "135"], ["138", "139"], ["25", "32"], ["32", "38"], ["36", "49"], ["36", "68"], ["42", "81"], ["79", "87"], ["82", "93"], ["138", "142"], ["27", "25"], ["38", "36"], ["44", "42"], ["81", "79"], ["93", "97"], ["93", "116"], ["119", "124"], ["119", "138"], ["28", "27"], ["85", "88"], ["88", "82"], ["95", "102"], ["98", "109"], ["105", "110"], ["110", "112"], ["112", "119"], ["121", "138"], ["47", "55"], ["50", "44"], ["66", "73"], ["69", "44"], ["87", "85"], ["97", "95"], ["102", "98"], ["107", "105"], ["116", "119"], ["122", "131"], ["125", "121"], ["49", "47"], ["60", "50"], ["68", "66"], ["71", "76"], ["74", "69"], ["109", "107"], ["124", "122"], ["126", "125"], ["53", "56"], ["56", "62"], ["62", "60"], ["73", "71"], ["76", "74"], ["128", "126"], ["55", "53"], ["129", "128"], ["130", "134"], ["133", "129"], ["131", "130"], ["134", "133"], ["21", "28"], ["22", "142"], ["28", "142"], ["27", "142"], ["25", "142"], ["25", "142"], ["32", "142"], ["32", "142"], ["36", "142"], ["36", "142"], ["69", "142"], ["69", "142"], ["69", "142"], ["69", "142"], ["69", "142"], ["50", "142"], ["56", "142"], ["56", "142"], ["50", "142"], ["50", "142"], ["50", "142"], ["42", "142"], ["42", "142"], ["79", "142"], ["85", "142"], ["88", "142"], ["88", "142"], ["88", "142"], ["82", "142"], ["116", "142"], ["116", "142"], ["95", "142"], ["98", "142"], ["98", "142"], ["98", "142"], ["105", "142"], ["105", "142"], ["110", "142"], ["112", "142"], ["112", "142"], ["129", "142"], ["134", "142"], ["133", "142"], ["129", "142"], ["128", "142"], ["126", "142"], ["125", "142"], ["121", "142"], ["121", "142"], ["138", "142"], ["138", "142"], ["38", "142"], ["21", "22"], ["27", "25"], ["27", "25"], ["21", "32"], ["38", "36"], ["38", "36"], ["66", "42"], ["53", "42"], ["50", "42"], ["69", "42"], ["21", "79"], ["79", "82"], ["21", "82"], ["42", "82"], ["85", "82"], ["88", "82"], ["21", "93"], ["21", "119"], ["82", "138"], ["121", "138"], ["21", "138"], ["28", "27"], ["21", "27"], ["21", "38"], ["66", "44"], ["53", "44"], ["50", "44"], ["69", "44"], ["21", "85"], ["21", "91"], ["21", "95"], ["21", "28"], ["21", "47"], ["21", "64"], ["21", "66"], ["21", "78"], ["85", "88"], ["21", "88"], ["95", "98"], ["21", "98"], ["82", "98"], ["102", "98"], ["102", "98"], ["98", "105"], ["21", "105"], ["105", "110"], ["21", "110"], ["110", "112"], ["21", "112"], ["82", "121"], ["21", "121"], ["128", "121"], ["128", "121"], ["47", "50"], ["21", "50"], ["53", "50"], ["56", "50"], ["28", "50"], ["36", "50"], ["66", "69"], ["21", "69"], ["28", "69"], ["36", "69"], ["21", "102"], ["82", "116"], ["21", "116"], ["21", "125"], ["128", "125"], ["128", "125"], ["21", "53"], ["21", "59"], ["21", "126"], ["128", "126"], ["128", "126"], ["53", "56"], ["21", "56"], ["129", "128"], ["129", "128"], ["21", "128"], ["130", "129"], ["133", "129"], ["131", "130"], ["134", "133"], ["21", "131"], ["131", "134"], ["21", "134"], ["93", "107"], ["93", "98"], ["93", "116"], ["93", "102"], ["93", "95"], ["93", "97"], ["93", "112"], ["93", "105"], ["93", "110"], ["93", "109"], ["119", "122"], ["119", "128"], ["119", "131"], ["119", "121"], ["119", "129"], ["119", "134"], ["119", "126"], ["119", "130"], ["119", "124"], ["119", "125"], ["119", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,boolean local = System.getSecurityManager() == null)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.equals,System.getSecurityManager() == null)<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,System.getSecurityManager())<SUB>2</SUB>>", "31": "<(LOCAL,boolean async: boolean)<SUB>3</SUB>>", "33": "<(IDENTIFIER,async,boolean async = false)<SUB>3</SUB>>", "35": "<(LOCAL,Charset charset: ANY)<SUB>5</SUB>>", "37": "<(IDENTIFIER,charset,ANY charset = forName(&quot;ascii&quot;))<SUB>5</SUB>>", "39": "<(IDENTIFIER,Charset,forName(&quot;ascii&quot;))<SUB>5</SUB>>", "41": "<(LOCAL,FastIO io: ANY)<SUB>7</SUB>>", "43": "<(IDENTIFIER,io,ANY io = local ? new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset) : new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "45": "<(IDENTIFIER,local,local ? new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset) : new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset))<SUB>7</SUB>>", "51": "<(IDENTIFIER,$obj1,new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset))>", "53": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "55": "<(&lt;operator&gt;.alloc,new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;))<SUB>7</SUB>>", "57": "<(IDENTIFIER,$obj0,new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;))>", "59": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "61": "<(IDENTIFIER,System,new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset))<SUB>7</SUB>>", "63": "<(IDENTIFIER,charset,new FastIO(new FileInputStream(&quot;D:\\\\DATABASE\\\\TESTCASE\\\\Code.in&quot;), System.out, charset))<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "67": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "69": "<(&lt;init&gt;,new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>7</SUB>>", "73": "<(FIELD_IDENTIFIER,in,in)<SUB>7</SUB>>", "75": "<(IDENTIFIER,System,new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "77": "<(IDENTIFIER,charset,new FastIO(System.in, System.out, charset))<SUB>7</SUB>>", "4": "<(LOCAL,Task task: ANY)<SUB>8</SUB>>", "80": "<(IDENTIFIER,task,ANY task = new Task(io, new Debug(local)))<SUB>8</SUB>>", "82": "<(&lt;init&gt;,new Task(io, new Debug(local)))<SUB>8</SUB>>", "83": "<(IDENTIFIER,io,new Task(io, new Debug(local)))<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "87": "<(&lt;operator&gt;.alloc,new Debug(local))<SUB>8</SUB>>", "89": "<(IDENTIFIER,$obj3,new Debug(local))>", "91": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "93": "<(IDENTIFIER,async,if (async))<SUB>10</SUB>>", "6": "<(LOCAL,Thread t: java.lang.Thread)<SUB>11</SUB>>", "96": "<(IDENTIFIER,t,Thread t = new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "98": "<(&lt;init&gt;,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "99": "<(LITERAL,null,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "101": "<(LITERAL,&quot;dalt&quot;,new Thread(null, task, &quot;dalt&quot;, 1 &lt;&lt; 27))<SUB>11</SUB>>", "103": "<(LITERAL,1,1 &lt;&lt; 27)<SUB>11</SUB>>", "105": "<(setPriority,t.setPriority(Thread.MAX_PRIORITY))<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,Thread.MAX_PRIORITY)<SUB>12</SUB>>", "109": "<(FIELD_IDENTIFIER,MAX_PRIORITY,MAX_PRIORITY)<SUB>12</SUB>>", "111": "<(IDENTIFIER,t,t.start())<SUB>13</SUB>>", "113": "<(IDENTIFIER,t,t.join())<SUB>14</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "117": "<(IDENTIFIER,task,run())<SUB>16</SUB>>", "119": "<(IDENTIFIER,local,if (local))<SUB>19</SUB>>", "121": "<(append,append(&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20) + &quot;M&quot;))<SUB>20</SUB>>", "123": "<(IDENTIFIER,io,append(&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20) + &quot;M&quot;))<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.addition,&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20) + &quot;M&quot;)<SUB>20</SUB>>", "127": "<(LITERAL,&quot;\\n\\n--memory -- \\n&quot;,&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20))<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.subtraction,Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory())<SUB>20</SUB>>", "131": "<(getRuntime,Runtime.getRuntime())<SUB>20</SUB>>", "133": "<(freeMemory,Runtime.getRuntime().freeMemory())<SUB>20</SUB>>", "135": "<(IDENTIFIER,Runtime,Runtime.getRuntime())<SUB>20</SUB>>", "137": "<(LITERAL,&quot;M&quot;,&quot;\\n\\n--memory -- \\n&quot; + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) &gt;&gt; 20) + &quot;M&quot;)<SUB>20</SUB>>", "139": "<(IDENTIFIER,io,flush())<SUB>23</SUB>>", "141": "<(MODIFIER,STATIC)>"}}