{"edges": [["17", "19"], ["17", "141"], ["17", "142"], ["17", "143"], ["19", "20"], ["19", "21"], ["19", "22"], ["19", "23"], ["19", "24"], ["19", "28"], ["19", "34"], ["19", "39"], ["19", "42"], ["19", "71"], ["19", "81"], ["19", "136"], ["24", "25"], ["24", "26"], ["26", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "63"], ["53", "54"], ["53", "59"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["63", "69"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "74"], ["74", "75"], ["74", "78"], ["74", "80"], ["75", "76"], ["75", "77"], ["78", "79"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "122"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "107"], ["96", "97"], ["96", "102"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "115"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "126"], ["122", "129"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["24", "32"], ["28", "36"], ["34", "39"], ["39", "44"], ["71", "83"], ["136", "143"], ["26", "24"], ["30", "28"], ["36", "34"], ["44", "47"], ["47", "55"], ["47", "77"], ["50", "47"], ["83", "86"], ["86", "98"], ["86", "139"], ["89", "86"], ["137", "136"], ["32", "30"], ["53", "65"], ["63", "50"], ["75", "78"], ["78", "71"], ["93", "123"], ["139", "137"], ["54", "61"], ["59", "53"], ["64", "69"], ["69", "63"], ["77", "75"], ["95", "93"], ["123", "126"], ["123", "131"], ["126", "89"], ["55", "54"], ["61", "59"], ["65", "64"], ["96", "111"], ["107", "95"], ["97", "103"], ["102", "96"], ["108", "118"], ["115", "107"], ["131", "134"], ["131", "89"], ["134", "89"], ["98", "97"], ["103", "102"], ["109", "108"], ["116", "115"], ["111", "109"], ["118", "116"], ["17", "26"], ["18", "143"], ["24", "143"], ["28", "143"], ["32", "143"], ["30", "143"], ["28", "143"], ["28", "143"], ["34", "143"], ["34", "143"], ["39", "143"], ["44", "143"], ["71", "143"], ["75", "143"], ["78", "143"], ["78", "143"], ["71", "143"], ["83", "143"], ["86", "143"], ["86", "143"], ["86", "143"], ["136", "143"], ["136", "143"], ["136", "143"], ["96", "143"], ["96", "143"], ["95", "143"], ["107", "143"], ["107", "143"], ["95", "143"], ["93", "143"], ["93", "143"], ["123", "143"], ["123", "143"], ["123", "143"], ["131", "143"], ["131", "143"], ["131", "143"], ["134", "143"], ["126", "143"], ["89", "143"], ["53", "143"], ["53", "143"], ["53", "143"], ["63", "143"], ["69", "143"], ["63", "143"], ["63", "143"], ["50", "143"], ["71", "143"], ["17", "18"], ["26", "24"], ["30", "28"], ["30", "28"], ["36", "34"], ["36", "34"], ["17", "39"], ["17", "44"], ["17", "71"], ["34", "71"], ["75", "71"], ["78", "71"], ["17", "83"], ["39", "136"], ["134", "136"], ["126", "136"], ["17", "136"], ["17", "26"], ["17", "30"], ["32", "30"], ["24", "36"], ["17", "36"], ["44", "47"], ["50", "47"], ["17", "47"], ["36", "47"], ["47", "50"], ["17", "50"], ["59", "53"], ["59", "53"], ["69", "63"], ["17", "75"], ["17", "80"], ["83", "86"], ["89", "86"], ["17", "86"], ["47", "86"], ["118", "89"], ["17", "89"], ["95", "93"], ["95", "93"], ["26", "32"], ["17", "32"], ["75", "78"], ["17", "78"], ["17", "126"], ["17", "59"], ["61", "59"], ["61", "69"], ["17", "69"], ["96", "95"], ["96", "95"], ["93", "123"], ["17", "123"], ["28", "123"], ["131", "123"], ["39", "126"], ["134", "126"], ["32", "61"], ["69", "61"], ["17", "61"], ["53", "96"], ["63", "96"], ["123", "131"], ["17", "131"], ["123", "131"], ["39", "134"], ["126", "134"], ["17", "134"], ["86", "111"], ["17", "111"], ["111", "118"], ["17", "118"], ["47", "47"], ["47", "64"], ["47", "69"], ["47", "65"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "61"], ["47", "53"], ["47", "63"], ["47", "55"], ["86", "107"], ["86", "115"], ["86", "96"], ["86", "89"], ["86", "98"], ["86", "116"], ["86", "102"], ["86", "103"], ["86", "95"], ["86", "123"], ["86", "97"], ["86", "93"], ["86", "118"], ["86", "108"], ["86", "111"], ["86", "109"], ["86", "86"], ["123", "131"], ["123", "126"], ["131", "134"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(LOCAL,int t: int)<SUB>3</SUB>>", "23": "<(LOCAL,int ans: int)<SUB>3</SUB>>", "25": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "27": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,t,int t = 2 * in.nextInt())<SUB>3</SUB>>", "31": "<(LITERAL,2,2 * in.nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,h,int[][] h = new int[n][2])<SUB>3</SUB>>", "37": "<(IDENTIFIER,n,new int[n][2])<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int ans = 2)<SUB>3</SUB>>", "41": "<(LITERAL,2,int ans = 2)<SUB>3</SUB>>", "43": "<(LOCAL,int i: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>4</SUB>>", "49": "<(IDENTIFIER,n,i &lt; n)<SUB>4</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,h[i][0] = 2 * in.nextInt())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,h[i][0] = 2 * in.nextInt())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.multiplication,2 * in.nextInt())<SUB>6</SUB>>", "61": "<(nextInt,nextInt())<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,h[i][1] = nextInt())<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,h[i][1] = nextInt())<SUB>7</SUB>>", "69": "<(nextInt,nextInt())<SUB>7</SUB>>", "71": "<(sort,sort(h, new Comp()))<SUB>9</SUB>>", "73": "<(IDENTIFIER,h,sort(h, new Comp()))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "77": "<(&lt;operator&gt;.alloc,new Comp())<SUB>9</SUB>>", "79": "<(IDENTIFIER,$obj0,new Comp())>", "81": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "85": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.assignment,int d = (h[i][0] - h[i][1]) - (h[i - 1][0] + h[i - 1][1]))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.subtraction,(h[i][0] - h[i][1]) - (h[i - 1][0] + h[i - 1][1]))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,h[i][0])<SUB>12</SUB>>", "99": "<(IDENTIFIER,h,h[i][0] - h[i][1])<SUB>12</SUB>>", "101": "<(LITERAL,0,h[i][0] - h[i][1])<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,h[i][0] - h[i][1])<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.addition,h[i - 1][0] + h[i - 1][1])<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,h[i - 1])<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>12</SUB>>", "113": "<(LITERAL,1,i - 1)<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,h[i - 1][1])<SUB>12</SUB>>", "117": "<(IDENTIFIER,h,h[i - 1][0] + h[i - 1][1])<SUB>12</SUB>>", "119": "<(IDENTIFIER,i,i - 1)<SUB>12</SUB>>", "121": "<(LITERAL,1,h[i - 1][0] + h[i - 1][1])<SUB>12</SUB>>", "123": "<(&lt;operator&gt;.greaterThan,d &gt; t)<SUB>13</SUB>>", "125": "<(IDENTIFIER,t,d &gt; t)<SUB>13</SUB>>", "127": "<(IDENTIFIER,ans,ans += 2)<SUB>13</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.equals,d == t)<SUB>14</SUB>>", "133": "<(IDENTIFIER,t,d == t)<SUB>14</SUB>>", "135": "<(IDENTIFIER,ans,ans++)<SUB>14</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "139": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}