{"edges": [["19", "20"], ["19", "21"], ["19", "194"], ["19", "195"], ["19", "196"], ["21", "22"], ["21", "25"], ["21", "44"], ["21", "47"], ["21", "52"], ["21", "53"], ["21", "54"], ["21", "58"], ["21", "62"], ["21", "63"], ["21", "64"], ["21", "67"], ["21", "70"], ["21", "71"], ["21", "75"], ["21", "76"], ["21", "82"], ["21", "86"], ["21", "91"], ["21", "96"], ["21", "135"], ["21", "4"], ["21", "142"], ["21", "145"], ["21", "146"], ["21", "183"], ["21", "192"], ["22", "23"], ["22", "24"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "31"], ["27", "43"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "37"], ["33", "42"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "117"], ["111", "112"], ["111", "116"], ["112", "113"], ["112", "114"], ["114", "115"], ["117", "118"], ["117", "119"], ["117", "124"], ["117", "127"], ["117", "130"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "3"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "158"], ["156", "171"], ["156", "176"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "170"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "190"], ["185", "191"], ["186", "187"], ["186", "189"], ["187", "188"], ["192", "193"], ["22", "30"], ["25", "46"], ["44", "51"], ["47", "56"], ["54", "60"], ["58", "64"], ["64", "67"], ["67", "73"], ["71", "79"], ["76", "82"], ["82", "87"], ["86", "92"], ["91", "98"], ["135", "144"], ["142", "145"], ["145", "148"], ["183", "192"], ["192", "196"], ["24", "22"], ["46", "44"], ["49", "47"], ["56", "54"], ["60", "58"], ["73", "71"], ["78", "76"], ["87", "86"], ["92", "91"], ["98", "101"], ["101", "107"], ["101", "136"], ["104", "101"], ["136", "141"], ["139", "135"], ["144", "142"], ["148", "151"], ["151", "164"], ["151", "187"], ["154", "151"], ["185", "183"], ["28", "36"], ["31", "25"], ["51", "49"], ["79", "78"], ["107", "114"], ["107", "104"], ["141", "139"], ["158", "172"], ["186", "185"], ["30", "28"], ["111", "121"], ["160", "158"], ["172", "187"], ["172", "177"], ["177", "180"], ["177", "154"], ["180", "154"], ["187", "186"], ["34", "41"], ["37", "31"], ["112", "111"], ["119", "124"], ["124", "131"], ["124", "104"], ["127", "124"], ["130", "127"], ["161", "160"], ["36", "34"], ["39", "37"], ["114", "112"], ["121", "119"], ["131", "130"], ["162", "167"], ["167", "161"], ["41", "39"], ["164", "162"], ["19", "24"], ["20", "196"], ["22", "196"], ["25", "196"], ["31", "196"], ["34", "196"], ["37", "196"], ["37", "196"], ["37", "196"], ["31", "196"], ["25", "196"], ["44", "196"], ["47", "196"], ["47", "196"], ["54", "196"], ["60", "196"], ["58", "196"], ["58", "196"], ["64", "196"], ["64", "196"], ["67", "196"], ["71", "196"], ["71", "196"], ["71", "196"], ["78", "196"], ["76", "196"], ["76", "196"], ["82", "196"], ["82", "196"], ["86", "196"], ["86", "196"], ["91", "196"], ["91", "196"], ["98", "196"], ["101", "196"], ["101", "196"], ["135", "196"], ["135", "196"], ["135", "196"], ["142", "196"], ["145", "196"], ["148", "196"], ["151", "196"], ["151", "196"], ["151", "196"], ["164", "196"], ["161", "196"], ["161", "196"], ["160", "196"], ["158", "196"], ["158", "196"], ["172", "196"], ["172", "196"], ["172", "196"], ["180", "196"], ["180", "196"], ["154", "196"], ["187", "196"], ["186", "196"], ["186", "196"], ["185", "196"], ["183", "196"], ["183", "196"], ["192", "196"], ["192", "196"], ["111", "196"], ["111", "196"], ["119", "196"], ["119", "196"], ["124", "196"], ["124", "196"], ["104", "196"], ["130", "196"], ["130", "196"], ["127", "196"], ["82", "196"], ["19", "20"], ["19", "22"], ["19", "44"], ["56", "54"], ["60", "58"], ["54", "64"], ["19", "64"], ["19", "67"], ["73", "71"], ["78", "76"], ["19", "86"], ["19", "91"], ["19", "142"], ["22", "25"], ["19", "25"], ["34", "25"], ["31", "25"], ["44", "47"], ["19", "47"], ["19", "82"], ["76", "82"], ["19", "98"], ["142", "145"], ["19", "145"], ["19", "148"], ["47", "183"], ["19", "183"], ["183", "192"], ["19", "192"], ["19", "28"], ["19", "43"], ["19", "56"], ["56", "60"], ["19", "60"], ["64", "73"], ["19", "73"], ["73", "78"], ["19", "78"], ["98", "101"], ["104", "101"], ["19", "101"], ["124", "101"], ["73", "101"], ["101", "104"], ["19", "104"], ["148", "151"], ["154", "151"], ["19", "151"], ["67", "151"], ["114", "151"], ["164", "154"], ["19", "154"], ["71", "158"], ["19", "158"], ["19", "185"], ["28", "31"], ["19", "31"], ["34", "31"], ["37", "31"], ["73", "79"], ["19", "79"], ["101", "111"], ["19", "111"], ["187", "186"], ["58", "186"], ["19", "186"], ["19", "34"], ["19", "42"], ["19", "119"], ["101", "119"], ["19", "127"], ["101", "127"], ["19", "130"], ["71", "160"], ["19", "160"], ["158", "172"], ["19", "172"], ["54", "172"], ["145", "180"], ["19", "180"], ["172", "180"], ["145", "187"], ["180", "187"], ["19", "187"], ["34", "37"], ["19", "37"], ["119", "124"], ["127", "124"], ["19", "124"], ["101", "124"], ["124", "127"], ["71", "161"], ["67", "114"], ["19", "114"], ["19", "121"], ["101", "121"], ["151", "164"], ["19", "164"], ["101", "107"], ["101", "104"], ["101", "101"], ["151", "160"], ["151", "167"], ["151", "161"], ["151", "162"], ["151", "164"], ["151", "158"], ["151", "172"], ["107", "114"], ["107", "119"], ["107", "121"], ["107", "112"], ["107", "124"], ["107", "111"], ["172", "154"], ["172", "151"], ["172", "177"], ["177", "180"], ["124", "131"], ["124", "130"], ["124", "127"], ["124", "124"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,in,in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "25": "<(&lt;init&gt;,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "29": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "31": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "41": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "45": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "53": "<(LOCAL,int k: int)<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "57": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "59": "<(IDENTIFIER,k,int k = nextInt())<SUB>5</SUB>>", "61": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "63": "<(LOCAL,int nprimes: int)<SUB>6</SUB>>", "65": "<(IDENTIFIER,MAX,int MAX = n)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,int nprimes = 0)<SUB>6</SUB>>", "69": "<(LITERAL,0,int nprimes = 0)<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.assignment,int[] primes = new int[MAX])<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[MAX])>", "75": "<(LOCAL,boolean[] isPrime: boolean[])<SUB>8</SUB>>", "77": "<(IDENTIFIER,isPrime,boolean[] isPrime = new boolean[MAX + 1])<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.addition,MAX + 1)<SUB>8</SUB>>", "81": "<(LITERAL,1,MAX + 1)<SUB>8</SUB>>", "83": "<(IDENTIFIER,Arrays,fill(isPrime, true))<SUB>9</SUB>>", "85": "<(LITERAL,true,fill(isPrime, true))<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,isPrime[0])<SUB>10</SUB>>", "89": "<(LITERAL,0,isPrime[0] = false)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,isPrime[1] = false)<SUB>11</SUB>>", "93": "<(IDENTIFIER,isPrime,isPrime[1] = false)<SUB>11</SUB>>", "95": "<(LITERAL,false,isPrime[1] = false)<SUB>11</SUB>>", "97": "<(LOCAL,int i: int)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,int i = 2)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= MAX)<SUB>12</SUB>>", "103": "<(IDENTIFIER,MAX,i &lt;= MAX)<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,isPrime[i])<SUB>12</SUB>>", "109": "<(IDENTIFIER,i,if (isPrime[i]))<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.assignment,primes[nprimes++] = i)<SUB>13</SUB>>", "113": "<(IDENTIFIER,primes,primes[nprimes++] = i)<SUB>13</SUB>>", "115": "<(IDENTIFIER,nprimes,nprimes++)<SUB>13</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = i + i; Some(j &lt;= MAX); j += i),for (int j = i + i; Some(j &lt;= MAX); j += i))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = i + i)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.addition,i + i)<SUB>14</SUB>>", "123": "<(IDENTIFIER,i,i + i)<SUB>14</SUB>>", "125": "<(IDENTIFIER,j,j &lt;= MAX)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.assignmentPlus,j += i)<SUB>14</SUB>>", "129": "<(IDENTIFIER,i,j += i)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,isPrime[j])<SUB>14</SUB>>", "133": "<(IDENTIFIER,j,isPrime[j] = false)<SUB>14</SUB>>", "135": "<(&lt;operator&gt;.assignment,primes[nprimes] = Integer.MAX_VALUE)<SUB>16</SUB>>", "137": "<(IDENTIFIER,primes,primes[nprimes] = Integer.MAX_VALUE)<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>16</SUB>>", "141": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>16</SUB>>", "142": "<(&lt;operator&gt;.assignment,ANY h = new HashSet&lt;Integer&gt;())<SUB>18</SUB>>", "144": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>18</SUB>>", "3": "<(IDENTIFIER,h,new HashSet&lt;Integer&gt;())<SUB>18</SUB>>", "147": "<(LOCAL,int i: int)<SUB>19</SUB>>", "149": "<(IDENTIFIER,i,int i = 1)<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.lessThan,i &lt; nprimes)<SUB>19</SUB>>", "153": "<(IDENTIFIER,nprimes,i &lt; nprimes)<SUB>19</SUB>>", "155": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "157": "<(LOCAL,int x: int)<SUB>20</SUB>>", "159": "<(IDENTIFIER,x,int x = primes[i - 1] + primes[i] + 1)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.addition,primes[i - 1] + primes[i])<SUB>20</SUB>>", "163": "<(IDENTIFIER,primes,primes[i - 1] + primes[i])<SUB>20</SUB>>", "165": "<(IDENTIFIER,i,i - 1)<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,primes[i])<SUB>20</SUB>>", "169": "<(IDENTIFIER,i,primes[i - 1] + primes[i])<SUB>20</SUB>>", "171": "<(CONTROL_STRUCTURE,if (x &gt; n),if (x &gt; n))<SUB>21</SUB>>", "173": "<(IDENTIFIER,x,x &gt; n)<SUB>21</SUB>>", "175": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,isPrime[x])<SUB>22</SUB>>", "179": "<(IDENTIFIER,x,if (isPrime[x]))<SUB>22</SUB>>", "181": "<(IDENTIFIER,h,add(x))<SUB>22</SUB>>", "183": "<(println,println(h.size() &gt;= k ? &quot;YES&quot; : &quot;NO&quot;))<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.conditional,h.size() &gt;= k ? &quot;YES&quot; : &quot;NO&quot;)<SUB>25</SUB>>", "187": "<(size,size())<SUB>25</SUB>>", "189": "<(IDENTIFIER,k,h.size() &gt;= k)<SUB>25</SUB>>", "191": "<(LITERAL,&quot;NO&quot;,h.size() &gt;= k ? &quot;YES&quot; : &quot;NO&quot;)<SUB>25</SUB>>", "193": "<(IDENTIFIER,out,flush())<SUB>27</SUB>>", "195": "<(MODIFIER,STATIC)>"}}