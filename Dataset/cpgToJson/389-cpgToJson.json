{"edges": [["25", "27"], ["25", "421"], ["25", "422"], ["25", "423"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "42"], ["27", "45"], ["27", "8"], ["27", "46"], ["27", "49"], ["27", "60"], ["27", "61"], ["27", "67"], ["27", "68"], ["27", "75"], ["27", "76"], ["27", "83"], ["27", "84"], ["27", "91"], ["27", "92"], ["27", "10"], ["27", "96"], ["27", "99"], ["27", "100"], ["27", "106"], ["27", "107"], ["27", "110"], ["27", "152"], ["27", "162"], ["27", "163"], ["27", "167"], ["27", "168"], ["27", "172"], ["27", "393"], ["27", "396"], ["27", "416"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["46", "47"], ["46", "48"], ["49", "7"], ["49", "50"], ["50", "51"], ["50", "54"], ["50", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "66"], ["64", "65"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "98"], ["99", "9"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "105"], ["103", "104"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "130"], ["120", "146"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "142"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "155"], ["153", "154"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["163", "164"], ["163", "165"], ["165", "166"], ["168", "169"], ["168", "170"], ["170", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "194"], ["188", "189"], ["188", "190"], ["190", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["195", "196"], ["195", "233"], ["195", "235"], ["196", "197"], ["196", "223"], ["197", "198"], ["197", "216"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["235", "236"], ["236", "237"], ["236", "255"], ["236", "310"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "244"], ["245", "246"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "261"], ["255", "266"], ["255", "277"], ["255", "288"], ["255", "289"], ["255", "298"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "276"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "287"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "302"], ["298", "308"], ["299", "300"], ["299", "301"], ["302", "303"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["310", "311"], ["311", "312"], ["311", "330"], ["311", "385"], ["312", "313"], ["312", "320"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["320", "321"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "336"], ["330", "347"], ["330", "352"], ["330", "363"], ["330", "364"], ["330", "373"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["336", "337"], ["336", "346"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "341"], ["341", "342"], ["341", "343"], ["343", "344"], ["343", "345"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["352", "353"], ["352", "362"], ["353", "354"], ["353", "355"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "359"], ["359", "360"], ["359", "361"], ["364", "365"], ["364", "366"], ["366", "367"], ["366", "368"], ["368", "369"], ["368", "370"], ["370", "371"], ["370", "372"], ["373", "374"], ["373", "377"], ["373", "383"], ["374", "375"], ["374", "376"], ["377", "378"], ["378", "379"], ["378", "380"], ["380", "381"], ["380", "382"], ["383", "384"], ["385", "386"], ["386", "387"], ["386", "392"], ["387", "388"], ["387", "391"], ["388", "389"], ["388", "390"], ["393", "394"], ["393", "395"], ["396", "397"], ["396", "398"], ["396", "401"], ["396", "406"], ["396", "408"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["403", "404"], ["403", "405"], ["406", "407"], ["408", "409"], ["409", "410"], ["409", "411"], ["411", "412"], ["411", "415"], ["412", "413"], ["412", "414"], ["416", "417"], ["416", "420"], ["417", "418"], ["417", "419"], ["28", "35"], ["31", "44"], ["42", "45"], ["45", "48"], ["46", "53"], ["49", "64"], ["61", "72"], ["68", "80"], ["76", "88"], ["84", "94"], ["92", "98"], ["96", "99"], ["99", "103"], ["100", "107"], ["107", "112"], ["163", "170"], ["168", "174"], ["393", "398"], ["416", "423"], ["30", "28"], ["44", "42"], ["48", "46"], ["63", "61"], ["70", "68"], ["78", "76"], ["86", "84"], ["94", "92"], ["98", "96"], ["102", "100"], ["112", "115"], ["115", "122"], ["115", "153"], ["118", "115"], ["153", "159"], ["153", "165"], ["165", "163"], ["170", "168"], ["174", "177"], ["177", "184"], ["177", "393"], ["180", "177"], ["398", "405"], ["401", "412"], ["401", "419"], ["406", "405"], ["417", "416"], ["33", "40"], ["36", "31"], ["51", "58"], ["54", "49"], ["64", "63"], ["72", "70"], ["80", "78"], ["88", "86"], ["103", "102"], ["121", "133"], ["146", "118"], ["156", "161"], ["161", "423"], ["184", "188"], ["184", "191"], ["403", "401"], ["409", "406"], ["419", "417"], ["35", "33"], ["38", "36"], ["53", "51"], ["56", "54"], ["122", "127"], ["125", "121"], ["131", "143"], ["131", "148"], ["148", "146"], ["157", "156"], ["188", "203"], ["188", "180"], ["405", "403"], ["411", "409"], ["40", "38"], ["58", "56"], ["127", "125"], ["132", "131"], ["132", "138"], ["137", "131"], ["143", "148"], ["159", "157"], ["190", "188"], ["412", "411"], ["133", "132"], ["138", "137"], ["191", "190"], ["196", "180"], ["196", "242"], ["197", "196"], ["197", "230"], ["223", "196"], ["198", "197"], ["198", "220"], ["216", "197"], ["224", "223"], ["237", "257"], ["237", "317"], ["199", "198"], ["199", "213"], ["206", "198"], ["218", "216"], ["226", "224"], ["238", "237"], ["238", "252"], ["245", "237"], ["256", "262"], ["261", "273"], ["266", "284"], ["277", "295"], ["289", "299"], ["201", "199"], ["207", "206"], ["220", "218"], ["228", "226"], ["240", "238"], ["246", "245"], ["257", "256"], ["262", "261"], ["267", "266"], ["278", "277"], ["291", "289"], ["299", "305"], ["299", "180"], ["312", "332"], ["312", "390"], ["203", "201"], ["209", "207"], ["230", "228"], ["242", "240"], ["248", "246"], ["269", "267"], ["280", "278"], ["293", "291"], ["303", "188"], ["303", "191"], ["313", "312"], ["313", "327"], ["320", "312"], ["331", "343"], ["336", "348"], ["347", "359"], ["352", "370"], ["364", "374"], ["211", "209"], ["250", "248"], ["271", "269"], ["282", "280"], ["295", "293"], ["305", "303"], ["315", "313"], ["321", "320"], ["332", "331"], ["337", "336"], ["348", "347"], ["353", "352"], ["366", "364"], ["374", "380"], ["374", "180"], ["387", "392"], ["392", "423"], ["213", "211"], ["252", "250"], ["273", "271"], ["284", "282"], ["317", "315"], ["323", "321"], ["339", "337"], ["355", "353"], ["368", "366"], ["378", "188"], ["378", "191"], ["388", "387"], ["325", "323"], ["341", "339"], ["357", "355"], ["370", "368"], ["380", "378"], ["390", "388"], ["327", "325"], ["343", "341"], ["359", "357"], ["25", "30"], ["392", "423"], ["161", "423"], ["26", "423"], ["28", "423"], ["36", "423"], ["36", "423"], ["36", "423"], ["31", "423"], ["42", "423"], ["45", "423"], ["45", "423"], ["46", "423"], ["49", "423"], ["51", "423"], ["54", "423"], ["54", "423"], ["49", "423"], ["61", "423"], ["70", "423"], ["68", "423"], ["68", "423"], ["76", "423"], ["78", "423"], ["76", "423"], ["76", "423"], ["84", "423"], ["86", "423"], ["86", "423"], ["84", "423"], ["84", "423"], ["92", "423"], ["92", "423"], ["92", "423"], ["96", "423"], ["99", "423"], ["99", "423"], ["100", "423"], ["103", "423"], ["102", "423"], ["100", "423"], ["100", "423"], ["107", "423"], ["112", "423"], ["115", "423"], ["115", "423"], ["115", "423"], ["153", "423"], ["153", "423"], ["156", "423"], ["125", "423"], ["125", "423"], ["121", "423"], ["121", "423"], ["132", "423"], ["131", "423"], ["137", "423"], ["131", "423"], ["131", "423"], ["143", "423"], ["146", "423"], ["146", "423"], ["146", "423"], ["118", "423"], ["25", "26"], ["25", "28"], ["25", "42"], ["25", "46"], ["63", "61"], ["63", "61"], ["70", "68"], ["70", "68"], ["78", "76"], ["78", "76"], ["86", "84"], ["86", "84"], ["94", "92"], ["25", "96"], ["102", "100"], ["102", "100"], ["25", "107"], ["165", "163"], ["170", "168"], ["28", "31"], ["25", "31"], ["33", "31"], ["36", "31"], ["42", "45"], ["25", "45"], ["46", "49"], ["25", "49"], ["51", "49"], ["54", "49"], ["96", "99"], ["25", "99"], ["25", "112"], ["25", "174"], ["45", "393"], ["25", "393"], ["25", "398"], ["54", "416"], ["393", "416"], ["409", "416"], ["25", "416"], ["25", "33"], ["25", "41"], ["25", "51"], ["25", "59"], ["64", "63"], ["25", "63"], ["25", "70"], ["61", "70"], ["70", "78"], ["25", "78"], ["61", "78"], ["78", "86"], ["25", "86"], ["61", "86"], ["68", "94"], ["25", "94"], ["103", "102"], ["25", "102"], ["112", "115"], ["118", "115"], ["25", "115"], ["94", "115"], ["146", "118"], ["25", "118"], ["125", "121"], ["125", "121"], ["107", "153"], ["143", "153"], ["25", "153"], ["25", "161"], ["115", "165"], ["25", "165"], ["165", "170"], ["25", "170"], ["174", "177"], ["180", "177"], ["25", "177"], ["170", "177"], ["25", "180"], ["177", "180"], ["177", "184"], ["25", "184"], ["398", "401"], ["406", "401"], ["25", "401"], ["168", "401"], ["401", "406"], ["25", "406"], ["33", "36"], ["25", "36"], ["51", "54"], ["25", "54"], ["31", "64"], ["25", "64"], ["64", "103"], ["25", "103"], ["99", "146"], ["25", "146"], ["92", "146"], ["132", "146"], ["137", "146"], ["115", "146"], ["54", "156"], ["25", "156"], ["393", "409"], ["25", "409"], ["168", "409"], ["86", "125"], ["25", "125"], ["100", "125"], ["132", "131"], ["132", "131"], ["137", "131"], ["137", "131"], ["25", "143"], ["25", "188"], ["190", "188"], ["168", "411"], ["25", "411"], ["92", "132"], ["121", "132"], ["76", "132"], ["25", "132"], ["92", "137"], ["132", "137"], ["84", "137"], ["25", "137"], ["163", "190"], ["347", "190"], ["256", "190"], ["197", "196"], ["197", "196"], ["223", "196"], ["312", "196"], ["198", "197"], ["198", "197"], ["216", "197"], ["216", "197"], ["312", "197"], ["163", "223"], ["352", "223"], ["199", "198"], ["199", "198"], ["237", "198"], ["206", "198"], ["199", "216"], ["209", "216"], ["25", "216"], ["218", "216"], ["218", "216"], ["238", "237"], ["238", "237"], ["198", "237"], ["245", "237"], ["25", "256"], ["25", "261"], ["25", "266"], ["25", "277"], ["291", "289"], ["291", "289"], ["99", "199"], ["209", "199"], ["216", "199"], ["226", "199"], ["374", "199"], ["380", "199"], ["299", "199"], ["305", "199"], ["146", "199"], ["25", "199"], ["201", "199"], ["201", "199"], ["163", "206"], ["245", "206"], ["266", "206"], ["84", "218"], ["228", "218"], ["368", "218"], ["291", "218"], ["137", "218"], ["25", "218"], ["92", "218"], ["201", "218"], ["211", "218"], ["199", "226"], ["209", "226"], ["216", "226"], ["25", "226"], ["228", "226"], ["228", "226"], ["199", "238"], ["209", "238"], ["216", "238"], ["226", "238"], ["25", "238"], ["240", "238"], ["240", "238"], ["163", "245"], ["206", "245"], ["266", "245"], ["76", "201"], ["211", "201"], ["366", "201"], ["293", "201"], ["132", "201"], ["25", "201"], ["92", "201"], ["211", "201"], ["218", "201"], ["228", "201"], ["368", "201"], ["293", "201"], ["84", "228"], ["218", "228"], ["368", "228"], ["291", "228"], ["137", "228"], ["25", "228"], ["92", "228"], ["201", "228"], ["211", "228"], ["218", "228"], ["201", "240"], ["211", "240"], ["25", "240"], ["92", "240"], ["201", "240"], ["211", "240"], ["218", "240"], ["228", "240"], ["84", "291"], ["218", "291"], ["228", "291"], ["368", "291"], ["137", "291"], ["25", "291"], ["293", "291"], ["293", "291"], ["280", "299"], ["25", "299"], ["289", "299"], ["305", "303"], ["305", "303"], ["313", "312"], ["313", "312"], ["196", "312"], ["320", "312"], ["25", "331"], ["25", "336"], ["25", "347"], ["25", "352"], ["366", "364"], ["366", "364"], ["199", "209"], ["25", "209"], ["211", "209"], ["211", "209"], ["238", "248"], ["25", "248"], ["250", "248"], ["250", "248"], ["238", "269"], ["248", "269"], ["25", "269"], ["271", "269"], ["271", "269"], ["269", "280"], ["25", "280"], ["282", "280"], ["282", "280"], ["282", "293"], ["25", "293"], ["92", "293"], ["282", "293"], ["238", "313"], ["248", "313"], ["25", "313"], ["315", "313"], ["315", "313"], ["163", "320"], ["223", "320"], ["352", "320"], ["25", "392"], ["201", "211"], ["25", "211"], ["92", "211"], ["201", "211"], ["240", "250"], ["25", "250"], ["92", "250"], ["240", "250"], ["240", "271"], ["250", "271"], ["25", "271"], ["92", "271"], ["240", "271"], ["250", "271"], ["271", "282"], ["25", "282"], ["92", "282"], ["271", "282"], ["299", "305"], ["25", "305"], ["299", "305"], ["84", "315"], ["218", "315"], ["228", "315"], ["368", "315"], ["291", "315"], ["137", "315"], ["25", "315"], ["92", "315"], ["240", "315"], ["250", "315"], ["240", "366"], ["250", "366"], ["25", "366"], ["368", "366"], ["368", "366"], ["355", "374"], ["25", "374"], ["364", "374"], ["380", "378"], ["380", "378"], ["54", "387"], ["25", "387"], ["313", "323"], ["25", "323"], ["325", "323"], ["325", "323"], ["313", "339"], ["323", "339"], ["25", "339"], ["341", "339"], ["341", "339"], ["339", "355"], ["25", "355"], ["357", "355"], ["357", "355"], ["357", "368"], ["25", "368"], ["92", "368"], ["357", "368"], ["315", "325"], ["25", "325"], ["92", "325"], ["315", "325"], ["315", "341"], ["325", "341"], ["25", "341"], ["92", "341"], ["315", "341"], ["325", "341"], ["341", "357"], ["25", "357"], ["92", "357"], ["341", "357"], ["374", "380"], ["25", "380"], ["374", "380"], ["115", "146"], ["115", "148"], ["115", "118"], ["115", "127"], ["115", "122"], ["115", "133"], ["115", "115"], ["115", "131"], ["115", "132"], ["115", "121"], ["115", "125"], ["153", "161"], ["153", "163"], ["153", "168"], ["153", "170"], ["153", "174"], ["153", "159"], ["153", "177"], ["153", "157"], ["153", "165"], ["153", "156"], ["177", "188"], ["177", "401"], ["177", "403"], ["177", "184"], ["177", "416"], ["177", "405"], ["177", "417"], ["177", "419"], ["177", "393"], ["177", "398"], ["177", "190"], ["177", "191"], ["401", "401"], ["401", "403"], ["401", "412"], ["401", "405"], ["401", "411"], ["401", "409"], ["401", "406"], ["131", "143"], ["188", "196"], ["188", "201"], ["188", "180"], ["188", "199"], ["188", "177"], ["188", "197"], ["188", "198"], ["188", "203"], ["132", "138"], ["132", "137"], ["196", "240"], ["196", "242"], ["196", "238"], ["196", "180"], ["196", "237"], ["196", "177"], ["197", "230"], ["197", "226"], ["197", "228"], ["197", "224"], ["197", "223"], ["198", "216"], ["198", "220"], ["198", "218"], ["237", "256"], ["237", "262"], ["237", "317"], ["237", "315"], ["237", "278"], ["237", "269"], ["237", "282"], ["237", "257"], ["237", "273"], ["237", "261"], ["237", "291"], ["237", "284"], ["237", "289"], ["237", "293"], ["237", "267"], ["237", "280"], ["237", "295"], ["237", "299"], ["237", "277"], ["237", "313"], ["237", "312"], ["237", "271"], ["237", "266"], ["199", "209"], ["199", "213"], ["199", "206"], ["199", "207"], ["199", "211"], ["238", "245"], ["238", "246"], ["238", "252"], ["238", "248"], ["238", "250"], ["299", "188"], ["299", "180"], ["299", "177"], ["299", "305"], ["299", "303"], ["299", "190"], ["299", "191"], ["312", "392"], ["312", "370"], ["312", "336"], ["312", "390"], ["312", "355"], ["312", "374"], ["312", "368"], ["312", "348"], ["312", "388"], ["312", "364"], ["312", "347"], ["312", "357"], ["312", "366"], ["312", "337"], ["312", "341"], ["312", "339"], ["312", "332"], ["312", "353"], ["312", "387"], ["312", "352"], ["312", "343"], ["312", "359"], ["312", "331"], ["313", "323"], ["313", "321"], ["313", "320"], ["313", "325"], ["313", "327"], ["374", "188"], ["374", "378"], ["374", "380"], ["374", "180"], ["374", "177"], ["374", "190"], ["374", "191"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,StringBuilder qq = new StringBuilder())<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,qq,new StringBuilder())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "7": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "55": "<(IDENTIFIER,$obj3,new OutputStreamWriter(System.out))>", "57": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "59": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.assignment,String[] y = split(&quot; &quot;))<SUB>5</SUB>>", "63": "<(split,split(&quot; &quot;))<SUB>5</SUB>>", "65": "<(IDENTIFIER,in,readLine())<SUB>5</SUB>>", "67": "<(LOCAL,int n: int)<SUB>6</SUB>>", "69": "<(IDENTIFIER,n,int n = Integer.parseInt(y[0]))<SUB>6</SUB>>", "71": "<(IDENTIFIER,Integer,Integer.parseInt(y[0]))<SUB>6</SUB>>", "73": "<(IDENTIFIER,y,Integer.parseInt(y[0]))<SUB>6</SUB>>", "75": "<(LOCAL,int a: int)<SUB>7</SUB>>", "77": "<(IDENTIFIER,a,int a = Integer.parseInt(y[1]))<SUB>7</SUB>>", "79": "<(IDENTIFIER,Integer,Integer.parseInt(y[1]))<SUB>7</SUB>>", "81": "<(IDENTIFIER,y,Integer.parseInt(y[1]))<SUB>7</SUB>>", "83": "<(LOCAL,int b: int)<SUB>8</SUB>>", "85": "<(IDENTIFIER,b,int b = Integer.parseInt(y[2]))<SUB>8</SUB>>", "87": "<(IDENTIFIER,Integer,Integer.parseInt(y[2]))<SUB>8</SUB>>", "89": "<(IDENTIFIER,y,Integer.parseInt(y[2]))<SUB>8</SUB>>", "91": "<(LOCAL,int[] arr: int[])<SUB>10</SUB>>", "93": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>10</SUB>>", "95": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "96": "<(&lt;operator&gt;.assignment,ANY mp = new HashMap())<SUB>11</SUB>>", "98": "<(&lt;operator&gt;.alloc,new HashMap())<SUB>11</SUB>>", "9": "<(IDENTIFIER,mp,new HashMap())<SUB>11</SUB>>", "101": "<(IDENTIFIER,y,y = split(&quot; &quot;))<SUB>12</SUB>>", "103": "<(readLine,readLine())<SUB>12</SUB>>", "105": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.assignment,boolean flag = true)<SUB>13</SUB>>", "109": "<(LITERAL,true,boolean flag = true)<SUB>13</SUB>>", "111": "<(LOCAL,int i: int)<SUB>14</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "117": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "119": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,arr[i] = Integer.parseInt(y[i]))<SUB>15</SUB>>", "123": "<(IDENTIFIER,arr,arr[i] = Integer.parseInt(y[i]))<SUB>15</SUB>>", "125": "<(parseInt,Integer.parseInt(y[i]))<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>15</SUB>>", "129": "<(IDENTIFIER,i,Integer.parseInt(y[i]))<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.logicalAnd,arr[i] &gt;= a &amp;&amp; arr[i] &gt;= b)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>16</SUB>>", "135": "<(IDENTIFIER,i,arr[i] &gt;= a)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.greaterEqualsThan,arr[i] &gt;= b)<SUB>16</SUB>>", "139": "<(IDENTIFIER,arr,arr[i] &gt;= b)<SUB>16</SUB>>", "141": "<(IDENTIFIER,b,arr[i] &gt;= b)<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.assignment,flag = false)<SUB>17</SUB>>", "145": "<(LITERAL,false,flag = false)<SUB>17</SUB>>", "147": "<(IDENTIFIER,mp,put(arr[i], i))<SUB>19</SUB>>", "149": "<(IDENTIFIER,arr,put(arr[i], i))<SUB>19</SUB>>", "151": "<(IDENTIFIER,i,put(arr[i], i))<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.logicalNot,!flag)<SUB>22</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "161": "<(RETURN,return;,return;)<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.assignment,boolean[] ch = new boolean[n])<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.alloc,new boolean[n])>", "167": "<(LOCAL,int[] ans: int[])<SUB>27</SUB>>", "169": "<(IDENTIFIER,ans,int[] ans = new int[n])<SUB>27</SUB>>", "171": "<(IDENTIFIER,n,new int[n])<SUB>27</SUB>>", "173": "<(LOCAL,int i: int)<SUB>29</SUB>>", "175": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "177": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>29</SUB>>", "179": "<(IDENTIFIER,n,i &lt; n)<SUB>29</SUB>>", "181": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "183": "<(LOCAL,int k: int)<SUB>30</SUB>>", "185": "<(IDENTIFIER,k,int k = i)<SUB>30</SUB>>", "187": "<(CONTROL_STRUCTURE,while (true &amp;&amp; !ch[k]),while (true &amp;&amp; !ch[k]))<SUB>32</SUB>>", "189": "<(LITERAL,true,true &amp;&amp; !ch[k])<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,ch[k])<SUB>32</SUB>>", "193": "<(IDENTIFIER,k,!ch[k])<SUB>32</SUB>>", "195": "<(CONTROL_STRUCTURE,if (mp.containsKey(a - arr[k]) &amp;&amp; !ch[mp.get(a - arr[k])] &amp;&amp; mp.containsKey(b - arr[k]) &amp;&amp; !ch[mp.get(b - arr[k])]),if (mp.containsKey(a - arr[k]) &amp;&amp; !ch[mp.get(a - arr[k])] &amp;&amp; mp.containsKey(b - arr[k]) &amp;&amp; !ch[mp.get(b - arr[k])]))<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.logicalAnd,mp.containsKey(a - arr[k]) &amp;&amp; !ch[mp.get(a - arr[k])] &amp;&amp; mp.containsKey(b - arr[k]))<SUB>34</SUB>>", "199": "<(containsKey,containsKey(a - arr[k]))<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.subtraction,a - arr[k])<SUB>34</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>34</SUB>>", "205": "<(IDENTIFIER,k,a - arr[k])<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,ch[mp.get(a - arr[k])])<SUB>34</SUB>>", "209": "<(get,get(a - arr[k]))<SUB>34</SUB>>", "211": "<(&lt;operator&gt;.subtraction,a - arr[k])<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>34</SUB>>", "215": "<(IDENTIFIER,k,a - arr[k])<SUB>34</SUB>>", "217": "<(IDENTIFIER,mp,containsKey(b - arr[k]))<SUB>35</SUB>>", "219": "<(IDENTIFIER,b,b - arr[k])<SUB>35</SUB>>", "221": "<(IDENTIFIER,arr,b - arr[k])<SUB>35</SUB>>", "223": "<(&lt;operator&gt;.logicalNot,!ch[mp.get(b - arr[k])])<SUB>36</SUB>>", "225": "<(IDENTIFIER,ch,!ch[mp.get(b - arr[k])])<SUB>36</SUB>>", "227": "<(IDENTIFIER,mp,get(b - arr[k]))<SUB>36</SUB>>", "229": "<(IDENTIFIER,b,b - arr[k])<SUB>36</SUB>>", "231": "<(IDENTIFIER,arr,b - arr[k])<SUB>36</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "235": "<(CONTROL_STRUCTURE,else,else)<SUB>38</SUB>>", "237": "<(&lt;operator&gt;.logicalAnd,mp.containsKey(a - arr[k]) &amp;&amp; !ch[mp.get(a - arr[k])])<SUB>38</SUB>>", "239": "<(IDENTIFIER,mp,containsKey(a - arr[k]))<SUB>38</SUB>>", "241": "<(IDENTIFIER,a,a - arr[k])<SUB>38</SUB>>", "243": "<(IDENTIFIER,arr,a - arr[k])<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.logicalNot,!ch[mp.get(a - arr[k])])<SUB>39</SUB>>", "247": "<(IDENTIFIER,ch,!ch[mp.get(a - arr[k])])<SUB>39</SUB>>", "249": "<(IDENTIFIER,mp,get(a - arr[k]))<SUB>39</SUB>>", "251": "<(IDENTIFIER,a,a - arr[k])<SUB>39</SUB>>", "253": "<(IDENTIFIER,arr,a - arr[k])<SUB>39</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,ch[k])<SUB>41</SUB>>", "259": "<(IDENTIFIER,k,ch[k] = true)<SUB>41</SUB>>", "261": "<(&lt;operator&gt;.assignment,ans[k] = 0)<SUB>42</SUB>>", "263": "<(IDENTIFIER,ans,ans[k] = 0)<SUB>42</SUB>>", "265": "<(LITERAL,0,ans[k] = 0)<SUB>42</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,ch[mp.get(a - arr[k])])<SUB>43</SUB>>", "269": "<(get,get(a - arr[k]))<SUB>43</SUB>>", "271": "<(&lt;operator&gt;.subtraction,a - arr[k])<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>43</SUB>>", "275": "<(IDENTIFIER,k,a - arr[k])<SUB>43</SUB>>", "277": "<(&lt;operator&gt;.assignment,ans[mp.get(a - arr[k])] = 0)<SUB>44</SUB>>", "279": "<(IDENTIFIER,ans,ans[mp.get(a - arr[k])] = 0)<SUB>44</SUB>>", "281": "<(IDENTIFIER,mp,get(a - arr[k]))<SUB>44</SUB>>", "283": "<(IDENTIFIER,a,a - arr[k])<SUB>44</SUB>>", "285": "<(IDENTIFIER,arr,a - arr[k])<SUB>44</SUB>>", "287": "<(LITERAL,0,ans[mp.get(a - arr[k])] = 0)<SUB>44</SUB>>", "289": "<(&lt;operator&gt;.assignment,int s = b - (a - arr[k]))<SUB>45</SUB>>", "291": "<(&lt;operator&gt;.subtraction,b - (a - arr[k]))<SUB>45</SUB>>", "293": "<(&lt;operator&gt;.subtraction,a - arr[k])<SUB>45</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>45</SUB>>", "297": "<(IDENTIFIER,k,a - arr[k])<SUB>45</SUB>>", "299": "<(containsKey,containsKey(s))<SUB>46</SUB>>", "301": "<(IDENTIFIER,s,containsKey(s))<SUB>46</SUB>>", "303": "<(&lt;operator&gt;.assignment,k = get(s))<SUB>47</SUB>>", "305": "<(get,get(s))<SUB>47</SUB>>", "307": "<(IDENTIFIER,s,get(s))<SUB>47</SUB>>", "309": "<(CONTROL_STRUCTURE,break;,break;)<SUB>49</SUB>>", "311": "<(CONTROL_STRUCTURE,if (mp.containsKey(b - arr[k]) &amp;&amp; !ch[mp.get(b - arr[k])]),if (mp.containsKey(b - arr[k]) &amp;&amp; !ch[mp.get(b - arr[k])]))<SUB>51</SUB>>", "313": "<(containsKey,containsKey(b - arr[k]))<SUB>51</SUB>>", "315": "<(&lt;operator&gt;.subtraction,b - arr[k])<SUB>51</SUB>>", "317": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>51</SUB>>", "319": "<(IDENTIFIER,k,b - arr[k])<SUB>51</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,ch[mp.get(b - arr[k])])<SUB>52</SUB>>", "323": "<(get,get(b - arr[k]))<SUB>52</SUB>>", "325": "<(&lt;operator&gt;.subtraction,b - arr[k])<SUB>52</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>52</SUB>>", "329": "<(IDENTIFIER,k,b - arr[k])<SUB>52</SUB>>", "331": "<(&lt;operator&gt;.assignment,ans[k] = 1)<SUB>53</SUB>>", "333": "<(IDENTIFIER,ans,ans[k] = 1)<SUB>53</SUB>>", "335": "<(LITERAL,1,ans[k] = 1)<SUB>53</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,ans[mp.get(b - arr[k])])<SUB>54</SUB>>", "339": "<(get,get(b - arr[k]))<SUB>54</SUB>>", "341": "<(&lt;operator&gt;.subtraction,b - arr[k])<SUB>54</SUB>>", "343": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>54</SUB>>", "345": "<(IDENTIFIER,k,b - arr[k])<SUB>54</SUB>>", "347": "<(&lt;operator&gt;.assignment,ch[k] = true)<SUB>55</SUB>>", "349": "<(IDENTIFIER,ch,ch[k] = true)<SUB>55</SUB>>", "351": "<(LITERAL,true,ch[k] = true)<SUB>55</SUB>>", "353": "<(&lt;operator&gt;.indexAccess,ch[mp.get(b - arr[k])])<SUB>56</SUB>>", "355": "<(get,get(b - arr[k]))<SUB>56</SUB>>", "357": "<(&lt;operator&gt;.subtraction,b - arr[k])<SUB>56</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>56</SUB>>", "361": "<(IDENTIFIER,k,b - arr[k])<SUB>56</SUB>>", "363": "<(LOCAL,int s: int)<SUB>58</SUB>>", "365": "<(IDENTIFIER,s,int s = a - (b - arr[k]))<SUB>58</SUB>>", "367": "<(IDENTIFIER,a,a - (b - arr[k]))<SUB>58</SUB>>", "369": "<(IDENTIFIER,b,b - arr[k])<SUB>58</SUB>>", "371": "<(IDENTIFIER,arr,b - arr[k])<SUB>58</SUB>>", "373": "<(CONTROL_STRUCTURE,if (mp.containsKey(s)),if (mp.containsKey(s)))<SUB>59</SUB>>", "375": "<(IDENTIFIER,mp,containsKey(s))<SUB>59</SUB>>", "377": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "379": "<(IDENTIFIER,k,k = get(s))<SUB>60</SUB>>", "381": "<(IDENTIFIER,mp,get(s))<SUB>60</SUB>>", "383": "<(CONTROL_STRUCTURE,else,else)<SUB>62</SUB>>", "385": "<(CONTROL_STRUCTURE,else,else)<SUB>63</SUB>>", "387": "<(println,System.out.println(&quot;NO&quot;))<SUB>65</SUB>>", "389": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>65</SUB>>", "391": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>65</SUB>>", "393": "<(append,qq.append(&quot;YES\\n&quot;))<SUB>71</SUB>>", "395": "<(LITERAL,&quot;YES\\n&quot;,qq.append(&quot;YES\\n&quot;))<SUB>71</SUB>>", "397": "<(LOCAL,int i: int)<SUB>72</SUB>>", "399": "<(IDENTIFIER,i,int i = 0)<SUB>72</SUB>>", "401": "<(&lt;operator&gt;.lessThan,i &lt; ans.length)<SUB>72</SUB>>", "403": "<(&lt;operator&gt;.fieldAccess,ans.length)<SUB>72</SUB>>", "405": "<(FIELD_IDENTIFIER,length,length)<SUB>72</SUB>>", "407": "<(IDENTIFIER,i,i++)<SUB>72</SUB>>", "409": "<(append,qq.append(ans[i] + &quot; &quot;))<SUB>73</SUB>>", "411": "<(&lt;operator&gt;.addition,ans[i] + &quot; &quot;)<SUB>73</SUB>>", "413": "<(IDENTIFIER,ans,ans[i] + &quot; &quot;)<SUB>73</SUB>>", "415": "<(LITERAL,&quot; &quot;,ans[i] + &quot; &quot;)<SUB>73</SUB>>", "417": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>75</SUB>>", "419": "<(FIELD_IDENTIFIER,out,out)<SUB>75</SUB>>", "421": "<(MODIFIER,PUBLIC)>", "423": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}