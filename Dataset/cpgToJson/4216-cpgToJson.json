{"edges": [["23", "24"], ["23", "25"], ["23", "344"], ["23", "345"], ["23", "346"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "34"], ["25", "38"], ["25", "39"], ["25", "44"], ["25", "74"], ["25", "75"], ["25", "81"], ["25", "82"], ["25", "88"], ["25", "92"], ["25", "96"], ["25", "101"], ["25", "6"], ["25", "110"], ["25", "113"], ["25", "8"], ["25", "114"], ["25", "117"], ["25", "118"], ["25", "125"], ["25", "126"], ["25", "130"], ["25", "298"], ["25", "299"], ["25", "302"], ["25", "320"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "72"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "91"], ["92", "93"], ["92", "94"], ["92", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "109"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["110", "111"], ["110", "112"], ["113", "5"], ["114", "115"], ["114", "116"], ["117", "7"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["126", "128"], ["128", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "140"], ["130", "142"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "145"], ["142", "148"], ["142", "150"], ["143", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "152"], ["150", "156"], ["150", "158"], ["152", "153"], ["152", "154"], ["154", "155"], ["156", "157"], ["158", "159"], ["158", "160"], ["158", "164"], ["158", "186"], ["158", "187"], ["158", "190"], ["158", "207"], ["158", "212"], ["160", "161"], ["160", "162"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "220"], ["212", "222"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["222", "229"], ["223", "224"], ["223", "228"], ["224", "225"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["229", "236"], ["229", "239"], ["229", "241"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["239", "240"], ["241", "242"], ["241", "248"], ["241", "249"], ["241", "257"], ["241", "258"], ["241", "266"], ["241", "279"], ["241", "292"], ["241", "295"], ["242", "243"], ["242", "247"], ["243", "244"], ["244", "245"], ["244", "246"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["253", "254"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["262", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["302", "307"], ["302", "310"], ["302", "312"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "309"], ["310", "311"], ["312", "313"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["320", "321"], ["320", "322"], ["320", "325"], ["320", "328"], ["320", "330"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["328", "329"], ["330", "331"], ["331", "332"], ["331", "335"], ["331", "336"], ["332", "333"], ["332", "334"], ["336", "337"], ["337", "338"], ["337", "343"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["26", "32"], ["29", "36"], ["34", "41"], ["39", "46"], ["75", "85"], ["82", "88"], ["88", "92"], ["92", "97"], ["96", "105"], ["101", "112"], ["110", "113"], ["113", "116"], ["114", "117"], ["117", "121"], ["118", "128"], ["126", "132"], ["299", "304"], ["28", "26"], ["30", "29"], ["36", "34"], ["41", "39"], ["46", "49"], ["49", "57"], ["49", "78"], ["52", "49"], ["77", "75"], ["84", "82"], ["97", "96"], ["102", "101"], ["112", "110"], ["116", "114"], ["120", "118"], ["128", "126"], ["132", "137"], ["135", "143"], ["135", "299"], ["140", "137"], ["304", "307"], ["307", "317"], ["307", "322"], ["310", "307"], ["322", "325"], ["325", "346"], ["325", "334"], ["328", "325"], ["32", "30"], ["78", "77"], ["85", "84"], ["104", "102"], ["121", "120"], ["137", "135"], ["143", "145"], ["145", "148"], ["148", "154"], ["313", "310"], ["331", "328"], ["57", "60"], ["60", "68"], ["60", "52"], ["63", "60"], ["105", "104"], ["152", "156"], ["156", "162"], ["156", "140"], ["315", "313"], ["332", "340"], ["336", "331"], ["66", "63"], ["154", "152"], ["160", "166"], ["187", "192"], ["317", "315"], ["334", "332"], ["337", "336"], ["67", "72"], ["72", "66"], ["162", "160"], ["166", "169"], ["169", "176"], ["169", "187"], ["172", "169"], ["192", "195"], ["195", "202"], ["195", "208"], ["198", "195"], ["208", "214"], ["214", "217"], ["217", "156"], ["217", "225"], ["220", "217"], ["338", "337"], ["68", "67"], ["175", "172"], ["340", "338"], ["176", "181"], ["179", "175"], ["202", "205"], ["202", "198"], ["205", "198"], ["224", "220"], ["224", "233"], ["231", "236"], ["236", "244"], ["236", "220"], ["239", "236"], ["180", "179"], ["225", "224"], ["233", "231"], ["249", "263"], ["258", "267"], ["266", "280"], ["279", "292"], ["292", "295"], ["295", "239"], ["181", "180"], ["243", "239"], ["243", "254"], ["251", "249"], ["260", "258"], ["267", "271"], ["270", "266"], ["280", "284"], ["283", "279"], ["244", "243"], ["253", "251"], ["262", "260"], ["271", "275"], ["274", "270"], ["284", "288"], ["287", "283"], ["254", "253"], ["263", "262"], ["275", "274"], ["288", "287"], ["23", "28"], ["24", "346"], ["26", "346"], ["29", "346"], ["29", "346"], ["36", "346"], ["34", "346"], ["34", "346"], ["39", "346"], ["39", "346"], ["39", "346"], ["75", "346"], ["75", "346"], ["82", "346"], ["82", "346"], ["88", "346"], ["88", "346"], ["92", "346"], ["92", "346"], ["92", "346"], ["96", "346"], ["96", "346"], ["101", "346"], ["101", "346"], ["110", "346"], ["113", "346"], ["114", "346"], ["117", "346"], ["118", "346"], ["120", "346"], ["118", "346"], ["118", "346"], ["126", "346"], ["126", "346"], ["126", "346"], ["132", "346"], ["135", "346"], ["135", "346"], ["135", "346"], ["299", "346"], ["299", "346"], ["322", "346"], ["325", "346"], ["325", "346"], ["325", "346"], ["328", "346"], ["310", "346"], ["140", "346"], ["52", "346"], ["23", "24"], ["23", "26"], ["36", "34"], ["41", "39"], ["77", "75"], ["84", "82"], ["23", "96"], ["23", "101"], ["23", "110"], ["23", "114"], ["128", "126"], ["23", "299"], ["26", "29"], ["23", "29"], ["23", "46"], ["23", "88"], ["75", "88"], ["88", "92"], ["23", "92"], ["82", "92"], ["110", "113"], ["23", "113"], ["114", "117"], ["23", "117"], ["117", "118"], ["23", "118"], ["120", "118"], ["120", "118"], ["23", "132"], ["23", "304"], ["23", "322"], ["29", "36"], ["23", "36"], ["34", "41"], ["23", "41"], ["46", "49"], ["52", "49"], ["23", "49"], ["41", "49"], ["60", "49"], ["49", "52"], ["23", "52"], ["78", "77"], ["78", "77"], ["85", "84"], ["85", "84"], ["121", "120"], ["121", "120"], ["23", "120"], ["121", "128"], ["23", "128"], ["132", "135"], ["140", "135"], ["23", "135"], ["137", "135"], ["137", "135"], ["135", "140"], ["23", "140"], ["304", "307"], ["310", "307"], ["23", "307"], ["137", "307"], ["317", "310"], ["23", "310"], ["88", "313"], ["322", "325"], ["328", "325"], ["23", "325"], ["307", "325"], ["340", "328"], ["23", "328"], ["23", "57"], ["23", "78"], ["49", "78"], ["23", "85"], ["78", "85"], ["105", "104"], ["105", "104"], ["23", "104"], ["23", "121"], ["105", "121"], ["128", "137"], ["217", "137"], ["23", "137"], ["113", "143"], ["154", "143"], ["23", "143"], ["143", "145"], ["23", "145"], ["118", "145"], ["148", "145"], ["295", "145"], ["145", "148"], ["23", "148"], ["154", "152"], ["299", "313"], ["23", "313"], ["23", "331"], ["336", "331"], ["57", "60"], ["63", "60"], ["23", "60"], ["49", "60"], ["60", "63"], ["23", "63"], ["72", "66"], ["23", "105"], ["85", "105"], ["152", "156"], ["162", "156"], ["23", "156"], ["162", "160"], ["23", "187"], ["337", "336"], ["337", "336"], ["145", "154"], ["23", "154"], ["23", "166"], ["23", "192"], ["23", "214"], ["23", "317"], ["307", "317"], ["88", "337"], ["299", "337"], ["313", "337"], ["23", "337"], ["36", "72"], ["23", "72"], ["156", "162"], ["23", "162"], ["166", "169"], ["172", "169"], ["23", "169"], ["137", "169"], ["217", "169"], ["181", "172"], ["23", "172"], ["179", "175"], ["179", "175"], ["192", "195"], ["198", "195"], ["23", "195"], ["169", "195"], ["195", "198"], ["23", "198"], ["187", "208"], ["205", "208"], ["23", "208"], ["214", "217"], ["220", "217"], ["23", "217"], ["195", "217"], ["236", "217"], ["217", "220"], ["254", "220"], ["23", "220"], ["217", "231"], ["23", "231"], ["23", "340"], ["325", "340"], ["180", "179"], ["180", "179"], ["23", "179"], ["187", "205"], ["23", "205"], ["126", "224"], ["175", "224"], ["231", "236"], ["239", "236"], ["23", "236"], ["217", "236"], ["236", "239"], ["263", "239"], ["23", "239"], ["251", "249"], ["251", "249"], ["260", "258"], ["260", "258"], ["270", "266"], ["270", "266"], ["283", "279"], ["283", "279"], ["181", "180"], ["181", "180"], ["160", "180"], ["23", "180"], ["217", "233"], ["23", "233"], ["88", "266"], ["88", "279"], ["148", "292"], ["295", "292"], ["23", "292"], ["249", "292"], ["292", "295"], ["23", "295"], ["258", "295"], ["23", "181"], ["169", "181"], ["126", "243"], ["160", "251"], ["260", "251"], ["180", "251"], ["23", "251"], ["253", "251"], ["251", "260"], ["23", "260"], ["262", "260"], ["88", "270"], ["283", "270"], ["88", "283"], ["270", "283"], ["66", "283"], ["254", "253"], ["254", "253"], ["263", "262"], ["263", "262"], ["23", "254"], ["217", "254"], ["23", "263"], ["236", "263"], ["49", "60"], ["49", "57"], ["49", "52"], ["49", "49"], ["135", "154"], ["135", "145"], ["135", "148"], ["135", "137"], ["135", "152"], ["135", "140"], ["135", "143"], ["135", "135"], ["135", "156"], ["307", "307"], ["307", "317"], ["307", "315"], ["307", "310"], ["307", "313"], ["325", "334"], ["325", "337"], ["325", "338"], ["325", "332"], ["325", "336"], ["325", "340"], ["325", "325"], ["325", "331"], ["325", "328"], ["60", "68"], ["60", "60"], ["60", "67"], ["60", "66"], ["60", "72"], ["60", "63"], ["156", "214"], ["156", "192"], ["156", "169"], ["156", "162"], ["156", "208"], ["156", "195"], ["156", "187"], ["156", "160"], ["156", "166"], ["156", "217"], ["156", "156"], ["169", "169"], ["169", "179"], ["169", "181"], ["169", "180"], ["169", "176"], ["169", "175"], ["169", "172"], ["195", "198"], ["195", "195"], ["195", "202"], ["217", "225"], ["217", "224"], ["217", "217"], ["217", "220"], ["202", "205"], ["224", "231"], ["224", "233"], ["224", "236"], ["236", "244"], ["236", "243"], ["236", "239"], ["236", "236"], ["243", "292"], ["243", "279"], ["243", "275"], ["243", "283"], ["243", "262"], ["243", "284"], ["243", "267"], ["243", "288"], ["243", "258"], ["243", "280"], ["243", "249"], ["243", "295"], ["243", "274"], ["243", "287"], ["243", "260"], ["243", "270"], ["243", "251"], ["243", "253"], ["243", "254"], ["243", "263"], ["243", "271"], ["243", "266"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(LOCAL,int n: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,double[][] prob = new double[n][n])<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.alloc,new double[n][n])>", "43": "<(IDENTIFIER,n,new double[n][n])<SUB>4</SUB>>", "45": "<(LOCAL,int i: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>6</SUB>>", "59": "<(LITERAL,0,int j = 0)<SUB>6</SUB>>", "61": "<(IDENTIFIER,j,j &lt; n)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,j++)<SUB>6</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,prob[i][j])<SUB>7</SUB>>", "69": "<(IDENTIFIER,prob,prob[i][j] = nextDouble())<SUB>7</SUB>>", "71": "<(IDENTIFIER,j,prob[i][j] = nextDouble())<SUB>7</SUB>>", "73": "<(IDENTIFIER,sc,nextDouble())<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.assignment,double[] var = new double[1 &lt;&lt; n])<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; n])>", "79": "<(LITERAL,1,1 &lt;&lt; n)<SUB>10</SUB>>", "81": "<(LOCAL,boolean[] was: boolean[])<SUB>11</SUB>>", "83": "<(IDENTIFIER,was,boolean[] was = new boolean[1 &lt;&lt; n])<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>11</SUB>>", "87": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>11</SUB>>", "89": "<(IDENTIFIER,Arrays,fill(var, 0.0))<SUB>12</SUB>>", "91": "<(LITERAL,0.0,fill(var, 0.0))<SUB>12</SUB>>", "93": "<(IDENTIFIER,Arrays,fill(was, false))<SUB>13</SUB>>", "95": "<(LITERAL,false,fill(was, false))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,was[0])<SUB>14</SUB>>", "99": "<(LITERAL,0,was[0] = true)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,var[(1 &lt;&lt; n) - 1] = 1.0)<SUB>15</SUB>>", "103": "<(IDENTIFIER,var,var[(1 &lt;&lt; n) - 1] = 1.0)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "109": "<(LITERAL,1.0,var[(1 &lt;&lt; n) - 1] = 1.0)<SUB>15</SUB>>", "110": "<(&lt;operator&gt;.assignment,ANY cr = new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "112": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "5": "<(IDENTIFIER,cr,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "114": "<(&lt;operator&gt;.assignment,ANY nx = new HashSet&lt;Integer&gt;())<SUB>17</SUB>>", "116": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>17</SUB>>", "7": "<(IDENTIFIER,nx,new HashSet&lt;Integer&gt;())<SUB>17</SUB>>", "119": "<(IDENTIFIER,nx,add((1 &lt;&lt; n) - 1))<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>18</SUB>>", "123": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>18</SUB>>", "125": "<(LOCAL,boolean[] fish: boolean[])<SUB>19</SUB>>", "127": "<(IDENTIFIER,fish,boolean[] fish = new boolean[n])<SUB>19</SUB>>", "129": "<(IDENTIFIER,n,new boolean[n])<SUB>19</SUB>>", "131": "<(LOCAL,int cnt: int)<SUB>20</SUB>>", "133": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.lessThan,cnt &lt; n - 1)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>20</SUB>>", "139": "<(LITERAL,1,n - 1)<SUB>20</SUB>>", "141": "<(IDENTIFIER,cnt,cnt++)<SUB>20</SUB>>", "143": "<(clear,clear())<SUB>21</SUB>>", "145": "<(addAll,addAll(nx))<SUB>22</SUB>>", "147": "<(IDENTIFIER,nx,addAll(nx))<SUB>22</SUB>>", "149": "<(IDENTIFIER,nx,clear())<SUB>23</SUB>>", "151": "<(LOCAL,Iterator&lt;Integer&gt; iterator: ANY)<SUB>24</SUB>>", "153": "<(IDENTIFIER,iterator,ANY iterator = iterator())<SUB>24</SUB>>", "155": "<(IDENTIFIER,cr,iterator())<SUB>24</SUB>>", "157": "<(IDENTIFIER,iterator,hasNext())<SUB>24</SUB>>", "159": "<(LOCAL,int curr: int)<SUB>25</SUB>>", "161": "<(IDENTIFIER,curr,int curr = next())<SUB>25</SUB>>", "163": "<(IDENTIFIER,iterator,next())<SUB>25</SUB>>", "165": "<(LOCAL,int i: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "171": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "173": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.assignment,fish[i] = ((1 &lt;&lt; i) &amp; curr) != 0)<SUB>27</SUB>>", "177": "<(IDENTIFIER,fish,fish[i] = ((1 &lt;&lt; i) &amp; curr) != 0)<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; i) &amp; curr) != 0)<SUB>27</SUB>>", "181": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>27</SUB>>", "183": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>27</SUB>>", "185": "<(LITERAL,0,((1 &lt;&lt; i) &amp; curr) != 0)<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.assignment,int fishn = 0)<SUB>29</SUB>>", "189": "<(LITERAL,0,int fishn = 0)<SUB>29</SUB>>", "191": "<(LOCAL,int i: int)<SUB>30</SUB>>", "193": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "195": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>30</SUB>>", "197": "<(IDENTIFIER,n,i &lt; n)<SUB>30</SUB>>", "199": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "201": "<(CONTROL_STRUCTURE,if (fish[i]),if (fish[i]))<SUB>31</SUB>>", "203": "<(IDENTIFIER,fish,if (fish[i]))<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,fishn++)<SUB>31</SUB>>", "207": "<(CONTROL_STRUCTURE,if (fishn == 1),if (fishn == 1))<SUB>33</SUB>>", "209": "<(IDENTIFIER,fishn,fishn == 1)<SUB>33</SUB>>", "211": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>33</SUB>>", "213": "<(LOCAL,int i: int)<SUB>35</SUB>>", "215": "<(IDENTIFIER,i,int i = 0)<SUB>35</SUB>>", "217": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>35</SUB>>", "219": "<(IDENTIFIER,n,i &lt; n)<SUB>35</SUB>>", "221": "<(IDENTIFIER,i,i++)<SUB>35</SUB>>", "223": "<(CONTROL_STRUCTURE,if (!fish[i]),if (!fish[i]))<SUB>36</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,fish[i])<SUB>36</SUB>>", "227": "<(IDENTIFIER,i,!fish[i])<SUB>36</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.addition,i + 1)<SUB>37</SUB>>", "235": "<(LITERAL,1,i + 1)<SUB>37</SUB>>", "237": "<(IDENTIFIER,j,j &lt; n)<SUB>37</SUB>>", "239": "<(&lt;operator&gt;.postIncrement,j++)<SUB>37</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "243": "<(&lt;operator&gt;.logicalNot,!fish[j])<SUB>38</SUB>>", "245": "<(IDENTIFIER,fish,!fish[j])<SUB>38</SUB>>", "247": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>38</SUB>>", "249": "<(&lt;operator&gt;.assignment,int woi = curr &amp; ~(1 &lt;&lt; i))<SUB>39</SUB>>", "251": "<(&lt;operator&gt;.and,curr &amp; ~(1 &lt;&lt; i))<SUB>39</SUB>>", "253": "<(&lt;operator&gt;.not,~(1 &lt;&lt; i))<SUB>39</SUB>>", "255": "<(LITERAL,1,1 &lt;&lt; i)<SUB>39</SUB>>", "257": "<(LOCAL,int woj: int)<SUB>40</SUB>>", "259": "<(IDENTIFIER,woj,int woj = curr &amp; ~(1 &lt;&lt; j))<SUB>40</SUB>>", "261": "<(IDENTIFIER,curr,curr &amp; ~(1 &lt;&lt; j))<SUB>40</SUB>>", "263": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>40</SUB>>", "265": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>40</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,var[woi])<SUB>41</SUB>>", "269": "<(IDENTIFIER,woi,var[woi] += var[curr] * prob[j][i])<SUB>41</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,var[curr])<SUB>41</SUB>>", "273": "<(IDENTIFIER,curr,var[curr] * prob[j][i])<SUB>41</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,prob[j])<SUB>41</SUB>>", "277": "<(IDENTIFIER,j,var[curr] * prob[j][i])<SUB>41</SUB>>", "279": "<(&lt;operator&gt;.assignmentPlus,var[woj] += var[curr] * prob[i][j])<SUB>42</SUB>>", "281": "<(IDENTIFIER,var,var[woj] += var[curr] * prob[i][j])<SUB>42</SUB>>", "283": "<(&lt;operator&gt;.multiplication,var[curr] * prob[i][j])<SUB>42</SUB>>", "285": "<(IDENTIFIER,var,var[curr] * prob[i][j])<SUB>42</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,prob[i][j])<SUB>42</SUB>>", "289": "<(IDENTIFIER,prob,var[curr] * prob[i][j])<SUB>42</SUB>>", "291": "<(IDENTIFIER,j,var[curr] * prob[i][j])<SUB>42</SUB>>", "293": "<(IDENTIFIER,nx,add(woi))<SUB>43</SUB>>", "295": "<(add,add(woj))<SUB>44</SUB>>", "297": "<(IDENTIFIER,woj,add(woj))<SUB>44</SUB>>", "299": "<(&lt;operator&gt;.assignment,double sum = 0.0)<SUB>49</SUB>>", "301": "<(LITERAL,0.0,double sum = 0.0)<SUB>49</SUB>>", "303": "<(LOCAL,int i: int)<SUB>50</SUB>>", "305": "<(IDENTIFIER,i,int i = 0)<SUB>50</SUB>>", "307": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>50</SUB>>", "309": "<(IDENTIFIER,n,i &lt; n)<SUB>50</SUB>>", "311": "<(IDENTIFIER,i,i++)<SUB>50</SUB>>", "313": "<(&lt;operator&gt;.assignmentPlus,sum += var[1 &lt;&lt; i])<SUB>51</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,var[1 &lt;&lt; i])<SUB>51</SUB>>", "317": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>51</SUB>>", "319": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>51</SUB>>", "321": "<(LOCAL,int i: int)<SUB>53</SUB>>", "323": "<(IDENTIFIER,i,int i = 0)<SUB>53</SUB>>", "325": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>53</SUB>>", "327": "<(IDENTIFIER,n,i &lt; n)<SUB>53</SUB>>", "329": "<(IDENTIFIER,i,i++)<SUB>53</SUB>>", "331": "<(printf,System.out.printf(&quot;%.6f &quot;, var[1 &lt;&lt; i] / sum))<SUB>54</SUB>>", "333": "<(IDENTIFIER,System,System.out.printf(&quot;%.6f &quot;, var[1 &lt;&lt; i] / sum))<SUB>54</SUB>>", "335": "<(LITERAL,&quot;%.6f &quot;,System.out.printf(&quot;%.6f &quot;, var[1 &lt;&lt; i] / sum))<SUB>54</SUB>>", "337": "<(&lt;operator&gt;.division,var[1 &lt;&lt; i] / sum)<SUB>54</SUB>>", "339": "<(IDENTIFIER,var,var[1 &lt;&lt; i] / sum)<SUB>54</SUB>>", "341": "<(LITERAL,1,1 &lt;&lt; i)<SUB>54</SUB>>", "343": "<(IDENTIFIER,sum,var[1 &lt;&lt; i] / sum)<SUB>54</SUB>>", "345": "<(MODIFIER,STATIC)>"}}