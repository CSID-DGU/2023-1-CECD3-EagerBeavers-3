{"edges": [["23", "25"], ["23", "137"], ["23", "138"], ["23", "139"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "61"], ["25", "64"], ["25", "67"], ["25", "68"], ["25", "74"], ["25", "85"], ["25", "88"], ["25", "89"], ["25", "95"], ["25", "96"], ["25", "101"], ["25", "102"], ["25", "132"], ["25", "135"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "60"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "54"], ["50", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "63"], ["64", "7"], ["64", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["78", "84"], ["79", "80"], ["79", "81"], ["82", "83"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "131"], ["105", "106"], ["105", "119"], ["106", "107"], ["106", "118"], ["107", "108"], ["107", "117"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["119", "120"], ["119", "130"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "129"], ["127", "128"], ["132", "133"], ["132", "134"], ["135", "136"], ["26", "33"], ["29", "42"], ["40", "47"], ["43", "63"], ["61", "65"], ["64", "72"], ["68", "75"], ["85", "93"], ["89", "98"], ["96", "111"], ["102", "132"], ["132", "135"], ["135", "139"], ["28", "26"], ["42", "40"], ["63", "61"], ["65", "64"], ["70", "68"], ["75", "79"], ["75", "85"], ["91", "89"], ["98", "96"], ["104", "102"], ["31", "38"], ["34", "29"], ["45", "53"], ["48", "43"], ["72", "70"], ["79", "82"], ["82", "84"], ["84", "139"], ["93", "91"], ["105", "104"], ["33", "31"], ["36", "34"], ["47", "45"], ["106", "122"], ["119", "105"], ["38", "36"], ["51", "58"], ["54", "48"], ["107", "106"], ["120", "119"], ["53", "51"], ["56", "54"], ["108", "107"], ["121", "127"], ["126", "120"], ["58", "56"], ["109", "108"], ["122", "121"], ["127", "126"], ["110", "109"], ["111", "110"], ["23", "28"], ["84", "139"], ["24", "139"], ["26", "139"], ["34", "139"], ["34", "139"], ["34", "139"], ["29", "139"], ["40", "139"], ["48", "139"], ["51", "139"], ["54", "139"], ["54", "139"], ["54", "139"], ["48", "139"], ["43", "139"], ["61", "139"], ["65", "139"], ["64", "139"], ["64", "139"], ["70", "139"], ["72", "139"], ["70", "139"], ["68", "139"], ["68", "139"], ["75", "139"], ["75", "139"], ["79", "139"], ["82", "139"], ["82", "139"], ["98", "139"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "61"], ["70", "68"], ["70", "68"], ["23", "85"], ["91", "89"], ["91", "89"], ["98", "96"], ["98", "96"], ["104", "102"], ["104", "102"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["51", "43"], ["48", "43"], ["61", "64"], ["23", "64"], ["65", "64"], ["75", "85"], ["43", "132"], ["23", "132"], ["102", "132"], ["132", "135"], ["23", "135"], ["23", "31"], ["23", "39"], ["23", "45"], ["23", "60"], ["29", "65"], ["23", "65"], ["23", "70"], ["72", "70"], ["68", "75"], ["23", "75"], ["23", "84"], ["70", "91"], ["23", "91"], ["93", "91"], ["23", "98"], ["89", "98"], ["106", "104"], ["106", "104"], ["119", "104"], ["119", "104"], ["23", "104"], ["31", "34"], ["23", "34"], ["45", "48"], ["23", "48"], ["51", "48"], ["54", "48"], ["64", "72"], ["23", "72"], ["43", "79"], ["23", "79"], ["79", "82"], ["23", "82"], ["72", "93"], ["23", "93"], ["106", "105"], ["106", "105"], ["119", "105"], ["119", "105"], ["23", "51"], ["23", "59"], ["107", "106"], ["107", "106"], ["108", "106"], ["23", "106"], ["120", "119"], ["120", "119"], ["23", "119"], ["106", "119"], ["51", "54"], ["23", "54"], ["108", "107"], ["108", "107"], ["23", "107"], ["127", "120"], ["106", "120"], ["23", "120"], ["109", "108"], ["109", "108"], ["23", "108"], ["127", "126"], ["106", "126"], ["23", "126"], ["85", "109"], ["23", "109"], ["23", "127"], ["75", "107"], ["75", "96"], ["75", "89"], ["75", "98"], ["75", "120"], ["75", "122"], ["75", "84"], ["75", "102"], ["75", "85"], ["75", "132"], ["75", "104"], ["75", "119"], ["75", "121"], ["75", "106"], ["75", "91"], ["75", "82"], ["75", "93"], ["75", "126"], ["75", "79"], ["75", "105"], ["75", "135"], ["75", "110"], ["75", "127"], ["75", "108"], ["75", "111"], ["75", "109"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY printer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "5": "<(IDENTIFIER,printer,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "49": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "51": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "55": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "57": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "59": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "8": "<(LOCAL,StringTokenizer inputData: ANY)<SUB>4</SUB>>", "62": "<(IDENTIFIER,inputData,ANY inputData = new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "64": "<(&lt;init&gt;,new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "65": "<(readLine,readLine())<SUB>4</SUB>>", "67": "<(LOCAL,long st: long)<SUB>5</SUB>>", "69": "<(IDENTIFIER,st,long st = parseLong(inputData.nextToken()))<SUB>5</SUB>>", "71": "<(IDENTIFIER,Long,parseLong(inputData.nextToken()))<SUB>5</SUB>>", "73": "<(IDENTIFIER,inputData,nextToken())<SUB>5</SUB>>", "75": "<(&lt;operator&gt;.equals,st == 0)<SUB>6</SUB>>", "77": "<(LITERAL,0,st == 0)<SUB>6</SUB>>", "79": "<(println,println(0))<SUB>7</SUB>>", "81": "<(LITERAL,0,println(0))<SUB>7</SUB>>", "83": "<(IDENTIFIER,printer,close())<SUB>8</SUB>>", "85": "<(&lt;operators&gt;.assignmentModulo,st %= MOD)<SUB>11</SUB>>", "87": "<(IDENTIFIER,MOD,st %= MOD)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,long years = parseLong(inputData.nextToken()))<SUB>12</SUB>>", "91": "<(parseLong,parseLong(inputData.nextToken()))<SUB>12</SUB>>", "93": "<(nextToken,nextToken())<SUB>12</SUB>>", "95": "<(LOCAL,long[][] res: long[][])<SUB>13</SUB>>", "97": "<(IDENTIFIER,res,long[][] res = exp(years))<SUB>13</SUB>>", "99": "<(IDENTIFIER,this,exp(years))<SUB>13</SUB>>", "101": "<(LOCAL,long ans: long)<SUB>14</SUB>>", "103": "<(IDENTIFIER,ans,long ans = (res[0][0] * st % MOD * 2 % MOD + res[0][1] * (-1 + MOD) % MOD) % MOD)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.addition,res[0][0] * st % MOD * 2 % MOD + res[0][1] * (-1 + MOD) % MOD)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.multiplication,res[0][0] * st % MOD * 2)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.multiplication,res[0][0] * st)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,res[0])<SUB>14</SUB>>", "113": "<(LITERAL,0,res[0][0] * st)<SUB>14</SUB>>", "115": "<(IDENTIFIER,st,res[0][0] * st)<SUB>14</SUB>>", "117": "<(LITERAL,2,res[0][0] * st % MOD * 2)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.modulo,res[0][1] * (-1 + MOD) % MOD)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,res[0][1])<SUB>14</SUB>>", "123": "<(IDENTIFIER,res,res[0][1] * (-1 + MOD))<SUB>14</SUB>>", "125": "<(LITERAL,1,res[0][1] * (-1 + MOD))<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "129": "<(IDENTIFIER,MOD,-1 + MOD)<SUB>14</SUB>>", "131": "<(IDENTIFIER,MOD,(res[0][0] * st % MOD * 2 % MOD + res[0][1] * (-1 + MOD) % MOD) % MOD)<SUB>14</SUB>>", "133": "<(IDENTIFIER,printer,println(ans))<SUB>15</SUB>>", "135": "<(close,close())<SUB>16</SUB>>", "137": "<(MODIFIER,PUBLIC)>", "139": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}