{"edges": [["23", "24"], ["23", "25"], ["23", "334"], ["23", "335"], ["23", "336"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "6"], ["25", "47"], ["25", "50"], ["25", "61"], ["25", "67"], ["25", "68"], ["25", "74"], ["25", "83"], ["25", "92"], ["25", "97"], ["25", "101"], ["25", "139"], ["25", "144"], ["25", "250"], ["25", "256"], ["25", "262"], ["25", "268"], ["25", "273"], ["25", "278"], ["25", "279"], ["25", "8"], ["25", "288"], ["25", "291"], ["25", "292"], ["25", "320"], ["25", "323"], ["25", "328"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "46"], ["44", "45"], ["47", "48"], ["47", "49"], ["50", "5"], ["50", "51"], ["50", "56"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "118"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "117"], ["115", "116"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "126"], ["122", "138"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "152"], ["144", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "169"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["169", "174"], ["169", "177"], ["169", "179"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["179", "206"], ["179", "221"], ["180", "181"], ["180", "188"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "205"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "227"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "243"], ["228", "229"], ["228", "236"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["258", "259"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["264", "265"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["268", "271"], ["271", "272"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "290"], ["291", "7"], ["292", "293"], ["292", "294"], ["292", "301"], ["292", "306"], ["292", "311"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "305"], ["302", "303"], ["302", "304"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "327"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["332", "333"], ["26", "33"], ["29", "44"], ["41", "49"], ["47", "53"], ["50", "65"], ["61", "71"], ["68", "77"], ["74", "86"], ["83", "94"], ["92", "99"], ["97", "103"], ["139", "146"], ["250", "259"], ["256", "265"], ["262", "271"], ["268", "274"], ["273", "284"], ["279", "290"], ["288", "291"], ["291", "299"], ["320", "326"], ["323", "331"], ["328", "336"], ["28", "26"], ["43", "41"], ["49", "47"], ["51", "58"], ["56", "50"], ["63", "61"], ["70", "68"], ["76", "74"], ["85", "83"], ["94", "92"], ["99", "97"], ["103", "106"], ["106", "115"], ["106", "140"], ["109", "106"], ["140", "139"], ["146", "149"], ["149", "156"], ["149", "253"], ["152", "149"], ["252", "250"], ["258", "256"], ["264", "262"], ["271", "268"], ["274", "273"], ["281", "279"], ["290", "288"], ["294", "302"], ["301", "312"], ["301", "320"], ["306", "302"], ["324", "323"], ["329", "332"], ["332", "328"], ["31", "38"], ["34", "29"], ["44", "43"], ["53", "51"], ["58", "56"], ["65", "63"], ["71", "70"], ["77", "80"], ["80", "76"], ["86", "89"], ["89", "85"], ["112", "119"], ["118", "109"], ["253", "252"], ["259", "258"], ["265", "264"], ["283", "281"], ["296", "294"], ["302", "301"], ["308", "306"], ["312", "317"], ["315", "308"], ["326", "324"], ["331", "329"], ["33", "31"], ["36", "34"], ["114", "112"], ["119", "125"], ["156", "161"], ["156", "171"], ["171", "174"], ["174", "182"], ["174", "152"], ["177", "174"], ["284", "283"], ["297", "296"], ["317", "315"], ["38", "36"], ["115", "114"], ["123", "130"], ["126", "118"], ["160", "171"], ["206", "223"], ["221", "177"], ["299", "297"], ["125", "123"], ["128", "135"], ["133", "126"], ["161", "165"], ["164", "160"], ["181", "191"], ["181", "208"], ["207", "215"], ["212", "206"], ["222", "230"], ["227", "221"], ["130", "128"], ["135", "133"], ["165", "164"], ["182", "181"], ["182", "185"], ["185", "181"], ["189", "208"], ["208", "207"], ["214", "212"], ["223", "222"], ["228", "244"], ["243", "227"], ["190", "198"], ["195", "189"], ["215", "218"], ["218", "214"], ["229", "237"], ["236", "228"], ["244", "247"], ["247", "243"], ["191", "190"], ["196", "195"], ["230", "233"], ["233", "229"], ["237", "240"], ["240", "236"], ["197", "202"], ["202", "196"], ["198", "197"], ["23", "28"], ["24", "336"], ["26", "336"], ["31", "336"], ["34", "336"], ["34", "336"], ["34", "336"], ["29", "336"], ["41", "336"], ["41", "336"], ["41", "336"], ["47", "336"], ["51", "336"], ["50", "336"], ["56", "336"], ["50", "336"], ["50", "336"], ["63", "336"], ["65", "336"], ["63", "336"], ["61", "336"], ["61", "336"], ["68", "336"], ["68", "336"], ["68", "336"], ["74", "336"], ["74", "336"], ["83", "336"], ["85", "336"], ["83", "336"], ["83", "336"], ["92", "336"], ["92", "336"], ["92", "336"], ["97", "336"], ["97", "336"], ["97", "336"], ["106", "336"], ["139", "336"], ["139", "336"], ["139", "336"], ["146", "336"], ["149", "336"], ["250", "336"], ["256", "336"], ["256", "336"], ["256", "336"], ["262", "336"], ["262", "336"], ["262", "336"], ["268", "336"], ["268", "336"], ["268", "336"], ["273", "336"], ["273", "336"], ["284", "336"], ["283", "336"], ["281", "336"], ["279", "336"], ["279", "336"], ["288", "336"], ["291", "336"], ["296", "336"], ["294", "336"], ["294", "336"], ["301", "336"], ["301", "336"], ["301", "336"], ["320", "336"], ["323", "336"], ["323", "336"], ["328", "336"], ["332", "336"], ["328", "336"], ["312", "336"], ["315", "336"], ["315", "336"], ["306", "336"], ["156", "336"], ["160", "336"], ["164", "336"], ["160", "336"], ["160", "336"], ["171", "336"], ["174", "336"], ["174", "336"], ["152", "336"], ["181", "336"], ["181", "336"], ["181", "336"], ["189", "336"], ["197", "336"], ["196", "336"], ["196", "336"], ["195", "336"], ["189", "336"], ["189", "336"], ["206", "336"], ["206", "336"], ["206", "336"], ["221", "336"], ["236", "336"], ["228", "336"], ["227", "336"], ["243", "336"], ["243", "336"], ["227", "336"], ["221", "336"], ["221", "336"], ["177", "336"], ["112", "336"], ["115", "336"], ["114", "336"], ["112", "336"], ["112", "336"], ["118", "336"], ["123", "336"], ["126", "336"], ["128", "336"], ["126", "336"], ["133", "336"], ["133", "336"], ["126", "336"], ["126", "336"], ["118", "336"], ["109", "336"], ["281", "336"], ["268", "336"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["23", "47"], ["63", "61"], ["63", "61"], ["70", "68"], ["76", "74"], ["85", "83"], ["94", "92"], ["99", "97"], ["50", "139"], ["23", "139"], ["252", "250"], ["258", "256"], ["264", "262"], ["23", "273"], ["281", "279"], ["281", "279"], ["23", "288"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["47", "50"], ["23", "50"], ["51", "50"], ["51", "50"], ["56", "50"], ["56", "50"], ["23", "103"], ["23", "146"], ["23", "268"], ["250", "268"], ["271", "268"], ["288", "291"], ["23", "291"], ["296", "294"], ["296", "294"], ["256", "306"], ["301", "306"], ["291", "320"], ["315", "320"], ["23", "320"], ["279", "323"], ["23", "323"], ["323", "328"], ["332", "328"], ["23", "31"], ["23", "39"], ["44", "43"], ["23", "43"], ["23", "51"], ["41", "51"], ["51", "56"], ["23", "56"], ["41", "56"], ["56", "63"], ["23", "63"], ["65", "63"], ["61", "70"], ["23", "70"], ["23", "76"], ["61", "76"], ["23", "85"], ["61", "85"], ["23", "94"], ["61", "94"], ["94", "99"], ["23", "99"], ["103", "106"], ["109", "106"], ["23", "106"], ["99", "106"], ["106", "109"], ["23", "109"], ["114", "112"], ["114", "112"], ["123", "118"], ["126", "118"], ["23", "118"], ["146", "149"], ["152", "149"], ["23", "149"], ["106", "149"], ["174", "149"], ["156", "152"], ["182", "152"], ["23", "152"], ["253", "252"], ["253", "252"], ["259", "258"], ["259", "258"], ["265", "264"], ["265", "264"], ["23", "271"], ["23", "281"], ["283", "281"], ["283", "281"], ["256", "301"], ["294", "301"], ["306", "301"], ["23", "301"], ["320", "332"], ["23", "332"], ["31", "34"], ["23", "34"], ["29", "44"], ["23", "44"], ["44", "65"], ["23", "65"], ["61", "71"], ["23", "71"], ["23", "77"], ["61", "77"], ["23", "80"], ["61", "80"], ["23", "86"], ["61", "86"], ["23", "89"], ["61", "89"], ["23", "171"], ["23", "253"], ["149", "253"], ["23", "259"], ["253", "259"], ["23", "265"], ["259", "265"], ["284", "283"], ["284", "283"], ["23", "283"], ["268", "296"], ["23", "296"], ["291", "312"], ["315", "312"], ["23", "312"], ["312", "315"], ["23", "315"], ["262", "315"], ["115", "114"], ["23", "114"], ["23", "123"], ["23", "138"], ["149", "156"], ["23", "156"], ["149", "156"], ["156", "160"], ["23", "160"], ["171", "174"], ["177", "174"], ["23", "174"], ["156", "174"], ["182", "174"], ["185", "174"], ["174", "177"], ["185", "177"], ["23", "177"], ["212", "206"], ["212", "206"], ["229", "221"], ["229", "221"], ["236", "221"], ["236", "221"], ["243", "221"], ["243", "221"], ["23", "284"], ["265", "284"], ["65", "115"], ["23", "115"], ["123", "126"], ["23", "126"], ["128", "126"], ["128", "126"], ["133", "126"], ["133", "126"], ["63", "128"], ["133", "128"], ["23", "128"], ["51", "128"], ["112", "128"], ["128", "133"], ["23", "133"], ["56", "133"], ["112", "133"], ["156", "164"], ["23", "164"], ["182", "181"], ["182", "181"], ["185", "181"], ["185", "181"], ["182", "189"], ["23", "189"], ["174", "189"], ["185", "189"], ["23", "212"], ["214", "212"], ["214", "212"], ["229", "227"], ["229", "227"], ["236", "227"], ["236", "227"], ["243", "227"], ["243", "227"], ["156", "165"], ["23", "165"], ["156", "182"], ["23", "182"], ["174", "182"], ["174", "185"], ["23", "185"], ["182", "185"], ["68", "214"], ["236", "214"], ["118", "214"], ["243", "214"], ["229", "228"], ["229", "228"], ["236", "228"], ["236", "228"], ["68", "243"], ["236", "243"], ["229", "243"], ["182", "195"], ["23", "195"], ["174", "195"], ["185", "195"], ["68", "229"], ["214", "229"], ["139", "229"], ["243", "229"], ["68", "236"], ["229", "236"], ["214", "236"], ["182", "196"], ["23", "196"], ["174", "196"], ["185", "196"], ["182", "197"], ["23", "197"], ["174", "202"], ["185", "202"], ["23", "202"], ["182", "198"], ["23", "198"], ["106", "115"], ["106", "128"], ["106", "114"], ["106", "119"], ["106", "112"], ["106", "130"], ["106", "118"], ["106", "123"], ["106", "106"], ["106", "126"], ["106", "135"], ["106", "125"], ["106", "109"], ["106", "133"], ["149", "149"], ["149", "152"], ["149", "174"], ["149", "171"], ["149", "156"], ["301", "308"], ["301", "301"], ["301", "317"], ["301", "302"], ["301", "306"], ["301", "315"], ["301", "312"], ["156", "161"], ["156", "164"], ["156", "160"], ["156", "165"], ["174", "214"], ["174", "230"], ["174", "215"], ["174", "240"], ["174", "244"], ["174", "243"], ["174", "228"], ["174", "206"], ["174", "247"], ["174", "181"], ["174", "208"], ["174", "223"], ["174", "207"], ["174", "212"], ["174", "174"], ["174", "182"], ["174", "221"], ["174", "233"], ["174", "236"], ["174", "237"], ["174", "177"], ["174", "229"], ["174", "227"], ["174", "222"], ["174", "218"], ["181", "196"], ["181", "197"], ["181", "198"], ["181", "189"], ["181", "191"], ["181", "195"], ["181", "190"], ["181", "202"], ["182", "185"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scanner = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,String[] pieces = split(&quot;\\\\s+&quot;))<SUB>4</SUB>>", "43": "<(split,split(&quot;\\\\s+&quot;))<SUB>4</SUB>>", "45": "<(IDENTIFIER,scanner,readLine())<SUB>4</SUB>>", "6": "<(LOCAL,Point origin: ANY)<SUB>8</SUB>>", "48": "<(IDENTIFIER,origin,ANY origin = new Point(Integer.parseInt(pieces[0]), Integer.parseInt(pieces[1])))<SUB>8</SUB>>", "50": "<(&lt;init&gt;,new Point(Integer.parseInt(pieces[0]), Integer.parseInt(pieces[1])))<SUB>8</SUB>>", "51": "<(parseInt,Integer.parseInt(pieces[0]))<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,pieces[0])<SUB>8</SUB>>", "55": "<(LITERAL,0,Integer.parseInt(pieces[0]))<SUB>8</SUB>>", "57": "<(IDENTIFIER,Integer,Integer.parseInt(pieces[1]))<SUB>8</SUB>>", "59": "<(IDENTIFIER,pieces,Integer.parseInt(pieces[1]))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,N = parseInt(scanner.readLine()))<SUB>10</SUB>>", "63": "<(parseInt,parseInt(scanner.readLine()))<SUB>10</SUB>>", "65": "<(readLine,readLine())<SUB>10</SUB>>", "67": "<(LOCAL,Point[] points: ANY)<SUB>12</SUB>>", "69": "<(IDENTIFIER,points,ANY points = new Point[N + 1])<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.addition,N + 1)<SUB>12</SUB>>", "73": "<(LITERAL,1,N + 1)<SUB>12</SUB>>", "75": "<(IDENTIFIER,distances,distances = new int[N + 1][N + 1])<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.addition,N + 1)<SUB>13</SUB>>", "79": "<(LITERAL,1,N + 1)<SUB>13</SUB>>", "81": "<(IDENTIFIER,N,N + 1)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,parents = new int[N + 1][N + 1])<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[N + 1][N + 1])>", "87": "<(IDENTIFIER,N,N + 1)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.addition,N + 1)<SUB>14</SUB>>", "91": "<(LITERAL,1,N + 1)<SUB>14</SUB>>", "93": "<(IDENTIFIER,longNames,longNames = new String[N][N])<SUB>15</SUB>>", "95": "<(IDENTIFIER,N,new String[N][N])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,shortNames = new String[N])<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.alloc,new String[N])>", "101": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "105": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "107": "<(IDENTIFIER,i,i &lt; N)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.preIncrement,++i)<SUB>18</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(IDENTIFIER,pieces,pieces = split(&quot;\\\\s+&quot;))<SUB>19</SUB>>", "115": "<(readLine,readLine())<SUB>19</SUB>>", "117": "<(LITERAL,&quot;\\\\s+&quot;,split(&quot;\\\\s+&quot;))<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,points[i])<SUB>21</SUB>>", "121": "<(IDENTIFIER,i,points[i] = new Point(Integer.parseInt(pieces[0]), Integer.parseInt(pieces[1])))<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "125": "<(&lt;operator&gt;.alloc,new Point(Integer.parseInt(pieces[0]), Integer.parseInt(pieces[1])))<SUB>21</SUB>>", "127": "<(IDENTIFIER,$obj3,new Point(Integer.parseInt(pieces[0]), Integer.parseInt(pieces[1])))>", "129": "<(IDENTIFIER,Integer,Integer.parseInt(pieces[0]))<SUB>21</SUB>>", "131": "<(IDENTIFIER,pieces,Integer.parseInt(pieces[0]))<SUB>21</SUB>>", "133": "<(parseInt,Integer.parseInt(pieces[1]))<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,pieces[1])<SUB>21</SUB>>", "137": "<(LITERAL,1,Integer.parseInt(pieces[1]))<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.assignment,points[N] = origin)<SUB>24</SUB>>", "141": "<(IDENTIFIER,points,points[N] = origin)<SUB>24</SUB>>", "143": "<(IDENTIFIER,origin,points[N] = origin)<SUB>24</SUB>>", "145": "<(LOCAL,int i: int)<SUB>26</SUB>>", "147": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>26</SUB>>", "151": "<(IDENTIFIER,N,i &lt;= N)<SUB>26</SUB>>", "153": "<(IDENTIFIER,i,++i)<SUB>26</SUB>>", "155": "<(CONTROL_STRUCTURE,if (i &lt; N),if (i &lt; N))<SUB>27</SUB>>", "157": "<(IDENTIFIER,i,i &lt; N)<SUB>27</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,shortNames[i])<SUB>28</SUB>>", "163": "<(IDENTIFIER,i,shortNames[i] = (i + 1) + &quot; &quot;)<SUB>28</SUB>>", "165": "<(&lt;operator&gt;.addition,i + 1)<SUB>28</SUB>>", "167": "<(LITERAL,1,i + 1)<SUB>28</SUB>>", "169": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= N); ++j),for (int j = 0; Some(j &lt;= N); ++j))<SUB>31</SUB>>", "171": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>31</SUB>>", "173": "<(LITERAL,0,int j = 0)<SUB>31</SUB>>", "175": "<(IDENTIFIER,j,j &lt;= N)<SUB>31</SUB>>", "177": "<(&lt;operator&gt;.preIncrement,++j)<SUB>31</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "181": "<(&lt;operator&gt;.logicalAnd,i &lt; N &amp;&amp; j &lt; N)<SUB>32</SUB>>", "183": "<(IDENTIFIER,i,i &lt; N)<SUB>32</SUB>>", "185": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>32</SUB>>", "187": "<(IDENTIFIER,N,j &lt; N)<SUB>32</SUB>>", "189": "<(&lt;operator&gt;.assignment,longNames[i][j] = (i + 1) + &quot; &quot; + (j + 1) + &quot; &quot;)<SUB>33</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,longNames[i])<SUB>33</SUB>>", "193": "<(IDENTIFIER,i,longNames[i][j] = (i + 1) + &quot; &quot; + (j + 1) + &quot; &quot;)<SUB>33</SUB>>", "195": "<(&lt;operator&gt;.addition,(i + 1) + &quot; &quot; + (j + 1) + &quot; &quot;)<SUB>33</SUB>>", "197": "<(&lt;operator&gt;.addition,(i + 1) + &quot; &quot;)<SUB>33</SUB>>", "199": "<(IDENTIFIER,i,i + 1)<SUB>33</SUB>>", "201": "<(LITERAL,&quot; &quot;,(i + 1) + &quot; &quot;)<SUB>33</SUB>>", "203": "<(IDENTIFIER,j,j + 1)<SUB>33</SUB>>", "205": "<(LITERAL,&quot; &quot;,(i + 1) + &quot; &quot; + (j + 1) + &quot; &quot;)<SUB>33</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,distances[i][j])<SUB>36</SUB>>", "209": "<(IDENTIFIER,distances,distances[i][j] = 2 * points[i].distance(points[j]))<SUB>36</SUB>>", "211": "<(IDENTIFIER,j,distances[i][j] = 2 * points[i].distance(points[j]))<SUB>36</SUB>>", "213": "<(LITERAL,2,2 * points[i].distance(points[j]))<SUB>36</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,points[i])<SUB>36</SUB>>", "217": "<(IDENTIFIER,i,distance(points[j]))<SUB>36</SUB>>", "219": "<(IDENTIFIER,points,distance(points[j]))<SUB>36</SUB>>", "221": "<(&lt;operator&gt;.assignment,parents[i][j] = points[i].distance(points[N]) + points[i].distance(points[j]) + points[j].distance(points[N]))<SUB>37</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,parents[i])<SUB>37</SUB>>", "225": "<(IDENTIFIER,i,parents[i][j] = points[i].distance(points[N]) + points[i].distance(points[j]) + points[j].distance(points[N]))<SUB>37</SUB>>", "227": "<(&lt;operator&gt;.addition,points[i].distance(points[N]) + points[i].distance(points[j]) + points[j].distance(points[N]))<SUB>37</SUB>>", "229": "<(distance,distance(points[N]))<SUB>37</SUB>>", "231": "<(IDENTIFIER,points,distance(points[N]))<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,points[N])<SUB>37</SUB>>", "235": "<(IDENTIFIER,N,distance(points[N]))<SUB>37</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,points[i])<SUB>37</SUB>>", "239": "<(IDENTIFIER,i,distance(points[j]))<SUB>37</SUB>>", "241": "<(IDENTIFIER,points,distance(points[j]))<SUB>37</SUB>>", "243": "<(distance,distance(points[N]))<SUB>37</SUB>>", "245": "<(IDENTIFIER,points,distance(points[N]))<SUB>37</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,points[N])<SUB>37</SUB>>", "249": "<(IDENTIFIER,N,distance(points[N]))<SUB>37</SUB>>", "251": "<(IDENTIFIER,distance,distance = new int[1 &lt;&lt; N])<SUB>41</SUB>>", "253": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>41</SUB>>", "255": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>41</SUB>>", "257": "<(IDENTIFIER,parent,parent = new int[1 &lt;&lt; N])<SUB>42</SUB>>", "259": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>42</SUB>>", "261": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>42</SUB>>", "263": "<(IDENTIFIER,answers,answers = new String[1 &lt;&lt; N])<SUB>43</SUB>>", "265": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>43</SUB>>", "267": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>43</SUB>>", "269": "<(IDENTIFIER,Arrays,fill(distance, -1))<SUB>44</SUB>>", "271": "<(&lt;operator&gt;.minus,-1)<SUB>44</SUB>>", "273": "<(&lt;operator&gt;.assignment,distance[0] = 0)<SUB>45</SUB>>", "275": "<(IDENTIFIER,distance,distance[0] = 0)<SUB>45</SUB>>", "277": "<(LITERAL,0,distance[0] = 0)<SUB>45</SUB>>", "279": "<(&lt;operator&gt;.assignment,int result = rec((1 &lt;&lt; N) - 1))<SUB>47</SUB>>", "281": "<(rec,rec((1 &lt;&lt; N) - 1))<SUB>47</SUB>>", "283": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; N) - 1)<SUB>47</SUB>>", "285": "<(LITERAL,1,1 &lt;&lt; N)<SUB>47</SUB>>", "287": "<(LITERAL,1,(1 &lt;&lt; N) - 1)<SUB>47</SUB>>", "288": "<(&lt;operator&gt;.assignment,StringBuilder answer = new StringBuilder())<SUB>48</SUB>>", "290": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>48</SUB>>", "7": "<(IDENTIFIER,answer,new StringBuilder())<SUB>48</SUB>>", "293": "<(LOCAL,int i: int)<SUB>50</SUB>>", "295": "<(IDENTIFIER,i,int i = distance.length - 1)<SUB>50</SUB>>", "297": "<(&lt;operator&gt;.fieldAccess,distance.length)<SUB>50</SUB>>", "299": "<(FIELD_IDENTIFIER,length,length)<SUB>50</SUB>>", "301": "<(&lt;operator&gt;.notEquals,parent[i] != i)<SUB>50</SUB>>", "303": "<(IDENTIFIER,parent,parent[i] != i)<SUB>50</SUB>>", "305": "<(IDENTIFIER,i,parent[i] != i)<SUB>50</SUB>>", "307": "<(IDENTIFIER,i,i = parent[i])<SUB>50</SUB>>", "309": "<(IDENTIFIER,parent,i = parent[i])<SUB>50</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "313": "<(IDENTIFIER,answer,answer.append(&quot;0 &quot;))<SUB>51</SUB>>", "315": "<(append,append(answers[i]))<SUB>52</SUB>>", "317": "<(&lt;operator&gt;.indexAccess,answers[i])<SUB>52</SUB>>", "319": "<(IDENTIFIER,i,append(answers[i]))<SUB>52</SUB>>", "321": "<(IDENTIFIER,answer,answer.append(&quot;0&quot;))<SUB>55</SUB>>", "323": "<(println,System.out.println(result))<SUB>56</SUB>>", "325": "<(IDENTIFIER,System,System.out.println(result))<SUB>56</SUB>>", "327": "<(IDENTIFIER,result,System.out.println(result))<SUB>56</SUB>>", "329": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>57</SUB>>", "331": "<(FIELD_IDENTIFIER,out,out)<SUB>57</SUB>>", "333": "<(IDENTIFIER,answer,answer.toString())<SUB>57</SUB>>", "335": "<(MODIFIER,STATIC)>"}}