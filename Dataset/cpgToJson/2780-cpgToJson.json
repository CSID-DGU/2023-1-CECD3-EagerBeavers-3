{"edges": [["19", "21"], ["19", "109"], ["19", "110"], ["19", "111"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "41"], ["38", "42"], ["38", "46"], ["38", "47"], ["38", "51"], ["38", "52"], ["38", "55"], ["38", "102"], ["38", "107"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "63"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "83"], ["64", "65"], ["64", "72"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "91"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "111"], ["35", "39"], ["28", "26"], ["39", "44"], ["42", "49"], ["47", "52"], ["52", "57"], ["102", "107"], ["107", "35"], ["44", "42"], ["49", "47"], ["56", "66"], ["56", "105"], ["103", "102"], ["57", "56"], ["57", "60"], ["60", "56"], ["105", "103"], ["65", "75"], ["65", "85"], ["84", "57"], ["84", "94"], ["66", "65"], ["66", "69"], ["69", "65"], ["73", "80"], ["78", "85"], ["85", "84"], ["85", "88"], ["88", "84"], ["92", "99"], ["97", "57"], ["75", "73"], ["80", "78"], ["94", "92"], ["99", "97"], ["19", "24"], ["20", "111"], ["22", "111"], ["25", "111"], ["25", "111"], ["32", "111"], ["30", "111"], ["30", "111"], ["35", "111"], ["35", "111"], ["107", "111"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["107", "35"], ["19", "35"], ["44", "42"], ["49", "47"], ["19", "52"], ["32", "39"], ["49", "39"], ["19", "39"], ["52", "102"], ["73", "102"], ["92", "102"], ["19", "102"], ["35", "107"], ["19", "107"], ["39", "44"], ["19", "44"], ["44", "49"], ["19", "49"], ["57", "56"], ["57", "56"], ["84", "56"], ["60", "56"], ["60", "56"], ["42", "57"], ["85", "57"], ["97", "57"], ["19", "57"], ["47", "60"], ["85", "60"], ["88", "60"], ["99", "60"], ["19", "60"], ["66", "65"], ["66", "65"], ["56", "65"], ["69", "65"], ["69", "65"], ["75", "73"], ["75", "73"], ["80", "78"], ["80", "78"], ["85", "84"], ["85", "84"], ["56", "84"], ["88", "84"], ["88", "84"], ["94", "92"], ["94", "92"], ["99", "97"], ["99", "97"], ["47", "66"], ["60", "66"], ["85", "66"], ["88", "66"], ["99", "66"], ["19", "66"], ["57", "66"], ["66", "69"], ["19", "69"], ["52", "73"], ["92", "73"], ["19", "73"], ["66", "85"], ["69", "85"], ["80", "85"], ["19", "85"], ["66", "85"], ["78", "85"], ["85", "88"], ["19", "88"], ["52", "92"], ["73", "92"], ["19", "92"], ["66", "75"], ["19", "75"], ["66", "75"], ["69", "75"], ["75", "80"], ["19", "80"], ["75", "80"], ["85", "94"], ["19", "94"], ["85", "94"], ["88", "94"], ["94", "99"], ["19", "99"], ["94", "99"], ["35", "107"], ["35", "47"], ["35", "49"], ["35", "42"], ["35", "57"], ["35", "52"], ["35", "102"], ["35", "103"], ["35", "56"], ["35", "44"], ["35", "35"], ["35", "105"], ["35", "39"], ["56", "57"], ["56", "66"], ["56", "84"], ["56", "85"], ["56", "56"], ["56", "65"], ["57", "60"], ["65", "73"], ["65", "75"], ["65", "80"], ["65", "78"], ["84", "94"], ["84", "99"], ["84", "92"], ["84", "97"], ["66", "69"], ["85", "88"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int pairs: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,pairs,int pairs = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.greaterThan,pairs &gt; 0)<SUB>4</SUB>>", "37": "<(LITERAL,0,pairs &gt; 0)<SUB>4</SUB>>", "39": "<(nextLine,nextLine())<SUB>5</SUB>>", "41": "<(LOCAL,int a: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,a,int a = nextInt())<SUB>6</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>7</SUB>>", "49": "<(nextInt,nextInt())<SUB>7</SUB>>", "51": "<(LOCAL,int count: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,count,int count = 0)<SUB>8</SUB>>", "55": "<(CONTROL_STRUCTURE,while (a != 0 &amp;&amp; b != 0),while (a != 0 &amp;&amp; b != 0))<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.notEquals,a != 0)<SUB>9</SUB>>", "59": "<(LITERAL,0,a != 0)<SUB>9</SUB>>", "61": "<(IDENTIFIER,b,b != 0)<SUB>9</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.logicalAnd,b &gt;= a &amp;&amp; a != 0)<SUB>10</SUB>>", "67": "<(IDENTIFIER,b,b &gt;= a)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.notEquals,a != 0)<SUB>10</SUB>>", "71": "<(LITERAL,0,a != 0)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.assignmentPlus,count += b / a)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.division,b / a)<SUB>11</SUB>>", "77": "<(IDENTIFIER,a,b / a)<SUB>11</SUB>>", "79": "<(IDENTIFIER,b,b = b % a)<SUB>12</SUB>>", "81": "<(IDENTIFIER,b,b % a)<SUB>12</SUB>>", "83": "<(CONTROL_STRUCTURE,if (a &gt; b &amp;&amp; b != 0),if (a &gt; b &amp;&amp; b != 0))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.greaterThan,a &gt; b)<SUB>14</SUB>>", "87": "<(IDENTIFIER,b,a &gt; b)<SUB>14</SUB>>", "89": "<(IDENTIFIER,b,b != 0)<SUB>14</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "93": "<(IDENTIFIER,count,count += a / b)<SUB>15</SUB>>", "95": "<(IDENTIFIER,a,a / b)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,a = a % b)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.modulo,a % b)<SUB>16</SUB>>", "101": "<(IDENTIFIER,b,a % b)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "105": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,pairs--)<SUB>20</SUB>>", "109": "<(MODIFIER,PUBLIC)>", "111": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}