{"edges": [["21", "23"], ["21", "181"], ["21", "182"], ["21", "183"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "46"], ["23", "47"], ["23", "50"], ["23", "66"], ["23", "124"], ["23", "125"], ["23", "130"], ["23", "142"], ["23", "143"], ["23", "148"], ["23", "176"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "54"], ["50", "57"], ["50", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["66", "73"], ["66", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "84"], ["80", "87"], ["80", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "95"], ["89", "111"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "100"], ["96", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["101", "102"], ["101", "103"], ["101", "104"], ["104", "105"], ["104", "108"], ["104", "110"], ["105", "106"], ["105", "107"], ["108", "109"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "119"], ["115", "123"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "122"], ["125", "126"], ["125", "127"], ["127", "128"], ["128", "129"], ["130", "131"], ["130", "133"], ["131", "132"], ["133", "134"], ["133", "135"], ["133", "139"], ["135", "136"], ["135", "137"], ["137", "138"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["146", "147"], ["148", "149"], ["148", "151"], ["149", "150"], ["151", "152"], ["151", "153"], ["151", "157"], ["151", "158"], ["151", "164"], ["153", "154"], ["153", "155"], ["155", "156"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["162", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["24", "30"], ["27", "33"], ["31", "34"], ["34", "41"], ["39", "43"], ["43", "47"], ["47", "51"], ["125", "131"], ["143", "149"], ["176", "183"], ["26", "24"], ["28", "27"], ["33", "31"], ["41", "39"], ["51", "54"], ["54", "61"], ["54", "67"], ["57", "54"], ["67", "70"], ["70", "77"], ["70", "128"], ["73", "70"], ["127", "125"], ["131", "137"], ["131", "146"], ["145", "143"], ["149", "155"], ["149", "178"], ["178", "176"], ["30", "28"], ["60", "57"], ["77", "81"], ["128", "127"], ["135", "139"], ["139", "131"], ["146", "145"], ["153", "162"], ["158", "165"], ["61", "64"], ["64", "60"], ["81", "84"], ["84", "92"], ["84", "73"], ["87", "84"], ["137", "135"], ["155", "153"], ["160", "158"], ["165", "149"], ["165", "169"], ["90", "97"], ["111", "87"], ["162", "160"], ["169", "174"], ["172", "149"], ["92", "90"], ["96", "107"], ["96", "112"], ["112", "118"], ["174", "172"], ["97", "96"], ["101", "112"], ["116", "119"], ["119", "111"], ["118", "116"], ["105", "108"], ["108", "101"], ["107", "105"], ["21", "26"], ["22", "183"], ["24", "183"], ["27", "183"], ["27", "183"], ["31", "183"], ["34", "183"], ["41", "183"], ["39", "183"], ["39", "183"], ["43", "183"], ["43", "183"], ["47", "183"], ["67", "183"], ["70", "183"], ["70", "183"], ["70", "183"], ["127", "183"], ["131", "183"], ["145", "183"], ["143", "183"], ["149", "183"], ["149", "183"], ["176", "183"], ["178", "183"], ["178", "183"], ["176", "183"], ["176", "183"], ["162", "183"], ["160", "183"], ["158", "183"], ["158", "183"], ["165", "183"], ["165", "183"], ["165", "183"], ["169", "183"], ["169", "183"], ["169", "183"], ["174", "183"], ["172", "183"], ["172", "183"], ["139", "183"], ["139", "183"], ["77", "183"], ["77", "183"], ["81", "183"], ["84", "183"], ["84", "183"], ["73", "183"], ["90", "183"], ["90", "183"], ["96", "183"], ["96", "183"], ["108", "183"], ["108", "183"], ["101", "183"], ["112", "183"], ["111", "183"], ["119", "183"], ["119", "183"], ["111", "183"], ["87", "183"], ["60", "183"], ["64", "183"], ["60", "183"], ["60", "183"], ["57", "183"], ["139", "183"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["21", "43"], ["21", "47"], ["127", "125"], ["145", "143"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "51"], ["21", "67"], ["160", "176"], ["21", "176"], ["178", "176"], ["178", "176"], ["27", "41"], ["21", "41"], ["51", "54"], ["57", "54"], ["21", "54"], ["39", "54"], ["54", "57"], ["21", "57"], ["64", "60"], ["67", "70"], ["73", "70"], ["21", "70"], ["54", "70"], ["84", "70"], ["119", "73"], ["21", "73"], ["70", "73"], ["21", "77"], ["128", "127"], ["125", "131"], ["137", "131"], ["21", "131"], ["137", "135"], ["146", "145"], ["143", "149"], ["155", "149"], ["21", "149"], ["155", "153"], ["160", "158"], ["160", "158"], ["146", "178"], ["21", "178"], ["47", "178"], ["172", "178"], ["70", "81"], ["21", "81"], ["34", "128"], ["112", "128"], ["21", "128"], ["21", "139"], ["135", "139"], ["128", "146"], ["21", "146"], ["41", "64"], ["21", "64"], ["81", "84"], ["87", "84"], ["21", "84"], ["70", "84"], ["119", "87"], ["21", "87"], ["131", "137"], ["21", "137"], ["149", "155"], ["21", "155"], ["21", "160"], ["162", "160"], ["158", "165"], ["21", "165"], ["43", "165"], ["169", "165"], ["165", "169"], ["21", "169"], ["174", "172"], ["77", "90"], ["112", "90"], ["21", "90"], ["112", "111"], ["112", "111"], ["116", "111"], ["119", "111"], ["21", "111"], ["153", "162"], ["21", "162"], ["97", "96"], ["97", "96"], ["97", "112"], ["101", "112"], ["21", "112"], ["97", "112"], ["101", "112"], ["21", "116"], ["21", "123"], ["162", "174"], ["21", "174"], ["34", "97"], ["112", "97"], ["21", "97"], ["90", "97"], ["97", "101"], ["21", "101"], ["97", "101"], ["105", "101"], ["108", "101"], ["116", "119"], ["21", "119"], ["70", "119"], ["84", "119"], ["21", "105"], ["21", "110"], ["105", "108"], ["21", "108"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "54"], ["54", "61"], ["70", "73"], ["70", "77"], ["70", "81"], ["70", "84"], ["70", "70"], ["131", "131"], ["131", "137"], ["131", "135"], ["131", "139"], ["149", "160"], ["149", "149"], ["149", "162"], ["149", "153"], ["149", "165"], ["149", "155"], ["149", "158"], ["84", "96"], ["84", "116"], ["84", "84"], ["84", "119"], ["84", "92"], ["84", "87"], ["84", "97"], ["84", "112"], ["84", "90"], ["84", "118"], ["84", "111"], ["165", "169"], ["165", "174"], ["165", "172"], ["96", "107"], ["96", "101"], ["96", "105"], ["96", "108"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,Map&lt;Long, List&lt;Interval&gt;&gt; map: ANY)<SUB>5</SUB>>", "32": "<(IDENTIFIER,map,ANY map = new HashMap&lt;&gt;())<SUB>5</SUB>>", "34": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>5</SUB>>", "35": "<(LOCAL,int i: int)<SUB>6</SUB>>", "37": "<(LOCAL,int n: int)<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "41": "<(nextInt,nextInt())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int max = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,long ans = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,i = 1)<SUB>8</SUB>>", "53": "<(LITERAL,1,i = 1)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt;= n)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,a[i] = nextLong())<SUB>9</SUB>>", "65": "<(IDENTIFIER,scan,nextLong())<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,i = 1)<SUB>11</SUB>>", "69": "<(LITERAL,1,i = 1)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,i &lt;= n)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>12</SUB>>", "79": "<(LITERAL,0,long sum = 0)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,j = i)<SUB>13</SUB>>", "83": "<(IDENTIFIER,i,j = i)<SUB>13</SUB>>", "85": "<(IDENTIFIER,j,j &lt;= n)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "91": "<(IDENTIFIER,sum,sum += a[j])<SUB>14</SUB>>", "93": "<(IDENTIFIER,a,sum += a[j])<SUB>14</SUB>>", "95": "<(CONTROL_STRUCTURE,if (!map.containsKey(sum)),if (!map.containsKey(sum)))<SUB>15</SUB>>", "97": "<(containsKey,containsKey(sum))<SUB>15</SUB>>", "99": "<(IDENTIFIER,sum,containsKey(sum))<SUB>15</SUB>>", "101": "<(put,put(sum, new ArrayList&lt;&gt;()))<SUB>16</SUB>>", "103": "<(IDENTIFIER,sum,put(sum, new ArrayList&lt;&gt;()))<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "107": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>16</SUB>>", "109": "<(IDENTIFIER,$obj2,new ArrayList&lt;&gt;())>", "111": "<(add,add(new Interval(i, j)))<SUB>18</SUB>>", "113": "<(IDENTIFIER,map,get(sum))<SUB>18</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "117": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "119": "<(&lt;init&gt;,new Interval(i, j))<SUB>18</SUB>>", "121": "<(IDENTIFIER,i,new Interval(i, j))<SUB>18</SUB>>", "123": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "125": "<(&lt;operator&gt;.assignment,)<SUB>21</SUB>>", "127": "<(iterator,&lt;empty&gt;)<SUB>21</SUB>>", "129": "<(IDENTIFIER,map,values())<SUB>21</SUB>>", "131": "<(hasNext,&lt;empty&gt;)<SUB>21</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>21</SUB>>", "137": "<(next,&lt;empty&gt;)<SUB>21</SUB>>", "139": "<(sort,sort(list))<SUB>22</SUB>>", "141": "<(IDENTIFIER,list,sort(list))<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,)<SUB>24</SUB>>", "145": "<(iterator,&lt;empty&gt;)<SUB>24</SUB>>", "147": "<(IDENTIFIER,map,entrySet())<SUB>24</SUB>>", "149": "<(hasNext,&lt;empty&gt;)<SUB>24</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>24</SUB>>", "155": "<(next,&lt;empty&gt;)<SUB>24</SUB>>", "157": "<(LOCAL,int total: int)<SUB>25</SUB>>", "159": "<(IDENTIFIER,total,int total = getTotal(entry.getValue()))<SUB>25</SUB>>", "161": "<(IDENTIFIER,this,getTotal(entry.getValue()))<SUB>25</SUB>>", "163": "<(IDENTIFIER,entry,getValue())<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.greaterThan,total &gt; max)<SUB>26</SUB>>", "167": "<(IDENTIFIER,max,total &gt; max)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.assignment,max = total)<SUB>27</SUB>>", "171": "<(IDENTIFIER,total,max = total)<SUB>27</SUB>>", "173": "<(IDENTIFIER,ans,ans = getKey())<SUB>28</SUB>>", "175": "<(IDENTIFIER,entry,getKey())<SUB>28</SUB>>", "177": "<(IDENTIFIER,this,solve(map.get(ans)))<SUB>31</SUB>>", "179": "<(IDENTIFIER,map,get(ans))<SUB>31</SUB>>", "181": "<(MODIFIER,PUBLIC)>", "183": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}