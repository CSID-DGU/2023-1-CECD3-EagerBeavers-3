{"edges": [["21", "22"], ["21", "23"], ["21", "104"], ["21", "105"], ["21", "106"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "100"], ["39", "40"], ["39", "41"], ["39", "6"], ["39", "47"], ["39", "48"], ["39", "54"], ["39", "60"], ["39", "61"], ["39", "67"], ["39", "68"], ["39", "71"], ["39", "92"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["50", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["56", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["63", "66"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "78"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "82"], ["78", "84"], ["78", "90"], ["79", "80"], ["79", "81"], ["82", "5"], ["82", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["86", "89"], ["90", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "99"], ["100", "101"], ["101", "102"], ["102", "103"], ["24", "31"], ["27", "45"], ["26", "24"], ["29", "36"], ["32", "27"], ["41", "50"], ["48", "56"], ["54", "63"], ["61", "68"], ["68", "73"], ["92", "106"], ["92", "102"], ["31", "29"], ["34", "32"], ["43", "41"], ["50", "48"], ["56", "54"], ["63", "61"], ["72", "81"], ["72", "95"], ["93", "96"], ["96", "92"], ["102", "106"], ["36", "34"], ["45", "43"], ["73", "72"], ["73", "76"], ["76", "72"], ["79", "82"], ["82", "86"], ["84", "90"], ["90", "73"], ["95", "93"], ["81", "79"], ["86", "84"], ["21", "26"], ["22", "106"], ["24", "106"], ["29", "106"], ["32", "106"], ["32", "106"], ["32", "106"], ["27", "106"], ["43", "106"], ["41", "106"], ["41", "106"], ["48", "106"], ["56", "106"], ["56", "106"], ["54", "106"], ["54", "106"], ["63", "106"], ["63", "106"], ["63", "106"], ["61", "106"], ["61", "106"], ["68", "106"], ["73", "106"], ["72", "106"], ["72", "106"], ["72", "106"], ["92", "106"], ["96", "106"], ["92", "106"], ["79", "106"], ["82", "106"], ["86", "106"], ["86", "106"], ["86", "106"], ["84", "106"], ["84", "106"], ["90", "106"], ["102", "106"], ["43", "106"], ["21", "22"], ["21", "24"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "29"], ["21", "37"], ["43", "41"], ["43", "41"], ["50", "48"], ["50", "48"], ["50", "48"], ["56", "54"], ["56", "54"], ["56", "54"], ["63", "61"], ["63", "61"], ["63", "61"], ["21", "68"], ["21", "101"], ["29", "32"], ["21", "32"], ["21", "92"], ["21", "43"], ["45", "43"], ["21", "50"], ["45", "50"], ["41", "50"], ["50", "56"], ["21", "56"], ["50", "56"], ["50", "56"], ["56", "63"], ["21", "63"], ["48", "63"], ["54", "63"], ["73", "72"], ["73", "72"], ["76", "72"], ["21", "79"], ["86", "84"], ["86", "84"], ["86", "84"], ["21", "96"], ["21", "102"], ["27", "45"], ["21", "45"], ["68", "73"], ["90", "73"], ["21", "73"], ["61", "76"], ["84", "76"], ["21", "76"], ["79", "82"], ["21", "82"], ["73", "90"], ["21", "90"], ["63", "86"], ["21", "86"], ["82", "86"], ["63", "86"], ["92", "102"], ["72", "73"], ["72", "81"], ["72", "84"], ["72", "72"], ["72", "82"], ["72", "90"], ["72", "79"], ["72", "86"], ["73", "76"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY r = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(BLOCK,try,try)<SUB>2</SUB>>", "41": "<(&lt;operator&gt;.assignment,int N = parseInt(r.readLine()))<SUB>3</SUB>>", "43": "<(parseInt,parseInt(r.readLine()))<SUB>3</SUB>>", "45": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,Matrix m1: ANY)<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY m1 = readMatrix(r, N))<SUB>4</SUB>>", "50": "<(readMatrix,readMatrix(r, N))<SUB>4</SUB>>", "52": "<(IDENTIFIER,r,readMatrix(r, N))<SUB>4</SUB>>", "54": "<(&lt;operator&gt;.assignment,ANY m2 = readMatrix(r, N))<SUB>4</SUB>>", "56": "<(readMatrix,readMatrix(r, N))<SUB>4</SUB>>", "58": "<(IDENTIFIER,r,readMatrix(r, N))<SUB>4</SUB>>", "60": "<(LOCAL,boolean matched: boolean)<SUB>5</SUB>>", "62": "<(IDENTIFIER,matched,boolean matched = matchesFlipped(m1, m2))<SUB>5</SUB>>", "64": "<(IDENTIFIER,this,matchesFlipped(m1, m2))<SUB>5</SUB>>", "66": "<(IDENTIFIER,m2,matchesFlipped(m1, m2))<SUB>5</SUB>>", "68": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "70": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "72": "<(&lt;operator&gt;.logicalAnd,i &lt; 3 &amp;&amp; !matched)<SUB>7</SUB>>", "74": "<(IDENTIFIER,i,i &lt; 3)<SUB>7</SUB>>", "76": "<(&lt;operator&gt;.logicalNot,!matched)<SUB>7</SUB>>", "78": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "80": "<(IDENTIFIER,m1,m1 = new MRot(m1))<SUB>8</SUB>>", "82": "<(&lt;init&gt;,new MRot(m1))<SUB>8</SUB>>", "83": "<(IDENTIFIER,m1,new MRot(m1))<SUB>8</SUB>>", "85": "<(IDENTIFIER,matched,matched = matchesFlipped(m1, m2))<SUB>9</SUB>>", "87": "<(IDENTIFIER,this,matchesFlipped(m1, m2))<SUB>9</SUB>>", "89": "<(IDENTIFIER,m2,matchesFlipped(m1, m2))<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "95": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "97": "<(IDENTIFIER,matched,matched ? &quot;Yes&quot; : &quot;No&quot;)<SUB>12</SUB>>", "99": "<(LITERAL,&quot;No&quot;,matched ? &quot;Yes&quot; : &quot;No&quot;)<SUB>12</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "103": "<(IDENTIFIER,e,printStackTrace())<SUB>15</SUB>>", "105": "<(MODIFIER,STATIC)>"}}