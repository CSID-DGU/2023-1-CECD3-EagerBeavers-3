{"edges": [["21", "23"], ["21", "123"], ["21", "124"], ["21", "125"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["36", "37"], ["36", "38"], ["36", "42"], ["36", "43"], ["36", "48"], ["36", "51"], ["36", "52"], ["36", "55"], ["36", "56"], ["36", "60"], ["36", "118"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "76"], ["72", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "82"], ["76", "116"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["82", "89"], ["82", "92"], ["82", "94"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "110"], ["96", "97"], ["96", "101"], ["97", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "109"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["110", "111"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "40"], ["26", "24"], ["30", "28"], ["32", "31"], ["34", "32"], ["38", "45"], ["43", "48"], ["48", "52"], ["52", "58"], ["56", "62"], ["118", "125"], ["40", "38"], ["45", "43"], ["58", "56"], ["62", "65"], ["65", "73"], ["65", "121"], ["68", "65"], ["119", "118"], ["121", "119"], ["72", "78"], ["72", "68"], ["73", "72"], ["77", "86"], ["116", "68"], ["78", "77"], ["84", "89"], ["89", "98"], ["89", "116"], ["92", "89"], ["86", "84"], ["96", "112"], ["96", "92"], ["97", "96"], ["97", "103"], ["101", "96"], ["111", "92"], ["98", "97"], ["102", "101"], ["112", "111"], ["103", "106"], ["106", "102"], ["21", "26"], ["22", "125"], ["24", "125"], ["27", "125"], ["28", "125"], ["31", "125"], ["31", "125"], ["38", "125"], ["38", "125"], ["45", "125"], ["43", "125"], ["43", "125"], ["48", "125"], ["48", "125"], ["52", "125"], ["56", "125"], ["56", "125"], ["56", "125"], ["62", "125"], ["65", "125"], ["65", "125"], ["65", "125"], ["118", "125"], ["118", "125"], ["118", "125"], ["72", "125"], ["72", "125"], ["77", "125"], ["77", "125"], ["84", "125"], ["84", "125"], ["89", "125"], ["89", "125"], ["116", "125"], ["68", "125"], ["97", "125"], ["96", "125"], ["102", "125"], ["102", "125"], ["101", "125"], ["96", "125"], ["96", "125"], ["111", "125"], ["111", "125"], ["92", "125"], ["48", "125"], ["21", "22"], ["21", "24"], ["21", "28"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["40", "38"], ["45", "43"], ["45", "43"], ["21", "52"], ["58", "56"], ["21", "48"], ["43", "48"], ["21", "62"], ["31", "118"], ["52", "118"], ["116", "118"], ["21", "118"], ["27", "40"], ["21", "40"], ["40", "45"], ["21", "45"], ["38", "45"], ["45", "58"], ["21", "58"], ["62", "65"], ["68", "65"], ["21", "65"], ["58", "65"], ["89", "65"], ["65", "68"], ["21", "68"], ["56", "72"], ["77", "72"], ["21", "77"], ["65", "84"], ["21", "84"], ["52", "116"], ["21", "116"], ["84", "89"], ["92", "89"], ["21", "89"], ["65", "89"], ["89", "92"], ["21", "92"], ["65", "86"], ["21", "86"], ["97", "96"], ["101", "96"], ["101", "96"], ["21", "111"], ["56", "97"], ["111", "97"], ["102", "101"], ["102", "101"], ["21", "101"], ["48", "102"], ["65", "68"], ["65", "73"], ["65", "72"], ["65", "65"], ["72", "77"], ["72", "89"], ["72", "116"], ["72", "84"], ["72", "78"], ["72", "86"], ["89", "96"], ["89", "89"], ["89", "98"], ["89", "92"], ["89", "97"], ["96", "112"], ["96", "111"], ["97", "102"], ["97", "103"], ["97", "106"], ["97", "101"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new StandardInput())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new StandardInput())<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new StandardInput())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY writer = new PrintWriter(System.out))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>2</SUB>>", "5": "<(IDENTIFIER,writer,new PrintWriter(System.out))<SUB>2</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>2</SUB>>", "35": "<(CONTROL_STRUCTURE,try,try)<SUB>2</SUB>>", "37": "<(LOCAL,int n: int)<SUB>3</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "41": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,int[] arr = readIntArray(n))<SUB>4</SUB>>", "45": "<(readIntArray,readIntArray(n))<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,readIntArray(n))<SUB>4</SUB>>", "49": "<(IDENTIFIER,Arrays,sort(arr))<SUB>6</SUB>>", "51": "<(LOCAL,int ans: int)<SUB>7</SUB>>", "53": "<(IDENTIFIER,ans,int ans = 0)<SUB>7</SUB>>", "55": "<(LOCAL,boolean[] vis: boolean[])<SUB>8</SUB>>", "57": "<(IDENTIFIER,vis,boolean[] vis = new boolean[n])<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,if (!vis[i]),if (!vis[i]))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,vis[i])<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,!vis[i])<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,vis[i] = true)<SUB>11</SUB>>", "79": "<(IDENTIFIER,vis,vis[i] = true)<SUB>11</SUB>>", "81": "<(LITERAL,true,vis[i] = true)<SUB>11</SUB>>", "83": "<(LOCAL,int j: int)<SUB>12</SUB>>", "85": "<(IDENTIFIER,j,int j = i + 1)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i + 1)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "91": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "93": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,if (!vis[j] &amp;&amp; arr[j] % arr[i] == 0),if (!vis[j] &amp;&amp; arr[j] % arr[i] == 0))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.logicalNot,!vis[j])<SUB>13</SUB>>", "99": "<(IDENTIFIER,vis,!vis[j])<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.equals,arr[j] % arr[i] == 0)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>13</SUB>>", "105": "<(IDENTIFIER,j,arr[j] % arr[i])<SUB>13</SUB>>", "107": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>13</SUB>>", "109": "<(LITERAL,0,arr[j] % arr[i] == 0)<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,vis[j] = true)<SUB>14</SUB>>", "113": "<(IDENTIFIER,vis,vis[j] = true)<SUB>14</SUB>>", "115": "<(LITERAL,true,vis[j] = true)<SUB>14</SUB>>", "117": "<(IDENTIFIER,ans,ans++)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "121": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}