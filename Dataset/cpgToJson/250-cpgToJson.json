{"edges": [["21", "22"], ["21", "23"], ["21", "174"], ["21", "175"], ["21", "176"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "42"], ["23", "172"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "58"], ["52", "64"], ["52", "70"], ["52", "76"], ["52", "79"], ["52", "80"], ["52", "85"], ["52", "86"], ["52", "91"], ["52", "92"], ["52", "97"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "109"], ["97", "113"], ["98", "99"], ["98", "106"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["114", "130"], ["114", "134"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["135", "147"], ["135", "151"], ["136", "137"], ["136", "144"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["152", "153"], ["152", "164"], ["152", "168"], ["153", "154"], ["153", "161"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "39"], ["39", "44"], ["172", "176"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["44", "47"], ["47", "56"], ["47", "172"], ["50", "47"], ["30", "28"], ["37", "35"], ["54", "59"], ["58", "65"], ["64", "71"], ["70", "76"], ["76", "82"], ["80", "88"], ["86", "94"], ["92", "100"], ["56", "54"], ["59", "62"], ["62", "58"], ["65", "68"], ["68", "64"], ["71", "74"], ["74", "70"], ["82", "80"], ["88", "86"], ["94", "92"], ["98", "110"], ["98", "117"], ["99", "98"], ["99", "106"], ["106", "98"], ["110", "50"], ["100", "99"], ["100", "103"], ["103", "99"], ["115", "131"], ["115", "138"], ["116", "115"], ["116", "124"], ["123", "115"], ["131", "50"], ["117", "116"], ["117", "120"], ["120", "116"], ["124", "123"], ["124", "127"], ["127", "123"], ["136", "148"], ["136", "155"], ["137", "136"], ["137", "144"], ["144", "136"], ["148", "50"], ["138", "137"], ["138", "141"], ["141", "137"], ["153", "165"], ["153", "169"], ["154", "153"], ["154", "161"], ["161", "153"], ["165", "50"], ["169", "50"], ["155", "154"], ["155", "158"], ["158", "154"], ["21", "26"], ["22", "176"], ["24", "176"], ["27", "176"], ["27", "176"], ["27", "176"], ["31", "176"], ["34", "176"], ["34", "176"], ["39", "176"], ["44", "176"], ["47", "176"], ["47", "176"], ["47", "176"], ["172", "176"], ["172", "176"], ["54", "176"], ["54", "176"], ["58", "176"], ["64", "176"], ["74", "176"], ["70", "176"], ["70", "176"], ["76", "176"], ["76", "176"], ["80", "176"], ["80", "176"], ["86", "176"], ["86", "176"], ["86", "176"], ["92", "176"], ["92", "176"], ["92", "176"], ["100", "176"], ["99", "176"], ["103", "176"], ["99", "176"], ["98", "176"], ["106", "176"], ["98", "176"], ["98", "176"], ["117", "176"], ["116", "176"], ["120", "176"], ["116", "176"], ["115", "176"], ["124", "176"], ["123", "176"], ["127", "176"], ["123", "176"], ["115", "176"], ["115", "176"], ["138", "176"], ["137", "176"], ["141", "176"], ["137", "176"], ["136", "176"], ["144", "176"], ["136", "176"], ["136", "176"], ["155", "176"], ["154", "176"], ["158", "176"], ["154", "176"], ["153", "176"], ["161", "176"], ["153", "176"], ["153", "176"], ["169", "176"], ["165", "176"], ["148", "176"], ["131", "176"], ["110", "176"], ["50", "176"], ["76", "176"], ["21", "22"], ["21", "24"], ["21", "31"], ["21", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "44"], ["34", "172"], ["169", "172"], ["165", "172"], ["148", "172"], ["131", "172"], ["110", "172"], ["21", "172"], ["44", "47"], ["50", "47"], ["21", "47"], ["39", "47"], ["47", "50"], ["21", "50"], ["56", "54"], ["62", "58"], ["68", "64"], ["74", "70"], ["58", "80"], ["76", "80"], ["64", "86"], ["76", "86"], ["70", "92"], ["76", "92"], ["21", "76"], ["54", "76"], ["58", "76"], ["64", "76"], ["70", "76"], ["21", "56"], ["27", "62"], ["74", "62"], ["21", "62"], ["62", "68"], ["21", "68"], ["68", "74"], ["21", "74"], ["99", "98"], ["99", "98"], ["106", "98"], ["106", "98"], ["100", "99"], ["100", "99"], ["103", "99"], ["103", "99"], ["92", "106"], ["21", "106"], ["34", "110"], ["169", "110"], ["165", "110"], ["148", "110"], ["131", "110"], ["21", "110"], ["80", "100"], ["21", "100"], ["86", "103"], ["21", "103"], ["116", "115"], ["116", "115"], ["123", "115"], ["123", "115"], ["117", "116"], ["117", "116"], ["120", "116"], ["120", "116"], ["123", "116"], ["124", "123"], ["124", "123"], ["127", "123"], ["127", "123"], ["34", "131"], ["169", "131"], ["165", "131"], ["148", "131"], ["110", "131"], ["21", "131"], ["100", "117"], ["21", "117"], ["86", "120"], ["103", "120"], ["21", "120"], ["86", "124"], ["103", "124"], ["120", "124"], ["21", "124"], ["92", "127"], ["106", "127"], ["21", "127"], ["137", "136"], ["137", "136"], ["144", "136"], ["144", "136"], ["138", "137"], ["138", "137"], ["141", "137"], ["141", "137"], ["92", "144"], ["106", "144"], ["127", "144"], ["21", "144"], ["34", "148"], ["169", "148"], ["165", "148"], ["131", "148"], ["110", "148"], ["21", "148"], ["117", "138"], ["21", "138"], ["86", "141"], ["103", "141"], ["120", "141"], ["124", "141"], ["21", "141"], ["154", "153"], ["154", "153"], ["161", "153"], ["161", "153"], ["155", "154"], ["155", "154"], ["158", "154"], ["158", "154"], ["92", "161"], ["106", "161"], ["127", "161"], ["144", "161"], ["21", "161"], ["34", "165"], ["169", "165"], ["148", "165"], ["131", "165"], ["110", "165"], ["21", "165"], ["34", "169"], ["165", "169"], ["148", "169"], ["131", "169"], ["110", "169"], ["21", "169"], ["138", "155"], ["21", "155"], ["86", "158"], ["103", "158"], ["120", "158"], ["124", "158"], ["141", "158"], ["21", "158"], ["47", "94"], ["47", "68"], ["47", "64"], ["47", "98"], ["47", "56"], ["47", "74"], ["47", "92"], ["47", "76"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "80"], ["47", "58"], ["47", "100"], ["47", "88"], ["47", "70"], ["47", "86"], ["47", "47"], ["47", "99"], ["47", "65"], ["47", "82"], ["47", "71"], ["47", "62"], ["98", "115"], ["98", "116"], ["98", "110"], ["98", "117"], ["99", "106"], ["100", "103"], ["115", "136"], ["115", "131"], ["115", "138"], ["115", "137"], ["116", "123"], ["116", "124"], ["117", "120"], ["124", "127"], ["136", "154"], ["136", "153"], ["136", "148"], ["136", "155"], ["137", "144"], ["138", "141"], ["153", "169"], ["153", "165"], ["154", "161"], ["155", "158"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int test = 1)<SUB>4</SUB>>", "41": "<(LITERAL,1,int test = 1)<SUB>4</SUB>>", "43": "<(LOCAL,int ind: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,ind,int ind = 0)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.lessThan,ind &lt; test)<SUB>5</SUB>>", "49": "<(IDENTIFIER,test,ind &lt; test)<SUB>5</SUB>>", "51": "<(IDENTIFIER,ind,ind++)<SUB>5</SUB>>", "53": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "55": "<(IDENTIFIER,a,int[] a = new int[3])<SUB>6</SUB>>", "57": "<(LITERAL,3,new int[3])<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,a[0])<SUB>7</SUB>>", "61": "<(LITERAL,0,a[0] = nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,a[1])<SUB>8</SUB>>", "67": "<(LITERAL,1,a[1] = nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,a[2])<SUB>9</SUB>>", "73": "<(LITERAL,2,a[2] = nextInt())<SUB>9</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,Arrays,sort(a))<SUB>10</SUB>>", "79": "<(LOCAL,int k1: int)<SUB>11</SUB>>", "81": "<(IDENTIFIER,k1,int k1 = a[0])<SUB>11</SUB>>", "83": "<(IDENTIFIER,a,int k1 = a[0])<SUB>11</SUB>>", "85": "<(LOCAL,int k2: int)<SUB>12</SUB>>", "87": "<(IDENTIFIER,k2,int k2 = a[1])<SUB>12</SUB>>", "89": "<(IDENTIFIER,a,int k2 = a[1])<SUB>12</SUB>>", "91": "<(LOCAL,int k3: int)<SUB>13</SUB>>", "93": "<(IDENTIFIER,k3,int k3 = a[2])<SUB>13</SUB>>", "95": "<(IDENTIFIER,a,int k3 = a[2])<SUB>13</SUB>>", "97": "<(CONTROL_STRUCTURE,if (k1 == 1 || k2 == 1 || k3 == 1),if (k1 == 1 || k2 == 1 || k3 == 1))<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.logicalOr,k1 == 1 || k2 == 1)<SUB>14</SUB>>", "101": "<(IDENTIFIER,k1,k1 == 1)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.equals,k2 == 1)<SUB>14</SUB>>", "105": "<(LITERAL,1,k2 == 1)<SUB>14</SUB>>", "107": "<(IDENTIFIER,k3,k3 == 1)<SUB>14</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "111": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>15</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.logicalOr,(k1 == 2 &amp;&amp; k2 == 2) || (k2 == 2 &amp;&amp; k3 == 2))<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.equals,k1 == 2)<SUB>17</SUB>>", "119": "<(LITERAL,2,k1 == 2)<SUB>17</SUB>>", "121": "<(IDENTIFIER,k2,k2 == 2)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.logicalAnd,k2 == 2 &amp;&amp; k3 == 2)<SUB>17</SUB>>", "125": "<(IDENTIFIER,k2,k2 == 2)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.equals,k3 == 2)<SUB>17</SUB>>", "129": "<(LITERAL,2,k3 == 2)<SUB>17</SUB>>", "131": "<(println,println(&quot;YES&quot;))<SUB>18</SUB>>", "133": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>18</SUB>>", "135": "<(CONTROL_STRUCTURE,if (k1 == 3 &amp;&amp; k2 == 3 &amp;&amp; k3 == 3),if (k1 == 3 &amp;&amp; k2 == 3 &amp;&amp; k3 == 3))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.logicalAnd,k1 == 3 &amp;&amp; k2 == 3)<SUB>20</SUB>>", "139": "<(IDENTIFIER,k1,k1 == 3)<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.equals,k2 == 3)<SUB>20</SUB>>", "143": "<(LITERAL,3,k2 == 3)<SUB>20</SUB>>", "145": "<(IDENTIFIER,k3,k3 == 3)<SUB>20</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "149": "<(IDENTIFIER,out,println(&quot;YES&quot;))<SUB>21</SUB>>", "151": "<(CONTROL_STRUCTURE,else,else)<SUB>23</SUB>>", "153": "<(&lt;operator&gt;.logicalAnd,k1 == 2 &amp;&amp; k2 == 4 &amp;&amp; k3 == 4)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.equals,k1 == 2)<SUB>23</SUB>>", "157": "<(LITERAL,2,k1 == 2)<SUB>23</SUB>>", "159": "<(IDENTIFIER,k2,k2 == 4)<SUB>23</SUB>>", "161": "<(&lt;operator&gt;.equals,k3 == 4)<SUB>23</SUB>>", "163": "<(LITERAL,4,k3 == 4)<SUB>23</SUB>>", "165": "<(println,println(&quot;YES&quot;))<SUB>24</SUB>>", "167": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>24</SUB>>", "169": "<(println,println(&quot;NO&quot;))<SUB>27</SUB>>", "171": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>27</SUB>>", "173": "<(IDENTIFIER,out,flush())<SUB>30</SUB>>", "175": "<(MODIFIER,STATIC)>"}}