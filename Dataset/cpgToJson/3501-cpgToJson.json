{"edges": [["19", "20"], ["19", "21"], ["19", "232"], ["19", "233"], ["19", "234"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "59"], ["21", "60"], ["21", "67"], ["21", "68"], ["21", "74"], ["21", "79"], ["21", "105"], ["21", "106"], ["21", "111"], ["21", "118"], ["21", "199"], ["21", "200"], ["21", "203"], ["21", "227"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["62", "65"], ["62", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "89"], ["79", "91"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "104"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["118", "119"], ["118", "120"], ["118", "123"], ["118", "126"], ["118", "128"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["129", "139"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "150"], ["140", "152"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["152", "153"], ["152", "186"], ["153", "154"], ["153", "165"], ["154", "155"], ["154", "162"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "179"], ["166", "167"], ["166", "178"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "198"], ["187", "188"], ["187", "195"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["203", "208"], ["203", "211"], ["203", "213"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "226"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "56"], ["52", "62"], ["60", "71"], ["68", "75"], ["74", "81"], ["106", "113"], ["111", "120"], ["200", "205"], ["227", "234"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["62", "60"], ["70", "68"], ["75", "74"], ["81", "88"], ["84", "93"], ["84", "108"], ["89", "88"], ["108", "106"], ["112", "111"], ["120", "123"], ["123", "131"], ["123", "200"], ["126", "123"], ["205", "208"], ["208", "222"], ["208", "230"], ["211", "208"], ["228", "227"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["56", "54"], ["71", "70"], ["86", "84"], ["92", "89"], ["113", "112"], ["214", "211"], ["230", "228"], ["29", "27"], ["32", "30"], ["88", "86"], ["93", "101"], ["96", "92"], ["131", "134"], ["134", "142"], ["134", "126"], ["137", "134"], ["216", "214"], ["34", "32"], ["97", "96"], ["217", "216"], ["99", "97"], ["142", "146"], ["145", "158"], ["145", "137"], ["150", "146"], ["219", "217"], ["101", "99"], ["146", "145"], ["153", "191"], ["186", "150"], ["220", "219"], ["154", "169"], ["165", "153"], ["187", "186"], ["222", "220"], ["155", "162"], ["162", "154"], ["166", "182"], ["179", "165"], ["188", "195"], ["195", "187"], ["157", "155"], ["167", "166"], ["180", "179"], ["190", "188"], ["158", "157"], ["168", "175"], ["173", "167"], ["182", "180"], ["191", "190"], ["169", "168"], ["175", "173"], ["19", "24"], ["20", "234"], ["22", "234"], ["27", "234"], ["30", "234"], ["30", "234"], ["30", "234"], ["25", "234"], ["37", "234"], ["40", "234"], ["39", "234"], ["37", "234"], ["37", "234"], ["46", "234"], ["44", "234"], ["44", "234"], ["54", "234"], ["54", "234"], ["52", "234"], ["52", "234"], ["60", "234"], ["62", "234"], ["60", "234"], ["60", "234"], ["68", "234"], ["70", "234"], ["68", "234"], ["68", "234"], ["74", "234"], ["74", "234"], ["81", "234"], ["84", "234"], ["84", "234"], ["106", "234"], ["106", "234"], ["106", "234"], ["111", "234"], ["111", "234"], ["123", "234"], ["200", "234"], ["205", "234"], ["208", "234"], ["208", "234"], ["208", "234"], ["227", "234"], ["227", "234"], ["227", "234"], ["217", "234"], ["216", "234"], ["216", "234"], ["214", "234"], ["214", "234"], ["211", "234"], ["131", "234"], ["134", "234"], ["134", "234"], ["126", "234"], ["142", "234"], ["146", "234"], ["145", "234"], ["145", "234"], ["137", "234"], ["167", "234"], ["167", "234"], ["166", "234"], ["165", "234"], ["165", "234"], ["153", "234"], ["153", "234"], ["186", "234"], ["186", "234"], ["150", "234"], ["92", "234"], ["97", "234"], ["96", "234"], ["96", "234"], ["92", "234"], ["92", "234"], ["89", "234"], ["62", "234"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["54", "52"], ["62", "60"], ["62", "60"], ["62", "60"], ["70", "68"], ["19", "74"], ["108", "106"], ["19", "111"], ["19", "200"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "81"], ["19", "120"], ["19", "205"], ["200", "227"], ["214", "227"], ["19", "227"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["46", "54"], ["19", "54"], ["37", "54"], ["19", "62"], ["52", "62"], ["44", "70"], ["19", "70"], ["81", "84"], ["89", "84"], ["19", "84"], ["68", "84"], ["101", "89"], ["19", "89"], ["96", "92"], ["96", "92"], ["19", "108"], ["120", "123"], ["126", "123"], ["19", "123"], ["145", "123"], ["44", "123"], ["134", "126"], ["19", "126"], ["205", "208"], ["211", "208"], ["19", "208"], ["123", "208"], ["208", "211"], ["19", "211"], ["216", "214"], ["216", "214"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["44", "71"], ["19", "71"], ["19", "131"], ["97", "96"], ["97", "96"], ["62", "96"], ["19", "96"], ["131", "134"], ["137", "134"], ["19", "134"], ["123", "134"], ["134", "137"], ["19", "137"], ["200", "216"], ["214", "216"], ["19", "216"], ["62", "216"], ["96", "216"], ["166", "216"], ["19", "97"], ["68", "97"], ["19", "142"], ["200", "217"], ["214", "217"], ["19", "217"], ["134", "145"], ["19", "145"], ["142", "145"], ["150", "145"], ["123", "145"], ["19", "150"], ["175", "150"], ["165", "153"], ["165", "153"], ["166", "186"], ["19", "186"], ["84", "101"], ["19", "101"], ["134", "146"], ["19", "146"], ["142", "146"], ["150", "146"], ["186", "153"], ["153", "186"], ["166", "165"], ["166", "165"], ["208", "222"], ["19", "222"], ["134", "162"], ["19", "162"], ["142", "162"], ["150", "162"], ["167", "166"], ["167", "166"], ["62", "166"], ["96", "166"], ["19", "166"], ["19", "195"], ["134", "195"], ["175", "195"], ["19", "157"], ["142", "157"], ["150", "157"], ["68", "167"], ["19", "190"], ["175", "190"], ["19", "158"], ["142", "158"], ["150", "158"], ["19", "182"], ["134", "182"], ["175", "182"], ["19", "191"], ["175", "191"], ["19", "175"], ["142", "175"], ["150", "175"], ["84", "96"], ["84", "84"], ["84", "92"], ["84", "97"], ["84", "93"], ["84", "101"], ["84", "88"], ["84", "86"], ["84", "89"], ["84", "99"], ["123", "131"], ["123", "134"], ["123", "123"], ["123", "126"], ["208", "214"], ["208", "208"], ["208", "217"], ["208", "220"], ["208", "211"], ["208", "216"], ["208", "222"], ["208", "219"], ["134", "145"], ["134", "146"], ["134", "134"], ["134", "137"], ["134", "142"], ["145", "167"], ["145", "188"], ["145", "154"], ["145", "145"], ["145", "146"], ["145", "169"], ["145", "179"], ["145", "150"], ["145", "162"], ["145", "153"], ["145", "168"], ["145", "191"], ["145", "195"], ["145", "187"], ["145", "190"], ["145", "173"], ["145", "182"], ["145", "155"], ["145", "186"], ["145", "180"], ["145", "158"], ["145", "166"], ["145", "157"], ["145", "165"], ["145", "175"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] st = split(&quot; &quot;))<SUB>4</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "41": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "43": "<(LOCAL,int n: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,int n = Integer.parseInt(st[0]))<SUB>5</SUB>>", "47": "<(IDENTIFIER,Integer,Integer.parseInt(st[0]))<SUB>5</SUB>>", "49": "<(IDENTIFIER,st,Integer.parseInt(st[0]))<SUB>5</SUB>>", "51": "<(LOCAL,int m: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,m,int m = Integer.parseInt(st[1]))<SUB>6</SUB>>", "55": "<(IDENTIFIER,Integer,Integer.parseInt(st[1]))<SUB>6</SUB>>", "57": "<(IDENTIFIER,st,Integer.parseInt(st[1]))<SUB>6</SUB>>", "59": "<(LOCAL,long[][] ncr: long[][])<SUB>8</SUB>>", "61": "<(IDENTIFIER,ncr,long[][] ncr = ncrcoll(405, 405, m))<SUB>8</SUB>>", "63": "<(IDENTIFIER,this,ncrcoll(405, 405, m))<SUB>8</SUB>>", "65": "<(LITERAL,405,ncrcoll(405, 405, m))<SUB>8</SUB>>", "67": "<(LOCAL,int[] p2: int[])<SUB>9</SUB>>", "69": "<(IDENTIFIER,p2,int[] p2 = new int[n + 1])<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.addition,n + 1)<SUB>9</SUB>>", "73": "<(LITERAL,1,n + 1)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,p2[0])<SUB>10</SUB>>", "77": "<(LITERAL,0,p2[0] = 1)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; p2.length); i++),for (int i = 1; Some(i &lt; p2.length); i++))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "83": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i &lt; p2.length)<SUB>11</SUB>>", "87": "<(IDENTIFIER,p2,i &lt; p2.length)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,p2[i])<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,p2[i] = 2 * p2[i - 1] % m)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.multiplication,2 * p2[i - 1])<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,p2[i - 1])<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>12</SUB>>", "103": "<(LITERAL,1,i - 1)<SUB>12</SUB>>", "105": "<(LOCAL,long[][] dp: long[][])<SUB>15</SUB>>", "107": "<(IDENTIFIER,dp,long[][] dp = new long[405][405])<SUB>15</SUB>>", "109": "<(LITERAL,405,new long[405][405])<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>16</SUB>>", "115": "<(LITERAL,0,dp[0][0] = 1)<SUB>16</SUB>>", "117": "<(LITERAL,1,dp[0][0] = 1)<SUB>16</SUB>>", "119": "<(LOCAL,int i: int)<SUB>18</SUB>>", "121": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "125": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "127": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= i); j++),for (int j = 0; Some(j &lt;= i); j++))<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>19</SUB>>", "133": "<(LITERAL,0,int j = 0)<SUB>19</SUB>>", "135": "<(IDENTIFIER,j,j &lt;= i)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,j++)<SUB>19</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "141": "<(LOCAL,int k: int)<SUB>20</SUB>>", "143": "<(IDENTIFIER,k,int k = 1)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.lessEqualsThan,i + k &lt;= n)<SUB>20</SUB>>", "147": "<(IDENTIFIER,i,i + k)<SUB>20</SUB>>", "149": "<(IDENTIFIER,n,i + k &lt;= n)<SUB>20</SUB>>", "151": "<(IDENTIFIER,k,k++)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.assignmentPlus,dp[i + k + 1][j + k] += (dp[i][j] * p2[k - 1]) % m * ncr[j + k][k])<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1])<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.addition,i + k + 1)<SUB>21</SUB>>", "159": "<(IDENTIFIER,i,i + k)<SUB>21</SUB>>", "161": "<(LITERAL,1,i + k + 1)<SUB>21</SUB>>", "163": "<(IDENTIFIER,j,j + k)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.multiplication,(dp[i][j] * p2[k - 1]) % m * ncr[j + k][k])<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.multiplication,dp[i][j] * p2[k - 1])<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>21</SUB>>", "171": "<(IDENTIFIER,i,dp[i][j] * p2[k - 1])<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,p2[k - 1])<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>21</SUB>>", "177": "<(LITERAL,1,k - 1)<SUB>21</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,ncr[j + k][k])<SUB>21</SUB>>", "181": "<(IDENTIFIER,ncr,(dp[i][j] * p2[k - 1]) % m * ncr[j + k][k])<SUB>21</SUB>>", "183": "<(IDENTIFIER,j,j + k)<SUB>21</SUB>>", "185": "<(IDENTIFIER,k,(dp[i][j] * p2[k - 1]) % m * ncr[j + k][k])<SUB>21</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1][j + k])<SUB>22</SUB>>", "189": "<(IDENTIFIER,dp,dp[i + k + 1][j + k] %= m)<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.addition,i + k)<SUB>22</SUB>>", "193": "<(IDENTIFIER,k,i + k)<SUB>22</SUB>>", "195": "<(&lt;operator&gt;.addition,j + k)<SUB>22</SUB>>", "197": "<(IDENTIFIER,k,j + k)<SUB>22</SUB>>", "199": "<(LOCAL,long ans: long)<SUB>27</SUB>>", "201": "<(IDENTIFIER,ans,long ans = 0)<SUB>27</SUB>>", "203": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); i++),for (int i = 0; Some(i &lt;= n); i++))<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "207": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "209": "<(IDENTIFIER,i,i &lt;= n)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "215": "<(IDENTIFIER,ans,ans = (ans + dp[n + 1][i]) % m)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.addition,ans + dp[n + 1][i])<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[n + 1][i])<SUB>29</SUB>>", "221": "<(IDENTIFIER,dp,ans + dp[n + 1][i])<SUB>29</SUB>>", "223": "<(IDENTIFIER,n,n + 1)<SUB>29</SUB>>", "225": "<(IDENTIFIER,i,ans + dp[n + 1][i])<SUB>29</SUB>>", "227": "<(println,System.out.println(ans))<SUB>32</SUB>>", "229": "<(IDENTIFIER,System,System.out.println(ans))<SUB>32</SUB>>", "231": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>32</SUB>>", "233": "<(MODIFIER,STATIC)>"}}