{"edges": [["26", "27"], ["26", "28"], ["26", "270"], ["26", "271"], ["26", "272"], ["28", "4"], ["28", "29"], ["28", "32"], ["28", "43"], ["28", "44"], ["28", "49"], ["28", "50"], ["28", "55"], ["28", "56"], ["28", "6"], ["28", "59"], ["28", "62"], ["28", "8"], ["28", "63"], ["28", "66"], ["28", "71"], ["28", "74"], ["28", "117"], ["28", "118"], ["28", "11"], ["28", "121"], ["28", "124"], ["28", "125"], ["28", "265"], ["29", "30"], ["29", "31"], ["32", "3"], ["32", "33"], ["33", "34"], ["33", "37"], ["33", "42"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "5"], ["63", "64"], ["63", "65"], ["66", "7"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "95"], ["85", "102"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["96", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["103", "104"], ["103", "107"], ["103", "112"], ["103", "115"], ["104", "105"], ["104", "106"], ["107", "9"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "10"], ["125", "126"], ["125", "130"], ["126", "127"], ["126", "129"], ["127", "128"], ["130", "131"], ["130", "133"], ["130", "137"], ["130", "143"], ["130", "151"], ["130", "171"], ["130", "172"], ["130", "197"], ["130", "198"], ["130", "202"], ["130", "258"], ["130", "260"], ["130", "263"], ["131", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["172", "173"], ["172", "176"], ["172", "179"], ["172", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["182", "183"], ["182", "190"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "200"], ["200", "201"], ["202", "203"], ["202", "205"], ["202", "208"], ["202", "210"], ["203", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["210", "221"], ["211", "212"], ["211", "219"], ["212", "213"], ["212", "218"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["219", "220"], ["221", "222"], ["221", "235"], ["221", "249"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "234"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["235", "236"], ["236", "237"], ["236", "244"], ["237", "238"], ["237", "243"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["250", "251"], ["250", "256"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "255"], ["256", "257"], ["258", "259"], ["260", "261"], ["260", "262"], ["263", "264"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["29", "36"], ["32", "47"], ["44", "54"], ["50", "56"], ["56", "61"], ["59", "62"], ["62", "65"], ["63", "67"], ["66", "71"], ["71", "76"], ["118", "123"], ["121", "124"], ["124", "127"], ["265", "272"], ["31", "29"], ["46", "44"], ["52", "50"], ["61", "59"], ["65", "63"], ["67", "66"], ["76", "79"], ["79", "87"], ["79", "118"], ["82", "79"], ["123", "121"], ["126", "131"], ["126", "268"], ["266", "265"], ["34", "41"], ["37", "32"], ["47", "46"], ["54", "52"], ["127", "126"], ["131", "135"], ["133", "139"], ["137", "147"], ["143", "153"], ["198", "203"], ["258", "260"], ["260", "263"], ["263", "127"], ["268", "266"], ["36", "34"], ["39", "37"], ["86", "98"], ["86", "106"], ["135", "133"], ["138", "137"], ["144", "143"], ["153", "158"], ["156", "166"], ["156", "173"], ["161", "158"], ["173", "176"], ["176", "185"], ["176", "200"], ["179", "176"], ["200", "198"], ["203", "205"], ["205", "214"], ["205", "258"], ["208", "205"], ["41", "39"], ["87", "91"], ["90", "86"], ["96", "82"], ["139", "142"], ["142", "138"], ["145", "150"], ["150", "144"], ["158", "156"], ["164", "161"], ["91", "94"], ["94", "90"], ["97", "96"], ["104", "108"], ["107", "112"], ["112", "115"], ["115", "82"], ["147", "145"], ["165", "164"], ["183", "193"], ["183", "179"], ["212", "208"], ["212", "224"], ["222", "240"], ["222", "253"], ["98", "101"], ["101", "97"], ["106", "104"], ["108", "107"], ["166", "169"], ["169", "165"], ["184", "183"], ["191", "200"], ["213", "212"], ["223", "231"], ["228", "222"], ["236", "208"], ["185", "188"], ["188", "184"], ["193", "191"], ["214", "217"], ["217", "213"], ["224", "227"], ["227", "223"], ["229", "234"], ["234", "228"], ["237", "245"], ["244", "236"], ["251", "256"], ["256", "208"], ["231", "229"], ["238", "243"], ["243", "237"], ["245", "248"], ["248", "244"], ["253", "251"], ["240", "238"], ["26", "31"], ["27", "272"], ["29", "272"], ["34", "272"], ["37", "272"], ["37", "272"], ["37", "272"], ["32", "272"], ["44", "272"], ["47", "272"], ["46", "272"], ["44", "272"], ["44", "272"], ["50", "272"], ["50", "272"], ["56", "272"], ["56", "272"], ["59", "272"], ["63", "272"], ["66", "272"], ["66", "272"], ["71", "272"], ["71", "272"], ["76", "272"], ["79", "272"], ["79", "272"], ["79", "272"], ["118", "272"], ["121", "272"], ["124", "272"], ["124", "272"], ["127", "272"], ["126", "272"], ["126", "272"], ["265", "272"], ["265", "272"], ["265", "272"], ["131", "272"], ["133", "272"], ["137", "272"], ["143", "272"], ["153", "272"], ["156", "272"], ["156", "272"], ["156", "272"], ["173", "272"], ["183", "272"], ["191", "272"], ["191", "272"], ["198", "272"], ["198", "272"], ["203", "272"], ["205", "272"], ["205", "272"], ["205", "272"], ["260", "272"], ["263", "272"], ["263", "272"], ["212", "272"], ["229", "272"], ["222", "272"], ["251", "272"], ["251", "272"], ["256", "272"], ["256", "272"], ["240", "272"], ["238", "272"], ["236", "272"], ["208", "272"], ["164", "272"], ["161", "272"], ["86", "272"], ["86", "272"], ["104", "272"], ["107", "272"], ["107", "272"], ["112", "272"], ["112", "272"], ["115", "272"], ["115", "272"], ["98", "272"], ["96", "272"], ["82", "272"], ["26", "27"], ["26", "29"], ["46", "44"], ["44", "50"], ["26", "56"], ["26", "59"], ["26", "63"], ["26", "118"], ["26", "121"], ["29", "32"], ["26", "32"], ["34", "32"], ["37", "32"], ["59", "62"], ["26", "62"], ["63", "66"], ["26", "66"], ["44", "66"], ["62", "71"], ["26", "71"], ["66", "71"], ["26", "76"], ["121", "124"], ["26", "124"], ["118", "265"], ["131", "265"], ["26", "265"], ["26", "34"], ["26", "42"], ["47", "46"], ["76", "79"], ["82", "79"], ["26", "79"], ["50", "79"], ["79", "82"], ["26", "82"], ["127", "126"], ["26", "126"], ["135", "133"], ["200", "198"], ["34", "37"], ["26", "37"], ["32", "47"], ["26", "47"], ["71", "127"], ["260", "127"], ["112", "127"], ["98", "127"], ["26", "127"], ["118", "131"], ["26", "131"], ["26", "153"], ["26", "173"], ["145", "258"], ["185", "258"], ["193", "258"], ["214", "258"], ["253", "258"], ["245", "258"], ["166", "258"], ["26", "258"], ["258", "260"], ["26", "260"], ["200", "260"], ["251", "260"], ["238", "260"], ["260", "263"], ["26", "263"], ["44", "86"], ["107", "86"], ["127", "135"], ["26", "135"], ["153", "156"], ["161", "156"], ["26", "156"], ["158", "156"], ["158", "156"], ["166", "161"], ["26", "161"], ["26", "164"], ["173", "176"], ["179", "176"], ["26", "176"], ["158", "176"], ["185", "179"], ["26", "179"], ["124", "200"], ["191", "200"], ["263", "200"], ["26", "200"], ["176", "203"], ["193", "203"], ["26", "203"], ["203", "205"], ["208", "205"], ["26", "205"], ["176", "205"], ["214", "208"], ["253", "208"], ["245", "208"], ["26", "208"], ["26", "104"], ["135", "139"], ["26", "139"], ["139", "145"], ["26", "145"], ["147", "145"], ["147", "145"], ["147", "158"], ["26", "158"], ["71", "91"], ["112", "91"], ["98", "91"], ["26", "91"], ["56", "91"], ["115", "91"], ["98", "91"], ["104", "107"], ["26", "107"], ["44", "107"], ["86", "107"], ["91", "112"], ["26", "112"], ["107", "112"], ["91", "115"], ["26", "115"], ["133", "147"], ["26", "147"], ["26", "183"], ["26", "212"], ["91", "98"], ["26", "98"], ["91", "98"], ["145", "166"], ["26", "166"], ["156", "166"], ["124", "191"], ["263", "191"], ["26", "191"], ["193", "191"], ["193", "191"], ["145", "185"], ["166", "185"], ["26", "185"], ["176", "185"], ["185", "193"], ["26", "193"], ["185", "193"], ["145", "214"], ["185", "214"], ["193", "214"], ["253", "214"], ["245", "214"], ["166", "214"], ["26", "214"], ["205", "214"], ["214", "224"], ["26", "224"], ["214", "224"], ["200", "229"], ["251", "229"], ["238", "229"], ["26", "229"], ["231", "229"], ["231", "229"], ["229", "251"], ["26", "251"], ["253", "251"], ["253", "251"], ["231", "256"], ["26", "256"], ["198", "231"], ["256", "231"], ["240", "231"], ["26", "231"], ["229", "238"], ["26", "238"], ["240", "238"], ["240", "238"], ["224", "245"], ["26", "245"], ["224", "245"], ["224", "253"], ["26", "253"], ["224", "253"], ["231", "240"], ["26", "240"], ["79", "94"], ["79", "87"], ["79", "91"], ["79", "90"], ["79", "79"], ["79", "86"], ["79", "82"], ["126", "145"], ["126", "131"], ["126", "150"], ["126", "198"], ["126", "153"], ["126", "144"], ["126", "138"], ["126", "173"], ["126", "137"], ["126", "258"], ["126", "127"], ["126", "139"], ["126", "205"], ["126", "158"], ["126", "142"], ["126", "200"], ["126", "260"], ["126", "176"], ["126", "143"], ["126", "126"], ["126", "263"], ["126", "147"], ["126", "135"], ["126", "203"], ["126", "156"], ["126", "133"], ["86", "107"], ["86", "115"], ["86", "96"], ["86", "98"], ["86", "104"], ["86", "97"], ["86", "112"], ["86", "101"], ["86", "108"], ["86", "106"], ["156", "169"], ["156", "161"], ["156", "164"], ["156", "158"], ["156", "166"], ["156", "165"], ["156", "156"], ["176", "188"], ["176", "185"], ["176", "184"], ["176", "183"], ["205", "214"], ["205", "213"], ["205", "208"], ["205", "212"], ["205", "205"], ["205", "217"], ["183", "179"], ["183", "191"], ["183", "193"], ["183", "176"], ["212", "228"], ["212", "223"], ["212", "231"], ["212", "224"], ["212", "234"], ["212", "229"], ["212", "227"], ["212", "222"], ["222", "240"], ["222", "244"], ["222", "243"], ["222", "245"], ["222", "256"], ["222", "238"], ["222", "236"], ["222", "237"], ["222", "251"], ["222", "253"], ["222", "248"]], "features": {"26": "<(METHOD,main)<SUB>1</SUB>>", "28": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "29": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "40": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "42": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "44": "<(&lt;operator&gt;.assignment,char[] line = toCharArray())<SUB>3</SUB>>", "46": "<(toCharArray,toCharArray())<SUB>3</SUB>>", "48": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "50": "<(&lt;operator&gt;.assignment,int n = line.length)<SUB>4</SUB>>", "52": "<(&lt;operator&gt;.fieldAccess,line.length)<SUB>4</SUB>>", "54": "<(FIELD_IDENTIFIER,length,length)<SUB>4</SUB>>", "56": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>6</SUB>>", "58": "<(LITERAL,0,int l = 0)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,ANY groups = new ArrayList&lt;&gt;())<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>7</SUB>>", "5": "<(IDENTIFIER,groups,new ArrayList&lt;&gt;())<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,ANY node = new Node(line[0], 1))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.alloc,new Node(line[0], 1))<SUB>8</SUB>>", "7": "<(IDENTIFIER,node,new Node(line[0], 1))<SUB>8</SUB>>", "68": "<(IDENTIFIER,line,new Node(line[0], 1))<SUB>8</SUB>>", "70": "<(LITERAL,1,new Node(line[0], 1))<SUB>8</SUB>>", "72": "<(IDENTIFIER,groups,add(node))<SUB>9</SUB>>", "74": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>10</SUB>>", "76": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "78": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "80": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "82": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "84": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "86": "<(&lt;operator&gt;.equals,line[i] == groups.get(l).letter)<SUB>11</SUB>>", "88": "<(IDENTIFIER,line,line[i] == groups.get(l).letter)<SUB>11</SUB>>", "90": "<(&lt;operator&gt;.fieldAccess,groups.get(l).letter)<SUB>11</SUB>>", "92": "<(IDENTIFIER,groups,get(l))<SUB>11</SUB>>", "94": "<(FIELD_IDENTIFIER,letter,letter)<SUB>11</SUB>>", "96": "<(&lt;operator&gt;.postIncrement,groups.get(l).count++)<SUB>12</SUB>>", "98": "<(get,get(l))<SUB>12</SUB>>", "100": "<(IDENTIFIER,l,get(l))<SUB>12</SUB>>", "102": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "104": "<(&lt;operator&gt;.assignment,node = new Node(line[i], 1))<SUB>14</SUB>>", "106": "<(&lt;operator&gt;.alloc,new Node(line[i], 1))<SUB>14</SUB>>", "9": "<(IDENTIFIER,node,new Node(line[i], 1))<SUB>14</SUB>>", "109": "<(IDENTIFIER,line,new Node(line[i], 1))<SUB>14</SUB>>", "111": "<(LITERAL,1,new Node(line[i], 1))<SUB>14</SUB>>", "113": "<(IDENTIFIER,groups,add(node))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,l++)<SUB>16</SUB>>", "117": "<(LOCAL,int moves: int)<SUB>20</SUB>>", "119": "<(IDENTIFIER,moves,int moves = 0)<SUB>20</SUB>>", "11": "<(LOCAL,ArrayList&lt;Node&gt; temp: ANY)<SUB>21</SUB>>", "122": "<(IDENTIFIER,temp,ANY temp = new ArrayList&lt;&gt;())<SUB>21</SUB>>", "124": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,while (groups.size() &gt; 1),while (groups.size() &gt; 1))<SUB>22</SUB>>", "127": "<(size,size())<SUB>22</SUB>>", "129": "<(LITERAL,1,groups.size() &gt; 1)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,moves++)<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.assignment,l = size())<SUB>25</SUB>>", "135": "<(size,size())<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.postDecrement,groups.get(0).count--)<SUB>26</SUB>>", "139": "<(get,get(0))<SUB>26</SUB>>", "141": "<(LITERAL,0,get(0))<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.postDecrement,groups.get(l - 1).count--)<SUB>27</SUB>>", "145": "<(get,get(l - 1))<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>27</SUB>>", "149": "<(LITERAL,1,l - 1)<SUB>27</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; l - 1); i++),for (int i = 1; Some(i &lt; l - 1); i++))<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>28</SUB>>", "155": "<(LITERAL,1,int i = 1)<SUB>28</SUB>>", "157": "<(IDENTIFIER,i,i &lt; l - 1)<SUB>28</SUB>>", "159": "<(IDENTIFIER,l,l - 1)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "165": "<(&lt;operator&gt;.fieldAccess,groups.get(i).count)<SUB>29</SUB>>", "167": "<(IDENTIFIER,groups,get(i))<SUB>29</SUB>>", "169": "<(FIELD_IDENTIFIER,count,count)<SUB>29</SUB>>", "171": "<(LOCAL,int p: int)<SUB>32</SUB>>", "173": "<(&lt;operator&gt;.assignment,p = 0)<SUB>33</SUB>>", "175": "<(LITERAL,0,p = 0)<SUB>33</SUB>>", "177": "<(IDENTIFIER,p,p &lt; l)<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,p++)<SUB>33</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "183": "<(&lt;operator&gt;.greaterThan,groups.get(p).count &gt; 0)<SUB>34</SUB>>", "185": "<(get,get(p))<SUB>34</SUB>>", "187": "<(IDENTIFIER,p,get(p))<SUB>34</SUB>>", "189": "<(LITERAL,0,groups.get(p).count &gt; 0)<SUB>34</SUB>>", "191": "<(add,add(groups.get(p)))<SUB>35</SUB>>", "193": "<(get,get(p))<SUB>35</SUB>>", "195": "<(IDENTIFIER,p,get(p))<SUB>35</SUB>>", "197": "<(LOCAL,int lTemp: int)<SUB>39</SUB>>", "199": "<(IDENTIFIER,lTemp,int lTemp = size())<SUB>39</SUB>>", "201": "<(IDENTIFIER,temp,size())<SUB>39</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,p++)<SUB>40</SUB>>", "205": "<(&lt;operator&gt;.lessThan,p &lt; l)<SUB>40</SUB>>", "207": "<(IDENTIFIER,l,p &lt; l)<SUB>40</SUB>>", "209": "<(IDENTIFIER,p,p++)<SUB>40</SUB>>", "211": "<(CONTROL_STRUCTURE,if (groups.get(p).count &lt;= 0),if (groups.get(p).count &lt;= 0))<SUB>41</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,groups.get(p).count)<SUB>41</SUB>>", "215": "<(IDENTIFIER,groups,get(p))<SUB>41</SUB>>", "217": "<(FIELD_IDENTIFIER,count,count)<SUB>41</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "221": "<(CONTROL_STRUCTURE,if (groups.get(p).letter == temp.get(lTemp - 1).letter),if (groups.get(p).letter == temp.get(lTemp - 1).letter))<SUB>44</SUB>>", "223": "<(&lt;operator&gt;.fieldAccess,groups.get(p).letter)<SUB>44</SUB>>", "225": "<(IDENTIFIER,groups,get(p))<SUB>44</SUB>>", "227": "<(FIELD_IDENTIFIER,letter,letter)<SUB>44</SUB>>", "229": "<(get,get(lTemp - 1))<SUB>44</SUB>>", "231": "<(&lt;operator&gt;.subtraction,lTemp - 1)<SUB>44</SUB>>", "233": "<(LITERAL,1,lTemp - 1)<SUB>44</SUB>>", "235": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "237": "<(&lt;operator&gt;.fieldAccess,temp.get(lTemp - 1).count)<SUB>45</SUB>>", "239": "<(IDENTIFIER,temp,get(lTemp - 1))<SUB>45</SUB>>", "241": "<(IDENTIFIER,lTemp,lTemp - 1)<SUB>45</SUB>>", "243": "<(FIELD_IDENTIFIER,count,count)<SUB>45</SUB>>", "245": "<(get,get(p))<SUB>45</SUB>>", "247": "<(IDENTIFIER,p,get(p))<SUB>45</SUB>>", "249": "<(CONTROL_STRUCTURE,else,else)<SUB>46</SUB>>", "251": "<(add,add(groups.get(p)))<SUB>47</SUB>>", "253": "<(get,get(p))<SUB>47</SUB>>", "255": "<(IDENTIFIER,p,get(p))<SUB>47</SUB>>", "257": "<(IDENTIFIER,lTemp,lTemp++)<SUB>48</SUB>>", "259": "<(IDENTIFIER,groups,clear())<SUB>52</SUB>>", "261": "<(IDENTIFIER,groups,addAll(temp))<SUB>53</SUB>>", "263": "<(clear,clear())<SUB>54</SUB>>", "265": "<(println,System.out.println(moves))<SUB>57</SUB>>", "267": "<(IDENTIFIER,System,System.out.println(moves))<SUB>57</SUB>>", "269": "<(IDENTIFIER,moves,System.out.println(moves))<SUB>57</SUB>>", "271": "<(MODIFIER,STATIC)>"}}