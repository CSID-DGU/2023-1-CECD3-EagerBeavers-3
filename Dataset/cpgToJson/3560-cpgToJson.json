{"edges": [["39", "41"], ["39", "467"], ["39", "468"], ["39", "469"], ["41", "42"], ["42", "43"], ["42", "460"], ["43", "4"], ["43", "44"], ["43", "47"], ["43", "6"], ["43", "49"], ["43", "52"], ["43", "54"], ["43", "55"], ["43", "59"], ["43", "60"], ["43", "65"], ["43", "66"], ["43", "73"], ["43", "74"], ["43", "81"], ["43", "82"], ["43", "87"], ["43", "116"], ["43", "120"], ["43", "121"], ["43", "8"], ["43", "126"], ["43", "129"], ["43", "130"], ["43", "134"], ["43", "135"], ["43", "140"], ["43", "198"], ["44", "45"], ["44", "46"], ["47", "3"], ["47", "48"], ["49", "50"], ["49", "51"], ["52", "5"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["118", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "7"], ["130", "131"], ["130", "132"], ["132", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "150"], ["140", "155"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "10"], ["155", "156"], ["155", "159"], ["155", "160"], ["155", "171"], ["155", "184"], ["155", "195"], ["156", "157"], ["156", "158"], ["159", "9"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "183"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "194"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "202"], ["199", "200"], ["200", "201"], ["202", "12"], ["202", "203"], ["202", "206"], ["202", "207"], ["202", "211"], ["202", "212"], ["202", "217"], ["202", "218"], ["202", "223"], ["202", "271"], ["202", "319"], ["202", "367"], ["202", "415"], ["203", "204"], ["203", "205"], ["206", "11"], ["207", "208"], ["207", "209"], ["209", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "240"], ["224", "225"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "239"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["240", "14"], ["240", "241"], ["240", "244"], ["240", "245"], ["240", "250"], ["240", "257"], ["240", "268"], ["241", "242"], ["241", "243"], ["244", "13"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "267"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "288"], ["272", "273"], ["273", "274"], ["273", "279"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "287"], ["280", "281"], ["280", "286"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "285"], ["288", "16"], ["288", "289"], ["288", "292"], ["288", "293"], ["288", "300"], ["288", "305"], ["288", "316"], ["289", "290"], ["289", "291"], ["292", "15"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["305", "306"], ["305", "315"], ["306", "307"], ["306", "312"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "336"], ["320", "321"], ["321", "322"], ["321", "327"], ["322", "323"], ["322", "326"], ["323", "324"], ["323", "325"], ["327", "328"], ["327", "335"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["332", "333"], ["332", "334"], ["336", "18"], ["336", "337"], ["336", "340"], ["336", "341"], ["336", "346"], ["336", "353"], ["336", "364"], ["337", "338"], ["337", "339"], ["340", "17"], ["341", "342"], ["341", "345"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["350", "351"], ["350", "352"], ["353", "354"], ["353", "363"], ["354", "355"], ["354", "360"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "359"], ["360", "361"], ["360", "362"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "384"], ["368", "369"], ["369", "370"], ["369", "375"], ["370", "371"], ["370", "374"], ["371", "372"], ["371", "373"], ["375", "376"], ["375", "383"], ["376", "377"], ["376", "382"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "381"], ["384", "20"], ["384", "385"], ["384", "388"], ["384", "389"], ["384", "396"], ["384", "401"], ["384", "412"], ["385", "386"], ["385", "387"], ["388", "19"], ["389", "390"], ["389", "393"], ["390", "391"], ["390", "392"], ["393", "394"], ["393", "395"], ["396", "397"], ["396", "400"], ["397", "398"], ["397", "399"], ["401", "402"], ["401", "411"], ["402", "403"], ["402", "408"], ["403", "404"], ["403", "405"], ["405", "406"], ["405", "407"], ["408", "409"], ["408", "410"], ["412", "413"], ["412", "414"], ["415", "416"], ["415", "418"], ["416", "417"], ["418", "419"], ["419", "420"], ["419", "458"], ["420", "22"], ["420", "421"], ["420", "424"], ["420", "24"], ["420", "426"], ["420", "429"], ["420", "431"], ["420", "432"], ["420", "440"], ["420", "441"], ["420", "449"], ["420", "456"], ["421", "422"], ["421", "423"], ["424", "21"], ["424", "425"], ["426", "427"], ["426", "428"], ["429", "23"], ["429", "430"], ["432", "433"], ["432", "434"], ["434", "435"], ["434", "439"], ["435", "436"], ["435", "437"], ["437", "438"], ["441", "442"], ["441", "443"], ["443", "444"], ["443", "448"], ["444", "445"], ["444", "446"], ["446", "447"], ["449", "450"], ["449", "451"], ["451", "452"], ["451", "455"], ["452", "453"], ["452", "454"], ["456", "457"], ["458", "459"], ["460", "461"], ["461", "462"], ["462", "463"], ["462", "466"], ["463", "464"], ["463", "465"], ["44", "47"], ["47", "51"], ["49", "52"], ["52", "57"], ["55", "62"], ["60", "70"], ["66", "78"], ["74", "84"], ["82", "89"], ["116", "123"], ["121", "128"], ["126", "129"], ["129", "132"], ["130", "137"], ["135", "142"], ["46", "44"], ["51", "49"], ["57", "55"], ["62", "60"], ["68", "66"], ["76", "74"], ["84", "82"], ["89", "92"], ["92", "100"], ["92", "118"], ["95", "92"], ["118", "116"], ["123", "121"], ["128", "126"], ["132", "130"], ["137", "135"], ["142", "149"], ["145", "158"], ["145", "200"], ["150", "149"], ["199", "469"], ["199", "465"], ["199", "205"], ["462", "469"], ["70", "68"], ["78", "76"], ["147", "145"], ["152", "150"], ["156", "159"], ["159", "163"], ["160", "174"], ["171", "190"], ["184", "195"], ["195", "152"], ["200", "199"], ["203", "206"], ["206", "209"], ["207", "216"], ["212", "222"], ["218", "227"], ["463", "462"], ["100", "103"], ["103", "111"], ["103", "95"], ["106", "103"], ["149", "147"], ["158", "156"], ["161", "167"], ["164", "160"], ["172", "180"], ["175", "171"], ["185", "184"], ["205", "203"], ["209", "207"], ["214", "212"], ["220", "218"], ["224", "243"], ["224", "275"], ["272", "291"], ["272", "323"], ["320", "339"], ["320", "371"], ["368", "387"], ["368", "416"], ["416", "200"], ["416", "423"], ["465", "463"], ["109", "106"], ["163", "161"], ["165", "164"], ["174", "172"], ["176", "175"], ["186", "193"], ["191", "185"], ["216", "214"], ["222", "220"], ["225", "224"], ["241", "244"], ["244", "248"], ["245", "253"], ["250", "263"], ["257", "268"], ["268", "275"], ["273", "272"], ["289", "292"], ["292", "296"], ["293", "303"], ["300", "311"], ["305", "316"], ["316", "323"], ["321", "320"], ["337", "340"], ["340", "344"], ["341", "349"], ["346", "359"], ["353", "364"], ["364", "371"], ["369", "368"], ["385", "388"], ["388", "392"], ["389", "399"], ["396", "407"], ["401", "412"], ["412", "416"], ["110", "109"], ["167", "165"], ["178", "176"], ["188", "186"], ["193", "191"], ["226", "225"], ["226", "233"], ["231", "225"], ["243", "241"], ["246", "245"], ["251", "254"], ["254", "250"], ["258", "257"], ["274", "273"], ["274", "283"], ["279", "273"], ["291", "289"], ["294", "297"], ["297", "293"], ["301", "300"], ["306", "305"], ["322", "321"], ["322", "329"], ["327", "321"], ["339", "337"], ["342", "341"], ["347", "350"], ["350", "346"], ["354", "353"], ["370", "369"], ["370", "379"], ["375", "369"], ["387", "385"], ["390", "393"], ["393", "389"], ["397", "396"], ["402", "401"], ["111", "110"], ["180", "178"], ["190", "188"], ["227", "226"], ["232", "231"], ["248", "246"], ["253", "251"], ["259", "266"], ["264", "258"], ["275", "274"], ["280", "279"], ["296", "294"], ["303", "301"], ["307", "314"], ["312", "306"], ["323", "322"], ["328", "327"], ["344", "342"], ["349", "347"], ["355", "362"], ["360", "354"], ["371", "370"], ["376", "375"], ["392", "390"], ["399", "397"], ["403", "410"], ["408", "402"], ["421", "424"], ["424", "428"], ["426", "429"], ["429", "436"], ["432", "445"], ["441", "452"], ["449", "456"], ["456", "200"], ["233", "236"], ["236", "232"], ["261", "259"], ["266", "264"], ["281", "280"], ["309", "307"], ["314", "312"], ["329", "332"], ["332", "328"], ["357", "355"], ["362", "360"], ["377", "376"], ["405", "403"], ["410", "408"], ["423", "421"], ["428", "426"], ["434", "432"], ["443", "441"], ["451", "449"], ["263", "261"], ["283", "281"], ["311", "309"], ["359", "357"], ["379", "377"], ["407", "405"], ["435", "434"], ["444", "443"], ["452", "451"], ["436", "437"], ["437", "435"], ["445", "446"], ["446", "444"], ["39", "46"], ["40", "469"], ["44", "469"], ["47", "469"], ["49", "469"], ["52", "469"], ["52", "469"], ["55", "469"], ["60", "469"], ["60", "469"], ["68", "469"], ["66", "469"], ["66", "469"], ["76", "469"], ["74", "469"], ["74", "469"], ["82", "469"], ["84", "469"], ["82", "469"], ["82", "469"], ["92", "469"], ["92", "469"], ["121", "469"], ["123", "469"], ["121", "469"], ["121", "469"], ["126", "469"], ["129", "469"], ["132", "469"], ["130", "469"], ["130", "469"], ["135", "469"], ["137", "469"], ["135", "469"], ["135", "469"], ["142", "469"], ["145", "469"], ["145", "469"], ["145", "469"], ["200", "469"], ["199", "469"], ["199", "469"], ["203", "469"], ["206", "469"], ["207", "469"], ["207", "469"], ["207", "469"], ["212", "469"], ["212", "469"], ["218", "469"], ["218", "469"], ["226", "469"], ["226", "469"], ["225", "469"], ["231", "469"], ["225", "469"], ["224", "469"], ["224", "469"], ["241", "469"], ["244", "469"], ["245", "469"], ["250", "469"], ["250", "469"], ["257", "469"], ["257", "469"], ["268", "469"], ["268", "469"], ["274", "469"], ["274", "469"], ["273", "469"], ["279", "469"], ["273", "469"], ["272", "469"], ["272", "469"], ["289", "469"], ["292", "469"], ["293", "469"], ["293", "469"], ["300", "469"], ["305", "469"], ["305", "469"], ["316", "469"], ["316", "469"], ["323", "469"], ["322", "469"], ["321", "469"], ["332", "469"], ["327", "469"], ["321", "469"], ["320", "469"], ["320", "469"], ["337", "469"], ["340", "469"], ["341", "469"], ["350", "469"], ["346", "469"], ["346", "469"], ["353", "469"], ["353", "469"], ["364", "469"], ["364", "469"], ["371", "469"], ["370", "469"], ["369", "469"], ["379", "469"], ["375", "469"], ["369", "469"], ["368", "469"], ["368", "469"], ["385", "469"], ["388", "469"], ["393", "469"], ["389", "469"], ["389", "469"], ["396", "469"], ["396", "469"], ["401", "469"], ["401", "469"], ["412", "469"], ["412", "469"], ["421", "469"], ["424", "469"], ["426", "469"], ["429", "469"], ["429", "469"], ["435", "469"], ["434", "469"], ["432", "469"], ["432", "469"], ["446", "469"], ["444", "469"], ["443", "469"], ["441", "469"], ["441", "469"], ["452", "469"], ["451", "469"], ["451", "469"], ["449", "469"], ["449", "469"], ["456", "469"], ["456", "469"], ["156", "469"], ["159", "469"], ["165", "469"], ["164", "469"], ["160", "469"], ["160", "469"], ["176", "469"], ["176", "469"], ["175", "469"], ["171", "469"], ["171", "469"], ["184", "469"], ["184", "469"], ["195", "469"], ["195", "469"], ["150", "469"], ["150", "469"], ["100", "469"], ["103", "469"], ["103", "469"], ["103", "469"], ["95", "469"], ["109", "469"], ["109", "469"], ["106", "469"], ["39", "40"], ["39", "44"], ["39", "49"], ["57", "55"], ["62", "60"], ["62", "60"], ["68", "66"], ["68", "66"], ["76", "74"], ["76", "74"], ["84", "82"], ["84", "82"], ["118", "116"], ["123", "121"], ["123", "121"], ["39", "126"], ["132", "130"], ["137", "135"], ["137", "135"], ["39", "461"], ["44", "47"], ["39", "47"], ["49", "52"], ["39", "52"], ["47", "52"], ["39", "89"], ["126", "129"], ["39", "129"], ["39", "142"], ["39", "150"], ["145", "150"], ["52", "57"], ["39", "57"], ["55", "62"], ["39", "62"], ["39", "68"], ["60", "68"], ["68", "76"], ["39", "76"], ["60", "76"], ["66", "84"], ["39", "84"], ["74", "84"], ["89", "92"], ["95", "92"], ["39", "92"], ["84", "92"], ["92", "95"], ["39", "95"], ["57", "118"], ["39", "118"], ["76", "123"], ["39", "123"], ["116", "123"], ["118", "132"], ["39", "132"], ["130", "137"], ["39", "137"], ["142", "145"], ["150", "145"], ["39", "145"], ["135", "145"], ["39", "156"], ["164", "160"], ["164", "160"], ["175", "171"], ["175", "171"], ["39", "184"], ["200", "199"], ["39", "203"], ["209", "207"], ["207", "212"], ["207", "218"], ["39", "462"], ["39", "100"], ["39", "152"], ["145", "152"], ["156", "159"], ["39", "159"], ["129", "195"], ["39", "195"], ["159", "195"], ["160", "195"], ["171", "195"], ["129", "200"], ["416", "200"], ["195", "200"], ["39", "200"], ["203", "206"], ["39", "206"], ["100", "103"], ["106", "103"], ["39", "103"], ["84", "103"], ["103", "106"], ["39", "106"], ["39", "109"], ["165", "164"], ["165", "164"], ["39", "164"], ["176", "175"], ["176", "175"], ["39", "175"], ["200", "209"], ["39", "209"], ["225", "224"], ["225", "224"], ["39", "241"], ["212", "245"], ["39", "245"], ["39", "250"], ["218", "250"], ["39", "257"], ["273", "272"], ["273", "272"], ["39", "289"], ["39", "293"], ["212", "293"], ["39", "300"], ["218", "300"], ["39", "305"], ["321", "320"], ["321", "320"], ["39", "337"], ["39", "341"], ["212", "341"], ["350", "346"], ["350", "346"], ["39", "353"], ["369", "368"], ["369", "368"], ["39", "385"], ["393", "389"], ["393", "389"], ["323", "396"], ["332", "396"], ["350", "396"], ["39", "396"], ["39", "401"], ["209", "416"], ["268", "416"], ["316", "416"], ["364", "416"], ["412", "416"], ["39", "416"], ["123", "165"], ["176", "165"], ["39", "165"], ["135", "165"], ["165", "176"], ["39", "176"], ["135", "176"], ["226", "225"], ["226", "225"], ["231", "225"], ["231", "225"], ["241", "244"], ["39", "244"], ["209", "268"], ["39", "268"], ["244", "268"], ["245", "268"], ["250", "268"], ["274", "273"], ["274", "273"], ["279", "273"], ["279", "273"], ["289", "292"], ["39", "292"], ["209", "316"], ["268", "316"], ["39", "316"], ["292", "316"], ["293", "316"], ["300", "316"], ["322", "321"], ["322", "321"], ["327", "321"], ["327", "321"], ["337", "340"], ["39", "340"], ["209", "364"], ["268", "364"], ["316", "364"], ["39", "364"], ["340", "364"], ["341", "364"], ["346", "364"], ["370", "369"], ["370", "369"], ["375", "369"], ["375", "369"], ["385", "388"], ["39", "388"], ["209", "412"], ["268", "412"], ["316", "412"], ["364", "412"], ["39", "412"], ["388", "412"], ["389", "412"], ["396", "412"], ["218", "226"], ["39", "226"], ["84", "226"], ["103", "226"], ["39", "231"], ["39", "254"], ["218", "254"], ["212", "274"], ["39", "274"], ["92", "274"], ["39", "279"], ["39", "297"], ["212", "297"], ["323", "322"], ["323", "322"], ["39", "322"], ["39", "327"], ["323", "350"], ["332", "350"], ["39", "350"], ["371", "370"], ["371", "370"], ["39", "370"], ["39", "375"], ["371", "393"], ["379", "393"], ["39", "393"], ["39", "421"], ["39", "426"], ["39", "432"], ["437", "432"], ["39", "441"], ["446", "441"], ["39", "459"], ["145", "180"], ["39", "180"], ["218", "227"], ["39", "227"], ["212", "275"], ["39", "275"], ["39", "323"], ["218", "323"], ["39", "371"], ["212", "371"], ["421", "424"], ["39", "424"], ["426", "429"], ["39", "429"], ["424", "429"], ["429", "449"], ["39", "449"], ["432", "449"], ["441", "449"], ["449", "456"], ["39", "456"], ["39", "236"], ["218", "236"], ["323", "332"], ["39", "332"], ["39", "434"], ["437", "434"], ["39", "443"], ["446", "443"], ["432", "451"], ["39", "451"], ["441", "451"], ["39", "283"], ["212", "283"], ["371", "379"], ["39", "379"], ["39", "435"], ["437", "435"], ["39", "444"], ["446", "444"], ["432", "452"], ["39", "452"], ["207", "437"], ["39", "437"], ["437", "446"], ["39", "446"], ["92", "95"], ["92", "100"], ["92", "103"], ["92", "92"], ["145", "167"], ["145", "188"], ["145", "161"], ["145", "163"], ["145", "150"], ["145", "195"], ["145", "190"], ["145", "184"], ["145", "152"], ["145", "174"], ["145", "186"], ["145", "180"], ["145", "158"], ["145", "160"], ["145", "159"], ["145", "176"], ["145", "147"], ["145", "172"], ["145", "145"], ["145", "178"], ["145", "149"], ["145", "185"], ["145", "191"], ["145", "164"], ["145", "171"], ["145", "193"], ["145", "165"], ["145", "175"], ["145", "156"], ["199", "214"], ["199", "209"], ["199", "272"], ["199", "226"], ["199", "322"], ["199", "206"], ["199", "370"], ["199", "224"], ["199", "416"], ["199", "462"], ["199", "368"], ["199", "274"], ["199", "200"], ["199", "199"], ["199", "323"], ["199", "216"], ["199", "227"], ["199", "222"], ["199", "321"], ["199", "320"], ["199", "225"], ["199", "273"], ["199", "275"], ["199", "207"], ["199", "212"], ["199", "205"], ["199", "371"], ["199", "220"], ["199", "465"], ["199", "369"], ["199", "463"], ["199", "203"], ["199", "218"], ["103", "109"], ["103", "103"], ["103", "111"], ["103", "106"], ["103", "110"], ["224", "243"], ["224", "264"], ["224", "258"], ["224", "268"], ["224", "253"], ["224", "254"], ["224", "241"], ["224", "257"], ["224", "244"], ["224", "261"], ["224", "245"], ["224", "259"], ["224", "246"], ["224", "251"], ["224", "263"], ["224", "248"], ["224", "250"], ["224", "266"], ["272", "292"], ["272", "300"], ["272", "306"], ["272", "296"], ["272", "311"], ["272", "305"], ["272", "316"], ["272", "297"], ["272", "291"], ["272", "307"], ["272", "309"], ["272", "301"], ["272", "289"], ["272", "293"], ["272", "314"], ["272", "294"], ["272", "303"], ["272", "312"], ["320", "349"], ["320", "340"], ["320", "362"], ["320", "355"], ["320", "346"], ["320", "364"], ["320", "347"], ["320", "357"], ["320", "360"], ["320", "342"], ["320", "337"], ["320", "341"], ["320", "339"], ["320", "353"], ["320", "359"], ["320", "354"], ["320", "350"], ["320", "344"], ["368", "401"], ["368", "403"], ["368", "392"], ["368", "396"], ["368", "408"], ["368", "412"], ["368", "389"], ["368", "390"], ["368", "388"], ["368", "405"], ["368", "402"], ["368", "397"], ["368", "410"], ["368", "385"], ["368", "387"], ["368", "393"], ["368", "399"], ["368", "407"], ["416", "428"], ["416", "435"], ["416", "452"], ["416", "426"], ["416", "456"], ["416", "437"], ["416", "446"], ["416", "424"], ["416", "441"], ["416", "429"], ["416", "443"], ["416", "434"], ["416", "449"], ["416", "421"], ["416", "423"], ["416", "451"], ["416", "432"], ["416", "436"], ["416", "444"], ["416", "445"], ["226", "236"], ["226", "232"], ["226", "231"], ["226", "233"], ["274", "283"], ["274", "281"], ["274", "279"], ["274", "280"], ["322", "329"], ["322", "328"], ["322", "332"], ["322", "327"], ["370", "376"], ["370", "377"], ["370", "379"], ["370", "375"]], "features": {"39": "<(METHOD,main)<SUB>1</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "43": "<(BLOCK,try,try)<SUB>2</SUB>>", "44": "<(&lt;operator&gt;.assignment,ANY file = new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "3": "<(IDENTIFIER,file,new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "6": "<(LOCAL,Scanner sc: ANY)<SUB>4</SUB>>", "50": "<(IDENTIFIER,sc,ANY sc = new Scanner(file))<SUB>4</SUB>>", "52": "<(&lt;init&gt;,new Scanner(file))<SUB>4</SUB>>", "53": "<(IDENTIFIER,file,new Scanner(file))<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,String s = nextLine())<SUB>5</SUB>>", "57": "<(nextLine,nextLine())<SUB>5</SUB>>", "59": "<(LOCAL,String[] seperatedd: java.lang.String[])<SUB>6</SUB>>", "61": "<(IDENTIFIER,seperatedd,String[] seperatedd = s.split(&quot; &quot;))<SUB>6</SUB>>", "63": "<(IDENTIFIER,s,s.split(&quot; &quot;))<SUB>6</SUB>>", "65": "<(LOCAL,int x: int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,x,int x = Integer.parseInt(seperatedd[0]))<SUB>7</SUB>>", "69": "<(IDENTIFIER,Integer,Integer.parseInt(seperatedd[0]))<SUB>7</SUB>>", "71": "<(IDENTIFIER,seperatedd,Integer.parseInt(seperatedd[0]))<SUB>7</SUB>>", "73": "<(LOCAL,int y: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,y,int y = Integer.parseInt(seperatedd[1]))<SUB>8</SUB>>", "77": "<(IDENTIFIER,Integer,Integer.parseInt(seperatedd[1]))<SUB>8</SUB>>", "79": "<(IDENTIFIER,seperatedd,Integer.parseInt(seperatedd[1]))<SUB>8</SUB>>", "81": "<(LOCAL,int[][] grid: int[][])<SUB>9</SUB>>", "83": "<(IDENTIFIER,grid,int[][] grid = new int[x][y])<SUB>9</SUB>>", "85": "<(IDENTIFIER,x,new int[x][y])<SUB>9</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; x); i++),for (int i = 0; Some(i &lt; x); i++))<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "91": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,i &lt; x)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "99": "<(LOCAL,int j: int)<SUB>12</SUB>>", "101": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.lessThan,j &lt; y)<SUB>12</SUB>>", "105": "<(IDENTIFIER,y,j &lt; y)<SUB>12</SUB>>", "107": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.assignment,grid[i][j] = 0)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>14</SUB>>", "113": "<(IDENTIFIER,i,grid[i][j] = 0)<SUB>14</SUB>>", "115": "<(LITERAL,0,grid[i][j] = 0)<SUB>14</SUB>>", "117": "<(IDENTIFIER,s,s = nextLine())<SUB>17</SUB>>", "119": "<(IDENTIFIER,sc,nextLine())<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.assignment,int z = Integer.parseInt(s))<SUB>18</SUB>>", "123": "<(parseInt,Integer.parseInt(s))<SUB>18</SUB>>", "125": "<(IDENTIFIER,s,Integer.parseInt(s))<SUB>18</SUB>>", "126": "<(&lt;operator&gt;.assignment,ANY BFS = new LinkedList&lt;Point&gt;())<SUB>19</SUB>>", "128": "<(&lt;operator&gt;.alloc,new LinkedList&lt;Point&gt;())<SUB>19</SUB>>", "7": "<(IDENTIFIER,BFS,new LinkedList&lt;Point&gt;())<SUB>19</SUB>>", "131": "<(IDENTIFIER,s,s = nextLine())<SUB>20</SUB>>", "133": "<(IDENTIFIER,sc,nextLine())<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.assignment,String[] seperated = s.split(&quot; &quot;))<SUB>21</SUB>>", "137": "<(split,s.split(&quot; &quot;))<SUB>21</SUB>>", "139": "<(LITERAL,&quot; &quot;,s.split(&quot; &quot;))<SUB>21</SUB>>", "141": "<(LOCAL,int i: int)<SUB>22</SUB>>", "143": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; seperated.length)<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,seperated.length)<SUB>22</SUB>>", "149": "<(FIELD_IDENTIFIER,length,length)<SUB>22</SUB>>", "151": "<(IDENTIFIER,i,i = i + 2)<SUB>22</SUB>>", "153": "<(IDENTIFIER,i,i + 2)<SUB>22</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "156": "<(&lt;operator&gt;.assignment,ANY temp = new Point())<SUB>24</SUB>>", "158": "<(&lt;operator&gt;.alloc,new Point())<SUB>24</SUB>>", "9": "<(IDENTIFIER,temp,new Point())<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,temp.x)<SUB>25</SUB>>", "163": "<(FIELD_IDENTIFIER,x,x)<SUB>25</SUB>>", "165": "<(parseInt,Integer.parseInt(seperated[i]))<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,seperated[i])<SUB>25</SUB>>", "169": "<(IDENTIFIER,i,Integer.parseInt(seperated[i]))<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.assignment,temp.y = Integer.parseInt(seperated[i + 1]) - 1)<SUB>26</SUB>>", "173": "<(IDENTIFIER,temp,temp.y = Integer.parseInt(seperated[i + 1]) - 1)<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.subtraction,Integer.parseInt(seperated[i + 1]) - 1)<SUB>26</SUB>>", "177": "<(IDENTIFIER,Integer,Integer.parseInt(seperated[i + 1]))<SUB>26</SUB>>", "179": "<(IDENTIFIER,seperated,Integer.parseInt(seperated[i + 1]))<SUB>26</SUB>>", "181": "<(IDENTIFIER,i,i + 1)<SUB>26</SUB>>", "183": "<(LITERAL,1,Integer.parseInt(seperated[i + 1]) - 1)<SUB>26</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,grid[temp.x][temp.y])<SUB>27</SUB>>", "187": "<(IDENTIFIER,grid,grid[temp.x][temp.y] = 1)<SUB>27</SUB>>", "189": "<(IDENTIFIER,temp,grid[temp.x][temp.y] = 1)<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,temp.y)<SUB>27</SUB>>", "193": "<(FIELD_IDENTIFIER,y,y)<SUB>27</SUB>>", "195": "<(addLast,addLast(temp))<SUB>28</SUB>>", "197": "<(IDENTIFIER,temp,addLast(temp))<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.logicalNot,!BFS.isEmpty())<SUB>30</SUB>>", "201": "<(IDENTIFIER,BFS,isEmpty())<SUB>30</SUB>>", "12": "<(LOCAL,Point temp: ANY)<SUB>32</SUB>>", "204": "<(IDENTIFIER,temp,ANY temp = new Point())<SUB>32</SUB>>", "206": "<(&lt;init&gt;,new Point())<SUB>32</SUB>>", "207": "<(&lt;operator&gt;.assignment,temp = removeFirst())<SUB>33</SUB>>", "209": "<(removeFirst,removeFirst())<SUB>33</SUB>>", "211": "<(LOCAL,int k: int)<SUB>34</SUB>>", "213": "<(IDENTIFIER,k,int k = temp.x)<SUB>34</SUB>>", "215": "<(IDENTIFIER,temp,int k = temp.x)<SUB>34</SUB>>", "217": "<(LOCAL,int l: int)<SUB>35</SUB>>", "219": "<(IDENTIFIER,l,int l = temp.y)<SUB>35</SUB>>", "221": "<(IDENTIFIER,temp,int l = temp.y)<SUB>35</SUB>>", "223": "<(CONTROL_STRUCTURE,if (!(l + 1 &gt;= y || grid[k][l + 1] == 1)),if (!(l + 1 &gt;= y || grid[k][l + 1] == 1)))<SUB>37</SUB>>", "225": "<(&lt;operator&gt;.logicalOr,l + 1 &gt;= y || grid[k][l + 1] == 1)<SUB>37</SUB>>", "227": "<(&lt;operator&gt;.addition,l + 1)<SUB>37</SUB>>", "229": "<(LITERAL,1,l + 1)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.equals,grid[k][l + 1] == 1)<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,grid[k])<SUB>37</SUB>>", "235": "<(IDENTIFIER,k,grid[k][l + 1] == 1)<SUB>37</SUB>>", "237": "<(IDENTIFIER,l,l + 1)<SUB>37</SUB>>", "239": "<(LITERAL,1,grid[k][l + 1] == 1)<SUB>37</SUB>>", "14": "<(LOCAL,Point temp1: ANY)<SUB>39</SUB>>", "242": "<(IDENTIFIER,temp1,ANY temp1 = new Point())<SUB>39</SUB>>", "244": "<(&lt;init&gt;,new Point())<SUB>39</SUB>>", "245": "<(&lt;operator&gt;.assignment,temp1.x = k)<SUB>40</SUB>>", "247": "<(IDENTIFIER,temp1,temp1.x = k)<SUB>40</SUB>>", "249": "<(IDENTIFIER,k,temp1.x = k)<SUB>40</SUB>>", "251": "<(&lt;operator&gt;.fieldAccess,temp1.y)<SUB>41</SUB>>", "253": "<(FIELD_IDENTIFIER,y,y)<SUB>41</SUB>>", "255": "<(IDENTIFIER,l,l + 1)<SUB>41</SUB>>", "257": "<(&lt;operator&gt;.assignment,grid[temp1.x][temp1.y] = 1)<SUB>42</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,grid[temp1.x])<SUB>42</SUB>>", "261": "<(&lt;operator&gt;.fieldAccess,temp1.x)<SUB>42</SUB>>", "263": "<(FIELD_IDENTIFIER,x,x)<SUB>42</SUB>>", "265": "<(IDENTIFIER,temp1,grid[temp1.x][temp1.y] = 1)<SUB>42</SUB>>", "267": "<(LITERAL,1,grid[temp1.x][temp1.y] = 1)<SUB>42</SUB>>", "269": "<(IDENTIFIER,BFS,addLast(temp1))<SUB>43</SUB>>", "271": "<(CONTROL_STRUCTURE,if (!(k + 1 &gt;= x || grid[k + 1][l] == 1)),if (!(k + 1 &gt;= x || grid[k + 1][l] == 1)))<SUB>45</SUB>>", "273": "<(&lt;operator&gt;.logicalOr,k + 1 &gt;= x || grid[k + 1][l] == 1)<SUB>45</SUB>>", "275": "<(&lt;operator&gt;.addition,k + 1)<SUB>45</SUB>>", "277": "<(LITERAL,1,k + 1)<SUB>45</SUB>>", "279": "<(&lt;operator&gt;.equals,grid[k + 1][l] == 1)<SUB>45</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,grid[k + 1])<SUB>45</SUB>>", "283": "<(&lt;operator&gt;.addition,k + 1)<SUB>45</SUB>>", "285": "<(LITERAL,1,k + 1)<SUB>45</SUB>>", "287": "<(LITERAL,1,grid[k + 1][l] == 1)<SUB>45</SUB>>", "16": "<(LOCAL,Point temp1: ANY)<SUB>47</SUB>>", "290": "<(IDENTIFIER,temp1,ANY temp1 = new Point())<SUB>47</SUB>>", "292": "<(&lt;init&gt;,new Point())<SUB>47</SUB>>", "293": "<(&lt;operator&gt;.assignment,temp1.x = k + 1)<SUB>48</SUB>>", "295": "<(IDENTIFIER,temp1,temp1.x = k + 1)<SUB>48</SUB>>", "297": "<(&lt;operator&gt;.addition,k + 1)<SUB>48</SUB>>", "299": "<(LITERAL,1,k + 1)<SUB>48</SUB>>", "301": "<(&lt;operator&gt;.fieldAccess,temp1.y)<SUB>49</SUB>>", "303": "<(FIELD_IDENTIFIER,y,y)<SUB>49</SUB>>", "305": "<(&lt;operator&gt;.assignment,grid[temp1.x][temp1.y] = 1)<SUB>50</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,grid[temp1.x])<SUB>50</SUB>>", "309": "<(&lt;operator&gt;.fieldAccess,temp1.x)<SUB>50</SUB>>", "311": "<(FIELD_IDENTIFIER,x,x)<SUB>50</SUB>>", "313": "<(IDENTIFIER,temp1,grid[temp1.x][temp1.y] = 1)<SUB>50</SUB>>", "315": "<(LITERAL,1,grid[temp1.x][temp1.y] = 1)<SUB>50</SUB>>", "317": "<(IDENTIFIER,BFS,addLast(temp1))<SUB>51</SUB>>", "319": "<(CONTROL_STRUCTURE,if (!(l - 1 &lt; 0 || grid[k][l - 1] == 1)),if (!(l - 1 &lt; 0 || grid[k][l - 1] == 1)))<SUB>55</SUB>>", "321": "<(&lt;operator&gt;.logicalOr,l - 1 &lt; 0 || grid[k][l - 1] == 1)<SUB>55</SUB>>", "323": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>55</SUB>>", "325": "<(LITERAL,1,l - 1)<SUB>55</SUB>>", "327": "<(&lt;operator&gt;.equals,grid[k][l - 1] == 1)<SUB>55</SUB>>", "329": "<(&lt;operator&gt;.indexAccess,grid[k])<SUB>55</SUB>>", "331": "<(IDENTIFIER,k,grid[k][l - 1] == 1)<SUB>55</SUB>>", "333": "<(IDENTIFIER,l,l - 1)<SUB>55</SUB>>", "335": "<(LITERAL,1,grid[k][l - 1] == 1)<SUB>55</SUB>>", "18": "<(LOCAL,Point temp1: ANY)<SUB>57</SUB>>", "338": "<(IDENTIFIER,temp1,ANY temp1 = new Point())<SUB>57</SUB>>", "340": "<(&lt;init&gt;,new Point())<SUB>57</SUB>>", "341": "<(&lt;operator&gt;.assignment,temp1.x = k)<SUB>58</SUB>>", "343": "<(IDENTIFIER,temp1,temp1.x = k)<SUB>58</SUB>>", "345": "<(IDENTIFIER,k,temp1.x = k)<SUB>58</SUB>>", "347": "<(&lt;operator&gt;.fieldAccess,temp1.y)<SUB>59</SUB>>", "349": "<(FIELD_IDENTIFIER,y,y)<SUB>59</SUB>>", "351": "<(IDENTIFIER,l,l - 1)<SUB>59</SUB>>", "353": "<(&lt;operator&gt;.assignment,grid[temp1.x][temp1.y] = 1)<SUB>60</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,grid[temp1.x])<SUB>60</SUB>>", "357": "<(&lt;operator&gt;.fieldAccess,temp1.x)<SUB>60</SUB>>", "359": "<(FIELD_IDENTIFIER,x,x)<SUB>60</SUB>>", "361": "<(IDENTIFIER,temp1,grid[temp1.x][temp1.y] = 1)<SUB>60</SUB>>", "363": "<(LITERAL,1,grid[temp1.x][temp1.y] = 1)<SUB>60</SUB>>", "365": "<(IDENTIFIER,BFS,addLast(temp1))<SUB>61</SUB>>", "367": "<(CONTROL_STRUCTURE,if (!(k - 1 &lt; 0 || grid[k - 1][l] == 1)),if (!(k - 1 &lt; 0 || grid[k - 1][l] == 1)))<SUB>63</SUB>>", "369": "<(&lt;operator&gt;.logicalOr,k - 1 &lt; 0 || grid[k - 1][l] == 1)<SUB>63</SUB>>", "371": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>63</SUB>>", "373": "<(LITERAL,1,k - 1)<SUB>63</SUB>>", "375": "<(&lt;operator&gt;.equals,grid[k - 1][l] == 1)<SUB>63</SUB>>", "377": "<(&lt;operator&gt;.indexAccess,grid[k - 1])<SUB>63</SUB>>", "379": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>63</SUB>>", "381": "<(LITERAL,1,k - 1)<SUB>63</SUB>>", "383": "<(LITERAL,1,grid[k - 1][l] == 1)<SUB>63</SUB>>", "20": "<(LOCAL,Point temp1: ANY)<SUB>65</SUB>>", "386": "<(IDENTIFIER,temp1,ANY temp1 = new Point())<SUB>65</SUB>>", "388": "<(&lt;init&gt;,new Point())<SUB>65</SUB>>", "389": "<(&lt;operator&gt;.assignment,temp1.x = k - 1)<SUB>66</SUB>>", "391": "<(IDENTIFIER,temp1,temp1.x = k - 1)<SUB>66</SUB>>", "393": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>66</SUB>>", "395": "<(LITERAL,1,k - 1)<SUB>66</SUB>>", "397": "<(&lt;operator&gt;.fieldAccess,temp1.y)<SUB>67</SUB>>", "399": "<(FIELD_IDENTIFIER,y,y)<SUB>67</SUB>>", "401": "<(&lt;operator&gt;.assignment,grid[temp1.x][temp1.y] = 1)<SUB>68</SUB>>", "403": "<(&lt;operator&gt;.indexAccess,grid[temp1.x])<SUB>68</SUB>>", "405": "<(&lt;operator&gt;.fieldAccess,temp1.x)<SUB>68</SUB>>", "407": "<(FIELD_IDENTIFIER,x,x)<SUB>68</SUB>>", "409": "<(IDENTIFIER,temp1,grid[temp1.x][temp1.y] = 1)<SUB>68</SUB>>", "411": "<(LITERAL,1,grid[temp1.x][temp1.y] = 1)<SUB>68</SUB>>", "413": "<(IDENTIFIER,BFS,addLast(temp1))<SUB>69</SUB>>", "415": "<(CONTROL_STRUCTURE,if (BFS.isEmpty()),if (BFS.isEmpty()))<SUB>71</SUB>>", "417": "<(IDENTIFIER,BFS,isEmpty())<SUB>71</SUB>>", "419": "<(CONTROL_STRUCTURE,try,try)<SUB>73</SUB>>", "22": "<(LOCAL,File fil: ANY)<SUB>74</SUB>>", "422": "<(IDENTIFIER,fil,ANY fil = new File(&quot;output.txt&quot;))<SUB>74</SUB>>", "424": "<(&lt;init&gt;,new File(&quot;output.txt&quot;))<SUB>74</SUB>>", "425": "<(LITERAL,&quot;output.txt&quot;,new File(&quot;output.txt&quot;))<SUB>74</SUB>>", "426": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(fil))<SUB>75</SUB>>", "428": "<(&lt;operator&gt;.alloc,new PrintWriter(fil))<SUB>75</SUB>>", "23": "<(IDENTIFIER,out,new PrintWriter(fil))<SUB>75</SUB>>", "431": "<(LOCAL,int v1: int)<SUB>76</SUB>>", "433": "<(IDENTIFIER,v1,int v1 = (int) temp.getX() + 1)<SUB>76</SUB>>", "435": "<(&lt;operator&gt;.cast,(int) temp.getX())<SUB>76</SUB>>", "437": "<(getX,getX())<SUB>76</SUB>>", "439": "<(LITERAL,1,(int) temp.getX() + 1)<SUB>76</SUB>>", "441": "<(&lt;operator&gt;.assignment,int v2 = (int) temp.getY() + 1)<SUB>77</SUB>>", "443": "<(&lt;operator&gt;.addition,(int) temp.getY() + 1)<SUB>77</SUB>>", "445": "<(TYPE_REF,int,int)<SUB>77</SUB>>", "447": "<(IDENTIFIER,temp,getY())<SUB>77</SUB>>", "449": "<(println,println(v1 + &quot; &quot; + v2))<SUB>78</SUB>>", "451": "<(&lt;operator&gt;.addition,v1 + &quot; &quot; + v2)<SUB>78</SUB>>", "453": "<(IDENTIFIER,v1,v1 + &quot; &quot;)<SUB>78</SUB>>", "455": "<(IDENTIFIER,v2,v1 + &quot; &quot; + v2)<SUB>78</SUB>>", "457": "<(IDENTIFIER,out,close())<SUB>79</SUB>>", "459": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>81</SUB>>", "461": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>85</SUB>>", "463": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>86</SUB>>", "465": "<(FIELD_IDENTIFIER,out,out)<SUB>86</SUB>>", "467": "<(MODIFIER,PUBLIC)>", "469": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}