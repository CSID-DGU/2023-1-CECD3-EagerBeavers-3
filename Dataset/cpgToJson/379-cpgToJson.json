{"edges": [["23", "24"], ["23", "25"], ["23", "288"], ["23", "289"], ["23", "290"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "52"], ["25", "53"], ["25", "57"], ["25", "58"], ["25", "62"], ["25", "63"], ["25", "8"], ["25", "67"], ["25", "70"], ["25", "71"], ["25", "99"], ["25", "100"], ["25", "103"], ["25", "104"], ["25", "108"], ["25", "185"], ["25", "186"], ["25", "190"], ["25", "194"], ["25", "240"], ["25", "286"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["70", "7"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "87"], ["81", "93"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["95", "96"], ["95", "97"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "152"], ["119", "120"], ["119", "127"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "147"], ["128", "129"], ["128", "135"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["131", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["137", "146"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "180"], ["161", "162"], ["161", "168"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["164", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["170", "179"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "188"], ["188", "189"], ["190", "191"], ["190", "192"], ["190", "193"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["204", "216"], ["204", "226"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["216", "217"], ["216", "223"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["219", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "235"], ["227", "228"], ["227", "234"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["230", "233"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "242"], ["240", "281"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["257", "258"], ["257", "268"], ["257", "274"], ["258", "259"], ["258", "267"], ["259", "260"], ["259", "266"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["262", "265"], ["268", "269"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["274", "275"], ["275", "276"], ["276", "277"], ["276", "278"], ["278", "279"], ["278", "280"], ["281", "282"], ["282", "283"], ["283", "284"], ["283", "285"], ["286", "287"], ["26", "32"], ["29", "35"], ["33", "36"], ["36", "40"], ["38", "45"], ["43", "50"], ["48", "55"], ["53", "60"], ["58", "65"], ["63", "69"], ["67", "70"], ["70", "73"], ["100", "106"], ["104", "110"], ["186", "190"], ["190", "196"], ["286", "290"], ["28", "26"], ["30", "29"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["69", "67"], ["73", "76"], ["76", "83"], ["76", "100"], ["79", "76"], ["106", "104"], ["110", "113"], ["113", "124"], ["113", "188"], ["116", "113"], ["188", "186"], ["196", "199"], ["199", "241"], ["199", "207"], ["202", "199"], ["241", "243"], ["241", "283"], ["32", "30"], ["82", "88"], ["87", "95"], ["93", "79"], ["216", "230"], ["243", "248"], ["83", "82"], ["88", "91"], ["91", "87"], ["95", "93"], ["120", "131"], ["120", "157"], ["153", "164"], ["153", "116"], ["206", "212"], ["206", "219"], ["217", "223"], ["223", "216"], ["227", "236"], ["227", "202"], ["248", "251"], ["251", "262"], ["251", "286"], ["254", "251"], ["283", "286"], ["122", "120"], ["128", "148"], ["147", "157"], ["155", "153"], ["161", "181"], ["180", "116"], ["207", "206"], ["212", "241"], ["219", "217"], ["228", "227"], ["236", "241"], ["124", "122"], ["129", "143"], ["135", "128"], ["148", "147"], ["157", "155"], ["162", "176"], ["168", "161"], ["181", "180"], ["230", "228"], ["258", "271"], ["258", "278"], ["131", "129"], ["137", "135"], ["164", "162"], ["170", "168"], ["259", "258"], ["269", "254"], ["139", "137"], ["172", "170"], ["260", "259"], ["271", "269"], ["276", "254"], ["141", "139"], ["174", "172"], ["262", "260"], ["278", "276"], ["143", "141"], ["176", "174"], ["23", "28"], ["24", "290"], ["26", "290"], ["29", "290"], ["29", "290"], ["33", "290"], ["36", "290"], ["38", "290"], ["43", "290"], ["43", "290"], ["48", "290"], ["50", "290"], ["48", "290"], ["48", "290"], ["53", "290"], ["53", "290"], ["58", "290"], ["58", "290"], ["63", "290"], ["63", "290"], ["67", "290"], ["70", "290"], ["70", "290"], ["100", "290"], ["100", "290"], ["104", "290"], ["104", "290"], ["104", "290"], ["186", "290"], ["186", "290"], ["190", "290"], ["190", "290"], ["196", "290"], ["199", "290"], ["199", "290"], ["199", "290"], ["206", "290"], ["206", "290"], ["216", "290"], ["230", "290"], ["230", "290"], ["230", "290"], ["227", "290"], ["227", "290"], ["202", "290"], ["236", "290"], ["236", "290"], ["212", "290"], ["212", "290"], ["283", "290"], ["243", "290"], ["248", "290"], ["251", "290"], ["251", "290"], ["251", "290"], ["286", "290"], ["286", "290"], ["262", "290"], ["262", "290"], ["259", "290"], ["258", "290"], ["258", "290"], ["276", "290"], ["276", "290"], ["269", "290"], ["269", "290"], ["254", "290"], ["122", "290"], ["120", "290"], ["120", "290"], ["128", "290"], ["137", "290"], ["141", "290"], ["139", "290"], ["137", "290"], ["137", "290"], ["128", "290"], ["128", "290"], ["147", "290"], ["153", "290"], ["155", "290"], ["155", "290"], ["153", "290"], ["153", "290"], ["161", "290"], ["170", "290"], ["172", "290"], ["174", "290"], ["174", "290"], ["172", "290"], ["170", "290"], ["170", "290"], ["161", "290"], ["161", "290"], ["180", "290"], ["116", "290"], ["82", "290"], ["82", "290"], ["91", "290"], ["87", "290"], ["87", "290"], ["93", "290"], ["93", "290"], ["93", "290"], ["79", "290"], ["190", "290"], ["23", "24"], ["23", "26"], ["23", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["23", "67"], ["23", "100"], ["106", "104"], ["188", "186"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["67", "70"], ["23", "70"], ["23", "73"], ["23", "110"], ["23", "190"], ["186", "190"], ["23", "196"], ["23", "241"], ["283", "286"], ["243", "286"], ["276", "286"], ["269", "286"], ["23", "286"], ["36", "40"], ["23", "40"], ["40", "45"], ["23", "45"], ["45", "50"], ["23", "50"], ["38", "55"], ["23", "55"], ["55", "60"], ["23", "60"], ["60", "65"], ["23", "65"], ["73", "76"], ["79", "76"], ["23", "76"], ["65", "76"], ["93", "79"], ["23", "79"], ["76", "82"], ["23", "82"], ["91", "87"], ["76", "106"], ["23", "106"], ["110", "113"], ["116", "113"], ["23", "113"], ["106", "113"], ["113", "116"], ["131", "116"], ["164", "116"], ["23", "116"], ["113", "188"], ["23", "188"], ["196", "199"], ["202", "199"], ["23", "199"], ["188", "199"], ["230", "202"], ["23", "202"], ["63", "216"], ["206", "216"], ["70", "93"], ["23", "93"], ["53", "93"], ["87", "93"], ["76", "93"], ["190", "216"], ["227", "216"], ["29", "243"], ["23", "243"], ["23", "248"], ["50", "91"], ["23", "91"], ["70", "120"], ["153", "120"], ["172", "120"], ["93", "120"], ["23", "120"], ["122", "120"], ["122", "120"], ["137", "128"], ["23", "147"], ["120", "153"], ["139", "153"], ["23", "153"], ["155", "153"], ["155", "153"], ["170", "161"], ["23", "180"], ["63", "206"], ["147", "206"], ["180", "206"], ["23", "206"], ["23", "212"], ["190", "227"], ["216", "227"], ["23", "227"], ["23", "236"], ["248", "251"], ["254", "251"], ["23", "251"], ["199", "251"], ["262", "254"], ["23", "254"], ["29", "283"], ["23", "283"], ["43", "122"], ["141", "122"], ["23", "122"], ["53", "122"], ["155", "122"], ["174", "122"], ["93", "122"], ["63", "147"], ["180", "147"], ["48", "155"], ["174", "155"], ["23", "155"], ["53", "155"], ["122", "155"], ["141", "155"], ["63", "180"], ["147", "180"], ["230", "219"], ["137", "219"], ["170", "219"], ["23", "219"], ["199", "219"], ["58", "219"], ["230", "219"], ["128", "219"], ["137", "219"], ["161", "219"], ["170", "219"], ["82", "219"], ["219", "230"], ["23", "230"], ["219", "230"], ["219", "230"], ["128", "230"], ["161", "230"], ["82", "230"], ["137", "230"], ["170", "230"], ["259", "258"], ["259", "258"], ["23", "258"], ["137", "131"], ["170", "131"], ["23", "131"], ["113", "131"], ["58", "131"], ["128", "131"], ["137", "131"], ["161", "131"], ["170", "131"], ["82", "131"], ["131", "137"], ["23", "137"], ["139", "137"], ["139", "137"], ["131", "137"], ["128", "137"], ["161", "137"], ["82", "137"], ["170", "137"], ["137", "164"], ["170", "164"], ["23", "164"], ["113", "164"], ["131", "164"], ["58", "164"], ["128", "164"], ["137", "164"], ["161", "164"], ["170", "164"], ["82", "164"], ["164", "170"], ["23", "170"], ["172", "170"], ["172", "170"], ["128", "170"], ["164", "170"], ["161", "170"], ["82", "170"], ["137", "170"], ["190", "259"], ["227", "259"], ["23", "259"], ["243", "269"], ["276", "269"], ["23", "269"], ["120", "139"], ["23", "139"], ["141", "139"], ["141", "139"], ["153", "172"], ["23", "172"], ["174", "172"], ["174", "172"], ["23", "271"], ["243", "276"], ["269", "276"], ["23", "276"], ["122", "141"], ["23", "141"], ["53", "141"], ["122", "141"], ["155", "174"], ["23", "174"], ["53", "174"], ["155", "174"], ["230", "262"], ["137", "262"], ["170", "262"], ["23", "262"], ["251", "262"], ["58", "262"], ["230", "262"], ["128", "262"], ["137", "262"], ["161", "262"], ["170", "262"], ["82", "262"], ["23", "278"], ["76", "95"], ["76", "76"], ["76", "87"], ["76", "91"], ["76", "93"], ["76", "79"], ["76", "88"], ["76", "82"], ["76", "83"], ["113", "120"], ["113", "113"], ["113", "153"], ["113", "155"], ["113", "116"], ["113", "122"], ["113", "157"], ["113", "124"], ["199", "206"], ["199", "207"], ["241", "283"], ["241", "243"], ["241", "251"], ["241", "248"], ["120", "128"], ["120", "131"], ["120", "129"], ["120", "148"], ["120", "137"], ["120", "139"], ["120", "141"], ["120", "143"], ["120", "147"], ["120", "135"], ["153", "161"], ["153", "162"], ["153", "168"], ["153", "170"], ["153", "181"], ["153", "174"], ["153", "164"], ["153", "180"], ["153", "176"], ["153", "172"], ["206", "230"], ["206", "228"], ["206", "223"], ["206", "212"], ["206", "217"], ["206", "216"], ["206", "227"], ["206", "219"], ["227", "202"], ["227", "236"], ["227", "199"], ["251", "262"], ["251", "259"], ["251", "258"], ["251", "260"], ["251", "251"], ["251", "254"], ["258", "276"], ["258", "278"], ["258", "271"], ["258", "269"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "6": "<(LOCAL,Scanner in: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,in,ANY in = new Scanner())<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new Scanner())<SUB>4</SUB>>", "37": "<(LOCAL,int n: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>6</SUB>>", "45": "<(nextInt,nextInt())<SUB>6</SUB>>", "47": "<(LOCAL,int b: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,b,int b = nextInt())<SUB>7</SUB>>", "51": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[] data = new int[n])<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[n])>", "57": "<(LOCAL,int[] u: int[])<SUB>9</SUB>>", "59": "<(IDENTIFIER,u,int[] u = new int[n])<SUB>9</SUB>>", "61": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] s = new int[n])<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[n])>", "8": "<(LOCAL,HashMap&lt;Integer, Integer&gt; map: ANY)<SUB>11</SUB>>", "68": "<(IDENTIFIER,map,ANY map = new HashMap())<SUB>11</SUB>>", "70": "<(&lt;init&gt;,new HashMap())<SUB>11</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,u[i])<SUB>14</SUB>>", "85": "<(IDENTIFIER,i,u[i] = i)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,data[i] = nextInt())<SUB>15</SUB>>", "89": "<(IDENTIFIER,data,data[i] = nextInt())<SUB>15</SUB>>", "91": "<(nextInt,nextInt())<SUB>15</SUB>>", "93": "<(put,put(data[i], i))<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>16</SUB>>", "97": "<(IDENTIFIER,i,put(data[i], i))<SUB>16</SUB>>", "99": "<(LOCAL,boolean ok: boolean)<SUB>18</SUB>>", "101": "<(IDENTIFIER,ok,boolean ok = true)<SUB>18</SUB>>", "103": "<(LOCAL,boolean[] check: boolean[])<SUB>19</SUB>>", "105": "<(IDENTIFIER,check,boolean[] check = new boolean[n])<SUB>19</SUB>>", "107": "<(IDENTIFIER,n,new boolean[n])<SUB>19</SUB>>", "109": "<(LOCAL,int i: int)<SUB>20</SUB>>", "111": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "115": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "117": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "119": "<(CONTROL_STRUCTURE,if (map.containsKey(a - data[i])),if (map.containsKey(a - data[i])))<SUB>21</SUB>>", "121": "<(IDENTIFIER,map,containsKey(a - data[i]))<SUB>21</SUB>>", "123": "<(IDENTIFIER,a,a - data[i])<SUB>21</SUB>>", "125": "<(IDENTIFIER,data,a - data[i])<SUB>21</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,u[find(i, u)])<SUB>22</SUB>>", "131": "<(find,find(i, u))<SUB>22</SUB>>", "133": "<(IDENTIFIER,i,find(i, u))<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,u[find(map.get(a - data[i]), u)])<SUB>22</SUB>>", "137": "<(find,find(map.get(a - data[i]), u))<SUB>22</SUB>>", "139": "<(get,get(a - data[i]))<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.subtraction,a - data[i])<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>22</SUB>>", "145": "<(IDENTIFIER,i,a - data[i])<SUB>22</SUB>>", "147": "<(&lt;operators&gt;.assignmentOr,s[i] |= 1)<SUB>23</SUB>>", "149": "<(IDENTIFIER,s,s[i] |= 1)<SUB>23</SUB>>", "151": "<(LITERAL,1,s[i] |= 1)<SUB>23</SUB>>", "153": "<(containsKey,containsKey(b - data[i]))<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.subtraction,b - data[i])<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>25</SUB>>", "159": "<(IDENTIFIER,i,b - data[i])<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.assignment,u[find(i, u)] = u[find(map.get(b - data[i]), u)])<SUB>26</SUB>>", "163": "<(IDENTIFIER,u,u[find(i, u)] = u[find(map.get(b - data[i]), u)])<SUB>26</SUB>>", "165": "<(IDENTIFIER,this,find(i, u))<SUB>26</SUB>>", "167": "<(IDENTIFIER,u,find(i, u))<SUB>26</SUB>>", "169": "<(IDENTIFIER,u,u[find(i, u)] = u[find(map.get(b - data[i]), u)])<SUB>26</SUB>>", "171": "<(IDENTIFIER,this,find(map.get(b - data[i]), u))<SUB>26</SUB>>", "173": "<(IDENTIFIER,map,get(b - data[i]))<SUB>26</SUB>>", "175": "<(IDENTIFIER,b,b - data[i])<SUB>26</SUB>>", "177": "<(IDENTIFIER,data,b - data[i])<SUB>26</SUB>>", "179": "<(IDENTIFIER,u,find(map.get(b - data[i]), u))<SUB>26</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>27</SUB>>", "183": "<(IDENTIFIER,i,s[i] |= 2)<SUB>27</SUB>>", "185": "<(LOCAL,int[] g: int[])<SUB>31</SUB>>", "187": "<(IDENTIFIER,g,int[] g = new int[n])<SUB>31</SUB>>", "189": "<(IDENTIFIER,n,new int[n])<SUB>31</SUB>>", "191": "<(IDENTIFIER,Arrays,fill(g, 3))<SUB>32</SUB>>", "193": "<(LITERAL,3,fill(g, 3))<SUB>32</SUB>>", "195": "<(LOCAL,int i: int)<SUB>33</SUB>>", "197": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "199": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "201": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "203": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "205": "<(CONTROL_STRUCTURE,if (s[i] == 0),if (s[i] == 0))<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>34</SUB>>", "209": "<(IDENTIFIER,i,s[i] == 0)<SUB>34</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "213": "<(IDENTIFIER,ok,ok = false)<SUB>35</SUB>>", "215": "<(CONTROL_STRUCTURE,break;,break;)<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,g[find(i, u)])<SUB>38</SUB>>", "219": "<(find,find(i, u))<SUB>38</SUB>>", "221": "<(IDENTIFIER,i,find(i, u))<SUB>38</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>38</SUB>>", "225": "<(IDENTIFIER,i,g[find(i, u)] &amp;= s[i])<SUB>38</SUB>>", "227": "<(&lt;operator&gt;.equals,g[find(i, u)] == 0)<SUB>39</SUB>>", "229": "<(IDENTIFIER,g,g[find(i, u)] == 0)<SUB>39</SUB>>", "231": "<(IDENTIFIER,this,find(i, u))<SUB>39</SUB>>", "233": "<(IDENTIFIER,u,find(i, u))<SUB>39</SUB>>", "235": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "237": "<(IDENTIFIER,ok,ok = false)<SUB>40</SUB>>", "239": "<(CONTROL_STRUCTURE,break;,break;)<SUB>41</SUB>>", "241": "<(IDENTIFIER,ok,if (ok))<SUB>45</SUB>>", "243": "<(println,println(&quot;YES&quot;))<SUB>46</SUB>>", "245": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>46</SUB>>", "247": "<(LOCAL,int i: int)<SUB>47</SUB>>", "249": "<(IDENTIFIER,i,int i = 0)<SUB>47</SUB>>", "251": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>47</SUB>>", "253": "<(IDENTIFIER,n,i &lt; n)<SUB>47</SUB>>", "255": "<(IDENTIFIER,i,i++)<SUB>47</SUB>>", "257": "<(CONTROL_STRUCTURE,if ((g[find(i, u)] &amp; 1) == 0),if ((g[find(i, u)] &amp; 1) == 0))<SUB>48</SUB>>", "259": "<(&lt;operator&gt;.and,g[find(i, u)] &amp; 1)<SUB>48</SUB>>", "261": "<(IDENTIFIER,g,g[find(i, u)] &amp; 1)<SUB>48</SUB>>", "263": "<(IDENTIFIER,this,find(i, u))<SUB>48</SUB>>", "265": "<(IDENTIFIER,u,find(i, u))<SUB>48</SUB>>", "267": "<(LITERAL,0,(g[find(i, u)] &amp; 1) == 0)<SUB>48</SUB>>", "269": "<(print,print(1 + &quot; &quot;))<SUB>49</SUB>>", "271": "<(&lt;operator&gt;.addition,1 + &quot; &quot;)<SUB>49</SUB>>", "273": "<(LITERAL,&quot; &quot;,1 + &quot; &quot;)<SUB>49</SUB>>", "275": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "277": "<(IDENTIFIER,out,print(0 + &quot; &quot;))<SUB>51</SUB>>", "279": "<(LITERAL,0,0 + &quot; &quot;)<SUB>51</SUB>>", "281": "<(CONTROL_STRUCTURE,else,else)<SUB>54</SUB>>", "283": "<(println,println(&quot;NO&quot;))<SUB>55</SUB>>", "285": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>55</SUB>>", "287": "<(IDENTIFIER,out,close())<SUB>58</SUB>>", "289": "<(MODIFIER,STATIC)>"}}