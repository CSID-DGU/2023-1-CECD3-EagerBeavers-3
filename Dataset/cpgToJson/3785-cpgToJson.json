{"edges": [["21", "22"], ["21", "23"], ["21", "402"], ["21", "403"], ["21", "404"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "39"], ["23", "400"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "44"], ["40", "41"], ["40", "43"], ["41", "42"], ["44", "45"], ["44", "46"], ["44", "50"], ["44", "51"], ["44", "55"], ["44", "56"], ["44", "60"], ["44", "61"], ["44", "68"], ["44", "98"], ["44", "99"], ["44", "106"], ["44", "136"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "114"], ["106", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["136", "137"], ["136", "142"], ["136", "368"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["142", "156"], ["142", "333"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "150"], ["146", "153"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "164"], ["156", "167"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "176"], ["168", "178"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["179", "180"], ["179", "181"], ["179", "184"], ["179", "187"], ["179", "189"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "191"], ["189", "196"], ["189", "227"], ["189", "258"], ["189", "291"], ["189", "324"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["205", "208"], ["208", "209"], ["208", "220"], ["209", "210"], ["209", "217"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["236", "239"], ["239", "240"], ["239", "251"], ["240", "241"], ["240", "248"], ["241", "242"], ["241", "247"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["264", "265"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["267", "270"], ["270", "271"], ["270", "282"], ["271", "272"], ["271", "279"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "297"], ["292", "293"], ["292", "296"], ["293", "294"], ["293", "295"], ["297", "298"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["300", "303"], ["303", "304"], ["303", "315"], ["304", "305"], ["304", "312"], ["305", "306"], ["305", "311"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "320"], ["320", "321"], ["320", "322"], ["324", "325"], ["324", "332"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "330"], ["327", "328"], ["327", "329"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "341"], ["333", "343"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["341", "342"], ["343", "344"], ["343", "366"], ["344", "345"], ["344", "346"], ["344", "349"], ["344", "352"], ["344", "354"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "351"], ["352", "353"], ["354", "355"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "365"], ["358", "359"], ["358", "364"], ["359", "360"], ["359", "363"], ["360", "361"], ["360", "362"], ["366", "367"], ["368", "369"], ["369", "370"], ["370", "371"], ["370", "372"], ["370", "375"], ["370", "378"], ["370", "380"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "377"], ["378", "379"], ["380", "381"], ["380", "398"], ["381", "382"], ["381", "383"], ["381", "386"], ["381", "389"], ["381", "391"], ["383", "384"], ["383", "385"], ["386", "387"], ["386", "388"], ["389", "390"], ["391", "392"], ["392", "393"], ["392", "394"], ["394", "395"], ["394", "397"], ["395", "396"], ["398", "399"], ["400", "401"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "36"], ["36", "41"], ["400", "404"], ["26", "24"], ["30", "28"], ["32", "31"], ["40", "48"], ["40", "400"], ["34", "32"], ["41", "40"], ["46", "53"], ["51", "58"], ["56", "64"], ["61", "70"], ["99", "108"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "61"], ["70", "73"], ["73", "81"], ["73", "103"], ["76", "73"], ["101", "99"], ["108", "111"], ["111", "119"], ["111", "138"], ["114", "111"], ["137", "147"], ["137", "372"], ["64", "63"], ["103", "101"], ["138", "137"], ["144", "158"], ["81", "84"], ["84", "92"], ["84", "76"], ["87", "84"], ["119", "122"], ["122", "130"], ["122", "114"], ["125", "122"], ["146", "144"], ["158", "161"], ["161", "170"], ["161", "335"], ["164", "161"], ["335", "338"], ["338", "41"], ["338", "346"], ["341", "338"], ["90", "87"], ["128", "125"], ["147", "150"], ["150", "153"], ["153", "146"], ["366", "341"], ["372", "375"], ["375", "41"], ["375", "383"], ["378", "375"], ["91", "96"], ["96", "90"], ["129", "134"], ["134", "128"], ["170", "173"], ["173", "181"], ["173", "164"], ["176", "173"], ["346", "349"], ["349", "360"], ["349", "366"], ["352", "349"], ["398", "378"], ["92", "91"], ["130", "129"], ["355", "352"], ["383", "386"], ["386", "395"], ["386", "398"], ["389", "386"], ["181", "184"], ["184", "195"], ["184", "176"], ["187", "184"], ["357", "355"], ["392", "389"], ["191", "198"], ["324", "187"], ["358", "357"], ["394", "392"], ["193", "191"], ["197", "211"], ["197", "229"], ["228", "244"], ["228", "260"], ["259", "273"], ["259", "293"], ["292", "308"], ["292", "327"], ["325", "324"], ["359", "358"], ["395", "394"], ["195", "193"], ["198", "197"], ["203", "229"], ["229", "228"], ["234", "260"], ["260", "259"], ["265", "293"], ["293", "292"], ["298", "327"], ["326", "325"], ["360", "359"], ["205", "203"], ["236", "234"], ["267", "265"], ["300", "298"], ["327", "326"], ["208", "205"], ["239", "236"], ["270", "267"], ["303", "300"], ["209", "223"], ["220", "208"], ["240", "254"], ["251", "239"], ["271", "285"], ["282", "270"], ["304", "320"], ["315", "303"], ["210", "217"], ["217", "209"], ["222", "220"], ["241", "248"], ["248", "240"], ["253", "251"], ["272", "279"], ["279", "271"], ["284", "282"], ["305", "312"], ["312", "304"], ["317", "315"], ["211", "214"], ["214", "210"], ["223", "222"], ["242", "241"], ["254", "253"], ["273", "276"], ["276", "272"], ["285", "288"], ["288", "284"], ["306", "305"], ["318", "317"], ["244", "242"], ["308", "306"], ["320", "318"], ["21", "26"], ["22", "404"], ["24", "404"], ["27", "404"], ["27", "404"], ["28", "404"], ["31", "404"], ["31", "404"], ["36", "404"], ["41", "404"], ["40", "404"], ["40", "404"], ["400", "404"], ["400", "404"], ["46", "404"], ["51", "404"], ["58", "404"], ["56", "404"], ["56", "404"], ["61", "404"], ["63", "404"], ["61", "404"], ["61", "404"], ["99", "404"], ["103", "404"], ["101", "404"], ["99", "404"], ["99", "404"], ["111", "404"], ["138", "404"], ["137", "404"], ["137", "404"], ["372", "404"], ["375", "404"], ["375", "404"], ["375", "404"], ["383", "404"], ["386", "404"], ["386", "404"], ["386", "404"], ["398", "404"], ["378", "404"], ["394", "404"], ["392", "404"], ["392", "404"], ["389", "404"], ["144", "404"], ["146", "404"], ["150", "404"], ["146", "404"], ["146", "404"], ["144", "404"], ["144", "404"], ["158", "404"], ["161", "404"], ["161", "404"], ["161", "404"], ["335", "404"], ["338", "404"], ["338", "404"], ["338", "404"], ["346", "404"], ["349", "404"], ["349", "404"], ["349", "404"], ["366", "404"], ["341", "404"], ["357", "404"], ["355", "404"], ["355", "404"], ["352", "404"], ["164", "404"], ["181", "404"], ["184", "404"], ["184", "404"], ["184", "404"], ["176", "404"], ["191", "404"], ["191", "404"], ["197", "404"], ["197", "404"], ["205", "404"], ["208", "404"], ["220", "404"], ["208", "404"], ["205", "404"], ["203", "404"], ["203", "404"], ["228", "404"], ["228", "404"], ["236", "404"], ["239", "404"], ["251", "404"], ["239", "404"], ["236", "404"], ["234", "404"], ["234", "404"], ["259", "404"], ["259", "404"], ["267", "404"], ["270", "404"], ["282", "404"], ["270", "404"], ["267", "404"], ["265", "404"], ["265", "404"], ["292", "404"], ["292", "404"], ["300", "404"], ["303", "404"], ["315", "404"], ["303", "404"], ["300", "404"], ["298", "404"], ["298", "404"], ["324", "404"], ["324", "404"], ["324", "404"], ["187", "404"], ["119", "404"], ["122", "404"], ["122", "404"], ["122", "404"], ["114", "404"], ["128", "404"], ["134", "404"], ["128", "404"], ["128", "404"], ["125", "404"], ["81", "404"], ["84", "404"], ["84", "404"], ["76", "404"], ["90", "404"], ["96", "404"], ["90", "404"], ["90", "404"], ["87", "404"], ["21", "22"], ["21", "24"], ["21", "28"], ["21", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "400"], ["398", "400"], ["366", "400"], ["21", "400"], ["41", "40"], ["21", "40"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "61"], ["63", "61"], ["101", "99"], ["101", "99"], ["36", "41"], ["21", "41"], ["21", "70"], ["21", "108"], ["27", "48"], ["58", "48"], ["134", "48"], ["96", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["53", "58"], ["21", "58"], ["46", "63"], ["21", "63"], ["51", "63"], ["70", "73"], ["76", "73"], ["21", "73"], ["46", "73"], ["73", "76"], ["21", "76"], ["73", "101"], ["21", "101"], ["63", "101"], ["84", "101"], ["108", "111"], ["114", "111"], ["21", "111"], ["101", "111"], ["111", "114"], ["21", "114"], ["138", "137"], ["138", "137"], ["21", "137"], ["146", "144"], ["146", "144"], ["146", "144"], ["46", "64"], ["21", "64"], ["21", "81"], ["63", "103"], ["84", "103"], ["21", "103"], ["21", "119"], ["56", "138"], ["21", "138"], ["21", "158"], ["21", "164"], ["21", "335"], ["81", "84"], ["87", "84"], ["21", "84"], ["63", "84"], ["84", "87"], ["21", "87"], ["96", "90"], ["119", "122"], ["125", "122"], ["21", "122"], ["63", "122"], ["84", "122"], ["122", "125"], ["21", "125"], ["134", "128"], ["111", "146"], ["21", "146"], ["122", "146"], ["63", "146"], ["84", "146"], ["138", "146"], ["158", "161"], ["164", "161"], ["21", "161"], ["138", "161"], ["161", "164"], ["217", "164"], ["248", "164"], ["279", "164"], ["312", "164"], ["335", "338"], ["341", "338"], ["21", "338"], ["173", "338"], ["111", "338"], ["338", "341"], ["21", "341"], ["21", "372"], ["111", "147"], ["21", "147"], ["122", "150"], ["21", "150"], ["63", "150"], ["84", "150"], ["138", "153"], ["21", "153"], ["21", "170"], ["21", "346"], ["31", "366"], ["398", "366"], ["355", "366"], ["21", "366"], ["372", "375"], ["378", "375"], ["21", "375"], ["111", "375"], ["375", "378"], ["21", "378"], ["58", "96"], ["21", "96"], ["58", "134"], ["96", "134"], ["21", "134"], ["170", "173"], ["176", "173"], ["21", "173"], ["228", "173"], ["111", "173"], ["173", "176"], ["293", "176"], ["320", "176"], ["21", "176"], ["346", "349"], ["352", "349"], ["21", "349"], ["184", "349"], ["122", "349"], ["63", "349"], ["84", "349"], ["349", "352"], ["21", "352"], ["21", "383"], ["31", "398"], ["392", "398"], ["366", "398"], ["21", "398"], ["21", "181"], ["31", "355"], ["398", "355"], ["366", "355"], ["21", "355"], ["383", "386"], ["389", "386"], ["21", "386"], ["122", "386"], ["63", "386"], ["84", "386"], ["386", "389"], ["21", "389"], ["181", "184"], ["187", "184"], ["21", "184"], ["197", "184"], ["122", "184"], ["63", "184"], ["84", "184"], ["260", "187"], ["288", "187"], ["21", "187"], ["191", "324"], ["203", "324"], ["234", "324"], ["265", "324"], ["298", "324"], ["21", "324"], ["21", "357"], ["31", "392"], ["398", "392"], ["366", "392"], ["21", "392"], ["395", "392"], ["395", "394"], ["21", "394"], ["184", "197"], ["21", "197"], ["184", "197"], ["205", "203"], ["205", "203"], ["205", "203"], ["173", "228"], ["293", "228"], ["320", "228"], ["21", "228"], ["173", "228"], ["236", "234"], ["236", "234"], ["236", "234"], ["260", "259"], ["260", "259"], ["21", "259"], ["267", "265"], ["267", "265"], ["267", "265"], ["293", "292"], ["293", "292"], ["21", "292"], ["300", "298"], ["300", "298"], ["300", "298"], ["21", "395"], ["184", "198"], ["21", "198"], ["173", "229"], ["293", "229"], ["320", "229"], ["21", "229"], ["21", "260"], ["184", "260"], ["21", "293"], ["173", "293"], ["320", "293"], ["236", "205"], ["267", "205"], ["300", "205"], ["21", "205"], ["191", "205"], ["220", "205"], ["220", "205"], ["205", "236"], ["267", "236"], ["300", "236"], ["21", "236"], ["191", "236"], ["203", "236"], ["251", "236"], ["251", "236"], ["205", "267"], ["236", "267"], ["300", "267"], ["21", "267"], ["191", "267"], ["203", "267"], ["234", "267"], ["282", "267"], ["282", "267"], ["205", "300"], ["236", "300"], ["267", "300"], ["21", "300"], ["191", "300"], ["203", "300"], ["234", "300"], ["265", "300"], ["315", "300"], ["315", "300"], ["220", "208"], ["220", "208"], ["251", "239"], ["251", "239"], ["282", "270"], ["282", "270"], ["315", "303"], ["315", "303"], ["21", "220"], ["90", "220"], ["21", "251"], ["128", "251"], ["21", "282"], ["21", "315"], ["161", "217"], ["248", "217"], ["279", "217"], ["312", "217"], ["21", "217"], ["161", "248"], ["217", "248"], ["279", "248"], ["312", "248"], ["21", "248"], ["161", "279"], ["217", "279"], ["248", "279"], ["312", "279"], ["21", "279"], ["161", "312"], ["217", "312"], ["248", "312"], ["279", "312"], ["21", "312"], ["21", "214"], ["184", "214"], ["260", "276"], ["21", "276"], ["276", "288"], ["21", "288"], ["21", "244"], ["173", "244"], ["293", "244"], ["320", "244"], ["293", "308"], ["21", "308"], ["308", "320"], ["21", "320"], ["40", "40"], ["40", "138"], ["40", "61"], ["40", "70"], ["40", "108"], ["40", "48"], ["40", "53"], ["40", "41"], ["40", "73"], ["40", "64"], ["40", "51"], ["40", "103"], ["40", "56"], ["40", "101"], ["40", "137"], ["40", "58"], ["40", "111"], ["40", "99"], ["40", "46"], ["40", "63"], ["73", "84"], ["73", "76"], ["73", "73"], ["73", "81"], ["111", "114"], ["111", "122"], ["111", "119"], ["111", "111"], ["137", "146"], ["137", "161"], ["137", "150"], ["137", "338"], ["137", "158"], ["137", "372"], ["137", "147"], ["137", "335"], ["137", "153"], ["137", "144"], ["137", "375"], ["84", "84"], ["84", "96"], ["84", "92"], ["84", "87"], ["84", "91"], ["84", "90"], ["122", "128"], ["122", "129"], ["122", "134"], ["122", "122"], ["122", "130"], ["122", "125"], ["161", "161"], ["161", "170"], ["161", "173"], ["161", "164"], ["338", "338"], ["338", "349"], ["338", "346"], ["338", "366"], ["338", "341"], ["375", "383"], ["375", "378"], ["375", "386"], ["375", "375"], ["375", "398"], ["173", "181"], ["173", "184"], ["173", "176"], ["173", "173"], ["349", "358"], ["349", "349"], ["349", "355"], ["349", "357"], ["349", "360"], ["349", "352"], ["349", "359"], ["386", "392"], ["386", "394"], ["386", "389"], ["386", "386"], ["386", "395"], ["184", "292"], ["184", "326"], ["184", "228"], ["184", "195"], ["184", "184"], ["184", "324"], ["184", "260"], ["184", "229"], ["184", "197"], ["184", "198"], ["184", "191"], ["184", "187"], ["184", "259"], ["184", "293"], ["184", "325"], ["184", "327"], ["184", "193"], ["197", "214"], ["197", "209"], ["197", "208"], ["197", "217"], ["197", "222"], ["197", "223"], ["197", "205"], ["197", "210"], ["197", "220"], ["197", "211"], ["197", "203"], ["228", "240"], ["228", "242"], ["228", "236"], ["228", "253"], ["228", "254"], ["228", "241"], ["228", "244"], ["228", "239"], ["228", "251"], ["228", "234"], ["228", "248"], ["259", "272"], ["259", "288"], ["259", "276"], ["259", "282"], ["259", "273"], ["259", "279"], ["259", "284"], ["259", "285"], ["259", "267"], ["259", "265"], ["259", "270"], ["259", "271"], ["292", "308"], ["292", "317"], ["292", "298"], ["292", "300"], ["292", "306"], ["292", "315"], ["292", "304"], ["292", "305"], ["292", "320"], ["292", "318"], ["292", "303"], ["292", "312"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new FastReader())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new FastReader())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,int T: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,T,int T = 1)<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.postDecrement,T--)<SUB>6</SUB>>", "43": "<(LITERAL,0,T-- &gt; 0)<SUB>6</SUB>>", "45": "<(LOCAL,int n: int)<SUB>8</SUB>>", "47": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "49": "<(IDENTIFIER,input,nextInt())<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>9</SUB>>", "53": "<(nextInt,nextInt())<SUB>9</SUB>>", "55": "<(LOCAL,int k: int)<SUB>10</SUB>>", "57": "<(IDENTIFIER,k,int k = nextInt())<SUB>10</SUB>>", "59": "<(IDENTIFIER,input,nextInt())<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[][] arr1 = new int[n + 1][m])<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n + 1][m])>", "65": "<(IDENTIFIER,n,n + 1)<SUB>11</SUB>>", "67": "<(IDENTIFIER,m,new int[n + 1][m])<SUB>11</SUB>>", "69": "<(LOCAL,int i: int)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>12</SUB>>", "75": "<(IDENTIFIER,n,i &lt;= n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; m); j++),for (int j = 1; Some(j &lt; m); j++))<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>14</SUB>>", "83": "<(LITERAL,1,int j = 1)<SUB>14</SUB>>", "85": "<(IDENTIFIER,j,j &lt; m)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,arr1[i][j])<SUB>16</SUB>>", "93": "<(IDENTIFIER,arr1,arr1[i][j] = nextInt())<SUB>16</SUB>>", "95": "<(IDENTIFIER,j,arr1[i][j] = nextInt())<SUB>16</SUB>>", "97": "<(IDENTIFIER,input,nextInt())<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,int[][] arr2 = new int[n][m + 1])<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.alloc,new int[n][m + 1])>", "103": "<(&lt;operator&gt;.addition,m + 1)<SUB>19</SUB>>", "105": "<(LITERAL,1,m + 1)<SUB>19</SUB>>", "107": "<(LOCAL,int i: int)<SUB>20</SUB>>", "109": "<(IDENTIFIER,i,int i = 1)<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= m); j++),for (int j = 1; Some(j &lt;= m); j++))<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>22</SUB>>", "121": "<(LITERAL,1,int j = 1)<SUB>22</SUB>>", "123": "<(IDENTIFIER,j,j &lt;= m)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,arr2[i][j])<SUB>24</SUB>>", "131": "<(IDENTIFIER,arr2,arr2[i][j] = nextInt())<SUB>24</SUB>>", "133": "<(IDENTIFIER,j,arr2[i][j] = nextInt())<SUB>24</SUB>>", "135": "<(IDENTIFIER,input,nextInt())<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.equals,k % 2 == 0)<SUB>27</SUB>>", "139": "<(IDENTIFIER,k,k % 2)<SUB>27</SUB>>", "141": "<(LITERAL,0,k % 2 == 0)<SUB>27</SUB>>", "143": "<(LOCAL,int[][][] dp: int[][][])<SUB>29</SUB>>", "145": "<(IDENTIFIER,dp,int[][][] dp = new int[n + 1][m + 1][k + 1])<SUB>29</SUB>>", "147": "<(&lt;operator&gt;.addition,n + 1)<SUB>29</SUB>>", "149": "<(LITERAL,1,n + 1)<SUB>29</SUB>>", "151": "<(IDENTIFIER,m,m + 1)<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.addition,k + 1)<SUB>29</SUB>>", "155": "<(LITERAL,1,k + 1)<SUB>29</SUB>>", "157": "<(LOCAL,int l: int)<SUB>30</SUB>>", "159": "<(IDENTIFIER,l,int l = 2)<SUB>30</SUB>>", "161": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= k)<SUB>30</SUB>>", "163": "<(IDENTIFIER,k,l &lt;= k)<SUB>30</SUB>>", "165": "<(IDENTIFIER,l,l += 2)<SUB>30</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "169": "<(LOCAL,int i: int)<SUB>32</SUB>>", "171": "<(IDENTIFIER,i,int i = 1)<SUB>32</SUB>>", "173": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>32</SUB>>", "175": "<(IDENTIFIER,n,i &lt;= n)<SUB>32</SUB>>", "177": "<(IDENTIFIER,i,i++)<SUB>32</SUB>>", "179": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= m); j++),for (int j = 1; Some(j &lt;= m); j++))<SUB>34</SUB>>", "181": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>34</SUB>>", "183": "<(LITERAL,1,int j = 1)<SUB>34</SUB>>", "185": "<(IDENTIFIER,j,j &lt;= m)<SUB>34</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "191": "<(&lt;operator&gt;.assignment,int min = Integer.MAX_VALUE)<SUB>36</SUB>>", "193": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>36</SUB>>", "195": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>36</SUB>>", "197": "<(&lt;operator&gt;.lessEqualsThan,j + 1 &lt;= m)<SUB>37</SUB>>", "199": "<(IDENTIFIER,j,j + 1)<SUB>37</SUB>>", "201": "<(IDENTIFIER,m,j + 1 &lt;= m)<SUB>37</SUB>>", "203": "<(&lt;operator&gt;.assignment,min = Math.min(min, dp[i][j + 1][l - 2] + 2 * arr1[i][j]))<SUB>39</SUB>>", "205": "<(min,Math.min(min, dp[i][j + 1][l - 2] + 2 * arr1[i][j]))<SUB>39</SUB>>", "207": "<(IDENTIFIER,min,Math.min(min, dp[i][j + 1][l - 2] + 2 * arr1[i][j]))<SUB>39</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,dp[i][j + 1][l - 2])<SUB>39</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>39</SUB>>", "213": "<(IDENTIFIER,i,dp[i][j + 1][l - 2] + 2 * arr1[i][j])<SUB>39</SUB>>", "215": "<(IDENTIFIER,j,j + 1)<SUB>39</SUB>>", "217": "<(&lt;operator&gt;.subtraction,l - 2)<SUB>39</SUB>>", "219": "<(LITERAL,2,l - 2)<SUB>39</SUB>>", "221": "<(LITERAL,2,2 * arr1[i][j])<SUB>39</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,arr1[i])<SUB>39</SUB>>", "225": "<(IDENTIFIER,i,2 * arr1[i][j])<SUB>39</SUB>>", "227": "<(CONTROL_STRUCTURE,if (i + 1 &lt;= n),if (i + 1 &lt;= n))<SUB>41</SUB>>", "229": "<(&lt;operator&gt;.addition,i + 1)<SUB>41</SUB>>", "231": "<(LITERAL,1,i + 1)<SUB>41</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "235": "<(IDENTIFIER,min,min = Math.min(min, dp[i + 1][j][l - 2] + 2 * arr2[i][j]))<SUB>43</SUB>>", "237": "<(IDENTIFIER,Math,Math.min(min, dp[i + 1][j][l - 2] + 2 * arr2[i][j]))<SUB>43</SUB>>", "239": "<(&lt;operator&gt;.addition,dp[i + 1][j][l - 2] + 2 * arr2[i][j])<SUB>43</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>43</SUB>>", "243": "<(IDENTIFIER,dp,dp[i + 1][j][l - 2] + 2 * arr2[i][j])<SUB>43</SUB>>", "245": "<(IDENTIFIER,i,i + 1)<SUB>43</SUB>>", "247": "<(IDENTIFIER,j,dp[i + 1][j][l - 2] + 2 * arr2[i][j])<SUB>43</SUB>>", "249": "<(IDENTIFIER,l,l - 2)<SUB>43</SUB>>", "251": "<(&lt;operator&gt;.multiplication,2 * arr2[i][j])<SUB>43</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,arr2[i][j])<SUB>43</SUB>>", "255": "<(IDENTIFIER,arr2,2 * arr2[i][j])<SUB>43</SUB>>", "257": "<(IDENTIFIER,j,2 * arr2[i][j])<SUB>43</SUB>>", "259": "<(&lt;operator&gt;.greaterEqualsThan,j - 1 &gt;= 1)<SUB>45</SUB>>", "261": "<(IDENTIFIER,j,j - 1)<SUB>45</SUB>>", "263": "<(LITERAL,1,j - 1 &gt;= 1)<SUB>45</SUB>>", "265": "<(&lt;operator&gt;.assignment,min = Math.min(min, dp[i][j - 1][l - 2] + 2 * arr1[i][j - 1]))<SUB>47</SUB>>", "267": "<(min,Math.min(min, dp[i][j - 1][l - 2] + 2 * arr1[i][j - 1]))<SUB>47</SUB>>", "269": "<(IDENTIFIER,min,Math.min(min, dp[i][j - 1][l - 2] + 2 * arr1[i][j - 1]))<SUB>47</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1][l - 2])<SUB>47</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>47</SUB>>", "275": "<(IDENTIFIER,i,dp[i][j - 1][l - 2] + 2 * arr1[i][j - 1])<SUB>47</SUB>>", "277": "<(IDENTIFIER,j,j - 1)<SUB>47</SUB>>", "279": "<(&lt;operator&gt;.subtraction,l - 2)<SUB>47</SUB>>", "281": "<(LITERAL,2,l - 2)<SUB>47</SUB>>", "283": "<(LITERAL,2,2 * arr1[i][j - 1])<SUB>47</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,arr1[i])<SUB>47</SUB>>", "287": "<(IDENTIFIER,i,2 * arr1[i][j - 1])<SUB>47</SUB>>", "289": "<(IDENTIFIER,j,j - 1)<SUB>47</SUB>>", "291": "<(CONTROL_STRUCTURE,if (i - 1 &gt;= 1),if (i - 1 &gt;= 1))<SUB>49</SUB>>", "293": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>49</SUB>>", "295": "<(LITERAL,1,i - 1)<SUB>49</SUB>>", "297": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "299": "<(IDENTIFIER,min,min = Math.min(min, dp[i - 1][j][l - 2] + 2 * arr2[i - 1][j]))<SUB>51</SUB>>", "301": "<(IDENTIFIER,Math,Math.min(min, dp[i - 1][j][l - 2] + 2 * arr2[i - 1][j]))<SUB>51</SUB>>", "303": "<(&lt;operator&gt;.addition,dp[i - 1][j][l - 2] + 2 * arr2[i - 1][j])<SUB>51</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j])<SUB>51</SUB>>", "307": "<(IDENTIFIER,dp,dp[i - 1][j][l - 2] + 2 * arr2[i - 1][j])<SUB>51</SUB>>", "309": "<(IDENTIFIER,i,i - 1)<SUB>51</SUB>>", "311": "<(IDENTIFIER,j,dp[i - 1][j][l - 2] + 2 * arr2[i - 1][j])<SUB>51</SUB>>", "313": "<(IDENTIFIER,l,l - 2)<SUB>51</SUB>>", "315": "<(&lt;operator&gt;.multiplication,2 * arr2[i - 1][j])<SUB>51</SUB>>", "317": "<(&lt;operator&gt;.indexAccess,arr2[i - 1][j])<SUB>51</SUB>>", "319": "<(IDENTIFIER,arr2,2 * arr2[i - 1][j])<SUB>51</SUB>>", "321": "<(IDENTIFIER,i,i - 1)<SUB>51</SUB>>", "323": "<(IDENTIFIER,j,2 * arr2[i - 1][j])<SUB>51</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,dp[i][j][l])<SUB>53</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>53</SUB>>", "329": "<(IDENTIFIER,i,dp[i][j][l] = min)<SUB>53</SUB>>", "331": "<(IDENTIFIER,l,dp[i][j][l] = min)<SUB>53</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>57</SUB>>", "335": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>57</SUB>>", "337": "<(LITERAL,1,int i = 1)<SUB>57</SUB>>", "339": "<(IDENTIFIER,i,i &lt;= n)<SUB>57</SUB>>", "341": "<(&lt;operator&gt;.postIncrement,i++)<SUB>57</SUB>>", "343": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "345": "<(LOCAL,int j: int)<SUB>59</SUB>>", "347": "<(IDENTIFIER,j,int j = 1)<SUB>59</SUB>>", "349": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>59</SUB>>", "351": "<(IDENTIFIER,m,j &lt;= m)<SUB>59</SUB>>", "353": "<(IDENTIFIER,j,j++)<SUB>59</SUB>>", "355": "<(print,print(dp[i][j][k] + &quot; &quot;))<SUB>61</SUB>>", "357": "<(&lt;operator&gt;.addition,dp[i][j][k] + &quot; &quot;)<SUB>61</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>61</SUB>>", "361": "<(IDENTIFIER,dp,dp[i][j][k] + &quot; &quot;)<SUB>61</SUB>>", "363": "<(IDENTIFIER,j,dp[i][j][k] + &quot; &quot;)<SUB>61</SUB>>", "365": "<(LITERAL,&quot; &quot;,dp[i][j][k] + &quot; &quot;)<SUB>61</SUB>>", "367": "<(IDENTIFIER,out,println())<SUB>63</SUB>>", "369": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>67</SUB>>", "371": "<(LOCAL,int i: int)<SUB>68</SUB>>", "373": "<(IDENTIFIER,i,int i = 1)<SUB>68</SUB>>", "375": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>68</SUB>>", "377": "<(IDENTIFIER,n,i &lt;= n)<SUB>68</SUB>>", "379": "<(IDENTIFIER,i,i++)<SUB>68</SUB>>", "381": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= m); j++),for (int j = 1; Some(j &lt;= m); j++))<SUB>70</SUB>>", "383": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>70</SUB>>", "385": "<(LITERAL,1,int j = 1)<SUB>70</SUB>>", "387": "<(IDENTIFIER,j,j &lt;= m)<SUB>70</SUB>>", "389": "<(&lt;operator&gt;.postIncrement,j++)<SUB>70</SUB>>", "391": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>>", "393": "<(IDENTIFIER,out,print(-1 + &quot; &quot;))<SUB>72</SUB>>", "395": "<(&lt;operator&gt;.minus,-1)<SUB>72</SUB>>", "397": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>72</SUB>>", "399": "<(IDENTIFIER,out,println())<SUB>74</SUB>>", "401": "<(IDENTIFIER,out,close())<SUB>78</SUB>>", "403": "<(MODIFIER,STATIC)>"}}