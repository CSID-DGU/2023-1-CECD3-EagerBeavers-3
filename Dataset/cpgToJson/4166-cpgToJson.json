{"edges": [["19", "20"], ["19", "21"], ["19", "220"], ["19", "221"], ["19", "222"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "40"], ["21", "68"], ["21", "69"], ["21", "75"], ["21", "76"], ["21", "81"], ["21", "90"], ["21", "199"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "89"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["90", "91"], ["90", "92"], ["90", "97"], ["90", "100"], ["90", "102"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "109"], ["102", "110"], ["102", "119"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["129", "139"], ["130", "131"], ["130", "138"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["139", "140"], ["139", "141"], ["139", "146"], ["139", "149"], ["139", "151"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["151", "161"], ["151", "180"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["161", "162"], ["161", "169"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "179"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["180", "181"], ["180", "188"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "198"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["199", "200"], ["199", "201"], ["199", "204"], ["199", "207"], ["199", "209"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["69", "78"], ["76", "85"], ["81", "94"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "45"], ["45", "52"], ["45", "72"], ["48", "45"], ["71", "69"], ["78", "76"], ["82", "81"], ["92", "97"], ["97", "106"], ["97", "201"], ["100", "97"], ["201", "204"], ["204", "222"], ["204", "212"], ["207", "204"], ["209", "207"], ["28", "26"], ["52", "55"], ["55", "62"], ["55", "48"], ["58", "55"], ["60", "58"], ["72", "71"], ["84", "82"], ["94", "92"], ["104", "115"], ["110", "121"], ["210", "216"], ["213", "209"], ["61", "66"], ["66", "60"], ["85", "84"], ["106", "104"], ["112", "110"], ["121", "124"], ["124", "133"], ["124", "100"], ["127", "124"], ["212", "210"], ["214", "213"], ["62", "61"], ["113", "112"], ["216", "214"], ["115", "113"], ["131", "127"], ["131", "143"], ["141", "146"], ["146", "155"], ["146", "127"], ["149", "146"], ["132", "131"], ["143", "141"], ["161", "185"], ["180", "149"], ["133", "132"], ["153", "149"], ["153", "166"], ["162", "171"], ["169", "161"], ["181", "190"], ["188", "180"], ["154", "153"], ["164", "162"], ["170", "169"], ["183", "181"], ["189", "188"], ["155", "154"], ["166", "164"], ["171", "175"], ["174", "170"], ["185", "183"], ["190", "194"], ["193", "189"], ["175", "174"], ["194", "193"], ["19", "24"], ["20", "222"], ["22", "222"], ["25", "222"], ["25", "222"], ["32", "222"], ["30", "222"], ["30", "222"], ["35", "222"], ["35", "222"], ["35", "222"], ["69", "222"], ["69", "222"], ["69", "222"], ["76", "222"], ["84", "222"], ["81", "222"], ["81", "222"], ["94", "222"], ["92", "222"], ["92", "222"], ["97", "222"], ["201", "222"], ["204", "222"], ["204", "222"], ["204", "222"], ["207", "222"], ["100", "222"], ["48", "222"], ["106", "222"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["71", "69"], ["78", "76"], ["78", "76"], ["19", "81"], ["22", "25"], ["19", "25"], ["19", "42"], ["94", "92"], ["94", "92"], ["19", "201"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["42", "45"], ["48", "45"], ["19", "45"], ["37", "45"], ["55", "45"], ["45", "48"], ["19", "48"], ["19", "52"], ["66", "60"], ["72", "71"], ["72", "71"], ["19", "78"], ["72", "78"], ["92", "97"], ["100", "97"], ["19", "97"], ["106", "100"], ["133", "100"], ["155", "100"], ["183", "100"], ["19", "100"], ["106", "104"], ["106", "104"], ["112", "110"], ["112", "110"], ["201", "204"], ["207", "204"], ["19", "204"], ["85", "204"], ["124", "204"], ["216", "207"], ["19", "207"], ["69", "209"], ["19", "209"], ["52", "55"], ["58", "55"], ["19", "55"], ["45", "55"], ["55", "58"], ["19", "58"], ["19", "72"], ["45", "72"], ["85", "84"], ["85", "84"], ["19", "84"], ["76", "94"], ["19", "94"], ["19", "121"], ["69", "213"], ["19", "213"], ["32", "66"], ["19", "66"], ["19", "85"], ["78", "85"], ["19", "106"], ["97", "106"], ["113", "112"], ["113", "112"], ["19", "112"], ["121", "124"], ["127", "124"], ["19", "124"], ["85", "124"], ["146", "124"], ["133", "127"], ["185", "127"], ["19", "127"], ["115", "113"], ["19", "113"], ["115", "113"], ["133", "141"], ["19", "141"], ["19", "216"], ["204", "216"], ["104", "115"], ["19", "115"], ["132", "131"], ["132", "131"], ["19", "131"], ["141", "146"], ["149", "146"], ["19", "146"], ["124", "146"], ["155", "149"], ["166", "149"], ["19", "149"], ["169", "161"], ["169", "161"], ["188", "180"], ["188", "180"], ["133", "132"], ["133", "132"], ["19", "132"], ["133", "143"], ["19", "143"], ["69", "161"], ["69", "180"], ["106", "133"], ["155", "133"], ["183", "133"], ["19", "133"], ["124", "133"], ["154", "153"], ["154", "153"], ["19", "153"], ["170", "169"], ["170", "169"], ["110", "169"], ["188", "169"], ["19", "169"], ["189", "188"], ["189", "188"], ["169", "188"], ["19", "188"], ["155", "154"], ["155", "154"], ["19", "154"], ["155", "164"], ["19", "164"], ["166", "164"], ["166", "164"], ["69", "170"], ["189", "170"], ["164", "183"], ["19", "183"], ["185", "183"], ["185", "183"], ["69", "189"], ["170", "189"], ["133", "155"], ["183", "155"], ["19", "155"], ["146", "155"], ["19", "166"], ["155", "166"], ["19", "185"], ["133", "185"], ["45", "52"], ["45", "48"], ["45", "45"], ["45", "55"], ["97", "115"], ["97", "113"], ["97", "104"], ["97", "121"], ["97", "97"], ["97", "112"], ["97", "100"], ["97", "106"], ["97", "110"], ["97", "124"], ["204", "214"], ["204", "209"], ["204", "213"], ["204", "204"], ["204", "207"], ["204", "212"], ["204", "210"], ["204", "216"], ["55", "60"], ["55", "58"], ["55", "61"], ["55", "66"], ["55", "55"], ["55", "62"], ["124", "131"], ["124", "132"], ["124", "127"], ["124", "124"], ["124", "133"], ["131", "146"], ["131", "141"], ["131", "143"], ["146", "154"], ["146", "146"], ["146", "149"], ["146", "153"], ["146", "155"], ["153", "188"], ["153", "169"], ["153", "161"], ["153", "185"], ["153", "189"], ["153", "162"], ["153", "170"], ["153", "181"], ["153", "190"], ["153", "174"], ["153", "194"], ["153", "164"], ["153", "180"], ["153", "171"], ["153", "183"], ["153", "193"], ["153", "166"], ["153", "175"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,double[][] value = new double[n][n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new double[n][n])>", "39": "<(IDENTIFIER,n,new double[n][n])<SUB>4</SUB>>", "41": "<(LOCAL,int i: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "51": "<(LOCAL,int j: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,j,int j = 0)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>6</SUB>>", "57": "<(IDENTIFIER,n,j &lt; n)<SUB>6</SUB>>", "59": "<(IDENTIFIER,j,j++)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,value[i][j])<SUB>6</SUB>>", "63": "<(IDENTIFIER,value,value[i][j] = nextDouble())<SUB>6</SUB>>", "65": "<(IDENTIFIER,j,value[i][j] = nextDouble())<SUB>6</SUB>>", "67": "<(IDENTIFIER,in,nextDouble())<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.assignment,double[] ans = new double[1 &lt;&lt; n])<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; n])>", "73": "<(LITERAL,1,1 &lt;&lt; n)<SUB>7</SUB>>", "75": "<(LOCAL,int mask: int)<SUB>8</SUB>>", "77": "<(IDENTIFIER,mask,int mask = 1 &lt;&lt; n)<SUB>8</SUB>>", "79": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,ans[(1 &lt;&lt; n) - 1] = 1.0)<SUB>9</SUB>>", "83": "<(IDENTIFIER,ans,ans[(1 &lt;&lt; n) - 1] = 1.0)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>9</SUB>>", "87": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>9</SUB>>", "89": "<(LITERAL,1.0,ans[(1 &lt;&lt; n) - 1] = 1.0)<SUB>9</SUB>>", "91": "<(LOCAL,int i: int)<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,int i = mask - 1)<SUB>10</SUB>>", "95": "<(IDENTIFIER,mask,mask - 1)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>10</SUB>>", "99": "<(LITERAL,0,i &gt;= 0)<SUB>10</SUB>>", "101": "<(IDENTIFIER,i,i--)<SUB>10</SUB>>", "103": "<(LOCAL,int cnt: int)<SUB>11</SUB>>", "105": "<(IDENTIFIER,cnt,int cnt = Integer.bitCount(i))<SUB>11</SUB>>", "107": "<(IDENTIFIER,Integer,Integer.bitCount(i))<SUB>11</SUB>>", "109": "<(LOCAL,int pairs: int)<SUB>12</SUB>>", "111": "<(IDENTIFIER,pairs,int pairs = cnt * (cnt - 1) / 2)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.multiplication,cnt * (cnt - 1))<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.subtraction,cnt - 1)<SUB>12</SUB>>", "117": "<(LITERAL,1,cnt - 1)<SUB>12</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "123": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "125": "<(IDENTIFIER,j,j &lt; n)<SUB>13</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "131": "<(&lt;operator&gt;.equals,((i &gt;&gt; j) &amp; 1) == 0)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; j)<SUB>14</SUB>>", "135": "<(IDENTIFIER,j,i &gt;&gt; j)<SUB>14</SUB>>", "137": "<(LITERAL,0,((i &gt;&gt; j) &amp; 1) == 0)<SUB>14</SUB>>", "139": "<(CONTROL_STRUCTURE,for (int k = j + 1; Some(k &lt; n); k++),for (int k = j + 1; Some(k &lt; n); k++))<SUB>15</SUB>>", "141": "<(&lt;operator&gt;.assignment,int k = j + 1)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.addition,j + 1)<SUB>15</SUB>>", "145": "<(LITERAL,1,j + 1)<SUB>15</SUB>>", "147": "<(IDENTIFIER,k,k &lt; n)<SUB>15</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,k++)<SUB>15</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "153": "<(&lt;operator&gt;.equals,((i &gt;&gt; k) &amp; 1) == 0)<SUB>16</SUB>>", "155": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; k)<SUB>16</SUB>>", "157": "<(IDENTIFIER,k,i &gt;&gt; k)<SUB>16</SUB>>", "159": "<(LITERAL,0,((i &gt;&gt; k) &amp; 1) == 0)<SUB>16</SUB>>", "161": "<(&lt;operator&gt;.assignmentPlus,ans[i ^ (1 &lt;&lt; k)] += ans[i] * value[j][k] / pairs)<SUB>17</SUB>>", "163": "<(IDENTIFIER,ans,ans[i ^ (1 &lt;&lt; k)] += ans[i] * value[j][k] / pairs)<SUB>17</SUB>>", "165": "<(IDENTIFIER,i,i ^ (1 &lt;&lt; k))<SUB>17</SUB>>", "167": "<(LITERAL,1,1 &lt;&lt; k)<SUB>17</SUB>>", "169": "<(&lt;operator&gt;.division,ans[i] * value[j][k] / pairs)<SUB>17</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>17</SUB>>", "173": "<(IDENTIFIER,i,ans[i] * value[j][k])<SUB>17</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,value[j])<SUB>17</SUB>>", "177": "<(IDENTIFIER,j,ans[i] * value[j][k])<SUB>17</SUB>>", "179": "<(IDENTIFIER,pairs,ans[i] * value[j][k] / pairs)<SUB>17</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,ans[i ^ (1 &lt;&lt; j)])<SUB>18</SUB>>", "183": "<(&lt;operator&gt;.xor,i ^ (1 &lt;&lt; j))<SUB>18</SUB>>", "185": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>18</SUB>>", "187": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>18</SUB>>", "189": "<(&lt;operator&gt;.multiplication,ans[i] * value[k][j])<SUB>18</SUB>>", "191": "<(IDENTIFIER,ans,ans[i] * value[k][j])<SUB>18</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,value[k][j])<SUB>18</SUB>>", "195": "<(IDENTIFIER,value,ans[i] * value[k][j])<SUB>18</SUB>>", "197": "<(IDENTIFIER,j,ans[i] * value[k][j])<SUB>18</SUB>>", "199": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>22</SUB>>", "201": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "203": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "205": "<(IDENTIFIER,i,i &lt; n)<SUB>22</SUB>>", "207": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "209": "<(print,System.out.print(ans[1 &lt;&lt; i] + &quot; &quot;))<SUB>23</SUB>>", "211": "<(IDENTIFIER,System,System.out.print(ans[1 &lt;&lt; i] + &quot; &quot;))<SUB>23</SUB>>", "213": "<(&lt;operator&gt;.addition,ans[1 &lt;&lt; i] + &quot; &quot;)<SUB>23</SUB>>", "215": "<(IDENTIFIER,ans,ans[1 &lt;&lt; i] + &quot; &quot;)<SUB>23</SUB>>", "217": "<(LITERAL,1,1 &lt;&lt; i)<SUB>23</SUB>>", "219": "<(LITERAL,&quot; &quot;,ans[1 &lt;&lt; i] + &quot; &quot;)<SUB>23</SUB>>", "221": "<(MODIFIER,STATIC)>"}}