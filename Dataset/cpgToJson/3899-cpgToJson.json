{"edges": [["23", "24"], ["23", "25"], ["23", "166"], ["23", "167"], ["23", "168"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "8"], ["25", "34"], ["25", "37"], ["25", "41"], ["25", "42"], ["25", "46"], ["25", "164"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["34", "35"], ["34", "36"], ["37", "7"], ["37", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "51"], ["47", "48"], ["47", "50"], ["48", "49"], ["51", "52"], ["51", "53"], ["51", "57"], ["51", "58"], ["51", "63"], ["51", "64"], ["51", "68"], ["51", "69"], ["51", "72"], ["51", "77"], ["51", "80"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "132"], ["90", "162"], ["91", "92"], ["91", "97"], ["91", "105"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "100"], ["98", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["106", "107"], ["106", "128"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["112", "113"], ["112", "122"], ["112", "125"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["122", "123"], ["123", "124"], ["125", "126"], ["126", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["143", "144"], ["143", "147"], ["143", "153"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["154", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["164", "165"], ["26", "29"], ["29", "32"], ["30", "33"], ["33", "36"], ["34", "40"], ["37", "44"], ["42", "48"], ["164", "168"], ["28", "26"], ["32", "30"], ["36", "34"], ["38", "37"], ["44", "42"], ["47", "55"], ["47", "164"], ["40", "38"], ["48", "47"], ["53", "60"], ["58", "66"], ["64", "69"], ["69", "73"], ["72", "77"], ["77", "82"], ["55", "53"], ["60", "58"], ["66", "64"], ["73", "72"], ["82", "85"], ["85", "48"], ["85", "93"], ["88", "85"], ["162", "88"], ["92", "98"], ["92", "108"], ["134", "137"], ["137", "144"], ["137", "162"], ["140", "137"], ["93", "92"], ["98", "101"], ["100", "134"], ["101", "100"], ["128", "134"], ["144", "150"], ["144", "158"], ["108", "115"], ["108", "129"], ["129", "128"], ["148", "140"], ["150", "148"], ["155", "140"], ["113", "123"], ["113", "129"], ["157", "155"], ["114", "119"], ["119", "113"], ["123", "108"], ["158", "157"], ["115", "114"], ["23", "28"], ["24", "168"], ["26", "168"], ["29", "168"], ["30", "168"], ["33", "168"], ["34", "168"], ["37", "168"], ["37", "168"], ["37", "168"], ["44", "168"], ["42", "168"], ["42", "168"], ["48", "168"], ["47", "168"], ["47", "168"], ["164", "168"], ["164", "168"], ["53", "168"], ["53", "168"], ["58", "168"], ["60", "168"], ["58", "168"], ["58", "168"], ["64", "168"], ["64", "168"], ["64", "168"], ["69", "168"], ["69", "168"], ["72", "168"], ["72", "168"], ["77", "168"], ["82", "168"], ["85", "168"], ["85", "168"], ["85", "168"], ["92", "168"], ["92", "168"], ["108", "168"], ["113", "168"], ["113", "168"], ["113", "168"], ["128", "168"], ["128", "168"], ["123", "168"], ["98", "168"], ["100", "168"], ["100", "168"], ["134", "168"], ["137", "168"], ["137", "168"], ["137", "168"], ["162", "168"], ["88", "168"], ["144", "168"], ["157", "168"], ["155", "168"], ["155", "168"], ["148", "168"], ["148", "168"], ["140", "168"], ["23", "24"], ["23", "26"], ["23", "30"], ["23", "34"], ["44", "42"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["34", "37"], ["23", "37"], ["33", "164"], ["77", "164"], ["162", "164"], ["23", "164"], ["29", "44"], ["23", "44"], ["48", "47"], ["23", "47"], ["55", "53"], ["60", "58"], ["60", "58"], ["66", "64"], ["23", "69"], ["23", "72"], ["42", "48"], ["23", "48"], ["33", "77"], ["162", "77"], ["23", "77"], ["23", "82"], ["44", "55"], ["60", "55"], ["23", "55"], ["55", "60"], ["23", "60"], ["53", "60"], ["23", "66"], ["82", "85"], ["88", "85"], ["23", "85"], ["60", "85"], ["85", "88"], ["23", "88"], ["23", "134"], ["77", "162"], ["155", "162"], ["148", "162"], ["23", "162"], ["58", "92"], ["113", "92"], ["23", "92"], ["23", "100"], ["134", "137"], ["140", "137"], ["23", "137"], ["108", "137"], ["98", "137"], ["144", "137"], ["144", "140"], ["23", "140"], ["69", "98"], ["137", "98"], ["23", "98"], ["64", "128"], ["100", "128"], ["137", "144"], ["23", "144"], ["137", "144"], ["69", "108"], ["123", "108"], ["137", "108"], ["23", "108"], ["77", "148"], ["162", "148"], ["155", "148"], ["23", "148"], ["64", "148"], ["77", "155"], ["162", "155"], ["148", "155"], ["23", "155"], ["64", "155"], ["148", "155"], ["64", "113"], ["128", "113"], ["100", "113"], ["23", "113"], ["58", "113"], ["92", "113"], ["64", "157"], ["148", "157"], ["23", "157"], ["64", "114"], ["128", "114"], ["100", "114"], ["23", "114"], ["108", "123"], ["23", "123"], ["47", "47"], ["47", "48"], ["47", "60"], ["47", "73"], ["47", "77"], ["47", "64"], ["47", "66"], ["47", "85"], ["47", "72"], ["47", "69"], ["47", "82"], ["47", "58"], ["47", "53"], ["47", "55"], ["85", "85"], ["85", "92"], ["85", "162"], ["85", "134"], ["85", "93"], ["85", "137"], ["85", "88"], ["92", "98"], ["92", "128"], ["92", "129"], ["92", "101"], ["92", "100"], ["92", "108"], ["137", "144"], ["137", "140"], ["137", "137"], ["144", "150"], ["144", "157"], ["144", "148"], ["144", "155"], ["144", "158"], ["108", "115"], ["108", "113"], ["108", "114"], ["108", "119"], ["113", "123"], ["113", "108"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new FastWriter())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new FastWriter())<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new FastWriter())<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>4</SUB>>", "36": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>4</SUB>>", "7": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>4</SUB>>", "39": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>4</SUB>>", "41": "<(LOCAL,int t: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>7</SUB>>", "49": "<(IDENTIFIER,t,t--)<SUB>7</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "55": "<(nextInt,nextInt())<SUB>8</SUB>>", "57": "<(LOCAL,int[] ar: int[])<SUB>9</SUB>>", "59": "<(IDENTIFIER,ar,int[] ar = nextArray(n))<SUB>9</SUB>>", "61": "<(IDENTIFIER,in,nextArray(n))<SUB>9</SUB>>", "63": "<(LOCAL,int[] level: int[])<SUB>10</SUB>>", "65": "<(IDENTIFIER,level,int[] level = new int[1005])<SUB>10</SUB>>", "67": "<(LITERAL,1005,new int[1005])<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>11</SUB>>", "71": "<(LITERAL,1,int j = 1)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,level[1])<SUB>12</SUB>>", "75": "<(LITERAL,1,level[1] = 1)<SUB>12</SUB>>", "77": "<(println,println(1))<SUB>13</SUB>>", "79": "<(LITERAL,1,println(1))<SUB>13</SUB>>", "81": "<(LOCAL,int i: int)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,int i = 1)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "87": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "91": "<(CONTROL_STRUCTURE,if (ar[i] == 1),if (ar[i] == 1))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,ar[i] == 1)<SUB>15</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,level[j])<SUB>17</SUB>>", "103": "<(IDENTIFIER,j,level[j] = 1)<SUB>17</SUB>>", "105": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "107": "<(CONTROL_STRUCTURE,while (j &gt;= 1),while (j &gt;= 1))<SUB>19</SUB>>", "109": "<(IDENTIFIER,j,j &gt;= 1)<SUB>19</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.notEquals,level[j] + 1 != ar[i])<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,level[j])<SUB>20</SUB>>", "117": "<(IDENTIFIER,j,level[j] + 1)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>20</SUB>>", "121": "<(IDENTIFIER,i,level[j] + 1 != ar[i])<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.postDecrement,j--)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "127": "<(CONTROL_STRUCTURE,break;,break;)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,level[j])<SUB>26</SUB>>", "131": "<(IDENTIFIER,j,level[j]++)<SUB>26</SUB>>", "133": "<(LOCAL,int k: int)<SUB>28</SUB>>", "135": "<(IDENTIFIER,k,int k = 1)<SUB>28</SUB>>", "137": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= j)<SUB>28</SUB>>", "139": "<(IDENTIFIER,j,k &lt;= j)<SUB>28</SUB>>", "141": "<(IDENTIFIER,k,k++)<SUB>28</SUB>>", "143": "<(CONTROL_STRUCTURE,if (k == j),if (k == j))<SUB>29</SUB>>", "145": "<(IDENTIFIER,k,k == j)<SUB>29</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "149": "<(IDENTIFIER,out,print(level[k]))<SUB>30</SUB>>", "151": "<(IDENTIFIER,level,print(level[k]))<SUB>30</SUB>>", "153": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "155": "<(print,print(level[k] + &quot;.&quot;))<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.addition,level[k] + &quot;.&quot;)<SUB>32</SUB>>", "159": "<(IDENTIFIER,level,level[k] + &quot;.&quot;)<SUB>32</SUB>>", "161": "<(LITERAL,&quot;.&quot;,level[k] + &quot;.&quot;)<SUB>32</SUB>>", "163": "<(IDENTIFIER,out,println())<SUB>35</SUB>>", "165": "<(IDENTIFIER,out,close())<SUB>38</SUB>>", "167": "<(MODIFIER,STATIC)>"}}