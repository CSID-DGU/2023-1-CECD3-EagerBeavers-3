{"edges": [["17", "18"], ["17", "19"], ["17", "216"], ["17", "217"], ["17", "218"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "41"], ["19", "60"], ["19", "61"], ["19", "67"], ["19", "93"], ["19", "94"], ["19", "100"], ["19", "144"], ["19", "145"], ["19", "150"], ["19", "211"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "51"], ["41", "53"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "77"], ["67", "79"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "110"], ["100", "112"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "120"], ["120", "121"], ["120", "126"], ["120", "143"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "142"], ["127", "128"], ["127", "137"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "160"], ["150", "162"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["162", "171"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["165", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "179"], ["171", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["184", "187"], ["187", "188"], ["187", "193"], ["187", "210"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["193", "194"], ["193", "205"], ["194", "195"], ["194", "202"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["21", "28"], ["26", "33"], ["31", "38"], ["35", "43"], ["61", "69"], ["94", "102"], ["145", "152"], ["211", "218"], ["23", "21"], ["28", "26"], ["33", "31"], ["37", "35"], ["43", "48"], ["46", "55"], ["46", "64"], ["51", "48"], ["63", "61"], ["69", "74"], ["72", "81"], ["72", "97"], ["77", "74"], ["96", "94"], ["102", "107"], ["105", "114"], ["105", "147"], ["110", "107"], ["147", "145"], ["152", "157"], ["155", "168"], ["155", "214"], ["160", "157"], ["212", "211"], ["38", "37"], ["48", "46"], ["54", "51"], ["64", "63"], ["74", "72"], ["80", "77"], ["97", "96"], ["107", "105"], ["113", "110"], ["157", "155"], ["163", "173"], ["214", "212"], ["55", "58"], ["58", "54"], ["81", "85"], ["84", "80"], ["114", "122"], ["117", "113"], ["165", "163"], ["173", "176"], ["176", "189"], ["176", "160"], ["179", "176"], ["85", "90"], ["88", "84"], ["120", "117"], ["168", "165"], ["182", "179"], ["90", "88"], ["121", "131"], ["121", "120"], ["126", "120"], ["184", "182"], ["122", "121"], ["127", "126"], ["187", "184"], ["128", "139"], ["137", "127"], ["188", "198"], ["188", "187"], ["193", "187"], ["129", "134"], ["134", "128"], ["139", "137"], ["189", "188"], ["194", "207"], ["205", "193"], ["131", "129"], ["195", "202"], ["202", "194"], ["207", "205"], ["196", "195"], ["198", "196"], ["17", "23"], ["18", "218"], ["21", "218"], ["26", "218"], ["26", "218"], ["26", "218"], ["31", "218"], ["33", "218"], ["31", "218"], ["31", "218"], ["35", "218"], ["35", "218"], ["61", "218"], ["61", "218"], ["94", "218"], ["94", "218"], ["94", "218"], ["145", "218"], ["145", "218"], ["152", "218"], ["155", "218"], ["157", "218"], ["155", "218"], ["155", "218"], ["211", "218"], ["211", "218"], ["211", "218"], ["165", "218"], ["165", "218"], ["163", "218"], ["163", "218"], ["173", "218"], ["176", "218"], ["176", "218"], ["176", "218"], ["160", "218"], ["184", "218"], ["188", "218"], ["187", "218"], ["195", "218"], ["195", "218"], ["194", "218"], ["194", "218"], ["193", "218"], ["193", "218"], ["187", "218"], ["184", "218"], ["182", "218"], ["182", "218"], ["179", "218"], ["113", "218"], ["117", "218"], ["122", "218"], ["121", "218"], ["120", "218"], ["128", "218"], ["128", "218"], ["127", "218"], ["139", "218"], ["127", "218"], ["126", "218"], ["126", "218"], ["120", "218"], ["117", "218"], ["113", "218"], ["113", "218"], ["110", "218"], ["80", "218"], ["84", "218"], ["84", "218"], ["80", "218"], ["80", "218"], ["77", "218"], ["54", "218"], ["58", "218"], ["54", "218"], ["54", "218"], ["51", "218"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["37", "35"], ["63", "61"], ["96", "94"], ["94", "145"], ["17", "43"], ["17", "69"], ["17", "102"], ["17", "152"], ["145", "211"], ["163", "211"], ["182", "211"], ["17", "211"], ["17", "23"], ["23", "28"], ["17", "28"], ["28", "33"], ["17", "33"], ["21", "37"], ["17", "37"], ["43", "46"], ["51", "46"], ["17", "46"], ["21", "46"], ["46", "51"], ["17", "51"], ["58", "54"], ["17", "63"], ["21", "63"], ["69", "72"], ["77", "72"], ["17", "72"], ["21", "72"], ["90", "77"], ["17", "77"], ["35", "80"], ["54", "80"], ["61", "80"], ["17", "96"], ["21", "96"], ["102", "105"], ["110", "105"], ["17", "105"], ["21", "105"], ["122", "110"], ["139", "110"], ["17", "110"], ["117", "113"], ["117", "113"], ["117", "113"], ["152", "155"], ["160", "155"], ["17", "155"], ["21", "155"], ["155", "160"], ["189", "160"], ["207", "160"], ["17", "160"], ["165", "163"], ["165", "163"], ["165", "163"], ["21", "38"], ["17", "38"], ["17", "48"], ["21", "48"], ["17", "64"], ["21", "64"], ["17", "74"], ["21", "74"], ["17", "97"], ["21", "97"], ["17", "107"], ["21", "107"], ["17", "157"], ["21", "157"], ["17", "173"], ["33", "58"], ["17", "58"], ["35", "84"], ["54", "84"], ["61", "84"], ["17", "117"], ["126", "117"], ["126", "117"], ["184", "165"], ["117", "165"], ["17", "165"], ["145", "165"], ["163", "165"], ["182", "165"], ["94", "165"], ["113", "165"], ["173", "176"], ["179", "176"], ["17", "176"], ["26", "176"], ["122", "176"], ["139", "176"], ["189", "179"], ["207", "179"], ["17", "179"], ["184", "182"], ["184", "182"], ["184", "182"], ["126", "120"], ["126", "120"], ["17", "120"], ["72", "90"], ["17", "90"], ["122", "121"], ["122", "121"], ["17", "121"], ["127", "126"], ["127", "126"], ["31", "126"], ["17", "126"], ["165", "184"], ["17", "184"], ["163", "184"], ["182", "184"], ["193", "184"], ["193", "184"], ["105", "122"], ["17", "122"], ["26", "122"], ["139", "122"], ["94", "127"], ["61", "127"], ["80", "127"], ["193", "187"], ["193", "187"], ["17", "187"], ["94", "128"], ["61", "128"], ["80", "128"], ["189", "188"], ["189", "188"], ["17", "188"], ["195", "193"], ["195", "193"], ["61", "193"], ["80", "193"], ["131", "139"], ["17", "139"], ["131", "139"], ["155", "189"], ["207", "189"], ["17", "189"], ["176", "189"], ["195", "194"], ["195", "194"], ["61", "194"], ["80", "194"], ["122", "131"], ["17", "131"], ["122", "131"], ["94", "195"], ["31", "195"], ["126", "195"], ["17", "195"], ["198", "207"], ["17", "207"], ["198", "207"], ["189", "198"], ["17", "198"], ["189", "198"], ["46", "51"], ["46", "54"], ["46", "58"], ["46", "48"], ["46", "46"], ["46", "55"], ["72", "77"], ["72", "81"], ["72", "84"], ["72", "85"], ["72", "74"], ["72", "90"], ["72", "80"], ["72", "88"], ["72", "72"], ["105", "107"], ["105", "120"], ["105", "113"], ["105", "114"], ["105", "121"], ["105", "122"], ["105", "105"], ["105", "110"], ["105", "117"], ["155", "163"], ["155", "168"], ["155", "173"], ["155", "155"], ["155", "160"], ["155", "157"], ["155", "176"], ["155", "165"], ["176", "188"], ["176", "179"], ["176", "189"], ["176", "187"], ["176", "184"], ["176", "182"], ["176", "176"], ["121", "128"], ["121", "131"], ["121", "129"], ["121", "134"], ["121", "137"], ["121", "127"], ["121", "139"], ["121", "126"], ["188", "196"], ["188", "198"], ["188", "195"], ["188", "207"], ["188", "194"], ["188", "202"], ["188", "205"], ["188", "193"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int m: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,m,int m = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,enter,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "33": "<(nextLong,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,arr = new long[n + 1])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "39": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "41": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n + 1); i++),for (int i = 1; Some(i &lt; n + 1); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "45": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n + 1)<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,n + 1)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,arr[i] = nextLong())<SUB>7</SUB>>", "59": "<(IDENTIFIER,enter,nextLong())<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,long[] summ = new long[n + 1])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "65": "<(IDENTIFIER,n,n + 1)<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n + 1); i++),for (int i = 1; Some(i &lt; n + 1); i++))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "71": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n + 1)<SUB>10</SUB>>", "75": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,summ[i])<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,summ[i] += arr[i] + summ[i - 1])<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>11</SUB>>", "87": "<(IDENTIFIER,i,arr[i] + summ[i - 1])<SUB>11</SUB>>", "89": "<(IDENTIFIER,summ,arr[i] + summ[i - 1])<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,i - 1)<SUB>11</SUB>>", "93": "<(LOCAL,long[] best: long[])<SUB>14</SUB>>", "95": "<(IDENTIFIER,best,long[] best = new long[n + 1])<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.addition,n + 1)<SUB>14</SUB>>", "99": "<(LITERAL,1,n + 1)<SUB>14</SUB>>", "101": "<(LOCAL,int i: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,i,int i = 1)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.lessThan,i &lt; n + 1)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.addition,n + 1)<SUB>16</SUB>>", "109": "<(LITERAL,1,n + 1)<SUB>16</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,best[i] = Math.max(0, ((i - m &gt;= 0) ? best[i - m] + summ[i] - summ[i - m] - k : 0)))<SUB>17</SUB>>", "115": "<(IDENTIFIER,best,best[i] = Math.max(0, ((i - m &gt;= 0) ? best[i - m] + summ[i] - summ[i - m] - k : 0)))<SUB>17</SUB>>", "117": "<(max,Math.max(0, ((i - m &gt;= 0) ? best[i - m] + summ[i] - summ[i - m] - k : 0)))<SUB>17</SUB>>", "119": "<(LITERAL,0,Math.max(0, ((i - m &gt;= 0) ? best[i - m] + summ[i] - summ[i - m] - k : 0)))<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.greaterEqualsThan,i - m &gt;= 0)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,i - m)<SUB>17</SUB>>", "125": "<(LITERAL,0,i - m &gt;= 0)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.subtraction,best[i - m] + summ[i] - summ[i - m])<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,best[i - m])<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.subtraction,i - m)<SUB>17</SUB>>", "133": "<(IDENTIFIER,m,i - m)<SUB>17</SUB>>", "135": "<(IDENTIFIER,summ,best[i - m] + summ[i])<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,summ[i - m])<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.subtraction,i - m)<SUB>17</SUB>>", "141": "<(IDENTIFIER,m,i - m)<SUB>17</SUB>>", "143": "<(LITERAL,0,(i - m &gt;= 0) ? best[i - m] + summ[i] - summ[i - m] - k : 0)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.assignment,long ans = best[1])<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,best[1])<SUB>19</SUB>>", "149": "<(LITERAL,1,long ans = best[1])<SUB>19</SUB>>", "151": "<(LOCAL,int i: int)<SUB>21</SUB>>", "153": "<(IDENTIFIER,i,int i = 1)<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.lessThan,i &lt; n + 1)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.addition,n + 1)<SUB>21</SUB>>", "159": "<(LITERAL,1,n + 1)<SUB>21</SUB>>", "161": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.assignment,ans = Math.max(ans, best[i]))<SUB>22</SUB>>", "165": "<(max,Math.max(ans, best[i]))<SUB>22</SUB>>", "167": "<(IDENTIFIER,ans,Math.max(ans, best[i]))<SUB>22</SUB>>", "169": "<(IDENTIFIER,best,Math.max(ans, best[i]))<SUB>22</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; m); j++),for (int j = 1; Some(j &lt; m); j++))<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>23</SUB>>", "175": "<(LITERAL,1,int j = 1)<SUB>23</SUB>>", "177": "<(IDENTIFIER,j,j &lt; m)<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "183": "<(IDENTIFIER,ans,ans = Math.max(ans, ((i - j &gt;= 0) ? best[i - j] - k + summ[i] - summ[i - j] : 0)))<SUB>24</SUB>>", "185": "<(IDENTIFIER,Math,Math.max(ans, ((i - j &gt;= 0) ? best[i - j] - k + summ[i] - summ[i - j] : 0)))<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.conditional,(i - j &gt;= 0) ? best[i - j] - k + summ[i] - summ[i - j] : 0)<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.subtraction,i - j)<SUB>24</SUB>>", "191": "<(IDENTIFIER,j,i - j)<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.subtraction,best[i - j] - k + summ[i] - summ[i - j])<SUB>24</SUB>>", "195": "<(&lt;operator&gt;.subtraction,best[i - j] - k)<SUB>24</SUB>>", "197": "<(IDENTIFIER,best,best[i - j] - k)<SUB>24</SUB>>", "199": "<(IDENTIFIER,i,i - j)<SUB>24</SUB>>", "201": "<(IDENTIFIER,k,best[i - j] - k)<SUB>24</SUB>>", "203": "<(IDENTIFIER,summ,best[i - j] - k + summ[i])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,summ[i - j])<SUB>24</SUB>>", "207": "<(&lt;operator&gt;.subtraction,i - j)<SUB>24</SUB>>", "209": "<(IDENTIFIER,j,i - j)<SUB>24</SUB>>", "211": "<(println,System.out.println(ans))<SUB>27</SUB>>", "213": "<(IDENTIFIER,System,System.out.println(ans))<SUB>27</SUB>>", "215": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>27</SUB>>", "217": "<(MODIFIER,STATIC)>"}}