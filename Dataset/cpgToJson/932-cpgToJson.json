{"edges": [["19", "20"], ["19", "21"], ["19", "74"], ["19", "75"], ["19", "76"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "33"], ["21", "34"], ["21", "40"], ["21", "41"], ["21", "52"], ["21", "53"], ["21", "58"], ["21", "65"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["22", "25"], ["25", "30"], ["27", "37"], ["34", "46"], ["41", "55"], ["53", "61"], ["58", "68"], ["65", "76"], ["24", "22"], ["29", "27"], ["36", "34"], ["43", "41"], ["55", "53"], ["60", "58"], ["66", "70"], ["69", "65"], ["30", "31"], ["31", "29"], ["37", "38"], ["38", "36"], ["44", "49"], ["49", "43"], ["61", "60"], ["68", "66"], ["70", "71"], ["71", "69"], ["46", "44"], ["19", "24"], ["20", "76"], ["22", "76"], ["25", "76"], ["27", "76"], ["38", "76"], ["36", "76"], ["34", "76"], ["34", "76"], ["44", "76"], ["43", "76"], ["49", "76"], ["43", "76"], ["41", "76"], ["41", "76"], ["55", "76"], ["53", "76"], ["53", "76"], ["60", "76"], ["58", "76"], ["58", "76"], ["65", "76"], ["71", "76"], ["71", "76"], ["69", "76"], ["65", "76"], ["65", "76"], ["55", "76"], ["19", "20"], ["19", "22"], ["19", "27"], ["31", "27"], ["19", "34"], ["38", "34"], ["19", "41"], ["46", "41"], ["46", "41"], ["49", "41"], ["49", "41"], ["55", "53"], ["55", "53"], ["60", "58"], ["60", "58"], ["22", "25"], ["19", "25"], ["19", "65"], ["71", "65"], ["71", "65"], ["19", "29"], ["31", "29"], ["19", "36"], ["38", "36"], ["19", "43"], ["46", "43"], ["46", "43"], ["49", "43"], ["49", "43"], ["19", "55"], ["41", "55"], ["61", "60"], ["61", "60"], ["19", "60"], ["19", "69"], ["71", "69"], ["71", "69"], ["25", "31"], ["19", "31"], ["31", "38"], ["19", "38"], ["19", "44"], ["46", "44"], ["46", "44"], ["19", "49"], ["34", "49"], ["53", "61"], ["19", "61"], ["46", "71"], ["19", "71"], ["58", "71"], ["19", "46"], ["27", "46"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastReader())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new FastReader())<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,double n = (double) sc.nextLong())<SUB>5</SUB>>", "29": "<(&lt;operator&gt;.cast,(double) sc.nextLong())<SUB>5</SUB>>", "31": "<(nextLong,nextLong())<SUB>5</SUB>>", "33": "<(LOCAL,double k: double)<SUB>6</SUB>>", "35": "<(IDENTIFIER,k,double k = (double) sc.nextLong())<SUB>6</SUB>>", "37": "<(TYPE_REF,double,double)<SUB>6</SUB>>", "39": "<(IDENTIFIER,sc,nextLong())<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,double div = 9 + 8 * n + 8 * k)<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.addition,9 + 8 * n + 8 * k)<SUB>8</SUB>>", "45": "<(LITERAL,9,9 + 8 * n)<SUB>8</SUB>>", "47": "<(LITERAL,8,8 * n)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.multiplication,8 * k)<SUB>8</SUB>>", "51": "<(IDENTIFIER,k,8 * k)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,double ss = Math.sqrt(div))<SUB>9</SUB>>", "55": "<(sqrt,Math.sqrt(div))<SUB>9</SUB>>", "57": "<(IDENTIFIER,div,Math.sqrt(div))<SUB>9</SUB>>", "59": "<(IDENTIFIER,ss,ss = (ss - 3) / 2)<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.subtraction,ss - 3)<SUB>12</SUB>>", "63": "<(LITERAL,3,ss - 3)<SUB>12</SUB>>", "65": "<(println,System.out.println((int) (n - ss)))<SUB>13</SUB>>", "67": "<(IDENTIFIER,System,System.out.println((int) (n - ss)))<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.cast,(int) (n - ss))<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - ss)<SUB>13</SUB>>", "73": "<(IDENTIFIER,ss,n - ss)<SUB>13</SUB>>", "75": "<(MODIFIER,STATIC)>"}}