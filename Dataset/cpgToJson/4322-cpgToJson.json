{"edges": [["19", "20"], ["19", "21"], ["19", "258"], ["19", "259"], ["19", "260"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "84"], ["21", "85"], ["21", "90"], ["21", "91"], ["21", "96"], ["21", "200"], ["21", "201"], ["21", "204"], ["21", "249"], ["21", "256"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["55", "77"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "124"], ["117", "125"], ["117", "134"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "140"], ["134", "148"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["155", "164"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "188"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["184", "187"], ["188", "189"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["204", "209"], ["204", "212"], ["204", "214"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["214", "215"], ["215", "216"], ["215", "217"], ["215", "220"], ["215", "223"], ["215", "225"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["225", "226"], ["226", "227"], ["226", "241"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "240"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["236", "239"], ["241", "242"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["85", "93"], ["91", "98"], ["201", "206"], ["249", "256"], ["256", "260"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "87"], ["53", "50"], ["87", "85"], ["93", "91"], ["98", "101"], ["101", "109"], ["101", "201"], ["104", "101"], ["206", "209"], ["209", "217"], ["209", "252"], ["212", "209"], ["250", "253"], ["253", "249"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "79"], ["77", "53"], ["252", "250"], ["59", "57"], ["66", "64"], ["71", "70"], ["78", "77"], ["109", "112"], ["112", "121"], ["112", "104"], ["115", "112"], ["217", "220"], ["220", "229"], ["220", "212"], ["223", "220"], ["60", "59"], ["67", "66"], ["72", "71"], ["79", "78"], ["119", "130"], ["125", "136"], ["121", "119"], ["127", "125"], ["135", "143"], ["135", "151"], ["227", "245"], ["227", "223"], ["128", "127"], ["136", "135"], ["141", "115"], ["228", "227"], ["228", "236"], ["233", "227"], ["242", "223"], ["130", "128"], ["142", "141"], ["150", "161"], ["150", "115"], ["229", "228"], ["234", "233"], ["244", "242"], ["143", "142"], ["151", "150"], ["157", "166"], ["236", "234"], ["245", "244"], ["159", "157"], ["166", "169"], ["169", "178"], ["169", "115"], ["172", "169"], ["161", "159"], ["176", "191"], ["176", "172"], ["177", "176"], ["177", "184"], ["182", "176"], ["189", "172"], ["178", "177"], ["184", "182"], ["190", "196"], ["195", "189"], ["191", "190"], ["196", "195"], ["19", "24"], ["20", "260"], ["22", "260"], ["25", "260"], ["25", "260"], ["30", "260"], ["35", "260"], ["35", "260"], ["40", "260"], ["40", "260"], ["40", "260"], ["47", "260"], ["50", "260"], ["50", "260"], ["50", "260"], ["85", "260"], ["85", "260"], ["91", "260"], ["93", "260"], ["91", "260"], ["91", "260"], ["201", "260"], ["206", "260"], ["209", "260"], ["209", "260"], ["209", "260"], ["249", "260"], ["253", "260"], ["249", "260"], ["249", "260"], ["256", "260"], ["256", "260"], ["217", "260"], ["220", "260"], ["220", "260"], ["220", "260"], ["212", "260"], ["229", "260"], ["228", "260"], ["227", "260"], ["236", "260"], ["227", "260"], ["227", "260"], ["242", "260"], ["242", "260"], ["223", "260"], ["109", "260"], ["112", "260"], ["112", "260"], ["112", "260"], ["104", "260"], ["121", "260"], ["119", "260"], ["119", "260"], ["128", "260"], ["127", "260"], ["125", "260"], ["125", "260"], ["136", "260"], ["135", "260"], ["135", "260"], ["135", "260"], ["151", "260"], ["150", "260"], ["150", "260"], ["150", "260"], ["157", "260"], ["159", "260"], ["157", "260"], ["157", "260"], ["166", "260"], ["169", "260"], ["169", "260"], ["176", "260"], ["184", "260"], ["182", "260"], ["176", "260"], ["176", "260"], ["189", "260"], ["189", "260"], ["189", "260"], ["172", "260"], ["141", "260"], ["141", "260"], ["115", "260"], ["57", "260"], ["57", "260"], ["64", "260"], ["66", "260"], ["64", "260"], ["64", "260"], ["70", "260"], ["70", "260"], ["77", "260"], ["77", "260"], ["53", "260"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["87", "85"], ["87", "85"], ["93", "91"], ["93", "91"], ["19", "201"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "98"], ["19", "206"], ["253", "249"], ["253", "249"], ["37", "256"], ["67", "256"], ["19", "256"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["19", "77"], ["19", "87"], ["42", "87"], ["85", "93"], ["19", "93"], ["87", "93"], ["98", "101"], ["104", "101"], ["19", "101"], ["93", "101"], ["101", "104"], ["128", "104"], ["159", "104"], ["184", "104"], ["19", "104"], ["206", "209"], ["212", "209"], ["19", "209"], ["101", "209"], ["209", "212"], ["229", "212"], ["236", "212"], ["19", "212"], ["201", "253"], ["242", "253"], ["19", "253"], ["19", "109"], ["19", "217"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["109", "112"], ["115", "112"], ["19", "112"], ["93", "112"], ["169", "112"], ["130", "115"], ["161", "115"], ["182", "115"], ["19", "115"], ["121", "119"], ["121", "119"], ["127", "125"], ["127", "125"], ["217", "220"], ["223", "220"], ["19", "220"], ["93", "220"], ["236", "220"], ["112", "220"], ["220", "223"], ["19", "223"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["19", "121"], ["101", "121"], ["128", "121"], ["159", "121"], ["184", "121"], ["128", "127"], ["128", "127"], ["19", "127"], ["136", "135"], ["136", "135"], ["125", "135"], ["19", "135"], ["19", "141"], ["228", "227"], ["228", "227"], ["189", "242"], ["141", "242"], ["121", "128"], ["19", "128"], ["130", "128"], ["130", "128"], ["119", "136"], ["19", "136"], ["229", "228"], ["229", "228"], ["19", "228"], ["201", "242"], ["19", "242"], ["19", "130"], ["112", "130"], ["151", "150"], ["151", "150"], ["135", "150"], ["19", "150"], ["159", "157"], ["159", "157"], ["121", "229"], ["19", "229"], ["209", "229"], ["236", "229"], ["136", "151"], ["19", "151"], ["19", "166"], ["184", "236"], ["19", "236"], ["229", "236"], ["220", "236"], ["128", "159"], ["19", "159"], ["161", "159"], ["161", "159"], ["166", "169"], ["172", "169"], ["19", "169"], ["112", "169"], ["184", "169"], ["169", "172"], ["19", "172"], ["19", "161"], ["130", "161"], ["182", "176"], ["182", "176"], ["161", "182"], ["19", "182"], ["184", "182"], ["184", "182"], ["184", "182"], ["141", "189"], ["19", "184"], ["159", "184"], ["169", "184"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "79"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["101", "104"], ["101", "112"], ["101", "101"], ["101", "109"], ["209", "209"], ["209", "212"], ["209", "217"], ["209", "220"], ["112", "115"], ["112", "136"], ["112", "128"], ["112", "119"], ["112", "121"], ["112", "112"], ["112", "130"], ["112", "127"], ["112", "135"], ["112", "125"], ["220", "228"], ["220", "223"], ["220", "220"], ["220", "229"], ["220", "227"], ["135", "150"], ["135", "151"], ["135", "141"], ["135", "142"], ["135", "143"], ["227", "244"], ["227", "245"], ["227", "242"], ["228", "233"], ["228", "236"], ["228", "234"], ["150", "169"], ["150", "161"], ["150", "166"], ["150", "157"], ["150", "159"], ["169", "169"], ["169", "178"], ["169", "176"], ["169", "177"], ["169", "172"], ["176", "196"], ["176", "189"], ["176", "191"], ["176", "195"], ["176", "190"], ["177", "184"], ["177", "182"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>6</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int from = in.nextInt() - 1)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>9</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "63": "<(LOCAL,int to: int)<SUB>10</SUB>>", "65": "<(IDENTIFIER,to,int to = in.nextInt() - 1)<SUB>10</SUB>>", "67": "<(nextInt,nextInt())<SUB>10</SUB>>", "69": "<(LITERAL,1,in.nextInt() - 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[from][to])<SUB>11</SUB>>", "73": "<(IDENTIFIER,graph,graph[from][to] = true)<SUB>11</SUB>>", "75": "<(IDENTIFIER,to,graph[from][to] = true)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,graph[to][from] = true)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,graph[to])<SUB>12</SUB>>", "81": "<(IDENTIFIER,to,graph[to][from] = true)<SUB>12</SUB>>", "83": "<(LITERAL,true,graph[to][from] = true)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,int max = 1 &lt;&lt; n)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "89": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,long[][] dp = new long[max][n])<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.alloc,new long[max][n])>", "95": "<(IDENTIFIER,n,new long[max][n])<SUB>16</SUB>>", "97": "<(LOCAL,int mask: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,mask,int mask = 1)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.lessThan,mask &lt; max)<SUB>17</SUB>>", "103": "<(IDENTIFIER,max,mask &lt; max)<SUB>17</SUB>>", "105": "<(IDENTIFIER,mask,mask++)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.assignment,int countMask = Integer.bitCount(mask))<SUB>19</SUB>>", "121": "<(bitCount,Integer.bitCount(mask))<SUB>19</SUB>>", "123": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.assignment,boolean existSubSeti = (mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "129": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>20</SUB>>", "131": "<(LITERAL,1,1 &lt;&lt; i)<SUB>20</SUB>>", "133": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.logicalAnd,countMask == 1 &amp;&amp; existSubSeti)<SUB>21</SUB>>", "137": "<(IDENTIFIER,countMask,countMask == 1)<SUB>21</SUB>>", "139": "<(IDENTIFIER,existSubSeti,countMask == 1 &amp;&amp; existSubSeti)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.assignment,dp[mask][i] = 1)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>22</SUB>>", "145": "<(IDENTIFIER,mask,dp[mask][i] = 1)<SUB>22</SUB>>", "147": "<(LITERAL,1,dp[mask][i] = 1)<SUB>22</SUB>>", "149": "<(CONTROL_STRUCTURE,if (countMask &gt; 1 &amp;&amp; existSubSeti),if (countMask &gt; 1 &amp;&amp; existSubSeti))<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.greaterThan,countMask &gt; 1)<SUB>24</SUB>>", "153": "<(LITERAL,1,countMask &gt; 1)<SUB>24</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.assignment,int mask1 = mask ^ (1 &lt;&lt; i))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>25</SUB>>", "165": "<(LOCAL,int j: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>26</SUB>>", "171": "<(IDENTIFIER,n,j &lt; n)<SUB>26</SUB>>", "173": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,if (graph[j][i] &amp;&amp; i != firstMask(mask, n)),if (graph[j][i] &amp;&amp; i != firstMask(mask, n)))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,graph[j][i])<SUB>27</SUB>>", "179": "<(IDENTIFIER,graph,graph[j][i] &amp;&amp; i != firstMask(mask, n))<SUB>27</SUB>>", "181": "<(IDENTIFIER,i,graph[j][i] &amp;&amp; i != firstMask(mask, n))<SUB>27</SUB>>", "183": "<(IDENTIFIER,i,i != firstMask(mask, n))<SUB>27</SUB>>", "185": "<(IDENTIFIER,this,firstMask(mask, n))<SUB>27</SUB>>", "187": "<(IDENTIFIER,n,firstMask(mask, n))<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>28</SUB>>", "193": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dp[mask1][j])<SUB>28</SUB>>", "197": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "199": "<(IDENTIFIER,j,dp[mask][i] += dp[mask1][j])<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.assignment,long counter = 0)<SUB>35</SUB>>", "203": "<(LITERAL,0,long counter = 0)<SUB>35</SUB>>", "205": "<(LOCAL,int mask: int)<SUB>36</SUB>>", "207": "<(IDENTIFIER,mask,int mask = 1)<SUB>36</SUB>>", "209": "<(&lt;operator&gt;.lessThan,mask &lt; max)<SUB>36</SUB>>", "211": "<(IDENTIFIER,max,mask &lt; max)<SUB>36</SUB>>", "213": "<(IDENTIFIER,mask,mask++)<SUB>36</SUB>>", "215": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>37</SUB>>", "217": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>37</SUB>>", "219": "<(LITERAL,0,int i = 0)<SUB>37</SUB>>", "221": "<(IDENTIFIER,i,i &lt; n)<SUB>37</SUB>>", "223": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "227": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "229": "<(bitCount,Integer.bitCount(mask))<SUB>38</SUB>>", "231": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>38</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "235": "<(IDENTIFIER,graph,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[firstMask(mask, n)][i])<SUB>38</SUB>>", "237": "<(IDENTIFIER,this,firstMask(mask, n))<SUB>38</SUB>>", "239": "<(IDENTIFIER,n,firstMask(mask, n))<SUB>38</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "243": "<(IDENTIFIER,counter,counter += dp[mask][i])<SUB>39</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>39</SUB>>", "247": "<(IDENTIFIER,mask,counter += dp[mask][i])<SUB>39</SUB>>", "249": "<(println,System.out.println(counter / 2))<SUB>44</SUB>>", "251": "<(IDENTIFIER,System,System.out.println(counter / 2))<SUB>44</SUB>>", "253": "<(&lt;operator&gt;.division,counter / 2)<SUB>44</SUB>>", "255": "<(LITERAL,2,counter / 2)<SUB>44</SUB>>", "257": "<(IDENTIFIER,in,close())<SUB>45</SUB>>", "259": "<(MODIFIER,STATIC)>"}}