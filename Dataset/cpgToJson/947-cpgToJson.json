{"edges": [["19", "20"], ["19", "21"], ["19", "86"], ["19", "87"], ["19", "88"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "46"], ["21", "47"], ["21", "54"], ["21", "55"], ["21", "64"], ["21", "65"], ["21", "73"], ["21", "74"], ["21", "79"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "72"], ["68", "69"], ["68", "71"], ["69", "70"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "40"], ["37", "51"], ["47", "58"], ["55", "69"], ["65", "77"], ["74", "82"], ["79", "88"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["49", "47"], ["57", "55"], ["67", "65"], ["76", "74"], ["80", "83"], ["83", "79"], ["40", "43"], ["43", "39"], ["51", "49"], ["58", "62"], ["59", "57"], ["68", "67"], ["77", "76"], ["82", "80"], ["61", "59"], ["69", "68"], ["62", "61"], ["19", "24"], ["20", "88"], ["22", "88"], ["25", "88"], ["27", "88"], ["34", "88"], ["32", "88"], ["32", "88"], ["39", "88"], ["43", "88"], ["39", "88"], ["37", "88"], ["37", "88"], ["51", "88"], ["49", "88"], ["47", "88"], ["47", "88"], ["61", "88"], ["59", "88"], ["57", "88"], ["55", "88"], ["55", "88"], ["68", "88"], ["68", "88"], ["67", "88"], ["65", "88"], ["65", "88"], ["76", "88"], ["74", "88"], ["74", "88"], ["79", "88"], ["83", "88"], ["83", "88"], ["79", "88"], ["79", "88"], ["59", "88"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["40", "37"], ["40", "37"], ["43", "37"], ["43", "37"], ["19", "47"], ["51", "47"], ["51", "47"], ["19", "55"], ["59", "55"], ["59", "55"], ["67", "65"], ["67", "65"], ["19", "74"], ["65", "74"], ["22", "25"], ["19", "25"], ["83", "79"], ["83", "79"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["40", "39"], ["40", "39"], ["43", "39"], ["43", "39"], ["19", "49"], ["51", "49"], ["51", "49"], ["19", "57"], ["59", "57"], ["59", "57"], ["69", "67"], ["55", "67"], ["19", "67"], ["19", "76"], ["65", "76"], ["40", "83"], ["19", "83"], ["74", "83"], ["19", "40"], ["27", "40"], ["19", "43"], ["32", "43"], ["19", "51"], ["37", "51"], ["19", "59"], ["47", "59"], ["69", "68"], ["55", "68"], ["19", "68"], ["19", "61"], ["47", "61"], ["19", "69"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Reader())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Reader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Reader())<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>5</SUB>>", "29": "<(nextLong,nextLong())<SUB>5</SUB>>", "31": "<(LOCAL,long k: long)<SUB>6</SUB>>", "33": "<(IDENTIFIER,k,long k = nextLong())<SUB>6</SUB>>", "35": "<(IDENTIFIER,in,nextLong())<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.assignment,long val = 2 * n + 2 * k)<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.addition,2 * n + 2 * k)<SUB>7</SUB>>", "41": "<(LITERAL,2,2 * n)<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.multiplication,2 * k)<SUB>7</SUB>>", "45": "<(IDENTIFIER,k,2 * k)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,long D = 9 + 4 * val)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.addition,9 + 4 * val)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.multiplication,4 * val)<SUB>8</SUB>>", "53": "<(IDENTIFIER,val,4 * val)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,long sqrtD = (long) Math.sqrt((double) D))<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.cast,(long) Math.sqrt((double) D))<SUB>9</SUB>>", "59": "<(sqrt,Math.sqrt((double) D))<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.cast,(double) D)<SUB>9</SUB>>", "63": "<(IDENTIFIER,D,(double) D)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,double r1 = (-3 + sqrtD) / 2)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.division,(-3 + sqrtD) / 2)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.minus,-3)<SUB>10</SUB>>", "71": "<(IDENTIFIER,sqrtD,-3 + sqrtD)<SUB>10</SUB>>", "73": "<(LOCAL,long r1DAsh: long)<SUB>11</SUB>>", "75": "<(IDENTIFIER,r1DAsh,long r1DAsh = (long) r1)<SUB>11</SUB>>", "77": "<(TYPE_REF,long,long)<SUB>11</SUB>>", "79": "<(println,System.out.println(n - r1DAsh))<SUB>12</SUB>>", "81": "<(IDENTIFIER,System,System.out.println(n - r1DAsh))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.subtraction,n - r1DAsh)<SUB>12</SUB>>", "85": "<(IDENTIFIER,r1DAsh,n - r1DAsh)<SUB>12</SUB>>", "87": "<(MODIFIER,STATIC)>"}}