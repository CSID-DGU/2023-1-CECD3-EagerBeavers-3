{"edges": [["24", "26"], ["24", "219"], ["24", "220"], ["24", "221"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "34"], ["26", "35"], ["26", "36"], ["26", "40"], ["26", "44"], ["26", "45"], ["26", "6"], ["26", "49"], ["26", "52"], ["26", "53"], ["26", "54"], ["26", "58"], ["26", "184"], ["26", "208"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["52", "5"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "75"], ["68", "76"], ["68", "80"], ["68", "8"], ["68", "147"], ["68", "150"], ["68", "174"], ["68", "177"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "89"], ["80", "91"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "104"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["104", "105"], ["104", "106"], ["104", "133"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "124"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["135", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "155"], ["150", "164"], ["151", "152"], ["151", "153"], ["153", "154"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["159", "7"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "9"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "196"], ["184", "198"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["198", "199"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["27", "33"], ["30", "38"], ["36", "42"], ["40", "47"], ["45", "51"], ["49", "52"], ["52", "56"], ["54", "60"], ["208", "221"], ["29", "27"], ["31", "30"], ["38", "36"], ["42", "40"], ["47", "45"], ["51", "49"], ["56", "54"], ["60", "63"], ["63", "70"], ["63", "186"], ["66", "63"], ["186", "194"], ["189", "202"], ["189", "211"], ["196", "194"], ["209", "217"], ["212", "208"], ["33", "31"], ["69", "78"], ["76", "82"], ["147", "153"], ["174", "178"], ["177", "66"], ["191", "189"], ["199", "196"], ["211", "209"], ["214", "212"], ["70", "73"], ["73", "69"], ["78", "76"], ["82", "87"], ["85", "95"], ["85", "147"], ["89", "87"], ["151", "158"], ["151", "168"], ["178", "183"], ["181", "177"], ["192", "191"], ["200", "204"], ["203", "199"], ["215", "214"], ["87", "85"], ["153", "151"], ["156", "160"], ["159", "174"], ["183", "181"], ["194", "192"], ["202", "200"], ["204", "203"], ["217", "215"], ["93", "110"], ["93", "89"], ["158", "156"], ["160", "159"], ["166", "170"], ["169", "174"], ["95", "99"], ["98", "93"], ["106", "139"], ["133", "89"], ["168", "166"], ["170", "169"], ["99", "102"], ["102", "98"], ["108", "106"], ["135", "133"], ["109", "116"], ["114", "108"], ["138", "135"], ["110", "109"], ["115", "125"], ["124", "114"], ["139", "143"], ["142", "138"], ["116", "120"], ["119", "115"], ["125", "129"], ["128", "124"], ["143", "146"], ["146", "142"], ["120", "123"], ["123", "119"], ["129", "132"], ["132", "128"], ["24", "29"], ["25", "221"], ["27", "221"], ["30", "221"], ["30", "221"], ["36", "221"], ["40", "221"], ["42", "221"], ["40", "221"], ["40", "221"], ["45", "221"], ["45", "221"], ["45", "221"], ["49", "221"], ["52", "221"], ["52", "221"], ["54", "221"], ["54", "221"], ["54", "221"], ["63", "221"], ["63", "221"], ["186", "221"], ["189", "221"], ["189", "221"], ["208", "221"], ["214", "221"], ["208", "221"], ["208", "221"], ["203", "221"], ["199", "221"], ["199", "221"], ["196", "221"], ["73", "221"], ["69", "221"], ["69", "221"], ["76", "221"], ["82", "221"], ["85", "221"], ["85", "221"], ["85", "221"], ["147", "221"], ["151", "221"], ["151", "221"], ["151", "221"], ["166", "221"], ["169", "221"], ["169", "221"], ["169", "221"], ["156", "221"], ["159", "221"], ["159", "221"], ["159", "221"], ["174", "221"], ["174", "221"], ["174", "221"], ["177", "221"], ["177", "221"], ["177", "221"], ["66", "221"], ["93", "221"], ["93", "221"], ["109", "221"], ["109", "221"], ["108", "221"], ["114", "221"], ["108", "221"], ["106", "221"], ["106", "221"], ["135", "221"], ["139", "221"], ["138", "221"], ["135", "221"], ["133", "221"], ["133", "221"], ["89", "221"], ["93", "221"], ["24", "25"], ["24", "27"], ["38", "36"], ["42", "40"], ["47", "45"], ["24", "49"], ["56", "54"], ["27", "30"], ["24", "30"], ["49", "52"], ["24", "52"], ["24", "60"], ["24", "186"], ["199", "208"], ["54", "208"], ["30", "38"], ["24", "38"], ["38", "42"], ["24", "42"], ["36", "47"], ["24", "47"], ["47", "56"], ["24", "56"], ["60", "63"], ["66", "63"], ["24", "63"], ["56", "63"], ["63", "66"], ["24", "66"], ["73", "69"], ["78", "76"], ["24", "147"], ["174", "177"], ["186", "189"], ["196", "189"], ["24", "189"], ["191", "189"], ["191", "189"], ["189", "196"], ["24", "196"], ["24", "82"], ["87", "174"], ["24", "174"], ["169", "174"], ["159", "174"], ["54", "191"], ["24", "191"], ["54", "199"], ["177", "199"], ["24", "199"], ["54", "214"], ["191", "214"], ["24", "214"], ["42", "73"], ["24", "73"], ["24", "78"], ["82", "85"], ["89", "85"], ["24", "85"], ["87", "85"], ["99", "89"], ["143", "89"], ["24", "89"], ["76", "151"], ["133", "151"], ["24", "151"], ["153", "151"], ["24", "156"], ["54", "203"], ["177", "203"], ["24", "203"], ["52", "87"], ["174", "87"], ["99", "87"], ["143", "87"], ["24", "87"], ["24", "153"], ["156", "159"], ["24", "159"], ["45", "159"], ["69", "159"], ["93", "159"], ["124", "159"], ["40", "159"], ["93", "159"], ["109", "159"], ["24", "166"], ["24", "93"], ["45", "93"], ["69", "93"], ["124", "93"], ["40", "93"], ["159", "93"], ["109", "93"], ["108", "106"], ["108", "106"], ["135", "133"], ["135", "133"], ["135", "133"], ["166", "169"], ["24", "169"], ["45", "169"], ["69", "169"], ["93", "169"], ["124", "169"], ["151", "169"], ["87", "99"], ["24", "99"], ["85", "99"], ["109", "108"], ["109", "108"], ["114", "108"], ["139", "135"], ["24", "135"], ["76", "135"], ["133", "135"], ["139", "135"], ["110", "109"], ["110", "109"], ["24", "109"], ["115", "114"], ["115", "114"], ["124", "114"], ["124", "114"], ["139", "138"], ["139", "138"], ["24", "110"], ["93", "110"], ["45", "115"], ["93", "115"], ["45", "124"], ["115", "124"], ["135", "139"], ["24", "139"], ["106", "139"], ["129", "143"], ["24", "143"], ["129", "143"], ["99", "120"], ["24", "120"], ["99", "120"], ["120", "129"], ["24", "129"], ["120", "129"], ["63", "73"], ["63", "85"], ["63", "178"], ["63", "69"], ["63", "151"], ["63", "153"], ["63", "76"], ["63", "87"], ["63", "181"], ["63", "174"], ["63", "70"], ["63", "183"], ["63", "66"], ["63", "82"], ["63", "177"], ["63", "147"], ["63", "63"], ["63", "78"], ["189", "192"], ["189", "196"], ["189", "189"], ["189", "204"], ["189", "191"], ["189", "194"], ["189", "202"], ["189", "200"], ["189", "199"], ["189", "203"], ["85", "98"], ["85", "102"], ["85", "85"], ["85", "95"], ["85", "87"], ["85", "93"], ["85", "89"], ["85", "99"], ["151", "169"], ["151", "168"], ["151", "170"], ["151", "158"], ["151", "160"], ["151", "166"], ["151", "159"], ["151", "156"], ["93", "115"], ["93", "120"], ["93", "146"], ["93", "128"], ["93", "114"], ["93", "132"], ["93", "119"], ["93", "129"], ["93", "138"], ["93", "139"], ["93", "108"], ["93", "116"], ["93", "142"], ["93", "123"], ["93", "106"], ["93", "143"], ["93", "135"], ["93", "110"], ["93", "124"], ["93", "125"], ["93", "109"], ["93", "133"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "32": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "34": "<(LOCAL,int n: int)<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "38": "<(nextInt,nextInt())<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>3</SUB>>", "42": "<(nextInt,nextInt())<SUB>3</SUB>>", "44": "<(LOCAL,int[] ar: int[])<SUB>4</SUB>>", "46": "<(IDENTIFIER,ar,int[] ar = new int[n])<SUB>4</SUB>>", "48": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY disks = new ArrayList&lt;&gt;())<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>5</SUB>>", "5": "<(IDENTIFIER,disks,new ArrayList&lt;&gt;())<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.assignment,double[] ans = new double[n])<SUB>6</SUB>>", "56": "<(&lt;operator&gt;.alloc,new double[n])>", "58": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "60": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "62": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "64": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "68": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "70": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>8</SUB>>", "72": "<(IDENTIFIER,i,ar[i] = nextInt())<SUB>8</SUB>>", "74": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "76": "<(&lt;operator&gt;.assignment,double max = -1)<SUB>9</SUB>>", "78": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "80": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; disks.size()); j++),for (int j = 0; Some(j &lt; disks.size()); j++))<SUB>10</SUB>>", "82": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "84": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "86": "<(IDENTIFIER,j,j &lt; disks.size())<SUB>10</SUB>>", "88": "<(IDENTIFIER,disks,size())<SUB>10</SUB>>", "90": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "92": "<(CONTROL_STRUCTURE,if (inRange(ar[i], disks.get(j).a, r)),if (inRange(ar[i], disks.get(j).a, r)))<SUB>11</SUB>>", "94": "<(IDENTIFIER,this,inRange(ar[i], disks.get(j).a, r))<SUB>11</SUB>>", "96": "<(IDENTIFIER,ar,inRange(ar[i], disks.get(j).a, r))<SUB>11</SUB>>", "98": "<(&lt;operator&gt;.fieldAccess,disks.get(j).a)<SUB>11</SUB>>", "100": "<(IDENTIFIER,disks,get(j))<SUB>11</SUB>>", "102": "<(FIELD_IDENTIFIER,a,a)<SUB>11</SUB>>", "104": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "106": "<(&lt;operator&gt;.assignment,double h = 4 * r * r - (ar[i] - disks.get(j).a) * (ar[i] - disks.get(j).a))<SUB>12</SUB>>", "108": "<(&lt;operator&gt;.subtraction,4 * r * r - (ar[i] - disks.get(j).a) * (ar[i] - disks.get(j).a))<SUB>12</SUB>>", "110": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>12</SUB>>", "112": "<(IDENTIFIER,r,4 * r)<SUB>12</SUB>>", "114": "<(&lt;operator&gt;.multiplication,(ar[i] - disks.get(j).a) * (ar[i] - disks.get(j).a))<SUB>12</SUB>>", "116": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>12</SUB>>", "118": "<(IDENTIFIER,i,ar[i] - disks.get(j).a)<SUB>12</SUB>>", "120": "<(get,get(j))<SUB>12</SUB>>", "122": "<(IDENTIFIER,j,get(j))<SUB>12</SUB>>", "124": "<(&lt;operator&gt;.subtraction,ar[i] - disks.get(j).a)<SUB>12</SUB>>", "126": "<(IDENTIFIER,ar,ar[i] - disks.get(j).a)<SUB>12</SUB>>", "128": "<(&lt;operator&gt;.fieldAccess,disks.get(j).a)<SUB>12</SUB>>", "130": "<(IDENTIFIER,disks,get(j))<SUB>12</SUB>>", "132": "<(FIELD_IDENTIFIER,a,a)<SUB>12</SUB>>", "134": "<(IDENTIFIER,max,max = max(max, Math.sqrt(h) + disks.get(j).b))<SUB>13</SUB>>", "136": "<(IDENTIFIER,Math,max(max, Math.sqrt(h) + disks.get(j).b))<SUB>13</SUB>>", "138": "<(&lt;operator&gt;.addition,Math.sqrt(h) + disks.get(j).b)<SUB>13</SUB>>", "140": "<(IDENTIFIER,Math,Math.sqrt(h))<SUB>13</SUB>>", "142": "<(&lt;operator&gt;.fieldAccess,disks.get(j).b)<SUB>13</SUB>>", "144": "<(IDENTIFIER,disks,get(j))<SUB>13</SUB>>", "146": "<(FIELD_IDENTIFIER,b,b)<SUB>13</SUB>>", "147": "<(&lt;operator&gt;.assignment,ANY p = null)<SUB>16</SUB>>", "149": "<(LITERAL,null,ANY p = null)<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.equals,max == -1)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.minus,-1)<SUB>17</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "157": "<(IDENTIFIER,p,p = new mPoint(ar[i], r))<SUB>18</SUB>>", "159": "<(&lt;init&gt;,new mPoint(ar[i], r))<SUB>18</SUB>>", "160": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>18</SUB>>", "162": "<(IDENTIFIER,i,new mPoint(ar[i], r))<SUB>18</SUB>>", "164": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "166": "<(&lt;operator&gt;.assignment,p = new mPoint(ar[i], max))<SUB>20</SUB>>", "168": "<(&lt;operator&gt;.alloc,new mPoint(ar[i], max))<SUB>20</SUB>>", "9": "<(IDENTIFIER,p,new mPoint(ar[i], max))<SUB>20</SUB>>", "171": "<(IDENTIFIER,ar,new mPoint(ar[i], max))<SUB>20</SUB>>", "173": "<(IDENTIFIER,max,new mPoint(ar[i], max))<SUB>20</SUB>>", "175": "<(IDENTIFIER,disks,add(p))<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.assignment,ans[i] = p.b)<SUB>23</SUB>>", "179": "<(IDENTIFIER,ans,ans[i] = p.b)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,p.b)<SUB>23</SUB>>", "183": "<(FIELD_IDENTIFIER,b,b)<SUB>23</SUB>>", "185": "<(LOCAL,int i: int)<SUB>25</SUB>>", "187": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; ans.length - 1)<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.subtraction,ans.length - 1)<SUB>25</SUB>>", "193": "<(IDENTIFIER,ans,ans.length - 1)<SUB>25</SUB>>", "195": "<(LITERAL,1,ans.length - 1)<SUB>25</SUB>>", "197": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "199": "<(print,System.out.print(ans[i] + &quot; &quot;))<SUB>26</SUB>>", "201": "<(IDENTIFIER,System,System.out.print(ans[i] + &quot; &quot;))<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.addition,ans[i] + &quot; &quot;)<SUB>26</SUB>>", "205": "<(IDENTIFIER,ans,ans[i] + &quot; &quot;)<SUB>26</SUB>>", "207": "<(LITERAL,&quot; &quot;,ans[i] + &quot; &quot;)<SUB>26</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "211": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "213": "<(IDENTIFIER,ans,System.out.println(ans[ans.length - 1]))<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.fieldAccess,ans.length)<SUB>28</SUB>>", "217": "<(FIELD_IDENTIFIER,length,length)<SUB>28</SUB>>", "219": "<(MODIFIER,PUBLIC)>", "221": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}