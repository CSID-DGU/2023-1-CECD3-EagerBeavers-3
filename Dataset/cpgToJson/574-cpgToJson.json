{"edges": [["19", "20"], ["19", "21"], ["19", "142"], ["19", "143"], ["19", "144"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "43"], ["21", "44"], ["21", "48"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "42"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "64"], ["58", "77"], ["58", "80"], ["58", "81"], ["58", "88"], ["58", "101"], ["58", "114"], ["58", "117"], ["58", "124"], ["58", "137"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["22", "29"], ["25", "46"], ["44", "50"], ["24", "22"], ["46", "44"], ["50", "53"], ["53", "144"], ["53", "62"], ["56", "53"], ["27", "35"], ["30", "25"], ["60", "66"], ["77", "84"], ["81", "90"], ["114", "120"], ["117", "126"], ["137", "56"], ["29", "27"], ["62", "60"], ["65", "74"], ["65", "77"], ["83", "81"], ["89", "98"], ["89", "103"], ["102", "111"], ["102", "114"], ["119", "117"], ["125", "134"], ["125", "140"], ["138", "137"], ["33", "40"], ["36", "30"], ["66", "65"], ["71", "56"], ["84", "85"], ["85", "83"], ["90", "89"], ["95", "56"], ["103", "102"], ["108", "56"], ["120", "121"], ["121", "119"], ["126", "125"], ["131", "56"], ["140", "138"], ["35", "33"], ["38", "36"], ["72", "71"], ["96", "95"], ["109", "108"], ["132", "131"], ["40", "38"], ["74", "72"], ["98", "96"], ["111", "109"], ["134", "132"], ["19", "24"], ["20", "144"], ["22", "144"], ["30", "144"], ["33", "144"], ["36", "144"], ["36", "144"], ["36", "144"], ["30", "144"], ["25", "144"], ["46", "144"], ["44", "144"], ["44", "144"], ["50", "144"], ["53", "144"], ["53", "144"], ["53", "144"], ["56", "144"], ["19", "20"], ["19", "22"], ["46", "44"], ["22", "25"], ["19", "25"], ["33", "25"], ["30", "25"], ["19", "50"], ["19", "27"], ["19", "42"], ["25", "46"], ["19", "46"], ["50", "53"], ["56", "53"], ["19", "53"], ["44", "53"], ["53", "56"], ["19", "56"], ["62", "60"], ["19", "77"], ["19", "81"], ["85", "81"], ["85", "81"], ["19", "114"], ["19", "117"], ["121", "117"], ["121", "117"], ["27", "30"], ["19", "30"], ["33", "30"], ["36", "30"], ["66", "77"], ["103", "114"], ["131", "137"], ["108", "137"], ["95", "137"], ["71", "137"], ["19", "137"], ["19", "33"], ["19", "41"], ["46", "62"], ["19", "62"], ["66", "65"], ["66", "65"], ["19", "65"], ["19", "83"], ["85", "83"], ["85", "83"], ["90", "89"], ["85", "89"], ["19", "89"], ["103", "102"], ["103", "102"], ["19", "102"], ["19", "119"], ["121", "119"], ["121", "119"], ["126", "125"], ["121", "125"], ["19", "125"], ["33", "36"], ["19", "36"], ["60", "66"], ["19", "66"], ["137", "71"], ["131", "71"], ["108", "71"], ["95", "71"], ["19", "71"], ["121", "85"], ["19", "85"], ["77", "85"], ["81", "90"], ["19", "90"], ["137", "95"], ["131", "95"], ["108", "95"], ["71", "95"], ["19", "95"], ["89", "103"], ["19", "103"], ["137", "108"], ["131", "108"], ["95", "108"], ["71", "108"], ["19", "108"], ["85", "121"], ["19", "121"], ["114", "121"], ["117", "126"], ["19", "126"], ["137", "131"], ["108", "131"], ["95", "131"], ["71", "131"], ["19", "131"], ["53", "60"], ["53", "66"], ["53", "56"], ["53", "65"], ["53", "53"], ["53", "62"], ["65", "77"], ["65", "89"], ["65", "81"], ["65", "84"], ["65", "85"], ["65", "72"], ["65", "74"], ["65", "90"], ["65", "83"], ["65", "71"], ["89", "96"], ["89", "98"], ["89", "102"], ["89", "103"], ["89", "95"], ["102", "120"], ["102", "114"], ["102", "119"], ["102", "121"], ["102", "126"], ["102", "117"], ["102", "108"], ["102", "125"], ["102", "111"], ["102", "109"], ["125", "131"], ["125", "132"], ["125", "134"], ["125", "138"], ["125", "140"], ["125", "137"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>4</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>4</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "31": "<(IDENTIFIER,$obj1,new BufferedReader(new InputStreamReader(System.in)))>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>4</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>4</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "43": "<(LOCAL,int t: int)<SUB>9</SUB>>", "45": "<(IDENTIFIER,t,int t = nextInt())<SUB>9</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "49": "<(LOCAL,int z: int)<SUB>10</SUB>>", "51": "<(IDENTIFIER,z,int z = 0)<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.lessThan,z &lt; t)<SUB>10</SUB>>", "55": "<(IDENTIFIER,t,z &lt; t)<SUB>10</SUB>>", "57": "<(IDENTIFIER,z,++z)<SUB>10</SUB>>", "59": "<(LOCAL,int n: int)<SUB>11</SUB>>", "61": "<(IDENTIFIER,n,int n = nextInt())<SUB>11</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.equals,n % 2 == 1)<SUB>12</SUB>>", "67": "<(IDENTIFIER,n,n % 2)<SUB>12</SUB>>", "69": "<(LITERAL,1,n % 2 == 1)<SUB>12</SUB>>", "71": "<(println,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "73": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "75": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignmentDivision,n /= 2)<SUB>16</SUB>>", "79": "<(LITERAL,2,n /= 2)<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.assignment,int sqrt = (int) Math.sqrt(n))<SUB>17</SUB>>", "83": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n))<SUB>17</SUB>>", "85": "<(sqrt,Math.sqrt(n))<SUB>17</SUB>>", "87": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.equals,sqrt * sqrt == n)<SUB>18</SUB>>", "91": "<(IDENTIFIER,sqrt,sqrt * sqrt)<SUB>18</SUB>>", "93": "<(IDENTIFIER,n,sqrt * sqrt == n)<SUB>18</SUB>>", "95": "<(println,System.out.println(&quot;YES&quot;))<SUB>19</SUB>>", "97": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>19</SUB>>", "99": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>19</SUB>>", "101": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>22</SUB>>", "103": "<(&lt;operator&gt;.modulo,n % 2)<SUB>22</SUB>>", "105": "<(LITERAL,2,n % 2)<SUB>22</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "113": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>24</SUB>>", "115": "<(IDENTIFIER,n,n /= 2)<SUB>26</SUB>>", "117": "<(&lt;operator&gt;.assignment,sqrt = (int) Math.sqrt(n))<SUB>27</SUB>>", "119": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n))<SUB>27</SUB>>", "121": "<(sqrt,Math.sqrt(n))<SUB>27</SUB>>", "123": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>27</SUB>>", "125": "<(&lt;operator&gt;.equals,sqrt * sqrt == n)<SUB>28</SUB>>", "127": "<(IDENTIFIER,sqrt,sqrt * sqrt)<SUB>28</SUB>>", "129": "<(IDENTIFIER,n,sqrt * sqrt == n)<SUB>28</SUB>>", "131": "<(println,System.out.println(&quot;YES&quot;))<SUB>29</SUB>>", "133": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>29</SUB>>", "135": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>29</SUB>>", "137": "<(println,System.out.println(&quot;NO&quot;))<SUB>32</SUB>>", "139": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>32</SUB>>", "141": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>32</SUB>>", "143": "<(MODIFIER,STATIC)>"}}