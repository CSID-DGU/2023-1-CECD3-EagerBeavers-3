{"edges": [["17", "19"], ["17", "149"], ["17", "150"], ["17", "151"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "41"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "47"], ["41", "53"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["47", "48"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["53", "54"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "60"], ["54", "67"], ["54", "68"], ["54", "71"], ["54", "72"], ["54", "77"], ["54", "78"], ["54", "81"], ["54", "82"], ["54", "85"], ["54", "114"], ["54", "127"], ["54", "144"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "104"], ["89", "107"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "126"], ["117", "118"], ["117", "125"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "143"], ["130", "131"], ["130", "140"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["21", "28"], ["26", "33"], ["31", "38"], ["36", "43"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["42", "51"], ["42", "56"], ["43", "42"], ["48", "151"], ["49", "48"], ["56", "63"], ["60", "68"], ["68", "74"], ["72", "78"], ["78", "82"], ["82", "86"], ["114", "136"], ["127", "147"], ["144", "151"], ["51", "49"], ["62", "60"], ["74", "72"], ["86", "92"], ["86", "120"], ["116", "114"], ["129", "127"], ["145", "144"], ["63", "62"], ["104", "110"], ["107", "86"], ["117", "116"], ["130", "129"], ["147", "145"], ["91", "100"], ["91", "104"], ["109", "107"], ["118", "117"], ["131", "140"], ["140", "130"], ["92", "91"], ["97", "104"], ["110", "109"], ["119", "118"], ["132", "131"], ["99", "97"], ["120", "119"], ["134", "132"], ["100", "99"], ["136", "134"], ["17", "23"], ["18", "151"], ["21", "151"], ["26", "151"], ["33", "151"], ["31", "151"], ["31", "151"], ["36", "151"], ["36", "151"], ["43", "151"], ["43", "151"], ["42", "151"], ["42", "151"], ["42", "151"], ["48", "151"], ["48", "151"], ["48", "151"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["38", "36"], ["17", "23"], ["23", "28"], ["17", "28"], ["28", "33"], ["17", "33"], ["21", "38"], ["17", "38"], ["26", "38"], ["43", "42"], ["43", "42"], ["36", "42"], ["17", "42"], ["38", "43"], ["17", "43"], ["31", "43"], ["38", "48"], ["17", "48"], ["42", "56"], ["17", "56"], ["62", "60"], ["62", "60"], ["17", "68"], ["60", "72"], ["17", "72"], ["17", "78"], ["17", "82"], ["116", "114"], ["116", "114"], ["129", "127"], ["129", "127"], ["127", "144"], ["17", "144"], ["63", "62"], ["63", "62"], ["17", "62"], ["42", "62"], ["60", "74"], ["17", "74"], ["72", "86"], ["104", "86"], ["17", "86"], ["17", "104"], ["109", "107"], ["109", "107"], ["117", "116"], ["117", "116"], ["118", "116"], ["17", "116"], ["131", "129"], ["131", "129"], ["140", "129"], ["140", "129"], ["17", "129"], ["43", "63"], ["17", "63"], ["43", "63"], ["92", "104"], ["118", "117"], ["118", "117"], ["63", "117"], ["17", "117"], ["131", "130"], ["131", "130"], ["140", "130"], ["140", "130"], ["92", "91"], ["92", "91"], ["17", "91"], ["99", "97"], ["99", "97"], ["110", "109"], ["78", "109"], ["99", "109"], ["17", "109"], ["120", "118"], ["120", "118"], ["78", "118"], ["109", "118"], ["17", "118"], ["114", "131"], ["17", "131"], ["134", "131"], ["134", "131"], ["116", "131"], ["63", "140"], ["17", "140"], ["136", "140"], ["86", "92"], ["17", "92"], ["82", "110"], ["100", "110"], ["107", "110"], ["17", "110"], ["120", "119"], ["120", "119"], ["78", "119"], ["109", "119"], ["17", "119"], ["114", "132"], ["17", "132"], ["134", "132"], ["134", "132"], ["100", "99"], ["100", "99"], ["78", "99"], ["109", "99"], ["17", "99"], ["68", "120"], ["97", "120"], ["17", "120"], ["56", "134"], ["17", "134"], ["136", "134"], ["136", "134"], ["68", "100"], ["97", "100"], ["17", "100"], ["82", "100"], ["107", "100"], ["117", "136"], ["17", "136"], ["42", "48"], ["42", "68"], ["42", "49"], ["42", "60"], ["42", "51"], ["42", "120"], ["42", "136"], ["42", "116"], ["42", "145"], ["42", "114"], ["42", "131"], ["42", "72"], ["42", "56"], ["42", "132"], ["42", "74"], ["42", "119"], ["42", "144"], ["42", "129"], ["42", "134"], ["42", "82"], ["42", "140"], ["42", "130"], ["42", "118"], ["42", "147"], ["42", "117"], ["42", "63"], ["42", "127"], ["42", "78"], ["42", "62"], ["42", "86"], ["86", "107"], ["86", "104"], ["86", "92"], ["86", "91"], ["86", "110"], ["86", "109"], ["86", "86"], ["91", "99"], ["91", "97"], ["91", "100"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int m: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,m,int m = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,this,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(LOCAL,int wa: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,wa,int wa = n - m)<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,n - m)<SUB>5</SUB>>", "41": "<(CONTROL_STRUCTURE,if (n / k &lt;= wa),if (n / k &lt;= wa))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.division,n / k)<SUB>6</SUB>>", "45": "<(IDENTIFIER,k,n / k)<SUB>6</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "53": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "55": "<(LOCAL,int notFull: int)<SUB>9</SUB>>", "57": "<(IDENTIFIER,notFull,int notFull = wa)<SUB>9</SUB>>", "59": "<(LOCAL,int full: int)<SUB>10</SUB>>", "61": "<(IDENTIFIER,full,int full = n / k - wa)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.division,n / k)<SUB>10</SUB>>", "65": "<(IDENTIFIER,k,n / k)<SUB>10</SUB>>", "67": "<(LOCAL,long res: long)<SUB>11</SUB>>", "69": "<(IDENTIFIER,res,long res = 1)<SUB>11</SUB>>", "71": "<(LOCAL,int power: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,power,int power = full + 1)<SUB>12</SUB>>", "75": "<(IDENTIFIER,full,full + 1)<SUB>12</SUB>>", "77": "<(LOCAL,int mod: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,mod,int mod = 1000000009)<SUB>13</SUB>>", "81": "<(LOCAL,long powTwo: long)<SUB>14</SUB>>", "83": "<(IDENTIFIER,powTwo,long powTwo = 2)<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,while (power &gt; 0),while (power &gt; 0))<SUB>15</SUB>>", "87": "<(IDENTIFIER,power,power &gt; 0)<SUB>15</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.equals,(power &amp; 1) == 1)<SUB>16</SUB>>", "93": "<(IDENTIFIER,power,power &amp; 1)<SUB>16</SUB>>", "95": "<(LITERAL,1,(power &amp; 1) == 1)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.assignment,res = (res * powTwo) % mod)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.modulo,(res * powTwo) % mod)<SUB>17</SUB>>", "101": "<(IDENTIFIER,res,res * powTwo)<SUB>17</SUB>>", "103": "<(IDENTIFIER,mod,(res * powTwo) % mod)<SUB>17</SUB>>", "105": "<(IDENTIFIER,power,power &gt;&gt;= 1)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.assignment,powTwo = (powTwo * powTwo) % mod)<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.modulo,(powTwo * powTwo) % mod)<SUB>20</SUB>>", "111": "<(IDENTIFIER,powTwo,powTwo * powTwo)<SUB>20</SUB>>", "113": "<(IDENTIFIER,mod,(powTwo * powTwo) % mod)<SUB>20</SUB>>", "115": "<(IDENTIFIER,res,res = (((res - 2 + mod) % mod) * k) % mod)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.multiplication,((res - 2 + mod) % mod) * k)<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.addition,res - 2 + mod)<SUB>22</SUB>>", "121": "<(IDENTIFIER,res,res - 2)<SUB>22</SUB>>", "123": "<(IDENTIFIER,mod,res - 2 + mod)<SUB>22</SUB>>", "125": "<(IDENTIFIER,k,((res - 2 + mod) % mod) * k)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.assignment,res = ((res + notFull * (k - 1)) % mod + n % k) % mod)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.modulo,((res + notFull * (k - 1)) % mod + n % k) % mod)<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.modulo,(res + notFull * (k - 1)) % mod)<SUB>23</SUB>>", "133": "<(IDENTIFIER,res,res + notFull * (k - 1))<SUB>23</SUB>>", "135": "<(IDENTIFIER,notFull,notFull * (k - 1))<SUB>23</SUB>>", "137": "<(IDENTIFIER,k,k - 1)<SUB>23</SUB>>", "139": "<(IDENTIFIER,mod,(res + notFull * (k - 1)) % mod)<SUB>23</SUB>>", "141": "<(IDENTIFIER,n,n % k)<SUB>23</SUB>>", "143": "<(IDENTIFIER,mod,((res + notFull * (k - 1)) % mod + n % k) % mod)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}