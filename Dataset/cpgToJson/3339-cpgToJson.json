{"edges": [["19", "21"], ["19", "109"], ["19", "110"], ["19", "111"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "69"], ["21", "70"], ["21", "75"], ["21", "104"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "63"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "94"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["89", "92"], ["89", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["96", "99"], ["99", "100"], ["99", "101"], ["99", "102"], ["99", "103"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["70", "77"], ["104", "111"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "74"], ["54", "51"], ["72", "70"], ["77", "80"], ["80", "89"], ["80", "107"], ["83", "80"], ["105", "104"], ["57", "64"], ["63", "54"], ["74", "72"], ["87", "99"], ["94", "83"], ["107", "105"], ["58", "61"], ["61", "57"], ["64", "67"], ["67", "63"], ["89", "87"], ["96", "94"], ["99", "96"], ["19", "24"], ["20", "111"], ["22", "111"], ["25", "111"], ["27", "111"], ["34", "111"], ["32", "111"], ["32", "111"], ["37", "111"], ["37", "111"], ["42", "111"], ["42", "111"], ["42", "111"], ["51", "111"], ["51", "111"], ["70", "111"], ["70", "111"], ["77", "111"], ["80", "111"], ["80", "111"], ["80", "111"], ["104", "111"], ["104", "111"], ["104", "111"], ["89", "111"], ["89", "111"], ["87", "111"], ["87", "111"], ["99", "111"], ["99", "111"], ["99", "111"], ["96", "111"], ["94", "111"], ["94", "111"], ["83", "111"], ["57", "111"], ["57", "111"], ["63", "111"], ["67", "111"], ["63", "111"], ["63", "111"], ["54", "111"], ["96", "111"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["22", "25"], ["19", "25"], ["19", "48"], ["19", "77"], ["70", "104"], ["94", "104"], ["19", "104"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["32", "39"], ["19", "39"], ["39", "44"], ["19", "44"], ["48", "51"], ["54", "51"], ["19", "51"], ["44", "51"], ["51", "54"], ["19", "54"], ["61", "57"], ["67", "63"], ["77", "80"], ["83", "80"], ["19", "80"], ["27", "80"], ["89", "80"], ["99", "83"], ["19", "83"], ["89", "87"], ["89", "87"], ["89", "87"], ["89", "87"], ["96", "94"], ["96", "94"], ["96", "94"], ["34", "61"], ["67", "61"], ["19", "61"], ["61", "67"], ["19", "67"], ["99", "89"], ["19", "89"], ["80", "89"], ["37", "89"], ["57", "89"], ["42", "89"], ["63", "89"], ["19", "96"], ["70", "96"], ["94", "96"], ["99", "96"], ["99", "96"], ["99", "96"], ["99", "96"], ["89", "99"], ["19", "99"], ["87", "99"], ["80", "99"], ["51", "99"], ["51", "58"], ["51", "61"], ["51", "64"], ["51", "51"], ["51", "57"], ["51", "67"], ["51", "63"], ["51", "54"], ["80", "80"], ["80", "94"], ["80", "96"], ["80", "83"], ["80", "89"], ["80", "99"], ["80", "87"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "29": "<(nextInt,nextInt())<SUB>4</SUB>>", "31": "<(LOCAL,int M: int)<SUB>5</SUB>>", "33": "<(IDENTIFIER,M,int M = nextInt())<SUB>5</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] edgeFrom = new int[M])<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[M])>", "41": "<(LOCAL,int[] edgeTo: int[])<SUB>8</SUB>>", "43": "<(IDENTIFIER,edgeTo,int[] edgeTo = new int[M])<SUB>8</SUB>>", "45": "<(IDENTIFIER,M,new int[M])<SUB>8</SUB>>", "47": "<(LOCAL,int i: int)<SUB>9</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; M)<SUB>9</SUB>>", "53": "<(IDENTIFIER,M,i &lt; M)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,edgeFrom[i] = nextInt())<SUB>10</SUB>>", "59": "<(IDENTIFIER,edgeFrom,edgeFrom[i] = nextInt())<SUB>10</SUB>>", "61": "<(nextInt,nextInt())<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,edgeTo[i] = nextInt())<SUB>11</SUB>>", "65": "<(IDENTIFIER,edgeTo,edgeTo[i] = nextInt())<SUB>11</SUB>>", "67": "<(nextInt,nextInt())<SUB>11</SUB>>", "69": "<(LOCAL,int best: int)<SUB>14</SUB>>", "71": "<(IDENTIFIER,best,int best = Integer.MAX_VALUE)<SUB>14</SUB>>", "73": "<(IDENTIFIER,Integer,int best = Integer.MAX_VALUE)<SUB>14</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>15</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "81": "<(IDENTIFIER,i,i &lt; N)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.assignment,boolean[][] mat = makeAdjMat(N, edgeFrom, edgeTo))<SUB>16</SUB>>", "89": "<(makeAdjMat,makeAdjMat(N, edgeFrom, edgeTo))<SUB>16</SUB>>", "91": "<(IDENTIFIER,N,makeAdjMat(N, edgeFrom, edgeTo))<SUB>16</SUB>>", "93": "<(IDENTIFIER,edgeTo,makeAdjMat(N, edgeFrom, edgeTo))<SUB>16</SUB>>", "95": "<(IDENTIFIER,best,best = min(best, count(mat, i, M)))<SUB>17</SUB>>", "97": "<(IDENTIFIER,Math,min(best, count(mat, i, M)))<SUB>17</SUB>>", "99": "<(count,count(mat, i, M))<SUB>17</SUB>>", "101": "<(IDENTIFIER,mat,count(mat, i, M))<SUB>17</SUB>>", "103": "<(IDENTIFIER,M,count(mat, i, M))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "109": "<(MODIFIER,PUBLIC)>", "111": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}