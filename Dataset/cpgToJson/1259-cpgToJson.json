{"edges": [["27", "28"], ["27", "29"], ["27", "116"], ["27", "117"], ["27", "118"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "37"], ["29", "38"], ["29", "42"], ["29", "43"], ["29", "6"], ["29", "47"], ["29", "50"], ["29", "8"], ["29", "52"], ["29", "55"], ["29", "10"], ["29", "57"], ["29", "60"], ["29", "12"], ["29", "62"], ["29", "65"], ["29", "67"], ["29", "68"], ["29", "76"], ["29", "81"], ["29", "89"], ["29", "94"], ["29", "99"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["50", "5"], ["50", "51"], ["52", "53"], ["52", "54"], ["55", "7"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "9"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "11"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["70", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["85", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["99", "109"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["110", "111"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["30", "36"], ["33", "40"], ["38", "45"], ["43", "49"], ["47", "50"], ["50", "54"], ["52", "55"], ["55", "59"], ["57", "60"], ["60", "64"], ["62", "65"], ["65", "72"], ["68", "78"], ["76", "85"], ["81", "91"], ["89", "96"], ["94", "100"], ["32", "30"], ["34", "33"], ["40", "38"], ["45", "43"], ["49", "47"], ["54", "52"], ["59", "57"], ["64", "62"], ["70", "68"], ["78", "76"], ["83", "81"], ["91", "89"], ["96", "94"], ["100", "107"], ["100", "114"], ["36", "34"], ["72", "70"], ["85", "83"], ["104", "118"], ["105", "104"], ["111", "118"], ["107", "105"], ["112", "111"], ["114", "112"], ["27", "32"], ["28", "118"], ["30", "118"], ["33", "118"], ["33", "118"], ["38", "118"], ["45", "118"], ["43", "118"], ["43", "118"], ["47", "118"], ["50", "118"], ["52", "118"], ["55", "118"], ["57", "118"], ["60", "118"], ["62", "118"], ["65", "118"], ["68", "118"], ["68", "118"], ["76", "118"], ["76", "118"], ["85", "118"], ["85", "118"], ["83", "118"], ["81", "118"], ["81", "118"], ["91", "118"], ["89", "118"], ["89", "118"], ["94", "118"], ["96", "118"], ["94", "118"], ["94", "118"], ["100", "118"], ["100", "118"], ["100", "118"], ["104", "118"], ["104", "118"], ["27", "28"], ["27", "30"], ["40", "38"], ["45", "43"], ["27", "47"], ["27", "52"], ["27", "57"], ["27", "62"], ["70", "68"], ["70", "68"], ["70", "68"], ["78", "76"], ["78", "76"], ["83", "81"], ["83", "81"], ["91", "89"], ["91", "89"], ["96", "94"], ["96", "94"], ["30", "33"], ["27", "33"], ["47", "50"], ["27", "50"], ["52", "55"], ["27", "55"], ["57", "60"], ["27", "60"], ["62", "65"], ["27", "65"], ["33", "40"], ["27", "40"], ["40", "45"], ["27", "45"], ["60", "70"], ["27", "70"], ["72", "70"], ["72", "70"], ["65", "70"], ["68", "78"], ["27", "78"], ["38", "78"], ["76", "83"], ["27", "83"], ["85", "83"], ["85", "83"], ["85", "83"], ["81", "91"], ["27", "91"], ["72", "91"], ["89", "96"], ["27", "96"], ["85", "96"], ["78", "100"], ["27", "100"], ["50", "100"], ["43", "72"], ["27", "72"], ["55", "72"], ["70", "85"], ["27", "85"], ["72", "85"], ["70", "85"], ["27", "104"], ["94", "111"], ["27", "111"], ["100", "114"], ["100", "107"], ["100", "104"], ["100", "112"], ["100", "105"], ["100", "111"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "37": "<(LOCAL,BigInteger x: ANY)<SUB>4</SUB>>", "39": "<(IDENTIFIER,x,ANY x = nextBigInteger())<SUB>4</SUB>>", "41": "<(IDENTIFIER,sc,nextBigInteger())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,ANY k = nextBigInteger())<SUB>5</SUB>>", "45": "<(nextBigInteger,nextBigInteger())<SUB>5</SUB>>", "6": "<(LOCAL,BigInteger zero: ANY)<SUB>6</SUB>>", "48": "<(IDENTIFIER,zero,ANY zero = new BigInteger(&quot;0&quot;))<SUB>6</SUB>>", "50": "<(&lt;init&gt;,new BigInteger(&quot;0&quot;))<SUB>6</SUB>>", "51": "<(LITERAL,&quot;0&quot;,new BigInteger(&quot;0&quot;))<SUB>6</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY one = new BigInteger(&quot;1&quot;))<SUB>7</SUB>>", "54": "<(&lt;operator&gt;.alloc,new BigInteger(&quot;1&quot;))<SUB>7</SUB>>", "7": "<(IDENTIFIER,one,new BigInteger(&quot;1&quot;))<SUB>7</SUB>>", "10": "<(LOCAL,BigInteger two: ANY)<SUB>8</SUB>>", "58": "<(IDENTIFIER,two,ANY two = new BigInteger(&quot;2&quot;))<SUB>8</SUB>>", "60": "<(&lt;init&gt;,new BigInteger(&quot;2&quot;))<SUB>8</SUB>>", "61": "<(LITERAL,&quot;2&quot;,new BigInteger(&quot;2&quot;))<SUB>8</SUB>>", "62": "<(&lt;operator&gt;.assignment,ANY modulo = new BigInteger(&quot;1000000007&quot;))<SUB>9</SUB>>", "64": "<(&lt;operator&gt;.alloc,new BigInteger(&quot;1000000007&quot;))<SUB>9</SUB>>", "11": "<(IDENTIFIER,modulo,new BigInteger(&quot;1000000007&quot;))<SUB>9</SUB>>", "67": "<(LOCAL,BigInteger ans: ANY)<SUB>10</SUB>>", "69": "<(IDENTIFIER,ans,ANY ans = modPow(k.add(one), modulo))<SUB>10</SUB>>", "71": "<(IDENTIFIER,two,modPow(k.add(one), modulo))<SUB>10</SUB>>", "73": "<(IDENTIFIER,k,add(one))<SUB>10</SUB>>", "75": "<(IDENTIFIER,modulo,modPow(k.add(one), modulo))<SUB>10</SUB>>", "77": "<(IDENTIFIER,ans,ans = multiply(x))<SUB>11</SUB>>", "79": "<(IDENTIFIER,ans,multiply(x))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,ans = subtract(two.modPow(k, modulo)))<SUB>12</SUB>>", "83": "<(subtract,subtract(two.modPow(k, modulo)))<SUB>12</SUB>>", "85": "<(modPow,modPow(k, modulo))<SUB>12</SUB>>", "87": "<(IDENTIFIER,k,modPow(k, modulo))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,ans = add(one))<SUB>13</SUB>>", "91": "<(add,add(one))<SUB>13</SUB>>", "93": "<(IDENTIFIER,one,add(one))<SUB>13</SUB>>", "95": "<(IDENTIFIER,ans,ans = mod(modulo))<SUB>14</SUB>>", "97": "<(IDENTIFIER,ans,mod(modulo))<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,if (x.equals(zero)),if (x.equals(zero)))<SUB>15</SUB>>", "101": "<(IDENTIFIER,x,equals(zero))<SUB>15</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "111": "<(println,println(ans))<SUB>21</SUB>>", "113": "<(IDENTIFIER,System,println(ans))<SUB>21</SUB>>", "115": "<(IDENTIFIER,ans,println(ans))<SUB>21</SUB>>", "117": "<(MODIFIER,STATIC)>"}}