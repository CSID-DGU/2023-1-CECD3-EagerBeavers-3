{"edges": [["17", "19"], ["17", "157"], ["17", "158"], ["17", "159"], ["19", "20"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "39"], ["19", "55"], ["19", "92"], ["19", "93"], ["19", "97"], ["19", "98"], ["19", "105"], ["20", "21"], ["20", "22"], ["22", "23"], ["22", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "65"], ["55", "67"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "70"], ["68", "75"], ["68", "80"], ["68", "82"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "90"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "121"], ["115", "122"], ["115", "126"], ["115", "127"], ["115", "134"], ["115", "135"], ["115", "144"], ["115", "149"], ["117", "118"], ["117", "119"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["153", "156"], ["20", "28"], ["26", "33"], ["31", "36"], ["36", "41"], ["93", "101"], ["98", "107"], ["22", "20"], ["28", "26"], ["33", "31"], ["41", "44"], ["44", "50"], ["44", "57"], ["47", "44"], ["49", "47"], ["57", "64"], ["60", "72"], ["60", "95"], ["65", "64"], ["95", "93"], ["100", "98"], ["107", "110"], ["110", "159"], ["110", "119"], ["113", "110"], ["24", "22"], ["50", "53"], ["53", "49"], ["62", "60"], ["101", "100"], ["117", "124"], ["122", "130"], ["127", "139"], ["135", "146"], ["144", "152"], ["149", "113"], ["64", "62"], ["70", "79"], ["75", "84"], ["75", "65"], ["80", "79"], ["119", "117"], ["124", "122"], ["129", "127"], ["137", "135"], ["146", "144"], ["150", "153"], ["153", "149"], ["72", "70"], ["77", "75"], ["83", "90"], ["83", "80"], ["90", "80"], ["130", "129"], ["138", "137"], ["152", "150"], ["79", "77"], ["84", "87"], ["87", "83"], ["139", "138"], ["17", "24"], ["18", "159"], ["20", "159"], ["20", "159"], ["26", "159"], ["31", "159"], ["31", "159"], ["31", "159"], ["36", "159"], ["44", "159"], ["44", "159"], ["60", "159"], ["60", "159"], ["95", "159"], ["93", "159"], ["93", "159"], ["98", "159"], ["101", "159"], ["100", "159"], ["98", "159"], ["98", "159"], ["107", "159"], ["110", "159"], ["110", "159"], ["110", "159"], ["113", "159"], ["65", "159"], ["47", "159"], ["17", "18"], ["28", "26"], ["33", "31"], ["17", "36"], ["95", "93"], ["100", "98"], ["100", "98"], ["17", "20"], ["17", "41"], ["53", "49"], ["17", "57"], ["17", "107"], ["20", "28"], ["17", "28"], ["26", "33"], ["17", "33"], ["41", "44"], ["47", "44"], ["17", "44"], ["33", "44"], ["44", "47"], ["17", "47"], ["57", "60"], ["65", "60"], ["17", "60"], ["31", "60"], ["75", "60"], ["17", "65"], ["60", "65"], ["28", "95"], ["53", "95"], ["17", "95"], ["101", "100"], ["101", "100"], ["17", "100"], ["107", "110"], ["113", "110"], ["17", "110"], ["93", "110"], ["110", "113"], ["17", "113"], ["119", "117"], ["124", "122"], ["130", "127"], ["130", "127"], ["17", "127"], ["137", "135"], ["137", "135"], ["146", "144"], ["146", "144"], ["28", "53"], ["17", "53"], ["60", "70"], ["17", "70"], ["36", "101"], ["90", "101"], ["17", "101"], ["17", "149"], ["70", "75"], ["80", "75"], ["17", "75"], ["31", "75"], ["60", "75"], ["75", "80"], ["17", "80"], ["95", "119"], ["124", "119"], ["17", "119"], ["119", "124"], ["17", "124"], ["130", "129"], ["130", "129"], ["17", "129"], ["138", "137"], ["138", "137"], ["17", "137"], ["98", "146"], ["17", "146"], ["135", "146"], ["17", "153"], ["60", "72"], ["17", "72"], ["31", "83"], ["49", "83"], ["36", "90"], ["17", "90"], ["122", "130"], ["17", "130"], ["117", "130"], ["139", "138"], ["139", "138"], ["17", "138"], ["127", "139"], ["17", "139"], ["44", "47"], ["44", "49"], ["44", "50"], ["44", "44"], ["44", "53"], ["60", "60"], ["60", "77"], ["60", "64"], ["60", "75"], ["60", "72"], ["60", "65"], ["60", "79"], ["60", "70"], ["60", "62"], ["110", "113"], ["110", "146"], ["110", "122"], ["110", "149"], ["110", "150"], ["110", "119"], ["110", "153"], ["110", "144"], ["110", "129"], ["110", "138"], ["110", "137"], ["110", "152"], ["110", "130"], ["110", "135"], ["110", "110"], ["110", "117"], ["110", "127"], ["110", "139"], ["110", "124"], ["75", "77"], ["75", "75"], ["75", "84"], ["75", "87"], ["75", "79"], ["75", "80"], ["75", "83"], ["83", "90"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,Reader,init(System.in))<SUB>2</SUB>>", "23": "<(IDENTIFIER,System,init(System.in))<SUB>2</SUB>>", "25": "<(LOCAL,int n: int)<SUB>3</SUB>>", "27": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,Reader,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[n])>", "35": "<(LOCAL,int initial: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,initial,int initial = 0)<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr.length); i++),for (int i = 0; Some(i &lt; arr.length); i++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i &lt; arr.length)<SUB>8</SUB>>", "63": "<(IDENTIFIER,arr,i &lt; arr.length)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(LOCAL,int j: int)<SUB>9</SUB>>", "71": "<(IDENTIFIER,j,int j = i + 1)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i + 1)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; arr.length)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.fieldAccess,arr.length)<SUB>9</SUB>>", "79": "<(FIELD_IDENTIFIER,length,length)<SUB>9</SUB>>", "81": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.greaterThan,arr[i] &gt; arr[j])<SUB>9</SUB>>", "85": "<(IDENTIFIER,arr,arr[i] &gt; arr[j])<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>9</SUB>>", "89": "<(IDENTIFIER,j,arr[i] &gt; arr[j])<SUB>9</SUB>>", "91": "<(IDENTIFIER,initial,initial++)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>12</SUB>>", "95": "<(nextInt,nextInt())<SUB>12</SUB>>", "97": "<(LOCAL,boolean parity: boolean)<SUB>13</SUB>>", "99": "<(IDENTIFIER,parity,boolean parity = initial % 2 == 0)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.modulo,initial % 2)<SUB>13</SUB>>", "103": "<(LITERAL,2,initial % 2)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,i &lt; m)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.assignment,int l = nextInt())<SUB>16</SUB>>", "119": "<(nextInt,nextInt())<SUB>16</SUB>>", "121": "<(LOCAL,int r: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,r,int r = nextInt())<SUB>17</SUB>>", "125": "<(IDENTIFIER,Reader,nextInt())<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.assignment,int elems = r - l + 1)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>18</SUB>>", "131": "<(IDENTIFIER,r,r - l)<SUB>18</SUB>>", "133": "<(LITERAL,1,r - l + 1)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,boolean change = (elems / 2) % 2 == 0)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.equals,(elems / 2) % 2 == 0)<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.division,elems / 2)<SUB>19</SUB>>", "141": "<(LITERAL,2,elems / 2)<SUB>19</SUB>>", "143": "<(LITERAL,0,(elems / 2) % 2 == 0)<SUB>19</SUB>>", "145": "<(IDENTIFIER,parity,parity = parity == change)<SUB>20</SUB>>", "147": "<(IDENTIFIER,parity,parity == change)<SUB>20</SUB>>", "149": "<(println,System.out.println(parity ? &quot;even&quot; : &quot;odd&quot;))<SUB>21</SUB>>", "151": "<(IDENTIFIER,System,System.out.println(parity ? &quot;even&quot; : &quot;odd&quot;))<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.conditional,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>21</SUB>>", "155": "<(LITERAL,&quot;even&quot;,parity ? &quot;even&quot; : &quot;odd&quot;)<SUB>21</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}