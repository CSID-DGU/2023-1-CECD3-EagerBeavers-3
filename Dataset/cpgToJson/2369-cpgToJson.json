{"edges": [["21", "23"], ["21", "193"], ["21", "194"], ["21", "195"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "58"], ["23", "59"], ["23", "62"], ["23", "99"], ["23", "100"], ["23", "6"], ["23", "107"], ["23", "110"], ["23", "121"], ["23", "122"], ["23", "126"], ["23", "191"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "72"], ["62", "74"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "77"], ["75", "82"], ["75", "85"], ["75", "87"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["110", "5"], ["110", "111"], ["111", "112"], ["111", "115"], ["111", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "138"], ["136", "142"], ["136", "143"], ["136", "147"], ["136", "148"], ["136", "155"], ["136", "156"], ["136", "165"], ["136", "176"], ["138", "139"], ["138", "140"], ["140", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["176", "177"], ["176", "178"], ["176", "184"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["59", "64"], ["100", "109"], ["107", "114"], ["110", "124"], ["122", "128"], ["191", "195"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "59"], ["49", "46"], ["64", "69"], ["67", "79"], ["67", "103"], ["72", "69"], ["102", "100"], ["109", "107"], ["124", "122"], ["128", "131"], ["131", "140"], ["131", "191"], ["134", "131"], ["30", "28"], ["52", "49"], ["69", "67"], ["103", "102"], ["112", "119"], ["115", "110"], ["138", "145"], ["143", "151"], ["148", "160"], ["156", "167"], ["53", "56"], ["56", "52"], ["77", "82"], ["82", "90"], ["82", "72"], ["85", "82"], ["114", "112"], ["117", "115"], ["140", "138"], ["145", "143"], ["150", "148"], ["158", "156"], ["166", "177"], ["166", "174"], ["177", "179"], ["177", "186"], ["79", "77"], ["119", "117"], ["151", "150"], ["159", "158"], ["167", "166"], ["172", "177"], ["179", "182"], ["182", "134"], ["89", "97"], ["89", "85"], ["160", "159"], ["174", "172"], ["186", "189"], ["189", "134"], ["90", "93"], ["93", "89"], ["97", "85"], ["21", "26"], ["22", "195"], ["24", "195"], ["27", "195"], ["27", "195"], ["32", "195"], ["37", "195"], ["37", "195"], ["37", "195"], ["46", "195"], ["59", "195"], ["69", "195"], ["67", "195"], ["67", "195"], ["100", "195"], ["103", "195"], ["102", "195"], ["100", "195"], ["100", "195"], ["107", "195"], ["112", "195"], ["115", "195"], ["115", "195"], ["115", "195"], ["110", "195"], ["124", "195"], ["122", "195"], ["122", "195"], ["128", "195"], ["131", "195"], ["131", "195"], ["131", "195"], ["191", "195"], ["191", "195"], ["138", "195"], ["145", "195"], ["143", "195"], ["143", "195"], ["151", "195"], ["151", "195"], ["150", "195"], ["148", "195"], ["148", "195"], ["159", "195"], ["159", "195"], ["158", "195"], ["156", "195"], ["156", "195"], ["167", "195"], ["166", "195"], ["166", "195"], ["172", "195"], ["172", "195"], ["172", "195"], ["186", "195"], ["189", "195"], ["179", "195"], ["182", "195"], ["134", "195"], ["77", "195"], ["77", "195"], ["82", "195"], ["82", "195"], ["72", "195"], ["89", "195"], ["89", "195"], ["89", "195"], ["97", "195"], ["85", "195"], ["52", "195"], ["52", "195"], ["49", "195"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "59"], ["102", "100"], ["102", "100"], ["21", "107"], ["124", "122"], ["24", "27"], ["21", "27"], ["21", "43"], ["21", "64"], ["107", "110"], ["21", "110"], ["112", "110"], ["115", "110"], ["21", "128"], ["110", "191"], ["189", "191"], ["182", "191"], ["21", "191"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["56", "52"], ["64", "67"], ["72", "67"], ["21", "67"], ["69", "67"], ["69", "67"], ["21", "72"], ["67", "72"], ["103", "102"], ["103", "102"], ["21", "102"], ["21", "112"], ["21", "120"], ["34", "124"], ["56", "124"], ["21", "124"], ["128", "131"], ["134", "131"], ["21", "131"], ["122", "131"], ["131", "134"], ["21", "134"], ["140", "138"], ["145", "143"], ["151", "148"], ["151", "148"], ["21", "148"], ["158", "156"], ["158", "156"], ["46", "69"], ["82", "69"], ["21", "69"], ["67", "77"], ["21", "77"], ["59", "103"], ["97", "103"], ["21", "103"], ["112", "115"], ["21", "115"], ["21", "177"], ["34", "56"], ["21", "56"], ["77", "82"], ["85", "82"], ["21", "82"], ["69", "82"], ["82", "85"], ["21", "85"], ["124", "140"], ["145", "140"], ["21", "140"], ["140", "145"], ["21", "145"], ["151", "150"], ["151", "150"], ["21", "150"], ["159", "158"], ["159", "158"], ["21", "158"], ["167", "166"], ["167", "166"], ["21", "166"], ["174", "172"], ["67", "79"], ["21", "79"], ["143", "151"], ["21", "151"], ["138", "151"], ["160", "159"], ["160", "159"], ["21", "159"], ["156", "167"], ["21", "167"], ["110", "179"], ["189", "179"], ["182", "179"], ["21", "179"], ["179", "182"], ["21", "182"], ["37", "89"], ["52", "89"], ["148", "160"], ["21", "160"], ["100", "174"], ["172", "174"], ["21", "174"], ["110", "186"], ["189", "186"], ["182", "186"], ["21", "186"], ["186", "189"], ["21", "189"], ["59", "97"], ["21", "97"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "56"], ["46", "53"], ["67", "77"], ["67", "72"], ["67", "69"], ["67", "67"], ["67", "82"], ["67", "79"], ["131", "160"], ["131", "167"], ["131", "145"], ["131", "131"], ["131", "166"], ["131", "150"], ["131", "151"], ["131", "159"], ["131", "134"], ["131", "138"], ["131", "140"], ["131", "148"], ["131", "143"], ["131", "177"], ["131", "156"], ["131", "158"], ["82", "89"], ["82", "85"], ["82", "82"], ["82", "93"], ["82", "90"], ["166", "174"], ["166", "172"], ["177", "179"], ["177", "189"], ["177", "182"], ["177", "186"], ["89", "97"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>10</SUB>>", "61": "<(LITERAL,0,int count = 0)<SUB>10</SUB>>", "63": "<(LOCAL,int i: int)<SUB>11</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "71": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.addition,i + 1)<SUB>12</SUB>>", "81": "<(LITERAL,1,i + 1)<SUB>12</SUB>>", "83": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.greaterThan,a[i] &gt; a[j])<SUB>13</SUB>>", "91": "<(IDENTIFIER,a,a[i] &gt; a[j])<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>13</SUB>>", "95": "<(IDENTIFIER,j,a[i] &gt; a[j])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,count++)<SUB>14</SUB>>", "99": "<(LOCAL,boolean isEven: boolean)<SUB>19</SUB>>", "101": "<(IDENTIFIER,isEven,boolean isEven = count % 2 == 0)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.modulo,count % 2)<SUB>19</SUB>>", "105": "<(LITERAL,2,count % 2)<SUB>19</SUB>>", "6": "<(LOCAL,BufferedWriter out: ANY)<SUB>21</SUB>>", "108": "<(IDENTIFIER,out,ANY out = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>21</SUB>>", "110": "<(&lt;init&gt;,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "113": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "115": "<(&lt;init&gt;,new OutputStreamWriter(System.out))<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "121": "<(LOCAL,int m: int)<SUB>22</SUB>>", "123": "<(IDENTIFIER,m,int m = nextInt())<SUB>22</SUB>>", "125": "<(IDENTIFIER,in,nextInt())<SUB>22</SUB>>", "127": "<(LOCAL,int i: int)<SUB>23</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>23</SUB>>", "133": "<(IDENTIFIER,m,i &lt; m)<SUB>23</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "137": "<(LOCAL,int l: int)<SUB>24</SUB>>", "139": "<(IDENTIFIER,l,int l = nextInt())<SUB>24</SUB>>", "141": "<(IDENTIFIER,in,nextInt())<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>25</SUB>>", "145": "<(nextInt,nextInt())<SUB>25</SUB>>", "147": "<(LOCAL,int size: int)<SUB>26</SUB>>", "149": "<(IDENTIFIER,size,int size = (r - l) + 1)<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.subtraction,r - l)<SUB>26</SUB>>", "153": "<(IDENTIFIER,l,r - l)<SUB>26</SUB>>", "155": "<(LOCAL,int numOfConn: int)<SUB>27</SUB>>", "157": "<(IDENTIFIER,numOfConn,int numOfConn = (size - 1) * size / 2)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.multiplication,(size - 1) * size)<SUB>27</SUB>>", "161": "<(IDENTIFIER,size,size - 1)<SUB>27</SUB>>", "163": "<(IDENTIFIER,size,(size - 1) * size)<SUB>27</SUB>>", "165": "<(CONTROL_STRUCTURE,if (numOfConn % 2 == 1),if (numOfConn % 2 == 1))<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.modulo,numOfConn % 2)<SUB>28</SUB>>", "169": "<(LITERAL,2,numOfConn % 2)<SUB>28</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "173": "<(IDENTIFIER,isEven,isEven = !isEven)<SUB>29</SUB>>", "175": "<(IDENTIFIER,isEven,!isEven)<SUB>29</SUB>>", "177": "<(IDENTIFIER,isEven,if (isEven))<SUB>31</SUB>>", "179": "<(write,write(&quot;even&quot;))<SUB>32</SUB>>", "181": "<(LITERAL,&quot;even&quot;,write(&quot;even&quot;))<SUB>32</SUB>>", "183": "<(IDENTIFIER,out,newLine())<SUB>33</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "187": "<(IDENTIFIER,out,write(&quot;odd&quot;))<SUB>35</SUB>>", "189": "<(newLine,newLine())<SUB>36</SUB>>", "191": "<(close,close())<SUB>39</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}