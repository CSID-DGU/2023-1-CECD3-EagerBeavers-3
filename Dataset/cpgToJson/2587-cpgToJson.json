{"edges": [["21", "23"], ["21", "129"], ["21", "130"], ["21", "131"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "38"], ["23", "42"], ["23", "59"], ["23", "62"], ["23", "63"], ["23", "67"], ["23", "68"], ["23", "71"], ["23", "124"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["82", "87"], ["83", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "90"], ["87", "95"], ["88", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["95", "102"], ["95", "105"], ["95", "107"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["108", "109"], ["108", "118"], ["109", "110"], ["109", "117"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["118", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "35"], ["33", "40"], ["38", "44"], ["59", "65"], ["63", "68"], ["68", "73"], ["124", "131"], ["26", "24"], ["30", "28"], ["35", "33"], ["40", "38"], ["44", "47"], ["47", "54"], ["47", "59"], ["50", "47"], ["65", "63"], ["73", "76"], ["76", "84"], ["76", "127"], ["79", "76"], ["125", "124"], ["53", "50"], ["127", "125"], ["54", "57"], ["57", "53"], ["83", "88"], ["83", "79"], ["84", "83"], ["88", "91"], ["90", "99"], ["91", "90"], ["97", "102"], ["102", "111"], ["102", "79"], ["105", "102"], ["99", "97"], ["109", "120"], ["109", "105"], ["110", "109"], ["119", "105"], ["111", "114"], ["114", "110"], ["120", "119"], ["21", "26"], ["22", "131"], ["24", "131"], ["27", "131"], ["28", "131"], ["31", "131"], ["31", "131"], ["35", "131"], ["33", "131"], ["33", "131"], ["38", "131"], ["38", "131"], ["59", "131"], ["59", "131"], ["63", "131"], ["63", "131"], ["63", "131"], ["68", "131"], ["73", "131"], ["76", "131"], ["76", "131"], ["76", "131"], ["124", "131"], ["124", "131"], ["124", "131"], ["83", "131"], ["83", "131"], ["88", "131"], ["90", "131"], ["90", "131"], ["97", "131"], ["97", "131"], ["102", "131"], ["102", "131"], ["79", "131"], ["110", "131"], ["110", "131"], ["109", "131"], ["109", "131"], ["119", "131"], ["119", "131"], ["105", "131"], ["53", "131"], ["57", "131"], ["53", "131"], ["53", "131"], ["50", "131"], ["59", "131"], ["21", "22"], ["21", "24"], ["21", "28"], ["35", "33"], ["40", "38"], ["65", "63"], ["21", "68"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "44"], ["21", "59"], ["38", "59"], ["53", "59"], ["21", "73"], ["68", "124"], ["88", "124"], ["21", "124"], ["27", "35"], ["21", "35"], ["33", "40"], ["21", "40"], ["44", "47"], ["50", "47"], ["21", "47"], ["40", "47"], ["47", "50"], ["21", "50"], ["57", "53"], ["47", "65"], ["21", "65"], ["73", "76"], ["79", "76"], ["21", "76"], ["65", "76"], ["102", "76"], ["76", "79"], ["21", "79"], ["35", "57"], ["21", "57"], ["63", "83"], ["90", "83"], ["21", "90"], ["68", "88"], ["21", "88"], ["76", "97"], ["21", "97"], ["97", "102"], ["105", "102"], ["21", "102"], ["76", "102"], ["102", "105"], ["21", "105"], ["76", "99"], ["21", "99"], ["110", "109"], ["110", "109"], ["21", "109"], ["21", "119"], ["59", "110"], ["53", "110"], ["47", "47"], ["47", "57"], ["47", "50"], ["47", "54"], ["47", "53"], ["76", "84"], ["76", "76"], ["76", "79"], ["76", "83"], ["83", "99"], ["83", "102"], ["83", "97"], ["83", "91"], ["83", "90"], ["83", "88"], ["102", "102"], ["102", "114"], ["102", "105"], ["102", "110"], ["102", "111"], ["102", "109"], ["109", "120"], ["109", "119"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,StringBuilder output = new StringBuilder())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,output,new StringBuilder())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "39": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>6</SUB>>", "41": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "43": "<(LOCAL,int i: int)<SUB>8</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "49": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>9</SUB>>", "55": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>9</SUB>>", "57": "<(nextInt,nextInt())<SUB>9</SUB>>", "59": "<(sort,sort(a))<SUB>12</SUB>>", "61": "<(IDENTIFIER,a,sort(a))<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.assignment,boolean[] colored = new boolean[n])<SUB>13</SUB>>", "65": "<(&lt;operator&gt;.alloc,new boolean[n])>", "67": "<(LOCAL,int colors: int)<SUB>14</SUB>>", "69": "<(IDENTIFIER,colors,int colors = 0)<SUB>14</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.logicalNot,!colored[i])<SUB>16</SUB>>", "85": "<(IDENTIFIER,colored,!colored[i])<SUB>16</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "89": "<(IDENTIFIER,colors,colors++)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,colored[i])<SUB>18</SUB>>", "93": "<(IDENTIFIER,i,colored[i] = true)<SUB>18</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.addition,i + 1)<SUB>19</SUB>>", "101": "<(LITERAL,1,i + 1)<SUB>19</SUB>>", "103": "<(IDENTIFIER,j,j &lt; n)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,j++)<SUB>19</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>20</SUB>>", "113": "<(IDENTIFIER,j,a[j] % a[i])<SUB>20</SUB>>", "115": "<(IDENTIFIER,a,a[j] % a[i])<SUB>20</SUB>>", "117": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,colored[j] = true)<SUB>21</SUB>>", "121": "<(IDENTIFIER,colored,colored[j] = true)<SUB>21</SUB>>", "123": "<(LITERAL,true,colored[j] = true)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "129": "<(MODIFIER,PUBLIC)>", "131": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}