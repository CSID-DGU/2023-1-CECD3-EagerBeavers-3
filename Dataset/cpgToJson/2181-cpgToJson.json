{"edges": [["21", "23"], ["21", "163"], ["21", "164"], ["21", "165"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "145"], ["23", "161"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "72"], ["65", "73"], ["65", "76"], ["65", "140"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "101"], ["88", "89"], ["88", "98"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "132"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "125"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "48"], ["46", "53"], ["51", "57"], ["161", "165"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "147"], ["63", "60"], ["147", "150"], ["150", "158"], ["150", "161"], ["153", "150"], ["34", "32"], ["66", "73"], ["73", "78"], ["140", "63"], ["156", "153"], ["67", "70"], ["70", "66"], ["78", "81"], ["81", "92"], ["81", "141"], ["84", "81"], ["141", "140"], ["158", "156"], ["88", "106"], ["88", "84"], ["89", "98"], ["98", "88"], ["103", "133"], ["91", "89"], ["105", "103"], ["133", "137"], ["133", "84"], ["92", "95"], ["95", "91"], ["106", "113"], ["109", "105"], ["137", "84"], ["111", "109"], ["112", "119"], ["117", "111"], ["113", "112"], ["118", "126"], ["125", "117"], ["119", "122"], ["122", "118"], ["126", "129"], ["129", "125"], ["21", "26"], ["22", "165"], ["24", "165"], ["27", "165"], ["28", "165"], ["31", "165"], ["31", "165"], ["36", "165"], ["41", "165"], ["43", "165"], ["41", "165"], ["41", "165"], ["46", "165"], ["46", "165"], ["46", "165"], ["51", "165"], ["51", "165"], ["51", "165"], ["147", "165"], ["150", "165"], ["150", "165"], ["150", "165"], ["161", "165"], ["161", "165"], ["156", "165"], ["156", "165"], ["153", "165"], ["66", "165"], ["70", "165"], ["66", "165"], ["66", "165"], ["73", "165"], ["73", "165"], ["78", "165"], ["81", "165"], ["81", "165"], ["140", "165"], ["140", "165"], ["140", "165"], ["63", "165"], ["89", "165"], ["91", "165"], ["91", "165"], ["89", "165"], ["88", "165"], ["98", "165"], ["88", "165"], ["88", "165"], ["105", "165"], ["109", "165"], ["112", "165"], ["112", "165"], ["111", "165"], ["117", "165"], ["125", "165"], ["125", "165"], ["111", "165"], ["109", "165"], ["105", "165"], ["103", "165"], ["103", "165"], ["133", "165"], ["133", "165"], ["137", "165"], ["137", "165"], ["84", "165"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "57"], ["21", "147"], ["31", "161"], ["156", "161"], ["21", "161"], ["27", "38"], ["21", "38"], ["38", "43"], ["21", "43"], ["36", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["57", "60"], ["63", "60"], ["21", "60"], ["53", "60"], ["81", "63"], ["21", "63"], ["70", "66"], ["41", "73"], ["98", "73"], ["112", "73"], ["21", "73"], ["73", "140"], ["133", "140"], ["137", "140"], ["21", "140"], ["147", "150"], ["153", "150"], ["21", "150"], ["60", "150"], ["150", "153"], ["21", "153"], ["21", "78"], ["31", "156"], ["21", "156"], ["46", "156"], ["140", "156"], ["43", "70"], ["21", "70"], ["78", "81"], ["84", "81"], ["21", "81"], ["60", "81"], ["81", "84"], ["21", "84"], ["89", "88"], ["89", "88"], ["98", "88"], ["98", "88"], ["46", "103"], ["109", "103"], ["109", "103"], ["109", "89"], ["21", "89"], ["91", "89"], ["91", "89"], ["21", "98"], ["112", "98"], ["41", "98"], ["51", "91"], ["66", "91"], ["125", "91"], ["125", "91"], ["46", "105"], ["109", "105"], ["109", "105"], ["103", "133"], ["21", "133"], ["73", "133"], ["137", "133"], ["133", "137"], ["21", "137"], ["89", "109"], ["21", "109"], ["111", "109"], ["111", "109"], ["112", "111"], ["112", "111"], ["117", "111"], ["113", "112"], ["113", "112"], ["21", "112"], ["118", "117"], ["118", "117"], ["125", "117"], ["125", "117"], ["21", "113"], ["98", "113"], ["51", "118"], ["91", "118"], ["91", "118"], ["51", "125"], ["118", "125"], ["118", "125"], ["60", "141"], ["60", "60"], ["60", "73"], ["60", "66"], ["60", "81"], ["60", "67"], ["60", "140"], ["60", "70"], ["60", "63"], ["60", "78"], ["150", "150"], ["150", "153"], ["150", "156"], ["150", "158"], ["81", "89"], ["81", "98"], ["81", "81"], ["81", "84"], ["81", "95"], ["81", "92"], ["81", "91"], ["81", "88"], ["88", "113"], ["88", "122"], ["88", "103"], ["88", "119"], ["88", "106"], ["88", "112"], ["88", "129"], ["88", "126"], ["88", "105"], ["88", "118"], ["88", "117"], ["88", "125"], ["88", "111"], ["88", "109"], ["88", "133"], ["133", "137"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new MyScanner())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new MyScanner())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>6</SUB>>", "43": "<(nextInt,nextInt())<SUB>6</SUB>>", "45": "<(LOCAL,double[] y: double[])<SUB>8</SUB>>", "47": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>8</SUB>>", "49": "<(IDENTIFIER,n,new double[n])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.preIncrement,++i)<SUB>11</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>12</SUB>>", "69": "<(IDENTIFIER,i,x[i] = nextInt())<SUB>12</SUB>>", "71": "<(IDENTIFIER,in,nextInt())<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,double bestY = r)<SUB>13</SUB>>", "75": "<(IDENTIFIER,r,double bestY = r)<SUB>13</SUB>>", "77": "<(LOCAL,int j: int)<SUB>14</SUB>>", "79": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,j &lt; i)<SUB>14</SUB>>", "85": "<(IDENTIFIER,j,++j)<SUB>14</SUB>>", "87": "<(CONTROL_STRUCTURE,if (Math.abs(x[i] - x[j]) &lt;= 2 * r),if (Math.abs(x[i] - x[j]) &lt;= 2 * r))<SUB>15</SUB>>", "89": "<(abs,Math.abs(x[i] - x[j]))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>15</SUB>>", "93": "<(IDENTIFIER,x,x[i] - x[j])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>15</SUB>>", "97": "<(IDENTIFIER,j,x[i] - x[j])<SUB>15</SUB>>", "99": "<(LITERAL,2,2 * r)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.assignment,double ny = y[j] + Math.sqrt(4 * r * r - (x[i] - x[j]) * (x[i] - x[j])))<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.addition,y[j] + Math.sqrt(4 * r * r - (x[i] - x[j]) * (x[i] - x[j])))<SUB>16</SUB>>", "107": "<(IDENTIFIER,y,y[j] + Math.sqrt(4 * r * r - (x[i] - x[j]) * (x[i] - x[j])))<SUB>16</SUB>>", "109": "<(sqrt,Math.sqrt(4 * r * r - (x[i] - x[j]) * (x[i] - x[j])))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.subtraction,4 * r * r - (x[i] - x[j]) * (x[i] - x[j]))<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>16</SUB>>", "115": "<(IDENTIFIER,r,4 * r)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.multiplication,(x[i] - x[j]) * (x[i] - x[j]))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,i,x[i] - x[j])<SUB>16</SUB>>", "123": "<(IDENTIFIER,x,x[i] - x[j])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>16</SUB>>", "127": "<(IDENTIFIER,x,x[i] - x[j])<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>16</SUB>>", "131": "<(IDENTIFIER,j,x[i] - x[j])<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.greaterThan,ny &gt; bestY)<SUB>17</SUB>>", "135": "<(IDENTIFIER,bestY,ny &gt; bestY)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.assignment,bestY = ny)<SUB>18</SUB>>", "139": "<(IDENTIFIER,ny,bestY = ny)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>22</SUB>>", "143": "<(IDENTIFIER,i,y[i] = bestY)<SUB>22</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "149": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "151": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.preIncrement,++i)<SUB>25</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "157": "<(IDENTIFIER,out,println(y[i]))<SUB>26</SUB>>", "159": "<(IDENTIFIER,y,println(y[i]))<SUB>26</SUB>>", "161": "<(close,close())<SUB>29</SUB>>", "163": "<(MODIFIER,PUBLIC)>", "165": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}