{"edges": [["25", "26"], ["25", "27"], ["25", "252"], ["25", "253"], ["25", "254"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "32"], ["27", "33"], ["27", "37"], ["27", "38"], ["27", "42"], ["27", "6"], ["27", "58"], ["27", "61"], ["27", "62"], ["27", "8"], ["27", "126"], ["27", "129"], ["27", "130"], ["27", "131"], ["27", "136"], ["27", "219"], ["27", "225"], ["27", "226"], ["27", "230"], ["28", "29"], ["28", "30"], ["31", "3"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["61", "5"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "93"], ["87", "109"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["99", "102"], ["102", "103"], ["102", "106"], ["102", "108"], ["103", "104"], ["103", "105"], ["106", "107"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["113", "125"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["129", "7"], ["131", "132"], ["131", "133"], ["133", "134"], ["134", "135"], ["136", "137"], ["136", "139"], ["137", "138"], ["139", "140"], ["139", "141"], ["139", "145"], ["139", "10"], ["139", "155"], ["139", "158"], ["139", "159"], ["139", "164"], ["139", "165"], ["139", "168"], ["139", "169"], ["139", "176"], ["139", "211"], ["141", "142"], ["141", "143"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "148"], ["148", "149"], ["148", "152"], ["148", "154"], ["149", "150"], ["149", "151"], ["152", "153"], ["155", "156"], ["155", "157"], ["158", "9"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "185"], ["176", "187"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["185", "186"], ["187", "188"], ["188", "189"], ["188", "196"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["196", "197"], ["196", "199"], ["196", "206"], ["197", "198"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "216"], ["212", "213"], ["212", "214"], ["214", "215"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["223", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["230", "231"], ["230", "233"], ["231", "232"], ["233", "234"], ["233", "235"], ["233", "239"], ["235", "236"], ["235", "237"], ["237", "238"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "251"], ["28", "31"], ["31", "35"], ["33", "40"], ["38", "44"], ["58", "61"], ["61", "64"], ["126", "129"], ["129", "134"], ["131", "137"], ["219", "228"], ["226", "231"], ["30", "28"], ["35", "33"], ["40", "38"], ["44", "47"], ["47", "53"], ["47", "60"], ["50", "47"], ["52", "50"], ["60", "58"], ["64", "67"], ["67", "74"], ["67", "128"], ["70", "67"], ["128", "126"], ["133", "131"], ["137", "143"], ["137", "222"], ["220", "223"], ["223", "219"], ["228", "226"], ["231", "254"], ["231", "237"], ["53", "56"], ["56", "52"], ["74", "79"], ["134", "133"], ["141", "151"], ["145", "157"], ["155", "158"], ["158", "161"], ["159", "165"], ["165", "172"], ["169", "178"], ["222", "220"], ["235", "242"], ["239", "231"], ["79", "82"], ["82", "90"], ["82", "70"], ["85", "82"], ["143", "141"], ["157", "155"], ["161", "159"], ["171", "169"], ["178", "183"], ["181", "191"], ["181", "214"], ["185", "183"], ["212", "137"], ["212", "216"], ["216", "137"], ["237", "235"], ["240", "247"], ["243", "239"], ["88", "95"], ["109", "85"], ["149", "152"], ["152", "145"], ["172", "175"], ["175", "171"], ["183", "181"], ["214", "212"], ["242", "240"], ["244", "251"], ["249", "243"], ["90", "88"], ["94", "105"], ["94", "110"], ["99", "110"], ["110", "116"], ["151", "149"], ["189", "197"], ["189", "185"], ["245", "244"], ["251", "249"], ["95", "94"], ["114", "119"], ["117", "109"], ["190", "189"], ["197", "202"], ["199", "208"], ["206", "185"], ["247", "245"], ["103", "106"], ["106", "99"], ["116", "114"], ["119", "122"], ["122", "117"], ["191", "194"], ["194", "190"], ["201", "199"], ["208", "206"], ["105", "103"], ["202", "205"], ["205", "201"], ["25", "30"], ["26", "254"], ["28", "254"], ["31", "254"], ["35", "254"], ["33", "254"], ["33", "254"], ["38", "254"], ["38", "254"], ["38", "254"], ["58", "254"], ["61", "254"], ["64", "254"], ["67", "254"], ["67", "254"], ["67", "254"], ["126", "254"], ["129", "254"], ["134", "254"], ["133", "254"], ["137", "254"], ["219", "254"], ["219", "254"], ["219", "254"], ["228", "254"], ["226", "254"], ["231", "254"], ["231", "254"], ["239", "254"], ["239", "254"], ["239", "254"], ["212", "254"], ["212", "254"], ["216", "254"], ["216", "254"], ["70", "254"], ["50", "254"], ["145", "254"], ["25", "26"], ["25", "28"], ["35", "33"], ["40", "38"], ["25", "58"], ["25", "126"], ["133", "131"], ["228", "226"], ["28", "31"], ["25", "31"], ["25", "44"], ["56", "52"], ["58", "61"], ["25", "61"], ["25", "64"], ["126", "129"], ["25", "129"], ["223", "219"], ["31", "35"], ["25", "35"], ["33", "40"], ["25", "40"], ["44", "47"], ["50", "47"], ["25", "47"], ["40", "47"], ["47", "50"], ["25", "50"], ["64", "67"], ["70", "67"], ["25", "67"], ["47", "67"], ["82", "67"], ["25", "70"], ["67", "70"], ["25", "74"], ["134", "133"], ["131", "137"], ["143", "137"], ["25", "137"], ["143", "141"], ["25", "155"], ["25", "165"], ["129", "223"], ["214", "223"], ["216", "223"], ["25", "223"], ["223", "228"], ["25", "228"], ["226", "231"], ["237", "231"], ["25", "231"], ["237", "235"], ["35", "56"], ["25", "56"], ["67", "79"], ["25", "79"], ["61", "134"], ["110", "134"], ["25", "134"], ["25", "145"], ["141", "145"], ["149", "145"], ["152", "145"], ["155", "158"], ["25", "158"], ["158", "159"], ["25", "159"], ["161", "159"], ["161", "159"], ["25", "178"], ["159", "216"], ["206", "216"], ["25", "216"], ["219", "239"], ["235", "239"], ["25", "239"], ["79", "82"], ["85", "82"], ["25", "82"], ["67", "82"], ["25", "85"], ["82", "85"], ["38", "88"], ["137", "143"], ["25", "143"], ["25", "149"], ["25", "154"], ["145", "161"], ["25", "161"], ["178", "181"], ["185", "181"], ["25", "181"], ["183", "181"], ["191", "185"], ["208", "185"], ["25", "185"], ["165", "212"], ["197", "212"], ["25", "212"], ["214", "212"], ["231", "237"], ["25", "237"], ["235", "243"], ["25", "243"], ["74", "88"], ["110", "88"], ["25", "88"], ["110", "109"], ["110", "109"], ["114", "109"], ["117", "109"], ["25", "109"], ["149", "152"], ["25", "152"], ["161", "172"], ["25", "172"], ["172", "183"], ["191", "183"], ["208", "183"], ["25", "183"], ["129", "214"], ["216", "214"], ["25", "214"], ["235", "244"], ["25", "244"], ["95", "94"], ["95", "94"], ["25", "94"], ["95", "99"], ["25", "99"], ["95", "99"], ["103", "99"], ["106", "99"], ["95", "110"], ["99", "110"], ["25", "110"], ["95", "110"], ["99", "110"], ["25", "114"], ["25", "125"], ["169", "189"], ["199", "189"], ["25", "189"], ["61", "95"], ["110", "95"], ["25", "95"], ["88", "95"], ["25", "103"], ["25", "108"], ["114", "117"], ["25", "117"], ["67", "117"], ["82", "117"], ["165", "197"], ["25", "197"], ["159", "206"], ["25", "206"], ["208", "206"], ["208", "206"], ["103", "106"], ["25", "106"], ["25", "119"], ["67", "119"], ["82", "122"], ["25", "122"], ["183", "191"], ["25", "191"], ["181", "191"], ["202", "208"], ["25", "208"], ["202", "208"], ["191", "202"], ["25", "202"], ["191", "202"], ["47", "52"], ["47", "56"], ["47", "50"], ["47", "47"], ["47", "53"], ["67", "67"], ["67", "74"], ["67", "79"], ["67", "70"], ["67", "82"], ["137", "214"], ["137", "145"], ["137", "169"], ["137", "161"], ["137", "178"], ["137", "149"], ["137", "151"], ["137", "181"], ["137", "137"], ["137", "212"], ["137", "152"], ["137", "155"], ["137", "158"], ["137", "171"], ["137", "141"], ["137", "183"], ["137", "157"], ["137", "159"], ["137", "143"], ["137", "165"], ["137", "175"], ["137", "172"], ["231", "240"], ["231", "244"], ["231", "243"], ["231", "245"], ["231", "247"], ["231", "242"], ["231", "231"], ["231", "249"], ["231", "239"], ["231", "235"], ["231", "237"], ["231", "251"], ["82", "94"], ["82", "114"], ["82", "85"], ["82", "119"], ["82", "95"], ["82", "90"], ["82", "88"], ["82", "116"], ["82", "122"], ["82", "82"], ["82", "110"], ["82", "117"], ["82", "109"], ["181", "185"], ["181", "189"], ["181", "181"], ["181", "191"], ["181", "190"], ["181", "194"], ["181", "183"], ["212", "216"], ["94", "103"], ["94", "99"], ["94", "106"], ["94", "105"], ["189", "197"], ["189", "206"], ["189", "208"], ["189", "202"], ["189", "201"], ["189", "205"], ["189", "199"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new InputReader())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(LOCAL,int[] arr: int[])<SUB>5</SUB>>", "39": "<(IDENTIFIER,arr,int[] arr = new int[N])<SUB>5</SUB>>", "41": "<(IDENTIFIER,N,new int[N])<SUB>5</SUB>>", "43": "<(LOCAL,int i: int)<SUB>7</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>7</SUB>>", "49": "<(IDENTIFIER,N,i &lt; N)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "58": "<(&lt;operator&gt;.assignment,ANY name = new HashMap&lt;&gt;())<SUB>10</SUB>>", "60": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>10</SUB>>", "5": "<(IDENTIFIER,name,new HashMap&lt;&gt;())<SUB>10</SUB>>", "63": "<(LOCAL,int i: int)<SUB>12</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>12</SUB>>", "69": "<(IDENTIFIER,N,i &lt; N)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "73": "<(LOCAL,int sum: int)<SUB>13</SUB>>", "75": "<(IDENTIFIER,sum,int sum = 0)<SUB>13</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt; N); j++),for (int j = i; Some(j &lt; N); j++))<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.assignment,int j = i)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,int j = i)<SUB>14</SUB>>", "83": "<(IDENTIFIER,j,j &lt; N)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "89": "<(IDENTIFIER,sum,sum += arr[j])<SUB>15</SUB>>", "91": "<(IDENTIFIER,arr,sum += arr[j])<SUB>15</SUB>>", "93": "<(CONTROL_STRUCTURE,if (name.get(sum) == null),if (name.get(sum) == null))<SUB>16</SUB>>", "95": "<(get,get(sum))<SUB>16</SUB>>", "97": "<(IDENTIFIER,sum,get(sum))<SUB>16</SUB>>", "99": "<(put,put(sum, new ArrayList()))<SUB>17</SUB>>", "101": "<(IDENTIFIER,sum,put(sum, new ArrayList()))<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "105": "<(&lt;operator&gt;.alloc,new ArrayList())<SUB>17</SUB>>", "107": "<(IDENTIFIER,$obj2,new ArrayList())>", "109": "<(add,add(new Pair(i + 1, j + 1)))<SUB>19</SUB>>", "111": "<(IDENTIFIER,name,get(sum))<SUB>19</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "115": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "117": "<(&lt;init&gt;,new Pair(i + 1, j + 1))<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.addition,i + 1)<SUB>19</SUB>>", "121": "<(LITERAL,1,i + 1)<SUB>19</SUB>>", "123": "<(IDENTIFIER,j,j + 1)<SUB>19</SUB>>", "125": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "126": "<(&lt;operator&gt;.assignment,ANY ans = new HashSet&lt;&gt;())<SUB>23</SUB>>", "128": "<(&lt;operator&gt;.alloc,new HashSet&lt;&gt;())<SUB>23</SUB>>", "7": "<(IDENTIFIER,ans,new HashSet&lt;&gt;())<SUB>23</SUB>>", "131": "<(&lt;operator&gt;.assignment,)<SUB>25</SUB>>", "133": "<(iterator,&lt;empty&gt;)<SUB>25</SUB>>", "135": "<(IDENTIFIER,name,values())<SUB>25</SUB>>", "137": "<(hasNext,&lt;empty&gt;)<SUB>25</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "141": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>25</SUB>>", "143": "<(next,&lt;empty&gt;)<SUB>25</SUB>>", "145": "<(sort,sort(n, new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (Integer.compare(o1.b, o2.b) == 0)\\012            return Integer.compare(o1.a, o2.a);\\012        return Integer.compare(o1.b, o2.b);\\012    }\\012}))<SUB>26</SUB>>", "147": "<(IDENTIFIER,n,sort(n, new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (Integer.compare(o1.b, o2.b) == 0)\\012            return Integer.compare(o1.a, o2.a);\\012        return Integer.compare(o1.b, o2.b);\\012    }\\012}))<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "151": "<(&lt;operator&gt;.alloc,new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (Integer.compare(o1.b, o2.b) == 0)\\012            return Integer.compare(o1.a, o2.a);\\012        return Integer.compare(o1.b, o2.b);\\012    }\\012})<SUB>26</SUB>>", "153": "<(IDENTIFIER,$obj5,new Comparator&lt;Pair&gt;() {\\012\\012    @Override\\012    public int compare(Pair o1, Pair o2) {\\012        if (Integer.compare(o1.b, o2.b) == 0)\\012            return Integer.compare(o1.a, o2.a);\\012        return Integer.compare(o1.b, o2.b);\\012    }\\012})>", "10": "<(LOCAL,HashSet&lt;Pair&gt; temp: ANY)<SUB>36</SUB>>", "156": "<(IDENTIFIER,temp,ANY temp = new HashSet&lt;&gt;())<SUB>36</SUB>>", "158": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>36</SUB>>", "159": "<(add,add(n.get(0)))<SUB>37</SUB>>", "161": "<(get,get(0))<SUB>37</SUB>>", "163": "<(LITERAL,0,get(0))<SUB>37</SUB>>", "165": "<(&lt;operator&gt;.assignment,int num = 1)<SUB>38</SUB>>", "167": "<(LITERAL,1,int num = 1)<SUB>38</SUB>>", "169": "<(&lt;operator&gt;.assignment,int r = n.get(0).b)<SUB>39</SUB>>", "171": "<(&lt;operator&gt;.fieldAccess,n.get(0).b)<SUB>39</SUB>>", "173": "<(IDENTIFIER,n,get(0))<SUB>39</SUB>>", "175": "<(FIELD_IDENTIFIER,b,b)<SUB>39</SUB>>", "177": "<(LOCAL,int i: int)<SUB>41</SUB>>", "179": "<(IDENTIFIER,i,int i = 1)<SUB>41</SUB>>", "181": "<(&lt;operator&gt;.lessThan,i &lt; n.size())<SUB>41</SUB>>", "183": "<(size,size())<SUB>41</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,i++)<SUB>41</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "189": "<(&lt;operator&gt;.greaterThan,n.get(i).a &gt; r)<SUB>43</SUB>>", "191": "<(get,get(i))<SUB>43</SUB>>", "193": "<(IDENTIFIER,i,get(i))<SUB>43</SUB>>", "195": "<(IDENTIFIER,r,n.get(i).a &gt; r)<SUB>43</SUB>>", "197": "<(&lt;operator&gt;.postIncrement,num++)<SUB>44</SUB>>", "199": "<(&lt;operator&gt;.assignment,r = n.get(i).b)<SUB>45</SUB>>", "201": "<(&lt;operator&gt;.fieldAccess,n.get(i).b)<SUB>45</SUB>>", "203": "<(IDENTIFIER,n,get(i))<SUB>45</SUB>>", "205": "<(FIELD_IDENTIFIER,b,b)<SUB>45</SUB>>", "207": "<(IDENTIFIER,temp,add(n.get(i)))<SUB>46</SUB>>", "209": "<(IDENTIFIER,n,get(i))<SUB>46</SUB>>", "211": "<(CONTROL_STRUCTURE,if (num &gt; ans.size()),if (num &gt; ans.size()))<SUB>51</SUB>>", "213": "<(IDENTIFIER,num,num &gt; ans.size())<SUB>51</SUB>>", "215": "<(IDENTIFIER,ans,size())<SUB>51</SUB>>", "217": "<(IDENTIFIER,ans,ans = temp)<SUB>52</SUB>>", "219": "<(println,println(ans.size()))<SUB>55</SUB>>", "221": "<(IDENTIFIER,System,println(ans.size()))<SUB>55</SUB>>", "223": "<(size,size())<SUB>55</SUB>>", "225": "<(LOCAL,$iterLocal1: java.util.Iterator)<SUB>56</SUB>>", "227": "<(IDENTIFIER,$iterLocal1,)<SUB>56</SUB>>", "229": "<(IDENTIFIER,ans,&lt;empty&gt;)<SUB>56</SUB>>", "231": "<(hasNext,&lt;empty&gt;)<SUB>56</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>>", "235": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>56</SUB>>", "237": "<(next,&lt;empty&gt;)<SUB>56</SUB>>", "239": "<(println,println(val.a + &quot; &quot; + val.b))<SUB>57</SUB>>", "241": "<(IDENTIFIER,System,println(val.a + &quot; &quot; + val.b))<SUB>57</SUB>>", "243": "<(&lt;operator&gt;.addition,val.a + &quot; &quot; + val.b)<SUB>57</SUB>>", "245": "<(&lt;operator&gt;.fieldAccess,val.a)<SUB>57</SUB>>", "247": "<(FIELD_IDENTIFIER,a,a)<SUB>57</SUB>>", "249": "<(&lt;operator&gt;.fieldAccess,val.b)<SUB>57</SUB>>", "251": "<(FIELD_IDENTIFIER,b,b)<SUB>57</SUB>>", "253": "<(MODIFIER,STATIC)>"}}