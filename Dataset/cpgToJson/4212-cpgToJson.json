{"edges": [["17", "18"], ["17", "19"], ["17", "242"], ["17", "243"], ["17", "244"], ["19", "20"], ["19", "24"], ["19", "29"], ["19", "59"], ["19", "60"], ["19", "66"], ["19", "75"], ["19", "208"], ["20", "21"], ["20", "22"], ["22", "23"], ["24", "25"], ["24", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["29", "34"], ["29", "37"], ["29", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["37", "38"], ["39", "40"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "74"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "91"], ["85", "111"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "205"], ["112", "113"], ["112", "114"], ["112", "119"], ["112", "120"], ["112", "129"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["129", "139"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["147", "148"], ["147", "149"], ["147", "154"], ["147", "157"], ["147", "159"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "167"], ["159", "186"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["167", "168"], ["167", "175"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "185"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "194"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "204"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["218", "230"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "236"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["236", "237"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["20", "26"], ["24", "31"], ["60", "72"], ["66", "77"], ["22", "20"], ["26", "24"], ["31", "34"], ["34", "42"], ["34", "63"], ["37", "34"], ["62", "60"], ["67", "66"], ["77", "80"], ["80", "89"], ["80", "210"], ["83", "80"], ["210", "213"], ["213", "244"], ["213", "222"], ["216", "213"], ["63", "62"], ["69", "67"], ["87", "93"], ["219", "233"], ["42", "45"], ["45", "53"], ["45", "37"], ["48", "45"], ["70", "69"], ["89", "87"], ["93", "96"], ["96", "106"], ["96", "116"], ["99", "96"], ["205", "116"], ["205", "83"], ["220", "227"], ["223", "219"], ["231", "240"], ["231", "216"], ["51", "48"], ["72", "70"], ["102", "99"], ["114", "123"], ["120", "131"], ["222", "220"], ["225", "223"], ["233", "231"], ["237", "216"], ["52", "57"], ["57", "51"], ["103", "102"], ["116", "114"], ["122", "120"], ["131", "134"], ["134", "205"], ["134", "142"], ["137", "134"], ["227", "225"], ["238", "237"], ["53", "52"], ["105", "103"], ["123", "126"], ["126", "122"], ["240", "238"], ["106", "105"], ["141", "137"], ["141", "151"], ["149", "154"], ["154", "162"], ["154", "137"], ["157", "154"], ["142", "141"], ["151", "149"], ["167", "191"], ["186", "157"], ["161", "157"], ["161", "172"], ["168", "177"], ["175", "167"], ["187", "196"], ["194", "186"], ["162", "161"], ["170", "168"], ["176", "175"], ["189", "187"], ["195", "194"], ["172", "170"], ["177", "181"], ["180", "176"], ["191", "189"], ["196", "200"], ["199", "195"], ["181", "180"], ["200", "199"], ["17", "22"], ["18", "244"], ["22", "244"], ["20", "244"], ["20", "244"], ["24", "244"], ["24", "244"], ["24", "244"], ["60", "244"], ["62", "244"], ["60", "244"], ["60", "244"], ["69", "244"], ["66", "244"], ["66", "244"], ["77", "244"], ["80", "244"], ["210", "244"], ["213", "244"], ["213", "244"], ["213", "244"], ["216", "244"], ["83", "244"], ["37", "244"], ["223", "244"], ["17", "18"], ["22", "20"], ["26", "24"], ["62", "60"], ["17", "66"], ["17", "31"], ["63", "77"], ["17", "77"], ["17", "210"], ["17", "22"], ["20", "26"], ["17", "26"], ["31", "34"], ["37", "34"], ["17", "34"], ["26", "34"], ["45", "34"], ["34", "37"], ["17", "37"], ["63", "62"], ["63", "62"], ["77", "80"], ["83", "80"], ["17", "80"], ["126", "83"], ["17", "83"], ["89", "87"], ["210", "213"], ["216", "213"], ["17", "213"], ["233", "213"], ["134", "213"], ["63", "213"], ["231", "216"], ["17", "216"], ["17", "42"], ["17", "63"], ["34", "63"], ["60", "69"], ["17", "69"], ["17", "93"], ["237", "219"], ["223", "219"], ["223", "219"], ["42", "45"], ["48", "45"], ["17", "45"], ["34", "45"], ["45", "48"], ["17", "48"], ["57", "51"], ["134", "89"], ["17", "89"], ["63", "89"], ["93", "96"], ["99", "96"], ["17", "96"], ["80", "96"], ["105", "99"], ["17", "99"], ["17", "102"], ["116", "114"], ["116", "114"], ["122", "120"], ["122", "120"], ["116", "205"], ["17", "205"], ["116", "205"], ["141", "205"], ["161", "205"], ["102", "205"], ["17", "223"], ["60", "223"], ["227", "231"], ["17", "231"], ["233", "231"], ["233", "231"], ["17", "131"], ["213", "233"], ["17", "233"], ["219", "237"], ["17", "237"], ["22", "57"], ["17", "57"], ["205", "116"], ["17", "116"], ["87", "116"], ["141", "116"], ["161", "116"], ["205", "116"], ["102", "116"], ["123", "122"], ["123", "122"], ["126", "122"], ["126", "122"], ["131", "134"], ["137", "134"], ["17", "134"], ["89", "134"], ["154", "134"], ["106", "134"], ["134", "137"], ["172", "137"], ["17", "137"], ["17", "227"], ["213", "227"], ["106", "105"], ["106", "105"], ["96", "105"], ["17", "105"], ["17", "123"], ["96", "123"], ["126", "123"], ["123", "126"], ["17", "126"], ["134", "149"], ["17", "149"], ["89", "106"], ["17", "106"], ["116", "141"], ["17", "141"], ["149", "154"], ["157", "154"], ["17", "154"], ["134", "154"], ["154", "157"], ["191", "157"], ["17", "157"], ["175", "167"], ["175", "167"], ["194", "186"], ["194", "186"], ["134", "151"], ["17", "151"], ["60", "167"], ["60", "186"], ["116", "161"], ["17", "161"], ["176", "175"], ["176", "175"], ["120", "175"], ["194", "175"], ["17", "175"], ["195", "194"], ["195", "194"], ["175", "194"], ["17", "194"], ["114", "170"], ["189", "170"], ["17", "170"], ["172", "170"], ["172", "170"], ["60", "176"], ["195", "176"], ["170", "189"], ["17", "189"], ["191", "189"], ["191", "189"], ["60", "195"], ["176", "195"], ["17", "172"], ["134", "172"], ["17", "191"], ["154", "191"], ["34", "34"], ["34", "42"], ["34", "37"], ["34", "45"], ["80", "96"], ["80", "120"], ["80", "114"], ["80", "131"], ["80", "87"], ["80", "134"], ["80", "93"], ["80", "80"], ["80", "205"], ["80", "89"], ["80", "116"], ["80", "122"], ["80", "123"], ["80", "126"], ["80", "83"], ["213", "225"], ["213", "213"], ["213", "223"], ["213", "231"], ["213", "233"], ["213", "220"], ["213", "216"], ["213", "227"], ["213", "222"], ["213", "219"], ["45", "51"], ["45", "57"], ["45", "52"], ["45", "48"], ["45", "45"], ["45", "53"], ["96", "96"], ["96", "102"], ["96", "103"], ["96", "99"], ["96", "106"], ["96", "105"], ["205", "120"], ["205", "114"], ["205", "131"], ["205", "134"], ["205", "205"], ["205", "116"], ["205", "122"], ["205", "123"], ["205", "126"], ["231", "240"], ["231", "238"], ["231", "237"], ["134", "134"], ["134", "137"], ["134", "141"], ["134", "142"], ["141", "154"], ["141", "149"], ["141", "151"], ["154", "154"], ["154", "161"], ["154", "162"], ["154", "157"], ["161", "167"], ["161", "196"], ["161", "189"], ["161", "168"], ["161", "170"], ["161", "181"], ["161", "191"], ["161", "195"], ["161", "187"], ["161", "194"], ["161", "186"], ["161", "180"], ["161", "200"], ["161", "176"], ["161", "199"], ["161", "177"], ["161", "175"], ["161", "172"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,N,N = nextInt())<SUB>2</SUB>>", "23": "<(IDENTIFIER,sc,nextInt())<SUB>2</SUB>>", "25": "<(IDENTIFIER,p,p = new double[N][N])<SUB>3</SUB>>", "27": "<(IDENTIFIER,N,new double[N][N])<SUB>3</SUB>>", "29": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>4</SUB>>", "33": "<(LITERAL,0,int i = 0)<SUB>4</SUB>>", "35": "<(IDENTIFIER,i,i &lt; N)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.preIncrement,++i)<SUB>4</SUB>>", "39": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "41": "<(LOCAL,int j: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,j,int j = 0)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>5</SUB>>", "47": "<(IDENTIFIER,N,j &lt; N)<SUB>5</SUB>>", "49": "<(IDENTIFIER,j,++j)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,p[i][j] = nextDouble())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,p[i][j] = nextDouble())<SUB>6</SUB>>", "57": "<(nextDouble,nextDouble())<SUB>6</SUB>>", "59": "<(LOCAL,double[] memo: double[])<SUB>9</SUB>>", "61": "<(IDENTIFIER,memo,double[] memo = new double[1 &lt;&lt; N])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>9</SUB>>", "65": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,memo[memo.length - 1])<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.subtraction,memo.length - 1)<SUB>10</SUB>>", "71": "<(IDENTIFIER,memo,memo.length - 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,memo.length - 1)<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = N; Some(i &gt;= 2); --i),for (int i = N; Some(i &gt;= 2); --i))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = N)<SUB>11</SUB>>", "79": "<(IDENTIFIER,N,int i = N)<SUB>11</SUB>>", "81": "<(IDENTIFIER,i,i &gt;= 2)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.preDecrement,--i)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,int[] live = new int[N])<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.alloc,new int[N])>", "91": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); ++j),for (int j = 0; Some(j &lt; i); ++j))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "95": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "97": "<(IDENTIFIER,j,j &lt; i)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.preIncrement,++j)<SUB>13</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,live[N - 1 - j])<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.subtraction,N - 1 - j)<SUB>14</SUB>>", "107": "<(IDENTIFIER,N,N - 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,j,N - 1 - j)<SUB>14</SUB>>", "111": "<(CONTROL_STRUCTURE,do {...} while (nextPermutation(live)),do {...} while (nextPermutation(live)))<SUB>16</SUB>>", "113": "<(LOCAL,int n: int)<SUB>17</SUB>>", "115": "<(IDENTIFIER,n,int n = toInt(live))<SUB>17</SUB>>", "117": "<(IDENTIFIER,this,toInt(live))<SUB>17</SUB>>", "119": "<(LOCAL,double norm: double)<SUB>18</SUB>>", "121": "<(IDENTIFIER,norm,double norm = 2.0 / i / (i - 1))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.division,2.0 / i)<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,2.0 / i)<SUB>18</SUB>>", "127": "<(IDENTIFIER,i,i - 1)<SUB>18</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int f1 = 0; Some(f1 &lt; N); ++f1),for (int f1 = 0; Some(f1 &lt; N); ++f1))<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.assignment,int f1 = 0)<SUB>19</SUB>>", "133": "<(LITERAL,0,int f1 = 0)<SUB>19</SUB>>", "135": "<(IDENTIFIER,f1,f1 &lt; N)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.preIncrement,++f1)<SUB>19</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.equals,live[f1] == 0)<SUB>20</SUB>>", "143": "<(IDENTIFIER,live,live[f1] == 0)<SUB>20</SUB>>", "145": "<(LITERAL,0,live[f1] == 0)<SUB>20</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int f2 = f1 + 1; Some(f2 &lt; N); ++f2),for (int f2 = f1 + 1; Some(f2 &lt; N); ++f2))<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.assignment,int f2 = f1 + 1)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.addition,f1 + 1)<SUB>21</SUB>>", "153": "<(LITERAL,1,f1 + 1)<SUB>21</SUB>>", "155": "<(IDENTIFIER,f2,f2 &lt; N)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.preIncrement,++f2)<SUB>21</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.equals,live[f2] == 0)<SUB>22</SUB>>", "163": "<(IDENTIFIER,live,live[f2] == 0)<SUB>22</SUB>>", "165": "<(LITERAL,0,live[f2] == 0)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.assignmentPlus,memo[n - (1 &lt;&lt; f1)] += memo[n] * p[f2][f1] * norm)<SUB>23</SUB>>", "169": "<(IDENTIFIER,memo,memo[n - (1 &lt;&lt; f1)] += memo[n] * p[f2][f1] * norm)<SUB>23</SUB>>", "171": "<(IDENTIFIER,n,n - (1 &lt;&lt; f1))<SUB>23</SUB>>", "173": "<(LITERAL,1,1 &lt;&lt; f1)<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.multiplication,memo[n] * p[f2][f1] * norm)<SUB>23</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,memo[n])<SUB>23</SUB>>", "179": "<(IDENTIFIER,n,memo[n] * p[f2][f1])<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,p[f2])<SUB>23</SUB>>", "183": "<(IDENTIFIER,f2,memo[n] * p[f2][f1])<SUB>23</SUB>>", "185": "<(IDENTIFIER,norm,memo[n] * p[f2][f1] * norm)<SUB>23</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,memo[n - (1 &lt;&lt; f2)])<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.subtraction,n - (1 &lt;&lt; f2))<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; f2)<SUB>24</SUB>>", "193": "<(IDENTIFIER,f2,1 &lt;&lt; f2)<SUB>24</SUB>>", "195": "<(&lt;operator&gt;.multiplication,memo[n] * p[f1][f2])<SUB>24</SUB>>", "197": "<(IDENTIFIER,memo,memo[n] * p[f1][f2])<SUB>24</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,p[f1][f2])<SUB>24</SUB>>", "201": "<(IDENTIFIER,p,memo[n] * p[f1][f2])<SUB>24</SUB>>", "203": "<(IDENTIFIER,f2,memo[n] * p[f1][f2])<SUB>24</SUB>>", "205": "<(nextPermutation,nextPermutation(live))<SUB>27</SUB>>", "207": "<(IDENTIFIER,live,nextPermutation(live))<SUB>27</SUB>>", "209": "<(LOCAL,int i: int)<SUB>30</SUB>>", "211": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "213": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>30</SUB>>", "215": "<(IDENTIFIER,N,i &lt; N)<SUB>30</SUB>>", "217": "<(IDENTIFIER,i,++i)<SUB>30</SUB>>", "219": "<(print,print(format.format(memo[1 &lt;&lt; i])))<SUB>31</SUB>>", "221": "<(IDENTIFIER,System,print(format.format(memo[1 &lt;&lt; i])))<SUB>31</SUB>>", "223": "<(format,format(memo[1 &lt;&lt; i]))<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,memo[1 &lt;&lt; i])<SUB>31</SUB>>", "227": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>31</SUB>>", "229": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>31</SUB>>", "231": "<(&lt;operator&gt;.lessThan,i &lt; N - 1)<SUB>32</SUB>>", "233": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>32</SUB>>", "235": "<(LITERAL,1,N - 1)<SUB>32</SUB>>", "237": "<(print,System.out.print(&quot; &quot;))<SUB>33</SUB>>", "239": "<(IDENTIFIER,System,System.out.print(&quot; &quot;))<SUB>33</SUB>>", "241": "<(LITERAL,&quot; &quot;,System.out.print(&quot; &quot;))<SUB>33</SUB>>", "243": "<(MODIFIER,STATIC)>"}}