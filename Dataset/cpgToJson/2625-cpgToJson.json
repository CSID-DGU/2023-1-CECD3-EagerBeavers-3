{"edges": [["19", "21"], ["19", "127"], ["19", "128"], ["19", "129"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "52"], ["21", "53"], ["21", "56"], ["21", "59"], ["21", "122"], ["21", "125"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "66"], ["63", "67"], ["63", "71"], ["63", "72"], ["63", "75"], ["63", "76"], ["63", "79"], ["63", "80"], ["63", "85"], ["63", "87"], ["63", "119"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "106"], ["98", "109"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["106", "107"], ["107", "108"], ["109", "110"], ["110", "111"], ["111", "112"], ["111", "116"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "38"], ["53", "56"], ["56", "60"], ["122", "125"], ["125", "129"], ["24", "22"], ["29", "27"], ["34", "32"], ["38", "41"], ["41", "47"], ["41", "53"], ["44", "41"], ["46", "44"], ["60", "64"], ["60", "122"], ["47", "50"], ["50", "46"], ["64", "69"], ["67", "72"], ["72", "76"], ["76", "82"], ["80", "85"], ["85", "89"], ["119", "60"], ["69", "67"], ["82", "80"], ["89", "92"], ["92", "101"], ["92", "119"], ["95", "92"], ["99", "107"], ["99", "114"], ["100", "99"], ["107", "95"], ["101", "100"], ["111", "95"], ["112", "116"], ["116", "111"], ["114", "112"], ["19", "24"], ["20", "129"], ["22", "129"], ["25", "129"], ["29", "129"], ["27", "129"], ["27", "129"], ["32", "129"], ["32", "129"], ["38", "129"], ["41", "129"], ["41", "129"], ["53", "129"], ["56", "129"], ["56", "129"], ["60", "129"], ["60", "129"], ["122", "129"], ["122", "129"], ["125", "129"], ["125", "129"], ["64", "129"], ["67", "129"], ["67", "129"], ["72", "129"], ["72", "129"], ["76", "129"], ["80", "129"], ["80", "129"], ["80", "129"], ["85", "129"], ["89", "129"], ["92", "129"], ["92", "129"], ["92", "129"], ["119", "129"], ["119", "129"], ["119", "129"], ["100", "129"], ["100", "129"], ["99", "129"], ["99", "129"], ["114", "129"], ["111", "129"], ["111", "129"], ["111", "129"], ["107", "129"], ["95", "129"], ["46", "129"], ["50", "129"], ["46", "129"], ["46", "129"], ["44", "129"], ["56", "129"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["19", "53"], ["22", "25"], ["19", "25"], ["19", "38"], ["50", "46"], ["19", "56"], ["32", "56"], ["46", "56"], ["19", "122"], ["53", "122"], ["64", "122"], ["122", "125"], ["19", "125"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["38", "41"], ["44", "41"], ["19", "41"], ["34", "41"], ["41", "44"], ["19", "44"], ["41", "60"], ["85", "60"], ["107", "60"], ["19", "60"], ["69", "67"], ["19", "72"], ["69", "76"], ["19", "76"], ["56", "80"], ["119", "80"], ["67", "119"], ["111", "119"], ["19", "119"], ["29", "50"], ["19", "50"], ["53", "64"], ["19", "64"], ["19", "85"], ["69", "85"], ["19", "89"], ["60", "69"], ["19", "69"], ["89", "92"], ["95", "92"], ["19", "92"], ["76", "92"], ["92", "95"], ["19", "95"], ["100", "99"], ["100", "99"], ["19", "99"], ["56", "100"], ["119", "100"], ["46", "100"], ["80", "100"], ["19", "100"], ["85", "107"], ["19", "107"], ["56", "111"], ["119", "111"], ["100", "111"], ["72", "114"], ["19", "114"], ["41", "47"], ["41", "46"], ["41", "50"], ["41", "44"], ["41", "41"], ["60", "60"], ["60", "64"], ["60", "89"], ["60", "85"], ["60", "72"], ["60", "69"], ["60", "67"], ["60", "119"], ["60", "92"], ["60", "76"], ["60", "82"], ["60", "80"], ["92", "99"], ["92", "95"], ["92", "92"], ["92", "101"], ["92", "100"], ["99", "107"], ["99", "116"], ["99", "114"], ["99", "112"], ["99", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new MyScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new MyScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int[] elements: int[])<SUB>4</SUB>>", "33": "<(IDENTIFIER,elements,int[] elements = new int[n])<SUB>4</SUB>>", "35": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,elements[i])<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,elements[i] = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,scan,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>8</SUB>>", "55": "<(LITERAL,0,int x = 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,Arrays,sort(elements))<SUB>10</SUB>>", "59": "<(CONTROL_STRUCTURE,while (n &gt; 0),while (n &gt; 0))<SUB>11</SUB>>", "61": "<(IDENTIFIER,n,n &gt; 0)<SUB>11</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "65": "<(IDENTIFIER,x,x++)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] temp = new int[n])<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n])>", "71": "<(LOCAL,int j: int)<SUB>14</SUB>>", "73": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "75": "<(LOCAL,int size: int)<SUB>15</SUB>>", "77": "<(IDENTIFIER,size,int size = n)<SUB>15</SUB>>", "79": "<(LOCAL,int min: int)<SUB>16</SUB>>", "81": "<(IDENTIFIER,min,int min = elements[0])<SUB>16</SUB>>", "83": "<(IDENTIFIER,elements,int min = elements[0])<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.postDecrement,n--)<SUB>17</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; size); i++),for (int i = 1; Some(i &lt; size); i++))<SUB>18</SUB>>", "89": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "91": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "93": "<(IDENTIFIER,i,i &lt; size)<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.equals,elements[i] % min == 0)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,elements[i])<SUB>19</SUB>>", "103": "<(IDENTIFIER,i,elements[i] % min)<SUB>19</SUB>>", "105": "<(LITERAL,0,elements[i] % min == 0)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,n--)<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.assignment,temp[j++] = elements[i])<SUB>23</SUB>>", "113": "<(IDENTIFIER,temp,temp[j++] = elements[i])<SUB>23</SUB>>", "115": "<(IDENTIFIER,j,j++)<SUB>23</SUB>>", "117": "<(IDENTIFIER,elements,temp[j++] = elements[i])<SUB>23</SUB>>", "119": "<(&lt;operator&gt;.assignment,elements = temp)<SUB>27</SUB>>", "121": "<(IDENTIFIER,temp,elements = temp)<SUB>27</SUB>>", "123": "<(IDENTIFIER,out,println(x))<SUB>30</SUB>>", "125": "<(close,close())<SUB>31</SUB>>", "127": "<(MODIFIER,PUBLIC)>", "129": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}