{"edges": [["24", "26"], ["24", "195"], ["24", "196"], ["24", "197"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "8"], ["26", "55"], ["26", "56"], ["26", "62"], ["26", "65"], ["26", "68"], ["26", "69"], ["26", "73"], ["26", "92"], ["26", "93"], ["26", "96"], ["26", "129"], ["26", "130"], ["26", "137"], ["26", "193"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "49"], ["45", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "7"], ["65", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["137", "145"], ["137", "149"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["145", "146"], ["145", "148"], ["146", "147"], ["149", "150"], ["149", "153"], ["149", "156"], ["149", "157"], ["149", "163"], ["149", "164"], ["149", "170"], ["149", "187"], ["150", "151"], ["150", "152"], ["153", "9"], ["153", "154"], ["154", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["170", "171"], ["170", "182"], ["171", "172"], ["171", "181"], ["172", "173"], ["172", "180"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["182", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["189", "192"], ["193", "194"], ["27", "34"], ["30", "43"], ["41", "48"], ["44", "60"], ["56", "64"], ["62", "66"], ["65", "71"], ["69", "75"], ["93", "98"], ["130", "143"], ["193", "197"], ["29", "27"], ["43", "41"], ["58", "56"], ["64", "62"], ["66", "65"], ["71", "69"], ["75", "78"], ["78", "85"], ["78", "93"], ["81", "78"], ["98", "101"], ["101", "109"], ["101", "133"], ["104", "101"], ["132", "130"], ["139", "146"], ["145", "152"], ["145", "193"], ["32", "39"], ["35", "30"], ["46", "53"], ["49", "44"], ["60", "58"], ["84", "81"], ["133", "132"], ["141", "139"], ["146", "145"], ["150", "154"], ["153", "161"], ["157", "168"], ["164", "175"], ["187", "146"], ["34", "32"], ["37", "35"], ["48", "46"], ["51", "49"], ["85", "90"], ["88", "84"], ["109", "112"], ["112", "120"], ["112", "104"], ["115", "112"], ["143", "141"], ["152", "150"], ["154", "153"], ["159", "157"], ["166", "164"], ["171", "185"], ["171", "189"], ["189", "187"], ["39", "37"], ["53", "51"], ["90", "88"], ["161", "159"], ["168", "166"], ["172", "171"], ["183", "189"], ["119", "127"], ["119", "115"], ["173", "172"], ["185", "183"], ["120", "123"], ["123", "119"], ["127", "115"], ["174", "173"], ["175", "174"], ["24", "29"], ["25", "197"], ["27", "197"], ["35", "197"], ["35", "197"], ["35", "197"], ["30", "197"], ["41", "197"], ["46", "197"], ["49", "197"], ["49", "197"], ["49", "197"], ["44", "197"], ["56", "197"], ["62", "197"], ["65", "197"], ["65", "197"], ["69", "197"], ["69", "197"], ["69", "197"], ["93", "197"], ["98", "197"], ["101", "197"], ["101", "197"], ["101", "197"], ["130", "197"], ["133", "197"], ["132", "197"], ["130", "197"], ["130", "197"], ["141", "197"], ["143", "197"], ["141", "197"], ["139", "197"], ["139", "197"], ["146", "197"], ["145", "197"], ["145", "197"], ["193", "197"], ["193", "197"], ["150", "197"], ["154", "197"], ["153", "197"], ["153", "197"], ["157", "197"], ["166", "197"], ["168", "197"], ["166", "197"], ["164", "197"], ["164", "197"], ["175", "197"], ["175", "197"], ["174", "197"], ["173", "197"], ["172", "197"], ["171", "197"], ["171", "197"], ["183", "197"], ["183", "197"], ["189", "197"], ["187", "197"], ["187", "197"], ["109", "197"], ["112", "197"], ["112", "197"], ["104", "197"], ["119", "197"], ["119", "197"], ["119", "197"], ["127", "197"], ["115", "197"], ["84", "197"], ["90", "197"], ["88", "197"], ["84", "197"], ["84", "197"], ["81", "197"], ["24", "25"], ["24", "27"], ["24", "41"], ["58", "56"], ["58", "56"], ["24", "62"], ["71", "69"], ["24", "93"], ["132", "130"], ["132", "130"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["46", "44"], ["49", "44"], ["62", "65"], ["24", "65"], ["66", "65"], ["24", "75"], ["24", "98"], ["141", "139"], ["141", "139"], ["44", "193"], ["187", "193"], ["24", "193"], ["24", "32"], ["24", "40"], ["24", "46"], ["24", "54"], ["24", "58"], ["60", "58"], ["60", "66"], ["24", "66"], ["56", "71"], ["24", "71"], ["75", "78"], ["81", "78"], ["24", "78"], ["71", "78"], ["78", "81"], ["24", "81"], ["88", "84"], ["88", "84"], ["98", "101"], ["104", "101"], ["24", "101"], ["78", "101"], ["112", "104"], ["24", "104"], ["133", "132"], ["133", "132"], ["24", "132"], ["146", "145"], ["24", "145"], ["24", "150"], ["159", "157"], ["159", "157"], ["166", "164"], ["166", "164"], ["32", "35"], ["24", "35"], ["46", "49"], ["24", "49"], ["30", "60"], ["24", "60"], ["24", "109"], ["93", "133"], ["127", "133"], ["24", "133"], ["58", "141"], ["88", "141"], ["24", "141"], ["143", "141"], ["139", "146"], ["24", "146"], ["150", "153"], ["24", "153"], ["154", "153"], ["44", "187"], ["24", "187"], ["58", "88"], ["24", "88"], ["90", "88"], ["109", "112"], ["115", "112"], ["24", "112"], ["101", "112"], ["112", "115"], ["24", "115"], ["66", "143"], ["24", "143"], ["143", "154"], ["24", "154"], ["141", "159"], ["166", "159"], ["24", "159"], ["161", "159"], ["159", "166"], ["24", "166"], ["168", "166"], ["172", "171"], ["172", "171"], ["24", "171"], ["185", "183"], ["24", "189"], ["65", "90"], ["24", "90"], ["153", "161"], ["24", "161"], ["161", "168"], ["24", "168"], ["173", "172"], ["173", "172"], ["24", "172"], ["69", "119"], ["84", "119"], ["175", "173"], ["175", "173"], ["24", "173"], ["130", "185"], ["24", "185"], ["93", "127"], ["24", "127"], ["175", "174"], ["175", "174"], ["24", "174"], ["164", "175"], ["24", "175"], ["157", "175"], ["78", "81"], ["78", "84"], ["78", "85"], ["78", "90"], ["78", "88"], ["78", "78"], ["101", "104"], ["101", "112"], ["101", "101"], ["101", "109"], ["145", "154"], ["145", "145"], ["145", "146"], ["145", "161"], ["145", "166"], ["145", "150"], ["145", "189"], ["145", "153"], ["145", "168"], ["145", "157"], ["145", "159"], ["145", "187"], ["145", "173"], ["145", "152"], ["145", "174"], ["145", "164"], ["145", "175"], ["145", "171"], ["145", "172"], ["112", "115"], ["112", "120"], ["112", "119"], ["112", "123"], ["112", "112"], ["171", "183"], ["171", "185"], ["119", "127"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "48": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "50": "<(IDENTIFIER,$obj2,new BufferedOutputStream(System.out))>", "52": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "54": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "55": "<(LOCAL,int n: int)<SUB>6</SUB>>", "57": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>6</SUB>>", "61": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "63": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "65": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "66": "<(readLine,readLine())<SUB>7</SUB>>", "68": "<(LOCAL,int[] num: int[])<SUB>8</SUB>>", "70": "<(IDENTIFIER,num,int[] num = new int[n])<SUB>8</SUB>>", "72": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "74": "<(LOCAL,int i: int)<SUB>9</SUB>>", "76": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "78": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "80": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "82": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "84": "<(&lt;operator&gt;.assignment,num[i] = parseInt(st.nextToken()))<SUB>10</SUB>>", "86": "<(IDENTIFIER,num,num[i] = parseInt(st.nextToken()))<SUB>10</SUB>>", "88": "<(parseInt,parseInt(st.nextToken()))<SUB>10</SUB>>", "90": "<(nextToken,nextToken())<SUB>10</SUB>>", "92": "<(LOCAL,int count: int)<SUB>13</SUB>>", "94": "<(IDENTIFIER,count,int count = 0)<SUB>13</SUB>>", "96": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "98": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "100": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "102": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "104": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "106": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "108": "<(LOCAL,int j: int)<SUB>15</SUB>>", "110": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "112": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>15</SUB>>", "114": "<(IDENTIFIER,i,j &lt; i)<SUB>15</SUB>>", "116": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "118": "<(CONTROL_STRUCTURE,if (num[i] &lt; num[j]),if (num[i] &lt; num[j]))<SUB>16</SUB>>", "120": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>16</SUB>>", "122": "<(IDENTIFIER,i,num[i] &lt; num[j])<SUB>16</SUB>>", "124": "<(IDENTIFIER,num,num[i] &lt; num[j])<SUB>16</SUB>>", "126": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "128": "<(IDENTIFIER,count,count++)<SUB>17</SUB>>", "130": "<(&lt;operator&gt;.assignment,boolean ans = count % 2 == 0)<SUB>22</SUB>>", "132": "<(&lt;operator&gt;.equals,count % 2 == 0)<SUB>22</SUB>>", "134": "<(IDENTIFIER,count,count % 2)<SUB>22</SUB>>", "136": "<(LITERAL,0,count % 2 == 0)<SUB>22</SUB>>", "138": "<(LOCAL,int m: int)<SUB>23</SUB>>", "140": "<(IDENTIFIER,m,int m = parseInt(br.readLine()))<SUB>23</SUB>>", "142": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>23</SUB>>", "144": "<(IDENTIFIER,br,readLine())<SUB>23</SUB>>", "146": "<(&lt;operator&gt;.postDecrement,m--)<SUB>23</SUB>>", "148": "<(LITERAL,0,m-- &gt; 0)<SUB>23</SUB>>", "150": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>24</SUB>>", "152": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>24</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>24</SUB>>", "155": "<(IDENTIFIER,br,readLine())<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.assignment,int l = parseInt(st.nextToken()))<SUB>25</SUB>>", "159": "<(parseInt,parseInt(st.nextToken()))<SUB>25</SUB>>", "161": "<(nextToken,nextToken())<SUB>25</SUB>>", "163": "<(LOCAL,int r: int)<SUB>26</SUB>>", "165": "<(IDENTIFIER,r,int r = parseInt(st.nextToken()))<SUB>26</SUB>>", "167": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>26</SUB>>", "169": "<(IDENTIFIER,st,nextToken())<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.notEquals,((r - l + 1) / 2) % 2 != 0)<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.division,(r - l + 1) / 2)<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.subtraction,r - l)<SUB>27</SUB>>", "177": "<(IDENTIFIER,l,r - l)<SUB>27</SUB>>", "179": "<(LITERAL,2,(r - l + 1) / 2)<SUB>27</SUB>>", "181": "<(LITERAL,0,((r - l + 1) / 2) % 2 != 0)<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.assignment,ans = !ans)<SUB>28</SUB>>", "185": "<(&lt;operator&gt;.logicalNot,!ans)<SUB>28</SUB>>", "187": "<(println,println(ans ? &quot;even&quot; : &quot;odd&quot;))<SUB>30</SUB>>", "189": "<(&lt;operator&gt;.conditional,ans ? &quot;even&quot; : &quot;odd&quot;)<SUB>30</SUB>>", "191": "<(LITERAL,&quot;even&quot;,ans ? &quot;even&quot; : &quot;odd&quot;)<SUB>30</SUB>>", "193": "<(close,close())<SUB>32</SUB>>", "195": "<(MODIFIER,PUBLIC)>", "197": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}