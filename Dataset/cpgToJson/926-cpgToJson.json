{"edges": [["19", "21"], ["19", "65"], ["19", "66"], ["19", "67"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "40"], ["21", "58"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "57"], ["45", "46"], ["45", "48"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["22", "28"], ["25", "34"], ["32", "38"], ["36", "43"], ["40", "61"], ["58", "67"], ["24", "22"], ["26", "25"], ["34", "32"], ["38", "36"], ["42", "40"], ["59", "62"], ["62", "58"], ["28", "26"], ["43", "46"], ["44", "42"], ["61", "59"], ["45", "44"], ["46", "54"], ["48", "45"], ["50", "48"], ["52", "50"], ["54", "52"], ["19", "24"], ["20", "67"], ["22", "67"], ["25", "67"], ["25", "67"], ["32", "67"], ["38", "67"], ["36", "67"], ["36", "67"], ["45", "67"], ["54", "67"], ["52", "67"], ["50", "67"], ["48", "67"], ["45", "67"], ["44", "67"], ["42", "67"], ["40", "67"], ["40", "67"], ["58", "67"], ["62", "67"], ["62", "67"], ["58", "67"], ["58", "67"], ["48", "67"], ["19", "20"], ["19", "22"], ["34", "32"], ["38", "36"], ["19", "40"], ["44", "40"], ["44", "40"], ["22", "25"], ["19", "25"], ["62", "58"], ["62", "58"], ["25", "34"], ["19", "34"], ["34", "38"], ["19", "38"], ["19", "42"], ["44", "42"], ["44", "42"], ["19", "62"], ["32", "62"], ["40", "62"], ["46", "44"], ["48", "44"], ["48", "44"], ["19", "44"], ["46", "45"], ["48", "45"], ["48", "45"], ["19", "46"], ["19", "48"], ["52", "48"], ["52", "48"], ["19", "50"], ["52", "50"], ["52", "50"], ["19", "52"], ["32", "52"], ["36", "52"], ["32", "54"], ["19", "54"], ["36", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY ak = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,ak,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(LOCAL,long x: long)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,n = nextLong())<SUB>4</SUB>>", "35": "<(IDENTIFIER,ak,nextLong())<SUB>4</SUB>>", "37": "<(IDENTIFIER,k,k = nextLong())<SUB>5</SUB>>", "39": "<(IDENTIFIER,ak,nextLong())<SUB>5</SUB>>", "41": "<(IDENTIFIER,x,x = (long) ((-3 + Math.sqrt(9 + 8 * (n + k))) / 2))<SUB>6</SUB>>", "43": "<(TYPE_REF,long,long)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.addition,-3 + Math.sqrt(9 + 8 * (n + k)))<SUB>6</SUB>>", "47": "<(LITERAL,3,-3)<SUB>6</SUB>>", "49": "<(IDENTIFIER,Math,Math.sqrt(9 + 8 * (n + k)))<SUB>6</SUB>>", "51": "<(LITERAL,9,9 + 8 * (n + k))<SUB>6</SUB>>", "53": "<(LITERAL,8,8 * (n + k))<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,n + k)<SUB>6</SUB>>", "57": "<(LITERAL,2,(-3 + Math.sqrt(9 + 8 * (n + k))) / 2)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "61": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,n - x)<SUB>7</SUB>>", "65": "<(MODIFIER,PUBLIC)>", "67": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}