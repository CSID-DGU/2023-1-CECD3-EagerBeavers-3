{"edges": [["19", "20"], ["19", "21"], ["19", "184"], ["19", "185"], ["19", "186"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "60"], ["21", "76"], ["21", "77"], ["21", "89"], ["21", "90"], ["21", "94"], ["21", "95"], ["21", "99"], ["21", "145"], ["21", "146"], ["21", "149"], ["21", "179"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["79", "82"], ["79", "83"], ["79", "84"], ["79", "85"], ["79", "86"], ["79", "87"], ["79", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "133"], ["121", "122"], ["121", "129"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "141"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["160", "161"], ["160", "168"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["77", "92"], ["90", "97"], ["95", "101"], ["146", "151"], ["179", "186"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "55"], ["49", "62"], ["52", "49"], ["54", "52"], ["62", "65"], ["65", "71"], ["65", "79"], ["68", "65"], ["70", "68"], ["79", "77"], ["92", "90"], ["97", "95"], ["101", "104"], ["104", "112"], ["104", "146"], ["107", "104"], ["151", "154"], ["154", "162"], ["154", "182"], ["157", "154"], ["180", "179"], ["28", "26"], ["55", "58"], ["58", "54"], ["71", "74"], ["74", "70"], ["182", "180"], ["112", "115"], ["115", "123"], ["115", "107"], ["118", "115"], ["161", "173"], ["161", "157"], ["168", "157"], ["162", "165"], ["165", "161"], ["170", "168"], ["122", "130"], ["122", "135"], ["129", "135"], ["134", "142"], ["134", "118"], ["141", "118"], ["171", "176"], ["176", "170"], ["123", "126"], ["126", "122"], ["130", "129"], ["135", "138"], ["138", "134"], ["142", "141"], ["173", "171"], ["19", "24"], ["20", "186"], ["22", "186"], ["25", "186"], ["25", "186"], ["32", "186"], ["30", "186"], ["30", "186"], ["35", "186"], ["35", "186"], ["40", "186"], ["40", "186"], ["40", "186"], ["77", "186"], ["77", "186"], ["77", "186"], ["90", "186"], ["90", "186"], ["95", "186"], ["95", "186"], ["95", "186"], ["104", "186"], ["104", "186"], ["146", "186"], ["151", "186"], ["154", "186"], ["154", "186"], ["179", "186"], ["179", "186"], ["179", "186"], ["161", "186"], ["161", "186"], ["161", "186"], ["171", "186"], ["170", "186"], ["170", "186"], ["168", "186"], ["168", "186"], ["157", "186"], ["112", "186"], ["115", "186"], ["115", "186"], ["107", "186"], ["122", "186"], ["129", "186"], ["129", "186"], ["134", "186"], ["134", "186"], ["134", "186"], ["141", "186"], ["141", "186"], ["118", "186"], ["70", "186"], ["74", "186"], ["70", "186"], ["70", "186"], ["68", "186"], ["54", "186"], ["58", "186"], ["54", "186"], ["54", "186"], ["52", "186"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["92", "90"], ["97", "95"], ["19", "146"], ["22", "25"], ["19", "25"], ["19", "46"], ["58", "54"], ["19", "62"], ["74", "70"], ["19", "101"], ["19", "151"], ["146", "179"], ["168", "179"], ["19", "179"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["62", "65"], ["68", "65"], ["19", "65"], ["49", "65"], ["65", "68"], ["19", "68"], ["19", "79"], ["19", "92"], ["19", "97"], ["101", "104"], ["107", "104"], ["19", "104"], ["65", "104"], ["104", "107"], ["19", "107"], ["151", "154"], ["157", "154"], ["19", "154"], ["154", "157"], ["19", "157"], ["32", "58"], ["19", "58"], ["32", "74"], ["58", "74"], ["19", "74"], ["19", "112"], ["170", "168"], ["170", "168"], ["112", "115"], ["118", "115"], ["19", "115"], ["115", "118"], ["19", "118"], ["90", "161"], ["95", "161"], ["170", "161"], ["146", "170"], ["168", "170"], ["19", "170"], ["90", "170"], ["161", "170"], ["95", "170"], ["161", "170"], ["35", "122"], ["54", "122"], ["77", "122"], ["134", "122"], ["90", "129"], ["40", "134"], ["70", "134"], ["77", "134"], ["122", "134"], ["95", "141"], ["146", "171"], ["168", "171"], ["19", "171"], ["90", "171"], ["161", "171"], ["49", "49"], ["49", "52"], ["49", "54"], ["49", "58"], ["49", "55"], ["65", "68"], ["65", "74"], ["65", "65"], ["65", "71"], ["65", "70"], ["104", "107"], ["104", "115"], ["104", "104"], ["104", "112"], ["154", "154"], ["154", "161"], ["154", "162"], ["154", "157"], ["154", "165"], ["115", "115"], ["115", "122"], ["115", "123"], ["115", "134"], ["115", "138"], ["115", "126"], ["115", "118"], ["115", "135"], ["161", "168"], ["161", "170"], ["161", "176"], ["161", "173"], ["161", "171"], ["122", "129"], ["122", "130"], ["134", "141"], ["134", "142"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY ex = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,ex,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,ex,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,String[] a = new String[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new String[n])>", "39": "<(LOCAL,String[] b: java.lang.String[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,b,String[] b = new String[n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new String[n])<SUB>6</SUB>>", "45": "<(LOCAL,int i: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,a[i] = next())<SUB>8</SUB>>", "59": "<(IDENTIFIER,ex,next())<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "67": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,b[i] = next())<SUB>10</SUB>>", "75": "<(IDENTIFIER,ex,next())<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,String[] valid = { &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.arrayInitializer,{ &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "81": "<(LITERAL,&quot;M&quot;,{ &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "83": "<(LITERAL,&quot;XS&quot;,{ &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "85": "<(LITERAL,&quot;XXS&quot;,{ &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "87": "<(LITERAL,&quot;XXXS&quot;,{ &quot;S&quot;, &quot;M&quot;, &quot;L&quot;, &quot;XS&quot;, &quot;XL&quot;, &quot;XXS&quot;, &quot;XXL&quot;, &quot;XXXS&quot;, &quot;XXXL&quot; })<SUB>11</SUB>>", "89": "<(LOCAL,int[] ai: int[])<SUB>12</SUB>>", "91": "<(IDENTIFIER,ai,int[] ai = new int[9])<SUB>12</SUB>>", "93": "<(LITERAL,9,new int[9])<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,int[] bi = new int[9])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.alloc,new int[9])>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "111": "<(LOCAL,int j: int)<SUB>16</SUB>>", "113": "<(IDENTIFIER,j,int j = 0)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.lessThan,j &lt; 9)<SUB>16</SUB>>", "117": "<(LITERAL,9,j &lt; 9)<SUB>16</SUB>>", "119": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "121": "<(CONTROL_STRUCTURE,if (a[i].equals(valid[j])),if (a[i].equals(valid[j])))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,this.equals(valid[j]))<SUB>18</SUB>>", "127": "<(IDENTIFIER,valid,this.equals(valid[j]))<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,ai[j]++)<SUB>19</SUB>>", "131": "<(IDENTIFIER,ai,ai[j]++)<SUB>19</SUB>>", "133": "<(CONTROL_STRUCTURE,if (b[i].equals(valid[j])),if (b[i].equals(valid[j])))<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>20</SUB>>", "137": "<(IDENTIFIER,i,this.equals(valid[j]))<SUB>20</SUB>>", "139": "<(IDENTIFIER,valid,this.equals(valid[j]))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,bi[j]++)<SUB>21</SUB>>", "143": "<(IDENTIFIER,bi,bi[j]++)<SUB>21</SUB>>", "145": "<(LOCAL,int ans: int)<SUB>24</SUB>>", "147": "<(IDENTIFIER,ans,int ans = 0)<SUB>24</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 9); i++),for (int i = 0; Some(i &lt; 9); i++))<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "153": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "155": "<(IDENTIFIER,i,i &lt; 9)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.greaterThan,ai[i] &gt; bi[i])<SUB>27</SUB>>", "163": "<(IDENTIFIER,ai,ai[i] &gt; bi[i])<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,bi[i])<SUB>27</SUB>>", "167": "<(IDENTIFIER,i,ai[i] &gt; bi[i])<SUB>27</SUB>>", "169": "<(IDENTIFIER,ans,ans = ans + ai[i] - bi[i])<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.addition,ans + ai[i])<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,ai[i])<SUB>28</SUB>>", "175": "<(IDENTIFIER,i,ans + ai[i])<SUB>28</SUB>>", "177": "<(IDENTIFIER,bi,ans + ai[i] - bi[i])<SUB>28</SUB>>", "179": "<(println,System.out.println(ans))<SUB>30</SUB>>", "181": "<(IDENTIFIER,System,System.out.println(ans))<SUB>30</SUB>>", "183": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>30</SUB>>", "185": "<(MODIFIER,STATIC)>"}}