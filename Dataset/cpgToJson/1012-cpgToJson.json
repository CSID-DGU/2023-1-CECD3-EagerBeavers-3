{"edges": [["19", "20"], ["19", "21"], ["19", "128"], ["19", "129"], ["19", "130"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "54"], ["21", "55"], ["21", "58"], ["21", "59"], ["21", "62"], ["21", "86"], ["21", "87"], ["21", "98"], ["21", "99"], ["21", "117"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["50", "53"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "69"], ["66", "72"], ["67", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "83"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["79", "82"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "108"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["104", "107"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["22", "29"], ["25", "41"], ["37", "49"], ["44", "55"], ["55", "59"], ["59", "63"], ["87", "103"], ["99", "120"], ["117", "130"], ["24", "22"], ["39", "37"], ["46", "44"], ["63", "67"], ["63", "91"], ["89", "87"], ["101", "99"], ["118", "122"], ["121", "117"], ["27", "34"], ["30", "25"], ["41", "39"], ["48", "46"], ["67", "69"], ["69", "78"], ["72", "63"], ["90", "95"], ["95", "89"], ["102", "110"], ["108", "101"], ["120", "118"], ["122", "126"], ["125", "121"], ["29", "27"], ["32", "30"], ["49", "50"], ["50", "48"], ["74", "72"], ["91", "90"], ["103", "104"], ["104", "102"], ["109", "114"], ["114", "108"], ["126", "125"], ["34", "32"], ["75", "83"], ["83", "74"], ["110", "109"], ["77", "75"], ["78", "79"], ["79", "77"], ["19", "24"], ["20", "130"], ["22", "130"], ["27", "130"], ["30", "130"], ["30", "130"], ["30", "130"], ["25", "130"], ["41", "130"], ["39", "130"], ["37", "130"], ["37", "130"], ["48", "130"], ["46", "130"], ["44", "130"], ["44", "130"], ["55", "130"], ["59", "130"], ["63", "130"], ["63", "130"], ["87", "130"], ["87", "130"], ["104", "130"], ["102", "130"], ["101", "130"], ["110", "130"], ["110", "130"], ["109", "130"], ["108", "130"], ["114", "130"], ["108", "130"], ["101", "130"], ["99", "130"], ["99", "130"], ["117", "130"], ["122", "130"], ["121", "130"], ["125", "130"], ["121", "130"], ["117", "130"], ["117", "130"], ["67", "130"], ["69", "130"], ["74", "130"], ["72", "130"], ["72", "130"], ["39", "130"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["19", "55"], ["19", "59"], ["89", "87"], ["89", "87"], ["19", "99"], ["104", "99"], ["104", "99"], ["104", "99"], ["108", "99"], ["108", "99"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["121", "117"], ["121", "117"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["19", "46"], ["50", "46"], ["50", "46"], ["50", "46"], ["37", "63"], ["19", "63"], ["44", "63"], ["72", "63"], ["63", "69"], ["19", "69"], ["74", "72"], ["74", "72"], ["90", "89"], ["90", "89"], ["55", "89"], ["19", "89"], ["79", "89"], ["19", "101"], ["104", "101"], ["104", "101"], ["104", "101"], ["108", "101"], ["108", "101"], ["99", "121"], ["19", "121"], ["87", "121"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["19", "48"], ["50", "48"], ["50", "48"], ["50", "48"], ["55", "67"], ["19", "67"], ["79", "67"], ["19", "72"], ["63", "72"], ["91", "90"], ["91", "90"], ["19", "90"], ["55", "95"], ["19", "95"], ["79", "95"], ["19", "102"], ["104", "102"], ["104", "102"], ["104", "102"], ["109", "108"], ["109", "108"], ["104", "108"], ["19", "108"], ["99", "122"], ["19", "122"], ["19", "125"], ["87", "125"], ["19", "50"], ["75", "74"], ["75", "74"], ["79", "74"], ["19", "74"], ["63", "91"], ["19", "91"], ["59", "91"], ["69", "91"], ["50", "104"], ["79", "104"], ["19", "104"], ["55", "104"], ["79", "104"], ["110", "109"], ["110", "109"], ["19", "109"], ["104", "114"], ["19", "114"], ["19", "75"], ["79", "75"], ["79", "75"], ["79", "75"], ["79", "83"], ["19", "83"], ["91", "110"], ["19", "110"], ["91", "110"], ["19", "77"], ["79", "77"], ["79", "77"], ["79", "77"], ["50", "79"], ["19", "79"], ["67", "79"], ["63", "77"], ["63", "83"], ["63", "75"], ["63", "72"], ["63", "69"], ["63", "67"], ["63", "74"], ["63", "78"], ["63", "79"], ["63", "63"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,long k = parseLong(br.readLine()))<SUB>3</SUB>>", "39": "<(parseLong,parseLong(br.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,long temp: long)<SUB>4</SUB>>", "45": "<(IDENTIFIER,temp,long temp = 9 * (int) Math.pow(10, 0))<SUB>4</SUB>>", "47": "<(LITERAL,9,9 * (int) Math.pow(10, 0))<SUB>4</SUB>>", "49": "<(TYPE_REF,int,int)<SUB>4</SUB>>", "51": "<(IDENTIFIER,Math,Math.pow(10, 0))<SUB>4</SUB>>", "53": "<(LITERAL,0,Math.pow(10, 0))<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>5</SUB>>", "57": "<(LITERAL,0,int count = 0)<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,long initial = 0)<SUB>6</SUB>>", "61": "<(LITERAL,0,long initial = 0)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.greaterThan,k &gt; temp)<SUB>7</SUB>>", "65": "<(IDENTIFIER,temp,k &gt; temp)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,count++)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,initial = temp)<SUB>9</SUB>>", "71": "<(IDENTIFIER,temp,initial = temp)<SUB>9</SUB>>", "73": "<(IDENTIFIER,temp,temp += 9 * (long) Math.pow(10, count) * (count + 1))<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.multiplication,9 * (long) Math.pow(10, count))<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.cast,(long) Math.pow(10, count))<SUB>10</SUB>>", "79": "<(pow,Math.pow(10, count))<SUB>10</SUB>>", "81": "<(LITERAL,10,Math.pow(10, count))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.addition,count + 1)<SUB>10</SUB>>", "85": "<(LITERAL,1,count + 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.assignment,long index = (k - initial - 1) % (count + 1))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.modulo,(k - initial - 1) % (count + 1))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.subtraction,k - initial)<SUB>12</SUB>>", "93": "<(IDENTIFIER,initial,k - initial)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.addition,count + 1)<SUB>12</SUB>>", "97": "<(LITERAL,1,count + 1)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,long num = (long) Math.pow(10, count) + (k - initial - 1) / (count + 1))<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.addition,(long) Math.pow(10, count) + (k - initial - 1) / (count + 1))<SUB>13</SUB>>", "103": "<(TYPE_REF,long,long)<SUB>13</SUB>>", "105": "<(IDENTIFIER,Math,Math.pow(10, count))<SUB>13</SUB>>", "107": "<(IDENTIFIER,count,Math.pow(10, count))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.subtraction,k - initial - 1)<SUB>13</SUB>>", "111": "<(IDENTIFIER,k,k - initial)<SUB>13</SUB>>", "113": "<(LITERAL,1,k - initial - 1)<SUB>13</SUB>>", "115": "<(IDENTIFIER,count,count + 1)<SUB>13</SUB>>", "117": "<(println,System.out.println((num + &quot;&quot;).charAt((int) index)))<SUB>14</SUB>>", "119": "<(IDENTIFIER,System,System.out.println((num + &quot;&quot;).charAt((int) index)))<SUB>14</SUB>>", "121": "<(charAt,this.charAt((int) index))<SUB>14</SUB>>", "123": "<(IDENTIFIER,num,num + &quot;&quot;)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.cast,(int) index)<SUB>14</SUB>>", "127": "<(IDENTIFIER,index,(int) index)<SUB>14</SUB>>", "129": "<(MODIFIER,STATIC)>"}}