{"edges": [["29", "31"], ["29", "275"], ["29", "276"], ["29", "277"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "39"], ["31", "42"], ["31", "8"], ["31", "53"], ["31", "56"], ["31", "60"], ["31", "61"], ["31", "67"], ["31", "68"], ["31", "73"], ["31", "74"], ["31", "10"], ["31", "77"], ["31", "80"], ["31", "81"], ["31", "105"], ["31", "106"], ["31", "107"], ["31", "110"], ["31", "113"], ["31", "117"], ["31", "118"], ["31", "121"], ["31", "122"], ["31", "12"], ["31", "127"], ["31", "130"], ["31", "14"], ["31", "131"], ["31", "134"], ["31", "135"], ["31", "270"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["43", "47"], ["43", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["56", "7"], ["56", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "9"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "99"], ["93", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "11"], ["131", "132"], ["131", "133"], ["134", "13"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "149"], ["143", "177"], ["143", "179"], ["143", "183"], ["143", "195"], ["143", "266"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "156"], ["149", "163"], ["150", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["157", "158"], ["157", "159"], ["157", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["164", "165"], ["165", "166"], ["165", "167"], ["165", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["177", "178"], ["179", "180"], ["179", "181"], ["181", "182"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["189", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "204"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "203"], ["201", "202"], ["204", "205"], ["204", "206"], ["204", "213"], ["204", "240"], ["204", "252"], ["204", "254"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "225"], ["219", "237"], ["219", "239"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["225", "230"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "236"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["237", "238"], ["240", "241"], ["240", "242"], ["240", "245"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["252", "253"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["260", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["32", "38"], ["35", "41"], ["39", "46"], ["42", "55"], ["53", "59"], ["56", "65"], ["61", "71"], ["68", "74"], ["74", "79"], ["77", "80"], ["80", "83"], ["107", "110"], ["110", "115"], ["113", "118"], ["118", "126"], ["122", "129"], ["127", "130"], ["130", "133"], ["131", "134"], ["134", "137"], ["270", "277"], ["34", "32"], ["36", "35"], ["41", "39"], ["55", "53"], ["57", "56"], ["63", "61"], ["70", "68"], ["79", "77"], ["83", "86"], ["86", "96"], ["86", "107"], ["89", "86"], ["115", "113"], ["124", "122"], ["129", "127"], ["133", "131"], ["136", "146"], ["136", "273"], ["271", "270"], ["38", "36"], ["44", "51"], ["47", "42"], ["59", "57"], ["65", "63"], ["71", "70"], ["126", "124"], ["137", "136"], ["137", "140"], ["140", "136"], ["144", "153"], ["177", "181"], ["179", "184"], ["266", "137"], ["273", "271"], ["46", "44"], ["49", "47"], ["93", "102"], ["93", "89"], ["146", "144"], ["150", "159"], ["150", "167"], ["181", "179"], ["184", "192"], ["184", "197"], ["187", "197"], ["196", "210"], ["196", "268"], ["268", "266"], ["51", "49"], ["94", "93"], ["100", "89"], ["151", "150"], ["157", "177"], ["189", "187"], ["197", "196"], ["197", "201"], ["200", "196"], ["206", "215"], ["240", "252"], ["252", "255"], ["96", "94"], ["102", "100"], ["153", "151"], ["159", "157"], ["165", "177"], ["192", "189"], ["201", "200"], ["208", "206"], ["214", "222"], ["214", "242"], ["242", "248"], ["245", "240"], ["255", "197"], ["255", "263"], ["258", "197"], ["167", "173"], ["170", "165"], ["210", "208"], ["215", "214"], ["220", "227"], ["225", "237"], ["237", "268"], ["246", "245"], ["260", "258"], ["171", "170"], ["222", "220"], ["227", "233"], ["230", "225"], ["248", "246"], ["263", "260"], ["173", "171"], ["231", "230"], ["233", "231"], ["29", "34"], ["30", "277"], ["32", "277"], ["35", "277"], ["35", "277"], ["39", "277"], ["44", "277"], ["47", "277"], ["47", "277"], ["47", "277"], ["42", "277"], ["53", "277"], ["56", "277"], ["56", "277"], ["63", "277"], ["61", "277"], ["61", "277"], ["68", "277"], ["71", "277"], ["70", "277"], ["68", "277"], ["68", "277"], ["74", "277"], ["77", "277"], ["107", "277"], ["110", "277"], ["110", "277"], ["113", "277"], ["115", "277"], ["113", "277"], ["113", "277"], ["118", "277"], ["118", "277"], ["122", "277"], ["122", "277"], ["127", "277"], ["130", "277"], ["130", "277"], ["131", "277"], ["134", "277"], ["134", "277"], ["137", "277"], ["137", "277"], ["136", "277"], ["140", "277"], ["140", "277"], ["136", "277"], ["136", "277"], ["270", "277"], ["270", "277"], ["270", "277"], ["144", "277"], ["150", "277"], ["150", "277"], ["165", "277"], ["165", "277"], ["170", "277"], ["165", "277"], ["165", "277"], ["157", "277"], ["157", "277"], ["157", "277"], ["177", "277"], ["177", "277"], ["184", "277"], ["184", "277"], ["189", "277"], ["192", "277"], ["189", "277"], ["187", "277"], ["187", "277"], ["200", "277"], ["196", "277"], ["196", "277"], ["206", "277"], ["215", "277"], ["214", "277"], ["214", "277"], ["240", "277"], ["240", "277"], ["245", "277"], ["240", "277"], ["240", "277"], ["252", "277"], ["255", "277"], ["255", "277"], ["260", "277"], ["263", "277"], ["260", "277"], ["258", "277"], ["258", "277"], ["220", "277"], ["225", "277"], ["225", "277"], ["230", "277"], ["225", "277"], ["225", "277"], ["237", "277"], ["266", "277"], ["268", "277"], ["266", "277"], ["266", "277"], ["94", "277"], ["93", "277"], ["93", "277"], ["100", "277"], ["100", "277"], ["89", "277"], ["29", "30"], ["29", "32"], ["29", "39"], ["29", "53"], ["63", "61"], ["63", "61"], ["70", "68"], ["29", "74"], ["29", "77"], ["29", "107"], ["29", "110"], ["115", "113"], ["29", "118"], ["63", "122"], ["29", "127"], ["29", "131"], ["32", "35"], ["29", "35"], ["39", "42"], ["29", "42"], ["44", "42"], ["47", "42"], ["53", "56"], ["29", "56"], ["77", "80"], ["29", "80"], ["29", "83"], ["127", "130"], ["29", "130"], ["131", "134"], ["29", "134"], ["56", "270"], ["122", "270"], ["187", "270"], ["258", "270"], ["29", "270"], ["29", "44"], ["29", "52"], ["29", "63"], ["65", "63"], ["71", "70"], ["83", "86"], ["89", "86"], ["29", "86"], ["61", "86"], ["86", "89"], ["29", "89"], ["80", "115"], ["94", "115"], ["100", "115"], ["29", "115"], ["137", "136"], ["137", "136"], ["140", "136"], ["140", "136"], ["181", "179"], ["268", "266"], ["44", "47"], ["29", "47"], ["35", "47"], ["42", "65"], ["29", "65"], ["65", "71"], ["29", "71"], ["107", "137"], ["197", "137"], ["237", "137"], ["29", "137"], ["86", "137"], ["197", "137"], ["110", "140"], ["177", "140"], ["192", "140"], ["263", "140"], ["29", "140"], ["137", "140"], ["130", "144"], ["268", "144"], ["29", "144"], ["68", "144"], ["165", "144"], ["157", "144"], ["110", "177"], ["140", "177"], ["192", "177"], ["263", "177"], ["29", "177"], ["189", "187"], ["189", "187"], ["189", "187"], ["94", "93"], ["94", "93"], ["151", "150"], ["151", "150"], ["144", "181"], ["29", "181"], ["179", "184"], ["29", "184"], ["113", "184"], ["200", "184"], ["255", "184"], ["197", "196"], ["197", "196"], ["200", "196"], ["200", "196"], ["208", "206"], ["208", "206"], ["181", "268"], ["201", "268"], ["220", "268"], ["29", "268"], ["80", "94"], ["100", "94"], ["29", "94"], ["68", "94"], ["100", "94"], ["94", "100"], ["29", "100"], ["68", "100"], ["94", "100"], ["134", "151"], ["165", "151"], ["157", "151"], ["240", "151"], ["225", "151"], ["29", "151"], ["68", "151"], ["144", "151"], ["151", "157"], ["29", "157"], ["68", "157"], ["151", "157"], ["260", "189"], ["29", "189"], ["122", "189"], ["187", "189"], ["258", "189"], ["192", "189"], ["192", "189"], ["137", "197"], ["192", "197"], ["252", "197"], ["263", "197"], ["29", "197"], ["137", "197"], ["140", "197"], ["201", "200"], ["184", "200"], ["255", "200"], ["29", "200"], ["246", "240"], ["29", "240"], ["68", "240"], ["246", "240"], ["245", "240"], ["245", "240"], ["197", "252"], ["29", "252"], ["260", "258"], ["260", "258"], ["260", "258"], ["171", "165"], ["29", "165"], ["68", "165"], ["171", "165"], ["177", "192"], ["29", "192"], ["137", "192"], ["181", "201"], ["29", "201"], ["165", "208"], ["157", "208"], ["240", "208"], ["29", "208"], ["68", "208"], ["240", "208"], ["225", "208"], ["94", "208"], ["100", "208"], ["215", "214"], ["215", "214"], ["29", "214"], ["246", "245"], ["246", "245"], ["29", "245"], ["184", "255"], ["29", "255"], ["184", "255"], ["200", "255"], ["171", "170"], ["171", "170"], ["29", "170"], ["206", "215"], ["29", "215"], ["181", "220"], ["201", "220"], ["29", "220"], ["68", "220"], ["208", "220"], ["231", "225"], ["29", "225"], ["68", "225"], ["231", "225"], ["230", "225"], ["230", "225"], ["197", "237"], ["29", "237"], ["208", "246"], ["29", "246"], ["68", "246"], ["208", "246"], ["189", "260"], ["29", "260"], ["122", "260"], ["187", "260"], ["258", "260"], ["263", "260"], ["263", "260"], ["151", "171"], ["29", "171"], ["68", "171"], ["151", "171"], ["231", "230"], ["231", "230"], ["29", "230"], ["177", "263"], ["192", "263"], ["29", "263"], ["252", "263"], ["208", "231"], ["29", "231"], ["68", "231"], ["220", "231"], ["86", "94"], ["86", "96"], ["86", "93"], ["86", "86"], ["86", "89"], ["136", "136"], ["136", "146"], ["136", "179"], ["136", "196"], ["136", "150"], ["136", "151"], ["136", "197"], ["136", "153"], ["136", "144"], ["136", "181"], ["136", "184"], ["136", "137"], ["136", "268"], ["136", "177"], ["136", "266"], ["137", "140"], ["93", "102"], ["93", "100"], ["150", "167"], ["150", "170"], ["150", "173"], ["150", "171"], ["150", "157"], ["150", "159"], ["150", "165"], ["184", "192"], ["184", "189"], ["184", "187"], ["196", "214"], ["196", "215"], ["196", "206"], ["196", "208"], ["196", "210"], ["197", "201"], ["197", "200"], ["214", "230"], ["214", "225"], ["214", "196"], ["214", "240"], ["214", "197"], ["214", "245"], ["214", "255"], ["214", "242"], ["214", "231"], ["214", "246"], ["214", "233"], ["214", "252"], ["214", "237"], ["214", "220"], ["214", "248"], ["214", "227"], ["214", "222"], ["255", "258"], ["255", "260"], ["255", "263"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,BufferedReader f: ANY)<SUB>3</SUB>>", "40": "<(IDENTIFIER,f,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "42": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "47": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "51": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "8": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "54": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "56": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "59": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "61": "<(&lt;operator&gt;.assignment,int n = parseInt(f.readLine()))<SUB>6</SUB>>", "63": "<(parseInt,parseInt(f.readLine()))<SUB>6</SUB>>", "65": "<(readLine,readLine())<SUB>6</SUB>>", "67": "<(LOCAL,char[] a: char[])<SUB>7</SUB>>", "69": "<(IDENTIFIER,a,char[] a = toCharArray())<SUB>7</SUB>>", "71": "<(readLine,readLine())<SUB>7</SUB>>", "73": "<(LOCAL,int difTypes: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,difTypes,int difTypes = 0)<SUB>8</SUB>>", "10": "<(LOCAL,TreeSet&lt;Character&gt; types: ANY)<SUB>9</SUB>>", "78": "<(IDENTIFIER,types,ANY types = new TreeSet&lt;Character&gt;())<SUB>9</SUB>>", "80": "<(&lt;init&gt;,new TreeSet&lt;Character&gt;())<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.logicalNot,!types.contains(a[i]))<SUB>11</SUB>>", "95": "<(IDENTIFIER,types,contains(a[i]))<SUB>11</SUB>>", "97": "<(IDENTIFIER,a,contains(a[i]))<SUB>11</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "101": "<(IDENTIFIER,types,add(a[i]))<SUB>12</SUB>>", "103": "<(IDENTIFIER,a,add(a[i]))<SUB>12</SUB>>", "105": "<(LOCAL,int i: int)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "111": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.assignment,difTypes = size())<SUB>16</SUB>>", "115": "<(size,size())<SUB>16</SUB>>", "117": "<(LOCAL,int curTypes: int)<SUB>17</SUB>>", "119": "<(IDENTIFIER,curTypes,int curTypes = 0)<SUB>17</SUB>>", "121": "<(LOCAL,int min: int)<SUB>18</SUB>>", "123": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>18</SUB>>", "125": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>18</SUB>>", "12": "<(LOCAL,TreeSet&lt;Character&gt; has: ANY)<SUB>19</SUB>>", "128": "<(IDENTIFIER,has,ANY has = new TreeSet&lt;Character&gt;())<SUB>19</SUB>>", "130": "<(&lt;init&gt;,new TreeSet&lt;Character&gt;())<SUB>19</SUB>>", "14": "<(LOCAL,HashMap&lt;Character, Integer&gt; freq: ANY)<SUB>20</SUB>>", "132": "<(IDENTIFIER,freq,ANY freq = new HashMap&lt;Character, Integer&gt;())<SUB>20</SUB>>", "134": "<(&lt;init&gt;,new HashMap&lt;Character, Integer&gt;())<SUB>20</SUB>>", "135": "<(CONTROL_STRUCTURE,while (i &lt; n &amp;&amp; j &lt; n),while (i &lt; n &amp;&amp; j &lt; n))<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>21</SUB>>", "139": "<(IDENTIFIER,n,i &lt; n)<SUB>21</SUB>>", "141": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "145": "<(IDENTIFIER,has,add(a[j]))<SUB>23</SUB>>", "147": "<(IDENTIFIER,a,add(a[j]))<SUB>23</SUB>>", "149": "<(CONTROL_STRUCTURE,if (!freq.containsKey(a[j])),if (!freq.containsKey(a[j])))<SUB>24</SUB>>", "151": "<(containsKey,containsKey(a[j]))<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>24</SUB>>", "155": "<(IDENTIFIER,j,containsKey(a[j]))<SUB>24</SUB>>", "157": "<(put,put(a[j], 1))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>25</SUB>>", "161": "<(IDENTIFIER,j,put(a[j], 1))<SUB>25</SUB>>", "163": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "165": "<(put,put(a[j], freq.get(a[j]) + 1))<SUB>27</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>27</SUB>>", "169": "<(IDENTIFIER,j,put(a[j], freq.get(a[j]) + 1))<SUB>27</SUB>>", "171": "<(get,get(a[j]))<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>27</SUB>>", "175": "<(IDENTIFIER,j,get(a[j]))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.assignment,curTypes = size())<SUB>30</SUB>>", "181": "<(size,size())<SUB>30</SUB>>", "183": "<(CONTROL_STRUCTURE,if (curTypes == difTypes),if (curTypes == difTypes))<SUB>31</SUB>>", "185": "<(IDENTIFIER,curTypes,curTypes == difTypes)<SUB>31</SUB>>", "187": "<(&lt;operator&gt;.assignment,min = Math.min(min, j - i))<SUB>31</SUB>>", "189": "<(min,Math.min(min, j - i))<SUB>31</SUB>>", "191": "<(IDENTIFIER,min,Math.min(min, j - i))<SUB>31</SUB>>", "193": "<(IDENTIFIER,j,j - i)<SUB>31</SUB>>", "195": "<(CONTROL_STRUCTURE,while (i &lt; n &amp;&amp; has.size() == difTypes),while (i &lt; n &amp;&amp; has.size() == difTypes))<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>35</SUB>>", "199": "<(IDENTIFIER,n,i &lt; n)<SUB>35</SUB>>", "201": "<(size,size())<SUB>35</SUB>>", "203": "<(IDENTIFIER,difTypes,has.size() == difTypes)<SUB>35</SUB>>", "205": "<(LOCAL,int Freq: int)<SUB>36</SUB>>", "207": "<(IDENTIFIER,Freq,int Freq = get(a[i]))<SUB>36</SUB>>", "209": "<(IDENTIFIER,freq,get(a[i]))<SUB>36</SUB>>", "211": "<(IDENTIFIER,a,get(a[i]))<SUB>36</SUB>>", "213": "<(CONTROL_STRUCTURE,if (Freq - 1 == 0),if (Freq - 1 == 0))<SUB>38</SUB>>", "215": "<(&lt;operator&gt;.subtraction,Freq - 1)<SUB>38</SUB>>", "217": "<(LITERAL,1,Freq - 1)<SUB>38</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "221": "<(IDENTIFIER,has,remove(a[i]))<SUB>39</SUB>>", "223": "<(IDENTIFIER,a,remove(a[i]))<SUB>39</SUB>>", "225": "<(put,put(a[i], freq.get(a[i]) - 1))<SUB>40</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>40</SUB>>", "229": "<(IDENTIFIER,i,put(a[i], freq.get(a[i]) - 1))<SUB>40</SUB>>", "231": "<(get,get(a[i]))<SUB>40</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>40</SUB>>", "235": "<(IDENTIFIER,i,get(a[i]))<SUB>40</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,i++)<SUB>41</SUB>>", "239": "<(CONTROL_STRUCTURE,break;,break;)<SUB>42</SUB>>", "241": "<(IDENTIFIER,freq,put(a[i], freq.get(a[i]) - 1))<SUB>44</SUB>>", "243": "<(IDENTIFIER,a,put(a[i], freq.get(a[i]) - 1))<SUB>44</SUB>>", "245": "<(&lt;operator&gt;.subtraction,freq.get(a[i]) - 1)<SUB>44</SUB>>", "247": "<(IDENTIFIER,freq,get(a[i]))<SUB>44</SUB>>", "249": "<(IDENTIFIER,a,get(a[i]))<SUB>44</SUB>>", "251": "<(LITERAL,1,freq.get(a[i]) - 1)<SUB>44</SUB>>", "253": "<(IDENTIFIER,i,i++)<SUB>45</SUB>>", "255": "<(&lt;operator&gt;.equals,curTypes == difTypes)<SUB>46</SUB>>", "257": "<(IDENTIFIER,difTypes,curTypes == difTypes)<SUB>46</SUB>>", "259": "<(IDENTIFIER,min,min = Math.min(min, j - i))<SUB>46</SUB>>", "261": "<(IDENTIFIER,Math,Math.min(min, j - i))<SUB>46</SUB>>", "263": "<(&lt;operator&gt;.subtraction,j - i)<SUB>46</SUB>>", "265": "<(IDENTIFIER,i,j - i)<SUB>46</SUB>>", "267": "<(IDENTIFIER,curTypes,curTypes = size())<SUB>48</SUB>>", "269": "<(IDENTIFIER,has,size())<SUB>48</SUB>>", "271": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>51</SUB>>", "273": "<(FIELD_IDENTIFIER,out,out)<SUB>51</SUB>>", "275": "<(MODIFIER,PUBLIC)>", "277": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}