{"edges": [["25", "27"], ["25", "115"], ["25", "116"], ["25", "117"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "8"], ["27", "36"], ["27", "39"], ["27", "10"], ["27", "40"], ["27", "43"], ["27", "44"], ["27", "45"], ["27", "49"], ["27", "63"], ["27", "64"], ["27", "67"], ["27", "110"], ["27", "113"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["36", "37"], ["36", "38"], ["39", "7"], ["40", "41"], ["40", "42"], ["43", "9"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "77"], ["71", "78"], ["71", "81"], ["71", "108"], ["73", "74"], ["73", "75"], ["75", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "90"], ["82", "83"], ["82", "86"], ["83", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "105"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["97", "104"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["28", "31"], ["31", "34"], ["32", "35"], ["35", "38"], ["36", "39"], ["39", "42"], ["40", "43"], ["43", "47"], ["45", "51"], ["64", "69"], ["110", "113"], ["113", "117"], ["30", "28"], ["34", "32"], ["38", "36"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "64"], ["57", "54"], ["59", "57"], ["68", "75"], ["68", "110"], ["61", "59"], ["69", "68"], ["73", "78"], ["78", "84"], ["108", "69"], ["75", "73"], ["82", "92"], ["82", "108"], ["83", "82"], ["83", "88"], ["86", "82"], ["105", "84"], ["84", "83"], ["88", "86"], ["92", "100"], ["92", "105"], ["95", "105"], ["98", "101"], ["101", "95"], ["100", "98"], ["25", "30"], ["26", "117"], ["28", "117"], ["31", "117"], ["32", "117"], ["35", "117"], ["35", "117"], ["36", "117"], ["39", "117"], ["39", "117"], ["40", "117"], ["43", "117"], ["47", "117"], ["45", "117"], ["45", "117"], ["51", "117"], ["54", "117"], ["54", "117"], ["54", "117"], ["64", "117"], ["69", "117"], ["68", "117"], ["68", "117"], ["110", "117"], ["110", "117"], ["113", "117"], ["113", "117"], ["73", "117"], ["73", "117"], ["78", "117"], ["78", "117"], ["78", "117"], ["86", "117"], ["86", "117"], ["82", "117"], ["82", "117"], ["108", "117"], ["92", "117"], ["98", "117"], ["101", "117"], ["101", "117"], ["95", "117"], ["105", "117"], ["105", "117"], ["105", "117"], ["61", "117"], ["59", "117"], ["59", "117"], ["57", "117"], ["25", "26"], ["25", "28"], ["25", "32"], ["25", "36"], ["25", "40"], ["47", "45"], ["25", "64"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["36", "39"], ["25", "39"], ["40", "43"], ["25", "43"], ["25", "51"], ["25", "110"], ["64", "110"], ["108", "110"], ["110", "113"], ["25", "113"], ["31", "47"], ["25", "47"], ["51", "54"], ["57", "54"], ["25", "54"], ["45", "54"], ["54", "57"], ["25", "57"], ["43", "59"], ["25", "59"], ["61", "59"], ["69", "68"], ["75", "73"], ["73", "78"], ["25", "78"], ["47", "61"], ["25", "61"], ["43", "69"], ["84", "69"], ["88", "69"], ["59", "69"], ["25", "69"], ["64", "108"], ["25", "108"], ["69", "75"], ["25", "75"], ["83", "82"], ["86", "82"], ["86", "82"], ["25", "105"], ["73", "105"], ["84", "83"], ["78", "86"], ["105", "86"], ["25", "86"], ["88", "86"], ["92", "105"], ["101", "105"], ["75", "84"], ["92", "84"], ["95", "84"], ["25", "84"], ["84", "88"], ["25", "88"], ["84", "92"], ["88", "92"], ["25", "92"], ["78", "92"], ["86", "92"], ["105", "92"], ["92", "95"], ["25", "95"], ["98", "95"], ["101", "95"], ["25", "98"], ["25", "104"], ["98", "101"], ["25", "101"], ["92", "101"], ["54", "61"], ["54", "57"], ["54", "59"], ["54", "54"], ["68", "68"], ["68", "73"], ["68", "83"], ["68", "75"], ["68", "84"], ["68", "69"], ["68", "82"], ["68", "108"], ["68", "78"], ["82", "83"], ["82", "105"], ["82", "84"], ["82", "92"], ["82", "82"], ["83", "88"], ["83", "86"], ["92", "98"], ["92", "100"], ["92", "95"], ["92", "101"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new FastReader())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new FastReader())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY map = new HashMap&lt;Integer, Integer&gt;())<SUB>4</SUB>>", "34": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Integer&gt;())<SUB>4</SUB>>", "5": "<(IDENTIFIER,map,new HashMap&lt;Integer, Integer&gt;())<SUB>4</SUB>>", "36": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "38": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "7": "<(IDENTIFIER,list,new ArrayList&lt;Integer&gt;())<SUB>5</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "42": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "9": "<(IDENTIFIER,set,new TreeSet&lt;Integer&gt;())<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "47": "<(nextInt,nextInt())<SUB>8</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "59": "<(add,add(in.nextInt()))<SUB>10</SUB>>", "61": "<(nextInt,nextInt())<SUB>10</SUB>>", "63": "<(LOCAL,int ans: int)<SUB>12</SUB>>", "65": "<(IDENTIFIER,ans,int ans = 0)<SUB>12</SUB>>", "67": "<(CONTROL_STRUCTURE,while (!set.isEmpty()),while (!set.isEmpty()))<SUB>14</SUB>>", "69": "<(isEmpty,isEmpty())<SUB>14</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.assignment,int f = first())<SUB>16</SUB>>", "75": "<(first,first())<SUB>16</SUB>>", "77": "<(LOCAL,int s: int)<SUB>17</SUB>>", "79": "<(IDENTIFIER,s,int s = f)<SUB>17</SUB>>", "81": "<(CONTROL_STRUCTURE,while (!set.isEmpty() &amp;&amp; s &lt;= set.last()),while (!set.isEmpty() &amp;&amp; s &lt;= set.last()))<SUB>18</SUB>>", "83": "<(&lt;operator&gt;.logicalNot,!set.isEmpty())<SUB>18</SUB>>", "85": "<(IDENTIFIER,set,isEmpty())<SUB>18</SUB>>", "87": "<(IDENTIFIER,s,s &lt;= set.last())<SUB>18</SUB>>", "89": "<(IDENTIFIER,set,last())<SUB>18</SUB>>", "91": "<(CONTROL_STRUCTURE,if (set.contains(s)),if (set.contains(s)))<SUB>20</SUB>>", "93": "<(IDENTIFIER,set,contains(s))<SUB>20</SUB>>", "95": "<(remove,remove(new Integer(s)))<SUB>21</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "99": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "101": "<(&lt;init&gt;,new Integer(s))<SUB>21</SUB>>", "103": "<(IDENTIFIER,s,new Integer(s))<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.assignmentPlus,s += f)<SUB>22</SUB>>", "107": "<(IDENTIFIER,f,s += f)<SUB>22</SUB>>", "109": "<(IDENTIFIER,ans,ans++)<SUB>24</SUB>>", "111": "<(IDENTIFIER,out,println(ans))<SUB>27</SUB>>", "113": "<(close,close())<SUB>29</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}