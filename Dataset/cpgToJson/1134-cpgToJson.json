{"edges": [["21", "22"], ["21", "23"], ["21", "118"], ["21", "119"], ["21", "120"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "65"], ["23", "66"], ["23", "67"], ["23", "68"], ["23", "69"], ["23", "108"], ["23", "113"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["61", "64"], ["69", "70"], ["69", "73"], ["69", "76"], ["69", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "82"], ["78", "85"], ["78", "100"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "61"], ["59", "70"], ["108", "116"], ["113", "120"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["70", "73"], ["73", "79"], ["73", "110"], ["76", "73"], ["110", "108"], ["114", "113"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["79", "82"], ["82", "86"], ["116", "114"], ["31", "29"], ["34", "32"], ["86", "94"], ["86", "102"], ["101", "110"], ["101", "76"], ["36", "34"], ["90", "97"], ["97", "86"], ["102", "101"], ["92", "90"], ["94", "92"], ["21", "26"], ["22", "120"], ["24", "120"], ["29", "120"], ["32", "120"], ["32", "120"], ["32", "120"], ["27", "120"], ["38", "120"], ["42", "120"], ["41", "120"], ["41", "120"], ["45", "120"], ["54", "120"], ["56", "120"], ["54", "120"], ["52", "120"], ["52", "120"], ["61", "120"], ["59", "120"], ["59", "120"], ["70", "120"], ["70", "120"], ["73", "120"], ["79", "120"], ["82", "120"], ["86", "120"], ["86", "120"], ["102", "120"], ["101", "120"], ["101", "120"], ["101", "120"], ["76", "120"], ["110", "120"], ["110", "120"], ["108", "120"], ["108", "120"], ["113", "120"], ["113", "120"], ["113", "120"], ["92", "120"], ["90", "120"], ["90", "120"], ["97", "120"], ["61", "120"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["61", "59"], ["110", "108"], ["110", "108"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["59", "70"], ["21", "70"], ["108", "113"], ["21", "113"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["21", "61"], ["45", "61"], ["52", "61"], ["70", "73"], ["76", "73"], ["21", "73"], ["102", "76"], ["21", "76"], ["21", "79"], ["73", "82"], ["21", "82"], ["61", "110"], ["21", "110"], ["73", "110"], ["102", "110"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["82", "86"], ["97", "86"], ["21", "86"], ["79", "90"], ["21", "90"], ["94", "90"], ["94", "90"], ["21", "97"], ["102", "101"], ["102", "101"], ["61", "101"], ["21", "101"], ["94", "97"], ["21", "102"], ["73", "102"], ["79", "102"], ["90", "102"], ["79", "92"], ["90", "92"], ["21", "92"], ["94", "92"], ["94", "92"], ["86", "94"], ["21", "94"], ["73", "102"], ["73", "82"], ["73", "101"], ["73", "79"], ["73", "86"], ["86", "94"], ["86", "92"], ["86", "97"], ["86", "90"], ["86", "86"], ["101", "73"], ["101", "76"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,long n = parseLong(st.nextToken()))<SUB>4</SUB>>", "47": "<(parseLong,parseLong(st.nextToken()))<SUB>4</SUB>>", "49": "<(nextToken,nextToken())<SUB>4</SUB>>", "51": "<(LOCAL,long s: long)<SUB>5</SUB>>", "53": "<(IDENTIFIER,s,long s = parseLong(st.nextToken()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,long posible = binarySearch(n, s))<SUB>6</SUB>>", "61": "<(binarySearch,binarySearch(n, s))<SUB>6</SUB>>", "63": "<(IDENTIFIER,n,binarySearch(n, s))<SUB>6</SUB>>", "65": "<(LOCAL,long dig: long)<SUB>7</SUB>>", "67": "<(LOCAL,long i: long)<SUB>8</SUB>>", "69": "<(CONTROL_STRUCTURE,for (i = posible; Some(i &gt;= 0); i--),for (i = posible; Some(i &gt;= 0); i--))<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,i = posible)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>9</SUB>>", "75": "<(LITERAL,0,i &gt;= 0)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,i--)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,dig = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,dig = 0)<SUB>10</SUB>>", "83": "<(IDENTIFIER,cmed,cmed = i)<SUB>11</SUB>>", "85": "<(CONTROL_STRUCTURE,while (cmed &gt; 0),while (cmed &gt; 0))<SUB>12</SUB>>", "87": "<(IDENTIFIER,cmed,cmed &gt; 0)<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(IDENTIFIER,dig,dig = dig + cmed % 10)<SUB>13</SUB>>", "93": "<(IDENTIFIER,dig,dig + cmed % 10)<SUB>13</SUB>>", "95": "<(IDENTIFIER,cmed,cmed % 10)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignmentDivision,cmed /= 10)<SUB>14</SUB>>", "99": "<(LITERAL,10,cmed /= 10)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i - dig &lt; s)<SUB>16</SUB>>", "103": "<(IDENTIFIER,i,i - dig)<SUB>16</SUB>>", "105": "<(IDENTIFIER,s,i - dig &lt; s)<SUB>16</SUB>>", "107": "<(CONTROL_STRUCTURE,break;,break;)<SUB>17</SUB>>", "109": "<(IDENTIFIER,answer,answer = n - i)<SUB>20</SUB>>", "111": "<(IDENTIFIER,n,n - i)<SUB>20</SUB>>", "113": "<(println,System.out.println(answer))<SUB>21</SUB>>", "115": "<(IDENTIFIER,System,System.out.println(answer))<SUB>21</SUB>>", "117": "<(IDENTIFIER,answer,System.out.println(answer))<SUB>21</SUB>>", "119": "<(MODIFIER,STATIC)>"}}