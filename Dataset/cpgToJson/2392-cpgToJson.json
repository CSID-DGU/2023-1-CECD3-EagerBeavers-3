{"edges": [["21", "23"], ["21", "157"], ["21", "158"], ["21", "159"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "61"], ["23", "62"], ["23", "65"], ["23", "98"], ["23", "99"], ["23", "103"], ["23", "153"], ["23", "155"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "82"], ["75", "85"], ["75", "87"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["87", "95"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "108"], ["104", "105"], ["104", "107"], ["105", "106"], ["108", "109"], ["108", "110"], ["108", "116"], ["108", "117"], ["108", "123"], ["108", "124"], ["108", "131"], ["108", "140"], ["108", "145"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "115"], ["113", "114"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "122"], ["120", "121"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "151"], ["147", "152"], ["148", "149"], ["148", "150"], ["153", "154"], ["155", "156"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "47"], ["62", "67"], ["99", "105"], ["153", "155"], ["155", "159"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "50"], ["50", "56"], ["50", "62"], ["53", "50"], ["55", "53"], ["67", "70"], ["70", "79"], ["70", "101"], ["73", "70"], ["101", "99"], ["104", "113"], ["104", "153"], ["34", "32"], ["56", "59"], ["59", "55"], ["77", "82"], ["82", "89"], ["82", "73"], ["85", "82"], ["105", "104"], ["110", "120"], ["117", "127"], ["124", "136"], ["131", "142"], ["140", "148"], ["145", "105"], ["79", "77"], ["88", "95"], ["88", "85"], ["95", "85"], ["112", "110"], ["119", "117"], ["126", "124"], ["133", "131"], ["142", "140"], ["147", "145"], ["89", "92"], ["92", "88"], ["113", "112"], ["120", "119"], ["127", "126"], ["134", "133"], ["148", "147"], ["136", "134"], ["21", "26"], ["22", "159"], ["24", "159"], ["27", "159"], ["28", "159"], ["31", "159"], ["31", "159"], ["36", "159"], ["41", "159"], ["41", "159"], ["41", "159"], ["62", "159"], ["62", "159"], ["67", "159"], ["70", "159"], ["70", "159"], ["70", "159"], ["101", "159"], ["99", "159"], ["99", "159"], ["105", "159"], ["104", "159"], ["104", "159"], ["153", "159"], ["155", "159"], ["155", "159"], ["110", "159"], ["120", "159"], ["119", "159"], ["117", "159"], ["117", "159"], ["127", "159"], ["127", "159"], ["126", "159"], ["124", "159"], ["124", "159"], ["134", "159"], ["133", "159"], ["131", "159"], ["131", "159"], ["142", "159"], ["140", "159"], ["148", "159"], ["147", "159"], ["145", "159"], ["145", "159"], ["77", "159"], ["77", "159"], ["82", "159"], ["82", "159"], ["73", "159"], ["88", "159"], ["88", "159"], ["88", "159"], ["95", "159"], ["85", "159"], ["55", "159"], ["55", "159"], ["53", "159"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["21", "62"], ["101", "99"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "47"], ["59", "55"], ["21", "67"], ["31", "153"], ["145", "153"], ["21", "153"], ["153", "155"], ["21", "155"], ["27", "38"], ["21", "38"], ["36", "43"], ["21", "43"], ["47", "50"], ["53", "50"], ["21", "50"], ["43", "50"], ["50", "53"], ["21", "53"], ["67", "70"], ["73", "70"], ["21", "70"], ["50", "70"], ["82", "70"], ["21", "73"], ["70", "73"], ["70", "77"], ["21", "77"], ["38", "101"], ["59", "101"], ["21", "101"], ["105", "104"], ["21", "104"], ["112", "110"], ["112", "110"], ["119", "117"], ["119", "117"], ["127", "124"], ["127", "124"], ["21", "124"], ["133", "131"], ["133", "131"], ["142", "140"], ["142", "140"], ["38", "59"], ["21", "59"], ["77", "82"], ["85", "82"], ["21", "82"], ["70", "82"], ["82", "85"], ["21", "85"], ["21", "95"], ["99", "105"], ["21", "105"], ["62", "140"], ["148", "140"], ["95", "140"], ["21", "140"], ["31", "145"], ["21", "145"], ["70", "79"], ["21", "79"], ["41", "88"], ["55", "88"], ["62", "95"], ["113", "112"], ["21", "112"], ["120", "119"], ["21", "119"], ["127", "126"], ["127", "126"], ["21", "126"], ["134", "133"], ["134", "133"], ["21", "133"], ["131", "142"], ["21", "142"], ["21", "147"], ["101", "113"], ["120", "113"], ["21", "113"], ["113", "120"], ["21", "120"], ["117", "127"], ["21", "127"], ["110", "127"], ["136", "134"], ["21", "134"], ["136", "134"], ["140", "148"], ["21", "148"], ["124", "136"], ["21", "136"], ["50", "56"], ["50", "50"], ["50", "59"], ["50", "53"], ["50", "55"], ["70", "73"], ["70", "77"], ["70", "82"], ["70", "79"], ["70", "70"], ["104", "120"], ["104", "113"], ["104", "136"], ["104", "145"], ["104", "131"], ["104", "142"], ["104", "104"], ["104", "119"], ["104", "112"], ["104", "134"], ["104", "140"], ["104", "148"], ["104", "126"], ["104", "105"], ["104", "147"], ["104", "110"], ["104", "117"], ["104", "127"], ["104", "124"], ["104", "133"], ["82", "89"], ["82", "85"], ["82", "92"], ["82", "82"], ["82", "88"], ["88", "95"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>8</SUB>>", "59": "<(nextInt,nextInt())<SUB>8</SUB>>", "61": "<(LOCAL,int c: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.addition,i + 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,i + 1)<SUB>11</SUB>>", "83": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "87": "<(CONTROL_STRUCTURE,if (a[i] &gt; a[j]),if (a[i] &gt; a[j]))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,a[i] &gt; a[j])<SUB>12</SUB>>", "93": "<(IDENTIFIER,a,a[i] &gt; a[j])<SUB>12</SUB>>", "95": "<(&lt;operators&gt;.assignmentXor,c ^= 1)<SUB>13</SUB>>", "97": "<(LITERAL,1,c ^= 1)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>14</SUB>>", "101": "<(nextInt,nextInt())<SUB>14</SUB>>", "103": "<(CONTROL_STRUCTURE,while (m-- &gt; 0),while (m-- &gt; 0))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.postDecrement,m--)<SUB>15</SUB>>", "107": "<(LITERAL,0,m-- &gt; 0)<SUB>15</SUB>>", "109": "<(LOCAL,int l: int)<SUB>16</SUB>>", "111": "<(IDENTIFIER,l,int l = sc.nextInt() - 1)<SUB>16</SUB>>", "113": "<(nextInt,nextInt())<SUB>16</SUB>>", "115": "<(LITERAL,1,sc.nextInt() - 1)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.assignment,int r = sc.nextInt() - 1)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>17</SUB>>", "121": "<(IDENTIFIER,sc,nextInt())<SUB>17</SUB>>", "123": "<(LOCAL,int d: int)<SUB>18</SUB>>", "125": "<(IDENTIFIER,d,int d = r - l + 1)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.subtraction,r - l)<SUB>18</SUB>>", "129": "<(IDENTIFIER,l,r - l)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.assignment,d = d * (d - 1) / 2)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.division,d * (d - 1) / 2)<SUB>19</SUB>>", "135": "<(IDENTIFIER,d,d * (d - 1))<SUB>19</SUB>>", "137": "<(IDENTIFIER,d,d - 1)<SUB>19</SUB>>", "139": "<(LITERAL,2,d * (d - 1) / 2)<SUB>19</SUB>>", "141": "<(IDENTIFIER,c,c ^= d % 2)<SUB>20</SUB>>", "143": "<(IDENTIFIER,d,d % 2)<SUB>20</SUB>>", "145": "<(println,println(c == 0 ? &quot;even&quot; : &quot;odd&quot;))<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.conditional,c == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>21</SUB>>", "149": "<(IDENTIFIER,c,c == 0)<SUB>21</SUB>>", "151": "<(LITERAL,&quot;even&quot;,c == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>21</SUB>>", "153": "<(flush,flush())<SUB>24</SUB>>", "155": "<(close,close())<SUB>25</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}