{"edges": [["17", "19"], ["17", "175"], ["17", "176"], ["17", "177"], ["19", "20"], ["19", "21"], ["19", "27"], ["19", "28"], ["19", "34"], ["19", "35"], ["19", "39"], ["19", "64"], ["19", "170"], ["19", "173"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "63"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["57", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "82"], ["74", "107"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "96"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "104"], ["96", "106"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["113", "123"], ["113", "124"], ["113", "139"], ["113", "140"], ["113", "149"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["119", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "159"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "167"], ["159", "169"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["170", "171"], ["170", "172"], ["173", "174"], ["21", "32"], ["28", "37"], ["35", "41"], ["170", "173"], ["173", "177"], ["23", "21"], ["30", "28"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "66"], ["47", "44"], ["66", "69"], ["69", "77"], ["69", "170"], ["72", "69"], ["25", "23"], ["32", "30"], ["50", "47"], ["51", "56"], ["54", "50"], ["76", "72"], ["76", "85"], ["83", "100"], ["83", "109"], ["108", "118"], ["108", "72"], ["55", "54"], ["77", "76"], ["84", "83"], ["84", "91"], ["89", "83"], ["97", "104"], ["104", "106"], ["106", "177"], ["109", "108"], ["115", "127"], ["124", "143"], ["140", "151"], ["56", "60"], ["57", "55"], ["85", "84"], ["90", "89"], ["99", "97"], ["117", "115"], ["126", "124"], ["142", "140"], ["150", "163"], ["150", "72"], ["60", "57"], ["91", "90"], ["100", "99"], ["118", "119"], ["119", "117"], ["127", "133"], ["128", "126"], ["143", "146"], ["146", "142"], ["151", "150"], ["151", "155"], ["154", "150"], ["160", "167"], ["167", "169"], ["169", "177"], ["130", "128"], ["155", "154"], ["162", "160"], ["131", "136"], ["136", "130"], ["163", "162"], ["133", "131"], ["17", "25"], ["169", "177"], ["106", "177"], ["18", "177"], ["21", "177"], ["30", "177"], ["30", "177"], ["28", "177"], ["28", "177"], ["35", "177"], ["35", "177"], ["35", "177"], ["41", "177"], ["44", "177"], ["66", "177"], ["69", "177"], ["76", "177"], ["76", "177"], ["84", "177"], ["84", "177"], ["83", "177"], ["90", "177"], ["89", "177"], ["89", "177"], ["83", "177"], ["83", "177"], ["108", "177"], ["117", "177"], ["115", "177"], ["115", "177"], ["128", "177"], ["130", "177"], ["130", "177"], ["128", "177"], ["126", "177"], ["124", "177"], ["124", "177"], ["146", "177"], ["146", "177"], ["142", "177"], ["140", "177"], ["140", "177"], ["151", "177"], ["150", "177"], ["155", "177"], ["154", "177"], ["150", "177"], ["150", "177"], ["100", "177"], ["99", "177"], ["97", "177"], ["97", "177"], ["104", "177"], ["104", "177"], ["72", "177"], ["57", "177"], ["57", "177"], ["55", "177"], ["54", "177"], ["50", "177"], ["50", "177"], ["47", "177"], ["17", "18"], ["23", "21"], ["23", "21"], ["30", "28"], ["30", "28"], ["37", "35"], ["17", "41"], ["17", "66"], ["17", "170"], ["170", "173"], ["17", "173"], ["25", "23"], ["17", "23"], ["32", "30"], ["17", "30"], ["17", "37"], ["41", "44"], ["47", "44"], ["17", "44"], ["60", "47"], ["17", "47"], ["54", "50"], ["54", "50"], ["66", "69"], ["72", "69"], ["17", "69"], ["69", "72"], ["119", "72"], ["17", "72"], ["17", "25"], ["23", "32"], ["17", "32"], ["17", "54"], ["57", "54"], ["57", "54"], ["57", "54"], ["35", "76"], ["108", "76"], ["50", "76"], ["131", "76"], ["28", "76"], ["89", "76"], ["154", "76"], ["17", "76"], ["84", "83"], ["84", "83"], ["89", "83"], ["89", "83"], ["17", "106"], ["35", "108"], ["84", "108"], ["84", "108"], ["17", "108"], ["17", "115"], ["119", "115"], ["119", "115"], ["119", "115"], ["17", "124"], ["128", "124"], ["128", "124"], ["35", "140"], ["131", "140"], ["146", "140"], ["146", "140"], ["17", "55"], ["57", "55"], ["57", "55"], ["57", "55"], ["35", "84"], ["76", "84"], ["21", "84"], ["108", "84"], ["151", "84"], ["17", "84"], ["35", "89"], ["84", "89"], ["17", "89"], ["76", "89"], ["17", "97"], ["99", "97"], ["99", "97"], ["97", "104"], ["17", "104"], ["30", "57"], ["17", "57"], ["60", "57"], ["60", "57"], ["35", "90"], ["84", "90"], ["17", "90"], ["100", "99"], ["100", "99"], ["17", "99"], ["17", "117"], ["119", "117"], ["119", "117"], ["119", "117"], ["17", "126"], ["128", "126"], ["128", "126"], ["35", "142"], ["131", "142"], ["146", "142"], ["146", "142"], ["151", "150"], ["151", "150"], ["154", "150"], ["154", "150"], ["17", "169"], ["44", "60"], ["17", "60"], ["17", "100"], ["69", "100"], ["30", "119"], ["128", "119"], ["57", "119"], ["17", "119"], ["69", "119"], ["119", "128"], ["17", "128"], ["130", "128"], ["130", "128"], ["124", "146"], ["17", "146"], ["136", "146"], ["140", "151"], ["17", "151"], ["131", "151"], ["151", "154"], ["17", "154"], ["76", "154"], ["89", "154"], ["17", "160"], ["162", "160"], ["162", "160"], ["160", "167"], ["17", "167"], ["131", "130"], ["131", "130"], ["136", "130"], ["136", "130"], ["151", "155"], ["17", "155"], ["163", "162"], ["163", "162"], ["17", "162"], ["108", "131"], ["17", "131"], ["35", "131"], ["108", "131"], ["115", "136"], ["17", "136"], ["17", "163"], ["119", "163"], ["44", "60"], ["44", "51"], ["44", "57"], ["44", "56"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["44", "55"], ["69", "77"], ["69", "170"], ["69", "76"], ["69", "173"], ["76", "84"], ["76", "85"], ["76", "69"], ["76", "72"], ["76", "83"], ["83", "104"], ["83", "97"], ["83", "100"], ["83", "108"], ["83", "99"], ["83", "106"], ["83", "109"], ["108", "115"], ["108", "136"], ["108", "146"], ["108", "128"], ["108", "131"], ["108", "69"], ["108", "150"], ["108", "151"], ["108", "119"], ["108", "130"], ["108", "118"], ["108", "127"], ["108", "72"], ["108", "142"], ["108", "140"], ["108", "143"], ["108", "126"], ["108", "117"], ["108", "124"], ["108", "133"], ["84", "91"], ["84", "90"], ["84", "89"], ["150", "167"], ["150", "169"], ["150", "163"], ["150", "69"], ["150", "162"], ["150", "160"], ["150", "72"], ["151", "154"], ["151", "155"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,long l = parseLong(next()))<SUB>2</SUB>>", "23": "<(parseLong,parseLong(next()))<SUB>2</SUB>>", "25": "<(next,next())<SUB>2</SUB>>", "27": "<(LOCAL,long r: long)<SUB>3</SUB>>", "29": "<(IDENTIFIER,r,long r = parseLong(next()))<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,parseLong(next()))<SUB>3</SUB>>", "33": "<(IDENTIFIER,this,next())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long[] min = new long[61])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[61])>", "39": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 60); ++i),for (int i = 1; Some(i &lt;= 60); ++i))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "43": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt;= 60)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,min[i] = (long) pow(2, i - 1) - 1)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.cast,(long) pow(2, i - 1))<SUB>6</SUB>>", "57": "<(pow,pow(2, i - 1))<SUB>6</SUB>>", "59": "<(LITERAL,2,pow(2, i - 1))<SUB>6</SUB>>", "61": "<(IDENTIFIER,i,i - 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,(long) pow(2, i - 1) - 1)<SUB>6</SUB>>", "65": "<(LOCAL,int i: int)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,int i = 60)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>8</SUB>>", "71": "<(LITERAL,0,i &gt;= 0)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,--i)<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,if (min[i] &gt;= r),if (min[i] &gt;= r))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,min[i] &gt;= r)<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.logicalAnd,min[i] &gt;= l &amp;&amp; min[i] + 1 &lt;= r)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>11</SUB>>", "87": "<(IDENTIFIER,i,min[i] &gt;= l)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.lessEqualsThan,min[i] + 1 &lt;= r)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>11</SUB>>", "93": "<(IDENTIFIER,i,min[i] + 1)<SUB>11</SUB>>", "95": "<(IDENTIFIER,r,min[i] + 1 &lt;= r)<SUB>11</SUB>>", "97": "<(println,println((1L &lt;&lt; i) - 1))<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.subtraction,(1L &lt;&lt; i) - 1)<SUB>12</SUB>>", "101": "<(LITERAL,1L,1L &lt;&lt; i)<SUB>12</SUB>>", "103": "<(LITERAL,1,(1L &lt;&lt; i) - 1)<SUB>12</SUB>>", "105": "<(IDENTIFIER,out,flush())<SUB>13</SUB>>", "107": "<(CONTROL_STRUCTURE,if (min[i] &lt; l),if (min[i] &lt; l))<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>16</SUB>>", "111": "<(IDENTIFIER,i,min[i] &lt; l)<SUB>16</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,long one_jump = (long) pow(2, i))<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.cast,(long) pow(2, i))<SUB>17</SUB>>", "119": "<(pow,pow(2, i))<SUB>17</SUB>>", "121": "<(LITERAL,2,pow(2, i))<SUB>17</SUB>>", "123": "<(LOCAL,long jumps: long)<SUB>18</SUB>>", "125": "<(IDENTIFIER,jumps,long jumps = (long) ceil((l - min[i]) / (one_jump * 1.0)))<SUB>18</SUB>>", "127": "<(TYPE_REF,long,long)<SUB>18</SUB>>", "129": "<(IDENTIFIER,this,ceil((l - min[i]) / (one_jump * 1.0)))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.subtraction,l - min[i])<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,l - min[i])<SUB>18</SUB>>", "137": "<(IDENTIFIER,one_jump,one_jump * 1.0)<SUB>18</SUB>>", "139": "<(LOCAL,long cur: long)<SUB>19</SUB>>", "141": "<(IDENTIFIER,cur,long cur = min[i] + (jumps * one_jump))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>19</SUB>>", "145": "<(IDENTIFIER,i,min[i] + (jumps * one_jump))<SUB>19</SUB>>", "147": "<(IDENTIFIER,jumps,jumps * one_jump)<SUB>19</SUB>>", "149": "<(CONTROL_STRUCTURE,if (cur &gt;= l &amp;&amp; cur + 1 &lt;= r),if (cur &gt;= l &amp;&amp; cur + 1 &lt;= r))<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.greaterEqualsThan,cur &gt;= l)<SUB>20</SUB>>", "153": "<(IDENTIFIER,l,cur &gt;= l)<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.addition,cur + 1)<SUB>20</SUB>>", "157": "<(LITERAL,1,cur + 1)<SUB>20</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "161": "<(IDENTIFIER,out,println((1L &lt;&lt; i) - 1))<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.shiftLeft,1L &lt;&lt; i)<SUB>21</SUB>>", "165": "<(IDENTIFIER,i,1L &lt;&lt; i)<SUB>21</SUB>>", "167": "<(flush,flush())<SUB>22</SUB>>", "169": "<(RETURN,return;,return;)<SUB>23</SUB>>", "171": "<(IDENTIFIER,out,println(0))<SUB>27</SUB>>", "173": "<(flush,flush())<SUB>28</SUB>>", "175": "<(MODIFIER,PUBLIC)>", "177": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}