{"edges": [["19", "21"], ["19", "249"], ["19", "250"], ["19", "251"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "41"], ["21", "42"], ["21", "47"], ["21", "83"], ["21", "84"], ["21", "91"], ["21", "92"], ["21", "95"], ["21", "115"], ["21", "242"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "64"], ["57", "70"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "63"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "125"], ["115", "127"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "133"], ["127", "157"], ["129", "130"], ["129", "131"], ["131", "132"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["157", "162"], ["157", "165"], ["157", "167"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["167", "222"], ["168", "169"], ["168", "180"], ["169", "170"], ["169", "177"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "179"], ["180", "181"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "189"], ["181", "191"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["192", "193"], ["192", "206"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["206", "207"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["213", "221"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "234"], ["223", "224"], ["223", "229"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "44"], ["42", "49"], ["84", "92"], ["92", "97"], ["242", "251"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "42"], ["49", "52"], ["52", "61"], ["52", "87"], ["55", "52"], ["86", "84"], ["97", "100"], ["100", "110"], ["100", "117"], ["103", "100"], ["117", "122"], ["120", "131"], ["120", "245"], ["125", "122"], ["243", "246"], ["246", "242"], ["28", "26"], ["58", "67"], ["64", "72"], ["70", "55"], ["87", "86"], ["106", "103"], ["122", "120"], ["129", "135"], ["245", "243"], ["60", "58"], ["66", "64"], ["71", "78"], ["76", "70"], ["107", "106"], ["131", "129"], ["135", "138"], ["138", "148"], ["138", "159"], ["141", "138"], ["159", "162"], ["162", "173"], ["162", "125"], ["165", "162"], ["61", "60"], ["67", "66"], ["72", "71"], ["77", "76"], ["108", "107"], ["78", "77"], ["110", "108"], ["145", "153"], ["145", "141"], ["169", "183"], ["169", "225"], ["223", "238"], ["223", "165"], ["146", "145"], ["153", "159"], ["170", "169"], ["170", "177"], ["177", "169"], ["224", "223"], ["224", "230"], ["229", "223"], ["235", "165"], ["148", "146"], ["171", "170"], ["183", "186"], ["186", "195"], ["186", "225"], ["189", "186"], ["225", "224"], ["230", "229"], ["237", "235"], ["173", "171"], ["238", "237"], ["193", "209"], ["193", "189"], ["194", "193"], ["194", "202"], ["199", "193"], ["207", "189"], ["195", "194"], ["200", "199"], ["208", "218"], ["213", "207"], ["202", "200"], ["209", "208"], ["214", "213"], ["216", "214"], ["218", "216"], ["19", "24"], ["20", "251"], ["22", "251"], ["25", "251"], ["25", "251"], ["30", "251"], ["37", "251"], ["35", "251"], ["35", "251"], ["42", "251"], ["42", "251"], ["42", "251"], ["52", "251"], ["52", "251"], ["84", "251"], ["84", "251"], ["84", "251"], ["92", "251"], ["97", "251"], ["100", "251"], ["100", "251"], ["117", "251"], ["120", "251"], ["122", "251"], ["120", "251"], ["120", "251"], ["242", "251"], ["246", "251"], ["242", "251"], ["242", "251"], ["129", "251"], ["129", "251"], ["129", "251"], ["135", "251"], ["138", "251"], ["138", "251"], ["146", "251"], ["145", "251"], ["145", "251"], ["141", "251"], ["153", "251"], ["153", "251"], ["153", "251"], ["159", "251"], ["162", "251"], ["162", "251"], ["125", "251"], ["171", "251"], ["170", "251"], ["169", "251"], ["177", "251"], ["169", "251"], ["169", "251"], ["183", "251"], ["186", "251"], ["186", "251"], ["224", "251"], ["223", "251"], ["223", "251"], ["223", "251"], ["235", "251"], ["235", "251"], ["165", "251"], ["193", "251"], ["200", "251"], ["199", "251"], ["193", "251"], ["193", "251"], ["207", "251"], ["216", "251"], ["207", "251"], ["207", "251"], ["189", "251"], ["106", "251"], ["106", "251"], ["103", "251"], ["58", "251"], ["58", "251"], ["64", "251"], ["67", "251"], ["66", "251"], ["64", "251"], ["64", "251"], ["70", "251"], ["76", "251"], ["70", "251"], ["70", "251"], ["55", "251"], ["225", "251"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["44", "42"], ["86", "84"], ["86", "84"], ["19", "92"], ["22", "25"], ["19", "25"], ["19", "49"], ["19", "97"], ["19", "117"], ["246", "242"], ["246", "242"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "44"], ["19", "44"], ["49", "52"], ["55", "52"], ["19", "52"], ["35", "52"], ["52", "55"], ["19", "55"], ["60", "58"], ["60", "58"], ["66", "64"], ["66", "64"], ["76", "70"], ["19", "70"], ["87", "86"], ["87", "86"], ["19", "86"], ["97", "100"], ["103", "100"], ["19", "100"], ["86", "100"], ["110", "103"], ["19", "103"], ["19", "106"], ["117", "120"], ["125", "120"], ["19", "120"], ["122", "120"], ["122", "120"], ["120", "125"], ["146", "125"], ["225", "125"], ["19", "125"], ["131", "129"], ["92", "246"], ["235", "246"], ["19", "246"], ["19", "87"], ["44", "87"], ["19", "122"], ["100", "122"], ["162", "122"], ["19", "135"], ["19", "159"], ["61", "60"], ["19", "60"], ["67", "66"], ["19", "66"], ["19", "76"], ["19", "131"], ["135", "138"], ["141", "138"], ["19", "138"], ["122", "138"], ["148", "141"], ["19", "141"], ["159", "162"], ["165", "162"], ["19", "162"], ["138", "162"], ["186", "162"], ["173", "165"], ["177", "165"], ["218", "165"], ["19", "165"], ["37", "61"], ["67", "61"], ["19", "61"], ["61", "67"], ["19", "67"], ["19", "110"], ["100", "110"], ["146", "145"], ["146", "145"], ["19", "145"], ["148", "153"], ["19", "153"], ["170", "169"], ["170", "169"], ["177", "169"], ["177", "169"], ["224", "223"], ["224", "223"], ["207", "235"], ["120", "146"], ["19", "146"], ["148", "146"], ["148", "146"], ["171", "170"], ["171", "170"], ["19", "170"], ["173", "177"], ["19", "177"], ["129", "177"], ["153", "177"], ["19", "183"], ["225", "224"], ["225", "224"], ["19", "224"], ["92", "235"], ["19", "235"], ["19", "148"], ["138", "148"], ["120", "171"], ["146", "171"], ["225", "171"], ["19", "171"], ["173", "171"], ["173", "171"], ["183", "186"], ["189", "186"], ["19", "186"], ["162", "186"], ["186", "189"], ["202", "189"], ["19", "189"], ["19", "225"], ["171", "225"], ["200", "225"], ["216", "225"], ["19", "173"], ["162", "173"], ["199", "193"], ["199", "193"], ["200", "199"], ["200", "199"], ["19", "199"], ["171", "200"], ["216", "200"], ["19", "200"], ["202", "200"], ["202", "200"], ["19", "202"], ["186", "202"], ["171", "216"], ["200", "216"], ["19", "216"], ["218", "216"], ["218", "216"], ["19", "218"], ["173", "218"], ["177", "218"], ["52", "60"], ["52", "77"], ["52", "64"], ["52", "52"], ["52", "67"], ["52", "76"], ["52", "58"], ["52", "61"], ["52", "70"], ["52", "66"], ["52", "72"], ["52", "71"], ["52", "55"], ["52", "78"], ["100", "107"], ["100", "103"], ["100", "100"], ["100", "108"], ["100", "106"], ["100", "110"], ["120", "120"], ["120", "131"], ["120", "162"], ["120", "129"], ["120", "138"], ["120", "122"], ["120", "159"], ["120", "135"], ["120", "125"], ["138", "145"], ["138", "146"], ["138", "148"], ["162", "169"], ["162", "225"], ["162", "162"], ["162", "170"], ["162", "223"], ["162", "173"], ["162", "224"], ["162", "171"], ["162", "165"], ["145", "153"], ["145", "138"], ["145", "141"], ["169", "186"], ["169", "183"], ["223", "238"], ["223", "235"], ["223", "237"], ["170", "177"], ["224", "230"], ["224", "229"], ["186", "189"], ["186", "195"], ["186", "194"], ["186", "186"], ["186", "193"], ["193", "214"], ["193", "209"], ["193", "213"], ["193", "208"], ["193", "207"], ["193", "216"], ["193", "218"], ["194", "202"], ["194", "200"], ["194", "199"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int x: int)<SUB>5</SUB>>", "41": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>6</SUB>>", "43": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "59": "<(IDENTIFIER,x,x = sc.nextInt() - 1)<SUB>8</SUB>>", "61": "<(nextInt,nextInt())<SUB>8</SUB>>", "63": "<(LITERAL,1,sc.nextInt() - 1)<SUB>8</SUB>>", "65": "<(IDENTIFIER,y,y = sc.nextInt() - 1)<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(LITERAL,1,sc.nextInt() - 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[x][y])<SUB>10</SUB>>", "73": "<(IDENTIFIER,graph,graph[x][y] = graph[y][x] = true)<SUB>10</SUB>>", "75": "<(IDENTIFIER,y,graph[x][y] = graph[y][x] = true)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,graph[y][x])<SUB>10</SUB>>", "79": "<(IDENTIFIER,graph,graph[y][x] = true)<SUB>10</SUB>>", "81": "<(IDENTIFIER,x,graph[y][x] = true)<SUB>10</SUB>>", "83": "<(LOCAL,long[][] dp: long[][])<SUB>12</SUB>>", "85": "<(IDENTIFIER,dp,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "91": "<(LOCAL,long res: long)<SUB>13</SUB>>", "93": "<(IDENTIFIER,res,long res = 0)<SUB>13</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "99": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "101": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i][i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,dp,dp[1 &lt;&lt; i][i] = 1)<SUB>15</SUB>>", "111": "<(LITERAL,1,1 &lt;&lt; i)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,dp[1 &lt;&lt; i][i] = 1)<SUB>15</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++),for (int mask = 1; Some(mask &lt; (1 &lt;&lt; n)); mask++))<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>17</SUB>>", "119": "<(LITERAL,1,int mask = 1)<SUB>17</SUB>>", "121": "<(IDENTIFIER,mask,mask &lt; (1 &lt;&lt; n))<SUB>17</SUB>>", "123": "<(LITERAL,1,1 &lt;&lt; n)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>17</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.assignment,int first = -1)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.minus,-1)<SUB>18</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int f = 0; Some(f &lt; n); f++),for (int f = 0; Some(f &lt; n); f++))<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.assignment,int f = 0)<SUB>19</SUB>>", "137": "<(LITERAL,0,int f = 0)<SUB>19</SUB>>", "139": "<(IDENTIFIER,f,f &lt; n)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,f++)<SUB>19</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; f)) != 0)<SUB>20</SUB>>", "147": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; f))<SUB>20</SUB>>", "149": "<(LITERAL,1,1 &lt;&lt; f)<SUB>20</SUB>>", "151": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; f)) != 0)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.assignment,first = f)<SUB>21</SUB>>", "155": "<(IDENTIFIER,f,first = f)<SUB>21</SUB>>", "157": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "161": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.logicalAnd,(mask &amp; (1 &lt;&lt; i)) != 0 &amp;&amp; i != first)<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>26</SUB>>", "175": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.notEquals,i != first)<SUB>26</SUB>>", "179": "<(IDENTIFIER,first,i != first)<SUB>26</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "185": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "187": "<(IDENTIFIER,j,j &lt; n)<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.logicalAnd,graph[j][i] &amp;&amp; ((mask &amp; 1 &lt;&lt; j) != 0))<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,graph[j])<SUB>28</SUB>>", "197": "<(IDENTIFIER,j,graph[j][i] &amp;&amp; ((mask &amp; 1 &lt;&lt; j) != 0))<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.notEquals,(mask &amp; 1 &lt;&lt; j) != 0)<SUB>28</SUB>>", "201": "<(IDENTIFIER,mask,mask &amp; 1 &lt;&lt; j)<SUB>28</SUB>>", "203": "<(LITERAL,1,1 &lt;&lt; j)<SUB>28</SUB>>", "205": "<(LITERAL,0,(mask &amp; 1 &lt;&lt; j) != 0)<SUB>28</SUB>>", "207": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>29</SUB>>", "211": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "215": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "217": "<(IDENTIFIER,mask,mask ^ 1 &lt;&lt; i)<SUB>29</SUB>>", "219": "<(LITERAL,1,1 &lt;&lt; i)<SUB>29</SUB>>", "221": "<(IDENTIFIER,j,dp[mask][i] += dp[mask ^ 1 &lt;&lt; i][j])<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt; 2 &amp;&amp; graph[first][i])<SUB>33</SUB>>", "225": "<(bitCount,Integer.bitCount(mask))<SUB>33</SUB>>", "227": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>33</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,graph[first][i])<SUB>33</SUB>>", "231": "<(IDENTIFIER,graph,Integer.bitCount(mask) &gt; 2 &amp;&amp; graph[first][i])<SUB>33</SUB>>", "233": "<(IDENTIFIER,i,Integer.bitCount(mask) &gt; 2 &amp;&amp; graph[first][i])<SUB>33</SUB>>", "235": "<(&lt;operator&gt;.assignmentPlus,res += dp[mask][i])<SUB>34</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>34</SUB>>", "239": "<(IDENTIFIER,dp,res += dp[mask][i])<SUB>34</SUB>>", "241": "<(IDENTIFIER,i,res += dp[mask][i])<SUB>34</SUB>>", "243": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "245": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "247": "<(IDENTIFIER,res,res / 2)<SUB>39</SUB>>", "249": "<(MODIFIER,PUBLIC)>", "251": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}