{"edges": [["21", "23"], ["21", "493"], ["21", "494"], ["21", "495"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "47"], ["23", "51"], ["23", "55"], ["23", "78"], ["23", "82"], ["23", "87"], ["23", "173"], ["23", "174"], ["23", "180"], ["23", "184"], ["23", "189"], ["23", "6"], ["23", "320"], ["23", "323"], ["23", "324"], ["23", "327"], ["23", "328"], ["23", "335"], ["23", "336"], ["23", "470"], ["23", "481"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "72"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "125"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "114"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "158"], ["143", "144"], ["143", "151"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "166"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["180", "183"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["189", "194"], ["189", "199"], ["189", "201"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["199", "200"], ["201", "202"], ["201", "209"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["209", "210"], ["209", "211"], ["209", "214"], ["209", "217"], ["209", "219"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["217", "218"], ["219", "220"], ["219", "229"], ["219", "255"], ["219", "319"], ["220", "221"], ["220", "228"], ["221", "222"], ["221", "227"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["229", "230"], ["229", "237"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["237", "246"], ["239", "240"], ["239", "241"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["255", "262"], ["255", "265"], ["255", "267"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["265", "266"], ["267", "268"], ["267", "277"], ["268", "269"], ["268", "276"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "274"], ["277", "278"], ["277", "289"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "286"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["289", "302"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "299"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "314"], ["303", "304"], ["303", "311"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["320", "321"], ["320", "322"], ["323", "5"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["336", "337"], ["336", "340"], ["337", "338"], ["337", "339"], ["340", "341"], ["341", "342"], ["341", "343"], ["341", "346"], ["341", "349"], ["341", "351"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "348"], ["349", "350"], ["351", "352"], ["351", "361"], ["351", "394"], ["352", "353"], ["352", "360"], ["353", "354"], ["353", "359"], ["354", "355"], ["354", "356"], ["356", "357"], ["356", "358"], ["361", "362"], ["361", "379"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "374"], ["367", "368"], ["367", "369"], ["369", "370"], ["369", "371"], ["371", "372"], ["371", "373"], ["374", "375"], ["374", "376"], ["376", "377"], ["376", "378"], ["379", "380"], ["379", "385"], ["379", "388"], ["379", "393"], ["380", "381"], ["380", "382"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "387"], ["388", "389"], ["388", "390"], ["390", "391"], ["390", "392"], ["394", "395"], ["394", "396"], ["394", "401"], ["394", "404"], ["394", "406"], ["396", "397"], ["396", "398"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["404", "405"], ["406", "407"], ["406", "416"], ["407", "408"], ["407", "415"], ["408", "409"], ["408", "414"], ["409", "410"], ["409", "411"], ["411", "412"], ["411", "413"], ["416", "417"], ["416", "446"], ["417", "418"], ["417", "421"], ["418", "419"], ["418", "420"], ["421", "422"], ["421", "441"], ["422", "423"], ["422", "438"], ["423", "424"], ["423", "435"], ["424", "425"], ["424", "426"], ["426", "427"], ["426", "432"], ["427", "428"], ["427", "429"], ["429", "430"], ["429", "431"], ["432", "433"], ["432", "434"], ["435", "436"], ["435", "437"], ["438", "439"], ["438", "440"], ["441", "442"], ["441", "445"], ["442", "443"], ["442", "444"], ["446", "447"], ["446", "452"], ["446", "457"], ["446", "460"], ["446", "469"], ["447", "448"], ["447", "449"], ["449", "450"], ["449", "451"], ["452", "453"], ["452", "454"], ["454", "455"], ["454", "456"], ["457", "458"], ["457", "459"], ["460", "461"], ["460", "462"], ["462", "463"], ["462", "466"], ["463", "464"], ["463", "465"], ["466", "467"], ["466", "468"], ["470", "471"], ["470", "474"], ["471", "472"], ["471", "473"], ["474", "475"], ["474", "476"], ["476", "477"], ["476", "480"], ["477", "478"], ["477", "479"], ["481", "482"], ["481", "485"], ["482", "483"], ["483", "484"], ["485", "486"], ["485", "489"], ["486", "487"], ["486", "488"], ["489", "490"], ["489", "492"], ["490", "491"], ["24", "30"], ["27", "35"], ["33", "39"], ["37", "43"], ["41", "49"], ["47", "53"], ["51", "57"], ["78", "84"], ["82", "89"], ["174", "180"], ["180", "185"], ["184", "191"], ["320", "323"], ["323", "324"], ["324", "331"], ["328", "337"], ["470", "483"], ["26", "24"], ["28", "27"], ["35", "33"], ["39", "37"], ["43", "41"], ["49", "47"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "80"], ["63", "60"], ["80", "78"], ["84", "82"], ["89", "92"], ["92", "99"], ["92", "177"], ["95", "92"], ["176", "174"], ["185", "184"], ["191", "196"], ["194", "204"], ["194", "322"], ["199", "196"], ["322", "320"], ["330", "328"], ["337", "343"], ["337", "473"], ["471", "477"], ["474", "470"], ["482", "495"], ["482", "488"], ["485", "483"], ["30", "28"], ["66", "73"], ["72", "63"], ["98", "127"], ["177", "176"], ["196", "194"], ["331", "330"], ["473", "471"], ["476", "474"], ["483", "482"], ["486", "490"], ["489", "485"], ["67", "70"], ["70", "66"], ["73", "76"], ["76", "72"], ["99", "106"], ["102", "98"], ["127", "130"], ["130", "138"], ["130", "95"], ["133", "130"], ["203", "199"], ["203", "211"], ["211", "214"], ["214", "224"], ["214", "199"], ["217", "214"], ["343", "346"], ["346", "337"], ["346", "356"], ["349", "346"], ["477", "476"], ["488", "486"], ["490", "489"], ["103", "117"], ["114", "102"], ["136", "133"], ["204", "203"], ["229", "259"], ["104", "111"], ["109", "103"], ["115", "122"], ["120", "114"], ["137", "145"], ["142", "136"], ["221", "217"], ["221", "234"], ["230", "243"], ["237", "229"], ["257", "262"], ["262", "272"], ["262", "199"], ["265", "262"], ["353", "349"], ["353", "363"], ["362", "382"], ["362", "398"], ["396", "401"], ["401", "411"], ["401", "349"], ["404", "401"], ["106", "104"], ["111", "109"], ["117", "115"], ["122", "120"], ["138", "137"], ["143", "160"], ["158", "142"], ["222", "221"], ["232", "230"], ["239", "247"], ["246", "237"], ["259", "257"], ["277", "265"], ["354", "353"], ["363", "371"], ["366", "362"], ["380", "385"], ["385", "390"], ["388", "349"], ["398", "396"], ["144", "152"], ["151", "143"], ["159", "167"], ["166", "158"], ["224", "222"], ["234", "232"], ["241", "239"], ["247", "252"], ["250", "246"], ["269", "265"], ["269", "283"], ["278", "296"], ["289", "277"], ["356", "354"], ["367", "376"], ["374", "366"], ["382", "380"], ["390", "388"], ["408", "404"], ["408", "418"], ["417", "449"], ["417", "404"], ["145", "148"], ["148", "144"], ["152", "155"], ["155", "151"], ["160", "163"], ["163", "159"], ["167", "170"], ["170", "166"], ["243", "241"], ["252", "250"], ["270", "269"], ["280", "278"], ["291", "305"], ["302", "289"], ["369", "367"], ["376", "374"], ["409", "408"], ["418", "429"], ["421", "417"], ["447", "454"], ["452", "457"], ["457", "463"], ["460", "404"], ["272", "270"], ["281", "286"], ["286", "280"], ["293", "291"], ["303", "315"], ["314", "302"], ["371", "369"], ["411", "409"], ["422", "442"], ["441", "421"], ["449", "447"], ["454", "452"], ["462", "460"], ["283", "281"], ["294", "299"], ["299", "293"], ["304", "311"], ["311", "303"], ["315", "314"], ["423", "438"], ["438", "422"], ["442", "441"], ["463", "466"], ["466", "462"], ["296", "294"], ["305", "308"], ["308", "304"], ["424", "435"], ["435", "423"], ["426", "424"], ["427", "432"], ["432", "426"], ["429", "427"], ["21", "26"], ["22", "495"], ["24", "495"], ["27", "495"], ["27", "495"], ["33", "495"], ["33", "495"], ["37", "495"], ["37", "495"], ["43", "495"], ["41", "495"], ["41", "495"], ["47", "495"], ["47", "495"], ["51", "495"], ["51", "495"], ["78", "495"], ["78", "495"], ["78", "495"], ["82", "495"], ["82", "495"], ["82", "495"], ["92", "495"], ["174", "495"], ["174", "495"], ["180", "495"], ["180", "495"], ["184", "495"], ["184", "495"], ["191", "495"], ["194", "495"], ["320", "495"], ["323", "495"], ["324", "495"], ["328", "495"], ["337", "495"], ["337", "495"], ["470", "495"], ["477", "495"], ["476", "495"], ["470", "495"], ["470", "495"], ["483", "495"], ["482", "495"], ["482", "495"], ["485", "495"], ["485", "495"], ["485", "495"], ["346", "495"], ["346", "495"], ["199", "495"], ["95", "495"], ["63", "495"], ["180", "495"], ["21", "22"], ["21", "24"], ["35", "33"], ["39", "37"], ["43", "41"], ["49", "47"], ["53", "51"], ["80", "78"], ["84", "82"], ["176", "174"], ["21", "184"], ["21", "320"], ["330", "328"], ["330", "328"], ["24", "27"], ["21", "27"], ["21", "57"], ["21", "89"], ["21", "180"], ["174", "180"], ["21", "191"], ["320", "323"], ["21", "323"], ["323", "324"], ["21", "324"], ["180", "470"], ["27", "35"], ["21", "35"], ["35", "39"], ["21", "39"], ["39", "43"], ["21", "43"], ["41", "49"], ["21", "49"], ["49", "53"], ["21", "53"], ["57", "60"], ["63", "60"], ["21", "60"], ["53", "60"], ["60", "63"], ["21", "63"], ["70", "66"], ["76", "72"], ["60", "80"], ["21", "80"], ["80", "84"], ["21", "84"], ["89", "92"], ["95", "92"], ["21", "92"], ["84", "92"], ["130", "92"], ["92", "95"], ["21", "95"], ["103", "98"], ["114", "98"], ["177", "176"], ["177", "176"], ["191", "194"], ["199", "194"], ["21", "194"], ["196", "194"], ["196", "194"], ["194", "199"], ["222", "199"], ["241", "199"], ["270", "199"], ["294", "199"], ["21", "199"], ["331", "330"], ["331", "330"], ["21", "330"], ["328", "337"], ["354", "337"], ["369", "337"], ["409", "337"], ["427", "337"], ["460", "337"], ["388", "337"], ["21", "337"], ["483", "482"], ["470", "485"], ["490", "485"], ["21", "485"], ["21", "127"], ["21", "177"], ["92", "177"], ["21", "196"], ["177", "196"], ["214", "196"], ["262", "196"], ["21", "211"], ["21", "331"], ["196", "331"], ["21", "343"], ["477", "476"], ["477", "476"], ["21", "476"], ["324", "483"], ["490", "483"], ["457", "483"], ["385", "483"], ["21", "483"], ["490", "489"], ["21", "489"], ["43", "70"], ["76", "70"], ["21", "70"], ["70", "76"], ["21", "76"], ["103", "102"], ["114", "102"], ["127", "130"], ["133", "130"], ["21", "130"], ["92", "130"], ["130", "133"], ["21", "133"], ["143", "136"], ["158", "136"], ["180", "203"], ["21", "203"], ["211", "214"], ["217", "214"], ["21", "214"], ["196", "214"], ["224", "217"], ["21", "217"], ["237", "229"], ["237", "229"], ["237", "229"], ["343", "346"], ["349", "346"], ["21", "346"], ["331", "346"], ["401", "346"], ["356", "349"], ["429", "349"], ["463", "349"], ["390", "349"], ["21", "349"], ["371", "349"], ["21", "477"], ["331", "477"], ["346", "477"], ["483", "490"], ["21", "490"], ["104", "103"], ["104", "103"], ["109", "103"], ["109", "103"], ["115", "114"], ["115", "114"], ["120", "114"], ["120", "114"], ["243", "257"], ["21", "257"], ["371", "396"], ["21", "396"], ["33", "104"], ["109", "104"], ["21", "104"], ["47", "104"], ["109", "104"], ["151", "104"], ["66", "104"], ["104", "109"], ["21", "109"], ["47", "109"], ["104", "109"], ["37", "115"], ["120", "115"], ["21", "115"], ["51", "115"], ["120", "115"], ["166", "115"], ["72", "115"], ["115", "120"], ["21", "120"], ["51", "120"], ["115", "120"], ["143", "142"], ["158", "142"], ["222", "221"], ["222", "221"], ["21", "221"], ["289", "237"], ["21", "237"], ["180", "237"], ["229", "237"], ["203", "237"], ["250", "237"], ["250", "237"], ["257", "262"], ["265", "262"], ["21", "262"], ["214", "262"], ["272", "265"], ["299", "265"], ["21", "265"], ["289", "277"], ["289", "277"], ["289", "277"], ["354", "353"], ["354", "353"], ["21", "353"], ["180", "362"], ["417", "362"], ["203", "362"], ["374", "362"], ["374", "362"], ["390", "388"], ["390", "388"], ["396", "401"], ["404", "401"], ["21", "401"], ["346", "401"], ["411", "404"], ["432", "404"], ["466", "404"], ["21", "404"], ["144", "143"], ["144", "143"], ["151", "143"], ["151", "143"], ["159", "158"], ["159", "158"], ["166", "158"], ["166", "158"], ["194", "222"], ["21", "222"], ["224", "222"], ["224", "222"], ["222", "232"], ["21", "232"], ["234", "232"], ["234", "232"], ["180", "246"], ["203", "246"], ["250", "246"], ["250", "246"], ["243", "259"], ["21", "259"], ["337", "354"], ["369", "354"], ["409", "354"], ["427", "354"], ["460", "354"], ["388", "354"], ["21", "354"], ["356", "354"], ["356", "354"], ["180", "366"], ["374", "366"], ["374", "366"], ["324", "380"], ["457", "380"], ["385", "380"], ["21", "380"], ["371", "380"], ["380", "385"], ["21", "385"], ["369", "388"], ["21", "388"], ["371", "398"], ["21", "398"], ["47", "144"], ["109", "144"], ["151", "144"], ["151", "144"], ["47", "151"], ["144", "151"], ["144", "151"], ["51", "159"], ["120", "159"], ["166", "159"], ["166", "159"], ["51", "166"], ["159", "166"], ["159", "166"], ["21", "224"], ["214", "224"], ["21", "234"], ["224", "234"], ["232", "241"], ["21", "241"], ["243", "241"], ["243", "241"], ["21", "250"], ["78", "250"], ["270", "269"], ["270", "269"], ["21", "269"], ["237", "289"], ["21", "289"], ["180", "289"], ["277", "289"], ["203", "289"], ["78", "289"], ["250", "289"], ["21", "356"], ["346", "356"], ["21", "374"], ["78", "374"], ["250", "374"], ["371", "382"], ["21", "382"], ["21", "390"], ["371", "390"], ["409", "408"], ["409", "408"], ["21", "408"], ["180", "417"], ["362", "417"], ["78", "417"], ["374", "417"], ["463", "460"], ["463", "460"], ["466", "460"], ["466", "460"], ["21", "243"], ["234", "243"], ["241", "270"], ["294", "270"], ["21", "270"], ["272", "270"], ["272", "270"], ["281", "280"], ["281", "280"], ["286", "280"], ["286", "280"], ["180", "302"], ["203", "302"], ["78", "302"], ["250", "302"], ["354", "369"], ["21", "369"], ["371", "369"], ["371", "369"], ["369", "409"], ["427", "409"], ["460", "409"], ["21", "409"], ["411", "409"], ["411", "409"], ["180", "421"], ["78", "421"], ["374", "421"], ["324", "447"], ["457", "447"], ["385", "447"], ["21", "447"], ["429", "447"], ["447", "452"], ["21", "452"], ["432", "452"], ["452", "457"], ["21", "457"], ["427", "460"], ["21", "460"], ["21", "272"], ["262", "272"], ["270", "281"], ["21", "281"], ["283", "281"], ["283", "281"], ["21", "286"], ["272", "286"], ["294", "293"], ["294", "293"], ["299", "293"], ["299", "293"], ["180", "303"], ["203", "303"], ["78", "303"], ["250", "303"], ["21", "371"], ["356", "371"], ["21", "411"], ["401", "411"], ["180", "422"], ["78", "422"], ["374", "422"], ["429", "449"], ["21", "449"], ["432", "454"], ["21", "454"], ["463", "462"], ["463", "462"], ["466", "462"], ["466", "462"], ["21", "283"], ["296", "283"], ["243", "283"], ["281", "294"], ["21", "294"], ["296", "294"], ["296", "294"], ["21", "299"], ["286", "299"], ["180", "304"], ["203", "304"], ["78", "304"], ["250", "304"], ["180", "423"], ["78", "423"], ["374", "423"], ["21", "463"], ["429", "463"], ["21", "466"], ["432", "466"], ["21", "296"], ["283", "296"], ["427", "426"], ["427", "426"], ["432", "426"], ["432", "426"], ["409", "427"], ["21", "427"], ["429", "427"], ["429", "427"], ["21", "432"], ["411", "432"], ["21", "429"], ["463", "429"], ["371", "429"], ["60", "60"], ["60", "76"], ["60", "70"], ["60", "66"], ["60", "72"], ["60", "73"], ["60", "67"], ["60", "63"], ["92", "120"], ["92", "102"], ["92", "114"], ["92", "104"], ["92", "95"], ["92", "127"], ["92", "122"], ["92", "117"], ["92", "109"], ["92", "115"], ["92", "98"], ["92", "103"], ["92", "92"], ["92", "130"], ["92", "111"], ["92", "99"], ["92", "106"], ["194", "196"], ["194", "204"], ["194", "194"], ["194", "199"], ["194", "203"], ["337", "346"], ["337", "337"], ["337", "343"], ["482", "488"], ["482", "486"], ["482", "490"], ["482", "485"], ["482", "489"], ["482", "483"], ["482", "482"], ["130", "167"], ["130", "136"], ["130", "163"], ["130", "170"], ["130", "138"], ["130", "148"], ["130", "152"], ["130", "158"], ["130", "160"], ["130", "159"], ["130", "133"], ["130", "145"], ["130", "151"], ["130", "144"], ["130", "137"], ["130", "130"], ["130", "155"], ["130", "166"], ["130", "142"], ["130", "143"], ["203", "214"], ["203", "211"], ["214", "224"], ["214", "222"], ["214", "221"], ["346", "356"], ["346", "349"], ["346", "346"], ["346", "353"], ["346", "354"], ["221", "214"], ["221", "230"], ["221", "243"], ["221", "262"], ["221", "247"], ["221", "217"], ["221", "237"], ["221", "229"], ["221", "241"], ["221", "257"], ["221", "232"], ["221", "259"], ["221", "246"], ["221", "239"], ["221", "252"], ["221", "234"], ["221", "250"], ["262", "272"], ["262", "262"], ["262", "269"], ["262", "265"], ["262", "270"], ["353", "376"], ["353", "362"], ["353", "374"], ["353", "366"], ["353", "367"], ["353", "371"], ["353", "369"], ["353", "363"], ["362", "401"], ["362", "396"], ["362", "382"], ["362", "390"], ["362", "380"], ["362", "388"], ["362", "385"], ["362", "398"], ["401", "401"], ["401", "408"], ["401", "404"], ["401", "411"], ["401", "409"], ["269", "308"], ["269", "283"], ["269", "302"], ["269", "281"], ["269", "315"], ["269", "296"], ["269", "304"], ["269", "311"], ["269", "278"], ["269", "305"], ["269", "291"], ["269", "289"], ["269", "293"], ["269", "314"], ["269", "280"], ["269", "286"], ["269", "299"], ["269", "277"], ["269", "294"], ["269", "303"], ["408", "435"], ["408", "418"], ["408", "426"], ["408", "424"], ["408", "442"], ["408", "441"], ["408", "429"], ["408", "417"], ["408", "427"], ["408", "421"], ["408", "423"], ["408", "422"], ["408", "432"], ["408", "438"], ["417", "460"], ["417", "452"], ["417", "462"], ["417", "466"], ["417", "447"], ["417", "457"], ["417", "449"], ["417", "463"], ["417", "454"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int x: int)<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int y = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,int[] xs: int[])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int[] xs = new int[n])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[n])>", "51": "<(&lt;operator&gt;.assignment,int[] ys = new int[n])<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,xs[i] = nextInt())<SUB>9</SUB>>", "71": "<(IDENTIFIER,input,nextInt())<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,ys[i] = nextInt())<SUB>10</SUB>>", "77": "<(IDENTIFIER,input,nextInt())<SUB>10</SUB>>", "79": "<(IDENTIFIER,ds,ds = new int[n])<SUB>12</SUB>>", "81": "<(IDENTIFIER,n,new int[n])<SUB>12</SUB>>", "83": "<(IDENTIFIER,g,g = new int[n][n])<SUB>13</SUB>>", "85": "<(IDENTIFIER,n,new int[n][n])<SUB>13</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "91": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,ds[i])<SUB>16</SUB>>", "101": "<(IDENTIFIER,i,ds[i] = (x - xs[i]) * (x - xs[i]) + (y - ys[i]) * (y - ys[i]))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.multiplication,(x - xs[i]) * (x - xs[i]))<SUB>16</SUB>>", "105": "<(IDENTIFIER,x,x - xs[i])<SUB>16</SUB>>", "107": "<(IDENTIFIER,xs,x - xs[i])<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.subtraction,x - xs[i])<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>16</SUB>>", "113": "<(IDENTIFIER,i,x - xs[i])<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.subtraction,y - ys[i])<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,y - ys[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,y,y - ys[i])<SUB>16</SUB>>", "123": "<(IDENTIFIER,ys,y - ys[i])<SUB>16</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "129": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "131": "<(IDENTIFIER,j,j &lt; n)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,g[i][j])<SUB>19</SUB>>", "139": "<(IDENTIFIER,g,g[i][j] = (xs[i] - xs[j]) * (xs[i] - xs[j]) + (ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "141": "<(IDENTIFIER,j,g[i][j] = (xs[i] - xs[j]) * (xs[i] - xs[j]) + (ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.multiplication,(xs[i] - xs[j]) * (xs[i] - xs[j]))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>19</SUB>>", "147": "<(IDENTIFIER,i,xs[i] - xs[j])<SUB>19</SUB>>", "149": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.subtraction,xs[i] - xs[j])<SUB>19</SUB>>", "153": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,xs[j])<SUB>19</SUB>>", "157": "<(IDENTIFIER,j,xs[i] - xs[j])<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.subtraction,ys[i] - ys[j])<SUB>19</SUB>>", "161": "<(IDENTIFIER,ys,ys[i] - ys[j])<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,ys[j])<SUB>19</SUB>>", "165": "<(IDENTIFIER,j,ys[i] - ys[j])<SUB>19</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>19</SUB>>", "169": "<(IDENTIFIER,i,ys[i] - ys[j])<SUB>19</SUB>>", "171": "<(IDENTIFIER,ys,ys[i] - ys[j])<SUB>19</SUB>>", "173": "<(LOCAL,int[] dp: int[])<SUB>22</SUB>>", "175": "<(IDENTIFIER,dp,int[] dp = new int[1 &lt;&lt; n])<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>22</SUB>>", "179": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>22</SUB>>", "181": "<(IDENTIFIER,Arrays,fill(dp, 987654321))<SUB>23</SUB>>", "183": "<(LITERAL,987654321,fill(dp, 987654321))<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>24</SUB>>", "187": "<(LITERAL,0,dp[0] = 0)<SUB>24</SUB>>", "189": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "193": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "195": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>25</SUB>>", "197": "<(LITERAL,1,1 &lt;&lt; n)<SUB>25</SUB>>", "199": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.equals,dp[i] == 987654321)<SUB>27</SUB>>", "205": "<(IDENTIFIER,dp,dp[i] == 987654321)<SUB>27</SUB>>", "207": "<(LITERAL,987654321,dp[i] == 987654321)<SUB>27</SUB>>", "209": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; n); a++),for (int a = 0; Some(a &lt; n); a++))<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>28</SUB>>", "213": "<(LITERAL,0,int a = 0)<SUB>28</SUB>>", "215": "<(IDENTIFIER,a,a &lt; n)<SUB>28</SUB>>", "217": "<(&lt;operator&gt;.postIncrement,a++)<SUB>28</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "221": "<(&lt;operator&gt;.greaterThan,(i &amp; (1 &lt;&lt; a)) &gt; 0)<SUB>30</SUB>>", "223": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; a))<SUB>30</SUB>>", "225": "<(LITERAL,1,1 &lt;&lt; a)<SUB>30</SUB>>", "227": "<(LITERAL,0,(i &amp; (1 &lt;&lt; a)) &gt; 0)<SUB>30</SUB>>", "229": "<(&lt;operator&gt;.assignment,dp[i | (1 &lt;&lt; a)] = min(dp[i | (1 &lt;&lt; a)], dp[i] + 2 * ds[a]))<SUB>31</SUB>>", "231": "<(IDENTIFIER,dp,dp[i | (1 &lt;&lt; a)] = min(dp[i | (1 &lt;&lt; a)], dp[i] + 2 * ds[a]))<SUB>31</SUB>>", "233": "<(IDENTIFIER,i,i | (1 &lt;&lt; a))<SUB>31</SUB>>", "235": "<(LITERAL,1,1 &lt;&lt; a)<SUB>31</SUB>>", "237": "<(min,min(dp[i | (1 &lt;&lt; a)], dp[i] + 2 * ds[a]))<SUB>31</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; a)])<SUB>31</SUB>>", "241": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a))<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>31</SUB>>", "245": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>31</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>31</SUB>>", "249": "<(IDENTIFIER,i,dp[i] + 2 * ds[a])<SUB>31</SUB>>", "251": "<(LITERAL,2,2 * ds[a])<SUB>31</SUB>>", "253": "<(IDENTIFIER,ds,2 * ds[a])<SUB>31</SUB>>", "255": "<(CONTROL_STRUCTURE,for (int b = a + 1; Some(b &lt; n); b++),for (int b = a + 1; Some(b &lt; n); b++))<SUB>32</SUB>>", "257": "<(&lt;operator&gt;.assignment,int b = a + 1)<SUB>32</SUB>>", "259": "<(&lt;operator&gt;.addition,a + 1)<SUB>32</SUB>>", "261": "<(LITERAL,1,a + 1)<SUB>32</SUB>>", "263": "<(IDENTIFIER,b,b &lt; n)<SUB>32</SUB>>", "265": "<(&lt;operator&gt;.postIncrement,b++)<SUB>32</SUB>>", "267": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "269": "<(&lt;operator&gt;.greaterThan,(i &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>34</SUB>>", "271": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; b))<SUB>34</SUB>>", "273": "<(LITERAL,1,1 &lt;&lt; b)<SUB>34</SUB>>", "275": "<(LITERAL,0,(i &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>34</SUB>>", "277": "<(&lt;operator&gt;.assignment,dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)] = min(dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)], dp[i] + ds[a] + ds[b] + g[a][b]))<SUB>35</SUB>>", "279": "<(IDENTIFIER,dp,dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)] = min(dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)], dp[i] + ds[a] + ds[b] + g[a][b]))<SUB>35</SUB>>", "281": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a))<SUB>35</SUB>>", "283": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>35</SUB>>", "285": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>35</SUB>>", "287": "<(LITERAL,1,1 &lt;&lt; b)<SUB>35</SUB>>", "289": "<(min,min(dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)], dp[i] + ds[a] + ds[b] + g[a][b]))<SUB>35</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)])<SUB>35</SUB>>", "293": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a) | (1 &lt;&lt; b))<SUB>35</SUB>>", "295": "<(IDENTIFIER,i,i | (1 &lt;&lt; a))<SUB>35</SUB>>", "297": "<(LITERAL,1,1 &lt;&lt; a)<SUB>35</SUB>>", "299": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>35</SUB>>", "301": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>35</SUB>>", "303": "<(&lt;operator&gt;.addition,dp[i] + ds[a] + ds[b])<SUB>35</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>35</SUB>>", "307": "<(IDENTIFIER,i,dp[i] + ds[a])<SUB>35</SUB>>", "309": "<(IDENTIFIER,ds,dp[i] + ds[a])<SUB>35</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,ds[b])<SUB>35</SUB>>", "313": "<(IDENTIFIER,b,dp[i] + ds[a] + ds[b])<SUB>35</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,g[a])<SUB>35</SUB>>", "317": "<(IDENTIFIER,a,dp[i] + ds[a] + ds[b] + g[a][b])<SUB>35</SUB>>", "319": "<(CONTROL_STRUCTURE,break;,break;)<SUB>37</SUB>>", "320": "<(&lt;operator&gt;.assignment,ANY stk = new Stack&lt;Integer&gt;())<SUB>40</SUB>>", "322": "<(&lt;operator&gt;.alloc,new Stack&lt;Integer&gt;())<SUB>40</SUB>>", "5": "<(IDENTIFIER,stk,new Stack&lt;Integer&gt;())<SUB>40</SUB>>", "325": "<(IDENTIFIER,stk,add(0))<SUB>41</SUB>>", "327": "<(LOCAL,int i: int)<SUB>42</SUB>>", "329": "<(IDENTIFIER,i,int i = (1 &lt;&lt; n) - 1)<SUB>42</SUB>>", "331": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>42</SUB>>", "333": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>42</SUB>>", "335": "<(JUMP_TARGET,trace)>", "337": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>46</SUB>>", "339": "<(LITERAL,0,i &gt; 0)<SUB>46</SUB>>", "341": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; n); a++),for (int a = 0; Some(a &lt; n); a++))<SUB>49</SUB>>", "343": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>49</SUB>>", "345": "<(LITERAL,0,int a = 0)<SUB>49</SUB>>", "347": "<(IDENTIFIER,a,a &lt; n)<SUB>49</SUB>>", "349": "<(&lt;operator&gt;.postIncrement,a++)<SUB>49</SUB>>", "351": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "353": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; a)) == 0)<SUB>51</SUB>>", "355": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; a))<SUB>51</SUB>>", "357": "<(LITERAL,1,1 &lt;&lt; a)<SUB>51</SUB>>", "359": "<(LITERAL,0,(i &amp; (1 &lt;&lt; a)) == 0)<SUB>51</SUB>>", "361": "<(CONTROL_STRUCTURE,if (dp[i] == dp[i - (1 &lt;&lt; a)] + 2 * ds[a]),if (dp[i] == dp[i - (1 &lt;&lt; a)] + 2 * ds[a]))<SUB>52</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>52</SUB>>", "365": "<(IDENTIFIER,i,dp[i] == dp[i - (1 &lt;&lt; a)] + 2 * ds[a])<SUB>52</SUB>>", "367": "<(&lt;operator&gt;.indexAccess,dp[i - (1 &lt;&lt; a)])<SUB>52</SUB>>", "369": "<(&lt;operator&gt;.subtraction,i - (1 &lt;&lt; a))<SUB>52</SUB>>", "371": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>52</SUB>>", "373": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>52</SUB>>", "375": "<(LITERAL,2,2 * ds[a])<SUB>52</SUB>>", "377": "<(IDENTIFIER,ds,2 * ds[a])<SUB>52</SUB>>", "379": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "381": "<(IDENTIFIER,stk,add(a + 1))<SUB>54</SUB>>", "383": "<(IDENTIFIER,a,a + 1)<SUB>54</SUB>>", "385": "<(add,add(0))<SUB>55</SUB>>", "387": "<(LITERAL,0,add(0))<SUB>55</SUB>>", "389": "<(IDENTIFIER,i,i -= 1 &lt;&lt; a)<SUB>56</SUB>>", "391": "<(LITERAL,1,1 &lt;&lt; a)<SUB>56</SUB>>", "393": "<(CONTROL_STRUCTURE,continue trace;,continue trace;)<SUB>57</SUB>>", "395": "<(LOCAL,int b: int)<SUB>59</SUB>>", "397": "<(IDENTIFIER,b,int b = a + 1)<SUB>59</SUB>>", "399": "<(IDENTIFIER,a,a + 1)<SUB>59</SUB>>", "401": "<(&lt;operator&gt;.lessThan,b &lt; n)<SUB>59</SUB>>", "403": "<(IDENTIFIER,n,b &lt; n)<SUB>59</SUB>>", "405": "<(IDENTIFIER,b,b++)<SUB>59</SUB>>", "407": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; b)) == 0),if ((i &amp; (1 &lt;&lt; b)) == 0))<SUB>61</SUB>>", "409": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; b))<SUB>61</SUB>>", "411": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>61</SUB>>", "413": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>61</SUB>>", "415": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>61</SUB>>", "417": "<(&lt;operator&gt;.equals,dp[i] == dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "419": "<(IDENTIFIER,dp,dp[i] == dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "421": "<(&lt;operator&gt;.addition,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "423": "<(&lt;operator&gt;.addition,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a])<SUB>62</SUB>>", "425": "<(IDENTIFIER,dp,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a])<SUB>62</SUB>>", "427": "<(&lt;operator&gt;.subtraction,i - (1 &lt;&lt; a))<SUB>62</SUB>>", "429": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>62</SUB>>", "431": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>62</SUB>>", "433": "<(LITERAL,1,1 &lt;&lt; b)<SUB>62</SUB>>", "435": "<(&lt;operator&gt;.indexAccess,ds[a])<SUB>62</SUB>>", "437": "<(IDENTIFIER,a,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a])<SUB>62</SUB>>", "439": "<(IDENTIFIER,ds,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b])<SUB>62</SUB>>", "441": "<(&lt;operator&gt;.indexAccess,g[a][b])<SUB>62</SUB>>", "443": "<(IDENTIFIER,g,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "445": "<(IDENTIFIER,b,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "447": "<(add,add(a + 1))<SUB>64</SUB>>", "449": "<(&lt;operator&gt;.addition,a + 1)<SUB>64</SUB>>", "451": "<(LITERAL,1,a + 1)<SUB>64</SUB>>", "453": "<(IDENTIFIER,stk,add(b + 1))<SUB>65</SUB>>", "455": "<(IDENTIFIER,b,b + 1)<SUB>65</SUB>>", "457": "<(add,add(0))<SUB>66</SUB>>", "459": "<(LITERAL,0,add(0))<SUB>66</SUB>>", "461": "<(IDENTIFIER,i,i -= (1 &lt;&lt; a) + (1 &lt;&lt; b))<SUB>67</SUB>>", "463": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>67</SUB>>", "465": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>67</SUB>>", "467": "<(LITERAL,1,1 &lt;&lt; b)<SUB>67</SUB>>", "469": "<(CONTROL_STRUCTURE,continue trace;,continue trace;)<SUB>68</SUB>>", "471": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>74</SUB>>", "473": "<(FIELD_IDENTIFIER,out,out)<SUB>74</SUB>>", "475": "<(IDENTIFIER,dp,System.out.println(dp[(1 &lt;&lt; n) - 1]))<SUB>74</SUB>>", "477": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>74</SUB>>", "479": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>74</SUB>>", "481": "<(CONTROL_STRUCTURE,while (!stk.isEmpty()),while (!stk.isEmpty()))<SUB>75</SUB>>", "483": "<(isEmpty,isEmpty())<SUB>75</SUB>>", "485": "<(print,print(stk.pop() + &quot; &quot;))<SUB>75</SUB>>", "487": "<(IDENTIFIER,System,print(stk.pop() + &quot; &quot;))<SUB>75</SUB>>", "489": "<(&lt;operator&gt;.addition,stk.pop() + &quot; &quot;)<SUB>75</SUB>>", "491": "<(IDENTIFIER,stk,pop())<SUB>75</SUB>>", "493": "<(MODIFIER,PUBLIC)>", "495": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}