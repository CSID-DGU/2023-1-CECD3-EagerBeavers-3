{"edges": [["19", "21"], ["19", "117"], ["19", "118"], ["19", "119"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["51", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["61", "62"], ["61", "67"], ["61", "80"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["81", "82"], ["82", "83"], ["82", "88"], ["82", "101"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "52"], ["24", "22"], ["39", "37"], ["46", "44"], ["52", "58"], ["52", "63"], ["55", "119"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["56", "55"], ["29", "27"], ["32", "30"], ["58", "56"], ["62", "70"], ["62", "84"], ["67", "119"], ["34", "32"], ["63", "62"], ["68", "74"], ["71", "67"], ["70", "68"], ["72", "77"], ["77", "71"], ["74", "72"], ["83", "91"], ["83", "105"], ["88", "119"], ["84", "83"], ["89", "95"], ["92", "88"], ["102", "119"], ["91", "89"], ["93", "98"], ["98", "92"], ["103", "108"], ["106", "102"], ["95", "93"], ["105", "103"], ["107", "114"], ["114", "106"], ["108", "111"], ["111", "107"], ["19", "24"], ["20", "119"], ["22", "119"], ["27", "119"], ["30", "119"], ["30", "119"], ["30", "119"], ["25", "119"], ["37", "119"], ["40", "119"], ["39", "119"], ["37", "119"], ["37", "119"], ["46", "119"], ["44", "119"], ["44", "119"], ["52", "119"], ["55", "119"], ["55", "119"], ["55", "119"], ["46", "119"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["44", "52"], ["19", "52"], ["52", "55"], ["19", "55"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["63", "62"], ["63", "62"], ["19", "62"], ["71", "67"], ["71", "67"], ["52", "63"], ["19", "63"], ["72", "71"], ["72", "71"], ["77", "71"], ["77", "71"], ["74", "72"], ["19", "72"], ["74", "72"], ["72", "77"], ["19", "77"], ["63", "74"], ["19", "74"], ["84", "83"], ["84", "83"], ["19", "83"], ["92", "88"], ["92", "88"], ["63", "84"], ["19", "84"], ["93", "92"], ["93", "92"], ["98", "92"], ["98", "92"], ["106", "102"], ["106", "102"], ["95", "93"], ["19", "93"], ["95", "93"], ["93", "98"], ["19", "98"], ["107", "106"], ["107", "106"], ["114", "106"], ["114", "106"], ["84", "95"], ["19", "95"], ["108", "107"], ["108", "107"], ["111", "107"], ["111", "107"], ["111", "114"], ["19", "114"], ["84", "108"], ["19", "108"], ["108", "111"], ["19", "111"], ["52", "56"], ["52", "58"], ["52", "63"], ["52", "55"], ["52", "62"], ["62", "68"], ["62", "77"], ["62", "84"], ["62", "72"], ["62", "67"], ["62", "74"], ["62", "83"], ["62", "71"], ["62", "70"], ["83", "107"], ["83", "89"], ["83", "98"], ["83", "102"], ["83", "114"], ["83", "103"], ["83", "95"], ["83", "92"], ["83", "106"], ["83", "91"], ["83", "93"], ["83", "105"], ["83", "88"], ["83", "108"], ["83", "111"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] str = split(&quot; &quot;))<SUB>4</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "41": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "43": "<(LOCAL,long n: long)<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,long n = Long.parseLong(str[0]))<SUB>5</SUB>>", "47": "<(IDENTIFIER,Long,Long.parseLong(str[0]))<SUB>5</SUB>>", "49": "<(IDENTIFIER,str,Long.parseLong(str[0]))<SUB>5</SUB>>", "51": "<(CONTROL_STRUCTURE,if (n &lt; 3),if (n &lt; 3))<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,n &lt; 3)<SUB>6</SUB>>", "55": "<(println,System.out.println(n))<SUB>7</SUB>>", "57": "<(IDENTIFIER,System,System.out.println(n))<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,System.out.println(n))<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.modulo,n % 2)<SUB>8</SUB>>", "65": "<(LITERAL,2,n % 2)<SUB>8</SUB>>", "67": "<(println,System.out.println(n * (n - 1) * (n - 2)))<SUB>9</SUB>>", "69": "<(IDENTIFIER,System,System.out.println(n * (n - 1) * (n - 2)))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 2))<SUB>9</SUB>>", "73": "<(IDENTIFIER,n,n * (n - 1))<SUB>9</SUB>>", "75": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>9</SUB>>", "79": "<(LITERAL,2,n - 2)<SUB>9</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.notEquals,n % 3 != 0)<SUB>12</SUB>>", "85": "<(IDENTIFIER,n,n % 3)<SUB>12</SUB>>", "87": "<(LITERAL,0,n % 3 != 0)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "91": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "97": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "99": "<(IDENTIFIER,n,n - 3)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "105": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2))<SUB>15</SUB>>", "109": "<(IDENTIFIER,n,n - 1)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>15</SUB>>", "113": "<(LITERAL,2,n - 2)<SUB>15</SUB>>", "115": "<(IDENTIFIER,n,n - 3)<SUB>15</SUB>>", "117": "<(MODIFIER,PUBLIC)>", "119": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}