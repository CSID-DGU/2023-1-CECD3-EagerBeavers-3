{"edges": [["21", "23"], ["21", "127"], ["21", "128"], ["21", "129"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "33"], ["23", "34"], ["23", "38"], ["23", "122"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "43"], ["38", "46"], ["38", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "54"], ["48", "65"], ["48", "68"], ["48", "69"], ["48", "74"], ["48", "87"], ["48", "98"], ["48", "101"], ["48", "106"], ["48", "119"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "82"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "36"], ["34", "40"], ["122", "129"], ["26", "24"], ["30", "28"], ["36", "34"], ["40", "43"], ["43", "52"], ["43", "125"], ["46", "43"], ["123", "122"], ["50", "56"], ["65", "71"], ["69", "76"], ["98", "103"], ["101", "108"], ["119", "46"], ["125", "123"], ["52", "50"], ["55", "61"], ["55", "65"], ["71", "69"], ["75", "83"], ["75", "89"], ["88", "94"], ["88", "98"], ["103", "101"], ["107", "115"], ["107", "119"], ["56", "55"], ["61", "46"], ["76", "79"], ["79", "75"], ["83", "46"], ["89", "88"], ["94", "46"], ["108", "111"], ["111", "107"], ["115", "46"], ["21", "26"], ["22", "129"], ["24", "129"], ["27", "129"], ["28", "129"], ["31", "129"], ["36", "129"], ["34", "129"], ["34", "129"], ["40", "129"], ["43", "129"], ["43", "129"], ["43", "129"], ["122", "129"], ["122", "129"], ["122", "129"], ["52", "129"], ["50", "129"], ["50", "129"], ["56", "129"], ["55", "129"], ["55", "129"], ["65", "129"], ["71", "129"], ["69", "129"], ["69", "129"], ["75", "129"], ["79", "129"], ["79", "129"], ["75", "129"], ["75", "129"], ["89", "129"], ["88", "129"], ["88", "129"], ["98", "129"], ["103", "129"], ["101", "129"], ["101", "129"], ["107", "129"], ["111", "129"], ["111", "129"], ["107", "129"], ["107", "129"], ["119", "129"], ["115", "129"], ["94", "129"], ["83", "129"], ["61", "129"], ["46", "129"], ["21", "22"], ["21", "24"], ["21", "28"], ["36", "34"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "40"], ["31", "122"], ["119", "122"], ["115", "122"], ["94", "122"], ["83", "122"], ["61", "122"], ["21", "122"], ["27", "36"], ["21", "36"], ["40", "43"], ["46", "43"], ["21", "43"], ["34", "43"], ["43", "46"], ["21", "46"], ["52", "50"], ["21", "65"], ["71", "69"], ["71", "69"], ["21", "98"], ["103", "101"], ["103", "101"], ["56", "65"], ["89", "98"], ["31", "119"], ["115", "119"], ["94", "119"], ["83", "119"], ["61", "119"], ["21", "119"], ["36", "52"], ["21", "52"], ["56", "55"], ["56", "55"], ["21", "55"], ["79", "71"], ["111", "71"], ["21", "71"], ["65", "71"], ["76", "75"], ["76", "75"], ["79", "75"], ["79", "75"], ["89", "88"], ["89", "88"], ["21", "88"], ["79", "103"], ["21", "103"], ["98", "103"], ["108", "107"], ["108", "107"], ["111", "107"], ["111", "107"], ["50", "56"], ["21", "56"], ["31", "61"], ["119", "61"], ["115", "61"], ["94", "61"], ["83", "61"], ["21", "61"], ["71", "76"], ["21", "76"], ["69", "76"], ["76", "79"], ["21", "79"], ["76", "79"], ["31", "83"], ["119", "83"], ["115", "83"], ["94", "83"], ["61", "83"], ["21", "83"], ["71", "89"], ["21", "89"], ["31", "94"], ["119", "94"], ["115", "94"], ["83", "94"], ["61", "94"], ["21", "94"], ["103", "108"], ["21", "108"], ["101", "108"], ["108", "111"], ["21", "111"], ["108", "111"], ["31", "115"], ["119", "115"], ["94", "115"], ["83", "115"], ["61", "115"], ["21", "115"], ["43", "52"], ["43", "46"], ["43", "56"], ["43", "50"], ["43", "43"], ["43", "55"], ["55", "75"], ["55", "69"], ["55", "76"], ["55", "65"], ["55", "79"], ["55", "61"], ["55", "71"], ["75", "89"], ["75", "83"], ["75", "88"], ["88", "107"], ["88", "94"], ["88", "98"], ["88", "103"], ["88", "101"], ["88", "108"], ["88", "111"], ["107", "115"], ["107", "119"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scan())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scan())<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scan())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,StringBuilder ans = new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "5": "<(IDENTIFIER,ans,new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "33": "<(LOCAL,int test: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,test,int test = scanInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,input,scanInt())<SUB>4</SUB>>", "39": "<(LOCAL,int tt: int)<SUB>9</SUB>>", "41": "<(IDENTIFIER,tt,int tt = 1)<SUB>9</SUB>>", "43": "<(&lt;operator&gt;.lessEqualsThan,tt &lt;= test)<SUB>9</SUB>>", "45": "<(IDENTIFIER,test,tt &lt;= test)<SUB>9</SUB>>", "47": "<(IDENTIFIER,tt,tt++)<SUB>9</SUB>>", "49": "<(LOCAL,int n: int)<SUB>10</SUB>>", "51": "<(IDENTIFIER,n,int n = scanInt())<SUB>10</SUB>>", "53": "<(IDENTIFIER,input,scanInt())<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.equals,n % 2 == 1)<SUB>11</SUB>>", "57": "<(IDENTIFIER,n,n % 2)<SUB>11</SUB>>", "59": "<(LITERAL,1,n % 2 == 1)<SUB>11</SUB>>", "61": "<(append,ans.append(&quot;NO\\n&quot;))<SUB>12</SUB>>", "63": "<(LITERAL,&quot;NO\\n&quot;,ans.append(&quot;NO\\n&quot;))<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.assignmentDivision,n /= 2)<SUB>15</SUB>>", "67": "<(LITERAL,2,n /= 2)<SUB>15</SUB>>", "69": "<(&lt;operator&gt;.assignment,double sq = Math.sqrt(n))<SUB>16</SUB>>", "71": "<(sqrt,Math.sqrt(n))<SUB>16</SUB>>", "73": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>16</SUB>>", "75": "<(&lt;operator&gt;.equals,Math.floor(sq) == Math.ceil(sq))<SUB>17</SUB>>", "77": "<(IDENTIFIER,Math,Math.floor(sq))<SUB>17</SUB>>", "79": "<(ceil,Math.ceil(sq))<SUB>17</SUB>>", "81": "<(IDENTIFIER,sq,Math.ceil(sq))<SUB>17</SUB>>", "83": "<(append,ans.append(&quot;YES\\n&quot;))<SUB>18</SUB>>", "85": "<(LITERAL,&quot;YES\\n&quot;,ans.append(&quot;YES\\n&quot;))<SUB>18</SUB>>", "87": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>21</SUB>>", "89": "<(&lt;operator&gt;.modulo,n % 2)<SUB>21</SUB>>", "91": "<(LITERAL,2,n % 2)<SUB>21</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "95": "<(IDENTIFIER,ans,ans.append(&quot;NO\\n&quot;))<SUB>22</SUB>>", "97": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>23</SUB>>", "99": "<(IDENTIFIER,n,n /= 2)<SUB>25</SUB>>", "101": "<(&lt;operator&gt;.assignment,sq = Math.sqrt(n))<SUB>26</SUB>>", "103": "<(sqrt,Math.sqrt(n))<SUB>26</SUB>>", "105": "<(IDENTIFIER,n,Math.sqrt(n))<SUB>26</SUB>>", "107": "<(&lt;operator&gt;.equals,Math.floor(sq) == Math.ceil(sq))<SUB>27</SUB>>", "109": "<(IDENTIFIER,Math,Math.floor(sq))<SUB>27</SUB>>", "111": "<(ceil,Math.ceil(sq))<SUB>27</SUB>>", "113": "<(IDENTIFIER,sq,Math.ceil(sq))<SUB>27</SUB>>", "115": "<(append,ans.append(&quot;YES\\n&quot;))<SUB>28</SUB>>", "117": "<(LITERAL,&quot;YES\\n&quot;,ans.append(&quot;YES\\n&quot;))<SUB>28</SUB>>", "119": "<(append,ans.append(&quot;NO\\n&quot;))<SUB>31</SUB>>", "121": "<(LITERAL,&quot;NO\\n&quot;,ans.append(&quot;NO\\n&quot;))<SUB>31</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "125": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "127": "<(MODIFIER,PUBLIC)>", "129": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}