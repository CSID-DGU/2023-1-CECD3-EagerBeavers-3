{"edges": [["23", "25"], ["23", "335"], ["23", "336"], ["23", "337"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "52"], ["25", "90"], ["25", "91"], ["25", "97"], ["25", "98"], ["25", "104"], ["25", "8"], ["25", "113"], ["25", "116"], ["25", "117"], ["25", "124"], ["25", "274"], ["25", "275"], ["25", "278"], ["25", "296"], ["25", "322"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "6"], ["62", "63"], ["62", "66"], ["62", "69"], ["63", "64"], ["63", "65"], ["66", "5"], ["66", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "115"], ["116", "7"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "134"], ["128", "141"], ["128", "269"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "149"], ["141", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["151", "161"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["161", "162"], ["161", "163"], ["161", "168"], ["161", "171"], ["161", "173"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["173", "183"], ["173", "200"], ["173", "217"], ["173", "243"], ["174", "175"], ["174", "182"], ["175", "176"], ["175", "181"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "191"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "208"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "226"], ["218", "219"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "234"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["243", "244"], ["243", "252"], ["244", "245"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "260"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "268"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["278", "283"], ["278", "286"], ["278", "288"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["286", "287"], ["288", "289"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["296", "301"], ["296", "306"], ["296", "308"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["306", "307"], ["308", "309"], ["309", "310"], ["309", "313"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "321"], ["314", "315"], ["314", "320"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["322", "323"], ["322", "326"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "334"], ["327", "328"], ["327", "329"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "333"], ["26", "33"], ["29", "45"], ["41", "49"], ["47", "54"], ["91", "101"], ["98", "108"], ["104", "115"], ["113", "116"], ["116", "120"], ["117", "126"], ["275", "280"], ["322", "337"], ["28", "26"], ["43", "41"], ["49", "47"], ["54", "57"], ["57", "65"], ["57", "94"], ["60", "57"], ["93", "91"], ["100", "98"], ["105", "104"], ["115", "113"], ["119", "117"], ["125", "132"], ["125", "275"], ["280", "283"], ["283", "293"], ["283", "298"], ["286", "283"], ["298", "303"], ["301", "312"], ["301", "325"], ["306", "303"], ["323", "331"], ["326", "322"], ["31", "38"], ["34", "29"], ["45", "43"], ["63", "67"], ["66", "71"], ["94", "93"], ["101", "100"], ["107", "105"], ["120", "119"], ["126", "125"], ["130", "136"], ["269", "126"], ["289", "286"], ["303", "301"], ["309", "306"], ["325", "323"], ["327", "326"], ["33", "31"], ["36", "34"], ["65", "63"], ["67", "66"], ["71", "74"], ["74", "82"], ["74", "60"], ["77", "74"], ["108", "107"], ["132", "130"], ["135", "126"], ["135", "143"], ["143", "146"], ["146", "156"], ["146", "270"], ["149", "146"], ["270", "269"], ["291", "289"], ["310", "317"], ["313", "309"], ["329", "327"], ["38", "36"], ["80", "77"], ["136", "135"], ["293", "291"], ["312", "310"], ["314", "313"], ["331", "329"], ["81", "88"], ["86", "80"], ["153", "149"], ["153", "165"], ["163", "168"], ["168", "178"], ["168", "149"], ["171", "168"], ["315", "314"], ["82", "81"], ["88", "86"], ["154", "153"], ["165", "163"], ["183", "205"], ["200", "223"], ["317", "315"], ["156", "154"], ["175", "171"], ["175", "188"], ["184", "192"], ["191", "183"], ["201", "209"], ["208", "200"], ["218", "231"], ["218", "249"], ["244", "257"], ["244", "171"], ["176", "175"], ["186", "184"], ["192", "196"], ["195", "191"], ["203", "201"], ["209", "213"], ["212", "208"], ["219", "218"], ["227", "239"], ["234", "249"], ["245", "244"], ["253", "265"], ["260", "171"], ["178", "176"], ["188", "186"], ["196", "195"], ["205", "203"], ["213", "212"], ["221", "219"], ["229", "227"], ["235", "234"], ["247", "245"], ["255", "253"], ["261", "260"], ["223", "221"], ["231", "229"], ["237", "235"], ["249", "247"], ["257", "255"], ["263", "261"], ["239", "237"], ["265", "263"], ["23", "28"], ["24", "337"], ["26", "337"], ["31", "337"], ["34", "337"], ["34", "337"], ["34", "337"], ["29", "337"], ["43", "337"], ["45", "337"], ["43", "337"], ["41", "337"], ["41", "337"], ["47", "337"], ["47", "337"], ["47", "337"], ["91", "337"], ["91", "337"], ["91", "337"], ["98", "337"], ["98", "337"], ["98", "337"], ["104", "337"], ["104", "337"], ["113", "337"], ["116", "337"], ["119", "337"], ["117", "337"], ["117", "337"], ["126", "337"], ["125", "337"], ["125", "337"], ["275", "337"], ["283", "337"], ["298", "337"], ["301", "337"], ["301", "337"], ["322", "337"], ["331", "337"], ["329", "337"], ["326", "337"], ["326", "337"], ["322", "337"], ["322", "337"], ["314", "337"], ["313", "337"], ["309", "337"], ["309", "337"], ["306", "337"], ["289", "337"], ["289", "337"], ["286", "337"], ["130", "337"], ["130", "337"], ["136", "337"], ["136", "337"], ["135", "337"], ["135", "337"], ["269", "337"], ["269", "337"], ["154", "337"], ["154", "337"], ["153", "337"], ["153", "337"], ["163", "337"], ["163", "337"], ["168", "337"], ["168", "337"], ["176", "337"], ["176", "337"], ["175", "337"], ["175", "337"], ["183", "337"], ["191", "337"], ["183", "337"], ["183", "337"], ["200", "337"], ["208", "337"], ["200", "337"], ["200", "337"], ["221", "337"], ["218", "337"], ["218", "337"], ["227", "337"], ["237", "337"], ["234", "337"], ["234", "337"], ["247", "337"], ["247", "337"], ["244", "337"], ["244", "337"], ["253", "337"], ["263", "337"], ["263", "337"], ["260", "337"], ["260", "337"], ["171", "337"], ["149", "337"], ["63", "337"], ["66", "337"], ["67", "337"], ["66", "337"], ["66", "337"], ["71", "337"], ["74", "337"], ["74", "337"], ["60", "337"], ["80", "337"], ["88", "337"], ["86", "337"], ["80", "337"], ["80", "337"], ["77", "337"], ["86", "337"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["49", "47"], ["93", "91"], ["100", "98"], ["23", "104"], ["23", "113"], ["23", "275"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["23", "54"], ["113", "116"], ["23", "116"], ["116", "117"], ["23", "117"], ["119", "117"], ["119", "117"], ["23", "280"], ["23", "298"], ["309", "322"], ["326", "322"], ["326", "322"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["41", "49"], ["23", "49"], ["54", "57"], ["60", "57"], ["23", "57"], ["49", "57"], ["74", "57"], ["57", "60"], ["23", "60"], ["23", "63"], ["94", "93"], ["94", "93"], ["101", "100"], ["101", "100"], ["120", "119"], ["120", "119"], ["23", "119"], ["126", "125"], ["132", "130"], ["23", "269"], ["280", "283"], ["286", "283"], ["23", "283"], ["120", "283"], ["146", "283"], ["293", "286"], ["23", "286"], ["98", "289"], ["298", "301"], ["306", "301"], ["23", "301"], ["303", "301"], ["303", "301"], ["317", "306"], ["23", "306"], ["98", "326"], ["275", "326"], ["314", "326"], ["289", "326"], ["23", "326"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["63", "66"], ["23", "66"], ["67", "66"], ["23", "71"], ["23", "94"], ["57", "94"], ["23", "101"], ["94", "101"], ["108", "107"], ["108", "107"], ["23", "107"], ["23", "120"], ["108", "120"], ["117", "126"], ["132", "126"], ["227", "126"], ["253", "126"], ["23", "126"], ["23", "143"], ["275", "289"], ["23", "289"], ["283", "303"], ["23", "303"], ["314", "309"], ["314", "309"], ["23", "309"], ["45", "67"], ["23", "67"], ["71", "74"], ["77", "74"], ["23", "74"], ["57", "74"], ["74", "77"], ["23", "77"], ["86", "80"], ["86", "80"], ["23", "108"], ["101", "108"], ["126", "132"], ["23", "132"], ["136", "135"], ["136", "135"], ["23", "135"], ["143", "146"], ["149", "146"], ["23", "146"], ["120", "146"], ["168", "146"], ["156", "149"], ["223", "149"], ["239", "149"], ["23", "149"], ["314", "313"], ["314", "313"], ["23", "313"], ["23", "329"], ["331", "329"], ["331", "329"], ["43", "136"], ["23", "136"], ["130", "136"], ["156", "163"], ["23", "163"], ["23", "293"], ["283", "293"], ["98", "314"], ["275", "314"], ["289", "314"], ["23", "314"], ["303", "331"], ["23", "331"], ["23", "86"], ["88", "86"], ["154", "153"], ["154", "153"], ["23", "153"], ["163", "168"], ["171", "168"], ["23", "168"], ["146", "168"], ["178", "171"], ["249", "171"], ["265", "171"], ["23", "171"], ["191", "183"], ["191", "183"], ["208", "200"], ["208", "200"], ["66", "88"], ["23", "88"], ["136", "154"], ["176", "154"], ["247", "154"], ["263", "154"], ["23", "154"], ["156", "154"], ["156", "154"], ["156", "165"], ["23", "165"], ["98", "183"], ["98", "200"], ["23", "317"], ["301", "317"], ["23", "156"], ["146", "156"], ["176", "175"], ["176", "175"], ["23", "175"], ["98", "191"], ["269", "191"], ["208", "191"], ["98", "208"], ["191", "208"], ["80", "208"], ["91", "218"], ["234", "218"], ["23", "234"], ["91", "244"], ["260", "244"], ["23", "260"], ["154", "176"], ["247", "176"], ["263", "176"], ["23", "176"], ["178", "176"], ["178", "176"], ["176", "186"], ["23", "186"], ["188", "186"], ["188", "186"], ["186", "203"], ["23", "203"], ["205", "203"], ["205", "203"], ["132", "227"], ["253", "227"], ["23", "227"], ["229", "227"], ["229", "227"], ["132", "253"], ["227", "253"], ["23", "253"], ["255", "253"], ["255", "253"], ["23", "178"], ["168", "178"], ["23", "188"], ["223", "188"], ["239", "188"], ["156", "188"], ["23", "205"], ["178", "205"], ["203", "221"], ["23", "221"], ["223", "221"], ["223", "221"], ["221", "229"], ["23", "229"], ["231", "229"], ["231", "229"], ["221", "247"], ["237", "247"], ["23", "247"], ["249", "247"], ["249", "247"], ["247", "255"], ["23", "255"], ["257", "255"], ["257", "255"], ["23", "223"], ["188", "223"], ["23", "231"], ["223", "231"], ["229", "237"], ["23", "237"], ["239", "237"], ["239", "237"], ["23", "249"], ["205", "249"], ["23", "257"], ["249", "257"], ["255", "263"], ["23", "263"], ["265", "263"], ["265", "263"], ["23", "239"], ["231", "239"], ["23", "265"], ["257", "265"], ["57", "60"], ["57", "74"], ["57", "66"], ["57", "65"], ["57", "71"], ["57", "57"], ["57", "67"], ["57", "63"], ["125", "136"], ["125", "135"], ["125", "132"], ["125", "130"], ["125", "126"], ["125", "125"], ["283", "283"], ["283", "291"], ["283", "289"], ["283", "293"], ["283", "286"], ["301", "317"], ["301", "306"], ["301", "315"], ["301", "310"], ["301", "309"], ["301", "301"], ["301", "314"], ["301", "313"], ["301", "303"], ["301", "312"], ["74", "74"], ["74", "80"], ["74", "88"], ["74", "86"], ["74", "77"], ["74", "81"], ["74", "82"], ["135", "146"], ["135", "269"], ["135", "270"], ["135", "143"], ["146", "154"], ["146", "146"], ["146", "149"], ["146", "153"], ["146", "156"], ["153", "163"], ["153", "168"], ["153", "165"], ["168", "168"], ["168", "176"], ["168", "178"], ["168", "171"], ["168", "175"], ["175", "188"], ["175", "192"], ["175", "209"], ["175", "196"], ["175", "213"], ["175", "247"], ["175", "208"], ["175", "195"], ["175", "184"], ["175", "186"], ["175", "249"], ["175", "201"], ["175", "200"], ["175", "244"], ["175", "245"], ["175", "191"], ["175", "223"], ["175", "212"], ["175", "221"], ["175", "205"], ["175", "183"], ["175", "203"], ["175", "218"], ["175", "219"], ["218", "237"], ["218", "229"], ["218", "227"], ["218", "231"], ["218", "239"], ["218", "235"], ["218", "234"], ["244", "260"], ["244", "253"], ["244", "257"], ["244", "261"], ["244", "255"], ["244", "265"], ["244", "263"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "45": "<(readLine,readLine())<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,grid = new double[n][n])<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.alloc,new double[n][n])>", "51": "<(IDENTIFIER,n,new double[n][n])<SUB>4</SUB>>", "53": "<(LOCAL,int i: int)<SUB>5</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>6</SUB>>", "64": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "66": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "67": "<(readLine,readLine())<SUB>6</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "73": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "75": "<(IDENTIFIER,j,j &lt; n)<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,grid[i][j])<SUB>8</SUB>>", "83": "<(IDENTIFIER,grid,grid[i][j] = parseDouble(st.nextToken()))<SUB>8</SUB>>", "85": "<(IDENTIFIER,j,grid[i][j] = parseDouble(st.nextToken()))<SUB>8</SUB>>", "87": "<(IDENTIFIER,Double,parseDouble(st.nextToken()))<SUB>8</SUB>>", "89": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "91": "<(&lt;operator&gt;.assignment,boolean[] seen = new boolean[1 &lt;&lt; n])<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.alloc,new boolean[1 &lt;&lt; n])>", "95": "<(LITERAL,1,1 &lt;&lt; n)<SUB>11</SUB>>", "97": "<(LOCAL,double[] prob: double[])<SUB>12</SUB>>", "99": "<(IDENTIFIER,prob,double[] prob = new double[1 &lt;&lt; n])<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "103": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,prob[(1 &lt;&lt; n) - 1])<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "109": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "111": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "8": "<(LOCAL,LinkedList&lt;Integer&gt; q: ANY)<SUB>14</SUB>>", "114": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;Integer&gt;())<SUB>14</SUB>>", "116": "<(&lt;init&gt;,new LinkedList&lt;Integer&gt;())<SUB>14</SUB>>", "117": "<(add,add((1 &lt;&lt; n) - 1))<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>15</SUB>>", "121": "<(LITERAL,1,1 &lt;&lt; n)<SUB>15</SUB>>", "123": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>16</SUB>>", "127": "<(IDENTIFIER,q,isEmpty())<SUB>16</SUB>>", "129": "<(LOCAL,int curr: int)<SUB>17</SUB>>", "131": "<(IDENTIFIER,curr,int curr = removeFirst())<SUB>17</SUB>>", "133": "<(IDENTIFIER,q,removeFirst())<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.equals,Integer.bitCount(curr) == 1)<SUB>18</SUB>>", "137": "<(IDENTIFIER,Integer,Integer.bitCount(curr))<SUB>18</SUB>>", "139": "<(LITERAL,1,Integer.bitCount(curr) == 1)<SUB>18</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "145": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "147": "<(IDENTIFIER,i,i &lt; n)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.equals,(curr &amp; (1 &lt;&lt; i)) == 0)<SUB>21</SUB>>", "155": "<(IDENTIFIER,curr,curr &amp; (1 &lt;&lt; i))<SUB>21</SUB>>", "157": "<(LITERAL,1,1 &lt;&lt; i)<SUB>21</SUB>>", "159": "<(LITERAL,0,(curr &amp; (1 &lt;&lt; i)) == 0)<SUB>21</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>23</SUB>>", "165": "<(&lt;operator&gt;.addition,i + 1)<SUB>23</SUB>>", "167": "<(LITERAL,1,i + 1)<SUB>23</SUB>>", "169": "<(IDENTIFIER,j,j &lt; n)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.equals,(curr &amp; (1 &lt;&lt; j)) == 0)<SUB>24</SUB>>", "177": "<(IDENTIFIER,curr,curr &amp; (1 &lt;&lt; j))<SUB>24</SUB>>", "179": "<(LITERAL,1,1 &lt;&lt; j)<SUB>24</SUB>>", "181": "<(LITERAL,0,(curr &amp; (1 &lt;&lt; j)) == 0)<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.assignmentPlus,prob[curr - (1 &lt;&lt; i)] += prob[curr] * grid[j][i])<SUB>26</SUB>>", "185": "<(IDENTIFIER,prob,prob[curr - (1 &lt;&lt; i)] += prob[curr] * grid[j][i])<SUB>26</SUB>>", "187": "<(IDENTIFIER,curr,curr - (1 &lt;&lt; i))<SUB>26</SUB>>", "189": "<(LITERAL,1,1 &lt;&lt; i)<SUB>26</SUB>>", "191": "<(&lt;operator&gt;.multiplication,prob[curr] * grid[j][i])<SUB>26</SUB>>", "193": "<(IDENTIFIER,prob,prob[curr] * grid[j][i])<SUB>26</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,grid[j][i])<SUB>26</SUB>>", "197": "<(IDENTIFIER,grid,prob[curr] * grid[j][i])<SUB>26</SUB>>", "199": "<(IDENTIFIER,i,prob[curr] * grid[j][i])<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,prob[curr - (1 &lt;&lt; j)])<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; j))<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>27</SUB>>", "207": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,prob[curr])<SUB>27</SUB>>", "211": "<(IDENTIFIER,curr,prob[curr] * grid[i][j])<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>27</SUB>>", "215": "<(IDENTIFIER,i,prob[curr] * grid[i][j])<SUB>27</SUB>>", "217": "<(CONTROL_STRUCTURE,if (!seen[curr - (1 &lt;&lt; i)]),if (!seen[curr - (1 &lt;&lt; i)]))<SUB>28</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,seen[curr - (1 &lt;&lt; i)])<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; i))<SUB>28</SUB>>", "223": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>28</SUB>>", "225": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>28</SUB>>", "227": "<(addLast,addLast(curr - (1 &lt;&lt; i)))<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; i))<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>29</SUB>>", "233": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,seen[curr - (1 &lt;&lt; i)])<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; i))<SUB>30</SUB>>", "239": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>30</SUB>>", "241": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>30</SUB>>", "243": "<(CONTROL_STRUCTURE,if (!seen[curr - (1 &lt;&lt; j)]),if (!seen[curr - (1 &lt;&lt; j)]))<SUB>32</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,seen[curr - (1 &lt;&lt; j)])<SUB>32</SUB>>", "247": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; j))<SUB>32</SUB>>", "249": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>32</SUB>>", "251": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>32</SUB>>", "253": "<(addLast,addLast(curr - (1 &lt;&lt; j)))<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; j))<SUB>33</SUB>>", "257": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>33</SUB>>", "259": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>33</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,seen[curr - (1 &lt;&lt; j)])<SUB>34</SUB>>", "263": "<(&lt;operator&gt;.subtraction,curr - (1 &lt;&lt; j))<SUB>34</SUB>>", "265": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>34</SUB>>", "267": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>34</SUB>>", "269": "<(&lt;operator&gt;.assignment,prob[curr] = 0)<SUB>38</SUB>>", "271": "<(IDENTIFIER,prob,prob[curr] = 0)<SUB>38</SUB>>", "273": "<(LITERAL,0,prob[curr] = 0)<SUB>38</SUB>>", "275": "<(&lt;operator&gt;.assignment,double sum = 0)<SUB>40</SUB>>", "277": "<(LITERAL,0,double sum = 0)<SUB>40</SUB>>", "279": "<(LOCAL,int i: int)<SUB>41</SUB>>", "281": "<(IDENTIFIER,i,int i = 0)<SUB>41</SUB>>", "283": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>41</SUB>>", "285": "<(IDENTIFIER,n,i &lt; n)<SUB>41</SUB>>", "287": "<(IDENTIFIER,i,i++)<SUB>41</SUB>>", "289": "<(&lt;operator&gt;.assignmentPlus,sum += prob[1 &lt;&lt; i])<SUB>42</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,prob[1 &lt;&lt; i])<SUB>42</SUB>>", "293": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>42</SUB>>", "295": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>42</SUB>>", "297": "<(LOCAL,int i: int)<SUB>44</SUB>>", "299": "<(IDENTIFIER,i,int i = 0)<SUB>44</SUB>>", "301": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>44</SUB>>", "303": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>44</SUB>>", "305": "<(LITERAL,1,n - 1)<SUB>44</SUB>>", "307": "<(IDENTIFIER,i,i++)<SUB>44</SUB>>", "309": "<(print,System.out.print(prob[1 &lt;&lt; i] / sum + &quot; &quot;))<SUB>45</SUB>>", "311": "<(IDENTIFIER,System,System.out.print(prob[1 &lt;&lt; i] / sum + &quot; &quot;))<SUB>45</SUB>>", "313": "<(&lt;operator&gt;.addition,prob[1 &lt;&lt; i] / sum + &quot; &quot;)<SUB>45</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,prob[1 &lt;&lt; i])<SUB>45</SUB>>", "317": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>45</SUB>>", "319": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>45</SUB>>", "321": "<(LITERAL,&quot; &quot;,prob[1 &lt;&lt; i] / sum + &quot; &quot;)<SUB>45</SUB>>", "323": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "325": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,prob[1 &lt;&lt; (n - 1)])<SUB>47</SUB>>", "329": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n - 1))<SUB>47</SUB>>", "331": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>47</SUB>>", "333": "<(LITERAL,1,n - 1)<SUB>47</SUB>>", "335": "<(MODIFIER,PUBLIC)>", "337": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}