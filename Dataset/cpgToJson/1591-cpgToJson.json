{"edges": [["19", "21"], ["19", "237"], ["19", "238"], ["19", "239"], ["21", "22"], ["21", "25"], ["21", "4"], ["21", "44"], ["21", "47"], ["21", "65"], ["21", "66"], ["21", "70"], ["21", "71"], ["21", "77"], ["21", "78"], ["21", "84"], ["21", "123"], ["21", "130"], ["21", "131"], ["21", "132"], ["21", "135"], ["21", "138"], ["21", "183"], ["21", "235"], ["22", "23"], ["22", "24"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "31"], ["27", "43"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "37"], ["33", "42"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["44", "45"], ["44", "46"], ["47", "3"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "64"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "58"], ["54", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "106"], ["94", "114"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["99", "105"], ["100", "101"], ["100", "102"], ["103", "104"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["123", "126"], ["123", "127"], ["127", "128"], ["127", "129"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["149", "150"], ["149", "159"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["159", "160"], ["160", "161"], ["160", "164"], ["160", "167"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["168", "175"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "187"], ["183", "192"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["193", "194"], ["193", "197"], ["193", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["203", "204"], ["204", "205"], ["204", "224"], ["204", "229"], ["205", "206"], ["205", "215"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["22", "30"], ["25", "46"], ["44", "51"], ["47", "68"], ["66", "74"], ["71", "81"], ["78", "86"], ["123", "132"], ["132", "135"], ["135", "140"], ["235", "239"], ["24", "22"], ["46", "44"], ["68", "66"], ["73", "71"], ["80", "78"], ["86", "89"], ["89", "96"], ["89", "127"], ["92", "89"], ["127", "123"], ["140", "143"], ["143", "151"], ["143", "184"], ["146", "143"], ["184", "190"], ["184", "194"], ["187", "235"], ["28", "36"], ["31", "25"], ["49", "57"], ["52", "47"], ["74", "73"], ["81", "80"], ["95", "108"], ["106", "115"], ["114", "92"], ["188", "187"], ["30", "28"], ["51", "49"], ["96", "102"], ["107", "112"], ["112", "106"], ["115", "119"], ["118", "114"], ["150", "161"], ["150", "146"], ["190", "188"], ["194", "200"], ["194", "207"], ["197", "235"], ["34", "41"], ["37", "31"], ["55", "62"], ["58", "52"], ["100", "103"], ["103", "95"], ["108", "111"], ["111", "107"], ["119", "122"], ["122", "118"], ["151", "155"], ["154", "150"], ["198", "197"], ["36", "34"], ["39", "37"], ["57", "55"], ["60", "58"], ["102", "100"], ["155", "158"], ["158", "154"], ["161", "164"], ["161", "169"], ["164", "146"], ["200", "198"], ["41", "39"], ["62", "60"], ["205", "227"], ["205", "233"], ["224", "235"], ["169", "172"], ["169", "180"], ["172", "146"], ["206", "205"], ["206", "216"], ["215", "205"], ["225", "224"], ["230", "235"], ["207", "211"], ["210", "206"], ["216", "220"], ["219", "215"], ["227", "225"], ["231", "230"], ["177", "182"], ["182", "239"], ["211", "214"], ["214", "210"], ["220", "223"], ["223", "219"], ["233", "231"], ["178", "177"], ["180", "178"], ["19", "24"], ["182", "239"], ["20", "239"], ["22", "239"], ["25", "239"], ["31", "239"], ["37", "239"], ["37", "239"], ["37", "239"], ["31", "239"], ["25", "239"], ["44", "239"], ["47", "239"], ["52", "239"], ["55", "239"], ["58", "239"], ["58", "239"], ["52", "239"], ["47", "239"], ["68", "239"], ["66", "239"], ["66", "239"], ["71", "239"], ["71", "239"], ["78", "239"], ["78", "239"], ["78", "239"], ["123", "239"], ["123", "239"], ["123", "239"], ["132", "239"], ["135", "239"], ["140", "239"], ["143", "239"], ["143", "239"], ["143", "239"], ["150", "239"], ["150", "239"], ["150", "239"], ["161", "239"], ["161", "239"], ["169", "239"], ["169", "239"], ["177", "239"], ["172", "239"], ["164", "239"], ["146", "239"], ["95", "239"], ["100", "239"], ["103", "239"], ["103", "239"], ["95", "239"], ["112", "239"], ["106", "239"], ["106", "239"], ["114", "239"], ["92", "239"], ["123", "239"], ["19", "20"], ["19", "22"], ["19", "44"], ["68", "66"], ["73", "71"], ["80", "78"], ["19", "132"], ["19", "135"], ["22", "25"], ["19", "25"], ["34", "25"], ["31", "25"], ["44", "47"], ["19", "47"], ["55", "47"], ["52", "47"], ["19", "86"], ["19", "123"], ["71", "123"], ["95", "123"], ["89", "123"], ["19", "140"], ["47", "235"], ["19", "235"], ["19", "28"], ["19", "43"], ["19", "49"], ["19", "64"], ["19", "68"], ["66", "73"], ["19", "73"], ["19", "80"], ["66", "80"], ["86", "89"], ["92", "89"], ["19", "89"], ["66", "89"], ["89", "92"], ["19", "92"], ["100", "95"], ["103", "95"], ["19", "95"], ["112", "106"], ["106", "114"], ["89", "127"], ["19", "127"], ["140", "143"], ["146", "143"], ["19", "143"], ["89", "143"], ["143", "146"], ["19", "146"], ["132", "184"], ["161", "184"], ["164", "184"], ["19", "184"], ["58", "187"], ["19", "187"], ["28", "31"], ["19", "31"], ["34", "31"], ["37", "31"], ["49", "52"], ["19", "52"], ["55", "52"], ["58", "52"], ["66", "74"], ["19", "74"], ["19", "81"], ["66", "81"], ["19", "34"], ["19", "42"], ["19", "55"], ["19", "63"], ["19", "100"], ["19", "105"], ["68", "112"], ["19", "112"], ["78", "150"], ["114", "150"], ["135", "194"], ["172", "194"], ["19", "194"], ["58", "197"], ["19", "197"], ["34", "37"], ["19", "37"], ["55", "58"], ["19", "58"], ["100", "103"], ["19", "103"], ["143", "164"], ["19", "164"], ["132", "161"], ["164", "161"], ["19", "161"], ["143", "172"], ["19", "172"], ["206", "205"], ["206", "205"], ["215", "205"], ["215", "205"], ["58", "224"], ["19", "224"], ["135", "169"], ["172", "169"], ["19", "169"], ["78", "206"], ["78", "215"], ["58", "230"], ["19", "230"], ["19", "182"], ["58", "177"], ["19", "177"], ["89", "107"], ["89", "115"], ["89", "96"], ["89", "102"], ["89", "114"], ["89", "103"], ["89", "119"], ["89", "95"], ["89", "92"], ["89", "112"], ["89", "118"], ["89", "100"], ["89", "108"], ["89", "111"], ["89", "89"], ["89", "122"], ["89", "106"], ["143", "154"], ["143", "150"], ["143", "151"], ["143", "184"], ["143", "155"], ["143", "158"], ["143", "235"], ["184", "188"], ["184", "187"], ["184", "190"], ["184", "194"], ["150", "146"], ["150", "161"], ["150", "143"], ["194", "214"], ["194", "197"], ["194", "198"], ["194", "206"], ["194", "207"], ["194", "205"], ["194", "210"], ["194", "200"], ["194", "211"], ["161", "146"], ["161", "169"], ["161", "164"], ["161", "143"], ["205", "230"], ["205", "225"], ["205", "231"], ["205", "224"], ["205", "233"], ["205", "227"], ["169", "146"], ["169", "178"], ["169", "182"], ["169", "180"], ["169", "143"], ["169", "177"], ["169", "172"], ["206", "215"], ["206", "223"], ["206", "220"], ["206", "216"], ["206", "219"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,st,st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "25": "<(&lt;init&gt;,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "29": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "31": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "41": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "44": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "3": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj4,new BufferedWriter(new OutputStreamWriter(System.out)))>", "55": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "57": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "59": "<(IDENTIFIER,$obj3,new OutputStreamWriter(System.out))>", "61": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "63": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "65": "<(LOCAL,int n: int)<SUB>4</SUB>>", "67": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "69": "<(IDENTIFIER,this,nextInt())<SUB>4</SUB>>", "71": "<(&lt;operator&gt;.assignment,ANY a = new Sort[n + 1])<SUB>5</SUB>>", "73": "<(&lt;operator&gt;.alloc,new Sort[n + 1])>", "75": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "77": "<(LOCAL,int[] b: int[])<SUB>6</SUB>>", "79": "<(IDENTIFIER,b,int[] b = new int[n + 1])<SUB>6</SUB>>", "81": "<(&lt;operator&gt;.addition,n + 1)<SUB>6</SUB>>", "83": "<(LITERAL,1,n + 1)<SUB>6</SUB>>", "85": "<(LOCAL,int i: int)<SUB>7</SUB>>", "87": "<(IDENTIFIER,i,int i = 1)<SUB>7</SUB>>", "89": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>7</SUB>>", "91": "<(IDENTIFIER,n,i &lt;= n)<SUB>7</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "95": "<(&lt;operator&gt;.assignment,a[i] = new Sort())<SUB>8</SUB>>", "97": "<(IDENTIFIER,a,a[i] = new Sort())<SUB>8</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "101": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "103": "<(&lt;init&gt;,new Sort())<SUB>8</SUB>>", "105": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "107": "<(&lt;operator&gt;.fieldAccess,a[i].val)<SUB>9</SUB>>", "109": "<(IDENTIFIER,a,a[i].val = nextInt())<SUB>9</SUB>>", "111": "<(FIELD_IDENTIFIER,val,val)<SUB>9</SUB>>", "113": "<(IDENTIFIER,this,nextInt())<SUB>9</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>10</SUB>>", "117": "<(IDENTIFIER,i,b[i] = a[i].val)<SUB>10</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>10</SUB>>", "121": "<(IDENTIFIER,i,b[i] = a[i].val)<SUB>10</SUB>>", "123": "<(sort,sort(a, 1, n + 1))<SUB>12</SUB>>", "125": "<(IDENTIFIER,a,sort(a, 1, n + 1))<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.addition,n + 1)<SUB>12</SUB>>", "129": "<(LITERAL,1,n + 1)<SUB>12</SUB>>", "131": "<(LOCAL,int k2: int)<SUB>13</SUB>>", "133": "<(IDENTIFIER,k1,int k1 = 0)<SUB>13</SUB>>", "135": "<(&lt;operator&gt;.assignment,int k2 = 0)<SUB>13</SUB>>", "137": "<(LITERAL,0,int k2 = 0)<SUB>13</SUB>>", "139": "<(LOCAL,int i: int)<SUB>14</SUB>>", "141": "<(IDENTIFIER,i,int i = 1)<SUB>14</SUB>>", "143": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>14</SUB>>", "145": "<(IDENTIFIER,n,i &lt;= n)<SUB>14</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "149": "<(CONTROL_STRUCTURE,if (b[i] != a[i].val),if (b[i] != a[i].val))<SUB>15</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>15</SUB>>", "153": "<(IDENTIFIER,i,b[i] != a[i].val)<SUB>15</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "157": "<(IDENTIFIER,i,b[i] != a[i].val)<SUB>15</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "161": "<(&lt;operator&gt;.equals,k1 == 0)<SUB>16</SUB>>", "163": "<(LITERAL,0,k1 == 0)<SUB>16</SUB>>", "165": "<(IDENTIFIER,k1,k1 = i)<SUB>17</SUB>>", "167": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.equals,k2 == 0)<SUB>18</SUB>>", "171": "<(LITERAL,0,k2 == 0)<SUB>18</SUB>>", "173": "<(IDENTIFIER,k2,k2 = i)<SUB>19</SUB>>", "175": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "177": "<(println,System.out.println(&quot;NO&quot;))<SUB>21</SUB>>", "179": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>21</SUB>>", "181": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>21</SUB>>", "183": "<(CONTROL_STRUCTURE,if (k1 == 0),if (k1 == 0))<SUB>26</SUB>>", "185": "<(IDENTIFIER,k1,k1 == 0)<SUB>26</SUB>>", "187": "<(println,System.out.println(&quot;YES&quot;))<SUB>27</SUB>>", "189": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>27</SUB>>", "191": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>27</SUB>>", "193": "<(CONTROL_STRUCTURE,if (k2 == 0),if (k2 == 0))<SUB>28</SUB>>", "195": "<(IDENTIFIER,k2,k2 == 0)<SUB>28</SUB>>", "197": "<(println,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "199": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "201": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>29</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "205": "<(&lt;operator&gt;.logicalAnd,b[k1] == a[k2].val &amp;&amp; b[k2] == a[k1].val)<SUB>31</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,b[k1])<SUB>31</SUB>>", "209": "<(IDENTIFIER,k1,b[k1] == a[k2].val)<SUB>31</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,a[k2])<SUB>31</SUB>>", "213": "<(IDENTIFIER,k2,b[k1] == a[k2].val)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.equals,b[k2] == a[k1].val)<SUB>31</SUB>>", "217": "<(IDENTIFIER,b,b[k2] == a[k1].val)<SUB>31</SUB>>", "219": "<(&lt;operator&gt;.fieldAccess,a[k1].val)<SUB>31</SUB>>", "221": "<(IDENTIFIER,a,b[k2] == a[k1].val)<SUB>31</SUB>>", "223": "<(FIELD_IDENTIFIER,val,val)<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "227": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "229": "<(CONTROL_STRUCTURE,else,else)<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "233": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "235": "<(close,close())<SUB>36</SUB>>", "237": "<(MODIFIER,PUBLIC)>", "239": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}