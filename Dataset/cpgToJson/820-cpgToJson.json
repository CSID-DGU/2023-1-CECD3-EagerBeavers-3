{"edges": [["19", "21"], ["19", "115"], ["19", "116"], ["19", "117"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "64"], ["21", "65"], ["21", "66"], ["21", "67"], ["21", "71"], ["21", "75"], ["21", "78"], ["21", "100"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["29", "34"], ["29", "39"], ["29", "41"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["39", "40"], ["41", "42"], ["42", "43"], ["42", "47"], ["43", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["48", "49"], ["48", "50"], ["48", "55"], ["48", "58"], ["48", "61"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "95"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "104"], ["100", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["22", "28"], ["25", "31"], ["67", "73"], ["71", "75"], ["75", "80"], ["24", "22"], ["26", "25"], ["31", "35"], ["34", "44"], ["34", "69"], ["39", "35"], ["69", "67"], ["73", "71"], ["80", "83"], ["83", "90"], ["83", "101"], ["86", "83"], ["101", "107"], ["101", "113"], ["104", "117"], ["28", "26"], ["35", "34"], ["105", "104"], ["110", "117"], ["43", "52"], ["43", "39"], ["90", "93"], ["90", "96"], ["93", "96"], ["96", "101"], ["96", "86"], ["107", "105"], ["111", "110"], ["44", "43"], ["113", "111"], ["50", "55"], ["55", "61"], ["55", "39"], ["58", "55"], ["61", "58"], ["52", "50"], ["19", "24"], ["20", "117"], ["22", "117"], ["25", "117"], ["25", "117"], ["34", "117"], ["34", "117"], ["34", "117"], ["67", "117"], ["73", "117"], ["71", "117"], ["71", "117"], ["75", "117"], ["80", "117"], ["83", "117"], ["83", "117"], ["83", "117"], ["90", "117"], ["90", "117"], ["93", "117"], ["86", "117"], ["101", "117"], ["101", "117"], ["101", "117"], ["104", "117"], ["44", "117"], ["43", "117"], ["43", "117"], ["50", "117"], ["50", "117"], ["55", "117"], ["55", "117"], ["39", "117"], ["61", "117"], ["61", "117"], ["58", "117"], ["90", "117"], ["19", "20"], ["19", "22"], ["69", "67"], ["73", "71"], ["19", "75"], ["22", "25"], ["19", "25"], ["19", "31"], ["19", "80"], ["35", "34"], ["55", "34"], ["19", "34"], ["44", "39"], ["19", "39"], ["25", "69"], ["19", "69"], ["69", "73"], ["19", "73"], ["80", "83"], ["86", "83"], ["19", "83"], ["67", "83"], ["90", "86"], ["19", "86"], ["75", "101"], ["96", "101"], ["19", "101"], ["71", "101"], ["96", "101"], ["19", "104"], ["31", "35"], ["39", "35"], ["19", "35"], ["19", "110"], ["44", "43"], ["44", "43"], ["19", "90"], ["83", "90"], ["75", "93"], ["96", "93"], ["19", "93"], ["75", "96"], ["93", "96"], ["19", "96"], ["71", "96"], ["61", "44"], ["19", "44"], ["35", "44"], ["44", "50"], ["19", "50"], ["19", "58"], ["44", "58"], ["50", "55"], ["58", "55"], ["19", "55"], ["34", "55"], ["61", "58"], ["44", "61"], ["19", "61"], ["55", "61"], ["44", "52"], ["19", "52"], ["34", "34"], ["34", "44"], ["34", "35"], ["34", "43"], ["34", "39"], ["83", "96"], ["83", "90"], ["101", "107"], ["101", "113"], ["101", "104"], ["101", "105"], ["101", "110"], ["101", "111"], ["43", "52"], ["43", "50"], ["43", "55"], ["90", "93"], ["96", "83"], ["96", "86"], ["55", "58"], ["55", "61"], ["55", "55"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY lee = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,lee,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i * i &lt;= MAX); i++),for (int i = 2; Some(i * i &lt;= MAX); i++))<SUB>5</SUB>>", "31": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>5</SUB>>", "33": "<(LITERAL,2,int i = 2)<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.multiplication,i * i)<SUB>5</SUB>>", "37": "<(IDENTIFIER,i,i * i)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.logicalNot,!P.get(i))<SUB>7</SUB>>", "45": "<(IDENTIFIER,P,get(i))<SUB>7</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "49": "<(LOCAL,int j: int)<SUB>9</SUB>>", "51": "<(IDENTIFIER,j,int j = i + i)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,i + i)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= MAX)<SUB>9</SUB>>", "57": "<(IDENTIFIER,MAX,j &lt;= MAX)<SUB>9</SUB>>", "59": "<(IDENTIFIER,j,j += i)<SUB>9</SUB>>", "61": "<(set,set(j))<SUB>10</SUB>>", "63": "<(IDENTIFIER,j,set(j))<SUB>10</SUB>>", "65": "<(LOCAL,int k: int)<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>16</SUB>>", "69": "<(nextInt,nextInt())<SUB>16</SUB>>", "71": "<(&lt;operator&gt;.assignment,k = nextInt())<SUB>17</SUB>>", "73": "<(nextInt,nextInt())<SUB>17</SUB>>", "75": "<(&lt;operator&gt;.assignment,c = 0)<SUB>19</SUB>>", "77": "<(LITERAL,0,c = 0)<SUB>19</SUB>>", "79": "<(LOCAL,int i: int)<SUB>21</SUB>>", "81": "<(IDENTIFIER,i,int i = 2)<SUB>21</SUB>>", "83": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>21</SUB>>", "85": "<(IDENTIFIER,n,i &lt;= n)<SUB>21</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "89": "<(CONTROL_STRUCTURE,if (Noldbach(i)),if (Noldbach(i)))<SUB>23</SUB>>", "91": "<(IDENTIFIER,this,Noldbach(i))<SUB>23</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,c++)<SUB>24</SUB>>", "95": "<(CONTROL_STRUCTURE,if (c == k),if (c == k))<SUB>26</SUB>>", "97": "<(IDENTIFIER,c,c == k)<SUB>26</SUB>>", "99": "<(CONTROL_STRUCTURE,break;,break;)<SUB>27</SUB>>", "101": "<(&lt;operator&gt;.equals,c == k)<SUB>30</SUB>>", "103": "<(IDENTIFIER,k,c == k)<SUB>30</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>31</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>31</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>33</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "113": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}