{"edges": [["21", "22"], ["21", "23"], ["21", "164"], ["21", "165"], ["21", "166"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "28"], ["23", "29"], ["23", "33"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "44"], ["23", "45"], ["23", "50"], ["23", "51"], ["23", "6"], ["23", "55"], ["23", "58"], ["23", "59"], ["23", "159"], ["24", "25"], ["24", "26"], ["27", "3"], ["29", "30"], ["29", "31"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["58", "5"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "77"], ["69", "78"], ["69", "81"], ["69", "141"], ["69", "144"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "106"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "125"], ["112", "126"], ["112", "135"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["137", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "152"], ["148", "158"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["152", "157"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["24", "27"], ["27", "31"], ["29", "36"], ["34", "41"], ["39", "47"], ["45", "53"], ["51", "57"], ["55", "58"], ["58", "61"], ["159", "166"], ["26", "24"], ["31", "29"], ["36", "34"], ["41", "39"], ["47", "45"], ["53", "51"], ["57", "55"], ["61", "64"], ["64", "71"], ["64", "162"], ["67", "64"], ["160", "159"], ["78", "83"], ["141", "145"], ["144", "67"], ["162", "160"], ["71", "74"], ["71", "78"], ["74", "78"], ["83", "86"], ["86", "98"], ["86", "141"], ["89", "86"], ["145", "151"], ["93", "109"], ["149", "154"], ["152", "144"], ["95", "93"], ["107", "119"], ["107", "89"], ["151", "149"], ["154", "152"], ["97", "95"], ["109", "107"], ["114", "130"], ["126", "137"], ["135", "89"], ["98", "102"], ["101", "97"], ["116", "114"], ["128", "126"], ["137", "135"], ["102", "105"], ["105", "101"], ["118", "116"], ["129", "128"], ["119", "122"], ["122", "118"], ["130", "133"], ["133", "129"], ["21", "26"], ["22", "166"], ["24", "166"], ["27", "166"], ["29", "166"], ["34", "166"], ["34", "166"], ["39", "166"], ["41", "166"], ["39", "166"], ["39", "166"], ["45", "166"], ["47", "166"], ["45", "166"], ["45", "166"], ["51", "166"], ["51", "166"], ["51", "166"], ["55", "166"], ["58", "166"], ["61", "166"], ["64", "166"], ["64", "166"], ["64", "166"], ["159", "166"], ["159", "166"], ["159", "166"], ["71", "166"], ["74", "166"], ["78", "166"], ["78", "166"], ["83", "166"], ["86", "166"], ["86", "166"], ["141", "166"], ["144", "166"], ["149", "166"], ["152", "166"], ["152", "166"], ["152", "166"], ["152", "166"], ["144", "166"], ["67", "166"], ["95", "166"], ["95", "166"], ["93", "166"], ["93", "166"], ["107", "166"], ["109", "166"], ["107", "166"], ["107", "166"], ["119", "166"], ["118", "166"], ["122", "166"], ["118", "166"], ["116", "166"], ["114", "166"], ["114", "166"], ["128", "166"], ["126", "166"], ["126", "166"], ["137", "166"], ["137", "166"], ["135", "166"], ["135", "166"], ["89", "166"], ["21", "22"], ["21", "24"], ["31", "29"], ["36", "34"], ["41", "39"], ["41", "39"], ["47", "45"], ["47", "45"], ["53", "51"], ["21", "55"], ["24", "27"], ["21", "27"], ["55", "58"], ["21", "58"], ["21", "61"], ["58", "159"], ["141", "159"], ["21", "159"], ["27", "31"], ["21", "31"], ["31", "36"], ["21", "36"], ["21", "41"], ["34", "41"], ["36", "47"], ["21", "47"], ["29", "47"], ["47", "53"], ["21", "53"], ["61", "64"], ["67", "64"], ["21", "64"], ["53", "64"], ["86", "67"], ["21", "67"], ["41", "78"], ["109", "78"], ["21", "78"], ["149", "144"], ["152", "144"], ["21", "144"], ["21", "83"], ["58", "141"], ["74", "141"], ["21", "141"], ["78", "141"], ["135", "141"], ["64", "71"], ["21", "71"], ["58", "74"], ["141", "74"], ["21", "74"], ["83", "86"], ["89", "86"], ["21", "86"], ["71", "86"], ["86", "89"], ["21", "89"], ["95", "93"], ["95", "93"], ["21", "149"], ["21", "158"], ["149", "152"], ["21", "152"], ["45", "152"], ["97", "152"], ["141", "152"], ["137", "95"], ["21", "95"], ["97", "95"], ["97", "95"], ["93", "107"], ["21", "107"], ["109", "107"], ["109", "107"], ["116", "114"], ["116", "114"], ["114", "126"], ["21", "126"], ["137", "135"], ["137", "135"], ["137", "135"], ["45", "97"], ["152", "97"], ["21", "109"], ["41", "109"], ["95", "116"], ["21", "116"], ["118", "116"], ["118", "116"], ["114", "128"], ["21", "128"], ["116", "137"], ["21", "137"], ["78", "137"], ["135", "137"], ["126", "137"], ["119", "118"], ["122", "118"], ["39", "119"], ["21", "119"], ["107", "122"], ["21", "122"], ["64", "141"], ["64", "64"], ["64", "154"], ["64", "145"], ["64", "149"], ["64", "67"], ["64", "151"], ["64", "144"], ["64", "83"], ["64", "152"], ["64", "71"], ["64", "78"], ["64", "86"], ["71", "74"], ["86", "107"], ["86", "89"], ["86", "98"], ["86", "102"], ["86", "95"], ["86", "97"], ["86", "93"], ["86", "101"], ["86", "105"], ["86", "109"], ["86", "86"], ["107", "116"], ["107", "122"], ["107", "128"], ["107", "114"], ["107", "119"], ["107", "129"], ["107", "126"], ["107", "137"], ["107", "130"], ["107", "118"], ["107", "135"], ["107", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "31": "<(nextInt,nextInt())<SUB>4</SUB>>", "33": "<(LOCAL,long r: long)<SUB>5</SUB>>", "35": "<(IDENTIFIER,r,long r = nextInt())<SUB>5</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,double d = 2 * r)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>6</SUB>>", "43": "<(IDENTIFIER,r,2 * r)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,long[] xs = readLongArray(n))<SUB>7</SUB>>", "47": "<(readLongArray,readLongArray(n))<SUB>7</SUB>>", "49": "<(IDENTIFIER,n,readLongArray(n))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,ANY points = new P[n])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.alloc,new P[n])>", "6": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>9</SUB>>", "56": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>9</SUB>>", "58": "<(&lt;init&gt;,new StringBuilder())<SUB>9</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>11</SUB>>", "73": "<(LITERAL,0,i &gt; 0)<SUB>11</SUB>>", "75": "<(IDENTIFIER,sb,sb.append(' '))<SUB>11</SUB>>", "77": "<(LOCAL,double y: double)<SUB>12</SUB>>", "79": "<(IDENTIFIER,y,double y = r)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "87": "<(IDENTIFIER,j,j &lt; i)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,long diff = abs(xs[i] - points[j].x))<SUB>14</SUB>>", "95": "<(abs,abs(xs[i] - points[j].x))<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.subtraction,xs[i] - points[j].x)<SUB>14</SUB>>", "99": "<(IDENTIFIER,xs,xs[i] - points[j].x)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.fieldAccess,points[j].x)<SUB>14</SUB>>", "103": "<(IDENTIFIER,points,xs[i] - points[j].x)<SUB>14</SUB>>", "105": "<(FIELD_IDENTIFIER,x,x)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessEqualsThan,diff &lt;= 2 * r)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>15</SUB>>", "111": "<(IDENTIFIER,r,2 * r)<SUB>15</SUB>>", "113": "<(LOCAL,double dy: double)<SUB>16</SUB>>", "115": "<(IDENTIFIER,dy,double dy = Math.sqrt(d * d - diff * diff))<SUB>16</SUB>>", "117": "<(IDENTIFIER,Math,Math.sqrt(d * d - diff * diff))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.multiplication,d * d)<SUB>16</SUB>>", "121": "<(IDENTIFIER,d,d * d)<SUB>16</SUB>>", "123": "<(IDENTIFIER,diff,diff * diff)<SUB>16</SUB>>", "125": "<(LOCAL,double testY: double)<SUB>17</SUB>>", "127": "<(IDENTIFIER,testY,double testY = points[j].y + dy)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,points[j].y)<SUB>17</SUB>>", "131": "<(IDENTIFIER,points,points[j].y + dy)<SUB>17</SUB>>", "133": "<(FIELD_IDENTIFIER,y,y)<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.assignment,y = Math.max(y, testY))<SUB>18</SUB>>", "137": "<(max,Math.max(y, testY))<SUB>18</SUB>>", "139": "<(IDENTIFIER,y,Math.max(y, testY))<SUB>18</SUB>>", "141": "<(append,sb.append(y))<SUB>22</SUB>>", "143": "<(IDENTIFIER,y,sb.append(y))<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,points[i])<SUB>23</SUB>>", "147": "<(IDENTIFIER,i,points[i] = new P(xs[i], y))<SUB>23</SUB>>", "149": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "151": "<(&lt;operator&gt;.alloc,new P(xs[i], y))<SUB>23</SUB>>", "153": "<(IDENTIFIER,$obj2,new P(xs[i], y))>", "155": "<(IDENTIFIER,xs,new P(xs[i], y))<SUB>23</SUB>>", "157": "<(IDENTIFIER,y,new P(xs[i], y))<SUB>23</SUB>>", "159": "<(println,System.out.println(sb))<SUB>25</SUB>>", "161": "<(IDENTIFIER,System,System.out.println(sb))<SUB>25</SUB>>", "163": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>25</SUB>>", "165": "<(MODIFIER,STATIC)>"}}