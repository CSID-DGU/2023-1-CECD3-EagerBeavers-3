{"edges": [["32", "17"], ["32", "33"], ["32", "200"], ["32", "201"], ["32", "202"], ["33", "4"], ["33", "34"], ["33", "37"], ["33", "6"], ["33", "38"], ["33", "41"], ["33", "45"], ["34", "35"], ["34", "36"], ["37", "3"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["46", "8"], ["46", "47"], ["46", "51"], ["46", "13"], ["46", "88"], ["46", "90"], ["46", "91"], ["46", "95"], ["46", "96"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "11"], ["51", "52"], ["51", "55"], ["51", "60"], ["51", "62"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "76"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "9"], ["91", "92"], ["91", "93"], ["93", "94"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "108"], ["106", "112"], ["106", "113"], ["106", "117"], ["106", "118"], ["106", "121"], ["106", "122"], ["106", "127"], ["106", "197"], ["108", "109"], ["108", "110"], ["110", "111"], ["113", "114"], ["113", "115"], ["115", "116"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "132"], ["127", "135"], ["127", "137"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "146"], ["137", "155"], ["137", "158"], ["137", "173"], ["137", "190"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "181"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "189"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["34", "37"], ["37", "40"], ["38", "44"], ["41", "49"], ["36", "34"], ["40", "38"], ["42", "41"], ["44", "42"], ["47", "52"], ["88", "93"], ["91", "98"], ["49", "47"], ["52", "59"], ["55", "64"], ["55", "9"], ["60", "59"], ["9", "88"], ["93", "91"], ["98", "101"], ["101", "202"], ["101", "110"], ["104", "101"], ["57", "55"], ["63", "77"], ["108", "115"], ["113", "118"], ["118", "126"], ["122", "129"], ["197", "104"], ["59", "57"], ["64", "73"], ["67", "63"], ["77", "82"], ["77", "60"], ["110", "108"], ["115", "113"], ["124", "122"], ["129", "132"], ["132", "142"], ["132", "197"], ["135", "132"], ["69", "67"], ["81", "60"], ["126", "124"], ["139", "147"], ["155", "163"], ["158", "177"], ["190", "135"], ["71", "69"], ["82", "87"], ["85", "81"], ["141", "139"], ["147", "151"], ["147", "155"], ["160", "158"], ["174", "186"], ["174", "194"], ["192", "190"], ["73", "71"], ["87", "85"], ["142", "141"], ["151", "135"], ["162", "160"], ["175", "174"], ["182", "135"], ["194", "192"], ["163", "170"], ["166", "162"], ["177", "175"], ["184", "182"], ["168", "166"], ["186", "184"], ["170", "168"], ["32", "36"], ["17", "202"], ["34", "202"], ["37", "202"], ["38", "202"], ["41", "202"], ["41", "202"], ["41", "202"], ["47", "202"], ["47", "202"], ["47", "202"], ["52", "202"], ["55", "202"], ["55", "202"], ["55", "202"], ["88", "202"], ["88", "202"], ["93", "202"], ["91", "202"], ["91", "202"], ["98", "202"], ["101", "202"], ["101", "202"], ["101", "202"], ["104", "202"], ["60", "202"], ["32", "17"], ["32", "34"], ["32", "38"], ["34", "37"], ["32", "37"], ["38", "41"], ["32", "41"], ["49", "47"], ["32", "88"], ["93", "91"], ["32", "52"], ["32", "98"], ["32", "49"], ["52", "55"], ["60", "55"], ["32", "55"], ["47", "55"], ["77", "60"], ["32", "60"], ["32", "63"], ["69", "63"], ["69", "63"], ["37", "93"], ["32", "93"], ["98", "101"], ["104", "101"], ["32", "101"], ["91", "101"], ["101", "104"], ["32", "104"], ["110", "108"], ["115", "113"], ["32", "118"], ["177", "122"], ["32", "129"], ["41", "197"], ["182", "197"], ["151", "197"], ["32", "197"], ["32", "67"], ["69", "67"], ["69", "67"], ["73", "77"], ["32", "77"], ["93", "110"], ["115", "110"], ["32", "110"], ["110", "115"], ["32", "115"], ["129", "132"], ["135", "132"], ["32", "132"], ["108", "132"], ["170", "132"], ["186", "132"], ["142", "135"], ["186", "135"], ["32", "135"], ["170", "135"], ["141", "139"], ["141", "139"], ["147", "155"], ["32", "155"], ["160", "158"], ["160", "158"], ["192", "190"], ["192", "190"], ["32", "69"], ["47", "69"], ["147", "155"], ["163", "190"], ["32", "190"], ["142", "141"], ["142", "141"], ["32", "141"], ["139", "147"], ["32", "147"], ["113", "147"], ["177", "147"], ["122", "160"], ["175", "160"], ["32", "160"], ["162", "160"], ["162", "160"], ["175", "174"], ["175", "174"], ["32", "174"], ["32", "192"], ["170", "192"], ["55", "73"], ["32", "73"], ["32", "142"], ["132", "142"], ["41", "151"], ["197", "151"], ["182", "151"], ["32", "151"], ["163", "162"], ["163", "162"], ["166", "162"], ["166", "162"], ["158", "175"], ["32", "175"], ["177", "175"], ["177", "175"], ["41", "182"], ["197", "182"], ["151", "182"], ["32", "182"], ["186", "182"], ["186", "182"], ["170", "194"], ["32", "194"], ["177", "163"], ["32", "163"], ["118", "163"], ["190", "163"], ["163", "166"], ["32", "166"], ["168", "166"], ["168", "166"], ["166", "177"], ["32", "177"], ["155", "177"], ["32", "184"], ["186", "184"], ["186", "184"], ["88", "168"], ["32", "168"], ["170", "168"], ["170", "168"], ["170", "186"], ["32", "186"], ["170", "186"], ["132", "170"], ["32", "170"], ["142", "170"], ["55", "60"], ["55", "73"], ["55", "77"], ["55", "64"], ["55", "57"], ["55", "69"], ["55", "67"], ["55", "59"], ["55", "71"], ["55", "63"], ["55", "55"], ["101", "115"], ["101", "113"], ["101", "132"], ["101", "104"], ["101", "197"], ["101", "129"], ["101", "101"], ["101", "118"], ["101", "108"], ["101", "122"], ["101", "126"], ["101", "110"], ["101", "124"], ["77", "81"], ["77", "85"], ["77", "87"], ["77", "82"], ["132", "132"], ["132", "139"], ["132", "141"], ["132", "142"], ["132", "147"], ["132", "135"], ["147", "163"], ["147", "151"], ["147", "162"], ["147", "168"], ["147", "170"], ["147", "174"], ["147", "155"], ["147", "158"], ["147", "160"], ["147", "166"], ["147", "177"], ["147", "175"], ["174", "192"], ["174", "190"], ["174", "184"], ["174", "194"], ["174", "182"], ["174", "186"]], "features": {"32": "<(METHOD,main)<SUB>1</SUB>>", "33": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "34": "<(&lt;operator&gt;.assignment,ANY input = new StandardInput())<SUB>2</SUB>>", "36": "<(&lt;operator&gt;.alloc,new StandardInput())<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new StandardInput())<SUB>2</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY writer = new PrintWriter(System.out))<SUB>2</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>2</SUB>>", "5": "<(IDENTIFIER,writer,new PrintWriter(System.out))<SUB>2</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>2</SUB>>", "45": "<(CONTROL_STRUCTURE,try,try)<SUB>2</SUB>>", "8": "<(LOCAL,long[] s: long[])<SUB>3</SUB>>", "48": "<(IDENTIFIER,s,long[] s = new long[40])<SUB>3</SUB>>", "50": "<(LITERAL,40,new long[40])<SUB>3</SUB>>", "11": "<(LOCAL,int i: int)<SUB>4</SUB>>", "53": "<(IDENTIFIER,i,int i = 1)<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; s.length)<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,s.length)<SUB>4</SUB>>", "59": "<(FIELD_IDENTIFIER,length,length)<SUB>4</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>4</SUB>>", "63": "<(&lt;operator&gt;.assignment,s[i] = 1 + 4 * s[i - 1])<SUB>5</SUB>>", "65": "<(IDENTIFIER,s,s[i] = 1 + 4 * s[i - 1])<SUB>5</SUB>>", "67": "<(&lt;operator&gt;.addition,1 + 4 * s[i - 1])<SUB>5</SUB>>", "69": "<(&lt;operator&gt;.multiplication,4 * s[i - 1])<SUB>5</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,s[i - 1])<SUB>5</SUB>>", "73": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>5</SUB>>", "75": "<(LITERAL,1,i - 1)<SUB>5</SUB>>", "77": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 32)<SUB>6</SUB>>", "79": "<(LITERAL,32,i &gt;= 32)<SUB>6</SUB>>", "81": "<(&lt;operator&gt;.assignment,s[i] = Long.MAX_VALUE)<SUB>7</SUB>>", "83": "<(IDENTIFIER,s,s[i] = Long.MAX_VALUE)<SUB>7</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,Long.MAX_VALUE)<SUB>7</SUB>>", "87": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>7</SUB>>", "88": "<(&lt;operator&gt;.assignment,ANY getS = Main.lambda$0:&lt;unresolvedSignature&gt;(1))<SUB>10</SUB>>", "9": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(1),ANY getS = Main.lambda$0:&lt;unresolvedSignature&gt;(1))>", "91": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>11</SUB>>", "93": "<(nextInt,nextInt())<SUB>11</SUB>>", "95": "<(JUMP_TARGET,testCase)>", "97": "<(LOCAL,int tt: int)<SUB>13</SUB>>", "99": "<(IDENTIFIER,tt,int tt = 0)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.lessThan,tt &lt; t)<SUB>13</SUB>>", "103": "<(IDENTIFIER,t,tt &lt; t)<SUB>13</SUB>>", "105": "<(IDENTIFIER,tt,tt++)<SUB>13</SUB>>", "107": "<(LOCAL,int n: int)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,int n = nextInt())<SUB>14</SUB>>", "111": "<(IDENTIFIER,input,nextInt())<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>15</SUB>>", "115": "<(nextLong,nextLong())<SUB>15</SUB>>", "117": "<(LOCAL,long kk: long)<SUB>16</SUB>>", "119": "<(IDENTIFIER,kk,long kk = 1)<SUB>16</SUB>>", "121": "<(LOCAL,BigInteger maxDivisions: ANY)<SUB>17</SUB>>", "123": "<(IDENTIFIER,maxDivisions,ANY maxDivisions = BigInteger.ZERO)<SUB>17</SUB>>", "125": "<(IDENTIFIER,BigInteger,ANY maxDivisions = BigInteger.ZERO)<SUB>17</SUB>>", "127": "<(CONTROL_STRUCTURE,for (int division = 1; Some(division &lt;= n); division++),for (int division = 1; Some(division &lt;= n); division++))<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.assignment,int division = 1)<SUB>18</SUB>>", "131": "<(LITERAL,1,int division = 1)<SUB>18</SUB>>", "133": "<(IDENTIFIER,division,division &lt;= n)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,division++)<SUB>18</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,long needToDivide = (1L &lt;&lt; division) - 1)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.subtraction,(1L &lt;&lt; division) - 1)<SUB>19</SUB>>", "143": "<(LITERAL,1L,1L &lt;&lt; division)<SUB>19</SUB>>", "145": "<(LITERAL,1,(1L &lt;&lt; division) - 1)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,needToDivide &gt; k)<SUB>20</SUB>>", "149": "<(IDENTIFIER,k,needToDivide &gt; k)<SUB>20</SUB>>", "151": "<(println,println(&quot;NO&quot;))<SUB>21</SUB>>", "153": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.assignmentMinus,k -= needToDivide)<SUB>24</SUB>>", "157": "<(IDENTIFIER,needToDivide,k -= needToDivide)<SUB>24</SUB>>", "159": "<(IDENTIFIER,maxDivisions,maxDivisions = add(BigInteger.valueOf(kk).multiply(BigInteger.valueOf(getS.apply(n - division)))))<SUB>25</SUB>>", "161": "<(IDENTIFIER,maxDivisions,add(BigInteger.valueOf(kk).multiply(BigInteger.valueOf(getS.apply(n - division)))))<SUB>25</SUB>>", "163": "<(valueOf,valueOf(kk))<SUB>25</SUB>>", "165": "<(IDENTIFIER,kk,valueOf(kk))<SUB>25</SUB>>", "167": "<(IDENTIFIER,BigInteger,valueOf(getS.apply(n - division)))<SUB>25</SUB>>", "169": "<(IDENTIFIER,getS,apply(n - division))<SUB>25</SUB>>", "171": "<(IDENTIFIER,n,n - division)<SUB>25</SUB>>", "173": "<(CONTROL_STRUCTURE,if (maxDivisions.compareTo(BigInteger.valueOf(k)) &gt;= 0),if (maxDivisions.compareTo(BigInteger.valueOf(k)) &gt;= 0))<SUB>26</SUB>>", "175": "<(compareTo,compareTo(BigInteger.valueOf(k)))<SUB>26</SUB>>", "177": "<(valueOf,valueOf(k))<SUB>26</SUB>>", "179": "<(IDENTIFIER,k,valueOf(k))<SUB>26</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "183": "<(IDENTIFIER,writer,println(&quot;YES &quot; + (n - division)))<SUB>27</SUB>>", "185": "<(LITERAL,&quot;YES &quot;,&quot;YES &quot; + (n - division))<SUB>27</SUB>>", "187": "<(IDENTIFIER,n,n - division)<SUB>27</SUB>>", "189": "<(CONTROL_STRUCTURE,continue testCase;,continue testCase;)<SUB>28</SUB>>", "191": "<(IDENTIFIER,kk,kk += 1L &lt;&lt; division + 1)<SUB>30</SUB>>", "193": "<(LITERAL,1L,1L &lt;&lt; division + 1)<SUB>30</SUB>>", "195": "<(IDENTIFIER,division,division + 1)<SUB>30</SUB>>", "197": "<(println,println(&quot;NO&quot;))<SUB>32</SUB>>", "199": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>32</SUB>>", "201": "<(MODIFIER,STATIC)>"}}