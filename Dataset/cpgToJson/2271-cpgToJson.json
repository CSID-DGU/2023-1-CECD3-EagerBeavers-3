{"edges": [["17", "18"], ["17", "19"], ["17", "210"], ["17", "211"], ["17", "212"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "40"], ["19", "41"], ["19", "48"], ["19", "49"], ["19", "53"], ["19", "54"], ["19", "63"], ["19", "64"], ["19", "70"], ["19", "75"], ["19", "182"], ["19", "183"], ["19", "186"], ["19", "207"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "94"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "93"], ["91", "92"], ["94", "95"], ["94", "102"], ["94", "129"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "111"], ["103", "113"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "122"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["130", "131"], ["130", "138"], ["130", "174"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "167"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "166"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["174", "175"], ["175", "176"], ["175", "181"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "194"], ["186", "196"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["207", "208"], ["207", "209"], ["20", "28"], ["23", "39"], ["35", "45"], ["41", "51"], ["49", "57"], ["54", "67"], ["64", "71"], ["70", "77"], ["183", "188"], ["207", "212"], ["22", "20"], ["37", "35"], ["43", "41"], ["51", "49"], ["56", "54"], ["66", "64"], ["71", "70"], ["77", "80"], ["80", "87"], ["80", "183"], ["83", "80"], ["188", "191"], ["191", "202"], ["191", "207"], ["194", "191"], ["196", "194"], ["26", "33"], ["29", "23"], ["39", "37"], ["44", "43"], ["57", "60"], ["60", "56"], ["67", "66"], ["86", "98"], ["198", "196"], ["28", "26"], ["31", "29"], ["45", "44"], ["87", "91"], ["90", "86"], ["95", "105"], ["95", "134"], ["199", "198"], ["33", "31"], ["91", "90"], ["96", "95"], ["201", "199"], ["98", "96"], ["105", "108"], ["108", "116"], ["108", "83"], ["111", "108"], ["131", "140"], ["131", "177"], ["202", "201"], ["114", "111"], ["132", "131"], ["140", "145"], ["175", "83"], ["115", "125"], ["122", "114"], ["134", "132"], ["145", "148"], ["148", "162"], ["148", "83"], ["151", "148"], ["176", "175"], ["116", "119"], ["119", "115"], ["123", "122"], ["154", "169"], ["167", "151"], ["177", "176"], ["125", "123"], ["156", "154"], ["168", "167"], ["157", "156"], ["169", "168"], ["159", "157"], ["160", "159"], ["162", "160"], ["17", "22"], ["18", "212"], ["20", "212"], ["23", "212"], ["26", "212"], ["29", "212"], ["29", "212"], ["29", "212"], ["23", "212"], ["35", "212"], ["35", "212"], ["41", "212"], ["43", "212"], ["41", "212"], ["41", "212"], ["51", "212"], ["49", "212"], ["49", "212"], ["54", "212"], ["54", "212"], ["54", "212"], ["64", "212"], ["66", "212"], ["64", "212"], ["64", "212"], ["70", "212"], ["70", "212"], ["77", "212"], ["80", "212"], ["80", "212"], ["183", "212"], ["188", "212"], ["191", "212"], ["191", "212"], ["191", "212"], ["207", "212"], ["207", "212"], ["207", "212"], ["199", "212"], ["198", "212"], ["198", "212"], ["196", "212"], ["196", "212"], ["194", "212"], ["86", "212"], ["91", "212"], ["90", "212"], ["86", "212"], ["86", "212"], ["95", "212"], ["95", "212"], ["131", "212"], ["131", "212"], ["175", "212"], ["175", "212"], ["140", "212"], ["140", "212"], ["145", "212"], ["148", "212"], ["157", "212"], ["156", "212"], ["156", "212"], ["154", "212"], ["154", "212"], ["167", "212"], ["167", "212"], ["167", "212"], ["151", "212"], ["108", "212"], ["83", "212"], ["114", "212"], ["114", "212"], ["114", "212"], ["111", "212"], ["17", "18"], ["17", "20"], ["17", "41"], ["51", "49"], ["56", "54"], ["66", "64"], ["17", "70"], ["17", "183"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "77"], ["17", "188"], ["198", "196"], ["198", "196"], ["35", "207"], ["17", "207"], ["183", "207"], ["196", "207"], ["17", "26"], ["17", "34"], ["17", "43"], ["17", "51"], ["49", "56"], ["17", "56"], ["17", "66"], ["49", "66"], ["77", "80"], ["83", "80"], ["17", "80"], ["49", "80"], ["134", "83"], ["162", "83"], ["108", "83"], ["17", "83"], ["90", "86"], ["90", "86"], ["188", "191"], ["194", "191"], ["17", "191"], ["80", "191"], ["191", "194"], ["17", "194"], ["26", "29"], ["17", "29"], ["17", "44"], ["49", "57"], ["17", "57"], ["17", "60"], ["49", "60"], ["17", "67"], ["49", "67"], ["183", "198"], ["196", "198"], ["17", "198"], ["41", "198"], ["156", "198"], ["91", "90"], ["17", "90"], ["64", "95"], ["131", "95"], ["17", "95"], ["183", "199"], ["196", "199"], ["17", "199"], ["51", "91"], ["17", "91"], ["17", "105"], ["80", "98"], ["17", "98"], ["105", "108"], ["111", "108"], ["17", "108"], ["98", "108"], ["125", "108"], ["17", "111"], ["108", "111"], ["64", "131"], ["95", "131"], ["17", "131"], ["17", "140"], ["17", "175"], ["134", "145"], ["17", "145"], ["98", "134"], ["17", "134"], ["145", "148"], ["151", "148"], ["17", "148"], ["148", "151"], ["17", "151"], ["156", "154"], ["156", "154"], ["154", "167"], ["17", "167"], ["108", "119"], ["17", "119"], ["108", "125"], ["17", "125"], ["140", "156"], ["17", "156"], ["154", "156"], ["41", "156"], ["140", "157"], ["17", "157"], ["154", "157"], ["17", "162"], ["134", "162"], ["80", "96"], ["80", "98"], ["80", "95"], ["80", "87"], ["80", "91"], ["80", "90"], ["80", "80"], ["80", "86"], ["80", "83"], ["191", "196"], ["191", "198"], ["191", "191"], ["191", "194"], ["191", "202"], ["191", "201"], ["191", "199"], ["95", "131"], ["95", "132"], ["95", "134"], ["95", "108"], ["95", "105"], ["108", "115"], ["108", "114"], ["108", "119"], ["108", "108"], ["108", "111"], ["108", "116"], ["108", "122"], ["108", "123"], ["108", "125"], ["131", "145"], ["131", "148"], ["131", "176"], ["131", "140"], ["131", "177"], ["131", "175"], ["148", "167"], ["148", "154"], ["148", "169"], ["148", "151"], ["148", "162"], ["148", "168"], ["148", "148"], ["148", "160"], ["148", "157"], ["148", "159"], ["148", "156"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,out = System.out)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,long mod = (long) 1e9 + 7)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.addition,(long) 1e9 + 7)<SUB>6</SUB>>", "45": "<(TYPE_REF,long,long)<SUB>6</SUB>>", "47": "<(LITERAL,7,(long) 1e9 + 7)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "51": "<(nextInt,nextInt())<SUB>7</SUB>>", "53": "<(LOCAL,long[][] dp: long[][])<SUB>8</SUB>>", "55": "<(IDENTIFIER,dp,long[][] dp = new long[n + 1][n + 1])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.addition,n + 1)<SUB>8</SUB>>", "59": "<(LITERAL,1,n + 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "63": "<(LOCAL,Character[] line: java.lang.Character[])<SUB>9</SUB>>", "65": "<(IDENTIFIER,line,Character[] line = new Character[n + 1])<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.addition,n + 1)<SUB>9</SUB>>", "69": "<(LITERAL,1,n + 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,line[0])<SUB>10</SUB>>", "73": "<(LITERAL,0,line[0] = 'a')<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "79": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "81": "<(IDENTIFIER,i,i &lt;= n)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,line[i])<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,line[i] = charAt(0))<SUB>12</SUB>>", "91": "<(nextToken,nextToken())<SUB>12</SUB>>", "93": "<(LITERAL,0,charAt(0))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.equals,line[i - 1] == 'f')<SUB>13</SUB>>", "97": "<(IDENTIFIER,line,line[i - 1] == 'f')<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,i - 1)<SUB>13</SUB>>", "101": "<(LITERAL,'f',line[i - 1] == 'f')<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "107": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "109": "<(IDENTIFIER,j,j &lt; i)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,dp[i][j + 1])<SUB>16</SUB>>", "117": "<(IDENTIFIER,dp,dp[i][j + 1] = dp[i - 1][j])<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.addition,j + 1)<SUB>16</SUB>>", "121": "<(LITERAL,1,j + 1)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>16</SUB>>", "127": "<(LITERAL,1,i - 1)<SUB>16</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.equals,line[i - 1] == 's')<SUB>19</SUB>>", "133": "<(IDENTIFIER,line,line[i - 1] == 's')<SUB>19</SUB>>", "135": "<(IDENTIFIER,i,i - 1)<SUB>19</SUB>>", "137": "<(LITERAL,'s',line[i - 1] == 's')<SUB>19</SUB>>", "139": "<(LOCAL,long temp: long)<SUB>21</SUB>>", "141": "<(IDENTIFIER,temp,long temp = 0)<SUB>21</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &gt;= 0); j--),for (int j = i; Some(j &gt;= 0); j--))<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.assignment,int j = i)<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,int j = i)<SUB>22</SUB>>", "149": "<(IDENTIFIER,j,j &gt;= 0)<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.postDecrement,j--)<SUB>22</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "155": "<(IDENTIFIER,temp,temp = (temp + dp[i - 1][j]) % mod)<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.addition,temp + dp[i - 1][j])<SUB>24</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j])<SUB>24</SUB>>", "161": "<(IDENTIFIER,dp,temp + dp[i - 1][j])<SUB>24</SUB>>", "163": "<(IDENTIFIER,i,i - 1)<SUB>24</SUB>>", "165": "<(IDENTIFIER,j,temp + dp[i - 1][j])<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.assignment,dp[i][j] = temp)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>25</SUB>>", "171": "<(IDENTIFIER,i,dp[i][j] = temp)<SUB>25</SUB>>", "173": "<(IDENTIFIER,temp,dp[i][j] = temp)<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.assignment,dp[i][0] = 1)<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>28</SUB>>", "179": "<(IDENTIFIER,i,dp[i][0] = 1)<SUB>28</SUB>>", "181": "<(LITERAL,1,dp[i][0] = 1)<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.assignment,long total = 0)<SUB>30</SUB>>", "185": "<(LITERAL,0,long total = 0)<SUB>30</SUB>>", "187": "<(LOCAL,int j: int)<SUB>31</SUB>>", "189": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "191": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>31</SUB>>", "193": "<(IDENTIFIER,n,j &lt;= n)<SUB>31</SUB>>", "195": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "197": "<(IDENTIFIER,total,total = (total + dp[n][j]) % mod)<SUB>32</SUB>>", "199": "<(&lt;operator&gt;.addition,total + dp[n][j])<SUB>32</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[n][j])<SUB>32</SUB>>", "203": "<(IDENTIFIER,dp,total + dp[n][j])<SUB>32</SUB>>", "205": "<(IDENTIFIER,j,total + dp[n][j])<SUB>32</SUB>>", "207": "<(println,println(total))<SUB>33</SUB>>", "209": "<(IDENTIFIER,total,println(total))<SUB>33</SUB>>", "211": "<(MODIFIER,STATIC)>"}}