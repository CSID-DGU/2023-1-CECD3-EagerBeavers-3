{"edges": [["19", "21"], ["19", "103"], ["19", "104"], ["19", "105"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "45"], ["21", "49"], ["21", "50"], ["21", "57"], ["21", "101"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "61"], ["57", "64"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["65", "66"], ["65", "67"], ["65", "72"], ["65", "73"], ["65", "89"], ["65", "96"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "88"], ["76", "77"], ["76", "87"], ["77", "78"], ["77", "86"], ["78", "79"], ["78", "85"], ["79", "80"], ["79", "81"], ["79", "82"], ["82", "83"], ["82", "84"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["22", "29"], ["27", "33"], ["30", "39"], ["37", "43"], ["41", "47"], ["45", "54"], ["50", "58"], ["101", "105"], ["24", "22"], ["29", "27"], ["31", "30"], ["39", "37"], ["43", "41"], ["47", "45"], ["52", "50"], ["58", "61"], ["58", "69"], ["61", "101"], ["26", "24"], ["33", "31"], ["54", "52"], ["67", "82"], ["73", "93"], ["89", "98"], ["96", "101"], ["69", "67"], ["75", "73"], ["91", "89"], ["98", "96"], ["76", "75"], ["93", "91"], ["77", "76"], ["78", "77"], ["79", "78"], ["82", "79"], ["19", "26"], ["20", "105"], ["22", "105"], ["22", "105"], ["27", "105"], ["30", "105"], ["30", "105"], ["37", "105"], ["41", "105"], ["47", "105"], ["45", "105"], ["45", "105"], ["52", "105"], ["54", "105"], ["52", "105"], ["50", "105"], ["50", "105"], ["58", "105"], ["58", "105"], ["69", "105"], ["67", "105"], ["67", "105"], ["79", "105"], ["78", "105"], ["77", "105"], ["76", "105"], ["75", "105"], ["73", "105"], ["73", "105"], ["91", "105"], ["93", "105"], ["93", "105"], ["91", "105"], ["89", "105"], ["89", "105"], ["98", "105"], ["98", "105"], ["96", "105"], ["96", "105"], ["61", "105"], ["61", "105"], ["101", "105"], ["101", "105"], ["79", "105"], ["19", "20"], ["19", "27"], ["39", "37"], ["43", "41"], ["47", "45"], ["52", "50"], ["52", "50"], ["19", "22"], ["27", "30"], ["19", "30"], ["96", "101"], ["61", "101"], ["19", "101"], ["22", "39"], ["19", "39"], ["39", "43"], ["19", "43"], ["43", "47"], ["19", "47"], ["54", "52"], ["19", "52"], ["54", "52"], ["41", "58"], ["19", "58"], ["50", "58"], ["30", "61"], ["19", "61"], ["58", "61"], ["37", "54"], ["19", "54"], ["45", "54"], ["69", "67"], ["69", "67"], ["75", "73"], ["75", "73"], ["91", "89"], ["91", "89"], ["73", "89"], ["19", "89"], ["30", "96"], ["19", "96"], ["98", "96"], ["98", "96"], ["58", "69"], ["19", "69"], ["58", "69"], ["76", "75"], ["76", "75"], ["19", "75"], ["69", "91"], ["19", "91"], ["93", "91"], ["93", "91"], ["89", "98"], ["19", "98"], ["75", "98"], ["77", "76"], ["77", "76"], ["54", "76"], ["19", "76"], ["76", "93"], ["19", "93"], ["67", "93"], ["79", "77"], ["79", "77"], ["79", "77"], ["19", "77"], ["79", "78"], ["79", "78"], ["79", "78"], ["19", "78"], ["19", "79"], ["67", "79"], ["67", "82"], ["19", "82"], ["58", "73"], ["58", "61"], ["58", "96"], ["58", "77"], ["58", "89"], ["58", "98"], ["58", "75"], ["58", "69"], ["58", "67"], ["58", "76"], ["58", "91"], ["58", "82"], ["58", "93"], ["58", "78"], ["58", "79"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "23": "<(IDENTIFIER,input,init(System.in))<SUB>5</SUB>>", "25": "<(IDENTIFIER,System,init(System.in))<SUB>5</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>6</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter((System.out)))<SUB>6</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter((System.out)))<SUB>6</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "35": "<(LOCAL,int m: int)<SUB>8</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "39": "<(nextInt,nextInt())<SUB>8</SUB>>", "41": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>8</SUB>>", "43": "<(nextInt,nextInt())<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>8</SUB>>", "47": "<(nextInt,nextInt())<SUB>8</SUB>>", "49": "<(LOCAL,long border: long)<SUB>9</SUB>>", "51": "<(IDENTIFIER,border,long border = n - n / k)<SUB>9</SUB>>", "53": "<(IDENTIFIER,n,n - n / k)<SUB>9</SUB>>", "55": "<(IDENTIFIER,n,n / k)<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,if (m &lt;= border),if (m &lt;= border))<SUB>10</SUB>>", "59": "<(IDENTIFIER,m,m &lt;= border)<SUB>10</SUB>>", "61": "<(println,println(m))<SUB>10</SUB>>", "63": "<(IDENTIFIER,m,println(m))<SUB>10</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,long count = m - border)<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.subtraction,m - border)<SUB>13</SUB>>", "71": "<(IDENTIFIER,border,m - border)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.assignment,long first = ((pow(2, count + 1) + mod - 2) * k) % mod)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.modulo,((pow(2, count + 1) + mod - 2) * k) % mod)<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.subtraction,pow(2, count + 1) + mod - 2)<SUB>14</SUB>>", "79": "<(pow,pow(2, count + 1))<SUB>14</SUB>>", "81": "<(LITERAL,2,pow(2, count + 1))<SUB>14</SUB>>", "83": "<(IDENTIFIER,count,count + 1)<SUB>14</SUB>>", "85": "<(IDENTIFIER,mod,pow(2, count + 1) + mod)<SUB>14</SUB>>", "87": "<(IDENTIFIER,k,(pow(2, count + 1) + mod - 2) * k)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.assignmentPlus,first += m - k * count)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.subtraction,m - k * count)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.multiplication,k * count)<SUB>15</SUB>>", "95": "<(IDENTIFIER,count,k * count)<SUB>15</SUB>>", "97": "<(IDENTIFIER,out,println(first % mod))<SUB>16</SUB>>", "99": "<(IDENTIFIER,first,first % mod)<SUB>16</SUB>>", "101": "<(close,close())<SUB>19</SUB>>", "103": "<(MODIFIER,PUBLIC)>", "105": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}