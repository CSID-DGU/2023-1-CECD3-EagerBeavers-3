{"edges": [["17", "18"], ["17", "19"], ["17", "150"], ["17", "151"], ["17", "152"], ["19", "20"], ["19", "21"], ["19", "22"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "61"], ["19", "64"], ["19", "65"], ["19", "68"], ["19", "145"], ["22", "23"], ["22", "24"], ["24", "25"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "54"], ["50", "60"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "58"], ["56", "57"], ["58", "59"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "95"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "117"], ["95", "120"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "110"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["121", "122"], ["121", "143"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "136"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["22", "28"], ["26", "33"], ["31", "37"], ["61", "65"], ["65", "70"], ["145", "152"], ["24", "22"], ["28", "26"], ["33", "31"], ["37", "40"], ["40", "47"], ["40", "61"], ["43", "40"], ["70", "73"], ["73", "84"], ["73", "148"], ["76", "73"], ["146", "145"], ["46", "43"], ["80", "97"], ["148", "146"], ["47", "53"], ["82", "80"], ["96", "117"], ["96", "123"], ["117", "76"], ["51", "56"], ["54", "46"], ["83", "91"], ["88", "82"], ["97", "102"], ["100", "96"], ["53", "51"], ["56", "58"], ["58", "54"], ["84", "87"], ["87", "83"], ["89", "94"], ["94", "88"], ["101", "113"], ["110", "100"], ["122", "143"], ["122", "76"], ["143", "76"], ["91", "89"], ["102", "106"], ["105", "101"], ["111", "116"], ["116", "110"], ["123", "128"], ["126", "122"], ["106", "109"], ["109", "105"], ["113", "111"], ["127", "139"], ["136", "126"], ["128", "132"], ["131", "127"], ["137", "142"], ["142", "136"], ["132", "135"], ["135", "131"], ["139", "137"], ["17", "24"], ["18", "152"], ["22", "152"], ["26", "152"], ["28", "152"], ["26", "152"], ["26", "152"], ["31", "152"], ["31", "152"], ["37", "152"], ["61", "152"], ["61", "152"], ["65", "152"], ["70", "152"], ["73", "152"], ["73", "152"], ["73", "152"], ["145", "152"], ["145", "152"], ["145", "152"], ["80", "152"], ["80", "152"], ["97", "152"], ["96", "152"], ["102", "152"], ["101", "152"], ["100", "152"], ["96", "152"], ["96", "152"], ["123", "152"], ["122", "152"], ["128", "152"], ["127", "152"], ["126", "152"], ["122", "152"], ["122", "152"], ["143", "152"], ["117", "152"], ["76", "152"], ["46", "152"], ["51", "152"], ["54", "152"], ["54", "152"], ["58", "152"], ["54", "152"], ["46", "152"], ["43", "152"], ["61", "152"], ["17", "18"], ["24", "22"], ["28", "26"], ["33", "31"], ["17", "65"], ["17", "37"], ["17", "61"], ["31", "61"], ["46", "61"], ["17", "70"], ["65", "145"], ["143", "145"], ["117", "145"], ["17", "145"], ["17", "24"], ["24", "28"], ["17", "28"], ["22", "33"], ["17", "33"], ["37", "40"], ["43", "40"], ["17", "40"], ["33", "40"], ["40", "43"], ["17", "43"], ["51", "46"], ["54", "46"], ["17", "46"], ["70", "73"], ["76", "73"], ["17", "73"], ["40", "73"], ["113", "76"], ["139", "76"], ["17", "76"], ["82", "80"], ["82", "80"], ["17", "117"], ["17", "51"], ["17", "60"], ["97", "96"], ["97", "96"], ["100", "96"], ["100", "96"], ["65", "117"], ["143", "117"], ["51", "54"], ["17", "54"], ["56", "54"], ["58", "54"], ["17", "97"], ["26", "97"], ["123", "97"], ["101", "100"], ["101", "100"], ["28", "56"], ["58", "56"], ["17", "56"], ["56", "58"], ["17", "58"], ["102", "101"], ["102", "101"], ["123", "122"], ["123", "122"], ["126", "122"], ["126", "122"], ["65", "143"], ["117", "143"], ["17", "143"], ["73", "91"], ["17", "91"], ["17", "102"], ["80", "102"], ["17", "123"], ["97", "123"], ["127", "126"], ["127", "126"], ["91", "113"], ["17", "113"], ["128", "127"], ["128", "127"], ["17", "128"], ["102", "128"], ["113", "139"], ["17", "139"], ["40", "47"], ["40", "51"], ["40", "46"], ["40", "56"], ["40", "40"], ["40", "54"], ["40", "43"], ["40", "58"], ["40", "53"], ["73", "94"], ["73", "73"], ["73", "96"], ["73", "89"], ["73", "113"], ["73", "116"], ["73", "84"], ["73", "102"], ["73", "106"], ["73", "76"], ["73", "87"], ["73", "97"], ["73", "91"], ["73", "82"], ["73", "101"], ["73", "80"], ["73", "83"], ["73", "105"], ["73", "100"], ["73", "88"], ["73", "110"], ["73", "111"], ["73", "109"], ["96", "136"], ["96", "122"], ["96", "128"], ["96", "131"], ["96", "132"], ["96", "142"], ["96", "123"], ["96", "126"], ["96", "137"], ["96", "135"], ["96", "117"], ["96", "127"], ["96", "139"], ["122", "143"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(LOCAL,int T: int)<SUB>2</SUB>>", "23": "<(IDENTIFIER,N,int N = INT())<SUB>2</SUB>>", "25": "<(IDENTIFIER,this,INT())<SUB>2</SUB>>", "27": "<(IDENTIFIER,T,int T = INT())<SUB>2</SUB>>", "29": "<(IDENTIFIER,this,INT())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,ANY list = new House[N])<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.alloc,new House[N])>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>4</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>4</SUB>>", "41": "<(IDENTIFIER,i,i &lt; N)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.postIncrement,i++)<SUB>4</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>5</SUB>>", "49": "<(IDENTIFIER,i,list[i] = new House(INT(), INT()))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.alloc,new House(INT(), INT()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,$obj0,new House(INT(), INT()))>", "57": "<(IDENTIFIER,this,INT())<SUB>5</SUB>>", "59": "<(IDENTIFIER,this,INT())<SUB>5</SUB>>", "61": "<(sort,sort(list))<SUB>7</SUB>>", "63": "<(IDENTIFIER,list,sort(list))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int cnt = 2)<SUB>8</SUB>>", "67": "<(LITERAL,2,int cnt = 2)<SUB>8</SUB>>", "69": "<(LOCAL,int i: int)<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "75": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "79": "<(LOCAL,int room: int)<SUB>10</SUB>>", "81": "<(IDENTIFIER,room,int room = list[i].center - list[i - 1].center)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.fieldAccess,list[i].center)<SUB>10</SUB>>", "85": "<(IDENTIFIER,list,list[i].center - list[i - 1].center)<SUB>10</SUB>>", "87": "<(FIELD_IDENTIFIER,center,center)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,list[i - 1])<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>10</SUB>>", "93": "<(LITERAL,1,i - 1)<SUB>10</SUB>>", "95": "<(CONTROL_STRUCTURE,if (2 * T &lt; 2 * room - list[i].side - list[i - 1].side),if (2 * T &lt; 2 * room - list[i].side - list[i - 1].side))<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.multiplication,2 * T)<SUB>11</SUB>>", "99": "<(IDENTIFIER,T,2 * T)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.subtraction,2 * room - list[i].side)<SUB>11</SUB>>", "103": "<(LITERAL,2,2 * room)<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,list[i].side)<SUB>11</SUB>>", "107": "<(IDENTIFIER,list,2 * room - list[i].side)<SUB>11</SUB>>", "109": "<(FIELD_IDENTIFIER,side,side)<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,list[i - 1])<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>11</SUB>>", "115": "<(LITERAL,1,i - 1)<SUB>11</SUB>>", "117": "<(&lt;operator&gt;.assignmentPlus,cnt += 2)<SUB>11</SUB>>", "119": "<(LITERAL,2,cnt += 2)<SUB>11</SUB>>", "121": "<(CONTROL_STRUCTURE,if (2 * T == 2 * room - list[i].side - list[i - 1].side),if (2 * T == 2 * room - list[i].side - list[i - 1].side))<SUB>12</SUB>>", "123": "<(&lt;operator&gt;.multiplication,2 * T)<SUB>12</SUB>>", "125": "<(IDENTIFIER,T,2 * T)<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.subtraction,2 * room - list[i].side)<SUB>12</SUB>>", "129": "<(LITERAL,2,2 * room)<SUB>12</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,list[i].side)<SUB>12</SUB>>", "133": "<(IDENTIFIER,list,2 * room - list[i].side)<SUB>12</SUB>>", "135": "<(FIELD_IDENTIFIER,side,side)<SUB>12</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,list[i - 1])<SUB>12</SUB>>", "139": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>12</SUB>>", "141": "<(LITERAL,1,i - 1)<SUB>12</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>12</SUB>>", "145": "<(println,System.out.println(cnt))<SUB>14</SUB>>", "147": "<(IDENTIFIER,System,System.out.println(cnt))<SUB>14</SUB>>", "149": "<(IDENTIFIER,cnt,System.out.println(cnt))<SUB>14</SUB>>", "151": "<(MODIFIER,STATIC)>"}}