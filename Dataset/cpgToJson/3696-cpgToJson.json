{"edges": [["28", "30"], ["28", "245"], ["28", "246"], ["28", "247"], ["30", "4"], ["30", "31"], ["30", "34"], ["30", "6"], ["30", "36"], ["30", "39"], ["30", "8"], ["30", "10"], ["30", "41"], ["30", "65"], ["30", "66"], ["30", "70"], ["30", "71"], ["30", "75"], ["30", "76"], ["30", "13"], ["30", "80"], ["30", "83"], ["30", "84"], ["30", "115"], ["30", "116"], ["30", "121"], ["30", "122"], ["30", "125"], ["30", "231"], ["30", "242"], ["30", "244"], ["31", "32"], ["31", "33"], ["34", "3"], ["34", "35"], ["36", "37"], ["36", "38"], ["39", "5"], ["39", "40"], ["41", "42"], ["41", "53"], ["42", "43"], ["42", "46"], ["42", "48"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "7"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "9"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["54", "62"], ["55", "56"], ["55", "57"], ["58", "11"], ["58", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "82"], ["83", "12"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "100"], ["94", "106"], ["94", "112"], ["96", "97"], ["96", "98"], ["98", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "138"], ["136", "141"], ["136", "144"], ["136", "146"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "148"], ["146", "153"], ["146", "154"], ["146", "159"], ["146", "160"], ["146", "164"], ["146", "209"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["164", "165"], ["164", "167"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "173"], ["167", "174"], ["167", "191"], ["169", "170"], ["169", "171"], ["171", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "184"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "201"], ["195", "206"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "221"], ["213", "228"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "241"], ["242", "243"], ["31", "34"], ["34", "38"], ["36", "39"], ["39", "45"], ["66", "73"], ["71", "78"], ["76", "82"], ["80", "83"], ["83", "86"], ["116", "122"], ["122", "127"], ["231", "242"], ["242", "244"], ["244", "247"], ["33", "31"], ["38", "36"], ["68", "66"], ["73", "71"], ["78", "76"], ["82", "80"], ["86", "89"], ["89", "98"], ["89", "118"], ["92", "89"], ["118", "116"], ["127", "130"], ["130", "138"], ["130", "235"], ["133", "130"], ["233", "231"], ["43", "46"], ["46", "50"], ["48", "51"], ["51", "57"], ["51", "68"], ["96", "101"], ["100", "107"], ["106", "112"], ["112", "92"], ["234", "239"], ["239", "233"], ["45", "43"], ["50", "48"], ["55", "61"], ["58", "62"], ["62", "68"], ["98", "96"], ["101", "104"], ["104", "100"], ["107", "110"], ["110", "106"], ["138", "141"], ["141", "150"], ["141", "133"], ["144", "141"], ["235", "234"], ["57", "55"], ["59", "58"], ["148", "158"], ["154", "162"], ["160", "165"], ["61", "59"], ["150", "148"], ["156", "154"], ["162", "160"], ["165", "171"], ["165", "210"], ["210", "215"], ["210", "144"], ["158", "156"], ["169", "181"], ["174", "192"], ["214", "222"], ["221", "228"], ["228", "144"], ["171", "169"], ["176", "174"], ["192", "165"], ["192", "197"], ["215", "218"], ["218", "214"], ["222", "225"], ["225", "221"], ["177", "188"], ["184", "176"], ["196", "202"], ["201", "206"], ["206", "165"], ["179", "177"], ["186", "184"], ["197", "196"], ["202", "201"], ["181", "179"], ["188", "186"], ["28", "33"], ["244", "247"], ["29", "247"], ["31", "247"], ["34", "247"], ["36", "247"], ["39", "247"], ["43", "247"], ["46", "247"], ["46", "247"], ["48", "247"], ["51", "247"], ["51", "247"], ["55", "247"], ["58", "247"], ["58", "247"], ["62", "247"], ["66", "247"], ["71", "247"], ["71", "247"], ["78", "247"], ["76", "247"], ["76", "247"], ["80", "247"], ["83", "247"], ["83", "247"], ["86", "247"], ["89", "247"], ["89", "247"], ["116", "247"], ["116", "247"], ["116", "247"], ["122", "247"], ["122", "247"], ["127", "247"], ["130", "247"], ["130", "247"], ["130", "247"], ["234", "247"], ["233", "247"], ["233", "247"], ["231", "247"], ["231", "247"], ["242", "247"], ["242", "247"], ["138", "247"], ["141", "247"], ["141", "247"], ["141", "247"], ["133", "247"], ["148", "247"], ["148", "247"], ["148", "247"], ["154", "247"], ["154", "247"], ["162", "247"], ["160", "247"], ["165", "247"], ["165", "247"], ["210", "247"], ["210", "247"], ["210", "247"], ["214", "247"], ["214", "247"], ["221", "247"], ["221", "247"], ["228", "247"], ["228", "247"], ["228", "247"], ["144", "247"], ["169", "247"], ["179", "247"], ["177", "247"], ["176", "247"], ["184", "247"], ["186", "247"], ["184", "247"], ["176", "247"], ["174", "247"], ["174", "247"], ["192", "247"], ["192", "247"], ["196", "247"], ["196", "247"], ["201", "247"], ["201", "247"], ["206", "247"], ["206", "247"], ["96", "247"], ["96", "247"], ["100", "247"], ["100", "247"], ["106", "247"], ["110", "247"], ["106", "247"], ["106", "247"], ["112", "247"], ["112", "247"], ["112", "247"], ["92", "247"], ["28", "29"], ["28", "31"], ["28", "36"], ["68", "66"], ["73", "71"], ["78", "76"], ["28", "80"], ["118", "116"], ["28", "122"], ["28", "244"], ["31", "34"], ["28", "34"], ["36", "39"], ["28", "39"], ["80", "83"], ["28", "83"], ["28", "86"], ["28", "127"], ["51", "231"], ["62", "231"], ["28", "231"], ["116", "231"], ["214", "231"], ["221", "231"], ["231", "242"], ["28", "242"], ["28", "43"], ["28", "48"], ["28", "54"], ["46", "68"], ["58", "68"], ["28", "68"], ["68", "73"], ["28", "73"], ["73", "78"], ["28", "78"], ["86", "89"], ["92", "89"], ["28", "89"], ["76", "89"], ["89", "92"], ["28", "92"], ["98", "96"], ["104", "100"], ["110", "106"], ["28", "118"], ["127", "130"], ["133", "130"], ["28", "130"], ["66", "130"], ["130", "133"], ["179", "133"], ["28", "133"], ["116", "233"], ["214", "233"], ["28", "233"], ["221", "233"], ["43", "46"], ["28", "46"], ["34", "46"], ["48", "51"], ["28", "51"], ["39", "51"], ["28", "55"], ["28", "62"], ["83", "112"], ["28", "112"], ["96", "112"], ["100", "112"], ["106", "112"], ["28", "138"], ["116", "234"], ["214", "234"], ["28", "234"], ["55", "58"], ["28", "58"], ["28", "98"], ["78", "104"], ["110", "104"], ["28", "104"], ["104", "110"], ["28", "110"], ["138", "141"], ["144", "141"], ["28", "141"], ["71", "141"], ["141", "144"], ["186", "144"], ["28", "144"], ["150", "148"], ["162", "160"], ["28", "150"], ["83", "162"], ["112", "162"], ["28", "162"], ["160", "165"], ["171", "165"], ["28", "165"], ["171", "169"], ["177", "174"], ["177", "174"], ["184", "174"], ["184", "174"], ["154", "210"], ["192", "210"], ["206", "210"], ["28", "210"], ["122", "210"], ["228", "210"], ["148", "214"], ["196", "214"], ["148", "221"], ["201", "221"], ["210", "228"], ["28", "228"], ["165", "171"], ["28", "171"], ["177", "176"], ["177", "176"], ["184", "176"], ["184", "176"], ["174", "192"], ["28", "192"], ["154", "192"], ["206", "192"], ["179", "196"], ["28", "196"], ["186", "201"], ["28", "201"], ["192", "206"], ["28", "206"], ["184", "177"], ["28", "177"], ["179", "177"], ["179", "177"], ["177", "184"], ["28", "184"], ["186", "184"], ["186", "184"], ["130", "179"], ["28", "179"], ["169", "179"], ["141", "186"], ["28", "186"], ["169", "186"], ["89", "107"], ["89", "96"], ["89", "98"], ["89", "104"], ["89", "92"], ["89", "112"], ["89", "101"], ["89", "100"], ["89", "89"], ["89", "106"], ["89", "110"], ["130", "138"], ["130", "130"], ["130", "141"], ["130", "133"], ["51", "57"], ["51", "59"], ["51", "58"], ["51", "61"], ["51", "55"], ["51", "62"], ["141", "154"], ["141", "150"], ["141", "162"], ["141", "144"], ["141", "148"], ["141", "158"], ["141", "160"], ["141", "141"], ["141", "210"], ["141", "165"], ["141", "156"], ["165", "188"], ["165", "192"], ["165", "169"], ["165", "179"], ["165", "181"], ["165", "184"], ["165", "174"], ["165", "186"], ["165", "171"], ["165", "176"], ["165", "177"], ["165", "165"], ["210", "214"], ["210", "225"], ["210", "215"], ["210", "228"], ["210", "221"], ["210", "222"], ["210", "218"], ["192", "196"], ["192", "197"], ["192", "206"], ["192", "202"], ["192", "201"]], "features": {"28": "<(METHOD,main)<SUB>1</SUB>>", "30": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "31": "<(&lt;operator&gt;.assignment,ANY in = new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new File(&quot;input.txt&quot;))<SUB>3</SUB>>", "6": "<(LOCAL,File out: ANY)<SUB>4</SUB>>", "37": "<(IDENTIFIER,out,ANY out = new File(&quot;output.txt&quot;))<SUB>4</SUB>>", "39": "<(&lt;init&gt;,new File(&quot;output.txt&quot;))<SUB>4</SUB>>", "40": "<(LITERAL,&quot;output.txt&quot;,new File(&quot;output.txt&quot;))<SUB>4</SUB>>", "10": "<(LOCAL,PrintWriter pw: ANY)<SUB>6</SUB>>", "42": "<(BLOCK,try,try)<SUB>7</SUB>>", "44": "<(IDENTIFIER,sc,sc = new Scanner(in))<SUB>8</SUB>>", "46": "<(&lt;init&gt;,new Scanner(in))<SUB>8</SUB>>", "47": "<(IDENTIFIER,in,new Scanner(in))<SUB>8</SUB>>", "49": "<(IDENTIFIER,pw,pw = new PrintWriter(out))<SUB>9</SUB>>", "51": "<(&lt;init&gt;,new PrintWriter(out))<SUB>9</SUB>>", "52": "<(IDENTIFIER,out,new PrintWriter(out))<SUB>9</SUB>>", "54": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "56": "<(IDENTIFIER,sc,sc = new Scanner(System.in))<SUB>11</SUB>>", "58": "<(&lt;init&gt;,new Scanner(System.in))<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>11</SUB>>", "61": "<(FIELD_IDENTIFIER,in,in)<SUB>11</SUB>>", "63": "<(IDENTIFIER,pw,pw = null)<SUB>12</SUB>>", "65": "<(LOCAL,int max_x: int)<SUB>15</SUB>>", "67": "<(IDENTIFIER,max_x,int max_x = nextInt())<SUB>15</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>15</SUB>>", "71": "<(&lt;operator&gt;.assignment,int max_y = nextInt())<SUB>16</SUB>>", "73": "<(nextInt,nextInt())<SUB>16</SUB>>", "75": "<(LOCAL,int start_num: int)<SUB>17</SUB>>", "77": "<(IDENTIFIER,start_num,int start_num = nextInt())<SUB>17</SUB>>", "79": "<(IDENTIFIER,sc,nextInt())<SUB>17</SUB>>", "80": "<(&lt;operator&gt;.assignment,ANY start = new HashSet&lt;int[]&gt;())<SUB>18</SUB>>", "82": "<(&lt;operator&gt;.alloc,new HashSet&lt;int[]&gt;())<SUB>18</SUB>>", "12": "<(IDENTIFIER,start,new HashSet&lt;int[]&gt;())<SUB>18</SUB>>", "85": "<(LOCAL,int i: int)<SUB>19</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; start_num)<SUB>19</SUB>>", "91": "<(IDENTIFIER,start_num,i &lt; start_num)<SUB>19</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "95": "<(LOCAL,int[] cell: int[])<SUB>20</SUB>>", "97": "<(IDENTIFIER,cell,int[] cell = new int[2])<SUB>20</SUB>>", "99": "<(LITERAL,2,new int[2])<SUB>20</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,cell[0])<SUB>21</SUB>>", "103": "<(LITERAL,0,cell[0] = nextInt())<SUB>21</SUB>>", "105": "<(IDENTIFIER,sc,nextInt())<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,cell[1])<SUB>22</SUB>>", "109": "<(LITERAL,1,cell[1] = nextInt())<SUB>22</SUB>>", "111": "<(IDENTIFIER,sc,nextInt())<SUB>22</SUB>>", "113": "<(IDENTIFIER,start,add(cell))<SUB>23</SUB>>", "115": "<(LOCAL,int[] result: int[])<SUB>26</SUB>>", "117": "<(IDENTIFIER,result,int[] result = new int[] { 1, 1 })<SUB>26</SUB>>", "119": "<(LITERAL,1,new int[] { 1, 1 })<SUB>26</SUB>>", "121": "<(LOCAL,int resultLen: int)<SUB>27</SUB>>", "123": "<(IDENTIFIER,resultLen,int resultLen = 0)<SUB>27</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= max_x); i++),for (int i = 1; Some(i &lt;= max_x); i++))<SUB>28</SUB>>", "127": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>28</SUB>>", "129": "<(LITERAL,1,int i = 1)<SUB>28</SUB>>", "131": "<(IDENTIFIER,i,i &lt;= max_x)<SUB>28</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "137": "<(LOCAL,int j: int)<SUB>29</SUB>>", "139": "<(IDENTIFIER,j,int j = 1)<SUB>29</SUB>>", "141": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= max_y)<SUB>29</SUB>>", "143": "<(IDENTIFIER,max_y,j &lt;= max_y)<SUB>29</SUB>>", "145": "<(IDENTIFIER,j,j++)<SUB>29</SUB>>", "147": "<(LOCAL,int[] sh: int[])<SUB>30</SUB>>", "149": "<(IDENTIFIER,sh,int[] sh = new int[] { 1, 1 })<SUB>30</SUB>>", "151": "<(LITERAL,1,new int[] { 1, 1 })<SUB>30</SUB>>", "153": "<(LOCAL,int shLen: int)<SUB>31</SUB>>", "155": "<(IDENTIFIER,shLen,int shLen = Integer.MAX_VALUE)<SUB>31</SUB>>", "157": "<(IDENTIFIER,Integer,int shLen = Integer.MAX_VALUE)<SUB>31</SUB>>", "159": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>32</SUB>>", "161": "<(IDENTIFIER,$iterLocal0,)<SUB>32</SUB>>", "163": "<(IDENTIFIER,start,&lt;empty&gt;)<SUB>32</SUB>>", "165": "<(hasNext,&lt;empty&gt;)<SUB>32</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "169": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>32</SUB>>", "171": "<(next,&lt;empty&gt;)<SUB>32</SUB>>", "173": "<(LOCAL,int len: int)<SUB>33</SUB>>", "175": "<(IDENTIFIER,len,int len = Math.abs(i - fired[0]) + Math.abs(j - fired[1]))<SUB>33</SUB>>", "177": "<(abs,Math.abs(i - fired[0]))<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.subtraction,i - fired[0])<SUB>33</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,fired[0])<SUB>33</SUB>>", "183": "<(LITERAL,0,i - fired[0])<SUB>33</SUB>>", "185": "<(IDENTIFIER,Math,Math.abs(j - fired[1]))<SUB>33</SUB>>", "187": "<(IDENTIFIER,j,j - fired[1])<SUB>33</SUB>>", "189": "<(IDENTIFIER,fired,j - fired[1])<SUB>33</SUB>>", "191": "<(CONTROL_STRUCTURE,if (len &lt; shLen),if (len &lt; shLen))<SUB>34</SUB>>", "193": "<(IDENTIFIER,len,len &lt; shLen)<SUB>34</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,sh[0])<SUB>35</SUB>>", "199": "<(LITERAL,0,sh[0] = i)<SUB>35</SUB>>", "201": "<(&lt;operator&gt;.assignment,sh[1] = j)<SUB>36</SUB>>", "203": "<(IDENTIFIER,sh,sh[1] = j)<SUB>36</SUB>>", "205": "<(IDENTIFIER,j,sh[1] = j)<SUB>36</SUB>>", "207": "<(IDENTIFIER,shLen,shLen = len)<SUB>37</SUB>>", "209": "<(CONTROL_STRUCTURE,if (shLen &gt; resultLen),if (shLen &gt; resultLen))<SUB>40</SUB>>", "211": "<(IDENTIFIER,shLen,shLen &gt; resultLen)<SUB>40</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,result[0])<SUB>41</SUB>>", "217": "<(LITERAL,0,result[0] = sh[0])<SUB>41</SUB>>", "219": "<(IDENTIFIER,sh,result[0] = sh[0])<SUB>41</SUB>>", "221": "<(&lt;operator&gt;.assignment,result[1] = sh[1])<SUB>42</SUB>>", "223": "<(IDENTIFIER,result,result[1] = sh[1])<SUB>42</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,sh[1])<SUB>42</SUB>>", "227": "<(LITERAL,1,result[1] = sh[1])<SUB>42</SUB>>", "229": "<(IDENTIFIER,resultLen,resultLen = shLen)<SUB>43</SUB>>", "231": "<(print,print(result[0] + &quot; &quot; + result[1]))<SUB>47</SUB>>", "233": "<(&lt;operator&gt;.addition,result[0] + &quot; &quot; + result[1])<SUB>47</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,result[0])<SUB>47</SUB>>", "237": "<(LITERAL,0,result[0] + &quot; &quot;)<SUB>47</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,result[1])<SUB>47</SUB>>", "241": "<(LITERAL,1,result[0] + &quot; &quot; + result[1])<SUB>47</SUB>>", "243": "<(IDENTIFIER,pw,close())<SUB>48</SUB>>", "245": "<(MODIFIER,PUBLIC)>", "247": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}