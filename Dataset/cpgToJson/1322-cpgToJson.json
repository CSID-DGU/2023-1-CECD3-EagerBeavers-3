{"edges": [["19", "21"], ["19", "99"], ["19", "100"], ["19", "101"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "28"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "40"], ["21", "41"], ["21", "48"], ["21", "51"], ["21", "52"], ["21", "61"], ["21", "64"], ["21", "65"], ["21", "74"], ["21", "77"], ["21", "84"], ["22", "23"], ["22", "24"], ["25", "3"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["43", "46"], ["43", "47"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["84", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["22", "25"], ["25", "30"], ["28", "34"], ["32", "37"], ["37", "43"], ["41", "48"], ["48", "56"], ["52", "61"], ["61", "69"], ["65", "74"], ["74", "78"], ["24", "22"], ["30", "28"], ["34", "32"], ["43", "41"], ["54", "52"], ["67", "65"], ["78", "81"], ["78", "85"], ["81", "85"], ["85", "91"], ["85", "97"], ["88", "101"], ["55", "54"], ["68", "67"], ["89", "88"], ["94", "101"], ["56", "55"], ["69", "68"], ["91", "89"], ["95", "94"], ["97", "95"], ["19", "24"], ["20", "101"], ["22", "101"], ["25", "101"], ["28", "101"], ["34", "101"], ["32", "101"], ["32", "101"], ["37", "101"], ["43", "101"], ["41", "101"], ["41", "101"], ["55", "101"], ["54", "101"], ["52", "101"], ["52", "101"], ["69", "101"], ["69", "101"], ["68", "101"], ["67", "101"], ["65", "101"], ["65", "101"], ["74", "101"], ["78", "101"], ["78", "101"], ["81", "101"], ["81", "101"], ["81", "101"], ["85", "101"], ["85", "101"], ["88", "101"], ["43", "101"], ["19", "20"], ["19", "22"], ["30", "28"], ["34", "32"], ["19", "37"], ["43", "41"], ["43", "41"], ["43", "41"], ["43", "41"], ["43", "48"], ["19", "48"], ["54", "52"], ["54", "52"], ["55", "61"], ["19", "61"], ["68", "65"], ["68", "65"], ["19", "65"], ["68", "74"], ["19", "74"], ["22", "25"], ["19", "25"], ["41", "48"], ["52", "61"], ["65", "74"], ["19", "81"], ["68", "81"], ["25", "30"], ["19", "30"], ["30", "34"], ["19", "34"], ["19", "43"], ["32", "43"], ["37", "43"], ["55", "54"], ["55", "54"], ["19", "54"], ["68", "67"], ["68", "67"], ["19", "67"], ["74", "78"], ["19", "78"], ["78", "81"], ["56", "85"], ["19", "85"], ["19", "88"], ["56", "55"], ["56", "55"], ["19", "55"], ["43", "55"], ["69", "68"], ["69", "68"], ["19", "68"], ["55", "68"], ["78", "94"], ["81", "94"], ["19", "94"], ["19", "56"], ["28", "56"], ["48", "69"], ["19", "69"], ["61", "69"], ["78", "81"], ["85", "94"], ["85", "97"], ["85", "91"], ["85", "89"], ["85", "88"], ["85", "95"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "27": "<(LOCAL,long k: long)<SUB>4</SUB>>", "29": "<(IDENTIFIER,x,long x = nextLong())<SUB>4</SUB>>", "31": "<(IDENTIFIER,in,nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,long k = nextLong())<SUB>4</SUB>>", "35": "<(IDENTIFIER,in,nextLong())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,long mod = 1000000007)<SUB>6</SUB>>", "39": "<(LITERAL,1000000007,long mod = 1000000007)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,long one = pow(2, k, mod))<SUB>8</SUB>>", "43": "<(pow,pow(2, k, mod))<SUB>8</SUB>>", "45": "<(LITERAL,2,pow(2, k, mod))<SUB>8</SUB>>", "47": "<(IDENTIFIER,mod,pow(2, k, mod))<SUB>8</SUB>>", "49": "<(IDENTIFIER,one,one %= mod)<SUB>10</SUB>>", "51": "<(LOCAL,long two: long)<SUB>12</SUB>>", "53": "<(IDENTIFIER,two,long two = (2 * x) % mod - 1)<SUB>12</SUB>>", "55": "<(&lt;operator&gt;.modulo,(2 * x) % mod)<SUB>12</SUB>>", "57": "<(LITERAL,2,2 * x)<SUB>12</SUB>>", "59": "<(IDENTIFIER,mod,(2 * x) % mod)<SUB>12</SUB>>", "61": "<(&lt;operators&gt;.assignmentModulo,two %= mod)<SUB>14</SUB>>", "63": "<(IDENTIFIER,mod,two %= mod)<SUB>14</SUB>>", "65": "<(&lt;operator&gt;.assignment,long ans = (one * two) % mod + 1)<SUB>16</SUB>>", "67": "<(&lt;operator&gt;.addition,(one * two) % mod + 1)<SUB>16</SUB>>", "69": "<(&lt;operator&gt;.multiplication,one * two)<SUB>16</SUB>>", "71": "<(IDENTIFIER,two,one * two)<SUB>16</SUB>>", "73": "<(LITERAL,1,(one * two) % mod + 1)<SUB>16</SUB>>", "75": "<(IDENTIFIER,ans,ans %= mod)<SUB>18</SUB>>", "77": "<(CONTROL_STRUCTURE,if (ans &lt; 0),if (ans &lt; 0))<SUB>20</SUB>>", "79": "<(IDENTIFIER,ans,ans &lt; 0)<SUB>20</SUB>>", "81": "<(&lt;operator&gt;.assignmentPlus,ans += mod)<SUB>21</SUB>>", "83": "<(IDENTIFIER,mod,ans += mod)<SUB>21</SUB>>", "85": "<(&lt;operator&gt;.equals,x == 0)<SUB>23</SUB>>", "87": "<(LITERAL,0,x == 0)<SUB>23</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "91": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "93": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "95": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "97": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "99": "<(MODIFIER,PUBLIC)>", "101": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}