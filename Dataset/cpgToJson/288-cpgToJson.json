{"edges": [["22", "24"], ["22", "145"], ["22", "146"], ["22", "147"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "51"], ["24", "52"], ["24", "58"], ["24", "59"], ["24", "63"], ["24", "66"], ["24", "69"], ["24", "88"], ["24", "91"], ["24", "97"], ["24", "102"], ["24", "126"], ["24", "140"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["63", "65"], ["66", "7"], ["66", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "49"], ["45", "56"], ["52", "61"], ["59", "65"], ["63", "67"], ["66", "71"], ["88", "94"], ["91", "98"], ["97", "104"], ["140", "147"], ["27", "25"], ["41", "39"], ["43", "42"], ["47", "45"], ["54", "52"], ["61", "59"], ["65", "63"], ["67", "66"], ["71", "74"], ["74", "81"], ["74", "88"], ["77", "74"], ["93", "91"], ["98", "97"], ["104", "107"], ["107", "116"], ["107", "128"], ["110", "107"], ["128", "131"], ["131", "137"], ["131", "143"], ["134", "131"], ["141", "140"], ["30", "37"], ["33", "28"], ["49", "47"], ["56", "54"], ["80", "77"], ["94", "93"], ["113", "110"], ["137", "134"], ["143", "141"], ["32", "30"], ["35", "33"], ["81", "86"], ["84", "80"], ["114", "120"], ["119", "113"], ["37", "35"], ["86", "84"], ["116", "114"], ["120", "123"], ["123", "119"], ["22", "27"], ["23", "147"], ["25", "147"], ["30", "147"], ["33", "147"], ["33", "147"], ["33", "147"], ["28", "147"], ["39", "147"], ["45", "147"], ["54", "147"], ["54", "147"], ["52", "147"], ["52", "147"], ["59", "147"], ["59", "147"], ["59", "147"], ["63", "147"], ["66", "147"], ["67", "147"], ["66", "147"], ["66", "147"], ["88", "147"], ["91", "147"], ["93", "147"], ["91", "147"], ["91", "147"], ["97", "147"], ["97", "147"], ["104", "147"], ["107", "147"], ["128", "147"], ["128", "147"], ["131", "147"], ["131", "147"], ["131", "147"], ["140", "147"], ["140", "147"], ["140", "147"], ["137", "147"], ["134", "147"], ["113", "147"], ["119", "147"], ["119", "147"], ["113", "147"], ["113", "147"], ["110", "147"], ["80", "147"], ["84", "147"], ["86", "147"], ["84", "147"], ["80", "147"], ["80", "147"], ["77", "147"], ["137", "147"], ["22", "23"], ["22", "25"], ["22", "39"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["22", "63"], ["22", "88"], ["93", "91"], ["22", "97"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["63", "66"], ["22", "66"], ["67", "66"], ["22", "71"], ["22", "104"], ["52", "128"], ["22", "128"], ["88", "140"], ["22", "140"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "47"], ["49", "47"], ["47", "54"], ["22", "54"], ["56", "54"], ["45", "61"], ["22", "61"], ["43", "67"], ["22", "67"], ["71", "74"], ["77", "74"], ["22", "74"], ["61", "74"], ["74", "77"], ["22", "77"], ["84", "80"], ["84", "80"], ["74", "93"], ["22", "93"], ["104", "107"], ["110", "107"], ["22", "107"], ["74", "107"], ["22", "110"], ["107", "110"], ["91", "113"], ["59", "113"], ["80", "113"], ["128", "131"], ["134", "131"], ["22", "131"], ["107", "131"], ["137", "134"], ["22", "134"], ["30", "33"], ["22", "33"], ["42", "49"], ["22", "49"], ["49", "56"], ["22", "56"], ["74", "94"], ["22", "94"], ["22", "137"], ["131", "137"], ["54", "84"], ["22", "84"], ["86", "84"], ["91", "119"], ["59", "119"], ["80", "119"], ["66", "86"], ["22", "86"], ["107", "116"], ["22", "116"], ["74", "80"], ["74", "77"], ["74", "81"], ["74", "84"], ["74", "74"], ["74", "86"], ["107", "107"], ["107", "120"], ["107", "113"], ["107", "116"], ["107", "114"], ["107", "110"], ["107", "119"], ["107", "123"], ["131", "131"], ["131", "134"], ["131", "137"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(IDENTIFIER,n,n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(IDENTIFIER,st,nextToken())<SUB>4</SUB>>", "52": "<(&lt;operator&gt;.assignment,int k = parseInt(st.nextToken()))<SUB>5</SUB>>", "54": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(nextToken,nextToken())<SUB>5</SUB>>", "58": "<(LOCAL,int[] heat: int[])<SUB>6</SUB>>", "60": "<(IDENTIFIER,heat,int[] heat = new int[n])<SUB>6</SUB>>", "62": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "64": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "66": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>7</SUB>>", "67": "<(readLine,readLine())<SUB>7</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "73": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,heat[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,heat[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "85": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>9</SUB>>", "87": "<(IDENTIFIER,st,nextToken())<SUB>9</SUB>>", "89": "<(IDENTIFIER,max,max = 0)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,pre = new int[n + 1])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "95": "<(IDENTIFIER,n,n + 1)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,pre[0] = 0)<SUB>13</SUB>>", "99": "<(IDENTIFIER,pre,pre[0] = 0)<SUB>13</SUB>>", "101": "<(LITERAL,0,pre[0] = 0)<SUB>13</SUB>>", "103": "<(LOCAL,int i: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,pre[i + 1] = pre[i] + heat[i])<SUB>15</SUB>>", "115": "<(IDENTIFIER,pre,pre[i + 1] = pre[i] + heat[i])<SUB>15</SUB>>", "117": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.addition,pre[i] + heat[i])<SUB>15</SUB>>", "121": "<(IDENTIFIER,pre,pre[i] + heat[i])<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,heat[i])<SUB>15</SUB>>", "125": "<(IDENTIFIER,i,pre[i] + heat[i])<SUB>15</SUB>>", "127": "<(LOCAL,int i: int)<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,int i = k)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>17</SUB>>", "133": "<(IDENTIFIER,n,i &lt;= n)<SUB>17</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "137": "<(findIntensity,findIntensity(i))<SUB>18</SUB>>", "139": "<(IDENTIFIER,i,findIntensity(i))<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "143": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}