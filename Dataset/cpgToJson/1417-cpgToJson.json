{"edges": [["17", "19"], ["17", "189"], ["17", "190"], ["17", "191"], ["19", "20"], ["19", "21"], ["19", "27"], ["19", "28"], ["19", "34"], ["19", "45"], ["19", "56"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "44"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "55"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["56", "57"], ["56", "72"], ["56", "79"], ["57", "58"], ["57", "71"], ["58", "59"], ["58", "68"], ["59", "60"], ["59", "67"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["72", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "86"], ["80", "91"], ["80", "92"], ["80", "97"], ["80", "184"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "112"], ["101", "113"], ["101", "130"], ["101", "131"], ["101", "148"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "127"], ["116", "117"], ["116", "126"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "145"], ["134", "135"], ["134", "144"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "152"], ["148", "156"], ["149", "150"], ["149", "151"], ["152", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["157", "158"], ["158", "159"], ["158", "166"], ["158", "178"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["172", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["21", "32"], ["28", "35"], ["23", "21"], ["30", "28"], ["35", "42"], ["35", "46"], ["46", "53"], ["46", "63"], ["57", "76"], ["57", "82"], ["25", "23"], ["32", "30"], ["39", "44"], ["44", "191"], ["50", "55"], ["55", "191"], ["58", "57"], ["73", "191"], ["40", "39"], ["51", "50"], ["59", "68"], ["68", "58"], ["74", "77"], ["77", "73"], ["82", "88"], ["86", "96"], ["92", "98"], ["184", "191"], ["42", "40"], ["53", "51"], ["60", "59"], ["76", "74"], ["88", "86"], ["94", "92"], ["98", "108"], ["98", "187"], ["185", "184"], ["61", "60"], ["96", "94"], ["103", "123"], ["113", "139"], ["131", "149"], ["187", "185"], ["63", "61"], ["105", "103"], ["115", "113"], ["133", "131"], ["149", "153"], ["149", "160"], ["107", "105"], ["116", "127"], ["127", "115"], ["134", "145"], ["145", "133"], ["153", "98"], ["108", "107"], ["117", "116"], ["135", "134"], ["119", "117"], ["137", "135"], ["159", "167"], ["159", "181"], ["121", "119"], ["138", "137"], ["160", "159"], ["160", "163"], ["163", "159"], ["167", "176"], ["170", "98"], ["179", "98"], ["123", "121"], ["139", "138"], ["172", "170"], ["181", "179"], ["175", "172"], ["176", "175"], ["17", "25"], ["44", "191"], ["55", "191"], ["18", "191"], ["21", "191"], ["28", "191"], ["30", "191"], ["30", "191"], ["28", "191"], ["28", "191"], ["35", "191"], ["35", "191"], ["39", "191"], ["39", "191"], ["17", "18"], ["23", "21"], ["23", "21"], ["30", "28"], ["30", "28"], ["25", "23"], ["17", "23"], ["32", "30"], ["17", "30"], ["21", "35"], ["17", "35"], ["17", "44"], ["35", "46"], ["17", "46"], ["28", "46"], ["17", "55"], ["58", "57"], ["58", "57"], ["46", "57"], ["17", "57"], ["17", "25"], ["23", "32"], ["17", "32"], ["17", "39"], ["17", "50"], ["59", "58"], ["59", "58"], ["68", "58"], ["68", "58"], ["77", "73"], ["17", "82"], ["68", "86"], ["17", "86"], ["60", "59"], ["60", "59"], ["17", "59"], ["61", "68"], ["17", "68"], ["17", "77"], ["92", "184"], ["170", "184"], ["17", "184"], ["61", "60"], ["61", "60"], ["17", "60"], ["68", "88"], ["17", "88"], ["82", "98"], ["179", "98"], ["17", "98"], ["108", "98"], ["86", "98"], ["108", "98"], ["167", "98"], ["153", "98"], ["108", "103"], ["17", "103"], ["107", "103"], ["107", "103"], ["115", "113"], ["115", "113"], ["133", "131"], ["133", "131"], ["17", "61"], ["46", "61"], ["46", "63"], ["17", "63"], ["108", "105"], ["17", "105"], ["107", "105"], ["107", "105"], ["116", "115"], ["116", "115"], ["127", "115"], ["127", "115"], ["134", "133"], ["134", "133"], ["145", "133"], ["145", "133"], ["57", "149"], ["160", "149"], ["163", "149"], ["17", "149"], ["113", "149"], ["145", "153"], ["17", "153"], ["108", "107"], ["108", "107"], ["17", "107"], ["117", "116"], ["117", "116"], ["17", "116"], ["117", "127"], ["17", "127"], ["135", "134"], ["135", "134"], ["17", "134"], ["135", "145"], ["17", "145"], ["98", "108"], ["17", "108"], ["98", "108"], ["123", "117"], ["17", "117"], ["123", "117"], ["139", "135"], ["17", "135"], ["139", "135"], ["17", "119"], ["123", "119"], ["123", "119"], ["139", "137"], ["139", "137"], ["17", "137"], ["160", "159"], ["160", "159"], ["163", "159"], ["163", "159"], ["145", "167"], ["17", "167"], ["172", "170"], ["172", "170"], ["172", "170"], ["145", "179"], ["17", "179"], ["17", "121"], ["123", "121"], ["123", "121"], ["139", "138"], ["139", "138"], ["17", "138"], ["149", "160"], ["17", "160"], ["149", "160"], ["160", "163"], ["17", "163"], ["131", "163"], ["103", "123"], ["17", "123"], ["17", "139"], ["68", "139"], ["127", "139"], ["30", "172"], ["17", "172"], ["92", "172"], ["170", "172"], ["145", "172"], ["145", "181"], ["17", "181"], ["17", "175"], ["145", "175"], ["35", "42"], ["35", "40"], ["35", "44"], ["35", "46"], ["35", "39"], ["46", "68"], ["46", "60"], ["46", "51"], ["46", "57"], ["46", "50"], ["46", "59"], ["46", "58"], ["46", "61"], ["46", "53"], ["46", "63"], ["46", "55"], ["57", "94"], ["57", "73"], ["57", "96"], ["57", "77"], ["57", "98"], ["57", "185"], ["57", "74"], ["57", "92"], ["57", "76"], ["57", "187"], ["57", "184"], ["57", "88"], ["57", "86"], ["57", "82"], ["98", "107"], ["98", "115"], ["98", "98"], ["98", "113"], ["98", "145"], ["98", "131"], ["98", "149"], ["98", "103"], ["98", "119"], ["98", "121"], ["98", "134"], ["98", "138"], ["98", "137"], ["98", "127"], ["98", "139"], ["98", "108"], ["98", "116"], ["98", "123"], ["98", "105"], ["98", "135"], ["98", "117"], ["98", "133"], ["149", "153"], ["149", "160"], ["149", "159"], ["159", "167"], ["159", "179"], ["159", "170"], ["159", "181"], ["159", "176"], ["159", "175"], ["159", "172"], ["160", "163"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,long n = parseLong(next()))<SUB>2</SUB>>", "23": "<(parseLong,parseLong(next()))<SUB>2</SUB>>", "25": "<(next,next())<SUB>2</SUB>>", "27": "<(LOCAL,long k: long)<SUB>3</SUB>>", "29": "<(IDENTIFIER,k,long k = parseLong(next()))<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,parseLong(next()))<SUB>3</SUB>>", "33": "<(IDENTIFIER,this,next())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.equals,n == 1)<SUB>4</SUB>>", "37": "<(LITERAL,1,n == 1)<SUB>4</SUB>>", "39": "<(println,System.out.println(0))<SUB>5</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(0))<SUB>5</SUB>>", "43": "<(LITERAL,0,System.out.println(0))<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n &lt;= k),if (n &lt;= k))<SUB>8</SUB>>", "47": "<(IDENTIFIER,n,n &lt;= k)<SUB>8</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "53": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "55": "<(RETURN,return;,return;)<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.lessThan,(((k * (k + 1)) / 2) - 1) - (k - 2) &lt; n)<SUB>12</SUB>>", "59": "<(&lt;operator&gt;.subtraction,((k * (k + 1)) / 2) - 1)<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.multiplication,k * (k + 1))<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.addition,k + 1)<SUB>12</SUB>>", "65": "<(LITERAL,1,k + 1)<SUB>12</SUB>>", "67": "<(LITERAL,1,((k * (k + 1)) / 2) - 1)<SUB>12</SUB>>", "69": "<(IDENTIFIER,k,k - 2)<SUB>12</SUB>>", "71": "<(IDENTIFIER,n,(((k * (k + 1)) / 2) - 1) - (k - 2) &lt; n)<SUB>12</SUB>>", "73": "<(println,System.out.println(-1))<SUB>13</SUB>>", "75": "<(IDENTIFIER,System,System.out.println(-1))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.minus,-1)<SUB>13</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "81": "<(LOCAL,long lo: long)<SUB>15</SUB>>", "83": "<(IDENTIFIER,lo,long lo = 1)<SUB>15</SUB>>", "85": "<(LOCAL,long hi: long)<SUB>16</SUB>>", "87": "<(IDENTIFIER,hi,long hi = k + 1)<SUB>16</SUB>>", "89": "<(IDENTIFIER,k,k + 1)<SUB>16</SUB>>", "91": "<(LOCAL,int best: int)<SUB>17</SUB>>", "93": "<(IDENTIFIER,best,int best = Integer.MAX_VALUE)<SUB>17</SUB>>", "95": "<(IDENTIFIER,Integer,int best = Integer.MAX_VALUE)<SUB>17</SUB>>", "97": "<(CONTROL_STRUCTURE,while (lo &lt; hi),while (lo &lt; hi))<SUB>18</SUB>>", "99": "<(IDENTIFIER,lo,lo &lt; hi)<SUB>18</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,long mid = lo + ((hi - lo) / 2))<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.addition,lo + ((hi - lo) / 2))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.division,(hi - lo) / 2)<SUB>19</SUB>>", "109": "<(IDENTIFIER,hi,hi - lo)<SUB>19</SUB>>", "111": "<(LITERAL,2,(hi - lo) / 2)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.assignment,long first = ((mid * (2 + (2 + (mid - 1)))) / 2) - (mid - 1))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.subtraction,((mid * (2 + (2 + (mid - 1)))) / 2) - (mid - 1))<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.multiplication,mid * (2 + (2 + (mid - 1))))<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.addition,2 + (2 + (mid - 1)))<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.addition,2 + (mid - 1))<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>20</SUB>>", "125": "<(LITERAL,1,mid - 1)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>20</SUB>>", "129": "<(LITERAL,1,mid - 1)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignment,long last = ((mid * (k - mid + 1 + k)) / 2) - (mid - 1))<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.subtraction,((mid * (k - mid + 1 + k)) / 2) - (mid - 1))<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.multiplication,mid * (k - mid + 1 + k))<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.addition,k - mid + 1 + k)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.subtraction,k - mid)<SUB>21</SUB>>", "141": "<(IDENTIFIER,mid,k - mid)<SUB>21</SUB>>", "143": "<(IDENTIFIER,k,k - mid + 1 + k)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>21</SUB>>", "147": "<(LITERAL,1,mid - 1)<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.lessThan,n &lt; first)<SUB>22</SUB>>", "151": "<(IDENTIFIER,first,n &lt; first)<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>23</SUB>>", "155": "<(IDENTIFIER,mid,hi = mid)<SUB>23</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "159": "<(&lt;operator&gt;.logicalAnd,n &gt;= first &amp;&amp; n &lt;= last)<SUB>25</SUB>>", "161": "<(IDENTIFIER,n,n &gt;= first)<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= last)<SUB>25</SUB>>", "165": "<(IDENTIFIER,last,n &lt;= last)<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>26</SUB>>", "169": "<(IDENTIFIER,mid,hi = mid)<SUB>26</SUB>>", "171": "<(IDENTIFIER,best,best = min(best, (int) mid))<SUB>27</SUB>>", "173": "<(IDENTIFIER,this,min(best, (int) mid))<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.cast,(int) mid)<SUB>27</SUB>>", "177": "<(IDENTIFIER,mid,(int) mid)<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.assignment,lo = mid + 1)<SUB>29</SUB>>", "181": "<(&lt;operator&gt;.addition,mid + 1)<SUB>29</SUB>>", "183": "<(LITERAL,1,mid + 1)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "187": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}