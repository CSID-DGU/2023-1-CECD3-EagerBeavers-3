{"edges": [["19", "20"], ["19", "21"], ["19", "524"], ["19", "525"], ["19", "526"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "42"], ["21", "72"], ["21", "73"], ["21", "78"], ["21", "97"], ["21", "169"], ["21", "170"], ["21", "175"], ["21", "194"], ["21", "257"], ["21", "274"], ["21", "275"], ["21", "281"], ["21", "299"], ["21", "300"], ["21", "308"], ["21", "461"], ["21", "462"], ["21", "469"], ["21", "470"], ["21", "473"], ["21", "519"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "91"], ["89", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "105"], ["97", "107"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["119", "126"], ["119", "129"], ["119", "131"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "158"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["175", "180"], ["175", "183"], ["175", "185"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["186", "187"], ["186", "188"], ["186", "191"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "204"], ["194", "206"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["218", "219"], ["218", "220"], ["218", "223"], ["218", "226"], ["218", "228"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["226", "227"], ["228", "229"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["235", "237"], ["235", "242"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "250"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "271"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "277"], ["277", "278"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["281", "286"], ["281", "289"], ["281", "291"], ["283", "284"], ["283", "285"], ["286", "287"], ["286", "288"], ["289", "290"], ["291", "292"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "297"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "306"], ["302", "307"], ["303", "304"], ["303", "305"], ["308", "309"], ["308", "310"], ["308", "313"], ["308", "318"], ["308", "320"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["318", "319"], ["320", "321"], ["321", "322"], ["321", "323"], ["321", "326"], ["321", "329"], ["321", "334"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["334", "343"], ["336", "337"], ["336", "338"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["343", "352"], ["343", "355"], ["343", "360"], ["345", "346"], ["345", "347"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "351"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "359"], ["360", "361"], ["360", "362"], ["360", "369"], ["362", "363"], ["362", "364"], ["364", "365"], ["364", "366"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "379"], ["369", "392"], ["370", "371"], ["370", "372"], ["372", "373"], ["372", "376"], ["373", "374"], ["373", "375"], ["376", "377"], ["376", "378"], ["379", "380"], ["379", "387"], ["380", "381"], ["380", "386"], ["381", "382"], ["381", "385"], ["382", "383"], ["382", "384"], ["387", "388"], ["387", "391"], ["388", "389"], ["388", "390"], ["392", "393"], ["393", "394"], ["393", "395"], ["393", "398"], ["393", "452"], ["395", "396"], ["395", "397"], ["398", "399"], ["398", "400"], ["398", "411"], ["398", "414"], ["398", "419"], ["400", "401"], ["400", "402"], ["402", "403"], ["402", "408"], ["403", "404"], ["403", "405"], ["405", "406"], ["405", "407"], ["408", "409"], ["408", "410"], ["411", "412"], ["411", "413"], ["414", "415"], ["414", "416"], ["416", "417"], ["416", "418"], ["419", "420"], ["419", "421"], ["419", "429"], ["421", "422"], ["421", "423"], ["423", "424"], ["423", "425"], ["425", "426"], ["425", "427"], ["427", "428"], ["429", "430"], ["429", "431"], ["431", "432"], ["431", "433"], ["431", "434"], ["434", "435"], ["434", "436"], ["434", "447"], ["436", "437"], ["436", "446"], ["437", "438"], ["437", "445"], ["438", "439"], ["438", "440"], ["440", "441"], ["440", "442"], ["442", "443"], ["442", "444"], ["447", "448"], ["447", "451"], ["448", "449"], ["448", "450"], ["452", "453"], ["452", "460"], ["453", "454"], ["453", "459"], ["454", "455"], ["454", "458"], ["455", "456"], ["455", "457"], ["462", "463"], ["462", "464"], ["464", "465"], ["464", "468"], ["465", "466"], ["465", "467"], ["470", "471"], ["470", "472"], ["473", "474"], ["473", "475"], ["473", "478"], ["473", "481"], ["473", "483"], ["475", "476"], ["475", "477"], ["478", "479"], ["478", "480"], ["481", "482"], ["483", "484"], ["484", "485"], ["484", "486"], ["484", "489"], ["484", "492"], ["484", "494"], ["486", "487"], ["486", "488"], ["489", "490"], ["489", "491"], ["492", "493"], ["494", "495"], ["494", "500"], ["495", "496"], ["495", "499"], ["496", "497"], ["496", "498"], ["500", "501"], ["500", "502"], ["502", "503"], ["502", "504"], ["502", "505"], ["505", "506"], ["505", "507"], ["505", "514"], ["507", "508"], ["507", "513"], ["508", "509"], ["508", "512"], ["509", "510"], ["509", "511"], ["514", "515"], ["514", "518"], ["515", "516"], ["515", "517"], ["519", "520"], ["519", "523"], ["520", "521"], ["520", "522"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "44"], ["73", "80"], ["170", "177"], ["275", "283"], ["300", "310"], ["462", "470"], ["470", "475"], ["519", "526"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "47"], ["47", "55"], ["47", "75"], ["50", "47"], ["75", "73"], ["80", "83"], ["83", "91"], ["83", "99"], ["86", "83"], ["99", "102"], ["102", "110"], ["102", "172"], ["105", "102"], ["172", "170"], ["177", "180"], ["180", "188"], ["180", "196"], ["183", "180"], ["196", "201"], ["199", "209"], ["199", "258"], ["204", "201"], ["258", "265"], ["258", "278"], ["277", "275"], ["283", "286"], ["286", "295"], ["286", "303"], ["289", "286"], ["302", "300"], ["310", "315"], ["313", "323"], ["313", "465"], ["318", "315"], ["464", "462"], ["475", "478"], ["478", "486"], ["478", "522"], ["481", "478"], ["520", "519"], ["89", "86"], ["186", "183"], ["201", "199"], ["262", "271"], ["271", "278"], ["278", "277"], ["292", "289"], ["303", "302"], ["315", "313"], ["465", "464"], ["522", "520"], ["55", "58"], ["58", "66"], ["58", "50"], ["61", "58"], ["91", "96"], ["94", "89"], ["110", "113"], ["113", "123"], ["113", "105"], ["116", "113"], ["188", "193"], ["191", "186"], ["209", "212"], ["212", "220"], ["212", "204"], ["215", "212"], ["263", "267"], ["266", "262"], ["293", "292"], ["323", "326"], ["326", "340"], ["326", "318"], ["329", "326"], ["486", "489"], ["489", "496"], ["489", "481"], ["492", "489"], ["64", "61"], ["96", "94"], ["193", "191"], ["265", "263"], ["267", "266"], ["295", "293"], ["331", "329"], ["336", "349"], ["500", "492"], ["65", "70"], ["70", "64"], ["121", "126"], ["126", "134"], ["126", "116"], ["129", "126"], ["220", "223"], ["223", "231"], ["223", "215"], ["226", "223"], ["338", "336"], ["345", "352"], ["352", "366"], ["352", "331"], ["355", "352"], ["496", "492"], ["496", "509"], ["502", "500"], ["66", "65"], ["123", "121"], ["132", "160"], ["158", "129"], ["229", "226"], ["340", "338"], ["347", "345"], ["357", "355"], ["362", "373"], ["505", "502"], ["133", "141"], ["138", "132"], ["159", "165"], ["164", "158"], ["230", "238"], ["235", "229"], ["349", "347"], ["364", "362"], ["370", "382"], ["370", "395"], ["379", "357"], ["507", "515"], ["514", "505"], ["134", "133"], ["140", "149"], ["145", "138"], ["160", "159"], ["165", "164"], ["231", "230"], ["237", "246"], ["242", "235"], ["366", "364"], ["372", "370"], ["380", "388"], ["387", "379"], ["508", "507"], ["515", "514"], ["141", "140"], ["147", "145"], ["238", "237"], ["244", "242"], ["373", "376"], ["376", "372"], ["381", "380"], ["388", "387"], ["395", "405"], ["452", "357"], ["509", "508"], ["148", "154"], ["153", "147"], ["245", "251"], ["250", "244"], ["382", "381"], ["400", "411"], ["411", "427"], ["411", "455"], ["414", "411"], ["453", "452"], ["149", "148"], ["154", "153"], ["246", "245"], ["251", "254"], ["254", "250"], ["402", "400"], ["416", "414"], ["421", "442"], ["429", "416"], ["454", "453"], ["403", "408"], ["408", "402"], ["423", "421"], ["431", "429"], ["455", "454"], ["405", "403"], ["425", "423"], ["434", "431"], ["427", "425"], ["436", "448"], ["447", "434"], ["437", "436"], ["448", "447"], ["438", "437"], ["440", "438"], ["442", "440"], ["19", "24"], ["20", "526"], ["22", "526"], ["25", "526"], ["27", "526"], ["34", "526"], ["32", "526"], ["32", "526"], ["37", "526"], ["37", "526"], ["37", "526"], ["73", "526"], ["73", "526"], ["102", "526"], ["170", "526"], ["170", "526"], ["170", "526"], ["201", "526"], ["199", "526"], ["199", "526"], ["258", "526"], ["262", "526"], ["262", "526"], ["271", "526"], ["271", "526"], ["275", "526"], ["275", "526"], ["275", "526"], ["300", "526"], ["300", "526"], ["300", "526"], ["310", "526"], ["313", "526"], ["313", "526"], ["462", "526"], ["464", "526"], ["462", "526"], ["462", "526"], ["470", "526"], ["475", "526"], ["478", "526"], ["478", "526"], ["478", "526"], ["519", "526"], ["519", "526"], ["519", "526"], ["486", "526"], ["489", "526"], ["489", "526"], ["481", "526"], ["496", "526"], ["502", "526"], ["505", "526"], ["505", "526"], ["502", "526"], ["500", "526"], ["500", "526"], ["492", "526"], ["323", "526"], ["326", "526"], ["326", "526"], ["318", "526"], ["340", "526"], ["336", "526"], ["336", "526"], ["347", "526"], ["345", "526"], ["345", "526"], ["352", "526"], ["352", "526"], ["329", "526"], ["366", "526"], ["362", "526"], ["362", "526"], ["372", "526"], ["376", "526"], ["372", "526"], ["370", "526"], ["370", "526"], ["395", "526"], ["403", "526"], ["402", "526"], ["408", "526"], ["402", "526"], ["400", "526"], ["400", "526"], ["411", "526"], ["411", "526"], ["452", "526"], ["452", "526"], ["452", "526"], ["421", "526"], ["425", "526"], ["421", "526"], ["421", "526"], ["431", "526"], ["442", "526"], ["440", "526"], ["434", "526"], ["434", "526"], ["431", "526"], ["429", "526"], ["429", "526"], ["414", "526"], ["379", "526"], ["379", "526"], ["379", "526"], ["355", "526"], ["292", "526"], ["292", "526"], ["289", "526"], ["209", "526"], ["212", "526"], ["212", "526"], ["204", "526"], ["220", "526"], ["223", "526"], ["223", "526"], ["215", "526"], ["229", "526"], ["235", "526"], ["244", "526"], ["244", "526"], ["242", "526"], ["235", "526"], ["229", "526"], ["229", "526"], ["226", "526"], ["186", "526"], ["186", "526"], ["186", "526"], ["186", "526"], ["183", "526"], ["110", "526"], ["113", "526"], ["113", "526"], ["105", "526"], ["121", "526"], ["121", "526"], ["126", "526"], ["126", "526"], ["116", "526"], ["138", "526"], ["147", "526"], ["147", "526"], ["145", "526"], ["138", "526"], ["132", "526"], ["132", "526"], ["158", "526"], ["158", "526"], ["158", "526"], ["129", "526"], ["89", "526"], ["89", "526"], ["89", "526"], ["89", "526"], ["86", "526"], ["55", "526"], ["58", "526"], ["58", "526"], ["50", "526"], ["64", "526"], ["70", "526"], ["64", "526"], ["64", "526"], ["61", "526"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["39", "37"], ["75", "73"], ["172", "170"], ["277", "275"], ["302", "300"], ["302", "300"], ["464", "462"], ["464", "462"], ["19", "470"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "80"], ["19", "99"], ["19", "177"], ["19", "196"], ["19", "283"], ["19", "310"], ["19", "475"], ["271", "519"], ["470", "519"], ["500", "519"], ["19", "519"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["32", "39"], ["44", "47"], ["50", "47"], ["19", "47"], ["39", "47"], ["47", "50"], ["19", "50"], ["47", "75"], ["19", "75"], ["80", "83"], ["86", "83"], ["19", "83"], ["75", "83"], ["83", "86"], ["19", "86"], ["99", "102"], ["105", "102"], ["19", "102"], ["39", "102"], ["58", "102"], ["102", "105"], ["19", "105"], ["83", "172"], ["113", "172"], ["19", "172"], ["177", "180"], ["183", "180"], ["19", "180"], ["172", "180"], ["180", "183"], ["19", "183"], ["196", "199"], ["204", "199"], ["19", "199"], ["201", "199"], ["201", "199"], ["199", "204"], ["19", "204"], ["180", "258"], ["212", "258"], ["19", "258"], ["278", "277"], ["278", "277"], ["283", "286"], ["289", "286"], ["19", "286"], ["278", "286"], ["19", "289"], ["295", "289"], ["295", "292"], ["19", "292"], ["303", "302"], ["303", "302"], ["19", "302"], ["310", "313"], ["318", "313"], ["19", "313"], ["315", "313"], ["315", "313"], ["347", "318"], ["370", "318"], ["403", "318"], ["440", "318"], ["19", "318"], ["313", "318"], ["465", "464"], ["465", "464"], ["19", "464"], ["475", "478"], ["481", "478"], ["19", "478"], ["465", "478"], ["489", "478"], ["478", "481"], ["496", "481"], ["19", "481"], ["19", "55"], ["19", "89"], ["73", "89"], ["19", "110"], ["89", "186"], ["19", "186"], ["170", "186"], ["89", "186"], ["102", "201"], ["19", "201"], ["19", "209"], ["262", "271"], ["19", "271"], ["19", "278"], ["258", "278"], ["19", "303"], ["286", "303"], ["19", "315"], ["302", "315"], ["313", "323"], ["19", "323"], ["331", "329"], ["331", "329"], ["19", "465"], ["315", "465"], ["19", "486"], ["55", "58"], ["61", "58"], ["19", "58"], ["39", "58"], ["58", "61"], ["19", "61"], ["70", "64"], ["110", "113"], ["116", "113"], ["19", "113"], ["83", "113"], ["126", "113"], ["19", "116"], ["113", "116"], ["209", "212"], ["215", "212"], ["19", "212"], ["180", "212"], ["223", "212"], ["212", "215"], ["19", "215"], ["323", "326"], ["329", "326"], ["19", "326"], ["19", "329"], ["275", "336"], ["486", "489"], ["492", "489"], ["19", "489"], ["478", "489"], ["496", "492"], ["19", "492"], ["502", "500"], ["502", "500"], ["502", "500"], ["113", "121"], ["19", "121"], ["19", "220"], ["19", "295"], ["286", "295"], ["340", "331"], ["19", "331"], ["347", "345"], ["347", "345"], ["357", "355"], ["357", "355"], ["34", "70"], ["19", "70"], ["121", "126"], ["129", "126"], ["19", "126"], ["113", "126"], ["126", "129"], ["19", "129"], ["138", "132"], ["138", "132"], ["138", "132"], ["132", "158"], ["220", "223"], ["226", "223"], ["19", "223"], ["212", "223"], ["223", "226"], ["19", "226"], ["235", "229"], ["235", "229"], ["235", "229"], ["345", "352"], ["355", "352"], ["19", "352"], ["19", "355"], ["275", "362"], ["478", "496"], ["19", "496"], ["489", "496"], ["505", "502"], ["19", "502"], ["470", "502"], ["500", "502"], ["505", "502"], ["505", "502"], ["113", "123"], ["19", "123"], ["366", "340"], ["186", "340"], ["89", "340"], ["19", "340"], ["326", "340"], ["370", "347"], ["403", "347"], ["440", "347"], ["19", "347"], ["313", "347"], ["349", "347"], ["349", "347"], ["366", "357"], ["19", "357"], ["502", "505"], ["431", "505"], ["235", "505"], ["138", "505"], ["19", "505"], ["145", "138"], ["19", "138"], ["132", "138"], ["145", "138"], ["242", "235"], ["19", "235"], ["229", "235"], ["242", "235"], ["19", "349"], ["336", "349"], ["347", "370"], ["403", "370"], ["440", "370"], ["19", "370"], ["372", "370"], ["372", "370"], ["138", "145"], ["19", "145"], ["147", "145"], ["147", "145"], ["235", "242"], ["138", "242"], ["19", "242"], ["244", "242"], ["244", "242"], ["340", "366"], ["19", "366"], ["352", "366"], ["373", "372"], ["373", "372"], ["376", "372"], ["376", "372"], ["19", "395"], ["395", "452"], ["429", "452"], ["19", "452"], ["147", "244"], ["19", "373"], ["349", "373"], ["405", "373"], ["19", "376"], ["362", "376"], ["402", "400"], ["402", "400"], ["416", "414"], ["416", "414"], ["400", "411"], ["414", "411"], ["19", "411"], ["19", "414"], ["275", "421"], ["431", "429"], ["431", "429"], ["431", "429"], ["199", "254"], ["19", "254"], ["403", "402"], ["403", "402"], ["408", "402"], ["408", "402"], ["425", "416"], ["19", "416"], ["370", "403"], ["19", "403"], ["405", "403"], ["405", "403"], ["19", "408"], ["376", "408"], ["434", "431"], ["19", "431"], ["395", "431"], ["429", "431"], ["434", "431"], ["434", "431"], ["19", "405"], ["373", "405"], ["427", "425"], ["19", "425"], ["431", "434"], ["235", "434"], ["138", "434"], ["19", "434"], ["158", "434"], ["411", "427"], ["19", "427"], ["403", "440"], ["19", "440"], ["442", "440"], ["442", "440"], ["19", "442"], ["408", "442"], ["47", "50"], ["47", "55"], ["47", "58"], ["47", "47"], ["83", "86"], ["83", "94"], ["83", "96"], ["83", "91"], ["83", "89"], ["83", "83"], ["102", "102"], ["102", "113"], ["102", "105"], ["102", "110"], ["180", "188"], ["180", "186"], ["180", "180"], ["180", "191"], ["180", "183"], ["180", "193"], ["199", "209"], ["199", "204"], ["199", "201"], ["199", "199"], ["199", "212"], ["258", "262"], ["258", "267"], ["258", "265"], ["258", "263"], ["258", "271"], ["258", "266"], ["286", "292"], ["286", "289"], ["286", "293"], ["286", "286"], ["286", "295"], ["313", "326"], ["313", "315"], ["313", "323"], ["313", "318"], ["313", "313"], ["478", "486"], ["478", "478"], ["478", "489"], ["478", "481"], ["58", "61"], ["58", "70"], ["58", "66"], ["58", "65"], ["58", "64"], ["58", "58"], ["113", "116"], ["113", "123"], ["113", "113"], ["113", "121"], ["113", "126"], ["212", "215"], ["212", "223"], ["212", "212"], ["212", "220"], ["326", "326"], ["326", "338"], ["326", "349"], ["326", "336"], ["326", "340"], ["326", "329"], ["326", "347"], ["326", "352"], ["326", "345"], ["326", "331"], ["489", "492"], ["489", "489"], ["489", "496"], ["126", "154"], ["126", "129"], ["126", "134"], ["126", "138"], ["126", "148"], ["126", "158"], ["126", "160"], ["126", "141"], ["126", "159"], ["126", "140"], ["126", "147"], ["126", "133"], ["126", "145"], ["126", "149"], ["126", "132"], ["126", "153"], ["126", "164"], ["126", "126"], ["126", "165"], ["223", "230"], ["223", "226"], ["223", "242"], ["223", "238"], ["223", "237"], ["223", "254"], ["223", "229"], ["223", "244"], ["223", "245"], ["223", "223"], ["223", "231"], ["223", "246"], ["223", "235"], ["223", "251"], ["223", "250"], ["352", "376"], ["352", "370"], ["352", "362"], ["352", "355"], ["352", "364"], ["352", "372"], ["352", "357"], ["352", "366"], ["352", "373"], ["352", "352"], ["496", "514"], ["496", "505"], ["496", "509"], ["496", "507"], ["496", "502"], ["496", "515"], ["496", "508"], ["496", "500"], ["370", "403"], ["370", "452"], ["370", "408"], ["370", "382"], ["370", "380"], ["370", "388"], ["370", "405"], ["370", "402"], ["370", "379"], ["370", "411"], ["370", "395"], ["370", "400"], ["370", "387"], ["370", "455"], ["370", "453"], ["370", "381"], ["370", "454"], ["411", "437"], ["411", "416"], ["411", "414"], ["411", "442"], ["411", "448"], ["411", "425"], ["411", "447"], ["411", "429"], ["411", "411"], ["411", "434"], ["411", "427"], ["411", "440"], ["411", "421"], ["411", "423"], ["411", "431"], ["411", "436"], ["411", "438"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int M: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,M,int M = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,scanner,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[][] matrix = new int[N][M])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[N][M])>", "41": "<(IDENTIFIER,M,new int[N][M])<SUB>5</SUB>>", "43": "<(LOCAL,int i: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>6</SUB>>", "49": "<(IDENTIFIER,N,i &lt; N)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,j,j &lt; M)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,matrix[i][j])<SUB>8</SUB>>", "67": "<(IDENTIFIER,matrix,matrix[i][j] = nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,j,matrix[i][j] = nextInt())<SUB>8</SUB>>", "71": "<(IDENTIFIER,scanner,nextInt())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[][] maxDist = new int[N][N])<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[N][N])>", "77": "<(IDENTIFIER,N,new int[N][N])<SUB>11</SUB>>", "79": "<(LOCAL,int i: int)<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>12</SUB>>", "85": "<(IDENTIFIER,N,i &lt; N)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "89": "<(fill,fill(maxDist[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,maxDist[i])<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,fill(maxDist[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "95": "<(IDENTIFIER,Integer,fill(maxDist[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; M); i++),for (int i = 0; Some(i &lt; M); i++))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "101": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "103": "<(IDENTIFIER,i,i &lt; M)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "109": "<(LOCAL,int j: int)<SUB>16</SUB>>", "111": "<(IDENTIFIER,j,int j = 0)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>16</SUB>>", "115": "<(IDENTIFIER,N,j &lt; N)<SUB>16</SUB>>", "117": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int k = j + 1; Some(k &lt; N); k++),for (int k = j + 1; Some(k &lt; N); k++))<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.assignment,int k = j + 1)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.addition,j + 1)<SUB>17</SUB>>", "125": "<(LITERAL,1,j + 1)<SUB>17</SUB>>", "127": "<(IDENTIFIER,k,k &lt; N)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,k++)<SUB>17</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,maxDist[j][k])<SUB>18</SUB>>", "135": "<(IDENTIFIER,maxDist,maxDist[j][k] = Math.min(maxDist[j][k], Math.abs(matrix[k][i] - matrix[j][i])))<SUB>18</SUB>>", "137": "<(IDENTIFIER,k,maxDist[j][k] = Math.min(maxDist[j][k], Math.abs(matrix[k][i] - matrix[j][i])))<SUB>18</SUB>>", "139": "<(IDENTIFIER,Math,Math.min(maxDist[j][k], Math.abs(matrix[k][i] - matrix[j][i])))<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,maxDist[j])<SUB>18</SUB>>", "143": "<(IDENTIFIER,j,Math.min(maxDist[j][k], Math.abs(matrix[k][i] - matrix[j][i])))<SUB>18</SUB>>", "145": "<(abs,Math.abs(matrix[k][i] - matrix[j][i]))<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.subtraction,matrix[k][i] - matrix[j][i])<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,matrix[k])<SUB>18</SUB>>", "151": "<(IDENTIFIER,k,matrix[k][i] - matrix[j][i])<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,matrix[j][i])<SUB>18</SUB>>", "155": "<(IDENTIFIER,matrix,matrix[k][i] - matrix[j][i])<SUB>18</SUB>>", "157": "<(IDENTIFIER,i,matrix[k][i] - matrix[j][i])<SUB>18</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,maxDist[k][j])<SUB>19</SUB>>", "161": "<(IDENTIFIER,maxDist,maxDist[k][j] = maxDist[j][k])<SUB>19</SUB>>", "163": "<(IDENTIFIER,j,maxDist[k][j] = maxDist[j][k])<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,maxDist[j])<SUB>19</SUB>>", "167": "<(IDENTIFIER,j,maxDist[k][j] = maxDist[j][k])<SUB>19</SUB>>", "169": "<(LOCAL,int[][] distTop: int[][])<SUB>23</SUB>>", "171": "<(IDENTIFIER,distTop,int[][] distTop = new int[N][N])<SUB>23</SUB>>", "173": "<(IDENTIFIER,N,new int[N][N])<SUB>23</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "179": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "181": "<(IDENTIFIER,i,i &lt; N)<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "187": "<(IDENTIFIER,Arrays,fill(distTop[i], Integer.MAX_VALUE))<SUB>25</SUB>>", "189": "<(IDENTIFIER,distTop,fill(distTop[i], Integer.MAX_VALUE))<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>25</SUB>>", "193": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>25</SUB>>", "195": "<(LOCAL,int i: int)<SUB>27</SUB>>", "197": "<(IDENTIFIER,i,int i = 0)<SUB>27</SUB>>", "199": "<(&lt;operator&gt;.lessThan,i &lt; M - 1)<SUB>27</SUB>>", "201": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>27</SUB>>", "203": "<(LITERAL,1,M - 1)<SUB>27</SUB>>", "205": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); j++),for (int j = 0; Some(j &lt; N); j++))<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "211": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "213": "<(IDENTIFIER,j,j &lt; N)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "217": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "219": "<(LOCAL,int k: int)<SUB>29</SUB>>", "221": "<(IDENTIFIER,k,int k = 0)<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.lessThan,k &lt; N)<SUB>29</SUB>>", "225": "<(IDENTIFIER,N,k &lt; N)<SUB>29</SUB>>", "227": "<(IDENTIFIER,k,k++)<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.assignment,distTop[j][k] = Math.min(distTop[j][k], Math.abs(matrix[j][i] - matrix[k][i + 1])))<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,distTop[j])<SUB>30</SUB>>", "233": "<(IDENTIFIER,j,distTop[j][k] = Math.min(distTop[j][k], Math.abs(matrix[j][i] - matrix[k][i + 1])))<SUB>30</SUB>>", "235": "<(min,Math.min(distTop[j][k], Math.abs(matrix[j][i] - matrix[k][i + 1])))<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,distTop[j][k])<SUB>30</SUB>>", "239": "<(IDENTIFIER,distTop,Math.min(distTop[j][k], Math.abs(matrix[j][i] - matrix[k][i + 1])))<SUB>30</SUB>>", "241": "<(IDENTIFIER,k,Math.min(distTop[j][k], Math.abs(matrix[j][i] - matrix[k][i + 1])))<SUB>30</SUB>>", "243": "<(IDENTIFIER,Math,Math.abs(matrix[j][i] - matrix[k][i + 1]))<SUB>30</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,matrix[j][i])<SUB>30</SUB>>", "247": "<(IDENTIFIER,matrix,matrix[j][i] - matrix[k][i + 1])<SUB>30</SUB>>", "249": "<(IDENTIFIER,i,matrix[j][i] - matrix[k][i + 1])<SUB>30</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,matrix[k])<SUB>30</SUB>>", "253": "<(IDENTIFIER,k,matrix[j][i] - matrix[k][i + 1])<SUB>30</SUB>>", "255": "<(IDENTIFIER,i,i + 1)<SUB>30</SUB>>", "257": "<(CONTROL_STRUCTURE,if (N == 1),if (N == 1))<SUB>34</SUB>>", "259": "<(IDENTIFIER,N,N == 1)<SUB>34</SUB>>", "261": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "263": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "265": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,distTop[0])<SUB>35</SUB>>", "269": "<(LITERAL,0,System.out.println(distTop[0][0]))<SUB>35</SUB>>", "271": "<(exit,System.exit(0))<SUB>36</SUB>>", "273": "<(LITERAL,0,System.exit(0))<SUB>36</SUB>>", "275": "<(&lt;operator&gt;.assignment,int[] bitLoc = new int[1 &lt;&lt; N])<SUB>38</SUB>>", "277": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; N])>", "279": "<(LITERAL,1,1 &lt;&lt; N)<SUB>38</SUB>>", "281": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>39</SUB>>", "283": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>39</SUB>>", "285": "<(LITERAL,0,int i = 0)<SUB>39</SUB>>", "287": "<(IDENTIFIER,i,i &lt; N)<SUB>39</SUB>>", "289": "<(&lt;operator&gt;.postIncrement,i++)<SUB>39</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,bitLoc[1 &lt;&lt; i])<SUB>40</SUB>>", "295": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>40</SUB>>", "297": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>40</SUB>>", "299": "<(LOCAL,int[][][] dp: int[][][])<SUB>42</SUB>>", "301": "<(IDENTIFIER,dp,int[][][] dp = new int[1 &lt;&lt; N][N][N])<SUB>42</SUB>>", "303": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>42</SUB>>", "305": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>42</SUB>>", "307": "<(IDENTIFIER,N,new int[1 &lt;&lt; N][N][N])<SUB>42</SUB>>", "309": "<(LOCAL,int mask: int)<SUB>44</SUB>>", "311": "<(IDENTIFIER,mask,int mask = 1)<SUB>44</SUB>>", "313": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; N))<SUB>44</SUB>>", "315": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>44</SUB>>", "317": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>44</SUB>>", "319": "<(IDENTIFIER,mask,mask++)<SUB>44</SUB>>", "321": "<(CONTROL_STRUCTURE,for (int smask = mask; Some(smask &gt; 0); smask &amp;= (smask - 1)),for (int smask = mask; Some(smask &gt; 0); smask &amp;= (smask - 1)))<SUB>45</SUB>>", "323": "<(&lt;operator&gt;.assignment,int smask = mask)<SUB>45</SUB>>", "325": "<(IDENTIFIER,mask,int smask = mask)<SUB>45</SUB>>", "327": "<(IDENTIFIER,smask,smask &gt; 0)<SUB>45</SUB>>", "329": "<(&lt;operators&gt;.assignmentAnd,smask &amp;= smask - 1)<SUB>45</SUB>>", "331": "<(&lt;operator&gt;.subtraction,smask - 1)<SUB>45</SUB>>", "333": "<(LITERAL,1,smask - 1)<SUB>45</SUB>>", "335": "<(LOCAL,int i: int)<SUB>46</SUB>>", "337": "<(IDENTIFIER,i,int i = bitLoc[Integer.lowestOneBit(smask)])<SUB>46</SUB>>", "339": "<(IDENTIFIER,bitLoc,int i = bitLoc[Integer.lowestOneBit(smask)])<SUB>46</SUB>>", "341": "<(IDENTIFIER,Integer,Integer.lowestOneBit(smask))<SUB>46</SUB>>", "343": "<(CONTROL_STRUCTURE,for (int ss = mask ^ 1 &lt;&lt; i; Some(ss &gt; 0); ss &amp;= ss - 1),for (int ss = mask ^ 1 &lt;&lt; i; Some(ss &gt; 0); ss &amp;= ss - 1))<SUB>47</SUB>>", "345": "<(&lt;operator&gt;.assignment,int ss = mask ^ 1 &lt;&lt; i)<SUB>47</SUB>>", "347": "<(&lt;operator&gt;.xor,mask ^ 1 &lt;&lt; i)<SUB>47</SUB>>", "349": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>47</SUB>>", "351": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>47</SUB>>", "353": "<(IDENTIFIER,ss,ss &gt; 0)<SUB>47</SUB>>", "355": "<(&lt;operators&gt;.assignmentAnd,ss &amp;= ss - 1)<SUB>47</SUB>>", "357": "<(&lt;operator&gt;.subtraction,ss - 1)<SUB>47</SUB>>", "359": "<(LITERAL,1,ss - 1)<SUB>47</SUB>>", "361": "<(LOCAL,int j: int)<SUB>48</SUB>>", "363": "<(IDENTIFIER,j,int j = bitLoc[Integer.lowestOneBit(ss)])<SUB>48</SUB>>", "365": "<(IDENTIFIER,bitLoc,int j = bitLoc[Integer.lowestOneBit(ss)])<SUB>48</SUB>>", "367": "<(IDENTIFIER,Integer,Integer.lowestOneBit(ss))<SUB>48</SUB>>", "369": "<(CONTROL_STRUCTURE,if (mask == (1 &lt;&lt; i ^ 1 &lt;&lt; j)),if (mask == (1 &lt;&lt; i ^ 1 &lt;&lt; j)))<SUB>49</SUB>>", "371": "<(IDENTIFIER,mask,mask == (1 &lt;&lt; i ^ 1 &lt;&lt; j))<SUB>49</SUB>>", "373": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>49</SUB>>", "375": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>49</SUB>>", "377": "<(LITERAL,1,1 &lt;&lt; j)<SUB>49</SUB>>", "379": "<(&lt;operator&gt;.assignment,dp[mask][i][j] = maxDist[i][j])<SUB>50</SUB>>", "381": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>50</SUB>>", "383": "<(IDENTIFIER,dp,dp[mask][i][j] = maxDist[i][j])<SUB>50</SUB>>", "385": "<(IDENTIFIER,i,dp[mask][i][j] = maxDist[i][j])<SUB>50</SUB>>", "387": "<(&lt;operator&gt;.indexAccess,maxDist[i][j])<SUB>50</SUB>>", "389": "<(IDENTIFIER,maxDist,dp[mask][i][j] = maxDist[i][j])<SUB>50</SUB>>", "391": "<(IDENTIFIER,j,dp[mask][i][j] = maxDist[i][j])<SUB>50</SUB>>", "393": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "395": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>52</SUB>>", "397": "<(LITERAL,0,int x = 0)<SUB>52</SUB>>", "399": "<(LOCAL,int sss: int)<SUB>53</SUB>>", "401": "<(IDENTIFIER,sss,int sss = mask ^ 1 &lt;&lt; i ^ 1 &lt;&lt; j)<SUB>53</SUB>>", "403": "<(&lt;operator&gt;.xor,mask ^ 1 &lt;&lt; i)<SUB>53</SUB>>", "405": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>53</SUB>>", "407": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>53</SUB>>", "409": "<(LITERAL,1,1 &lt;&lt; j)<SUB>53</SUB>>", "411": "<(&lt;operator&gt;.greaterThan,sss &gt; 0)<SUB>53</SUB>>", "413": "<(LITERAL,0,sss &gt; 0)<SUB>53</SUB>>", "415": "<(IDENTIFIER,sss,sss &amp;= sss - 1)<SUB>53</SUB>>", "417": "<(IDENTIFIER,sss,sss - 1)<SUB>53</SUB>>", "419": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "421": "<(&lt;operator&gt;.assignment,int k = bitLoc[sss &amp; -sss])<SUB>54</SUB>>", "423": "<(&lt;operator&gt;.indexAccess,bitLoc[sss &amp; -sss])<SUB>54</SUB>>", "425": "<(&lt;operator&gt;.and,sss &amp; -sss)<SUB>54</SUB>>", "427": "<(&lt;operator&gt;.minus,-sss)<SUB>54</SUB>>", "429": "<(&lt;operator&gt;.assignment,x = Math.max(x, Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j])))<SUB>55</SUB>>", "431": "<(max,Math.max(x, Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j])))<SUB>55</SUB>>", "433": "<(IDENTIFIER,x,Math.max(x, Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j])))<SUB>55</SUB>>", "435": "<(IDENTIFIER,Math,Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j]))<SUB>55</SUB>>", "437": "<(&lt;operator&gt;.indexAccess,dp[mask ^ 1 &lt;&lt; j][i])<SUB>55</SUB>>", "439": "<(IDENTIFIER,dp,Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j]))<SUB>55</SUB>>", "441": "<(IDENTIFIER,mask,mask ^ 1 &lt;&lt; j)<SUB>55</SUB>>", "443": "<(LITERAL,1,1 &lt;&lt; j)<SUB>55</SUB>>", "445": "<(IDENTIFIER,i,Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j]))<SUB>55</SUB>>", "447": "<(&lt;operator&gt;.indexAccess,maxDist[k][j])<SUB>55</SUB>>", "449": "<(IDENTIFIER,maxDist,Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j]))<SUB>55</SUB>>", "451": "<(IDENTIFIER,j,Math.min(dp[mask ^ 1 &lt;&lt; j][i][k], maxDist[k][j]))<SUB>55</SUB>>", "453": "<(&lt;operator&gt;.indexAccess,dp[mask][i][j])<SUB>57</SUB>>", "455": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>57</SUB>>", "457": "<(IDENTIFIER,mask,dp[mask][i][j] = x)<SUB>57</SUB>>", "459": "<(IDENTIFIER,j,dp[mask][i][j] = x)<SUB>57</SUB>>", "461": "<(LOCAL,int mxMsk: int)<SUB>62</SUB>>", "463": "<(IDENTIFIER,mxMsk,int mxMsk = (1 &lt;&lt; N) - 1)<SUB>62</SUB>>", "465": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>62</SUB>>", "467": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>62</SUB>>", "469": "<(LOCAL,int max: int)<SUB>63</SUB>>", "471": "<(IDENTIFIER,max,int max = 0)<SUB>63</SUB>>", "473": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>64</SUB>>", "475": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>>", "477": "<(LITERAL,0,int i = 0)<SUB>64</SUB>>", "479": "<(IDENTIFIER,i,i &lt; N)<SUB>64</SUB>>", "481": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "483": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "485": "<(LOCAL,int j: int)<SUB>65</SUB>>", "487": "<(IDENTIFIER,j,int j = 0)<SUB>65</SUB>>", "489": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>65</SUB>>", "491": "<(IDENTIFIER,N,j &lt; N)<SUB>65</SUB>>", "493": "<(IDENTIFIER,j,j++)<SUB>65</SUB>>", "495": "<(CONTROL_STRUCTURE,if (i == j),if (i == j))<SUB>66</SUB>>", "497": "<(IDENTIFIER,i,i == j)<SUB>66</SUB>>", "499": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>66</SUB>>", "501": "<(IDENTIFIER,max,max = Math.max(max, Math.min(dp[mxMsk][i][j], distTop[i][j])))<SUB>67</SUB>>", "503": "<(IDENTIFIER,Math,Math.max(max, Math.min(dp[mxMsk][i][j], distTop[i][j])))<SUB>67</SUB>>", "505": "<(min,Math.min(dp[mxMsk][i][j], distTop[i][j]))<SUB>67</SUB>>", "507": "<(&lt;operator&gt;.indexAccess,dp[mxMsk][i][j])<SUB>67</SUB>>", "509": "<(&lt;operator&gt;.indexAccess,dp[mxMsk])<SUB>67</SUB>>", "511": "<(IDENTIFIER,mxMsk,Math.min(dp[mxMsk][i][j], distTop[i][j]))<SUB>67</SUB>>", "513": "<(IDENTIFIER,j,Math.min(dp[mxMsk][i][j], distTop[i][j]))<SUB>67</SUB>>", "515": "<(&lt;operator&gt;.indexAccess,distTop[i])<SUB>67</SUB>>", "517": "<(IDENTIFIER,i,Math.min(dp[mxMsk][i][j], distTop[i][j]))<SUB>67</SUB>>", "519": "<(println,System.out.println(max))<SUB>70</SUB>>", "521": "<(IDENTIFIER,System,System.out.println(max))<SUB>70</SUB>>", "523": "<(IDENTIFIER,max,System.out.println(max))<SUB>70</SUB>>", "525": "<(MODIFIER,STATIC)>"}}