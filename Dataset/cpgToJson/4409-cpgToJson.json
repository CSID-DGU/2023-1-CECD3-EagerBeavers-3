{"edges": [["21", "22"], ["21", "23"], ["21", "306"], ["21", "307"], ["21", "308"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "42"], ["23", "46"], ["23", "51"], ["23", "56"], ["23", "61"], ["23", "91"], ["23", "172"], ["23", "244"], ["23", "251"], ["23", "252"], ["23", "255"], ["23", "301"], ["23", "304"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["102", "109"], ["102", "112"], ["102", "114"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "124"], ["114", "161"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "191"], ["183", "193"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["193", "203"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["203", "208"], ["203", "213"], ["203", "215"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["215", "216"], ["216", "217"], ["216", "222"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "224"], ["222", "229"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "239"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "259"], ["255", "262"], ["255", "264"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["262", "263"], ["264", "265"], ["264", "266"], ["264", "270"], ["264", "284"], ["266", "267"], ["266", "268"], ["268", "269"], ["270", "271"], ["270", "273"], ["271", "272"], ["273", "274"], ["273", "275"], ["273", "279"], ["275", "276"], ["275", "277"], ["277", "278"], ["279", "280"], ["279", "281"], ["279", "282"], ["282", "283"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["286", "289"], ["289", "290"], ["289", "291"], ["289", "292"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["304", "305"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "40"], ["38", "44"], ["42", "48"], ["46", "53"], ["51", "58"], ["56", "63"], ["244", "252"], ["252", "256"], ["301", "304"], ["304", "308"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "51"], ["58", "56"], ["63", "66"], ["66", "74"], ["66", "93"], ["69", "66"], ["93", "96"], ["96", "106"], ["96", "174"], ["99", "96"], ["174", "177"], ["177", "185"], ["177", "248"], ["180", "177"], ["246", "244"], ["256", "259"], ["259", "268"], ["259", "301"], ["262", "259"], ["30", "28"], ["37", "35"], ["248", "246"], ["266", "271"], ["284", "262"], ["74", "77"], ["77", "85"], ["77", "69"], ["80", "77"], ["104", "109"], ["109", "117"], ["109", "99"], ["112", "109"], ["185", "188"], ["188", "196"], ["188", "180"], ["191", "188"], ["268", "266"], ["271", "277"], ["271", "294"], ["286", "284"], ["83", "80"], ["106", "104"], ["115", "126"], ["161", "112"], ["194", "205"], ["275", "282"], ["279", "271"], ["289", "286"], ["84", "89"], ["89", "83"], ["116", "123"], ["121", "115"], ["126", "129"], ["129", "137"], ["129", "163"], ["132", "129"], ["162", "168"], ["167", "161"], ["195", "202"], ["200", "194"], ["205", "210"], ["208", "218"], ["208", "191"], ["213", "210"], ["277", "275"], ["282", "279"], ["292", "289"], ["85", "84"], ["117", "116"], ["123", "121"], ["135", "132"], ["163", "162"], ["168", "167"], ["196", "195"], ["202", "200"], ["210", "208"], ["216", "213"], ["293", "298"], ["298", "292"], ["136", "144"], ["141", "135"], ["217", "225"], ["222", "216"], ["294", "293"], ["137", "136"], ["143", "152"], ["148", "141"], ["218", "217"], ["224", "233"], ["229", "222"], ["144", "143"], ["150", "148"], ["225", "224"], ["231", "229"], ["151", "157"], ["156", "150"], ["232", "240"], ["239", "231"], ["152", "151"], ["157", "156"], ["233", "236"], ["236", "232"], ["240", "239"], ["21", "26"], ["22", "308"], ["24", "308"], ["27", "308"], ["27", "308"], ["31", "308"], ["34", "308"], ["34", "308"], ["38", "308"], ["44", "308"], ["42", "308"], ["42", "308"], ["46", "308"], ["48", "308"], ["46", "308"], ["46", "308"], ["51", "308"], ["51", "308"], ["56", "308"], ["56", "308"], ["56", "308"], ["63", "308"], ["66", "308"], ["66", "308"], ["174", "308"], ["177", "308"], ["177", "308"], ["244", "308"], ["246", "308"], ["244", "308"], ["244", "308"], ["252", "308"], ["256", "308"], ["259", "308"], ["259", "308"], ["259", "308"], ["301", "308"], ["301", "308"], ["304", "308"], ["304", "308"], ["268", "308"], ["266", "308"], ["271", "308"], ["271", "308"], ["286", "308"], ["293", "308"], ["292", "308"], ["292", "308"], ["289", "308"], ["286", "308"], ["284", "308"], ["284", "308"], ["262", "308"], ["279", "308"], ["279", "308"], ["279", "308"], ["185", "308"], ["188", "308"], ["188", "308"], ["180", "308"], ["194", "308"], ["194", "308"], ["194", "308"], ["205", "308"], ["208", "308"], ["210", "308"], ["208", "308"], ["208", "308"], ["191", "308"], ["216", "308"], ["222", "308"], ["231", "308"], ["231", "308"], ["229", "308"], ["222", "308"], ["216", "308"], ["216", "308"], ["213", "308"], ["104", "308"], ["104", "308"], ["109", "308"], ["109", "308"], ["99", "308"], ["115", "308"], ["115", "308"], ["126", "308"], ["129", "308"], ["129", "308"], ["129", "308"], ["161", "308"], ["161", "308"], ["161", "308"], ["112", "308"], ["141", "308"], ["150", "308"], ["150", "308"], ["148", "308"], ["141", "308"], ["135", "308"], ["135", "308"], ["132", "308"], ["74", "308"], ["77", "308"], ["77", "308"], ["77", "308"], ["69", "308"], ["83", "308"], ["89", "308"], ["83", "308"], ["83", "308"], ["80", "308"], ["289", "308"], ["279", "308"], ["21", "22"], ["21", "24"], ["21", "31"], ["40", "38"], ["44", "42"], ["48", "46"], ["48", "46"], ["53", "51"], ["58", "56"], ["246", "244"], ["246", "244"], ["21", "252"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "63"], ["21", "93"], ["21", "174"], ["21", "256"], ["34", "301"], ["21", "301"], ["252", "301"], ["284", "301"], ["301", "304"], ["21", "304"], ["27", "40"], ["21", "40"], ["40", "44"], ["21", "44"], ["38", "48"], ["21", "48"], ["42", "48"], ["48", "53"], ["21", "53"], ["53", "58"], ["21", "58"], ["63", "66"], ["69", "66"], ["21", "66"], ["58", "66"], ["66", "69"], ["21", "69"], ["93", "96"], ["99", "96"], ["21", "96"], ["66", "96"], ["109", "96"], ["21", "99"], ["96", "99"], ["174", "177"], ["180", "177"], ["21", "177"], ["96", "177"], ["188", "177"], ["177", "180"], ["21", "180"], ["248", "246"], ["21", "246"], ["248", "246"], ["256", "259"], ["262", "259"], ["21", "259"], ["246", "259"], ["294", "259"], ["289", "262"], ["21", "262"], ["268", "266"], ["286", "284"], ["286", "284"], ["286", "284"], ["21", "74"], ["96", "104"], ["21", "104"], ["21", "185"], ["21", "248"], ["177", "248"], ["74", "77"], ["80", "77"], ["21", "77"], ["48", "77"], ["77", "80"], ["21", "80"], ["89", "83"], ["104", "109"], ["112", "109"], ["21", "109"], ["96", "109"], ["109", "112"], ["21", "112"], ["115", "161"], ["135", "161"], ["185", "188"], ["191", "188"], ["21", "188"], ["177", "188"], ["188", "191"], ["21", "191"], ["244", "268"], ["21", "268"], ["266", "271"], ["277", "271"], ["21", "271"], ["277", "275"], ["222", "286"], ["141", "286"], ["21", "286"], ["252", "286"], ["284", "286"], ["289", "286"], ["289", "286"], ["289", "286"], ["96", "106"], ["21", "106"], ["21", "126"], ["21", "205"], ["21", "279"], ["275", "279"], ["282", "279"], ["21", "289"], ["298", "289"], ["292", "289"], ["292", "289"], ["44", "89"], ["21", "89"], ["126", "129"], ["132", "129"], ["21", "129"], ["48", "129"], ["77", "129"], ["129", "132"], ["21", "132"], ["141", "135"], ["141", "135"], ["141", "135"], ["205", "208"], ["213", "208"], ["21", "208"], ["210", "208"], ["210", "208"], ["21", "213"], ["208", "213"], ["222", "216"], ["222", "216"], ["222", "216"], ["271", "277"], ["21", "277"], ["21", "282"], ["293", "292"], ["293", "292"], ["298", "292"], ["298", "292"], ["48", "210"], ["129", "210"], ["77", "210"], ["21", "210"], ["294", "293"], ["294", "293"], ["21", "293"], ["21", "298"], ["259", "298"], ["148", "141"], ["21", "141"], ["115", "141"], ["135", "141"], ["148", "141"], ["229", "222"], ["21", "222"], ["194", "222"], ["216", "222"], ["229", "222"], ["21", "294"], ["259", "294"], ["141", "148"], ["21", "148"], ["150", "148"], ["150", "148"], ["222", "229"], ["141", "229"], ["21", "229"], ["231", "229"], ["231", "229"], ["150", "231"], ["208", "236"], ["21", "236"], ["66", "77"], ["66", "69"], ["66", "74"], ["66", "66"], ["96", "96"], ["96", "104"], ["96", "99"], ["96", "106"], ["96", "109"], ["177", "188"], ["177", "185"], ["177", "180"], ["177", "177"], ["259", "292"], ["259", "262"], ["259", "298"], ["259", "284"], ["259", "259"], ["259", "289"], ["259", "293"], ["259", "268"], ["259", "286"], ["259", "294"], ["259", "271"], ["259", "266"], ["77", "77"], ["77", "84"], ["77", "85"], ["77", "80"], ["77", "89"], ["77", "83"], ["109", "115"], ["109", "167"], ["109", "161"], ["109", "163"], ["109", "121"], ["109", "162"], ["109", "168"], ["109", "112"], ["109", "129"], ["109", "116"], ["109", "123"], ["109", "126"], ["109", "117"], ["109", "109"], ["188", "188"], ["188", "196"], ["188", "191"], ["188", "208"], ["188", "195"], ["188", "194"], ["188", "202"], ["188", "205"], ["188", "210"], ["188", "200"], ["271", "282"], ["271", "279"], ["271", "275"], ["271", "277"], ["271", "271"], ["129", "136"], ["129", "132"], ["129", "150"], ["129", "151"], ["129", "144"], ["129", "129"], ["129", "148"], ["129", "137"], ["129", "152"], ["129", "141"], ["129", "157"], ["129", "143"], ["129", "135"], ["129", "156"], ["208", "225"], ["208", "240"], ["208", "232"], ["208", "213"], ["208", "208"], ["208", "231"], ["208", "224"], ["208", "233"], ["208", "239"], ["208", "210"], ["208", "236"], ["208", "217"], ["208", "229"], ["208", "216"], ["208", "222"], ["208", "218"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(IDENTIFIER,n,n = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,m,m = nextInt())<SUB>6</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,arr,arr = new int[n][m])<SUB>7</SUB>>", "49": "<(IDENTIFIER,n,new int[n][m])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,costs = new int[n][n])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n][n])>", "55": "<(IDENTIFIER,n,new int[n][n])<SUB>8</SUB>>", "57": "<(IDENTIFIER,wrapCosts,wrapCosts = new int[n][n])<SUB>9</SUB>>", "59": "<(IDENTIFIER,n,new int[n][n])<SUB>9</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; n); r++),for (int r = 0; Some(r &lt; n); r++))<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>10</SUB>>", "65": "<(LITERAL,0,int r = 0)<SUB>10</SUB>>", "67": "<(IDENTIFIER,r,r &lt; n)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,r++)<SUB>10</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "73": "<(LOCAL,int c: int)<SUB>11</SUB>>", "75": "<(IDENTIFIER,c,int c = 0)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.lessThan,c &lt; m)<SUB>11</SUB>>", "79": "<(IDENTIFIER,m,c &lt; m)<SUB>11</SUB>>", "81": "<(IDENTIFIER,c,c++)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,arr[r][c] = nextInt())<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,arr[r])<SUB>12</SUB>>", "87": "<(IDENTIFIER,r,arr[r][c] = nextInt())<SUB>12</SUB>>", "89": "<(nextInt,nextInt())<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "103": "<(LOCAL,int j: int)<SUB>16</SUB>>", "105": "<(IDENTIFIER,j,int j = i + 1)<SUB>16</SUB>>", "107": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>16</SUB>>", "111": "<(IDENTIFIER,n,j &lt; n)<SUB>16</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,costs[i][j] = Integer.MAX_VALUE)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,costs[i])<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,costs[i][j] = Integer.MAX_VALUE)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>17</SUB>>", "123": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>17</SUB>>", "125": "<(LOCAL,int c: int)<SUB>18</SUB>>", "127": "<(IDENTIFIER,c,int c = 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.lessThan,c &lt; m)<SUB>18</SUB>>", "131": "<(IDENTIFIER,m,c &lt; m)<SUB>18</SUB>>", "133": "<(IDENTIFIER,c,c++)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,costs[i][j] = min(costs[i][j], Math.abs(arr[i][c] - arr[j][c])))<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,costs[i])<SUB>19</SUB>>", "139": "<(IDENTIFIER,i,costs[i][j] = min(costs[i][j], Math.abs(arr[i][c] - arr[j][c])))<SUB>19</SUB>>", "141": "<(min,min(costs[i][j], Math.abs(arr[i][c] - arr[j][c])))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,costs[i][j])<SUB>19</SUB>>", "145": "<(IDENTIFIER,costs,min(costs[i][j], Math.abs(arr[i][c] - arr[j][c])))<SUB>19</SUB>>", "147": "<(IDENTIFIER,j,min(costs[i][j], Math.abs(arr[i][c] - arr[j][c])))<SUB>19</SUB>>", "149": "<(IDENTIFIER,Math,abs(arr[i][c] - arr[j][c]))<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,arr[i][c])<SUB>19</SUB>>", "153": "<(IDENTIFIER,arr,arr[i][c] - arr[j][c])<SUB>19</SUB>>", "155": "<(IDENTIFIER,c,arr[i][c] - arr[j][c])<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>19</SUB>>", "159": "<(IDENTIFIER,j,arr[i][c] - arr[j][c])<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.assignment,costs[j][i] = costs[i][j])<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,costs[j])<SUB>21</SUB>>", "165": "<(IDENTIFIER,j,costs[j][i] = costs[i][j])<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,costs[i][j])<SUB>21</SUB>>", "169": "<(IDENTIFIER,costs,costs[j][i] = costs[i][j])<SUB>21</SUB>>", "171": "<(IDENTIFIER,j,costs[j][i] = costs[i][j])<SUB>21</SUB>>", "173": "<(LOCAL,int i: int)<SUB>24</SUB>>", "175": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>24</SUB>>", "179": "<(IDENTIFIER,n,i &lt; n)<SUB>24</SUB>>", "181": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>25</SUB>>", "187": "<(LITERAL,0,int j = 0)<SUB>25</SUB>>", "189": "<(IDENTIFIER,j,j &lt; n)<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,j++)<SUB>25</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,wrapCosts[i][j])<SUB>26</SUB>>", "197": "<(IDENTIFIER,wrapCosts,wrapCosts[i][j] = Integer.MAX_VALUE)<SUB>26</SUB>>", "199": "<(IDENTIFIER,j,wrapCosts[i][j] = Integer.MAX_VALUE)<SUB>26</SUB>>", "201": "<(IDENTIFIER,Integer,wrapCosts[i][j] = Integer.MAX_VALUE)<SUB>26</SUB>>", "203": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; m - 1); c++),for (int c = 0; Some(c &lt; m - 1); c++))<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>27</SUB>>", "207": "<(LITERAL,0,int c = 0)<SUB>27</SUB>>", "209": "<(IDENTIFIER,c,c &lt; m - 1)<SUB>27</SUB>>", "211": "<(IDENTIFIER,m,m - 1)<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,c++)<SUB>27</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,wrapCosts[i][j])<SUB>28</SUB>>", "219": "<(IDENTIFIER,wrapCosts,wrapCosts[i][j] = min(wrapCosts[i][j], Math.abs(arr[i][c + 1] - arr[j][c])))<SUB>28</SUB>>", "221": "<(IDENTIFIER,j,wrapCosts[i][j] = min(wrapCosts[i][j], Math.abs(arr[i][c + 1] - arr[j][c])))<SUB>28</SUB>>", "223": "<(IDENTIFIER,Math,min(wrapCosts[i][j], Math.abs(arr[i][c + 1] - arr[j][c])))<SUB>28</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,wrapCosts[i])<SUB>28</SUB>>", "227": "<(IDENTIFIER,i,min(wrapCosts[i][j], Math.abs(arr[i][c + 1] - arr[j][c])))<SUB>28</SUB>>", "229": "<(abs,abs(arr[i][c + 1] - arr[j][c]))<SUB>28</SUB>>", "231": "<(&lt;operator&gt;.subtraction,arr[i][c + 1] - arr[j][c])<SUB>28</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>28</SUB>>", "235": "<(IDENTIFIER,i,arr[i][c + 1] - arr[j][c])<SUB>28</SUB>>", "237": "<(IDENTIFIER,c,c + 1)<SUB>28</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,arr[j][c])<SUB>28</SUB>>", "241": "<(IDENTIFIER,arr,arr[i][c + 1] - arr[j][c])<SUB>28</SUB>>", "243": "<(IDENTIFIER,c,arr[i][c + 1] - arr[j][c])<SUB>28</SUB>>", "245": "<(IDENTIFIER,memo,memo = new int[n][1 &lt;&lt; n])<SUB>32</SUB>>", "247": "<(IDENTIFIER,n,new int[n][1 &lt;&lt; n])<SUB>32</SUB>>", "249": "<(LITERAL,1,1 &lt;&lt; n)<SUB>32</SUB>>", "251": "<(LOCAL,long best: long)<SUB>33</SUB>>", "253": "<(IDENTIFIER,best,long best = 0)<SUB>33</SUB>>", "255": "<(CONTROL_STRUCTURE,for (start = 0; Some(start &lt; n); start++),for (start = 0; Some(start &lt; n); start++))<SUB>34</SUB>>", "257": "<(IDENTIFIER,start,start = 0)<SUB>34</SUB>>", "259": "<(&lt;operator&gt;.lessThan,start &lt; n)<SUB>34</SUB>>", "261": "<(IDENTIFIER,n,start &lt; n)<SUB>34</SUB>>", "263": "<(IDENTIFIER,start,start++)<SUB>34</SUB>>", "265": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>35</SUB>>", "267": "<(IDENTIFIER,$iterLocal0,)<SUB>35</SUB>>", "269": "<(IDENTIFIER,memo,&lt;empty&gt;)<SUB>35</SUB>>", "271": "<(hasNext,&lt;empty&gt;)<SUB>35</SUB>>", "273": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "275": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>35</SUB>>", "277": "<(next,&lt;empty&gt;)<SUB>35</SUB>>", "279": "<(fill,fill(a, -1))<SUB>35</SUB>>", "281": "<(IDENTIFIER,a,fill(a, -1))<SUB>35</SUB>>", "283": "<(LITERAL,1,-1)<SUB>35</SUB>>", "285": "<(IDENTIFIER,best,best = max(best, go(start, (1 &lt;&lt; n) - 1 - (1 &lt;&lt; start))))<SUB>36</SUB>>", "287": "<(IDENTIFIER,Math,max(best, go(start, (1 &lt;&lt; n) - 1 - (1 &lt;&lt; start))))<SUB>36</SUB>>", "289": "<(go,go(start, (1 &lt;&lt; n) - 1 - (1 &lt;&lt; start)))<SUB>36</SUB>>", "291": "<(IDENTIFIER,start,go(start, (1 &lt;&lt; n) - 1 - (1 &lt;&lt; start)))<SUB>36</SUB>>", "293": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>36</SUB>>", "295": "<(LITERAL,1,1 &lt;&lt; n)<SUB>36</SUB>>", "297": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>36</SUB>>", "299": "<(LITERAL,1,1 &lt;&lt; start)<SUB>36</SUB>>", "301": "<(println,println(best))<SUB>38</SUB>>", "303": "<(IDENTIFIER,best,println(best))<SUB>38</SUB>>", "305": "<(IDENTIFIER,out,close())<SUB>39</SUB>>", "307": "<(MODIFIER,STATIC)>"}}