{"edges": [["21", "22"], ["21", "23"], ["21", "516"], ["21", "517"], ["21", "518"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "49"], ["23", "50"], ["23", "51"], ["23", "52"], ["23", "59"], ["23", "66"], ["23", "73"], ["23", "74"], ["23", "75"], ["23", "76"], ["23", "77"], ["23", "78"], ["23", "83"], ["23", "88"], ["23", "91"], ["23", "129"], ["23", "155"], ["23", "156"], ["23", "160"], ["23", "180"], ["23", "260"], ["23", "340"], ["23", "343"], ["23", "344"], ["23", "349"], ["23", "402"], ["23", "474"], ["23", "511"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "48"], ["46", "47"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "123"], ["97", "128"], ["98", "99"], ["98", "102"], ["98", "105"], ["98", "107"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "120"], ["108", "109"], ["108", "112"], ["108", "115"], ["108", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["129", "130"], ["129", "133"], ["129", "136"], ["129", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "142"], ["138", "145"], ["138", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["160", "161"], ["160", "164"], ["160", "167"], ["160", "169"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["173", "179"], ["174", "175"], ["174", "176"], ["177", "178"], ["180", "181"], ["180", "184"], ["180", "187"], ["180", "189"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "196"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "195"], ["193", "194"], ["196", "197"], ["196", "200"], ["196", "205"], ["196", "207"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "209"], ["207", "210"], ["207", "211"], ["207", "218"], ["207", "227"], ["207", "234"], ["207", "247"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "242"], ["238", "246"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["242", "245"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "255"], ["251", "259"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["255", "258"], ["260", "261"], ["260", "264"], ["260", "269"], ["260", "271"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["271", "272"], ["271", "278"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "277"], ["275", "276"], ["278", "279"], ["278", "282"], ["278", "285"], ["278", "287"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["285", "286"], ["287", "288"], ["287", "289"], ["287", "290"], ["287", "291"], ["287", "298"], ["287", "307"], ["287", "314"], ["287", "327"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "306"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["318", "319"], ["318", "322"], ["318", "326"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["322", "325"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "335"], ["331", "339"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "337"], ["335", "338"], ["340", "341"], ["340", "342"], ["344", "345"], ["344", "346"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "353"], ["349", "356"], ["349", "358"], ["350", "351"], ["350", "352"], ["353", "354"], ["353", "355"], ["356", "357"], ["358", "359"], ["358", "368"], ["358", "369"], ["358", "375"], ["359", "360"], ["359", "365"], ["360", "361"], ["360", "364"], ["361", "362"], ["361", "363"], ["365", "366"], ["365", "367"], ["369", "370"], ["369", "371"], ["371", "372"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "378"], ["376", "377"], ["378", "379"], ["378", "380"], ["378", "384"], ["380", "381"], ["380", "382"], ["382", "383"], ["384", "385"], ["384", "390"], ["385", "386"], ["385", "389"], ["386", "387"], ["386", "388"], ["390", "391"], ["390", "392"], ["390", "397"], ["392", "393"], ["392", "396"], ["393", "394"], ["393", "395"], ["397", "398"], ["397", "399"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "406"], ["402", "409"], ["402", "411"], ["403", "404"], ["403", "405"], ["406", "407"], ["406", "408"], ["409", "410"], ["411", "412"], ["411", "415"], ["411", "418"], ["411", "420"], ["412", "413"], ["412", "414"], ["415", "416"], ["415", "417"], ["418", "419"], ["420", "421"], ["420", "430"], ["420", "431"], ["420", "437"], ["421", "422"], ["421", "427"], ["422", "423"], ["422", "426"], ["423", "424"], ["423", "425"], ["427", "428"], ["427", "429"], ["431", "432"], ["431", "433"], ["433", "434"], ["434", "435"], ["434", "436"], ["437", "438"], ["437", "440"], ["438", "439"], ["440", "441"], ["440", "442"], ["440", "446"], ["442", "443"], ["442", "444"], ["444", "445"], ["446", "447"], ["446", "452"], ["447", "448"], ["447", "451"], ["448", "449"], ["448", "450"], ["452", "453"], ["452", "454"], ["452", "459"], ["454", "455"], ["454", "458"], ["455", "456"], ["455", "457"], ["459", "460"], ["459", "469"], ["460", "461"], ["460", "466"], ["461", "462"], ["461", "463"], ["463", "464"], ["463", "465"], ["466", "467"], ["466", "468"], ["469", "470"], ["469", "471"], ["471", "472"], ["471", "473"], ["474", "475"], ["474", "478"], ["474", "481"], ["474", "483"], ["475", "476"], ["475", "477"], ["478", "479"], ["478", "480"], ["481", "482"], ["483", "484"], ["483", "508"], ["484", "485"], ["484", "488"], ["484", "491"], ["484", "493"], ["485", "486"], ["485", "487"], ["488", "489"], ["488", "490"], ["491", "492"], ["493", "494"], ["493", "495"], ["495", "496"], ["495", "507"], ["496", "497"], ["496", "502"], ["497", "498"], ["497", "499"], ["499", "500"], ["499", "501"], ["502", "503"], ["502", "506"], ["503", "504"], ["503", "505"], ["508", "509"], ["508", "510"], ["511", "512"], ["511", "515"], ["512", "513"], ["512", "514"], ["24", "31"], ["27", "40"], ["38", "41"], ["41", "46"], ["43", "56"], ["52", "63"], ["59", "70"], ["66", "80"], ["78", "85"], ["83", "88"], ["88", "93"], ["156", "161"], ["340", "346"], ["344", "350"], ["511", "518"], ["26", "24"], ["40", "38"], ["45", "43"], ["54", "52"], ["61", "59"], ["68", "66"], ["80", "78"], ["85", "83"], ["92", "99"], ["92", "130"], ["130", "133"], ["133", "139"], ["133", "158"], ["136", "133"], ["158", "156"], ["161", "164"], ["164", "170"], ["164", "181"], ["167", "164"], ["169", "167"], ["181", "184"], ["184", "193"], ["184", "261"], ["187", "184"], ["261", "266"], ["264", "275"], ["264", "340"], ["269", "266"], ["346", "344"], ["350", "353"], ["353", "361"], ["353", "403"], ["356", "353"], ["403", "406"], ["406", "412"], ["406", "475"], ["409", "406"], ["475", "478"], ["478", "485"], ["478", "514"], ["481", "478"], ["512", "511"], ["29", "36"], ["32", "27"], ["46", "45"], ["56", "54"], ["63", "61"], ["70", "68"], ["93", "92"], ["123", "128"], ["128", "518"], ["139", "142"], ["142", "149"], ["142", "136"], ["145", "142"], ["147", "145"], ["170", "176"], ["190", "197"], ["266", "264"], ["272", "279"], ["359", "372"], ["369", "376"], ["412", "415"], ["415", "423"], ["415", "409"], ["418", "415"], ["508", "481"], ["514", "512"], ["31", "29"], ["34", "32"], ["99", "102"], ["102", "109"], ["102", "126"], ["105", "102"], ["124", "123"], ["148", "153"], ["153", "147"], ["174", "177"], ["177", "169"], ["192", "190"], ["197", "202"], ["200", "214"], ["200", "187"], ["205", "202"], ["274", "272"], ["279", "282"], ["282", "294"], ["282", "269"], ["285", "282"], ["360", "367"], ["365", "359"], ["371", "369"], ["376", "382"], ["376", "356"], ["421", "434"], ["431", "438"], ["485", "488"], ["488", "499"], ["488", "508"], ["491", "488"], ["493", "491"], ["36", "34"], ["120", "105"], ["126", "124"], ["149", "148"], ["176", "174"], ["193", "192"], ["202", "200"], ["211", "221"], ["218", "231"], ["227", "235"], ["234", "248"], ["247", "205"], ["275", "274"], ["291", "303"], ["298", "311"], ["307", "315"], ["314", "328"], ["327", "285"], ["361", "360"], ["367", "365"], ["372", "371"], ["380", "386"], ["384", "376"], ["422", "429"], ["427", "421"], ["433", "431"], ["438", "444"], ["438", "418"], ["495", "493"], ["109", "112"], ["112", "117"], ["112", "120"], ["115", "112"], ["117", "115"], ["213", "211"], ["220", "218"], ["229", "227"], ["235", "241"], ["248", "254"], ["293", "291"], ["300", "298"], ["309", "307"], ["315", "321"], ["328", "334"], ["382", "380"], ["385", "393"], ["390", "384"], ["423", "422"], ["429", "427"], ["434", "433"], ["442", "448"], ["446", "438"], ["496", "495"], ["214", "213"], ["221", "224"], ["224", "220"], ["231", "229"], ["239", "242"], ["242", "234"], ["252", "255"], ["255", "247"], ["294", "293"], ["301", "300"], ["311", "309"], ["319", "322"], ["322", "314"], ["332", "335"], ["335", "327"], ["386", "385"], ["392", "401"], ["397", "390"], ["444", "442"], ["447", "455"], ["452", "446"], ["497", "503"], ["502", "496"], ["241", "239"], ["254", "252"], ["303", "301"], ["321", "319"], ["334", "332"], ["393", "392"], ["399", "397"], ["448", "447"], ["454", "463"], ["459", "452"], ["499", "497"], ["503", "502"], ["401", "399"], ["455", "454"], ["460", "473"], ["469", "459"], ["461", "468"], ["466", "460"], ["471", "469"], ["463", "461"], ["468", "466"], ["473", "471"], ["21", "26"], ["128", "518"], ["22", "518"], ["24", "518"], ["29", "518"], ["32", "518"], ["32", "518"], ["32", "518"], ["27", "518"], ["38", "518"], ["41", "518"], ["43", "518"], ["46", "518"], ["45", "518"], ["43", "518"], ["43", "518"], ["54", "518"], ["52", "518"], ["52", "518"], ["61", "518"], ["59", "518"], ["59", "518"], ["68", "518"], ["68", "518"], ["66", "518"], ["66", "518"], ["78", "518"], ["78", "518"], ["78", "518"], ["83", "518"], ["85", "518"], ["83", "518"], ["83", "518"], ["88", "518"], ["88", "518"], ["93", "518"], ["92", "518"], ["92", "518"], ["99", "518"], ["102", "518"], ["102", "518"], ["102", "518"], ["123", "518"], ["123", "518"], ["123", "518"], ["109", "518"], ["112", "518"], ["112", "518"], ["112", "518"], ["120", "518"], ["105", "518"], ["117", "518"], ["115", "518"], ["21", "22"], ["21", "24"], ["21", "38"], ["45", "43"], ["45", "43"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["68", "66"], ["68", "66"], ["80", "78"], ["80", "78"], ["85", "83"], ["85", "83"], ["21", "88"], ["158", "156"], ["21", "340"], ["346", "344"], ["346", "344"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "130"], ["21", "161"], ["174", "169"], ["177", "169"], ["21", "169"], ["21", "181"], ["21", "261"], ["93", "340"], ["21", "350"], ["21", "403"], ["21", "475"], ["41", "511"], ["508", "511"], ["21", "511"], ["21", "29"], ["21", "37"], ["46", "45"], ["21", "45"], ["21", "54"], ["43", "54"], ["54", "61"], ["21", "61"], ["43", "61"], ["61", "68"], ["21", "68"], ["43", "68"], ["52", "80"], ["21", "80"], ["59", "80"], ["80", "85"], ["21", "85"], ["80", "85"], ["93", "92"], ["93", "92"], ["21", "92"], ["21", "128"], ["130", "133"], ["136", "133"], ["21", "133"], ["85", "133"], ["133", "136"], ["21", "136"], ["21", "139"], ["153", "147"], ["78", "158"], ["21", "158"], ["161", "164"], ["167", "164"], ["21", "164"], ["158", "164"], ["164", "167"], ["21", "167"], ["181", "184"], ["187", "184"], ["21", "184"], ["133", "184"], ["184", "187"], ["21", "187"], ["192", "190"], ["192", "190"], ["261", "264"], ["269", "264"], ["21", "264"], ["266", "264"], ["266", "264"], ["264", "269"], ["21", "269"], ["274", "272"], ["274", "272"], ["340", "346"], ["21", "346"], ["164", "346"], ["350", "353"], ["356", "353"], ["21", "353"], ["346", "353"], ["353", "356"], ["21", "356"], ["68", "359"], ["309", "359"], ["229", "359"], ["371", "369"], ["403", "406"], ["409", "406"], ["21", "406"], ["346", "406"], ["406", "409"], ["463", "409"], ["21", "409"], ["21", "412"], ["475", "478"], ["481", "478"], ["21", "478"], ["266", "478"], ["478", "481"], ["21", "481"], ["29", "32"], ["21", "32"], ["27", "46"], ["21", "46"], ["66", "93"], ["21", "93"], ["21", "99"], ["41", "123"], ["120", "123"], ["21", "123"], ["139", "142"], ["145", "142"], ["21", "142"], ["85", "142"], ["142", "145"], ["21", "145"], ["21", "174"], ["21", "179"], ["21", "197"], ["184", "266"], ["21", "266"], ["21", "279"], ["412", "415"], ["418", "415"], ["21", "415"], ["353", "415"], ["415", "418"], ["21", "418"], ["68", "421"], ["309", "421"], ["229", "421"], ["433", "431"], ["21", "485"], ["41", "508"], ["493", "508"], ["21", "508"], ["99", "102"], ["105", "102"], ["21", "102"], ["85", "102"], ["102", "105"], ["21", "105"], ["88", "153"], ["21", "153"], ["174", "177"], ["21", "177"], ["193", "192"], ["21", "192"], ["197", "200"], ["205", "200"], ["21", "200"], ["202", "200"], ["202", "200"], ["21", "205"], ["200", "205"], ["147", "211"], ["229", "227"], ["229", "227"], ["275", "274"], ["21", "274"], ["279", "282"], ["285", "282"], ["21", "282"], ["85", "282"], ["202", "282"], ["142", "282"], ["282", "285"], ["21", "285"], ["147", "291"], ["309", "307"], ["309", "307"], ["156", "371"], ["169", "371"], ["369", "376"], ["382", "376"], ["21", "376"], ["382", "380"], ["390", "384"], ["390", "384"], ["390", "384"], ["485", "488"], ["491", "488"], ["21", "488"], ["85", "488"], ["282", "488"], ["202", "488"], ["142", "488"], ["488", "491"], ["21", "491"], ["41", "493"], ["508", "493"], ["21", "493"], ["21", "109"], ["41", "120"], ["117", "120"], ["21", "120"], ["46", "193"], ["21", "193"], ["85", "202"], ["142", "202"], ["21", "202"], ["156", "234"], ["239", "234"], ["242", "234"], ["21", "234"], ["156", "247"], ["252", "247"], ["255", "247"], ["21", "247"], ["46", "275"], ["193", "275"], ["21", "275"], ["156", "314"], ["234", "314"], ["319", "314"], ["322", "314"], ["21", "314"], ["156", "327"], ["247", "327"], ["332", "327"], ["335", "327"], ["21", "327"], ["156", "433"], ["431", "438"], ["444", "438"], ["21", "438"], ["444", "442"], ["452", "446"], ["452", "446"], ["452", "446"], ["21", "495"], ["109", "112"], ["115", "112"], ["21", "112"], ["85", "112"], ["112", "115"], ["21", "115"], ["41", "117"], ["120", "117"], ["21", "117"], ["68", "229"], ["21", "229"], ["190", "229"], ["21", "239"], ["21", "246"], ["21", "252"], ["21", "259"], ["68", "309"], ["229", "309"], ["21", "309"], ["272", "309"], ["229", "309"], ["21", "319"], ["21", "326"], ["21", "332"], ["21", "339"], ["376", "382"], ["21", "382"], ["21", "390"], ["359", "390"], ["384", "390"], ["397", "390"], ["397", "390"], ["200", "224"], ["21", "224"], ["239", "242"], ["21", "242"], ["218", "242"], ["227", "242"], ["252", "255"], ["21", "255"], ["211", "255"], ["242", "255"], ["319", "322"], ["21", "322"], ["298", "322"], ["307", "322"], ["332", "335"], ["21", "335"], ["291", "335"], ["322", "335"], ["21", "397"], ["380", "397"], ["438", "444"], ["21", "444"], ["390", "452"], ["21", "452"], ["421", "452"], ["446", "452"], ["469", "452"], ["469", "452"], ["264", "303"], ["21", "303"], ["469", "459"], ["469", "459"], ["406", "499"], ["21", "499"], ["21", "469"], ["442", "469"], ["406", "463"], ["21", "463"], ["92", "128"], ["92", "161"], ["92", "102"], ["92", "403"], ["92", "264"], ["92", "514"], ["92", "181"], ["92", "511"], ["92", "184"], ["92", "512"], ["92", "340"], ["92", "158"], ["92", "346"], ["92", "123"], ["92", "478"], ["92", "133"], ["92", "261"], ["92", "353"], ["92", "130"], ["92", "164"], ["92", "99"], ["92", "475"], ["92", "126"], ["92", "350"], ["92", "406"], ["92", "156"], ["92", "124"], ["92", "266"], ["92", "344"], ["133", "136"], ["133", "133"], ["133", "139"], ["133", "142"], ["164", "167"], ["164", "170"], ["164", "174"], ["164", "176"], ["164", "177"], ["164", "169"], ["164", "164"], ["184", "192"], ["184", "190"], ["184", "184"], ["184", "202"], ["184", "200"], ["184", "197"], ["184", "187"], ["184", "193"], ["264", "272"], ["264", "264"], ["264", "274"], ["264", "269"], ["264", "282"], ["264", "279"], ["264", "275"], ["264", "266"], ["353", "376"], ["353", "356"], ["353", "372"], ["353", "365"], ["353", "360"], ["353", "353"], ["353", "361"], ["353", "359"], ["353", "367"], ["353", "371"], ["353", "369"], ["406", "412"], ["406", "415"], ["406", "409"], ["406", "406"], ["478", "488"], ["478", "478"], ["478", "485"], ["478", "481"], ["478", "508"], ["142", "148"], ["142", "147"], ["142", "145"], ["142", "149"], ["142", "153"], ["142", "142"], ["415", "418"], ["415", "429"], ["415", "415"], ["415", "433"], ["415", "434"], ["415", "427"], ["415", "421"], ["415", "423"], ["415", "422"], ["415", "431"], ["415", "438"], ["102", "120"], ["102", "102"], ["102", "112"], ["102", "109"], ["102", "105"], ["200", "214"], ["200", "213"], ["200", "247"], ["200", "242"], ["200", "224"], ["200", "202"], ["200", "200"], ["200", "254"], ["200", "229"], ["200", "241"], ["200", "227"], ["200", "255"], ["200", "231"], ["200", "221"], ["200", "239"], ["200", "205"], ["200", "252"], ["200", "235"], ["200", "220"], ["200", "234"], ["200", "211"], ["200", "248"], ["200", "218"], ["282", "334"], ["282", "322"], ["282", "298"], ["282", "300"], ["282", "315"], ["282", "311"], ["282", "328"], ["282", "335"], ["282", "321"], ["282", "319"], ["282", "282"], ["282", "291"], ["282", "307"], ["282", "309"], ["282", "301"], ["282", "332"], ["282", "285"], ["282", "293"], ["282", "314"], ["282", "327"], ["282", "294"], ["282", "303"], ["376", "376"], ["376", "384"], ["376", "401"], ["376", "392"], ["376", "382"], ["376", "390"], ["376", "380"], ["376", "397"], ["376", "385"], ["376", "386"], ["376", "393"], ["376", "399"], ["488", "503"], ["488", "488"], ["488", "499"], ["488", "493"], ["488", "497"], ["488", "502"], ["488", "495"], ["488", "496"], ["488", "491"], ["438", "460"], ["438", "469"], ["438", "452"], ["438", "446"], ["438", "471"], ["438", "442"], ["438", "448"], ["438", "466"], ["438", "447"], ["438", "473"], ["438", "455"], ["438", "468"], ["438", "461"], ["438", "459"], ["438", "463"], ["438", "454"], ["438", "444"], ["438", "438"], ["112", "112"], ["112", "117"], ["112", "115"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY bu = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,bu,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>4</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,String[] s = split(&quot; &quot;))<SUB>5</SUB>>", "45": "<(split,split(&quot; &quot;))<SUB>5</SUB>>", "47": "<(IDENTIFIER,bu,readLine())<SUB>5</SUB>>", "49": "<(LOCAL,int n: int)<SUB>6</SUB>>", "51": "<(LOCAL,int k: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,int n = Integer.parseInt(s[0]))<SUB>6</SUB>>", "55": "<(IDENTIFIER,Integer,Integer.parseInt(s[0]))<SUB>6</SUB>>", "57": "<(IDENTIFIER,s,Integer.parseInt(s[0]))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,int m = Integer.parseInt(s[1]))<SUB>6</SUB>>", "61": "<(parseInt,Integer.parseInt(s[1]))<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,s[1])<SUB>6</SUB>>", "65": "<(LITERAL,1,Integer.parseInt(s[1]))<SUB>6</SUB>>", "67": "<(IDENTIFIER,k,int k = Integer.parseInt(s[2]))<SUB>6</SUB>>", "69": "<(IDENTIFIER,Integer,Integer.parseInt(s[2]))<SUB>6</SUB>>", "71": "<(IDENTIFIER,s,Integer.parseInt(s[2]))<SUB>6</SUB>>", "73": "<(LOCAL,int i: int)<SUB>7</SUB>>", "75": "<(LOCAL,int max: int)<SUB>7</SUB>>", "77": "<(LOCAL,int x: int)<SUB>7</SUB>>", "79": "<(IDENTIFIER,max,int max = n * m)<SUB>7</SUB>>", "81": "<(IDENTIFIER,n,n * m)<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.assignment,int[][] in = new int[n][m])<SUB>7</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[n][m])>", "87": "<(IDENTIFIER,m,new int[n][m])<SUB>7</SUB>>", "89": "<(IDENTIFIER,x,int x = 0)<SUB>7</SUB>>", "91": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>8</SUB>>", "93": "<(&lt;operator&gt;.modulo,k % 2)<SUB>8</SUB>>", "95": "<(LITERAL,2,k % 2)<SUB>8</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.assignment,i = 0)<SUB>10</SUB>>", "101": "<(LITERAL,0,i = 0)<SUB>10</SUB>>", "103": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.assignment,j = 0)<SUB>12</SUB>>", "111": "<(LITERAL,0,j = 0)<SUB>12</SUB>>", "113": "<(IDENTIFIER,j,j &lt; m)<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "117": "<(append,sb.append(&quot;-1 &quot;))<SUB>12</SUB>>", "119": "<(LITERAL,&quot;-1 &quot;,sb.append(&quot;-1 &quot;))<SUB>12</SUB>>", "121": "<(IDENTIFIER,sb,sb.append(&quot;\\n&quot;))<SUB>13</SUB>>", "123": "<(print,System.out.print(sb))<SUB>15</SUB>>", "125": "<(IDENTIFIER,System,System.out.print(sb))<SUB>15</SUB>>", "127": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>15</SUB>>", "129": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "131": "<(IDENTIFIER,i,i = 0)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "135": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.assignment,j = 0)<SUB>20</SUB>>", "141": "<(LITERAL,0,j = 0)<SUB>20</SUB>>", "143": "<(IDENTIFIER,j,j &lt; m)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,j++)<SUB>20</SUB>>", "147": "<(&lt;operator&gt;.assignment,in[i][j] = x++)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>20</SUB>>", "151": "<(IDENTIFIER,i,in[i][j] = x++)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,x++)<SUB>20</SUB>>", "155": "<(LOCAL,ArrayList&lt;Edge&gt;[] g: ANY)<SUB>22</SUB>>", "157": "<(IDENTIFIER,g,ANY g = new ArrayList[max])<SUB>22</SUB>>", "159": "<(IDENTIFIER,max,new ArrayList[max])<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.assignment,i = 0)<SUB>23</SUB>>", "163": "<(LITERAL,0,i = 0)<SUB>23</SUB>>", "165": "<(IDENTIFIER,i,i &lt; max)<SUB>23</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.assignment,g[i] = new ArrayList&lt;&gt;())<SUB>23</SUB>>", "171": "<(IDENTIFIER,g,g[i] = new ArrayList&lt;&gt;())<SUB>23</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "175": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "177": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>23</SUB>>", "179": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "181": "<(&lt;operator&gt;.assignment,i = 0)<SUB>24</SUB>>", "183": "<(LITERAL,0,i = 0)<SUB>24</SUB>>", "185": "<(IDENTIFIER,i,i &lt; n)<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "191": "<(IDENTIFIER,s,s = split(&quot; &quot;))<SUB>26</SUB>>", "193": "<(readLine,readLine())<SUB>26</SUB>>", "195": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.assignment,j = 0)<SUB>27</SUB>>", "199": "<(LITERAL,0,j = 0)<SUB>27</SUB>>", "201": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>27</SUB>>", "203": "<(IDENTIFIER,m,m - 1)<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "209": "<(LOCAL,int v: int)<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.assignment,int u = in[i][j])<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,in[i][j])<SUB>29</SUB>>", "215": "<(IDENTIFIER,in,int u = in[i][j])<SUB>29</SUB>>", "217": "<(IDENTIFIER,j,int u = in[i][j])<SUB>29</SUB>>", "219": "<(IDENTIFIER,v,int v = in[i][j + 1])<SUB>29</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>29</SUB>>", "223": "<(IDENTIFIER,i,int v = in[i][j + 1])<SUB>29</SUB>>", "225": "<(IDENTIFIER,j,j + 1)<SUB>29</SUB>>", "227": "<(&lt;operator&gt;.assignment,int w = Integer.parseInt(s[j]))<SUB>29</SUB>>", "229": "<(parseInt,Integer.parseInt(s[j]))<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>29</SUB>>", "233": "<(IDENTIFIER,j,Integer.parseInt(s[j]))<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,g[u])<SUB>30</SUB>>", "237": "<(IDENTIFIER,u,add(new Edge(v, w)))<SUB>30</SUB>>", "239": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "241": "<(&lt;operator&gt;.alloc,new Edge(v, w))<SUB>30</SUB>>", "243": "<(IDENTIFIER,$obj4,new Edge(v, w))>", "245": "<(IDENTIFIER,w,new Edge(v, w))<SUB>30</SUB>>", "247": "<(add,add(new Edge(u, w)))<SUB>31</SUB>>", "249": "<(IDENTIFIER,g,add(new Edge(u, w)))<SUB>31</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "253": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "255": "<(&lt;init&gt;,new Edge(u, w))<SUB>31</SUB>>", "257": "<(IDENTIFIER,u,new Edge(u, w))<SUB>31</SUB>>", "259": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "261": "<(&lt;operator&gt;.assignment,i = 0)<SUB>34</SUB>>", "263": "<(LITERAL,0,i = 0)<SUB>34</SUB>>", "265": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>34</SUB>>", "267": "<(IDENTIFIER,n,n - 1)<SUB>34</SUB>>", "269": "<(&lt;operator&gt;.postIncrement,i++)<SUB>34</SUB>>", "271": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "273": "<(IDENTIFIER,s,s = split(&quot; &quot;))<SUB>36</SUB>>", "275": "<(readLine,readLine())<SUB>36</SUB>>", "277": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>36</SUB>>", "279": "<(&lt;operator&gt;.assignment,j = 0)<SUB>37</SUB>>", "281": "<(LITERAL,0,j = 0)<SUB>37</SUB>>", "283": "<(IDENTIFIER,j,j &lt; m)<SUB>37</SUB>>", "285": "<(&lt;operator&gt;.postIncrement,j++)<SUB>37</SUB>>", "287": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "289": "<(LOCAL,int v: int)<SUB>39</SUB>>", "291": "<(&lt;operator&gt;.assignment,int u = in[i][j])<SUB>39</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,in[i][j])<SUB>39</SUB>>", "295": "<(IDENTIFIER,in,int u = in[i][j])<SUB>39</SUB>>", "297": "<(IDENTIFIER,j,int u = in[i][j])<SUB>39</SUB>>", "299": "<(IDENTIFIER,v,int v = in[i + 1][j])<SUB>39</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,in[i + 1])<SUB>39</SUB>>", "303": "<(&lt;operator&gt;.addition,i + 1)<SUB>39</SUB>>", "305": "<(LITERAL,1,i + 1)<SUB>39</SUB>>", "307": "<(&lt;operator&gt;.assignment,int w = Integer.parseInt(s[j]))<SUB>39</SUB>>", "309": "<(parseInt,Integer.parseInt(s[j]))<SUB>39</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,s[j])<SUB>39</SUB>>", "313": "<(IDENTIFIER,j,Integer.parseInt(s[j]))<SUB>39</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,g[u])<SUB>40</SUB>>", "317": "<(IDENTIFIER,u,add(new Edge(v, w)))<SUB>40</SUB>>", "319": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "321": "<(&lt;operator&gt;.alloc,new Edge(v, w))<SUB>40</SUB>>", "323": "<(IDENTIFIER,$obj6,new Edge(v, w))>", "325": "<(IDENTIFIER,w,new Edge(v, w))<SUB>40</SUB>>", "327": "<(add,add(new Edge(u, w)))<SUB>41</SUB>>", "329": "<(IDENTIFIER,g,add(new Edge(u, w)))<SUB>41</SUB>>", "331": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "333": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "335": "<(&lt;init&gt;,new Edge(u, w))<SUB>41</SUB>>", "337": "<(IDENTIFIER,u,new Edge(u, w))<SUB>41</SUB>>", "339": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "341": "<(IDENTIFIER,k,k /= 2)<SUB>45</SUB>>", "343": "<(LOCAL,int[][] dp: int[][])<SUB>46</SUB>>", "345": "<(IDENTIFIER,dp,int[][] dp = new int[k][max])<SUB>46</SUB>>", "347": "<(IDENTIFIER,k,new int[k][max])<SUB>46</SUB>>", "349": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; max); i++),for (i = 0; Some(i &lt; max); i++))<SUB>47</SUB>>", "351": "<(IDENTIFIER,i,i = 0)<SUB>47</SUB>>", "353": "<(&lt;operator&gt;.lessThan,i &lt; max)<SUB>47</SUB>>", "355": "<(IDENTIFIER,max,i &lt; max)<SUB>47</SUB>>", "357": "<(IDENTIFIER,i,i++)<SUB>47</SUB>>", "359": "<(&lt;operator&gt;.assignment,dp[0][i] = Integer.MAX_VALUE)<SUB>49</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>49</SUB>>", "363": "<(LITERAL,0,dp[0][i] = Integer.MAX_VALUE)<SUB>49</SUB>>", "365": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>49</SUB>>", "367": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>49</SUB>>", "369": "<(&lt;operator&gt;.assignment,)<SUB>50</SUB>>", "371": "<(iterator,&lt;empty&gt;)<SUB>50</SUB>>", "373": "<(IDENTIFIER,g,&lt;empty&gt;)<SUB>50</SUB>>", "375": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>50</SUB>>", "377": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "379": "<(LOCAL,e: ANY)<SUB>50</SUB>>", "381": "<(IDENTIFIER,e,&lt;empty&gt;)>", "383": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "385": "<(&lt;operator&gt;.indexAccess,dp[0][i])<SUB>51</SUB>>", "387": "<(IDENTIFIER,dp,dp[0][i] = min(dp[0][i], 2 * e.w))<SUB>51</SUB>>", "389": "<(IDENTIFIER,i,dp[0][i] = min(dp[0][i], 2 * e.w))<SUB>51</SUB>>", "391": "<(IDENTIFIER,Math,min(dp[0][i], 2 * e.w))<SUB>51</SUB>>", "393": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>51</SUB>>", "395": "<(LITERAL,0,min(dp[0][i], 2 * e.w))<SUB>51</SUB>>", "397": "<(&lt;operator&gt;.multiplication,2 * e.w)<SUB>51</SUB>>", "399": "<(&lt;operator&gt;.fieldAccess,e.w)<SUB>51</SUB>>", "401": "<(FIELD_IDENTIFIER,w,w)<SUB>51</SUB>>", "403": "<(&lt;operator&gt;.assignment,i = 1)<SUB>54</SUB>>", "405": "<(LITERAL,1,i = 1)<SUB>54</SUB>>", "407": "<(IDENTIFIER,i,i &lt; k)<SUB>54</SUB>>", "409": "<(&lt;operator&gt;.postIncrement,i++)<SUB>54</SUB>>", "411": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; max); j++),for (j = 0; Some(j &lt; max); j++))<SUB>55</SUB>>", "413": "<(IDENTIFIER,j,j = 0)<SUB>55</SUB>>", "415": "<(&lt;operator&gt;.lessThan,j &lt; max)<SUB>55</SUB>>", "417": "<(IDENTIFIER,max,j &lt; max)<SUB>55</SUB>>", "419": "<(IDENTIFIER,j,j++)<SUB>55</SUB>>", "421": "<(&lt;operator&gt;.assignment,dp[i][j] = Integer.MAX_VALUE)<SUB>57</SUB>>", "423": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>57</SUB>>", "425": "<(IDENTIFIER,i,dp[i][j] = Integer.MAX_VALUE)<SUB>57</SUB>>", "427": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>57</SUB>>", "429": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>57</SUB>>", "431": "<(&lt;operator&gt;.assignment,)<SUB>58</SUB>>", "433": "<(iterator,&lt;empty&gt;)<SUB>58</SUB>>", "435": "<(IDENTIFIER,g,&lt;empty&gt;)<SUB>58</SUB>>", "437": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>58</SUB>>", "439": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "441": "<(LOCAL,e: ANY)<SUB>58</SUB>>", "443": "<(IDENTIFIER,e,&lt;empty&gt;)>", "445": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "447": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>59</SUB>>", "449": "<(IDENTIFIER,dp,dp[i][j] = min(dp[i][j], dp[i - 1][e.v] + 2 * e.w))<SUB>59</SUB>>", "451": "<(IDENTIFIER,j,dp[i][j] = min(dp[i][j], dp[i - 1][e.v] + 2 * e.w))<SUB>59</SUB>>", "453": "<(IDENTIFIER,Math,min(dp[i][j], dp[i - 1][e.v] + 2 * e.w))<SUB>59</SUB>>", "455": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>59</SUB>>", "457": "<(IDENTIFIER,i,min(dp[i][j], dp[i - 1][e.v] + 2 * e.w))<SUB>59</SUB>>", "459": "<(&lt;operator&gt;.addition,dp[i - 1][e.v] + 2 * e.w)<SUB>59</SUB>>", "461": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>59</SUB>>", "463": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>59</SUB>>", "465": "<(LITERAL,1,i - 1)<SUB>59</SUB>>", "467": "<(IDENTIFIER,e,dp[i - 1][e.v] + 2 * e.w)<SUB>59</SUB>>", "469": "<(&lt;operator&gt;.multiplication,2 * e.w)<SUB>59</SUB>>", "471": "<(&lt;operator&gt;.fieldAccess,e.w)<SUB>59</SUB>>", "473": "<(FIELD_IDENTIFIER,w,w)<SUB>59</SUB>>", "475": "<(&lt;operator&gt;.assignment,i = 0)<SUB>62</SUB>>", "477": "<(LITERAL,0,i = 0)<SUB>62</SUB>>", "479": "<(IDENTIFIER,i,i &lt; n)<SUB>62</SUB>>", "481": "<(&lt;operator&gt;.postIncrement,i++)<SUB>62</SUB>>", "483": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "485": "<(&lt;operator&gt;.assignment,j = 0)<SUB>64</SUB>>", "487": "<(LITERAL,0,j = 0)<SUB>64</SUB>>", "489": "<(IDENTIFIER,j,j &lt; m)<SUB>64</SUB>>", "491": "<(&lt;operator&gt;.postIncrement,j++)<SUB>64</SUB>>", "493": "<(append,sb.append(dp[k - 1][in[i][j]] + &quot; &quot;))<SUB>65</SUB>>", "495": "<(&lt;operator&gt;.addition,dp[k - 1][in[i][j]] + &quot; &quot;)<SUB>65</SUB>>", "497": "<(&lt;operator&gt;.indexAccess,dp[k - 1])<SUB>65</SUB>>", "499": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>65</SUB>>", "501": "<(LITERAL,1,k - 1)<SUB>65</SUB>>", "503": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>65</SUB>>", "505": "<(IDENTIFIER,i,dp[k - 1][in[i][j]] + &quot; &quot;)<SUB>65</SUB>>", "507": "<(LITERAL,&quot; &quot;,dp[k - 1][in[i][j]] + &quot; &quot;)<SUB>65</SUB>>", "509": "<(IDENTIFIER,sb,sb.append(&quot;\\n&quot;))<SUB>66</SUB>>", "511": "<(print,System.out.print(sb))<SUB>68</SUB>>", "513": "<(IDENTIFIER,System,System.out.print(sb))<SUB>68</SUB>>", "515": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>68</SUB>>", "517": "<(MODIFIER,STATIC)>"}}