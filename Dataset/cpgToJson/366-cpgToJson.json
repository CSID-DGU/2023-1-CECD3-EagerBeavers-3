{"edges": [["21", "23"], ["21", "115"], ["21", "116"], ["21", "117"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "6"], ["23", "46"], ["23", "49"], ["23", "50"], ["23", "51"], ["23", "54"], ["23", "55"], ["23", "58"], ["23", "99"], ["23", "109"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "5"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "67"], ["58", "69"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["69", "70"], ["69", "91"], ["70", "71"], ["70", "76"], ["70", "84"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "80"], ["76", "82"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["46", "49"], ["49", "51"], ["51", "55"], ["55", "60"], ["109", "117"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "46"], ["60", "65"], ["63", "72"], ["63", "100"], ["67", "65"], ["100", "104"], ["100", "112"], ["110", "113"], ["113", "109"], ["30", "28"], ["65", "63"], ["104", "107"], ["107", "100"], ["112", "110"], ["71", "77"], ["71", "86"], ["92", "100"], ["92", "67"], ["72", "71"], ["77", "80"], ["80", "82"], ["82", "94"], ["94", "92"], ["86", "89"], ["89", "94"], ["21", "26"], ["22", "117"], ["24", "117"], ["27", "117"], ["27", "117"], ["32", "117"], ["32", "117"], ["37", "117"], ["37", "117"], ["37", "117"], ["44", "117"], ["42", "117"], ["42", "117"], ["46", "117"], ["49", "117"], ["51", "117"], ["51", "117"], ["55", "117"], ["60", "117"], ["63", "117"], ["65", "117"], ["63", "117"], ["63", "117"], ["72", "117"], ["72", "117"], ["71", "117"], ["71", "117"], ["86", "117"], ["89", "117"], ["77", "117"], ["80", "117"], ["82", "117"], ["92", "117"], ["94", "117"], ["92", "117"], ["92", "117"], ["67", "117"], ["100", "117"], ["100", "117"], ["109", "117"], ["113", "117"], ["109", "117"], ["104", "117"], ["107", "117"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["21", "46"], ["21", "51"], ["21", "55"], ["24", "27"], ["21", "27"], ["46", "49"], ["21", "49"], ["21", "60"], ["113", "109"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["39", "44"], ["21", "44"], ["60", "63"], ["67", "63"], ["21", "63"], ["65", "63"], ["72", "67"], ["21", "67"], ["55", "100"], ["89", "100"], ["82", "100"], ["107", "100"], ["21", "100"], ["49", "113"], ["86", "113"], ["77", "113"], ["104", "113"], ["21", "113"], ["42", "65"], ["72", "65"], ["21", "65"], ["49", "104"], ["86", "104"], ["77", "104"], ["21", "104"], ["100", "107"], ["21", "107"], ["72", "71"], ["72", "71"], ["21", "71"], ["51", "92"], ["80", "92"], ["21", "92"], ["94", "92"], ["94", "92"], ["65", "72"], ["21", "72"], ["63", "72"], ["49", "77"], ["86", "77"], ["21", "77"], ["51", "80"], ["92", "80"], ["21", "80"], ["55", "82"], ["89", "82"], ["21", "82"], ["37", "94"], ["21", "94"], ["49", "86"], ["77", "86"], ["21", "86"], ["55", "89"], ["82", "89"], ["21", "89"], ["63", "94"], ["63", "71"], ["63", "72"], ["63", "92"], ["100", "107"], ["100", "100"], ["100", "104"], ["71", "80"], ["71", "77"], ["71", "89"], ["71", "82"], ["71", "86"], ["92", "67"], ["92", "63"], ["92", "65"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,String s: java.lang.String)<SUB>5</SUB>>", "43": "<(IDENTIFIER,s,String s = next())<SUB>5</SUB>>", "45": "<(IDENTIFIER,sc,next())<SUB>5</SUB>>", "46": "<(&lt;operator&gt;.assignment,StringBuilder ans = new StringBuilder())<SUB>7</SUB>>", "48": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>7</SUB>>", "5": "<(IDENTIFIER,ans,new StringBuilder())<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int count = 0)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int open = 0)<SUB>9</SUB>>", "57": "<(LITERAL,0,int open = 0)<SUB>9</SUB>>", "59": "<(LOCAL,int i: int)<SUB>10</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; s.length())<SUB>10</SUB>>", "65": "<(length,s.length())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.equals,s.charAt(i) == '(')<SUB>11</SUB>>", "73": "<(IDENTIFIER,s,s.charAt(i))<SUB>11</SUB>>", "75": "<(LITERAL,'(',s.charAt(i) == '(')<SUB>11</SUB>>", "77": "<(append,ans.append(&quot;(&quot;))<SUB>12</SUB>>", "79": "<(LITERAL,&quot;(&quot;,ans.append(&quot;(&quot;))<SUB>12</SUB>>", "81": "<(IDENTIFIER,count,count++)<SUB>13</SUB>>", "83": "<(IDENTIFIER,open,open++)<SUB>14</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "87": "<(IDENTIFIER,ans,ans.append(&quot;)&quot;))<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.postDecrement,open--)<SUB>17</SUB>>", "91": "<(CONTROL_STRUCTURE,if (count == k / 2),if (count == k / 2))<SUB>19</SUB>>", "93": "<(IDENTIFIER,count,count == k / 2)<SUB>19</SUB>>", "95": "<(IDENTIFIER,k,k / 2)<SUB>19</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "99": "<(CONTROL_STRUCTURE,while (open &gt; 0),while (open &gt; 0))<SUB>24</SUB>>", "101": "<(IDENTIFIER,open,open &gt; 0)<SUB>24</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "105": "<(IDENTIFIER,ans,ans.append(&quot;)&quot;))<SUB>25</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,open--)<SUB>26</SUB>>", "109": "<(println,System.out.println(ans.toString()))<SUB>28</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(ans.toString()))<SUB>28</SUB>>", "113": "<(toString,ans.toString())<SUB>28</SUB>>", "115": "<(MODIFIER,PUBLIC)>", "117": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}