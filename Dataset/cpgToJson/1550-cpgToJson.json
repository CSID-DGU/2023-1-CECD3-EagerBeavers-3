{"edges": [["21", "22"], ["21", "23"], ["21", "138"], ["21", "139"], ["21", "140"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "53"], ["23", "54"], ["23", "61"], ["23", "62"], ["23", "66"], ["23", "72"], ["23", "91"], ["23", "94"], ["23", "6"], ["23", "97"], ["23", "100"], ["23", "101"], ["23", "102"], ["23", "105"], ["23", "133"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "44"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "71"], ["69", "70"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "5"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["116", "117"], ["116", "123"], ["117", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "126"], ["124", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["24", "31"], ["27", "42"], ["39", "50"], ["46", "58"], ["54", "64"], ["62", "69"], ["66", "74"], ["91", "94"], ["94", "99"], ["97", "100"], ["100", "102"], ["102", "107"], ["133", "140"], ["26", "24"], ["41", "39"], ["48", "46"], ["56", "54"], ["64", "62"], ["68", "66"], ["74", "77"], ["77", "83"], ["77", "91"], ["80", "77"], ["82", "80"], ["99", "97"], ["107", "110"], ["110", "120"], ["110", "136"], ["113", "110"], ["134", "133"], ["29", "36"], ["32", "27"], ["42", "41"], ["50", "48"], ["58", "56"], ["69", "68"], ["83", "88"], ["86", "82"], ["136", "134"], ["31", "29"], ["34", "32"], ["88", "86"], ["117", "124"], ["117", "113"], ["36", "34"], ["118", "117"], ["124", "129"], ["126", "113"], ["120", "118"], ["128", "126"], ["129", "128"], ["21", "26"], ["22", "140"], ["24", "140"], ["29", "140"], ["32", "140"], ["32", "140"], ["32", "140"], ["27", "140"], ["39", "140"], ["48", "140"], ["46", "140"], ["46", "140"], ["54", "140"], ["56", "140"], ["54", "140"], ["54", "140"], ["62", "140"], ["62", "140"], ["66", "140"], ["69", "140"], ["68", "140"], ["66", "140"], ["66", "140"], ["91", "140"], ["91", "140"], ["94", "140"], ["94", "140"], ["97", "140"], ["100", "140"], ["100", "140"], ["102", "140"], ["107", "140"], ["110", "140"], ["110", "140"], ["110", "140"], ["133", "140"], ["133", "140"], ["133", "140"], ["118", "140"], ["118", "140"], ["117", "140"], ["117", "140"], ["124", "140"], ["126", "140"], ["128", "140"], ["128", "140"], ["126", "140"], ["126", "140"], ["113", "140"], ["82", "140"], ["86", "140"], ["82", "140"], ["82", "140"], ["80", "140"], ["94", "140"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["48", "46"], ["56", "54"], ["56", "54"], ["64", "62"], ["68", "66"], ["68", "66"], ["21", "97"], ["21", "102"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "74"], ["86", "82"], ["86", "82"], ["56", "91"], ["86", "91"], ["21", "91"], ["62", "91"], ["82", "91"], ["21", "94"], ["91", "94"], ["82", "94"], ["97", "100"], ["21", "100"], ["21", "107"], ["102", "133"], ["124", "133"], ["21", "133"], ["21", "29"], ["21", "37"], ["42", "41"], ["21", "41"], ["21", "48"], ["39", "48"], ["48", "56"], ["21", "56"], ["39", "56"], ["46", "64"], ["21", "64"], ["69", "68"], ["21", "68"], ["74", "77"], ["80", "77"], ["21", "77"], ["64", "77"], ["77", "80"], ["21", "80"], ["107", "110"], ["113", "110"], ["21", "110"], ["77", "110"], ["110", "113"], ["21", "113"], ["29", "32"], ["21", "32"], ["27", "42"], ["21", "42"], ["42", "69"], ["21", "69"], ["56", "86"], ["21", "86"], ["66", "86"], ["118", "117"], ["118", "117"], ["100", "118"], ["126", "118"], ["21", "118"], ["94", "118"], ["128", "118"], ["82", "118"], ["102", "124"], ["21", "124"], ["118", "126"], ["21", "126"], ["128", "126"], ["128", "126"], ["94", "128"], ["118", "128"], ["54", "128"], ["21", "128"], ["77", "80"], ["77", "77"], ["77", "83"], ["77", "88"], ["77", "82"], ["77", "86"], ["110", "120"], ["110", "113"], ["110", "118"], ["110", "110"], ["110", "117"], ["117", "128"], ["117", "129"], ["117", "124"], ["117", "126"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] arr = split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "43": "<(IDENTIFIER,in,readLine())<SUB>3</SUB>>", "45": "<(LOCAL,int n: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,int n = i(arr[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,this,i(arr[0]))<SUB>4</SUB>>", "51": "<(IDENTIFIER,arr,i(arr[0]))<SUB>4</SUB>>", "53": "<(LOCAL,long k: long)<SUB>5</SUB>>", "55": "<(IDENTIFIER,k,long k = i(arr[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,this,i(arr[1]))<SUB>5</SUB>>", "59": "<(IDENTIFIER,arr,i(arr[1]))<SUB>5</SUB>>", "61": "<(LOCAL,long[] A: long[])<SUB>6</SUB>>", "63": "<(IDENTIFIER,A,long[] A = new long[n])<SUB>6</SUB>>", "65": "<(IDENTIFIER,n,new long[n])<SUB>6</SUB>>", "67": "<(IDENTIFIER,arr,arr = split(&quot; &quot;))<SUB>7</SUB>>", "69": "<(readLine,readLine())<SUB>7</SUB>>", "71": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>7</SUB>>", "73": "<(LOCAL,int i: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,A[i] = i(arr[i]))<SUB>9</SUB>>", "87": "<(IDENTIFIER,this,i(arr[i]))<SUB>9</SUB>>", "89": "<(IDENTIFIER,arr,i(arr[i]))<SUB>9</SUB>>", "91": "<(shuffle,shuffle(A))<SUB>10</SUB>>", "93": "<(IDENTIFIER,A,shuffle(A))<SUB>10</SUB>>", "95": "<(IDENTIFIER,Arrays,sort(A))<SUB>11</SUB>>", "6": "<(LOCAL,Set&lt;Long&gt; BAN: ANY)<SUB>13</SUB>>", "98": "<(IDENTIFIER,BAN,ANY BAN = new HashSet&lt;Long&gt;())<SUB>13</SUB>>", "100": "<(&lt;init&gt;,new HashSet&lt;Long&gt;())<SUB>13</SUB>>", "101": "<(LOCAL,int ans: int)<SUB>14</SUB>>", "103": "<(IDENTIFIER,ans,int ans = 0)<SUB>14</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.logicalNot,!BAN.contains(A[i]))<SUB>16</SUB>>", "119": "<(IDENTIFIER,BAN,contains(A[i]))<SUB>16</SUB>>", "121": "<(IDENTIFIER,A,contains(A[i]))<SUB>16</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "125": "<(IDENTIFIER,ans,ans++)<SUB>17</SUB>>", "127": "<(IDENTIFIER,BAN,add(A[i] * k))<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,A[i] * k)<SUB>18</SUB>>", "133": "<(println,System.out.println(ans))<SUB>21</SUB>>", "135": "<(IDENTIFIER,System,System.out.println(ans))<SUB>21</SUB>>", "137": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>21</SUB>>", "139": "<(MODIFIER,STATIC)>"}}