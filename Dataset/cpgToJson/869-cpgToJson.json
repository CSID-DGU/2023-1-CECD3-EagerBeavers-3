{"edges": [["21", "23"], ["21", "161"], ["21", "162"], ["21", "163"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "6"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "156"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "5"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "67"], ["60", "94"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "73"], ["67", "86"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["74", "75"], ["74", "76"], ["74", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["86", "87"], ["87", "88"], ["88", "89"], ["88", "90"], ["88", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "99"], ["95", "96"], ["95", "98"], ["96", "97"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "142"], ["99", "155"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "112"], ["104", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "126"], ["118", "139"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["127", "128"], ["127", "129"], ["127", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["140", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["41", "44"], ["44", "48"], ["46", "52"], ["156", "163"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "41"], ["48", "46"], ["52", "55"], ["55", "62"], ["55", "159"], ["58", "55"], ["157", "156"], ["30", "28"], ["61", "70"], ["159", "157"], ["62", "65"], ["65", "61"], ["68", "76"], ["68", "90"], ["95", "101"], ["95", "58"], ["70", "68"], ["74", "96"], ["96", "95"], ["101", "106"], ["142", "155"], ["155", "163"], ["76", "82"], ["79", "74"], ["88", "96"], ["106", "109"], ["109", "115"], ["109", "145"], ["112", "109"], ["143", "148"], ["146", "142"], ["80", "79"], ["90", "88"], ["115", "122"], ["145", "143"], ["147", "152"], ["152", "146"], ["82", "80"], ["119", "129"], ["119", "145"], ["148", "147"], ["120", "119"], ["127", "112"], ["122", "120"], ["129", "135"], ["132", "127"], ["133", "132"], ["135", "133"], ["21", "26"], ["155", "163"], ["22", "163"], ["24", "163"], ["27", "163"], ["27", "163"], ["32", "163"], ["37", "163"], ["41", "163"], ["44", "163"], ["46", "163"], ["46", "163"], ["46", "163"], ["52", "163"], ["55", "163"], ["55", "163"], ["65", "163"], ["61", "163"], ["61", "163"], ["68", "163"], ["88", "163"], ["88", "163"], ["74", "163"], ["79", "163"], ["74", "163"], ["74", "163"], ["96", "163"], ["95", "163"], ["95", "163"], ["95", "163"], ["58", "163"], ["101", "163"], ["106", "163"], ["109", "163"], ["109", "163"], ["115", "163"], ["115", "163"], ["120", "163"], ["120", "163"], ["119", "163"], ["119", "163"], ["142", "163"], ["148", "163"], ["147", "163"], ["146", "163"], ["152", "163"], ["146", "163"], ["142", "163"], ["127", "163"], ["127", "163"], ["132", "163"], ["127", "163"], ["127", "163"], ["112", "163"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "41"], ["48", "46"], ["24", "27"], ["21", "27"], ["41", "44"], ["21", "44"], ["21", "52"], ["21", "156"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["32", "48"], ["21", "48"], ["52", "55"], ["58", "55"], ["21", "55"], ["48", "55"], ["55", "58"], ["21", "58"], ["65", "61"], ["39", "65"], ["21", "65"], ["44", "68"], ["96", "68"], ["21", "68"], ["46", "68"], ["61", "68"], ["96", "95"], ["37", "95"], ["21", "95"], ["21", "101"], ["21", "155"], ["80", "74"], ["21", "74"], ["46", "74"], ["80", "74"], ["88", "96"], ["74", "96"], ["21", "96"], ["21", "106"], ["101", "142"], ["115", "142"], ["21", "142"], ["109", "142"], ["80", "79"], ["80", "79"], ["21", "79"], ["68", "88"], ["21", "88"], ["46", "88"], ["68", "88"], ["106", "109"], ["112", "109"], ["21", "109"], ["55", "109"], ["21", "112"], ["109", "112"], ["109", "115"], ["21", "115"], ["101", "146"], ["115", "146"], ["21", "146"], ["109", "146"], ["68", "80"], ["21", "80"], ["46", "80"], ["68", "80"], ["101", "147"], ["115", "147"], ["21", "147"], ["109", "152"], ["21", "152"], ["120", "119"], ["120", "119"], ["21", "119"], ["101", "148"], ["115", "148"], ["21", "148"], ["96", "120"], ["127", "120"], ["21", "120"], ["46", "120"], ["127", "120"], ["133", "127"], ["21", "127"], ["46", "127"], ["133", "127"], ["132", "127"], ["132", "127"], ["133", "132"], ["133", "132"], ["21", "132"], ["120", "133"], ["21", "133"], ["46", "133"], ["120", "133"], ["55", "68"], ["55", "96"], ["55", "95"], ["55", "65"], ["55", "157"], ["55", "159"], ["55", "61"], ["55", "70"], ["55", "156"], ["55", "62"], ["68", "74"], ["68", "76"], ["68", "82"], ["68", "90"], ["68", "79"], ["68", "80"], ["68", "88"], ["95", "145"], ["95", "146"], ["95", "142"], ["95", "106"], ["95", "101"], ["95", "148"], ["95", "143"], ["95", "58"], ["95", "152"], ["95", "147"], ["95", "155"], ["95", "55"], ["95", "109"], ["109", "115"], ["109", "120"], ["109", "122"], ["109", "119"], ["119", "132"], ["119", "112"], ["119", "129"], ["119", "135"], ["119", "127"], ["119", "109"], ["119", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int distinct = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "6": "<(LOCAL,HashMap&lt;Integer, Integer&gt; set: ANY)<SUB>5</SUB>>", "42": "<(IDENTIFIER,set,ANY set = new HashMap&lt;Integer, Integer&gt;())<SUB>5</SUB>>", "44": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>5</SUB>>", "45": "<(LOCAL,int[] ar: int[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,ar,int[] ar = new int[n])<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "51": "<(LOCAL,int i: int)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,ar[i] = nextInt())<SUB>8</SUB>>", "63": "<(IDENTIFIER,ar,ar[i] = nextInt())<SUB>8</SUB>>", "65": "<(nextInt,nextInt())<SUB>8</SUB>>", "67": "<(CONTROL_STRUCTURE,if (set.containsKey(ar[i])),if (set.containsKey(ar[i])))<SUB>9</SUB>>", "69": "<(IDENTIFIER,set,containsKey(ar[i]))<SUB>9</SUB>>", "71": "<(IDENTIFIER,ar,containsKey(ar[i]))<SUB>9</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "75": "<(IDENTIFIER,set,put(ar[i], set.get(ar[i]) + 1))<SUB>10</SUB>>", "77": "<(IDENTIFIER,ar,put(ar[i], set.get(ar[i]) + 1))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.addition,set.get(ar[i]) + 1)<SUB>10</SUB>>", "81": "<(IDENTIFIER,set,get(ar[i]))<SUB>10</SUB>>", "83": "<(IDENTIFIER,ar,get(ar[i]))<SUB>10</SUB>>", "85": "<(LITERAL,1,set.get(ar[i]) + 1)<SUB>10</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(IDENTIFIER,set,put(ar[i], 1))<SUB>12</SUB>>", "91": "<(IDENTIFIER,ar,put(ar[i], 1))<SUB>12</SUB>>", "93": "<(LITERAL,1,put(ar[i], 1))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.equals,set.size() == distinct)<SUB>14</SUB>>", "97": "<(IDENTIFIER,set,size())<SUB>14</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int st = 0)<SUB>15</SUB>>", "103": "<(LITERAL,0,int st = 0)<SUB>15</SUB>>", "105": "<(LOCAL,int j: int)<SUB>16</SUB>>", "107": "<(IDENTIFIER,j,int j = 0)<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>16</SUB>>", "111": "<(IDENTIFIER,i,j &lt; i)<SUB>16</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,st = j)<SUB>17</SUB>>", "117": "<(IDENTIFIER,j,st = j)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.greaterThan,set.get(ar[j]) &gt; 1)<SUB>18</SUB>>", "121": "<(IDENTIFIER,set,get(ar[j]))<SUB>18</SUB>>", "123": "<(IDENTIFIER,ar,get(ar[j]))<SUB>18</SUB>>", "125": "<(LITERAL,1,set.get(ar[j]) &gt; 1)<SUB>18</SUB>>", "127": "<(put,put(ar[j], set.get(ar[j]) - 1))<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,ar[j])<SUB>19</SUB>>", "131": "<(IDENTIFIER,j,put(ar[j], set.get(ar[j]) - 1))<SUB>19</SUB>>", "133": "<(get,get(ar[j]))<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,ar[j])<SUB>19</SUB>>", "137": "<(IDENTIFIER,j,get(ar[j]))<SUB>19</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "141": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "145": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.addition,(st + 1) + &quot; &quot;)<SUB>24</SUB>>", "149": "<(IDENTIFIER,st,st + 1)<SUB>24</SUB>>", "151": "<(LITERAL,&quot; &quot;,(st + 1) + &quot; &quot;)<SUB>24</SUB>>", "153": "<(IDENTIFIER,i,i + 1)<SUB>24</SUB>>", "155": "<(RETURN,return;,return;)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}