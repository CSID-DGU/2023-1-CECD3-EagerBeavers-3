{"edges": [["17", "19"], ["17", "153"], ["17", "154"], ["17", "155"], ["19", "20"], ["19", "23"], ["19", "28"], ["19", "31"], ["19", "36"], ["19", "37"], ["19", "41"], ["19", "42"], ["19", "47"], ["19", "48"], ["19", "51"], ["19", "85"], ["19", "86"], ["19", "90"], ["19", "95"], ["19", "151"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "69"], ["62", "72"], ["62", "74"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "83"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "100"], ["96", "97"], ["96", "99"], ["97", "98"], ["100", "101"], ["100", "102"], ["100", "103"], ["100", "107"], ["100", "111"], ["100", "112"], ["100", "119"], ["100", "128"], ["100", "133"], ["100", "140"], ["103", "104"], ["103", "105"], ["105", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "144"], ["140", "147"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["20", "27"], ["23", "30"], ["28", "35"], ["31", "39"], ["37", "44"], ["42", "48"], ["48", "53"], ["86", "92"], ["90", "97"], ["151", "155"], ["22", "20"], ["25", "23"], ["30", "28"], ["33", "31"], ["39", "37"], ["44", "42"], ["53", "56"], ["56", "66"], ["56", "88"], ["59", "56"], ["88", "86"], ["92", "90"], ["96", "105"], ["96", "151"], ["27", "25"], ["35", "33"], ["97", "96"], ["103", "109"], ["107", "115"], ["112", "124"], ["119", "130"], ["128", "136"], ["133", "141"], ["64", "69"], ["69", "77"], ["69", "59"], ["72", "69"], ["105", "103"], ["109", "107"], ["114", "112"], ["121", "119"], ["130", "128"], ["135", "133"], ["141", "144"], ["141", "148"], ["144", "97"], ["66", "64"], ["115", "114"], ["122", "121"], ["136", "135"], ["148", "97"], ["76", "83"], ["76", "72"], ["83", "72"], ["124", "122"], ["77", "80"], ["80", "76"], ["17", "22"], ["18", "155"], ["20", "155"], ["23", "155"], ["23", "155"], ["23", "155"], ["28", "155"], ["31", "155"], ["31", "155"], ["37", "155"], ["42", "155"], ["42", "155"], ["42", "155"], ["48", "155"], ["53", "155"], ["56", "155"], ["56", "155"], ["56", "155"], ["88", "155"], ["86", "155"], ["86", "155"], ["90", "155"], ["90", "155"], ["90", "155"], ["97", "155"], ["96", "155"], ["96", "155"], ["151", "155"], ["151", "155"], ["103", "155"], ["109", "155"], ["107", "155"], ["107", "155"], ["115", "155"], ["115", "155"], ["114", "155"], ["112", "155"], ["112", "155"], ["122", "155"], ["121", "155"], ["119", "155"], ["119", "155"], ["128", "155"], ["128", "155"], ["136", "155"], ["135", "155"], ["133", "155"], ["133", "155"], ["141", "155"], ["141", "155"], ["148", "155"], ["144", "155"], ["64", "155"], ["64", "155"], ["69", "155"], ["69", "155"], ["59", "155"], ["76", "155"], ["76", "155"], ["76", "155"], ["83", "155"], ["72", "155"], ["17", "18"], ["17", "20"], ["17", "28"], ["39", "37"], ["44", "42"], ["44", "42"], ["17", "48"], ["88", "86"], ["92", "90"], ["92", "90"], ["20", "23"], ["17", "23"], ["28", "31"], ["17", "31"], ["17", "53"], ["31", "151"], ["148", "151"], ["144", "151"], ["17", "151"], ["17", "39"], ["39", "44"], ["17", "44"], ["37", "44"], ["53", "56"], ["59", "56"], ["17", "56"], ["44", "56"], ["69", "56"], ["17", "59"], ["56", "59"], ["44", "88"], ["17", "88"], ["48", "92"], ["83", "92"], ["17", "92"], ["97", "96"], ["17", "96"], ["105", "103"], ["109", "107"], ["115", "112"], ["115", "112"], ["17", "112"], ["121", "119"], ["121", "119"], ["130", "128"], ["130", "128"], ["135", "133"], ["135", "133"], ["56", "64"], ["17", "64"], ["86", "97"], ["17", "97"], ["64", "69"], ["72", "69"], ["17", "69"], ["56", "69"], ["69", "72"], ["17", "72"], ["88", "105"], ["109", "105"], ["17", "105"], ["105", "109"], ["17", "109"], ["115", "114"], ["115", "114"], ["17", "114"], ["122", "121"], ["122", "121"], ["17", "121"], ["119", "130"], ["17", "130"], ["90", "135"], ["141", "135"], ["17", "135"], ["128", "135"], ["133", "141"], ["17", "141"], ["31", "144"], ["148", "144"], ["17", "144"], ["56", "66"], ["17", "66"], ["107", "115"], ["17", "115"], ["103", "115"], ["124", "122"], ["17", "122"], ["124", "122"], ["90", "136"], ["141", "136"], ["17", "136"], ["128", "136"], ["31", "148"], ["144", "148"], ["17", "148"], ["42", "76"], ["48", "83"], ["17", "83"], ["112", "124"], ["17", "124"], ["56", "64"], ["56", "66"], ["56", "56"], ["56", "69"], ["56", "59"], ["96", "107"], ["96", "115"], ["96", "141"], ["96", "96"], ["96", "136"], ["96", "122"], ["96", "128"], ["96", "114"], ["96", "103"], ["96", "119"], ["96", "121"], ["96", "97"], ["96", "112"], ["96", "105"], ["96", "130"], ["96", "135"], ["96", "124"], ["96", "109"], ["96", "133"], ["69", "77"], ["69", "72"], ["69", "69"], ["69", "76"], ["69", "80"], ["141", "144"], ["141", "148"], ["76", "83"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(IDENTIFIER,in,in = new InputReader(System.in))<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new InputReader(System.in))<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "27": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "29": "<(IDENTIFIER,w,w = new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "35": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = ni())<SUB>5</SUB>>", "39": "<(ni,ni())<SUB>5</SUB>>", "41": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,a,int[] a = na(n))<SUB>6</SUB>>", "45": "<(IDENTIFIER,this,na(n))<SUB>6</SUB>>", "47": "<(LOCAL,int ans: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,ans,int ans = 0)<SUB>7</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "63": "<(LOCAL,int j: int)<SUB>10</SUB>>", "65": "<(IDENTIFIER,j,int j = i + 1)<SUB>10</SUB>>", "67": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>10</SUB>>", "71": "<(IDENTIFIER,n,j &lt; n)<SUB>10</SUB>>", "73": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "75": "<(CONTROL_STRUCTURE,if (a[j] &lt; a[i]),if (a[j] &lt; a[i]))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,a[j] &lt; a[i])<SUB>12</SUB>>", "81": "<(IDENTIFIER,a,a[j] &lt; a[i])<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>13</SUB>>", "85": "<(LOCAL,int m: int)<SUB>16</SUB>>", "87": "<(IDENTIFIER,m,int m = ni())<SUB>16</SUB>>", "89": "<(IDENTIFIER,this,ni())<SUB>16</SUB>>", "91": "<(IDENTIFIER,ans,ans = ans % 2)<SUB>17</SUB>>", "93": "<(IDENTIFIER,ans,ans % 2)<SUB>17</SUB>>", "95": "<(CONTROL_STRUCTURE,while (m-- &gt; 0),while (m-- &gt; 0))<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.postDecrement,m--)<SUB>18</SUB>>", "99": "<(LITERAL,0,m-- &gt; 0)<SUB>18</SUB>>", "101": "<(LOCAL,int l: int)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.assignment,int l = ni())<SUB>20</SUB>>", "105": "<(ni,ni())<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.assignment,int r = ni())<SUB>20</SUB>>", "109": "<(ni,ni())<SUB>20</SUB>>", "111": "<(LOCAL,int range: int)<SUB>21</SUB>>", "113": "<(IDENTIFIER,range,int range = r - l + 1)<SUB>21</SUB>>", "115": "<(&lt;operator&gt;.subtraction,r - l)<SUB>21</SUB>>", "117": "<(IDENTIFIER,l,r - l)<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.assignment,range = range * (range - 1) / 2)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.division,range * (range - 1) / 2)<SUB>22</SUB>>", "123": "<(IDENTIFIER,range,range * (range - 1))<SUB>22</SUB>>", "125": "<(IDENTIFIER,range,range - 1)<SUB>22</SUB>>", "127": "<(LITERAL,2,range * (range - 1) / 2)<SUB>22</SUB>>", "129": "<(IDENTIFIER,range,range = range % 2)<SUB>23</SUB>>", "131": "<(IDENTIFIER,range,range % 2)<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.assignment,ans = (ans + range) % 2)<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.modulo,(ans + range) % 2)<SUB>24</SUB>>", "137": "<(IDENTIFIER,ans,ans + range)<SUB>24</SUB>>", "139": "<(LITERAL,2,(ans + range) % 2)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.equals,ans == 1)<SUB>25</SUB>>", "143": "<(LITERAL,1,ans == 1)<SUB>25</SUB>>", "145": "<(IDENTIFIER,w,println(&quot;odd&quot;))<SUB>26</SUB>>", "147": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "149": "<(IDENTIFIER,w,println(&quot;even&quot;))<SUB>28</SUB>>", "151": "<(close,close())<SUB>30</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}