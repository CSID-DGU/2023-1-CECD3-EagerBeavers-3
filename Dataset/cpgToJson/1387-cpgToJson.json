{"edges": [["19", "21"], ["19", "183"], ["19", "184"], ["19", "185"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "33"], ["21", "34"], ["21", "40"], ["21", "82"], ["21", "83"], ["21", "92"], ["21", "93"], ["21", "96"], ["21", "97"], ["21", "100"], ["21", "144"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "32"], ["30", "31"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "39"], ["37", "38"], ["40", "41"], ["40", "44"], ["40", "51"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "50"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["51", "52"], ["52", "53"], ["52", "56"], ["52", "63"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["63", "64"], ["64", "65"], ["64", "74"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "81"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "117"], ["104", "118"], ["104", "129"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "133"], ["129", "139"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "156"], ["144", "168"], ["145", "146"], ["145", "155"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["156", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["168", "169"], ["169", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["22", "25"], ["25", "30"], ["27", "37"], ["34", "41"], ["83", "93"], ["93", "97"], ["97", "101"], ["24", "22"], ["29", "27"], ["36", "34"], ["41", "48"], ["41", "53"], ["85", "83"], ["101", "112"], ["101", "150"], ["145", "160"], ["145", "173"], ["30", "29"], ["37", "36"], ["45", "50"], ["50", "185"], ["86", "85"], ["106", "125"], ["118", "130"], ["146", "145"], ["157", "185"], ["46", "45"], ["53", "60"], ["53", "70"], ["88", "86"], ["108", "106"], ["120", "118"], ["130", "136"], ["130", "141"], ["148", "146"], ["158", "164"], ["161", "157"], ["170", "185"], ["48", "46"], ["57", "62"], ["62", "185"], ["110", "108"], ["122", "120"], ["134", "101"], ["149", "148"], ["160", "158"], ["162", "161"], ["171", "179"], ["174", "170"], ["58", "57"], ["65", "78"], ["65", "88"], ["111", "110"], ["123", "122"], ["136", "134"], ["141", "101"], ["150", "149"], ["164", "162"], ["173", "171"], ["176", "174"], ["60", "58"], ["67", "65"], ["75", "81"], ["81", "185"], ["112", "111"], ["125", "123"], ["177", "176"], ["68", "67"], ["76", "79"], ["79", "75"], ["179", "177"], ["70", "68"], ["78", "76"], ["19", "24"], ["50", "185"], ["81", "185"], ["62", "185"], ["20", "185"], ["22", "185"], ["25", "185"], ["29", "185"], ["27", "185"], ["27", "185"], ["34", "185"], ["37", "185"], ["36", "185"], ["34", "185"], ["34", "185"], ["41", "185"], ["41", "185"], ["45", "185"], ["45", "185"], ["19", "20"], ["19", "22"], ["29", "27"], ["29", "27"], ["36", "34"], ["36", "34"], ["85", "83"], ["85", "83"], ["19", "93"], ["86", "97"], ["19", "97"], ["22", "25"], ["19", "25"], ["30", "29"], ["19", "29"], ["37", "36"], ["19", "36"], ["27", "41"], ["19", "41"], ["19", "50"], ["86", "85"], ["86", "85"], ["19", "85"], ["93", "101"], ["141", "101"], ["19", "101"], ["112", "101"], ["97", "101"], ["112", "101"], ["134", "101"], ["112", "106"], ["19", "106"], ["110", "106"], ["110", "106"], ["120", "118"], ["120", "118"], ["146", "145"], ["146", "145"], ["65", "145"], ["130", "145"], ["19", "145"], ["25", "30"], ["19", "30"], ["30", "37"], ["19", "37"], ["19", "45"], ["19", "86"], ["68", "86"], ["83", "146"], ["120", "146"], ["19", "146"], ["148", "146"], ["148", "146"], ["162", "157"], ["162", "157"], ["19", "157"], ["41", "53"], ["19", "53"], ["34", "53"], ["19", "62"], ["68", "88"], ["19", "88"], ["112", "108"], ["19", "108"], ["110", "108"], ["110", "108"], ["83", "120"], ["19", "120"], ["122", "120"], ["122", "120"], ["118", "130"], ["19", "130"], ["65", "130"], ["136", "134"], ["136", "134"], ["149", "148"], ["149", "148"], ["19", "148"], ["162", "161"], ["162", "161"], ["19", "161"], ["19", "170"], ["177", "170"], ["177", "170"], ["19", "57"], ["112", "110"], ["112", "110"], ["19", "110"], ["123", "122"], ["123", "122"], ["19", "122"], ["123", "141"], ["19", "141"], ["101", "149"], ["19", "149"], ["19", "162"], ["86", "162"], ["149", "162"], ["19", "174"], ["177", "174"], ["177", "174"], ["53", "65"], ["19", "65"], ["67", "65"], ["67", "65"], ["19", "81"], ["112", "111"], ["112", "111"], ["19", "111"], ["125", "123"], ["19", "123"], ["125", "123"], ["123", "136"], ["19", "136"], ["101", "150"], ["19", "150"], ["149", "164"], ["19", "164"], ["177", "176"], ["177", "176"], ["19", "176"], ["68", "67"], ["68", "67"], ["19", "67"], ["79", "75"], ["101", "112"], ["19", "112"], ["101", "112"], ["106", "125"], ["19", "125"], ["19", "177"], ["86", "177"], ["149", "177"], ["19", "68"], ["53", "68"], ["19", "79"], ["149", "179"], ["19", "179"], ["53", "70"], ["19", "70"], ["41", "50"], ["41", "48"], ["41", "46"], ["41", "45"], ["41", "53"], ["101", "120"], ["101", "112"], ["101", "101"], ["101", "130"], ["101", "118"], ["101", "108"], ["101", "111"], ["101", "122"], ["101", "123"], ["101", "106"], ["101", "110"], ["101", "125"], ["145", "161"], ["145", "179"], ["145", "162"], ["145", "170"], ["145", "173"], ["145", "174"], ["145", "164"], ["145", "158"], ["145", "171"], ["145", "160"], ["145", "157"], ["145", "176"], ["145", "177"], ["53", "68"], ["53", "60"], ["53", "57"], ["53", "67"], ["53", "58"], ["53", "70"], ["53", "65"], ["53", "62"], ["130", "136"], ["130", "134"], ["130", "141"], ["65", "75"], ["65", "145"], ["65", "146"], ["65", "81"], ["65", "85"], ["65", "149"], ["65", "150"], ["65", "76"], ["65", "97"], ["65", "93"], ["65", "101"], ["65", "148"], ["65", "79"], ["65", "88"], ["65", "86"], ["65", "83"], ["65", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = sc.nextLong() - 1)<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.subtraction,sc.nextLong() - 1)<SUB>3</SUB>>", "31": "<(IDENTIFIER,sc,nextLong())<SUB>3</SUB>>", "33": "<(LOCAL,long k: long)<SUB>4</SUB>>", "35": "<(IDENTIFIER,k,long k = sc.nextInt() - 1)<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LITERAL,1,sc.nextInt() - 1)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.equals,n == 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,n == 0)<SUB>6</SUB>>", "45": "<(println,System.out.println(0))<SUB>7</SUB>>", "47": "<(IDENTIFIER,System,System.out.println(0))<SUB>7</SUB>>", "49": "<(LITERAL,0,System.out.println(0))<SUB>7</SUB>>", "51": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>9</SUB>>", "55": "<(IDENTIFIER,k,n &lt;= k)<SUB>9</SUB>>", "57": "<(println,System.out.println(1))<SUB>10</SUB>>", "59": "<(IDENTIFIER,System,System.out.println(1))<SUB>10</SUB>>", "61": "<(LITERAL,1,System.out.println(1))<SUB>10</SUB>>", "63": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.greaterThan,n &gt; k * (k + 1) / 2)<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.division,k * (k + 1) / 2)<SUB>12</SUB>>", "69": "<(IDENTIFIER,k,k * (k + 1))<SUB>12</SUB>>", "71": "<(IDENTIFIER,k,k + 1)<SUB>12</SUB>>", "73": "<(LITERAL,2,k * (k + 1) / 2)<SUB>12</SUB>>", "75": "<(println,System.out.println(-1))<SUB>13</SUB>>", "77": "<(IDENTIFIER,System,System.out.println(-1))<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.minus,-1)<SUB>13</SUB>>", "81": "<(RETURN,return;,return;)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,long rightSum = k * (k + 1) / 2)<SUB>21</SUB>>", "85": "<(&lt;operator&gt;.division,k * (k + 1) / 2)<SUB>21</SUB>>", "87": "<(IDENTIFIER,k,k * (k + 1))<SUB>21</SUB>>", "89": "<(IDENTIFIER,k,k + 1)<SUB>21</SUB>>", "91": "<(LITERAL,2,k * (k + 1) / 2)<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.assignment,long lo = 1)<SUB>22</SUB>>", "95": "<(LITERAL,1,long lo = 1)<SUB>22</SUB>>", "97": "<(&lt;operator&gt;.assignment,long hi = k)<SUB>23</SUB>>", "99": "<(IDENTIFIER,k,long hi = k)<SUB>23</SUB>>", "101": "<(&lt;operator&gt;.lessThan,lo &lt; hi)<SUB>24</SUB>>", "103": "<(IDENTIFIER,hi,lo &lt; hi)<SUB>24</SUB>>", "105": "<(LOCAL,long mid: long)<SUB>25</SUB>>", "107": "<(IDENTIFIER,mid,long mid = lo + (hi - lo + 1) / 2)<SUB>25</SUB>>", "109": "<(IDENTIFIER,lo,lo + (hi - lo + 1) / 2)<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.addition,hi - lo + 1)<SUB>25</SUB>>", "113": "<(IDENTIFIER,hi,hi - lo)<SUB>25</SUB>>", "115": "<(LITERAL,1,hi - lo + 1)<SUB>25</SUB>>", "117": "<(LOCAL,long val: long)<SUB>26</SUB>>", "119": "<(IDENTIFIER,val,long val = rightSum - mid * (mid - 1) / 2)<SUB>26</SUB>>", "121": "<(IDENTIFIER,rightSum,rightSum - mid * (mid - 1) / 2)<SUB>26</SUB>>", "123": "<(&lt;operator&gt;.multiplication,mid * (mid - 1))<SUB>26</SUB>>", "125": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>26</SUB>>", "127": "<(LITERAL,1,mid - 1)<SUB>26</SUB>>", "129": "<(CONTROL_STRUCTURE,if (val &lt;= n),if (val &lt;= n))<SUB>28</SUB>>", "131": "<(IDENTIFIER,val,val &lt;= n)<SUB>28</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "135": "<(IDENTIFIER,hi,hi = mid - 1)<SUB>29</SUB>>", "137": "<(IDENTIFIER,mid,mid - 1)<SUB>29</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "141": "<(&lt;operator&gt;.assignment,lo = mid)<SUB>31</SUB>>", "143": "<(IDENTIFIER,mid,lo = mid)<SUB>31</SUB>>", "145": "<(&lt;operator&gt;.equals,rightSum - (lo + 1) * (lo) / 2 == n)<SUB>37</SUB>>", "147": "<(IDENTIFIER,rightSum,rightSum - (lo + 1) * (lo) / 2)<SUB>37</SUB>>", "149": "<(&lt;operator&gt;.multiplication,(lo + 1) * (lo))<SUB>37</SUB>>", "151": "<(IDENTIFIER,lo,lo + 1)<SUB>37</SUB>>", "153": "<(IDENTIFIER,lo,(lo + 1) * (lo))<SUB>37</SUB>>", "155": "<(IDENTIFIER,n,rightSum - (lo + 1) * (lo) / 2 == n)<SUB>37</SUB>>", "157": "<(println,System.out.println(k - (lo + 1) + 1))<SUB>38</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(k - (lo + 1) + 1))<SUB>38</SUB>>", "161": "<(&lt;operator&gt;.addition,k - (lo + 1) + 1)<SUB>38</SUB>>", "163": "<(IDENTIFIER,k,k - (lo + 1))<SUB>38</SUB>>", "165": "<(IDENTIFIER,lo,lo + 1)<SUB>38</SUB>>", "167": "<(LITERAL,1,k - (lo + 1) + 1)<SUB>38</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "171": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "173": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "175": "<(LITERAL,1,1 + (k - (lo + 1) + 1))<SUB>40</SUB>>", "177": "<(&lt;operator&gt;.subtraction,k - (lo + 1))<SUB>40</SUB>>", "179": "<(&lt;operator&gt;.addition,lo + 1)<SUB>40</SUB>>", "181": "<(LITERAL,1,lo + 1)<SUB>40</SUB>>", "183": "<(MODIFIER,PUBLIC)>", "185": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}