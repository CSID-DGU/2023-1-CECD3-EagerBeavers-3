{"edges": [["21", "22"], ["21", "23"], ["21", "174"], ["21", "175"], ["21", "176"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "28"], ["23", "32"], ["23", "36"], ["23", "6"], ["23", "52"], ["23", "55"], ["23", "56"], ["23", "57"], ["23", "60"], ["23", "102"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["36", "41"], ["36", "44"], ["36", "46"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "54"], ["55", "5"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "78"], ["71", "95"], ["72", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "85"], ["79", "80"], ["79", "81"], ["79", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "90"], ["86", "87"], ["86", "89"], ["87", "88"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["96", "97"], ["96", "98"], ["96", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "105"], ["102", "110"], ["103", "104"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "117"], ["111", "118"], ["111", "123"], ["111", "124"], ["111", "129"], ["111", "130"], ["111", "134"], ["111", "161"], ["113", "114"], ["113", "115"], ["115", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "137"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "143"], ["137", "144"], ["137", "149"], ["137", "155"], ["139", "140"], ["139", "141"], ["141", "142"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["151", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["157", "160"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["24", "27"], ["27", "30"], ["28", "34"], ["32", "38"], ["52", "55"], ["55", "57"], ["57", "62"], ["26", "24"], ["30", "28"], ["34", "32"], ["38", "41"], ["41", "47"], ["41", "54"], ["44", "41"], ["46", "44"], ["54", "52"], ["62", "65"], ["65", "75"], ["65", "103"], ["68", "65"], ["103", "108"], ["103", "115"], ["105", "176"], ["47", "50"], ["50", "46"], ["106", "105"], ["72", "81"], ["72", "98"], ["108", "106"], ["113", "122"], ["118", "128"], ["124", "132"], ["130", "135"], ["161", "176"], ["73", "72"], ["79", "87"], ["96", "68"], ["115", "113"], ["120", "118"], ["126", "124"], ["132", "130"], ["135", "141"], ["135", "164"], ["162", "167"], ["165", "161"], ["75", "73"], ["81", "79"], ["86", "91"], ["86", "68"], ["98", "96"], ["122", "120"], ["128", "126"], ["139", "146"], ["144", "151"], ["149", "157"], ["155", "135"], ["164", "162"], ["166", "171"], ["171", "165"], ["87", "86"], ["91", "103"], ["141", "139"], ["146", "144"], ["151", "149"], ["157", "155"], ["167", "166"], ["21", "26"], ["22", "176"], ["24", "176"], ["27", "176"], ["28", "176"], ["32", "176"], ["34", "176"], ["32", "176"], ["32", "176"], ["52", "176"], ["55", "176"], ["55", "176"], ["57", "176"], ["62", "176"], ["65", "176"], ["65", "176"], ["65", "176"], ["72", "176"], ["72", "176"], ["96", "176"], ["96", "176"], ["96", "176"], ["79", "176"], ["79", "176"], ["79", "176"], ["87", "176"], ["86", "176"], ["86", "176"], ["86", "176"], ["68", "176"], ["91", "176"], ["103", "176"], ["103", "176"], ["105", "176"], ["46", "176"], ["50", "176"], ["46", "176"], ["46", "176"], ["44", "176"], ["21", "22"], ["21", "24"], ["30", "28"], ["34", "32"], ["21", "52"], ["21", "57"], ["24", "27"], ["21", "27"], ["21", "38"], ["50", "46"], ["52", "55"], ["21", "55"], ["21", "62"], ["27", "30"], ["21", "30"], ["30", "34"], ["21", "34"], ["38", "41"], ["44", "41"], ["21", "41"], ["28", "41"], ["41", "44"], ["21", "44"], ["62", "65"], ["68", "65"], ["21", "65"], ["41", "65"], ["96", "68"], ["79", "68"], ["21", "68"], ["57", "103"], ["91", "103"], ["21", "103"], ["21", "105"], ["34", "50"], ["21", "50"], ["115", "113"], ["132", "130"], ["73", "72"], ["73", "72"], ["118", "161"], ["149", "161"], ["21", "161"], ["124", "161"], ["155", "161"], ["55", "73"], ["96", "73"], ["87", "73"], ["21", "73"], ["96", "73"], ["79", "73"], ["46", "73"], ["73", "79"], ["21", "79"], ["73", "79"], ["65", "79"], ["73", "96"], ["21", "96"], ["73", "96"], ["65", "96"], ["55", "115"], ["96", "115"], ["87", "115"], ["21", "115"], ["113", "132"], ["21", "132"], ["130", "135"], ["141", "135"], ["21", "135"], ["141", "139"], ["146", "144"], ["146", "144"], ["151", "149"], ["151", "149"], ["151", "149"], ["157", "155"], ["157", "155"], ["157", "155"], ["118", "165"], ["149", "165"], ["21", "165"], ["124", "165"], ["155", "165"], ["87", "86"], ["32", "86"], ["21", "86"], ["21", "91"], ["118", "166"], ["149", "166"], ["21", "166"], ["124", "171"], ["155", "171"], ["21", "171"], ["79", "87"], ["21", "87"], ["135", "141"], ["21", "141"], ["115", "146"], ["21", "146"], ["139", "146"], ["157", "151"], ["21", "151"], ["118", "151"], ["149", "151"], ["144", "151"], ["151", "157"], ["21", "157"], ["124", "157"], ["155", "157"], ["151", "157"], ["118", "167"], ["149", "167"], ["21", "167"], ["41", "50"], ["41", "44"], ["41", "47"], ["41", "46"], ["41", "41"], ["65", "73"], ["65", "75"], ["65", "72"], ["103", "115"], ["103", "167"], ["103", "120"], ["103", "113"], ["103", "128"], ["103", "161"], ["103", "132"], ["103", "162"], ["103", "130"], ["103", "118"], ["103", "164"], ["103", "108"], ["103", "171"], ["103", "122"], ["103", "166"], ["103", "106"], ["103", "126"], ["103", "105"], ["103", "165"], ["103", "135"], ["103", "124"], ["72", "68"], ["72", "96"], ["72", "98"], ["72", "81"], ["72", "87"], ["72", "79"], ["72", "86"], ["72", "65"], ["135", "146"], ["135", "149"], ["135", "151"], ["135", "144"], ["135", "155"], ["135", "139"], ["135", "141"], ["135", "157"], ["135", "135"], ["86", "68"], ["86", "91"], ["86", "65"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "29": "<(IDENTIFIER,N,N = nextInt())<SUB>3</SUB>>", "31": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,K,K = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "37": "<(LOCAL,int i: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>5</SUB>>", "43": "<(IDENTIFIER,N,i &lt; N)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,array[i] = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY map = new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "54": "<(&lt;operator&gt;.alloc,new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "5": "<(IDENTIFIER,map,new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean flag = false)<SUB>8</SUB>>", "59": "<(LITERAL,false,boolean flag = false)<SUB>8</SUB>>", "61": "<(LOCAL,int i: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "67": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,if (!map.containsKey(array[i])),if (!map.containsKey(array[i])))<SUB>10</SUB>>", "73": "<(containsKey,containsKey(array[i]))<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,containsKey(array[i]))<SUB>10</SUB>>", "79": "<(put,put(array[i], i))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,put(array[i], i))<SUB>11</SUB>>", "85": "<(CONTROL_STRUCTURE,if (map.size() == K),if (map.size() == K))<SUB>12</SUB>>", "87": "<(size,size())<SUB>12</SUB>>", "89": "<(IDENTIFIER,K,map.size() == K)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,flag = true)<SUB>13</SUB>>", "93": "<(LITERAL,true,flag = true)<SUB>13</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "97": "<(IDENTIFIER,map,put(array[i], i))<SUB>18</SUB>>", "99": "<(IDENTIFIER,array,put(array[i], i))<SUB>18</SUB>>", "101": "<(IDENTIFIER,i,put(array[i], i))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.logicalNot,!flag)<SUB>20</SUB>>", "105": "<(println,System.out.println(&quot;-1 -1&quot;))<SUB>21</SUB>>", "107": "<(IDENTIFIER,System,System.out.println(&quot;-1 -1&quot;))<SUB>21</SUB>>", "109": "<(LITERAL,&quot;-1 -1&quot;,System.out.println(&quot;-1 -1&quot;))<SUB>21</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.assignment,ANY s = keySet())<SUB>23</SUB>>", "115": "<(keySet,keySet())<SUB>23</SUB>>", "117": "<(LOCAL,int l: int)<SUB>24</SUB>>", "119": "<(IDENTIFIER,l,int l = Integer.MAX_VALUE)<SUB>24</SUB>>", "121": "<(IDENTIFIER,Integer,int l = Integer.MAX_VALUE)<SUB>24</SUB>>", "123": "<(LOCAL,int r: int)<SUB>25</SUB>>", "125": "<(IDENTIFIER,r,int r = Integer.MIN_VALUE)<SUB>25</SUB>>", "127": "<(IDENTIFIER,Integer,int r = Integer.MIN_VALUE)<SUB>25</SUB>>", "129": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>26</SUB>>", "131": "<(IDENTIFIER,$iterLocal0,)<SUB>26</SUB>>", "133": "<(IDENTIFIER,s,&lt;empty&gt;)<SUB>26</SUB>>", "135": "<(hasNext,&lt;empty&gt;)<SUB>26</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "139": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>26</SUB>>", "141": "<(next,&lt;empty&gt;)<SUB>26</SUB>>", "143": "<(LOCAL,int tmp: int)<SUB>27</SUB>>", "145": "<(IDENTIFIER,tmp,int tmp = get(k))<SUB>27</SUB>>", "147": "<(IDENTIFIER,map,get(k))<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.assignment,l = Math.min(l, tmp))<SUB>28</SUB>>", "151": "<(min,Math.min(l, tmp))<SUB>28</SUB>>", "153": "<(IDENTIFIER,l,Math.min(l, tmp))<SUB>28</SUB>>", "155": "<(&lt;operator&gt;.assignment,r = Math.max(r, tmp))<SUB>29</SUB>>", "157": "<(max,Math.max(r, tmp))<SUB>29</SUB>>", "159": "<(IDENTIFIER,r,Math.max(r, tmp))<SUB>29</SUB>>", "161": "<(println,System.out.println((l + 1) + &quot; &quot; + (r + 1)))<SUB>31</SUB>>", "163": "<(IDENTIFIER,System,System.out.println((l + 1) + &quot; &quot; + (r + 1)))<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.addition,(l + 1) + &quot; &quot; + (r + 1))<SUB>31</SUB>>", "167": "<(&lt;operator&gt;.addition,l + 1)<SUB>31</SUB>>", "169": "<(LITERAL,1,l + 1)<SUB>31</SUB>>", "171": "<(&lt;operator&gt;.addition,r + 1)<SUB>31</SUB>>", "173": "<(LITERAL,1,r + 1)<SUB>31</SUB>>", "175": "<(MODIFIER,STATIC)>"}}