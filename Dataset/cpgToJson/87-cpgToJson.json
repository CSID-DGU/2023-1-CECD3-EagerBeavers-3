{"edges": [["21", "23"], ["21", "107"], ["21", "108"], ["21", "109"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "50"], ["23", "102"], ["23", "105"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "63"], ["60", "67"], ["60", "89"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "81"], ["69", "84"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "41"], ["41", "49"], ["45", "52"], ["102", "105"], ["105", "109"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["47", "45"], ["52", "55"], ["55", "65"], ["55", "102"], ["58", "55"], ["34", "32"], ["49", "47"], ["63", "72"], ["67", "90"], ["65", "63"], ["69", "67"], ["90", "96"], ["90", "58"], ["70", "81"], ["70", "85"], ["81", "69"], ["84", "69"], ["94", "99"], ["99", "58"], ["71", "70"], ["71", "77"], ["76", "70"], ["85", "84"], ["96", "94"], ["72", "71"], ["77", "76"], ["21", "26"], ["22", "109"], ["24", "109"], ["27", "109"], ["28", "109"], ["31", "109"], ["31", "109"], ["38", "109"], ["36", "109"], ["36", "109"], ["41", "109"], ["45", "109"], ["45", "109"], ["45", "109"], ["52", "109"], ["55", "109"], ["55", "109"], ["55", "109"], ["102", "109"], ["102", "109"], ["105", "109"], ["105", "109"], ["65", "109"], ["63", "109"], ["63", "109"], ["71", "109"], ["70", "109"], ["76", "109"], ["70", "109"], ["69", "109"], ["85", "109"], ["84", "109"], ["69", "109"], ["81", "109"], ["69", "109"], ["67", "109"], ["67", "109"], ["90", "109"], ["90", "109"], ["90", "109"], ["94", "109"], ["94", "109"], ["99", "109"], ["99", "109"], ["99", "109"], ["58", "109"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["21", "41"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "52"], ["31", "102"], ["21", "102"], ["41", "102"], ["94", "102"], ["102", "105"], ["21", "105"], ["27", "38"], ["21", "38"], ["52", "55"], ["58", "55"], ["21", "55"], ["36", "55"], ["84", "55"], ["81", "55"], ["55", "58"], ["76", "58"], ["21", "58"], ["65", "63"], ["81", "67"], ["81", "67"], ["84", "67"], ["84", "67"], ["38", "65"], ["21", "65"], ["81", "69"], ["81", "69"], ["84", "69"], ["84", "69"], ["67", "90"], ["21", "90"], ["45", "90"], ["99", "90"], ["55", "94"], ["76", "94"], ["21", "94"], ["90", "99"], ["21", "99"], ["71", "70"], ["71", "70"], ["76", "70"], ["76", "70"], ["72", "81"], ["77", "81"], ["21", "81"], ["72", "81"], ["77", "81"], ["72", "84"], ["77", "84"], ["21", "84"], ["72", "84"], ["77", "84"], ["72", "71"], ["72", "71"], ["21", "71"], ["77", "76"], ["77", "76"], ["55", "76"], ["21", "76"], ["72", "85"], ["77", "85"], ["21", "85"], ["72", "85"], ["77", "85"], ["55", "96"], ["76", "96"], ["21", "96"], ["63", "72"], ["21", "72"], ["55", "72"], ["72", "77"], ["21", "77"], ["72", "77"], ["55", "58"], ["55", "71"], ["55", "72"], ["55", "69"], ["55", "67"], ["55", "70"], ["55", "63"], ["55", "65"], ["55", "55"], ["55", "90"], ["90", "94"], ["90", "96"], ["90", "99"], ["70", "81"], ["70", "84"], ["70", "85"], ["71", "77"], ["71", "76"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int best = 1)<SUB>6</SUB>>", "43": "<(LITERAL,1,int best = 1)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int bestTime = Integer.MAX_VALUE)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>7</SUB>>", "49": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>7</SUB>>", "51": "<(LOCAL,int i: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "61": "<(LOCAL,int time: int)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>10</SUB>>", "65": "<(nextInt,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,time = (a % n == 0 || a % n &lt;= i) ? a / n : (a + n) / n)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.conditional,(a % n == 0 || a % n &lt;= i) ? a / n : (a + n) / n)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.equals,a % n == 0)<SUB>11</SUB>>", "73": "<(IDENTIFIER,a,a % n)<SUB>11</SUB>>", "75": "<(LITERAL,0,a % n == 0)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.modulo,a % n)<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,a % n)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.division,a / n)<SUB>11</SUB>>", "83": "<(IDENTIFIER,n,a / n)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.addition,a + n)<SUB>11</SUB>>", "87": "<(IDENTIFIER,n,a + n)<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,if (time &lt; bestTime),if (time &lt; bestTime))<SUB>12</SUB>>", "91": "<(IDENTIFIER,time,time &lt; bestTime)<SUB>12</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "95": "<(IDENTIFIER,best,best = i + 1)<SUB>13</SUB>>", "97": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,bestTime = time)<SUB>14</SUB>>", "101": "<(IDENTIFIER,time,bestTime = time)<SUB>14</SUB>>", "103": "<(IDENTIFIER,pw,println(best))<SUB>18</SUB>>", "105": "<(close,close())<SUB>19</SUB>>", "107": "<(MODIFIER,PUBLIC)>", "109": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}