{"edges": [["19", "21"], ["19", "193"], ["19", "194"], ["19", "195"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "46"], ["21", "47"], ["21", "51"], ["21", "52"], ["21", "55"], ["21", "56"], ["21", "59"], ["21", "60"], ["21", "64"], ["21", "65"], ["21", "68"], ["21", "117"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "85"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "93"], ["86", "87"], ["86", "92"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "101"], ["93", "103"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["103", "104"], ["103", "110"], ["104", "105"], ["104", "107"], ["105", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["117", "186"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "127"], ["121", "130"], ["121", "133"], ["121", "177"], ["123", "124"], ["123", "125"], ["125", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "160"], ["152", "162"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["160", "161"], ["162", "163"], ["162", "169"], ["163", "164"], ["163", "166"], ["164", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["169", "176"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["187", "188"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "43"], ["40", "49"], ["47", "52"], ["52", "56"], ["56", "62"], ["60", "65"], ["65", "70"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["49", "47"], ["62", "60"], ["70", "73"], ["73", "80"], ["73", "118"], ["76", "73"], ["118", "125"], ["118", "191"], ["28", "26"], ["43", "42"], ["79", "89"], ["123", "127"], ["127", "130"], ["130", "135"], ["177", "195"], ["80", "83"], ["83", "79"], ["86", "97"], ["86", "76"], ["125", "123"], ["135", "138"], ["138", "148"], ["138", "180"], ["141", "138"], ["178", "182"], ["181", "177"], ["188", "195"], ["87", "86"], ["94", "101"], ["101", "105"], ["180", "178"], ["182", "181"], ["189", "188"], ["89", "87"], ["95", "94"], ["104", "111"], ["104", "76"], ["145", "156"], ["145", "141"], ["191", "189"], ["97", "95"], ["105", "104"], ["105", "107"], ["107", "104"], ["111", "114"], ["114", "76"], ["146", "145"], ["153", "160"], ["160", "164"], ["148", "146"], ["154", "153"], ["163", "170"], ["163", "141"], ["156", "154"], ["164", "163"], ["164", "166"], ["166", "163"], ["170", "173"], ["173", "180"], ["19", "24"], ["20", "195"], ["22", "195"], ["25", "195"], ["25", "195"], ["30", "195"], ["35", "195"], ["37", "195"], ["35", "195"], ["35", "195"], ["40", "195"], ["42", "195"], ["40", "195"], ["40", "195"], ["47", "195"], ["47", "195"], ["52", "195"], ["56", "195"], ["60", "195"], ["60", "195"], ["65", "195"], ["70", "195"], ["73", "195"], ["73", "195"], ["73", "195"], ["118", "195"], ["123", "195"], ["123", "195"], ["123", "195"], ["127", "195"], ["127", "195"], ["130", "195"], ["130", "195"], ["135", "195"], ["138", "195"], ["138", "195"], ["145", "195"], ["145", "195"], ["153", "195"], ["153", "195"], ["160", "195"], ["160", "195"], ["164", "195"], ["163", "195"], ["166", "195"], ["166", "195"], ["163", "195"], ["163", "195"], ["141", "195"], ["170", "195"], ["170", "195"], ["173", "195"], ["173", "195"], ["177", "195"], ["182", "195"], ["181", "195"], ["181", "195"], ["177", "195"], ["79", "195"], ["83", "195"], ["79", "195"], ["79", "195"], ["86", "195"], ["86", "195"], ["94", "195"], ["94", "195"], ["101", "195"], ["104", "195"], ["107", "195"], ["104", "195"], ["104", "195"], ["111", "195"], ["114", "195"], ["76", "195"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["49", "47"], ["19", "52"], ["19", "56"], ["62", "60"], ["19", "65"], ["22", "25"], ["19", "25"], ["19", "70"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["19", "49"], ["19", "62"], ["70", "73"], ["76", "73"], ["19", "73"], ["30", "73"], ["73", "76"], ["19", "76"], ["83", "79"], ["60", "118"], ["114", "118"], ["19", "118"], ["125", "123"], ["19", "127"], ["19", "130"], ["30", "43"], ["19", "43"], ["118", "135"], ["19", "135"], ["138", "177"], ["173", "177"], ["19", "177"], ["118", "177"], ["37", "83"], ["19", "83"], ["47", "86"], ["94", "86"], ["19", "86"], ["19", "94"], ["19", "125"], ["135", "138"], ["141", "138"], ["19", "138"], ["56", "138"], ["138", "141"], ["19", "141"], ["138", "181"], ["173", "181"], ["19", "181"], ["118", "181"], ["19", "188"], ["52", "101"], ["107", "101"], ["19", "101"], ["138", "182"], ["173", "182"], ["19", "182"], ["105", "104"], ["107", "104"], ["107", "104"], ["19", "111"], ["73", "114"], ["19", "114"], ["123", "145"], ["153", "145"], ["19", "145"], ["19", "153"], ["65", "105"], ["111", "105"], ["19", "105"], ["101", "107"], ["19", "107"], ["35", "107"], ["127", "160"], ["166", "160"], ["19", "160"], ["164", "163"], ["166", "163"], ["166", "163"], ["104", "163"], ["19", "170"], ["138", "173"], ["19", "173"], ["130", "164"], ["19", "164"], ["160", "166"], ["19", "166"], ["35", "166"], ["107", "166"], ["73", "73"], ["73", "76"], ["73", "87"], ["73", "79"], ["73", "80"], ["73", "86"], ["73", "89"], ["73", "83"], ["118", "188"], ["118", "178"], ["118", "189"], ["118", "138"], ["118", "181"], ["118", "191"], ["118", "130"], ["118", "182"], ["118", "127"], ["118", "180"], ["118", "123"], ["118", "177"], ["118", "135"], ["118", "125"], ["86", "94"], ["86", "104"], ["86", "95"], ["86", "97"], ["86", "101"], ["86", "105"], ["138", "145"], ["138", "146"], ["138", "148"], ["104", "114"], ["104", "111"], ["145", "154"], ["145", "163"], ["145", "153"], ["145", "138"], ["145", "164"], ["145", "160"], ["145", "141"], ["145", "156"], ["105", "107"], ["163", "170"], ["163", "138"], ["163", "173"], ["163", "141"], ["164", "166"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scr = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scr,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scr,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,a,int[] a = new int[n + 1])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.addition,n + 1)<SUB>6</SUB>>", "45": "<(LITERAL,1,n + 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int[] d = new int[100001])<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[100001])>", "51": "<(LOCAL,int tk: int)<SUB>9</SUB>>", "53": "<(IDENTIFIER,tk,int tk = 0)<SUB>9</SUB>>", "55": "<(LOCAL,int l: int)<SUB>10</SUB>>", "57": "<(IDENTIFIER,l,int l = 1)<SUB>10</SUB>>", "59": "<(LOCAL,int r: int)<SUB>11</SUB>>", "61": "<(IDENTIFIER,r,int r = -1)<SUB>11</SUB>>", "63": "<(LITERAL,1,-1)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,boolean find = false)<SUB>12</SUB>>", "67": "<(LITERAL,false,boolean find = false)<SUB>12</SUB>>", "69": "<(LOCAL,int i: int)<SUB>13</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>13</SUB>>", "75": "<(IDENTIFIER,n,i &lt;= n)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>14</SUB>>", "81": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>14</SUB>>", "83": "<(nextInt,nextInt())<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,if (d[a[i]] == 0),if (d[a[i]] == 0))<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,d[a[i]])<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "91": "<(IDENTIFIER,i,d[a[i]] == 0)<SUB>15</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,d[a[i]])<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,d[a[i]] = 1)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,tk++)<SUB>17</SUB>>", "103": "<(CONTROL_STRUCTURE,if ((!find) &amp;&amp; (tk == k)),if ((!find) &amp;&amp; (tk == k)))<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.logicalNot,!find)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.equals,tk == k)<SUB>18</SUB>>", "109": "<(IDENTIFIER,k,tk == k)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.assignment,find = true)<SUB>19</SUB>>", "113": "<(LITERAL,true,find = true)<SUB>19</SUB>>", "115": "<(IDENTIFIER,r,r = i)<SUB>20</SUB>>", "117": "<(CONTROL_STRUCTURE,if (r &gt; 0),if (r &gt; 0))<SUB>26</SUB>>", "119": "<(IDENTIFIER,r,r &gt; 0)<SUB>26</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "123": "<(&lt;operator&gt;.assignment,int[] cd = new int[100001])<SUB>27</SUB>>", "125": "<(&lt;operator&gt;.alloc,new int[100001])>", "127": "<(&lt;operator&gt;.assignment,tk = 0)<SUB>28</SUB>>", "129": "<(LITERAL,0,tk = 0)<SUB>28</SUB>>", "131": "<(IDENTIFIER,find,find = false)<SUB>29</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int j = r; Some(j &gt;= l); j--),for (int j = r; Some(j &gt;= l); j--))<SUB>30</SUB>>", "135": "<(&lt;operator&gt;.assignment,int j = r)<SUB>30</SUB>>", "137": "<(IDENTIFIER,r,int j = r)<SUB>30</SUB>>", "139": "<(IDENTIFIER,j,j &gt;= l)<SUB>30</SUB>>", "141": "<(&lt;operator&gt;.postDecrement,j--)<SUB>30</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "145": "<(&lt;operator&gt;.equals,cd[a[j]] == 0)<SUB>31</SUB>>", "147": "<(IDENTIFIER,cd,cd[a[j]] == 0)<SUB>31</SUB>>", "149": "<(IDENTIFIER,a,cd[a[j]] == 0)<SUB>31</SUB>>", "151": "<(LITERAL,0,cd[a[j]] == 0)<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.assignment,cd[a[j]] = 1)<SUB>32</SUB>>", "155": "<(IDENTIFIER,cd,cd[a[j]] = 1)<SUB>32</SUB>>", "157": "<(IDENTIFIER,a,cd[a[j]] = 1)<SUB>32</SUB>>", "159": "<(LITERAL,1,cd[a[j]] = 1)<SUB>32</SUB>>", "161": "<(IDENTIFIER,tk,tk++)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.logicalAnd,(!find) &amp;&amp; (tk == k))<SUB>34</SUB>>", "165": "<(IDENTIFIER,find,!find)<SUB>34</SUB>>", "167": "<(IDENTIFIER,tk,tk == k)<SUB>34</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "171": "<(IDENTIFIER,find,find = true)<SUB>35</SUB>>", "173": "<(&lt;operator&gt;.assignment,l = j)<SUB>36</SUB>>", "175": "<(IDENTIFIER,j,l = j)<SUB>36</SUB>>", "177": "<(println,System.out.println(l + &quot; &quot; + r))<SUB>41</SUB>>", "179": "<(IDENTIFIER,System,System.out.println(l + &quot; &quot; + r))<SUB>41</SUB>>", "181": "<(&lt;operator&gt;.addition,l + &quot; &quot; + r)<SUB>41</SUB>>", "183": "<(IDENTIFIER,l,l + &quot; &quot;)<SUB>41</SUB>>", "185": "<(IDENTIFIER,r,l + &quot; &quot; + r)<SUB>41</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "189": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>44</SUB>>", "191": "<(FIELD_IDENTIFIER,out,out)<SUB>44</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}