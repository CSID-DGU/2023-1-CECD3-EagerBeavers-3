{"edges": [["19", "20"], ["19", "21"], ["19", "102"], ["19", "103"], ["19", "104"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "64"], ["21", "65"], ["21", "87"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "58"], ["45", "46"], ["45", "52"], ["46", "47"], ["46", "51"], ["47", "48"], ["47", "49"], ["47", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["54", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["60", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "81"], ["68", "69"], ["68", "75"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["71", "74"], ["75", "76"], ["75", "80"], ["76", "77"], ["76", "78"], ["76", "79"], ["81", "82"], ["81", "86"], ["82", "83"], ["82", "84"], ["82", "85"], ["87", "88"], ["87", "91"], ["87", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "47"], ["42", "71"], ["65", "88"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["67", "65"], ["88", "94"], ["88", "100"], ["91", "104"], ["45", "60"], ["58", "44"], ["68", "82"], ["81", "67"], ["92", "91"], ["97", "104"], ["46", "54"], ["52", "45"], ["60", "58"], ["69", "76"], ["75", "68"], ["82", "81"], ["94", "92"], ["98", "97"], ["47", "46"], ["54", "52"], ["71", "69"], ["76", "75"], ["100", "98"], ["19", "24"], ["20", "104"], ["22", "104"], ["25", "104"], ["27", "104"], ["32", "104"], ["39", "104"], ["37", "104"], ["37", "104"], ["45", "104"], ["45", "104"], ["44", "104"], ["58", "104"], ["44", "104"], ["42", "104"], ["42", "104"], ["69", "104"], ["68", "104"], ["68", "104"], ["67", "104"], ["82", "104"], ["82", "104"], ["81", "104"], ["81", "104"], ["67", "104"], ["65", "104"], ["65", "104"], ["88", "104"], ["88", "104"], ["88", "104"], ["91", "104"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["46", "42"], ["46", "42"], ["52", "42"], ["52", "42"], ["58", "42"], ["58", "42"], ["69", "65"], ["69", "65"], ["75", "65"], ["75", "65"], ["81", "65"], ["81", "65"], ["22", "25"], ["19", "25"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["34", "39"], ["19", "39"], ["46", "44"], ["46", "44"], ["52", "44"], ["52", "44"], ["58", "44"], ["58", "44"], ["69", "67"], ["69", "67"], ["75", "67"], ["75", "67"], ["81", "67"], ["81", "67"], ["42", "88"], ["19", "88"], ["65", "88"], ["19", "91"], ["46", "45"], ["46", "45"], ["52", "45"], ["52", "45"], ["60", "58"], ["19", "58"], ["60", "58"], ["60", "58"], ["69", "68"], ["69", "68"], ["75", "68"], ["75", "68"], ["82", "81"], ["82", "81"], ["82", "81"], ["19", "81"], ["19", "97"], ["47", "46"], ["47", "46"], ["47", "46"], ["19", "46"], ["54", "52"], ["19", "52"], ["54", "52"], ["54", "52"], ["54", "60"], ["19", "60"], ["52", "60"], ["54", "60"], ["27", "69"], ["19", "69"], ["71", "69"], ["71", "69"], ["71", "69"], ["76", "75"], ["76", "75"], ["76", "75"], ["19", "75"], ["76", "82"], ["19", "82"], ["75", "82"], ["76", "82"], ["19", "47"], ["32", "47"], ["37", "47"], ["47", "54"], ["19", "54"], ["47", "54"], ["47", "54"], ["60", "71"], ["19", "71"], ["60", "71"], ["58", "71"], ["71", "76"], ["19", "76"], ["71", "76"], ["71", "76"], ["88", "94"], ["88", "97"], ["88", "91"], ["88", "98"], ["88", "92"], ["88", "100"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY fr = new FastReader())<SUB>4</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>4</SUB>>", "3": "<(IDENTIFIER,fr,new FastReader())<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>5</SUB>>", "29": "<(nextLong,nextLong())<SUB>5</SUB>>", "31": "<(LOCAL,long x: long)<SUB>6</SUB>>", "33": "<(IDENTIFIER,x,long x = nextLong())<SUB>6</SUB>>", "35": "<(IDENTIFIER,fr,nextLong())<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.assignment,long y = nextLong())<SUB>7</SUB>>", "39": "<(nextLong,nextLong())<SUB>7</SUB>>", "41": "<(LOCAL,long w: long)<SUB>8</SUB>>", "43": "<(IDENTIFIER,w,long w = Long.min(x, y) - 1 + (x - Long.min(x, y)) + (y - Long.min(x, y)))<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.addition,Long.min(x, y) - 1 + (x - Long.min(x, y)))<SUB>8</SUB>>", "47": "<(min,Long.min(x, y))<SUB>8</SUB>>", "49": "<(IDENTIFIER,x,Long.min(x, y))<SUB>8</SUB>>", "51": "<(LITERAL,1,Long.min(x, y) - 1)<SUB>8</SUB>>", "53": "<(IDENTIFIER,x,x - Long.min(x, y))<SUB>8</SUB>>", "55": "<(IDENTIFIER,Long,Long.min(x, y))<SUB>8</SUB>>", "57": "<(IDENTIFIER,y,Long.min(x, y))<SUB>8</SUB>>", "59": "<(IDENTIFIER,y,y - Long.min(x, y))<SUB>8</SUB>>", "61": "<(IDENTIFIER,Long,Long.min(x, y))<SUB>8</SUB>>", "63": "<(IDENTIFIER,y,Long.min(x, y))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,long b = n - Long.max(x, y) + (Long.max(x, y) - x) + (Long.max(x, y) - y))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.addition,n - Long.max(x, y) + (Long.max(x, y) - x) + (Long.max(x, y) - y))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.subtraction,n - Long.max(x, y))<SUB>9</SUB>>", "71": "<(max,Long.max(x, y))<SUB>9</SUB>>", "73": "<(IDENTIFIER,x,Long.max(x, y))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.subtraction,Long.max(x, y) - x)<SUB>9</SUB>>", "77": "<(IDENTIFIER,Long,Long.max(x, y))<SUB>9</SUB>>", "79": "<(IDENTIFIER,y,Long.max(x, y))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.subtraction,Long.max(x, y) - y)<SUB>9</SUB>>", "83": "<(IDENTIFIER,Long,Long.max(x, y))<SUB>9</SUB>>", "85": "<(IDENTIFIER,y,Long.max(x, y))<SUB>9</SUB>>", "87": "<(CONTROL_STRUCTURE,if (w &lt;= b),if (w &lt;= b))<SUB>10</SUB>>", "89": "<(IDENTIFIER,w,w &lt;= b)<SUB>10</SUB>>", "91": "<(println,System.out.println(&quot;White&quot;))<SUB>10</SUB>>", "93": "<(IDENTIFIER,System,System.out.println(&quot;White&quot;))<SUB>10</SUB>>", "95": "<(LITERAL,&quot;White&quot;,System.out.println(&quot;White&quot;))<SUB>10</SUB>>", "97": "<(println,System.out.println(&quot;Black&quot;))<SUB>11</SUB>>", "99": "<(IDENTIFIER,System,System.out.println(&quot;Black&quot;))<SUB>11</SUB>>", "101": "<(LITERAL,&quot;Black&quot;,System.out.println(&quot;Black&quot;))<SUB>11</SUB>>", "103": "<(MODIFIER,STATIC)>"}}