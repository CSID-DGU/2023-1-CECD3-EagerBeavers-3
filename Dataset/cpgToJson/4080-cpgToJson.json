{"edges": [["21", "22"], ["21", "23"], ["21", "494"], ["21", "495"], ["21", "496"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "47"], ["23", "48"], ["23", "52"], ["23", "56"], ["23", "79"], ["23", "83"], ["23", "88"], ["23", "174"], ["23", "175"], ["23", "181"], ["23", "185"], ["23", "190"], ["23", "6"], ["23", "321"], ["23", "324"], ["23", "325"], ["23", "328"], ["23", "329"], ["23", "336"], ["23", "337"], ["23", "471"], ["23", "482"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "73"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "126"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "115"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "159"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["177", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["181", "184"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "200"], ["190", "202"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "210"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "218"], ["210", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["220", "230"], ["220", "256"], ["220", "320"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["230", "231"], ["230", "238"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["238", "247"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["256", "263"], ["256", "266"], ["256", "268"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["268", "269"], ["268", "278"], ["269", "270"], ["269", "277"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["278", "279"], ["278", "290"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "287"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "289"], ["290", "291"], ["290", "292"], ["290", "303"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "300"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "315"], ["304", "305"], ["304", "312"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["321", "322"], ["321", "323"], ["324", "5"], ["325", "326"], ["325", "327"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["341", "342"], ["342", "343"], ["342", "344"], ["342", "347"], ["342", "350"], ["342", "352"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "349"], ["350", "351"], ["352", "353"], ["352", "362"], ["352", "395"], ["353", "354"], ["353", "361"], ["354", "355"], ["354", "360"], ["355", "356"], ["355", "357"], ["357", "358"], ["357", "359"], ["362", "363"], ["362", "380"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "375"], ["368", "369"], ["368", "370"], ["370", "371"], ["370", "372"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "377"], ["377", "378"], ["377", "379"], ["380", "381"], ["380", "386"], ["380", "389"], ["380", "394"], ["381", "382"], ["381", "383"], ["383", "384"], ["383", "385"], ["386", "387"], ["386", "388"], ["389", "390"], ["389", "391"], ["391", "392"], ["391", "393"], ["395", "396"], ["395", "397"], ["395", "402"], ["395", "405"], ["395", "407"], ["397", "398"], ["397", "399"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "404"], ["405", "406"], ["407", "408"], ["407", "417"], ["408", "409"], ["408", "416"], ["409", "410"], ["409", "415"], ["410", "411"], ["410", "412"], ["412", "413"], ["412", "414"], ["417", "418"], ["417", "447"], ["418", "419"], ["418", "422"], ["419", "420"], ["419", "421"], ["422", "423"], ["422", "442"], ["423", "424"], ["423", "439"], ["424", "425"], ["424", "436"], ["425", "426"], ["425", "427"], ["427", "428"], ["427", "433"], ["428", "429"], ["428", "430"], ["430", "431"], ["430", "432"], ["433", "434"], ["433", "435"], ["436", "437"], ["436", "438"], ["439", "440"], ["439", "441"], ["442", "443"], ["442", "446"], ["443", "444"], ["443", "445"], ["447", "448"], ["447", "453"], ["447", "458"], ["447", "461"], ["447", "470"], ["448", "449"], ["448", "450"], ["450", "451"], ["450", "452"], ["453", "454"], ["453", "455"], ["455", "456"], ["455", "457"], ["458", "459"], ["458", "460"], ["461", "462"], ["461", "463"], ["463", "464"], ["463", "467"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "469"], ["471", "472"], ["471", "475"], ["472", "473"], ["472", "474"], ["475", "476"], ["475", "477"], ["477", "478"], ["477", "481"], ["478", "479"], ["478", "480"], ["482", "483"], ["482", "486"], ["483", "484"], ["484", "485"], ["486", "487"], ["486", "490"], ["487", "488"], ["487", "489"], ["490", "491"], ["490", "493"], ["491", "492"], ["24", "30"], ["27", "35"], ["33", "39"], ["37", "44"], ["42", "50"], ["48", "54"], ["52", "58"], ["79", "85"], ["83", "90"], ["175", "181"], ["181", "186"], ["185", "192"], ["321", "324"], ["324", "325"], ["325", "332"], ["329", "338"], ["471", "484"], ["26", "24"], ["28", "27"], ["35", "33"], ["39", "37"], ["44", "42"], ["50", "48"], ["54", "52"], ["58", "61"], ["61", "68"], ["61", "81"], ["64", "61"], ["81", "79"], ["85", "83"], ["90", "93"], ["93", "100"], ["93", "178"], ["96", "93"], ["177", "175"], ["186", "185"], ["192", "197"], ["195", "205"], ["195", "323"], ["200", "197"], ["323", "321"], ["331", "329"], ["338", "344"], ["338", "474"], ["472", "478"], ["475", "471"], ["483", "496"], ["483", "489"], ["486", "484"], ["30", "28"], ["67", "74"], ["73", "64"], ["99", "128"], ["178", "177"], ["197", "195"], ["332", "331"], ["474", "472"], ["477", "475"], ["484", "483"], ["487", "491"], ["490", "486"], ["68", "71"], ["71", "67"], ["74", "77"], ["77", "73"], ["100", "107"], ["103", "99"], ["128", "131"], ["131", "139"], ["131", "96"], ["134", "131"], ["204", "200"], ["204", "212"], ["212", "215"], ["215", "225"], ["215", "200"], ["218", "215"], ["344", "347"], ["347", "338"], ["347", "357"], ["350", "347"], ["478", "477"], ["489", "487"], ["491", "490"], ["104", "118"], ["115", "103"], ["137", "134"], ["205", "204"], ["230", "260"], ["105", "112"], ["110", "104"], ["116", "123"], ["121", "115"], ["138", "146"], ["143", "137"], ["222", "218"], ["222", "235"], ["231", "244"], ["238", "230"], ["258", "263"], ["263", "273"], ["263", "200"], ["266", "263"], ["354", "350"], ["354", "364"], ["363", "383"], ["363", "399"], ["397", "402"], ["402", "412"], ["402", "350"], ["405", "402"], ["107", "105"], ["112", "110"], ["118", "116"], ["123", "121"], ["139", "138"], ["144", "161"], ["159", "143"], ["223", "222"], ["233", "231"], ["240", "248"], ["247", "238"], ["260", "258"], ["278", "266"], ["355", "354"], ["364", "372"], ["367", "363"], ["381", "386"], ["386", "391"], ["389", "350"], ["399", "397"], ["145", "153"], ["152", "144"], ["160", "168"], ["167", "159"], ["225", "223"], ["235", "233"], ["242", "240"], ["248", "253"], ["251", "247"], ["270", "266"], ["270", "284"], ["279", "297"], ["290", "278"], ["357", "355"], ["368", "377"], ["375", "367"], ["383", "381"], ["391", "389"], ["409", "405"], ["409", "419"], ["418", "450"], ["418", "405"], ["146", "149"], ["149", "145"], ["153", "156"], ["156", "152"], ["161", "164"], ["164", "160"], ["168", "171"], ["171", "167"], ["244", "242"], ["253", "251"], ["271", "270"], ["281", "279"], ["292", "306"], ["303", "290"], ["370", "368"], ["377", "375"], ["410", "409"], ["419", "430"], ["422", "418"], ["448", "455"], ["453", "458"], ["458", "464"], ["461", "405"], ["273", "271"], ["282", "287"], ["287", "281"], ["294", "292"], ["304", "316"], ["315", "303"], ["372", "370"], ["412", "410"], ["423", "443"], ["442", "422"], ["450", "448"], ["455", "453"], ["463", "461"], ["284", "282"], ["295", "300"], ["300", "294"], ["305", "312"], ["312", "304"], ["316", "315"], ["424", "439"], ["439", "423"], ["443", "442"], ["464", "467"], ["467", "463"], ["297", "295"], ["306", "309"], ["309", "305"], ["425", "436"], ["436", "424"], ["427", "425"], ["428", "433"], ["433", "427"], ["430", "428"], ["21", "26"], ["22", "496"], ["24", "496"], ["27", "496"], ["27", "496"], ["33", "496"], ["33", "496"], ["37", "496"], ["37", "496"], ["44", "496"], ["42", "496"], ["42", "496"], ["48", "496"], ["48", "496"], ["52", "496"], ["52", "496"], ["79", "496"], ["79", "496"], ["79", "496"], ["83", "496"], ["83", "496"], ["83", "496"], ["93", "496"], ["175", "496"], ["175", "496"], ["181", "496"], ["181", "496"], ["185", "496"], ["185", "496"], ["192", "496"], ["195", "496"], ["321", "496"], ["324", "496"], ["325", "496"], ["329", "496"], ["338", "496"], ["338", "496"], ["471", "496"], ["478", "496"], ["477", "496"], ["471", "496"], ["471", "496"], ["484", "496"], ["483", "496"], ["483", "496"], ["486", "496"], ["486", "496"], ["486", "496"], ["347", "496"], ["347", "496"], ["200", "496"], ["96", "496"], ["64", "496"], ["181", "496"], ["21", "22"], ["21", "24"], ["35", "33"], ["39", "37"], ["44", "42"], ["50", "48"], ["54", "52"], ["81", "79"], ["85", "83"], ["177", "175"], ["21", "185"], ["21", "321"], ["331", "329"], ["331", "329"], ["24", "27"], ["21", "27"], ["21", "58"], ["21", "90"], ["21", "181"], ["175", "181"], ["21", "192"], ["321", "324"], ["21", "324"], ["324", "325"], ["21", "325"], ["181", "471"], ["27", "35"], ["21", "35"], ["35", "39"], ["21", "39"], ["39", "44"], ["21", "44"], ["42", "50"], ["21", "50"], ["50", "54"], ["21", "54"], ["58", "61"], ["64", "61"], ["21", "61"], ["54", "61"], ["61", "64"], ["21", "64"], ["71", "67"], ["77", "73"], ["61", "81"], ["21", "81"], ["81", "85"], ["21", "85"], ["90", "93"], ["96", "93"], ["21", "93"], ["85", "93"], ["131", "93"], ["93", "96"], ["21", "96"], ["104", "99"], ["115", "99"], ["178", "177"], ["178", "177"], ["192", "195"], ["200", "195"], ["21", "195"], ["197", "195"], ["197", "195"], ["195", "200"], ["223", "200"], ["242", "200"], ["271", "200"], ["295", "200"], ["21", "200"], ["332", "331"], ["332", "331"], ["21", "331"], ["329", "338"], ["355", "338"], ["370", "338"], ["410", "338"], ["428", "338"], ["461", "338"], ["389", "338"], ["21", "338"], ["484", "483"], ["471", "486"], ["491", "486"], ["21", "486"], ["21", "128"], ["21", "178"], ["93", "178"], ["21", "197"], ["178", "197"], ["215", "197"], ["263", "197"], ["21", "212"], ["21", "332"], ["197", "332"], ["21", "344"], ["478", "477"], ["478", "477"], ["21", "477"], ["325", "484"], ["491", "484"], ["458", "484"], ["386", "484"], ["21", "484"], ["491", "490"], ["21", "490"], ["44", "71"], ["77", "71"], ["21", "71"], ["71", "77"], ["21", "77"], ["104", "103"], ["115", "103"], ["128", "131"], ["134", "131"], ["21", "131"], ["93", "131"], ["131", "134"], ["21", "134"], ["144", "137"], ["159", "137"], ["181", "204"], ["21", "204"], ["212", "215"], ["218", "215"], ["21", "215"], ["197", "215"], ["225", "218"], ["21", "218"], ["238", "230"], ["238", "230"], ["238", "230"], ["344", "347"], ["350", "347"], ["21", "347"], ["332", "347"], ["402", "347"], ["357", "350"], ["430", "350"], ["464", "350"], ["391", "350"], ["21", "350"], ["372", "350"], ["21", "478"], ["332", "478"], ["347", "478"], ["484", "491"], ["21", "491"], ["105", "104"], ["105", "104"], ["110", "104"], ["110", "104"], ["116", "115"], ["116", "115"], ["121", "115"], ["121", "115"], ["244", "258"], ["21", "258"], ["372", "397"], ["21", "397"], ["33", "105"], ["110", "105"], ["21", "105"], ["48", "105"], ["110", "105"], ["152", "105"], ["67", "105"], ["105", "110"], ["21", "110"], ["48", "110"], ["105", "110"], ["37", "116"], ["121", "116"], ["21", "116"], ["52", "116"], ["121", "116"], ["167", "116"], ["73", "116"], ["116", "121"], ["21", "121"], ["52", "121"], ["116", "121"], ["144", "143"], ["159", "143"], ["223", "222"], ["223", "222"], ["21", "222"], ["290", "238"], ["21", "238"], ["181", "238"], ["230", "238"], ["204", "238"], ["251", "238"], ["251", "238"], ["258", "263"], ["266", "263"], ["21", "263"], ["215", "263"], ["273", "266"], ["300", "266"], ["21", "266"], ["290", "278"], ["290", "278"], ["290", "278"], ["355", "354"], ["355", "354"], ["21", "354"], ["181", "363"], ["418", "363"], ["204", "363"], ["375", "363"], ["375", "363"], ["391", "389"], ["391", "389"], ["397", "402"], ["405", "402"], ["21", "402"], ["347", "402"], ["412", "405"], ["433", "405"], ["467", "405"], ["21", "405"], ["145", "144"], ["145", "144"], ["152", "144"], ["152", "144"], ["160", "159"], ["160", "159"], ["167", "159"], ["167", "159"], ["195", "223"], ["21", "223"], ["225", "223"], ["225", "223"], ["223", "233"], ["21", "233"], ["235", "233"], ["235", "233"], ["181", "247"], ["204", "247"], ["251", "247"], ["251", "247"], ["244", "260"], ["21", "260"], ["338", "355"], ["370", "355"], ["410", "355"], ["428", "355"], ["461", "355"], ["389", "355"], ["21", "355"], ["357", "355"], ["357", "355"], ["181", "367"], ["375", "367"], ["375", "367"], ["325", "381"], ["458", "381"], ["386", "381"], ["21", "381"], ["372", "381"], ["381", "386"], ["21", "386"], ["370", "389"], ["21", "389"], ["372", "399"], ["21", "399"], ["48", "145"], ["110", "145"], ["152", "145"], ["152", "145"], ["48", "152"], ["145", "152"], ["145", "152"], ["52", "160"], ["121", "160"], ["167", "160"], ["167", "160"], ["52", "167"], ["160", "167"], ["160", "167"], ["21", "225"], ["215", "225"], ["21", "235"], ["225", "235"], ["233", "242"], ["21", "242"], ["244", "242"], ["244", "242"], ["21", "251"], ["79", "251"], ["271", "270"], ["271", "270"], ["21", "270"], ["238", "290"], ["21", "290"], ["181", "290"], ["278", "290"], ["204", "290"], ["79", "290"], ["251", "290"], ["21", "357"], ["347", "357"], ["21", "375"], ["79", "375"], ["251", "375"], ["372", "383"], ["21", "383"], ["21", "391"], ["372", "391"], ["410", "409"], ["410", "409"], ["21", "409"], ["181", "418"], ["363", "418"], ["79", "418"], ["375", "418"], ["464", "461"], ["464", "461"], ["467", "461"], ["467", "461"], ["21", "244"], ["235", "244"], ["242", "271"], ["295", "271"], ["21", "271"], ["273", "271"], ["273", "271"], ["282", "281"], ["282", "281"], ["287", "281"], ["287", "281"], ["181", "303"], ["204", "303"], ["79", "303"], ["251", "303"], ["355", "370"], ["21", "370"], ["372", "370"], ["372", "370"], ["370", "410"], ["428", "410"], ["461", "410"], ["21", "410"], ["412", "410"], ["412", "410"], ["181", "422"], ["79", "422"], ["375", "422"], ["325", "448"], ["458", "448"], ["386", "448"], ["21", "448"], ["430", "448"], ["448", "453"], ["21", "453"], ["433", "453"], ["453", "458"], ["21", "458"], ["428", "461"], ["21", "461"], ["21", "273"], ["263", "273"], ["271", "282"], ["21", "282"], ["284", "282"], ["284", "282"], ["21", "287"], ["273", "287"], ["295", "294"], ["295", "294"], ["300", "294"], ["300", "294"], ["181", "304"], ["204", "304"], ["79", "304"], ["251", "304"], ["21", "372"], ["357", "372"], ["21", "412"], ["402", "412"], ["181", "423"], ["79", "423"], ["375", "423"], ["430", "450"], ["21", "450"], ["433", "455"], ["21", "455"], ["464", "463"], ["464", "463"], ["467", "463"], ["467", "463"], ["21", "284"], ["297", "284"], ["244", "284"], ["282", "295"], ["21", "295"], ["297", "295"], ["297", "295"], ["21", "300"], ["287", "300"], ["181", "305"], ["204", "305"], ["79", "305"], ["251", "305"], ["181", "424"], ["79", "424"], ["375", "424"], ["21", "464"], ["430", "464"], ["21", "467"], ["433", "467"], ["21", "297"], ["284", "297"], ["428", "427"], ["428", "427"], ["433", "427"], ["433", "427"], ["410", "428"], ["21", "428"], ["430", "428"], ["430", "428"], ["21", "433"], ["412", "433"], ["21", "430"], ["464", "430"], ["372", "430"], ["61", "68"], ["61", "74"], ["61", "61"], ["61", "71"], ["61", "73"], ["61", "77"], ["61", "64"], ["61", "67"], ["93", "128"], ["93", "104"], ["93", "112"], ["93", "93"], ["93", "118"], ["93", "100"], ["93", "116"], ["93", "123"], ["93", "107"], ["93", "115"], ["93", "96"], ["93", "131"], ["93", "103"], ["93", "121"], ["93", "99"], ["93", "105"], ["93", "110"], ["195", "204"], ["195", "195"], ["195", "200"], ["195", "197"], ["195", "205"], ["338", "338"], ["338", "347"], ["338", "344"], ["483", "486"], ["483", "490"], ["483", "484"], ["483", "489"], ["483", "483"], ["483", "487"], ["483", "491"], ["131", "167"], ["131", "146"], ["131", "161"], ["131", "168"], ["131", "134"], ["131", "138"], ["131", "152"], ["131", "160"], ["131", "159"], ["131", "145"], ["131", "131"], ["131", "149"], ["131", "153"], ["131", "144"], ["131", "137"], ["131", "164"], ["131", "139"], ["131", "171"], ["131", "143"], ["131", "156"], ["204", "215"], ["204", "212"], ["215", "222"], ["215", "225"], ["215", "223"], ["347", "355"], ["347", "347"], ["347", "357"], ["347", "354"], ["347", "350"], ["222", "230"], ["222", "215"], ["222", "240"], ["222", "247"], ["222", "242"], ["222", "238"], ["222", "258"], ["222", "260"], ["222", "253"], ["222", "244"], ["222", "231"], ["222", "233"], ["222", "235"], ["222", "251"], ["222", "263"], ["222", "248"], ["222", "218"], ["263", "273"], ["263", "270"], ["263", "263"], ["263", "271"], ["263", "266"], ["354", "370"], ["354", "368"], ["354", "364"], ["354", "372"], ["354", "377"], ["354", "375"], ["354", "367"], ["354", "363"], ["363", "383"], ["363", "389"], ["363", "402"], ["363", "397"], ["363", "386"], ["363", "381"], ["363", "399"], ["363", "391"], ["402", "412"], ["402", "405"], ["402", "402"], ["402", "410"], ["402", "409"], ["270", "292"], ["270", "290"], ["270", "300"], ["270", "281"], ["270", "306"], ["270", "315"], ["270", "304"], ["270", "278"], ["270", "305"], ["270", "316"], ["270", "297"], ["270", "282"], ["270", "279"], ["270", "309"], ["270", "284"], ["270", "295"], ["270", "287"], ["270", "294"], ["270", "303"], ["270", "312"], ["409", "428"], ["409", "430"], ["409", "418"], ["409", "424"], ["409", "442"], ["409", "425"], ["409", "433"], ["409", "443"], ["409", "419"], ["409", "427"], ["409", "423"], ["409", "439"], ["409", "422"], ["409", "436"], ["418", "450"], ["418", "464"], ["418", "448"], ["418", "467"], ["418", "455"], ["418", "453"], ["418", "461"], ["418", "458"], ["418", "463"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int x: int)<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int y = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,int n: int)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,input,nextInt())<SUB>5</SUB>>", "47": "<(LOCAL,int[] ys: int[])<SUB>6</SUB>>", "49": "<(IDENTIFIER,xs,int[] xs = new int[n])<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "53": "<(IDENTIFIER,ys,int[] ys = new int[n])<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "57": "<(LOCAL,int i: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,xs[i] = nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,xs,xs[i] = nextInt())<SUB>9</SUB>>", "71": "<(nextInt,nextInt())<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,ys[i] = nextInt())<SUB>10</SUB>>", "75": "<(IDENTIFIER,ys,ys[i] = nextInt())<SUB>10</SUB>>", "77": "<(nextInt,nextInt())<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,ds = new int[n])<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.alloc,new int[n])>", "83": "<(&lt;operator&gt;.assignment,g = new int[n][n])<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[n][n])>", "87": "<(IDENTIFIER,n,new int[n][n])<SUB>13</SUB>>", "89": "<(LOCAL,int i: int)<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignment,ds[i] = (x - xs[i]) * (x - xs[i]) + (y - ys[i]) * (y - ys[i]))<SUB>16</SUB>>", "101": "<(IDENTIFIER,ds,ds[i] = (x - xs[i]) * (x - xs[i]) + (y - ys[i]) * (y - ys[i]))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.addition,(x - xs[i]) * (x - xs[i]) + (y - ys[i]) * (y - ys[i]))<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.subtraction,x - xs[i])<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>16</SUB>>", "109": "<(IDENTIFIER,i,x - xs[i])<SUB>16</SUB>>", "111": "<(IDENTIFIER,x,x - xs[i])<SUB>16</SUB>>", "113": "<(IDENTIFIER,xs,x - xs[i])<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.multiplication,(y - ys[i]) * (y - ys[i]))<SUB>16</SUB>>", "117": "<(IDENTIFIER,y,y - ys[i])<SUB>16</SUB>>", "119": "<(IDENTIFIER,ys,y - ys[i])<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.subtraction,y - ys[i])<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>16</SUB>>", "125": "<(IDENTIFIER,i,y - ys[i])<SUB>16</SUB>>", "127": "<(LOCAL,int j: int)<SUB>17</SUB>>", "129": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>17</SUB>>", "133": "<(IDENTIFIER,n,j &lt; n)<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.assignment,g[i][j] = (xs[i] - xs[j]) * (xs[i] - xs[j]) + (ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>19</SUB>>", "141": "<(IDENTIFIER,i,g[i][j] = (xs[i] - xs[j]) * (xs[i] - xs[j]) + (ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.addition,(xs[i] - xs[j]) * (xs[i] - xs[j]) + (ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.subtraction,xs[i] - xs[j])<SUB>19</SUB>>", "147": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,xs[j])<SUB>19</SUB>>", "151": "<(IDENTIFIER,j,xs[i] - xs[j])<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,xs[i])<SUB>19</SUB>>", "155": "<(IDENTIFIER,i,xs[i] - xs[j])<SUB>19</SUB>>", "157": "<(IDENTIFIER,xs,xs[i] - xs[j])<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.multiplication,(ys[i] - ys[j]) * (ys[i] - ys[j]))<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,ys[i])<SUB>19</SUB>>", "163": "<(IDENTIFIER,i,ys[i] - ys[j])<SUB>19</SUB>>", "165": "<(IDENTIFIER,ys,ys[i] - ys[j])<SUB>19</SUB>>", "167": "<(&lt;operator&gt;.subtraction,ys[i] - ys[j])<SUB>19</SUB>>", "169": "<(IDENTIFIER,ys,ys[i] - ys[j])<SUB>19</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,ys[j])<SUB>19</SUB>>", "173": "<(IDENTIFIER,j,ys[i] - ys[j])<SUB>19</SUB>>", "175": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; n])<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "179": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "181": "<(fill,fill(dp, 987654321))<SUB>23</SUB>>", "183": "<(IDENTIFIER,dp,fill(dp, 987654321))<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>24</SUB>>", "187": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>24</SUB>>", "189": "<(LITERAL,0,dp[0] = 0)<SUB>24</SUB>>", "191": "<(LOCAL,int i: int)<SUB>25</SUB>>", "193": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>25</SUB>>", "199": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>25</SUB>>", "201": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "203": "<(CONTROL_STRUCTURE,if (dp[i] == 987654321),if (dp[i] == 987654321))<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>27</SUB>>", "207": "<(IDENTIFIER,i,dp[i] == 987654321)<SUB>27</SUB>>", "209": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "211": "<(LOCAL,int a: int)<SUB>28</SUB>>", "213": "<(IDENTIFIER,a,int a = 0)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.lessThan,a &lt; n)<SUB>28</SUB>>", "217": "<(IDENTIFIER,n,a &lt; n)<SUB>28</SUB>>", "219": "<(IDENTIFIER,a,a++)<SUB>28</SUB>>", "221": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; a)) &gt; 0),if ((i &amp; (1 &lt;&lt; a)) &gt; 0))<SUB>30</SUB>>", "223": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; a))<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>30</SUB>>", "227": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>30</SUB>>", "229": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; a)])<SUB>31</SUB>>", "233": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a))<SUB>31</SUB>>", "235": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>31</SUB>>", "237": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>31</SUB>>", "239": "<(IDENTIFIER,Math,min(dp[i | (1 &lt;&lt; a)], dp[i] + 2 * ds[a]))<SUB>31</SUB>>", "241": "<(IDENTIFIER,dp,min(dp[i | (1 &lt;&lt; a)], dp[i] + 2 * ds[a]))<SUB>31</SUB>>", "243": "<(IDENTIFIER,i,i | (1 &lt;&lt; a))<SUB>31</SUB>>", "245": "<(LITERAL,1,1 &lt;&lt; a)<SUB>31</SUB>>", "247": "<(&lt;operator&gt;.addition,dp[i] + 2 * ds[a])<SUB>31</SUB>>", "249": "<(IDENTIFIER,dp,dp[i] + 2 * ds[a])<SUB>31</SUB>>", "251": "<(&lt;operator&gt;.multiplication,2 * ds[a])<SUB>31</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,ds[a])<SUB>31</SUB>>", "255": "<(IDENTIFIER,a,2 * ds[a])<SUB>31</SUB>>", "257": "<(LOCAL,int b: int)<SUB>32</SUB>>", "259": "<(IDENTIFIER,b,int b = a + 1)<SUB>32</SUB>>", "261": "<(IDENTIFIER,a,a + 1)<SUB>32</SUB>>", "263": "<(&lt;operator&gt;.lessThan,b &lt; n)<SUB>32</SUB>>", "265": "<(IDENTIFIER,n,b &lt; n)<SUB>32</SUB>>", "267": "<(IDENTIFIER,b,b++)<SUB>32</SUB>>", "269": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; b)) &gt; 0),if ((i &amp; (1 &lt;&lt; b)) &gt; 0))<SUB>34</SUB>>", "271": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; b))<SUB>34</SUB>>", "273": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>34</SUB>>", "275": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>34</SUB>>", "277": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>34</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)])<SUB>35</SUB>>", "281": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a) | (1 &lt;&lt; b))<SUB>35</SUB>>", "283": "<(IDENTIFIER,i,i | (1 &lt;&lt; a))<SUB>35</SUB>>", "285": "<(LITERAL,1,1 &lt;&lt; a)<SUB>35</SUB>>", "287": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>35</SUB>>", "289": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>35</SUB>>", "291": "<(IDENTIFIER,Math,min(dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)], dp[i] + ds[a] + ds[b] + g[a][b]))<SUB>35</SUB>>", "293": "<(IDENTIFIER,dp,min(dp[i | (1 &lt;&lt; a) | (1 &lt;&lt; b)], dp[i] + ds[a] + ds[b] + g[a][b]))<SUB>35</SUB>>", "295": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; a))<SUB>35</SUB>>", "297": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>35</SUB>>", "299": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>35</SUB>>", "301": "<(LITERAL,1,1 &lt;&lt; b)<SUB>35</SUB>>", "303": "<(&lt;operator&gt;.addition,dp[i] + ds[a] + ds[b] + g[a][b])<SUB>35</SUB>>", "305": "<(&lt;operator&gt;.addition,dp[i] + ds[a])<SUB>35</SUB>>", "307": "<(IDENTIFIER,dp,dp[i] + ds[a])<SUB>35</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,ds[a])<SUB>35</SUB>>", "311": "<(IDENTIFIER,a,dp[i] + ds[a])<SUB>35</SUB>>", "313": "<(IDENTIFIER,ds,dp[i] + ds[a] + ds[b])<SUB>35</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,g[a][b])<SUB>35</SUB>>", "317": "<(IDENTIFIER,g,dp[i] + ds[a] + ds[b] + g[a][b])<SUB>35</SUB>>", "319": "<(IDENTIFIER,b,dp[i] + ds[a] + ds[b] + g[a][b])<SUB>35</SUB>>", "6": "<(LOCAL,Stack&lt;Integer&gt; stk: ANY)<SUB>40</SUB>>", "322": "<(IDENTIFIER,stk,ANY stk = new Stack&lt;Integer&gt;())<SUB>40</SUB>>", "324": "<(&lt;init&gt;,new Stack&lt;Integer&gt;())<SUB>40</SUB>>", "325": "<(add,add(0))<SUB>41</SUB>>", "327": "<(LITERAL,0,add(0))<SUB>41</SUB>>", "329": "<(&lt;operator&gt;.assignment,int i = (1 &lt;&lt; n) - 1)<SUB>42</SUB>>", "331": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>42</SUB>>", "333": "<(LITERAL,1,1 &lt;&lt; n)<SUB>42</SUB>>", "335": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>42</SUB>>", "337": "<(CONTROL_STRUCTURE,while (i &gt; 0),while (i &gt; 0))<SUB>46</SUB>>", "339": "<(IDENTIFIER,i,i &gt; 0)<SUB>46</SUB>>", "341": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "343": "<(LOCAL,int a: int)<SUB>49</SUB>>", "345": "<(IDENTIFIER,a,int a = 0)<SUB>49</SUB>>", "347": "<(&lt;operator&gt;.lessThan,a &lt; n)<SUB>49</SUB>>", "349": "<(IDENTIFIER,n,a &lt; n)<SUB>49</SUB>>", "351": "<(IDENTIFIER,a,a++)<SUB>49</SUB>>", "353": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; a)) == 0),if ((i &amp; (1 &lt;&lt; a)) == 0))<SUB>51</SUB>>", "355": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; a))<SUB>51</SUB>>", "357": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>51</SUB>>", "359": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>51</SUB>>", "361": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>51</SUB>>", "363": "<(&lt;operator&gt;.equals,dp[i] == dp[i - (1 &lt;&lt; a)] + 2 * ds[a])<SUB>52</SUB>>", "365": "<(IDENTIFIER,dp,dp[i] == dp[i - (1 &lt;&lt; a)] + 2 * ds[a])<SUB>52</SUB>>", "367": "<(&lt;operator&gt;.addition,dp[i - (1 &lt;&lt; a)] + 2 * ds[a])<SUB>52</SUB>>", "369": "<(IDENTIFIER,dp,dp[i - (1 &lt;&lt; a)] + 2 * ds[a])<SUB>52</SUB>>", "371": "<(IDENTIFIER,i,i - (1 &lt;&lt; a))<SUB>52</SUB>>", "373": "<(LITERAL,1,1 &lt;&lt; a)<SUB>52</SUB>>", "375": "<(&lt;operator&gt;.multiplication,2 * ds[a])<SUB>52</SUB>>", "377": "<(&lt;operator&gt;.indexAccess,ds[a])<SUB>52</SUB>>", "379": "<(IDENTIFIER,a,2 * ds[a])<SUB>52</SUB>>", "381": "<(add,add(a + 1))<SUB>54</SUB>>", "383": "<(&lt;operator&gt;.addition,a + 1)<SUB>54</SUB>>", "385": "<(LITERAL,1,a + 1)<SUB>54</SUB>>", "387": "<(IDENTIFIER,stk,add(0))<SUB>55</SUB>>", "389": "<(&lt;operator&gt;.assignmentMinus,i -= 1 &lt;&lt; a)<SUB>56</SUB>>", "391": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; a)<SUB>56</SUB>>", "393": "<(IDENTIFIER,a,1 &lt;&lt; a)<SUB>56</SUB>>", "395": "<(CONTROL_STRUCTURE,for (int b = a + 1; Some(b &lt; n); b++),for (int b = a + 1; Some(b &lt; n); b++))<SUB>59</SUB>>", "397": "<(&lt;operator&gt;.assignment,int b = a + 1)<SUB>59</SUB>>", "399": "<(&lt;operator&gt;.addition,a + 1)<SUB>59</SUB>>", "401": "<(LITERAL,1,a + 1)<SUB>59</SUB>>", "403": "<(IDENTIFIER,b,b &lt; n)<SUB>59</SUB>>", "405": "<(&lt;operator&gt;.postIncrement,b++)<SUB>59</SUB>>", "407": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>>", "409": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; b)) == 0)<SUB>61</SUB>>", "411": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; b))<SUB>61</SUB>>", "413": "<(LITERAL,1,1 &lt;&lt; b)<SUB>61</SUB>>", "415": "<(LITERAL,0,(i &amp; (1 &lt;&lt; b)) == 0)<SUB>61</SUB>>", "417": "<(CONTROL_STRUCTURE,if (dp[i] == dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b]),if (dp[i] == dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b]))<SUB>62</SUB>>", "419": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>62</SUB>>", "421": "<(IDENTIFIER,i,dp[i] == dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "423": "<(&lt;operator&gt;.addition,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b])<SUB>62</SUB>>", "425": "<(&lt;operator&gt;.indexAccess,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)])<SUB>62</SUB>>", "427": "<(&lt;operator&gt;.subtraction,i - (1 &lt;&lt; a) - (1 &lt;&lt; b))<SUB>62</SUB>>", "429": "<(IDENTIFIER,i,i - (1 &lt;&lt; a))<SUB>62</SUB>>", "431": "<(LITERAL,1,1 &lt;&lt; a)<SUB>62</SUB>>", "433": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>62</SUB>>", "435": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>62</SUB>>", "437": "<(IDENTIFIER,ds,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a])<SUB>62</SUB>>", "439": "<(&lt;operator&gt;.indexAccess,ds[b])<SUB>62</SUB>>", "441": "<(IDENTIFIER,b,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b])<SUB>62</SUB>>", "443": "<(&lt;operator&gt;.indexAccess,g[a])<SUB>62</SUB>>", "445": "<(IDENTIFIER,a,dp[i - (1 &lt;&lt; a) - (1 &lt;&lt; b)] + ds[a] + ds[b] + g[a][b])<SUB>62</SUB>>", "447": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "449": "<(IDENTIFIER,stk,add(a + 1))<SUB>64</SUB>>", "451": "<(IDENTIFIER,a,a + 1)<SUB>64</SUB>>", "453": "<(add,add(b + 1))<SUB>65</SUB>>", "455": "<(&lt;operator&gt;.addition,b + 1)<SUB>65</SUB>>", "457": "<(LITERAL,1,b + 1)<SUB>65</SUB>>", "459": "<(IDENTIFIER,stk,add(0))<SUB>66</SUB>>", "461": "<(&lt;operator&gt;.assignmentMinus,i -= (1 &lt;&lt; a) + (1 &lt;&lt; b))<SUB>67</SUB>>", "463": "<(&lt;operator&gt;.addition,(1 &lt;&lt; a) + (1 &lt;&lt; b))<SUB>67</SUB>>", "465": "<(LITERAL,1,1 &lt;&lt; a)<SUB>67</SUB>>", "467": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>67</SUB>>", "469": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>67</SUB>>", "471": "<(println,System.out.println(dp[(1 &lt;&lt; n) - 1]))<SUB>74</SUB>>", "473": "<(IDENTIFIER,System,System.out.println(dp[(1 &lt;&lt; n) - 1]))<SUB>74</SUB>>", "475": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>74</SUB>>", "477": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>74</SUB>>", "479": "<(LITERAL,1,1 &lt;&lt; n)<SUB>74</SUB>>", "481": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>74</SUB>>", "483": "<(&lt;operator&gt;.logicalNot,!stk.isEmpty())<SUB>75</SUB>>", "485": "<(IDENTIFIER,stk,isEmpty())<SUB>75</SUB>>", "487": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>75</SUB>>", "489": "<(FIELD_IDENTIFIER,out,out)<SUB>75</SUB>>", "491": "<(pop,pop())<SUB>75</SUB>>", "493": "<(LITERAL,&quot; &quot;,stk.pop() + &quot; &quot;)<SUB>75</SUB>>", "495": "<(MODIFIER,STATIC)>"}}