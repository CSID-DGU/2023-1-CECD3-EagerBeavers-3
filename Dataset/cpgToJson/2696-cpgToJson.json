{"edges": [["21", "22"], ["21", "23"], ["21", "140"], ["21", "141"], ["21", "142"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "63"], ["23", "66"], ["23", "67"], ["23", "71"], ["23", "76"], ["23", "77"], ["23", "80"], ["23", "135"], ["23", "138"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "74"], ["74", "75"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "98"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "105"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "112"], ["105", "115"], ["105", "117"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "128"], ["119", "120"], ["119", "127"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "44"], ["42", "48"], ["63", "69"], ["67", "74"], ["71", "77"], ["77", "82"], ["135", "138"], ["138", "142"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "63"], ["54", "51"], ["69", "67"], ["74", "71"], ["82", "85"], ["85", "93"], ["85", "135"], ["88", "85"], ["34", "32"], ["57", "54"], ["58", "61"], ["61", "57"], ["92", "100"], ["92", "88"], ["93", "96"], ["96", "92"], ["99", "109"], ["100", "103"], ["103", "99"], ["107", "112"], ["112", "121"], ["112", "88"], ["115", "112"], ["109", "107"], ["119", "129"], ["119", "115"], ["128", "115"], ["120", "119"], ["129", "132"], ["132", "128"], ["121", "124"], ["124", "120"], ["21", "26"], ["22", "142"], ["24", "142"], ["27", "142"], ["28", "142"], ["31", "142"], ["31", "142"], ["39", "142"], ["37", "142"], ["37", "142"], ["42", "142"], ["63", "142"], ["63", "142"], ["67", "142"], ["67", "142"], ["71", "142"], ["71", "142"], ["71", "142"], ["71", "142"], ["77", "142"], ["82", "142"], ["85", "142"], ["85", "142"], ["85", "142"], ["135", "142"], ["135", "142"], ["138", "142"], ["138", "142"], ["92", "142"], ["92", "142"], ["92", "142"], ["99", "142"], ["99", "142"], ["99", "142"], ["107", "142"], ["107", "142"], ["112", "142"], ["112", "142"], ["88", "142"], ["120", "142"], ["120", "142"], ["119", "142"], ["119", "142"], ["128", "142"], ["128", "142"], ["128", "142"], ["115", "142"], ["57", "142"], ["61", "142"], ["57", "142"], ["57", "142"], ["54", "142"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["44", "42"], ["69", "67"], ["21", "77"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "48"], ["21", "63"], ["42", "63"], ["57", "63"], ["63", "71"], ["21", "71"], ["67", "71"], ["74", "71"], ["21", "82"], ["31", "135"], ["21", "135"], ["77", "135"], ["103", "135"], ["135", "138"], ["21", "138"], ["27", "39"], ["21", "39"], ["37", "44"], ["21", "44"], ["48", "51"], ["54", "51"], ["21", "51"], ["44", "51"], ["51", "54"], ["21", "54"], ["61", "57"], ["51", "69"], ["21", "69"], ["21", "74"], ["82", "85"], ["88", "85"], ["21", "85"], ["69", "85"], ["112", "85"], ["85", "88"], ["21", "88"], ["39", "61"], ["21", "61"], ["71", "92"], ["99", "92"], ["96", "92"], ["103", "99"], ["21", "96"], ["85", "107"], ["21", "107"], ["77", "103"], ["21", "103"], ["107", "112"], ["115", "112"], ["21", "112"], ["85", "112"], ["112", "115"], ["21", "115"], ["85", "109"], ["21", "109"], ["71", "128"], ["99", "128"], ["120", "119"], ["120", "119"], ["21", "119"], ["63", "120"], ["57", "120"], ["51", "51"], ["51", "57"], ["51", "54"], ["51", "58"], ["51", "61"], ["85", "96"], ["85", "85"], ["85", "92"], ["85", "93"], ["85", "88"], ["92", "107"], ["92", "99"], ["92", "103"], ["92", "112"], ["92", "100"], ["92", "109"], ["112", "115"], ["112", "120"], ["112", "119"], ["112", "121"], ["112", "112"], ["112", "124"], ["119", "128"], ["119", "132"], ["119", "129"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,int[] arr: int[])<SUB>5</SUB>>", "43": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "47": "<(LOCAL,int i: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>7</SUB>>", "59": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>7</SUB>>", "61": "<(nextInt,nextInt())<SUB>7</SUB>>", "63": "<(sort,sort(arr))<SUB>10</SUB>>", "65": "<(IDENTIFIER,arr,sort(arr))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] cols = new int[n])<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n])>", "71": "<(fill,fill(cols, -1))<SUB>12</SUB>>", "73": "<(IDENTIFIER,cols,fill(cols, -1))<SUB>12</SUB>>", "75": "<(LITERAL,1,-1)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>13</SUB>>", "79": "<(LITERAL,0,int ans = 0)<SUB>13</SUB>>", "81": "<(LOCAL,int i: int)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "87": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "91": "<(CONTROL_STRUCTURE,if (cols[i] == -1),if (cols[i] == -1))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,cols[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,cols[i] == -1)<SUB>15</SUB>>", "97": "<(LITERAL,1,-1)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.assignment,cols[i] = ans++)<SUB>16</SUB>>", "101": "<(IDENTIFIER,cols,cols[i] = ans++)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>16</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.addition,i + 1)<SUB>17</SUB>>", "111": "<(LITERAL,1,i + 1)<SUB>17</SUB>>", "113": "<(IDENTIFIER,j,j &lt; n)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.equals,arr[j] % arr[i] == 0)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>18</SUB>>", "123": "<(IDENTIFIER,j,arr[j] % arr[i])<SUB>18</SUB>>", "125": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>18</SUB>>", "127": "<(LITERAL,0,arr[j] % arr[i] == 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,cols[j])<SUB>18</SUB>>", "131": "<(IDENTIFIER,j,cols[j] = cols[i])<SUB>18</SUB>>", "133": "<(IDENTIFIER,cols,cols[j] = cols[i])<SUB>18</SUB>>", "135": "<(println,println(ans))<SUB>22</SUB>>", "137": "<(IDENTIFIER,ans,println(ans))<SUB>22</SUB>>", "139": "<(IDENTIFIER,out,flush())<SUB>23</SUB>>", "141": "<(MODIFIER,STATIC)>"}}