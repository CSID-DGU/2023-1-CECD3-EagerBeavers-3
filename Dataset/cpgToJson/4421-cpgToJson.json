{"edges": [["21", "23"], ["21", "345"], ["21", "346"], ["21", "347"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "39"], ["23", "43"], ["23", "48"], ["23", "76"], ["23", "81"], ["23", "138"], ["23", "205"], ["23", "212"], ["23", "213"], ["23", "216"], ["23", "217"], ["23", "218"], ["23", "221"], ["23", "226"], ["23", "340"], ["23", "343"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "88"], ["85", "91"], ["85", "96"], ["85", "97"], ["85", "100"], ["85", "132"], ["85", "137"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "117"], ["112", "126"], ["113", "114"], ["113", "115"], ["113", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "156"], ["148", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["158", "164"], ["158", "165"], ["158", "170"], ["158", "198"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["182", "197"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["213", "214"], ["213", "215"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "238"], ["230", "239"], ["230", "243"], ["230", "257"], ["230", "258"], ["230", "261"], ["230", "321"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["239", "240"], ["239", "241"], ["241", "242"], ["243", "244"], ["243", "246"], ["244", "245"], ["246", "247"], ["246", "248"], ["246", "252"], ["248", "249"], ["248", "250"], ["250", "251"], ["252", "253"], ["252", "254"], ["252", "255"], ["255", "256"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["261", "266"], ["261", "273"], ["261", "275"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["275", "276"], ["275", "277"], ["275", "280"], ["275", "287"], ["275", "289"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["287", "288"], ["289", "290"], ["289", "293"], ["289", "304"], ["289", "305"], ["289", "318"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "303"], ["294", "295"], ["294", "298"], ["295", "296"], ["295", "297"], ["298", "299"], ["299", "300"], ["299", "301"], ["299", "302"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "309"], ["307", "316"], ["307", "317"], ["309", "310"], ["309", "313"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "315"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "325"], ["321", "334"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "329"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "331"], ["331", "332"], ["331", "333"], ["334", "335"], ["335", "336"], ["335", "337"], ["337", "338"], ["337", "339"], ["340", "341"], ["340", "342"], ["343", "344"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "37"], ["35", "41"], ["39", "45"], ["43", "50"], ["76", "82"], ["205", "213"], ["213", "218"], ["218", "224"], ["221", "227"], ["340", "343"], ["343", "347"], ["26", "24"], ["30", "28"], ["32", "31"], ["37", "35"], ["41", "39"], ["45", "43"], ["50", "53"], ["53", "60"], ["53", "78"], ["56", "53"], ["78", "76"], ["82", "88"], ["82", "140"], ["140", "143"], ["143", "150"], ["143", "209"], ["146", "143"], ["207", "205"], ["223", "221"], ["227", "234"], ["227", "340"], ["34", "32"], ["60", "63"], ["63", "70"], ["63", "56"], ["66", "63"], ["68", "66"], ["88", "94"], ["91", "97"], ["97", "101"], ["132", "137"], ["137", "347"], ["150", "153"], ["153", "160"], ["153", "146"], ["156", "153"], ["209", "207"], ["224", "223"], ["231", "241"], ["239", "244"], ["258", "263"], ["69", "74"], ["74", "68"], ["93", "91"], ["101", "108"], ["101", "135"], ["133", "132"], ["165", "172"], ["198", "156"], ["233", "231"], ["241", "239"], ["244", "250"], ["244", "258"], ["263", "267"], ["266", "277"], ["266", "322"], ["273", "267"], ["322", "326"], ["322", "337"], ["70", "69"], ["94", "93"], ["105", "113"], ["135", "133"], ["160", "156"], ["160", "168"], ["167", "165"], ["172", "175"], ["175", "188"], ["175", "200"], ["178", "175"], ["180", "178"], ["199", "198"], ["234", "233"], ["248", "255"], ["252", "244"], ["267", "266"], ["267", "270"], ["270", "266"], ["277", "281"], ["280", "290"], ["280", "273"], ["287", "281"], ["326", "331"], ["329", "227"], ["335", "227"], ["107", "105"], ["113", "118"], ["113", "129"], ["168", "167"], ["182", "180"], ["200", "199"], ["250", "248"], ["255", "252"], ["281", "280"], ["281", "284"], ["284", "280"], ["290", "295"], ["305", "318"], ["318", "287"], ["331", "329"], ["337", "335"], ["108", "107"], ["118", "123"], ["121", "101"], ["127", "101"], ["184", "182"], ["294", "287"], ["294", "310"], ["307", "305"], ["123", "121"], ["129", "127"], ["186", "184"], ["295", "294"], ["295", "299"], ["298", "294"], ["309", "307"], ["187", "193"], ["192", "186"], ["299", "298"], ["310", "313"], ["313", "309"], ["188", "187"], ["193", "192"], ["21", "26"], ["137", "347"], ["22", "347"], ["24", "347"], ["27", "347"], ["28", "347"], ["31", "347"], ["31", "347"], ["35", "347"], ["41", "347"], ["39", "347"], ["39", "347"], ["43", "347"], ["45", "347"], ["43", "347"], ["43", "347"], ["50", "347"], ["53", "347"], ["53", "347"], ["76", "347"], ["76", "347"], ["76", "347"], ["82", "347"], ["82", "347"], ["88", "347"], ["91", "347"], ["91", "347"], ["97", "347"], ["101", "347"], ["101", "347"], ["101", "347"], ["132", "347"], ["132", "347"], ["132", "347"], ["107", "347"], ["105", "347"], ["105", "347"], ["113", "347"], ["113", "347"], ["129", "347"], ["127", "347"], ["127", "347"], ["118", "347"], ["123", "347"], ["121", "347"], ["121", "347"], ["60", "347"], ["63", "347"], ["63", "347"], ["63", "347"], ["56", "347"], ["68", "347"], ["74", "347"], ["68", "347"], ["68", "347"], ["66", "347"], ["290", "347"], ["252", "347"], ["21", "22"], ["21", "24"], ["21", "28"], ["37", "35"], ["41", "39"], ["45", "43"], ["45", "43"], ["78", "76"], ["207", "205"], ["207", "205"], ["21", "213"], ["21", "218"], ["21", "221"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "50"], ["21", "140"], ["31", "340"], ["21", "340"], ["213", "340"], ["326", "340"], ["340", "343"], ["21", "343"], ["27", "37"], ["21", "37"], ["37", "41"], ["21", "41"], ["35", "45"], ["21", "45"], ["39", "45"], ["50", "53"], ["56", "53"], ["21", "53"], ["45", "53"], ["53", "56"], ["21", "56"], ["21", "60"], ["74", "68"], ["53", "78"], ["21", "78"], ["78", "82"], ["21", "82"], ["21", "88"], ["21", "91"], ["21", "97"], ["21", "137"], ["140", "143"], ["146", "143"], ["21", "143"], ["82", "143"], ["153", "143"], ["143", "146"], ["160", "146"], ["21", "146"], ["21", "150"], ["209", "207"], ["21", "207"], ["209", "207"], ["21", "223"], ["218", "227"], ["329", "227"], ["21", "227"], ["221", "227"], ["335", "227"], ["233", "231"], ["233", "231"], ["241", "239"], ["21", "258"], ["60", "63"], ["66", "63"], ["21", "63"], ["45", "63"], ["63", "66"], ["21", "66"], ["31", "132"], ["97", "132"], ["118", "132"], ["21", "132"], ["150", "153"], ["156", "153"], ["21", "153"], ["143", "153"], ["160", "156"], ["21", "156"], ["21", "165"], ["165", "198"], ["180", "198"], ["21", "198"], ["21", "209"], ["143", "209"], ["21", "263"], ["41", "74"], ["21", "74"], ["21", "93"], ["88", "101"], ["121", "101"], ["21", "101"], ["91", "101"], ["127", "101"], ["107", "105"], ["107", "105"], ["21", "172"], ["182", "180"], ["182", "180"], ["182", "180"], ["227", "233"], ["21", "233"], ["227", "233"], ["205", "241"], ["21", "241"], ["239", "244"], ["250", "244"], ["21", "244"], ["250", "248"], ["267", "266"], ["267", "266"], ["280", "266"], ["270", "266"], ["270", "266"], ["267", "273"], ["295", "273"], ["299", "273"], ["307", "273"], ["21", "273"], ["21", "277"], ["258", "322"], ["270", "322"], ["284", "322"], ["318", "322"], ["21", "322"], ["231", "326"], ["21", "326"], ["21", "329"], ["231", "329"], ["337", "335"], ["337", "335"], ["143", "160"], ["21", "160"], ["153", "160"], ["21", "167"], ["172", "175"], ["178", "175"], ["21", "175"], ["45", "175"], ["63", "175"], ["175", "178"], ["21", "178"], ["227", "234"], ["21", "234"], ["227", "234"], ["21", "252"], ["248", "252"], ["255", "252"], ["263", "267"], ["273", "267"], ["21", "267"], ["207", "267"], ["281", "267"], ["258", "270"], ["284", "270"], ["318", "270"], ["21", "270"], ["281", "280"], ["281", "280"], ["266", "280"], ["284", "280"], ["284", "280"], ["295", "287"], ["299", "287"], ["313", "287"], ["21", "287"], ["281", "290"], ["21", "290"], ["307", "305"], ["307", "305"], ["307", "305"], ["307", "305"], ["305", "318"], ["21", "318"], ["101", "107"], ["21", "107"], ["101", "107"], ["21", "113"], ["105", "118"], ["21", "118"], ["21", "121"], ["105", "121"], ["129", "127"], ["129", "127"], ["184", "182"], ["21", "182"], ["184", "182"], ["165", "182"], ["180", "182"], ["244", "250"], ["21", "250"], ["21", "255"], ["277", "281"], ["287", "281"], ["21", "281"], ["267", "281"], ["258", "284"], ["270", "284"], ["318", "284"], ["21", "284"], ["258", "318"], ["270", "318"], ["284", "318"], ["21", "331"], ["231", "331"], ["231", "337"], ["21", "337"], ["101", "108"], ["21", "108"], ["101", "108"], ["182", "184"], ["21", "184"], ["186", "184"], ["186", "184"], ["295", "294"], ["295", "294"], ["298", "294"], ["299", "307"], ["21", "307"], ["309", "307"], ["309", "307"], ["310", "307"], ["21", "123"], ["105", "123"], ["105", "129"], ["21", "129"], ["267", "295"], ["299", "295"], ["307", "295"], ["21", "295"], ["281", "295"], ["299", "298"], ["299", "298"], ["299", "298"], ["310", "309"], ["310", "309"], ["313", "309"], ["313", "309"], ["307", "299"], ["21", "299"], ["295", "299"], ["295", "299"], ["21", "310"], ["295", "310"], ["299", "310"], ["21", "313"], ["295", "313"], ["299", "313"], ["53", "60"], ["53", "53"], ["53", "56"], ["53", "63"], ["82", "209"], ["82", "213"], ["82", "93"], ["82", "340"], ["82", "224"], ["82", "88"], ["82", "140"], ["82", "135"], ["82", "227"], ["82", "133"], ["82", "94"], ["82", "132"], ["82", "97"], ["82", "91"], ["82", "101"], ["82", "223"], ["82", "137"], ["82", "207"], ["82", "221"], ["82", "343"], ["82", "205"], ["82", "143"], ["82", "218"], ["143", "146"], ["143", "150"], ["143", "153"], ["143", "143"], ["227", "322"], ["227", "258"], ["227", "241"], ["227", "227"], ["227", "244"], ["227", "231"], ["227", "267"], ["227", "233"], ["227", "239"], ["227", "234"], ["227", "263"], ["227", "266"], ["63", "68"], ["63", "74"], ["63", "70"], ["63", "66"], ["63", "69"], ["63", "63"], ["153", "160"], ["153", "153"], ["153", "156"], ["101", "108"], ["101", "107"], ["101", "113"], ["101", "101"], ["101", "105"], ["244", "244"], ["244", "255"], ["244", "252"], ["244", "248"], ["244", "250"], ["266", "281"], ["266", "273"], ["266", "267"], ["266", "280"], ["266", "277"], ["266", "266"], ["322", "326"], ["322", "329"], ["322", "335"], ["322", "337"], ["322", "331"], ["160", "167"], ["160", "168"], ["160", "200"], ["160", "199"], ["160", "172"], ["160", "198"], ["160", "165"], ["160", "175"], ["175", "188"], ["175", "192"], ["175", "184"], ["175", "182"], ["175", "186"], ["175", "180"], ["175", "178"], ["175", "187"], ["175", "193"], ["175", "175"], ["267", "270"], ["280", "290"], ["280", "281"], ["280", "280"], ["280", "295"], ["280", "287"], ["280", "294"], ["113", "129"], ["113", "118"], ["113", "127"], ["113", "123"], ["113", "121"], ["281", "284"], ["294", "310"], ["294", "305"], ["294", "307"], ["294", "309"], ["294", "318"], ["294", "313"], ["295", "298"], ["295", "299"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,m = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,a = new int[n][m])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[n][m])>", "47": "<(IDENTIFIER,m,new int[n][m])<SUB>6</SUB>>", "49": "<(LOCAL,int i: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "59": "<(LOCAL,int j: int)<SUB>8</SUB>>", "61": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>8</SUB>>", "65": "<(IDENTIFIER,m,j &lt; m)<SUB>8</SUB>>", "67": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>9</SUB>>", "71": "<(IDENTIFIER,a,a[i][j] = nextInt())<SUB>9</SUB>>", "73": "<(IDENTIFIER,j,a[i][j] = nextInt())<SUB>9</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,Min,Min = new int[n][n])<SUB>10</SUB>>", "79": "<(IDENTIFIER,n,new int[n][n])<SUB>10</SUB>>", "81": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>11</SUB>>", "83": "<(IDENTIFIER,n,n == 1)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(LOCAL,int hi: int)<SUB>12</SUB>>", "89": "<(IDENTIFIER,lo,int lo = 0)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,int hi = (int) 1e9)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>12</SUB>>", "95": "<(LITERAL,1e9,(int) 1e9)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>13</SUB>>", "99": "<(LITERAL,0,int ans = 0)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>14</SUB>>", "103": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,K = lo + hi &gt;&gt; 1)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.logicalShiftRight,lo + hi &gt;&gt; 1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,lo,lo + hi)<SUB>15</SUB>>", "111": "<(LITERAL,1,lo + hi &gt;&gt; 1)<SUB>15</SUB>>", "113": "<(check,check(0, 0))<SUB>17</SUB>>", "115": "<(LITERAL,0,check(0, 0))<SUB>17</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "119": "<(IDENTIFIER,ans,ans = K)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,lo = K + 1)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.addition,K + 1)<SUB>20</SUB>>", "125": "<(LITERAL,1,K + 1)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.assignment,hi = K - 1)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.subtraction,K - 1)<SUB>23</SUB>>", "131": "<(LITERAL,1,K - 1)<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "135": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "137": "<(RETURN,return;,return;)<SUB>26</SUB>>", "139": "<(LOCAL,int i1: int)<SUB>28</SUB>>", "141": "<(IDENTIFIER,i1,int i1 = 0)<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.lessThan,i1 &lt; n)<SUB>28</SUB>>", "145": "<(IDENTIFIER,n,i1 &lt; n)<SUB>28</SUB>>", "147": "<(IDENTIFIER,i1,i1++)<SUB>28</SUB>>", "149": "<(LOCAL,int i2: int)<SUB>29</SUB>>", "151": "<(IDENTIFIER,i2,int i2 = 0)<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.lessThan,i2 &lt; n)<SUB>29</SUB>>", "155": "<(IDENTIFIER,n,i2 &lt; n)<SUB>29</SUB>>", "157": "<(IDENTIFIER,i2,i2++)<SUB>29</SUB>>", "159": "<(CONTROL_STRUCTURE,if (i1 == i2),if (i1 == i2))<SUB>31</SUB>>", "161": "<(IDENTIFIER,i1,i1 == i2)<SUB>31</SUB>>", "163": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>32</SUB>>", "165": "<(&lt;operator&gt;.assignment,int min = (int) 1e9)<SUB>33</SUB>>", "167": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>33</SUB>>", "169": "<(LITERAL,1e9,(int) 1e9)<SUB>33</SUB>>", "171": "<(LOCAL,int j: int)<SUB>34</SUB>>", "173": "<(IDENTIFIER,j,int j = 0)<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>34</SUB>>", "177": "<(IDENTIFIER,m,j &lt; m)<SUB>34</SUB>>", "179": "<(IDENTIFIER,j,j++)<SUB>34</SUB>>", "181": "<(IDENTIFIER,min,min = min(Math.abs(a[i1][j] - a[i2][j]), min))<SUB>35</SUB>>", "183": "<(IDENTIFIER,Math,min(Math.abs(a[i1][j] - a[i2][j]), min))<SUB>35</SUB>>", "185": "<(IDENTIFIER,Math,abs(a[i1][j] - a[i2][j]))<SUB>35</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,a[i1][j])<SUB>35</SUB>>", "189": "<(IDENTIFIER,a,a[i1][j] - a[i2][j])<SUB>35</SUB>>", "191": "<(IDENTIFIER,j,a[i1][j] - a[i2][j])<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,a[i2])<SUB>35</SUB>>", "195": "<(IDENTIFIER,i2,a[i1][j] - a[i2][j])<SUB>35</SUB>>", "197": "<(IDENTIFIER,min,min(Math.abs(a[i1][j] - a[i2][j]), min))<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,Min[i1][i2])<SUB>36</SUB>>", "201": "<(IDENTIFIER,Min,Min[i1][i2] = min)<SUB>36</SUB>>", "203": "<(IDENTIFIER,i2,Min[i1][i2] = min)<SUB>36</SUB>>", "205": "<(&lt;operator&gt;.assignment,memo = new int[n][1 &lt;&lt; n])<SUB>38</SUB>>", "207": "<(&lt;operator&gt;.alloc,new int[n][1 &lt;&lt; n])>", "209": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>38</SUB>>", "211": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>38</SUB>>", "213": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>39</SUB>>", "215": "<(LITERAL,0,int ans = 0)<SUB>39</SUB>>", "217": "<(LOCAL,int hi: int)<SUB>40</SUB>>", "219": "<(IDENTIFIER,lo,int lo = 0)<SUB>40</SUB>>", "221": "<(&lt;operator&gt;.assignment,int hi = (int) 1e9)<SUB>40</SUB>>", "223": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>40</SUB>>", "225": "<(LITERAL,1e9,(int) 1e9)<SUB>40</SUB>>", "227": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>41</SUB>>", "229": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>41</SUB>>", "231": "<(&lt;operator&gt;.assignment,K = lo + hi &gt;&gt; 1)<SUB>42</SUB>>", "233": "<(&lt;operator&gt;.logicalShiftRight,lo + hi &gt;&gt; 1)<SUB>42</SUB>>", "235": "<(IDENTIFIER,lo,lo + hi)<SUB>42</SUB>>", "237": "<(LITERAL,1,lo + hi &gt;&gt; 1)<SUB>42</SUB>>", "239": "<(&lt;operator&gt;.assignment,)<SUB>43</SUB>>", "241": "<(iterator,&lt;empty&gt;)<SUB>43</SUB>>", "243": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>43</SUB>>", "245": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "247": "<(LOCAL,x: int[])<SUB>43</SUB>>", "249": "<(IDENTIFIER,x,&lt;empty&gt;)>", "251": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "253": "<(IDENTIFIER,Arrays,fill(x, -1))<SUB>44</SUB>>", "255": "<(&lt;operator&gt;.minus,-1)<SUB>44</SUB>>", "257": "<(LOCAL,int ok: int)<SUB>45</SUB>>", "259": "<(IDENTIFIER,ok,int ok = 0)<SUB>45</SUB>>", "261": "<(CONTROL_STRUCTURE,for (int top = 0; Some(top &lt; n &amp;&amp; ok == 0); top++),for (int top = 0; Some(top &lt; n &amp;&amp; ok == 0); top++))<SUB>46</SUB>>", "263": "<(&lt;operator&gt;.assignment,int top = 0)<SUB>46</SUB>>", "265": "<(LITERAL,0,int top = 0)<SUB>46</SUB>>", "267": "<(&lt;operator&gt;.lessThan,top &lt; n)<SUB>46</SUB>>", "269": "<(IDENTIFIER,n,top &lt; n)<SUB>46</SUB>>", "271": "<(IDENTIFIER,ok,ok == 0)<SUB>46</SUB>>", "273": "<(&lt;operator&gt;.postIncrement,top++)<SUB>46</SUB>>", "275": "<(CONTROL_STRUCTURE,for (int bottom = 0; Some(bottom &lt; n &amp;&amp; ok == 0); bottom++),for (int bottom = 0; Some(bottom &lt; n &amp;&amp; ok == 0); bottom++))<SUB>47</SUB>>", "277": "<(&lt;operator&gt;.assignment,int bottom = 0)<SUB>47</SUB>>", "279": "<(LITERAL,0,int bottom = 0)<SUB>47</SUB>>", "281": "<(&lt;operator&gt;.lessThan,bottom &lt; n)<SUB>47</SUB>>", "283": "<(IDENTIFIER,n,bottom &lt; n)<SUB>47</SUB>>", "285": "<(IDENTIFIER,ok,ok == 0)<SUB>47</SUB>>", "287": "<(&lt;operator&gt;.postIncrement,bottom++)<SUB>47</SUB>>", "289": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "291": "<(IDENTIFIER,bot,bot = bottom)<SUB>48</SUB>>", "293": "<(CONTROL_STRUCTURE,if (top == bottom || !check(top, bottom)),if (top == bottom || !check(top, bottom)))<SUB>49</SUB>>", "295": "<(&lt;operator&gt;.equals,top == bottom)<SUB>49</SUB>>", "297": "<(IDENTIFIER,bottom,top == bottom)<SUB>49</SUB>>", "299": "<(check,check(top, bottom))<SUB>49</SUB>>", "301": "<(IDENTIFIER,top,check(top, bottom))<SUB>49</SUB>>", "303": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>50</SUB>>", "305": "<(&lt;operator&gt;.assignment,int dp = dp(1 &lt;&lt; top | 1 &lt;&lt; bottom, 2, top))<SUB>53</SUB>>", "307": "<(dp,dp(1 &lt;&lt; top | 1 &lt;&lt; bottom, 2, top))<SUB>53</SUB>>", "309": "<(&lt;operator&gt;.or,1 &lt;&lt; top | 1 &lt;&lt; bottom)<SUB>53</SUB>>", "311": "<(LITERAL,1,1 &lt;&lt; top)<SUB>53</SUB>>", "313": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; bottom)<SUB>53</SUB>>", "315": "<(IDENTIFIER,bottom,1 &lt;&lt; bottom)<SUB>53</SUB>>", "317": "<(IDENTIFIER,top,dp(1 &lt;&lt; top | 1 &lt;&lt; bottom, 2, top))<SUB>53</SUB>>", "319": "<(IDENTIFIER,ok,ok |= dp)<SUB>54</SUB>>", "321": "<(CONTROL_STRUCTURE,if (ok == 1),if (ok == 1))<SUB>57</SUB>>", "323": "<(IDENTIFIER,ok,ok == 1)<SUB>57</SUB>>", "325": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "327": "<(IDENTIFIER,ans,ans = K)<SUB>59</SUB>>", "329": "<(&lt;operator&gt;.assignment,lo = K + 1)<SUB>60</SUB>>", "331": "<(&lt;operator&gt;.addition,K + 1)<SUB>60</SUB>>", "333": "<(LITERAL,1,K + 1)<SUB>60</SUB>>", "335": "<(&lt;operator&gt;.assignment,hi = K - 1)<SUB>64</SUB>>", "337": "<(&lt;operator&gt;.subtraction,K - 1)<SUB>64</SUB>>", "339": "<(LITERAL,1,K - 1)<SUB>64</SUB>>", "341": "<(IDENTIFIER,out,println(ans))<SUB>66</SUB>>", "343": "<(close,close())<SUB>68</SUB>>", "345": "<(MODIFIER,PUBLIC)>", "347": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}