{"edges": [["21", "22"], ["21", "23"], ["21", "126"], ["21", "127"], ["21", "128"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "57"], ["23", "61"], ["23", "87"], ["23", "92"], ["23", "93"], ["23", "96"], ["23", "116"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "80"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "124"], ["120", "125"], ["121", "122"], ["121", "123"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "49"], ["48", "54"], ["52", "59"], ["57", "63"], ["87", "93"], ["93", "98"], ["116", "128"], ["26", "24"], ["41", "39"], ["47", "45"], ["49", "48"], ["54", "52"], ["59", "57"], ["63", "66"], ["66", "73"], ["66", "89"], ["69", "66"], ["89", "87"], ["98", "101"], ["101", "108"], ["101", "119"], ["104", "101"], ["117", "121"], ["120", "116"], ["29", "36"], ["32", "27"], ["43", "41"], ["72", "81"], ["80", "69"], ["107", "114"], ["107", "104"], ["114", "104"], ["119", "117"], ["121", "120"], ["31", "29"], ["34", "32"], ["73", "78"], ["76", "72"], ["81", "84"], ["84", "80"], ["108", "111"], ["111", "107"], ["36", "34"], ["78", "76"], ["21", "26"], ["22", "128"], ["24", "128"], ["29", "128"], ["32", "128"], ["32", "128"], ["32", "128"], ["27", "128"], ["41", "128"], ["39", "128"], ["39", "128"], ["45", "128"], ["48", "128"], ["49", "128"], ["48", "128"], ["48", "128"], ["52", "128"], ["52", "128"], ["52", "128"], ["57", "128"], ["57", "128"], ["89", "128"], ["87", "128"], ["87", "128"], ["93", "128"], ["98", "128"], ["101", "128"], ["101", "128"], ["101", "128"], ["116", "128"], ["121", "128"], ["120", "128"], ["116", "128"], ["107", "128"], ["107", "128"], ["107", "128"], ["114", "128"], ["104", "128"], ["76", "128"], ["78", "128"], ["76", "128"], ["72", "128"], ["72", "128"], ["80", "128"], ["80", "128"], ["80", "128"], ["69", "128"], ["87", "128"], ["89", "128"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["54", "52"], ["59", "57"], ["21", "93"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["49", "48"], ["21", "63"], ["21", "87"], ["89", "87"], ["89", "87"], ["21", "98"], ["21", "116"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["43", "49"], ["21", "49"], ["39", "54"], ["21", "54"], ["54", "59"], ["21", "59"], ["63", "66"], ["69", "66"], ["21", "66"], ["59", "66"], ["66", "69"], ["21", "69"], ["76", "72"], ["76", "72"], ["52", "80"], ["72", "80"], ["21", "89"], ["57", "89"], ["80", "89"], ["98", "101"], ["104", "101"], ["21", "101"], ["66", "101"], ["101", "104"], ["21", "104"], ["21", "120"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["52", "107"], ["72", "107"], ["89", "107"], ["80", "107"], ["93", "114"], ["21", "114"], ["93", "121"], ["114", "121"], ["21", "121"], ["41", "76"], ["21", "76"], ["78", "76"], ["48", "78"], ["21", "78"], ["66", "80"], ["66", "73"], ["66", "66"], ["66", "81"], ["66", "84"], ["66", "72"], ["66", "69"], ["66", "76"], ["66", "78"], ["101", "107"], ["101", "104"], ["101", "101"], ["101", "108"], ["101", "111"], ["107", "114"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(in.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,st,ANY st = new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new StringTokenizer(in.readLine()))<SUB>4</SUB>>", "49": "<(readLine,readLine())<SUB>4</SUB>>", "51": "<(LOCAL,int[] A: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,A,int[] A = new int[n])<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.assignment,Integer[] B = new Integer[n])<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.alloc,new Integer[n])>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,A[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "77": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>8</SUB>>", "79": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,B[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,B[i] = A[i])<SUB>9</SUB>>", "85": "<(IDENTIFIER,A,B[i] = A[i])<SUB>9</SUB>>", "87": "<(sort,sort(Arrays.asList(B)))<SUB>11</SUB>>", "89": "<(asList,asList(B))<SUB>11</SUB>>", "91": "<(IDENTIFIER,B,asList(B))<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>13</SUB>>", "95": "<(LITERAL,0,int cnt = 0)<SUB>13</SUB>>", "97": "<(LOCAL,int i: int)<SUB>14</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.notEquals,A[i] != B[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,A,A[i] != B[i])<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,B[i])<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,A[i] != B[i])<SUB>15</SUB>>", "115": "<(IDENTIFIER,cnt,cnt++)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.lessEqualsThan,cnt &lt;= 2)<SUB>17</SUB>>", "123": "<(LITERAL,2,cnt &lt;= 2)<SUB>17</SUB>>", "125": "<(LITERAL,&quot;NO&quot;,cnt &lt;= 2 ? &quot;YES&quot; : &quot;NO&quot;)<SUB>17</SUB>>", "127": "<(MODIFIER,STATIC)>"}}