{"edges": [["19", "20"], ["19", "21"], ["19", "200"], ["19", "201"], ["19", "202"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "58"], ["21", "59"], ["21", "69"], ["21", "70"], ["21", "75"], ["21", "82"], ["21", "167"], ["21", "168"], ["21", "171"], ["21", "195"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "57"], ["55", "56"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "68"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["64", "67"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["93", "94"], ["93", "101"], ["93", "128"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["129", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "141"], ["134", "144"], ["134", "146"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "160"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "159"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "179"], ["171", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "194"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["59", "72"], ["70", "77"], ["75", "84"], ["168", "173"], ["195", "202"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "63"], ["47", "44"], ["61", "59"], ["72", "70"], ["76", "75"], ["84", "87"], ["87", "97"], ["87", "168"], ["90", "87"], ["173", "176"], ["176", "190"], ["176", "198"], ["179", "176"], ["196", "195"], ["28", "26"], ["50", "47"], ["62", "61"], ["77", "76"], ["182", "179"], ["198", "196"], ["51", "55"], ["54", "50"], ["63", "64"], ["64", "62"], ["94", "104"], ["94", "131"], ["184", "182"], ["55", "54"], ["95", "94"], ["185", "184"], ["97", "95"], ["104", "107"], ["107", "115"], ["107", "90"], ["110", "107"], ["131", "138"], ["187", "185"], ["113", "110"], ["136", "141"], ["141", "155"], ["141", "90"], ["144", "141"], ["188", "187"], ["114", "122"], ["119", "113"], ["138", "136"], ["147", "162"], ["160", "144"], ["190", "188"], ["115", "114"], ["120", "125"], ["125", "119"], ["149", "147"], ["161", "160"], ["122", "120"], ["150", "149"], ["162", "161"], ["152", "150"], ["153", "152"], ["155", "153"], ["19", "24"], ["20", "202"], ["22", "202"], ["25", "202"], ["25", "202"], ["32", "202"], ["30", "202"], ["30", "202"], ["35", "202"], ["35", "202"], ["35", "202"], ["59", "202"], ["62", "202"], ["61", "202"], ["59", "202"], ["59", "202"], ["70", "202"], ["70", "202"], ["70", "202"], ["75", "202"], ["75", "202"], ["84", "202"], ["168", "202"], ["173", "202"], ["176", "202"], ["176", "202"], ["176", "202"], ["195", "202"], ["195", "202"], ["195", "202"], ["185", "202"], ["184", "202"], ["184", "202"], ["182", "202"], ["182", "202"], ["179", "202"], ["94", "202"], ["94", "202"], ["131", "202"], ["131", "202"], ["136", "202"], ["136", "202"], ["141", "202"], ["141", "202"], ["150", "202"], ["149", "202"], ["149", "202"], ["147", "202"], ["147", "202"], ["160", "202"], ["160", "202"], ["160", "202"], ["144", "202"], ["104", "202"], ["107", "202"], ["107", "202"], ["90", "202"], ["113", "202"], ["113", "202"], ["113", "202"], ["110", "202"], ["50", "202"], ["55", "202"], ["54", "202"], ["50", "202"], ["50", "202"], ["47", "202"], ["64", "202"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "59"], ["64", "59"], ["64", "59"], ["64", "59"], ["72", "70"], ["19", "75"], ["19", "168"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "84"], ["19", "173"], ["168", "195"], ["182", "195"], ["19", "195"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["54", "50"], ["19", "61"], ["64", "61"], ["64", "61"], ["64", "61"], ["44", "72"], ["19", "72"], ["84", "87"], ["90", "87"], ["19", "87"], ["72", "87"], ["138", "87"], ["107", "87"], ["97", "90"], ["155", "90"], ["122", "90"], ["19", "90"], ["173", "176"], ["179", "176"], ["19", "176"], ["87", "176"], ["190", "176"], ["176", "179"], ["19", "179"], ["184", "182"], ["184", "182"], ["19", "62"], ["64", "62"], ["64", "62"], ["64", "62"], ["55", "54"], ["19", "54"], ["19", "64"], ["35", "94"], ["19", "94"], ["168", "184"], ["182", "184"], ["19", "184"], ["59", "184"], ["149", "184"], ["32", "55"], ["19", "55"], ["19", "104"], ["19", "131"], ["168", "185"], ["182", "185"], ["19", "185"], ["87", "97"], ["19", "97"], ["104", "107"], ["110", "107"], ["19", "107"], ["87", "107"], ["125", "110"], ["19", "110"], ["138", "136"], ["138", "136"], ["136", "141"], ["144", "141"], ["19", "141"], ["141", "144"], ["19", "144"], ["149", "147"], ["149", "147"], ["147", "160"], ["19", "160"], ["87", "138"], ["19", "138"], ["176", "190"], ["19", "190"], ["107", "125"], ["19", "125"], ["131", "149"], ["19", "149"], ["147", "149"], ["59", "149"], ["97", "122"], ["19", "122"], ["131", "150"], ["19", "150"], ["147", "150"], ["97", "155"], ["19", "155"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["44", "55"], ["87", "94"], ["87", "95"], ["87", "87"], ["87", "97"], ["87", "90"], ["176", "188"], ["176", "179"], ["176", "185"], ["176", "187"], ["176", "190"], ["176", "184"], ["176", "182"], ["176", "176"], ["94", "107"], ["94", "136"], ["94", "131"], ["94", "104"], ["94", "138"], ["94", "141"], ["107", "107"], ["107", "115"], ["107", "120"], ["107", "113"], ["107", "114"], ["107", "119"], ["107", "122"], ["107", "110"], ["107", "125"], ["141", "161"], ["141", "149"], ["141", "150"], ["141", "162"], ["141", "153"], ["141", "144"], ["141", "152"], ["141", "155"], ["141", "160"], ["141", "141"], ["141", "147"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,s,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,char[] seq = new char[n])<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new char[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,seq[i])<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,seq[i] = charAt(0))<SUB>7</SUB>>", "55": "<(next,next())<SUB>7</SUB>>", "57": "<(LITERAL,0,charAt(0))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,long mod = (long) Math.pow(10, 9) + 7)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.addition,(long) Math.pow(10, 9) + 7)<SUB>9</SUB>>", "63": "<(TYPE_REF,long,long)<SUB>9</SUB>>", "65": "<(IDENTIFIER,Math,Math.pow(10, 9))<SUB>9</SUB>>", "67": "<(LITERAL,9,Math.pow(10, 9))<SUB>9</SUB>>", "69": "<(LOCAL,long[][] arr: long[][])<SUB>10</SUB>>", "71": "<(IDENTIFIER,arr,long[][] arr = new long[n][n])<SUB>10</SUB>>", "73": "<(IDENTIFIER,n,new long[n][n])<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,arr[0][0] = 1)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>11</SUB>>", "79": "<(LITERAL,0,arr[0][0] = 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,arr[0][0] = 1)<SUB>11</SUB>>", "83": "<(LOCAL,int i: int)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "93": "<(CONTROL_STRUCTURE,if (seq[i - 1] == 'f'),if (seq[i - 1] == 'f'))<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,seq[i - 1])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>13</SUB>>", "99": "<(LITERAL,1,i - 1)<SUB>13</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(LOCAL,int j: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,j,int j = 1)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,j &lt; n)<SUB>14</SUB>>", "111": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,arr[i][j] = arr[i - 1][j - 1])<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "117": "<(IDENTIFIER,i,arr[i][j] = arr[i - 1][j - 1])<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,arr[i - 1][j - 1])<SUB>15</SUB>>", "121": "<(IDENTIFIER,arr,arr[i][j] = arr[i - 1][j - 1])<SUB>15</SUB>>", "123": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>15</SUB>>", "127": "<(LITERAL,1,j - 1)<SUB>15</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>18</SUB>>", "133": "<(LITERAL,0,long sum = 0)<SUB>18</SUB>>", "135": "<(LOCAL,int j: int)<SUB>19</SUB>>", "137": "<(IDENTIFIER,j,int j = n - 1)<SUB>19</SUB>>", "139": "<(IDENTIFIER,n,n - 1)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>19</SUB>>", "143": "<(LITERAL,0,j &gt;= 0)<SUB>19</SUB>>", "145": "<(IDENTIFIER,j,j--)<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.assignment,sum = (sum + arr[i - 1][j]) % mod)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.modulo,(sum + arr[i - 1][j]) % mod)<SUB>20</SUB>>", "151": "<(IDENTIFIER,sum,sum + arr[i - 1][j])<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,arr[i - 1])<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>20</SUB>>", "157": "<(LITERAL,1,i - 1)<SUB>20</SUB>>", "159": "<(IDENTIFIER,mod,(sum + arr[i - 1][j]) % mod)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,arr[i][j])<SUB>21</SUB>>", "163": "<(IDENTIFIER,arr,arr[i][j] = sum)<SUB>21</SUB>>", "165": "<(IDENTIFIER,j,arr[i][j] = sum)<SUB>21</SUB>>", "167": "<(LOCAL,long ans: long)<SUB>25</SUB>>", "169": "<(IDENTIFIER,ans,long ans = 0)<SUB>25</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "175": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "177": "<(IDENTIFIER,i,i &lt; n)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "183": "<(IDENTIFIER,ans,ans = (ans + arr[n - 1][i]) % mod)<SUB>27</SUB>>", "185": "<(&lt;operator&gt;.addition,ans + arr[n - 1][i])<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,arr[n - 1][i])<SUB>27</SUB>>", "189": "<(IDENTIFIER,arr,ans + arr[n - 1][i])<SUB>27</SUB>>", "191": "<(IDENTIFIER,n,n - 1)<SUB>27</SUB>>", "193": "<(IDENTIFIER,i,ans + arr[n - 1][i])<SUB>27</SUB>>", "195": "<(println,System.out.println(ans))<SUB>29</SUB>>", "197": "<(IDENTIFIER,System,System.out.println(ans))<SUB>29</SUB>>", "199": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>29</SUB>>", "201": "<(MODIFIER,STATIC)>"}}