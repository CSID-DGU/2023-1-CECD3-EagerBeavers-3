{"edges": [["17", "18"], ["17", "19"], ["17", "360"], ["17", "361"], ["17", "362"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "26"], ["19", "27"], ["19", "28"], ["19", "29"], ["19", "30"], ["19", "34"], ["19", "38"], ["19", "42"], ["19", "48"], ["19", "52"], ["19", "53"], ["19", "54"], ["19", "55"], ["19", "60"], ["19", "65"], ["19", "83"], ["19", "101"], ["19", "326"], ["19", "358"], ["20", "21"], ["20", "22"], ["23", "24"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "69"], ["65", "72"], ["65", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "87"], ["83", "92"], ["83", "94"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "107"], ["101", "124"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["108", "109"], ["108", "112"], ["108", "115"], ["108", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "129"], ["125", "317"], ["125", "320"], ["125", "323"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "134"], ["130", "131"], ["130", "133"], ["131", "132"], ["134", "135"], ["134", "308"], ["134", "311"], ["134", "314"], ["135", "136"], ["135", "139"], ["135", "142"], ["135", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "149"], ["145", "152"], ["145", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "164"], ["154", "199"], ["154", "236"], ["154", "271"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "174"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["174", "181"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "189"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["191", "194"], ["191", "195"], ["191", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "213"], ["211", "218"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "226"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["228", "231"], ["228", "232"], ["228", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["246", "247"], ["246", "248"], ["246", "253"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "261"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["263", "266"], ["263", "267"], ["263", "268"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "277"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "285"], ["283", "290"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["290", "291"], ["290", "298"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["300", "303"], ["300", "304"], ["300", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "330"], ["326", "333"], ["326", "335"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "332"], ["333", "334"], ["335", "336"], ["335", "355"], ["336", "337"], ["336", "340"], ["336", "343"], ["336", "345"], ["337", "338"], ["337", "339"], ["340", "341"], ["340", "342"], ["343", "344"], ["345", "346"], ["346", "347"], ["346", "348"], ["348", "349"], ["348", "354"], ["349", "350"], ["349", "353"], ["350", "351"], ["350", "352"], ["355", "356"], ["355", "357"], ["358", "359"], ["20", "23"], ["23", "32"], ["30", "36"], ["34", "40"], ["38", "45"], ["42", "50"], ["48", "57"], ["55", "62"], ["60", "66"], ["358", "362"], ["22", "20"], ["32", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["50", "48"], ["57", "55"], ["62", "60"], ["66", "69"], ["69", "75"], ["69", "84"], ["72", "69"], ["74", "72"], ["84", "89"], ["87", "95"], ["87", "103"], ["92", "89"], ["94", "92"], ["102", "109"], ["102", "126"], ["327", "330"], ["330", "337"], ["330", "358"], ["333", "330"], ["45", "44"], ["75", "80"], ["78", "74"], ["89", "87"], ["95", "98"], ["98", "94"], ["103", "102"], ["355", "333"], ["80", "78"], ["109", "112"], ["112", "119"], ["112", "327"], ["115", "112"], ["117", "115"], ["126", "131"], ["317", "320"], ["320", "323"], ["323", "327"], ["337", "340"], ["340", "350"], ["340", "355"], ["343", "340"], ["119", "122"], ["122", "117"], ["130", "136"], ["130", "317"], ["346", "343"], ["131", "130"], ["308", "311"], ["311", "314"], ["314", "131"], ["348", "346"], ["136", "139"], ["139", "146"], ["139", "308"], ["142", "139"], ["349", "348"], ["350", "349"], ["146", "149"], ["149", "157"], ["149", "142"], ["152", "149"], ["155", "165"], ["156", "163"], ["161", "155"], ["165", "170"], ["165", "202"], ["168", "202"], ["200", "207"], ["200", "237"], ["205", "237"], ["237", "242"], ["237", "274"], ["240", "274"], ["272", "279"], ["272", "152"], ["277", "152"], ["157", "156"], ["163", "161"], ["169", "177"], ["174", "168"], ["202", "200"], ["206", "214"], ["211", "205"], ["241", "249"], ["246", "240"], ["274", "272"], ["278", "286"], ["283", "277"], ["170", "169"], ["176", "185"], ["181", "174"], ["207", "206"], ["213", "222"], ["218", "211"], ["242", "241"], ["248", "255"], ["253", "246"], ["279", "278"], ["285", "292"], ["290", "283"], ["177", "176"], ["182", "195"], ["189", "181"], ["214", "213"], ["219", "232"], ["226", "218"], ["249", "248"], ["254", "268"], ["261", "253"], ["286", "285"], ["291", "305"], ["298", "290"], ["183", "182"], ["191", "189"], ["220", "219"], ["228", "226"], ["255", "258"], ["258", "254"], ["263", "261"], ["292", "295"], ["295", "291"], ["300", "298"], ["185", "183"], ["195", "191"], ["222", "220"], ["232", "228"], ["268", "263"], ["305", "300"], ["17", "22"], ["18", "362"], ["20", "362"], ["23", "362"], ["30", "362"], ["34", "362"], ["38", "362"], ["38", "362"], ["42", "362"], ["42", "362"], ["42", "362"], ["48", "362"], ["48", "362"], ["48", "362"], ["55", "362"], ["55", "362"], ["60", "362"], ["62", "362"], ["60", "362"], ["60", "362"], ["87", "362"], ["87", "362"], ["103", "362"], ["102", "362"], ["102", "362"], ["126", "362"], ["131", "362"], ["130", "362"], ["130", "362"], ["317", "362"], ["320", "362"], ["320", "362"], ["323", "362"], ["323", "362"], ["323", "362"], ["146", "362"], ["149", "362"], ["149", "362"], ["149", "362"], ["142", "362"], ["155", "362"], ["155", "362"], ["155", "362"], ["165", "362"], ["168", "362"], ["174", "362"], ["181", "362"], ["191", "362"], ["191", "362"], ["189", "362"], ["181", "362"], ["174", "362"], ["168", "362"], ["168", "362"], ["200", "362"], ["200", "362"], ["205", "362"], ["211", "362"], ["218", "362"], ["228", "362"], ["228", "362"], ["226", "362"], ["218", "362"], ["211", "362"], ["205", "362"], ["205", "362"], ["237", "362"], ["240", "362"], ["246", "362"], ["253", "362"], ["263", "362"], ["263", "362"], ["261", "362"], ["253", "362"], ["246", "362"], ["240", "362"], ["240", "362"], ["272", "362"], ["272", "362"], ["277", "362"], ["283", "362"], ["290", "362"], ["300", "362"], ["300", "362"], ["298", "362"], ["290", "362"], ["283", "362"], ["277", "362"], ["277", "362"], ["152", "362"], ["327", "362"], ["330", "362"], ["330", "362"], ["330", "362"], ["358", "362"], ["358", "362"], ["337", "362"], ["340", "362"], ["340", "362"], ["340", "362"], ["355", "362"], ["333", "362"], ["348", "362"], ["346", "362"], ["346", "362"], ["343", "362"], ["117", "362"], ["117", "362"], ["117", "362"], ["115", "362"], ["94", "362"], ["98", "362"], ["94", "362"], ["94", "362"], ["92", "362"], ["74", "362"], ["80", "362"], ["78", "362"], ["74", "362"], ["74", "362"], ["72", "362"], ["117", "362"], ["17", "18"], ["17", "20"], ["32", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["50", "48"], ["57", "55"], ["57", "55"], ["62", "60"], ["62", "60"], ["20", "23"], ["17", "23"], ["17", "66"], ["78", "74"], ["78", "74"], ["17", "84"], ["98", "94"], ["98", "94"], ["17", "327"], ["40", "358"], ["355", "358"], ["98", "358"], ["78", "358"], ["17", "358"], ["23", "32"], ["17", "32"], ["32", "36"], ["17", "36"], ["36", "40"], ["17", "40"], ["45", "44"], ["45", "44"], ["45", "50"], ["17", "50"], ["50", "57"], ["17", "57"], ["34", "57"], ["57", "62"], ["17", "62"], ["57", "62"], ["66", "69"], ["72", "69"], ["17", "69"], ["62", "69"], ["69", "72"], ["17", "72"], ["84", "87"], ["92", "87"], ["17", "87"], ["89", "87"], ["89", "87"], ["87", "92"], ["17", "92"], ["103", "102"], ["103", "102"], ["17", "102"], ["327", "330"], ["333", "330"], ["17", "330"], ["89", "330"], ["139", "330"], ["112", "330"], ["330", "333"], ["17", "333"], ["30", "45"], ["17", "45"], ["40", "78"], ["17", "78"], ["80", "78"], ["80", "78"], ["69", "89"], ["17", "89"], ["40", "98"], ["78", "98"], ["17", "98"], ["62", "98"], ["80", "98"], ["38", "103"], ["17", "103"], ["17", "109"], ["17", "126"], ["60", "317"], ["311", "317"], ["17", "317"], ["55", "320"], ["314", "320"], ["17", "320"], ["317", "323"], ["17", "323"], ["17", "337"], ["40", "355"], ["346", "355"], ["98", "355"], ["78", "355"], ["17", "355"], ["62", "80"], ["17", "80"], ["109", "112"], ["115", "112"], ["17", "112"], ["89", "112"], ["112", "115"], ["17", "115"], ["17", "117"], ["55", "117"], ["122", "117"], ["103", "126"], ["337", "340"], ["343", "340"], ["17", "340"], ["62", "340"], ["149", "340"], ["98", "340"], ["80", "340"], ["340", "343"], ["17", "343"], ["17", "122"], ["131", "130"], ["17", "130"], ["60", "308"], ["311", "308"], ["17", "308"], ["55", "311"], ["314", "311"], ["17", "311"], ["308", "314"], ["17", "314"], ["40", "346"], ["355", "346"], ["98", "346"], ["78", "346"], ["17", "346"], ["155", "346"], ["168", "346"], ["205", "346"], ["240", "346"], ["277", "346"], ["126", "131"], ["17", "131"], ["17", "136"], ["155", "348"], ["168", "348"], ["205", "348"], ["240", "348"], ["277", "348"], ["17", "348"], ["136", "139"], ["142", "139"], ["17", "139"], ["89", "139"], ["202", "139"], ["139", "142"], ["200", "142"], ["228", "142"], ["263", "142"], ["300", "142"], ["17", "142"], ["17", "146"], ["146", "149"], ["152", "149"], ["17", "149"], ["62", "149"], ["274", "149"], ["98", "149"], ["80", "149"], ["272", "152"], ["300", "152"], ["17", "152"], ["174", "168"], ["174", "168"], ["174", "168"], ["211", "205"], ["211", "205"], ["211", "205"], ["246", "240"], ["246", "240"], ["246", "240"], ["283", "277"], ["283", "277"], ["283", "277"], ["139", "165"], ["200", "165"], ["228", "165"], ["263", "165"], ["300", "165"], ["17", "165"], ["165", "200"], ["191", "200"], ["17", "200"], ["202", "200"], ["202", "200"], ["149", "237"], ["191", "237"], ["228", "237"], ["17", "237"], ["237", "272"], ["263", "272"], ["17", "272"], ["274", "272"], ["274", "272"], ["211", "174"], ["246", "174"], ["283", "174"], ["17", "174"], ["155", "174"], ["189", "174"], ["189", "174"], ["139", "202"], ["17", "202"], ["174", "211"], ["246", "211"], ["283", "211"], ["17", "211"], ["155", "211"], ["168", "211"], ["226", "211"], ["226", "211"], ["174", "246"], ["211", "246"], ["283", "246"], ["17", "246"], ["155", "246"], ["168", "246"], ["205", "246"], ["261", "246"], ["261", "246"], ["149", "274"], ["17", "274"], ["174", "283"], ["211", "283"], ["246", "283"], ["17", "283"], ["155", "283"], ["168", "283"], ["205", "283"], ["240", "283"], ["298", "283"], ["298", "283"], ["189", "181"], ["189", "181"], ["226", "218"], ["226", "218"], ["261", "253"], ["261", "253"], ["298", "290"], ["298", "290"], ["17", "189"], ["191", "189"], ["191", "189"], ["191", "189"], ["191", "189"], ["17", "226"], ["228", "226"], ["228", "226"], ["228", "226"], ["228", "226"], ["17", "261"], ["263", "261"], ["263", "261"], ["263", "261"], ["263", "261"], ["17", "298"], ["300", "298"], ["300", "298"], ["300", "298"], ["300", "298"], ["228", "191"], ["263", "191"], ["300", "191"], ["17", "191"], ["195", "191"], ["149", "191"], ["195", "191"], ["191", "228"], ["263", "228"], ["300", "228"], ["17", "228"], ["200", "228"], ["149", "228"], ["191", "228"], ["237", "258"], ["17", "258"], ["191", "263"], ["228", "263"], ["300", "263"], ["17", "263"], ["200", "263"], ["228", "263"], ["268", "263"], ["268", "263"], ["272", "295"], ["17", "295"], ["191", "300"], ["228", "300"], ["263", "300"], ["17", "300"], ["200", "300"], ["228", "300"], ["263", "300"], ["272", "300"], ["165", "185"], ["17", "185"], ["185", "195"], ["17", "195"], ["200", "222"], ["17", "222"], ["17", "232"], ["200", "232"], ["258", "268"], ["17", "268"], ["17", "305"], ["272", "305"], ["69", "74"], ["69", "80"], ["69", "72"], ["69", "75"], ["69", "69"], ["69", "78"], ["87", "95"], ["87", "94"], ["87", "98"], ["87", "92"], ["87", "87"], ["87", "89"], ["102", "317"], ["102", "112"], ["102", "323"], ["102", "109"], ["102", "320"], ["102", "131"], ["102", "130"], ["102", "126"], ["330", "340"], ["330", "355"], ["330", "337"], ["330", "333"], ["330", "330"], ["112", "112"], ["112", "122"], ["112", "117"], ["112", "115"], ["112", "119"], ["340", "349"], ["340", "340"], ["340", "346"], ["340", "348"], ["340", "343"], ["340", "350"], ["130", "136"], ["130", "308"], ["130", "311"], ["130", "131"], ["130", "130"], ["130", "314"], ["130", "139"], ["139", "146"], ["139", "149"], ["139", "139"], ["139", "142"], ["149", "161"], ["149", "163"], ["149", "272"], ["149", "152"], ["149", "202"], ["149", "274"], ["149", "200"], ["149", "237"], ["149", "149"], ["149", "155"], ["149", "157"], ["149", "165"], ["149", "156"], ["165", "168"], ["165", "170"], ["165", "181"], ["165", "195"], ["165", "174"], ["165", "182"], ["165", "176"], ["165", "177"], ["165", "169"], ["165", "185"], ["165", "189"], ["165", "191"], ["165", "183"], ["200", "214"], ["200", "226"], ["200", "213"], ["200", "228"], ["200", "206"], ["200", "222"], ["200", "232"], ["200", "207"], ["200", "205"], ["200", "220"], ["200", "211"], ["200", "218"], ["200", "219"], ["237", "240"], ["237", "242"], ["237", "258"], ["237", "268"], ["237", "249"], ["237", "253"], ["237", "254"], ["237", "241"], ["237", "261"], ["237", "255"], ["237", "246"], ["237", "263"], ["237", "248"], ["272", "292"], ["272", "290"], ["272", "283"], ["272", "298"], ["272", "300"], ["272", "278"], ["272", "305"], ["272", "279"], ["272", "291"], ["272", "285"], ["272", "286"], ["272", "295"], ["272", "277"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(IDENTIFIER,f,f = new FastIO())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new FastIO())<SUB>3</SUB>>", "25": "<(LOCAL,int n: int)<SUB>5</SUB>>", "27": "<(LOCAL,int k: int)<SUB>5</SUB>>", "29": "<(LOCAL,int j: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,int n = ni())<SUB>5</SUB>>", "33": "<(IDENTIFIER,f,ni())<SUB>5</SUB>>", "35": "<(IDENTIFIER,m,int m = ni())<SUB>5</SUB>>", "37": "<(IDENTIFIER,f,ni())<SUB>5</SUB>>", "39": "<(IDENTIFIER,k,int k = ni())<SUB>5</SUB>>", "41": "<(IDENTIFIER,f,ni())<SUB>5</SUB>>", "43": "<(IDENTIFIER,ve,ve = new long[n - 1][])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>6</SUB>>", "47": "<(LITERAL,1,n - 1)<SUB>6</SUB>>", "49": "<(IDENTIFIER,he,he = new long[n][])<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,new long[n][])<SUB>7</SUB>>", "53": "<(LOCAL,long[][] pans: long[][])<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,long[][] ans = new long[n][m])<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.alloc,new long[n][m])>", "59": "<(IDENTIFIER,m,new long[n][m])<SUB>9</SUB>>", "61": "<(IDENTIFIER,pans,long[][] pans = new long[n][m])<SUB>9</SUB>>", "63": "<(IDENTIFIER,n,new long[n][m])<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "67": "<(IDENTIFIER,i,i = 0)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,he[i])<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,he[i] = nla(m - 1))<SUB>12</SUB>>", "79": "<(IDENTIFIER,f,nla(m - 1))<SUB>12</SUB>>", "81": "<(IDENTIFIER,m,m - 1)<SUB>12</SUB>>", "83": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n - 1); i++),for (i = 0; Some(i &lt; n - 1); i++))<SUB>14</SUB>>", "85": "<(IDENTIFIER,i,i = 0)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "91": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,ve[i])<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,ve[i] = nla(m))<SUB>15</SUB>>", "99": "<(IDENTIFIER,f,nla(m))<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.modulo,k % 2)<SUB>17</SUB>>", "105": "<(LITERAL,2,k % 2)<SUB>17</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,i = 0)<SUB>19</SUB>>", "111": "<(LITERAL,0,i = 0)<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "117": "<(fill,fill(ans[i], -1L))<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>20</SUB>>", "121": "<(IDENTIFIER,i,fill(ans[i], -1L))<SUB>20</SUB>>", "123": "<(LITERAL,1L,-1L)<SUB>20</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "127": "<(IDENTIFIER,k,k /= 2)<SUB>24</SUB>>", "129": "<(CONTROL_STRUCTURE,while (k-- &gt; 0),while (k-- &gt; 0))<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.postDecrement,k--)<SUB>26</SUB>>", "133": "<(LITERAL,0,k-- &gt; 0)<SUB>26</SUB>>", "135": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>28</SUB>>", "137": "<(IDENTIFIER,i,i = 0)<SUB>28</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>28</SUB>>", "141": "<(IDENTIFIER,n,i &lt; n)<SUB>28</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "145": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; m); j++),for (j = 0; Some(j &lt; m); j++))<SUB>30</SUB>>", "147": "<(IDENTIFIER,j,j = 0)<SUB>30</SUB>>", "149": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>30</SUB>>", "151": "<(IDENTIFIER,m,j &lt; m)<SUB>30</SUB>>", "153": "<(IDENTIFIER,j,j++)<SUB>30</SUB>>", "155": "<(&lt;operator&gt;.assignment,ans[i][j] = Integer.MAX_VALUE)<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>32</SUB>>", "159": "<(IDENTIFIER,i,ans[i][j] = Integer.MAX_VALUE)<SUB>32</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>32</SUB>>", "163": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>32</SUB>>", "165": "<(&lt;operator&gt;.notEquals,i != 0)<SUB>34</SUB>>", "167": "<(LITERAL,0,i != 0)<SUB>34</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>35</SUB>>", "171": "<(IDENTIFIER,ans,ans[i][j] = min(ans[i][j], pans[i - 1][j] + 2 * edge(i, j, i - 1, j)))<SUB>35</SUB>>", "173": "<(IDENTIFIER,j,ans[i][j] = min(ans[i][j], pans[i - 1][j] + 2 * edge(i, j, i - 1, j)))<SUB>35</SUB>>", "175": "<(IDENTIFIER,Math,min(ans[i][j], pans[i - 1][j] + 2 * edge(i, j, i - 1, j)))<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>35</SUB>>", "179": "<(IDENTIFIER,i,min(ans[i][j], pans[i - 1][j] + 2 * edge(i, j, i - 1, j)))<SUB>35</SUB>>", "181": "<(&lt;operator&gt;.addition,pans[i - 1][j] + 2 * edge(i, j, i - 1, j))<SUB>35</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,pans[i - 1])<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>35</SUB>>", "187": "<(LITERAL,1,i - 1)<SUB>35</SUB>>", "189": "<(&lt;operator&gt;.multiplication,2 * edge(i, j, i - 1, j))<SUB>35</SUB>>", "191": "<(edge,edge(i, j, i - 1, j))<SUB>35</SUB>>", "193": "<(IDENTIFIER,i,edge(i, j, i - 1, j))<SUB>35</SUB>>", "195": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>35</SUB>>", "197": "<(LITERAL,1,i - 1)<SUB>35</SUB>>", "199": "<(CONTROL_STRUCTURE,if (i != n - 1),if (i != n - 1))<SUB>37</SUB>>", "201": "<(IDENTIFIER,i,i != n - 1)<SUB>37</SUB>>", "203": "<(IDENTIFIER,n,n - 1)<SUB>37</SUB>>", "205": "<(&lt;operator&gt;.assignment,ans[i][j] = min(ans[i][j], pans[i + 1][j] + 2 * edge(i, j, i + 1, j)))<SUB>38</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>38</SUB>>", "209": "<(IDENTIFIER,i,ans[i][j] = min(ans[i][j], pans[i + 1][j] + 2 * edge(i, j, i + 1, j)))<SUB>38</SUB>>", "211": "<(min,min(ans[i][j], pans[i + 1][j] + 2 * edge(i, j, i + 1, j)))<SUB>38</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>38</SUB>>", "215": "<(IDENTIFIER,ans,min(ans[i][j], pans[i + 1][j] + 2 * edge(i, j, i + 1, j)))<SUB>38</SUB>>", "217": "<(IDENTIFIER,j,min(ans[i][j], pans[i + 1][j] + 2 * edge(i, j, i + 1, j)))<SUB>38</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,pans[i + 1][j])<SUB>38</SUB>>", "221": "<(IDENTIFIER,pans,pans[i + 1][j] + 2 * edge(i, j, i + 1, j))<SUB>38</SUB>>", "223": "<(IDENTIFIER,i,i + 1)<SUB>38</SUB>>", "225": "<(IDENTIFIER,j,pans[i + 1][j] + 2 * edge(i, j, i + 1, j))<SUB>38</SUB>>", "227": "<(LITERAL,2,2 * edge(i, j, i + 1, j))<SUB>38</SUB>>", "229": "<(IDENTIFIER,this,edge(i, j, i + 1, j))<SUB>38</SUB>>", "231": "<(IDENTIFIER,j,edge(i, j, i + 1, j))<SUB>38</SUB>>", "233": "<(IDENTIFIER,i,i + 1)<SUB>38</SUB>>", "235": "<(IDENTIFIER,j,edge(i, j, i + 1, j))<SUB>38</SUB>>", "237": "<(&lt;operator&gt;.notEquals,j != 0)<SUB>40</SUB>>", "239": "<(LITERAL,0,j != 0)<SUB>40</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>41</SUB>>", "243": "<(IDENTIFIER,ans,ans[i][j] = min(ans[i][j], pans[i][j - 1] + 2 * edge(i, j, i, j - 1)))<SUB>41</SUB>>", "245": "<(IDENTIFIER,j,ans[i][j] = min(ans[i][j], pans[i][j - 1] + 2 * edge(i, j, i, j - 1)))<SUB>41</SUB>>", "247": "<(IDENTIFIER,Math,min(ans[i][j], pans[i][j - 1] + 2 * edge(i, j, i, j - 1)))<SUB>41</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>41</SUB>>", "251": "<(IDENTIFIER,i,min(ans[i][j], pans[i][j - 1] + 2 * edge(i, j, i, j - 1)))<SUB>41</SUB>>", "253": "<(&lt;operator&gt;.addition,pans[i][j - 1] + 2 * edge(i, j, i, j - 1))<SUB>41</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,pans[i])<SUB>41</SUB>>", "257": "<(IDENTIFIER,i,pans[i][j - 1] + 2 * edge(i, j, i, j - 1))<SUB>41</SUB>>", "259": "<(IDENTIFIER,j,j - 1)<SUB>41</SUB>>", "261": "<(&lt;operator&gt;.multiplication,2 * edge(i, j, i, j - 1))<SUB>41</SUB>>", "263": "<(edge,edge(i, j, i, j - 1))<SUB>41</SUB>>", "265": "<(IDENTIFIER,i,edge(i, j, i, j - 1))<SUB>41</SUB>>", "267": "<(IDENTIFIER,i,edge(i, j, i, j - 1))<SUB>41</SUB>>", "269": "<(IDENTIFIER,j,j - 1)<SUB>41</SUB>>", "271": "<(CONTROL_STRUCTURE,if (j != m - 1),if (j != m - 1))<SUB>43</SUB>>", "273": "<(IDENTIFIER,j,j != m - 1)<SUB>43</SUB>>", "275": "<(IDENTIFIER,m,m - 1)<SUB>43</SUB>>", "277": "<(&lt;operator&gt;.assignment,ans[i][j] = min(ans[i][j], pans[i][j + 1] + 2 * edge(i, j, i, j + 1)))<SUB>44</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>44</SUB>>", "281": "<(IDENTIFIER,i,ans[i][j] = min(ans[i][j], pans[i][j + 1] + 2 * edge(i, j, i, j + 1)))<SUB>44</SUB>>", "283": "<(min,min(ans[i][j], pans[i][j + 1] + 2 * edge(i, j, i, j + 1)))<SUB>44</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>44</SUB>>", "287": "<(IDENTIFIER,ans,min(ans[i][j], pans[i][j + 1] + 2 * edge(i, j, i, j + 1)))<SUB>44</SUB>>", "289": "<(IDENTIFIER,j,min(ans[i][j], pans[i][j + 1] + 2 * edge(i, j, i, j + 1)))<SUB>44</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,pans[i][j + 1])<SUB>44</SUB>>", "293": "<(IDENTIFIER,pans,pans[i][j + 1] + 2 * edge(i, j, i, j + 1))<SUB>44</SUB>>", "295": "<(&lt;operator&gt;.addition,j + 1)<SUB>44</SUB>>", "297": "<(LITERAL,1,j + 1)<SUB>44</SUB>>", "299": "<(LITERAL,2,2 * edge(i, j, i, j + 1))<SUB>44</SUB>>", "301": "<(IDENTIFIER,this,edge(i, j, i, j + 1))<SUB>44</SUB>>", "303": "<(IDENTIFIER,j,edge(i, j, i, j + 1))<SUB>44</SUB>>", "305": "<(&lt;operator&gt;.addition,j + 1)<SUB>44</SUB>>", "307": "<(LITERAL,1,j + 1)<SUB>44</SUB>>", "309": "<(IDENTIFIER,temp,temp = pans)<SUB>51</SUB>>", "311": "<(&lt;operator&gt;.assignment,pans = ans)<SUB>52</SUB>>", "313": "<(IDENTIFIER,ans,pans = ans)<SUB>52</SUB>>", "315": "<(IDENTIFIER,ans,ans = temp)<SUB>53</SUB>>", "317": "<(&lt;operator&gt;.assignment,temp = pans)<SUB>56</SUB>>", "319": "<(IDENTIFIER,pans,temp = pans)<SUB>56</SUB>>", "321": "<(IDENTIFIER,pans,pans = ans)<SUB>57</SUB>>", "323": "<(&lt;operator&gt;.assignment,ans = temp)<SUB>58</SUB>>", "325": "<(IDENTIFIER,temp,ans = temp)<SUB>58</SUB>>", "327": "<(&lt;operator&gt;.assignment,i = 0)<SUB>61</SUB>>", "329": "<(LITERAL,0,i = 0)<SUB>61</SUB>>", "331": "<(IDENTIFIER,i,i &lt; n)<SUB>61</SUB>>", "333": "<(&lt;operator&gt;.postIncrement,i++)<SUB>61</SUB>>", "335": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "337": "<(&lt;operator&gt;.assignment,j = 0)<SUB>63</SUB>>", "339": "<(LITERAL,0,j = 0)<SUB>63</SUB>>", "341": "<(IDENTIFIER,j,j &lt; m)<SUB>63</SUB>>", "343": "<(&lt;operator&gt;.postIncrement,j++)<SUB>63</SUB>>", "345": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "347": "<(IDENTIFIER,f,out(ans[i][j] + &quot; &quot;))<SUB>65</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>65</SUB>>", "351": "<(IDENTIFIER,ans,ans[i][j] + &quot; &quot;)<SUB>65</SUB>>", "353": "<(IDENTIFIER,j,ans[i][j] + &quot; &quot;)<SUB>65</SUB>>", "355": "<(out,out(&quot;\\n&quot;))<SUB>68</SUB>>", "357": "<(LITERAL,&quot;\\n&quot;,out(&quot;\\n&quot;))<SUB>68</SUB>>", "359": "<(IDENTIFIER,f,flush())<SUB>71</SUB>>", "361": "<(MODIFIER,STATIC)>"}}