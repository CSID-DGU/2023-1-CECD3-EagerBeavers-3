{"edges": [["17", "19"], ["17", "177"], ["17", "178"], ["17", "179"], ["19", "20"], ["19", "23"], ["19", "42"], ["19", "45"], ["19", "50"], ["19", "51"], ["19", "52"], ["19", "56"], ["19", "62"], ["19", "63"], ["19", "68"], ["19", "99"], ["19", "109"], ["19", "110"], ["19", "113"], ["19", "172"], ["19", "175"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "41"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "61"], ["59", "60"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "89"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "88"], ["86", "87"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "98"], ["96", "97"], ["99", "100"], ["99", "101"], ["99", "102"], ["102", "103"], ["102", "106"], ["102", "108"], ["103", "104"], ["103", "105"], ["106", "107"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "123"], ["113", "125"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "127"], ["125", "158"], ["125", "165"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "143"], ["130", "131"], ["130", "138"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "157"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["20", "28"], ["23", "44"], ["42", "49"], ["45", "54"], ["52", "59"], ["56", "65"], ["63", "70"], ["99", "110"], ["110", "115"], ["172", "175"], ["175", "179"], ["22", "20"], ["44", "42"], ["47", "45"], ["54", "52"], ["58", "56"], ["65", "63"], ["70", "73"], ["73", "81"], ["73", "105"], ["76", "73"], ["115", "120"], ["118", "134"], ["118", "172"], ["123", "120"], ["26", "34"], ["29", "23"], ["49", "47"], ["59", "58"], ["79", "91"], ["89", "76"], ["103", "106"], ["106", "99"], ["120", "118"], ["127", "159"], ["28", "26"], ["80", "86"], ["85", "79"], ["90", "96"], ["95", "89"], ["105", "103"], ["129", "127"], ["159", "162"], ["159", "166"], ["162", "166"], ["166", "169"], ["166", "123"], ["169", "123"], ["32", "39"], ["35", "29"], ["81", "80"], ["86", "85"], ["91", "90"], ["96", "95"], ["130", "148"], ["143", "129"], ["34", "32"], ["37", "35"], ["131", "139"], ["138", "130"], ["144", "143"], ["39", "37"], ["132", "131"], ["139", "138"], ["145", "153"], ["152", "144"], ["134", "132"], ["146", "145"], ["153", "152"], ["148", "146"], ["17", "22"], ["18", "179"], ["20", "179"], ["23", "179"], ["29", "179"], ["35", "179"], ["35", "179"], ["35", "179"], ["29", "179"], ["23", "179"], ["42", "179"], ["45", "179"], ["45", "179"], ["52", "179"], ["56", "179"], ["59", "179"], ["58", "179"], ["56", "179"], ["56", "179"], ["63", "179"], ["63", "179"], ["73", "179"], ["99", "179"], ["103", "179"], ["106", "179"], ["106", "179"], ["99", "179"], ["110", "179"], ["115", "179"], ["118", "179"], ["120", "179"], ["118", "179"], ["118", "179"], ["172", "179"], ["172", "179"], ["175", "179"], ["175", "179"], ["130", "179"], ["130", "179"], ["129", "179"], ["144", "179"], ["144", "179"], ["143", "179"], ["129", "179"], ["127", "179"], ["127", "179"], ["159", "179"], ["162", "179"], ["166", "179"], ["166", "179"], ["166", "179"], ["169", "179"], ["123", "179"], ["79", "179"], ["79", "179"], ["89", "179"], ["96", "179"], ["95", "179"], ["89", "179"], ["89", "179"], ["76", "179"], ["99", "179"], ["17", "18"], ["17", "20"], ["17", "42"], ["54", "52"], ["58", "56"], ["58", "56"], ["65", "63"], ["65", "63"], ["17", "110"], ["20", "23"], ["17", "23"], ["32", "23"], ["29", "23"], ["42", "45"], ["17", "45"], ["17", "70"], ["17", "99"], ["63", "99"], ["103", "99"], ["106", "99"], ["17", "115"], ["45", "172"], ["17", "172"], ["110", "172"], ["162", "172"], ["169", "172"], ["172", "175"], ["17", "175"], ["17", "26"], ["17", "41"], ["17", "54"], ["59", "58"], ["17", "58"], ["52", "65"], ["17", "65"], ["70", "73"], ["76", "73"], ["17", "73"], ["65", "73"], ["73", "76"], ["17", "76"], ["85", "79"], ["85", "79"], ["95", "89"], ["95", "89"], ["17", "103"], ["17", "108"], ["115", "118"], ["123", "118"], ["17", "118"], ["120", "118"], ["120", "118"], ["17", "123"], ["118", "123"], ["129", "127"], ["129", "127"], ["26", "29"], ["17", "29"], ["32", "29"], ["35", "29"], ["54", "59"], ["17", "59"], ["103", "106"], ["17", "106"], ["73", "120"], ["17", "120"], ["17", "162"], ["17", "169"], ["17", "32"], ["17", "40"], ["86", "85"], ["17", "85"], ["96", "95"], ["17", "95"], ["130", "129"], ["130", "129"], ["143", "129"], ["143", "129"], ["127", "159"], ["17", "159"], ["56", "159"], ["166", "159"], ["110", "162"], ["169", "162"], ["159", "166"], ["17", "166"], ["159", "166"], ["110", "169"], ["162", "169"], ["32", "35"], ["17", "35"], ["59", "86"], ["96", "86"], ["17", "86"], ["86", "96"], ["17", "96"], ["79", "130"], ["89", "143"], ["17", "143"], ["89", "144"], ["118", "134"], ["17", "134"], ["17", "148"], ["118", "148"], ["73", "73"], ["73", "96"], ["73", "89"], ["73", "81"], ["73", "85"], ["73", "95"], ["73", "76"], ["73", "91"], ["73", "90"], ["73", "79"], ["73", "80"], ["73", "86"], ["118", "120"], ["118", "145"], ["118", "146"], ["118", "131"], ["118", "166"], ["118", "132"], ["118", "153"], ["118", "123"], ["118", "159"], ["118", "144"], ["118", "129"], ["118", "134"], ["118", "138"], ["118", "148"], ["118", "143"], ["118", "152"], ["118", "130"], ["118", "118"], ["118", "127"], ["118", "139"], ["159", "162"], ["166", "169"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "39": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "49": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "51": "<(LOCAL,int t: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "55": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "57": "<(IDENTIFIER,t,int t = nextInt() * 2)<SUB>5</SUB>>", "59": "<(nextInt,nextInt())<SUB>5</SUB>>", "61": "<(LITERAL,2,nextInt() * 2)<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[][] a = new int[n][2])<SUB>6</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[n][2])>", "67": "<(LITERAL,2,new int[n][2])<SUB>6</SUB>>", "69": "<(LOCAL,int i: int)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.assignment,a[i][0] = nextInt() * 2)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "83": "<(IDENTIFIER,i,a[i][0] = nextInt() * 2)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.multiplication,nextInt() * 2)<SUB>8</SUB>>", "87": "<(IDENTIFIER,this,nextInt())<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.assignment,a[i][1] = nextInt() * 2)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "93": "<(IDENTIFIER,i,a[i][1] = nextInt() * 2)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.multiplication,nextInt() * 2)<SUB>9</SUB>>", "97": "<(IDENTIFIER,this,nextInt())<SUB>9</SUB>>", "99": "<(sort,sort(a, new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return a[0] &gt; b[0] ? 1 : a[1] &lt; b[1] ? -1 : 0;\\012    }\\012}))<SUB>12</SUB>>", "101": "<(IDENTIFIER,a,sort(a, new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return a[0] &gt; b[0] ? 1 : a[1] &lt; b[1] ? -1 : 0;\\012    }\\012}))<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "105": "<(&lt;operator&gt;.alloc,new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return a[0] &gt; b[0] ? 1 : a[1] &lt; b[1] ? -1 : 0;\\012    }\\012})<SUB>12</SUB>>", "107": "<(IDENTIFIER,$obj4,new Comparator&lt;int[]&gt;() {\\012\\012    public int compare(int[] a, int[] b) {\\012        return a[0] &gt; b[0] ? 1 : a[1] &lt; b[1] ? -1 : 0;\\012    }\\012})>", "109": "<(LOCAL,int s: int)<SUB>18</SUB>>", "111": "<(IDENTIFIER,s,int s = 2)<SUB>18</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "117": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "119": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>20</SUB>>", "121": "<(IDENTIFIER,n,n - 1)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.assignment,int g = (a[i + 1][0] - a[i][0]) - (a[i + 1][1] + a[i][1]) / 2)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.subtraction,(a[i + 1][0] - a[i][0]) - (a[i + 1][1] + a[i][1]) / 2)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,a[i + 1][0])<SUB>21</SUB>>", "133": "<(IDENTIFIER,a,a[i + 1][0] - a[i][0])<SUB>21</SUB>>", "135": "<(IDENTIFIER,i,i + 1)<SUB>21</SUB>>", "137": "<(LITERAL,0,a[i + 1][0] - a[i][0])<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>21</SUB>>", "141": "<(IDENTIFIER,i,a[i + 1][0] - a[i][0])<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.division,(a[i + 1][1] + a[i][1]) / 2)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,a[i + 1][1])<SUB>21</SUB>>", "147": "<(IDENTIFIER,a,a[i + 1][1] + a[i][1])<SUB>21</SUB>>", "149": "<(IDENTIFIER,i,i + 1)<SUB>21</SUB>>", "151": "<(LITERAL,1,a[i + 1][1] + a[i][1])<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>21</SUB>>", "155": "<(IDENTIFIER,i,a[i + 1][1] + a[i][1])<SUB>21</SUB>>", "157": "<(LITERAL,2,(a[i + 1][1] + a[i][1]) / 2)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.greaterThan,g &gt; t)<SUB>22</SUB>>", "161": "<(IDENTIFIER,t,g &gt; t)<SUB>22</SUB>>", "163": "<(IDENTIFIER,s,s += 2)<SUB>22</SUB>>", "165": "<(CONTROL_STRUCTURE,if (g == t),if (g == t))<SUB>23</SUB>>", "167": "<(IDENTIFIER,g,g == t)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.assignmentPlus,s += 1)<SUB>23</SUB>>", "171": "<(LITERAL,1,s += 1)<SUB>23</SUB>>", "173": "<(IDENTIFIER,out,println(s))<SUB>25</SUB>>", "175": "<(flush,flush())<SUB>28</SUB>>", "177": "<(MODIFIER,PUBLIC)>", "179": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}