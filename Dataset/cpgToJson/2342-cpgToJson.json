{"edges": [["37", "38"], ["37", "199"], ["37", "200"], ["37", "201"], ["38", "4"], ["38", "39"], ["38", "42"], ["38", "53"], ["38", "8"], ["38", "55"], ["38", "19"], ["38", "65"], ["38", "68"], ["38", "21"], ["38", "133"], ["38", "139"], ["39", "40"], ["39", "41"], ["42", "3"], ["42", "43"], ["43", "44"], ["43", "47"], ["43", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["58", "59"], ["58", "6"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "64"], ["62", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "78"], ["68", "80"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "93"], ["81", "95"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["95", "96"], ["96", "97"], ["96", "106"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "113"], ["106", "122"], ["106", "129"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["139", "17"], ["139", "140"], ["139", "143"], ["139", "146"], ["139", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "12"], ["148", "149"], ["148", "159"], ["148", "160"], ["148", "169"], ["148", "184"], ["149", "150"], ["149", "151"], ["151", "152"], ["152", "153"], ["152", "13"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "158"], ["156", "157"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "179"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["179", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["184", "185"], ["184", "186"], ["184", "192"], ["186", "187"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["193", "194"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["39", "46"], ["42", "53"], ["53", "62"], ["55", "65"], ["65", "70"], ["133", "140"], ["41", "39"], ["57", "55"], ["70", "77"], ["73", "83"], ["73", "137"], ["78", "77"], ["135", "133"], ["140", "143"], ["143", "201"], ["143", "156"], ["146", "143"], ["44", "51"], ["47", "42"], ["58", "57"], ["75", "73"], ["137", "135"], ["149", "163"], ["160", "174"], ["46", "44"], ["49", "47"], ["59", "6"], ["6", "58"], ["77", "75"], ["83", "91"], ["86", "98"], ["86", "78"], ["93", "91"], ["151", "149"], ["162", "160"], ["170", "185"], ["170", "182"], ["185", "190"], ["185", "197"], ["51", "49"], ["61", "59"], ["88", "86"], ["152", "151"], ["163", "166"], ["166", "162"], ["171", "170"], ["180", "185"], ["187", "146"], ["62", "61"], ["89", "88"], ["97", "110"], ["97", "93"], ["153", "13"], ["13", "152"], ["172", "171"], ["182", "180"], ["188", "187"], ["194", "146"], ["91", "89"], ["98", "103"], ["101", "97"], ["108", "114"], ["113", "125"], ["122", "131"], ["129", "93"], ["155", "153"], ["174", "172"], ["190", "188"], ["195", "194"], ["103", "101"], ["110", "108"], ["114", "119"], ["117", "113"], ["123", "122"], ["131", "129"], ["156", "155"], ["197", "195"], ["119", "117"], ["125", "123"], ["37", "41"], ["10", "201"], ["39", "201"], ["44", "201"], ["47", "201"], ["47", "201"], ["47", "201"], ["42", "201"], ["55", "201"], ["59", "201"], ["59", "201"], ["58", "201"], ["57", "201"], ["55", "201"], ["55", "201"], ["65", "201"], ["65", "201"], ["73", "201"], ["73", "201"], ["137", "201"], ["135", "201"], ["133", "201"], ["133", "201"], ["140", "201"], ["143", "201"], ["143", "201"], ["143", "201"], ["146", "201"], ["78", "201"], ["135", "201"], ["37", "10"], ["37", "39"], ["57", "55"], ["37", "65"], ["135", "133"], ["135", "133"], ["39", "42"], ["37", "42"], ["44", "42"], ["47", "42"], ["42", "53"], ["37", "53"], ["37", "70"], ["37", "140"], ["37", "44"], ["37", "52"], ["58", "57"], ["58", "57"], ["70", "73"], ["78", "73"], ["37", "73"], ["55", "73"], ["88", "73"], ["73", "78"], ["37", "78"], ["37", "135"], ["137", "135"], ["140", "143"], ["146", "143"], ["37", "143"], ["133", "143"], ["143", "146"], ["37", "146"], ["151", "149"], ["162", "160"], ["162", "160"], ["44", "47"], ["37", "47"], ["59", "58"], ["59", "58"], ["37", "58"], ["37", "83"], ["62", "137"], ["37", "137"], ["37", "185"], ["37", "59"], ["61", "59"], ["61", "59"], ["83", "86"], ["93", "86"], ["37", "86"], ["88", "86"], ["88", "86"], ["37", "93"], ["86", "93"], ["152", "151"], ["152", "151"], ["149", "162"], ["171", "170"], ["171", "170"], ["37", "170"], ["182", "180"], ["62", "61"], ["37", "61"], ["55", "88"], ["73", "88"], ["37", "88"], ["153", "152"], ["153", "152"], ["37", "152"], ["172", "171"], ["172", "171"], ["37", "171"], ["194", "187"], ["37", "187"], ["53", "62"], ["37", "62"], ["55", "97"], ["113", "97"], ["122", "97"], ["55", "108"], ["97", "108"], ["55", "113"], ["97", "113"], ["108", "122"], ["37", "122"], ["131", "129"], ["59", "153"], ["37", "153"], ["155", "153"], ["155", "153"], ["37", "172"], ["160", "172"], ["65", "182"], ["180", "182"], ["129", "182"], ["37", "182"], ["187", "194"], ["37", "194"], ["156", "155"], ["37", "155"], ["160", "174"], ["37", "174"], ["86", "103"], ["37", "103"], ["65", "131"], ["129", "131"], ["37", "131"], ["137", "156"], ["37", "156"], ["37", "119"], ["86", "119"], ["37", "125"], ["86", "125"], ["73", "73"], ["73", "77"], ["73", "75"], ["73", "91"], ["73", "88"], ["73", "86"], ["73", "89"], ["73", "83"], ["73", "78"], ["143", "13"], ["143", "146"], ["143", "163"], ["143", "149"], ["143", "185"], ["143", "151"], ["143", "162"], ["143", "153"], ["143", "170"], ["143", "152"], ["143", "174"], ["143", "155"], ["143", "171"], ["143", "160"], ["143", "166"], ["143", "143"], ["143", "156"], ["143", "172"], ["86", "98"], ["86", "103"], ["86", "97"], ["86", "91"], ["86", "93"], ["86", "101"], ["86", "88"], ["86", "86"], ["86", "89"], ["170", "182"], ["170", "180"], ["185", "188"], ["185", "197"], ["185", "195"], ["185", "187"], ["185", "190"], ["185", "194"], ["97", "113"], ["97", "114"], ["97", "131"], ["97", "119"], ["97", "129"], ["97", "108"], ["97", "122"], ["97", "123"], ["97", "110"], ["97", "117"], ["97", "125"]], "features": {"37": "<(METHOD,main)<SUB>1</SUB>>", "38": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "39": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "41": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "44": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "46": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "48": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "50": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "52": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "54": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] a = toArray())<SUB>4</SUB>>", "57": "<(toArray,toArray())<SUB>4</SUB>>", "59": "<(stream,stream(br.readLine().split(&quot; &quot;)))<SUB>4</SUB>>", "61": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "63": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "6": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(1),mapToInt(&lt;lambda&gt;))>", "65": "<(&lt;operator&gt;.assignment,boolean evenInv = true)<SUB>5</SUB>>", "67": "<(LITERAL,true,boolean evenInv = true)<SUB>5</SUB>>", "69": "<(LOCAL,int i: int)<SUB>6</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; a.length)<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,a.length)<SUB>6</SUB>>", "77": "<(FIELD_IDENTIFIER,length,length)<SUB>6</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; a.length - 1); j++),for (int j = 0; Some(j &lt; a.length - 1); j++))<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "87": "<(IDENTIFIER,j,j &lt; a.length - 1)<SUB>7</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,a.length)<SUB>7</SUB>>", "91": "<(FIELD_IDENTIFIER,length,length)<SUB>7</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "97": "<(&lt;operator&gt;.greaterThan,a[j] &gt; a[j + 1])<SUB>8</SUB>>", "99": "<(IDENTIFIER,a,a[j] &gt; a[j + 1])<SUB>8</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,a[j + 1])<SUB>8</SUB>>", "103": "<(&lt;operator&gt;.addition,j + 1)<SUB>8</SUB>>", "105": "<(LITERAL,1,j + 1)<SUB>8</SUB>>", "107": "<(LOCAL,int temp: int)<SUB>9</SUB>>", "109": "<(IDENTIFIER,temp,int temp = a[j])<SUB>9</SUB>>", "111": "<(IDENTIFIER,a,int temp = a[j])<SUB>9</SUB>>", "113": "<(&lt;operator&gt;.assignment,a[j] = a[j + 1])<SUB>10</SUB>>", "115": "<(IDENTIFIER,a,a[j] = a[j + 1])<SUB>10</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[j + 1])<SUB>10</SUB>>", "119": "<(&lt;operator&gt;.addition,j + 1)<SUB>10</SUB>>", "121": "<(LITERAL,1,j + 1)<SUB>10</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,a[j + 1])<SUB>11</SUB>>", "125": "<(&lt;operator&gt;.addition,j + 1)<SUB>11</SUB>>", "127": "<(LITERAL,1,j + 1)<SUB>11</SUB>>", "129": "<(&lt;operator&gt;.assignment,evenInv = !evenInv)<SUB>12</SUB>>", "131": "<(&lt;operator&gt;.logicalNot,!evenInv)<SUB>12</SUB>>", "21": "<(LOCAL,int q: int)<SUB>16</SUB>>", "134": "<(IDENTIFIER,q,int q = parseInt(br.readLine()))<SUB>16</SUB>>", "136": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>16</SUB>>", "138": "<(IDENTIFIER,br,readLine())<SUB>16</SUB>>", "17": "<(LOCAL,int i: int)<SUB>17</SUB>>", "141": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>17</SUB>>", "145": "<(IDENTIFIER,q,i &lt; q)<SUB>17</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "12": "<(LOCAL,int[] sw: int[])<SUB>18</SUB>>", "150": "<(IDENTIFIER,sw,int[] sw = toArray())<SUB>18</SUB>>", "152": "<(mapToInt,mapToInt(&lt;lambda&gt;))<SUB>18</SUB>>", "154": "<(IDENTIFIER,Arrays,stream(br.readLine().split(&quot; &quot;)))<SUB>18</SUB>>", "156": "<(readLine,readLine())<SUB>18</SUB>>", "158": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>18</SUB>>", "159": "<(LOCAL,int len: int)<SUB>19</SUB>>", "161": "<(IDENTIFIER,len,int len = sw[1] - sw[0])<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,sw[1])<SUB>19</SUB>>", "165": "<(LITERAL,1,sw[1] - sw[0])<SUB>19</SUB>>", "167": "<(IDENTIFIER,sw,sw[1] - sw[0])<SUB>19</SUB>>", "169": "<(CONTROL_STRUCTURE,if ((len) * (len + 1) % 4 != 0),if ((len) * (len + 1) % 4 != 0))<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.modulo,(len) * (len + 1) % 4)<SUB>20</SUB>>", "173": "<(IDENTIFIER,len,(len) * (len + 1))<SUB>20</SUB>>", "175": "<(IDENTIFIER,len,len + 1)<SUB>20</SUB>>", "177": "<(LITERAL,4,(len) * (len + 1) % 4)<SUB>20</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "181": "<(IDENTIFIER,evenInv,evenInv = !evenInv)<SUB>21</SUB>>", "183": "<(IDENTIFIER,evenInv,!evenInv)<SUB>21</SUB>>", "185": "<(IDENTIFIER,evenInv,if (evenInv))<SUB>23</SUB>>", "187": "<(println,System.out.println(&quot;even&quot;))<SUB>24</SUB>>", "189": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>24</SUB>>", "191": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>24</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>26</SUB>>", "197": "<(FIELD_IDENTIFIER,out,out)<SUB>26</SUB>>", "199": "<(MODIFIER,PUBLIC)>", "201": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}