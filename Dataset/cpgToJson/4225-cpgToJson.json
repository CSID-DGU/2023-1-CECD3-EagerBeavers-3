{"edges": [["19", "21"], ["19", "219"], ["19", "220"], ["19", "221"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "215"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "36"], ["32", "33"], ["32", "35"], ["33", "34"], ["36", "37"], ["36", "38"], ["36", "42"], ["36", "43"], ["36", "47"], ["36", "48"], ["36", "53"], ["36", "54"], ["36", "59"], ["36", "100"], ["36", "116"], ["36", "117"], ["36", "121"], ["36", "152"], ["36", "155"], ["36", "156"], ["36", "162"], ["36", "163"], ["36", "168"], ["36", "205"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "89"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "140"], ["136", "151"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["140", "150"], ["142", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["158", "161"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "176"], ["168", "178"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["179", "180"], ["179", "181"], ["179", "184"], ["179", "187"], ["179", "189"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["209", "212"], ["209", "213"], ["209", "214"], ["215", "216"], ["216", "217"], ["216", "218"], ["22", "25"], ["25", "29"], ["27", "33"], ["215", "221"], ["24", "22"], ["29", "27"], ["32", "40"], ["32", "218"], ["216", "215"], ["33", "32"], ["38", "45"], ["43", "50"], ["48", "56"], ["54", "61"], ["117", "123"], ["152", "158"], ["156", "165"], ["163", "170"], ["205", "33"], ["218", "216"], ["40", "38"], ["45", "43"], ["50", "48"], ["56", "54"], ["61", "64"], ["64", "72"], ["64", "102"], ["67", "64"], ["102", "105"], ["105", "113"], ["105", "119"], ["108", "105"], ["119", "117"], ["123", "126"], ["126", "133"], ["126", "152"], ["129", "126"], ["158", "156"], ["165", "163"], ["170", "173"], ["173", "181"], ["173", "208"], ["176", "173"], ["206", "209"], ["209", "205"], ["111", "108"], ["132", "129"], ["208", "206"], ["72", "75"], ["75", "83"], ["75", "67"], ["78", "75"], ["113", "111"], ["133", "139"], ["181", "184"], ["184", "192"], ["184", "176"], ["187", "184"], ["81", "91"], ["89", "78"], ["137", "144"], ["140", "132"], ["190", "187"], ["82", "87"], ["87", "81"], ["90", "96"], ["95", "89"], ["139", "137"], ["142", "140"], ["191", "197"], ["196", "190"], ["83", "82"], ["91", "90"], ["96", "95"], ["143", "142"], ["192", "191"], ["197", "201"], ["200", "196"], ["144", "147"], ["147", "143"], ["201", "204"], ["204", "200"], ["19", "24"], ["20", "221"], ["22", "221"], ["25", "221"], ["29", "221"], ["27", "221"], ["27", "221"], ["33", "221"], ["32", "221"], ["32", "221"], ["215", "221"], ["215", "221"], ["38", "221"], ["45", "221"], ["43", "221"], ["43", "221"], ["48", "221"], ["48", "221"], ["48", "221"], ["54", "221"], ["54", "221"], ["54", "221"], ["64", "221"], ["117", "221"], ["117", "221"], ["126", "221"], ["152", "221"], ["152", "221"], ["152", "221"], ["158", "221"], ["156", "221"], ["156", "221"], ["163", "221"], ["163", "221"], ["170", "221"], ["173", "221"], ["173", "221"], ["205", "221"], ["209", "221"], ["209", "221"], ["209", "221"], ["205", "221"], ["205", "221"], ["181", "221"], ["184", "221"], ["184", "221"], ["176", "221"], ["190", "221"], ["190", "221"], ["190", "221"], ["187", "221"], ["132", "221"], ["137", "221"], ["140", "221"], ["142", "221"], ["140", "221"], ["140", "221"], ["132", "221"], ["129", "221"], ["111", "221"], ["111", "221"], ["108", "221"], ["72", "221"], ["75", "221"], ["75", "221"], ["67", "221"], ["87", "221"], ["81", "221"], ["81", "221"], ["89", "221"], ["89", "221"], ["89", "221"], ["78", "221"], ["158", "221"], ["209", "221"], ["19", "20"], ["19", "22"], ["29", "27"], ["22", "25"], ["19", "25"], ["29", "215"], ["45", "215"], ["87", "215"], ["25", "29"], ["19", "29"], ["33", "32"], ["19", "32"], ["40", "38"], ["45", "43"], ["50", "48"], ["50", "48"], ["56", "54"], ["56", "54"], ["119", "117"], ["158", "156"], ["158", "156"], ["158", "156"], ["165", "163"], ["165", "163"], ["27", "33"], ["19", "33"], ["19", "61"], ["19", "102"], ["19", "123"], ["111", "152"], ["19", "152"], ["117", "152"], ["132", "152"], ["19", "170"], ["209", "205"], ["209", "205"], ["209", "205"], ["209", "205"], ["209", "205"], ["29", "40"], ["45", "40"], ["87", "40"], ["19", "40"], ["40", "45"], ["19", "45"], ["38", "50"], ["19", "50"], ["43", "50"], ["50", "56"], ["19", "56"], ["50", "56"], ["61", "64"], ["67", "64"], ["19", "64"], ["56", "64"], ["64", "67"], ["19", "67"], ["102", "105"], ["108", "105"], ["19", "105"], ["56", "105"], ["75", "105"], ["105", "108"], ["19", "108"], ["105", "119"], ["19", "119"], ["123", "126"], ["129", "126"], ["19", "126"], ["119", "126"], ["140", "129"], ["19", "129"], ["137", "132"], ["140", "132"], ["19", "132"], ["19", "158"], ["64", "158"], ["147", "158"], ["126", "158"], ["158", "165"], ["19", "165"], ["156", "165"], ["170", "173"], ["176", "173"], ["19", "173"], ["165", "173"], ["173", "176"], ["19", "176"], ["19", "209"], ["163", "209"], ["165", "209"], ["184", "209"], ["173", "209"], ["19", "72"], ["152", "111"], ["19", "111"], ["54", "111"], ["142", "111"], ["19", "181"], ["72", "75"], ["78", "75"], ["19", "75"], ["56", "75"], ["75", "78"], ["19", "78"], ["87", "81"], ["81", "89"], ["19", "137"], ["19", "151"], ["181", "184"], ["187", "184"], ["19", "184"], ["165", "184"], ["184", "187"], ["19", "187"], ["137", "140"], ["19", "140"], ["142", "140"], ["126", "140"], ["45", "87"], ["19", "87"], ["64", "147"], ["19", "147"], ["32", "64"], ["32", "163"], ["32", "102"], ["32", "38"], ["32", "209"], ["32", "56"], ["32", "119"], ["32", "40"], ["32", "170"], ["32", "50"], ["32", "206"], ["32", "208"], ["32", "54"], ["32", "173"], ["32", "43"], ["32", "33"], ["32", "61"], ["32", "152"], ["32", "205"], ["32", "158"], ["32", "48"], ["32", "32"], ["32", "45"], ["32", "123"], ["32", "126"], ["32", "105"], ["32", "165"], ["32", "117"], ["32", "156"], ["64", "64"], ["64", "75"], ["64", "67"], ["64", "72"], ["105", "113"], ["105", "108"], ["105", "111"], ["105", "105"], ["126", "132"], ["126", "144"], ["126", "129"], ["126", "137"], ["126", "139"], ["126", "142"], ["126", "140"], ["126", "143"], ["126", "126"], ["126", "147"], ["126", "133"], ["173", "181"], ["173", "184"], ["173", "173"], ["173", "176"], ["75", "96"], ["75", "75"], ["75", "81"], ["75", "95"], ["75", "87"], ["75", "91"], ["75", "90"], ["75", "89"], ["75", "82"], ["75", "83"], ["75", "78"], ["184", "192"], ["184", "196"], ["184", "197"], ["184", "204"], ["184", "191"], ["184", "187"], ["184", "190"], ["184", "184"], ["184", "201"], ["184", "200"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastIO())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastIO())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new FastIO())<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,int t = ni())<SUB>4</SUB>>", "29": "<(ni,ni())<SUB>4</SUB>>", "31": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>6</SUB>>", "33": "<(&lt;operator&gt;.postDecrement,t--)<SUB>6</SUB>>", "35": "<(LITERAL,0,t-- &gt; 0)<SUB>6</SUB>>", "37": "<(LOCAL,int n: int)<SUB>7</SUB>>", "39": "<(IDENTIFIER,n,int n = ni())<SUB>7</SUB>>", "41": "<(IDENTIFIER,in,ni())<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,int m = ni())<SUB>8</SUB>>", "45": "<(ni,ni())<SUB>8</SUB>>", "47": "<(LOCAL,int[][] a: int[][])<SUB>9</SUB>>", "49": "<(IDENTIFIER,a,int[][] a = new int[n][m])<SUB>9</SUB>>", "51": "<(IDENTIFIER,n,new int[n][m])<SUB>9</SUB>>", "53": "<(LOCAL,int[][] b: int[][])<SUB>10</SUB>>", "55": "<(IDENTIFIER,b,int[][] b = new int[m][n])<SUB>10</SUB>>", "57": "<(IDENTIFIER,m,new int[m][n])<SUB>10</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "71": "<(LOCAL,int j: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>12</SUB>>", "77": "<(IDENTIFIER,m,j &lt; m)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,a[i][j] = ni())<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,a[i][j] = ni())<SUB>13</SUB>>", "87": "<(ni,ni())<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,b[j][i] = a[i][j])<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,b[j])<SUB>14</SUB>>", "93": "<(IDENTIFIER,j,b[j][i] = a[i][j])<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>14</SUB>>", "97": "<(IDENTIFIER,a,b[j][i] = a[i][j])<SUB>14</SUB>>", "99": "<(IDENTIFIER,j,b[j][i] = a[i][j])<SUB>14</SUB>>", "101": "<(LOCAL,int i: int)<SUB>17</SUB>>", "103": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>17</SUB>>", "107": "<(IDENTIFIER,m,i &lt; m)<SUB>17</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "111": "<(sort,sort(b[i]))<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>18</SUB>>", "115": "<(IDENTIFIER,i,sort(b[i]))<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.assignment,ANY d = new Data[m])<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.alloc,new Data[m])>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "127": "<(IDENTIFIER,i,i &lt; m)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>22</SUB>>", "135": "<(IDENTIFIER,i,d[i] = new Data(-b[i][n - 1], i))<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "139": "<(&lt;operator&gt;.alloc,new Data(-b[i][n - 1], i))<SUB>22</SUB>>", "141": "<(IDENTIFIER,$obj1,new Data(-b[i][n - 1], i))>", "143": "<(&lt;operator&gt;.indexAccess,b[i][n - 1])<SUB>22</SUB>>", "145": "<(IDENTIFIER,b,-b[i][n - 1])<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>22</SUB>>", "149": "<(LITERAL,1,n - 1)<SUB>22</SUB>>", "151": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "153": "<(IDENTIFIER,Arrays,sort(d))<SUB>24</SUB>>", "155": "<(LOCAL,int col: int)<SUB>26</SUB>>", "157": "<(IDENTIFIER,col,int col = Math.min(n, m))<SUB>26</SUB>>", "159": "<(IDENTIFIER,Math,Math.min(n, m))<SUB>26</SUB>>", "161": "<(IDENTIFIER,m,Math.min(n, m))<SUB>26</SUB>>", "163": "<(&lt;operator&gt;.assignment,int[][] c = new int[n][col])<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.alloc,new int[n][col])>", "167": "<(IDENTIFIER,col,new int[n][col])<SUB>27</SUB>>", "169": "<(LOCAL,int i: int)<SUB>28</SUB>>", "171": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.lessThan,i &lt; col)<SUB>28</SUB>>", "175": "<(IDENTIFIER,col,i &lt; col)<SUB>28</SUB>>", "177": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "179": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>29</SUB>>", "181": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>29</SUB>>", "183": "<(LITERAL,0,int j = 0)<SUB>29</SUB>>", "185": "<(IDENTIFIER,j,j &lt; n)<SUB>29</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,j++)<SUB>29</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,c[j][i])<SUB>30</SUB>>", "193": "<(IDENTIFIER,c,c[j][i] = a[j][d[i].b])<SUB>30</SUB>>", "195": "<(IDENTIFIER,i,c[j][i] = a[j][d[i].b])<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>30</SUB>>", "199": "<(IDENTIFIER,j,c[j][i] = a[j][d[i].b])<SUB>30</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>30</SUB>>", "203": "<(IDENTIFIER,i,c[j][i] = a[j][d[i].b])<SUB>30</SUB>>", "205": "<(println,println(ans(c, n, col, 0)))<SUB>39</SUB>>", "207": "<(IDENTIFIER,System,println(ans(c, n, col, 0)))<SUB>39</SUB>>", "209": "<(ans,ans(c, n, col, 0))<SUB>39</SUB>>", "211": "<(IDENTIFIER,c,ans(c, n, col, 0))<SUB>39</SUB>>", "213": "<(IDENTIFIER,col,ans(c, n, col, 0))<SUB>39</SUB>>", "215": "<(flush,flush())<SUB>41</SUB>>", "217": "<(IDENTIFIER,in,flush())<SUB>41</SUB>>", "219": "<(MODIFIER,PUBLIC)>", "221": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}