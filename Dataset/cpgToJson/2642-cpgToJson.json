{"edges": [["27", "28"], ["27", "29"], ["27", "188"], ["27", "189"], ["27", "190"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "6"], ["29", "44"], ["29", "47"], ["29", "58"], ["29", "59"], ["29", "8"], ["29", "65"], ["29", "68"], ["29", "71"], ["29", "72"], ["29", "76"], ["29", "94"], ["29", "95"], ["29", "10"], ["29", "98"], ["29", "101"], ["29", "102"], ["29", "124"], ["29", "180"], ["29", "183"], ["29", "185"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "5"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["68", "7"], ["68", "69"], ["69", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "9"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "112"], ["102", "114"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "121"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "12"], ["128", "134"], ["128", "137"], ["128", "138"], ["128", "139"], ["128", "143"], ["128", "161"], ["128", "162"], ["128", "166"], ["128", "178"], ["130", "131"], ["130", "132"], ["132", "133"], ["134", "135"], ["134", "136"], ["137", "11"], ["139", "140"], ["139", "141"], ["141", "142"], ["143", "144"], ["143", "146"], ["144", "145"], ["146", "147"], ["146", "148"], ["146", "152"], ["148", "149"], ["148", "150"], ["150", "151"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["166", "167"], ["166", "169"], ["167", "168"], ["169", "170"], ["169", "171"], ["169", "175"], ["171", "172"], ["171", "173"], ["173", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["185", "187"], ["30", "37"], ["33", "46"], ["44", "51"], ["47", "63"], ["59", "67"], ["65", "69"], ["68", "74"], ["72", "78"], ["95", "100"], ["98", "101"], ["101", "104"], ["180", "183"], ["183", "185"], ["185", "190"], ["32", "30"], ["46", "44"], ["61", "59"], ["67", "65"], ["69", "68"], ["74", "72"], ["78", "81"], ["81", "87"], ["81", "95"], ["84", "81"], ["86", "84"], ["100", "98"], ["104", "111"], ["107", "118"], ["107", "126"], ["112", "111"], ["125", "132"], ["125", "180"], ["35", "42"], ["38", "33"], ["49", "56"], ["52", "47"], ["63", "61"], ["87", "92"], ["90", "86"], ["109", "107"], ["116", "121"], ["121", "112"], ["126", "125"], ["130", "136"], ["134", "137"], ["137", "141"], ["139", "144"], ["162", "167"], ["178", "126"], ["37", "35"], ["40", "38"], ["51", "49"], ["54", "52"], ["92", "90"], ["111", "109"], ["118", "116"], ["132", "130"], ["136", "134"], ["141", "139"], ["144", "150"], ["144", "164"], ["164", "162"], ["167", "173"], ["167", "178"], ["42", "40"], ["56", "54"], ["148", "154"], ["171", "175"], ["175", "167"], ["150", "148"], ["153", "144"], ["153", "158"], ["158", "144"], ["173", "171"], ["154", "153"], ["27", "32"], ["28", "190"], ["30", "190"], ["38", "190"], ["38", "190"], ["33", "190"], ["44", "190"], ["49", "190"], ["52", "190"], ["52", "190"], ["47", "190"], ["61", "190"], ["59", "190"], ["59", "190"], ["65", "190"], ["68", "190"], ["69", "190"], ["68", "190"], ["68", "190"], ["72", "190"], ["72", "190"], ["72", "190"], ["78", "190"], ["81", "190"], ["81", "190"], ["81", "190"], ["95", "190"], ["98", "190"], ["101", "190"], ["104", "190"], ["107", "190"], ["107", "190"], ["107", "190"], ["126", "190"], ["125", "190"], ["125", "190"], ["180", "190"], ["180", "190"], ["183", "190"], ["183", "190"], ["185", "190"], ["185", "190"], ["130", "190"], ["130", "190"], ["130", "190"], ["134", "190"], ["137", "190"], ["144", "190"], ["164", "190"], ["162", "190"], ["167", "190"], ["167", "190"], ["178", "190"], ["175", "190"], ["175", "190"], ["154", "190"], ["154", "190"], ["153", "190"], ["153", "190"], ["158", "190"], ["158", "190"], ["116", "190"], ["121", "190"], ["121", "190"], ["112", "190"], ["86", "190"], ["90", "190"], ["92", "190"], ["90", "190"], ["86", "190"], ["86", "190"], ["84", "190"], ["27", "28"], ["27", "30"], ["27", "44"], ["61", "59"], ["61", "59"], ["27", "65"], ["74", "72"], ["27", "95"], ["27", "98"], ["30", "33"], ["27", "33"], ["35", "33"], ["38", "33"], ["44", "47"], ["27", "47"], ["49", "47"], ["52", "47"], ["65", "68"], ["27", "68"], ["69", "68"], ["27", "78"], ["90", "86"], ["90", "86"], ["98", "101"], ["27", "101"], ["27", "104"], ["47", "180"], ["27", "180"], ["95", "180"], ["178", "180"], ["180", "183"], ["27", "183"], ["38", "185"], ["52", "185"], ["27", "185"], ["27", "35"], ["27", "43"], ["27", "49"], ["27", "57"], ["27", "61"], ["63", "61"], ["63", "69"], ["27", "69"], ["59", "74"], ["27", "74"], ["78", "81"], ["84", "81"], ["27", "81"], ["74", "81"], ["81", "84"], ["27", "84"], ["104", "107"], ["112", "107"], ["27", "107"], ["72", "107"], ["107", "112"], ["27", "112"], ["49", "116"], ["72", "116"], ["126", "125"], ["132", "130"], ["27", "134"], ["141", "139"], ["164", "162"], ["35", "38"], ["27", "38"], ["49", "52"], ["27", "52"], ["33", "63"], ["27", "63"], ["61", "90"], ["27", "90"], ["92", "90"], ["101", "121"], ["27", "121"], ["116", "121"], ["101", "126"], ["141", "126"], ["175", "126"], ["121", "126"], ["27", "126"], ["134", "137"], ["27", "137"], ["95", "178"], ["27", "178"], ["68", "92"], ["27", "92"], ["126", "132"], ["27", "132"], ["132", "141"], ["27", "141"], ["139", "144"], ["150", "144"], ["27", "144"], ["150", "148"], ["137", "164"], ["158", "164"], ["27", "164"], ["162", "167"], ["173", "167"], ["27", "167"], ["173", "171"], ["141", "175"], ["27", "175"], ["171", "175"], ["144", "150"], ["27", "150"], ["154", "153"], ["154", "153"], ["27", "153"], ["137", "158"], ["27", "158"], ["154", "158"], ["167", "173"], ["27", "173"], ["148", "154"], ["27", "154"], ["130", "154"], ["81", "81"], ["81", "84"], ["81", "92"], ["81", "87"], ["81", "90"], ["81", "86"], ["107", "107"], ["107", "116"], ["107", "121"], ["107", "112"], ["107", "118"], ["107", "111"], ["107", "109"], ["125", "141"], ["125", "167"], ["125", "136"], ["125", "178"], ["125", "132"], ["125", "162"], ["125", "144"], ["125", "134"], ["125", "126"], ["125", "137"], ["125", "130"], ["125", "164"], ["125", "139"], ["125", "125"], ["144", "154"], ["144", "150"], ["144", "153"], ["144", "144"], ["144", "148"], ["167", "167"], ["167", "173"], ["167", "175"], ["167", "171"], ["153", "158"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "41": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "44": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "53": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "55": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.assignment,int n = parseInt(bf.readLine()))<SUB>4</SUB>>", "61": "<(parseInt,parseInt(bf.readLine()))<SUB>4</SUB>>", "63": "<(readLine,readLine())<SUB>4</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>5</SUB>>", "66": "<(IDENTIFIER,st,ANY st = new StringTokenizer(bf.readLine()))<SUB>5</SUB>>", "68": "<(&lt;init&gt;,new StringTokenizer(bf.readLine()))<SUB>5</SUB>>", "69": "<(readLine,readLine())<SUB>5</SUB>>", "71": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "73": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>6</SUB>>", "75": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "77": "<(LOCAL,int i: int)<SUB>6</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "83": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "89": "<(IDENTIFIER,i,a[i] = parseInt(st.nextToken()))<SUB>6</SUB>>", "91": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "93": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "95": "<(&lt;operator&gt;.assignment,int counter = 0)<SUB>8</SUB>>", "97": "<(LITERAL,0,int counter = 0)<SUB>8</SUB>>", "98": "<(&lt;operator&gt;.assignment,ANY val = new TreeSet&lt;Integer&gt;())<SUB>9</SUB>>", "100": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>9</SUB>>", "9": "<(IDENTIFIER,val,new TreeSet&lt;Integer&gt;())<SUB>9</SUB>>", "103": "<(LOCAL,$idx0: int)<SUB>10</SUB>>", "105": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "107": "<(&lt;operator&gt;.lessThan,$idx0 &lt; a.length)<SUB>10</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,a.length)<SUB>10</SUB>>", "111": "<(FIELD_IDENTIFIER,length,length)<SUB>10</SUB>>", "113": "<(IDENTIFIER,$idx0,$idx0++)>", "115": "<(LOCAL,i: int)<SUB>10</SUB>>", "117": "<(IDENTIFIER,i,&lt;empty&gt;)>", "119": "<(IDENTIFIER,a,&lt;empty&gt;)>", "121": "<(add,add(i))<SUB>10</SUB>>", "123": "<(IDENTIFIER,i,add(i))<SUB>10</SUB>>", "125": "<(&lt;operator&gt;.logicalNot,!val.isEmpty())<SUB>11</SUB>>", "127": "<(IDENTIFIER,val,isEmpty())<SUB>11</SUB>>", "129": "<(LOCAL,int min: int)<SUB>12</SUB>>", "131": "<(IDENTIFIER,min,int min = first())<SUB>12</SUB>>", "133": "<(IDENTIFIER,val,first())<SUB>12</SUB>>", "134": "<(&lt;operator&gt;.assignment,ANY toRemove = new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "136": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "11": "<(IDENTIFIER,toRemove,new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "139": "<(&lt;operator&gt;.assignment,)<SUB>14</SUB>>", "141": "<(iterator,&lt;empty&gt;)<SUB>14</SUB>>", "143": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>14</SUB>>", "145": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "147": "<(LOCAL,i: int)<SUB>14</SUB>>", "149": "<(IDENTIFIER,i,&lt;empty&gt;)>", "151": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "153": "<(&lt;operator&gt;.equals,i % min == 0)<SUB>14</SUB>>", "155": "<(IDENTIFIER,i,i % min)<SUB>14</SUB>>", "157": "<(LITERAL,0,i % min == 0)<SUB>14</SUB>>", "159": "<(IDENTIFIER,toRemove,add(i))<SUB>14</SUB>>", "161": "<(LOCAL,$iterLocal1: java.util.Iterator)<SUB>15</SUB>>", "163": "<(IDENTIFIER,$iterLocal1,)<SUB>15</SUB>>", "165": "<(IDENTIFIER,toRemove,&lt;empty&gt;)<SUB>15</SUB>>", "167": "<(hasNext,&lt;empty&gt;)<SUB>15</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "171": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>15</SUB>>", "173": "<(next,&lt;empty&gt;)<SUB>15</SUB>>", "175": "<(remove,remove(i))<SUB>15</SUB>>", "177": "<(IDENTIFIER,i,remove(i))<SUB>15</SUB>>", "179": "<(IDENTIFIER,counter,counter++)<SUB>16</SUB>>", "181": "<(IDENTIFIER,out,println(counter))<SUB>18</SUB>>", "183": "<(close,close())<SUB>21</SUB>>", "185": "<(exit,System.exit(0))<SUB>21</SUB>>", "187": "<(LITERAL,0,System.exit(0))<SUB>21</SUB>>", "189": "<(MODIFIER,STATIC)>"}}