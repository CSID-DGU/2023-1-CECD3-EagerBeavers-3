{"edges": [["21", "22"], ["21", "23"], ["21", "162"], ["21", "163"], ["21", "164"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "58"], ["23", "61"], ["23", "62"], ["23", "66"], ["23", "6"], ["23", "127"], ["23", "130"], ["23", "131"], ["23", "156"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "74"], ["66", "100"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "93"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "5"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["58", "64"], ["62", "70"], ["127", "130"], ["130", "133"], ["156", "164"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "58"], ["49", "46"], ["64", "62"], ["67", "77"], ["67", "103"], ["129", "127"], ["133", "136"], ["136", "144"], ["136", "159"], ["139", "136"], ["157", "160"], ["160", "156"], ["30", "28"], ["52", "49"], ["68", "67"], ["93", "129"], ["142", "150"], ["159", "157"], ["53", "56"], ["56", "52"], ["70", "68"], ["77", "80"], ["80", "87"], ["80", "96"], ["83", "80"], ["94", "93"], ["102", "109"], ["144", "142"], ["148", "153"], ["148", "139"], ["153", "139"], ["86", "83"], ["96", "94"], ["103", "102"], ["109", "112"], ["112", "119"], ["112", "129"], ["115", "112"], ["150", "148"], ["87", "90"], ["90", "86"], ["118", "115"], ["119", "124"], ["122", "118"], ["124", "122"], ["21", "26"], ["22", "164"], ["24", "164"], ["27", "164"], ["27", "164"], ["34", "164"], ["32", "164"], ["32", "164"], ["37", "164"], ["58", "164"], ["58", "164"], ["62", "164"], ["62", "164"], ["62", "164"], ["67", "164"], ["67", "164"], ["102", "164"], ["102", "164"], ["109", "164"], ["118", "164"], ["118", "164"], ["118", "164"], ["115", "164"], ["93", "164"], ["93", "164"], ["127", "164"], ["130", "164"], ["133", "164"], ["136", "164"], ["136", "164"], ["136", "164"], ["156", "164"], ["160", "164"], ["156", "164"], ["156", "164"], ["142", "164"], ["142", "164"], ["148", "164"], ["148", "164"], ["153", "164"], ["139", "164"], ["86", "164"], ["86", "164"], ["86", "164"], ["83", "164"], ["52", "164"], ["56", "164"], ["52", "164"], ["52", "164"], ["49", "164"], ["58", "164"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["64", "62"], ["21", "127"], ["24", "27"], ["21", "27"], ["21", "43"], ["21", "58"], ["37", "58"], ["52", "58"], ["127", "130"], ["21", "130"], ["21", "133"], ["160", "156"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["56", "52"], ["46", "64"], ["21", "64"], ["58", "67"], ["21", "67"], ["21", "93"], ["133", "136"], ["139", "136"], ["21", "136"], ["112", "136"], ["96", "136"], ["150", "136"], ["148", "139"], ["21", "139"], ["130", "160"], ["142", "160"], ["153", "160"], ["21", "160"], ["21", "77"], ["21", "102"], ["130", "142"], ["153", "142"], ["21", "142"], ["62", "142"], ["118", "142"], ["86", "142"], ["34", "56"], ["21", "56"], ["64", "70"], ["21", "70"], ["77", "80"], ["83", "80"], ["21", "80"], ["70", "80"], ["80", "83"], ["21", "83"], ["58", "86"], ["52", "86"], ["21", "109"], ["136", "148"], ["21", "148"], ["150", "148"], ["150", "148"], ["142", "153"], ["21", "153"], ["80", "96"], ["21", "96"], ["109", "112"], ["115", "112"], ["21", "112"], ["70", "112"], ["124", "115"], ["21", "115"], ["58", "118"], ["136", "150"], ["21", "150"], ["112", "124"], ["21", "124"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "56"], ["46", "53"], ["67", "94"], ["67", "96"], ["67", "77"], ["67", "102"], ["67", "103"], ["67", "112"], ["67", "93"], ["67", "80"], ["67", "109"], ["136", "136"], ["136", "142"], ["136", "150"], ["136", "144"], ["136", "148"], ["136", "139"], ["80", "87"], ["80", "90"], ["80", "80"], ["80", "83"], ["80", "86"], ["148", "153"], ["112", "115"], ["112", "122"], ["112", "119"], ["112", "112"], ["112", "118"], ["112", "124"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,s,nextInt())<SUB>6</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(arr))<SUB>8</SUB>>", "61": "<(LOCAL,int[] ans: int[])<SUB>9</SUB>>", "63": "<(IDENTIFIER,ans,int[] ans = new int[n])<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.equals,arr[n - 1] == 1)<SUB>11</SUB>>", "69": "<(IDENTIFIER,arr,arr[n - 1] == 1)<SUB>11</SUB>>", "71": "<(IDENTIFIER,n,n - 1)<SUB>11</SUB>>", "73": "<(LITERAL,1,arr[n - 1] == 1)<SUB>11</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>13</SUB>>", "89": "<(IDENTIFIER,i,ans[i] = arr[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,arr,ans[i] = arr[i])<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,ans[n - 1] = 2)<SUB>15</SUB>>", "95": "<(IDENTIFIER,ans,ans[n - 1] = 2)<SUB>15</SUB>>", "97": "<(IDENTIFIER,n,n - 1)<SUB>15</SUB>>", "99": "<(LITERAL,2,ans[n - 1] = 2)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,ans[0])<SUB>17</SUB>>", "105": "<(LITERAL,0,ans[0] = 1)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "111": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>19</SUB>>", "121": "<(IDENTIFIER,i,ans[i] = arr[i - 1])<SUB>19</SUB>>", "123": "<(IDENTIFIER,arr,ans[i] = arr[i - 1])<SUB>19</SUB>>", "125": "<(IDENTIFIER,i,i - 1)<SUB>19</SUB>>", "6": "<(LOCAL,StringBuffer buf: java.lang.StringBuffer)<SUB>22</SUB>>", "128": "<(IDENTIFIER,buf,StringBuffer buf = new StringBuffer())<SUB>22</SUB>>", "130": "<(&lt;init&gt;,new StringBuffer())<SUB>22</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "135": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "137": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "143": "<(IDENTIFIER,buf,buf.append(ans[i]))<SUB>24</SUB>>", "145": "<(IDENTIFIER,ans,buf.append(ans[i]))<SUB>24</SUB>>", "147": "<(CONTROL_STRUCTURE,if (i != n - 1),if (i != n - 1))<SUB>25</SUB>>", "149": "<(IDENTIFIER,i,i != n - 1)<SUB>25</SUB>>", "151": "<(IDENTIFIER,n,n - 1)<SUB>25</SUB>>", "153": "<(append,buf.append(' '))<SUB>25</SUB>>", "155": "<(LITERAL,' ',buf.append(' '))<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "161": "<(IDENTIFIER,buf,buf.toString())<SUB>27</SUB>>", "163": "<(MODIFIER,STATIC)>"}}