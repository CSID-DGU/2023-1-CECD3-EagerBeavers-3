{"edges": [["17", "19"], ["17", "87"], ["17", "88"], ["17", "89"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "71"], ["19", "85"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "48"], ["45", "52"], ["45", "57"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "64"], ["58", "59"], ["58", "63"], ["59", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "79"], ["73", "82"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["21", "28"], ["26", "33"], ["31", "37"], ["71", "85"], ["85", "89"], ["23", "21"], ["28", "26"], ["33", "31"], ["37", "40"], ["40", "50"], ["40", "75"], ["43", "40"], ["73", "71"], ["48", "54"], ["52", "60"], ["74", "79"], ["74", "82"], ["79", "73"], ["82", "73"], ["50", "48"], ["54", "52"], ["58", "65"], ["58", "43"], ["64", "43"], ["75", "74"], ["59", "58"], ["65", "68"], ["68", "64"], ["60", "59"], ["17", "23"], ["18", "89"], ["23", "89"], ["21", "89"], ["21", "89"], ["26", "89"], ["26", "89"], ["31", "89"], ["31", "89"], ["31", "89"], ["37", "89"], ["40", "89"], ["40", "89"], ["40", "89"], ["74", "89"], ["73", "89"], ["73", "89"], ["73", "89"], ["71", "89"], ["71", "89"], ["85", "89"], ["85", "89"], ["50", "89"], ["48", "89"], ["48", "89"], ["52", "89"], ["54", "89"], ["52", "89"], ["52", "89"], ["59", "89"], ["58", "89"], ["58", "89"], ["64", "89"], ["64", "89"], ["64", "89"], ["43", "89"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["17", "37"], ["17", "71"], ["31", "71"], ["71", "85"], ["17", "85"], ["17", "23"], ["17", "28"], ["17", "33"], ["37", "40"], ["43", "40"], ["17", "40"], ["21", "40"], ["40", "43"], ["17", "43"], ["50", "48"], ["54", "52"], ["54", "52"], ["31", "73"], ["40", "64"], ["17", "64"], ["26", "74"], ["17", "74"], ["23", "50"], ["17", "50"], ["48", "54"], ["17", "54"], ["59", "58"], ["17", "58"], ["26", "59"], ["40", "68"], ["17", "68"], ["40", "48"], ["40", "58"], ["40", "60"], ["40", "52"], ["40", "40"], ["40", "50"], ["40", "59"], ["40", "54"], ["40", "43"], ["74", "82"], ["74", "79"], ["58", "68"], ["58", "64"], ["58", "65"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] c: int[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,c,int[] c = new int[2])<SUB>3</SUB>>", "29": "<(LITERAL,2,new int[2])<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int[] f = new int[2])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[2])>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "41": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "47": "<(LOCAL,int p: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,x,int x = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,this,nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,p,int p = x % 2)<SUB>6</SUB>>", "55": "<(IDENTIFIER,x,x % 2)<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,if (c[p]++ == 0),if (c[p]++ == 0))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,c[p]++)<SUB>7</SUB>>", "61": "<(IDENTIFIER,c,c[p]++)<SUB>7</SUB>>", "63": "<(LITERAL,0,c[p]++ == 0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,f[p])<SUB>7</SUB>>", "67": "<(IDENTIFIER,p,f[p] = i + 1)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i + 1)<SUB>7</SUB>>", "71": "<(println,println(c[0] == 1 ? f[0] : f[1]))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.conditional,c[0] == 1 ? f[0] : f[1])<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>9</SUB>>", "77": "<(LITERAL,0,c[0] == 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,f[0])<SUB>9</SUB>>", "81": "<(LITERAL,0,c[0] == 1 ? f[0] : f[1])<SUB>9</SUB>>", "83": "<(IDENTIFIER,f,c[0] == 1 ? f[0] : f[1])<SUB>9</SUB>>", "85": "<(flush,flush())<SUB>11</SUB>>", "87": "<(MODIFIER,PUBLIC)>", "89": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}