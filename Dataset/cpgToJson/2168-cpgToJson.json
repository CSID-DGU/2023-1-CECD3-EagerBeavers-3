{"edges": [["21", "23"], ["21", "195"], ["21", "196"], ["21", "197"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "72"], ["23", "73"], ["23", "77"], ["23", "82"], ["23", "173"], ["23", "193"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "92"], ["82", "94"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "164"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "122"], ["109", "123"], ["109", "136"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["140", "147"], ["140", "161"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "167"], ["165", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["173", "178"], ["173", "183"], ["173", "185"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["193", "194"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "55"], ["73", "78"], ["77", "84"], ["193", "197"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["55", "62"], ["58", "67"], ["58", "75"], ["63", "62"], ["75", "73"], ["78", "77"], ["84", "91"], ["87", "96"], ["87", "175"], ["92", "91"], ["175", "182"], ["178", "189"], ["178", "193"], ["183", "182"], ["30", "28"], ["37", "35"], ["60", "58"], ["66", "63"], ["89", "87"], ["96", "101"], ["180", "178"], ["186", "183"], ["62", "60"], ["67", "70"], ["70", "66"], ["91", "89"], ["101", "104"], ["104", "116"], ["104", "165"], ["107", "104"], ["165", "169"], ["165", "92"], ["182", "180"], ["188", "186"], ["111", "127"], ["123", "137"], ["168", "92"], ["189", "188"], ["113", "111"], ["125", "123"], ["137", "144"], ["137", "107"], ["169", "168"], ["115", "113"], ["126", "132"], ["131", "125"], ["142", "148"], ["147", "161"], ["161", "107"], ["116", "119"], ["119", "115"], ["127", "126"], ["132", "131"], ["144", "142"], ["148", "153"], ["151", "147"], ["153", "157"], ["156", "151"], ["157", "156"], ["21", "26"], ["22", "197"], ["24", "197"], ["27", "197"], ["27", "197"], ["31", "197"], ["34", "197"], ["34", "197"], ["39", "197"], ["46", "197"], ["44", "197"], ["44", "197"], ["49", "197"], ["49", "197"], ["49", "197"], ["73", "197"], ["75", "197"], ["73", "197"], ["73", "197"], ["77", "197"], ["77", "197"], ["77", "197"], ["84", "197"], ["87", "197"], ["87", "197"], ["175", "197"], ["178", "197"], ["178", "197"], ["178", "197"], ["193", "197"], ["193", "197"], ["188", "197"], ["186", "197"], ["186", "197"], ["183", "197"], ["96", "197"], ["101", "197"], ["104", "197"], ["104", "197"], ["165", "197"], ["165", "197"], ["168", "197"], ["168", "197"], ["168", "197"], ["92", "197"], ["113", "197"], ["115", "197"], ["115", "197"], ["113", "197"], ["111", "197"], ["111", "197"], ["126", "197"], ["126", "197"], ["125", "197"], ["131", "197"], ["131", "197"], ["125", "197"], ["123", "197"], ["123", "197"], ["137", "197"], ["137", "197"], ["144", "197"], ["142", "197"], ["142", "197"], ["147", "197"], ["151", "197"], ["156", "197"], ["156", "197"], ["151", "197"], ["147", "197"], ["147", "197"], ["161", "197"], ["107", "197"], ["66", "197"], ["70", "197"], ["66", "197"], ["66", "197"], ["63", "197"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["75", "73"], ["44", "77"], ["21", "77"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["21", "84"], ["21", "175"], ["34", "193"], ["186", "193"], ["21", "193"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["55", "58"], ["63", "58"], ["21", "58"], ["49", "58"], ["58", "63"], ["21", "63"], ["70", "66"], ["51", "75"], ["21", "75"], ["84", "87"], ["92", "87"], ["21", "87"], ["49", "87"], ["58", "87"], ["104", "92"], ["21", "92"], ["21", "96"], ["175", "178"], ["183", "178"], ["21", "178"], ["73", "178"], ["178", "183"], ["21", "183"], ["21", "101"], ["34", "186"], ["21", "186"], ["73", "186"], ["168", "186"], ["147", "186"], ["46", "70"], ["21", "70"], ["101", "104"], ["107", "104"], ["21", "104"], ["87", "104"], ["104", "107"], ["21", "107"], ["113", "111"], ["113", "111"], ["125", "123"], ["125", "123"], ["96", "165"], ["161", "165"], ["21", "165"], ["126", "168"], ["21", "168"], ["44", "168"], ["73", "188"], ["168", "188"], ["147", "188"], ["21", "188"], ["151", "113"], ["21", "113"], ["115", "113"], ["115", "113"], ["126", "125"], ["126", "125"], ["131", "125"], ["131", "125"], ["123", "137"], ["21", "137"], ["144", "142"], ["144", "142"], ["151", "147"], ["151", "147"], ["151", "147"], ["21", "161"], ["49", "115"], ["66", "115"], ["127", "126"], ["127", "126"], ["21", "126"], ["132", "131"], ["132", "131"], ["21", "131"], ["21", "127"], ["126", "127"], ["44", "127"], ["21", "132"], ["111", "132"], ["113", "144"], ["21", "144"], ["137", "144"], ["144", "151"], ["21", "151"], ["73", "151"], ["168", "151"], ["147", "151"], ["142", "151"], ["73", "156"], ["142", "156"], ["21", "156"], ["58", "60"], ["58", "67"], ["58", "58"], ["58", "70"], ["58", "66"], ["58", "63"], ["58", "62"], ["87", "96"], ["87", "104"], ["87", "92"], ["87", "87"], ["87", "91"], ["87", "101"], ["87", "89"], ["87", "165"], ["178", "188"], ["178", "178"], ["178", "189"], ["178", "182"], ["178", "186"], ["178", "180"], ["178", "183"], ["104", "107"], ["104", "115"], ["104", "113"], ["104", "131"], ["104", "132"], ["104", "104"], ["104", "119"], ["104", "137"], ["104", "127"], ["104", "111"], ["104", "116"], ["104", "123"], ["104", "126"], ["104", "125"], ["165", "169"], ["165", "168"], ["137", "161"], ["137", "151"], ["137", "153"], ["137", "144"], ["137", "148"], ["137", "142"], ["137", "157"], ["137", "147"], ["137", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int r: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,r,int r = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; x.length); i++),for (int i = 0; Some(i &lt; x.length); i++))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i &lt; x.length)<SUB>8</SUB>>", "61": "<(IDENTIFIER,x,i &lt; x.length)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,x[i] = nextInt())<SUB>9</SUB>>", "71": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,double[] res = new double[n])<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.alloc,new double[n])>", "77": "<(&lt;operator&gt;.assignment,res[0] = r)<SUB>12</SUB>>", "79": "<(IDENTIFIER,res,res[0] = r)<SUB>12</SUB>>", "81": "<(IDENTIFIER,r,res[0] = r)<SUB>12</SUB>>", "83": "<(LOCAL,int i: int)<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,int i = 1)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; x.length)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,x.length)<SUB>13</SUB>>", "91": "<(FIELD_IDENTIFIER,length,length)<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "95": "<(LOCAL,boolean found: boolean)<SUB>14</SUB>>", "97": "<(IDENTIFIER,found,boolean found = false)<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "103": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "105": "<(IDENTIFIER,j,j &lt; i)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,double dis = Math.abs(x[i] - x[j]))<SUB>16</SUB>>", "113": "<(abs,Math.abs(x[i] - x[j]))<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>16</SUB>>", "117": "<(IDENTIFIER,x,x[i] - x[j])<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>16</SUB>>", "121": "<(IDENTIFIER,j,x[i] - x[j])<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,double rr = 4.0 * r * r - 1.0 * dis * dis)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.subtraction,4.0 * r * r - 1.0 * dis * dis)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.multiplication,4.0 * r)<SUB>17</SUB>>", "129": "<(IDENTIFIER,r,4.0 * r)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.multiplication,1.0 * dis * dis)<SUB>17</SUB>>", "133": "<(LITERAL,1.0,1.0 * dis)<SUB>17</SUB>>", "135": "<(IDENTIFIER,dis,1.0 * dis * dis)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.greaterEqualsThan,rr &gt;= 0)<SUB>18</SUB>>", "139": "<(LITERAL,0,rr &gt;= 0)<SUB>18</SUB>>", "141": "<(LOCAL,double del: double)<SUB>19</SUB>>", "143": "<(IDENTIFIER,del,double del = Math.sqrt(rr))<SUB>19</SUB>>", "145": "<(IDENTIFIER,Math,Math.sqrt(rr))<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.assignment,res[i] = Math.max(res[i], res[j] + del))<SUB>20</SUB>>", "149": "<(IDENTIFIER,res,res[i] = Math.max(res[i], res[j] + del))<SUB>20</SUB>>", "151": "<(max,Math.max(res[i], res[j] + del))<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,res[i])<SUB>20</SUB>>", "155": "<(IDENTIFIER,i,Math.max(res[i], res[j] + del))<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,res[j])<SUB>20</SUB>>", "159": "<(IDENTIFIER,j,res[j] + del)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.assignment,found = true)<SUB>21</SUB>>", "163": "<(LITERAL,true,found = true)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.logicalNot,!found)<SUB>24</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,res[i])<SUB>25</SUB>>", "171": "<(IDENTIFIER,i,res[i] = r)<SUB>25</SUB>>", "173": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; res.length); i++),for (int i = 0; Some(i &lt; res.length); i++))<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "177": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "179": "<(IDENTIFIER,i,i &lt; res.length)<SUB>28</SUB>>", "181": "<(IDENTIFIER,res,i &lt; res.length)<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "187": "<(IDENTIFIER,out,print(res[i] + &quot; &quot;))<SUB>29</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,res[i])<SUB>29</SUB>>", "191": "<(IDENTIFIER,i,res[i] + &quot; &quot;)<SUB>29</SUB>>", "193": "<(close,close())<SUB>31</SUB>>", "195": "<(MODIFIER,PUBLIC)>", "197": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}