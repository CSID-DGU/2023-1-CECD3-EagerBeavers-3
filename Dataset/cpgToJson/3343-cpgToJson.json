{"edges": [["19", "20"], ["19", "21"], ["19", "216"], ["19", "217"], ["19", "218"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "77"], ["21", "78"], ["21", "83"], ["21", "211"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "127"], ["93", "136"], ["93", "137"], ["93", "141"], ["93", "146"], ["93", "147"], ["93", "150"], ["93", "175"], ["93", "176"], ["93", "189"], ["93", "192"], ["93", "205"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "118"], ["109", "110"], ["109", "116"], ["110", "111"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["118", "119"], ["118", "125"], ["119", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["127", "128"], ["127", "134"], ["128", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["141", "142"], ["141", "143"], ["141", "144"], ["144", "145"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "158"], ["150", "160"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "173"], ["165", "166"], ["165", "167"], ["165", "168"], ["165", "169"], ["165", "171"], ["165", "172"], ["169", "170"], ["173", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "188"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "204"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["207", "210"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["78", "85"], ["211", "218"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "82"], ["53", "50"], ["80", "78"], ["85", "88"], ["88", "95"], ["88", "214"], ["91", "88"], ["212", "211"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "53"], ["82", "80"], ["95", "100"], ["137", "144"], ["141", "147"], ["147", "152"], ["176", "189"], ["189", "198"], ["192", "207"], ["205", "91"], ["214", "212"], ["59", "57"], ["66", "64"], ["71", "70"], ["100", "103"], ["103", "112"], ["103", "130"], ["106", "103"], ["128", "134"], ["128", "139"], ["134", "139"], ["139", "137"], ["144", "141"], ["152", "155"], ["155", "161"], ["155", "183"], ["158", "155"], ["178", "176"], ["194", "192"], ["207", "205"], ["60", "59"], ["67", "66"], ["72", "71"], ["129", "128"], ["161", "169"], ["161", "158"], ["179", "178"], ["195", "194"], ["110", "116"], ["110", "121"], ["116", "121"], ["119", "125"], ["119", "106"], ["125", "106"], ["130", "129"], ["165", "173"], ["165", "158"], ["173", "158"], ["181", "179"], ["196", "201"], ["201", "195"], ["111", "110"], ["120", "119"], ["169", "165"], ["182", "181"], ["198", "196"], ["112", "111"], ["121", "120"], ["183", "182"], ["19", "24"], ["20", "218"], ["22", "218"], ["25", "218"], ["25", "218"], ["30", "218"], ["37", "218"], ["35", "218"], ["35", "218"], ["40", "218"], ["40", "218"], ["40", "218"], ["47", "218"], ["50", "218"], ["50", "218"], ["50", "218"], ["78", "218"], ["78", "218"], ["85", "218"], ["88", "218"], ["88", "218"], ["88", "218"], ["211", "218"], ["211", "218"], ["211", "218"], ["95", "218"], ["128", "218"], ["128", "218"], ["134", "218"], ["137", "218"], ["137", "218"], ["141", "218"], ["141", "218"], ["141", "218"], ["147", "218"], ["152", "218"], ["155", "218"], ["155", "218"], ["179", "218"], ["182", "218"], ["181", "218"], ["179", "218"], ["178", "218"], ["176", "218"], ["176", "218"], ["189", "218"], ["189", "218"], ["196", "218"], ["195", "218"], ["201", "218"], ["195", "218"], ["194", "218"], ["192", "218"], ["192", "218"], ["207", "218"], ["205", "218"], ["205", "218"], ["91", "218"], ["161", "218"], ["165", "218"], ["165", "218"], ["165", "218"], ["165", "218"], ["173", "218"], ["158", "218"], ["110", "218"], ["110", "218"], ["116", "218"], ["119", "218"], ["119", "218"], ["125", "218"], ["106", "218"], ["57", "218"], ["57", "218"], ["64", "218"], ["67", "218"], ["66", "218"], ["64", "218"], ["64", "218"], ["70", "218"], ["70", "218"], ["53", "218"], ["165", "218"], ["141", "218"], ["207", "218"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "85"], ["78", "211"], ["205", "211"], ["19", "211"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["19", "70"], ["85", "88"], ["91", "88"], ["19", "88"], ["42", "88"], ["198", "88"], ["88", "91"], ["161", "91"], ["165", "91"], ["19", "91"], ["19", "95"], ["139", "137"], ["19", "147"], ["178", "176"], ["178", "176"], ["176", "189"], ["19", "189"], ["194", "192"], ["194", "192"], ["207", "205"], ["207", "205"], ["207", "205"], ["19", "100"], ["19", "141"], ["137", "141"], ["144", "141"], ["19", "152"], ["181", "189"], ["189", "192"], ["19", "192"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["100", "103"], ["106", "103"], ["19", "103"], ["88", "103"], ["103", "106"], ["19", "106"], ["95", "134"], ["116", "134"], ["125", "134"], ["19", "134"], ["103", "139"], ["19", "139"], ["19", "144"], ["152", "155"], ["158", "155"], ["19", "155"], ["139", "155"], ["169", "155"], ["161", "158"], ["165", "158"], ["19", "158"], ["179", "178"], ["179", "178"], ["147", "178"], ["173", "178"], ["19", "178"], ["195", "194"], ["195", "194"], ["19", "194"], ["19", "207"], ["78", "207"], ["205", "207"], ["192", "207"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["155", "161"], ["19", "161"], ["88", "161"], ["165", "161"], ["50", "179"], ["19", "179"], ["181", "179"], ["181", "179"], ["196", "195"], ["196", "195"], ["201", "195"], ["201", "195"], ["95", "116"], ["125", "116"], ["19", "116"], ["95", "125"], ["116", "125"], ["19", "125"], ["19", "165"], ["161", "165"], ["40", "165"], ["169", "165"], ["161", "165"], ["141", "165"], ["147", "173"], ["19", "173"], ["182", "181"], ["182", "181"], ["95", "181"], ["134", "181"], ["116", "181"], ["125", "181"], ["19", "181"], ["19", "196"], ["198", "196"], ["198", "196"], ["19", "201"], ["178", "201"], ["155", "169"], ["19", "169"], ["183", "182"], ["183", "182"], ["19", "182"], ["183", "198"], ["19", "198"], ["19", "183"], ["155", "183"], ["50", "60"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "50"], ["50", "59"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["88", "192"], ["88", "128"], ["88", "179"], ["88", "178"], ["88", "196"], ["88", "103"], ["88", "198"], ["88", "189"], ["88", "95"], ["88", "144"], ["88", "91"], ["88", "129"], ["88", "181"], ["88", "195"], ["88", "137"], ["88", "207"], ["88", "152"], ["88", "130"], ["88", "100"], ["88", "194"], ["88", "182"], ["88", "88"], ["88", "155"], ["88", "139"], ["88", "201"], ["88", "205"], ["88", "141"], ["88", "183"], ["88", "176"], ["88", "147"], ["103", "120"], ["103", "103"], ["103", "119"], ["103", "121"], ["103", "112"], ["103", "111"], ["103", "106"], ["103", "110"], ["128", "134"], ["155", "161"], ["155", "155"], ["155", "158"], ["161", "169"], ["161", "165"], ["110", "116"], ["119", "125"], ["165", "173"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "37": "<(nextInt,nextInt())<SUB>6</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>8</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>8</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>8</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.assignment,int a = in.nextInt() - 1)<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>11</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>11</SUB>>", "63": "<(LOCAL,int b: int)<SUB>12</SUB>>", "65": "<(IDENTIFIER,b,int b = in.nextInt() - 1)<SUB>12</SUB>>", "67": "<(nextInt,nextInt())<SUB>12</SUB>>", "69": "<(LITERAL,1,in.nextInt() - 1)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[a][b])<SUB>14</SUB>>", "73": "<(IDENTIFIER,graph,graph[a][b] = true)<SUB>14</SUB>>", "75": "<(IDENTIFIER,b,graph[a][b] = true)<SUB>14</SUB>>", "77": "<(LOCAL,int res: int)<SUB>17</SUB>>", "79": "<(IDENTIFIER,res,int res = Integer.MAX_VALUE)<SUB>17</SUB>>", "81": "<(IDENTIFIER,Integer,int res = Integer.MAX_VALUE)<SUB>17</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int center = 0; Some(center &lt; n); center++),for (int center = 0; Some(center &lt; n); center++))<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.assignment,int center = 0)<SUB>18</SUB>>", "87": "<(LITERAL,0,int center = 0)<SUB>18</SUB>>", "89": "<(IDENTIFIER,center,center &lt; n)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,center++)<SUB>18</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.assignment,int calc = 0)<SUB>20</SUB>>", "97": "<(LITERAL,0,int calc = 0)<SUB>20</SUB>>", "99": "<(LOCAL,int i: int)<SUB>21</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>21</SUB>>", "105": "<(IDENTIFIER,n,i &lt; n)<SUB>21</SUB>>", "107": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "109": "<(CONTROL_STRUCTURE,if (!graph[center][i]),if (!graph[center][i]))<SUB>23</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,graph[center][i])<SUB>23</SUB>>", "113": "<(IDENTIFIER,graph,!graph[center][i])<SUB>23</SUB>>", "115": "<(IDENTIFIER,i,!graph[center][i])<SUB>23</SUB>>", "117": "<(IDENTIFIER,calc,calc++)<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.logicalNot,!graph[i][center])<SUB>25</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,graph[i])<SUB>25</SUB>>", "123": "<(IDENTIFIER,i,!graph[i][center])<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,calc++)<SUB>26</SUB>>", "127": "<(CONTROL_STRUCTURE,if (!graph[center][center]),if (!graph[center][center]))<SUB>29</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,graph[center][center])<SUB>29</SUB>>", "131": "<(IDENTIFIER,graph,!graph[center][center])<SUB>29</SUB>>", "133": "<(IDENTIFIER,center,!graph[center][center])<SUB>29</SUB>>", "135": "<(IDENTIFIER,calc,calc--)<SUB>30</SUB>>", "137": "<(&lt;operator&gt;.assignment,int[] match = new int[n])<SUB>32</SUB>>", "139": "<(&lt;operator&gt;.alloc,new int[n])>", "141": "<(fill,fill(match, -1))<SUB>33</SUB>>", "143": "<(IDENTIFIER,match,fill(match, -1))<SUB>33</SUB>>", "145": "<(LITERAL,1,-1)<SUB>33</SUB>>", "147": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>34</SUB>>", "149": "<(LITERAL,0,int max = 0)<SUB>34</SUB>>", "151": "<(LOCAL,int i: int)<SUB>36</SUB>>", "153": "<(IDENTIFIER,i,int i = 0)<SUB>36</SUB>>", "155": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>36</SUB>>", "157": "<(IDENTIFIER,n,i &lt; n)<SUB>36</SUB>>", "159": "<(IDENTIFIER,i,i++)<SUB>36</SUB>>", "161": "<(&lt;operator&gt;.notEquals,i != center)<SUB>37</SUB>>", "163": "<(IDENTIFIER,center,i != center)<SUB>37</SUB>>", "165": "<(can,can(i, graph, new boolean[n], center, match))<SUB>38</SUB>>", "167": "<(IDENTIFIER,i,can(i, graph, new boolean[n], center, match))<SUB>38</SUB>>", "169": "<(&lt;operator&gt;.alloc,new boolean[n])>", "171": "<(IDENTIFIER,center,can(i, graph, new boolean[n], center, match))<SUB>38</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,max++)<SUB>39</SUB>>", "175": "<(LOCAL,int unusable: int)<SUB>41</SUB>>", "177": "<(IDENTIFIER,unusable,int unusable = m - (2 * n - 1 - calc) - max)<SUB>41</SUB>>", "179": "<(&lt;operator&gt;.subtraction,m - (2 * n - 1 - calc))<SUB>41</SUB>>", "181": "<(&lt;operator&gt;.subtraction,2 * n - 1 - calc)<SUB>41</SUB>>", "183": "<(&lt;operator&gt;.multiplication,2 * n)<SUB>41</SUB>>", "185": "<(IDENTIFIER,n,2 * n)<SUB>41</SUB>>", "187": "<(IDENTIFIER,calc,2 * n - 1 - calc)<SUB>41</SUB>>", "189": "<(&lt;operator&gt;.assignmentPlus,calc += unusable)<SUB>42</SUB>>", "191": "<(IDENTIFIER,unusable,calc += unusable)<SUB>42</SUB>>", "193": "<(IDENTIFIER,calc,calc += (2 * (n - 1) - 2 * max) / 2)<SUB>43</SUB>>", "195": "<(&lt;operator&gt;.subtraction,2 * (n - 1) - 2 * max)<SUB>43</SUB>>", "197": "<(LITERAL,2,2 * (n - 1))<SUB>43</SUB>>", "199": "<(IDENTIFIER,n,n - 1)<SUB>43</SUB>>", "201": "<(&lt;operator&gt;.multiplication,2 * max)<SUB>43</SUB>>", "203": "<(IDENTIFIER,max,2 * max)<SUB>43</SUB>>", "205": "<(&lt;operator&gt;.assignment,res = Math.min(res, calc))<SUB>45</SUB>>", "207": "<(min,Math.min(res, calc))<SUB>45</SUB>>", "209": "<(IDENTIFIER,res,Math.min(res, calc))<SUB>45</SUB>>", "211": "<(println,System.out.println(res))<SUB>48</SUB>>", "213": "<(IDENTIFIER,System,System.out.println(res))<SUB>48</SUB>>", "215": "<(IDENTIFIER,res,System.out.println(res))<SUB>48</SUB>>", "217": "<(MODIFIER,STATIC)>"}}