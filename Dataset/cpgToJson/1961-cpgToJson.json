{"edges": [["17", "19"], ["17", "143"], ["17", "144"], ["17", "145"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "36"], ["19", "40"], ["19", "41"], ["19", "46"], ["19", "47"], ["19", "52"], ["19", "53"], ["19", "57"], ["19", "89"], ["19", "92"], ["19", "93"], ["19", "96"], ["19", "138"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "72"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["76", "88"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "135"], ["108", "109"], ["108", "122"], ["109", "110"], ["109", "117"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "130"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["136", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["20", "28"], ["23", "38"], ["36", "43"], ["41", "49"], ["47", "55"], ["53", "59"], ["89", "93"], ["93", "98"], ["138", "145"], ["22", "20"], ["38", "36"], ["43", "41"], ["49", "47"], ["55", "53"], ["59", "62"], ["62", "70"], ["62", "89"], ["65", "62"], ["98", "101"], ["101", "113"], ["101", "141"], ["104", "101"], ["139", "138"], ["26", "33"], ["29", "23"], ["68", "73"], ["72", "65"], ["141", "139"], ["28", "26"], ["31", "29"], ["70", "68"], ["73", "79"], ["108", "136"], ["108", "104"], ["33", "31"], ["77", "82"], ["80", "72"], ["109", "108"], ["109", "126"], ["122", "108"], ["136", "104"], ["79", "77"], ["82", "85"], ["85", "80"], ["110", "118"], ["117", "109"], ["123", "131"], ["130", "122"], ["111", "116"], ["116", "110"], ["118", "121"], ["121", "117"], ["124", "129"], ["129", "123"], ["131", "134"], ["134", "130"], ["113", "111"], ["126", "124"], ["17", "22"], ["18", "145"], ["20", "145"], ["23", "145"], ["26", "145"], ["29", "145"], ["29", "145"], ["29", "145"], ["23", "145"], ["36", "145"], ["38", "145"], ["36", "145"], ["36", "145"], ["41", "145"], ["41", "145"], ["47", "145"], ["47", "145"], ["47", "145"], ["53", "145"], ["53", "145"], ["89", "145"], ["89", "145"], ["93", "145"], ["98", "145"], ["101", "145"], ["101", "145"], ["101", "145"], ["138", "145"], ["138", "145"], ["138", "145"], ["113", "145"], ["109", "145"], ["108", "145"], ["126", "145"], ["122", "145"], ["108", "145"], ["108", "145"], ["136", "145"], ["104", "145"], ["68", "145"], ["70", "145"], ["68", "145"], ["68", "145"], ["72", "145"], ["77", "145"], ["80", "145"], ["80", "145"], ["80", "145"], ["80", "145"], ["72", "145"], ["65", "145"], ["89", "145"], ["17", "18"], ["17", "20"], ["38", "36"], ["36", "41"], ["36", "47"], ["55", "53"], ["17", "93"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "59"], ["17", "89"], ["53", "89"], ["72", "89"], ["17", "98"], ["93", "138"], ["136", "138"], ["17", "138"], ["17", "26"], ["17", "34"], ["17", "38"], ["41", "55"], ["17", "55"], ["59", "62"], ["65", "62"], ["17", "62"], ["55", "62"], ["62", "65"], ["17", "65"], ["70", "68"], ["77", "72"], ["80", "72"], ["17", "72"], ["98", "101"], ["104", "101"], ["17", "101"], ["62", "101"], ["101", "104"], ["17", "104"], ["26", "29"], ["17", "29"], ["38", "70"], ["17", "70"], ["17", "77"], ["17", "88"], ["109", "108"], ["109", "108"], ["122", "108"], ["122", "108"], ["77", "80"], ["17", "80"], ["68", "80"], ["36", "80"], ["93", "136"], ["17", "136"], ["47", "113"], ["126", "113"], ["17", "113"], ["113", "126"], ["17", "126"], ["62", "68"], ["62", "73"], ["62", "77"], ["62", "85"], ["62", "72"], ["62", "65"], ["62", "82"], ["62", "79"], ["62", "80"], ["62", "70"], ["62", "62"], ["101", "113"], ["101", "116"], ["101", "104"], ["101", "121"], ["101", "101"], ["101", "118"], ["101", "110"], ["101", "117"], ["101", "108"], ["101", "111"], ["101", "109"], ["108", "136"], ["109", "122"], ["109", "131"], ["109", "123"], ["109", "129"], ["109", "134"], ["109", "126"], ["109", "130"], ["109", "124"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(LOCAL,int[] nm: int[])<SUB>3</SUB>>", "37": "<(IDENTIFIER,nm,int[] nm = toIntArray())<SUB>3</SUB>>", "39": "<(IDENTIFIER,this,toIntArray())<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nm[0])<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.indexAccess,nm[0])<SUB>4</SUB>>", "45": "<(LITERAL,0,int n = nm[0])<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.assignment,int k = nm[1])<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,nm[1])<SUB>5</SUB>>", "51": "<(LITERAL,1,int k = nm[1])<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,ANY p = new Pai[n])<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.alloc,new Pai[n])>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "69": "<(IDENTIFIER,nm,nm = toIntArray())<SUB>8</SUB>>", "71": "<(IDENTIFIER,this,toIntArray())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,p[i] = new Pai(nm[0], nm[1]))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "79": "<(&lt;operator&gt;.alloc,new Pai(nm[0], nm[1]))<SUB>9</SUB>>", "81": "<(IDENTIFIER,$obj2,new Pai(nm[0], nm[1]))>", "83": "<(IDENTIFIER,nm,new Pai(nm[0], nm[1]))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,nm[1])<SUB>9</SUB>>", "87": "<(LITERAL,1,new Pai(nm[0], nm[1]))<SUB>9</SUB>>", "89": "<(sort,sort(p))<SUB>11</SUB>>", "91": "<(IDENTIFIER,p,sort(p))<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>12</SUB>>", "95": "<(LITERAL,0,int count = 0)<SUB>12</SUB>>", "97": "<(LOCAL,int i: int)<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "107": "<(CONTROL_STRUCTURE,if (p[k - 1].first == p[i].first &amp;&amp; p[k - 1].second == p[i].second),if (p[k - 1].first == p[i].first &amp;&amp; p[k - 1].second == p[i].second))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.equals,p[k - 1].first == p[i].first)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,p[k - 1])<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>14</SUB>>", "115": "<(LITERAL,1,k - 1)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,p[i].first)<SUB>14</SUB>>", "119": "<(IDENTIFIER,p,p[k - 1].first == p[i].first)<SUB>14</SUB>>", "121": "<(FIELD_IDENTIFIER,first,first)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.fieldAccess,p[k - 1].second)<SUB>14</SUB>>", "125": "<(IDENTIFIER,p,p[k - 1].second == p[i].second)<SUB>14</SUB>>", "127": "<(IDENTIFIER,k,k - 1)<SUB>14</SUB>>", "129": "<(FIELD_IDENTIFIER,second,second)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>14</SUB>>", "133": "<(IDENTIFIER,i,p[k - 1].second == p[i].second)<SUB>14</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "137": "<(IDENTIFIER,count,count++)<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "141": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}