{"edges": [["21", "22"], ["21", "23"], ["21", "124"], ["21", "125"], ["21", "126"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "81"], ["23", "82"], ["23", "104"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "80"], ["62", "63"], ["62", "65"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "103"], ["85", "86"], ["85", "88"], ["86", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "108"], ["104", "115"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["116", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "63"], ["59", "86"], ["82", "105"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["84", "82"], ["105", "111"], ["105", "120"], ["108", "126"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["62", "61"], ["85", "84"], ["109", "112"], ["112", "108"], ["31", "29"], ["34", "32"], ["63", "66"], ["65", "62"], ["86", "89"], ["88", "85"], ["111", "109"], ["117", "126"], ["36", "34"], ["66", "74"], ["67", "65"], ["89", "97"], ["90", "88"], ["118", "121"], ["121", "117"], ["69", "67"], ["92", "90"], ["120", "118"], ["71", "69"], ["94", "92"], ["73", "71"], ["96", "94"], ["74", "77"], ["77", "73"], ["97", "100"], ["100", "96"], ["21", "26"], ["22", "126"], ["24", "126"], ["29", "126"], ["32", "126"], ["32", "126"], ["32", "126"], ["27", "126"], ["38", "126"], ["42", "126"], ["41", "126"], ["41", "126"], ["45", "126"], ["54", "126"], ["56", "126"], ["54", "126"], ["52", "126"], ["52", "126"], ["61", "126"], ["59", "126"], ["59", "126"], ["82", "126"], ["85", "126"], ["90", "126"], ["96", "126"], ["100", "126"], ["96", "126"], ["94", "126"], ["92", "126"], ["90", "126"], ["88", "126"], ["85", "126"], ["84", "126"], ["82", "126"], ["82", "126"], ["105", "126"], ["108", "126"], ["112", "126"], ["112", "126"], ["108", "126"], ["108", "126"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["84", "82"], ["84", "82"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["62", "61"], ["62", "61"], ["21", "61"], ["86", "84"], ["21", "84"], ["90", "84"], ["90", "84"], ["59", "105"], ["21", "105"], ["112", "108"], ["112", "108"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["63", "62"], ["21", "62"], ["67", "62"], ["67", "62"], ["86", "85"], ["21", "85"], ["90", "85"], ["90", "85"], ["21", "112"], ["45", "112"], ["105", "112"], ["21", "63"], ["21", "65"], ["67", "65"], ["67", "65"], ["21", "86"], ["21", "88"], ["90", "88"], ["90", "88"], ["121", "117"], ["121", "117"], ["21", "67"], ["71", "67"], ["71", "67"], ["67", "90"], ["21", "90"], ["94", "90"], ["94", "90"], ["21", "121"], ["45", "121"], ["82", "121"], ["21", "69"], ["71", "69"], ["71", "69"], ["21", "92"], ["94", "92"], ["94", "92"], ["21", "71"], ["73", "71"], ["73", "71"], ["21", "94"], ["96", "94"], ["96", "94"], ["74", "73"], ["74", "73"], ["45", "73"], ["21", "73"], ["52", "73"], ["97", "96"], ["97", "96"], ["21", "96"], ["45", "96"], ["52", "96"], ["21", "74"], ["45", "77"], ["21", "77"], ["52", "77"], ["21", "97"], ["21", "100"], ["45", "100"], ["52", "100"], ["105", "112"], ["105", "120"], ["105", "118"], ["105", "108"], ["105", "121"], ["105", "117"], ["105", "111"], ["105", "109"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,long n = parseLong(st.nextToken()))<SUB>4</SUB>>", "47": "<(parseLong,parseLong(st.nextToken()))<SUB>4</SUB>>", "49": "<(nextToken,nextToken())<SUB>4</SUB>>", "51": "<(LOCAL,long k: long)<SUB>5</SUB>>", "53": "<(IDENTIFIER,k,long k = parseLong(st.nextToken()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,long ans = (-3 - (long) Math.sqrt(9 + 4 * (1 * 2 * (n + k)))) / 2)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.division,(-3 - (long) Math.sqrt(9 + 4 * (1 * 2 * (n + k)))) / 2)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.minus,-3)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.cast,(long) Math.sqrt(9 + 4 * (1 * 2 * (n + k))))<SUB>7</SUB>>", "67": "<(sqrt,Math.sqrt(9 + 4 * (1 * 2 * (n + k))))<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.addition,9 + 4 * (1 * 2 * (n + k)))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.multiplication,4 * (1 * 2 * (n + k)))<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.multiplication,1 * 2 * (n + k))<SUB>7</SUB>>", "75": "<(LITERAL,1,1 * 2)<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.addition,n + k)<SUB>7</SUB>>", "79": "<(IDENTIFIER,k,n + k)<SUB>7</SUB>>", "81": "<(LOCAL,long ans1: long)<SUB>8</SUB>>", "83": "<(IDENTIFIER,ans1,long ans1 = (-3 + (long) Math.sqrt(9 + 4 * (1 * 2 * (n + k)))) / 2)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.addition,-3 + (long) Math.sqrt(9 + 4 * (1 * 2 * (n + k))))<SUB>8</SUB>>", "87": "<(LITERAL,3,-3)<SUB>8</SUB>>", "89": "<(TYPE_REF,long,long)<SUB>8</SUB>>", "91": "<(IDENTIFIER,Math,Math.sqrt(9 + 4 * (1 * 2 * (n + k))))<SUB>8</SUB>>", "93": "<(LITERAL,9,9 + 4 * (1 * 2 * (n + k)))<SUB>8</SUB>>", "95": "<(LITERAL,4,4 * (1 * 2 * (n + k)))<SUB>8</SUB>>", "97": "<(&lt;operator&gt;.multiplication,1 * 2)<SUB>8</SUB>>", "99": "<(LITERAL,2,1 * 2)<SUB>8</SUB>>", "101": "<(IDENTIFIER,n,n + k)<SUB>8</SUB>>", "103": "<(LITERAL,2,(-3 + (long) Math.sqrt(9 + 4 * (1 * 2 * (n + k)))) / 2)<SUB>8</SUB>>", "105": "<(&lt;operator&gt;.greaterThan,ans &gt; 0)<SUB>9</SUB>>", "107": "<(LITERAL,0,ans &gt; 0)<SUB>9</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "113": "<(IDENTIFIER,n,n - ans)<SUB>10</SUB>>", "115": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "117": "<(println,System.out.println(n - ans1))<SUB>12</SUB>>", "119": "<(IDENTIFIER,System,System.out.println(n - ans1))<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.subtraction,n - ans1)<SUB>12</SUB>>", "123": "<(IDENTIFIER,ans1,n - ans1)<SUB>12</SUB>>", "125": "<(MODIFIER,STATIC)>"}}