{"edges": [["23", "25"], ["23", "317"], ["23", "318"], ["23", "319"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "48"], ["25", "53"], ["25", "90"], ["25", "91"], ["25", "98"], ["25", "117"], ["25", "8"], ["25", "274"], ["25", "277"], ["25", "278"], ["25", "279"], ["25", "286"], ["25", "312"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "6"], ["63", "64"], ["63", "67"], ["63", "70"], ["64", "65"], ["64", "66"], ["67", "5"], ["67", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "127"], ["117", "129"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "240"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "154"], ["144", "156"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["154", "155"], ["156", "157"], ["156", "158"], ["156", "163"], ["156", "166"], ["156", "168"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["168", "178"], ["169", "170"], ["169", "177"], ["170", "171"], ["170", "176"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "186"], ["178", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "198"], ["188", "219"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "218"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "239"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "246"], ["244", "257"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "256"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["257", "258"], ["257", "259"], ["257", "262"], ["257", "265"], ["257", "267"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["265", "266"], ["267", "268"], ["267", "273"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["274", "275"], ["274", "276"], ["277", "7"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "288"], ["286", "291"], ["286", "294"], ["286", "296"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "293"], ["294", "295"], ["296", "297"], ["296", "304"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "303"], ["300", "301"], ["300", "302"], ["304", "305"], ["304", "310"], ["304", "311"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "309"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["26", "33"], ["29", "45"], ["41", "50"], ["48", "55"], ["91", "100"], ["274", "277"], ["277", "282"], ["279", "288"], ["312", "319"], ["28", "26"], ["43", "41"], ["50", "48"], ["55", "58"], ["58", "66"], ["58", "94"], ["61", "58"], ["93", "91"], ["100", "103"], ["103", "112"], ["103", "119"], ["106", "103"], ["108", "106"], ["119", "124"], ["122", "131"], ["122", "276"], ["127", "124"], ["276", "274"], ["281", "279"], ["288", "291"], ["291", "300"], ["291", "315"], ["294", "291"], ["296", "294"], ["313", "312"], ["31", "38"], ["34", "29"], ["45", "43"], ["64", "68"], ["67", "72"], ["94", "93"], ["109", "108"], ["124", "122"], ["131", "136"], ["282", "281"], ["297", "307"], ["304", "296"], ["315", "313"], ["33", "31"], ["36", "34"], ["66", "64"], ["68", "67"], ["72", "75"], ["75", "82"], ["75", "61"], ["78", "75"], ["80", "78"], ["110", "109"], ["136", "139"], ["139", "149"], ["139", "241"], ["142", "139"], ["241", "251"], ["241", "127"], ["299", "297"], ["305", "304"], ["38", "36"], ["81", "88"], ["86", "80"], ["112", "110"], ["154", "160"], ["246", "259"], ["300", "299"], ["307", "305"], ["82", "81"], ["88", "86"], ["146", "142"], ["146", "154"], ["158", "163"], ["163", "173"], ["163", "142"], ["166", "163"], ["248", "246"], ["259", "262"], ["262", "269"], ["262", "127"], ["265", "262"], ["267", "265"], ["147", "146"], ["160", "158"], ["249", "248"], ["268", "267"], ["149", "147"], ["170", "166"], ["170", "180"], ["180", "183"], ["183", "193"], ["183", "166"], ["186", "183"], ["250", "253"], ["253", "249"], ["269", "268"], ["171", "170"], ["198", "221"], ["219", "186"], ["251", "250"], ["173", "171"], ["190", "186"], ["190", "200"], ["199", "206"], ["204", "198"], ["220", "227"], ["225", "219"], ["191", "190"], ["200", "199"], ["205", "215"], ["210", "204"], ["221", "220"], ["226", "236"], ["231", "225"], ["193", "191"], ["206", "205"], ["211", "210"], ["227", "226"], ["232", "231"], ["213", "211"], ["234", "232"], ["215", "213"], ["236", "234"], ["23", "28"], ["24", "319"], ["26", "319"], ["31", "319"], ["34", "319"], ["34", "319"], ["34", "319"], ["29", "319"], ["45", "319"], ["43", "319"], ["41", "319"], ["41", "319"], ["48", "319"], ["48", "319"], ["48", "319"], ["55", "319"], ["58", "319"], ["58", "319"], ["91", "319"], ["91", "319"], ["91", "319"], ["119", "319"], ["122", "319"], ["274", "319"], ["277", "319"], ["279", "319"], ["281", "319"], ["279", "319"], ["279", "319"], ["288", "319"], ["291", "319"], ["291", "319"], ["291", "319"], ["312", "319"], ["312", "319"], ["312", "319"], ["297", "319"], ["296", "319"], ["305", "319"], ["304", "319"], ["296", "319"], ["296", "319"], ["294", "319"], ["131", "319"], ["136", "319"], ["139", "319"], ["139", "319"], ["241", "319"], ["241", "319"], ["246", "319"], ["249", "319"], ["253", "319"], ["249", "319"], ["248", "319"], ["246", "319"], ["246", "319"], ["127", "319"], ["267", "319"], ["267", "319"], ["267", "319"], ["265", "319"], ["147", "319"], ["146", "319"], ["146", "319"], ["154", "319"], ["158", "319"], ["158", "319"], ["163", "319"], ["163", "319"], ["171", "319"], ["170", "319"], ["170", "319"], ["191", "319"], ["190", "319"], ["190", "319"], ["204", "319"], ["213", "319"], ["204", "319"], ["198", "319"], ["198", "319"], ["219", "319"], ["225", "319"], ["234", "319"], ["225", "319"], ["219", "319"], ["219", "319"], ["186", "319"], ["166", "319"], ["142", "319"], ["108", "319"], ["108", "319"], ["106", "319"], ["64", "319"], ["67", "319"], ["68", "319"], ["67", "319"], ["67", "319"], ["72", "319"], ["75", "319"], ["75", "319"], ["61", "319"], ["80", "319"], ["88", "319"], ["86", "319"], ["80", "319"], ["80", "319"], ["78", "319"], ["86", "319"], ["43", "319"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["50", "48"], ["93", "91"], ["93", "91"], ["23", "274"], ["281", "279"], ["281", "279"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["23", "55"], ["23", "100"], ["23", "108"], ["23", "119"], ["274", "277"], ["23", "277"], ["23", "288"], ["277", "312"], ["297", "312"], ["23", "312"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["41", "50"], ["23", "50"], ["55", "58"], ["61", "58"], ["23", "58"], ["50", "58"], ["75", "58"], ["58", "61"], ["23", "61"], ["23", "64"], ["94", "93"], ["94", "93"], ["23", "93"], ["100", "103"], ["106", "103"], ["23", "103"], ["93", "103"], ["112", "106"], ["23", "106"], ["119", "122"], ["127", "122"], ["23", "122"], ["124", "122"], ["124", "122"], ["122", "127"], ["147", "127"], ["171", "127"], ["191", "127"], ["234", "127"], ["23", "127"], ["23", "131"], ["282", "281"], ["282", "281"], ["23", "281"], ["288", "291"], ["294", "291"], ["23", "291"], ["282", "291"], ["307", "291"], ["305", "294"], ["23", "294"], ["297", "296"], ["297", "296"], ["23", "296"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["64", "67"], ["23", "67"], ["68", "67"], ["23", "72"], ["86", "80"], ["86", "80"], ["23", "94"], ["58", "94"], ["23", "124"], ["103", "124"], ["139", "124"], ["262", "124"], ["23", "136"], ["23", "282"], ["124", "282"], ["277", "297"], ["23", "297"], ["267", "297"], ["219", "297"], ["23", "304"], ["45", "68"], ["23", "68"], ["72", "75"], ["78", "75"], ["23", "75"], ["58", "75"], ["75", "78"], ["23", "78"], ["136", "139"], ["142", "139"], ["23", "139"], ["124", "139"], ["163", "139"], ["149", "142"], ["236", "142"], ["23", "142"], ["131", "241"], ["154", "241"], ["23", "241"], ["248", "246"], ["248", "246"], ["291", "305"], ["23", "305"], ["307", "305"], ["307", "305"], ["23", "86"], ["88", "86"], ["23", "112"], ["103", "112"], ["131", "154"], ["23", "154"], ["149", "158"], ["23", "158"], ["23", "259"], ["246", "267"], ["23", "267"], ["291", "307"], ["23", "307"], ["67", "88"], ["23", "88"], ["147", "146"], ["147", "146"], ["23", "146"], ["158", "163"], ["166", "163"], ["23", "163"], ["139", "163"], ["183", "163"], ["173", "166"], ["215", "166"], ["23", "166"], ["249", "248"], ["249", "248"], ["23", "248"], ["259", "262"], ["265", "262"], ["23", "262"], ["139", "262"], ["262", "265"], ["23", "265"], ["219", "267"], ["122", "147"], ["171", "147"], ["191", "147"], ["234", "147"], ["23", "147"], ["149", "147"], ["149", "147"], ["149", "160"], ["23", "160"], ["23", "180"], ["23", "249"], ["241", "249"], ["253", "249"], ["253", "249"], ["23", "149"], ["139", "149"], ["171", "170"], ["171", "170"], ["23", "170"], ["180", "183"], ["186", "183"], ["23", "183"], ["163", "183"], ["193", "186"], ["23", "186"], ["204", "198"], ["204", "198"], ["225", "219"], ["225", "219"], ["23", "250"], ["241", "250"], ["23", "253"], ["241", "253"], ["147", "171"], ["191", "171"], ["234", "171"], ["23", "171"], ["173", "171"], ["173", "171"], ["267", "198"], ["219", "198"], ["198", "219"], ["23", "173"], ["163", "173"], ["191", "190"], ["191", "190"], ["23", "190"], ["80", "204"], ["171", "191"], ["234", "191"], ["23", "191"], ["193", "191"], ["193", "191"], ["23", "193"], ["183", "193"], ["191", "213"], ["23", "213"], ["215", "213"], ["215", "213"], ["213", "234"], ["23", "234"], ["236", "234"], ["236", "234"], ["23", "215"], ["173", "215"], ["23", "236"], ["149", "236"], ["58", "68"], ["58", "61"], ["58", "66"], ["58", "72"], ["58", "64"], ["58", "75"], ["58", "67"], ["58", "58"], ["103", "112"], ["103", "108"], ["103", "109"], ["103", "103"], ["103", "106"], ["103", "110"], ["122", "136"], ["122", "127"], ["122", "122"], ["122", "241"], ["122", "131"], ["122", "139"], ["122", "124"], ["291", "300"], ["291", "296"], ["291", "304"], ["291", "305"], ["291", "297"], ["291", "291"], ["291", "307"], ["291", "299"], ["291", "294"], ["75", "80"], ["75", "88"], ["75", "86"], ["75", "75"], ["75", "81"], ["75", "82"], ["75", "78"], ["139", "146"], ["139", "147"], ["139", "149"], ["139", "139"], ["139", "142"], ["241", "262"], ["241", "249"], ["241", "253"], ["241", "259"], ["241", "246"], ["241", "251"], ["241", "248"], ["241", "250"], ["146", "154"], ["146", "163"], ["146", "158"], ["146", "160"], ["163", "163"], ["163", "170"], ["163", "173"], ["163", "171"], ["163", "166"], ["262", "262"], ["262", "268"], ["262", "269"], ["262", "267"], ["262", "265"], ["170", "180"], ["170", "183"], ["183", "190"], ["183", "186"], ["183", "191"], ["183", "183"], ["183", "193"], ["190", "215"], ["190", "226"], ["190", "213"], ["190", "204"], ["190", "206"], ["190", "236"], ["190", "200"], ["190", "199"], ["190", "227"], ["190", "225"], ["190", "232"], ["190", "198"], ["190", "231"], ["190", "221"], ["190", "205"], ["190", "210"], ["190", "220"], ["190", "234"], ["190", "211"], ["190", "219"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "45": "<(readLine,readLine())<SUB>3</SUB>>", "47": "<(LOCAL,double[][] aa: double[][])<SUB>4</SUB>>", "49": "<(IDENTIFIER,aa,double[][] aa = new double[n][n])<SUB>4</SUB>>", "51": "<(IDENTIFIER,n,new double[n][n])<SUB>4</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "64": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "66": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "69": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "71": "<(LOCAL,int j: int)<SUB>7</SUB>>", "73": "<(IDENTIFIER,j,int j = 0)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>7</SUB>>", "77": "<(IDENTIFIER,n,j &lt; n)<SUB>7</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>7</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,aa[i][j])<SUB>8</SUB>>", "83": "<(IDENTIFIER,aa,aa[i][j] = parseDouble(st.nextToken()))<SUB>8</SUB>>", "85": "<(IDENTIFIER,j,aa[i][j] = parseDouble(st.nextToken()))<SUB>8</SUB>>", "87": "<(IDENTIFIER,Double,parseDouble(st.nextToken()))<SUB>8</SUB>>", "89": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "91": "<(&lt;operator&gt;.assignment,double[][] pp = new double[1 &lt;&lt; n][n])<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; n][n])>", "95": "<(LITERAL,1,1 &lt;&lt; n)<SUB>10</SUB>>", "97": "<(IDENTIFIER,n,new double[1 &lt;&lt; n][n])<SUB>10</SUB>>", "99": "<(LOCAL,int k: int)<SUB>11</SUB>>", "101": "<(IDENTIFIER,k,int k = 0)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>11</SUB>>", "105": "<(IDENTIFIER,n,k &lt; n)<SUB>11</SUB>>", "107": "<(IDENTIFIER,k,k++)<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,pp[1 &lt;&lt; k][k])<SUB>12</SUB>>", "111": "<(IDENTIFIER,pp,pp[1 &lt;&lt; k][k] = 1)<SUB>12</SUB>>", "113": "<(LITERAL,1,1 &lt;&lt; k)<SUB>12</SUB>>", "115": "<(IDENTIFIER,k,pp[1 &lt;&lt; k][k] = 1)<SUB>12</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int b = 1; Some(b &lt; 1 &lt;&lt; n); b++),for (int b = 1; Some(b &lt; 1 &lt;&lt; n); b++))<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.assignment,int b = 1)<SUB>13</SUB>>", "121": "<(LITERAL,1,int b = 1)<SUB>13</SUB>>", "123": "<(IDENTIFIER,b,b &lt; 1 &lt;&lt; n)<SUB>13</SUB>>", "125": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,b++)<SUB>13</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "131": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>14</SUB>>", "133": "<(LITERAL,0,int c = 0)<SUB>14</SUB>>", "135": "<(LOCAL,int i: int)<SUB>15</SUB>>", "137": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "141": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "145": "<(CONTROL_STRUCTURE,if ((b &amp; 1 &lt;&lt; i) == 0),if ((b &amp; 1 &lt;&lt; i) == 0))<SUB>16</SUB>>", "147": "<(&lt;operator&gt;.and,b &amp; 1 &lt;&lt; i)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>16</SUB>>", "151": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>16</SUB>>", "153": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>17</SUB>>", "155": "<(IDENTIFIER,c,c++)<SUB>18</SUB>>", "157": "<(LOCAL,int j: int)<SUB>19</SUB>>", "159": "<(IDENTIFIER,j,int j = i + 1)<SUB>19</SUB>>", "161": "<(IDENTIFIER,i,i + 1)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>19</SUB>>", "165": "<(IDENTIFIER,n,j &lt; n)<SUB>19</SUB>>", "167": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "169": "<(CONTROL_STRUCTURE,if ((b &amp; 1 &lt;&lt; j) == 0),if ((b &amp; 1 &lt;&lt; j) == 0))<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.and,b &amp; 1 &lt;&lt; j)<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>20</SUB>>", "175": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>20</SUB>>", "177": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>21</SUB>>", "179": "<(LOCAL,int k: int)<SUB>22</SUB>>", "181": "<(IDENTIFIER,k,int k = 0)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>22</SUB>>", "185": "<(IDENTIFIER,n,k &lt; n)<SUB>22</SUB>>", "187": "<(IDENTIFIER,k,k++)<SUB>22</SUB>>", "189": "<(CONTROL_STRUCTURE,if ((b &amp; 1 &lt;&lt; k) == 0),if ((b &amp; 1 &lt;&lt; k) == 0))<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.and,b &amp; 1 &lt;&lt; k)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>23</SUB>>", "195": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>23</SUB>>", "197": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>24</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,pp[b][k])<SUB>25</SUB>>", "201": "<(IDENTIFIER,pp,pp[b][k] += aa[i][j] * pp[b ^ 1 &lt;&lt; j][k])<SUB>25</SUB>>", "203": "<(IDENTIFIER,k,pp[b][k] += aa[i][j] * pp[b ^ 1 &lt;&lt; j][k])<SUB>25</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,aa[i][j])<SUB>25</SUB>>", "207": "<(IDENTIFIER,aa,aa[i][j] * pp[b ^ 1 &lt;&lt; j][k])<SUB>25</SUB>>", "209": "<(IDENTIFIER,j,aa[i][j] * pp[b ^ 1 &lt;&lt; j][k])<SUB>25</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,pp[b ^ 1 &lt;&lt; j])<SUB>25</SUB>>", "213": "<(&lt;operator&gt;.xor,b ^ 1 &lt;&lt; j)<SUB>25</SUB>>", "215": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>25</SUB>>", "217": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>25</SUB>>", "219": "<(&lt;operator&gt;.assignmentPlus,pp[b][k] += aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,pp[b])<SUB>26</SUB>>", "223": "<(IDENTIFIER,b,pp[b][k] += aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "225": "<(&lt;operator&gt;.multiplication,aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,aa[j])<SUB>26</SUB>>", "229": "<(IDENTIFIER,j,aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "233": "<(IDENTIFIER,pp,aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "235": "<(IDENTIFIER,b,b ^ 1 &lt;&lt; i)<SUB>26</SUB>>", "237": "<(LITERAL,1,1 &lt;&lt; i)<SUB>26</SUB>>", "239": "<(IDENTIFIER,k,aa[j][i] * pp[b ^ 1 &lt;&lt; i][k])<SUB>26</SUB>>", "241": "<(&lt;operator&gt;.greaterThan,c &gt; 1)<SUB>30</SUB>>", "243": "<(LITERAL,1,c &gt; 1)<SUB>30</SUB>>", "245": "<(LOCAL,double p: double)<SUB>31</SUB>>", "247": "<(IDENTIFIER,p,double p = (double) c * (c - 1) / 2)<SUB>31</SUB>>", "249": "<(&lt;operator&gt;.multiplication,(double) c * (c - 1))<SUB>31</SUB>>", "251": "<(TYPE_REF,double,double)<SUB>31</SUB>>", "253": "<(&lt;operator&gt;.subtraction,c - 1)<SUB>31</SUB>>", "255": "<(LITERAL,1,c - 1)<SUB>31</SUB>>", "257": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>32</SUB>>", "259": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>32</SUB>>", "261": "<(LITERAL,0,int k = 0)<SUB>32</SUB>>", "263": "<(IDENTIFIER,k,k &lt; n)<SUB>32</SUB>>", "265": "<(&lt;operator&gt;.postIncrement,k++)<SUB>32</SUB>>", "267": "<(&lt;operator&gt;.assignmentDivision,pp[b][k] /= p)<SUB>33</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,pp[b])<SUB>33</SUB>>", "271": "<(IDENTIFIER,b,pp[b][k] /= p)<SUB>33</SUB>>", "273": "<(IDENTIFIER,p,pp[b][k] /= p)<SUB>33</SUB>>", "274": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>36</SUB>>", "276": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>36</SUB>>", "7": "<(IDENTIFIER,sb,new StringBuilder())<SUB>36</SUB>>", "279": "<(&lt;operator&gt;.assignment,int b = (1 &lt;&lt; n) - 1)<SUB>37</SUB>>", "281": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>37</SUB>>", "283": "<(LITERAL,1,1 &lt;&lt; n)<SUB>37</SUB>>", "285": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>37</SUB>>", "287": "<(LOCAL,int k: int)<SUB>38</SUB>>", "289": "<(IDENTIFIER,k,int k = 0)<SUB>38</SUB>>", "291": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>38</SUB>>", "293": "<(IDENTIFIER,n,k &lt; n)<SUB>38</SUB>>", "295": "<(IDENTIFIER,k,k++)<SUB>38</SUB>>", "297": "<(append,sb.append(pp[b][k]))<SUB>39</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,pp[b][k])<SUB>39</SUB>>", "301": "<(IDENTIFIER,pp,sb.append(pp[b][k]))<SUB>39</SUB>>", "303": "<(IDENTIFIER,k,sb.append(pp[b][k]))<SUB>39</SUB>>", "305": "<(&lt;operator&gt;.equals,k == n - 1)<SUB>39</SUB>>", "307": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>39</SUB>>", "309": "<(LITERAL,1,n - 1)<SUB>39</SUB>>", "311": "<(LITERAL,' ',k == n - 1 ? '\\n' : ' ')<SUB>39</SUB>>", "313": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "315": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "317": "<(MODIFIER,PUBLIC)>", "319": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}