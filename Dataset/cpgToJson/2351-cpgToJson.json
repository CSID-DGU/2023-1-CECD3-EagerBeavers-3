{"edges": [["24", "26"], ["24", "205"], ["24", "206"], ["24", "207"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "41"], ["26", "42"], ["26", "48"], ["26", "52"], ["26", "6"], ["26", "58"], ["26", "61"], ["26", "64"], ["26", "82"], ["26", "83"], ["26", "86"], ["26", "109"], ["26", "110"], ["26", "117"], ["26", "118"], ["26", "8"], ["26", "124"], ["26", "127"], ["26", "128"], ["26", "200"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "5"], ["61", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "104"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["127", "7"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "142"], ["138", "145"], ["138", "146"], ["138", "152"], ["138", "153"], ["138", "159"], ["138", "160"], ["138", "167"], ["138", "176"], ["138", "184"], ["138", "197"], ["139", "140"], ["139", "141"], ["142", "9"], ["142", "143"], ["143", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["184", "185"], ["184", "190"], ["184", "193"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["193", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["27", "34"], ["30", "46"], ["42", "50"], ["48", "55"], ["52", "60"], ["58", "62"], ["61", "66"], ["83", "88"], ["110", "122"], ["118", "126"], ["124", "127"], ["127", "130"], ["200", "207"], ["29", "27"], ["44", "42"], ["50", "48"], ["54", "52"], ["60", "58"], ["62", "61"], ["66", "69"], ["69", "75"], ["69", "83"], ["72", "69"], ["74", "72"], ["88", "91"], ["91", "101"], ["91", "113"], ["94", "91"], ["112", "110"], ["120", "118"], ["126", "124"], ["130", "133"], ["133", "141"], ["133", "203"], ["136", "133"], ["201", "200"], ["32", "39"], ["35", "30"], ["46", "44"], ["55", "54"], ["75", "80"], ["78", "74"], ["97", "106"], ["104", "94"], ["113", "112"], ["122", "120"], ["139", "143"], ["142", "150"], ["146", "157"], ["153", "163"], ["160", "172"], ["167", "178"], ["197", "136"], ["203", "201"], ["34", "32"], ["37", "35"], ["80", "78"], ["99", "97"], ["106", "104"], ["141", "139"], ["143", "142"], ["148", "146"], ["155", "153"], ["162", "160"], ["169", "167"], ["177", "182"], ["177", "186"], ["182", "186"], ["185", "190"], ["185", "194"], ["190", "197"], ["39", "37"], ["101", "99"], ["150", "148"], ["157", "155"], ["163", "162"], ["170", "169"], ["178", "177"], ["186", "185"], ["194", "197"], ["172", "170"], ["24", "29"], ["25", "207"], ["27", "207"], ["32", "207"], ["35", "207"], ["35", "207"], ["35", "207"], ["30", "207"], ["42", "207"], ["48", "207"], ["48", "207"], ["52", "207"], ["54", "207"], ["52", "207"], ["52", "207"], ["58", "207"], ["61", "207"], ["61", "207"], ["69", "207"], ["83", "207"], ["88", "207"], ["88", "207"], ["91", "207"], ["110", "207"], ["113", "207"], ["112", "207"], ["110", "207"], ["110", "207"], ["120", "207"], ["122", "207"], ["120", "207"], ["118", "207"], ["118", "207"], ["124", "207"], ["127", "207"], ["130", "207"], ["133", "207"], ["133", "207"], ["133", "207"], ["200", "207"], ["200", "207"], ["200", "207"], ["139", "207"], ["143", "207"], ["142", "207"], ["142", "207"], ["146", "207"], ["155", "207"], ["157", "207"], ["155", "207"], ["153", "207"], ["153", "207"], ["163", "207"], ["163", "207"], ["162", "207"], ["160", "207"], ["160", "207"], ["170", "207"], ["169", "207"], ["167", "207"], ["167", "207"], ["178", "207"], ["177", "207"], ["177", "207"], ["182", "207"], ["186", "207"], ["185", "207"], ["185", "207"], ["194", "207"], ["190", "207"], ["197", "207"], ["136", "207"], ["97", "207"], ["97", "207"], ["104", "207"], ["104", "207"], ["104", "207"], ["94", "207"], ["74", "207"], ["80", "207"], ["78", "207"], ["74", "207"], ["74", "207"], ["72", "207"], ["48", "207"], ["24", "25"], ["24", "27"], ["44", "42"], ["44", "42"], ["50", "48"], ["54", "52"], ["24", "58"], ["24", "83"], ["113", "110"], ["113", "110"], ["24", "110"], ["120", "118"], ["120", "118"], ["24", "124"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["58", "61"], ["24", "61"], ["62", "61"], ["24", "66"], ["78", "74"], ["78", "74"], ["69", "88"], ["24", "88"], ["124", "127"], ["24", "127"], ["24", "130"], ["127", "200"], ["197", "200"], ["24", "200"], ["24", "32"], ["24", "40"], ["24", "44"], ["46", "44"], ["24", "50"], ["42", "54"], ["24", "54"], ["46", "62"], ["24", "62"], ["66", "69"], ["72", "69"], ["24", "69"], ["42", "69"], ["69", "72"], ["24", "72"], ["88", "91"], ["94", "91"], ["24", "91"], ["91", "94"], ["24", "94"], ["99", "97"], ["99", "97"], ["113", "112"], ["113", "112"], ["24", "112"], ["44", "120"], ["78", "120"], ["24", "120"], ["122", "120"], ["130", "133"], ["136", "133"], ["24", "133"], ["118", "133"], ["133", "136"], ["24", "136"], ["24", "139"], ["148", "146"], ["148", "146"], ["155", "153"], ["155", "153"], ["163", "160"], ["163", "160"], ["24", "160"], ["169", "167"], ["169", "167"], ["32", "35"], ["24", "35"], ["30", "46"], ["24", "46"], ["42", "55"], ["24", "55"], ["44", "78"], ["24", "78"], ["80", "78"], ["83", "97"], ["24", "97"], ["99", "104"], ["24", "104"], ["52", "104"], ["99", "104"], ["83", "113"], ["97", "113"], ["24", "113"], ["62", "122"], ["24", "122"], ["139", "142"], ["24", "142"], ["143", "142"], ["194", "197"], ["190", "197"], ["24", "197"], ["61", "80"], ["24", "80"], ["104", "99"], ["24", "99"], ["52", "99"], ["104", "99"], ["74", "99"], ["122", "143"], ["24", "143"], ["120", "148"], ["155", "148"], ["24", "148"], ["150", "148"], ["148", "155"], ["24", "155"], ["157", "155"], ["163", "162"], ["163", "162"], ["24", "162"], ["170", "169"], ["170", "169"], ["24", "169"], ["178", "177"], ["178", "177"], ["24", "177"], ["110", "182"], ["186", "182"], ["24", "182"], ["186", "185"], ["186", "185"], ["24", "185"], ["127", "190"], ["197", "190"], ["24", "190"], ["142", "150"], ["24", "150"], ["150", "157"], ["24", "157"], ["153", "163"], ["24", "163"], ["146", "163"], ["172", "170"], ["24", "170"], ["172", "170"], ["167", "178"], ["24", "178"], ["110", "186"], ["182", "186"], ["24", "186"], ["127", "194"], ["197", "194"], ["24", "194"], ["160", "172"], ["24", "172"], ["69", "75"], ["69", "72"], ["69", "69"], ["69", "74"], ["69", "80"], ["69", "78"], ["91", "94"], ["91", "99"], ["91", "104"], ["91", "106"], ["91", "97"], ["91", "91"], ["91", "101"], ["133", "160"], ["133", "141"], ["133", "167"], ["133", "136"], ["133", "146"], ["133", "169"], ["133", "163"], ["133", "178"], ["133", "142"], ["133", "150"], ["133", "185"], ["133", "197"], ["133", "162"], ["133", "153"], ["133", "170"], ["133", "157"], ["133", "148"], ["133", "143"], ["133", "177"], ["133", "155"], ["133", "186"], ["133", "139"], ["133", "133"], ["133", "172"], ["177", "182"], ["185", "190"], ["185", "194"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "44": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "46": "<(readLine,readLine())<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.assignment,bit = new int[1505])<SUB>4</SUB>>", "50": "<(&lt;operator&gt;.alloc,new int[1505])>", "52": "<(&lt;operator&gt;.assignment,array = new int[n + 1])<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "56": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>6</SUB>>", "59": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "61": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "62": "<(readLine,readLine())<SUB>6</SUB>>", "64": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "68": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "70": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "74": "<(&lt;operator&gt;.assignment,array[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "76": "<(IDENTIFIER,array,array[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "78": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "80": "<(nextToken,nextToken())<SUB>8</SUB>>", "82": "<(LOCAL,long ans: long)<SUB>9</SUB>>", "84": "<(IDENTIFIER,ans,long ans = 0)<SUB>9</SUB>>", "86": "<(CONTROL_STRUCTURE,for (int i = n; Some(i &gt;= 1); i--),for (int i = n; Some(i &gt;= 1); i--))<SUB>10</SUB>>", "88": "<(&lt;operator&gt;.assignment,int i = n)<SUB>10</SUB>>", "90": "<(IDENTIFIER,n,int i = n)<SUB>10</SUB>>", "92": "<(IDENTIFIER,i,i &gt;= 1)<SUB>10</SUB>>", "94": "<(&lt;operator&gt;.postDecrement,i--)<SUB>10</SUB>>", "96": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "98": "<(IDENTIFIER,ans,ans += read(array[i]))<SUB>11</SUB>>", "100": "<(IDENTIFIER,this,read(array[i]))<SUB>11</SUB>>", "102": "<(IDENTIFIER,array,read(array[i]))<SUB>11</SUB>>", "104": "<(update,update(array[i]))<SUB>12</SUB>>", "106": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>12</SUB>>", "108": "<(IDENTIFIER,i,update(array[i]))<SUB>12</SUB>>", "110": "<(&lt;operator&gt;.assignment,long val = (ans &amp; 1) + 1000_000)<SUB>14</SUB>>", "112": "<(&lt;operator&gt;.addition,(ans &amp; 1) + 1000_000)<SUB>14</SUB>>", "114": "<(IDENTIFIER,ans,ans &amp; 1)<SUB>14</SUB>>", "116": "<(LITERAL,1000_000,(ans &amp; 1) + 1000_000)<SUB>14</SUB>>", "118": "<(&lt;operator&gt;.assignment,int m = parseInt(br.readLine()))<SUB>15</SUB>>", "120": "<(parseInt,parseInt(br.readLine()))<SUB>15</SUB>>", "122": "<(readLine,readLine())<SUB>15</SUB>>", "8": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>16</SUB>>", "125": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>16</SUB>>", "127": "<(&lt;init&gt;,new StringBuilder())<SUB>16</SUB>>", "128": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= m); i++),for (int i = 1; Some(i &lt;= m); i++))<SUB>17</SUB>>", "130": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>17</SUB>>", "132": "<(LITERAL,1,int i = 1)<SUB>17</SUB>>", "134": "<(IDENTIFIER,i,i &lt;= m)<SUB>17</SUB>>", "136": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "138": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "140": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>18</SUB>>", "142": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>18</SUB>>", "143": "<(readLine,readLine())<SUB>18</SUB>>", "145": "<(LOCAL,int l: int)<SUB>19</SUB>>", "147": "<(IDENTIFIER,l,int l = parseInt(st.nextToken()))<SUB>19</SUB>>", "149": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>19</SUB>>", "151": "<(IDENTIFIER,st,nextToken())<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.assignment,int r = parseInt(st.nextToken()))<SUB>20</SUB>>", "155": "<(parseInt,parseInt(st.nextToken()))<SUB>20</SUB>>", "157": "<(nextToken,nextToken())<SUB>20</SUB>>", "159": "<(LOCAL,long temp: long)<SUB>21</SUB>>", "161": "<(IDENTIFIER,temp,long temp = r - l + 1)<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.subtraction,r - l)<SUB>21</SUB>>", "165": "<(IDENTIFIER,l,r - l)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.assignment,temp = temp * (temp - 1) / 2)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.division,temp * (temp - 1) / 2)<SUB>22</SUB>>", "171": "<(IDENTIFIER,temp,temp * (temp - 1))<SUB>22</SUB>>", "173": "<(IDENTIFIER,temp,temp - 1)<SUB>22</SUB>>", "175": "<(LITERAL,2,temp * (temp - 1) / 2)<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.equals,(temp &amp; 1) == 1)<SUB>23</SUB>>", "179": "<(IDENTIFIER,temp,temp &amp; 1)<SUB>23</SUB>>", "181": "<(LITERAL,1,(temp &amp; 1) == 1)<SUB>23</SUB>>", "183": "<(IDENTIFIER,val,--val)<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.equals,(val &amp; 1) == 1)<SUB>24</SUB>>", "187": "<(IDENTIFIER,val,val &amp; 1)<SUB>24</SUB>>", "189": "<(LITERAL,1,(val &amp; 1) == 1)<SUB>24</SUB>>", "191": "<(IDENTIFIER,sb,sb.append(&quot;odd&quot;))<SUB>24</SUB>>", "193": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "195": "<(IDENTIFIER,sb,sb.append(&quot;even&quot;))<SUB>25</SUB>>", "197": "<(append,sb.append('\\n'))<SUB>26</SUB>>", "199": "<(LITERAL,'\\n',sb.append('\\n'))<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "203": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "205": "<(MODIFIER,PUBLIC)>", "207": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}