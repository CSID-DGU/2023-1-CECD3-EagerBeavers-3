{"edges": [["21", "23"], ["21", "119"], ["21", "120"], ["21", "121"], ["23", "6"], ["23", "24"], ["23", "4"], ["23", "27"], ["23", "30"], ["23", "33"], ["23", "51"], ["23", "54"], ["23", "72"], ["23", "73"], ["23", "77"], ["23", "115"], ["23", "117"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["33", "3"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "50"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["51", "52"], ["51", "53"], ["54", "5"], ["54", "55"], ["55", "56"], ["55", "59"], ["55", "71"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["61", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "81"], ["77", "84"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["85", "86"], ["85", "87"], ["85", "92"], ["85", "93"], ["85", "104"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "108"], ["104", "111"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["24", "27"], ["27", "32"], ["30", "37"], ["33", "53"], ["51", "58"], ["54", "75"], ["73", "78"], ["115", "117"], ["117", "121"], ["32", "30"], ["53", "51"], ["75", "73"], ["78", "81"], ["78", "89"], ["81", "115"], ["35", "43"], ["38", "33"], ["56", "64"], ["59", "54"], ["37", "35"], ["58", "56"], ["87", "97"], ["93", "105"], ["41", "48"], ["44", "38"], ["62", "69"], ["65", "59"], ["89", "87"], ["95", "93"], ["105", "108"], ["105", "112"], ["108", "115"], ["43", "41"], ["46", "44"], ["64", "62"], ["67", "65"], ["96", "101"], ["101", "95"], ["112", "115"], ["48", "46"], ["69", "67"], ["97", "96"], ["21", "24"], ["22", "121"], ["24", "121"], ["27", "121"], ["30", "121"], ["38", "121"], ["44", "121"], ["44", "121"], ["44", "121"], ["38", "121"], ["33", "121"], ["51", "121"], ["59", "121"], ["62", "121"], ["65", "121"], ["65", "121"], ["65", "121"], ["59", "121"], ["54", "121"], ["73", "121"], ["73", "121"], ["78", "121"], ["87", "121"], ["87", "121"], ["96", "121"], ["95", "121"], ["101", "121"], ["95", "121"], ["93", "121"], ["93", "121"], ["105", "121"], ["105", "121"], ["105", "121"], ["112", "121"], ["112", "121"], ["108", "121"], ["108", "121"], ["81", "121"], ["81", "121"], ["115", "121"], ["117", "121"], ["117", "121"], ["21", "22"], ["21", "24"], ["21", "27"], ["21", "30"], ["21", "51"], ["75", "73"], ["30", "33"], ["21", "33"], ["41", "33"], ["38", "33"], ["51", "54"], ["21", "54"], ["62", "54"], ["59", "54"], ["112", "115"], ["108", "115"], ["81", "115"], ["21", "115"], ["75", "117"], ["21", "117"], ["21", "35"], ["21", "50"], ["21", "56"], ["21", "71"], ["54", "75"], ["21", "75"], ["73", "78"], ["21", "78"], ["33", "81"], ["21", "81"], ["78", "81"], ["35", "38"], ["21", "38"], ["41", "38"], ["44", "38"], ["56", "59"], ["21", "59"], ["62", "59"], ["65", "59"], ["89", "87"], ["89", "87"], ["96", "93"], ["96", "93"], ["101", "93"], ["101", "93"], ["21", "41"], ["21", "49"], ["21", "62"], ["21", "70"], ["41", "44"], ["21", "44"], ["62", "65"], ["21", "65"], ["78", "89"], ["21", "89"], ["96", "95"], ["96", "95"], ["101", "95"], ["101", "95"], ["87", "105"], ["21", "105"], ["93", "105"], ["33", "108"], ["21", "108"], ["105", "108"], ["97", "96"], ["97", "96"], ["21", "96"], ["97", "101"], ["21", "101"], ["33", "112"], ["21", "112"], ["105", "112"], ["89", "97"], ["21", "97"], ["78", "96"], ["78", "89"], ["78", "105"], ["78", "81"], ["78", "95"], ["78", "87"], ["78", "97"], ["78", "93"], ["78", "101"], ["105", "112"], ["105", "108"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = null)<SUB>2</SUB>>", "26": "<(LITERAL,null,ANY sc = null)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY pr = null)<SUB>3</SUB>>", "29": "<(LITERAL,null,ANY pr = null)<SUB>3</SUB>>", "31": "<(IDENTIFIER,pr,pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>5</SUB>>", "33": "<(&lt;init&gt;,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>5</SUB>>", "34": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "36": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "38": "<(&lt;init&gt;,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>5</SUB>>", "40": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "42": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "44": "<(&lt;init&gt;,new OutputStreamWriter(System.out))<SUB>5</SUB>>", "46": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "48": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "50": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "52": "<(IDENTIFIER,sc,sc = new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>6</SUB>>", "54": "<(&lt;init&gt;,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "59": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>6</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "63": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "65": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>6</SUB>>", "69": "<(FIELD_IDENTIFIER,in,in)<SUB>6</SUB>>", "71": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.assignment,long n = nextInt())<SUB>9</SUB>>", "75": "<(nextInt,nextInt())<SUB>9</SUB>>", "77": "<(CONTROL_STRUCTURE,if (n &gt; 0),if (n &gt; 0))<SUB>10</SUB>>", "79": "<(IDENTIFIER,n,n &gt; 0)<SUB>10</SUB>>", "81": "<(println,println(n))<SUB>10</SUB>>", "83": "<(IDENTIFIER,n,println(n))<SUB>10</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,long n1 = n / 10)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.division,n / 10)<SUB>12</SUB>>", "91": "<(LITERAL,10,n / 10)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,long n2 = n / 100 * 10 + n % 10)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.addition,n / 100 * 10 + n % 10)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.division,n / 100)<SUB>13</SUB>>", "99": "<(LITERAL,100,n / 100)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.modulo,n % 10)<SUB>13</SUB>>", "103": "<(LITERAL,10,n % 10)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.lessThan,n1 &lt; n2)<SUB>14</SUB>>", "107": "<(IDENTIFIER,n2,n1 &lt; n2)<SUB>14</SUB>>", "109": "<(IDENTIFIER,pr,println(n2))<SUB>14</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "113": "<(IDENTIFIER,pr,println(n1))<SUB>15</SUB>>", "115": "<(close,close())<SUB>18</SUB>>", "117": "<(close,close())<SUB>19</SUB>>", "119": "<(MODIFIER,PUBLIC)>", "121": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}