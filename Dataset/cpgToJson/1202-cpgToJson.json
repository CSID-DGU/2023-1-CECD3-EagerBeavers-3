{"edges": [["21", "23"], ["21", "121"], ["21", "122"], ["21", "123"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "65"], ["23", "66"], ["23", "71"], ["23", "76"], ["23", "87"], ["23", "88"], ["23", "99"], ["23", "113"], ["23", "116"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "112"], ["106", "107"], ["106", "108"], ["106", "109"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "63"], ["59", "68"], ["66", "73"], ["71", "77"], ["88", "102"], ["99", "113"], ["113", "119"], ["116", "123"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["68", "66"], ["73", "71"], ["77", "84"], ["77", "91"], ["90", "88"], ["101", "99"], ["117", "116"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["63", "61"], ["81", "86"], ["86", "123"], ["91", "96"], ["94", "90"], ["102", "109"], ["105", "101"], ["119", "117"], ["31", "29"], ["34", "32"], ["82", "81"], ["96", "94"], ["106", "105"], ["36", "34"], ["84", "82"], ["109", "106"], ["21", "26"], ["86", "123"], ["22", "123"], ["24", "123"], ["29", "123"], ["32", "123"], ["32", "123"], ["32", "123"], ["27", "123"], ["38", "123"], ["42", "123"], ["41", "123"], ["41", "123"], ["45", "123"], ["52", "123"], ["61", "123"], ["63", "123"], ["61", "123"], ["59", "123"], ["59", "123"], ["66", "123"], ["66", "123"], ["73", "123"], ["73", "123"], ["71", "123"], ["71", "123"], ["77", "123"], ["77", "123"], ["81", "123"], ["81", "123"], ["81", "123"], ["106", "123"], ["113", "123"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["68", "66"], ["68", "66"], ["73", "71"], ["73", "71"], ["91", "88"], ["91", "88"], ["94", "88"], ["94", "88"], ["101", "99"], ["101", "99"], ["21", "113"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["68", "71"], ["21", "71"], ["88", "99"], ["21", "99"], ["99", "113"], ["113", "116"], ["21", "116"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["54", "61"], ["21", "61"], ["63", "61"], ["45", "68"], ["21", "68"], ["52", "68"], ["66", "73"], ["21", "73"], ["59", "73"], ["71", "77"], ["21", "77"], ["21", "86"], ["91", "90"], ["91", "90"], ["94", "90"], ["94", "90"], ["102", "101"], ["102", "101"], ["105", "101"], ["105", "101"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["56", "63"], ["21", "63"], ["68", "81"], ["21", "81"], ["77", "91"], ["21", "91"], ["73", "91"], ["73", "94"], ["21", "94"], ["96", "94"], ["96", "94"], ["21", "102"], ["96", "102"], ["106", "105"], ["106", "105"], ["106", "105"], ["21", "105"], ["91", "96"], ["21", "96"], ["21", "106"], ["109", "106"], ["109", "106"], ["91", "109"], ["21", "109"], ["102", "109"], ["77", "94"], ["77", "96"], ["77", "113"], ["77", "105"], ["77", "116"], ["77", "99"], ["77", "81"], ["77", "84"], ["77", "102"], ["77", "88"], ["77", "119"], ["77", "117"], ["77", "106"], ["77", "91"], ["77", "82"], ["77", "101"], ["77", "90"], ["77", "109"], ["77", "86"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "43": "<(IDENTIFIER,f,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,long n = parseLong(st.nextToken()))<SUB>4</SUB>>", "47": "<(parseLong,parseLong(st.nextToken()))<SUB>4</SUB>>", "49": "<(nextToken,nextToken())<SUB>4</SUB>>", "51": "<(LOCAL,long m: long)<SUB>5</SUB>>", "53": "<(IDENTIFIER,m,long m = parseLong(st.nextToken()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,long k = parseLong(st.nextToken()))<SUB>6</SUB>>", "61": "<(parseLong,parseLong(st.nextToken()))<SUB>6</SUB>>", "63": "<(nextToken,nextToken())<SUB>6</SUB>>", "65": "<(LOCAL,long d: long)<SUB>7</SUB>>", "67": "<(IDENTIFIER,d,long d = n - m)<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,n - m)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignmentMinus,n -= d * k)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.multiplication,d * k)<SUB>8</SUB>>", "75": "<(IDENTIFIER,k,d * k)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,n &lt;= 0)<SUB>9</SUB>>", "81": "<(println,System.out.println(m))<SUB>11</SUB>>", "83": "<(IDENTIFIER,System,System.out.println(m))<SUB>11</SUB>>", "85": "<(IDENTIFIER,m,System.out.println(m))<SUB>11</SUB>>", "87": "<(LOCAL,long sum: long)<SUB>14</SUB>>", "89": "<(IDENTIFIER,sum,long sum = (n % k) + d * (k - 1))<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.modulo,n % k)<SUB>14</SUB>>", "93": "<(IDENTIFIER,k,n % k)<SUB>14</SUB>>", "95": "<(IDENTIFIER,d,d * (k - 1))<SUB>14</SUB>>", "97": "<(IDENTIFIER,k,k - 1)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignmentPlus,sum += 2 * k * (pow(2, n / k) - 1))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.multiplication,2 * k * (pow(2, n / k) - 1))<SUB>15</SUB>>", "103": "<(LITERAL,2,2 * k)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.subtraction,pow(2, n / k) - 1)<SUB>15</SUB>>", "107": "<(IDENTIFIER,this,pow(2, n / k))<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.division,n / k)<SUB>15</SUB>>", "111": "<(IDENTIFIER,k,n / k)<SUB>15</SUB>>", "113": "<(&lt;operators&gt;.assignmentModulo,sum %= mod)<SUB>16</SUB>>", "115": "<(IDENTIFIER,mod,sum %= mod)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}