{"edges": [["17", "18"], ["17", "19"], ["17", "106"], ["17", "107"], ["17", "108"], ["19", "20"], ["19", "25"], ["19", "26"], ["19", "27"], ["19", "28"], ["19", "29"], ["19", "33"], ["19", "37"], ["19", "41"], ["19", "45"], ["19", "46"], ["19", "47"], ["19", "50"], ["19", "55"], ["19", "90"], ["19", "101"], ["20", "21"], ["20", "22"], ["22", "23"], ["22", "24"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "61"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "70"], ["61", "71"], ["61", "79"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["73", "76"], ["73", "77"], ["73", "78"], ["79", "80"], ["79", "83"], ["79", "86"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "99"], ["91", "92"], ["91", "98"], ["92", "93"], ["92", "94"], ["92", "95"], ["92", "96"], ["92", "97"], ["99", "100"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["20", "31"], ["29", "35"], ["33", "39"], ["37", "43"], ["41", "47"], ["47", "52"], ["50", "58"], ["101", "108"], ["22", "20"], ["31", "29"], ["35", "33"], ["39", "37"], ["43", "41"], ["52", "50"], ["56", "66"], ["56", "92"], ["91", "99"], ["91", "104"], ["99", "104"], ["102", "101"], ["24", "22"], ["58", "56"], ["63", "73"], ["71", "80"], ["92", "91"], ["104", "102"], ["65", "63"], ["73", "71"], ["80", "83"], ["80", "87"], ["83", "58"], ["66", "65"], ["87", "58"], ["17", "24"], ["18", "108"], ["20", "108"], ["20", "108"], ["29", "108"], ["33", "108"], ["37", "108"], ["43", "108"], ["41", "108"], ["41", "108"], ["47", "108"], ["50", "108"], ["50", "108"], ["56", "108"], ["56", "108"], ["56", "108"], ["92", "108"], ["92", "108"], ["92", "108"], ["92", "108"], ["91", "108"], ["91", "108"], ["91", "108"], ["99", "108"], ["101", "108"], ["101", "108"], ["101", "108"], ["65", "108"], ["63", "108"], ["63", "108"], ["71", "108"], ["71", "108"], ["80", "108"], ["80", "108"], ["87", "108"], ["87", "108"], ["83", "108"], ["83", "108"], ["17", "18"], ["31", "29"], ["35", "33"], ["39", "37"], ["43", "41"], ["17", "47"], ["52", "50"], ["52", "50"], ["17", "20"], ["92", "101"], ["99", "101"], ["17", "101"], ["20", "31"], ["17", "31"], ["31", "35"], ["17", "35"], ["35", "39"], ["17", "39"], ["39", "43"], ["17", "43"], ["17", "52"], ["29", "52"], ["50", "56"], ["87", "56"], ["17", "56"], ["47", "56"], ["83", "56"], ["65", "63"], ["65", "63"], ["73", "71"], ["73", "71"], ["73", "71"], ["73", "71"], ["73", "71"], ["92", "91"], ["92", "91"], ["92", "91"], ["92", "91"], ["92", "91"], ["41", "91"], ["80", "91"], ["17", "91"], ["92", "99"], ["17", "99"], ["47", "58"], ["83", "58"], ["17", "58"], ["73", "83"], ["17", "83"], ["73", "92"], ["17", "92"], ["52", "92"], ["73", "92"], ["33", "92"], ["73", "92"], ["37", "92"], ["73", "92"], ["47", "92"], ["83", "92"], ["56", "65"], ["17", "65"], ["17", "73"], ["52", "73"], ["33", "73"], ["37", "73"], ["63", "73"], ["71", "80"], ["17", "80"], ["41", "80"], ["73", "87"], ["17", "87"], ["56", "66"], ["17", "66"], ["56", "80"], ["56", "58"], ["56", "73"], ["56", "66"], ["56", "71"], ["56", "56"], ["56", "63"], ["56", "65"], ["91", "99"], ["80", "83"], ["80", "87"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "21": "<(IDENTIFIER,input,init(System.in))<SUB>3</SUB>>", "23": "<(IDENTIFIER,System,init(System.in))<SUB>3</SUB>>", "25": "<(LOCAL,int n: int)<SUB>4</SUB>>", "27": "<(LOCAL,int y: int)<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "31": "<(nextInt,nextInt())<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int y = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int c = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,long lo: long)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,long lo = 0)<SUB>5</SUB>>", "49": "<(LITERAL,0,long lo = 0)<SUB>5</SUB>>", "51": "<(IDENTIFIER,hi,long hi = 2 * n)<SUB>5</SUB>>", "53": "<(LITERAL,2,2 * n)<SUB>5</SUB>>", "55": "<(CONTROL_STRUCTURE,while (hi &gt; lo + 1),while (hi &gt; lo + 1))<SUB>6</SUB>>", "57": "<(IDENTIFIER,hi,hi &gt; lo + 1)<SUB>6</SUB>>", "59": "<(IDENTIFIER,lo,lo + 1)<SUB>6</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,long mid = (hi + lo) / 2)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.division,(hi + lo) / 2)<SUB>8</SUB>>", "67": "<(IDENTIFIER,hi,hi + lo)<SUB>8</SUB>>", "69": "<(LITERAL,2,(hi + lo) / 2)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,long covered = go(n, x, y, mid))<SUB>9</SUB>>", "73": "<(go,go(n, x, y, mid))<SUB>9</SUB>>", "75": "<(IDENTIFIER,n,go(n, x, y, mid))<SUB>9</SUB>>", "77": "<(IDENTIFIER,y,go(n, x, y, mid))<SUB>9</SUB>>", "79": "<(CONTROL_STRUCTURE,if (covered &lt; c),if (covered &lt; c))<SUB>10</SUB>>", "81": "<(IDENTIFIER,covered,covered &lt; c)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,lo = mid)<SUB>11</SUB>>", "85": "<(IDENTIFIER,mid,lo = mid)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>12</SUB>>", "89": "<(IDENTIFIER,mid,hi = mid)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.lessThan,go(n, x, y, lo) &lt; c)<SUB>14</SUB>>", "93": "<(IDENTIFIER,this,go(n, x, y, lo))<SUB>14</SUB>>", "95": "<(IDENTIFIER,x,go(n, x, y, lo))<SUB>14</SUB>>", "97": "<(IDENTIFIER,lo,go(n, x, y, lo))<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,lo++)<SUB>14</SUB>>", "101": "<(println,System.out.println(lo))<SUB>15</SUB>>", "103": "<(IDENTIFIER,System,System.out.println(lo))<SUB>15</SUB>>", "105": "<(IDENTIFIER,lo,System.out.println(lo))<SUB>15</SUB>>", "107": "<(MODIFIER,STATIC)>"}}