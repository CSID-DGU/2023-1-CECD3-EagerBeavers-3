{"edges": [["17", "18"], ["17", "19"], ["17", "102"], ["17", "103"], ["17", "104"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "45"], ["19", "46"], ["19", "50"], ["19", "51"], ["19", "54"], ["19", "97"], ["19", "100"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["30", "35"], ["30", "38"], ["30", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "39"], ["40", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "76"], ["66", "67"], ["66", "71"], ["67", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "79"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "86"], ["79", "89"], ["79", "92"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["100", "101"], ["21", "28"], ["26", "32"], ["46", "51"], ["51", "56"], ["97", "100"], ["100", "104"], ["23", "21"], ["28", "26"], ["32", "35"], ["35", "43"], ["35", "48"], ["38", "35"], ["40", "38"], ["48", "46"], ["56", "59"], ["59", "68"], ["59", "97"], ["62", "59"], ["41", "40"], ["43", "41"], ["66", "77"], ["66", "62"], ["67", "66"], ["67", "72"], ["71", "66"], ["77", "83"], ["68", "67"], ["72", "71"], ["81", "86"], ["86", "93"], ["86", "62"], ["89", "86"], ["92", "89"], ["83", "81"], ["93", "92"], ["17", "23"], ["18", "104"], ["23", "104"], ["21", "104"], ["21", "104"], ["26", "104"], ["26", "104"], ["26", "104"], ["32", "104"], ["35", "104"], ["35", "104"], ["46", "104"], ["46", "104"], ["46", "104"], ["51", "104"], ["56", "104"], ["59", "104"], ["59", "104"], ["97", "104"], ["97", "104"], ["100", "104"], ["100", "104"], ["67", "104"], ["66", "104"], ["71", "104"], ["66", "104"], ["66", "104"], ["77", "104"], ["81", "104"], ["81", "104"], ["86", "104"], ["86", "104"], ["62", "104"], ["92", "104"], ["92", "104"], ["89", "104"], ["43", "104"], ["40", "104"], ["40", "104"], ["38", "104"], ["17", "18"], ["23", "21"], ["28", "26"], ["48", "46"], ["17", "51"], ["17", "32"], ["17", "56"], ["17", "97"], ["51", "97"], ["77", "97"], ["97", "100"], ["17", "100"], ["17", "23"], ["17", "28"], ["32", "35"], ["38", "35"], ["17", "35"], ["21", "35"], ["35", "38"], ["17", "38"], ["26", "40"], ["17", "48"], ["56", "59"], ["62", "59"], ["17", "59"], ["59", "62"], ["17", "62"], ["23", "43"], ["17", "43"], ["67", "66"], ["71", "66"], ["71", "66"], ["46", "67"], ["26", "71"], ["17", "71"], ["51", "77"], ["17", "77"], ["59", "81"], ["17", "81"], ["17", "89"], ["59", "89"], ["17", "92"], ["81", "86"], ["89", "86"], ["17", "86"], ["86", "89"], ["59", "83"], ["17", "83"], ["35", "38"], ["35", "41"], ["35", "40"], ["35", "35"], ["35", "43"], ["59", "68"], ["59", "66"], ["59", "67"], ["59", "59"], ["59", "62"], ["66", "77"], ["66", "83"], ["66", "81"], ["66", "86"], ["67", "71"], ["67", "72"], ["86", "89"], ["86", "92"], ["86", "93"], ["86", "86"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] arr: int[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,arr,int[] arr = new int[101])<SUB>3</SUB>>", "29": "<(LITERAL,101,new int[101])<SUB>3</SUB>>", "31": "<(LOCAL,int i: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,i,int i = 0)<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,i &lt; n)<SUB>4</SUB>>", "39": "<(IDENTIFIER,i,i++)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,arr[sc.nextInt()])<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,boolean[] vis: boolean[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,vis,boolean[] vis = new boolean[101])<SUB>6</SUB>>", "49": "<(LITERAL,101,new boolean[101])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int c = 0)<SUB>7</SUB>>", "55": "<(LOCAL,int i: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,int i = 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 100)<SUB>8</SUB>>", "61": "<(LITERAL,100,i &lt;= 100)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "65": "<(CONTROL_STRUCTURE,if (!vis[i] &amp;&amp; arr[i] &gt; 0),if (!vis[i] &amp;&amp; arr[i] &gt; 0))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.logicalNot,!vis[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,vis,!vis[i])<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,arr[i] &gt; 0)<SUB>9</SUB>>", "73": "<(IDENTIFIER,arr,arr[i] &gt; 0)<SUB>9</SUB>>", "75": "<(LITERAL,0,arr[i] &gt; 0)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,c++)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = i + i; Some(j &lt;= 100); j += i),for (int j = i + i; Some(j &lt;= 100); j += i))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = i + i)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.addition,i + i)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i + i)<SUB>11</SUB>>", "87": "<(IDENTIFIER,j,j &lt;= 100)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignmentPlus,j += i)<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,j += i)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,vis[j])<SUB>12</SUB>>", "95": "<(IDENTIFIER,j,vis[j] = true)<SUB>12</SUB>>", "97": "<(println,println(c))<SUB>15</SUB>>", "99": "<(IDENTIFIER,c,println(c))<SUB>15</SUB>>", "101": "<(IDENTIFIER,pw,flush())<SUB>16</SUB>>", "103": "<(MODIFIER,STATIC)>"}}