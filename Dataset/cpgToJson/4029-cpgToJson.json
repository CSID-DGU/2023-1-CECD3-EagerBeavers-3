{"edges": [["21", "23"], ["21", "261"], ["21", "262"], ["21", "263"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "49"], ["23", "50"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "57"], ["23", "61"], ["23", "62"], ["23", "66"], ["23", "67"], ["23", "71"], ["23", "72"], ["23", "75"], ["23", "76"], ["23", "79"], ["23", "80"], ["23", "83"], ["23", "107"], ["23", "108"], ["23", "115"], ["23", "122"], ["23", "256"], ["23", "259"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "48"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "42"], ["38", "47"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "87"], ["83", "90"], ["83", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "99"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "106"], ["104", "105"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "126"], ["122", "131"], ["122", "133"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "200"], ["133", "201"], ["133", "204"], ["133", "228"], ["134", "135"], ["134", "138"], ["134", "141"], ["134", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "148"], ["144", "151"], ["144", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "168"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["168", "169"], ["169", "170"], ["169", "181"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "199"], ["182", "183"], ["182", "194"], ["183", "184"], ["183", "191"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "208"], ["204", "211"], ["204", "213"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["214", "215"], ["214", "222"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["222", "223"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["232", "233"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "255"], ["236", "237"], ["236", "250"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["256", "257"], ["256", "258"], ["259", "260"], ["24", "27"], ["27", "30"], ["28", "35"], ["31", "54"], ["52", "59"], ["57", "64"], ["62", "69"], ["67", "72"], ["72", "76"], ["76", "80"], ["80", "84"], ["108", "117"], ["115", "123"], ["256", "259"], ["259", "263"], ["26", "24"], ["30", "28"], ["54", "52"], ["59", "57"], ["64", "62"], ["69", "67"], ["84", "87"], ["87", "94"], ["87", "111"], ["90", "87"], ["110", "108"], ["116", "115"], ["123", "128"], ["126", "135"], ["126", "256"], ["131", "128"], ["33", "41"], ["36", "31"], ["93", "100"], ["99", "90"], ["111", "110"], ["117", "116"], ["128", "126"], ["201", "205"], ["35", "33"], ["94", "97"], ["97", "93"], ["100", "104"], ["103", "99"], ["135", "138"], ["138", "145"], ["138", "201"], ["141", "138"], ["205", "208"], ["208", "218"], ["208", "229"], ["211", "208"], ["229", "241"], ["229", "131"], ["39", "46"], ["42", "36"], ["104", "103"], ["233", "131"], ["41", "39"], ["44", "42"], ["145", "148"], ["148", "157"], ["148", "141"], ["151", "148"], ["215", "225"], ["215", "211"], ["235", "233"], ["46", "44"], ["216", "215"], ["223", "211"], ["236", "235"], ["155", "175"], ["155", "151"], ["218", "216"], ["225", "223"], ["237", "251"], ["250", "236"], ["156", "155"], ["156", "164"], ["161", "155"], ["169", "151"], ["238", "246"], ["245", "237"], ["251", "250"], ["157", "156"], ["162", "161"], ["170", "188"], ["181", "169"], ["240", "238"], ["246", "245"], ["164", "162"], ["171", "178"], ["178", "170"], ["182", "181"], ["241", "240"], ["173", "171"], ["183", "195"], ["194", "182"], ["175", "173"], ["184", "191"], ["191", "183"], ["195", "194"], ["186", "184"], ["188", "186"], ["21", "26"], ["22", "263"], ["24", "263"], ["27", "263"], ["28", "263"], ["36", "263"], ["39", "263"], ["42", "263"], ["42", "263"], ["42", "263"], ["36", "263"], ["31", "263"], ["52", "263"], ["57", "263"], ["59", "263"], ["57", "263"], ["57", "263"], ["62", "263"], ["62", "263"], ["67", "263"], ["67", "263"], ["67", "263"], ["72", "263"], ["72", "263"], ["76", "263"], ["76", "263"], ["80", "263"], ["87", "263"], ["108", "263"], ["108", "263"], ["108", "263"], ["115", "263"], ["115", "263"], ["123", "263"], ["126", "263"], ["128", "263"], ["126", "263"], ["126", "263"], ["256", "263"], ["256", "263"], ["259", "263"], ["259", "263"], ["135", "263"], ["138", "263"], ["138", "263"], ["201", "263"], ["205", "263"], ["208", "263"], ["208", "263"], ["229", "263"], ["229", "263"], ["229", "263"], ["238", "263"], ["237", "263"], ["237", "263"], ["236", "263"], ["236", "263"], ["235", "263"], ["235", "263"], ["233", "263"], ["233", "263"], ["131", "263"], ["216", "263"], ["215", "263"], ["215", "263"], ["223", "263"], ["223", "263"], ["211", "263"], ["141", "263"], ["156", "263"], ["155", "263"], ["162", "263"], ["161", "263"], ["155", "263"], ["155", "263"], ["169", "263"], ["186", "263"], ["182", "263"], ["181", "263"], ["181", "263"], ["169", "263"], ["169", "263"], ["151", "263"], ["93", "263"], ["93", "263"], ["99", "263"], ["104", "263"], ["103", "263"], ["99", "263"], ["99", "263"], ["90", "263"], ["21", "22"], ["21", "24"], ["21", "28"], ["54", "52"], ["59", "57"], ["64", "62"], ["69", "67"], ["21", "72"], ["21", "76"], ["21", "80"], ["110", "108"], ["110", "108"], ["21", "115"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["39", "31"], ["36", "31"], ["21", "84"], ["21", "123"], ["31", "256"], ["21", "256"], ["80", "256"], ["233", "256"], ["256", "259"], ["21", "259"], ["21", "33"], ["21", "48"], ["27", "54"], ["21", "54"], ["54", "59"], ["21", "59"], ["52", "64"], ["21", "64"], ["64", "69"], ["21", "69"], ["84", "87"], ["90", "87"], ["21", "87"], ["69", "87"], ["87", "90"], ["21", "90"], ["97", "93"], ["103", "99"], ["103", "99"], ["111", "110"], ["111", "110"], ["21", "110"], ["123", "126"], ["131", "126"], ["21", "126"], ["128", "126"], ["128", "126"], ["126", "131"], ["216", "131"], ["162", "131"], ["186", "131"], ["21", "131"], ["21", "201"], ["33", "36"], ["21", "36"], ["39", "36"], ["42", "36"], ["21", "111"], ["87", "111"], ["21", "128"], ["111", "128"], ["208", "128"], ["21", "135"], ["21", "205"], ["21", "39"], ["21", "47"], ["59", "97"], ["104", "97"], ["21", "97"], ["104", "103"], ["21", "103"], ["135", "138"], ["141", "138"], ["21", "138"], ["138", "141"], ["156", "141"], ["21", "141"], ["205", "208"], ["211", "208"], ["21", "208"], ["128", "208"], ["148", "208"], ["218", "211"], ["21", "211"], ["201", "229"], ["223", "229"], ["21", "229"], ["57", "229"], ["235", "233"], ["235", "233"], ["39", "42"], ["21", "42"], ["97", "104"], ["21", "104"], ["21", "145"], ["145", "148"], ["151", "148"], ["21", "148"], ["128", "148"], ["148", "151"], ["164", "151"], ["188", "151"], ["21", "151"], ["216", "215"], ["216", "215"], ["21", "215"], ["62", "223"], ["80", "235"], ["233", "235"], ["21", "235"], ["76", "235"], ["181", "235"], ["126", "216"], ["162", "216"], ["186", "216"], ["21", "216"], ["218", "216"], ["218", "216"], ["201", "223"], ["21", "223"], ["80", "236"], ["233", "236"], ["21", "236"], ["156", "155"], ["156", "155"], ["161", "155"], ["161", "155"], ["181", "169"], ["181", "169"], ["21", "218"], ["208", "218"], ["80", "237"], ["233", "237"], ["21", "237"], ["67", "156"], ["138", "156"], ["21", "156"], ["162", "161"], ["162", "161"], ["21", "161"], ["80", "238"], ["233", "238"], ["21", "238"], ["126", "162"], ["186", "162"], ["21", "162"], ["164", "162"], ["164", "162"], ["169", "181"], ["76", "181"], ["235", "181"], ["21", "181"], ["21", "164"], ["148", "164"], ["169", "182"], ["126", "173"], ["162", "173"], ["186", "173"], ["21", "173"], ["175", "173"], ["175", "173"], ["21", "175"], ["148", "175"], ["164", "175"], ["173", "186"], ["21", "186"], ["188", "186"], ["188", "186"], ["21", "188"], ["175", "188"], ["87", "94"], ["87", "103"], ["87", "104"], ["87", "87"], ["87", "97"], ["87", "93"], ["87", "90"], ["87", "100"], ["87", "99"], ["126", "128"], ["126", "131"], ["126", "138"], ["126", "208"], ["126", "201"], ["126", "205"], ["126", "126"], ["126", "229"], ["126", "135"], ["138", "145"], ["138", "138"], ["138", "148"], ["138", "141"], ["208", "215"], ["208", "208"], ["208", "211"], ["208", "216"], ["208", "218"], ["229", "240"], ["229", "245"], ["229", "238"], ["229", "246"], ["229", "233"], ["229", "235"], ["229", "236"], ["229", "237"], ["229", "251"], ["229", "241"], ["229", "250"], ["148", "151"], ["148", "148"], ["148", "155"], ["148", "157"], ["148", "156"], ["215", "225"], ["215", "223"], ["155", "188"], ["155", "169"], ["155", "178"], ["155", "170"], ["155", "181"], ["155", "191"], ["155", "195"], ["155", "184"], ["155", "173"], ["155", "194"], ["155", "182"], ["155", "186"], ["155", "171"], ["155", "183"], ["155", "175"], ["156", "161"], ["156", "162"], ["156", "164"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Reader())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Reader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Reader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj2,new BufferedWriter(new OutputStreamWriter(System.out)))>", "39": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,$obj1,new OutputStreamWriter(System.out))>", "45": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "49": "<(LOCAL,int i: int)<SUB>4</SUB>>", "51": "<(LOCAL,int n: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.assignment,int tt = nextInt())<SUB>6</SUB>>", "59": "<(nextInt,nextInt())<SUB>6</SUB>>", "61": "<(LOCAL,int[] t: int[])<SUB>7</SUB>>", "63": "<(IDENTIFIER,t,int[] t = new int[n])<SUB>7</SUB>>", "65": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] g = new int[n])<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[n])>", "71": "<(LOCAL,int last: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,last,int last = 0)<SUB>9</SUB>>", "75": "<(LOCAL,int M: int)<SUB>10</SUB>>", "77": "<(IDENTIFIER,M,int M = 1000000007)<SUB>10</SUB>>", "79": "<(LOCAL,long sum: long)<SUB>11</SUB>>", "81": "<(IDENTIFIER,sum,long sum = 0)<SUB>11</SUB>>", "83": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,i = 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,t[i] = nextInt())<SUB>13</SUB>>", "95": "<(IDENTIFIER,t,t[i] = nextInt())<SUB>13</SUB>>", "97": "<(nextInt,nextInt())<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,g[i] = sc.nextInt() - 1)<SUB>14</SUB>>", "101": "<(IDENTIFIER,g,g[i] = sc.nextInt() - 1)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>14</SUB>>", "105": "<(IDENTIFIER,sc,nextInt())<SUB>14</SUB>>", "107": "<(LOCAL,int[][] d: int[][])<SUB>16</SUB>>", "109": "<(IDENTIFIER,d,int[][] d = new int[1 &lt;&lt; n][4])<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>16</SUB>>", "113": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,d[0][3] = 1)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,d[0])<SUB>17</SUB>>", "119": "<(LITERAL,0,d[0][3] = 1)<SUB>17</SUB>>", "121": "<(LITERAL,1,d[0][3] = 1)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,i = 0)<SUB>18</SUB>>", "125": "<(LITERAL,0,i = 0)<SUB>18</SUB>>", "127": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>18</SUB>>", "129": "<(LITERAL,1,1 &lt;&lt; n)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,last = 0)<SUB>19</SUB>>", "137": "<(LITERAL,0,last = 0)<SUB>19</SUB>>", "139": "<(IDENTIFIER,last,last &lt; 4)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,last++)<SUB>19</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.assignment,j = 0)<SUB>20</SUB>>", "147": "<(LITERAL,0,j = 0)<SUB>20</SUB>>", "149": "<(IDENTIFIER,j,j &lt; n)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,j++)<SUB>20</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.logicalAnd,g[j] != last &amp;&amp; ((i &amp; (1 &lt;&lt; j))) == 0)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>21</SUB>>", "159": "<(IDENTIFIER,j,g[j] != last)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.equals,((i &amp; (1 &lt;&lt; j))) == 0)<SUB>21</SUB>>", "163": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; j))<SUB>21</SUB>>", "165": "<(LITERAL,1,1 &lt;&lt; j)<SUB>21</SUB>>", "167": "<(LITERAL,0,((i &amp; (1 &lt;&lt; j))) == 0)<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.assignment,d[i ^ (1 &lt;&lt; j)][g[j]] = (d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last]) % M)<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,d[i ^ (1 &lt;&lt; j)])<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.xor,i ^ (1 &lt;&lt; j))<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>22</SUB>>", "177": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>22</SUB>>", "179": "<(IDENTIFIER,g,d[i ^ (1 &lt;&lt; j)][g[j]] = (d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last]) % M)<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.modulo,(d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last]) % M)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,d[i ^ (1 &lt;&lt; j)][g[j]])<SUB>22</SUB>>", "185": "<(IDENTIFIER,d,d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last])<SUB>22</SUB>>", "187": "<(IDENTIFIER,i,i ^ (1 &lt;&lt; j))<SUB>22</SUB>>", "189": "<(LITERAL,1,1 &lt;&lt; j)<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>22</SUB>>", "193": "<(IDENTIFIER,j,d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last])<SUB>22</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>22</SUB>>", "197": "<(IDENTIFIER,i,d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last])<SUB>22</SUB>>", "199": "<(IDENTIFIER,M,(d[i ^ (1 &lt;&lt; j)][g[j]] + d[i][last]) % M)<SUB>22</SUB>>", "201": "<(&lt;operator&gt;.assignment,int dur = 0)<SUB>27</SUB>>", "203": "<(LITERAL,0,int dur = 0)<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.assignment,j = 0)<SUB>28</SUB>>", "207": "<(LITERAL,0,j = 0)<SUB>28</SUB>>", "209": "<(IDENTIFIER,j,j &lt; n)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.greaterThan,(i &amp; (1 &lt;&lt; j)) &gt; 0)<SUB>29</SUB>>", "217": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; j))<SUB>29</SUB>>", "219": "<(LITERAL,1,1 &lt;&lt; j)<SUB>29</SUB>>", "221": "<(LITERAL,0,(i &amp; (1 &lt;&lt; j)) &gt; 0)<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.assignmentPlus,dur += t[j])<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,t[j])<SUB>30</SUB>>", "227": "<(IDENTIFIER,j,dur += t[j])<SUB>30</SUB>>", "229": "<(&lt;operator&gt;.equals,dur == tt)<SUB>33</SUB>>", "231": "<(IDENTIFIER,tt,dur == tt)<SUB>33</SUB>>", "233": "<(&lt;operator&gt;.assignment,sum = (sum + d[i][0] + d[i][1] + d[i][2]) % M)<SUB>35</SUB>>", "235": "<(&lt;operator&gt;.modulo,(sum + d[i][0] + d[i][1] + d[i][2]) % M)<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.addition,sum + d[i][0] + d[i][1])<SUB>35</SUB>>", "239": "<(IDENTIFIER,sum,sum + d[i][0])<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>35</SUB>>", "243": "<(IDENTIFIER,i,sum + d[i][0])<SUB>35</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,d[i][1])<SUB>35</SUB>>", "247": "<(IDENTIFIER,d,sum + d[i][0] + d[i][1])<SUB>35</SUB>>", "249": "<(LITERAL,1,sum + d[i][0] + d[i][1])<SUB>35</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>35</SUB>>", "253": "<(IDENTIFIER,i,sum + d[i][0] + d[i][1] + d[i][2])<SUB>35</SUB>>", "255": "<(IDENTIFIER,M,(sum + d[i][0] + d[i][1] + d[i][2]) % M)<SUB>35</SUB>>", "257": "<(IDENTIFIER,pw,println(sum))<SUB>38</SUB>>", "259": "<(close,close())<SUB>39</SUB>>", "261": "<(MODIFIER,PUBLIC)>", "263": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}