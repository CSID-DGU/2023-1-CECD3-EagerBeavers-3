{"edges": [["20", "22"], ["20", "207"], ["20", "208"], ["20", "209"], ["22", "23"], ["22", "24"], ["22", "4"], ["22", "25"], ["22", "28"], ["22", "31"], ["22", "37"], ["22", "43"], ["22", "44"], ["22", "50"], ["22", "51"], ["22", "57"], ["22", "58"], ["22", "59"], ["22", "74"], ["22", "77"], ["22", "80"], ["22", "97"], ["22", "189"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["54", "55"], ["54", "56"], ["59", "60"], ["59", "63"], ["59", "66"], ["59", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["77", "5"], ["77", "78"], ["78", "79"], ["80", "81"], ["80", "84"], ["80", "87"], ["80", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "101"], ["97", "104"], ["97", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "112"], ["106", "116"], ["106", "172"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "120"], ["116", "123"], ["116", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "151"], ["127", "128"], ["127", "138"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "148"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "169"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["154", "157"], ["157", "158"], ["157", "159"], ["157", "162"], ["157", "165"], ["157", "168"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "176"], ["172", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "193"], ["189", "196"], ["189", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["25", "29"], ["28", "35"], ["31", "41"], ["37", "47"], ["44", "54"], ["51", "60"], ["74", "78"], ["77", "81"], ["27", "25"], ["29", "28"], ["33", "31"], ["39", "37"], ["46", "44"], ["53", "51"], ["60", "63"], ["63", "69"], ["63", "76"], ["66", "63"], ["68", "66"], ["76", "74"], ["78", "77"], ["81", "84"], ["84", "90"], ["84", "98"], ["87", "84"], ["89", "87"], ["98", "101"], ["101", "108"], ["101", "190"], ["104", "101"], ["190", "193"], ["193", "209"], ["193", "201"], ["196", "193"], ["198", "196"], ["35", "33"], ["41", "39"], ["47", "46"], ["54", "53"], ["69", "72"], ["72", "68"], ["90", "95"], ["93", "89"], ["108", "114"], ["112", "117"], ["199", "203"], ["202", "198"], ["95", "93"], ["114", "112"], ["117", "120"], ["120", "129"], ["120", "173"], ["123", "120"], ["173", "177"], ["173", "183"], ["176", "104"], ["201", "199"], ["203", "202"], ["177", "176"], ["182", "104"], ["127", "159"], ["127", "123"], ["183", "186"], ["186", "182"], ["128", "127"], ["128", "142"], ["138", "127"], ["152", "169"], ["169", "123"], ["129", "128"], ["129", "133"], ["132", "128"], ["139", "148"], ["148", "138"], ["154", "152"], ["133", "136"], ["136", "132"], ["141", "139"], ["157", "154"], ["142", "145"], ["145", "141"], ["159", "162"], ["162", "165"], ["165", "157"], ["20", "27"], ["21", "209"], ["25", "209"], ["31", "209"], ["37", "209"], ["39", "209"], ["39", "209"], ["37", "209"], ["37", "209"], ["44", "209"], ["44", "209"], ["44", "209"], ["51", "209"], ["53", "209"], ["51", "209"], ["51", "209"], ["74", "209"], ["77", "209"], ["78", "209"], ["77", "209"], ["77", "209"], ["190", "209"], ["193", "209"], ["193", "209"], ["193", "209"], ["196", "209"], ["104", "209"], ["87", "209"], ["66", "209"], ["157", "209"], ["20", "21"], ["20", "25"], ["33", "31"], ["33", "31"], ["39", "37"], ["39", "37"], ["46", "44"], ["53", "51"], ["20", "74"], ["25", "28"], ["20", "28"], ["29", "28"], ["20", "60"], ["72", "68"], ["74", "77"], ["20", "77"], ["78", "77"], ["20", "81"], ["93", "89"], ["93", "89"], ["20", "98"], ["20", "190"], ["20", "29"], ["20", "33"], ["35", "33"], ["33", "39"], ["20", "39"], ["41", "39"], ["31", "46"], ["20", "46"], ["20", "53"], ["31", "53"], ["60", "63"], ["66", "63"], ["20", "63"], ["31", "63"], ["63", "66"], ["20", "66"], ["29", "78"], ["20", "78"], ["81", "84"], ["87", "84"], ["20", "84"], ["63", "84"], ["84", "87"], ["20", "87"], ["98", "101"], ["104", "101"], ["20", "101"], ["84", "101"], ["120", "101"], ["101", "104"], ["129", "104"], ["20", "104"], ["20", "108"], ["114", "112"], ["190", "193"], ["196", "193"], ["20", "193"], ["101", "193"], ["193", "196"], ["20", "196"], ["51", "198"], ["182", "198"], ["176", "198"], ["68", "198"], ["20", "198"], ["28", "35"], ["20", "35"], ["35", "41"], ["20", "41"], ["31", "47"], ["20", "47"], ["20", "54"], ["31", "54"], ["20", "72"], ["39", "93"], ["20", "93"], ["95", "93"], ["20", "117"], ["112", "176"], ["152", "176"], ["20", "176"], ["51", "202"], ["182", "202"], ["176", "202"], ["68", "202"], ["20", "202"], ["77", "95"], ["20", "95"], ["20", "114"], ["117", "120"], ["123", "120"], ["20", "120"], ["101", "120"], ["129", "123"], ["20", "123"], ["108", "173"], ["169", "173"], ["20", "173"], ["186", "182"], ["186", "182"], ["128", "127"], ["128", "127"], ["138", "127"], ["138", "127"], ["154", "152"], ["154", "152"], ["154", "152"], ["20", "169"], ["37", "186"], ["148", "186"], ["157", "186"], ["20", "186"], ["129", "128"], ["129", "128"], ["132", "128"], ["132", "128"], ["139", "138"], ["139", "138"], ["148", "138"], ["148", "138"], ["101", "129"], ["20", "129"], ["120", "129"], ["51", "132"], ["157", "132"], ["136", "132"], ["154", "139"], ["20", "139"], ["141", "139"], ["141", "139"], ["20", "148"], ["37", "148"], ["186", "148"], ["157", "148"], ["139", "154"], ["20", "154"], ["112", "154"], ["152", "154"], ["157", "154"], ["157", "154"], ["157", "154"], ["157", "154"], ["157", "154"], ["20", "136"], ["44", "141"], ["157", "141"], ["89", "141"], ["157", "141"], ["20", "157"], ["44", "157"], ["141", "157"], ["51", "157"], ["132", "157"], ["141", "157"], ["89", "157"], ["37", "157"], ["186", "157"], ["148", "157"], ["63", "68"], ["63", "69"], ["63", "66"], ["63", "72"], ["63", "63"], ["84", "84"], ["84", "95"], ["84", "87"], ["84", "93"], ["84", "90"], ["84", "89"], ["101", "120"], ["101", "114"], ["101", "104"], ["101", "112"], ["101", "101"], ["101", "173"], ["101", "108"], ["101", "117"], ["193", "196"], ["193", "198"], ["193", "202"], ["193", "201"], ["193", "193"], ["193", "199"], ["193", "203"], ["120", "120"], ["120", "128"], ["120", "129"], ["120", "127"], ["120", "123"], ["173", "182"], ["173", "186"], ["173", "183"], ["173", "176"], ["173", "177"], ["127", "154"], ["127", "169"], ["127", "162"], ["127", "152"], ["127", "157"], ["127", "159"], ["127", "165"], ["128", "145"], ["128", "138"], ["128", "148"], ["128", "139"], ["128", "141"], ["128", "142"], ["129", "136"], ["129", "132"], ["129", "133"]], "features": {"20": "<(METHOD,main)<SUB>1</SUB>>", "22": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(LOCAL,int r: int)<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "3": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "30": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "32": "<(IDENTIFIER,n,n = parseInt(st.nextToken()))<SUB>5</SUB>>", "34": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "36": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "38": "<(IDENTIFIER,r,r = parseInt(st.nextToken()))<SUB>6</SUB>>", "40": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "42": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "44": "<(&lt;operator&gt;.assignment,int[] arr = new int[n + 1])<SUB>8</SUB>>", "46": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "48": "<(IDENTIFIER,n,n + 1)<SUB>8</SUB>>", "50": "<(LOCAL,double[] cen: double[])<SUB>9</SUB>>", "52": "<(IDENTIFIER,cen,double[] cen = new double[n + 1])<SUB>9</SUB>>", "54": "<(&lt;operator&gt;.addition,n + 1)<SUB>9</SUB>>", "56": "<(LITERAL,1,n + 1)<SUB>9</SUB>>", "58": "<(LOCAL,int j: int)<SUB>11</SUB>>", "60": "<(&lt;operator&gt;.assignment,i = 1)<SUB>13</SUB>>", "62": "<(LITERAL,1,i = 1)<SUB>13</SUB>>", "64": "<(IDENTIFIER,i,i &lt;= n)<SUB>13</SUB>>", "66": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "68": "<(&lt;operator&gt;.assignment,cen[i] = -1.0)<SUB>14</SUB>>", "70": "<(IDENTIFIER,cen,cen[i] = -1.0)<SUB>14</SUB>>", "72": "<(&lt;operator&gt;.minus,-1.0)<SUB>14</SUB>>", "74": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>16</SUB>>", "76": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>16</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>16</SUB>>", "79": "<(IDENTIFIER,br,readLine())<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.assignment,i = 1)<SUB>17</SUB>>", "83": "<(LITERAL,1,i = 1)<SUB>17</SUB>>", "85": "<(IDENTIFIER,i,i &lt;= n)<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.assignment,arr[i] = parseInt(st.nextToken()))<SUB>17</SUB>>", "91": "<(IDENTIFIER,arr,arr[i] = parseInt(st.nextToken()))<SUB>17</SUB>>", "93": "<(parseInt,parseInt(st.nextToken()))<SUB>17</SUB>>", "95": "<(nextToken,nextToken())<SUB>17</SUB>>", "97": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt;= n); i++),for (i = 1; Some(i &lt;= n); i++))<SUB>19</SUB>>", "99": "<(IDENTIFIER,i,i = 1)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>19</SUB>>", "103": "<(IDENTIFIER,n,i &lt;= n)<SUB>19</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "107": "<(LOCAL,int f: int)<SUB>21</SUB>>", "109": "<(IDENTIFIER,f,int f = 0)<SUB>21</SUB>>", "111": "<(LOCAL,double max: double)<SUB>22</SUB>>", "113": "<(IDENTIFIER,max,double max = -1.0)<SUB>22</SUB>>", "115": "<(LITERAL,1.0,-1.0)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.assignment,j = 1)<SUB>23</SUB>>", "119": "<(LITERAL,1,j = 1)<SUB>23</SUB>>", "121": "<(IDENTIFIER,j,j &lt;= n)<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.logicalAnd,i != j &amp;&amp; cen[j] != -1.0 &amp;&amp; (Math.abs(arr[i] - arr[j]) &lt;= 2 * r))<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.notEquals,i != j)<SUB>25</SUB>>", "131": "<(IDENTIFIER,j,i != j)<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,cen[j])<SUB>25</SUB>>", "135": "<(IDENTIFIER,j,cen[j] != -1.0)<SUB>25</SUB>>", "137": "<(LITERAL,1.0,-1.0)<SUB>25</SUB>>", "139": "<(abs,Math.abs(arr[i] - arr[j]))<SUB>25</SUB>>", "141": "<(&lt;operator&gt;.subtraction,arr[i] - arr[j])<SUB>25</SUB>>", "143": "<(IDENTIFIER,arr,arr[i] - arr[j])<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>25</SUB>>", "147": "<(IDENTIFIER,j,arr[i] - arr[j])<SUB>25</SUB>>", "149": "<(LITERAL,2,2 * r)<SUB>25</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "153": "<(IDENTIFIER,max,max = max(max, cal(arr[j], cen[j], arr[i], r)))<SUB>27</SUB>>", "155": "<(IDENTIFIER,Math,max(max, cal(arr[j], cen[j], arr[i], r)))<SUB>27</SUB>>", "157": "<(cal,cal(arr[j], cen[j], arr[i], r))<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>27</SUB>>", "161": "<(IDENTIFIER,j,cal(arr[j], cen[j], arr[i], r))<SUB>27</SUB>>", "163": "<(IDENTIFIER,cen,cal(arr[j], cen[j], arr[i], r))<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>27</SUB>>", "167": "<(IDENTIFIER,i,cal(arr[j], cen[j], arr[i], r))<SUB>27</SUB>>", "169": "<(&lt;operator&gt;.assignment,f = 1)<SUB>28</SUB>>", "171": "<(LITERAL,1,f = 1)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.equals,f == 1)<SUB>33</SUB>>", "175": "<(LITERAL,1,f == 1)<SUB>33</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,cen[i])<SUB>34</SUB>>", "179": "<(IDENTIFIER,i,cen[i] = max)<SUB>34</SUB>>", "181": "<(CONTROL_STRUCTURE,else,else)<SUB>36</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,cen[i])<SUB>36</SUB>>", "185": "<(IDENTIFIER,i,cen[i] = r * 1.0)<SUB>36</SUB>>", "187": "<(IDENTIFIER,r,r * 1.0)<SUB>36</SUB>>", "189": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt;= n); i++),for (i = 1; Some(i &lt;= n); i++))<SUB>38</SUB>>", "191": "<(IDENTIFIER,i,i = 1)<SUB>38</SUB>>", "193": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>38</SUB>>", "195": "<(IDENTIFIER,n,i &lt;= n)<SUB>38</SUB>>", "197": "<(IDENTIFIER,i,i++)<SUB>38</SUB>>", "199": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "201": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,cen[i])<SUB>39</SUB>>", "205": "<(IDENTIFIER,i,cen[i] + &quot; &quot;)<SUB>39</SUB>>", "207": "<(MODIFIER,PUBLIC)>", "209": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}