{"edges": [["19", "20"], ["19", "21"], ["19", "386"], ["19", "387"], ["19", "388"], ["21", "22"], ["21", "27"], ["21", "28"], ["21", "32"], ["21", "33"], ["21", "38"], ["21", "39"], ["21", "45"], ["21", "50"], ["21", "4"], ["21", "76"], ["21", "79"], ["21", "80"], ["21", "176"], ["21", "181"], ["21", "182"], ["21", "185"], ["21", "186"], ["21", "189"], ["21", "190"], ["21", "195"], ["21", "227"], ["21", "230"], ["21", "236"], ["21", "266"], ["21", "279"], ["21", "335"], ["21", "342"], ["21", "362"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "60"], ["50", "62"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "75"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["76", "77"], ["76", "78"], ["79", "3"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "90"], ["80", "92"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "99"], ["92", "100"], ["92", "103"], ["92", "147"], ["92", "154"], ["92", "169"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "119"], ["103", "121"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "138"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "159"], ["155", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["159", "162"], ["162", "163"], ["162", "166"], ["162", "168"], ["163", "164"], ["163", "165"], ["166", "167"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["179", "180"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["193", "194"], ["195", "196"], ["195", "198"], ["196", "197"], ["198", "199"], ["198", "200"], ["198", "204"], ["198", "205"], ["198", "210"], ["198", "217"], ["200", "201"], ["200", "202"], ["202", "203"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "215"], ["211", "212"], ["211", "213"], ["213", "214"], ["215", "216"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "226"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["224", "225"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["232", "233"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["236", "245"], ["236", "248"], ["236", "250"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["248", "249"], ["250", "251"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "261"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["279", "284"], ["279", "289"], ["279", "291"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["289", "290"], ["291", "292"], ["291", "299"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["299", "300"], ["299", "301"], ["299", "304"], ["299", "307"], ["299", "309"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["307", "308"], ["309", "310"], ["310", "311"], ["310", "316"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["316", "317"], ["316", "334"], ["317", "318"], ["317", "325"], ["318", "319"], ["318", "324"], ["319", "320"], ["319", "321"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["335", "336"], ["335", "337"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["342", "343"], ["342", "344"], ["342", "347"], ["342", "352"], ["342", "354"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "351"], ["352", "353"], ["354", "355"], ["355", "356"], ["355", "357"], ["355", "360"], ["357", "358"], ["357", "359"], ["360", "361"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "385"], ["367", "368"], ["367", "369"], ["369", "370"], ["369", "371"], ["369", "376"], ["371", "372"], ["371", "375"], ["372", "373"], ["372", "374"], ["376", "377"], ["376", "384"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "383"], ["380", "381"], ["380", "382"], ["22", "30"], ["28", "35"], ["33", "42"], ["39", "46"], ["45", "52"], ["76", "79"], ["79", "82"], ["176", "182"], ["182", "186"], ["186", "193"], ["190", "196"], ["227", "235"], ["230", "243"], ["266", "281"], ["335", "344"], ["362", "388"], ["24", "22"], ["30", "28"], ["35", "33"], ["41", "39"], ["46", "45"], ["52", "59"], ["55", "64"], ["55", "78"], ["60", "59"], ["78", "76"], ["82", "89"], ["85", "96"], ["85", "179"], ["90", "89"], ["178", "176"], ["192", "190"], ["196", "202"], ["196", "227"], ["232", "230"], ["238", "245"], ["245", "252"], ["245", "270"], ["248", "245"], ["268", "266"], ["281", "288"], ["284", "294"], ["284", "340"], ["289", "288"], ["337", "335"], ["344", "351"], ["347", "357"], ["347", "365"], ["352", "351"], ["363", "374"], ["366", "362"], ["26", "24"], ["42", "41"], ["57", "55"], ["63", "60"], ["87", "85"], ["94", "100"], ["100", "105"], ["169", "90"], ["179", "178"], ["193", "192"], ["200", "207"], ["205", "213"], ["210", "224"], ["217", "196"], ["233", "232"], ["240", "238"], ["251", "248"], ["269", "275"], ["274", "268"], ["286", "284"], ["292", "301"], ["338", "337"], ["349", "347"], ["355", "352"], ["365", "363"], ["367", "366"], ["59", "57"], ["64", "71"], ["67", "63"], ["89", "87"], ["96", "94"], ["105", "110"], ["108", "123"], ["108", "148"], ["119", "110"], ["148", "151"], ["148", "156"], ["151", "156"], ["155", "165"], ["155", "170"], ["159", "170"], ["170", "173"], ["173", "169"], ["202", "200"], ["207", "205"], ["211", "215"], ["215", "210"], ["219", "217"], ["235", "233"], ["241", "240"], ["252", "258"], ["255", "251"], ["270", "269"], ["275", "274"], ["288", "286"], ["293", "292"], ["301", "304"], ["304", "312"], ["304", "289"], ["307", "304"], ["340", "338"], ["351", "349"], ["357", "360"], ["360", "355"], ["369", "367"], ["68", "67"], ["109", "108"], ["109", "116"], ["116", "108"], ["123", "128"], ["156", "155"], ["213", "211"], ["220", "219"], ["243", "241"], ["256", "263"], ["261", "255"], ["294", "293"], ["310", "307"], ["371", "382"], ["376", "369"], ["69", "68"], ["110", "113"], ["113", "109"], ["127", "133"], ["127", "140"], ["139", "144"], ["139", "119"], ["144", "119"], ["163", "166"], ["166", "159"], ["222", "220"], ["258", "256"], ["263", "261"], ["311", "321"], ["316", "310"], ["372", "371"], ["377", "376"], ["71", "69"], ["128", "127"], ["133", "136"], ["136", "128"], ["140", "139"], ["165", "163"], ["224", "222"], ["312", "311"], ["317", "316"], ["374", "372"], ["379", "377"], ["318", "328"], ["325", "317"], ["380", "379"], ["319", "318"], ["326", "331"], ["331", "325"], ["382", "380"], ["321", "319"], ["328", "326"], ["19", "26"], ["20", "388"], ["22", "388"], ["22", "388"], ["28", "388"], ["28", "388"], ["33", "388"], ["33", "388"], ["33", "388"], ["39", "388"], ["41", "388"], ["39", "388"], ["39", "388"], ["45", "388"], ["45", "388"], ["52", "388"], ["55", "388"], ["55", "388"], ["76", "388"], ["79", "388"], ["85", "388"], ["85", "388"], ["178", "388"], ["176", "388"], ["176", "388"], ["182", "388"], ["182", "388"], ["186", "388"], ["193", "388"], ["192", "388"], ["190", "388"], ["196", "388"], ["196", "388"], ["227", "388"], ["227", "388"], ["227", "388"], ["230", "388"], ["230", "388"], ["230", "388"], ["238", "388"], ["245", "388"], ["266", "388"], ["268", "388"], ["275", "388"], ["274", "388"], ["266", "388"], ["266", "388"], ["284", "388"], ["284", "388"], ["335", "388"], ["335", "388"], ["335", "388"], ["344", "388"], ["347", "388"], ["347", "388"], ["347", "388"], ["362", "388"], ["367", "388"], ["369", "388"], ["369", "388"], ["379", "388"], ["376", "388"], ["369", "388"], ["367", "388"], ["366", "388"], ["366", "388"], ["362", "388"], ["362", "388"], ["355", "388"], ["355", "388"], ["355", "388"], ["355", "388"], ["352", "388"], ["292", "388"], ["292", "388"], ["301", "388"], ["304", "388"], ["304", "388"], ["289", "388"], ["310", "388"], ["317", "388"], ["317", "388"], ["316", "388"], ["310", "388"], ["310", "388"], ["307", "388"], ["251", "388"], ["255", "388"], ["255", "388"], ["251", "388"], ["251", "388"], ["248", "388"], ["207", "388"], ["207", "388"], ["205", "388"], ["205", "388"], ["213", "388"], ["210", "388"], ["210", "388"], ["224", "388"], ["220", "388"], ["219", "388"], ["217", "388"], ["217", "388"], ["94", "388"], ["100", "388"], ["105", "388"], ["110", "388"], ["109", "388"], ["108", "388"], ["108", "388"], ["108", "388"], ["148", "388"], ["148", "388"], ["151", "388"], ["151", "388"], ["155", "388"], ["155", "388"], ["166", "388"], ["166", "388"], ["159", "388"], ["170", "388"], ["169", "388"], ["169", "388"], ["169", "388"], ["90", "388"], ["123", "388"], ["127", "388"], ["127", "388"], ["140", "388"], ["139", "388"], ["139", "388"], ["144", "388"], ["119", "388"], ["133", "388"], ["136", "388"], ["63", "388"], ["68", "388"], ["67", "388"], ["63", "388"], ["63", "388"], ["60", "388"], ["22", "388"], ["19", "20"], ["30", "28"], ["35", "33"], ["35", "33"], ["41", "39"], ["19", "45"], ["19", "76"], ["178", "176"], ["19", "182"], ["19", "186"], ["192", "190"], ["232", "230"], ["268", "266"], ["337", "335"], ["337", "335"], ["19", "52"], ["76", "79"], ["19", "79"], ["19", "82"], ["19", "227"], ["176", "227"], ["210", "227"], ["240", "238"], ["240", "238"], ["19", "281"], ["19", "344"], ["366", "362"], ["366", "362"], ["19", "30"], ["30", "35"], ["19", "35"], ["28", "35"], ["35", "41"], ["19", "41"], ["52", "55"], ["60", "55"], ["19", "55"], ["39", "55"], ["68", "60"], ["19", "60"], ["67", "63"], ["67", "63"], ["82", "85"], ["90", "85"], ["19", "85"], ["33", "85"], ["85", "90"], ["19", "90"], ["33", "94"], ["169", "94"], ["19", "100"], ["179", "178"], ["193", "192"], ["190", "196"], ["202", "196"], ["19", "196"], ["202", "200"], ["207", "205"], ["207", "205"], ["215", "210"], ["219", "217"], ["219", "217"], ["227", "232"], ["238", "245"], ["248", "245"], ["19", "245"], ["19", "248"], ["245", "248"], ["230", "251"], ["227", "251"], ["270", "268"], ["270", "268"], ["19", "268"], ["275", "268"], ["275", "268"], ["281", "284"], ["289", "284"], ["19", "284"], ["266", "284"], ["304", "289"], ["19", "289"], ["19", "292"], ["227", "337"], ["240", "337"], ["19", "337"], ["344", "347"], ["352", "347"], ["19", "347"], ["335", "347"], ["347", "352"], ["19", "352"], ["367", "366"], ["367", "366"], ["316", "366"], ["219", "366"], ["67", "366"], ["19", "366"], ["35", "42"], ["19", "42"], ["19", "105"], ["148", "151"], ["19", "151"], ["170", "169"], ["170", "169"], ["33", "169"], ["109", "169"], ["79", "179"], ["170", "179"], ["19", "179"], ["179", "193"], ["19", "193"], ["227", "240"], ["232", "240"], ["19", "240"], ["270", "269"], ["270", "269"], ["19", "269"], ["275", "274"], ["275", "274"], ["19", "274"], ["19", "301"], ["227", "355"], ["19", "355"], ["335", "355"], ["360", "355"], ["186", "367"], ["217", "367"], ["19", "367"], ["369", "367"], ["369", "367"], ["369", "367"], ["68", "67"], ["68", "67"], ["19", "67"], ["109", "108"], ["109", "108"], ["116", "108"], ["116", "108"], ["128", "119"], ["19", "119"], ["19", "123"], ["94", "148"], ["116", "148"], ["128", "148"], ["19", "148"], ["100", "151"], ["144", "151"], ["156", "155"], ["156", "155"], ["156", "159"], ["19", "159"], ["156", "159"], ["163", "159"], ["166", "159"], ["156", "170"], ["159", "170"], ["19", "170"], ["156", "170"], ["159", "170"], ["196", "202"], ["19", "202"], ["193", "207"], ["19", "207"], ["200", "207"], ["205", "215"], ["19", "215"], ["220", "219"], ["220", "219"], ["67", "219"], ["19", "219"], ["230", "255"], ["227", "255"], ["19", "270"], ["35", "270"], ["19", "275"], ["270", "275"], ["301", "304"], ["307", "304"], ["19", "304"], ["284", "304"], ["328", "304"], ["331", "307"], ["19", "307"], ["316", "310"], ["316", "310"], ["19", "360"], ["35", "369"], ["19", "369"], ["371", "369"], ["371", "369"], ["376", "369"], ["376", "369"], ["39", "68"], ["71", "68"], ["19", "68"], ["110", "109"], ["33", "109"], ["169", "109"], ["94", "116"], ["128", "116"], ["19", "116"], ["128", "144"], ["19", "144"], ["79", "156"], ["170", "156"], ["19", "156"], ["100", "156"], ["151", "156"], ["144", "156"], ["19", "163"], ["19", "168"], ["182", "213"], ["19", "213"], ["186", "220"], ["217", "220"], ["19", "220"], ["39", "220"], ["227", "371"], ["337", "371"], ["19", "371"], ["227", "376"], ["19", "376"], ["105", "110"], ["119", "110"], ["19", "110"], ["128", "127"], ["128", "127"], ["19", "127"], ["128", "133"], ["19", "133"], ["140", "139"], ["140", "139"], ["19", "139"], ["100", "144"], ["163", "166"], ["19", "166"], ["245", "258"], ["19", "258"], ["19", "263"], ["245", "263"], ["219", "316"], ["67", "316"], ["19", "316"], ["55", "71"], ["19", "71"], ["94", "128"], ["116", "128"], ["133", "128"], ["19", "128"], ["110", "128"], ["128", "133"], ["123", "136"], ["19", "136"], ["123", "140"], ["136", "140"], ["19", "140"], ["215", "224"], ["19", "224"], ["227", "379"], ["371", "379"], ["19", "379"], ["304", "331"], ["19", "331"], ["304", "321"], ["19", "321"], ["321", "328"], ["19", "328"], ["55", "68"], ["55", "60"], ["55", "59"], ["55", "71"], ["55", "55"], ["55", "64"], ["55", "57"], ["55", "69"], ["55", "67"], ["55", "63"], ["85", "170"], ["85", "148"], ["85", "100"], ["85", "108"], ["85", "109"], ["85", "94"], ["85", "96"], ["85", "113"], ["85", "169"], ["85", "85"], ["85", "87"], ["85", "90"], ["85", "173"], ["85", "155"], ["85", "89"], ["85", "105"], ["85", "110"], ["85", "156"], ["196", "215"], ["196", "196"], ["196", "213"], ["196", "224"], ["196", "202"], ["196", "200"], ["196", "217"], ["196", "222"], ["196", "207"], ["196", "205"], ["196", "210"], ["196", "220"], ["196", "211"], ["196", "219"], ["245", "256"], ["245", "258"], ["245", "261"], ["245", "245"], ["245", "255"], ["245", "252"], ["245", "251"], ["245", "263"], ["245", "248"], ["284", "292"], ["284", "288"], ["284", "304"], ["284", "301"], ["284", "284"], ["284", "289"], ["284", "293"], ["284", "286"], ["284", "294"], ["347", "349"], ["347", "355"], ["347", "347"], ["347", "357"], ["347", "360"], ["347", "351"], ["347", "352"], ["108", "128"], ["108", "127"], ["108", "108"], ["108", "123"], ["108", "140"], ["108", "109"], ["108", "113"], ["108", "119"], ["108", "139"], ["108", "110"], ["148", "151"], ["155", "163"], ["155", "159"], ["155", "166"], ["155", "165"], ["304", "326"], ["304", "317"], ["304", "304"], ["304", "311"], ["304", "328"], ["304", "310"], ["304", "316"], ["304", "321"], ["304", "319"], ["304", "307"], ["304", "325"], ["304", "318"], ["304", "331"], ["304", "312"], ["109", "116"], ["127", "136"], ["127", "128"], ["127", "127"], ["127", "133"], ["139", "144"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,is,is = System.in)<SUB>4</SUB>>", "25": "<(IDENTIFIER,System,is = System.in)<SUB>4</SUB>>", "27": "<(LOCAL,int n: int)<SUB>5</SUB>>", "29": "<(IDENTIFIER,n,int n = ni())<SUB>5</SUB>>", "31": "<(IDENTIFIER,this,ni())<SUB>5</SUB>>", "33": "<(&lt;operator&gt;.assignment,int[] a = na(n))<SUB>6</SUB>>", "35": "<(na,na(n))<SUB>6</SUB>>", "37": "<(IDENTIFIER,n,na(n))<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,long[] fact = new long[n + 2])<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.alloc,new long[n + 2])>", "43": "<(IDENTIFIER,n,n + 2)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,fact[0] = 1)<SUB>8</SUB>>", "47": "<(IDENTIFIER,fact,fact[0] = 1)<SUB>8</SUB>>", "49": "<(LITERAL,1,fact[0] = 1)<SUB>8</SUB>>", "51": "<(LOCAL,int i: int)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,int i = 1)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; fact.length)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,fact.length)<SUB>9</SUB>>", "59": "<(FIELD_IDENTIFIER,length,length)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,fact[i] = (fact[i - 1] * i) % mod)<SUB>10</SUB>>", "65": "<(IDENTIFIER,fact,fact[i] = (fact[i - 1] * i) % mod)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.modulo,(fact[i - 1] * i) % mod)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,fact[i - 1])<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,i - 1)<SUB>10</SUB>>", "75": "<(IDENTIFIER,mod,(fact[i - 1] * i) % mod)<SUB>10</SUB>>", "76": "<(&lt;operator&gt;.assignment,ANY hm = new HashMap&lt;&gt;())<SUB>13</SUB>>", "78": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>13</SUB>>", "3": "<(IDENTIFIER,hm,new HashMap&lt;&gt;())<SUB>13</SUB>>", "81": "<(LOCAL,int i: int)<SUB>14</SUB>>", "83": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.lessThan,i &lt; a.length)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.fieldAccess,a.length)<SUB>14</SUB>>", "89": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "93": "<(LOCAL,int cp: int)<SUB>15</SUB>>", "95": "<(IDENTIFIER,cp,int cp = a[i])<SUB>15</SUB>>", "97": "<(IDENTIFIER,a,int cp = a[i])<SUB>15</SUB>>", "99": "<(LOCAL,int sfree: int)<SUB>16</SUB>>", "101": "<(IDENTIFIER,sfree,int sfree = 1)<SUB>16</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int p = 2; Some(p * p &lt;= a[i] &amp;&amp; cp &gt; 1); p++),for (int p = 2; Some(p * p &lt;= a[i] &amp;&amp; cp &gt; 1); p++))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.assignment,int p = 2)<SUB>17</SUB>>", "107": "<(LITERAL,2,int p = 2)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.lessEqualsThan,p * p &lt;= a[i])<SUB>17</SUB>>", "111": "<(IDENTIFIER,p,p * p)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>17</SUB>>", "115": "<(IDENTIFIER,i,p * p &lt;= a[i])<SUB>17</SUB>>", "117": "<(IDENTIFIER,cp,cp &gt; 1)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,p++)<SUB>17</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>18</SUB>>", "125": "<(LITERAL,0,int count = 0)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.equals,cp % p == 0)<SUB>19</SUB>>", "129": "<(IDENTIFIER,cp,cp % p)<SUB>19</SUB>>", "131": "<(LITERAL,0,cp % p == 0)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.assignmentDivision,cp /= p)<SUB>20</SUB>>", "135": "<(IDENTIFIER,p,cp /= p)<SUB>20</SUB>>", "137": "<(IDENTIFIER,count,count++)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.equals,count % 2 == 1)<SUB>23</SUB>>", "141": "<(IDENTIFIER,count,count % 2)<SUB>23</SUB>>", "143": "<(LITERAL,1,count % 2 == 1)<SUB>23</SUB>>", "145": "<(IDENTIFIER,sfree,sfree *= p)<SUB>23</SUB>>", "147": "<(CONTROL_STRUCTURE,if (cp != 1),if (cp != 1))<SUB>25</SUB>>", "149": "<(IDENTIFIER,cp,cp != 1)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.assignmentMultiplication,sfree *= cp)<SUB>25</SUB>>", "153": "<(IDENTIFIER,cp,sfree *= cp)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.logicalNot,!hm.containsKey(sfree))<SUB>26</SUB>>", "157": "<(IDENTIFIER,hm,containsKey(sfree))<SUB>26</SUB>>", "159": "<(put,put(sfree, new ArrayList&lt;Integer&gt;()))<SUB>26</SUB>>", "161": "<(IDENTIFIER,sfree,put(sfree, new ArrayList&lt;Integer&gt;()))<SUB>26</SUB>>", "163": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "165": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>26</SUB>>", "167": "<(IDENTIFIER,$obj1,new ArrayList&lt;Integer&gt;())>", "169": "<(add,add(a[i]))<SUB>27</SUB>>", "171": "<(IDENTIFIER,hm,get(sfree))<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>27</SUB>>", "175": "<(IDENTIFIER,i,add(a[i]))<SUB>27</SUB>>", "177": "<(IDENTIFIER,counts,counts = new int[hm.size()])<SUB>32</SUB>>", "179": "<(size,size())<SUB>32</SUB>>", "181": "<(LOCAL,int dex: int)<SUB>33</SUB>>", "183": "<(IDENTIFIER,dex,int dex = 0)<SUB>33</SUB>>", "185": "<(LOCAL,long bigmult: long)<SUB>36</SUB>>", "187": "<(IDENTIFIER,bigmult,long bigmult = 1)<SUB>36</SUB>>", "189": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>37</SUB>>", "191": "<(IDENTIFIER,$iterLocal0,)<SUB>37</SUB>>", "193": "<(keySet,keySet())<SUB>37</SUB>>", "195": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>37</SUB>>", "197": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "199": "<(LOCAL,key: java.lang.Integer)<SUB>37</SUB>>", "201": "<(IDENTIFIER,key,&lt;empty&gt;)>", "203": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "205": "<(&lt;operator&gt;.assignment,ANY list = get(key))<SUB>38</SUB>>", "207": "<(get,get(key))<SUB>38</SUB>>", "209": "<(IDENTIFIER,key,get(key))<SUB>38</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,counts[dex++])<SUB>39</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,dex++)<SUB>39</SUB>>", "215": "<(size,size())<SUB>39</SUB>>", "217": "<(&lt;operator&gt;.assignment,bigmult = bigmult * fact[list.size()] % mod)<SUB>40</SUB>>", "219": "<(&lt;operator&gt;.modulo,bigmult * fact[list.size()] % mod)<SUB>40</SUB>>", "221": "<(IDENTIFIER,bigmult,bigmult * fact[list.size()])<SUB>40</SUB>>", "223": "<(IDENTIFIER,fact,bigmult * fact[list.size()])<SUB>40</SUB>>", "225": "<(IDENTIFIER,list,size())<SUB>40</SUB>>", "227": "<(sort,sort(counts))<SUB>57</SUB>>", "229": "<(IDENTIFIER,counts,sort(counts))<SUB>57</SUB>>", "231": "<(IDENTIFIER,sufsum,sufsum = new int[counts.length])<SUB>58</SUB>>", "233": "<(&lt;operator&gt;.fieldAccess,counts.length)<SUB>58</SUB>>", "235": "<(FIELD_IDENTIFIER,length,length)<SUB>58</SUB>>", "237": "<(LOCAL,int i: int)<SUB>59</SUB>>", "239": "<(IDENTIFIER,i,int i = counts.length - 2)<SUB>59</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,counts.length)<SUB>59</SUB>>", "243": "<(FIELD_IDENTIFIER,length,length)<SUB>59</SUB>>", "245": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>59</SUB>>", "247": "<(LITERAL,0,i &gt;= 0)<SUB>59</SUB>>", "249": "<(IDENTIFIER,i,i--)<SUB>59</SUB>>", "251": "<(&lt;operator&gt;.assignment,sufsum[i] = sufsum[i + 1] + counts[i + 1])<SUB>60</SUB>>", "253": "<(IDENTIFIER,sufsum,sufsum[i] = sufsum[i + 1] + counts[i + 1])<SUB>60</SUB>>", "255": "<(&lt;operator&gt;.addition,sufsum[i + 1] + counts[i + 1])<SUB>60</SUB>>", "257": "<(IDENTIFIER,sufsum,sufsum[i + 1] + counts[i + 1])<SUB>60</SUB>>", "259": "<(IDENTIFIER,i,i + 1)<SUB>60</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,counts[i + 1])<SUB>60</SUB>>", "263": "<(&lt;operator&gt;.addition,i + 1)<SUB>60</SUB>>", "265": "<(LITERAL,1,i + 1)<SUB>60</SUB>>", "267": "<(IDENTIFIER,choose,choose = new long[2 * n + 3][2 * n + 3])<SUB>63</SUB>>", "269": "<(&lt;operator&gt;.addition,2 * n + 3)<SUB>63</SUB>>", "271": "<(LITERAL,2,2 * n)<SUB>63</SUB>>", "273": "<(LITERAL,3,2 * n + 3)<SUB>63</SUB>>", "275": "<(&lt;operator&gt;.multiplication,2 * n)<SUB>63</SUB>>", "277": "<(IDENTIFIER,n,2 * n)<SUB>63</SUB>>", "279": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; choose.length); i++),for (int i = 0; Some(i &lt; choose.length); i++))<SUB>64</SUB>>", "281": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>>", "283": "<(LITERAL,0,int i = 0)<SUB>64</SUB>>", "285": "<(IDENTIFIER,i,i &lt; choose.length)<SUB>64</SUB>>", "287": "<(IDENTIFIER,choose,i &lt; choose.length)<SUB>64</SUB>>", "289": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,choose[i][0])<SUB>65</SUB>>", "295": "<(IDENTIFIER,choose,choose[i][0] = 1)<SUB>65</SUB>>", "297": "<(LITERAL,0,choose[i][0] = 1)<SUB>65</SUB>>", "299": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= i); j++),for (int j = 1; Some(j &lt;= i); j++))<SUB>66</SUB>>", "301": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>66</SUB>>", "303": "<(LITERAL,1,int j = 1)<SUB>66</SUB>>", "305": "<(IDENTIFIER,j,j &lt;= i)<SUB>66</SUB>>", "307": "<(&lt;operator&gt;.postIncrement,j++)<SUB>66</SUB>>", "309": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>66</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,choose[i][j])<SUB>67</SUB>>", "313": "<(IDENTIFIER,choose,choose[i][j] = (choose[i - 1][j] + choose[i - 1][j - 1]) % mod)<SUB>67</SUB>>", "315": "<(IDENTIFIER,j,choose[i][j] = (choose[i - 1][j] + choose[i - 1][j - 1]) % mod)<SUB>67</SUB>>", "317": "<(&lt;operator&gt;.addition,choose[i - 1][j] + choose[i - 1][j - 1])<SUB>67</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,choose[i - 1])<SUB>67</SUB>>", "321": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>67</SUB>>", "323": "<(LITERAL,1,i - 1)<SUB>67</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,choose[i - 1][j - 1])<SUB>67</SUB>>", "327": "<(IDENTIFIER,choose,choose[i - 1][j] + choose[i - 1][j - 1])<SUB>67</SUB>>", "329": "<(IDENTIFIER,i,i - 1)<SUB>67</SUB>>", "331": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>67</SUB>>", "333": "<(LITERAL,1,j - 1)<SUB>67</SUB>>", "335": "<(&lt;operator&gt;.assignment,memo = new long[counts.length][700])<SUB>71</SUB>>", "337": "<(&lt;operator&gt;.alloc,new long[counts.length][700])>", "339": "<(IDENTIFIER,counts,new long[counts.length][700])<SUB>71</SUB>>", "341": "<(LITERAL,700,new long[counts.length][700])<SUB>71</SUB>>", "343": "<(LOCAL,int i: int)<SUB>72</SUB>>", "345": "<(IDENTIFIER,i,int i = 0)<SUB>72</SUB>>", "347": "<(&lt;operator&gt;.lessThan,i &lt; memo.length)<SUB>72</SUB>>", "349": "<(&lt;operator&gt;.fieldAccess,memo.length)<SUB>72</SUB>>", "351": "<(FIELD_IDENTIFIER,length,length)<SUB>72</SUB>>", "353": "<(IDENTIFIER,i,i++)<SUB>72</SUB>>", "355": "<(fill,fill(memo[i], -1))<SUB>73</SUB>>", "357": "<(&lt;operator&gt;.indexAccess,memo[i])<SUB>73</SUB>>", "359": "<(IDENTIFIER,i,fill(memo[i], -1))<SUB>73</SUB>>", "361": "<(LITERAL,1,-1)<SUB>73</SUB>>", "363": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>76</SUB>>", "365": "<(FIELD_IDENTIFIER,out,out)<SUB>76</SUB>>", "367": "<(&lt;operator&gt;.multiplication,bigmult * dp(counts.length - 2, counts[counts.length - 1] - 1))<SUB>76</SUB>>", "369": "<(dp,dp(counts.length - 2, counts[counts.length - 1] - 1))<SUB>76</SUB>>", "371": "<(&lt;operator&gt;.subtraction,counts.length - 2)<SUB>76</SUB>>", "373": "<(IDENTIFIER,counts,counts.length - 2)<SUB>76</SUB>>", "375": "<(LITERAL,2,counts.length - 2)<SUB>76</SUB>>", "377": "<(&lt;operator&gt;.indexAccess,counts[counts.length - 1])<SUB>76</SUB>>", "379": "<(&lt;operator&gt;.subtraction,counts.length - 1)<SUB>76</SUB>>", "381": "<(IDENTIFIER,counts,counts.length - 1)<SUB>76</SUB>>", "383": "<(LITERAL,1,counts.length - 1)<SUB>76</SUB>>", "385": "<(IDENTIFIER,mod,(bigmult * dp(counts.length - 2, counts[counts.length - 1] - 1)) % mod)<SUB>76</SUB>>", "387": "<(MODIFIER,STATIC)>"}}