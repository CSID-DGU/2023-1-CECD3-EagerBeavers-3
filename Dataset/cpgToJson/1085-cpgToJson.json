{"edges": [["21", "22"], ["21", "23"], ["21", "152"], ["21", "153"], ["21", "154"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "148"], ["23", "150"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "49"], ["45", "46"], ["45", "48"], ["46", "47"], ["49", "50"], ["49", "51"], ["49", "55"], ["49", "56"], ["49", "60"], ["49", "73"], ["49", "74"], ["49", "77"], ["49", "145"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "72"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "84"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "95"], ["84", "102"], ["84", "107"], ["84", "114"], ["84", "115"], ["84", "120"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "136"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "144"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["148", "150"], ["150", "154"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["45", "53"], ["45", "148"], ["30", "28"], ["37", "35"], ["46", "45"], ["51", "58"], ["56", "61"], ["74", "79"], ["145", "46"], ["53", "51"], ["58", "56"], ["61", "69"], ["61", "74"], ["79", "82"], ["82", "91"], ["82", "145"], ["65", "46"], ["86", "98"], ["95", "103"], ["115", "125"], ["67", "65"], ["88", "86"], ["97", "95"], ["103", "110"], ["108", "117"], ["117", "115"], ["121", "82"], ["121", "141"], ["69", "67"], ["89", "88"], ["98", "97"], ["110", "108"], ["123", "121"], ["91", "89"], ["124", "133"], ["129", "123"], ["139", "137"], ["125", "124"], ["131", "129"], ["141", "139"], ["133", "131"], ["21", "26"], ["22", "154"], ["24", "154"], ["27", "154"], ["27", "154"], ["31", "154"], ["34", "154"], ["34", "154"], ["41", "154"], ["39", "154"], ["39", "154"], ["46", "154"], ["45", "154"], ["45", "154"], ["148", "154"], ["150", "154"], ["150", "154"], ["51", "154"], ["51", "154"], ["56", "154"], ["58", "154"], ["56", "154"], ["56", "154"], ["61", "154"], ["61", "154"], ["74", "154"], ["74", "154"], ["79", "154"], ["82", "154"], ["82", "154"], ["145", "154"], ["89", "154"], ["88", "154"], ["86", "154"], ["86", "154"], ["97", "154"], ["95", "154"], ["95", "154"], ["103", "154"], ["108", "154"], ["117", "154"], ["115", "154"], ["115", "154"], ["121", "154"], ["124", "154"], ["124", "154"], ["123", "154"], ["129", "154"], ["131", "154"], ["133", "154"], ["131", "154"], ["129", "154"], ["123", "154"], ["121", "154"], ["121", "154"], ["69", "154"], ["67", "154"], ["65", "154"], ["65", "154"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["34", "148"], ["145", "148"], ["65", "148"], ["21", "148"], ["148", "150"], ["21", "150"], ["27", "41"], ["21", "41"], ["46", "45"], ["21", "45"], ["53", "51"], ["58", "56"], ["21", "74"], ["39", "46"], ["21", "46"], ["21", "79"], ["34", "145"], ["65", "145"], ["21", "145"], ["41", "53"], ["58", "53"], ["21", "53"], ["53", "58"], ["21", "58"], ["51", "61"], ["21", "61"], ["79", "82"], ["133", "82"], ["21", "82"], ["88", "86"], ["88", "86"], ["97", "95"], ["97", "95"], ["117", "115"], ["117", "115"], ["34", "65"], ["145", "65"], ["21", "65"], ["69", "65"], ["69", "65"], ["74", "95"], ["124", "95"], ["21", "95"], ["21", "67"], ["69", "67"], ["69", "67"], ["89", "88"], ["89", "88"], ["21", "88"], ["98", "97"], ["98", "97"], ["21", "97"], ["95", "103"], ["21", "103"], ["56", "103"], ["117", "103"], ["103", "108"], ["21", "108"], ["110", "108"], ["110", "108"], ["103", "117"], ["21", "117"], ["108", "117"], ["115", "121"], ["21", "121"], ["123", "121"], ["123", "121"], ["61", "69"], ["21", "69"], ["21", "89"], ["82", "89"], ["21", "98"], ["82", "98"], ["131", "110"], ["21", "110"], ["61", "110"], ["133", "110"], ["124", "123"], ["124", "123"], ["129", "123"], ["129", "123"], ["34", "137"], ["145", "137"], ["65", "137"], ["21", "137"], ["141", "137"], ["141", "137"], ["82", "91"], ["21", "91"], ["125", "124"], ["125", "124"], ["117", "124"], ["21", "124"], ["86", "129"], ["21", "129"], ["131", "129"], ["131", "129"], ["21", "139"], ["141", "139"], ["141", "139"], ["110", "125"], ["21", "125"], ["110", "125"], ["125", "131"], ["21", "131"], ["133", "131"], ["133", "131"], ["133", "141"], ["21", "141"], ["133", "141"], ["125", "133"], ["21", "133"], ["98", "133"], ["45", "51"], ["45", "46"], ["45", "56"], ["45", "45"], ["45", "58"], ["45", "61"], ["45", "53"], ["61", "145"], ["61", "69"], ["61", "67"], ["61", "74"], ["61", "65"], ["61", "82"], ["61", "79"], ["82", "115"], ["82", "89"], ["82", "98"], ["82", "131"], ["82", "103"], ["82", "121"], ["82", "95"], ["82", "123"], ["82", "97"], ["82", "91"], ["82", "129"], ["82", "82"], ["82", "88"], ["82", "110"], ["82", "117"], ["82", "124"], ["82", "108"], ["82", "125"], ["82", "133"], ["82", "86"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int tc = nextInt())<SUB>8</SUB>>", "41": "<(nextInt,nextInt())<SUB>8</SUB>>", "43": "<(JUMP_TARGET,out)>", "45": "<(&lt;operator&gt;.greaterThan,tc-- &gt; 0)<SUB>9</SUB>>", "47": "<(IDENTIFIER,tc,tc--)<SUB>9</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,long n = nextInt())<SUB>10</SUB>>", "53": "<(nextInt,nextInt())<SUB>10</SUB>>", "55": "<(LOCAL,long k: long)<SUB>12</SUB>>", "57": "<(IDENTIFIER,k,long k = nextLong())<SUB>12</SUB>>", "59": "<(IDENTIFIER,sc,nextLong())<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.greaterEqualsThan,n &gt;= 32)<SUB>13</SUB>>", "63": "<(LITERAL,32,n &gt;= 32)<SUB>13</SUB>>", "65": "<(println,println(&quot;YES &quot; + (n - 1)))<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.addition,&quot;YES &quot; + (n - 1))<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "71": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "73": "<(LOCAL,long steps: long)<SUB>18</SUB>>", "75": "<(IDENTIFIER,steps,long steps = 0)<SUB>18</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 1; None; i++),for (int i = 1; None; i++))<SUB>19</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>19</SUB>>", "81": "<(LITERAL,1,int i = 1)<SUB>19</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "85": "<(LOCAL,long cnt: long)<SUB>20</SUB>>", "87": "<(IDENTIFIER,cnt,long cnt = (1l &lt;&lt; (i + 1)) - 1)<SUB>20</SUB>>", "89": "<(&lt;operator&gt;.shiftLeft,1l &lt;&lt; (i + 1))<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.addition,i + 1)<SUB>20</SUB>>", "93": "<(LITERAL,1,i + 1)<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.assignmentPlus,steps += (1l &lt;&lt; (i)) - 1)<SUB>21</SUB>>", "97": "<(&lt;operator&gt;.subtraction,(1l &lt;&lt; (i)) - 1)<SUB>21</SUB>>", "99": "<(LITERAL,1l,1l &lt;&lt; (i))<SUB>21</SUB>>", "101": "<(LITERAL,1,(1l &lt;&lt; (i)) - 1)<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.greaterThan,steps &gt; k)<SUB>22</SUB>>", "105": "<(IDENTIFIER,k,steps &gt; k)<SUB>22</SUB>>", "107": "<(CONTROL_STRUCTURE,if (steps &gt; f(n)),if (steps &gt; f(n)))<SUB>24</SUB>>", "109": "<(IDENTIFIER,steps,steps &gt; f(n))<SUB>24</SUB>>", "111": "<(IDENTIFIER,this,f(n))<SUB>24</SUB>>", "113": "<(CONTROL_STRUCTURE,break;,break;)<SUB>25</SUB>>", "115": "<(&lt;operator&gt;.assignment,long rem = k - steps)<SUB>27</SUB>>", "117": "<(&lt;operator&gt;.subtraction,k - steps)<SUB>27</SUB>>", "119": "<(IDENTIFIER,steps,k - steps)<SUB>27</SUB>>", "121": "<(&lt;operator&gt;.lessEqualsThan,rem &lt;= f(n) - steps - cnt * f(n - i))<SUB>30</SUB>>", "123": "<(&lt;operator&gt;.subtraction,f(n) - steps - cnt * f(n - i))<SUB>30</SUB>>", "125": "<(f,f(n))<SUB>30</SUB>>", "127": "<(IDENTIFIER,n,f(n))<SUB>30</SUB>>", "129": "<(&lt;operator&gt;.multiplication,cnt * f(n - i))<SUB>30</SUB>>", "131": "<(f,f(n - i))<SUB>30</SUB>>", "133": "<(&lt;operator&gt;.subtraction,n - i)<SUB>30</SUB>>", "135": "<(IDENTIFIER,i,n - i)<SUB>30</SUB>>", "137": "<(println,println(&quot;YES &quot; + (n - i)))<SUB>31</SUB>>", "139": "<(&lt;operator&gt;.addition,&quot;YES &quot; + (n - i))<SUB>31</SUB>>", "141": "<(&lt;operator&gt;.subtraction,n - i)<SUB>31</SUB>>", "143": "<(IDENTIFIER,i,n - i)<SUB>31</SUB>>", "145": "<(println,println(&quot;NO&quot;))<SUB>36</SUB>>", "147": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>36</SUB>>", "149": "<(IDENTIFIER,pw,flush())<SUB>40</SUB>>", "151": "<(IDENTIFIER,pw,close())<SUB>41</SUB>>", "153": "<(MODIFIER,STATIC)>"}}