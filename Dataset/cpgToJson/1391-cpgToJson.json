{"edges": [["19", "21"], ["19", "133"], ["19", "134"], ["19", "135"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "41"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "56"], ["21", "83"], ["21", "102"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "62"], ["56", "69"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "97"], ["86", "87"], ["86", "94"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "108"], ["102", "114"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["115", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "131"], ["120", "132"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["41", "47"], ["45", "53"], ["51", "58"], ["83", "104"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["47", "45"], ["53", "51"], ["57", "66"], ["57", "72"], ["85", "83"], ["103", "111"], ["103", "119"], ["108", "135"], ["28", "26"], ["58", "57"], ["63", "68"], ["68", "135"], ["86", "99"], ["97", "85"], ["104", "103"], ["109", "112"], ["112", "108"], ["64", "63"], ["71", "80"], ["71", "91"], ["87", "94"], ["94", "86"], ["99", "97"], ["111", "109"], ["116", "135"], ["66", "64"], ["72", "71"], ["77", "82"], ["82", "135"], ["89", "87"], ["117", "122"], ["120", "116"], ["78", "77"], ["91", "89"], ["119", "117"], ["122", "129"], ["125", "120"], ["80", "78"], ["127", "125"], ["129", "127"], ["19", "24"], ["68", "135"], ["82", "135"], ["20", "135"], ["22", "135"], ["25", "135"], ["25", "135"], ["30", "135"], ["37", "135"], ["35", "135"], ["35", "135"], ["41", "135"], ["41", "135"], ["45", "135"], ["45", "135"], ["45", "135"], ["51", "135"], ["53", "135"], ["51", "135"], ["51", "135"], ["58", "135"], ["58", "135"], ["57", "135"], ["57", "135"], ["63", "135"], ["63", "135"], ["120", "135"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["35", "41"], ["19", "41"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["85", "83"], ["85", "83"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["19", "47"], ["47", "53"], ["19", "53"], ["58", "57"], ["58", "57"], ["19", "57"], ["19", "68"], ["86", "85"], ["86", "85"], ["97", "85"], ["97", "85"], ["104", "103"], ["104", "103"], ["19", "103"], ["112", "108"], ["30", "58"], ["19", "58"], ["35", "58"], ["19", "63"], ["87", "86"], ["87", "86"], ["94", "86"], ["94", "86"], ["87", "97"], ["19", "97"], ["99", "97"], ["99", "97"], ["72", "104"], ["19", "104"], ["83", "104"], ["19", "112"], ["72", "71"], ["72", "71"], ["19", "71"], ["19", "82"], ["89", "87"], ["19", "87"], ["89", "87"], ["91", "94"], ["19", "94"], ["94", "99"], ["19", "99"], ["120", "116"], ["120", "116"], ["120", "116"], ["120", "116"], ["120", "116"], ["58", "72"], ["19", "72"], ["58", "72"], ["19", "77"], ["41", "89"], ["19", "89"], ["91", "89"], ["91", "89"], ["19", "120"], ["122", "120"], ["122", "120"], ["125", "120"], ["125", "120"], ["104", "120"], ["53", "91"], ["19", "91"], ["99", "122"], ["19", "122"], ["97", "125"], ["19", "125"], ["127", "125"], ["127", "125"], ["122", "127"], ["19", "127"], ["129", "127"], ["19", "129"], ["57", "68"], ["57", "64"], ["57", "66"], ["57", "72"], ["57", "71"], ["57", "63"], ["103", "120"], ["103", "116"], ["103", "122"], ["103", "119"], ["103", "112"], ["103", "129"], ["103", "117"], ["103", "127"], ["103", "108"], ["103", "125"], ["103", "111"], ["103", "109"], ["71", "94"], ["71", "77"], ["71", "89"], ["71", "99"], ["71", "85"], ["71", "103"], ["71", "104"], ["71", "87"], ["71", "97"], ["71", "91"], ["71", "82"], ["71", "80"], ["71", "83"], ["71", "78"], ["71", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,BigInteger bi1: ANY)<SUB>4</SUB>>", "31": "<(IDENTIFIER,bi1,ANY bi1 = nextBigInteger())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextBigInteger())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,ANY bi2 = nextBigInteger())<SUB>5</SUB>>", "37": "<(nextBigInteger,nextBigInteger())<SUB>5</SUB>>", "39": "<(LOCAL,BigInteger i: ANY)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,ANY n = bi2)<SUB>6</SUB>>", "43": "<(IDENTIFIER,bi2,ANY n = bi2)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,ANY i2 = valueOf(1))<SUB>7</SUB>>", "47": "<(valueOf,valueOf(1))<SUB>7</SUB>>", "49": "<(LITERAL,1,valueOf(1))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,ANY sum = valueOf(0))<SUB>8</SUB>>", "53": "<(valueOf,valueOf(0))<SUB>8</SUB>>", "55": "<(LITERAL,0,valueOf(0))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,bi1.compareTo(bi2) &lt; 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,bi1,compareTo(bi2))<SUB>9</SUB>>", "61": "<(LITERAL,0,bi1.compareTo(bi2) &lt; 0)<SUB>9</SUB>>", "63": "<(println,System.out.println(0))<SUB>10</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(0))<SUB>10</SUB>>", "67": "<(LITERAL,0,System.out.println(0))<SUB>10</SUB>>", "69": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.equals,bi1.compareTo(bi2) == 0)<SUB>13</SUB>>", "73": "<(IDENTIFIER,bi1,compareTo(bi2))<SUB>13</SUB>>", "75": "<(LITERAL,0,bi1.compareTo(bi2) == 0)<SUB>13</SUB>>", "77": "<(println,System.out.println(1))<SUB>15</SUB>>", "79": "<(IDENTIFIER,System,System.out.println(1))<SUB>15</SUB>>", "81": "<(LITERAL,1,System.out.println(1))<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignment,bi2 = subtract(n.subtract(BigInteger.valueOf(1))))<SUB>18</SUB>>", "85": "<(subtract,subtract(n.subtract(BigInteger.valueOf(1))))<SUB>18</SUB>>", "87": "<(multiply,multiply(n.add(BigInteger.valueOf(1))))<SUB>18</SUB>>", "89": "<(add,add(BigInteger.valueOf(1)))<SUB>18</SUB>>", "91": "<(valueOf,valueOf(1))<SUB>18</SUB>>", "93": "<(LITERAL,1,valueOf(1))<SUB>18</SUB>>", "95": "<(IDENTIFIER,BigInteger,valueOf(2))<SUB>18</SUB>>", "97": "<(subtract,subtract(BigInteger.valueOf(1)))<SUB>18</SUB>>", "99": "<(valueOf,valueOf(1))<SUB>18</SUB>>", "101": "<(LITERAL,1,valueOf(1))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.greaterThan,bi1.compareTo(bi2) &gt; 0)<SUB>19</SUB>>", "105": "<(IDENTIFIER,bi1,compareTo(bi2))<SUB>19</SUB>>", "107": "<(LITERAL,0,bi1.compareTo(bi2) &gt; 0)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "113": "<(LITERAL,1,-1)<SUB>20</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "119": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "121": "<(IDENTIFIER,this,bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1))<SUB>22</SUB>>", "123": "<(IDENTIFIER,BigInteger,valueOf(0))<SUB>22</SUB>>", "125": "<(add,add(BigInteger.valueOf(-2)))<SUB>22</SUB>>", "127": "<(valueOf,valueOf(-2))<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.minus,-2)<SUB>22</SUB>>", "131": "<(IDENTIFIER,n,bs(BigInteger.valueOf(0), n.add(BigInteger.valueOf(-2)), n, bi1))<SUB>22</SUB>>", "133": "<(MODIFIER,PUBLIC)>", "135": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}