{"edges": [["19", "21"], ["19", "359"], ["19", "360"], ["19", "361"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "33"], ["21", "39"], ["21", "48"], ["21", "4"], ["21", "78"], ["21", "81"], ["21", "82"], ["21", "147"], ["21", "148"], ["21", "159"], ["21", "176"], ["21", "177"], ["21", "183"], ["21", "347"], ["21", "357"], ["23", "24"], ["23", "25"], ["25", "26"], ["27", "28"], ["27", "29"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "77"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "76"], ["69", "70"], ["69", "75"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["78", "79"], ["78", "80"], ["81", "3"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "98"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "105"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "120"], ["105", "141"], ["105", "146"], ["106", "107"], ["106", "111"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "117"], ["113", "119"], ["114", "115"], ["114", "116"], ["117", "118"], ["120", "121"], ["120", "140"], ["121", "122"], ["121", "128"], ["122", "123"], ["122", "127"], ["123", "124"], ["124", "125"], ["124", "126"], ["128", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "153"], ["151", "152"], ["153", "154"], ["153", "158"], ["154", "155"], ["154", "156"], ["156", "157"], ["159", "160"], ["159", "170"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "169"], ["165", "166"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["172", "173"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "179"], ["179", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "192"], ["183", "194"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["192", "193"], ["194", "195"], ["194", "341"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "209"], ["195", "211"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["211", "212"], ["211", "223"], ["212", "213"], ["212", "222"], ["213", "214"], ["213", "221"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "234"], ["223", "236"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["230", "231"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["236", "238"], ["236", "255"], ["236", "266"], ["236", "268"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["240", "254"], ["242", "243"], ["242", "253"], ["243", "244"], ["243", "252"], ["244", "245"], ["244", "251"], ["245", "246"], ["245", "250"], ["246", "247"], ["247", "248"], ["247", "249"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["257", "265"], ["259", "260"], ["259", "264"], ["260", "261"], ["261", "262"], ["261", "263"], ["266", "267"], ["268", "269"], ["268", "278"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["278", "279"], ["278", "340"], ["279", "280"], ["279", "331"], ["280", "281"], ["280", "324"], ["281", "282"], ["281", "323"], ["282", "283"], ["282", "314"], ["283", "284"], ["283", "313"], ["284", "285"], ["284", "298"], ["285", "286"], ["285", "297"], ["286", "287"], ["286", "293"], ["287", "288"], ["287", "289"], ["289", "290"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["293", "296"], ["298", "299"], ["298", "300"], ["298", "305"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["305", "306"], ["305", "312"], ["306", "307"], ["306", "311"], ["307", "308"], ["308", "309"], ["308", "310"], ["314", "315"], ["314", "316"], ["314", "322"], ["316", "317"], ["316", "321"], ["317", "318"], ["318", "319"], ["318", "320"], ["324", "325"], ["324", "330"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "339"], ["336", "337"], ["336", "338"], ["341", "342"], ["341", "343"], ["343", "344"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "356"], ["350", "351"], ["350", "352"], ["352", "353"], ["352", "355"], ["353", "354"], ["357", "358"], ["23", "30"], ["27", "36"], ["33", "40"], ["39", "50"], ["78", "81"], ["81", "84"], ["148", "161"], ["159", "180"], ["177", "185"], ["347", "357"], ["357", "361"], ["25", "23"], ["29", "27"], ["35", "33"], ["40", "44"], ["43", "39"], ["50", "53"], ["53", "59"], ["53", "80"], ["56", "53"], ["58", "56"], ["80", "78"], ["84", "87"], ["87", "96"], ["87", "151"], ["90", "87"], ["150", "148"], ["160", "173"], ["170", "159"], ["179", "177"], ["185", "190"], ["188", "197"], ["188", "353"], ["192", "190"], ["349", "347"], ["30", "29"], ["36", "35"], ["44", "43"], ["59", "65"], ["62", "58"], ["94", "100"], ["151", "156"], ["153", "150"], ["161", "166"], ["164", "160"], ["172", "170"], ["180", "179"], ["190", "188"], ["341", "192"], ["350", "349"], ["64", "62"], ["96", "94"], ["100", "103"], ["103", "109"], ["103", "90"], ["154", "153"], ["165", "164"], ["173", "172"], ["197", "205"], ["200", "217"], ["200", "344"], ["209", "205"], ["343", "341"], ["352", "350"], ["65", "72"], ["68", "64"], ["156", "154"], ["166", "165"], ["202", "200"], ["344", "343"], ["353", "352"], ["69", "68"], ["107", "116"], ["107", "124"], ["111", "124"], ["121", "142"], ["142", "141"], ["203", "208"], ["208", "202"], ["213", "209"], ["213", "225"], ["225", "231"], ["228", "247"], ["228", "209"], ["234", "231"], ["70", "69"], ["109", "107"], ["122", "121"], ["122", "133"], ["128", "121"], ["205", "203"], ["214", "213"], ["230", "228"], ["238", "261"], ["255", "270"], ["255", "234"], ["266", "261"], ["268", "266"], ["72", "70"], ["114", "117"], ["117", "111"], ["123", "122"], ["129", "128"], ["215", "214"], ["231", "230"], ["240", "238"], ["257", "255"], ["269", "290"], ["278", "268"], ["116", "114"], ["124", "123"], ["131", "129"], ["217", "215"], ["242", "240"], ["259", "257"], ["270", "274"], ["273", "269"], ["279", "278"], ["132", "131"], ["243", "242"], ["260", "259"], ["274", "273"], ["280", "332"], ["331", "279"], ["133", "135"], ["134", "132"], ["244", "243"], ["261", "260"], ["281", "327"], ["324", "280"], ["332", "336"], ["335", "331"], ["135", "134"], ["245", "244"], ["282", "281"], ["325", "324"], ["336", "335"], ["246", "245"], ["283", "318"], ["314", "282"], ["327", "325"], ["247", "246"], ["284", "283"], ["316", "314"], ["285", "301"], ["298", "284"], ["317", "316"], ["286", "285"], ["300", "308"], ["305", "298"], ["318", "317"], ["287", "293"], ["293", "286"], ["301", "300"], ["306", "305"], ["289", "287"], ["307", "306"], ["290", "289"], ["308", "307"], ["19", "25"], ["20", "361"], ["25", "361"], ["23", "361"], ["23", "361"], ["27", "361"], ["27", "361"], ["33", "361"], ["35", "361"], ["33", "361"], ["33", "361"], ["39", "361"], ["43", "361"], ["39", "361"], ["39", "361"], ["53", "361"], ["78", "361"], ["81", "361"], ["84", "361"], ["87", "361"], ["148", "361"], ["154", "361"], ["153", "361"], ["150", "361"], ["148", "361"], ["148", "361"], ["159", "361"], ["159", "361"], ["159", "361"], ["177", "361"], ["179", "361"], ["177", "361"], ["185", "361"], ["188", "361"], ["188", "361"], ["353", "361"], ["352", "361"], ["347", "361"], ["347", "361"], ["357", "361"], ["357", "361"], ["197", "361"], ["200", "361"], ["200", "361"], ["341", "361"], ["343", "361"], ["341", "361"], ["192", "361"], ["213", "361"], ["213", "361"], ["225", "361"], ["228", "361"], ["228", "361"], ["244", "361"], ["243", "361"], ["242", "361"], ["240", "361"], ["238", "361"], ["238", "361"], ["255", "361"], ["257", "361"], ["257", "361"], ["255", "361"], ["255", "361"], ["234", "361"], ["268", "361"], ["286", "361"], ["286", "361"], ["285", "361"], ["284", "361"], ["300", "361"], ["298", "361"], ["298", "361"], ["284", "361"], ["283", "361"], ["282", "361"], ["314", "361"], ["314", "361"], ["282", "361"], ["281", "361"], ["280", "361"], ["280", "361"], ["279", "361"], ["335", "361"], ["278", "361"], ["278", "361"], ["268", "361"], ["268", "361"], ["266", "361"], ["209", "361"], ["94", "361"], ["96", "361"], ["94", "361"], ["94", "361"], ["100", "361"], ["103", "361"], ["103", "361"], ["90", "361"], ["58", "361"], ["62", "361"], ["64", "361"], ["69", "361"], ["68", "361"], ["64", "361"], ["62", "361"], ["62", "361"], ["58", "361"], ["58", "361"], ["56", "361"], ["19", "20"], ["25", "23"], ["29", "27"], ["35", "33"], ["43", "39"], ["19", "39"], ["19", "78"], ["150", "148"], ["150", "148"], ["27", "159"], ["179", "177"], ["19", "50"], ["62", "58"], ["62", "58"], ["62", "58"], ["78", "81"], ["19", "81"], ["19", "84"], ["19", "185"], ["19", "347"], ["347", "357"], ["19", "357"], ["19", "25"], ["23", "29"], ["19", "29"], ["19", "35"], ["23", "35"], ["19", "43"], ["50", "53"], ["56", "53"], ["19", "53"], ["23", "53"], ["69", "56"], ["19", "56"], ["84", "87"], ["90", "87"], ["19", "87"], ["53", "87"], ["87", "90"], ["19", "90"], ["96", "94"], ["151", "150"], ["154", "150"], ["154", "150"], ["19", "150"], ["180", "179"], ["180", "179"], ["185", "188"], ["192", "188"], ["19", "188"], ["190", "188"], ["344", "192"], ["19", "192"], ["343", "341"], ["23", "30"], ["19", "30"], ["19", "36"], ["23", "36"], ["19", "62"], ["64", "62"], ["68", "62"], ["68", "62"], ["19", "100"], ["81", "151"], ["19", "151"], ["154", "153"], ["154", "153"], ["19", "153"], ["165", "164"], ["19", "164"], ["173", "172"], ["173", "172"], ["173", "180"], ["19", "180"], ["180", "190"], ["344", "190"], ["19", "190"], ["19", "197"], ["177", "341"], ["243", "341"], ["19", "341"], ["68", "64"], ["68", "64"], ["25", "96"], ["19", "96"], ["100", "103"], ["19", "103"], ["87", "154"], ["19", "154"], ["156", "154"], ["166", "165"], ["166", "165"], ["166", "173"], ["19", "173"], ["197", "200"], ["209", "200"], ["19", "200"], ["200", "209"], ["257", "209"], ["19", "209"], ["344", "343"], ["344", "343"], ["353", "352"], ["19", "352"], ["69", "68"], ["69", "68"], ["62", "68"], ["19", "68"], ["142", "141"], ["142", "141"], ["94", "141"], ["131", "141"], ["19", "141"], ["151", "156"], ["19", "156"], ["156", "166"], ["19", "166"], ["19", "225"], ["190", "344"], ["231", "344"], ["19", "344"], ["205", "344"], ["190", "353"], ["19", "353"], ["27", "69"], ["72", "69"], ["19", "69"], ["103", "107"], ["19", "107"], ["109", "107"], ["109", "111"], ["19", "111"], ["114", "111"], ["117", "111"], ["122", "121"], ["122", "121"], ["128", "121"], ["124", "142"], ["135", "142"], ["19", "142"], ["124", "142"], ["135", "142"], ["280", "213"], ["19", "213"], ["225", "228"], ["234", "228"], ["19", "228"], ["230", "228"], ["259", "234"], ["19", "234"], ["240", "238"], ["240", "238"], ["240", "238"], ["278", "268"], ["278", "268"], ["81", "109"], ["19", "109"], ["19", "114"], ["19", "119"], ["123", "122"], ["19", "122"], ["129", "128"], ["129", "128"], ["188", "205"], ["217", "205"], ["231", "205"], ["19", "205"], ["231", "230"], ["231", "230"], ["238", "255"], ["266", "255"], ["19", "255"], ["257", "255"], ["257", "255"], ["257", "255"], ["335", "266"], ["19", "266"], ["53", "72"], ["19", "72"], ["114", "117"], ["19", "117"], ["124", "123"], ["124", "123"], ["62", "129"], ["19", "129"], ["131", "129"], ["131", "129"], ["190", "231"], ["261", "231"], ["19", "231"], ["217", "231"], ["261", "231"], ["257", "240"], ["19", "240"], ["242", "240"], ["242", "240"], ["240", "257"], ["19", "257"], ["259", "257"], ["259", "257"], ["200", "257"], ["300", "257"], ["280", "278"], ["280", "278"], ["268", "278"], ["281", "278"], ["19", "278"], ["109", "124"], ["111", "124"], ["19", "124"], ["107", "124"], ["19", "131"], ["134", "131"], ["134", "131"], ["94", "131"], ["205", "217"], ["19", "217"], ["243", "242"], ["243", "242"], ["19", "242"], ["260", "259"], ["244", "259"], ["19", "259"], ["314", "259"], ["257", "273"], ["19", "273"], ["259", "273"], ["255", "273"], ["280", "279"], ["280", "279"], ["268", "279"], ["19", "132"], ["134", "132"], ["134", "132"], ["244", "243"], ["244", "243"], ["177", "243"], ["341", "243"], ["19", "243"], ["261", "260"], ["261", "260"], ["257", "274"], ["19", "274"], ["259", "274"], ["281", "280"], ["281", "280"], ["213", "280"], ["135", "134"], ["135", "134"], ["19", "134"], ["246", "244"], ["200", "244"], ["257", "244"], ["19", "244"], ["228", "244"], ["247", "261"], ["318", "261"], ["19", "261"], ["247", "261"], ["327", "261"], ["282", "281"], ["282", "281"], ["283", "281"], ["19", "281"], ["300", "335"], ["19", "335"], ["314", "335"], ["305", "335"], ["124", "135"], ["19", "135"], ["124", "135"], ["246", "245"], ["200", "245"], ["257", "245"], ["19", "245"], ["283", "282"], ["283", "282"], ["314", "282"], ["314", "282"], ["314", "282"], ["300", "336"], ["19", "336"], ["314", "336"], ["247", "246"], ["247", "246"], ["284", "283"], ["284", "283"], ["285", "283"], ["19", "283"], ["298", "314"], ["19", "314"], ["316", "314"], ["316", "314"], ["306", "314"], ["318", "327"], ["19", "327"], ["231", "247"], ["19", "247"], ["231", "247"], ["285", "284"], ["285", "284"], ["298", "284"], ["298", "284"], ["298", "284"], ["317", "316"], ["19", "316"], ["286", "285"], ["286", "285"], ["278", "285"], ["62", "285"], ["19", "285"], ["293", "298"], ["19", "298"], ["300", "298"], ["300", "298"], ["305", "298"], ["305", "298"], ["318", "317"], ["318", "317"], ["27", "286"], ["293", "286"], ["293", "286"], ["293", "286"], ["243", "300"], ["19", "300"], ["293", "300"], ["306", "305"], ["306", "305"], ["293", "305"], ["19", "305"], ["308", "318"], ["19", "318"], ["308", "318"], ["314", "293"], ["62", "293"], ["19", "293"], ["257", "293"], ["273", "293"], ["243", "301"], ["19", "301"], ["307", "306"], ["19", "306"], ["259", "306"], ["290", "289"], ["290", "289"], ["308", "307"], ["308", "307"], ["261", "290"], ["19", "290"], ["261", "290"], ["290", "308"], ["19", "308"], ["290", "308"], ["53", "68"], ["53", "64"], ["53", "56"], ["53", "69"], ["53", "59"], ["53", "58"], ["53", "70"], ["53", "72"], ["53", "65"], ["53", "53"], ["53", "62"], ["87", "94"], ["87", "96"], ["87", "103"], ["87", "87"], ["87", "90"], ["87", "100"], ["188", "188"], ["188", "192"], ["188", "197"], ["188", "341"], ["188", "208"], ["188", "190"], ["188", "202"], ["188", "343"], ["188", "205"], ["188", "200"], ["188", "203"], ["188", "344"], ["200", "214"], ["200", "215"], ["200", "209"], ["200", "213"], ["200", "208"], ["200", "202"], ["200", "205"], ["200", "200"], ["200", "217"], ["200", "203"], ["213", "230"], ["213", "225"], ["213", "228"], ["213", "231"], ["228", "230"], ["228", "240"], ["228", "257"], ["228", "244"], ["228", "261"], ["228", "243"], ["228", "245"], ["228", "228"], ["228", "247"], ["228", "255"], ["228", "242"], ["228", "238"], ["228", "231"], ["228", "259"], ["228", "246"], ["228", "260"], ["228", "234"], ["255", "282"], ["255", "257"], ["255", "273"], ["255", "261"], ["255", "290"], ["255", "308"], ["255", "279"], ["255", "283"], ["255", "307"], ["255", "301"], ["255", "332"], ["255", "317"], ["255", "298"], ["255", "284"], ["255", "300"], ["255", "255"], ["255", "281"], ["255", "285"], ["255", "259"], ["255", "306"], ["255", "324"], ["255", "289"], ["255", "336"], ["255", "293"], ["255", "325"], ["255", "314"], ["255", "318"], ["255", "268"], ["255", "280"], ["255", "286"], ["255", "327"], ["255", "274"], ["255", "287"], ["255", "260"], ["255", "270"], ["255", "331"], ["255", "278"], ["255", "305"], ["255", "335"], ["255", "269"], ["255", "316"], ["255", "266"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "25": "<(nextInt,nextInt())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,fac = new long[n + 1])<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "31": "<(IDENTIFIER,n,n + 1)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,faci = new long[n + 1])<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "37": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,fac[0] = faci[0] = 1)<SUB>5</SUB>>", "41": "<(IDENTIFIER,fac,fac[0] = faci[0] = 1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,faci[0] = 1)<SUB>5</SUB>>", "45": "<(IDENTIFIER,faci,faci[0] = 1)<SUB>5</SUB>>", "47": "<(LITERAL,1,faci[0] = 1)<SUB>5</SUB>>", "49": "<(LOCAL,int i: int)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,int i = 1)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,i &lt;= n)<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,++i)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,faci[i])<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,faci[i] = modI(fac[i] = fac[i - 1] * i % M, M))<SUB>7</SUB>>", "63": "<(IDENTIFIER,this,modI(fac[i] = fac[i - 1] * i % M, M))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,fac[i])<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,fac[i] = fac[i - 1] * i % M)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.multiplication,fac[i - 1] * i)<SUB>7</SUB>>", "71": "<(IDENTIFIER,fac,fac[i - 1] * i)<SUB>7</SUB>>", "73": "<(IDENTIFIER,i,i - 1)<SUB>7</SUB>>", "75": "<(IDENTIFIER,i,fac[i - 1] * i)<SUB>7</SUB>>", "77": "<(IDENTIFIER,M,modI(fac[i] = fac[i - 1] * i % M, M))<SUB>7</SUB>>", "78": "<(&lt;operator&gt;.assignment,ANY grps = new ArrayList&lt;List&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "80": "<(&lt;operator&gt;.alloc,new ArrayList&lt;List&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "3": "<(IDENTIFIER,grps,new ArrayList&lt;List&lt;Integer&gt;&gt;())<SUB>8</SUB>>", "83": "<(LOCAL,int i: int)<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,++i)<SUB>9</SUB>>", "93": "<(LOCAL,int ai: int)<SUB>10</SUB>>", "95": "<(IDENTIFIER,ai,int ai = nextInt())<SUB>10</SUB>>", "97": "<(IDENTIFIER,in,nextInt())<SUB>10</SUB>>", "99": "<(LOCAL,int j: int)<SUB>11</SUB>>", "101": "<(IDENTIFIER,j,int j = 0)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.preIncrement,++j)<SUB>11</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= grps.size())<SUB>12</SUB>>", "109": "<(size,size())<SUB>12</SUB>>", "111": "<(add,add(new ArrayList&lt;Integer&gt;()))<SUB>13</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "115": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "117": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>13</SUB>>", "119": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "121": "<(&lt;operator&gt;.logicalAnd,grps.get(j).size() &gt; 0 &amp;&amp; !ps((long) grps.get(j).get(0) * ai))<SUB>14</SUB>>", "123": "<(size,size())<SUB>14</SUB>>", "125": "<(IDENTIFIER,grps,get(j))<SUB>14</SUB>>", "127": "<(LITERAL,0,grps.get(j).size() &gt; 0)<SUB>14</SUB>>", "129": "<(ps,ps((long) grps.get(j).get(0) * ai))<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.multiplication,(long) grps.get(j).get(0) * ai)<SUB>14</SUB>>", "133": "<(TYPE_REF,long,long)<SUB>14</SUB>>", "135": "<(get,get(j))<SUB>14</SUB>>", "137": "<(IDENTIFIER,j,get(j))<SUB>14</SUB>>", "139": "<(IDENTIFIER,ai,(long) grps.get(j).get(0) * ai)<SUB>14</SUB>>", "141": "<(add,add(ai))<SUB>16</SUB>>", "143": "<(IDENTIFIER,grps,get(j))<SUB>16</SUB>>", "145": "<(IDENTIFIER,ai,add(ai))<SUB>16</SUB>>", "147": "<(LOCAL,long[][] dp: long[][])<SUB>20</SUB>>", "149": "<(IDENTIFIER,dp,long[][] dp = new long[grps.size()][n - grps.size() + 1])<SUB>20</SUB>>", "151": "<(size,size())<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.addition,n - grps.size() + 1)<SUB>20</SUB>>", "155": "<(IDENTIFIER,n,n - grps.size())<SUB>20</SUB>>", "157": "<(IDENTIFIER,grps,size())<SUB>20</SUB>>", "159": "<(&lt;operator&gt;.assignment,dp[0][grps.get(0).size() - 1] = fac[grps.get(0).size()])<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>21</SUB>>", "163": "<(LITERAL,0,dp[0][grps.get(0).size() - 1] = fac[grps.get(0).size()])<SUB>21</SUB>>", "165": "<(size,size())<SUB>21</SUB>>", "167": "<(IDENTIFIER,grps,get(0))<SUB>21</SUB>>", "169": "<(LITERAL,1,grps.get(0).size() - 1)<SUB>21</SUB>>", "171": "<(IDENTIFIER,fac,dp[0][grps.get(0).size() - 1] = fac[grps.get(0).size()])<SUB>21</SUB>>", "173": "<(get,get(0))<SUB>21</SUB>>", "175": "<(LITERAL,0,get(0))<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.assignment,int ad = size())<SUB>22</SUB>>", "179": "<(size,size())<SUB>22</SUB>>", "181": "<(IDENTIFIER,grps,get(0))<SUB>22</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; grps.size()); ++i),for (int i = 1; Some(i &lt; grps.size()); ++i))<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>23</SUB>>", "187": "<(LITERAL,1,int i = 1)<SUB>23</SUB>>", "189": "<(IDENTIFIER,i,i &lt; grps.size())<SUB>23</SUB>>", "191": "<(IDENTIFIER,grps,size())<SUB>23</SUB>>", "193": "<(IDENTIFIER,i,++i)<SUB>23</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; dp[i - 1].length); ++j),for (int j = 0; Some(j &lt; dp[i - 1].length); ++j))<SUB>24</SUB>>", "197": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>24</SUB>>", "199": "<(LITERAL,0,int j = 0)<SUB>24</SUB>>", "201": "<(IDENTIFIER,j,j &lt; dp[i - 1].length)<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>24</SUB>>", "207": "<(LITERAL,1,i - 1)<SUB>24</SUB>>", "209": "<(&lt;operator&gt;.preIncrement,++j)<SUB>24</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "213": "<(&lt;operator&gt;.equals,dp[i - 1][j] == 0)<SUB>25</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>25</SUB>>", "217": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>25</SUB>>", "219": "<(LITERAL,1,i - 1)<SUB>25</SUB>>", "221": "<(LITERAL,0,dp[i - 1][j] == 0)<SUB>25</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; grps.get(i).size()); ++k),for (int k = 0; Some(k &lt; grps.get(i).size()); ++k))<SUB>27</SUB>>", "225": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>27</SUB>>", "227": "<(LITERAL,0,int k = 0)<SUB>27</SUB>>", "229": "<(IDENTIFIER,k,k &lt; grps.get(i).size())<SUB>27</SUB>>", "231": "<(get,get(i))<SUB>27</SUB>>", "233": "<(IDENTIFIER,i,get(i))<SUB>27</SUB>>", "235": "<(IDENTIFIER,k,++k)<SUB>27</SUB>>", "237": "<(LOCAL,int l: int)<SUB>28</SUB>>", "239": "<(IDENTIFIER,l,int l = max(grps.get(i).size() + j - k - ad - 1, 0))<SUB>28</SUB>>", "241": "<(IDENTIFIER,Math,max(grps.get(i).size() + j - k - ad - 1, 0))<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.subtraction,grps.get(i).size() + j - k - ad)<SUB>28</SUB>>", "245": "<(&lt;operator&gt;.addition,grps.get(i).size() + j)<SUB>28</SUB>>", "247": "<(get,get(i))<SUB>28</SUB>>", "249": "<(IDENTIFIER,i,get(i))<SUB>28</SUB>>", "251": "<(IDENTIFIER,k,grps.get(i).size() + j - k)<SUB>28</SUB>>", "253": "<(LITERAL,1,grps.get(i).size() + j - k - ad - 1)<SUB>28</SUB>>", "255": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= Math.min(grps.get(i).size() - k, j))<SUB>28</SUB>>", "257": "<(min,min(grps.get(i).size() - k, j))<SUB>28</SUB>>", "259": "<(&lt;operator&gt;.subtraction,grps.get(i).size() - k)<SUB>28</SUB>>", "261": "<(get,get(i))<SUB>28</SUB>>", "263": "<(IDENTIFIER,i,get(i))<SUB>28</SUB>>", "265": "<(IDENTIFIER,j,min(grps.get(i).size() - k, j))<SUB>28</SUB>>", "267": "<(IDENTIFIER,l,++l)<SUB>28</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,dp[i][j + k - l])<SUB>29</SUB>>", "271": "<(IDENTIFIER,dp,dp[i][j + k - l] = (fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M * nck(grps.get(i).size() - 1, k) % M * dp[i - 1][j] + dp[i][j + k - l]) % M)<SUB>29</SUB>>", "273": "<(&lt;operator&gt;.subtraction,j + k - l)<SUB>29</SUB>>", "275": "<(IDENTIFIER,j,j + k)<SUB>29</SUB>>", "277": "<(IDENTIFIER,l,j + k - l)<SUB>29</SUB>>", "279": "<(&lt;operator&gt;.addition,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M * nck(grps.get(i).size() - 1, k) % M * dp[i - 1][j] + dp[i][j + k - l])<SUB>29</SUB>>", "281": "<(&lt;operator&gt;.modulo,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M * nck(grps.get(i).size() - 1, k) % M)<SUB>29</SUB>>", "283": "<(&lt;operator&gt;.modulo,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M)<SUB>29</SUB>>", "285": "<(&lt;operator&gt;.modulo,fac[grps.get(i).size()] * nck(j, l) % M)<SUB>29</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,fac[grps.get(i).size()])<SUB>29</SUB>>", "289": "<(size,size())<SUB>29</SUB>>", "291": "<(IDENTIFIER,grps,get(i))<SUB>29</SUB>>", "293": "<(nck,nck(j, l))<SUB>29</SUB>>", "295": "<(IDENTIFIER,j,nck(j, l))<SUB>29</SUB>>", "297": "<(IDENTIFIER,M,fac[grps.get(i).size()] * nck(j, l) % M)<SUB>29</SUB>>", "299": "<(IDENTIFIER,this,nck(ad + 1 - j, grps.get(i).size() - k - l))<SUB>29</SUB>>", "301": "<(&lt;operator&gt;.addition,ad + 1)<SUB>29</SUB>>", "303": "<(LITERAL,1,ad + 1)<SUB>29</SUB>>", "305": "<(&lt;operator&gt;.subtraction,grps.get(i).size() - k - l)<SUB>29</SUB>>", "307": "<(size,size())<SUB>29</SUB>>", "309": "<(IDENTIFIER,grps,get(i))<SUB>29</SUB>>", "311": "<(IDENTIFIER,k,grps.get(i).size() - k)<SUB>29</SUB>>", "313": "<(IDENTIFIER,M,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M)<SUB>29</SUB>>", "315": "<(IDENTIFIER,this,nck(grps.get(i).size() - 1, k))<SUB>29</SUB>>", "317": "<(size,size())<SUB>29</SUB>>", "319": "<(IDENTIFIER,grps,get(i))<SUB>29</SUB>>", "321": "<(LITERAL,1,grps.get(i).size() - 1)<SUB>29</SUB>>", "323": "<(IDENTIFIER,M,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M * nck(grps.get(i).size() - 1, k) % M)<SUB>29</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>29</SUB>>", "327": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>29</SUB>>", "329": "<(LITERAL,1,i - 1)<SUB>29</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,dp[i][j + k - l])<SUB>29</SUB>>", "333": "<(IDENTIFIER,dp,fac[grps.get(i).size()] * nck(j, l) % M * nck(ad + 1 - j, grps.get(i).size() - k - l) % M * nck(grps.get(i).size() - 1, k) % M * dp[i - 1][j] + dp[i][j + k - l])<SUB>29</SUB>>", "335": "<(&lt;operator&gt;.subtraction,j + k - l)<SUB>29</SUB>>", "337": "<(IDENTIFIER,j,j + k)<SUB>29</SUB>>", "339": "<(IDENTIFIER,l,j + k - l)<SUB>29</SUB>>", "341": "<(&lt;operator&gt;.assignmentPlus,ad += size())<SUB>31</SUB>>", "343": "<(size,size())<SUB>31</SUB>>", "345": "<(IDENTIFIER,grps,get(i))<SUB>31</SUB>>", "347": "<(println,println(dp[grps.size() - 1][0]))<SUB>34</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,dp[grps.size() - 1][0])<SUB>34</SUB>>", "351": "<(IDENTIFIER,dp,println(dp[grps.size() - 1][0]))<SUB>34</SUB>>", "353": "<(size,size())<SUB>34</SUB>>", "355": "<(LITERAL,1,grps.size() - 1)<SUB>34</SUB>>", "357": "<(close,close())<SUB>35</SUB>>", "359": "<(MODIFIER,PUBLIC)>", "361": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}