{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "43"], ["21", "44"], ["21", "47"], ["21", "58"], ["21", "69"], ["21", "84"], ["21", "85"], ["21", "88"], ["21", "113"], ["21", "114"], ["21", "117"], ["21", "123"], ["21", "148"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "76"], ["70", "71"], ["71", "72"], ["71", "73"], ["71", "74"], ["71", "75"], ["76", "77"], ["76", "83"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "91"], ["89", "92"], ["89", "93"], ["94", "95"], ["94", "98"], ["94", "101"], ["94", "108"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "120"], ["118", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["123", "130"], ["123", "133"], ["123", "135"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "142"], ["136", "146"], ["137", "138"], ["137", "139"], ["137", "140"], ["137", "141"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["40", "44"], ["44", "48"], ["85", "89"], ["114", "118"], ["148", "155"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["48", "55"], ["48", "59"], ["59", "66"], ["59", "71"], ["70", "80"], ["70", "85"], ["89", "95"], ["89", "114"], ["118", "120"], ["118", "128"], ["120", "128"], ["125", "130"], ["130", "137"], ["130", "151"], ["133", "130"], ["149", "148"], ["28", "26"], ["52", "57"], ["57", "155"], ["63", "68"], ["68", "155"], ["71", "70"], ["77", "83"], ["83", "155"], ["95", "98"], ["98", "104"], ["101", "109"], ["127", "125"], ["151", "149"], ["53", "52"], ["64", "63"], ["78", "81"], ["81", "77"], ["103", "101"], ["109", "89"], ["109", "114"], ["128", "127"], ["137", "143"], ["137", "151"], ["55", "53"], ["66", "64"], ["80", "78"], ["104", "103"], ["143", "133"], ["19", "24"], ["68", "155"], ["57", "155"], ["83", "155"], ["20", "155"], ["22", "155"], ["25", "155"], ["25", "155"], ["30", "155"], ["37", "155"], ["35", "155"], ["35", "155"], ["40", "155"], ["40", "155"], ["44", "155"], ["44", "155"], ["44", "155"], ["48", "155"], ["48", "155"], ["52", "155"], ["52", "155"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["35", "40"], ["19", "40"], ["40", "44"], ["19", "44"], ["19", "85"], ["44", "114"], ["109", "114"], ["19", "114"], ["22", "25"], ["19", "25"], ["19", "120"], ["19", "125"], ["44", "125"], ["109", "125"], ["114", "148"], ["143", "148"], ["19", "148"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "48"], ["19", "48"], ["19", "57"], ["48", "59"], ["19", "59"], ["35", "59"], ["19", "68"], ["71", "70"], ["71", "70"], ["71", "70"], ["71", "70"], ["19", "83"], ["71", "89"], ["19", "89"], ["71", "89"], ["71", "89"], ["71", "89"], ["109", "89"], ["89", "95"], ["19", "95"], ["19", "98"], ["103", "101"], ["103", "101"], ["85", "118"], ["98", "118"], ["19", "118"], ["125", "130"], ["133", "130"], ["19", "130"], ["89", "130"], ["109", "130"], ["120", "130"], ["19", "133"], ["137", "133"], ["19", "52"], ["19", "63"], ["19", "71"], ["59", "71"], ["59", "71"], ["40", "71"], ["81", "77"], ["19", "127"], ["44", "127"], ["109", "127"], ["19", "81"], ["104", "103"], ["104", "103"], ["19", "103"], ["95", "109"], ["19", "109"], ["101", "109"], ["89", "137"], ["19", "137"], ["89", "137"], ["89", "137"], ["130", "137"], ["137", "143"], ["19", "143"], ["19", "104"], ["89", "104"], ["48", "57"], ["48", "52"], ["48", "59"], ["48", "53"], ["48", "55"], ["59", "68"], ["59", "64"], ["59", "66"], ["59", "71"], ["59", "70"], ["59", "63"], ["70", "77"], ["70", "89"], ["70", "128"], ["70", "81"], ["70", "114"], ["70", "85"], ["70", "149"], ["70", "151"], ["70", "148"], ["70", "80"], ["70", "83"], ["70", "130"], ["70", "118"], ["70", "127"], ["70", "125"], ["70", "78"], ["89", "98"], ["89", "103"], ["89", "104"], ["89", "95"], ["89", "101"], ["89", "109"], ["118", "120"], ["130", "137"], ["109", "89"], ["137", "143"], ["137", "130"], ["137", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(LOCAL,long upn: long)<SUB>5</SUB>>", "41": "<(IDENTIFIER,upn,long upn = k)<SUB>5</SUB>>", "43": "<(LOCAL,long tmp: long)<SUB>6</SUB>>", "45": "<(IDENTIFIER,tmp,long tmp = upn)<SUB>6</SUB>>", "47": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>7</SUB>>", "49": "<(IDENTIFIER,n,n == 1)<SUB>7</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "57": "<(RETURN,return;,return;)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>11</SUB>>", "61": "<(IDENTIFIER,k,n &lt;= k)<SUB>11</SUB>>", "63": "<(println,System.out.println(1))<SUB>12</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(1))<SUB>12</SUB>>", "67": "<(LITERAL,1,System.out.println(1))<SUB>12</SUB>>", "69": "<(CONTROL_STRUCTURE,if (!bS(n, k, upn)),if (!bS(n, k, upn)))<SUB>16</SUB>>", "71": "<(bS,bS(n, k, upn))<SUB>16</SUB>>", "73": "<(IDENTIFIER,n,bS(n, k, upn))<SUB>16</SUB>>", "75": "<(IDENTIFIER,upn,bS(n, k, upn))<SUB>16</SUB>>", "77": "<(println,System.out.println(-1))<SUB>17</SUB>>", "79": "<(IDENTIFIER,System,System.out.println(-1))<SUB>17</SUB>>", "81": "<(&lt;operator&gt;.minus,-1)<SUB>17</SUB>>", "83": "<(RETURN,return;,return;)<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.assignment,boolean flag = false)<SUB>20</SUB>>", "87": "<(LITERAL,false,boolean flag = false)<SUB>20</SUB>>", "89": "<(bS,bS(n, k, upn))<SUB>21</SUB>>", "91": "<(IDENTIFIER,n,bS(n, k, upn))<SUB>21</SUB>>", "93": "<(IDENTIFIER,upn,bS(n, k, upn))<SUB>21</SUB>>", "95": "<(&lt;operator&gt;.assignment,tmp = upn)<SUB>22</SUB>>", "97": "<(IDENTIFIER,upn,tmp = upn)<SUB>22</SUB>>", "99": "<(IDENTIFIER,flag,flag = true)<SUB>23</SUB>>", "101": "<(&lt;operator&gt;.assignment,upn = 5 * upn / 6)<SUB>24</SUB>>", "103": "<(&lt;operator&gt;.division,5 * upn / 6)<SUB>24</SUB>>", "105": "<(LITERAL,5,5 * upn)<SUB>24</SUB>>", "107": "<(LITERAL,6,5 * upn / 6)<SUB>24</SUB>>", "109": "<(&lt;operator&gt;.equals,tmp == upn)<SUB>25</SUB>>", "111": "<(IDENTIFIER,upn,tmp == upn)<SUB>25</SUB>>", "113": "<(LOCAL,long ans: long)<SUB>28</SUB>>", "115": "<(IDENTIFIER,ans,long ans = tmp)<SUB>28</SUB>>", "117": "<(CONTROL_STRUCTURE,if (!flag),if (!flag))<SUB>29</SUB>>", "119": "<(IDENTIFIER,flag,!flag)<SUB>29</SUB>>", "121": "<(IDENTIFIER,upn,upn = 0)<SUB>30</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int i = (int) tmp; Some(i &gt;= upn); i--),for (int i = (int) tmp; Some(i &gt;= upn); i--))<SUB>31</SUB>>", "125": "<(&lt;operator&gt;.assignment,int i = (int) tmp)<SUB>31</SUB>>", "127": "<(&lt;operator&gt;.cast,(int) tmp)<SUB>31</SUB>>", "129": "<(IDENTIFIER,tmp,(int) tmp)<SUB>31</SUB>>", "131": "<(IDENTIFIER,i,i &gt;= upn)<SUB>31</SUB>>", "133": "<(&lt;operator&gt;.postDecrement,i--)<SUB>31</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "137": "<(bS,bS(n, k, i))<SUB>32</SUB>>", "139": "<(IDENTIFIER,n,bS(n, k, i))<SUB>32</SUB>>", "141": "<(IDENTIFIER,i,bS(n, k, i))<SUB>32</SUB>>", "143": "<(&lt;operator&gt;.assignment,ans = i)<SUB>33</SUB>>", "145": "<(IDENTIFIER,i,ans = i)<SUB>33</SUB>>", "147": "<(CONTROL_STRUCTURE,break;,break;)<SUB>36</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "151": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}