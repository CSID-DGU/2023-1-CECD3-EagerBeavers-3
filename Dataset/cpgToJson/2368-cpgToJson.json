{"edges": [["25", "27"], ["25", "193"], ["25", "194"], ["25", "195"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "35"], ["27", "38"], ["27", "39"], ["27", "40"], ["27", "44"], ["27", "45"], ["27", "49"], ["27", "8"], ["27", "66"], ["27", "69"], ["27", "73"], ["27", "74"], ["27", "77"], ["27", "108"], ["27", "109"], ["27", "113"], ["27", "114"], ["27", "118"], ["27", "191"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "5"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["69", "7"], ["69", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "84"], ["77", "87"], ["77", "89"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "96"], ["89", "105"], ["90", "91"], ["90", "92"], ["90", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "123"], ["118", "126"], ["118", "128"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "136"], ["128", "137"], ["128", "10"], ["128", "143"], ["128", "146"], ["128", "150"], ["128", "151"], ["128", "158"], ["128", "167"], ["128", "170"], ["128", "173"], ["128", "176"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "135"], ["133", "134"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "142"], ["140", "141"], ["143", "144"], ["143", "145"], ["146", "9"], ["146", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "182"], ["176", "186"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["187", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["28", "34"], ["31", "37"], ["35", "38"], ["38", "42"], ["40", "47"], ["45", "51"], ["66", "70"], ["69", "74"], ["74", "81"], ["109", "116"], ["114", "120"], ["191", "195"], ["30", "28"], ["32", "31"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "68"], ["57", "54"], ["68", "66"], ["70", "69"], ["79", "84"], ["84", "92"], ["84", "111"], ["87", "84"], ["111", "109"], ["116", "114"], ["120", "123"], ["123", "133"], ["123", "191"], ["126", "123"], ["34", "32"], ["60", "57"], ["81", "79"], ["90", "101"], ["96", "105"], ["105", "87"], ["130", "140"], ["137", "145"], ["143", "147"], ["146", "154"], ["151", "163"], ["158", "167"], ["167", "170"], ["170", "173"], ["173", "178"], ["61", "64"], ["64", "60"], ["92", "90"], ["98", "96"], ["132", "130"], ["139", "137"], ["145", "143"], ["147", "146"], ["153", "151"], ["160", "158"], ["177", "183"], ["177", "188"], ["100", "98"], ["133", "132"], ["140", "139"], ["154", "153"], ["161", "160"], ["178", "177"], ["183", "126"], ["101", "100"], ["163", "161"], ["188", "126"], ["25", "30"], ["26", "195"], ["28", "195"], ["31", "195"], ["31", "195"], ["35", "195"], ["38", "195"], ["40", "195"], ["45", "195"], ["45", "195"], ["54", "195"], ["66", "195"], ["69", "195"], ["69", "195"], ["69", "195"], ["74", "195"], ["74", "195"], ["79", "195"], ["79", "195"], ["84", "195"], ["111", "195"], ["109", "195"], ["109", "195"], ["114", "195"], ["116", "195"], ["114", "195"], ["114", "195"], ["120", "195"], ["123", "195"], ["123", "195"], ["123", "195"], ["191", "195"], ["191", "195"], ["130", "195"], ["140", "195"], ["139", "195"], ["137", "195"], ["137", "195"], ["143", "195"], ["146", "195"], ["147", "195"], ["146", "195"], ["146", "195"], ["154", "195"], ["154", "195"], ["153", "195"], ["151", "195"], ["151", "195"], ["161", "195"], ["160", "195"], ["158", "195"], ["158", "195"], ["170", "195"], ["170", "195"], ["178", "195"], ["177", "195"], ["177", "195"], ["188", "195"], ["183", "195"], ["126", "195"], ["90", "195"], ["98", "195"], ["100", "195"], ["98", "195"], ["96", "195"], ["96", "195"], ["105", "195"], ["87", "195"], ["60", "195"], ["60", "195"], ["57", "195"], ["25", "26"], ["25", "28"], ["25", "35"], ["42", "40"], ["47", "45"], ["25", "66"], ["25", "74"], ["111", "109"], ["116", "114"], ["28", "31"], ["25", "31"], ["35", "38"], ["25", "38"], ["25", "51"], ["66", "69"], ["25", "69"], ["54", "69"], ["81", "79"], ["81", "79"], ["25", "120"], ["31", "191"], ["188", "191"], ["183", "191"], ["25", "191"], ["38", "42"], ["25", "42"], ["40", "47"], ["25", "47"], ["51", "54"], ["57", "54"], ["25", "54"], ["47", "54"], ["54", "57"], ["25", "57"], ["64", "60"], ["54", "70"], ["25", "70"], ["79", "84"], ["87", "84"], ["25", "84"], ["84", "87"], ["25", "87"], ["98", "96"], ["98", "96"], ["25", "105"], ["42", "111"], ["64", "111"], ["25", "111"], ["81", "116"], ["25", "116"], ["120", "123"], ["126", "123"], ["25", "123"], ["109", "123"], ["123", "126"], ["25", "126"], ["132", "130"], ["132", "130"], ["139", "137"], ["139", "137"], ["25", "143"], ["154", "151"], ["154", "151"], ["25", "151"], ["160", "158"], ["160", "158"], ["25", "167"], ["167", "170"], ["25", "170"], ["25", "173"], ["25", "81"], ["54", "81"], ["69", "90"], ["98", "90"], ["25", "90"], ["45", "90"], ["100", "90"], ["60", "90"], ["74", "96"], ["105", "96"], ["25", "96"], ["96", "105"], ["143", "146"], ["25", "146"], ["116", "146"], ["158", "167"], ["74", "170"], ["178", "170"], ["105", "170"], ["170", "173"], ["42", "64"], ["25", "64"], ["90", "98"], ["25", "98"], ["100", "98"], ["100", "98"], ["133", "132"], ["25", "132"], ["140", "139"], ["25", "139"], ["116", "147"], ["25", "147"], ["154", "153"], ["154", "153"], ["25", "153"], ["161", "160"], ["161", "160"], ["25", "160"], ["178", "177"], ["178", "177"], ["25", "177"], ["45", "100"], ["90", "100"], ["25", "100"], ["111", "133"], ["140", "133"], ["25", "133"], ["133", "140"], ["25", "140"], ["137", "154"], ["25", "154"], ["130", "154"], ["163", "161"], ["25", "161"], ["163", "161"], ["173", "178"], ["25", "178"], ["31", "183"], ["188", "183"], ["25", "183"], ["151", "163"], ["25", "163"], ["31", "188"], ["183", "188"], ["25", "188"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "54"], ["54", "61"], ["84", "96"], ["84", "98"], ["84", "84"], ["84", "92"], ["84", "87"], ["84", "101"], ["84", "90"], ["84", "105"], ["84", "100"], ["123", "160"], ["123", "167"], ["123", "154"], ["123", "145"], ["123", "146"], ["123", "161"], ["123", "163"], ["123", "178"], ["123", "132"], ["123", "151"], ["123", "153"], ["123", "123"], ["123", "170"], ["123", "140"], ["123", "143"], ["123", "126"], ["123", "173"], ["123", "137"], ["123", "177"], ["123", "130"], ["123", "147"], ["123", "139"], ["123", "158"], ["123", "133"], ["177", "183"], ["177", "188"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "6": "<(LOCAL,Scanner in: ANY)<SUB>5</SUB>>", "36": "<(IDENTIFIER,in,ANY in = new Scanner())<SUB>5</SUB>>", "38": "<(&lt;init&gt;,new Scanner())<SUB>5</SUB>>", "39": "<(LOCAL,int n: int)<SUB>6</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] data = new int[n])<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,data[i] = nextInt())<SUB>9</SUB>>", "65": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY tree = new FT(n + 1))<SUB>11</SUB>>", "68": "<(&lt;operator&gt;.alloc,new FT(n + 1))<SUB>11</SUB>>", "7": "<(IDENTIFIER,tree,new FT(n + 1))<SUB>11</SUB>>", "71": "<(IDENTIFIER,n,n + 1)<SUB>11</SUB>>", "73": "<(LOCAL,int result: int)<SUB>12</SUB>>", "75": "<(IDENTIFIER,result,int result = 0)<SUB>12</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); i--),for (int i = n - 1; Some(i &gt;= 0); i--))<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "83": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,i &gt;= 0)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.postDecrement,i--)<SUB>13</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "91": "<(IDENTIFIER,tree,update(data[i], 1))<SUB>14</SUB>>", "93": "<(IDENTIFIER,data,update(data[i], 1))<SUB>14</SUB>>", "95": "<(LITERAL,1,update(data[i], 1))<SUB>14</SUB>>", "97": "<(IDENTIFIER,result,result += get(data[i] - 1))<SUB>15</SUB>>", "99": "<(IDENTIFIER,tree,get(data[i] - 1))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>15</SUB>>", "103": "<(IDENTIFIER,i,data[i] - 1)<SUB>15</SUB>>", "105": "<(&lt;operators&gt;.assignmentModulo,result %= 2)<SUB>16</SUB>>", "107": "<(LITERAL,2,result %= 2)<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.assignment,int q = nextInt())<SUB>18</SUB>>", "111": "<(nextInt,nextInt())<SUB>18</SUB>>", "113": "<(LOCAL,int[] tmp: int[])<SUB>19</SUB>>", "115": "<(IDENTIFIER,tmp,int[] tmp = new int[n])<SUB>19</SUB>>", "117": "<(IDENTIFIER,n,new int[n])<SUB>19</SUB>>", "119": "<(LOCAL,int i: int)<SUB>20</SUB>>", "121": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>20</SUB>>", "125": "<(IDENTIFIER,q,i &lt; q)<SUB>20</SUB>>", "127": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "129": "<(LOCAL,int l: int)<SUB>21</SUB>>", "131": "<(IDENTIFIER,l,int l = in.nextInt() - 1)<SUB>21</SUB>>", "133": "<(nextInt,nextInt())<SUB>21</SUB>>", "135": "<(LITERAL,1,in.nextInt() - 1)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.assignment,int r = in.nextInt() - 1)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>22</SUB>>", "141": "<(IDENTIFIER,in,nextInt())<SUB>22</SUB>>", "10": "<(LOCAL,FT a: ANY)<SUB>23</SUB>>", "144": "<(IDENTIFIER,a,ANY a = new FT(n + 1))<SUB>23</SUB>>", "146": "<(&lt;init&gt;,new FT(n + 1))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.addition,n + 1)<SUB>23</SUB>>", "149": "<(LITERAL,1,n + 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignment,int total = r - l + 1)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>24</SUB>>", "155": "<(IDENTIFIER,r,r - l)<SUB>24</SUB>>", "157": "<(LITERAL,1,r - l + 1)<SUB>24</SUB>>", "159": "<(IDENTIFIER,total,total = total * (total - 1) / 2)<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.multiplication,total * (total - 1))<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.subtraction,total - 1)<SUB>25</SUB>>", "165": "<(LITERAL,1,total - 1)<SUB>25</SUB>>", "167": "<(&lt;operators&gt;.assignmentModulo,total %= 2)<SUB>26</SUB>>", "169": "<(LITERAL,2,total %= 2)<SUB>26</SUB>>", "171": "<(IDENTIFIER,result,result += total)<SUB>41</SUB>>", "173": "<(&lt;operators&gt;.assignmentModulo,result %= 2)<SUB>42</SUB>>", "175": "<(LITERAL,2,result %= 2)<SUB>42</SUB>>", "177": "<(&lt;operator&gt;.equals,result % 2 == 0)<SUB>45</SUB>>", "179": "<(IDENTIFIER,result,result % 2)<SUB>45</SUB>>", "181": "<(LITERAL,0,result % 2 == 0)<SUB>45</SUB>>", "183": "<(println,println(&quot;even&quot;))<SUB>46</SUB>>", "185": "<(LITERAL,&quot;even&quot;,println(&quot;even&quot;))<SUB>46</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "189": "<(IDENTIFIER,out,println(&quot;odd&quot;))<SUB>48</SUB>>", "191": "<(close,close())<SUB>51</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}