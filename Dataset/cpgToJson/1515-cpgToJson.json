{"edges": [["19", "20"], ["19", "21"], ["19", "176"], ["19", "177"], ["19", "178"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "46"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "56"], ["21", "57"], ["21", "60"], ["21", "63"], ["21", "82"], ["21", "101"], ["21", "103"], ["21", "105"], ["21", "106"], ["21", "110"], ["21", "115"], ["21", "136"], ["21", "171"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "77"], ["67", "80"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "96"], ["86", "99"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["103", "104"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["136", "141"], ["136", "144"], ["136", "146"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "158"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "170"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "169"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "48"], ["46", "53"], ["51", "57"], ["57", "60"], ["60", "64"], ["101", "103"], ["103", "108"], ["106", "111"], ["110", "117"], ["171", "178"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["53", "51"], ["64", "69"], ["64", "83"], ["83", "88"], ["83", "101"], ["108", "106"], ["111", "110"], ["117", "120"], ["120", "126"], ["120", "138"], ["123", "120"], ["125", "123"], ["138", "141"], ["141", "149"], ["141", "174"], ["144", "141"], ["172", "171"], ["28", "26"], ["68", "77"], ["77", "80"], ["80", "64"], ["87", "96"], ["96", "99"], ["99", "83"], ["126", "132"], ["129", "125"], ["147", "162"], ["147", "144"], ["174", "172"], ["69", "73"], ["72", "68"], ["88", "92"], ["91", "87"], ["130", "129"], ["148", "147"], ["148", "154"], ["153", "147"], ["159", "170"], ["170", "178"], ["73", "74"], ["74", "72"], ["92", "93"], ["93", "91"], ["132", "130"], ["149", "148"], ["154", "153"], ["160", "166"], ["163", "159"], ["162", "160"], ["164", "163"], ["166", "164"], ["19", "24"], ["170", "178"], ["20", "178"], ["22", "178"], ["25", "178"], ["25", "178"], ["30", "178"], ["37", "178"], ["35", "178"], ["35", "178"], ["40", "178"], ["40", "178"], ["40", "178"], ["46", "178"], ["46", "178"], ["51", "178"], ["51", "178"], ["51", "178"], ["57", "178"], ["60", "178"], ["64", "178"], ["64", "178"], ["83", "178"], ["83", "178"], ["101", "178"], ["101", "178"], ["103", "178"], ["106", "178"], ["106", "178"], ["106", "178"], ["110", "178"], ["110", "178"], ["117", "178"], ["120", "178"], ["138", "178"], ["138", "178"], ["141", "178"], ["148", "178"], ["147", "178"], ["153", "178"], ["147", "178"], ["147", "178"], ["144", "178"], ["159", "178"], ["166", "178"], ["163", "178"], ["159", "178"], ["159", "178"], ["125", "178"], ["129", "178"], ["125", "178"], ["125", "178"], ["123", "178"], ["87", "178"], ["91", "178"], ["87", "178"], ["87", "178"], ["96", "178"], ["99", "178"], ["68", "178"], ["72", "178"], ["68", "178"], ["68", "178"], ["77", "178"], ["80", "178"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["48", "46"], ["53", "51"], ["19", "57"], ["19", "60"], ["108", "106"], ["19", "110"], ["22", "25"], ["19", "25"], ["60", "101"], ["80", "101"], ["19", "101"], ["57", "103"], ["99", "103"], ["19", "103"], ["19", "117"], ["129", "125"], ["129", "125"], ["103", "138"], ["19", "138"], ["40", "171"], ["19", "171"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["35", "42"], ["19", "48"], ["19", "53"], ["42", "64"], ["77", "64"], ["19", "64"], ["19", "68"], ["74", "68"], ["74", "68"], ["19", "77"], ["42", "83"], ["96", "83"], ["19", "83"], ["19", "87"], ["93", "87"], ["93", "87"], ["19", "96"], ["19", "108"], ["117", "120"], ["123", "120"], ["19", "120"], ["132", "123"], ["19", "123"], ["138", "141"], ["144", "141"], ["19", "141"], ["141", "144"], ["19", "144"], ["74", "77"], ["60", "80"], ["19", "80"], ["93", "96"], ["57", "99"], ["19", "99"], ["106", "129"], ["19", "129"], ["148", "147"], ["148", "147"], ["153", "147"], ["153", "147"], ["19", "170"], ["19", "72"], ["74", "72"], ["74", "72"], ["19", "91"], ["93", "91"], ["93", "91"], ["51", "148"], ["19", "148"], ["46", "153"], ["19", "153"], ["163", "159"], ["163", "159"], ["64", "74"], ["19", "74"], ["83", "93"], ["19", "93"], ["120", "132"], ["19", "132"], ["106", "163"], ["19", "163"], ["141", "166"], ["19", "166"], ["64", "68"], ["64", "73"], ["64", "77"], ["64", "64"], ["64", "72"], ["64", "69"], ["64", "74"], ["64", "80"], ["83", "96"], ["83", "99"], ["83", "92"], ["83", "87"], ["83", "91"], ["83", "93"], ["83", "83"], ["83", "88"], ["120", "120"], ["120", "132"], ["120", "123"], ["120", "129"], ["120", "126"], ["120", "130"], ["120", "125"], ["141", "149"], ["141", "148"], ["141", "174"], ["141", "147"], ["141", "171"], ["141", "172"], ["147", "160"], ["147", "141"], ["147", "163"], ["147", "166"], ["147", "162"], ["147", "170"], ["147", "159"], ["147", "144"], ["147", "164"], ["148", "154"], ["148", "153"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY QQQ = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,QQQ,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long l: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,l,long l = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,QQQ,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long r = nextLong())<SUB>4</SUB>>", "37": "<(nextLong,nextLong())<SUB>4</SUB>>", "39": "<(LOCAL,long ans: long)<SUB>5</SUB>>", "41": "<(IDENTIFIER,ans,long ans = l ^ r)<SUB>5</SUB>>", "43": "<(IDENTIFIER,l,l ^ r)<SUB>5</SUB>>", "45": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,a,int[] a = new int[70])<SUB>6</SUB>>", "49": "<(LITERAL,70,new int[70])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] b = new int[70])<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[70])>", "55": "<(LOCAL,int n: int)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int n = 0)<SUB>8</SUB>>", "59": "<(LITERAL,0,int n = 0)<SUB>8</SUB>>", "61": "<(IDENTIFIER,m,int m = 0)<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,while (l != 0),while (l != 0))<SUB>9</SUB>>", "65": "<(IDENTIFIER,l,l != 0)<SUB>9</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,a[m])<SUB>10</SUB>>", "71": "<(IDENTIFIER,m,a[m] = (int) (l % 2))<SUB>10</SUB>>", "73": "<(TYPE_REF,int,int)<SUB>10</SUB>>", "75": "<(IDENTIFIER,l,l % 2)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignmentDivision,l /= 2)<SUB>11</SUB>>", "79": "<(LITERAL,2,l /= 2)<SUB>11</SUB>>", "81": "<(IDENTIFIER,m,m++)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.notEquals,r != 0)<SUB>14</SUB>>", "85": "<(LITERAL,0,r != 0)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,b[n] = (int) (r % 2))<SUB>15</SUB>>", "89": "<(IDENTIFIER,b,b[n] = (int) (r % 2))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.cast,(int) (r % 2))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.modulo,r % 2)<SUB>15</SUB>>", "95": "<(LITERAL,2,r % 2)<SUB>15</SUB>>", "97": "<(IDENTIFIER,r,r /= 2)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,n++)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.postDecrement,m--)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.postDecrement,n--)<SUB>19</SUB>>", "105": "<(LOCAL,long[] deg: long[])<SUB>20</SUB>>", "107": "<(IDENTIFIER,deg,long[] deg = new long[70])<SUB>20</SUB>>", "109": "<(LITERAL,70,new long[70])<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,deg[0])<SUB>21</SUB>>", "113": "<(LITERAL,0,deg[0] = 1)<SUB>21</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 62); i++),for (int i = 1; Some(i &lt;= 62); i++))<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>22</SUB>>", "119": "<(LITERAL,1,int i = 1)<SUB>22</SUB>>", "121": "<(IDENTIFIER,i,i &lt;= 62)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.assignment,deg[i] = deg[i - 1] * 2)<SUB>22</SUB>>", "127": "<(IDENTIFIER,deg,deg[i] = deg[i - 1] * 2)<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.multiplication,deg[i - 1] * 2)<SUB>22</SUB>>", "131": "<(IDENTIFIER,deg,deg[i - 1] * 2)<SUB>22</SUB>>", "133": "<(IDENTIFIER,i,i - 1)<SUB>22</SUB>>", "135": "<(LITERAL,2,deg[i - 1] * 2)<SUB>22</SUB>>", "137": "<(LOCAL,int i: int)<SUB>23</SUB>>", "139": "<(IDENTIFIER,i,int i = n)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>23</SUB>>", "143": "<(LITERAL,0,i &gt;= 0)<SUB>23</SUB>>", "145": "<(IDENTIFIER,i,i--)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.logicalAnd,b[i] == 1 &amp;&amp; a[i] == 0)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>24</SUB>>", "151": "<(IDENTIFIER,i,b[i] == 1)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.equals,a[i] == 0)<SUB>24</SUB>>", "155": "<(IDENTIFIER,a,a[i] == 0)<SUB>24</SUB>>", "157": "<(LITERAL,0,a[i] == 0)<SUB>24</SUB>>", "159": "<(println,System.out.println(deg[i + 1] - 1))<SUB>25</SUB>>", "161": "<(IDENTIFIER,System,System.out.println(deg[i + 1] - 1))<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.subtraction,deg[i + 1] - 1)<SUB>25</SUB>>", "165": "<(IDENTIFIER,deg,deg[i + 1] - 1)<SUB>25</SUB>>", "167": "<(IDENTIFIER,i,i + 1)<SUB>25</SUB>>", "169": "<(LITERAL,1,deg[i + 1] - 1)<SUB>25</SUB>>", "171": "<(println,System.out.println(ans))<SUB>28</SUB>>", "173": "<(IDENTIFIER,System,System.out.println(ans))<SUB>28</SUB>>", "175": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>28</SUB>>", "177": "<(MODIFIER,STATIC)>"}}