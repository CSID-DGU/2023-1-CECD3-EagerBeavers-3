{"edges": [["19", "20"], ["19", "21"], ["19", "160"], ["19", "161"], ["19", "162"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "72"], ["21", "82"], ["21", "83"], ["21", "86"], ["21", "153"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "64"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "75"], ["75", "76"], ["75", "79"], ["75", "81"], ["76", "77"], ["76", "78"], ["79", "80"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "96"], ["86", "98"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "133"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "120"], ["103", "104"], ["103", "113"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "128"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "139"], ["133", "143"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["151", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["72", "83"], ["83", "88"], ["153", "162"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "58"], ["50", "78"], ["53", "50"], ["88", "93"], ["91", "108"], ["91", "156"], ["96", "93"], ["154", "157"], ["157", "153"], ["28", "26"], ["56", "66"], ["64", "53"], ["76", "79"], ["79", "72"], ["93", "91"], ["100", "136"], ["156", "154"], ["57", "62"], ["62", "56"], ["65", "70"], ["70", "64"], ["78", "76"], ["102", "100"], ["134", "140"], ["134", "147"], ["58", "57"], ["66", "65"], ["103", "123"], ["120", "102"], ["136", "134"], ["140", "96"], ["104", "116"], ["113", "103"], ["121", "129"], ["128", "120"], ["145", "151"], ["145", "96"], ["105", "104"], ["114", "113"], ["122", "121"], ["129", "128"], ["147", "145"], ["151", "96"], ["106", "105"], ["116", "114"], ["123", "122"], ["108", "106"], ["19", "24"], ["20", "162"], ["22", "162"], ["25", "162"], ["25", "162"], ["30", "162"], ["35", "162"], ["37", "162"], ["35", "162"], ["35", "162"], ["40", "162"], ["40", "162"], ["50", "162"], ["72", "162"], ["76", "162"], ["79", "162"], ["79", "162"], ["72", "162"], ["83", "162"], ["88", "162"], ["91", "162"], ["93", "162"], ["91", "162"], ["91", "162"], ["153", "162"], ["157", "162"], ["153", "162"], ["104", "162"], ["103", "162"], ["103", "162"], ["102", "162"], ["121", "162"], ["120", "162"], ["120", "162"], ["102", "162"], ["100", "162"], ["100", "162"], ["134", "162"], ["136", "162"], ["134", "162"], ["134", "162"], ["145", "162"], ["147", "162"], ["145", "162"], ["145", "162"], ["151", "162"], ["140", "162"], ["96", "162"], ["56", "162"], ["56", "162"], ["64", "162"], ["70", "162"], ["64", "162"], ["64", "162"], ["53", "162"], ["72", "162"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["19", "83"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "72"], ["40", "72"], ["76", "72"], ["79", "72"], ["19", "88"], ["83", "153"], ["151", "153"], ["140", "153"], ["19", "153"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["42", "50"], ["50", "53"], ["19", "53"], ["62", "56"], ["70", "64"], ["19", "76"], ["19", "81"], ["88", "91"], ["96", "91"], ["19", "91"], ["93", "91"], ["93", "91"], ["19", "96"], ["91", "96"], ["102", "100"], ["102", "100"], ["83", "157"], ["151", "157"], ["140", "157"], ["19", "157"], ["76", "79"], ["19", "79"], ["50", "93"], ["19", "93"], ["37", "62"], ["70", "62"], ["19", "62"], ["62", "70"], ["19", "70"], ["103", "102"], ["103", "102"], ["121", "102"], ["121", "102"], ["64", "102"], ["100", "134"], ["19", "134"], ["136", "134"], ["136", "134"], ["19", "140"], ["104", "103"], ["104", "103"], ["121", "120"], ["121", "120"], ["64", "120"], ["35", "136"], ["147", "136"], ["19", "136"], ["83", "140"], ["151", "140"], ["19", "104"], ["56", "121"], ["19", "121"], ["134", "145"], ["19", "145"], ["147", "145"], ["147", "145"], ["136", "147"], ["19", "147"], ["83", "151"], ["140", "151"], ["19", "151"], ["19", "116"], ["91", "116"], ["91", "108"], ["19", "108"], ["50", "64"], ["50", "57"], ["50", "66"], ["50", "56"], ["50", "65"], ["50", "50"], ["50", "58"], ["50", "53"], ["50", "70"], ["50", "62"], ["91", "96"], ["91", "120"], ["91", "113"], ["91", "136"], ["91", "116"], ["91", "122"], ["91", "128"], ["91", "102"], ["91", "114"], ["91", "103"], ["91", "104"], ["91", "121"], ["91", "123"], ["91", "106"], ["91", "91"], ["91", "129"], ["91", "134"], ["91", "93"], ["91", "105"], ["91", "100"], ["91", "108"], ["134", "145"], ["134", "140"], ["134", "147"], ["145", "151"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[][] xa: int[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,xa,int[][] xa = new int[n][2])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new int[n][2])<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.preIncrement,++i)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,xa[i][0])<SUB>7</SUB>>", "59": "<(IDENTIFIER,xa,xa[i][0] = nextInt())<SUB>7</SUB>>", "61": "<(LITERAL,0,xa[i][0] = nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,xa[i][1])<SUB>8</SUB>>", "67": "<(IDENTIFIER,xa,xa[i][1] = nextInt())<SUB>8</SUB>>", "69": "<(LITERAL,1,xa[i][1] = nextInt())<SUB>8</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "73": "<(IDENTIFIER,Arrays,sort(xa, new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] a0, int[] a1) {\\012        return a0[0] - a1[0];\\012    }\\012}))<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "79": "<(&lt;init&gt;,new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] a0, int[] a1) {\\012        return a0[0] - a1[0];\\012    }\\012})<SUB>10</SUB>>", "81": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "83": "<(&lt;operator&gt;.assignment,int ans = 2)<SUB>16</SUB>>", "85": "<(LITERAL,2,int ans = 2)<SUB>16</SUB>>", "87": "<(LOCAL,int i: int)<SUB>17</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "95": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "99": "<(LOCAL,int s: int)<SUB>18</SUB>>", "101": "<(IDENTIFIER,s,int s = (xa[i + 1][0] * 2 - xa[i + 1][1]) - (xa[i][0] * 2 + xa[i][1]))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.subtraction,xa[i + 1][0] * 2 - xa[i + 1][1])<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,xa[i + 1][0])<SUB>18</SUB>>", "107": "<(IDENTIFIER,xa,xa[i + 1][0] * 2)<SUB>18</SUB>>", "109": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "111": "<(LITERAL,0,xa[i + 1][0] * 2)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,xa[i + 1][1])<SUB>18</SUB>>", "115": "<(IDENTIFIER,xa,xa[i + 1][0] * 2 - xa[i + 1][1])<SUB>18</SUB>>", "117": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "119": "<(LITERAL,1,xa[i + 1][0] * 2 - xa[i + 1][1])<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.multiplication,xa[i][0] * 2)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,xa[i])<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,xa[i][0] * 2)<SUB>18</SUB>>", "127": "<(LITERAL,2,xa[i][0] * 2)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,xa[i])<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,xa[i][0] * 2 + xa[i][1])<SUB>18</SUB>>", "133": "<(CONTROL_STRUCTURE,if (s &gt; t * 2),if (s &gt; t * 2))<SUB>19</SUB>>", "135": "<(IDENTIFIER,s,s &gt; t * 2)<SUB>19</SUB>>", "137": "<(IDENTIFIER,t,t * 2)<SUB>19</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "141": "<(IDENTIFIER,ans,ans += 2)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.equals,s == t * 2)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.multiplication,t * 2)<SUB>21</SUB>>", "149": "<(LITERAL,2,t * 2)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>22</SUB>>", "153": "<(println,System.out.println(ans + &quot;&quot;))<SUB>25</SUB>>", "155": "<(IDENTIFIER,System,System.out.println(ans + &quot;&quot;))<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.addition,ans + &quot;&quot;)<SUB>25</SUB>>", "159": "<(LITERAL,&quot;&quot;,ans + &quot;&quot;)<SUB>25</SUB>>", "161": "<(MODIFIER,STATIC)>"}}