{"edges": [["23", "25"], ["23", "185"], ["23", "186"], ["23", "187"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "6"], ["25", "45"], ["25", "48"], ["25", "49"], ["25", "8"], ["25", "85"], ["25", "88"], ["25", "89"], ["25", "125"], ["25", "126"], ["25", "135"], ["25", "179"], ["25", "183"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "70"], ["60", "72"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "80"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["76", "79"], ["80", "81"], ["80", "82"], ["80", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["88", "7"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "120"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["116", "119"], ["120", "121"], ["120", "122"], ["120", "123"], ["123", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["128", "131"], ["128", "132"], ["128", "133"], ["128", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "176"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "158"], ["156", "171"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "164"], ["160", "169"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["181", "182"], ["183", "184"], ["26", "29"], ["29", "33"], ["31", "38"], ["36", "43"], ["41", "47"], ["45", "48"], ["48", "51"], ["85", "88"], ["88", "91"], ["126", "137"], ["179", "183"], ["183", "187"], ["28", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["47", "45"], ["51", "54"], ["54", "62"], ["54", "87"], ["57", "54"], ["87", "85"], ["91", "96"], ["94", "104"], ["94", "128"], ["99", "96"], ["128", "126"], ["137", "140"], ["140", "148"], ["140", "181"], ["143", "140"], ["181", "179"], ["96", "94"], ["176", "143"], ["62", "67"], ["65", "76"], ["65", "57"], ["70", "67"], ["104", "107"], ["107", "116"], ["107", "99"], ["110", "107"], ["148", "151"], ["151", "161"], ["151", "176"], ["154", "151"], ["67", "65"], ["74", "83"], ["80", "70"], ["114", "123"], ["120", "110"], ["158", "173"], ["171", "154"], ["76", "74"], ["83", "80"], ["116", "114"], ["123", "120"], ["160", "158"], ["173", "171"], ["161", "165"], ["161", "169"], ["164", "160"], ["169", "160"], ["165", "164"], ["23", "28"], ["24", "187"], ["26", "187"], ["29", "187"], ["31", "187"], ["36", "187"], ["43", "187"], ["41", "187"], ["41", "187"], ["45", "187"], ["85", "187"], ["88", "187"], ["94", "187"], ["94", "187"], ["126", "187"], ["128", "187"], ["128", "187"], ["128", "187"], ["128", "187"], ["128", "187"], ["126", "187"], ["126", "187"], ["137", "187"], ["140", "187"], ["140", "187"], ["140", "187"], ["181", "187"], ["179", "187"], ["179", "187"], ["183", "187"], ["183", "187"], ["148", "187"], ["151", "187"], ["151", "187"], ["151", "187"], ["176", "187"], ["143", "187"], ["161", "187"], ["160", "187"], ["160", "187"], ["165", "187"], ["164", "187"], ["160", "187"], ["158", "187"], ["158", "187"], ["173", "187"], ["171", "187"], ["171", "187"], ["154", "187"], ["104", "187"], ["107", "187"], ["107", "187"], ["99", "187"], ["114", "187"], ["114", "187"], ["120", "187"], ["123", "187"], ["120", "187"], ["120", "187"], ["110", "187"], ["62", "187"], ["65", "187"], ["65", "187"], ["65", "187"], ["57", "187"], ["74", "187"], ["74", "187"], ["80", "187"], ["83", "187"], ["80", "187"], ["80", "187"], ["70", "187"], ["23", "24"], ["23", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["23", "45"], ["23", "85"], ["128", "126"], ["128", "126"], ["128", "126"], ["128", "126"], ["128", "126"], ["128", "126"], ["26", "29"], ["23", "29"], ["45", "48"], ["23", "48"], ["23", "51"], ["85", "88"], ["23", "88"], ["23", "91"], ["23", "137"], ["23", "179"], ["181", "179"], ["179", "183"], ["23", "183"], ["23", "33"], ["33", "38"], ["23", "38"], ["38", "43"], ["23", "43"], ["51", "54"], ["57", "54"], ["23", "54"], ["31", "54"], ["54", "57"], ["76", "57"], ["23", "57"], ["91", "94"], ["99", "94"], ["23", "94"], ["96", "94"], ["96", "94"], ["94", "99"], ["116", "99"], ["23", "99"], ["116", "128"], ["76", "128"], ["23", "128"], ["96", "128"], ["36", "128"], ["107", "128"], ["67", "128"], ["41", "128"], ["48", "128"], ["80", "128"], ["88", "128"], ["120", "128"], ["137", "140"], ["143", "140"], ["23", "140"], ["128", "140"], ["140", "143"], ["165", "143"], ["23", "143"], ["29", "181"], ["176", "181"], ["23", "181"], ["23", "62"], ["54", "96"], ["23", "96"], ["23", "104"], ["23", "148"], ["29", "176"], ["171", "176"], ["23", "176"], ["62", "65"], ["70", "65"], ["23", "65"], ["67", "65"], ["67", "65"], ["76", "70"], ["23", "70"], ["76", "74"], ["76", "74"], ["76", "74"], ["104", "107"], ["110", "107"], ["23", "107"], ["36", "107"], ["67", "107"], ["116", "110"], ["23", "110"], ["116", "114"], ["116", "114"], ["116", "114"], ["148", "151"], ["154", "151"], ["23", "151"], ["128", "151"], ["151", "154"], ["164", "154"], ["23", "154"], ["164", "158"], ["164", "158"], ["169", "158"], ["36", "67"], ["23", "67"], ["48", "80"], ["23", "80"], ["74", "80"], ["83", "80"], ["88", "120"], ["23", "120"], ["114", "120"], ["123", "120"], ["29", "171"], ["176", "171"], ["23", "171"], ["158", "171"], ["23", "76"], ["54", "76"], ["65", "76"], ["43", "83"], ["23", "83"], ["76", "116"], ["23", "116"], ["94", "116"], ["107", "116"], ["43", "123"], ["83", "123"], ["23", "123"], ["164", "160"], ["164", "160"], ["169", "160"], ["158", "173"], ["23", "173"], ["126", "161"], ["165", "161"], ["23", "161"], ["165", "164"], ["165", "164"], ["151", "164"], ["23", "164"], ["23", "169"], ["161", "165"], ["23", "165"], ["140", "165"], ["54", "57"], ["54", "67"], ["54", "65"], ["54", "54"], ["54", "62"], ["94", "107"], ["94", "94"], ["94", "96"], ["94", "99"], ["94", "104"], ["140", "151"], ["140", "176"], ["140", "140"], ["140", "148"], ["140", "143"], ["65", "67"], ["65", "74"], ["65", "76"], ["65", "65"], ["65", "80"], ["65", "83"], ["65", "70"], ["107", "107"], ["107", "120"], ["107", "116"], ["107", "114"], ["107", "123"], ["107", "110"], ["151", "160"], ["151", "154"], ["151", "161"], ["151", "151"], ["151", "173"], ["151", "158"], ["151", "171"], ["161", "169"], ["161", "165"], ["161", "164"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,StringBuilder solution = new StringBuilder())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>2</SUB>>", "3": "<(IDENTIFIER,solution,new StringBuilder())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,int rows = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(LOCAL,int cols: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,cols,int cols = nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,FR,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int moves = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "6": "<(LOCAL,Map&lt;Integer, Integer&gt; horizontalEdgeWeights: ANY)<SUB>7</SUB>>", "46": "<(IDENTIFIER,horizontalEdgeWeights,ANY horizontalEdgeWeights = new HashMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "48": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows); r++),for (int r = 0; Some(r &lt; rows); r++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int r = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,r,r &lt; rows)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,r++)<SUB>8</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "61": "<(LOCAL,int c: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.lessThan,c &lt; cols - 1)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.subtraction,cols - 1)<SUB>9</SUB>>", "69": "<(LITERAL,1,cols - 1)<SUB>9</SUB>>", "71": "<(IDENTIFIER,c,c++)<SUB>9</SUB>>", "73": "<(LOCAL,int hash: int)<SUB>10</SUB>>", "75": "<(IDENTIFIER,hash,int hash = getHash(r, c))<SUB>10</SUB>>", "77": "<(IDENTIFIER,this,getHash(r, c))<SUB>10</SUB>>", "79": "<(IDENTIFIER,c,getHash(r, c))<SUB>10</SUB>>", "81": "<(IDENTIFIER,horizontalEdgeWeights,put(hash, FR.nextInt()))<SUB>11</SUB>>", "83": "<(nextInt,nextInt())<SUB>11</SUB>>", "8": "<(LOCAL,Map&lt;Integer, Integer&gt; verticalEdgeWeights: ANY)<SUB>15</SUB>>", "86": "<(IDENTIFIER,verticalEdgeWeights,ANY verticalEdgeWeights = new HashMap&lt;Integer, Integer&gt;())<SUB>15</SUB>>", "88": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>15</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows - 1); r++),for (int r = 0; Some(r &lt; rows - 1); r++))<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>16</SUB>>", "93": "<(LITERAL,0,int r = 0)<SUB>16</SUB>>", "95": "<(IDENTIFIER,r,r &lt; rows - 1)<SUB>16</SUB>>", "97": "<(IDENTIFIER,rows,rows - 1)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,r++)<SUB>16</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(LOCAL,int c: int)<SUB>17</SUB>>", "105": "<(IDENTIFIER,c,int c = 0)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>17</SUB>>", "109": "<(IDENTIFIER,cols,c &lt; cols)<SUB>17</SUB>>", "111": "<(IDENTIFIER,c,c++)<SUB>17</SUB>>", "113": "<(LOCAL,int hash: int)<SUB>18</SUB>>", "115": "<(IDENTIFIER,hash,int hash = getHash(r, c))<SUB>18</SUB>>", "117": "<(IDENTIFIER,this,getHash(r, c))<SUB>18</SUB>>", "119": "<(IDENTIFIER,c,getHash(r, c))<SUB>18</SUB>>", "121": "<(IDENTIFIER,verticalEdgeWeights,put(hash, FR.nextInt()))<SUB>19</SUB>>", "123": "<(nextInt,nextInt())<SUB>19</SUB>>", "125": "<(LOCAL,List&lt;List&lt;Integer&gt;&gt; result: ANY)<SUB>23</SUB>>", "127": "<(IDENTIFIER,result,ANY result = getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>23</SUB>>", "129": "<(IDENTIFIER,this,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>23</SUB>>", "131": "<(IDENTIFIER,cols,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>23</SUB>>", "133": "<(IDENTIFIER,horizontalEdgeWeights,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>23</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows); r++),for (int r = 0; Some(r &lt; rows); r++))<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>24</SUB>>", "139": "<(LITERAL,0,int r = 0)<SUB>24</SUB>>", "141": "<(IDENTIFIER,r,r &lt; rows)<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,r++)<SUB>24</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "147": "<(LOCAL,int c: int)<SUB>25</SUB>>", "149": "<(IDENTIFIER,c,int c = 0)<SUB>25</SUB>>", "151": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>25</SUB>>", "153": "<(IDENTIFIER,cols,c &lt; cols)<SUB>25</SUB>>", "155": "<(IDENTIFIER,c,c++)<SUB>25</SUB>>", "157": "<(LOCAL,int value: int)<SUB>26</SUB>>", "159": "<(IDENTIFIER,value,int value = result != null ? result.get(r).get(c) : -1)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.notEquals,result != null)<SUB>26</SUB>>", "163": "<(LITERAL,null,result != null)<SUB>26</SUB>>", "165": "<(get,get(r))<SUB>26</SUB>>", "167": "<(IDENTIFIER,r,get(r))<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "171": "<(append,solution.append(value + &quot; &quot;))<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.addition,value + &quot; &quot;)<SUB>27</SUB>>", "175": "<(LITERAL,&quot; &quot;,value + &quot; &quot;)<SUB>27</SUB>>", "177": "<(IDENTIFIER,solution,solution.append(&quot;\\n&quot;))<SUB>29</SUB>>", "179": "<(write,write(solution.toString()))<SUB>32</SUB>>", "181": "<(toString,solution.toString())<SUB>32</SUB>>", "183": "<(close,close())<SUB>33</SUB>>", "185": "<(MODIFIER,PUBLIC)>", "187": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}