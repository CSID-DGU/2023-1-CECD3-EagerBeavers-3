{"edges": [["19", "20"], ["19", "21"], ["19", "194"], ["19", "195"], ["19", "196"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "28"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "47"], ["21", "51"], ["21", "68"], ["21", "170"], ["21", "190"], ["22", "23"], ["22", "24"], ["25", "3"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "160"], ["78", "165"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "105"], ["93", "131"], ["94", "95"], ["94", "103"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "129"], ["106", "107"], ["106", "118"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["133", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "155"], ["145", "146"], ["145", "147"], ["145", "154"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["191", "192"], ["191", "193"], ["22", "25"], ["25", "30"], ["28", "34"], ["32", "39"], ["37", "44"], ["42", "49"], ["47", "53"], ["190", "196"], ["24", "22"], ["30", "28"], ["34", "32"], ["39", "37"], ["44", "42"], ["49", "47"], ["53", "56"], ["56", "63"], ["56", "70"], ["59", "56"], ["70", "73"], ["73", "80"], ["73", "172"], ["76", "73"], ["172", "175"], ["175", "184"], ["175", "193"], ["178", "175"], ["191", "190"], ["62", "59"], ["80", "85"], ["160", "166"], ["165", "76"], ["181", "178"], ["193", "191"], ["63", "66"], ["66", "62"], ["85", "88"], ["88", "96"], ["88", "161"], ["91", "88"], ["161", "160"], ["166", "165"], ["182", "186"], ["185", "181"], ["131", "91"], ["184", "182"], ["186", "185"], ["95", "91"], ["95", "109"], ["106", "91"], ["106", "137"], ["133", "131"], ["96", "95"], ["96", "100"], ["99", "95"], ["107", "106"], ["107", "120"], ["118", "106"], ["136", "133"], ["100", "99"], ["108", "114"], ["113", "107"], ["119", "125"], ["124", "118"], ["137", "148"], ["140", "136"], ["109", "108"], ["114", "113"], ["120", "119"], ["125", "124"], ["142", "140"], ["144", "142"], ["145", "156"], ["155", "144"], ["147", "145"], ["156", "155"], ["148", "151"], ["151", "147"], ["19", "24"], ["20", "196"], ["22", "196"], ["25", "196"], ["28", "196"], ["32", "196"], ["34", "196"], ["32", "196"], ["32", "196"], ["37", "196"], ["37", "196"], ["37", "196"], ["42", "196"], ["42", "196"], ["42", "196"], ["47", "196"], ["47", "196"], ["47", "196"], ["172", "196"], ["175", "196"], ["175", "196"], ["175", "196"], ["190", "196"], ["190", "196"], ["185", "196"], ["181", "196"], ["181", "196"], ["178", "196"], ["80", "196"], ["80", "196"], ["85", "196"], ["88", "196"], ["88", "196"], ["160", "196"], ["160", "196"], ["160", "196"], ["165", "196"], ["165", "196"], ["76", "196"], ["95", "196"], ["99", "196"], ["95", "196"], ["95", "196"], ["108", "196"], ["107", "196"], ["113", "196"], ["113", "196"], ["107", "196"], ["106", "196"], ["119", "196"], ["118", "196"], ["124", "196"], ["124", "196"], ["118", "196"], ["106", "196"], ["106", "196"], ["133", "196"], ["136", "196"], ["147", "196"], ["147", "196"], ["145", "196"], ["144", "196"], ["155", "196"], ["155", "196"], ["144", "196"], ["142", "196"], ["140", "196"], ["136", "196"], ["133", "196"], ["131", "196"], ["131", "196"], ["91", "196"], ["62", "196"], ["66", "196"], ["62", "196"], ["62", "196"], ["59", "196"], ["19", "20"], ["19", "22"], ["30", "28"], ["34", "32"], ["39", "37"], ["44", "42"], ["49", "47"], ["22", "25"], ["19", "25"], ["19", "53"], ["19", "70"], ["19", "172"], ["181", "190"], ["25", "30"], ["19", "30"], ["30", "34"], ["19", "34"], ["28", "39"], ["19", "39"], ["39", "44"], ["19", "44"], ["44", "49"], ["19", "49"], ["53", "56"], ["59", "56"], ["19", "56"], ["49", "56"], ["56", "59"], ["19", "59"], ["66", "62"], ["70", "73"], ["76", "73"], ["19", "73"], ["56", "73"], ["88", "73"], ["73", "76"], ["96", "76"], ["19", "76"], ["32", "80"], ["113", "80"], ["155", "80"], ["19", "80"], ["119", "80"], ["80", "160"], ["131", "160"], ["19", "160"], ["19", "165"], ["172", "175"], ["178", "175"], ["19", "175"], ["73", "175"], ["175", "178"], ["19", "178"], ["19", "85"], ["37", "181"], ["160", "181"], ["19", "181"], ["34", "66"], ["19", "66"], ["85", "88"], ["91", "88"], ["19", "88"], ["73", "88"], ["96", "91"], ["19", "91"], ["133", "131"], ["133", "131"], ["133", "131"], ["37", "185"], ["160", "185"], ["19", "185"], ["96", "95"], ["96", "95"], ["99", "95"], ["107", "106"], ["107", "106"], ["118", "106"], ["118", "106"], ["140", "133"], ["19", "133"], ["80", "133"], ["131", "133"], ["37", "133"], ["140", "133"], ["73", "96"], ["19", "96"], ["88", "96"], ["47", "99"], ["42", "107"], ["119", "107"], ["147", "107"], ["62", "107"], ["113", "107"], ["155", "107"], ["19", "107"], ["32", "107"], ["119", "107"], ["113", "107"], ["119", "118"], ["119", "118"], ["42", "118"], ["113", "118"], ["19", "118"], ["37", "136"], ["140", "136"], ["140", "136"], ["42", "108"], ["119", "108"], ["147", "108"], ["62", "108"], ["113", "108"], ["155", "108"], ["19", "108"], ["32", "108"], ["119", "108"], ["42", "113"], ["147", "113"], ["19", "113"], ["155", "113"], ["32", "113"], ["119", "113"], ["42", "119"], ["147", "119"], ["62", "119"], ["113", "119"], ["19", "119"], ["42", "124"], ["113", "124"], ["119", "124"], ["19", "124"], ["142", "140"], ["19", "140"], ["142", "140"], ["145", "142"], ["19", "142"], ["144", "142"], ["144", "142"], ["145", "144"], ["145", "144"], ["145", "144"], ["155", "144"], ["155", "144"], ["133", "145"], ["19", "145"], ["147", "145"], ["147", "145"], ["156", "155"], ["156", "155"], ["19", "155"], ["42", "147"], ["119", "147"], ["62", "147"], ["113", "147"], ["19", "156"], ["113", "156"], ["119", "156"], ["56", "56"], ["56", "59"], ["56", "66"], ["56", "63"], ["56", "62"], ["73", "73"], ["73", "161"], ["73", "85"], ["73", "76"], ["73", "80"], ["73", "88"], ["73", "160"], ["73", "166"], ["73", "165"], ["175", "178"], ["175", "185"], ["175", "181"], ["175", "184"], ["175", "182"], ["175", "186"], ["175", "175"], ["88", "96"], ["88", "95"], ["88", "91"], ["88", "88"], ["95", "107"], ["95", "113"], ["95", "114"], ["95", "108"], ["95", "106"], ["95", "109"], ["106", "136"], ["106", "145"], ["106", "131"], ["106", "151"], ["106", "144"], ["106", "148"], ["106", "137"], ["106", "155"], ["106", "142"], ["106", "140"], ["106", "147"], ["106", "156"], ["106", "133"], ["96", "100"], ["96", "99"], ["107", "120"], ["107", "119"], ["107", "118"], ["107", "124"], ["107", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scn = new InputReader())<SUB>4</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader())<SUB>4</SUB>>", "3": "<(IDENTIFIER,scn,new InputReader())<SUB>4</SUB>>", "27": "<(LOCAL,int r: int)<SUB>6</SUB>>", "29": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "31": "<(IDENTIFIER,scn,nextInt())<SUB>6</SUB>>", "33": "<(IDENTIFIER,r,int r = nextInt())<SUB>6</SUB>>", "35": "<(IDENTIFIER,scn,nextInt())<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.assignment,double[] y = new double[n])<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.alloc,new double[n])>", "41": "<(LOCAL,int[] x: int[])<SUB>8</SUB>>", "43": "<(IDENTIFIER,x,int[] x = new int[n])<SUB>8</SUB>>", "45": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.assignment,boolean[] mark = new boolean[n])<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.alloc,new boolean[n])>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>11</SUB>>", "65": "<(IDENTIFIER,i,x[i] = nextInt())<SUB>11</SUB>>", "67": "<(IDENTIFIER,scn,nextInt())<SUB>11</SUB>>", "69": "<(LOCAL,int i: int)<SUB>13</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "79": "<(LOCAL,double yc: double)<SUB>14</SUB>>", "81": "<(IDENTIFIER,yc,double yc = r)<SUB>14</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "87": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "89": "<(IDENTIFIER,j,j &lt; n)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.logicalOr,i == j || !mark[j])<SUB>16</SUB>>", "97": "<(IDENTIFIER,i,i == j)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.logicalNot,!mark[j])<SUB>16</SUB>>", "101": "<(IDENTIFIER,mark,!mark[j])<SUB>16</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "105": "<(CONTROL_STRUCTURE,if (x[i] + r &lt; x[j] - r || x[i] - r &gt; x[j] + r),if (x[i] + r &lt; x[j] - r || x[i] - r &gt; x[j] + r))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.lessThan,x[i] + r &lt; x[j] - r)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>19</SUB>>", "111": "<(IDENTIFIER,i,x[i] + r)<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.subtraction,x[j] - r)<SUB>19</SUB>>", "115": "<(IDENTIFIER,x,x[j] - r)<SUB>19</SUB>>", "117": "<(IDENTIFIER,r,x[j] - r)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.subtraction,x[i] - r)<SUB>19</SUB>>", "121": "<(IDENTIFIER,x,x[i] - r)<SUB>19</SUB>>", "123": "<(IDENTIFIER,r,x[i] - r)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>19</SUB>>", "127": "<(IDENTIFIER,j,x[j] + r)<SUB>19</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.assignment,yc = Math.max(yc, y[j] + Math.sqrt(Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r))))<SUB>23</SUB>>", "133": "<(max,Math.max(yc, y[j] + Math.sqrt(Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r))))<SUB>23</SUB>>", "135": "<(IDENTIFIER,yc,Math.max(yc, y[j] + Math.sqrt(Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r))))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>23</SUB>>", "139": "<(IDENTIFIER,j,y[j] + Math.sqrt(Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r)))<SUB>23</SUB>>", "141": "<(IDENTIFIER,Math,Math.sqrt(Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r)))<SUB>23</SUB>>", "143": "<(IDENTIFIER,Math,Math.abs(Math.pow(x[i] - x[j], 2) - 4 * r * r))<SUB>23</SUB>>", "145": "<(pow,Math.pow(x[i] - x[j], 2))<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>23</SUB>>", "149": "<(IDENTIFIER,x,x[i] - x[j])<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>23</SUB>>", "153": "<(IDENTIFIER,j,x[i] - x[j])<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.multiplication,4 * r * r)<SUB>23</SUB>>", "157": "<(LITERAL,4,4 * r)<SUB>23</SUB>>", "159": "<(IDENTIFIER,r,4 * r * r)<SUB>23</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,y[i] = yc)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.assignment,mark[i] = true)<SUB>26</SUB>>", "167": "<(IDENTIFIER,mark,mark[i] = true)<SUB>26</SUB>>", "169": "<(LITERAL,true,mark[i] = true)<SUB>26</SUB>>", "171": "<(LOCAL,int i: int)<SUB>29</SUB>>", "173": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>29</SUB>>", "177": "<(IDENTIFIER,n,i &lt; n)<SUB>29</SUB>>", "179": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "181": "<(print,System.out.print(y[i] + &quot; &quot;))<SUB>30</SUB>>", "183": "<(IDENTIFIER,System,System.out.print(y[i] + &quot; &quot;))<SUB>30</SUB>>", "185": "<(&lt;operator&gt;.addition,y[i] + &quot; &quot;)<SUB>30</SUB>>", "187": "<(IDENTIFIER,y,y[i] + &quot; &quot;)<SUB>30</SUB>>", "189": "<(LITERAL,&quot; &quot;,y[i] + &quot; &quot;)<SUB>30</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "193": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "195": "<(MODIFIER,STATIC)>"}}