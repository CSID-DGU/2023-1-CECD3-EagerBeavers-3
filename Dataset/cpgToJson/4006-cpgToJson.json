{"edges": [["17", "18"], ["17", "19"], ["17", "196"], ["17", "197"], ["17", "198"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "37"], ["19", "41"], ["19", "45"], ["19", "49"], ["19", "72"], ["19", "79"], ["19", "98"], ["19", "99"], ["19", "102"], ["19", "191"], ["19", "194"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "66"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "89"], ["79", "91"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "112"], ["102", "114"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "144"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "138"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "153"], ["148", "157"], ["148", "161"], ["148", "168"], ["148", "171"], ["148", "178"], ["148", "181"], ["148", "188"], ["149", "150"], ["149", "151"], ["149", "152"], ["153", "154"], ["153", "155"], ["153", "156"], ["157", "158"], ["157", "159"], ["157", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "35"], ["33", "39"], ["37", "43"], ["41", "47"], ["45", "51"], ["72", "81"], ["99", "104"], ["191", "194"], ["194", "198"], ["22", "20"], ["27", "25"], ["30", "28"], ["35", "33"], ["39", "37"], ["43", "41"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "75"], ["57", "54"], ["74", "72"], ["81", "86"], ["84", "93"], ["84", "99"], ["89", "86"], ["91", "89"], ["104", "109"], ["107", "116"], ["107", "191"], ["112", "109"], ["32", "30"], ["60", "67"], ["66", "57"], ["75", "74"], ["86", "84"], ["93", "96"], ["96", "91"], ["109", "107"], ["116", "121"], ["61", "64"], ["64", "60"], ["67", "70"], ["70", "66"], ["121", "124"], ["124", "133"], ["124", "145"], ["127", "124"], ["145", "149"], ["145", "112"], ["149", "153"], ["153", "157"], ["157", "164"], ["161", "168"], ["168", "174"], ["171", "178"], ["178", "184"], ["181", "188"], ["188", "112"], ["131", "141"], ["131", "127"], ["163", "161"], ["173", "171"], ["183", "181"], ["132", "131"], ["139", "127"], ["164", "163"], ["174", "173"], ["184", "183"], ["133", "132"], ["141", "139"], ["17", "22"], ["18", "198"], ["20", "198"], ["23", "198"], ["25", "198"], ["28", "198"], ["28", "198"], ["33", "198"], ["37", "198"], ["39", "198"], ["37", "198"], ["37", "198"], ["41", "198"], ["41", "198"], ["45", "198"], ["45", "198"], ["45", "198"], ["54", "198"], ["72", "198"], ["72", "198"], ["72", "198"], ["99", "198"], ["104", "198"], ["107", "198"], ["109", "198"], ["107", "198"], ["107", "198"], ["191", "198"], ["191", "198"], ["194", "198"], ["194", "198"], ["116", "198"], ["121", "198"], ["124", "198"], ["124", "198"], ["145", "198"], ["145", "198"], ["145", "198"], ["149", "198"], ["153", "198"], ["157", "198"], ["157", "198"], ["161", "198"], ["161", "198"], ["171", "198"], ["171", "198"], ["181", "198"], ["181", "198"], ["188", "198"], ["112", "198"], ["132", "198"], ["131", "198"], ["131", "198"], ["139", "198"], ["139", "198"], ["127", "198"], ["91", "198"], ["91", "198"], ["91", "198"], ["89", "198"], ["60", "198"], ["60", "198"], ["66", "198"], ["70", "198"], ["66", "198"], ["66", "198"], ["57", "198"], ["91", "198"], ["17", "18"], ["17", "20"], ["17", "25"], ["35", "33"], ["39", "37"], ["43", "41"], ["47", "45"], ["74", "72"], ["74", "72"], ["17", "99"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "51"], ["17", "81"], ["17", "104"], ["28", "191"], ["17", "191"], ["99", "191"], ["188", "191"], ["191", "194"], ["17", "194"], ["23", "35"], ["17", "35"], ["35", "39"], ["17", "39"], ["33", "43"], ["17", "43"], ["43", "47"], ["17", "47"], ["51", "54"], ["57", "54"], ["17", "54"], ["47", "54"], ["54", "57"], ["17", "57"], ["64", "60"], ["70", "66"], ["75", "74"], ["75", "74"], ["17", "74"], ["81", "84"], ["89", "84"], ["17", "84"], ["86", "84"], ["86", "84"], ["84", "89"], ["17", "89"], ["17", "91"], ["72", "91"], ["96", "91"], ["104", "107"], ["112", "107"], ["17", "107"], ["109", "107"], ["109", "107"], ["107", "112"], ["157", "112"], ["132", "112"], ["17", "112"], ["17", "116"], ["17", "75"], ["54", "75"], ["17", "86"], ["75", "86"], ["17", "96"], ["17", "109"], ["86", "109"], ["124", "109"], ["17", "121"], ["39", "64"], ["70", "64"], ["17", "64"], ["64", "70"], ["17", "70"], ["121", "124"], ["127", "124"], ["17", "124"], ["109", "124"], ["133", "127"], ["17", "127"], ["116", "145"], ["139", "145"], ["17", "145"], ["37", "145"], ["17", "168"], ["17", "178"], ["17", "188"], ["157", "149"], ["17", "149"], ["107", "149"], ["132", "149"], ["149", "153"], ["17", "153"], ["149", "153"], ["153", "157"], ["17", "157"], ["153", "157"], ["99", "161"], ["188", "161"], ["17", "161"], ["161", "168"], ["168", "171"], ["17", "171"], ["171", "178"], ["178", "181"], ["17", "181"], ["181", "188"], ["132", "131"], ["132", "131"], ["17", "131"], ["41", "139"], ["133", "132"], ["133", "132"], ["107", "132"], ["17", "132"], ["116", "139"], ["17", "139"], ["17", "133"], ["124", "133"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "67"], ["54", "54"], ["54", "61"], ["54", "70"], ["54", "66"], ["84", "96"], ["84", "84"], ["84", "91"], ["84", "93"], ["84", "86"], ["84", "89"], ["107", "107"], ["107", "145"], ["107", "121"], ["107", "112"], ["107", "116"], ["107", "124"], ["107", "109"], ["124", "131"], ["124", "132"], ["124", "127"], ["124", "124"], ["124", "133"], ["145", "188"], ["145", "161"], ["145", "163"], ["145", "178"], ["145", "149"], ["145", "153"], ["145", "168"], ["145", "181"], ["145", "184"], ["145", "173"], ["145", "174"], ["145", "164"], ["145", "171"], ["145", "183"], ["145", "157"], ["131", "139"], ["131", "141"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>6</SUB>>", "39": "<(nextInt,nextInt())<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,times = new int[n])<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(&lt;operator&gt;.assignment,genre = new int[n])<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "53": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "55": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,times[j])<SUB>10</SUB>>", "63": "<(IDENTIFIER,j,times[j] = nextInt())<SUB>10</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,genre[j])<SUB>11</SUB>>", "69": "<(IDENTIFIER,j,genre[j] = nextInt())<SUB>11</SUB>>", "71": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "73": "<(IDENTIFIER,dp,dp = new int[1 &lt;&lt; n][4])<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>13</SUB>>", "77": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>13</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++))<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "85": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; n)<SUB>14</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; n)<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "91": "<(fill,fill(dp[j], -1))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>15</SUB>>", "95": "<(IDENTIFIER,j,fill(dp[j], -1))<SUB>15</SUB>>", "97": "<(LITERAL,1,-1)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>16</SUB>>", "101": "<(LITERAL,0,int ans = 0)<SUB>16</SUB>>", "103": "<(LOCAL,int j: int)<SUB>17</SUB>>", "105": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; n)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>17</SUB>>", "111": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>17</SUB>>", "113": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "115": "<(LOCAL,int time: int)<SUB>18</SUB>>", "117": "<(IDENTIFIER,time,int time = 0)<SUB>18</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>19</SUB>>", "123": "<(LITERAL,0,int k = 0)<SUB>19</SUB>>", "125": "<(IDENTIFIER,k,k &lt; n)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,k++)<SUB>19</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; k) &amp; j) != 0)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>20</SUB>>", "135": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>20</SUB>>", "137": "<(LITERAL,0,((1 &lt;&lt; k) &amp; j) != 0)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.assignmentPlus,time += times[k])<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,times[k])<SUB>21</SUB>>", "143": "<(IDENTIFIER,k,time += times[k])<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.equals,time == t)<SUB>24</SUB>>", "147": "<(IDENTIFIER,t,time == t)<SUB>24</SUB>>", "149": "<(letsgodp,letsgodp(j, 1))<SUB>25</SUB>>", "151": "<(IDENTIFIER,j,letsgodp(j, 1))<SUB>25</SUB>>", "153": "<(letsgodp,letsgodp(j, 2))<SUB>26</SUB>>", "155": "<(IDENTIFIER,j,letsgodp(j, 2))<SUB>26</SUB>>", "157": "<(letsgodp,letsgodp(j, 3))<SUB>27</SUB>>", "159": "<(IDENTIFIER,j,letsgodp(j, 3))<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.assignmentPlus,ans += dp[j][1])<SUB>28</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,dp[j][1])<SUB>28</SUB>>", "165": "<(IDENTIFIER,dp,ans += dp[j][1])<SUB>28</SUB>>", "167": "<(LITERAL,1,ans += dp[j][1])<SUB>28</SUB>>", "169": "<(IDENTIFIER,ans,ans %= mod)<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.assignmentPlus,ans += dp[j][2])<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dp[j][2])<SUB>30</SUB>>", "175": "<(IDENTIFIER,dp,ans += dp[j][2])<SUB>30</SUB>>", "177": "<(LITERAL,2,ans += dp[j][2])<SUB>30</SUB>>", "179": "<(IDENTIFIER,ans,ans %= mod)<SUB>31</SUB>>", "181": "<(&lt;operator&gt;.assignmentPlus,ans += dp[j][3])<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,dp[j][3])<SUB>32</SUB>>", "185": "<(IDENTIFIER,dp,ans += dp[j][3])<SUB>32</SUB>>", "187": "<(LITERAL,3,ans += dp[j][3])<SUB>32</SUB>>", "189": "<(IDENTIFIER,ans,ans %= mod)<SUB>33</SUB>>", "191": "<(println,println(ans))<SUB>36</SUB>>", "193": "<(IDENTIFIER,ans,println(ans))<SUB>36</SUB>>", "195": "<(IDENTIFIER,out,close())<SUB>37</SUB>>", "197": "<(MODIFIER,STATIC)>"}}