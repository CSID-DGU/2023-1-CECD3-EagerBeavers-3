{"edges": [["21", "23"], ["21", "237"], ["21", "238"], ["21", "239"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "71"], ["23", "74"], ["23", "75"], ["23", "80"], ["23", "96"], ["23", "97"], ["23", "101"], ["23", "144"], ["23", "145"], ["23", "149"], ["23", "150"], ["23", "153"], ["23", "158"], ["23", "230"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["39", "5"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "56"], ["50", "57"], ["50", "61"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["80", "81"], ["80", "83"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "89"], ["83", "94"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "127"], ["111", "137"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["115", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["147", "148"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["168", "219"], ["169", "170"], ["169", "175"], ["169", "186"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["186", "187"], ["187", "188"], ["188", "189"], ["188", "198"], ["188", "213"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "212"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["213", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["24", "30"], ["27", "34"], ["32", "38"], ["36", "39"], ["39", "42"], ["66", "71"], ["71", "78"], ["75", "81"], ["97", "103"], ["145", "150"], ["150", "154"], ["153", "160"], ["230", "239"], ["26", "24"], ["28", "27"], ["34", "32"], ["38", "36"], ["42", "45"], ["45", "54"], ["45", "68"], ["48", "45"], ["68", "66"], ["77", "75"], ["81", "87"], ["81", "99"], ["99", "97"], ["103", "106"], ["106", "119"], ["106", "147"], ["109", "106"], ["147", "145"], ["154", "153"], ["160", "163"], ["163", "171"], ["163", "233"], ["166", "163"], ["231", "234"], ["234", "230"], ["30", "28"], ["52", "59"], ["57", "61"], ["61", "48"], ["78", "77"], ["85", "90"], ["89", "94"], ["94", "81"], ["113", "128"], ["137", "109"], ["233", "231"], ["54", "52"], ["59", "57"], ["87", "85"], ["90", "89"], ["115", "113"], ["128", "134"], ["128", "138"], ["131", "138"], ["138", "141"], ["141", "137"], ["170", "176"], ["170", "193"], ["175", "221"], ["220", "227"], ["220", "166"], ["225", "166"], ["118", "115"], ["133", "131"], ["171", "170"], ["176", "182"], ["179", "175"], ["221", "220"], ["227", "225"], ["119", "124"], ["122", "118"], ["134", "133"], ["180", "179"], ["124", "122"], ["182", "180"], ["189", "199"], ["189", "215"], ["198", "221"], ["190", "189"], ["199", "208"], ["202", "198"], ["214", "221"], ["191", "190"], ["203", "202"], ["215", "214"], ["193", "191"], ["205", "203"], ["206", "205"], ["208", "206"], ["21", "26"], ["22", "239"], ["24", "239"], ["27", "239"], ["27", "239"], ["34", "239"], ["32", "239"], ["32", "239"], ["36", "239"], ["39", "239"], ["66", "239"], ["66", "239"], ["71", "239"], ["71", "239"], ["78", "239"], ["77", "239"], ["75", "239"], ["81", "239"], ["81", "239"], ["97", "239"], ["97", "239"], ["103", "239"], ["145", "239"], ["145", "239"], ["145", "239"], ["150", "239"], ["153", "239"], ["153", "239"], ["160", "239"], ["163", "239"], ["163", "239"], ["230", "239"], ["234", "239"], ["234", "239"], ["230", "239"], ["230", "239"], ["170", "239"], ["170", "239"], ["191", "239"], ["190", "239"], ["189", "239"], ["189", "239"], ["214", "239"], ["206", "239"], ["205", "239"], ["202", "239"], ["198", "239"], ["198", "239"], ["179", "239"], ["175", "239"], ["175", "239"], ["220", "239"], ["220", "239"], ["225", "239"], ["225", "239"], ["166", "239"], ["115", "239"], ["118", "239"], ["122", "239"], ["118", "239"], ["115", "239"], ["113", "239"], ["113", "239"], ["128", "239"], ["133", "239"], ["131", "239"], ["131", "239"], ["137", "239"], ["141", "239"], ["137", "239"], ["137", "239"], ["109", "239"], ["89", "239"], ["89", "239"], ["89", "239"], ["94", "239"], ["94", "239"], ["52", "239"], ["59", "239"], ["57", "239"], ["57", "239"], ["61", "239"], ["61", "239"], ["61", "239"], ["48", "239"], ["115", "239"], ["21", "22"], ["21", "24"], ["34", "32"], ["21", "36"], ["68", "66"], ["21", "71"], ["77", "75"], ["99", "97"], ["147", "145"], ["21", "150"], ["21", "153"], ["24", "27"], ["21", "27"], ["36", "39"], ["21", "39"], ["21", "42"], ["21", "103"], ["21", "160"], ["234", "230"], ["234", "230"], ["27", "34"], ["21", "34"], ["42", "45"], ["48", "45"], ["21", "45"], ["32", "45"], ["45", "48"], ["21", "48"], ["54", "52"], ["59", "57"], ["45", "68"], ["21", "68"], ["78", "77"], ["75", "81"], ["87", "81"], ["21", "81"], ["87", "85"], ["85", "89"], ["21", "89"], ["68", "99"], ["21", "99"], ["103", "106"], ["109", "106"], ["21", "106"], ["99", "106"], ["141", "109"], ["21", "109"], ["115", "113"], ["115", "113"], ["115", "113"], ["141", "137"], ["141", "137"], ["106", "147"], ["21", "147"], ["160", "163"], ["166", "163"], ["21", "163"], ["147", "163"], ["191", "166"], ["206", "166"], ["182", "166"], ["21", "166"], ["163", "234"], ["21", "234"], ["150", "234"], ["220", "234"], ["225", "234"], ["39", "61"], ["21", "61"], ["52", "61"], ["57", "61"], ["39", "78"], ["61", "78"], ["21", "78"], ["71", "94"], ["21", "94"], ["133", "131"], ["145", "175"], ["21", "175"], ["145", "225"], ["220", "225"], ["34", "54"], ["59", "54"], ["21", "54"], ["54", "59"], ["21", "59"], ["81", "87"], ["21", "87"], ["21", "115"], ["66", "115"], ["118", "115"], ["89", "115"], ["118", "115"], ["113", "128"], ["21", "128"], ["106", "141"], ["21", "141"], ["128", "141"], ["131", "141"], ["97", "170"], ["191", "170"], ["206", "170"], ["137", "170"], ["21", "170"], ["145", "220"], ["214", "220"], ["198", "220"], ["175", "220"], ["150", "220"], ["225", "220"], ["21", "220"], ["66", "118"], ["115", "118"], ["122", "118"], ["122", "118"], ["128", "133"], ["21", "133"], ["145", "179"], ["21", "179"], ["78", "122"], ["21", "122"], ["66", "122"], ["115", "122"], ["118", "122"], ["128", "134"], ["21", "134"], ["145", "198"], ["21", "198"], ["163", "182"], ["21", "182"], ["190", "189"], ["190", "189"], ["21", "189"], ["21", "214"], ["191", "190"], ["191", "190"], ["21", "190"], ["145", "202"], ["21", "202"], ["163", "191"], ["21", "191"], ["97", "191"], ["170", "191"], ["206", "205"], ["206", "205"], ["21", "205"], ["191", "206"], ["21", "206"], ["97", "206"], ["191", "206"], ["45", "57"], ["45", "52"], ["45", "59"], ["45", "54"], ["45", "61"], ["45", "48"], ["45", "45"], ["81", "94"], ["81", "81"], ["81", "85"], ["81", "87"], ["81", "90"], ["81", "89"], ["106", "115"], ["106", "113"], ["106", "128"], ["106", "119"], ["106", "138"], ["106", "137"], ["106", "118"], ["106", "141"], ["106", "122"], ["106", "106"], ["106", "124"], ["106", "109"], ["163", "163"], ["163", "170"], ["163", "221"], ["163", "171"], ["163", "166"], ["163", "220"], ["128", "131"], ["128", "134"], ["128", "133"], ["170", "179"], ["170", "189"], ["170", "191"], ["170", "190"], ["170", "182"], ["170", "180"], ["170", "193"], ["170", "176"], ["170", "175"], ["220", "225"], ["220", "227"], ["189", "214"], ["189", "215"], ["189", "198"], ["189", "206"], ["189", "208"], ["189", "202"], ["189", "205"], ["189", "199"], ["189", "203"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>7</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>7</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>7</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>7</SUB>>", "31": "<(LOCAL,int n: int)<SUB>8</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "35": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "36": "<(&lt;operator&gt;.assignment,ANY beacons = new TreeMap&lt;&gt;())<SUB>9</SUB>>", "38": "<(&lt;operator&gt;.alloc,new TreeMap&lt;&gt;())<SUB>9</SUB>>", "5": "<(IDENTIFIER,beacons,new TreeMap&lt;&gt;())<SUB>9</SUB>>", "41": "<(LOCAL,int i: int)<SUB>11</SUB>>", "43": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "47": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "51": "<(LOCAL,int index: int)<SUB>12</SUB>>", "53": "<(IDENTIFIER,index,int index = nextInt())<SUB>12</SUB>>", "55": "<(IDENTIFIER,scan,nextInt())<SUB>12</SUB>>", "57": "<(&lt;operator&gt;.assignment,int power = nextInt())<SUB>13</SUB>>", "59": "<(nextInt,nextInt())<SUB>13</SUB>>", "61": "<(put,put(index, power))<SUB>14</SUB>>", "63": "<(IDENTIFIER,index,put(index, power))<SUB>14</SUB>>", "65": "<(LOCAL,int[] indicesArr: int[])<SUB>16</SUB>>", "67": "<(IDENTIFIER,indicesArr,int[] indicesArr = new int[n])<SUB>16</SUB>>", "69": "<(IDENTIFIER,n,new int[n])<SUB>16</SUB>>", "71": "<(&lt;operator&gt;.assignment,int arrInd = 0)<SUB>17</SUB>>", "73": "<(LITERAL,0,int arrInd = 0)<SUB>17</SUB>>", "75": "<(&lt;operator&gt;.assignment,)<SUB>18</SUB>>", "77": "<(iterator,&lt;empty&gt;)<SUB>18</SUB>>", "79": "<(IDENTIFIER,beacons,keySet())<SUB>18</SUB>>", "81": "<(hasNext,&lt;empty&gt;)<SUB>18</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>18</SUB>>", "87": "<(next,&lt;empty&gt;)<SUB>18</SUB>>", "89": "<(&lt;operator&gt;.assignment,indicesArr[arrInd] = index)<SUB>19</SUB>>", "91": "<(IDENTIFIER,indicesArr,indicesArr[arrInd] = index)<SUB>19</SUB>>", "93": "<(IDENTIFIER,index,indicesArr[arrInd] = index)<SUB>19</SUB>>", "95": "<(IDENTIFIER,arrInd,arrInd++)<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] nDestroys = new int[n])<SUB>23</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[n])>", "101": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>24</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "105": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "107": "<(IDENTIFIER,i,i &lt; n)<SUB>24</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "113": "<(&lt;operator&gt;.assignment,int bIndex = binarySearch(indicesArr, indicesArr[i] - beacons.get(indicesArr[i])))<SUB>25</SUB>>", "115": "<(binarySearch,binarySearch(indicesArr, indicesArr[i] - beacons.get(indicesArr[i])))<SUB>25</SUB>>", "117": "<(IDENTIFIER,indicesArr,binarySearch(indicesArr, indicesArr[i] - beacons.get(indicesArr[i])))<SUB>25</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,indicesArr[i])<SUB>25</SUB>>", "121": "<(IDENTIFIER,i,indicesArr[i] - beacons.get(indicesArr[i]))<SUB>25</SUB>>", "123": "<(IDENTIFIER,beacons,get(indicesArr[i]))<SUB>25</SUB>>", "125": "<(IDENTIFIER,indicesArr,get(indicesArr[i]))<SUB>25</SUB>>", "127": "<(CONTROL_STRUCTURE,if (bIndex &lt; 0),if (bIndex &lt; 0))<SUB>26</SUB>>", "129": "<(IDENTIFIER,bIndex,bIndex &lt; 0)<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.assignment,bIndex = -(bIndex + 1))<SUB>27</SUB>>", "133": "<(&lt;operator&gt;.minus,-(bIndex + 1))<SUB>27</SUB>>", "135": "<(IDENTIFIER,bIndex,bIndex + 1)<SUB>27</SUB>>", "137": "<(&lt;operator&gt;.assignment,nDestroys[i] = i - bIndex)<SUB>28</SUB>>", "139": "<(IDENTIFIER,nDestroys,nDestroys[i] = i - bIndex)<SUB>28</SUB>>", "141": "<(&lt;operator&gt;.subtraction,i - bIndex)<SUB>28</SUB>>", "143": "<(IDENTIFIER,bIndex,i - bIndex)<SUB>28</SUB>>", "145": "<(&lt;operator&gt;.assignment,int[] totalBeacons = new int[n])<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.alloc,new int[n])>", "149": "<(LOCAL,int maxBeacons: int)<SUB>31</SUB>>", "151": "<(IDENTIFIER,maxBeacons,int maxBeacons = 1)<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.assignment,totalBeacons[0] = 1)<SUB>32</SUB>>", "155": "<(IDENTIFIER,totalBeacons,totalBeacons[0] = 1)<SUB>32</SUB>>", "157": "<(LITERAL,1,totalBeacons[0] = 1)<SUB>32</SUB>>", "159": "<(LOCAL,int i: int)<SUB>33</SUB>>", "161": "<(IDENTIFIER,i,int i = 1)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "165": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "167": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "169": "<(CONTROL_STRUCTURE,if (nDestroys[i] == 0),if (nDestroys[i] == 0))<SUB>34</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,nDestroys[i])<SUB>34</SUB>>", "173": "<(IDENTIFIER,i,nDestroys[i] == 0)<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.assignment,totalBeacons[i] = totalBeacons[i - 1] + 1)<SUB>35</SUB>>", "177": "<(IDENTIFIER,totalBeacons,totalBeacons[i] = totalBeacons[i - 1] + 1)<SUB>35</SUB>>", "179": "<(&lt;operator&gt;.addition,totalBeacons[i - 1] + 1)<SUB>35</SUB>>", "181": "<(IDENTIFIER,totalBeacons,totalBeacons[i - 1] + 1)<SUB>35</SUB>>", "183": "<(IDENTIFIER,i,i - 1)<SUB>35</SUB>>", "185": "<(LITERAL,1,totalBeacons[i - 1] + 1)<SUB>35</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.greaterEqualsThan,(i - nDestroys[i] - 1) &gt;= 0)<SUB>37</SUB>>", "191": "<(&lt;operator&gt;.subtraction,i - nDestroys[i])<SUB>37</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,nDestroys[i])<SUB>37</SUB>>", "195": "<(IDENTIFIER,i,i - nDestroys[i])<SUB>37</SUB>>", "197": "<(LITERAL,0,(i - nDestroys[i] - 1) &gt;= 0)<SUB>37</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,totalBeacons[i])<SUB>38</SUB>>", "201": "<(IDENTIFIER,i,totalBeacons[i] = totalBeacons[i - nDestroys[i] - 1] + 1)<SUB>38</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,totalBeacons[i - nDestroys[i] - 1])<SUB>38</SUB>>", "205": "<(&lt;operator&gt;.subtraction,i - nDestroys[i] - 1)<SUB>38</SUB>>", "207": "<(IDENTIFIER,i,i - nDestroys[i])<SUB>38</SUB>>", "209": "<(IDENTIFIER,nDestroys,i - nDestroys[i])<SUB>38</SUB>>", "211": "<(LITERAL,1,i - nDestroys[i] - 1)<SUB>38</SUB>>", "213": "<(CONTROL_STRUCTURE,else,else)<SUB>40</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,totalBeacons[i])<SUB>40</SUB>>", "217": "<(IDENTIFIER,i,totalBeacons[i] = 1)<SUB>40</SUB>>", "219": "<(CONTROL_STRUCTURE,if (totalBeacons[i] &gt; maxBeacons),if (totalBeacons[i] &gt; maxBeacons))<SUB>44</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,totalBeacons[i])<SUB>44</SUB>>", "223": "<(IDENTIFIER,i,totalBeacons[i] &gt; maxBeacons)<SUB>44</SUB>>", "225": "<(&lt;operator&gt;.assignment,maxBeacons = totalBeacons[i])<SUB>45</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,totalBeacons[i])<SUB>45</SUB>>", "229": "<(IDENTIFIER,i,maxBeacons = totalBeacons[i])<SUB>45</SUB>>", "231": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>53</SUB>>", "233": "<(FIELD_IDENTIFIER,out,out)<SUB>53</SUB>>", "235": "<(IDENTIFIER,n,n - maxBeacons)<SUB>53</SUB>>", "237": "<(MODIFIER,PUBLIC)>", "239": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}