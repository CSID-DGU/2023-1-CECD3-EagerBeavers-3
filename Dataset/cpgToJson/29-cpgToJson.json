{"edges": [["19", "20"], ["19", "21"], ["19", "108"], ["19", "109"], ["19", "110"], ["21", "22"], ["21", "23"], ["21", "4"], ["21", "26"], ["21", "29"], ["21", "33"], ["21", "34"], ["21", "37"], ["21", "38"], ["21", "42"], ["21", "43"], ["21", "49"], ["21", "54"], ["21", "101"], ["23", "24"], ["23", "25"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "64"], ["58", "99"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "68"], ["64", "71"], ["65", "66"], ["65", "67"], ["68", "69"], ["69", "70"], ["71", "72"], ["72", "73"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "98"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["99", "100"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["23", "28"], ["26", "32"], ["29", "34"], ["34", "40"], ["38", "46"], ["43", "50"], ["49", "55"], ["101", "110"], ["28", "26"], ["30", "29"], ["40", "38"], ["45", "43"], ["50", "49"], ["55", "62"], ["55", "104"], ["102", "105"], ["105", "101"], ["32", "30"], ["46", "45"], ["60", "65"], ["99", "55"], ["104", "102"], ["62", "60"], ["65", "69"], ["65", "75"], ["69", "99"], ["75", "78"], ["78", "85"], ["78", "99"], ["81", "78"], ["84", "81"], ["85", "90"], ["88", "84"], ["89", "88"], ["90", "95"], ["93", "89"], ["95", "93"], ["19", "23"], ["20", "110"], ["23", "110"], ["23", "110"], ["26", "110"], ["29", "110"], ["29", "110"], ["34", "110"], ["34", "110"], ["40", "110"], ["38", "110"], ["38", "110"], ["43", "110"], ["45", "110"], ["43", "110"], ["43", "110"], ["49", "110"], ["55", "110"], ["55", "110"], ["101", "110"], ["101", "110"], ["101", "110"], ["62", "110"], ["60", "110"], ["60", "110"], ["65", "110"], ["65", "110"], ["75", "110"], ["78", "110"], ["78", "110"], ["78", "110"], ["84", "110"], ["89", "110"], ["88", "110"], ["88", "110"], ["84", "110"], ["84", "110"], ["81", "110"], ["69", "110"], ["69", "110"], ["99", "110"], ["19", "20"], ["19", "23"], ["19", "26"], ["19", "34"], ["40", "38"], ["45", "43"], ["19", "49"], ["26", "29"], ["19", "29"], ["43", "101"], ["49", "101"], ["29", "40"], ["19", "40"], ["38", "45"], ["19", "45"], ["99", "55"], ["19", "55"], ["38", "55"], ["62", "60"], ["38", "46"], ["19", "46"], ["55", "99"], ["19", "99"], ["40", "62"], ["19", "62"], ["60", "65"], ["19", "65"], ["34", "69"], ["78", "69"], ["19", "69"], ["19", "75"], ["75", "78"], ["81", "78"], ["19", "78"], ["34", "78"], ["69", "78"], ["95", "81"], ["19", "81"], ["88", "84"], ["88", "84"], ["43", "88"], ["84", "88"], ["23", "88"], ["19", "88"], ["43", "89"], ["84", "89"], ["78", "95"], ["19", "95"], ["55", "60"], ["55", "99"], ["55", "65"], ["55", "55"], ["55", "62"], ["65", "75"], ["65", "69"], ["65", "78"], ["78", "89"], ["78", "81"], ["78", "84"], ["78", "85"], ["78", "88"], ["78", "95"], ["78", "93"], ["78", "90"], ["78", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,long MOD = 1000000007)<SUB>2</SUB>>", "25": "<(LITERAL,1000000007,long MOD = 1000000007)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(LOCAL,int now: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,now,int now = 1)<SUB>4</SUB>>", "37": "<(LOCAL,int maxStatements: int)<SUB>5</SUB>>", "39": "<(IDENTIFIER,maxStatements,int maxStatements = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,scan,nextInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,long[] dp = new long[maxStatements + 1])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.alloc,new long[maxStatements + 1])>", "47": "<(IDENTIFIER,maxStatements,maxStatements + 1)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,dp[now] = 1)<SUB>7</SUB>>", "51": "<(IDENTIFIER,dp,dp[now] = 1)<SUB>7</SUB>>", "53": "<(LITERAL,1,dp[now] = 1)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.greaterThan,maxStatements &gt; 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,maxStatements &gt; 0)<SUB>8</SUB>>", "59": "<(LOCAL,String add: java.lang.String)<SUB>10</SUB>>", "61": "<(IDENTIFIER,add,String add = next())<SUB>10</SUB>>", "63": "<(IDENTIFIER,scan,next())<SUB>10</SUB>>", "65": "<(equals,add.equals(&quot;f&quot;))<SUB>11</SUB>>", "67": "<(LITERAL,&quot;f&quot;,add.equals(&quot;f&quot;))<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,now++)<SUB>13</SUB>>", "71": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k &lt;= now); k++),for (int k = 1; Some(k &lt;= now); k++))<SUB>17</SUB>>", "75": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>17</SUB>>", "77": "<(LITERAL,1,int k = 1)<SUB>17</SUB>>", "79": "<(IDENTIFIER,k,k &lt;= now)<SUB>17</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,k++)<SUB>17</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>19</SUB>>", "87": "<(IDENTIFIER,k,dp[k] = (dp[k] + dp[k - 1]) % MOD)<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.addition,dp[k] + dp[k - 1])<SUB>19</SUB>>", "91": "<(IDENTIFIER,dp,dp[k] + dp[k - 1])<SUB>19</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[k - 1])<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>19</SUB>>", "97": "<(LITERAL,1,k - 1)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.postDecrement,maxStatements--)<SUB>22</SUB>>", "101": "<(println,System.out.println(dp[now]))<SUB>24</SUB>>", "103": "<(IDENTIFIER,System,System.out.println(dp[now]))<SUB>24</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dp[now])<SUB>24</SUB>>", "107": "<(IDENTIFIER,now,System.out.println(dp[now]))<SUB>24</SUB>>", "109": "<(MODIFIER,STATIC)>"}}