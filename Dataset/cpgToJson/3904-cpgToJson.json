{"edges": [["25", "27"], ["25", "165"], ["25", "166"], ["25", "167"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "35"], ["27", "36"], ["27", "39"], ["27", "40"], ["27", "44"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "6"], ["48", "51"], ["48", "54"], ["48", "55"], ["48", "56"], ["48", "60"], ["49", "50"], ["51", "52"], ["51", "53"], ["54", "5"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "76"], ["70", "8"], ["70", "117"], ["70", "120"], ["70", "10"], ["70", "121"], ["70", "124"], ["70", "125"], ["70", "135"], ["70", "154"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "80"], ["76", "84"], ["77", "78"], ["77", "79"], ["80", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["85", "86"], ["85", "87"], ["85", "91"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "97"], ["91", "101"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "114"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["112", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "7"], ["121", "122"], ["121", "123"], ["124", "9"], ["125", "126"], ["125", "130"], ["126", "127"], ["126", "129"], ["127", "128"], ["130", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["135", "136"], ["135", "140"], ["136", "137"], ["136", "139"], ["137", "138"], ["140", "141"], ["140", "142"], ["140", "146"], ["140", "151"], ["142", "143"], ["142", "144"], ["144", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["158", "161"], ["161", "162"], ["161", "164"], ["162", "163"], ["28", "34"], ["31", "36"], ["36", "42"], ["40", "45"], ["30", "28"], ["32", "31"], ["42", "40"], ["45", "167"], ["45", "49"], ["34", "32"], ["49", "53"], ["51", "54"], ["54", "58"], ["56", "62"], ["53", "51"], ["58", "56"], ["62", "65"], ["65", "45"], ["65", "74"], ["68", "65"], ["72", "77"], ["117", "120"], ["120", "123"], ["121", "124"], ["124", "127"], ["154", "68"], ["74", "72"], ["77", "81"], ["77", "89"], ["119", "117"], ["123", "121"], ["126", "133"], ["126", "137"], ["136", "144"], ["136", "157"], ["155", "162"], ["158", "154"], ["81", "119"], ["127", "126"], ["131", "127"], ["137", "136"], ["142", "148"], ["146", "151"], ["151", "137"], ["157", "155"], ["161", "158"], ["87", "94"], ["133", "131"], ["144", "142"], ["148", "146"], ["162", "161"], ["89", "87"], ["92", "98"], ["92", "106"], ["94", "92"], ["98", "119"], ["114", "119"], ["104", "112"], ["104", "114"], ["106", "104"], ["110", "106"], ["112", "110"], ["25", "30"], ["26", "167"], ["28", "167"], ["31", "167"], ["31", "167"], ["36", "167"], ["36", "167"], ["42", "167"], ["40", "167"], ["40", "167"], ["45", "167"], ["45", "167"], ["65", "167"], ["65", "167"], ["65", "167"], ["25", "26"], ["25", "28"], ["25", "36"], ["42", "40"], ["28", "31"], ["25", "31"], ["31", "42"], ["25", "42"], ["40", "45"], ["49", "45"], ["25", "45"], ["25", "51"], ["58", "56"], ["45", "49"], ["25", "49"], ["51", "54"], ["25", "54"], ["25", "62"], ["42", "58"], ["74", "58"], ["25", "58"], ["62", "65"], ["68", "65"], ["25", "65"], ["56", "65"], ["65", "68"], ["25", "68"], ["74", "72"], ["25", "117"], ["25", "121"], ["117", "120"], ["25", "120"], ["121", "124"], ["25", "124"], ["158", "154"], ["158", "154"], ["158", "154"], ["58", "74"], ["25", "74"], ["72", "77"], ["25", "77"], ["127", "126"], ["25", "126"], ["137", "136"], ["25", "136"], ["144", "142"], ["162", "158"], ["25", "158"], ["161", "158"], ["161", "158"], ["54", "81"], ["127", "81"], ["151", "81"], ["25", "81"], ["89", "87"], ["114", "127"], ["98", "127"], ["81", "127"], ["133", "127"], ["25", "127"], ["124", "131"], ["25", "131"], ["133", "131"], ["124", "137"], ["144", "137"], ["131", "137"], ["25", "137"], ["120", "146"], ["25", "146"], ["142", "146"], ["127", "151"], ["25", "151"], ["142", "151"], ["162", "161"], ["25", "161"], ["127", "133"], ["25", "133"], ["137", "144"], ["25", "144"], ["142", "148"], ["25", "148"], ["120", "162"], ["146", "162"], ["25", "162"], ["54", "89"], ["127", "89"], ["151", "89"], ["25", "89"], ["87", "92"], ["25", "92"], ["94", "92"], ["94", "92"], ["77", "94"], ["25", "94"], ["89", "98"], ["25", "98"], ["94", "98"], ["89", "114"], ["112", "114"], ["25", "114"], ["106", "114"], ["92", "104"], ["110", "104"], ["25", "104"], ["106", "104"], ["106", "104"], ["112", "110"], ["94", "106"], ["25", "106"], ["89", "112"], ["25", "112"], ["45", "51"], ["45", "56"], ["45", "54"], ["45", "58"], ["45", "49"], ["45", "45"], ["45", "65"], ["45", "53"], ["45", "62"], ["65", "68"], ["65", "77"], ["65", "120"], ["65", "136"], ["65", "154"], ["65", "161"], ["65", "74"], ["65", "119"], ["65", "121"], ["65", "162"], ["65", "137"], ["65", "127"], ["65", "155"], ["65", "158"], ["65", "72"], ["65", "123"], ["65", "65"], ["65", "157"], ["65", "126"], ["65", "117"], ["65", "124"], ["77", "94"], ["77", "81"], ["77", "92"], ["77", "87"], ["77", "89"], ["126", "131"], ["126", "127"], ["126", "126"], ["126", "133"], ["136", "136"], ["136", "146"], ["136", "151"], ["136", "144"], ["136", "148"], ["136", "137"], ["136", "142"], ["92", "98"], ["92", "114"], ["92", "104"], ["92", "106"], ["104", "104"], ["104", "112"], ["104", "106"], ["104", "110"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "35": "<(LOCAL,long mod: long)<SUB>4</SUB>>", "37": "<(IDENTIFIER,mod,long mod = 1000000007l)<SUB>4</SUB>>", "39": "<(LOCAL,int cases: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,cases,int cases = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.greaterThan,cases &gt; 0)<SUB>8</SUB>>", "47": "<(LITERAL,0,cases &gt; 0)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.postDecrement,cases--)<SUB>10</SUB>>", "6": "<(LOCAL,Stack&lt;Integer&gt; stack: ANY)<SUB>11</SUB>>", "52": "<(IDENTIFIER,stack,ANY stack = new Stack&lt;&gt;())<SUB>11</SUB>>", "54": "<(&lt;init&gt;,new Stack&lt;&gt;())<SUB>11</SUB>>", "55": "<(LOCAL,int n: int)<SUB>13</SUB>>", "57": "<(IDENTIFIER,n,int n = nextInt())<SUB>13</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>13</SUB>>", "61": "<(LOCAL,int j: int)<SUB>15</SUB>>", "63": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "65": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>15</SUB>>", "67": "<(IDENTIFIER,n,j &lt; n)<SUB>15</SUB>>", "69": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "71": "<(LOCAL,int x: int)<SUB>17</SUB>>", "73": "<(IDENTIFIER,x,int x = nextInt())<SUB>17</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>17</SUB>>", "77": "<(&lt;operator&gt;.equals,x == 1)<SUB>18</SUB>>", "79": "<(LITERAL,1,x == 1)<SUB>18</SUB>>", "81": "<(add,add(1))<SUB>20</SUB>>", "83": "<(LITERAL,1,add(1))<SUB>20</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "87": "<(&lt;operator&gt;.assignment,int p = pop())<SUB>24</SUB>>", "89": "<(pop,pop())<SUB>24</SUB>>", "91": "<(CONTROL_STRUCTURE,if (p == x - 1),if (p == x - 1))<SUB>25</SUB>>", "93": "<(IDENTIFIER,p,p == x - 1)<SUB>25</SUB>>", "95": "<(IDENTIFIER,x,x - 1)<SUB>25</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "99": "<(IDENTIFIER,stack,add(x))<SUB>27</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>29</SUB>>", "103": "<(CONTROL_STRUCTURE,while (p != x - 1),while (p != x - 1))<SUB>30</SUB>>", "105": "<(IDENTIFIER,p,p != x - 1)<SUB>30</SUB>>", "107": "<(IDENTIFIER,x,x - 1)<SUB>30</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "111": "<(IDENTIFIER,p,p = pop())<SUB>31</SUB>>", "113": "<(IDENTIFIER,stack,pop())<SUB>31</SUB>>", "115": "<(IDENTIFIER,stack,add(x))<SUB>34</SUB>>", "8": "<(LOCAL,StringBuilder f: java.lang.StringBuilder)<SUB>39</SUB>>", "118": "<(IDENTIFIER,f,StringBuilder f = new StringBuilder())<SUB>39</SUB>>", "120": "<(&lt;init&gt;,new StringBuilder())<SUB>39</SUB>>", "10": "<(LOCAL,Stack&lt;Integer&gt; temp: ANY)<SUB>40</SUB>>", "122": "<(IDENTIFIER,temp,ANY temp = new Stack&lt;&gt;())<SUB>40</SUB>>", "124": "<(&lt;init&gt;,new Stack&lt;&gt;())<SUB>40</SUB>>", "125": "<(CONTROL_STRUCTURE,while (stack.isEmpty() == false),while (stack.isEmpty() == false))<SUB>42</SUB>>", "127": "<(isEmpty,isEmpty())<SUB>42</SUB>>", "129": "<(LITERAL,false,stack.isEmpty() == false)<SUB>42</SUB>>", "131": "<(add,add(stack.pop()))<SUB>44</SUB>>", "133": "<(pop,pop())<SUB>44</SUB>>", "135": "<(CONTROL_STRUCTURE,while (temp.isEmpty() == false),while (temp.isEmpty() == false))<SUB>47</SUB>>", "137": "<(isEmpty,isEmpty())<SUB>47</SUB>>", "139": "<(LITERAL,false,temp.isEmpty() == false)<SUB>47</SUB>>", "141": "<(LOCAL,int z: int)<SUB>49</SUB>>", "143": "<(IDENTIFIER,z,int z = pop())<SUB>49</SUB>>", "145": "<(IDENTIFIER,temp,pop())<SUB>49</SUB>>", "147": "<(IDENTIFIER,f,f.append(z + &quot;.&quot;))<SUB>50</SUB>>", "149": "<(IDENTIFIER,z,z + &quot;.&quot;)<SUB>50</SUB>>", "151": "<(add,add(z))<SUB>51</SUB>>", "153": "<(IDENTIFIER,z,add(z))<SUB>51</SUB>>", "155": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>55</SUB>>", "157": "<(FIELD_IDENTIFIER,out,out)<SUB>55</SUB>>", "159": "<(IDENTIFIER,f,f.substring(0, f.length() - 1))<SUB>55</SUB>>", "161": "<(&lt;operator&gt;.subtraction,f.length() - 1)<SUB>55</SUB>>", "163": "<(IDENTIFIER,f,f.length())<SUB>55</SUB>>", "165": "<(MODIFIER,PUBLIC)>", "167": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}