{"edges": [["19", "20"], ["19", "21"], ["19", "162"], ["19", "163"], ["19", "164"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "39"], ["21", "42"], ["21", "55"], ["21", "56"], ["21", "59"], ["21", "80"], ["21", "93"], ["21", "100"], ["21", "101"], ["21", "108"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "52"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "64"], ["61", "67"], ["61", "74"], ["62", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "116"], ["108", "131"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "124"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["132", "133"], ["132", "140"], ["132", "145"], ["132", "146"], ["132", "151"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "39"], ["39", "43"], ["56", "62"], ["56", "81"], ["93", "104"], ["101", "111"], ["24", "22"], ["26", "25"], ["32", "30"], ["43", "50"], ["43", "56"], ["81", "88"], ["81", "96"], ["95", "93"], ["103", "101"], ["109", "120"], ["109", "137"], ["28", "26"], ["47", "52"], ["52", "56"], ["62", "64"], ["64", "70"], ["67", "75"], ["85", "90"], ["90", "96"], ["96", "95"], ["104", "103"], ["110", "109"], ["117", "127"], ["124", "164"], ["48", "47"], ["69", "67"], ["75", "62"], ["75", "81"], ["86", "85"], ["111", "110"], ["119", "117"], ["125", "128"], ["128", "124"], ["133", "142"], ["140", "148"], ["146", "154"], ["151", "164"], ["50", "48"], ["70", "69"], ["88", "86"], ["120", "119"], ["127", "125"], ["135", "133"], ["142", "140"], ["148", "146"], ["152", "159"], ["155", "151"], ["137", "135"], ["154", "152"], ["157", "155"], ["158", "157"], ["159", "158"], ["19", "24"], ["20", "164"], ["22", "164"], ["25", "164"], ["25", "164"], ["32", "164"], ["30", "164"], ["30", "164"], ["35", "164"], ["39", "164"], ["43", "164"], ["47", "164"], ["52", "164"], ["52", "164"], ["56", "164"], ["62", "164"], ["64", "164"], ["67", "164"], ["75", "164"], ["81", "164"], ["85", "164"], ["90", "164"], ["90", "164"], ["95", "164"], ["93", "164"], ["93", "164"], ["101", "164"], ["101", "164"], ["111", "164"], ["110", "164"], ["110", "164"], ["109", "164"], ["109", "164"], ["120", "164"], ["120", "164"], ["119", "164"], ["117", "164"], ["117", "164"], ["124", "164"], ["128", "164"], ["124", "164"], ["124", "164"], ["148", "164"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["19", "39"], ["19", "56"], ["95", "93"], ["95", "93"], ["103", "101"], ["103", "101"], ["22", "25"], ["19", "25"], ["19", "60"], ["81", "93"], ["19", "93"], ["25", "32"], ["19", "32"], ["30", "43"], ["19", "43"], ["19", "64"], ["69", "67"], ["69", "67"], ["56", "81"], ["75", "81"], ["19", "81"], ["43", "81"], ["47", "81"], ["75", "81"], ["96", "95"], ["96", "95"], ["35", "95"], ["69", "95"], ["19", "95"], ["104", "103"], ["104", "103"], ["96", "103"], ["19", "103"], ["110", "109"], ["110", "109"], ["19", "109"], ["119", "117"], ["119", "117"], ["43", "47"], ["19", "47"], ["25", "52"], ["47", "52"], ["19", "52"], ["39", "62"], ["70", "62"], ["19", "62"], ["35", "64"], ["69", "64"], ["56", "67"], ["75", "67"], ["19", "67"], ["52", "85"], ["19", "85"], ["25", "90"], ["52", "90"], ["85", "90"], ["19", "90"], ["19", "96"], ["39", "96"], ["70", "96"], ["81", "104"], ["19", "104"], ["93", "104"], ["111", "110"], ["111", "110"], ["103", "110"], ["19", "110"], ["52", "124"], ["90", "124"], ["128", "124"], ["128", "124"], ["111", "133"], ["19", "133"], ["137", "133"], ["137", "133"], ["95", "140"], ["19", "140"], ["137", "140"], ["148", "146"], ["148", "146"], ["70", "69"], ["70", "69"], ["64", "69"], ["19", "69"], ["67", "75"], ["19", "75"], ["43", "75"], ["47", "75"], ["104", "111"], ["19", "111"], ["104", "111"], ["95", "119"], ["19", "119"], ["101", "119"], ["117", "128"], ["19", "128"], ["111", "133"], ["52", "151"], ["90", "151"], ["155", "151"], ["155", "151"], ["19", "70"], ["62", "70"], ["95", "120"], ["19", "120"], ["101", "120"], ["111", "135"], ["19", "135"], ["137", "135"], ["137", "135"], ["95", "142"], ["19", "142"], ["137", "142"], ["19", "148"], ["140", "148"], ["146", "155"], ["19", "155"], ["157", "155"], ["157", "155"], ["101", "137"], ["19", "137"], ["110", "137"], ["19", "157"], ["133", "157"], ["19", "158"], ["133", "158"], ["43", "47"], ["43", "48"], ["43", "52"], ["43", "50"], ["81", "85"], ["81", "90"], ["81", "88"], ["81", "86"], ["109", "120"], ["109", "154"], ["109", "146"], ["109", "128"], ["109", "142"], ["109", "151"], ["109", "119"], ["109", "157"], ["109", "159"], ["109", "140"], ["109", "148"], ["109", "137"], ["109", "152"], ["109", "135"], ["109", "117"], ["109", "127"], ["109", "155"], ["109", "124"], ["109", "125"], ["109", "158"], ["109", "133"], ["75", "64"], ["75", "75"], ["75", "69"], ["75", "67"], ["75", "70"], ["75", "62"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long k: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,k,long k = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long t = 1)<SUB>4</SUB>>", "37": "<(LITERAL,1,long t = 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,long l = 1)<SUB>5</SUB>>", "41": "<(LITERAL,1,long l = 1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= 9)<SUB>6</SUB>>", "45": "<(LITERAL,9,k &lt;= 9)<SUB>6</SUB>>", "47": "<(print,System.out.print(k))<SUB>7</SUB>>", "49": "<(IDENTIFIER,System,System.out.print(k))<SUB>7</SUB>>", "51": "<(IDENTIFIER,k,System.out.print(k))<SUB>7</SUB>>", "53": "<(IDENTIFIER,System,System.exit(0))<SUB>8</SUB>>", "55": "<(LOCAL,long x: long)<SUB>10</SUB>>", "57": "<(IDENTIFIER,x,long x = 9)<SUB>10</SUB>>", "59": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>11</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "63": "<(IDENTIFIER,l,++l)<SUB>12</SUB>>", "65": "<(IDENTIFIER,t,t *= 10)<SUB>13</SUB>>", "67": "<(&lt;operator&gt;.assignmentPlus,x += 9 * l * t)<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.multiplication,9 * l * t)<SUB>14</SUB>>", "71": "<(LITERAL,9,9 * l)<SUB>14</SUB>>", "73": "<(IDENTIFIER,t,9 * l * t)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.greaterEqualsThan,x &gt;= k)<SUB>15</SUB>>", "77": "<(IDENTIFIER,k,x &gt;= k)<SUB>15</SUB>>", "79": "<(CONTROL_STRUCTURE,break;,break;)<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.equals,x == k)<SUB>19</SUB>>", "83": "<(IDENTIFIER,k,x == k)<SUB>19</SUB>>", "85": "<(print,System.out.print(9))<SUB>20</SUB>>", "87": "<(IDENTIFIER,System,System.out.print(9))<SUB>20</SUB>>", "89": "<(LITERAL,9,System.out.print(9))<SUB>20</SUB>>", "91": "<(IDENTIFIER,System,System.exit(0))<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.assignmentMinus,x -= 9 * l * t)<SUB>23</SUB>>", "95": "<(&lt;operator&gt;.multiplication,9 * l * t)<SUB>23</SUB>>", "97": "<(LITERAL,9,9 * l)<SUB>23</SUB>>", "99": "<(IDENTIFIER,t,9 * l * t)<SUB>23</SUB>>", "101": "<(&lt;operator&gt;.assignment,long a = (k - x) / l)<SUB>24</SUB>>", "103": "<(&lt;operator&gt;.division,(k - x) / l)<SUB>24</SUB>>", "105": "<(IDENTIFIER,k,k - x)<SUB>24</SUB>>", "107": "<(IDENTIFIER,l,(k - x) / l)<SUB>24</SUB>>", "109": "<(&lt;operator&gt;.equals,(k - x) % l == 0)<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.subtraction,k - x)<SUB>25</SUB>>", "113": "<(IDENTIFIER,x,k - x)<SUB>25</SUB>>", "115": "<(LITERAL,0,(k - x) % l == 0)<SUB>25</SUB>>", "117": "<(&lt;operator&gt;.assignment,x = t + a - 1)<SUB>26</SUB>>", "119": "<(&lt;operator&gt;.subtraction,t + a - 1)<SUB>26</SUB>>", "121": "<(IDENTIFIER,t,t + a)<SUB>26</SUB>>", "123": "<(LITERAL,1,t + a - 1)<SUB>26</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "129": "<(IDENTIFIER,x,x % 10)<SUB>27</SUB>>", "131": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "133": "<(&lt;operator&gt;.assignmentMinus,k -= x + a * l)<SUB>29</SUB>>", "135": "<(&lt;operator&gt;.addition,x + a * l)<SUB>29</SUB>>", "137": "<(&lt;operator&gt;.multiplication,a * l)<SUB>29</SUB>>", "139": "<(IDENTIFIER,l,a * l)<SUB>29</SUB>>", "141": "<(IDENTIFIER,x,x = t + a)<SUB>30</SUB>>", "143": "<(IDENTIFIER,t,t + a)<SUB>30</SUB>>", "145": "<(LOCAL,String s: java.lang.String)<SUB>31</SUB>>", "147": "<(IDENTIFIER,s,String s = Long.toString(x))<SUB>31</SUB>>", "149": "<(IDENTIFIER,Long,Long.toString(x))<SUB>31</SUB>>", "151": "<(print,System.out.print(s.charAt((int) k - 1)))<SUB>32</SUB>>", "153": "<(IDENTIFIER,System,System.out.print(s.charAt((int) k - 1)))<SUB>32</SUB>>", "155": "<(charAt,s.charAt((int) k - 1))<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.subtraction,(int) k - 1)<SUB>32</SUB>>", "159": "<(TYPE_REF,int,int)<SUB>32</SUB>>", "161": "<(LITERAL,1,(int) k - 1)<SUB>32</SUB>>", "163": "<(MODIFIER,STATIC)>"}}