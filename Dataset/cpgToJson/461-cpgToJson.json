{"edges": [["21", "22"], ["21", "23"], ["21", "150"], ["21", "151"], ["21", "152"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "49"], ["23", "50"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "123"], ["23", "124"], ["23", "129"], ["23", "143"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "65"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "69"], ["65", "78"], ["66", "67"], ["66", "68"], ["69", "70"], ["70", "71"], ["70", "72"], ["70", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["79", "80"], ["80", "81"], ["80", "82"], ["80", "83"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "103"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "107"], ["103", "116"], ["104", "105"], ["104", "106"], ["107", "108"], ["108", "109"], ["108", "110"], ["108", "111"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["117", "118"], ["118", "119"], ["118", "120"], ["118", "121"], ["121", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["127", "128"], ["129", "130"], ["129", "132"], ["130", "131"], ["132", "133"], ["132", "134"], ["132", "138"], ["134", "135"], ["134", "136"], ["136", "137"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "48"], ["48", "52"], ["85", "90"], ["124", "130"], ["143", "152"], ["26", "24"], ["41", "39"], ["47", "45"], ["52", "55"], ["55", "63"], ["55", "85"], ["58", "55"], ["90", "93"], ["93", "101"], ["93", "127"], ["96", "93"], ["126", "124"], ["130", "136"], ["130", "146"], ["144", "147"], ["147", "143"], ["29", "36"], ["32", "27"], ["43", "41"], ["61", "66"], ["99", "104"], ["127", "126"], ["134", "140"], ["138", "130"], ["146", "144"], ["31", "29"], ["34", "32"], ["63", "61"], ["66", "74"], ["66", "80"], ["101", "99"], ["104", "112"], ["104", "121"], ["136", "134"], ["140", "138"], ["36", "34"], ["70", "58"], ["108", "96"], ["73", "70"], ["80", "58"], ["111", "108"], ["118", "96"], ["74", "73"], ["112", "111"], ["121", "118"], ["21", "26"], ["22", "152"], ["24", "152"], ["32", "152"], ["32", "152"], ["32", "152"], ["27", "152"], ["43", "152"], ["41", "152"], ["39", "152"], ["39", "152"], ["45", "152"], ["48", "152"], ["85", "152"], ["90", "152"], ["93", "152"], ["93", "152"], ["93", "152"], ["127", "152"], ["126", "152"], ["124", "152"], ["130", "152"], ["130", "152"], ["143", "152"], ["147", "152"], ["143", "152"], ["143", "152"], ["140", "152"], ["138", "152"], ["138", "152"], ["101", "152"], ["99", "152"], ["99", "152"], ["104", "152"], ["118", "152"], ["118", "152"], ["118", "152"], ["108", "152"], ["111", "152"], ["108", "152"], ["108", "152"], ["96", "152"], ["63", "152"], ["61", "152"], ["61", "152"], ["66", "152"], ["80", "152"], ["80", "152"], ["70", "152"], ["73", "152"], ["70", "152"], ["70", "152"], ["58", "152"], ["140", "152"], ["41", "152"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["21", "85"], ["126", "124"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["21", "52"], ["21", "90"], ["147", "143"], ["147", "143"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["52", "55"], ["58", "55"], ["21", "55"], ["39", "55"], ["55", "58"], ["21", "58"], ["63", "61"], ["90", "93"], ["96", "93"], ["21", "93"], ["55", "93"], ["93", "96"], ["21", "96"], ["101", "99"], ["127", "126"], ["124", "130"], ["136", "130"], ["21", "130"], ["136", "134"], ["140", "138"], ["140", "138"], ["85", "147"], ["138", "147"], ["21", "147"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["48", "127"], ["118", "127"], ["108", "127"], ["80", "127"], ["70", "127"], ["21", "127"], ["85", "138"], ["21", "138"], ["43", "63"], ["21", "63"], ["48", "66"], ["80", "66"], ["70", "66"], ["21", "66"], ["61", "66"], ["43", "101"], ["63", "101"], ["21", "101"], ["48", "104"], ["118", "104"], ["108", "104"], ["80", "104"], ["70", "104"], ["21", "104"], ["99", "104"], ["130", "136"], ["21", "136"], ["21", "140"], ["134", "140"], ["74", "70"], ["21", "70"], ["74", "70"], ["112", "108"], ["21", "108"], ["112", "108"], ["111", "108"], ["111", "108"], ["74", "73"], ["74", "73"], ["21", "73"], ["66", "80"], ["21", "80"], ["66", "80"], ["112", "111"], ["112", "111"], ["21", "111"], ["104", "118"], ["21", "118"], ["104", "118"], ["121", "118"], ["66", "74"], ["21", "74"], ["66", "74"], ["104", "112"], ["21", "112"], ["104", "112"], ["21", "121"], ["55", "66"], ["55", "58"], ["55", "61"], ["55", "63"], ["55", "55"], ["93", "96"], ["93", "99"], ["93", "104"], ["93", "93"], ["93", "101"], ["130", "136"], ["130", "134"], ["130", "138"], ["130", "140"], ["130", "130"], ["66", "73"], ["66", "74"], ["66", "80"], ["66", "70"], ["104", "121"], ["104", "112"], ["104", "118"], ["104", "108"], ["104", "111"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(reader.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(reader.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,HashMap&lt;String, Integer&gt; map: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,map,ANY map = new HashMap&lt;String, Integer&gt;())<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new HashMap&lt;String, Integer&gt;())<SUB>4</SUB>>", "49": "<(LOCAL,String input: java.lang.String)<SUB>5</SUB>>", "51": "<(LOCAL,int i: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,input = readLine())<SUB>7</SUB>>", "63": "<(readLine,readLine())<SUB>7</SUB>>", "65": "<(CONTROL_STRUCTURE,if (map.containsKey(input)),if (map.containsKey(input)))<SUB>8</SUB>>", "67": "<(IDENTIFIER,map,containsKey(input))<SUB>8</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "71": "<(IDENTIFIER,map,put(input, map.get(input) + 1))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.addition,map.get(input) + 1)<SUB>9</SUB>>", "75": "<(IDENTIFIER,map,get(input))<SUB>9</SUB>>", "77": "<(LITERAL,1,map.get(input) + 1)<SUB>9</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(IDENTIFIER,map,put(input, 1))<SUB>11</SUB>>", "83": "<(LITERAL,1,put(input, 1))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,int change = 0)<SUB>14</SUB>>", "87": "<(LITERAL,0,int change = 0)<SUB>14</SUB>>", "89": "<(LOCAL,int i: int)<SUB>15</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.assignment,input = readLine())<SUB>16</SUB>>", "101": "<(readLine,readLine())<SUB>16</SUB>>", "103": "<(CONTROL_STRUCTURE,if (map.containsKey(input)),if (map.containsKey(input)))<SUB>17</SUB>>", "105": "<(IDENTIFIER,map,containsKey(input))<SUB>17</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "109": "<(IDENTIFIER,map,put(input, map.get(input) - 1))<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.subtraction,map.get(input) - 1)<SUB>18</SUB>>", "113": "<(IDENTIFIER,map,get(input))<SUB>18</SUB>>", "115": "<(LITERAL,1,map.get(input) - 1)<SUB>18</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "119": "<(IDENTIFIER,map,put(input, -1))<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "123": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>23</SUB>>", "125": "<(IDENTIFIER,$iterLocal0,)<SUB>23</SUB>>", "127": "<(values,values())<SUB>23</SUB>>", "129": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>23</SUB>>", "131": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "133": "<(LOCAL,x: int)<SUB>23</SUB>>", "135": "<(IDENTIFIER,x,&lt;empty&gt;)>", "137": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "139": "<(IDENTIFIER,change,change += Math.abs(x))<SUB>24</SUB>>", "141": "<(IDENTIFIER,Math,Math.abs(x))<SUB>24</SUB>>", "143": "<(println,System.out.println(change / 2))<SUB>26</SUB>>", "145": "<(IDENTIFIER,System,System.out.println(change / 2))<SUB>26</SUB>>", "147": "<(&lt;operator&gt;.division,change / 2)<SUB>26</SUB>>", "149": "<(LITERAL,2,change / 2)<SUB>26</SUB>>", "151": "<(MODIFIER,STATIC)>"}}