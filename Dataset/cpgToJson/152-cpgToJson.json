{"edges": [["19", "21"], ["19", "191"], ["19", "192"], ["19", "193"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "51"], ["21", "69"], ["21", "70"], ["21", "76"], ["21", "99"], ["21", "100"], ["21", "106"], ["21", "164"], ["21", "165"], ["21", "168"], ["21", "186"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "67"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "114"], ["106", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "131"], ["117", "133"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "135"], ["133", "154"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "153"], ["138", "139"], ["138", "148"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["158", "163"], ["160", "161"], ["160", "162"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "176"], ["168", "178"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["180", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "48"], ["45", "53"], ["70", "78"], ["100", "108"], ["165", "170"], ["186", "193"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "56"], ["56", "64"], ["56", "73"], ["59", "56"], ["61", "59"], ["72", "70"], ["78", "81"], ["81", "87"], ["81", "103"], ["84", "81"], ["86", "84"], ["102", "100"], ["108", "111"], ["111", "119"], ["111", "165"], ["114", "111"], ["170", "173"], ["173", "183"], ["173", "189"], ["176", "173"], ["178", "176"], ["187", "186"], ["28", "26"], ["48", "47"], ["62", "67"], ["67", "61"], ["73", "72"], ["87", "93"], ["90", "86"], ["103", "102"], ["180", "178"], ["189", "187"], ["64", "62"], ["91", "96"], ["96", "90"], ["119", "125"], ["122", "140"], ["122", "114"], ["131", "125"], ["183", "180"], ["93", "91"], ["123", "122"], ["123", "128"], ["128", "122"], ["135", "155"], ["154", "131"], ["125", "123"], ["137", "135"], ["155", "160"], ["158", "154"], ["138", "137"], ["160", "158"], ["139", "150"], ["148", "138"], ["140", "145"], ["143", "139"], ["150", "148"], ["145", "143"], ["19", "24"], ["20", "193"], ["22", "193"], ["25", "193"], ["25", "193"], ["30", "193"], ["35", "193"], ["35", "193"], ["40", "193"], ["42", "193"], ["40", "193"], ["40", "193"], ["45", "193"], ["45", "193"], ["45", "193"], ["53", "193"], ["56", "193"], ["70", "193"], ["70", "193"], ["100", "193"], ["102", "193"], ["100", "193"], ["100", "193"], ["165", "193"], ["170", "193"], ["173", "193"], ["173", "193"], ["173", "193"], ["186", "193"], ["186", "193"], ["186", "193"], ["180", "193"], ["180", "193"], ["178", "193"], ["178", "193"], ["176", "193"], ["119", "193"], ["123", "193"], ["125", "193"], ["123", "193"], ["122", "193"], ["128", "193"], ["122", "193"], ["122", "193"], ["114", "193"], ["139", "193"], ["139", "193"], ["138", "193"], ["138", "193"], ["137", "193"], ["137", "193"], ["135", "193"], ["135", "193"], ["154", "193"], ["158", "193"], ["158", "193"], ["154", "193"], ["154", "193"], ["131", "193"], ["86", "193"], ["90", "193"], ["90", "193"], ["86", "193"], ["86", "193"], ["84", "193"], ["61", "193"], ["67", "193"], ["61", "193"], ["61", "193"], ["59", "193"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["72", "70"], ["102", "100"], ["19", "165"], ["22", "25"], ["19", "25"], ["19", "53"], ["67", "61"], ["19", "78"], ["70", "86"], ["45", "86"], ["19", "108"], ["19", "170"], ["180", "178"], ["180", "178"], ["180", "178"], ["165", "186"], ["178", "186"], ["19", "186"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["53", "56"], ["59", "56"], ["19", "56"], ["30", "56"], ["19", "59"], ["56", "59"], ["56", "72"], ["19", "72"], ["78", "81"], ["84", "81"], ["19", "81"], ["56", "81"], ["93", "84"], ["19", "84"], ["81", "102"], ["19", "102"], ["108", "111"], ["114", "111"], ["19", "111"], ["81", "111"], ["125", "114"], ["19", "114"], ["170", "173"], ["176", "173"], ["19", "173"], ["111", "173"], ["173", "176"], ["19", "176"], ["30", "48"], ["19", "48"], ["42", "67"], ["19", "67"], ["56", "73"], ["19", "73"], ["70", "90"], ["45", "90"], ["81", "103"], ["19", "103"], ["111", "119"], ["19", "119"], ["158", "180"], ["19", "180"], ["165", "180"], ["178", "180"], ["100", "180"], ["154", "180"], ["56", "64"], ["19", "64"], ["123", "122"], ["123", "122"], ["128", "122"], ["128", "122"], ["150", "131"], ["19", "131"], ["137", "135"], ["137", "135"], ["158", "154"], ["158", "154"], ["158", "154"], ["81", "93"], ["19", "93"], ["119", "123"], ["131", "123"], ["19", "123"], ["125", "123"], ["125", "123"], ["123", "128"], ["19", "128"], ["19", "125"], ["111", "125"], ["35", "125"], ["139", "137"], ["139", "137"], ["100", "137"], ["40", "137"], ["19", "137"], ["19", "158"], ["100", "158"], ["154", "158"], ["135", "158"], ["139", "138"], ["139", "138"], ["100", "138"], ["70", "139"], ["86", "139"], ["145", "150"], ["19", "150"], ["123", "145"], ["128", "145"], ["19", "145"], ["56", "64"], ["56", "56"], ["56", "67"], ["56", "59"], ["56", "61"], ["56", "62"], ["81", "96"], ["81", "81"], ["81", "84"], ["81", "87"], ["81", "91"], ["81", "93"], ["81", "90"], ["81", "86"], ["111", "122"], ["111", "114"], ["111", "119"], ["111", "123"], ["111", "125"], ["111", "111"], ["173", "183"], ["173", "178"], ["173", "176"], ["173", "173"], ["173", "180"], ["122", "160"], ["122", "154"], ["122", "145"], ["122", "122"], ["122", "131"], ["122", "150"], ["122", "123"], ["122", "138"], ["122", "140"], ["122", "148"], ["122", "143"], ["122", "137"], ["122", "135"], ["122", "155"], ["122", "139"], ["122", "125"], ["122", "158"], ["123", "128"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,int k: int)<SUB>6</SUB>>", "41": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] arr = new int[n + 1])<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "49": "<(IDENTIFIER,n,n + 1)<SUB>7</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,arr[i + 1] = nextInt())<SUB>9</SUB>>", "63": "<(IDENTIFIER,arr,arr[i + 1] = nextInt())<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i + 1)<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(LOCAL,long[] sum: long[])<SUB>11</SUB>>", "71": "<(IDENTIFIER,sum,long[] sum = new long[n + 1])<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.addition,n + 1)<SUB>11</SUB>>", "75": "<(LITERAL,1,n + 1)<SUB>11</SUB>>", "77": "<(LOCAL,int i: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,i,int i = 1)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>13</SUB>>", "83": "<(IDENTIFIER,n,i &lt;= n)<SUB>13</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,sum[i])<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,sum[i] = sum[i - 1] + arr[i])<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,sum[i - 1])<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>14</SUB>>", "95": "<(LITERAL,1,i - 1)<SUB>14</SUB>>", "97": "<(IDENTIFIER,arr,sum[i - 1] + arr[i])<SUB>14</SUB>>", "99": "<(LOCAL,long[] dp: long[])<SUB>16</SUB>>", "101": "<(IDENTIFIER,dp,long[] dp = new long[n + 1])<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.addition,n + 1)<SUB>16</SUB>>", "105": "<(LITERAL,1,n + 1)<SUB>16</SUB>>", "107": "<(LOCAL,int i: int)<SUB>18</SUB>>", "109": "<(IDENTIFIER,i,int i = 1)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>18</SUB>>", "113": "<(IDENTIFIER,n,i &lt;= n)<SUB>18</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &gt; i - m &amp;&amp; j &gt;= 1); j--),for (int j = i; Some(j &gt; i - m &amp;&amp; j &gt;= 1); j--))<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = i)<SUB>20</SUB>>", "121": "<(IDENTIFIER,i,int j = i)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.greaterThan,j &gt; i - m)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.subtraction,i - m)<SUB>20</SUB>>", "127": "<(IDENTIFIER,m,i - m)<SUB>20</SUB>>", "129": "<(IDENTIFIER,j,j &gt;= 1)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.postDecrement,j--)<SUB>20</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,long val = sum[i] - sum[j - 1] + dp[j - 1] - k)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.subtraction,sum[i] - sum[j - 1] + dp[j - 1] - k)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.subtraction,sum[i] - sum[j - 1])<SUB>22</SUB>>", "141": "<(IDENTIFIER,sum,sum[i] - sum[j - 1])<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,sum[j - 1])<SUB>22</SUB>>", "145": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>22</SUB>>", "147": "<(LITERAL,1,j - 1)<SUB>22</SUB>>", "149": "<(IDENTIFIER,dp,sum[i] - sum[j - 1] + dp[j - 1])<SUB>22</SUB>>", "151": "<(IDENTIFIER,j,j - 1)<SUB>22</SUB>>", "153": "<(IDENTIFIER,k,sum[i] - sum[j - 1] + dp[j - 1] - k)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>23</SUB>>", "157": "<(IDENTIFIER,i,dp[i] = Math.max(dp[i], val))<SUB>23</SUB>>", "159": "<(IDENTIFIER,Math,Math.max(dp[i], val))<SUB>23</SUB>>", "161": "<(IDENTIFIER,dp,Math.max(dp[i], val))<SUB>23</SUB>>", "163": "<(IDENTIFIER,val,Math.max(dp[i], val))<SUB>23</SUB>>", "165": "<(&lt;operator&gt;.assignment,long max = 0)<SUB>26</SUB>>", "167": "<(LITERAL,0,long max = 0)<SUB>26</SUB>>", "169": "<(LOCAL,int i: int)<SUB>27</SUB>>", "171": "<(IDENTIFIER,i,int i = 1)<SUB>27</SUB>>", "173": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>27</SUB>>", "175": "<(IDENTIFIER,n,i &lt;= n)<SUB>27</SUB>>", "177": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "179": "<(IDENTIFIER,max,max = Math.max(max, dp[i]))<SUB>28</SUB>>", "181": "<(IDENTIFIER,Math,Math.max(max, dp[i]))<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>28</SUB>>", "185": "<(IDENTIFIER,i,Math.max(max, dp[i]))<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "189": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "191": "<(MODIFIER,PUBLIC)>", "193": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}