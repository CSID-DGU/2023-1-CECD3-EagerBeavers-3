{"edges": [["19", "21"], ["19", "155"], ["19", "156"], ["19", "157"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "28"], ["21", "32"], ["21", "33"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "81"], ["21", "86"], ["21", "87"], ["21", "4"], ["21", "92"], ["21", "95"], ["21", "103"], ["21", "150"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "64"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "71"], ["65", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "74"], ["72", "73"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["81", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "3"], ["95", "96"], ["96", "97"], ["96", "100"], ["96", "102"], ["97", "98"], ["97", "99"], ["100", "101"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "111"], ["103", "113"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["113", "119"], ["113", "126"], ["113", "131"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "136"], ["132", "133"], ["132", "135"], ["133", "134"], ["136", "137"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["139", "142"], ["142", "143"], ["142", "149"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["23", "30"], ["28", "33"], ["33", "39"], ["37", "44"], ["42", "48"], ["81", "91"], ["87", "94"], ["92", "99"], ["95", "105"], ["150", "157"], ["25", "23"], ["30", "28"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "84"], ["54", "51"], ["84", "81"], ["89", "87"], ["94", "92"], ["105", "108"], ["108", "116"], ["108", "153"], ["111", "108"], ["151", "150"], ["57", "68"], ["91", "89"], ["97", "100"], ["100", "95"], ["114", "122"], ["119", "128"], ["126", "133"], ["153", "151"], ["58", "61"], ["61", "57"], ["65", "72"], ["65", "54"], ["99", "97"], ["116", "114"], ["120", "119"], ["128", "126"], ["132", "147"], ["132", "111"], ["66", "65"], ["72", "77"], ["74", "54"], ["122", "120"], ["133", "132"], ["137", "111"], ["68", "66"], ["75", "74"], ["139", "137"], ["77", "75"], ["142", "139"], ["143", "142"], ["145", "143"], ["147", "145"], ["19", "25"], ["20", "157"], ["23", "157"], ["23", "157"], ["28", "157"], ["30", "157"], ["28", "157"], ["28", "157"], ["33", "157"], ["33", "157"], ["37", "157"], ["37", "157"], ["37", "157"], ["42", "157"], ["42", "157"], ["42", "157"], ["81", "157"], ["81", "157"], ["81", "157"], ["87", "157"], ["87", "157"], ["92", "157"], ["95", "157"], ["97", "157"], ["100", "157"], ["100", "157"], ["95", "157"], ["105", "157"], ["108", "157"], ["108", "157"], ["108", "157"], ["150", "157"], ["150", "157"], ["150", "157"], ["114", "157"], ["119", "157"], ["119", "157"], ["126", "157"], ["126", "157"], ["133", "157"], ["132", "157"], ["132", "157"], ["132", "157"], ["147", "157"], ["143", "157"], ["142", "157"], ["139", "157"], ["137", "157"], ["137", "157"], ["111", "157"], ["57", "157"], ["61", "157"], ["57", "157"], ["57", "157"], ["65", "157"], ["65", "157"], ["72", "157"], ["72", "157"], ["74", "157"], ["74", "157"], ["54", "157"], ["81", "157"], ["139", "157"], ["19", "20"], ["25", "23"], ["30", "28"], ["19", "33"], ["39", "37"], ["44", "42"], ["19", "92"], ["19", "48"], ["19", "81"], ["84", "81"], ["92", "95"], ["19", "95"], ["97", "95"], ["100", "95"], ["19", "105"], ["87", "150"], ["137", "150"], ["19", "150"], ["19", "25"], ["25", "30"], ["19", "30"], ["23", "39"], ["19", "39"], ["19", "44"], ["48", "51"], ["54", "51"], ["19", "51"], ["39", "51"], ["61", "54"], ["19", "54"], ["61", "57"], ["61", "57"], ["19", "84"], ["19", "97"], ["19", "102"], ["105", "108"], ["111", "108"], ["19", "108"], ["51", "108"], ["143", "111"], ["19", "111"], ["108", "111"], ["108", "119"], ["19", "119"], ["97", "100"], ["19", "100"], ["95", "114"], ["133", "114"], ["147", "114"], ["19", "114"], ["37", "114"], ["126", "114"], ["57", "114"], ["114", "126"], ["19", "126"], ["37", "126"], ["114", "126"], ["28", "61"], ["19", "61"], ["51", "61"], ["42", "65"], ["74", "65"], ["19", "74"], ["133", "132"], ["33", "132"], ["72", "132"], ["19", "132"], ["139", "137"], ["139", "137"], ["139", "137"], ["33", "72"], ["19", "72"], ["126", "133"], ["19", "133"], ["19", "139"], ["87", "139"], ["137", "139"], ["143", "139"], ["143", "139"], ["143", "142"], ["143", "142"], ["19", "142"], ["19", "143"], ["108", "143"], ["81", "143"], ["133", "147"], ["19", "147"], ["51", "68"], ["51", "51"], ["51", "57"], ["51", "66"], ["51", "65"], ["51", "54"], ["51", "58"], ["51", "61"], ["108", "120"], ["108", "116"], ["108", "122"], ["108", "128"], ["108", "114"], ["108", "132"], ["108", "119"], ["108", "126"], ["108", "108"], ["108", "111"], ["108", "133"], ["65", "77"], ["65", "75"], ["65", "72"], ["65", "74"], ["132", "145"], ["132", "142"], ["132", "143"], ["132", "137"], ["132", "147"], ["132", "139"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int n = in())<SUB>2</SUB>>", "25": "<(in,in())<SUB>2</SUB>>", "27": "<(LOCAL,String s: java.lang.String)<SUB>3</SUB>>", "29": "<(IDENTIFIER,s,String s = next())<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,next())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int total = 0)<SUB>4</SUB>>", "35": "<(LITERAL,0,int total = 0)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] seq = new int[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(LOCAL,boolean[] c: boolean[])<SUB>6</SUB>>", "43": "<(IDENTIFIER,c,boolean[] c = new boolean[100000])<SUB>6</SUB>>", "45": "<(LITERAL,100000,new boolean[100000])<SUB>6</SUB>>", "47": "<(LOCAL,int i: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,seq[i] = s.charAt(i))<SUB>8</SUB>>", "59": "<(IDENTIFIER,seq,seq[i] = s.charAt(i))<SUB>8</SUB>>", "61": "<(charAt,s.charAt(i))<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,s.charAt(i))<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.logicalNot,!c[seq[i]])<SUB>9</SUB>>", "67": "<(IDENTIFIER,c,!c[seq[i]])<SUB>9</SUB>>", "69": "<(IDENTIFIER,seq,!c[seq[i]])<SUB>9</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "73": "<(IDENTIFIER,total,total++)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,c[seq[i]])<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,seq[i])<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,c[seq[i]] = true)<SUB>11</SUB>>", "81": "<(fill,fill(id, -1))<SUB>15</SUB>>", "83": "<(IDENTIFIER,id,fill(id, -1))<SUB>15</SUB>>", "85": "<(LITERAL,1,-1)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.assignment,int best = Integer.MAX_VALUE)<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>16</SUB>>", "91": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>16</SUB>>", "92": "<(&lt;operator&gt;.assignment,ANY q = new TreeSet&lt;Integer&gt;(new Comparator&lt;Integer&gt;() {\\012\\012    @Override\\012    public int compare(Integer o1, Integer o2) {\\012        return id[o1] - id[o2];\\012    }\\012}))<SUB>17</SUB>>", "94": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;(new Comparator&lt;Integer&gt;() {\\012\\012    @Override\\012    public int compare(Integer o1, Integer o2) {\\012        return id[o1] - id[o2];\\012    }\\012}))<SUB>17</SUB>>", "3": "<(IDENTIFIER,q,new TreeSet&lt;Integer&gt;(new Comparator&lt;Integer&gt;() {\\012\\012    @Override\\012    public int compare(Integer o1, Integer o2) {\\012        return id[o1] - id[o2];\\012    }\\012}))<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "99": "<(&lt;operator&gt;.alloc,new Comparator&lt;Integer&gt;() {\\012\\012    @Override\\012    public int compare(Integer o1, Integer o2) {\\012        return id[o1] - id[o2];\\012    }\\012})<SUB>17</SUB>>", "101": "<(IDENTIFIER,$obj0,new Comparator&lt;Integer&gt;() {\\012\\012    @Override\\012    public int compare(Integer o1, Integer o2) {\\012        return id[o1] - id[o2];\\012    }\\012})>", "103": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>23</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "107": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "109": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "115": "<(IDENTIFIER,q,remove(seq[i]))<SUB>24</SUB>>", "117": "<(IDENTIFIER,seq,remove(seq[i]))<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.assignment,id[seq[i]] = i)<SUB>25</SUB>>", "121": "<(IDENTIFIER,id,id[seq[i]] = i)<SUB>25</SUB>>", "123": "<(IDENTIFIER,seq,id[seq[i]] = i)<SUB>25</SUB>>", "125": "<(IDENTIFIER,i,id[seq[i]] = i)<SUB>25</SUB>>", "127": "<(IDENTIFIER,q,add(seq[i]))<SUB>26</SUB>>", "129": "<(IDENTIFIER,seq,add(seq[i]))<SUB>26</SUB>>", "131": "<(CONTROL_STRUCTURE,if (q.size() == total),if (q.size() == total))<SUB>27</SUB>>", "133": "<(size,size())<SUB>27</SUB>>", "135": "<(IDENTIFIER,total,q.size() == total)<SUB>27</SUB>>", "137": "<(&lt;operator&gt;.assignment,best = min(best, i - id[q.first()] + 1))<SUB>29</SUB>>", "139": "<(min,min(best, i - id[q.first()] + 1))<SUB>29</SUB>>", "141": "<(IDENTIFIER,best,min(best, i - id[q.first()] + 1))<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.subtraction,i - id[q.first()])<SUB>29</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,id[q.first()])<SUB>29</SUB>>", "147": "<(first,first())<SUB>29</SUB>>", "149": "<(LITERAL,1,i - id[q.first()] + 1)<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "153": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "155": "<(MODIFIER,PUBLIC)>", "157": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}