{"edges": [["21", "22"], ["21", "23"], ["21", "334"], ["21", "335"], ["21", "336"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "49"], ["23", "50"], ["23", "57"], ["23", "58"], ["23", "65"], ["23", "66"], ["23", "72"], ["23", "73"], ["23", "80"], ["23", "81"], ["23", "88"], ["23", "108"], ["23", "109"], ["23", "115"], ["23", "116"], ["23", "121"], ["23", "122"], ["23", "125"], ["23", "181"], ["23", "182"], ["23", "186"], ["23", "187"], ["23", "194"], ["23", "217"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "48"], ["46", "47"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "71"], ["69", "70"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["135", "147"], ["135", "151"], ["135", "164"], ["135", "179"], ["136", "137"], ["136", "146"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "163"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["179", "180"], ["182", "183"], ["182", "184"], ["184", "185"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["204", "212"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["217", "222"], ["217", "225"], ["217", "227"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["227", "228"], ["227", "229"], ["227", "235"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["233", "234"], ["235", "236"], ["235", "239"], ["235", "249"], ["236", "237"], ["236", "238"], ["239", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["250", "251"], ["251", "252"], ["251", "257"], ["251", "283"], ["252", "253"], ["252", "254"], ["254", "255"], ["254", "256"], ["257", "258"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "274"], ["263", "264"], ["263", "273"], ["264", "265"], ["264", "272"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["274", "275"], ["274", "282"], ["275", "276"], ["275", "277"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "281"], ["283", "284"], ["284", "285"], ["285", "286"], ["285", "295"], ["285", "311"], ["286", "287"], ["286", "294"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "293"], ["295", "296"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "306"], ["301", "302"], ["301", "305"], ["302", "303"], ["302", "304"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["312", "313"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["323", "324"], ["323", "325"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["24", "31"], ["27", "40"], ["38", "41"], ["41", "46"], ["43", "54"], ["50", "62"], ["58", "69"], ["66", "77"], ["73", "85"], ["81", "90"], ["109", "118"], ["116", "122"], ["122", "127"], ["182", "192"], ["187", "196"], ["26", "24"], ["40", "38"], ["45", "43"], ["52", "50"], ["60", "58"], ["68", "66"], ["75", "73"], ["83", "81"], ["90", "93"], ["93", "102"], ["93", "114"], ["96", "93"], ["111", "109"], ["118", "116"], ["127", "130"], ["130", "142"], ["130", "184"], ["133", "130"], ["184", "182"], ["189", "187"], ["196", "199"], ["199", "206"], ["199", "219"], ["202", "199"], ["219", "222"], ["222", "336"], ["222", "233"], ["225", "222"], ["29", "36"], ["32", "27"], ["46", "45"], ["54", "52"], ["62", "60"], ["69", "68"], ["77", "75"], ["85", "83"], ["99", "96"], ["112", "111"], ["147", "153"], ["151", "166"], ["164", "179"], ["179", "133"], ["190", "193"], ["193", "189"], ["205", "216"], ["212", "202"], ["229", "236"], ["31", "29"], ["34", "32"], ["100", "105"], ["103", "99"], ["114", "112"], ["137", "184"], ["137", "150"], ["148", "147"], ["152", "161"], ["157", "151"], ["165", "175"], ["170", "164"], ["192", "190"], ["206", "211"], ["209", "205"], ["214", "212"], ["231", "229"], ["236", "243"], ["236", "254"], ["36", "34"], ["102", "100"], ["105", "103"], ["138", "137"], ["150", "148"], ["153", "152"], ["158", "163"], ["163", "157"], ["166", "165"], ["171", "178"], ["178", "170"], ["211", "209"], ["216", "214"], ["233", "231"], ["240", "225"], ["139", "144"], ["144", "138"], ["159", "162"], ["162", "158"], ["172", "177"], ["177", "171"], ["241", "245"], ["244", "240"], ["140", "143"], ["143", "139"], ["161", "159"], ["173", "176"], ["176", "172"], ["243", "241"], ["245", "244"], ["252", "261"], ["252", "288"], ["142", "140"], ["175", "173"], ["254", "252"], ["258", "225"], ["259", "268"], ["262", "258"], ["261", "259"], ["263", "278"], ["274", "262"], ["286", "299"], ["286", "316"], ["264", "263"], ["275", "274"], ["287", "286"], ["296", "225"], ["265", "264"], ["277", "275"], ["288", "291"], ["291", "287"], ["297", "302"], ["300", "296"], ["313", "225"], ["267", "265"], ["278", "279"], ["279", "277"], ["299", "297"], ["301", "308"], ["306", "300"], ["314", "319"], ["317", "313"], ["268", "269"], ["269", "267"], ["302", "301"], ["308", "306"], ["316", "314"], ["318", "326"], ["323", "317"], ["319", "318"], ["325", "323"], ["326", "328"], ["327", "325"], ["328", "331"], ["331", "327"], ["21", "26"], ["22", "336"], ["24", "336"], ["29", "336"], ["32", "336"], ["32", "336"], ["32", "336"], ["27", "336"], ["38", "336"], ["41", "336"], ["41", "336"], ["43", "336"], ["43", "336"], ["52", "336"], ["50", "336"], ["50", "336"], ["60", "336"], ["58", "336"], ["58", "336"], ["66", "336"], ["69", "336"], ["68", "336"], ["66", "336"], ["66", "336"], ["73", "336"], ["75", "336"], ["73", "336"], ["73", "336"], ["81", "336"], ["83", "336"], ["83", "336"], ["81", "336"], ["81", "336"], ["109", "336"], ["111", "336"], ["109", "336"], ["109", "336"], ["116", "336"], ["116", "336"], ["116", "336"], ["122", "336"], ["122", "336"], ["137", "336"], ["137", "336"], ["137", "336"], ["133", "336"], ["182", "336"], ["182", "336"], ["182", "336"], ["187", "336"], ["187", "336"], ["187", "336"], ["199", "336"], ["199", "336"], ["219", "336"], ["222", "336"], ["222", "336"], ["222", "336"], ["225", "336"], ["202", "336"], ["96", "336"], ["231", "336"], ["21", "22"], ["21", "24"], ["21", "38"], ["45", "43"], ["45", "43"], ["52", "50"], ["52", "50"], ["60", "58"], ["60", "58"], ["68", "66"], ["68", "66"], ["75", "73"], ["75", "73"], ["83", "81"], ["83", "81"], ["111", "109"], ["118", "116"], ["118", "116"], ["21", "122"], ["184", "182"], ["137", "187"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "90"], ["21", "127"], ["21", "196"], ["21", "219"], ["21", "29"], ["21", "37"], ["46", "45"], ["21", "45"], ["21", "52"], ["43", "52"], ["52", "60"], ["21", "60"], ["43", "60"], ["69", "68"], ["21", "68"], ["60", "75"], ["21", "75"], ["66", "75"], ["75", "83"], ["21", "83"], ["66", "83"], ["90", "93"], ["96", "93"], ["21", "93"], ["50", "93"], ["93", "96"], ["21", "96"], ["41", "111"], ["99", "111"], ["93", "118"], ["21", "118"], ["127", "130"], ["133", "130"], ["21", "130"], ["118", "130"], ["130", "133"], ["21", "133"], ["137", "151"], ["130", "184"], ["21", "184"], ["196", "199"], ["202", "199"], ["21", "199"], ["184", "199"], ["199", "202"], ["21", "202"], ["187", "205"], ["212", "205"], ["187", "212"], ["219", "222"], ["225", "222"], ["21", "222"], ["58", "222"], ["222", "225"], ["21", "225"], ["231", "229"], ["231", "229"], ["29", "32"], ["21", "32"], ["27", "46"], ["21", "46"], ["46", "69"], ["21", "69"], ["41", "99"], ["103", "99"], ["103", "99"], ["41", "147"], ["111", "147"], ["122", "179"], ["21", "179"], ["83", "103"], ["21", "103"], ["66", "103"], ["109", "137"], ["21", "137"], ["21", "231"], ["233", "231"], ["229", "236"], ["21", "236"], ["69", "233"], ["21", "233"], ["313", "240"], ["296", "240"], ["258", "240"], ["73", "240"], ["21", "240"], ["81", "240"], ["73", "244"], ["21", "244"], ["81", "244"], ["73", "245"], ["21", "245"], ["236", "252"], ["21", "252"], ["122", "252"], ["179", "252"], ["288", "252"], ["328", "252"], ["122", "254"], ["179", "254"], ["288", "254"], ["328", "254"], ["21", "254"], ["313", "258"], ["296", "258"], ["240", "258"], ["21", "258"], ["21", "262"], ["21", "263"], ["287", "286"], ["287", "286"], ["21", "286"], ["288", "287"], ["288", "287"], ["291", "287"], ["291", "287"], ["313", "296"], ["258", "296"], ["240", "296"], ["182", "296"], ["21", "296"], ["21", "277"], ["279", "277"], ["279", "277"], ["252", "288"], ["21", "288"], ["122", "288"], ["179", "288"], ["328", "288"], ["199", "291"], ["331", "291"], ["308", "291"], ["21", "291"], ["182", "300"], ["21", "300"], ["296", "313"], ["258", "313"], ["240", "313"], ["182", "313"], ["21", "313"], ["21", "267"], ["269", "267"], ["269", "267"], ["269", "279"], ["21", "279"], ["182", "301"], ["21", "301"], ["182", "317"], ["21", "317"], ["252", "269"], ["21", "269"], ["291", "308"], ["21", "308"], ["182", "318"], ["21", "318"], ["21", "325"], ["327", "325"], ["327", "325"], ["328", "327"], ["328", "327"], ["331", "327"], ["331", "327"], ["288", "328"], ["21", "328"], ["288", "328"], ["291", "331"], ["21", "331"], ["93", "96"], ["93", "102"], ["93", "103"], ["93", "93"], ["93", "100"], ["93", "99"], ["93", "105"], ["130", "144"], ["130", "138"], ["130", "137"], ["130", "139"], ["130", "142"], ["130", "140"], ["130", "143"], ["199", "214"], ["199", "209"], ["199", "206"], ["199", "212"], ["199", "202"], ["199", "205"], ["199", "199"], ["199", "211"], ["199", "216"], ["222", "225"], ["222", "231"], ["222", "233"], ["222", "236"], ["222", "229"], ["222", "222"], ["137", "161"], ["137", "163"], ["137", "179"], ["137", "178"], ["137", "150"], ["137", "151"], ["137", "162"], ["137", "153"], ["137", "170"], ["137", "148"], ["137", "173"], ["137", "152"], ["137", "130"], ["137", "164"], ["137", "158"], ["137", "171"], ["137", "166"], ["137", "157"], ["137", "159"], ["137", "176"], ["137", "177"], ["137", "165"], ["137", "147"], ["137", "175"], ["137", "133"], ["137", "172"], ["236", "240"], ["236", "244"], ["236", "243"], ["236", "245"], ["236", "252"], ["236", "254"], ["236", "241"], ["252", "261"], ["252", "279"], ["252", "275"], ["252", "291"], ["252", "262"], ["252", "264"], ["252", "259"], ["252", "267"], ["252", "288"], ["252", "258"], ["252", "268"], ["252", "265"], ["252", "286"], ["252", "274"], ["252", "277"], ["252", "287"], ["252", "263"], ["252", "278"], ["252", "269"], ["286", "319"], ["286", "308"], ["286", "326"], ["286", "301"], ["286", "317"], ["286", "300"], ["286", "302"], ["286", "306"], ["286", "325"], ["286", "314"], ["286", "318"], ["286", "296"], ["286", "327"], ["286", "299"], ["286", "331"], ["286", "328"], ["286", "323"], ["286", "313"], ["286", "316"], ["286", "297"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,Main ma = new Main())<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new Main())<SUB>4</SUB>>", "5": "<(IDENTIFIER,ma,new Main())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,String[] l1 = split(&quot; &quot;))<SUB>5</SUB>>", "45": "<(split,split(&quot; &quot;))<SUB>5</SUB>>", "47": "<(IDENTIFIER,in,readLine())<SUB>5</SUB>>", "49": "<(LOCAL,int n: int)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,int n = Integer.parseInt(l1[0]))<SUB>6</SUB>>", "53": "<(IDENTIFIER,Integer,Integer.parseInt(l1[0]))<SUB>6</SUB>>", "55": "<(IDENTIFIER,l1,Integer.parseInt(l1[0]))<SUB>6</SUB>>", "57": "<(LOCAL,int q: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,q,int q = Integer.parseInt(l1[1]))<SUB>7</SUB>>", "61": "<(IDENTIFIER,Integer,Integer.parseInt(l1[1]))<SUB>7</SUB>>", "63": "<(IDENTIFIER,l1,Integer.parseInt(l1[1]))<SUB>7</SUB>>", "65": "<(LOCAL,String[] ar: java.lang.String[])<SUB>8</SUB>>", "67": "<(IDENTIFIER,ar,String[] ar = split(&quot; &quot;))<SUB>8</SUB>>", "69": "<(readLine,readLine())<SUB>8</SUB>>", "71": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int a1 = Integer.parseInt(ar[0]))<SUB>9</SUB>>", "75": "<(parseInt,Integer.parseInt(ar[0]))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,ar[0])<SUB>9</SUB>>", "79": "<(LITERAL,0,Integer.parseInt(ar[0]))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int b1 = Integer.parseInt(ar[1]))<SUB>10</SUB>>", "83": "<(parseInt,Integer.parseInt(ar[1]))<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,ar[1])<SUB>10</SUB>>", "87": "<(LITERAL,1,Integer.parseInt(ar[1]))<SUB>10</SUB>>", "89": "<(LOCAL,int i: int)<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "99": "<(add,add(Integer.parseInt(ar[i])))<SUB>12</SUB>>", "101": "<(IDENTIFIER,ma,add(Integer.parseInt(ar[i])))<SUB>12</SUB>>", "103": "<(parseInt,Integer.parseInt(ar[i]))<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,ar[i])<SUB>12</SUB>>", "107": "<(IDENTIFIER,i,Integer.parseInt(ar[i]))<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.assignment,int m = findmax())<SUB>14</SUB>>", "111": "<(findmax,findmax())<SUB>14</SUB>>", "113": "<(IDENTIFIER,ma,findmax())<SUB>14</SUB>>", "115": "<(LOCAL,int[][] pair: int[][])<SUB>15</SUB>>", "117": "<(IDENTIFIER,pair,int[][] pair = new int[n][2])<SUB>15</SUB>>", "119": "<(IDENTIFIER,n,new int[n][2])<SUB>15</SUB>>", "121": "<(LOCAL,int t: int)<SUB>16</SUB>>", "123": "<(IDENTIFIER,t,int t = 0)<SUB>16</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "129": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "131": "<(IDENTIFIER,i,i &lt; n)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.equals,ma.l.start.data == m)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,ma.l.start)<SUB>18</SUB>>", "141": "<(IDENTIFIER,ma,ma.l.start.data == m)<SUB>18</SUB>>", "143": "<(FIELD_IDENTIFIER,start,start)<SUB>18</SUB>>", "145": "<(IDENTIFIER,m,ma.l.start.data == m)<SUB>18</SUB>>", "147": "<(myfunc,myfunc())<SUB>20</SUB>>", "149": "<(IDENTIFIER,ma,myfunc())<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.assignment,pair[t][0] = ma.l.start.data)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,pair[t])<SUB>21</SUB>>", "155": "<(IDENTIFIER,t,pair[t][0] = ma.l.start.data)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,ma.l.start.data)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.fieldAccess,ma.l)<SUB>21</SUB>>", "161": "<(FIELD_IDENTIFIER,l,l)<SUB>21</SUB>>", "163": "<(FIELD_IDENTIFIER,data,data)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,pair[t][1])<SUB>22</SUB>>", "167": "<(IDENTIFIER,pair,pair[t][1] = ma.l.start.next.data)<SUB>22</SUB>>", "169": "<(LITERAL,1,pair[t][1] = ma.l.start.next.data)<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.fieldAccess,ma.l.start.next)<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,ma.l)<SUB>22</SUB>>", "175": "<(FIELD_IDENTIFIER,l,l)<SUB>22</SUB>>", "177": "<(FIELD_IDENTIFIER,next,next)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,t++)<SUB>23</SUB>>", "181": "<(LOCAL,int[] rl: int[])<SUB>25</SUB>>", "183": "<(IDENTIFIER,rl,int[] rl = new int[n])<SUB>25</SUB>>", "185": "<(IDENTIFIER,n,new int[n])<SUB>25</SUB>>", "187": "<(&lt;operator&gt;.assignment,ANY temp = ma.l.start)<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.fieldAccess,ma.l.start)<SUB>26</SUB>>", "191": "<(IDENTIFIER,ma,ANY temp = ma.l.start)<SUB>26</SUB>>", "193": "<(FIELD_IDENTIFIER,start,start)<SUB>26</SUB>>", "195": "<(LOCAL,int i: int)<SUB>27</SUB>>", "197": "<(IDENTIFIER,i,int i = 0)<SUB>27</SUB>>", "199": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>27</SUB>>", "201": "<(IDENTIFIER,n,i &lt; n)<SUB>27</SUB>>", "203": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.assignment,rl[i] = temp.data)<SUB>28</SUB>>", "207": "<(IDENTIFIER,rl,rl[i] = temp.data)<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.fieldAccess,temp.data)<SUB>28</SUB>>", "211": "<(FIELD_IDENTIFIER,data,data)<SUB>28</SUB>>", "213": "<(IDENTIFIER,temp,temp = temp.next)<SUB>29</SUB>>", "215": "<(IDENTIFIER,temp,temp = temp.next)<SUB>29</SUB>>", "217": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; q); i++),for (int i = 0; Some(i &lt; q); i++))<SUB>31</SUB>>", "219": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>31</SUB>>", "221": "<(LITERAL,0,int i = 0)<SUB>31</SUB>>", "223": "<(IDENTIFIER,i,i &lt; q)<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "229": "<(&lt;operator&gt;.assignment,long a = parseLong(in.readLine()))<SUB>32</SUB>>", "231": "<(parseLong,parseLong(in.readLine()))<SUB>32</SUB>>", "233": "<(readLine,readLine())<SUB>32</SUB>>", "235": "<(CONTROL_STRUCTURE,if (a == 1),if (a == 1))<SUB>33</SUB>>", "237": "<(IDENTIFIER,a,a == 1)<SUB>33</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>34</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.addition,a1 + &quot; &quot;)<SUB>34</SUB>>", "247": "<(LITERAL,&quot; &quot;,a1 + &quot; &quot;)<SUB>34</SUB>>", "249": "<(CONTROL_STRUCTURE,else,else)<SUB>36</SUB>>", "251": "<(CONTROL_STRUCTURE,if (a &lt;= t + 1),if (a &lt;= t + 1))<SUB>37</SUB>>", "253": "<(IDENTIFIER,a,a &lt;= t + 1)<SUB>37</SUB>>", "255": "<(IDENTIFIER,t,t + 1)<SUB>37</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "259": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>38</SUB>>", "261": "<(FIELD_IDENTIFIER,out,out)<SUB>38</SUB>>", "263": "<(&lt;operator&gt;.addition,pair[(int) (a - 2)][0] + &quot; &quot;)<SUB>38</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,pair[(int) (a - 2)])<SUB>38</SUB>>", "267": "<(&lt;operator&gt;.cast,(int) (a - 2))<SUB>38</SUB>>", "269": "<(&lt;operator&gt;.subtraction,a - 2)<SUB>38</SUB>>", "271": "<(LITERAL,2,a - 2)<SUB>38</SUB>>", "273": "<(LITERAL,&quot; &quot;,pair[(int) (a - 2)][0] + &quot; &quot;)<SUB>38</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,pair[(int) (a - 2)])<SUB>38</SUB>>", "277": "<(&lt;operator&gt;.cast,(int) (a - 2))<SUB>38</SUB>>", "279": "<(&lt;operator&gt;.subtraction,a - 2)<SUB>38</SUB>>", "281": "<(LITERAL,2,a - 2)<SUB>38</SUB>>", "283": "<(CONTROL_STRUCTURE,else,else)<SUB>40</SUB>>", "285": "<(CONTROL_STRUCTURE,if ((a - t) % (n - 1) == 0),if ((a - t) % (n - 1) == 0))<SUB>41</SUB>>", "287": "<(&lt;operator&gt;.modulo,(a - t) % (n - 1))<SUB>41</SUB>>", "289": "<(IDENTIFIER,a,a - t)<SUB>41</SUB>>", "291": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>41</SUB>>", "293": "<(LITERAL,1,n - 1)<SUB>41</SUB>>", "295": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "297": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>42</SUB>>", "299": "<(FIELD_IDENTIFIER,out,out)<SUB>42</SUB>>", "301": "<(&lt;operator&gt;.addition,rl[0] + &quot; &quot;)<SUB>42</SUB>>", "303": "<(IDENTIFIER,rl,rl[0] + &quot; &quot;)<SUB>42</SUB>>", "305": "<(LITERAL,&quot; &quot;,rl[0] + &quot; &quot;)<SUB>42</SUB>>", "307": "<(IDENTIFIER,rl,rl[0] + &quot; &quot; + rl[n - 1])<SUB>42</SUB>>", "309": "<(IDENTIFIER,n,n - 1)<SUB>42</SUB>>", "311": "<(CONTROL_STRUCTURE,else,else)<SUB>44</SUB>>", "313": "<(println,System.out.println(rl[0] + &quot; &quot; + rl[(int) ((a - t) % (n - 1))]))<SUB>45</SUB>>", "315": "<(IDENTIFIER,System,System.out.println(rl[0] + &quot; &quot; + rl[(int) ((a - t) % (n - 1))]))<SUB>45</SUB>>", "317": "<(&lt;operator&gt;.addition,rl[0] + &quot; &quot; + rl[(int) ((a - t) % (n - 1))])<SUB>45</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,rl[0])<SUB>45</SUB>>", "321": "<(LITERAL,0,rl[0] + &quot; &quot;)<SUB>45</SUB>>", "323": "<(&lt;operator&gt;.indexAccess,rl[(int) ((a - t) % (n - 1))])<SUB>45</SUB>>", "325": "<(&lt;operator&gt;.cast,(int) ((a - t) % (n - 1)))<SUB>45</SUB>>", "327": "<(&lt;operator&gt;.modulo,(a - t) % (n - 1))<SUB>45</SUB>>", "329": "<(IDENTIFIER,a,a - t)<SUB>45</SUB>>", "331": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>45</SUB>>", "333": "<(LITERAL,1,n - 1)<SUB>45</SUB>>", "335": "<(MODIFIER,STATIC)>"}}