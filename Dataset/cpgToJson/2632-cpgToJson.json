{"edges": [["19", "20"], ["19", "21"], ["19", "126"], ["19", "127"], ["19", "128"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "55"], ["21", "58"], ["21", "59"], ["21", "62"], ["21", "63"], ["21", "67"], ["21", "121"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "90"], ["84", "92"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "99"], ["92", "102"], ["92", "104"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "115"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["115", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["55", "59"], ["59", "65"], ["63", "69"], ["121", "128"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "50"], ["44", "55"], ["47", "44"], ["49", "47"], ["65", "63"], ["69", "72"], ["72", "80"], ["72", "124"], ["75", "72"], ["122", "121"], ["28", "26"], ["50", "53"], ["53", "49"], ["124", "122"], ["79", "86"], ["79", "75"], ["80", "79"], ["85", "90"], ["90", "96"], ["86", "85"], ["94", "99"], ["99", "108"], ["99", "75"], ["102", "99"], ["96", "94"], ["106", "117"], ["106", "102"], ["107", "106"], ["116", "102"], ["108", "111"], ["111", "107"], ["117", "116"], ["19", "24"], ["20", "128"], ["22", "128"], ["25", "128"], ["25", "128"], ["32", "128"], ["30", "128"], ["30", "128"], ["35", "128"], ["35", "128"], ["55", "128"], ["55", "128"], ["59", "128"], ["63", "128"], ["63", "128"], ["63", "128"], ["69", "128"], ["72", "128"], ["72", "128"], ["72", "128"], ["121", "128"], ["121", "128"], ["121", "128"], ["79", "128"], ["79", "128"], ["85", "128"], ["85", "128"], ["90", "128"], ["94", "128"], ["94", "128"], ["99", "128"], ["99", "128"], ["75", "128"], ["107", "128"], ["107", "128"], ["106", "128"], ["106", "128"], ["116", "128"], ["116", "128"], ["102", "128"], ["49", "128"], ["53", "128"], ["49", "128"], ["49", "128"], ["47", "128"], ["55", "128"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "59"], ["65", "63"], ["22", "25"], ["19", "25"], ["19", "41"], ["53", "49"], ["19", "55"], ["35", "55"], ["49", "55"], ["19", "69"], ["59", "121"], ["90", "121"], ["19", "121"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["44", "65"], ["19", "65"], ["69", "72"], ["75", "72"], ["19", "72"], ["65", "72"], ["99", "72"], ["72", "75"], ["19", "75"], ["32", "53"], ["19", "53"], ["63", "79"], ["85", "79"], ["19", "79"], ["19", "85"], ["59", "90"], ["19", "90"], ["72", "94"], ["19", "94"], ["94", "99"], ["102", "99"], ["19", "99"], ["72", "99"], ["99", "102"], ["19", "102"], ["72", "96"], ["19", "96"], ["107", "106"], ["107", "106"], ["19", "106"], ["19", "116"], ["55", "107"], ["49", "107"], ["44", "47"], ["44", "49"], ["44", "50"], ["44", "44"], ["44", "53"], ["72", "75"], ["72", "72"], ["72", "79"], ["72", "80"], ["79", "94"], ["79", "96"], ["79", "99"], ["79", "85"], ["79", "90"], ["79", "86"], ["99", "107"], ["99", "99"], ["99", "102"], ["99", "106"], ["99", "108"], ["99", "111"], ["106", "116"], ["106", "117"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>5</SUB>>", "51": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>5</SUB>>", "53": "<(nextInt,nextInt())<SUB>5</SUB>>", "55": "<(sort,sort(a))<SUB>6</SUB>>", "57": "<(IDENTIFIER,a,sort(a))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>7</SUB>>", "61": "<(LITERAL,0,int count = 0)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,boolean[] c = new boolean[n])<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.alloc,new boolean[n])>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.equals,c[i] == false)<SUB>10</SUB>>", "81": "<(IDENTIFIER,c,c[i] == false)<SUB>10</SUB>>", "83": "<(LITERAL,false,c[i] == false)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,c[i] = true)<SUB>11</SUB>>", "87": "<(IDENTIFIER,c,c[i] = true)<SUB>11</SUB>>", "89": "<(LITERAL,true,c[i] = true)<SUB>11</SUB>>", "91": "<(IDENTIFIER,count,count++)<SUB>12</SUB>>", "93": "<(LOCAL,int j: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,j,int j = i + 1)<SUB>13</SUB>>", "97": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>13</SUB>>", "101": "<(IDENTIFIER,n,j &lt; n)<SUB>13</SUB>>", "103": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,if (a[j] % a[i] == 0),if (a[j] % a[i] == 0))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.modulo,a[j] % a[i])<SUB>14</SUB>>", "109": "<(IDENTIFIER,a,a[j] % a[i])<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "113": "<(IDENTIFIER,i,a[j] % a[i])<SUB>14</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,c[j])<SUB>15</SUB>>", "119": "<(IDENTIFIER,j,c[j] = true)<SUB>15</SUB>>", "121": "<(println,System.out.println(count))<SUB>20</SUB>>", "123": "<(IDENTIFIER,System,System.out.println(count))<SUB>20</SUB>>", "125": "<(IDENTIFIER,count,System.out.println(count))<SUB>20</SUB>>", "127": "<(MODIFIER,STATIC)>"}}