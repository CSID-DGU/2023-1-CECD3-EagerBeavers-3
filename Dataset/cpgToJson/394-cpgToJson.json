{"edges": [["19", "21"], ["19", "247"], ["19", "248"], ["19", "249"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "31"], ["21", "35"], ["21", "38"], ["21", "40"], ["21", "41"], ["21", "45"], ["21", "67"], ["21", "70"], ["21", "72"], ["21", "75"], ["21", "77"], ["21", "80"], ["21", "81"], ["21", "85"], ["21", "164"], ["21", "165"], ["21", "169"], ["21", "193"], ["23", "24"], ["23", "25"], ["25", "26"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "62"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "88"], ["86", "87"], ["88", "89"], ["88", "90"], ["88", "94"], ["88", "95"], ["88", "98"], ["88", "99"], ["88", "102"], ["88", "112"], ["88", "122"], ["88", "132"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["132", "138"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "144"], ["139", "148"], ["140", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["149", "150"], ["149", "151"], ["149", "156"], ["151", "152"], ["152", "153"], ["152", "154"], ["152", "155"], ["156", "157"], ["157", "158"], ["157", "159"], ["159", "160"], ["160", "161"], ["160", "162"], ["160", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["169", "170"], ["169", "172"], ["170", "171"], ["172", "173"], ["172", "174"], ["172", "178"], ["174", "175"], ["174", "176"], ["176", "177"], ["178", "179"], ["178", "186"], ["178", "188"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["189", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "196"], ["193", "240"], ["194", "195"], ["196", "197"], ["196", "4"], ["196", "202"], ["196", "205"], ["196", "206"], ["196", "235"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "204"], ["205", "3"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "214"], ["206", "216"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["216", "217"], ["216", "232"], ["217", "218"], ["217", "223"], ["217", "227"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["228", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["241", "242"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["23", "29"], ["27", "33"], ["31", "37"], ["35", "38"], ["38", "43"], ["41", "47"], ["67", "70"], ["70", "74"], ["72", "75"], ["75", "77"], ["77", "83"], ["81", "86"], ["165", "170"], ["25", "23"], ["29", "27"], ["33", "31"], ["37", "35"], ["43", "41"], ["47", "50"], ["50", "57"], ["50", "69"], ["53", "50"], ["69", "67"], ["74", "72"], ["83", "81"], ["86", "92"], ["86", "167"], ["167", "165"], ["170", "176"], ["170", "194"], ["194", "200"], ["194", "245"], ["56", "64"], ["62", "53"], ["90", "95"], ["95", "99"], ["99", "104"], ["174", "180"], ["197", "204"], ["202", "205"], ["205", "208"], ["235", "249"], ["57", "60"], ["60", "56"], ["64", "62"], ["92", "90"], ["103", "86"], ["103", "115"], ["113", "119"], ["113", "125"], ["123", "129"], ["123", "133"], ["133", "86"], ["133", "141"], ["176", "174"], ["179", "170"], ["179", "190"], ["198", "197"], ["204", "202"], ["208", "211"], ["211", "220"], ["211", "238"], ["214", "211"], ["236", "235"], ["242", "249"], ["104", "103"], ["104", "107"], ["107", "103"], ["115", "113"], ["119", "125"], ["125", "123"], ["129", "133"], ["180", "179"], ["180", "183"], ["183", "179"], ["200", "198"], ["232", "214"], ["238", "236"], ["243", "242"], ["140", "150"], ["140", "145"], ["190", "170"], ["218", "224"], ["218", "229"], ["245", "243"], ["141", "140"], ["145", "86"], ["220", "218"], ["224", "232"], ["150", "158"], ["150", "152"], ["229", "232"], ["152", "86"], ["158", "86"], ["158", "160"], ["160", "86"], ["19", "25"], ["20", "249"], ["23", "249"], ["27", "249"], ["27", "249"], ["31", "249"], ["33", "249"], ["31", "249"], ["31", "249"], ["35", "249"], ["38", "249"], ["41", "249"], ["41", "249"], ["41", "249"], ["67", "249"], ["70", "249"], ["72", "249"], ["75", "249"], ["75", "249"], ["77", "249"], ["86", "249"], ["167", "249"], ["165", "249"], ["170", "249"], ["170", "249"], ["194", "249"], ["194", "249"], ["202", "249"], ["205", "249"], ["208", "249"], ["211", "249"], ["211", "249"], ["211", "249"], ["235", "249"], ["235", "249"], ["235", "249"], ["218", "249"], ["218", "249"], ["218", "249"], ["229", "249"], ["224", "249"], ["232", "249"], ["214", "249"], ["180", "249"], ["180", "249"], ["179", "249"], ["183", "249"], ["183", "249"], ["179", "249"], ["190", "249"], ["190", "249"], ["190", "249"], ["95", "249"], ["95", "249"], ["99", "249"], ["99", "249"], ["104", "249"], ["104", "249"], ["103", "249"], ["107", "249"], ["107", "249"], ["103", "249"], ["115", "249"], ["113", "249"], ["113", "249"], ["119", "249"], ["125", "249"], ["125", "249"], ["123", "249"], ["123", "249"], ["129", "249"], ["133", "249"], ["133", "249"], ["133", "249"], ["141", "249"], ["141", "249"], ["140", "249"], ["140", "249"], ["160", "249"], ["160", "249"], ["160", "249"], ["152", "249"], ["152", "249"], ["152", "249"], ["145", "249"], ["60", "249"], ["56", "249"], ["56", "249"], ["62", "249"], ["62", "249"], ["53", "249"], ["19", "20"], ["25", "23"], ["29", "27"], ["33", "31"], ["19", "35"], ["43", "41"], ["19", "67"], ["19", "72"], ["19", "77"], ["83", "81"], ["167", "165"], ["35", "38"], ["19", "38"], ["19", "47"], ["67", "70"], ["19", "70"], ["72", "75"], ["19", "75"], ["19", "25"], ["25", "29"], ["19", "29"], ["29", "33"], ["19", "33"], ["23", "43"], ["19", "43"], ["47", "50"], ["53", "50"], ["19", "50"], ["43", "50"], ["50", "53"], ["19", "53"], ["60", "56"], ["38", "83"], ["62", "83"], ["19", "83"], ["81", "86"], ["92", "86"], ["19", "86"], ["92", "90"], ["19", "95"], ["19", "99"], ["83", "167"], ["123", "167"], ["19", "167"], ["165", "170"], ["176", "170"], ["19", "170"], ["176", "174"], ["77", "194"], ["145", "194"], ["19", "194"], ["19", "202"], ["38", "62"], ["19", "62"], ["41", "62"], ["56", "62"], ["19", "197"], ["202", "205"], ["19", "205"], ["19", "208"], ["197", "235"], ["205", "235"], ["232", "235"], ["19", "235"], ["33", "60"], ["19", "60"], ["86", "92"], ["19", "92"], ["104", "103"], ["104", "103"], ["107", "103"], ["107", "103"], ["83", "113"], ["123", "113"], ["19", "113"], ["115", "113"], ["115", "113"], ["19", "119"], ["113", "123"], ["19", "123"], ["125", "123"], ["125", "123"], ["19", "129"], ["95", "133"], ["119", "133"], ["19", "133"], ["99", "133"], ["129", "133"], ["170", "176"], ["19", "176"], ["180", "179"], ["180", "179"], ["183", "179"], ["183", "179"], ["208", "211"], ["214", "211"], ["19", "211"], ["50", "211"], ["211", "214"], ["19", "214"], ["19", "242"], ["70", "104"], ["19", "104"], ["90", "104"], ["75", "107"], ["19", "107"], ["104", "107"], ["27", "115"], ["19", "115"], ["104", "115"], ["107", "115"], ["31", "125"], ["19", "125"], ["115", "125"], ["70", "180"], ["190", "180"], ["104", "180"], ["19", "180"], ["174", "180"], ["75", "183"], ["107", "183"], ["19", "183"], ["180", "183"], ["229", "232"], ["224", "232"], ["19", "232"], ["141", "140"], ["141", "140"], ["19", "145"], ["180", "190"], ["19", "190"], ["180", "190"], ["183", "190"], ["70", "218"], ["180", "218"], ["190", "218"], ["104", "218"], ["19", "218"], ["41", "218"], ["62", "218"], ["133", "141"], ["19", "141"], ["133", "141"], ["19", "150"], ["205", "224"], ["232", "224"], ["19", "224"], ["205", "229"], ["232", "229"], ["19", "229"], ["33", "152"], ["160", "152"], ["60", "152"], ["19", "152"], ["125", "152"], ["19", "158"], ["33", "160"], ["152", "160"], ["60", "160"], ["19", "160"], ["125", "160"], ["50", "60"], ["50", "64"], ["50", "57"], ["50", "56"], ["50", "50"], ["50", "53"], ["50", "62"], ["86", "103"], ["86", "104"], ["86", "95"], ["86", "92"], ["86", "90"], ["86", "86"], ["86", "99"], ["170", "179"], ["170", "170"], ["170", "174"], ["170", "180"], ["170", "176"], ["194", "197"], ["194", "198"], ["194", "243"], ["194", "245"], ["194", "204"], ["194", "208"], ["194", "242"], ["194", "238"], ["194", "202"], ["194", "205"], ["194", "235"], ["194", "236"], ["194", "200"], ["194", "211"], ["103", "115"], ["103", "113"], ["103", "123"], ["103", "125"], ["103", "133"], ["113", "119"], ["123", "129"], ["133", "141"], ["133", "140"], ["179", "190"], ["211", "214"], ["211", "232"], ["211", "220"], ["211", "211"], ["211", "218"], ["104", "107"], ["180", "183"], ["140", "145"], ["140", "150"], ["218", "224"], ["218", "229"], ["150", "152"], ["150", "158"], ["158", "160"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int n = readInt())<SUB>2</SUB>>", "25": "<(readInt,readInt())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,a = readInt())<SUB>3</SUB>>", "29": "<(readInt,readInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,b = readInt())<SUB>4</SUB>>", "33": "<(readInt,readInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,ts = new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "39": "<(IDENTIFIER,ts,new TreeSet&lt;Integer&gt;())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] table = new int[n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,table[i])<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,table[i] = readInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,this,readInt())<SUB>8</SUB>>", "63": "<(IDENTIFIER,ts,add(table[i]))<SUB>9</SUB>>", "65": "<(IDENTIFIER,table,add(table[i]))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,A = new HashSet&lt;Integer&gt;())<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>11</SUB>>", "71": "<(IDENTIFIER,A,new HashSet&lt;Integer&gt;())<SUB>11</SUB>>", "73": "<(IDENTIFIER,B,B = new HashSet&lt;Integer&gt;())<SUB>12</SUB>>", "75": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;())<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,noAns = false)<SUB>13</SUB>>", "79": "<(LITERAL,false,noAns = false)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.assignment,)<SUB>14</SUB>>", "83": "<(iterator,&lt;empty&gt;)<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>14</SUB>>", "87": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "89": "<(LOCAL,cur: java.lang.Integer)<SUB>14</SUB>>", "91": "<(IDENTIFIER,cur,&lt;empty&gt;)>", "93": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "95": "<(&lt;operator&gt;.assignment,boolean fitsA = false)<SUB>15</SUB>>", "97": "<(LITERAL,false,boolean fitsA = false)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.assignment,boolean fitsB = false)<SUB>16</SUB>>", "101": "<(LITERAL,false,boolean fitsB = false)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.logicalOr,A.contains(cur) || B.contains(cur))<SUB>17</SUB>>", "105": "<(IDENTIFIER,A,contains(cur))<SUB>17</SUB>>", "107": "<(contains,contains(cur))<SUB>17</SUB>>", "109": "<(IDENTIFIER,cur,contains(cur))<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>18</SUB>>", "113": "<(contains,contains(a - cur))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.subtraction,a - cur)<SUB>20</SUB>>", "117": "<(IDENTIFIER,cur,a - cur)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,fitsA = true)<SUB>21</SUB>>", "121": "<(LITERAL,true,fitsA = true)<SUB>21</SUB>>", "123": "<(contains,contains(b - cur))<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.subtraction,b - cur)<SUB>23</SUB>>", "127": "<(IDENTIFIER,cur,b - cur)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.assignment,fitsB = true)<SUB>24</SUB>>", "131": "<(LITERAL,true,fitsB = true)<SUB>24</SUB>>", "133": "<(&lt;operator&gt;.logicalAnd,fitsA &amp;&amp; fitsB)<SUB>26</SUB>>", "135": "<(IDENTIFIER,fitsB,fitsA &amp;&amp; fitsB)<SUB>26</SUB>>", "137": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "139": "<(CONTROL_STRUCTURE,if (!(fitsA || fitsB)),if (!(fitsA || fitsB)))<SUB>29</SUB>>", "141": "<(&lt;operator&gt;.logicalOr,fitsA || fitsB)<SUB>29</SUB>>", "143": "<(IDENTIFIER,fitsB,fitsA || fitsB)<SUB>29</SUB>>", "145": "<(&lt;operator&gt;.assignment,noAns = true)<SUB>30</SUB>>", "147": "<(LITERAL,true,noAns = true)<SUB>30</SUB>>", "149": "<(CONTROL_STRUCTURE,if (fitsA),if (fitsA))<SUB>32</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "153": "<(IDENTIFIER,this,tour(cur, false))<SUB>33</SUB>>", "155": "<(LITERAL,false,tour(cur, false))<SUB>33</SUB>>", "157": "<(CONTROL_STRUCTURE,if (fitsB),if (fitsB))<SUB>35</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "161": "<(IDENTIFIER,this,tour(cur, true))<SUB>36</SUB>>", "163": "<(LITERAL,true,tour(cur, true))<SUB>36</SUB>>", "165": "<(&lt;operator&gt;.assignment,)<SUB>39</SUB>>", "167": "<(iterator,&lt;empty&gt;)<SUB>39</SUB>>", "169": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>39</SUB>>", "171": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "173": "<(LOCAL,cur: java.lang.Integer)<SUB>39</SUB>>", "175": "<(IDENTIFIER,cur,&lt;empty&gt;)>", "177": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "179": "<(&lt;operator&gt;.logicalOr,A.contains(cur) || B.contains(cur))<SUB>40</SUB>>", "181": "<(IDENTIFIER,A,contains(cur))<SUB>40</SUB>>", "183": "<(contains,contains(cur))<SUB>40</SUB>>", "185": "<(IDENTIFIER,cur,contains(cur))<SUB>40</SUB>>", "187": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>41</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "191": "<(IDENTIFIER,A,add(cur))<SUB>44</SUB>>", "193": "<(CONTROL_STRUCTURE,if (!noAns),if (!noAns))<SUB>47</SUB>>", "195": "<(IDENTIFIER,noAns,!noAns)<SUB>47</SUB>>", "197": "<(println,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "199": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "201": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "202": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>49</SUB>>", "204": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>49</SUB>>", "3": "<(IDENTIFIER,sb,new StringBuilder())<SUB>49</SUB>>", "207": "<(LOCAL,int i: int)<SUB>50</SUB>>", "209": "<(IDENTIFIER,i,int i = 0)<SUB>50</SUB>>", "211": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>50</SUB>>", "213": "<(IDENTIFIER,n,i &lt; n)<SUB>50</SUB>>", "215": "<(IDENTIFIER,i,i++)<SUB>50</SUB>>", "217": "<(CONTROL_STRUCTURE,if (A.contains(table[i])),if (A.contains(table[i])))<SUB>51</SUB>>", "219": "<(IDENTIFIER,A,contains(table[i]))<SUB>51</SUB>>", "221": "<(IDENTIFIER,table,contains(table[i]))<SUB>51</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "225": "<(IDENTIFIER,sb,sb.append(&quot;0&quot;))<SUB>52</SUB>>", "227": "<(CONTROL_STRUCTURE,else,else)<SUB>54</SUB>>", "229": "<(append,sb.append(&quot;1&quot;))<SUB>55</SUB>>", "231": "<(LITERAL,&quot;1&quot;,sb.append(&quot;1&quot;))<SUB>55</SUB>>", "233": "<(IDENTIFIER,sb,sb.append(&quot; &quot;))<SUB>57</SUB>>", "235": "<(println,System.out.println(sb))<SUB>59</SUB>>", "237": "<(IDENTIFIER,System,System.out.println(sb))<SUB>59</SUB>>", "239": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>59</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>>", "243": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>62</SUB>>", "245": "<(FIELD_IDENTIFIER,out,out)<SUB>62</SUB>>", "247": "<(MODIFIER,PUBLIC)>", "249": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}