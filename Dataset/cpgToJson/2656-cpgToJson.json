{"edges": [["19", "21"], ["19", "143"], ["19", "144"], ["19", "145"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "40"], ["21", "41"], ["21", "45"], ["21", "61"], ["21", "64"], ["21", "138"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["75", "76"], ["75", "80"], ["76", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "87"], ["80", "131"], ["80", "133"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "103"], ["99", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "112"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["106", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "118"], ["112", "124"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["125", "126"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "37"], ["37", "43"], ["41", "47"], ["61", "66"], ["138", "145"], ["24", "22"], ["29", "27"], ["34", "32"], ["43", "41"], ["47", "50"], ["50", "56"], ["50", "61"], ["53", "50"], ["55", "53"], ["66", "69"], ["69", "77"], ["69", "141"], ["72", "69"], ["139", "138"], ["56", "59"], ["59", "55"], ["141", "139"], ["76", "84"], ["76", "72"], ["77", "76"], ["82", "89"], ["131", "134"], ["133", "72"], ["84", "82"], ["89", "92"], ["92", "100"], ["92", "131"], ["95", "92"], ["134", "133"], ["99", "108"], ["99", "95"], ["100", "99"], ["104", "115"], ["106", "104"], ["113", "120"], ["113", "128"], ["108", "106"], ["115", "113"], ["119", "95"], ["120", "119"], ["126", "95"], ["128", "126"], ["19", "24"], ["20", "145"], ["22", "145"], ["25", "145"], ["29", "145"], ["27", "145"], ["27", "145"], ["32", "145"], ["32", "145"], ["32", "145"], ["37", "145"], ["41", "145"], ["41", "145"], ["61", "145"], ["61", "145"], ["66", "145"], ["69", "145"], ["69", "145"], ["69", "145"], ["138", "145"], ["138", "145"], ["138", "145"], ["76", "145"], ["76", "145"], ["82", "145"], ["82", "145"], ["82", "145"], ["89", "145"], ["92", "145"], ["92", "145"], ["131", "145"], ["133", "145"], ["133", "145"], ["72", "145"], ["99", "145"], ["99", "145"], ["106", "145"], ["104", "145"], ["104", "145"], ["113", "145"], ["113", "145"], ["113", "145"], ["126", "145"], ["126", "145"], ["126", "145"], ["119", "145"], ["119", "145"], ["95", "145"], ["55", "145"], ["59", "145"], ["55", "145"], ["55", "145"], ["53", "145"], ["106", "145"], ["61", "145"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["19", "37"], ["43", "41"], ["22", "25"], ["19", "25"], ["19", "47"], ["59", "55"], ["19", "61"], ["41", "61"], ["55", "61"], ["19", "66"], ["37", "138"], ["131", "138"], ["19", "138"], ["25", "29"], ["19", "29"], ["27", "34"], ["19", "34"], ["34", "43"], ["19", "43"], ["47", "50"], ["53", "50"], ["19", "50"], ["43", "50"], ["50", "53"], ["19", "53"], ["66", "69"], ["72", "69"], ["19", "69"], ["50", "69"], ["92", "69"], ["69", "72"], ["19", "72"], ["29", "59"], ["19", "59"], ["32", "76"], ["133", "76"], ["61", "82"], ["113", "82"], ["55", "82"], ["19", "133"], ["19", "89"], ["37", "131"], ["19", "131"], ["89", "92"], ["95", "92"], ["19", "92"], ["69", "92"], ["92", "95"], ["19", "95"], ["32", "99"], ["119", "99"], ["106", "104"], ["106", "104"], ["106", "104"], ["19", "106"], ["61", "106"], ["82", "106"], ["113", "106"], ["126", "106"], ["104", "113"], ["19", "113"], ["61", "113"], ["55", "113"], ["19", "119"], ["61", "126"], ["113", "126"], ["50", "56"], ["50", "50"], ["50", "59"], ["50", "53"], ["50", "55"], ["69", "77"], ["69", "72"], ["69", "69"], ["69", "76"], ["76", "89"], ["76", "84"], ["76", "131"], ["76", "92"], ["76", "134"], ["76", "82"], ["76", "133"], ["92", "99"], ["92", "95"], ["92", "92"], ["92", "100"], ["99", "115"], ["99", "113"], ["99", "104"], ["99", "106"], ["99", "108"], ["113", "120"], ["113", "128"], ["113", "119"], ["113", "126"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Reader())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Reader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Reader())<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "29": "<(nextInt,nextInt())<SUB>5</SUB>>", "31": "<(LOCAL,boolean[] A: boolean[])<SUB>6</SUB>>", "33": "<(IDENTIFIER,A,boolean[] A = new boolean[n])<SUB>6</SUB>>", "35": "<(IDENTIFIER,n,new boolean[n])<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>7</SUB>>", "39": "<(LITERAL,0,int count = 0)<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] B = new int[n])<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,B[i] = nextInt())<SUB>10</SUB>>", "57": "<(IDENTIFIER,B,B[i] = nextInt())<SUB>10</SUB>>", "59": "<(nextInt,nextInt())<SUB>10</SUB>>", "61": "<(sort,sort(B))<SUB>11</SUB>>", "63": "<(IDENTIFIER,B,sort(B))<SUB>11</SUB>>", "65": "<(LOCAL,int i: int)<SUB>12</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "75": "<(CONTROL_STRUCTURE,if (!A[i]),if (!A[i]))<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>14</SUB>>", "79": "<(IDENTIFIER,i,!A[i])<SUB>14</SUB>>", "81": "<(LOCAL,int gcd: int)<SUB>16</SUB>>", "83": "<(IDENTIFIER,gcd,int gcd = B[i])<SUB>16</SUB>>", "85": "<(IDENTIFIER,B,int gcd = B[i])<SUB>16</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "91": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "93": "<(IDENTIFIER,j,j &lt; n)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.logicalNot,!A[j])<SUB>19</SUB>>", "101": "<(IDENTIFIER,A,!A[j])<SUB>19</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "105": "<(IDENTIFIER,gcd,gcd = gcd(B[j], gcd))<SUB>21</SUB>>", "107": "<(IDENTIFIER,this,gcd(B[j], gcd))<SUB>21</SUB>>", "109": "<(IDENTIFIER,B,gcd(B[j], gcd))<SUB>21</SUB>>", "111": "<(IDENTIFIER,gcd,gcd(B[j], gcd))<SUB>21</SUB>>", "113": "<(&lt;operator&gt;.equals,gcd == B[i])<SUB>22</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,B[i])<SUB>22</SUB>>", "117": "<(IDENTIFIER,i,gcd == B[i])<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.assignment,A[j] = true)<SUB>24</SUB>>", "121": "<(IDENTIFIER,A,A[j] = true)<SUB>24</SUB>>", "123": "<(LITERAL,true,A[j] = true)<SUB>24</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "127": "<(IDENTIFIER,gcd,gcd = B[i])<SUB>28</SUB>>", "129": "<(IDENTIFIER,B,gcd = B[i])<SUB>28</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,count++)<SUB>32</SUB>>", "133": "<(&lt;operator&gt;.assignment,A[i] = true)<SUB>33</SUB>>", "135": "<(IDENTIFIER,A,A[i] = true)<SUB>33</SUB>>", "137": "<(LITERAL,true,A[i] = true)<SUB>33</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>36</SUB>>", "141": "<(FIELD_IDENTIFIER,out,out)<SUB>36</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}