{"edges": [["19", "21"], ["19", "203"], ["19", "204"], ["19", "205"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "106"], ["21", "107"], ["21", "114"], ["21", "115"], ["21", "119"], ["21", "120"], ["21", "124"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "61"], ["54", "62"], ["54", "65"], ["54", "85"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "83"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "89"], ["85", "100"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "136"], ["134", "142"], ["134", "143"], ["134", "149"], ["134", "150"], ["134", "155"], ["134", "156"], ["134", "173"], ["134", "186"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "141"], ["139", "140"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "148"], ["146", "147"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "166"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "185"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "192"], ["186", "197"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["107", "117"], ["115", "122"], ["120", "126"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "111"], ["52", "49"], ["109", "107"], ["117", "115"], ["122", "120"], ["126", "129"], ["129", "205"], ["129", "139"], ["132", "129"], ["28", "26"], ["55", "62"], ["62", "67"], ["111", "109"], ["136", "146"], ["143", "152"], ["150", "162"], ["156", "179"], ["173", "188"], ["56", "59"], ["59", "55"], ["67", "70"], ["70", "77"], ["70", "86"], ["73", "70"], ["86", "90"], ["86", "102"], ["89", "52"], ["138", "136"], ["145", "143"], ["152", "150"], ["158", "156"], ["175", "173"], ["187", "195"], ["187", "201"], ["192", "132"], ["76", "83"], ["76", "73"], ["83", "73"], ["90", "96"], ["93", "89"], ["101", "52"], ["139", "138"], ["146", "145"], ["159", "167"], ["166", "158"], ["176", "175"], ["188", "187"], ["193", "192"], ["198", "132"], ["77", "80"], ["80", "76"], ["94", "93"], ["102", "101"], ["160", "159"], ["167", "170"], ["170", "166"], ["178", "176"], ["195", "193"], ["199", "198"], ["96", "94"], ["162", "160"], ["179", "182"], ["182", "178"], ["201", "199"], ["19", "24"], ["20", "205"], ["22", "205"], ["25", "205"], ["25", "205"], ["30", "205"], ["35", "205"], ["35", "205"], ["40", "205"], ["40", "205"], ["40", "205"], ["49", "205"], ["107", "205"], ["107", "205"], ["107", "205"], ["117", "205"], ["115", "205"], ["115", "205"], ["120", "205"], ["122", "205"], ["120", "205"], ["120", "205"], ["126", "205"], ["129", "205"], ["129", "205"], ["129", "205"], ["132", "205"], ["52", "205"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["40", "107"], ["117", "115"], ["122", "120"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "126"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["86", "52"], ["96", "52"], ["19", "52"], ["59", "55"], ["19", "62"], ["32", "117"], ["59", "117"], ["19", "117"], ["111", "122"], ["19", "122"], ["126", "129"], ["132", "129"], ["19", "129"], ["115", "129"], ["129", "132"], ["19", "132"], ["138", "136"], ["138", "136"], ["145", "143"], ["145", "143"], ["152", "150"], ["152", "150"], ["158", "156"], ["158", "156"], ["176", "173"], ["176", "173"], ["156", "173"], ["19", "173"], ["19", "67"], ["40", "89"], ["62", "89"], ["83", "89"], ["19", "89"], ["49", "111"], ["19", "111"], ["32", "59"], ["19", "59"], ["67", "70"], ["73", "70"], ["19", "70"], ["49", "70"], ["70", "73"], ["19", "73"], ["70", "86"], ["19", "86"], ["62", "101"], ["83", "101"], ["19", "101"], ["139", "138"], ["19", "138"], ["146", "145"], ["19", "145"], ["143", "152"], ["19", "152"], ["136", "152"], ["159", "158"], ["159", "158"], ["166", "158"], ["166", "158"], ["176", "175"], ["176", "175"], ["156", "175"], ["19", "175"], ["188", "187"], ["188", "187"], ["19", "187"], ["198", "192"], ["19", "192"], ["35", "76"], ["55", "76"], ["62", "83"], ["19", "83"], ["40", "93"], ["62", "93"], ["83", "93"], ["19", "93"], ["117", "139"], ["146", "139"], ["19", "139"], ["139", "146"], ["19", "146"], ["160", "159"], ["160", "159"], ["19", "159"], ["40", "166"], ["178", "166"], ["178", "166"], ["107", "176"], ["188", "176"], ["19", "176"], ["178", "176"], ["178", "176"], ["173", "188"], ["19", "188"], ["192", "198"], ["19", "198"], ["19", "160"], ["150", "160"], ["40", "178"], ["166", "178"], ["166", "178"], ["86", "96"], ["19", "96"], ["150", "162"], ["19", "162"], ["49", "52"], ["49", "56"], ["49", "67"], ["49", "59"], ["49", "70"], ["49", "86"], ["49", "49"], ["49", "55"], ["49", "62"], ["129", "167"], ["129", "188"], ["129", "136"], ["129", "145"], ["129", "146"], ["129", "179"], ["129", "178"], ["129", "132"], ["129", "150"], ["129", "162"], ["129", "170"], ["129", "129"], ["129", "138"], ["129", "187"], ["129", "173"], ["129", "152"], ["129", "182"], ["129", "139"], ["129", "158"], ["129", "160"], ["129", "166"], ["129", "159"], ["129", "176"], ["129", "143"], ["129", "175"], ["129", "156"], ["70", "73"], ["70", "77"], ["70", "76"], ["70", "80"], ["70", "70"], ["86", "94"], ["86", "96"], ["86", "102"], ["86", "93"], ["86", "101"], ["86", "90"], ["86", "89"], ["187", "192"], ["187", "198"], ["187", "195"], ["187", "201"], ["187", "193"], ["187", "199"], ["76", "83"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int size: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,size,int size = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] vals = new int[size])<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[size])>", "39": "<(LOCAL,long[] cum: long[])<SUB>7</SUB>>", "41": "<(IDENTIFIER,cum,long[] cum = new long[size])<SUB>7</SUB>>", "43": "<(IDENTIFIER,size,new long[size])<SUB>7</SUB>>", "45": "<(LOCAL,int i: int)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; size)<SUB>8</SUB>>", "51": "<(IDENTIFIER,size,i &lt; size)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,vals[i] = nextInt())<SUB>9</SUB>>", "57": "<(IDENTIFIER,vals,vals[i] = nextInt())<SUB>9</SUB>>", "59": "<(nextInt,nextInt())<SUB>9</SUB>>", "61": "<(LOCAL,int c: int)<SUB>11</SUB>>", "63": "<(IDENTIFIER,c,int c = 0)<SUB>11</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,j,j &lt; i)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "75": "<(CONTROL_STRUCTURE,if (vals[j] &gt; vals[i]),if (vals[j] &gt; vals[i]))<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,vals[j])<SUB>13</SUB>>", "79": "<(IDENTIFIER,j,vals[j] &gt; vals[i])<SUB>13</SUB>>", "81": "<(IDENTIFIER,vals,vals[j] &gt; vals[i])<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,c++)<SUB>13</SUB>>", "85": "<(CONTROL_STRUCTURE,if (i != 0),if (i != 0))<SUB>15</SUB>>", "87": "<(IDENTIFIER,i,i != 0)<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.assignment,cum[i] = cum[i - 1] + c)<SUB>15</SUB>>", "91": "<(IDENTIFIER,cum,cum[i] = cum[i - 1] + c)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.addition,cum[i - 1] + c)<SUB>15</SUB>>", "95": "<(IDENTIFIER,cum,cum[i - 1] + c)<SUB>15</SUB>>", "97": "<(IDENTIFIER,i,i - 1)<SUB>15</SUB>>", "99": "<(IDENTIFIER,c,cum[i - 1] + c)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,cum[i] = c)<SUB>16</SUB>>", "103": "<(IDENTIFIER,cum,cum[i] = c)<SUB>16</SUB>>", "105": "<(IDENTIFIER,c,cum[i] = c)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,long tot = cum[size - 1])<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,cum[size - 1])<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.subtraction,size - 1)<SUB>19</SUB>>", "113": "<(LITERAL,1,size - 1)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.assignment,int q = nextInt())<SUB>20</SUB>>", "117": "<(nextInt,nextInt())<SUB>20</SUB>>", "119": "<(LOCAL,int[] nv: int[])<SUB>22</SUB>>", "121": "<(IDENTIFIER,nv,int[] nv = new int[size])<SUB>22</SUB>>", "123": "<(IDENTIFIER,size,new int[size])<SUB>22</SUB>>", "125": "<(LOCAL,int i: int)<SUB>23</SUB>>", "127": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>23</SUB>>", "131": "<(IDENTIFIER,q,i &lt; q)<SUB>23</SUB>>", "133": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "135": "<(LOCAL,int l: int)<SUB>25</SUB>>", "137": "<(IDENTIFIER,l,int l = in.nextInt() - 1)<SUB>25</SUB>>", "139": "<(nextInt,nextInt())<SUB>25</SUB>>", "141": "<(LITERAL,1,in.nextInt() - 1)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.assignment,int r = in.nextInt() - 1)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>26</SUB>>", "147": "<(IDENTIFIER,in,nextInt())<SUB>26</SUB>>", "149": "<(LOCAL,int n: int)<SUB>27</SUB>>", "151": "<(IDENTIFIER,n,int n = r - l)<SUB>27</SUB>>", "153": "<(IDENTIFIER,r,r - l)<SUB>27</SUB>>", "155": "<(LOCAL,long add: long)<SUB>29</SUB>>", "157": "<(IDENTIFIER,add,long add = (n * (n + 1)) / 2 - (cum[r] - cum[l]))<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.division,(n * (n + 1)) / 2)<SUB>29</SUB>>", "161": "<(IDENTIFIER,n,n * (n + 1))<SUB>29</SUB>>", "163": "<(IDENTIFIER,n,n + 1)<SUB>29</SUB>>", "165": "<(LITERAL,2,(n * (n + 1)) / 2)<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,cum[r])<SUB>29</SUB>>", "169": "<(IDENTIFIER,r,cum[r] - cum[l])<SUB>29</SUB>>", "171": "<(IDENTIFIER,cum,cum[r] - cum[l])<SUB>29</SUB>>", "173": "<(&lt;operator&gt;.assignment,tot = tot - (cum[r] - cum[l]) + add)<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.addition,tot - (cum[r] - cum[l]) + add)<SUB>30</SUB>>", "177": "<(IDENTIFIER,tot,tot - (cum[r] - cum[l]))<SUB>30</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,cum[r])<SUB>30</SUB>>", "181": "<(IDENTIFIER,r,cum[r] - cum[l])<SUB>30</SUB>>", "183": "<(IDENTIFIER,cum,cum[r] - cum[l])<SUB>30</SUB>>", "185": "<(IDENTIFIER,add,tot - (cum[r] - cum[l]) + add)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.equals,tot % 2 == 0)<SUB>32</SUB>>", "189": "<(IDENTIFIER,tot,tot % 2)<SUB>32</SUB>>", "191": "<(LITERAL,0,tot % 2 == 0)<SUB>32</SUB>>", "193": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "195": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "197": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "201": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "203": "<(MODIFIER,PUBLIC)>", "205": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}