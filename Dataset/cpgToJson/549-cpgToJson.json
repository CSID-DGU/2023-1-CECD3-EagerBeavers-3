{"edges": [["17", "18"], ["17", "19"], ["17", "88"], ["17", "89"], ["17", "90"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "86"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "43"], ["38", "46"], ["38", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "54"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "60"], ["54", "63"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["63", "64"], ["64", "65"], ["64", "75"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "40"], ["86", "90"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["40", "43"], ["43", "52"], ["43", "86"], ["46", "43"], ["32", "30"], ["50", "56"], ["52", "50"], ["55", "60"], ["55", "67"], ["60", "46"], ["56", "55"], ["75", "46"], ["66", "72"], ["66", "78"], ["77", "75"], ["67", "66"], ["72", "67"], ["78", "77"], ["78", "83"], ["81", "77"], ["83", "81"], ["17", "22"], ["18", "90"], ["20", "90"], ["23", "90"], ["25", "90"], ["28", "90"], ["28", "90"], ["36", "90"], ["34", "90"], ["34", "90"], ["40", "90"], ["43", "90"], ["43", "90"], ["43", "90"], ["86", "90"], ["86", "90"], ["52", "90"], ["50", "90"], ["50", "90"], ["56", "90"], ["55", "90"], ["55", "90"], ["66", "90"], ["66", "90"], ["75", "90"], ["78", "90"], ["77", "90"], ["83", "90"], ["81", "90"], ["77", "90"], ["75", "90"], ["75", "90"], ["72", "90"], ["60", "90"], ["46", "90"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "40"], ["28", "86"], ["60", "86"], ["17", "86"], ["23", "36"], ["17", "36"], ["40", "43"], ["46", "43"], ["17", "43"], ["34", "43"], ["43", "46"], ["17", "46"], ["52", "50"], ["36", "52"], ["17", "52"], ["56", "55"], ["56", "55"], ["17", "55"], ["28", "60"], ["17", "60"], ["50", "56"], ["17", "56"], ["78", "75"], ["81", "75"], ["17", "75"], ["77", "75"], ["77", "75"], ["67", "66"], ["67", "66"], ["17", "66"], ["17", "72"], ["78", "77"], ["78", "77"], ["81", "77"], ["81", "77"], ["56", "67"], ["72", "67"], ["17", "67"], ["67", "72"], ["75", "78"], ["17", "78"], ["67", "78"], ["78", "81"], ["17", "81"], ["83", "81"], ["83", "81"], ["17", "83"], ["78", "83"], ["43", "52"], ["43", "46"], ["43", "56"], ["43", "50"], ["43", "55"], ["43", "43"], ["55", "60"], ["55", "77"], ["55", "66"], ["55", "75"], ["55", "67"], ["55", "78"], ["66", "66"], ["66", "72"], ["66", "67"], ["78", "83"], ["78", "81"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(LOCAL,int t: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,int i: int)<SUB>6</SUB>>", "41": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.lessThan,i &lt; t)<SUB>6</SUB>>", "45": "<(IDENTIFIER,t,i &lt; t)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "49": "<(LOCAL,int n: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,int n = nextInt())<SUB>7</SUB>>", "53": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.equals,n % 2 == 1)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,n % 2)<SUB>8</SUB>>", "59": "<(LITERAL,1,n % 2 == 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>9</SUB>>", "63": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "65": "<(CONTROL_STRUCTURE,while (n % 2 == 0),while (n % 2 == 0))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.modulo,n % 2)<SUB>12</SUB>>", "69": "<(LITERAL,2,n % 2)<SUB>12</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "73": "<(IDENTIFIER,n,n /= 2)<SUB>13</SUB>>", "75": "<(verdict,verdict(isSquare(n) || isSquare(2 * n)))<SUB>15</SUB>>", "77": "<(&lt;operator&gt;.logicalOr,isSquare(n) || isSquare(2 * n))<SUB>15</SUB>>", "79": "<(IDENTIFIER,this,isSquare(n))<SUB>15</SUB>>", "81": "<(isSquare,isSquare(2 * n))<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.multiplication,2 * n)<SUB>15</SUB>>", "85": "<(IDENTIFIER,n,2 * n)<SUB>15</SUB>>", "87": "<(IDENTIFIER,out,close())<SUB>20</SUB>>", "89": "<(MODIFIER,STATIC)>"}}