{"edges": [["19", "20"], ["19", "21"], ["19", "154"], ["19", "155"], ["19", "156"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "58"], ["21", "59"], ["21", "60"], ["21", "61"], ["21", "64"], ["21", "67"], ["21", "70"], ["21", "111"], ["21", "112"], ["21", "126"], ["21", "129"], ["21", "132"], ["21", "133"], ["21", "146"], ["21", "149"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "75"], ["71", "72"], ["71", "74"], ["72", "73"], ["75", "76"], ["75", "77"], ["75", "84"], ["75", "85"], ["75", "100"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["100", "107"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "125"], ["115", "116"], ["115", "124"], ["116", "117"], ["116", "123"], ["117", "118"], ["117", "119"], ["117", "120"], ["120", "121"], ["120", "122"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "143"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "55"], ["51", "61"], ["61", "64"], ["64", "67"], ["67", "72"], ["112", "126"], ["126", "129"], ["129", "139"], ["133", "146"], ["146", "152"], ["149", "156"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "51"], ["71", "80"], ["71", "120"], ["114", "112"], ["135", "133"], ["150", "149"], ["28", "26"], ["55", "53"], ["72", "71"], ["77", "89"], ["85", "101"], ["115", "114"], ["136", "143"], ["143", "135"], ["152", "150"], ["79", "77"], ["87", "85"], ["101", "104"], ["101", "108"], ["104", "72"], ["116", "115"], ["137", "136"], ["80", "79"], ["88", "94"], ["93", "87"], ["108", "72"], ["117", "116"], ["139", "137"], ["89", "88"], ["94", "97"], ["97", "93"], ["120", "117"], ["19", "24"], ["20", "156"], ["22", "156"], ["25", "156"], ["25", "156"], ["30", "156"], ["35", "156"], ["42", "156"], ["40", "156"], ["40", "156"], ["45", "156"], ["45", "156"], ["51", "156"], ["53", "156"], ["53", "156"], ["51", "156"], ["51", "156"], ["61", "156"], ["61", "156"], ["64", "156"], ["64", "156"], ["67", "156"], ["72", "156"], ["71", "156"], ["71", "156"], ["117", "156"], ["116", "156"], ["115", "156"], ["114", "156"], ["112", "156"], ["112", "156"], ["126", "156"], ["137", "156"], ["139", "156"], ["139", "156"], ["137", "156"], ["136", "156"], ["136", "156"], ["135", "156"], ["135", "156"], ["133", "156"], ["133", "156"], ["146", "156"], ["149", "156"], ["149", "156"], ["149", "156"], ["80", "156"], ["79", "156"], ["77", "156"], ["77", "156"], ["88", "156"], ["88", "156"], ["87", "156"], ["94", "156"], ["93", "156"], ["93", "156"], ["87", "156"], ["85", "156"], ["85", "156"], ["101", "156"], ["101", "156"], ["108", "156"], ["108", "156"], ["104", "156"], ["104", "156"], ["104", "156"], ["117", "156"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["19", "61"], ["55", "64"], ["19", "64"], ["19", "67"], ["114", "112"], ["114", "112"], ["55", "126"], ["97", "126"], ["19", "126"], ["114", "129"], ["19", "129"], ["137", "133"], ["137", "133"], ["129", "133"], ["19", "133"], ["143", "133"], ["143", "133"], ["143", "146"], ["19", "146"], ["22", "25"], ["19", "25"], ["112", "126"], ["126", "129"], ["133", "146"], ["146", "149"], ["19", "149"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["40", "47"], ["47", "53"], ["19", "53"], ["55", "53"], ["55", "53"], ["72", "71"], ["19", "71"], ["79", "77"], ["79", "77"], ["89", "85"], ["89", "85"], ["51", "85"], ["19", "85"], ["93", "85"], ["93", "85"], ["116", "114"], ["116", "114"], ["19", "114"], ["137", "135"], ["137", "135"], ["129", "135"], ["19", "135"], ["143", "135"], ["143", "135"], ["45", "55"], ["19", "55"], ["47", "55"], ["67", "72"], ["19", "72"], ["94", "104"], ["19", "104"], ["116", "115"], ["116", "115"], ["19", "115"], ["137", "136"], ["137", "136"], ["129", "136"], ["19", "136"], ["19", "143"], ["114", "143"], ["61", "79"], ["104", "79"], ["19", "79"], ["64", "79"], ["108", "79"], ["89", "87"], ["89", "87"], ["51", "87"], ["19", "87"], ["93", "87"], ["93", "87"], ["85", "101"], ["19", "101"], ["35", "101"], ["94", "108"], ["19", "108"], ["117", "116"], ["117", "116"], ["117", "116"], ["19", "116"], ["35", "137"], ["101", "137"], ["19", "137"], ["139", "137"], ["139", "137"], ["61", "80"], ["104", "80"], ["19", "80"], ["64", "80"], ["108", "80"], ["89", "88"], ["89", "88"], ["51", "88"], ["19", "88"], ["94", "93"], ["94", "93"], ["97", "93"], ["97", "93"], ["19", "117"], ["64", "117"], ["108", "117"], ["19", "139"], ["64", "139"], ["108", "139"], ["55", "139"], ["97", "139"], ["77", "89"], ["19", "89"], ["55", "89"], ["97", "89"], ["19", "94"], ["55", "94"], ["89", "94"], ["89", "97"], ["19", "97"], ["64", "120"], ["108", "120"], ["19", "120"], ["71", "80"], ["71", "94"], ["71", "77"], ["71", "89"], ["71", "71"], ["71", "85"], ["71", "72"], ["71", "88"], ["71", "87"], ["71", "97"], ["71", "93"], ["71", "101"], ["71", "79"], ["101", "104"], ["101", "108"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY r = new InputReader(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new InputReader(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,r,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int k: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,k,int k = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,r,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int buckets = n / k)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.division,n / k)<SUB>6</SUB>>", "49": "<(IDENTIFIER,k,n / k)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int rem = n - buckets * k)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.subtraction,n - buckets * k)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.multiplication,buckets * k)<SUB>7</SUB>>", "57": "<(IDENTIFIER,k,buckets * k)<SUB>7</SUB>>", "59": "<(LOCAL,long high: long)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,long low = 0)<SUB>8</SUB>>", "63": "<(LITERAL,0,long low = 0)<SUB>8</SUB>>", "65": "<(IDENTIFIER,high,long high = buckets)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,long itr = 30)<SUB>8</SUB>>", "69": "<(LITERAL,30,long itr = 30)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,itr-- &gt; 0)<SUB>9</SUB>>", "73": "<(IDENTIFIER,itr,itr--)<SUB>9</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,long mid = (low + high) / 2)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.division,(low + high) / 2)<SUB>10</SUB>>", "81": "<(IDENTIFIER,low,low + high)<SUB>10</SUB>>", "83": "<(LITERAL,2,(low + high) / 2)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,long correct = mid * k + rem + (buckets - mid) * (k - 1))<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.addition,mid * k + rem + (buckets - mid) * (k - 1))<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.multiplication,mid * k)<SUB>11</SUB>>", "91": "<(IDENTIFIER,k,mid * k)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.multiplication,(buckets - mid) * (k - 1))<SUB>11</SUB>>", "95": "<(IDENTIFIER,buckets,buckets - mid)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>11</SUB>>", "99": "<(LITERAL,1,k - 1)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.lessThan,correct &lt; m)<SUB>12</SUB>>", "103": "<(IDENTIFIER,m,correct &lt; m)<SUB>12</SUB>>", "105": "<(IDENTIFIER,low,low = mid)<SUB>13</SUB>>", "107": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "109": "<(IDENTIFIER,high,high = mid)<SUB>15</SUB>>", "111": "<(LOCAL,long pow: long)<SUB>17</SUB>>", "113": "<(IDENTIFIER,pow,long pow = (pow(2, high + 1) - 2 + mod) % mod)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.addition,pow(2, high + 1) - 2 + mod)<SUB>17</SUB>>", "117": "<(pow,pow(2, high + 1))<SUB>17</SUB>>", "119": "<(LITERAL,2,pow(2, high + 1))<SUB>17</SUB>>", "121": "<(IDENTIFIER,high,high + 1)<SUB>17</SUB>>", "123": "<(LITERAL,2,pow(2, high + 1) - 2)<SUB>17</SUB>>", "125": "<(IDENTIFIER,mod,(pow(2, high + 1) - 2 + mod) % mod)<SUB>17</SUB>>", "127": "<(IDENTIFIER,pow,pow *= k)<SUB>18</SUB>>", "129": "<(&lt;operators&gt;.assignmentModulo,pow %= mod)<SUB>19</SUB>>", "131": "<(IDENTIFIER,mod,pow %= mod)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.assignment,long res = m - (high * k) + pow + 10 * mod)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.addition,m - (high * k) + pow + 10 * mod)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.subtraction,m - (high * k))<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.multiplication,high * k)<SUB>20</SUB>>", "141": "<(IDENTIFIER,k,high * k)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.multiplication,10 * mod)<SUB>20</SUB>>", "145": "<(IDENTIFIER,mod,10 * mod)<SUB>20</SUB>>", "147": "<(IDENTIFIER,res,res %= mod)<SUB>21</SUB>>", "149": "<(println,System.out.println(res))<SUB>22</SUB>>", "151": "<(IDENTIFIER,System,System.out.println(res))<SUB>22</SUB>>", "153": "<(IDENTIFIER,res,System.out.println(res))<SUB>22</SUB>>", "155": "<(MODIFIER,STATIC)>"}}