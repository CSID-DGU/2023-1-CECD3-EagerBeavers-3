{"edges": [["19", "20"], ["19", "21"], ["19", "152"], ["19", "153"], ["19", "154"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "50"], ["21", "51"], ["21", "56"], ["21", "57"], ["21", "64"], ["21", "67"], ["21", "76"], ["21", "79"], ["21", "80"], ["21", "85"], ["21", "94"], ["21", "97"], ["21", "98"], ["21", "107"], ["21", "108"], ["21", "113"], ["21", "126"], ["21", "131"], ["21", "134"], ["21", "135"], ["21", "145"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "49"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["59", "62"], ["59", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "40"], ["51", "59"], ["57", "64"], ["64", "70"], ["67", "76"], ["76", "82"], ["80", "91"], ["85", "94"], ["94", "103"], ["98", "110"], ["108", "116"], ["113", "128"], ["126", "131"], ["131", "138"], ["135", "148"], ["145", "154"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["40", "47"], ["40", "53"], ["53", "51"], ["59", "57"], ["69", "67"], ["82", "80"], ["87", "85"], ["100", "98"], ["110", "108"], ["115", "113"], ["128", "126"], ["137", "135"], ["146", "149"], ["149", "145"], ["28", "26"], ["44", "49"], ["49", "154"], ["70", "73"], ["73", "69"], ["89", "87"], ["102", "100"], ["116", "120"], ["119", "115"], ["138", "141"], ["141", "137"], ["148", "146"], ["45", "44"], ["91", "89"], ["103", "102"], ["120", "123"], ["123", "119"], ["47", "45"], ["19", "24"], ["49", "154"], ["20", "154"], ["22", "154"], ["25", "154"], ["25", "154"], ["31", "154"], ["35", "154"], ["37", "154"], ["35", "154"], ["35", "154"], ["40", "154"], ["40", "154"], ["44", "154"], ["44", "154"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["53", "51"], ["53", "51"], ["59", "57"], ["59", "57"], ["59", "57"], ["59", "57"], ["59", "64"], ["19", "64"], ["69", "67"], ["69", "67"], ["73", "76"], ["19", "76"], ["82", "80"], ["82", "80"], ["87", "85"], ["87", "85"], ["82", "94"], ["19", "94"], ["100", "98"], ["100", "98"], ["110", "108"], ["110", "108"], ["115", "113"], ["115", "113"], ["128", "126"], ["128", "126"], ["128", "131"], ["19", "131"], ["137", "135"], ["137", "135"], ["22", "25"], ["19", "25"], ["57", "64"], ["67", "76"], ["85", "94"], ["126", "131"], ["149", "145"], ["149", "145"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "40"], ["19", "40"], ["19", "49"], ["40", "53"], ["19", "53"], ["19", "59"], ["35", "59"], ["53", "59"], ["70", "69"], ["70", "69"], ["73", "69"], ["73", "69"], ["76", "82"], ["19", "82"], ["73", "82"], ["59", "87"], ["19", "87"], ["89", "87"], ["89", "87"], ["87", "100"], ["19", "100"], ["103", "100"], ["103", "100"], ["98", "110"], ["19", "110"], ["82", "110"], ["116", "115"], ["116", "115"], ["120", "115"], ["120", "115"], ["123", "115"], ["123", "115"], ["113", "128"], ["19", "128"], ["123", "128"], ["138", "137"], ["138", "137"], ["141", "137"], ["141", "137"], ["141", "137"], ["135", "149"], ["19", "149"], ["141", "149"], ["19", "44"], ["51", "70"], ["19", "70"], ["59", "70"], ["64", "73"], ["19", "73"], ["70", "73"], ["80", "89"], ["19", "89"], ["91", "89"], ["91", "89"], ["103", "102"], ["103", "102"], ["19", "102"], ["108", "116"], ["19", "116"], ["110", "116"], ["120", "119"], ["120", "119"], ["123", "119"], ["123", "119"], ["131", "138"], ["19", "138"], ["128", "138"], ["100", "141"], ["19", "141"], ["110", "141"], ["138", "141"], ["73", "91"], ["19", "91"], ["82", "103"], ["19", "103"], ["94", "103"], ["103", "120"], ["19", "120"], ["116", "120"], ["103", "123"], ["19", "123"], ["120", "123"], ["40", "94"], ["40", "115"], ["40", "73"], ["40", "64"], ["40", "51"], ["40", "57"], ["40", "98"], ["40", "120"], ["40", "113"], ["40", "145"], ["40", "146"], ["40", "128"], ["40", "102"], ["40", "131"], ["40", "85"], ["40", "149"], ["40", "103"], ["40", "69"], ["40", "67"], ["40", "119"], ["40", "76"], ["40", "59"], ["40", "87"], ["40", "91"], ["40", "44"], ["40", "138"], ["40", "148"], ["40", "137"], ["40", "80"], ["40", "100"], ["40", "70"], ["40", "108"], ["40", "47"], ["40", "141"], ["40", "49"], ["40", "89"], ["40", "116"], ["40", "45"], ["40", "123"], ["40", "82"], ["40", "126"], ["40", "53"], ["40", "135"], ["40", "110"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long x: long)<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,long x = nextLong())<SUB>3</SUB>>", "33": "<(nextLong,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>3</SUB>>", "37": "<(nextLong,nextLong())<SUB>3</SUB>>", "39": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>4</SUB>>", "41": "<(IDENTIFIER,x,x == 0)<SUB>4</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "49": "<(RETURN,return;,return;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,long max = x % mod)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.modulo,x % mod)<SUB>8</SUB>>", "55": "<(IDENTIFIER,mod,x % mod)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,long temp = power(2, k, mod))<SUB>9</SUB>>", "59": "<(power,power(2, k, mod))<SUB>9</SUB>>", "61": "<(LITERAL,2,power(2, k, mod))<SUB>9</SUB>>", "63": "<(IDENTIFIER,mod,power(2, k, mod))<SUB>9</SUB>>", "65": "<(IDENTIFIER,temp,temp %= mod)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,max = (max % mod) * (temp % mod))<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.multiplication,(max % mod) * (temp % mod))<SUB>11</SUB>>", "71": "<(IDENTIFIER,max,max % mod)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.modulo,temp % mod)<SUB>11</SUB>>", "75": "<(IDENTIFIER,mod,temp % mod)<SUB>11</SUB>>", "77": "<(IDENTIFIER,max,max %= mod)<SUB>12</SUB>>", "79": "<(LOCAL,long min: long)<SUB>13</SUB>>", "81": "<(IDENTIFIER,min,long min = max % mod)<SUB>13</SUB>>", "83": "<(IDENTIFIER,max,max % mod)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.assignment,min = mod(min - (temp - 1)))<SUB>14</SUB>>", "87": "<(mod,mod(min - (temp - 1)))<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.subtraction,min - (temp - 1))<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.subtraction,temp - 1)<SUB>14</SUB>>", "93": "<(LITERAL,1,temp - 1)<SUB>14</SUB>>", "95": "<(IDENTIFIER,min,min %= mod)<SUB>15</SUB>>", "97": "<(LOCAL,long num: long)<SUB>16</SUB>>", "99": "<(IDENTIFIER,num,long num = mod(max - min + 1))<SUB>16</SUB>>", "101": "<(IDENTIFIER,this,mod(max - min + 1))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.subtraction,max - min)<SUB>16</SUB>>", "105": "<(IDENTIFIER,min,max - min)<SUB>16</SUB>>", "107": "<(LOCAL,long n: long)<SUB>17</SUB>>", "109": "<(IDENTIFIER,n,long n = num % mod)<SUB>17</SUB>>", "111": "<(IDENTIFIER,num,num % mod)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,n = (n % mod) * (min % mod + max % mod))<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.multiplication,(n % mod) * (min % mod + max % mod))<SUB>18</SUB>>", "117": "<(IDENTIFIER,n,n % mod)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.addition,min % mod + max % mod)<SUB>18</SUB>>", "121": "<(IDENTIFIER,min,min % mod)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.modulo,max % mod)<SUB>18</SUB>>", "125": "<(IDENTIFIER,mod,max % mod)<SUB>18</SUB>>", "127": "<(IDENTIFIER,n,n = n % mod)<SUB>19</SUB>>", "129": "<(IDENTIFIER,n,n % mod)<SUB>19</SUB>>", "131": "<(&lt;operators&gt;.assignmentModulo,n %= mod)<SUB>20</SUB>>", "133": "<(IDENTIFIER,mod,n %= mod)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.assignment,long ans = n % mod * modInverse(num, mod))<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.multiplication,n % mod * modInverse(num, mod))<SUB>21</SUB>>", "139": "<(IDENTIFIER,n,n % mod)<SUB>21</SUB>>", "141": "<(modInverse,modInverse(num, mod))<SUB>21</SUB>>", "143": "<(IDENTIFIER,num,modInverse(num, mod))<SUB>21</SUB>>", "145": "<(println,println(ans % mod))<SUB>22</SUB>>", "147": "<(IDENTIFIER,System,println(ans % mod))<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.modulo,ans % mod)<SUB>22</SUB>>", "151": "<(IDENTIFIER,mod,ans % mod)<SUB>22</SUB>>", "153": "<(MODIFIER,STATIC)>"}}