{"edges": [["21", "23"], ["21", "123"], ["21", "124"], ["21", "125"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "46"], ["23", "49"], ["23", "50"], ["23", "53"], ["23", "114"], ["23", "119"], ["23", "121"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["64", "65"], ["64", "71"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "74"], ["71", "75"], ["71", "80"], ["71", "86"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "93"], ["86", "96"], ["86", "98"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "46"], ["46", "50"], ["50", "55"], ["114", "119"], ["119", "121"], ["121", "125"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["55", "58"], ["58", "66"], ["58", "116"], ["61", "58"], ["116", "114"], ["34", "32"], ["65", "72"], ["65", "61"], ["66", "69"], ["69", "65"], ["72", "77"], ["75", "81"], ["80", "90"], ["77", "75"], ["81", "84"], ["84", "80"], ["88", "93"], ["93", "102"], ["93", "61"], ["96", "93"], ["90", "88"], ["100", "109"], ["100", "96"], ["101", "100"], ["108", "96"], ["102", "101"], ["109", "112"], ["112", "108"], ["21", "26"], ["22", "125"], ["24", "125"], ["27", "125"], ["28", "125"], ["31", "125"], ["31", "125"], ["36", "125"], ["36", "125"], ["41", "125"], ["41", "125"], ["46", "125"], ["46", "125"], ["50", "125"], ["55", "125"], ["58", "125"], ["58", "125"], ["58", "125"], ["116", "125"], ["114", "125"], ["114", "125"], ["119", "125"], ["121", "125"], ["121", "125"], ["65", "125"], ["65", "125"], ["65", "125"], ["72", "125"], ["75", "125"], ["75", "125"], ["80", "125"], ["80", "125"], ["80", "125"], ["88", "125"], ["88", "125"], ["93", "125"], ["93", "125"], ["61", "125"], ["101", "125"], ["101", "125"], ["100", "125"], ["100", "125"], ["108", "125"], ["108", "125"], ["108", "125"], ["96", "125"], ["46", "125"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["43", "41"], ["21", "50"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "46"], ["41", "46"], ["21", "55"], ["31", "114"], ["21", "114"], ["50", "114"], ["72", "114"], ["43", "119"], ["21", "119"], ["114", "121"], ["21", "121"], ["27", "38"], ["21", "38"], ["38", "43"], ["21", "43"], ["36", "43"], ["55", "58"], ["61", "58"], ["21", "58"], ["43", "58"], ["93", "58"], ["58", "61"], ["21", "61"], ["50", "116"], ["72", "116"], ["21", "116"], ["46", "65"], ["80", "65"], ["69", "65"], ["46", "75"], ["65", "75"], ["84", "80"], ["21", "69"], ["50", "72"], ["21", "72"], ["58", "88"], ["21", "88"], ["21", "84"], ["88", "93"], ["96", "93"], ["21", "93"], ["58", "93"], ["93", "96"], ["21", "96"], ["58", "90"], ["21", "90"], ["101", "100"], ["101", "100"], ["21", "100"], ["112", "108"], ["46", "101"], ["108", "101"], ["75", "101"], ["21", "101"], ["21", "112"], ["58", "58"], ["58", "61"], ["58", "66"], ["58", "69"], ["58", "65"], ["65", "80"], ["65", "77"], ["65", "75"], ["65", "81"], ["65", "84"], ["65", "72"], ["65", "88"], ["65", "93"], ["65", "90"], ["93", "96"], ["93", "100"], ["93", "102"], ["93", "93"], ["93", "101"], ["100", "112"], ["100", "108"], ["100", "109"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY r = new Reader())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Reader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new Reader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out77 = new OutputWriter770(System.out))<SUB>6</SUB>>", "30": "<(&lt;operator&gt;.alloc,new OutputWriter770(System.out))<SUB>6</SUB>>", "5": "<(IDENTIFIER,out77,new OutputWriter770(System.out))<SUB>6</SUB>>", "33": "<(IDENTIFIER,System,new OutputWriter770(System.out))<SUB>6</SUB>>", "35": "<(LOCAL,int num1: int)<SUB>8</SUB>>", "37": "<(IDENTIFIER,num1,int num1 = nextInt())<SUB>8</SUB>>", "39": "<(IDENTIFIER,r,nextInt())<SUB>8</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] arr1 = nextArray(num1))<SUB>9</SUB>>", "43": "<(nextArray,nextArray(num1))<SUB>9</SUB>>", "45": "<(IDENTIFIER,num1,nextArray(num1))<SUB>9</SUB>>", "47": "<(IDENTIFIER,Arrays,sort(arr1))<SUB>10</SUB>>", "49": "<(LOCAL,int res1: int)<SUB>12</SUB>>", "51": "<(IDENTIFIER,res1,int res1 = 0)<SUB>12</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; num1); i++),for (int i = 0; Some(i &lt; num1); i++))<SUB>13</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "59": "<(IDENTIFIER,i,i &lt; num1)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "65": "<(&lt;operator&gt;.notEquals,arr1[i] != -1)<SUB>15</SUB>>", "67": "<(IDENTIFIER,arr1,arr1[i] != -1)<SUB>15</SUB>>", "69": "<(&lt;operator&gt;.minus,-1)<SUB>15</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "73": "<(IDENTIFIER,res1,res1++)<SUB>17</SUB>>", "75": "<(&lt;operator&gt;.assignment,int num2 = arr1[i])<SUB>18</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,arr1[i])<SUB>18</SUB>>", "79": "<(IDENTIFIER,i,int num2 = arr1[i])<SUB>18</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,arr1[i])<SUB>19</SUB>>", "83": "<(IDENTIFIER,i,arr1[i] = -1)<SUB>19</SUB>>", "85": "<(LITERAL,1,-1)<SUB>19</SUB>>", "87": "<(LOCAL,int j: int)<SUB>20</SUB>>", "89": "<(IDENTIFIER,j,int j = i + 1)<SUB>20</SUB>>", "91": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "93": "<(&lt;operator&gt;.lessThan,j &lt; num1)<SUB>20</SUB>>", "95": "<(IDENTIFIER,num1,j &lt; num1)<SUB>20</SUB>>", "97": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "99": "<(CONTROL_STRUCTURE,if (arr1[j] % num2 == 0),if (arr1[j] % num2 == 0))<SUB>22</SUB>>", "101": "<(&lt;operator&gt;.modulo,arr1[j] % num2)<SUB>22</SUB>>", "103": "<(IDENTIFIER,arr1,arr1[j] % num2)<SUB>22</SUB>>", "105": "<(IDENTIFIER,num2,arr1[j] % num2)<SUB>22</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,arr1[j])<SUB>24</SUB>>", "111": "<(IDENTIFIER,j,arr1[j] = -1)<SUB>24</SUB>>", "113": "<(LITERAL,1,-1)<SUB>24</SUB>>", "115": "<(IDENTIFIER,out77,print(res1 + &quot;&quot;))<SUB>29</SUB>>", "117": "<(IDENTIFIER,res1,res1 + &quot;&quot;)<SUB>29</SUB>>", "119": "<(close,close())<SUB>30</SUB>>", "121": "<(close,close())<SUB>31</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}