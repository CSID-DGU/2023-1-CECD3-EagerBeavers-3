{"edges": [["19", "21"], ["19", "149"], ["19", "150"], ["19", "151"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "51"], ["43", "56"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["56", "57"], ["57", "58"], ["57", "63"], ["57", "76"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "79"], ["77", "86"], ["77", "87"], ["77", "92"], ["77", "114"], ["77", "117"], ["77", "144"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "112"], ["93", "94"], ["93", "104"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "103"], ["99", "100"], ["99", "101"], ["99", "102"], ["104", "105"], ["104", "111"], ["105", "106"], ["105", "107"], ["105", "110"], ["107", "108"], ["107", "109"], ["112", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "131"], ["118", "119"], ["118", "130"], ["119", "120"], ["119", "127"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "141"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["22", "29"], ["25", "41"], ["37", "45"], ["24", "22"], ["39", "37"], ["44", "54"], ["44", "59"], ["51", "151"], ["27", "34"], ["30", "25"], ["41", "39"], ["45", "44"], ["45", "48"], ["48", "44"], ["52", "51"], ["29", "27"], ["32", "30"], ["54", "52"], ["58", "66"], ["58", "83"], ["63", "151"], ["34", "32"], ["59", "58"], ["64", "70"], ["67", "63"], ["66", "64"], ["68", "73"], ["73", "67"], ["79", "89"], ["87", "95"], ["114", "121"], ["144", "151"], ["70", "68"], ["81", "79"], ["89", "87"], ["93", "112"], ["93", "114"], ["112", "95"], ["118", "135"], ["118", "147"], ["131", "147"], ["145", "144"], ["83", "81"], ["94", "93"], ["94", "107"], ["104", "93"], ["119", "118"], ["133", "131"], ["147", "145"], ["95", "94"], ["95", "99"], ["98", "94"], ["105", "104"], ["120", "127"], ["127", "119"], ["134", "141"], ["141", "133"], ["99", "98"], ["107", "105"], ["121", "124"], ["124", "120"], ["135", "138"], ["138", "134"], ["19", "24"], ["20", "151"], ["22", "151"], ["27", "151"], ["30", "151"], ["30", "151"], ["30", "151"], ["25", "151"], ["41", "151"], ["39", "151"], ["37", "151"], ["37", "151"], ["44", "151"], ["44", "151"], ["44", "151"], ["51", "151"], ["51", "151"], ["51", "151"], ["39", "151"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["45", "44"], ["45", "44"], ["48", "44"], ["48", "44"], ["45", "51"], ["48", "51"], ["19", "51"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["37", "45"], ["19", "45"], ["45", "48"], ["19", "48"], ["59", "58"], ["59", "58"], ["19", "58"], ["67", "63"], ["67", "63"], ["45", "59"], ["48", "59"], ["19", "59"], ["68", "67"], ["68", "67"], ["73", "67"], ["73", "67"], ["81", "79"], ["81", "79"], ["89", "87"], ["89", "87"], ["95", "114"], ["99", "114"], ["105", "114"], ["19", "114"], ["70", "68"], ["19", "68"], ["70", "68"], ["68", "73"], ["19", "73"], ["79", "114"], ["133", "131"], ["133", "131"], ["118", "144"], ["131", "144"], ["19", "144"], ["59", "70"], ["19", "70"], ["83", "81"], ["19", "81"], ["83", "81"], ["81", "89"], ["19", "89"], ["94", "93"], ["94", "93"], ["104", "93"], ["104", "93"], ["95", "112"], ["99", "112"], ["105", "112"], ["19", "112"], ["119", "118"], ["119", "118"], ["114", "118"], ["19", "118"], ["59", "83"], ["19", "83"], ["95", "94"], ["95", "94"], ["98", "94"], ["98", "94"], ["105", "104"], ["105", "104"], ["105", "104"], ["19", "104"], ["120", "119"], ["120", "119"], ["127", "119"], ["127", "119"], ["134", "133"], ["134", "133"], ["141", "133"], ["141", "133"], ["87", "95"], ["112", "95"], ["19", "95"], ["99", "98"], ["99", "98"], ["99", "98"], ["19", "98"], ["99", "105"], ["19", "105"], ["107", "105"], ["107", "105"], ["95", "105"], ["99", "105"], ["121", "120"], ["121", "120"], ["124", "120"], ["124", "120"], ["124", "127"], ["19", "127"], ["135", "134"], ["135", "134"], ["138", "134"], ["138", "134"], ["138", "141"], ["19", "141"], ["105", "99"], ["19", "99"], ["89", "99"], ["107", "99"], ["95", "99"], ["89", "107"], ["99", "107"], ["19", "107"], ["89", "121"], ["99", "121"], ["107", "121"], ["19", "121"], ["121", "124"], ["19", "124"], ["127", "135"], ["19", "135"], ["135", "138"], ["19", "138"], ["44", "51"], ["44", "52"], ["44", "59"], ["44", "54"], ["44", "58"], ["45", "48"], ["58", "94"], ["58", "68"], ["58", "73"], ["58", "64"], ["58", "89"], ["58", "66"], ["58", "120"], ["58", "145"], ["58", "81"], ["58", "114"], ["58", "67"], ["58", "119"], ["58", "121"], ["58", "95"], ["58", "87"], ["58", "144"], ["58", "93"], ["58", "79"], ["58", "83"], ["58", "118"], ["58", "147"], ["58", "70"], ["58", "63"], ["58", "127"], ["58", "124"], ["93", "94"], ["93", "95"], ["93", "112"], ["93", "93"], ["118", "141"], ["118", "131"], ["118", "134"], ["118", "138"], ["118", "135"], ["118", "133"], ["94", "107"], ["94", "104"], ["94", "105"], ["95", "98"], ["95", "99"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,long n = parseLong(f.readLine()))<SUB>3</SUB>>", "39": "<(parseLong,parseLong(f.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n == 1 || n == 2),if (n == 1 || n == 2))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.equals,n == 1)<SUB>4</SUB>>", "47": "<(LITERAL,1,n == 1)<SUB>4</SUB>>", "49": "<(IDENTIFIER,n,n == 2)<SUB>4</SUB>>", "51": "<(println,System.out.println(n))<SUB>5</SUB>>", "53": "<(IDENTIFIER,System,System.out.println(n))<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,System.out.println(n))<SUB>5</SUB>>", "57": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "61": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "63": "<(println,System.out.println(n * (n - 1) * (n - 2)))<SUB>7</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(n * (n - 1) * (n - 2)))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 2))<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,n * (n - 1))<SUB>7</SUB>>", "71": "<(IDENTIFIER,n,n - 1)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>7</SUB>>", "75": "<(LITERAL,2,n - 2)<SUB>7</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,long prod = n * (n - 1))<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>10</SUB>>", "85": "<(LITERAL,1,n - 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.assignment,long x = n - 2)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>11</SUB>>", "91": "<(LITERAL,2,n - 2)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.logicalOr,x &gt; 0 &amp;&amp; gcd(n, x) &gt; 1 || gcd(n - 1, x) &gt; 1)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.greaterThan,x &gt; 0)<SUB>12</SUB>>", "97": "<(LITERAL,0,x &gt; 0)<SUB>12</SUB>>", "99": "<(gcd,gcd(n, x))<SUB>12</SUB>>", "101": "<(IDENTIFIER,n,gcd(n, x))<SUB>12</SUB>>", "103": "<(LITERAL,1,gcd(n, x) &gt; 1)<SUB>12</SUB>>", "105": "<(gcd,gcd(n - 1, x))<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>12</SUB>>", "109": "<(LITERAL,1,n - 1)<SUB>12</SUB>>", "111": "<(LITERAL,1,gcd(n - 1, x) &gt; 1)<SUB>12</SUB>>", "113": "<(IDENTIFIER,x,x--)<SUB>13</SUB>>", "115": "<(IDENTIFIER,prod,prod *= x)<SUB>14</SUB>>", "117": "<(CONTROL_STRUCTURE,if ((n - 1) * (n - 2) * (n - 3) &gt; prod),if ((n - 1) * (n - 2) * (n - 3) &gt; prod))<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2) * (n - 3))<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>15</SUB>>", "123": "<(LITERAL,1,n - 1)<SUB>15</SUB>>", "125": "<(IDENTIFIER,n,n - 2)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>15</SUB>>", "129": "<(LITERAL,3,n - 3)<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.assignment,prod = (n - 1) * (n - 2) * (n - 3))<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2) * (n - 3))<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>16</SUB>>", "137": "<(LITERAL,1,n - 1)<SUB>16</SUB>>", "139": "<(IDENTIFIER,n,n - 2)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>16</SUB>>", "143": "<(LITERAL,3,n - 3)<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}