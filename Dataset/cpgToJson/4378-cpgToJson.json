{"edges": [["19", "20"], ["19", "21"], ["19", "140"], ["19", "141"], ["19", "142"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "42"], ["21", "81"], ["21", "90"], ["21", "107"], ["21", "108"], ["21", "111"], ["21", "133"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "60"], ["52", "61"], ["52", "67"], ["52", "74"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "59"], ["57", "58"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "66"], ["64", "65"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["127", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "39"], ["37", "44"], ["81", "92"], ["108", "113"], ["133", "142"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["39", "37"], ["44", "47"], ["47", "57"], ["47", "84"], ["50", "47"], ["83", "81"], ["92", "95"], ["95", "102"], ["95", "108"], ["98", "95"], ["100", "98"], ["113", "116"], ["116", "122"], ["116", "136"], ["119", "116"], ["134", "137"], ["137", "133"], ["28", "26"], ["54", "64"], ["61", "69"], ["67", "76"], ["74", "50"], ["84", "87"], ["87", "83"], ["102", "105"], ["105", "100"], ["122", "130"], ["125", "119"], ["136", "134"], ["56", "54"], ["63", "61"], ["68", "67"], ["75", "74"], ["127", "125"], ["57", "56"], ["64", "63"], ["69", "68"], ["76", "75"], ["130", "127"], ["19", "24"], ["20", "142"], ["22", "142"], ["25", "142"], ["25", "142"], ["29", "142"], ["35", "142"], ["33", "142"], ["33", "142"], ["37", "142"], ["37", "142"], ["37", "142"], ["47", "142"], ["47", "142"], ["81", "142"], ["83", "142"], ["83", "142"], ["81", "142"], ["81", "142"], ["95", "142"], ["108", "142"], ["113", "142"], ["116", "142"], ["116", "142"], ["116", "142"], ["133", "142"], ["137", "142"], ["133", "142"], ["133", "142"], ["122", "142"], ["127", "142"], ["125", "142"], ["125", "142"], ["119", "142"], ["100", "142"], ["100", "142"], ["100", "142"], ["98", "142"], ["54", "142"], ["54", "142"], ["61", "142"], ["64", "142"], ["63", "142"], ["61", "142"], ["61", "142"], ["67", "142"], ["67", "142"], ["74", "142"], ["74", "142"], ["50", "142"], ["127", "142"], ["122", "142"], ["100", "142"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["39", "37"], ["83", "81"], ["83", "81"], ["19", "108"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "92"], ["19", "113"], ["137", "133"], ["137", "133"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["29", "39"], ["19", "39"], ["44", "47"], ["50", "47"], ["19", "47"], ["33", "47"], ["47", "50"], ["19", "50"], ["56", "54"], ["56", "54"], ["63", "61"], ["63", "61"], ["19", "67"], ["19", "74"], ["39", "83"], ["19", "83"], ["87", "83"], ["87", "83"], ["92", "95"], ["98", "95"], ["19", "95"], ["87", "95"], ["95", "98"], ["19", "98"], ["19", "100"], ["81", "100"], ["105", "100"], ["113", "116"], ["119", "116"], ["19", "116"], ["95", "116"], ["127", "119"], ["19", "119"], ["116", "122"], ["19", "122"], ["127", "125"], ["127", "125"], ["127", "125"], ["108", "137"], ["125", "137"], ["19", "137"], ["39", "84"], ["19", "84"], ["19", "87"], ["39", "87"], ["19", "105"], ["108", "125"], ["19", "125"], ["57", "56"], ["19", "56"], ["64", "63"], ["19", "63"], ["19", "127"], ["130", "127"], ["130", "127"], ["35", "57"], ["64", "57"], ["19", "57"], ["57", "64"], ["19", "64"], ["19", "130"], ["116", "130"], ["47", "47"], ["47", "68"], ["47", "64"], ["47", "57"], ["47", "75"], ["47", "56"], ["47", "69"], ["47", "67"], ["47", "74"], ["47", "76"], ["47", "50"], ["47", "54"], ["47", "61"], ["47", "63"], ["95", "98"], ["95", "102"], ["95", "95"], ["95", "105"], ["95", "100"], ["116", "116"], ["116", "122"], ["116", "119"], ["116", "130"], ["116", "127"], ["116", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,m = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,adj = new boolean[n][n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "41": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "43": "<(LOCAL,int i: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>6</SUB>>", "49": "<(IDENTIFIER,m,i &lt; m)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "53": "<(LOCAL,int u: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,u,int u = sc.nextInt() - 1)<SUB>7</SUB>>", "57": "<(nextInt,nextInt())<SUB>7</SUB>>", "59": "<(LITERAL,1,sc.nextInt() - 1)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int v = sc.nextInt() - 1)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.subtraction,sc.nextInt() - 1)<SUB>8</SUB>>", "65": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,adj[u][v] = true)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,adj[u])<SUB>9</SUB>>", "71": "<(IDENTIFIER,u,adj[u][v] = true)<SUB>9</SUB>>", "73": "<(LITERAL,true,adj[u][v] = true)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,adj[v][u])<SUB>10</SUB>>", "77": "<(IDENTIFIER,adj,adj[v][u] = true)<SUB>10</SUB>>", "79": "<(IDENTIFIER,u,adj[v][u] = true)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,mem = new long[n + 1][(1 &lt;&lt; n)])<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.alloc,new long[n + 1][(1 &lt;&lt; n)])>", "85": "<(IDENTIFIER,n,n + 1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "89": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "91": "<(LOCAL,int i: int)<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>13</SUB>>", "97": "<(IDENTIFIER,n,i &lt;= n)<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "101": "<(IDENTIFIER,Arrays,fill(mem[i], -1))<SUB>14</SUB>>", "103": "<(IDENTIFIER,mem,fill(mem[i], -1))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "107": "<(LOCAL,long ans: long)<SUB>15</SUB>>", "109": "<(IDENTIFIER,ans,long ans = 0)<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "115": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "117": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "123": "<(IDENTIFIER,start,start = i)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.assignmentPlus,ans += dp(i, (1 &lt;&lt; i)))<SUB>18</SUB>>", "127": "<(dp,dp(i, (1 &lt;&lt; i)))<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,dp(i, (1 &lt;&lt; i)))<SUB>18</SUB>>", "131": "<(LITERAL,1,1 &lt;&lt; i)<SUB>18</SUB>>", "133": "<(println,System.out.println(ans / 2))<SUB>20</SUB>>", "135": "<(IDENTIFIER,System,System.out.println(ans / 2))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.division,ans / 2)<SUB>20</SUB>>", "139": "<(LITERAL,2,ans / 2)<SUB>20</SUB>>", "141": "<(MODIFIER,STATIC)>"}}