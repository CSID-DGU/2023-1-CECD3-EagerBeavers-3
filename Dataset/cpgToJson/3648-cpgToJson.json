{"edges": [["21", "22"], ["21", "23"], ["21", "264"], ["21", "265"], ["21", "266"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "48"], ["23", "49"], ["23", "55"], ["23", "56"], ["23", "63"], ["23", "64"], ["23", "71"], ["23", "72"], ["23", "78"], ["23", "79"], ["23", "84"], ["23", "103"], ["23", "104"], ["23", "110"], ["23", "111"], ["23", "116"], ["23", "159"], ["23", "160"], ["23", "164"], ["23", "165"], ["23", "169"], ["23", "170"], ["23", "174"], ["23", "255"], ["23", "262"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "35"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "5"], ["39", "40"], ["40", "41"], ["40", "44"], ["40", "47"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "54"], ["52", "53"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["76", "77"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "97"], ["95", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "109"], ["107", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "142"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "141"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "158"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["160", "161"], ["160", "162"], ["162", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["170", "171"], ["170", "172"], ["172", "173"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "187"], ["185", "190"], ["185", "193"], ["185", "195"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["195", "197"], ["195", "202"], ["195", "237"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "210"], ["202", "212"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["215", "218"], ["218", "219"], ["218", "228"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "245"], ["241", "250"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["24", "31"], ["27", "38"], ["36", "43"], ["39", "52"], ["49", "60"], ["56", "68"], ["64", "76"], ["72", "81"], ["79", "86"], ["104", "113"], ["111", "118"], ["160", "167"], ["165", "172"], ["170", "176"], ["255", "262"], ["262", "266"], ["26", "24"], ["38", "36"], ["51", "49"], ["58", "56"], ["66", "64"], ["74", "72"], ["81", "79"], ["86", "89"], ["89", "97"], ["89", "107"], ["92", "89"], ["106", "104"], ["113", "111"], ["118", "121"], ["121", "129"], ["121", "162"], ["124", "121"], ["162", "160"], ["167", "165"], ["172", "170"], ["176", "179"], ["179", "187"], ["179", "258"], ["182", "179"], ["257", "255"], ["29", "32"], ["32", "27"], ["41", "44"], ["44", "39"], ["52", "51"], ["60", "58"], ["68", "66"], ["76", "74"], ["95", "92"], ["107", "106"], ["127", "144"], ["142", "124"], ["258", "257"], ["31", "29"], ["43", "41"], ["97", "102"], ["100", "95"], ["128", "138"], ["133", "127"], ["143", "154"], ["148", "142"], ["187", "190"], ["190", "199"], ["190", "182"], ["193", "190"], ["102", "100"], ["129", "128"], ["134", "133"], ["144", "143"], ["149", "148"], ["197", "204"], ["136", "134"], ["151", "149"], ["199", "197"], ["204", "207"], ["207", "224"], ["207", "238"], ["210", "207"], ["238", "242"], ["238", "193"], ["138", "136"], ["153", "151"], ["213", "210"], ["242", "247"], ["245", "252"], ["250", "193"], ["154", "153"], ["215", "213"], ["247", "245"], ["252", "250"], ["218", "215"], ["219", "233"], ["228", "218"], ["221", "219"], ["230", "228"], ["223", "221"], ["232", "230"], ["224", "223"], ["233", "232"], ["21", "26"], ["22", "266"], ["24", "266"], ["32", "266"], ["32", "266"], ["27", "266"], ["36", "266"], ["41", "266"], ["44", "266"], ["44", "266"], ["39", "266"], ["49", "266"], ["49", "266"], ["58", "266"], ["56", "266"], ["56", "266"], ["66", "266"], ["64", "266"], ["64", "266"], ["74", "266"], ["72", "266"], ["72", "266"], ["79", "266"], ["81", "266"], ["79", "266"], ["79", "266"], ["104", "266"], ["107", "266"], ["106", "266"], ["104", "266"], ["104", "266"], ["111", "266"], ["111", "266"], ["111", "266"], ["118", "266"], ["121", "266"], ["121", "266"], ["121", "266"], ["160", "266"], ["160", "266"], ["165", "266"], ["170", "266"], ["170", "266"], ["176", "266"], ["179", "266"], ["179", "266"], ["179", "266"], ["258", "266"], ["257", "266"], ["257", "266"], ["255", "266"], ["255", "266"], ["262", "266"], ["262", "266"], ["187", "266"], ["190", "266"], ["190", "266"], ["190", "266"], ["182", "266"], ["197", "266"], ["197", "266"], ["204", "266"], ["207", "266"], ["207", "266"], ["207", "266"], ["238", "266"], ["238", "266"], ["238", "266"], ["242", "266"], ["242", "266"], ["242", "266"], ["245", "266"], ["245", "266"], ["250", "266"], ["250", "266"], ["193", "266"], ["215", "266"], ["221", "266"], ["219", "266"], ["218", "266"], ["230", "266"], ["228", "266"], ["218", "266"], ["215", "266"], ["213", "266"], ["213", "266"], ["210", "266"], ["127", "266"], ["134", "266"], ["133", "266"], ["127", "266"], ["127", "266"], ["142", "266"], ["149", "266"], ["153", "266"], ["149", "266"], ["148", "266"], ["142", "266"], ["142", "266"], ["124", "266"], ["95", "266"], ["95", "266"], ["95", "266"], ["92", "266"], ["95", "266"], ["21", "22"], ["21", "24"], ["21", "36"], ["51", "49"], ["51", "49"], ["58", "56"], ["58", "56"], ["66", "64"], ["66", "64"], ["74", "72"], ["74", "72"], ["81", "79"], ["81", "79"], ["106", "104"], ["106", "104"], ["113", "111"], ["113", "111"], ["162", "160"], ["167", "165"], ["172", "170"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["36", "39"], ["21", "39"], ["41", "39"], ["44", "39"], ["21", "86"], ["21", "118"], ["21", "176"], ["39", "255"], ["21", "255"], ["165", "255"], ["245", "255"], ["170", "255"], ["250", "255"], ["255", "262"], ["21", "262"], ["21", "29"], ["21", "35"], ["21", "41"], ["21", "47"], ["52", "51"], ["21", "51"], ["21", "58"], ["49", "58"], ["58", "66"], ["21", "66"], ["49", "66"], ["66", "74"], ["21", "74"], ["76", "74"], ["56", "81"], ["21", "81"], ["64", "81"], ["86", "89"], ["92", "89"], ["21", "89"], ["81", "89"], ["89", "92"], ["21", "92"], ["107", "106"], ["21", "106"], ["72", "113"], ["21", "113"], ["118", "121"], ["124", "121"], ["21", "121"], ["113", "121"], ["154", "124"], ["21", "124"], ["133", "127"], ["133", "127"], ["148", "142"], ["148", "142"], ["21", "162"], ["21", "167"], ["21", "172"], ["176", "179"], ["182", "179"], ["21", "179"], ["89", "179"], ["179", "182"], ["221", "182"], ["21", "182"], ["165", "257"], ["245", "257"], ["21", "257"], ["170", "257"], ["250", "257"], ["29", "32"], ["21", "32"], ["41", "44"], ["21", "44"], ["27", "52"], ["21", "52"], ["52", "76"], ["21", "76"], ["21", "95"], ["79", "95"], ["74", "95"], ["76", "107"], ["21", "107"], ["21", "187"], ["165", "258"], ["245", "258"], ["21", "258"], ["134", "133"], ["134", "133"], ["21", "133"], ["149", "148"], ["149", "148"], ["21", "148"], ["187", "190"], ["193", "190"], ["21", "190"], ["81", "190"], ["190", "193"], ["230", "193"], ["21", "193"], ["179", "197"], ["21", "197"], ["190", "197"], ["74", "134"], ["149", "134"], ["95", "134"], ["21", "134"], ["104", "134"], ["134", "149"], ["21", "149"], ["104", "149"], ["21", "204"], ["179", "199"], ["21", "199"], ["190", "199"], ["204", "207"], ["210", "207"], ["21", "207"], ["121", "207"], ["207", "210"], ["21", "210"], ["215", "213"], ["215", "213"], ["215", "213"], ["160", "238"], ["242", "238"], ["21", "238"], ["197", "238"], ["213", "238"], ["238", "242"], ["21", "242"], ["179", "245"], ["221", "245"], ["21", "245"], ["190", "250"], ["230", "250"], ["21", "250"], ["121", "138"], ["21", "138"], ["154", "153"], ["154", "153"], ["21", "153"], ["138", "154"], ["21", "154"], ["228", "215"], ["21", "215"], ["197", "215"], ["213", "215"], ["219", "215"], ["219", "215"], ["228", "215"], ["179", "247"], ["221", "247"], ["21", "247"], ["190", "252"], ["230", "252"], ["21", "252"], ["219", "218"], ["219", "218"], ["228", "218"], ["228", "218"], ["215", "219"], ["21", "219"], ["221", "219"], ["221", "219"], ["219", "228"], ["21", "228"], ["230", "228"], ["230", "228"], ["179", "221"], ["21", "221"], ["127", "221"], ["190", "230"], ["21", "230"], ["142", "230"], ["89", "102"], ["89", "95"], ["89", "92"], ["89", "97"], ["89", "100"], ["89", "89"], ["121", "136"], ["121", "154"], ["121", "128"], ["121", "149"], ["121", "151"], ["121", "121"], ["121", "153"], ["121", "144"], ["121", "129"], ["121", "134"], ["121", "138"], ["121", "148"], ["121", "127"], ["121", "142"], ["121", "143"], ["121", "124"], ["121", "133"], ["179", "179"], ["179", "187"], ["179", "190"], ["179", "182"], ["190", "197"], ["190", "204"], ["190", "238"], ["190", "190"], ["190", "207"], ["190", "193"], ["190", "199"], ["207", "230"], ["207", "215"], ["207", "232"], ["207", "213"], ["207", "228"], ["207", "223"], ["207", "207"], ["207", "221"], ["207", "224"], ["207", "233"], ["207", "210"], ["207", "218"], ["207", "219"], ["238", "245"], ["238", "247"], ["238", "242"], ["238", "252"], ["238", "250"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.alloc,new PrintWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new FileWriter(&quot;output.txt&quot;))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj2,new FileWriter(&quot;output.txt&quot;))>", "47": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.assignment,String[] nm = split(&quot; &quot;))<SUB>7</SUB>>", "51": "<(split,split(&quot; &quot;))<SUB>7</SUB>>", "53": "<(IDENTIFIER,s,readLine())<SUB>7</SUB>>", "55": "<(LOCAL,int n: int)<SUB>8</SUB>>", "57": "<(IDENTIFIER,n,int n = Integer.valueOf(nm[0]))<SUB>8</SUB>>", "59": "<(IDENTIFIER,Integer,Integer.valueOf(nm[0]))<SUB>8</SUB>>", "61": "<(IDENTIFIER,nm,Integer.valueOf(nm[0]))<SUB>8</SUB>>", "63": "<(LOCAL,int m: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,m,int m = Integer.valueOf(nm[1]))<SUB>9</SUB>>", "67": "<(IDENTIFIER,Integer,Integer.valueOf(nm[1]))<SUB>9</SUB>>", "69": "<(IDENTIFIER,nm,Integer.valueOf(nm[1]))<SUB>9</SUB>>", "71": "<(LOCAL,int k: int)<SUB>10</SUB>>", "73": "<(IDENTIFIER,k,int k = valueOf(s.readLine()))<SUB>10</SUB>>", "75": "<(IDENTIFIER,Integer,valueOf(s.readLine()))<SUB>10</SUB>>", "77": "<(IDENTIFIER,s,readLine())<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,int[][] dp = new int[n][m])<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.alloc,new int[n][m])>", "83": "<(IDENTIFIER,m,new int[n][m])<SUB>12</SUB>>", "85": "<(LOCAL,int i: int)<SUB>13</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "91": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "95": "<(fill,fill(dp[i], Integer.MAX_VALUE))<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>14</SUB>>", "99": "<(IDENTIFIER,i,fill(dp[i], Integer.MAX_VALUE))<SUB>14</SUB>>", "101": "<(IDENTIFIER,Integer,fill(dp[i], Integer.MAX_VALUE))<SUB>14</SUB>>", "103": "<(LOCAL,String[] st: java.lang.String[])<SUB>16</SUB>>", "105": "<(IDENTIFIER,st,String[] st = split(&quot; &quot;))<SUB>16</SUB>>", "107": "<(readLine,readLine())<SUB>16</SUB>>", "109": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,int[][] trees = new int[k][2])<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.alloc,new int[k][2])>", "115": "<(LITERAL,2,new int[k][2])<SUB>17</SUB>>", "117": "<(LOCAL,int l: int)<SUB>18</SUB>>", "119": "<(IDENTIFIER,l,int l = 0)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.lessThan,l &lt; k)<SUB>18</SUB>>", "123": "<(IDENTIFIER,k,l &lt; k)<SUB>18</SUB>>", "125": "<(IDENTIFIER,l,l++)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,trees[l][0] = Integer.valueOf(st[l * 2]) - 1)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,trees[l])<SUB>19</SUB>>", "131": "<(IDENTIFIER,l,trees[l][0] = Integer.valueOf(st[l * 2]) - 1)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.subtraction,Integer.valueOf(st[l * 2]) - 1)<SUB>19</SUB>>", "135": "<(IDENTIFIER,Integer,Integer.valueOf(st[l * 2]))<SUB>19</SUB>>", "137": "<(IDENTIFIER,st,Integer.valueOf(st[l * 2]))<SUB>19</SUB>>", "139": "<(IDENTIFIER,l,l * 2)<SUB>19</SUB>>", "141": "<(LITERAL,1,Integer.valueOf(st[l * 2]) - 1)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,trees[l][1])<SUB>20</SUB>>", "145": "<(IDENTIFIER,trees,trees[l][1] = Integer.valueOf(st[l * 2 + 1]) - 1)<SUB>20</SUB>>", "147": "<(LITERAL,1,trees[l][1] = Integer.valueOf(st[l * 2 + 1]) - 1)<SUB>20</SUB>>", "149": "<(valueOf,Integer.valueOf(st[l * 2 + 1]))<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,st[l * 2 + 1])<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.addition,l * 2 + 1)<SUB>20</SUB>>", "155": "<(IDENTIFIER,l,l * 2)<SUB>20</SUB>>", "157": "<(LITERAL,1,l * 2 + 1)<SUB>20</SUB>>", "159": "<(LOCAL,int maxtime: int)<SUB>23</SUB>>", "161": "<(IDENTIFIER,maxtime,int maxtime = -1)<SUB>23</SUB>>", "163": "<(LITERAL,1,-1)<SUB>23</SUB>>", "165": "<(&lt;operator&gt;.assignment,int max_x = -1)<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.minus,-1)<SUB>24</SUB>>", "169": "<(LOCAL,int max_y: int)<SUB>25</SUB>>", "171": "<(IDENTIFIER,max_y,int max_y = -1)<SUB>25</SUB>>", "173": "<(LITERAL,1,-1)<SUB>25</SUB>>", "175": "<(LOCAL,int i: int)<SUB>26</SUB>>", "177": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "179": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "181": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "183": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "189": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "191": "<(IDENTIFIER,j,j &lt; m)<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "197": "<(&lt;operator&gt;.assignment,int minDist = n + m)<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.addition,n + m)<SUB>28</SUB>>", "201": "<(IDENTIFIER,m,n + m)<SUB>28</SUB>>", "203": "<(LOCAL,int l: int)<SUB>29</SUB>>", "205": "<(IDENTIFIER,l,int l = 0)<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.lessThan,l &lt; k)<SUB>29</SUB>>", "209": "<(IDENTIFIER,k,l &lt; k)<SUB>29</SUB>>", "211": "<(IDENTIFIER,l,l++)<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.assignment,minDist = Math.min(minDist, Math.abs(i - trees[l][0]) + Math.abs(j - trees[l][1])))<SUB>30</SUB>>", "215": "<(min,Math.min(minDist, Math.abs(i - trees[l][0]) + Math.abs(j - trees[l][1])))<SUB>30</SUB>>", "217": "<(IDENTIFIER,minDist,Math.min(minDist, Math.abs(i - trees[l][0]) + Math.abs(j - trees[l][1])))<SUB>30</SUB>>", "219": "<(abs,Math.abs(i - trees[l][0]))<SUB>30</SUB>>", "221": "<(&lt;operator&gt;.subtraction,i - trees[l][0])<SUB>30</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,trees[l][0])<SUB>30</SUB>>", "225": "<(IDENTIFIER,trees,i - trees[l][0])<SUB>30</SUB>>", "227": "<(LITERAL,0,i - trees[l][0])<SUB>30</SUB>>", "229": "<(IDENTIFIER,Math,Math.abs(j - trees[l][1]))<SUB>30</SUB>>", "231": "<(IDENTIFIER,j,j - trees[l][1])<SUB>30</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,trees[l])<SUB>30</SUB>>", "235": "<(IDENTIFIER,l,j - trees[l][1])<SUB>30</SUB>>", "237": "<(CONTROL_STRUCTURE,if (maxtime &lt; minDist),if (maxtime &lt; minDist))<SUB>32</SUB>>", "239": "<(IDENTIFIER,maxtime,maxtime &lt; minDist)<SUB>32</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "243": "<(IDENTIFIER,maxtime,maxtime = minDist)<SUB>33</SUB>>", "245": "<(&lt;operator&gt;.assignment,max_x = i + 1)<SUB>34</SUB>>", "247": "<(&lt;operator&gt;.addition,i + 1)<SUB>34</SUB>>", "249": "<(LITERAL,1,i + 1)<SUB>34</SUB>>", "251": "<(IDENTIFIER,max_y,max_y = j + 1)<SUB>35</SUB>>", "253": "<(IDENTIFIER,j,j + 1)<SUB>35</SUB>>", "255": "<(println,println(max_x + &quot; &quot; + max_y))<SUB>42</SUB>>", "257": "<(&lt;operator&gt;.addition,max_x + &quot; &quot; + max_y)<SUB>42</SUB>>", "259": "<(IDENTIFIER,max_x,max_x + &quot; &quot;)<SUB>42</SUB>>", "261": "<(IDENTIFIER,max_y,max_x + &quot; &quot; + max_y)<SUB>42</SUB>>", "263": "<(IDENTIFIER,out,flush())<SUB>43</SUB>>", "265": "<(MODIFIER,STATIC)>"}}