{"edges": [["17", "19"], ["17", "111"], ["17", "112"], ["17", "113"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "109"], ["21", "22"], ["21", "23"], ["23", "24"], ["25", "26"], ["25", "27"], ["25", "30"], ["25", "33"], ["25", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "41"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "47"], ["41", "51"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["47", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["52", "53"], ["52", "54"], ["52", "59"], ["52", "60"], ["52", "63"], ["52", "102"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "77"], ["63", "79"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "94"], ["81", "82"], ["81", "89"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "98"], ["94", "101"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "105"], ["103", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["21", "27"], ["109", "113"], ["23", "21"], ["27", "30"], ["30", "39"], ["30", "109"], ["33", "30"], ["37", "43"], ["39", "37"], ["42", "48"], ["42", "56"], ["43", "42"], ["48", "33"], ["54", "60"], ["60", "65"], ["56", "54"], ["65", "72"], ["68", "84"], ["68", "103"], ["77", "72"], ["103", "106"], ["103", "33"], ["70", "68"], ["106", "33"], ["71", "70"], ["81", "95"], ["81", "77"], ["72", "73"], ["73", "71"], ["82", "81"], ["82", "90"], ["89", "81"], ["95", "98"], ["98", "103"], ["83", "82"], ["90", "89"], ["84", "83"], ["17", "23"], ["18", "113"], ["23", "113"], ["21", "113"], ["21", "113"], ["27", "113"], ["30", "113"], ["30", "113"], ["30", "113"], ["109", "113"], ["109", "113"], ["39", "113"], ["37", "113"], ["37", "113"], ["43", "113"], ["42", "113"], ["42", "113"], ["56", "113"], ["54", "113"], ["54", "113"], ["60", "113"], ["65", "113"], ["68", "113"], ["73", "113"], ["71", "113"], ["70", "113"], ["68", "113"], ["68", "113"], ["84", "113"], ["83", "113"], ["82", "113"], ["82", "113"], ["81", "113"], ["90", "113"], ["89", "113"], ["89", "113"], ["81", "113"], ["81", "113"], ["77", "113"], ["95", "113"], ["98", "113"], ["103", "113"], ["103", "113"], ["106", "113"], ["48", "113"], ["33", "113"], ["73", "113"], ["17", "18"], ["23", "21"], ["17", "27"], ["95", "109"], ["106", "109"], ["48", "109"], ["17", "109"], ["17", "23"], ["27", "30"], ["33", "30"], ["17", "30"], ["21", "30"], ["30", "33"], ["17", "33"], ["39", "37"], ["23", "39"], ["17", "39"], ["43", "42"], ["43", "42"], ["17", "42"], ["37", "43"], ["17", "43"], ["95", "48"], ["106", "48"], ["17", "48"], ["56", "54"], ["56", "54"], ["17", "60"], ["17", "65"], ["43", "56"], ["17", "56"], ["65", "68"], ["77", "68"], ["17", "68"], ["73", "68"], ["73", "68"], ["84", "77"], ["90", "77"], ["17", "77"], ["60", "103"], ["98", "103"], ["17", "103"], ["17", "70"], ["73", "70"], ["73", "70"], ["95", "106"], ["48", "106"], ["17", "106"], ["17", "71"], ["73", "71"], ["73", "71"], ["82", "81"], ["82", "81"], ["89", "81"], ["89", "81"], ["17", "98"], ["17", "73"], ["54", "73"], ["82", "73"], ["89", "73"], ["83", "82"], ["83", "82"], ["73", "82"], ["17", "82"], ["90", "89"], ["82", "89"], ["17", "89"], ["106", "95"], ["48", "95"], ["17", "95"], ["84", "83"], ["17", "83"], ["84", "90"], ["17", "90"], ["68", "84"], ["17", "84"], ["30", "30"], ["30", "42"], ["30", "37"], ["30", "43"], ["30", "33"], ["30", "39"], ["42", "48"], ["42", "68"], ["42", "60"], ["42", "73"], ["42", "72"], ["42", "103"], ["42", "56"], ["42", "65"], ["42", "54"], ["42", "71"], ["42", "70"], ["68", "81"], ["68", "84"], ["68", "82"], ["68", "83"], ["103", "106"], ["81", "68"], ["81", "73"], ["81", "77"], ["81", "98"], ["81", "72"], ["81", "95"], ["81", "71"], ["81", "70"], ["82", "89"], ["82", "90"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(CONTROL_STRUCTURE,for (int v = 0; Some(v &lt; t); v++),for (int v = 0; Some(v &lt; t); v++))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,int v = 0)<SUB>3</SUB>>", "29": "<(LITERAL,0,int v = 0)<SUB>3</SUB>>", "31": "<(IDENTIFIER,v,v &lt; t)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.postIncrement,v++)<SUB>3</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.modulo,n % 2)<SUB>5</SUB>>", "45": "<(LITERAL,2,n % 2)<SUB>5</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "49": "<(IDENTIFIER,pw,println(&quot;NO&quot;))<SUB>6</SUB>>", "51": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "53": "<(LOCAL,int x: int)<SUB>9</SUB>>", "55": "<(IDENTIFIER,x,int x = n / 2)<SUB>9</SUB>>", "57": "<(IDENTIFIER,n,n / 2)<SUB>9</SUB>>", "59": "<(LOCAL,boolean check: boolean)<SUB>10</SUB>>", "61": "<(IDENTIFIER,check,boolean check = false)<SUB>10</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= (int) Math.sqrt(x) + 1); i++),for (int i = 1; Some(i &lt;= (int) Math.sqrt(x) + 1); i++))<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "67": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "69": "<(IDENTIFIER,i,i &lt;= (int) Math.sqrt(x) + 1)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.cast,(int) Math.sqrt(x))<SUB>11</SUB>>", "73": "<(sqrt,Math.sqrt(x))<SUB>11</SUB>>", "75": "<(IDENTIFIER,x,Math.sqrt(x))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.logicalOr,i * i * 2 == x || i * i == x)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.multiplication,i * i * 2)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,i * i)<SUB>12</SUB>>", "87": "<(LITERAL,2,i * i * 2)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.equals,i * i == x)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i * i)<SUB>12</SUB>>", "93": "<(IDENTIFIER,x,i * i == x)<SUB>12</SUB>>", "95": "<(println,println(&quot;YES&quot;))<SUB>13</SUB>>", "97": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>13</SUB>>", "99": "<(IDENTIFIER,check,check = true)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,break;,break;)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.logicalNot,!check)<SUB>16</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "107": "<(IDENTIFIER,pw,println(&quot;NO&quot;))<SUB>17</SUB>>", "109": "<(close,close())<SUB>23</SUB>>", "111": "<(MODIFIER,PUBLIC)>", "113": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}