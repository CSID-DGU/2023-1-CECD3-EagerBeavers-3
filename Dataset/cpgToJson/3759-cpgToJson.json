{"edges": [["23", "25"], ["23", "527"], ["23", "528"], ["23", "529"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "50"], ["25", "51"], ["25", "55"], ["25", "106"], ["25", "107"], ["25", "114"], ["25", "115"], ["25", "122"], ["25", "154"], ["25", "186"], ["25", "187"], ["25", "197"], ["25", "241"], ["25", "474"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["33", "36"], ["33", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "61"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "105"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "6"], ["72", "73"], ["72", "76"], ["72", "77"], ["72", "78"], ["72", "81"], ["72", "100"], ["73", "74"], ["73", "75"], ["76", "5"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "143"], ["133", "145"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "164"], ["154", "166"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "195"], ["189", "196"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["197", "198"], ["197", "199"], ["197", "202"], ["197", "205"], ["197", "207"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "229"], ["219", "231"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["231", "232"], ["232", "233"], ["232", "240"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["241", "242"], ["241", "243"], ["241", "246"], ["241", "251"], ["241", "253"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["253", "254"], ["254", "255"], ["254", "256"], ["254", "259"], ["254", "262"], ["254", "264"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["262", "263"], ["264", "265"], ["265", "266"], ["265", "267"], ["265", "270"], ["265", "273"], ["265", "275"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["275", "276"], ["275", "277"], ["275", "286"], ["275", "334"], ["275", "380"], ["275", "428"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "285"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["286", "287"], ["286", "312"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "301"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "300"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "311"], ["302", "303"], ["302", "308"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["312", "313"], ["313", "314"], ["313", "325"], ["314", "315"], ["314", "324"], ["315", "316"], ["315", "321"], ["316", "317"], ["316", "318"], ["318", "319"], ["318", "320"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "333"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "332"], ["334", "335"], ["334", "360"], ["335", "336"], ["335", "341"], ["336", "337"], ["336", "338"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "349"], ["342", "343"], ["342", "344"], ["344", "345"], ["344", "348"], ["345", "346"], ["345", "347"], ["349", "350"], ["349", "359"], ["350", "351"], ["350", "356"], ["351", "352"], ["351", "353"], ["353", "354"], ["353", "355"], ["356", "357"], ["356", "358"], ["360", "361"], ["361", "362"], ["361", "373"], ["362", "363"], ["362", "372"], ["363", "364"], ["363", "369"], ["364", "365"], ["364", "366"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "371"], ["373", "374"], ["373", "375"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "406"], ["381", "382"], ["381", "385"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "395"], ["386", "387"], ["386", "388"], ["388", "389"], ["388", "392"], ["389", "390"], ["389", "391"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "403"], ["396", "397"], ["396", "402"], ["397", "398"], ["397", "399"], ["399", "400"], ["399", "401"], ["403", "404"], ["403", "405"], ["406", "407"], ["407", "408"], ["407", "419"], ["408", "409"], ["408", "416"], ["409", "410"], ["409", "415"], ["410", "411"], ["410", "412"], ["412", "413"], ["412", "414"], ["416", "417"], ["416", "418"], ["419", "420"], ["419", "421"], ["421", "422"], ["421", "425"], ["422", "423"], ["422", "424"], ["425", "426"], ["425", "427"], ["428", "429"], ["428", "454"], ["429", "430"], ["429", "435"], ["430", "431"], ["430", "432"], ["432", "433"], ["432", "434"], ["435", "436"], ["435", "443"], ["436", "437"], ["436", "438"], ["438", "439"], ["438", "442"], ["439", "440"], ["439", "441"], ["443", "444"], ["443", "451"], ["444", "445"], ["444", "450"], ["445", "446"], ["445", "447"], ["447", "448"], ["447", "449"], ["451", "452"], ["451", "453"], ["454", "455"], ["455", "456"], ["455", "467"], ["456", "457"], ["456", "464"], ["457", "458"], ["457", "463"], ["458", "459"], ["458", "460"], ["460", "461"], ["460", "462"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "469"], ["469", "470"], ["469", "473"], ["470", "471"], ["470", "472"], ["474", "475"], ["474", "476"], ["474", "479"], ["474", "482"], ["474", "484"], ["476", "477"], ["476", "478"], ["479", "480"], ["479", "481"], ["482", "483"], ["484", "8"], ["484", "485"], ["484", "488"], ["484", "489"], ["484", "490"], ["484", "493"], ["484", "522"], ["485", "486"], ["485", "487"], ["488", "7"], ["490", "491"], ["490", "492"], ["493", "494"], ["493", "495"], ["493", "498"], ["493", "501"], ["493", "503"], ["495", "496"], ["495", "497"], ["498", "499"], ["498", "500"], ["501", "502"], ["503", "504"], ["503", "519"], ["504", "505"], ["504", "506"], ["506", "507"], ["506", "508"], ["508", "509"], ["508", "518"], ["509", "510"], ["509", "517"], ["510", "511"], ["510", "516"], ["511", "512"], ["511", "513"], ["513", "514"], ["513", "515"], ["519", "520"], ["519", "521"], ["522", "523"], ["522", "526"], ["523", "524"], ["523", "525"], ["26", "32"], ["29", "37"], ["33", "43"], ["41", "48"], ["46", "53"], ["51", "57"], ["107", "118"], ["115", "124"], ["187", "199"], ["28", "26"], ["30", "29"], ["37", "33"], ["43", "41"], ["48", "46"], ["53", "51"], ["56", "64"], ["56", "111"], ["109", "107"], ["117", "115"], ["124", "127"], ["127", "135"], ["127", "156"], ["130", "127"], ["156", "161"], ["159", "169"], ["159", "191"], ["164", "161"], ["189", "187"], ["199", "202"], ["202", "210"], ["202", "243"], ["205", "202"], ["243", "248"], ["246", "256"], ["246", "476"], ["251", "248"], ["476", "479"], ["479", "529"], ["479", "487"], ["482", "479"], ["32", "30"], ["57", "56"], ["105", "529"], ["111", "109"], ["118", "117"], ["161", "159"], ["190", "189"], ["248", "246"], ["485", "488"], ["488", "490"], ["490", "495"], ["522", "482"], ["64", "67"], ["67", "105"], ["67", "75"], ["70", "67"], ["135", "140"], ["138", "148"], ["138", "130"], ["143", "140"], ["169", "172"], ["172", "180"], ["172", "164"], ["175", "172"], ["191", "190"], ["210", "213"], ["213", "221"], ["213", "205"], ["216", "213"], ["256", "259"], ["259", "267"], ["259", "251"], ["262", "259"], ["487", "485"], ["495", "498"], ["498", "513"], ["498", "525"], ["501", "498"], ["523", "522"], ["73", "76"], ["76", "78"], ["78", "83"], ["100", "70"], ["140", "138"], ["146", "143"], ["178", "175"], ["504", "519"], ["519", "501"], ["525", "523"], ["75", "73"], ["83", "86"], ["86", "94"], ["86", "103"], ["89", "86"], ["101", "100"], ["147", "152"], ["152", "146"], ["179", "184"], ["184", "178"], ["221", "226"], ["224", "235"], ["224", "216"], ["229", "226"], ["267", "270"], ["270", "281"], ["270", "262"], ["273", "270"], ["506", "504"], ["92", "97"], ["97", "89"], ["103", "101"], ["148", "147"], ["180", "179"], ["226", "224"], ["232", "229"], ["277", "288"], ["508", "506"], ["94", "92"], ["233", "232"], ["279", "277"], ["287", "318"], ["287", "338"], ["335", "366"], ["335", "382"], ["381", "412"], ["381", "432"], ["429", "460"], ["429", "273"], ["509", "508"], ["234", "233"], ["280", "279"], ["288", "287"], ["288", "297"], ["291", "287"], ["313", "338"], ["336", "335"], ["336", "345"], ["341", "335"], ["361", "382"], ["382", "381"], ["382", "389"], ["385", "381"], ["407", "432"], ["430", "429"], ["430", "439"], ["435", "429"], ["455", "273"], ["510", "509"], ["235", "234"], ["281", "280"], ["292", "305"], ["301", "291"], ["314", "330"], ["325", "313"], ["338", "336"], ["342", "353"], ["349", "341"], ["362", "376"], ["373", "361"], ["386", "399"], ["395", "385"], ["408", "422"], ["419", "407"], ["432", "430"], ["436", "447"], ["443", "435"], ["456", "470"], ["467", "455"], ["511", "510"], ["294", "292"], ["302", "301"], ["315", "314"], ["327", "325"], ["344", "342"], ["350", "349"], ["363", "362"], ["375", "373"], ["388", "386"], ["396", "403"], ["403", "395"], ["409", "416"], ["416", "408"], ["421", "419"], ["438", "436"], ["444", "451"], ["451", "443"], ["457", "464"], ["464", "456"], ["469", "467"], ["513", "511"], ["295", "294"], ["303", "308"], ["308", "302"], ["316", "321"], ["321", "315"], ["328", "327"], ["345", "344"], ["351", "356"], ["356", "350"], ["364", "369"], ["369", "363"], ["376", "375"], ["389", "392"], ["392", "388"], ["397", "396"], ["410", "409"], ["422", "425"], ["425", "421"], ["439", "438"], ["445", "444"], ["458", "457"], ["470", "469"], ["297", "295"], ["305", "303"], ["318", "316"], ["330", "328"], ["353", "351"], ["366", "364"], ["399", "397"], ["412", "410"], ["447", "445"], ["460", "458"], ["23", "28"], ["105", "529"], ["24", "529"], ["26", "529"], ["29", "529"], ["29", "529"], ["33", "529"], ["33", "529"], ["33", "529"], ["41", "529"], ["46", "529"], ["46", "529"], ["53", "529"], ["51", "529"], ["51", "529"], ["57", "529"], ["56", "529"], ["56", "529"], ["64", "529"], ["67", "529"], ["67", "529"], ["67", "529"], ["73", "529"], ["76", "529"], ["78", "529"], ["78", "529"], ["83", "529"], ["86", "529"], ["86", "529"], ["86", "529"], ["100", "529"], ["100", "529"], ["100", "529"], ["70", "529"], ["92", "529"], ["92", "529"], ["97", "529"], ["97", "529"], ["89", "529"], ["33", "529"], ["23", "24"], ["23", "26"], ["43", "41"], ["48", "46"], ["53", "51"], ["109", "107"], ["109", "107"], ["117", "115"], ["117", "115"], ["189", "187"], ["189", "187"], ["189", "187"], ["26", "29"], ["23", "29"], ["29", "33"], ["23", "33"], ["37", "33"], ["37", "33"], ["23", "124"], ["23", "156"], ["23", "199"], ["23", "243"], ["23", "476"], ["23", "37"], ["23", "43"], ["43", "48"], ["23", "48"], ["48", "53"], ["23", "53"], ["57", "56"], ["57", "56"], ["23", "56"], ["23", "105"], ["41", "109"], ["23", "109"], ["111", "109"], ["111", "109"], ["118", "117"], ["118", "117"], ["111", "117"], ["23", "117"], ["124", "127"], ["130", "127"], ["23", "127"], ["118", "127"], ["127", "130"], ["23", "130"], ["156", "159"], ["164", "159"], ["23", "159"], ["161", "159"], ["161", "159"], ["159", "164"], ["23", "164"], ["191", "189"], ["191", "189"], ["23", "189"], ["161", "189"], ["117", "189"], ["172", "189"], ["140", "189"], ["199", "202"], ["205", "202"], ["23", "202"], ["189", "202"], ["202", "205"], ["23", "205"], ["243", "246"], ["251", "246"], ["23", "246"], ["248", "246"], ["248", "246"], ["246", "251"], ["23", "251"], ["476", "479"], ["482", "479"], ["23", "479"], ["202", "479"], ["259", "479"], ["479", "482"], ["23", "482"], ["23", "485"], ["23", "490"], ["51", "57"], ["23", "57"], ["23", "64"], ["46", "111"], ["23", "111"], ["109", "118"], ["23", "118"], ["23", "135"], ["127", "161"], ["23", "161"], ["23", "169"], ["191", "190"], ["191", "190"], ["23", "190"], ["23", "210"], ["191", "248"], ["226", "248"], ["23", "248"], ["23", "256"], ["485", "488"], ["23", "488"], ["23", "495"], ["488", "522"], ["504", "522"], ["23", "522"], ["64", "67"], ["70", "67"], ["23", "67"], ["41", "67"], ["67", "70"], ["23", "70"], ["23", "73"], ["23", "78"], ["135", "138"], ["143", "138"], ["23", "138"], ["140", "138"], ["140", "138"], ["138", "143"], ["23", "143"], ["152", "146"], ["169", "172"], ["175", "172"], ["23", "172"], ["117", "172"], ["140", "172"], ["172", "175"], ["23", "175"], ["184", "178"], ["57", "191"], ["23", "191"], ["210", "213"], ["216", "213"], ["23", "213"], ["189", "213"], ["213", "216"], ["23", "216"], ["256", "259"], ["262", "259"], ["23", "259"], ["202", "259"], ["338", "259"], ["259", "262"], ["336", "262"], ["23", "262"], ["495", "498"], ["501", "498"], ["23", "498"], ["189", "498"], ["270", "498"], ["213", "498"], ["498", "501"], ["23", "501"], ["23", "519"], ["73", "76"], ["23", "76"], ["23", "83"], ["76", "100"], ["92", "100"], ["23", "100"], ["117", "140"], ["23", "140"], ["23", "221"], ["23", "267"], ["488", "504"], ["23", "504"], ["490", "504"], ["519", "504"], ["508", "504"], ["508", "504"], ["83", "86"], ["89", "86"], ["23", "86"], ["46", "86"], ["86", "89"], ["23", "89"], ["23", "97"], ["53", "152"], ["23", "152"], ["53", "184"], ["152", "184"], ["23", "184"], ["221", "224"], ["229", "224"], ["23", "224"], ["226", "224"], ["226", "224"], ["224", "229"], ["23", "229"], ["23", "232"], ["267", "270"], ["273", "270"], ["23", "270"], ["189", "270"], ["432", "270"], ["213", "270"], ["430", "273"], ["23", "273"], ["490", "506"], ["519", "506"], ["23", "506"], ["508", "506"], ["508", "506"], ["76", "92"], ["23", "92"], ["78", "92"], ["97", "92"], ["191", "226"], ["23", "226"], ["23", "508"], ["78", "94"], ["97", "94"], ["23", "94"], ["288", "287"], ["288", "287"], ["291", "287"], ["291", "287"], ["277", "313"], ["23", "313"], ["336", "335"], ["336", "335"], ["341", "335"], ["341", "335"], ["277", "361"], ["23", "361"], ["382", "381"], ["382", "381"], ["385", "381"], ["385", "381"], ["277", "407"], ["23", "407"], ["430", "429"], ["430", "429"], ["435", "429"], ["435", "429"], ["277", "455"], ["23", "455"], ["259", "288"], ["336", "288"], ["23", "288"], ["277", "291"], ["23", "291"], ["313", "291"], ["288", "336"], ["308", "336"], ["330", "336"], ["23", "336"], ["338", "336"], ["338", "336"], ["277", "341"], ["23", "341"], ["361", "341"], ["270", "382"], ["23", "382"], ["277", "385"], ["23", "385"], ["407", "385"], ["382", "430"], ["403", "430"], ["425", "430"], ["23", "430"], ["432", "430"], ["432", "430"], ["277", "435"], ["23", "435"], ["455", "435"], ["277", "292"], ["23", "292"], ["277", "325"], ["23", "325"], ["259", "338"], ["23", "338"], ["277", "342"], ["23", "342"], ["277", "373"], ["23", "373"], ["277", "386"], ["23", "386"], ["277", "419"], ["23", "419"], ["270", "432"], ["23", "432"], ["277", "436"], ["23", "436"], ["277", "467"], ["23", "467"], ["392", "403"], ["23", "403"], ["382", "416"], ["403", "416"], ["23", "416"], ["430", "451"], ["23", "451"], ["430", "464"], ["23", "464"], ["248", "513"], ["23", "513"], ["297", "308"], ["23", "308"], ["288", "321"], ["308", "321"], ["23", "321"], ["336", "356"], ["23", "356"], ["336", "369"], ["23", "369"], ["382", "392"], ["23", "392"], ["416", "425"], ["23", "425"], ["288", "297"], ["23", "297"], ["246", "305"], ["23", "305"], ["246", "318"], ["23", "318"], ["321", "330"], ["23", "330"], ["246", "353"], ["23", "353"], ["246", "366"], ["23", "366"], ["246", "399"], ["23", "399"], ["246", "412"], ["23", "412"], ["246", "447"], ["23", "447"], ["246", "460"], ["23", "460"], ["56", "243"], ["56", "190"], ["56", "118"], ["56", "476"], ["56", "479"], ["56", "117"], ["56", "107"], ["56", "115"], ["56", "189"], ["56", "187"], ["56", "246"], ["56", "105"], ["56", "161"], ["56", "127"], ["56", "202"], ["56", "159"], ["56", "199"], ["56", "109"], ["56", "64"], ["56", "67"], ["56", "191"], ["56", "111"], ["56", "248"], ["56", "156"], ["56", "124"], ["127", "140"], ["127", "130"], ["127", "138"], ["127", "127"], ["127", "135"], ["159", "172"], ["159", "169"], ["159", "161"], ["159", "159"], ["159", "164"], ["202", "213"], ["202", "202"], ["202", "205"], ["202", "210"], ["246", "256"], ["246", "259"], ["246", "246"], ["246", "251"], ["246", "248"], ["479", "479"], ["479", "498"], ["479", "482"], ["479", "488"], ["479", "522"], ["479", "490"], ["479", "525"], ["479", "523"], ["479", "485"], ["479", "495"], ["479", "487"], ["67", "76"], ["67", "100"], ["67", "73"], ["67", "75"], ["67", "103"], ["67", "78"], ["67", "70"], ["67", "86"], ["67", "67"], ["67", "101"], ["67", "83"], ["138", "148"], ["138", "152"], ["138", "140"], ["138", "146"], ["138", "138"], ["138", "147"], ["138", "143"], ["172", "172"], ["172", "179"], ["172", "184"], ["172", "180"], ["172", "178"], ["172", "175"], ["213", "224"], ["213", "216"], ["213", "226"], ["213", "213"], ["213", "221"], ["259", "259"], ["259", "270"], ["259", "262"], ["259", "267"], ["498", "509"], ["498", "498"], ["498", "513"], ["498", "506"], ["498", "508"], ["498", "501"], ["498", "511"], ["498", "510"], ["498", "504"], ["498", "519"], ["86", "89"], ["86", "86"], ["86", "94"], ["86", "92"], ["86", "97"], ["224", "224"], ["224", "232"], ["224", "234"], ["224", "226"], ["224", "229"], ["224", "233"], ["224", "235"], ["270", "430"], ["270", "336"], ["270", "429"], ["270", "273"], ["270", "280"], ["270", "287"], ["270", "270"], ["270", "432"], ["270", "338"], ["270", "281"], ["270", "288"], ["270", "382"], ["270", "335"], ["270", "279"], ["270", "277"], ["270", "381"], ["287", "315"], ["287", "316"], ["287", "325"], ["287", "318"], ["287", "327"], ["287", "313"], ["287", "328"], ["287", "321"], ["287", "314"], ["287", "330"], ["335", "376"], ["335", "362"], ["335", "364"], ["335", "373"], ["335", "375"], ["335", "361"], ["335", "363"], ["335", "366"], ["335", "369"], ["381", "408"], ["381", "412"], ["381", "416"], ["381", "425"], ["381", "409"], ["381", "419"], ["381", "407"], ["381", "410"], ["381", "421"], ["381", "422"], ["429", "460"], ["429", "456"], ["429", "458"], ["429", "469"], ["429", "464"], ["429", "457"], ["429", "470"], ["429", "467"], ["429", "455"], ["288", "292"], ["288", "308"], ["288", "305"], ["288", "297"], ["288", "291"], ["288", "301"], ["288", "294"], ["288", "303"], ["288", "302"], ["288", "295"], ["336", "353"], ["336", "345"], ["336", "344"], ["336", "356"], ["336", "349"], ["336", "351"], ["336", "342"], ["336", "341"], ["336", "350"], ["382", "392"], ["382", "388"], ["382", "397"], ["382", "399"], ["382", "403"], ["382", "396"], ["382", "389"], ["382", "385"], ["382", "386"], ["382", "395"], ["430", "439"], ["430", "451"], ["430", "444"], ["430", "435"], ["430", "447"], ["430", "443"], ["430", "436"], ["430", "438"], ["430", "445"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new DataInputStream(System.in))<SUB>4</SUB>>", "28": "<(&lt;operator&gt;.alloc,new DataInputStream(System.in))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new DataInputStream(System.in))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new DataInputStream(System.in))<SUB>4</SUB>>", "33": "<(read,read(buf, 0, 1 &lt;&lt; 26))<SUB>9</SUB>>", "35": "<(IDENTIFIER,buf,read(buf, 0, 1 &lt;&lt; 26))<SUB>9</SUB>>", "37": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 26)<SUB>9</SUB>>", "39": "<(LITERAL,26,1 &lt;&lt; 26)<SUB>9</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nni())<SUB>11</SUB>>", "43": "<(nni,nni())<SUB>11</SUB>>", "45": "<(LOCAL,int m: int)<SUB>12</SUB>>", "47": "<(IDENTIFIER,m,int m = nni())<SUB>12</SUB>>", "49": "<(IDENTIFIER,this,nni())<SUB>12</SUB>>", "51": "<(&lt;operator&gt;.assignment,int k = nni())<SUB>13</SUB>>", "53": "<(nni,nni())<SUB>13</SUB>>", "55": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>15</SUB>>", "57": "<(&lt;operator&gt;.modulo,k % 2)<SUB>15</SUB>>", "59": "<(LITERAL,2,k % 2)<SUB>15</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "63": "<(LOCAL,int i: int)<SUB>16</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>16</SUB>>", "69": "<(IDENTIFIER,n,i &lt; n)<SUB>16</SUB>>", "71": "<(IDENTIFIER,i,++i)<SUB>16</SUB>>", "6": "<(LOCAL,StringBuilder ans: java.lang.StringBuilder)<SUB>17</SUB>>", "74": "<(IDENTIFIER,ans,StringBuilder ans = new StringBuilder())<SUB>17</SUB>>", "76": "<(&lt;init&gt;,new StringBuilder())<SUB>17</SUB>>", "77": "<(LOCAL,String sp: java.lang.String)<SUB>18</SUB>>", "79": "<(IDENTIFIER,sp,String sp = &quot;&quot;)<SUB>18</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>19</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>19</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>19</SUB>>", "87": "<(IDENTIFIER,j,j &lt; m)<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.preIncrement,++j)<SUB>19</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "93": "<(IDENTIFIER,ans,ans.append(sp + &quot;-1&quot;))<SUB>20</SUB>>", "95": "<(IDENTIFIER,sp,sp + &quot;-1&quot;)<SUB>20</SUB>>", "97": "<(&lt;operator&gt;.assignment,sp = &quot; &quot;)<SUB>21</SUB>>", "99": "<(LITERAL,&quot; &quot;,sp = &quot; &quot;)<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "103": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "105": "<(RETURN,return;,return;)<SUB>25</SUB>>", "107": "<(&lt;operator&gt;.assignment,int[][] lr = new int[n][m - 1])<SUB>28</SUB>>", "109": "<(&lt;operator&gt;.alloc,new int[n][m - 1])>", "111": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>28</SUB>>", "113": "<(LITERAL,1,m - 1)<SUB>28</SUB>>", "115": "<(&lt;operator&gt;.assignment,int[][] ud = new int[n - 1][m])<SUB>29</SUB>>", "117": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "119": "<(IDENTIFIER,n,n - 1)<SUB>29</SUB>>", "121": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>29</SUB>>", "123": "<(LOCAL,int i: int)<SUB>30</SUB>>", "125": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "127": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>30</SUB>>", "129": "<(IDENTIFIER,n,i &lt; n)<SUB>30</SUB>>", "131": "<(IDENTIFIER,i,++i)<SUB>30</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m - 1); ++j),for (int j = 0; Some(j &lt; m - 1); ++j))<SUB>31</SUB>>", "135": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>31</SUB>>", "137": "<(LITERAL,0,int j = 0)<SUB>31</SUB>>", "139": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>31</SUB>>", "141": "<(IDENTIFIER,m,m - 1)<SUB>31</SUB>>", "143": "<(&lt;operator&gt;.preIncrement,++j)<SUB>31</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,lr[i][j])<SUB>32</SUB>>", "149": "<(IDENTIFIER,lr,lr[i][j] = nni())<SUB>32</SUB>>", "151": "<(IDENTIFIER,j,lr[i][j] = nni())<SUB>32</SUB>>", "153": "<(IDENTIFIER,this,nni())<SUB>32</SUB>>", "155": "<(LOCAL,int i: int)<SUB>35</SUB>>", "157": "<(IDENTIFIER,i,int i = 0)<SUB>35</SUB>>", "159": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>35</SUB>>", "161": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>35</SUB>>", "163": "<(LITERAL,1,n - 1)<SUB>35</SUB>>", "165": "<(IDENTIFIER,i,++i)<SUB>35</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>36</SUB>>", "169": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "171": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "173": "<(IDENTIFIER,j,j &lt; m)<SUB>36</SUB>>", "175": "<(&lt;operator&gt;.preIncrement,++j)<SUB>36</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,ud[i][j])<SUB>37</SUB>>", "181": "<(IDENTIFIER,ud,ud[i][j] = nni())<SUB>37</SUB>>", "183": "<(IDENTIFIER,j,ud[i][j] = nni())<SUB>37</SUB>>", "185": "<(IDENTIFIER,this,nni())<SUB>37</SUB>>", "187": "<(&lt;operator&gt;.assignment,int[][][] ans = new int[k / 2 + 1][n][m])<SUB>41</SUB>>", "189": "<(&lt;operator&gt;.alloc,new int[k / 2 + 1][n][m])>", "191": "<(&lt;operator&gt;.division,k / 2)<SUB>41</SUB>>", "193": "<(LITERAL,2,k / 2)<SUB>41</SUB>>", "195": "<(IDENTIFIER,n,new int[k / 2 + 1][n][m])<SUB>41</SUB>>", "197": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>43</SUB>>", "199": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>43</SUB>>", "201": "<(LITERAL,0,int i = 0)<SUB>43</SUB>>", "203": "<(IDENTIFIER,i,i &lt; n)<SUB>43</SUB>>", "205": "<(&lt;operator&gt;.preIncrement,++i)<SUB>43</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "209": "<(LOCAL,int j: int)<SUB>44</SUB>>", "211": "<(IDENTIFIER,j,int j = 0)<SUB>44</SUB>>", "213": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>44</SUB>>", "215": "<(IDENTIFIER,m,j &lt; m)<SUB>44</SUB>>", "217": "<(IDENTIFIER,j,++j)<SUB>44</SUB>>", "219": "<(CONTROL_STRUCTURE,for (int q = 1; Some(q &lt;= k / 2); ++q),for (int q = 1; Some(q &lt;= k / 2); ++q))<SUB>45</SUB>>", "221": "<(&lt;operator&gt;.assignment,int q = 1)<SUB>45</SUB>>", "223": "<(LITERAL,1,int q = 1)<SUB>45</SUB>>", "225": "<(IDENTIFIER,q,q &lt;= k / 2)<SUB>45</SUB>>", "227": "<(IDENTIFIER,k,k / 2)<SUB>45</SUB>>", "229": "<(&lt;operator&gt;.preIncrement,++q)<SUB>45</SUB>>", "231": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,ans[q][i][j])<SUB>46</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,ans[q])<SUB>46</SUB>>", "237": "<(IDENTIFIER,q,ans[q][i][j] = 123456789)<SUB>46</SUB>>", "239": "<(IDENTIFIER,j,ans[q][i][j] = 123456789)<SUB>46</SUB>>", "241": "<(CONTROL_STRUCTURE,for (int uq = 0; Some(uq &lt; k / 2); ++uq),for (int uq = 0; Some(uq &lt; k / 2); ++uq))<SUB>51</SUB>>", "243": "<(&lt;operator&gt;.assignment,int uq = 0)<SUB>51</SUB>>", "245": "<(LITERAL,0,int uq = 0)<SUB>51</SUB>>", "247": "<(IDENTIFIER,uq,uq &lt; k / 2)<SUB>51</SUB>>", "249": "<(IDENTIFIER,k,k / 2)<SUB>51</SUB>>", "251": "<(&lt;operator&gt;.preIncrement,++uq)<SUB>51</SUB>>", "253": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>>", "255": "<(LOCAL,int ui: int)<SUB>52</SUB>>", "257": "<(IDENTIFIER,ui,int ui = 0)<SUB>52</SUB>>", "259": "<(&lt;operator&gt;.lessThan,ui &lt; n)<SUB>52</SUB>>", "261": "<(IDENTIFIER,n,ui &lt; n)<SUB>52</SUB>>", "263": "<(IDENTIFIER,ui,++ui)<SUB>52</SUB>>", "265": "<(CONTROL_STRUCTURE,for (int uj = 0; Some(uj &lt; m); ++uj),for (int uj = 0; Some(uj &lt; m); ++uj))<SUB>53</SUB>>", "267": "<(&lt;operator&gt;.assignment,int uj = 0)<SUB>53</SUB>>", "269": "<(LITERAL,0,int uj = 0)<SUB>53</SUB>>", "271": "<(IDENTIFIER,uj,uj &lt; m)<SUB>53</SUB>>", "273": "<(&lt;operator&gt;.preIncrement,++uj)<SUB>53</SUB>>", "275": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "277": "<(&lt;operator&gt;.assignment,int w = ans[uq][ui][uj])<SUB>54</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,ans[uq][ui][uj])<SUB>54</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,ans[uq])<SUB>54</SUB>>", "283": "<(IDENTIFIER,uq,int w = ans[uq][ui][uj])<SUB>54</SUB>>", "285": "<(IDENTIFIER,uj,int w = ans[uq][ui][uj])<SUB>54</SUB>>", "287": "<(&lt;operator&gt;.logicalAnd,ui &gt; 0 &amp;&amp; w + ud[ui - 1][uj] &lt; ans[uq + 1][ui - 1][uj])<SUB>55</SUB>>", "289": "<(IDENTIFIER,ui,ui &gt; 0)<SUB>55</SUB>>", "291": "<(&lt;operator&gt;.lessThan,w + ud[ui - 1][uj] &lt; ans[uq + 1][ui - 1][uj])<SUB>55</SUB>>", "293": "<(IDENTIFIER,w,w + ud[ui - 1][uj])<SUB>55</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,ud[ui - 1])<SUB>55</SUB>>", "297": "<(&lt;operator&gt;.subtraction,ui - 1)<SUB>55</SUB>>", "299": "<(LITERAL,1,ui - 1)<SUB>55</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui - 1][uj])<SUB>55</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,ans[uq + 1])<SUB>55</SUB>>", "305": "<(&lt;operator&gt;.addition,uq + 1)<SUB>55</SUB>>", "307": "<(LITERAL,1,uq + 1)<SUB>55</SUB>>", "309": "<(IDENTIFIER,ui,ui - 1)<SUB>55</SUB>>", "311": "<(IDENTIFIER,uj,w + ud[ui - 1][uj] &lt; ans[uq + 1][ui - 1][uj])<SUB>55</SUB>>", "313": "<(&lt;operator&gt;.assignment,ans[uq + 1][ui - 1][uj] = w + ud[ui - 1][uj])<SUB>56</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui - 1])<SUB>56</SUB>>", "317": "<(IDENTIFIER,ans,ans[uq + 1][ui - 1][uj] = w + ud[ui - 1][uj])<SUB>56</SUB>>", "319": "<(IDENTIFIER,uq,uq + 1)<SUB>56</SUB>>", "321": "<(&lt;operator&gt;.subtraction,ui - 1)<SUB>56</SUB>>", "323": "<(LITERAL,1,ui - 1)<SUB>56</SUB>>", "325": "<(&lt;operator&gt;.addition,w + ud[ui - 1][uj])<SUB>56</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,ud[ui - 1][uj])<SUB>56</SUB>>", "329": "<(IDENTIFIER,ud,w + ud[ui - 1][uj])<SUB>56</SUB>>", "331": "<(IDENTIFIER,ui,ui - 1)<SUB>56</SUB>>", "333": "<(IDENTIFIER,uj,w + ud[ui - 1][uj])<SUB>56</SUB>>", "335": "<(&lt;operator&gt;.logicalAnd,ui &lt; n - 1 &amp;&amp; w + ud[ui][uj] &lt; ans[uq + 1][ui + 1][uj])<SUB>58</SUB>>", "337": "<(IDENTIFIER,ui,ui &lt; n - 1)<SUB>58</SUB>>", "339": "<(IDENTIFIER,n,n - 1)<SUB>58</SUB>>", "341": "<(&lt;operator&gt;.lessThan,w + ud[ui][uj] &lt; ans[uq + 1][ui + 1][uj])<SUB>58</SUB>>", "343": "<(IDENTIFIER,w,w + ud[ui][uj])<SUB>58</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,ud[ui])<SUB>58</SUB>>", "347": "<(IDENTIFIER,ui,w + ud[ui][uj])<SUB>58</SUB>>", "349": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui + 1][uj])<SUB>58</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,ans[uq + 1])<SUB>58</SUB>>", "353": "<(&lt;operator&gt;.addition,uq + 1)<SUB>58</SUB>>", "355": "<(LITERAL,1,uq + 1)<SUB>58</SUB>>", "357": "<(IDENTIFIER,ui,ui + 1)<SUB>58</SUB>>", "359": "<(IDENTIFIER,uj,w + ud[ui][uj] &lt; ans[uq + 1][ui + 1][uj])<SUB>58</SUB>>", "361": "<(&lt;operator&gt;.assignment,ans[uq + 1][ui + 1][uj] = w + ud[ui][uj])<SUB>59</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui + 1])<SUB>59</SUB>>", "365": "<(IDENTIFIER,ans,ans[uq + 1][ui + 1][uj] = w + ud[ui][uj])<SUB>59</SUB>>", "367": "<(IDENTIFIER,uq,uq + 1)<SUB>59</SUB>>", "369": "<(&lt;operator&gt;.addition,ui + 1)<SUB>59</SUB>>", "371": "<(LITERAL,1,ui + 1)<SUB>59</SUB>>", "373": "<(&lt;operator&gt;.addition,w + ud[ui][uj])<SUB>59</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,ud[ui][uj])<SUB>59</SUB>>", "377": "<(IDENTIFIER,ud,w + ud[ui][uj])<SUB>59</SUB>>", "379": "<(IDENTIFIER,uj,w + ud[ui][uj])<SUB>59</SUB>>", "381": "<(&lt;operator&gt;.logicalAnd,uj &gt; 0 &amp;&amp; w + lr[ui][uj - 1] &lt; ans[uq + 1][ui][uj - 1])<SUB>61</SUB>>", "383": "<(IDENTIFIER,uj,uj &gt; 0)<SUB>61</SUB>>", "385": "<(&lt;operator&gt;.lessThan,w + lr[ui][uj - 1] &lt; ans[uq + 1][ui][uj - 1])<SUB>61</SUB>>", "387": "<(IDENTIFIER,w,w + lr[ui][uj - 1])<SUB>61</SUB>>", "389": "<(&lt;operator&gt;.indexAccess,lr[ui])<SUB>61</SUB>>", "391": "<(IDENTIFIER,ui,w + lr[ui][uj - 1])<SUB>61</SUB>>", "393": "<(IDENTIFIER,uj,uj - 1)<SUB>61</SUB>>", "395": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui][uj - 1])<SUB>61</SUB>>", "397": "<(&lt;operator&gt;.indexAccess,ans[uq + 1])<SUB>61</SUB>>", "399": "<(&lt;operator&gt;.addition,uq + 1)<SUB>61</SUB>>", "401": "<(LITERAL,1,uq + 1)<SUB>61</SUB>>", "403": "<(&lt;operator&gt;.subtraction,uj - 1)<SUB>61</SUB>>", "405": "<(LITERAL,1,uj - 1)<SUB>61</SUB>>", "407": "<(&lt;operator&gt;.assignment,ans[uq + 1][ui][uj - 1] = w + lr[ui][uj - 1])<SUB>62</SUB>>", "409": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui])<SUB>62</SUB>>", "411": "<(IDENTIFIER,ans,ans[uq + 1][ui][uj - 1] = w + lr[ui][uj - 1])<SUB>62</SUB>>", "413": "<(IDENTIFIER,uq,uq + 1)<SUB>62</SUB>>", "415": "<(IDENTIFIER,ui,ans[uq + 1][ui][uj - 1] = w + lr[ui][uj - 1])<SUB>62</SUB>>", "417": "<(IDENTIFIER,uj,uj - 1)<SUB>62</SUB>>", "419": "<(&lt;operator&gt;.addition,w + lr[ui][uj - 1])<SUB>62</SUB>>", "421": "<(&lt;operator&gt;.indexAccess,lr[ui][uj - 1])<SUB>62</SUB>>", "423": "<(IDENTIFIER,lr,w + lr[ui][uj - 1])<SUB>62</SUB>>", "425": "<(&lt;operator&gt;.subtraction,uj - 1)<SUB>62</SUB>>", "427": "<(LITERAL,1,uj - 1)<SUB>62</SUB>>", "429": "<(&lt;operator&gt;.logicalAnd,uj &lt; m - 1 &amp;&amp; w + lr[ui][uj] &lt; ans[uq + 1][ui][uj + 1])<SUB>64</SUB>>", "431": "<(IDENTIFIER,uj,uj &lt; m - 1)<SUB>64</SUB>>", "433": "<(IDENTIFIER,m,m - 1)<SUB>64</SUB>>", "435": "<(&lt;operator&gt;.lessThan,w + lr[ui][uj] &lt; ans[uq + 1][ui][uj + 1])<SUB>64</SUB>>", "437": "<(IDENTIFIER,w,w + lr[ui][uj])<SUB>64</SUB>>", "439": "<(&lt;operator&gt;.indexAccess,lr[ui])<SUB>64</SUB>>", "441": "<(IDENTIFIER,ui,w + lr[ui][uj])<SUB>64</SUB>>", "443": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui][uj + 1])<SUB>64</SUB>>", "445": "<(&lt;operator&gt;.indexAccess,ans[uq + 1])<SUB>64</SUB>>", "447": "<(&lt;operator&gt;.addition,uq + 1)<SUB>64</SUB>>", "449": "<(LITERAL,1,uq + 1)<SUB>64</SUB>>", "451": "<(&lt;operator&gt;.addition,uj + 1)<SUB>64</SUB>>", "453": "<(LITERAL,1,uj + 1)<SUB>64</SUB>>", "455": "<(&lt;operator&gt;.assignment,ans[uq + 1][ui][uj + 1] = w + lr[ui][uj])<SUB>65</SUB>>", "457": "<(&lt;operator&gt;.indexAccess,ans[uq + 1][ui])<SUB>65</SUB>>", "459": "<(IDENTIFIER,ans,ans[uq + 1][ui][uj + 1] = w + lr[ui][uj])<SUB>65</SUB>>", "461": "<(IDENTIFIER,uq,uq + 1)<SUB>65</SUB>>", "463": "<(IDENTIFIER,ui,ans[uq + 1][ui][uj + 1] = w + lr[ui][uj])<SUB>65</SUB>>", "465": "<(IDENTIFIER,uj,uj + 1)<SUB>65</SUB>>", "467": "<(&lt;operator&gt;.addition,w + lr[ui][uj])<SUB>65</SUB>>", "469": "<(&lt;operator&gt;.indexAccess,lr[ui][uj])<SUB>65</SUB>>", "471": "<(IDENTIFIER,lr,w + lr[ui][uj])<SUB>65</SUB>>", "473": "<(IDENTIFIER,uj,w + lr[ui][uj])<SUB>65</SUB>>", "475": "<(LOCAL,int i: int)<SUB>71</SUB>>", "477": "<(IDENTIFIER,i,int i = 0)<SUB>71</SUB>>", "479": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>71</SUB>>", "481": "<(IDENTIFIER,n,i &lt; n)<SUB>71</SUB>>", "483": "<(IDENTIFIER,i,++i)<SUB>71</SUB>>", "8": "<(LOCAL,StringBuilder as: java.lang.StringBuilder)<SUB>72</SUB>>", "486": "<(IDENTIFIER,as,StringBuilder as = new StringBuilder())<SUB>72</SUB>>", "488": "<(&lt;init&gt;,new StringBuilder())<SUB>72</SUB>>", "489": "<(LOCAL,String sp: java.lang.String)<SUB>73</SUB>>", "491": "<(IDENTIFIER,sp,String sp = &quot;&quot;)<SUB>73</SUB>>", "493": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>74</SUB>>", "495": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>74</SUB>>", "497": "<(LITERAL,0,int j = 0)<SUB>74</SUB>>", "499": "<(IDENTIFIER,j,j &lt; m)<SUB>74</SUB>>", "501": "<(&lt;operator&gt;.preIncrement,++j)<SUB>74</SUB>>", "503": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>>", "505": "<(IDENTIFIER,as,as.append(sp + ans[k / 2][i][j] * 2))<SUB>75</SUB>>", "507": "<(IDENTIFIER,sp,sp + ans[k / 2][i][j] * 2)<SUB>75</SUB>>", "509": "<(&lt;operator&gt;.indexAccess,ans[k / 2][i][j])<SUB>75</SUB>>", "511": "<(&lt;operator&gt;.indexAccess,ans[k / 2])<SUB>75</SUB>>", "513": "<(&lt;operator&gt;.division,k / 2)<SUB>75</SUB>>", "515": "<(LITERAL,2,k / 2)<SUB>75</SUB>>", "517": "<(IDENTIFIER,j,ans[k / 2][i][j] * 2)<SUB>75</SUB>>", "519": "<(&lt;operator&gt;.assignment,sp = &quot; &quot;)<SUB>76</SUB>>", "521": "<(LITERAL,&quot; &quot;,sp = &quot; &quot;)<SUB>76</SUB>>", "523": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>78</SUB>>", "525": "<(FIELD_IDENTIFIER,out,out)<SUB>78</SUB>>", "527": "<(MODIFIER,PUBLIC)>", "529": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}