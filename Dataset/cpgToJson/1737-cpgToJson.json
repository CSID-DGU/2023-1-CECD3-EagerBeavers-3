{"edges": [["19", "20"], ["19", "21"], ["19", "156"], ["19", "157"], ["19", "158"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["21", "37"], ["21", "44"], ["21", "45"], ["21", "52"], ["21", "53"], ["21", "57"], ["21", "96"], ["21", "99"], ["21", "100"], ["21", "103"], ["21", "151"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "35"], ["33", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "75"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "74"], ["72", "73"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["79", "95"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "90"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "115"], ["103", "117"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "132"], ["117", "137"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "128"], ["122", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "145"], ["137", "147"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["145", "146"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["22", "28"], ["25", "33"], ["30", "41"], ["37", "49"], ["45", "55"], ["53", "59"], ["96", "100"], ["100", "105"], ["151", "158"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["47", "45"], ["55", "53"], ["59", "62"], ["62", "72"], ["62", "96"], ["65", "62"], ["105", "113"], ["108", "125"], ["108", "154"], ["115", "113"], ["152", "151"], ["28", "26"], ["33", "32"], ["41", "39"], ["49", "47"], ["69", "76"], ["75", "65"], ["110", "108"], ["119", "133"], ["154", "152"], ["71", "69"], ["76", "82"], ["111", "110"], ["121", "119"], ["133", "115"], ["133", "141"], ["138", "145"], ["138", "148"], ["145", "115"], ["72", "71"], ["80", "87"], ["83", "75"], ["113", "111"], ["122", "129"], ["128", "121"], ["139", "138"], ["148", "115"], ["82", "80"], ["85", "92"], ["90", "83"], ["123", "122"], ["129", "128"], ["141", "139"], ["87", "85"], ["92", "90"], ["125", "123"], ["19", "24"], ["20", "158"], ["22", "158"], ["25", "158"], ["25", "158"], ["30", "158"], ["33", "158"], ["32", "158"], ["30", "158"], ["30", "158"], ["39", "158"], ["37", "158"], ["37", "158"], ["45", "158"], ["47", "158"], ["47", "158"], ["45", "158"], ["45", "158"], ["53", "158"], ["53", "158"], ["62", "158"], ["62", "158"], ["96", "158"], ["96", "158"], ["100", "158"], ["105", "158"], ["108", "158"], ["110", "158"], ["108", "158"], ["108", "158"], ["151", "158"], ["151", "158"], ["151", "158"], ["122", "158"], ["121", "158"], ["128", "158"], ["121", "158"], ["119", "158"], ["119", "158"], ["133", "158"], ["133", "158"], ["133", "158"], ["141", "158"], ["141", "158"], ["139", "158"], ["138", "158"], ["138", "158"], ["148", "158"], ["145", "158"], ["115", "158"], ["69", "158"], ["72", "158"], ["71", "158"], ["69", "158"], ["69", "158"], ["75", "158"], ["80", "158"], ["83", "158"], ["85", "158"], ["83", "158"], ["90", "158"], ["90", "158"], ["83", "158"], ["83", "158"], ["75", "158"], ["65", "158"], ["96", "158"], ["139", "158"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["39", "37"], ["39", "37"], ["47", "45"], ["47", "45"], ["55", "53"], ["19", "100"], ["22", "25"], ["19", "25"], ["19", "59"], ["19", "96"], ["53", "96"], ["75", "96"], ["19", "105"], ["100", "151"], ["148", "151"], ["145", "151"], ["19", "151"], ["33", "32"], ["19", "32"], ["19", "39"], ["30", "39"], ["39", "47"], ["19", "47"], ["30", "47"], ["37", "55"], ["19", "55"], ["59", "62"], ["65", "62"], ["19", "62"], ["55", "62"], ["62", "65"], ["19", "65"], ["71", "69"], ["71", "69"], ["80", "75"], ["83", "75"], ["19", "75"], ["105", "108"], ["115", "108"], ["19", "108"], ["110", "108"], ["110", "108"], ["19", "115"], ["108", "115"], ["121", "119"], ["121", "119"], ["25", "33"], ["19", "33"], ["96", "110"], ["19", "110"], ["72", "71"], ["19", "71"], ["19", "80"], ["19", "95"], ["122", "121"], ["128", "121"], ["119", "133"], ["19", "133"], ["45", "133"], ["141", "133"], ["139", "138"], ["139", "138"], ["19", "138"], ["100", "145"], ["148", "145"], ["19", "145"], ["19", "148"], ["33", "72"], ["19", "72"], ["80", "83"], ["19", "83"], ["85", "83"], ["85", "83"], ["90", "83"], ["90", "83"], ["96", "122"], ["96", "128"], ["75", "128"], ["19", "139"], ["141", "139"], ["141", "139"], ["100", "148"], ["145", "148"], ["90", "85"], ["19", "85"], ["69", "85"], ["85", "90"], ["19", "90"], ["69", "90"], ["133", "141"], ["19", "141"], ["133", "141"], ["108", "125"], ["19", "125"], ["62", "75"], ["62", "85"], ["62", "72"], ["62", "69"], ["62", "92"], ["62", "76"], ["62", "65"], ["62", "87"], ["62", "82"], ["62", "90"], ["62", "80"], ["62", "83"], ["62", "71"], ["62", "62"], ["108", "115"], ["108", "113"], ["108", "122"], ["108", "128"], ["108", "119"], ["108", "121"], ["108", "123"], ["108", "129"], ["108", "110"], ["108", "108"], ["108", "125"], ["108", "111"], ["108", "133"], ["133", "141"], ["133", "138"], ["133", "139"], ["138", "145"], ["138", "148"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String[] fline: java.lang.String[])<SUB>3</SUB>>", "31": "<(IDENTIFIER,fline,String[] fline = split(&quot;\\\\s+&quot;))<SUB>3</SUB>>", "33": "<(nextLine,nextLine())<SUB>3</SUB>>", "35": "<(LITERAL,&quot;\\\\s+&quot;,split(&quot;\\\\s+&quot;))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int N = Integer.parseInt(fline[0]))<SUB>4</SUB>>", "39": "<(parseInt,Integer.parseInt(fline[0]))<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,fline[0])<SUB>4</SUB>>", "43": "<(LITERAL,0,Integer.parseInt(fline[0]))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int T = Integer.parseInt(fline[1]))<SUB>5</SUB>>", "47": "<(parseInt,Integer.parseInt(fline[1]))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,fline[1])<SUB>5</SUB>>", "51": "<(LITERAL,1,Integer.parseInt(fline[1]))<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,ANY houses = new House[N])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.alloc,new House[N])>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i &lt; N)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,String[] house = split(&quot;\\\\s+&quot;))<SUB>9</SUB>>", "71": "<(split,split(&quot;\\\\s+&quot;))<SUB>9</SUB>>", "73": "<(IDENTIFIER,in,nextLine())<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,houses[i] = new House(Double.parseDouble(house[0]), Double.parseDouble(house[1])))<SUB>10</SUB>>", "77": "<(IDENTIFIER,houses,houses[i] = new House(Double.parseDouble(house[0]), Double.parseDouble(house[1])))<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "83": "<(&lt;init&gt;,new House(Double.parseDouble(house[0]), Double.parseDouble(house[1])))<SUB>10</SUB>>", "85": "<(parseDouble,Double.parseDouble(house[0]))<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,house[0])<SUB>10</SUB>>", "89": "<(LITERAL,0,Double.parseDouble(house[0]))<SUB>10</SUB>>", "91": "<(IDENTIFIER,Double,Double.parseDouble(house[1]))<SUB>10</SUB>>", "93": "<(IDENTIFIER,house,Double.parseDouble(house[1]))<SUB>10</SUB>>", "95": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "97": "<(IDENTIFIER,Arrays,sort(houses))<SUB>12</SUB>>", "99": "<(LOCAL,int count: int)<SUB>13</SUB>>", "101": "<(IDENTIFIER,count,int count = 2)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; houses.length - 1); i++),for (int i = 0; Some(i &lt; houses.length - 1); i++))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "107": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "109": "<(IDENTIFIER,i,i &lt; houses.length - 1)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.fieldAccess,houses.length)<SUB>14</SUB>>", "113": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.assignment,double diff = houses[i + 1].getLeft() - houses[i].getRight())<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.subtraction,houses[i + 1].getLeft() - houses[i].getRight())<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,houses[i + 1])<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "127": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,houses[i])<SUB>16</SUB>>", "131": "<(IDENTIFIER,i,getRight())<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.lessThan,diff &lt; T)<SUB>17</SUB>>", "135": "<(IDENTIFIER,T,diff &lt; T)<SUB>17</SUB>>", "137": "<(CONTROL_STRUCTURE,if (Math.abs(diff - T) &lt; 1E-12),if (Math.abs(diff - T) &lt; 1E-12))<SUB>18</SUB>>", "139": "<(abs,Math.abs(diff - T))<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.subtraction,diff - T)<SUB>18</SUB>>", "143": "<(IDENTIFIER,T,diff - T)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,count++)<SUB>18</SUB>>", "147": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "149": "<(IDENTIFIER,count,count += 2)<SUB>19</SUB>>", "151": "<(println,System.out.println(count))<SUB>21</SUB>>", "153": "<(IDENTIFIER,System,System.out.println(count))<SUB>21</SUB>>", "155": "<(IDENTIFIER,count,System.out.println(count))<SUB>21</SUB>>", "157": "<(MODIFIER,STATIC)>"}}