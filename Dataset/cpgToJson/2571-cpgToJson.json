{"edges": [["23", "25"], ["23", "199"], ["23", "200"], ["23", "201"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "34"], ["25", "38"], ["25", "39"], ["25", "6"], ["25", "43"], ["25", "46"], ["25", "47"], ["25", "48"], ["25", "52"], ["25", "69"], ["25", "72"], ["25", "122"], ["25", "123"], ["25", "126"], ["25", "194"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "89"], ["83", "107"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "98"], ["89", "101"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["108", "8"], ["108", "109"], ["108", "112"], ["108", "113"], ["108", "116"], ["109", "110"], ["109", "111"], ["112", "7"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["118", "119"], ["118", "120"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "142"], ["138", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "145"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "152"], ["145", "155"], ["145", "160"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["165", "172"], ["165", "191"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "181"], ["172", "183"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["181", "182"], ["183", "184"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["26", "32"], ["29", "36"], ["34", "41"], ["39", "45"], ["43", "46"], ["46", "50"], ["48", "54"], ["69", "74"], ["123", "128"], ["194", "201"], ["28", "26"], ["30", "29"], ["36", "34"], ["41", "39"], ["45", "43"], ["50", "48"], ["54", "57"], ["57", "64"], ["57", "69"], ["60", "57"], ["74", "77"], ["77", "86"], ["77", "123"], ["80", "77"], ["128", "131"], ["131", "139"], ["131", "197"], ["134", "131"], ["195", "194"], ["32", "30"], ["63", "60"], ["197", "195"], ["64", "67"], ["67", "63"], ["84", "95"], ["84", "111"], ["138", "143"], ["138", "134"], ["86", "84"], ["91", "98"], ["98", "103"], ["101", "80"], ["139", "138"], ["143", "149"], ["93", "91"], ["103", "101"], ["109", "112"], ["112", "113"], ["113", "118"], ["116", "80"], ["147", "152"], ["152", "162"], ["152", "134"], ["155", "152"], ["95", "93"], ["111", "109"], ["118", "116"], ["149", "147"], ["157", "155"], ["162", "169"], ["162", "157"], ["167", "174"], ["191", "157"], ["169", "167"], ["174", "179"], ["177", "187"], ["177", "191"], ["181", "179"], ["179", "177"], ["184", "181"], ["185", "184"], ["187", "185"], ["23", "28"], ["24", "201"], ["26", "201"], ["29", "201"], ["29", "201"], ["36", "201"], ["34", "201"], ["34", "201"], ["39", "201"], ["39", "201"], ["43", "201"], ["46", "201"], ["46", "201"], ["48", "201"], ["48", "201"], ["48", "201"], ["69", "201"], ["69", "201"], ["123", "201"], ["128", "201"], ["131", "201"], ["131", "201"], ["131", "201"], ["194", "201"], ["194", "201"], ["194", "201"], ["138", "201"], ["138", "201"], ["143", "201"], ["147", "201"], ["147", "201"], ["152", "201"], ["152", "201"], ["134", "201"], ["162", "201"], ["162", "201"], ["167", "201"], ["167", "201"], ["174", "201"], ["177", "201"], ["179", "201"], ["177", "201"], ["177", "201"], ["191", "201"], ["191", "201"], ["155", "201"], ["155", "201"], ["184", "201"], ["184", "201"], ["181", "201"], ["84", "201"], ["109", "201"], ["112", "201"], ["113", "201"], ["116", "201"], ["116", "201"], ["116", "201"], ["116", "201"], ["91", "201"], ["91", "201"], ["98", "201"], ["101", "201"], ["101", "201"], ["101", "201"], ["101", "201"], ["80", "201"], ["63", "201"], ["67", "201"], ["63", "201"], ["63", "201"], ["60", "201"], ["69", "201"], ["23", "24"], ["23", "26"], ["36", "34"], ["41", "39"], ["23", "43"], ["50", "48"], ["23", "123"], ["26", "29"], ["23", "29"], ["43", "46"], ["23", "46"], ["23", "54"], ["23", "69"], ["39", "69"], ["63", "69"], ["23", "74"], ["23", "128"], ["123", "194"], ["143", "194"], ["23", "194"], ["29", "36"], ["23", "36"], ["34", "41"], ["23", "41"], ["41", "50"], ["23", "50"], ["54", "57"], ["60", "57"], ["23", "57"], ["50", "57"], ["57", "60"], ["23", "60"], ["67", "63"], ["74", "77"], ["80", "77"], ["23", "77"], ["57", "77"], ["113", "80"], ["98", "80"], ["23", "80"], ["128", "131"], ["134", "131"], ["23", "131"], ["77", "131"], ["131", "134"], ["23", "134"], ["36", "67"], ["23", "67"], ["46", "84"], ["116", "84"], ["101", "84"], ["23", "84"], ["69", "84"], ["116", "84"], ["101", "84"], ["63", "84"], ["93", "91"], ["93", "91"], ["48", "138"], ["91", "98"], ["23", "98"], ["77", "98"], ["93", "101"], ["23", "101"], ["69", "101"], ["93", "101"], ["98", "101"], ["23", "109"], ["123", "143"], ["23", "143"], ["69", "147"], ["116", "147"], ["101", "147"], ["63", "147"], ["69", "155"], ["84", "93"], ["23", "93"], ["69", "93"], ["84", "93"], ["109", "112"], ["23", "112"], ["112", "113"], ["23", "113"], ["77", "113"], ["84", "116"], ["23", "116"], ["69", "116"], ["84", "116"], ["113", "116"], ["147", "152"], ["155", "152"], ["23", "152"], ["162", "155"], ["191", "155"], ["23", "155"], ["46", "162"], ["191", "162"], ["116", "162"], ["101", "162"], ["23", "162"], ["152", "162"], ["169", "167"], ["169", "167"], ["23", "174"], ["169", "191"], ["23", "191"], ["169", "191"], ["162", "169"], ["23", "169"], ["162", "169"], ["174", "177"], ["181", "177"], ["23", "177"], ["179", "177"], ["187", "181"], ["23", "181"], ["23", "184"], ["167", "179"], ["187", "179"], ["23", "179"], ["179", "187"], ["23", "187"], ["177", "187"], ["57", "60"], ["57", "64"], ["57", "57"], ["57", "67"], ["57", "63"], ["77", "77"], ["77", "84"], ["77", "80"], ["77", "86"], ["131", "131"], ["131", "134"], ["131", "138"], ["131", "139"], ["84", "98"], ["84", "113"], ["84", "103"], ["84", "95"], ["84", "91"], ["84", "112"], ["84", "93"], ["84", "101"], ["84", "118"], ["84", "111"], ["84", "116"], ["84", "109"], ["138", "149"], ["138", "152"], ["138", "143"], ["138", "147"], ["152", "162"], ["152", "152"], ["152", "155"], ["152", "157"], ["162", "167"], ["162", "169"], ["162", "179"], ["162", "191"], ["162", "174"], ["162", "177"], ["177", "179"], ["177", "185"], ["177", "181"], ["177", "187"], ["177", "184"], ["177", "177"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(LOCAL,int n: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[n])>", "6": "<(LOCAL,HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt; h: ANY)<SUB>5</SUB>>", "44": "<(IDENTIFIER,h,ANY h = new HashMap&lt;&gt;())<SUB>5</SUB>>", "46": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>5</SUB>>", "47": "<(LOCAL,boolean[] visited: boolean[])<SUB>6</SUB>>", "49": "<(IDENTIFIER,visited,boolean[] visited = new boolean[n])<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,new boolean[n])<SUB>6</SUB>>", "53": "<(LOCAL,int i: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>9</SUB>>", "65": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(sort,sort(a))<SUB>13</SUB>>", "71": "<(IDENTIFIER,a,sort(a))<SUB>13</SUB>>", "73": "<(LOCAL,int i: int)<SUB>14</SUB>>", "75": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "83": "<(CONTROL_STRUCTURE,if (h.containsKey(a[i])),if (h.containsKey(a[i])))<SUB>15</SUB>>", "85": "<(IDENTIFIER,h,containsKey(a[i]))<SUB>15</SUB>>", "87": "<(IDENTIFIER,a,containsKey(a[i]))<SUB>15</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,ANY temp = get(a[i]))<SUB>17</SUB>>", "93": "<(get,get(a[i]))<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>17</SUB>>", "97": "<(IDENTIFIER,i,get(a[i]))<SUB>17</SUB>>", "99": "<(IDENTIFIER,temp,add(i))<SUB>18</SUB>>", "101": "<(put,put(a[i], temp))<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>19</SUB>>", "105": "<(IDENTIFIER,i,put(a[i], temp))<SUB>19</SUB>>", "107": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "8": "<(LOCAL,ArrayList&lt;Integer&gt; k: ANY)<SUB>22</SUB>>", "110": "<(IDENTIFIER,k,ANY k = new ArrayList&lt;&gt;())<SUB>22</SUB>>", "112": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>22</SUB>>", "113": "<(add,add(i))<SUB>23</SUB>>", "115": "<(IDENTIFIER,i,add(i))<SUB>23</SUB>>", "117": "<(IDENTIFIER,h,put(a[i], k))<SUB>24</SUB>>", "119": "<(IDENTIFIER,a,put(a[i], k))<SUB>24</SUB>>", "121": "<(IDENTIFIER,k,put(a[i], k))<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.assignment,int ctr = 0)<SUB>27</SUB>>", "125": "<(LITERAL,0,int ctr = 0)<SUB>27</SUB>>", "127": "<(LOCAL,int i: int)<SUB>28</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>28</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>28</SUB>>", "133": "<(IDENTIFIER,n,i &lt; n)<SUB>28</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "137": "<(CONTROL_STRUCTURE,if (!visited[i]),if (!visited[i]))<SUB>29</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,visited[i])<SUB>29</SUB>>", "141": "<(IDENTIFIER,i,!visited[i])<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,ctr++)<SUB>31</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int j = a[i]; Some(j &lt;= 100); j += a[i]),for (int j = a[i]; Some(j &lt;= 100); j += a[i]))<SUB>32</SUB>>", "147": "<(&lt;operator&gt;.assignment,int j = a[i])<SUB>32</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>32</SUB>>", "151": "<(IDENTIFIER,i,int j = a[i])<SUB>32</SUB>>", "153": "<(IDENTIFIER,j,j &lt;= 100)<SUB>32</SUB>>", "155": "<(&lt;operator&gt;.assignmentPlus,j += a[i])<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>32</SUB>>", "159": "<(IDENTIFIER,i,j += a[i])<SUB>32</SUB>>", "161": "<(CONTROL_STRUCTURE,if (h.containsKey(j)),if (h.containsKey(j)))<SUB>33</SUB>>", "163": "<(IDENTIFIER,h,containsKey(j))<SUB>33</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "167": "<(&lt;operator&gt;.assignment,ANY m = get(j))<SUB>34</SUB>>", "169": "<(get,get(j))<SUB>34</SUB>>", "171": "<(IDENTIFIER,j,get(j))<SUB>34</SUB>>", "173": "<(LOCAL,int k: int)<SUB>35</SUB>>", "175": "<(IDENTIFIER,k,int k = 0)<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.lessThan,k &lt; m.size())<SUB>35</SUB>>", "179": "<(size,size())<SUB>35</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,k++)<SUB>35</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,visited[m.get(k)])<SUB>36</SUB>>", "187": "<(get,get(k))<SUB>36</SUB>>", "189": "<(IDENTIFIER,k,get(k))<SUB>36</SUB>>", "191": "<(remove,remove(j))<SUB>38</SUB>>", "193": "<(IDENTIFIER,j,remove(j))<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>43</SUB>>", "197": "<(FIELD_IDENTIFIER,out,out)<SUB>43</SUB>>", "199": "<(MODIFIER,PUBLIC)>", "201": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}