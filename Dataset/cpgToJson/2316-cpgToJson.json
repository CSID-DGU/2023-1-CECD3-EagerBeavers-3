{"edges": [["17", "19"], ["17", "131"], ["17", "132"], ["17", "133"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "35"], ["19", "36"], ["19", "39"], ["19", "40"], ["19", "43"], ["19", "44"], ["19", "47"], ["19", "103"], ["19", "104"], ["19", "107"], ["19", "126"], ["19", "129"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "34"], ["31", "32"], ["31", "33"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "87"], ["58", "59"], ["58", "61"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "82"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "92"], ["87", "98"], ["88", "89"], ["88", "91"], ["89", "90"], ["92", "93"], ["92", "95"], ["93", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["99", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "115"], ["107", "117"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["21", "28"], ["26", "31"], ["30", "36"], ["36", "40"], ["40", "44"], ["44", "49"], ["104", "109"], ["126", "129"], ["129", "133"], ["23", "21"], ["28", "26"], ["31", "30"], ["49", "52"], ["52", "59"], ["52", "104"], ["55", "52"], ["109", "112"], ["112", "120"], ["112", "126"], ["115", "112"], ["118", "123"], ["123", "115"], ["59", "64"], ["59", "89"], ["88", "93"], ["88", "100"], ["120", "118"], ["89", "88"], ["93", "95"], ["95", "55"], ["64", "67"], ["67", "74"], ["67", "89"], ["70", "67"], ["100", "55"], ["73", "83"], ["82", "70"], ["74", "79"], ["77", "73"], ["83", "82"], ["79", "77"], ["17", "23"], ["18", "133"], ["23", "133"], ["21", "133"], ["21", "133"], ["26", "133"], ["26", "133"], ["26", "133"], ["30", "133"], ["30", "133"], ["36", "133"], ["36", "133"], ["40", "133"], ["44", "133"], ["44", "133"], ["52", "133"], ["52", "133"], ["104", "133"], ["109", "133"], ["112", "133"], ["112", "133"], ["112", "133"], ["126", "133"], ["126", "133"], ["129", "133"], ["118", "133"], ["118", "133"], ["123", "133"], ["115", "133"], ["59", "133"], ["64", "133"], ["67", "133"], ["67", "133"], ["89", "133"], ["88", "133"], ["88", "133"], ["100", "133"], ["100", "133"], ["93", "133"], ["95", "133"], ["95", "133"], ["55", "133"], ["73", "133"], ["73", "133"], ["82", "133"], ["82", "133"], ["70", "133"], ["126", "133"], ["129", "133"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "30"], ["17", "36"], ["17", "40"], ["17", "44"], ["17", "104"], ["17", "49"], ["17", "109"], ["17", "126"], ["104", "126"], ["123", "126"], ["17", "129"], ["17", "23"], ["21", "28"], ["17", "28"], ["49", "52"], ["55", "52"], ["17", "52"], ["28", "52"], ["52", "55"], ["17", "55"], ["109", "112"], ["115", "112"], ["17", "112"], ["40", "112"], ["67", "112"], ["93", "112"], ["112", "115"], ["17", "115"], ["26", "118"], ["36", "123"], ["17", "123"], ["104", "118"], ["123", "118"], ["17", "118"], ["118", "123"], ["44", "59"], ["100", "59"], ["95", "59"], ["17", "59"], ["89", "88"], ["17", "88"], ["17", "95"], ["17", "64"], ["23", "89"], ["17", "89"], ["40", "93"], ["67", "93"], ["17", "93"], ["17", "100"], ["64", "67"], ["70", "67"], ["17", "67"], ["40", "67"], ["93", "67"], ["79", "70"], ["17", "70"], ["26", "73"], ["36", "82"], ["17", "82"], ["82", "73"], ["26", "82"], ["73", "82"], ["67", "79"], ["17", "79"], ["52", "89"], ["52", "52"], ["52", "59"], ["52", "88"], ["52", "55"], ["112", "115"], ["112", "120"], ["112", "123"], ["112", "112"], ["112", "118"], ["59", "64"], ["59", "67"], ["88", "95"], ["88", "93"], ["88", "100"], ["67", "73"], ["67", "77"], ["67", "67"], ["67", "74"], ["67", "82"], ["67", "79"], ["67", "83"], ["67", "70"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] sol: int[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,sol,int[] sol = new int[n])<SUB>3</SUB>>", "29": "<(IDENTIFIER,n,new int[n])<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.indexAccess,sol[0])<SUB>4</SUB>>", "33": "<(LITERAL,0,sol[0] = 1)<SUB>4</SUB>>", "35": "<(LOCAL,int mod: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,mod,int mod = 1000000007)<SUB>5</SUB>>", "39": "<(LOCAL,int maxind: int)<SUB>6</SUB>>", "41": "<(IDENTIFIER,maxind,int maxind = 0)<SUB>6</SUB>>", "43": "<(LOCAL,boolean f: boolean)<SUB>7</SUB>>", "45": "<(IDENTIFIER,f,boolean f = true)<SUB>7</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.logicalNot,!f)<SUB>9</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "63": "<(LOCAL,int j: int)<SUB>11</SUB>>", "65": "<(IDENTIFIER,j,int j = 1)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= maxind)<SUB>11</SUB>>", "69": "<(IDENTIFIER,maxind,j &lt;= maxind)<SUB>11</SUB>>", "71": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignmentPlus,sol[j] += sol[j - 1])<SUB>12</SUB>>", "75": "<(IDENTIFIER,sol,sol[j] += sol[j - 1])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,sol[j - 1])<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>12</SUB>>", "81": "<(LITERAL,1,j - 1)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,sol[j])<SUB>13</SUB>>", "85": "<(IDENTIFIER,j,sol[j] %= mod)<SUB>13</SUB>>", "87": "<(CONTROL_STRUCTURE,if (in.next().equals(&quot;f&quot;)),if (in.next().equals(&quot;f&quot;)))<SUB>17</SUB>>", "89": "<(next,next())<SUB>17</SUB>>", "91": "<(LITERAL,&quot;f&quot;,equals(&quot;f&quot;))<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,maxind++)<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.assignment,f = true)<SUB>19</SUB>>", "97": "<(LITERAL,true,f = true)<SUB>19</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "101": "<(IDENTIFIER,f,f = false)<SUB>22</SUB>>", "103": "<(LOCAL,int ans: int)<SUB>25</SUB>>", "105": "<(IDENTIFIER,ans,int ans = 0)<SUB>25</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= maxind); i++),for (int i = 0; Some(i &lt;= maxind); i++))<SUB>26</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "113": "<(IDENTIFIER,i,i &lt;= maxind)<SUB>26</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "117": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "119": "<(IDENTIFIER,ans,ans += sol[i])<SUB>27</SUB>>", "121": "<(IDENTIFIER,sol,ans += sol[i])<SUB>27</SUB>>", "123": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>28</SUB>>", "125": "<(IDENTIFIER,mod,ans %= mod)<SUB>28</SUB>>", "127": "<(IDENTIFIER,out,println(ans))<SUB>30</SUB>>", "129": "<(finish,finish())<SUB>31</SUB>>", "131": "<(MODIFIER,PUBLIC)>", "133": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}