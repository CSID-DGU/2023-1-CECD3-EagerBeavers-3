{"edges": [["19", "21"], ["19", "69"], ["19", "70"], ["19", "71"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "43"], ["21", "52"], ["21", "59"], ["21", "64"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "40"], ["38", "49"], ["43", "56"], ["52", "61"], ["59", "67"], ["64", "71"], ["24", "22"], ["26", "25"], ["32", "30"], ["40", "38"], ["45", "43"], ["54", "52"], ["61", "59"], ["65", "64"], ["28", "26"], ["47", "45"], ["56", "54"], ["67", "65"], ["49", "47"], ["19", "24"], ["20", "71"], ["22", "71"], ["25", "71"], ["25", "71"], ["32", "71"], ["30", "71"], ["30", "71"], ["35", "71"], ["38", "71"], ["43", "71"], ["43", "71"], ["54", "71"], ["52", "71"], ["52", "71"], ["61", "71"], ["59", "71"], ["59", "71"], ["64", "71"], ["64", "71"], ["64", "71"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["40", "38"], ["40", "38"], ["38", "43"], ["19", "43"], ["47", "43"], ["47", "43"], ["54", "52"], ["54", "52"], ["43", "59"], ["19", "59"], ["52", "59"], ["22", "25"], ["19", "25"], ["59", "64"], ["19", "64"], ["25", "32"], ["19", "32"], ["30", "40"], ["19", "40"], ["38", "45"], ["19", "45"], ["47", "45"], ["47", "45"], ["56", "54"], ["19", "54"], ["56", "54"], ["43", "61"], ["19", "61"], ["52", "61"], ["49", "47"], ["19", "47"], ["49", "47"], ["47", "56"], ["19", "56"], ["40", "49"], ["19", "49"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>5</SUB>>", "37": "<(LITERAL,0,int count = 0)<SUB>5</SUB>>", "39": "<(IDENTIFIER,count,count = n / 2)<SUB>7</SUB>>", "41": "<(IDENTIFIER,n,n / 2)<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,count = count + (n - n / 2))<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.addition,count + (n - n / 2))<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.subtraction,n - n / 2)<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.division,n / 2)<SUB>9</SUB>>", "51": "<(LITERAL,2,n / 2)<SUB>9</SUB>>", "53": "<(IDENTIFIER,n,n = n - n / 2)<SUB>11</SUB>>", "55": "<(IDENTIFIER,n,n - n / 2)<SUB>11</SUB>>", "57": "<(IDENTIFIER,n,n / 2)<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.assignment,count = count + n)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.addition,count + n)<SUB>13</SUB>>", "63": "<(IDENTIFIER,n,count + n)<SUB>13</SUB>>", "65": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "67": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "69": "<(MODIFIER,PUBLIC)>", "71": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}