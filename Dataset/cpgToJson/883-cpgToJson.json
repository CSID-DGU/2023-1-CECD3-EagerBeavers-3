{"edges": [["22", "24"], ["22", "185"], ["22", "186"], ["22", "187"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "32"], ["24", "33"], ["24", "37"], ["24", "38"], ["24", "42"], ["24", "43"], ["24", "47"], ["24", "48"], ["24", "52"], ["24", "6"], ["24", "71"], ["24", "74"], ["24", "75"], ["24", "76"], ["24", "79"], ["24", "80"], ["24", "84"], ["24", "121"], ["24", "133"], ["24", "136"], ["24", "137"], ["24", "140"], ["24", "141"], ["24", "144"], ["24", "172"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "62"], ["52", "64"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "73"], ["74", "5"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "94"], ["84", "96"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["97", "98"], ["97", "104"], ["98", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "110"], ["104", "112"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "126"], ["122", "123"], ["122", "124"], ["124", "125"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["133", "134"], ["133", "135"], ["136", "7"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "170"], ["149", "150"], ["149", "156"], ["150", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "162"], ["156", "164"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["25", "31"], ["28", "35"], ["33", "40"], ["38", "45"], ["43", "50"], ["48", "54"], ["71", "74"], ["74", "76"], ["76", "82"], ["80", "86"], ["133", "136"], ["136", "137"], ["137", "141"], ["141", "145"], ["172", "187"], ["27", "25"], ["29", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["54", "61"], ["57", "66"], ["57", "73"], ["62", "61"], ["73", "71"], ["82", "80"], ["86", "93"], ["89", "101"], ["89", "124"], ["94", "93"], ["122", "130"], ["122", "135"], ["135", "133"], ["145", "153"], ["145", "175"], ["173", "178"], ["176", "172"], ["31", "29"], ["59", "57"], ["65", "62"], ["91", "89"], ["124", "122"], ["127", "132"], ["132", "187"], ["170", "145"], ["175", "173"], ["177", "182"], ["182", "176"], ["61", "59"], ["66", "69"], ["69", "65"], ["93", "91"], ["98", "107"], ["98", "94"], ["128", "127"], ["150", "159"], ["150", "170"], ["178", "177"], ["99", "98"], ["105", "110"], ["110", "113"], ["130", "128"], ["151", "150"], ["157", "162"], ["162", "165"], ["101", "99"], ["107", "105"], ["113", "117"], ["113", "94"], ["153", "151"], ["159", "157"], ["165", "175"], ["165", "170"], ["117", "124"], ["22", "27"], ["132", "187"], ["23", "187"], ["25", "187"], ["28", "187"], ["28", "187"], ["33", "187"], ["38", "187"], ["40", "187"], ["38", "187"], ["38", "187"], ["43", "187"], ["43", "187"], ["48", "187"], ["50", "187"], ["48", "187"], ["48", "187"], ["71", "187"], ["74", "187"], ["74", "187"], ["76", "187"], ["76", "187"], ["80", "187"], ["86", "187"], ["89", "187"], ["89", "187"], ["89", "187"], ["99", "187"], ["99", "187"], ["98", "187"], ["98", "187"], ["105", "187"], ["105", "187"], ["105", "187"], ["110", "187"], ["113", "187"], ["113", "187"], ["113", "187"], ["94", "187"], ["117", "187"], ["117", "187"], ["122", "187"], ["122", "187"], ["122", "187"], ["127", "187"], ["127", "187"], ["65", "187"], ["69", "187"], ["65", "187"], ["65", "187"], ["62", "187"], ["22", "23"], ["22", "25"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["22", "71"], ["22", "76"], ["82", "80"], ["22", "133"], ["22", "137"], ["122", "141"], ["22", "141"], ["25", "28"], ["22", "28"], ["22", "54"], ["71", "74"], ["22", "74"], ["22", "86"], ["133", "136"], ["22", "136"], ["145", "172"], ["22", "172"], ["122", "172"], ["28", "35"], ["22", "35"], ["35", "40"], ["22", "40"], ["22", "45"], ["33", "50"], ["22", "50"], ["54", "57"], ["62", "57"], ["22", "57"], ["48", "57"], ["57", "62"], ["22", "62"], ["69", "65"], ["22", "82"], ["86", "89"], ["94", "89"], ["22", "89"], ["48", "89"], ["57", "89"], ["89", "94"], ["22", "94"], ["80", "122"], ["117", "122"], ["22", "122"], ["124", "122"], ["22", "132"], ["141", "145"], ["170", "145"], ["22", "145"], ["145", "176"], ["22", "176"], ["122", "176"], ["22", "124"], ["22", "127"], ["145", "170"], ["22", "170"], ["145", "177"], ["22", "177"], ["22", "182"], ["122", "182"], ["40", "69"], ["22", "69"], ["99", "98"], ["99", "98"], ["151", "150"], ["151", "150"], ["145", "178"], ["22", "178"], ["74", "99"], ["105", "99"], ["22", "99"], ["48", "99"], ["105", "99"], ["65", "99"], ["99", "105"], ["22", "105"], ["48", "105"], ["99", "105"], ["76", "110"], ["113", "110"], ["22", "110"], ["136", "151"], ["157", "151"], ["22", "151"], ["48", "151"], ["157", "151"], ["151", "157"], ["22", "157"], ["48", "157"], ["151", "157"], ["137", "162"], ["165", "162"], ["22", "162"], ["110", "113"], ["22", "113"], ["38", "113"], ["89", "117"], ["22", "117"], ["162", "165"], ["22", "165"], ["38", "165"], ["113", "165"], ["57", "57"], ["57", "66"], ["57", "69"], ["57", "65"], ["57", "59"], ["57", "61"], ["57", "62"], ["89", "98"], ["89", "99"], ["89", "101"], ["122", "141"], ["122", "136"], ["122", "145"], ["122", "128"], ["122", "178"], ["122", "132"], ["122", "176"], ["122", "173"], ["122", "137"], ["122", "177"], ["122", "130"], ["122", "182"], ["122", "135"], ["122", "127"], ["122", "175"], ["122", "133"], ["122", "172"], ["145", "150"], ["145", "151"], ["145", "153"], ["98", "107"], ["98", "94"], ["98", "89"], ["98", "113"], ["98", "91"], ["98", "93"], ["98", "105"], ["98", "110"], ["150", "145"], ["150", "162"], ["150", "170"], ["150", "157"], ["150", "159"], ["150", "165"], ["113", "94"], ["113", "89"], ["113", "91"], ["113", "93"], ["113", "117"], ["165", "145"], ["165", "170"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "30": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "32": "<(LOCAL,int n: int)<SUB>3</SUB>>", "34": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "36": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "40": "<(nextInt,nextInt())<SUB>4</SUB>>", "42": "<(LOCAL,int res: int)<SUB>5</SUB>>", "44": "<(IDENTIFIER,res,int res = -1)<SUB>5</SUB>>", "46": "<(LITERAL,1,-1)<SUB>5</SUB>>", "48": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>6</SUB>>", "50": "<(&lt;operator&gt;.alloc,new int[n])>", "52": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr.length); i++),for (int i = 0; Some(i &lt; arr.length); i++))<SUB>7</SUB>>", "54": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "56": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "58": "<(IDENTIFIER,i,i &lt; arr.length)<SUB>7</SUB>>", "60": "<(IDENTIFIER,arr,i &lt; arr.length)<SUB>7</SUB>>", "62": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "64": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>8</SUB>>", "68": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>8</SUB>>", "70": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,ANY bits = new BitSet())<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.alloc,new BitSet())<SUB>10</SUB>>", "5": "<(IDENTIFIER,bits,new BitSet())<SUB>10</SUB>>", "76": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>11</SUB>>", "78": "<(LITERAL,0,int count = 0)<SUB>11</SUB>>", "80": "<(&lt;operator&gt;.assignment,int end = -1)<SUB>12</SUB>>", "82": "<(&lt;operator&gt;.minus,-1)<SUB>12</SUB>>", "84": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr.length); i++),for (int i = 0; Some(i &lt; arr.length); i++))<SUB>13</SUB>>", "86": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "88": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "90": "<(IDENTIFIER,i,i &lt; arr.length)<SUB>13</SUB>>", "92": "<(IDENTIFIER,arr,i &lt; arr.length)<SUB>13</SUB>>", "94": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "96": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "98": "<(&lt;operator&gt;.logicalNot,!bits.get(arr[i]))<SUB>14</SUB>>", "100": "<(IDENTIFIER,bits,get(arr[i]))<SUB>14</SUB>>", "102": "<(IDENTIFIER,arr,get(arr[i]))<SUB>14</SUB>>", "104": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "106": "<(IDENTIFIER,bits,set(arr[i]))<SUB>15</SUB>>", "108": "<(IDENTIFIER,arr,set(arr[i]))<SUB>15</SUB>>", "110": "<(&lt;operator&gt;.postIncrement,count++)<SUB>16</SUB>>", "112": "<(CONTROL_STRUCTURE,if (count == k),if (count == k))<SUB>17</SUB>>", "114": "<(IDENTIFIER,count,count == k)<SUB>17</SUB>>", "116": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "118": "<(IDENTIFIER,end,end = i)<SUB>18</SUB>>", "120": "<(CONTROL_STRUCTURE,break;,break;)<SUB>19</SUB>>", "122": "<(&lt;operator&gt;.equals,end == -1)<SUB>23</SUB>>", "124": "<(&lt;operator&gt;.minus,-1)<SUB>23</SUB>>", "126": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "128": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "130": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "132": "<(RETURN,return;,return;)<SUB>25</SUB>>", "134": "<(IDENTIFIER,bits,bits = new BitSet())<SUB>27</SUB>>", "136": "<(&lt;init&gt;,new BitSet())<SUB>27</SUB>>", "137": "<(&lt;operator&gt;.assignment,count = 0)<SUB>28</SUB>>", "139": "<(LITERAL,0,count = 0)<SUB>28</SUB>>", "141": "<(&lt;operator&gt;.assignment,int start = end)<SUB>29</SUB>>", "143": "<(IDENTIFIER,end,int start = end)<SUB>29</SUB>>", "145": "<(&lt;operator&gt;.greaterEqualsThan,start &gt;= 0)<SUB>30</SUB>>", "147": "<(LITERAL,0,start &gt;= 0)<SUB>30</SUB>>", "149": "<(CONTROL_STRUCTURE,if (!bits.get(arr[start])),if (!bits.get(arr[start])))<SUB>31</SUB>>", "151": "<(get,get(arr[start]))<SUB>31</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,arr[start])<SUB>31</SUB>>", "155": "<(IDENTIFIER,start,get(arr[start]))<SUB>31</SUB>>", "157": "<(set,set(arr[start]))<SUB>32</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,arr[start])<SUB>32</SUB>>", "161": "<(IDENTIFIER,start,set(arr[start]))<SUB>32</SUB>>", "163": "<(IDENTIFIER,count,count++)<SUB>33</SUB>>", "165": "<(&lt;operator&gt;.equals,count == k)<SUB>34</SUB>>", "167": "<(IDENTIFIER,k,count == k)<SUB>34</SUB>>", "169": "<(CONTROL_STRUCTURE,break;,break;)<SUB>35</SUB>>", "171": "<(IDENTIFIER,start,start--)<SUB>38</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "175": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "177": "<(&lt;operator&gt;.addition,(start + 1) + &quot; &quot;)<SUB>40</SUB>>", "179": "<(IDENTIFIER,start,start + 1)<SUB>40</SUB>>", "181": "<(LITERAL,&quot; &quot;,(start + 1) + &quot; &quot;)<SUB>40</SUB>>", "183": "<(IDENTIFIER,end,end + 1)<SUB>40</SUB>>", "185": "<(MODIFIER,PUBLIC)>", "187": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}