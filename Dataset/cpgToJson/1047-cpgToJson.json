{"edges": [["21", "22"], ["21", "23"], ["21", "158"], ["21", "159"], ["21", "160"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "39"], ["23", "156"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "44"], ["40", "41"], ["40", "43"], ["41", "42"], ["44", "45"], ["44", "46"], ["44", "50"], ["44", "51"], ["44", "54"], ["44", "55"], ["44", "58"], ["44", "59"], ["44", "62"], ["44", "85"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "75"], ["64", "80"], ["64", "83"], ["65", "66"], ["65", "73"], ["66", "67"], ["66", "72"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "89"], ["85", "93"], ["86", "87"], ["86", "88"], ["89", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "102"], ["94", "107"], ["94", "108"], ["94", "113"], ["94", "114"], ["94", "124"], ["94", "127"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["118", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "131"], ["127", "139"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "134"], ["132", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["140", "147"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "36"], ["36", "41"], ["156", "160"], ["26", "24"], ["30", "28"], ["32", "31"], ["40", "48"], ["40", "156"], ["34", "32"], ["41", "40"], ["46", "51"], ["51", "55"], ["55", "59"], ["59", "69"], ["59", "86"], ["48", "46"], ["86", "90"], ["86", "98"], ["75", "80"], ["80", "83"], ["83", "69"], ["83", "86"], ["90", "41"], ["66", "86"], ["66", "77"], ["77", "75"], ["96", "104"], ["102", "110"], ["108", "117"], ["114", "124"], ["124", "128"], ["67", "66"], ["98", "96"], ["104", "102"], ["110", "108"], ["116", "114"], ["128", "132"], ["128", "144"], ["69", "67"], ["117", "121"], ["118", "116"], ["132", "136"], ["134", "41"], ["121", "118"], ["136", "134"], ["142", "152"], ["147", "41"], ["144", "142"], ["149", "147"], ["151", "149"], ["152", "153"], ["153", "151"], ["21", "26"], ["22", "160"], ["24", "160"], ["27", "160"], ["27", "160"], ["28", "160"], ["31", "160"], ["31", "160"], ["36", "160"], ["41", "160"], ["40", "160"], ["40", "160"], ["156", "160"], ["156", "160"], ["48", "160"], ["46", "160"], ["46", "160"], ["51", "160"], ["51", "160"], ["55", "160"], ["59", "160"], ["59", "160"], ["69", "160"], ["69", "160"], ["67", "160"], ["66", "160"], ["66", "160"], ["75", "160"], ["75", "160"], ["80", "160"], ["80", "160"], ["83", "160"], ["83", "160"], ["86", "160"], ["86", "160"], ["86", "160"], ["98", "160"], ["98", "160"], ["96", "160"], ["96", "160"], ["102", "160"], ["102", "160"], ["110", "160"], ["108", "160"], ["108", "160"], ["121", "160"], ["118", "160"], ["116", "160"], ["114", "160"], ["114", "160"], ["124", "160"], ["124", "160"], ["128", "160"], ["128", "160"], ["144", "160"], ["142", "160"], ["142", "160"], ["149", "160"], ["153", "160"], ["151", "160"], ["149", "160"], ["147", "160"], ["147", "160"], ["132", "160"], ["136", "160"], ["134", "160"], ["134", "160"], ["90", "160"], ["144", "160"], ["118", "160"], ["21", "22"], ["21", "24"], ["21", "28"], ["21", "36"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "156"], ["147", "156"], ["134", "156"], ["90", "156"], ["21", "156"], ["41", "40"], ["21", "40"], ["48", "46"], ["21", "51"], ["21", "55"], ["21", "59"], ["36", "41"], ["21", "41"], ["21", "63"], ["27", "48"], ["21", "48"], ["77", "75"], ["77", "75"], ["21", "80"], ["55", "86"], ["75", "86"], ["21", "86"], ["46", "86"], ["66", "86"], ["21", "75"], ["55", "75"], ["77", "80"], ["77", "83"], ["21", "83"], ["31", "90"], ["147", "90"], ["134", "90"], ["21", "90"], ["98", "96"], ["98", "96"], ["104", "102"], ["104", "102"], ["110", "108"], ["110", "108"], ["21", "114"], ["118", "114"], ["118", "114"], ["118", "114"], ["102", "124"], ["21", "124"], ["55", "66"], ["75", "66"], ["21", "66"], ["69", "66"], ["69", "66"], ["46", "66"], ["69", "77"], ["21", "77"], ["69", "77"], ["114", "124"], ["55", "67"], ["75", "67"], ["21", "67"], ["69", "67"], ["69", "67"], ["86", "98"], ["21", "98"], ["86", "98"], ["96", "104"], ["21", "104"], ["59", "104"], ["69", "104"], ["83", "104"], ["104", "110"], ["21", "110"], ["104", "110"], ["21", "116"], ["118", "116"], ["118", "116"], ["118", "116"], ["108", "128"], ["21", "128"], ["51", "69"], ["80", "69"], ["21", "69"], ["59", "69"], ["83", "69"], ["21", "118"], ["121", "118"], ["121", "118"], ["124", "132"], ["21", "132"], ["31", "134"], ["147", "134"], ["90", "134"], ["21", "134"], ["136", "134"], ["136", "134"], ["144", "142"], ["144", "142"], ["110", "121"], ["21", "121"], ["132", "136"], ["21", "136"], ["31", "147"], ["134", "147"], ["90", "147"], ["21", "147"], ["149", "147"], ["149", "147"], ["21", "144"], ["124", "144"], ["142", "149"], ["21", "149"], ["153", "149"], ["153", "149"], ["21", "151"], ["153", "151"], ["153", "151"], ["128", "153"], ["21", "153"], ["40", "48"], ["40", "51"], ["40", "46"], ["40", "40"], ["40", "59"], ["40", "41"], ["40", "55"], ["40", "86"], ["40", "66"], ["40", "69"], ["40", "67"], ["86", "96"], ["86", "98"], ["86", "116"], ["86", "128"], ["86", "102"], ["86", "114"], ["86", "104"], ["86", "121"], ["86", "90"], ["86", "118"], ["86", "110"], ["86", "117"], ["86", "124"], ["86", "108"], ["66", "77"], ["66", "75"], ["66", "80"], ["66", "83"], ["66", "66"], ["66", "69"], ["66", "67"], ["128", "136"], ["128", "149"], ["128", "132"], ["128", "142"], ["128", "151"], ["128", "153"], ["128", "144"], ["128", "134"], ["128", "152"], ["128", "147"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new FastReader())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new FastReader())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,int T: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,T,int T = 1)<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.postDecrement,T--)<SUB>6</SUB>>", "43": "<(LITERAL,0,T-- &gt; 0)<SUB>6</SUB>>", "45": "<(LOCAL,long k: long)<SUB>8</SUB>>", "47": "<(IDENTIFIER,k,long k = nextLong())<SUB>8</SUB>>", "49": "<(IDENTIFIER,input,nextLong())<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,long v = 9)<SUB>9</SUB>>", "53": "<(LITERAL,9,long v = 9)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,long s = 0)<SUB>10</SUB>>", "57": "<(LITERAL,0,long s = 0)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int x = 1)<SUB>11</SUB>>", "61": "<(LITERAL,1,int x = 1)<SUB>11</SUB>>", "63": "<(LITERAL,true,while (true))<SUB>12</SUB>>", "65": "<(CONTROL_STRUCTURE,if (s + v * x &gt; k),if (s + v * x &gt; k))<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.addition,s + v * x)<SUB>14</SUB>>", "69": "<(&lt;operator&gt;.multiplication,v * x)<SUB>14</SUB>>", "71": "<(IDENTIFIER,x,v * x)<SUB>14</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "75": "<(&lt;operator&gt;.assignmentPlus,s += v * x)<SUB>18</SUB>>", "77": "<(&lt;operator&gt;.multiplication,v * x)<SUB>18</SUB>>", "79": "<(IDENTIFIER,x,v * x)<SUB>18</SUB>>", "81": "<(IDENTIFIER,v,v *= 10)<SUB>19</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,x++)<SUB>20</SUB>>", "85": "<(CONTROL_STRUCTURE,if (s == k),if (s == k))<SUB>22</SUB>>", "87": "<(IDENTIFIER,s,s == k)<SUB>22</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "91": "<(IDENTIFIER,out,println(9))<SUB>24</SUB>>", "93": "<(CONTROL_STRUCTURE,else,else)<SUB>27</SUB>>", "95": "<(LOCAL,long d: long)<SUB>28</SUB>>", "97": "<(IDENTIFIER,d,long d = k - s)<SUB>28</SUB>>", "99": "<(IDENTIFIER,k,k - s)<SUB>28</SUB>>", "101": "<(LOCAL,long u: long)<SUB>29</SUB>>", "103": "<(IDENTIFIER,u,long u = d / x)<SUB>29</SUB>>", "105": "<(IDENTIFIER,d,d / x)<SUB>29</SUB>>", "107": "<(LOCAL,long rem: long)<SUB>30</SUB>>", "109": "<(IDENTIFIER,rem,long rem = d % x)<SUB>30</SUB>>", "111": "<(IDENTIFIER,d,d % x)<SUB>30</SUB>>", "113": "<(LOCAL,long nu: long)<SUB>31</SUB>>", "115": "<(IDENTIFIER,nu,long nu = (long) Math.pow(10, x - 1))<SUB>31</SUB>>", "117": "<(TYPE_REF,long,long)<SUB>31</SUB>>", "119": "<(IDENTIFIER,Math,Math.pow(10, x - 1))<SUB>31</SUB>>", "121": "<(&lt;operator&gt;.subtraction,x - 1)<SUB>31</SUB>>", "123": "<(LITERAL,1,x - 1)<SUB>31</SUB>>", "125": "<(IDENTIFIER,nu,nu += u)<SUB>32</SUB>>", "127": "<(CONTROL_STRUCTURE,if (rem == 0),if (rem == 0))<SUB>33</SUB>>", "129": "<(IDENTIFIER,rem,rem == 0)<SUB>33</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "133": "<(IDENTIFIER,nu,nu--)<SUB>35</SUB>>", "135": "<(IDENTIFIER,out,println(nu % 10))<SUB>36</SUB>>", "137": "<(IDENTIFIER,nu,nu % 10)<SUB>36</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>39</SUB>>", "141": "<(LOCAL,String str: java.lang.String)<SUB>40</SUB>>", "143": "<(IDENTIFIER,str,String str = String.valueOf(nu))<SUB>40</SUB>>", "145": "<(IDENTIFIER,String,String.valueOf(nu))<SUB>40</SUB>>", "147": "<(println,println(str.charAt((int) (rem - 1))))<SUB>41</SUB>>", "149": "<(charAt,str.charAt((int) (rem - 1)))<SUB>41</SUB>>", "151": "<(&lt;operator&gt;.cast,(int) (rem - 1))<SUB>41</SUB>>", "153": "<(&lt;operator&gt;.subtraction,rem - 1)<SUB>41</SUB>>", "155": "<(LITERAL,1,rem - 1)<SUB>41</SUB>>", "157": "<(IDENTIFIER,out,close())<SUB>45</SUB>>", "159": "<(MODIFIER,STATIC)>"}}