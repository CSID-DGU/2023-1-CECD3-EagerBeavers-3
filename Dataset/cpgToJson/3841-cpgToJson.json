{"edges": [["29", "31"], ["29", "221"], ["29", "222"], ["29", "223"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "46"], ["31", "49"], ["31", "53"], ["31", "54"], ["31", "57"], ["31", "58"], ["31", "64"], ["31", "219"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "40"], ["36", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "69"], ["65", "66"], ["65", "68"], ["66", "67"], ["69", "70"], ["69", "71"], ["69", "8"], ["69", "77"], ["69", "80"], ["69", "81"], ["69", "82"], ["69", "85"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["80", "7"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "103"], ["95", "12"], ["95", "166"], ["95", "169"], ["95", "172"], ["95", "14"], ["95", "175"], ["95", "178"], ["95", "179"], ["95", "216"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "107"], ["103", "114"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "110"], ["108", "109"], ["110", "111"], ["110", "112"], ["110", "113"], ["114", "115"], ["115", "10"], ["115", "116"], ["115", "119"], ["115", "122"], ["115", "125"], ["116", "117"], ["116", "118"], ["119", "9"], ["119", "120"], ["120", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "133"], ["125", "136"], ["125", "138"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "132"], ["130", "131"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "149"], ["139", "157"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "156"], ["150", "151"], ["150", "152"], ["150", "155"], ["152", "153"], ["152", "154"], ["157", "158"], ["158", "159"], ["158", "161"], ["159", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "11"], ["169", "170"], ["170", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "13"], ["179", "180"], ["179", "181"], ["179", "184"], ["179", "188"], ["179", "190"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["186", "187"], ["188", "189"], ["190", "191"], ["190", "207"], ["191", "192"], ["191", "198"], ["192", "193"], ["192", "197"], ["193", "194"], ["193", "196"], ["194", "195"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "215"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "214"], ["216", "217"], ["216", "218"], ["219", "220"], ["32", "39"], ["35", "48"], ["46", "52"], ["49", "54"], ["54", "62"], ["58", "66"], ["219", "223"], ["34", "32"], ["48", "46"], ["50", "49"], ["60", "58"], ["65", "75"], ["65", "219"], ["37", "44"], ["40", "35"], ["52", "50"], ["62", "60"], ["66", "65"], ["71", "79"], ["77", "80"], ["80", "82"], ["82", "87"], ["39", "37"], ["42", "40"], ["73", "71"], ["79", "77"], ["87", "90"], ["90", "66"], ["90", "101"], ["93", "90"], ["44", "42"], ["75", "73"], ["97", "104"], ["166", "170"], ["169", "172"], ["172", "177"], ["175", "178"], ["178", "181"], ["216", "93"], ["99", "97"], ["104", "108"], ["104", "118"], ["168", "166"], ["170", "169"], ["177", "175"], ["181", "186"], ["184", "194"], ["184", "216"], ["188", "186"], ["101", "99"], ["108", "110"], ["110", "168"], ["186", "184"], ["207", "188"], ["116", "120"], ["119", "122"], ["122", "130"], ["192", "203"], ["192", "212"], ["209", "207"], ["118", "116"], ["120", "119"], ["127", "133"], ["133", "143"], ["133", "168"], ["136", "133"], ["193", "192"], ["199", "188"], ["210", "209"], ["129", "127"], ["194", "193"], ["201", "199"], ["212", "210"], ["130", "129"], ["140", "152"], ["140", "159"], ["203", "201"], ["141", "146"], ["146", "140"], ["150", "168"], ["143", "141"], ["152", "150"], ["159", "163"], ["161", "136"], ["163", "161"], ["29", "34"], ["30", "223"], ["32", "223"], ["37", "223"], ["40", "223"], ["40", "223"], ["40", "223"], ["35", "223"], ["46", "223"], ["49", "223"], ["49", "223"], ["54", "223"], ["54", "223"], ["60", "223"], ["62", "223"], ["60", "223"], ["58", "223"], ["58", "223"], ["66", "223"], ["65", "223"], ["65", "223"], ["219", "223"], ["219", "223"], ["73", "223"], ["75", "223"], ["73", "223"], ["71", "223"], ["71", "223"], ["77", "223"], ["80", "223"], ["80", "223"], ["82", "223"], ["82", "223"], ["87", "223"], ["90", "223"], ["90", "223"], ["90", "223"], ["99", "223"], ["101", "223"], ["99", "223"], ["97", "223"], ["97", "223"], ["104", "223"], ["104", "223"], ["127", "223"], ["127", "223"], ["133", "223"], ["140", "223"], ["146", "223"], ["140", "223"], ["140", "223"], ["159", "223"], ["159", "223"], ["161", "223"], ["161", "223"], ["136", "223"], ["150", "223"], ["150", "223"], ["150", "223"], ["108", "223"], ["110", "223"], ["110", "223"], ["166", "223"], ["170", "223"], ["169", "223"], ["169", "223"], ["172", "223"], ["172", "223"], ["175", "223"], ["178", "223"], ["181", "223"], ["184", "223"], ["186", "223"], ["184", "223"], ["184", "223"], ["216", "223"], ["216", "223"], ["93", "223"], ["192", "223"], ["192", "223"], ["210", "223"], ["210", "223"], ["209", "223"], ["207", "223"], ["207", "223"], ["201", "223"], ["201", "223"], ["199", "223"], ["199", "223"], ["188", "223"], ["29", "30"], ["29", "32"], ["29", "46"], ["29", "54"], ["60", "58"], ["60", "58"], ["32", "35"], ["29", "35"], ["37", "35"], ["40", "35"], ["46", "49"], ["29", "49"], ["49", "219"], ["216", "219"], ["29", "219"], ["29", "37"], ["29", "45"], ["29", "60"], ["62", "60"], ["66", "65"], ["29", "65"], ["73", "71"], ["73", "71"], ["29", "77"], ["29", "82"], ["37", "40"], ["29", "40"], ["35", "62"], ["29", "62"], ["58", "66"], ["29", "66"], ["77", "80"], ["29", "80"], ["29", "87"], ["60", "73"], ["99", "73"], ["29", "73"], ["75", "73"], ["87", "90"], ["93", "90"], ["29", "90"], ["71", "90"], ["90", "93"], ["29", "93"], ["99", "97"], ["99", "97"], ["29", "166"], ["29", "175"], ["62", "75"], ["101", "75"], ["29", "75"], ["166", "169"], ["29", "169"], ["170", "169"], ["122", "172"], ["29", "172"], ["169", "172"], ["175", "178"], ["29", "178"], ["29", "181"], ["49", "216"], ["29", "216"], ["178", "216"], ["207", "216"], ["199", "216"], ["73", "99"], ["29", "99"], ["101", "99"], ["97", "104"], ["29", "104"], ["120", "170"], ["161", "170"], ["150", "170"], ["110", "170"], ["29", "170"], ["181", "184"], ["188", "184"], ["29", "184"], ["186", "184"], ["212", "188"], ["203", "188"], ["29", "188"], ["75", "101"], ["29", "101"], ["82", "108"], ["159", "108"], ["110", "108"], ["29", "108"], ["80", "110"], ["170", "110"], ["210", "110"], ["201", "110"], ["29", "110"], ["108", "110"], ["29", "116"], ["172", "186"], ["212", "186"], ["203", "186"], ["29", "186"], ["178", "207"], ["199", "207"], ["29", "207"], ["210", "207"], ["210", "207"], ["116", "119"], ["29", "119"], ["120", "119"], ["172", "122"], ["29", "122"], ["119", "122"], ["129", "127"], ["129", "127"], ["193", "192"], ["193", "192"], ["184", "192"], ["29", "192"], ["210", "209"], ["210", "209"], ["29", "209"], ["80", "120"], ["170", "120"], ["210", "120"], ["201", "120"], ["29", "120"], ["127", "133"], ["136", "133"], ["29", "133"], ["163", "136"], ["29", "136"], ["194", "193"], ["29", "193"], ["178", "199"], ["207", "199"], ["29", "199"], ["201", "199"], ["201", "199"], ["170", "210"], ["201", "210"], ["29", "210"], ["212", "210"], ["212", "210"], ["130", "129"], ["29", "129"], ["186", "194"], ["29", "194"], ["170", "201"], ["210", "201"], ["29", "201"], ["203", "201"], ["203", "201"], ["194", "212"], ["29", "212"], ["192", "212"], ["122", "130"], ["29", "130"], ["141", "140"], ["141", "140"], ["146", "140"], ["146", "140"], ["194", "203"], ["29", "203"], ["192", "203"], ["120", "141"], ["161", "141"], ["29", "141"], ["143", "141"], ["143", "141"], ["104", "146"], ["29", "146"], ["141", "150"], ["29", "150"], ["152", "150"], ["152", "150"], ["146", "150"], ["130", "143"], ["163", "143"], ["29", "143"], ["133", "143"], ["143", "152"], ["29", "152"], ["143", "152"], ["82", "159"], ["110", "159"], ["29", "159"], ["141", "161"], ["29", "161"], ["163", "161"], ["163", "161"], ["143", "163"], ["29", "163"], ["143", "163"], ["65", "73"], ["65", "77"], ["65", "75"], ["65", "87"], ["65", "90"], ["65", "79"], ["65", "80"], ["65", "66"], ["65", "65"], ["65", "82"], ["65", "71"], ["90", "169"], ["90", "178"], ["90", "104"], ["90", "168"], ["90", "170"], ["90", "97"], ["90", "181"], ["90", "93"], ["90", "101"], ["90", "184"], ["90", "90"], ["90", "186"], ["90", "99"], ["90", "166"], ["90", "177"], ["90", "216"], ["90", "175"], ["90", "172"], ["104", "120"], ["104", "119"], ["104", "129"], ["104", "130"], ["104", "118"], ["104", "127"], ["104", "108"], ["104", "116"], ["104", "122"], ["104", "110"], ["104", "133"], ["184", "188"], ["184", "192"], ["184", "184"], ["184", "194"], ["184", "186"], ["184", "193"], ["192", "209"], ["192", "207"], ["192", "212"], ["192", "201"], ["192", "210"], ["192", "199"], ["192", "203"], ["133", "146"], ["133", "141"], ["133", "140"], ["133", "143"], ["140", "136"], ["140", "161"], ["140", "163"], ["140", "150"], ["140", "152"], ["140", "159"], ["140", "133"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "43": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "46": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>4</SUB>>", "51": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "53": "<(LOCAL,int c: int)<SUB>5</SUB>>", "55": "<(IDENTIFIER,c,int c = 1)<SUB>5</SUB>>", "57": "<(LOCAL,int t: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,t,int t = parseInt(br.readLine()))<SUB>6</SUB>>", "61": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>6</SUB>>", "63": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "65": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,t,t--)<SUB>8</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>9</SUB>>", "73": "<(parseInt,parseInt(br.readLine()))<SUB>9</SUB>>", "75": "<(readLine,readLine())<SUB>9</SUB>>", "8": "<(LOCAL,HashMap&lt;Integer, Integer&gt; map: ANY)<SUB>10</SUB>>", "78": "<(IDENTIFIER,map,ANY map = new HashMap&lt;&gt;())<SUB>10</SUB>>", "80": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>10</SUB>>", "81": "<(LOCAL,int curr: int)<SUB>12</SUB>>", "83": "<(IDENTIFIER,curr,int curr = 0)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,int tt = parseInt(br.readLine()))<SUB>14</SUB>>", "99": "<(parseInt,parseInt(br.readLine()))<SUB>14</SUB>>", "101": "<(readLine,readLine())<SUB>14</SUB>>", "103": "<(CONTROL_STRUCTURE,if (tt == 1),if (tt == 1))<SUB>15</SUB>>", "105": "<(IDENTIFIER,tt,tt == 1)<SUB>15</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "109": "<(IDENTIFIER,curr,curr++)<SUB>16</SUB>>", "111": "<(IDENTIFIER,map,put(curr, 1))<SUB>17</SUB>>", "113": "<(LITERAL,1,put(curr, 1))<SUB>17</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "116": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>19</SUB>>", "118": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>19</SUB>>", "9": "<(IDENTIFIER,list,new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>19</SUB>>", "121": "<(IDENTIFIER,map,keySet())<SUB>19</SUB>>", "123": "<(IDENTIFIER,Collections,sort(list))<SUB>20</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int a = list.size() - 1; Some(a &gt;= 0); a--),for (int a = list.size() - 1; Some(a &gt;= 0); a--))<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.assignment,int a = list.size() - 1)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.subtraction,list.size() - 1)<SUB>21</SUB>>", "131": "<(IDENTIFIER,list,size())<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.greaterEqualsThan,a &gt;= 0)<SUB>21</SUB>>", "135": "<(LITERAL,0,a &gt;= 0)<SUB>21</SUB>>", "137": "<(IDENTIFIER,a,a--)<SUB>21</SUB>>", "139": "<(CONTROL_STRUCTURE,if (map.get(list.get(a)) == tt - 1),if (map.get(list.get(a)) == tt - 1))<SUB>22</SUB>>", "141": "<(get,get(list.get(a)))<SUB>22</SUB>>", "143": "<(get,get(a))<SUB>22</SUB>>", "145": "<(IDENTIFIER,a,get(a))<SUB>22</SUB>>", "147": "<(IDENTIFIER,tt,tt - 1)<SUB>22</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "151": "<(IDENTIFIER,map,put(list.get(a), tt))<SUB>23</SUB>>", "153": "<(IDENTIFIER,list,get(a))<SUB>23</SUB>>", "155": "<(IDENTIFIER,tt,put(list.get(a), tt))<SUB>23</SUB>>", "157": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.postDecrement,curr--)<SUB>26</SUB>>", "161": "<(remove,remove(list.get(a)))<SUB>27</SUB>>", "163": "<(get,get(a))<SUB>27</SUB>>", "165": "<(IDENTIFIER,a,get(a))<SUB>27</SUB>>", "166": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>31</SUB>>", "168": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>31</SUB>>", "11": "<(IDENTIFIER,list,new ArrayList&lt;Integer&gt;(map.keySet()))<SUB>31</SUB>>", "171": "<(IDENTIFIER,map,keySet())<SUB>31</SUB>>", "173": "<(IDENTIFIER,Collections,sort(list))<SUB>32</SUB>>", "14": "<(LOCAL,StringBuilder str: java.lang.StringBuilder)<SUB>33</SUB>>", "176": "<(IDENTIFIER,str,StringBuilder str = new StringBuilder())<SUB>33</SUB>>", "178": "<(&lt;init&gt;,new StringBuilder())<SUB>33</SUB>>", "179": "<(CONTROL_STRUCTURE,for (int a = 0; Some(a &lt; list.size()); a++),for (int a = 0; Some(a &lt; list.size()); a++))<SUB>34</SUB>>", "181": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>34</SUB>>", "183": "<(LITERAL,0,int a = 0)<SUB>34</SUB>>", "185": "<(IDENTIFIER,a,a &lt; list.size())<SUB>34</SUB>>", "187": "<(IDENTIFIER,list,size())<SUB>34</SUB>>", "189": "<(IDENTIFIER,a,a++)<SUB>34</SUB>>", "191": "<(CONTROL_STRUCTURE,if (list.size() - 1 == a),if (list.size() - 1 == a))<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.subtraction,list.size() - 1)<SUB>35</SUB>>", "195": "<(IDENTIFIER,list,size())<SUB>35</SUB>>", "197": "<(IDENTIFIER,a,list.size() - 1 == a)<SUB>35</SUB>>", "199": "<(append,append(map.get(list.get(a))))<SUB>36</SUB>>", "201": "<(get,get(list.get(a)))<SUB>36</SUB>>", "203": "<(get,get(a))<SUB>36</SUB>>", "205": "<(IDENTIFIER,a,get(a))<SUB>36</SUB>>", "207": "<(append,append(map.get(list.get(a)) + &quot;.&quot;))<SUB>39</SUB>>", "209": "<(&lt;operator&gt;.addition,map.get(list.get(a)) + &quot;.&quot;)<SUB>39</SUB>>", "211": "<(IDENTIFIER,map,get(list.get(a)))<SUB>39</SUB>>", "213": "<(IDENTIFIER,list,get(a))<SUB>39</SUB>>", "215": "<(LITERAL,&quot;.&quot;,map.get(list.get(a)) + &quot;.&quot;)<SUB>39</SUB>>", "217": "<(IDENTIFIER,pw,println(str))<SUB>40</SUB>>", "219": "<(close,close())<SUB>45</SUB>>", "221": "<(MODIFIER,PUBLIC)>", "223": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}