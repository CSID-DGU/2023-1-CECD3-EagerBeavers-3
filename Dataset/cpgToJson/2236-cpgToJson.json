{"edges": [["21", "22"], ["21", "23"], ["21", "202"], ["21", "203"], ["21", "204"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "46"], ["23", "53"], ["23", "170"], ["23", "171"], ["23", "174"], ["23", "197"], ["23", "200"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "52"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "73"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "72"], ["70", "71"], ["73", "74"], ["73", "77"], ["73", "113"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "87"], ["78", "79"], ["78", "86"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "97"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "106"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["114", "132"], ["115", "116"], ["115", "125"], ["116", "117"], ["116", "122"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "139"], ["132", "142"], ["132", "144"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "169"], ["154", "155"], ["154", "164"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["184", "194"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "48"], ["46", "55"], ["171", "176"], ["197", "200"], ["200", "204"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "46"], ["55", "60"], ["58", "70"], ["58", "171"], ["63", "60"], ["176", "179"], ["179", "190"], ["179", "197"], ["182", "179"], ["34", "32"], ["48", "47"], ["60", "58"], ["67", "74"], ["185", "194"], ["194", "182"], ["69", "67"], ["74", "82"], ["74", "119"], ["187", "185"], ["70", "69"], ["78", "89"], ["188", "187"], ["79", "78"], ["89", "92"], ["92", "102"], ["92", "63"], ["95", "92"], ["115", "136"], ["190", "188"], ["80", "79"], ["98", "95"], ["116", "126"], ["125", "115"], ["134", "139"], ["139", "149"], ["139", "63"], ["142", "139"], ["82", "80"], ["99", "107"], ["106", "98"], ["117", "122"], ["122", "116"], ["126", "129"], ["129", "125"], ["136", "134"], ["145", "142"], ["100", "99"], ["107", "110"], ["110", "106"], ["119", "117"], ["146", "158"], ["153", "145"], ["102", "100"], ["147", "146"], ["154", "153"], ["149", "147"], ["155", "165"], ["164", "154"], ["156", "161"], ["161", "155"], ["165", "164"], ["158", "156"], ["21", "26"], ["22", "204"], ["24", "204"], ["27", "204"], ["28", "204"], ["31", "204"], ["31", "204"], ["38", "204"], ["36", "204"], ["36", "204"], ["41", "204"], ["41", "204"], ["41", "204"], ["46", "204"], ["46", "204"], ["58", "204"], ["58", "204"], ["171", "204"], ["176", "204"], ["179", "204"], ["179", "204"], ["179", "204"], ["197", "204"], ["197", "204"], ["200", "204"], ["200", "204"], ["185", "204"], ["185", "204"], ["194", "204"], ["182", "204"], ["70", "204"], ["69", "204"], ["67", "204"], ["67", "204"], ["74", "204"], ["74", "204"], ["115", "204"], ["115", "204"], ["115", "204"], ["134", "204"], ["134", "204"], ["139", "204"], ["139", "204"], ["145", "204"], ["154", "204"], ["154", "204"], ["153", "204"], ["153", "204"], ["145", "204"], ["145", "204"], ["142", "204"], ["78", "204"], ["78", "204"], ["89", "204"], ["92", "204"], ["92", "204"], ["63", "204"], ["98", "204"], ["98", "204"], ["98", "204"], ["95", "204"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["21", "46"], ["21", "171"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "55"], ["21", "176"], ["31", "197"], ["21", "197"], ["171", "197"], ["194", "197"], ["197", "200"], ["21", "200"], ["27", "38"], ["21", "38"], ["36", "43"], ["21", "43"], ["55", "58"], ["63", "58"], ["21", "58"], ["60", "58"], ["60", "58"], ["21", "63"], ["58", "63"], ["69", "67"], ["69", "67"], ["176", "179"], ["182", "179"], ["21", "179"], ["60", "179"], ["190", "179"], ["179", "182"], ["21", "182"], ["153", "194"], ["21", "194"], ["43", "60"], ["136", "60"], ["92", "60"], ["21", "60"], ["171", "185"], ["194", "185"], ["21", "185"], ["185", "194"], ["70", "69"], ["21", "69"], ["67", "74"], ["21", "74"], ["21", "78"], ["38", "70"], ["21", "70"], ["21", "89"], ["89", "92"], ["95", "92"], ["21", "92"], ["60", "92"], ["110", "95"], ["21", "95"], ["136", "134"], ["136", "134"], ["179", "190"], ["21", "190"], ["134", "139"], ["142", "139"], ["21", "139"], ["21", "142"], ["139", "142"], ["153", "145"], ["153", "145"], ["58", "82"], ["21", "82"], ["60", "122"], ["21", "122"], ["122", "129"], ["21", "129"], ["129", "136"], ["21", "136"], ["92", "110"], ["21", "110"], ["58", "119"], ["21", "119"], ["21", "153"], ["21", "102"], ["58", "102"], ["21", "149"], ["58", "149"], ["139", "161"], ["21", "161"], ["21", "158"], ["58", "158"], ["58", "60"], ["58", "69"], ["58", "67"], ["58", "74"], ["58", "58"], ["58", "70"], ["58", "63"], ["179", "188"], ["179", "179"], ["179", "185"], ["179", "187"], ["179", "190"], ["179", "194"], ["179", "182"], ["74", "115"], ["74", "136"], ["74", "119"], ["74", "92"], ["74", "129"], ["74", "134"], ["74", "79"], ["74", "80"], ["74", "139"], ["74", "89"], ["74", "116"], ["74", "122"], ["74", "82"], ["74", "126"], ["74", "117"], ["74", "125"], ["74", "78"], ["92", "107"], ["92", "98"], ["92", "102"], ["92", "95"], ["92", "92"], ["92", "100"], ["92", "99"], ["92", "106"], ["92", "110"], ["139", "154"], ["139", "145"], ["139", "146"], ["139", "161"], ["139", "149"], ["139", "153"], ["139", "164"], ["139", "155"], ["139", "139"], ["139", "158"], ["139", "142"], ["139", "165"], ["139", "147"], ["139", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int N: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,N,int N = nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,long[][] dp = new long[N][N])<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.alloc,new long[N][N])>", "45": "<(IDENTIFIER,N,new long[N][N])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>6</SUB>>", "49": "<(IDENTIFIER,dp,dp[0][0] = 1L)<SUB>6</SUB>>", "51": "<(LITERAL,0,dp[0][0] = 1L)<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>7</SUB>>", "61": "<(IDENTIFIER,N,N - 1)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,char oper = charAt(0))<SUB>8</SUB>>", "69": "<(charAt,charAt(0))<SUB>8</SUB>>", "71": "<(IDENTIFIER,sc,next())<SUB>8</SUB>>", "73": "<(CONTROL_STRUCTURE,if (oper == 'f'),if (oper == 'f'))<SUB>9</SUB>>", "75": "<(IDENTIFIER,oper,oper == 'f')<SUB>9</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,dp[i + 1][0])<SUB>10</SUB>>", "81": "<(IDENTIFIER,dp,dp[i + 1][0] = 0L)<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "85": "<(LITERAL,0,dp[i + 1][0] = 0L)<SUB>10</SUB>>", "87": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; N); j++),for (int j = 1; Some(j &lt; N); j++))<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>11</SUB>>", "91": "<(LITERAL,1,int j = 1)<SUB>11</SUB>>", "93": "<(IDENTIFIER,j,j &lt; N)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j])<SUB>12</SUB>>", "101": "<(IDENTIFIER,dp,dp[i + 1][j] = dp[i][j - 1])<SUB>12</SUB>>", "103": "<(IDENTIFIER,i,i + 1)<SUB>12</SUB>>", "105": "<(IDENTIFIER,j,dp[i + 1][j] = dp[i][j - 1])<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>12</SUB>>", "109": "<(IDENTIFIER,i,dp[i + 1][j] = dp[i][j - 1])<SUB>12</SUB>>", "111": "<(IDENTIFIER,j,j - 1)<SUB>12</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,dp[i + 1][N - 1] = dp[i][N - 1])<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "121": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "123": "<(IDENTIFIER,N,N - 1)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,dp[i][N - 1])<SUB>16</SUB>>", "127": "<(IDENTIFIER,dp,dp[i + 1][N - 1] = dp[i][N - 1])<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>16</SUB>>", "131": "<(LITERAL,1,N - 1)<SUB>16</SUB>>", "133": "<(LOCAL,int j: int)<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,int j = N - 2)<SUB>17</SUB>>", "137": "<(IDENTIFIER,N,N - 2)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>17</SUB>>", "141": "<(LITERAL,0,j &gt;= 0)<SUB>17</SUB>>", "143": "<(IDENTIFIER,j,j--)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.assignment,dp[i + 1][j] = (dp[i + 1][j + 1] + dp[i][j]) % MOD)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.addition,i + 1)<SUB>18</SUB>>", "151": "<(LITERAL,1,i + 1)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.modulo,(dp[i + 1][j + 1] + dp[i][j]) % MOD)<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dp[i + 1][j + 1])<SUB>18</SUB>>", "157": "<(IDENTIFIER,dp,dp[i + 1][j + 1] + dp[i][j])<SUB>18</SUB>>", "159": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "161": "<(&lt;operator&gt;.addition,j + 1)<SUB>18</SUB>>", "163": "<(LITERAL,1,j + 1)<SUB>18</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>18</SUB>>", "167": "<(IDENTIFIER,i,dp[i + 1][j + 1] + dp[i][j])<SUB>18</SUB>>", "169": "<(IDENTIFIER,MOD,(dp[i + 1][j + 1] + dp[i][j]) % MOD)<SUB>18</SUB>>", "171": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>22</SUB>>", "173": "<(LITERAL,0,long res = 0)<SUB>22</SUB>>", "175": "<(LOCAL,int i: int)<SUB>23</SUB>>", "177": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>23</SUB>>", "181": "<(IDENTIFIER,N,i &lt; N)<SUB>23</SUB>>", "183": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.assignmentPlus,res += dp[N - 1][i])<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[N - 1][i])<SUB>24</SUB>>", "189": "<(IDENTIFIER,dp,res += dp[N - 1][i])<SUB>24</SUB>>", "191": "<(IDENTIFIER,N,N - 1)<SUB>24</SUB>>", "193": "<(IDENTIFIER,i,res += dp[N - 1][i])<SUB>24</SUB>>", "195": "<(IDENTIFIER,res,res %= MOD)<SUB>25</SUB>>", "197": "<(println,println(res))<SUB>27</SUB>>", "199": "<(IDENTIFIER,res,println(res))<SUB>27</SUB>>", "201": "<(IDENTIFIER,out,flush())<SUB>28</SUB>>", "203": "<(MODIFIER,STATIC)>"}}