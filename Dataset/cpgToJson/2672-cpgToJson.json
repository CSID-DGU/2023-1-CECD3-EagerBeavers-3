{"edges": [["17", "19"], ["17", "119"], ["17", "120"], ["17", "121"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "46"], ["19", "49"], ["19", "50"], ["19", "53"], ["19", "112"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["30", "31"], ["30", "32"], ["30", "35"], ["30", "38"], ["30", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "39"], ["40", "41"], ["40", "44"], ["41", "42"], ["41", "43"], ["44", "45"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "71"], ["63", "76"], ["64", "65"], ["64", "70"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "83"], ["76", "86"], ["76", "88"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "106"], ["97", "98"], ["97", "105"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["106", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["21", "28"], ["26", "32"], ["46", "50"], ["50", "55"], ["112", "121"], ["23", "21"], ["28", "26"], ["32", "35"], ["35", "41"], ["35", "46"], ["38", "35"], ["40", "38"], ["55", "58"], ["58", "66"], ["58", "115"], ["61", "58"], ["113", "116"], ["116", "112"], ["41", "44"], ["44", "40"], ["71", "80"], ["115", "113"], ["65", "61"], ["65", "73"], ["73", "71"], ["78", "83"], ["83", "91"], ["83", "61"], ["86", "83"], ["66", "65"], ["80", "78"], ["90", "86"], ["90", "99"], ["97", "108"], ["97", "86"], ["91", "90"], ["98", "97"], ["107", "86"], ["99", "102"], ["102", "98"], ["108", "107"], ["17", "23"], ["18", "121"], ["23", "121"], ["21", "121"], ["21", "121"], ["26", "121"], ["26", "121"], ["46", "121"], ["46", "121"], ["50", "121"], ["55", "121"], ["58", "121"], ["58", "121"], ["58", "121"], ["112", "121"], ["116", "121"], ["112", "121"], ["112", "121"], ["65", "121"], ["65", "121"], ["71", "121"], ["71", "121"], ["78", "121"], ["78", "121"], ["83", "121"], ["83", "121"], ["90", "121"], ["90", "121"], ["98", "121"], ["98", "121"], ["97", "121"], ["97", "121"], ["107", "121"], ["107", "121"], ["86", "121"], ["61", "121"], ["40", "121"], ["44", "121"], ["40", "121"], ["40", "121"], ["38", "121"], ["46", "121"], ["116", "121"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "50"], ["17", "32"], ["44", "40"], ["17", "46"], ["26", "46"], ["40", "46"], ["17", "55"], ["116", "112"], ["116", "112"], ["17", "23"], ["21", "28"], ["17", "28"], ["32", "35"], ["38", "35"], ["17", "35"], ["28", "35"], ["35", "38"], ["17", "38"], ["55", "58"], ["61", "58"], ["17", "58"], ["35", "58"], ["83", "58"], ["58", "61"], ["17", "61"], ["73", "71"], ["73", "71"], ["17", "116"], ["50", "116"], ["71", "116"], ["23", "44"], ["17", "44"], ["58", "78"], ["17", "78"], ["46", "65"], ["98", "65"], ["40", "65"], ["17", "65"], ["50", "73"], ["71", "73"], ["17", "73"], ["78", "83"], ["86", "83"], ["17", "83"], ["58", "83"], ["83", "86"], ["17", "86"], ["58", "80"], ["17", "80"], ["46", "90"], ["98", "90"], ["107", "90"], ["17", "90"], ["98", "97"], ["98", "97"], ["17", "97"], ["71", "107"], ["17", "107"], ["46", "98"], ["90", "98"], ["65", "98"], ["35", "38"], ["35", "40"], ["35", "44"], ["35", "35"], ["35", "41"], ["58", "66"], ["58", "65"], ["58", "58"], ["58", "61"], ["65", "73"], ["65", "80"], ["65", "83"], ["65", "71"], ["65", "78"], ["83", "91"], ["83", "90"], ["83", "83"], ["83", "86"], ["90", "98"], ["90", "99"], ["90", "102"], ["90", "97"], ["97", "107"], ["97", "108"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,int[] a: int[])<SUB>4</SUB>>", "27": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>4</SUB>>", "29": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "31": "<(LOCAL,int i: int)<SUB>6</SUB>>", "33": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "35": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "37": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "39": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "43": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>7</SUB>>", "45": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "47": "<(IDENTIFIER,Arrays,sort(a))<SUB>9</SUB>>", "49": "<(LOCAL,int c: int)<SUB>10</SUB>>", "51": "<(IDENTIFIER,c,int c = 0)<SUB>10</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.lessThan,a[i] &lt; 0)<SUB>12</SUB>>", "67": "<(IDENTIFIER,a,a[i] &lt; 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,a[i] &lt; 0)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.assignment,c = c - 1)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.subtraction,c - 1)<SUB>13</SUB>>", "75": "<(LITERAL,1,c - 1)<SUB>13</SUB>>", "77": "<(LOCAL,int j: int)<SUB>14</SUB>>", "79": "<(IDENTIFIER,j,int j = i + 1)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,i + 1)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>14</SUB>>", "85": "<(IDENTIFIER,n,j &lt; n)<SUB>14</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "89": "<(CONTROL_STRUCTURE,if (a[j] &lt; 0),if (a[j] &lt; 0))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>15</SUB>>", "93": "<(IDENTIFIER,j,a[j] &lt; 0)<SUB>15</SUB>>", "95": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>16</SUB>>", "101": "<(IDENTIFIER,j,a[j] % a[i])<SUB>16</SUB>>", "103": "<(IDENTIFIER,a,a[j] % a[i])<SUB>16</SUB>>", "105": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,a[j] = c)<SUB>18</SUB>>", "109": "<(IDENTIFIER,a,a[j] = c)<SUB>18</SUB>>", "111": "<(IDENTIFIER,c,a[j] = c)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "115": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "117": "<(IDENTIFIER,Math,Math.abs(c))<SUB>23</SUB>>", "119": "<(MODIFIER,PUBLIC)>", "121": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}