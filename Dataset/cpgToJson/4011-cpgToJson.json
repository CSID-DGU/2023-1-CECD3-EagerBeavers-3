{"edges": [["21", "22"], ["21", "23"], ["21", "114"], ["21", "115"], ["21", "116"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "45"], ["23", "46"], ["23", "49"], ["23", "112"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "44"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "62"], ["59", "66"], ["59", "70"], ["59", "71"], ["59", "76"], ["59", "6"], ["59", "103"], ["59", "106"], ["59", "108"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "95"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["103", "104"], ["103", "105"], ["106", "5"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "111"], ["112", "113"], ["24", "31"], ["27", "46"], ["46", "51"], ["112", "116"], ["26", "24"], ["51", "54"], ["54", "64"], ["54", "112"], ["57", "54"], ["29", "37"], ["32", "27"], ["62", "68"], ["66", "73"], ["71", "78"], ["103", "106"], ["106", "108"], ["108", "57"], ["31", "29"], ["64", "62"], ["68", "66"], ["73", "71"], ["78", "81"], ["81", "89"], ["81", "105"], ["84", "81"], ["105", "103"], ["35", "42"], ["38", "32"], ["87", "97"], ["95", "84"], ["37", "35"], ["40", "38"], ["88", "93"], ["93", "87"], ["96", "101"], ["101", "95"], ["42", "40"], ["89", "88"], ["97", "96"], ["21", "26"], ["22", "116"], ["24", "116"], ["32", "116"], ["35", "116"], ["38", "116"], ["38", "116"], ["38", "116"], ["32", "116"], ["27", "116"], ["46", "116"], ["51", "116"], ["54", "116"], ["54", "116"], ["54", "116"], ["112", "116"], ["112", "116"], ["62", "116"], ["68", "116"], ["66", "116"], ["66", "116"], ["71", "116"], ["71", "116"], ["78", "116"], ["81", "116"], ["81", "116"], ["81", "116"], ["103", "116"], ["106", "116"], ["108", "116"], ["108", "116"], ["108", "116"], ["108", "116"], ["57", "116"], ["87", "116"], ["87", "116"], ["95", "116"], ["101", "116"], ["95", "116"], ["95", "116"], ["84", "116"], ["21", "22"], ["21", "24"], ["21", "46"], ["24", "27"], ["21", "27"], ["35", "27"], ["32", "27"], ["21", "51"], ["27", "112"], ["106", "112"], ["21", "112"], ["21", "29"], ["21", "44"], ["51", "54"], ["57", "54"], ["21", "54"], ["46", "54"], ["54", "57"], ["21", "57"], ["64", "62"], ["68", "66"], ["73", "71"], ["73", "71"], ["21", "103"], ["29", "32"], ["21", "32"], ["35", "32"], ["38", "32"], ["21", "78"], ["103", "106"], ["21", "106"], ["27", "106"], ["106", "108"], ["21", "108"], ["71", "108"], ["66", "108"], ["21", "35"], ["21", "43"], ["68", "64"], ["101", "64"], ["21", "64"], ["64", "68"], ["21", "68"], ["62", "73"], ["21", "73"], ["78", "81"], ["84", "81"], ["21", "81"], ["73", "81"], ["81", "84"], ["21", "84"], ["93", "87"], ["101", "95"], ["35", "38"], ["21", "38"], ["68", "93"], ["101", "93"], ["21", "93"], ["93", "101"], ["21", "101"], ["54", "68"], ["54", "73"], ["54", "64"], ["54", "57"], ["54", "66"], ["54", "81"], ["54", "103"], ["54", "106"], ["54", "54"], ["54", "71"], ["54", "105"], ["54", "108"], ["54", "78"], ["54", "62"], ["81", "96"], ["81", "89"], ["81", "81"], ["81", "84"], ["81", "95"], ["81", "87"], ["81", "97"], ["81", "93"], ["81", "101"], ["81", "88"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj1,new BufferedWriter(new OutputStreamWriter(System.out)))>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new OutputStreamWriter(System.out))>", "41": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "45": "<(LOCAL,int T: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,T,int T = 1)<SUB>4</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int t = 0; Some(t &lt; T); t++),for (int t = 0; Some(t &lt; T); t++))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>5</SUB>>", "53": "<(LITERAL,0,int t = 0)<SUB>5</SUB>>", "55": "<(IDENTIFIER,t,t &lt; T)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,t++)<SUB>5</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "61": "<(LOCAL,int k: int)<SUB>6</SUB>>", "63": "<(IDENTIFIER,n,int n = Int())<SUB>6</SUB>>", "65": "<(IDENTIFIER,this,Int())<SUB>6</SUB>>", "67": "<(IDENTIFIER,k,int k = Int())<SUB>6</SUB>>", "69": "<(IDENTIFIER,this,Int())<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.assignment,int[][] A = new int[n][2])<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[n][2])>", "75": "<(LITERAL,2,new int[n][2])<SUB>7</SUB>>", "77": "<(LOCAL,int i: int)<SUB>8</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "83": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.assignment,A[i][0] = Int())<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,A[i][0] = Int())<SUB>9</SUB>>", "93": "<(Int,Int())<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.assignment,A[i][1] = Int())<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>10</SUB>>", "99": "<(IDENTIFIER,i,A[i][1] = Int())<SUB>10</SUB>>", "101": "<(Int,Int())<SUB>10</SUB>>", "6": "<(LOCAL,Solution sol: ANY)<SUB>13</SUB>>", "104": "<(IDENTIFIER,sol,ANY sol = new Solution(out))<SUB>13</SUB>>", "106": "<(&lt;init&gt;,new Solution(out))<SUB>13</SUB>>", "107": "<(IDENTIFIER,out,new Solution(out))<SUB>13</SUB>>", "109": "<(IDENTIFIER,sol,solution(A, k))<SUB>14</SUB>>", "111": "<(IDENTIFIER,k,solution(A, k))<SUB>14</SUB>>", "113": "<(IDENTIFIER,out,close())<SUB>16</SUB>>", "115": "<(MODIFIER,STATIC)>"}}