{"edges": [["21", "23"], ["21", "123"], ["21", "124"], ["21", "125"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "6"], ["23", "46"], ["23", "49"], ["23", "50"], ["23", "74"], ["23", "77"], ["23", "78"], ["23", "81"], ["23", "118"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "5"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "60"], ["50", "62"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "69"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "91"], ["81", "93"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "103"], ["100", "104"], ["100", "111"], ["101", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["46", "49"], ["49", "52"], ["74", "78"], ["78", "83"], ["118", "125"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "46"], ["52", "59"], ["55", "64"], ["55", "74"], ["60", "59"], ["83", "90"], ["86", "97"], ["86", "121"], ["91", "90"], ["119", "118"], ["30", "28"], ["57", "55"], ["63", "71"], ["69", "60"], ["88", "86"], ["121", "119"], ["59", "57"], ["64", "67"], ["67", "63"], ["71", "69"], ["90", "88"], ["95", "101"], ["95", "91"], ["97", "95"], ["101", "107"], ["104", "112"], ["106", "104"], ["112", "115"], ["112", "91"], ["115", "91"], ["107", "106"], ["21", "26"], ["22", "125"], ["24", "125"], ["27", "125"], ["27", "125"], ["32", "125"], ["37", "125"], ["39", "125"], ["37", "125"], ["37", "125"], ["44", "125"], ["42", "125"], ["42", "125"], ["46", "125"], ["49", "125"], ["49", "125"], ["74", "125"], ["74", "125"], ["78", "125"], ["83", "125"], ["86", "125"], ["86", "125"], ["86", "125"], ["118", "125"], ["118", "125"], ["118", "125"], ["95", "125"], ["95", "125"], ["95", "125"], ["101", "125"], ["106", "125"], ["106", "125"], ["104", "125"], ["104", "125"], ["112", "125"], ["112", "125"], ["112", "125"], ["115", "125"], ["115", "125"], ["115", "125"], ["91", "125"], ["67", "125"], ["63", "125"], ["63", "125"], ["69", "125"], ["69", "125"], ["69", "125"], ["60", "125"], ["74", "125"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["21", "46"], ["21", "78"], ["24", "27"], ["21", "27"], ["46", "49"], ["21", "49"], ["21", "52"], ["21", "74"], ["42", "74"], ["55", "74"], ["69", "74"], ["21", "83"], ["78", "118"], ["101", "118"], ["21", "118"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["32", "44"], ["21", "44"], ["52", "55"], ["60", "55"], ["21", "55"], ["42", "55"], ["55", "60"], ["21", "60"], ["67", "63"], ["83", "86"], ["91", "86"], ["21", "86"], ["74", "86"], ["86", "91"], ["21", "91"], ["49", "69"], ["21", "69"], ["42", "69"], ["63", "69"], ["39", "67"], ["21", "67"], ["49", "95"], ["112", "95"], ["115", "95"], ["69", "95"], ["21", "95"], ["74", "95"], ["106", "95"], ["69", "95"], ["106", "104"], ["106", "104"], ["78", "101"], ["21", "101"], ["74", "106"], ["95", "106"], ["37", "106"], ["21", "106"], ["95", "112"], ["21", "112"], ["104", "112"], ["112", "115"], ["21", "115"], ["112", "115"], ["55", "60"], ["55", "64"], ["55", "57"], ["55", "71"], ["55", "69"], ["55", "67"], ["55", "63"], ["55", "59"], ["55", "55"], ["86", "88"], ["86", "95"], ["86", "97"], ["86", "91"], ["86", "90"], ["86", "86"], ["95", "107"], ["95", "104"], ["95", "106"], ["95", "112"], ["95", "101"], ["112", "115"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY s = new Parserdoubt3(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Parserdoubt3(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Parserdoubt3(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Parserdoubt3(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,long k = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,Long[] a: java.lang.Long[])<SUB>5</SUB>>", "43": "<(IDENTIFIER,a,Long[] a = new Long[n])<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,new Long[n])<SUB>5</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY tree = new TreeSet&lt;Long&gt;())<SUB>6</SUB>>", "48": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Long&gt;())<SUB>6</SUB>>", "5": "<(IDENTIFIER,tree,new TreeSet&lt;Long&gt;())<SUB>6</SUB>>", "51": "<(LOCAL,int i: int)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; a.length)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.fieldAccess,a.length)<SUB>7</SUB>>", "59": "<(FIELD_IDENTIFIER,length,length)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,a[i] = nextLong())<SUB>8</SUB>>", "65": "<(IDENTIFIER,a,a[i] = nextLong())<SUB>8</SUB>>", "67": "<(nextLong,nextLong())<SUB>8</SUB>>", "69": "<(add,add(a[i]))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,add(a[i]))<SUB>9</SUB>>", "75": "<(IDENTIFIER,Arrays,sort(a))<SUB>11</SUB>>", "77": "<(LOCAL,int ans: int)<SUB>13</SUB>>", "79": "<(IDENTIFIER,ans,int ans = 0)<SUB>13</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; a.length); i++),for (int i = 0; Some(i &lt; a.length); i++))<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "87": "<(IDENTIFIER,i,i &lt; a.length)<SUB>15</SUB>>", "89": "<(IDENTIFIER,a,i &lt; a.length)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(contains,contains(a[i]))<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,contains(a[i]))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>17</SUB>>", "103": "<(LOCAL,long next: long)<SUB>18</SUB>>", "105": "<(IDENTIFIER,next,long next = a[i] * k)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>18</SUB>>", "109": "<(IDENTIFIER,i,a[i] * k)<SUB>18</SUB>>", "111": "<(CONTROL_STRUCTURE,if (tree.contains(next)),if (tree.contains(next)))<SUB>19</SUB>>", "113": "<(IDENTIFIER,tree,contains(next))<SUB>19</SUB>>", "115": "<(remove,remove(next))<SUB>19</SUB>>", "117": "<(IDENTIFIER,next,remove(next))<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "121": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}