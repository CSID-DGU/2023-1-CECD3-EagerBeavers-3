{"edges": [["17", "19"], ["17", "81"], ["17", "82"], ["17", "83"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "36"], ["19", "37"], ["19", "40"], ["19", "43"], ["19", "47"], ["19", "62"], ["19", "79"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "67"], ["63", "64"], ["63", "66"], ["64", "65"], ["67", "68"], ["67", "69"], ["67", "73"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["75", "78"], ["79", "80"], ["20", "28"], ["23", "37"], ["37", "40"], ["40", "45"], ["43", "49"], ["79", "83"], ["22", "20"], ["45", "43"], ["49", "52"], ["52", "59"], ["52", "64"], ["55", "52"], ["57", "55"], ["63", "71"], ["63", "79"], ["26", "33"], ["29", "23"], ["59", "57"], ["64", "63"], ["69", "75"], ["73", "64"], ["28", "26"], ["31", "29"], ["71", "69"], ["75", "73"], ["33", "31"], ["17", "22"], ["18", "83"], ["20", "83"], ["26", "83"], ["29", "83"], ["29", "83"], ["29", "83"], ["23", "83"], ["37", "83"], ["40", "83"], ["43", "83"], ["43", "83"], ["49", "83"], ["52", "83"], ["52", "83"], ["64", "83"], ["63", "83"], ["63", "83"], ["63", "83"], ["79", "83"], ["79", "83"], ["69", "83"], ["69", "83"], ["75", "83"], ["73", "83"], ["73", "83"], ["57", "83"], ["57", "83"], ["55", "83"], ["45", "83"], ["57", "83"], ["71", "83"], ["17", "18"], ["17", "20"], ["17", "37"], ["17", "40"], ["45", "43"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "49"], ["23", "79"], ["73", "79"], ["17", "79"], ["17", "26"], ["17", "34"], ["17", "45"], ["49", "52"], ["55", "52"], ["17", "52"], ["59", "55"], ["17", "55"], ["17", "57"], ["59", "57"], ["64", "63"], ["43", "63"], ["17", "63"], ["71", "69"], ["26", "29"], ["17", "29"], ["52", "59"], ["17", "59"], ["40", "64"], ["17", "64"], ["23", "73"], ["17", "73"], ["17", "71"], ["17", "75"], ["52", "57"], ["52", "52"], ["52", "59"], ["52", "55"], ["63", "73"], ["63", "64"], ["63", "71"], ["63", "75"], ["63", "69"], ["63", "63"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,out,out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new BufferedOutputStream(System.out))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>2</SUB>>", "35": "<(LOCAL,int t: int)<SUB>60</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = 1)<SUB>60</SUB>>", "39": "<(LITERAL,1,int t = 1)<SUB>60</SUB>>", "41": "<(IDENTIFIER,tt,int tt = 0)<SUB>60</SUB>>", "43": "<(&lt;operator&gt;.assignment,t = ni())<SUB>61</SUB>>", "45": "<(ni,ni())<SUB>61</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; 40000); i++),for (int i = 1; Some(i &lt; 40000); i++))<SUB>62</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>62</SUB>>", "51": "<(LITERAL,1,int i = 1)<SUB>62</SUB>>", "53": "<(IDENTIFIER,i,i &lt; 40000)<SUB>62</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>62</SUB>>", "57": "<(add,add(i * i))<SUB>62</SUB>>", "59": "<(&lt;operator&gt;.multiplication,i * i)<SUB>62</SUB>>", "61": "<(IDENTIFIER,i,i * i)<SUB>62</SUB>>", "63": "<(&lt;operator&gt;.lessThan,tt++ &lt; t)<SUB>63</SUB>>", "65": "<(IDENTIFIER,tt,tt++)<SUB>63</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "69": "<(&lt;operator&gt;.assignment,boolean res = solve())<SUB>64</SUB>>", "71": "<(solve,solve())<SUB>64</SUB>>", "73": "<(println,println(res ? &quot;YES&quot; : &quot;NO&quot;))<SUB>66</SUB>>", "75": "<(&lt;operator&gt;.conditional,res ? &quot;YES&quot; : &quot;NO&quot;)<SUB>66</SUB>>", "77": "<(LITERAL,&quot;YES&quot;,res ? &quot;YES&quot; : &quot;NO&quot;)<SUB>66</SUB>>", "79": "<(close,close())<SUB>68</SUB>>", "81": "<(MODIFIER,PUBLIC)>", "83": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}