{"edges": [["19", "20"], ["19", "21"], ["19", "208"], ["19", "209"], ["19", "210"], ["21", "22"], ["22", "23"], ["22", "199"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "40"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "48"], ["23", "49"], ["23", "50"], ["23", "70"], ["23", "76"], ["23", "81"], ["23", "84"], ["23", "87"], ["23", "91"], ["23", "145"], ["23", "152"], ["23", "172"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "61"], ["55", "56"], ["55", "57"], ["57", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["72", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "95"], ["91", "98"], ["91", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "126"], ["100", "132"], ["100", "139"], ["100", "142"], ["101", "102"], ["101", "110"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "117"], ["111", "112"], ["111", "113"], ["113", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["128", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "164"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "176"], ["172", "179"], ["172", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["182", "183"], ["182", "190"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["190", "191"], ["190", "198"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["199", "200"], ["200", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["24", "31"], ["27", "41"], ["41", "45"], ["45", "51"], ["70", "78"], ["76", "81"], ["81", "84"], ["84", "89"], ["87", "92"], ["145", "155"], ["26", "24"], ["51", "60"], ["51", "72"], ["72", "70"], ["78", "76"], ["89", "87"], ["92", "95"], ["95", "103"], ["95", "148"], ["98", "95"], ["147", "145"], ["153", "168"], ["153", "173"], ["173", "176"], ["176", "210"], ["176", "204"], ["176", "185"], ["179", "176"], ["201", "210"], ["29", "36"], ["32", "27"], ["55", "68"], ["61", "51"], ["126", "133"], ["132", "139"], ["139", "142"], ["142", "98"], ["148", "147"], ["154", "160"], ["159", "153"], ["165", "173"], ["202", "205"], ["205", "201"], ["31", "29"], ["34", "32"], ["57", "55"], ["63", "61"], ["102", "116"], ["102", "128"], ["128", "126"], ["133", "136"], ["136", "132"], ["155", "154"], ["160", "159"], ["167", "165"], ["183", "194"], ["183", "179"], ["204", "202"], ["36", "34"], ["58", "57"], ["65", "63"], ["103", "102"], ["103", "108"], ["106", "102"], ["111", "124"], ["117", "103"], ["168", "167"], ["184", "183"], ["191", "210"], ["191", "204"], ["60", "58"], ["67", "65"], ["108", "106"], ["113", "111"], ["119", "117"], ["185", "184"], ["192", "195"], ["195", "191"], ["68", "67"], ["114", "113"], ["121", "119"], ["194", "192"], ["116", "114"], ["123", "121"], ["124", "123"], ["19", "26"], ["20", "210"], ["24", "210"], ["27", "210"], ["29", "210"], ["32", "210"], ["32", "210"], ["32", "210"], ["27", "210"], ["41", "210"], ["45", "210"], ["51", "210"], ["70", "210"], ["70", "210"], ["78", "210"], ["76", "210"], ["76", "210"], ["81", "210"], ["81", "210"], ["84", "210"], ["84", "210"], ["87", "210"], ["87", "210"], ["87", "210"], ["145", "210"], ["147", "210"], ["145", "210"], ["145", "210"], ["154", "210"], ["153", "210"], ["159", "210"], ["153", "210"], ["153", "210"], ["165", "210"], ["167", "210"], ["165", "210"], ["165", "210"], ["173", "210"], ["176", "210"], ["176", "210"], ["176", "210"], ["184", "210"], ["183", "210"], ["183", "210"], ["183", "210"], ["179", "210"], ["102", "210"], ["106", "210"], ["102", "210"], ["102", "210"], ["126", "210"], ["126", "210"], ["132", "210"], ["136", "210"], ["132", "210"], ["132", "210"], ["139", "210"], ["139", "210"], ["142", "210"], ["142", "210"], ["98", "210"], ["113", "210"], ["111", "210"], ["111", "210"], ["121", "210"], ["121", "210"], ["119", "210"], ["117", "210"], ["117", "210"], ["57", "210"], ["55", "210"], ["55", "210"], ["65", "210"], ["65", "210"], ["63", "210"], ["61", "210"], ["61", "210"], ["205", "210"], ["19", "20"], ["19", "24"], ["19", "41"], ["19", "45"], ["72", "70"], ["72", "70"], ["72", "70"], ["78", "76"], ["78", "76"], ["19", "81"], ["19", "84"], ["89", "87"], ["147", "145"], ["147", "145"], ["19", "200"], ["24", "27"], ["19", "27"], ["29", "27"], ["32", "27"], ["19", "92"], ["19", "173"], ["19", "29"], ["19", "37"], ["41", "51"], ["19", "51"], ["55", "51"], ["57", "55"], ["63", "61"], ["63", "61"], ["45", "72"], ["61", "72"], ["19", "72"], ["19", "78"], ["70", "78"], ["76", "89"], ["19", "89"], ["92", "95"], ["98", "95"], ["19", "95"], ["89", "95"], ["95", "98"], ["19", "98"], ["128", "126"], ["128", "126"], ["128", "126"], ["136", "132"], ["136", "132"], ["19", "139"], ["19", "142"], ["87", "147"], ["19", "147"], ["154", "153"], ["154", "153"], ["159", "153"], ["159", "153"], ["167", "165"], ["167", "165"], ["173", "176"], ["179", "176"], ["19", "176"], ["95", "176"], ["176", "179"], ["19", "179"], ["191", "201"], ["19", "201"], ["29", "32"], ["19", "32"], ["87", "154"], ["19", "154"], ["87", "159"], ["19", "159"], ["19", "205"], ["32", "57"], ["45", "63"], ["61", "63"], ["19", "63"], ["65", "63"], ["65", "63"], ["103", "102"], ["103", "102"], ["106", "102"], ["106", "102"], ["113", "111"], ["119", "117"], ["119", "117"], ["84", "128"], ["139", "128"], ["117", "128"], ["19", "128"], ["78", "136"], ["19", "136"], ["126", "136"], ["87", "167"], ["154", "167"], ["19", "167"], ["184", "183"], ["184", "183"], ["145", "183"], ["165", "183"], ["19", "183"], ["19", "65"], ["55", "65"], ["81", "103"], ["142", "103"], ["19", "103"], ["111", "103"], ["103", "106"], ["19", "106"], ["108", "106"], ["87", "184"], ["132", "184"], ["19", "184"], ["176", "191"], ["19", "191"], ["19", "67"], ["55", "67"], ["19", "108"], ["32", "113"], ["57", "113"], ["84", "119"], ["139", "119"], ["117", "119"], ["19", "119"], ["121", "119"], ["121", "119"], ["176", "195"], ["19", "195"], ["65", "121"], ["19", "121"], ["111", "121"], ["19", "123"], ["111", "123"], ["51", "68"], ["51", "60"], ["51", "51"], ["51", "57"], ["51", "67"], ["51", "58"], ["51", "61"], ["51", "65"], ["51", "63"], ["51", "55"], ["95", "98"], ["95", "136"], ["95", "128"], ["95", "102"], ["95", "103"], ["95", "132"], ["95", "95"], ["95", "139"], ["95", "142"], ["95", "126"], ["95", "133"], ["153", "167"], ["153", "168"], ["153", "165"], ["176", "185"], ["176", "204"], ["176", "184"], ["176", "202"], ["176", "201"], ["176", "205"], ["176", "183"], ["102", "113"], ["102", "102"], ["102", "114"], ["102", "103"], ["102", "119"], ["102", "121"], ["102", "111"], ["102", "116"], ["102", "123"], ["102", "117"], ["102", "124"], ["183", "192"], ["183", "179"], ["183", "191"], ["183", "195"], ["183", "194"], ["183", "176"], ["183", "204"], ["183", "202"], ["183", "201"], ["183", "205"], ["103", "108"], ["103", "106"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(BLOCK,try,try)<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>5</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>5</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(LOCAL,int n: int)<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,int temp = 1)<SUB>6</SUB>>", "43": "<(LITERAL,1,int temp = 1)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,String str = &quot;&quot;)<SUB>7</SUB>>", "47": "<(LITERAL,&quot;&quot;,String str = &quot;&quot;)<SUB>7</SUB>>", "49": "<(LOCAL,int r: int)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.notEquals,temp != '\\n')<SUB>11</SUB>>", "53": "<(LITERAL,'\\n',temp != '\\n')<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.assignment,temp = System.in.read())<SUB>12</SUB>>", "57": "<(read,System.in.read())<SUB>12</SUB>>", "59": "<(IDENTIFIER,System,System.in.read())<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.assignment,str = str.concat(Character.toString((char) temp)))<SUB>15</SUB>>", "63": "<(concat,str.concat(Character.toString((char) temp)))<SUB>15</SUB>>", "65": "<(toString,Character.toString((char) temp))<SUB>15</SUB>>", "67": "<(&lt;operator&gt;.cast,(char) temp)<SUB>15</SUB>>", "69": "<(IDENTIFIER,temp,(char) temp)<SUB>15</SUB>>", "71": "<(IDENTIFIER,str,str = str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>17</SUB>>", "73": "<(IDENTIFIER,str,str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>17</SUB>>", "75": "<(LITERAL,&quot;&quot;,str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>17</SUB>>", "77": "<(IDENTIFIER,n,n = Integer.parseInt(str))<SUB>18</SUB>>", "79": "<(IDENTIFIER,Integer,Integer.parseInt(str))<SUB>18</SUB>>", "81": "<(&lt;operator&gt;.assignment,temp = 1)<SUB>19</SUB>>", "83": "<(LITERAL,1,temp = 1)<SUB>19</SUB>>", "85": "<(IDENTIFIER,str,str = &quot;&quot;)<SUB>20</SUB>>", "87": "<(&lt;operator&gt;.assignment,arr = new int[n])<SUB>22</SUB>>", "89": "<(&lt;operator&gt;.alloc,new int[n])>", "91": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>24</SUB>>", "93": "<(IDENTIFIER,i,i = 0)<SUB>24</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>24</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>24</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "101": "<(CONTROL_STRUCTURE,while (temp != ' ' &amp;&amp; temp != -1),while (temp != ' ' &amp;&amp; temp != -1))<SUB>25</SUB>>", "103": "<(&lt;operator&gt;.notEquals,temp != ' ')<SUB>25</SUB>>", "105": "<(LITERAL,' ',temp != ' ')<SUB>25</SUB>>", "107": "<(IDENTIFIER,temp,temp != -1)<SUB>25</SUB>>", "109": "<(LITERAL,1,-1)<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.assignment,temp = System.in.read())<SUB>26</SUB>>", "113": "<(read,System.in.read())<SUB>26</SUB>>", "115": "<(IDENTIFIER,System,System.in.read())<SUB>26</SUB>>", "117": "<(&lt;operator&gt;.assignment,str = str.concat(Character.toString((char) temp)))<SUB>29</SUB>>", "119": "<(concat,str.concat(Character.toString((char) temp)))<SUB>29</SUB>>", "121": "<(toString,Character.toString((char) temp))<SUB>29</SUB>>", "123": "<(&lt;operator&gt;.cast,(char) temp)<SUB>29</SUB>>", "125": "<(IDENTIFIER,temp,(char) temp)<SUB>29</SUB>>", "127": "<(IDENTIFIER,str,str = str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>31</SUB>>", "129": "<(IDENTIFIER,str,str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>31</SUB>>", "131": "<(LITERAL,&quot;&quot;,str.replaceAll(&quot;[^0-9]&quot;, &quot;&quot;))<SUB>31</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>32</SUB>>", "135": "<(IDENTIFIER,i,arr[i] = Integer.parseInt(str))<SUB>32</SUB>>", "137": "<(IDENTIFIER,Integer,Integer.parseInt(str))<SUB>32</SUB>>", "139": "<(&lt;operator&gt;.assignment,str = &quot;&quot;)<SUB>33</SUB>>", "141": "<(LITERAL,&quot;&quot;,str = &quot;&quot;)<SUB>33</SUB>>", "143": "<(IDENTIFIER,temp,temp = 1)<SUB>34</SUB>>", "145": "<(&lt;operator&gt;.assignment,r = arr[2] % 2)<SUB>37</SUB>>", "147": "<(&lt;operator&gt;.modulo,arr[2] % 2)<SUB>37</SUB>>", "149": "<(IDENTIFIER,arr,arr[2] % 2)<SUB>37</SUB>>", "151": "<(LITERAL,2,arr[2] % 2)<SUB>37</SUB>>", "153": "<(&lt;operator&gt;.equals,(arr[0] % 2) == (arr[1] % 2))<SUB>38</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,arr[0])<SUB>38</SUB>>", "157": "<(LITERAL,0,arr[0] % 2)<SUB>38</SUB>>", "159": "<(&lt;operator&gt;.modulo,arr[1] % 2)<SUB>38</SUB>>", "161": "<(IDENTIFIER,arr,arr[1] % 2)<SUB>38</SUB>>", "163": "<(LITERAL,2,arr[1] % 2)<SUB>38</SUB>>", "165": "<(&lt;operator&gt;.assignment,r = arr[0] % 2)<SUB>39</SUB>>", "167": "<(&lt;operator&gt;.modulo,arr[0] % 2)<SUB>39</SUB>>", "169": "<(IDENTIFIER,arr,arr[0] % 2)<SUB>39</SUB>>", "171": "<(LITERAL,2,arr[0] % 2)<SUB>39</SUB>>", "173": "<(&lt;operator&gt;.assignment,i = 0)<SUB>42</SUB>>", "175": "<(LITERAL,0,i = 0)<SUB>42</SUB>>", "177": "<(IDENTIFIER,i,i &lt; n)<SUB>42</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "183": "<(&lt;operator&gt;.notEquals,(arr[i] % 2) != r)<SUB>43</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>43</SUB>>", "187": "<(IDENTIFIER,i,arr[i] % 2)<SUB>43</SUB>>", "189": "<(IDENTIFIER,r,(arr[i] % 2) != r)<SUB>43</SUB>>", "191": "<(println,System.out.println(i + 1))<SUB>44</SUB>>", "193": "<(IDENTIFIER,System,System.out.println(i + 1))<SUB>44</SUB>>", "195": "<(&lt;operator&gt;.addition,i + 1)<SUB>44</SUB>>", "197": "<(LITERAL,1,i + 1)<SUB>44</SUB>>", "199": "<(BLOCK,catch,catch)>", "201": "<(println,System.out.println(&quot;OH NOES &quot; + e))<SUB>50</SUB>>", "203": "<(IDENTIFIER,System,System.out.println(&quot;OH NOES &quot; + e))<SUB>50</SUB>>", "205": "<(&lt;operator&gt;.addition,&quot;OH NOES &quot; + e)<SUB>50</SUB>>", "207": "<(IDENTIFIER,e,&quot;OH NOES &quot; + e)<SUB>50</SUB>>", "209": "<(MODIFIER,STATIC)>"}}