{"edges": [["21", "23"], ["21", "111"], ["21", "112"], ["21", "113"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "63"], ["23", "6"], ["23", "66"], ["23", "69"], ["23", "70"], ["23", "71"], ["23", "74"], ["23", "106"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "5"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "92"], ["86", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "104"], ["93", "94"], ["93", "102"], ["94", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["104", "105"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "44"], ["42", "48"], ["63", "68"], ["66", "69"], ["69", "71"], ["71", "76"], ["106", "113"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "63"], ["54", "51"], ["68", "66"], ["76", "79"], ["79", "89"], ["79", "109"], ["82", "79"], ["107", "106"], ["30", "28"], ["57", "54"], ["109", "107"], ["58", "61"], ["61", "57"], ["86", "98"], ["86", "82"], ["87", "86"], ["104", "82"], ["89", "87"], ["95", "104"], ["97", "95"], ["98", "97"], ["21", "26"], ["22", "113"], ["24", "113"], ["27", "113"], ["27", "113"], ["32", "113"], ["37", "113"], ["39", "113"], ["37", "113"], ["37", "113"], ["42", "113"], ["42", "113"], ["63", "113"], ["63", "113"], ["66", "113"], ["69", "113"], ["69", "113"], ["71", "113"], ["76", "113"], ["79", "113"], ["79", "113"], ["79", "113"], ["106", "113"], ["106", "113"], ["106", "113"], ["87", "113"], ["87", "113"], ["86", "113"], ["86", "113"], ["95", "113"], ["97", "113"], ["97", "113"], ["95", "113"], ["95", "113"], ["104", "113"], ["82", "113"], ["57", "113"], ["61", "113"], ["57", "113"], ["57", "113"], ["54", "113"], ["63", "113"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["44", "42"], ["21", "66"], ["21", "71"], ["24", "27"], ["21", "27"], ["21", "48"], ["21", "63"], ["42", "63"], ["57", "63"], ["66", "69"], ["21", "69"], ["21", "76"], ["71", "106"], ["104", "106"], ["21", "106"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["32", "44"], ["21", "44"], ["48", "51"], ["54", "51"], ["21", "51"], ["44", "51"], ["51", "54"], ["21", "54"], ["61", "57"], ["76", "79"], ["82", "79"], ["21", "79"], ["51", "79"], ["79", "82"], ["21", "82"], ["39", "61"], ["21", "61"], ["87", "86"], ["87", "86"], ["69", "87"], ["95", "87"], ["21", "87"], ["63", "87"], ["97", "87"], ["57", "87"], ["71", "104"], ["21", "104"], ["21", "103"], ["87", "95"], ["21", "95"], ["97", "95"], ["97", "95"], ["63", "97"], ["87", "97"], ["37", "97"], ["21", "97"], ["51", "58"], ["51", "61"], ["51", "51"], ["51", "57"], ["51", "54"], ["79", "89"], ["79", "87"], ["79", "82"], ["79", "79"], ["79", "86"], ["86", "98"], ["86", "104"], ["86", "95"], ["86", "97"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,long k = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,long[] nums: long[])<SUB>5</SUB>>", "43": "<(IDENTIFIER,nums,long[] nums = new long[n])<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,new long[n])<SUB>5</SUB>>", "47": "<(LOCAL,int i: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,nums[i] = nextInt())<SUB>7</SUB>>", "59": "<(IDENTIFIER,nums,nums[i] = nextInt())<SUB>7</SUB>>", "61": "<(nextInt,nextInt())<SUB>7</SUB>>", "63": "<(sort,sort(nums))<SUB>9</SUB>>", "65": "<(IDENTIFIER,nums,sort(nums))<SUB>9</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY wrong = new TreeSet&lt;Long&gt;())<SUB>10</SUB>>", "68": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Long&gt;())<SUB>10</SUB>>", "5": "<(IDENTIFIER,wrong,new TreeSet&lt;Long&gt;())<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>11</SUB>>", "73": "<(LITERAL,0,long ans = 0)<SUB>11</SUB>>", "75": "<(LOCAL,int i: int)<SUB>12</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,if (!wrong.contains(nums[i])),if (!wrong.contains(nums[i])))<SUB>13</SUB>>", "87": "<(contains,contains(nums[i]))<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,contains(nums[i]))<SUB>13</SUB>>", "93": "<(CONTROL_STRUCTURE,try,try)<SUB>14</SUB>>", "95": "<(add,add(nums[i] * k))<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.multiplication,nums[i] * k)<SUB>15</SUB>>", "99": "<(IDENTIFIER,nums,nums[i] * k)<SUB>15</SUB>>", "101": "<(IDENTIFIER,k,nums[i] * k)<SUB>15</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "105": "<(IDENTIFIER,ans,ans++)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "111": "<(MODIFIER,PUBLIC)>", "113": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}