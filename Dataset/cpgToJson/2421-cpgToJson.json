{"edges": [["19", "21"], ["19", "143"], ["19", "144"], ["19", "145"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "28"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "37"], ["21", "38"], ["21", "42"], ["21", "81"], ["21", "82"], ["21", "87"], ["21", "88"], ["21", "92"], ["21", "141"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["25", "27"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "59"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "79"], ["71", "80"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "105"], ["102", "109"], ["102", "113"], ["102", "114"], ["102", "121"], ["102", "122"], ["102", "131"], ["102", "136"], ["105", "106"], ["105", "107"], ["107", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["22", "25"], ["25", "32"], ["30", "34"], ["34", "40"], ["38", "44"], ["82", "90"], ["88", "94"], ["141", "145"], ["24", "22"], ["32", "30"], ["40", "38"], ["44", "47"], ["47", "54"], ["47", "84"], ["50", "47"], ["84", "82"], ["90", "88"], ["94", "97"], ["97", "107"], ["97", "141"], ["100", "97"], ["53", "61"], ["105", "111"], ["109", "117"], ["114", "127"], ["122", "133"], ["131", "138"], ["136", "100"], ["54", "57"], ["57", "53"], ["61", "64"], ["64", "73"], ["64", "50"], ["67", "64"], ["69", "67"], ["107", "105"], ["111", "109"], ["116", "114"], ["124", "122"], ["133", "131"], ["138", "136"], ["71", "69"], ["117", "116"], ["125", "124"], ["72", "71"], ["127", "125"], ["73", "76"], ["76", "72"], ["19", "24"], ["20", "145"], ["22", "145"], ["25", "145"], ["30", "145"], ["34", "145"], ["34", "145"], ["38", "145"], ["38", "145"], ["38", "145"], ["47", "145"], ["47", "145"], ["82", "145"], ["82", "145"], ["82", "145"], ["88", "145"], ["88", "145"], ["94", "145"], ["97", "145"], ["97", "145"], ["97", "145"], ["141", "145"], ["141", "145"], ["105", "145"], ["109", "145"], ["109", "145"], ["117", "145"], ["117", "145"], ["116", "145"], ["114", "145"], ["114", "145"], ["125", "145"], ["125", "145"], ["124", "145"], ["122", "145"], ["122", "145"], ["131", "145"], ["133", "145"], ["131", "145"], ["136", "145"], ["136", "145"], ["100", "145"], ["53", "145"], ["53", "145"], ["61", "145"], ["64", "145"], ["64", "145"], ["50", "145"], ["69", "145"], ["72", "145"], ["72", "145"], ["71", "145"], ["69", "145"], ["67", "145"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "34"], ["40", "38"], ["84", "82"], ["84", "82"], ["90", "88"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "94"], ["90", "141"], ["136", "141"], ["19", "141"], ["25", "32"], ["19", "32"], ["30", "40"], ["19", "40"], ["44", "47"], ["50", "47"], ["19", "47"], ["40", "47"], ["64", "50"], ["19", "50"], ["57", "53"], ["19", "84"], ["32", "90"], ["57", "90"], ["19", "90"], ["94", "97"], ["100", "97"], ["19", "97"], ["88", "97"], ["97", "100"], ["19", "100"], ["107", "105"], ["111", "109"], ["117", "114"], ["117", "114"], ["19", "114"], ["124", "122"], ["124", "122"], ["133", "131"], ["133", "131"], ["19", "61"], ["19", "69"], ["34", "131"], ["69", "131"], ["19", "131"], ["111", "136"], ["19", "136"], ["82", "136"], ["32", "57"], ["19", "57"], ["61", "64"], ["67", "64"], ["19", "64"], ["47", "64"], ["64", "67"], ["19", "67"], ["34", "69"], ["90", "107"], ["136", "107"], ["19", "107"], ["107", "111"], ["19", "111"], ["117", "116"], ["117", "116"], ["19", "116"], ["125", "124"], ["125", "124"], ["19", "124"], ["122", "133"], ["19", "133"], ["19", "71"], ["109", "117"], ["19", "117"], ["105", "117"], ["127", "125"], ["19", "125"], ["127", "125"], ["38", "72"], ["53", "72"], ["114", "127"], ["19", "127"], ["47", "47"], ["47", "64"], ["47", "57"], ["47", "50"], ["47", "54"], ["47", "61"], ["47", "53"], ["97", "107"], ["97", "136"], ["97", "116"], ["97", "122"], ["97", "114"], ["97", "131"], ["97", "97"], ["97", "138"], ["97", "105"], ["97", "100"], ["97", "117"], ["97", "127"], ["97", "124"], ["97", "125"], ["97", "111"], ["97", "109"], ["97", "133"], ["64", "73"], ["64", "64"], ["64", "72"], ["64", "69"], ["64", "67"], ["64", "76"], ["64", "71"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY io = new IO(null, null))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new IO(null, null))<SUB>2</SUB>>", "3": "<(IDENTIFIER,io,new IO(null, null))<SUB>2</SUB>>", "27": "<(LITERAL,null,new IO(null, null))<SUB>2</SUB>>", "29": "<(LOCAL,int ans: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = getNextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,io,getNextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,ans,int ans = 0)<SUB>3</SUB>>", "37": "<(LOCAL,int[] A: int[])<SUB>4</SUB>>", "39": "<(IDENTIFIER,A,int[] A = new int[n])<SUB>4</SUB>>", "41": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "43": "<(LOCAL,int i: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,A[i] = getNextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,A,A[i] = getNextInt())<SUB>6</SUB>>", "57": "<(getNextInt,getNextInt())<SUB>6</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int j = 0)<SUB>7</SUB>>", "65": "<(IDENTIFIER,j,j &lt; i)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,j++)<SUB>7</SUB>>", "69": "<(&lt;operators&gt;.assignmentXor,ans ^= (A[j] &gt; A[i]) ? 1 : 0)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.conditional,(A[j] &gt; A[i]) ? 1 : 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,A[j])<SUB>8</SUB>>", "75": "<(IDENTIFIER,j,A[j] &gt; A[i])<SUB>8</SUB>>", "77": "<(IDENTIFIER,A,A[j] &gt; A[i])<SUB>8</SUB>>", "79": "<(LITERAL,1,(A[j] &gt; A[i]) ? 1 : 0)<SUB>8</SUB>>", "81": "<(LOCAL,String[] word: java.lang.String[])<SUB>10</SUB>>", "83": "<(IDENTIFIER,word,String[] word = { &quot;even&quot;, &quot;odd&quot; })<SUB>10</SUB>>", "85": "<(LITERAL,&quot;even&quot;,{ &quot;even&quot;, &quot;odd&quot; })<SUB>10</SUB>>", "87": "<(LOCAL,int m: int)<SUB>11</SUB>>", "89": "<(IDENTIFIER,m,int m = getNextInt())<SUB>11</SUB>>", "91": "<(IDENTIFIER,io,getNextInt())<SUB>11</SUB>>", "93": "<(LOCAL,int i: int)<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>12</SUB>>", "99": "<(IDENTIFIER,m,i &lt; m)<SUB>12</SUB>>", "101": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "103": "<(LOCAL,int l: int)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.assignment,int l = getNextInt())<SUB>13</SUB>>", "107": "<(getNextInt,getNextInt())<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,int r = getNextInt())<SUB>13</SUB>>", "111": "<(getNextInt,getNextInt())<SUB>13</SUB>>", "113": "<(LOCAL,int len: int)<SUB>14</SUB>>", "115": "<(IDENTIFIER,len,int len = r - l + 1)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.subtraction,r - l)<SUB>14</SUB>>", "119": "<(IDENTIFIER,l,r - l)<SUB>14</SUB>>", "121": "<(LOCAL,long tot: long)<SUB>15</SUB>>", "123": "<(IDENTIFIER,tot,long tot = len * (len - 1L) / 2)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.multiplication,len * (len - 1L))<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.subtraction,len - 1L)<SUB>15</SUB>>", "129": "<(LITERAL,1L,len - 1L)<SUB>15</SUB>>", "131": "<(&lt;operators&gt;.assignmentXor,ans ^= tot &amp; 1)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.and,tot &amp; 1)<SUB>16</SUB>>", "135": "<(LITERAL,1,tot &amp; 1)<SUB>16</SUB>>", "137": "<(IDENTIFIER,io,println(word[ans]))<SUB>17</SUB>>", "139": "<(IDENTIFIER,word,println(word[ans]))<SUB>17</SUB>>", "141": "<(close,close())<SUB>19</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}