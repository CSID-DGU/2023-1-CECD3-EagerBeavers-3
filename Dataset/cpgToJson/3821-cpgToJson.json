{"edges": [["21", "23"], ["21", "413"], ["21", "414"], ["21", "415"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "38"], ["23", "42"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "52"], ["23", "59"], ["23", "66"], ["23", "85"], ["23", "104"], ["23", "409"], ["23", "411"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "110"], ["104", "140"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "138"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "137"], ["135", "136"], ["138", "139"], ["140", "141"], ["141", "142"], ["141", "143"], ["141", "153"], ["141", "370"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "151"], ["145", "152"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "163"], ["153", "165"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["165", "166"], ["165", "184"], ["165", "277"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["176", "178"], ["176", "183"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "204"], ["194", "206"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "215"], ["206", "245"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "223"], ["216", "217"], ["216", "222"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["223", "224"], ["223", "225"], ["223", "232"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["232", "233"], ["232", "244"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "255"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["255", "266"], ["257", "258"], ["257", "263"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "276"], ["267", "268"], ["267", "275"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["277", "278"], ["277", "279"], ["277", "282"], ["277", "287"], ["277", "289"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["289", "290"], ["289", "291"], ["289", "294"], ["289", "297"], ["289", "299"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["297", "298"], ["299", "300"], ["299", "301"], ["299", "308"], ["299", "338"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["308", "309"], ["308", "316"], ["309", "310"], ["309", "315"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["316", "317"], ["316", "318"], ["316", "325"], ["318", "319"], ["318", "324"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["325", "326"], ["325", "337"], ["326", "327"], ["326", "336"], ["327", "328"], ["327", "333"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "335"], ["338", "339"], ["338", "348"], ["339", "340"], ["339", "347"], ["340", "341"], ["340", "344"], ["341", "342"], ["341", "343"], ["344", "345"], ["344", "346"], ["348", "349"], ["348", "350"], ["348", "359"], ["350", "351"], ["350", "358"], ["351", "352"], ["351", "355"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "357"], ["359", "360"], ["359", "369"], ["360", "361"], ["360", "368"], ["361", "362"], ["361", "367"], ["362", "363"], ["362", "364"], ["364", "365"], ["364", "366"], ["370", "371"], ["370", "372"], ["370", "375"], ["370", "378"], ["370", "380"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "377"], ["378", "379"], ["380", "381"], ["380", "407"], ["381", "382"], ["381", "383"], ["381", "386"], ["381", "389"], ["381", "391"], ["383", "384"], ["383", "385"], ["386", "387"], ["386", "388"], ["389", "390"], ["391", "392"], ["392", "393"], ["392", "394"], ["394", "395"], ["394", "406"], ["395", "396"], ["395", "397"], ["397", "398"], ["397", "405"], ["398", "399"], ["398", "404"], ["399", "400"], ["399", "401"], ["401", "402"], ["401", "403"], ["407", "408"], ["409", "410"], ["411", "412"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "40"], ["38", "44"], ["42", "48"], ["46", "56"], ["52", "62"], ["59", "68"], ["409", "411"], ["411", "415"], ["26", "24"], ["30", "28"], ["32", "31"], ["40", "38"], ["44", "42"], ["48", "46"], ["54", "52"], ["61", "59"], ["68", "71"], ["71", "77"], ["71", "87"], ["74", "71"], ["76", "74"], ["87", "92"], ["90", "98"], ["90", "106"], ["95", "92"], ["97", "95"], ["105", "113"], ["105", "147"], ["34", "32"], ["56", "54"], ["62", "61"], ["77", "82"], ["80", "76"], ["92", "90"], ["98", "101"], ["101", "97"], ["106", "105"], ["82", "80"], ["113", "116"], ["116", "124"], ["116", "409"], ["119", "116"], ["143", "155"], ["138", "119"], ["145", "143"], ["155", "159"], ["158", "168"], ["158", "372"], ["163", "159"], ["372", "375"], ["375", "383"], ["375", "409"], ["378", "375"], ["124", "127"], ["127", "135"], ["127", "138"], ["130", "127"], ["132", "130"], ["146", "145"], ["159", "158"], ["407", "378"], ["134", "132"], ["147", "146"], ["168", "171"], ["171", "179"], ["171", "186"], ["174", "171"], ["176", "174"], ["186", "189"], ["189", "196"], ["189", "279"], ["192", "189"], ["279", "283"], ["282", "291"], ["282", "163"], ["287", "283"], ["383", "386"], ["386", "401"], ["386", "407"], ["389", "386"], ["135", "134"], ["178", "176"], ["196", "200"], ["199", "211"], ["199", "192"], ["204", "200"], ["283", "282"], ["291", "294"], ["294", "304"], ["294", "287"], ["297", "294"], ["392", "389"], ["179", "178"], ["200", "199"], ["208", "218"], ["215", "248"], ["245", "204"], ["301", "311"], ["308", "341"], ["338", "297"], ["394", "392"], ["210", "208"], ["216", "227"], ["223", "215"], ["246", "259"], ["255", "245"], ["303", "301"], ["309", "320"], ["316", "308"], ["339", "352"], ["348", "338"], ["395", "394"], ["211", "210"], ["217", "216"], ["225", "237"], ["232", "223"], ["247", "252"], ["252", "246"], ["257", "271"], ["266", "255"], ["304", "303"], ["310", "309"], ["318", "330"], ["325", "316"], ["340", "339"], ["350", "364"], ["359", "348"], ["397", "395"], ["218", "217"], ["226", "225"], ["233", "232"], ["248", "247"], ["258", "263"], ["263", "257"], ["267", "266"], ["311", "310"], ["319", "318"], ["326", "325"], ["341", "344"], ["344", "340"], ["351", "350"], ["360", "359"], ["398", "397"], ["227", "226"], ["234", "241"], ["241", "233"], ["259", "258"], ["268", "267"], ["320", "319"], ["327", "326"], ["352", "355"], ["355", "351"], ["361", "360"], ["399", "398"], ["235", "234"], ["269", "268"], ["328", "333"], ["333", "327"], ["362", "361"], ["401", "399"], ["237", "235"], ["271", "269"], ["330", "328"], ["364", "362"], ["21", "26"], ["22", "415"], ["24", "415"], ["27", "415"], ["28", "415"], ["31", "415"], ["31", "415"], ["38", "415"], ["42", "415"], ["48", "415"], ["46", "415"], ["46", "415"], ["52", "415"], ["54", "415"], ["52", "415"], ["52", "415"], ["59", "415"], ["61", "415"], ["59", "415"], ["59", "415"], ["90", "415"], ["90", "415"], ["106", "415"], ["105", "415"], ["105", "415"], ["143", "415"], ["146", "415"], ["145", "415"], ["145", "415"], ["143", "415"], ["143", "415"], ["155", "415"], ["159", "415"], ["158", "415"], ["158", "415"], ["158", "415"], ["372", "415"], ["375", "415"], ["375", "415"], ["375", "415"], ["383", "415"], ["386", "415"], ["386", "415"], ["386", "415"], ["407", "415"], ["378", "415"], ["401", "415"], ["395", "415"], ["394", "415"], ["392", "415"], ["392", "415"], ["389", "415"], ["282", "415"], ["282", "415"], ["163", "415"], ["291", "415"], ["294", "415"], ["294", "415"], ["294", "415"], ["287", "415"], ["301", "415"], ["301", "415"], ["308", "415"], ["325", "415"], ["316", "415"], ["308", "415"], ["308", "415"], ["338", "415"], ["348", "415"], ["359", "415"], ["359", "415"], ["348", "415"], ["338", "415"], ["338", "415"], ["297", "415"], ["196", "415"], ["200", "415"], ["199", "415"], ["199", "415"], ["199", "415"], ["192", "415"], ["208", "415"], ["208", "415"], ["215", "415"], ["232", "415"], ["223", "415"], ["215", "415"], ["215", "415"], ["245", "415"], ["255", "415"], ["266", "415"], ["266", "415"], ["255", "415"], ["245", "415"], ["245", "415"], ["204", "415"], ["176", "415"], ["176", "415"], ["176", "415"], ["174", "415"], ["113", "415"], ["116", "415"], ["116", "415"], ["116", "415"], ["409", "415"], ["411", "415"], ["411", "415"], ["124", "415"], ["127", "415"], ["127", "415"], ["127", "415"], ["138", "415"], ["119", "415"], ["134", "415"], ["132", "415"], ["132", "415"], ["130", "415"], ["97", "415"], ["101", "415"], ["101", "415"], ["97", "415"], ["97", "415"], ["95", "415"], ["76", "415"], ["80", "415"], ["82", "415"], ["80", "415"], ["76", "415"], ["76", "415"], ["74", "415"], ["176", "415"], ["21", "22"], ["21", "24"], ["21", "28"], ["40", "38"], ["44", "42"], ["48", "46"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "68"], ["80", "76"], ["80", "76"], ["21", "87"], ["101", "97"], ["101", "97"], ["31", "409"], ["407", "409"], ["138", "409"], ["21", "409"], ["409", "411"], ["21", "411"], ["27", "40"], ["21", "40"], ["40", "44"], ["21", "44"], ["44", "48"], ["21", "48"], ["38", "54"], ["21", "54"], ["56", "54"], ["56", "54"], ["62", "61"], ["62", "61"], ["56", "61"], ["21", "61"], ["68", "71"], ["74", "71"], ["21", "71"], ["62", "71"], ["71", "74"], ["21", "74"], ["87", "90"], ["95", "90"], ["21", "90"], ["92", "90"], ["92", "90"], ["90", "95"], ["21", "95"], ["106", "105"], ["106", "105"], ["21", "105"], ["42", "56"], ["21", "56"], ["54", "62"], ["21", "62"], ["48", "80"], ["21", "80"], ["82", "80"], ["82", "80"], ["71", "92"], ["21", "92"], ["48", "101"], ["80", "101"], ["21", "101"], ["61", "101"], ["82", "101"], ["46", "106"], ["21", "106"], ["21", "113"], ["145", "143"], ["145", "143"], ["145", "143"], ["61", "82"], ["21", "82"], ["113", "116"], ["119", "116"], ["21", "116"], ["92", "116"], ["116", "119"], ["21", "119"], ["21", "155"], ["21", "372"], ["21", "124"], ["31", "138"], ["132", "138"], ["21", "138"], ["147", "145"], ["147", "145"], ["21", "145"], ["92", "145"], ["61", "145"], ["101", "145"], ["82", "145"], ["159", "158"], ["159", "158"], ["147", "158"], ["21", "158"], ["159", "163"], ["364", "163"], ["271", "163"], ["21", "163"], ["372", "375"], ["378", "375"], ["21", "375"], ["145", "375"], ["282", "375"], ["375", "378"], ["21", "378"], ["124", "127"], ["130", "127"], ["21", "127"], ["61", "127"], ["101", "127"], ["82", "127"], ["127", "130"], ["21", "130"], ["31", "132"], ["138", "132"], ["21", "132"], ["135", "132"], ["147", "146"], ["147", "146"], ["21", "146"], ["21", "159"], ["155", "159"], ["163", "159"], ["21", "168"], ["21", "186"], ["21", "279"], ["21", "383"], ["31", "407"], ["392", "407"], ["21", "407"], ["135", "134"], ["21", "134"], ["106", "147"], ["21", "147"], ["168", "171"], ["174", "171"], ["21", "171"], ["145", "171"], ["282", "171"], ["171", "174"], ["21", "174"], ["21", "176"], ["308", "176"], ["215", "176"], ["245", "176"], ["186", "189"], ["192", "189"], ["21", "189"], ["171", "189"], ["189", "192"], ["21", "192"], ["21", "196"], ["279", "282"], ["287", "282"], ["21", "282"], ["189", "282"], ["21", "287"], ["279", "287"], ["21", "291"], ["383", "386"], ["389", "386"], ["21", "386"], ["145", "386"], ["294", "386"], ["199", "386"], ["386", "389"], ["21", "389"], ["21", "135"], ["196", "199"], ["204", "199"], ["21", "199"], ["145", "199"], ["294", "199"], ["21", "204"], ["196", "204"], ["223", "215"], ["223", "215"], ["223", "215"], ["255", "245"], ["255", "245"], ["255", "245"], ["279", "283"], ["287", "283"], ["21", "283"], ["291", "294"], ["297", "294"], ["21", "294"], ["145", "294"], ["199", "294"], ["294", "297"], ["21", "297"], ["316", "308"], ["316", "308"], ["316", "308"], ["348", "338"], ["348", "338"], ["348", "338"], ["31", "392"], ["407", "392"], ["21", "392"], ["395", "392"], ["395", "392"], ["196", "200"], ["204", "200"], ["21", "200"], ["395", "394"], ["395", "394"], ["21", "394"], ["348", "223"], ["255", "223"], ["21", "223"], ["308", "223"], ["215", "223"], ["208", "223"], ["223", "255"], ["21", "255"], ["245", "255"], ["208", "255"], ["348", "316"], ["255", "316"], ["21", "316"], ["308", "316"], ["215", "316"], ["301", "316"], ["316", "348"], ["21", "348"], ["338", "348"], ["301", "348"], ["21", "395"], ["208", "232"], ["21", "232"], ["21", "252"], ["196", "252"], ["204", "252"], ["21", "266"], ["208", "266"], ["301", "325"], ["21", "325"], ["21", "359"], ["301", "359"], ["21", "263"], ["196", "263"], ["204", "263"], ["21", "344"], ["279", "344"], ["287", "344"], ["21", "241"], ["196", "241"], ["204", "241"], ["21", "355"], ["279", "355"], ["287", "355"], ["21", "333"], ["279", "333"], ["287", "333"], ["158", "401"], ["21", "401"], ["159", "237"], ["271", "237"], ["21", "237"], ["237", "271"], ["21", "271"], ["159", "330"], ["364", "330"], ["271", "330"], ["21", "330"], ["330", "364"], ["21", "364"], ["71", "74"], ["71", "76"], ["71", "80"], ["71", "71"], ["71", "77"], ["71", "82"], ["90", "95"], ["90", "98"], ["90", "92"], ["90", "97"], ["90", "101"], ["90", "90"], ["105", "146"], ["105", "158"], ["105", "116"], ["105", "159"], ["105", "372"], ["105", "147"], ["105", "113"], ["105", "145"], ["105", "375"], ["105", "155"], ["105", "143"], ["116", "138"], ["116", "127"], ["116", "116"], ["116", "119"], ["116", "124"], ["158", "163"], ["158", "283"], ["158", "168"], ["158", "186"], ["158", "158"], ["158", "159"], ["158", "282"], ["158", "279"], ["158", "189"], ["158", "171"], ["375", "383"], ["375", "378"], ["375", "386"], ["375", "375"], ["375", "407"], ["127", "134"], ["127", "127"], ["127", "135"], ["127", "132"], ["127", "130"], ["171", "174"], ["171", "176"], ["171", "179"], ["171", "178"], ["171", "171"], ["189", "192"], ["189", "196"], ["189", "200"], ["189", "199"], ["189", "189"], ["282", "283"], ["282", "282"], ["282", "291"], ["282", "287"], ["282", "294"], ["386", "401"], ["386", "392"], ["386", "394"], ["386", "389"], ["386", "397"], ["386", "386"], ["386", "395"], ["386", "398"], ["386", "399"], ["199", "215"], ["199", "226"], ["199", "204"], ["199", "247"], ["199", "208"], ["199", "258"], ["199", "268"], ["199", "200"], ["199", "217"], ["199", "237"], ["199", "199"], ["199", "241"], ["199", "216"], ["199", "227"], ["199", "269"], ["199", "225"], ["199", "257"], ["199", "232"], ["199", "245"], ["199", "255"], ["199", "223"], ["199", "259"], ["199", "246"], ["199", "267"], ["199", "233"], ["199", "252"], ["199", "235"], ["199", "210"], ["199", "234"], ["199", "263"], ["199", "211"], ["199", "271"], ["199", "248"], ["199", "218"], ["199", "266"], ["294", "308"], ["294", "326"], ["294", "338"], ["294", "340"], ["294", "362"], ["294", "355"], ["294", "304"], ["294", "348"], ["294", "364"], ["294", "311"], ["294", "328"], ["294", "310"], ["294", "360"], ["294", "316"], ["294", "297"], ["294", "351"], ["294", "319"], ["294", "320"], ["294", "309"], ["294", "341"], ["294", "301"], ["294", "339"], ["294", "325"], ["294", "361"], ["294", "318"], ["294", "352"], ["294", "333"], ["294", "359"], ["294", "327"], ["294", "330"], ["294", "294"], ["294", "350"], ["294", "303"], ["294", "344"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pr = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pr,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>6</SUB>>", "37": "<(LOCAL,int k: int)<SUB>6</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,fs,nextInt())<SUB>6</SUB>>", "43": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "45": "<(IDENTIFIER,fs,nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,fs,nextInt())<SUB>6</SUB>>", "51": "<(LOCAL,int[][] down: int[][])<SUB>7</SUB>>", "53": "<(IDENTIFIER,right,int[][] right = new int[n][m - 1])<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>7</SUB>>", "57": "<(IDENTIFIER,m,m - 1)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[][] down = new int[n - 1][m])<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "63": "<(IDENTIFIER,n,n - 1)<SUB>7</SUB>>", "65": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>7</SUB>>", "67": "<(LOCAL,int i: int)<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "73": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,right[i])<SUB>8</SUB>>", "79": "<(IDENTIFIER,i,right[i] = readArray(m - 1))<SUB>8</SUB>>", "81": "<(IDENTIFIER,fs,readArray(m - 1))<SUB>8</SUB>>", "83": "<(IDENTIFIER,m,m - 1)<SUB>8</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>9</SUB>>", "93": "<(IDENTIFIER,n,n - 1)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.assignment,down[i] = readArray(m))<SUB>9</SUB>>", "99": "<(IDENTIFIER,down,down[i] = readArray(m))<SUB>9</SUB>>", "101": "<(readArray,readArray(m))<SUB>9</SUB>>", "103": "<(IDENTIFIER,m,readArray(m))<SUB>9</SUB>>", "105": "<(&lt;operator&gt;.equals,k % 2 == 1)<SUB>10</SUB>>", "107": "<(IDENTIFIER,k,k % 2)<SUB>10</SUB>>", "109": "<(LITERAL,1,k % 2 == 1)<SUB>10</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "115": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "117": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "123": "<(LOCAL,int j: int)<SUB>12</SUB>>", "125": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>12</SUB>>", "129": "<(IDENTIFIER,m,j &lt; m)<SUB>12</SUB>>", "131": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "133": "<(IDENTIFIER,pr,print(-1 + &quot; &quot;))<SUB>12</SUB>>", "135": "<(&lt;operator&gt;.minus,-1)<SUB>12</SUB>>", "137": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>12</SUB>>", "139": "<(IDENTIFIER,pr,println())<SUB>13</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[k / 2 + 1][n][m])<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.alloc,new int[k / 2 + 1][n][m])>", "147": "<(&lt;operator&gt;.division,k / 2)<SUB>16</SUB>>", "149": "<(LITERAL,2,k / 2)<SUB>16</SUB>>", "151": "<(IDENTIFIER,n,new int[k / 2 + 1][n][m])<SUB>16</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int r = 1; Some(2 * r &lt;= k); r++),for (int r = 1; Some(2 * r &lt;= k); r++))<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.assignment,int r = 1)<SUB>18</SUB>>", "157": "<(LITERAL,1,int r = 1)<SUB>18</SUB>>", "159": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>18</SUB>>", "161": "<(IDENTIFIER,r,2 * r)<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,r++)<SUB>18</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "167": "<(LOCAL,int i: int)<SUB>19</SUB>>", "169": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "171": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "173": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "175": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "177": "<(IDENTIFIER,Arrays,fill(dp[r][i], INF))<SUB>19</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>19</SUB>>", "181": "<(IDENTIFIER,r,fill(dp[r][i], INF))<SUB>19</SUB>>", "183": "<(IDENTIFIER,INF,fill(dp[r][i], INF))<SUB>19</SUB>>", "185": "<(LOCAL,int i: int)<SUB>20</SUB>>", "187": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "191": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "195": "<(LOCAL,int j: int)<SUB>21</SUB>>", "197": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "199": "<(&lt;operator&gt;.lessThan,j + 1 &lt; m)<SUB>21</SUB>>", "201": "<(IDENTIFIER,j,j + 1)<SUB>21</SUB>>", "203": "<(IDENTIFIER,m,j + 1 &lt; m)<SUB>21</SUB>>", "205": "<(IDENTIFIER,j,j++)<SUB>21</SUB>>", "207": "<(LOCAL,int cost: int)<SUB>22</SUB>>", "209": "<(IDENTIFIER,cost,int cost = right[i][j])<SUB>22</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,right[i])<SUB>22</SUB>>", "213": "<(IDENTIFIER,i,int cost = right[i][j])<SUB>22</SUB>>", "215": "<(&lt;operator&gt;.assignment,dp[r][i][j] = Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dp[r][i])<SUB>23</SUB>>", "219": "<(IDENTIFIER,dp,dp[r][i][j] = Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "221": "<(IDENTIFIER,i,dp[r][i][j] = Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "223": "<(min,Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,dp[r][i][j])<SUB>23</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>23</SUB>>", "229": "<(IDENTIFIER,r,Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "231": "<(IDENTIFIER,j,Integer.min(dp[r][i][j], dp[r - 1][i][j + 1] + cost))<SUB>23</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,dp[r - 1][i][j + 1])<SUB>23</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[r - 1])<SUB>23</SUB>>", "237": "<(&lt;operator&gt;.subtraction,r - 1)<SUB>23</SUB>>", "239": "<(LITERAL,1,r - 1)<SUB>23</SUB>>", "241": "<(&lt;operator&gt;.addition,j + 1)<SUB>23</SUB>>", "243": "<(LITERAL,1,j + 1)<SUB>23</SUB>>", "245": "<(&lt;operator&gt;.assignment,dp[r][i][j + 1] = Integer.min(dp[r][i][j + 1], dp[r - 1][i][j] + cost))<SUB>24</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dp[r][i])<SUB>24</SUB>>", "249": "<(IDENTIFIER,dp,dp[r][i][j + 1] = Integer.min(dp[r][i][j + 1], dp[r - 1][i][j] + cost))<SUB>24</SUB>>", "251": "<(IDENTIFIER,i,dp[r][i][j + 1] = Integer.min(dp[r][i][j + 1], dp[r - 1][i][j] + cost))<SUB>24</SUB>>", "253": "<(IDENTIFIER,j,j + 1)<SUB>24</SUB>>", "255": "<(min,Integer.min(dp[r][i][j + 1], dp[r - 1][i][j] + cost))<SUB>24</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dp[r][i][j + 1])<SUB>24</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>24</SUB>>", "261": "<(IDENTIFIER,r,Integer.min(dp[r][i][j + 1], dp[r - 1][i][j] + cost))<SUB>24</SUB>>", "263": "<(&lt;operator&gt;.addition,j + 1)<SUB>24</SUB>>", "265": "<(LITERAL,1,j + 1)<SUB>24</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[r - 1][i][j])<SUB>24</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,dp[r - 1])<SUB>24</SUB>>", "271": "<(&lt;operator&gt;.subtraction,r - 1)<SUB>24</SUB>>", "273": "<(LITERAL,1,r - 1)<SUB>24</SUB>>", "275": "<(IDENTIFIER,j,dp[r - 1][i][j] + cost)<SUB>24</SUB>>", "277": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i + 1 &lt; n); i++),for (int i = 0; Some(i + 1 &lt; n); i++))<SUB>26</SUB>>", "279": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "281": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "283": "<(&lt;operator&gt;.addition,i + 1)<SUB>26</SUB>>", "285": "<(LITERAL,1,i + 1)<SUB>26</SUB>>", "287": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "289": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>27</SUB>>", "291": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "293": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "295": "<(IDENTIFIER,j,j &lt; m)<SUB>27</SUB>>", "297": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "299": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "301": "<(&lt;operator&gt;.assignment,int cost = down[i][j])<SUB>28</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,down[i][j])<SUB>28</SUB>>", "305": "<(IDENTIFIER,down,int cost = down[i][j])<SUB>28</SUB>>", "307": "<(IDENTIFIER,j,int cost = down[i][j])<SUB>28</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,dp[r][i][j])<SUB>29</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>29</SUB>>", "313": "<(IDENTIFIER,r,dp[r][i][j] = Integer.min(dp[r][i][j], dp[r - 1][i + 1][j] + cost))<SUB>29</SUB>>", "315": "<(IDENTIFIER,j,dp[r][i][j] = Integer.min(dp[r][i][j], dp[r - 1][i + 1][j] + cost))<SUB>29</SUB>>", "317": "<(IDENTIFIER,Integer,Integer.min(dp[r][i][j], dp[r - 1][i + 1][j] + cost))<SUB>29</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[r][i])<SUB>29</SUB>>", "321": "<(IDENTIFIER,dp,Integer.min(dp[r][i][j], dp[r - 1][i + 1][j] + cost))<SUB>29</SUB>>", "323": "<(IDENTIFIER,i,Integer.min(dp[r][i][j], dp[r - 1][i + 1][j] + cost))<SUB>29</SUB>>", "325": "<(&lt;operator&gt;.addition,dp[r - 1][i + 1][j] + cost)<SUB>29</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,dp[r - 1][i + 1])<SUB>29</SUB>>", "329": "<(IDENTIFIER,dp,dp[r - 1][i + 1][j] + cost)<SUB>29</SUB>>", "331": "<(IDENTIFIER,r,r - 1)<SUB>29</SUB>>", "333": "<(&lt;operator&gt;.addition,i + 1)<SUB>29</SUB>>", "335": "<(LITERAL,1,i + 1)<SUB>29</SUB>>", "337": "<(IDENTIFIER,cost,dp[r - 1][i + 1][j] + cost)<SUB>29</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,dp[r][i + 1][j])<SUB>30</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>30</SUB>>", "343": "<(IDENTIFIER,r,dp[r][i + 1][j] = Integer.min(dp[r][i + 1][j], dp[r - 1][i][j] + cost))<SUB>30</SUB>>", "345": "<(IDENTIFIER,i,i + 1)<SUB>30</SUB>>", "347": "<(IDENTIFIER,j,dp[r][i + 1][j] = Integer.min(dp[r][i + 1][j], dp[r - 1][i][j] + cost))<SUB>30</SUB>>", "349": "<(IDENTIFIER,Integer,Integer.min(dp[r][i + 1][j], dp[r - 1][i][j] + cost))<SUB>30</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,dp[r][i + 1])<SUB>30</SUB>>", "353": "<(IDENTIFIER,dp,Integer.min(dp[r][i + 1][j], dp[r - 1][i][j] + cost))<SUB>30</SUB>>", "355": "<(&lt;operator&gt;.addition,i + 1)<SUB>30</SUB>>", "357": "<(LITERAL,1,i + 1)<SUB>30</SUB>>", "359": "<(&lt;operator&gt;.addition,dp[r - 1][i][j] + cost)<SUB>30</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,dp[r - 1][i])<SUB>30</SUB>>", "363": "<(IDENTIFIER,dp,dp[r - 1][i][j] + cost)<SUB>30</SUB>>", "365": "<(IDENTIFIER,r,r - 1)<SUB>30</SUB>>", "367": "<(IDENTIFIER,i,dp[r - 1][i][j] + cost)<SUB>30</SUB>>", "369": "<(IDENTIFIER,cost,dp[r - 1][i][j] + cost)<SUB>30</SUB>>", "371": "<(LOCAL,int i: int)<SUB>33</SUB>>", "373": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "375": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "377": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "379": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "381": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>34</SUB>>", "383": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>34</SUB>>", "385": "<(LITERAL,0,int j = 0)<SUB>34</SUB>>", "387": "<(IDENTIFIER,j,j &lt; m)<SUB>34</SUB>>", "389": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "391": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "393": "<(IDENTIFIER,pr,print(2 * dp[k / 2][i][j] + &quot; &quot;))<SUB>35</SUB>>", "395": "<(&lt;operator&gt;.multiplication,2 * dp[k / 2][i][j])<SUB>35</SUB>>", "397": "<(&lt;operator&gt;.indexAccess,dp[k / 2][i][j])<SUB>35</SUB>>", "399": "<(&lt;operator&gt;.indexAccess,dp[k / 2])<SUB>35</SUB>>", "401": "<(&lt;operator&gt;.division,k / 2)<SUB>35</SUB>>", "403": "<(LITERAL,2,k / 2)<SUB>35</SUB>>", "405": "<(IDENTIFIER,j,2 * dp[k / 2][i][j])<SUB>35</SUB>>", "407": "<(println,println())<SUB>37</SUB>>", "409": "<(flush,flush())<SUB>44</SUB>>", "411": "<(close,close())<SUB>45</SUB>>", "413": "<(MODIFIER,PUBLIC)>", "415": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}