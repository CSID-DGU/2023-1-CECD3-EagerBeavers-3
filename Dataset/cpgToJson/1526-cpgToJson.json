{"edges": [["21", "23"], ["21", "211"], ["21", "212"], ["21", "213"], ["23", "24"], ["23", "27"], ["23", "4"], ["23", "39"], ["23", "42"], ["23", "60"], ["23", "61"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "71"], ["23", "77"], ["23", "94"], ["23", "105"], ["23", "6"], ["23", "112"], ["23", "115"], ["23", "116"], ["23", "117"], ["23", "120"], ["23", "121"], ["23", "126"], ["23", "204"], ["23", "209"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "3"], ["42", "43"], ["43", "44"], ["43", "47"], ["43", "59"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "53"], ["49", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "107"], ["105", "108"], ["105", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "5"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "144"], ["136", "145"], ["136", "150"], ["136", "151"], ["136", "154"], ["136", "185"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "162"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "177"], ["166", "183"], ["167", "168"], ["167", "176"], ["168", "169"], ["168", "170"], ["168", "171"], ["168", "172"], ["168", "175"], ["172", "173"], ["172", "174"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["183", "184"], ["185", "186"], ["185", "191"], ["185", "196"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["209", "210"], ["24", "32"], ["27", "41"], ["39", "46"], ["42", "63"], ["61", "68"], ["66", "74"], ["71", "79"], ["105", "114"], ["112", "115"], ["115", "117"], ["117", "124"], ["121", "128"], ["204", "209"], ["209", "213"], ["26", "24"], ["41", "39"], ["63", "61"], ["68", "66"], ["73", "71"], ["79", "82"], ["82", "89"], ["82", "95"], ["85", "82"], ["95", "102"], ["95", "109"], ["109", "105"], ["114", "112"], ["123", "121"], ["128", "131"], ["131", "140"], ["131", "207"], ["134", "131"], ["205", "204"], ["30", "37"], ["33", "27"], ["44", "52"], ["47", "42"], ["74", "73"], ["88", "85"], ["99", "104"], ["104", "213"], ["124", "123"], ["145", "151"], ["151", "158"], ["207", "205"], ["32", "30"], ["35", "33"], ["46", "44"], ["89", "92"], ["92", "88"], ["100", "99"], ["138", "134"], ["138", "147"], ["147", "145"], ["155", "163"], ["155", "187"], ["186", "193"], ["186", "200"], ["191", "134"], ["37", "35"], ["50", "57"], ["53", "47"], ["102", "100"], ["140", "138"], ["156", "155"], ["163", "172"], ["187", "186"], ["193", "191"], ["197", "134"], ["52", "50"], ["55", "53"], ["157", "156"], ["167", "178"], ["167", "187"], ["199", "197"], ["57", "55"], ["158", "157"], ["168", "167"], ["178", "181"], ["181", "158"], ["200", "199"], ["172", "168"], ["21", "26"], ["104", "213"], ["22", "213"], ["24", "213"], ["27", "213"], ["33", "213"], ["33", "213"], ["33", "213"], ["27", "213"], ["39", "213"], ["42", "213"], ["47", "213"], ["50", "213"], ["53", "213"], ["53", "213"], ["47", "213"], ["42", "213"], ["61", "213"], ["68", "213"], ["66", "213"], ["66", "213"], ["71", "213"], ["73", "213"], ["71", "213"], ["71", "213"], ["79", "213"], ["82", "213"], ["82", "213"], ["95", "213"], ["95", "213"], ["99", "213"], ["99", "213"], ["99", "213"], ["88", "213"], ["92", "213"], ["88", "213"], ["88", "213"], ["85", "213"], ["21", "22"], ["21", "24"], ["21", "39"], ["63", "61"], ["68", "66"], ["73", "71"], ["21", "112"], ["21", "117"], ["21", "121"], ["24", "27"], ["21", "27"], ["30", "27"], ["33", "27"], ["39", "42"], ["21", "42"], ["50", "42"], ["47", "42"], ["21", "79"], ["21", "105"], ["71", "105"], ["88", "105"], ["82", "105"], ["112", "115"], ["21", "115"], ["21", "128"], ["53", "204"], ["117", "204"], ["197", "204"], ["191", "204"], ["21", "204"], ["42", "209"], ["21", "209"], ["21", "30"], ["21", "38"], ["21", "44"], ["21", "59"], ["21", "63"], ["63", "68"], ["21", "68"], ["61", "73"], ["21", "73"], ["79", "82"], ["85", "82"], ["21", "82"], ["61", "82"], ["82", "85"], ["21", "85"], ["92", "88"], ["66", "95"], ["21", "95"], ["21", "104"], ["82", "109"], ["21", "109"], ["21", "123"], ["128", "131"], ["134", "131"], ["21", "131"], ["82", "131"], ["131", "134"], ["21", "134"], ["105", "145"], ["138", "145"], ["168", "145"], ["21", "151"], ["30", "33"], ["21", "33"], ["44", "47"], ["21", "47"], ["50", "47"], ["53", "47"], ["61", "74"], ["21", "74"], ["53", "99"], ["82", "99"], ["21", "99"], ["193", "191"], ["193", "191"], ["21", "50"], ["21", "58"], ["68", "92"], ["21", "92"], ["115", "138"], ["178", "138"], ["21", "138"], ["105", "138"], ["168", "138"], ["88", "138"], ["156", "155"], ["156", "155"], ["121", "155"], ["21", "155"], ["156", "163"], ["21", "163"], ["187", "186"], ["187", "186"], ["21", "186"], ["117", "191"], ["197", "191"], ["21", "191"], ["200", "197"], ["200", "197"], ["21", "197"], ["50", "53"], ["21", "53"], ["21", "156"], ["145", "156"], ["178", "156"], ["95", "156"], ["145", "163"], ["178", "163"], ["151", "187"], ["181", "187"], ["21", "187"], ["187", "193"], ["21", "193"], ["117", "197"], ["191", "197"], ["21", "157"], ["145", "157"], ["178", "157"], ["168", "167"], ["168", "167"], ["168", "167"], ["168", "167"], ["168", "167"], ["21", "167"], ["200", "199"], ["200", "199"], ["21", "199"], ["105", "168"], ["21", "168"], ["105", "168"], ["138", "168"], ["131", "168"], ["163", "168"], ["138", "178"], ["21", "178"], ["168", "178"], ["151", "181"], ["21", "181"], ["187", "200"], ["21", "200"], ["131", "172"], ["21", "172"], ["82", "85"], ["82", "92"], ["82", "88"], ["82", "89"], ["82", "82"], ["95", "115"], ["95", "128"], ["95", "102"], ["95", "114"], ["95", "131"], ["95", "209"], ["95", "104"], ["95", "121"], ["95", "204"], ["95", "112"], ["95", "207"], ["95", "100"], ["95", "205"], ["95", "99"], ["95", "123"], ["95", "105"], ["95", "117"], ["95", "124"], ["95", "109"], ["131", "131"], ["131", "134"], ["131", "138"], ["131", "140"], ["138", "145"], ["138", "151"], ["138", "187"], ["138", "155"], ["138", "186"], ["138", "158"], ["138", "157"], ["138", "147"], ["138", "156"], ["155", "167"], ["155", "163"], ["155", "168"], ["155", "172"], ["186", "197"], ["186", "191"], ["186", "193"], ["186", "200"], ["186", "199"], ["167", "178"], ["167", "181"], ["167", "155"], ["167", "158"], ["167", "157"], ["167", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,in,in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "33": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "37": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "40": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "42": "<(&lt;init&gt;,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "47": "<(&lt;init&gt;,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "53": "<(&lt;init&gt;,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "55": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "57": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "59": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "63": "<(nextInt,nextInt())<SUB>4</SUB>>", "65": "<(LOCAL,int k: int)<SUB>5</SUB>>", "67": "<(IDENTIFIER,k,int k = nextInt())<SUB>5</SUB>>", "69": "<(IDENTIFIER,this,nextInt())<SUB>5</SUB>>", "71": "<(&lt;operator&gt;.assignment,Integer[] a = new Integer[n + 1])<SUB>6</SUB>>", "73": "<(&lt;operator&gt;.alloc,new Integer[n + 1])>", "75": "<(IDENTIFIER,n,n + 1)<SUB>6</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "81": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "83": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "91": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>8</SUB>>", "93": "<(IDENTIFIER,this,nextInt())<SUB>8</SUB>>", "95": "<(&lt;operator&gt;.equals,k == 1)<SUB>10</SUB>>", "97": "<(LITERAL,1,k == 1)<SUB>10</SUB>>", "99": "<(println,System.out.println(n))<SUB>11</SUB>>", "101": "<(IDENTIFIER,System,System.out.println(n))<SUB>11</SUB>>", "103": "<(IDENTIFIER,n,System.out.println(n))<SUB>11</SUB>>", "105": "<(sort,sort(a, 1, n + 1))<SUB>14</SUB>>", "107": "<(IDENTIFIER,a,sort(a, 1, n + 1))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.addition,n + 1)<SUB>14</SUB>>", "111": "<(LITERAL,1,n + 1)<SUB>14</SUB>>", "112": "<(&lt;operator&gt;.assignment,ANY set = new HashSet&lt;Integer&gt;())<SUB>15</SUB>>", "114": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>15</SUB>>", "5": "<(IDENTIFIER,set,new HashSet&lt;Integer&gt;())<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>16</SUB>>", "119": "<(LITERAL,0,int ans = 0)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.assignment,int INF = (int) 1e9)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>17</SUB>>", "125": "<(LITERAL,1e9,(int) 1e9)<SUB>17</SUB>>", "127": "<(LOCAL,int i: int)<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,int i = 1)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>18</SUB>>", "133": "<(IDENTIFIER,n,i &lt;= n)<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "137": "<(CONTROL_STRUCTURE,if (set.contains(a[i])),if (set.contains(a[i])))<SUB>19</SUB>>", "139": "<(IDENTIFIER,set,contains(a[i]))<SUB>19</SUB>>", "141": "<(IDENTIFIER,a,contains(a[i]))<SUB>19</SUB>>", "143": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.assignment,int t = a[i])<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>21</SUB>>", "149": "<(IDENTIFIER,i,int t = a[i])<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.assignment,int s = 1)<SUB>22</SUB>>", "153": "<(LITERAL,1,int s = 1)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.lessEqualsThan,(long) t * k &lt;= INF)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.cast,(long) t)<SUB>23</SUB>>", "159": "<(IDENTIFIER,t,(long) t)<SUB>23</SUB>>", "161": "<(IDENTIFIER,INF,(long) t * k &lt;= INF)<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.assignmentMultiplication,t *= k)<SUB>24</SUB>>", "165": "<(IDENTIFIER,k,t *= k)<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.greaterEqualsThan,Arrays.binarySearch(a, 1, n + 1, t) &gt;= 0)<SUB>25</SUB>>", "169": "<(IDENTIFIER,Arrays,binarySearch(a, 1, n + 1, t))<SUB>25</SUB>>", "171": "<(LITERAL,1,binarySearch(a, 1, n + 1, t))<SUB>25</SUB>>", "173": "<(IDENTIFIER,n,n + 1)<SUB>25</SUB>>", "175": "<(IDENTIFIER,t,binarySearch(a, 1, n + 1, t))<SUB>25</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "179": "<(IDENTIFIER,set,add(t))<SUB>26</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,s++)<SUB>27</SUB>>", "183": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "185": "<(CONTROL_STRUCTURE,if (s % 2 == 0),if (s % 2 == 0))<SUB>32</SUB>>", "187": "<(&lt;operator&gt;.modulo,s % 2)<SUB>32</SUB>>", "189": "<(LITERAL,2,s % 2)<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.assignmentPlus,ans += s / 2)<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.division,s / 2)<SUB>33</SUB>>", "195": "<(LITERAL,2,s / 2)<SUB>33</SUB>>", "197": "<(&lt;operator&gt;.assignmentPlus,ans += s / 2 + 1)<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.addition,s / 2 + 1)<SUB>35</SUB>>", "201": "<(IDENTIFIER,s,s / 2)<SUB>35</SUB>>", "203": "<(LITERAL,1,s / 2 + 1)<SUB>35</SUB>>", "205": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>37</SUB>>", "207": "<(FIELD_IDENTIFIER,out,out)<SUB>37</SUB>>", "209": "<(close,close())<SUB>38</SUB>>", "211": "<(MODIFIER,PUBLIC)>", "213": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}