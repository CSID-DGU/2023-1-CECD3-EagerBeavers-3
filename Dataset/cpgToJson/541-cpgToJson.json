{"edges": [["17", "19"], ["17", "93"], ["17", "94"], ["17", "95"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "91"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "43"], ["38", "46"], ["38", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "54"], ["48", "55"], ["48", "58"], ["48", "73"], ["48", "88"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "70"], ["59", "60"], ["59", "65"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "85"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "40"], ["91", "95"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["40", "43"], ["43", "52"], ["43", "91"], ["46", "43"], ["32", "30"], ["50", "55"], ["55", "61"], ["88", "46"], ["52", "50"], ["59", "70"], ["59", "76"], ["70", "76"], ["74", "85"], ["74", "88"], ["85", "88"], ["60", "59"], ["60", "67"], ["65", "59"], ["75", "74"], ["75", "82"], ["80", "74"], ["61", "60"], ["67", "65"], ["76", "75"], ["82", "80"], ["17", "22"], ["18", "95"], ["20", "95"], ["23", "95"], ["25", "95"], ["28", "95"], ["28", "95"], ["36", "95"], ["34", "95"], ["34", "95"], ["40", "95"], ["43", "95"], ["43", "95"], ["43", "95"], ["91", "95"], ["91", "95"], ["52", "95"], ["50", "95"], ["50", "95"], ["55", "95"], ["60", "95"], ["59", "95"], ["65", "95"], ["65", "95"], ["59", "95"], ["59", "95"], ["70", "95"], ["76", "95"], ["75", "95"], ["74", "95"], ["80", "95"], ["82", "95"], ["80", "95"], ["74", "95"], ["74", "95"], ["85", "95"], ["88", "95"], ["88", "95"], ["46", "95"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "40"], ["28", "91"], ["88", "91"], ["17", "91"], ["23", "36"], ["17", "36"], ["40", "43"], ["46", "43"], ["17", "43"], ["34", "43"], ["43", "46"], ["17", "46"], ["52", "50"], ["17", "55"], ["17", "70"], ["17", "85"], ["28", "88"], ["17", "88"], ["55", "88"], ["70", "88"], ["85", "88"], ["36", "52"], ["17", "52"], ["60", "59"], ["60", "59"], ["65", "59"], ["65", "59"], ["75", "74"], ["75", "74"], ["80", "74"], ["80", "74"], ["61", "60"], ["61", "60"], ["17", "60"], ["80", "65"], ["17", "65"], ["67", "65"], ["67", "65"], ["76", "75"], ["76", "75"], ["17", "75"], ["65", "80"], ["17", "80"], ["82", "80"], ["82", "80"], ["50", "61"], ["17", "61"], ["61", "67"], ["17", "67"], ["61", "76"], ["67", "76"], ["17", "76"], ["76", "82"], ["17", "82"], ["43", "60"], ["43", "61"], ["43", "75"], ["43", "52"], ["43", "46"], ["43", "88"], ["43", "74"], ["43", "76"], ["43", "50"], ["43", "59"], ["43", "55"], ["43", "43"], ["59", "70"], ["74", "85"], ["60", "67"], ["60", "65"], ["75", "80"], ["75", "82"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new FastScanner())<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new FastScanner())<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "29": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(LOCAL,int Q: int)<SUB>7</SUB>>", "35": "<(IDENTIFIER,Q,int Q = ni())<SUB>7</SUB>>", "37": "<(IDENTIFIER,sc,ni())<SUB>7</SUB>>", "39": "<(LOCAL,int q: int)<SUB>8</SUB>>", "41": "<(IDENTIFIER,q,int q = 0)<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.lessThan,q &lt; Q)<SUB>8</SUB>>", "45": "<(IDENTIFIER,Q,q &lt; Q)<SUB>8</SUB>>", "47": "<(IDENTIFIER,q,q++)<SUB>8</SUB>>", "49": "<(LOCAL,int N: int)<SUB>9</SUB>>", "51": "<(IDENTIFIER,N,int N = ni())<SUB>9</SUB>>", "53": "<(IDENTIFIER,sc,ni())<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,String ans = &quot;NO&quot;)<SUB>10</SUB>>", "57": "<(LITERAL,&quot;NO&quot;,String ans = &quot;NO&quot;)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.logicalAnd,N % 2 == 0 &amp;&amp; isSquare(N / 2))<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.modulo,N % 2)<SUB>11</SUB>>", "63": "<(LITERAL,2,N % 2)<SUB>11</SUB>>", "65": "<(isSquare,isSquare(N / 2))<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.division,N / 2)<SUB>11</SUB>>", "69": "<(LITERAL,2,N / 2)<SUB>11</SUB>>", "71": "<(IDENTIFIER,ans,ans = &quot;YES&quot;)<SUB>12</SUB>>", "73": "<(CONTROL_STRUCTURE,if (N % 4 == 0 &amp;&amp; isSquare(N / 4)),if (N % 4 == 0 &amp;&amp; isSquare(N / 4)))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.equals,N % 4 == 0)<SUB>13</SUB>>", "77": "<(IDENTIFIER,N,N % 4)<SUB>13</SUB>>", "79": "<(LITERAL,0,N % 4 == 0)<SUB>13</SUB>>", "81": "<(IDENTIFIER,this,isSquare(N / 4))<SUB>13</SUB>>", "83": "<(IDENTIFIER,N,N / 4)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.assignment,ans = &quot;YES&quot;)<SUB>14</SUB>>", "87": "<(LITERAL,&quot;YES&quot;,ans = &quot;YES&quot;)<SUB>14</SUB>>", "89": "<(IDENTIFIER,pw,println(ans))<SUB>15</SUB>>", "91": "<(close,close())<SUB>17</SUB>>", "93": "<(MODIFIER,PUBLIC)>", "95": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}