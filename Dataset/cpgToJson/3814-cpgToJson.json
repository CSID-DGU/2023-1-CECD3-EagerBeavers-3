{"edges": [["23", "25"], ["23", "405"], ["23", "406"], ["23", "407"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "53"], ["25", "72"], ["25", "73"], ["25", "80"], ["25", "99"], ["25", "100"], ["25", "105"], ["25", "149"], ["25", "150"], ["25", "8"], ["25", "155"], ["25", "158"], ["25", "159"], ["25", "354"], ["25", "400"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "90"], ["80", "92"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "6"], ["111", "112"], ["111", "115"], ["111", "116"], ["111", "143"], ["111", "148"], ["112", "113"], ["112", "114"], ["115", "5"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "140"], ["127", "128"], ["127", "129"], ["127", "132"], ["127", "135"], ["127", "137"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "7"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "169"], ["159", "171"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "173"], ["171", "178"], ["171", "194"], ["171", "351"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "186"], ["178", "188"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["204", "206"], ["204", "209"], ["204", "212"], ["204", "214"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["214", "215"], ["214", "249"], ["214", "283"], ["214", "317"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "227"], ["220", "221"], ["220", "226"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "229"], ["227", "236"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "242"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["255", "256"], ["255", "263"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["263", "272"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["287", "288"], ["287", "295"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["295", "304"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "310"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["323", "324"], ["323", "331"], ["324", "325"], ["324", "328"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["331", "340"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "339"], ["340", "341"], ["340", "346"], ["341", "342"], ["341", "345"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["351", "352"], ["351", "353"], ["354", "355"], ["354", "356"], ["354", "359"], ["354", "362"], ["354", "364"], ["356", "357"], ["356", "358"], ["359", "360"], ["359", "361"], ["362", "363"], ["364", "365"], ["364", "366"], ["364", "371"], ["364", "397"], ["366", "367"], ["366", "368"], ["368", "369"], ["368", "370"], ["371", "372"], ["371", "373"], ["371", "376"], ["371", "381"], ["371", "383"], ["373", "374"], ["373", "375"], ["376", "377"], ["376", "378"], ["378", "379"], ["378", "380"], ["381", "382"], ["383", "384"], ["383", "385"], ["383", "390"], ["385", "386"], ["385", "387"], ["387", "388"], ["387", "389"], ["390", "391"], ["390", "392"], ["392", "393"], ["392", "396"], ["393", "394"], ["393", "395"], ["397", "398"], ["397", "399"], ["400", "401"], ["400", "404"], ["401", "402"], ["401", "403"], ["26", "29"], ["29", "33"], ["31", "38"], ["36", "43"], ["41", "50"], ["46", "55"], ["73", "82"], ["100", "107"], ["150", "157"], ["155", "158"], ["158", "161"], ["400", "407"], ["28", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["48", "46"], ["55", "58"], ["58", "64"], ["58", "76"], ["61", "58"], ["63", "61"], ["75", "73"], ["82", "87"], ["85", "93"], ["85", "102"], ["90", "87"], ["92", "90"], ["102", "100"], ["106", "114"], ["106", "152"], ["152", "150"], ["157", "155"], ["161", "166"], ["164", "175"], ["164", "356"], ["169", "166"], ["356", "359"], ["359", "368"], ["359", "403"], ["362", "359"], ["401", "400"], ["50", "48"], ["64", "69"], ["67", "63"], ["76", "75"], ["87", "85"], ["93", "96"], ["96", "92"], ["107", "106"], ["112", "115"], ["115", "118"], ["143", "148"], ["148", "407"], ["166", "164"], ["173", "180"], ["351", "169"], ["366", "373"], ["397", "362"], ["403", "401"], ["69", "67"], ["114", "112"], ["118", "121"], ["121", "129"], ["121", "146"], ["124", "121"], ["144", "143"], ["175", "173"], ["180", "183"], ["183", "190"], ["183", "196"], ["186", "183"], ["188", "186"], ["196", "199"], ["199", "206"], ["199", "351"], ["202", "199"], ["368", "366"], ["373", "380"], ["376", "387"], ["376", "397"], ["381", "380"], ["140", "124"], ["146", "144"], ["190", "188"], ["206", "209"], ["209", "216"], ["209", "202"], ["212", "209"], ["378", "376"], ["385", "393"], ["390", "381"], ["129", "132"], ["132", "137"], ["132", "140"], ["135", "132"], ["137", "135"], ["380", "378"], ["387", "385"], ["392", "390"], ["216", "223"], ["216", "251"], ["219", "251"], ["250", "259"], ["250", "284"], ["255", "284"], ["284", "289"], ["284", "319"], ["287", "319"], ["318", "325"], ["318", "212"], ["323", "212"], ["393", "392"], ["220", "232"], ["227", "219"], ["251", "250"], ["256", "268"], ["263", "255"], ["288", "298"], ["295", "287"], ["319", "318"], ["324", "334"], ["331", "323"], ["221", "220"], ["229", "238"], ["236", "227"], ["257", "256"], ["265", "274"], ["272", "263"], ["289", "292"], ["292", "288"], ["297", "306"], ["304", "295"], ["325", "328"], ["328", "324"], ["333", "342"], ["340", "331"], ["223", "221"], ["230", "229"], ["237", "245"], ["242", "236"], ["259", "257"], ["266", "265"], ["273", "279"], ["278", "272"], ["298", "301"], ["301", "297"], ["305", "311"], ["310", "304"], ["334", "337"], ["337", "333"], ["341", "347"], ["346", "340"], ["232", "230"], ["238", "237"], ["243", "242"], ["268", "266"], ["274", "273"], ["279", "278"], ["306", "305"], ["311", "314"], ["314", "310"], ["342", "341"], ["347", "346"], ["245", "243"], ["23", "28"], ["148", "407"], ["24", "407"], ["26", "407"], ["29", "407"], ["31", "407"], ["36", "407"], ["43", "407"], ["41", "407"], ["41", "407"], ["46", "407"], ["48", "407"], ["46", "407"], ["46", "407"], ["73", "407"], ["73", "407"], ["73", "407"], ["85", "407"], ["85", "407"], ["100", "407"], ["102", "407"], ["100", "407"], ["100", "407"], ["107", "407"], ["106", "407"], ["106", "407"], ["112", "407"], ["115", "407"], ["118", "407"], ["121", "407"], ["121", "407"], ["121", "407"], ["143", "407"], ["143", "407"], ["143", "407"], ["129", "407"], ["132", "407"], ["132", "407"], ["132", "407"], ["140", "407"], ["124", "407"], ["137", "407"], ["135", "407"], ["92", "407"], ["96", "407"], ["92", "407"], ["92", "407"], ["90", "407"], ["63", "407"], ["67", "407"], ["67", "407"], ["63", "407"], ["63", "407"], ["61", "407"], ["188", "407"], ["23", "24"], ["23", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["48", "46"], ["48", "46"], ["75", "73"], ["75", "73"], ["102", "100"], ["102", "100"], ["152", "150"], ["152", "150"], ["23", "155"], ["26", "29"], ["23", "29"], ["23", "55"], ["67", "63"], ["67", "63"], ["23", "82"], ["96", "92"], ["96", "92"], ["155", "158"], ["23", "158"], ["23", "161"], ["23", "356"], ["158", "400"], ["397", "400"], ["23", "400"], ["29", "33"], ["23", "33"], ["33", "38"], ["23", "38"], ["38", "43"], ["23", "43"], ["31", "48"], ["23", "48"], ["50", "48"], ["50", "48"], ["55", "58"], ["61", "58"], ["23", "58"], ["48", "58"], ["58", "61"], ["23", "61"], ["76", "75"], ["76", "75"], ["50", "75"], ["69", "75"], ["23", "75"], ["82", "85"], ["90", "85"], ["23", "85"], ["87", "85"], ["87", "85"], ["85", "90"], ["23", "90"], ["87", "102"], ["23", "102"], ["75", "102"], ["96", "102"], ["107", "106"], ["107", "106"], ["23", "106"], ["23", "112"], ["23", "148"], ["102", "152"], ["23", "152"], ["102", "152"], ["161", "164"], ["169", "164"], ["23", "164"], ["166", "164"], ["166", "164"], ["164", "169"], ["23", "169"], ["175", "173"], ["175", "173"], ["173", "351"], ["188", "351"], ["23", "351"], ["356", "359"], ["362", "359"], ["23", "359"], ["152", "359"], ["199", "359"], ["359", "362"], ["23", "362"], ["150", "366"], ["351", "366"], ["36", "50"], ["23", "50"], ["43", "67"], ["23", "67"], ["69", "67"], ["69", "67"], ["58", "76"], ["23", "76"], ["76", "87"], ["23", "87"], ["43", "96"], ["67", "96"], ["23", "96"], ["75", "96"], ["41", "107"], ["23", "107"], ["112", "115"], ["23", "115"], ["23", "118"], ["115", "143"], ["140", "143"], ["23", "143"], ["107", "166"], ["23", "166"], ["23", "180"], ["23", "196"], ["23", "373"], ["158", "397"], ["390", "397"], ["23", "397"], ["50", "69"], ["23", "69"], ["118", "121"], ["124", "121"], ["23", "121"], ["102", "121"], ["121", "124"], ["23", "124"], ["152", "175"], ["199", "175"], ["23", "175"], ["152", "175"], ["209", "175"], ["180", "183"], ["186", "183"], ["23", "183"], ["175", "183"], ["183", "186"], ["23", "186"], ["23", "188"], ["173", "188"], ["287", "188"], ["323", "188"], ["196", "199"], ["202", "199"], ["23", "199"], ["183", "199"], ["250", "199"], ["199", "202"], ["23", "202"], ["216", "202"], ["245", "202"], ["23", "206"], ["373", "376"], ["381", "376"], ["23", "376"], ["366", "376"], ["376", "381"], ["23", "381"], ["366", "385"], ["23", "129"], ["115", "140"], ["137", "140"], ["23", "140"], ["206", "209"], ["212", "209"], ["23", "209"], ["175", "209"], ["318", "209"], ["23", "212"], ["284", "212"], ["314", "212"], ["158", "390"], ["397", "390"], ["23", "390"], ["393", "390"], ["393", "390"], ["129", "132"], ["135", "132"], ["23", "132"], ["102", "132"], ["132", "135"], ["23", "135"], ["115", "137"], ["140", "137"], ["23", "137"], ["227", "219"], ["227", "219"], ["227", "219"], ["263", "255"], ["263", "255"], ["263", "255"], ["295", "287"], ["295", "287"], ["295", "287"], ["331", "323"], ["331", "323"], ["331", "323"], ["393", "392"], ["393", "392"], ["23", "392"], ["199", "216"], ["23", "216"], ["245", "216"], ["216", "250"], ["245", "250"], ["23", "250"], ["199", "250"], ["209", "284"], ["23", "284"], ["284", "318"], ["314", "318"], ["23", "318"], ["209", "318"], ["23", "393"], ["385", "393"], ["263", "227"], ["295", "227"], ["331", "227"], ["23", "227"], ["219", "227"], ["216", "251"], ["245", "251"], ["23", "251"], ["227", "263"], ["295", "263"], ["331", "263"], ["23", "263"], ["255", "263"], ["227", "295"], ["263", "295"], ["331", "295"], ["23", "295"], ["287", "295"], ["284", "319"], ["314", "319"], ["23", "319"], ["227", "331"], ["263", "331"], ["295", "331"], ["23", "331"], ["323", "331"], ["284", "292"], ["23", "292"], ["23", "328"], ["284", "328"], ["314", "328"], ["216", "223"], ["23", "223"], ["23", "259"], ["216", "259"], ["245", "259"], ["292", "301"], ["23", "301"], ["23", "337"], ["284", "337"], ["314", "337"], ["223", "232"], ["23", "232"], ["23", "268"], ["216", "268"], ["245", "268"], ["301", "314"], ["23", "314"], ["232", "245"], ["23", "245"], ["58", "61"], ["58", "64"], ["58", "69"], ["58", "67"], ["58", "58"], ["58", "63"], ["85", "93"], ["85", "96"], ["85", "85"], ["85", "92"], ["85", "87"], ["85", "90"], ["106", "146"], ["106", "161"], ["106", "114"], ["106", "150"], ["106", "401"], ["106", "356"], ["106", "403"], ["106", "112"], ["106", "148"], ["106", "152"], ["106", "118"], ["106", "158"], ["106", "115"], ["106", "121"], ["106", "144"], ["106", "400"], ["106", "164"], ["106", "155"], ["106", "359"], ["106", "166"], ["106", "157"], ["106", "143"], ["164", "196"], ["164", "180"], ["164", "199"], ["164", "351"], ["164", "169"], ["164", "173"], ["164", "164"], ["164", "183"], ["164", "166"], ["164", "175"], ["359", "376"], ["359", "378"], ["359", "362"], ["359", "380"], ["359", "368"], ["359", "397"], ["359", "366"], ["359", "373"], ["359", "359"], ["121", "129"], ["121", "140"], ["121", "132"], ["121", "121"], ["121", "124"], ["183", "188"], ["183", "190"], ["183", "186"], ["183", "183"], ["199", "209"], ["199", "206"], ["199", "202"], ["199", "199"], ["376", "376"], ["376", "392"], ["376", "378"], ["376", "390"], ["376", "380"], ["376", "385"], ["376", "387"], ["376", "393"], ["376", "381"], ["209", "209"], ["209", "216"], ["209", "319"], ["209", "284"], ["209", "212"], ["209", "318"], ["209", "251"], ["209", "250"], ["132", "135"], ["132", "132"], ["132", "137"], ["216", "230"], ["216", "243"], ["216", "242"], ["216", "238"], ["216", "236"], ["216", "237"], ["216", "229"], ["216", "227"], ["216", "232"], ["216", "245"], ["216", "223"], ["216", "221"], ["216", "220"], ["216", "219"], ["250", "272"], ["250", "256"], ["250", "268"], ["250", "274"], ["250", "278"], ["250", "257"], ["250", "273"], ["250", "279"], ["250", "255"], ["250", "259"], ["250", "265"], ["250", "263"], ["250", "266"], ["284", "292"], ["284", "298"], ["284", "306"], ["284", "288"], ["284", "304"], ["284", "311"], ["284", "310"], ["284", "305"], ["284", "297"], ["284", "301"], ["284", "289"], ["284", "314"], ["284", "295"], ["284", "287"], ["318", "334"], ["318", "324"], ["318", "340"], ["318", "346"], ["318", "347"], ["318", "328"], ["318", "323"], ["318", "342"], ["318", "337"], ["318", "341"], ["318", "325"], ["318", "333"], ["318", "331"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY infile = new FastScanner())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new FastScanner())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(LOCAL,int M: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,M,int M = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,infile,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int K = nextInt())<SUB>6</SUB>>", "43": "<(nextInt,nextInt())<SUB>6</SUB>>", "45": "<(LOCAL,int[][] weights1: int[][])<SUB>7</SUB>>", "47": "<(IDENTIFIER,weights1,int[][] weights1 = new int[N][M - 1])<SUB>7</SUB>>", "49": "<(IDENTIFIER,N,new int[N][M - 1])<SUB>7</SUB>>", "51": "<(IDENTIFIER,M,M - 1)<SUB>7</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; N); r++),for (int r = 0; Some(r &lt; N); r++))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,int r = 0)<SUB>8</SUB>>", "59": "<(IDENTIFIER,r,r &lt; N)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,r++)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,weights1[r] = nextInts(M - 1))<SUB>9</SUB>>", "65": "<(IDENTIFIER,weights1,weights1[r] = nextInts(M - 1))<SUB>9</SUB>>", "67": "<(nextInts,nextInts(M - 1))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>9</SUB>>", "71": "<(LITERAL,1,M - 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,int[][] weights2 = new int[N - 1][M])<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[N - 1][M])>", "77": "<(IDENTIFIER,N,N - 1)<SUB>10</SUB>>", "79": "<(IDENTIFIER,M,new int[N - 1][M])<SUB>10</SUB>>", "81": "<(LOCAL,int r: int)<SUB>11</SUB>>", "83": "<(IDENTIFIER,r,int r = 0)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.lessThan,r &lt; N - 1)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>11</SUB>>", "89": "<(LITERAL,1,N - 1)<SUB>11</SUB>>", "91": "<(IDENTIFIER,r,r++)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,weights2[r])<SUB>12</SUB>>", "95": "<(IDENTIFIER,r,weights2[r] = nextInts(M))<SUB>12</SUB>>", "97": "<(IDENTIFIER,infile,nextInts(M))<SUB>12</SUB>>", "99": "<(LOCAL,int[][] res: int[][])<SUB>14</SUB>>", "101": "<(IDENTIFIER,res,int[][] res = new int[N][M])<SUB>14</SUB>>", "103": "<(IDENTIFIER,N,new int[N][M])<SUB>14</SUB>>", "105": "<(CONTROL_STRUCTURE,if (K % 2 == 1),if (K % 2 == 1))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.modulo,K % 2)<SUB>15</SUB>>", "109": "<(LITERAL,2,K % 2)<SUB>15</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "112": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>17</SUB>>", "114": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>17</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>17</SUB>>", "117": "<(LOCAL,int r: int)<SUB>18</SUB>>", "119": "<(IDENTIFIER,r,int r = 0)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>18</SUB>>", "123": "<(IDENTIFIER,N,r &lt; N)<SUB>18</SUB>>", "125": "<(IDENTIFIER,r,r++)<SUB>18</SUB>>", "127": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; M); c++),for (int c = 0; Some(c &lt; M); c++))<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>20</SUB>>", "131": "<(LITERAL,0,int c = 0)<SUB>20</SUB>>", "133": "<(IDENTIFIER,c,c &lt; M)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,c++)<SUB>20</SUB>>", "137": "<(append,sb.append(&quot;-1 &quot;))<SUB>21</SUB>>", "139": "<(LITERAL,&quot;-1 &quot;,sb.append(&quot;-1 &quot;))<SUB>21</SUB>>", "141": "<(IDENTIFIER,sb,sb.append(&quot;\\n&quot;))<SUB>22</SUB>>", "143": "<(print,System.out.print(sb))<SUB>24</SUB>>", "145": "<(IDENTIFIER,System,System.out.print(sb))<SUB>24</SUB>>", "147": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>24</SUB>>", "149": "<(LOCAL,int[][] dp: int[][])<SUB>27</SUB>>", "151": "<(IDENTIFIER,dp,int[][] dp = new int[N][M])<SUB>27</SUB>>", "153": "<(IDENTIFIER,N,new int[N][M])<SUB>27</SUB>>", "8": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>28</SUB>>", "156": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>28</SUB>>", "158": "<(&lt;init&gt;,new StringBuilder())<SUB>28</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; K / 2); k++),for (int k = 0; Some(k &lt; K / 2); k++))<SUB>29</SUB>>", "161": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>29</SUB>>", "163": "<(LITERAL,0,int k = 0)<SUB>29</SUB>>", "165": "<(IDENTIFIER,k,k &lt; K / 2)<SUB>29</SUB>>", "167": "<(IDENTIFIER,K,K / 2)<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,k++)<SUB>29</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.assignment,int[][] next = new int[N][M])<SUB>31</SUB>>", "175": "<(&lt;operator&gt;.alloc,new int[N][M])>", "177": "<(IDENTIFIER,M,new int[N][M])<SUB>31</SUB>>", "179": "<(LOCAL,int r: int)<SUB>32</SUB>>", "181": "<(IDENTIFIER,r,int r = 0)<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>32</SUB>>", "185": "<(IDENTIFIER,N,r &lt; N)<SUB>32</SUB>>", "187": "<(IDENTIFIER,r,r++)<SUB>32</SUB>>", "189": "<(IDENTIFIER,Arrays,fill(next[r], INF))<SUB>33</SUB>>", "191": "<(IDENTIFIER,next,fill(next[r], INF))<SUB>33</SUB>>", "193": "<(IDENTIFIER,INF,fill(next[r], INF))<SUB>33</SUB>>", "195": "<(LOCAL,int r: int)<SUB>34</SUB>>", "197": "<(IDENTIFIER,r,int r = 0)<SUB>34</SUB>>", "199": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>34</SUB>>", "201": "<(IDENTIFIER,N,r &lt; N)<SUB>34</SUB>>", "203": "<(IDENTIFIER,r,r++)<SUB>34</SUB>>", "205": "<(LOCAL,int c: int)<SUB>35</SUB>>", "207": "<(IDENTIFIER,c,int c = 0)<SUB>35</SUB>>", "209": "<(&lt;operator&gt;.lessThan,c &lt; M)<SUB>35</SUB>>", "211": "<(IDENTIFIER,M,c &lt; M)<SUB>35</SUB>>", "213": "<(IDENTIFIER,c,c++)<SUB>35</SUB>>", "215": "<(CONTROL_STRUCTURE,if (r &gt; 0),if (r &gt; 0))<SUB>37</SUB>>", "217": "<(IDENTIFIER,r,r &gt; 0)<SUB>37</SUB>>", "219": "<(&lt;operator&gt;.assignment,next[r - 1][c] = min(next[r - 1][c], dp[r][c] + weights2[r - 1][c]))<SUB>38</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,next[r - 1])<SUB>38</SUB>>", "223": "<(&lt;operator&gt;.subtraction,r - 1)<SUB>38</SUB>>", "225": "<(LITERAL,1,r - 1)<SUB>38</SUB>>", "227": "<(min,min(next[r - 1][c], dp[r][c] + weights2[r - 1][c]))<SUB>38</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,next[r - 1][c])<SUB>38</SUB>>", "231": "<(IDENTIFIER,next,min(next[r - 1][c], dp[r][c] + weights2[r - 1][c]))<SUB>38</SUB>>", "233": "<(IDENTIFIER,r,r - 1)<SUB>38</SUB>>", "235": "<(IDENTIFIER,c,min(next[r - 1][c], dp[r][c] + weights2[r - 1][c]))<SUB>38</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,dp[r][c])<SUB>38</SUB>>", "239": "<(IDENTIFIER,dp,dp[r][c] + weights2[r - 1][c])<SUB>38</SUB>>", "241": "<(IDENTIFIER,c,dp[r][c] + weights2[r - 1][c])<SUB>38</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,weights2[r - 1])<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.subtraction,r - 1)<SUB>38</SUB>>", "247": "<(LITERAL,1,r - 1)<SUB>38</SUB>>", "249": "<(CONTROL_STRUCTURE,if (r + 1 &lt; N),if (r + 1 &lt; N))<SUB>39</SUB>>", "251": "<(&lt;operator&gt;.addition,r + 1)<SUB>39</SUB>>", "253": "<(LITERAL,1,r + 1)<SUB>39</SUB>>", "255": "<(&lt;operator&gt;.assignment,next[r + 1][c] = min(next[r + 1][c], dp[r][c] + weights2[r][c]))<SUB>40</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,next[r + 1])<SUB>40</SUB>>", "259": "<(&lt;operator&gt;.addition,r + 1)<SUB>40</SUB>>", "261": "<(LITERAL,1,r + 1)<SUB>40</SUB>>", "263": "<(min,min(next[r + 1][c], dp[r][c] + weights2[r][c]))<SUB>40</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,next[r + 1][c])<SUB>40</SUB>>", "267": "<(IDENTIFIER,next,min(next[r + 1][c], dp[r][c] + weights2[r][c]))<SUB>40</SUB>>", "269": "<(IDENTIFIER,r,r + 1)<SUB>40</SUB>>", "271": "<(IDENTIFIER,c,min(next[r + 1][c], dp[r][c] + weights2[r][c]))<SUB>40</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,dp[r][c])<SUB>40</SUB>>", "275": "<(IDENTIFIER,dp,dp[r][c] + weights2[r][c])<SUB>40</SUB>>", "277": "<(IDENTIFIER,c,dp[r][c] + weights2[r][c])<SUB>40</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,weights2[r])<SUB>40</SUB>>", "281": "<(IDENTIFIER,r,dp[r][c] + weights2[r][c])<SUB>40</SUB>>", "283": "<(CONTROL_STRUCTURE,if (c &gt; 0),if (c &gt; 0))<SUB>41</SUB>>", "285": "<(IDENTIFIER,c,c &gt; 0)<SUB>41</SUB>>", "287": "<(&lt;operator&gt;.assignment,next[r][c - 1] = min(next[r][c - 1], dp[r][c] + weights1[r][c - 1]))<SUB>42</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,next[r])<SUB>42</SUB>>", "291": "<(IDENTIFIER,r,next[r][c - 1] = min(next[r][c - 1], dp[r][c] + weights1[r][c - 1]))<SUB>42</SUB>>", "293": "<(IDENTIFIER,c,c - 1)<SUB>42</SUB>>", "295": "<(min,min(next[r][c - 1], dp[r][c] + weights1[r][c - 1]))<SUB>42</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,next[r][c - 1])<SUB>42</SUB>>", "299": "<(IDENTIFIER,next,min(next[r][c - 1], dp[r][c] + weights1[r][c - 1]))<SUB>42</SUB>>", "301": "<(&lt;operator&gt;.subtraction,c - 1)<SUB>42</SUB>>", "303": "<(LITERAL,1,c - 1)<SUB>42</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,dp[r][c])<SUB>42</SUB>>", "307": "<(IDENTIFIER,dp,dp[r][c] + weights1[r][c - 1])<SUB>42</SUB>>", "309": "<(IDENTIFIER,c,dp[r][c] + weights1[r][c - 1])<SUB>42</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,weights1[r])<SUB>42</SUB>>", "313": "<(IDENTIFIER,r,dp[r][c] + weights1[r][c - 1])<SUB>42</SUB>>", "315": "<(IDENTIFIER,c,c - 1)<SUB>42</SUB>>", "317": "<(CONTROL_STRUCTURE,if (c + 1 &lt; M),if (c + 1 &lt; M))<SUB>43</SUB>>", "319": "<(&lt;operator&gt;.addition,c + 1)<SUB>43</SUB>>", "321": "<(LITERAL,1,c + 1)<SUB>43</SUB>>", "323": "<(&lt;operator&gt;.assignment,next[r][c + 1] = min(next[r][c + 1], dp[r][c] + weights1[r][c]))<SUB>44</SUB>>", "325": "<(&lt;operator&gt;.indexAccess,next[r])<SUB>44</SUB>>", "327": "<(IDENTIFIER,r,next[r][c + 1] = min(next[r][c + 1], dp[r][c] + weights1[r][c]))<SUB>44</SUB>>", "329": "<(IDENTIFIER,c,c + 1)<SUB>44</SUB>>", "331": "<(min,min(next[r][c + 1], dp[r][c] + weights1[r][c]))<SUB>44</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,next[r][c + 1])<SUB>44</SUB>>", "335": "<(IDENTIFIER,next,min(next[r][c + 1], dp[r][c] + weights1[r][c]))<SUB>44</SUB>>", "337": "<(&lt;operator&gt;.addition,c + 1)<SUB>44</SUB>>", "339": "<(LITERAL,1,c + 1)<SUB>44</SUB>>", "341": "<(&lt;operator&gt;.indexAccess,dp[r][c])<SUB>44</SUB>>", "343": "<(IDENTIFIER,dp,dp[r][c] + weights1[r][c])<SUB>44</SUB>>", "345": "<(IDENTIFIER,c,dp[r][c] + weights1[r][c])<SUB>44</SUB>>", "347": "<(&lt;operator&gt;.indexAccess,weights1[r])<SUB>44</SUB>>", "349": "<(IDENTIFIER,r,dp[r][c] + weights1[r][c])<SUB>44</SUB>>", "351": "<(&lt;operator&gt;.assignment,dp = next)<SUB>46</SUB>>", "353": "<(IDENTIFIER,next,dp = next)<SUB>46</SUB>>", "355": "<(LOCAL,int r: int)<SUB>48</SUB>>", "357": "<(IDENTIFIER,r,int r = 0)<SUB>48</SUB>>", "359": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>48</SUB>>", "361": "<(IDENTIFIER,N,r &lt; N)<SUB>48</SUB>>", "363": "<(IDENTIFIER,r,r++)<SUB>48</SUB>>", "365": "<(LOCAL,$iterLocal0: int[])<SUB>50</SUB>>", "367": "<(IDENTIFIER,$iterLocal0,)<SUB>50</SUB>>", "369": "<(IDENTIFIER,dp,)<SUB>50</SUB>>", "371": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "373": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>50</SUB>>", "375": "<(LITERAL,0,int $idx0 = 0)<SUB>50</SUB>>", "377": "<(IDENTIFIER,$idx0,$idx0 &lt; $iterLocal0.length)>", "379": "<(IDENTIFIER,$iterLocal0,$idx0 &lt; $iterLocal0.length)>", "381": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>50</SUB>>", "383": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "385": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>50</SUB>>", "387": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>50</SUB>>", "389": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "391": "<(IDENTIFIER,sb,sb.append((2 * x) + &quot; &quot;))<SUB>51</SUB>>", "393": "<(&lt;operator&gt;.multiplication,2 * x)<SUB>51</SUB>>", "395": "<(IDENTIFIER,x,2 * x)<SUB>51</SUB>>", "397": "<(append,sb.append(&quot;\\n&quot;))<SUB>52</SUB>>", "399": "<(LITERAL,&quot;\\n&quot;,sb.append(&quot;\\n&quot;))<SUB>52</SUB>>", "401": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>54</SUB>>", "403": "<(FIELD_IDENTIFIER,out,out)<SUB>54</SUB>>", "405": "<(MODIFIER,PUBLIC)>", "407": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}