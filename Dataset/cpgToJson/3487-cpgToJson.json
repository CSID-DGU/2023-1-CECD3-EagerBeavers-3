{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "47"], ["21", "48"], ["21", "51"], ["21", "52"], ["21", "61"], ["21", "68"], ["21", "123"], ["21", "148"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "67"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "90"], ["78", "92"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "122"], ["101", "102"], ["101", "121"], ["102", "103"], ["102", "112"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "131"], ["123", "133"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "147"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "43"], ["40", "48"], ["48", "55"], ["52", "63"], ["61", "70"], ["148", "155"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["42", "40"], ["54", "52"], ["62", "61"], ["70", "73"], ["73", "80"], ["73", "125"], ["76", "73"], ["125", "128"], ["128", "139"], ["128", "151"], ["131", "128"], ["133", "131"], ["149", "148"], ["28", "26"], ["43", "42"], ["55", "58"], ["58", "54"], ["63", "62"], ["80", "86"], ["83", "94"], ["83", "76"], ["90", "86"], ["92", "90"], ["135", "133"], ["151", "149"], ["85", "83"], ["93", "99"], ["98", "92"], ["136", "135"], ["86", "85"], ["94", "93"], ["99", "105"], ["100", "98"], ["138", "136"], ["101", "100"], ["139", "143"], ["142", "138"], ["102", "101"], ["143", "142"], ["103", "115"], ["112", "102"], ["104", "103"], ["113", "118"], ["118", "112"], ["105", "108"], ["108", "104"], ["115", "113"], ["19", "24"], ["20", "155"], ["22", "155"], ["25", "155"], ["25", "155"], ["31", "155"], ["35", "155"], ["37", "155"], ["35", "155"], ["35", "155"], ["40", "155"], ["40", "155"], ["48", "155"], ["52", "155"], ["54", "155"], ["58", "155"], ["54", "155"], ["52", "155"], ["52", "155"], ["61", "155"], ["61", "155"], ["125", "155"], ["128", "155"], ["128", "155"], ["128", "155"], ["148", "155"], ["148", "155"], ["148", "155"], ["143", "155"], ["142", "155"], ["136", "155"], ["135", "155"], ["135", "155"], ["133", "155"], ["133", "155"], ["131", "155"], ["80", "155"], ["83", "155"], ["86", "155"], ["85", "155"], ["83", "155"], ["83", "155"], ["76", "155"], ["92", "155"], ["103", "155"], ["102", "155"], ["102", "155"], ["101", "155"], ["100", "155"], ["100", "155"], ["98", "155"], ["92", "155"], ["92", "155"], ["90", "155"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["42", "40"], ["42", "40"], ["19", "48"], ["54", "52"], ["54", "52"], ["19", "61"], ["22", "25"], ["19", "25"], ["19", "70"], ["19", "125"], ["135", "133"], ["135", "133"], ["48", "148"], ["133", "148"], ["19", "148"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["31", "42"], ["19", "42"], ["40", "54"], ["19", "54"], ["31", "54"], ["70", "73"], ["76", "73"], ["19", "73"], ["40", "73"], ["86", "76"], ["19", "76"], ["73", "80"], ["19", "80"], ["19", "92"], ["100", "92"], ["100", "92"], ["125", "128"], ["131", "128"], ["19", "128"], ["73", "128"], ["143", "131"], ["19", "131"], ["31", "43"], ["19", "43"], ["40", "55"], ["19", "55"], ["19", "58"], ["31", "58"], ["80", "83"], ["90", "83"], ["19", "83"], ["86", "83"], ["86", "83"], ["118", "90"], ["19", "90"], ["48", "135"], ["133", "135"], ["19", "135"], ["35", "135"], ["100", "135"], ["86", "85"], ["86", "85"], ["19", "85"], ["19", "98"], ["100", "98"], ["100", "98"], ["48", "136"], ["133", "136"], ["19", "136"], ["19", "86"], ["31", "86"], ["101", "86"], ["73", "86"], ["101", "100"], ["101", "100"], ["35", "100"], ["19", "100"], ["103", "101"], ["103", "101"], ["115", "101"], ["19", "101"], ["143", "142"], ["143", "142"], ["19", "142"], ["103", "102"], ["103", "102"], ["86", "143"], ["19", "143"], ["31", "143"], ["128", "143"], ["19", "103"], ["108", "118"], ["19", "118"], ["83", "108"], ["19", "108"], ["86", "115"], ["19", "115"], ["73", "73"], ["73", "85"], ["73", "76"], ["73", "80"], ["73", "83"], ["73", "86"], ["128", "136"], ["128", "128"], ["128", "131"], ["128", "142"], ["128", "138"], ["128", "143"], ["128", "135"], ["128", "139"], ["128", "133"], ["83", "94"], ["83", "115"], ["83", "98"], ["83", "113"], ["83", "99"], ["83", "102"], ["83", "85"], ["83", "103"], ["83", "104"], ["83", "92"], ["83", "112"], ["83", "93"], ["83", "101"], ["83", "90"], ["83", "83"], ["83", "105"], ["83", "118"], ["83", "100"], ["83", "108"], ["83", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int md = nextInt())<SUB>3</SUB>>", "37": "<(nextInt,nextInt())<SUB>3</SUB>>", "39": "<(LOCAL,int k: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,k,int k = (n + 1) / 2)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.addition,n + 1)<SUB>4</SUB>>", "45": "<(LITERAL,1,n + 1)<SUB>4</SUB>>", "47": "<(LOCAL,int ans: int)<SUB>4</SUB>>", "49": "<(IDENTIFIER,ans,int ans = 0)<SUB>4</SUB>>", "51": "<(LOCAL,int[][] dp: int[][])<SUB>5</SUB>>", "53": "<(IDENTIFIER,dp,int[][] dp = new int[k + 1][n + 1])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.addition,k + 1)<SUB>5</SUB>>", "57": "<(LITERAL,1,k + 1)<SUB>5</SUB>>", "59": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>5</SUB>>", "65": "<(LITERAL,0,dp[0][0] = 1)<SUB>5</SUB>>", "67": "<(LITERAL,1,dp[0][0] = 1)<SUB>5</SUB>>", "69": "<(LOCAL,int h: int)<SUB>6</SUB>>", "71": "<(IDENTIFIER,h,int h = 1)<SUB>6</SUB>>", "73": "<(&lt;operator&gt;.lessEqualsThan,h &lt;= k)<SUB>6</SUB>>", "75": "<(IDENTIFIER,k,h &lt;= k)<SUB>6</SUB>>", "77": "<(IDENTIFIER,h,h++)<SUB>6</SUB>>", "79": "<(LOCAL,int l: int)<SUB>7</SUB>>", "81": "<(IDENTIFIER,l,int l = h)<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= n - h + 1)<SUB>7</SUB>>", "85": "<(&lt;operator&gt;.addition,n - h + 1)<SUB>7</SUB>>", "87": "<(IDENTIFIER,n,n - h)<SUB>7</SUB>>", "89": "<(LITERAL,1,n - h + 1)<SUB>7</SUB>>", "91": "<(IDENTIFIER,l,l++)<SUB>7</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,dp[h][l])<SUB>8</SUB>>", "95": "<(IDENTIFIER,dp,dp[h][l] = (int) ((dp[h][l - 1] * 2L + dp[h - 1][l - 1]) * h % md))<SUB>8</SUB>>", "97": "<(IDENTIFIER,l,dp[h][l] = (int) ((dp[h][l - 1] * 2L + dp[h - 1][l - 1]) * h % md))<SUB>8</SUB>>", "99": "<(TYPE_REF,int,int)<SUB>8</SUB>>", "101": "<(&lt;operator&gt;.multiplication,(dp[h][l - 1] * 2L + dp[h - 1][l - 1]) * h)<SUB>8</SUB>>", "103": "<(&lt;operator&gt;.multiplication,dp[h][l - 1] * 2L)<SUB>8</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dp[h])<SUB>8</SUB>>", "107": "<(IDENTIFIER,h,dp[h][l - 1] * 2L)<SUB>8</SUB>>", "109": "<(IDENTIFIER,l,l - 1)<SUB>8</SUB>>", "111": "<(LITERAL,2L,dp[h][l - 1] * 2L)<SUB>8</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,dp[h - 1])<SUB>8</SUB>>", "115": "<(&lt;operator&gt;.subtraction,h - 1)<SUB>8</SUB>>", "117": "<(LITERAL,1,h - 1)<SUB>8</SUB>>", "119": "<(IDENTIFIER,l,l - 1)<SUB>8</SUB>>", "121": "<(IDENTIFIER,h,(dp[h][l - 1] * 2L + dp[h - 1][l - 1]) * h)<SUB>8</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int h = 1; Some(h &lt;= k); h++),for (int h = 1; Some(h &lt;= k); h++))<SUB>9</SUB>>", "125": "<(&lt;operator&gt;.assignment,int h = 1)<SUB>9</SUB>>", "127": "<(LITERAL,1,int h = 1)<SUB>9</SUB>>", "129": "<(IDENTIFIER,h,h &lt;= k)<SUB>9</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,h++)<SUB>9</SUB>>", "133": "<(&lt;operator&gt;.assignment,ans = (ans + dp[h][n - h + 1]) % md)<SUB>10</SUB>>", "135": "<(&lt;operator&gt;.modulo,(ans + dp[h][n - h + 1]) % md)<SUB>10</SUB>>", "137": "<(IDENTIFIER,ans,ans + dp[h][n - h + 1])<SUB>10</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,dp[h])<SUB>10</SUB>>", "141": "<(IDENTIFIER,h,ans + dp[h][n - h + 1])<SUB>10</SUB>>", "143": "<(&lt;operator&gt;.subtraction,n - h)<SUB>10</SUB>>", "145": "<(IDENTIFIER,h,n - h)<SUB>10</SUB>>", "147": "<(IDENTIFIER,md,(ans + dp[h][n - h + 1]) % md)<SUB>10</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "151": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}