{"edges": [["21", "22"], ["21", "23"], ["21", "146"], ["21", "147"], ["21", "148"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "53"], ["23", "54"], ["23", "61"], ["23", "62"], ["23", "6"], ["23", "69"], ["23", "72"], ["23", "76"], ["23", "82"], ["23", "102"], ["23", "103"], ["23", "106"], ["23", "107"], ["23", "110"], ["23", "129"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "44"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "5"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "92"], ["82", "94"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["116", "117"], ["118", "119"], ["118", "127"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "126"], ["122", "123"], ["122", "124"], ["124", "125"], ["127", "128"], ["129", "130"], ["129", "133"], ["129", "139"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["140", "141"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["24", "31"], ["27", "42"], ["39", "50"], ["46", "58"], ["54", "66"], ["62", "71"], ["69", "74"], ["72", "79"], ["76", "84"], ["103", "107"], ["107", "112"], ["26", "24"], ["41", "39"], ["48", "46"], ["56", "54"], ["64", "62"], ["71", "69"], ["74", "72"], ["78", "76"], ["84", "91"], ["87", "99"], ["87", "103"], ["92", "91"], ["111", "124"], ["111", "130"], ["130", "137"], ["130", "144"], ["29", "36"], ["32", "27"], ["42", "41"], ["50", "48"], ["58", "56"], ["66", "64"], ["79", "78"], ["89", "87"], ["95", "92"], ["112", "111"], ["112", "116"], ["115", "111"], ["119", "127"], ["127", "112"], ["134", "148"], ["31", "29"], ["34", "32"], ["91", "89"], ["97", "95"], ["116", "115"], ["121", "119"], ["135", "134"], ["141", "148"], ["36", "34"], ["99", "97"], ["122", "121"], ["137", "135"], ["142", "141"], ["124", "122"], ["144", "142"], ["21", "26"], ["22", "148"], ["24", "148"], ["29", "148"], ["32", "148"], ["32", "148"], ["32", "148"], ["27", "148"], ["39", "148"], ["46", "148"], ["48", "148"], ["46", "148"], ["46", "148"], ["56", "148"], ["54", "148"], ["54", "148"], ["64", "148"], ["64", "148"], ["62", "148"], ["62", "148"], ["69", "148"], ["72", "148"], ["72", "148"], ["72", "148"], ["76", "148"], ["79", "148"], ["78", "148"], ["76", "148"], ["76", "148"], ["84", "148"], ["87", "148"], ["87", "148"], ["87", "148"], ["103", "148"], ["103", "148"], ["107", "148"], ["107", "148"], ["116", "148"], ["115", "148"], ["111", "148"], ["111", "148"], ["130", "148"], ["130", "148"], ["130", "148"], ["134", "148"], ["124", "148"], ["122", "148"], ["121", "148"], ["119", "148"], ["119", "148"], ["127", "148"], ["127", "148"], ["95", "148"], ["97", "148"], ["97", "148"], ["95", "148"], ["95", "148"], ["92", "148"], ["74", "148"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["48", "46"], ["56", "54"], ["56", "54"], ["64", "62"], ["64", "62"], ["21", "69"], ["78", "76"], ["78", "76"], ["21", "103"], ["62", "107"], ["21", "107"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["69", "72"], ["21", "72"], ["74", "72"], ["21", "84"], ["21", "29"], ["21", "37"], ["42", "41"], ["21", "41"], ["21", "48"], ["39", "48"], ["48", "56"], ["21", "56"], ["39", "56"], ["56", "64"], ["21", "64"], ["39", "64"], ["21", "74"], ["79", "78"], ["21", "78"], ["84", "87"], ["92", "87"], ["21", "87"], ["76", "87"], ["87", "92"], ["21", "92"], ["112", "111"], ["112", "111"], ["115", "111"], ["121", "119"], ["121", "119"], ["112", "130"], ["21", "130"], ["112", "130"], ["29", "32"], ["21", "32"], ["27", "42"], ["21", "42"], ["42", "79"], ["21", "79"], ["72", "95"], ["21", "95"], ["97", "95"], ["97", "95"], ["107", "112"], ["119", "112"], ["21", "112"], ["54", "112"], ["116", "115"], ["103", "127"], ["21", "127"], ["21", "134"], ["64", "97"], ["21", "97"], ["76", "97"], ["72", "116"], ["124", "116"], ["95", "116"], ["21", "116"], ["112", "121"], ["21", "121"], ["124", "121"], ["103", "141"], ["127", "141"], ["21", "141"], ["112", "122"], ["21", "122"], ["124", "122"], ["72", "124"], ["116", "124"], ["95", "124"], ["21", "124"], ["87", "89"], ["87", "99"], ["87", "95"], ["87", "92"], ["87", "87"], ["87", "97"], ["87", "91"], ["111", "122"], ["111", "119"], ["111", "121"], ["111", "127"], ["111", "112"], ["111", "124"], ["111", "111"], ["130", "141"], ["130", "135"], ["130", "142"], ["130", "144"], ["130", "134"], ["130", "137"], ["112", "115"], ["112", "116"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] splitted = split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "43": "<(IDENTIFIER,reader,readLine())<SUB>3</SUB>>", "45": "<(LOCAL,int n: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,int n = Integer.parseInt(splitted[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,Integer,Integer.parseInt(splitted[0]))<SUB>4</SUB>>", "51": "<(IDENTIFIER,splitted,Integer.parseInt(splitted[0]))<SUB>4</SUB>>", "53": "<(LOCAL,int m: int)<SUB>5</SUB>>", "55": "<(IDENTIFIER,m,int m = Integer.parseInt(splitted[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,Integer,Integer.parseInt(splitted[1]))<SUB>5</SUB>>", "59": "<(IDENTIFIER,splitted,Integer.parseInt(splitted[1]))<SUB>5</SUB>>", "61": "<(LOCAL,int k: int)<SUB>6</SUB>>", "63": "<(IDENTIFIER,k,int k = Integer.parseInt(splitted[2]))<SUB>6</SUB>>", "65": "<(IDENTIFIER,Integer,Integer.parseInt(splitted[2]))<SUB>6</SUB>>", "67": "<(IDENTIFIER,splitted,Integer.parseInt(splitted[2]))<SUB>6</SUB>>", "6": "<(LOCAL,PriorityQueue&lt;Integer&gt; queue: ANY)<SUB>7</SUB>>", "70": "<(IDENTIFIER,queue,ANY queue = new PriorityQueue&lt;Integer&gt;(1000, Collections.reverseOrder()))<SUB>7</SUB>>", "72": "<(&lt;init&gt;,new PriorityQueue&lt;Integer&gt;(1000, Collections.reverseOrder()))<SUB>7</SUB>>", "73": "<(LITERAL,1000,new PriorityQueue&lt;Integer&gt;(1000, Collections.reverseOrder()))<SUB>7</SUB>>", "75": "<(IDENTIFIER,Collections,reverseOrder())<SUB>7</SUB>>", "77": "<(IDENTIFIER,splitted,splitted = split(&quot; &quot;))<SUB>8</SUB>>", "79": "<(readLine,readLine())<SUB>8</SUB>>", "81": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>8</SUB>>", "83": "<(LOCAL,int ii: int)<SUB>9</SUB>>", "85": "<(IDENTIFIER,ii,int ii = 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.lessThan,ii &lt; splitted.length)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.fieldAccess,splitted.length)<SUB>9</SUB>>", "91": "<(FIELD_IDENTIFIER,length,length)<SUB>9</SUB>>", "93": "<(IDENTIFIER,ii,ii++)<SUB>9</SUB>>", "95": "<(add,add(Integer.parseInt(splitted[ii])))<SUB>10</SUB>>", "97": "<(parseInt,Integer.parseInt(splitted[ii]))<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,splitted[ii])<SUB>10</SUB>>", "101": "<(IDENTIFIER,ii,Integer.parseInt(splitted[ii]))<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.assignment,int counter = 0)<SUB>13</SUB>>", "105": "<(LITERAL,0,int counter = 0)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,int spot = k)<SUB>14</SUB>>", "109": "<(IDENTIFIER,k,int spot = k)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.logicalAnd,spot &lt; m &amp;&amp; !queue.isEmpty())<SUB>15</SUB>>", "113": "<(IDENTIFIER,spot,spot &lt; m)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.logicalNot,!queue.isEmpty())<SUB>15</SUB>>", "117": "<(IDENTIFIER,queue,isEmpty())<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,spot = spot + queue.poll() - 1)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.subtraction,spot + queue.poll() - 1)<SUB>16</SUB>>", "123": "<(IDENTIFIER,spot,spot + queue.poll())<SUB>16</SUB>>", "125": "<(IDENTIFIER,queue,poll())<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,counter++)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,if (spot &lt; m),if (spot &lt; m))<SUB>19</SUB>>", "131": "<(IDENTIFIER,spot,spot &lt; m)<SUB>19</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "139": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "141": "<(println,System.out.println(counter))<SUB>22</SUB>>", "143": "<(IDENTIFIER,System,System.out.println(counter))<SUB>22</SUB>>", "145": "<(IDENTIFIER,counter,System.out.println(counter))<SUB>22</SUB>>", "147": "<(MODIFIER,STATIC)>"}}