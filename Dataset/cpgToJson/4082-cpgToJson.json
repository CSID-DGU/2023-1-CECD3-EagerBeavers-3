{"edges": [["23", "24"], ["23", "25"], ["23", "164"], ["23", "165"], ["23", "166"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "8"], ["25", "40"], ["25", "43"], ["25", "48"], ["25", "52"], ["25", "53"], ["25", "57"], ["25", "82"], ["25", "86"], ["25", "91"], ["25", "136"], ["25", "142"], ["25", "147"], ["25", "153"], ["25", "157"], ["25", "160"], ["25", "162"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "7"], ["43", "44"], ["43", "46"], ["44", "45"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "75"], ["71", "81"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["75", "79"], ["77", "78"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "112"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["128", "130"], ["128", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "145"], ["145", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["149", "152"], ["153", "154"], ["153", "155"], ["153", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "42"], ["40", "44"], ["43", "50"], ["48", "55"], ["53", "59"], ["82", "88"], ["86", "93"], ["136", "145"], ["142", "149"], ["147", "153"], ["153", "157"], ["157", "160"], ["160", "162"], ["162", "166"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["42", "40"], ["44", "46"], ["46", "43"], ["50", "48"], ["55", "53"], ["59", "62"], ["62", "68"], ["62", "84"], ["65", "62"], ["67", "65"], ["84", "82"], ["88", "86"], ["93", "96"], ["96", "103"], ["96", "139"], ["99", "96"], ["138", "136"], ["145", "142"], ["149", "147"], ["32", "30"], ["39", "37"], ["68", "74"], ["102", "114"], ["139", "138"], ["72", "77"], ["75", "67"], ["103", "109"], ["106", "102"], ["114", "117"], ["117", "124"], ["117", "99"], ["120", "117"], ["122", "120"], ["74", "72"], ["77", "79"], ["79", "75"], ["109", "106"], ["123", "130"], ["128", "122"], ["124", "123"], ["130", "133"], ["133", "128"], ["23", "28"], ["24", "166"], ["26", "166"], ["29", "166"], ["29", "166"], ["33", "166"], ["36", "166"], ["36", "166"], ["40", "166"], ["43", "166"], ["43", "166"], ["50", "166"], ["48", "166"], ["48", "166"], ["53", "166"], ["53", "166"], ["53", "166"], ["82", "166"], ["82", "166"], ["82", "166"], ["86", "166"], ["86", "166"], ["86", "166"], ["93", "166"], ["96", "166"], ["96", "166"], ["139", "166"], ["138", "166"], ["136", "166"], ["136", "166"], ["142", "166"], ["142", "166"], ["142", "166"], ["147", "166"], ["147", "166"], ["153", "166"], ["153", "166"], ["157", "166"], ["160", "166"], ["162", "166"], ["162", "166"], ["102", "166"], ["106", "166"], ["106", "166"], ["102", "166"], ["102", "166"], ["114", "166"], ["117", "166"], ["117", "166"], ["99", "166"], ["122", "166"], ["128", "166"], ["128", "166"], ["122", "166"], ["122", "166"], ["120", "166"], ["67", "166"], ["72", "166"], ["75", "166"], ["75", "166"], ["79", "166"], ["75", "166"], ["67", "166"], ["65", "166"], ["157", "166"], ["142", "166"], ["23", "24"], ["23", "26"], ["23", "33"], ["23", "40"], ["50", "48"], ["55", "53"], ["84", "82"], ["88", "86"], ["138", "136"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["40", "43"], ["23", "43"], ["44", "43"], ["46", "43"], ["23", "59"], ["72", "67"], ["75", "67"], ["23", "67"], ["23", "93"], ["23", "142"], ["136", "142"], ["145", "142"], ["36", "147"], ["23", "147"], ["149", "147"], ["149", "147"], ["149", "153"], ["23", "153"], ["147", "157"], ["23", "157"], ["157", "160"], ["23", "160"], ["160", "162"], ["23", "162"], ["29", "44"], ["23", "44"], ["44", "46"], ["23", "46"], ["46", "50"], ["23", "50"], ["48", "55"], ["23", "55"], ["59", "62"], ["65", "62"], ["23", "62"], ["55", "62"], ["62", "65"], ["23", "65"], ["62", "84"], ["23", "84"], ["84", "88"], ["23", "88"], ["93", "96"], ["99", "96"], ["23", "96"], ["88", "96"], ["117", "96"], ["96", "99"], ["23", "99"], ["106", "102"], ["106", "102"], ["106", "102"], ["139", "138"], ["139", "138"], ["23", "145"], ["106", "149"], ["128", "149"], ["23", "149"], ["23", "72"], ["23", "81"], ["23", "114"], ["128", "122"], ["128", "122"], ["128", "122"], ["23", "139"], ["96", "139"], ["72", "75"], ["23", "75"], ["77", "75"], ["79", "75"], ["128", "106"], ["23", "106"], ["43", "106"], ["53", "106"], ["128", "106"], ["67", "106"], ["114", "117"], ["120", "117"], ["23", "117"], ["96", "117"], ["117", "120"], ["23", "120"], ["50", "77"], ["79", "77"], ["23", "77"], ["77", "79"], ["23", "79"], ["106", "128"], ["23", "128"], ["53", "128"], ["106", "128"], ["62", "68"], ["62", "77"], ["62", "75"], ["62", "72"], ["62", "67"], ["62", "74"], ["62", "65"], ["62", "79"], ["62", "62"], ["96", "96"], ["96", "99"], ["96", "102"], ["96", "114"], ["96", "103"], ["96", "106"], ["96", "117"], ["96", "109"], ["117", "120"], ["117", "122"], ["117", "128"], ["117", "123"], ["117", "130"], ["117", "117"], ["117", "124"], ["117", "133"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY s = new Point(sc.nextInt(), sc.nextInt()))<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.alloc,new Point(sc.nextInt(), sc.nextInt()))<SUB>5</SUB>>", "7": "<(IDENTIFIER,s,new Point(sc.nextInt(), sc.nextInt()))<SUB>5</SUB>>", "45": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,n = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,ANY a = new Point[n])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.alloc,new Point[n])>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.preIncrement,++i)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,a[i] = new Point(sc.nextInt(), sc.nextInt()))<SUB>9</SUB>>", "69": "<(IDENTIFIER,a,a[i] = new Point(sc.nextInt(), sc.nextInt()))<SUB>9</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "73": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "75": "<(&lt;init&gt;,new Point(sc.nextInt(), sc.nextInt()))<SUB>9</SUB>>", "77": "<(nextInt,nextInt())<SUB>9</SUB>>", "79": "<(nextInt,nextInt())<SUB>9</SUB>>", "81": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "83": "<(IDENTIFIER,dS,dS = new int[n])<SUB>10</SUB>>", "85": "<(IDENTIFIER,n,new int[n])<SUB>10</SUB>>", "87": "<(IDENTIFIER,dd,dd = new int[n][n])<SUB>11</SUB>>", "89": "<(IDENTIFIER,n,new int[n][n])<SUB>11</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.preIncrement,++i)<SUB>12</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,dS[i])<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,dS[i] = dist2(s, a[i]))<SUB>14</SUB>>", "107": "<(IDENTIFIER,this,dist2(s, a[i]))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,dist2(s, a[i]))<SUB>14</SUB>>", "113": "<(LOCAL,int j: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>15</SUB>>", "119": "<(IDENTIFIER,n,j &lt; n)<SUB>15</SUB>>", "121": "<(IDENTIFIER,j,++j)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,dd[i][j])<SUB>16</SUB>>", "125": "<(IDENTIFIER,dd,dd[i][j] = dist2(a[i], a[j]))<SUB>16</SUB>>", "127": "<(IDENTIFIER,j,dd[i][j] = dist2(a[i], a[j]))<SUB>16</SUB>>", "129": "<(IDENTIFIER,this,dist2(a[i], a[j]))<SUB>16</SUB>>", "131": "<(IDENTIFIER,a,dist2(a[i], a[j]))<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>16</SUB>>", "135": "<(IDENTIFIER,j,dist2(a[i], a[j]))<SUB>16</SUB>>", "137": "<(IDENTIFIER,memo,memo = new int[1 &lt;&lt; n])<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "141": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "143": "<(IDENTIFIER,Arrays,fill(memo, -1))<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "147": "<(println,println(dp(0, 0)))<SUB>21</SUB>>", "149": "<(dp,dp(0, 0))<SUB>21</SUB>>", "151": "<(LITERAL,0,dp(0, 0))<SUB>21</SUB>>", "153": "<(print,print(0, 0))<SUB>22</SUB>>", "155": "<(LITERAL,0,print(0, 0))<SUB>22</SUB>>", "157": "<(println,println(sb))<SUB>23</SUB>>", "159": "<(IDENTIFIER,sb,println(sb))<SUB>23</SUB>>", "161": "<(IDENTIFIER,out,flush())<SUB>24</SUB>>", "163": "<(IDENTIFIER,out,close())<SUB>25</SUB>>", "165": "<(MODIFIER,STATIC)>"}}