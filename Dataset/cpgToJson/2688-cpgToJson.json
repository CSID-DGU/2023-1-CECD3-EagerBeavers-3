{"edges": [["21", "23"], ["21", "125"], ["21", "126"], ["21", "127"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "58"], ["23", "6"], ["23", "61"], ["23", "64"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "119"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "5"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "98"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "108"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["58", "63"], ["61", "64"], ["64", "68"], ["66", "72"], ["119", "127"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "58"], ["49", "46"], ["63", "61"], ["68", "66"], ["72", "75"], ["75", "83"], ["75", "122"], ["78", "75"], ["120", "123"], ["123", "119"], ["30", "28"], ["52", "49"], ["122", "120"], ["53", "56"], ["56", "52"], ["83", "86"], ["86", "93"], ["86", "78"], ["89", "86"], ["93", "89"], ["93", "101"], ["99", "110"], ["99", "89"], ["100", "99"], ["109", "116"], ["114", "89"], ["101", "104"], ["104", "100"], ["110", "109"], ["116", "114"], ["21", "26"], ["22", "127"], ["24", "127"], ["27", "127"], ["27", "127"], ["34", "127"], ["32", "127"], ["32", "127"], ["37", "127"], ["37", "127"], ["58", "127"], ["58", "127"], ["61", "127"], ["64", "127"], ["66", "127"], ["66", "127"], ["66", "127"], ["72", "127"], ["75", "127"], ["75", "127"], ["75", "127"], ["119", "127"], ["123", "127"], ["119", "127"], ["119", "127"], ["83", "127"], ["86", "127"], ["86", "127"], ["78", "127"], ["100", "127"], ["100", "127"], ["99", "127"], ["99", "127"], ["109", "127"], ["109", "127"], ["114", "127"], ["114", "127"], ["89", "127"], ["52", "127"], ["56", "127"], ["52", "127"], ["52", "127"], ["49", "127"], ["58", "127"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "61"], ["68", "66"], ["24", "27"], ["21", "27"], ["21", "43"], ["21", "58"], ["37", "58"], ["52", "58"], ["61", "64"], ["21", "64"], ["21", "72"], ["123", "119"], ["27", "34"], ["21", "34"], ["32", "39"], ["21", "39"], ["43", "46"], ["49", "46"], ["21", "46"], ["39", "46"], ["46", "49"], ["21", "49"], ["56", "52"], ["46", "68"], ["21", "68"], ["72", "75"], ["78", "75"], ["21", "75"], ["68", "75"], ["86", "75"], ["75", "78"], ["21", "78"], ["64", "123"], ["114", "123"], ["21", "123"], ["21", "83"], ["34", "56"], ["21", "56"], ["83", "86"], ["89", "86"], ["21", "86"], ["75", "86"], ["86", "89"], ["21", "89"], ["100", "99"], ["100", "99"], ["21", "99"], ["21", "109"], ["58", "100"], ["114", "100"], ["52", "100"], ["64", "114"], ["21", "114"], ["58", "114"], ["100", "114"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "53"], ["46", "56"], ["75", "83"], ["75", "75"], ["75", "78"], ["75", "86"], ["86", "89"], ["86", "93"], ["86", "86"], ["93", "99"], ["93", "100"], ["93", "104"], ["93", "101"], ["99", "116"], ["99", "114"], ["99", "110"], ["99", "109"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(a))<SUB>8</SUB>>", "6": "<(LOCAL,Set&lt;Integer&gt; div: ANY)<SUB>10</SUB>>", "62": "<(IDENTIFIER,div,ANY div = new HashSet&lt;&gt;())<SUB>10</SUB>>", "64": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>10</SUB>>", "65": "<(LOCAL,boolean[] d: boolean[])<SUB>11</SUB>>", "67": "<(IDENTIFIER,d,boolean[] d = new boolean[n])<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,new boolean[n])<SUB>11</SUB>>", "71": "<(LOCAL,int i: int)<SUB>12</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "77": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "87": "<(IDENTIFIER,j,j &lt; n)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,d[j])<SUB>14</SUB>>", "95": "<(IDENTIFIER,j,if (d[j]))<SUB>14</SUB>>", "97": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>17</SUB>>", "103": "<(IDENTIFIER,j,a[j] % a[i])<SUB>17</SUB>>", "105": "<(IDENTIFIER,a,a[j] % a[i])<SUB>17</SUB>>", "107": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.assignment,d[j] = true)<SUB>18</SUB>>", "111": "<(IDENTIFIER,d,d[j] = true)<SUB>18</SUB>>", "113": "<(LITERAL,true,d[j] = true)<SUB>18</SUB>>", "115": "<(IDENTIFIER,div,add(a[i]))<SUB>19</SUB>>", "117": "<(IDENTIFIER,a,add(a[i]))<SUB>19</SUB>>", "119": "<(println,println(div.size()))<SUB>24</SUB>>", "121": "<(IDENTIFIER,System,println(div.size()))<SUB>24</SUB>>", "123": "<(size,size())<SUB>24</SUB>>", "125": "<(MODIFIER,PUBLIC)>", "127": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}