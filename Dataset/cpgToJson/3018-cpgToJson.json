{"edges": [["19", "21"], ["19", "95"], ["19", "96"], ["19", "97"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "82"], ["34", "88"], ["35", "36"], ["35", "77"], ["36", "37"], ["36", "72"], ["37", "38"], ["37", "67"], ["38", "39"], ["38", "62"], ["39", "40"], ["39", "57"], ["40", "41"], ["40", "52"], ["41", "42"], ["41", "47"], ["42", "43"], ["42", "46"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["89", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["22", "28"], ["25", "32"], ["30", "43"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "86"], ["35", "93"], ["28", "26"], ["36", "35"], ["36", "78"], ["77", "35"], ["83", "97"], ["37", "36"], ["37", "73"], ["72", "36"], ["78", "77"], ["84", "83"], ["90", "97"], ["38", "37"], ["38", "68"], ["67", "37"], ["73", "72"], ["86", "84"], ["91", "90"], ["39", "38"], ["39", "63"], ["62", "38"], ["68", "67"], ["93", "91"], ["40", "39"], ["40", "58"], ["57", "39"], ["63", "62"], ["41", "40"], ["41", "53"], ["52", "40"], ["58", "57"], ["42", "41"], ["42", "48"], ["47", "41"], ["53", "52"], ["43", "42"], ["48", "47"], ["19", "24"], ["20", "97"], ["22", "97"], ["25", "97"], ["25", "97"], ["32", "97"], ["30", "97"], ["30", "97"], ["43", "97"], ["42", "97"], ["41", "97"], ["48", "97"], ["47", "97"], ["41", "97"], ["40", "97"], ["53", "97"], ["52", "97"], ["40", "97"], ["39", "97"], ["58", "97"], ["57", "97"], ["39", "97"], ["38", "97"], ["63", "97"], ["62", "97"], ["38", "97"], ["37", "97"], ["68", "97"], ["67", "97"], ["37", "97"], ["36", "97"], ["73", "97"], ["72", "97"], ["36", "97"], ["35", "97"], ["78", "97"], ["77", "97"], ["35", "97"], ["35", "97"], ["83", "97"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["36", "35"], ["36", "35"], ["77", "35"], ["77", "35"], ["37", "36"], ["37", "36"], ["72", "36"], ["72", "36"], ["78", "77"], ["78", "77"], ["19", "77"], ["19", "83"], ["38", "37"], ["38", "37"], ["67", "37"], ["67", "37"], ["73", "72"], ["73", "72"], ["19", "72"], ["43", "78"], ["48", "78"], ["53", "78"], ["58", "78"], ["63", "78"], ["68", "78"], ["73", "78"], ["19", "78"], ["19", "90"], ["39", "38"], ["39", "38"], ["62", "38"], ["62", "38"], ["68", "67"], ["68", "67"], ["19", "67"], ["43", "73"], ["48", "73"], ["53", "73"], ["58", "73"], ["63", "73"], ["68", "73"], ["19", "73"], ["40", "39"], ["40", "39"], ["57", "39"], ["57", "39"], ["63", "62"], ["63", "62"], ["19", "62"], ["43", "68"], ["48", "68"], ["53", "68"], ["58", "68"], ["63", "68"], ["19", "68"], ["41", "40"], ["41", "40"], ["52", "40"], ["52", "40"], ["58", "57"], ["58", "57"], ["19", "57"], ["43", "63"], ["48", "63"], ["53", "63"], ["58", "63"], ["19", "63"], ["42", "41"], ["42", "41"], ["47", "41"], ["47", "41"], ["53", "52"], ["53", "52"], ["19", "52"], ["43", "58"], ["48", "58"], ["53", "58"], ["19", "58"], ["43", "42"], ["43", "42"], ["19", "42"], ["48", "47"], ["48", "47"], ["19", "47"], ["43", "53"], ["48", "53"], ["19", "53"], ["30", "43"], ["19", "43"], ["43", "48"], ["19", "48"], ["35", "83"], ["35", "84"], ["35", "91"], ["35", "93"], ["35", "90"], ["35", "86"], ["36", "77"], ["36", "78"], ["37", "73"], ["37", "72"], ["38", "68"], ["38", "67"], ["39", "63"], ["39", "62"], ["40", "58"], ["40", "57"], ["41", "52"], ["41", "53"], ["42", "47"], ["42", "48"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.logicalOr,n % 4 == 0 || n % 7 == 0 || n % 47 == 0 || n % 74 == 0 || n % 444 == 0 || n % 447 == 0 || n % 474 == 0 || n % 477 == 0)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.logicalOr,n % 4 == 0 || n % 7 == 0 || n % 47 == 0 || n % 74 == 0 || n % 444 == 0 || n % 447 == 0)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.logicalOr,n % 4 == 0 || n % 7 == 0 || n % 47 == 0 || n % 74 == 0)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.logicalOr,n % 4 == 0 || n % 7 == 0)<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.modulo,n % 4)<SUB>4</SUB>>", "45": "<(LITERAL,4,n % 4)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.equals,n % 7 == 0)<SUB>4</SUB>>", "49": "<(IDENTIFIER,n,n % 7)<SUB>4</SUB>>", "51": "<(LITERAL,0,n % 7 == 0)<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.modulo,n % 47)<SUB>4</SUB>>", "55": "<(LITERAL,47,n % 47)<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.equals,n % 74 == 0)<SUB>4</SUB>>", "59": "<(IDENTIFIER,n,n % 74)<SUB>4</SUB>>", "61": "<(LITERAL,0,n % 74 == 0)<SUB>4</SUB>>", "63": "<(&lt;operator&gt;.modulo,n % 444)<SUB>4</SUB>>", "65": "<(LITERAL,444,n % 444)<SUB>4</SUB>>", "67": "<(&lt;operator&gt;.equals,n % 447 == 0)<SUB>4</SUB>>", "69": "<(IDENTIFIER,n,n % 447)<SUB>4</SUB>>", "71": "<(LITERAL,0,n % 447 == 0)<SUB>4</SUB>>", "73": "<(&lt;operator&gt;.modulo,n % 474)<SUB>4</SUB>>", "75": "<(LITERAL,474,n % 474)<SUB>4</SUB>>", "77": "<(&lt;operator&gt;.equals,n % 477 == 0)<SUB>4</SUB>>", "79": "<(IDENTIFIER,n,n % 477)<SUB>4</SUB>>", "81": "<(LITERAL,0,n % 477 == 0)<SUB>4</SUB>>", "83": "<(println,System.out.println(&quot;YES&quot;))<SUB>5</SUB>>", "85": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>5</SUB>>", "87": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>5</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "95": "<(MODIFIER,PUBLIC)>", "97": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}