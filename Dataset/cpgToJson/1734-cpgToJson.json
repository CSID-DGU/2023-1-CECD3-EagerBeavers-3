{"edges": [["21", "23"], ["21", "161"], ["21", "162"], ["21", "163"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "78"], ["23", "81"], ["23", "82"], ["23", "85"], ["23", "156"], ["23", "159"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["67", "77"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "75"], ["73", "74"], ["75", "76"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["97", "99"], ["97", "132"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "125"], ["102", "103"], ["102", "116"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "124"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "142"], ["134", "145"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "152"], ["145", "153"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "55"], ["78", "82"], ["82", "87"], ["156", "159"], ["159", "163"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["55", "58"], ["58", "64"], ["58", "78"], ["61", "58"], ["63", "61"], ["87", "94"], ["90", "105"], ["90", "156"], ["95", "94"], ["30", "28"], ["37", "35"], ["64", "70"], ["92", "90"], ["99", "138"], ["132", "95"], ["68", "73"], ["71", "63"], ["94", "92"], ["101", "99"], ["134", "132"], ["70", "68"], ["73", "75"], ["75", "71"], ["102", "127"], ["125", "101"], ["135", "142"], ["135", "147"], ["142", "134"], ["145", "134"], ["103", "120"], ["116", "102"], ["126", "125"], ["136", "135"], ["146", "145"], ["146", "153"], ["153", "145"], ["104", "112"], ["109", "103"], ["117", "116"], ["127", "130"], ["130", "126"], ["138", "136"], ["147", "150"], ["150", "146"], ["105", "108"], ["108", "104"], ["110", "115"], ["115", "109"], ["118", "123"], ["123", "117"], ["112", "110"], ["120", "118"], ["21", "26"], ["22", "163"], ["24", "163"], ["27", "163"], ["27", "163"], ["31", "163"], ["34", "163"], ["34", "163"], ["39", "163"], ["44", "163"], ["46", "163"], ["44", "163"], ["44", "163"], ["49", "163"], ["49", "163"], ["55", "163"], ["58", "163"], ["58", "163"], ["78", "163"], ["78", "163"], ["82", "163"], ["87", "163"], ["90", "163"], ["90", "163"], ["90", "163"], ["156", "163"], ["156", "163"], ["159", "163"], ["159", "163"], ["102", "163"], ["102", "163"], ["101", "163"], ["101", "163"], ["99", "163"], ["99", "163"], ["138", "163"], ["138", "163"], ["136", "163"], ["135", "163"], ["135", "163"], ["134", "163"], ["147", "163"], ["147", "163"], ["146", "163"], ["150", "163"], ["146", "163"], ["145", "163"], ["145", "163"], ["134", "163"], ["134", "163"], ["132", "163"], ["132", "163"], ["95", "163"], ["63", "163"], ["68", "163"], ["71", "163"], ["71", "163"], ["75", "163"], ["71", "163"], ["63", "163"], ["61", "163"], ["78", "163"], ["136", "163"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["21", "82"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["68", "63"], ["71", "63"], ["21", "63"], ["21", "78"], ["49", "78"], ["63", "78"], ["21", "87"], ["34", "156"], ["21", "156"], ["82", "156"], ["132", "156"], ["156", "159"], ["21", "159"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["39", "51"], ["21", "51"], ["55", "58"], ["61", "58"], ["21", "58"], ["51", "58"], ["58", "61"], ["21", "61"], ["87", "90"], ["95", "90"], ["21", "90"], ["78", "90"], ["120", "95"], ["21", "95"], ["101", "99"], ["101", "99"], ["82", "132"], ["21", "132"], ["21", "68"], ["21", "77"], ["68", "71"], ["21", "71"], ["73", "71"], ["75", "71"], ["102", "101"], ["102", "101"], ["125", "101"], ["125", "101"], ["82", "134"], ["132", "134"], ["21", "134"], ["46", "73"], ["75", "73"], ["21", "73"], ["73", "75"], ["21", "75"], ["103", "102"], ["103", "102"], ["116", "102"], ["116", "102"], ["21", "125"], ["136", "135"], ["136", "135"], ["150", "135"], ["21", "135"], ["82", "142"], ["132", "142"], ["21", "142"], ["82", "145"], ["132", "145"], ["21", "145"], ["21", "116"], ["21", "136"], ["138", "136"], ["138", "136"], ["147", "146"], ["147", "146"], ["150", "146"], ["82", "153"], ["132", "153"], ["21", "153"], ["99", "138"], ["21", "138"], ["44", "138"], ["147", "138"], ["138", "147"], ["21", "147"], ["138", "147"], ["135", "150"], ["21", "150"], ["90", "112"], ["21", "112"], ["112", "120"], ["21", "120"], ["58", "68"], ["58", "73"], ["58", "64"], ["58", "75"], ["58", "58"], ["58", "61"], ["58", "71"], ["58", "70"], ["58", "63"], ["90", "94"], ["90", "115"], ["90", "120"], ["90", "136"], ["90", "116"], ["90", "99"], ["90", "102"], ["90", "103"], ["90", "132"], ["90", "104"], ["90", "95"], ["90", "92"], ["90", "123"], ["90", "112"], ["90", "134"], ["90", "138"], ["90", "101"], ["90", "90"], ["90", "126"], ["90", "105"], ["90", "130"], ["90", "118"], ["90", "135"], ["90", "110"], ["90", "117"], ["90", "127"], ["90", "108"], ["90", "125"], ["90", "109"], ["135", "145"], ["135", "146"], ["135", "142"], ["135", "150"], ["135", "147"], ["146", "153"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int t: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,t,int t = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY cottages = new Cottage[n])<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.alloc,new Cottage[n])>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,cottages[i] = new Cottage(in.nextInt(), in.nextInt()))<SUB>10</SUB>>", "65": "<(IDENTIFIER,cottages,cottages[i] = new Cottage(in.nextInt(), in.nextInt()))<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "71": "<(&lt;init&gt;,new Cottage(in.nextInt(), in.nextInt()))<SUB>10</SUB>>", "73": "<(nextInt,nextInt())<SUB>10</SUB>>", "75": "<(nextInt,nextInt())<SUB>10</SUB>>", "77": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "79": "<(IDENTIFIER,Arrays,sort(cottages))<SUB>12</SUB>>", "81": "<(LOCAL,int ans: int)<SUB>14</SUB>>", "83": "<(IDENTIFIER,ans,int ans = 2)<SUB>14</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; cottages.length); i++),for (int i = 1; Some(i &lt; cottages.length); i++))<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>16</SUB>>", "89": "<(LITERAL,1,int i = 1)<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,i &lt; cottages.length)<SUB>16</SUB>>", "93": "<(IDENTIFIER,cottages,i &lt; cottages.length)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,double diff = cottages[i].x - cottages[i - 1].x - cottages[i - 1].a / 2 - cottages[i].a / 2)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.subtraction,cottages[i].x - cottages[i - 1].x - cottages[i - 1].a / 2 - cottages[i].a / 2)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.subtraction,cottages[i].x - cottages[i - 1].x)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,cottages[i])<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,cottages[i].x - cottages[i - 1].x)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,cottages[i - 1].x)<SUB>17</SUB>>", "111": "<(IDENTIFIER,cottages,cottages[i].x - cottages[i - 1].x)<SUB>17</SUB>>", "113": "<(IDENTIFIER,i,i - 1)<SUB>17</SUB>>", "115": "<(FIELD_IDENTIFIER,x,x)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.fieldAccess,cottages[i - 1].a)<SUB>17</SUB>>", "119": "<(IDENTIFIER,cottages,cottages[i - 1].a / 2)<SUB>17</SUB>>", "121": "<(IDENTIFIER,i,i - 1)<SUB>17</SUB>>", "123": "<(FIELD_IDENTIFIER,a,a)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.division,cottages[i].a / 2)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,cottages[i])<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,cottages[i].a / 2)<SUB>17</SUB>>", "131": "<(LITERAL,2,cottages[i].a / 2)<SUB>17</SUB>>", "133": "<(IDENTIFIER,ans,ans = Math.abs(diff - t) &lt; e ? ans + 1 : diff - t &lt; -e ? ans : ans + 2)<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.lessThan,Math.abs(diff - t) &lt; e)<SUB>18</SUB>>", "137": "<(IDENTIFIER,Math,Math.abs(diff - t))<SUB>18</SUB>>", "139": "<(IDENTIFIER,diff,diff - t)<SUB>18</SUB>>", "141": "<(IDENTIFIER,e,Math.abs(diff - t) &lt; e)<SUB>18</SUB>>", "143": "<(IDENTIFIER,ans,ans + 1)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.conditional,diff - t &lt; -e ? ans : ans + 2)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.subtraction,diff - t)<SUB>18</SUB>>", "149": "<(IDENTIFIER,t,diff - t)<SUB>18</SUB>>", "151": "<(IDENTIFIER,e,-e)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.addition,ans + 2)<SUB>18</SUB>>", "155": "<(LITERAL,2,ans + 2)<SUB>18</SUB>>", "157": "<(IDENTIFIER,out,print(ans))<SUB>21</SUB>>", "159": "<(close,close())<SUB>22</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}