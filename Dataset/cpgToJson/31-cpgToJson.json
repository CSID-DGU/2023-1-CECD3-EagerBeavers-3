{"edges": [["29", "30"], ["29", "31"], ["29", "136"], ["29", "137"], ["29", "138"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "39"], ["31", "40"], ["31", "41"], ["31", "42"], ["31", "46"], ["31", "50"], ["31", "6"], ["31", "8"], ["31", "54"], ["31", "57"], ["31", "58"], ["31", "61"], ["31", "10"], ["31", "12"], ["31", "62"], ["31", "65"], ["31", "66"], ["31", "69"], ["31", "70"], ["31", "73"], ["31", "76"], ["31", "79"], ["31", "82"], ["31", "87"], ["31", "14"], ["31", "92"], ["31", "95"], ["31", "96"], ["31", "131"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "38"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["57", "5"], ["58", "59"], ["58", "60"], ["61", "7"], ["62", "63"], ["62", "64"], ["65", "9"], ["66", "67"], ["66", "68"], ["69", "11"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "85"], ["82", "86"], ["87", "88"], ["87", "89"], ["87", "90"], ["87", "91"], ["92", "93"], ["92", "94"], ["95", "13"], ["96", "97"], ["96", "101"], ["97", "98"], ["97", "100"], ["98", "99"], ["101", "102"], ["101", "120"], ["102", "103"], ["102", "107"], ["102", "113"], ["103", "104"], ["103", "106"], ["104", "105"], ["107", "108"], ["107", "109"], ["107", "110"], ["107", "111"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "116"], ["114", "117"], ["114", "118"], ["118", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "130"], ["123", "124"], ["123", "128"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["32", "38"], ["35", "44"], ["42", "48"], ["46", "52"], ["50", "56"], ["54", "57"], ["57", "60"], ["58", "61"], ["61", "64"], ["62", "65"], ["65", "68"], ["66", "69"], ["69", "70"], ["70", "73"], ["73", "76"], ["76", "79"], ["79", "82"], ["82", "87"], ["87", "94"], ["92", "95"], ["95", "98"], ["131", "138"], ["34", "32"], ["36", "35"], ["44", "42"], ["48", "46"], ["52", "50"], ["56", "54"], ["60", "58"], ["64", "62"], ["68", "66"], ["94", "92"], ["97", "104"], ["97", "134"], ["132", "131"], ["38", "36"], ["98", "97"], ["120", "98"], ["134", "132"], ["103", "111"], ["103", "118"], ["107", "126"], ["122", "120"], ["104", "103"], ["111", "107"], ["114", "126"], ["123", "122"], ["118", "114"], ["124", "128"], ["128", "123"], ["126", "124"], ["29", "34"], ["30", "138"], ["32", "138"], ["35", "138"], ["35", "138"], ["42", "138"], ["46", "138"], ["52", "138"], ["50", "138"], ["50", "138"], ["54", "138"], ["58", "138"], ["61", "138"], ["62", "138"], ["66", "138"], ["69", "138"], ["73", "138"], ["73", "138"], ["76", "138"], ["79", "138"], ["79", "138"], ["82", "138"], ["82", "138"], ["82", "138"], ["87", "138"], ["87", "138"], ["87", "138"], ["87", "138"], ["92", "138"], ["95", "138"], ["98", "138"], ["97", "138"], ["97", "138"], ["131", "138"], ["131", "138"], ["131", "138"], ["103", "138"], ["103", "138"], ["114", "138"], ["114", "138"], ["118", "138"], ["114", "138"], ["114", "138"], ["107", "138"], ["107", "138"], ["111", "138"], ["107", "138"], ["107", "138"], ["126", "138"], ["123", "138"], ["128", "138"], ["123", "138"], ["122", "138"], ["120", "138"], ["120", "138"], ["29", "30"], ["29", "32"], ["44", "42"], ["48", "46"], ["52", "50"], ["29", "54"], ["29", "58"], ["29", "62"], ["29", "66"], ["29", "92"], ["32", "35"], ["29", "35"], ["54", "57"], ["29", "57"], ["58", "61"], ["29", "61"], ["62", "65"], ["29", "65"], ["66", "69"], ["29", "69"], ["57", "70"], ["29", "70"], ["70", "73"], ["29", "73"], ["42", "73"], ["61", "76"], ["29", "76"], ["76", "79"], ["29", "79"], ["46", "79"], ["29", "82"], ["65", "82"], ["73", "82"], ["82", "87"], ["29", "87"], ["69", "87"], ["79", "87"], ["92", "95"], ["29", "95"], ["95", "131"], ["120", "131"], ["29", "131"], ["35", "44"], ["29", "44"], ["44", "48"], ["29", "48"], ["48", "52"], ["29", "52"], ["98", "97"], ["29", "97"], ["50", "98"], ["29", "98"], ["95", "120"], ["29", "120"], ["123", "120"], ["123", "120"], ["104", "103"], ["29", "103"], ["87", "107"], ["114", "107"], ["29", "107"], ["79", "107"], ["87", "107"], ["126", "107"], ["111", "107"], ["123", "122"], ["123", "122"], ["29", "122"], ["52", "104"], ["118", "104"], ["111", "104"], ["29", "104"], ["104", "111"], ["29", "111"], ["87", "114"], ["107", "114"], ["29", "114"], ["73", "114"], ["82", "114"], ["128", "114"], ["118", "114"], ["124", "123"], ["124", "123"], ["128", "123"], ["104", "118"], ["29", "118"], ["29", "124"], ["126", "124"], ["82", "128"], ["114", "128"], ["29", "128"], ["87", "126"], ["107", "126"], ["29", "126"], ["97", "98"], ["97", "120"], ["97", "122"], ["97", "128"], ["97", "103"], ["97", "104"], ["97", "123"], ["97", "97"], ["97", "124"], ["97", "126"], ["103", "107"], ["103", "118"], ["103", "114"], ["103", "111"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "39": "<(LOCAL,int w: int)<SUB>3</SUB>>", "41": "<(LOCAL,int n: int)<SUB>3</SUB>>", "43": "<(IDENTIFIER,w,int w = nextInt())<SUB>3</SUB>>", "45": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "47": "<(IDENTIFIER,h,int h = nextInt())<SUB>3</SUB>>", "49": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "51": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "53": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "8": "<(LOCAL,TreeSet&lt;Integer&gt; hCuts: ANY)<SUB>4</SUB>>", "55": "<(IDENTIFIER,vCuts,ANY vCuts = new TreeSet&lt;&gt;())<SUB>4</SUB>>", "57": "<(&lt;init&gt;,new TreeSet&lt;&gt;())<SUB>4</SUB>>", "58": "<(&lt;operator&gt;.assignment,ANY hCuts = new TreeSet&lt;&gt;())<SUB>4</SUB>>", "60": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;())<SUB>4</SUB>>", "7": "<(IDENTIFIER,hCuts,new TreeSet&lt;&gt;())<SUB>4</SUB>>", "12": "<(LOCAL,TreeMap&lt;Integer, Integer&gt; hSegments: ANY)<SUB>5</SUB>>", "63": "<(IDENTIFIER,vSegments,ANY vSegments = new TreeMap&lt;&gt;())<SUB>5</SUB>>", "65": "<(&lt;init&gt;,new TreeMap&lt;&gt;())<SUB>5</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY hSegments = new TreeMap&lt;&gt;())<SUB>5</SUB>>", "68": "<(&lt;operator&gt;.alloc,new TreeMap&lt;&gt;())<SUB>5</SUB>>", "11": "<(IDENTIFIER,hSegments,new TreeMap&lt;&gt;())<SUB>5</SUB>>", "71": "<(IDENTIFIER,vCuts,add(0))<SUB>6</SUB>>", "73": "<(add,add(w))<SUB>6</SUB>>", "75": "<(IDENTIFIER,w,add(w))<SUB>6</SUB>>", "77": "<(IDENTIFIER,hCuts,add(0))<SUB>7</SUB>>", "79": "<(add,add(h))<SUB>7</SUB>>", "81": "<(IDENTIFIER,h,add(h))<SUB>7</SUB>>", "83": "<(IDENTIFIER,this,insert(vSegments, w, 1))<SUB>8</SUB>>", "85": "<(IDENTIFIER,w,insert(vSegments, w, 1))<SUB>8</SUB>>", "87": "<(insert,insert(hSegments, h, 1))<SUB>9</SUB>>", "89": "<(IDENTIFIER,hSegments,insert(hSegments, h, 1))<SUB>9</SUB>>", "91": "<(LITERAL,1,insert(hSegments, h, 1))<SUB>9</SUB>>", "92": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>10</SUB>>", "94": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>10</SUB>>", "13": "<(IDENTIFIER,sb,new StringBuilder())<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.greaterThan,n-- &gt; 0)<SUB>11</SUB>>", "99": "<(IDENTIFIER,n,n--)<SUB>11</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "103": "<(equals,equals(&quot;H&quot;))<SUB>13</SUB>>", "105": "<(IDENTIFIER,sc,next())<SUB>13</SUB>>", "107": "<(cut,cut(hCuts, hSegments, sc.nextInt()))<SUB>14</SUB>>", "109": "<(IDENTIFIER,hCuts,cut(hCuts, hSegments, sc.nextInt()))<SUB>14</SUB>>", "111": "<(nextInt,nextInt())<SUB>14</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "115": "<(IDENTIFIER,this,cut(vCuts, vSegments, sc.nextInt()))<SUB>16</SUB>>", "117": "<(IDENTIFIER,vSegments,cut(vCuts, vSegments, sc.nextInt()))<SUB>16</SUB>>", "119": "<(IDENTIFIER,sc,nextInt())<SUB>16</SUB>>", "121": "<(IDENTIFIER,sb,append(1l * hSegments.lastKey() * vSegments.lastKey() + &quot;\\n&quot;))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.multiplication,1l * hSegments.lastKey() * vSegments.lastKey())<SUB>17</SUB>>", "125": "<(LITERAL,1l,1l * hSegments.lastKey())<SUB>17</SUB>>", "127": "<(IDENTIFIER,hSegments,lastKey())<SUB>17</SUB>>", "129": "<(IDENTIFIER,vSegments,lastKey())<SUB>17</SUB>>", "131": "<(println,System.out.println(sb))<SUB>19</SUB>>", "133": "<(IDENTIFIER,System,System.out.println(sb))<SUB>19</SUB>>", "135": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>19</SUB>>", "137": "<(MODIFIER,STATIC)>"}}