{"edges": [["21", "23"], ["21", "263"], ["21", "264"], ["21", "265"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "33"], ["23", "34"], ["23", "38"], ["23", "258"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "43"], ["38", "46"], ["38", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "54"], ["48", "55"], ["48", "59"], ["48", "81"], ["48", "210"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["74", "80"], ["75", "76"], ["75", "77"], ["78", "79"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "97"], ["91", "108"], ["91", "146"], ["91", "147"], ["91", "151"], ["91", "183"], ["91", "205"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "140"], ["112", "145"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "126"], ["113", "128"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["147", "148"], ["147", "149"], ["149", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "164"], ["151", "166"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["167", "168"], ["167", "179"], ["168", "169"], ["168", "176"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["179", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "191"], ["183", "193"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "218"], ["210", "220"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["218", "219"], ["220", "221"], ["220", "255"], ["221", "222"], ["221", "223"], ["221", "226"], ["221", "232"], ["221", "234"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["228", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "251"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "250"], ["246", "247"], ["247", "248"], ["247", "249"], ["251", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["24", "27"], ["27", "30"], ["28", "31"], ["31", "36"], ["34", "40"], ["258", "265"], ["26", "24"], ["30", "28"], ["36", "34"], ["40", "43"], ["43", "52"], ["43", "261"], ["46", "43"], ["259", "258"], ["50", "57"], ["55", "61"], ["261", "259"], ["52", "50"], ["57", "55"], ["61", "64"], ["64", "71"], ["64", "83"], ["67", "64"], ["83", "86"], ["86", "95"], ["86", "212"], ["89", "86"], ["212", "215"], ["215", "223"], ["215", "46"], ["218", "215"], ["70", "67"], ["93", "98"], ["147", "153"], ["205", "89"], ["255", "218"], ["71", "77"], ["95", "93"], ["98", "103"], ["98", "109"], ["109", "115"], ["109", "149"], ["149", "147"], ["153", "161"], ["156", "172"], ["156", "185"], ["164", "161"], ["185", "188"], ["188", "195"], ["188", "206"], ["191", "188"], ["206", "205"], ["223", "229"], ["226", "238"], ["226", "255"], ["232", "229"], ["75", "78"], ["78", "70"], ["102", "89"], ["140", "89"], ["158", "156"], ["194", "191"], ["228", "226"], ["235", "247"], ["77", "75"], ["103", "102"], ["115", "123"], ["118", "130"], ["118", "141"], ["126", "123"], ["141", "140"], ["159", "158"], ["168", "180"], ["168", "164"], ["195", "201"], ["198", "194"], ["229", "228"], ["237", "235"], ["243", "252"], ["243", "232"], ["120", "118"], ["129", "126"], ["161", "159"], ["169", "176"], ["176", "168"], ["180", "164"], ["199", "198"], ["238", "237"], ["245", "243"], ["252", "232"], ["121", "120"], ["130", "136"], ["133", "129"], ["170", "169"], ["201", "199"], ["246", "245"], ["123", "121"], ["134", "133"], ["172", "170"], ["247", "246"], ["136", "134"], ["21", "26"], ["22", "265"], ["24", "265"], ["27", "265"], ["28", "265"], ["31", "265"], ["36", "265"], ["34", "265"], ["34", "265"], ["40", "265"], ["43", "265"], ["43", "265"], ["43", "265"], ["258", "265"], ["258", "265"], ["258", "265"], ["52", "265"], ["50", "265"], ["50", "265"], ["55", "265"], ["55", "265"], ["55", "265"], ["212", "265"], ["215", "265"], ["215", "265"], ["215", "265"], ["46", "265"], ["223", "265"], ["226", "265"], ["228", "265"], ["226", "265"], ["226", "265"], ["255", "265"], ["218", "265"], ["235", "265"], ["235", "265"], ["243", "265"], ["243", "265"], ["252", "265"], ["232", "265"], ["93", "265"], ["95", "265"], ["93", "265"], ["93", "265"], ["98", "265"], ["109", "265"], ["147", "265"], ["147", "265"], ["158", "265"], ["156", "265"], ["156", "265"], ["185", "265"], ["188", "265"], ["188", "265"], ["188", "265"], ["205", "265"], ["205", "265"], ["205", "265"], ["198", "265"], ["194", "265"], ["194", "265"], ["191", "265"], ["168", "265"], ["168", "265"], ["168", "265"], ["180", "265"], ["164", "265"], ["115", "265"], ["118", "265"], ["120", "265"], ["118", "265"], ["118", "265"], ["140", "265"], ["140", "265"], ["140", "265"], ["129", "265"], ["129", "265"], ["126", "265"], ["102", "265"], ["102", "265"], ["89", "265"], ["70", "265"], ["75", "265"], ["78", "265"], ["78", "265"], ["70", "265"], ["67", "265"], ["21", "22"], ["21", "24"], ["21", "28"], ["36", "34"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "40"], ["31", "258"], ["255", "258"], ["21", "258"], ["27", "36"], ["21", "36"], ["40", "43"], ["46", "43"], ["21", "43"], ["34", "43"], ["43", "46"], ["21", "46"], ["52", "50"], ["57", "55"], ["21", "61"], ["21", "83"], ["21", "212"], ["36", "52"], ["95", "52"], ["21", "52"], ["50", "57"], ["21", "57"], ["61", "64"], ["67", "64"], ["21", "64"], ["57", "64"], ["64", "67"], ["21", "67"], ["75", "70"], ["78", "70"], ["21", "70"], ["83", "86"], ["89", "86"], ["21", "86"], ["64", "86"], ["98", "89"], ["161", "89"], ["201", "89"], ["123", "89"], ["21", "89"], ["95", "93"], ["149", "147"], ["212", "215"], ["218", "215"], ["21", "215"], ["86", "215"], ["215", "218"], ["21", "218"], ["21", "153"], ["21", "185"], ["55", "205"], ["228", "205"], ["194", "205"], ["140", "205"], ["70", "205"], ["109", "205"], ["176", "205"], ["21", "205"], ["21", "223"], ["31", "255"], ["235", "255"], ["252", "255"], ["21", "255"], ["21", "75"], ["21", "80"], ["52", "95"], ["21", "95"], ["86", "98"], ["21", "98"], ["93", "109"], ["21", "109"], ["21", "149"], ["153", "156"], ["164", "156"], ["21", "156"], ["158", "156"], ["169", "164"], ["21", "164"], ["185", "188"], ["191", "188"], ["21", "188"], ["147", "188"], ["180", "188"], ["198", "191"], ["21", "191"], ["223", "226"], ["232", "226"], ["21", "226"], ["228", "226"], ["243", "232"], ["21", "232"], ["75", "78"], ["21", "78"], ["55", "102"], ["21", "102"], ["21", "115"], ["55", "140"], ["228", "140"], ["205", "140"], ["129", "140"], ["70", "140"], ["109", "140"], ["21", "140"], ["55", "158"], ["198", "158"], ["169", "158"], ["120", "158"], ["55", "194"], ["228", "194"], ["205", "194"], ["140", "194"], ["70", "194"], ["198", "194"], ["198", "194"], ["55", "228"], ["246", "228"], ["205", "228"], ["140", "228"], ["70", "228"], ["31", "235"], ["255", "235"], ["252", "235"], ["21", "235"], ["237", "235"], ["237", "235"], ["115", "118"], ["126", "118"], ["21", "118"], ["120", "118"], ["133", "126"], ["21", "126"], ["169", "168"], ["169", "168"], ["176", "168"], ["176", "168"], ["169", "180"], ["21", "180"], ["55", "198"], ["158", "198"], ["188", "198"], ["21", "198"], ["55", "237"], ["228", "237"], ["226", "237"], ["21", "237"], ["237", "243"], ["21", "243"], ["245", "243"], ["245", "243"], ["55", "120"], ["158", "120"], ["198", "120"], ["133", "120"], ["55", "129"], ["228", "129"], ["205", "129"], ["140", "129"], ["70", "129"], ["133", "129"], ["133", "129"], ["98", "161"], ["172", "161"], ["21", "161"], ["55", "169"], ["158", "169"], ["156", "169"], ["21", "169"], ["109", "176"], ["21", "176"], ["246", "245"], ["21", "245"], ["235", "252"], ["21", "252"], ["55", "133"], ["120", "133"], ["118", "133"], ["21", "133"], ["161", "201"], ["21", "201"], ["55", "246"], ["237", "246"], ["98", "123"], ["136", "123"], ["21", "123"], ["161", "172"], ["21", "172"], ["123", "136"], ["21", "136"], ["43", "64"], ["43", "57"], ["43", "52"], ["43", "215"], ["43", "50"], ["43", "212"], ["43", "43"], ["43", "61"], ["43", "86"], ["43", "46"], ["43", "83"], ["43", "55"], ["64", "77"], ["64", "64"], ["64", "75"], ["64", "67"], ["64", "70"], ["64", "71"], ["64", "78"], ["86", "98"], ["86", "95"], ["86", "93"], ["86", "86"], ["86", "89"], ["215", "215"], ["215", "226"], ["215", "228"], ["215", "255"], ["215", "223"], ["215", "229"], ["215", "218"], ["98", "102"], ["98", "103"], ["98", "109"], ["109", "115"], ["109", "188"], ["109", "120"], ["109", "161"], ["109", "149"], ["109", "185"], ["109", "121"], ["109", "153"], ["109", "206"], ["109", "118"], ["109", "205"], ["109", "158"], ["109", "141"], ["109", "123"], ["109", "159"], ["109", "140"], ["109", "147"], ["109", "156"], ["156", "169"], ["156", "161"], ["156", "168"], ["156", "170"], ["156", "164"], ["156", "158"], ["156", "159"], ["156", "176"], ["156", "156"], ["156", "172"], ["188", "188"], ["188", "198"], ["188", "191"], ["188", "195"], ["188", "194"], ["188", "201"], ["188", "199"], ["226", "232"], ["226", "226"], ["226", "243"], ["226", "245"], ["226", "228"], ["226", "247"], ["226", "238"], ["226", "246"], ["226", "235"], ["226", "237"], ["226", "229"], ["118", "120"], ["118", "136"], ["118", "121"], ["118", "129"], ["118", "134"], ["118", "130"], ["118", "118"], ["118", "123"], ["118", "126"], ["118", "133"], ["168", "180"], ["243", "252"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY input = new Scan())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scan())<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scan())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,StringBuilder ans = new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "5": "<(IDENTIFIER,ans,new StringBuilder(&quot;&quot;))<SUB>3</SUB>>", "33": "<(LOCAL,int test: int)<SUB>4</SUB>>", "35": "<(IDENTIFIER,test,int test = scanInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,input,scanInt())<SUB>4</SUB>>", "39": "<(LOCAL,int tt: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,tt,int tt = 1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.lessEqualsThan,tt &lt;= test)<SUB>5</SUB>>", "45": "<(IDENTIFIER,test,tt &lt;= test)<SUB>5</SUB>>", "47": "<(IDENTIFIER,tt,tt++)<SUB>5</SUB>>", "49": "<(LOCAL,int n: int)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,int n = scanInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,input,scanInt())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,ANY arrli = new ArrayList[n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new ArrayList[n])>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,arrli[i])<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,arrli[i] = new ArrayList&lt;&gt;())<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "77": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>10</SUB>>", "79": "<(IDENTIFIER,$obj2,new ArrayList&lt;&gt;())>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int tmp = scanInt())<SUB>14</SUB>>", "95": "<(scanInt,scanInt())<SUB>14</SUB>>", "97": "<(CONTROL_STRUCTURE,if (i == 0),if (i == 0))<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i == 0)<SUB>15</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,arrli[0])<SUB>16</SUB>>", "105": "<(LITERAL,0,add(1))<SUB>16</SUB>>", "107": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.equals,tmp == 1)<SUB>19</SUB>>", "111": "<(LITERAL,1,tmp == 1)<SUB>19</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; arrli[i - 1].size()); j++),for (int j = 0; Some(j &lt; arrli[i - 1].size()); j++))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>20</SUB>>", "117": "<(LITERAL,0,int j = 0)<SUB>20</SUB>>", "119": "<(IDENTIFIER,j,j &lt; arrli[i - 1].size())<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,arrli[i - 1])<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>20</SUB>>", "125": "<(LITERAL,1,i - 1)<SUB>20</SUB>>", "127": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "129": "<(add,add(arrli[i - 1].get(j)))<SUB>21</SUB>>", "131": "<(IDENTIFIER,arrli,add(arrli[i - 1].get(j)))<SUB>21</SUB>>", "133": "<(get,get(j))<SUB>21</SUB>>", "135": "<(IDENTIFIER,arrli,get(j))<SUB>21</SUB>>", "137": "<(IDENTIFIER,i,i - 1)<SUB>21</SUB>>", "139": "<(IDENTIFIER,j,get(j))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,arrli[i])<SUB>23</SUB>>", "143": "<(IDENTIFIER,i,add(tmp))<SUB>23</SUB>>", "145": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.assignment,int indx = -1)<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; arrli[i - 1].size()); j++),for (int j = 0; Some(j &lt; arrli[i - 1].size()); j++))<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "155": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "157": "<(IDENTIFIER,j,j &lt; arrli[i - 1].size())<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,arrli[i - 1])<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>27</SUB>>", "163": "<(LITERAL,1,i - 1)<SUB>27</SUB>>", "165": "<(IDENTIFIER,j,j++)<SUB>27</SUB>>", "167": "<(CONTROL_STRUCTURE,if (arrli[i - 1].get(j) == tmp - 1),if (arrli[i - 1].get(j) == tmp - 1))<SUB>28</SUB>>", "169": "<(get,get(j))<SUB>28</SUB>>", "171": "<(IDENTIFIER,arrli,get(j))<SUB>28</SUB>>", "173": "<(IDENTIFIER,i,i - 1)<SUB>28</SUB>>", "175": "<(IDENTIFIER,j,get(j))<SUB>28</SUB>>", "177": "<(IDENTIFIER,tmp,tmp - 1)<SUB>28</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "181": "<(IDENTIFIER,indx,indx = j)<SUB>29</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; indx); j++),for (int j = 0; Some(j &lt; indx); j++))<SUB>32</SUB>>", "185": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>32</SUB>>", "187": "<(LITERAL,0,int j = 0)<SUB>32</SUB>>", "189": "<(IDENTIFIER,j,j &lt; indx)<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,j++)<SUB>32</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,arrli[i])<SUB>33</SUB>>", "197": "<(IDENTIFIER,i,add(arrli[i - 1].get(j)))<SUB>33</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,arrli[i - 1])<SUB>33</SUB>>", "201": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>33</SUB>>", "203": "<(LITERAL,1,i - 1)<SUB>33</SUB>>", "205": "<(add,add(tmp))<SUB>35</SUB>>", "207": "<(IDENTIFIER,arrli,add(tmp))<SUB>35</SUB>>", "209": "<(IDENTIFIER,tmp,add(tmp))<SUB>35</SUB>>", "211": "<(LOCAL,int i: int)<SUB>37</SUB>>", "213": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>37</SUB>>", "217": "<(IDENTIFIER,n,i &lt; n)<SUB>37</SUB>>", "219": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "221": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; arrli[i].size()); j++),for (int j = 0; Some(j &lt; arrli[i].size()); j++))<SUB>38</SUB>>", "223": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>38</SUB>>", "225": "<(LITERAL,0,int j = 0)<SUB>38</SUB>>", "227": "<(IDENTIFIER,j,j &lt; arrli[i].size())<SUB>38</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,arrli[i])<SUB>38</SUB>>", "231": "<(IDENTIFIER,i,size())<SUB>38</SUB>>", "233": "<(IDENTIFIER,j,j++)<SUB>38</SUB>>", "235": "<(append,append(arrli[i].get(j)))<SUB>39</SUB>>", "237": "<(get,get(j))<SUB>39</SUB>>", "239": "<(IDENTIFIER,arrli,get(j))<SUB>39</SUB>>", "241": "<(IDENTIFIER,j,get(j))<SUB>39</SUB>>", "243": "<(&lt;operator&gt;.notEquals,j != arrli[i].size() - 1)<SUB>40</SUB>>", "245": "<(&lt;operator&gt;.subtraction,arrli[i].size() - 1)<SUB>40</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,arrli[i])<SUB>40</SUB>>", "249": "<(IDENTIFIER,i,size())<SUB>40</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "253": "<(IDENTIFIER,ans,ans.append(&quot;.&quot;))<SUB>41</SUB>>", "255": "<(append,ans.append(&quot;\\n&quot;))<SUB>44</SUB>>", "257": "<(LITERAL,&quot;\\n&quot;,ans.append(&quot;\\n&quot;))<SUB>44</SUB>>", "259": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "261": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "263": "<(MODIFIER,PUBLIC)>", "265": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}