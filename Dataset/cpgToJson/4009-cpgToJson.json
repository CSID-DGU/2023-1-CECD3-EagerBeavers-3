{"edges": [["22", "24"], ["22", "279"], ["22", "280"], ["22", "281"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "65"], ["24", "69"], ["24", "70"], ["24", "74"], ["24", "75"], ["24", "76"], ["24", "77"], ["24", "80"], ["24", "83"], ["24", "86"], ["24", "145"], ["24", "146"], ["24", "154"], ["24", "155"], ["24", "164"], ["24", "165"], ["24", "172"], ["24", "173"], ["24", "176"], ["24", "274"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "100"], ["96", "103"], ["96", "104"], ["96", "110"], ["96", "111"], ["96", "117"], ["97", "98"], ["97", "99"], ["100", "7"], ["100", "101"], ["101", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["115", "116"], ["117", "118"], ["117", "121"], ["117", "127"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "126"], ["122", "123"], ["122", "124"], ["124", "125"], ["127", "128"], ["128", "129"], ["128", "132"], ["128", "138"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "137"], ["133", "134"], ["133", "135"], ["135", "136"], ["138", "139"], ["139", "140"], ["139", "144"], ["140", "141"], ["140", "142"], ["142", "143"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["148", "151"], ["148", "152"], ["148", "153"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["157", "160"], ["157", "161"], ["157", "162"], ["157", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["167", "170"], ["167", "171"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "184"], ["176", "186"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["186", "188"], ["186", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["193", "198"], ["193", "201"], ["193", "203"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["201", "202"], ["203", "204"], ["203", "205"], ["203", "208"], ["203", "211"], ["203", "213"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "215"], ["213", "224"], ["213", "229"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "237"], ["229", "239"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["239", "240"], ["239", "241"], ["239", "248"], ["239", "253"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "273"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "272"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["65", "72"], ["70", "77"], ["77", "80"], ["80", "83"], ["83", "88"], ["146", "157"], ["155", "167"], ["165", "173"], ["173", "178"], ["274", "281"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["67", "65"], ["72", "70"], ["88", "91"], ["91", "99"], ["91", "148"], ["94", "91"], ["148", "146"], ["157", "155"], ["167", "165"], ["178", "181"], ["181", "190"], ["181", "277"], ["184", "181"], ["275", "274"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["97", "101"], ["100", "108"], ["104", "115"], ["111", "118"], ["188", "195"], ["277", "275"], ["32", "30"], ["35", "33"], ["99", "97"], ["101", "100"], ["106", "104"], ["113", "111"], ["118", "124"], ["118", "129"], ["121", "94"], ["190", "188"], ["195", "198"], ["198", "205"], ["198", "184"], ["201", "198"], ["37", "35"], ["108", "106"], ["115", "113"], ["122", "121"], ["205", "208"], ["208", "219"], ["208", "201"], ["211", "208"], ["124", "122"], ["129", "135"], ["129", "142"], ["132", "94"], ["215", "225"], ["133", "132"], ["139", "94"], ["217", "215"], ["225", "211"], ["225", "231"], ["231", "234"], ["234", "244"], ["234", "211"], ["237", "234"], ["135", "133"], ["140", "139"], ["218", "217"], ["241", "249"], ["253", "237"], ["142", "140"], ["219", "218"], ["243", "241"], ["249", "237"], ["249", "256"], ["255", "253"], ["244", "243"], ["256", "263"], ["257", "255"], ["258", "257"], ["260", "258"], ["261", "268"], ["266", "260"], ["262", "261"], ["267", "266"], ["263", "262"], ["268", "267"], ["22", "27"], ["23", "281"], ["25", "281"], ["30", "281"], ["33", "281"], ["33", "281"], ["33", "281"], ["28", "281"], ["39", "281"], ["43", "281"], ["42", "281"], ["42", "281"], ["46", "281"], ["55", "281"], ["57", "281"], ["55", "281"], ["53", "281"], ["53", "281"], ["60", "281"], ["65", "281"], ["70", "281"], ["70", "281"], ["77", "281"], ["80", "281"], ["83", "281"], ["88", "281"], ["91", "281"], ["91", "281"], ["146", "281"], ["148", "281"], ["146", "281"], ["146", "281"], ["155", "281"], ["157", "281"], ["157", "281"], ["157", "281"], ["157", "281"], ["155", "281"], ["155", "281"], ["165", "281"], ["167", "281"], ["167", "281"], ["167", "281"], ["165", "281"], ["165", "281"], ["173", "281"], ["178", "281"], ["181", "281"], ["181", "281"], ["181", "281"], ["274", "281"], ["274", "281"], ["274", "281"], ["188", "281"], ["188", "281"], ["188", "281"], ["195", "281"], ["198", "281"], ["198", "281"], ["198", "281"], ["184", "281"], ["205", "281"], ["208", "281"], ["208", "281"], ["208", "281"], ["201", "281"], ["215", "281"], ["215", "281"], ["225", "281"], ["225", "281"], ["231", "281"], ["234", "281"], ["234", "281"], ["234", "281"], ["241", "281"], ["241", "281"], ["249", "281"], ["249", "281"], ["262", "281"], ["261", "281"], ["261", "281"], ["260", "281"], ["260", "281"], ["258", "281"], ["257", "281"], ["255", "281"], ["253", "281"], ["253", "281"], ["237", "281"], ["211", "281"], ["97", "281"], ["101", "281"], ["100", "281"], ["100", "281"], ["104", "281"], ["113", "281"], ["115", "281"], ["113", "281"], ["111", "281"], ["111", "281"], ["118", "281"], ["118", "281"], ["129", "281"], ["129", "281"], ["139", "281"], ["139", "281"], ["139", "281"], ["132", "281"], ["132", "281"], ["132", "281"], ["121", "281"], ["121", "281"], ["121", "281"], ["94", "281"], ["257", "281"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["67", "65"], ["72", "70"], ["22", "77"], ["22", "80"], ["22", "83"], ["148", "146"], ["148", "146"], ["148", "146"], ["148", "146"], ["148", "146"], ["157", "155"], ["157", "155"], ["157", "155"], ["157", "155"], ["157", "155"], ["157", "155"], ["167", "165"], ["167", "165"], ["167", "165"], ["167", "165"], ["22", "173"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "88"], ["22", "178"], ["173", "274"], ["253", "274"], ["22", "274"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["62", "67"], ["22", "67"], ["67", "72"], ["22", "72"], ["88", "91"], ["94", "91"], ["22", "91"], ["72", "91"], ["91", "94"], ["22", "94"], ["22", "97"], ["106", "104"], ["106", "104"], ["113", "111"], ["113", "111"], ["22", "148"], ["91", "148"], ["77", "148"], ["124", "148"], ["80", "148"], ["135", "148"], ["83", "148"], ["142", "148"], ["148", "157"], ["22", "157"], ["60", "157"], ["121", "157"], ["65", "157"], ["132", "157"], ["53", "157"], ["148", "157"], ["148", "157"], ["157", "167"], ["22", "167"], ["70", "167"], ["139", "167"], ["157", "167"], ["148", "167"], ["178", "181"], ["184", "181"], ["22", "181"], ["167", "181"], ["190", "181"], ["190", "184"], ["22", "184"], ["190", "188"], ["190", "188"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["97", "100"], ["22", "100"], ["101", "100"], ["104", "121"], ["22", "121"], ["22", "195"], ["43", "101"], ["22", "101"], ["55", "106"], ["113", "106"], ["22", "106"], ["108", "106"], ["106", "113"], ["22", "113"], ["115", "113"], ["111", "118"], ["22", "118"], ["181", "190"], ["22", "190"], ["181", "190"], ["195", "198"], ["201", "198"], ["22", "198"], ["157", "198"], ["198", "201"], ["22", "201"], ["22", "205"], ["100", "108"], ["22", "108"], ["108", "115"], ["22", "115"], ["104", "132"], ["22", "132"], ["205", "208"], ["211", "208"], ["22", "208"], ["157", "208"], ["208", "211"], ["22", "211"], ["77", "124"], ["22", "124"], ["118", "129"], ["22", "129"], ["104", "139"], ["22", "139"], ["22", "231"], ["215", "225"], ["22", "225"], ["231", "234"], ["237", "234"], ["22", "234"], ["167", "234"], ["234", "237"], ["22", "237"], ["22", "253"], ["257", "253"], ["257", "253"], ["80", "135"], ["22", "135"], ["83", "142"], ["22", "142"], ["241", "249"], ["22", "249"], ["22", "255"], ["257", "255"], ["257", "255"], ["173", "257"], ["253", "257"], ["22", "257"], ["260", "257"], ["260", "257"], ["173", "258"], ["253", "258"], ["22", "258"], ["260", "258"], ["260", "258"], ["261", "260"], ["261", "260"], ["22", "261"], ["225", "261"], ["249", "261"], ["22", "262"], ["225", "262"], ["91", "94"], ["91", "115"], ["91", "113"], ["91", "104"], ["91", "97"], ["91", "91"], ["91", "101"], ["91", "118"], ["91", "100"], ["91", "108"], ["91", "111"], ["91", "99"], ["91", "106"], ["181", "188"], ["181", "198"], ["181", "181"], ["181", "195"], ["181", "190"], ["181", "184"], ["118", "121"], ["118", "129"], ["118", "122"], ["118", "124"], ["198", "198"], ["198", "208"], ["198", "201"], ["198", "205"], ["208", "225"], ["208", "215"], ["208", "208"], ["208", "217"], ["208", "211"], ["208", "218"], ["208", "219"], ["129", "132"], ["129", "139"], ["129", "142"], ["129", "140"], ["129", "135"], ["129", "133"], ["225", "231"], ["225", "234"], ["234", "244"], ["234", "243"], ["234", "249"], ["234", "237"], ["234", "234"], ["234", "241"], ["249", "257"], ["249", "261"], ["249", "256"], ["249", "262"], ["249", "255"], ["249", "267"], ["249", "258"], ["249", "268"], ["249", "260"], ["249", "253"], ["249", "263"], ["249", "266"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int t: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,t,int t = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[] aa = new int[n])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[n])>", "64": "<(LOCAL,int[] bb: int[])<SUB>7</SUB>>", "66": "<(IDENTIFIER,bb,int[] bb = new int[n])<SUB>7</SUB>>", "68": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "70": "<(&lt;operator&gt;.assignment,int[] cc = new int[n])<SUB>8</SUB>>", "72": "<(&lt;operator&gt;.alloc,new int[n])>", "74": "<(LOCAL,int na: int)<SUB>9</SUB>>", "76": "<(LOCAL,int nc: int)<SUB>9</SUB>>", "78": "<(IDENTIFIER,na,int na = 0)<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.assignment,int nb = 0)<SUB>9</SUB>>", "82": "<(LITERAL,0,int nb = 0)<SUB>9</SUB>>", "84": "<(IDENTIFIER,nc,int nc = 0)<SUB>9</SUB>>", "86": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "88": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "90": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "92": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "94": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "96": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "98": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "100": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>11</SUB>>", "101": "<(readLine,readLine())<SUB>11</SUB>>", "103": "<(LOCAL,int a: int)<SUB>12</SUB>>", "105": "<(IDENTIFIER,a,int a = parseInt(st.nextToken()))<SUB>12</SUB>>", "107": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>12</SUB>>", "109": "<(IDENTIFIER,st,nextToken())<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.assignment,int g = parseInt(st.nextToken()))<SUB>13</SUB>>", "113": "<(parseInt,parseInt(st.nextToken()))<SUB>13</SUB>>", "115": "<(nextToken,nextToken())<SUB>13</SUB>>", "117": "<(CONTROL_STRUCTURE,if (g == 1),if (g == 1))<SUB>14</SUB>>", "119": "<(IDENTIFIER,g,g == 1)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,aa[na++] = a)<SUB>15</SUB>>", "123": "<(IDENTIFIER,aa,aa[na++] = a)<SUB>15</SUB>>", "125": "<(IDENTIFIER,na,na++)<SUB>15</SUB>>", "127": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.equals,g == 2)<SUB>16</SUB>>", "131": "<(LITERAL,2,g == 2)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,bb[nb++])<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,nb++)<SUB>17</SUB>>", "137": "<(IDENTIFIER,a,bb[nb++] = a)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.assignment,cc[nc++] = a)<SUB>19</SUB>>", "141": "<(IDENTIFIER,cc,cc[nc++] = a)<SUB>19</SUB>>", "143": "<(IDENTIFIER,nc,nc++)<SUB>19</SUB>>", "145": "<(LOCAL,int[][][] dp: int[][][])<SUB>21</SUB>>", "147": "<(IDENTIFIER,dp,int[][][] dp = init(n, na, nb, nc))<SUB>21</SUB>>", "149": "<(IDENTIFIER,this,init(n, na, nb, nc))<SUB>21</SUB>>", "151": "<(IDENTIFIER,na,init(n, na, nb, nc))<SUB>21</SUB>>", "153": "<(IDENTIFIER,nc,init(n, na, nb, nc))<SUB>21</SUB>>", "155": "<(&lt;operator&gt;.assignment,int[][][] dab = solve2(aa, bb, t, na, nb))<SUB>22</SUB>>", "157": "<(solve2,solve2(aa, bb, t, na, nb))<SUB>22</SUB>>", "159": "<(IDENTIFIER,aa,solve2(aa, bb, t, na, nb))<SUB>22</SUB>>", "161": "<(IDENTIFIER,t,solve2(aa, bb, t, na, nb))<SUB>22</SUB>>", "163": "<(IDENTIFIER,nb,solve2(aa, bb, t, na, nb))<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.assignment,int[][] dc = solve1(cc, t, nc))<SUB>23</SUB>>", "167": "<(solve1,solve1(cc, t, nc))<SUB>23</SUB>>", "169": "<(IDENTIFIER,cc,solve1(cc, t, nc))<SUB>23</SUB>>", "171": "<(IDENTIFIER,nc,solve1(cc, t, nc))<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>24</SUB>>", "175": "<(LITERAL,0,int ans = 0)<SUB>24</SUB>>", "177": "<(LOCAL,int tab: int)<SUB>25</SUB>>", "179": "<(IDENTIFIER,tab,int tab = 0)<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.lessEqualsThan,tab &lt;= t)<SUB>25</SUB>>", "183": "<(IDENTIFIER,t,tab &lt;= t)<SUB>25</SUB>>", "185": "<(IDENTIFIER,tab,tab++)<SUB>25</SUB>>", "187": "<(LOCAL,int tc: int)<SUB>26</SUB>>", "189": "<(IDENTIFIER,tc,int tc = t - tab)<SUB>26</SUB>>", "191": "<(IDENTIFIER,t,t - tab)<SUB>26</SUB>>", "193": "<(CONTROL_STRUCTURE,for (int ma = 0; Some(ma &lt;= na); ma++),for (int ma = 0; Some(ma &lt;= na); ma++))<SUB>27</SUB>>", "195": "<(&lt;operator&gt;.assignment,int ma = 0)<SUB>27</SUB>>", "197": "<(LITERAL,0,int ma = 0)<SUB>27</SUB>>", "199": "<(IDENTIFIER,ma,ma &lt;= na)<SUB>27</SUB>>", "201": "<(&lt;operator&gt;.postIncrement,ma++)<SUB>27</SUB>>", "203": "<(CONTROL_STRUCTURE,for (int mb = 0; Some(mb &lt;= nb); mb++),for (int mb = 0; Some(mb &lt;= nb); mb++))<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.assignment,int mb = 0)<SUB>28</SUB>>", "207": "<(LITERAL,0,int mb = 0)<SUB>28</SUB>>", "209": "<(IDENTIFIER,mb,mb &lt;= nb)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,mb++)<SUB>28</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.assignment,int xab = dab[tab][ma][mb])<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dab[tab][ma][mb])<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dab[tab])<SUB>29</SUB>>", "221": "<(IDENTIFIER,tab,int xab = dab[tab][ma][mb])<SUB>29</SUB>>", "223": "<(IDENTIFIER,mb,int xab = dab[tab][ma][mb])<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.equals,xab == 0)<SUB>30</SUB>>", "227": "<(LITERAL,0,xab == 0)<SUB>30</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int mc = 0; Some(mc &lt;= nc); mc++),for (int mc = 0; Some(mc &lt;= nc); mc++))<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.assignment,int mc = 0)<SUB>32</SUB>>", "233": "<(LITERAL,0,int mc = 0)<SUB>32</SUB>>", "235": "<(IDENTIFIER,mc,mc &lt;= nc)<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,mc++)<SUB>32</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "241": "<(&lt;operator&gt;.assignment,int xc = dc[tc][mc])<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dc[tc][mc])<SUB>33</SUB>>", "245": "<(IDENTIFIER,dc,int xc = dc[tc][mc])<SUB>33</SUB>>", "247": "<(IDENTIFIER,mc,int xc = dc[tc][mc])<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.equals,xc == 0)<SUB>34</SUB>>", "251": "<(LITERAL,0,xc == 0)<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.assignment,ans = (int) ((ans + (long) xab * xc * dp[ma][mb][mc]) % MD))<SUB>36</SUB>>", "255": "<(&lt;operator&gt;.cast,(int) ((ans + (long) xab * xc * dp[ma][mb][mc]) % MD))<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.modulo,(ans + (long) xab * xc * dp[ma][mb][mc]) % MD)<SUB>36</SUB>>", "259": "<(IDENTIFIER,ans,ans + (long) xab * xc * dp[ma][mb][mc])<SUB>36</SUB>>", "261": "<(&lt;operator&gt;.multiplication,(long) xab * xc)<SUB>36</SUB>>", "263": "<(TYPE_REF,long,long)<SUB>36</SUB>>", "265": "<(IDENTIFIER,xc,(long) xab * xc)<SUB>36</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[ma][mb])<SUB>36</SUB>>", "269": "<(IDENTIFIER,dp,(long) xab * xc * dp[ma][mb][mc])<SUB>36</SUB>>", "271": "<(IDENTIFIER,mb,(long) xab * xc * dp[ma][mb][mc])<SUB>36</SUB>>", "273": "<(IDENTIFIER,MD,(ans + (long) xab * xc * dp[ma][mb][mc]) % MD)<SUB>36</SUB>>", "275": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "277": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "279": "<(MODIFIER,PUBLIC)>", "281": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}