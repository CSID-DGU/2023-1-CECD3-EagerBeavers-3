{"edges": [["21", "22"], ["21", "23"], ["21", "130"], ["21", "131"], ["21", "132"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "6"], ["23", "50"], ["23", "53"], ["23", "57"], ["23", "76"], ["23", "79"], ["23", "80"], ["23", "85"], ["23", "86"], ["23", "90"], ["23", "114"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["53", "5"], ["53", "54"], ["53", "56"], ["54", "55"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "119"], ["114", "124"], ["115", "116"], ["115", "117"], ["117", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["24", "31"], ["27", "43"], ["39", "48"], ["46", "52"], ["50", "54"], ["53", "59"], ["76", "82"], ["80", "88"], ["86", "92"], ["26", "24"], ["41", "39"], ["48", "46"], ["52", "50"], ["54", "53"], ["59", "62"], ["62", "69"], ["62", "76"], ["65", "62"], ["82", "80"], ["88", "86"], ["92", "95"], ["95", "103"], ["95", "117"], ["98", "95"], ["115", "122"], ["115", "128"], ["119", "132"], ["29", "36"], ["32", "27"], ["43", "41"], ["68", "65"], ["117", "115"], ["120", "119"], ["125", "132"], ["31", "29"], ["34", "32"], ["69", "74"], ["72", "68"], ["102", "110"], ["102", "98"], ["122", "120"], ["126", "125"], ["36", "34"], ["74", "72"], ["103", "102"], ["108", "117"], ["128", "126"], ["110", "108"], ["21", "26"], ["22", "132"], ["24", "132"], ["29", "132"], ["32", "132"], ["32", "132"], ["32", "132"], ["27", "132"], ["41", "132"], ["39", "132"], ["39", "132"], ["46", "132"], ["46", "132"], ["50", "132"], ["53", "132"], ["54", "132"], ["53", "132"], ["53", "132"], ["59", "132"], ["76", "132"], ["76", "132"], ["80", "132"], ["80", "132"], ["80", "132"], ["86", "132"], ["92", "132"], ["95", "132"], ["95", "132"], ["95", "132"], ["102", "132"], ["102", "132"], ["102", "132"], ["98", "132"], ["108", "132"], ["108", "132"], ["115", "132"], ["115", "132"], ["119", "132"], ["119", "132"], ["119", "132"], ["68", "132"], ["72", "132"], ["74", "132"], ["72", "132"], ["68", "132"], ["68", "132"], ["65", "132"], ["76", "132"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["21", "50"], ["76", "80"], ["88", "86"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["50", "53"], ["21", "53"], ["54", "53"], ["21", "59"], ["21", "76"], ["46", "76"], ["68", "76"], ["21", "92"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["39", "48"], ["21", "48"], ["43", "54"], ["21", "54"], ["59", "62"], ["65", "62"], ["21", "62"], ["48", "62"], ["62", "65"], ["21", "65"], ["72", "68"], ["72", "68"], ["21", "88"], ["92", "95"], ["98", "95"], ["21", "95"], ["62", "95"], ["95", "98"], ["21", "98"], ["86", "115"], ["108", "115"], ["21", "115"], ["117", "115"], ["115", "119"], ["21", "119"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["21", "117"], ["21", "125"], ["41", "72"], ["21", "72"], ["74", "72"], ["76", "102"], ["68", "102"], ["80", "102"], ["21", "102"], ["76", "108"], ["102", "108"], ["53", "74"], ["21", "74"], ["62", "68"], ["62", "72"], ["62", "69"], ["62", "74"], ["62", "65"], ["62", "62"], ["95", "102"], ["95", "103"], ["115", "120"], ["115", "122"], ["115", "128"], ["115", "119"], ["115", "125"], ["115", "126"], ["102", "98"], ["102", "110"], ["102", "95"], ["102", "108"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(in.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "45": "<(LOCAL,int[] nums: int[])<SUB>5</SUB>>", "47": "<(IDENTIFIER,nums,int[] nums = new int[n])<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.assignment,ANY tokenizer = new StringTokenizer(in.readLine(), &quot; &quot;))<SUB>6</SUB>>", "52": "<(&lt;operator&gt;.alloc,new StringTokenizer(in.readLine(), &quot; &quot;))<SUB>6</SUB>>", "5": "<(IDENTIFIER,tokenizer,new StringTokenizer(in.readLine(), &quot; &quot;))<SUB>6</SUB>>", "55": "<(IDENTIFIER,in,readLine())<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,nums[i] = parseInt(tokenizer.nextToken()))<SUB>9</SUB>>", "73": "<(IDENTIFIER,Integer,parseInt(tokenizer.nextToken()))<SUB>9</SUB>>", "75": "<(IDENTIFIER,tokenizer,nextToken())<SUB>9</SUB>>", "77": "<(IDENTIFIER,Arrays,sort(nums))<SUB>12</SUB>>", "79": "<(LOCAL,int min: int)<SUB>13</SUB>>", "81": "<(IDENTIFIER,min,int min = nums[0])<SUB>13</SUB>>", "83": "<(IDENTIFIER,nums,int min = nums[0])<SUB>13</SUB>>", "85": "<(LOCAL,int so: int)<SUB>14</SUB>>", "87": "<(IDENTIFIER,so,int so = -200)<SUB>14</SUB>>", "89": "<(LITERAL,200,-200)<SUB>14</SUB>>", "91": "<(LOCAL,int i: int)<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,int i = 1)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,if (nums[i] != min),if (nums[i] != min))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>16</SUB>>", "105": "<(IDENTIFIER,i,nums[i] != min)<SUB>16</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "109": "<(IDENTIFIER,so,so = nums[i])<SUB>17</SUB>>", "111": "<(IDENTIFIER,nums,so = nums[i])<SUB>17</SUB>>", "113": "<(CONTROL_STRUCTURE,break;,break;)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.notEquals,so != -200)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.minus,-200)<SUB>21</SUB>>", "119": "<(println,System.out.println(so))<SUB>22</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(so))<SUB>22</SUB>>", "123": "<(IDENTIFIER,so,System.out.println(so))<SUB>22</SUB>>", "125": "<(println,System.out.println(&quot;NO&quot;))<SUB>24</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>24</SUB>>", "129": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>24</SUB>>", "131": "<(MODIFIER,STATIC)>"}}