{"edges": [["19", "20"], ["19", "21"], ["19", "130"], ["19", "131"], ["19", "132"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "45"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "44"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["45", "46"], ["46", "47"], ["46", "50"], ["46", "57"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "56"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["57", "58"], ["58", "59"], ["58", "62"], ["58", "69"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "76"], ["70", "79"], ["70", "80"], ["70", "83"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["86", "87"], ["86", "94"], ["86", "109"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["94", "95"], ["94", "108"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["109", "110"], ["110", "111"], ["110", "118"], ["110", "119"], ["110", "122"], ["110", "127"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "47"], ["28", "26"], ["39", "44"], ["44", "132"], ["40", "39"], ["47", "54"], ["47", "59"], ["42", "40"], ["51", "56"], ["56", "132"], ["52", "51"], ["59", "66"], ["59", "72"], ["54", "52"], ["63", "68"], ["68", "132"], ["64", "63"], ["72", "76"], ["76", "80"], ["80", "132"], ["80", "89"], ["66", "64"], ["87", "98"], ["87", "114"], ["88", "87"], ["95", "108"], ["108", "132"], ["89", "88"], ["96", "102"], ["99", "95"], ["111", "119"], ["119", "124"], ["122", "127"], ["127", "132"], ["127", "89"], ["98", "96"], ["100", "99"], ["113", "111"], ["124", "122"], ["101", "100"], ["114", "113"], ["102", "101"], ["19", "24"], ["56", "132"], ["44", "132"], ["68", "132"], ["108", "132"], ["20", "132"], ["22", "132"], ["25", "132"], ["25", "132"], ["32", "132"], ["30", "132"], ["30", "132"], ["35", "132"], ["35", "132"], ["39", "132"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["19", "44"], ["19", "39"], ["35", "47"], ["19", "47"], ["19", "56"], ["19", "51"], ["47", "59"], ["19", "59"], ["19", "68"], ["19", "63"], ["19", "72"], ["19", "76"], ["19", "80"], ["19", "84"], ["72", "87"], ["127", "87"], ["19", "87"], ["76", "87"], ["122", "87"], ["80", "87"], ["111", "87"], ["59", "87"], ["19", "108"], ["72", "88"], ["127", "88"], ["19", "88"], ["76", "88"], ["122", "88"], ["80", "88"], ["111", "88"], ["19", "95"], ["72", "95"], ["127", "95"], ["76", "95"], ["122", "95"], ["80", "95"], ["111", "95"], ["19", "111"], ["80", "111"], ["76", "111"], ["122", "111"], ["72", "111"], ["127", "111"], ["19", "119"], ["76", "119"], ["122", "119"], ["19", "122"], ["76", "122"], ["72", "122"], ["127", "122"], ["119", "127"], ["19", "127"], ["72", "89"], ["127", "89"], ["19", "89"], ["76", "89"], ["122", "89"], ["19", "99"], ["72", "99"], ["127", "99"], ["76", "99"], ["122", "99"], ["80", "99"], ["111", "99"], ["19", "100"], ["72", "100"], ["127", "100"], ["76", "100"], ["122", "100"], ["19", "113"], ["80", "113"], ["111", "113"], ["76", "113"], ["122", "113"], ["72", "113"], ["127", "113"], ["19", "124"], ["76", "124"], ["122", "124"], ["72", "124"], ["127", "124"], ["19", "101"], ["72", "101"], ["127", "101"], ["76", "101"], ["122", "101"], ["19", "114"], ["80", "114"], ["111", "114"], ["76", "114"], ["122", "114"], ["19", "102"], ["72", "102"], ["127", "102"], ["35", "47"], ["35", "42"], ["35", "40"], ["35", "44"], ["35", "39"], ["47", "51"], ["47", "52"], ["47", "56"], ["47", "59"], ["47", "54"], ["59", "68"], ["59", "64"], ["59", "66"], ["59", "72"], ["59", "76"], ["59", "80"], ["59", "63"], ["59", "89"], ["59", "87"], ["59", "88"], ["87", "96"], ["87", "98"], ["87", "113"], ["87", "122"], ["87", "99"], ["87", "102"], ["87", "114"], ["87", "119"], ["87", "95"], ["87", "101"], ["87", "100"], ["87", "127"], ["87", "124"], ["87", "108"], ["87", "111"], ["87", "89"], ["87", "87"], ["87", "88"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.equals,n == 0)<SUB>4</SUB>>", "37": "<(LITERAL,0,n == 0)<SUB>4</SUB>>", "39": "<(println,System.out.println(&quot;0 0 0&quot;))<SUB>5</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(&quot;0 0 0&quot;))<SUB>5</SUB>>", "43": "<(LITERAL,&quot;0 0 0&quot;,System.out.println(&quot;0 0 0&quot;))<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.equals,n == 1)<SUB>8</SUB>>", "49": "<(LITERAL,1,n == 1)<SUB>8</SUB>>", "51": "<(println,System.out.println(&quot;0 0 1&quot;))<SUB>9</SUB>>", "53": "<(IDENTIFIER,System,System.out.println(&quot;0 0 1&quot;))<SUB>9</SUB>>", "55": "<(LITERAL,&quot;0 0 1&quot;,System.out.println(&quot;0 0 1&quot;))<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "59": "<(&lt;operator&gt;.equals,n == 2)<SUB>12</SUB>>", "61": "<(LITERAL,2,n == 2)<SUB>12</SUB>>", "63": "<(println,System.out.println(&quot;0 1 1&quot;))<SUB>13</SUB>>", "65": "<(IDENTIFIER,System,System.out.println(&quot;0 1 1&quot;))<SUB>13</SUB>>", "67": "<(LITERAL,&quot;0 1 1&quot;,System.out.println(&quot;0 1 1&quot;))<SUB>13</SUB>>", "69": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "71": "<(LOCAL,int ppp: int)<SUB>17</SUB>>", "73": "<(IDENTIFIER,ppp,int ppp = 0)<SUB>17</SUB>>", "75": "<(LOCAL,int pp: int)<SUB>18</SUB>>", "77": "<(IDENTIFIER,pp,int pp = 1)<SUB>18</SUB>>", "79": "<(LOCAL,int c: int)<SUB>19</SUB>>", "81": "<(IDENTIFIER,c,int c = 2)<SUB>19</SUB>>", "83": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>20</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "87": "<(&lt;operator&gt;.equals,ppp + pp + c == n)<SUB>21</SUB>>", "89": "<(&lt;operator&gt;.addition,ppp + pp)<SUB>21</SUB>>", "91": "<(IDENTIFIER,pp,ppp + pp)<SUB>21</SUB>>", "93": "<(IDENTIFIER,n,ppp + pp + c == n)<SUB>21</SUB>>", "95": "<(println,System.out.println(ppp + &quot; &quot; + pp + &quot; &quot; + c))<SUB>22</SUB>>", "97": "<(IDENTIFIER,System,System.out.println(ppp + &quot; &quot; + pp + &quot; &quot; + c))<SUB>22</SUB>>", "99": "<(&lt;operator&gt;.addition,ppp + &quot; &quot; + pp + &quot; &quot; + c)<SUB>22</SUB>>", "101": "<(&lt;operator&gt;.addition,ppp + &quot; &quot; + pp)<SUB>22</SUB>>", "103": "<(IDENTIFIER,ppp,ppp + &quot; &quot;)<SUB>22</SUB>>", "105": "<(IDENTIFIER,pp,ppp + &quot; &quot; + pp)<SUB>22</SUB>>", "107": "<(IDENTIFIER,c,ppp + &quot; &quot; + pp + &quot; &quot; + c)<SUB>22</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.assignment,c = c + pp + ppp)<SUB>26</SUB>>", "113": "<(&lt;operator&gt;.addition,c + pp + ppp)<SUB>26</SUB>>", "115": "<(IDENTIFIER,c,c + pp)<SUB>26</SUB>>", "117": "<(IDENTIFIER,ppp,c + pp + ppp)<SUB>26</SUB>>", "119": "<(&lt;operator&gt;.assignment,int temp = pp)<SUB>27</SUB>>", "121": "<(IDENTIFIER,pp,int temp = pp)<SUB>27</SUB>>", "123": "<(IDENTIFIER,pp,pp = pp + ppp)<SUB>28</SUB>>", "125": "<(IDENTIFIER,pp,pp + ppp)<SUB>28</SUB>>", "127": "<(&lt;operator&gt;.assignment,ppp = temp)<SUB>29</SUB>>", "129": "<(IDENTIFIER,temp,ppp = temp)<SUB>29</SUB>>", "131": "<(MODIFIER,STATIC)>"}}