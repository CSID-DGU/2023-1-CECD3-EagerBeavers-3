{"edges": [["19", "21"], ["19", "283"], ["19", "284"], ["19", "285"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "59"], ["21", "74"], ["21", "83"], ["21", "89"], ["21", "90"], ["21", "96"], ["21", "274"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["37", "42"], ["37", "45"], ["37", "47"], ["39", "40"], ["39", "41"], ["42", "43"], ["42", "44"], ["45", "46"], ["47", "48"], ["48", "49"], ["48", "52"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "57"], ["52", "58"], ["53", "54"], ["53", "56"], ["54", "55"], ["59", "60"], ["59", "67"], ["60", "61"], ["60", "66"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["85", "86"], ["85", "87"], ["90", "91"], ["90", "92"], ["92", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["96", "103"], ["96", "106"], ["96", "108"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "120"], ["108", "155"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "130"], ["120", "132"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["132", "150"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["166", "167"], ["166", "184"], ["166", "199"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "183"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["199", "200"], ["200", "201"], ["200", "212"], ["200", "225"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "218"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "224"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["225", "226"], ["226", "227"], ["226", "232"], ["226", "257"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "250"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "249"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["250", "251"], ["250", "256"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["257", "258"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["264", "265"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "39"], ["74", "85"], ["83", "93"], ["90", "100"], ["274", "285"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["39", "42"], ["42", "49"], ["42", "63"], ["45", "42"], ["60", "71"], ["60", "77"], ["76", "74"], ["85", "83"], ["92", "90"], ["98", "103"], ["103", "110"], ["103", "277"], ["106", "103"], ["275", "279"], ["278", "274"], ["28", "26"], ["48", "45"], ["61", "60"], ["68", "73"], ["73", "285"], ["77", "80"], ["80", "76"], ["93", "92"], ["100", "98"], ["109", "122"], ["277", "275"], ["279", "278"], ["49", "54"], ["52", "48"], ["63", "61"], ["69", "68"], ["110", "116"], ["113", "109"], ["122", "129"], ["125", "134"], ["125", "157"], ["130", "129"], ["157", "160"], ["160", "169"], ["160", "106"], ["163", "160"], ["53", "52"], ["71", "69"], ["114", "113"], ["127", "125"], ["133", "151"], ["150", "130"], ["54", "53"], ["116", "114"], ["129", "127"], ["134", "140"], ["137", "133"], ["151", "150"], ["167", "186"], ["167", "202"], ["184", "163"], ["138", "146"], ["143", "137"], ["168", "167"], ["168", "174"], ["173", "167"], ["185", "193"], ["190", "184"], ["140", "138"], ["144", "143"], ["169", "168"], ["174", "173"], ["174", "180"], ["177", "173"], ["186", "185"], ["191", "196"], ["196", "190"], ["201", "214"], ["201", "228"], ["212", "163"], ["146", "144"], ["178", "177"], ["193", "191"], ["202", "201"], ["202", "208"], ["205", "201"], ["213", "221"], ["218", "212"], ["180", "178"], ["206", "205"], ["214", "213"], ["219", "218"], ["227", "235"], ["227", "260"], ["208", "206"], ["221", "219"], ["228", "227"], ["233", "252"], ["250", "163"], ["234", "243"], ["239", "233"], ["251", "250"], ["259", "267"], ["259", "163"], ["235", "234"], ["240", "239"], ["252", "251"], ["260", "259"], ["265", "163"], ["241", "246"], ["246", "240"], ["266", "271"], ["271", "265"], ["243", "241"], ["267", "266"], ["19", "24"], ["73", "285"], ["20", "285"], ["22", "285"], ["25", "285"], ["25", "285"], ["31", "285"], ["29", "285"], ["29", "285"], ["33", "285"], ["33", "285"], ["33", "285"], ["39", "285"], ["42", "285"], ["42", "285"], ["63", "285"], ["60", "285"], ["60", "285"], ["68", "285"], ["68", "285"], ["48", "285"], ["54", "285"], ["53", "285"], ["52", "285"], ["48", "285"], ["48", "285"], ["45", "285"], ["83", "285"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["76", "74"], ["76", "74"], ["92", "90"], ["22", "25"], ["19", "25"], ["19", "39"], ["19", "83"], ["74", "83"], ["100", "98"], ["100", "98"], ["25", "31"], ["19", "31"], ["29", "35"], ["19", "35"], ["39", "42"], ["45", "42"], ["19", "42"], ["35", "42"], ["42", "45"], ["19", "45"], ["19", "48"], ["33", "60"], ["19", "60"], ["19", "73"], ["63", "76"], ["19", "76"], ["19", "92"], ["63", "92"], ["98", "103"], ["106", "103"], ["19", "103"], ["202", "106"], ["208", "106"], ["19", "106"], ["103", "106"], ["174", "106"], ["180", "106"], ["19", "68"], ["63", "77"], ["19", "77"], ["19", "80"], ["63", "80"], ["19", "93"], ["63", "93"], ["19", "100"], ["63", "100"], ["19", "122"], ["19", "157"], ["19", "52"], ["42", "63"], ["19", "63"], ["122", "125"], ["130", "125"], ["19", "125"], ["90", "125"], ["140", "130"], ["19", "130"], ["90", "133"], ["19", "150"], ["157", "160"], ["163", "160"], ["19", "160"], ["100", "160"], ["160", "163"], ["19", "163"], ["54", "53"], ["19", "53"], ["90", "150"], ["133", "150"], ["31", "54"], ["19", "54"], ["103", "116"], ["19", "116"], ["90", "137"], ["168", "167"], ["168", "167"], ["201", "167"], ["173", "167"], ["173", "167"], ["33", "168"], ["227", "168"], ["259", "168"], ["48", "168"], ["19", "168"], ["174", "173"], ["174", "173"], ["201", "173"], ["177", "173"], ["177", "173"], ["125", "140"], ["19", "140"], ["202", "174"], ["208", "174"], ["19", "174"], ["103", "174"], ["180", "174"], ["33", "177"], ["205", "177"], ["19", "177"], ["160", "196"], ["19", "196"], ["202", "201"], ["202", "201"], ["173", "201"], ["205", "201"], ["205", "201"], ["19", "146"], ["103", "146"], ["174", "193"], ["180", "193"], ["202", "193"], ["208", "193"], ["19", "193"], ["103", "193"], ["174", "202"], ["180", "202"], ["208", "202"], ["19", "202"], ["103", "202"], ["33", "205"], ["177", "205"], ["19", "205"], ["174", "180"], ["19", "180"], ["33", "227"], ["168", "227"], ["19", "227"], ["240", "233"], ["240", "233"], ["19", "233"], ["19", "250"], ["202", "208"], ["19", "208"], ["202", "221"], ["208", "221"], ["19", "221"], ["233", "250"], ["240", "239"], ["240", "239"], ["19", "239"], ["33", "259"], ["227", "259"], ["19", "259"], ["90", "265"], ["150", "265"], ["90", "240"], ["109", "240"], ["160", "243"], ["19", "243"], ["42", "42"], ["42", "52"], ["42", "54"], ["42", "48"], ["42", "49"], ["42", "53"], ["42", "45"], ["60", "68"], ["60", "74"], ["60", "76"], ["60", "93"], ["60", "80"], ["60", "100"], ["60", "274"], ["60", "71"], ["60", "278"], ["60", "73"], ["60", "77"], ["60", "98"], ["60", "85"], ["60", "103"], ["60", "69"], ["60", "279"], ["60", "275"], ["60", "92"], ["60", "90"], ["60", "277"], ["60", "83"], ["103", "114"], ["103", "129"], ["103", "127"], ["103", "160"], ["103", "116"], ["103", "122"], ["103", "109"], ["103", "113"], ["103", "103"], ["103", "106"], ["103", "157"], ["103", "110"], ["103", "125"], ["125", "146"], ["125", "150"], ["125", "129"], ["125", "134"], ["125", "138"], ["125", "127"], ["125", "140"], ["125", "133"], ["125", "151"], ["125", "144"], ["125", "137"], ["125", "130"], ["125", "143"], ["125", "125"], ["160", "167"], ["160", "163"], ["160", "168"], ["160", "160"], ["160", "169"], ["167", "196"], ["167", "190"], ["167", "184"], ["167", "186"], ["167", "202"], ["167", "201"], ["167", "185"], ["167", "191"], ["167", "193"], ["168", "174"], ["168", "173"], ["174", "180"], ["174", "177"], ["174", "178"], ["201", "214"], ["201", "213"], ["201", "228"], ["201", "227"], ["201", "212"], ["201", "221"], ["201", "218"], ["201", "219"], ["202", "206"], ["202", "208"], ["202", "205"], ["227", "240"], ["227", "243"], ["227", "260"], ["227", "241"], ["227", "259"], ["227", "246"], ["227", "233"], ["227", "239"], ["227", "252"], ["227", "235"], ["227", "251"], ["227", "234"], ["227", "250"], ["259", "267"], ["259", "265"], ["259", "271"], ["259", "266"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new FS(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FS(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FS(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new FS(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,N = nextInt())<SUB>4</SUB>>", "31": "<(nextInt,nextInt())<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,list = new int[N])<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.alloc,new int[N])>", "37": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "41": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "43": "<(IDENTIFIER,i,i &lt; N)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,list[i] = scan.next().equals(&quot;s&quot;) ? 0 : 1)<SUB>7</SUB>>", "53": "<(equals,equals(&quot;s&quot;))<SUB>7</SUB>>", "55": "<(IDENTIFIER,scan,next())<SUB>7</SUB>>", "57": "<(LITERAL,0,scan.next().equals(&quot;s&quot;) ? 0 : 1)<SUB>7</SUB>>", "59": "<(CONTROL_STRUCTURE,if (list[N - 1] == 1),if (list[N - 1] == 1))<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,list[N - 1])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>9</SUB>>", "65": "<(LITERAL,1,N - 1)<SUB>9</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "71": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "73": "<(RETURN,return;,return;)<SUB>11</SUB>>", "75": "<(IDENTIFIER,memo,memo = new int[N + 1][N + 2])<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.addition,N + 1)<SUB>13</SUB>>", "79": "<(LITERAL,1,N + 1)<SUB>13</SUB>>", "81": "<(IDENTIFIER,N,N + 2)<SUB>13</SUB>>", "83": "<(fill,fill(memo[N], 1))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,memo[N])<SUB>14</SUB>>", "87": "<(IDENTIFIER,N,fill(memo[N], 1))<SUB>14</SUB>>", "89": "<(LOCAL,int[] sum: int[])<SUB>15</SUB>>", "91": "<(IDENTIFIER,sum,int[] sum = new int[N + 2])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.addition,N + 2)<SUB>15</SUB>>", "95": "<(LITERAL,2,N + 2)<SUB>15</SUB>>", "97": "<(LOCAL,int i: int)<SUB>17</SUB>>", "99": "<(IDENTIFIER,i,int i = N - 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,N,N - 1)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>17</SUB>>", "105": "<(LITERAL,0,i &gt;= 0)<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,i--)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.assignment,sum[0] = memo[i + 1][0])<SUB>18</SUB>>", "111": "<(IDENTIFIER,sum,sum[0] = memo[i + 1][0])<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,memo[i + 1][0])<SUB>18</SUB>>", "115": "<(IDENTIFIER,memo,sum[0] = memo[i + 1][0])<SUB>18</SUB>>", "117": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "119": "<(LITERAL,0,sum[0] = memo[i + 1][0])<SUB>18</SUB>>", "121": "<(LOCAL,int j: int)<SUB>19</SUB>>", "123": "<(IDENTIFIER,j,int j = 1)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.lessThan,j &lt; sum.length)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,sum.length)<SUB>19</SUB>>", "129": "<(FIELD_IDENTIFIER,length,length)<SUB>19</SUB>>", "131": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.assignment,sum[j] = sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "135": "<(IDENTIFIER,sum,sum[j] = sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.addition,sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "139": "<(IDENTIFIER,sum,sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "141": "<(IDENTIFIER,j,j - 1)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,memo[i + 1][j])<SUB>20</SUB>>", "145": "<(IDENTIFIER,memo,sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "147": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "149": "<(IDENTIFIER,j,sum[j - 1] + memo[i + 1][j])<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,sum[j])<SUB>21</SUB>>", "153": "<(IDENTIFIER,j,sum[j] %= mod)<SUB>21</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= N); j++),for (int j = 0; Some(j &lt;= N); j++))<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "159": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "161": "<(IDENTIFIER,j,j &lt;= N)<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "167": "<(&lt;operator&gt;.logicalAnd,list[i] == 1 &amp;&amp; (i == 0 || list[i - 1] == 1))<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>24</SUB>>", "171": "<(IDENTIFIER,i,list[i] == 1)<SUB>24</SUB>>", "173": "<(&lt;operator&gt;.logicalOr,i == 0 || list[i - 1] == 1)<SUB>24</SUB>>", "175": "<(IDENTIFIER,i,i == 0)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.equals,list[i - 1] == 1)<SUB>24</SUB>>", "179": "<(IDENTIFIER,list,list[i - 1] == 1)<SUB>24</SUB>>", "181": "<(IDENTIFIER,i,i - 1)<SUB>24</SUB>>", "183": "<(LITERAL,1,list[i - 1] == 1)<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>25</SUB>>", "187": "<(IDENTIFIER,memo,memo[i][j] = memo[i + 1][j + 1])<SUB>25</SUB>>", "189": "<(IDENTIFIER,j,memo[i][j] = memo[i + 1][j + 1])<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,memo[i + 1])<SUB>25</SUB>>", "193": "<(&lt;operator&gt;.addition,i + 1)<SUB>25</SUB>>", "195": "<(LITERAL,1,i + 1)<SUB>25</SUB>>", "197": "<(IDENTIFIER,j,j + 1)<SUB>25</SUB>>", "199": "<(CONTROL_STRUCTURE,else,else)<SUB>26</SUB>>", "201": "<(&lt;operator&gt;.logicalOr,i == 0 || list[i - 1] == 1)<SUB>26</SUB>>", "203": "<(IDENTIFIER,i,i == 0)<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.equals,list[i - 1] == 1)<SUB>26</SUB>>", "207": "<(IDENTIFIER,list,list[i - 1] == 1)<SUB>26</SUB>>", "209": "<(IDENTIFIER,i,i - 1)<SUB>26</SUB>>", "211": "<(LITERAL,1,list[i - 1] == 1)<SUB>26</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>27</SUB>>", "215": "<(IDENTIFIER,memo,memo[i][j] = memo[i + 1][j])<SUB>27</SUB>>", "217": "<(IDENTIFIER,j,memo[i][j] = memo[i + 1][j])<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,memo[i + 1])<SUB>27</SUB>>", "221": "<(&lt;operator&gt;.addition,i + 1)<SUB>27</SUB>>", "223": "<(LITERAL,1,i + 1)<SUB>27</SUB>>", "225": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "227": "<(&lt;operator&gt;.equals,list[i] == 1)<SUB>28</SUB>>", "229": "<(IDENTIFIER,list,list[i] == 1)<SUB>28</SUB>>", "231": "<(LITERAL,1,list[i] == 1)<SUB>28</SUB>>", "233": "<(&lt;operator&gt;.assignment,memo[i][j] = sum[j + 1] - sum[0] + mod)<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,memo[i])<SUB>32</SUB>>", "237": "<(IDENTIFIER,i,memo[i][j] = sum[j + 1] - sum[0] + mod)<SUB>32</SUB>>", "239": "<(&lt;operator&gt;.addition,sum[j + 1] - sum[0] + mod)<SUB>32</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,sum[j + 1])<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.addition,j + 1)<SUB>32</SUB>>", "245": "<(LITERAL,1,j + 1)<SUB>32</SUB>>", "247": "<(IDENTIFIER,sum,sum[j + 1] - sum[0])<SUB>32</SUB>>", "249": "<(IDENTIFIER,mod,sum[j + 1] - sum[0] + mod)<SUB>32</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>33</SUB>>", "253": "<(IDENTIFIER,memo,memo[i][j] %= mod)<SUB>33</SUB>>", "255": "<(IDENTIFIER,j,memo[i][j] %= mod)<SUB>33</SUB>>", "257": "<(CONTROL_STRUCTURE,else,else)<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.equals,list[i] == 0)<SUB>36</SUB>>", "261": "<(IDENTIFIER,list,list[i] == 0)<SUB>36</SUB>>", "263": "<(LITERAL,0,list[i] == 0)<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.assignment,memo[i][j] = sum[j])<SUB>37</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,memo[i])<SUB>37</SUB>>", "269": "<(IDENTIFIER,i,memo[i][j] = sum[j])<SUB>37</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,sum[j])<SUB>37</SUB>>", "273": "<(IDENTIFIER,j,memo[i][j] = sum[j])<SUB>37</SUB>>", "275": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>49</SUB>>", "277": "<(FIELD_IDENTIFIER,out,out)<SUB>49</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,memo[0])<SUB>49</SUB>>", "281": "<(LITERAL,0,println(memo[0][0]))<SUB>49</SUB>>", "283": "<(MODIFIER,PUBLIC)>", "285": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}