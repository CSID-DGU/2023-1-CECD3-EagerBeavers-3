{"edges": [["23", "25"], ["23", "163"], ["23", "164"], ["23", "165"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "49"], ["25", "8"], ["25", "65"], ["25", "68"], ["25", "70"], ["25", "71"], ["25", "74"], ["25", "100"], ["25", "101"], ["25", "105"], ["25", "161"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["68", "7"], ["68", "69"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "94"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["94", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "103"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "118"], ["115", "122"], ["115", "126"], ["115", "127"], ["115", "134"], ["115", "135"], ["115", "144"], ["115", "153"], ["118", "119"], ["118", "120"], ["120", "121"], ["122", "123"], ["122", "124"], ["124", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["155", "160"], ["156", "157"], ["156", "158"], ["161", "162"], ["26", "29"], ["29", "32"], ["30", "36"], ["33", "40"], ["38", "46"], ["43", "51"], ["65", "68"], ["68", "71"], ["71", "76"], ["101", "107"], ["161", "165"], ["28", "26"], ["32", "30"], ["34", "33"], ["40", "38"], ["45", "43"], ["51", "54"], ["54", "60"], ["54", "67"], ["57", "54"], ["59", "57"], ["67", "65"], ["76", "79"], ["79", "90"], ["79", "103"], ["82", "79"], ["103", "101"], ["107", "110"], ["110", "120"], ["110", "161"], ["113", "110"], ["36", "34"], ["46", "45"], ["60", "63"], ["63", "59"], ["85", "96"], ["94", "82"], ["118", "124"], ["122", "130"], ["127", "140"], ["135", "146"], ["153", "113"], ["87", "85"], ["96", "94"], ["120", "118"], ["124", "122"], ["129", "127"], ["137", "135"], ["145", "150"], ["145", "156"], ["150", "156"], ["155", "153"], ["88", "87"], ["130", "129"], ["138", "137"], ["146", "145"], ["156", "155"], ["90", "88"], ["140", "138"], ["23", "28"], ["24", "165"], ["26", "165"], ["29", "165"], ["30", "165"], ["33", "165"], ["33", "165"], ["38", "165"], ["43", "165"], ["45", "165"], ["43", "165"], ["43", "165"], ["65", "165"], ["68", "165"], ["68", "165"], ["71", "165"], ["71", "165"], ["76", "165"], ["79", "165"], ["79", "165"], ["103", "165"], ["101", "165"], ["101", "165"], ["107", "165"], ["110", "165"], ["110", "165"], ["110", "165"], ["161", "165"], ["161", "165"], ["118", "165"], ["124", "165"], ["122", "165"], ["122", "165"], ["130", "165"], ["130", "165"], ["129", "165"], ["127", "165"], ["127", "165"], ["138", "165"], ["138", "165"], ["137", "165"], ["135", "165"], ["135", "165"], ["146", "165"], ["145", "165"], ["145", "165"], ["156", "165"], ["155", "165"], ["153", "165"], ["153", "165"], ["113", "165"], ["85", "165"], ["87", "165"], ["85", "165"], ["94", "165"], ["94", "165"], ["94", "165"], ["82", "165"], ["59", "165"], ["59", "165"], ["57", "165"], ["23", "24"], ["23", "26"], ["23", "30"], ["40", "38"], ["45", "43"], ["23", "65"], ["23", "71"], ["103", "101"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["23", "51"], ["63", "59"], ["65", "68"], ["23", "68"], ["54", "68"], ["23", "76"], ["23", "107"], ["33", "161"], ["153", "161"], ["23", "161"], ["29", "40"], ["23", "40"], ["38", "45"], ["23", "45"], ["51", "54"], ["57", "54"], ["23", "54"], ["38", "54"], ["54", "57"], ["23", "57"], ["76", "79"], ["82", "79"], ["23", "79"], ["68", "79"], ["79", "82"], ["23", "82"], ["87", "85"], ["87", "85"], ["40", "103"], ["63", "103"], ["23", "103"], ["107", "110"], ["113", "110"], ["23", "110"], ["101", "110"], ["110", "113"], ["23", "113"], ["120", "118"], ["124", "122"], ["130", "127"], ["130", "127"], ["23", "127"], ["137", "135"], ["137", "135"], ["38", "46"], ["23", "46"], ["40", "63"], ["23", "63"], ["71", "85"], ["23", "85"], ["88", "94"], ["23", "94"], ["43", "94"], ["88", "94"], ["23", "150"], ["33", "153"], ["23", "153"], ["88", "87"], ["88", "87"], ["23", "87"], ["103", "120"], ["124", "120"], ["23", "120"], ["120", "124"], ["23", "124"], ["130", "129"], ["130", "129"], ["23", "129"], ["138", "137"], ["138", "137"], ["23", "137"], ["146", "145"], ["146", "145"], ["23", "145"], ["71", "150"], ["156", "150"], ["85", "150"], ["23", "155"], ["68", "88"], ["94", "88"], ["23", "88"], ["43", "88"], ["94", "88"], ["59", "88"], ["122", "130"], ["23", "130"], ["118", "130"], ["140", "138"], ["23", "138"], ["140", "138"], ["135", "146"], ["23", "146"], ["71", "156"], ["150", "156"], ["85", "156"], ["23", "156"], ["127", "140"], ["23", "140"], ["54", "60"], ["54", "57"], ["54", "59"], ["54", "54"], ["54", "63"], ["79", "94"], ["79", "96"], ["79", "85"], ["79", "87"], ["79", "82"], ["79", "90"], ["79", "79"], ["79", "88"], ["110", "120"], ["110", "113"], ["110", "145"], ["110", "146"], ["110", "122"], ["110", "153"], ["110", "129"], ["110", "138"], ["110", "140"], ["110", "137"], ["110", "130"], ["110", "118"], ["110", "135"], ["110", "110"], ["110", "127"], ["110", "155"], ["110", "156"], ["110", "124"], ["145", "150"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scan = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(LOCAL,int n: int)<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,scan,nextInt())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,int[] a = new int[n + 1])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "47": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "53": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i &lt;= n)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>6</SUB>>", "61": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>6</SUB>>", "63": "<(nextInt,nextInt())<SUB>6</SUB>>", "8": "<(LOCAL,BIT bit: ANY)<SUB>7</SUB>>", "66": "<(IDENTIFIER,bit,ANY bit = new BIT(n))<SUB>7</SUB>>", "68": "<(&lt;init&gt;,new BIT(n))<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,new BIT(n))<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,int p = 0)<SUB>8</SUB>>", "73": "<(LITERAL,0,int p = 0)<SUB>8</SUB>>", "75": "<(LOCAL,int i: int)<SUB>9</SUB>>", "77": "<(IDENTIFIER,i,int i = 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>9</SUB>>", "81": "<(IDENTIFIER,n,i &lt;= n)<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "85": "<(&lt;operators&gt;.assignmentXor,p ^= bit.atOrAbove(a[i]) &amp; 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.and,bit.atOrAbove(a[i]) &amp; 1)<SUB>10</SUB>>", "89": "<(IDENTIFIER,bit,atOrAbove(a[i]))<SUB>10</SUB>>", "91": "<(IDENTIFIER,a,atOrAbove(a[i]))<SUB>10</SUB>>", "93": "<(LITERAL,1,bit.atOrAbove(a[i]) &amp; 1)<SUB>10</SUB>>", "95": "<(IDENTIFIER,bit,add(a[i], 1))<SUB>11</SUB>>", "97": "<(IDENTIFIER,a,add(a[i], 1))<SUB>11</SUB>>", "99": "<(LITERAL,1,add(a[i], 1))<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>13</SUB>>", "103": "<(nextInt,nextInt())<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,i &lt; m)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "117": "<(LOCAL,int r: int)<SUB>15</SUB>>", "119": "<(IDENTIFIER,l,int l = nextInt())<SUB>15</SUB>>", "121": "<(IDENTIFIER,scan,nextInt())<SUB>15</SUB>>", "123": "<(IDENTIFIER,r,int r = nextInt())<SUB>15</SUB>>", "125": "<(IDENTIFIER,scan,nextInt())<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.assignment,int s = r - l + 1)<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.addition,r - l + 1)<SUB>16</SUB>>", "131": "<(IDENTIFIER,r,r - l)<SUB>16</SUB>>", "133": "<(LITERAL,1,r - l + 1)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.assignment,int in = s * (s - 1) / 2)<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.division,s * (s - 1) / 2)<SUB>17</SUB>>", "139": "<(IDENTIFIER,s,s * (s - 1))<SUB>17</SUB>>", "141": "<(IDENTIFIER,s,s - 1)<SUB>17</SUB>>", "143": "<(LITERAL,2,s * (s - 1) / 2)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.equals,(in &amp; 1) == 1)<SUB>18</SUB>>", "147": "<(IDENTIFIER,in,in &amp; 1)<SUB>18</SUB>>", "149": "<(LITERAL,1,(in &amp; 1) == 1)<SUB>18</SUB>>", "151": "<(IDENTIFIER,p,p ^= 1)<SUB>18</SUB>>", "153": "<(println,println(p == 0 ? &quot;even&quot; : &quot;odd&quot;))<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.conditional,p == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>19</SUB>>", "157": "<(IDENTIFIER,p,p == 0)<SUB>19</SUB>>", "159": "<(LITERAL,&quot;even&quot;,p == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>19</SUB>>", "161": "<(close,close())<SUB>21</SUB>>", "163": "<(MODIFIER,PUBLIC)>", "165": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}