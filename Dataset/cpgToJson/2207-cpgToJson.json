{"edges": [["24", "25"], ["24", "26"], ["24", "252"], ["24", "253"], ["24", "254"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "47"], ["26", "48"], ["26", "54"], ["26", "55"], ["26", "61"], ["26", "62"], ["26", "66"], ["26", "69"], ["26", "72"], ["26", "91"], ["26", "92"], ["26", "96"], ["26", "101"], ["26", "102"], ["26", "109"], ["26", "9"], ["26", "222"], ["26", "225"], ["26", "227"], ["26", "245"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["69", "7"], ["69", "70"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "125"], ["119", "128"], ["119", "206"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "140"], ["138", "151"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "157"], ["151", "173"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["180", "195"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "209"], ["206", "215"], ["207", "208"], ["209", "210"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["216", "217"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "224"], ["225", "8"], ["225", "226"], ["227", "228"], ["227", "229"], ["227", "232"], ["227", "235"], ["227", "237"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["249", "250"], ["250", "251"], ["27", "34"], ["30", "43"], ["41", "45"], ["44", "52"], ["48", "59"], ["55", "64"], ["62", "68"], ["66", "70"], ["69", "74"], ["92", "97"], ["96", "105"], ["102", "111"], ["222", "225"], ["225", "229"], ["245", "254"], ["29", "27"], ["43", "41"], ["45", "44"], ["50", "48"], ["57", "55"], ["64", "62"], ["68", "66"], ["70", "69"], ["74", "77"], ["77", "84"], ["77", "94"], ["80", "77"], ["94", "92"], ["97", "96"], ["104", "102"], ["111", "114"], ["114", "121"], ["114", "224"], ["117", "114"], ["224", "222"], ["229", "232"], ["232", "241"], ["232", "248"], ["235", "232"], ["246", "250"], ["249", "245"], ["32", "39"], ["35", "30"], ["52", "50"], ["59", "57"], ["83", "80"], ["105", "104"], ["121", "125"], ["125", "130"], ["238", "235"], ["248", "246"], ["250", "249"], ["34", "32"], ["37", "35"], ["84", "89"], ["87", "83"], ["130", "133"], ["133", "145"], ["133", "207"], ["136", "133"], ["207", "211"], ["207", "218"], ["240", "238"], ["39", "37"], ["89", "87"], ["140", "154"], ["210", "117"], ["241", "240"], ["142", "140"], ["152", "160"], ["152", "177"], ["211", "210"], ["217", "117"], ["144", "142"], ["154", "152"], ["218", "217"], ["145", "148"], ["148", "144"], ["159", "167"], ["159", "136"], ["175", "185"], ["175", "136"], ["160", "159"], ["165", "170"], ["170", "136"], ["177", "175"], ["182", "196"], ["167", "165"], ["184", "182"], ["196", "200"], ["196", "136"], ["185", "192"], ["188", "184"], ["200", "203"], ["203", "136"], ["190", "188"], ["192", "190"], ["24", "29"], ["25", "254"], ["27", "254"], ["32", "254"], ["35", "254"], ["35", "254"], ["35", "254"], ["30", "254"], ["41", "254"], ["48", "254"], ["57", "254"], ["57", "254"], ["55", "254"], ["55", "254"], ["62", "254"], ["62", "254"], ["62", "254"], ["66", "254"], ["69", "254"], ["70", "254"], ["69", "254"], ["69", "254"], ["92", "254"], ["92", "254"], ["92", "254"], ["96", "254"], ["96", "254"], ["102", "254"], ["104", "254"], ["104", "254"], ["102", "254"], ["102", "254"], ["111", "254"], ["222", "254"], ["225", "254"], ["229", "254"], ["232", "254"], ["232", "254"], ["232", "254"], ["245", "254"], ["250", "254"], ["249", "254"], ["245", "254"], ["240", "254"], ["238", "254"], ["238", "254"], ["235", "254"], ["121", "254"], ["125", "254"], ["125", "254"], ["130", "254"], ["133", "254"], ["133", "254"], ["207", "254"], ["207", "254"], ["217", "254"], ["217", "254"], ["217", "254"], ["210", "254"], ["210", "254"], ["210", "254"], ["117", "254"], ["142", "254"], ["144", "254"], ["144", "254"], ["142", "254"], ["140", "254"], ["140", "254"], ["152", "254"], ["154", "254"], ["152", "254"], ["152", "254"], ["175", "254"], ["177", "254"], ["175", "254"], ["175", "254"], ["184", "254"], ["188", "254"], ["190", "254"], ["192", "254"], ["190", "254"], ["188", "254"], ["184", "254"], ["182", "254"], ["182", "254"], ["196", "254"], ["196", "254"], ["196", "254"], ["200", "254"], ["200", "254"], ["200", "254"], ["203", "254"], ["159", "254"], ["159", "254"], ["159", "254"], ["165", "254"], ["165", "254"], ["165", "254"], ["170", "254"], ["136", "254"], ["83", "254"], ["87", "254"], ["89", "254"], ["87", "254"], ["83", "254"], ["83", "254"], ["80", "254"], ["24", "25"], ["24", "27"], ["24", "41"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["64", "62"], ["24", "66"], ["94", "92"], ["55", "96"], ["24", "96"], ["104", "102"], ["104", "102"], ["24", "222"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["45", "44"], ["66", "69"], ["24", "69"], ["70", "69"], ["24", "74"], ["24", "111"], ["222", "225"], ["24", "225"], ["24", "229"], ["249", "245"], ["24", "32"], ["24", "40"], ["30", "45"], ["24", "45"], ["24", "50"], ["52", "50"], ["50", "57"], ["24", "57"], ["59", "57"], ["48", "64"], ["24", "64"], ["45", "70"], ["24", "70"], ["74", "77"], ["80", "77"], ["24", "77"], ["64", "77"], ["77", "80"], ["24", "80"], ["87", "83"], ["87", "83"], ["77", "94"], ["24", "94"], ["105", "104"], ["105", "104"], ["24", "104"], ["111", "114"], ["117", "114"], ["24", "114"], ["94", "114"], ["133", "117"], ["24", "117"], ["24", "121"], ["24", "125"], ["229", "232"], ["235", "232"], ["24", "232"], ["114", "232"], ["232", "235"], ["24", "235"], ["250", "249"], ["32", "35"], ["24", "35"], ["44", "52"], ["24", "52"], ["52", "59"], ["24", "59"], ["24", "105"], ["55", "105"], ["24", "130"], ["225", "238"], ["24", "238"], ["92", "238"], ["217", "238"], ["210", "238"], ["225", "250"], ["238", "250"], ["24", "250"], ["57", "87"], ["24", "87"], ["89", "87"], ["130", "133"], ["136", "133"], ["24", "133"], ["114", "133"], ["133", "136"], ["24", "136"], ["142", "140"], ["142", "140"], ["121", "207"], ["203", "207"], ["170", "207"], ["24", "207"], ["104", "210"], ["154", "210"], ["177", "210"], ["24", "210"], ["92", "240"], ["217", "240"], ["210", "240"], ["24", "240"], ["69", "89"], ["24", "89"], ["125", "217"], ["196", "217"], ["200", "217"], ["159", "217"], ["165", "217"], ["24", "217"], ["188", "142"], ["24", "142"], ["144", "142"], ["144", "142"], ["140", "152"], ["24", "152"], ["154", "152"], ["154", "152"], ["62", "144"], ["83", "144"], ["24", "154"], ["104", "154"], ["177", "154"], ["92", "159"], ["125", "159"], ["196", "159"], ["200", "159"], ["165", "159"], ["24", "159"], ["92", "165"], ["159", "165"], ["24", "170"], ["152", "175"], ["24", "175"], ["177", "175"], ["177", "175"], ["92", "182"], ["159", "182"], ["188", "182"], ["188", "182"], ["24", "177"], ["154", "177"], ["92", "184"], ["159", "184"], ["188", "184"], ["188", "184"], ["182", "196"], ["24", "196"], ["125", "196"], ["200", "196"], ["159", "196"], ["165", "196"], ["196", "200"], ["24", "200"], ["24", "203"], ["142", "188"], ["24", "188"], ["190", "188"], ["190", "188"], ["102", "190"], ["24", "190"], ["192", "190"], ["175", "192"], ["24", "192"], ["77", "77"], ["77", "84"], ["77", "87"], ["77", "80"], ["77", "89"], ["77", "83"], ["114", "114"], ["114", "121"], ["114", "207"], ["114", "130"], ["114", "117"], ["114", "125"], ["114", "133"], ["232", "240"], ["232", "232"], ["232", "238"], ["232", "235"], ["232", "241"], ["133", "136"], ["133", "154"], ["133", "145"], ["133", "144"], ["133", "148"], ["133", "152"], ["133", "142"], ["133", "140"], ["133", "133"], ["207", "210"], ["207", "217"], ["207", "211"], ["207", "218"], ["152", "160"], ["152", "159"], ["152", "177"], ["152", "175"], ["159", "167"], ["159", "170"], ["159", "165"], ["175", "188"], ["175", "192"], ["175", "196"], ["175", "185"], ["175", "190"], ["175", "184"], ["175", "182"], ["196", "200"], ["196", "203"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "46": "<(IDENTIFIER,f,readLine())<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "52": "<(nextToken,nextToken())<SUB>4</SUB>>", "54": "<(LOCAL,int r: int)<SUB>5</SUB>>", "56": "<(IDENTIFIER,r,int r = parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "60": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "62": "<(&lt;operator&gt;.assignment,int[] x = new int[n])<SUB>6</SUB>>", "64": "<(&lt;operator&gt;.alloc,new int[n])>", "66": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "68": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>7</SUB>>", "71": "<(IDENTIFIER,f,readLine())<SUB>7</SUB>>", "73": "<(LOCAL,int i: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.assignment,x[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "85": "<(IDENTIFIER,x,x[i] = parseInt(st.nextToken()))<SUB>9</SUB>>", "87": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "89": "<(nextToken,nextToken())<SUB>9</SUB>>", "91": "<(LOCAL,double[] y: double[])<SUB>11</SUB>>", "93": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>11</SUB>>", "95": "<(IDENTIFIER,n,new double[n])<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,y[0])<SUB>12</SUB>>", "99": "<(LITERAL,0,y[0] = r)<SUB>12</SUB>>", "101": "<(LOCAL,double hypSq: double)<SUB>13</SUB>>", "103": "<(IDENTIFIER,hypSq,double hypSq = 4 * r * r)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.multiplication,4 * r)<SUB>13</SUB>>", "107": "<(IDENTIFIER,r,4 * r)<SUB>13</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>14</SUB>>", "113": "<(LITERAL,1,int i = 1)<SUB>14</SUB>>", "115": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,boolean hit = false)<SUB>15</SUB>>", "123": "<(LITERAL,false,boolean hit = false)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.assignment,double maxY = 0)<SUB>16</SUB>>", "127": "<(LITERAL,0,double maxY = 0)<SUB>16</SUB>>", "129": "<(LOCAL,int j: int)<SUB>17</SUB>>", "131": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>17</SUB>>", "135": "<(IDENTIFIER,i,j &lt; i)<SUB>17</SUB>>", "137": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "139": "<(LOCAL,int dx: int)<SUB>18</SUB>>", "141": "<(IDENTIFIER,dx,int dx = Math.abs(x[i] - x[j]))<SUB>18</SUB>>", "143": "<(IDENTIFIER,Math,Math.abs(x[i] - x[j]))<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>18</SUB>>", "147": "<(IDENTIFIER,i,x[i] - x[j])<SUB>18</SUB>>", "149": "<(IDENTIFIER,x,x[i] - x[j])<SUB>18</SUB>>", "151": "<(CONTROL_STRUCTURE,if (dx == 2 * r),if (dx == 2 * r))<SUB>19</SUB>>", "153": "<(IDENTIFIER,dx,dx == 2 * r)<SUB>19</SUB>>", "155": "<(LITERAL,2,2 * r)<SUB>19</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.greaterThan,y[j] &gt; maxY)<SUB>20</SUB>>", "161": "<(IDENTIFIER,y,y[j] &gt; maxY)<SUB>20</SUB>>", "163": "<(IDENTIFIER,maxY,y[j] &gt; maxY)<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.assignment,maxY = y[j])<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>21</SUB>>", "169": "<(IDENTIFIER,j,maxY = y[j])<SUB>21</SUB>>", "171": "<(IDENTIFIER,hit,hit = true)<SUB>22</SUB>>", "173": "<(CONTROL_STRUCTURE,else,else)<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.lessThan,dx &lt; 2 * r)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>24</SUB>>", "179": "<(IDENTIFIER,r,2 * r)<SUB>24</SUB>>", "181": "<(LOCAL,double newY: double)<SUB>25</SUB>>", "183": "<(IDENTIFIER,newY,double newY = y[j] + Math.sqrt(hypSq - dx * dx))<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>25</SUB>>", "187": "<(IDENTIFIER,j,y[j] + Math.sqrt(hypSq - dx * dx))<SUB>25</SUB>>", "189": "<(IDENTIFIER,Math,Math.sqrt(hypSq - dx * dx))<SUB>25</SUB>>", "191": "<(IDENTIFIER,hypSq,hypSq - dx * dx)<SUB>25</SUB>>", "193": "<(IDENTIFIER,dx,dx * dx)<SUB>25</SUB>>", "195": "<(CONTROL_STRUCTURE,if (newY &gt; maxY),if (newY &gt; maxY))<SUB>26</SUB>>", "197": "<(IDENTIFIER,newY,newY &gt; maxY)<SUB>26</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "201": "<(IDENTIFIER,maxY,maxY = newY)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.assignment,hit = true)<SUB>28</SUB>>", "205": "<(LITERAL,true,hit = true)<SUB>28</SUB>>", "207": "<(&lt;operator&gt;.logicalNot,!hit)<SUB>32</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>33</SUB>>", "213": "<(IDENTIFIER,i,y[i] = r)<SUB>33</SUB>>", "215": "<(CONTROL_STRUCTURE,else,else)<SUB>34</SUB>>", "217": "<(&lt;operator&gt;.assignment,y[i] = maxY)<SUB>35</SUB>>", "219": "<(IDENTIFIER,y,y[i] = maxY)<SUB>35</SUB>>", "221": "<(IDENTIFIER,maxY,y[i] = maxY)<SUB>35</SUB>>", "222": "<(&lt;operator&gt;.assignment,StringBuffer s = new StringBuffer(&quot;&quot;))<SUB>38</SUB>>", "224": "<(&lt;operator&gt;.alloc,new StringBuffer(&quot;&quot;))<SUB>38</SUB>>", "8": "<(IDENTIFIER,s,new StringBuffer(&quot;&quot;))<SUB>38</SUB>>", "227": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>39</SUB>>", "229": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>39</SUB>>", "231": "<(LITERAL,0,int i = 0)<SUB>39</SUB>>", "233": "<(IDENTIFIER,i,i &lt; n)<SUB>39</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,i++)<SUB>39</SUB>>", "237": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "239": "<(IDENTIFIER,s,s.append(y[i] + &quot; &quot;))<SUB>40</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>40</SUB>>", "243": "<(IDENTIFIER,i,y[i] + &quot; &quot;)<SUB>40</SUB>>", "245": "<(println,System.out.println(s.toString().trim()))<SUB>42</SUB>>", "247": "<(IDENTIFIER,System,System.out.println(s.toString().trim()))<SUB>42</SUB>>", "249": "<(trim,s.toString().trim())<SUB>42</SUB>>", "251": "<(IDENTIFIER,s,s.toString())<SUB>42</SUB>>", "253": "<(MODIFIER,STATIC)>"}}