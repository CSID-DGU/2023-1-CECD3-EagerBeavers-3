{"edges": [["23", "24"], ["23", "25"], ["23", "230"], ["23", "231"], ["23", "232"], ["25", "26"], ["25", "4"], ["25", "36"], ["25", "39"], ["25", "40"], ["25", "41"], ["25", "48"], ["25", "49"], ["25", "50"], ["25", "51"], ["25", "6"], ["25", "55"], ["25", "58"], ["25", "59"], ["25", "95"], ["25", "96"], ["25", "99"], ["25", "100"], ["25", "101"], ["25", "109"], ["25", "117"], ["25", "118"], ["25", "119"], ["25", "120"], ["25", "205"], ["25", "8"], ["25", "220"], ["25", "223"], ["25", "225"], ["25", "228"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "32"], ["28", "35"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "3"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "46"], ["44", "45"], ["46", "47"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["58", "5"], ["59", "60"], ["59", "64"], ["60", "61"], ["60", "63"], ["61", "62"], ["64", "65"], ["64", "71"], ["64", "77"], ["64", "84"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "70"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "76"], ["74", "75"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "90"], ["86", "94"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "93"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["103", "106"], ["103", "107"], ["107", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["111", "115"], ["111", "116"], ["113", "114"], ["120", "121"], ["120", "124"], ["121", "122"], ["122", "123"], ["124", "125"], ["124", "129"], ["125", "126"], ["125", "127"], ["127", "128"], ["129", "130"], ["129", "133"], ["129", "136"], ["129", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "148"], ["138", "157"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "186"], ["158", "159"], ["158", "180"], ["159", "160"], ["159", "173"], ["160", "161"], ["160", "168"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "194"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "200"], ["196", "204"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["200", "203"], ["205", "206"], ["205", "215"], ["206", "207"], ["206", "214"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["223", "7"], ["223", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["26", "38"], ["36", "39"], ["39", "44"], ["41", "53"], ["51", "57"], ["55", "58"], ["58", "61"], ["96", "107"], ["101", "113"], ["109", "122"], ["205", "222"], ["220", "223"], ["223", "225"], ["225", "228"], ["228", "232"], ["38", "36"], ["43", "41"], ["53", "51"], ["57", "55"], ["60", "68"], ["60", "96"], ["103", "101"], ["111", "109"], ["121", "127"], ["121", "212"], ["206", "218"], ["215", "205"], ["222", "220"], ["29", "32"], ["32", "26"], ["44", "46"], ["46", "43"], ["61", "60"], ["65", "74"], ["71", "79"], ["77", "89"], ["84", "61"], ["107", "103"], ["113", "111"], ["122", "121"], ["125", "130"], ["207", "206"], ["216", "215"], ["31", "29"], ["67", "65"], ["73", "71"], ["78", "77"], ["127", "125"], ["130", "133"], ["133", "122"], ["133", "144"], ["136", "133"], ["209", "207"], ["218", "216"], ["68", "67"], ["74", "73"], ["79", "78"], ["87", "90"], ["90", "84"], ["139", "153"], ["148", "162"], ["210", "209"], ["89", "87"], ["141", "139"], ["150", "148"], ["158", "189"], ["158", "136"], ["212", "210"], ["142", "145"], ["145", "141"], ["151", "154"], ["154", "150"], ["159", "158"], ["159", "182"], ["180", "158"], ["187", "199"], ["194", "136"], ["144", "142"], ["153", "151"], ["160", "159"], ["160", "176"], ["173", "159"], ["181", "180"], ["188", "187"], ["161", "160"], ["161", "172"], ["168", "160"], ["175", "173"], ["182", "181"], ["189", "188"], ["197", "200"], ["200", "194"], ["162", "161"], ["162", "165"], ["165", "161"], ["170", "168"], ["176", "179"], ["179", "175"], ["199", "197"], ["172", "170"], ["23", "31"], ["24", "232"], ["29", "232"], ["32", "232"], ["32", "232"], ["26", "232"], ["36", "232"], ["39", "232"], ["41", "232"], ["41", "232"], ["41", "232"], ["53", "232"], ["51", "232"], ["51", "232"], ["55", "232"], ["58", "232"], ["61", "232"], ["60", "232"], ["60", "232"], ["96", "232"], ["96", "232"], ["101", "232"], ["101", "232"], ["101", "232"], ["109", "232"], ["111", "232"], ["109", "232"], ["109", "232"], ["122", "232"], ["121", "232"], ["121", "232"], ["209", "232"], ["207", "232"], ["206", "232"], ["205", "232"], ["215", "232"], ["205", "232"], ["205", "232"], ["220", "232"], ["223", "232"], ["225", "232"], ["225", "232"], ["228", "232"], ["228", "232"], ["125", "232"], ["125", "232"], ["125", "232"], ["130", "232"], ["133", "232"], ["133", "232"], ["141", "232"], ["139", "232"], ["139", "232"], ["148", "232"], ["150", "232"], ["148", "232"], ["148", "232"], ["162", "232"], ["161", "232"], ["165", "232"], ["161", "232"], ["160", "232"], ["168", "232"], ["168", "232"], ["160", "232"], ["159", "232"], ["173", "232"], ["173", "232"], ["159", "232"], ["158", "232"], ["180", "232"], ["158", "232"], ["158", "232"], ["187", "232"], ["187", "232"], ["197", "232"], ["200", "232"], ["200", "232"], ["200", "232"], ["200", "232"], ["194", "232"], ["136", "232"], ["65", "232"], ["74", "232"], ["73", "232"], ["71", "232"], ["71", "232"], ["77", "232"], ["77", "232"], ["87", "232"], ["90", "232"], ["90", "232"], ["90", "232"], ["90", "232"], ["84", "232"], ["23", "24"], ["23", "36"], ["43", "41"], ["53", "51"], ["23", "55"], ["23", "96"], ["103", "101"], ["103", "101"], ["103", "101"], ["111", "109"], ["111", "109"], ["111", "109"], ["23", "220"], ["23", "26"], ["29", "26"], ["32", "26"], ["36", "39"], ["23", "39"], ["55", "58"], ["23", "58"], ["206", "205"], ["206", "205"], ["96", "205"], ["125", "205"], ["23", "205"], ["220", "223"], ["23", "223"], ["223", "225"], ["23", "225"], ["207", "225"], ["225", "228"], ["23", "228"], ["23", "29"], ["23", "35"], ["44", "43"], ["46", "43"], ["46", "53"], ["23", "53"], ["61", "60"], ["23", "60"], ["67", "65"], ["67", "65"], ["73", "71"], ["73", "71"], ["23", "77"], ["23", "103"], ["107", "103"], ["23", "111"], ["113", "111"], ["122", "121"], ["127", "125"], ["207", "206"], ["207", "206"], ["23", "206"], ["96", "215"], ["125", "215"], ["23", "215"], ["29", "32"], ["23", "32"], ["26", "44"], ["23", "44"], ["44", "46"], ["23", "46"], ["51", "61"], ["23", "61"], ["58", "84"], ["23", "84"], ["87", "84"], ["90", "84"], ["23", "107"], ["23", "113"], ["58", "122"], ["127", "122"], ["194", "122"], ["84", "122"], ["23", "122"], ["23", "130"], ["39", "207"], ["23", "207"], ["96", "207"], ["125", "207"], ["68", "67"], ["23", "67"], ["74", "73"], ["23", "73"], ["23", "87"], ["23", "94"], ["122", "127"], ["23", "127"], ["130", "133"], ["136", "133"], ["23", "133"], ["133", "136"], ["23", "136"], ["125", "139"], ["101", "139"], ["125", "148"], ["109", "148"], ["96", "209"], ["125", "209"], ["23", "209"], ["53", "68"], ["74", "68"], ["23", "68"], ["68", "74"], ["23", "74"], ["87", "90"], ["23", "90"], ["65", "90"], ["71", "90"], ["125", "141"], ["101", "141"], ["125", "150"], ["109", "150"], ["159", "158"], ["159", "158"], ["180", "158"], ["23", "187"], ["160", "159"], ["160", "159"], ["173", "159"], ["173", "159"], ["187", "180"], ["127", "194"], ["23", "194"], ["197", "194"], ["200", "194"], ["161", "160"], ["161", "160"], ["168", "160"], ["168", "160"], ["148", "173"], ["165", "173"], ["23", "173"], ["23", "197"], ["23", "204"], ["162", "161"], ["162", "161"], ["165", "161"], ["165", "161"], ["162", "168"], ["23", "168"], ["41", "168"], ["197", "200"], ["23", "200"], ["162", "200"], ["168", "200"], ["148", "200"], ["165", "200"], ["173", "200"], ["139", "162"], ["23", "162"], ["148", "165"], ["23", "165"], ["60", "68"], ["60", "60"], ["60", "73"], ["60", "77"], ["60", "84"], ["60", "67"], ["60", "74"], ["60", "87"], ["60", "90"], ["60", "79"], ["60", "61"], ["60", "89"], ["60", "65"], ["60", "71"], ["60", "78"], ["121", "121"], ["121", "130"], ["121", "127"], ["121", "122"], ["121", "125"], ["121", "133"], ["133", "136"], ["133", "154"], ["133", "145"], ["133", "161"], ["133", "150"], ["133", "151"], ["133", "162"], ["133", "153"], ["133", "144"], ["133", "148"], ["133", "139"], ["133", "158"], ["133", "160"], ["133", "141"], ["133", "142"], ["133", "159"], ["133", "133"], ["158", "188"], ["158", "197"], ["158", "189"], ["158", "187"], ["158", "194"], ["158", "200"], ["158", "199"], ["159", "181"], ["159", "182"], ["159", "180"], ["160", "179"], ["160", "173"], ["160", "176"], ["160", "175"], ["161", "168"], ["161", "170"], ["161", "172"], ["162", "165"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(IDENTIFIER,Reader,init(new FileInputStream(&quot;input.txt&quot;)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new FileInputStream(&quot;input.txt&quot;))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new FileInputStream(&quot;input.txt&quot;))>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "36": "<(&lt;operator&gt;.assignment,StringBuilder s = new StringBuilder())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "3": "<(IDENTIFIER,s,new StringBuilder())<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,boolean[][] vis = new boolean[Reader.nextInt()][Reader.nextInt()])<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.alloc,new boolean[Reader.nextInt()][Reader.nextInt()])>", "45": "<(IDENTIFIER,Reader,nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,Reader,nextInt())<SUB>4</SUB>>", "49": "<(LOCAL,int r: int)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>5</SUB>>", "53": "<(nextInt,nextInt())<SUB>5</SUB>>", "6": "<(LOCAL,Queue&lt;Point&gt; q: ANY)<SUB>6</SUB>>", "56": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;Point&gt;())<SUB>6</SUB>>", "58": "<(&lt;init&gt;,new LinkedList&lt;Point&gt;())<SUB>6</SUB>>", "59": "<(CONTROL_STRUCTURE,while (k-- &gt; 0),while (k-- &gt; 0))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.postDecrement,k--)<SUB>7</SUB>>", "63": "<(LITERAL,0,k-- &gt; 0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,r = Reader.nextInt() - 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.subtraction,Reader.nextInt() - 1)<SUB>8</SUB>>", "69": "<(IDENTIFIER,Reader,nextInt())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,c = Reader.nextInt() - 1)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.subtraction,Reader.nextInt() - 1)<SUB>9</SUB>>", "75": "<(IDENTIFIER,Reader,nextInt())<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,vis[r][c] = true)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,vis[r])<SUB>10</SUB>>", "81": "<(IDENTIFIER,r,vis[r][c] = true)<SUB>10</SUB>>", "83": "<(LITERAL,true,vis[r][c] = true)<SUB>10</SUB>>", "85": "<(IDENTIFIER,q,add(new Point(r, c)))<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "89": "<(&lt;operator&gt;.alloc,new Point(r, c))<SUB>11</SUB>>", "91": "<(IDENTIFIER,$obj3,new Point(r, c))>", "93": "<(IDENTIFIER,c,new Point(r, c))<SUB>11</SUB>>", "95": "<(LOCAL,Point end: ANY)<SUB>13</SUB>>", "97": "<(IDENTIFIER,end,ANY end = null)<SUB>13</SUB>>", "99": "<(LOCAL,int[] x: int[])<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int[] x = { 0, 0, 1, -1 })<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.arrayInitializer,{ 0, 0, 1, -1 })<SUB>14</SUB>>", "105": "<(LITERAL,0,{ 0, 0, 1, -1 })<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.assignment,int[] y = { 1, -1, 0, 0 })<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.arrayInitializer,{ 1, -1, 0, 0 })<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.minus,-1)<SUB>14</SUB>>", "115": "<(LITERAL,0,{ 1, -1, 0, 0 })<SUB>14</SUB>>", "117": "<(LOCAL,int a: int)<SUB>15</SUB>>", "119": "<(LOCAL,int i: int)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>16</SUB>>", "123": "<(IDENTIFIER,q,isEmpty())<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.assignment,end = poll())<SUB>17</SUB>>", "127": "<(poll,poll())<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; 4); i++),for (i = 0; Some(i &lt; 4); i++))<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,i = 0)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>18</SUB>>", "135": "<(LITERAL,4,i &lt; 4)<SUB>18</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,a = end.x + x[i])<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.addition,end.x + x[i])<SUB>19</SUB>>", "143": "<(IDENTIFIER,end,end.x + x[i])<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>19</SUB>>", "147": "<(IDENTIFIER,i,end.x + x[i])<SUB>19</SUB>>", "149": "<(IDENTIFIER,b,b = end.y + y[i])<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,end.y)<SUB>20</SUB>>", "153": "<(FIELD_IDENTIFIER,y,y)<SUB>20</SUB>>", "155": "<(IDENTIFIER,y,end.y + y[i])<SUB>20</SUB>>", "157": "<(CONTROL_STRUCTURE,if (a &gt;= 0 &amp;&amp; b &gt;= 0 &amp;&amp; a &lt; vis.length &amp;&amp; b &lt; vis[a].length &amp;&amp; !vis[a][b]),if (a &gt;= 0 &amp;&amp; b &gt;= 0 &amp;&amp; a &lt; vis.length &amp;&amp; b &lt; vis[a].length &amp;&amp; !vis[a][b]))<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.logicalAnd,a &gt;= 0 &amp;&amp; b &gt;= 0 &amp;&amp; a &lt; vis.length &amp;&amp; b &lt; vis[a].length)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.logicalAnd,a &gt;= 0 &amp;&amp; b &gt;= 0)<SUB>21</SUB>>", "163": "<(IDENTIFIER,a,a &gt;= 0)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.greaterEqualsThan,b &gt;= 0)<SUB>21</SUB>>", "167": "<(LITERAL,0,b &gt;= 0)<SUB>21</SUB>>", "169": "<(IDENTIFIER,a,a &lt; vis.length)<SUB>21</SUB>>", "171": "<(IDENTIFIER,vis,a &lt; vis.length)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.lessThan,b &lt; vis[a].length)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.fieldAccess,vis[a].length)<SUB>21</SUB>>", "177": "<(IDENTIFIER,vis,b &lt; vis[a].length)<SUB>21</SUB>>", "179": "<(FIELD_IDENTIFIER,length,length)<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,vis[a][b])<SUB>21</SUB>>", "183": "<(IDENTIFIER,vis,!vis[a][b])<SUB>21</SUB>>", "185": "<(IDENTIFIER,b,!vis[a][b])<SUB>21</SUB>>", "187": "<(&lt;operator&gt;.assignment,vis[a][b] = true)<SUB>22</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,vis[a])<SUB>22</SUB>>", "191": "<(IDENTIFIER,a,vis[a][b] = true)<SUB>22</SUB>>", "193": "<(LITERAL,true,vis[a][b] = true)<SUB>22</SUB>>", "195": "<(IDENTIFIER,q,add(new Point(a, b)))<SUB>23</SUB>>", "197": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "199": "<(&lt;operator&gt;.alloc,new Point(a, b))<SUB>23</SUB>>", "201": "<(IDENTIFIER,$obj4,new Point(a, b))>", "203": "<(IDENTIFIER,b,new Point(a, b))<SUB>23</SUB>>", "205": "<(append,append(end.y + 1))<SUB>27</SUB>>", "207": "<(append,append(end.x + 1))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.addition,end.x + 1)<SUB>27</SUB>>", "211": "<(IDENTIFIER,end,end.x + 1)<SUB>27</SUB>>", "213": "<(LITERAL,1,end.x + 1)<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.addition,end.y + 1)<SUB>27</SUB>>", "217": "<(IDENTIFIER,end,end.y + 1)<SUB>27</SUB>>", "219": "<(LITERAL,1,end.y + 1)<SUB>27</SUB>>", "220": "<(&lt;operator&gt;.assignment,ANY p = new PrintWriter(&quot;output.txt&quot;))<SUB>28</SUB>>", "222": "<(&lt;operator&gt;.alloc,new PrintWriter(&quot;output.txt&quot;))<SUB>28</SUB>>", "7": "<(IDENTIFIER,p,new PrintWriter(&quot;output.txt&quot;))<SUB>28</SUB>>", "225": "<(println,println(s))<SUB>29</SUB>>", "227": "<(IDENTIFIER,s,println(s))<SUB>29</SUB>>", "229": "<(IDENTIFIER,p,close())<SUB>30</SUB>>", "231": "<(MODIFIER,STATIC)>"}}