{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "67"], ["21", "68"], ["21", "71"], ["21", "72"], ["21", "75"], ["21", "146"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "103"], ["77", "106"], ["77", "139"], ["77", "141"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "94"], ["90", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["97", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "114"], ["106", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "130"], ["118", "119"], ["118", "123"], ["119", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "66"], ["62", "68"], ["68", "72"], ["72", "76"], ["146", "155"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "59"], ["47", "44"], ["59", "57"], ["64", "62"], ["76", "80"], ["76", "149"], ["147", "150"], ["150", "146"], ["28", "26"], ["50", "47"], ["66", "64"], ["103", "108"], ["139", "145"], ["141", "76"], ["149", "147"], ["51", "54"], ["54", "50"], ["80", "83"], ["83", "91"], ["83", "103"], ["86", "83"], ["108", "111"], ["111", "120"], ["111", "139"], ["114", "111"], ["143", "141"], ["145", "143"], ["90", "100"], ["90", "86"], ["118", "131"], ["118", "114"], ["91", "90"], ["95", "86"], ["119", "118"], ["119", "125"], ["123", "118"], ["131", "135"], ["134", "114"], ["97", "95"], ["120", "119"], ["124", "123"], ["135", "134"], ["100", "97"], ["125", "124"], ["19", "24"], ["20", "155"], ["22", "155"], ["25", "155"], ["25", "155"], ["32", "155"], ["30", "155"], ["30", "155"], ["35", "155"], ["35", "155"], ["35", "155"], ["41", "155"], ["44", "155"], ["44", "155"], ["57", "155"], ["59", "155"], ["57", "155"], ["57", "155"], ["62", "155"], ["62", "155"], ["62", "155"], ["68", "155"], ["72", "155"], ["72", "155"], ["146", "155"], ["150", "155"], ["146", "155"], ["146", "155"], ["103", "155"], ["103", "155"], ["108", "155"], ["111", "155"], ["111", "155"], ["111", "155"], ["139", "155"], ["141", "155"], ["141", "155"], ["141", "155"], ["119", "155"], ["118", "155"], ["124", "155"], ["123", "155"], ["118", "155"], ["118", "155"], ["131", "155"], ["131", "155"], ["134", "155"], ["134", "155"], ["114", "155"], ["90", "155"], ["90", "155"], ["97", "155"], ["95", "155"], ["95", "155"], ["86", "155"], ["50", "155"], ["54", "155"], ["50", "155"], ["50", "155"], ["47", "155"], ["97", "155"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["59", "57"], ["19", "68"], ["19", "72"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "76"], ["150", "146"], ["150", "146"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["44", "59"], ["19", "59"], ["19", "103"], ["68", "150"], ["139", "150"], ["19", "150"], ["19", "80"], ["19", "108"], ["68", "139"], ["19", "139"], ["32", "54"], ["19", "54"], ["80", "83"], ["86", "83"], ["19", "83"], ["59", "83"], ["111", "83"], ["83", "86"], ["19", "86"], ["108", "111"], ["114", "111"], ["19", "111"], ["83", "111"], ["111", "114"], ["19", "114"], ["57", "90"], ["119", "90"], ["134", "90"], ["97", "95"], ["97", "95"], ["97", "95"], ["119", "118"], ["123", "118"], ["123", "118"], ["19", "131"], ["19", "134"], ["57", "119"], ["134", "119"], ["90", "119"], ["124", "123"], ["124", "123"], ["19", "123"], ["19", "97"], ["62", "97"], ["141", "97"], ["95", "97"], ["35", "97"], ["124", "97"], ["50", "97"], ["35", "124"], ["97", "124"], ["50", "124"], ["62", "124"], ["141", "124"], ["95", "124"], ["19", "124"], ["44", "47"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["76", "141"], ["76", "145"], ["76", "103"], ["76", "76"], ["76", "143"], ["76", "80"], ["76", "83"], ["76", "139"], ["76", "108"], ["76", "111"], ["83", "91"], ["83", "90"], ["83", "83"], ["83", "86"], ["111", "120"], ["111", "114"], ["111", "119"], ["111", "118"], ["111", "111"], ["90", "95"], ["90", "97"], ["90", "100"], ["118", "131"], ["118", "134"], ["118", "135"], ["119", "123"], ["119", "124"], ["119", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] nums = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,nums[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,boolean[] visited = new boolean[n])<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.alloc,new boolean[n])>", "61": "<(LOCAL,int min: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>10</SUB>>", "65": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>10</SUB>>", "67": "<(LOCAL,int a: int)<SUB>11</SUB>>", "69": "<(IDENTIFIER,a,int a = 0)<SUB>11</SUB>>", "71": "<(LOCAL,boolean cont: boolean)<SUB>12</SUB>>", "73": "<(IDENTIFIER,cont,boolean cont = true)<SUB>12</SUB>>", "75": "<(CONTROL_STRUCTURE,while (cont),while (cont))<SUB>13</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "79": "<(LOCAL,int i: int)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "85": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "89": "<(CONTROL_STRUCTURE,if (!visited[i]),if (!visited[i]))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,visited[i])<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,!visited[i])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,min = Math.min(min, nums[i]))<SUB>16</SUB>>", "97": "<(min,Math.min(min, nums[i]))<SUB>16</SUB>>", "99": "<(IDENTIFIER,min,Math.min(min, nums[i]))<SUB>16</SUB>>", "101": "<(IDENTIFIER,nums,Math.min(min, nums[i]))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.assignment,cont = false)<SUB>20</SUB>>", "105": "<(LITERAL,false,cont = false)<SUB>20</SUB>>", "107": "<(LOCAL,int i: int)<SUB>21</SUB>>", "109": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>21</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>21</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "117": "<(CONTROL_STRUCTURE,if (!visited[i] &amp;&amp; nums[i] % min == 0),if (!visited[i] &amp;&amp; nums[i] % min == 0))<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.logicalNot,!visited[i])<SUB>22</SUB>>", "121": "<(IDENTIFIER,visited,!visited[i])<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.equals,nums[i] % min == 0)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,i,nums[i] % min)<SUB>22</SUB>>", "129": "<(LITERAL,0,nums[i] % min == 0)<SUB>22</SUB>>", "131": "<(&lt;operator&gt;.assignment,cont = true)<SUB>23</SUB>>", "133": "<(LITERAL,true,cont = true)<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,visited[i])<SUB>24</SUB>>", "137": "<(IDENTIFIER,i,visited[i] = true)<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,a++)<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.assignment,min = Integer.MAX_VALUE)<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>28</SUB>>", "145": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>28</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "151": "<(IDENTIFIER,a,a - 1)<SUB>30</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}