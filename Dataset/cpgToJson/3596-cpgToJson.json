{"edges": [["23", "24"], ["23", "25"], ["23", "240"], ["23", "241"], ["23", "242"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "31"], ["25", "34"], ["25", "43"], ["25", "44"], ["25", "45"], ["25", "49"], ["25", "53"], ["25", "54"], ["25", "8"], ["25", "59"], ["25", "62"], ["25", "63"], ["25", "64"], ["25", "68"], ["25", "102"], ["25", "103"], ["25", "104"], ["25", "105"], ["25", "108"], ["25", "112"], ["25", "116"], ["25", "229"], ["25", "238"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "39"], ["35", "42"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "7"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "73"], ["69", "70"], ["69", "72"], ["70", "71"], ["73", "74"], ["73", "75"], ["73", "76"], ["73", "82"], ["73", "88"], ["73", "95"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "87"], ["85", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["118", "119"], ["120", "121"], ["120", "122"], ["120", "123"], ["120", "124"], ["120", "128"], ["120", "133"], ["120", "138"], ["120", "157"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "146"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["157", "162"], ["157", "165"], ["157", "167"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "170"], ["167", "177"], ["167", "184"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "208"], ["185", "186"], ["185", "201"], ["186", "187"], ["186", "198"], ["187", "188"], ["187", "195"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["208", "209"], ["208", "222"], ["209", "210"], ["209", "215"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["229", "232"], ["229", "235"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["26", "29"], ["29", "33"], ["31", "38"], ["34", "47"], ["45", "51"], ["49", "56"], ["54", "61"], ["59", "62"], ["62", "66"], ["64", "70"], ["105", "110"], ["108", "114"], ["112", "118"], ["229", "238"], ["238", "242"], ["28", "26"], ["33", "31"], ["47", "45"], ["51", "49"], ["56", "54"], ["61", "59"], ["66", "64"], ["69", "79"], ["69", "105"], ["110", "108"], ["114", "112"], ["117", "126"], ["117", "232"], ["232", "235"], ["235", "229"], ["36", "39"], ["39", "34"], ["70", "69"], ["76", "85"], ["82", "91"], ["88", "97"], ["95", "70"], ["118", "117"], ["124", "130"], ["128", "135"], ["133", "141"], ["38", "36"], ["78", "76"], ["84", "82"], ["90", "88"], ["96", "95"], ["126", "124"], ["130", "128"], ["135", "133"], ["139", "151"], ["139", "159"], ["146", "159"], ["159", "162"], ["162", "118"], ["162", "174"], ["165", "162"], ["79", "78"], ["85", "84"], ["91", "90"], ["97", "96"], ["140", "139"], ["148", "146"], ["170", "181"], ["177", "189"], ["141", "140"], ["149", "154"], ["154", "148"], ["172", "170"], ["179", "177"], ["185", "211"], ["185", "165"], ["151", "149"], ["174", "172"], ["181", "179"], ["186", "185"], ["186", "203"], ["201", "185"], ["209", "225"], ["222", "165"], ["187", "186"], ["187", "198"], ["198", "186"], ["202", "201"], ["210", "217"], ["215", "209"], ["224", "222"], ["188", "187"], ["188", "195"], ["195", "187"], ["203", "202"], ["211", "210"], ["216", "215"], ["225", "224"], ["189", "188"], ["189", "192"], ["192", "188"], ["217", "216"], ["23", "28"], ["24", "242"], ["26", "242"], ["29", "242"], ["31", "242"], ["36", "242"], ["39", "242"], ["39", "242"], ["34", "242"], ["45", "242"], ["49", "242"], ["54", "242"], ["56", "242"], ["56", "242"], ["54", "242"], ["54", "242"], ["59", "242"], ["62", "242"], ["66", "242"], ["64", "242"], ["64", "242"], ["70", "242"], ["69", "242"], ["69", "242"], ["105", "242"], ["105", "242"], ["108", "242"], ["112", "242"], ["112", "242"], ["118", "242"], ["117", "242"], ["117", "242"], ["232", "242"], ["229", "242"], ["235", "242"], ["229", "242"], ["229", "242"], ["238", "242"], ["238", "242"], ["124", "242"], ["124", "242"], ["128", "242"], ["128", "242"], ["128", "242"], ["133", "242"], ["135", "242"], ["135", "242"], ["133", "242"], ["133", "242"], ["139", "242"], ["139", "242"], ["139", "242"], ["146", "242"], ["151", "242"], ["154", "242"], ["146", "242"], ["146", "242"], ["159", "242"], ["162", "242"], ["162", "242"], ["172", "242"], ["172", "242"], ["170", "242"], ["170", "242"], ["177", "242"], ["179", "242"], ["179", "242"], ["177", "242"], ["177", "242"], ["189", "242"], ["188", "242"], ["192", "242"], ["188", "242"], ["187", "242"], ["195", "242"], ["195", "242"], ["187", "242"], ["186", "242"], ["198", "242"], ["198", "242"], ["186", "242"], ["185", "242"], ["201", "242"], ["185", "242"], ["185", "242"], ["209", "242"], ["215", "242"], ["209", "242"], ["209", "242"], ["225", "242"], ["225", "242"], ["224", "242"], ["224", "242"], ["222", "242"], ["222", "242"], ["165", "242"], ["76", "242"], ["85", "242"], ["84", "242"], ["82", "242"], ["82", "242"], ["91", "242"], ["91", "242"], ["90", "242"], ["90", "242"], ["88", "242"], ["88", "242"], ["95", "242"], ["95", "242"], ["23", "24"], ["23", "26"], ["23", "31"], ["47", "45"], ["51", "49"], ["56", "54"], ["56", "54"], ["23", "59"], ["66", "64"], ["23", "105"], ["110", "108"], ["114", "112"], ["26", "29"], ["23", "29"], ["31", "34"], ["23", "34"], ["36", "34"], ["39", "34"], ["59", "62"], ["23", "62"], ["34", "229"], ["23", "229"], ["108", "229"], ["151", "229"], ["112", "229"], ["154", "229"], ["229", "238"], ["23", "238"], ["23", "36"], ["23", "42"], ["29", "47"], ["23", "47"], ["47", "51"], ["23", "51"], ["45", "56"], ["23", "56"], ["49", "56"], ["51", "66"], ["23", "66"], ["70", "69"], ["23", "69"], ["78", "76"], ["78", "76"], ["84", "82"], ["84", "82"], ["23", "95"], ["23", "110"], ["23", "114"], ["118", "117"], ["126", "124"], ["130", "128"], ["130", "128"], ["135", "133"], ["135", "133"], ["108", "232"], ["151", "232"], ["23", "232"], ["112", "235"], ["154", "235"], ["23", "235"], ["36", "39"], ["23", "39"], ["64", "70"], ["23", "70"], ["62", "88"], ["23", "88"], ["91", "88"], ["91", "88"], ["82", "88"], ["62", "118"], ["126", "118"], ["222", "118"], ["88", "118"], ["23", "118"], ["23", "159"], ["79", "78"], ["23", "78"], ["85", "84"], ["23", "84"], ["91", "90"], ["91", "90"], ["82", "90"], ["23", "90"], ["118", "126"], ["23", "126"], ["124", "130"], ["23", "130"], ["56", "130"], ["135", "130"], ["198", "130"], ["225", "130"], ["91", "130"], ["130", "135"], ["23", "135"], ["130", "135"], ["95", "139"], ["105", "139"], ["146", "139"], ["23", "139"], ["159", "162"], ["165", "162"], ["23", "162"], ["162", "165"], ["23", "165"], ["128", "170"], ["23", "170"], ["133", "177"], ["23", "177"], ["66", "79"], ["85", "79"], ["23", "79"], ["79", "85"], ["23", "85"], ["76", "91"], ["23", "91"], ["56", "91"], ["133", "154"], ["23", "154"], ["128", "172"], ["23", "172"], ["133", "179"], ["23", "179"], ["186", "185"], ["186", "185"], ["201", "185"], ["201", "185"], ["139", "209"], ["23", "209"], ["128", "151"], ["23", "151"], ["187", "186"], ["187", "186"], ["198", "186"], ["198", "186"], ["209", "201"], ["23", "201"], ["126", "222"], ["23", "222"], ["225", "222"], ["225", "222"], ["177", "222"], ["192", "222"], ["198", "222"], ["188", "187"], ["188", "187"], ["195", "187"], ["195", "187"], ["177", "198"], ["192", "198"], ["23", "198"], ["135", "198"], ["225", "198"], ["139", "215"], ["23", "215"], ["225", "224"], ["225", "224"], ["177", "224"], ["192", "224"], ["198", "224"], ["23", "224"], ["189", "188"], ["189", "188"], ["192", "188"], ["192", "188"], ["189", "195"], ["23", "195"], ["56", "195"], ["189", "225"], ["195", "225"], ["23", "225"], ["135", "225"], ["198", "225"], ["170", "189"], ["23", "189"], ["177", "192"], ["23", "192"], ["69", "96"], ["69", "84"], ["69", "85"], ["69", "69"], ["69", "95"], ["69", "76"], ["69", "97"], ["69", "91"], ["69", "90"], ["69", "79"], ["69", "88"], ["69", "70"], ["69", "82"], ["69", "78"], ["117", "128"], ["117", "162"], ["117", "130"], ["117", "118"], ["117", "139"], ["117", "141"], ["117", "159"], ["117", "140"], ["117", "126"], ["117", "135"], ["117", "117"], ["117", "124"], ["117", "133"], ["139", "154"], ["139", "146"], ["139", "149"], ["139", "151"], ["139", "148"], ["162", "188"], ["162", "179"], ["162", "185"], ["162", "189"], ["162", "162"], ["162", "170"], ["162", "181"], ["162", "187"], ["162", "174"], ["162", "186"], ["162", "177"], ["162", "165"], ["162", "172"], ["185", "225"], ["185", "215"], ["185", "209"], ["185", "224"], ["185", "210"], ["185", "217"], ["185", "211"], ["185", "216"], ["185", "222"], ["186", "202"], ["186", "201"], ["186", "203"], ["187", "198"], ["188", "195"], ["189", "192"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(&quot;input.txt&quot;))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(new FileWriter(&quot;output.txt&quot;)))<SUB>4</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "37": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "39": "<(&lt;init&gt;,new FileWriter(&quot;output.txt&quot;))<SUB>4</SUB>>", "41": "<(LITERAL,&quot;output.txt&quot;,new FileWriter(&quot;output.txt&quot;))<SUB>4</SUB>>", "43": "<(LOCAL,int N: int)<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>8</SUB>>", "47": "<(nextInt,nextInt())<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,int M = nextInt())<SUB>8</SUB>>", "51": "<(nextInt,nextInt())<SUB>8</SUB>>", "53": "<(LOCAL,int[][] dist: int[][])<SUB>9</SUB>>", "55": "<(IDENTIFIER,dist,int[][] dist = new int[N][M])<SUB>9</SUB>>", "57": "<(IDENTIFIER,N,new int[N][M])<SUB>9</SUB>>", "8": "<(LOCAL,Queue&lt;Integer&gt; q: ANY)<SUB>10</SUB>>", "60": "<(IDENTIFIER,q,ANY q = new LinkedList&lt;&gt;())<SUB>10</SUB>>", "62": "<(&lt;init&gt;,new LinkedList&lt;&gt;())<SUB>10</SUB>>", "63": "<(LOCAL,int K: int)<SUB>11</SUB>>", "65": "<(IDENTIFIER,K,int K = nextInt())<SUB>11</SUB>>", "67": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.greaterThan,K-- &gt; 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,K,K--)<SUB>12</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "75": "<(LOCAL,int y: int)<SUB>14</SUB>>", "77": "<(IDENTIFIER,x,int x = sc.nextInt() - 1)<SUB>14</SUB>>", "79": "<(nextInt,nextInt())<SUB>14</SUB>>", "81": "<(LITERAL,1,sc.nextInt() - 1)<SUB>14</SUB>>", "83": "<(IDENTIFIER,y,int y = sc.nextInt() - 1)<SUB>14</SUB>>", "85": "<(nextInt,nextInt())<SUB>14</SUB>>", "87": "<(LITERAL,1,sc.nextInt() - 1)<SUB>14</SUB>>", "89": "<(IDENTIFIER,q,add(x * M + y))<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.multiplication,x * M)<SUB>15</SUB>>", "93": "<(IDENTIFIER,M,x * M)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,dist[x][y] = 1)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,dist[x])<SUB>16</SUB>>", "99": "<(IDENTIFIER,x,dist[x][y] = 1)<SUB>16</SUB>>", "101": "<(LITERAL,1,dist[x][y] = 1)<SUB>16</SUB>>", "103": "<(LOCAL,int ansX: int)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>19</SUB>>", "107": "<(LITERAL,0,int max = 0)<SUB>19</SUB>>", "109": "<(IDENTIFIER,ansX,int ansX = -1)<SUB>19</SUB>>", "111": "<(LITERAL,1,-1)<SUB>19</SUB>>", "113": "<(IDENTIFIER,ansY,int ansY = -1)<SUB>19</SUB>>", "115": "<(LITERAL,1,-1)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.logicalNot,!q.isEmpty())<SUB>20</SUB>>", "119": "<(IDENTIFIER,q,isEmpty())<SUB>20</SUB>>", "121": "<(LOCAL,int u: int)<SUB>22</SUB>>", "123": "<(LOCAL,int y: int)<SUB>22</SUB>>", "125": "<(IDENTIFIER,u,int u = remove())<SUB>22</SUB>>", "127": "<(IDENTIFIER,q,remove())<SUB>22</SUB>>", "129": "<(IDENTIFIER,x,int x = u / M)<SUB>22</SUB>>", "131": "<(IDENTIFIER,u,u / M)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.assignment,int y = u % M)<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.modulo,u % M)<SUB>22</SUB>>", "137": "<(IDENTIFIER,M,u % M)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.greaterThan,dist[x][y] &gt; max)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,dist[x])<SUB>23</SUB>>", "143": "<(IDENTIFIER,x,dist[x][y] &gt; max)<SUB>23</SUB>>", "145": "<(IDENTIFIER,max,dist[x][y] &gt; max)<SUB>23</SUB>>", "147": "<(IDENTIFIER,max,max = dist[ansX = x][ansY = y])<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,dist[ansX = x])<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.assignment,ansX = x)<SUB>24</SUB>>", "153": "<(IDENTIFIER,x,ansX = x)<SUB>24</SUB>>", "155": "<(IDENTIFIER,ansY,ansY = y)<SUB>24</SUB>>", "157": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; 4); ++k),for (int k = 0; Some(k &lt; 4); ++k))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>25</SUB>>", "161": "<(LITERAL,0,int k = 0)<SUB>25</SUB>>", "163": "<(IDENTIFIER,k,k &lt; 4)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.preIncrement,++k)<SUB>25</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "169": "<(LOCAL,int ny: int)<SUB>27</SUB>>", "171": "<(IDENTIFIER,nx,int nx = x + dx[k])<SUB>27</SUB>>", "173": "<(IDENTIFIER,x,x + dx[k])<SUB>27</SUB>>", "175": "<(IDENTIFIER,dx,x + dx[k])<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.assignment,int ny = y + dy[k])<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.addition,y + dy[k])<SUB>27</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dy[k])<SUB>27</SUB>>", "183": "<(IDENTIFIER,k,y + dy[k])<SUB>27</SUB>>", "185": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; ny &gt;= 0 &amp;&amp; nx &lt; N &amp;&amp; ny &lt; M &amp;&amp; dist[nx][ny] == 0)<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.logicalAnd,nx &gt;= 0 &amp;&amp; ny &gt;= 0 &amp;&amp; nx &lt; N)<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.greaterEqualsThan,nx &gt;= 0)<SUB>28</SUB>>", "191": "<(LITERAL,0,nx &gt;= 0)<SUB>28</SUB>>", "193": "<(IDENTIFIER,ny,ny &gt;= 0)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.lessThan,nx &lt; N)<SUB>28</SUB>>", "197": "<(IDENTIFIER,N,nx &lt; N)<SUB>28</SUB>>", "199": "<(IDENTIFIER,ny,ny &lt; M)<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.equals,dist[nx][ny] == 0)<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dist[nx])<SUB>28</SUB>>", "205": "<(IDENTIFIER,nx,dist[nx][ny] == 0)<SUB>28</SUB>>", "207": "<(LITERAL,0,dist[nx][ny] == 0)<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.assignment,dist[nx][ny] = dist[x][y] + 1)<SUB>30</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,dist[nx])<SUB>30</SUB>>", "213": "<(IDENTIFIER,nx,dist[nx][ny] = dist[x][y] + 1)<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.addition,dist[x][y] + 1)<SUB>30</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dist[x])<SUB>30</SUB>>", "219": "<(IDENTIFIER,x,dist[x][y] + 1)<SUB>30</SUB>>", "221": "<(LITERAL,1,dist[x][y] + 1)<SUB>30</SUB>>", "223": "<(IDENTIFIER,q,add(nx * M + ny))<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.multiplication,nx * M)<SUB>31</SUB>>", "227": "<(IDENTIFIER,M,nx * M)<SUB>31</SUB>>", "229": "<(printf,printf(&quot;%d %d\\n&quot;, ansX + 1, ansY + 1))<SUB>36</SUB>>", "231": "<(LITERAL,&quot;%d %d\\n&quot;,printf(&quot;%d %d\\n&quot;, ansX + 1, ansY + 1))<SUB>36</SUB>>", "233": "<(IDENTIFIER,ansX,ansX + 1)<SUB>36</SUB>>", "235": "<(&lt;operator&gt;.addition,ansY + 1)<SUB>36</SUB>>", "237": "<(LITERAL,1,ansY + 1)<SUB>36</SUB>>", "239": "<(IDENTIFIER,out,close())<SUB>37</SUB>>", "241": "<(MODIFIER,STATIC)>"}}