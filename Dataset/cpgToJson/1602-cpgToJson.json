{"edges": [["23", "25"], ["23", "73"], ["23", "74"], ["23", "75"], ["25", "26"], ["25", "27"], ["25", "32"], ["25", "33"], ["25", "4"], ["25", "38"], ["25", "41"], ["25", "6"], ["25", "43"], ["25", "46"], ["25", "8"], ["25", "48"], ["25", "51"], ["25", "52"], ["25", "53"], ["25", "56"], ["25", "71"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["41", "3"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["48", "49"], ["48", "50"], ["51", "7"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "69"], ["66", "70"], ["71", "72"], ["27", "37"], ["33", "40"], ["38", "41"], ["41", "45"], ["43", "46"], ["46", "50"], ["48", "51"], ["51", "53"], ["53", "58"], ["71", "75"], ["29", "27"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["58", "61"], ["61", "66"], ["61", "71"], ["64", "61"], ["66", "64"], ["31", "29"], ["37", "35"], ["23", "31"], ["24", "75"], ["27", "75"], ["27", "75"], ["33", "75"], ["33", "75"], ["38", "75"], ["41", "75"], ["41", "75"], ["41", "75"], ["43", "75"], ["46", "75"], ["46", "75"], ["48", "75"], ["51", "75"], ["51", "75"], ["53", "75"], ["58", "75"], ["61", "75"], ["61", "75"], ["61", "75"], ["71", "75"], ["71", "75"], ["66", "75"], ["66", "75"], ["66", "75"], ["64", "75"], ["23", "24"], ["23", "38"], ["23", "43"], ["23", "48"], ["23", "53"], ["38", "41"], ["23", "41"], ["27", "41"], ["43", "46"], ["23", "46"], ["33", "46"], ["48", "51"], ["23", "51"], ["23", "58"], ["46", "71"], ["66", "71"], ["23", "71"], ["58", "61"], ["64", "61"], ["23", "61"], ["53", "61"], ["66", "64"], ["23", "64"], ["51", "66"], ["23", "66"], ["61", "66"], ["41", "66"], ["46", "66"], ["61", "61"], ["61", "64"], ["61", "66"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY inputStream = System.in)<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "31": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY outputStream = System.out)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(inputStream))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new InputReader(inputStream))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(inputStream))<SUB>4</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>5</SUB>>", "44": "<(IDENTIFIER,out,ANY out = new PrintWriter(outputStream))<SUB>5</SUB>>", "46": "<(&lt;init&gt;,new PrintWriter(outputStream))<SUB>5</SUB>>", "47": "<(IDENTIFIER,outputStream,new PrintWriter(outputStream))<SUB>5</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY solver = new Task())<SUB>6</SUB>>", "50": "<(&lt;operator&gt;.alloc,new Task())<SUB>6</SUB>>", "7": "<(IDENTIFIER,solver,new Task())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int testCount = 1)<SUB>7</SUB>>", "55": "<(LITERAL,1,int testCount = 1)<SUB>7</SUB>>", "57": "<(LOCAL,int i: int)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,int i = 1)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= testCount)<SUB>8</SUB>>", "63": "<(IDENTIFIER,testCount,i &lt;= testCount)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "67": "<(IDENTIFIER,solver,solve(i, in, out))<SUB>9</SUB>>", "69": "<(IDENTIFIER,in,solve(i, in, out))<SUB>9</SUB>>", "71": "<(close,close())<SUB>10</SUB>>", "73": "<(MODIFIER,PUBLIC)>", "75": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}