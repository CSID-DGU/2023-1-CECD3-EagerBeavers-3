{"edges": [["19", "20"], ["19", "21"], ["19", "196"], ["19", "197"], ["19", "198"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "35"], ["21", "36"], ["21", "40"], ["21", "73"], ["21", "74"], ["21", "77"], ["21", "104"], ["21", "105"], ["21", "118"], ["21", "127"], ["21", "142"], ["21", "143"], ["21", "157"], ["21", "158"], ["21", "163"], ["21", "164"], ["21", "175"], ["21", "176"], ["21", "185"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "68"], ["56", "57"], ["56", "67"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["61", "64"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "82"], ["77", "85"], ["77", "87"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["87", "88"], ["88", "89"], ["88", "96"], ["88", "98"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "139"], ["128", "129"], ["128", "138"], ["129", "130"], ["129", "137"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["139", "140"], ["140", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "156"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "153"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["22", "25"], ["25", "29"], ["27", "32"], ["32", "38"], ["36", "42"], ["74", "79"], ["105", "121"], ["118", "134"], ["143", "160"], ["158", "169"], ["164", "179"], ["176", "188"], ["185", "198"], ["24", "22"], ["29", "27"], ["38", "36"], ["42", "45"], ["45", "52"], ["45", "74"], ["48", "45"], ["79", "82"], ["82", "92"], ["82", "108"], ["85", "82"], ["107", "105"], ["120", "118"], ["128", "140"], ["128", "146"], ["145", "143"], ["160", "158"], ["166", "164"], ["178", "176"], ["186", "193"], ["189", "185"], ["51", "48"], ["108", "115"], ["109", "107"], ["121", "124"], ["122", "120"], ["129", "128"], ["140", "146"], ["146", "153"], ["147", "145"], ["167", "172"], ["172", "166"], ["179", "182"], ["180", "178"], ["188", "186"], ["191", "189"], ["52", "60"], ["55", "51"], ["89", "85"], ["89", "100"], ["111", "109"], ["124", "122"], ["130", "129"], ["148", "147"], ["169", "167"], ["182", "180"], ["192", "191"], ["56", "70"], ["68", "55"], ["90", "89"], ["113", "111"], ["132", "130"], ["150", "148"], ["193", "192"], ["57", "56"], ["70", "68"], ["92", "90"], ["100", "108"], ["115", "113"], ["134", "132"], ["153", "150"], ["59", "57"], ["60", "64"], ["61", "59"], ["64", "61"], ["19", "24"], ["20", "198"], ["22", "198"], ["25", "198"], ["29", "198"], ["27", "198"], ["27", "198"], ["32", "198"], ["32", "198"], ["36", "198"], ["36", "198"], ["36", "198"], ["42", "198"], ["74", "198"], ["79", "198"], ["82", "198"], ["82", "198"], ["90", "198"], ["90", "198"], ["89", "198"], ["89", "198"], ["100", "198"], ["100", "198"], ["107", "198"], ["105", "198"], ["105", "198"], ["122", "198"], ["120", "198"], ["118", "198"], ["118", "198"], ["129", "198"], ["128", "198"], ["128", "198"], ["140", "198"], ["150", "198"], ["148", "198"], ["147", "198"], ["145", "198"], ["143", "198"], ["143", "198"], ["160", "198"], ["158", "198"], ["158", "198"], ["166", "198"], ["172", "198"], ["166", "198"], ["164", "198"], ["164", "198"], ["180", "198"], ["182", "198"], ["182", "198"], ["180", "198"], ["178", "198"], ["176", "198"], ["176", "198"], ["185", "198"], ["189", "198"], ["192", "198"], ["191", "198"], ["189", "198"], ["185", "198"], ["185", "198"], ["85", "198"], ["51", "198"], ["59", "198"], ["57", "198"], ["56", "198"], ["55", "198"], ["55", "198"], ["51", "198"], ["51", "198"], ["48", "198"], ["160", "198"], ["19", "20"], ["19", "22"], ["29", "27"], ["27", "32"], ["19", "32"], ["38", "36"], ["19", "74"], ["19", "105"], ["109", "105"], ["109", "105"], ["19", "118"], ["122", "118"], ["122", "118"], ["19", "143"], ["147", "143"], ["147", "143"], ["160", "158"], ["160", "158"], ["36", "164"], ["130", "164"], ["172", "164"], ["172", "164"], ["19", "176"], ["180", "176"], ["180", "176"], ["22", "25"], ["19", "25"], ["19", "42"], ["19", "79"], ["189", "185"], ["189", "185"], ["25", "29"], ["19", "29"], ["19", "38"], ["42", "45"], ["48", "45"], ["19", "45"], ["70", "48"], ["19", "48"], ["56", "51"], ["56", "51"], ["36", "51"], ["79", "82"], ["85", "82"], ["19", "82"], ["82", "85"], ["19", "85"], ["19", "107"], ["109", "107"], ["109", "107"], ["19", "120"], ["122", "120"], ["122", "120"], ["129", "128"], ["129", "128"], ["19", "128"], ["19", "145"], ["147", "145"], ["147", "145"], ["19", "160"], ["143", "160"], ["36", "166"], ["130", "166"], ["172", "166"], ["172", "166"], ["19", "178"], ["180", "178"], ["180", "178"], ["158", "189"], ["19", "189"], ["191", "189"], ["191", "189"], ["61", "109"], ["19", "109"], ["111", "109"], ["111", "109"], ["109", "122"], ["19", "122"], ["124", "122"], ["124", "122"], ["130", "129"], ["130", "129"], ["134", "129"], ["19", "129"], ["118", "140"], ["19", "140"], ["118", "147"], ["140", "147"], ["19", "147"], ["150", "147"], ["150", "147"], ["150", "147"], ["19", "172"], ["118", "172"], ["140", "172"], ["169", "172"], ["172", "180"], ["19", "180"], ["182", "180"], ["182", "180"], ["19", "191"], ["176", "191"], ["56", "55"], ["56", "55"], ["36", "55"], ["90", "89"], ["90", "89"], ["19", "89"], ["19", "111"], ["27", "111"], ["36", "111"], ["105", "124"], ["19", "124"], ["115", "124"], ["111", "130"], ["19", "130"], ["36", "130"], ["111", "130"], ["118", "148"], ["140", "148"], ["19", "148"], ["150", "148"], ["150", "148"], ["150", "148"], ["153", "169"], ["19", "169"], ["164", "182"], ["19", "182"], ["130", "182"], ["19", "192"], ["176", "192"], ["57", "56"], ["57", "56"], ["64", "56"], ["19", "56"], ["32", "90"], ["19", "90"], ["36", "90"], ["51", "90"], ["82", "100"], ["19", "100"], ["122", "150"], ["19", "150"], ["153", "150"], ["153", "150"], ["19", "57"], ["61", "57"], ["61", "57"], ["61", "57"], ["56", "70"], ["19", "70"], ["74", "115"], ["100", "115"], ["19", "115"], ["124", "134"], ["19", "134"], ["129", "153"], ["19", "153"], ["19", "59"], ["61", "59"], ["61", "59"], ["61", "59"], ["19", "61"], ["64", "61"], ["64", "61"], ["45", "64"], ["19", "64"], ["45", "48"], ["45", "68"], ["45", "60"], ["45", "61"], ["45", "64"], ["45", "51"], ["45", "57"], ["45", "52"], ["45", "56"], ["45", "70"], ["45", "45"], ["45", "59"], ["45", "55"], ["82", "89"], ["82", "92"], ["82", "90"], ["128", "140"], ["89", "100"], ["89", "85"], ["89", "82"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new FastReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,double digit = nextDouble())<SUB>3</SUB>>", "29": "<(nextDouble,nextDouble())<SUB>3</SUB>>", "31": "<(LOCAL,double temp: double)<SUB>4</SUB>>", "33": "<(IDENTIFIER,temp,double temp = digit)<SUB>4</SUB>>", "35": "<(LOCAL,long[] seq: long[])<SUB>5</SUB>>", "37": "<(IDENTIFIER,seq,long[] seq = new long[13])<SUB>5</SUB>>", "39": "<(LITERAL,13,new long[13])<SUB>5</SUB>>", "41": "<(LOCAL,int i: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,i,int i = 1)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; 13)<SUB>6</SUB>>", "47": "<(LITERAL,13,i &lt; 13)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,seq[i] = (9 * (long) Math.pow(10, i - 1)) * (i) + seq[i - 1])<SUB>7</SUB>>", "53": "<(IDENTIFIER,seq,seq[i] = (9 * (long) Math.pow(10, i - 1)) * (i) + seq[i - 1])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.addition,(9 * (long) Math.pow(10, i - 1)) * (i) + seq[i - 1])<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.multiplication,9 * (long) Math.pow(10, i - 1))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.cast,(long) Math.pow(10, i - 1))<SUB>7</SUB>>", "61": "<(pow,Math.pow(10, i - 1))<SUB>7</SUB>>", "63": "<(LITERAL,10,Math.pow(10, i - 1))<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i - 1)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,(9 * (long) Math.pow(10, i - 1)) * (i))<SUB>7</SUB>>", "69": "<(IDENTIFIER,seq,(9 * (long) Math.pow(10, i - 1)) * (i) + seq[i - 1])<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i - 1)<SUB>7</SUB>>", "73": "<(LOCAL,int power: int)<SUB>9</SUB>>", "75": "<(IDENTIFIER,power,int power = 0)<SUB>9</SUB>>", "77": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 13); i++),for (int i = 0; Some(i &lt; 13); i++))<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,i &lt; 13)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.greaterThan,temp - seq[i] &gt; 0)<SUB>11</SUB>>", "91": "<(IDENTIFIER,temp,temp - seq[i])<SUB>11</SUB>>", "93": "<(IDENTIFIER,seq,temp - seq[i])<SUB>11</SUB>>", "95": "<(LITERAL,0,temp - seq[i] &gt; 0)<SUB>11</SUB>>", "97": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>12</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "101": "<(IDENTIFIER,power,power = i)<SUB>15</SUB>>", "103": "<(CONTROL_STRUCTURE,break;,break;)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.assignment,long place = (long) Math.ceil(digit - seq[power - 1]))<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.cast,(long) Math.ceil(digit - seq[power - 1]))<SUB>19</SUB>>", "109": "<(ceil,Math.ceil(digit - seq[power - 1]))<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.subtraction,digit - seq[power - 1])<SUB>19</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,seq[power - 1])<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.subtraction,power - 1)<SUB>19</SUB>>", "117": "<(LITERAL,1,power - 1)<SUB>19</SUB>>", "119": "<(IDENTIFIER,place,place = (long) Math.ceil(place / power))<SUB>20</SUB>>", "121": "<(TYPE_REF,long,long)<SUB>20</SUB>>", "123": "<(IDENTIFIER,Math,Math.ceil(place / power))<SUB>20</SUB>>", "125": "<(IDENTIFIER,place,place / power)<SUB>20</SUB>>", "127": "<(CONTROL_STRUCTURE,if ((digit - seq[power - 1]) % power &gt; 0),if ((digit - seq[power - 1]) % power &gt; 0))<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.modulo,(digit - seq[power - 1]) % power)<SUB>21</SUB>>", "131": "<(IDENTIFIER,digit,digit - seq[power - 1])<SUB>21</SUB>>", "133": "<(IDENTIFIER,seq,digit - seq[power - 1])<SUB>21</SUB>>", "135": "<(IDENTIFIER,power,power - 1)<SUB>21</SUB>>", "137": "<(IDENTIFIER,power,(digit - seq[power - 1]) % power)<SUB>21</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "141": "<(IDENTIFIER,place,place++)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,long num = (long) (place + Math.pow(10, power - 1) - 1))<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.cast,(long) (place + Math.pow(10, power - 1) - 1))<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.subtraction,place + Math.pow(10, power - 1) - 1)<SUB>25</SUB>>", "149": "<(IDENTIFIER,place,place + Math.pow(10, power - 1))<SUB>25</SUB>>", "151": "<(IDENTIFIER,Math,Math.pow(10, power - 1))<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.subtraction,power - 1)<SUB>25</SUB>>", "155": "<(LITERAL,1,power - 1)<SUB>25</SUB>>", "157": "<(LOCAL,String num2: java.lang.String)<SUB>26</SUB>>", "159": "<(IDENTIFIER,num2,String num2 = Long.toString(num))<SUB>26</SUB>>", "161": "<(IDENTIFIER,Long,Long.toString(num))<SUB>26</SUB>>", "163": "<(LOCAL,long end: long)<SUB>27</SUB>>", "165": "<(IDENTIFIER,end,long end = seq[power - 1] + place * power)<SUB>27</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,seq[power - 1])<SUB>27</SUB>>", "169": "<(&lt;operator&gt;.subtraction,power - 1)<SUB>27</SUB>>", "171": "<(LITERAL,1,power - 1)<SUB>27</SUB>>", "173": "<(IDENTIFIER,place,place * power)<SUB>27</SUB>>", "175": "<(LOCAL,long answer: long)<SUB>28</SUB>>", "177": "<(IDENTIFIER,answer,long answer = (long) (power - (end - digit)))<SUB>28</SUB>>", "179": "<(TYPE_REF,long,long)<SUB>28</SUB>>", "181": "<(IDENTIFIER,power,power - (end - digit))<SUB>28</SUB>>", "183": "<(IDENTIFIER,end,end - digit)<SUB>28</SUB>>", "185": "<(println,System.out.println(num2.charAt((int) answer - 1)))<SUB>34</SUB>>", "187": "<(IDENTIFIER,System,System.out.println(num2.charAt((int) answer - 1)))<SUB>34</SUB>>", "189": "<(charAt,num2.charAt((int) answer - 1))<SUB>34</SUB>>", "191": "<(&lt;operator&gt;.subtraction,(int) answer - 1)<SUB>34</SUB>>", "193": "<(TYPE_REF,int,int)<SUB>34</SUB>>", "195": "<(LITERAL,1,(int) answer - 1)<SUB>34</SUB>>", "197": "<(MODIFIER,STATIC)>"}}