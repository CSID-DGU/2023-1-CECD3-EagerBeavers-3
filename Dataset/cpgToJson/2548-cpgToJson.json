{"edges": [["21", "23"], ["21", "185"], ["21", "186"], ["21", "187"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "109"], ["23", "181"], ["23", "183"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "39"], ["35", "44"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "65"], ["55", "67"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "76"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "95"], ["86", "102"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["115", "124"], ["115", "159"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "134"], ["124", "136"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "138"], ["136", "145"], ["136", "152"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["165", "174"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["183", "184"], ["24", "30"], ["27", "33"], ["31", "38"], ["34", "48"], ["46", "53"], ["51", "57"], ["181", "183"], ["183", "187"], ["26", "24"], ["28", "27"], ["33", "31"], ["48", "46"], ["53", "51"], ["57", "62"], ["60", "72"], ["60", "111"], ["65", "62"], ["110", "120"], ["110", "181"], ["30", "28"], ["36", "43"], ["39", "34"], ["62", "60"], ["69", "78"], ["111", "110"], ["117", "126"], ["38", "36"], ["41", "39"], ["71", "69"], ["78", "81"], ["81", "91"], ["81", "65"], ["84", "81"], ["119", "117"], ["126", "131"], ["129", "141"], ["129", "161"], ["134", "131"], ["160", "170"], ["160", "181"], ["43", "41"], ["72", "71"], ["88", "98"], ["95", "105"], ["102", "84"], ["120", "119"], ["131", "129"], ["138", "148"], ["145", "155"], ["152", "134"], ["161", "160"], ["167", "177"], ["174", "181"], ["90", "88"], ["97", "95"], ["104", "102"], ["140", "138"], ["147", "145"], ["154", "152"], ["169", "167"], ["176", "174"], ["91", "90"], ["98", "97"], ["105", "104"], ["141", "140"], ["148", "147"], ["155", "154"], ["170", "169"], ["177", "176"], ["21", "26"], ["22", "187"], ["24", "187"], ["27", "187"], ["27", "187"], ["31", "187"], ["36", "187"], ["39", "187"], ["39", "187"], ["39", "187"], ["34", "187"], ["46", "187"], ["46", "187"], ["53", "187"], ["51", "187"], ["51", "187"], ["57", "187"], ["60", "187"], ["60", "187"], ["60", "187"], ["111", "187"], ["110", "187"], ["110", "187"], ["117", "187"], ["120", "187"], ["119", "187"], ["117", "187"], ["117", "187"], ["126", "187"], ["129", "187"], ["129", "187"], ["129", "187"], ["161", "187"], ["160", "187"], ["160", "187"], ["170", "187"], ["169", "187"], ["167", "187"], ["167", "187"], ["177", "187"], ["176", "187"], ["176", "187"], ["174", "187"], ["174", "187"], ["181", "187"], ["183", "187"], ["183", "187"], ["140", "187"], ["138", "187"], ["138", "187"], ["147", "187"], ["145", "187"], ["145", "187"], ["155", "187"], ["154", "187"], ["154", "187"], ["152", "187"], ["152", "187"], ["134", "187"], ["69", "187"], ["71", "187"], ["69", "187"], ["69", "187"], ["78", "187"], ["81", "187"], ["81", "187"], ["81", "187"], ["65", "187"], ["90", "187"], ["88", "187"], ["88", "187"], ["97", "187"], ["95", "187"], ["95", "187"], ["105", "187"], ["104", "187"], ["104", "187"], ["102", "187"], ["102", "187"], ["84", "187"], ["21", "22"], ["21", "24"], ["21", "31"], ["48", "46"], ["53", "51"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["36", "34"], ["39", "34"], ["21", "57"], ["34", "181"], ["174", "181"], ["152", "181"], ["102", "181"], ["21", "181"], ["181", "183"], ["21", "183"], ["21", "36"], ["21", "44"], ["27", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["57", "60"], ["65", "60"], ["21", "60"], ["62", "60"], ["62", "60"], ["72", "65"], ["21", "65"], ["72", "69"], ["72", "69"], ["21", "69"], ["111", "110"], ["111", "110"], ["21", "110"], ["120", "117"], ["120", "117"], ["21", "117"], ["36", "39"], ["21", "39"], ["51", "62"], ["72", "62"], ["21", "62"], ["21", "78"], ["62", "111"], ["21", "111"], ["21", "126"], ["72", "71"], ["72", "71"], ["21", "71"], ["78", "81"], ["84", "81"], ["21", "81"], ["46", "81"], ["91", "81"], ["21", "84"], ["91", "84"], ["91", "88"], ["91", "88"], ["21", "88"], ["120", "119"], ["120", "119"], ["21", "119"], ["126", "129"], ["134", "129"], ["21", "129"], ["131", "129"], ["131", "129"], ["21", "134"], ["141", "134"], ["141", "138"], ["141", "138"], ["21", "138"], ["161", "160"], ["161", "160"], ["21", "160"], ["170", "167"], ["170", "167"], ["21", "167"], ["62", "72"], ["21", "72"], ["60", "72"], ["34", "95"], ["102", "95"], ["21", "95"], ["91", "95"], ["72", "95"], ["95", "102"], ["21", "102"], ["88", "102"], ["69", "102"], ["111", "120"], ["21", "120"], ["46", "131"], ["141", "131"], ["81", "131"], ["21", "131"], ["34", "145"], ["152", "145"], ["102", "145"], ["21", "145"], ["141", "145"], ["117", "145"], ["145", "152"], ["21", "152"], ["138", "152"], ["131", "161"], ["21", "161"], ["34", "174"], ["152", "174"], ["102", "174"], ["21", "174"], ["167", "174"], ["117", "174"], ["91", "90"], ["91", "90"], ["21", "90"], ["91", "97"], ["21", "97"], ["72", "97"], ["88", "104"], ["21", "104"], ["69", "104"], ["141", "140"], ["141", "140"], ["21", "140"], ["141", "147"], ["21", "147"], ["117", "147"], ["138", "154"], ["21", "154"], ["170", "169"], ["170", "169"], ["21", "169"], ["167", "176"], ["21", "176"], ["117", "176"], ["81", "91"], ["21", "91"], ["81", "91"], ["91", "98"], ["21", "98"], ["88", "105"], ["21", "105"], ["131", "141"], ["21", "141"], ["129", "141"], ["141", "148"], ["21", "148"], ["138", "155"], ["21", "155"], ["161", "170"], ["21", "170"], ["167", "177"], ["21", "177"], ["60", "60"], ["60", "81"], ["60", "69"], ["60", "72"], ["60", "65"], ["60", "71"], ["60", "78"], ["60", "62"], ["110", "120"], ["110", "161"], ["110", "131"], ["110", "119"], ["110", "129"], ["110", "160"], ["110", "126"], ["110", "117"], ["81", "98"], ["81", "81"], ["81", "84"], ["81", "102"], ["81", "104"], ["81", "95"], ["81", "97"], ["81", "91"], ["81", "90"], ["81", "88"], ["81", "105"], ["129", "154"], ["129", "145"], ["129", "131"], ["129", "129"], ["129", "134"], ["129", "138"], ["129", "148"], ["129", "152"], ["129", "155"], ["129", "141"], ["129", "140"], ["129", "147"], ["160", "167"], ["160", "169"], ["160", "170"], ["160", "174"], ["160", "176"], ["160", "177"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "39": "<(&lt;init&gt;,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "43": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "45": "<(LOCAL,int n: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "49": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "53": "<(nextInt,nextInt())<SUB>5</SUB>>", "55": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= m / 2); i++),for (int i = 1; Some(i &lt;= m / 2); i++))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>8</SUB>>", "59": "<(LITERAL,1,int i = 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i &lt;= m / 2)<SUB>8</SUB>>", "63": "<(IDENTIFIER,m,m / 2)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i2 = m - i + 1)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.addition,m - i + 1)<SUB>10</SUB>>", "73": "<(IDENTIFIER,m,m - i)<SUB>10</SUB>>", "75": "<(LITERAL,1,m - i + 1)<SUB>10</SUB>>", "77": "<(LOCAL,int j: int)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,int j = 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>12</SUB>>", "83": "<(IDENTIFIER,n,j &lt;= n)<SUB>12</SUB>>", "85": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "87": "<(LOCAL,int j2: int)<SUB>13</SUB>>", "89": "<(IDENTIFIER,j2,int j2 = n - j + 1)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.subtraction,n - j)<SUB>13</SUB>>", "93": "<(IDENTIFIER,j,n - j)<SUB>13</SUB>>", "95": "<(println,println(j + &quot; &quot; + i))<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.addition,j + &quot; &quot; + i)<SUB>15</SUB>>", "99": "<(IDENTIFIER,j,j + &quot; &quot;)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,j + &quot; &quot; + i)<SUB>15</SUB>>", "103": "<(IDENTIFIER,pw,println(j2 + &quot; &quot; + i2))<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.addition,j2 + &quot; &quot;)<SUB>16</SUB>>", "107": "<(LITERAL,&quot; &quot;,j2 + &quot; &quot;)<SUB>16</SUB>>", "109": "<(CONTROL_STRUCTURE,if (m % 2 == 1),if (m % 2 == 1))<SUB>23</SUB>>", "111": "<(&lt;operator&gt;.modulo,m % 2)<SUB>23</SUB>>", "113": "<(LITERAL,2,m % 2)<SUB>23</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i2 = m / 2 + 1)<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.addition,m / 2 + 1)<SUB>24</SUB>>", "121": "<(IDENTIFIER,m,m / 2)<SUB>24</SUB>>", "123": "<(LITERAL,1,m / 2 + 1)<SUB>24</SUB>>", "125": "<(LOCAL,int j: int)<SUB>25</SUB>>", "127": "<(IDENTIFIER,j,int j = 1)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n / 2)<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.division,n / 2)<SUB>25</SUB>>", "133": "<(LITERAL,2,n / 2)<SUB>25</SUB>>", "135": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "137": "<(LOCAL,int j2: int)<SUB>26</SUB>>", "139": "<(IDENTIFIER,j2,int j2 = n - j + 1)<SUB>26</SUB>>", "141": "<(&lt;operator&gt;.subtraction,n - j)<SUB>26</SUB>>", "143": "<(IDENTIFIER,j,n - j)<SUB>26</SUB>>", "145": "<(println,println(j + &quot; &quot; + i2))<SUB>28</SUB>>", "147": "<(&lt;operator&gt;.addition,j + &quot; &quot; + i2)<SUB>28</SUB>>", "149": "<(IDENTIFIER,j,j + &quot; &quot;)<SUB>28</SUB>>", "151": "<(IDENTIFIER,i2,j + &quot; &quot; + i2)<SUB>28</SUB>>", "153": "<(IDENTIFIER,pw,println(j2 + &quot; &quot; + i2))<SUB>29</SUB>>", "155": "<(&lt;operator&gt;.addition,j2 + &quot; &quot;)<SUB>29</SUB>>", "157": "<(LITERAL,&quot; &quot;,j2 + &quot; &quot;)<SUB>29</SUB>>", "159": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>31</SUB>>", "161": "<(&lt;operator&gt;.modulo,n % 2)<SUB>31</SUB>>", "163": "<(LITERAL,2,n % 2)<SUB>31</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "167": "<(&lt;operator&gt;.assignment,int j = n / 2 + 1)<SUB>32</SUB>>", "169": "<(&lt;operator&gt;.addition,n / 2 + 1)<SUB>32</SUB>>", "171": "<(IDENTIFIER,n,n / 2)<SUB>32</SUB>>", "173": "<(LITERAL,1,n / 2 + 1)<SUB>32</SUB>>", "175": "<(IDENTIFIER,pw,println(j + &quot; &quot; + i2))<SUB>33</SUB>>", "177": "<(&lt;operator&gt;.addition,j + &quot; &quot;)<SUB>33</SUB>>", "179": "<(LITERAL,&quot; &quot;,j + &quot; &quot;)<SUB>33</SUB>>", "181": "<(flush,flush())<SUB>36</SUB>>", "183": "<(close,close())<SUB>37</SUB>>", "185": "<(MODIFIER,PUBLIC)>", "187": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}