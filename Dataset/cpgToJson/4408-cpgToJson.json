{"edges": [["22", "23"], ["22", "24"], ["22", "512"], ["22", "513"], ["22", "514"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "65"], ["24", "102"], ["24", "103"], ["24", "108"], ["24", "178"], ["24", "179"], ["24", "184"], ["24", "250"], ["24", "265"], ["24", "266"], ["24", "272"], ["24", "289"], ["24", "290"], ["24", "298"], ["24", "452"], ["24", "453"], ["24", "460"], ["24", "461"], ["24", "464"], ["24", "507"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "79"], ["75", "82"], ["76", "77"], ["76", "78"], ["79", "7"], ["79", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "125"], ["118", "128"], ["118", "130"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "132"], ["130", "137"], ["130", "165"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["149", "152"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["204", "206"], ["204", "211"], ["204", "243"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["211", "216"], ["211", "221"], ["211", "223"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["225", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "236"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "264"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["266", "267"], ["266", "268"], ["268", "269"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "274"], ["272", "277"], ["272", "280"], ["272", "282"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["280", "281"], ["282", "283"], ["282", "288"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "296"], ["292", "297"], ["293", "294"], ["293", "295"], ["298", "299"], ["298", "300"], ["298", "303"], ["298", "308"], ["298", "310"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["310", "311"], ["310", "312"], ["310", "315"], ["310", "318"], ["310", "323"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["318", "319"], ["318", "320"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["323", "333"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["329", "330"], ["329", "331"], ["331", "332"], ["333", "334"], ["333", "335"], ["333", "342"], ["333", "345"], ["333", "350"], ["335", "336"], ["335", "337"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "341"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "347"], ["347", "348"], ["347", "349"], ["350", "351"], ["350", "352"], ["350", "360"], ["352", "353"], ["352", "354"], ["354", "355"], ["354", "356"], ["356", "357"], ["356", "358"], ["358", "359"], ["360", "361"], ["360", "370"], ["360", "383"], ["361", "362"], ["361", "363"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "369"], ["370", "371"], ["370", "378"], ["371", "372"], ["371", "377"], ["372", "373"], ["372", "376"], ["373", "374"], ["373", "375"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["383", "384"], ["384", "385"], ["384", "386"], ["384", "389"], ["384", "443"], ["386", "387"], ["386", "388"], ["389", "390"], ["389", "391"], ["389", "402"], ["389", "405"], ["389", "410"], ["391", "392"], ["391", "393"], ["393", "394"], ["393", "399"], ["394", "395"], ["394", "396"], ["396", "397"], ["396", "398"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "404"], ["405", "406"], ["405", "407"], ["407", "408"], ["407", "409"], ["410", "411"], ["410", "412"], ["410", "420"], ["412", "413"], ["412", "414"], ["414", "415"], ["414", "416"], ["416", "417"], ["416", "418"], ["418", "419"], ["420", "421"], ["420", "422"], ["422", "423"], ["422", "424"], ["422", "425"], ["425", "426"], ["425", "427"], ["425", "438"], ["427", "428"], ["427", "437"], ["428", "429"], ["428", "436"], ["429", "430"], ["429", "431"], ["431", "432"], ["431", "433"], ["433", "434"], ["433", "435"], ["438", "439"], ["438", "442"], ["439", "440"], ["439", "441"], ["443", "444"], ["443", "451"], ["444", "445"], ["444", "450"], ["445", "446"], ["445", "449"], ["446", "447"], ["446", "448"], ["453", "454"], ["453", "455"], ["455", "456"], ["455", "459"], ["456", "457"], ["456", "458"], ["461", "462"], ["461", "463"], ["464", "465"], ["464", "466"], ["464", "469"], ["464", "472"], ["464", "474"], ["466", "467"], ["466", "468"], ["469", "470"], ["469", "471"], ["472", "473"], ["474", "475"], ["474", "476"], ["474", "479"], ["474", "482"], ["474", "484"], ["476", "477"], ["476", "478"], ["479", "480"], ["479", "481"], ["482", "483"], ["484", "485"], ["484", "488"], ["485", "486"], ["485", "487"], ["488", "489"], ["488", "490"], ["490", "491"], ["490", "492"], ["490", "493"], ["493", "494"], ["493", "495"], ["493", "502"], ["495", "496"], ["495", "501"], ["496", "497"], ["496", "500"], ["497", "498"], ["497", "499"], ["502", "503"], ["502", "506"], ["503", "504"], ["503", "505"], ["507", "508"], ["507", "511"], ["508", "509"], ["508", "510"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["103", "110"], ["179", "186"], ["266", "274"], ["290", "300"], ["453", "461"], ["461", "466"], ["507", "514"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["67", "70"], ["70", "78"], ["70", "105"], ["73", "70"], ["105", "103"], ["110", "113"], ["113", "122"], ["113", "181"], ["116", "113"], ["181", "179"], ["186", "189"], ["189", "196"], ["189", "251"], ["192", "189"], ["251", "258"], ["251", "269"], ["268", "266"], ["274", "277"], ["277", "285"], ["277", "293"], ["280", "277"], ["282", "280"], ["292", "290"], ["300", "305"], ["303", "312"], ["303", "456"], ["308", "305"], ["455", "453"], ["466", "469"], ["469", "476"], ["469", "510"], ["472", "469"], ["508", "507"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["76", "80"], ["79", "84"], ["120", "125"], ["125", "136"], ["125", "116"], ["128", "125"], ["196", "199"], ["199", "210"], ["199", "192"], ["202", "199"], ["255", "264"], ["264", "514"], ["269", "268"], ["283", "282"], ["293", "292"], ["305", "303"], ["312", "315"], ["315", "331"], ["315", "308"], ["318", "315"], ["456", "455"], ["476", "479"], ["479", "485"], ["479", "472"], ["482", "479"], ["510", "508"], ["32", "30"], ["35", "33"], ["78", "76"], ["80", "79"], ["84", "87"], ["87", "94"], ["87", "73"], ["90", "87"], ["92", "90"], ["122", "120"], ["132", "139"], ["165", "128"], ["206", "213"], ["243", "202"], ["256", "260"], ["259", "255"], ["285", "283"], ["320", "318"], ["325", "339"], ["485", "497"], ["485", "482"], ["488", "482"], ["37", "35"], ["93", "100"], ["98", "92"], ["134", "132"], ["139", "142"], ["142", "156"], ["142", "167"], ["145", "142"], ["147", "145"], ["166", "173"], ["171", "165"], ["208", "206"], ["213", "218"], ["216", "232"], ["216", "245"], ["221", "218"], ["223", "221"], ["244", "243"], ["258", "256"], ["260", "259"], ["327", "325"], ["335", "342"], ["342", "358"], ["342", "320"], ["345", "342"], ["490", "488"], ["94", "93"], ["100", "98"], ["136", "134"], ["149", "147"], ["167", "166"], ["172", "171"], ["210", "208"], ["218", "216"], ["225", "223"], ["245", "244"], ["329", "327"], ["337", "335"], ["347", "345"], ["352", "364"], ["493", "490"], ["152", "149"], ["173", "172"], ["228", "225"], ["331", "329"], ["339", "337"], ["354", "352"], ["361", "373"], ["361", "386"], ["370", "347"], ["495", "503"], ["502", "493"], ["154", "152"], ["230", "228"], ["356", "354"], ["363", "361"], ["371", "379"], ["378", "370"], ["496", "495"], ["503", "502"], ["155", "161"], ["160", "154"], ["231", "237"], ["236", "230"], ["358", "356"], ["364", "367"], ["367", "363"], ["372", "371"], ["379", "378"], ["386", "396"], ["443", "347"], ["497", "496"], ["156", "155"], ["161", "160"], ["232", "231"], ["237", "240"], ["240", "236"], ["373", "372"], ["391", "402"], ["402", "418"], ["402", "446"], ["405", "402"], ["444", "443"], ["393", "391"], ["407", "405"], ["412", "433"], ["420", "407"], ["445", "444"], ["394", "399"], ["399", "393"], ["414", "412"], ["422", "420"], ["446", "445"], ["396", "394"], ["416", "414"], ["425", "422"], ["418", "416"], ["427", "439"], ["438", "425"], ["428", "427"], ["439", "438"], ["429", "428"], ["431", "429"], ["433", "431"], ["22", "27"], ["264", "514"], ["23", "514"], ["25", "514"], ["30", "514"], ["33", "514"], ["33", "514"], ["33", "514"], ["28", "514"], ["39", "514"], ["43", "514"], ["42", "514"], ["42", "514"], ["46", "514"], ["55", "514"], ["57", "514"], ["55", "514"], ["53", "514"], ["53", "514"], ["60", "514"], ["62", "514"], ["60", "514"], ["60", "514"], ["103", "514"], ["103", "514"], ["179", "514"], ["179", "514"], ["179", "514"], ["186", "514"], ["189", "514"], ["189", "514"], ["251", "514"], ["251", "514"], ["255", "514"], ["255", "514"], ["255", "514"], ["196", "514"], ["199", "514"], ["199", "514"], ["192", "514"], ["206", "514"], ["206", "514"], ["213", "514"], ["216", "514"], ["218", "514"], ["216", "514"], ["216", "514"], ["243", "514"], ["243", "514"], ["243", "514"], ["202", "514"], ["225", "514"], ["230", "514"], ["230", "514"], ["228", "514"], ["225", "514"], ["223", "514"], ["223", "514"], ["221", "514"], ["120", "514"], ["120", "514"], ["125", "514"], ["125", "514"], ["116", "514"], ["132", "514"], ["132", "514"], ["139", "514"], ["142", "514"], ["142", "514"], ["142", "514"], ["165", "514"], ["171", "514"], ["171", "514"], ["165", "514"], ["165", "514"], ["128", "514"], ["149", "514"], ["154", "514"], ["154", "514"], ["152", "514"], ["149", "514"], ["147", "514"], ["147", "514"], ["145", "514"], ["76", "514"], ["79", "514"], ["80", "514"], ["79", "514"], ["79", "514"], ["84", "514"], ["87", "514"], ["87", "514"], ["87", "514"], ["73", "514"], ["92", "514"], ["98", "514"], ["100", "514"], ["98", "514"], ["92", "514"], ["92", "514"], ["90", "514"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["62", "60"], ["105", "103"], ["181", "179"], ["268", "266"], ["292", "290"], ["292", "290"], ["455", "453"], ["455", "453"], ["22", "461"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "67"], ["22", "110"], ["22", "186"], ["22", "274"], ["285", "282"], ["22", "282"], ["22", "300"], ["22", "466"], ["461", "507"], ["488", "507"], ["22", "507"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["53", "62"], ["67", "70"], ["73", "70"], ["22", "70"], ["62", "70"], ["70", "73"], ["22", "73"], ["22", "76"], ["70", "105"], ["22", "105"], ["110", "113"], ["116", "113"], ["22", "113"], ["105", "113"], ["125", "113"], ["22", "116"], ["113", "116"], ["113", "120"], ["22", "120"], ["113", "181"], ["22", "181"], ["186", "189"], ["192", "189"], ["22", "189"], ["181", "189"], ["199", "189"], ["189", "192"], ["22", "192"], ["22", "196"], ["189", "251"], ["22", "251"], ["22", "264"], ["269", "268"], ["269", "268"], ["274", "277"], ["280", "277"], ["22", "277"], ["269", "277"], ["22", "280"], ["285", "280"], ["293", "292"], ["293", "292"], ["22", "292"], ["300", "303"], ["308", "303"], ["22", "303"], ["305", "303"], ["305", "303"], ["337", "308"], ["361", "308"], ["394", "308"], ["431", "308"], ["22", "308"], ["303", "308"], ["303", "312"], ["22", "312"], ["320", "318"], ["320", "318"], ["456", "455"], ["456", "455"], ["22", "455"], ["466", "469"], ["472", "469"], ["22", "469"], ["456", "469"], ["479", "469"], ["469", "472"], ["485", "472"], ["22", "472"], ["22", "476"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["76", "79"], ["22", "79"], ["80", "79"], ["22", "84"], ["98", "92"], ["98", "92"], ["120", "125"], ["128", "125"], ["22", "125"], ["113", "125"], ["125", "128"], ["22", "128"], ["55", "132"], ["98", "132"], ["171", "165"], ["132", "165"], ["147", "165"], ["22", "165"], ["196", "199"], ["202", "199"], ["22", "199"], ["189", "199"], ["199", "202"], ["22", "202"], ["55", "206"], ["98", "206"], ["206", "243"], ["223", "243"], ["22", "243"], ["22", "269"], ["251", "269"], ["22", "293"], ["277", "293"], ["22", "305"], ["292", "305"], ["312", "315"], ["318", "315"], ["22", "315"], ["22", "318"], ["266", "325"], ["22", "456"], ["305", "456"], ["476", "479"], ["482", "479"], ["22", "479"], ["469", "479"], ["485", "482"], ["22", "482"], ["490", "488"], ["490", "488"], ["490", "488"], ["43", "80"], ["22", "80"], ["84", "87"], ["90", "87"], ["22", "87"], ["62", "87"], ["87", "90"], ["22", "90"], ["113", "122"], ["22", "122"], ["22", "139"], ["149", "147"], ["149", "147"], ["149", "147"], ["22", "213"], ["225", "223"], ["225", "223"], ["225", "223"], ["22", "285"], ["277", "285"], ["329", "320"], ["22", "320"], ["337", "335"], ["337", "335"], ["347", "345"], ["347", "345"], ["469", "485"], ["22", "485"], ["479", "485"], ["55", "98"], ["22", "98"], ["100", "98"], ["139", "142"], ["145", "142"], ["22", "142"], ["62", "142"], ["87", "142"], ["142", "145"], ["22", "145"], ["132", "171"], ["147", "171"], ["22", "171"], ["213", "216"], ["221", "216"], ["22", "216"], ["218", "216"], ["218", "216"], ["22", "221"], ["216", "221"], ["335", "342"], ["345", "342"], ["22", "342"], ["22", "345"], ["266", "352"], ["493", "490"], ["22", "490"], ["461", "490"], ["488", "490"], ["493", "490"], ["493", "490"], ["79", "100"], ["22", "100"], ["152", "149"], ["22", "149"], ["132", "149"], ["147", "149"], ["152", "149"], ["62", "218"], ["142", "218"], ["87", "218"], ["22", "218"], ["228", "225"], ["22", "225"], ["206", "225"], ["223", "225"], ["228", "225"], ["331", "329"], ["22", "329"], ["361", "337"], ["394", "337"], ["431", "337"], ["22", "337"], ["303", "337"], ["339", "337"], ["339", "337"], ["356", "347"], ["22", "347"], ["165", "370"], ["490", "493"], ["422", "493"], ["225", "493"], ["149", "493"], ["22", "493"], ["443", "493"], ["370", "493"], ["243", "493"], ["149", "152"], ["22", "152"], ["154", "152"], ["154", "152"], ["225", "228"], ["149", "228"], ["22", "228"], ["230", "228"], ["230", "228"], ["315", "331"], ["22", "331"], ["22", "339"], ["325", "339"], ["337", "361"], ["394", "361"], ["431", "361"], ["22", "361"], ["363", "361"], ["363", "361"], ["154", "230"], ["358", "356"], ["22", "356"], ["364", "363"], ["364", "363"], ["367", "363"], ["367", "363"], ["22", "386"], ["386", "443"], ["420", "443"], ["22", "443"], ["342", "358"], ["22", "358"], ["22", "364"], ["339", "364"], ["396", "364"], ["22", "367"], ["352", "367"], ["393", "391"], ["393", "391"], ["407", "405"], ["407", "405"], ["216", "240"], ["22", "240"], ["391", "402"], ["405", "402"], ["22", "402"], ["22", "405"], ["266", "412"], ["422", "420"], ["422", "420"], ["422", "420"], ["394", "393"], ["394", "393"], ["399", "393"], ["399", "393"], ["416", "407"], ["22", "407"], ["361", "394"], ["22", "394"], ["396", "394"], ["396", "394"], ["22", "399"], ["367", "399"], ["425", "422"], ["22", "422"], ["386", "422"], ["420", "422"], ["425", "422"], ["425", "422"], ["22", "396"], ["364", "396"], ["418", "416"], ["22", "416"], ["422", "425"], ["225", "425"], ["149", "425"], ["22", "425"], ["402", "418"], ["22", "418"], ["394", "431"], ["22", "431"], ["433", "431"], ["433", "431"], ["22", "433"], ["399", "433"], ["70", "84"], ["70", "76"], ["70", "80"], ["70", "70"], ["70", "73"], ["70", "87"], ["70", "79"], ["70", "78"], ["113", "120"], ["113", "116"], ["113", "122"], ["113", "113"], ["113", "125"], ["189", "192"], ["189", "196"], ["189", "199"], ["189", "189"], ["251", "292"], ["251", "290"], ["251", "256"], ["251", "469"], ["251", "264"], ["251", "300"], ["251", "456"], ["251", "258"], ["251", "268"], ["251", "510"], ["251", "274"], ["251", "260"], ["251", "466"], ["251", "305"], ["251", "269"], ["251", "507"], ["251", "255"], ["251", "259"], ["251", "293"], ["251", "455"], ["251", "453"], ["251", "508"], ["251", "461"], ["251", "277"], ["251", "303"], ["251", "266"], ["277", "283"], ["277", "282"], ["277", "285"], ["277", "280"], ["277", "277"], ["303", "308"], ["303", "315"], ["303", "305"], ["303", "303"], ["303", "312"], ["469", "469"], ["469", "476"], ["469", "479"], ["469", "472"], ["125", "167"], ["125", "136"], ["125", "128"], ["125", "134"], ["125", "172"], ["125", "132"], ["125", "173"], ["125", "139"], ["125", "171"], ["125", "166"], ["125", "142"], ["125", "165"], ["125", "125"], ["199", "213"], ["199", "243"], ["199", "206"], ["199", "208"], ["199", "202"], ["199", "199"], ["199", "216"], ["199", "244"], ["199", "245"], ["199", "210"], ["199", "218"], ["315", "315"], ["315", "329"], ["315", "335"], ["315", "342"], ["315", "320"], ["315", "337"], ["315", "339"], ["315", "325"], ["315", "318"], ["315", "327"], ["315", "331"], ["479", "479"], ["479", "485"], ["479", "482"], ["87", "93"], ["87", "100"], ["87", "94"], ["87", "98"], ["87", "92"], ["87", "87"], ["87", "90"], ["485", "503"], ["485", "488"], ["485", "490"], ["485", "493"], ["485", "497"], ["485", "502"], ["485", "495"], ["485", "496"], ["142", "154"], ["142", "161"], ["142", "152"], ["142", "160"], ["142", "147"], ["142", "145"], ["142", "149"], ["142", "155"], ["142", "142"], ["142", "156"], ["216", "230"], ["216", "240"], ["216", "228"], ["216", "236"], ["216", "237"], ["216", "216"], ["216", "225"], ["216", "232"], ["216", "223"], ["216", "231"], ["216", "221"], ["216", "218"], ["342", "358"], ["342", "356"], ["342", "364"], ["342", "347"], ["342", "342"], ["342", "361"], ["342", "352"], ["342", "367"], ["342", "354"], ["342", "345"], ["342", "363"], ["361", "370"], ["361", "394"], ["361", "378"], ["361", "396"], ["361", "446"], ["361", "372"], ["361", "402"], ["361", "379"], ["361", "386"], ["361", "373"], ["361", "443"], ["361", "393"], ["361", "371"], ["361", "399"], ["361", "444"], ["361", "391"], ["361", "445"], ["402", "428"], ["402", "418"], ["402", "412"], ["402", "416"], ["402", "414"], ["402", "405"], ["402", "425"], ["402", "429"], ["402", "402"], ["402", "433"], ["402", "420"], ["402", "427"], ["402", "439"], ["402", "422"], ["402", "431"], ["402", "407"], ["402", "438"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int m: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[][] aa = new int[n][m])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[n][m])>", "64": "<(IDENTIFIER,m,new int[n][m])<SUB>6</SUB>>", "66": "<(LOCAL,int i: int)<SUB>7</SUB>>", "68": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "70": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "72": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "74": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "76": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "78": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "81": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "83": "<(LOCAL,int j: int)<SUB>9</SUB>>", "85": "<(IDENTIFIER,j,int j = 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>9</SUB>>", "89": "<(IDENTIFIER,m,j &lt; m)<SUB>9</SUB>>", "91": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,aa[i][j])<SUB>10</SUB>>", "95": "<(IDENTIFIER,aa,aa[i][j] = parseInt(st.nextToken()))<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,aa[i][j] = parseInt(st.nextToken()))<SUB>10</SUB>>", "99": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "101": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.assignment,int[][] dd = new int[n][n])<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.alloc,new int[n][n])>", "107": "<(IDENTIFIER,n,new int[n][n])<SUB>12</SUB>>", "109": "<(LOCAL,int i: int)<SUB>13</SUB>>", "111": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "113": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "115": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "117": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "119": "<(LOCAL,int j: int)<SUB>14</SUB>>", "121": "<(IDENTIFIER,j,int j = i + 1)<SUB>14</SUB>>", "123": "<(IDENTIFIER,i,i + 1)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>14</SUB>>", "127": "<(IDENTIFIER,n,j &lt; n)<SUB>14</SUB>>", "129": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "131": "<(LOCAL,int d: int)<SUB>15</SUB>>", "133": "<(IDENTIFIER,d,int d = Integer.MAX_VALUE)<SUB>15</SUB>>", "135": "<(IDENTIFIER,Integer,int d = Integer.MAX_VALUE)<SUB>15</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int h = 0; Some(h &lt; m); h++),for (int h = 0; Some(h &lt; m); h++))<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.assignment,int h = 0)<SUB>16</SUB>>", "141": "<(LITERAL,0,int h = 0)<SUB>16</SUB>>", "143": "<(IDENTIFIER,h,h &lt; m)<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,h++)<SUB>16</SUB>>", "147": "<(&lt;operator&gt;.assignment,d = Math.min(d, Math.abs(aa[i][h] - aa[j][h])))<SUB>17</SUB>>", "149": "<(min,Math.min(d, Math.abs(aa[i][h] - aa[j][h])))<SUB>17</SUB>>", "151": "<(IDENTIFIER,d,Math.min(d, Math.abs(aa[i][h] - aa[j][h])))<SUB>17</SUB>>", "153": "<(IDENTIFIER,Math,Math.abs(aa[i][h] - aa[j][h]))<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,aa[i][h])<SUB>17</SUB>>", "157": "<(IDENTIFIER,aa,aa[i][h] - aa[j][h])<SUB>17</SUB>>", "159": "<(IDENTIFIER,h,aa[i][h] - aa[j][h])<SUB>17</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,aa[j])<SUB>17</SUB>>", "163": "<(IDENTIFIER,j,aa[i][h] - aa[j][h])<SUB>17</SUB>>", "165": "<(&lt;operator&gt;.assignment,dd[i][j] = dd[j][i] = d)<SUB>18</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,dd[i])<SUB>18</SUB>>", "169": "<(IDENTIFIER,i,dd[i][j] = dd[j][i] = d)<SUB>18</SUB>>", "171": "<(&lt;operator&gt;.assignment,dd[j][i] = d)<SUB>18</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dd[j])<SUB>18</SUB>>", "175": "<(IDENTIFIER,j,dd[j][i] = d)<SUB>18</SUB>>", "177": "<(IDENTIFIER,d,dd[j][i] = d)<SUB>18</SUB>>", "179": "<(&lt;operator&gt;.assignment,int[][] dd_ = new int[n][n])<SUB>20</SUB>>", "181": "<(&lt;operator&gt;.alloc,new int[n][n])>", "183": "<(IDENTIFIER,n,new int[n][n])<SUB>20</SUB>>", "185": "<(LOCAL,int i: int)<SUB>21</SUB>>", "187": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>21</SUB>>", "191": "<(IDENTIFIER,n,i &lt; n)<SUB>21</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "195": "<(LOCAL,int j: int)<SUB>22</SUB>>", "197": "<(IDENTIFIER,j,int j = 0)<SUB>22</SUB>>", "199": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>22</SUB>>", "201": "<(IDENTIFIER,n,j &lt; n)<SUB>22</SUB>>", "203": "<(IDENTIFIER,j,j++)<SUB>22</SUB>>", "205": "<(LOCAL,int d: int)<SUB>23</SUB>>", "207": "<(IDENTIFIER,d,int d = Integer.MAX_VALUE)<SUB>23</SUB>>", "209": "<(IDENTIFIER,Integer,int d = Integer.MAX_VALUE)<SUB>23</SUB>>", "211": "<(CONTROL_STRUCTURE,for (int h = 0; Some(h &lt; m - 1); h++),for (int h = 0; Some(h &lt; m - 1); h++))<SUB>24</SUB>>", "213": "<(&lt;operator&gt;.assignment,int h = 0)<SUB>24</SUB>>", "215": "<(LITERAL,0,int h = 0)<SUB>24</SUB>>", "217": "<(IDENTIFIER,h,h &lt; m - 1)<SUB>24</SUB>>", "219": "<(IDENTIFIER,m,m - 1)<SUB>24</SUB>>", "221": "<(&lt;operator&gt;.postIncrement,h++)<SUB>24</SUB>>", "223": "<(&lt;operator&gt;.assignment,d = Math.min(d, Math.abs(aa[i][h] - aa[j][h + 1])))<SUB>25</SUB>>", "225": "<(min,Math.min(d, Math.abs(aa[i][h] - aa[j][h + 1])))<SUB>25</SUB>>", "227": "<(IDENTIFIER,d,Math.min(d, Math.abs(aa[i][h] - aa[j][h + 1])))<SUB>25</SUB>>", "229": "<(IDENTIFIER,Math,Math.abs(aa[i][h] - aa[j][h + 1]))<SUB>25</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,aa[i][h])<SUB>25</SUB>>", "233": "<(IDENTIFIER,aa,aa[i][h] - aa[j][h + 1])<SUB>25</SUB>>", "235": "<(IDENTIFIER,h,aa[i][h] - aa[j][h + 1])<SUB>25</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,aa[j])<SUB>25</SUB>>", "239": "<(IDENTIFIER,j,aa[i][h] - aa[j][h + 1])<SUB>25</SUB>>", "241": "<(IDENTIFIER,h,h + 1)<SUB>25</SUB>>", "243": "<(&lt;operator&gt;.assignment,dd_[i][j] = d)<SUB>26</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dd_[i])<SUB>26</SUB>>", "247": "<(IDENTIFIER,i,dd_[i][j] = d)<SUB>26</SUB>>", "249": "<(IDENTIFIER,d,dd_[i][j] = d)<SUB>26</SUB>>", "251": "<(&lt;operator&gt;.equals,n == 1)<SUB>28</SUB>>", "253": "<(LITERAL,1,n == 1)<SUB>28</SUB>>", "255": "<(println,System.out.println(dd_[0][0]))<SUB>29</SUB>>", "257": "<(IDENTIFIER,System,System.out.println(dd_[0][0]))<SUB>29</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dd_[0][0])<SUB>29</SUB>>", "261": "<(IDENTIFIER,dd_,System.out.println(dd_[0][0]))<SUB>29</SUB>>", "263": "<(LITERAL,0,System.out.println(dd_[0][0]))<SUB>29</SUB>>", "265": "<(LOCAL,int[] ii: int[])<SUB>32</SUB>>", "267": "<(IDENTIFIER,ii,int[] ii = new int[1 &lt;&lt; n])<SUB>32</SUB>>", "269": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>32</SUB>>", "271": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>32</SUB>>", "273": "<(LOCAL,int i: int)<SUB>33</SUB>>", "275": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "277": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "279": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "281": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,ii[1 &lt;&lt; i])<SUB>34</SUB>>", "285": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>34</SUB>>", "287": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>34</SUB>>", "289": "<(LOCAL,int[][][] dp: int[][][])<SUB>35</SUB>>", "291": "<(IDENTIFIER,dp,int[][][] dp = new int[1 &lt;&lt; n][n][n])<SUB>35</SUB>>", "293": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>35</SUB>>", "295": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>35</SUB>>", "297": "<(IDENTIFIER,n,new int[1 &lt;&lt; n][n][n])<SUB>35</SUB>>", "299": "<(LOCAL,int b: int)<SUB>36</SUB>>", "301": "<(IDENTIFIER,b,int b = 0)<SUB>36</SUB>>", "303": "<(&lt;operator&gt;.lessThan,b &lt; 1 &lt;&lt; n)<SUB>36</SUB>>", "305": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>36</SUB>>", "307": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>36</SUB>>", "309": "<(IDENTIFIER,b,b++)<SUB>36</SUB>>", "311": "<(LOCAL,int u: int)<SUB>37</SUB>>", "313": "<(IDENTIFIER,u,int u = b)<SUB>37</SUB>>", "315": "<(&lt;operator&gt;.greaterThan,u &gt; 0)<SUB>37</SUB>>", "317": "<(LITERAL,0,u &gt; 0)<SUB>37</SUB>>", "319": "<(IDENTIFIER,u,u &amp;= u - 1)<SUB>37</SUB>>", "321": "<(IDENTIFIER,u,u - 1)<SUB>37</SUB>>", "323": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "325": "<(&lt;operator&gt;.assignment,int i = ii[u &amp; -u])<SUB>38</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,ii[u &amp; -u])<SUB>38</SUB>>", "329": "<(&lt;operator&gt;.and,u &amp; -u)<SUB>38</SUB>>", "331": "<(&lt;operator&gt;.minus,-u)<SUB>38</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int v = b ^ 1 &lt;&lt; i; Some(v &gt; 0); v &amp;= v - 1),for (int v = b ^ 1 &lt;&lt; i; Some(v &gt; 0); v &amp;= v - 1))<SUB>39</SUB>>", "335": "<(&lt;operator&gt;.assignment,int v = b ^ 1 &lt;&lt; i)<SUB>39</SUB>>", "337": "<(&lt;operator&gt;.xor,b ^ 1 &lt;&lt; i)<SUB>39</SUB>>", "339": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>39</SUB>>", "341": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>39</SUB>>", "343": "<(IDENTIFIER,v,v &gt; 0)<SUB>39</SUB>>", "345": "<(&lt;operators&gt;.assignmentAnd,v &amp;= v - 1)<SUB>39</SUB>>", "347": "<(&lt;operator&gt;.subtraction,v - 1)<SUB>39</SUB>>", "349": "<(LITERAL,1,v - 1)<SUB>39</SUB>>", "351": "<(LOCAL,int j: int)<SUB>40</SUB>>", "353": "<(IDENTIFIER,j,int j = ii[v &amp; -v])<SUB>40</SUB>>", "355": "<(IDENTIFIER,ii,int j = ii[v &amp; -v])<SUB>40</SUB>>", "357": "<(IDENTIFIER,v,v &amp; -v)<SUB>40</SUB>>", "359": "<(IDENTIFIER,v,-v)<SUB>40</SUB>>", "361": "<(&lt;operator&gt;.equals,b == (1 &lt;&lt; i ^ 1 &lt;&lt; j))<SUB>41</SUB>>", "363": "<(&lt;operator&gt;.xor,1 &lt;&lt; i ^ 1 &lt;&lt; j)<SUB>41</SUB>>", "365": "<(LITERAL,1,1 &lt;&lt; i)<SUB>41</SUB>>", "367": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>41</SUB>>", "369": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>41</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,dp[b][i][j])<SUB>42</SUB>>", "373": "<(&lt;operator&gt;.indexAccess,dp[b])<SUB>42</SUB>>", "375": "<(IDENTIFIER,b,dp[b][i][j] = dd[i][j])<SUB>42</SUB>>", "377": "<(IDENTIFIER,j,dp[b][i][j] = dd[i][j])<SUB>42</SUB>>", "379": "<(&lt;operator&gt;.indexAccess,dd[i])<SUB>42</SUB>>", "381": "<(IDENTIFIER,i,dp[b][i][j] = dd[i][j])<SUB>42</SUB>>", "383": "<(CONTROL_STRUCTURE,else,else)<SUB>43</SUB>>", "385": "<(LOCAL,int x: int)<SUB>44</SUB>>", "387": "<(IDENTIFIER,x,int x = 0)<SUB>44</SUB>>", "389": "<(CONTROL_STRUCTURE,for (int w = b ^ 1 &lt;&lt; i ^ 1 &lt;&lt; j; Some(w &gt; 0); w &amp;= w - 1),for (int w = b ^ 1 &lt;&lt; i ^ 1 &lt;&lt; j; Some(w &gt; 0); w &amp;= w - 1))<SUB>45</SUB>>", "391": "<(&lt;operator&gt;.assignment,int w = b ^ 1 &lt;&lt; i ^ 1 &lt;&lt; j)<SUB>45</SUB>>", "393": "<(&lt;operator&gt;.xor,b ^ 1 &lt;&lt; i ^ 1 &lt;&lt; j)<SUB>45</SUB>>", "395": "<(IDENTIFIER,b,b ^ 1 &lt;&lt; i)<SUB>45</SUB>>", "397": "<(LITERAL,1,1 &lt;&lt; i)<SUB>45</SUB>>", "399": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>45</SUB>>", "401": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>45</SUB>>", "403": "<(IDENTIFIER,w,w &gt; 0)<SUB>45</SUB>>", "405": "<(&lt;operators&gt;.assignmentAnd,w &amp;= w - 1)<SUB>45</SUB>>", "407": "<(&lt;operator&gt;.subtraction,w - 1)<SUB>45</SUB>>", "409": "<(LITERAL,1,w - 1)<SUB>45</SUB>>", "411": "<(LOCAL,int k: int)<SUB>46</SUB>>", "413": "<(IDENTIFIER,k,int k = ii[w &amp; -w])<SUB>46</SUB>>", "415": "<(IDENTIFIER,ii,int k = ii[w &amp; -w])<SUB>46</SUB>>", "417": "<(IDENTIFIER,w,w &amp; -w)<SUB>46</SUB>>", "419": "<(IDENTIFIER,w,-w)<SUB>46</SUB>>", "421": "<(IDENTIFIER,x,x = Math.max(x, Math.min(dp[b ^ 1 &lt;&lt; j][i][k], dd[k][j])))<SUB>47</SUB>>", "423": "<(IDENTIFIER,Math,Math.max(x, Math.min(dp[b ^ 1 &lt;&lt; j][i][k], dd[k][j])))<SUB>47</SUB>>", "425": "<(min,Math.min(dp[b ^ 1 &lt;&lt; j][i][k], dd[k][j]))<SUB>47</SUB>>", "427": "<(&lt;operator&gt;.indexAccess,dp[b ^ 1 &lt;&lt; j][i][k])<SUB>47</SUB>>", "429": "<(&lt;operator&gt;.indexAccess,dp[b ^ 1 &lt;&lt; j])<SUB>47</SUB>>", "431": "<(&lt;operator&gt;.xor,b ^ 1 &lt;&lt; j)<SUB>47</SUB>>", "433": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>47</SUB>>", "435": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>47</SUB>>", "437": "<(IDENTIFIER,k,Math.min(dp[b ^ 1 &lt;&lt; j][i][k], dd[k][j]))<SUB>47</SUB>>", "439": "<(&lt;operator&gt;.indexAccess,dd[k])<SUB>47</SUB>>", "441": "<(IDENTIFIER,k,Math.min(dp[b ^ 1 &lt;&lt; j][i][k], dd[k][j]))<SUB>47</SUB>>", "443": "<(&lt;operator&gt;.assignment,dp[b][i][j] = x)<SUB>49</SUB>>", "445": "<(&lt;operator&gt;.indexAccess,dp[b][i])<SUB>49</SUB>>", "447": "<(IDENTIFIER,dp,dp[b][i][j] = x)<SUB>49</SUB>>", "449": "<(IDENTIFIER,i,dp[b][i][j] = x)<SUB>49</SUB>>", "451": "<(IDENTIFIER,x,dp[b][i][j] = x)<SUB>49</SUB>>", "453": "<(&lt;operator&gt;.assignment,int b = (1 &lt;&lt; n) - 1)<SUB>53</SUB>>", "455": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>53</SUB>>", "457": "<(LITERAL,1,1 &lt;&lt; n)<SUB>53</SUB>>", "459": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>53</SUB>>", "461": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>54</SUB>>", "463": "<(LITERAL,0,int x = 0)<SUB>54</SUB>>", "465": "<(LOCAL,int i: int)<SUB>55</SUB>>", "467": "<(IDENTIFIER,i,int i = 0)<SUB>55</SUB>>", "469": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>55</SUB>>", "471": "<(IDENTIFIER,n,i &lt; n)<SUB>55</SUB>>", "473": "<(IDENTIFIER,i,i++)<SUB>55</SUB>>", "475": "<(LOCAL,int j: int)<SUB>56</SUB>>", "477": "<(IDENTIFIER,j,int j = 0)<SUB>56</SUB>>", "479": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>56</SUB>>", "481": "<(IDENTIFIER,n,j &lt; n)<SUB>56</SUB>>", "483": "<(IDENTIFIER,j,j++)<SUB>56</SUB>>", "485": "<(&lt;operator&gt;.notEquals,i != j)<SUB>57</SUB>>", "487": "<(IDENTIFIER,j,i != j)<SUB>57</SUB>>", "489": "<(IDENTIFIER,x,x = Math.max(x, Math.min(dp[b][i][j], dd_[i][j])))<SUB>58</SUB>>", "491": "<(IDENTIFIER,Math,Math.max(x, Math.min(dp[b][i][j], dd_[i][j])))<SUB>58</SUB>>", "493": "<(min,Math.min(dp[b][i][j], dd_[i][j]))<SUB>58</SUB>>", "495": "<(&lt;operator&gt;.indexAccess,dp[b][i][j])<SUB>58</SUB>>", "497": "<(&lt;operator&gt;.indexAccess,dp[b])<SUB>58</SUB>>", "499": "<(IDENTIFIER,b,Math.min(dp[b][i][j], dd_[i][j]))<SUB>58</SUB>>", "501": "<(IDENTIFIER,j,Math.min(dp[b][i][j], dd_[i][j]))<SUB>58</SUB>>", "503": "<(&lt;operator&gt;.indexAccess,dd_[i])<SUB>58</SUB>>", "505": "<(IDENTIFIER,i,Math.min(dp[b][i][j], dd_[i][j]))<SUB>58</SUB>>", "507": "<(println,System.out.println(x))<SUB>59</SUB>>", "509": "<(IDENTIFIER,System,System.out.println(x))<SUB>59</SUB>>", "511": "<(IDENTIFIER,x,System.out.println(x))<SUB>59</SUB>>", "513": "<(MODIFIER,STATIC)>"}}