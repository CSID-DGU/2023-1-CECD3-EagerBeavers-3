{"edges": [["19", "21"], ["19", "245"], ["19", "246"], ["19", "247"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "49"], ["21", "53"], ["21", "54"], ["21", "63"], ["21", "64"], ["21", "73"], ["21", "122"], ["21", "187"], ["21", "188"], ["21", "191"], ["21", "230"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "42"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "89"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "98"], ["89", "100"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "115"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "147"], ["145", "148"], ["145", "149"], ["145", "150"], ["145", "151"], ["152", "153"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "161"], ["153", "163"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "165"], ["163", "172"], ["163", "173"], ["163", "180"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["191", "196"], ["191", "202"], ["191", "204"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["204", "205"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "216"], ["205", "218"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["230", "231"], ["230", "232"], ["230", "238"], ["232", "233"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["238", "239"], ["239", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["22", "29"], ["25", "46"], ["44", "51"], ["49", "57"], ["54", "67"], ["64", "75"], ["188", "193"], ["24", "22"], ["46", "44"], ["51", "49"], ["56", "54"], ["66", "64"], ["75", "78"], ["78", "87"], ["78", "124"], ["81", "78"], ["124", "127"], ["127", "135"], ["127", "188"], ["130", "127"], ["193", "197"], ["196", "231"], ["196", "207"], ["202", "197"], ["231", "236"], ["231", "243"], ["27", "35"], ["30", "25"], ["57", "60"], ["60", "56"], ["67", "70"], ["70", "66"], ["85", "91"], ["197", "196"], ["197", "200"], ["200", "196"], ["233", "247"], ["29", "27"], ["87", "85"], ["91", "96"], ["94", "103"], ["94", "81"], ["98", "96"], ["135", "138"], ["138", "145"], ["138", "130"], ["141", "138"], ["207", "211"], ["210", "221"], ["210", "202"], ["216", "211"], ["234", "233"], ["240", "247"], ["33", "40"], ["36", "30"], ["96", "94"], ["211", "210"], ["211", "214"], ["214", "210"], ["236", "234"], ["241", "240"], ["35", "33"], ["38", "36"], ["102", "110"], ["102", "98"], ["145", "155"], ["145", "141"], ["220", "226"], ["220", "216"], ["243", "241"], ["40", "38"], ["103", "102"], ["108", "117"], ["115", "98"], ["221", "220"], ["226", "202"], ["109", "108"], ["116", "115"], ["155", "158"], ["158", "169"], ["158", "141"], ["161", "158"], ["110", "109"], ["117", "116"], ["165", "177"], ["173", "182"], ["180", "161"], ["167", "165"], ["175", "173"], ["181", "180"], ["169", "167"], ["177", "175"], ["182", "181"], ["19", "24"], ["20", "247"], ["22", "247"], ["30", "247"], ["33", "247"], ["36", "247"], ["36", "247"], ["36", "247"], ["30", "247"], ["25", "247"], ["44", "247"], ["51", "247"], ["49", "247"], ["49", "247"], ["54", "247"], ["54", "247"], ["64", "247"], ["66", "247"], ["70", "247"], ["66", "247"], ["64", "247"], ["64", "247"], ["188", "247"], ["188", "247"], ["193", "247"], ["197", "247"], ["197", "247"], ["196", "247"], ["200", "247"], ["196", "247"], ["196", "247"], ["233", "247"], ["207", "247"], ["211", "247"], ["211", "247"], ["210", "247"], ["214", "247"], ["210", "247"], ["216", "247"], ["226", "247"], ["226", "247"], ["202", "247"], ["135", "247"], ["138", "247"], ["138", "247"], ["138", "247"], ["130", "247"], ["145", "247"], ["145", "247"], ["155", "247"], ["158", "247"], ["158", "247"], ["141", "247"], ["165", "247"], ["167", "247"], ["165", "247"], ["165", "247"], ["173", "247"], ["175", "247"], ["173", "247"], ["173", "247"], ["180", "247"], ["180", "247"], ["161", "247"], ["87", "247"], ["85", "247"], ["85", "247"], ["91", "247"], ["94", "247"], ["96", "247"], ["94", "247"], ["94", "247"], ["81", "247"], ["102", "247"], ["102", "247"], ["108", "247"], ["108", "247"], ["115", "247"], ["115", "247"], ["98", "247"], ["145", "247"], ["19", "20"], ["19", "22"], ["46", "44"], ["51", "49"], ["56", "54"], ["56", "54"], ["66", "64"], ["66", "64"], ["19", "188"], ["22", "25"], ["19", "25"], ["33", "25"], ["30", "25"], ["19", "75"], ["19", "124"], ["19", "193"], ["19", "231"], ["19", "27"], ["19", "42"], ["25", "46"], ["19", "46"], ["46", "51"], ["19", "51"], ["44", "56"], ["19", "56"], ["49", "56"], ["19", "66"], ["44", "66"], ["49", "66"], ["75", "78"], ["81", "78"], ["19", "78"], ["44", "78"], ["78", "81"], ["19", "81"], ["87", "85"], ["124", "127"], ["130", "127"], ["19", "127"], ["78", "127"], ["145", "127"], ["127", "130"], ["145", "130"], ["19", "130"], ["197", "196"], ["197", "196"], ["200", "196"], ["210", "196"], ["197", "202"], ["19", "202"], ["27", "30"], ["19", "30"], ["33", "30"], ["36", "30"], ["44", "57"], ["19", "57"], ["49", "60"], ["19", "60"], ["19", "67"], ["44", "67"], ["19", "70"], ["49", "70"], ["19", "91"], ["19", "135"], ["193", "197"], ["202", "197"], ["19", "197"], ["127", "197"], ["188", "200"], ["214", "200"], ["226", "200"], ["19", "200"], ["19", "207"], ["19", "233"], ["19", "33"], ["19", "41"], ["51", "87"], ["19", "87"], ["91", "94"], ["98", "94"], ["19", "94"], ["96", "94"], ["103", "98"], ["19", "98"], ["135", "138"], ["141", "138"], ["19", "138"], ["145", "138"], ["49", "138"], ["145", "141"], ["19", "141"], ["211", "210"], ["211", "210"], ["196", "210"], ["214", "210"], ["211", "216"], ["19", "216"], ["19", "240"], ["33", "36"], ["19", "36"], ["85", "96"], ["103", "96"], ["19", "96"], ["207", "211"], ["216", "211"], ["19", "211"], ["138", "211"], ["49", "211"], ["188", "214"], ["200", "214"], ["226", "214"], ["19", "214"], ["103", "102"], ["103", "102"], ["19", "102"], ["19", "108"], ["19", "115"], ["19", "145"], ["127", "145"], ["138", "145"], ["127", "145"], ["138", "145"], ["64", "145"], ["19", "226"], ["96", "103"], ["19", "103"], ["94", "103"], ["19", "155"], ["155", "158"], ["161", "158"], ["19", "158"], ["158", "161"], ["19", "161"], ["145", "165"], ["19", "165"], ["145", "173"], ["19", "173"], ["19", "180"], ["145", "167"], ["19", "167"], ["145", "175"], ["19", "175"], ["78", "94"], ["78", "96"], ["78", "81"], ["78", "85"], ["78", "87"], ["78", "91"], ["78", "78"], ["127", "138"], ["127", "130"], ["127", "127"], ["127", "135"], ["196", "196"], ["196", "197"], ["196", "207"], ["196", "202"], ["196", "210"], ["196", "211"], ["231", "240"], ["231", "243"], ["231", "233"], ["231", "236"], ["231", "234"], ["231", "241"], ["197", "200"], ["94", "94"], ["94", "96"], ["94", "98"], ["94", "102"], ["94", "103"], ["138", "145"], ["138", "138"], ["138", "141"], ["210", "221"], ["210", "220"], ["211", "214"], ["102", "115"], ["102", "108"], ["102", "116"], ["102", "110"], ["102", "117"], ["102", "109"], ["145", "155"], ["145", "158"], ["220", "226"], ["220", "210"], ["220", "211"], ["220", "216"], ["158", "167"], ["158", "169"], ["158", "161"], ["158", "181"], ["158", "173"], ["158", "182"], ["158", "180"], ["158", "158"], ["158", "177"], ["158", "165"], ["158", "175"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj1,new BufferedReader(new InputStreamReader(System.in)))>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "43": "<(LOCAL,int r: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,r,int r = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int c = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(LOCAL,boolean[][] m: boolean[][])<SUB>7</SUB>>", "55": "<(IDENTIFIER,m,boolean[][] m = new boolean[r + 1][c + 1])<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.addition,r + 1)<SUB>7</SUB>>", "59": "<(LITERAL,1,r + 1)<SUB>7</SUB>>", "61": "<(IDENTIFIER,c,c + 1)<SUB>7</SUB>>", "63": "<(LOCAL,boolean[][] inp: boolean[][])<SUB>8</SUB>>", "65": "<(IDENTIFIER,inp,boolean[][] inp = new boolean[r + 1][c + 1])<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.addition,r + 1)<SUB>8</SUB>>", "69": "<(LITERAL,1,r + 1)<SUB>8</SUB>>", "71": "<(IDENTIFIER,c,c + 1)<SUB>8</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r); i++),for (int i = 0; Some(i &lt; r); i++))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "77": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,i &lt; r)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,String s = next())<SUB>10</SUB>>", "87": "<(next,next())<SUB>10</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; s.length()); j++),for (int j = 0; Some(j &lt; s.length()); j++))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "93": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "95": "<(IDENTIFIER,j,j &lt; s.length())<SUB>12</SUB>>", "97": "<(IDENTIFIER,s,s.length())<SUB>12</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "101": "<(CONTROL_STRUCTURE,if (s.charAt(j) == '#'),if (s.charAt(j) == '#'))<SUB>13</SUB>>", "103": "<(charAt,s.charAt(j))<SUB>13</SUB>>", "105": "<(IDENTIFIER,j,s.charAt(j))<SUB>13</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,m[i][j])<SUB>14</SUB>>", "111": "<(IDENTIFIER,m,m[i][j] = true)<SUB>14</SUB>>", "113": "<(IDENTIFIER,j,m[i][j] = true)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.assignment,inp[i][j] = true)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,inp[i])<SUB>15</SUB>>", "119": "<(IDENTIFIER,i,inp[i][j] = true)<SUB>15</SUB>>", "121": "<(LITERAL,true,inp[i][j] = true)<SUB>15</SUB>>", "123": "<(LOCAL,int i: int)<SUB>20</SUB>>", "125": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>20</SUB>>", "129": "<(IDENTIFIER,r,i &lt; r)<SUB>20</SUB>>", "131": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; c); j++),for (int j = 0; Some(j &lt; c); j++))<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "137": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "139": "<(IDENTIFIER,j,j &lt; c)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "145": "<(canPress,canPress(i, j, r, c, inp))<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,canPress(i, j, r, c, inp))<SUB>22</SUB>>", "149": "<(IDENTIFIER,r,canPress(i, j, r, c, inp))<SUB>22</SUB>>", "151": "<(IDENTIFIER,inp,canPress(i, j, r, c, inp))<SUB>22</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; 8); k++),for (int k = 0; Some(k &lt; 8); k++))<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>25</SUB>>", "157": "<(LITERAL,0,int k = 0)<SUB>25</SUB>>", "159": "<(IDENTIFIER,k,k &lt; 8)<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,k++)<SUB>25</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.assignment,int xi = i + dx[k])<SUB>26</SUB>>", "167": "<(&lt;operator&gt;.addition,i + dx[k])<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,dx[k])<SUB>26</SUB>>", "171": "<(IDENTIFIER,k,i + dx[k])<SUB>26</SUB>>", "173": "<(&lt;operator&gt;.assignment,int yi = j + dy[k])<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.addition,j + dy[k])<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dy[k])<SUB>27</SUB>>", "179": "<(IDENTIFIER,k,j + dy[k])<SUB>27</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,m[xi][yi])<SUB>28</SUB>>", "183": "<(IDENTIFIER,m,m[xi][yi] = false)<SUB>28</SUB>>", "185": "<(IDENTIFIER,yi,m[xi][yi] = false)<SUB>28</SUB>>", "187": "<(LOCAL,boolean isLeftAny: boolean)<SUB>34</SUB>>", "189": "<(IDENTIFIER,isLeftAny,boolean isLeftAny = false)<SUB>34</SUB>>", "191": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; r &amp;&amp; !isLeftAny); i++),for (int i = 0; Some(i &lt; r &amp;&amp; !isLeftAny); i++))<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>35</SUB>>", "195": "<(LITERAL,0,int i = 0)<SUB>35</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; r)<SUB>35</SUB>>", "199": "<(IDENTIFIER,r,i &lt; r)<SUB>35</SUB>>", "201": "<(IDENTIFIER,isLeftAny,!isLeftAny)<SUB>35</SUB>>", "203": "<(IDENTIFIER,i,i++)<SUB>35</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; c &amp;&amp; !isLeftAny); j++),for (int j = 0; Some(j &lt; c &amp;&amp; !isLeftAny); j++))<SUB>36</SUB>>", "207": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "209": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "211": "<(&lt;operator&gt;.lessThan,j &lt; c)<SUB>36</SUB>>", "213": "<(IDENTIFIER,c,j &lt; c)<SUB>36</SUB>>", "215": "<(IDENTIFIER,isLeftAny,!isLeftAny)<SUB>36</SUB>>", "217": "<(IDENTIFIER,j,j++)<SUB>36</SUB>>", "219": "<(CONTROL_STRUCTURE,if (m[i][j]),if (m[i][j]))<SUB>37</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,m[i])<SUB>37</SUB>>", "223": "<(IDENTIFIER,i,if (m[i][j]))<SUB>37</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "227": "<(IDENTIFIER,isLeftAny,isLeftAny = true)<SUB>38</SUB>>", "229": "<(CONTROL_STRUCTURE,break;,break;)<SUB>39</SUB>>", "231": "<(IDENTIFIER,isLeftAny,if (isLeftAny))<SUB>43</SUB>>", "233": "<(println,System.out.println(&quot;NO&quot;))<SUB>44</SUB>>", "235": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>44</SUB>>", "237": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>44</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "245": "<(MODIFIER,PUBLIC)>", "247": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}