{"edges": [["19", "20"], ["19", "21"], ["19", "86"], ["19", "87"], ["19", "88"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "36"], ["21", "77"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["36", "37"], ["36", "42"], ["36", "67"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "50"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "62"], ["51", "52"], ["51", "57"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "65"], ["63", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["22", "28"], ["25", "32"], ["30", "38"], ["77", "88"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "47"], ["37", "71"], ["78", "82"], ["81", "77"], ["28", "26"], ["38", "37"], ["43", "53"], ["80", "78"], ["82", "81"], ["45", "43"], ["51", "63"], ["51", "80"], ["69", "74"], ["74", "80"], ["47", "45"], ["52", "51"], ["52", "58"], ["57", "51"], ["63", "65"], ["65", "80"], ["71", "69"], ["53", "52"], ["58", "57"], ["19", "24"], ["20", "88"], ["22", "88"], ["25", "88"], ["25", "88"], ["32", "88"], ["30", "88"], ["30", "88"], ["37", "88"], ["37", "88"], ["71", "88"], ["69", "88"], ["69", "88"], ["74", "88"], ["47", "88"], ["45", "88"], ["43", "88"], ["43", "88"], ["52", "88"], ["51", "88"], ["57", "88"], ["51", "88"], ["51", "88"], ["63", "88"], ["65", "88"], ["77", "88"], ["82", "88"], ["81", "88"], ["81", "88"], ["77", "88"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["69", "77"], ["53", "77"], ["63", "77"], ["19", "77"], ["74", "77"], ["45", "77"], ["58", "77"], ["65", "77"], ["25", "32"], ["19", "32"], ["38", "37"], ["38", "37"], ["19", "37"], ["45", "43"], ["47", "43"], ["47", "43"], ["69", "81"], ["53", "81"], ["63", "81"], ["19", "81"], ["74", "81"], ["45", "81"], ["58", "81"], ["65", "81"], ["30", "38"], ["19", "38"], ["71", "69"], ["71", "69"], ["19", "74"], ["69", "82"], ["53", "82"], ["63", "82"], ["19", "82"], ["47", "45"], ["47", "45"], ["52", "51"], ["52", "51"], ["57", "51"], ["57", "51"], ["38", "47"], ["19", "47"], ["53", "52"], ["53", "52"], ["19", "52"], ["58", "57"], ["58", "57"], ["19", "57"], ["53", "63"], ["19", "63"], ["45", "65"], ["58", "65"], ["19", "65"], ["38", "71"], ["19", "71"], ["43", "53"], ["19", "53"], ["45", "58"], ["19", "58"], ["37", "47"], ["37", "51"], ["37", "71"], ["37", "52"], ["37", "53"], ["37", "69"], ["37", "74"], ["37", "45"], ["37", "43"], ["51", "63"], ["51", "65"], ["52", "58"], ["52", "57"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "35": "<(LOCAL,int two: int)<SUB>6</SUB>>", "37": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>7</SUB>>", "39": "<(IDENTIFIER,n,n % 2)<SUB>7</SUB>>", "41": "<(LITERAL,0,n % 2 == 0)<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,one = two = n / 2)<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.assignment,two = n / 2)<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.division,n / 2)<SUB>9</SUB>>", "49": "<(LITERAL,2,n / 2)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.logicalAnd,one % 2 != 0 &amp;&amp; two % 2 != 0)<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.modulo,one % 2)<SUB>10</SUB>>", "55": "<(LITERAL,2,one % 2)<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.notEquals,two % 2 != 0)<SUB>10</SUB>>", "59": "<(IDENTIFIER,two,two % 2)<SUB>10</SUB>>", "61": "<(LITERAL,0,two % 2 != 0)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.postDecrement,one--)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,two++)<SUB>13</SUB>>", "67": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "69": "<(&lt;operator&gt;.assignment,one = n - 9)<SUB>18</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - 9)<SUB>18</SUB>>", "73": "<(LITERAL,9,n - 9)<SUB>18</SUB>>", "75": "<(IDENTIFIER,two,two = 9)<SUB>19</SUB>>", "77": "<(println,System.out.println(one + &quot; &quot; + two))<SUB>22</SUB>>", "79": "<(IDENTIFIER,System,System.out.println(one + &quot; &quot; + two))<SUB>22</SUB>>", "81": "<(&lt;operator&gt;.addition,one + &quot; &quot; + two)<SUB>22</SUB>>", "83": "<(IDENTIFIER,one,one + &quot; &quot;)<SUB>22</SUB>>", "85": "<(IDENTIFIER,two,one + &quot; &quot; + two)<SUB>22</SUB>>", "87": "<(MODIFIER,STATIC)>"}}