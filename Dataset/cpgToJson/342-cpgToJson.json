{"edges": [["17", "18"], ["17", "19"], ["17", "114"], ["17", "115"], ["17", "116"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "31"], ["19", "32"], ["19", "35"], ["19", "53"], ["19", "54"], ["19", "59"], ["19", "109"], ["19", "112"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "51"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "72"], ["69", "75"], ["69", "78"], ["69", "103"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["78", "95"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["105", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["21", "29"], ["26", "32"], ["32", "37"], ["54", "61"], ["109", "112"], ["112", "116"], ["23", "21"], ["28", "26"], ["37", "40"], ["40", "47"], ["40", "58"], ["43", "40"], ["56", "54"], ["61", "64"], ["64", "72"], ["64", "109"], ["67", "64"], ["29", "28"], ["46", "51"], ["46", "43"], ["51", "43"], ["58", "56"], ["72", "75"], ["75", "80"], ["103", "67"], ["47", "46"], ["80", "83"], ["83", "91"], ["83", "105"], ["86", "83"], ["88", "86"], ["105", "103"], ["90", "88"], ["91", "90"], ["17", "23"], ["18", "116"], ["21", "116"], ["21", "116"], ["26", "116"], ["29", "116"], ["28", "116"], ["26", "116"], ["26", "116"], ["32", "116"], ["32", "116"], ["54", "116"], ["54", "116"], ["61", "116"], ["64", "116"], ["64", "116"], ["64", "116"], ["109", "116"], ["109", "116"], ["112", "116"], ["112", "116"], ["72", "116"], ["72", "116"], ["75", "116"], ["80", "116"], ["83", "116"], ["83", "116"], ["83", "116"], ["105", "116"], ["103", "116"], ["103", "116"], ["67", "116"], ["88", "116"], ["90", "116"], ["88", "116"], ["88", "116"], ["86", "116"], ["46", "116"], ["46", "116"], ["51", "116"], ["51", "116"], ["43", "116"], ["105", "116"], ["17", "18"], ["23", "21"], ["28", "26"], ["17", "32"], ["17", "37"], ["17", "61"], ["17", "109"], ["54", "109"], ["103", "109"], ["109", "112"], ["17", "112"], ["17", "23"], ["29", "28"], ["37", "40"], ["43", "40"], ["17", "40"], ["21", "40"], ["40", "43"], ["17", "43"], ["61", "64"], ["67", "64"], ["17", "64"], ["40", "64"], ["90", "64"], ["17", "67"], ["64", "67"], ["64", "72"], ["17", "72"], ["17", "75"], ["105", "103"], ["105", "103"], ["105", "103"], ["23", "29"], ["17", "29"], ["26", "46"], ["17", "46"], ["32", "51"], ["17", "51"], ["17", "80"], ["90", "88"], ["90", "88"], ["80", "83"], ["86", "83"], ["17", "83"], ["32", "83"], ["51", "83"], ["83", "86"], ["17", "86"], ["17", "105"], ["54", "105"], ["103", "105"], ["75", "105"], ["72", "90"], ["88", "90"], ["17", "90"], ["64", "90"], ["72", "91"], ["88", "91"], ["17", "91"], ["40", "47"], ["40", "46"], ["40", "40"], ["40", "43"], ["64", "80"], ["64", "64"], ["64", "83"], ["64", "105"], ["64", "75"], ["64", "72"], ["64", "103"], ["64", "67"], ["46", "51"], ["83", "83"], ["83", "88"], ["83", "91"], ["83", "90"], ["83", "86"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>2</SUB>>", "23": "<(nextInt,nextInt())<SUB>2</SUB>>", "25": "<(LOCAL,char[] s: char[])<SUB>3</SUB>>", "27": "<(IDENTIFIER,s,char[] s = toCharArray())<SUB>3</SUB>>", "29": "<(nextString,nextString())<SUB>3</SUB>>", "31": "<(LOCAL,int h: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,h,int h = 0)<SUB>4</SUB>>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "41": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (s[i] == 'H'),if (s[i] == 'H'))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,s[i] == 'H')<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,h++)<SUB>7</SUB>>", "53": "<(LOCAL,int ans: int)<SUB>9</SUB>>", "55": "<(IDENTIFIER,ans,int ans = Integer.MAX_VALUE)<SUB>9</SUB>>", "57": "<(IDENTIFIER,Integer,int ans = Integer.MAX_VALUE)<SUB>9</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "71": "<(LOCAL,int t: int)<SUB>11</SUB>>", "73": "<(IDENTIFIER,p,int p = i)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>11</SUB>>", "77": "<(LITERAL,0,int t = 0)<SUB>11</SUB>>", "79": "<(LOCAL,int j: int)<SUB>12</SUB>>", "81": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; h)<SUB>12</SUB>>", "85": "<(IDENTIFIER,h,j &lt; h)<SUB>12</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "89": "<(IDENTIFIER,p,p = (p + 1) % n)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.addition,p + 1)<SUB>12</SUB>>", "93": "<(LITERAL,1,p + 1)<SUB>12</SUB>>", "95": "<(CONTROL_STRUCTURE,if (s[p] == 'T'),if (s[p] == 'T'))<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,s[p])<SUB>13</SUB>>", "99": "<(IDENTIFIER,p,s[p] == 'T')<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,t++)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.assignment,ans = Math.min(ans, t))<SUB>15</SUB>>", "105": "<(min,Math.min(ans, t))<SUB>15</SUB>>", "107": "<(IDENTIFIER,ans,Math.min(ans, t))<SUB>15</SUB>>", "109": "<(println,println(ans))<SUB>18</SUB>>", "111": "<(IDENTIFIER,ans,println(ans))<SUB>18</SUB>>", "113": "<(IDENTIFIER,out,flush())<SUB>19</SUB>>", "115": "<(MODIFIER,STATIC)>"}}