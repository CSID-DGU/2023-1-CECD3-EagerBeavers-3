{"edges": [["23", "25"], ["23", "195"], ["23", "196"], ["23", "197"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "6"], ["25", "47"], ["25", "50"], ["25", "54"], ["25", "55"], ["25", "59"], ["25", "60"], ["25", "63"], ["25", "104"], ["25", "109"], ["25", "110"], ["25", "116"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["50", "5"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "82"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "8"], ["126", "127"], ["126", "130"], ["126", "134"], ["126", "135"], ["126", "141"], ["126", "142"], ["126", "148"], ["126", "176"], ["127", "128"], ["127", "129"], ["130", "7"], ["130", "131"], ["130", "133"], ["131", "132"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["139", "140"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["146", "147"], ["148", "149"], ["148", "168"], ["149", "150"], ["149", "159"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["168", "169"], ["168", "171"], ["169", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "182"], ["176", "188"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["189", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["26", "33"], ["29", "45"], ["41", "49"], ["47", "51"], ["50", "57"], ["55", "60"], ["60", "65"], ["104", "114"], ["110", "118"], ["28", "26"], ["43", "41"], ["49", "47"], ["51", "50"], ["57", "55"], ["65", "68"], ["68", "75"], ["68", "106"], ["71", "68"], ["106", "104"], ["112", "110"], ["118", "121"], ["121", "197"], ["121", "129"], ["124", "121"], ["31", "38"], ["34", "29"], ["45", "43"], ["74", "84"], ["114", "112"], ["127", "131"], ["130", "139"], ["135", "146"], ["142", "153"], ["33", "31"], ["36", "34"], ["75", "80"], ["78", "74"], ["84", "87"], ["87", "95"], ["87", "71"], ["90", "87"], ["129", "127"], ["131", "130"], ["137", "135"], ["144", "142"], ["149", "169"], ["149", "178"], ["177", "186"], ["177", "193"], ["38", "36"], ["80", "78"], ["139", "137"], ["146", "144"], ["150", "149"], ["150", "162"], ["159", "149"], ["169", "173"], ["171", "178"], ["178", "177"], ["183", "124"], ["94", "102"], ["94", "90"], ["151", "150"], ["160", "159"], ["173", "171"], ["184", "183"], ["190", "124"], ["95", "98"], ["98", "94"], ["102", "90"], ["152", "151"], ["161", "160"], ["186", "184"], ["191", "190"], ["153", "152"], ["162", "161"], ["193", "191"], ["23", "28"], ["24", "197"], ["26", "197"], ["31", "197"], ["34", "197"], ["34", "197"], ["34", "197"], ["29", "197"], ["41", "197"], ["47", "197"], ["50", "197"], ["50", "197"], ["55", "197"], ["55", "197"], ["55", "197"], ["60", "197"], ["68", "197"], ["68", "197"], ["104", "197"], ["104", "197"], ["104", "197"], ["112", "197"], ["114", "197"], ["112", "197"], ["110", "197"], ["110", "197"], ["118", "197"], ["121", "197"], ["121", "197"], ["121", "197"], ["124", "197"], ["71", "197"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["23", "47"], ["57", "55"], ["23", "60"], ["106", "104"], ["106", "104"], ["112", "110"], ["112", "110"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["47", "50"], ["23", "50"], ["51", "50"], ["23", "65"], ["23", "118"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["45", "51"], ["23", "51"], ["41", "57"], ["23", "57"], ["65", "68"], ["71", "68"], ["23", "68"], ["57", "68"], ["87", "71"], ["23", "71"], ["78", "74"], ["78", "74"], ["60", "106"], ["102", "106"], ["23", "106"], ["43", "112"], ["78", "112"], ["23", "112"], ["114", "112"], ["118", "121"], ["124", "121"], ["23", "121"], ["110", "121"], ["121", "124"], ["23", "124"], ["23", "127"], ["137", "135"], ["137", "135"], ["144", "142"], ["144", "142"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["23", "84"], ["51", "114"], ["23", "114"], ["127", "130"], ["23", "130"], ["131", "130"], ["43", "78"], ["23", "78"], ["80", "78"], ["84", "87"], ["90", "87"], ["23", "87"], ["68", "87"], ["87", "90"], ["23", "90"], ["114", "131"], ["23", "131"], ["112", "137"], ["144", "137"], ["23", "137"], ["139", "137"], ["137", "144"], ["23", "144"], ["146", "144"], ["150", "149"], ["150", "149"], ["159", "149"], ["159", "149"], ["173", "171"], ["173", "171"], ["178", "177"], ["178", "177"], ["23", "177"], ["50", "80"], ["23", "80"], ["130", "139"], ["23", "139"], ["139", "146"], ["23", "146"], ["151", "150"], ["151", "150"], ["23", "150"], ["160", "159"], ["160", "159"], ["23", "159"], ["104", "169"], ["178", "169"], ["23", "169"], ["104", "178"], ["171", "178"], ["23", "178"], ["190", "183"], ["23", "183"], ["55", "94"], ["74", "94"], ["153", "151"], ["153", "151"], ["23", "151"], ["162", "160"], ["162", "160"], ["23", "160"], ["169", "173"], ["23", "173"], ["183", "190"], ["23", "190"], ["60", "102"], ["23", "102"], ["153", "152"], ["153", "152"], ["23", "152"], ["162", "161"], ["162", "161"], ["23", "161"], ["142", "153"], ["23", "153"], ["135", "153"], ["153", "162"], ["23", "162"], ["153", "162"], ["68", "68"], ["68", "75"], ["68", "84"], ["68", "74"], ["68", "87"], ["68", "80"], ["68", "71"], ["68", "78"], ["121", "146"], ["121", "131"], ["121", "178"], ["121", "149"], ["121", "150"], ["121", "151"], ["121", "121"], ["121", "153"], ["121", "144"], ["121", "129"], ["121", "137"], ["121", "152"], ["121", "130"], ["121", "127"], ["121", "139"], ["121", "142"], ["121", "177"], ["121", "135"], ["121", "124"], ["87", "94"], ["87", "98"], ["87", "95"], ["87", "87"], ["87", "90"], ["149", "169"], ["149", "173"], ["149", "171"], ["177", "191"], ["177", "190"], ["177", "184"], ["177", "186"], ["177", "183"], ["177", "193"], ["150", "161"], ["150", "162"], ["150", "160"], ["150", "159"], ["94", "102"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(reader.readLine()))<SUB>3</SUB>>", "43": "<(parseInt,parseInt(reader.readLine()))<SUB>3</SUB>>", "45": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "48": "<(IDENTIFIER,st,ANY st = new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>4</SUB>>", "50": "<(&lt;init&gt;,new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>4</SUB>>", "51": "<(readLine,readLine())<SUB>4</SUB>>", "53": "<(LITERAL,&quot; &quot;,new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] perm = new int[n])<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n])>", "59": "<(LOCAL,int count: int)<SUB>6</SUB>>", "61": "<(IDENTIFIER,count,int count = 0)<SUB>6</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,perm[i])<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,perm[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "79": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>8</SUB>>", "81": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "83": "<(LOCAL,int j: int)<SUB>9</SUB>>", "85": "<(IDENTIFIER,j,int j = 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>9</SUB>>", "89": "<(IDENTIFIER,i,j &lt; i)<SUB>9</SUB>>", "91": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "93": "<(CONTROL_STRUCTURE,if (perm[j] &gt; perm[i]),if (perm[j] &gt; perm[i]))<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,perm[j])<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,perm[j] &gt; perm[i])<SUB>10</SUB>>", "99": "<(IDENTIFIER,perm,perm[j] &gt; perm[i])<SUB>10</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "103": "<(IDENTIFIER,count,count++)<SUB>11</SUB>>", "105": "<(IDENTIFIER,count,count = count % 2)<SUB>15</SUB>>", "107": "<(IDENTIFIER,count,count % 2)<SUB>15</SUB>>", "109": "<(LOCAL,int m: int)<SUB>16</SUB>>", "111": "<(IDENTIFIER,m,int m = parseInt(reader.readLine()))<SUB>16</SUB>>", "113": "<(IDENTIFIER,Integer,parseInt(reader.readLine()))<SUB>16</SUB>>", "115": "<(IDENTIFIER,reader,readLine())<SUB>16</SUB>>", "117": "<(LOCAL,int i: int)<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>17</SUB>>", "123": "<(IDENTIFIER,m,i &lt; m)<SUB>17</SUB>>", "125": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "8": "<(LOCAL,StringTokenizer st2: ANY)<SUB>18</SUB>>", "128": "<(IDENTIFIER,st2,ANY st2 = new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>18</SUB>>", "130": "<(&lt;init&gt;,new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>18</SUB>>", "131": "<(readLine,readLine())<SUB>18</SUB>>", "133": "<(LITERAL,&quot; &quot;,new StringTokenizer(reader.readLine(), &quot; &quot;))<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,int a = parseInt(st2.nextToken()))<SUB>19</SUB>>", "137": "<(parseInt,parseInt(st2.nextToken()))<SUB>19</SUB>>", "139": "<(nextToken,nextToken())<SUB>19</SUB>>", "141": "<(LOCAL,int b: int)<SUB>20</SUB>>", "143": "<(IDENTIFIER,b,int b = parseInt(st2.nextToken()))<SUB>20</SUB>>", "145": "<(IDENTIFIER,Integer,parseInt(st2.nextToken()))<SUB>20</SUB>>", "147": "<(IDENTIFIER,st2,nextToken())<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.logicalOr,(b - a + 1) % 4 == 2 || (b - a + 1) % 4 == 3)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.modulo,(b - a + 1) % 4)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.subtraction,b - a)<SUB>21</SUB>>", "155": "<(IDENTIFIER,a,b - a)<SUB>21</SUB>>", "157": "<(LITERAL,4,(b - a + 1) % 4)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.equals,(b - a + 1) % 4 == 3)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.addition,b - a + 1)<SUB>21</SUB>>", "163": "<(IDENTIFIER,b,b - a)<SUB>21</SUB>>", "165": "<(LITERAL,1,b - a + 1)<SUB>21</SUB>>", "167": "<(LITERAL,3,(b - a + 1) % 4 == 3)<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,count++)<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.assignment,count = count % 2)<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.modulo,count % 2)<SUB>23</SUB>>", "175": "<(LITERAL,2,count % 2)<SUB>23</SUB>>", "177": "<(&lt;operator&gt;.equals,count % 2 == 0)<SUB>25</SUB>>", "179": "<(IDENTIFIER,count,count % 2)<SUB>25</SUB>>", "181": "<(LITERAL,0,count % 2 == 0)<SUB>25</SUB>>", "183": "<(println,System.out.println(&quot;even&quot;))<SUB>26</SUB>>", "185": "<(IDENTIFIER,System,System.out.println(&quot;even&quot;))<SUB>26</SUB>>", "187": "<(LITERAL,&quot;even&quot;,System.out.println(&quot;even&quot;))<SUB>26</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "193": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "195": "<(MODIFIER,PUBLIC)>", "197": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}