{"edges": [["21", "22"], ["21", "23"], ["21", "162"], ["21", "163"], ["21", "164"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "61"], ["23", "96"], ["23", "97"], ["23", "6"], ["23", "101"], ["23", "104"], ["23", "105"], ["23", "157"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "78"], ["71", "81"], ["71", "83"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "91"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "103"], ["104", "5"], ["105", "106"], ["105", "110"], ["106", "107"], ["106", "109"], ["107", "108"], ["110", "111"], ["110", "112"], ["110", "116"], ["110", "117"], ["110", "121"], ["110", "122"], ["110", "129"], ["110", "146"], ["112", "113"], ["112", "114"], ["114", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "141"], ["130", "131"], ["130", "140"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "150"], ["146", "153"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["24", "30"], ["27", "34"], ["32", "37"], ["37", "43"], ["41", "47"], ["97", "103"], ["101", "104"], ["104", "107"], ["157", "164"], ["26", "24"], ["28", "27"], ["34", "32"], ["43", "41"], ["47", "50"], ["50", "56"], ["50", "63"], ["53", "50"], ["55", "53"], ["63", "66"], ["66", "75"], ["66", "99"], ["69", "66"], ["99", "97"], ["103", "101"], ["106", "114"], ["106", "160"], ["158", "157"], ["30", "28"], ["56", "59"], ["59", "55"], ["73", "78"], ["78", "85"], ["78", "69"], ["81", "78"], ["107", "106"], ["112", "119"], ["117", "125"], ["122", "135"], ["160", "158"], ["75", "73"], ["84", "93"], ["84", "81"], ["91", "81"], ["114", "112"], ["119", "117"], ["124", "122"], ["130", "143"], ["130", "147"], ["141", "147"], ["147", "150"], ["147", "154"], ["150", "107"], ["85", "88"], ["88", "84"], ["93", "91"], ["125", "124"], ["131", "130"], ["143", "141"], ["154", "107"], ["132", "131"], ["133", "132"], ["135", "133"], ["21", "26"], ["22", "164"], ["24", "164"], ["27", "164"], ["27", "164"], ["32", "164"], ["37", "164"], ["37", "164"], ["41", "164"], ["41", "164"], ["41", "164"], ["47", "164"], ["50", "164"], ["50", "164"], ["63", "164"], ["66", "164"], ["66", "164"], ["66", "164"], ["99", "164"], ["97", "164"], ["97", "164"], ["101", "164"], ["104", "164"], ["107", "164"], ["106", "164"], ["106", "164"], ["157", "164"], ["157", "164"], ["157", "164"], ["112", "164"], ["119", "164"], ["117", "164"], ["117", "164"], ["125", "164"], ["125", "164"], ["124", "164"], ["122", "164"], ["122", "164"], ["133", "164"], ["133", "164"], ["132", "164"], ["131", "164"], ["130", "164"], ["130", "164"], ["141", "164"], ["141", "164"], ["147", "164"], ["147", "164"], ["154", "164"], ["150", "164"], ["73", "164"], ["73", "164"], ["78", "164"], ["78", "164"], ["69", "164"], ["84", "164"], ["84", "164"], ["84", "164"], ["91", "164"], ["91", "164"], ["91", "164"], ["81", "164"], ["55", "164"], ["55", "164"], ["53", "164"], ["21", "22"], ["21", "24"], ["34", "32"], ["21", "37"], ["43", "41"], ["99", "97"], ["21", "101"], ["24", "27"], ["21", "27"], ["21", "47"], ["59", "55"], ["21", "63"], ["101", "104"], ["21", "104"], ["104", "157"], ["154", "157"], ["150", "157"], ["21", "157"], ["27", "34"], ["21", "34"], ["32", "43"], ["21", "43"], ["47", "50"], ["53", "50"], ["21", "50"], ["43", "50"], ["50", "53"], ["21", "53"], ["63", "66"], ["69", "66"], ["21", "66"], ["50", "66"], ["78", "66"], ["21", "69"], ["66", "69"], ["66", "73"], ["21", "73"], ["34", "99"], ["59", "99"], ["21", "99"], ["107", "106"], ["21", "106"], ["114", "112"], ["119", "117"], ["125", "122"], ["125", "122"], ["21", "122"], ["34", "59"], ["21", "59"], ["73", "78"], ["81", "78"], ["21", "78"], ["66", "78"], ["78", "81"], ["21", "81"], ["93", "91"], ["93", "91"], ["97", "107"], ["21", "107"], ["143", "141"], ["143", "141"], ["66", "75"], ["21", "75"], ["41", "84"], ["55", "84"], ["99", "114"], ["119", "114"], ["21", "114"], ["114", "119"], ["21", "119"], ["125", "124"], ["125", "124"], ["21", "124"], ["131", "130"], ["131", "130"], ["21", "130"], ["37", "147"], ["141", "147"], ["91", "147"], ["21", "147"], ["104", "150"], ["154", "150"], ["21", "150"], ["21", "93"], ["37", "93"], ["91", "93"], ["117", "125"], ["21", "125"], ["112", "125"], ["132", "131"], ["132", "131"], ["21", "131"], ["21", "143"], ["37", "143"], ["147", "143"], ["91", "143"], ["104", "154"], ["150", "154"], ["21", "154"], ["133", "132"], ["133", "132"], ["21", "132"], ["135", "133"], ["21", "133"], ["135", "133"], ["122", "135"], ["21", "135"], ["50", "56"], ["50", "50"], ["50", "59"], ["50", "53"], ["50", "55"], ["66", "73"], ["66", "66"], ["66", "75"], ["66", "69"], ["66", "78"], ["106", "107"], ["106", "122"], ["106", "114"], ["106", "131"], ["106", "132"], ["106", "119"], ["106", "106"], ["106", "112"], ["106", "130"], ["106", "147"], ["106", "135"], ["106", "117"], ["106", "124"], ["106", "125"], ["106", "133"], ["78", "81"], ["78", "84"], ["78", "85"], ["78", "88"], ["78", "78"], ["84", "91"], ["84", "93"], ["130", "141"], ["130", "143"], ["147", "154"], ["147", "150"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int inv = 0)<SUB>4</SUB>>", "39": "<(LITERAL,0,int inv = 0)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "65": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,j,j &lt; n)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = j + 1; Some(i &lt; n); i++),for (int i = j + 1; Some(i &lt; n); i++))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = j + 1)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.addition,j + 1)<SUB>9</SUB>>", "77": "<(LITERAL,1,j + 1)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "83": "<(CONTROL_STRUCTURE,if (a[j] &gt; a[i]),if (a[j] &gt; a[i]))<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>10</SUB>>", "87": "<(IDENTIFIER,j,a[j] &gt; a[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,a,a[j] &gt; a[i])<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.assignment,inv = 1 - inv)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.subtraction,1 - inv)<SUB>11</SUB>>", "95": "<(IDENTIFIER,inv,1 - inv)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>13</SUB>>", "99": "<(nextInt,nextInt())<SUB>13</SUB>>", "6": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>14</SUB>>", "102": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>14</SUB>>", "104": "<(&lt;init&gt;,new StringBuilder())<SUB>14</SUB>>", "105": "<(CONTROL_STRUCTURE,while (m-- &gt; 0),while (m-- &gt; 0))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,m--)<SUB>15</SUB>>", "109": "<(LITERAL,0,m-- &gt; 0)<SUB>15</SUB>>", "111": "<(LOCAL,int l: int)<SUB>17</SUB>>", "113": "<(IDENTIFIER,l,int l = nextInt())<SUB>17</SUB>>", "115": "<(IDENTIFIER,sc,nextInt())<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>18</SUB>>", "119": "<(nextInt,nextInt())<SUB>18</SUB>>", "121": "<(LOCAL,int s: int)<SUB>19</SUB>>", "123": "<(IDENTIFIER,s,int s = r - l + 1)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.subtraction,r - l)<SUB>19</SUB>>", "127": "<(IDENTIFIER,l,r - l)<SUB>19</SUB>>", "129": "<(CONTROL_STRUCTURE,if (s * (s - 1) / 2 % 2 == 1),if (s * (s - 1) / 2 % 2 == 1))<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.modulo,s * (s - 1) / 2 % 2)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.multiplication,s * (s - 1))<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>20</SUB>>", "137": "<(LITERAL,1,s - 1)<SUB>20</SUB>>", "139": "<(LITERAL,2,s * (s - 1) / 2 % 2)<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.assignment,inv = 1 - inv)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.subtraction,1 - inv)<SUB>21</SUB>>", "145": "<(IDENTIFIER,inv,1 - inv)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.equals,inv == 1)<SUB>22</SUB>>", "149": "<(LITERAL,1,inv == 1)<SUB>22</SUB>>", "151": "<(IDENTIFIER,sb,sb.append(&quot;odd\\n&quot;))<SUB>23</SUB>>", "153": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "155": "<(IDENTIFIER,sb,sb.append(&quot;even\\n&quot;))<SUB>25</SUB>>", "157": "<(print,System.out.print(sb))<SUB>27</SUB>>", "159": "<(IDENTIFIER,System,System.out.print(sb))<SUB>27</SUB>>", "161": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>27</SUB>>", "163": "<(MODIFIER,STATIC)>"}}