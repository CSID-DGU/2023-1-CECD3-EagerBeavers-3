{"edges": [["19", "20"], ["19", "21"], ["19", "130"], ["19", "131"], ["19", "132"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "45"], ["21", "66"], ["21", "93"], ["21", "94"], ["21", "112"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "44"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "51"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "65"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "76"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "92"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "91"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "106"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "129"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["22", "28"], ["25", "32"], ["30", "35"], ["94", "115"], ["112", "132"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "47"], ["46", "55"], ["46", "69"], ["67", "80"], ["67", "100"], ["96", "94"], ["113", "120"], ["116", "112"], ["28", "26"], ["39", "44"], ["44", "132"], ["47", "46"], ["52", "65"], ["65", "132"], ["68", "67"], ["68", "73"], ["73", "67"], ["77", "92"], ["92", "132"], ["97", "109"], ["106", "96"], ["115", "113"], ["118", "116"], ["40", "39"], ["53", "59"], ["56", "52"], ["69", "68"], ["78", "85"], ["81", "77"], ["98", "103"], ["103", "97"], ["109", "106"], ["119", "126"], ["126", "118"], ["42", "40"], ["55", "53"], ["57", "62"], ["62", "56"], ["80", "78"], ["82", "81"], ["100", "98"], ["120", "123"], ["123", "119"], ["59", "57"], ["83", "88"], ["88", "82"], ["85", "83"], ["19", "24"], ["44", "132"], ["92", "132"], ["65", "132"], ["20", "132"], ["22", "132"], ["25", "132"], ["25", "132"], ["32", "132"], ["30", "132"], ["30", "132"], ["35", "132"], ["39", "132"], ["39", "132"], ["39", "132"], ["106", "132"], ["116", "132"], ["19", "20"], ["19", "22"], ["32", "30"], ["96", "94"], ["96", "94"], ["22", "25"], ["19", "25"], ["116", "112"], ["116", "112"], ["116", "112"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["19", "44"], ["47", "46"], ["47", "46"], ["19", "46"], ["19", "65"], ["68", "67"], ["68", "67"], ["73", "67"], ["73", "67"], ["19", "92"], ["97", "96"], ["97", "96"], ["106", "96"], ["106", "96"], ["106", "96"], ["19", "116"], ["118", "116"], ["118", "116"], ["94", "116"], ["35", "39"], ["19", "39"], ["35", "47"], ["19", "47"], ["56", "52"], ["56", "52"], ["69", "68"], ["69", "68"], ["19", "68"], ["69", "73"], ["19", "73"], ["81", "77"], ["81", "77"], ["98", "97"], ["98", "97"], ["103", "97"], ["103", "97"], ["19", "106"], ["109", "106"], ["109", "106"], ["119", "118"], ["119", "118"], ["126", "118"], ["126", "118"], ["57", "56"], ["57", "56"], ["62", "56"], ["62", "56"], ["47", "69"], ["19", "69"], ["82", "81"], ["82", "81"], ["19", "81"], ["100", "98"], ["19", "98"], ["100", "98"], ["98", "103"], ["19", "103"], ["103", "109"], ["19", "109"], ["120", "119"], ["120", "119"], ["123", "119"], ["123", "119"], ["123", "126"], ["19", "126"], ["59", "57"], ["19", "57"], ["59", "57"], ["57", "62"], ["19", "62"], ["83", "82"], ["83", "82"], ["88", "82"], ["88", "82"], ["69", "100"], ["73", "100"], ["19", "100"], ["106", "120"], ["19", "120"], ["120", "123"], ["19", "123"], ["47", "59"], ["19", "59"], ["85", "83"], ["19", "83"], ["85", "83"], ["83", "88"], ["19", "88"], ["69", "85"], ["73", "85"], ["19", "85"], ["35", "47"], ["35", "42"], ["35", "46"], ["35", "40"], ["35", "44"], ["35", "39"], ["46", "68"], ["46", "57"], ["46", "52"], ["46", "56"], ["46", "69"], ["46", "67"], ["46", "65"], ["46", "59"], ["46", "53"], ["46", "55"], ["46", "62"], ["67", "94"], ["67", "115"], ["67", "96"], ["67", "77"], ["67", "98"], ["67", "120"], ["67", "113"], ["67", "116"], ["67", "81"], ["67", "85"], ["67", "103"], ["67", "119"], ["67", "92"], ["67", "123"], ["67", "106"], ["67", "97"], ["67", "112"], ["67", "82"], ["67", "126"], ["67", "80"], ["67", "83"], ["67", "118"], ["67", "100"], ["67", "88"], ["67", "78"], ["67", "109"], ["68", "73"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 2)<SUB>4</SUB>>", "37": "<(LITERAL,2,n &lt;= 2)<SUB>4</SUB>>", "39": "<(print,System.out.print(n))<SUB>5</SUB>>", "41": "<(IDENTIFIER,System,System.out.print(n))<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,System.out.print(n))<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.modulo,n % 2)<SUB>8</SUB>>", "49": "<(LITERAL,2,n % 2)<SUB>8</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>9</SUB>>", "61": "<(LITERAL,1,n - 1)<SUB>9</SUB>>", "63": "<(IDENTIFIER,n,n - 2)<SUB>9</SUB>>", "65": "<(RETURN,return;,return;)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.logicalAnd,n % 2 == 0 &amp;&amp; n &lt;= 6)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.modulo,n % 2)<SUB>12</SUB>>", "71": "<(LITERAL,2,n % 2)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 6)<SUB>12</SUB>>", "75": "<(LITERAL,6,n &lt;= 6)<SUB>12</SUB>>", "77": "<(print,System.out.print(n * (n - 1) * (n - 2) / 2))<SUB>13</SUB>>", "79": "<(IDENTIFIER,System,System.out.print(n * (n - 1) * (n - 2) / 2))<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.division,n * (n - 1) * (n - 2) / 2)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "87": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "89": "<(IDENTIFIER,n,n - 2)<SUB>13</SUB>>", "91": "<(LITERAL,2,n * (n - 1) * (n - 2) / 2)<SUB>13</SUB>>", "93": "<(LOCAL,long temp: long)<SUB>16</SUB>>", "95": "<(IDENTIFIER,temp,long temp = (n * (n - 1) * (n - 3)) / GCD(n, n - 3))<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 3))<SUB>16</SUB>>", "99": "<(IDENTIFIER,n,n * (n - 1))<SUB>16</SUB>>", "101": "<(IDENTIFIER,n,n - 1)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>16</SUB>>", "105": "<(LITERAL,3,n - 3)<SUB>16</SUB>>", "107": "<(IDENTIFIER,this,GCD(n, n - 3))<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>16</SUB>>", "111": "<(LITERAL,3,n - 3)<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "115": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "117": "<(IDENTIFIER,Math,Math.max((n - 1) * (n - 2) * (n - 3), temp))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2))<SUB>17</SUB>>", "121": "<(IDENTIFIER,n,n - 1)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>17</SUB>>", "125": "<(LITERAL,2,n - 2)<SUB>17</SUB>>", "127": "<(IDENTIFIER,n,n - 3)<SUB>17</SUB>>", "129": "<(IDENTIFIER,temp,Math.max((n - 1) * (n - 2) * (n - 3), temp))<SUB>17</SUB>>", "131": "<(MODIFIER,STATIC)>"}}