{"edges": [["19", "20"], ["19", "21"], ["19", "108"], ["19", "109"], ["19", "110"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "39"], ["21", "42"], ["21", "43"], ["21", "46"], ["21", "62"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "54"], ["50", "57"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "66"], ["62", "80"], ["63", "64"], ["63", "65"], ["66", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "79"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["80", "81"], ["81", "82"], ["81", "85"], ["81", "101"], ["82", "83"], ["82", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "98"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "39"], ["39", "43"], ["43", "47"], ["24", "22"], ["26", "25"], ["32", "30"], ["47", "51"], ["47", "63"], ["63", "70"], ["63", "82"], ["28", "26"], ["51", "54"], ["54", "59"], ["57", "47"], ["67", "110"], ["59", "57"], ["68", "74"], ["71", "67"], ["82", "89"], ["82", "106"], ["70", "68"], ["72", "71"], ["86", "110"], ["73", "72"], ["87", "93"], ["90", "86"], ["103", "110"], ["74", "73"], ["89", "87"], ["91", "98"], ["98", "90"], ["104", "103"], ["92", "91"], ["106", "104"], ["93", "92"], ["19", "24"], ["20", "110"], ["22", "110"], ["25", "110"], ["25", "110"], ["32", "110"], ["30", "110"], ["30", "110"], ["35", "110"], ["35", "110"], ["39", "110"], ["39", "110"], ["43", "110"], ["47", "110"], ["47", "110"], ["63", "110"], ["63", "110"], ["67", "110"], ["73", "110"], ["72", "110"], ["71", "110"], ["67", "110"], ["51", "110"], ["54", "110"], ["59", "110"], ["59", "110"], ["57", "110"], ["57", "110"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["19", "39"], ["19", "43"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["43", "47"], ["57", "47"], ["19", "47"], ["30", "47"], ["39", "51"], ["19", "51"], ["54", "51"], ["47", "54"], ["19", "54"], ["51", "57"], ["19", "57"], ["54", "57"], ["47", "63"], ["19", "63"], ["19", "67"], ["51", "59"], ["19", "59"], ["54", "59"], ["19", "71"], ["47", "82"], ["19", "82"], ["63", "82"], ["19", "72"], ["35", "86"], ["19", "86"], ["51", "86"], ["98", "86"], ["98", "86"], ["19", "73"], ["35", "90"], ["19", "90"], ["51", "90"], ["98", "90"], ["98", "90"], ["19", "103"], ["19", "74"], ["35", "91"], ["19", "91"], ["51", "91"], ["39", "98"], ["19", "98"], ["54", "98"], ["35", "98"], ["51", "98"], ["35", "92"], ["19", "92"], ["51", "92"], ["35", "93"], ["19", "93"], ["51", "93"], ["47", "47"], ["47", "51"], ["47", "57"], ["47", "59"], ["47", "54"], ["63", "68"], ["63", "73"], ["63", "72"], ["63", "67"], ["63", "74"], ["63", "82"], ["63", "71"], ["63", "70"], ["82", "89"], ["82", "98"], ["82", "103"], ["82", "104"], ["82", "92"], ["82", "106"], ["82", "87"], ["82", "91"], ["82", "93"], ["82", "90"], ["82", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int f1 = 0)<SUB>4</SUB>>", "37": "<(LITERAL,0,int f1 = 0)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int f2 = 1)<SUB>5</SUB>>", "41": "<(LITERAL,1,int f2 = 1)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int f3 = 1)<SUB>6</SUB>>", "45": "<(LITERAL,1,int f3 = 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,f3 &lt; n)<SUB>7</SUB>>", "49": "<(IDENTIFIER,n,f3 &lt; n)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,f1 = f2)<SUB>8</SUB>>", "53": "<(IDENTIFIER,f2,f1 = f2)<SUB>8</SUB>>", "55": "<(IDENTIFIER,f2,f2 = f3)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,f3 = f1 + f2)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.addition,f1 + f2)<SUB>10</SUB>>", "61": "<(IDENTIFIER,f2,f1 + f2)<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.equals,n == 0)<SUB>12</SUB>>", "65": "<(LITERAL,0,n == 0)<SUB>12</SUB>>", "67": "<(println,System.out.println(0 + &quot; &quot; + 0 + &quot; &quot; + 0))<SUB>13</SUB>>", "69": "<(IDENTIFIER,System,System.out.println(0 + &quot; &quot; + 0 + &quot; &quot; + 0))<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.addition,0 + &quot; &quot; + 0 + &quot; &quot; + 0)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.addition,0 + &quot; &quot; + 0)<SUB>13</SUB>>", "75": "<(LITERAL,0,0 + &quot; &quot;)<SUB>13</SUB>>", "77": "<(LITERAL,0,0 + &quot; &quot; + 0)<SUB>13</SUB>>", "79": "<(LITERAL,0,0 + &quot; &quot; + 0 + &quot; &quot; + 0)<SUB>13</SUB>>", "81": "<(CONTROL_STRUCTURE,if (f3 == n),if (f3 == n))<SUB>14</SUB>>", "83": "<(IDENTIFIER,f3,f3 == n)<SUB>14</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>15</SUB>>", "89": "<(FIELD_IDENTIFIER,out,out)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.addition,f1 + &quot; &quot; + f1 + &quot; &quot;)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.addition,f1 + &quot; &quot;)<SUB>15</SUB>>", "95": "<(LITERAL,&quot; &quot;,f1 + &quot; &quot;)<SUB>15</SUB>>", "97": "<(LITERAL,&quot; &quot;,f1 + &quot; &quot; + f1 + &quot; &quot;)<SUB>15</SUB>>", "99": "<(IDENTIFIER,f2,f2 - f1)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "103": "<(println,System.out.println(&quot;I'm too stupid to solve this problem&quot;))<SUB>17</SUB>>", "105": "<(IDENTIFIER,System,System.out.println(&quot;I'm too stupid to solve this problem&quot;))<SUB>17</SUB>>", "107": "<(LITERAL,&quot;I'm too stupid to solve this problem&quot;,System.out.println(&quot;I'm too stupid to solve this problem&quot;))<SUB>17</SUB>>", "109": "<(MODIFIER,STATIC)>"}}