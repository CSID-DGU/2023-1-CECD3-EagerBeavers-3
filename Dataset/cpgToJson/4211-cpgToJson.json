{"edges": [["21", "22"], ["21", "23"], ["21", "256"], ["21", "257"], ["21", "258"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "52"], ["23", "54"], ["23", "55"], ["23", "62"], ["23", "63"], ["23", "68"], ["23", "101"], ["23", "102"], ["23", "108"], ["23", "117"], ["23", "233"], ["23", "254"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "44"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "92"], ["90", "91"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["117", "118"], ["117", "119"], ["117", "126"], ["117", "129"], ["117", "131"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "133"], ["131", "138"], ["131", "139"], ["131", "150"], ["131", "151"], ["131", "154"], ["131", "228"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "171"], ["164", "178"], ["164", "179"], ["164", "186"], ["164", "187"], ["164", "190"], ["164", "221"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["200", "202"], ["200", "207"], ["200", "214"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["243", "251"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["24", "31"], ["27", "47"], ["45", "51"], ["48", "52"], ["52", "58"], ["55", "65"], ["63", "70"], ["102", "112"], ["108", "122"], ["254", "258"], ["26", "24"], ["47", "45"], ["49", "48"], ["57", "55"], ["65", "63"], ["70", "73"], ["73", "81"], ["73", "105"], ["76", "73"], ["104", "102"], ["109", "108"], ["119", "126"], ["126", "135"], ["126", "235"], ["129", "126"], ["235", "238"], ["238", "248"], ["238", "254"], ["241", "238"], ["29", "37"], ["32", "27"], ["51", "49"], ["58", "61"], ["59", "57"], ["105", "104"], ["111", "109"], ["121", "119"], ["133", "145"], ["139", "151"], ["151", "156"], ["228", "129"], ["244", "251"], ["251", "241"], ["31", "29"], ["61", "59"], ["81", "84"], ["84", "90"], ["84", "76"], ["87", "84"], ["112", "111"], ["122", "121"], ["135", "133"], ["141", "139"], ["156", "159"], ["159", "168"], ["159", "229"], ["162", "159"], ["229", "228"], ["246", "244"], ["35", "42"], ["38", "32"], ["90", "94"], ["92", "87"], ["143", "141"], ["166", "173"], ["179", "187"], ["187", "192"], ["221", "162"], ["248", "246"], ["37", "35"], ["40", "38"], ["93", "100"], ["98", "92"], ["144", "147"], ["147", "143"], ["168", "166"], ["172", "162"], ["172", "183"], ["181", "179"], ["192", "195"], ["195", "204"], ["195", "224"], ["198", "195"], ["223", "221"], ["42", "40"], ["94", "93"], ["100", "98"], ["145", "144"], ["173", "172"], ["183", "181"], ["202", "209"], ["214", "198"], ["224", "223"], ["204", "202"], ["208", "198"], ["208", "217"], ["216", "214"], ["209", "208"], ["217", "216"], ["21", "26"], ["22", "258"], ["24", "258"], ["32", "258"], ["35", "258"], ["38", "258"], ["38", "258"], ["38", "258"], ["32", "258"], ["27", "258"], ["45", "258"], ["48", "258"], ["48", "258"], ["52", "258"], ["52", "258"], ["57", "258"], ["55", "258"], ["55", "258"], ["63", "258"], ["63", "258"], ["63", "258"], ["102", "258"], ["102", "258"], ["102", "258"], ["108", "258"], ["108", "258"], ["121", "258"], ["119", "258"], ["119", "258"], ["126", "258"], ["126", "258"], ["235", "258"], ["238", "258"], ["238", "258"], ["238", "258"], ["254", "258"], ["254", "258"], ["244", "258"], ["244", "258"], ["251", "258"], ["241", "258"], ["133", "258"], ["133", "258"], ["139", "258"], ["143", "258"], ["147", "258"], ["143", "258"], ["141", "258"], ["139", "258"], ["139", "258"], ["151", "258"], ["156", "258"], ["159", "258"], ["159", "258"], ["228", "258"], ["228", "258"], ["228", "258"], ["129", "258"], ["166", "258"], ["166", "258"], ["173", "258"], ["172", "258"], ["172", "258"], ["183", "258"], ["179", "258"], ["179", "258"], ["187", "258"], ["192", "258"], ["195", "258"], ["195", "258"], ["224", "258"], ["224", "258"], ["223", "258"], ["223", "258"], ["221", "258"], ["221", "258"], ["202", "258"], ["202", "258"], ["209", "258"], ["208", "258"], ["208", "258"], ["214", "258"], ["214", "258"], ["198", "258"], ["162", "258"], ["81", "258"], ["84", "258"], ["84", "258"], ["76", "258"], ["90", "258"], ["90", "258"], ["92", "258"], ["92", "258"], ["92", "258"], ["87", "258"], ["135", "258"], ["21", "22"], ["21", "24"], ["21", "45"], ["21", "55"], ["52", "55"], ["65", "63"], ["104", "102"], ["21", "108"], ["24", "27"], ["21", "27"], ["35", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["27", "52"], ["21", "52"], ["21", "70"], ["121", "119"], ["121", "119"], ["21", "235"], ["48", "254"], ["251", "254"], ["21", "254"], ["21", "29"], ["21", "44"], ["21", "57"], ["52", "57"], ["55", "65"], ["21", "65"], ["70", "73"], ["76", "73"], ["21", "73"], ["65", "73"], ["84", "73"], ["73", "76"], ["21", "76"], ["105", "104"], ["105", "104"], ["119", "126"], ["129", "126"], ["21", "126"], ["135", "129"], ["173", "129"], ["183", "129"], ["209", "129"], ["21", "129"], ["135", "133"], ["135", "133"], ["141", "139"], ["141", "139"], ["21", "151"], ["151", "228"], ["221", "228"], ["21", "228"], ["235", "238"], ["241", "238"], ["21", "238"], ["122", "238"], ["159", "238"], ["248", "241"], ["21", "241"], ["29", "32"], ["21", "32"], ["35", "32"], ["38", "32"], ["21", "81"], ["21", "105"], ["73", "105"], ["112", "111"], ["112", "111"], ["21", "111"], ["122", "121"], ["122", "121"], ["21", "121"], ["21", "156"], ["48", "244"], ["251", "244"], ["21", "244"], ["102", "244"], ["244", "251"], ["21", "251"], ["21", "35"], ["21", "43"], ["81", "84"], ["87", "84"], ["21", "84"], ["73", "84"], ["84", "87"], ["21", "87"], ["90", "92"], ["21", "112"], ["105", "112"], ["21", "122"], ["112", "122"], ["21", "135"], ["126", "135"], ["21", "141"], ["143", "141"], ["143", "141"], ["156", "159"], ["162", "159"], ["21", "159"], ["122", "159"], ["195", "159"], ["168", "162"], ["21", "162"], ["168", "166"], ["168", "166"], ["102", "179"], ["21", "187"], ["223", "221"], ["223", "221"], ["35", "38"], ["21", "38"], ["52", "90"], ["21", "90"], ["21", "143"], ["133", "143"], ["21", "192"], ["151", "221"], ["21", "221"], ["21", "248"], ["238", "248"], ["21", "144"], ["133", "144"], ["21", "147"], ["133", "147"], ["21", "168"], ["159", "168"], ["173", "172"], ["173", "172"], ["21", "172"], ["192", "195"], ["198", "195"], ["21", "195"], ["159", "195"], ["204", "198"], ["21", "198"], ["204", "202"], ["204", "202"], ["224", "223"], ["224", "223"], ["179", "223"], ["21", "223"], ["166", "173"], ["21", "173"], ["135", "173"], ["183", "173"], ["209", "173"], ["173", "183"], ["21", "183"], ["173", "183"], ["187", "214"], ["21", "214"], ["187", "224"], ["214", "224"], ["21", "224"], ["139", "224"], ["21", "204"], ["195", "204"], ["209", "208"], ["209", "208"], ["21", "208"], ["202", "209"], ["21", "209"], ["183", "209"], ["73", "73"], ["73", "81"], ["73", "84"], ["73", "76"], ["126", "145"], ["126", "151"], ["126", "228"], ["126", "144"], ["126", "129"], ["126", "139"], ["126", "141"], ["126", "159"], ["126", "143"], ["126", "126"], ["126", "147"], ["126", "229"], ["126", "135"], ["126", "156"], ["126", "133"], ["238", "244"], ["238", "238"], ["238", "246"], ["238", "251"], ["238", "241"], ["238", "248"], ["84", "94"], ["84", "98"], ["84", "84"], ["84", "92"], ["84", "87"], ["84", "93"], ["84", "90"], ["84", "100"], ["159", "162"], ["159", "168"], ["159", "173"], ["159", "166"], ["159", "159"], ["159", "172"], ["172", "192"], ["172", "179"], ["172", "181"], ["172", "195"], ["172", "223"], ["172", "187"], ["172", "221"], ["172", "224"], ["172", "183"], ["195", "209"], ["195", "198"], ["195", "204"], ["195", "208"], ["195", "195"], ["195", "202"], ["208", "214"], ["208", "217"], ["208", "216"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj1,new BufferedReader(new InputStreamReader(System.in)))>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "41": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "46": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "48": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "51": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "53": "<(IDENTIFIER,in,nextToken())<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int n = (int) in.nval)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.cast,(int) in.nval)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.fieldAccess,in.nval)<SUB>6</SUB>>", "61": "<(FIELD_IDENTIFIER,nval,nval)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,double[][] a = new double[n][n])<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.alloc,new double[n][n])>", "67": "<(IDENTIFIER,n,new double[n][n])<SUB>7</SUB>>", "69": "<(LOCAL,int i: int)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "85": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "91": "<(IDENTIFIER,in,nextToken())<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>11</SUB>>", "95": "<(IDENTIFIER,a,a[i][j] = in.nval)<SUB>11</SUB>>", "97": "<(IDENTIFIER,j,a[i][j] = in.nval)<SUB>11</SUB>>", "99": "<(IDENTIFIER,in,a[i][j] = in.nval)<SUB>11</SUB>>", "101": "<(LOCAL,double[] dp: double[])<SUB>15</SUB>>", "103": "<(IDENTIFIER,dp,double[] dp = new double[1 &lt;&lt; n])<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>15</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>16</SUB>>", "113": "<(LITERAL,1,1 &lt;&lt; n)<SUB>16</SUB>>", "115": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>16</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int mask = (1 &lt;&lt; n) - 2; Some(mask &gt; 0); mask--),for (int mask = (1 &lt;&lt; n) - 2; Some(mask &gt; 0); mask--))<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.assignment,int mask = (1 &lt;&lt; n) - 2)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 2)<SUB>18</SUB>>", "123": "<(LITERAL,1,1 &lt;&lt; n)<SUB>18</SUB>>", "125": "<(LITERAL,2,(1 &lt;&lt; n) - 2)<SUB>18</SUB>>", "127": "<(IDENTIFIER,mask,mask &gt; 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.postDecrement,mask--)<SUB>18</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.assignment,int count = Integer.bitCount(mask))<SUB>19</SUB>>", "135": "<(bitCount,Integer.bitCount(mask))<SUB>19</SUB>>", "137": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.assignment,double pPair = 2.0 / ((double) count * (count + 1)))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.division,2.0 / ((double) count * (count + 1)))<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.multiplication,(double) count * (count + 1))<SUB>20</SUB>>", "145": "<(TYPE_REF,double,double)<SUB>20</SUB>>", "147": "<(&lt;operator&gt;.addition,count + 1)<SUB>20</SUB>>", "149": "<(LITERAL,1,count + 1)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.assignment,double ans = 0.0)<SUB>21</SUB>>", "153": "<(LITERAL,0.0,double ans = 0.0)<SUB>21</SUB>>", "155": "<(LOCAL,int j: int)<SUB>23</SUB>>", "157": "<(IDENTIFIER,j,int j = 0)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>23</SUB>>", "161": "<(IDENTIFIER,n,j &lt; n)<SUB>23</SUB>>", "163": "<(IDENTIFIER,j,j++)<SUB>23</SUB>>", "165": "<(LOCAL,int jj: int)<SUB>24</SUB>>", "167": "<(IDENTIFIER,jj,int jj = 1 &lt;&lt; j)<SUB>24</SUB>>", "169": "<(LITERAL,1,1 &lt;&lt; j)<SUB>24</SUB>>", "171": "<(CONTROL_STRUCTURE,if ((jj &amp; mask) != 0),if ((jj &amp; mask) != 0))<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.and,jj &amp; mask)<SUB>25</SUB>>", "175": "<(IDENTIFIER,mask,jj &amp; mask)<SUB>25</SUB>>", "177": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.assignment,double p = dp[mask | jj])<SUB>26</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dp[mask | jj])<SUB>26</SUB>>", "183": "<(&lt;operator&gt;.or,mask | jj)<SUB>26</SUB>>", "185": "<(IDENTIFIER,jj,mask | jj)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.assignment,double s = 0)<SUB>27</SUB>>", "189": "<(LITERAL,0,double s = 0)<SUB>27</SUB>>", "191": "<(LOCAL,int k: int)<SUB>28</SUB>>", "193": "<(IDENTIFIER,k,int k = 0)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>28</SUB>>", "197": "<(IDENTIFIER,n,k &lt; n)<SUB>28</SUB>>", "199": "<(IDENTIFIER,k,k++)<SUB>28</SUB>>", "201": "<(LOCAL,int kk: int)<SUB>29</SUB>>", "203": "<(IDENTIFIER,kk,int kk = 1 &lt;&lt; k)<SUB>29</SUB>>", "205": "<(LITERAL,1,1 &lt;&lt; k)<SUB>29</SUB>>", "207": "<(CONTROL_STRUCTURE,if ((kk &amp; mask) == 0),if ((kk &amp; mask) == 0))<SUB>30</SUB>>", "209": "<(&lt;operator&gt;.and,kk &amp; mask)<SUB>30</SUB>>", "211": "<(IDENTIFIER,mask,kk &amp; mask)<SUB>30</SUB>>", "213": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>30</SUB>>", "215": "<(IDENTIFIER,s,s += a[k][j])<SUB>31</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,a[k])<SUB>31</SUB>>", "219": "<(IDENTIFIER,k,s += a[k][j])<SUB>31</SUB>>", "221": "<(&lt;operator&gt;.assignmentPlus,ans += s * pPair * p)<SUB>33</SUB>>", "223": "<(&lt;operator&gt;.multiplication,s * pPair * p)<SUB>33</SUB>>", "225": "<(IDENTIFIER,s,s * pPair)<SUB>33</SUB>>", "227": "<(IDENTIFIER,p,s * pPair * p)<SUB>33</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>35</SUB>>", "231": "<(IDENTIFIER,mask,dp[mask] = ans)<SUB>35</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>38</SUB>>", "235": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>38</SUB>>", "237": "<(LITERAL,0,int i = 0)<SUB>38</SUB>>", "239": "<(IDENTIFIER,i,i &lt; n)<SUB>38</SUB>>", "241": "<(&lt;operator&gt;.postIncrement,i++)<SUB>38</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "245": "<(IDENTIFIER,pw,print(dp[1 &lt;&lt; i]))<SUB>39</SUB>>", "247": "<(IDENTIFIER,dp,print(dp[1 &lt;&lt; i]))<SUB>39</SUB>>", "249": "<(LITERAL,1,1 &lt;&lt; i)<SUB>39</SUB>>", "251": "<(print,print(' '))<SUB>40</SUB>>", "253": "<(LITERAL,' ',print(' '))<SUB>40</SUB>>", "255": "<(IDENTIFIER,pw,close())<SUB>43</SUB>>", "257": "<(MODIFIER,STATIC)>"}}