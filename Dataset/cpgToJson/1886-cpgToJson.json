{"edges": [["19", "20"], ["19", "21"], ["19", "278"], ["19", "279"], ["19", "280"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "32"], ["21", "33"], ["21", "34"], ["21", "35"], ["21", "36"], ["21", "37"], ["21", "38"], ["21", "39"], ["21", "40"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["40", "41"], ["40", "43"], ["41", "42"], ["43", "44"], ["43", "48"], ["43", "50"], ["43", "66"], ["43", "73"], ["43", "129"], ["43", "134"], ["43", "268"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["50", "51"], ["50", "54"], ["50", "57"], ["50", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "72"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "77"], ["73", "80"], ["73", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "96"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "104"], ["96", "122"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["104", "113"], ["104", "116"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["123", "124"], ["123", "125"], ["123", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["134", "141"], ["134", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["143", "145"], ["143", "152"], ["143", "154"], ["143", "160"], ["143", "167"], ["143", "170"], ["143", "173"], ["143", "192"], ["143", "211"], ["143", "242"], ["143", "253"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "183"], ["174", "175"], ["174", "182"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "202"], ["193", "194"], ["193", "201"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "239"], ["214", "215"], ["214", "234"], ["215", "216"], ["215", "227"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "265"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["276", "277"], ["22", "28"], ["25", "41"], ["24", "22"], ["26", "25"], ["41", "280"], ["41", "46"], ["28", "26"], ["44", "48"], ["48", "51"], ["66", "74"], ["129", "135"], ["268", "41"], ["46", "44"], ["51", "54"], ["54", "61"], ["54", "69"], ["57", "54"], ["67", "66"], ["74", "77"], ["77", "84"], ["77", "133"], ["80", "77"], ["131", "129"], ["135", "138"], ["138", "149"], ["138", "271"], ["141", "138"], ["269", "276"], ["272", "268"], ["60", "57"], ["69", "67"], ["83", "100"], ["133", "131"], ["145", "152"], ["152", "156"], ["154", "164"], ["160", "167"], ["167", "170"], ["170", "178"], ["211", "247"], ["242", "261"], ["253", "141"], ["271", "269"], ["274", "272"], ["61", "64"], ["64", "60"], ["84", "90"], ["87", "83"], ["97", "110"], ["97", "125"], ["147", "145"], ["156", "154"], ["162", "160"], ["174", "188"], ["174", "197"], ["183", "197"], ["193", "207"], ["193", "217"], ["202", "217"], ["213", "211"], ["244", "242"], ["255", "253"], ["276", "274"], ["88", "93"], ["93", "87"], ["98", "97"], ["106", "113"], ["113", "118"], ["116", "80"], ["123", "80"], ["149", "147"], ["164", "162"], ["175", "174"], ["185", "183"], ["194", "193"], ["204", "202"], ["214", "239"], ["239", "213"], ["245", "244"], ["257", "255"], ["90", "88"], ["100", "98"], ["108", "106"], ["118", "116"], ["125", "123"], ["177", "175"], ["187", "185"], ["196", "194"], ["206", "204"], ["215", "236"], ["234", "214"], ["246", "245"], ["258", "265"], ["265", "257"], ["110", "108"], ["178", "177"], ["188", "187"], ["197", "196"], ["207", "206"], ["216", "230"], ["227", "215"], ["236", "234"], ["247", "246"], ["260", "258"], ["217", "223"], ["220", "216"], ["229", "227"], ["261", "260"], ["222", "220"], ["230", "229"], ["223", "222"], ["19", "24"], ["20", "280"], ["22", "280"], ["25", "280"], ["25", "280"], ["41", "280"], ["41", "280"], ["268", "280"], ["268", "280"], ["268", "280"], ["19", "20"], ["19", "22"], ["22", "25"], ["19", "25"], ["25", "41"], ["46", "41"], ["64", "41"], ["19", "41"], ["46", "44"], ["19", "66"], ["274", "129"], ["194", "48"], ["204", "48"], ["123", "48"], ["116", "48"], ["19", "48"], ["19", "51"], ["19", "74"], ["54", "74"], ["19", "135"], ["272", "268"], ["272", "268"], ["41", "46"], ["19", "46"], ["51", "54"], ["57", "54"], ["19", "54"], ["44", "54"], ["54", "57"], ["19", "57"], ["64", "60"], ["74", "77"], ["80", "77"], ["19", "77"], ["19", "80"], ["77", "80"], ["260", "83"], ["123", "83"], ["116", "83"], ["60", "83"], ["135", "138"], ["141", "138"], ["19", "138"], ["247", "138"], ["54", "138"], ["247", "141"], ["19", "141"], ["147", "145"], ["147", "145"], ["162", "160"], ["162", "160"], ["19", "167"], ["19", "170"], ["213", "211"], ["213", "211"], ["244", "242"], ["244", "242"], ["255", "253"], ["255", "253"], ["129", "272"], ["253", "272"], ["19", "272"], ["274", "272"], ["274", "272"], ["54", "69"], ["19", "69"], ["145", "152"], ["19", "152"], ["147", "154"], ["19", "154"], ["147", "154"], ["152", "154"], ["185", "183"], ["185", "183"], ["204", "202"], ["204", "202"], ["265", "274"], ["19", "274"], ["276", "274"], ["46", "64"], ["19", "64"], ["260", "87"], ["123", "87"], ["116", "87"], ["60", "87"], ["98", "97"], ["98", "97"], ["19", "97"], ["108", "106"], ["108", "106"], ["19", "113"], ["48", "147"], ["194", "147"], ["204", "147"], ["123", "147"], ["116", "147"], ["19", "147"], ["260", "147"], ["123", "147"], ["116", "147"], ["60", "147"], ["154", "162"], ["19", "162"], ["154", "162"], ["175", "174"], ["175", "174"], ["19", "174"], ["194", "193"], ["194", "193"], ["19", "193"], ["214", "213"], ["214", "213"], ["234", "213"], ["245", "244"], ["245", "244"], ["234", "244"], ["19", "244"], ["129", "255"], ["253", "255"], ["19", "255"], ["257", "255"], ["257", "255"], ["19", "276"], ["48", "98"], ["123", "98"], ["116", "98"], ["19", "98"], ["260", "98"], ["123", "98"], ["116", "98"], ["60", "98"], ["106", "113"], ["108", "116"], ["19", "116"], ["108", "116"], ["113", "116"], ["98", "123"], ["19", "123"], ["98", "123"], ["162", "175"], ["19", "175"], ["162", "175"], ["175", "185"], ["19", "185"], ["162", "185"], ["175", "194"], ["185", "194"], ["19", "194"], ["196", "194"], ["196", "194"], ["194", "204"], ["19", "204"], ["206", "204"], ["206", "204"], ["215", "214"], ["215", "214"], ["234", "214"], ["234", "214"], ["246", "245"], ["246", "245"], ["227", "245"], ["19", "245"], ["258", "257"], ["258", "257"], ["265", "257"], ["265", "257"], ["77", "90"], ["19", "90"], ["98", "108"], ["19", "108"], ["98", "108"], ["162", "177"], ["19", "177"], ["162", "187"], ["19", "187"], ["162", "196"], ["19", "196"], ["196", "206"], ["19", "206"], ["216", "215"], ["216", "215"], ["227", "215"], ["227", "215"], ["160", "234"], ["19", "234"], ["229", "234"], ["247", "246"], ["247", "246"], ["220", "246"], ["19", "246"], ["274", "258"], ["265", "258"], ["19", "258"], ["260", "258"], ["260", "258"], ["258", "265"], ["19", "265"], ["211", "265"], ["83", "216"], ["220", "216"], ["220", "216"], ["170", "227"], ["202", "227"], ["19", "227"], ["229", "227"], ["229", "227"], ["138", "247"], ["19", "247"], ["138", "247"], ["213", "260"], ["242", "260"], ["19", "260"], ["167", "220"], ["183", "220"], ["19", "220"], ["196", "220"], ["206", "220"], ["196", "229"], ["206", "229"], ["19", "229"], ["196", "222"], ["206", "222"], ["19", "222"], ["41", "272"], ["41", "74"], ["41", "129"], ["41", "138"], ["41", "54"], ["41", "268"], ["41", "276"], ["41", "274"], ["41", "48"], ["41", "66"], ["41", "135"], ["41", "41"], ["41", "269"], ["41", "133"], ["41", "77"], ["41", "51"], ["41", "131"], ["41", "69"], ["41", "67"], ["41", "44"], ["41", "46"], ["41", "271"], ["54", "60"], ["54", "54"], ["54", "61"], ["54", "64"], ["54", "57"], ["77", "84"], ["77", "93"], ["77", "80"], ["77", "100"], ["77", "88"], ["77", "77"], ["77", "98"], ["77", "87"], ["77", "97"], ["77", "90"], ["77", "83"], ["138", "214"], ["138", "167"], ["138", "230"], ["138", "154"], ["138", "215"], ["138", "196"], ["138", "213"], ["138", "162"], ["138", "170"], ["138", "138"], ["138", "247"], ["138", "242"], ["138", "152"], ["138", "174"], ["138", "194"], ["138", "258"], ["138", "160"], ["138", "141"], ["138", "236"], ["138", "260"], ["138", "217"], ["138", "253"], ["138", "177"], ["138", "147"], ["138", "229"], ["138", "216"], ["138", "227"], ["138", "222"], ["138", "145"], ["138", "178"], ["138", "149"], ["138", "257"], ["138", "244"], ["138", "261"], ["138", "197"], ["138", "245"], ["138", "255"], ["138", "223"], ["138", "246"], ["138", "164"], ["138", "265"], ["138", "239"], ["138", "193"], ["138", "220"], ["138", "234"], ["138", "211"], ["138", "175"], ["138", "156"], ["97", "118"], ["97", "108"], ["97", "116"], ["97", "123"], ["97", "113"], ["97", "106"], ["97", "110"], ["97", "125"], ["174", "188"], ["174", "185"], ["174", "187"], ["174", "183"], ["193", "204"], ["193", "206"], ["193", "202"], ["193", "207"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,cin,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long k: long)<SUB>3</SUB>>", "31": "<(LOCAL,long p: long)<SUB>3</SUB>>", "33": "<(LOCAL,long equal: long)<SUB>3</SUB>>", "35": "<(LOCAL,long lessone: long)<SUB>3</SUB>>", "37": "<(LOCAL,BigInteger ans: ANY)<SUB>4</SUB>>", "39": "<(LOCAL,int n: int)<SUB>5</SUB>>", "41": "<(hasNext,hasNext())<SUB>6</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,n = nextInt())<SUB>7</SUB>>", "47": "<(IDENTIFIER,cin,nextInt())<SUB>7</SUB>>", "49": "<(IDENTIFIER,check,clear())<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,i = 1)<SUB>9</SUB>>", "53": "<(LITERAL,1,i = 1)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i &lt;= n)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "63": "<(IDENTIFIER,i,a[i] = nextLong())<SUB>11</SUB>>", "65": "<(IDENTIFIER,cin,nextLong())<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,postfix[n + 1])<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.addition,n + 1)<SUB>13</SUB>>", "71": "<(LITERAL,1,n + 1)<SUB>13</SUB>>", "73": "<(CONTROL_STRUCTURE,for (i = n; Some(i &gt;= 1); i--),for (i = n; Some(i &gt;= 1); i--))<SUB>14</SUB>>", "75": "<(IDENTIFIER,i,i = n)<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 1)<SUB>14</SUB>>", "79": "<(LITERAL,1,i &gt;= 1)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,i--)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,postfix[i] = postfix[i + 1] + a[i])<SUB>15</SUB>>", "85": "<(IDENTIFIER,postfix,postfix[i] = postfix[i + 1] + a[i])<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.addition,postfix[i + 1] + a[i])<SUB>15</SUB>>", "89": "<(IDENTIFIER,postfix,postfix[i + 1] + a[i])<SUB>15</SUB>>", "91": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,postfix[i + 1] + a[i])<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.equals,check.containsKey(a[i]) == true)<SUB>16</SUB>>", "99": "<(IDENTIFIER,check,containsKey(a[i]))<SUB>16</SUB>>", "101": "<(IDENTIFIER,a,containsKey(a[i]))<SUB>16</SUB>>", "103": "<(LITERAL,true,check.containsKey(a[i]) == true)<SUB>16</SUB>>", "105": "<(LOCAL,Long v: java.lang.Long)<SUB>17</SUB>>", "107": "<(IDENTIFIER,v,Long v = get(a[i]))<SUB>17</SUB>>", "109": "<(IDENTIFIER,check,get(a[i]))<SUB>17</SUB>>", "111": "<(IDENTIFIER,a,get(a[i]))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,v += 1)<SUB>18</SUB>>", "115": "<(LITERAL,1,v += 1)<SUB>18</SUB>>", "117": "<(IDENTIFIER,check,put(a[i], v))<SUB>19</SUB>>", "119": "<(IDENTIFIER,a,put(a[i], v))<SUB>19</SUB>>", "121": "<(IDENTIFIER,v,put(a[i], v))<SUB>19</SUB>>", "123": "<(put,put(a[i], 1L))<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>22</SUB>>", "127": "<(IDENTIFIER,i,put(a[i], 1L))<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.assignment,ans = BigInteger.ZERO)<SUB>24</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,BigInteger.ZERO)<SUB>24</SUB>>", "133": "<(FIELD_IDENTIFIER,ZERO,ZERO)<SUB>24</SUB>>", "135": "<(&lt;operator&gt;.assignment,i = 1)<SUB>25</SUB>>", "137": "<(LITERAL,1,i = 1)<SUB>25</SUB>>", "139": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.assignment,Long v = get(a[i]))<SUB>26</SUB>>", "147": "<(get,get(a[i]))<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>26</SUB>>", "151": "<(IDENTIFIER,i,get(a[i]))<SUB>26</SUB>>", "153": "<(IDENTIFIER,v,v--)<SUB>27</SUB>>", "155": "<(IDENTIFIER,check,put(a[i], v))<SUB>28</SUB>>", "157": "<(IDENTIFIER,a,put(a[i], v))<SUB>28</SUB>>", "159": "<(IDENTIFIER,v,put(a[i], v))<SUB>28</SUB>>", "161": "<(IDENTIFIER,equal,equal = get(a[i]))<SUB>29</SUB>>", "163": "<(IDENTIFIER,check,get(a[i]))<SUB>29</SUB>>", "165": "<(IDENTIFIER,a,get(a[i]))<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.assignment,bigone = 0L)<SUB>30</SUB>>", "169": "<(LITERAL,0L,bigone = 0L)<SUB>30</SUB>>", "171": "<(IDENTIFIER,lessone,lessone = 0L)<SUB>31</SUB>>", "173": "<(CONTROL_STRUCTURE,if (check.containsKey(a[i] + 1L) == true),if (check.containsKey(a[i] + 1L) == true))<SUB>32</SUB>>", "175": "<(containsKey,containsKey(a[i] + 1L))<SUB>32</SUB>>", "177": "<(&lt;operator&gt;.addition,a[i] + 1L)<SUB>32</SUB>>", "179": "<(IDENTIFIER,a,a[i] + 1L)<SUB>32</SUB>>", "181": "<(LITERAL,1L,a[i] + 1L)<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.assignment,bigone = get(a[i] + 1L))<SUB>33</SUB>>", "185": "<(get,get(a[i] + 1L))<SUB>33</SUB>>", "187": "<(&lt;operator&gt;.addition,a[i] + 1L)<SUB>33</SUB>>", "189": "<(IDENTIFIER,a,a[i] + 1L)<SUB>33</SUB>>", "191": "<(LITERAL,1L,a[i] + 1L)<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.equals,check.containsKey(a[i] - 1L) == true)<SUB>34</SUB>>", "195": "<(IDENTIFIER,check,containsKey(a[i] - 1L))<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>34</SUB>>", "199": "<(IDENTIFIER,i,a[i] - 1L)<SUB>34</SUB>>", "201": "<(LITERAL,true,check.containsKey(a[i] - 1L) == true)<SUB>34</SUB>>", "203": "<(IDENTIFIER,lessone,lessone = get(a[i] - 1L))<SUB>35</SUB>>", "205": "<(IDENTIFIER,check,get(a[i] - 1L))<SUB>35</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>35</SUB>>", "209": "<(IDENTIFIER,i,a[i] - 1L)<SUB>35</SUB>>", "211": "<(&lt;operator&gt;.assignment,sum = postfix[i] - bigone * (a[i] + 1L) - lessone * (a[i] - 1L) - equal * a[i] - a[i])<SUB>36</SUB>>", "213": "<(&lt;operator&gt;.subtraction,postfix[i] - bigone * (a[i] + 1L) - lessone * (a[i] - 1L) - equal * a[i] - a[i])<SUB>36</SUB>>", "215": "<(&lt;operator&gt;.subtraction,postfix[i] - bigone * (a[i] + 1L) - lessone * (a[i] - 1L))<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,postfix[i])<SUB>36</SUB>>", "219": "<(IDENTIFIER,i,postfix[i] - bigone * (a[i] + 1L))<SUB>36</SUB>>", "221": "<(IDENTIFIER,bigone,bigone * (a[i] + 1L))<SUB>36</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>36</SUB>>", "225": "<(IDENTIFIER,i,a[i] + 1L)<SUB>36</SUB>>", "227": "<(&lt;operator&gt;.multiplication,lessone * (a[i] - 1L))<SUB>36</SUB>>", "229": "<(&lt;operator&gt;.subtraction,a[i] - 1L)<SUB>36</SUB>>", "231": "<(IDENTIFIER,a,a[i] - 1L)<SUB>36</SUB>>", "233": "<(LITERAL,1L,a[i] - 1L)<SUB>36</SUB>>", "235": "<(IDENTIFIER,equal,equal * a[i])<SUB>36</SUB>>", "237": "<(IDENTIFIER,a,equal * a[i])<SUB>36</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>36</SUB>>", "241": "<(IDENTIFIER,i,postfix[i] - bigone * (a[i] + 1L) - lessone * (a[i] - 1L) - equal * a[i] - a[i])<SUB>36</SUB>>", "243": "<(IDENTIFIER,cnt,cnt = n - i - bigone - lessone - equal)<SUB>37</SUB>>", "245": "<(&lt;operator&gt;.subtraction,n - i - bigone - lessone)<SUB>37</SUB>>", "247": "<(&lt;operator&gt;.subtraction,n - i)<SUB>37</SUB>>", "249": "<(IDENTIFIER,i,n - i)<SUB>37</SUB>>", "251": "<(IDENTIFIER,lessone,n - i - bigone - lessone)<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.assignment,ans = add(BigInteger.valueOf(a[i] * cnt).subtract(BigInteger.valueOf(sum))))<SUB>38</SUB>>", "255": "<(add,add(BigInteger.valueOf(a[i] * cnt).subtract(BigInteger.valueOf(sum))))<SUB>38</SUB>>", "257": "<(subtract,subtract(BigInteger.valueOf(sum)))<SUB>38</SUB>>", "259": "<(IDENTIFIER,BigInteger,valueOf(a[i] * cnt))<SUB>38</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>38</SUB>>", "263": "<(IDENTIFIER,i,a[i] * cnt)<SUB>38</SUB>>", "265": "<(valueOf,valueOf(sum))<SUB>38</SUB>>", "267": "<(IDENTIFIER,sum,valueOf(sum))<SUB>38</SUB>>", "269": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "271": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "273": "<(IDENTIFIER,ans,multiply(BigInteger.valueOf(-1)))<SUB>40</SUB>>", "275": "<(IDENTIFIER,BigInteger,valueOf(-1))<SUB>40</SUB>>", "277": "<(LITERAL,1,-1)<SUB>40</SUB>>", "279": "<(MODIFIER,STATIC)>"}}