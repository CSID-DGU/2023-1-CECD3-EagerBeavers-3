{"edges": [["19", "20"], ["19", "21"], ["19", "188"], ["19", "189"], ["19", "190"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "47"], ["21", "52"], ["21", "53"], ["21", "56"], ["21", "57"], ["21", "62"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "40"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "46"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "85"], ["64", "91"], ["64", "104"], ["64", "105"], ["64", "114"], ["64", "115"], ["64", "118"], ["64", "119"], ["64", "122"], ["64", "145"], ["64", "150"], ["64", "157"], ["64", "158"], ["64", "169"], ["64", "172"], ["64", "177"], ["65", "66"], ["65", "77"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "84"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["87", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "103"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "138"], ["123", "124"], ["123", "135"], ["124", "125"], ["124", "134"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "168"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "37"], ["47", "53"], ["53", "59"], ["57", "190"], ["57", "67"], ["24", "22"], ["29", "27"], ["34", "32"], ["37", "44"], ["37", "49"], ["49", "47"], ["59", "57"], ["41", "46"], ["46", "190"], ["85", "92"], ["105", "115"], ["115", "119"], ["119", "129"], ["145", "153"], ["150", "165"], ["158", "169"], ["169", "174"], ["172", "178"], ["42", "41"], ["66", "81"], ["66", "87"], ["87", "85"], ["92", "99"], ["92", "110"], ["107", "105"], ["123", "139"], ["123", "147"], ["147", "145"], ["152", "150"], ["160", "158"], ["174", "172"], ["178", "190"], ["178", "67"], ["178", "185"], ["44", "42"], ["67", "66"], ["67", "71"], ["70", "66"], ["78", "84"], ["84", "190"], ["96", "103"], ["103", "190"], ["108", "107"], ["124", "123"], ["124", "135"], ["135", "123"], ["139", "142"], ["142", "129"], ["153", "152"], ["162", "160"], ["182", "187"], ["187", "190"], ["71", "70"], ["71", "74"], ["74", "70"], ["79", "82"], ["82", "78"], ["97", "100"], ["100", "96"], ["110", "108"], ["125", "124"], ["163", "162"], ["183", "182"], ["81", "79"], ["99", "97"], ["127", "125"], ["165", "163"], ["185", "183"], ["128", "127"], ["129", "128"], ["19", "24"], ["46", "190"], ["84", "190"], ["187", "190"], ["103", "190"], ["20", "190"], ["22", "190"], ["25", "190"], ["27", "190"], ["27", "190"], ["32", "190"], ["34", "190"], ["32", "190"], ["32", "190"], ["37", "190"], ["37", "190"], ["41", "190"], ["41", "190"], ["87", "190"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["49", "47"], ["49", "47"], ["19", "53"], ["59", "57"], ["59", "57"], ["22", "25"], ["19", "25"], ["19", "63"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "37"], ["19", "37"], ["19", "46"], ["37", "49"], ["19", "49"], ["32", "59"], ["19", "59"], ["87", "85"], ["87", "85"], ["87", "85"], ["107", "105"], ["107", "105"], ["108", "115"], ["19", "115"], ["19", "119"], ["147", "145"], ["147", "145"], ["153", "150"], ["153", "150"], ["19", "150"], ["160", "158"], ["160", "158"], ["158", "169"], ["19", "169"], ["174", "172"], ["174", "172"], ["19", "41"], ["128", "145"], ["135", "145"], ["19", "145"], ["53", "150"], ["124", "169"], ["67", "66"], ["67", "66"], ["70", "66"], ["70", "66"], ["19", "84"], ["19", "87"], ["47", "87"], ["74", "87"], ["178", "87"], ["67", "87"], ["71", "87"], ["87", "92"], ["19", "92"], ["85", "92"], ["19", "103"], ["108", "107"], ["108", "107"], ["19", "107"], ["124", "123"], ["124", "123"], ["135", "123"], ["135", "123"], ["119", "139"], ["142", "139"], ["19", "139"], ["19", "142"], ["119", "147"], ["142", "147"], ["19", "147"], ["153", "152"], ["153", "152"], ["19", "152"], ["125", "160"], ["19", "160"], ["162", "160"], ["162", "160"], ["163", "174"], ["19", "174"], ["169", "178"], ["19", "178"], ["19", "187"], ["57", "67"], ["172", "67"], ["19", "67"], ["71", "70"], ["71", "70"], ["74", "70"], ["74", "70"], ["82", "78"], ["53", "96"], ["150", "96"], ["19", "96"], ["19", "108"], ["92", "108"], ["125", "124"], ["125", "124"], ["92", "124"], ["19", "124"], ["128", "135"], ["19", "135"], ["128", "139"], ["135", "139"], ["119", "142"], ["19", "153"], ["108", "153"], ["145", "153"], ["163", "162"], ["163", "162"], ["19", "162"], ["150", "182"], ["19", "182"], ["67", "71"], ["19", "71"], ["47", "74"], ["178", "74"], ["19", "74"], ["19", "82"], ["53", "100"], ["150", "100"], ["19", "100"], ["92", "110"], ["19", "110"], ["105", "125"], ["19", "125"], ["127", "125"], ["127", "125"], ["165", "163"], ["19", "163"], ["165", "163"], ["128", "127"], ["128", "127"], ["19", "127"], ["153", "165"], ["19", "165"], ["129", "128"], ["129", "128"], ["19", "128"], ["115", "129"], ["139", "129"], ["19", "129"], ["37", "42"], ["37", "57"], ["37", "59"], ["37", "44"], ["37", "47"], ["37", "49"], ["37", "46"], ["37", "53"], ["37", "41"], ["37", "67"], ["37", "66"], ["66", "81"], ["66", "84"], ["66", "85"], ["66", "92"], ["66", "87"], ["66", "79"], ["66", "82"], ["66", "78"], ["92", "107"], ["92", "115"], ["92", "96"], ["92", "145"], ["92", "128"], ["92", "169"], ["92", "163"], ["92", "178"], ["92", "103"], ["92", "150"], ["92", "119"], ["92", "162"], ["92", "153"], ["92", "97"], ["92", "129"], ["92", "152"], ["92", "100"], ["92", "174"], ["92", "127"], ["92", "108"], ["92", "158"], ["92", "160"], ["92", "99"], ["92", "123"], ["92", "105"], ["92", "165"], ["92", "147"], ["92", "110"], ["92", "124"], ["92", "125"], ["92", "172"], ["123", "128"], ["123", "129"], ["123", "127"], ["123", "139"], ["123", "142"], ["123", "123"], ["123", "124"], ["123", "125"], ["178", "185"], ["178", "187"], ["178", "182"], ["178", "183"], ["178", "67"], ["178", "66"], ["67", "70"], ["67", "71"], ["124", "135"], ["71", "74"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>3</SUB>>", "29": "<(nextLong,nextLong())<SUB>3</SUB>>", "31": "<(LOCAL,int k: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,int k = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.equals,n == 1)<SUB>6</SUB>>", "39": "<(LITERAL,1,n == 1)<SUB>6</SUB>>", "41": "<(println,System.out.println(0))<SUB>7</SUB>>", "43": "<(IDENTIFIER,System,System.out.println(0))<SUB>7</SUB>>", "45": "<(LITERAL,0,System.out.println(0))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,n = n - 1)<SUB>10</SUB>>", "49": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>10</SUB>>", "51": "<(LITERAL,1,n - 1)<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>11</SUB>>", "55": "<(LITERAL,0,int count = 0)<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,long nextK = k - 1)<SUB>12</SUB>>", "59": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>12</SUB>>", "61": "<(LITERAL,1,k - 1)<SUB>12</SUB>>", "63": "<(LITERAL,true,while (true))<SUB>13</SUB>>", "65": "<(CONTROL_STRUCTURE,if (nextK &lt; 1 || (nextK &lt;= 1 &amp;&amp; n &gt; 1)),if (nextK &lt; 1 || (nextK &lt;= 1 &amp;&amp; n &gt; 1)))<SUB>16</SUB>>", "67": "<(&lt;operator&gt;.lessThan,nextK &lt; 1)<SUB>16</SUB>>", "69": "<(LITERAL,1,nextK &lt; 1)<SUB>16</SUB>>", "71": "<(&lt;operator&gt;.lessEqualsThan,nextK &lt;= 1)<SUB>16</SUB>>", "73": "<(LITERAL,1,nextK &lt;= 1)<SUB>16</SUB>>", "75": "<(IDENTIFIER,n,n &gt; 1)<SUB>16</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "79": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "81": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "83": "<(LITERAL,1,-1)<SUB>17</SUB>>", "85": "<(&lt;operator&gt;.assignment,nextK = Math.min(n, nextK))<SUB>21</SUB>>", "87": "<(min,Math.min(n, nextK))<SUB>21</SUB>>", "89": "<(IDENTIFIER,n,Math.min(n, nextK))<SUB>21</SUB>>", "91": "<(CONTROL_STRUCTURE,if (n == nextK),if (n == nextK))<SUB>22</SUB>>", "93": "<(IDENTIFIER,n,n == nextK)<SUB>22</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "97": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "99": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "101": "<(IDENTIFIER,count,count + 1)<SUB>23</SUB>>", "103": "<(RETURN,return;,return;)<SUB>24</SUB>>", "105": "<(&lt;operator&gt;.assignment,long bSum = nextK * (nextK + 1) / 2)<SUB>29</SUB>>", "107": "<(&lt;operator&gt;.division,nextK * (nextK + 1) / 2)<SUB>29</SUB>>", "109": "<(IDENTIFIER,nextK,nextK * (nextK + 1))<SUB>29</SUB>>", "111": "<(IDENTIFIER,nextK,nextK + 1)<SUB>29</SUB>>", "113": "<(LITERAL,2,nextK * (nextK + 1) / 2)<SUB>29</SUB>>", "115": "<(&lt;operator&gt;.assignment,long a = nextK)<SUB>30</SUB>>", "117": "<(IDENTIFIER,nextK,long a = nextK)<SUB>30</SUB>>", "119": "<(&lt;operator&gt;.assignment,long decrement = 1)<SUB>31</SUB>>", "121": "<(LITERAL,1,long decrement = 1)<SUB>31</SUB>>", "123": "<(&lt;operator&gt;.logicalAnd,bSum - (a - 1) * a / 2 &lt;= n &amp;&amp; a &gt;= 1)<SUB>32</SUB>>", "125": "<(&lt;operator&gt;.subtraction,bSum - (a - 1) * a / 2)<SUB>32</SUB>>", "127": "<(&lt;operator&gt;.division,(a - 1) * a / 2)<SUB>32</SUB>>", "129": "<(&lt;operator&gt;.subtraction,a - 1)<SUB>32</SUB>>", "131": "<(LITERAL,1,a - 1)<SUB>32</SUB>>", "133": "<(LITERAL,2,(a - 1) * a / 2)<SUB>32</SUB>>", "135": "<(&lt;operator&gt;.greaterEqualsThan,a &gt;= 1)<SUB>32</SUB>>", "137": "<(LITERAL,1,a &gt;= 1)<SUB>32</SUB>>", "139": "<(&lt;operator&gt;.assignmentMinus,a -= decrement)<SUB>33</SUB>>", "141": "<(IDENTIFIER,decrement,a -= decrement)<SUB>33</SUB>>", "143": "<(IDENTIFIER,decrement,decrement *= 2)<SUB>34</SUB>>", "145": "<(&lt;operator&gt;.assignmentPlus,a += decrement / 2)<SUB>36</SUB>>", "147": "<(&lt;operator&gt;.division,decrement / 2)<SUB>36</SUB>>", "149": "<(LITERAL,2,decrement / 2)<SUB>36</SUB>>", "151": "<(IDENTIFIER,count,count += nextK - a + 1)<SUB>40</SUB>>", "153": "<(&lt;operator&gt;.subtraction,nextK - a)<SUB>40</SUB>>", "155": "<(IDENTIFIER,a,nextK - a)<SUB>40</SUB>>", "157": "<(LOCAL,long nDecr: long)<SUB>42</SUB>>", "159": "<(IDENTIFIER,nDecr,long nDecr = bSum - a * (a - 1) / 2)<SUB>42</SUB>>", "161": "<(IDENTIFIER,bSum,bSum - a * (a - 1) / 2)<SUB>42</SUB>>", "163": "<(&lt;operator&gt;.multiplication,a * (a - 1))<SUB>42</SUB>>", "165": "<(&lt;operator&gt;.subtraction,a - 1)<SUB>42</SUB>>", "167": "<(LITERAL,1,a - 1)<SUB>42</SUB>>", "169": "<(&lt;operator&gt;.assignmentMinus,n -= nDecr)<SUB>45</SUB>>", "171": "<(IDENTIFIER,nDecr,n -= nDecr)<SUB>45</SUB>>", "173": "<(IDENTIFIER,nextK,nextK = a - 1)<SUB>46</SUB>>", "175": "<(IDENTIFIER,a,a - 1)<SUB>46</SUB>>", "177": "<(CONTROL_STRUCTURE,if (n == 0),if (n == 0))<SUB>47</SUB>>", "179": "<(IDENTIFIER,n,n == 0)<SUB>47</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "183": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>48</SUB>>", "185": "<(FIELD_IDENTIFIER,out,out)<SUB>48</SUB>>", "187": "<(RETURN,return;,return;)<SUB>49</SUB>>", "189": "<(MODIFIER,STATIC)>"}}