{"edges": [["21", "23"], ["21", "141"], ["21", "142"], ["21", "143"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "6"], ["23", "56"], ["23", "59"], ["23", "60"], ["23", "61"], ["23", "65"], ["23", "85"], ["23", "88"], ["23", "136"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "5"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["99", "100"], ["99", "106"], ["100", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "109"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "130"], ["121", "122"], ["121", "129"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["130", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["24", "31"], ["27", "43"], ["39", "49"], ["46", "53"], ["53", "58"], ["56", "59"], ["59", "63"], ["61", "67"], ["85", "90"], ["136", "143"], ["26", "24"], ["41", "39"], ["48", "46"], ["58", "56"], ["63", "61"], ["67", "70"], ["70", "77"], ["70", "85"], ["73", "70"], ["90", "93"], ["93", "103"], ["93", "139"], ["96", "93"], ["137", "136"], ["29", "36"], ["32", "27"], ["43", "41"], ["49", "48"], ["76", "73"], ["139", "137"], ["31", "29"], ["34", "32"], ["77", "82"], ["80", "76"], ["100", "107"], ["100", "96"], ["36", "34"], ["82", "80"], ["101", "100"], ["107", "111"], ["103", "101"], ["111", "114"], ["114", "123"], ["114", "96"], ["117", "114"], ["121", "133"], ["121", "117"], ["122", "121"], ["131", "117"], ["123", "126"], ["126", "122"], ["133", "131"], ["21", "26"], ["22", "143"], ["24", "143"], ["29", "143"], ["32", "143"], ["32", "143"], ["32", "143"], ["27", "143"], ["41", "143"], ["39", "143"], ["39", "143"], ["46", "143"], ["49", "143"], ["48", "143"], ["46", "143"], ["46", "143"], ["53", "143"], ["56", "143"], ["59", "143"], ["59", "143"], ["61", "143"], ["61", "143"], ["85", "143"], ["85", "143"], ["90", "143"], ["93", "143"], ["93", "143"], ["93", "143"], ["136", "143"], ["136", "143"], ["136", "143"], ["101", "143"], ["101", "143"], ["100", "143"], ["100", "143"], ["107", "143"], ["111", "143"], ["114", "143"], ["114", "143"], ["96", "143"], ["122", "143"], ["122", "143"], ["121", "143"], ["121", "143"], ["131", "143"], ["131", "143"], ["131", "143"], ["117", "143"], ["76", "143"], ["80", "143"], ["80", "143"], ["76", "143"], ["76", "143"], ["73", "143"], ["85", "143"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["48", "46"], ["21", "53"], ["21", "56"], ["63", "61"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["56", "59"], ["21", "59"], ["21", "67"], ["21", "85"], ["61", "85"], ["76", "85"], ["21", "90"], ["53", "136"], ["107", "136"], ["21", "136"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["49", "48"], ["21", "48"], ["39", "63"], ["21", "63"], ["67", "70"], ["73", "70"], ["21", "70"], ["63", "70"], ["70", "73"], ["21", "73"], ["80", "76"], ["80", "76"], ["90", "93"], ["96", "93"], ["21", "93"], ["70", "93"], ["114", "93"], ["93", "96"], ["21", "96"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["43", "49"], ["21", "49"], ["41", "80"], ["21", "80"], ["46", "80"], ["101", "100"], ["101", "100"], ["59", "101"], ["131", "101"], ["21", "101"], ["85", "101"], ["122", "101"], ["76", "101"], ["53", "107"], ["21", "107"], ["93", "111"], ["21", "111"], ["111", "114"], ["117", "114"], ["21", "114"], ["93", "114"], ["114", "117"], ["21", "117"], ["122", "121"], ["122", "121"], ["21", "121"], ["85", "122"], ["131", "122"], ["101", "122"], ["101", "131"], ["21", "131"], ["85", "131"], ["122", "131"], ["70", "73"], ["70", "77"], ["70", "76"], ["70", "82"], ["70", "80"], ["70", "70"], ["93", "96"], ["93", "103"], ["93", "93"], ["93", "101"], ["93", "100"], ["100", "107"], ["100", "114"], ["100", "111"], ["114", "122"], ["114", "114"], ["114", "121"], ["114", "123"], ["114", "126"], ["114", "117"], ["121", "131"], ["121", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "45": "<(LOCAL,String[] input: java.lang.String[])<SUB>4</SUB>>", "47": "<(IDENTIFIER,input,String[] input = split(&quot; &quot;))<SUB>4</SUB>>", "49": "<(readLine,readLine())<SUB>4</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>5</SUB>>", "55": "<(LITERAL,0,int c = 0)<SUB>5</SUB>>", "56": "<(&lt;operator&gt;.assignment,ANY s = new HashSet&lt;&gt;())<SUB>6</SUB>>", "58": "<(&lt;operator&gt;.alloc,new HashSet&lt;&gt;())<SUB>6</SUB>>", "5": "<(IDENTIFIER,s,new HashSet&lt;&gt;())<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n])>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,arr[i] = Integer.parseInt(input[i]))<SUB>9</SUB>>", "81": "<(IDENTIFIER,Integer,Integer.parseInt(input[i]))<SUB>9</SUB>>", "83": "<(IDENTIFIER,input,Integer.parseInt(input[i]))<SUB>9</SUB>>", "85": "<(sort,sort(arr))<SUB>11</SUB>>", "87": "<(IDENTIFIER,arr,sort(arr))<SUB>11</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(CONTROL_STRUCTURE,if (!s.contains(arr[i])),if (!s.contains(arr[i])))<SUB>13</SUB>>", "101": "<(contains,contains(arr[i]))<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,contains(arr[i]))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,c++)<SUB>14</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt; n); j++),for (int j = i; Some(j &lt; n); j++))<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,int j = i)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,int j = i)<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,j &lt; n)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.equals,arr[j] % arr[i] == 0)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>16</SUB>>", "125": "<(IDENTIFIER,j,arr[j] % arr[i])<SUB>16</SUB>>", "127": "<(IDENTIFIER,arr,arr[j] % arr[i])<SUB>16</SUB>>", "129": "<(LITERAL,0,arr[j] % arr[i] == 0)<SUB>16</SUB>>", "131": "<(add,add(arr[j]))<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,add(arr[j]))<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "139": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "141": "<(MODIFIER,PUBLIC)>", "143": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}