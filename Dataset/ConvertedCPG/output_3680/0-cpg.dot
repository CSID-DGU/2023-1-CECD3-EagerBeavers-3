digraph "main" {  
"19" [label = <(METHOD,main)<SUB>1</SUB>> ]
"20" [label = <(PARAM,String[] args)<SUB>1</SUB>> ]
"21" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"4" [label = <(LOCAL,Thread t: java.lang.Thread)<SUB>2</SUB>> ]
"22" [label = <(&lt;operator&gt;.assignment,Thread t = new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"23" [label = <(IDENTIFIER,t,Thread t = new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"24" [label = <(&lt;operator&gt;.alloc,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"25" [label = <(&lt;init&gt;,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"3" [label = <(IDENTIFIER,t,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"26" [label = <(LITERAL,null,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"27" [label = <(LITERAL,null,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"28" [label = <(LITERAL,&quot;~&quot;,new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012})<SUB>2</SUB>> ]
"29" [label = <(maxMemory,Runtime.getRuntime().maxMemory())<SUB>2</SUB>> ]
"30" [label = <(getRuntime,Runtime.getRuntime())<SUB>2</SUB>> ]
"31" [label = <(IDENTIFIER,Runtime,Runtime.getRuntime())<SUB>2</SUB>> ]
"32" [label = <(start,t.start())<SUB>13</SUB>> ]
"33" [label = <(IDENTIFIER,t,t.start())<SUB>13</SUB>> ]
"34" [label = <(join,t.join())<SUB>14</SUB>> ]
"35" [label = <(IDENTIFIER,t,t.join())<SUB>14</SUB>> ]
"36" [label = <(MODIFIER,PUBLIC)> ]
"37" [label = <(MODIFIER,STATIC)> ]
"38" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "19" -> "20"  [ label = "AST: "] 
  "19" -> "21"  [ label = "AST: "] 
  "19" -> "36"  [ label = "AST: "] 
  "19" -> "37"  [ label = "AST: "] 
  "19" -> "38"  [ label = "AST: "] 
  "21" -> "4"  [ label = "AST: "] 
  "21" -> "22"  [ label = "AST: "] 
  "21" -> "25"  [ label = "AST: "] 
  "21" -> "32"  [ label = "AST: "] 
  "21" -> "34"  [ label = "AST: "] 
  "22" -> "23"  [ label = "AST: "] 
  "22" -> "24"  [ label = "AST: "] 
  "25" -> "3"  [ label = "AST: "] 
  "25" -> "26"  [ label = "AST: "] 
  "25" -> "27"  [ label = "AST: "] 
  "25" -> "28"  [ label = "AST: "] 
  "25" -> "29"  [ label = "AST: "] 
  "29" -> "30"  [ label = "AST: "] 
  "30" -> "31"  [ label = "AST: "] 
  "32" -> "33"  [ label = "AST: "] 
  "34" -> "35"  [ label = "AST: "] 
  "22" -> "30"  [ label = "CFG: "] 
  "25" -> "32"  [ label = "CFG: "] 
  "32" -> "34"  [ label = "CFG: "] 
  "34" -> "38"  [ label = "CFG: "] 
  "24" -> "22"  [ label = "CFG: "] 
  "29" -> "25"  [ label = "CFG: "] 
  "30" -> "29"  [ label = "CFG: "] 
  "19" -> "24"  [ label = "CFG: "] 
  "20" -> "38"  [ label = "DDG: args"] 
  "22" -> "38"  [ label = "DDG: Thread t = new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012}"] 
  "29" -> "38"  [ label = "DDG: Runtime.getRuntime()"] 
  "25" -> "38"  [ label = "DDG: Runtime.getRuntime().maxMemory()"] 
  "25" -> "38"  [ label = "DDG: new Thread(null, null, &quot;~&quot;, Runtime.getRuntime().maxMemory()) {\012\012    @Override\012    public void run() {\012        try {\012            solve();\012        } catch (Exception e) {\012            System.err.println(&quot;ERROR&quot;);\012        }\012    }\012}"] 
  "32" -> "38"  [ label = "DDG: t.start()"] 
  "34" -> "38"  [ label = "DDG: t"] 
  "34" -> "38"  [ label = "DDG: t.join()"] 
  "30" -> "38"  [ label = "DDG: Runtime"] 
  "19" -> "20"  [ label = "DDG: "] 
  "19" -> "22"  [ label = "DDG: "] 
  "22" -> "25"  [ label = "DDG: t"] 
  "19" -> "25"  [ label = "DDG: "] 
  "29" -> "25"  [ label = "DDG: Runtime.getRuntime()"] 
  "25" -> "32"  [ label = "DDG: t"] 
  "19" -> "32"  [ label = "DDG: "] 
  "32" -> "34"  [ label = "DDG: t"] 
  "19" -> "34"  [ label = "DDG: "] 
  "30" -> "29"  [ label = "DDG: Runtime"] 
  "19" -> "30"  [ label = "DDG: "] 
}
