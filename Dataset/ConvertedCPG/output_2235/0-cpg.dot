digraph "main" {  
"17" [label = <(METHOD,main)<SUB>1</SUB>> ]
"18" [label = <(PARAM,String[] args)<SUB>1</SUB>> ]
"19" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"20" [label = <(start,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000).start())<SUB>2</SUB>> ]
"21" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"22" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"23" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"24" [label = <(&lt;operator&gt;.alloc,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))<SUB>2</SUB>> ]
"25" [label = <(&lt;init&gt;,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))<SUB>2</SUB>> ]
"26" [label = <(IDENTIFIER,$obj1,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))> ]
"27" [label = <(LITERAL,null,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))<SUB>2</SUB>> ]
"28" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"29" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"30" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"31" [label = <(&lt;operator&gt;.alloc,new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012})<SUB>2</SUB>> ]
"32" [label = <(&lt;init&gt;,new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012})<SUB>2</SUB>> ]
"33" [label = <(IDENTIFIER,$obj0,new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012})> ]
"34" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"35" [label = <(LITERAL,&quot;&quot;,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))<SUB>19</SUB>> ]
"36" [label = <(LITERAL,64000000,new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000))<SUB>19</SUB>> ]
"37" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"38" [label = <(MODIFIER,PUBLIC)> ]
"39" [label = <(MODIFIER,STATIC)> ]
"40" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "17" -> "18"  [ label = "AST: "] 
  "17" -> "19"  [ label = "AST: "] 
  "17" -> "38"  [ label = "AST: "] 
  "17" -> "39"  [ label = "AST: "] 
  "17" -> "40"  [ label = "AST: "] 
  "19" -> "20"  [ label = "AST: "] 
  "20" -> "21"  [ label = "AST: "] 
  "21" -> "22"  [ label = "AST: "] 
  "21" -> "25"  [ label = "AST: "] 
  "21" -> "37"  [ label = "AST: "] 
  "22" -> "23"  [ label = "AST: "] 
  "22" -> "24"  [ label = "AST: "] 
  "25" -> "26"  [ label = "AST: "] 
  "25" -> "27"  [ label = "AST: "] 
  "25" -> "28"  [ label = "AST: "] 
  "25" -> "35"  [ label = "AST: "] 
  "25" -> "36"  [ label = "AST: "] 
  "28" -> "29"  [ label = "AST: "] 
  "28" -> "32"  [ label = "AST: "] 
  "28" -> "34"  [ label = "AST: "] 
  "29" -> "30"  [ label = "AST: "] 
  "29" -> "31"  [ label = "AST: "] 
  "32" -> "33"  [ label = "AST: "] 
  "20" -> "40"  [ label = "CFG: "] 
  "22" -> "31"  [ label = "CFG: "] 
  "25" -> "20"  [ label = "CFG: "] 
  "24" -> "22"  [ label = "CFG: "] 
  "29" -> "32"  [ label = "CFG: "] 
  "32" -> "25"  [ label = "CFG: "] 
  "31" -> "29"  [ label = "CFG: "] 
  "17" -> "24"  [ label = "CFG: "] 
  "18" -> "40"  [ label = "DDG: args"] 
  "25" -> "40"  [ label = "DDG: $obj1"] 
  "29" -> "40"  [ label = "DDG: &lt;empty&gt;"] 
  "32" -> "40"  [ label = "DDG: $obj0"] 
  "32" -> "40"  [ label = "DDG: new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}"] 
  "25" -> "40"  [ label = "DDG: new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000)"] 
  "20" -> "40"  [ label = "DDG: new Thread(null, new Runnable() {\012\012    @Override\012    public void run() {\012        long start = System.currentTimeMillis();\012        String debug = args.length &gt; 0 ? args[0] : null;\012        if (debug != null) {\012            try {\012                is = java.nio.file.Files.newInputStream(java.nio.file.Paths.get(debug));\012            } catch (Exception e) {\012                throw new RuntimeException(e);\012            }\012        }\012        reader = new java.io.BufferedReader(new java.io.InputStreamReader(is), 32768);\012        solve();\012        out.flush();\012        tr((System.currentTimeMillis() - start) + &quot;ms&quot;);\012    }\012}, &quot;&quot;, 64000000).start()"] 
  "17" -> "18"  [ label = "DDG: "] 
  "29" -> "20"  [ label = "DDG: &lt;empty&gt;"] 
  "25" -> "20"  [ label = "DDG: $obj1"] 
  "17" -> "20"  [ label = "DDG: "] 
  "17" -> "22"  [ label = "DDG: "] 
  "17" -> "37"  [ label = "DDG: "] 
  "22" -> "25"  [ label = "DDG: $obj1"] 
  "17" -> "25"  [ label = "DDG: "] 
  "29" -> "25"  [ label = "DDG: &lt;empty&gt;"] 
  "32" -> "25"  [ label = "DDG: $obj0"] 
  "17" -> "29"  [ label = "DDG: "] 
  "17" -> "34"  [ label = "DDG: "] 
  "29" -> "32"  [ label = "DDG: $obj0"] 
  "17" -> "32"  [ label = "DDG: "] 
}
