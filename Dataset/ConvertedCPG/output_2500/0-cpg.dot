digraph "main" {  
"19" [label = <(METHOD,main)<SUB>1</SUB>> ]
"20" [label = <(PARAM,String[] args)<SUB>1</SUB>> ]
"21" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>> ]
"4" [label = <(LOCAL,BufferedReader input: ANY)<SUB>2</SUB>> ]
"22" [label = <(&lt;operator&gt;.assignment,ANY input = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>> ]
"23" [label = <(IDENTIFIER,input,ANY input = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>> ]
"24" [label = <(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>> ]
"25" [label = <(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>> ]
"3" [label = <(IDENTIFIER,input,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>> ]
"26" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>> ]
"27" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"28" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"29" [label = <(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>> ]
"30" [label = <(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>> ]
"31" [label = <(IDENTIFIER,$obj0,new InputStreamReader(System.in))> ]
"32" [label = <(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>> ]
"33" [label = <(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>> ]
"34" [label = <(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>> ]
"35" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"36" [label = <(LOCAL,String[] numbersAsString: java.lang.String[])<SUB>3</SUB>> ]
"37" [label = <(&lt;operator&gt;.assignment,String[] numbersAsString = split(&quot; &quot;))<SUB>3</SUB>> ]
"38" [label = <(IDENTIFIER,numbersAsString,String[] numbersAsString = split(&quot; &quot;))<SUB>3</SUB>> ]
"39" [label = <(split,split(&quot; &quot;))<SUB>3</SUB>> ]
"40" [label = <(get,get())<SUB>3</SUB>> ]
"41" [label = <(findFirst,findFirst())<SUB>3</SUB>> ]
"42" [label = <(skip,skip(1))<SUB>3</SUB>> ]
"43" [label = <(lines,lines())<SUB>3</SUB>> ]
"44" [label = <(IDENTIFIER,input,lines())<SUB>3</SUB>> ]
"45" [label = <(LITERAL,1,skip(1))<SUB>4</SUB>> ]
"46" [label = <(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>7</SUB>> ]
"47" [label = <(LOCAL,int[] numbers: int[])<SUB>8</SUB>> ]
"48" [label = <(&lt;operator&gt;.assignment,int[] numbers = toArray())<SUB>8</SUB>> ]
"49" [label = <(IDENTIFIER,numbers,int[] numbers = toArray())<SUB>8</SUB>> ]
"50" [label = <(toArray,toArray())<SUB>8</SUB>> ]
"51" [label = <(mapToInt,mapToInt(Integer::parseInt))<SUB>8</SUB>> ]
"52" [label = <(stream,stream(numbersAsString))<SUB>8</SUB>> ]
"53" [label = <(IDENTIFIER,Arrays,stream(numbersAsString))<SUB>8</SUB>> ]
"54" [label = <(IDENTIFIER,numbersAsString,stream(numbersAsString))<SUB>8</SUB>> ]
"55" [label = <(UNKNOWN,Integer::parseInt,Integer::parseInt)<SUB>8</SUB>> ]
"56" [label = <(LOCAL,List&lt;PairOfInt&gt; sameSumBlocks: ANY)<SUB>9</SUB>> ]
"57" [label = <(&lt;operator&gt;.assignment,ANY sameSumBlocks = findSameSumBlocks(numbers))<SUB>9</SUB>> ]
"58" [label = <(IDENTIFIER,sameSumBlocks,ANY sameSumBlocks = findSameSumBlocks(numbers))<SUB>9</SUB>> ]
"59" [label = <(findSameSumBlocks,findSameSumBlocks(numbers))<SUB>9</SUB>> ]
"60" [label = <(IDENTIFIER,this,findSameSumBlocks(numbers))<SUB>9</SUB>> ]
"61" [label = <(IDENTIFIER,numbers,findSameSumBlocks(numbers))<SUB>9</SUB>> ]
"62" [label = <(println,println(sameSumBlocks.size()))<SUB>10</SUB>> ]
"63" [label = <(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>> ]
"64" [label = <(IDENTIFIER,System,println(sameSumBlocks.size()))<SUB>10</SUB>> ]
"65" [label = <(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>> ]
"66" [label = <(size,size())<SUB>10</SUB>> ]
"67" [label = <(IDENTIFIER,sameSumBlocks,size())<SUB>10</SUB>> ]
"68" [label = <(forEach,forEach(System.out::println))<SUB>11</SUB>> ]
"69" [label = <(IDENTIFIER,sameSumBlocks,forEach(System.out::println))<SUB>11</SUB>> ]
"70" [label = <(UNKNOWN,System.out::println,System.out::println)<SUB>11</SUB>> ]
"71" [label = <(MODIFIER,PUBLIC)> ]
"72" [label = <(MODIFIER,STATIC)> ]
"73" [label = <(METHOD_RETURN,void)<SUB>1</SUB>> ]
  "19" -> "20"  [ label = "AST: "] 
  "19" -> "21"  [ label = "AST: "] 
  "19" -> "71"  [ label = "AST: "] 
  "19" -> "72"  [ label = "AST: "] 
  "19" -> "73"  [ label = "AST: "] 
  "21" -> "4"  [ label = "AST: "] 
  "21" -> "22"  [ label = "AST: "] 
  "21" -> "25"  [ label = "AST: "] 
  "21" -> "36"  [ label = "AST: "] 
  "21" -> "37"  [ label = "AST: "] 
  "21" -> "47"  [ label = "AST: "] 
  "21" -> "48"  [ label = "AST: "] 
  "21" -> "56"  [ label = "AST: "] 
  "21" -> "57"  [ label = "AST: "] 
  "21" -> "62"  [ label = "AST: "] 
  "21" -> "68"  [ label = "AST: "] 
  "22" -> "23"  [ label = "AST: "] 
  "22" -> "24"  [ label = "AST: "] 
  "25" -> "3"  [ label = "AST: "] 
  "25" -> "26"  [ label = "AST: "] 
  "26" -> "27"  [ label = "AST: "] 
  "26" -> "30"  [ label = "AST: "] 
  "26" -> "35"  [ label = "AST: "] 
  "27" -> "28"  [ label = "AST: "] 
  "27" -> "29"  [ label = "AST: "] 
  "30" -> "31"  [ label = "AST: "] 
  "30" -> "32"  [ label = "AST: "] 
  "32" -> "33"  [ label = "AST: "] 
  "32" -> "34"  [ label = "AST: "] 
  "37" -> "38"  [ label = "AST: "] 
  "37" -> "39"  [ label = "AST: "] 
  "39" -> "40"  [ label = "AST: "] 
  "39" -> "46"  [ label = "AST: "] 
  "40" -> "41"  [ label = "AST: "] 
  "41" -> "42"  [ label = "AST: "] 
  "42" -> "43"  [ label = "AST: "] 
  "42" -> "45"  [ label = "AST: "] 
  "43" -> "44"  [ label = "AST: "] 
  "48" -> "49"  [ label = "AST: "] 
  "48" -> "50"  [ label = "AST: "] 
  "50" -> "51"  [ label = "AST: "] 
  "51" -> "52"  [ label = "AST: "] 
  "51" -> "55"  [ label = "AST: "] 
  "52" -> "53"  [ label = "AST: "] 
  "52" -> "54"  [ label = "AST: "] 
  "57" -> "58"  [ label = "AST: "] 
  "57" -> "59"  [ label = "AST: "] 
  "59" -> "60"  [ label = "AST: "] 
  "59" -> "61"  [ label = "AST: "] 
  "62" -> "63"  [ label = "AST: "] 
  "62" -> "66"  [ label = "AST: "] 
  "63" -> "64"  [ label = "AST: "] 
  "63" -> "65"  [ label = "AST: "] 
  "66" -> "67"  [ label = "AST: "] 
  "68" -> "69"  [ label = "AST: "] 
  "68" -> "70"  [ label = "AST: "] 
  "22" -> "29"  [ label = "CFG: "] 
  "25" -> "43"  [ label = "CFG: "] 
  "37" -> "52"  [ label = "CFG: "] 
  "48" -> "59"  [ label = "CFG: "] 
  "57" -> "65"  [ label = "CFG: "] 
  "62" -> "70"  [ label = "CFG: "] 
  "68" -> "73"  [ label = "CFG: "] 
  "24" -> "22"  [ label = "CFG: "] 
  "39" -> "37"  [ label = "CFG: "] 
  "50" -> "48"  [ label = "CFG: "] 
  "59" -> "57"  [ label = "CFG: "] 
  "63" -> "66"  [ label = "CFG: "] 
  "66" -> "62"  [ label = "CFG: "] 
  "70" -> "68"  [ label = "CFG: "] 
  "27" -> "34"  [ label = "CFG: "] 
  "30" -> "25"  [ label = "CFG: "] 
  "40" -> "39"  [ label = "CFG: "] 
  "51" -> "50"  [ label = "CFG: "] 
  "65" -> "63"  [ label = "CFG: "] 
  "29" -> "27"  [ label = "CFG: "] 
  "32" -> "30"  [ label = "CFG: "] 
  "41" -> "40"  [ label = "CFG: "] 
  "52" -> "55"  [ label = "CFG: "] 
  "55" -> "51"  [ label = "CFG: "] 
  "34" -> "32"  [ label = "CFG: "] 
  "42" -> "41"  [ label = "CFG: "] 
  "43" -> "42"  [ label = "CFG: "] 
  "19" -> "24"  [ label = "CFG: "] 
  "20" -> "73"  [ label = "DDG: args"] 
  "22" -> "73"  [ label = "DDG: ANY input = new BufferedReader(new InputStreamReader(System.in))"] 
  "27" -> "73"  [ label = "DDG: &lt;empty&gt;"] 
  "30" -> "73"  [ label = "DDG: $obj0"] 
  "30" -> "73"  [ label = "DDG: System.in"] 
  "30" -> "73"  [ label = "DDG: new InputStreamReader(System.in)"] 
  "25" -> "73"  [ label = "DDG: new BufferedReader(new InputStreamReader(System.in))"] 
  "43" -> "73"  [ label = "DDG: input"] 
  "42" -> "73"  [ label = "DDG: lines()"] 
  "41" -> "73"  [ label = "DDG: skip(1)"] 
  "40" -> "73"  [ label = "DDG: findFirst()"] 
  "39" -> "73"  [ label = "DDG: get()"] 
  "37" -> "73"  [ label = "DDG: split(&quot; &quot;)"] 
  "37" -> "73"  [ label = "DDG: String[] numbersAsString = split(&quot; &quot;)"] 
  "52" -> "73"  [ label = "DDG: numbersAsString"] 
  "51" -> "73"  [ label = "DDG: stream(numbersAsString)"] 
  "50" -> "73"  [ label = "DDG: mapToInt(Integer::parseInt)"] 
  "48" -> "73"  [ label = "DDG: toArray()"] 
  "48" -> "73"  [ label = "DDG: int[] numbers = toArray()"] 
  "59" -> "73"  [ label = "DDG: numbers"] 
  "57" -> "73"  [ label = "DDG: findSameSumBlocks(numbers)"] 
  "57" -> "73"  [ label = "DDG: ANY sameSumBlocks = findSameSumBlocks(numbers)"] 
  "62" -> "73"  [ label = "DDG: System.out"] 
  "62" -> "73"  [ label = "DDG: size()"] 
  "62" -> "73"  [ label = "DDG: println(sameSumBlocks.size())"] 
  "68" -> "73"  [ label = "DDG: sameSumBlocks"] 
  "68" -> "73"  [ label = "DDG: forEach(System.out::println)"] 
  "59" -> "73"  [ label = "DDG: this"] 
  "52" -> "73"  [ label = "DDG: Arrays"] 
  "19" -> "20"  [ label = "DDG: "] 
  "19" -> "22"  [ label = "DDG: "] 
  "39" -> "37"  [ label = "DDG: get()"] 
  "39" -> "37"  [ label = "DDG: &quot; &quot;"] 
  "50" -> "48"  [ label = "DDG: mapToInt(Integer::parseInt)"] 
  "59" -> "57"  [ label = "DDG: this"] 
  "59" -> "57"  [ label = "DDG: numbers"] 
  "22" -> "25"  [ label = "DDG: input"] 
  "19" -> "25"  [ label = "DDG: "] 
  "27" -> "25"  [ label = "DDG: &lt;empty&gt;"] 
  "30" -> "25"  [ label = "DDG: $obj0"] 
  "66" -> "62"  [ label = "DDG: sameSumBlocks"] 
  "66" -> "68"  [ label = "DDG: sameSumBlocks"] 
  "19" -> "68"  [ label = "DDG: "] 
  "19" -> "27"  [ label = "DDG: "] 
  "19" -> "35"  [ label = "DDG: "] 
  "40" -> "39"  [ label = "DDG: findFirst()"] 
  "19" -> "39"  [ label = "DDG: "] 
  "51" -> "50"  [ label = "DDG: stream(numbersAsString)"] 
  "19" -> "59"  [ label = "DDG: "] 
  "48" -> "59"  [ label = "DDG: numbers"] 
  "57" -> "66"  [ label = "DDG: sameSumBlocks"] 
  "19" -> "66"  [ label = "DDG: "] 
  "27" -> "30"  [ label = "DDG: $obj0"] 
  "19" -> "30"  [ label = "DDG: "] 
  "41" -> "40"  [ label = "DDG: skip(1)"] 
  "52" -> "51"  [ label = "DDG: Arrays"] 
  "52" -> "51"  [ label = "DDG: numbersAsString"] 
  "42" -> "41"  [ label = "DDG: lines()"] 
  "42" -> "41"  [ label = "DDG: 1"] 
  "19" -> "52"  [ label = "DDG: "] 
  "37" -> "52"  [ label = "DDG: numbersAsString"] 
  "43" -> "42"  [ label = "DDG: input"] 
  "19" -> "42"  [ label = "DDG: "] 
  "25" -> "43"  [ label = "DDG: input"] 
  "19" -> "43"  [ label = "DDG: "] 
}
