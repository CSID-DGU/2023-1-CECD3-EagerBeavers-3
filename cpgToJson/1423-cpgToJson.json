{"edges": [["19", "20"], ["19", "21"], ["19", "216"], ["19", "217"], ["19", "218"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "56"], ["21", "67"], ["21", "68"], ["21", "107"], ["21", "108"], ["21", "124"], ["21", "125"], ["21", "132"], ["21", "133"], ["21", "140"], ["21", "141"], ["21", "142"], ["21", "145"], ["21", "146"], ["21", "149"], ["21", "150"], ["21", "153"], ["21", "211"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "35"], ["33", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "49"], ["47", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "80"], ["70", "91"], ["70", "100"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["110", "116"], ["112", "113"], ["112", "114"], ["112", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["127", "130"], ["127", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["135", "138"], ["135", "139"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "161"], ["157", "163"], ["157", "208"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["168", "175"], ["168", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "195"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["202", "203"], ["202", "204"], ["204", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["22", "28"], ["25", "33"], ["30", "40"], ["37", "47"], ["44", "53"], ["51", "60"], ["56", "72"], ["68", "112"], ["108", "127"], ["125", "135"], ["133", "142"], ["142", "146"], ["146", "150"], ["150", "154"], ["211", "218"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["46", "44"], ["53", "51"], ["58", "56"], ["70", "68"], ["110", "108"], ["127", "125"], ["135", "133"], ["154", "158"], ["154", "214"], ["212", "211"], ["28", "26"], ["33", "32"], ["40", "39"], ["47", "46"], ["60", "63"], ["63", "58"], ["71", "82"], ["80", "93"], ["91", "101"], ["100", "70"], ["112", "118"], ["116", "110"], ["158", "161"], ["161", "164"], ["208", "154"], ["214", "212"], ["72", "76"], ["75", "71"], ["81", "87"], ["86", "80"], ["92", "97"], ["97", "91"], ["101", "104"], ["104", "100"], ["118", "121"], ["121", "116"], ["164", "169"], ["164", "208"], ["76", "75"], ["82", "81"], ["87", "86"], ["93", "92"], ["169", "172"], ["172", "181"], ["172", "208"], ["175", "172"], ["179", "187"], ["179", "198"], ["196", "205"], ["196", "175"], ["181", "179"], ["185", "191"], ["190", "198"], ["198", "196"], ["202", "175"], ["187", "185"], ["191", "190"], ["204", "202"], ["205", "204"], ["19", "24"], ["20", "218"], ["22", "218"], ["25", "218"], ["25", "218"], ["30", "218"], ["37", "218"], ["46", "218"], ["44", "218"], ["44", "218"], ["53", "218"], ["51", "218"], ["51", "218"], ["56", "218"], ["56", "218"], ["56", "218"], ["68", "218"], ["70", "218"], ["80", "218"], ["70", "218"], ["91", "218"], ["70", "218"], ["100", "218"], ["100", "218"], ["70", "218"], ["68", "218"], ["68", "218"], ["108", "218"], ["110", "218"], ["110", "218"], ["118", "218"], ["116", "218"], ["121", "218"], ["121", "218"], ["116", "218"], ["110", "218"], ["108", "218"], ["108", "218"], ["125", "218"], ["125", "218"], ["133", "218"], ["133", "218"], ["133", "218"], ["142", "218"], ["146", "218"], ["150", "218"], ["150", "218"], ["154", "218"], ["154", "218"], ["154", "218"], ["211", "218"], ["211", "218"], ["211", "218"], ["158", "218"], ["161", "218"], ["164", "218"], ["164", "218"], ["169", "218"], ["172", "218"], ["172", "218"], ["208", "218"], ["208", "218"], ["179", "218"], ["179", "218"], ["185", "218"], ["190", "218"], ["190", "218"], ["196", "218"], ["196", "218"], ["204", "218"], ["202", "218"], ["202", "218"], ["175", "218"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["53", "51"], ["58", "56"], ["58", "56"], ["58", "56"], ["58", "56"], ["70", "68"], ["70", "68"], ["70", "68"], ["70", "68"], ["110", "108"], ["110", "108"], ["110", "108"], ["127", "125"], ["135", "133"], ["19", "142"], ["19", "146"], ["19", "150"], ["22", "25"], ["19", "25"], ["142", "211"], ["164", "211"], ["196", "211"], ["19", "211"], ["33", "32"], ["19", "32"], ["40", "39"], ["19", "39"], ["47", "46"], ["19", "46"], ["47", "53"], ["19", "53"], ["63", "58"], ["19", "58"], ["60", "58"], ["60", "58"], ["63", "58"], ["58", "70"], ["19", "70"], ["76", "70"], ["76", "70"], ["82", "70"], ["82", "70"], ["87", "70"], ["87", "70"], ["93", "70"], ["93", "70"], ["116", "110"], ["19", "110"], ["112", "110"], ["112", "110"], ["112", "110"], ["116", "110"], ["116", "110"], ["19", "127"], ["19", "135"], ["146", "154"], ["158", "154"], ["185", "154"], ["202", "154"], ["19", "154"], ["51", "154"], ["150", "158"], ["208", "158"], ["19", "158"], ["19", "208"], ["25", "33"], ["19", "33"], ["33", "40"], ["19", "40"], ["40", "47"], ["19", "47"], ["30", "60"], ["19", "60"], ["37", "60"], ["60", "63"], ["19", "63"], ["44", "63"], ["58", "71"], ["19", "71"], ["76", "71"], ["76", "71"], ["82", "80"], ["82", "80"], ["19", "80"], ["87", "80"], ["87", "80"], ["93", "91"], ["93", "91"], ["19", "91"], ["82", "91"], ["19", "100"], ["82", "100"], ["93", "100"], ["19", "112"], ["93", "112"], ["82", "112"], ["112", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["121", "116"], ["121", "116"], ["154", "158"], ["142", "161"], ["164", "161"], ["196", "161"], ["19", "161"], ["150", "208"], ["58", "72"], ["19", "72"], ["76", "75"], ["76", "75"], ["19", "75"], ["82", "81"], ["82", "81"], ["19", "81"], ["87", "86"], ["87", "86"], ["19", "86"], ["93", "92"], ["93", "92"], ["19", "92"], ["82", "97"], ["19", "97"], ["19", "101"], ["82", "101"], ["93", "104"], ["19", "104"], ["93", "118"], ["19", "118"], ["112", "118"], ["118", "121"], ["19", "121"], ["112", "121"], ["161", "164"], ["19", "164"], ["108", "164"], ["63", "76"], ["19", "76"], ["58", "76"], ["76", "82"], ["19", "82"], ["76", "82"], ["82", "87"], ["19", "87"], ["58", "87"], ["87", "93"], ["19", "93"], ["87", "93"], ["19", "169"], ["169", "172"], ["175", "172"], ["19", "172"], ["172", "175"], ["19", "175"], ["164", "179"], ["196", "179"], ["19", "179"], ["56", "179"], ["125", "185"], ["190", "185"], ["19", "190"], ["179", "196"], ["19", "196"], ["68", "196"], ["204", "202"], ["158", "185"], ["202", "185"], ["19", "185"], ["125", "190"], ["158", "202"], ["185", "202"], ["19", "202"], ["133", "204"], ["154", "154"], ["154", "161"], ["154", "208"], ["154", "164"], ["154", "158"], ["164", "169"], ["164", "172"], ["172", "179"], ["172", "196"], ["172", "198"], ["172", "181"], ["172", "175"], ["172", "172"], ["179", "185"], ["179", "191"], ["179", "187"], ["179", "190"], ["196", "204"], ["196", "202"], ["196", "205"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int side: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,side,int side = input.nextInt() - 1)<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(LITERAL,1,input.nextInt() - 1)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int x = input.nextInt() - 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.subtraction,input.nextInt() - 1)<SUB>4</SUB>>", "41": "<(IDENTIFIER,input,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int y: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,y,int y = input.nextInt() - 1)<SUB>5</SUB>>", "47": "<(nextInt,nextInt())<SUB>5</SUB>>", "49": "<(LITERAL,1,input.nextInt() - 1)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,long target = nextLong())<SUB>6</SUB>>", "53": "<(nextLong,nextLong())<SUB>6</SUB>>", "55": "<(LOCAL,int[] to_sides: int[])<SUB>9</SUB>>", "57": "<(IDENTIFIER,to_sides,int[] to_sides = { y, side - x, side - y, x })<SUB>9</SUB>>", "59": "<(IDENTIFIER,y,{ y, side - x, side - y, x })<SUB>9</SUB>>", "61": "<(IDENTIFIER,side,side - x)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.subtraction,side - y)<SUB>9</SUB>>", "65": "<(IDENTIFIER,y,side - y)<SUB>9</SUB>>", "67": "<(LOCAL,int[] to_corners: int[])<SUB>10</SUB>>", "69": "<(IDENTIFIER,to_corners,int[] to_corners = { (y + 1) + (side - x + 1), (side - x + 1) + (side - y + 1), (side - y + 1) + (x + 1), (x + 1) + (y + 1) })<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.addition,(y + 1) + (side - x + 1))<SUB>10</SUB>>", "73": "<(IDENTIFIER,y,y + 1)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.addition,side - x + 1)<SUB>10</SUB>>", "77": "<(IDENTIFIER,side,side - x)<SUB>10</SUB>>", "79": "<(LITERAL,1,side - x + 1)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.addition,side - x + 1)<SUB>10</SUB>>", "83": "<(IDENTIFIER,side,side - x)<SUB>10</SUB>>", "85": "<(LITERAL,1,side - x + 1)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.subtraction,side - y)<SUB>10</SUB>>", "89": "<(IDENTIFIER,y,side - y)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.addition,(side - y + 1) + (x + 1))<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.subtraction,side - y)<SUB>10</SUB>>", "95": "<(IDENTIFIER,y,side - y)<SUB>10</SUB>>", "97": "<(&lt;operator&gt;.addition,x + 1)<SUB>10</SUB>>", "99": "<(LITERAL,1,x + 1)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.addition,x + 1)<SUB>11</SUB>>", "103": "<(LITERAL,1,x + 1)<SUB>11</SUB>>", "105": "<(IDENTIFIER,y,y + 1)<SUB>11</SUB>>", "107": "<(LOCAL,int min: int)<SUB>12</SUB>>", "109": "<(IDENTIFIER,min,int min = Math.min(Math.min(y, x), Math.min(side - x, side - y)))<SUB>12</SUB>>", "111": "<(IDENTIFIER,Math,Math.min(Math.min(y, x), Math.min(side - x, side - y)))<SUB>12</SUB>>", "113": "<(IDENTIFIER,Math,Math.min(y, x))<SUB>12</SUB>>", "115": "<(IDENTIFIER,x,Math.min(y, x))<SUB>12</SUB>>", "117": "<(IDENTIFIER,Math,Math.min(side - x, side - y))<SUB>12</SUB>>", "119": "<(IDENTIFIER,side,side - x)<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.subtraction,side - y)<SUB>12</SUB>>", "123": "<(IDENTIFIER,y,side - y)<SUB>12</SUB>>", "125": "<(&lt;operator&gt;.assignment,int[] after_pass = { 1, 1, 1, 1 })<SUB>13</SUB>>", "127": "<(&lt;operator&gt;.arrayInitializer,{ 1, 1, 1, 1 })<SUB>13</SUB>>", "129": "<(LITERAL,1,{ 1, 1, 1, 1 })<SUB>13</SUB>>", "131": "<(LITERAL,1,{ 1, 1, 1, 1 })<SUB>13</SUB>>", "133": "<(&lt;operator&gt;.assignment,int[] corner_share = { 1, 1, 1, 1 })<SUB>14</SUB>>", "135": "<(&lt;operator&gt;.arrayInitializer,{ 1, 1, 1, 1 })<SUB>14</SUB>>", "137": "<(LITERAL,1,{ 1, 1, 1, 1 })<SUB>14</SUB>>", "139": "<(LITERAL,1,{ 1, 1, 1, 1 })<SUB>14</SUB>>", "141": "<(LOCAL,int i: int)<SUB>15</SUB>>", "143": "<(IDENTIFIER,steps,int steps = 0)<SUB>15</SUB>>", "145": "<(LOCAL,long init: long)<SUB>16</SUB>>", "147": "<(IDENTIFIER,init,long init = 1)<SUB>16</SUB>>", "149": "<(LOCAL,int grown: int)<SUB>17</SUB>>", "151": "<(IDENTIFIER,grown,int grown = 4)<SUB>17</SUB>>", "153": "<(CONTROL_STRUCTURE,while (init &lt; target),while (init &lt; target))<SUB>18</SUB>>", "155": "<(IDENTIFIER,init,init &lt; target)<SUB>18</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "159": "<(IDENTIFIER,init,init += grown)<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,steps++)<SUB>20</SUB>>", "163": "<(CONTROL_STRUCTURE,if (steps &gt;= min),if (steps &gt;= min))<SUB>21</SUB>>", "165": "<(IDENTIFIER,steps,steps &gt;= min)<SUB>21</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.assignment,i = 0)<SUB>22</SUB>>", "171": "<(LITERAL,0,i = 0)<SUB>22</SUB>>", "173": "<(IDENTIFIER,i,i &lt; 4)<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.greaterThan,steps &gt; to_sides[i])<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,to_sides[i])<SUB>23</SUB>>", "183": "<(IDENTIFIER,i,steps &gt; to_sides[i])<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.assignmentMinus,init -= after_pass[i])<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,after_pass[i])<SUB>24</SUB>>", "189": "<(IDENTIFIER,i,init -= after_pass[i])<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,after_pass[i])<SUB>25</SUB>>", "193": "<(IDENTIFIER,i,after_pass[i] += 2)<SUB>25</SUB>>", "195": "<(CONTROL_STRUCTURE,if (steps &gt;= to_corners[i]),if (steps &gt;= to_corners[i]))<SUB>27</SUB>>", "197": "<(IDENTIFIER,steps,steps &gt;= to_corners[i])<SUB>27</SUB>>", "199": "<(IDENTIFIER,to_corners,steps &gt;= to_corners[i])<SUB>27</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "203": "<(IDENTIFIER,init,init += corner_share[i]++)<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,corner_share[i])<SUB>28</SUB>>", "207": "<(IDENTIFIER,i,corner_share[i]++)<SUB>28</SUB>>", "209": "<(IDENTIFIER,grown,grown += 4)<SUB>33</SUB>>", "211": "<(println,System.out.println(steps))<SUB>35</SUB>>", "213": "<(IDENTIFIER,System,System.out.println(steps))<SUB>35</SUB>>", "215": "<(IDENTIFIER,steps,System.out.println(steps))<SUB>35</SUB>>", "217": "<(MODIFIER,STATIC)>"}}