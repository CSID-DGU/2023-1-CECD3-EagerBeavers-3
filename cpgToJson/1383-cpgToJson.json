{"edges": [["21", "23"], ["21", "169"], ["21", "170"], ["21", "171"], ["23", "24"], ["24", "25"], ["24", "164"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "54"], ["25", "55"], ["25", "64"], ["25", "65"], ["25", "74"], ["25", "75"], ["25", "84"], ["25", "85"], ["25", "157"], ["25", "160"], ["25", "162"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "53"], ["51", "52"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "63"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["85", "86"], ["85", "89"], ["85", "93"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "102"], ["94", "124"], ["94", "125"], ["94", "134"], ["94", "150"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["104", "107"], ["107", "108"], ["107", "123"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "122"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "141"], ["139", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "168"], ["166", "167"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "51"], ["48", "60"], ["55", "70"], ["65", "80"], ["75", "86"], ["157", "160"], ["160", "162"], ["162", "171"], ["162", "166"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["57", "55"], ["67", "65"], ["77", "75"], ["86", "91"], ["86", "98"], ["89", "157"], ["166", "168"], ["168", "171"], ["31", "38"], ["34", "29"], ["46", "44"], ["51", "50"], ["58", "57"], ["68", "67"], ["78", "77"], ["91", "89"], ["33", "31"], ["36", "34"], ["60", "58"], ["70", "68"], ["80", "78"], ["96", "109"], ["102", "130"], ["125", "135"], ["150", "157"], ["38", "36"], ["98", "96"], ["104", "102"], ["127", "125"], ["135", "139"], ["135", "153"], ["152", "150"], ["107", "104"], ["128", "127"], ["139", "146"], ["141", "135"], ["153", "152"], ["108", "107"], ["130", "128"], ["143", "141"], ["109", "119"], ["110", "108"], ["144", "143"], ["112", "110"], ["146", "144"], ["113", "112"], ["115", "113"], ["117", "115"], ["119", "117"], ["21", "28"], ["168", "171"], ["22", "171"], ["26", "171"], ["31", "171"], ["34", "171"], ["34", "171"], ["34", "171"], ["29", "171"], ["40", "171"], ["43", "171"], ["43", "171"], ["48", "171"], ["50", "171"], ["48", "171"], ["48", "171"], ["58", "171"], ["57", "171"], ["55", "171"], ["55", "171"], ["68", "171"], ["68", "171"], ["67", "171"], ["65", "171"], ["65", "171"], ["78", "171"], ["78", "171"], ["77", "171"], ["75", "171"], ["75", "171"], ["86", "171"], ["86", "171"], ["86", "171"], ["98", "171"], ["98", "171"], ["96", "171"], ["96", "171"], ["104", "171"], ["117", "171"], ["115", "171"], ["113", "171"], ["112", "171"], ["110", "171"], ["108", "171"], ["107", "171"], ["104", "171"], ["102", "171"], ["102", "171"], ["128", "171"], ["127", "171"], ["125", "171"], ["125", "171"], ["135", "171"], ["135", "171"], ["135", "171"], ["153", "171"], ["153", "171"], ["152", "171"], ["150", "171"], ["150", "171"], ["139", "171"], ["144", "171"], ["143", "171"], ["141", "171"], ["141", "171"], ["89", "171"], ["89", "171"], ["157", "171"], ["157", "171"], ["160", "171"], ["162", "171"], ["162", "171"], ["166", "171"], ["166", "171"], ["21", "22"], ["21", "26"], ["21", "40"], ["50", "48"], ["50", "48"], ["57", "55"], ["57", "55"], ["67", "65"], ["67", "65"], ["77", "75"], ["77", "75"], ["26", "29"], ["21", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["21", "43"], ["91", "89"], ["43", "157"], ["21", "157"], ["150", "157"], ["89", "157"], ["157", "160"], ["21", "160"], ["51", "162"], ["21", "162"], ["21", "168"], ["21", "31"], ["21", "39"], ["51", "50"], ["21", "50"], ["58", "57"], ["58", "57"], ["21", "57"], ["68", "67"], ["68", "67"], ["21", "67"], ["78", "77"], ["78", "77"], ["21", "77"], ["55", "86"], ["21", "86"], ["75", "86"], ["21", "166"], ["31", "34"], ["21", "34"], ["29", "51"], ["21", "51"], ["21", "58"], ["48", "58"], ["58", "68"], ["21", "68"], ["48", "68"], ["21", "78"], ["65", "78"], ["21", "91"], ["98", "96"], ["98", "96"], ["104", "102"], ["104", "102"], ["104", "102"], ["127", "125"], ["127", "125"], ["153", "150"], ["153", "150"], ["21", "150"], ["65", "80"], ["21", "80"], ["86", "98"], ["21", "98"], ["86", "98"], ["110", "104"], ["21", "104"], ["107", "104"], ["107", "104"], ["128", "127"], ["128", "127"], ["21", "127"], ["125", "135"], ["141", "135"], ["21", "135"], ["119", "135"], ["143", "141"], ["143", "141"], ["153", "152"], ["153", "152"], ["21", "152"], ["21", "107"], ["110", "107"], ["110", "107"], ["21", "128"], ["102", "128"], ["128", "139"], ["144", "139"], ["21", "139"], ["78", "153"], ["21", "153"], ["128", "153"], ["144", "153"], ["21", "108"], ["110", "108"], ["110", "108"], ["102", "130"], ["21", "130"], ["144", "143"], ["144", "143"], ["21", "143"], ["115", "110"], ["21", "110"], ["112", "110"], ["112", "110"], ["21", "144"], ["139", "144"], ["21", "112"], ["115", "112"], ["115", "112"], ["139", "146"], ["21", "146"], ["21", "113"], ["115", "113"], ["115", "113"], ["21", "115"], ["119", "115"], ["119", "115"], ["21", "117"], ["119", "117"], ["119", "117"], ["21", "119"], ["96", "119"], ["162", "166"], ["162", "168"], ["86", "107"], ["86", "115"], ["86", "96"], ["86", "89"], ["86", "98"], ["86", "113"], ["86", "128"], ["86", "102"], ["86", "150"], ["86", "104"], ["86", "119"], ["86", "153"], ["86", "91"], ["86", "112"], ["86", "152"], ["86", "130"], ["86", "135"], ["86", "110"], ["86", "117"], ["86", "127"], ["86", "108"], ["86", "125"], ["86", "109"], ["135", "141"], ["135", "146"], ["135", "144"], ["135", "143"], ["135", "135"], ["135", "139"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(BLOCK,try,try)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "47": "<(LOCAL,String[] param: java.lang.String[])<SUB>6</SUB>>", "49": "<(IDENTIFIER,param,String[] param = split(&quot; &quot;))<SUB>6</SUB>>", "51": "<(readLine,readLine())<SUB>6</SUB>>", "53": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,long n = Long.parseLong(param[0]) - 1)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.subtraction,Long.parseLong(param[0]) - 1)<SUB>7</SUB>>", "59": "<(IDENTIFIER,Long,Long.parseLong(param[0]))<SUB>7</SUB>>", "61": "<(IDENTIFIER,param,Long.parseLong(param[0]))<SUB>7</SUB>>", "63": "<(LITERAL,1,Long.parseLong(param[0]) - 1)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,long k = Long.parseLong(param[1]) - 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.subtraction,Long.parseLong(param[1]) - 1)<SUB>8</SUB>>", "69": "<(IDENTIFIER,Long,Long.parseLong(param[1]))<SUB>8</SUB>>", "71": "<(IDENTIFIER,param,Long.parseLong(param[1]))<SUB>8</SUB>>", "73": "<(LITERAL,1,Long.parseLong(param[1]) - 1)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.assignment,long max = k * (k + 1) / 2)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.division,k * (k + 1) / 2)<SUB>9</SUB>>", "79": "<(IDENTIFIER,k,k * (k + 1))<SUB>9</SUB>>", "81": "<(IDENTIFIER,k,k + 1)<SUB>9</SUB>>", "83": "<(LITERAL,2,k * (k + 1) / 2)<SUB>9</SUB>>", "85": "<(CONTROL_STRUCTURE,if (n &gt; max),if (n &gt; max))<SUB>11</SUB>>", "87": "<(IDENTIFIER,n,n &gt; max)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,answer = -1)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.minus,-1)<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "95": "<(LOCAL,long margin: long)<SUB>13</SUB>>", "97": "<(IDENTIFIER,margin,long margin = max - n)<SUB>13</SUB>>", "99": "<(IDENTIFIER,max,max - n)<SUB>13</SUB>>", "101": "<(LOCAL,long m: long)<SUB>14</SUB>>", "103": "<(IDENTIFIER,m,long m = Math.max(0, (long) Math.floor((1.0 + Math.sqrt(1 + 8 * margin)) / 2.0) - 1))<SUB>14</SUB>>", "105": "<(IDENTIFIER,Math,Math.max(0, (long) Math.floor((1.0 + Math.sqrt(1 + 8 * margin)) / 2.0) - 1))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.subtraction,(long) Math.floor((1.0 + Math.sqrt(1 + 8 * margin)) / 2.0) - 1)<SUB>14</SUB>>", "109": "<(TYPE_REF,long,long)<SUB>14</SUB>>", "111": "<(IDENTIFIER,Math,Math.floor((1.0 + Math.sqrt(1 + 8 * margin)) / 2.0))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.addition,1.0 + Math.sqrt(1 + 8 * margin))<SUB>14</SUB>>", "115": "<(sqrt,Math.sqrt(1 + 8 * margin))<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.addition,1 + 8 * margin)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.multiplication,8 * margin)<SUB>14</SUB>>", "121": "<(IDENTIFIER,margin,8 * margin)<SUB>14</SUB>>", "123": "<(LITERAL,1,(long) Math.floor((1.0 + Math.sqrt(1 + 8 * margin)) / 2.0) - 1)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,long min = m * (m + 1) / 2)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.division,m * (m + 1) / 2)<SUB>15</SUB>>", "129": "<(IDENTIFIER,m,m * (m + 1))<SUB>15</SUB>>", "131": "<(IDENTIFIER,m,m + 1)<SUB>15</SUB>>", "133": "<(LITERAL,2,m * (m + 1) / 2)<SUB>15</SUB>>", "135": "<(&lt;operator&gt;.lessEqualsThan,min &lt;= margin)<SUB>16</SUB>>", "137": "<(IDENTIFIER,margin,min &lt;= margin)<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,m++)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.assignment,min = m * (m + 1) / 2)<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.division,m * (m + 1) / 2)<SUB>16</SUB>>", "145": "<(IDENTIFIER,m,m * (m + 1))<SUB>16</SUB>>", "147": "<(IDENTIFIER,m,m + 1)<SUB>16</SUB>>", "149": "<(LITERAL,2,m * (m + 1) / 2)<SUB>16</SUB>>", "151": "<(IDENTIFIER,answer,answer = k - m + 1)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.subtraction,k - m)<SUB>17</SUB>>", "155": "<(IDENTIFIER,m,k - m)<SUB>17</SUB>>", "157": "<(println,println(answer))<SUB>19</SUB>>", "159": "<(IDENTIFIER,answer,println(answer))<SUB>19</SUB>>", "161": "<(IDENTIFIER,pw,close())<SUB>21</SUB>>", "163": "<(IDENTIFIER,br,close())<SUB>22</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "167": "<(IDENTIFIER,e,printStackTrace())<SUB>24</SUB>>", "169": "<(MODIFIER,PUBLIC)>", "171": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}