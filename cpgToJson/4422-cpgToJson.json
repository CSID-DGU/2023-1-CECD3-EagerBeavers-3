{"edges": [["19", "21"], ["19", "177"], ["19", "178"], ["19", "179"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "49"], ["21", "53"], ["21", "54"], ["21", "59"], ["21", "60"], ["21", "63"], ["21", "64"], ["21", "67"], ["21", "97"], ["21", "104"], ["21", "111"], ["21", "112"], ["21", "115"], ["21", "116"], ["21", "119"], ["21", "120"], ["21", "123"], ["21", "124"], ["21", "127"], ["21", "172"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "42"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["99", "102"], ["99", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["106", "109"], ["106", "110"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "143"], ["129", "167"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "142"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["143", "144"], ["143", "150"], ["143", "160"], ["144", "145"], ["144", "146"], ["144", "147"], ["144", "148"], ["144", "149"], ["150", "151"], ["150", "157"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["153", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["161", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["22", "29"], ["25", "46"], ["44", "51"], ["49", "56"], ["54", "60"], ["60", "64"], ["64", "69"], ["97", "106"], ["104", "112"], ["112", "116"], ["116", "120"], ["120", "124"], ["124", "134"], ["124", "175"], ["172", "179"], ["24", "22"], ["46", "44"], ["51", "49"], ["56", "54"], ["69", "72"], ["72", "80"], ["72", "99"], ["75", "72"], ["99", "97"], ["106", "104"], ["173", "172"], ["27", "35"], ["30", "25"], ["130", "144"], ["175", "173"], ["29", "27"], ["80", "83"], ["83", "91"], ["83", "75"], ["86", "83"], ["132", "130"], ["144", "153"], ["144", "164"], ["168", "134"], ["168", "175"], ["33", "40"], ["36", "30"], ["89", "86"], ["133", "132"], ["151", "157"], ["157", "168"], ["35", "33"], ["38", "36"], ["90", "95"], ["95", "89"], ["134", "138"], ["135", "133"], ["153", "151"], ["162", "168"], ["40", "38"], ["91", "90"], ["137", "135"], ["164", "162"], ["138", "137"], ["19", "24"], ["20", "179"], ["22", "179"], ["30", "179"], ["33", "179"], ["36", "179"], ["36", "179"], ["36", "179"], ["30", "179"], ["25", "179"], ["44", "179"], ["51", "179"], ["49", "179"], ["49", "179"], ["54", "179"], ["54", "179"], ["60", "179"], ["64", "179"], ["69", "179"], ["72", "179"], ["72", "179"], ["97", "179"], ["97", "179"], ["97", "179"], ["104", "179"], ["106", "179"], ["106", "179"], ["106", "179"], ["106", "179"], ["104", "179"], ["104", "179"], ["112", "179"], ["116", "179"], ["116", "179"], ["120", "179"], ["120", "179"], ["124", "179"], ["124", "179"], ["135", "179"], ["137", "179"], ["135", "179"], ["133", "179"], ["132", "179"], ["130", "179"], ["130", "179"], ["144", "179"], ["144", "179"], ["144", "179"], ["144", "179"], ["144", "179"], ["164", "179"], ["162", "179"], ["162", "179"], ["153", "179"], ["151", "179"], ["151", "179"], ["157", "179"], ["157", "179"], ["168", "179"], ["168", "179"], ["168", "179"], ["172", "179"], ["172", "179"], ["172", "179"], ["80", "179"], ["83", "179"], ["83", "179"], ["75", "179"], ["89", "179"], ["95", "179"], ["89", "179"], ["89", "179"], ["86", "179"], ["19", "20"], ["19", "22"], ["46", "44"], ["51", "49"], ["56", "54"], ["56", "54"], ["19", "60"], ["19", "64"], ["99", "97"], ["99", "97"], ["99", "97"], ["99", "97"], ["106", "104"], ["106", "104"], ["106", "104"], ["106", "104"], ["19", "112"], ["19", "116"], ["19", "120"], ["19", "124"], ["22", "25"], ["19", "25"], ["33", "25"], ["30", "25"], ["19", "69"], ["19", "128"], ["112", "172"], ["151", "172"], ["19", "172"], ["19", "27"], ["19", "42"], ["25", "46"], ["19", "46"], ["46", "51"], ["19", "51"], ["44", "56"], ["19", "56"], ["49", "56"], ["69", "72"], ["75", "72"], ["19", "72"], ["56", "72"], ["72", "75"], ["19", "75"], ["19", "99"], ["72", "99"], ["56", "99"], ["83", "99"], ["54", "99"], ["99", "106"], ["19", "106"], ["99", "106"], ["99", "106"], ["99", "106"], ["19", "130"], ["135", "130"], ["135", "130"], ["138", "130"], ["27", "30"], ["19", "30"], ["33", "30"], ["36", "30"], ["19", "80"], ["19", "33"], ["19", "41"], ["80", "83"], ["86", "83"], ["19", "83"], ["56", "83"], ["83", "86"], ["19", "86"], ["95", "89"], ["19", "132"], ["135", "132"], ["135", "132"], ["138", "132"], ["106", "144"], ["19", "144"], ["106", "144"], ["130", "144"], ["97", "144"], ["104", "144"], ["153", "151"], ["153", "151"], ["153", "151"], ["153", "157"], ["19", "157"], ["138", "168"], ["162", "168"], ["19", "168"], ["157", "168"], ["138", "168"], ["33", "36"], ["19", "36"], ["19", "133"], ["135", "133"], ["135", "133"], ["164", "162"], ["164", "162"], ["51", "95"], ["19", "95"], ["153", "135"], ["19", "135"], ["137", "135"], ["137", "135"], ["135", "153"], ["19", "153"], ["112", "153"], ["151", "153"], ["144", "153"], ["138", "137"], ["138", "137"], ["19", "137"], ["144", "164"], ["19", "164"], ["124", "138"], ["168", "138"], ["19", "138"], ["120", "138"], ["168", "138"], ["72", "75"], ["72", "72"], ["72", "80"], ["72", "83"], ["83", "89"], ["83", "95"], ["83", "91"], ["83", "90"], ["83", "83"], ["83", "86"], ["144", "151"], ["144", "162"], ["144", "153"], ["144", "157"], ["144", "164"], ["168", "132"], ["168", "168"], ["168", "144"], ["168", "134"], ["168", "138"], ["168", "137"], ["168", "130"], ["168", "135"], ["168", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new BufferedReader(new InputStreamReader(System.in))))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj1,new BufferedReader(new InputStreamReader(System.in)))>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "43": "<(LOCAL,int n: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(LOCAL,int[][] a: int[][])<SUB>7</SUB>>", "55": "<(IDENTIFIER,a,int[][] a = new int[n][m])<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,new int[n][m])<SUB>7</SUB>>", "59": "<(LOCAL,int[][] graphVerticial: int[][])<SUB>8</SUB>>", "61": "<(IDENTIFIER,graphVerticial,int[][] graphVerticial = null)<SUB>8</SUB>>", "63": "<(LOCAL,int[][] graphDiagonal: int[][])<SUB>9</SUB>>", "65": "<(IDENTIFIER,graphDiagonal,int[][] graphDiagonal = null)<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "79": "<(LOCAL,int j: int)<SUB>12</SUB>>", "81": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>12</SUB>>", "85": "<(IDENTIFIER,m,j &lt; m)<SUB>12</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.assignment,a[i][j] = nextInt())<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,a[i][j] = nextInt())<SUB>13</SUB>>", "95": "<(nextInt,nextInt())<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.assignment,graphVerticial = createGraphVertical(n, m, a))<SUB>17</SUB>>", "99": "<(createGraphVertical,createGraphVertical(n, m, a))<SUB>17</SUB>>", "101": "<(IDENTIFIER,n,createGraphVertical(n, m, a))<SUB>17</SUB>>", "103": "<(IDENTIFIER,a,createGraphVertical(n, m, a))<SUB>17</SUB>>", "105": "<(IDENTIFIER,graphDiagonal,graphDiagonal = createGraphDiagonal(n, m, a))<SUB>18</SUB>>", "107": "<(IDENTIFIER,this,createGraphDiagonal(n, m, a))<SUB>18</SUB>>", "109": "<(IDENTIFIER,m,createGraphDiagonal(n, m, a))<SUB>18</SUB>>", "111": "<(LOCAL,int result: int)<SUB>24</SUB>>", "113": "<(IDENTIFIER,result,int result = 0)<SUB>24</SUB>>", "115": "<(LOCAL,int k: int)<SUB>25</SUB>>", "117": "<(IDENTIFIER,k,int k = 1)<SUB>25</SUB>>", "119": "<(LOCAL,int piso: int)<SUB>26</SUB>>", "121": "<(IDENTIFIER,piso,int piso = 0)<SUB>26</SUB>>", "123": "<(LOCAL,int teto: int)<SUB>27</SUB>>", "125": "<(IDENTIFIER,teto,int teto = 1000000000)<SUB>27</SUB>>", "127": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>29</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "131": "<(IDENTIFIER,k,k = (int) Math.ceil((teto - piso) / 2.0) + piso)<SUB>31</SUB>>", "133": "<(&lt;operator&gt;.cast,(int) Math.ceil((teto - piso) / 2.0))<SUB>31</SUB>>", "135": "<(ceil,Math.ceil((teto - piso) / 2.0))<SUB>31</SUB>>", "137": "<(&lt;operator&gt;.division,(teto - piso) / 2.0)<SUB>31</SUB>>", "139": "<(IDENTIFIER,teto,teto - piso)<SUB>31</SUB>>", "141": "<(LITERAL,2.0,(teto - piso) / 2.0)<SUB>31</SUB>>", "143": "<(CONTROL_STRUCTURE,if (isOk(n, k, graphVerticial, graphDiagonal)),if (isOk(n, k, graphVerticial, graphDiagonal)))<SUB>33</SUB>>", "145": "<(IDENTIFIER,this,isOk(n, k, graphVerticial, graphDiagonal))<SUB>33</SUB>>", "147": "<(IDENTIFIER,k,isOk(n, k, graphVerticial, graphDiagonal))<SUB>33</SUB>>", "149": "<(IDENTIFIER,graphDiagonal,isOk(n, k, graphVerticial, graphDiagonal))<SUB>33</SUB>>", "151": "<(&lt;operator&gt;.assignment,result = Math.max(result, k))<SUB>34</SUB>>", "153": "<(max,Math.max(result, k))<SUB>34</SUB>>", "155": "<(IDENTIFIER,result,Math.max(result, k))<SUB>34</SUB>>", "157": "<(&lt;operator&gt;.assignment,piso = k)<SUB>35</SUB>>", "159": "<(IDENTIFIER,k,piso = k)<SUB>35</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "163": "<(IDENTIFIER,teto,teto = k - 1)<SUB>38</SUB>>", "165": "<(IDENTIFIER,k,k - 1)<SUB>38</SUB>>", "167": "<(CONTROL_STRUCTURE,if (teto &lt;= piso),if (teto &lt;= piso))<SUB>43</SUB>>", "169": "<(IDENTIFIER,teto,teto &lt;= piso)<SUB>43</SUB>>", "171": "<(CONTROL_STRUCTURE,break;,break;)<SUB>43</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "175": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "177": "<(MODIFIER,PUBLIC)>", "179": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}