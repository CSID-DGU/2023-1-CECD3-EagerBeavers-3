{"edges": [["19", "21"], ["19", "245"], ["19", "246"], ["19", "247"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "35"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "45"], ["21", "46"], ["21", "51"], ["21", "89"], ["21", "90"], ["21", "95"], ["21", "96"], ["21", "101"], ["21", "102"], ["21", "105"], ["21", "236"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "64"], ["61", "68"], ["61", "72"], ["61", "74"], ["61", "76"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["74", "75"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "212"], ["126", "127"], ["126", "132"], ["126", "140"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["140", "141"], ["141", "142"], ["141", "159"], ["141", "203"], ["142", "143"], ["142", "150"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "165"], ["159", "172"], ["159", "196"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["203", "204"], ["204", "205"], ["205", "206"], ["205", "211"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["212", "213"], ["212", "228"], ["213", "214"], ["213", "221"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["22", "28"], ["25", "34"], ["30", "39"], ["37", "43"], ["41", "48"], ["46", "53"], ["90", "98"], ["96", "102"], ["102", "107"], ["236", "247"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["43", "41"], ["48", "46"], ["53", "56"], ["56", "66"], ["56", "92"], ["59", "56"], ["92", "90"], ["98", "96"], ["107", "110"], ["110", "117"], ["110", "239"], ["113", "110"], ["237", "241"], ["240", "236"], ["28", "26"], ["34", "32"], ["64", "70"], ["68", "72"], ["72", "74"], ["74", "78"], ["76", "59"], ["117", "120"], ["120", "129"], ["120", "113"], ["123", "120"], ["239", "237"], ["241", "240"], ["66", "64"], ["70", "68"], ["77", "84"], ["82", "76"], ["78", "77"], ["83", "82"], ["127", "135"], ["127", "146"], ["213", "232"], ["213", "123"], ["84", "83"], ["129", "127"], ["133", "217"], ["214", "213"], ["214", "222"], ["221", "213"], ["229", "123"], ["134", "133"], ["142", "161"], ["142", "207"], ["215", "214"], ["222", "225"], ["225", "221"], ["231", "229"], ["135", "134"], ["143", "142"], ["143", "154"], ["150", "142"], ["161", "169"], ["165", "174"], ["196", "217"], ["217", "215"], ["232", "231"], ["144", "143"], ["151", "150"], ["167", "165"], ["174", "177"], ["177", "184"], ["177", "198"], ["180", "177"], ["197", "196"], ["205", "217"], ["146", "144"], ["153", "151"], ["169", "167"], ["183", "192"], ["183", "180"], ["198", "197"], ["206", "205"], ["154", "153"], ["184", "183"], ["189", "180"], ["207", "206"], ["191", "189"], ["192", "191"], ["19", "24"], ["20", "247"], ["22", "247"], ["25", "247"], ["25", "247"], ["30", "247"], ["30", "247"], ["37", "247"], ["43", "247"], ["41", "247"], ["41", "247"], ["46", "247"], ["46", "247"], ["46", "247"], ["53", "247"], ["56", "247"], ["56", "247"], ["90", "247"], ["90", "247"], ["96", "247"], ["98", "247"], ["96", "247"], ["96", "247"], ["102", "247"], ["107", "247"], ["110", "247"], ["110", "247"], ["110", "247"], ["236", "247"], ["241", "247"], ["241", "247"], ["240", "247"], ["236", "247"], ["236", "247"], ["117", "247"], ["120", "247"], ["120", "247"], ["120", "247"], ["113", "247"], ["127", "247"], ["127", "247"], ["144", "247"], ["143", "247"], ["142", "247"], ["153", "247"], ["151", "247"], ["150", "247"], ["142", "247"], ["142", "247"], ["205", "247"], ["205", "247"], ["161", "247"], ["165", "247"], ["167", "247"], ["165", "247"], ["165", "247"], ["174", "247"], ["177", "247"], ["177", "247"], ["196", "247"], ["196", "247"], ["196", "247"], ["189", "247"], ["189", "247"], ["180", "247"], ["133", "247"], ["133", "247"], ["215", "247"], ["214", "247"], ["213", "247"], ["213", "247"], ["213", "247"], ["229", "247"], ["229", "247"], ["123", "247"], ["64", "247"], ["70", "247"], ["68", "247"], ["68", "247"], ["72", "247"], ["72", "247"], ["74", "247"], ["74", "247"], ["76", "247"], ["82", "247"], ["76", "247"], ["76", "247"], ["59", "247"], ["225", "247"], ["19", "20"], ["19", "22"], ["39", "37"], ["43", "41"], ["48", "46"], ["92", "90"], ["92", "90"], ["98", "96"], ["98", "96"], ["19", "102"], ["22", "25"], ["19", "25"], ["19", "53"], ["19", "107"], ["240", "236"], ["240", "236"], ["25", "39"], ["19", "39"], ["39", "43"], ["19", "43"], ["37", "48"], ["19", "48"], ["53", "56"], ["59", "56"], ["19", "56"], ["41", "56"], ["56", "59"], ["19", "59"], ["66", "64"], ["70", "68"], ["82", "76"], ["19", "76"], ["19", "92"], ["48", "92"], ["90", "98"], ["19", "98"], ["92", "98"], ["107", "110"], ["113", "110"], ["19", "110"], ["98", "110"], ["110", "113"], ["215", "113"], ["225", "113"], ["19", "113"], ["19", "117"], ["241", "240"], ["241", "240"], ["19", "240"], ["64", "72"], ["19", "72"], ["68", "74"], ["19", "74"], ["117", "120"], ["123", "120"], ["19", "120"], ["98", "120"], ["177", "120"], ["129", "123"], ["146", "123"], ["154", "123"], ["169", "123"], ["19", "123"], ["102", "241"], ["229", "241"], ["19", "241"], ["56", "241"], ["43", "66"], ["70", "66"], ["19", "66"], ["66", "70"], ["19", "70"], ["19", "82"], ["110", "127"], ["215", "127"], ["225", "127"], ["19", "127"], ["129", "127"], ["129", "127"], ["19", "133"], ["214", "213"], ["214", "213"], ["205", "229"], ["196", "229"], ["133", "229"], ["19", "129"], ["120", "129"], ["215", "214"], ["215", "214"], ["19", "214"], ["102", "229"], ["19", "229"], ["143", "142"], ["143", "142"], ["150", "142"], ["150", "142"], ["19", "161"], ["167", "165"], ["167", "165"], ["161", "196"], ["189", "196"], ["19", "196"], ["217", "215"], ["19", "215"], ["217", "215"], ["19", "225"], ["215", "225"], ["144", "143"], ["144", "143"], ["19", "143"], ["151", "150"], ["151", "150"], ["19", "150"], ["19", "174"], ["19", "205"], ["127", "217"], ["144", "217"], ["151", "217"], ["167", "217"], ["19", "217"], ["127", "144"], ["19", "144"], ["146", "144"], ["146", "144"], ["144", "151"], ["19", "151"], ["153", "151"], ["153", "151"], ["144", "167"], ["151", "167"], ["19", "167"], ["169", "167"], ["169", "167"], ["174", "177"], ["180", "177"], ["19", "177"], ["120", "177"], ["177", "180"], ["19", "180"], ["19", "146"], ["129", "146"], ["154", "153"], ["154", "153"], ["19", "153"], ["19", "169"], ["146", "169"], ["154", "169"], ["19", "154"], ["146", "154"], ["161", "189"], ["19", "189"], ["56", "68"], ["56", "77"], ["56", "64"], ["56", "84"], ["56", "56"], ["56", "74"], ["56", "76"], ["56", "59"], ["56", "70"], ["56", "66"], ["56", "72"], ["56", "82"], ["56", "83"], ["56", "78"], ["110", "120"], ["110", "113"], ["110", "110"], ["110", "117"], ["120", "214"], ["120", "120"], ["120", "215"], ["120", "213"], ["120", "129"], ["120", "127"], ["120", "123"], ["120", "217"], ["127", "146"], ["127", "144"], ["127", "134"], ["127", "142"], ["127", "143"], ["127", "135"], ["127", "133"], ["213", "232"], ["213", "231"], ["213", "229"], ["214", "225"], ["214", "221"], ["214", "222"], ["142", "167"], ["142", "169"], ["142", "161"], ["142", "196"], ["142", "197"], ["142", "198"], ["142", "206"], ["142", "207"], ["142", "174"], ["142", "205"], ["142", "177"], ["142", "165"], ["143", "154"], ["143", "150"], ["143", "151"], ["143", "153"], ["177", "184"], ["177", "180"], ["177", "183"], ["177", "177"], ["183", "192"], ["183", "189"], ["183", "191"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,PrintStream out: ANY)<SUB>3</SUB>>", "31": "<(IDENTIFIER,out,ANY out = System.out)<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,ANY out = System.out)<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,boolean[][] g: boolean[][])<SUB>5</SUB>>", "47": "<(IDENTIFIER,g,boolean[][] g = new boolean[n][n])<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); ++i),for (int i = 0; Some(i &lt; m); ++i))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,i &lt; m)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.preIncrement,++i)<SUB>6</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "63": "<(LOCAL,int b: int)<SUB>7</SUB>>", "65": "<(IDENTIFIER,a,int a = nextInt())<SUB>7</SUB>>", "67": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "69": "<(IDENTIFIER,b,int b = nextInt())<SUB>7</SUB>>", "71": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "73": "<(IDENTIFIER,a,--a)<SUB>8</SUB>>", "75": "<(IDENTIFIER,b,--b)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,g[a][b])<SUB>9</SUB>>", "79": "<(IDENTIFIER,g,g[a][b] = g[b][a] = true)<SUB>9</SUB>>", "81": "<(IDENTIFIER,b,g[a][b] = g[b][a] = true)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,g[b][a])<SUB>9</SUB>>", "85": "<(IDENTIFIER,g,g[b][a] = true)<SUB>9</SUB>>", "87": "<(IDENTIFIER,a,g[b][a] = true)<SUB>9</SUB>>", "89": "<(LOCAL,int mx: int)<SUB>11</SUB>>", "91": "<(IDENTIFIER,mx,int mx = 1 &lt;&lt; n)<SUB>11</SUB>>", "93": "<(LITERAL,1,1 &lt;&lt; n)<SUB>11</SUB>>", "95": "<(LOCAL,long[][] dp: long[][])<SUB>12</SUB>>", "97": "<(IDENTIFIER,dp,long[][] dp = new long[mx][n])<SUB>12</SUB>>", "99": "<(IDENTIFIER,mx,new long[mx][n])<SUB>12</SUB>>", "101": "<(LOCAL,long res: long)<SUB>13</SUB>>", "103": "<(IDENTIFIER,res,long res = 0)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; mx); ++mask),for (int mask = 0; Some(mask &lt; mx); ++mask))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>14</SUB>>", "109": "<(LITERAL,0,int mask = 0)<SUB>14</SUB>>", "111": "<(IDENTIFIER,mask,mask &lt; mx)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.preIncrement,++mask)<SUB>14</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.preIncrement,++i)<SUB>15</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.equals,mask == (1 &lt;&lt; i))<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>16</SUB>>", "131": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.assignment,dp[mask][i] = 1)<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>17</SUB>>", "137": "<(IDENTIFIER,mask,dp[mask][i] = 1)<SUB>17</SUB>>", "139": "<(LITERAL,1,dp[mask][i] = 1)<SUB>17</SUB>>", "141": "<(CONTROL_STRUCTURE,if (((mask &amp; (1 &lt;&lt; i)) != 0) &amp;&amp; ((mask &amp; ((1 &lt;&lt; i) - 1)) != 0)),if (((mask &amp; (1 &lt;&lt; i)) != 0) &amp;&amp; ((mask &amp; ((1 &lt;&lt; i) - 1)) != 0)))<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>18</SUB>>", "145": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>18</SUB>>", "147": "<(LITERAL,1,1 &lt;&lt; i)<SUB>18</SUB>>", "149": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>18</SUB>>", "151": "<(&lt;operator&gt;.and,mask &amp; ((1 &lt;&lt; i) - 1))<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; i) - 1)<SUB>18</SUB>>", "155": "<(LITERAL,1,1 &lt;&lt; i)<SUB>18</SUB>>", "157": "<(LITERAL,1,(1 &lt;&lt; i) - 1)<SUB>18</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "161": "<(&lt;operator&gt;.assignment,long r = 0)<SUB>19</SUB>>", "163": "<(LITERAL,0,long r = 0)<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.assignment,int next = mask ^ (1 &lt;&lt; i))<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>20</SUB>>", "169": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>20</SUB>>", "171": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>20</SUB>>", "173": "<(LOCAL,int j: int)<SUB>21</SUB>>", "175": "<(IDENTIFIER,j,int j = 0)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>21</SUB>>", "179": "<(IDENTIFIER,n,j &lt; n)<SUB>21</SUB>>", "181": "<(IDENTIFIER,j,++j)<SUB>21</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,g[i][j])<SUB>21</SUB>>", "185": "<(IDENTIFIER,g,if (g[i][j]))<SUB>21</SUB>>", "187": "<(IDENTIFIER,j,if (g[i][j]))<SUB>21</SUB>>", "189": "<(&lt;operator&gt;.assignmentPlus,r += dp[next][j])<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,dp[next][j])<SUB>22</SUB>>", "193": "<(IDENTIFIER,dp,r += dp[next][j])<SUB>22</SUB>>", "195": "<(IDENTIFIER,j,r += dp[next][j])<SUB>22</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>24</SUB>>", "199": "<(IDENTIFIER,dp,dp[mask][i] = r)<SUB>24</SUB>>", "201": "<(IDENTIFIER,i,dp[mask][i] = r)<SUB>24</SUB>>", "203": "<(CONTROL_STRUCTURE,else,else)<SUB>25</SUB>>", "205": "<(&lt;operator&gt;.assignment,dp[mask][i] = 0)<SUB>26</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>26</SUB>>", "209": "<(IDENTIFIER,mask,dp[mask][i] = 0)<SUB>26</SUB>>", "211": "<(LITERAL,0,dp[mask][i] = 0)<SUB>26</SUB>>", "213": "<(&lt;operator&gt;.logicalAnd,(mask &amp; (mask - 1)) != 0 &amp;&amp; g[i][lowestBit(mask)])<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.and,mask &amp; (mask - 1))<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.subtraction,mask - 1)<SUB>29</SUB>>", "219": "<(LITERAL,1,mask - 1)<SUB>29</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,g[i][lowestBit(mask)])<SUB>29</SUB>>", "223": "<(IDENTIFIER,g,(mask &amp; (mask - 1)) != 0 &amp;&amp; g[i][lowestBit(mask)])<SUB>29</SUB>>", "225": "<(lowestBit,lowestBit(mask))<SUB>29</SUB>>", "227": "<(IDENTIFIER,mask,lowestBit(mask))<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.assignmentPlus,res += dp[mask][i])<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>30</SUB>>", "233": "<(IDENTIFIER,dp,res += dp[mask][i])<SUB>30</SUB>>", "235": "<(IDENTIFIER,i,res += dp[mask][i])<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "239": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.subtraction,res - m)<SUB>35</SUB>>", "243": "<(IDENTIFIER,m,res - m)<SUB>35</SUB>>", "245": "<(MODIFIER,PUBLIC)>", "247": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}