{"edges": [["21", "22"], ["21", "23"], ["21", "246"], ["21", "247"], ["21", "248"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "59"], ["23", "66"], ["23", "67"], ["23", "74"], ["23", "75"], ["23", "82"], ["23", "122"], ["23", "123"], ["23", "130"], ["23", "170"], ["23", "171"], ["23", "176"], ["23", "240"], ["23", "244"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "99"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "98"], ["96", "97"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "140"], ["130", "142"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "149"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "148"], ["146", "147"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "182"], ["176", "187"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["182", "186"], ["184", "185"], ["187", "188"], ["188", "189"], ["188", "190"], ["188", "195"], ["188", "230"], ["188", "235"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "203"], ["195", "205"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "213"], ["205", "215"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "220"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "225"], ["221", "229"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["225", "228"], ["230", "231"], ["230", "232"], ["230", "233"], ["230", "234"], ["235", "236"], ["235", "237"], ["235", "238"], ["235", "239"], ["240", "241"], ["240", "242"], ["240", "243"], ["244", "245"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "49"], ["46", "56"], ["52", "63"], ["59", "71"], ["67", "79"], ["75", "84"], ["123", "132"], ["171", "178"], ["240", "244"], ["244", "248"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["54", "52"], ["61", "59"], ["69", "67"], ["77", "75"], ["84", "87"], ["87", "96"], ["87", "126"], ["90", "87"], ["125", "123"], ["132", "137"], ["135", "146"], ["135", "173"], ["140", "137"], ["173", "171"], ["177", "184"], ["177", "192"], ["182", "240"], ["29", "36"], ["32", "27"], ["44", "42"], ["49", "48"], ["56", "54"], ["63", "61"], ["71", "69"], ["79", "77"], ["93", "101"], ["126", "125"], ["137", "135"], ["143", "151"], ["178", "177"], ["184", "182"], ["31", "29"], ["34", "32"], ["95", "93"], ["101", "106"], ["104", "113"], ["104", "90"], ["109", "106"], ["111", "109"], ["145", "143"], ["151", "154"], ["154", "161"], ["154", "140"], ["157", "154"], ["159", "157"], ["190", "197"], ["230", "235"], ["235", "240"], ["36", "34"], ["96", "95"], ["106", "104"], ["112", "119"], ["117", "111"], ["146", "145"], ["160", "167"], ["165", "159"], ["192", "190"], ["197", "200"], ["200", "207"], ["200", "230"], ["203", "200"], ["113", "112"], ["119", "117"], ["161", "160"], ["167", "165"], ["207", "210"], ["210", "217"], ["210", "203"], ["213", "210"], ["215", "213"], ["216", "224"], ["217", "216"], ["222", "225"], ["225", "215"], ["224", "222"], ["21", "26"], ["22", "248"], ["24", "248"], ["29", "248"], ["32", "248"], ["32", "248"], ["32", "248"], ["27", "248"], ["38", "248"], ["41", "248"], ["41", "248"], ["46", "248"], ["49", "248"], ["48", "248"], ["46", "248"], ["46", "248"], ["54", "248"], ["52", "248"], ["52", "248"], ["61", "248"], ["59", "248"], ["59", "248"], ["69", "248"], ["67", "248"], ["67", "248"], ["75", "248"], ["77", "248"], ["75", "248"], ["75", "248"], ["87", "248"], ["123", "248"], ["123", "248"], ["123", "248"], ["132", "248"], ["135", "248"], ["135", "248"], ["135", "248"], ["173", "248"], ["173", "248"], ["171", "248"], ["171", "248"], ["178", "248"], ["177", "248"], ["177", "248"], ["192", "248"], ["190", "248"], ["190", "248"], ["197", "248"], ["200", "248"], ["200", "248"], ["200", "248"], ["230", "248"], ["230", "248"], ["230", "248"], ["235", "248"], ["235", "248"], ["235", "248"], ["207", "248"], ["210", "248"], ["210", "248"], ["210", "248"], ["203", "248"], ["215", "248"], ["222", "248"], ["225", "248"], ["225", "248"], ["215", "248"], ["213", "248"], ["182", "248"], ["182", "248"], ["240", "248"], ["240", "248"], ["240", "248"], ["244", "248"], ["244", "248"], ["143", "248"], ["146", "248"], ["145", "248"], ["143", "248"], ["143", "248"], ["151", "248"], ["154", "248"], ["154", "248"], ["140", "248"], ["159", "248"], ["165", "248"], ["159", "248"], ["159", "248"], ["157", "248"], ["93", "248"], ["96", "248"], ["95", "248"], ["93", "248"], ["93", "248"], ["101", "248"], ["104", "248"], ["104", "248"], ["104", "248"], ["90", "248"], ["111", "248"], ["117", "248"], ["111", "248"], ["111", "248"], ["109", "248"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["69", "67"], ["69", "67"], ["77", "75"], ["77", "75"], ["125", "123"], ["125", "123"], ["173", "171"], ["173", "171"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "84"], ["21", "132"], ["235", "240"], ["182", "240"], ["21", "240"], ["235", "240"], ["182", "240"], ["41", "240"], ["240", "244"], ["21", "244"], ["21", "29"], ["21", "37"], ["49", "48"], ["21", "48"], ["21", "54"], ["46", "54"], ["54", "61"], ["21", "61"], ["46", "61"], ["61", "69"], ["21", "69"], ["46", "69"], ["52", "77"], ["21", "77"], ["79", "77"], ["79", "77"], ["84", "87"], ["90", "87"], ["21", "87"], ["77", "87"], ["87", "90"], ["21", "90"], ["95", "93"], ["95", "93"], ["126", "125"], ["126", "125"], ["79", "125"], ["106", "125"], ["21", "125"], ["132", "135"], ["140", "135"], ["21", "135"], ["137", "135"], ["137", "135"], ["135", "140"], ["21", "140"], ["145", "143"], ["145", "143"], ["137", "173"], ["21", "173"], ["125", "173"], ["154", "173"], ["178", "177"], ["178", "177"], ["21", "177"], ["69", "182"], ["165", "182"], ["117", "182"], ["21", "182"], ["184", "182"], ["171", "182"], ["29", "32"], ["21", "32"], ["27", "49"], ["21", "49"], ["59", "79"], ["21", "79"], ["21", "101"], ["117", "111"], ["117", "111"], ["87", "126"], ["21", "126"], ["126", "137"], ["21", "137"], ["21", "151"], ["165", "159"], ["165", "159"], ["67", "178"], ["21", "178"], ["21", "184"], ["192", "190"], ["192", "190"], ["96", "95"], ["21", "95"], ["101", "104"], ["109", "104"], ["21", "104"], ["106", "104"], ["106", "104"], ["104", "109"], ["21", "109"], ["146", "145"], ["21", "145"], ["151", "154"], ["157", "154"], ["21", "154"], ["125", "154"], ["154", "157"], ["21", "157"], ["21", "197"], ["69", "230"], ["165", "230"], ["117", "230"], ["21", "230"], ["190", "230"], ["75", "230"], ["123", "230"], ["230", "235"], ["21", "235"], ["230", "235"], ["178", "235"], ["171", "235"], ["49", "96"], ["21", "96"], ["79", "106"], ["21", "106"], ["69", "117"], ["21", "117"], ["93", "117"], ["49", "146"], ["96", "146"], ["21", "146"], ["69", "165"], ["117", "165"], ["21", "165"], ["143", "165"], ["117", "165"], ["173", "192"], ["21", "192"], ["173", "192"], ["197", "200"], ["203", "200"], ["21", "200"], ["192", "200"], ["200", "203"], ["225", "203"], ["21", "203"], ["21", "207"], ["222", "215"], ["225", "215"], ["21", "215"], ["207", "210"], ["213", "210"], ["21", "210"], ["192", "210"], ["225", "213"], ["21", "213"], ["21", "222"], ["21", "229"], ["222", "225"], ["21", "225"], ["200", "225"], ["210", "225"], ["87", "96"], ["87", "104"], ["87", "95"], ["87", "87"], ["87", "93"], ["87", "101"], ["87", "90"], ["87", "106"], ["135", "154"], ["135", "145"], ["135", "146"], ["135", "151"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "135"], ["177", "230"], ["177", "192"], ["177", "197"], ["177", "190"], ["177", "184"], ["177", "182"], ["177", "235"], ["177", "200"], ["104", "113"], ["104", "104"], ["104", "119"], ["104", "112"], ["104", "111"], ["104", "106"], ["104", "117"], ["104", "109"], ["154", "167"], ["154", "154"], ["154", "161"], ["154", "160"], ["154", "157"], ["154", "159"], ["154", "165"], ["200", "207"], ["200", "210"], ["200", "200"], ["200", "203"], ["210", "225"], ["210", "215"], ["210", "213"], ["210", "224"], ["210", "210"], ["210", "217"], ["210", "216"], ["210", "222"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,String[] in: java.lang.String[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,String[] in = split(&quot; &quot;))<SUB>6</SUB>>", "49": "<(readLine,readLine())<SUB>6</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(IDENTIFIER,row,row = parse(in[0]))<SUB>7</SUB>>", "55": "<(IDENTIFIER,this,parse(in[0]))<SUB>7</SUB>>", "57": "<(IDENTIFIER,in,parse(in[0]))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,col = parse(in[1]))<SUB>8</SUB>>", "61": "<(parse,parse(in[1]))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,in[1])<SUB>8</SUB>>", "65": "<(LITERAL,1,parse(in[1]))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int k = parse(in[2]))<SUB>9</SUB>>", "69": "<(parse,parse(in[2]))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,in[2])<SUB>9</SUB>>", "73": "<(LITERAL,2,parse(in[2]))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int[][] xMove = new int[row][col - 1])<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[row][col - 1])>", "79": "<(&lt;operator&gt;.subtraction,col - 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,col - 1)<SUB>11</SUB>>", "83": "<(LOCAL,int i: int)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; row)<SUB>12</SUB>>", "89": "<(IDENTIFIER,row,i &lt; row)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.assignment,in = split(&quot; &quot;))<SUB>14</SUB>>", "95": "<(split,split(&quot; &quot;))<SUB>14</SUB>>", "97": "<(IDENTIFIER,scan,readLine())<SUB>14</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; col - 1); j++),for (int j = 0; Some(j &lt; col - 1); j++))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "103": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "105": "<(IDENTIFIER,j,j &lt; col - 1)<SUB>15</SUB>>", "107": "<(IDENTIFIER,col,col - 1)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,xMove[i][j] = parse(in[j]))<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,xMove[i])<SUB>16</SUB>>", "115": "<(IDENTIFIER,i,xMove[i][j] = parse(in[j]))<SUB>16</SUB>>", "117": "<(parse,parse(in[j]))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,in[j])<SUB>16</SUB>>", "121": "<(IDENTIFIER,j,parse(in[j]))<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,int[][] yMove = new int[row - 1][col])<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.alloc,new int[row - 1][col])>", "127": "<(IDENTIFIER,row,row - 1)<SUB>19</SUB>>", "129": "<(IDENTIFIER,col,new int[row - 1][col])<SUB>19</SUB>>", "131": "<(LOCAL,int i: int)<SUB>20</SUB>>", "133": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.lessThan,i &lt; row - 1)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.subtraction,row - 1)<SUB>20</SUB>>", "139": "<(LITERAL,1,row - 1)<SUB>20</SUB>>", "141": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.assignment,in = split(&quot; &quot;))<SUB>22</SUB>>", "145": "<(split,split(&quot; &quot;))<SUB>22</SUB>>", "147": "<(IDENTIFIER,scan,readLine())<SUB>22</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; col); j++),for (int j = 0; Some(j &lt; col); j++))<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "153": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "155": "<(IDENTIFIER,j,j &lt; col)<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.assignment,yMove[i][j] = parse(in[j]))<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,yMove[i])<SUB>24</SUB>>", "163": "<(IDENTIFIER,i,yMove[i][j] = parse(in[j]))<SUB>24</SUB>>", "165": "<(parse,parse(in[j]))<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,in[j])<SUB>24</SUB>>", "169": "<(IDENTIFIER,j,parse(in[j]))<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.assignment,int[][] output = new int[row][col])<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.alloc,new int[row][col])>", "175": "<(IDENTIFIER,col,new int[row][col])<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.notEquals,k % 2 != 0)<SUB>30</SUB>>", "179": "<(IDENTIFIER,k,k % 2)<SUB>30</SUB>>", "181": "<(LITERAL,0,k % 2 != 0)<SUB>30</SUB>>", "183": "<(IDENTIFIER,this,fill(-1, output))<SUB>31</SUB>>", "185": "<(LITERAL,1,-1)<SUB>31</SUB>>", "187": "<(CONTROL_STRUCTURE,else,else)<SUB>34</SUB>>", "189": "<(LOCAL,Point[][] grid: ANY)<SUB>35</SUB>>", "191": "<(IDENTIFIER,grid,ANY grid = new Point[row][col])<SUB>35</SUB>>", "193": "<(IDENTIFIER,row,new Point[row][col])<SUB>35</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; row); i++),for (int i = 0; Some(i &lt; row); i++))<SUB>36</SUB>>", "197": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>36</SUB>>", "199": "<(LITERAL,0,int i = 0)<SUB>36</SUB>>", "201": "<(IDENTIFIER,i,i &lt; row)<SUB>36</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,i++)<SUB>36</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; col); j++),for (int j = 0; Some(j &lt; col); j++))<SUB>37</SUB>>", "207": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>37</SUB>>", "209": "<(LITERAL,0,int j = 0)<SUB>37</SUB>>", "211": "<(IDENTIFIER,j,j &lt; col)<SUB>37</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,j++)<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.assignment,grid[i][j] = new Point(i, j))<SUB>38</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,grid[i])<SUB>38</SUB>>", "219": "<(IDENTIFIER,i,grid[i][j] = new Point(i, j))<SUB>38</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "223": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "225": "<(&lt;init&gt;,new Point(i, j))<SUB>38</SUB>>", "227": "<(IDENTIFIER,i,new Point(i, j))<SUB>38</SUB>>", "229": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "231": "<(IDENTIFIER,this,parseMoves(grid, xMove, yMove))<SUB>40</SUB>>", "233": "<(IDENTIFIER,xMove,parseMoves(grid, xMove, yMove))<SUB>40</SUB>>", "235": "<(solve,solve(grid, k, output))<SUB>42</SUB>>", "237": "<(IDENTIFIER,grid,solve(grid, k, output))<SUB>42</SUB>>", "239": "<(IDENTIFIER,output,solve(grid, k, output))<SUB>42</SUB>>", "241": "<(IDENTIFIER,this,print(output, out))<SUB>45</SUB>>", "243": "<(IDENTIFIER,out,print(output, out))<SUB>45</SUB>>", "245": "<(IDENTIFIER,out,flush())<SUB>47</SUB>>", "247": "<(MODIFIER,STATIC)>"}}