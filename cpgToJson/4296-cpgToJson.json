{"edges": [["22", "24"], ["22", "117"], ["22", "118"], ["22", "119"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "65"], ["24", "66"], ["24", "70"], ["24", "108"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "84"], ["80", "87"], ["81", "82"], ["81", "83"], ["84", "7"], ["84", "85"], ["85", "86"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "95"], ["91", "107"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "101"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "106"], ["102", "103"], ["102", "104"], ["104", "105"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "115"], ["112", "116"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "63"], ["59", "68"], ["66", "72"], ["108", "119"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["61", "59"], ["68", "66"], ["72", "75"], ["75", "83"], ["75", "111"], ["78", "75"], ["109", "112"], ["112", "108"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["63", "61"], ["81", "85"], ["84", "88"], ["87", "78"], ["111", "109"], ["32", "30"], ["35", "33"], ["83", "81"], ["85", "84"], ["88", "94"], ["37", "35"], ["92", "99"], ["95", "87"], ["94", "92"], ["97", "104"], ["101", "95"], ["99", "97"], ["102", "101"], ["104", "102"], ["22", "27"], ["23", "119"], ["25", "119"], ["30", "119"], ["33", "119"], ["33", "119"], ["33", "119"], ["28", "119"], ["39", "119"], ["43", "119"], ["42", "119"], ["42", "119"], ["46", "119"], ["53", "119"], ["61", "119"], ["63", "119"], ["61", "119"], ["59", "119"], ["59", "119"], ["66", "119"], ["66", "119"], ["72", "119"], ["75", "119"], ["75", "119"], ["75", "119"], ["108", "119"], ["112", "119"], ["112", "119"], ["108", "119"], ["108", "119"], ["81", "119"], ["85", "119"], ["84", "119"], ["84", "119"], ["87", "119"], ["92", "119"], ["95", "119"], ["95", "119"], ["102", "119"], ["104", "119"], ["102", "119"], ["95", "119"], ["95", "119"], ["87", "119"], ["78", "119"], ["112", "119"], ["59", "119"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["61", "59"], ["61", "59"], ["68", "66"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "72"], ["112", "108"], ["112", "108"], ["112", "108"], ["112", "108"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["55", "61"], ["22", "61"], ["63", "61"], ["46", "68"], ["22", "68"], ["72", "75"], ["78", "75"], ["22", "75"], ["68", "75"], ["75", "78"], ["22", "78"], ["22", "81"], ["92", "87"], ["95", "87"], ["22", "87"], ["22", "112"], ["66", "112"], ["87", "112"], ["53", "112"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["57", "63"], ["22", "63"], ["81", "84"], ["22", "84"], ["85", "84"], ["43", "85"], ["22", "85"], ["22", "92"], ["22", "107"], ["92", "95"], ["22", "95"], ["101", "95"], ["97", "95"], ["97", "95"], ["101", "95"], ["61", "97"], ["102", "97"], ["22", "97"], ["99", "97"], ["102", "101"], ["102", "101"], ["22", "101"], ["84", "99"], ["22", "99"], ["97", "102"], ["22", "102"], ["104", "102"], ["99", "104"], ["22", "104"], ["75", "94"], ["75", "83"], ["75", "75"], ["75", "99"], ["75", "81"], ["75", "84"], ["75", "102"], ["75", "85"], ["75", "88"], ["75", "104"], ["75", "95"], ["75", "92"], ["75", "87"], ["75", "97"], ["75", "101"], ["75", "78"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int k: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,k,int k = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(IDENTIFIER,ourLevel,ourLevel = parseInt(st.nextToken()))<SUB>6</SUB>>", "62": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "64": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "66": "<(&lt;operator&gt;.assignment,ANY list = new State[n])<SUB>7</SUB>>", "68": "<(&lt;operator&gt;.alloc,new State[n])>", "70": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "72": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "74": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "76": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "78": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "80": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "82": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>9</SUB>>", "84": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>9</SUB>>", "85": "<(readLine,readLine())<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,list[i] = new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()) / 10))<SUB>10</SUB>>", "89": "<(IDENTIFIER,list,list[i] = new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()) / 10))<SUB>10</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "93": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "95": "<(&lt;init&gt;,new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()) / 10))<SUB>10</SUB>>", "97": "<(parseInt,parseInt(st.nextToken()))<SUB>10</SUB>>", "99": "<(nextToken,nextToken())<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.division,Integer.parseInt(st.nextToken()) / 10)<SUB>10</SUB>>", "103": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "105": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "107": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "113": "<(IDENTIFIER,this,solve(list, 0, k))<SUB>12</SUB>>", "115": "<(LITERAL,0,solve(list, 0, k))<SUB>12</SUB>>", "117": "<(MODIFIER,PUBLIC)>", "119": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}