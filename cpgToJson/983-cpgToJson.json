{"edges": [["19", "21"], ["19", "133"], ["19", "134"], ["19", "135"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "38"], ["21", "39"], ["21", "40"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "58"], ["21", "65"], ["21", "66"], ["21", "67"], ["21", "68"], ["21", "71"], ["21", "74"], ["21", "128"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "86"], ["78", "95"], ["78", "98"], ["78", "101"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "105"], ["101", "112"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["113", "114"], ["113", "117"], ["113", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["22", "29"], ["25", "40"], ["40", "48"], ["44", "55"], ["51", "62"], ["58", "68"], ["68", "71"], ["71", "75"], ["128", "135"], ["24", "22"], ["46", "44"], ["53", "51"], ["60", "58"], ["75", "82"], ["75", "131"], ["129", "128"], ["27", "34"], ["30", "25"], ["47", "46"], ["55", "53"], ["62", "60"], ["79", "91"], ["86", "95"], ["95", "98"], ["98", "102"], ["131", "129"], ["29", "27"], ["32", "30"], ["48", "47"], ["81", "79"], ["88", "86"], ["102", "108"], ["102", "114"], ["34", "32"], ["82", "81"], ["89", "88"], ["106", "131"], ["91", "89"], ["108", "106"], ["114", "119"], ["114", "125"], ["117", "75"], ["119", "117"], ["123", "75"], ["125", "123"], ["19", "24"], ["20", "135"], ["22", "135"], ["27", "135"], ["30", "135"], ["30", "135"], ["30", "135"], ["25", "135"], ["40", "135"], ["44", "135"], ["48", "135"], ["47", "135"], ["46", "135"], ["44", "135"], ["44", "135"], ["53", "135"], ["51", "135"], ["51", "135"], ["58", "135"], ["60", "135"], ["60", "135"], ["58", "135"], ["58", "135"], ["68", "135"], ["71", "135"], ["71", "135"], ["75", "135"], ["75", "135"], ["75", "135"], ["82", "135"], ["82", "135"], ["81", "135"], ["79", "135"], ["79", "135"], ["89", "135"], ["88", "135"], ["86", "135"], ["86", "135"], ["95", "135"], ["95", "135"], ["98", "135"], ["102", "135"], ["102", "135"], ["102", "135"], ["114", "135"], ["114", "135"], ["114", "135"], ["125", "135"], ["123", "135"], ["123", "135"], ["119", "135"], ["117", "135"], ["117", "135"], ["108", "135"], ["108", "135"], ["106", "135"], ["106", "135"], ["128", "135"], ["128", "135"], ["128", "135"], ["19", "20"], ["19", "22"], ["19", "40"], ["46", "44"], ["46", "44"], ["53", "51"], ["53", "51"], ["60", "58"], ["60", "58"], ["19", "68"], ["51", "71"], ["19", "71"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["40", "128"], ["106", "128"], ["19", "128"], ["19", "27"], ["19", "35"], ["47", "46"], ["19", "46"], ["19", "53"], ["44", "53"], ["53", "60"], ["19", "60"], ["44", "60"], ["68", "75"], ["123", "75"], ["19", "75"], ["71", "75"], ["117", "75"], ["81", "79"], ["81", "79"], ["88", "86"], ["88", "86"], ["19", "95"], ["51", "95"], ["89", "98"], ["19", "98"], ["27", "30"], ["19", "30"], ["48", "47"], ["86", "95"], ["95", "98"], ["25", "48"], ["19", "48"], ["75", "81"], ["19", "81"], ["75", "81"], ["89", "88"], ["89", "88"], ["19", "88"], ["98", "102"], ["19", "102"], ["58", "102"], ["114", "102"], ["108", "106"], ["108", "106"], ["75", "82"], ["19", "82"], ["75", "82"], ["19", "89"], ["79", "89"], ["119", "117"], ["119", "117"], ["79", "91"], ["19", "91"], ["19", "108"], ["51", "108"], ["89", "108"], ["102", "114"], ["19", "114"], ["102", "114"], ["19", "123"], ["89", "123"], ["19", "119"], ["89", "119"], ["19", "125"], ["89", "125"], ["75", "89"], ["75", "98"], ["75", "81"], ["75", "102"], ["75", "88"], ["75", "95"], ["75", "91"], ["75", "82"], ["75", "79"], ["75", "86"], ["102", "75"], ["102", "114"], ["102", "106"], ["102", "108"], ["114", "119"], ["114", "117"], ["114", "123"], ["114", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(LOCAL,long K: long)<SUB>5</SUB>>", "39": "<(LOCAL,long ans: long)<SUB>5</SUB>>", "41": "<(IDENTIFIER,ans,long ans = 0)<SUB>5</SUB>>", "43": "<(LOCAL,String[] s: java.lang.String[])<SUB>7</SUB>>", "45": "<(IDENTIFIER,s,String[] s = split(&quot; &quot;))<SUB>7</SUB>>", "47": "<(trim,trim())<SUB>7</SUB>>", "49": "<(IDENTIFIER,br,readLine())<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,N = Long.parseLong(s[0]))<SUB>8</SUB>>", "53": "<(parseLong,Long.parseLong(s[0]))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,s[0])<SUB>8</SUB>>", "57": "<(LITERAL,0,Long.parseLong(s[0]))<SUB>8</SUB>>", "59": "<(IDENTIFIER,K,K = Long.parseLong(s[1]))<SUB>9</SUB>>", "61": "<(IDENTIFIER,Long,Long.parseLong(s[1]))<SUB>9</SUB>>", "63": "<(IDENTIFIER,s,Long.parseLong(s[1]))<SUB>9</SUB>>", "65": "<(LOCAL,long l: long)<SUB>11</SUB>>", "67": "<(LOCAL,long mid: long)<SUB>11</SUB>>", "69": "<(IDENTIFIER,l,long l = 1)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,long r = N)<SUB>11</SUB>>", "73": "<(IDENTIFIER,N,long r = N)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.lessEqualsThan,l &lt;= r)<SUB>13</SUB>>", "77": "<(IDENTIFIER,r,l &lt;= r)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.assignment,mid = (l + r) / 2)<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.division,(l + r) / 2)<SUB>15</SUB>>", "83": "<(IDENTIFIER,l,l + r)<SUB>15</SUB>>", "85": "<(LITERAL,2,(l + r) / 2)<SUB>15</SUB>>", "87": "<(IDENTIFIER,tmp,tmp = mid * (mid + 1) / 2)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.multiplication,mid * (mid + 1))<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.addition,mid + 1)<SUB>17</SUB>>", "93": "<(LITERAL,1,mid + 1)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.assignmentMinus,tmp -= N)<SUB>18</SUB>>", "97": "<(IDENTIFIER,N,tmp -= N)<SUB>18</SUB>>", "99": "<(IDENTIFIER,tmp,tmp += mid)<SUB>19</SUB>>", "101": "<(CONTROL_STRUCTURE,if (tmp == K),if (tmp == K))<SUB>21</SUB>>", "103": "<(IDENTIFIER,tmp,tmp == K)<SUB>21</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "107": "<(IDENTIFIER,ans,ans = N - mid)<SUB>23</SUB>>", "109": "<(IDENTIFIER,N,N - mid)<SUB>23</SUB>>", "111": "<(CONTROL_STRUCTURE,break;,break;)<SUB>24</SUB>>", "113": "<(CONTROL_STRUCTURE,if (tmp &gt; K),if (tmp &gt; K))<SUB>26</SUB>>", "115": "<(IDENTIFIER,tmp,tmp &gt; K)<SUB>26</SUB>>", "117": "<(&lt;operator&gt;.assignment,r = mid - 1)<SUB>27</SUB>>", "119": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>27</SUB>>", "121": "<(LITERAL,1,mid - 1)<SUB>27</SUB>>", "123": "<(&lt;operator&gt;.assignment,l = mid + 1)<SUB>29</SUB>>", "125": "<(&lt;operator&gt;.addition,mid + 1)<SUB>29</SUB>>", "127": "<(LITERAL,1,mid + 1)<SUB>29</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>31</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>31</SUB>>", "133": "<(MODIFIER,PUBLIC)>", "135": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}