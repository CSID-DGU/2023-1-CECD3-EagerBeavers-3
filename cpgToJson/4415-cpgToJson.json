{"edges": [["17", "18"], ["17", "19"], ["17", "300"], ["17", "301"], ["17", "302"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "37"], ["19", "38"], ["19", "42"], ["19", "43"], ["19", "48"], ["19", "76"], ["19", "81"], ["19", "99"], ["19", "162"], ["19", "167"], ["19", "185"], ["19", "246"], ["19", "254"], ["19", "255"], ["19", "258"], ["19", "281"], ["19", "296"], ["19", "298"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["142", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["185", "190"], ["185", "193"], ["185", "195"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "203"], ["195", "205"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "216"], ["206", "218"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["218", "224"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "226"], ["224", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["248", "251"], ["251", "252"], ["251", "253"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["258", "263"], ["258", "266"], ["258", "268"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["268", "269"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["271", "274"], ["274", "275"], ["274", "276"], ["274", "277"], ["274", "278"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "285"], ["281", "292"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["292", "293"], ["293", "294"], ["293", "295"], ["296", "297"], ["298", "299"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "35"], ["33", "40"], ["38", "45"], ["43", "50"], ["76", "83"], ["162", "169"], ["246", "255"], ["255", "260"], ["296", "298"], ["298", "302"], ["22", "20"], ["27", "25"], ["30", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "53"], ["53", "60"], ["53", "78"], ["56", "53"], ["78", "76"], ["83", "86"], ["86", "93"], ["86", "101"], ["89", "86"], ["91", "89"], ["101", "104"], ["104", "111"], ["104", "164"], ["107", "104"], ["164", "162"], ["169", "172"], ["172", "179"], ["172", "187"], ["175", "172"], ["177", "175"], ["187", "190"], ["190", "197"], ["190", "251"], ["193", "190"], ["248", "246"], ["260", "263"], ["263", "278"], ["263", "282"], ["266", "263"], ["282", "288"], ["282", "293"], ["285", "296"], ["32", "30"], ["60", "63"], ["63", "70"], ["63", "56"], ["66", "63"], ["68", "66"], ["93", "98"], ["96", "91"], ["111", "114"], ["114", "122"], ["114", "107"], ["117", "114"], ["179", "184"], ["182", "177"], ["197", "200"], ["200", "208"], ["200", "193"], ["203", "200"], ["251", "248"], ["269", "266"], ["287", "285"], ["293", "296"], ["69", "74"], ["74", "68"], ["98", "96"], ["184", "182"], ["271", "269"], ["288", "287"], ["70", "69"], ["122", "125"], ["125", "132"], ["125", "117"], ["128", "125"], ["130", "128"], ["208", "213"], ["211", "220"], ["211", "203"], ["216", "213"], ["218", "216"], ["274", "271"], ["131", "138"], ["136", "130"], ["213", "211"], ["219", "227"], ["224", "218"], ["278", "274"], ["132", "131"], ["137", "145"], ["142", "136"], ["220", "219"], ["226", "235"], ["231", "224"], ["138", "137"], ["144", "153"], ["149", "142"], ["227", "226"], ["233", "231"], ["145", "144"], ["151", "149"], ["234", "240"], ["239", "233"], ["152", "158"], ["157", "151"], ["235", "234"], ["240", "243"], ["243", "239"], ["153", "152"], ["158", "157"], ["17", "22"], ["18", "302"], ["20", "302"], ["23", "302"], ["25", "302"], ["28", "302"], ["28", "302"], ["33", "302"], ["40", "302"], ["38", "302"], ["38", "302"], ["43", "302"], ["45", "302"], ["43", "302"], ["43", "302"], ["76", "302"], ["76", "302"], ["162", "302"], ["162", "302"], ["162", "302"], ["248", "302"], ["246", "302"], ["246", "302"], ["255", "302"], ["255", "302"], ["260", "302"], ["263", "302"], ["263", "302"], ["282", "302"], ["282", "302"], ["293", "302"], ["293", "302"], ["285", "302"], ["285", "302"], ["296", "302"], ["298", "302"], ["298", "302"], ["269", "302"], ["271", "302"], ["274", "302"], ["271", "302"], ["269", "302"], ["269", "302"], ["266", "302"], ["197", "302"], ["200", "302"], ["200", "302"], ["193", "302"], ["208", "302"], ["211", "302"], ["213", "302"], ["211", "302"], ["211", "302"], ["203", "302"], ["218", "302"], ["224", "302"], ["233", "302"], ["233", "302"], ["231", "302"], ["224", "302"], ["218", "302"], ["218", "302"], ["216", "302"], ["177", "302"], ["177", "302"], ["177", "302"], ["177", "302"], ["175", "302"], ["111", "302"], ["114", "302"], ["114", "302"], ["107", "302"], ["122", "302"], ["125", "302"], ["125", "302"], ["125", "302"], ["117", "302"], ["130", "302"], ["136", "302"], ["142", "302"], ["151", "302"], ["151", "302"], ["149", "302"], ["142", "302"], ["136", "302"], ["130", "302"], ["130", "302"], ["128", "302"], ["91", "302"], ["91", "302"], ["91", "302"], ["91", "302"], ["89", "302"], ["60", "302"], ["63", "302"], ["63", "302"], ["63", "302"], ["56", "302"], ["68", "302"], ["74", "302"], ["68", "302"], ["68", "302"], ["66", "302"], ["246", "302"], ["274", "302"], ["17", "18"], ["17", "20"], ["17", "25"], ["35", "33"], ["40", "38"], ["45", "43"], ["45", "43"], ["78", "76"], ["164", "162"], ["248", "246"], ["248", "246"], ["17", "255"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "50"], ["17", "83"], ["17", "101"], ["17", "169"], ["17", "187"], ["17", "260"], ["293", "296"], ["285", "296"], ["17", "296"], ["296", "298"], ["17", "298"], ["23", "35"], ["17", "35"], ["35", "40"], ["17", "40"], ["33", "45"], ["17", "45"], ["38", "45"], ["50", "53"], ["56", "53"], ["17", "53"], ["45", "53"], ["53", "56"], ["17", "56"], ["17", "60"], ["74", "68"], ["53", "78"], ["17", "78"], ["83", "86"], ["89", "86"], ["17", "86"], ["78", "86"], ["86", "89"], ["17", "89"], ["17", "91"], ["76", "91"], ["101", "104"], ["107", "104"], ["17", "104"], ["86", "104"], ["114", "104"], ["17", "107"], ["104", "107"], ["104", "111"], ["17", "111"], ["104", "164"], ["17", "164"], ["169", "172"], ["175", "172"], ["17", "172"], ["164", "172"], ["172", "175"], ["17", "175"], ["91", "177"], ["17", "177"], ["162", "177"], ["91", "177"], ["187", "190"], ["193", "190"], ["17", "190"], ["172", "190"], ["200", "190"], ["190", "193"], ["17", "193"], ["17", "197"], ["251", "248"], ["17", "248"], ["251", "248"], ["260", "263"], ["266", "263"], ["17", "263"], ["248", "263"], ["274", "266"], ["17", "266"], ["271", "269"], ["271", "269"], ["271", "269"], ["263", "282"], ["17", "282"], ["28", "285"], ["17", "285"], ["60", "63"], ["66", "63"], ["17", "63"], ["45", "63"], ["63", "66"], ["17", "66"], ["111", "114"], ["117", "114"], ["17", "114"], ["104", "114"], ["114", "117"], ["17", "117"], ["197", "200"], ["203", "200"], ["17", "200"], ["190", "200"], ["200", "203"], ["17", "203"], ["17", "251"], ["190", "251"], ["28", "293"], ["17", "293"], ["255", "293"], ["269", "293"], ["40", "74"], ["17", "74"], ["17", "122"], ["136", "130"], ["142", "130"], ["142", "130"], ["142", "130"], ["17", "208"], ["224", "218"], ["224", "218"], ["224", "218"], ["224", "271"], ["142", "271"], ["17", "271"], ["255", "271"], ["269", "271"], ["274", "271"], ["274", "271"], ["274", "271"], ["122", "125"], ["128", "125"], ["17", "125"], ["45", "125"], ["63", "125"], ["125", "128"], ["17", "128"], ["208", "211"], ["216", "211"], ["17", "211"], ["213", "211"], ["213", "211"], ["17", "216"], ["211", "216"], ["17", "274"], ["278", "274"], ["278", "274"], ["142", "136"], ["142", "136"], ["142", "136"], ["45", "213"], ["125", "213"], ["63", "213"], ["17", "213"], ["231", "224"], ["17", "224"], ["218", "224"], ["231", "224"], ["17", "278"], ["263", "278"], ["149", "142"], ["17", "142"], ["130", "142"], ["149", "142"], ["224", "231"], ["142", "231"], ["17", "231"], ["233", "231"], ["233", "231"], ["142", "149"], ["17", "149"], ["151", "149"], ["151", "149"], ["151", "233"], ["211", "243"], ["17", "243"], ["53", "60"], ["53", "56"], ["53", "53"], ["53", "63"], ["86", "96"], ["86", "98"], ["86", "91"], ["86", "93"], ["86", "86"], ["86", "89"], ["104", "107"], ["104", "114"], ["104", "104"], ["104", "111"], ["172", "179"], ["172", "184"], ["172", "182"], ["172", "177"], ["172", "175"], ["172", "172"], ["190", "197"], ["190", "190"], ["190", "193"], ["190", "200"], ["263", "274"], ["263", "263"], ["263", "278"], ["263", "271"], ["263", "269"], ["263", "266"], ["282", "285"], ["282", "293"], ["282", "288"], ["282", "287"], ["63", "68"], ["63", "69"], ["63", "74"], ["63", "70"], ["63", "66"], ["63", "63"], ["114", "114"], ["114", "122"], ["114", "117"], ["114", "125"], ["200", "213"], ["200", "208"], ["200", "200"], ["200", "211"], ["200", "203"], ["125", "136"], ["125", "145"], ["125", "128"], ["125", "131"], ["125", "149"], ["125", "132"], ["125", "151"], ["125", "153"], ["125", "144"], ["125", "138"], ["125", "137"], ["125", "152"], ["125", "130"], ["125", "158"], ["125", "142"], ["125", "157"], ["125", "125"], ["211", "240"], ["211", "226"], ["211", "213"], ["211", "243"], ["211", "231"], ["211", "224"], ["211", "233"], ["211", "239"], ["211", "235"], ["211", "220"], ["211", "234"], ["211", "211"], ["211", "216"], ["211", "227"], ["211", "218"], ["211", "219"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "29": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(LOCAL,int m: int)<SUB>6</SUB>>", "39": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int[][] a = new int[n][m])<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[n][m])>", "47": "<(IDENTIFIER,m,new int[n][m])<SUB>7</SUB>>", "49": "<(LOCAL,int i: int)<SUB>8</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "59": "<(LOCAL,int j: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,j,int j = 0)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>9</SUB>>", "65": "<(IDENTIFIER,m,j &lt; m)<SUB>9</SUB>>", "67": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>10</SUB>>", "71": "<(IDENTIFIER,a,a[i][j] = nextInt())<SUB>10</SUB>>", "73": "<(IDENTIFIER,j,a[i][j] = nextInt())<SUB>10</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "77": "<(IDENTIFIER,val,val = new int[n][n])<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,new int[n][n])<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "91": "<(fill,fill(val[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,fill(val[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "97": "<(IDENTIFIER,Integer,fill(val[i], Integer.MAX_VALUE))<SUB>13</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int j = i; Some(j &lt; n); j++),for (int j = i; Some(j &lt; n); j++))<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.assignment,int j = i)<SUB>15</SUB>>", "113": "<(IDENTIFIER,i,int j = i)<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,j &lt; n)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "121": "<(LOCAL,int k: int)<SUB>16</SUB>>", "123": "<(IDENTIFIER,k,int k = 0)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>16</SUB>>", "127": "<(IDENTIFIER,m,k &lt; m)<SUB>16</SUB>>", "129": "<(IDENTIFIER,k,k++)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,val[i][j])<SUB>17</SUB>>", "133": "<(IDENTIFIER,val,val[i][j] = val[j][i] = min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "135": "<(IDENTIFIER,j,val[i][j] = val[j][i] = min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,val[j][i])<SUB>17</SUB>>", "139": "<(IDENTIFIER,val,val[j][i] = min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "141": "<(IDENTIFIER,i,val[j][i] = min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "143": "<(IDENTIFIER,Math,min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>17</SUB>>", "147": "<(IDENTIFIER,i,min(val[i][j], Math.abs(a[i][k] - a[j][k])))<SUB>17</SUB>>", "149": "<(abs,Math.abs(a[i][k] - a[j][k]))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.subtraction,a[i][k] - a[j][k])<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>17</SUB>>", "155": "<(IDENTIFIER,i,a[i][k] - a[j][k])<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,a[j][k])<SUB>17</SUB>>", "159": "<(IDENTIFIER,a,a[i][k] - a[j][k])<SUB>17</SUB>>", "161": "<(IDENTIFIER,k,a[i][k] - a[j][k])<SUB>17</SUB>>", "163": "<(IDENTIFIER,val2,val2 = new int[n][n])<SUB>20</SUB>>", "165": "<(IDENTIFIER,n,new int[n][n])<SUB>20</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "171": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "173": "<(IDENTIFIER,i,i &lt; n)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "177": "<(fill,fill(val2[i], Integer.MAX_VALUE))<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,val2[i])<SUB>22</SUB>>", "181": "<(IDENTIFIER,i,fill(val2[i], Integer.MAX_VALUE))<SUB>22</SUB>>", "183": "<(IDENTIFIER,Integer,fill(val2[i], Integer.MAX_VALUE))<SUB>22</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>23</SUB>>", "187": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "189": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "191": "<(IDENTIFIER,i,i &lt; n)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.postIncrement,i++)<SUB>23</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>24</SUB>>", "197": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>24</SUB>>", "199": "<(LITERAL,0,int j = 0)<SUB>24</SUB>>", "201": "<(IDENTIFIER,j,j &lt; n)<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,j++)<SUB>24</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "207": "<(LOCAL,int k: int)<SUB>25</SUB>>", "209": "<(IDENTIFIER,k,int k = 0)<SUB>25</SUB>>", "211": "<(&lt;operator&gt;.lessThan,k &lt; m - 1)<SUB>25</SUB>>", "213": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>25</SUB>>", "215": "<(LITERAL,1,m - 1)<SUB>25</SUB>>", "217": "<(IDENTIFIER,k,k++)<SUB>25</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,val2[i][j])<SUB>26</SUB>>", "221": "<(IDENTIFIER,val2,val2[i][j] = min(val2[i][j], Math.abs(a[i][k] - a[j][k + 1])))<SUB>26</SUB>>", "223": "<(IDENTIFIER,j,val2[i][j] = min(val2[i][j], Math.abs(a[i][k] - a[j][k + 1])))<SUB>26</SUB>>", "225": "<(IDENTIFIER,Math,min(val2[i][j], Math.abs(a[i][k] - a[j][k + 1])))<SUB>26</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,val2[i])<SUB>26</SUB>>", "229": "<(IDENTIFIER,i,min(val2[i][j], Math.abs(a[i][k] - a[j][k + 1])))<SUB>26</SUB>>", "231": "<(abs,Math.abs(a[i][k] - a[j][k + 1]))<SUB>26</SUB>>", "233": "<(&lt;operator&gt;.subtraction,a[i][k] - a[j][k + 1])<SUB>26</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>26</SUB>>", "237": "<(IDENTIFIER,i,a[i][k] - a[j][k + 1])<SUB>26</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,a[j][k + 1])<SUB>26</SUB>>", "241": "<(IDENTIFIER,a,a[i][k] - a[j][k + 1])<SUB>26</SUB>>", "243": "<(&lt;operator&gt;.addition,k + 1)<SUB>26</SUB>>", "245": "<(LITERAL,1,k + 1)<SUB>26</SUB>>", "247": "<(IDENTIFIER,mem,mem = new Long[n][n][1 &lt;&lt; n])<SUB>28</SUB>>", "249": "<(IDENTIFIER,n,new Long[n][n][1 &lt;&lt; n])<SUB>28</SUB>>", "251": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>28</SUB>>", "253": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>28</SUB>>", "255": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>29</SUB>>", "257": "<(LITERAL,0,long ans = 0)<SUB>29</SUB>>", "259": "<(LOCAL,int i: int)<SUB>30</SUB>>", "261": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "263": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>30</SUB>>", "265": "<(IDENTIFIER,n,i &lt; n)<SUB>30</SUB>>", "267": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "269": "<(&lt;operator&gt;.assignment,ans = max(ans, dp(i, i, 1 &lt;&lt; i)))<SUB>31</SUB>>", "271": "<(max,max(ans, dp(i, i, 1 &lt;&lt; i)))<SUB>31</SUB>>", "273": "<(IDENTIFIER,ans,max(ans, dp(i, i, 1 &lt;&lt; i)))<SUB>31</SUB>>", "275": "<(IDENTIFIER,this,dp(i, i, 1 &lt;&lt; i))<SUB>31</SUB>>", "277": "<(IDENTIFIER,i,dp(i, i, 1 &lt;&lt; i))<SUB>31</SUB>>", "279": "<(LITERAL,1,1 &lt;&lt; i)<SUB>31</SUB>>", "281": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>33</SUB>>", "283": "<(IDENTIFIER,n,n == 1)<SUB>33</SUB>>", "285": "<(println,println(val2[0][0]))<SUB>34</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,val2[0][0])<SUB>34</SUB>>", "289": "<(IDENTIFIER,val2,println(val2[0][0]))<SUB>34</SUB>>", "291": "<(LITERAL,0,println(val2[0][0]))<SUB>34</SUB>>", "293": "<(println,println(ans))<SUB>36</SUB>>", "295": "<(IDENTIFIER,ans,println(ans))<SUB>36</SUB>>", "297": "<(IDENTIFIER,pw,flush())<SUB>39</SUB>>", "299": "<(IDENTIFIER,pw,close())<SUB>40</SUB>>", "301": "<(MODIFIER,STATIC)>"}}