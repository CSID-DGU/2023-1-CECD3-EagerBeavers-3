{"edges": [["19", "21"], ["19", "103"], ["19", "104"], ["19", "105"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "67"], ["21", "78"], ["21", "89"], ["21", "90"], ["21", "98"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "59"], ["40", "41"], ["40", "58"], ["41", "42"], ["41", "55"], ["42", "43"], ["42", "54"], ["43", "44"], ["43", "53"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "66"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["92", "95"], ["92", "96"], ["92", "97"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "46"], ["90", "101"], ["98", "105"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "63"], ["40", "68"], ["68", "75"], ["68", "79"], ["79", "86"], ["79", "92"], ["92", "90"], ["99", "98"], ["28", "26"], ["41", "40"], ["60", "66"], ["66", "105"], ["72", "77"], ["77", "105"], ["83", "88"], ["88", "105"], ["101", "99"], ["42", "55"], ["55", "41"], ["61", "64"], ["64", "60"], ["73", "72"], ["84", "83"], ["43", "42"], ["63", "61"], ["75", "73"], ["86", "84"], ["44", "43"], ["45", "49"], ["48", "44"], ["46", "45"], ["49", "50"], ["50", "48"], ["19", "24"], ["77", "105"], ["88", "105"], ["66", "105"], ["20", "105"], ["22", "105"], ["25", "105"], ["25", "105"], ["30", "105"], ["30", "105"], ["37", "105"], ["35", "105"], ["35", "105"], ["44", "105"], ["48", "105"], ["44", "105"], ["43", "105"], ["42", "105"], ["41", "105"], ["55", "105"], ["41", "105"], ["40", "105"], ["40", "105"], ["40", "105"], ["60", "105"], ["60", "105"], ["60", "105"], ["92", "105"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["92", "90"], ["92", "90"], ["92", "90"], ["92", "90"], ["22", "25"], ["19", "25"], ["90", "98"], ["19", "98"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["41", "40"], ["41", "40"], ["30", "40"], ["19", "40"], ["19", "66"], ["40", "68"], ["19", "68"], ["19", "77"], ["68", "79"], ["19", "79"], ["55", "79"], ["19", "88"], ["19", "92"], ["79", "92"], ["79", "92"], ["42", "41"], ["42", "41"], ["55", "41"], ["55", "41"], ["64", "60"], ["19", "72"], ["19", "83"], ["43", "42"], ["43", "42"], ["19", "42"], ["19", "55"], ["35", "55"], ["19", "64"], ["44", "43"], ["44", "43"], ["19", "43"], ["19", "44"], ["35", "44"], ["19", "45"], ["35", "45"], ["19", "48"], ["35", "48"], ["19", "50"], ["35", "50"], ["40", "68"], ["40", "60"], ["40", "61"], ["40", "64"], ["40", "66"], ["40", "63"], ["68", "73"], ["68", "77"], ["68", "75"], ["68", "72"], ["68", "79"], ["79", "83"], ["79", "98"], ["79", "99"], ["79", "84"], ["79", "88"], ["79", "92"], ["79", "101"], ["79", "90"], ["79", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(CONTROL_STRUCTURE,if (((long) k * (long) (k + 1)) / 2 - 1 - (k - 2) &lt; n),if (((long) k * (long) (k + 1)) / 2 - 1 - (k - 2) &lt; n))<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.subtraction,((long) k * (long) (k + 1)) / 2 - 1 - (k - 2))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.division,((long) k * (long) (k + 1)) / 2)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.cast,(long) k)<SUB>6</SUB>>", "47": "<(IDENTIFIER,k,(long) k)<SUB>6</SUB>>", "49": "<(TYPE_REF,long,long)<SUB>6</SUB>>", "51": "<(IDENTIFIER,k,k + 1)<SUB>6</SUB>>", "53": "<(LITERAL,2,((long) k * (long) (k + 1)) / 2)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.subtraction,k - 2)<SUB>6</SUB>>", "57": "<(LITERAL,2,k - 2)<SUB>6</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "63": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "65": "<(LITERAL,1,-1)<SUB>7</SUB>>", "67": "<(CONTROL_STRUCTURE,if (n == 1),if (n == 1))<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,n == 1)<SUB>11</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "75": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "77": "<(RETURN,return;,return;)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= k)<SUB>16</SUB>>", "81": "<(IDENTIFIER,k,n &lt;= k)<SUB>16</SUB>>", "83": "<(println,System.out.println(1))<SUB>17</SUB>>", "85": "<(IDENTIFIER,System,System.out.println(1))<SUB>17</SUB>>", "87": "<(LITERAL,1,System.out.println(1))<SUB>17</SUB>>", "89": "<(LOCAL,int ans: int)<SUB>22</SUB>>", "91": "<(IDENTIFIER,ans,int ans = rek(2, k, n, k))<SUB>22</SUB>>", "93": "<(IDENTIFIER,this,rek(2, k, n, k))<SUB>22</SUB>>", "95": "<(IDENTIFIER,k,rek(2, k, n, k))<SUB>22</SUB>>", "97": "<(IDENTIFIER,k,rek(2, k, n, k))<SUB>22</SUB>>", "99": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "101": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "103": "<(MODIFIER,PUBLIC)>", "105": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}