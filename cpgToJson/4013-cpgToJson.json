{"edges": [["19", "21"], ["19", "137"], ["19", "138"], ["19", "139"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "41"], ["21", "45"], ["21", "68"], ["21", "82"], ["21", "128"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "62"], ["56", "57"], ["56", "60"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["70", "79"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "106"], ["92", "108"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "135"], ["132", "136"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "39"], ["37", "43"], ["41", "47"], ["68", "84"], ["128", "139"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["39", "37"], ["43", "41"], ["47", "50"], ["50", "57"], ["50", "75"], ["53", "50"], ["70", "68"], ["84", "87"], ["87", "94"], ["87", "131"], ["90", "87"], ["129", "132"], ["132", "128"], ["28", "26"], ["56", "63"], ["62", "53"], ["72", "79"], ["79", "70"], ["94", "102"], ["97", "110"], ["97", "90"], ["106", "102"], ["131", "129"], ["57", "60"], ["60", "56"], ["63", "66"], ["66", "62"], ["74", "72"], ["99", "97"], ["110", "113"], ["113", "121"], ["113", "106"], ["116", "113"], ["118", "116"], ["75", "74"], ["101", "99"], ["119", "126"], ["126", "118"], ["102", "101"], ["120", "119"], ["121", "120"], ["19", "24"], ["20", "139"], ["22", "139"], ["25", "139"], ["25", "139"], ["29", "139"], ["35", "139"], ["33", "139"], ["33", "139"], ["37", "139"], ["37", "139"], ["41", "139"], ["41", "139"], ["41", "139"], ["50", "139"], ["68", "139"], ["75", "139"], ["74", "139"], ["72", "139"], ["70", "139"], ["70", "139"], ["68", "139"], ["68", "139"], ["84", "139"], ["87", "139"], ["87", "139"], ["128", "139"], ["132", "139"], ["128", "139"], ["128", "139"], ["94", "139"], ["97", "139"], ["102", "139"], ["101", "139"], ["99", "139"], ["97", "139"], ["97", "139"], ["90", "139"], ["110", "139"], ["113", "139"], ["113", "139"], ["106", "139"], ["118", "139"], ["118", "139"], ["118", "139"], ["116", "139"], ["56", "139"], ["56", "139"], ["62", "139"], ["66", "139"], ["62", "139"], ["62", "139"], ["53", "139"], ["132", "139"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["39", "37"], ["43", "41"], ["70", "68"], ["70", "68"], ["70", "68"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "84"], ["132", "128"], ["132", "128"], ["132", "128"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["29", "39"], ["19", "39"], ["39", "43"], ["19", "43"], ["47", "50"], ["53", "50"], ["19", "50"], ["43", "50"], ["50", "53"], ["19", "53"], ["60", "56"], ["66", "62"], ["19", "70"], ["72", "70"], ["72", "70"], ["33", "70"], ["84", "87"], ["90", "87"], ["19", "87"], ["87", "90"], ["19", "90"], ["19", "94"], ["19", "132"], ["113", "132"], ["33", "132"], ["19", "72"], ["75", "72"], ["75", "72"], ["33", "79"], ["19", "79"], ["94", "97"], ["106", "97"], ["19", "97"], ["99", "97"], ["99", "97"], ["97", "106"], ["19", "106"], ["19", "110"], ["126", "118"], ["35", "60"], ["66", "60"], ["19", "60"], ["60", "66"], ["19", "66"], ["75", "74"], ["75", "74"], ["19", "74"], ["19", "99"], ["102", "99"], ["102", "99"], ["110", "113"], ["116", "113"], ["19", "113"], ["33", "113"], ["113", "116"], ["19", "116"], ["50", "75"], ["19", "75"], ["102", "101"], ["102", "101"], ["19", "101"], ["19", "126"], ["75", "102"], ["19", "102"], ["50", "60"], ["50", "57"], ["50", "66"], ["50", "56"], ["50", "50"], ["50", "53"], ["50", "63"], ["50", "62"], ["87", "94"], ["87", "99"], ["87", "102"], ["87", "87"], ["87", "97"], ["87", "101"], ["87", "90"], ["97", "113"], ["97", "99"], ["97", "102"], ["97", "106"], ["97", "97"], ["97", "101"], ["97", "110"], ["113", "120"], ["113", "113"], ["113", "116"], ["113", "119"], ["113", "121"], ["113", "126"], ["113", "118"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,a = new int[n])<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.alloc,new int[n])>", "41": "<(&lt;operator&gt;.assignment,g = new int[n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,g[i] = nextInt())<SUB>9</SUB>>", "67": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,dp,dp = new long[4][1 &lt;&lt; (n - 1) + 1][t + 1])<SUB>11</SUB>>", "71": "<(LITERAL,4,new long[4][1 &lt;&lt; (n - 1) + 1][t + 1])<SUB>11</SUB>>", "73": "<(LITERAL,1,1 &lt;&lt; (n - 1) + 1)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "77": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.addition,t + 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,t + 1)<SUB>11</SUB>>", "83": "<(LOCAL,int i: int)<SUB>12</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>12</SUB>>", "89": "<(LITERAL,4,i &lt; 4)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "93": "<(LOCAL,int j: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; (n - 1) + 1)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n - 1) + 1)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.addition,(n - 1) + 1)<SUB>13</SUB>>", "103": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "105": "<(LITERAL,1,(n - 1) + 1)<SUB>13</SUB>>", "107": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "109": "<(LOCAL,int k: int)<SUB>14</SUB>>", "111": "<(IDENTIFIER,k,int k = 0)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= t)<SUB>14</SUB>>", "115": "<(IDENTIFIER,t,k &lt;= t)<SUB>14</SUB>>", "117": "<(IDENTIFIER,k,k++)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,dp[i][j][k])<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>15</SUB>>", "123": "<(IDENTIFIER,i,dp[i][j][k] = -1)<SUB>15</SUB>>", "125": "<(IDENTIFIER,k,dp[i][j][k] = -1)<SUB>15</SUB>>", "127": "<(LITERAL,1,-1)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "133": "<(IDENTIFIER,this,dp(0, 0, t))<SUB>16</SUB>>", "135": "<(LITERAL,0,dp(0, 0, t))<SUB>16</SUB>>", "137": "<(MODIFIER,PUBLIC)>", "139": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}