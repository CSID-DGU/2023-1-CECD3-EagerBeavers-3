{"edges": [["19", "20"], ["19", "21"], ["19", "142"], ["19", "143"], ["19", "144"], ["21", "22"], ["21", "23"], ["21", "4"], ["21", "26"], ["21", "29"], ["21", "41"], ["23", "24"], ["23", "25"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["29", "40"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "138"], ["42", "43"], ["42", "49"], ["42", "64"], ["42", "65"], ["42", "70"], ["42", "71"], ["42", "76"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "61"], ["50", "51"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["57", "60"], ["61", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "92"], ["86", "93"], ["86", "98"], ["88", "89"], ["88", "90"], ["90", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "101"], ["98", "114"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["115", "116"], ["115", "117"], ["115", "122"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "125"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["139", "140"], ["140", "141"], ["23", "28"], ["26", "33"], ["29", "47"], ["28", "26"], ["31", "38"], ["34", "29"], ["43", "52"], ["65", "73"], ["71", "78"], ["33", "31"], ["36", "34"], ["45", "43"], ["50", "62"], ["50", "67"], ["67", "65"], ["73", "71"], ["78", "81"], ["81", "144"], ["81", "140"], ["81", "90"], ["84", "81"], ["140", "144"], ["38", "36"], ["47", "45"], ["51", "50"], ["62", "67"], ["88", "95"], ["93", "99"], ["52", "51"], ["52", "57"], ["55", "51"], ["90", "88"], ["95", "93"], ["99", "105"], ["99", "119"], ["57", "55"], ["102", "84"], ["103", "108"], ["106", "102"], ["117", "123"], ["105", "103"], ["108", "111"], ["111", "106"], ["119", "117"], ["123", "129"], ["123", "84"], ["126", "84"], ["127", "132"], ["130", "126"], ["129", "127"], ["132", "135"], ["135", "130"], ["19", "23"], ["20", "144"], ["23", "144"], ["26", "144"], ["31", "144"], ["34", "144"], ["34", "144"], ["34", "144"], ["29", "144"], ["47", "144"], ["45", "144"], ["43", "144"], ["43", "144"], ["51", "144"], ["55", "144"], ["51", "144"], ["50", "144"], ["50", "144"], ["62", "144"], ["62", "144"], ["65", "144"], ["65", "144"], ["65", "144"], ["71", "144"], ["73", "144"], ["71", "144"], ["71", "144"], ["78", "144"], ["81", "144"], ["81", "144"], ["81", "144"], ["90", "144"], ["88", "144"], ["88", "144"], ["95", "144"], ["95", "144"], ["93", "144"], ["93", "144"], ["99", "144"], ["99", "144"], ["119", "144"], ["119", "144"], ["117", "144"], ["117", "144"], ["123", "144"], ["123", "144"], ["126", "144"], ["130", "144"], ["130", "144"], ["135", "144"], ["130", "144"], ["126", "144"], ["126", "144"], ["102", "144"], ["106", "144"], ["106", "144"], ["111", "144"], ["106", "144"], ["102", "144"], ["102", "144"], ["84", "144"], ["45", "144"], ["57", "144"], ["19", "20"], ["19", "23"], ["19", "26"], ["26", "29"], ["19", "29"], ["31", "29"], ["34", "29"], ["19", "31"], ["19", "39"], ["45", "43"], ["45", "43"], ["67", "65"], ["67", "65"], ["73", "71"], ["73", "71"], ["19", "139"], ["31", "34"], ["19", "34"], ["19", "78"], ["19", "45"], ["47", "45"], ["51", "50"], ["51", "50"], ["19", "67"], ["67", "73"], ["19", "73"], ["78", "81"], ["84", "81"], ["19", "81"], ["52", "81"], ["55", "81"], ["81", "84"], ["19", "84"], ["90", "88"], ["95", "93"], ["95", "93"], ["62", "140"], ["130", "140"], ["106", "140"], ["19", "140"], ["29", "47"], ["19", "47"], ["52", "51"], ["52", "51"], ["55", "51"], ["55", "51"], ["19", "62"], ["19", "52"], ["43", "52"], ["52", "55"], ["19", "55"], ["57", "55"], ["57", "55"], ["57", "55"], ["47", "90"], ["19", "90"], ["65", "95"], ["19", "95"], ["88", "95"], ["93", "99"], ["19", "99"], ["19", "57"], ["126", "102"], ["106", "102"], ["106", "102"], ["106", "102"], ["119", "117"], ["119", "117"], ["62", "106"], ["130", "106"], ["19", "106"], ["108", "106"], ["108", "106"], ["111", "106"], ["111", "106"], ["99", "108"], ["19", "108"], ["108", "111"], ["19", "111"], ["71", "119"], ["19", "119"], ["95", "119"], ["117", "123"], ["19", "123"], ["102", "126"], ["130", "126"], ["130", "126"], ["130", "126"], ["62", "130"], ["106", "130"], ["19", "130"], ["132", "130"], ["132", "130"], ["135", "130"], ["135", "130"], ["123", "132"], ["19", "132"], ["132", "135"], ["19", "135"], ["50", "62"], ["81", "99"], ["81", "81"], ["81", "84"], ["81", "95"], ["81", "93"], ["81", "140"], ["81", "90"], ["81", "88"], ["52", "57"], ["52", "55"], ["99", "102"], ["99", "103"], ["99", "119"], ["99", "123"], ["99", "106"], ["99", "105"], ["99", "117"], ["99", "108"], ["99", "111"], ["123", "132"], ["123", "129"], ["123", "126"], ["123", "130"], ["123", "135"], ["123", "127"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int n = 1)<SUB>3</SUB>>", "25": "<(LITERAL,1,int n = 1)<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY input = new BufferedReader(new InputStreamReader(System.in), 50))<SUB>5</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in), 50))<SUB>5</SUB>>", "3": "<(IDENTIFIER,input,new BufferedReader(new InputStreamReader(System.in), 50))<SUB>5</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>5</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>5</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(CONTROL_STRUCTURE,try,try)<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,n = valueOf(input.readLine()))<SUB>9</SUB>>", "45": "<(valueOf,valueOf(input.readLine()))<SUB>9</SUB>>", "47": "<(readLine,readLine())<SUB>9</SUB>>", "49": "<(CONTROL_STRUCTURE,if (!((1 &lt;= n) &amp;&amp; (n &lt;= Math.pow(10, 5)))),if (!((1 &lt;= n) &amp;&amp; (n &lt;= Math.pow(10, 5)))))<SUB>11</SUB>>", "51": "<(&lt;operator&gt;.logicalAnd,(1 &lt;= n) &amp;&amp; (n &lt;= Math.pow(10, 5)))<SUB>11</SUB>>", "53": "<(LITERAL,1,1 &lt;= n)<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= Math.pow(10, 5))<SUB>11</SUB>>", "57": "<(pow,Math.pow(10, 5))<SUB>11</SUB>>", "59": "<(LITERAL,10,Math.pow(10, 5))<SUB>11</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "63": "<(IDENTIFIER,this,formatError())<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.assignment,ANY typeOne = compile(&quot;^([A-Z]+)([0-9]+)$&quot;))<SUB>15</SUB>>", "67": "<(compile,compile(&quot;^([A-Z]+)([0-9]+)$&quot;))<SUB>15</SUB>>", "69": "<(LITERAL,&quot;^([A-Z]+)([0-9]+)$&quot;,compile(&quot;^([A-Z]+)([0-9]+)$&quot;))<SUB>15</SUB>>", "71": "<(&lt;operator&gt;.assignment,ANY typeTwo = compile(&quot;^R([0-9]+)C([0-9]+)$&quot;))<SUB>16</SUB>>", "73": "<(compile,compile(&quot;^R([0-9]+)C([0-9]+)$&quot;))<SUB>16</SUB>>", "75": "<(LITERAL,&quot;^R([0-9]+)C([0-9]+)$&quot;,compile(&quot;^R([0-9]+)C([0-9]+)$&quot;))<SUB>16</SUB>>", "77": "<(LOCAL,int i: int)<SUB>17</SUB>>", "79": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "81": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "83": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "85": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "87": "<(LOCAL,String line: java.lang.String)<SUB>18</SUB>>", "89": "<(IDENTIFIER,line,String line = readLine())<SUB>18</SUB>>", "91": "<(IDENTIFIER,input,readLine())<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.assignment,ANY matchOne = matcher(line))<SUB>19</SUB>>", "95": "<(matcher,matcher(line))<SUB>19</SUB>>", "97": "<(IDENTIFIER,line,matcher(line))<SUB>19</SUB>>", "99": "<(find,find())<SUB>20</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "105": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "107": "<(IDENTIFIER,this,convertOneToTwo(matchOne.group(2), matchOne.group(1)))<SUB>21</SUB>>", "109": "<(IDENTIFIER,matchOne,group(2))<SUB>21</SUB>>", "111": "<(group,group(1))<SUB>21</SUB>>", "113": "<(LITERAL,1,group(1))<SUB>21</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.assignment,ANY matchTwo = matcher(line))<SUB>23</SUB>>", "119": "<(matcher,matcher(line))<SUB>23</SUB>>", "121": "<(IDENTIFIER,line,matcher(line))<SUB>23</SUB>>", "123": "<(find,find())<SUB>24</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "129": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "131": "<(IDENTIFIER,this,convertTwoToOne(matchTwo.group(1), matchTwo.group(2)))<SUB>25</SUB>>", "133": "<(IDENTIFIER,matchTwo,group(1))<SUB>25</SUB>>", "135": "<(group,group(2))<SUB>25</SUB>>", "137": "<(LITERAL,2,group(2))<SUB>25</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "141": "<(IDENTIFIER,this,formatError())<SUB>31</SUB>>", "143": "<(MODIFIER,STATIC)>"}}