{"edges": [["17", "19"], ["17", "375"], ["17", "376"], ["17", "377"], ["19", "20"], ["19", "21"], ["19", "25"], ["19", "26"], ["19", "30"], ["19", "31"], ["19", "35"], ["19", "36"], ["19", "43"], ["19", "63"], ["19", "64"], ["19", "71"], ["19", "91"], ["19", "131"], ["19", "132"], ["19", "142"], ["19", "334"], ["19", "373"], ["21", "22"], ["21", "23"], ["23", "24"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "81"], ["71", "83"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "128"], ["97", "130"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "126"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "125"], ["123", "124"], ["126", "127"], ["128", "129"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["134", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "152"], ["142", "154"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "163"], ["155", "165"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["176", "178"], ["176", "182"], ["176", "208"], ["176", "247"], ["176", "286"], ["176", "325"], ["178", "179"], ["178", "180"], ["180", "181"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["186", "187"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "201"], ["190", "191"], ["190", "198"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["212", "235"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "228"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "224"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "234"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "242"], ["237", "243"], ["238", "239"], ["238", "240"], ["240", "241"], ["243", "244"], ["243", "245"], ["243", "246"], ["247", "248"], ["247", "253"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["253", "274"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "269"], ["258", "259"], ["258", "266"], ["259", "260"], ["259", "265"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "281"], ["276", "282"], ["277", "278"], ["277", "279"], ["279", "280"], ["282", "283"], ["282", "284"], ["282", "285"], ["286", "287"], ["286", "292"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["292", "313"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "308"], ["297", "298"], ["297", "305"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "312"], ["309", "310"], ["309", "311"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "320"], ["315", "321"], ["316", "317"], ["316", "318"], ["318", "319"], ["321", "322"], ["321", "323"], ["321", "324"], ["325", "326"], ["325", "333"], ["326", "327"], ["326", "332"], ["327", "328"], ["327", "331"], ["328", "329"], ["328", "330"], ["334", "335"], ["334", "336"], ["334", "339"], ["334", "342"], ["334", "344"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "341"], ["342", "343"], ["344", "345"], ["344", "371"], ["345", "346"], ["345", "347"], ["345", "350"], ["345", "353"], ["345", "355"], ["347", "348"], ["347", "349"], ["350", "351"], ["350", "352"], ["353", "354"], ["355", "356"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "370"], ["359", "360"], ["359", "369"], ["360", "361"], ["360", "366"], ["361", "362"], ["361", "365"], ["362", "363"], ["362", "364"], ["366", "367"], ["366", "368"], ["371", "372"], ["373", "374"], ["21", "28"], ["26", "33"], ["31", "40"], ["36", "45"], ["64", "73"], ["132", "144"], ["373", "377"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["45", "48"], ["48", "55"], ["48", "67"], ["51", "48"], ["66", "64"], ["73", "78"], ["76", "85"], ["76", "93"], ["81", "78"], ["92", "100"], ["92", "138"], ["134", "132"], ["144", "149"], ["147", "157"], ["147", "336"], ["152", "149"], ["336", "339"], ["339", "347"], ["339", "373"], ["342", "339"], ["40", "38"], ["54", "51"], ["67", "66"], ["78", "76"], ["84", "81"], ["93", "92"], ["128", "130"], ["130", "377"], ["137", "134"], ["149", "147"], ["371", "342"], ["55", "60"], ["58", "54"], ["85", "88"], ["88", "84"], ["100", "103"], ["103", "111"], ["103", "128"], ["106", "103"], ["138", "137"], ["157", "160"], ["160", "168"], ["160", "152"], ["163", "160"], ["347", "350"], ["350", "362"], ["350", "371"], ["353", "350"], ["60", "58"], ["126", "106"], ["356", "353"], ["111", "114"], ["114", "123"], ["114", "126"], ["117", "114"], ["168", "171"], ["171", "180"], ["171", "163"], ["174", "171"], ["358", "356"], ["120", "117"], ["178", "183"], ["325", "174"], ["359", "358"], ["122", "120"], ["180", "178"], ["183", "192"], ["183", "209"], ["209", "221"], ["209", "250"], ["248", "262"], ["248", "289"], ["287", "299"], ["287", "328"], ["326", "325"], ["360", "359"], ["123", "122"], ["187", "209"], ["214", "240"], ["235", "250"], ["250", "248"], ["255", "279"], ["274", "289"], ["289", "287"], ["294", "318"], ["313", "328"], ["327", "326"], ["361", "366"], ["366", "360"], ["189", "187"], ["216", "214"], ["237", "235"], ["257", "255"], ["276", "274"], ["296", "294"], ["315", "313"], ["328", "327"], ["362", "361"], ["190", "202"], ["201", "189"], ["217", "231"], ["228", "216"], ["238", "237"], ["238", "243"], ["243", "237"], ["258", "270"], ["269", "257"], ["277", "276"], ["277", "282"], ["282", "276"], ["297", "309"], ["308", "296"], ["316", "315"], ["316", "321"], ["321", "315"], ["191", "198"], ["198", "190"], ["202", "205"], ["205", "201"], ["218", "225"], ["225", "217"], ["229", "228"], ["240", "238"], ["259", "266"], ["266", "258"], ["270", "269"], ["279", "277"], ["298", "305"], ["305", "297"], ["309", "308"], ["318", "316"], ["192", "195"], ["195", "191"], ["219", "218"], ["231", "229"], ["260", "259"], ["299", "302"], ["302", "298"], ["221", "219"], ["262", "260"], ["17", "23"], ["130", "377"], ["18", "377"], ["21", "377"], ["26", "377"], ["33", "377"], ["31", "377"], ["31", "377"], ["36", "377"], ["38", "377"], ["36", "377"], ["36", "377"], ["64", "377"], ["66", "377"], ["64", "377"], ["64", "377"], ["76", "377"], ["76", "377"], ["93", "377"], ["92", "377"], ["92", "377"], ["100", "377"], ["103", "377"], ["103", "377"], ["103", "377"], ["128", "377"], ["128", "377"], ["111", "377"], ["114", "377"], ["114", "377"], ["114", "377"], ["126", "377"], ["106", "377"], ["122", "377"], ["120", "377"], ["120", "377"], ["117", "377"], ["84", "377"], ["88", "377"], ["88", "377"], ["84", "377"], ["84", "377"], ["81", "377"], ["54", "377"], ["58", "377"], ["58", "377"], ["54", "377"], ["54", "377"], ["51", "377"], ["17", "18"], ["23", "21"], ["28", "26"], ["33", "31"], ["38", "36"], ["38", "36"], ["66", "64"], ["66", "64"], ["134", "132"], ["134", "132"], ["134", "132"], ["17", "45"], ["17", "73"], ["17", "144"], ["17", "336"], ["371", "373"], ["17", "373"], ["17", "23"], ["23", "28"], ["17", "28"], ["28", "33"], ["17", "33"], ["21", "38"], ["17", "38"], ["40", "38"], ["40", "38"], ["45", "48"], ["51", "48"], ["17", "48"], ["38", "48"], ["48", "51"], ["17", "51"], ["58", "54"], ["58", "54"], ["67", "66"], ["67", "66"], ["40", "66"], ["60", "66"], ["17", "66"], ["73", "76"], ["81", "76"], ["17", "76"], ["78", "76"], ["78", "76"], ["76", "81"], ["17", "81"], ["88", "84"], ["88", "84"], ["93", "92"], ["93", "92"], ["17", "92"], ["17", "130"], ["78", "134"], ["17", "134"], ["66", "134"], ["88", "134"], ["138", "134"], ["138", "134"], ["144", "147"], ["152", "147"], ["17", "147"], ["149", "147"], ["149", "147"], ["147", "152"], ["198", "152"], ["225", "152"], ["266", "152"], ["305", "152"], ["17", "152"], ["336", "339"], ["342", "339"], ["17", "339"], ["134", "339"], ["160", "339"], ["339", "342"], ["17", "342"], ["26", "40"], ["17", "40"], ["48", "67"], ["17", "67"], ["67", "78"], ["17", "78"], ["31", "93"], ["17", "93"], ["17", "100"], ["126", "128"], ["17", "128"], ["138", "137"], ["138", "137"], ["17", "137"], ["138", "149"], ["17", "149"], ["17", "157"], ["17", "347"], ["356", "371"], ["17", "371"], ["33", "58"], ["17", "58"], ["60", "58"], ["60", "58"], ["33", "88"], ["58", "88"], ["17", "88"], ["66", "88"], ["100", "103"], ["106", "103"], ["17", "103"], ["78", "103"], ["103", "106"], ["17", "106"], ["93", "138"], ["17", "138"], ["157", "160"], ["163", "160"], ["17", "160"], ["134", "160"], ["250", "160"], ["160", "163"], ["248", "163"], ["17", "163"], ["347", "350"], ["353", "350"], ["17", "350"], ["134", "350"], ["171", "350"], ["350", "353"], ["17", "353"], ["40", "60"], ["17", "60"], ["17", "111"], ["120", "126"], ["17", "126"], ["17", "168"], ["371", "356"], ["17", "356"], ["359", "356"], ["359", "356"], ["111", "114"], ["117", "114"], ["17", "114"], ["66", "114"], ["88", "114"], ["114", "117"], ["17", "117"], ["168", "171"], ["174", "171"], ["17", "171"], ["134", "171"], ["289", "171"], ["287", "174"], ["17", "174"], ["180", "178"], ["178", "325"], ["187", "325"], ["235", "325"], ["274", "325"], ["313", "325"], ["17", "325"], ["359", "358"], ["359", "358"], ["17", "358"], ["126", "120"], ["17", "120"], ["123", "120"], ["17", "359"], ["123", "122"], ["17", "122"], ["17", "180"], ["171", "183"], ["17", "183"], ["160", "209"], ["248", "209"], ["17", "209"], ["214", "235"], ["243", "235"], ["17", "235"], ["243", "235"], ["243", "235"], ["282", "235"], ["282", "235"], ["282", "235"], ["321", "235"], ["321", "235"], ["321", "235"], ["209", "248"], ["231", "248"], ["17", "248"], ["250", "248"], ["250", "248"], ["255", "274"], ["282", "274"], ["17", "274"], ["282", "274"], ["282", "274"], ["321", "274"], ["321", "274"], ["321", "274"], ["183", "287"], ["205", "287"], ["17", "287"], ["289", "287"], ["289", "287"], ["294", "313"], ["321", "313"], ["17", "313"], ["321", "313"], ["321", "313"], ["17", "123"], ["160", "250"], ["17", "250"], ["171", "289"], ["17", "289"], ["149", "366"], ["17", "366"], ["214", "237"], ["243", "237"], ["17", "237"], ["243", "237"], ["243", "237"], ["282", "237"], ["282", "237"], ["282", "237"], ["321", "237"], ["321", "237"], ["321", "237"], ["255", "276"], ["282", "276"], ["17", "276"], ["282", "276"], ["282", "276"], ["321", "276"], ["321", "276"], ["321", "276"], ["294", "315"], ["321", "315"], ["17", "315"], ["321", "315"], ["321", "315"], ["178", "238"], ["187", "238"], ["17", "238"], ["240", "238"], ["282", "243"], ["321", "243"], ["17", "243"], ["238", "243"], ["214", "243"], ["178", "277"], ["187", "277"], ["235", "277"], ["17", "277"], ["279", "277"], ["243", "282"], ["321", "282"], ["17", "282"], ["277", "282"], ["255", "282"], ["178", "316"], ["187", "316"], ["235", "316"], ["274", "316"], ["17", "316"], ["318", "316"], ["243", "321"], ["282", "321"], ["17", "321"], ["316", "321"], ["294", "321"], ["147", "198"], ["225", "198"], ["266", "198"], ["305", "198"], ["17", "198"], ["195", "205"], ["17", "205"], ["147", "225"], ["198", "225"], ["266", "225"], ["305", "225"], ["17", "225"], ["17", "240"], ["147", "266"], ["198", "266"], ["225", "266"], ["305", "266"], ["17", "266"], ["17", "279"], ["147", "305"], ["198", "305"], ["225", "305"], ["266", "305"], ["17", "305"], ["17", "318"], ["183", "195"], ["17", "195"], ["221", "231"], ["17", "231"], ["287", "302"], ["17", "302"], ["209", "221"], ["17", "221"], ["248", "262"], ["17", "262"], ["48", "60"], ["48", "54"], ["48", "48"], ["48", "55"], ["48", "51"], ["48", "58"], ["76", "84"], ["76", "76"], ["76", "88"], ["76", "81"], ["76", "85"], ["76", "78"], ["92", "128"], ["92", "134"], ["92", "138"], ["92", "336"], ["92", "100"], ["92", "147"], ["92", "149"], ["92", "103"], ["92", "132"], ["92", "373"], ["92", "339"], ["92", "144"], ["92", "137"], ["92", "130"], ["147", "152"], ["147", "160"], ["147", "147"], ["147", "149"], ["147", "157"], ["339", "347"], ["339", "342"], ["339", "339"], ["339", "371"], ["339", "350"], ["103", "114"], ["103", "103"], ["103", "111"], ["103", "106"], ["103", "126"], ["160", "163"], ["160", "168"], ["160", "160"], ["160", "171"], ["350", "358"], ["350", "356"], ["350", "362"], ["350", "360"], ["350", "366"], ["350", "353"], ["350", "361"], ["350", "359"], ["350", "350"], ["114", "120"], ["114", "114"], ["114", "122"], ["114", "123"], ["114", "117"], ["171", "209"], ["171", "326"], ["171", "174"], ["171", "180"], ["171", "328"], ["171", "178"], ["171", "289"], ["171", "325"], ["171", "327"], ["171", "171"], ["171", "183"], ["171", "287"], ["171", "248"], ["171", "250"], ["183", "192"], ["183", "195"], ["183", "190"], ["183", "202"], ["183", "201"], ["183", "198"], ["183", "189"], ["183", "191"], ["183", "187"], ["183", "205"], ["209", "214"], ["209", "240"], ["209", "228"], ["209", "238"], ["209", "217"], ["209", "237"], ["209", "229"], ["209", "216"], ["209", "225"], ["209", "231"], ["209", "221"], ["209", "235"], ["209", "218"], ["209", "219"], ["248", "262"], ["248", "258"], ["248", "276"], ["248", "274"], ["248", "260"], ["248", "269"], ["248", "257"], ["248", "279"], ["248", "255"], ["248", "259"], ["248", "277"], ["248", "270"], ["248", "266"], ["287", "308"], ["287", "298"], ["287", "302"], ["287", "315"], ["287", "296"], ["287", "305"], ["287", "316"], ["287", "297"], ["287", "309"], ["287", "318"], ["287", "299"], ["287", "294"], ["287", "313"], ["238", "243"], ["277", "282"], ["316", "321"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,int n = i())<SUB>3</SUB>>", "23": "<(i,i())<SUB>3</SUB>>", "25": "<(LOCAL,int m: int)<SUB>4</SUB>>", "27": "<(IDENTIFIER,m,int m = i())<SUB>4</SUB>>", "29": "<(IDENTIFIER,this,i())<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,int k = i())<SUB>5</SUB>>", "33": "<(i,i())<SUB>5</SUB>>", "35": "<(LOCAL,int[][] a: int[][])<SUB>7</SUB>>", "37": "<(IDENTIFIER,a,int[][] a = new int[n][m - 1])<SUB>7</SUB>>", "39": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>7</SUB>>", "41": "<(IDENTIFIER,m,m - 1)<SUB>7</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "49": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,a[i] = input(m - 1))<SUB>9</SUB>>", "59": "<(IDENTIFIER,this,input(m - 1))<SUB>9</SUB>>", "61": "<(IDENTIFIER,m,m - 1)<SUB>9</SUB>>", "63": "<(LOCAL,int[][] b: int[][])<SUB>12</SUB>>", "65": "<(IDENTIFIER,b,int[][] b = new int[n - 1][m])<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>12</SUB>>", "69": "<(LITERAL,1,n - 1)<SUB>12</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>13</SUB>>", "79": "<(IDENTIFIER,n,n - 1)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>14</SUB>>", "87": "<(IDENTIFIER,i,b[i] = input(m))<SUB>14</SUB>>", "89": "<(IDENTIFIER,this,input(m))<SUB>14</SUB>>", "91": "<(CONTROL_STRUCTURE,if (k % 2 &gt; 0),if (k % 2 &gt; 0))<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.modulo,k % 2)<SUB>17</SUB>>", "95": "<(LITERAL,2,k % 2)<SUB>17</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "99": "<(LOCAL,int i: int)<SUB>18</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "105": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "107": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>19</SUB>>", "113": "<(LITERAL,0,int j = 0)<SUB>19</SUB>>", "115": "<(IDENTIFIER,j,j &lt; m)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,j++)<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "121": "<(IDENTIFIER,out,print(-1 + &quot; &quot;))<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "125": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>20</SUB>>", "127": "<(IDENTIFIER,out,println())<SUB>22</SUB>>", "129": "<(IDENTIFIER,out,flush())<SUB>24</SUB>>", "131": "<(LOCAL,int[][][] f: int[][][])<SUB>28</SUB>>", "133": "<(IDENTIFIER,f,int[][][] f = new int[n][m][k / 2 + 1])<SUB>28</SUB>>", "135": "<(IDENTIFIER,n,new int[n][m][k / 2 + 1])<SUB>28</SUB>>", "137": "<(&lt;operator&gt;.addition,k / 2 + 1)<SUB>28</SUB>>", "139": "<(IDENTIFIER,k,k / 2)<SUB>28</SUB>>", "141": "<(LITERAL,1,k / 2 + 1)<SUB>28</SUB>>", "143": "<(LOCAL,int s: int)<SUB>30</SUB>>", "145": "<(IDENTIFIER,s,int s = 1)<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.lessEqualsThan,s &lt;= k / 2)<SUB>30</SUB>>", "149": "<(&lt;operator&gt;.division,k / 2)<SUB>30</SUB>>", "151": "<(LITERAL,2,k / 2)<SUB>30</SUB>>", "153": "<(IDENTIFIER,s,s++)<SUB>30</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>31</SUB>>", "157": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>31</SUB>>", "159": "<(LITERAL,0,int i = 0)<SUB>31</SUB>>", "161": "<(IDENTIFIER,i,i &lt; n)<SUB>31</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "167": "<(LOCAL,int j: int)<SUB>32</SUB>>", "169": "<(IDENTIFIER,j,int j = 0)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>32</SUB>>", "173": "<(IDENTIFIER,m,j &lt; m)<SUB>32</SUB>>", "175": "<(IDENTIFIER,j,j++)<SUB>32</SUB>>", "177": "<(LOCAL,int ans: int)<SUB>33</SUB>>", "179": "<(IDENTIFIER,ans,int ans = -1)<SUB>33</SUB>>", "181": "<(LITERAL,1,-1)<SUB>33</SUB>>", "183": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>35</SUB>>", "185": "<(LITERAL,0,j &gt; 0)<SUB>35</SUB>>", "187": "<(&lt;operator&gt;.assignment,ans = f[i][j - 1][s - 1] + a[i][j - 1])<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.addition,f[i][j - 1][s - 1] + a[i][j - 1])<SUB>36</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,f[i][j - 1])<SUB>36</SUB>>", "193": "<(IDENTIFIER,f,f[i][j - 1][s - 1] + a[i][j - 1])<SUB>36</SUB>>", "195": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>36</SUB>>", "197": "<(LITERAL,1,j - 1)<SUB>36</SUB>>", "199": "<(IDENTIFIER,s,s - 1)<SUB>36</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,a[i][j - 1])<SUB>36</SUB>>", "203": "<(IDENTIFIER,a,f[i][j - 1][s - 1] + a[i][j - 1])<SUB>36</SUB>>", "205": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>36</SUB>>", "207": "<(LITERAL,1,j - 1)<SUB>36</SUB>>", "209": "<(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>38</SUB>>", "211": "<(LITERAL,0,i &gt; 0)<SUB>38</SUB>>", "213": "<(LOCAL,int t: int)<SUB>39</SUB>>", "215": "<(IDENTIFIER,t,int t = f[i - 1][j][s - 1] + b[i - 1][j])<SUB>39</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,f[i - 1][j][s - 1])<SUB>39</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,f[i - 1])<SUB>39</SUB>>", "221": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>39</SUB>>", "223": "<(LITERAL,1,i - 1)<SUB>39</SUB>>", "225": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>39</SUB>>", "227": "<(LITERAL,1,s - 1)<SUB>39</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,b[i - 1])<SUB>39</SUB>>", "231": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>39</SUB>>", "233": "<(LITERAL,1,i - 1)<SUB>39</SUB>>", "235": "<(&lt;operator&gt;.assignment,ans = ans == -1 ? t : Math.min(ans, t))<SUB>40</SUB>>", "237": "<(&lt;operator&gt;.conditional,ans == -1 ? t : Math.min(ans, t))<SUB>40</SUB>>", "239": "<(IDENTIFIER,ans,ans == -1)<SUB>40</SUB>>", "241": "<(LITERAL,1,-1)<SUB>40</SUB>>", "243": "<(min,Math.min(ans, t))<SUB>40</SUB>>", "245": "<(IDENTIFIER,ans,Math.min(ans, t))<SUB>40</SUB>>", "247": "<(CONTROL_STRUCTURE,if (i &lt; n - 1),if (i &lt; n - 1))<SUB>42</SUB>>", "249": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>42</SUB>>", "251": "<(IDENTIFIER,n,n - 1)<SUB>42</SUB>>", "253": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "255": "<(&lt;operator&gt;.assignment,int t = f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "257": "<(&lt;operator&gt;.addition,f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,f[i + 1][j])<SUB>43</SUB>>", "261": "<(IDENTIFIER,f,f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "263": "<(IDENTIFIER,i,i + 1)<SUB>43</SUB>>", "265": "<(IDENTIFIER,j,f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "267": "<(IDENTIFIER,s,s - 1)<SUB>43</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,b[i][j])<SUB>43</SUB>>", "271": "<(IDENTIFIER,b,f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "273": "<(IDENTIFIER,j,f[i + 1][j][s - 1] + b[i][j])<SUB>43</SUB>>", "275": "<(IDENTIFIER,ans,ans = ans == -1 ? t : Math.min(ans, t))<SUB>44</SUB>>", "277": "<(&lt;operator&gt;.equals,ans == -1)<SUB>44</SUB>>", "279": "<(&lt;operator&gt;.minus,-1)<SUB>44</SUB>>", "281": "<(IDENTIFIER,t,ans == -1 ? t : Math.min(ans, t))<SUB>44</SUB>>", "283": "<(IDENTIFIER,Math,Math.min(ans, t))<SUB>44</SUB>>", "285": "<(IDENTIFIER,t,Math.min(ans, t))<SUB>44</SUB>>", "287": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>46</SUB>>", "289": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>46</SUB>>", "291": "<(LITERAL,1,m - 1)<SUB>46</SUB>>", "293": "<(LOCAL,int t: int)<SUB>47</SUB>>", "295": "<(IDENTIFIER,t,int t = f[i][j + 1][s - 1] + a[i][j])<SUB>47</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,f[i][j + 1][s - 1])<SUB>47</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,f[i])<SUB>47</SUB>>", "301": "<(IDENTIFIER,i,f[i][j + 1][s - 1] + a[i][j])<SUB>47</SUB>>", "303": "<(IDENTIFIER,j,j + 1)<SUB>47</SUB>>", "305": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>47</SUB>>", "307": "<(LITERAL,1,s - 1)<SUB>47</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>47</SUB>>", "311": "<(IDENTIFIER,i,f[i][j + 1][s - 1] + a[i][j])<SUB>47</SUB>>", "313": "<(&lt;operator&gt;.assignment,ans = ans == -1 ? t : Math.min(ans, t))<SUB>48</SUB>>", "315": "<(&lt;operator&gt;.conditional,ans == -1 ? t : Math.min(ans, t))<SUB>48</SUB>>", "317": "<(IDENTIFIER,ans,ans == -1)<SUB>48</SUB>>", "319": "<(LITERAL,1,-1)<SUB>48</SUB>>", "321": "<(min,Math.min(ans, t))<SUB>48</SUB>>", "323": "<(IDENTIFIER,ans,Math.min(ans, t))<SUB>48</SUB>>", "325": "<(&lt;operator&gt;.assignment,f[i][j][s] = ans)<SUB>51</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,f[i][j])<SUB>51</SUB>>", "329": "<(IDENTIFIER,f,f[i][j][s] = ans)<SUB>51</SUB>>", "331": "<(IDENTIFIER,j,f[i][j][s] = ans)<SUB>51</SUB>>", "333": "<(IDENTIFIER,ans,f[i][j][s] = ans)<SUB>51</SUB>>", "335": "<(LOCAL,int i: int)<SUB>56</SUB>>", "337": "<(IDENTIFIER,i,int i = 0)<SUB>56</SUB>>", "339": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>56</SUB>>", "341": "<(IDENTIFIER,n,i &lt; n)<SUB>56</SUB>>", "343": "<(IDENTIFIER,i,i++)<SUB>56</SUB>>", "345": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>57</SUB>>", "347": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>57</SUB>>", "349": "<(LITERAL,0,int j = 0)<SUB>57</SUB>>", "351": "<(IDENTIFIER,j,j &lt; m)<SUB>57</SUB>>", "353": "<(&lt;operator&gt;.postIncrement,j++)<SUB>57</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "357": "<(IDENTIFIER,out,print(f[i][j][k / 2] * 2 + &quot; &quot;))<SUB>58</SUB>>", "359": "<(&lt;operator&gt;.multiplication,f[i][j][k / 2] * 2)<SUB>58</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,f[i][j])<SUB>58</SUB>>", "363": "<(IDENTIFIER,f,f[i][j][k / 2] * 2)<SUB>58</SUB>>", "365": "<(IDENTIFIER,j,f[i][j][k / 2] * 2)<SUB>58</SUB>>", "367": "<(IDENTIFIER,k,k / 2)<SUB>58</SUB>>", "369": "<(LITERAL,2,f[i][j][k / 2] * 2)<SUB>58</SUB>>", "371": "<(println,println())<SUB>60</SUB>>", "373": "<(flush,flush())<SUB>62</SUB>>", "375": "<(MODIFIER,PUBLIC)>", "377": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}