{"edges": [["19", "20"], ["19", "21"], ["19", "174"], ["19", "175"], ["19", "176"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "59"], ["21", "60"], ["21", "64"], ["21", "103"], ["21", "113"], ["21", "114"], ["21", "119"], ["21", "120"], ["21", "127"], ["21", "128"], ["21", "135"], ["21", "136"], ["21", "139"], ["21", "169"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "82"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["86", "102"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["103", "106"], ["106", "107"], ["106", "110"], ["106", "112"], ["107", "108"], ["107", "109"], ["110", "111"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["139", "144"], ["139", "147"], ["139", "149"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["149", "150"], ["150", "151"], ["150", "166"], ["151", "152"], ["151", "159"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["166", "167"], ["167", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "56"], ["52", "62"], ["60", "66"], ["103", "116"], ["114", "123"], ["120", "131"], ["128", "136"], ["136", "141"], ["169", "176"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["62", "60"], ["66", "69"], ["69", "79"], ["69", "109"], ["72", "69"], ["116", "114"], ["122", "120"], ["130", "128"], ["141", "144"], ["144", "154"], ["144", "172"], ["147", "144"], ["170", "169"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["56", "54"], ["76", "83"], ["82", "72"], ["107", "110"], ["110", "103"], ["123", "126"], ["126", "122"], ["131", "134"], ["134", "130"], ["172", "170"], ["29", "27"], ["32", "30"], ["78", "76"], ["83", "89"], ["109", "107"], ["151", "167"], ["151", "147"], ["34", "32"], ["79", "78"], ["87", "94"], ["90", "82"], ["152", "151"], ["152", "161"], ["159", "151"], ["167", "147"], ["89", "87"], ["92", "99"], ["97", "90"], ["153", "152"], ["160", "159"], ["94", "92"], ["99", "97"], ["154", "157"], ["157", "153"], ["161", "164"], ["164", "160"], ["19", "24"], ["20", "176"], ["22", "176"], ["30", "176"], ["30", "176"], ["30", "176"], ["25", "176"], ["37", "176"], ["40", "176"], ["39", "176"], ["37", "176"], ["37", "176"], ["46", "176"], ["44", "176"], ["44", "176"], ["54", "176"], ["54", "176"], ["52", "176"], ["52", "176"], ["60", "176"], ["60", "176"], ["103", "176"], ["107", "176"], ["110", "176"], ["110", "176"], ["103", "176"], ["114", "176"], ["116", "176"], ["114", "176"], ["114", "176"], ["120", "176"], ["120", "176"], ["120", "176"], ["128", "176"], ["128", "176"], ["128", "176"], ["136", "176"], ["141", "176"], ["144", "176"], ["144", "176"], ["144", "176"], ["169", "176"], ["169", "176"], ["169", "176"], ["152", "176"], ["151", "176"], ["159", "176"], ["151", "176"], ["151", "176"], ["167", "176"], ["147", "176"], ["76", "176"], ["79", "176"], ["78", "176"], ["76", "176"], ["76", "176"], ["82", "176"], ["90", "176"], ["92", "176"], ["90", "176"], ["97", "176"], ["97", "176"], ["90", "176"], ["90", "176"], ["82", "176"], ["72", "176"], ["103", "176"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["54", "52"], ["62", "60"], ["116", "114"], ["116", "114"], ["19", "136"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "66"], ["19", "103"], ["60", "103"], ["82", "103"], ["107", "103"], ["110", "103"], ["19", "141"], ["136", "169"], ["167", "169"], ["19", "169"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["46", "54"], ["19", "54"], ["37", "54"], ["44", "62"], ["19", "62"], ["66", "69"], ["72", "69"], ["19", "69"], ["62", "69"], ["69", "72"], ["19", "72"], ["78", "76"], ["78", "76"], ["87", "82"], ["90", "82"], ["19", "82"], ["19", "107"], ["19", "112"], ["52", "116"], ["19", "116"], ["141", "144"], ["147", "144"], ["19", "144"], ["69", "144"], ["144", "147"], ["19", "147"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["107", "110"], ["19", "110"], ["79", "78"], ["19", "78"], ["19", "87"], ["19", "102"], ["152", "151"], ["152", "151"], ["159", "151"], ["159", "151"], ["40", "79"], ["19", "79"], ["87", "90"], ["19", "90"], ["92", "90"], ["92", "90"], ["97", "90"], ["97", "90"], ["120", "152"], ["19", "152"], ["128", "159"], ["19", "159"], ["136", "167"], ["19", "167"], ["54", "92"], ["97", "92"], ["19", "92"], ["76", "92"], ["92", "97"], ["19", "97"], ["76", "97"], ["69", "94"], ["69", "89"], ["69", "99"], ["69", "72"], ["69", "69"], ["69", "92"], ["69", "76"], ["69", "87"], ["69", "97"], ["69", "82"], ["69", "90"], ["69", "79"], ["69", "83"], ["69", "78"], ["144", "154"], ["144", "151"], ["144", "153"], ["144", "157"], ["144", "144"], ["144", "152"], ["144", "147"], ["151", "167"], ["152", "160"], ["152", "161"], ["152", "159"], ["152", "164"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] data = split(&quot; &quot;))<SUB>3</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,s,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int n: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,int n = Integer.valueOf(data[0]))<SUB>4</SUB>>", "47": "<(IDENTIFIER,Integer,Integer.valueOf(data[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,data,Integer.valueOf(data[0]))<SUB>4</SUB>>", "51": "<(LOCAL,int k: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,k,int k = Integer.valueOf(data[1]))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Integer,Integer.valueOf(data[1]))<SUB>5</SUB>>", "57": "<(IDENTIFIER,data,Integer.valueOf(data[1]))<SUB>5</SUB>>", "59": "<(LOCAL,Team[] t: ANY)<SUB>8</SUB>>", "61": "<(IDENTIFIER,t,ANY t = new Team[n])<SUB>8</SUB>>", "63": "<(IDENTIFIER,n,new Team[n])<SUB>8</SUB>>", "65": "<(LOCAL,int i: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "71": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "75": "<(LOCAL,String[] line: java.lang.String[])<SUB>10</SUB>>", "77": "<(IDENTIFIER,line,String[] line = split(&quot; &quot;))<SUB>10</SUB>>", "79": "<(readLine,readLine())<SUB>10</SUB>>", "81": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,t[i])<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,t[i] = new Team(Integer.valueOf(line[0]), Integer.valueOf(line[1])))<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "89": "<(&lt;operator&gt;.alloc,new Team(Integer.valueOf(line[0]), Integer.valueOf(line[1])))<SUB>11</SUB>>", "91": "<(IDENTIFIER,$obj2,new Team(Integer.valueOf(line[0]), Integer.valueOf(line[1])))>", "93": "<(IDENTIFIER,Integer,Integer.valueOf(line[0]))<SUB>11</SUB>>", "95": "<(IDENTIFIER,line,Integer.valueOf(line[0]))<SUB>11</SUB>>", "97": "<(valueOf,Integer.valueOf(line[1]))<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,line[1])<SUB>11</SUB>>", "101": "<(LITERAL,1,Integer.valueOf(line[1]))<SUB>11</SUB>>", "103": "<(sort,sort(t, new Comparator&lt;Team&gt;() {\\012\\012    public int compare(Team arg0, Team arg1) {\\012        if (arg0.solved != arg1.solved) {\\012            return arg1.solved - arg0.solved;\\012        }\\012        return arg0.penalty - arg1.penalty;\\012    }\\012}))<SUB>13</SUB>>", "105": "<(IDENTIFIER,t,sort(t, new Comparator&lt;Team&gt;() {\\012\\012    public int compare(Team arg0, Team arg1) {\\012        if (arg0.solved != arg1.solved) {\\012            return arg1.solved - arg0.solved;\\012        }\\012        return arg0.penalty - arg1.penalty;\\012    }\\012}))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "109": "<(&lt;operator&gt;.alloc,new Comparator&lt;Team&gt;() {\\012\\012    public int compare(Team arg0, Team arg1) {\\012        if (arg0.solved != arg1.solved) {\\012            return arg1.solved - arg0.solved;\\012        }\\012        return arg0.penalty - arg1.penalty;\\012    }\\012})<SUB>13</SUB>>", "111": "<(IDENTIFIER,$obj3,new Comparator&lt;Team&gt;() {\\012\\012    public int compare(Team arg0, Team arg1) {\\012        if (arg0.solved != arg1.solved) {\\012            return arg1.solved - arg0.solved;\\012        }\\012        return arg0.penalty - arg1.penalty;\\012    }\\012})>", "113": "<(LOCAL,int idx: int)<SUB>23</SUB>>", "115": "<(IDENTIFIER,idx,int idx = k - 1)<SUB>23</SUB>>", "117": "<(IDENTIFIER,k,k - 1)<SUB>23</SUB>>", "119": "<(LOCAL,int ksol: int)<SUB>24</SUB>>", "121": "<(IDENTIFIER,ksol,int ksol = t[idx].solved)<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,t[idx])<SUB>24</SUB>>", "125": "<(IDENTIFIER,idx,int ksol = t[idx].solved)<SUB>24</SUB>>", "127": "<(LOCAL,int kpen: int)<SUB>25</SUB>>", "129": "<(IDENTIFIER,kpen,int kpen = t[idx].penalty)<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,t[idx])<SUB>25</SUB>>", "133": "<(IDENTIFIER,idx,int kpen = t[idx].penalty)<SUB>25</SUB>>", "135": "<(LOCAL,int count: int)<SUB>26</SUB>>", "137": "<(IDENTIFIER,count,int count = 0)<SUB>26</SUB>>", "139": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "143": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "145": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "151": "<(&lt;operator&gt;.logicalAnd,t[i].solved == ksol &amp;&amp; t[i].penalty == kpen)<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,t[i].solved)<SUB>28</SUB>>", "155": "<(IDENTIFIER,t,t[i].solved == ksol)<SUB>28</SUB>>", "157": "<(FIELD_IDENTIFIER,solved,solved)<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.equals,t[i].penalty == kpen)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,t[i])<SUB>28</SUB>>", "163": "<(IDENTIFIER,i,t[i].penalty == kpen)<SUB>28</SUB>>", "165": "<(IDENTIFIER,kpen,t[i].penalty == kpen)<SUB>28</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,count++)<SUB>29</SUB>>", "169": "<(println,System.out.println(count))<SUB>32</SUB>>", "171": "<(IDENTIFIER,System,System.out.println(count))<SUB>32</SUB>>", "173": "<(IDENTIFIER,count,System.out.println(count))<SUB>32</SUB>>", "175": "<(MODIFIER,STATIC)>"}}