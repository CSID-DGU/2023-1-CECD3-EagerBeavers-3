{"edges": [["21", "23"], ["21", "187"], ["21", "188"], ["21", "189"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "29"], ["23", "32"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "52"], ["23", "56"], ["23", "57"], ["23", "62"], ["23", "89"], ["23", "90"], ["23", "91"], ["23", "92"], ["23", "95"], ["23", "98"], ["23", "101"], ["23", "178"], ["23", "185"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["29", "30"], ["29", "31"], ["32", "5"], ["32", "33"], ["33", "34"], ["33", "37"], ["33", "40"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "81"], ["73", "74"], ["73", "79"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "124"], ["122", "129"], ["122", "164"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["129", "139"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["142", "145"], ["145", "146"], ["145", "155"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "172"], ["168", "175"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["185", "186"], ["24", "27"], ["27", "31"], ["29", "36"], ["32", "46"], ["44", "50"], ["48", "54"], ["52", "59"], ["57", "64"], ["92", "95"], ["95", "98"], ["98", "103"], ["178", "185"], ["185", "189"], ["26", "24"], ["31", "29"], ["46", "44"], ["50", "48"], ["54", "52"], ["59", "57"], ["64", "67"], ["67", "75"], ["67", "92"], ["70", "67"], ["103", "106"], ["106", "114"], ["106", "181"], ["109", "106"], ["180", "178"], ["34", "37"], ["37", "32"], ["73", "83"], ["81", "70"], ["181", "180"], ["36", "34"], ["74", "79"], ["79", "73"], ["82", "87"], ["87", "81"], ["114", "117"], ["117", "128"], ["117", "109"], ["120", "117"], ["75", "74"], ["83", "82"], ["124", "131"], ["126", "124"], ["131", "134"], ["134", "151"], ["134", "165"], ["137", "134"], ["165", "169"], ["165", "120"], ["128", "126"], ["140", "137"], ["169", "172"], ["172", "175"], ["175", "120"], ["142", "140"], ["145", "142"], ["146", "160"], ["155", "145"], ["148", "146"], ["157", "155"], ["150", "148"], ["159", "157"], ["151", "150"], ["160", "159"], ["21", "26"], ["22", "189"], ["24", "189"], ["27", "189"], ["29", "189"], ["34", "189"], ["37", "189"], ["37", "189"], ["32", "189"], ["44", "189"], ["48", "189"], ["48", "189"], ["54", "189"], ["52", "189"], ["52", "189"], ["57", "189"], ["57", "189"], ["57", "189"], ["64", "189"], ["67", "189"], ["67", "189"], ["92", "189"], ["92", "189"], ["95", "189"], ["98", "189"], ["103", "189"], ["106", "189"], ["106", "189"], ["106", "189"], ["181", "189"], ["180", "189"], ["180", "189"], ["178", "189"], ["178", "189"], ["185", "189"], ["185", "189"], ["114", "189"], ["117", "189"], ["117", "189"], ["117", "189"], ["109", "189"], ["124", "189"], ["124", "189"], ["131", "189"], ["134", "189"], ["134", "189"], ["134", "189"], ["165", "189"], ["165", "189"], ["165", "189"], ["169", "189"], ["169", "189"], ["169", "189"], ["172", "189"], ["175", "189"], ["120", "189"], ["142", "189"], ["148", "189"], ["146", "189"], ["145", "189"], ["157", "189"], ["155", "189"], ["145", "189"], ["142", "189"], ["140", "189"], ["140", "189"], ["137", "189"], ["73", "189"], ["73", "189"], ["81", "189"], ["87", "189"], ["81", "189"], ["81", "189"], ["70", "189"], ["21", "22"], ["21", "24"], ["21", "29"], ["46", "44"], ["50", "48"], ["54", "52"], ["59", "57"], ["59", "57"], ["21", "92"], ["21", "95"], ["21", "98"], ["24", "27"], ["21", "27"], ["29", "32"], ["21", "32"], ["34", "32"], ["37", "32"], ["21", "64"], ["21", "103"], ["32", "178"], ["21", "178"], ["95", "178"], ["172", "178"], ["98", "178"], ["175", "178"], ["178", "185"], ["21", "185"], ["21", "34"], ["21", "40"], ["27", "46"], ["21", "46"], ["46", "50"], ["21", "50"], ["50", "54"], ["21", "54"], ["52", "59"], ["21", "59"], ["64", "67"], ["70", "67"], ["21", "67"], ["59", "67"], ["67", "70"], ["21", "70"], ["79", "73"], ["87", "81"], ["103", "106"], ["109", "106"], ["21", "106"], ["44", "106"], ["106", "109"], ["148", "109"], ["21", "109"], ["95", "180"], ["172", "180"], ["21", "180"], ["98", "180"], ["175", "180"], ["34", "37"], ["21", "37"], ["21", "114"], ["95", "181"], ["172", "181"], ["21", "181"], ["54", "79"], ["87", "79"], ["21", "79"], ["79", "87"], ["21", "87"], ["114", "117"], ["120", "117"], ["21", "117"], ["48", "117"], ["117", "120"], ["157", "120"], ["21", "120"], ["21", "131"], ["131", "134"], ["137", "134"], ["21", "134"], ["67", "134"], ["134", "137"], ["21", "137"], ["142", "140"], ["142", "140"], ["142", "140"], ["124", "165"], ["140", "165"], ["21", "165"], ["92", "165"], ["169", "165"], ["165", "169"], ["21", "169"], ["106", "172"], ["148", "172"], ["21", "172"], ["117", "175"], ["157", "175"], ["21", "175"], ["155", "142"], ["21", "142"], ["124", "142"], ["140", "142"], ["146", "142"], ["146", "142"], ["155", "142"], ["146", "145"], ["146", "145"], ["155", "145"], ["155", "145"], ["142", "146"], ["21", "146"], ["148", "146"], ["148", "146"], ["146", "155"], ["21", "155"], ["157", "155"], ["157", "155"], ["106", "148"], ["21", "148"], ["117", "157"], ["21", "157"], ["67", "73"], ["67", "75"], ["67", "81"], ["67", "67"], ["67", "74"], ["67", "87"], ["67", "82"], ["67", "79"], ["67", "83"], ["67", "70"], ["106", "114"], ["106", "106"], ["106", "117"], ["106", "109"], ["117", "120"], ["117", "128"], ["117", "131"], ["117", "134"], ["117", "126"], ["117", "165"], ["117", "117"], ["117", "124"], ["134", "160"], ["134", "145"], ["134", "146"], ["134", "142"], ["134", "150"], ["134", "151"], ["134", "157"], ["134", "159"], ["134", "134"], ["134", "140"], ["134", "148"], ["134", "137"], ["134", "155"], ["165", "169"], ["165", "175"], ["165", "172"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scn = new Reader(&quot;input.txt&quot;))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Reader(&quot;input.txt&quot;))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scn,new Reader(&quot;input.txt&quot;))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "30": "<(IDENTIFIER,out,ANY out = new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>3</SUB>>", "32": "<(&lt;init&gt;,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>3</SUB>>", "33": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "37": "<(&lt;init&gt;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "39": "<(LITERAL,&quot;output.txt&quot;,new File(&quot;output.txt&quot;))<SUB>3</SUB>>", "41": "<(LOCAL,int n: int)<SUB>4</SUB>>", "43": "<(LOCAL,int k: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,scn,nextInt())<SUB>4</SUB>>", "49": "<(IDENTIFIER,m,int m = nextInt())<SUB>4</SUB>>", "51": "<(IDENTIFIER,scn,nextInt())<SUB>4</SUB>>", "53": "<(IDENTIFIER,k,int k = nextInt())<SUB>4</SUB>>", "55": "<(IDENTIFIER,scn,nextInt())<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[][] inf = new int[k][2])<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[k][2])>", "61": "<(LITERAL,2,new int[k][2])<SUB>5</SUB>>", "63": "<(LOCAL,int i: int)<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; k)<SUB>6</SUB>>", "69": "<(IDENTIFIER,k,i &lt; k)<SUB>6</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "73": "<(&lt;operator&gt;.assignment,inf[i][0] = nextInt())<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,inf[i])<SUB>7</SUB>>", "77": "<(IDENTIFIER,i,inf[i][0] = nextInt())<SUB>7</SUB>>", "79": "<(nextInt,nextInt())<SUB>7</SUB>>", "81": "<(&lt;operator&gt;.assignment,inf[i][1] = nextInt())<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,inf[i])<SUB>7</SUB>>", "85": "<(IDENTIFIER,i,inf[i][1] = nextInt())<SUB>7</SUB>>", "87": "<(nextInt,nextInt())<SUB>7</SUB>>", "89": "<(LOCAL,int ans: int)<SUB>9</SUB>>", "91": "<(LOCAL,int y: int)<SUB>9</SUB>>", "93": "<(IDENTIFIER,ans,int ans = 0)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.assignment,int x = 1)<SUB>9</SUB>>", "97": "<(LITERAL,1,int x = 1)<SUB>9</SUB>>", "99": "<(IDENTIFIER,y,int y = 1)<SUB>9</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "105": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "107": "<(IDENTIFIER,i,i &lt;= n)<SUB>10</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "113": "<(LOCAL,int j: int)<SUB>11</SUB>>", "115": "<(IDENTIFIER,j,int j = 1)<SUB>11</SUB>>", "117": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>11</SUB>>", "119": "<(IDENTIFIER,m,j &lt;= m)<SUB>11</SUB>>", "121": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "123": "<(LOCAL,int temp: int)<SUB>12</SUB>>", "125": "<(IDENTIFIER,temp,int temp = Integer.MAX_VALUE)<SUB>12</SUB>>", "127": "<(IDENTIFIER,Integer,int temp = Integer.MAX_VALUE)<SUB>12</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int l = 0; Some(l &lt; k); l++),for (int l = 0; Some(l &lt; k); l++))<SUB>13</SUB>>", "131": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>13</SUB>>", "133": "<(LITERAL,0,int l = 0)<SUB>13</SUB>>", "135": "<(IDENTIFIER,l,l &lt; k)<SUB>13</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,l++)<SUB>13</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "141": "<(IDENTIFIER,temp,temp = Math.min(temp, Math.abs(i - inf[l][0]) + Math.abs(j - inf[l][1])))<SUB>14</SUB>>", "143": "<(IDENTIFIER,Math,Math.min(temp, Math.abs(i - inf[l][0]) + Math.abs(j - inf[l][1])))<SUB>14</SUB>>", "145": "<(&lt;operator&gt;.addition,Math.abs(i - inf[l][0]) + Math.abs(j - inf[l][1]))<SUB>14</SUB>>", "147": "<(IDENTIFIER,Math,Math.abs(i - inf[l][0]))<SUB>14</SUB>>", "149": "<(IDENTIFIER,i,i - inf[l][0])<SUB>14</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,inf[l])<SUB>14</SUB>>", "153": "<(IDENTIFIER,l,i - inf[l][0])<SUB>14</SUB>>", "155": "<(abs,Math.abs(j - inf[l][1]))<SUB>14</SUB>>", "157": "<(&lt;operator&gt;.subtraction,j - inf[l][1])<SUB>14</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,inf[l][1])<SUB>14</SUB>>", "161": "<(IDENTIFIER,inf,j - inf[l][1])<SUB>14</SUB>>", "163": "<(LITERAL,1,j - inf[l][1])<SUB>14</SUB>>", "165": "<(&lt;operator&gt;.greaterThan,temp &gt; ans)<SUB>16</SUB>>", "167": "<(IDENTIFIER,ans,temp &gt; ans)<SUB>16</SUB>>", "169": "<(&lt;operator&gt;.assignment,ans = temp)<SUB>17</SUB>>", "171": "<(IDENTIFIER,temp,ans = temp)<SUB>17</SUB>>", "173": "<(IDENTIFIER,x,x = i)<SUB>17</SUB>>", "175": "<(&lt;operator&gt;.assignment,y = j)<SUB>17</SUB>>", "177": "<(IDENTIFIER,j,y = j)<SUB>17</SUB>>", "179": "<(IDENTIFIER,out,print(x + &quot; &quot; + y))<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.addition,x + &quot; &quot;)<SUB>21</SUB>>", "183": "<(LITERAL,&quot; &quot;,x + &quot; &quot;)<SUB>21</SUB>>", "185": "<(close,close())<SUB>22</SUB>>", "187": "<(MODIFIER,PUBLIC)>", "189": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}