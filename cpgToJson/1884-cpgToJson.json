{"edges": [["29", "30"], ["29", "31"], ["29", "284"], ["29", "285"], ["29", "286"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "39"], ["31", "42"], ["31", "46"], ["31", "47"], ["31", "51"], ["31", "52"], ["31", "58"], ["31", "59"], ["31", "8"], ["31", "65"], ["31", "68"], ["31", "69"], ["31", "91"], ["31", "92"], ["31", "10"], ["31", "95"], ["31", "98"], ["31", "99"], ["31", "100"], ["31", "104"], ["31", "105"], ["31", "109"], ["31", "138"], ["31", "12"], ["31", "158"], ["31", "161"], ["31", "14"], ["31", "163"], ["31", "166"], ["31", "168"], ["31", "169"], ["31", "174"], ["31", "279"], ["31", "282"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "7"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "86"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "9"], ["100", "101"], ["100", "102"], ["102", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["109", "110"], ["109", "112"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "118"], ["112", "131"], ["112", "135"], ["114", "115"], ["114", "116"], ["116", "117"], ["118", "119"], ["118", "124"], ["118", "127"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "11"], ["161", "162"], ["163", "164"], ["163", "165"], ["166", "13"], ["166", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "182"], ["174", "184"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["184", "185"], ["184", "186"], ["184", "187"], ["184", "197"], ["184", "207"], ["184", "208"], ["184", "209"], ["184", "219"], ["184", "229"], ["184", "236"], ["184", "243"], ["184", "254"], ["184", "265"], ["184", "273"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["189", "192"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["199", "206"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["211", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["221", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["265", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["273", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["282", "283"], ["32", "38"], ["35", "41"], ["39", "45"], ["42", "49"], ["47", "55"], ["52", "62"], ["59", "67"], ["65", "68"], ["68", "71"], ["92", "97"], ["95", "98"], ["98", "102"], ["100", "107"], ["105", "110"], ["158", "161"], ["161", "165"], ["163", "166"], ["166", "173"], ["169", "176"], ["279", "282"], ["282", "286"], ["34", "32"], ["36", "35"], ["41", "39"], ["43", "42"], ["49", "47"], ["54", "52"], ["61", "59"], ["67", "65"], ["71", "74"], ["74", "81"], ["74", "92"], ["77", "74"], ["97", "95"], ["102", "100"], ["107", "105"], ["110", "116"], ["110", "140"], ["140", "143"], ["143", "150"], ["143", "160"], ["146", "143"], ["160", "158"], ["165", "163"], ["171", "169"], ["176", "179"], ["179", "193"], ["179", "279"], ["182", "179"], ["38", "36"], ["45", "43"], ["55", "54"], ["62", "61"], ["80", "88"], ["86", "77"], ["114", "120"], ["131", "135"], ["135", "110"], ["149", "146"], ["173", "171"], ["187", "202"], ["197", "215"], ["209", "224"], ["219", "233"], ["229", "240"], ["236", "251"], ["243", "262"], ["254", "267"], ["265", "275"], ["273", "182"], ["81", "84"], ["84", "80"], ["88", "86"], ["116", "114"], ["119", "124"], ["119", "128"], ["124", "131"], ["150", "155"], ["153", "149"], ["189", "187"], ["199", "197"], ["211", "209"], ["221", "219"], ["231", "229"], ["238", "236"], ["245", "243"], ["256", "254"], ["267", "270"], ["270", "265"], ["275", "273"], ["120", "119"], ["128", "131"], ["155", "153"], ["192", "189"], ["201", "199"], ["214", "211"], ["223", "221"], ["233", "231"], ["240", "238"], ["247", "245"], ["258", "256"], ["193", "192"], ["202", "201"], ["215", "214"], ["224", "223"], ["249", "247"], ["260", "258"], ["251", "249"], ["262", "260"], ["29", "34"], ["30", "286"], ["32", "286"], ["35", "286"], ["35", "286"], ["39", "286"], ["42", "286"], ["42", "286"], ["49", "286"], ["47", "286"], ["47", "286"], ["52", "286"], ["52", "286"], ["59", "286"], ["61", "286"], ["59", "286"], ["59", "286"], ["65", "286"], ["68", "286"], ["92", "286"], ["95", "286"], ["98", "286"], ["98", "286"], ["100", "286"], ["100", "286"], ["100", "286"], ["107", "286"], ["105", "286"], ["110", "286"], ["110", "286"], ["140", "286"], ["143", "286"], ["158", "286"], ["161", "286"], ["163", "286"], ["166", "286"], ["166", "286"], ["166", "286"], ["169", "286"], ["169", "286"], ["176", "286"], ["176", "286"], ["179", "286"], ["179", "286"], ["279", "286"], ["279", "286"], ["282", "286"], ["282", "286"], ["187", "286"], ["197", "286"], ["211", "286"], ["209", "286"], ["209", "286"], ["221", "286"], ["221", "286"], ["219", "286"], ["219", "286"], ["233", "286"], ["231", "286"], ["229", "286"], ["229", "286"], ["240", "286"], ["238", "286"], ["236", "286"], ["236", "286"], ["249", "286"], ["247", "286"], ["245", "286"], ["243", "286"], ["243", "286"], ["258", "286"], ["260", "286"], ["258", "286"], ["256", "286"], ["254", "286"], ["254", "286"], ["265", "286"], ["265", "286"], ["265", "286"], ["273", "286"], ["273", "286"], ["273", "286"], ["182", "286"], ["149", "286"], ["153", "286"], ["153", "286"], ["149", "286"], ["149", "286"], ["146", "286"], ["119", "286"], ["119", "286"], ["128", "286"], ["124", "286"], ["131", "286"], ["131", "286"], ["135", "286"], ["135", "286"], ["84", "286"], ["80", "286"], ["80", "286"], ["86", "286"], ["86", "286"], ["77", "286"], ["29", "30"], ["29", "32"], ["29", "39"], ["49", "47"], ["54", "52"], ["61", "59"], ["29", "65"], ["29", "92"], ["29", "95"], ["102", "100"], ["107", "105"], ["29", "158"], ["29", "163"], ["32", "35"], ["29", "35"], ["39", "42"], ["29", "42"], ["65", "68"], ["29", "68"], ["29", "71"], ["95", "98"], ["29", "98"], ["29", "140"], ["158", "161"], ["29", "161"], ["92", "161"], ["131", "161"], ["163", "166"], ["29", "166"], ["161", "166"], ["143", "176"], ["29", "176"], ["42", "279"], ["29", "279"], ["169", "279"], ["254", "279"], ["279", "282"], ["29", "282"], ["35", "49"], ["29", "49"], ["47", "54"], ["29", "54"], ["29", "61"], ["47", "61"], ["71", "74"], ["77", "74"], ["29", "74"], ["47", "74"], ["74", "77"], ["29", "77"], ["84", "80"], ["68", "102"], ["86", "102"], ["29", "102"], ["102", "107"], ["29", "107"], ["105", "110"], ["116", "110"], ["29", "110"], ["116", "114"], ["131", "135"], ["29", "135"], ["140", "143"], ["146", "143"], ["29", "143"], ["74", "143"], ["143", "146"], ["29", "146"], ["153", "149"], ["153", "149"], ["176", "179"], ["182", "179"], ["29", "179"], ["179", "182"], ["29", "182"], ["189", "187"], ["189", "187"], ["189", "187"], ["199", "197"], ["199", "197"], ["199", "197"], ["211", "209"], ["211", "209"], ["211", "209"], ["221", "219"], ["221", "219"], ["221", "219"], ["231", "229"], ["231", "229"], ["238", "236"], ["238", "236"], ["245", "243"], ["245", "243"], ["256", "254"], ["256", "254"], ["47", "55"], ["29", "55"], ["29", "62"], ["47", "62"], ["68", "86"], ["29", "86"], ["52", "86"], ["80", "86"], ["29", "124"], ["98", "131"], ["29", "131"], ["120", "131"], ["128", "131"], ["124", "131"], ["199", "265"], ["29", "265"], ["59", "265"], ["214", "265"], ["52", "265"], ["260", "265"], ["221", "273"], ["29", "273"], ["59", "273"], ["265", "273"], ["49", "84"], ["29", "84"], ["110", "116"], ["29", "116"], ["120", "119"], ["120", "119"], ["29", "119"], ["92", "124"], ["131", "124"], ["29", "128"], ["98", "153"], ["131", "153"], ["29", "153"], ["52", "153"], ["86", "153"], ["161", "189"], ["265", "189"], ["29", "189"], ["192", "189"], ["192", "189"], ["189", "199"], ["29", "199"], ["59", "199"], ["192", "199"], ["166", "199"], ["221", "199"], ["166", "211"], ["273", "211"], ["29", "211"], ["214", "211"], ["214", "211"], ["211", "221"], ["29", "221"], ["59", "221"], ["214", "221"], ["199", "221"], ["169", "231"], ["254", "231"], ["29", "231"], ["233", "231"], ["233", "231"], ["229", "238"], ["29", "238"], ["240", "238"], ["240", "238"], ["236", "245"], ["29", "245"], ["247", "245"], ["247", "245"], ["243", "256"], ["29", "256"], ["258", "256"], ["258", "256"], ["114", "120"], ["29", "120"], ["100", "120"], ["135", "120"], ["92", "128"], ["131", "128"], ["59", "192"], ["273", "192"], ["149", "192"], ["29", "192"], ["59", "201"], ["192", "201"], ["29", "201"], ["59", "214"], ["192", "214"], ["29", "214"], ["59", "223"], ["214", "223"], ["29", "223"], ["258", "233"], ["29", "233"], ["197", "233"], ["233", "240"], ["29", "240"], ["187", "240"], ["240", "247"], ["29", "247"], ["249", "247"], ["249", "247"], ["247", "258"], ["29", "258"], ["260", "258"], ["260", "258"], ["219", "249"], ["29", "249"], ["52", "249"], ["265", "249"], ["153", "249"], ["86", "249"], ["209", "260"], ["29", "260"], ["52", "260"], ["249", "260"], ["74", "77"], ["74", "81"], ["74", "84"], ["74", "74"], ["74", "80"], ["74", "88"], ["74", "86"], ["110", "120"], ["110", "114"], ["110", "131"], ["110", "119"], ["110", "116"], ["110", "135"], ["110", "110"], ["143", "146"], ["143", "149"], ["143", "150"], ["143", "153"], ["143", "155"], ["143", "143"], ["179", "214"], ["179", "192"], ["179", "179"], ["179", "215"], ["179", "209"], ["179", "240"], ["179", "273"], ["179", "197"], ["179", "189"], ["179", "275"], ["179", "243"], ["179", "245"], ["179", "256"], ["179", "262"], ["179", "247"], ["179", "238"], ["179", "223"], ["179", "187"], ["179", "231"], ["179", "267"], ["179", "182"], ["179", "221"], ["179", "224"], ["179", "258"], ["179", "202"], ["179", "233"], ["179", "249"], ["179", "265"], ["179", "201"], ["179", "193"], ["179", "236"], ["179", "260"], ["179", "270"], ["179", "251"], ["179", "254"], ["179", "199"], ["179", "229"], ["179", "211"], ["179", "219"], ["119", "128"], ["119", "124"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY in = new FastReader(System.in))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new FastReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,System,new FastReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "40": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "45": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "49": "<(nextInt,nextInt())<SUB>4</SUB>>", "51": "<(LOCAL,int[] a: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,a,int[] a = new int[n + 1])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.addition,n + 1)<SUB>5</SUB>>", "57": "<(LITERAL,1,n + 1)<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[] b = new int[n + 1])<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "63": "<(IDENTIFIER,n,n + 1)<SUB>6</SUB>>", "8": "<(LOCAL,TreeSet&lt;Integer&gt; set: ANY)<SUB>7</SUB>>", "66": "<(IDENTIFIER,set,ANY set = new TreeSet&lt;&gt;())<SUB>7</SUB>>", "68": "<(&lt;init&gt;,new TreeSet&lt;&gt;())<SUB>7</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>8</SUB>>", "73": "<(LITERAL,1,int i = 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,i &lt;= n)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>9</SUB>>", "85": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "87": "<(IDENTIFIER,set,add(a[i]))<SUB>10</SUB>>", "89": "<(IDENTIFIER,a,add(a[i]))<SUB>10</SUB>>", "91": "<(LOCAL,int k: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,k,int k = 0)<SUB>12</SUB>>", "10": "<(LOCAL,HashMap&lt;Integer, Integer&gt; map: ANY)<SUB>13</SUB>>", "96": "<(IDENTIFIER,map,ANY map = new HashMap&lt;&gt;())<SUB>13</SUB>>", "98": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>13</SUB>>", "99": "<(LOCAL,int last: int)<SUB>14</SUB>>", "101": "<(IDENTIFIER,last,int last = first())<SUB>14</SUB>>", "103": "<(IDENTIFIER,set,first())<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.assignment,)<SUB>15</SUB>>", "107": "<(iterator,&lt;empty&gt;)<SUB>15</SUB>>", "109": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>15</SUB>>", "111": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "113": "<(LOCAL,i: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,&lt;empty&gt;)>", "117": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "119": "<(&lt;operator&gt;.greaterThan,i - last &gt; 1)<SUB>16</SUB>>", "121": "<(IDENTIFIER,i,i - last)<SUB>16</SUB>>", "123": "<(LITERAL,1,i - last &gt; 1)<SUB>16</SUB>>", "125": "<(IDENTIFIER,k,k += 2)<SUB>16</SUB>>", "127": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "129": "<(IDENTIFIER,k,k += 1)<SUB>17</SUB>>", "131": "<(put,put(i, k))<SUB>18</SUB>>", "133": "<(IDENTIFIER,i,put(i, k))<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.assignment,last = i)<SUB>19</SUB>>", "137": "<(IDENTIFIER,i,last = i)<SUB>19</SUB>>", "139": "<(LOCAL,int i: int)<SUB>22</SUB>>", "141": "<(IDENTIFIER,i,int i = 1)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>22</SUB>>", "145": "<(IDENTIFIER,n,i &lt;= n)<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.assignment,b[i] = get(a[i]))<SUB>23</SUB>>", "151": "<(IDENTIFIER,b,b[i] = get(a[i]))<SUB>23</SUB>>", "153": "<(get,get(a[i]))<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>23</SUB>>", "157": "<(IDENTIFIER,i,get(a[i]))<SUB>23</SUB>>", "158": "<(&lt;operator&gt;.assignment,ANY bit = new BinaryIndexTree(k))<SUB>26</SUB>>", "160": "<(&lt;operator&gt;.alloc,new BinaryIndexTree(k))<SUB>26</SUB>>", "11": "<(IDENTIFIER,bit,new BinaryIndexTree(k))<SUB>26</SUB>>", "14": "<(LOCAL,BinaryIndexTree freq: ANY)<SUB>27</SUB>>", "164": "<(IDENTIFIER,freq,ANY freq = new BinaryIndexTree(k))<SUB>27</SUB>>", "166": "<(&lt;init&gt;,new BinaryIndexTree(k))<SUB>27</SUB>>", "167": "<(IDENTIFIER,k,new BinaryIndexTree(k))<SUB>27</SUB>>", "169": "<(&lt;operator&gt;.assignment,ANY res = BigInteger.ZERO)<SUB>30</SUB>>", "171": "<(&lt;operator&gt;.fieldAccess,BigInteger.ZERO)<SUB>30</SUB>>", "173": "<(FIELD_IDENTIFIER,ZERO,ZERO)<SUB>30</SUB>>", "175": "<(LOCAL,int i: int)<SUB>32</SUB>>", "177": "<(IDENTIFIER,i,int i = n)<SUB>32</SUB>>", "179": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 1)<SUB>32</SUB>>", "181": "<(LITERAL,1,i &gt;= 1)<SUB>32</SUB>>", "183": "<(IDENTIFIER,i,i--)<SUB>32</SUB>>", "185": "<(LOCAL,long l: long)<SUB>33</SUB>>", "187": "<(&lt;operator&gt;.assignment,long l = query(1, b[i] - 2))<SUB>33</SUB>>", "189": "<(query,query(1, b[i] - 2))<SUB>33</SUB>>", "191": "<(LITERAL,1,query(1, b[i] - 2))<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>33</SUB>>", "195": "<(IDENTIFIER,i,b[i] - 2)<SUB>33</SUB>>", "197": "<(&lt;operator&gt;.assignment,long r = query(b[i] + 2, k))<SUB>33</SUB>>", "199": "<(query,query(b[i] + 2, k))<SUB>33</SUB>>", "201": "<(&lt;operator&gt;.addition,b[i] + 2)<SUB>33</SUB>>", "203": "<(IDENTIFIER,b,b[i] + 2)<SUB>33</SUB>>", "205": "<(LITERAL,2,b[i] + 2)<SUB>33</SUB>>", "207": "<(LOCAL,long lf: long)<SUB>34</SUB>>", "209": "<(&lt;operator&gt;.assignment,long lf = query(1, b[i] - 2))<SUB>34</SUB>>", "211": "<(query,query(1, b[i] - 2))<SUB>34</SUB>>", "213": "<(LITERAL,1,query(1, b[i] - 2))<SUB>34</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>34</SUB>>", "217": "<(IDENTIFIER,i,b[i] - 2)<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.assignment,long rf = query(b[i] + 2, k))<SUB>34</SUB>>", "221": "<(query,query(b[i] + 2, k))<SUB>34</SUB>>", "223": "<(&lt;operator&gt;.addition,b[i] + 2)<SUB>34</SUB>>", "225": "<(IDENTIFIER,b,b[i] + 2)<SUB>34</SUB>>", "227": "<(LITERAL,2,b[i] + 2)<SUB>34</SUB>>", "229": "<(&lt;operator&gt;.assignment,res = add(BigInteger.valueOf(r)))<SUB>36</SUB>>", "231": "<(add,add(BigInteger.valueOf(r)))<SUB>36</SUB>>", "233": "<(valueOf,valueOf(r))<SUB>36</SUB>>", "235": "<(IDENTIFIER,r,valueOf(r))<SUB>36</SUB>>", "237": "<(IDENTIFIER,res,res = add(BigInteger.valueOf(l)))<SUB>37</SUB>>", "239": "<(IDENTIFIER,res,add(BigInteger.valueOf(l)))<SUB>37</SUB>>", "241": "<(IDENTIFIER,BigInteger,valueOf(l))<SUB>37</SUB>>", "243": "<(&lt;operator&gt;.assignment,res = subtract(BigInteger.valueOf(rf * a[i])))<SUB>38</SUB>>", "245": "<(subtract,subtract(BigInteger.valueOf(rf * a[i])))<SUB>38</SUB>>", "247": "<(valueOf,valueOf(rf * a[i]))<SUB>38</SUB>>", "249": "<(&lt;operator&gt;.multiplication,rf * a[i])<SUB>38</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>38</SUB>>", "253": "<(IDENTIFIER,i,rf * a[i])<SUB>38</SUB>>", "255": "<(IDENTIFIER,res,res = subtract(BigInteger.valueOf(lf * a[i])))<SUB>39</SUB>>", "257": "<(IDENTIFIER,res,subtract(BigInteger.valueOf(lf * a[i])))<SUB>39</SUB>>", "259": "<(IDENTIFIER,BigInteger,valueOf(lf * a[i]))<SUB>39</SUB>>", "261": "<(IDENTIFIER,lf,lf * a[i])<SUB>39</SUB>>", "263": "<(IDENTIFIER,a,lf * a[i])<SUB>39</SUB>>", "265": "<(add,add(b[i], a[i]))<SUB>41</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>41</SUB>>", "269": "<(IDENTIFIER,i,add(b[i], a[i]))<SUB>41</SUB>>", "271": "<(IDENTIFIER,a,add(b[i], a[i]))<SUB>41</SUB>>", "273": "<(add,add(b[i], 1))<SUB>42</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>42</SUB>>", "277": "<(IDENTIFIER,i,add(b[i], 1))<SUB>42</SUB>>", "279": "<(println,println(res))<SUB>45</SUB>>", "281": "<(IDENTIFIER,res,println(res))<SUB>45</SUB>>", "283": "<(IDENTIFIER,pw,close())<SUB>47</SUB>>", "285": "<(MODIFIER,STATIC)>"}}