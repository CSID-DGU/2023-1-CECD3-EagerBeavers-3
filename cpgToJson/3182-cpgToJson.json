{"edges": [["21", "23"], ["21", "73"], ["21", "74"], ["21", "75"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "71"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "47"], ["43", "53"], ["44", "45"], ["44", "46"], ["47", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["54", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["57", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "68"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["71", "72"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "44"], ["71", "75"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["44", "50"], ["44", "59"], ["30", "28"], ["37", "35"], ["48", "71"], ["50", "48"], ["55", "71"], ["57", "55"], ["59", "64"], ["62", "57"], ["63", "68"], ["68", "62"], ["64", "63"], ["21", "26"], ["22", "75"], ["24", "75"], ["27", "75"], ["27", "75"], ["31", "75"], ["34", "75"], ["34", "75"], ["41", "75"], ["39", "75"], ["39", "75"], ["44", "75"], ["57", "75"], ["57", "75"], ["63", "75"], ["62", "75"], ["68", "75"], ["62", "75"], ["57", "75"], ["55", "75"], ["55", "75"], ["50", "75"], ["50", "75"], ["48", "75"], ["48", "75"], ["71", "75"], ["71", "75"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["55", "71"], ["48", "71"], ["21", "71"], ["27", "41"], ["21", "41"], ["39", "44"], ["21", "44"], ["34", "48"], ["21", "48"], ["50", "48"], ["50", "48"], ["21", "50"], ["44", "50"], ["34", "55"], ["21", "55"], ["57", "55"], ["57", "55"], ["57", "55"], ["21", "57"], ["59", "57"], ["59", "57"], ["63", "57"], ["63", "57"], ["68", "57"], ["68", "57"], ["44", "59"], ["21", "59"], ["63", "62"], ["63", "62"], ["68", "62"], ["68", "62"], ["64", "63"], ["64", "63"], ["21", "63"], ["64", "68"], ["21", "68"], ["59", "64"], ["21", "64"], ["44", "48"], ["44", "68"], ["44", "50"], ["44", "64"], ["44", "59"], ["44", "57"], ["44", "55"], ["44", "62"], ["44", "63"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n &gt;= 0),if (n &gt;= 0))<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,n &gt;= 0)<SUB>5</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "49": "<(IDENTIFIER,out,println(Math.abs(n)))<SUB>6</SUB>>", "51": "<(IDENTIFIER,Math,Math.abs(n))<SUB>6</SUB>>", "53": "<(CONTROL_STRUCTURE,else,else)<SUB>7</SUB>>", "55": "<(println,println(Math.max(n / 10, (n / 100) * 10 + n % 10)))<SUB>8</SUB>>", "57": "<(max,Math.max(n / 10, (n / 100) * 10 + n % 10))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.division,n / 10)<SUB>8</SUB>>", "61": "<(LITERAL,10,n / 10)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.multiplication,(n / 100) * 10)<SUB>8</SUB>>", "65": "<(IDENTIFIER,n,n / 100)<SUB>8</SUB>>", "67": "<(LITERAL,10,(n / 100) * 10)<SUB>8</SUB>>", "69": "<(IDENTIFIER,n,n % 10)<SUB>8</SUB>>", "71": "<(flush,flush())<SUB>10</SUB>>", "73": "<(MODIFIER,PUBLIC)>", "75": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}