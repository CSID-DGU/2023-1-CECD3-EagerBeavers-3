{"edges": [["22", "23"], ["22", "24"], ["22", "310"], ["22", "311"], ["22", "312"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "65"], ["24", "69"], ["24", "102"], ["24", "103"], ["24", "109"], ["24", "110"], ["24", "117"], ["24", "305"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "83"], ["79", "86"], ["79", "94"], ["80", "81"], ["80", "82"], ["83", "7"], ["83", "84"], ["84", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["103", "104"], ["103", "105"], ["105", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "132"], ["127", "133"], ["127", "139"], ["127", "140"], ["127", "146"], ["127", "167"], ["127", "168"], ["127", "171"], ["127", "244"], ["127", "245"], ["127", "251"], ["127", "280"], ["127", "281"], ["127", "287"], ["127", "298"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "164"], ["160", "166"], ["161", "162"], ["161", "163"], ["164", "165"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "179"], ["171", "181"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["181", "183"], ["181", "188"], ["181", "189"], ["181", "194"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "202"], ["194", "205"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["205", "206"], ["206", "207"], ["206", "214"], ["206", "219"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["220", "221"], ["220", "228"], ["220", "233"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["242", "243"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["247", "250"], ["251", "252"], ["251", "253"], ["251", "256"], ["251", "259"], ["251", "261"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["259", "260"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "273"], ["266", "267"], ["266", "271"], ["267", "268"], ["268", "269"], ["268", "270"], ["271", "272"], ["273", "274"], ["273", "278"], ["274", "275"], ["275", "276"], ["275", "277"], ["278", "279"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "285"], ["283", "286"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "297"], ["294", "295"], ["294", "296"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["65", "71"], ["103", "114"], ["110", "119"], ["305", "312"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["67", "65"], ["71", "74"], ["74", "82"], ["74", "106"], ["77", "74"], ["105", "103"], ["112", "110"], ["119", "122"], ["122", "129"], ["122", "308"], ["125", "122"], ["306", "305"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["80", "84"], ["83", "87"], ["86", "95"], ["94", "77"], ["106", "105"], ["114", "112"], ["129", "136"], ["133", "143"], ["140", "148"], ["168", "173"], ["245", "253"], ["281", "290"], ["287", "299"], ["308", "306"], ["32", "30"], ["35", "33"], ["82", "80"], ["84", "83"], ["87", "92"], ["90", "86"], ["95", "100"], ["98", "94"], ["135", "133"], ["142", "140"], ["148", "151"], ["151", "157"], ["151", "168"], ["154", "151"], ["156", "154"], ["173", "176"], ["176", "185"], ["176", "247"], ["179", "176"], ["247", "245"], ["253", "256"], ["256", "262"], ["256", "283"], ["259", "256"], ["283", "281"], ["289", "287"], ["299", "302"], ["299", "125"], ["302", "125"], ["37", "35"], ["92", "90"], ["100", "98"], ["136", "135"], ["143", "142"], ["157", "163"], ["183", "191"], ["189", "196"], ["262", "268"], ["262", "259"], ["290", "294"], ["293", "289"], ["161", "164"], ["164", "156"], ["185", "183"], ["191", "189"], ["195", "202"], ["195", "208"], ["202", "179"], ["294", "293"], ["163", "161"], ["196", "195"], ["196", "199"], ["199", "195"], ["267", "271"], ["267", "275"], ["271", "275"], ["274", "278"], ["274", "259"], ["278", "259"], ["207", "215"], ["207", "222"], ["214", "179"], ["268", "267"], ["275", "274"], ["208", "207"], ["208", "211"], ["211", "207"], ["215", "214"], ["221", "229"], ["221", "237"], ["228", "179"], ["222", "221"], ["222", "225"], ["225", "221"], ["229", "228"], ["235", "242"], ["242", "179"], ["236", "235"], ["237", "240"], ["240", "236"], ["22", "27"], ["23", "312"], ["25", "312"], ["30", "312"], ["33", "312"], ["33", "312"], ["33", "312"], ["28", "312"], ["39", "312"], ["43", "312"], ["42", "312"], ["42", "312"], ["46", "312"], ["55", "312"], ["57", "312"], ["55", "312"], ["53", "312"], ["53", "312"], ["60", "312"], ["60", "312"], ["65", "312"], ["65", "312"], ["65", "312"], ["71", "312"], ["74", "312"], ["74", "312"], ["103", "312"], ["105", "312"], ["103", "312"], ["103", "312"], ["112", "312"], ["112", "312"], ["110", "312"], ["110", "312"], ["119", "312"], ["122", "312"], ["122", "312"], ["122", "312"], ["305", "312"], ["305", "312"], ["305", "312"], ["129", "312"], ["133", "312"], ["133", "312"], ["140", "312"], ["142", "312"], ["140", "312"], ["140", "312"], ["148", "312"], ["168", "312"], ["173", "312"], ["176", "312"], ["176", "312"], ["176", "312"], ["247", "312"], ["245", "312"], ["245", "312"], ["253", "312"], ["256", "312"], ["256", "312"], ["283", "312"], ["281", "312"], ["281", "312"], ["290", "312"], ["289", "312"], ["293", "312"], ["293", "312"], ["289", "312"], ["287", "312"], ["287", "312"], ["299", "312"], ["299", "312"], ["302", "312"], ["302", "312"], ["125", "312"], ["262", "312"], ["267", "312"], ["267", "312"], ["271", "312"], ["274", "312"], ["274", "312"], ["278", "312"], ["259", "312"], ["183", "312"], ["183", "312"], ["189", "312"], ["189", "312"], ["189", "312"], ["196", "312"], ["195", "312"], ["199", "312"], ["195", "312"], ["195", "312"], ["208", "312"], ["207", "312"], ["211", "312"], ["207", "312"], ["207", "312"], ["222", "312"], ["221", "312"], ["225", "312"], ["221", "312"], ["221", "312"], ["235", "312"], ["235", "312"], ["242", "312"], ["228", "312"], ["228", "312"], ["214", "312"], ["214", "312"], ["202", "312"], ["179", "312"], ["156", "312"], ["161", "312"], ["164", "312"], ["164", "312"], ["156", "312"], ["154", "312"], ["80", "312"], ["84", "312"], ["83", "312"], ["83", "312"], ["86", "312"], ["86", "312"], ["94", "312"], ["98", "312"], ["100", "312"], ["98", "312"], ["94", "312"], ["94", "312"], ["77", "312"], ["283", "312"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["67", "65"], ["105", "103"], ["74", "110"], ["22", "110"], ["114", "110"], ["114", "110"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "71"], ["22", "119"], ["110", "305"], ["299", "305"], ["302", "305"], ["22", "305"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["53", "62"], ["22", "62"], ["62", "67"], ["22", "67"], ["71", "74"], ["77", "74"], ["22", "74"], ["67", "74"], ["74", "77"], ["22", "77"], ["22", "80"], ["90", "86"], ["90", "86"], ["98", "94"], ["98", "94"], ["46", "105"], ["22", "105"], ["74", "112"], ["22", "112"], ["114", "112"], ["114", "112"], ["119", "122"], ["125", "122"], ["22", "122"], ["114", "122"], ["294", "122"], ["122", "125"], ["262", "125"], ["196", "125"], ["199", "125"], ["208", "125"], ["211", "125"], ["222", "125"], ["225", "125"], ["22", "125"], ["22", "129"], ["135", "133"], ["142", "140"], ["22", "168"], ["22", "245"], ["283", "281"], ["283", "281"], ["283", "281"], ["290", "287"], ["290", "287"], ["293", "287"], ["293", "287"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["80", "83"], ["22", "83"], ["84", "83"], ["46", "106"], ["22", "106"], ["22", "114"], ["46", "114"], ["22", "148"], ["161", "156"], ["164", "156"], ["22", "156"], ["22", "173"], ["22", "253"], ["245", "287"], ["271", "287"], ["278", "287"], ["22", "287"], ["299", "302"], ["22", "302"], ["43", "84"], ["22", "84"], ["55", "90"], ["98", "90"], ["22", "90"], ["92", "90"], ["90", "98"], ["22", "98"], ["100", "98"], ["122", "135"], ["22", "135"], ["22", "142"], ["122", "142"], ["148", "151"], ["154", "151"], ["22", "151"], ["122", "151"], ["151", "154"], ["22", "154"], ["173", "176"], ["179", "176"], ["22", "176"], ["74", "176"], ["176", "179"], ["22", "179"], ["60", "183"], ["86", "183"], ["65", "189"], ["94", "189"], ["22", "247"], ["253", "256"], ["259", "256"], ["22", "256"], ["151", "256"], ["262", "259"], ["22", "259"], ["22", "283"], ["103", "283"], ["156", "283"], ["256", "283"], ["290", "289"], ["290", "289"], ["293", "289"], ["293", "289"], ["110", "299"], ["302", "299"], ["22", "299"], ["287", "299"], ["83", "92"], ["22", "92"], ["92", "100"], ["22", "100"], ["122", "136"], ["22", "136"], ["22", "143"], ["122", "143"], ["22", "161"], ["22", "166"], ["22", "202"], ["256", "262"], ["22", "262"], ["122", "262"], ["196", "262"], ["199", "262"], ["208", "262"], ["211", "262"], ["222", "262"], ["225", "262"], ["168", "290"], ["242", "290"], ["22", "290"], ["281", "290"], ["294", "293"], ["294", "293"], ["290", "293"], ["22", "293"], ["161", "164"], ["22", "164"], ["196", "195"], ["196", "195"], ["199", "195"], ["199", "195"], ["221", "195"], ["283", "294"], ["22", "294"], ["183", "196"], ["22", "196"], ["122", "196"], ["199", "196"], ["208", "196"], ["211", "196"], ["222", "196"], ["225", "196"], ["189", "199"], ["22", "199"], ["196", "199"], ["22", "214"], ["133", "267"], ["245", "271"], ["278", "271"], ["22", "271"], ["140", "274"], ["245", "278"], ["271", "278"], ["22", "278"], ["208", "207"], ["208", "207"], ["211", "207"], ["211", "207"], ["196", "208"], ["22", "208"], ["196", "208"], ["199", "208"], ["189", "211"], ["199", "211"], ["22", "211"], ["208", "211"], ["22", "228"], ["222", "221"], ["222", "221"], ["225", "221"], ["225", "221"], ["195", "221"], ["208", "222"], ["22", "222"], ["208", "222"], ["211", "222"], ["189", "225"], ["199", "225"], ["211", "225"], ["22", "225"], ["222", "225"], ["189", "235"], ["199", "235"], ["211", "235"], ["225", "235"], ["22", "235"], ["168", "242"], ["22", "242"], ["74", "94"], ["74", "77"], ["74", "98"], ["74", "84"], ["74", "74"], ["74", "95"], ["74", "92"], ["74", "87"], ["74", "90"], ["74", "80"], ["74", "100"], ["74", "86"], ["74", "82"], ["74", "83"], ["122", "136"], ["122", "151"], ["122", "290"], ["122", "283"], ["122", "245"], ["122", "256"], ["122", "168"], ["122", "129"], ["122", "247"], ["122", "148"], ["122", "281"], ["122", "173"], ["122", "289"], ["122", "293"], ["122", "299"], ["122", "122"], ["122", "287"], ["122", "142"], ["122", "294"], ["122", "176"], ["122", "253"], ["122", "140"], ["122", "143"], ["122", "135"], ["122", "125"], ["122", "133"], ["151", "154"], ["151", "161"], ["151", "163"], ["151", "151"], ["151", "164"], ["151", "157"], ["151", "156"], ["176", "179"], ["176", "196"], ["176", "185"], ["176", "189"], ["176", "191"], ["176", "195"], ["176", "183"], ["176", "176"], ["256", "256"], ["256", "262"], ["256", "259"], ["299", "302"], ["262", "275"], ["262", "267"], ["262", "268"], ["262", "274"], ["195", "208"], ["195", "207"], ["195", "202"], ["196", "199"], ["267", "271"], ["274", "278"], ["207", "214"], ["207", "215"], ["207", "221"], ["207", "222"], ["208", "211"], ["221", "240"], ["221", "228"], ["221", "242"], ["221", "235"], ["221", "236"], ["221", "237"], ["221", "229"], ["222", "225"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int m: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[] eu = new int[m])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[m])>", "64": "<(LOCAL,int[] ev: int[])<SUB>7</SUB>>", "66": "<(IDENTIFIER,ev,int[] ev = new int[m])<SUB>7</SUB>>", "68": "<(IDENTIFIER,m,new int[m])<SUB>7</SUB>>", "70": "<(LOCAL,int j: int)<SUB>8</SUB>>", "72": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "74": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>8</SUB>>", "76": "<(IDENTIFIER,m,j &lt; m)<SUB>8</SUB>>", "78": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "80": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(br.readLine()))<SUB>9</SUB>>", "82": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>9</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>9</SUB>>", "85": "<(IDENTIFIER,br,readLine())<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,eu[j])<SUB>10</SUB>>", "89": "<(IDENTIFIER,j,eu[j] = parseInt(st.nextToken()))<SUB>10</SUB>>", "91": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "93": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,ev[j])<SUB>11</SUB>>", "97": "<(IDENTIFIER,j,ev[j] = parseInt(st.nextToken()))<SUB>11</SUB>>", "99": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "101": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.assignment,ANY aa = new A[n + 1])<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.alloc,new A[n + 1])>", "107": "<(IDENTIFIER,n,n + 1)<SUB>13</SUB>>", "109": "<(LOCAL,int min: int)<SUB>14</SUB>>", "111": "<(IDENTIFIER,min,int min = m + n * 3)<SUB>14</SUB>>", "113": "<(IDENTIFIER,m,m + n * 3)<SUB>14</SUB>>", "115": "<(IDENTIFIER,n,n * 3)<SUB>14</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int ctr = 1; Some(ctr &lt;= n); ctr++),for (int ctr = 1; Some(ctr &lt;= n); ctr++))<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,int ctr = 1)<SUB>15</SUB>>", "121": "<(LITERAL,1,int ctr = 1)<SUB>15</SUB>>", "123": "<(IDENTIFIER,ctr,ctr &lt;= n)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,ctr++)<SUB>15</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.assignment,boolean loop = false)<SUB>16</SUB>>", "131": "<(LITERAL,false,boolean loop = false)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.assignment,boolean[] ci = new boolean[n + 1])<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.alloc,new boolean[n + 1])>", "137": "<(IDENTIFIER,n,n + 1)<SUB>17</SUB>>", "139": "<(LOCAL,boolean[] co: boolean[])<SUB>18</SUB>>", "141": "<(IDENTIFIER,co,boolean[] co = new boolean[n + 1])<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.addition,n + 1)<SUB>18</SUB>>", "145": "<(LITERAL,1,n + 1)<SUB>18</SUB>>", "147": "<(LOCAL,int i: int)<SUB>19</SUB>>", "149": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>19</SUB>>", "153": "<(IDENTIFIER,n,i &lt;= n)<SUB>19</SUB>>", "155": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,aa[i])<SUB>20</SUB>>", "159": "<(IDENTIFIER,i,aa[i] = new A())<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "163": "<(&lt;operator&gt;.alloc,new A())<SUB>20</SUB>>", "165": "<(IDENTIFIER,$obj4,new A())>", "167": "<(LOCAL,int m_: int)<SUB>21</SUB>>", "169": "<(IDENTIFIER,m_,int m_ = 0)<SUB>21</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>22</SUB>>", "175": "<(LITERAL,0,int j = 0)<SUB>22</SUB>>", "177": "<(IDENTIFIER,j,j &lt; m)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.assignment,int u = eu[j])<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,eu[j])<SUB>23</SUB>>", "187": "<(IDENTIFIER,j,int u = eu[j])<SUB>23</SUB>>", "189": "<(&lt;operator&gt;.assignment,int v = ev[j])<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,ev[j])<SUB>24</SUB>>", "193": "<(IDENTIFIER,j,int v = ev[j])<SUB>24</SUB>>", "195": "<(&lt;operator&gt;.logicalAnd,u == ctr &amp;&amp; v == ctr)<SUB>25</SUB>>", "197": "<(IDENTIFIER,u,u == ctr)<SUB>25</SUB>>", "199": "<(&lt;operator&gt;.equals,v == ctr)<SUB>25</SUB>>", "201": "<(IDENTIFIER,ctr,v == ctr)<SUB>25</SUB>>", "203": "<(IDENTIFIER,loop,loop = true)<SUB>26</SUB>>", "205": "<(CONTROL_STRUCTURE,else,else)<SUB>27</SUB>>", "207": "<(&lt;operator&gt;.logicalAnd,u == ctr &amp;&amp; v != ctr)<SUB>27</SUB>>", "209": "<(IDENTIFIER,u,u == ctr)<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.notEquals,v != ctr)<SUB>27</SUB>>", "213": "<(IDENTIFIER,ctr,v != ctr)<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,ci[v])<SUB>28</SUB>>", "217": "<(IDENTIFIER,v,ci[v] = true)<SUB>28</SUB>>", "219": "<(CONTROL_STRUCTURE,else,else)<SUB>29</SUB>>", "221": "<(&lt;operator&gt;.logicalAnd,u != ctr &amp;&amp; v == ctr)<SUB>29</SUB>>", "223": "<(IDENTIFIER,u,u != ctr)<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.equals,v == ctr)<SUB>29</SUB>>", "227": "<(IDENTIFIER,ctr,v == ctr)<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,co[u])<SUB>30</SUB>>", "231": "<(IDENTIFIER,u,co[u] = true)<SUB>30</SUB>>", "233": "<(CONTROL_STRUCTURE,else,else)<SUB>31</SUB>>", "235": "<(add,add(v))<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,aa[u])<SUB>32</SUB>>", "239": "<(IDENTIFIER,u,add(v))<SUB>32</SUB>>", "241": "<(IDENTIFIER,v,add(v))<SUB>32</SUB>>", "243": "<(IDENTIFIER,m_,m_++)<SUB>33</SUB>>", "245": "<(&lt;operator&gt;.assignment,int cnt = loop ? 0 : 1)<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.conditional,loop ? 0 : 1)<SUB>36</SUB>>", "249": "<(LITERAL,0,loop ? 0 : 1)<SUB>36</SUB>>", "251": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>37</SUB>>", "255": "<(LITERAL,1,int i = 1)<SUB>37</SUB>>", "257": "<(IDENTIFIER,i,i &lt;= n)<SUB>37</SUB>>", "259": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "261": "<(CONTROL_STRUCTURE,if (i != ctr),if (i != ctr))<SUB>38</SUB>>", "263": "<(IDENTIFIER,i,i != ctr)<SUB>38</SUB>>", "265": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "267": "<(&lt;operator&gt;.logicalNot,!ci[i])<SUB>39</SUB>>", "269": "<(IDENTIFIER,ci,!ci[i])<SUB>39</SUB>>", "271": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>40</SUB>>", "273": "<(CONTROL_STRUCTURE,if (!co[i]),if (!co[i]))<SUB>41</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,co[i])<SUB>41</SUB>>", "277": "<(IDENTIFIER,i,!co[i])<SUB>41</SUB>>", "279": "<(IDENTIFIER,cnt,cnt++)<SUB>42</SUB>>", "281": "<(&lt;operator&gt;.assignment,int m2 = matchings(aa, n))<SUB>44</SUB>>", "283": "<(matchings,matchings(aa, n))<SUB>44</SUB>>", "285": "<(IDENTIFIER,aa,matchings(aa, n))<SUB>44</SUB>>", "287": "<(&lt;operator&gt;.assignmentPlus,cnt += (m_ - m2) + (n - 1 - m2))<SUB>45</SUB>>", "289": "<(&lt;operator&gt;.addition,(m_ - m2) + (n - 1 - m2))<SUB>45</SUB>>", "291": "<(IDENTIFIER,m_,m_ - m2)<SUB>45</SUB>>", "293": "<(&lt;operator&gt;.subtraction,n - 1 - m2)<SUB>45</SUB>>", "295": "<(IDENTIFIER,n,n - 1)<SUB>45</SUB>>", "297": "<(IDENTIFIER,m2,n - 1 - m2)<SUB>45</SUB>>", "299": "<(&lt;operator&gt;.greaterThan,min &gt; cnt)<SUB>46</SUB>>", "301": "<(IDENTIFIER,cnt,min &gt; cnt)<SUB>46</SUB>>", "303": "<(IDENTIFIER,min,min = cnt)<SUB>47</SUB>>", "305": "<(println,System.out.println(min))<SUB>49</SUB>>", "307": "<(IDENTIFIER,System,System.out.println(min))<SUB>49</SUB>>", "309": "<(IDENTIFIER,min,System.out.println(min))<SUB>49</SUB>>", "311": "<(MODIFIER,STATIC)>"}}