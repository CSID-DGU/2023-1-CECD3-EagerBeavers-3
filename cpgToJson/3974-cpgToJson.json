{"edges": [["19", "21"], ["19", "259"], ["19", "260"], ["19", "261"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "52"], ["21", "57"], ["21", "58"], ["21", "59"], ["21", "60"], ["21", "61"], ["21", "73"], ["21", "79"], ["21", "109"], ["21", "135"], ["21", "224"], ["21", "225"], ["21", "228"], ["21", "249"], ["21", "258"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["63", "70"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["79", "88"], ["79", "90"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "95"], ["91", "98"], ["91", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "103"], ["101", "108"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["109", "110"], ["109", "113"], ["109", "116"], ["109", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["135", "136"], ["135", "139"], ["135", "142"], ["135", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "149"], ["145", "152"], ["145", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["155", "156"], ["155", "159"], ["155", "162"], ["155", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["165", "166"], ["165", "169"], ["165", "172"], ["165", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["175", "176"], ["175", "193"], ["176", "177"], ["176", "188"], ["177", "178"], ["177", "187"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["188", "189"], ["188", "190"], ["188", "191"], ["188", "192"], ["193", "194"], ["194", "195"], ["194", "202"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["202", "203"], ["202", "204"], ["202", "217"], ["204", "205"], ["204", "214"], ["205", "206"], ["205", "213"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["228", "235"], ["228", "237"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["239", "248"], ["241", "242"], ["241", "247"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "38"], ["52", "64"], ["61", "76"], ["73", "80"], ["225", "229"], ["249", "258"], ["258", "261"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["38", "43"], ["38", "54"], ["54", "52"], ["63", "61"], ["75", "73"], ["80", "85"], ["83", "92"], ["83", "110"], ["88", "85"], ["110", "113"], ["113", "120"], ["113", "136"], ["116", "113"], ["136", "139"], ["139", "146"], ["139", "225"], ["142", "139"], ["229", "232"], ["232", "243"], ["232", "252"], ["235", "232"], ["237", "235"], ["250", "254"], ["253", "249"], ["28", "26"], ["43", "46"], ["46", "49"], ["49", "54"], ["64", "67"], ["67", "70"], ["70", "63"], ["76", "75"], ["85", "83"], ["119", "129"], ["126", "116"], ["239", "237"], ["252", "250"], ["254", "253"], ["92", "95"], ["95", "104"], ["95", "88"], ["98", "95"], ["120", "123"], ["123", "119"], ["127", "126"], ["146", "149"], ["149", "156"], ["149", "142"], ["152", "149"], ["241", "239"], ["101", "98"], ["128", "127"], ["242", "241"], ["103", "101"], ["129", "128"], ["156", "159"], ["159", "166"], ["159", "152"], ["162", "159"], ["243", "242"], ["104", "103"], ["166", "169"], ["169", "182"], ["169", "162"], ["172", "169"], ["176", "197"], ["176", "172"], ["177", "176"], ["177", "188"], ["188", "176"], ["194", "172"], ["178", "177"], ["195", "209"], ["202", "194"], ["179", "178"], ["196", "195"], ["204", "219"], ["217", "202"], ["180", "179"], ["197", "196"], ["205", "214"], ["214", "204"], ["218", "217"], ["182", "180"], ["206", "205"], ["219", "218"], ["207", "206"], ["209", "207"], ["19", "24"], ["258", "261"], ["20", "261"], ["22", "261"], ["25", "261"], ["25", "261"], ["29", "261"], ["35", "261"], ["33", "261"], ["33", "261"], ["38", "261"], ["43", "261"], ["46", "261"], ["49", "261"], ["49", "261"], ["52", "261"], ["61", "261"], ["61", "261"], ["61", "261"], ["73", "261"], ["75", "261"], ["73", "261"], ["73", "261"], ["83", "261"], ["83", "261"], ["136", "261"], ["139", "261"], ["225", "261"], ["229", "261"], ["232", "261"], ["232", "261"], ["232", "261"], ["249", "261"], ["254", "261"], ["254", "261"], ["253", "261"], ["253", "261"], ["249", "261"], ["249", "261"], ["239", "261"], ["239", "261"], ["237", "261"], ["237", "261"], ["235", "261"], ["146", "261"], ["149", "261"], ["149", "261"], ["142", "261"], ["156", "261"], ["159", "261"], ["159", "261"], ["152", "261"], ["166", "261"], ["169", "261"], ["169", "261"], ["162", "261"], ["177", "261"], ["176", "261"], ["188", "261"], ["176", "261"], ["176", "261"], ["194", "261"], ["202", "261"], ["204", "261"], ["204", "261"], ["202", "261"], ["194", "261"], ["194", "261"], ["172", "261"], ["119", "261"], ["123", "261"], ["119", "261"], ["119", "261"], ["126", "261"], ["126", "261"], ["116", "261"], ["92", "261"], ["95", "261"], ["95", "261"], ["88", "261"], ["101", "261"], ["101", "261"], ["98", "261"], ["101", "261"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["54", "52"], ["54", "52"], ["63", "61"], ["63", "61"], ["75", "73"], ["19", "225"], ["19", "258"], ["22", "25"], ["19", "25"], ["19", "80"], ["19", "110"], ["19", "136"], ["19", "229"], ["239", "237"], ["239", "237"], ["239", "237"], ["253", "249"], ["253", "249"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["29", "38"], ["19", "38"], ["33", "38"], ["38", "43"], ["19", "43"], ["38", "46"], ["19", "46"], ["43", "49"], ["19", "49"], ["19", "54"], ["38", "54"], ["46", "54"], ["38", "63"], ["49", "63"], ["19", "63"], ["67", "63"], ["67", "63"], ["70", "63"], ["70", "63"], ["76", "75"], ["76", "75"], ["80", "83"], ["88", "83"], ["19", "83"], ["38", "83"], ["49", "83"], ["83", "88"], ["19", "88"], ["110", "113"], ["116", "113"], ["19", "113"], ["52", "113"], ["95", "113"], ["123", "116"], ["19", "116"], ["123", "119"], ["123", "119"], ["19", "126"], ["136", "139"], ["142", "139"], ["19", "139"], ["38", "139"], ["49", "139"], ["139", "142"], ["182", "142"], ["209", "142"], ["19", "142"], ["229", "232"], ["235", "232"], ["19", "232"], ["113", "232"], ["149", "232"], ["232", "235"], ["19", "235"], ["254", "253"], ["254", "253"], ["225", "253"], ["237", "253"], ["19", "253"], ["38", "64"], ["49", "64"], ["19", "64"], ["19", "67"], ["54", "67"], ["19", "70"], ["67", "70"], ["19", "76"], ["70", "76"], ["19", "85"], ["38", "85"], ["49", "85"], ["19", "92"], ["19", "146"], ["202", "239"], ["19", "239"], ["225", "239"], ["237", "239"], ["139", "254"], ["19", "254"], ["76", "254"], ["92", "95"], ["98", "95"], ["19", "95"], ["52", "95"], ["95", "98"], ["19", "98"], ["19", "123"], ["113", "123"], ["146", "149"], ["152", "149"], ["19", "149"], ["113", "149"], ["159", "149"], ["149", "152"], ["188", "152"], ["19", "152"], ["19", "101"], ["19", "156"], ["156", "159"], ["162", "159"], ["19", "159"], ["149", "159"], ["169", "159"], ["159", "162"], ["188", "162"], ["19", "162"], ["19", "166"], ["166", "169"], ["172", "169"], ["19", "169"], ["159", "169"], ["169", "172"], ["188", "172"], ["19", "172"], ["177", "176"], ["177", "176"], ["188", "176"], ["188", "176"], ["188", "176"], ["188", "176"], ["202", "194"], ["202", "194"], ["202", "194"], ["19", "177"], ["123", "188"], ["19", "188"], ["159", "188"], ["169", "188"], ["149", "188"], ["19", "202"], ["177", "202"], ["73", "202"], ["194", "202"], ["177", "204"], ["73", "204"], ["139", "182"], ["209", "182"], ["19", "182"], ["182", "209"], ["19", "209"], ["38", "43"], ["38", "49"], ["38", "46"], ["83", "85"], ["83", "95"], ["83", "92"], ["83", "88"], ["83", "83"], ["113", "120"], ["113", "113"], ["113", "128"], ["113", "119"], ["113", "129"], ["113", "127"], ["113", "116"], ["113", "123"], ["113", "126"], ["139", "146"], ["139", "149"], ["139", "139"], ["139", "142"], ["232", "232"], ["232", "243"], ["232", "242"], ["232", "239"], ["232", "235"], ["232", "237"], ["232", "241"], ["95", "98"], ["95", "103"], ["95", "104"], ["95", "95"], ["95", "101"], ["149", "149"], ["149", "152"], ["149", "159"], ["149", "156"], ["159", "169"], ["159", "162"], ["159", "166"], ["159", "159"], ["169", "169"], ["169", "179"], ["169", "178"], ["169", "182"], ["169", "180"], ["169", "176"], ["169", "177"], ["169", "172"], ["176", "214"], ["176", "209"], ["176", "196"], ["176", "197"], ["176", "204"], ["176", "206"], ["176", "195"], ["176", "207"], ["176", "194"], ["176", "202"], ["176", "205"], ["176", "217"], ["176", "218"], ["176", "219"], ["177", "188"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>5</SUB>>", "31": "<(nextInt,nextInt())<SUB>5</SUB>>", "33": "<(&lt;operator&gt;.assignment,m = nextInt())<SUB>6</SUB>>", "35": "<(nextInt,nextInt())<SUB>6</SUB>>", "37": "<(CONTROL_STRUCTURE,if (n &lt; m),if (n &lt; m))<SUB>7</SUB>>", "39": "<(IDENTIFIER,n,n &lt; m)<SUB>7</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,int t = m)<SUB>8</SUB>>", "45": "<(IDENTIFIER,m,int t = m)<SUB>8</SUB>>", "47": "<(IDENTIFIER,m,m = n)<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.assignment,n = t)<SUB>10</SUB>>", "51": "<(IDENTIFIER,t,n = t)<SUB>10</SUB>>", "53": "<(IDENTIFIER,maxm,maxm = 1 &lt;&lt; m)<SUB>13</SUB>>", "55": "<(LITERAL,1,1 &lt;&lt; m)<SUB>13</SUB>>", "57": "<(LOCAL,int i: int)<SUB>14</SUB>>", "59": "<(LOCAL,int k: int)<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.assignment,dp = new int[n + 1][1 &lt;&lt; m][1 &lt;&lt; m])<SUB>15</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n + 1][1 &lt;&lt; m][1 &lt;&lt; m])>", "65": "<(IDENTIFIER,n,n + 1)<SUB>15</SUB>>", "67": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>15</SUB>>", "69": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>15</SUB>>", "71": "<(LITERAL,1,1 &lt;&lt; m)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.assignment,s = new int[1 &lt;&lt; m])<SUB>16</SUB>>", "75": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; m])>", "77": "<(LITERAL,1,1 &lt;&lt; m)<SUB>16</SUB>>", "79": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n + 1); i++),for (i = 0; Some(i &lt; n + 1); i++))<SUB>18</SUB>>", "81": "<(IDENTIFIER,i,i = 0)<SUB>18</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; n + 1)<SUB>18</SUB>>", "85": "<(&lt;operator&gt;.addition,n + 1)<SUB>18</SUB>>", "87": "<(LITERAL,1,n + 1)<SUB>18</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "91": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; maxm); j++),for (j = 0; Some(j &lt; maxm); j++))<SUB>19</SUB>>", "93": "<(IDENTIFIER,j,j = 0)<SUB>19</SUB>>", "95": "<(&lt;operator&gt;.lessThan,j &lt; maxm)<SUB>19</SUB>>", "97": "<(IDENTIFIER,maxm,j &lt; maxm)<SUB>19</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "101": "<(fill,fill(dp[i][j], 100))<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>20</SUB>>", "105": "<(IDENTIFIER,dp,fill(dp[i][j], 100))<SUB>20</SUB>>", "107": "<(IDENTIFIER,j,fill(dp[i][j], 100))<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; maxm); i++),for (i = 0; Some(i &lt; maxm); i++))<SUB>24</SUB>>", "111": "<(IDENTIFIER,i,i = 0)<SUB>24</SUB>>", "113": "<(&lt;operator&gt;.lessThan,i &lt; maxm)<SUB>24</SUB>>", "115": "<(IDENTIFIER,maxm,i &lt; maxm)<SUB>24</SUB>>", "117": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "119": "<(&lt;operator&gt;.assignment,s[i] = cal(i))<SUB>25</SUB>>", "121": "<(IDENTIFIER,s,s[i] = cal(i))<SUB>25</SUB>>", "123": "<(cal,cal(i))<SUB>25</SUB>>", "125": "<(IDENTIFIER,i,cal(i))<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,dp[0][0][i])<SUB>26</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>26</SUB>>", "131": "<(LITERAL,0,dp[0][0][i] = 0)<SUB>26</SUB>>", "133": "<(IDENTIFIER,i,dp[0][0][i] = 0)<SUB>26</SUB>>", "135": "<(CONTROL_STRUCTURE,for (i = 1; Some(i &lt;= n); i++),for (i = 1; Some(i &lt;= n); i++))<SUB>29</SUB>>", "137": "<(IDENTIFIER,i,i = 1)<SUB>29</SUB>>", "139": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>29</SUB>>", "141": "<(IDENTIFIER,n,i &lt;= n)<SUB>29</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "145": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; maxm); j++),for (j = 0; Some(j &lt; maxm); j++))<SUB>30</SUB>>", "147": "<(IDENTIFIER,j,j = 0)<SUB>30</SUB>>", "149": "<(&lt;operator&gt;.lessThan,j &lt; maxm)<SUB>30</SUB>>", "151": "<(IDENTIFIER,maxm,j &lt; maxm)<SUB>30</SUB>>", "153": "<(IDENTIFIER,j,j++)<SUB>30</SUB>>", "155": "<(CONTROL_STRUCTURE,for (k = 0; Some(k &lt; maxm); k++),for (k = 0; Some(k &lt; maxm); k++))<SUB>31</SUB>>", "157": "<(IDENTIFIER,k,k = 0)<SUB>31</SUB>>", "159": "<(&lt;operator&gt;.lessThan,k &lt; maxm)<SUB>31</SUB>>", "161": "<(IDENTIFIER,maxm,k &lt; maxm)<SUB>31</SUB>>", "163": "<(IDENTIFIER,k,k++)<SUB>31</SUB>>", "165": "<(CONTROL_STRUCTURE,for (l = 0; Some(l &lt; maxm); l++),for (l = 0; Some(l &lt; maxm); l++))<SUB>32</SUB>>", "167": "<(IDENTIFIER,l,l = 0)<SUB>32</SUB>>", "169": "<(&lt;operator&gt;.lessThan,l &lt; maxm)<SUB>32</SUB>>", "171": "<(IDENTIFIER,maxm,l &lt; maxm)<SUB>32</SUB>>", "173": "<(IDENTIFIER,l,l++)<SUB>32</SUB>>", "175": "<(CONTROL_STRUCTURE,if (dp[i - 1][k][l] != 100 &amp;&amp; check(k, l, j)),if (dp[i - 1][k][l] != 100 &amp;&amp; check(k, l, j)))<SUB>33</SUB>>", "177": "<(&lt;operator&gt;.notEquals,dp[i - 1][k][l] != 100)<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[i - 1][k])<SUB>33</SUB>>", "181": "<(IDENTIFIER,dp,dp[i - 1][k][l] != 100)<SUB>33</SUB>>", "183": "<(IDENTIFIER,i,i - 1)<SUB>33</SUB>>", "185": "<(IDENTIFIER,k,dp[i - 1][k][l] != 100)<SUB>33</SUB>>", "187": "<(LITERAL,100,dp[i - 1][k][l] != 100)<SUB>33</SUB>>", "189": "<(IDENTIFIER,this,check(k, l, j))<SUB>33</SUB>>", "191": "<(IDENTIFIER,l,check(k, l, j))<SUB>33</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dp[i][l][j])<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>34</SUB>>", "199": "<(IDENTIFIER,i,dp[i][l][j] = min(dp[i - 1][k][l] + s[l], dp[i][l][j]))<SUB>34</SUB>>", "201": "<(IDENTIFIER,j,dp[i][l][j] = min(dp[i - 1][k][l] + s[l], dp[i][l][j]))<SUB>34</SUB>>", "203": "<(IDENTIFIER,Math,min(dp[i - 1][k][l] + s[l], dp[i][l][j]))<SUB>34</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp[i - 1][k][l])<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>34</SUB>>", "209": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>34</SUB>>", "211": "<(LITERAL,1,i - 1)<SUB>34</SUB>>", "213": "<(IDENTIFIER,l,dp[i - 1][k][l] + s[l])<SUB>34</SUB>>", "215": "<(IDENTIFIER,s,dp[i - 1][k][l] + s[l])<SUB>34</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dp[i][l][j])<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>34</SUB>>", "221": "<(IDENTIFIER,i,min(dp[i - 1][k][l] + s[l], dp[i][l][j]))<SUB>34</SUB>>", "223": "<(IDENTIFIER,j,min(dp[i - 1][k][l] + s[l], dp[i][l][j]))<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.assignment,int ans = 100)<SUB>41</SUB>>", "227": "<(LITERAL,100,int ans = 100)<SUB>41</SUB>>", "229": "<(&lt;operator&gt;.assignment,i = 0)<SUB>42</SUB>>", "231": "<(LITERAL,0,i = 0)<SUB>42</SUB>>", "233": "<(IDENTIFIER,i,i &lt; maxm)<SUB>42</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "237": "<(&lt;operator&gt;.assignment,ans = min(dp[n][i][0], ans))<SUB>43</SUB>>", "239": "<(min,min(dp[n][i][0], ans))<SUB>43</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,dp[n][i][0])<SUB>43</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[n])<SUB>43</SUB>>", "245": "<(IDENTIFIER,n,min(dp[n][i][0], ans))<SUB>43</SUB>>", "247": "<(LITERAL,0,min(dp[n][i][0], ans))<SUB>43</SUB>>", "249": "<(println,println(n * m - ans))<SUB>45</SUB>>", "251": "<(IDENTIFIER,System,println(n * m - ans))<SUB>45</SUB>>", "253": "<(&lt;operator&gt;.subtraction,n * m - ans)<SUB>45</SUB>>", "255": "<(IDENTIFIER,n,n * m)<SUB>45</SUB>>", "257": "<(IDENTIFIER,ans,n * m - ans)<SUB>45</SUB>>", "259": "<(MODIFIER,PUBLIC)>", "261": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}