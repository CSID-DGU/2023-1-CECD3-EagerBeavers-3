{"edges": [["19", "20"], ["19", "21"], ["19", "122"], ["19", "123"], ["19", "124"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "58"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "114"], ["21", "117"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "75"], ["65", "77"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "92"], ["78", "96"], ["79", "80"], ["79", "87"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["97", "111"], ["98", "99"], ["98", "106"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "39"], ["37", "43"], ["58", "62"], ["62", "67"], ["114", "120"], ["117", "124"], ["24", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["43", "46"], ["46", "53"], ["46", "58"], ["49", "46"], ["67", "72"], ["70", "83"], ["70", "114"], ["75", "72"], ["118", "117"], ["52", "49"], ["72", "70"], ["120", "118"], ["53", "56"], ["56", "52"], ["79", "93"], ["79", "102"], ["80", "88"], ["87", "79"], ["93", "75"], ["81", "80"], ["88", "87"], ["98", "112"], ["98", "75"], ["83", "81"], ["99", "107"], ["106", "98"], ["112", "75"], ["100", "99"], ["107", "106"], ["102", "100"], ["19", "24"], ["20", "124"], ["22", "124"], ["25", "124"], ["27", "124"], ["27", "124"], ["32", "124"], ["34", "124"], ["32", "124"], ["32", "124"], ["37", "124"], ["37", "124"], ["46", "124"], ["58", "124"], ["58", "124"], ["62", "124"], ["67", "124"], ["70", "124"], ["72", "124"], ["70", "124"], ["70", "124"], ["114", "124"], ["117", "124"], ["117", "124"], ["117", "124"], ["80", "124"], ["79", "124"], ["87", "124"], ["87", "124"], ["79", "124"], ["79", "124"], ["99", "124"], ["98", "124"], ["106", "124"], ["106", "124"], ["98", "124"], ["98", "124"], ["112", "124"], ["75", "124"], ["52", "124"], ["56", "124"], ["52", "124"], ["52", "124"], ["49", "124"], ["58", "124"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["39", "37"], ["19", "62"], ["19", "114"], ["22", "25"], ["19", "25"], ["19", "43"], ["19", "58"], ["37", "58"], ["52", "58"], ["19", "67"], ["62", "114"], ["112", "114"], ["93", "114"], ["114", "117"], ["19", "117"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "39"], ["19", "39"], ["43", "46"], ["49", "46"], ["19", "46"], ["39", "46"], ["46", "49"], ["19", "49"], ["56", "52"], ["67", "70"], ["75", "70"], ["19", "70"], ["72", "70"], ["72", "70"], ["19", "75"], ["70", "75"], ["46", "72"], ["19", "72"], ["34", "56"], ["19", "56"], ["80", "79"], ["80", "79"], ["58", "79"], ["52", "79"], ["19", "79"], ["19", "93"], ["58", "80"], ["99", "80"], ["32", "80"], ["19", "80"], ["99", "80"], ["58", "87"], ["52", "87"], ["80", "87"], ["19", "87"], ["62", "93"], ["112", "93"], ["99", "98"], ["99", "98"], ["58", "98"], ["19", "98"], ["70", "83"], ["19", "83"], ["58", "99"], ["80", "99"], ["19", "99"], ["80", "99"], ["58", "106"], ["99", "106"], ["19", "106"], ["62", "112"], ["93", "112"], ["19", "112"], ["19", "102"], ["70", "102"], ["46", "49"], ["46", "52"], ["46", "46"], ["46", "56"], ["46", "53"], ["70", "75"], ["70", "81"], ["70", "72"], ["70", "87"], ["70", "79"], ["70", "80"], ["70", "83"], ["70", "88"], ["70", "70"], ["79", "107"], ["79", "98"], ["79", "99"], ["79", "102"], ["79", "106"], ["79", "93"], ["79", "100"], ["98", "112"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scan())<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scan())<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scan())<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,int n = scanInt())<SUB>4</SUB>>", "29": "<(scanInt,scanInt())<SUB>4</SUB>>", "31": "<(LOCAL,long d: long)<SUB>5</SUB>>", "33": "<(IDENTIFIER,d,long d = scanLong())<SUB>5</SUB>>", "35": "<(IDENTIFIER,scan,scanLong())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,long[] a = new long[n])<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.alloc,new long[n])>", "41": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "45": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "47": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,a[i] = scanLong())<SUB>8</SUB>>", "57": "<(IDENTIFIER,scan,scanLong())<SUB>8</SUB>>", "59": "<(IDENTIFIER,Arrays,sort(a))<SUB>10</SUB>>", "61": "<(LOCAL,int count: int)<SUB>11</SUB>>", "63": "<(IDENTIFIER,count,int count = 0)<SUB>11</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>12</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>12</SUB>>", "73": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.greaterThan,(a[i + 1] - d) &gt; (a[i] + d))<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i + 1])<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.addition,i + 1)<SUB>13</SUB>>", "85": "<(LITERAL,1,i + 1)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.addition,a[i] + d)<SUB>13</SUB>>", "89": "<(IDENTIFIER,a,a[i] + d)<SUB>13</SUB>>", "91": "<(IDENTIFIER,d,a[i] + d)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignmentPlus,count += 2)<SUB>14</SUB>>", "95": "<(LITERAL,2,count += 2)<SUB>14</SUB>>", "97": "<(CONTROL_STRUCTURE,if ((a[i + 1] - d) == (a[i] + d)),if ((a[i + 1] - d) == (a[i] + d)))<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.subtraction,a[i + 1] - d)<SUB>15</SUB>>", "101": "<(IDENTIFIER,a,a[i + 1] - d)<SUB>15</SUB>>", "103": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "105": "<(IDENTIFIER,d,a[i + 1] - d)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,a[i] + d)<SUB>15</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "113": "<(IDENTIFIER,count,count++)<SUB>16</SUB>>", "115": "<(IDENTIFIER,count,count += 2)<SUB>19</SUB>>", "117": "<(println,System.out.println(count))<SUB>20</SUB>>", "119": "<(IDENTIFIER,System,System.out.println(count))<SUB>20</SUB>>", "121": "<(IDENTIFIER,count,System.out.println(count))<SUB>20</SUB>>", "123": "<(MODIFIER,STATIC)>"}}