{"edges": [["21", "23"], ["21", "333"], ["21", "334"], ["21", "335"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "331"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "46"], ["42", "43"], ["42", "45"], ["43", "44"], ["46", "47"], ["46", "48"], ["46", "52"], ["46", "53"], ["46", "57"], ["46", "58"], ["46", "62"], ["46", "63"], ["46", "68"], ["46", "98"], ["46", "123"], ["46", "126"], ["46", "127"], ["46", "132"], ["46", "133"], ["46", "137"], ["46", "142"], ["46", "147"], ["46", "148"], ["46", "154"], ["46", "155"], ["46", "160"], ["46", "248"], ["46", "324"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "117"], ["113", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "140"], ["140", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "153"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "165"], ["160", "168"], ["160", "170"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "180"], ["172", "173"], ["172", "174"], ["174", "175"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "182"], ["180", "185"], ["180", "188"], ["180", "190"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["190", "191"], ["190", "243"], ["191", "192"], ["191", "193"], ["191", "196"], ["191", "199"], ["191", "201"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["199", "200"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "229"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "214"], ["206", "216"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "235"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["235", "237"], ["235", "242"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "259"], ["248", "261"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["255", "258"], ["259", "260"], ["261", "262"], ["262", "263"], ["262", "264"], ["262", "269"], ["262", "272"], ["262", "274"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["272", "273"], ["274", "275"], ["275", "276"], ["275", "277"], ["275", "280"], ["275", "283"], ["275", "290"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["290", "291"], ["290", "299"], ["290", "319"], ["291", "292"], ["291", "298"], ["292", "293"], ["292", "296"], ["293", "294"], ["293", "295"], ["296", "297"], ["299", "300"], ["299", "303"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["303", "308"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "312"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["324", "325"], ["324", "326"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "330"], ["331", "332"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "43"], ["331", "335"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["42", "50"], ["42", "331"], ["34", "32"], ["43", "42"], ["48", "55"], ["53", "60"], ["58", "65"], ["63", "70"], ["123", "129"], ["127", "135"], ["133", "140"], ["137", "143"], ["142", "150"], ["148", "157"], ["155", "162"], ["324", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["70", "73"], ["73", "81"], ["73", "100"], ["76", "73"], ["100", "103"], ["103", "110"], ["103", "123"], ["106", "103"], ["129", "127"], ["135", "133"], ["140", "137"], ["143", "142"], ["150", "148"], ["157", "155"], ["162", "165"], ["165", "176"], ["165", "250"], ["168", "165"], ["250", "255"], ["253", "266"], ["253", "328"], ["259", "255"], ["326", "324"], ["109", "106"], ["172", "182"], ["255", "253"], ["328", "326"], ["81", "84"], ["84", "92"], ["84", "76"], ["87", "84"], ["110", "116"], ["174", "172"], ["182", "185"], ["185", "193"], ["185", "168"], ["188", "185"], ["264", "269"], ["269", "277"], ["269", "259"], ["272", "269"], ["90", "87"], ["114", "119"], ["117", "109"], ["175", "174"], ["243", "188"], ["266", "264"], ["91", "96"], ["96", "90"], ["116", "114"], ["119", "117"], ["176", "179"], ["179", "175"], ["193", "196"], ["196", "203"], ["196", "245"], ["199", "196"], ["245", "243"], ["277", "280"], ["280", "293"], ["280", "272"], ["283", "280"], ["92", "91"], ["203", "208"], ["229", "199"], ["285", "283"], ["299", "320"], ["208", "211"], ["211", "219"], ["211", "231"], ["214", "211"], ["230", "238"], ["235", "229"], ["286", "285"], ["292", "286"], ["292", "300"], ["300", "305"], ["303", "299"], ["320", "272"], ["320", "286"], ["217", "226"], ["217", "214"], ["224", "214"], ["231", "230"], ["237", "235"], ["293", "296"], ["296", "292"], ["305", "309"], ["308", "303"], ["218", "217"], ["226", "224"], ["238", "237"], ["309", "313"], ["312", "308"], ["219", "218"], ["313", "316"], ["316", "312"], ["21", "26"], ["22", "335"], ["24", "335"], ["27", "335"], ["28", "335"], ["31", "335"], ["31", "335"], ["39", "335"], ["37", "335"], ["37", "335"], ["43", "335"], ["42", "335"], ["42", "335"], ["331", "335"], ["331", "335"], ["48", "335"], ["55", "335"], ["53", "335"], ["53", "335"], ["58", "335"], ["58", "335"], ["63", "335"], ["63", "335"], ["63", "335"], ["73", "335"], ["103", "335"], ["123", "335"], ["123", "335"], ["127", "335"], ["127", "335"], ["133", "335"], ["133", "335"], ["137", "335"], ["137", "335"], ["137", "335"], ["137", "335"], ["142", "335"], ["142", "335"], ["148", "335"], ["155", "335"], ["155", "335"], ["155", "335"], ["165", "335"], ["165", "335"], ["250", "335"], ["253", "335"], ["255", "335"], ["255", "335"], ["255", "335"], ["253", "335"], ["253", "335"], ["328", "335"], ["324", "335"], ["324", "335"], ["264", "335"], ["269", "335"], ["269", "335"], ["259", "335"], ["277", "335"], ["280", "335"], ["280", "335"], ["292", "335"], ["292", "335"], ["292", "335"], ["299", "335"], ["308", "335"], ["308", "335"], ["303", "335"], ["299", "335"], ["299", "335"], ["320", "335"], ["320", "335"], ["272", "335"], ["285", "335"], ["283", "335"], ["283", "335"], ["172", "335"], ["172", "335"], ["172", "335"], ["182", "335"], ["185", "335"], ["185", "335"], ["168", "335"], ["193", "335"], ["196", "335"], ["196", "335"], ["243", "335"], ["243", "335"], ["243", "335"], ["188", "335"], ["203", "335"], ["208", "335"], ["211", "335"], ["211", "335"], ["229", "335"], ["235", "335"], ["229", "335"], ["229", "335"], ["199", "335"], ["218", "335"], ["217", "335"], ["217", "335"], ["224", "335"], ["224", "335"], ["214", "335"], ["109", "335"], ["114", "335"], ["117", "335"], ["117", "335"], ["117", "335"], ["109", "335"], ["106", "335"], ["81", "335"], ["84", "335"], ["84", "335"], ["76", "335"], ["90", "335"], ["96", "335"], ["90", "335"], ["90", "335"], ["87", "335"], ["245", "335"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "331"], ["324", "331"], ["21", "331"], ["27", "39"], ["21", "39"], ["43", "42"], ["21", "42"], ["50", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["65", "63"], ["129", "127"], ["129", "127"], ["135", "133"], ["21", "142"], ["150", "148"], ["150", "148"], ["150", "148"], ["157", "155"], ["157", "155"], ["37", "43"], ["21", "43"], ["21", "70"], ["21", "100"], ["137", "123"], ["21", "123"], ["58", "123"], ["109", "123"], ["123", "137"], ["21", "137"], ["133", "137"], ["142", "137"], ["324", "137"], ["292", "137"], ["299", "137"], ["140", "137"], ["21", "162"], ["21", "250"], ["31", "324"], ["21", "324"], ["137", "324"], ["39", "50"], ["55", "50"], ["96", "50"], ["21", "50"], ["50", "55"], ["21", "55"], ["53", "60"], ["21", "60"], ["60", "65"], ["21", "65"], ["48", "65"], ["70", "73"], ["76", "73"], ["21", "73"], ["65", "73"], ["73", "76"], ["21", "76"], ["100", "103"], ["106", "103"], ["21", "103"], ["65", "103"], ["84", "103"], ["103", "106"], ["21", "106"], ["114", "109"], ["117", "109"], ["21", "109"], ["21", "129"], ["73", "129"], ["127", "135"], ["21", "135"], ["21", "140"], ["255", "150"], ["21", "150"], ["129", "150"], ["103", "150"], ["148", "157"], ["21", "157"], ["135", "157"], ["162", "165"], ["168", "165"], ["21", "165"], ["157", "165"], ["165", "168"], ["21", "168"], ["174", "172"], ["250", "253"], ["259", "253"], ["21", "253"], ["255", "253"], ["255", "253"], ["255", "253"], ["253", "259"], ["21", "259"], ["21", "81"], ["21", "182"], ["150", "255"], ["303", "255"], ["235", "255"], ["21", "255"], ["150", "255"], ["185", "255"], ["150", "255"], ["266", "264"], ["266", "264"], ["157", "328"], ["266", "328"], ["196", "328"], ["21", "328"], ["81", "84"], ["87", "84"], ["21", "84"], ["65", "84"], ["84", "87"], ["21", "87"], ["96", "90"], ["21", "114"], ["21", "122"], ["182", "185"], ["188", "185"], ["21", "185"], ["150", "185"], ["211", "185"], ["185", "188"], ["21", "188"], ["245", "243"], ["245", "243"], ["264", "269"], ["272", "269"], ["21", "269"], ["316", "272"], ["285", "272"], ["21", "272"], ["269", "272"], ["114", "117"], ["21", "117"], ["63", "117"], ["21", "193"], ["157", "266"], ["196", "266"], ["21", "266"], ["269", "277"], ["21", "277"], ["285", "283"], ["285", "283"], ["55", "96"], ["21", "96"], ["193", "196"], ["199", "196"], ["21", "196"], ["157", "196"], ["196", "199"], ["218", "199"], ["21", "199"], ["21", "203"], ["235", "229"], ["235", "229"], ["235", "229"], ["21", "245"], ["172", "245"], ["243", "245"], ["277", "280"], ["283", "280"], ["21", "280"], ["303", "299"], ["303", "299"], ["303", "299"], ["21", "208"], ["286", "285"], ["286", "285"], ["316", "285"], ["21", "285"], ["269", "285"], ["208", "211"], ["214", "211"], ["21", "211"], ["185", "211"], ["219", "214"], ["21", "214"], ["172", "224"], ["243", "224"], ["150", "235"], ["21", "235"], ["229", "235"], ["203", "235"], ["224", "235"], ["280", "286"], ["320", "286"], ["21", "286"], ["137", "292"], ["296", "292"], ["255", "303"], ["21", "303"], ["137", "303"], ["299", "303"], ["292", "303"], ["316", "320"], ["21", "320"], ["218", "217"], ["218", "217"], ["21", "217"], ["203", "224"], ["21", "224"], ["21", "296"], ["137", "308"], ["292", "308"], ["219", "218"], ["219", "218"], ["196", "218"], ["21", "218"], ["21", "219"], ["211", "219"], ["285", "316"], ["21", "316"], ["269", "316"], ["280", "316"], ["42", "60"], ["42", "42"], ["42", "150"], ["42", "162"], ["42", "326"], ["42", "50"], ["42", "129"], ["42", "148"], ["42", "324"], ["42", "100"], ["42", "70"], ["42", "127"], ["42", "48"], ["42", "123"], ["42", "65"], ["42", "253"], ["42", "140"], ["42", "328"], ["42", "53"], ["42", "135"], ["42", "55"], ["42", "133"], ["42", "73"], ["42", "103"], ["42", "255"], ["42", "137"], ["42", "43"], ["42", "58"], ["42", "155"], ["42", "142"], ["42", "157"], ["42", "143"], ["42", "165"], ["42", "63"], ["42", "250"], ["73", "84"], ["73", "76"], ["73", "73"], ["73", "81"], ["103", "114"], ["103", "116"], ["103", "117"], ["103", "109"], ["103", "103"], ["103", "119"], ["103", "106"], ["103", "110"], ["165", "168"], ["165", "174"], ["165", "182"], ["165", "176"], ["165", "172"], ["165", "179"], ["165", "185"], ["165", "165"], ["165", "175"], ["253", "264"], ["253", "253"], ["253", "269"], ["253", "255"], ["253", "259"], ["253", "266"], ["84", "84"], ["84", "96"], ["84", "92"], ["84", "87"], ["84", "91"], ["84", "90"], ["185", "188"], ["185", "196"], ["185", "243"], ["185", "185"], ["185", "245"], ["185", "193"], ["269", "272"], ["269", "269"], ["269", "280"], ["269", "277"], ["196", "230"], ["196", "196"], ["196", "208"], ["196", "238"], ["196", "237"], ["196", "199"], ["196", "229"], ["196", "231"], ["196", "235"], ["196", "211"], ["196", "203"], ["280", "292"], ["280", "296"], ["280", "293"], ["211", "214"], ["211", "217"], ["211", "211"], ["211", "218"], ["211", "219"], ["292", "308"], ["292", "283"], ["292", "300"], ["292", "305"], ["292", "316"], ["292", "320"], ["292", "309"], ["292", "285"], ["292", "280"], ["292", "286"], ["292", "299"], ["292", "313"], ["292", "303"], ["292", "312"], ["320", "283"], ["320", "285"], ["320", "280"], ["320", "286"], ["217", "226"], ["217", "224"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.postDecrement,t--)<SUB>5</SUB>>", "45": "<(LITERAL,0,t-- &gt; 0)<SUB>5</SUB>>", "47": "<(LOCAL,int n: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,scanner,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(LOCAL,Col[] cols: ANY)<SUB>8</SUB>>", "59": "<(IDENTIFIER,cols,ANY cols = new Col[m])<SUB>8</SUB>>", "61": "<(IDENTIFIER,m,new Col[m])<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[][] mat = new int[m][n])<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[m][n])>", "67": "<(IDENTIFIER,n,new int[m][n])<SUB>9</SUB>>", "69": "<(LOCAL,int i: int)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "85": "<(IDENTIFIER,j,j &lt; m)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,mat[j][i])<SUB>12</SUB>>", "93": "<(IDENTIFIER,mat,mat[j][i] = nextInt())<SUB>12</SUB>>", "95": "<(IDENTIFIER,i,mat[j][i] = nextInt())<SUB>12</SUB>>", "97": "<(IDENTIFIER,scanner,nextInt())<SUB>12</SUB>>", "99": "<(LOCAL,int i: int)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>15</SUB>>", "105": "<(IDENTIFIER,m,i &lt; m)<SUB>15</SUB>>", "107": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.assignment,cols[i] = new Col(mat[i]))<SUB>16</SUB>>", "111": "<(IDENTIFIER,cols,cols[i] = new Col(mat[i]))<SUB>16</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "115": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "117": "<(&lt;init&gt;,new Col(mat[i]))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,i,new Col(mat[i]))<SUB>16</SUB>>", "123": "<(sort,sort(cols))<SUB>18</SUB>>", "125": "<(IDENTIFIER,cols,sort(cols))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.assignment,int maxMask = 1 &lt;&lt; n)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "131": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.assignment,int[] dp = new int[maxMask])<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.alloc,new int[maxMask])>", "137": "<(fill,fill(dp, -1))<SUB>21</SUB>>", "139": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>21</SUB>>", "141": "<(LITERAL,1,-1)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>22</SUB>>", "145": "<(LITERAL,0,dp[0] = 0)<SUB>22</SUB>>", "147": "<(LOCAL,int sz: int)<SUB>23</SUB>>", "149": "<(IDENTIFIER,sz,int sz = Math.min(n, m))<SUB>23</SUB>>", "151": "<(IDENTIFIER,Math,Math.min(n, m))<SUB>23</SUB>>", "153": "<(IDENTIFIER,m,Math.min(n, m))<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.assignment,int[][] ss = new int[sz][maxMask])<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.alloc,new int[sz][maxMask])>", "159": "<(IDENTIFIER,maxMask,new int[sz][maxMask])<SUB>24</SUB>>", "161": "<(LOCAL,int i: int)<SUB>26</SUB>>", "163": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "165": "<(&lt;operator&gt;.lessThan,i &lt; sz)<SUB>26</SUB>>", "167": "<(IDENTIFIER,sz,i &lt; sz)<SUB>26</SUB>>", "169": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "171": "<(LOCAL,int[] curArr: int[])<SUB>27</SUB>>", "173": "<(IDENTIFIER,curArr,int[] curArr = clone())<SUB>27</SUB>>", "175": "<(&lt;operator&gt;.fieldAccess,cols[i].arr)<SUB>27</SUB>>", "177": "<(IDENTIFIER,cols,clone())<SUB>27</SUB>>", "179": "<(FIELD_IDENTIFIER,arr,arr)<SUB>27</SUB>>", "181": "<(LOCAL,int j: int)<SUB>28</SUB>>", "183": "<(IDENTIFIER,j,int j = 0)<SUB>28</SUB>>", "185": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>28</SUB>>", "187": "<(IDENTIFIER,n,j &lt; n)<SUB>28</SUB>>", "189": "<(IDENTIFIER,j,j++)<SUB>28</SUB>>", "191": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; maxMask); mask++),for (int mask = 0; Some(mask &lt; maxMask); mask++))<SUB>29</SUB>>", "193": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>29</SUB>>", "195": "<(LITERAL,0,int mask = 0)<SUB>29</SUB>>", "197": "<(IDENTIFIER,mask,mask &lt; maxMask)<SUB>29</SUB>>", "199": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>29</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "203": "<(&lt;operator&gt;.assignment,int cur = 0)<SUB>30</SUB>>", "205": "<(LITERAL,0,int cur = 0)<SUB>30</SUB>>", "207": "<(LOCAL,int k: int)<SUB>31</SUB>>", "209": "<(IDENTIFIER,k,int k = 0)<SUB>31</SUB>>", "211": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>31</SUB>>", "213": "<(IDENTIFIER,n,k &lt; n)<SUB>31</SUB>>", "215": "<(IDENTIFIER,k,k++)<SUB>31</SUB>>", "217": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; k) &amp; mask) &gt; 0)<SUB>31</SUB>>", "219": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>31</SUB>>", "221": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>31</SUB>>", "223": "<(LITERAL,0,((1 &lt;&lt; k) &amp; mask) &gt; 0)<SUB>31</SUB>>", "225": "<(IDENTIFIER,cur,cur += curArr[k])<SUB>31</SUB>>", "227": "<(IDENTIFIER,curArr,cur += curArr[k])<SUB>31</SUB>>", "229": "<(&lt;operator&gt;.assignment,ss[i][mask] = Math.max(ss[i][mask], cur))<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,ss[i])<SUB>32</SUB>>", "233": "<(IDENTIFIER,i,ss[i][mask] = Math.max(ss[i][mask], cur))<SUB>32</SUB>>", "235": "<(max,Math.max(ss[i][mask], cur))<SUB>32</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,ss[i][mask])<SUB>32</SUB>>", "239": "<(IDENTIFIER,ss,Math.max(ss[i][mask], cur))<SUB>32</SUB>>", "241": "<(IDENTIFIER,mask,Math.max(ss[i][mask], cur))<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.assignment,curArr = shift(curArr))<SUB>34</SUB>>", "245": "<(shift,shift(curArr))<SUB>34</SUB>>", "247": "<(IDENTIFIER,curArr,shift(curArr))<SUB>34</SUB>>", "249": "<(LOCAL,int i: int)<SUB>37</SUB>>", "251": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.lessThan,i &lt; Math.min(n, m))<SUB>37</SUB>>", "255": "<(min,Math.min(n, m))<SUB>37</SUB>>", "257": "<(IDENTIFIER,n,Math.min(n, m))<SUB>37</SUB>>", "259": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "261": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "263": "<(LOCAL,int mask: int)<SUB>38</SUB>>", "265": "<(IDENTIFIER,mask,int mask = maxMask - 1)<SUB>38</SUB>>", "267": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>38</SUB>>", "269": "<(&lt;operator&gt;.greaterEqualsThan,mask &gt;= 0)<SUB>38</SUB>>", "271": "<(LITERAL,0,mask &gt;= 0)<SUB>38</SUB>>", "273": "<(IDENTIFIER,mask,mask--)<SUB>38</SUB>>", "275": "<(CONTROL_STRUCTURE,for (int smask = mask; Some(smask &gt;= 0); smask = (smask - 1) &amp; mask),for (int smask = mask; Some(smask &gt;= 0); smask = (smask - 1) &amp; mask))<SUB>39</SUB>>", "277": "<(&lt;operator&gt;.assignment,int smask = mask)<SUB>39</SUB>>", "279": "<(IDENTIFIER,mask,int smask = mask)<SUB>39</SUB>>", "281": "<(IDENTIFIER,smask,smask &gt;= 0)<SUB>39</SUB>>", "283": "<(&lt;operator&gt;.assignment,smask = (smask - 1) &amp; mask)<SUB>39</SUB>>", "285": "<(&lt;operator&gt;.and,(smask - 1) &amp; mask)<SUB>39</SUB>>", "287": "<(IDENTIFIER,smask,smask - 1)<SUB>39</SUB>>", "289": "<(IDENTIFIER,mask,(smask - 1) &amp; mask)<SUB>39</SUB>>", "291": "<(CONTROL_STRUCTURE,if (dp[smask] == -1),if (dp[smask] == -1))<SUB>40</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,dp[smask])<SUB>40</SUB>>", "295": "<(IDENTIFIER,smask,dp[smask] == -1)<SUB>40</SUB>>", "297": "<(LITERAL,1,-1)<SUB>40</SUB>>", "299": "<(&lt;operator&gt;.assignment,dp[mask] = Math.max(dp[mask], dp[smask] + ss[i][mask ^ smask]))<SUB>41</SUB>>", "301": "<(IDENTIFIER,dp,dp[mask] = Math.max(dp[mask], dp[smask] + ss[i][mask ^ smask]))<SUB>41</SUB>>", "303": "<(max,Math.max(dp[mask], dp[smask] + ss[i][mask ^ smask]))<SUB>41</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>41</SUB>>", "307": "<(IDENTIFIER,mask,Math.max(dp[mask], dp[smask] + ss[i][mask ^ smask]))<SUB>41</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,dp[smask])<SUB>41</SUB>>", "311": "<(IDENTIFIER,smask,dp[smask] + ss[i][mask ^ smask])<SUB>41</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,ss[i])<SUB>41</SUB>>", "315": "<(IDENTIFIER,i,dp[smask] + ss[i][mask ^ smask])<SUB>41</SUB>>", "317": "<(IDENTIFIER,mask,mask ^ smask)<SUB>41</SUB>>", "319": "<(CONTROL_STRUCTURE,if (smask == 0),if (smask == 0))<SUB>42</SUB>>", "321": "<(IDENTIFIER,smask,smask == 0)<SUB>42</SUB>>", "323": "<(CONTROL_STRUCTURE,break;,break;)<SUB>42</SUB>>", "325": "<(IDENTIFIER,out,println(dp[maxMask - 1]))<SUB>46</SUB>>", "327": "<(IDENTIFIER,dp,println(dp[maxMask - 1]))<SUB>46</SUB>>", "329": "<(IDENTIFIER,maxMask,maxMask - 1)<SUB>46</SUB>>", "331": "<(flush,flush())<SUB>48</SUB>>", "333": "<(MODIFIER,PUBLIC)>", "335": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}