{"edges": [["17", "19"], ["17", "309"], ["17", "310"], ["17", "311"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "36"], ["19", "37"], ["19", "41"], ["19", "45"], ["19", "60"], ["19", "61"], ["19", "68"], ["19", "69"], ["19", "76"], ["19", "77"], ["19", "89"], ["19", "131"], ["19", "140"], ["19", "263"], ["19", "264"], ["19", "267"], ["19", "268"], ["19", "275"], ["19", "300"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "83"], ["79", "86"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "108"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "118"], ["108", "120"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "122"], ["120", "127"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "130"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "161"], ["151", "163"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "174"], ["164", "176"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["176", "189"], ["177", "178"], ["177", "187"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["187", "188"], ["189", "190"], ["189", "191"], ["189", "194"], ["189", "199"], ["189", "206"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["206", "213"], ["206", "218"], ["206", "225"], ["206", "226"], ["206", "231"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "241"], ["232", "233"], ["232", "240"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "243"], ["241", "252"], ["243", "244"], ["243", "251"], ["244", "245"], ["244", "250"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["252", "253"], ["252", "260"], ["253", "254"], ["253", "259"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["260", "261"], ["260", "262"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "277"], ["275", "280"], ["275", "285"], ["275", "287"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["285", "286"], ["287", "288"], ["287", "289"], ["287", "294"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["296", "299"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["20", "28"], ["23", "39"], ["37", "43"], ["41", "46"], ["61", "72"], ["69", "80"], ["77", "91"], ["131", "142"], ["264", "271"], ["268", "277"], ["300", "311"], ["22", "20"], ["39", "37"], ["43", "41"], ["46", "51"], ["46", "64"], ["63", "61"], ["71", "69"], ["79", "77"], ["91", "98"], ["94", "105"], ["94", "134"], ["99", "98"], ["132", "131"], ["142", "145"], ["145", "153"], ["145", "264"], ["148", "145"], ["270", "268"], ["277", "284"], ["280", "291"], ["280", "303"], ["285", "284"], ["301", "305"], ["304", "300"], ["26", "33"], ["29", "23"], ["51", "54"], ["54", "57"], ["57", "64"], ["64", "63"], ["72", "71"], ["80", "83"], ["83", "86"], ["86", "79"], ["96", "94"], ["103", "110"], ["133", "132"], ["271", "270"], ["282", "280"], ["289", "296"], ["294", "285"], ["303", "301"], ["305", "304"], ["28", "26"], ["31", "29"], ["98", "96"], ["105", "103"], ["110", "117"], ["113", "124"], ["113", "99"], ["118", "117"], ["134", "133"], ["153", "158"], ["156", "166"], ["156", "148"], ["161", "158"], ["284", "282"], ["291", "289"], ["296", "294"], ["33", "31"], ["115", "113"], ["122", "127"], ["127", "118"], ["158", "156"], ["117", "115"], ["124", "122"], ["166", "171"], ["169", "181"], ["169", "161"], ["174", "171"], ["171", "169"], ["178", "174"], ["178", "191"], ["191", "196"], ["194", "210"], ["194", "174"], ["199", "196"], ["179", "178"], ["196", "194"], ["201", "199"], ["208", "215"], ["213", "222"], ["218", "228"], ["226", "236"], ["231", "202"], ["180", "179"], ["202", "201"], ["210", "208"], ["215", "213"], ["220", "218"], ["228", "226"], ["232", "247"], ["241", "231"], ["181", "180"], ["222", "220"], ["233", "232"], ["243", "255"], ["252", "241"], ["234", "233"], ["244", "243"], ["253", "260"], ["260", "252"], ["236", "234"], ["245", "244"], ["254", "253"], ["247", "245"], ["255", "254"], ["17", "22"], ["18", "311"], ["20", "311"], ["23", "311"], ["26", "311"], ["29", "311"], ["29", "311"], ["29", "311"], ["23", "311"], ["37", "311"], ["43", "311"], ["41", "311"], ["41", "311"], ["46", "311"], ["51", "311"], ["54", "311"], ["57", "311"], ["57", "311"], ["61", "311"], ["61", "311"], ["69", "311"], ["69", "311"], ["69", "311"], ["77", "311"], ["79", "311"], ["79", "311"], ["77", "311"], ["77", "311"], ["91", "311"], ["94", "311"], ["94", "311"], ["94", "311"], ["131", "311"], ["131", "311"], ["142", "311"], ["145", "311"], ["145", "311"], ["264", "311"], ["264", "311"], ["268", "311"], ["268", "311"], ["268", "311"], ["277", "311"], ["280", "311"], ["280", "311"], ["280", "311"], ["300", "311"], ["305", "311"], ["305", "311"], ["304", "311"], ["304", "311"], ["300", "311"], ["300", "311"], ["289", "311"], ["296", "311"], ["296", "311"], ["294", "311"], ["294", "311"], ["285", "311"], ["153", "311"], ["156", "311"], ["156", "311"], ["156", "311"], ["148", "311"], ["166", "311"], ["169", "311"], ["169", "311"], ["161", "311"], ["178", "311"], ["178", "311"], ["191", "311"], ["194", "311"], ["194", "311"], ["208", "311"], ["208", "311"], ["213", "311"], ["220", "311"], ["218", "311"], ["226", "311"], ["228", "311"], ["228", "311"], ["226", "311"], ["226", "311"], ["231", "311"], ["241", "311"], ["252", "311"], ["252", "311"], ["241", "311"], ["231", "311"], ["231", "311"], ["201", "311"], ["199", "311"], ["199", "311"], ["174", "311"], ["103", "311"], ["103", "311"], ["110", "311"], ["113", "311"], ["113", "311"], ["113", "311"], ["99", "311"], ["122", "311"], ["127", "311"], ["127", "311"], ["118", "311"], ["127", "311"], ["260", "311"], ["17", "18"], ["17", "20"], ["39", "37"], ["43", "41"], ["64", "61"], ["64", "61"], ["17", "61"], ["71", "69"], ["71", "69"], ["79", "77"], ["79", "77"], ["17", "131"], ["61", "264"], ["178", "264"], ["127", "264"], ["17", "264"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["17", "91"], ["17", "142"], ["17", "277"], ["304", "300"], ["304", "300"], ["17", "26"], ["17", "34"], ["17", "39"], ["39", "43"], ["17", "43"], ["41", "46"], ["17", "46"], ["37", "46"], ["46", "51"], ["17", "51"], ["46", "54"], ["17", "54"], ["51", "57"], ["17", "57"], ["64", "63"], ["64", "63"], ["17", "63"], ["72", "71"], ["72", "71"], ["17", "71"], ["64", "79"], ["17", "79"], ["83", "79"], ["83", "79"], ["86", "79"], ["86", "79"], ["91", "94"], ["99", "94"], ["17", "94"], ["77", "94"], ["94", "99"], ["17", "99"], ["26", "103"], ["77", "103"], ["122", "103"], ["142", "145"], ["148", "145"], ["17", "145"], ["64", "145"], ["145", "148"], ["17", "148"], ["277", "280"], ["285", "280"], ["17", "280"], ["268", "280"], ["280", "285"], ["17", "285"], ["26", "289"], ["268", "289"], ["103", "289"], ["122", "289"], ["77", "289"], ["103", "289"], ["296", "294"], ["296", "294"], ["296", "294"], ["305", "304"], ["305", "304"], ["264", "304"], ["294", "304"], ["17", "304"], ["26", "29"], ["17", "29"], ["46", "64"], ["57", "64"], ["17", "64"], ["46", "64"], ["54", "64"], ["17", "72"], ["64", "72"], ["64", "80"], ["17", "80"], ["17", "83"], ["72", "83"], ["17", "86"], ["83", "86"], ["17", "110"], ["17", "153"], ["145", "305"], ["17", "305"], ["86", "305"], ["158", "305"], ["110", "113"], ["118", "113"], ["17", "113"], ["103", "113"], ["113", "118"], ["17", "118"], ["103", "122"], ["103", "122"], ["153", "156"], ["161", "156"], ["17", "156"], ["158", "156"], ["158", "156"], ["156", "161"], ["201", "161"], ["17", "161"], ["241", "296"], ["17", "296"], ["264", "296"], ["294", "296"], ["289", "296"], ["17", "127"], ["122", "127"], ["61", "127"], ["17", "158"], ["86", "158"], ["171", "158"], ["17", "166"], ["166", "169"], ["174", "169"], ["17", "169"], ["171", "169"], ["171", "169"], ["169", "174"], ["210", "174"], ["17", "174"], ["17", "171"], ["158", "171"], ["196", "171"], ["156", "191"], ["201", "191"], ["17", "191"], ["201", "199"], ["201", "199"], ["61", "178"], ["127", "178"], ["17", "178"], ["191", "194"], ["199", "194"], ["17", "194"], ["196", "194"], ["196", "194"], ["210", "208"], ["210", "208"], ["215", "213"], ["215", "213"], ["220", "218"], ["220", "218"], ["228", "226"], ["228", "226"], ["241", "231"], ["241", "231"], ["241", "231"], ["17", "196"], ["171", "196"], ["260", "201"], ["17", "201"], ["156", "201"], ["208", "213"], ["17", "213"], ["213", "218"], ["17", "218"], ["260", "202"], ["17", "202"], ["169", "210"], ["17", "210"], ["194", "210"], ["210", "215"], ["17", "215"], ["69", "220"], ["228", "220"], ["17", "220"], ["222", "220"], ["222", "220"], ["220", "228"], ["17", "228"], ["218", "228"], ["17", "241"], ["231", "241"], ["178", "241"], ["260", "241"], ["260", "241"], ["215", "222"], ["17", "222"], ["178", "252"], ["260", "252"], ["260", "252"], ["17", "260"], ["222", "260"], ["145", "236"], ["17", "236"], ["17", "247"], ["145", "247"], ["46", "51"], ["46", "57"], ["46", "54"], ["94", "94"], ["94", "115"], ["94", "96"], ["94", "98"], ["94", "113"], ["94", "103"], ["94", "99"], ["94", "105"], ["94", "110"], ["94", "117"], ["145", "145"], ["145", "153"], ["145", "148"], ["145", "158"], ["145", "156"], ["280", "282"], ["280", "291"], ["280", "284"], ["280", "285"], ["280", "289"], ["280", "280"], ["280", "296"], ["280", "294"], ["113", "115"], ["113", "113"], ["113", "118"], ["113", "127"], ["113", "122"], ["113", "117"], ["113", "124"], ["156", "169"], ["156", "161"], ["156", "158"], ["156", "171"], ["156", "166"], ["156", "156"], ["169", "169"], ["169", "179"], ["169", "178"], ["169", "181"], ["169", "174"], ["169", "180"], ["169", "171"], ["178", "196"], ["178", "191"], ["178", "194"], ["194", "215"], ["194", "196"], ["194", "232"], ["194", "226"], ["194", "244"], ["194", "213"], ["194", "243"], ["194", "245"], ["194", "228"], ["194", "247"], ["194", "208"], ["194", "255"], ["194", "231"], ["194", "194"], ["194", "202"], ["194", "233"], ["194", "201"], ["194", "252"], ["194", "210"], ["194", "236"], ["194", "260"], ["194", "253"], ["194", "220"], ["194", "234"], ["194", "254"], ["194", "199"], ["194", "241"], ["194", "222"], ["194", "218"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,reader,reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(LOCAL,int height: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int height = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int width = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(CONTROL_STRUCTURE,if (width &gt; height),if (width &gt; height))<SUB>5</SUB>>", "47": "<(IDENTIFIER,width,width &gt; height)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int t = width)<SUB>6</SUB>>", "53": "<(IDENTIFIER,width,int t = width)<SUB>6</SUB>>", "55": "<(IDENTIFIER,width,width = height)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,height = t)<SUB>8</SUB>>", "59": "<(IDENTIFIER,t,height = t)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int INF = height * width + 10)<SUB>11</SUB>>", "63": "<(&lt;operator&gt;.addition,height * width + 10)<SUB>11</SUB>>", "65": "<(IDENTIFIER,height,height * width)<SUB>11</SUB>>", "67": "<(LITERAL,10,height * width + 10)<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.assignment,int ALL_BITS = (1 &lt;&lt; width) - 1)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; width) - 1)<SUB>12</SUB>>", "73": "<(LITERAL,1,1 &lt;&lt; width)<SUB>12</SUB>>", "75": "<(LITERAL,1,(1 &lt;&lt; width) - 1)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int[][][] dp = new int[height + 1][1 &lt;&lt; width][1 &lt;&lt; width])<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.alloc,new int[height + 1][1 &lt;&lt; width][1 &lt;&lt; width])>", "81": "<(IDENTIFIER,height,height + 1)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; width)<SUB>13</SUB>>", "85": "<(IDENTIFIER,width,1 &lt;&lt; width)<SUB>13</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; width)<SUB>13</SUB>>", "89": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "91": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>14</SUB>>", "93": "<(LITERAL,0,int $idx0 = 0)<SUB>14</SUB>>", "95": "<(IDENTIFIER,$idx0,$idx0 &lt; dp.length)>", "97": "<(IDENTIFIER,dp,$idx0 &lt; dp.length)>", "99": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>14</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>14</SUB>>", "107": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "109": "<(LOCAL,$idx1: int)<SUB>15</SUB>>", "111": "<(IDENTIFIER,$idx1,int $idx1 = 0)>", "113": "<(&lt;operator&gt;.lessThan,$idx1 &lt; ints.length)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,ints.length)<SUB>15</SUB>>", "117": "<(FIELD_IDENTIFIER,length,length)<SUB>15</SUB>>", "119": "<(IDENTIFIER,$idx1,$idx1++)>", "121": "<(LOCAL,anInt: int[])<SUB>15</SUB>>", "123": "<(IDENTIFIER,anInt,&lt;empty&gt;)>", "125": "<(IDENTIFIER,ints,&lt;empty&gt;)>", "127": "<(fill,fill(anInt, INF))<SUB>16</SUB>>", "129": "<(IDENTIFIER,anInt,fill(anInt, INF))<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.assignment,dp[0][0][0] = 0)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>20</SUB>>", "135": "<(IDENTIFIER,dp,dp[0][0][0] = 0)<SUB>20</SUB>>", "137": "<(LITERAL,0,dp[0][0][0] = 0)<SUB>20</SUB>>", "139": "<(LITERAL,0,dp[0][0][0] = 0)<SUB>20</SUB>>", "141": "<(LOCAL,int r: int)<SUB>21</SUB>>", "143": "<(IDENTIFIER,r,int r = 0)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.lessThan,r &lt; height)<SUB>21</SUB>>", "147": "<(IDENTIFIER,height,r &lt; height)<SUB>21</SUB>>", "149": "<(IDENTIFIER,r,++r)<SUB>21</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int uncovered = 0; Some(uncovered &lt; (1 &lt;&lt; width)); ++uncovered),for (int uncovered = 0; Some(uncovered &lt; (1 &lt;&lt; width)); ++uncovered))<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.assignment,int uncovered = 0)<SUB>22</SUB>>", "155": "<(LITERAL,0,int uncovered = 0)<SUB>22</SUB>>", "157": "<(IDENTIFIER,uncovered,uncovered &lt; (1 &lt;&lt; width))<SUB>22</SUB>>", "159": "<(LITERAL,1,1 &lt;&lt; width)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.preIncrement,++uncovered)<SUB>22</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "165": "<(LOCAL,int mask: int)<SUB>23</SUB>>", "167": "<(IDENTIFIER,mask,int mask = 0)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; width))<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; width)<SUB>23</SUB>>", "173": "<(IDENTIFIER,width,1 &lt;&lt; width)<SUB>23</SUB>>", "175": "<(IDENTIFIER,mask,++mask)<SUB>23</SUB>>", "177": "<(CONTROL_STRUCTURE,if (dp[r][uncovered][mask] == INF),if (dp[r][uncovered][mask] == INF))<SUB>24</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[r][uncovered][mask])<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>24</SUB>>", "183": "<(IDENTIFIER,r,dp[r][uncovered][mask] == INF)<SUB>24</SUB>>", "185": "<(IDENTIFIER,mask,dp[r][uncovered][mask] == INF)<SUB>24</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "189": "<(CONTROL_STRUCTURE,for (int curMask = uncovered; Some(curMask &lt; (1 &lt;&lt; width)); curMask = (curMask + 1) | uncovered),for (int curMask = uncovered; Some(curMask &lt; (1 &lt;&lt; width)); curMask = (curMask + 1) | uncovered))<SUB>28</SUB>>", "191": "<(&lt;operator&gt;.assignment,int curMask = uncovered)<SUB>28</SUB>>", "193": "<(IDENTIFIER,uncovered,int curMask = uncovered)<SUB>28</SUB>>", "195": "<(IDENTIFIER,curMask,curMask &lt; (1 &lt;&lt; width))<SUB>28</SUB>>", "197": "<(LITERAL,1,1 &lt;&lt; width)<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.assignment,curMask = (curMask + 1) | uncovered)<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.or,(curMask + 1) | uncovered)<SUB>28</SUB>>", "203": "<(IDENTIFIER,curMask,curMask + 1)<SUB>28</SUB>>", "205": "<(IDENTIFIER,uncovered,(curMask + 1) | uncovered)<SUB>28</SUB>>", "207": "<(LOCAL,int curCovered: int)<SUB>29</SUB>>", "209": "<(IDENTIFIER,curCovered,int curCovered = mask | curMask)<SUB>29</SUB>>", "211": "<(IDENTIFIER,mask,mask | curMask)<SUB>29</SUB>>", "213": "<(&lt;operators&gt;.assignmentOr,curCovered |= curMask &gt;&gt; 1)<SUB>30</SUB>>", "215": "<(&lt;operator&gt;.logicalShiftRight,curMask &gt;&gt; 1)<SUB>30</SUB>>", "217": "<(LITERAL,1,curMask &gt;&gt; 1)<SUB>30</SUB>>", "219": "<(IDENTIFIER,curCovered,curCovered |= ALL_BITS &amp; (curMask &lt;&lt; 1))<SUB>31</SUB>>", "221": "<(IDENTIFIER,ALL_BITS,ALL_BITS &amp; (curMask &lt;&lt; 1))<SUB>31</SUB>>", "223": "<(IDENTIFIER,curMask,curMask &lt;&lt; 1)<SUB>31</SUB>>", "225": "<(LOCAL,int curUncovered: int)<SUB>33</SUB>>", "227": "<(IDENTIFIER,curUncovered,int curUncovered = ALL_BITS ^ curCovered)<SUB>33</SUB>>", "229": "<(IDENTIFIER,ALL_BITS,ALL_BITS ^ curCovered)<SUB>33</SUB>>", "231": "<(&lt;operator&gt;.assignment,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>34</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,dp[r + 1][curUncovered])<SUB>34</SUB>>", "235": "<(IDENTIFIER,dp,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>34</SUB>>", "237": "<(IDENTIFIER,r,r + 1)<SUB>34</SUB>>", "239": "<(IDENTIFIER,curUncovered,dp[r + 1][curUncovered][curMask] = Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>34</SUB>>", "241": "<(min,Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>34</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[r + 1][curUncovered][curMask])<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[r + 1])<SUB>34</SUB>>", "247": "<(&lt;operator&gt;.addition,r + 1)<SUB>34</SUB>>", "249": "<(LITERAL,1,r + 1)<SUB>34</SUB>>", "251": "<(IDENTIFIER,curMask,Math.min(dp[r + 1][curUncovered][curMask], dp[r][uncovered][mask] + Integer.bitCount(curMask)))<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,dp[r][uncovered][mask])<SUB>34</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,dp[r])<SUB>34</SUB>>", "257": "<(IDENTIFIER,r,dp[r][uncovered][mask] + Integer.bitCount(curMask))<SUB>34</SUB>>", "259": "<(IDENTIFIER,mask,dp[r][uncovered][mask] + Integer.bitCount(curMask))<SUB>34</SUB>>", "261": "<(IDENTIFIER,Integer,Integer.bitCount(curMask))<SUB>34</SUB>>", "263": "<(LOCAL,int res: int)<SUB>40</SUB>>", "265": "<(IDENTIFIER,res,int res = INF)<SUB>40</SUB>>", "267": "<(LOCAL,$iterLocal0: int[])<SUB>41</SUB>>", "269": "<(IDENTIFIER,$iterLocal0,)<SUB>41</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[height])<SUB>41</SUB>>", "273": "<(IDENTIFIER,height,)<SUB>41</SUB>>", "275": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "277": "<(&lt;operator&gt;.assignment,int $idx2 = 0)<SUB>41</SUB>>", "279": "<(LITERAL,0,int $idx2 = 0)<SUB>41</SUB>>", "281": "<(IDENTIFIER,$idx2,$idx2 &lt; $iterLocal0.length)>", "283": "<(IDENTIFIER,$iterLocal0,$idx2 &lt; $iterLocal0.length)>", "285": "<(&lt;operator&gt;.postIncrement,$idx2++)<SUB>41</SUB>>", "287": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "289": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>41</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>41</SUB>>", "293": "<(IDENTIFIER,$idx2,&lt;empty&gt;)>", "295": "<(IDENTIFIER,res,res = Math.min(res, x))<SUB>41</SUB>>", "297": "<(IDENTIFIER,Math,Math.min(res, x))<SUB>41</SUB>>", "299": "<(IDENTIFIER,x,Math.min(res, x))<SUB>41</SUB>>", "301": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>43</SUB>>", "303": "<(FIELD_IDENTIFIER,out,out)<SUB>43</SUB>>", "305": "<(&lt;operator&gt;.multiplication,height * width)<SUB>43</SUB>>", "307": "<(IDENTIFIER,width,height * width)<SUB>43</SUB>>", "309": "<(MODIFIER,PUBLIC)>", "311": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}