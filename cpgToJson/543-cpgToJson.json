{"edges": [["17", "19"], ["17", "99"], ["17", "100"], ["17", "101"], ["19", "20"], ["19", "22"], ["19", "23"], ["19", "27"], ["19", "97"], ["20", "21"], ["23", "24"], ["23", "25"], ["25", "26"], ["27", "28"], ["27", "32"], ["28", "29"], ["28", "31"], ["29", "30"], ["32", "33"], ["32", "34"], ["32", "38"], ["32", "49"], ["32", "52"], ["32", "53"], ["32", "62"], ["32", "63"], ["32", "74"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "44"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "88"], ["74", "92"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["88", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["20", "25"], ["23", "29"], ["97", "101"], ["25", "23"], ["28", "36"], ["28", "97"], ["29", "28"], ["34", "40"], ["49", "56"], ["53", "66"], ["63", "77"], ["36", "34"], ["39", "45"], ["39", "49"], ["55", "53"], ["65", "63"], ["75", "89"], ["75", "94"], ["40", "39"], ["45", "29"], ["56", "59"], ["57", "55"], ["66", "71"], ["67", "65"], ["76", "75"], ["76", "83"], ["81", "75"], ["89", "29"], ["59", "57"], ["69", "67"], ["77", "76"], ["82", "81"], ["94", "29"], ["71", "69"], ["83", "82"], ["17", "20"], ["18", "101"], ["20", "101"], ["25", "101"], ["23", "101"], ["23", "101"], ["29", "101"], ["28", "101"], ["28", "101"], ["97", "101"], ["97", "101"], ["36", "101"], ["34", "101"], ["34", "101"], ["40", "101"], ["39", "101"], ["39", "101"], ["49", "101"], ["57", "101"], ["55", "101"], ["53", "101"], ["53", "101"], ["63", "101"], ["67", "101"], ["69", "101"], ["67", "101"], ["65", "101"], ["63", "101"], ["63", "101"], ["77", "101"], ["76", "101"], ["76", "101"], ["75", "101"], ["83", "101"], ["82", "101"], ["81", "101"], ["81", "101"], ["75", "101"], ["75", "101"], ["94", "101"], ["89", "101"], ["45", "101"], ["17", "18"], ["25", "23"], ["17", "20"], ["94", "97"], ["89", "97"], ["45", "97"], ["17", "97"], ["20", "25"], ["17", "25"], ["29", "28"], ["17", "28"], ["36", "34"], ["17", "49"], ["17", "53"], ["57", "53"], ["57", "53"], ["17", "63"], ["67", "63"], ["67", "63"], ["23", "29"], ["17", "29"], ["40", "49"], ["25", "36"], ["17", "36"], ["40", "39"], ["40", "39"], ["17", "39"], ["17", "55"], ["57", "55"], ["57", "55"], ["17", "65"], ["67", "65"], ["67", "65"], ["76", "75"], ["76", "75"], ["81", "75"], ["81", "75"], ["34", "40"], ["17", "40"], ["94", "45"], ["89", "45"], ["17", "45"], ["59", "57"], ["17", "57"], ["59", "57"], ["69", "67"], ["17", "67"], ["69", "67"], ["77", "76"], ["71", "76"], ["17", "76"], ["82", "81"], ["82", "81"], ["76", "81"], ["17", "81"], ["94", "89"], ["45", "89"], ["17", "89"], ["67", "59"], ["17", "59"], ["49", "59"], ["57", "69"], ["17", "69"], ["71", "69"], ["71", "69"], ["53", "77"], ["17", "77"], ["83", "82"], ["17", "82"], ["89", "94"], ["45", "94"], ["17", "94"], ["59", "71"], ["17", "71"], ["63", "83"], ["17", "83"], ["28", "34"], ["28", "28"], ["28", "40"], ["28", "29"], ["28", "36"], ["28", "39"], ["39", "49"], ["39", "77"], ["39", "57"], ["39", "66"], ["39", "75"], ["39", "56"], ["39", "69"], ["39", "67"], ["39", "45"], ["39", "76"], ["39", "65"], ["39", "59"], ["39", "71"], ["39", "53"], ["39", "63"], ["39", "55"], ["75", "94"], ["75", "89"], ["76", "81"], ["76", "82"], ["76", "83"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,this,init_io())<SUB>2</SUB>>", "23": "<(&lt;operator&gt;.assignment,int t = nint())<SUB>3</SUB>>", "25": "<(nint,nint())<SUB>3</SUB>>", "27": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.postDecrement,t--)<SUB>4</SUB>>", "31": "<(LITERAL,0,t-- &gt; 0)<SUB>4</SUB>>", "33": "<(LOCAL,int N: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,N,int N = nint())<SUB>5</SUB>>", "37": "<(IDENTIFIER,this,nint())<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.notEquals,N % 2 != 0)<SUB>6</SUB>>", "41": "<(IDENTIFIER,N,N % 2)<SUB>6</SUB>>", "43": "<(LITERAL,0,N % 2 != 0)<SUB>6</SUB>>", "45": "<(println,println(&quot;NO&quot;))<SUB>7</SUB>>", "47": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignmentDivision,N /= 2)<SUB>9</SUB>>", "51": "<(LITERAL,2,N /= 2)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.assignment,int sqrt = (int) (Math.round(Math.sqrt(N))))<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.cast,(int) (Math.round(Math.sqrt(N))))<SUB>10</SUB>>", "57": "<(round,Math.round(Math.sqrt(N)))<SUB>10</SUB>>", "59": "<(sqrt,Math.sqrt(N))<SUB>10</SUB>>", "61": "<(IDENTIFIER,N,Math.sqrt(N))<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int sqrt2 = (int) (Math.round(Math.sqrt(N / 2))))<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.cast,(int) (Math.round(Math.sqrt(N / 2))))<SUB>11</SUB>>", "67": "<(round,Math.round(Math.sqrt(N / 2)))<SUB>11</SUB>>", "69": "<(sqrt,Math.sqrt(N / 2))<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.division,N / 2)<SUB>11</SUB>>", "73": "<(LITERAL,2,N / 2)<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.logicalOr,sqrt * sqrt == N || sqrt2 * sqrt2 * 2 == N)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.multiplication,sqrt * sqrt)<SUB>12</SUB>>", "79": "<(IDENTIFIER,sqrt,sqrt * sqrt)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.equals,sqrt2 * sqrt2 * 2 == N)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.multiplication,sqrt2 * sqrt2)<SUB>12</SUB>>", "85": "<(IDENTIFIER,sqrt2,sqrt2 * sqrt2)<SUB>12</SUB>>", "87": "<(IDENTIFIER,N,sqrt2 * sqrt2 * 2 == N)<SUB>12</SUB>>", "89": "<(println,println(&quot;YES&quot;))<SUB>13</SUB>>", "91": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>13</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>16</SUB>>", "97": "<(close,close())<SUB>19</SUB>>", "99": "<(MODIFIER,PUBLIC)>", "101": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}