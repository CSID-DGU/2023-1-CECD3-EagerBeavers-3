{"edges": [["19", "21"], ["19", "137"], ["19", "138"], ["19", "139"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "75"], ["21", "78"], ["21", "79"], ["21", "82"], ["21", "132"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "49"], ["47", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "101"], ["92", "130"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "108"], ["101", "111"], ["101", "113"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "124"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["124", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["22", "29"], ["25", "41"], ["37", "47"], ["44", "53"], ["51", "57"], ["75", "79"], ["79", "84"], ["132", "139"], ["24", "22"], ["39", "37"], ["46", "44"], ["53", "51"], ["57", "60"], ["60", "67"], ["60", "75"], ["63", "60"], ["84", "87"], ["87", "95"], ["87", "135"], ["90", "87"], ["133", "132"], ["27", "34"], ["30", "25"], ["41", "39"], ["47", "46"], ["66", "63"], ["130", "90"], ["135", "133"], ["29", "27"], ["32", "30"], ["67", "72"], ["70", "66"], ["94", "90"], ["94", "105"], ["103", "108"], ["108", "117"], ["108", "130"], ["111", "108"], ["34", "32"], ["72", "70"], ["95", "94"], ["105", "103"], ["115", "126"], ["115", "111"], ["116", "115"], ["125", "111"], ["117", "120"], ["120", "116"], ["126", "125"], ["19", "24"], ["20", "139"], ["22", "139"], ["27", "139"], ["30", "139"], ["30", "139"], ["30", "139"], ["25", "139"], ["39", "139"], ["37", "139"], ["37", "139"], ["44", "139"], ["47", "139"], ["46", "139"], ["44", "139"], ["44", "139"], ["51", "139"], ["51", "139"], ["75", "139"], ["75", "139"], ["79", "139"], ["84", "139"], ["87", "139"], ["87", "139"], ["87", "139"], ["132", "139"], ["132", "139"], ["132", "139"], ["94", "139"], ["94", "139"], ["103", "139"], ["103", "139"], ["108", "139"], ["108", "139"], ["130", "139"], ["116", "139"], ["116", "139"], ["115", "139"], ["115", "139"], ["125", "139"], ["125", "139"], ["111", "139"], ["90", "139"], ["66", "139"], ["70", "139"], ["70", "139"], ["66", "139"], ["66", "139"], ["63", "139"], ["75", "139"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["53", "51"], ["19", "79"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "57"], ["19", "75"], ["51", "75"], ["66", "75"], ["19", "84"], ["79", "132"], ["130", "132"], ["19", "132"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["47", "46"], ["19", "46"], ["37", "53"], ["19", "53"], ["57", "60"], ["63", "60"], ["19", "60"], ["53", "60"], ["60", "63"], ["19", "63"], ["70", "66"], ["70", "66"], ["84", "87"], ["90", "87"], ["19", "87"], ["60", "87"], ["108", "87"], ["87", "90"], ["19", "90"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["41", "47"], ["19", "47"], ["87", "103"], ["19", "103"], ["79", "130"], ["19", "130"], ["39", "70"], ["19", "70"], ["44", "70"], ["75", "94"], ["116", "94"], ["66", "94"], ["19", "94"], ["103", "108"], ["111", "108"], ["19", "108"], ["87", "108"], ["108", "111"], ["19", "111"], ["87", "105"], ["19", "105"], ["116", "115"], ["116", "115"], ["19", "115"], ["19", "125"], ["75", "116"], ["125", "116"], ["94", "116"], ["60", "60"], ["60", "66"], ["60", "72"], ["60", "67"], ["60", "70"], ["60", "63"], ["87", "94"], ["87", "95"], ["87", "87"], ["87", "90"], ["94", "103"], ["94", "105"], ["94", "130"], ["94", "108"], ["108", "115"], ["108", "120"], ["108", "116"], ["108", "117"], ["108", "108"], ["108", "111"], ["115", "126"], ["115", "125"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(reader.readLine()))<SUB>3</SUB>>", "39": "<(parseInt,parseInt(reader.readLine()))<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,String[] str: java.lang.String[])<SUB>4</SUB>>", "45": "<(IDENTIFIER,str,String[] str = split(&quot; &quot;))<SUB>4</SUB>>", "47": "<(readLine,readLine())<SUB>4</SUB>>", "49": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] a = new int[n])<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,a[i] = Integer.parseInt(str[i]))<SUB>7</SUB>>", "71": "<(IDENTIFIER,Integer,Integer.parseInt(str[i]))<SUB>7</SUB>>", "73": "<(IDENTIFIER,str,Integer.parseInt(str[i]))<SUB>7</SUB>>", "75": "<(sort,sort(a))<SUB>9</SUB>>", "77": "<(IDENTIFIER,a,sort(a))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>10</SUB>>", "81": "<(LITERAL,0,int k = 0)<SUB>10</SUB>>", "83": "<(LOCAL,int i: int)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,if (a[i] == 0),if (a[i] == 0))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,a[i] == 0)<SUB>12</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.addition,i + 1)<SUB>15</SUB>>", "107": "<(LITERAL,1,i + 1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,j,j &lt; n)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.equals,a[j] % a[i] == 0)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>16</SUB>>", "119": "<(IDENTIFIER,j,a[j] % a[i])<SUB>16</SUB>>", "121": "<(IDENTIFIER,a,a[j] % a[i])<SUB>16</SUB>>", "123": "<(LITERAL,0,a[j] % a[i] == 0)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.assignment,a[j] = 0)<SUB>17</SUB>>", "127": "<(IDENTIFIER,a,a[j] = 0)<SUB>17</SUB>>", "129": "<(LITERAL,0,a[j] = 0)<SUB>17</SUB>>", "131": "<(IDENTIFIER,k,k++)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "135": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "137": "<(MODIFIER,PUBLIC)>", "139": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}