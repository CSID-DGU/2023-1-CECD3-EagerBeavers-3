{"edges": [["19", "20"], ["19", "21"], ["19", "118"], ["19", "119"], ["19", "120"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "36"], ["34", "39"], ["34", "42"], ["34", "44"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "50"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "56"], ["50", "111"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["56", "57"], ["57", "58"], ["57", "71"], ["57", "77"], ["58", "59"], ["58", "64"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["77", "78"], ["78", "79"], ["78", "98"], ["78", "104"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["105", "106"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["22", "28"], ["25", "32"], ["30", "36"], ["24", "22"], ["26", "25"], ["32", "30"], ["36", "39"], ["39", "120"], ["39", "48"], ["42", "39"], ["28", "26"], ["46", "52"], ["48", "46"], ["51", "61"], ["51", "116"], ["52", "51"], ["58", "75"], ["58", "81"], ["113", "42"], ["59", "65"], ["64", "58"], ["72", "42"], ["114", "113"], ["61", "59"], ["65", "68"], ["66", "64"], ["73", "72"], ["79", "102"], ["79", "109"], ["116", "114"], ["68", "66"], ["75", "73"], ["80", "79"], ["80", "88"], ["85", "79"], ["99", "42"], ["81", "80"], ["86", "92"], ["91", "85"], ["100", "99"], ["106", "42"], ["88", "86"], ["92", "95"], ["93", "91"], ["102", "100"], ["107", "106"], ["95", "93"], ["109", "107"], ["19", "24"], ["20", "120"], ["22", "120"], ["25", "120"], ["25", "120"], ["32", "120"], ["30", "120"], ["30", "120"], ["36", "120"], ["39", "120"], ["39", "120"], ["39", "120"], ["42", "120"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["19", "36"], ["25", "32"], ["19", "32"], ["36", "39"], ["42", "39"], ["19", "39"], ["30", "39"], ["39", "42"], ["19", "42"], ["48", "46"], ["32", "48"], ["19", "48"], ["52", "51"], ["52", "51"], ["19", "51"], ["46", "52"], ["19", "52"], ["59", "58"], ["59", "58"], ["66", "58"], ["66", "58"], ["19", "58"], ["106", "113"], ["99", "113"], ["72", "113"], ["19", "113"], ["66", "59"], ["93", "59"], ["19", "59"], ["61", "59"], ["61", "59"], ["19", "64"], ["66", "64"], ["66", "64"], ["113", "72"], ["106", "72"], ["99", "72"], ["19", "72"], ["52", "61"], ["19", "61"], ["59", "66"], ["19", "66"], ["68", "66"], ["68", "66"], ["80", "79"], ["80", "79"], ["85", "79"], ["85", "79"], ["61", "68"], ["19", "68"], ["81", "80"], ["81", "80"], ["19", "80"], ["86", "85"], ["86", "85"], ["93", "85"], ["93", "85"], ["19", "85"], ["113", "99"], ["106", "99"], ["72", "99"], ["19", "99"], ["68", "81"], ["19", "81"], ["66", "86"], ["19", "86"], ["88", "86"], ["88", "86"], ["19", "91"], ["93", "91"], ["93", "91"], ["113", "106"], ["99", "106"], ["72", "106"], ["19", "106"], ["81", "88"], ["19", "88"], ["86", "93"], ["19", "93"], ["95", "93"], ["95", "93"], ["88", "95"], ["19", "95"], ["39", "48"], ["39", "42"], ["39", "51"], ["39", "52"], ["39", "46"], ["39", "39"], ["51", "68"], ["51", "64"], ["51", "66"], ["51", "113"], ["51", "116"], ["51", "114"], ["51", "65"], ["51", "59"], ["51", "58"], ["51", "61"], ["58", "73"], ["58", "75"], ["58", "81"], ["58", "72"], ["58", "79"], ["58", "80"], ["79", "107"], ["79", "99"], ["79", "102"], ["79", "106"], ["79", "100"], ["79", "109"], ["80", "85"], ["80", "95"], ["80", "92"], ["80", "91"], ["80", "93"], ["80", "88"], ["80", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int t: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,t,int t = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "35": "<(LOCAL,int test: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,test,int test = 0)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.lessThan,test &lt; t)<SUB>4</SUB>>", "41": "<(IDENTIFIER,t,test &lt; t)<SUB>4</SUB>>", "43": "<(IDENTIFIER,test,test++)<SUB>4</SUB>>", "45": "<(LOCAL,int n: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "49": "<(IDENTIFIER,input,nextInt())<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.equals,n % 2 == 0)<SUB>6</SUB>>", "53": "<(IDENTIFIER,n,n % 2)<SUB>6</SUB>>", "55": "<(LITERAL,0,n % 2 == 0)<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,if (Math.sqrt(n / 2) == (int) (Math.sqrt(n / 2))),if (Math.sqrt(n / 2) == (int) (Math.sqrt(n / 2))))<SUB>7</SUB>>", "59": "<(sqrt,Math.sqrt(n / 2))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.division,n / 2)<SUB>7</SUB>>", "63": "<(LITERAL,2,n / 2)<SUB>7</SUB>>", "65": "<(TYPE_REF,int,int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,Math,Math.sqrt(n / 2))<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,n / 2)<SUB>7</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "75": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "77": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.logicalAnd,n % 4 == 0 &amp;&amp; Math.sqrt(n / 4) == (int) (Math.sqrt(n / 4)))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.modulo,n % 4)<SUB>9</SUB>>", "83": "<(LITERAL,4,n % 4)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.equals,Math.sqrt(n / 4) == (int) (Math.sqrt(n / 4)))<SUB>9</SUB>>", "87": "<(IDENTIFIER,Math,Math.sqrt(n / 4))<SUB>9</SUB>>", "89": "<(IDENTIFIER,n,n / 4)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.cast,(int) (Math.sqrt(n / 4)))<SUB>9</SUB>>", "93": "<(sqrt,Math.sqrt(n / 4))<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.division,n / 4)<SUB>9</SUB>>", "97": "<(LITERAL,4,n / 4)<SUB>9</SUB>>", "99": "<(println,System.out.println(&quot;YES&quot;))<SUB>10</SUB>>", "101": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>10</SUB>>", "103": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>10</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>12</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>12</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "113": "<(println,System.out.println(&quot;NO&quot;))<SUB>15</SUB>>", "115": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>15</SUB>>", "117": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>15</SUB>>", "119": "<(MODIFIER,STATIC)>"}}