{"edges": [["19", "21"], ["19", "101"], ["19", "102"], ["19", "103"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["21", "32"], ["21", "36"], ["21", "47"], ["21", "48"], ["21", "55"], ["21", "56"], ["21", "71"], ["21", "72"], ["21", "82"], ["21", "83"], ["21", "96"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "40"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "46"], ["41", "42"], ["41", "45"], ["42", "43"], ["42", "44"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "70"], ["59", "60"], ["59", "67"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "78"], ["74", "81"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "95"], ["86", "87"], ["86", "92"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["22", "25"], ["25", "29"], ["27", "34"], ["32", "37"], ["48", "61"], ["56", "75"], ["72", "88"], ["83", "99"], ["96", "103"], ["24", "22"], ["29", "27"], ["34", "32"], ["37", "44"], ["37", "52"], ["50", "48"], ["58", "56"], ["74", "72"], ["85", "83"], ["97", "96"], ["41", "46"], ["46", "103"], ["52", "50"], ["59", "58"], ["75", "78"], ["78", "74"], ["86", "85"], ["99", "97"], ["42", "41"], ["60", "69"], ["67", "59"], ["87", "94"], ["92", "86"], ["44", "42"], ["61", "64"], ["64", "60"], ["69", "67"], ["88", "87"], ["94", "92"], ["19", "24"], ["46", "103"], ["20", "103"], ["22", "103"], ["25", "103"], ["27", "103"], ["32", "103"], ["34", "103"], ["32", "103"], ["32", "103"], ["37", "103"], ["37", "103"], ["41", "103"], ["19", "20"], ["19", "22"], ["29", "27"], ["34", "32"], ["50", "48"], ["50", "48"], ["58", "56"], ["58", "56"], ["74", "72"], ["74", "72"], ["74", "72"], ["85", "83"], ["85", "83"], ["22", "25"], ["19", "25"], ["83", "96"], ["19", "96"], ["25", "29"], ["19", "29"], ["29", "34"], ["19", "34"], ["27", "37"], ["19", "37"], ["19", "46"], ["19", "50"], ["59", "58"], ["59", "58"], ["48", "58"], ["19", "58"], ["75", "74"], ["75", "74"], ["78", "74"], ["78", "74"], ["58", "74"], ["19", "74"], ["86", "85"], ["86", "85"], ["87", "85"], ["19", "85"], ["19", "41"], ["19", "52"], ["60", "59"], ["60", "59"], ["64", "59"], ["64", "75"], ["59", "75"], ["19", "75"], ["75", "78"], ["19", "78"], ["32", "78"], ["87", "86"], ["87", "86"], ["78", "86"], ["61", "60"], ["61", "60"], ["64", "60"], ["64", "60"], ["88", "87"], ["88", "87"], ["74", "87"], ["19", "87"], ["50", "61"], ["19", "61"], ["37", "61"], ["61", "64"], ["19", "64"], ["56", "88"], ["19", "88"], ["72", "88"], ["37", "94"], ["37", "48"], ["37", "60"], ["37", "96"], ["37", "64"], ["37", "42"], ["37", "75"], ["37", "52"], ["37", "99"], ["37", "46"], ["37", "85"], ["37", "72"], ["37", "56"], ["37", "69"], ["37", "67"], ["37", "74"], ["37", "92"], ["37", "50"], ["37", "59"], ["37", "87"], ["37", "97"], ["37", "44"], ["37", "58"], ["37", "61"], ["37", "83"], ["37", "88"], ["37", "41"], ["37", "78"], ["37", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long x = nextLong())<SUB>3</SUB>>", "29": "<(nextLong,nextLong())<SUB>3</SUB>>", "31": "<(LOCAL,long k: long)<SUB>4</SUB>>", "33": "<(IDENTIFIER,k,long k = nextLong())<SUB>4</SUB>>", "35": "<(IDENTIFIER,scanner,nextLong())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.equals,x == 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,x == 0)<SUB>5</SUB>>", "41": "<(println,System.out.println(&quot;0&quot;))<SUB>6</SUB>>", "43": "<(IDENTIFIER,System,System.out.println(&quot;0&quot;))<SUB>6</SUB>>", "45": "<(LITERAL,&quot;0&quot;,System.out.println(&quot;0&quot;))<SUB>6</SUB>>", "47": "<(LOCAL,BigInteger M: ANY)<SUB>9</SUB>>", "49": "<(IDENTIFIER,M,ANY M = valueOf(1000_000_000L + 7))<SUB>9</SUB>>", "51": "<(IDENTIFIER,BigInteger,valueOf(1000_000_000L + 7))<SUB>9</SUB>>", "53": "<(LITERAL,1000_000_000L,1000_000_000L + 7)<SUB>9</SUB>>", "55": "<(LOCAL,BigInteger modus: ANY)<SUB>10</SUB>>", "57": "<(IDENTIFIER,modus,ANY modus = mod(M))<SUB>10</SUB>>", "59": "<(subtract,subtract(BigInteger.ONE))<SUB>10</SUB>>", "61": "<(valueOf,valueOf(x))<SUB>10</SUB>>", "63": "<(IDENTIFIER,x,valueOf(x))<SUB>10</SUB>>", "65": "<(IDENTIFIER,BigInteger,valueOf(2))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.fieldAccess,BigInteger.ONE)<SUB>10</SUB>>", "69": "<(FIELD_IDENTIFIER,ONE,ONE)<SUB>10</SUB>>", "71": "<(LOCAL,BigInteger operandi: ANY)<SUB>11</SUB>>", "73": "<(IDENTIFIER,operandi,ANY operandi = modPow(BigInteger.valueOf(k), M))<SUB>11</SUB>>", "75": "<(valueOf,valueOf(2))<SUB>11</SUB>>", "77": "<(LITERAL,2,valueOf(2))<SUB>11</SUB>>", "79": "<(IDENTIFIER,BigInteger,valueOf(k))<SUB>11</SUB>>", "81": "<(IDENTIFIER,M,modPow(BigInteger.valueOf(k), M))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,ANY result = mod(M))<SUB>12</SUB>>", "85": "<(mod,mod(M))<SUB>12</SUB>>", "87": "<(mod,mod(M))<SUB>12</SUB>>", "89": "<(IDENTIFIER,modus,multiply(operandi))<SUB>12</SUB>>", "91": "<(IDENTIFIER,M,mod(M))<SUB>12</SUB>>", "93": "<(IDENTIFIER,BigInteger,add(BigInteger.ONE))<SUB>12</SUB>>", "95": "<(IDENTIFIER,M,mod(M))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "99": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "101": "<(MODIFIER,PUBLIC)>", "103": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}