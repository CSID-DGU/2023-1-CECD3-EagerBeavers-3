{"edges": [["21", "23"], ["21", "305"], ["21", "306"], ["21", "307"], ["23", "24"], ["23", "34"], ["23", "4"], ["23", "44"], ["23", "47"], ["23", "58"], ["23", "59"], ["23", "65"], ["23", "66"], ["23", "73"], ["23", "74"], ["23", "81"], ["23", "82"], ["23", "88"], ["23", "89"], ["23", "94"], ["23", "124"], ["23", "134"], ["23", "135"], ["23", "6"], ["23", "138"], ["23", "141"], ["23", "144"], ["23", "149"], ["23", "260"], ["24", "25"], ["24", "26"], ["26", "27"], ["26", "30"], ["26", "33"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "40"], ["36", "43"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "3"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "64"], ["62", "63"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["124", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "5"], ["141", "142"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "148"], ["146", "147"], ["149", "150"], ["149", "153"], ["149", "155"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["155", "157"], ["155", "165"], ["155", "166"], ["155", "174"], ["155", "190"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "164"], ["160", "161"], ["160", "162"], ["162", "163"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "173"], ["169", "170"], ["169", "171"], ["171", "172"], ["174", "175"], ["175", "176"], ["175", "187"], ["176", "177"], ["176", "184"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "209"], ["201", "211"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["209", "210"], ["211", "212"], ["211", "213"], ["211", "226"], ["211", "241"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "234"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "253"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["260", "262"], ["260", "265"], ["260", "268"], ["260", "270"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["268", "269"], ["270", "271"], ["271", "272"], ["271", "273"], ["271", "276"], ["271", "279"], ["271", "281"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["279", "280"], ["281", "282"], ["282", "283"], ["282", "290"], ["283", "284"], ["283", "289"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["290", "291"], ["290", "304"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "303"], ["24", "39"], ["34", "46"], ["44", "51"], ["47", "62"], ["59", "70"], ["66", "78"], ["74", "86"], ["82", "91"], ["89", "96"], ["124", "135"], ["135", "140"], ["138", "142"], ["141", "146"], ["144", "150"], ["46", "44"], ["61", "59"], ["68", "66"], ["76", "74"], ["84", "82"], ["91", "89"], ["96", "99"], ["99", "107"], ["99", "126"], ["102", "99"], ["125", "124"], ["140", "138"], ["142", "141"], ["145", "144"], ["150", "153"], ["153", "162"], ["153", "262"], ["262", "265"], ["265", "307"], ["265", "273"], ["268", "265"], ["27", "30"], ["30", "24"], ["37", "40"], ["40", "34"], ["49", "56"], ["52", "47"], ["62", "61"], ["70", "68"], ["78", "76"], ["86", "84"], ["126", "125"], ["126", "131"], ["129", "125"], ["146", "145"], ["157", "171"], ["166", "178"], ["174", "192"], ["29", "27"], ["39", "37"], ["51", "49"], ["54", "52"], ["107", "110"], ["110", "117"], ["110", "102"], ["113", "110"], ["115", "113"], ["131", "129"], ["159", "157"], ["168", "166"], ["175", "174"], ["192", "195"], ["195", "153"], ["195", "203"], ["198", "195"], ["273", "276"], ["276", "285"], ["276", "268"], ["279", "276"], ["56", "54"], ["116", "123"], ["121", "115"], ["160", "159"], ["169", "168"], ["176", "175"], ["176", "187"], ["187", "175"], ["117", "116"], ["123", "121"], ["162", "160"], ["171", "169"], ["177", "176"], ["177", "184"], ["184", "176"], ["203", "206"], ["206", "218"], ["206", "198"], ["209", "206"], ["283", "294"], ["283", "279"], ["178", "177"], ["178", "181"], ["181", "177"], ["213", "229"], ["284", "283"], ["291", "304"], ["304", "307"], ["215", "213"], ["227", "236"], ["227", "243"], ["234", "243"], ["242", "256"], ["242", "209"], ["253", "209"], ["285", "284"], ["292", "297"], ["295", "291"], ["216", "223"], ["221", "215"], ["228", "227"], ["235", "234"], ["243", "242"], ["243", "248"], ["246", "242"], ["255", "253"], ["294", "292"], ["296", "301"], ["301", "295"], ["218", "216"], ["223", "221"], ["229", "228"], ["236", "235"], ["247", "246"], ["256", "255"], ["297", "296"], ["248", "247"], ["21", "29"], ["304", "307"], ["22", "307"], ["30", "307"], ["30", "307"], ["24", "307"], ["34", "307"], ["40", "307"], ["40", "307"], ["34", "307"], ["44", "307"], ["49", "307"], ["52", "307"], ["52", "307"], ["52", "307"], ["47", "307"], ["59", "307"], ["59", "307"], ["59", "307"], ["68", "307"], ["66", "307"], ["66", "307"], ["76", "307"], ["74", "307"], ["74", "307"], ["84", "307"], ["82", "307"], ["82", "307"], ["89", "307"], ["89", "307"], ["89", "307"], ["125", "307"], ["129", "307"], ["125", "307"], ["124", "307"], ["124", "307"], ["135", "307"], ["138", "307"], ["142", "307"], ["141", "307"], ["141", "307"], ["146", "307"], ["145", "307"], ["144", "307"], ["144", "307"], ["150", "307"], ["153", "307"], ["153", "307"], ["262", "307"], ["265", "307"], ["265", "307"], ["273", "307"], ["276", "307"], ["276", "307"], ["268", "307"], ["283", "307"], ["283", "307"], ["283", "307"], ["279", "307"], ["291", "307"], ["297", "307"], ["296", "307"], ["295", "307"], ["301", "307"], ["295", "307"], ["291", "307"], ["157", "307"], ["166", "307"], ["169", "307"], ["171", "307"], ["169", "307"], ["168", "307"], ["166", "307"], ["166", "307"], ["178", "307"], ["177", "307"], ["181", "307"], ["177", "307"], ["176", "307"], ["184", "307"], ["176", "307"], ["175", "307"], ["187", "307"], ["175", "307"], ["174", "307"], ["174", "307"], ["198", "307"], ["218", "307"], ["216", "307"], ["215", "307"], ["221", "307"], ["223", "307"], ["221", "307"], ["215", "307"], ["213", "307"], ["213", "307"], ["227", "307"], ["227", "307"], ["234", "307"], ["234", "307"], ["242", "307"], ["242", "307"], ["242", "307"], ["253", "307"], ["209", "307"], ["102", "307"], ["115", "307"], ["115", "307"], ["113", "307"], ["21", "22"], ["21", "44"], ["61", "59"], ["61", "59"], ["68", "66"], ["68", "66"], ["76", "74"], ["76", "74"], ["84", "82"], ["84", "82"], ["91", "89"], ["91", "89"], ["21", "135"], ["21", "138"], ["21", "24"], ["27", "24"], ["30", "24"], ["24", "34"], ["21", "34"], ["37", "34"], ["40", "34"], ["44", "47"], ["21", "47"], ["49", "47"], ["52", "47"], ["21", "96"], ["125", "124"], ["125", "124"], ["138", "141"], ["21", "141"], ["142", "141"], ["145", "144"], ["145", "144"], ["21", "262"], ["21", "27"], ["21", "33"], ["21", "37"], ["21", "43"], ["21", "49"], ["21", "57"], ["62", "61"], ["21", "61"], ["21", "68"], ["59", "68"], ["68", "76"], ["21", "76"], ["59", "76"], ["76", "84"], ["21", "84"], ["86", "84"], ["66", "91"], ["21", "91"], ["74", "91"], ["96", "99"], ["102", "99"], ["21", "99"], ["91", "99"], ["99", "102"], ["21", "102"], ["126", "125"], ["126", "125"], ["129", "125"], ["129", "125"], ["86", "142"], ["21", "142"], ["146", "145"], ["126", "145"], ["129", "145"], ["21", "145"], ["145", "150"], ["21", "150"], ["150", "153"], ["243", "153"], ["21", "153"], ["159", "157"], ["159", "157"], ["168", "166"], ["168", "166"], ["262", "265"], ["268", "265"], ["21", "265"], ["99", "265"], ["131", "265"], ["195", "265"], ["265", "268"], ["21", "268"], ["27", "30"], ["21", "30"], ["37", "40"], ["21", "40"], ["49", "52"], ["21", "52"], ["34", "52"], ["47", "62"], ["21", "62"], ["62", "86"], ["21", "86"], ["21", "107"], ["84", "115"], ["82", "126"], ["21", "126"], ["126", "129"], ["21", "129"], ["131", "129"], ["131", "129"], ["141", "146"], ["21", "146"], ["175", "174"], ["175", "174"], ["21", "192"], ["21", "273"], ["107", "110"], ["113", "110"], ["21", "110"], ["91", "110"], ["110", "113"], ["21", "113"], ["99", "131"], ["21", "131"], ["91", "131"], ["110", "131"], ["160", "159"], ["160", "159"], ["21", "159"], ["169", "168"], ["169", "168"], ["21", "168"], ["176", "175"], ["176", "175"], ["187", "175"], ["187", "175"], ["192", "195"], ["198", "195"], ["21", "195"], ["99", "195"], ["131", "195"], ["181", "195"], ["187", "195"], ["195", "198"], ["218", "198"], ["21", "198"], ["273", "276"], ["279", "276"], ["21", "276"], ["91", "276"], ["131", "276"], ["206", "276"], ["110", "276"], ["276", "279"], ["21", "279"], ["84", "160"], ["169", "160"], ["21", "160"], ["162", "160"], ["160", "169"], ["21", "169"], ["171", "169"], ["177", "176"], ["177", "176"], ["184", "176"], ["184", "176"], ["166", "187"], ["184", "187"], ["21", "187"], ["99", "187"], ["131", "187"], ["181", "187"], ["195", "187"], ["21", "203"], ["146", "162"], ["171", "162"], ["21", "162"], ["162", "171"], ["21", "171"], ["178", "177"], ["178", "177"], ["181", "177"], ["181", "177"], ["166", "184"], ["21", "184"], ["203", "206"], ["209", "206"], ["21", "206"], ["91", "206"], ["131", "206"], ["110", "206"], ["223", "209"], ["21", "209"], ["216", "213"], ["216", "213"], ["221", "213"], ["221", "213"], ["227", "283"], ["234", "283"], ["246", "283"], ["115", "283"], ["135", "283"], ["246", "283"], ["253", "283"], ["21", "283"], ["21", "304"], ["157", "178"], ["21", "178"], ["178", "181"], ["21", "181"], ["99", "181"], ["131", "181"], ["195", "181"], ["227", "234"], ["21", "234"], ["227", "253"], ["234", "253"], ["246", "253"], ["34", "291"], ["265", "291"], ["21", "291"], ["276", "291"], ["216", "215"], ["216", "215"], ["221", "215"], ["221", "215"], ["234", "227"], ["246", "227"], ["115", "227"], ["213", "227"], ["21", "227"], ["243", "242"], ["243", "242"], ["246", "242"], ["246", "242"], ["265", "295"], ["21", "295"], ["276", "295"], ["221", "216"], ["21", "216"], ["218", "216"], ["218", "216"], ["216", "221"], ["21", "221"], ["223", "221"], ["223", "221"], ["153", "243"], ["21", "243"], ["227", "246"], ["234", "246"], ["135", "246"], ["253", "246"], ["21", "246"], ["265", "296"], ["21", "296"], ["276", "301"], ["21", "301"], ["195", "218"], ["21", "218"], ["178", "218"], ["181", "218"], ["206", "223"], ["21", "223"], ["166", "223"], ["184", "223"], ["187", "223"], ["265", "297"], ["21", "297"], ["99", "107"], ["99", "102"], ["99", "99"], ["99", "110"], ["153", "192"], ["153", "169"], ["153", "178"], ["153", "162"], ["153", "153"], ["153", "168"], ["153", "195"], ["153", "174"], ["153", "171"], ["153", "160"], ["153", "166"], ["153", "157"], ["153", "159"], ["153", "176"], ["153", "177"], ["153", "175"], ["265", "273"], ["265", "276"], ["126", "131"], ["126", "129"], ["110", "115"], ["110", "113"], ["110", "121"], ["110", "116"], ["110", "123"], ["110", "110"], ["110", "117"], ["195", "198"], ["195", "206"], ["195", "195"], ["195", "203"], ["276", "283"], ["276", "284"], ["276", "285"], ["276", "268"], ["276", "265"], ["176", "187"], ["177", "184"], ["206", "215"], ["206", "209"], ["206", "213"], ["206", "243"], ["206", "228"], ["206", "206"], ["206", "242"], ["206", "223"], ["206", "221"], ["206", "229"], ["206", "216"], ["206", "227"], ["206", "218"], ["283", "292"], ["283", "279"], ["283", "291"], ["283", "301"], ["283", "276"], ["283", "296"], ["283", "295"], ["283", "304"], ["283", "294"], ["283", "297"], ["178", "181"], ["227", "235"], ["227", "236"], ["227", "234"], ["242", "256"], ["242", "255"], ["242", "253"], ["243", "247"], ["243", "246"], ["243", "248"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,System,setIn(new FileInputStream(&quot;input.txt&quot;)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new FileInputStream(&quot;input.txt&quot;))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new FileInputStream(&quot;input.txt&quot;))>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(IDENTIFIER,System,setOut(new PrintStream(&quot;output.txt&quot;)))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.alloc,new PrintStream(&quot;output.txt&quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj1,new PrintStream(&quot;output.txt&quot;))>", "43": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "44": "<(&lt;operator&gt;.assignment,ANY r = new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "46": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,r,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>4</SUB>>", "53": "<(IDENTIFIER,$obj2,new InputStreamReader(System.in))>", "55": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>4</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.assignment,String[] s = split(&quot;\\\\s+&quot;))<SUB>5</SUB>>", "61": "<(split,split(&quot;\\\\s+&quot;))<SUB>5</SUB>>", "63": "<(IDENTIFIER,r,readLine())<SUB>5</SUB>>", "65": "<(LOCAL,int n: int)<SUB>6</SUB>>", "67": "<(IDENTIFIER,n,int n = Integer.parseInt(s[0]))<SUB>6</SUB>>", "69": "<(IDENTIFIER,Integer,Integer.parseInt(s[0]))<SUB>6</SUB>>", "71": "<(IDENTIFIER,s,Integer.parseInt(s[0]))<SUB>6</SUB>>", "73": "<(LOCAL,int m: int)<SUB>7</SUB>>", "75": "<(IDENTIFIER,m,int m = Integer.parseInt(s[1]))<SUB>7</SUB>>", "77": "<(IDENTIFIER,Integer,Integer.parseInt(s[1]))<SUB>7</SUB>>", "79": "<(IDENTIFIER,s,Integer.parseInt(s[1]))<SUB>7</SUB>>", "81": "<(LOCAL,int k: int)<SUB>8</SUB>>", "83": "<(IDENTIFIER,k,int k = parseInt(r.readLine()))<SUB>8</SUB>>", "85": "<(IDENTIFIER,Integer,parseInt(r.readLine()))<SUB>8</SUB>>", "87": "<(IDENTIFIER,r,readLine())<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.assignment,int[][] a = new int[n][m])<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.alloc,new int[n][m])>", "93": "<(IDENTIFIER,m,new int[n][m])<SUB>9</SUB>>", "95": "<(LOCAL,int i: int)<SUB>10</SUB>>", "97": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "101": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "103": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "109": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "111": "<(IDENTIFIER,j,j &lt; m)<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "115": "<(&lt;operator&gt;.assignment,a[i][j] = Integer.MAX_VALUE)<SUB>12</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "119": "<(IDENTIFIER,i,a[i][j] = Integer.MAX_VALUE)<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>12</SUB>>", "123": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>12</SUB>>", "125": "<(&lt;operator&gt;.logicalAnd,k &gt;= 1 &amp;&amp; k &lt; n * m)<SUB>14</SUB>>", "127": "<(IDENTIFIER,k,k &gt;= 1)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.lessThan,k &lt; n * m)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.multiplication,n * m)<SUB>14</SUB>>", "133": "<(IDENTIFIER,m,n * m)<SUB>14</SUB>>", "135": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>15</SUB>>", "137": "<(LITERAL,0,int max = 0)<SUB>15</SUB>>", "138": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(r.readLine()))<SUB>16</SUB>>", "140": "<(&lt;operator&gt;.alloc,new StringTokenizer(r.readLine()))<SUB>16</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(r.readLine()))<SUB>16</SUB>>", "143": "<(IDENTIFIER,r,readLine())<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.equals,st.countTokens() == k)<SUB>17</SUB>>", "147": "<(IDENTIFIER,st,countTokens())<SUB>17</SUB>>", "149": "<(CONTROL_STRUCTURE,for (; Some(k &gt; 0); k--),for (; Some(k &gt; 0); k--))<SUB>18</SUB>>", "151": "<(IDENTIFIER,k,k &gt; 0)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.postDecrement,k--)<SUB>18</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.assignment,int x = Integer.parseInt(st.nextToken()) - 1)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.subtraction,Integer.parseInt(st.nextToken()) - 1)<SUB>19</SUB>>", "161": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>19</SUB>>", "163": "<(IDENTIFIER,st,nextToken())<SUB>19</SUB>>", "165": "<(LOCAL,int y: int)<SUB>20</SUB>>", "167": "<(IDENTIFIER,y,int y = Integer.parseInt(st.nextToken()) - 1)<SUB>20</SUB>>", "169": "<(parseInt,parseInt(st.nextToken()))<SUB>20</SUB>>", "171": "<(nextToken,nextToken())<SUB>20</SUB>>", "173": "<(LITERAL,1,Integer.parseInt(st.nextToken()) - 1)<SUB>20</SUB>>", "175": "<(&lt;operator&gt;.logicalAnd,x &gt;= 1 &amp;&amp; x &lt;= n &amp;&amp; y &gt;= 1 &amp;&amp; y &lt;= n)<SUB>21</SUB>>", "177": "<(&lt;operator&gt;.logicalAnd,x &gt;= 1 &amp;&amp; x &lt;= n)<SUB>21</SUB>>", "179": "<(IDENTIFIER,x,x &gt;= 1)<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.lessEqualsThan,x &lt;= n)<SUB>21</SUB>>", "183": "<(IDENTIFIER,n,x &lt;= n)<SUB>21</SUB>>", "185": "<(IDENTIFIER,y,y &gt;= 1)<SUB>21</SUB>>", "187": "<(&lt;operator&gt;.lessEqualsThan,y &lt;= n)<SUB>21</SUB>>", "189": "<(IDENTIFIER,n,y &lt;= n)<SUB>21</SUB>>", "191": "<(LOCAL,int i: int)<SUB>23</SUB>>", "193": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "195": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>23</SUB>>", "197": "<(IDENTIFIER,n,i &lt; n)<SUB>23</SUB>>", "199": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "201": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>24</SUB>>", "205": "<(LITERAL,0,int j = 0)<SUB>24</SUB>>", "207": "<(IDENTIFIER,j,j &lt; m)<SUB>24</SUB>>", "209": "<(&lt;operator&gt;.postIncrement,j++)<SUB>24</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "213": "<(&lt;operator&gt;.assignment,int d = Math.abs(i - x) + Math.abs(j - y))<SUB>25</SUB>>", "215": "<(&lt;operator&gt;.addition,Math.abs(i - x) + Math.abs(j - y))<SUB>25</SUB>>", "217": "<(IDENTIFIER,Math,Math.abs(i - x))<SUB>25</SUB>>", "219": "<(IDENTIFIER,i,i - x)<SUB>25</SUB>>", "221": "<(abs,Math.abs(j - y))<SUB>25</SUB>>", "223": "<(&lt;operator&gt;.subtraction,j - y)<SUB>25</SUB>>", "225": "<(IDENTIFIER,y,j - y)<SUB>25</SUB>>", "227": "<(&lt;operator&gt;.greaterThan,a[i][j] &gt; d)<SUB>26</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>26</SUB>>", "231": "<(IDENTIFIER,i,a[i][j] &gt; d)<SUB>26</SUB>>", "233": "<(IDENTIFIER,d,a[i][j] &gt; d)<SUB>26</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>27</SUB>>", "237": "<(IDENTIFIER,a,a[i][j] = d)<SUB>27</SUB>>", "239": "<(IDENTIFIER,j,a[i][j] = d)<SUB>27</SUB>>", "241": "<(CONTROL_STRUCTURE,if (k == 1 &amp;&amp; a[i][j] &gt; max),if (k == 1 &amp;&amp; a[i][j] &gt; max))<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.equals,k == 1)<SUB>28</SUB>>", "245": "<(LITERAL,1,k == 1)<SUB>28</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>28</SUB>>", "249": "<(IDENTIFIER,a,a[i][j] &gt; max)<SUB>28</SUB>>", "251": "<(IDENTIFIER,j,a[i][j] &gt; max)<SUB>28</SUB>>", "253": "<(&lt;operator&gt;.assignment,max = a[i][j])<SUB>29</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>29</SUB>>", "257": "<(IDENTIFIER,a,max = a[i][j])<SUB>29</SUB>>", "259": "<(IDENTIFIER,j,max = a[i][j])<SUB>29</SUB>>", "261": "<(LOCAL,int i: int)<SUB>34</SUB>>", "263": "<(IDENTIFIER,i,int i = 0)<SUB>34</SUB>>", "265": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>34</SUB>>", "267": "<(IDENTIFIER,n,i &lt; n)<SUB>34</SUB>>", "269": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "271": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>35</SUB>>", "273": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>35</SUB>>", "275": "<(LITERAL,0,int j = 0)<SUB>35</SUB>>", "277": "<(IDENTIFIER,j,j &lt; m)<SUB>35</SUB>>", "279": "<(&lt;operator&gt;.postIncrement,j++)<SUB>35</SUB>>", "281": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "283": "<(&lt;operator&gt;.equals,a[i][j] == max)<SUB>36</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>36</SUB>>", "287": "<(IDENTIFIER,i,a[i][j] == max)<SUB>36</SUB>>", "289": "<(IDENTIFIER,max,a[i][j] == max)<SUB>36</SUB>>", "291": "<(println,System.out.println((i + 1) + &quot; &quot; + (j + 1)))<SUB>37</SUB>>", "293": "<(IDENTIFIER,System,System.out.println((i + 1) + &quot; &quot; + (j + 1)))<SUB>37</SUB>>", "295": "<(&lt;operator&gt;.addition,(i + 1) + &quot; &quot; + (j + 1))<SUB>37</SUB>>", "297": "<(&lt;operator&gt;.addition,i + 1)<SUB>37</SUB>>", "299": "<(LITERAL,1,i + 1)<SUB>37</SUB>>", "301": "<(&lt;operator&gt;.addition,j + 1)<SUB>37</SUB>>", "303": "<(LITERAL,1,j + 1)<SUB>37</SUB>>", "305": "<(MODIFIER,PUBLIC)>", "307": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}