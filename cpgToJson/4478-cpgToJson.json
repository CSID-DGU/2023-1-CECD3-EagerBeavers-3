{"edges": [["21", "22"], ["21", "23"], ["21", "248"], ["21", "249"], ["21", "250"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "63"], ["23", "64"], ["23", "69"], ["23", "124"], ["23", "125"], ["23", "131"], ["23", "137"], ["23", "142"], ["23", "237"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "79"], ["69", "81"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "91"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "108"], ["92", "93"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["108", "109"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "127"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["131", "134"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "152"], ["142", "154"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "172"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["172", "181"], ["172", "182"], ["172", "185"], ["172", "219"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["185", "190"], ["185", "193"], ["185", "195"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["195", "196"], ["196", "197"], ["196", "204"], ["196", "211"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["223", "228"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "61"], ["59", "66"], ["64", "71"], ["125", "136"], ["131", "138"], ["137", "144"], ["237", "250"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["66", "64"], ["71", "76"], ["74", "83"], ["74", "128"], ["79", "76"], ["127", "125"], ["134", "131"], ["138", "137"], ["144", "151"], ["147", "156"], ["147", "240"], ["152", "151"], ["238", "244"], ["241", "237"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["76", "74"], ["82", "97"], ["82", "79"], ["128", "127"], ["136", "134"], ["149", "147"], ["156", "159"], ["159", "168"], ["159", "152"], ["162", "159"], ["240", "238"], ["243", "241"], ["31", "29"], ["34", "32"], ["83", "88"], ["86", "82"], ["92", "115"], ["108", "79"], ["151", "149"], ["165", "178"], ["165", "162"], ["244", "243"], ["36", "34"], ["88", "86"], ["93", "92"], ["109", "108"], ["166", "165"], ["174", "182"], ["182", "187"], ["219", "162"], ["94", "104"], ["101", "93"], ["110", "120"], ["119", "109"], ["168", "166"], ["176", "174"], ["187", "190"], ["190", "200"], ["190", "220"], ["193", "190"], ["220", "225"], ["223", "219"], ["96", "94"], ["102", "101"], ["112", "110"], ["120", "119"], ["178", "176"], ["225", "229"], ["228", "223"], ["97", "96"], ["104", "102"], ["113", "112"], ["197", "207"], ["197", "215"], ["204", "193"], ["229", "234"], ["232", "228"], ["115", "113"], ["198", "197"], ["206", "204"], ["212", "193"], ["234", "232"], ["200", "198"], ["207", "206"], ["214", "212"], ["215", "214"], ["21", "26"], ["22", "250"], ["24", "250"], ["29", "250"], ["32", "250"], ["32", "250"], ["32", "250"], ["27", "250"], ["38", "250"], ["41", "250"], ["45", "250"], ["54", "250"], ["56", "250"], ["54", "250"], ["52", "250"], ["52", "250"], ["59", "250"], ["61", "250"], ["59", "250"], ["59", "250"], ["64", "250"], ["64", "250"], ["64", "250"], ["71", "250"], ["74", "250"], ["76", "250"], ["74", "250"], ["74", "250"], ["125", "250"], ["125", "250"], ["131", "250"], ["131", "250"], ["131", "250"], ["137", "250"], ["137", "250"], ["144", "250"], ["147", "250"], ["147", "250"], ["147", "250"], ["237", "250"], ["244", "250"], ["243", "250"], ["237", "250"], ["237", "250"], ["156", "250"], ["159", "250"], ["159", "250"], ["152", "250"], ["166", "250"], ["165", "250"], ["165", "250"], ["174", "250"], ["176", "250"], ["174", "250"], ["174", "250"], ["182", "250"], ["187", "250"], ["190", "250"], ["190", "250"], ["219", "250"], ["228", "250"], ["232", "250"], ["234", "250"], ["232", "250"], ["228", "250"], ["223", "250"], ["219", "250"], ["219", "250"], ["162", "250"], ["198", "250"], ["197", "250"], ["197", "250"], ["212", "250"], ["212", "250"], ["204", "250"], ["204", "250"], ["193", "250"], ["82", "250"], ["86", "250"], ["86", "250"], ["82", "250"], ["82", "250"], ["92", "250"], ["92", "250"], ["113", "250"], ["112", "250"], ["120", "250"], ["119", "250"], ["108", "250"], ["108", "250"], ["79", "250"], ["223", "250"], ["131", "250"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["66", "64"], ["127", "125"], ["21", "137"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "71"], ["21", "131"], ["125", "131"], ["54", "131"], ["21", "144"], ["131", "237"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["42", "61"], ["21", "61"], ["52", "66"], ["21", "66"], ["71", "74"], ["79", "74"], ["21", "74"], ["76", "74"], ["76", "74"], ["120", "79"], ["21", "79"], ["83", "79"], ["128", "127"], ["128", "127"], ["144", "147"], ["152", "147"], ["21", "147"], ["131", "147"], ["147", "152"], ["166", "152"], ["234", "152"], ["21", "152"], ["21", "156"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["45", "76"], ["21", "76"], ["83", "82"], ["83", "82"], ["86", "82"], ["86", "82"], ["21", "128"], ["66", "128"], ["156", "159"], ["162", "159"], ["21", "159"], ["128", "159"], ["190", "159"], ["168", "162"], ["178", "162"], ["21", "162"], ["244", "243"], ["244", "243"], ["21", "243"], ["59", "83"], ["86", "83"], ["120", "83"], ["21", "83"], ["74", "83"], ["83", "86"], ["21", "86"], ["83", "86"], ["166", "165"], ["166", "165"], ["21", "165"], ["176", "174"], ["176", "174"], ["21", "182"], ["223", "219"], ["223", "219"], ["223", "219"], ["21", "244"], ["128", "244"], ["159", "244"], ["83", "88"], ["21", "88"], ["147", "166"], ["234", "166"], ["21", "166"], ["168", "166"], ["168", "166"], ["21", "187"], ["102", "101"], ["102", "101"], ["21", "101"], ["120", "119"], ["120", "119"], ["21", "119"], ["21", "168"], ["159", "168"], ["166", "176"], ["21", "176"], ["178", "176"], ["178", "176"], ["187", "190"], ["193", "190"], ["21", "190"], ["159", "190"], ["200", "193"], ["21", "193"], ["21", "223"], ["131", "223"], ["219", "223"], ["232", "223"], ["232", "223"], ["97", "96"], ["97", "96"], ["21", "96"], ["97", "102"], ["21", "102"], ["97", "102"], ["113", "112"], ["113", "112"], ["21", "112"], ["113", "120"], ["21", "120"], ["97", "120"], ["21", "178"], ["168", "178"], ["131", "228"], ["232", "228"], ["232", "228"], ["86", "97"], ["21", "97"], ["83", "97"], ["97", "104"], ["21", "104"], ["102", "113"], ["21", "113"], ["97", "113"], ["198", "197"], ["198", "197"], ["21", "197"], ["182", "204"], ["212", "204"], ["21", "204"], ["182", "232"], ["212", "232"], ["204", "232"], ["21", "232"], ["234", "232"], ["234", "232"], ["21", "115"], ["97", "115"], ["176", "198"], ["21", "198"], ["200", "198"], ["200", "198"], ["182", "212"], ["204", "212"], ["21", "212"], ["54", "234"], ["131", "234"], ["21", "234"], ["176", "234"], ["198", "234"], ["21", "200"], ["190", "200"], ["74", "74"], ["74", "76"], ["74", "79"], ["74", "88"], ["74", "86"], ["74", "82"], ["74", "83"], ["147", "149"], ["147", "151"], ["147", "152"], ["147", "159"], ["147", "147"], ["147", "156"], ["82", "94"], ["82", "115"], ["82", "96"], ["82", "120"], ["82", "113"], ["82", "102"], ["82", "104"], ["82", "119"], ["82", "92"], ["82", "97"], ["82", "112"], ["82", "93"], ["82", "101"], ["82", "108"], ["82", "110"], ["82", "109"], ["159", "162"], ["159", "168"], ["159", "166"], ["159", "159"], ["159", "165"], ["165", "225"], ["165", "178"], ["165", "232"], ["165", "228"], ["165", "223"], ["165", "187"], ["165", "190"], ["165", "174"], ["165", "182"], ["165", "176"], ["165", "220"], ["165", "234"], ["165", "229"], ["165", "219"], ["190", "197"], ["190", "198"], ["190", "190"], ["190", "193"], ["190", "200"], ["197", "214"], ["197", "215"], ["197", "204"], ["197", "206"], ["197", "207"], ["197", "212"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int N = parseInt(st.nextToken()))<SUB>5</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "49": "<(nextToken,nextToken())<SUB>5</SUB>>", "51": "<(LOCAL,int M: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,M,int M = parseInt(st.nextToken()))<SUB>6</SUB>>", "55": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,String input = readLine())<SUB>7</SUB>>", "61": "<(readLine,readLine())<SUB>7</SUB>>", "63": "<(LOCAL,int[][] cnt: int[][])<SUB>8</SUB>>", "65": "<(IDENTIFIER,cnt,int[][] cnt = new int[M][M])<SUB>8</SUB>>", "67": "<(IDENTIFIER,M,new int[M][M])<SUB>8</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "73": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>9</SUB>>", "77": "<(IDENTIFIER,N,N - 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,if (input.charAt(i) != input.charAt(i + 1)),if (input.charAt(i) != input.charAt(i + 1)))<SUB>10</SUB>>", "83": "<(charAt,input.charAt(i))<SUB>10</SUB>>", "85": "<(IDENTIFIER,i,input.charAt(i))<SUB>10</SUB>>", "87": "<(IDENTIFIER,input,input.charAt(i + 1))<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,cnt[input.charAt(i) - 'a'][input.charAt(i + 1) - 'a'])<SUB>12</SUB>>", "95": "<(IDENTIFIER,cnt,cnt[input.charAt(i) - 'a'][input.charAt(i + 1) - 'a']++)<SUB>12</SUB>>", "97": "<(charAt,input.charAt(i))<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,input.charAt(i))<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.subtraction,input.charAt(i + 1) - 'a')<SUB>12</SUB>>", "103": "<(IDENTIFIER,input,input.charAt(i + 1))<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,i + 1)<SUB>12</SUB>>", "107": "<(LITERAL,'a',input.charAt(i + 1) - 'a')<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,cnt[input.charAt(i + 1) - 'a'][input.charAt(i) - 'a'])<SUB>13</SUB>>", "111": "<(IDENTIFIER,cnt,cnt[input.charAt(i + 1) - 'a'][input.charAt(i) - 'a']++)<SUB>13</SUB>>", "113": "<(charAt,input.charAt(i + 1))<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.addition,i + 1)<SUB>13</SUB>>", "117": "<(LITERAL,1,i + 1)<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.subtraction,input.charAt(i) - 'a')<SUB>13</SUB>>", "121": "<(IDENTIFIER,input,input.charAt(i))<SUB>13</SUB>>", "123": "<(LITERAL,'a',input.charAt(i) - 'a')<SUB>13</SUB>>", "125": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; M])<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; M])>", "129": "<(LITERAL,1,1 &lt;&lt; M)<SUB>15</SUB>>", "131": "<(fill,fill(dp, Integer.MAX_VALUE))<SUB>16</SUB>>", "133": "<(IDENTIFIER,dp,fill(dp, Integer.MAX_VALUE))<SUB>16</SUB>>", "135": "<(IDENTIFIER,Integer,fill(dp, Integer.MAX_VALUE))<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>17</SUB>>", "139": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>17</SUB>>", "141": "<(LITERAL,0,dp[0] = 0)<SUB>17</SUB>>", "143": "<(LOCAL,int mask: int)<SUB>18</SUB>>", "145": "<(IDENTIFIER,mask,int mask = 0)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.lessThan,mask &lt; dp.length)<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,dp.length)<SUB>18</SUB>>", "151": "<(FIELD_IDENTIFIER,length,length)<SUB>18</SUB>>", "153": "<(IDENTIFIER,mask,mask++)<SUB>18</SUB>>", "155": "<(LOCAL,int b: int)<SUB>19</SUB>>", "157": "<(IDENTIFIER,b,int b = 0)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.lessThan,b &lt; M)<SUB>19</SUB>>", "161": "<(IDENTIFIER,M,b &lt; M)<SUB>19</SUB>>", "163": "<(IDENTIFIER,b,b++)<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; b)) == 0)<SUB>20</SUB>>", "167": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; b))<SUB>20</SUB>>", "169": "<(LITERAL,1,1 &lt;&lt; b)<SUB>20</SUB>>", "171": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; b)) == 0)<SUB>20</SUB>>", "173": "<(LOCAL,int submask: int)<SUB>22</SUB>>", "175": "<(IDENTIFIER,submask,int submask = mask | (1 &lt;&lt; b))<SUB>22</SUB>>", "177": "<(IDENTIFIER,mask,mask | (1 &lt;&lt; b))<SUB>22</SUB>>", "179": "<(LITERAL,1,1 &lt;&lt; b)<SUB>22</SUB>>", "181": "<(LOCAL,int cost: int)<SUB>23</SUB>>", "183": "<(IDENTIFIER,cost,int cost = 0)<SUB>23</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; M); c++),for (int c = 0; Some(c &lt; M); c++))<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>24</SUB>>", "189": "<(LITERAL,0,int c = 0)<SUB>24</SUB>>", "191": "<(IDENTIFIER,c,c &lt; M)<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.postIncrement,c++)<SUB>24</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; c)) &gt; 0)<SUB>26</SUB>>", "199": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; c))<SUB>26</SUB>>", "201": "<(LITERAL,1,1 &lt;&lt; c)<SUB>26</SUB>>", "203": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; c)) &gt; 0)<SUB>26</SUB>>", "205": "<(IDENTIFIER,cost,cost += cnt[b][c])<SUB>27</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,cnt[b])<SUB>27</SUB>>", "209": "<(IDENTIFIER,b,cost += cnt[b][c])<SUB>27</SUB>>", "211": "<(CONTROL_STRUCTURE,else,else)<SUB>29</SUB>>", "213": "<(IDENTIFIER,cost,cost -= cnt[b][c])<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,cnt[b])<SUB>29</SUB>>", "217": "<(IDENTIFIER,b,cost -= cnt[b][c])<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.assignment,dp[submask] = Math.min(dp[submask], dp[mask] + cost * Integer.bitCount(mask)))<SUB>31</SUB>>", "221": "<(IDENTIFIER,dp,dp[submask] = Math.min(dp[submask], dp[mask] + cost * Integer.bitCount(mask)))<SUB>31</SUB>>", "223": "<(min,Math.min(dp[submask], dp[mask] + cost * Integer.bitCount(mask)))<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,dp[submask])<SUB>31</SUB>>", "227": "<(IDENTIFIER,submask,Math.min(dp[submask], dp[mask] + cost * Integer.bitCount(mask)))<SUB>31</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>31</SUB>>", "231": "<(IDENTIFIER,mask,dp[mask] + cost * Integer.bitCount(mask))<SUB>31</SUB>>", "233": "<(IDENTIFIER,cost,cost * Integer.bitCount(mask))<SUB>31</SUB>>", "235": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>31</SUB>>", "237": "<(println,System.out.println(dp[(1 &lt;&lt; M) - 1]))<SUB>33</SUB>>", "239": "<(IDENTIFIER,System,System.out.println(dp[(1 &lt;&lt; M) - 1]))<SUB>33</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; M) - 1])<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; M) - 1)<SUB>33</SUB>>", "245": "<(LITERAL,1,1 &lt;&lt; M)<SUB>33</SUB>>", "247": "<(LITERAL,1,(1 &lt;&lt; M) - 1)<SUB>33</SUB>>", "249": "<(MODIFIER,STATIC)>"}}