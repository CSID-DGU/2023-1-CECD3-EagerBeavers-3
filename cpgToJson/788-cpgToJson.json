{"edges": [["23", "24"], ["23", "25"], ["23", "170"], ["23", "171"], ["23", "172"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "48"], ["25", "6"], ["25", "53"], ["25", "56"], ["25", "8"], ["25", "57"], ["25", "60"], ["25", "61"], ["25", "62"], ["25", "65"], ["25", "111"], ["25", "112"], ["25", "115"], ["25", "116"], ["25", "121"], ["25", "165"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["51", "52"], ["53", "54"], ["53", "55"], ["56", "5"], ["57", "58"], ["57", "59"], ["60", "7"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "104"], ["76", "77"], ["76", "83"], ["77", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "89"], ["83", "101"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["94", "100"], ["95", "96"], ["95", "97"], ["98", "99"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "133"], ["131", "138"], ["131", "139"], ["131", "146"], ["131", "151"], ["131", "157"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["153", "156"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["159", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["26", "33"], ["29", "45"], ["41", "51"], ["48", "55"], ["53", "56"], ["56", "59"], ["57", "60"], ["60", "62"], ["62", "67"], ["112", "118"], ["116", "123"], ["165", "172"], ["28", "26"], ["43", "41"], ["50", "48"], ["55", "53"], ["59", "57"], ["67", "70"], ["70", "80"], ["70", "112"], ["73", "70"], ["118", "116"], ["123", "126"], ["126", "135"], ["126", "168"], ["129", "126"], ["166", "165"], ["31", "38"], ["34", "29"], ["45", "43"], ["51", "50"], ["104", "73"], ["133", "142"], ["139", "147"], ["151", "162"], ["157", "129"], ["168", "166"], ["33", "31"], ["36", "34"], ["77", "86"], ["77", "107"], ["105", "104"], ["135", "133"], ["141", "139"], ["147", "168"], ["147", "153"], ["153", "151"], ["159", "157"], ["38", "36"], ["78", "77"], ["84", "91"], ["89", "101"], ["101", "107"], ["107", "105"], ["142", "141"], ["162", "159"], ["80", "78"], ["86", "84"], ["91", "97"], ["95", "98"], ["98", "89"], ["97", "95"], ["23", "28"], ["24", "172"], ["26", "172"], ["31", "172"], ["34", "172"], ["34", "172"], ["34", "172"], ["29", "172"], ["41", "172"], ["41", "172"], ["48", "172"], ["51", "172"], ["50", "172"], ["48", "172"], ["48", "172"], ["53", "172"], ["56", "172"], ["56", "172"], ["57", "172"], ["60", "172"], ["60", "172"], ["62", "172"], ["67", "172"], ["70", "172"], ["70", "172"], ["112", "172"], ["112", "172"], ["118", "172"], ["116", "172"], ["116", "172"], ["123", "172"], ["126", "172"], ["126", "172"], ["126", "172"], ["133", "172"], ["133", "172"], ["142", "172"], ["142", "172"], ["141", "172"], ["141", "172"], ["139", "172"], ["139", "172"], ["147", "172"], ["147", "172"], ["153", "172"], ["151", "172"], ["151", "172"], ["159", "172"], ["162", "172"], ["159", "172"], ["157", "172"], ["157", "172"], ["129", "172"], ["165", "172"], ["165", "172"], ["165", "172"], ["78", "172"], ["77", "172"], ["77", "172"], ["84", "172"], ["84", "172"], ["95", "172"], ["98", "172"], ["98", "172"], ["89", "172"], ["101", "172"], ["105", "172"], ["105", "172"], ["104", "172"], ["104", "172"], ["73", "172"], ["43", "172"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["50", "48"], ["23", "53"], ["23", "57"], ["41", "62"], ["23", "62"], ["62", "112"], ["101", "112"], ["23", "112"], ["112", "116"], ["23", "116"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["53", "56"], ["23", "56"], ["57", "60"], ["23", "60"], ["23", "67"], ["23", "123"], ["116", "165"], ["157", "165"], ["23", "165"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["51", "50"], ["67", "70"], ["73", "70"], ["23", "70"], ["41", "70"], ["104", "73"], ["23", "73"], ["112", "118"], ["23", "118"], ["123", "126"], ["129", "126"], ["23", "126"], ["70", "126"], ["162", "129"], ["23", "129"], ["48", "133"], ["141", "139"], ["141", "139"], ["153", "151"], ["153", "151"], ["153", "151"], ["159", "157"], ["159", "157"], ["159", "157"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["45", "51"], ["23", "51"], ["105", "104"], ["105", "104"], ["70", "104"], ["23", "104"], ["78", "77"], ["78", "77"], ["70", "101"], ["23", "101"], ["56", "105"], ["89", "105"], ["23", "105"], ["48", "105"], ["78", "105"], ["89", "105"], ["142", "141"], ["142", "141"], ["126", "141"], ["23", "141"], ["139", "147"], ["23", "147"], ["159", "153"], ["23", "153"], ["162", "153"], ["112", "153"], ["147", "153"], ["153", "159"], ["23", "159"], ["116", "159"], ["157", "159"], ["162", "159"], ["162", "159"], ["60", "78"], ["84", "78"], ["23", "78"], ["48", "78"], ["105", "78"], ["78", "84"], ["23", "84"], ["48", "84"], ["78", "84"], ["56", "89"], ["105", "89"], ["23", "89"], ["48", "89"], ["84", "89"], ["95", "89"], ["98", "89"], ["56", "142"], ["105", "142"], ["23", "142"], ["133", "142"], ["151", "162"], ["23", "162"], ["141", "162"], ["23", "95"], ["23", "100"], ["95", "98"], ["23", "98"], ["70", "107"], ["70", "73"], ["70", "77"], ["70", "104"], ["70", "80"], ["70", "105"], ["70", "70"], ["70", "78"], ["126", "141"], ["126", "142"], ["126", "147"], ["126", "135"], ["126", "139"], ["126", "133"], ["77", "89"], ["77", "98"], ["77", "84"], ["77", "95"], ["77", "97"], ["77", "91"], ["77", "101"], ["77", "86"], ["147", "151"], ["147", "162"], ["147", "153"], ["147", "157"], ["147", "159"], ["147", "129"], ["147", "126"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(in.readLine()))<SUB>4</SUB>>", "43": "<(parseInt,parseInt(in.readLine()))<SUB>4</SUB>>", "45": "<(readLine,readLine())<SUB>4</SUB>>", "47": "<(LOCAL,char[] ps: char[])<SUB>5</SUB>>", "49": "<(IDENTIFIER,ps,char[] ps = toCharArray())<SUB>5</SUB>>", "51": "<(readLine,readLine())<SUB>5</SUB>>", "6": "<(LOCAL,HashMap&lt;Character, TreeSet&lt;Integer&gt;&gt; locs: ANY)<SUB>6</SUB>>", "54": "<(IDENTIFIER,locs,ANY locs = new HashMap&lt;Character, TreeSet&lt;Integer&gt;&gt;())<SUB>6</SUB>>", "56": "<(&lt;init&gt;,new HashMap&lt;Character, TreeSet&lt;Integer&gt;&gt;())<SUB>7</SUB>>", "8": "<(LOCAL,HashSet&lt;Character&gt; poks: ANY)<SUB>8</SUB>>", "58": "<(IDENTIFIER,poks,ANY poks = new HashSet&lt;Character&gt;())<SUB>8</SUB>>", "60": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>8</SUB>>", "61": "<(LOCAL,int lastNew: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,lastNew,int lastNew = n)<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.logicalNot,!poks.contains(ps[i]))<SUB>11</SUB>>", "79": "<(IDENTIFIER,poks,contains(ps[i]))<SUB>11</SUB>>", "81": "<(IDENTIFIER,ps,contains(ps[i]))<SUB>11</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "85": "<(IDENTIFIER,poks,add(ps[i]))<SUB>12</SUB>>", "87": "<(IDENTIFIER,ps,add(ps[i]))<SUB>12</SUB>>", "89": "<(put,put(ps[i], new TreeSet&lt;Integer&gt;()))<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,ps[i])<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,put(ps[i], new TreeSet&lt;Integer&gt;()))<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "97": "<(&lt;operator&gt;.alloc,new TreeSet&lt;Integer&gt;())<SUB>13</SUB>>", "99": "<(IDENTIFIER,$obj4,new TreeSet&lt;Integer&gt;())>", "101": "<(&lt;operator&gt;.assignment,lastNew = i)<SUB>14</SUB>>", "103": "<(IDENTIFIER,i,lastNew = i)<SUB>14</SUB>>", "105": "<(get,get(ps[i]))<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,ps[i])<SUB>16</SUB>>", "109": "<(IDENTIFIER,i,get(ps[i]))<SUB>16</SUB>>", "111": "<(LOCAL,int max: int)<SUB>18</SUB>>", "113": "<(IDENTIFIER,max,int max = lastNew)<SUB>18</SUB>>", "115": "<(LOCAL,int minRange: int)<SUB>19</SUB>>", "117": "<(IDENTIFIER,minRange,int minRange = max + 1)<SUB>19</SUB>>", "119": "<(IDENTIFIER,max,max + 1)<SUB>19</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int min = 0; Some(min &lt; n); min++),for (int min = 0; Some(min &lt; n); min++))<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.assignment,int min = 0)<SUB>20</SUB>>", "125": "<(LITERAL,0,int min = 0)<SUB>20</SUB>>", "127": "<(IDENTIFIER,min,min &lt; n)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,min++)<SUB>20</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.assignment,char pAtMin = ps[min])<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,ps[min])<SUB>21</SUB>>", "137": "<(IDENTIFIER,min,char pAtMin = ps[min])<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.assignment,Integer nextInd = higher(min))<SUB>22</SUB>>", "141": "<(higher,higher(min))<SUB>22</SUB>>", "143": "<(IDENTIFIER,locs,get(pAtMin))<SUB>22</SUB>>", "145": "<(IDENTIFIER,min,higher(min))<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.equals,nextInd == null)<SUB>23</SUB>>", "149": "<(LITERAL,null,nextInd == null)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignment,max = Math.max(max, nextInd))<SUB>24</SUB>>", "153": "<(max,Math.max(max, nextInd))<SUB>24</SUB>>", "155": "<(IDENTIFIER,max,Math.max(max, nextInd))<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.assignment,minRange = Math.min(minRange, max - min))<SUB>25</SUB>>", "159": "<(min,Math.min(minRange, max - min))<SUB>25</SUB>>", "161": "<(IDENTIFIER,minRange,Math.min(minRange, max - min))<SUB>25</SUB>>", "163": "<(IDENTIFIER,max,max - min)<SUB>25</SUB>>", "165": "<(println,System.out.println(minRange))<SUB>27</SUB>>", "167": "<(IDENTIFIER,System,System.out.println(minRange))<SUB>27</SUB>>", "169": "<(IDENTIFIER,minRange,System.out.println(minRange))<SUB>27</SUB>>", "171": "<(MODIFIER,STATIC)>"}}