{"edges": [["23", "24"], ["23", "25"], ["23", "134"], ["23", "135"], ["23", "136"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "8"], ["25", "45"], ["25", "48"], ["25", "49"], ["25", "50"], ["25", "54"], ["25", "70"], ["25", "73"], ["25", "74"], ["25", "77"], ["25", "78"], ["25", "82"], ["25", "129"], ["25", "132"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "7"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "98"], ["92", "127"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["98", "105"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "121"], ["112", "113"], ["112", "120"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["121", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "43"], ["41", "47"], ["45", "48"], ["48", "52"], ["50", "56"], ["70", "74"], ["74", "80"], ["78", "84"], ["129", "132"], ["132", "136"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["47", "45"], ["52", "50"], ["56", "59"], ["59", "65"], ["59", "70"], ["62", "59"], ["64", "62"], ["80", "78"], ["84", "87"], ["87", "94"], ["87", "129"], ["90", "87"], ["32", "30"], ["39", "37"], ["65", "68"], ["68", "64"], ["127", "90"], ["94", "90"], ["94", "102"], ["100", "105"], ["105", "114"], ["105", "127"], ["108", "105"], ["102", "100"], ["112", "123"], ["112", "108"], ["113", "112"], ["122", "108"], ["114", "117"], ["117", "113"], ["123", "122"], ["23", "28"], ["24", "136"], ["26", "136"], ["29", "136"], ["29", "136"], ["33", "136"], ["36", "136"], ["36", "136"], ["43", "136"], ["41", "136"], ["41", "136"], ["45", "136"], ["48", "136"], ["48", "136"], ["50", "136"], ["50", "136"], ["70", "136"], ["70", "136"], ["74", "136"], ["78", "136"], ["78", "136"], ["78", "136"], ["84", "136"], ["87", "136"], ["87", "136"], ["87", "136"], ["129", "136"], ["129", "136"], ["132", "136"], ["132", "136"], ["100", "136"], ["100", "136"], ["105", "136"], ["105", "136"], ["127", "136"], ["113", "136"], ["113", "136"], ["112", "136"], ["112", "136"], ["122", "136"], ["122", "136"], ["108", "136"], ["90", "136"], ["64", "136"], ["68", "136"], ["64", "136"], ["64", "136"], ["62", "136"], ["70", "136"], ["23", "24"], ["23", "26"], ["23", "33"], ["43", "41"], ["23", "45"], ["52", "50"], ["23", "74"], ["80", "78"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["45", "48"], ["23", "48"], ["23", "56"], ["68", "64"], ["23", "70"], ["50", "70"], ["64", "70"], ["23", "84"], ["36", "129"], ["23", "129"], ["74", "129"], ["127", "129"], ["129", "132"], ["23", "132"], ["29", "43"], ["23", "43"], ["41", "52"], ["23", "52"], ["56", "59"], ["62", "59"], ["23", "59"], ["52", "59"], ["59", "62"], ["23", "62"], ["59", "80"], ["23", "80"], ["84", "87"], ["90", "87"], ["23", "87"], ["80", "87"], ["105", "87"], ["87", "90"], ["23", "90"], ["43", "68"], ["23", "68"], ["87", "100"], ["23", "100"], ["74", "127"], ["23", "127"], ["100", "105"], ["108", "105"], ["23", "105"], ["87", "105"], ["105", "108"], ["23", "108"], ["87", "102"], ["23", "102"], ["113", "112"], ["113", "112"], ["23", "112"], ["23", "122"], ["70", "113"], ["64", "113"], ["59", "68"], ["59", "64"], ["59", "65"], ["59", "59"], ["59", "62"], ["87", "94"], ["87", "87"], ["87", "90"], ["94", "105"], ["94", "100"], ["94", "102"], ["94", "127"], ["105", "113"], ["105", "105"], ["105", "114"], ["105", "117"], ["105", "112"], ["105", "108"], ["112", "122"], ["112", "123"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new MScanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new MScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MScanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new MScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "8": "<(LOCAL,HashSet&lt;Integer&gt; nums: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,nums,ANY nums = new HashSet&lt;Integer&gt;())<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;())<SUB>4</SUB>>", "49": "<(LOCAL,int[] in: int[])<SUB>5</SUB>>", "51": "<(IDENTIFIER,in,int[] in = new int[n])<SUB>5</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "55": "<(LOCAL,int i: int)<SUB>5</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>5</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>5</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>5</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>5</SUB>>", "67": "<(IDENTIFIER,i,in[i] = nextInt())<SUB>5</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "71": "<(IDENTIFIER,Arrays,sort(in))<SUB>6</SUB>>", "73": "<(LOCAL,int ans: int)<SUB>7</SUB>>", "75": "<(IDENTIFIER,ans,int ans = 0)<SUB>7</SUB>>", "77": "<(LOCAL,boolean[] vis: boolean[])<SUB>8</SUB>>", "79": "<(IDENTIFIER,vis,boolean[] vis = new boolean[n])<SUB>8</SUB>>", "81": "<(IDENTIFIER,n,new boolean[n])<SUB>8</SUB>>", "83": "<(LOCAL,int i: int)<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "89": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "93": "<(CONTROL_STRUCTURE,if (vis[i]),if (vis[i]))<SUB>10</SUB>>", "95": "<(IDENTIFIER,vis,if (vis[i]))<SUB>10</SUB>>", "97": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>10</SUB>>", "99": "<(LOCAL,int j: int)<SUB>11</SUB>>", "101": "<(IDENTIFIER,j,int j = i + 1)<SUB>11</SUB>>", "103": "<(IDENTIFIER,i,i + 1)<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>11</SUB>>", "107": "<(IDENTIFIER,n,j &lt; n)<SUB>11</SUB>>", "109": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "111": "<(CONTROL_STRUCTURE,if (in[j] % in[i] == 0),if (in[j] % in[i] == 0))<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.modulo,in[j] % in[i])<SUB>12</SUB>>", "115": "<(IDENTIFIER,in,in[j] % in[i])<SUB>12</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,in[i])<SUB>12</SUB>>", "119": "<(IDENTIFIER,i,in[j] % in[i])<SUB>12</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,vis[j])<SUB>13</SUB>>", "125": "<(IDENTIFIER,j,vis[j] = true)<SUB>13</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>16</SUB>>", "129": "<(println,println(ans))<SUB>18</SUB>>", "131": "<(IDENTIFIER,ans,println(ans))<SUB>18</SUB>>", "133": "<(IDENTIFIER,pw,flush())<SUB>20</SUB>>", "135": "<(MODIFIER,STATIC)>"}}