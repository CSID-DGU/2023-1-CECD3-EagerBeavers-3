{"edges": [["19", "21"], ["19", "213"], ["19", "214"], ["19", "215"], ["21", "22"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "75"], ["21", "76"], ["21", "82"], ["21", "91"], ["21", "191"], ["22", "23"], ["22", "24"], ["24", "25"], ["24", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "90"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["91", "100"], ["91", "103"], ["91", "105"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "112"], ["105", "117"], ["105", "118"], ["105", "129"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["129", "139"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["140", "141"], ["140", "148"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["148", "149"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["160", "161"], ["160", "172"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "180"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "190"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["191", "192"], ["191", "193"], ["191", "196"], ["191", "199"], ["191", "201"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["199", "200"], ["201", "202"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["22", "29"], ["27", "33"], ["30", "37"], ["35", "42"], ["40", "47"], ["76", "86"], ["82", "96"], ["24", "22"], ["29", "27"], ["31", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "58"], ["50", "79"], ["53", "50"], ["78", "76"], ["83", "82"], ["93", "100"], ["100", "109"], ["100", "193"], ["103", "100"], ["193", "196"], ["196", "215"], ["196", "205"], ["199", "196"], ["26", "24"], ["33", "31"], ["79", "78"], ["85", "83"], ["95", "93"], ["107", "113"], ["118", "131"], ["202", "199"], ["58", "61"], ["61", "69"], ["61", "53"], ["64", "61"], ["86", "85"], ["96", "95"], ["109", "107"], ["113", "103"], ["113", "125"], ["120", "118"], ["131", "134"], ["134", "144"], ["134", "103"], ["137", "134"], ["203", "209"], ["206", "202"], ["67", "64"], ["122", "120"], ["205", "203"], ["207", "206"], ["68", "73"], ["73", "67"], ["123", "122"], ["141", "151"], ["141", "137"], ["209", "207"], ["69", "68"], ["125", "123"], ["142", "141"], ["144", "142"], ["151", "154"], ["154", "162"], ["154", "137"], ["157", "154"], ["161", "177"], ["161", "157"], ["172", "157"], ["162", "161"], ["162", "168"], ["165", "161"], ["173", "182"], ["180", "172"], ["166", "165"], ["175", "173"], ["181", "180"], ["168", "166"], ["177", "175"], ["182", "186"], ["185", "181"], ["186", "185"], ["19", "26"], ["20", "215"], ["22", "215"], ["22", "215"], ["22", "215"], ["27", "215"], ["30", "215"], ["30", "215"], ["37", "215"], ["35", "215"], ["35", "215"], ["40", "215"], ["40", "215"], ["40", "215"], ["76", "215"], ["76", "215"], ["76", "215"], ["82", "215"], ["82", "215"], ["95", "215"], ["93", "215"], ["93", "215"], ["100", "215"], ["100", "215"], ["193", "215"], ["196", "215"], ["196", "215"], ["196", "215"], ["199", "215"], ["103", "215"], ["53", "215"], ["109", "215"], ["19", "20"], ["19", "27"], ["37", "35"], ["42", "40"], ["78", "76"], ["19", "82"], ["19", "22"], ["27", "30"], ["19", "30"], ["19", "47"], ["95", "93"], ["95", "93"], ["19", "193"], ["30", "37"], ["19", "37"], ["35", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["42", "50"], ["61", "50"], ["50", "53"], ["19", "53"], ["79", "78"], ["79", "78"], ["93", "100"], ["103", "100"], ["19", "100"], ["109", "103"], ["142", "103"], ["166", "103"], ["175", "103"], ["19", "103"], ["109", "107"], ["109", "107"], ["120", "118"], ["120", "118"], ["193", "196"], ["199", "196"], ["19", "196"], ["96", "196"], ["134", "196"], ["209", "199"], ["19", "199"], ["19", "58"], ["19", "79"], ["50", "79"], ["86", "85"], ["86", "85"], ["19", "85"], ["96", "95"], ["96", "95"], ["19", "95"], ["19", "131"], ["76", "202"], ["19", "202"], ["58", "61"], ["64", "61"], ["19", "61"], ["50", "61"], ["61", "64"], ["19", "64"], ["73", "67"], ["19", "86"], ["79", "86"], ["19", "96"], ["86", "96"], ["19", "109"], ["100", "109"], ["107", "113"], ["19", "113"], ["19", "120"], ["122", "120"], ["122", "120"], ["131", "134"], ["137", "134"], ["19", "134"], ["96", "134"], ["154", "134"], ["144", "137"], ["162", "137"], ["177", "137"], ["19", "137"], ["76", "206"], ["19", "206"], ["123", "122"], ["123", "122"], ["19", "122"], ["37", "73"], ["19", "73"], ["125", "123"], ["19", "123"], ["125", "123"], ["142", "141"], ["142", "141"], ["19", "141"], ["19", "209"], ["196", "209"], ["113", "125"], ["19", "125"], ["109", "142"], ["166", "142"], ["175", "142"], ["19", "142"], ["144", "142"], ["144", "142"], ["19", "151"], ["19", "144"], ["134", "144"], ["151", "154"], ["157", "154"], ["19", "154"], ["134", "154"], ["162", "157"], ["168", "157"], ["19", "157"], ["180", "172"], ["180", "172"], ["162", "161"], ["162", "161"], ["165", "161"], ["165", "161"], ["76", "172"], ["154", "162"], ["19", "162"], ["144", "162"], ["177", "162"], ["166", "165"], ["166", "165"], ["19", "165"], ["181", "180"], ["181", "180"], ["118", "180"], ["19", "180"], ["142", "166"], ["175", "166"], ["19", "166"], ["168", "166"], ["168", "166"], ["142", "175"], ["166", "175"], ["19", "175"], ["177", "175"], ["177", "175"], ["76", "181"], ["19", "168"], ["162", "168"], ["19", "177"], ["162", "177"], ["50", "50"], ["50", "58"], ["50", "61"], ["50", "53"], ["100", "107"], ["100", "113"], ["100", "103"], ["100", "100"], ["100", "109"], ["196", "209"], ["196", "196"], ["196", "206"], ["196", "207"], ["196", "202"], ["196", "205"], ["196", "199"], ["196", "203"], ["61", "68"], ["61", "73"], ["61", "64"], ["61", "69"], ["61", "67"], ["61", "61"], ["113", "120"], ["113", "131"], ["113", "134"], ["113", "118"], ["113", "122"], ["113", "123"], ["113", "125"], ["134", "144"], ["134", "134"], ["134", "137"], ["134", "141"], ["134", "142"], ["141", "154"], ["141", "151"], ["154", "154"], ["154", "161"], ["154", "162"], ["154", "157"], ["161", "185"], ["161", "181"], ["161", "173"], ["161", "182"], ["161", "186"], ["161", "180"], ["161", "177"], ["161", "175"], ["161", "172"], ["162", "168"], ["162", "166"], ["162", "165"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,Locale,setDefault(Locale.US))<SUB>2</SUB>>", "25": "<(IDENTIFIER,Locale,setDefault(Locale.US))<SUB>2</SUB>>", "4": "<(LOCAL,Scanner sc: ANY)<SUB>3</SUB>>", "28": "<(IDENTIFIER,sc,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "30": "<(&lt;init&gt;,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,double[][] p: double[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,p,double[][] p = new double[n][n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new double[n][n])<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(LOCAL,int j: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,j,int j = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,j &lt; n)<SUB>7</SUB>>", "65": "<(IDENTIFIER,j,j++)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,p[i][j] = nextDouble())<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,p[i][j] = nextDouble())<SUB>8</SUB>>", "73": "<(nextDouble,nextDouble())<SUB>8</SUB>>", "75": "<(LOCAL,double[] dp: double[])<SUB>11</SUB>>", "77": "<(IDENTIFIER,dp,double[] dp = new double[1 &lt;&lt; n])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>12</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; n)<SUB>12</SUB>>", "89": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int mask = (1 &lt;&lt; n) - 1; Some(mask &gt; 0); mask--),for (int mask = (1 &lt;&lt; n) - 1; Some(mask &gt; 0); mask--))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int mask = (1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "97": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "99": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,mask,mask &gt; 0)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.postDecrement,mask--)<SUB>13</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,int t = Integer.bitCount(mask))<SUB>14</SUB>>", "109": "<(bitCount,Integer.bitCount(mask))<SUB>14</SUB>>", "111": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.equals,t == 1)<SUB>15</SUB>>", "115": "<(LITERAL,1,t == 1)<SUB>15</SUB>>", "117": "<(LOCAL,double p0: double)<SUB>17</SUB>>", "119": "<(IDENTIFIER,p0,double p0 = 1.0 / (t * (t - 1) / 2))<SUB>17</SUB>>", "121": "<(LITERAL,1.0,1.0 / (t * (t - 1) / 2))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.multiplication,t * (t - 1))<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.subtraction,t - 1)<SUB>17</SUB>>", "127": "<(LITERAL,1,t - 1)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "133": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "141": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>19</SUB>>", "143": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>19</SUB>>", "145": "<(LITERAL,1,1 &lt;&lt; i)<SUB>19</SUB>>", "147": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>19</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>20</SUB>>", "153": "<(LITERAL,0,int j = 0)<SUB>20</SUB>>", "155": "<(IDENTIFIER,j,j &lt; n)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,j++)<SUB>20</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.logicalAnd,j != i &amp;&amp; (mask &amp; (1 &lt;&lt; j)) != 0)<SUB>21</SUB>>", "163": "<(IDENTIFIER,j,j != i)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; j)) != 0)<SUB>21</SUB>>", "167": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; j))<SUB>21</SUB>>", "169": "<(LITERAL,1,1 &lt;&lt; j)<SUB>21</SUB>>", "171": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; j)) != 0)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,dp[(mask ^ (1 &lt;&lt; i))])<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>22</SUB>>", "179": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.multiplication,dp[mask] * p[j][i])<SUB>22</SUB>>", "183": "<(IDENTIFIER,dp,dp[mask] * p[j][i])<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,p[j][i])<SUB>22</SUB>>", "187": "<(IDENTIFIER,p,dp[mask] * p[j][i])<SUB>22</SUB>>", "189": "<(IDENTIFIER,i,dp[mask] * p[j][i])<SUB>22</SUB>>", "191": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "195": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "197": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "199": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>28</SUB>>", "205": "<(FIELD_IDENTIFIER,out,out)<SUB>28</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i])<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>28</SUB>>", "211": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>28</SUB>>", "213": "<(MODIFIER,PUBLIC)>", "215": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}