{"edges": [["23", "25"], ["23", "207"], ["23", "208"], ["23", "209"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "205"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "51"], ["45", "52"], ["45", "56"], ["45", "6"], ["45", "72"], ["45", "75"], ["45", "76"], ["45", "77"], ["45", "8"], ["45", "81"], ["45", "84"], ["45", "85"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["75", "5"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["84", "7"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "93"], ["85", "95"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "169"], ["95", "174"], ["95", "175"], ["95", "179"], ["95", "193"], ["95", "199"], ["96", "97"], ["96", "105"], ["96", "113"], ["97", "98"], ["97", "100"], ["98", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "124"], ["114", "131"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["125", "126"], ["125", "127"], ["125", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["132", "133"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "154"], ["144", "162"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "161"], ["155", "156"], ["155", "157"], ["155", "158"], ["158", "159"], ["158", "160"], ["162", "163"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["169", "171"], ["169", "172"], ["172", "173"], ["175", "176"], ["175", "177"], ["177", "178"], ["179", "180"], ["179", "182"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "188"], ["184", "185"], ["184", "186"], ["186", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "198"], ["196", "197"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["26", "29"], ["29", "33"], ["31", "37"], ["205", "209"], ["28", "26"], ["33", "31"], ["37", "40"], ["40", "49"], ["40", "205"], ["43", "40"], ["47", "54"], ["52", "58"], ["72", "75"], ["75", "79"], ["77", "83"], ["81", "84"], ["84", "87"], ["49", "47"], ["54", "52"], ["58", "61"], ["61", "67"], ["61", "74"], ["64", "61"], ["66", "64"], ["74", "72"], ["79", "77"], ["83", "81"], ["87", "90"], ["90", "98"], ["90", "43"], ["93", "90"], ["67", "70"], ["70", "66"], ["169", "177"], ["175", "180"], ["193", "202"], ["199", "93"], ["97", "108"], ["97", "116"], ["172", "169"], ["177", "175"], ["180", "186"], ["180", "196"], ["195", "193"], ["200", "203"], ["203", "199"], ["98", "97"], ["98", "101"], ["100", "97"], ["106", "111"], ["111", "172"], ["184", "190"], ["188", "180"], ["196", "195"], ["202", "200"], ["101", "100"], ["108", "106"], ["115", "128"], ["115", "135"], ["186", "184"], ["190", "188"], ["116", "120"], ["119", "115"], ["125", "172"], ["120", "119"], ["128", "125"], ["135", "138"], ["138", "146"], ["138", "172"], ["141", "138"], ["145", "158"], ["145", "164"], ["146", "150"], ["149", "145"], ["155", "172"], ["150", "149"], ["158", "155"], ["164", "167"], ["167", "141"], ["23", "28"], ["24", "209"], ["26", "209"], ["29", "209"], ["31", "209"], ["31", "209"], ["37", "209"], ["40", "209"], ["40", "209"], ["40", "209"], ["205", "209"], ["205", "209"], ["47", "209"], ["47", "209"], ["52", "209"], ["52", "209"], ["52", "209"], ["72", "209"], ["75", "209"], ["75", "209"], ["77", "209"], ["77", "209"], ["77", "209"], ["81", "209"], ["84", "209"], ["84", "209"], ["87", "209"], ["90", "209"], ["90", "209"], ["90", "209"], ["43", "209"], ["97", "209"], ["97", "209"], ["97", "209"], ["115", "209"], ["119", "209"], ["115", "209"], ["115", "209"], ["135", "209"], ["135", "209"], ["138", "209"], ["138", "209"], ["145", "209"], ["149", "209"], ["145", "209"], ["145", "209"], ["164", "209"], ["167", "209"], ["167", "209"], ["141", "209"], ["155", "209"], ["155", "209"], ["155", "209"], ["125", "209"], ["125", "209"], ["125", "209"], ["106", "209"], ["106", "209"], ["111", "209"], ["111", "209"], ["169", "209"], ["177", "209"], ["175", "209"], ["180", "209"], ["180", "209"], ["195", "209"], ["193", "209"], ["193", "209"], ["199", "209"], ["203", "209"], ["199", "209"], ["93", "209"], ["190", "209"], ["188", "209"], ["188", "209"], ["66", "209"], ["66", "209"], ["66", "209"], ["64", "209"], ["23", "24"], ["23", "26"], ["33", "31"], ["26", "29"], ["23", "29"], ["23", "37"], ["33", "205"], ["49", "205"], ["70", "205"], ["23", "205"], ["29", "33"], ["23", "33"], ["37", "40"], ["43", "40"], ["23", "40"], ["31", "40"], ["40", "43"], ["23", "43"], ["49", "47"], ["54", "52"], ["23", "72"], ["79", "77"], ["23", "81"], ["23", "58"], ["70", "66"], ["72", "75"], ["23", "75"], ["81", "84"], ["23", "84"], ["23", "87"], ["33", "49"], ["70", "49"], ["23", "49"], ["47", "54"], ["23", "54"], ["58", "61"], ["64", "61"], ["23", "61"], ["54", "61"], ["61", "64"], ["23", "64"], ["23", "79"], ["87", "90"], ["93", "90"], ["23", "90"], ["61", "90"], ["90", "93"], ["23", "93"], ["177", "175"], ["49", "70"], ["23", "70"], ["172", "169"], ["23", "169"], ["196", "193"], ["23", "193"], ["195", "193"], ["195", "193"], ["203", "199"], ["98", "97"], ["100", "97"], ["100", "97"], ["84", "172"], ["203", "172"], ["23", "172"], ["120", "177"], ["164", "177"], ["155", "177"], ["125", "177"], ["106", "177"], ["23", "177"], ["175", "180"], ["186", "180"], ["23", "180"], ["186", "184"], ["196", "195"], ["23", "195"], ["193", "203"], ["23", "203"], ["75", "98"], ["177", "98"], ["23", "98"], ["52", "100"], ["115", "100"], ["145", "100"], ["155", "100"], ["125", "100"], ["106", "100"], ["66", "100"], ["23", "100"], ["98", "106"], ["23", "106"], ["52", "106"], ["100", "106"], ["115", "106"], ["145", "106"], ["155", "106"], ["125", "106"], ["66", "106"], ["77", "111"], ["167", "111"], ["125", "111"], ["23", "111"], ["120", "111"], ["169", "188"], ["23", "188"], ["184", "188"], ["169", "196"], ["188", "196"], ["23", "196"], ["52", "115"], ["100", "115"], ["145", "115"], ["155", "115"], ["125", "115"], ["106", "115"], ["66", "115"], ["120", "115"], ["120", "115"], ["23", "115"], ["180", "186"], ["23", "186"], ["184", "190"], ["23", "190"], ["120", "119"], ["120", "119"], ["23", "119"], ["120", "125"], ["23", "125"], ["120", "125"], ["52", "125"], ["115", "125"], ["98", "120"], ["23", "120"], ["77", "120"], ["167", "120"], ["125", "120"], ["111", "120"], ["120", "135"], ["23", "135"], ["135", "138"], ["141", "138"], ["23", "138"], ["164", "141"], ["23", "141"], ["52", "145"], ["115", "145"], ["150", "145"], ["150", "145"], ["23", "145"], ["150", "149"], ["150", "149"], ["23", "149"], ["150", "155"], ["23", "155"], ["150", "155"], ["52", "155"], ["145", "155"], ["120", "150"], ["164", "150"], ["23", "150"], ["138", "150"], ["150", "164"], ["23", "164"], ["150", "164"], ["23", "167"], ["120", "167"], ["40", "77"], ["40", "75"], ["40", "52"], ["40", "81"], ["40", "84"], ["40", "74"], ["40", "40"], ["40", "87"], ["40", "90"], ["40", "54"], ["40", "79"], ["40", "43"], ["40", "58"], ["40", "61"], ["40", "47"], ["40", "49"], ["40", "72"], ["40", "83"], ["61", "64"], ["61", "67"], ["61", "61"], ["61", "70"], ["61", "66"], ["90", "98"], ["90", "169"], ["90", "196"], ["90", "97"], ["90", "93"], ["90", "195"], ["90", "90"], ["90", "202"], ["90", "180"], ["90", "193"], ["90", "200"], ["90", "199"], ["90", "177"], ["90", "175"], ["90", "203"], ["90", "172"], ["97", "115"], ["97", "120"], ["97", "119"], ["97", "108"], ["97", "111"], ["97", "116"], ["97", "106"], ["180", "188"], ["180", "190"], ["180", "184"], ["180", "186"], ["180", "180"], ["98", "101"], ["98", "100"], ["115", "128"], ["115", "138"], ["115", "135"], ["115", "125"], ["138", "145"], ["138", "146"], ["138", "149"], ["138", "150"], ["145", "167"], ["145", "138"], ["145", "164"], ["145", "155"], ["145", "158"], ["145", "141"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scan = new Reader())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Reader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Reader())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(CONTROL_STRUCTURE,for (int tt = 0; Some(tt &lt; t); tt++),for (int tt = 0; Some(tt &lt; t); tt++))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int tt = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int tt = 0)<SUB>5</SUB>>", "41": "<(IDENTIFIER,tt,tt &lt; t)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.postIncrement,tt++)<SUB>5</SUB>>", "45": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "49": "<(nextInt,nextInt())<SUB>7</SUB>>", "51": "<(LOCAL,int[] arr: int[])<SUB>8</SUB>>", "53": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "57": "<(LOCAL,int i: int)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,arr[i] = nextInt())<SUB>9</SUB>>", "71": "<(IDENTIFIER,scan,nextInt())<SUB>9</SUB>>", "72": "<(&lt;operator&gt;.assignment,ANY list = new ArrayList&lt;&gt;())<SUB>11</SUB>>", "74": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>11</SUB>>", "5": "<(IDENTIFIER,list,new ArrayList&lt;&gt;())<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = -1)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.minus,-1)<SUB>12</SUB>>", "8": "<(LOCAL,StringBuilder s: java.lang.StringBuilder)<SUB>13</SUB>>", "82": "<(IDENTIFIER,s,StringBuilder s = new StringBuilder())<SUB>13</SUB>>", "84": "<(&lt;init&gt;,new StringBuilder())<SUB>13</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.logicalOr,list.isEmpty() || arr[i] == 1)<SUB>15</SUB>>", "99": "<(IDENTIFIER,list,isEmpty())<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "103": "<(IDENTIFIER,i,arr[i] == 1)<SUB>15</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "107": "<(IDENTIFIER,list,add(arr[i]))<SUB>16</SUB>>", "109": "<(IDENTIFIER,arr,add(arr[i]))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.equals,arr[i] == list.get(j) + 1)<SUB>19</SUB>>", "117": "<(IDENTIFIER,arr,arr[i] == list.get(j) + 1)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.addition,list.get(j) + 1)<SUB>19</SUB>>", "121": "<(IDENTIFIER,list,get(j))<SUB>19</SUB>>", "123": "<(LITERAL,1,list.get(j) + 1)<SUB>19</SUB>>", "125": "<(set,set(j, arr[i]))<SUB>20</SUB>>", "127": "<(IDENTIFIER,j,set(j, arr[i]))<SUB>20</SUB>>", "129": "<(IDENTIFIER,arr,set(j, arr[i]))<SUB>20</SUB>>", "131": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int k = j; Some(k &gt;= 0); k--),for (int k = j; Some(k &gt;= 0); k--))<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.assignment,int k = j)<SUB>23</SUB>>", "137": "<(IDENTIFIER,j,int k = j)<SUB>23</SUB>>", "139": "<(IDENTIFIER,k,k &gt;= 0)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.postDecrement,k--)<SUB>23</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.equals,arr[i] == list.get(k) + 1)<SUB>24</SUB>>", "147": "<(IDENTIFIER,arr,arr[i] == list.get(k) + 1)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.addition,list.get(k) + 1)<SUB>24</SUB>>", "151": "<(IDENTIFIER,list,get(k))<SUB>24</SUB>>", "153": "<(LITERAL,1,list.get(k) + 1)<SUB>24</SUB>>", "155": "<(set,set(k, arr[i]))<SUB>25</SUB>>", "157": "<(IDENTIFIER,k,set(k, arr[i]))<SUB>25</SUB>>", "159": "<(IDENTIFIER,arr,set(k, arr[i]))<SUB>25</SUB>>", "161": "<(CONTROL_STRUCTURE,break;,break;)<SUB>26</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "165": "<(IDENTIFIER,list,remove(k))<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.postDecrement,j--)<SUB>30</SUB>>", "169": "<(delete,s.delete(0, s.length()))<SUB>34</SUB>>", "171": "<(LITERAL,0,s.delete(0, s.length()))<SUB>34</SUB>>", "173": "<(IDENTIFIER,s,s.length())<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.assignment,)<SUB>35</SUB>>", "177": "<(iterator,&lt;empty&gt;)<SUB>35</SUB>>", "179": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>35</SUB>>", "181": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "183": "<(LOCAL,p: java.lang.Integer)<SUB>35</SUB>>", "185": "<(IDENTIFIER,p,&lt;empty&gt;)>", "187": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "189": "<(IDENTIFIER,s,s.append(p + &quot;.&quot;))<SUB>36</SUB>>", "191": "<(IDENTIFIER,p,p + &quot;.&quot;)<SUB>36</SUB>>", "193": "<(deleteCharAt,s.deleteCharAt(s.length() - 1))<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.subtraction,s.length() - 1)<SUB>38</SUB>>", "197": "<(IDENTIFIER,s,s.length())<SUB>38</SUB>>", "199": "<(println,System.out.println(s.toString()))<SUB>39</SUB>>", "201": "<(IDENTIFIER,System,System.out.println(s.toString()))<SUB>39</SUB>>", "203": "<(toString,s.toString())<SUB>39</SUB>>", "205": "<(close,close())<SUB>43</SUB>>", "207": "<(MODIFIER,PUBLIC)>", "209": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}