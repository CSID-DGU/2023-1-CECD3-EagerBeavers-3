{"edges": [["19", "21"], ["19", "241"], ["19", "242"], ["19", "243"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "46"], ["21", "49"], ["21", "51"], ["21", "54"], ["21", "56"], ["21", "59"], ["21", "61"], ["21", "68"], ["21", "91"], ["21", "93"], ["21", "94"], ["21", "98"], ["21", "209"], ["21", "214"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "84"], ["78", "87"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["87", "90"], ["91", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["98", "101"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "107"], ["101", "112"], ["101", "115"], ["101", "117"], ["101", "120"], ["101", "124"], ["101", "128"], ["101", "132"], ["101", "135"], ["101", "156"], ["103", "104"], ["103", "105"], ["105", "106"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "149"], ["136", "137"], ["136", "143"], ["137", "138"], ["138", "139"], ["138", "140"], ["138", "141"], ["138", "142"], ["143", "144"], ["144", "145"], ["144", "146"], ["144", "147"], ["144", "148"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["156", "157"], ["156", "168"], ["156", "175"], ["157", "158"], ["157", "164"], ["158", "159"], ["158", "163"], ["159", "160"], ["159", "162"], ["160", "161"], ["164", "165"], ["164", "166"], ["166", "167"], ["168", "169"], ["168", "174"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["175", "176"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "188"], ["176", "189"], ["176", "193"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["193", "194"], ["193", "196"], ["194", "195"], ["196", "197"], ["196", "198"], ["196", "202"], ["198", "199"], ["198", "200"], ["200", "201"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "216"], ["214", "219"], ["214", "224"], ["214", "226"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["224", "225"], ["226", "227"], ["226", "230"], ["226", "235"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "39"], ["37", "44"], ["42", "48"], ["46", "49"], ["49", "53"], ["51", "54"], ["54", "58"], ["56", "59"], ["59", "62"], ["91", "96"], ["94", "99"], ["209", "216"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["39", "37"], ["44", "42"], ["48", "46"], ["53", "51"], ["58", "56"], ["62", "65"], ["62", "70"], ["65", "70"], ["70", "73"], ["73", "82"], ["73", "91"], ["76", "73"], ["96", "94"], ["99", "105"], ["99", "212"], ["210", "209"], ["216", "223"], ["219", "243"], ["219", "227"], ["224", "223"], ["28", "26"], ["80", "84"], ["84", "87"], ["87", "76"], ["103", "108"], ["112", "115"], ["115", "117"], ["117", "122"], ["120", "126"], ["124", "130"], ["128", "132"], ["132", "138"], ["212", "210"], ["221", "219"], ["227", "233"], ["227", "239"], ["230", "224"], ["82", "80"], ["105", "103"], ["108", "99"], ["108", "114"], ["114", "112"], ["122", "120"], ["126", "124"], ["130", "128"], ["136", "153"], ["136", "160"], ["157", "172"], ["157", "178"], ["223", "221"], ["231", "230"], ["236", "224"], ["137", "136"], ["137", "144"], ["143", "136"], ["150", "155"], ["155", "243"], ["158", "157"], ["158", "166"], ["164", "157"], ["169", "174"], ["174", "243"], ["233", "231"], ["237", "236"], ["138", "137"], ["144", "143"], ["151", "150"], ["159", "158"], ["166", "164"], ["170", "169"], ["178", "182"], ["189", "194"], ["239", "237"], ["153", "151"], ["160", "159"], ["172", "170"], ["182", "185"], ["182", "191"], ["185", "191"], ["191", "189"], ["194", "99"], ["194", "200"], ["198", "205"], ["202", "194"], ["200", "198"], ["203", "202"], ["205", "203"], ["19", "24"], ["155", "243"], ["174", "243"], ["20", "243"], ["22", "243"], ["25", "243"], ["25", "243"], ["29", "243"], ["33", "243"], ["37", "243"], ["37", "243"], ["42", "243"], ["42", "243"], ["42", "243"], ["46", "243"], ["49", "243"], ["49", "243"], ["51", "243"], ["56", "243"], ["62", "243"], ["65", "243"], ["70", "243"], ["73", "243"], ["73", "243"], ["73", "243"], ["91", "243"], ["91", "243"], ["96", "243"], ["94", "243"], ["105", "243"], ["103", "243"], ["108", "243"], ["112", "243"], ["115", "243"], ["117", "243"], ["120", "243"], ["120", "243"], ["124", "243"], ["128", "243"], ["128", "243"], ["128", "243"], ["132", "243"], ["132", "243"], ["138", "243"], ["138", "243"], ["138", "243"], ["138", "243"], ["137", "243"], ["136", "243"], ["144", "243"], ["144", "243"], ["144", "243"], ["144", "243"], ["143", "243"], ["136", "243"], ["136", "243"], ["159", "243"], ["158", "243"], ["157", "243"], ["157", "243"], ["157", "243"], ["178", "243"], ["178", "243"], ["182", "243"], ["185", "243"], ["185", "243"], ["189", "243"], ["194", "243"], ["205", "243"], ["205", "243"], ["202", "243"], ["202", "243"], ["202", "243"], ["150", "243"], ["80", "243"], ["80", "243"], ["87", "243"], ["87", "243"], ["76", "243"], ["124", "243"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["39", "37"], ["44", "42"], ["19", "46"], ["19", "51"], ["19", "56"], ["96", "94"], ["22", "25"], ["19", "25"], ["46", "49"], ["19", "49"], ["51", "54"], ["19", "54"], ["56", "59"], ["19", "59"], ["19", "65"], ["19", "70"], ["39", "91"], ["82", "91"], ["19", "91"], ["19", "209"], ["19", "216"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["35", "39"], ["19", "39"], ["29", "44"], ["19", "44"], ["33", "62"], ["19", "62"], ["37", "62"], ["70", "73"], ["76", "73"], ["19", "73"], ["44", "73"], ["87", "76"], ["19", "76"], ["82", "80"], ["59", "96"], ["84", "96"], ["19", "96"], ["94", "99"], ["105", "99"], ["19", "99"], ["105", "103"], ["19", "112"], ["122", "120"], ["126", "124"], ["130", "128"], ["216", "219"], ["224", "219"], ["19", "219"], ["42", "219"], ["219", "224"], ["19", "224"], ["59", "84"], ["19", "84"], ["80", "84"], ["49", "87"], ["19", "87"], ["84", "87"], ["73", "87"], ["112", "115"], ["19", "115"], ["115", "117"], ["19", "117"], ["108", "117"], ["108", "132"], ["19", "132"], ["117", "132"], ["209", "230"], ["236", "230"], ["19", "230"], ["39", "82"], ["19", "82"], ["99", "105"], ["19", "105"], ["54", "108"], ["132", "108"], ["19", "108"], ["103", "108"], ["19", "122"], ["19", "126"], ["19", "130"], ["137", "136"], ["143", "136"], ["19", "155"], ["158", "157"], ["158", "157"], ["164", "157"], ["164", "157"], ["19", "174"], ["209", "236"], ["230", "236"], ["19", "236"], ["138", "137"], ["138", "137"], ["138", "137"], ["138", "137"], ["144", "143"], ["144", "143"], ["144", "143"], ["144", "143"], ["19", "150"], ["159", "158"], ["159", "158"], ["19", "158"], ["128", "164"], ["19", "164"], ["166", "164"], ["19", "169"], ["19", "178"], ["191", "189"], ["144", "138"], ["19", "138"], ["132", "138"], ["62", "138"], ["182", "138"], ["62", "138"], ["65", "138"], ["144", "138"], ["138", "144"], ["19", "144"], ["138", "144"], ["138", "144"], ["138", "144"], ["160", "159"], ["19", "159"], ["19", "166"], ["19", "185"], ["117", "160"], ["19", "160"], ["120", "182"], ["19", "182"], ["138", "182"], ["144", "182"], ["160", "191"], ["19", "191"], ["189", "194"], ["200", "194"], ["19", "194"], ["200", "198"], ["178", "202"], ["185", "202"], ["19", "202"], ["194", "200"], ["19", "200"], ["49", "205"], ["87", "205"], ["19", "205"], ["198", "205"], ["62", "65"], ["73", "73"], ["73", "84"], ["73", "76"], ["73", "87"], ["73", "80"], ["73", "82"], ["99", "209"], ["99", "103"], ["99", "223"], ["99", "212"], ["99", "221"], ["99", "108"], ["99", "210"], ["99", "105"], ["99", "216"], ["99", "219"], ["219", "223"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "219"], ["227", "230"], ["227", "231"], ["227", "233"], ["227", "239"], ["227", "236"], ["227", "237"], ["108", "115"], ["108", "120"], ["108", "136"], ["108", "128"], ["108", "114"], ["108", "132"], ["108", "112"], ["108", "138"], ["108", "137"], ["108", "130"], ["108", "122"], ["108", "99"], ["108", "126"], ["108", "117"], ["108", "124"], ["136", "150"], ["136", "151"], ["136", "153"], ["136", "155"], ["136", "158"], ["136", "160"], ["136", "157"], ["136", "159"], ["157", "169"], ["157", "178"], ["157", "189"], ["157", "170"], ["157", "191"], ["157", "174"], ["157", "194"], ["157", "182"], ["157", "99"], ["157", "172"], ["137", "144"], ["137", "143"], ["158", "164"], ["158", "166"], ["182", "185"], ["194", "198"], ["194", "194"], ["194", "202"], ["194", "205"], ["194", "200"], ["194", "203"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,a = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,b = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(LOCAL,boolean[] where: boolean[])<SUB>7</SUB>>", "43": "<(IDENTIFIER,where,boolean[] where = new boolean[n])<SUB>7</SUB>>", "45": "<(IDENTIFIER,n,new boolean[n])<SUB>7</SUB>>", "47": "<(IDENTIFIER,indexmap,indexmap = new HashMap&lt;Integer, Integer&gt;())<SUB>8</SUB>>", "49": "<(&lt;init&gt;,new HashMap&lt;Integer, Integer&gt;())<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,used = new HashSet&lt;Integer&gt;())<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>9</SUB>>", "55": "<(IDENTIFIER,used,new HashSet&lt;Integer&gt;())<SUB>9</SUB>>", "57": "<(IDENTIFIER,nums,nums = new HashSet&lt;Integer&gt;())<SUB>10</SUB>>", "59": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;())<SUB>10</SUB>>", "61": "<(CONTROL_STRUCTURE,if (a == b),if (a == b))<SUB>12</SUB>>", "63": "<(IDENTIFIER,a,a == b)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.assignment,b = 0)<SUB>13</SUB>>", "67": "<(LITERAL,0,b = 0)<SUB>13</SUB>>", "69": "<(LOCAL,int i: int)<SUB>15</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "79": "<(LOCAL,int x: int)<SUB>16</SUB>>", "81": "<(IDENTIFIER,x,int x = nextInt())<SUB>16</SUB>>", "83": "<(IDENTIFIER,scan,nextInt())<SUB>16</SUB>>", "85": "<(IDENTIFIER,nums,add(x))<SUB>17</SUB>>", "87": "<(put,put(x, i))<SUB>18</SUB>>", "89": "<(IDENTIFIER,x,put(x, i))<SUB>18</SUB>>", "91": "<(close,close())<SUB>20</SUB>>", "93": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>22</SUB>>", "95": "<(IDENTIFIER,$iterLocal0,)<SUB>22</SUB>>", "97": "<(IDENTIFIER,nums,&lt;empty&gt;)<SUB>22</SUB>>", "99": "<(hasNext,&lt;empty&gt;)<SUB>22</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "103": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>22</SUB>>", "105": "<(next,&lt;empty&gt;)<SUB>22</SUB>>", "107": "<(CONTROL_STRUCTURE,if (used.contains(x)),if (used.contains(x)))<SUB>23</SUB>>", "109": "<(IDENTIFIER,used,contains(x))<SUB>23</SUB>>", "111": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>24</SUB>>", "113": "<(IDENTIFIER,cgroup,cgroup = new HashSet&lt;Integer&gt;())<SUB>25</SUB>>", "115": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;())<SUB>25</SUB>>", "117": "<(add,add(x))<SUB>26</SUB>>", "119": "<(IDENTIFIER,x,add(x))<SUB>26</SUB>>", "121": "<(IDENTIFIER,g,g = -1)<SUB>27</SUB>>", "123": "<(LITERAL,1,-1)<SUB>27</SUB>>", "125": "<(IDENTIFIER,refg,refg = -1)<SUB>28</SUB>>", "127": "<(LITERAL,1,-1)<SUB>28</SUB>>", "129": "<(IDENTIFIER,ref,ref = -1)<SUB>29</SUB>>", "131": "<(LITERAL,1,-1)<SUB>29</SUB>>", "133": "<(IDENTIFIER,used,add(x))<SUB>30</SUB>>", "135": "<(CONTROL_STRUCTURE,if (!spawn(x, a, b) || !spawn(x, b, a)),if (!spawn(x, a, b) || !spawn(x, b, a)))<SUB>31</SUB>>", "137": "<(&lt;operator&gt;.logicalNot,!spawn(x, a, b))<SUB>31</SUB>>", "139": "<(IDENTIFIER,this,spawn(x, a, b))<SUB>31</SUB>>", "141": "<(IDENTIFIER,a,spawn(x, a, b))<SUB>31</SUB>>", "143": "<(&lt;operator&gt;.logicalNot,!spawn(x, b, a))<SUB>31</SUB>>", "145": "<(IDENTIFIER,this,spawn(x, b, a))<SUB>31</SUB>>", "147": "<(IDENTIFIER,b,spawn(x, b, a))<SUB>31</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "151": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "153": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "155": "<(RETURN,return;,return;)<SUB>33</SUB>>", "157": "<(&lt;operator&gt;.logicalAnd,cgroup.size() % 2 == 1 &amp;&amp; ref == -1)<SUB>35</SUB>>", "159": "<(&lt;operator&gt;.modulo,cgroup.size() % 2)<SUB>35</SUB>>", "161": "<(IDENTIFIER,cgroup,size())<SUB>35</SUB>>", "163": "<(LITERAL,1,cgroup.size() % 2 == 1)<SUB>35</SUB>>", "165": "<(IDENTIFIER,ref,ref == -1)<SUB>35</SUB>>", "167": "<(LITERAL,1,-1)<SUB>35</SUB>>", "169": "<(println,System.out.println(&quot;NO&quot;))<SUB>36</SUB>>", "171": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>36</SUB>>", "173": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>36</SUB>>", "175": "<(CONTROL_STRUCTURE,else,else)<SUB>38</SUB>>", "177": "<(LOCAL,boolean w: boolean)<SUB>39</SUB>>", "179": "<(IDENTIFIER,w,boolean w = true)<SUB>39</SUB>>", "181": "<(CONTROL_STRUCTURE,if (g == a),if (g == a))<SUB>40</SUB>>", "183": "<(IDENTIFIER,g,g == a)<SUB>40</SUB>>", "185": "<(&lt;operator&gt;.assignment,w = false)<SUB>41</SUB>>", "187": "<(LITERAL,false,w = false)<SUB>41</SUB>>", "189": "<(&lt;operator&gt;.assignment,)<SUB>42</SUB>>", "191": "<(iterator,&lt;empty&gt;)<SUB>42</SUB>>", "193": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>42</SUB>>", "195": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "197": "<(LOCAL,k: int)<SUB>42</SUB>>", "199": "<(IDENTIFIER,k,&lt;empty&gt;)>", "201": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "203": "<(&lt;operator&gt;.indexAccess,where[indexmap.get(k)])<SUB>43</SUB>>", "205": "<(get,get(k))<SUB>43</SUB>>", "207": "<(IDENTIFIER,k,get(k))<SUB>43</SUB>>", "209": "<(println,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "211": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "213": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>48</SUB>>", "215": "<(LOCAL,int i: int)<SUB>49</SUB>>", "217": "<(IDENTIFIER,i,int i = 0)<SUB>49</SUB>>", "219": "<(&lt;operator&gt;.lessThan,i &lt; where.length)<SUB>49</SUB>>", "221": "<(&lt;operator&gt;.fieldAccess,where.length)<SUB>49</SUB>>", "223": "<(FIELD_IDENTIFIER,length,length)<SUB>49</SUB>>", "225": "<(IDENTIFIER,i,i++)<SUB>49</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,where[i])<SUB>50</SUB>>", "229": "<(IDENTIFIER,i,if (where[i]))<SUB>50</SUB>>", "231": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>51</SUB>>", "233": "<(FIELD_IDENTIFIER,out,out)<SUB>51</SUB>>", "235": "<(CONTROL_STRUCTURE,else,else)<SUB>53</SUB>>", "237": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>53</SUB>>", "239": "<(FIELD_IDENTIFIER,out,out)<SUB>53</SUB>>", "241": "<(MODIFIER,PUBLIC)>", "243": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}