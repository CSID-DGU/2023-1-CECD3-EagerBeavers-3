{"edges": [["21", "23"], ["21", "437"], ["21", "438"], ["21", "439"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "62"], ["23", "71"], ["23", "75"], ["23", "90"], ["23", "137"], ["23", "138"], ["23", "142"], ["23", "435"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["52", "53"], ["52", "54"], ["54", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "100"], ["90", "102"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["102", "103"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["113", "120"], ["113", "123"], ["113", "126"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "140"], ["140", "141"], ["142", "143"], ["142", "146"], ["142", "148"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "150"], ["148", "154"], ["148", "155"], ["148", "159"], ["148", "160"], ["148", "164"], ["148", "182"], ["148", "183"], ["148", "192"], ["148", "291"], ["148", "292"], ["148", "297"], ["148", "298"], ["148", "307"], ["148", "323"], ["148", "405"], ["148", "406"], ["148", "411"], ["148", "432"], ["150", "151"], ["150", "152"], ["152", "153"], ["155", "156"], ["155", "157"], ["157", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "208"], ["202", "211"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["211", "218"], ["211", "221"], ["211", "223"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["223", "268"], ["223", "275"], ["223", "285"], ["224", "225"], ["224", "247"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "246"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "244"], ["234", "245"], ["235", "236"], ["235", "243"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "242"], ["247", "248"], ["247", "250"], ["247", "262"], ["248", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "260"], ["252", "261"], ["253", "254"], ["253", "259"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "258"], ["262", "263"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "283"], ["276", "277"], ["276", "282"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "281"], ["283", "284"], ["285", "286"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "290"], ["292", "293"], ["292", "294"], ["294", "295"], ["294", "296"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["307", "308"], ["307", "309"], ["307", "312"], ["307", "315"], ["307", "317"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["315", "316"], ["317", "318"], ["317", "319"], ["317", "322"], ["319", "320"], ["319", "321"], ["323", "324"], ["323", "325"], ["323", "328"], ["323", "331"], ["323", "333"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["331", "332"], ["333", "334"], ["334", "335"], ["334", "336"], ["334", "339"], ["334", "342"], ["334", "344"], ["336", "337"], ["336", "338"], ["339", "340"], ["339", "341"], ["342", "343"], ["344", "345"], ["344", "362"], ["345", "346"], ["345", "349"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "355"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["355", "356"], ["355", "359"], ["356", "357"], ["356", "358"], ["359", "360"], ["359", "361"], ["362", "363"], ["362", "364"], ["362", "367"], ["362", "370"], ["362", "372"], ["364", "365"], ["364", "366"], ["367", "368"], ["367", "369"], ["370", "371"], ["372", "373"], ["372", "374"], ["372", "383"], ["374", "375"], ["374", "376"], ["376", "377"], ["376", "382"], ["377", "378"], ["377", "379"], ["379", "380"], ["379", "381"], ["383", "384"], ["383", "389"], ["384", "385"], ["384", "388"], ["385", "386"], ["385", "387"], ["389", "390"], ["389", "391"], ["389", "396"], ["391", "392"], ["391", "395"], ["392", "393"], ["392", "394"], ["396", "397"], ["396", "404"], ["397", "398"], ["397", "401"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["406", "407"], ["406", "408"], ["408", "409"], ["408", "410"], ["411", "412"], ["411", "413"], ["411", "416"], ["411", "419"], ["411", "421"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "418"], ["419", "420"], ["421", "422"], ["422", "423"], ["422", "424"], ["424", "425"], ["424", "426"], ["424", "427"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["432", "433"], ["432", "434"], ["435", "436"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "48"], ["44", "55"], ["52", "58"], ["58", "63"], ["62", "73"], ["71", "77"], ["138", "143"], ["435", "439"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["54", "52"], ["63", "67"], ["66", "62"], ["73", "71"], ["77", "80"], ["80", "86"], ["80", "92"], ["83", "80"], ["85", "83"], ["92", "96"], ["95", "104"], ["95", "140"], ["100", "96"], ["140", "138"], ["143", "146"], ["146", "152"], ["146", "435"], ["30", "28"], ["37", "35"], ["47", "46"], ["55", "54"], ["67", "66"], ["86", "85"], ["96", "95"], ["150", "157"], ["155", "162"], ["160", "166"], ["183", "194"], ["292", "301"], ["298", "309"], ["406", "413"], ["432", "146"], ["48", "47"], ["104", "109"], ["104", "100"], ["152", "150"], ["157", "155"], ["162", "160"], ["166", "169"], ["169", "175"], ["169", "186"], ["172", "169"], ["174", "172"], ["185", "183"], ["194", "197"], ["197", "204"], ["197", "295"], ["200", "197"], ["294", "292"], ["300", "298"], ["309", "312"], ["312", "319"], ["312", "325"], ["315", "312"], ["317", "315"], ["325", "328"], ["328", "336"], ["328", "410"], ["331", "328"], ["408", "406"], ["413", "416"], ["416", "428"], ["416", "432"], ["419", "416"], ["108", "117"], ["175", "180"], ["178", "174"], ["186", "189"], ["189", "185"], ["204", "208"], ["208", "215"], ["295", "294"], ["301", "304"], ["304", "300"], ["319", "317"], ["410", "408"], ["422", "419"], ["109", "108"], ["115", "120"], ["120", "128"], ["120", "100"], ["123", "120"], ["180", "178"], ["213", "218"], ["218", "227"], ["218", "200"], ["221", "218"], ["336", "339"], ["339", "346"], ["339", "331"], ["342", "339"], ["424", "422"], ["117", "115"], ["127", "133"], ["132", "123"], ["215", "213"], ["268", "279"], ["285", "221"], ["427", "424"], ["128", "127"], ["133", "132"], ["225", "248"], ["225", "270"], ["269", "268"], ["276", "283"], ["276", "288"], ["283", "288"], ["286", "285"], ["346", "351"], ["346", "364"], ["349", "364"], ["364", "367"], ["367", "379"], ["367", "342"], ["370", "367"], ["428", "427"], ["226", "225"], ["226", "240"], ["231", "225"], ["248", "256"], ["250", "265"], ["262", "227"], ["270", "269"], ["277", "276"], ["288", "286"], ["350", "356"], ["355", "349"], ["374", "385"], ["383", "370"], ["227", "226"], ["232", "231"], ["252", "250"], ["263", "262"], ["279", "277"], ["351", "350"], ["356", "359"], ["359", "355"], ["376", "374"], ["384", "392"], ["389", "383"], ["234", "232"], ["253", "252"], ["265", "263"], ["377", "376"], ["385", "384"], ["391", "398"], ["396", "389"], ["235", "234"], ["254", "253"], ["379", "377"], ["392", "391"], ["397", "396"], ["236", "235"], ["256", "254"], ["398", "401"], ["401", "397"], ["238", "236"], ["240", "238"], ["21", "26"], ["22", "439"], ["24", "439"], ["27", "439"], ["27", "439"], ["31", "439"], ["34", "439"], ["34", "439"], ["41", "439"], ["39", "439"], ["39", "439"], ["46", "439"], ["44", "439"], ["44", "439"], ["54", "439"], ["52", "439"], ["52", "439"], ["58", "439"], ["58", "439"], ["58", "439"], ["62", "439"], ["66", "439"], ["62", "439"], ["62", "439"], ["71", "439"], ["71", "439"], ["80", "439"], ["92", "439"], ["96", "439"], ["95", "439"], ["95", "439"], ["138", "439"], ["140", "439"], ["138", "439"], ["138", "439"], ["143", "439"], ["146", "439"], ["146", "439"], ["435", "439"], ["435", "439"], ["150", "439"], ["157", "439"], ["155", "439"], ["155", "439"], ["160", "439"], ["160", "439"], ["160", "439"], ["169", "439"], ["183", "439"], ["183", "439"], ["194", "439"], ["197", "439"], ["197", "439"], ["292", "439"], ["292", "439"], ["292", "439"], ["298", "439"], ["300", "439"], ["300", "439"], ["298", "439"], ["298", "439"], ["325", "439"], ["328", "439"], ["328", "439"], ["406", "439"], ["406", "439"], ["413", "439"], ["416", "439"], ["416", "439"], ["416", "439"], ["432", "439"], ["432", "439"], ["424", "439"], ["424", "439"], ["422", "439"], ["422", "439"], ["419", "439"], ["336", "439"], ["339", "439"], ["339", "439"], ["331", "439"], ["346", "439"], ["349", "439"], ["349", "439"], ["349", "439"], ["364", "439"], ["367", "439"], ["367", "439"], ["342", "439"], ["374", "439"], ["374", "439"], ["374", "439"], ["383", "439"], ["389", "439"], ["396", "439"], ["389", "439"], ["383", "439"], ["383", "439"], ["370", "439"], ["317", "439"], ["317", "439"], ["317", "439"], ["317", "439"], ["315", "439"], ["204", "439"], ["204", "439"], ["208", "439"], ["208", "439"], ["213", "439"], ["213", "439"], ["218", "439"], ["200", "439"], ["226", "439"], ["225", "439"], ["232", "439"], ["235", "439"], ["234", "439"], ["232", "439"], ["231", "439"], ["225", "439"], ["225", "439"], ["268", "439"], ["268", "439"], ["268", "439"], ["276", "439"], ["283", "439"], ["283", "439"], ["285", "439"], ["285", "439"], ["221", "439"], ["248", "439"], ["250", "439"], ["252", "439"], ["250", "439"], ["250", "439"], ["262", "439"], ["262", "439"], ["174", "439"], ["180", "439"], ["178", "439"], ["174", "439"], ["174", "439"], ["172", "439"], ["108", "439"], ["108", "439"], ["115", "439"], ["120", "439"], ["120", "439"], ["100", "439"], ["127", "439"], ["127", "439"], ["132", "439"], ["132", "439"], ["123", "439"], ["85", "439"], ["85", "439"], ["83", "439"], ["178", "439"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["21", "44"], ["54", "52"], ["66", "62"], ["21", "62"], ["73", "71"], ["140", "138"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "58"], ["52", "58"], ["21", "77"], ["80", "85"], ["21", "85"], ["21", "92"], ["34", "435"], ["432", "435"], ["21", "435"], ["27", "41"], ["21", "41"], ["21", "46"], ["44", "54"], ["21", "54"], ["21", "66"], ["21", "73"], ["44", "73"], ["77", "80"], ["83", "80"], ["21", "80"], ["73", "80"], ["21", "83"], ["80", "83"], ["96", "95"], ["80", "95"], ["120", "95"], ["21", "95"], ["96", "100"], ["117", "100"], ["21", "100"], ["95", "140"], ["21", "140"], ["39", "143"], ["21", "143"], ["143", "146"], ["21", "146"], ["152", "150"], ["157", "155"], ["162", "160"], ["185", "183"], ["185", "183"], ["21", "292"], ["300", "298"], ["300", "298"], ["21", "47"], ["44", "55"], ["21", "55"], ["92", "96"], ["100", "96"], ["21", "96"], ["21", "166"], ["178", "174"], ["178", "174"], ["21", "194"], ["21", "309"], ["21", "325"], ["21", "413"], ["34", "432"], ["21", "432"], ["406", "432"], ["422", "432"], ["96", "108"], ["21", "108"], ["41", "152"], ["157", "152"], ["180", "152"], ["21", "152"], ["152", "157"], ["21", "157"], ["150", "162"], ["21", "162"], ["166", "169"], ["172", "169"], ["21", "169"], ["162", "169"], ["169", "172"], ["21", "172"], ["169", "185"], ["21", "185"], ["155", "185"], ["194", "197"], ["200", "197"], ["21", "197"], ["155", "197"], ["197", "200"], ["231", "200"], ["21", "200"], ["215", "204"], ["21", "204"], ["169", "204"], ["21", "208"], ["21", "294"], ["215", "300"], ["21", "300"], ["169", "300"], ["197", "300"], ["309", "312"], ["315", "312"], ["21", "312"], ["215", "312"], ["169", "312"], ["312", "315"], ["21", "315"], ["58", "317"], ["21", "317"], ["298", "317"], ["349", "317"], ["383", "317"], ["292", "317"], ["325", "328"], ["331", "328"], ["21", "328"], ["312", "328"], ["328", "331"], ["379", "331"], ["21", "331"], ["413", "416"], ["419", "416"], ["21", "416"], ["339", "416"], ["197", "416"], ["416", "419"], ["21", "419"], ["424", "422"], ["424", "422"], ["424", "422"], ["117", "115"], ["21", "123"], ["117", "123"], ["21", "178"], ["180", "178"], ["169", "186"], ["21", "186"], ["155", "189"], ["21", "189"], ["215", "213"], ["215", "213"], ["215", "301"], ["21", "301"], ["169", "301"], ["197", "304"], ["21", "304"], ["21", "336"], ["115", "120"], ["123", "120"], ["21", "120"], ["95", "120"], ["120", "123"], ["21", "127"], ["117", "132"], ["21", "132"], ["157", "180"], ["21", "180"], ["213", "218"], ["221", "218"], ["21", "218"], ["218", "221"], ["21", "221"], ["227", "268"], ["240", "268"], ["21", "268"], ["336", "339"], ["342", "339"], ["21", "339"], ["197", "339"], ["367", "342"], ["21", "342"], ["389", "424"], ["21", "424"], ["406", "424"], ["422", "424"], ["21", "117"], ["96", "117"], ["21", "215"], ["169", "215"], ["138", "285"], ["276", "285"], ["21", "364"], ["226", "225"], ["226", "225"], ["231", "225"], ["231", "225"], ["21", "250"], ["138", "276"], ["285", "276"], ["21", "276"], ["208", "283"], ["250", "283"], ["21", "283"], ["339", "346"], ["21", "346"], ["364", "367"], ["370", "367"], ["21", "367"], ["346", "367"], ["359", "367"], ["401", "367"], ["401", "370"], ["21", "370"], ["389", "383"], ["389", "383"], ["389", "383"], ["227", "226"], ["227", "226"], ["21", "226"], ["208", "231"], ["283", "231"], ["250", "231"], ["21", "231"], ["197", "231"], ["227", "248"], ["240", "248"], ["21", "248"], ["208", "250"], ["283", "250"], ["138", "262"], ["253", "262"], ["204", "227"], ["248", "227"], ["21", "227"], ["240", "227"], ["208", "232"], ["283", "232"], ["250", "232"], ["21", "232"], ["21", "252"], ["346", "359"], ["21", "359"], ["424", "389"], ["21", "389"], ["349", "389"], ["383", "389"], ["21", "234"], ["138", "253"], ["262", "253"], ["21", "253"], ["21", "396"], ["138", "235"], ["21", "235"], ["328", "379"], ["21", "379"], ["367", "401"], ["21", "401"], ["367", "401"], ["227", "240"], ["21", "240"], ["80", "80"], ["80", "86"], ["80", "85"], ["80", "83"], ["95", "104"], ["95", "95"], ["95", "100"], ["95", "96"], ["146", "146"], ["146", "150"], ["146", "292"], ["146", "162"], ["146", "298"], ["146", "300"], ["146", "408"], ["146", "152"], ["146", "194"], ["146", "416"], ["146", "186"], ["146", "160"], ["146", "304"], ["146", "328"], ["146", "410"], ["146", "413"], ["146", "169"], ["146", "185"], ["146", "197"], ["146", "189"], ["146", "309"], ["146", "301"], ["146", "325"], ["146", "155"], ["146", "295"], ["146", "183"], ["146", "166"], ["146", "157"], ["146", "294"], ["146", "432"], ["146", "312"], ["146", "406"], ["104", "120"], ["104", "108"], ["104", "117"], ["104", "109"], ["104", "115"], ["169", "174"], ["169", "180"], ["169", "172"], ["169", "169"], ["169", "178"], ["169", "175"], ["197", "215"], ["197", "213"], ["197", "204"], ["197", "208"], ["197", "200"], ["197", "197"], ["197", "218"], ["312", "317"], ["312", "315"], ["312", "319"], ["312", "312"], ["328", "336"], ["328", "328"], ["328", "339"], ["328", "331"], ["416", "428"], ["416", "416"], ["416", "424"], ["416", "419"], ["416", "427"], ["416", "422"], ["120", "120"], ["120", "128"], ["120", "127"], ["120", "123"], ["120", "133"], ["120", "132"], ["218", "226"], ["218", "288"], ["218", "268"], ["218", "276"], ["218", "227"], ["218", "269"], ["218", "225"], ["218", "279"], ["218", "285"], ["218", "221"], ["218", "286"], ["218", "277"], ["218", "270"], ["218", "218"], ["339", "346"], ["339", "364"], ["339", "342"], ["339", "339"], ["339", "367"], ["225", "226"], ["225", "256"], ["225", "262"], ["225", "253"], ["225", "254"], ["225", "227"], ["225", "225"], ["225", "265"], ["225", "252"], ["225", "263"], ["225", "248"], ["225", "250"], ["276", "283"], ["346", "356"], ["346", "349"], ["346", "355"], ["346", "351"], ["346", "359"], ["346", "350"], ["367", "376"], ["367", "384"], ["367", "383"], ["367", "401"], ["367", "392"], ["367", "370"], ["367", "396"], ["367", "389"], ["367", "374"], ["367", "397"], ["367", "385"], ["367", "377"], ["367", "379"], ["367", "367"], ["367", "398"], ["367", "391"], ["226", "240"], ["226", "238"], ["226", "236"], ["226", "232"], ["226", "231"], ["226", "235"], ["226", "234"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int max: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,max,int max = (int) (1e7) + 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.cast,(int) (1e7))<SUB>6</SUB>>", "49": "<(LITERAL,1e7,(int) (1e7))<SUB>6</SUB>>", "51": "<(LOCAL,boolean[] prime: boolean[])<SUB>8</SUB>>", "53": "<(IDENTIFIER,prime,boolean[] prime = new boolean[max + 1])<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.addition,max + 1)<SUB>8</SUB>>", "57": "<(LITERAL,1,max + 1)<SUB>8</SUB>>", "59": "<(IDENTIFIER,Arrays,fill(prime, true))<SUB>9</SUB>>", "61": "<(LITERAL,true,fill(prime, true))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,prime[0])<SUB>10</SUB>>", "65": "<(LITERAL,0,prime[0] = prime[1] = false)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,prime[1])<SUB>10</SUB>>", "69": "<(LITERAL,1,prime[1] = false)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,spf = new int[max])<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[max])>", "75": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt; max); i++),for (int i = 2; Some(i &lt; max); i++))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>12</SUB>>", "79": "<(LITERAL,2,int i = 2)<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,i &lt; max)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,spf[i] = i)<SUB>12</SUB>>", "87": "<(IDENTIFIER,spf,spf[i] = i)<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,spf[i] = i)<SUB>12</SUB>>", "91": "<(LOCAL,int i: int)<SUB>13</SUB>>", "93": "<(IDENTIFIER,i,int i = 2)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i * i &lt; max)<SUB>13</SUB>>", "97": "<(IDENTIFIER,i,i * i)<SUB>13</SUB>>", "99": "<(IDENTIFIER,max,i * i &lt; max)<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,if (prime[i]),if (prime[i]))<SUB>14</SUB>>", "105": "<(IDENTIFIER,prime,if (prime[i]))<SUB>14</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,spf[i])<SUB>15</SUB>>", "111": "<(IDENTIFIER,i,spf[i] = i)<SUB>15</SUB>>", "113": "<(CONTROL_STRUCTURE,for (int j = i * i; Some(j &lt; max); j += i),for (int j = i * i; Some(j &lt; max); j += i))<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,int j = i * i)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.multiplication,i * i)<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,i * i)<SUB>16</SUB>>", "121": "<(IDENTIFIER,j,j &lt; max)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignmentPlus,j += i)<SUB>16</SUB>>", "125": "<(IDENTIFIER,i,j += i)<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.assignment,prime[j] = false)<SUB>17</SUB>>", "129": "<(IDENTIFIER,prime,prime[j] = false)<SUB>17</SUB>>", "131": "<(LITERAL,false,prime[j] = false)<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,spf[j])<SUB>18</SUB>>", "135": "<(IDENTIFIER,j,spf[j] = i)<SUB>18</SUB>>", "137": "<(LOCAL,int[] cnts: int[])<SUB>23</SUB>>", "139": "<(IDENTIFIER,cnts,int[] cnts = new int[max])<SUB>23</SUB>>", "141": "<(IDENTIFIER,max,new int[max])<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.greaterThan,t &gt; 0)<SUB>25</SUB>>", "145": "<(LITERAL,0,t &gt; 0)<SUB>25</SUB>>", "147": "<(IDENTIFIER,t,t--)<SUB>25</SUB>>", "149": "<(LOCAL,int n: int)<SUB>26</SUB>>", "151": "<(IDENTIFIER,n,int n = nextInt())<SUB>26</SUB>>", "153": "<(IDENTIFIER,in,nextInt())<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>27</SUB>>", "157": "<(nextInt,nextInt())<SUB>27</SUB>>", "159": "<(LOCAL,int[] vals: int[])<SUB>28</SUB>>", "161": "<(IDENTIFIER,vals,int[] vals = new int[n])<SUB>28</SUB>>", "163": "<(IDENTIFIER,n,new int[n])<SUB>28</SUB>>", "165": "<(LOCAL,int i: int)<SUB>29</SUB>>", "167": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>29</SUB>>", "171": "<(IDENTIFIER,n,i &lt; n)<SUB>29</SUB>>", "173": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,vals[i])<SUB>30</SUB>>", "177": "<(IDENTIFIER,i,vals[i] = factor(in.nextInt()))<SUB>30</SUB>>", "179": "<(IDENTIFIER,this,factor(in.nextInt()))<SUB>30</SUB>>", "181": "<(IDENTIFIER,in,nextInt())<SUB>30</SUB>>", "183": "<(&lt;operator&gt;.assignment,int[][] left = new int[n + 1][k + 1])<SUB>33</SUB>>", "185": "<(&lt;operator&gt;.alloc,new int[n + 1][k + 1])>", "187": "<(IDENTIFIER,n,n + 1)<SUB>33</SUB>>", "189": "<(&lt;operator&gt;.addition,k + 1)<SUB>33</SUB>>", "191": "<(LITERAL,1,k + 1)<SUB>33</SUB>>", "193": "<(LOCAL,int x: int)<SUB>36</SUB>>", "195": "<(IDENTIFIER,x,int x = 0)<SUB>36</SUB>>", "197": "<(&lt;operator&gt;.lessEqualsThan,x &lt;= k)<SUB>36</SUB>>", "199": "<(IDENTIFIER,k,x &lt;= k)<SUB>36</SUB>>", "201": "<(IDENTIFIER,x,x++)<SUB>36</SUB>>", "203": "<(LOCAL,int l: int)<SUB>37</SUB>>", "205": "<(IDENTIFIER,l,int l = n)<SUB>37</SUB>>", "207": "<(LOCAL,int now: int)<SUB>38</SUB>>", "209": "<(IDENTIFIER,now,int now = 0)<SUB>38</SUB>>", "211": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); i--),for (int i = n - 1; Some(i &gt;= 0); i--))<SUB>39</SUB>>", "213": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>39</SUB>>", "215": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>39</SUB>>", "217": "<(LITERAL,1,n - 1)<SUB>39</SUB>>", "219": "<(IDENTIFIER,i,i &gt;= 0)<SUB>39</SUB>>", "221": "<(&lt;operator&gt;.postDecrement,i--)<SUB>39</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "225": "<(&lt;operator&gt;.logicalAnd,l - 1 &gt;= 0 &amp;&amp; now + ((cnts[vals[l - 1]] &gt; 0) ? 1 : 0) &lt;= x)<SUB>40</SUB>>", "227": "<(&lt;operator&gt;.subtraction,l - 1)<SUB>40</SUB>>", "229": "<(LITERAL,1,l - 1)<SUB>40</SUB>>", "231": "<(&lt;operator&gt;.lessEqualsThan,now + ((cnts[vals[l - 1]] &gt; 0) ? 1 : 0) &lt;= x)<SUB>40</SUB>>", "233": "<(IDENTIFIER,now,now + ((cnts[vals[l - 1]] &gt; 0) ? 1 : 0))<SUB>40</SUB>>", "235": "<(&lt;operator&gt;.greaterThan,cnts[vals[l - 1]] &gt; 0)<SUB>40</SUB>>", "237": "<(IDENTIFIER,cnts,cnts[vals[l - 1]] &gt; 0)<SUB>40</SUB>>", "239": "<(IDENTIFIER,vals,cnts[vals[l - 1]] &gt; 0)<SUB>40</SUB>>", "241": "<(IDENTIFIER,l,l - 1)<SUB>40</SUB>>", "243": "<(LITERAL,0,cnts[vals[l - 1]] &gt; 0)<SUB>40</SUB>>", "245": "<(LITERAL,0,(cnts[vals[l - 1]] &gt; 0) ? 1 : 0)<SUB>40</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "249": "<(IDENTIFIER,l,l--)<SUB>41</SUB>>", "251": "<(IDENTIFIER,now,now += (cnts[vals[l]] &gt; 0) ? 1 : 0)<SUB>42</SUB>>", "253": "<(&lt;operator&gt;.greaterThan,cnts[vals[l]] &gt; 0)<SUB>42</SUB>>", "255": "<(IDENTIFIER,cnts,cnts[vals[l]] &gt; 0)<SUB>42</SUB>>", "257": "<(IDENTIFIER,vals,cnts[vals[l]] &gt; 0)<SUB>42</SUB>>", "259": "<(LITERAL,0,cnts[vals[l]] &gt; 0)<SUB>42</SUB>>", "261": "<(LITERAL,0,(cnts[vals[l]] &gt; 0) ? 1 : 0)<SUB>42</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,cnts[vals[l]])<SUB>44</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,vals[l])<SUB>44</SUB>>", "267": "<(IDENTIFIER,l,cnts[vals[l]]++)<SUB>44</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,left[i][x])<SUB>47</SUB>>", "271": "<(IDENTIFIER,left,left[i][x] = l)<SUB>47</SUB>>", "273": "<(IDENTIFIER,x,left[i][x] = l)<SUB>47</SUB>>", "275": "<(CONTROL_STRUCTURE,if (cnts[vals[i]] &gt; 1),if (cnts[vals[i]] &gt; 1))<SUB>48</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,cnts[vals[i]])<SUB>48</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,vals[i])<SUB>48</SUB>>", "281": "<(IDENTIFIER,i,cnts[vals[i]] &gt; 1)<SUB>48</SUB>>", "283": "<(&lt;operator&gt;.postDecrement,now--)<SUB>48</SUB>>", "285": "<(&lt;operator&gt;.postDecrement,cnts[vals[i]]--)<SUB>49</SUB>>", "287": "<(IDENTIFIER,cnts,cnts[vals[i]]--)<SUB>49</SUB>>", "289": "<(IDENTIFIER,vals,cnts[vals[i]]--)<SUB>49</SUB>>", "291": "<(LOCAL,int oo: int)<SUB>57</SUB>>", "293": "<(IDENTIFIER,oo,int oo = (int) (1e9))<SUB>57</SUB>>", "295": "<(TYPE_REF,int,int)<SUB>57</SUB>>", "297": "<(LOCAL,int[][] dp: int[][])<SUB>59</SUB>>", "299": "<(IDENTIFIER,dp,int[][] dp = new int[n + 1][k + 1])<SUB>59</SUB>>", "301": "<(&lt;operator&gt;.addition,n + 1)<SUB>59</SUB>>", "303": "<(LITERAL,1,n + 1)<SUB>59</SUB>>", "305": "<(IDENTIFIER,k,k + 1)<SUB>59</SUB>>", "307": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>61</SUB>>", "309": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>61</SUB>>", "311": "<(LITERAL,1,int i = 1)<SUB>61</SUB>>", "313": "<(IDENTIFIER,i,i &lt;= n)<SUB>61</SUB>>", "315": "<(&lt;operator&gt;.postIncrement,i++)<SUB>61</SUB>>", "317": "<(fill,fill(dp[i], oo))<SUB>62</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>62</SUB>>", "321": "<(IDENTIFIER,i,fill(dp[i], oo))<SUB>62</SUB>>", "323": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>64</SUB>>", "325": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>64</SUB>>", "327": "<(LITERAL,1,int i = 1)<SUB>64</SUB>>", "329": "<(IDENTIFIER,i,i &lt;= n)<SUB>64</SUB>>", "331": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "333": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "335": "<(LOCAL,int j: int)<SUB>65</SUB>>", "337": "<(IDENTIFIER,j,int j = 0)<SUB>65</SUB>>", "339": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= k)<SUB>65</SUB>>", "341": "<(IDENTIFIER,k,j &lt;= k)<SUB>65</SUB>>", "343": "<(IDENTIFIER,j,j++)<SUB>65</SUB>>", "345": "<(CONTROL_STRUCTURE,if (j &gt; 0),if (j &gt; 0))<SUB>66</SUB>>", "347": "<(IDENTIFIER,j,j &gt; 0)<SUB>66</SUB>>", "349": "<(&lt;operator&gt;.assignment,dp[i][j] = dp[i][j - 1])<SUB>66</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>66</SUB>>", "353": "<(IDENTIFIER,i,dp[i][j] = dp[i][j - 1])<SUB>66</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,dp[i][j - 1])<SUB>66</SUB>>", "357": "<(IDENTIFIER,dp,dp[i][j] = dp[i][j - 1])<SUB>66</SUB>>", "359": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>66</SUB>>", "361": "<(LITERAL,1,j - 1)<SUB>66</SUB>>", "363": "<(LOCAL,int x: int)<SUB>67</SUB>>", "365": "<(IDENTIFIER,x,int x = 0)<SUB>67</SUB>>", "367": "<(&lt;operator&gt;.lessEqualsThan,x &lt;= j)<SUB>67</SUB>>", "369": "<(IDENTIFIER,j,x &lt;= j)<SUB>67</SUB>>", "371": "<(IDENTIFIER,x,x++)<SUB>67</SUB>>", "373": "<(LOCAL,int l: int)<SUB>68</SUB>>", "375": "<(IDENTIFIER,l,int l = left[i - 1][x])<SUB>68</SUB>>", "377": "<(&lt;operator&gt;.indexAccess,left[i - 1])<SUB>68</SUB>>", "379": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>68</SUB>>", "381": "<(LITERAL,1,i - 1)<SUB>68</SUB>>", "383": "<(&lt;operator&gt;.assignment,dp[i][j] = Math.min(dp[i][j], dp[l][j - x] + 1))<SUB>69</SUB>>", "385": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>69</SUB>>", "387": "<(IDENTIFIER,i,dp[i][j] = Math.min(dp[i][j], dp[l][j - x] + 1))<SUB>69</SUB>>", "389": "<(min,Math.min(dp[i][j], dp[l][j - x] + 1))<SUB>69</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>69</SUB>>", "393": "<(IDENTIFIER,dp,Math.min(dp[i][j], dp[l][j - x] + 1))<SUB>69</SUB>>", "395": "<(IDENTIFIER,j,Math.min(dp[i][j], dp[l][j - x] + 1))<SUB>69</SUB>>", "397": "<(&lt;operator&gt;.indexAccess,dp[l][j - x])<SUB>69</SUB>>", "399": "<(IDENTIFIER,dp,dp[l][j - x] + 1)<SUB>69</SUB>>", "401": "<(&lt;operator&gt;.subtraction,j - x)<SUB>69</SUB>>", "403": "<(IDENTIFIER,x,j - x)<SUB>69</SUB>>", "405": "<(LOCAL,int min: int)<SUB>74</SUB>>", "407": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>74</SUB>>", "409": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>74</SUB>>", "411": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= k); i++),for (int i = 0; Some(i &lt;= k); i++))<SUB>75</SUB>>", "413": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>75</SUB>>", "415": "<(LITERAL,0,int i = 0)<SUB>75</SUB>>", "417": "<(IDENTIFIER,i,i &lt;= k)<SUB>75</SUB>>", "419": "<(&lt;operator&gt;.postIncrement,i++)<SUB>75</SUB>>", "421": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "423": "<(IDENTIFIER,min,min = Math.min(min, dp[n][i]))<SUB>76</SUB>>", "425": "<(IDENTIFIER,Math,Math.min(min, dp[n][i]))<SUB>76</SUB>>", "427": "<(&lt;operator&gt;.indexAccess,dp[n][i])<SUB>76</SUB>>", "429": "<(IDENTIFIER,dp,Math.min(min, dp[n][i]))<SUB>76</SUB>>", "431": "<(IDENTIFIER,i,Math.min(min, dp[n][i]))<SUB>76</SUB>>", "433": "<(IDENTIFIER,out,println(min))<SUB>79</SUB>>", "435": "<(close,close())<SUB>82</SUB>>", "437": "<(MODIFIER,PUBLIC)>", "439": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}