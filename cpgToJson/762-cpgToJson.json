{"edges": [["21", "22"], ["21", "23"], ["21", "176"], ["21", "177"], ["21", "178"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "58"], ["23", "59"], ["23", "63"], ["23", "64"], ["23", "68"], ["23", "90"], ["23", "91"], ["23", "92"], ["23", "95"], ["23", "98"], ["23", "107"], ["23", "108"], ["23", "111"], ["23", "171"], ["23", "174"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "78"], ["68", "80"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "89"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "106"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "119"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["120", "126"], ["120", "141"], ["121", "122"], ["122", "123"], ["122", "124"], ["122", "125"], ["126", "127"], ["126", "129"], ["127", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["142", "143"], ["142", "153"], ["142", "155"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["145", "148"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "50"], ["46", "56"], ["53", "61"], ["59", "66"], ["64", "70"], ["92", "95"], ["95", "103"], ["98", "108"], ["108", "113"], ["171", "174"], ["174", "178"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["55", "53"], ["61", "59"], ["66", "64"], ["70", "77"], ["73", "86"], ["73", "92"], ["78", "77"], ["99", "98"], ["112", "122"], ["112", "171"], ["29", "36"], ["32", "27"], ["44", "42"], ["50", "48"], ["56", "55"], ["75", "73"], ["81", "78"], ["101", "99"], ["113", "112"], ["113", "116"], ["116", "112"], ["31", "29"], ["34", "32"], ["77", "75"], ["82", "81"], ["103", "101"], ["121", "127"], ["121", "149"], ["36", "34"], ["84", "82"], ["122", "121"], ["127", "130"], ["86", "84"], ["130", "113"], ["130", "138"], ["133", "113"], ["143", "153"], ["153", "157"], ["134", "133"], ["145", "143"], ["156", "113"], ["156", "168"], ["161", "113"], ["136", "134"], ["148", "145"], ["157", "156"], ["162", "161"], ["138", "136"], ["149", "148"], ["164", "162"], ["166", "164"], ["168", "166"], ["21", "26"], ["22", "178"], ["24", "178"], ["29", "178"], ["32", "178"], ["32", "178"], ["32", "178"], ["27", "178"], ["38", "178"], ["41", "178"], ["41", "178"], ["46", "178"], ["46", "178"], ["53", "178"], ["56", "178"], ["55", "178"], ["53", "178"], ["53", "178"], ["59", "178"], ["59", "178"], ["59", "178"], ["64", "178"], ["64", "178"], ["64", "178"], ["70", "178"], ["73", "178"], ["73", "178"], ["73", "178"], ["92", "178"], ["95", "178"], ["95", "178"], ["101", "178"], ["101", "178"], ["98", "178"], ["98", "178"], ["108", "178"], ["113", "178"], ["113", "178"], ["112", "178"], ["116", "178"], ["116", "178"], ["112", "178"], ["112", "178"], ["171", "178"], ["171", "178"], ["174", "178"], ["174", "178"], ["122", "178"], ["122", "178"], ["122", "178"], ["121", "178"], ["121", "178"], ["149", "178"], ["148", "178"], ["145", "178"], ["143", "178"], ["143", "178"], ["153", "178"], ["156", "178"], ["156", "178"], ["164", "178"], ["164", "178"], ["161", "178"], ["161", "178"], ["127", "178"], ["130", "178"], ["136", "178"], ["136", "178"], ["133", "178"], ["133", "178"], ["84", "178"], ["81", "178"], ["81", "178"], ["78", "178"], ["145", "178"], ["48", "178"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["55", "53"], ["61", "59"], ["66", "64"], ["21", "92"], ["21", "95"], ["21", "98"], ["21", "108"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "70"], ["41", "171"], ["21", "171"], ["108", "171"], ["143", "171"], ["171", "174"], ["21", "174"], ["21", "29"], ["21", "37"], ["21", "48"], ["50", "48"], ["56", "55"], ["21", "61"], ["21", "66"], ["70", "73"], ["78", "73"], ["21", "73"], ["53", "73"], ["73", "78"], ["21", "78"], ["21", "81"], ["113", "112"], ["113", "112"], ["130", "112"], ["116", "112"], ["116", "112"], ["29", "32"], ["21", "32"], ["27", "50"], ["21", "50"], ["50", "56"], ["21", "56"], ["84", "101"], ["21", "101"], ["53", "101"], ["92", "113"], ["157", "113"], ["168", "113"], ["21", "113"], ["46", "113"], ["116", "113"], ["130", "113"], ["95", "116"], ["149", "116"], ["130", "116"], ["21", "116"], ["113", "116"], ["122", "121"], ["122", "121"], ["122", "121"], ["21", "84"], ["53", "84"], ["101", "122"], ["164", "122"], ["136", "122"], ["21", "122"], ["59", "122"], ["98", "122"], ["161", "122"], ["133", "122"], ["64", "122"], ["81", "122"], ["95", "127"], ["116", "127"], ["149", "127"], ["130", "127"], ["21", "127"], ["145", "143"], ["145", "143"], ["145", "143"], ["127", "130"], ["21", "130"], ["113", "130"], ["116", "130"], ["122", "133"], ["149", "153"], ["21", "153"], ["21", "145"], ["108", "145"], ["143", "145"], ["149", "145"], ["149", "145"], ["157", "156"], ["157", "156"], ["21", "156"], ["122", "161"], ["122", "136"], ["21", "136"], ["53", "136"], ["149", "148"], ["149", "148"], ["21", "148"], ["153", "157"], ["21", "157"], ["95", "149"], ["116", "149"], ["130", "149"], ["21", "149"], ["113", "149"], ["122", "164"], ["21", "164"], ["53", "164"], ["157", "168"], ["21", "168"], ["73", "73"], ["73", "77"], ["73", "75"], ["73", "81"], ["73", "84"], ["73", "82"], ["73", "78"], ["73", "86"], ["112", "113"], ["112", "122"], ["112", "121"], ["112", "112"], ["113", "116"], ["121", "145"], ["121", "149"], ["121", "153"], ["121", "157"], ["121", "148"], ["121", "143"], ["121", "130"], ["121", "127"], ["121", "156"], ["130", "136"], ["130", "134"], ["130", "138"], ["130", "133"], ["156", "161"], ["156", "166"], ["156", "162"], ["156", "168"], ["156", "164"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY r = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY w = new PrintWriter(System.out))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,w,new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(LOCAL,int n: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,n,int n = parseInt(r.readLine()))<SUB>7</SUB>>", "49": "<(IDENTIFIER,Integer,parseInt(r.readLine()))<SUB>7</SUB>>", "51": "<(IDENTIFIER,r,readLine())<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,char[] pokemans = toCharArray())<SUB>9</SUB>>", "55": "<(toCharArray,toCharArray())<SUB>9</SUB>>", "57": "<(IDENTIFIER,r,readLine())<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int[] counts = new int[52])<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.alloc,new int[52])>", "63": "<(LOCAL,boolean[] exists: boolean[])<SUB>12</SUB>>", "65": "<(IDENTIFIER,exists,boolean[] exists = new boolean[52])<SUB>12</SUB>>", "67": "<(LITERAL,52,new boolean[52])<SUB>12</SUB>>", "69": "<(LOCAL,int i: int)<SUB>14</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; pokemans.length)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,pokemans.length)<SUB>14</SUB>>", "77": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "79": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.assignment,exists[index(pokemans[i])] = true)<SUB>15</SUB>>", "83": "<(IDENTIFIER,exists,exists[index(pokemans[i])] = true)<SUB>15</SUB>>", "85": "<(IDENTIFIER,this,index(pokemans[i]))<SUB>15</SUB>>", "87": "<(IDENTIFIER,pokemans,index(pokemans[i]))<SUB>15</SUB>>", "89": "<(LITERAL,true,exists[index(pokemans[i])] = true)<SUB>15</SUB>>", "91": "<(LOCAL,int right: int)<SUB>18</SUB>>", "93": "<(IDENTIFIER,left,int left = 0)<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.assignment,int right = 0)<SUB>18</SUB>>", "97": "<(LITERAL,0,int right = 0)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,counts[index(pokemans[0])])<SUB>19</SUB>>", "101": "<(index,index(pokemans[0]))<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,pokemans[0])<SUB>19</SUB>>", "105": "<(LITERAL,0,index(pokemans[0]))<SUB>19</SUB>>", "107": "<(LOCAL,int answer: int)<SUB>21</SUB>>", "109": "<(IDENTIFIER,answer,int answer = 1000000000)<SUB>21</SUB>>", "111": "<(CONTROL_STRUCTURE,while (left &lt; n &amp;&amp; right &lt; n),while (left &lt; n &amp;&amp; right &lt; n))<SUB>23</SUB>>", "113": "<(&lt;operator&gt;.lessThan,left &lt; n)<SUB>23</SUB>>", "115": "<(IDENTIFIER,n,left &lt; n)<SUB>23</SUB>>", "117": "<(IDENTIFIER,right,right &lt; n)<SUB>23</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "121": "<(&lt;operator&gt;.logicalNot,!valid(counts, exists))<SUB>24</SUB>>", "123": "<(IDENTIFIER,this,valid(counts, exists))<SUB>24</SUB>>", "125": "<(IDENTIFIER,exists,valid(counts, exists))<SUB>24</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,right++)<SUB>26</SUB>>", "129": "<(CONTROL_STRUCTURE,if (right &lt; n),if (right &lt; n))<SUB>27</SUB>>", "131": "<(IDENTIFIER,right,right &lt; n)<SUB>27</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,counts[index(pokemans[right])]++)<SUB>28</SUB>>", "135": "<(IDENTIFIER,counts,counts[index(pokemans[right])]++)<SUB>28</SUB>>", "137": "<(IDENTIFIER,this,index(pokemans[right]))<SUB>28</SUB>>", "139": "<(IDENTIFIER,pokemans,index(pokemans[right]))<SUB>28</SUB>>", "141": "<(CONTROL_STRUCTURE,else,else)<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.assignment,answer = Math.min(answer, right - left + 1))<SUB>30</SUB>>", "145": "<(min,Math.min(answer, right - left + 1))<SUB>30</SUB>>", "147": "<(IDENTIFIER,answer,Math.min(answer, right - left + 1))<SUB>30</SUB>>", "149": "<(&lt;operator&gt;.subtraction,right - left)<SUB>30</SUB>>", "151": "<(IDENTIFIER,left,right - left)<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,left++)<SUB>31</SUB>>", "155": "<(CONTROL_STRUCTURE,if (left - 1 &gt;= 0),if (left - 1 &gt;= 0))<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.subtraction,left - 1)<SUB>32</SUB>>", "159": "<(LITERAL,1,left - 1)<SUB>32</SUB>>", "161": "<(&lt;operator&gt;.postDecrement,counts[index(pokemans[left - 1])]--)<SUB>33</SUB>>", "163": "<(IDENTIFIER,counts,counts[index(pokemans[left - 1])]--)<SUB>33</SUB>>", "165": "<(IDENTIFIER,this,index(pokemans[left - 1]))<SUB>33</SUB>>", "167": "<(IDENTIFIER,pokemans,index(pokemans[left - 1]))<SUB>33</SUB>>", "169": "<(IDENTIFIER,left,left - 1)<SUB>33</SUB>>", "171": "<(println,println(answer))<SUB>37</SUB>>", "173": "<(IDENTIFIER,answer,println(answer))<SUB>37</SUB>>", "175": "<(IDENTIFIER,w,flush())<SUB>38</SUB>>", "177": "<(MODIFIER,STATIC)>"}}