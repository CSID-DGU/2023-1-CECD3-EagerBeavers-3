{"edges": [["21", "23"], ["21", "185"], ["21", "186"], ["21", "187"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "52"], ["23", "53"], ["23", "59"], ["23", "60"], ["23", "67"], ["23", "68"], ["23", "75"], ["23", "76"], ["23", "80"], ["23", "81"], ["23", "85"], ["23", "94"], ["23", "128"], ["23", "163"], ["23", "164"], ["23", "167"], ["23", "168"], ["23", "178"], ["23", "183"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "58"], ["56", "57"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "106"], ["94", "108"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "145"], ["138", "154"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "144"], ["142", "143"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["170", "173"], ["170", "174"], ["170", "175"], ["170", "176"], ["170", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "56"], ["53", "64"], ["60", "72"], ["68", "78"], ["76", "83"], ["81", "90"], ["85", "96"], ["164", "170"], ["168", "180"], ["178", "183"], ["183", "187"], ["26", "24"], ["40", "38"], ["55", "53"], ["62", "60"], ["70", "68"], ["78", "76"], ["83", "81"], ["87", "85"], ["96", "103"], ["99", "111"], ["99", "130"], ["106", "103"], ["130", "133"], ["133", "142"], ["133", "164"], ["136", "133"], ["170", "168"], ["180", "178"], ["29", "36"], ["32", "27"], ["43", "50"], ["46", "41"], ["56", "55"], ["64", "62"], ["72", "70"], ["88", "87"], ["101", "99"], ["139", "146"], ["145", "155"], ["154", "136"], ["31", "29"], ["34", "32"], ["45", "43"], ["48", "46"], ["90", "88"], ["103", "101"], ["111", "114"], ["114", "122"], ["114", "106"], ["117", "114"], ["141", "139"], ["146", "151"], ["149", "145"], ["155", "160"], ["158", "154"], ["36", "34"], ["50", "48"], ["120", "117"], ["142", "141"], ["151", "149"], ["160", "158"], ["121", "126"], ["126", "120"], ["122", "121"], ["21", "26"], ["22", "187"], ["24", "187"], ["32", "187"], ["32", "187"], ["32", "187"], ["27", "187"], ["38", "187"], ["43", "187"], ["46", "187"], ["46", "187"], ["46", "187"], ["41", "187"], ["53", "187"], ["56", "187"], ["55", "187"], ["53", "187"], ["53", "187"], ["62", "187"], ["60", "187"], ["60", "187"], ["70", "187"], ["70", "187"], ["68", "187"], ["68", "187"], ["76", "187"], ["76", "187"], ["81", "187"], ["81", "187"], ["85", "187"], ["85", "187"], ["85", "187"], ["96", "187"], ["99", "187"], ["101", "187"], ["99", "187"], ["99", "187"], ["130", "187"], ["133", "187"], ["133", "187"], ["133", "187"], ["164", "187"], ["170", "187"], ["170", "187"], ["170", "187"], ["170", "187"], ["168", "187"], ["168", "187"], ["180", "187"], ["178", "187"], ["178", "187"], ["183", "187"], ["183", "187"], ["139", "187"], ["142", "187"], ["141", "187"], ["139", "187"], ["139", "187"], ["145", "187"], ["149", "187"], ["149", "187"], ["145", "187"], ["145", "187"], ["154", "187"], ["158", "187"], ["154", "187"], ["154", "187"], ["136", "187"], ["111", "187"], ["114", "187"], ["114", "187"], ["106", "187"], ["120", "187"], ["120", "187"], ["120", "187"], ["117", "187"], ["158", "187"], ["170", "187"], ["21", "22"], ["21", "24"], ["21", "38"], ["55", "53"], ["55", "53"], ["62", "60"], ["62", "60"], ["70", "68"], ["70", "68"], ["78", "76"], ["83", "81"], ["87", "85"], ["87", "85"], ["21", "164"], ["170", "168"], ["170", "168"], ["170", "168"], ["170", "168"], ["170", "168"], ["170", "168"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["43", "41"], ["46", "41"], ["21", "96"], ["21", "130"], ["41", "178"], ["21", "178"], ["168", "178"], ["178", "183"], ["21", "183"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "51"], ["56", "55"], ["21", "55"], ["21", "62"], ["53", "62"], ["62", "70"], ["21", "70"], ["53", "70"], ["60", "78"], ["21", "78"], ["78", "83"], ["21", "83"], ["88", "87"], ["88", "87"], ["21", "87"], ["96", "99"], ["106", "99"], ["21", "99"], ["101", "99"], ["101", "99"], ["99", "106"], ["21", "106"], ["130", "133"], ["136", "133"], ["21", "133"], ["83", "133"], ["133", "136"], ["21", "136"], ["141", "139"], ["141", "139"], ["149", "145"], ["149", "145"], ["158", "154"], ["158", "154"], ["21", "170"], ["164", "170"], ["76", "170"], ["145", "170"], ["81", "170"], ["154", "170"], ["68", "170"], ["168", "180"], ["21", "180"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["27", "56"], ["21", "56"], ["21", "88"], ["83", "88"], ["21", "101"], ["83", "101"], ["21", "111"], ["83", "90"], ["21", "90"], ["21", "103"], ["83", "103"], ["111", "114"], ["117", "114"], ["21", "114"], ["114", "117"], ["21", "117"], ["126", "120"], ["142", "141"], ["21", "141"], ["70", "149"], ["21", "149"], ["62", "149"], ["139", "149"], ["21", "158"], ["70", "158"], ["139", "158"], ["56", "142"], ["21", "142"], ["21", "126"], ["99", "99"], ["99", "114"], ["99", "103"], ["99", "106"], ["99", "101"], ["99", "111"], ["133", "160"], ["133", "141"], ["133", "136"], ["133", "154"], ["133", "145"], ["133", "146"], ["133", "149"], ["133", "142"], ["133", "151"], ["133", "155"], ["133", "139"], ["133", "158"], ["133", "133"], ["114", "120"], ["114", "122"], ["114", "114"], ["114", "121"], ["114", "126"], ["114", "117"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "5": "<(IDENTIFIER,bw,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "47": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "49": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "51": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.assignment,String[] dat = split(&quot; &quot;))<SUB>6</SUB>>", "55": "<(split,split(&quot; &quot;))<SUB>6</SUB>>", "57": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "59": "<(LOCAL,int n: int)<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,int n = Integer.parseInt(dat[0]))<SUB>8</SUB>>", "63": "<(IDENTIFIER,Integer,Integer.parseInt(dat[0]))<SUB>8</SUB>>", "65": "<(IDENTIFIER,dat,Integer.parseInt(dat[0]))<SUB>8</SUB>>", "67": "<(LOCAL,int T: int)<SUB>9</SUB>>", "69": "<(IDENTIFIER,T,int T = Integer.parseInt(dat[1]))<SUB>9</SUB>>", "71": "<(IDENTIFIER,Integer,Integer.parseInt(dat[1]))<SUB>9</SUB>>", "73": "<(IDENTIFIER,dat,Integer.parseInt(dat[1]))<SUB>9</SUB>>", "75": "<(LOCAL,int[] st: int[])<SUB>11</SUB>>", "77": "<(IDENTIFIER,st,int[] st = new int[n])<SUB>11</SUB>>", "79": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,byte[] sg = new byte[n])<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.alloc,new byte[n])>", "85": "<(&lt;operator&gt;.assignment,dp = new int[1 &lt;&lt; (n + 1)][4])<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; (n + 1)][4])>", "89": "<(LITERAL,1,1 &lt;&lt; (n + 1))<SUB>14</SUB>>", "91": "<(IDENTIFIER,n,n + 1)<SUB>14</SUB>>", "93": "<(LITERAL,4,new int[1 &lt;&lt; (n + 1)][4])<SUB>14</SUB>>", "95": "<(LOCAL,int j: int)<SUB>16</SUB>>", "97": "<(IDENTIFIER,j,int j = 0)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; (n + 1))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n + 1))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.addition,n + 1)<SUB>16</SUB>>", "105": "<(LITERAL,1,n + 1)<SUB>16</SUB>>", "107": "<(IDENTIFIER,j,j++)<SUB>16</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; 4); k++),for (int k = 0; Some(k &lt; 4); k++))<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>17</SUB>>", "113": "<(LITERAL,0,int k = 0)<SUB>17</SUB>>", "115": "<(IDENTIFIER,k,k &lt; 4)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,k++)<SUB>17</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,dp[j][k])<SUB>18</SUB>>", "123": "<(IDENTIFIER,dp,dp[j][k] = -1)<SUB>18</SUB>>", "125": "<(IDENTIFIER,k,dp[j][k] = -1)<SUB>18</SUB>>", "127": "<(LITERAL,1,-1)<SUB>18</SUB>>", "129": "<(LOCAL,int i: int)<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "135": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.assignment,dat = split(&quot; &quot;))<SUB>23</SUB>>", "141": "<(split,split(&quot; &quot;))<SUB>23</SUB>>", "143": "<(IDENTIFIER,br,readLine())<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.assignment,st[i] = Integer.parseInt(dat[0]))<SUB>24</SUB>>", "147": "<(IDENTIFIER,st,st[i] = Integer.parseInt(dat[0]))<SUB>24</SUB>>", "149": "<(parseInt,Integer.parseInt(dat[0]))<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,dat[0])<SUB>24</SUB>>", "153": "<(LITERAL,0,Integer.parseInt(dat[0]))<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,sg[i])<SUB>25</SUB>>", "157": "<(IDENTIFIER,i,sg[i] = Byte.parseByte(dat[1]))<SUB>25</SUB>>", "159": "<(IDENTIFIER,Byte,Byte.parseByte(dat[1]))<SUB>25</SUB>>", "161": "<(IDENTIFIER,dat,Byte.parseByte(dat[1]))<SUB>25</SUB>>", "163": "<(LOCAL,short visited: short)<SUB>28</SUB>>", "165": "<(IDENTIFIER,visited,short visited = 0)<SUB>28</SUB>>", "167": "<(LOCAL,int count: int)<SUB>30</SUB>>", "169": "<(IDENTIFIER,count,int count = recur(0, visited, st, sg, T, 0))<SUB>30</SUB>>", "171": "<(IDENTIFIER,this,recur(0, visited, st, sg, T, 0))<SUB>30</SUB>>", "173": "<(IDENTIFIER,visited,recur(0, visited, st, sg, T, 0))<SUB>30</SUB>>", "175": "<(IDENTIFIER,sg,recur(0, visited, st, sg, T, 0))<SUB>30</SUB>>", "177": "<(LITERAL,0,recur(0, visited, st, sg, T, 0))<SUB>30</SUB>>", "179": "<(IDENTIFIER,bw,write(count + &quot;\\n&quot;))<SUB>32</SUB>>", "181": "<(IDENTIFIER,count,count + &quot;\\n&quot;)<SUB>32</SUB>>", "183": "<(close,close())<SUB>34</SUB>>", "185": "<(MODIFIER,PUBLIC)>", "187": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}