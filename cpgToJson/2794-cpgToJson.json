{"edges": [["19", "21"], ["19", "137"], ["19", "138"], ["19", "139"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "40"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "46"], ["40", "52"], ["40", "53"], ["40", "60"], ["40", "61"], ["40", "68"], ["40", "130"], ["40", "135"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "72"], ["68", "76"], ["69", "70"], ["69", "71"], ["72", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "93"], ["77", "123"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "105"], ["94", "95"], ["94", "102"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["105", "112"], ["105", "115"], ["105", "120"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["22", "28"], ["25", "34"], ["30", "37"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "139"], ["37", "42"], ["28", "26"], ["34", "32"], ["42", "49"], ["46", "57"], ["53", "65"], ["61", "69"], ["130", "135"], ["135", "37"], ["48", "46"], ["55", "53"], ["63", "61"], ["69", "73"], ["69", "79"], ["131", "130"], ["49", "48"], ["57", "55"], ["65", "63"], ["73", "133"], ["133", "131"], ["79", "84"], ["79", "96"], ["94", "108"], ["94", "124"], ["124", "127"], ["124", "133"], ["127", "133"], ["84", "87"], ["87", "90"], ["90", "96"], ["95", "94"], ["95", "102"], ["102", "94"], ["106", "112"], ["112", "117"], ["115", "120"], ["120", "96"], ["96", "95"], ["96", "99"], ["99", "95"], ["108", "106"], ["117", "115"], ["19", "24"], ["20", "139"], ["22", "139"], ["25", "139"], ["25", "139"], ["32", "139"], ["34", "139"], ["32", "139"], ["30", "139"], ["30", "139"], ["37", "139"], ["37", "139"], ["135", "139"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["22", "25"], ["19", "25"], ["19", "32"], ["34", "32"], ["30", "37"], ["135", "37"], ["19", "37"], ["19", "42"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["63", "61"], ["63", "61"], ["25", "34"], ["19", "34"], ["42", "130"], ["127", "130"], ["106", "130"], ["73", "130"], ["19", "130"], ["37", "135"], ["19", "135"], ["49", "48"], ["19", "48"], ["32", "55"], ["63", "55"], ["19", "55"], ["46", "55"], ["55", "63"], ["19", "63"], ["46", "63"], ["53", "69"], ["19", "69"], ["61", "69"], ["19", "73"], ["34", "49"], ["19", "49"], ["42", "73"], ["79", "127"], ["90", "127"], ["102", "127"], ["120", "127"], ["19", "127"], ["69", "79"], ["19", "79"], ["69", "79"], ["79", "84"], ["19", "84"], ["79", "87"], ["19", "87"], ["84", "90"], ["19", "90"], ["95", "94"], ["95", "94"], ["102", "94"], ["102", "94"], ["108", "106"], ["108", "106"], ["108", "112"], ["19", "112"], ["117", "115"], ["117", "115"], ["112", "120"], ["19", "120"], ["96", "124"], ["99", "124"], ["19", "124"], ["42", "127"], ["106", "127"], ["96", "95"], ["96", "95"], ["124", "95"], ["99", "95"], ["99", "95"], ["79", "102"], ["90", "102"], ["120", "102"], ["19", "102"], ["42", "106"], ["19", "106"], ["79", "96"], ["87", "96"], ["115", "96"], ["19", "96"], ["96", "99"], ["19", "99"], ["79", "108"], ["90", "108"], ["102", "108"], ["120", "108"], ["19", "108"], ["96", "108"], ["99", "108"], ["108", "117"], ["19", "117"], ["108", "117"], ["37", "48"], ["37", "49"], ["37", "42"], ["37", "57"], ["37", "37"], ["37", "46"], ["37", "131"], ["37", "69"], ["37", "65"], ["37", "61"], ["37", "130"], ["37", "53"], ["37", "135"], ["37", "63"], ["37", "55"], ["37", "133"], ["69", "94"], ["69", "73"], ["69", "96"], ["69", "95"], ["69", "79"], ["69", "124"], ["79", "84"], ["79", "87"], ["79", "90"], ["94", "94"], ["94", "115"], ["94", "96"], ["94", "120"], ["94", "95"], ["94", "106"], ["94", "112"], ["94", "117"], ["94", "108"], ["124", "127"], ["95", "102"], ["96", "99"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int tests: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,tests,int tests = valueOf(sc.nextLine()))<SUB>4</SUB>>", "33": "<(IDENTIFIER,Integer,valueOf(sc.nextLine()))<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextLine())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.greaterThan,tests &gt; 0)<SUB>7</SUB>>", "39": "<(LITERAL,0,tests &gt; 0)<SUB>7</SUB>>", "41": "<(LOCAL,int count: int)<SUB>8</SUB>>", "43": "<(IDENTIFIER,count,int count = 0)<SUB>8</SUB>>", "45": "<(LOCAL,String[] input: java.lang.String[])<SUB>9</SUB>>", "47": "<(IDENTIFIER,input,String[] input = split(&quot; &quot;))<SUB>9</SUB>>", "49": "<(nextLine,nextLine())<SUB>9</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.assignment,int x = Integer.valueOf(input[0]))<SUB>10</SUB>>", "55": "<(valueOf,Integer.valueOf(input[0]))<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,input[0])<SUB>10</SUB>>", "59": "<(LITERAL,0,Integer.valueOf(input[0]))<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.assignment,int y = Integer.valueOf(input[1]))<SUB>11</SUB>>", "63": "<(valueOf,Integer.valueOf(input[1]))<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,input[1])<SUB>11</SUB>>", "67": "<(LITERAL,1,Integer.valueOf(input[1]))<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.equals,x == y)<SUB>14</SUB>>", "71": "<(IDENTIFIER,y,x == y)<SUB>14</SUB>>", "73": "<(&lt;operator&gt;.assignmentPlus,count += 1)<SUB>15</SUB>>", "75": "<(LITERAL,1,count += 1)<SUB>15</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "79": "<(&lt;operator&gt;.greaterThan,x &gt; y)<SUB>18</SUB>>", "81": "<(IDENTIFIER,y,x &gt; y)<SUB>18</SUB>>", "83": "<(LOCAL,int temp: int)<SUB>19</SUB>>", "85": "<(IDENTIFIER,temp,int temp = x)<SUB>19</SUB>>", "87": "<(&lt;operator&gt;.assignment,x = y)<SUB>20</SUB>>", "89": "<(IDENTIFIER,y,x = y)<SUB>20</SUB>>", "91": "<(IDENTIFIER,y,y = temp)<SUB>21</SUB>>", "93": "<(CONTROL_STRUCTURE,while (x != 1 &amp;&amp; x != 0 &amp;&amp; y != 1),while (x != 1 &amp;&amp; x != 0 &amp;&amp; y != 1))<SUB>33</SUB>>", "95": "<(&lt;operator&gt;.logicalAnd,x != 1 &amp;&amp; x != 0)<SUB>33</SUB>>", "97": "<(IDENTIFIER,x,x != 1)<SUB>33</SUB>>", "99": "<(&lt;operator&gt;.notEquals,x != 0)<SUB>33</SUB>>", "101": "<(LITERAL,0,x != 0)<SUB>33</SUB>>", "103": "<(IDENTIFIER,y,y != 1)<SUB>33</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "107": "<(IDENTIFIER,count,count += y / x)<SUB>34</SUB>>", "109": "<(IDENTIFIER,y,y / x)<SUB>34</SUB>>", "111": "<(LOCAL,int temp: int)<SUB>35</SUB>>", "113": "<(IDENTIFIER,temp,int temp = x)<SUB>35</SUB>>", "115": "<(&lt;operator&gt;.assignment,x = y % x)<SUB>36</SUB>>", "117": "<(&lt;operator&gt;.modulo,y % x)<SUB>36</SUB>>", "119": "<(IDENTIFIER,x,y % x)<SUB>36</SUB>>", "121": "<(IDENTIFIER,y,y = temp)<SUB>37</SUB>>", "123": "<(CONTROL_STRUCTURE,if (x != 0),if (x != 0))<SUB>39</SUB>>", "125": "<(IDENTIFIER,x,x != 0)<SUB>39</SUB>>", "127": "<(&lt;operator&gt;.assignmentPlus,count += y)<SUB>40</SUB>>", "129": "<(IDENTIFIER,y,count += y)<SUB>40</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>47</SUB>>", "133": "<(FIELD_IDENTIFIER,out,out)<SUB>47</SUB>>", "135": "<(&lt;operator&gt;.postDecrement,tests--)<SUB>48</SUB>>", "137": "<(MODIFIER,PUBLIC)>", "139": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}