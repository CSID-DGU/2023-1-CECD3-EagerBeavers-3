{"edges": [["19", "21"], ["19", "109"], ["19", "110"], ["19", "111"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "37"], ["21", "52"], ["21", "57"], ["21", "63"], ["21", "92"], ["21", "93"], ["21", "100"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["59", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["95", "98"], ["95", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["22", "28"], ["25", "31"], ["29", "35"], ["33", "38"], ["52", "59"], ["57", "65"], ["93", "103"], ["100", "111"], ["24", "22"], ["26", "25"], ["31", "29"], ["35", "33"], ["38", "43"], ["38", "54"], ["54", "52"], ["59", "57"], ["65", "68"], ["68", "75"], ["68", "95"], ["71", "68"], ["95", "93"], ["101", "105"], ["104", "100"], ["28", "26"], ["43", "46"], ["46", "49"], ["49", "54"], ["75", "78"], ["78", "86"], ["78", "71"], ["81", "78"], ["83", "81"], ["103", "101"], ["105", "104"], ["85", "90"], ["90", "83"], ["86", "85"], ["19", "24"], ["20", "111"], ["22", "111"], ["25", "111"], ["25", "111"], ["29", "111"], ["35", "111"], ["33", "111"], ["33", "111"], ["38", "111"], ["43", "111"], ["46", "111"], ["49", "111"], ["49", "111"], ["52", "111"], ["52", "111"], ["57", "111"], ["57", "111"], ["57", "111"], ["65", "111"], ["68", "111"], ["68", "111"], ["68", "111"], ["93", "111"], ["93", "111"], ["100", "111"], ["105", "111"], ["105", "111"], ["104", "111"], ["104", "111"], ["100", "111"], ["100", "111"], ["75", "111"], ["78", "111"], ["78", "111"], ["71", "111"], ["83", "111"], ["83", "111"], ["83", "111"], ["81", "111"], ["83", "111"], ["95", "111"], ["19", "20"], ["19", "22"], ["31", "29"], ["35", "33"], ["54", "52"], ["54", "52"], ["59", "57"], ["59", "57"], ["95", "93"], ["95", "93"], ["22", "25"], ["19", "25"], ["19", "65"], ["104", "100"], ["104", "100"], ["25", "31"], ["19", "31"], ["31", "35"], ["19", "35"], ["29", "38"], ["19", "38"], ["33", "38"], ["38", "43"], ["19", "43"], ["38", "46"], ["19", "46"], ["43", "49"], ["19", "49"], ["19", "54"], ["38", "54"], ["46", "54"], ["52", "59"], ["19", "59"], ["38", "59"], ["49", "59"], ["65", "68"], ["71", "68"], ["19", "68"], ["59", "68"], ["78", "68"], ["68", "71"], ["19", "71"], ["19", "75"], ["19", "95"], ["105", "104"], ["105", "104"], ["93", "104"], ["19", "104"], ["75", "78"], ["81", "78"], ["19", "78"], ["68", "78"], ["78", "81"], ["19", "81"], ["19", "83"], ["90", "83"], ["54", "105"], ["19", "105"], ["59", "105"], ["19", "90"], ["38", "49"], ["38", "46"], ["38", "43"], ["68", "68"], ["68", "71"], ["68", "75"], ["68", "78"], ["78", "83"], ["78", "81"], ["78", "85"], ["78", "90"], ["78", "78"], ["78", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "31": "<(nextInt,nextInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,m = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(CONTROL_STRUCTURE,if (n &gt; m),if (n &gt; m))<SUB>5</SUB>>", "39": "<(IDENTIFIER,n,n &gt; m)<SUB>5</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int tmp = n)<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,int tmp = n)<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,n = m)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,m = tmp)<SUB>8</SUB>>", "51": "<(IDENTIFIER,tmp,m = tmp)<SUB>8</SUB>>", "53": "<(IDENTIFIER,s,s = 1 &lt;&lt; n)<SUB>10</SUB>>", "55": "<(LITERAL,1,1 &lt;&lt; n)<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.assignment,memo = new int[s][s][m])<SUB>11</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[s][s][m])>", "61": "<(IDENTIFIER,s,new int[s][s][m])<SUB>11</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; s); i++),for (int i = 0; Some(i &lt; s); i++))<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "67": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "69": "<(IDENTIFIER,i,i &lt; s)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; s); j++),for (int j = 0; Some(j &lt; s); j++))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "77": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "79": "<(IDENTIFIER,j,j &lt; s)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "83": "<(fill,fill(memo[i][j], -1))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,memo[i][j])<SUB>14</SUB>>", "87": "<(IDENTIFIER,memo,fill(memo[i][j], -1))<SUB>14</SUB>>", "89": "<(IDENTIFIER,j,fill(memo[i][j], -1))<SUB>14</SUB>>", "91": "<(LITERAL,1,-1)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,int ret = go(0, 0, 0))<SUB>15</SUB>>", "95": "<(go,go(0, 0, 0))<SUB>15</SUB>>", "97": "<(LITERAL,0,go(0, 0, 0))<SUB>15</SUB>>", "99": "<(LITERAL,0,go(0, 0, 0))<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "103": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.multiplication,n * m)<SUB>16</SUB>>", "107": "<(IDENTIFIER,m,n * m)<SUB>16</SUB>>", "109": "<(MODIFIER,PUBLIC)>", "111": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}