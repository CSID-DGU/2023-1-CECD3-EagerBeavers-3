{"edges": [["23", "25"], ["23", "149"], ["23", "150"], ["23", "151"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "54"], ["25", "57"], ["25", "60"], ["25", "61"], ["25", "67"], ["25", "68"], ["25", "74"], ["25", "75"], ["25", "78"], ["25", "91"], ["25", "94"], ["25", "95"], ["25", "110"], ["25", "119"], ["25", "138"], ["25", "141"], ["25", "144"], ["25", "146"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["57", "7"], ["57", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "86"], ["82", "88"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["97", "100"], ["97", "109"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "129"], ["127", "130"], ["127", "137"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["146", "147"], ["146", "148"], ["26", "33"], ["29", "42"], ["40", "47"], ["43", "56"], ["54", "58"], ["57", "65"], ["61", "72"], ["68", "75"], ["75", "79"], ["91", "101"], ["95", "114"], ["110", "123"], ["119", "138"], ["138", "141"], ["141", "144"], ["144", "146"], ["146", "151"], ["28", "26"], ["42", "40"], ["56", "54"], ["58", "57"], ["63", "61"], ["70", "68"], ["79", "83"], ["79", "91"], ["97", "95"], ["112", "110"], ["121", "119"], ["31", "38"], ["34", "29"], ["45", "52"], ["48", "43"], ["65", "63"], ["72", "70"], ["83", "86"], ["86", "88"], ["88", "91"], ["100", "97"], ["113", "112"], ["122", "131"], ["127", "121"], ["33", "31"], ["36", "34"], ["47", "45"], ["50", "48"], ["101", "103"], ["102", "100"], ["114", "113"], ["123", "122"], ["130", "127"], ["38", "36"], ["52", "50"], ["103", "106"], ["106", "102"], ["131", "134"], ["132", "130"], ["134", "132"], ["23", "28"], ["24", "151"], ["26", "151"], ["34", "151"], ["34", "151"], ["29", "151"], ["40", "151"], ["45", "151"], ["48", "151"], ["48", "151"], ["43", "151"], ["54", "151"], ["58", "151"], ["57", "151"], ["57", "151"], ["61", "151"], ["70", "151"], ["72", "151"], ["70", "151"], ["68", "151"], ["68", "151"], ["75", "151"], ["79", "151"], ["83", "151"], ["102", "151"], ["100", "151"], ["97", "151"], ["95", "151"], ["95", "151"], ["113", "151"], ["113", "151"], ["112", "151"], ["110", "151"], ["110", "151"], ["122", "151"], ["121", "151"], ["127", "151"], ["132", "151"], ["132", "151"], ["130", "151"], ["127", "151"], ["121", "151"], ["119", "151"], ["119", "151"], ["138", "151"], ["141", "151"], ["141", "151"], ["144", "151"], ["144", "151"], ["146", "151"], ["146", "151"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "54"], ["63", "61"], ["63", "61"], ["70", "68"], ["70", "68"], ["23", "75"], ["75", "91"], ["23", "91"], ["97", "95"], ["97", "95"], ["97", "95"], ["97", "95"], ["112", "110"], ["112", "110"], ["121", "119"], ["121", "119"], ["127", "138"], ["23", "138"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["45", "43"], ["48", "43"], ["54", "57"], ["23", "57"], ["58", "57"], ["79", "91"], ["119", "138"], ["43", "141"], ["86", "141"], ["23", "141"], ["138", "141"], ["141", "144"], ["23", "144"], ["34", "146"], ["48", "146"], ["88", "146"], ["23", "146"], ["23", "31"], ["23", "39"], ["23", "45"], ["23", "53"], ["29", "58"], ["23", "58"], ["23", "63"], ["65", "63"], ["63", "70"], ["23", "70"], ["72", "70"], ["61", "79"], ["23", "79"], ["23", "97"], ["102", "97"], ["102", "97"], ["106", "97"], ["113", "112"], ["113", "112"], ["97", "112"], ["23", "112"], ["110", "121"], ["23", "121"], ["112", "121"], ["127", "121"], ["127", "121"], ["127", "121"], ["127", "121"], ["31", "34"], ["23", "34"], ["45", "48"], ["23", "48"], ["57", "65"], ["23", "65"], ["65", "72"], ["23", "72"], ["43", "83"], ["23", "83"], ["83", "86"], ["23", "86"], ["34", "88"], ["48", "88"], ["23", "88"], ["23", "100"], ["102", "100"], ["102", "100"], ["114", "113"], ["114", "113"], ["91", "113"], ["23", "113"], ["110", "122"], ["23", "122"], ["112", "122"], ["97", "127"], ["23", "127"], ["132", "127"], ["132", "127"], ["134", "127"], ["68", "102"], ["23", "102"], ["106", "102"], ["106", "102"], ["23", "114"], ["95", "114"], ["110", "123"], ["23", "123"], ["112", "123"], ["23", "130"], ["132", "130"], ["132", "130"], ["68", "103"], ["23", "103"], ["23", "106"], ["75", "106"], ["23", "132"], ["68", "132"], ["134", "132"], ["134", "132"], ["23", "134"], ["112", "134"], ["79", "88"], ["79", "83"], ["79", "86"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "49": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "51": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>4</SUB>>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "54": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "56": "<(&lt;operator&gt;.alloc,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,bf,readLine())<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,long n = parseLong(st.nextToken()))<SUB>9</SUB>>", "63": "<(parseLong,parseLong(st.nextToken()))<SUB>9</SUB>>", "65": "<(nextToken,nextToken())<SUB>9</SUB>>", "67": "<(LOCAL,long k: long)<SUB>10</SUB>>", "69": "<(IDENTIFIER,k,long k = parseLong(st.nextToken()))<SUB>10</SUB>>", "71": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>10</SUB>>", "73": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.assignment,int mod = 1000000007)<SUB>11</SUB>>", "77": "<(LITERAL,1000000007,int mod = 1000000007)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.equals,n == 0)<SUB>13</SUB>>", "81": "<(LITERAL,0,n == 0)<SUB>13</SUB>>", "83": "<(println,println(0))<SUB>14</SUB>>", "85": "<(LITERAL,0,println(0))<SUB>14</SUB>>", "87": "<(IDENTIFIER,out,close())<SUB>15</SUB>>", "89": "<(IDENTIFIER,System,System.exit(0))<SUB>15</SUB>>", "91": "<(&lt;operators&gt;.assignmentModulo,n %= mod)<SUB>17</SUB>>", "93": "<(IDENTIFIER,mod,n %= mod)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.assignment,long ans = exp(2, (int) ((k + 1) % (mod - 1)), mod))<SUB>19</SUB>>", "97": "<(exp,exp(2, (int) ((k + 1) % (mod - 1)), mod))<SUB>19</SUB>>", "99": "<(LITERAL,2,exp(2, (int) ((k + 1) % (mod - 1)), mod))<SUB>19</SUB>>", "101": "<(TYPE_REF,int,int)<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.addition,k + 1)<SUB>19</SUB>>", "105": "<(LITERAL,1,k + 1)<SUB>19</SUB>>", "107": "<(IDENTIFIER,mod,mod - 1)<SUB>19</SUB>>", "109": "<(IDENTIFIER,mod,exp(2, (int) ((k + 1) % (mod - 1)), mod))<SUB>19</SUB>>", "111": "<(IDENTIFIER,ans,ans = (1L * ans * n) % mod)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.multiplication,1L * ans * n)<SUB>20</SUB>>", "115": "<(LITERAL,1L,1L * ans)<SUB>20</SUB>>", "117": "<(IDENTIFIER,n,1L * ans * n)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,ans = ans + mod + 1 - exp(2, (int) ((k) % (mod - 1)), mod))<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.subtraction,ans + mod + 1 - exp(2, (int) ((k) % (mod - 1)), mod))<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.addition,ans + mod)<SUB>21</SUB>>", "125": "<(IDENTIFIER,mod,ans + mod)<SUB>21</SUB>>", "127": "<(exp,exp(2, (int) ((k) % (mod - 1)), mod))<SUB>21</SUB>>", "129": "<(LITERAL,2,exp(2, (int) ((k) % (mod - 1)), mod))<SUB>21</SUB>>", "131": "<(TYPE_REF,int,int)<SUB>21</SUB>>", "133": "<(IDENTIFIER,k,(k) % (mod - 1))<SUB>21</SUB>>", "135": "<(IDENTIFIER,mod,mod - 1)<SUB>21</SUB>>", "137": "<(IDENTIFIER,mod,exp(2, (int) ((k) % (mod - 1)), mod))<SUB>21</SUB>>", "139": "<(IDENTIFIER,ans,ans %= mod)<SUB>22</SUB>>", "141": "<(println,println(ans))<SUB>23</SUB>>", "143": "<(IDENTIFIER,ans,println(ans))<SUB>23</SUB>>", "145": "<(IDENTIFIER,out,close())<SUB>26</SUB>>", "147": "<(IDENTIFIER,System,System.exit(0))<SUB>26</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}