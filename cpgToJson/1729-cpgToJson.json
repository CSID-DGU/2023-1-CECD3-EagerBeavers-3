{"edges": [["21", "23"], ["21", "147"], ["21", "148"], ["21", "149"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "38"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "44"], ["38", "45"], ["38", "49"], ["38", "73"], ["38", "76"], ["38", "77"], ["38", "80"], ["38", "142"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "66"], ["62", "72"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["66", "70"], ["68", "69"], ["70", "71"], ["73", "74"], ["73", "75"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "90"], ["80", "92"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "99"], ["92", "100"], ["92", "107"], ["92", "108"], ["92", "129"], ["92", "135"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "120"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "36"], ["26", "24"], ["30", "28"], ["32", "31"], ["36", "149"], ["36", "42"], ["34", "32"], ["40", "47"], ["45", "51"], ["73", "77"], ["77", "82"], ["142", "36"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "65"], ["54", "73"], ["57", "54"], ["82", "87"], ["85", "96"], ["85", "145"], ["90", "87"], ["143", "142"], ["60", "57"], ["87", "85"], ["94", "104"], ["100", "114"], ["108", "130"], ["145", "143"], ["96", "94"], ["102", "100"], ["110", "108"], ["130", "133"], ["130", "136"], ["133", "136"], ["136", "139"], ["136", "90"], ["139", "90"], ["63", "68"], ["66", "60"], ["104", "102"], ["111", "123"], ["120", "110"], ["65", "63"], ["68", "70"], ["70", "66"], ["112", "118"], ["115", "111"], ["121", "127"], ["124", "120"], ["114", "112"], ["116", "115"], ["123", "121"], ["125", "124"], ["118", "116"], ["127", "125"], ["21", "26"], ["22", "149"], ["24", "149"], ["27", "149"], ["27", "149"], ["28", "149"], ["31", "149"], ["31", "149"], ["36", "149"], ["36", "149"], ["142", "149"], ["142", "149"], ["142", "149"], ["73", "149"], ["21", "22"], ["21", "24"], ["21", "28"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "36"], ["47", "36"], ["70", "36"], ["21", "36"], ["42", "40"], ["47", "45"], ["21", "77"], ["21", "51"], ["21", "73"], ["102", "73"], ["60", "73"], ["21", "82"], ["77", "142"], ["133", "142"], ["139", "142"], ["21", "142"], ["36", "42"], ["21", "42"], ["42", "47"], ["21", "47"], ["51", "54"], ["57", "54"], ["21", "54"], ["40", "54"], ["54", "57"], ["21", "57"], ["82", "85"], ["90", "85"], ["21", "85"], ["87", "85"], ["87", "85"], ["21", "90"], ["96", "90"], ["96", "94"], ["96", "94"], ["102", "100"], ["102", "100"], ["110", "108"], ["110", "108"], ["73", "60"], ["102", "60"], ["21", "60"], ["63", "60"], ["66", "60"], ["54", "87"], ["21", "87"], ["21", "139"], ["21", "63"], ["21", "72"], ["73", "96"], ["102", "96"], ["21", "96"], ["85", "96"], ["96", "102"], ["21", "102"], ["96", "102"], ["111", "110"], ["111", "110"], ["94", "110"], ["124", "110"], ["124", "110"], ["108", "130"], ["21", "130"], ["45", "130"], ["136", "130"], ["77", "133"], ["139", "133"], ["21", "133"], ["130", "136"], ["21", "136"], ["130", "136"], ["77", "139"], ["133", "139"], ["63", "66"], ["21", "66"], ["68", "66"], ["70", "66"], ["96", "104"], ["21", "104"], ["100", "111"], ["115", "111"], ["115", "111"], ["94", "120"], ["124", "120"], ["124", "120"], ["47", "68"], ["70", "68"], ["21", "68"], ["68", "70"], ["21", "70"], ["100", "115"], ["21", "115"], ["94", "124"], ["21", "124"], ["36", "73"], ["36", "77"], ["36", "42"], ["36", "51"], ["36", "145"], ["36", "85"], ["36", "40"], ["36", "87"], ["36", "54"], ["36", "36"], ["36", "47"], ["36", "142"], ["36", "45"], ["36", "82"], ["36", "143"], ["54", "68"], ["54", "60"], ["54", "57"], ["54", "54"], ["54", "70"], ["54", "66"], ["54", "65"], ["54", "63"], ["85", "94"], ["85", "115"], ["85", "96"], ["85", "120"], ["85", "136"], ["85", "102"], ["85", "114"], ["85", "85"], ["85", "104"], ["85", "121"], ["85", "87"], ["85", "112"], ["85", "90"], ["85", "130"], ["85", "118"], ["85", "100"], ["85", "127"], ["85", "108"], ["85", "111"], ["85", "116"], ["85", "123"], ["85", "110"], ["85", "124"], ["85", "125"], ["130", "133"], ["136", "139"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY a = new ProblemA())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new ProblemA())<SUB>2</SUB>>", "3": "<(IDENTIFIER,a,new ProblemA())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "5": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "35": "<(CONTROL_STRUCTURE,while (in.hasNextInt()),while (in.hasNextInt()))<SUB>4</SUB>>", "37": "<(IDENTIFIER,in,hasNextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int n: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,double t = nextDouble())<SUB>6</SUB>>", "47": "<(nextDouble,nextDouble())<SUB>6</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int k = 0)<SUB>7</SUB>>", "55": "<(IDENTIFIER,k,k &lt; n)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,k++)<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "61": "<(IDENTIFIER,houses,add(a.new Point2(in.nextDouble(), in.nextDouble())))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "65": "<(&lt;operator&gt;.alloc,a.new Point2(in.nextDouble(), in.nextDouble()))<SUB>8</SUB>>", "67": "<(IDENTIFIER,$obj2,a.new Point2(in.nextDouble(), in.nextDouble()))>", "69": "<(IDENTIFIER,in,nextDouble())<SUB>8</SUB>>", "71": "<(IDENTIFIER,in,nextDouble())<SUB>8</SUB>>", "73": "<(sort,sort(houses))<SUB>10</SUB>>", "75": "<(IDENTIFIER,houses,sort(houses))<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,int ans = 2)<SUB>11</SUB>>", "79": "<(LITERAL,2,int ans = 2)<SUB>11</SUB>>", "81": "<(LOCAL,int k: int)<SUB>12</SUB>>", "83": "<(IDENTIFIER,k,int k = 0)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.lessThan,k &lt; n - 1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>12</SUB>>", "89": "<(LITERAL,1,n - 1)<SUB>12</SUB>>", "91": "<(IDENTIFIER,k,k++)<SUB>12</SUB>>", "93": "<(LOCAL,Point2 cur: ANY)<SUB>13</SUB>>", "95": "<(IDENTIFIER,cur,ANY cur = get(k))<SUB>13</SUB>>", "97": "<(IDENTIFIER,houses,get(k))<SUB>13</SUB>>", "99": "<(LOCAL,Point2 next: ANY)<SUB>14</SUB>>", "101": "<(IDENTIFIER,next,ANY next = get(k + 1))<SUB>14</SUB>>", "103": "<(IDENTIFIER,houses,get(k + 1))<SUB>14</SUB>>", "105": "<(IDENTIFIER,k,k + 1)<SUB>14</SUB>>", "107": "<(LOCAL,double dist: double)<SUB>15</SUB>>", "109": "<(IDENTIFIER,dist,double dist = (next.x - next.y / 2) - (cur.x + cur.y / 2))<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.subtraction,next.x - next.y / 2)<SUB>15</SUB>>", "113": "<(IDENTIFIER,next,next.x - next.y / 2)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.division,next.y / 2)<SUB>15</SUB>>", "117": "<(IDENTIFIER,next,next.y / 2)<SUB>15</SUB>>", "119": "<(LITERAL,2,next.y / 2)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,cur.x)<SUB>15</SUB>>", "123": "<(FIELD_IDENTIFIER,x,x)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,cur.y)<SUB>15</SUB>>", "127": "<(FIELD_IDENTIFIER,y,y)<SUB>15</SUB>>", "129": "<(CONTROL_STRUCTURE,if (dist == t),if (dist == t))<SUB>16</SUB>>", "131": "<(IDENTIFIER,dist,dist == t)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>16</SUB>>", "135": "<(CONTROL_STRUCTURE,if (dist &gt; t),if (dist &gt; t))<SUB>17</SUB>>", "137": "<(IDENTIFIER,dist,dist &gt; t)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.assignmentPlus,ans += 2)<SUB>17</SUB>>", "141": "<(LITERAL,2,ans += 2)<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "145": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "147": "<(MODIFIER,PUBLIC)>", "149": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}