{"edges": [["17", "18"], ["17", "19"], ["17", "372"], ["17", "373"], ["17", "374"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "39"], ["19", "43"], ["19", "44"], ["19", "48"], ["19", "49"], ["19", "56"], ["19", "77"], ["19", "78"], ["19", "85"], ["19", "106"], ["19", "370"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["73", "74"], ["73", "75"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["85", "90"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "105"], ["106", "107"], ["106", "112"], ["106", "341"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "114"], ["112", "119"], ["112", "120"], ["112", "125"], ["112", "306"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["135", "137"], ["135", "142"], ["135", "303"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "150"], ["142", "152"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "153"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "161"], ["153", "163"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "171"], ["163", "204"], ["163", "237"], ["163", "270"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["176", "177"], ["176", "182"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["182", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "197"], ["190", "191"], ["190", "196"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["210", "211"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["217", "224"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["224", "230"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["230", "231"], ["230", "236"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "235"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["241", "242"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "250"], ["248", "255"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["255", "256"], ["255", "263"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "275"], ["276", "277"], ["277", "278"], ["277", "283"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["283", "284"], ["283", "285"], ["283", "290"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["290", "291"], ["290", "296"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["306", "311"], ["306", "314"], ["306", "316"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "313"], ["314", "315"], ["316", "317"], ["316", "339"], ["317", "318"], ["317", "319"], ["317", "322"], ["317", "325"], ["317", "327"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["325", "326"], ["327", "328"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "338"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["339", "340"], ["341", "342"], ["342", "343"], ["343", "344"], ["343", "345"], ["343", "348"], ["343", "351"], ["343", "353"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "350"], ["351", "352"], ["353", "354"], ["353", "368"], ["354", "355"], ["354", "356"], ["354", "359"], ["354", "362"], ["354", "364"], ["356", "357"], ["356", "358"], ["359", "360"], ["359", "361"], ["362", "363"], ["364", "365"], ["365", "366"], ["365", "367"], ["368", "369"], ["370", "371"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "41"], ["39", "46"], ["44", "53"], ["49", "58"], ["78", "87"], ["370", "374"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["58", "61"], ["61", "68"], ["61", "81"], ["64", "61"], ["80", "78"], ["87", "92"], ["90", "99"], ["90", "108"], ["95", "92"], ["107", "116"], ["107", "345"], ["32", "30"], ["53", "51"], ["67", "64"], ["81", "80"], ["92", "90"], ["98", "95"], ["108", "107"], ["114", "122"], ["120", "127"], ["68", "73"], ["71", "67"], ["99", "102"], ["102", "98"], ["116", "114"], ["122", "120"], ["127", "130"], ["130", "139"], ["130", "308"], ["133", "130"], ["308", "311"], ["311", "319"], ["311", "370"], ["314", "311"], ["73", "71"], ["137", "144"], ["303", "133"], ["339", "314"], ["345", "348"], ["348", "356"], ["348", "370"], ["351", "348"], ["139", "137"], ["144", "147"], ["147", "155"], ["147", "303"], ["150", "147"], ["319", "322"], ["322", "334"], ["322", "339"], ["325", "322"], ["368", "351"], ["328", "325"], ["356", "359"], ["359", "365"], ["359", "368"], ["362", "359"], ["155", "158"], ["158", "166"], ["158", "150"], ["161", "158"], ["330", "328"], ["365", "362"], ["164", "172"], ["331", "330"], ["165", "164"], ["172", "178"], ["172", "207"], ["205", "213"], ["205", "238"], ["238", "244"], ["238", "273"], ["271", "279"], ["271", "161"], ["333", "331"], ["166", "165"], ["176", "207"], ["207", "205"], ["211", "238"], ["242", "273"], ["273", "271"], ["277", "161"], ["334", "333"], ["177", "185"], ["182", "176"], ["212", "220"], ["217", "211"], ["243", "251"], ["248", "242"], ["278", "286"], ["283", "277"], ["178", "177"], ["184", "193"], ["189", "182"], ["213", "212"], ["219", "226"], ["224", "217"], ["244", "243"], ["250", "257"], ["255", "248"], ["279", "278"], ["285", "292"], ["290", "283"], ["185", "184"], ["190", "200"], ["197", "189"], ["220", "219"], ["225", "233"], ["230", "224"], ["251", "250"], ["256", "264"], ["263", "255"], ["286", "285"], ["291", "297"], ["296", "290"], ["191", "190"], ["198", "197"], ["226", "225"], ["231", "230"], ["257", "260"], ["260", "256"], ["264", "267"], ["267", "263"], ["292", "291"], ["297", "300"], ["300", "296"], ["193", "191"], ["200", "198"], ["233", "231"], ["17", "22"], ["18", "374"], ["20", "374"], ["23", "374"], ["25", "374"], ["28", "374"], ["28", "374"], ["34", "374"], ["39", "374"], ["46", "374"], ["44", "374"], ["44", "374"], ["49", "374"], ["51", "374"], ["49", "374"], ["49", "374"], ["78", "374"], ["80", "374"], ["78", "374"], ["78", "374"], ["90", "374"], ["90", "374"], ["108", "374"], ["107", "374"], ["107", "374"], ["345", "374"], ["348", "374"], ["348", "374"], ["348", "374"], ["356", "374"], ["359", "374"], ["359", "374"], ["359", "374"], ["368", "374"], ["351", "374"], ["365", "374"], ["362", "374"], ["116", "374"], ["114", "374"], ["114", "374"], ["120", "374"], ["122", "374"], ["120", "374"], ["120", "374"], ["127", "374"], ["130", "374"], ["130", "374"], ["130", "374"], ["308", "374"], ["311", "374"], ["311", "374"], ["311", "374"], ["370", "374"], ["370", "374"], ["319", "374"], ["322", "374"], ["322", "374"], ["322", "374"], ["339", "374"], ["314", "374"], ["331", "374"], ["330", "374"], ["328", "374"], ["328", "374"], ["325", "374"], ["139", "374"], ["137", "374"], ["137", "374"], ["303", "374"], ["303", "374"], ["303", "374"], ["133", "374"], ["155", "374"], ["158", "374"], ["158", "374"], ["158", "374"], ["150", "374"], ["164", "374"], ["164", "374"], ["172", "374"], ["176", "374"], ["182", "374"], ["189", "374"], ["189", "374"], ["182", "374"], ["176", "374"], ["176", "374"], ["205", "374"], ["205", "374"], ["211", "374"], ["217", "374"], ["224", "374"], ["224", "374"], ["217", "374"], ["211", "374"], ["211", "374"], ["238", "374"], ["242", "374"], ["248", "374"], ["255", "374"], ["255", "374"], ["248", "374"], ["242", "374"], ["242", "374"], ["271", "374"], ["271", "374"], ["277", "374"], ["283", "374"], ["290", "374"], ["290", "374"], ["283", "374"], ["277", "374"], ["277", "374"], ["161", "374"], ["98", "374"], ["102", "374"], ["102", "374"], ["98", "374"], ["98", "374"], ["95", "374"], ["67", "374"], ["71", "374"], ["71", "374"], ["67", "374"], ["67", "374"], ["64", "374"], ["164", "374"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["51", "49"], ["80", "78"], ["80", "78"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "58"], ["17", "87"], ["28", "370"], ["368", "370"], ["339", "370"], ["17", "370"], ["23", "36"], ["17", "36"], ["36", "41"], ["17", "41"], ["41", "46"], ["17", "46"], ["34", "51"], ["17", "51"], ["53", "51"], ["53", "51"], ["58", "61"], ["64", "61"], ["17", "61"], ["51", "61"], ["61", "64"], ["17", "64"], ["71", "67"], ["71", "67"], ["71", "67"], ["81", "80"], ["81", "80"], ["53", "80"], ["73", "80"], ["17", "80"], ["87", "90"], ["95", "90"], ["17", "90"], ["92", "90"], ["92", "90"], ["90", "95"], ["17", "95"], ["102", "98"], ["102", "98"], ["102", "98"], ["108", "107"], ["108", "107"], ["17", "107"], ["116", "114"], ["116", "114"], ["122", "120"], ["122", "120"], ["39", "53"], ["17", "53"], ["61", "81"], ["17", "81"], ["81", "92"], ["17", "92"], ["44", "108"], ["17", "108"], ["17", "127"], ["17", "308"], ["46", "71"], ["17", "71"], ["73", "71"], ["73", "71"], ["46", "102"], ["71", "102"], ["17", "102"], ["80", "102"], ["108", "116"], ["17", "116"], ["92", "122"], ["17", "122"], ["80", "122"], ["102", "122"], ["127", "130"], ["133", "130"], ["17", "130"], ["114", "130"], ["130", "133"], ["17", "133"], ["139", "137"], ["139", "137"], ["137", "303"], ["17", "303"], ["308", "311"], ["314", "311"], ["17", "311"], ["122", "311"], ["147", "311"], ["311", "314"], ["17", "314"], ["17", "345"], ["53", "73"], ["17", "73"], ["17", "144"], ["17", "319"], ["28", "339"], ["328", "339"], ["17", "339"], ["345", "348"], ["351", "348"], ["17", "348"], ["92", "348"], ["348", "351"], ["17", "351"], ["122", "139"], ["147", "139"], ["17", "139"], ["122", "139"], ["158", "139"], ["144", "147"], ["150", "147"], ["17", "147"], ["139", "147"], ["207", "147"], ["147", "150"], ["205", "150"], ["17", "150"], ["319", "322"], ["325", "322"], ["17", "322"], ["122", "322"], ["139", "322"], ["158", "322"], ["322", "325"], ["17", "325"], ["17", "356"], ["28", "368"], ["365", "368"], ["17", "368"], ["17", "155"], ["28", "328"], ["339", "328"], ["17", "328"], ["331", "328"], ["331", "328"], ["356", "359"], ["362", "359"], ["17", "359"], ["80", "359"], ["102", "359"], ["359", "362"], ["17", "362"], ["155", "158"], ["161", "158"], ["17", "158"], ["139", "158"], ["273", "158"], ["271", "161"], ["17", "161"], ["17", "164"], ["331", "330"], ["331", "330"], ["17", "330"], ["28", "365"], ["368", "365"], ["17", "365"], ["17", "331"], ["147", "172"], ["205", "172"], ["17", "172"], ["182", "176"], ["182", "176"], ["182", "176"], ["172", "205"], ["200", "205"], ["17", "205"], ["207", "205"], ["207", "205"], ["217", "211"], ["217", "211"], ["217", "211"], ["158", "238"], ["17", "238"], ["248", "242"], ["248", "242"], ["248", "242"], ["238", "271"], ["267", "271"], ["17", "271"], ["273", "271"], ["273", "271"], ["283", "277"], ["283", "277"], ["283", "277"], ["147", "207"], ["17", "207"], ["158", "273"], ["17", "273"], ["217", "182"], ["248", "182"], ["283", "182"], ["17", "182"], ["164", "182"], ["182", "217"], ["248", "217"], ["283", "217"], ["17", "217"], ["164", "217"], ["176", "217"], ["182", "248"], ["217", "248"], ["283", "248"], ["17", "248"], ["164", "248"], ["176", "248"], ["211", "248"], ["182", "283"], ["217", "283"], ["248", "283"], ["17", "283"], ["164", "283"], ["176", "283"], ["211", "283"], ["242", "283"], ["238", "260"], ["17", "260"], ["260", "267"], ["17", "267"], ["271", "300"], ["17", "300"], ["172", "193"], ["17", "193"], ["193", "200"], ["17", "200"], ["205", "233"], ["17", "233"], ["61", "68"], ["61", "61"], ["61", "71"], ["61", "73"], ["61", "64"], ["61", "67"], ["90", "102"], ["90", "95"], ["90", "98"], ["90", "92"], ["90", "90"], ["90", "99"], ["107", "120"], ["107", "114"], ["107", "308"], ["107", "127"], ["107", "116"], ["107", "122"], ["107", "348"], ["107", "311"], ["107", "130"], ["107", "345"], ["130", "147"], ["130", "133"], ["130", "144"], ["130", "137"], ["130", "130"], ["130", "139"], ["130", "303"], ["311", "322"], ["311", "311"], ["311", "319"], ["311", "339"], ["311", "314"], ["348", "356"], ["348", "368"], ["348", "348"], ["348", "351"], ["348", "359"], ["147", "150"], ["147", "158"], ["147", "147"], ["147", "155"], ["322", "334"], ["322", "322"], ["322", "328"], ["322", "325"], ["322", "333"], ["322", "330"], ["322", "331"], ["359", "362"], ["359", "365"], ["359", "359"], ["158", "161"], ["158", "238"], ["158", "158"], ["158", "172"], ["158", "273"], ["158", "207"], ["158", "164"], ["158", "205"], ["158", "166"], ["158", "165"], ["158", "271"], ["172", "190"], ["172", "184"], ["172", "182"], ["172", "200"], ["172", "176"], ["172", "177"], ["172", "178"], ["172", "185"], ["172", "197"], ["172", "198"], ["172", "189"], ["172", "191"], ["172", "193"], ["205", "230"], ["205", "226"], ["205", "213"], ["205", "224"], ["205", "217"], ["205", "225"], ["205", "231"], ["205", "212"], ["205", "233"], ["205", "220"], ["205", "211"], ["205", "219"], ["238", "243"], ["238", "256"], ["238", "264"], ["238", "242"], ["238", "260"], ["238", "257"], ["238", "244"], ["238", "255"], ["238", "267"], ["238", "251"], ["238", "263"], ["238", "248"], ["238", "250"], ["271", "292"], ["271", "290"], ["271", "283"], ["271", "300"], ["271", "296"], ["271", "278"], ["271", "297"], ["271", "279"], ["271", "291"], ["271", "285"], ["271", "286"], ["271", "277"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new FastScanner())<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new FastScanner())<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(System.out))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "29": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(LOCAL,int N: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,N,int N = ni())<SUB>5</SUB>>", "37": "<(IDENTIFIER,sc,ni())<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.assignment,int M = ni())<SUB>6</SUB>>", "41": "<(ni,ni())<SUB>6</SUB>>", "43": "<(LOCAL,int K: int)<SUB>7</SUB>>", "45": "<(IDENTIFIER,K,int K = ni())<SUB>7</SUB>>", "47": "<(IDENTIFIER,sc,ni())<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[][] LR = new int[N][M - 1])<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[N][M - 1])>", "53": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>8</SUB>>", "55": "<(LITERAL,1,M - 1)<SUB>8</SUB>>", "57": "<(LOCAL,int i: int)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "63": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,LR[i] = intArray(M - 1, 0))<SUB>10</SUB>>", "69": "<(IDENTIFIER,LR,LR[i] = intArray(M - 1, 0))<SUB>10</SUB>>", "71": "<(intArray,intArray(M - 1, 0))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>10</SUB>>", "75": "<(LITERAL,1,M - 1)<SUB>10</SUB>>", "77": "<(LOCAL,int[][] UD: int[][])<SUB>12</SUB>>", "79": "<(IDENTIFIER,UD,int[][] UD = new int[N - 1][M])<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>12</SUB>>", "83": "<(LITERAL,1,N - 1)<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "89": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>13</SUB>>", "93": "<(IDENTIFIER,N,N - 1)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,UD[i])<SUB>14</SUB>>", "101": "<(IDENTIFIER,i,UD[i] = intArray(M, 0))<SUB>14</SUB>>", "103": "<(IDENTIFIER,sc,intArray(M, 0))<SUB>14</SUB>>", "105": "<(LITERAL,0,intArray(M, 0))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.equals,K % 2 == 0)<SUB>17</SUB>>", "109": "<(IDENTIFIER,K,K % 2)<SUB>17</SUB>>", "111": "<(LITERAL,0,K % 2 == 0)<SUB>17</SUB>>", "113": "<(LOCAL,int T: int)<SUB>18</SUB>>", "115": "<(IDENTIFIER,T,int T = K / 2)<SUB>18</SUB>>", "117": "<(IDENTIFIER,K,K / 2)<SUB>18</SUB>>", "119": "<(LOCAL,int[][] dist: int[][])<SUB>19</SUB>>", "121": "<(IDENTIFIER,dist,int[][] dist = new int[N][M])<SUB>19</SUB>>", "123": "<(IDENTIFIER,N,new int[N][M])<SUB>19</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int step = 1; Some(step &lt;= T); step++),for (int step = 1; Some(step &lt;= T); step++))<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.assignment,int step = 1)<SUB>21</SUB>>", "129": "<(LITERAL,1,int step = 1)<SUB>21</SUB>>", "131": "<(IDENTIFIER,step,step &lt;= T)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,step++)<SUB>21</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.assignment,int[][] newDist = new int[N][M])<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.alloc,new int[N][M])>", "141": "<(IDENTIFIER,M,new int[N][M])<SUB>22</SUB>>", "143": "<(LOCAL,int i: int)<SUB>23</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>23</SUB>>", "149": "<(IDENTIFIER,N,i &lt; N)<SUB>23</SUB>>", "151": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>24</SUB>>", "157": "<(LITERAL,0,int j = 0)<SUB>24</SUB>>", "159": "<(IDENTIFIER,j,j &lt; M)<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,j++)<SUB>24</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,newDist[i][j])<SUB>25</SUB>>", "167": "<(IDENTIFIER,newDist,newDist[i][j] = INF)<SUB>25</SUB>>", "169": "<(IDENTIFIER,j,newDist[i][j] = INF)<SUB>25</SUB>>", "171": "<(CONTROL_STRUCTURE,if (i &gt; 0),if (i &gt; 0))<SUB>28</SUB>>", "173": "<(IDENTIFIER,i,i &gt; 0)<SUB>28</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,newDist[i][j])<SUB>29</SUB>>", "179": "<(IDENTIFIER,newDist,newDist[i][j] = Math.min(newDist[i][j], UD[i - 1][j] + dist[i - 1][j]))<SUB>29</SUB>>", "181": "<(IDENTIFIER,j,newDist[i][j] = Math.min(newDist[i][j], UD[i - 1][j] + dist[i - 1][j]))<SUB>29</SUB>>", "183": "<(IDENTIFIER,Math,Math.min(newDist[i][j], UD[i - 1][j] + dist[i - 1][j]))<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,newDist[i])<SUB>29</SUB>>", "187": "<(IDENTIFIER,i,Math.min(newDist[i][j], UD[i - 1][j] + dist[i - 1][j]))<SUB>29</SUB>>", "189": "<(&lt;operator&gt;.addition,UD[i - 1][j] + dist[i - 1][j])<SUB>29</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,UD[i - 1])<SUB>29</SUB>>", "193": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>29</SUB>>", "195": "<(LITERAL,1,i - 1)<SUB>29</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dist[i - 1][j])<SUB>29</SUB>>", "199": "<(IDENTIFIER,dist,UD[i - 1][j] + dist[i - 1][j])<SUB>29</SUB>>", "201": "<(IDENTIFIER,i,i - 1)<SUB>29</SUB>>", "203": "<(IDENTIFIER,j,UD[i - 1][j] + dist[i - 1][j])<SUB>29</SUB>>", "205": "<(&lt;operator&gt;.lessThan,i &lt; N - 1)<SUB>33</SUB>>", "207": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>33</SUB>>", "209": "<(LITERAL,1,N - 1)<SUB>33</SUB>>", "211": "<(&lt;operator&gt;.assignment,newDist[i][j] = Math.min(newDist[i][j], UD[i][j] + dist[i + 1][j]))<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,newDist[i])<SUB>34</SUB>>", "215": "<(IDENTIFIER,i,newDist[i][j] = Math.min(newDist[i][j], UD[i][j] + dist[i + 1][j]))<SUB>34</SUB>>", "217": "<(min,Math.min(newDist[i][j], UD[i][j] + dist[i + 1][j]))<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,newDist[i][j])<SUB>34</SUB>>", "221": "<(IDENTIFIER,newDist,Math.min(newDist[i][j], UD[i][j] + dist[i + 1][j]))<SUB>34</SUB>>", "223": "<(IDENTIFIER,j,Math.min(newDist[i][j], UD[i][j] + dist[i + 1][j]))<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,UD[i][j])<SUB>34</SUB>>", "227": "<(IDENTIFIER,UD,UD[i][j] + dist[i + 1][j])<SUB>34</SUB>>", "229": "<(IDENTIFIER,j,UD[i][j] + dist[i + 1][j])<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,dist[i + 1])<SUB>34</SUB>>", "233": "<(&lt;operator&gt;.addition,i + 1)<SUB>34</SUB>>", "235": "<(LITERAL,1,i + 1)<SUB>34</SUB>>", "237": "<(CONTROL_STRUCTURE,if (j &gt; 0),if (j &gt; 0))<SUB>38</SUB>>", "239": "<(IDENTIFIER,j,j &gt; 0)<SUB>38</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,newDist[i][j])<SUB>39</SUB>>", "245": "<(IDENTIFIER,newDist,newDist[i][j] = Math.min(newDist[i][j], LR[i][j - 1] + dist[i][j - 1]))<SUB>39</SUB>>", "247": "<(IDENTIFIER,j,newDist[i][j] = Math.min(newDist[i][j], LR[i][j - 1] + dist[i][j - 1]))<SUB>39</SUB>>", "249": "<(IDENTIFIER,Math,Math.min(newDist[i][j], LR[i][j - 1] + dist[i][j - 1]))<SUB>39</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,newDist[i])<SUB>39</SUB>>", "253": "<(IDENTIFIER,i,Math.min(newDist[i][j], LR[i][j - 1] + dist[i][j - 1]))<SUB>39</SUB>>", "255": "<(&lt;operator&gt;.addition,LR[i][j - 1] + dist[i][j - 1])<SUB>39</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,LR[i])<SUB>39</SUB>>", "259": "<(IDENTIFIER,i,LR[i][j - 1] + dist[i][j - 1])<SUB>39</SUB>>", "261": "<(IDENTIFIER,j,j - 1)<SUB>39</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,dist[i][j - 1])<SUB>39</SUB>>", "265": "<(IDENTIFIER,dist,LR[i][j - 1] + dist[i][j - 1])<SUB>39</SUB>>", "267": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>39</SUB>>", "269": "<(LITERAL,1,j - 1)<SUB>39</SUB>>", "271": "<(&lt;operator&gt;.lessThan,j &lt; M - 1)<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>43</SUB>>", "275": "<(LITERAL,1,M - 1)<SUB>43</SUB>>", "277": "<(&lt;operator&gt;.assignment,newDist[i][j] = Math.min(newDist[i][j], LR[i][j] + dist[i][j + 1]))<SUB>44</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,newDist[i])<SUB>44</SUB>>", "281": "<(IDENTIFIER,i,newDist[i][j] = Math.min(newDist[i][j], LR[i][j] + dist[i][j + 1]))<SUB>44</SUB>>", "283": "<(min,Math.min(newDist[i][j], LR[i][j] + dist[i][j + 1]))<SUB>44</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,newDist[i][j])<SUB>44</SUB>>", "287": "<(IDENTIFIER,newDist,Math.min(newDist[i][j], LR[i][j] + dist[i][j + 1]))<SUB>44</SUB>>", "289": "<(IDENTIFIER,j,Math.min(newDist[i][j], LR[i][j] + dist[i][j + 1]))<SUB>44</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,LR[i][j])<SUB>44</SUB>>", "293": "<(IDENTIFIER,LR,LR[i][j] + dist[i][j + 1])<SUB>44</SUB>>", "295": "<(IDENTIFIER,j,LR[i][j] + dist[i][j + 1])<SUB>44</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,dist[i])<SUB>44</SUB>>", "299": "<(IDENTIFIER,i,LR[i][j] + dist[i][j + 1])<SUB>44</SUB>>", "301": "<(IDENTIFIER,j,j + 1)<SUB>44</SUB>>", "303": "<(&lt;operator&gt;.assignment,dist = newDist)<SUB>48</SUB>>", "305": "<(IDENTIFIER,newDist,dist = newDist)<SUB>48</SUB>>", "307": "<(LOCAL,int i: int)<SUB>51</SUB>>", "309": "<(IDENTIFIER,i,int i = 0)<SUB>51</SUB>>", "311": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>51</SUB>>", "313": "<(IDENTIFIER,N,i &lt; N)<SUB>51</SUB>>", "315": "<(IDENTIFIER,i,i++)<SUB>51</SUB>>", "317": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>52</SUB>>", "319": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>52</SUB>>", "321": "<(LITERAL,0,int j = 0)<SUB>52</SUB>>", "323": "<(IDENTIFIER,j,j &lt; M)<SUB>52</SUB>>", "325": "<(&lt;operator&gt;.postIncrement,j++)<SUB>52</SUB>>", "327": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "329": "<(IDENTIFIER,pw,print((2 * dist[i][j]) + &quot; &quot;))<SUB>53</SUB>>", "331": "<(&lt;operator&gt;.multiplication,2 * dist[i][j])<SUB>53</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,dist[i][j])<SUB>53</SUB>>", "335": "<(IDENTIFIER,dist,2 * dist[i][j])<SUB>53</SUB>>", "337": "<(IDENTIFIER,j,2 * dist[i][j])<SUB>53</SUB>>", "339": "<(println,println())<SUB>55</SUB>>", "341": "<(CONTROL_STRUCTURE,else,else)<SUB>57</SUB>>", "343": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>58</SUB>>", "345": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>58</SUB>>", "347": "<(LITERAL,0,int i = 0)<SUB>58</SUB>>", "349": "<(IDENTIFIER,i,i &lt; N)<SUB>58</SUB>>", "351": "<(&lt;operator&gt;.postIncrement,i++)<SUB>58</SUB>>", "353": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "355": "<(LOCAL,int j: int)<SUB>59</SUB>>", "357": "<(IDENTIFIER,j,int j = 0)<SUB>59</SUB>>", "359": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>59</SUB>>", "361": "<(IDENTIFIER,M,j &lt; M)<SUB>59</SUB>>", "363": "<(IDENTIFIER,j,j++)<SUB>59</SUB>>", "365": "<(print,print(&quot;-1 &quot;))<SUB>60</SUB>>", "367": "<(LITERAL,&quot;-1 &quot;,print(&quot;-1 &quot;))<SUB>60</SUB>>", "369": "<(IDENTIFIER,pw,println())<SUB>62</SUB>>", "371": "<(IDENTIFIER,pw,close())<SUB>65</SUB>>", "373": "<(MODIFIER,STATIC)>"}}