{"edges": [["23", "24"], ["23", "25"], ["23", "136"], ["23", "137"], ["23", "138"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "50"], ["25", "51"], ["25", "55"], ["25", "71"], ["25", "72"], ["25", "8"], ["25", "75"], ["25", "78"], ["25", "79"], ["25", "127"], ["25", "132"], ["25", "134"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "7"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "106"], ["89", "114"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "124"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "43"], ["41", "48"], ["46", "53"], ["51", "57"], ["72", "77"], ["75", "78"], ["78", "81"], ["127", "132"], ["132", "134"], ["134", "138"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["57", "60"], ["60", "66"], ["60", "72"], ["63", "60"], ["65", "63"], ["77", "75"], ["81", "84"], ["84", "94"], ["84", "129"], ["87", "84"], ["129", "127"], ["32", "30"], ["39", "37"], ["66", "69"], ["69", "65"], ["91", "109"], ["93", "91"], ["107", "112"], ["107", "120"], ["112", "120"], ["115", "124"], ["115", "87"], ["124", "87"], ["94", "98"], ["95", "93"], ["109", "107"], ["116", "115"], ["97", "95"], ["118", "116"], ["98", "103"], ["101", "97"], ["119", "118"], ["103", "101"], ["120", "119"], ["23", "28"], ["24", "138"], ["26", "138"], ["29", "138"], ["29", "138"], ["33", "138"], ["36", "138"], ["36", "138"], ["41", "138"], ["46", "138"], ["48", "138"], ["46", "138"], ["46", "138"], ["51", "138"], ["51", "138"], ["51", "138"], ["57", "138"], ["72", "138"], ["75", "138"], ["78", "138"], ["78", "138"], ["81", "138"], ["84", "138"], ["84", "138"], ["84", "138"], ["129", "138"], ["127", "138"], ["127", "138"], ["132", "138"], ["134", "138"], ["134", "138"], ["97", "138"], ["97", "138"], ["95", "138"], ["93", "138"], ["91", "138"], ["91", "138"], ["107", "138"], ["107", "138"], ["112", "138"], ["116", "138"], ["118", "138"], ["118", "138"], ["116", "138"], ["115", "138"], ["115", "138"], ["124", "138"], ["87", "138"], ["65", "138"], ["69", "138"], ["65", "138"], ["65", "138"], ["63", "138"], ["95", "138"], ["23", "24"], ["23", "26"], ["23", "33"], ["43", "41"], ["48", "46"], ["53", "51"], ["23", "72"], ["23", "75"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["23", "57"], ["69", "65"], ["75", "78"], ["23", "78"], ["23", "81"], ["36", "127"], ["23", "127"], ["72", "127"], ["112", "127"], ["124", "127"], ["127", "132"], ["23", "132"], ["132", "134"], ["23", "134"], ["29", "43"], ["23", "43"], ["43", "48"], ["23", "48"], ["41", "53"], ["23", "53"], ["57", "60"], ["63", "60"], ["23", "60"], ["53", "60"], ["60", "63"], ["23", "63"], ["81", "84"], ["87", "84"], ["23", "84"], ["60", "84"], ["103", "87"], ["23", "87"], ["23", "91"], ["95", "91"], ["95", "91"], ["72", "129"], ["112", "129"], ["124", "129"], ["23", "129"], ["48", "69"], ["23", "69"], ["23", "124"], ["23", "93"], ["95", "93"], ["95", "93"], ["91", "107"], ["23", "107"], ["109", "107"], ["109", "107"], ["72", "112"], ["124", "112"], ["23", "112"], ["116", "115"], ["116", "115"], ["23", "115"], ["72", "124"], ["112", "124"], ["23", "95"], ["97", "95"], ["97", "95"], ["23", "109"], ["46", "109"], ["118", "109"], ["107", "116"], ["23", "116"], ["118", "116"], ["118", "116"], ["51", "97"], ["65", "97"], ["23", "118"], ["109", "118"], ["23", "119"], ["84", "103"], ["23", "103"], ["60", "60"], ["60", "66"], ["60", "69"], ["60", "65"], ["60", "63"], ["84", "107"], ["84", "94"], ["84", "115"], ["84", "98"], ["84", "120"], ["84", "116"], ["84", "84"], ["84", "103"], ["84", "119"], ["84", "95"], ["84", "87"], ["84", "97"], ["84", "91"], ["84", "93"], ["84", "101"], ["84", "118"], ["84", "109"], ["107", "112"], ["115", "124"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>13</SUB>>", "43": "<(nextInt,nextInt())<SUB>13</SUB>>", "45": "<(LOCAL,long d: long)<SUB>14</SUB>>", "47": "<(IDENTIFIER,d,long d = nextInt())<SUB>14</SUB>>", "49": "<(IDENTIFIER,in,nextInt())<SUB>14</SUB>>", "51": "<(&lt;operator&gt;.assignment,long[] a = new long[n])<SUB>15</SUB>>", "53": "<(&lt;operator&gt;.alloc,new long[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "65": "<(&lt;operator&gt;.assignment,a[i] = nextLong())<SUB>17</SUB>>", "67": "<(IDENTIFIER,a,a[i] = nextLong())<SUB>17</SUB>>", "69": "<(nextLong,nextLong())<SUB>17</SUB>>", "71": "<(LOCAL,int ans: int)<SUB>20</SUB>>", "73": "<(IDENTIFIER,ans,int ans = 0)<SUB>20</SUB>>", "8": "<(LOCAL,HashSet&lt;Long&gt; set: ANY)<SUB>22</SUB>>", "76": "<(IDENTIFIER,set,ANY set = new HashSet&lt;&gt;())<SUB>22</SUB>>", "78": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>22</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>31</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>31</SUB>>", "83": "<(LITERAL,1,int i = 1)<SUB>31</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>31</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "91": "<(&lt;operator&gt;.assignment,long dis = (long) Math.abs(a[i] - a[i - 1]))<SUB>36</SUB>>", "93": "<(&lt;operator&gt;.cast,(long) Math.abs(a[i] - a[i - 1]))<SUB>36</SUB>>", "95": "<(abs,Math.abs(a[i] - a[i - 1]))<SUB>36</SUB>>", "97": "<(&lt;operator&gt;.subtraction,a[i] - a[i - 1])<SUB>36</SUB>>", "99": "<(IDENTIFIER,a,a[i] - a[i - 1])<SUB>36</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>36</SUB>>", "103": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>36</SUB>>", "105": "<(LITERAL,1,i - 1)<SUB>36</SUB>>", "107": "<(&lt;operator&gt;.equals,dis == 2 * d)<SUB>38</SUB>>", "109": "<(&lt;operator&gt;.multiplication,2 * d)<SUB>38</SUB>>", "111": "<(IDENTIFIER,d,2 * d)<SUB>38</SUB>>", "113": "<(IDENTIFIER,ans,ans++)<SUB>39</SUB>>", "115": "<(&lt;operator&gt;.greaterThan,dis - (long) 2 * d &gt; 0)<SUB>41</SUB>>", "117": "<(IDENTIFIER,dis,dis - (long) 2 * d)<SUB>41</SUB>>", "119": "<(&lt;operator&gt;.cast,(long) 2)<SUB>41</SUB>>", "121": "<(LITERAL,2,(long) 2)<SUB>41</SUB>>", "123": "<(LITERAL,0,dis - (long) 2 * d &gt; 0)<SUB>41</SUB>>", "125": "<(IDENTIFIER,ans,ans += 2)<SUB>42</SUB>>", "127": "<(println,println(ans + 2))<SUB>46</SUB>>", "129": "<(&lt;operator&gt;.addition,ans + 2)<SUB>46</SUB>>", "131": "<(LITERAL,2,ans + 2)<SUB>46</SUB>>", "133": "<(IDENTIFIER,pw,flush())<SUB>55</SUB>>", "135": "<(IDENTIFIER,pw,close())<SUB>56</SUB>>", "137": "<(MODIFIER,STATIC)>"}}