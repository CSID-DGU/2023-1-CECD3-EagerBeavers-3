{"edges": [["19", "21"], ["19", "103"], ["19", "104"], ["19", "105"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "41"], ["21", "44"], ["21", "47"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "60"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "70"], ["60", "79"], ["61", "62"], ["61", "69"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "78"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["79", "80"], ["80", "81"], ["80", "90"], ["80", "96"], ["81", "82"], ["81", "89"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["90", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "41"], ["41", "44"], ["44", "48"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["48", "105"], ["48", "56"], ["28", "26"], ["53", "63"], ["55", "53"], ["61", "74"], ["61", "83"], ["56", "55"], ["62", "61"], ["71", "78"], ["78", "105"], ["63", "66"], ["66", "62"], ["72", "75"], ["75", "71"], ["81", "93"], ["81", "100"], ["74", "72"], ["82", "81"], ["91", "48"], ["83", "86"], ["86", "82"], ["93", "91"], ["98", "48"], ["100", "98"], ["19", "24"], ["78", "105"], ["20", "105"], ["22", "105"], ["25", "105"], ["25", "105"], ["31", "105"], ["37", "105"], ["35", "105"], ["35", "105"], ["41", "105"], ["44", "105"], ["48", "105"], ["56", "105"], ["56", "105"], ["55", "105"], ["53", "105"], ["53", "105"], ["63", "105"], ["62", "105"], ["61", "105"], ["61", "105"], ["61", "105"], ["81", "105"], ["98", "105"], ["98", "105"], ["91", "105"], ["91", "105"], ["71", "105"], ["75", "105"], ["75", "105"], ["71", "105"], ["71", "105"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["19", "41"], ["31", "44"], ["19", "44"], ["22", "25"], ["19", "25"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["41", "48"], ["98", "48"], ["19", "48"], ["44", "48"], ["91", "48"], ["55", "53"], ["55", "53"], ["48", "55"], ["19", "55"], ["48", "55"], ["62", "61"], ["62", "61"], ["35", "61"], ["81", "61"], ["19", "61"], ["19", "78"], ["48", "56"], ["19", "56"], ["48", "56"], ["63", "62"], ["63", "62"], ["66", "62"], ["66", "62"], ["75", "71"], ["75", "71"], ["83", "63"], ["19", "63"], ["53", "63"], ["86", "66"], ["19", "66"], ["31", "66"], ["63", "66"], ["66", "75"], ["19", "75"], ["66", "75"], ["82", "81"], ["82", "81"], ["61", "81"], ["19", "81"], ["93", "91"], ["93", "91"], ["83", "82"], ["83", "82"], ["86", "82"], ["86", "82"], ["86", "98"], ["19", "98"], ["63", "83"], ["19", "83"], ["66", "83"], ["66", "86"], ["19", "86"], ["83", "86"], ["86", "93"], ["19", "93"], ["86", "100"], ["19", "100"], ["48", "61"], ["48", "66"], ["48", "53"], ["48", "56"], ["48", "63"], ["48", "55"], ["48", "62"], ["61", "48"], ["61", "83"], ["61", "71"], ["61", "75"], ["61", "81"], ["61", "72"], ["61", "74"], ["61", "82"], ["61", "78"], ["61", "86"], ["81", "98"], ["81", "100"], ["81", "91"], ["81", "93"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,long n = nextInt())<SUB>4</SUB>>", "33": "<(nextInt,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,long start: long)<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.assignment,long start = 1)<SUB>7</SUB>>", "43": "<(LITERAL,1,long start = 1)<SUB>7</SUB>>", "45": "<(IDENTIFIER,end,long end = n)<SUB>7</SUB>>", "47": "<(CONTROL_STRUCTURE,while (start &lt;= end),while (start &lt;= end))<SUB>9</SUB>>", "49": "<(IDENTIFIER,start,start &lt;= end)<SUB>9</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.assignment,long mid = (start + end) &gt;&gt; 1)<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.logicalShiftRight,(start + end) &gt;&gt; 1)<SUB>10</SUB>>", "57": "<(IDENTIFIER,start,start + end)<SUB>10</SUB>>", "59": "<(LITERAL,1,(start + end) &gt;&gt; 1)<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.equals,calc(mid) - (n - mid) == k)<SUB>11</SUB>>", "63": "<(calc,calc(mid))<SUB>11</SUB>>", "65": "<(IDENTIFIER,mid,calc(mid))<SUB>11</SUB>>", "67": "<(IDENTIFIER,n,n - mid)<SUB>11</SUB>>", "69": "<(IDENTIFIER,k,calc(mid) - (n - mid) == k)<SUB>11</SUB>>", "71": "<(println,System.out.println(n - mid))<SUB>12</SUB>>", "73": "<(IDENTIFIER,System,System.out.println(n - mid))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.subtraction,n - mid)<SUB>12</SUB>>", "77": "<(IDENTIFIER,mid,n - mid)<SUB>12</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "81": "<(&lt;operator&gt;.greaterThan,calc(mid) - (n - mid) &gt; k)<SUB>14</SUB>>", "83": "<(calc,calc(mid))<SUB>14</SUB>>", "85": "<(IDENTIFIER,mid,calc(mid))<SUB>14</SUB>>", "87": "<(IDENTIFIER,n,n - mid)<SUB>14</SUB>>", "89": "<(IDENTIFIER,k,calc(mid) - (n - mid) &gt; k)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,end = mid - 1)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>15</SUB>>", "95": "<(LITERAL,1,mid - 1)<SUB>15</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(IDENTIFIER,start,start = mid + 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,mid,mid + 1)<SUB>17</SUB>>", "103": "<(MODIFIER,PUBLIC)>", "105": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}