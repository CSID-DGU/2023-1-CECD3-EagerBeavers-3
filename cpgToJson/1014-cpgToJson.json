{"edges": [["23", "24"], ["23", "25"], ["23", "144"], ["23", "145"], ["23", "146"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "56"], ["25", "57"], ["25", "58"], ["25", "59"], ["25", "62"], ["25", "65"], ["25", "68"], ["25", "8"], ["25", "103"], ["25", "106"], ["25", "107"], ["25", "108"], ["25", "111"], ["25", "126"], ["25", "129"], ["25", "142"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "55"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "81"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "87"], ["81", "96"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "7"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "141"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["26", "32"], ["29", "35"], ["33", "39"], ["36", "43"], ["41", "46"], ["59", "62"], ["62", "65"], ["65", "69"], ["103", "106"], ["106", "108"], ["108", "112"], ["126", "134"], ["129", "142"], ["142", "146"], ["28", "26"], ["30", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["46", "53"], ["46", "59"], ["69", "77"], ["69", "105"], ["105", "103"], ["112", "119"], ["112", "126"], ["131", "129"], ["32", "30"], ["39", "37"], ["50", "55"], ["55", "146"], ["74", "83"], ["116", "123"], ["123", "112"], ["133", "131"], ["51", "50"], ["76", "74"], ["82", "88"], ["82", "100"], ["118", "116"], ["134", "138"], ["135", "133"], ["53", "51"], ["77", "76"], ["83", "82"], ["88", "93"], ["91", "69"], ["119", "120"], ["120", "118"], ["136", "135"], ["93", "91"], ["98", "69"], ["138", "136"], ["100", "98"], ["23", "28"], ["55", "146"], ["24", "146"], ["26", "146"], ["29", "146"], ["29", "146"], ["33", "146"], ["36", "146"], ["36", "146"], ["43", "146"], ["41", "146"], ["41", "146"], ["46", "146"], ["46", "146"], ["50", "146"], ["50", "146"], ["126", "146"], ["23", "24"], ["23", "26"], ["23", "33"], ["43", "41"], ["23", "59"], ["46", "62"], ["23", "62"], ["23", "65"], ["23", "103"], ["65", "108"], ["88", "108"], ["23", "108"], ["26", "29"], ["23", "29"], ["33", "36"], ["23", "36"], ["103", "106"], ["23", "106"], ["23", "126"], ["106", "126"], ["116", "126"], ["36", "129"], ["23", "129"], ["131", "129"], ["131", "129"], ["129", "142"], ["23", "142"], ["29", "43"], ["23", "43"], ["41", "46"], ["23", "46"], ["23", "55"], ["59", "69"], ["91", "69"], ["23", "69"], ["62", "69"], ["98", "69"], ["76", "74"], ["76", "74"], ["108", "112"], ["123", "112"], ["23", "112"], ["23", "123"], ["126", "131"], ["23", "131"], ["135", "131"], ["135", "131"], ["36", "50"], ["23", "50"], ["106", "116"], ["23", "116"], ["120", "116"], ["120", "116"], ["120", "123"], ["23", "133"], ["135", "133"], ["135", "133"], ["69", "76"], ["23", "76"], ["69", "76"], ["83", "82"], ["83", "82"], ["23", "82"], ["46", "82"], ["83", "88"], ["23", "88"], ["23", "91"], ["83", "91"], ["23", "118"], ["120", "118"], ["120", "118"], ["136", "135"], ["136", "135"], ["23", "135"], ["69", "77"], ["23", "77"], ["69", "77"], ["23", "83"], ["74", "83"], ["100", "98"], ["100", "98"], ["112", "120"], ["23", "120"], ["82", "136"], ["23", "136"], ["46", "136"], ["138", "136"], ["138", "136"], ["23", "93"], ["83", "93"], ["83", "138"], ["23", "138"], ["65", "138"], ["88", "138"], ["83", "100"], ["23", "100"], ["46", "51"], ["46", "136"], ["46", "131"], ["46", "103"], ["46", "69"], ["46", "142"], ["46", "106"], ["46", "65"], ["46", "50"], ["46", "59"], ["46", "112"], ["46", "129"], ["46", "134"], ["46", "138"], ["46", "126"], ["46", "105"], ["46", "53"], ["46", "135"], ["46", "55"], ["46", "108"], ["46", "62"], ["46", "133"], ["69", "77"], ["69", "69"], ["69", "74"], ["69", "76"], ["69", "82"], ["69", "83"], ["112", "120"], ["112", "116"], ["112", "119"], ["112", "123"], ["112", "112"], ["112", "118"], ["82", "98"], ["82", "91"], ["82", "93"], ["82", "100"], ["82", "88"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "43": "<(nextLong,nextLong())<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (k == 1),if (k == 1))<SUB>6</SUB>>", "47": "<(IDENTIFIER,k,k == 1)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>7</SUB>>", "53": "<(FIELD_IDENTIFIER,out,out)<SUB>7</SUB>>", "55": "<(RETURN,return;,return;)<SUB>8</SUB>>", "57": "<(LOCAL,long hi: long)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,long lo = 1)<SUB>10</SUB>>", "61": "<(LITERAL,1,long lo = 1)<SUB>10</SUB>>", "63": "<(IDENTIFIER,hi,long hi = k)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.assignment,long res = 1)<SUB>10</SUB>>", "67": "<(LITERAL,1,long res = 1)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>11</SUB>>", "71": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>11</SUB>>", "73": "<(LOCAL,long mid: long)<SUB>12</SUB>>", "75": "<(IDENTIFIER,mid,long mid = lo + hi &gt;&gt; 1L)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.addition,lo + hi)<SUB>12</SUB>>", "79": "<(IDENTIFIER,hi,lo + hi)<SUB>12</SUB>>", "81": "<(CONTROL_STRUCTURE,if (cnt(mid) &lt; k),if (cnt(mid) &lt; k))<SUB>13</SUB>>", "83": "<(cnt,cnt(mid))<SUB>13</SUB>>", "85": "<(IDENTIFIER,mid,cnt(mid))<SUB>13</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "89": "<(IDENTIFIER,res,res = mid)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.assignment,lo = mid + 1)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.addition,mid + 1)<SUB>15</SUB>>", "95": "<(LITERAL,1,mid + 1)<SUB>15</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(IDENTIFIER,hi,hi = mid - 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,mid,mid - 1)<SUB>17</SUB>>", "8": "<(LOCAL,ArrayList&lt;Integer&gt; digits: ANY)<SUB>21</SUB>>", "104": "<(IDENTIFIER,digits,ANY digits = new ArrayList&lt;&gt;())<SUB>21</SUB>>", "106": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>21</SUB>>", "107": "<(LOCAL,long tmp: long)<SUB>22</SUB>>", "109": "<(IDENTIFIER,tmp,long tmp = res)<SUB>22</SUB>>", "111": "<(CONTROL_STRUCTURE,while (tmp &gt; 0),while (tmp &gt; 0))<SUB>23</SUB>>", "113": "<(IDENTIFIER,tmp,tmp &gt; 0)<SUB>23</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "117": "<(IDENTIFIER,digits,add((int) (tmp % 10)))<SUB>24</SUB>>", "119": "<(TYPE_REF,int,int)<SUB>24</SUB>>", "121": "<(IDENTIFIER,tmp,tmp % 10)<SUB>24</SUB>>", "123": "<(&lt;operator&gt;.assignmentDivision,tmp /= 10)<SUB>25</SUB>>", "125": "<(LITERAL,10,tmp /= 10)<SUB>25</SUB>>", "127": "<(IDENTIFIER,Collections,reverse(digits))<SUB>30</SUB>>", "129": "<(println,println(digits.get((int) (k - cnt(res) - 1))))<SUB>31</SUB>>", "131": "<(get,get((int) (k - cnt(res) - 1)))<SUB>31</SUB>>", "133": "<(&lt;operator&gt;.cast,(int) (k - cnt(res) - 1))<SUB>31</SUB>>", "135": "<(&lt;operator&gt;.subtraction,k - cnt(res) - 1)<SUB>31</SUB>>", "137": "<(IDENTIFIER,k,k - cnt(res))<SUB>31</SUB>>", "139": "<(IDENTIFIER,this,cnt(res))<SUB>31</SUB>>", "141": "<(LITERAL,1,k - cnt(res) - 1)<SUB>31</SUB>>", "143": "<(IDENTIFIER,out,flush())<SUB>32</SUB>>", "145": "<(MODIFIER,STATIC)>"}}