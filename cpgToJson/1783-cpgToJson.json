{"edges": [["25", "27"], ["25", "139"], ["25", "140"], ["25", "141"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "35"], ["27", "36"], ["27", "40"], ["27", "41"], ["27", "6"], ["27", "45"], ["27", "48"], ["27", "49"], ["27", "77"], ["27", "10"], ["27", "87"], ["27", "8"], ["27", "90"], ["27", "93"], ["27", "95"], ["27", "134"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["49", "50"], ["49", "54"], ["50", "51"], ["50", "53"], ["51", "52"], ["54", "55"], ["54", "56"], ["54", "60"], ["54", "61"], ["54", "67"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "66"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["69", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["77", "80"], ["80", "81"], ["80", "84"], ["80", "86"], ["81", "82"], ["81", "83"], ["84", "85"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "7"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "106"], ["95", "108"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "105"], ["103", "104"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "127"], ["108", "130"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "126"], ["113", "114"], ["113", "121"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["127", "128"], ["127", "129"], ["130", "9"], ["130", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "47"], ["45", "48"], ["48", "51"], ["77", "87"], ["87", "92"], ["90", "93"], ["93", "97"], ["134", "141"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "45"], ["50", "58"], ["50", "83"], ["92", "90"], ["97", "103"], ["100", "117"], ["100", "137"], ["106", "103"], ["135", "134"], ["34", "32"], ["51", "50"], ["56", "64"], ["61", "71"], ["67", "51"], ["81", "84"], ["84", "77"], ["102", "100"], ["110", "129"], ["127", "131"], ["130", "106"], ["137", "135"], ["58", "56"], ["63", "61"], ["69", "67"], ["83", "81"], ["103", "102"], ["112", "110"], ["129", "127"], ["131", "130"], ["64", "63"], ["71", "74"], ["74", "69"], ["113", "112"], ["114", "122"], ["121", "113"], ["115", "114"], ["122", "121"], ["117", "115"], ["25", "30"], ["26", "141"], ["28", "141"], ["31", "141"], ["31", "141"], ["36", "141"], ["41", "141"], ["43", "141"], ["41", "141"], ["41", "141"], ["45", "141"], ["48", "141"], ["51", "141"], ["50", "141"], ["50", "141"], ["81", "141"], ["84", "141"], ["84", "141"], ["77", "141"], ["87", "141"], ["90", "141"], ["93", "141"], ["93", "141"], ["97", "141"], ["100", "141"], ["103", "141"], ["102", "141"], ["100", "141"], ["100", "141"], ["134", "141"], ["134", "141"], ["134", "141"], ["115", "141"], ["114", "141"], ["113", "141"], ["121", "141"], ["113", "141"], ["112", "141"], ["112", "141"], ["110", "141"], ["110", "141"], ["127", "141"], ["131", "141"], ["131", "141"], ["130", "141"], ["130", "141"], ["106", "141"], ["56", "141"], ["64", "141"], ["63", "141"], ["61", "141"], ["61", "141"], ["69", "141"], ["74", "141"], ["74", "141"], ["69", "141"], ["67", "141"], ["67", "141"], ["77", "141"], ["69", "141"], ["25", "26"], ["25", "28"], ["38", "36"], ["43", "41"], ["25", "45"], ["25", "87"], ["25", "90"], ["28", "31"], ["25", "31"], ["45", "48"], ["25", "48"], ["25", "77"], ["48", "77"], ["67", "77"], ["81", "77"], ["84", "77"], ["90", "93"], ["25", "93"], ["25", "97"], ["87", "134"], ["130", "134"], ["25", "134"], ["31", "38"], ["25", "38"], ["38", "43"], ["25", "43"], ["51", "50"], ["25", "50"], ["58", "56"], ["63", "61"], ["63", "61"], ["25", "81"], ["25", "86"], ["97", "100"], ["106", "100"], ["25", "100"], ["102", "100"], ["102", "100"], ["122", "106"], ["25", "106"], ["112", "110"], ["112", "110"], ["25", "127"], ["36", "51"], ["25", "51"], ["48", "67"], ["25", "67"], ["69", "67"], ["69", "67"], ["69", "67"], ["81", "84"], ["25", "84"], ["103", "102"], ["25", "102"], ["87", "127"], ["130", "127"], ["127", "130"], ["25", "130"], ["131", "130"], ["131", "130"], ["43", "58"], ["64", "58"], ["25", "58"], ["64", "63"], ["25", "63"], ["25", "69"], ["71", "69"], ["71", "69"], ["77", "103"], ["122", "103"], ["25", "103"], ["113", "112"], ["113", "112"], ["41", "112"], ["25", "112"], ["93", "131"], ["25", "131"], ["110", "131"], ["58", "64"], ["25", "64"], ["56", "71"], ["25", "71"], ["61", "71"], ["71", "74"], ["25", "74"], ["71", "74"], ["114", "113"], ["114", "113"], ["121", "113"], ["121", "113"], ["115", "114"], ["115", "114"], ["25", "114"], ["122", "121"], ["122", "121"], ["25", "121"], ["103", "115"], ["25", "115"], ["100", "115"], ["115", "122"], ["25", "122"], ["100", "122"], ["100", "117"], ["25", "117"], ["50", "64"], ["50", "51"], ["50", "56"], ["50", "69"], ["50", "67"], ["50", "74"], ["50", "50"], ["50", "58"], ["50", "61"], ["50", "71"], ["50", "63"], ["100", "115"], ["100", "113"], ["100", "122"], ["100", "102"], ["100", "114"], ["100", "131"], ["100", "103"], ["100", "121"], ["100", "106"], ["100", "112"], ["100", "129"], ["100", "130"], ["100", "100"], ["100", "110"], ["100", "117"], ["100", "127"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "35": "<(LOCAL,int n: int)<SUB>3</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "39": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "6": "<(LOCAL,List&lt;List&lt;Double&gt;&gt; coords: ANY)<SUB>5</SUB>>", "46": "<(IDENTIFIER,coords,ANY coords = new ArrayList&lt;List&lt;Double&gt;&gt;())<SUB>5</SUB>>", "48": "<(&lt;init&gt;,new ArrayList&lt;List&lt;Double&gt;&gt;())<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,while (n-- &gt; 0),while (n-- &gt; 0))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postDecrement,n--)<SUB>6</SUB>>", "53": "<(LITERAL,0,n-- &gt; 0)<SUB>6</SUB>>", "55": "<(LOCAL,double x: double)<SUB>7</SUB>>", "57": "<(IDENTIFIER,x,double x = nextDouble())<SUB>7</SUB>>", "59": "<(IDENTIFIER,scan,nextDouble())<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,double a = scan.nextDouble() / 2)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.division,scan.nextDouble() / 2)<SUB>8</SUB>>", "65": "<(IDENTIFIER,scan,nextDouble())<SUB>8</SUB>>", "67": "<(add,add(Arrays.asList(x - a, x + a)))<SUB>9</SUB>>", "69": "<(asList,asList(x - a, x + a))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.subtraction,x - a)<SUB>9</SUB>>", "73": "<(IDENTIFIER,a,x - a)<SUB>9</SUB>>", "75": "<(IDENTIFIER,x,x + a)<SUB>9</SUB>>", "77": "<(sort,sort(coords, new Comparator&lt;List&lt;Double&gt;&gt;() {\\012\\012    @Override\\012    public int compare(List&lt;Double&gt; o1, List&lt;Double&gt; o2) {\\012        return o1.get(0).compareTo(o2.get(0));\\012    }\\012}))<SUB>11</SUB>>", "79": "<(IDENTIFIER,coords,sort(coords, new Comparator&lt;List&lt;Double&gt;&gt;() {\\012\\012    @Override\\012    public int compare(List&lt;Double&gt; o1, List&lt;Double&gt; o2) {\\012        return o1.get(0).compareTo(o2.get(0));\\012    }\\012}))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "83": "<(&lt;operator&gt;.alloc,new Comparator&lt;List&lt;Double&gt;&gt;() {\\012\\012    @Override\\012    public int compare(List&lt;Double&gt; o1, List&lt;Double&gt; o2) {\\012        return o1.get(0).compareTo(o2.get(0));\\012    }\\012})<SUB>11</SUB>>", "85": "<(IDENTIFIER,$obj2,new Comparator&lt;List&lt;Double&gt;&gt;() {\\012\\012    @Override\\012    public int compare(List&lt;Double&gt; o1, List&lt;Double&gt; o2) {\\012        return o1.get(0).compareTo(o2.get(0));\\012    }\\012})>", "10": "<(LOCAL,int count: int)<SUB>17</SUB>>", "88": "<(IDENTIFIER,count,int count = 2)<SUB>17</SUB>>", "8": "<(LOCAL,ChoiceFormat f: ANY)<SUB>18</SUB>>", "91": "<(IDENTIFIER,f,ANY f = new ChoiceFormat(&quot;-1#0|0#1|0&lt;2&quot;))<SUB>18</SUB>>", "93": "<(&lt;init&gt;,new ChoiceFormat(&quot;-1#0|0#1|0&lt;2&quot;))<SUB>18</SUB>>", "94": "<(LITERAL,&quot;-1#0|0#1|0&lt;2&quot;,new ChoiceFormat(&quot;-1#0|0#1|0&lt;2&quot;))<SUB>18</SUB>>", "96": "<(LOCAL,int i: int)<SUB>19</SUB>>", "98": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "100": "<(&lt;operator&gt;.lessThan,i &lt; coords.size() - 1)<SUB>19</SUB>>", "102": "<(&lt;operator&gt;.subtraction,coords.size() - 1)<SUB>19</SUB>>", "104": "<(IDENTIFIER,coords,size())<SUB>19</SUB>>", "106": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "108": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "110": "<(&lt;operator&gt;.assignment,double l = coords.get(i + 1).get(0) - coords.get(i).get(1) - t)<SUB>20</SUB>>", "112": "<(&lt;operator&gt;.subtraction,coords.get(i + 1).get(0) - coords.get(i).get(1) - t)<SUB>20</SUB>>", "114": "<(get,get(0))<SUB>20</SUB>>", "116": "<(IDENTIFIER,coords,get(i + 1))<SUB>20</SUB>>", "118": "<(IDENTIFIER,i,i + 1)<SUB>20</SUB>>", "120": "<(LITERAL,0,get(0))<SUB>20</SUB>>", "122": "<(get,get(i))<SUB>20</SUB>>", "124": "<(IDENTIFIER,i,get(i))<SUB>20</SUB>>", "126": "<(IDENTIFIER,t,coords.get(i + 1).get(0) - coords.get(i).get(1) - t)<SUB>20</SUB>>", "128": "<(IDENTIFIER,count,count += new Integer(f.format(l)))<SUB>21</SUB>>", "130": "<(&lt;init&gt;,new Integer(f.format(l)))<SUB>21</SUB>>", "131": "<(format,format(l))<SUB>21</SUB>>", "133": "<(IDENTIFIER,l,format(l))<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}