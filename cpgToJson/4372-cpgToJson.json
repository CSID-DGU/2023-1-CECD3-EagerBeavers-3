{"edges": [["17", "19"], ["17", "269"], ["17", "270"], ["17", "271"], ["19", "20"], ["19", "23"], ["19", "42"], ["19", "43"], ["19", "47"], ["19", "48"], ["19", "52"], ["19", "57"], ["19", "95"], ["19", "106"], ["19", "210"], ["19", "211"], ["19", "214"], ["19", "262"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "41"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "69"], ["67", "75"], ["67", "76"], ["67", "82"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "74"], ["72", "73"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "116"], ["106", "118"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["129", "153"], ["130", "131"], ["130", "144"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["153", "154"], ["153", "174"], ["154", "155"], ["154", "168"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "173"], ["169", "170"], ["169", "171"], ["169", "172"], ["174", "175"], ["175", "176"], ["175", "177"], ["175", "180"], ["175", "183"], ["175", "185"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["186", "187"], ["186", "194"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["194", "195"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "209"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["214", "219"], ["214", "224"], ["214", "226"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["224", "225"], ["226", "227"], ["227", "228"], ["227", "229"], ["227", "232"], ["227", "235"], ["227", "237"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["238", "255"], ["239", "240"], ["239", "245"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "254"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["250", "253"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["20", "28"], ["23", "45"], ["43", "50"], ["48", "54"], ["52", "59"], ["95", "108"], ["211", "216"], ["262", "271"], ["22", "20"], ["45", "43"], ["50", "48"], ["54", "52"], ["59", "62"], ["62", "72"], ["62", "99"], ["65", "62"], ["97", "95"], ["108", "113"], ["111", "121"], ["111", "211"], ["116", "113"], ["216", "221"], ["219", "229"], ["219", "265"], ["224", "221"], ["263", "266"], ["266", "262"], ["26", "34"], ["29", "23"], ["69", "79"], ["76", "84"], ["82", "65"], ["98", "103"], ["103", "97"], ["113", "111"], ["221", "219"], ["265", "263"], ["28", "26"], ["71", "69"], ["78", "76"], ["83", "90"], ["88", "82"], ["99", "98"], ["121", "124"], ["124", "133"], ["124", "116"], ["127", "124"], ["229", "232"], ["232", "241"], ["232", "224"], ["235", "232"], ["32", "39"], ["35", "29"], ["72", "71"], ["79", "78"], ["84", "83"], ["89", "88"], ["34", "32"], ["37", "35"], ["90", "89"], ["131", "147"], ["131", "157"], ["154", "177"], ["154", "127"], ["239", "258"], ["239", "235"], ["255", "235"], ["39", "37"], ["132", "131"], ["132", "140"], ["137", "131"], ["145", "127"], ["155", "154"], ["155", "169"], ["168", "154"], ["240", "239"], ["240", "247"], ["245", "239"], ["257", "255"], ["133", "132"], ["138", "137"], ["146", "145"], ["156", "155"], ["156", "164"], ["161", "155"], ["169", "168"], ["177", "180"], ["180", "189"], ["180", "127"], ["183", "180"], ["241", "240"], ["246", "245"], ["258", "257"], ["140", "138"], ["147", "146"], ["157", "156"], ["162", "161"], ["247", "250"], ["250", "246"], ["164", "162"], ["187", "197"], ["187", "183"], ["188", "187"], ["195", "183"], ["189", "188"], ["196", "206"], ["201", "195"], ["197", "196"], ["202", "201"], ["204", "202"], ["206", "204"], ["17", "22"], ["18", "271"], ["20", "271"], ["23", "271"], ["29", "271"], ["32", "271"], ["35", "271"], ["35", "271"], ["35", "271"], ["29", "271"], ["23", "271"], ["43", "271"], ["50", "271"], ["48", "271"], ["48", "271"], ["52", "271"], ["52", "271"], ["52", "271"], ["59", "271"], ["62", "271"], ["62", "271"], ["62", "271"], ["95", "271"], ["97", "271"], ["97", "271"], ["95", "271"], ["95", "271"], ["211", "271"], ["216", "271"], ["219", "271"], ["221", "271"], ["219", "271"], ["219", "271"], ["262", "271"], ["266", "271"], ["262", "271"], ["262", "271"], ["229", "271"], ["232", "271"], ["232", "271"], ["224", "271"], ["241", "271"], ["240", "271"], ["239", "271"], ["250", "271"], ["245", "271"], ["239", "271"], ["239", "271"], ["255", "271"], ["255", "271"], ["235", "271"], ["121", "271"], ["124", "271"], ["124", "271"], ["116", "271"], ["133", "271"], ["132", "271"], ["131", "271"], ["138", "271"], ["137", "271"], ["131", "271"], ["131", "271"], ["157", "271"], ["156", "271"], ["155", "271"], ["162", "271"], ["161", "271"], ["155", "271"], ["154", "271"], ["169", "271"], ["168", "271"], ["154", "271"], ["154", "271"], ["177", "271"], ["180", "271"], ["180", "271"], ["187", "271"], ["187", "271"], ["195", "271"], ["204", "271"], ["195", "271"], ["195", "271"], ["183", "271"], ["145", "271"], ["145", "271"], ["127", "271"], ["69", "271"], ["69", "271"], ["76", "271"], ["79", "271"], ["78", "271"], ["76", "271"], ["76", "271"], ["82", "271"], ["88", "271"], ["82", "271"], ["82", "271"], ["65", "271"], ["17", "18"], ["17", "20"], ["45", "43"], ["50", "48"], ["54", "52"], ["97", "95"], ["97", "95"], ["17", "211"], ["20", "23"], ["17", "23"], ["32", "23"], ["29", "23"], ["17", "59"], ["17", "108"], ["17", "216"], ["266", "262"], ["266", "262"], ["17", "26"], ["17", "41"], ["17", "45"], ["45", "50"], ["17", "50"], ["43", "54"], ["17", "54"], ["59", "62"], ["65", "62"], ["17", "62"], ["48", "62"], ["62", "65"], ["17", "65"], ["71", "69"], ["71", "69"], ["78", "76"], ["78", "76"], ["88", "82"], ["17", "82"], ["99", "97"], ["99", "97"], ["17", "97"], ["108", "111"], ["116", "111"], ["17", "111"], ["113", "111"], ["113", "111"], ["111", "116"], ["133", "116"], ["138", "116"], ["157", "116"], ["162", "116"], ["169", "116"], ["204", "116"], ["17", "116"], ["216", "219"], ["224", "219"], ["17", "219"], ["221", "219"], ["221", "219"], ["219", "224"], ["241", "224"], ["250", "224"], ["17", "224"], ["211", "266"], ["255", "266"], ["17", "266"], ["26", "29"], ["17", "29"], ["32", "29"], ["35", "29"], ["99", "98"], ["99", "98"], ["17", "98"], ["99", "103"], ["17", "103"], ["17", "113"], ["124", "113"], ["99", "113"], ["17", "121"], ["17", "221"], ["113", "221"], ["232", "221"], ["17", "229"], ["17", "32"], ["17", "40"], ["72", "71"], ["17", "71"], ["79", "78"], ["17", "78"], ["17", "88"], ["17", "99"], ["54", "99"], ["121", "124"], ["127", "124"], ["17", "124"], ["113", "124"], ["169", "124"], ["180", "124"], ["124", "127"], ["140", "127"], ["164", "127"], ["168", "127"], ["206", "127"], ["17", "127"], ["229", "232"], ["235", "232"], ["17", "232"], ["221", "232"], ["250", "232"], ["232", "235"], ["17", "235"], ["32", "35"], ["17", "35"], ["50", "72"], ["79", "72"], ["17", "72"], ["72", "79"], ["17", "79"], ["195", "255"], ["145", "255"], ["132", "131"], ["132", "131"], ["137", "131"], ["137", "131"], ["155", "131"], ["17", "145"], ["155", "154"], ["155", "154"], ["168", "154"], ["168", "154"], ["240", "239"], ["240", "239"], ["245", "239"], ["245", "239"], ["211", "255"], ["17", "255"], ["133", "132"], ["133", "132"], ["17", "132"], ["138", "137"], ["138", "137"], ["17", "137"], ["156", "155"], ["156", "155"], ["131", "155"], ["161", "155"], ["161", "155"], ["169", "168"], ["169", "168"], ["169", "168"], ["124", "168"], ["140", "168"], ["164", "168"], ["17", "168"], ["17", "177"], ["241", "240"], ["241", "240"], ["17", "240"], ["17", "245"], ["157", "133"], ["17", "133"], ["111", "133"], ["138", "133"], ["157", "133"], ["162", "133"], ["169", "133"], ["204", "133"], ["133", "138"], ["17", "138"], ["140", "138"], ["140", "138"], ["157", "156"], ["157", "156"], ["17", "156"], ["162", "161"], ["162", "161"], ["17", "161"], ["50", "169"], ["79", "169"], ["17", "169"], ["157", "169"], ["162", "169"], ["124", "169"], ["177", "180"], ["183", "180"], ["17", "180"], ["124", "180"], ["169", "180"], ["180", "183"], ["17", "183"], ["133", "241"], ["157", "241"], ["17", "241"], ["219", "241"], ["250", "241"], ["17", "140"], ["124", "140"], ["133", "157"], ["17", "157"], ["133", "157"], ["138", "157"], ["157", "162"], ["17", "162"], ["164", "162"], ["164", "162"], ["50", "250"], ["169", "250"], ["79", "250"], ["17", "250"], ["241", "250"], ["232", "250"], ["17", "164"], ["124", "164"], ["140", "164"], ["17", "187"], ["145", "195"], ["157", "204"], ["162", "204"], ["169", "204"], ["17", "204"], ["206", "204"], ["206", "204"], ["17", "206"], ["124", "206"], ["140", "206"], ["164", "206"], ["168", "206"], ["62", "84"], ["62", "69"], ["62", "76"], ["62", "90"], ["62", "79"], ["62", "88"], ["62", "89"], ["62", "72"], ["62", "65"], ["62", "82"], ["62", "83"], ["62", "71"], ["62", "78"], ["62", "62"], ["111", "113"], ["111", "121"], ["111", "111"], ["111", "116"], ["111", "124"], ["219", "232"], ["219", "221"], ["219", "224"], ["219", "229"], ["219", "219"], ["124", "131"], ["124", "132"], ["124", "127"], ["124", "124"], ["124", "133"], ["232", "240"], ["232", "232"], ["232", "239"], ["232", "235"], ["232", "241"], ["131", "154"], ["131", "145"], ["131", "146"], ["131", "155"], ["131", "157"], ["131", "147"], ["131", "156"], ["154", "180"], ["154", "177"], ["239", "257"], ["239", "255"], ["239", "258"], ["132", "138"], ["132", "137"], ["132", "140"], ["155", "169"], ["155", "168"], ["240", "245"], ["240", "247"], ["240", "246"], ["240", "250"], ["156", "161"], ["156", "162"], ["156", "164"], ["180", "188"], ["180", "189"], ["180", "187"], ["180", "180"], ["180", "183"], ["187", "196"], ["187", "197"], ["187", "204"], ["187", "206"], ["187", "195"], ["187", "202"], ["187", "201"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,st,st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in))))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "45": "<(nextInt,nextInt())<SUB>5</SUB>>", "47": "<(LOCAL,int m: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,this,nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,edges,edges = new int[n][n])<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,new int[n][n])<SUB>8</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "63": "<(IDENTIFIER,i,i &lt; m)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int from = nextInt() - 1)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.subtraction,nextInt() - 1)<SUB>11</SUB>>", "73": "<(IDENTIFIER,this,nextInt())<SUB>11</SUB>>", "75": "<(LOCAL,int to: int)<SUB>12</SUB>>", "77": "<(IDENTIFIER,to,int to = nextInt() - 1)<SUB>12</SUB>>", "79": "<(nextInt,nextInt())<SUB>12</SUB>>", "81": "<(LITERAL,1,nextInt() - 1)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,edges[from][to])<SUB>13</SUB>>", "85": "<(IDENTIFIER,edges,edges[from][to] = edges[to][from] = 1)<SUB>13</SUB>>", "87": "<(IDENTIFIER,to,edges[from][to] = edges[to][from] = 1)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,edges[to][from])<SUB>13</SUB>>", "91": "<(IDENTIFIER,edges,edges[to][from] = 1)<SUB>13</SUB>>", "93": "<(IDENTIFIER,from,edges[to][from] = 1)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,dp = new long[(1 &lt;&lt; n) + 1][n + 1])<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.alloc,new long[(1 &lt;&lt; n) + 1][n + 1])>", "99": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>16</SUB>>", "101": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.addition,n + 1)<SUB>16</SUB>>", "105": "<(LITERAL,1,n + 1)<SUB>16</SUB>>", "107": "<(LOCAL,int mask: int)<SUB>18</SUB>>", "109": "<(IDENTIFIER,mask,int mask = 1)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>18</SUB>>", "115": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>18</SUB>>", "117": "<(IDENTIFIER,mask,mask++)<SUB>18</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "123": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "125": "<(IDENTIFIER,i,i &lt; n)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) == 1 &amp;&amp; (mask &amp; (1 &lt;&lt; i)) != 0)<SUB>20</SUB>>", "133": "<(bitCount,Integer.bitCount(mask))<SUB>20</SUB>>", "135": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>20</SUB>>", "139": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>20</SUB>>", "141": "<(LITERAL,1,1 &lt;&lt; i)<SUB>20</SUB>>", "143": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.assignment,dp[mask][i] = 1)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>21</SUB>>", "149": "<(IDENTIFIER,mask,dp[mask][i] = 1)<SUB>21</SUB>>", "151": "<(LITERAL,1,dp[mask][i] = 1)<SUB>21</SUB>>", "153": "<(CONTROL_STRUCTURE,if (Integer.bitCount(mask) &gt; 1 &amp;&amp; (mask &amp; (1 &lt;&lt; i)) != 0 &amp;&amp; first(mask, n) != i),if (Integer.bitCount(mask) &gt; 1 &amp;&amp; (mask &amp; (1 &lt;&lt; i)) != 0 &amp;&amp; first(mask, n) != i))<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt; 1 &amp;&amp; (mask &amp; (1 &lt;&lt; i)) != 0)<SUB>25</SUB>>", "157": "<(bitCount,Integer.bitCount(mask))<SUB>25</SUB>>", "159": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.notEquals,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>25</SUB>>", "163": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>25</SUB>>", "165": "<(LITERAL,1,1 &lt;&lt; i)<SUB>25</SUB>>", "167": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) != 0)<SUB>25</SUB>>", "169": "<(first,first(mask, n))<SUB>26</SUB>>", "171": "<(IDENTIFIER,mask,first(mask, n))<SUB>26</SUB>>", "173": "<(IDENTIFIER,i,first(mask, n) != i)<SUB>26</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>27</SUB>>", "179": "<(LITERAL,0,int j = 0)<SUB>27</SUB>>", "181": "<(IDENTIFIER,j,j &lt; n)<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,j++)<SUB>27</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.equals,edges[i][j] == 1)<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,edges[i])<SUB>28</SUB>>", "191": "<(IDENTIFIER,i,edges[i][j] == 1)<SUB>28</SUB>>", "193": "<(LITERAL,1,edges[i][j] == 1)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.assignmentPlus,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>29</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>29</SUB>>", "199": "<(IDENTIFIER,mask,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>29</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)][j])<SUB>29</SUB>>", "203": "<(IDENTIFIER,dp,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>29</SUB>>", "205": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; i))<SUB>29</SUB>>", "207": "<(LITERAL,1,1 &lt;&lt; i)<SUB>29</SUB>>", "209": "<(IDENTIFIER,j,dp[mask][i] += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.assignment,long count = 0)<SUB>36</SUB>>", "213": "<(LITERAL,0,long count = 0)<SUB>36</SUB>>", "215": "<(LOCAL,int mask: int)<SUB>37</SUB>>", "217": "<(IDENTIFIER,mask,int mask = 1)<SUB>37</SUB>>", "219": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>37</SUB>>", "221": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>37</SUB>>", "223": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>37</SUB>>", "225": "<(IDENTIFIER,mask,mask++)<SUB>37</SUB>>", "227": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>38</SUB>>", "229": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>38</SUB>>", "231": "<(LITERAL,0,int i = 0)<SUB>38</SUB>>", "233": "<(IDENTIFIER,i,i &lt; n)<SUB>38</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,i++)<SUB>38</SUB>>", "237": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "239": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt;= 3 &amp;&amp; edges[i][first(mask, n)] != 0)<SUB>39</SUB>>", "241": "<(bitCount,Integer.bitCount(mask))<SUB>39</SUB>>", "243": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>39</SUB>>", "245": "<(&lt;operator&gt;.notEquals,edges[i][first(mask, n)] != 0)<SUB>40</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,edges[i])<SUB>40</SUB>>", "249": "<(IDENTIFIER,i,edges[i][first(mask, n)] != 0)<SUB>40</SUB>>", "251": "<(IDENTIFIER,this,first(mask, n))<SUB>40</SUB>>", "253": "<(IDENTIFIER,n,first(mask, n))<SUB>40</SUB>>", "255": "<(&lt;operator&gt;.assignmentPlus,count += dp[mask][i])<SUB>41</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>41</SUB>>", "259": "<(IDENTIFIER,dp,count += dp[mask][i])<SUB>41</SUB>>", "261": "<(IDENTIFIER,i,count += dp[mask][i])<SUB>41</SUB>>", "263": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "265": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "267": "<(IDENTIFIER,count,count / 2)<SUB>45</SUB>>", "269": "<(MODIFIER,PUBLIC)>", "271": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}