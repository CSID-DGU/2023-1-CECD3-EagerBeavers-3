{"edges": [["24", "25"], ["24", "26"], ["24", "278"], ["24", "279"], ["24", "280"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "8"], ["26", "48"], ["26", "51"], ["26", "54"], ["26", "55"], ["26", "61"], ["26", "62"], ["26", "68"], ["26", "69"], ["26", "73"], ["26", "74"], ["26", "78"], ["26", "113"], ["26", "114"], ["26", "121"], ["26", "143"], ["26", "144"], ["26", "147"], ["26", "273"], ["26", "276"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "7"], ["51", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "92"], ["88", "95"], ["88", "103"], ["89", "90"], ["89", "91"], ["92", "9"], ["92", "93"], ["93", "94"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "112"], ["108", "109"], ["108", "110"], ["110", "111"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "142"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "157"], ["147", "159"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "165"], ["159", "168"], ["159", "246"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "175"], ["168", "178"], ["168", "180"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["181", "182"], ["181", "187"], ["181", "198"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["199", "200"], ["199", "233"], ["200", "201"], ["200", "202"], ["200", "205"], ["200", "208"], ["200", "210"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "228"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "245"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "244"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "270"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "265"], ["254", "255"], ["254", "260"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["276", "277"], ["27", "34"], ["30", "43"], ["41", "47"], ["44", "50"], ["48", "52"], ["51", "59"], ["55", "66"], ["62", "71"], ["69", "76"], ["74", "80"], ["114", "123"], ["144", "149"], ["273", "276"], ["276", "280"], ["29", "27"], ["43", "41"], ["45", "44"], ["50", "48"], ["52", "51"], ["57", "55"], ["64", "62"], ["71", "69"], ["76", "74"], ["80", "83"], ["83", "91"], ["83", "117"], ["86", "83"], ["116", "114"], ["123", "126"], ["126", "136"], ["126", "144"], ["129", "126"], ["149", "154"], ["152", "161"], ["152", "273"], ["157", "154"], ["32", "39"], ["35", "30"], ["47", "45"], ["59", "57"], ["66", "64"], ["89", "93"], ["92", "96"], ["95", "104"], ["103", "86"], ["117", "116"], ["132", "129"], ["154", "152"], ["161", "165"], ["165", "172"], ["34", "32"], ["37", "35"], ["91", "89"], ["93", "92"], ["96", "101"], ["99", "95"], ["104", "110"], ["107", "103"], ["133", "132"], ["170", "175"], ["175", "184"], ["175", "247"], ["178", "175"], ["247", "256"], ["247", "157"], ["39", "37"], ["101", "99"], ["108", "107"], ["134", "139"], ["139", "133"], ["172", "170"], ["251", "270"], ["270", "157"], ["110", "108"], ["136", "134"], ["182", "190"], ["182", "202"], ["253", "251"], ["184", "182"], ["188", "195"], ["193", "178"], ["254", "266"], ["265", "253"], ["190", "188"], ["195", "193"], ["233", "178"], ["255", "261"], ["260", "254"], ["266", "265"], ["202", "205"], ["205", "213"], ["205", "239"], ["208", "205"], ["234", "233"], ["256", "255"], ["261", "260"], ["211", "222"], ["211", "208"], ["216", "208"], ["235", "242"], ["242", "234"], ["213", "211"], ["217", "229"], ["228", "216"], ["237", "235"], ["218", "225"], ["225", "217"], ["229", "228"], ["239", "237"], ["220", "218"], ["222", "220"], ["24", "29"], ["25", "280"], ["27", "280"], ["32", "280"], ["35", "280"], ["35", "280"], ["35", "280"], ["30", "280"], ["41", "280"], ["44", "280"], ["44", "280"], ["48", "280"], ["52", "280"], ["51", "280"], ["51", "280"], ["55", "280"], ["62", "280"], ["64", "280"], ["66", "280"], ["64", "280"], ["62", "280"], ["62", "280"], ["69", "280"], ["69", "280"], ["74", "280"], ["74", "280"], ["74", "280"], ["114", "280"], ["114", "280"], ["114", "280"], ["123", "280"], ["126", "280"], ["144", "280"], ["149", "280"], ["152", "280"], ["154", "280"], ["152", "280"], ["152", "280"], ["273", "280"], ["273", "280"], ["276", "280"], ["276", "280"], ["161", "280"], ["161", "280"], ["165", "280"], ["170", "280"], ["170", "280"], ["175", "280"], ["175", "280"], ["247", "280"], ["247", "280"], ["247", "280"], ["254", "280"], ["254", "280"], ["253", "280"], ["253", "280"], ["251", "280"], ["251", "280"], ["270", "280"], ["157", "280"], ["182", "280"], ["182", "280"], ["202", "280"], ["205", "280"], ["205", "280"], ["237", "280"], ["233", "280"], ["233", "280"], ["211", "280"], ["211", "280"], ["216", "280"], ["216", "280"], ["208", "280"], ["188", "280"], ["188", "280"], ["188", "280"], ["193", "280"], ["193", "280"], ["178", "280"], ["132", "280"], ["132", "280"], ["129", "280"], ["89", "280"], ["93", "280"], ["92", "280"], ["92", "280"], ["95", "280"], ["95", "280"], ["103", "280"], ["108", "280"], ["110", "280"], ["108", "280"], ["107", "280"], ["103", "280"], ["103", "280"], ["86", "280"], ["24", "25"], ["24", "27"], ["24", "41"], ["24", "48"], ["57", "55"], ["57", "55"], ["64", "62"], ["64", "62"], ["71", "69"], ["76", "74"], ["116", "114"], ["116", "114"], ["24", "144"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["48", "51"], ["24", "51"], ["52", "51"], ["24", "80"], ["24", "123"], ["24", "149"], ["44", "273"], ["24", "273"], ["144", "273"], ["270", "273"], ["273", "276"], ["24", "276"], ["24", "32"], ["24", "40"], ["30", "52"], ["24", "52"], ["24", "57"], ["59", "57"], ["57", "64"], ["24", "64"], ["66", "64"], ["55", "71"], ["24", "71"], ["71", "76"], ["24", "76"], ["80", "83"], ["86", "83"], ["24", "83"], ["76", "83"], ["83", "86"], ["24", "86"], ["24", "89"], ["99", "95"], ["99", "95"], ["107", "103"], ["107", "103"], ["117", "116"], ["117", "116"], ["24", "116"], ["123", "126"], ["129", "126"], ["24", "126"], ["117", "126"], ["136", "129"], ["24", "129"], ["24", "132"], ["149", "152"], ["157", "152"], ["24", "152"], ["154", "152"], ["154", "152"], ["24", "157"], ["152", "157"], ["152", "161"], ["24", "161"], ["24", "165"], ["32", "35"], ["24", "35"], ["51", "59"], ["24", "59"], ["59", "66"], ["24", "66"], ["89", "92"], ["24", "92"], ["93", "92"], ["24", "117"], ["83", "117"], ["24", "154"], ["126", "154"], ["172", "154"], ["172", "170"], ["172", "170"], ["52", "93"], ["24", "93"], ["64", "99"], ["108", "99"], ["24", "99"], ["101", "99"], ["108", "107"], ["108", "107"], ["24", "107"], ["170", "175"], ["178", "175"], ["24", "175"], ["239", "178"], ["190", "178"], ["24", "178"], ["165", "247"], ["193", "247"], ["24", "247"], ["62", "247"], ["24", "270"], ["92", "101"], ["24", "101"], ["99", "108"], ["24", "108"], ["110", "108"], ["154", "172"], ["24", "172"], ["144", "251"], ["270", "251"], ["24", "251"], ["251", "270"], ["101", "110"], ["24", "110"], ["24", "136"], ["126", "136"], ["161", "182"], ["188", "182"], ["24", "182"], ["184", "182"], ["184", "182"], ["190", "188"], ["190", "188"], ["69", "193"], ["24", "184"], ["175", "184"], ["182", "188"], ["24", "188"], ["165", "193"], ["24", "193"], ["24", "233"], ["24", "190"], ["184", "190"], ["24", "202"], ["216", "233"], ["202", "205"], ["208", "205"], ["24", "205"], ["211", "208"], ["24", "208"], ["205", "211"], ["24", "211"], ["74", "211"], ["233", "216"], ["24", "237"], ["152", "237"], ["239", "237"], ["239", "237"], ["24", "239"], ["184", "239"], ["222", "239"], ["24", "220"], ["152", "220"], ["222", "220"], ["222", "220"], ["24", "222"], ["184", "222"], ["83", "107"], ["83", "96"], ["83", "103"], ["83", "104"], ["83", "95"], ["83", "92"], ["83", "91"], ["83", "93"], ["83", "101"], ["83", "108"], ["83", "86"], ["83", "89"], ["83", "99"], ["83", "83"], ["83", "110"], ["126", "136"], ["126", "132"], ["126", "129"], ["126", "134"], ["126", "139"], ["126", "126"], ["126", "133"], ["152", "154"], ["152", "161"], ["152", "170"], ["152", "247"], ["152", "152"], ["152", "157"], ["152", "165"], ["152", "175"], ["152", "172"], ["175", "178"], ["175", "184"], ["175", "182"], ["175", "175"], ["247", "261"], ["247", "256"], ["247", "255"], ["247", "265"], ["247", "260"], ["247", "270"], ["247", "251"], ["247", "253"], ["247", "254"], ["247", "266"], ["182", "188"], ["182", "195"], ["182", "242"], ["182", "190"], ["182", "202"], ["182", "233"], ["182", "239"], ["182", "205"], ["182", "235"], ["182", "193"], ["182", "237"], ["182", "234"], ["205", "213"], ["205", "208"], ["205", "205"], ["205", "211"], ["211", "225"], ["211", "228"], ["211", "217"], ["211", "220"], ["211", "229"], ["211", "216"], ["211", "222"], ["211", "218"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "46": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "49": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "51": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "52": "<(readLine,readLine())<SUB>4</SUB>>", "54": "<(LOCAL,int n: int)<SUB>5</SUB>>", "56": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "60": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "62": "<(&lt;operator&gt;.assignment,int t = parseInt(st.nextToken()))<SUB>6</SUB>>", "64": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "66": "<(nextToken,nextToken())<SUB>6</SUB>>", "68": "<(LOCAL,int[] d: int[])<SUB>7</SUB>>", "70": "<(IDENTIFIER,d,int[] d = new int[n])<SUB>7</SUB>>", "72": "<(IDENTIFIER,n,new int[n])<SUB>7</SUB>>", "74": "<(&lt;operator&gt;.assignment,int[] g = new int[n])<SUB>8</SUB>>", "76": "<(&lt;operator&gt;.alloc,new int[n])>", "78": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "80": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "82": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "84": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "86": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "88": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "90": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "92": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>10</SUB>>", "93": "<(readLine,readLine())<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,d[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "97": "<(IDENTIFIER,d,d[i] = parseInt(st.nextToken()))<SUB>11</SUB>>", "99": "<(parseInt,parseInt(st.nextToken()))<SUB>11</SUB>>", "101": "<(nextToken,nextToken())<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.assignment,g[i] = Integer.parseInt(st.nextToken()) - 1)<SUB>12</SUB>>", "105": "<(IDENTIFIER,g,g[i] = Integer.parseInt(st.nextToken()) - 1)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.subtraction,Integer.parseInt(st.nextToken()) - 1)<SUB>12</SUB>>", "109": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>12</SUB>>", "111": "<(IDENTIFIER,st,nextToken())<SUB>12</SUB>>", "113": "<(LOCAL,long[][] dp: long[][])<SUB>14</SUB>>", "115": "<(IDENTIFIER,dp,long[][] dp = new long[(1 &lt;&lt; n)][3])<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>14</SUB>>", "119": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>14</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "127": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; i)][g[i]])<SUB>16</SUB>>", "135": "<(IDENTIFIER,dp,dp[(1 &lt;&lt; i)][g[i]] = 1)<SUB>16</SUB>>", "137": "<(LITERAL,1,1 &lt;&lt; i)<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>16</SUB>>", "141": "<(IDENTIFIER,i,dp[(1 &lt;&lt; i)][g[i]] = 1)<SUB>16</SUB>>", "143": "<(LOCAL,long res: long)<SUB>18</SUB>>", "145": "<(IDENTIFIER,res,long res = 0)<SUB>18</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>19</SUB>>", "151": "<(LITERAL,1,int i = 1)<SUB>19</SUB>>", "153": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>19</SUB>>", "155": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.assignment,int k = i)<SUB>20</SUB>>", "163": "<(IDENTIFIER,i,int k = i)<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>21</SUB>>", "167": "<(LITERAL,0,int sum = 0)<SUB>21</SUB>>", "169": "<(LOCAL,int j: int)<SUB>22</SUB>>", "171": "<(IDENTIFIER,j,int j = n - 1)<SUB>22</SUB>>", "173": "<(IDENTIFIER,n,n - 1)<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>22</SUB>>", "177": "<(LITERAL,0,j &gt;= 0)<SUB>22</SUB>>", "179": "<(IDENTIFIER,j,j--)<SUB>22</SUB>>", "181": "<(CONTROL_STRUCTURE,if (k &gt;= (1 &lt;&lt; j)),if (k &gt;= (1 &lt;&lt; j)))<SUB>23</SUB>>", "183": "<(IDENTIFIER,k,k &gt;= (1 &lt;&lt; j))<SUB>23</SUB>>", "185": "<(LITERAL,1,1 &lt;&lt; j)<SUB>23</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "189": "<(IDENTIFIER,k,k -= 1 &lt;&lt; j)<SUB>24</SUB>>", "191": "<(LITERAL,1,1 &lt;&lt; j)<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.assignmentPlus,sum += d[j])<SUB>25</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,d[j])<SUB>25</SUB>>", "197": "<(IDENTIFIER,j,sum += d[j])<SUB>25</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "201": "<(LOCAL,int r: int)<SUB>28</SUB>>", "203": "<(IDENTIFIER,r,int r = 0)<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.lessThan,r &lt; 3)<SUB>28</SUB>>", "207": "<(LITERAL,3,r &lt; 3)<SUB>28</SUB>>", "209": "<(IDENTIFIER,r,r++)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.notEquals,r != g[j])<SUB>28</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>28</SUB>>", "215": "<(IDENTIFIER,j,r != g[j])<SUB>28</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dp[i + (1 &lt;&lt; j)][g[j]])<SUB>28</SUB>>", "219": "<(IDENTIFIER,dp,dp[i + (1 &lt;&lt; j)][g[j]] += dp[i][r])<SUB>28</SUB>>", "221": "<(IDENTIFIER,i,i + (1 &lt;&lt; j))<SUB>28</SUB>>", "223": "<(LITERAL,1,1 &lt;&lt; j)<SUB>28</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>28</SUB>>", "227": "<(IDENTIFIER,j,dp[i + (1 &lt;&lt; j)][g[j]] += dp[i][r])<SUB>28</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>28</SUB>>", "231": "<(IDENTIFIER,i,dp[i + (1 &lt;&lt; j)][g[j]] += dp[i][r])<SUB>28</SUB>>", "233": "<(&lt;operators&gt;.assignmentModulo,dp[i + (1 &lt;&lt; j)][g[j]] %= mod)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[i + (1 &lt;&lt; j)])<SUB>29</SUB>>", "237": "<(&lt;operator&gt;.addition,i + (1 &lt;&lt; j))<SUB>29</SUB>>", "239": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>29</SUB>>", "241": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>29</SUB>>", "243": "<(IDENTIFIER,g,dp[i + (1 &lt;&lt; j)][g[j]] %= mod)<SUB>29</SUB>>", "245": "<(IDENTIFIER,mod,dp[i + (1 &lt;&lt; j)][g[j]] %= mod)<SUB>29</SUB>>", "247": "<(&lt;operator&gt;.equals,sum == t)<SUB>32</SUB>>", "249": "<(IDENTIFIER,t,sum == t)<SUB>32</SUB>>", "251": "<(&lt;operator&gt;.assignmentPlus,res += dp[i][0] + dp[i][1] + dp[i][2])<SUB>33</SUB>>", "253": "<(&lt;operator&gt;.addition,dp[i][0] + dp[i][1] + dp[i][2])<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,dp[i][0])<SUB>33</SUB>>", "257": "<(IDENTIFIER,dp,dp[i][0] + dp[i][1])<SUB>33</SUB>>", "259": "<(LITERAL,0,dp[i][0] + dp[i][1])<SUB>33</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>33</SUB>>", "263": "<(IDENTIFIER,i,dp[i][0] + dp[i][1])<SUB>33</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,dp[i][2])<SUB>33</SUB>>", "267": "<(IDENTIFIER,dp,dp[i][0] + dp[i][1] + dp[i][2])<SUB>33</SUB>>", "269": "<(LITERAL,2,dp[i][0] + dp[i][1] + dp[i][2])<SUB>33</SUB>>", "271": "<(IDENTIFIER,res,res %= mod)<SUB>34</SUB>>", "273": "<(println,println(res))<SUB>37</SUB>>", "275": "<(IDENTIFIER,res,println(res))<SUB>37</SUB>>", "277": "<(IDENTIFIER,out,flush())<SUB>38</SUB>>", "279": "<(MODIFIER,STATIC)>"}}