{"edges": [["23", "25"], ["23", "209"], ["23", "210"], ["23", "211"], ["25", "26"], ["25", "29"], ["25", "41"], ["25", "44"], ["25", "49"], ["25", "50"], ["25", "51"], ["25", "55"], ["25", "59"], ["25", "60"], ["25", "66"], ["25", "4"], ["25", "107"], ["25", "110"], ["25", "6"], ["25", "8"], ["25", "111"], ["25", "114"], ["25", "115"], ["25", "118"], ["25", "119"], ["25", "143"], ["25", "144"], ["25", "147"], ["25", "192"], ["25", "205"], ["25", "207"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["89", "96"], ["89", "99"], ["89", "102"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["110", "3"], ["111", "112"], ["111", "113"], ["114", "5"], ["115", "116"], ["115", "117"], ["118", "7"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "152"], ["148", "149"], ["148", "151"], ["149", "150"], ["152", "153"], ["152", "188"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "162"], ["153", "164"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["160", "161"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "181"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "180"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["192", "193"], ["192", "196"], ["192", "200"], ["193", "194"], ["193", "195"], ["196", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["201", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["26", "34"], ["29", "43"], ["41", "48"], ["44", "53"], ["51", "57"], ["55", "63"], ["60", "68"], ["107", "110"], ["110", "113"], ["111", "114"], ["114", "117"], ["115", "118"], ["118", "121"], ["144", "149"], ["205", "207"], ["207", "211"], ["28", "26"], ["43", "41"], ["46", "44"], ["53", "51"], ["57", "55"], ["62", "60"], ["68", "71"], ["71", "79"], ["71", "109"], ["74", "71"], ["109", "107"], ["113", "111"], ["117", "115"], ["121", "124"], ["124", "132"], ["124", "144"], ["127", "124"], ["148", "155"], ["148", "193"], ["193", "197"], ["193", "202"], ["32", "39"], ["35", "29"], ["48", "46"], ["63", "62"], ["149", "148"], ["188", "193"], ["197", "205"], ["34", "32"], ["37", "35"], ["78", "85"], ["78", "74"], ["131", "137"], ["131", "127"], ["155", "160"], ["158", "172"], ["158", "190"], ["162", "160"], ["190", "188"], ["202", "205"], ["39", "37"], ["79", "78"], ["84", "93"], ["132", "131"], ["137", "140"], ["140", "127"], ["160", "158"], ["166", "182"], ["85", "84"], ["91", "96"], ["96", "103"], ["96", "74"], ["99", "96"], ["102", "99"], ["168", "166"], ["182", "185"], ["182", "162"], ["185", "162"], ["93", "91"], ["103", "102"], ["169", "168"], ["170", "177"], ["175", "169"], ["172", "170"], ["177", "175"], ["23", "28"], ["24", "211"], ["26", "211"], ["32", "211"], ["35", "211"], ["35", "211"], ["35", "211"], ["29", "211"], ["41", "211"], ["44", "211"], ["44", "211"], ["51", "211"], ["57", "211"], ["55", "211"], ["55", "211"], ["60", "211"], ["62", "211"], ["60", "211"], ["60", "211"], ["107", "211"], ["110", "211"], ["111", "211"], ["114", "211"], ["115", "211"], ["118", "211"], ["118", "211"], ["121", "211"], ["124", "211"], ["124", "211"], ["124", "211"], ["144", "211"], ["149", "211"], ["148", "211"], ["148", "211"], ["155", "211"], ["158", "211"], ["160", "211"], ["158", "211"], ["190", "211"], ["188", "211"], ["188", "211"], ["193", "211"], ["193", "211"], ["193", "211"], ["202", "211"], ["197", "211"], ["205", "211"], ["207", "211"], ["207", "211"], ["170", "211"], ["169", "211"], ["175", "211"], ["169", "211"], ["168", "211"], ["166", "211"], ["166", "211"], ["182", "211"], ["182", "211"], ["182", "211"], ["185", "211"], ["185", "211"], ["162", "211"], ["131", "211"], ["131", "211"], ["140", "211"], ["140", "211"], ["127", "211"], ["78", "211"], ["78", "211"], ["84", "211"], ["84", "211"], ["91", "211"], ["91", "211"], ["96", "211"], ["96", "211"], ["74", "211"], ["102", "211"], ["102", "211"], ["99", "211"], ["23", "24"], ["23", "26"], ["23", "41"], ["53", "51"], ["57", "55"], ["62", "60"], ["23", "107"], ["23", "111"], ["23", "115"], ["23", "144"], ["26", "29"], ["23", "29"], ["32", "29"], ["35", "29"], ["41", "44"], ["23", "44"], ["23", "68"], ["107", "110"], ["23", "110"], ["111", "114"], ["23", "114"], ["115", "118"], ["23", "118"], ["23", "121"], ["29", "205"], ["23", "205"], ["202", "207"], ["197", "207"], ["23", "207"], ["23", "32"], ["23", "40"], ["23", "53"], ["53", "57"], ["23", "57"], ["51", "62"], ["23", "62"], ["68", "71"], ["74", "71"], ["23", "71"], ["96", "71"], ["51", "71"], ["71", "74"], ["93", "74"], ["23", "74"], ["121", "124"], ["127", "124"], ["23", "124"], ["71", "124"], ["124", "127"], ["140", "127"], ["23", "127"], ["149", "148"], ["23", "148"], ["190", "188"], ["144", "193"], ["188", "193"], ["23", "193"], ["55", "193"], ["32", "35"], ["23", "35"], ["51", "63"], ["23", "63"], ["110", "149"], ["137", "149"], ["23", "149"], ["23", "155"], ["44", "197"], ["23", "197"], ["60", "78"], ["84", "78"], ["23", "78"], ["23", "84"], ["60", "131"], ["78", "131"], ["84", "131"], ["23", "131"], ["155", "158"], ["162", "158"], ["23", "158"], ["160", "158"], ["177", "162"], ["23", "162"], ["170", "166"], ["170", "166"], ["175", "166"], ["175", "166"], ["23", "166"], ["118", "190"], ["185", "190"], ["23", "190"], ["44", "202"], ["23", "202"], ["93", "91"], ["93", "91"], ["93", "99"], ["23", "99"], ["23", "102"], ["110", "137"], ["23", "137"], ["124", "137"], ["114", "140"], ["23", "140"], ["137", "140"], ["149", "160"], ["175", "160"], ["23", "160"], ["91", "96"], ["99", "96"], ["23", "96"], ["71", "96"], ["96", "99"], ["170", "168"], ["170", "168"], ["175", "168"], ["175", "168"], ["23", "168"], ["114", "182"], ["140", "182"], ["23", "182"], ["166", "182"], ["118", "185"], ["23", "185"], ["182", "185"], ["71", "93"], ["23", "93"], ["170", "169"], ["170", "169"], ["175", "169"], ["175", "169"], ["160", "170"], ["23", "170"], ["172", "170"], ["172", "170"], ["170", "175"], ["23", "175"], ["177", "175"], ["177", "175"], ["158", "172"], ["23", "172"], ["172", "177"], ["23", "177"], ["71", "74"], ["71", "79"], ["71", "71"], ["71", "78"], ["124", "131"], ["124", "132"], ["124", "127"], ["124", "124"], ["148", "160"], ["148", "188"], ["148", "190"], ["148", "155"], ["148", "158"], ["193", "197"], ["193", "202"], ["78", "96"], ["78", "84"], ["78", "85"], ["78", "91"], ["78", "93"], ["131", "140"], ["131", "137"], ["158", "160"], ["158", "169"], ["158", "166"], ["158", "162"], ["158", "168"], ["158", "170"], ["158", "177"], ["158", "182"], ["158", "175"], ["158", "158"], ["158", "172"], ["96", "96"], ["96", "99"], ["96", "102"], ["96", "103"], ["182", "185"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(IDENTIFIER,in,in = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>3</SUB>>", "39": "<(FIELD_IDENTIFIER,in,in)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "47": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "49": "<(LOCAL,int n: int)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "53": "<(nextInt,nextInt())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>6</SUB>>", "57": "<(nextInt,nextInt())<SUB>6</SUB>>", "59": "<(LOCAL,int[] primes: int[])<SUB>7</SUB>>", "61": "<(IDENTIFIER,primes,int[] primes = new int[n + 1])<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.addition,n + 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,n + 1)<SUB>7</SUB>>", "67": "<(LOCAL,int i: int)<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,int i = 2)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>8</SUB>>", "73": "<(IDENTIFIER,n,i &lt;= n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "77": "<(CONTROL_STRUCTURE,if (primes[i] == 0),if (primes[i] == 0))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,primes[i])<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,primes[i] == 0)<SUB>9</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,primes[i])<SUB>10</SUB>>", "87": "<(IDENTIFIER,i,primes[i] = 1)<SUB>10</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int j = i * 2; Some(j &lt;= n); j += i),for (int j = i * 2; Some(j &lt;= n); j += i))<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,int j = i * 2)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.multiplication,i * 2)<SUB>11</SUB>>", "95": "<(LITERAL,2,i * 2)<SUB>11</SUB>>", "97": "<(IDENTIFIER,j,j &lt;= n)<SUB>11</SUB>>", "99": "<(&lt;operator&gt;.assignmentPlus,j += i)<SUB>11</SUB>>", "101": "<(IDENTIFIER,i,j += i)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,primes[j])<SUB>12</SUB>>", "105": "<(IDENTIFIER,j,primes[j] = 2)<SUB>12</SUB>>", "4": "<(LOCAL,ArrayList&lt;Integer&gt; res: ANY)<SUB>15</SUB>>", "108": "<(IDENTIFIER,res,ANY res = new ArrayList&lt;Integer&gt;())<SUB>15</SUB>>", "110": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>15</SUB>>", "6": "<(LOCAL,HashSet&lt;Integer&gt; p: ANY)<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,ANY p = new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "5": "<(IDENTIFIER,p,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "116": "<(IDENTIFIER,v,ANY v = new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "118": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n); i++),for (int i = 2; Some(i &lt;= n); i++))<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>17</SUB>>", "123": "<(LITERAL,2,int i = 2)<SUB>17</SUB>>", "125": "<(IDENTIFIER,i,i &lt;= n)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.equals,primes[i] == 1)<SUB>18</SUB>>", "133": "<(IDENTIFIER,primes,primes[i] == 1)<SUB>18</SUB>>", "135": "<(LITERAL,1,primes[i] == 1)<SUB>18</SUB>>", "137": "<(add,add(i))<SUB>19</SUB>>", "139": "<(IDENTIFIER,i,add(i))<SUB>19</SUB>>", "141": "<(IDENTIFIER,p,add(i))<SUB>20</SUB>>", "143": "<(LOCAL,int c: int)<SUB>23</SUB>>", "145": "<(IDENTIFIER,c,int c = 0)<SUB>23</SUB>>", "147": "<(CONTROL_STRUCTURE,if (res.size() &gt;= 3),if (res.size() &gt;= 3))<SUB>24</SUB>>", "149": "<(size,size())<SUB>24</SUB>>", "151": "<(LITERAL,3,res.size() &gt;= 3)<SUB>24</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt; res.size()); i++),for (int i = 2; Some(i &lt; res.size()); i++))<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>25</SUB>>", "157": "<(LITERAL,2,int i = 2)<SUB>25</SUB>>", "159": "<(IDENTIFIER,i,i &lt; res.size())<SUB>25</SUB>>", "161": "<(IDENTIFIER,res,size())<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "165": "<(LOCAL,int zz: int)<SUB>26</SUB>>", "167": "<(IDENTIFIER,zz,int zz = res.get(i - 2) + res.get(i - 1) + 1)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.addition,res.get(i - 2) + res.get(i - 1))<SUB>26</SUB>>", "171": "<(IDENTIFIER,res,get(i - 2))<SUB>26</SUB>>", "173": "<(IDENTIFIER,i,i - 2)<SUB>26</SUB>>", "175": "<(get,get(i - 1))<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>26</SUB>>", "179": "<(LITERAL,1,i - 1)<SUB>26</SUB>>", "181": "<(CONTROL_STRUCTURE,if (p.contains(zz)),if (p.contains(zz)))<SUB>27</SUB>>", "183": "<(IDENTIFIER,p,contains(zz))<SUB>27</SUB>>", "185": "<(add,add(zz))<SUB>28</SUB>>", "187": "<(IDENTIFIER,zz,add(zz))<SUB>28</SUB>>", "189": "<(IDENTIFIER,c,c = size())<SUB>30</SUB>>", "191": "<(IDENTIFIER,v,size())<SUB>30</SUB>>", "193": "<(&lt;operator&gt;.greaterEqualsThan,c &gt;= k)<SUB>32</SUB>>", "195": "<(IDENTIFIER,k,c &gt;= k)<SUB>32</SUB>>", "197": "<(println,println(&quot;YES&quot;))<SUB>33</SUB>>", "199": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>33</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "203": "<(IDENTIFIER,out,println(&quot;NO&quot;))<SUB>35</SUB>>", "205": "<(close,close())<SUB>37</SUB>>", "207": "<(close,close())<SUB>38</SUB>>", "209": "<(MODIFIER,PUBLIC)>", "211": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}