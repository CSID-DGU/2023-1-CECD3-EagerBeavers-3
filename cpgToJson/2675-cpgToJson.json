{"edges": [["21", "23"], ["21", "149"], ["21", "150"], ["21", "151"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "35"], ["23", "6"], ["23", "42"], ["23", "45"], ["23", "46"], ["23", "64"], ["23", "65"], ["23", "70"], ["23", "71"], ["23", "75"], ["23", "76"], ["23", "79"], ["23", "90"], ["23", "91"], ["23", "92"], ["23", "95"], ["23", "144"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "38"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["45", "5"], ["46", "47"], ["46", "48"], ["46", "51"], ["46", "54"], ["46", "56"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["57", "58"], ["57", "60"], ["58", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "82"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "88"], ["84", "85"], ["84", "86"], ["86", "87"], ["88", "89"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "105"], ["95", "107"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "111"], ["107", "137"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "132"], ["123", "124"], ["123", "131"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["142", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["24", "30"], ["27", "32"], ["32", "36"], ["42", "45"], ["45", "48"], ["65", "73"], ["71", "76"], ["76", "80"], ["92", "97"], ["144", "151"], ["26", "24"], ["28", "27"], ["36", "40"], ["36", "44"], ["38", "44"], ["44", "42"], ["48", "51"], ["51", "58"], ["51", "68"], ["54", "51"], ["67", "65"], ["73", "71"], ["80", "86"], ["80", "92"], ["97", "104"], ["100", "108"], ["100", "147"], ["105", "104"], ["145", "144"], ["30", "28"], ["40", "38"], ["68", "67"], ["83", "80"], ["102", "100"], ["108", "113"], ["147", "145"], ["58", "62"], ["58", "54"], ["60", "54"], ["84", "88"], ["88", "83"], ["104", "102"], ["113", "116"], ["116", "125"], ["116", "138"], ["119", "116"], ["138", "142"], ["138", "105"], ["62", "60"], ["86", "84"], ["142", "105"], ["123", "133"], ["123", "119"], ["124", "123"], ["133", "138"], ["125", "128"], ["128", "124"], ["21", "26"], ["22", "151"], ["24", "151"], ["27", "151"], ["27", "151"], ["32", "151"], ["36", "151"], ["40", "151"], ["38", "151"], ["38", "151"], ["42", "151"], ["45", "151"], ["48", "151"], ["51", "151"], ["51", "151"], ["65", "151"], ["67", "151"], ["65", "151"], ["65", "151"], ["73", "151"], ["71", "151"], ["71", "151"], ["76", "151"], ["76", "151"], ["80", "151"], ["80", "151"], ["92", "151"], ["97", "151"], ["100", "151"], ["100", "151"], ["100", "151"], ["144", "151"], ["144", "151"], ["144", "151"], ["108", "151"], ["113", "151"], ["116", "151"], ["116", "151"], ["124", "151"], ["124", "151"], ["123", "151"], ["123", "151"], ["119", "151"], ["133", "151"], ["138", "151"], ["138", "151"], ["142", "151"], ["105", "151"], ["86", "151"], ["83", "151"], ["83", "151"], ["83", "151"], ["58", "151"], ["62", "151"], ["60", "151"], ["60", "151"], ["54", "151"], ["21", "22"], ["21", "24"], ["21", "32"], ["21", "42"], ["67", "65"], ["73", "71"], ["21", "76"], ["21", "92"], ["24", "27"], ["21", "27"], ["40", "38"], ["42", "45"], ["21", "45"], ["21", "48"], ["21", "97"], ["92", "144"], ["142", "144"], ["21", "144"], ["27", "36"], ["21", "36"], ["48", "51"], ["54", "51"], ["21", "51"], ["32", "51"], ["38", "51"], ["51", "54"], ["21", "54"], ["68", "67"], ["68", "73"], ["21", "73"], ["71", "80"], ["88", "80"], ["21", "80"], ["88", "83"], ["97", "100"], ["105", "100"], ["21", "100"], ["65", "100"], ["116", "105"], ["21", "105"], ["21", "108"], ["36", "40"], ["21", "40"], ["45", "68"], ["60", "68"], ["21", "68"], ["21", "113"], ["36", "58"], ["40", "58"], ["62", "58"], ["21", "58"], ["45", "60"], ["21", "60"], ["62", "60"], ["80", "88"], ["21", "88"], ["113", "116"], ["119", "116"], ["21", "116"], ["100", "116"], ["116", "119"], ["21", "119"], ["108", "138"], ["133", "138"], ["21", "138"], ["58", "62"], ["21", "62"], ["76", "86"], ["21", "86"], ["92", "142"], ["21", "142"], ["124", "123"], ["124", "123"], ["21", "123"], ["21", "133"], ["65", "124"], ["36", "38"], ["36", "40"], ["51", "51"], ["51", "54"], ["51", "58"], ["80", "84"], ["80", "80"], ["80", "83"], ["80", "88"], ["80", "86"], ["100", "113"], ["100", "116"], ["100", "102"], ["100", "104"], ["100", "138"], ["100", "105"], ["100", "100"], ["100", "108"], ["58", "60"], ["58", "62"], ["116", "128"], ["116", "123"], ["116", "124"], ["116", "125"], ["138", "142"], ["123", "116"], ["123", "119"], ["123", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int n: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,n,int n = 0)<SUB>3</SUB>>", "35": "<(CONTROL_STRUCTURE,if (scan.hasNext()),if (scan.hasNext()))<SUB>4</SUB>>", "37": "<(IDENTIFIER,scan,hasNext())<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,n = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,scan,nextInt())<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.assignment,ANY set = new TreeSet&lt;&gt;())<SUB>6</SUB>>", "44": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;())<SUB>6</SUB>>", "5": "<(IDENTIFIER,set,new TreeSet&lt;&gt;())<SUB>6</SUB>>", "47": "<(LOCAL,int i: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "53": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,if (scan.hasNext()),if (scan.hasNext()))<SUB>8</SUB>>", "59": "<(IDENTIFIER,scan,hasNext())<SUB>8</SUB>>", "61": "<(IDENTIFIER,set,add(scan.nextInt()))<SUB>9</SUB>>", "63": "<(IDENTIFIER,scan,nextInt())<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int[] arr = new int[set.size()])<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.alloc,new int[set.size()])>", "69": "<(IDENTIFIER,set,size())<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,ANY it = iterator())<SUB>12</SUB>>", "73": "<(iterator,iterator())<SUB>12</SUB>>", "75": "<(LOCAL,int j: int)<SUB>13</SUB>>", "77": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "79": "<(CONTROL_STRUCTURE,while (it.hasNext()),while (it.hasNext()))<SUB>14</SUB>>", "81": "<(IDENTIFIER,it,hasNext())<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.assignment,arr[j++] = next())<SUB>15</SUB>>", "85": "<(IDENTIFIER,arr,arr[j++] = next())<SUB>15</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "89": "<(IDENTIFIER,it,next())<SUB>15</SUB>>", "91": "<(LOCAL,int flag: int)<SUB>17</SUB>>", "93": "<(IDENTIFIER,tot,int tot = 1)<SUB>17</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; arr.length); i++),for (int i = 1; Some(i &lt; arr.length); i++))<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>18</SUB>>", "99": "<(LITERAL,1,int i = 1)<SUB>18</SUB>>", "101": "<(IDENTIFIER,i,i &lt; arr.length)<SUB>18</SUB>>", "103": "<(IDENTIFIER,arr,i &lt; arr.length)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "107": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "109": "<(IDENTIFIER,flag,flag = 0)<SUB>19</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; i); k++),for (int k = 0; Some(k &lt; i); k++))<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>20</SUB>>", "115": "<(LITERAL,0,int k = 0)<SUB>20</SUB>>", "117": "<(IDENTIFIER,k,k &lt; i)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,k++)<SUB>20</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.equals,arr[i] % arr[k] == 0)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>21</SUB>>", "127": "<(IDENTIFIER,i,arr[i] % arr[k])<SUB>21</SUB>>", "129": "<(IDENTIFIER,arr,arr[i] % arr[k])<SUB>21</SUB>>", "131": "<(LITERAL,0,arr[i] % arr[k] == 0)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.assignment,flag = 1)<SUB>22</SUB>>", "135": "<(LITERAL,1,flag = 1)<SUB>22</SUB>>", "137": "<(CONTROL_STRUCTURE,if (flag == 0),if (flag == 0))<SUB>26</SUB>>", "139": "<(IDENTIFIER,flag,flag == 0)<SUB>26</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "143": "<(IDENTIFIER,tot,tot++)<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}