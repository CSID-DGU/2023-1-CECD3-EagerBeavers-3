{"edges": [["23", "25"], ["23", "199"], ["23", "200"], ["23", "201"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "6"], ["25", "45"], ["25", "48"], ["25", "50"], ["25", "8"], ["25", "92"], ["25", "95"], ["25", "99"], ["25", "139"], ["25", "140"], ["25", "149"], ["25", "193"], ["25", "197"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "73"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["63", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "83"], ["73", "85"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["95", "7"], ["95", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "122"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "118"], ["114", "121"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["137", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["142", "145"], ["142", "146"], ["142", "147"], ["142", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "190"], ["160", "161"], ["160", "162"], ["160", "165"], ["160", "168"], ["160", "170"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "185"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "178"], ["174", "183"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["183", "184"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["197", "198"], ["26", "29"], ["29", "33"], ["31", "38"], ["36", "43"], ["41", "47"], ["45", "48"], ["48", "52"], ["92", "96"], ["95", "101"], ["140", "151"], ["193", "197"], ["197", "201"], ["28", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["47", "45"], ["52", "55"], ["55", "66"], ["55", "94"], ["58", "55"], ["94", "92"], ["96", "95"], ["101", "106"], ["104", "117"], ["104", "142"], ["109", "106"], ["142", "140"], ["151", "154"], ["154", "162"], ["154", "195"], ["157", "154"], ["195", "193"], ["61", "75"], ["106", "104"], ["112", "124"], ["190", "157"], ["75", "80"], ["78", "87"], ["78", "58"], ["83", "80"], ["124", "127"], ["127", "134"], ["127", "109"], ["130", "127"], ["162", "165"], ["165", "175"], ["165", "190"], ["168", "165"], ["64", "69"], ["67", "61"], ["80", "78"], ["86", "83"], ["115", "118"], ["118", "112"], ["133", "130"], ["172", "187"], ["185", "168"], ["66", "64"], ["69", "67"], ["87", "90"], ["90", "86"], ["117", "115"], ["134", "137"], ["137", "133"], ["174", "172"], ["187", "185"], ["175", "179"], ["175", "183"], ["178", "174"], ["183", "174"], ["179", "178"], ["23", "28"], ["24", "201"], ["26", "201"], ["29", "201"], ["31", "201"], ["36", "201"], ["43", "201"], ["41", "201"], ["41", "201"], ["45", "201"], ["48", "201"], ["92", "201"], ["95", "201"], ["104", "201"], ["104", "201"], ["140", "201"], ["142", "201"], ["142", "201"], ["142", "201"], ["142", "201"], ["140", "201"], ["140", "201"], ["151", "201"], ["154", "201"], ["154", "201"], ["154", "201"], ["195", "201"], ["193", "201"], ["193", "201"], ["197", "201"], ["197", "201"], ["162", "201"], ["165", "201"], ["165", "201"], ["165", "201"], ["190", "201"], ["157", "201"], ["175", "201"], ["174", "201"], ["174", "201"], ["179", "201"], ["178", "201"], ["174", "201"], ["172", "201"], ["172", "201"], ["187", "201"], ["185", "201"], ["185", "201"], ["168", "201"], ["115", "201"], ["118", "201"], ["118", "201"], ["112", "201"], ["124", "201"], ["127", "201"], ["127", "201"], ["109", "201"], ["133", "201"], ["137", "201"], ["133", "201"], ["133", "201"], ["130", "201"], ["64", "201"], ["67", "201"], ["67", "201"], ["61", "201"], ["75", "201"], ["78", "201"], ["78", "201"], ["78", "201"], ["58", "201"], ["86", "201"], ["90", "201"], ["86", "201"], ["86", "201"], ["83", "201"], ["142", "201"], ["23", "24"], ["23", "26"], ["33", "31"], ["38", "36"], ["43", "41"], ["23", "45"], ["23", "92"], ["142", "140"], ["142", "140"], ["142", "140"], ["142", "140"], ["142", "140"], ["142", "140"], ["26", "29"], ["23", "29"], ["45", "48"], ["23", "48"], ["31", "48"], ["23", "52"], ["92", "95"], ["23", "95"], ["96", "95"], ["96", "95"], ["23", "101"], ["23", "151"], ["23", "193"], ["195", "193"], ["193", "197"], ["23", "197"], ["23", "33"], ["33", "38"], ["23", "38"], ["38", "43"], ["23", "43"], ["52", "55"], ["58", "55"], ["23", "55"], ["48", "55"], ["55", "58"], ["87", "58"], ["23", "58"], ["55", "96"], ["23", "96"], ["101", "104"], ["109", "104"], ["23", "104"], ["106", "104"], ["106", "104"], ["104", "109"], ["134", "109"], ["23", "109"], ["23", "142"], ["106", "142"], ["36", "142"], ["127", "142"], ["80", "142"], ["41", "142"], ["48", "142"], ["61", "142"], ["87", "142"], ["95", "142"], ["112", "142"], ["134", "142"], ["151", "154"], ["157", "154"], ["23", "154"], ["142", "154"], ["154", "157"], ["179", "157"], ["23", "157"], ["29", "195"], ["190", "195"], ["23", "195"], ["48", "61"], ["87", "61"], ["23", "61"], ["64", "61"], ["67", "61"], ["23", "75"], ["96", "106"], ["23", "106"], ["95", "112"], ["134", "112"], ["23", "112"], ["115", "112"], ["118", "112"], ["23", "124"], ["23", "162"], ["29", "190"], ["185", "190"], ["23", "190"], ["23", "64"], ["23", "72"], ["75", "78"], ["83", "78"], ["23", "78"], ["80", "78"], ["80", "78"], ["78", "83"], ["23", "83"], ["23", "115"], ["23", "121"], ["124", "127"], ["130", "127"], ["23", "127"], ["118", "127"], ["127", "130"], ["23", "130"], ["162", "165"], ["168", "165"], ["23", "165"], ["142", "165"], ["165", "168"], ["178", "168"], ["23", "168"], ["178", "172"], ["178", "172"], ["183", "172"], ["64", "67"], ["23", "67"], ["69", "67"], ["69", "67"], ["69", "80"], ["23", "80"], ["87", "86"], ["87", "86"], ["90", "86"], ["115", "118"], ["23", "118"], ["36", "118"], ["127", "118"], ["80", "118"], ["134", "133"], ["134", "133"], ["137", "133"], ["29", "185"], ["190", "185"], ["23", "185"], ["172", "185"], ["36", "69"], ["80", "69"], ["23", "69"], ["61", "87"], ["23", "87"], ["55", "87"], ["43", "90"], ["23", "90"], ["112", "134"], ["23", "134"], ["104", "134"], ["43", "137"], ["90", "137"], ["23", "137"], ["178", "174"], ["178", "174"], ["183", "174"], ["172", "187"], ["23", "187"], ["140", "175"], ["179", "175"], ["23", "175"], ["179", "178"], ["179", "178"], ["165", "178"], ["23", "178"], ["23", "183"], ["175", "179"], ["23", "179"], ["154", "179"], ["55", "64"], ["55", "75"], ["55", "69"], ["55", "67"], ["55", "80"], ["55", "58"], ["55", "61"], ["55", "66"], ["55", "55"], ["55", "78"], ["104", "115"], ["104", "104"], ["104", "112"], ["104", "118"], ["104", "127"], ["104", "106"], ["104", "117"], ["104", "124"], ["104", "109"], ["154", "154"], ["154", "162"], ["154", "190"], ["154", "157"], ["154", "165"], ["78", "87"], ["78", "90"], ["78", "80"], ["78", "86"], ["78", "83"], ["78", "78"], ["127", "134"], ["127", "137"], ["127", "130"], ["127", "127"], ["127", "133"], ["165", "185"], ["165", "168"], ["165", "187"], ["165", "174"], ["165", "165"], ["165", "175"], ["165", "172"], ["175", "179"], ["175", "178"], ["175", "183"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,StringBuilder solution = new StringBuilder())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>2</SUB>>", "3": "<(IDENTIFIER,solution,new StringBuilder())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,int rows = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(LOCAL,int cols: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,cols,int cols = nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,FR,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int moves = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "6": "<(LOCAL,List&lt;List&lt;Integer&gt;&gt; horizontalEdgeWeights: ANY)<SUB>7</SUB>>", "46": "<(IDENTIFIER,horizontalEdgeWeights,ANY horizontalEdgeWeights = new ArrayList&lt;List&lt;Integer&gt;&gt;(rows))<SUB>7</SUB>>", "48": "<(&lt;init&gt;,new ArrayList&lt;List&lt;Integer&gt;&gt;(rows))<SUB>7</SUB>>", "49": "<(IDENTIFIER,rows,new ArrayList&lt;List&lt;Integer&gt;&gt;(rows))<SUB>7</SUB>>", "51": "<(LOCAL,int r: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,r,int r = 0)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.lessThan,r &lt; rows)<SUB>8</SUB>>", "57": "<(IDENTIFIER,rows,r &lt; rows)<SUB>8</SUB>>", "59": "<(IDENTIFIER,r,r++)<SUB>8</SUB>>", "61": "<(add,add(new ArrayList&lt;Integer&gt;(cols - 1)))<SUB>9</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "65": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "67": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;(cols - 1))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.subtraction,cols - 1)<SUB>9</SUB>>", "71": "<(LITERAL,1,cols - 1)<SUB>9</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; cols - 1); c++),for (int c = 0; Some(c &lt; cols - 1); c++))<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>11</SUB>>", "77": "<(LITERAL,0,int c = 0)<SUB>11</SUB>>", "79": "<(IDENTIFIER,c,c &lt; cols - 1)<SUB>11</SUB>>", "81": "<(IDENTIFIER,cols,cols - 1)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,c++)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(get,get(r))<SUB>12</SUB>>", "89": "<(IDENTIFIER,r,get(r))<SUB>12</SUB>>", "91": "<(IDENTIFIER,FR,nextInt())<SUB>12</SUB>>", "92": "<(&lt;operator&gt;.assignment,ANY verticalEdgeWeights = new ArrayList&lt;List&lt;Integer&gt;&gt;(rows - 1))<SUB>16</SUB>>", "94": "<(&lt;operator&gt;.alloc,new ArrayList&lt;List&lt;Integer&gt;&gt;(rows - 1))<SUB>16</SUB>>", "7": "<(IDENTIFIER,verticalEdgeWeights,new ArrayList&lt;List&lt;Integer&gt;&gt;(rows - 1))<SUB>16</SUB>>", "97": "<(IDENTIFIER,rows,rows - 1)<SUB>16</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows - 1); r++),for (int r = 0; Some(r &lt; rows - 1); r++))<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>17</SUB>>", "103": "<(LITERAL,0,int r = 0)<SUB>17</SUB>>", "105": "<(IDENTIFIER,r,r &lt; rows - 1)<SUB>17</SUB>>", "107": "<(IDENTIFIER,rows,rows - 1)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,r++)<SUB>17</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "113": "<(IDENTIFIER,verticalEdgeWeights,add(new ArrayList&lt;Integer&gt;(cols)))<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "117": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;(cols))<SUB>18</SUB>>", "119": "<(IDENTIFIER,$obj4,new ArrayList&lt;Integer&gt;(cols))>", "121": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "123": "<(LOCAL,int c: int)<SUB>20</SUB>>", "125": "<(IDENTIFIER,c,int c = 0)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>20</SUB>>", "129": "<(IDENTIFIER,cols,c &lt; cols)<SUB>20</SUB>>", "131": "<(IDENTIFIER,c,c++)<SUB>20</SUB>>", "133": "<(add,add(FR.nextInt()))<SUB>21</SUB>>", "135": "<(IDENTIFIER,verticalEdgeWeights,get(r))<SUB>21</SUB>>", "137": "<(nextInt,nextInt())<SUB>21</SUB>>", "139": "<(LOCAL,List&lt;List&lt;Integer&gt;&gt; result: ANY)<SUB>25</SUB>>", "141": "<(IDENTIFIER,result,ANY result = getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>25</SUB>>", "143": "<(IDENTIFIER,this,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>25</SUB>>", "145": "<(IDENTIFIER,cols,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>25</SUB>>", "147": "<(IDENTIFIER,horizontalEdgeWeights,getResult(rows, cols, moves, horizontalEdgeWeights, verticalEdgeWeights))<SUB>25</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int r = 0; Some(r &lt; rows); r++),for (int r = 0; Some(r &lt; rows); r++))<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.assignment,int r = 0)<SUB>26</SUB>>", "153": "<(LITERAL,0,int r = 0)<SUB>26</SUB>>", "155": "<(IDENTIFIER,r,r &lt; rows)<SUB>26</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,r++)<SUB>26</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(LOCAL,int c: int)<SUB>27</SUB>>", "163": "<(IDENTIFIER,c,int c = 0)<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.lessThan,c &lt; cols)<SUB>27</SUB>>", "167": "<(IDENTIFIER,cols,c &lt; cols)<SUB>27</SUB>>", "169": "<(IDENTIFIER,c,c++)<SUB>27</SUB>>", "171": "<(LOCAL,int value: int)<SUB>28</SUB>>", "173": "<(IDENTIFIER,value,int value = result != null ? result.get(r).get(c) : -1)<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.notEquals,result != null)<SUB>28</SUB>>", "177": "<(LITERAL,null,result != null)<SUB>28</SUB>>", "179": "<(get,get(r))<SUB>28</SUB>>", "181": "<(IDENTIFIER,r,get(r))<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.minus,-1)<SUB>28</SUB>>", "185": "<(append,solution.append(value + &quot; &quot;))<SUB>29</SUB>>", "187": "<(&lt;operator&gt;.addition,value + &quot; &quot;)<SUB>29</SUB>>", "189": "<(LITERAL,&quot; &quot;,value + &quot; &quot;)<SUB>29</SUB>>", "191": "<(IDENTIFIER,solution,solution.append(&quot;\\n&quot;))<SUB>31</SUB>>", "193": "<(print,print(solution.toString()))<SUB>34</SUB>>", "195": "<(toString,solution.toString())<SUB>34</SUB>>", "197": "<(close,close())<SUB>35</SUB>>", "199": "<(MODIFIER,PUBLIC)>", "201": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}