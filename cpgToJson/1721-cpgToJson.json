{"edges": [["19", "21"], ["19", "161"], ["19", "162"], ["19", "163"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "100"], ["21", "101"], ["21", "104"], ["21", "112"], ["21", "156"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "65"], ["59", "66"], ["59", "70"], ["59", "71"], ["59", "80"], ["59", "81"], ["59", "90"], ["59", "95"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "107"], ["104", "108"], ["104", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "122"], ["112", "124"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "140"], ["125", "126"], ["125", "137"], ["126", "127"], ["126", "136"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["137", "138"], ["138", "139"], ["140", "141"], ["140", "152"], ["141", "142"], ["141", "151"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["152", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["101", "109"], ["104", "114"], ["156", "163"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "63"], ["54", "101"], ["57", "54"], ["109", "104"], ["114", "119"], ["117", "130"], ["117", "159"], ["122", "119"], ["157", "156"], ["28", "26"], ["61", "68"], ["66", "77"], ["71", "87"], ["81", "91"], ["90", "96"], ["95", "57"], ["119", "117"], ["159", "157"], ["63", "61"], ["68", "66"], ["73", "71"], ["83", "81"], ["91", "90"], ["96", "95"], ["126", "138"], ["126", "145"], ["141", "153"], ["141", "122"], ["75", "73"], ["85", "83"], ["127", "126"], ["138", "145"], ["142", "141"], ["153", "122"], ["76", "75"], ["86", "85"], ["128", "133"], ["133", "127"], ["143", "148"], ["148", "142"], ["77", "76"], ["87", "86"], ["130", "128"], ["145", "143"], ["19", "24"], ["20", "163"], ["22", "163"], ["25", "163"], ["25", "163"], ["30", "163"], ["35", "163"], ["37", "163"], ["35", "163"], ["35", "163"], ["40", "163"], ["45", "163"], ["45", "163"], ["54", "163"], ["101", "163"], ["104", "163"], ["104", "163"], ["104", "163"], ["114", "163"], ["117", "163"], ["119", "163"], ["117", "163"], ["117", "163"], ["156", "163"], ["156", "163"], ["156", "163"], ["126", "163"], ["138", "163"], ["142", "163"], ["142", "163"], ["141", "163"], ["141", "163"], ["141", "163"], ["153", "163"], ["122", "163"], ["61", "163"], ["68", "163"], ["66", "163"], ["66", "163"], ["71", "163"], ["71", "163"], ["83", "163"], ["86", "163"], ["85", "163"], ["83", "163"], ["81", "163"], ["81", "163"], ["90", "163"], ["90", "163"], ["90", "163"], ["95", "163"], ["95", "163"], ["95", "163"], ["57", "163"], ["104", "163"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["19", "101"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "104"], ["40", "104"], ["90", "104"], ["45", "104"], ["95", "104"], ["109", "104"], ["109", "104"], ["19", "114"], ["101", "156"], ["138", "156"], ["153", "156"], ["19", "156"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["63", "61"], ["68", "66"], ["73", "71"], ["73", "71"], ["73", "81"], ["19", "81"], ["85", "81"], ["85", "81"], ["71", "90"], ["19", "90"], ["81", "95"], ["19", "95"], ["54", "109"], ["19", "109"], ["114", "117"], ["122", "117"], ["19", "117"], ["119", "117"], ["119", "117"], ["19", "122"], ["117", "122"], ["109", "119"], ["19", "119"], ["37", "63"], ["68", "63"], ["19", "63"], ["63", "68"], ["19", "68"], ["61", "73"], ["19", "73"], ["75", "73"], ["75", "73"], ["73", "83"], ["19", "83"], ["85", "83"], ["85", "83"], ["127", "126"], ["127", "126"], ["35", "126"], ["141", "126"], ["19", "126"], ["142", "141"], ["142", "141"], ["126", "141"], ["19", "141"], ["19", "153"], ["19", "75"], ["66", "75"], ["19", "85"], ["66", "85"], ["104", "127"], ["142", "127"], ["104", "127"], ["142", "127"], ["95", "127"], ["101", "138"], ["153", "138"], ["19", "138"], ["104", "142"], ["127", "142"], ["104", "142"], ["127", "142"], ["101", "153"], ["138", "153"], ["19", "76"], ["66", "76"], ["19", "86"], ["66", "86"], ["117", "130"], ["19", "130"], ["19", "145"], ["117", "145"], ["54", "68"], ["54", "73"], ["54", "96"], ["54", "77"], ["54", "57"], ["54", "66"], ["54", "75"], ["54", "81"], ["54", "85"], ["54", "95"], ["54", "76"], ["54", "87"], ["54", "91"], ["54", "90"], ["54", "54"], ["54", "61"], ["54", "83"], ["54", "71"], ["54", "63"], ["54", "86"], ["117", "141"], ["117", "145"], ["117", "122"], ["117", "128"], ["117", "142"], ["117", "119"], ["117", "148"], ["117", "143"], ["117", "126"], ["117", "130"], ["117", "117"], ["117", "127"], ["117", "133"], ["126", "138"], ["141", "153"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,double[] left: double[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,left,double[] left = new double[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new double[n])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,double[] right = new double[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new double[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>8</SUB>>", "63": "<(nextInt,nextInt())<SUB>8</SUB>>", "65": "<(LOCAL,int a: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,a,int a = nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,double l = x - (double) a / 2)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.subtraction,x - (double) a / 2)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.division,(double) a / 2)<SUB>10</SUB>>", "77": "<(TYPE_REF,double,double)<SUB>10</SUB>>", "79": "<(LITERAL,2,(double) a / 2)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,double r = x + (double) a / 2)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.addition,x + (double) a / 2)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.division,(double) a / 2)<SUB>11</SUB>>", "87": "<(TYPE_REF,double,double)<SUB>11</SUB>>", "89": "<(LITERAL,2,(double) a / 2)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,left[i])<SUB>12</SUB>>", "93": "<(IDENTIFIER,i,left[i] = l)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,right[i] = r)<SUB>13</SUB>>", "97": "<(IDENTIFIER,right,right[i] = r)<SUB>13</SUB>>", "99": "<(IDENTIFIER,r,right[i] = r)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.assignment,int answer = 2)<SUB>15</SUB>>", "103": "<(LITERAL,2,int answer = 2)<SUB>15</SUB>>", "105": "<(IDENTIFIER,this,quickSort(left, right, 0, n - 1))<SUB>16</SUB>>", "107": "<(IDENTIFIER,right,quickSort(left, right, 0, n - 1))<SUB>16</SUB>>", "109": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>16</SUB>>", "111": "<(LITERAL,1,n - 1)<SUB>16</SUB>>", "113": "<(LOCAL,int i: int)<SUB>17</SUB>>", "115": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "121": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "125": "<(CONTROL_STRUCTURE,if (left[i + 1] - right[i] == t),if (left[i + 1] - right[i] == t))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.subtraction,left[i + 1] - right[i])<SUB>18</SUB>>", "129": "<(IDENTIFIER,left,left[i + 1] - right[i])<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,i + 1)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,right[i])<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,left[i + 1] - right[i])<SUB>18</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "139": "<(IDENTIFIER,answer,answer++)<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.greaterThan,left[i + 1] - right[i] &gt; t)<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,left[i + 1])<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.addition,i + 1)<SUB>21</SUB>>", "147": "<(LITERAL,1,i + 1)<SUB>21</SUB>>", "149": "<(IDENTIFIER,right,left[i + 1] - right[i])<SUB>21</SUB>>", "151": "<(IDENTIFIER,t,left[i + 1] - right[i] &gt; t)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.assignmentPlus,answer += 2)<SUB>22</SUB>>", "155": "<(LITERAL,2,answer += 2)<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}