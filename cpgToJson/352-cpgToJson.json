{"edges": [["33", "34"], ["33", "35"], ["33", "302"], ["33", "303"], ["33", "304"], ["35", "4"], ["35", "36"], ["35", "39"], ["35", "50"], ["35", "51"], ["35", "55"], ["35", "56"], ["35", "60"], ["35", "61"], ["35", "64"], ["35", "65"], ["35", "68"], ["35", "93"], ["35", "94"], ["35", "6"], ["35", "99"], ["35", "102"], ["35", "8"], ["35", "104"], ["35", "107"], ["35", "109"], ["35", "10"], ["35", "123"], ["35", "126"], ["35", "128"], ["35", "142"], ["35", "197"], ["35", "200"], ["35", "202"], ["35", "205"], ["35", "207"], ["35", "16"], ["35", "221"], ["35", "224"], ["35", "226"], ["35", "240"], ["35", "295"], ["36", "37"], ["36", "38"], ["39", "3"], ["39", "40"], ["40", "41"], ["40", "44"], ["40", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "77"], ["68", "79"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "86"], ["80", "89"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["87", "88"], ["89", "90"], ["90", "91"], ["91", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "5"], ["102", "103"], ["104", "105"], ["104", "106"], ["107", "7"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "9"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "150"], ["142", "152"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["152", "12"], ["152", "153"], ["152", "156"], ["152", "157"], ["152", "160"], ["152", "163"], ["152", "166"], ["152", "178"], ["152", "181"], ["152", "182"], ["152", "189"], ["153", "154"], ["153", "155"], ["156", "11"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "171"], ["167", "168"], ["167", "170"], ["168", "169"], ["171", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "177"], ["175", "176"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["184", "187"], ["187", "188"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["193", "194"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "13"], ["200", "201"], ["202", "203"], ["202", "204"], ["205", "14"], ["205", "206"], ["207", "208"], ["207", "209"], ["207", "212"], ["207", "215"], ["207", "217"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["215", "216"], ["217", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["224", "15"], ["224", "225"], ["226", "227"], ["226", "228"], ["226", "231"], ["226", "234"], ["226", "236"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["240", "245"], ["240", "248"], ["240", "250"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["248", "249"], ["250", "18"], ["250", "251"], ["250", "254"], ["250", "255"], ["250", "258"], ["250", "261"], ["250", "264"], ["250", "276"], ["250", "279"], ["250", "280"], ["250", "287"], ["251", "252"], ["251", "253"], ["254", "17"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "269"], ["265", "266"], ["265", "268"], ["266", "267"], ["269", "270"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "275"], ["273", "274"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["282", "285"], ["285", "286"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["291", "292"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "299"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["36", "43"], ["39", "53"], ["51", "58"], ["56", "61"], ["61", "65"], ["65", "70"], ["94", "101"], ["99", "102"], ["102", "106"], ["104", "107"], ["107", "111"], ["123", "126"], ["126", "130"], ["197", "200"], ["200", "204"], ["202", "205"], ["205", "209"], ["221", "224"], ["224", "228"], ["295", "304"], ["38", "36"], ["53", "51"], ["58", "56"], ["70", "75"], ["73", "82"], ["73", "98"], ["77", "75"], ["96", "94"], ["101", "99"], ["106", "104"], ["111", "114"], ["114", "120"], ["114", "125"], ["117", "114"], ["125", "123"], ["130", "133"], ["133", "139"], ["133", "144"], ["136", "133"], ["144", "147"], ["147", "155"], ["147", "199"], ["150", "147"], ["199", "197"], ["204", "202"], ["209", "212"], ["212", "218"], ["212", "223"], ["215", "212"], ["223", "221"], ["228", "231"], ["231", "237"], ["231", "242"], ["234", "231"], ["242", "245"], ["245", "253"], ["245", "298"], ["248", "245"], ["296", "299"], ["299", "295"], ["41", "48"], ["44", "39"], ["75", "73"], ["98", "96"], ["120", "117"], ["139", "136"], ["153", "156"], ["156", "157"], ["157", "160"], ["160", "163"], ["163", "168"], ["178", "187"], ["182", "190"], ["218", "215"], ["237", "234"], ["251", "254"], ["254", "255"], ["255", "258"], ["258", "261"], ["261", "266"], ["276", "285"], ["280", "288"], ["298", "296"], ["43", "41"], ["46", "44"], ["81", "87"], ["81", "91"], ["155", "153"], ["167", "175"], ["167", "178"], ["184", "182"], ["190", "194"], ["190", "150"], ["253", "251"], ["265", "273"], ["265", "276"], ["282", "280"], ["288", "292"], ["288", "248"], ["48", "46"], ["82", "81"], ["87", "77"], ["168", "167"], ["172", "178"], ["187", "184"], ["194", "150"], ["266", "265"], ["270", "276"], ["285", "282"], ["292", "248"], ["91", "77"], ["174", "172"], ["272", "270"], ["175", "174"], ["273", "272"], ["33", "38"], ["34", "304"], ["36", "304"], ["41", "304"], ["44", "304"], ["44", "304"], ["44", "304"], ["39", "304"], ["51", "304"], ["51", "304"], ["51", "304"], ["58", "304"], ["56", "304"], ["56", "304"], ["61", "304"], ["65", "304"], ["75", "304"], ["73", "304"], ["73", "304"], ["94", "304"], ["94", "304"], ["99", "304"], ["104", "304"], ["123", "304"], ["126", "304"], ["147", "304"], ["197", "304"], ["200", "304"], ["202", "304"], ["205", "304"], ["212", "304"], ["212", "304"], ["221", "304"], ["224", "304"], ["224", "304"], ["231", "304"], ["242", "304"], ["245", "304"], ["245", "304"], ["245", "304"], ["295", "304"], ["299", "304"], ["295", "304"], ["295", "304"], ["251", "304"], ["254", "304"], ["255", "304"], ["258", "304"], ["258", "304"], ["261", "304"], ["266", "304"], ["265", "304"], ["265", "304"], ["270", "304"], ["272", "304"], ["270", "304"], ["270", "304"], ["276", "304"], ["276", "304"], ["282", "304"], ["282", "304"], ["285", "304"], ["282", "304"], ["280", "304"], ["280", "304"], ["288", "304"], ["288", "304"], ["292", "304"], ["292", "304"], ["248", "304"], ["237", "304"], ["237", "304"], ["234", "304"], ["218", "304"], ["218", "304"], ["215", "304"], ["153", "304"], ["156", "304"], ["157", "304"], ["160", "304"], ["163", "304"], ["168", "304"], ["167", "304"], ["167", "304"], ["172", "304"], ["174", "304"], ["172", "304"], ["172", "304"], ["178", "304"], ["184", "304"], ["184", "304"], ["187", "304"], ["184", "304"], ["182", "304"], ["182", "304"], ["190", "304"], ["190", "304"], ["194", "304"], ["194", "304"], ["150", "304"], ["139", "304"], ["139", "304"], ["136", "304"], ["120", "304"], ["117", "304"], ["81", "304"], ["81", "304"], ["91", "304"], ["87", "304"], ["77", "304"], ["33", "34"], ["33", "36"], ["53", "51"], ["58", "56"], ["33", "61"], ["33", "65"], ["33", "99"], ["33", "104"], ["33", "123"], ["33", "197"], ["33", "202"], ["33", "221"], ["36", "39"], ["33", "39"], ["41", "39"], ["44", "39"], ["33", "70"], ["99", "102"], ["33", "102"], ["104", "107"], ["33", "107"], ["33", "111"], ["123", "126"], ["33", "126"], ["33", "130"], ["33", "144"], ["197", "200"], ["33", "200"], ["202", "205"], ["33", "205"], ["33", "209"], ["221", "224"], ["33", "224"], ["33", "228"], ["33", "242"], ["299", "295"], ["299", "295"], ["33", "41"], ["33", "49"], ["39", "53"], ["33", "53"], ["53", "58"], ["33", "58"], ["70", "73"], ["77", "73"], ["33", "73"], ["75", "73"], ["82", "77"], ["33", "77"], ["111", "114"], ["117", "114"], ["33", "114"], ["65", "114"], ["91", "114"], ["114", "117"], ["33", "117"], ["130", "133"], ["136", "133"], ["33", "133"], ["61", "133"], ["87", "133"], ["133", "136"], ["33", "136"], ["144", "147"], ["150", "147"], ["33", "147"], ["133", "147"], ["147", "150"], ["33", "150"], ["33", "153"], ["184", "182"], ["184", "182"], ["184", "182"], ["209", "212"], ["215", "212"], ["33", "212"], ["147", "212"], ["212", "215"], ["33", "215"], ["228", "231"], ["234", "231"], ["33", "231"], ["114", "231"], ["231", "234"], ["33", "234"], ["242", "245"], ["248", "245"], ["33", "245"], ["231", "245"], ["245", "248"], ["33", "248"], ["33", "251"], ["282", "280"], ["282", "280"], ["282", "280"], ["94", "299"], ["288", "299"], ["292", "299"], ["190", "299"], ["194", "299"], ["33", "299"], ["41", "44"], ["33", "44"], ["56", "75"], ["82", "75"], ["33", "75"], ["107", "120"], ["33", "120"], ["126", "139"], ["33", "139"], ["153", "156"], ["33", "156"], ["156", "157"], ["33", "157"], ["102", "157"], ["178", "157"], ["157", "160"], ["33", "160"], ["107", "160"], ["120", "160"], ["160", "163"], ["33", "163"], ["126", "163"], ["168", "163"], ["172", "163"], ["139", "163"], ["157", "178"], ["33", "178"], ["205", "218"], ["33", "218"], ["224", "237"], ["33", "237"], ["251", "254"], ["33", "254"], ["254", "255"], ["33", "255"], ["200", "255"], ["276", "255"], ["255", "258"], ["33", "258"], ["205", "258"], ["218", "258"], ["258", "261"], ["33", "261"], ["224", "261"], ["266", "261"], ["270", "261"], ["237", "261"], ["255", "276"], ["33", "276"], ["82", "81"], ["82", "81"], ["33", "81"], ["168", "167"], ["33", "167"], ["33", "184"], ["75", "184"], ["187", "184"], ["182", "190"], ["33", "190"], ["94", "190"], ["194", "190"], ["190", "194"], ["33", "194"], ["266", "265"], ["33", "265"], ["184", "282"], ["33", "282"], ["75", "282"], ["184", "282"], ["285", "282"], ["280", "288"], ["33", "288"], ["94", "288"], ["292", "288"], ["190", "288"], ["194", "288"], ["288", "292"], ["33", "292"], ["75", "82"], ["33", "82"], ["73", "82"], ["61", "87"], ["33", "87"], ["163", "168"], ["33", "168"], ["175", "172"], ["33", "172"], ["174", "172"], ["174", "172"], ["163", "187"], ["33", "187"], ["261", "266"], ["33", "266"], ["273", "270"], ["33", "270"], ["272", "270"], ["272", "270"], ["261", "285"], ["33", "285"], ["65", "91"], ["33", "91"], ["175", "174"], ["33", "174"], ["273", "272"], ["33", "272"], ["168", "175"], ["33", "175"], ["266", "273"], ["33", "273"], ["73", "73"], ["73", "77"], ["73", "75"], ["73", "81"], ["73", "82"], ["114", "120"], ["114", "114"], ["114", "117"], ["133", "136"], ["133", "139"], ["133", "133"], ["147", "167"], ["147", "163"], ["147", "178"], ["147", "150"], ["147", "153"], ["147", "168"], ["147", "187"], ["147", "190"], ["147", "184"], ["147", "182"], ["147", "155"], ["147", "160"], ["147", "157"], ["147", "147"], ["147", "156"], ["212", "215"], ["212", "212"], ["212", "218"], ["231", "231"], ["231", "237"], ["231", "234"], ["245", "282"], ["245", "261"], ["245", "245"], ["245", "255"], ["245", "285"], ["245", "288"], ["245", "258"], ["245", "276"], ["245", "280"], ["245", "265"], ["245", "251"], ["245", "253"], ["245", "254"], ["245", "248"], ["245", "266"], ["81", "87"], ["81", "91"], ["167", "174"], ["167", "175"], ["167", "172"], ["190", "194"], ["265", "273"], ["265", "272"], ["265", "270"], ["288", "292"]], "features": {"33": "<(METHOD,main)<SUB>1</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "36": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "38": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new BufferedInputStream(System.in))<SUB>2</SUB>>", "45": "<(IDENTIFIER,$obj0,new BufferedInputStream(System.in))>", "47": "<(IDENTIFIER,System,new BufferedInputStream(System.in))<SUB>2</SUB>>", "49": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.assignment,int numAnimals = nextInt())<SUB>4</SUB>>", "53": "<(nextInt,nextInt())<SUB>4</SUB>>", "55": "<(LOCAL,String positions: java.lang.String)<SUB>5</SUB>>", "57": "<(IDENTIFIER,positions,String positions = next())<SUB>5</SUB>>", "59": "<(IDENTIFIER,sc,next())<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,int numTigers = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int numTigers = 0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int numHamsters = 0)<SUB>8</SUB>>", "67": "<(LITERAL,0,int numHamsters = 0)<SUB>8</SUB>>", "69": "<(LOCAL,int i: int)<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; positions.length())<SUB>9</SUB>>", "75": "<(length,positions.length())<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.equals,positions.charAt(i) == 'T')<SUB>10</SUB>>", "83": "<(IDENTIFIER,positions,positions.charAt(i))<SUB>10</SUB>>", "85": "<(LITERAL,'T',positions.charAt(i) == 'T')<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,numTigers++)<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,numHamsters++)<SUB>13</SUB>>", "93": "<(LOCAL,int minDifference: int)<SUB>17</SUB>>", "95": "<(IDENTIFIER,minDifference,int minDifference = Integer.MAX_VALUE)<SUB>17</SUB>>", "97": "<(IDENTIFIER,Integer,int minDifference = Integer.MAX_VALUE)<SUB>17</SUB>>", "6": "<(LOCAL,StringBuilder tigerChars: java.lang.StringBuilder)<SUB>19</SUB>>", "100": "<(IDENTIFIER,tigerChars,StringBuilder tigerChars = new StringBuilder(1000))<SUB>19</SUB>>", "102": "<(&lt;init&gt;,new StringBuilder(1000))<SUB>19</SUB>>", "103": "<(LITERAL,1000,new StringBuilder(1000))<SUB>19</SUB>>", "104": "<(&lt;operator&gt;.assignment,StringBuilder hamsterChars = new StringBuilder(1000))<SUB>20</SUB>>", "106": "<(&lt;operator&gt;.alloc,new StringBuilder(1000))<SUB>20</SUB>>", "7": "<(IDENTIFIER,hamsterChars,new StringBuilder(1000))<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; numHamsters); i++),for (int i = 0; Some(i &lt; numHamsters); i++))<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>21</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>21</SUB>>", "115": "<(IDENTIFIER,i,i &lt; numHamsters)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "121": "<(IDENTIFIER,hamsterChars,hamsterChars.append('H'))<SUB>22</SUB>>", "10": "<(LOCAL,StringBuilder remainingTigerChars: java.lang.StringBuilder)<SUB>24</SUB>>", "124": "<(IDENTIFIER,remainingTigerChars,StringBuilder remainingTigerChars = new StringBuilder(1000))<SUB>24</SUB>>", "126": "<(&lt;init&gt;,new StringBuilder(1000))<SUB>24</SUB>>", "127": "<(LITERAL,1000,new StringBuilder(1000))<SUB>24</SUB>>", "129": "<(LOCAL,int i: int)<SUB>25</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; numTigers)<SUB>25</SUB>>", "135": "<(IDENTIFIER,numTigers,i &lt; numTigers)<SUB>25</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "139": "<(append,remainingTigerChars.append('T'))<SUB>26</SUB>>", "141": "<(LITERAL,'T',remainingTigerChars.append('T'))<SUB>26</SUB>>", "143": "<(LOCAL,int i: int)<SUB>29</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "147": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= numTigers)<SUB>29</SUB>>", "149": "<(IDENTIFIER,numTigers,i &lt;= numTigers)<SUB>29</SUB>>", "151": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "12": "<(LOCAL,StringBuilder generated: java.lang.StringBuilder)<SUB>30</SUB>>", "154": "<(IDENTIFIER,generated,StringBuilder generated = new StringBuilder())<SUB>30</SUB>>", "156": "<(&lt;init&gt;,new StringBuilder())<SUB>30</SUB>>", "157": "<(append,generated.append(tigerChars))<SUB>31</SUB>>", "159": "<(IDENTIFIER,tigerChars,generated.append(tigerChars))<SUB>31</SUB>>", "161": "<(IDENTIFIER,generated,generated.append(hamsterChars))<SUB>32</SUB>>", "163": "<(append,generated.append(remainingTigerChars))<SUB>33</SUB>>", "165": "<(IDENTIFIER,remainingTigerChars,generated.append(remainingTigerChars))<SUB>33</SUB>>", "167": "<(&lt;operator&gt;.greaterEqualsThan,remainingTigerChars.length() &gt;= 1)<SUB>37</SUB>>", "169": "<(IDENTIFIER,remainingTigerChars,remainingTigerChars.length())<SUB>37</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "173": "<(IDENTIFIER,remainingTigerChars,remainingTigerChars.deleteCharAt(remainingTigerChars.length() - 1))<SUB>38</SUB>>", "175": "<(length,remainingTigerChars.length())<SUB>38</SUB>>", "177": "<(LITERAL,1,remainingTigerChars.length() - 1)<SUB>38</SUB>>", "179": "<(IDENTIFIER,tigerChars,tigerChars.append('T'))<SUB>40</SUB>>", "181": "<(LOCAL,int diffCount: int)<SUB>42</SUB>>", "183": "<(IDENTIFIER,diffCount,int diffCount = stringDiffCount(positions, generated.toString()))<SUB>42</SUB>>", "185": "<(IDENTIFIER,this,stringDiffCount(positions, generated.toString()))<SUB>42</SUB>>", "187": "<(toString,generated.toString())<SUB>42</SUB>>", "189": "<(CONTROL_STRUCTURE,if (diffCount &lt; minDifference),if (diffCount &lt; minDifference))<SUB>43</SUB>>", "191": "<(IDENTIFIER,diffCount,diffCount &lt; minDifference)<SUB>43</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "195": "<(IDENTIFIER,minDifference,minDifference = diffCount)<SUB>44</SUB>>", "197": "<(&lt;operator&gt;.assignment,hamsterChars = new StringBuilder(1000))<SUB>50</SUB>>", "199": "<(&lt;operator&gt;.alloc,new StringBuilder(1000))<SUB>50</SUB>>", "13": "<(IDENTIFIER,hamsterChars,new StringBuilder(1000))<SUB>50</SUB>>", "202": "<(&lt;operator&gt;.assignment,tigerChars = new StringBuilder(1000))<SUB>51</SUB>>", "204": "<(&lt;operator&gt;.alloc,new StringBuilder(1000))<SUB>51</SUB>>", "14": "<(IDENTIFIER,tigerChars,new StringBuilder(1000))<SUB>51</SUB>>", "207": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; numTigers); i++),for (int i = 0; Some(i &lt; numTigers); i++))<SUB>52</SUB>>", "209": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>52</SUB>>", "211": "<(LITERAL,0,int i = 0)<SUB>52</SUB>>", "213": "<(IDENTIFIER,i,i &lt; numTigers)<SUB>52</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,i++)<SUB>52</SUB>>", "217": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "219": "<(IDENTIFIER,tigerChars,tigerChars.append('T'))<SUB>53</SUB>>", "16": "<(LOCAL,StringBuilder remainingHamsterChars: java.lang.StringBuilder)<SUB>55</SUB>>", "222": "<(IDENTIFIER,remainingHamsterChars,StringBuilder remainingHamsterChars = new StringBuilder(1000))<SUB>55</SUB>>", "224": "<(&lt;init&gt;,new StringBuilder(1000))<SUB>55</SUB>>", "225": "<(LITERAL,1000,new StringBuilder(1000))<SUB>55</SUB>>", "227": "<(LOCAL,int i: int)<SUB>56</SUB>>", "229": "<(IDENTIFIER,i,int i = 0)<SUB>56</SUB>>", "231": "<(&lt;operator&gt;.lessThan,i &lt; numHamsters)<SUB>56</SUB>>", "233": "<(IDENTIFIER,numHamsters,i &lt; numHamsters)<SUB>56</SUB>>", "235": "<(IDENTIFIER,i,i++)<SUB>56</SUB>>", "237": "<(append,remainingHamsterChars.append('H'))<SUB>57</SUB>>", "239": "<(LITERAL,'H',remainingHamsterChars.append('H'))<SUB>57</SUB>>", "241": "<(LOCAL,int i: int)<SUB>60</SUB>>", "243": "<(IDENTIFIER,i,int i = 0)<SUB>60</SUB>>", "245": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= numHamsters)<SUB>60</SUB>>", "247": "<(IDENTIFIER,numHamsters,i &lt;= numHamsters)<SUB>60</SUB>>", "249": "<(IDENTIFIER,i,i++)<SUB>60</SUB>>", "18": "<(LOCAL,StringBuilder generated: java.lang.StringBuilder)<SUB>61</SUB>>", "252": "<(IDENTIFIER,generated,StringBuilder generated = new StringBuilder())<SUB>61</SUB>>", "254": "<(&lt;init&gt;,new StringBuilder())<SUB>61</SUB>>", "255": "<(append,generated.append(hamsterChars))<SUB>62</SUB>>", "257": "<(IDENTIFIER,hamsterChars,generated.append(hamsterChars))<SUB>62</SUB>>", "259": "<(IDENTIFIER,generated,generated.append(tigerChars))<SUB>63</SUB>>", "261": "<(append,generated.append(remainingHamsterChars))<SUB>64</SUB>>", "263": "<(IDENTIFIER,remainingHamsterChars,generated.append(remainingHamsterChars))<SUB>64</SUB>>", "265": "<(&lt;operator&gt;.greaterEqualsThan,remainingHamsterChars.length() &gt;= 1)<SUB>68</SUB>>", "267": "<(IDENTIFIER,remainingHamsterChars,remainingHamsterChars.length())<SUB>68</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>>", "271": "<(IDENTIFIER,remainingHamsterChars,remainingHamsterChars.deleteCharAt(remainingHamsterChars.length() - 1))<SUB>69</SUB>>", "273": "<(length,remainingHamsterChars.length())<SUB>69</SUB>>", "275": "<(LITERAL,1,remainingHamsterChars.length() - 1)<SUB>69</SUB>>", "277": "<(IDENTIFIER,hamsterChars,hamsterChars.append('H'))<SUB>71</SUB>>", "279": "<(LOCAL,int diffCount: int)<SUB>73</SUB>>", "281": "<(IDENTIFIER,diffCount,int diffCount = stringDiffCount(positions, generated.toString()))<SUB>73</SUB>>", "283": "<(IDENTIFIER,this,stringDiffCount(positions, generated.toString()))<SUB>73</SUB>>", "285": "<(toString,generated.toString())<SUB>73</SUB>>", "287": "<(CONTROL_STRUCTURE,if (diffCount &lt; minDifference),if (diffCount &lt; minDifference))<SUB>74</SUB>>", "289": "<(IDENTIFIER,diffCount,diffCount &lt; minDifference)<SUB>74</SUB>>", "291": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>>", "293": "<(IDENTIFIER,minDifference,minDifference = diffCount)<SUB>75</SUB>>", "295": "<(println,System.out.println(minDifference / 2))<SUB>79</SUB>>", "297": "<(IDENTIFIER,System,System.out.println(minDifference / 2))<SUB>79</SUB>>", "299": "<(&lt;operator&gt;.division,minDifference / 2)<SUB>79</SUB>>", "301": "<(LITERAL,2,minDifference / 2)<SUB>79</SUB>>", "303": "<(MODIFIER,STATIC)>"}}