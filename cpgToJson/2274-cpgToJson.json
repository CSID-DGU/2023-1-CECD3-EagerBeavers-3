{"edges": [["19", "20"], ["19", "21"], ["19", "304"], ["19", "305"], ["19", "306"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "51"], ["21", "52"], ["21", "56"], ["21", "82"], ["21", "83"], ["21", "87"], ["21", "88"], ["21", "91"], ["21", "117"], ["21", "118"], ["21", "127"], ["21", "128"], ["21", "137"], ["21", "138"], ["21", "142"], ["21", "149"], ["21", "173"], ["21", "202"], ["21", "291"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "73"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "72"], ["70", "71"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["83", "84"], ["83", "85"], ["85", "86"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["91", "96"], ["91", "99"], ["91", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "108"], ["102", "111"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["108", "109"], ["109", "110"], ["111", "112"], ["112", "113"], ["113", "114"], ["114", "115"], ["114", "116"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "140"], ["140", "141"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["173", "178"], ["173", "183"], ["173", "185"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["185", "193"], ["186", "187"], ["186", "192"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "210"], ["202", "212"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["212", "246"], ["212", "257"], ["213", "214"], ["213", "215"], ["213", "218"], ["213", "223"], ["213", "225"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["225", "226"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["238", "241"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["257", "258"], ["257", "259"], ["257", "262"], ["257", "267"], ["257", "269"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "266"], ["267", "268"], ["269", "270"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["276", "277"], ["276", "290"], ["277", "278"], ["277", "285"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["22", "29"], ["25", "40"], ["37", "48"], ["44", "54"], ["52", "58"], ["83", "88"], ["88", "93"], ["118", "133"], ["128", "140"], ["138", "143"], ["142", "151"], ["291", "306"], ["24", "22"], ["39", "37"], ["46", "44"], ["54", "52"], ["58", "61"], ["61", "70"], ["61", "85"], ["64", "61"], ["85", "83"], ["93", "96"], ["96", "104"], ["96", "123"], ["99", "96"], ["120", "118"], ["130", "128"], ["140", "138"], ["143", "146"], ["146", "142"], ["151", "154"], ["154", "161"], ["154", "175"], ["157", "154"], ["175", "180"], ["178", "188"], ["178", "204"], ["183", "180"], ["204", "207"], ["207", "215"], ["207", "294"], ["210", "207"], ["292", "298"], ["295", "291"], ["27", "34"], ["30", "25"], ["40", "39"], ["48", "46"], ["67", "74"], ["73", "64"], ["122", "120"], ["132", "130"], ["160", "157"], ["180", "178"], ["186", "195"], ["193", "183"], ["246", "259"], ["294", "292"], ["296", "301"], ["301", "295"], ["29", "27"], ["32", "30"], ["69", "67"], ["74", "78"], ["77", "73"], ["103", "109"], ["103", "114"], ["123", "122"], ["133", "132"], ["161", "167"], ["164", "160"], ["187", "186"], ["194", "199"], ["199", "193"], ["215", "220"], ["218", "228"], ["218", "248"], ["223", "220"], ["247", "253"], ["252", "246"], ["259", "264"], ["262", "272"], ["262", "210"], ["267", "264"], ["298", "296"], ["34", "32"], ["70", "69"], ["78", "77"], ["104", "103"], ["109", "99"], ["165", "170"], ["170", "164"], ["188", "187"], ["195", "194"], ["220", "218"], ["226", "223"], ["248", "247"], ["253", "252"], ["264", "262"], ["270", "267"], ["113", "99"], ["167", "165"], ["227", "235"], ["232", "226"], ["271", "279"], ["276", "270"], ["114", "113"], ["228", "227"], ["233", "243"], ["238", "232"], ["272", "271"], ["277", "276"], ["235", "233"], ["241", "238"], ["278", "286"], ["285", "277"], ["243", "241"], ["279", "282"], ["282", "278"], ["286", "285"], ["19", "24"], ["20", "306"], ["22", "306"], ["27", "306"], ["30", "306"], ["30", "306"], ["30", "306"], ["25", "306"], ["37", "306"], ["40", "306"], ["39", "306"], ["37", "306"], ["37", "306"], ["46", "306"], ["44", "306"], ["44", "306"], ["52", "306"], ["52", "306"], ["52", "306"], ["83", "306"], ["83", "306"], ["83", "306"], ["88", "306"], ["96", "306"], ["118", "306"], ["118", "306"], ["128", "306"], ["130", "306"], ["128", "306"], ["128", "306"], ["138", "306"], ["138", "306"], ["138", "306"], ["142", "306"], ["142", "306"], ["175", "306"], ["178", "306"], ["178", "306"], ["204", "306"], ["207", "306"], ["207", "306"], ["291", "306"], ["301", "306"], ["301", "306"], ["291", "306"], ["291", "306"], ["215", "306"], ["246", "306"], ["246", "306"], ["246", "306"], ["259", "306"], ["262", "306"], ["262", "306"], ["262", "306"], ["210", "306"], ["270", "306"], ["277", "306"], ["277", "306"], ["276", "306"], ["270", "306"], ["270", "306"], ["267", "306"], ["226", "306"], ["238", "306"], ["226", "306"], ["226", "306"], ["223", "306"], ["186", "306"], ["186", "306"], ["193", "306"], ["193", "306"], ["193", "306"], ["183", "306"], ["160", "306"], ["164", "306"], ["164", "306"], ["160", "306"], ["160", "306"], ["157", "306"], ["103", "306"], ["103", "306"], ["113", "306"], ["113", "306"], ["109", "306"], ["99", "306"], ["67", "306"], ["70", "306"], ["69", "306"], ["67", "306"], ["67", "306"], ["73", "306"], ["77", "306"], ["73", "306"], ["73", "306"], ["64", "306"], ["46", "306"], ["238", "306"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["46", "44"], ["54", "52"], ["85", "83"], ["19", "88"], ["120", "118"], ["120", "118"], ["130", "128"], ["130", "128"], ["140", "138"], ["83", "142"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "58"], ["19", "93"], ["19", "151"], ["19", "175"], ["19", "204"], ["19", "27"], ["19", "35"], ["40", "39"], ["19", "39"], ["19", "46"], ["37", "46"], ["44", "54"], ["19", "54"], ["58", "61"], ["64", "61"], ["19", "61"], ["54", "61"], ["61", "64"], ["19", "64"], ["69", "67"], ["69", "67"], ["77", "73"], ["77", "73"], ["61", "85"], ["19", "85"], ["93", "96"], ["99", "96"], ["19", "96"], ["85", "96"], ["96", "99"], ["19", "99"], ["123", "120"], ["19", "120"], ["123", "120"], ["133", "130"], ["19", "130"], ["133", "130"], ["130", "140"], ["19", "140"], ["151", "154"], ["157", "154"], ["19", "154"], ["140", "154"], ["167", "157"], ["19", "157"], ["138", "160"], ["83", "160"], ["175", "178"], ["183", "178"], ["19", "178"], ["138", "178"], ["142", "178"], ["19", "183"], ["178", "183"], ["19", "186"], ["178", "193"], ["19", "193"], ["204", "207"], ["210", "207"], ["19", "207"], ["154", "207"], ["207", "210"], ["243", "210"], ["19", "210"], ["27", "30"], ["19", "30"], ["25", "40"], ["19", "40"], ["123", "122"], ["123", "122"], ["19", "122"], ["133", "132"], ["133", "132"], ["19", "132"], ["19", "215"], ["19", "259"], ["133", "301"], ["19", "301"], ["298", "301"], ["70", "69"], ["19", "69"], ["46", "77"], ["67", "77"], ["19", "77"], ["52", "103"], ["73", "103"], ["19", "103"], ["96", "123"], ["19", "123"], ["88", "123"], ["109", "123"], ["123", "133"], ["19", "133"], ["120", "133"], ["138", "164"], ["83", "164"], ["178", "199"], ["19", "199"], ["215", "218"], ["223", "218"], ["19", "218"], ["138", "218"], ["262", "218"], ["160", "218"], ["238", "223"], ["19", "223"], ["259", "262"], ["267", "262"], ["19", "262"], ["138", "262"], ["218", "262"], ["282", "267"], ["19", "267"], ["276", "270"], ["276", "270"], ["207", "298"], ["19", "298"], ["40", "70"], ["19", "70"], ["88", "109"], ["19", "109"], ["83", "113"], ["154", "167"], ["19", "167"], ["226", "276"], ["19", "276"], ["19", "238"], ["218", "238"], ["138", "238"], ["226", "277"], ["207", "235"], ["243", "235"], ["19", "235"], ["235", "243"], ["19", "243"], ["262", "282"], ["19", "282"], ["61", "73"], ["61", "77"], ["61", "64"], ["61", "69"], ["61", "67"], ["61", "74"], ["61", "61"], ["61", "70"], ["61", "78"], ["96", "96"], ["96", "103"], ["96", "104"], ["96", "99"], ["154", "167"], ["154", "154"], ["154", "161"], ["154", "170"], ["154", "164"], ["154", "160"], ["154", "157"], ["154", "165"], ["178", "188"], ["178", "178"], ["178", "195"], ["178", "187"], ["178", "194"], ["178", "186"], ["178", "180"], ["178", "183"], ["178", "193"], ["178", "199"], ["207", "215"], ["207", "262"], ["207", "264"], ["207", "247"], ["207", "259"], ["207", "246"], ["207", "207"], ["207", "252"], ["207", "210"], ["207", "253"], ["207", "220"], ["207", "248"], ["207", "218"], ["103", "113"], ["103", "114"], ["103", "109"], ["218", "232"], ["218", "226"], ["218", "243"], ["218", "228"], ["218", "238"], ["218", "223"], ["218", "233"], ["218", "235"], ["218", "220"], ["218", "241"], ["218", "227"], ["218", "218"], ["262", "282"], ["262", "272"], ["262", "279"], ["262", "262"], ["262", "264"], ["262", "285"], ["262", "267"], ["262", "276"], ["262", "286"], ["262", "277"], ["262", "270"], ["262", "278"], ["262", "271"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,String[] sp = split(&quot; &quot;))<SUB>3</SUB>>", "39": "<(split,split(&quot; &quot;))<SUB>3</SUB>>", "41": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "43": "<(LOCAL,int n: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,n,int n = Integer.parseInt(sp[0]))<SUB>4</SUB>>", "47": "<(IDENTIFIER,Integer,Integer.parseInt(sp[0]))<SUB>4</SUB>>", "49": "<(IDENTIFIER,sp,Integer.parseInt(sp[0]))<SUB>4</SUB>>", "51": "<(LOCAL,char[] list: char[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,list,char[] list = new char[n])<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,new char[n])<SUB>5</SUB>>", "57": "<(LOCAL,int i: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.assignment,sp = split(&quot; &quot;))<SUB>7</SUB>>", "69": "<(split,split(&quot; &quot;))<SUB>7</SUB>>", "71": "<(IDENTIFIER,br,readLine())<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.assignment,list[i] = this.charAt(0))<SUB>8</SUB>>", "75": "<(IDENTIFIER,list,list[i] = this.charAt(0))<SUB>8</SUB>>", "77": "<(charAt,this.charAt(0))<SUB>8</SUB>>", "79": "<(IDENTIFIER,sp,this.charAt(0))<SUB>8</SUB>>", "81": "<(LITERAL,0,this.charAt(0))<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.assignment,int[] list2 = new int[n])<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.alloc,new int[n])>", "87": "<(LOCAL,int counter: int)<SUB>12</SUB>>", "89": "<(IDENTIFIER,counter,int counter = 0)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "95": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "97": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.equals,list[i] == 's')<SUB>14</SUB>>", "105": "<(IDENTIFIER,list,list[i] == 's')<SUB>14</SUB>>", "107": "<(LITERAL,'s',list[i] == 's')<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,counter++)<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,list2[counter]++)<SUB>18</SUB>>", "115": "<(IDENTIFIER,list2,list2[counter]++)<SUB>18</SUB>>", "117": "<(LOCAL,int[][] dp: int[][])<SUB>22</SUB>>", "119": "<(IDENTIFIER,dp,int[][] dp = new int[counter][n - counter + 1])<SUB>22</SUB>>", "121": "<(IDENTIFIER,counter,new int[counter][n - counter + 1])<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.subtraction,n - counter)<SUB>22</SUB>>", "125": "<(IDENTIFIER,counter,n - counter)<SUB>22</SUB>>", "127": "<(LOCAL,int[][] dpsum: int[][])<SUB>23</SUB>>", "129": "<(IDENTIFIER,dpsum,int[][] dpsum = new int[counter][n - counter + 1])<SUB>23</SUB>>", "131": "<(IDENTIFIER,counter,new int[counter][n - counter + 1])<SUB>23</SUB>>", "133": "<(&lt;operator&gt;.subtraction,n - counter)<SUB>23</SUB>>", "135": "<(IDENTIFIER,counter,n - counter)<SUB>23</SUB>>", "137": "<(LOCAL,int[] count: int[])<SUB>24</SUB>>", "139": "<(IDENTIFIER,count,int[] count = new int[counter])<SUB>24</SUB>>", "141": "<(IDENTIFIER,counter,new int[counter])<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,count[0])<SUB>25</SUB>>", "145": "<(LITERAL,0,count[0] = list2[0])<SUB>25</SUB>>", "147": "<(IDENTIFIER,list2,count[0] = list2[0])<SUB>25</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; counter); i++),for (int i = 1; Some(i &lt; counter); i++))<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>26</SUB>>", "153": "<(LITERAL,1,int i = 1)<SUB>26</SUB>>", "155": "<(IDENTIFIER,i,i &lt; counter)<SUB>26</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,count[i])<SUB>27</SUB>>", "163": "<(IDENTIFIER,i,count[i] = count[i - 1] + list2[i])<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,count[i - 1])<SUB>27</SUB>>", "167": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>27</SUB>>", "169": "<(LITERAL,1,i - 1)<SUB>27</SUB>>", "171": "<(IDENTIFIER,list2,count[i - 1] + list2[i])<SUB>27</SUB>>", "173": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= count[0]); i++),for (int i = 0; Some(i &lt;= count[0]); i++))<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "177": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "179": "<(IDENTIFIER,i,i &lt;= count[0])<SUB>30</SUB>>", "181": "<(IDENTIFIER,count,i &lt;= count[0])<SUB>30</SUB>>", "183": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[0][i])<SUB>31</SUB>>", "189": "<(IDENTIFIER,dp,dp[0][i] = 1)<SUB>31</SUB>>", "191": "<(IDENTIFIER,i,dp[0][i] = 1)<SUB>31</SUB>>", "193": "<(&lt;operator&gt;.assignment,dpsum[0][i] = i + 1)<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dpsum[0])<SUB>32</SUB>>", "197": "<(LITERAL,0,dpsum[0][i] = i + 1)<SUB>32</SUB>>", "199": "<(&lt;operator&gt;.addition,i + 1)<SUB>32</SUB>>", "201": "<(LITERAL,1,i + 1)<SUB>32</SUB>>", "203": "<(LOCAL,int i: int)<SUB>34</SUB>>", "205": "<(IDENTIFIER,i,int i = 1)<SUB>34</SUB>>", "207": "<(&lt;operator&gt;.lessThan,i &lt; counter)<SUB>34</SUB>>", "209": "<(IDENTIFIER,counter,i &lt; counter)<SUB>34</SUB>>", "211": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "213": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= count[i]); j++),for (int j = 0; Some(j &lt;= count[i]); j++))<SUB>35</SUB>>", "215": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>35</SUB>>", "217": "<(LITERAL,0,int j = 0)<SUB>35</SUB>>", "219": "<(IDENTIFIER,j,j &lt;= count[i])<SUB>35</SUB>>", "221": "<(IDENTIFIER,count,j &lt;= count[i])<SUB>35</SUB>>", "223": "<(&lt;operator&gt;.postIncrement,j++)<SUB>35</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>36</SUB>>", "229": "<(IDENTIFIER,dp,dp[i][j] = dpsum[i - 1][Math.min(j, count[i - 1])])<SUB>36</SUB>>", "231": "<(IDENTIFIER,j,dp[i][j] = dpsum[i - 1][Math.min(j, count[i - 1])])<SUB>36</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,dpsum[i - 1])<SUB>36</SUB>>", "235": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>36</SUB>>", "237": "<(LITERAL,1,i - 1)<SUB>36</SUB>>", "239": "<(IDENTIFIER,Math,Math.min(j, count[i - 1]))<SUB>36</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,count[i - 1])<SUB>36</SUB>>", "243": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>36</SUB>>", "245": "<(LITERAL,1,i - 1)<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dpsum[i][0])<SUB>38</SUB>>", "249": "<(IDENTIFIER,dpsum,dpsum[i][0] = dp[i][0])<SUB>38</SUB>>", "251": "<(LITERAL,0,dpsum[i][0] = dp[i][0])<SUB>38</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>38</SUB>>", "255": "<(IDENTIFIER,i,dpsum[i][0] = dp[i][0])<SUB>38</SUB>>", "257": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= count[i]); j++),for (int j = 1; Some(j &lt;= count[i]); j++))<SUB>39</SUB>>", "259": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>39</SUB>>", "261": "<(LITERAL,1,int j = 1)<SUB>39</SUB>>", "263": "<(IDENTIFIER,j,j &lt;= count[i])<SUB>39</SUB>>", "265": "<(IDENTIFIER,count,j &lt;= count[i])<SUB>39</SUB>>", "267": "<(&lt;operator&gt;.postIncrement,j++)<SUB>39</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dpsum[i][j])<SUB>40</SUB>>", "273": "<(IDENTIFIER,dpsum,dpsum[i][j] = (dpsum[i][j - 1] + dp[i][j]) % 1000000007)<SUB>40</SUB>>", "275": "<(IDENTIFIER,j,dpsum[i][j] = (dpsum[i][j - 1] + dp[i][j]) % 1000000007)<SUB>40</SUB>>", "277": "<(&lt;operator&gt;.addition,dpsum[i][j - 1] + dp[i][j])<SUB>40</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,dpsum[i])<SUB>40</SUB>>", "281": "<(IDENTIFIER,i,dpsum[i][j - 1] + dp[i][j])<SUB>40</SUB>>", "283": "<(IDENTIFIER,j,j - 1)<SUB>40</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>40</SUB>>", "287": "<(IDENTIFIER,dp,dpsum[i][j - 1] + dp[i][j])<SUB>40</SUB>>", "289": "<(IDENTIFIER,j,dpsum[i][j - 1] + dp[i][j])<SUB>40</SUB>>", "291": "<(println,System.out.println(dp[counter - 1][n - counter]))<SUB>44</SUB>>", "293": "<(IDENTIFIER,System,System.out.println(dp[counter - 1][n - counter]))<SUB>44</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dp[counter - 1][n - counter])<SUB>44</SUB>>", "297": "<(IDENTIFIER,dp,System.out.println(dp[counter - 1][n - counter]))<SUB>44</SUB>>", "299": "<(IDENTIFIER,counter,counter - 1)<SUB>44</SUB>>", "301": "<(&lt;operator&gt;.subtraction,n - counter)<SUB>44</SUB>>", "303": "<(IDENTIFIER,counter,n - counter)<SUB>44</SUB>>", "305": "<(MODIFIER,STATIC)>"}}