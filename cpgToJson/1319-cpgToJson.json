{"edges": [["19", "20"], ["19", "21"], ["19", "126"], ["19", "127"], ["19", "128"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "28"], ["21", "4"], ["21", "43"], ["21", "46"], ["21", "62"], ["21", "112"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["30", "40"], ["32", "33"], ["32", "36"], ["32", "39"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "3"], ["46", "47"], ["47", "48"], ["47", "51"], ["47", "61"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "57"], ["53", "60"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["62", "63"], ["63", "64"], ["63", "65"], ["63", "69"], ["63", "70"], ["63", "74"], ["63", "105"], ["65", "66"], ["65", "67"], ["67", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "88"], ["78", "89"], ["78", "96"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "87"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["91", "94"], ["91", "95"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "125"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "124"], ["120", "121"], ["120", "123"], ["121", "122"], ["23", "35"], ["23", "42"], ["28", "45"], ["43", "50"], ["46", "67"], ["112", "128"], ["25", "23"], ["30", "28"], ["45", "43"], ["113", "121"], ["116", "112"], ["40", "30"], ["48", "56"], ["51", "46"], ["65", "72"], ["70", "75"], ["105", "115"], ["115", "113"], ["117", "116"], ["33", "36"], ["36", "30"], ["42", "40"], ["50", "48"], ["67", "65"], ["72", "70"], ["75", "83"], ["75", "108"], ["106", "109"], ["109", "105"], ["119", "117"], ["35", "33"], ["54", "57"], ["57", "51"], ["79", "91"], ["89", "100"], ["96", "108"], ["108", "106"], ["120", "119"], ["56", "54"], ["81", "79"], ["91", "89"], ["98", "96"], ["121", "120"], ["82", "81"], ["99", "98"], ["83", "82"], ["100", "99"], ["19", "25"], ["20", "128"], ["23", "128"], ["36", "128"], ["36", "128"], ["28", "128"], ["28", "128"], ["43", "128"], ["51", "128"], ["54", "128"], ["57", "128"], ["57", "128"], ["57", "128"], ["51", "128"], ["46", "128"], ["65", "128"], ["70", "128"], ["72", "128"], ["70", "128"], ["70", "128"], ["75", "128"], ["82", "128"], ["81", "128"], ["79", "128"], ["79", "128"], ["91", "128"], ["89", "128"], ["89", "128"], ["100", "128"], ["99", "128"], ["98", "128"], ["98", "128"], ["96", "128"], ["96", "128"], ["109", "128"], ["105", "128"], ["105", "128"], ["112", "128"], ["121", "128"], ["120", "128"], ["120", "128"], ["119", "128"], ["117", "128"], ["116", "128"], ["112", "128"], ["91", "128"], ["30", "128"], ["19", "20"], ["25", "23"], ["33", "28"], ["36", "28"], ["25", "28"], ["19", "43"], ["43", "46"], ["19", "46"], ["54", "46"], ["51", "46"], ["121", "112"], ["19", "112"], ["119", "112"], ["119", "112"], ["19", "25"], ["33", "30"], ["36", "30"], ["25", "30"], ["19", "48"], ["19", "61"], ["67", "65"], ["72", "70"], ["19", "116"], ["119", "116"], ["119", "116"], ["19", "33"], ["19", "39"], ["48", "51"], ["19", "51"], ["54", "51"], ["57", "51"], ["25", "105"], ["109", "105"], ["109", "105"], ["19", "117"], ["119", "117"], ["119", "117"], ["33", "36"], ["19", "36"], ["19", "54"], ["19", "60"], ["46", "67"], ["19", "67"], ["67", "72"], ["19", "72"], ["65", "75"], ["19", "75"], ["81", "79"], ["81", "79"], ["91", "89"], ["91", "89"], ["91", "89"], ["91", "89"], ["98", "96"], ["98", "96"], ["75", "109"], ["96", "109"], ["19", "109"], ["120", "119"], ["120", "119"], ["19", "119"], ["54", "57"], ["19", "57"], ["28", "57"], ["121", "120"], ["23", "120"], ["19", "120"], ["82", "81"], ["82", "81"], ["19", "81"], ["19", "91"], ["70", "91"], ["81", "91"], ["100", "98"], ["100", "98"], ["19", "98"], ["91", "98"], ["25", "121"], ["105", "121"], ["19", "121"], ["83", "82"], ["83", "82"], ["19", "82"], ["100", "99"], ["100", "99"], ["19", "99"], ["19", "83"], ["75", "83"], ["79", "100"], ["19", "100"], ["89", "100"], ["75", "96"], ["75", "83"], ["75", "89"], ["75", "98"], ["75", "99"], ["75", "81"], ["75", "100"], ["75", "91"], ["75", "82"], ["75", "79"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,long beginTime = System.nanoTime())<SUB>2</SUB>>", "25": "<(nanoTime,System.nanoTime())<SUB>2</SUB>>", "27": "<(LOCAL,InputStream is: ANY)<SUB>3</SUB>>", "29": "<(IDENTIFIER,is,ANY is = DEBUG ? new FileInputStream(&quot;resources/codeforcesedu43/ProblemC-1.in&quot;) : System.in)<SUB>3</SUB>>", "31": "<(IDENTIFIER,DEBUG,DEBUG ? new FileInputStream(&quot;resources/codeforcesedu43/ProblemC-1.in&quot;) : System.in)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new FileInputStream(&quot;resources/codeforcesedu43/ProblemC-1.in&quot;))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,new FileInputStream(&quot;resources/codeforcesedu43/ProblemC-1.in&quot;))>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(IDENTIFIER,System,DEBUG ? new FileInputStream(&quot;resources/codeforcesedu43/ProblemC-1.in&quot;) : System.in)<SUB>3</SUB>>", "4": "<(LOCAL,Scanner scanner: ANY)<SUB>4</SUB>>", "44": "<(IDENTIFIER,scanner,ANY scanner = new Scanner(new BufferedReader(new InputStreamReader(is))))<SUB>4</SUB>>", "46": "<(&lt;init&gt;,new Scanner(new BufferedReader(new InputStreamReader(is))))<SUB>4</SUB>>", "47": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "49": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "51": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(is)))<SUB>4</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "55": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "57": "<(&lt;init&gt;,new InputStreamReader(is))<SUB>4</SUB>>", "59": "<(IDENTIFIER,is,new InputStreamReader(is))<SUB>4</SUB>>", "61": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "63": "<(BLOCK,try,try)<SUB>4</SUB>>", "65": "<(&lt;operator&gt;.assignment,long x = nextLong())<SUB>5</SUB>>", "67": "<(nextLong,nextLong())<SUB>5</SUB>>", "69": "<(LOCAL,long k: long)<SUB>6</SUB>>", "71": "<(IDENTIFIER,k,long k = nextLong())<SUB>6</SUB>>", "73": "<(IDENTIFIER,scanner,nextLong())<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.notEquals,x != 0)<SUB>7</SUB>>", "77": "<(LITERAL,0,x != 0)<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.assignment,x = (2 * x - 1) % MODULUS)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.modulo,(2 * x - 1) % MODULUS)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.multiplication,2 * x)<SUB>8</SUB>>", "85": "<(IDENTIFIER,x,2 * x)<SUB>8</SUB>>", "87": "<(IDENTIFIER,MODULUS,(2 * x - 1) % MODULUS)<SUB>8</SUB>>", "89": "<(&lt;operator&gt;.assignment,long twoPowK = modularPow(2, k, MODULUS))<SUB>9</SUB>>", "91": "<(modularPow,modularPow(2, k, MODULUS))<SUB>9</SUB>>", "93": "<(LITERAL,2,modularPow(2, k, MODULUS))<SUB>9</SUB>>", "95": "<(IDENTIFIER,MODULUS,modularPow(2, k, MODULUS))<SUB>9</SUB>>", "97": "<(IDENTIFIER,x,x = (x * twoPowK + 1) % MODULUS)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.addition,x * twoPowK + 1)<SUB>10</SUB>>", "101": "<(IDENTIFIER,x,x * twoPowK)<SUB>10</SUB>>", "103": "<(LITERAL,1,x * twoPowK + 1)<SUB>10</SUB>>", "105": "<(println,System.out.println(x % 1000000007))<SUB>12</SUB>>", "107": "<(IDENTIFIER,System,System.out.println(x % 1000000007))<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.modulo,x % 1000000007)<SUB>12</SUB>>", "111": "<(LITERAL,1000000007,x % 1000000007)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.fieldAccess,System.err)<SUB>14</SUB>>", "115": "<(FIELD_IDENTIFIER,err,err)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.addition,&quot;Done in &quot; + ((System.nanoTime() - beginTime) / 1e9))<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.division,(System.nanoTime() - beginTime) / 1e9)<SUB>14</SUB>>", "121": "<(nanoTime,System.nanoTime())<SUB>14</SUB>>", "123": "<(IDENTIFIER,beginTime,System.nanoTime() - beginTime)<SUB>14</SUB>>", "125": "<(LITERAL,&quot; seconds.&quot;,&quot;Done in &quot; + ((System.nanoTime() - beginTime) / 1e9) + &quot; seconds.&quot;)<SUB>14</SUB>>", "127": "<(MODIFIER,STATIC)>"}}