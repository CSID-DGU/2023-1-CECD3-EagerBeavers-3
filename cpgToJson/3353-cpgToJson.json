{"edges": [["19", "20"], ["19", "21"], ["19", "110"], ["19", "111"], ["19", "112"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "46"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "52"], ["46", "55"], ["46", "57"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "67"], ["57", "69"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "78"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["72", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "98"], ["79", "80"], ["79", "88"], ["80", "81"], ["80", "87"], ["81", "82"], ["81", "83"], ["81", "86"], ["83", "84"], ["83", "85"], ["88", "89"], ["88", "97"], ["89", "90"], ["89", "91"], ["89", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "49"], ["105", "112"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "52"], ["52", "59"], ["52", "108"], ["55", "52"], ["106", "105"], ["28", "26"], ["49", "47"], ["59", "64"], ["62", "75"], ["62", "55"], ["67", "64"], ["108", "106"], ["64", "62"], ["70", "83"], ["72", "70"], ["79", "102"], ["79", "67"], ["75", "72"], ["80", "79"], ["80", "93"], ["88", "79"], ["99", "104"], ["104", "112"], ["81", "80"], ["89", "88"], ["100", "99"], ["83", "81"], ["92", "89"], ["102", "100"], ["93", "92"], ["19", "24"], ["104", "112"], ["20", "112"], ["22", "112"], ["25", "112"], ["25", "112"], ["32", "112"], ["30", "112"], ["30", "112"], ["35", "112"], ["35", "112"], ["40", "112"], ["47", "112"], ["47", "112"], ["52", "112"], ["59", "112"], ["62", "112"], ["62", "112"], ["55", "112"], ["72", "112"], ["70", "112"], ["70", "112"], ["81", "112"], ["83", "112"], ["81", "112"], ["81", "112"], ["80", "112"], ["80", "112"], ["79", "112"], ["89", "112"], ["93", "112"], ["92", "112"], ["89", "112"], ["88", "112"], ["88", "112"], ["79", "112"], ["79", "112"], ["67", "112"], ["99", "112"], ["99", "112"], ["99", "112"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["22", "25"], ["19", "25"], ["49", "47"], ["49", "47"], ["19", "105"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["35", "42"], ["19", "42"], ["47", "52"], ["55", "52"], ["19", "52"], ["64", "55"], ["19", "55"], ["19", "59"], ["42", "49"], ["19", "49"], ["59", "62"], ["67", "62"], ["19", "62"], ["64", "62"], ["64", "62"], ["19", "67"], ["72", "67"], ["72", "70"], ["72", "70"], ["72", "70"], ["49", "64"], ["81", "64"], ["19", "64"], ["52", "64"], ["37", "72"], ["81", "72"], ["89", "72"], ["19", "72"], ["62", "72"], ["64", "72"], ["80", "79"], ["80", "79"], ["88", "79"], ["88", "79"], ["19", "104"], ["64", "75"], ["19", "75"], ["62", "75"], ["81", "80"], ["81", "80"], ["81", "80"], ["70", "80"], ["19", "80"], ["89", "88"], ["89", "88"], ["89", "88"], ["80", "88"], ["19", "88"], ["19", "99"], ["64", "99"], ["72", "81"], ["19", "81"], ["72", "81"], ["64", "81"], ["81", "89"], ["19", "89"], ["92", "89"], ["92", "89"], ["72", "83"], ["19", "83"], ["19", "92"], ["72", "92"], ["64", "92"], ["19", "93"], ["72", "93"], ["64", "93"], ["52", "64"], ["52", "106"], ["52", "59"], ["52", "105"], ["52", "108"], ["52", "62"], ["62", "75"], ["62", "52"], ["62", "81"], ["62", "72"], ["62", "79"], ["62", "80"], ["62", "83"], ["62", "70"], ["62", "55"], ["79", "64"], ["79", "99"], ["79", "102"], ["79", "67"], ["79", "104"], ["79", "100"], ["79", "62"], ["80", "89"], ["80", "92"], ["80", "93"], ["80", "88"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String s: java.lang.String)<SUB>3</SUB>>", "31": "<(IDENTIFIER,s,String s = next())<SUB>3</SUB>>", "33": "<(IDENTIFIER,input,next())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int n = s.length())<SUB>4</SUB>>", "37": "<(length,s.length())<SUB>4</SUB>>", "39": "<(LOCAL,int i: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,i,int i = n - 1)<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,n - 1)<SUB>5</SUB>>", "45": "<(LOCAL,CharSequence temp: java.lang.CharSequence)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,i = n - 1)<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>7</SUB>>", "51": "<(LITERAL,1,n - 1)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i &gt; 0)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postDecrement,i--)<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= n - i); j++),for (int j = 0; Some(j &lt;= n - i); j++))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "61": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "63": "<(IDENTIFIER,j,j &lt;= n - i)<SUB>8</SUB>>", "65": "<(IDENTIFIER,n,n - i)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "71": "<(IDENTIFIER,temp,temp = s.subSequence(j, i + j))<SUB>10</SUB>>", "73": "<(IDENTIFIER,s,s.subSequence(j, i + j))<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.addition,i + j)<SUB>10</SUB>>", "77": "<(IDENTIFIER,j,i + j)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.logicalOr,s.substring(j + 1, n).contains(temp) || s.substring(0, j + i - 1).contains(temp))<SUB>11</SUB>>", "81": "<(substring,s.substring(j + 1, n))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.addition,j + 1)<SUB>11</SUB>>", "85": "<(LITERAL,1,j + 1)<SUB>11</SUB>>", "87": "<(IDENTIFIER,temp,s.substring(j + 1, n).contains(temp))<SUB>11</SUB>>", "89": "<(substring,s.substring(0, j + i - 1))<SUB>11</SUB>>", "91": "<(LITERAL,0,s.substring(0, j + i - 1))<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.addition,j + i)<SUB>11</SUB>>", "95": "<(IDENTIFIER,i,j + i)<SUB>11</SUB>>", "97": "<(IDENTIFIER,temp,s.substring(0, j + i - 1).contains(temp))<SUB>11</SUB>>", "99": "<(println,System.out.println(i))<SUB>13</SUB>>", "101": "<(IDENTIFIER,System,System.out.println(i))<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,System.out.println(i))<SUB>13</SUB>>", "105": "<(println,System.out.println(0))<SUB>17</SUB>>", "107": "<(IDENTIFIER,System,System.out.println(0))<SUB>17</SUB>>", "109": "<(LITERAL,0,System.out.println(0))<SUB>17</SUB>>", "111": "<(MODIFIER,STATIC)>"}}