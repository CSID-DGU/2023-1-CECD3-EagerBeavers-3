{"edges": [["21", "23"], ["21", "187"], ["21", "188"], ["21", "189"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "54"], ["23", "61"], ["23", "154"], ["23", "155"], ["23", "158"], ["23", "182"], ["23", "185"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "79"], ["71", "151"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "78"], ["76", "77"], ["79", "80"], ["79", "83"], ["79", "119"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "112"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["125", "126"], ["125", "127"], ["125", "130"], ["125", "133"], ["125", "135"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["135", "136"], ["136", "137"], ["136", "144"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "150"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "181"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["182", "183"], ["182", "184"], ["185", "186"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "41"], ["41", "48"], ["45", "56"], ["54", "63"], ["155", "160"], ["182", "185"], ["185", "189"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["47", "45"], ["55", "54"], ["63", "66"], ["66", "76"], ["66", "155"], ["69", "66"], ["160", "163"], ["163", "177"], ["163", "182"], ["166", "163"], ["34", "32"], ["48", "51"], ["51", "47"], ["56", "55"], ["73", "80"], ["151", "69"], ["169", "166"], ["75", "73"], ["80", "85"], ["80", "121"], ["171", "169"], ["76", "75"], ["85", "90"], ["172", "171"], ["90", "93"], ["93", "107"], ["93", "151"], ["96", "93"], ["121", "127"], ["121", "151"], ["174", "172"], ["99", "114"], ["112", "96"], ["175", "174"], ["101", "99"], ["113", "112"], ["127", "130"], ["130", "138"], ["130", "151"], ["133", "130"], ["177", "175"], ["102", "101"], ["114", "113"], ["136", "133"], ["104", "102"], ["137", "147"], ["144", "136"], ["105", "104"], ["138", "141"], ["141", "137"], ["145", "144"], ["107", "105"], ["147", "145"], ["21", "26"], ["22", "189"], ["24", "189"], ["27", "189"], ["28", "189"], ["31", "189"], ["31", "189"], ["38", "189"], ["36", "189"], ["36", "189"], ["41", "189"], ["41", "189"], ["45", "189"], ["47", "189"], ["47", "189"], ["45", "189"], ["45", "189"], ["54", "189"], ["54", "189"], ["66", "189"], ["155", "189"], ["160", "189"], ["163", "189"], ["163", "189"], ["163", "189"], ["182", "189"], ["182", "189"], ["185", "189"], ["185", "189"], ["172", "189"], ["171", "189"], ["171", "189"], ["169", "189"], ["169", "189"], ["166", "189"], ["76", "189"], ["75", "189"], ["73", "189"], ["73", "189"], ["80", "189"], ["121", "189"], ["127", "189"], ["130", "189"], ["130", "189"], ["136", "189"], ["136", "189"], ["136", "189"], ["133", "189"], ["85", "189"], ["85", "189"], ["90", "189"], ["93", "189"], ["93", "189"], ["151", "189"], ["151", "189"], ["151", "189"], ["69", "189"], ["102", "189"], ["101", "189"], ["101", "189"], ["99", "189"], ["99", "189"], ["112", "189"], ["112", "189"], ["112", "189"], ["96", "189"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["21", "41"], ["47", "45"], ["47", "45"], ["21", "54"], ["21", "155"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "63"], ["21", "160"], ["31", "182"], ["21", "182"], ["155", "182"], ["169", "182"], ["182", "185"], ["21", "185"], ["27", "38"], ["21", "38"], ["36", "47"], ["21", "47"], ["63", "66"], ["69", "66"], ["21", "66"], ["130", "66"], ["36", "66"], ["66", "69"], ["147", "69"], ["107", "69"], ["21", "69"], ["75", "73"], ["75", "73"], ["73", "151"], ["21", "151"], ["160", "163"], ["166", "163"], ["21", "163"], ["66", "163"], ["177", "163"], ["163", "166"], ["21", "166"], ["171", "169"], ["171", "169"], ["36", "48"], ["21", "48"], ["21", "51"], ["36", "51"], ["76", "75"], ["21", "75"], ["41", "80"], ["151", "80"], ["21", "80"], ["21", "85"], ["155", "171"], ["169", "171"], ["21", "171"], ["101", "171"], ["38", "76"], ["21", "76"], ["66", "90"], ["21", "90"], ["155", "172"], ["169", "172"], ["21", "172"], ["90", "93"], ["96", "93"], ["21", "93"], ["93", "96"], ["21", "96"], ["101", "99"], ["101", "99"], ["99", "112"], ["21", "112"], ["80", "121"], ["21", "121"], ["21", "127"], ["85", "101"], ["21", "101"], ["99", "101"], ["127", "130"], ["133", "130"], ["21", "130"], ["66", "130"], ["21", "133"], ["130", "133"], ["163", "177"], ["21", "177"], ["85", "102"], ["21", "102"], ["99", "102"], ["130", "141"], ["21", "141"], ["66", "107"], ["21", "107"], ["66", "147"], ["21", "147"], ["66", "73"], ["66", "66"], ["66", "75"], ["66", "69"], ["66", "151"], ["66", "76"], ["66", "80"], ["163", "169"], ["163", "163"], ["163", "166"], ["163", "177"], ["163", "174"], ["163", "175"], ["163", "171"], ["163", "172"], ["80", "85"], ["80", "121"], ["80", "93"], ["80", "90"], ["93", "107"], ["93", "96"], ["93", "113"], ["93", "99"], ["93", "102"], ["93", "114"], ["93", "104"], ["93", "112"], ["93", "93"], ["93", "101"], ["93", "105"], ["121", "130"], ["121", "127"], ["130", "141"], ["130", "136"], ["130", "145"], ["130", "144"], ["130", "138"], ["130", "137"], ["130", "130"], ["130", "147"], ["130", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new MyScanner())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new MyScanner())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,int n: int)<SUB>6</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "41": "<(&lt;operator&gt;.assignment,char prev = ' ')<SUB>7</SUB>>", "43": "<(LITERAL,' ',char prev = ' ')<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[][] dp = new int[n + 1][n + 2])<SUB>10</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n + 1][n + 2])>", "49": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "51": "<(&lt;operator&gt;.addition,n + 2)<SUB>10</SUB>>", "53": "<(LITERAL,2,n + 2)<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>12</SUB>>", "57": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>12</SUB>>", "59": "<(LITERAL,0,dp[0][0] = 1)<SUB>12</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>13</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "69": "<(&lt;operator&gt;.preIncrement,++i)<SUB>13</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.assignment,char ch = charAt(0))<SUB>14</SUB>>", "75": "<(charAt,charAt(0))<SUB>14</SUB>>", "77": "<(IDENTIFIER,in,next())<SUB>14</SUB>>", "79": "<(CONTROL_STRUCTURE,if (prev == 's'),if (prev == 's'))<SUB>15</SUB>>", "81": "<(IDENTIFIER,prev,prev == 's')<SUB>15</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>16</SUB>>", "87": "<(LITERAL,0,int sum = 0)<SUB>16</SUB>>", "89": "<(LOCAL,int j: int)<SUB>17</SUB>>", "91": "<(IDENTIFIER,j,int j = n)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>17</SUB>>", "95": "<(LITERAL,0,j &gt;= 0)<SUB>17</SUB>>", "97": "<(IDENTIFIER,j,--j)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.assignment,sum = (sum + dp[i - 1][j]) % MOD)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.modulo,(sum + dp[i - 1][j]) % MOD)<SUB>18</SUB>>", "103": "<(IDENTIFIER,sum,sum + dp[i - 1][j])<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>18</SUB>>", "109": "<(LITERAL,1,i - 1)<SUB>18</SUB>>", "111": "<(IDENTIFIER,MOD,(sum + dp[i - 1][j]) % MOD)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>19</SUB>>", "115": "<(IDENTIFIER,dp,dp[i][j] = sum)<SUB>19</SUB>>", "117": "<(IDENTIFIER,j,dp[i][j] = sum)<SUB>19</SUB>>", "119": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.equals,prev == 'f')<SUB>21</SUB>>", "123": "<(LITERAL,'f',prev == 'f')<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); ++j),for (int j = 0; Some(j &lt; n); ++j))<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>22</SUB>>", "129": "<(LITERAL,0,int j = 0)<SUB>22</SUB>>", "131": "<(IDENTIFIER,j,j &lt; n)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.preIncrement,++j)<SUB>22</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,dp[i][j + 1])<SUB>23</SUB>>", "139": "<(IDENTIFIER,dp,dp[i][j + 1] = dp[i - 1][j])<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.addition,j + 1)<SUB>23</SUB>>", "143": "<(LITERAL,1,j + 1)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[i - 1])<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>23</SUB>>", "149": "<(LITERAL,1,i - 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignment,prev = ch)<SUB>27</SUB>>", "153": "<(IDENTIFIER,ch,prev = ch)<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.assignment,int result = 0)<SUB>30</SUB>>", "157": "<(LITERAL,0,int result = 0)<SUB>30</SUB>>", "159": "<(LOCAL,int i: int)<SUB>31</SUB>>", "161": "<(IDENTIFIER,i,int i = 0)<SUB>31</SUB>>", "163": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>31</SUB>>", "165": "<(IDENTIFIER,n,i &lt;= n)<SUB>31</SUB>>", "167": "<(IDENTIFIER,i,++i)<SUB>31</SUB>>", "169": "<(&lt;operator&gt;.assignment,result = (result + dp[n - 1][i]) % MOD)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.modulo,(result + dp[n - 1][i]) % MOD)<SUB>32</SUB>>", "173": "<(IDENTIFIER,result,result + dp[n - 1][i])<SUB>32</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,dp[n - 1])<SUB>32</SUB>>", "177": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>32</SUB>>", "179": "<(LITERAL,1,n - 1)<SUB>32</SUB>>", "181": "<(IDENTIFIER,MOD,(result + dp[n - 1][i]) % MOD)<SUB>32</SUB>>", "183": "<(IDENTIFIER,out,println(result))<SUB>36</SUB>>", "185": "<(close,close())<SUB>37</SUB>>", "187": "<(MODIFIER,PUBLIC)>", "189": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}