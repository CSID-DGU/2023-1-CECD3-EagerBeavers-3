{"edges": [["19", "21"], ["19", "277"], ["19", "278"], ["19", "279"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "46"], ["21", "52"], ["21", "53"], ["21", "59"], ["21", "88"], ["21", "126"], ["21", "127"], ["21", "134"], ["21", "153"], ["21", "218"], ["21", "219"], ["21", "222"], ["21", "270"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "69"], ["59", "71"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "81"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "106"], ["98", "107"], ["98", "113"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "105"], ["103", "104"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "112"], ["110", "111"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "163"], ["153", "165"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["165", "166"], ["165", "167"], ["165", "170"], ["165", "173"], ["165", "175"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["175", "176"], ["175", "177"], ["175", "184"], ["175", "187"], ["175", "189"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["187", "188"], ["189", "190"], ["189", "203"], ["190", "191"], ["190", "198"], ["191", "192"], ["191", "197"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "213"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["222", "227"], ["222", "232"], ["222", "234"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["234", "235"], ["234", "236"], ["234", "239"], ["234", "242"], ["234", "244"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["244", "254"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "264"], ["256", "269"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "49"], ["46", "56"], ["53", "61"], ["127", "136"], ["219", "224"], ["270", "279"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["55", "53"], ["61", "66"], ["64", "73"], ["64", "90"], ["69", "66"], ["90", "93"], ["93", "103"], ["93", "131"], ["96", "93"], ["129", "127"], ["136", "139"], ["139", "146"], ["139", "155"], ["142", "139"], ["144", "142"], ["155", "160"], ["158", "167"], ["158", "219"], ["163", "160"], ["224", "229"], ["227", "236"], ["227", "273"], ["232", "229"], ["271", "274"], ["274", "270"], ["28", "26"], ["49", "48"], ["56", "55"], ["66", "64"], ["72", "82"], ["81", "69"], ["100", "110"], ["107", "115"], ["113", "96"], ["131", "129"], ["145", "144"], ["160", "158"], ["167", "170"], ["170", "180"], ["170", "163"], ["173", "170"], ["229", "227"], ["236", "239"], ["239", "246"], ["239", "232"], ["242", "239"], ["273", "271"], ["73", "77"], ["76", "72"], ["82", "85"], ["85", "81"], ["102", "100"], ["109", "107"], ["114", "121"], ["119", "113"], ["146", "149"], ["149", "145"], ["177", "184"], ["184", "194"], ["184", "173"], ["187", "184"], ["245", "258"], ["245", "242"], ["254", "242"], ["77", "76"], ["103", "102"], ["110", "109"], ["115", "114"], ["120", "119"], ["179", "177"], ["190", "205"], ["190", "187"], ["203", "187"], ["246", "245"], ["246", "251"], ["249", "245"], ["256", "254"], ["121", "120"], ["180", "179"], ["191", "190"], ["191", "199"], ["198", "190"], ["204", "214"], ["213", "203"], ["251", "249"], ["257", "265"], ["257", "256"], ["264", "256"], ["192", "191"], ["199", "198"], ["205", "210"], ["208", "204"], ["214", "213"], ["258", "261"], ["261", "257"], ["265", "264"], ["194", "192"], ["210", "208"], ["19", "24"], ["20", "279"], ["22", "279"], ["25", "279"], ["25", "279"], ["30", "279"], ["37", "279"], ["35", "279"], ["35", "279"], ["40", "279"], ["40", "279"], ["40", "279"], ["46", "279"], ["46", "279"], ["46", "279"], ["53", "279"], ["53", "279"], ["53", "279"], ["93", "279"], ["93", "279"], ["127", "279"], ["127", "279"], ["127", "279"], ["136", "279"], ["139", "279"], ["219", "279"], ["224", "279"], ["227", "279"], ["229", "279"], ["227", "279"], ["227", "279"], ["270", "279"], ["274", "279"], ["270", "279"], ["270", "279"], ["236", "279"], ["239", "279"], ["239", "279"], ["232", "279"], ["245", "279"], ["249", "279"], ["245", "279"], ["245", "279"], ["256", "279"], ["256", "279"], ["254", "279"], ["254", "279"], ["242", "279"], ["167", "279"], ["170", "279"], ["170", "279"], ["163", "279"], ["179", "279"], ["177", "279"], ["177", "279"], ["184", "279"], ["184", "279"], ["173", "279"], ["192", "279"], ["191", "279"], ["190", "279"], ["190", "279"], ["190", "279"], ["208", "279"], ["203", "279"], ["203", "279"], ["203", "279"], ["187", "279"], ["144", "279"], ["144", "279"], ["142", "279"], ["100", "279"], ["100", "279"], ["107", "279"], ["110", "279"], ["109", "279"], ["107", "279"], ["107", "279"], ["113", "279"], ["119", "279"], ["113", "279"], ["113", "279"], ["96", "279"], ["72", "279"], ["76", "279"], ["72", "279"], ["72", "279"], ["81", "279"], ["81", "279"], ["81", "279"], ["69", "279"], ["77", "279"], ["85", "279"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["48", "46"], ["55", "53"], ["129", "127"], ["129", "127"], ["19", "219"], ["22", "25"], ["19", "25"], ["19", "61"], ["19", "90"], ["19", "136"], ["19", "144"], ["19", "155"], ["19", "224"], ["274", "270"], ["274", "270"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["49", "48"], ["49", "48"], ["56", "55"], ["56", "55"], ["61", "64"], ["69", "64"], ["19", "64"], ["66", "64"], ["66", "64"], ["85", "69"], ["19", "69"], ["76", "72"], ["76", "72"], ["85", "81"], ["85", "81"], ["90", "93"], ["96", "93"], ["19", "93"], ["35", "93"], ["93", "96"], ["19", "96"], ["102", "100"], ["102", "100"], ["109", "107"], ["109", "107"], ["119", "113"], ["19", "113"], ["131", "129"], ["19", "129"], ["131", "129"], ["136", "139"], ["142", "139"], ["19", "139"], ["129", "139"], ["149", "142"], ["19", "142"], ["155", "158"], ["163", "158"], ["19", "158"], ["160", "158"], ["160", "158"], ["158", "163"], ["192", "163"], ["208", "163"], ["19", "163"], ["19", "167"], ["224", "227"], ["232", "227"], ["19", "227"], ["229", "227"], ["229", "227"], ["227", "232"], ["19", "232"], ["19", "236"], ["219", "274"], ["254", "274"], ["19", "274"], ["19", "49"], ["42", "49"], ["19", "56"], ["49", "56"], ["19", "66"], ["56", "66"], ["19", "131"], ["66", "131"], ["19", "160"], ["139", "160"], ["170", "160"], ["167", "170"], ["173", "170"], ["19", "170"], ["160", "170"], ["184", "170"], ["170", "173"], ["19", "173"], ["53", "177"], ["81", "177"], ["19", "177"], ["19", "229"], ["160", "229"], ["239", "229"], ["236", "239"], ["242", "239"], ["19", "239"], ["229", "239"], ["239", "242"], ["249", "242"], ["19", "242"], ["19", "254"], ["77", "76"], ["77", "76"], ["19", "76"], ["19", "85"], ["77", "85"], ["103", "102"], ["19", "102"], ["110", "109"], ["19", "109"], ["19", "119"], ["19", "149"], ["139", "149"], ["177", "184"], ["187", "184"], ["19", "184"], ["170", "184"], ["194", "187"], ["210", "187"], ["19", "187"], ["46", "245"], ["72", "245"], ["249", "245"], ["249", "245"], ["219", "254"], ["19", "77"], ["64", "77"], ["37", "103"], ["110", "103"], ["19", "103"], ["103", "110"], ["19", "110"], ["53", "179"], ["81", "179"], ["19", "179"], ["191", "190"], ["191", "190"], ["239", "249"], ["19", "249"], ["53", "249"], ["81", "249"], ["19", "256"], ["192", "191"], ["192", "191"], ["19", "191"], ["158", "192"], ["208", "192"], ["19", "192"], ["194", "192"], ["194", "192"], ["192", "208"], ["19", "208"], ["210", "208"], ["210", "208"], ["19", "194"], ["184", "194"], ["19", "210"], ["194", "210"], ["64", "73"], ["64", "77"], ["64", "64"], ["64", "81"], ["64", "85"], ["64", "69"], ["64", "76"], ["64", "66"], ["64", "72"], ["64", "82"], ["93", "107"], ["93", "115"], ["93", "96"], ["93", "120"], ["93", "113"], ["93", "102"], ["93", "114"], ["93", "103"], ["93", "119"], ["93", "121"], ["93", "93"], ["93", "100"], ["93", "110"], ["93", "109"], ["139", "145"], ["139", "146"], ["139", "149"], ["139", "144"], ["139", "139"], ["139", "142"], ["158", "167"], ["158", "163"], ["158", "170"], ["158", "158"], ["158", "160"], ["227", "232"], ["227", "239"], ["227", "236"], ["227", "229"], ["227", "227"], ["170", "179"], ["170", "170"], ["170", "184"], ["170", "173"], ["170", "180"], ["170", "177"], ["239", "245"], ["239", "242"], ["239", "246"], ["239", "239"], ["184", "192"], ["184", "191"], ["184", "187"], ["184", "190"], ["184", "184"], ["184", "194"], ["245", "257"], ["245", "261"], ["245", "256"], ["245", "258"], ["245", "254"], ["190", "214"], ["190", "213"], ["190", "204"], ["190", "208"], ["190", "205"], ["190", "210"], ["190", "203"], ["246", "249"], ["246", "251"], ["191", "198"], ["191", "199"], ["257", "264"], ["257", "265"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] g: boolean[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,g,boolean[][] g = new boolean[n][n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "45": "<(LOCAL,boolean[] ok: boolean[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,ok,boolean[] ok = new boolean[1 &lt;&lt; n])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[] f = new int[1 &lt;&lt; n])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "57": "<(LITERAL,1,1 &lt;&lt; n)<SUB>7</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>8</SUB>>", "63": "<(LITERAL,1,int i = 1)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>8</SUB>>", "67": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,ok[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,ok[i] = Integer.bitCount(i) &gt;= 3)<SUB>9</SUB>>", "77": "<(bitCount,Integer.bitCount(i))<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,Integer.bitCount(i))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,f[i] = first(i))<SUB>10</SUB>>", "83": "<(IDENTIFIER,f,f[i] = first(i))<SUB>10</SUB>>", "85": "<(first,first(i))<SUB>10</SUB>>", "87": "<(IDENTIFIER,i,first(i))<SUB>10</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>12</SUB>>", "95": "<(IDENTIFIER,m,i &lt; m)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(LOCAL,int a: int)<SUB>13</SUB>>", "101": "<(IDENTIFIER,a,int a = in.nextInt() - 1)<SUB>13</SUB>>", "103": "<(nextInt,nextInt())<SUB>13</SUB>>", "105": "<(LITERAL,1,in.nextInt() - 1)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,int b = in.nextInt() - 1)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>14</SUB>>", "111": "<(IDENTIFIER,in,nextInt())<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,g[a][b] = g[b][a] = true)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,g[a])<SUB>15</SUB>>", "117": "<(IDENTIFIER,a,g[a][b] = g[b][a] = true)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,g[b][a] = true)<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,g[b])<SUB>15</SUB>>", "123": "<(IDENTIFIER,b,g[b][a] = true)<SUB>15</SUB>>", "125": "<(LITERAL,true,g[b][a] = true)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n][1 &lt;&lt; n])<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.alloc,new long[n][1 &lt;&lt; n])>", "131": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>17</SUB>>", "133": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>17</SUB>>", "135": "<(LOCAL,int i: int)<SUB>18</SUB>>", "137": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "141": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "143": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[i][1 &lt;&lt; i])<SUB>19</SUB>>", "147": "<(IDENTIFIER,dp,dp[i][1 &lt;&lt; i] = 1)<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>19</SUB>>", "151": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>19</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>20</SUB>>", "157": "<(LITERAL,1,int i = 1)<SUB>20</SUB>>", "159": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>20</SUB>>", "161": "<(LITERAL,1,1 &lt;&lt; n)<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "165": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "169": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "171": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "175": "<(CONTROL_STRUCTURE,for (int k = f[i] + 1; Some(k &lt; n); k++),for (int k = f[i] + 1; Some(k &lt; n); k++))<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.assignment,int k = f[i] + 1)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.addition,f[i] + 1)<SUB>22</SUB>>", "181": "<(IDENTIFIER,f,f[i] + 1)<SUB>22</SUB>>", "183": "<(LITERAL,1,f[i] + 1)<SUB>22</SUB>>", "185": "<(IDENTIFIER,k,k &lt; n)<SUB>22</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,k++)<SUB>22</SUB>>", "189": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; k)) == 0 &amp;&amp; g[j][k]),if ((i &amp; (1 &lt;&lt; k)) == 0 &amp;&amp; g[j][k]))<SUB>23</SUB>>", "191": "<(&lt;operator&gt;.equals,(i &amp; (1 &lt;&lt; k)) == 0)<SUB>23</SUB>>", "193": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; k))<SUB>23</SUB>>", "195": "<(LITERAL,1,1 &lt;&lt; k)<SUB>23</SUB>>", "197": "<(LITERAL,0,(i &amp; (1 &lt;&lt; k)) == 0)<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>23</SUB>>", "201": "<(IDENTIFIER,j,(i &amp; (1 &lt;&lt; k)) == 0 &amp;&amp; g[j][k])<SUB>23</SUB>>", "203": "<(&lt;operator&gt;.assignmentPlus,dp[k][i ^ (1 &lt;&lt; k)] += dp[j][i])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>24</SUB>>", "207": "<(IDENTIFIER,k,dp[k][i ^ (1 &lt;&lt; k)] += dp[j][i])<SUB>24</SUB>>", "209": "<(IDENTIFIER,i,i ^ (1 &lt;&lt; k))<SUB>24</SUB>>", "211": "<(LITERAL,1,1 &lt;&lt; k)<SUB>24</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[j][i])<SUB>24</SUB>>", "215": "<(IDENTIFIER,dp,dp[k][i ^ (1 &lt;&lt; k)] += dp[j][i])<SUB>24</SUB>>", "217": "<(IDENTIFIER,i,dp[k][i ^ (1 &lt;&lt; k)] += dp[j][i])<SUB>24</SUB>>", "219": "<(&lt;operator&gt;.assignment,long ret = 0)<SUB>25</SUB>>", "221": "<(LITERAL,0,long ret = 0)<SUB>25</SUB>>", "223": "<(LOCAL,int i: int)<SUB>26</SUB>>", "225": "<(IDENTIFIER,i,int i = 1)<SUB>26</SUB>>", "227": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>26</SUB>>", "229": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>26</SUB>>", "231": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>26</SUB>>", "233": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "235": "<(LOCAL,int j: int)<SUB>27</SUB>>", "237": "<(IDENTIFIER,j,int j = 0)<SUB>27</SUB>>", "239": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>27</SUB>>", "241": "<(IDENTIFIER,n,j &lt; n)<SUB>27</SUB>>", "243": "<(IDENTIFIER,j,j++)<SUB>27</SUB>>", "245": "<(&lt;operator&gt;.logicalAnd,ok[i] &amp;&amp; j != f[i])<SUB>28</SUB>>", "247": "<(IDENTIFIER,ok,ok[i] &amp;&amp; j != f[i])<SUB>28</SUB>>", "249": "<(&lt;operator&gt;.notEquals,j != f[i])<SUB>28</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,f[i])<SUB>28</SUB>>", "253": "<(IDENTIFIER,i,j != f[i])<SUB>28</SUB>>", "255": "<(IDENTIFIER,ret,ret += g[j][f[i]] ? dp[j][i] : 0)<SUB>29</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,g[j][f[i]])<SUB>29</SUB>>", "259": "<(IDENTIFIER,g,g[j][f[i]] ? dp[j][i] : 0)<SUB>29</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,f[i])<SUB>29</SUB>>", "263": "<(IDENTIFIER,i,g[j][f[i]] ? dp[j][i] : 0)<SUB>29</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>29</SUB>>", "267": "<(IDENTIFIER,j,g[j][f[i]] ? dp[j][i] : 0)<SUB>29</SUB>>", "269": "<(LITERAL,0,g[j][f[i]] ? dp[j][i] : 0)<SUB>29</SUB>>", "271": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "273": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "275": "<(IDENTIFIER,ret,ret / 2)<SUB>30</SUB>>", "277": "<(MODIFIER,PUBLIC)>", "279": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}