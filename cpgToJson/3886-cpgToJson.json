{"edges": [["29", "30"], ["29", "31"], ["29", "184"], ["29", "185"], ["29", "186"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "46"], ["31", "49"], ["31", "53"], ["31", "54"], ["31", "60"], ["31", "182"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "40"], ["36", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "65"], ["61", "62"], ["61", "64"], ["62", "63"], ["65", "66"], ["65", "67"], ["65", "8"], ["65", "73"], ["65", "76"], ["65", "77"], ["65", "78"], ["65", "10"], ["65", "84"], ["65", "87"], ["65", "91"], ["65", "94"], ["65", "97"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["76", "7"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["87", "9"], ["87", "88"], ["87", "89"], ["87", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "107"], ["97", "109"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "117"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["115", "116"], ["117", "118"], ["117", "121"], ["118", "119"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "127"], ["123", "124"], ["123", "125"], ["125", "126"], ["127", "128"], ["127", "131"], ["127", "154"], ["128", "129"], ["128", "130"], ["131", "12"], ["131", "132"], ["131", "135"], ["131", "144"], ["131", "147"], ["131", "150"], ["131", "153"], ["132", "133"], ["132", "134"], ["135", "11"], ["135", "136"], ["135", "137"], ["135", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["142", "143"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["154", "155"], ["155", "156"], ["155", "163"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "14"], ["163", "164"], ["163", "167"], ["163", "175"], ["163", "178"], ["163", "181"], ["164", "165"], ["164", "166"], ["167", "13"], ["167", "168"], ["167", "169"], ["167", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["182", "183"], ["32", "39"], ["35", "48"], ["46", "52"], ["49", "58"], ["54", "62"], ["182", "186"], ["34", "32"], ["48", "46"], ["50", "49"], ["56", "54"], ["61", "71"], ["61", "182"], ["37", "44"], ["40", "35"], ["52", "50"], ["58", "56"], ["62", "61"], ["67", "75"], ["73", "76"], ["76", "82"], ["78", "86"], ["84", "87"], ["87", "91"], ["91", "94"], ["94", "99"], ["39", "37"], ["42", "40"], ["69", "67"], ["75", "73"], ["80", "78"], ["86", "84"], ["99", "104"], ["102", "62"], ["102", "115"], ["107", "104"], ["44", "42"], ["71", "69"], ["82", "80"], ["104", "102"], ["111", "119"], ["113", "111"], ["118", "125"], ["118", "107"], ["115", "113"], ["119", "118"], ["123", "128"], ["125", "123"], ["128", "134"], ["128", "159"], ["132", "140"], ["135", "144"], ["144", "147"], ["147", "150"], ["150", "107"], ["134", "132"], ["137", "142"], ["142", "135"], ["156", "119"], ["156", "166"], ["138", "137"], ["157", "160"], ["160", "156"], ["164", "171"], ["167", "175"], ["175", "178"], ["178", "107"], ["140", "138"], ["159", "157"], ["166", "164"], ["169", "174"], ["172", "167"], ["171", "169"], ["174", "172"], ["29", "34"], ["30", "186"], ["32", "186"], ["37", "186"], ["40", "186"], ["40", "186"], ["40", "186"], ["35", "186"], ["46", "186"], ["49", "186"], ["49", "186"], ["56", "186"], ["58", "186"], ["56", "186"], ["54", "186"], ["54", "186"], ["62", "186"], ["61", "186"], ["61", "186"], ["182", "186"], ["182", "186"], ["67", "186"], ["73", "186"], ["76", "186"], ["78", "186"], ["80", "186"], ["82", "186"], ["80", "186"], ["78", "186"], ["78", "186"], ["84", "186"], ["87", "186"], ["91", "186"], ["91", "186"], ["94", "186"], ["94", "186"], ["99", "186"], ["102", "186"], ["104", "186"], ["102", "186"], ["102", "186"], ["111", "186"], ["113", "186"], ["115", "186"], ["113", "186"], ["111", "186"], ["111", "186"], ["119", "186"], ["118", "186"], ["118", "186"], ["123", "186"], ["123", "186"], ["123", "186"], ["128", "186"], ["128", "186"], ["156", "186"], ["160", "186"], ["156", "186"], ["156", "186"], ["164", "186"], ["167", "186"], ["167", "186"], ["167", "186"], ["167", "186"], ["175", "186"], ["175", "186"], ["178", "186"], ["178", "186"], ["132", "186"], ["135", "186"], ["135", "186"], ["135", "186"], ["144", "186"], ["144", "186"], ["147", "186"], ["147", "186"], ["150", "186"], ["150", "186"], ["107", "186"], ["29", "30"], ["29", "32"], ["29", "46"], ["56", "54"], ["56", "54"], ["32", "35"], ["29", "35"], ["37", "35"], ["40", "35"], ["46", "49"], ["29", "49"], ["49", "182"], ["94", "182"], ["178", "182"], ["150", "182"], ["29", "182"], ["29", "37"], ["29", "45"], ["29", "56"], ["58", "56"], ["62", "61"], ["29", "61"], ["69", "67"], ["69", "67"], ["29", "73"], ["80", "78"], ["80", "78"], ["29", "84"], ["37", "40"], ["29", "40"], ["35", "58"], ["29", "58"], ["54", "62"], ["29", "62"], ["73", "76"], ["29", "76"], ["84", "87"], ["29", "87"], ["76", "91"], ["29", "91"], ["87", "91"], ["49", "94"], ["178", "94"], ["150", "94"], ["29", "94"], ["91", "94"], ["29", "99"], ["56", "69"], ["80", "69"], ["113", "69"], ["29", "69"], ["71", "69"], ["69", "80"], ["29", "80"], ["82", "80"], ["99", "102"], ["107", "102"], ["29", "102"], ["104", "102"], ["104", "102"], ["102", "107"], ["29", "107"], ["113", "111"], ["113", "111"], ["58", "71"], ["82", "71"], ["115", "71"], ["29", "71"], ["71", "82"], ["29", "82"], ["67", "104"], ["29", "104"], ["80", "113"], ["29", "113"], ["115", "113"], ["119", "118"], ["125", "123"], ["82", "115"], ["29", "115"], ["91", "119"], ["125", "119"], ["175", "119"], ["147", "119"], ["29", "119"], ["119", "125"], ["29", "125"], ["111", "128"], ["160", "128"], ["29", "128"], ["29", "132"], ["132", "135"], ["29", "135"], ["123", "135"], ["142", "135"], ["125", "144"], ["29", "144"], ["142", "144"], ["144", "147"], ["29", "147"], ["135", "147"], ["94", "150"], ["178", "150"], ["29", "150"], ["147", "150"], ["123", "137"], ["29", "137"], ["123", "142"], ["29", "142"], ["123", "156"], ["160", "156"], ["160", "156"], ["29", "164"], ["128", "160"], ["29", "160"], ["164", "167"], ["29", "167"], ["160", "167"], ["123", "167"], ["125", "175"], ["29", "175"], ["167", "175"], ["94", "178"], ["150", "178"], ["29", "178"], ["175", "178"], ["61", "94"], ["61", "73"], ["61", "75"], ["61", "84"], ["61", "102"], ["61", "69"], ["61", "67"], ["61", "104"], ["61", "76"], ["61", "87"], ["61", "91"], ["61", "80"], ["61", "61"], ["61", "86"], ["61", "99"], ["61", "82"], ["61", "71"], ["61", "78"], ["61", "62"], ["102", "107"], ["102", "115"], ["102", "113"], ["102", "102"], ["102", "104"], ["102", "119"], ["102", "118"], ["102", "111"], ["118", "128"], ["118", "123"], ["118", "125"], ["128", "132"], ["128", "150"], ["128", "144"], ["128", "134"], ["128", "138"], ["128", "137"], ["128", "160"], ["128", "142"], ["128", "157"], ["128", "159"], ["128", "140"], ["128", "147"], ["128", "135"], ["128", "156"], ["156", "167"], ["156", "169"], ["156", "178"], ["156", "119"], ["156", "118"], ["156", "174"], ["156", "164"], ["156", "171"], ["156", "166"], ["156", "175"], ["156", "172"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "34": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "37": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "43": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "45": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "46": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "53": "<(LOCAL,int T: int)<SUB>4</SUB>>", "55": "<(IDENTIFIER,T,int T = parseInt(br.readLine()))<SUB>4</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>4</SUB>>", "59": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "61": "<(&lt;operator&gt;.greaterThan,T-- &gt; 0)<SUB>5</SUB>>", "63": "<(IDENTIFIER,T,T--)<SUB>5</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "67": "<(&lt;operator&gt;.assignment,int N = parseInt(br.readLine()))<SUB>6</SUB>>", "69": "<(parseInt,parseInt(br.readLine()))<SUB>6</SUB>>", "71": "<(readLine,readLine())<SUB>6</SUB>>", "8": "<(LOCAL,Stack&lt;LN&gt; nodes: ANY)<SUB>7</SUB>>", "74": "<(IDENTIFIER,nodes,ANY nodes = new Stack&lt;&gt;())<SUB>7</SUB>>", "76": "<(&lt;init&gt;,new Stack&lt;&gt;())<SUB>7</SUB>>", "77": "<(LOCAL,int a0: int)<SUB>8</SUB>>", "79": "<(IDENTIFIER,a0,int a0 = parseInt(br.readLine()))<SUB>8</SUB>>", "81": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>8</SUB>>", "83": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "84": "<(&lt;operator&gt;.assignment,ANY root = new LN(1, 0, &quot;&quot;))<SUB>9</SUB>>", "86": "<(&lt;operator&gt;.alloc,new LN(1, 0, &quot;&quot;))<SUB>9</SUB>>", "9": "<(IDENTIFIER,root,new LN(1, 0, &quot;&quot;))<SUB>9</SUB>>", "89": "<(LITERAL,0,new LN(1, 0, &quot;&quot;))<SUB>9</SUB>>", "91": "<(add,add(root))<SUB>10</SUB>>", "93": "<(IDENTIFIER,root,add(root))<SUB>10</SUB>>", "95": "<(IDENTIFIER,pw,println(root))<SUB>11</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); i++),for (int i = 0; Some(i &lt; N - 1); i++))<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "101": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "103": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>12</SUB>>", "105": "<(IDENTIFIER,N,N - 1)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.assignment,int ai = parseInt(br.readLine()))<SUB>13</SUB>>", "113": "<(parseInt,parseInt(br.readLine()))<SUB>13</SUB>>", "115": "<(readLine,readLine())<SUB>13</SUB>>", "117": "<(CONTROL_STRUCTURE,while (!nodes.isEmpty()),while (!nodes.isEmpty()))<SUB>14</SUB>>", "119": "<(isEmpty,isEmpty())<SUB>14</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.assignment,ANY nn = pop())<SUB>15</SUB>>", "125": "<(pop,pop())<SUB>15</SUB>>", "127": "<(CONTROL_STRUCTURE,if (ai == 1),if (ai == 1))<SUB>16</SUB>>", "129": "<(IDENTIFIER,ai,ai == 1)<SUB>16</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "132": "<(&lt;operator&gt;.assignment,ANY e = new LN(1, nn.depth + 1, nn.toString()))<SUB>17</SUB>>", "134": "<(&lt;operator&gt;.alloc,new LN(1, nn.depth + 1, nn.toString()))<SUB>17</SUB>>", "11": "<(IDENTIFIER,e,new LN(1, nn.depth + 1, nn.toString()))<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.addition,nn.depth + 1)<SUB>17</SUB>>", "139": "<(IDENTIFIER,nn,nn.depth + 1)<SUB>17</SUB>>", "141": "<(LITERAL,1,nn.depth + 1)<SUB>17</SUB>>", "143": "<(IDENTIFIER,nn,toString())<SUB>17</SUB>>", "145": "<(IDENTIFIER,nodes,add(nn))<SUB>18</SUB>>", "147": "<(add,add(e))<SUB>19</SUB>>", "149": "<(IDENTIFIER,e,add(e))<SUB>19</SUB>>", "151": "<(IDENTIFIER,pw,println(e))<SUB>20</SUB>>", "153": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "155": "<(CONTROL_STRUCTURE,if (nn.lv == ai - 1),if (nn.lv == ai - 1))<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,nn.lv)<SUB>22</SUB>>", "159": "<(FIELD_IDENTIFIER,lv,lv)<SUB>22</SUB>>", "161": "<(IDENTIFIER,ai,ai - 1)<SUB>22</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "164": "<(&lt;operator&gt;.assignment,ANY e = new LN(ai, nn.depth, nn.base))<SUB>23</SUB>>", "166": "<(&lt;operator&gt;.alloc,new LN(ai, nn.depth, nn.base))<SUB>23</SUB>>", "13": "<(IDENTIFIER,e,new LN(ai, nn.depth, nn.base))<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.fieldAccess,nn.depth)<SUB>23</SUB>>", "171": "<(FIELD_IDENTIFIER,depth,depth)<SUB>23</SUB>>", "173": "<(IDENTIFIER,nn,new LN(ai, nn.depth, nn.base))<SUB>23</SUB>>", "175": "<(add,add(e))<SUB>24</SUB>>", "177": "<(IDENTIFIER,e,add(e))<SUB>24</SUB>>", "179": "<(IDENTIFIER,pw,println(e))<SUB>25</SUB>>", "181": "<(CONTROL_STRUCTURE,break;,break;)<SUB>26</SUB>>", "183": "<(IDENTIFIER,pw,flush())<SUB>31</SUB>>", "185": "<(MODIFIER,STATIC)>"}}