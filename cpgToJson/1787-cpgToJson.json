{"edges": [["23", "24"], ["23", "25"], ["23", "108"], ["23", "109"], ["23", "110"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "6"], ["25", "37"], ["25", "40"], ["25", "44"], ["25", "106"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["40", "5"], ["40", "41"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "60"], ["54", "61"], ["54", "66"], ["54", "67"], ["54", "8"], ["54", "73"], ["54", "76"], ["54", "78"], ["54", "102"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["69", "72"], ["73", "74"], ["73", "75"], ["76", "7"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "88"], ["78", "90"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "92"], ["90", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["26", "32"], ["29", "35"], ["33", "39"], ["37", "43"], ["40", "46"], ["106", "110"], ["28", "26"], ["30", "29"], ["35", "33"], ["39", "37"], ["41", "40"], ["46", "49"], ["49", "58"], ["49", "106"], ["52", "49"], ["32", "30"], ["43", "41"], ["56", "63"], ["61", "69"], ["67", "75"], ["73", "76"], ["76", "80"], ["102", "52"], ["58", "56"], ["63", "61"], ["69", "67"], ["75", "73"], ["80", "87"], ["83", "94"], ["83", "104"], ["88", "87"], ["104", "102"], ["85", "83"], ["92", "99"], ["97", "88"], ["87", "85"], ["94", "92"], ["99", "97"], ["23", "28"], ["24", "110"], ["26", "110"], ["29", "110"], ["29", "110"], ["35", "110"], ["33", "110"], ["33", "110"], ["37", "110"], ["40", "110"], ["40", "110"], ["46", "110"], ["49", "110"], ["49", "110"], ["49", "110"], ["106", "110"], ["106", "110"], ["56", "110"], ["56", "110"], ["63", "110"], ["61", "110"], ["61", "110"], ["67", "110"], ["69", "110"], ["69", "110"], ["67", "110"], ["67", "110"], ["73", "110"], ["76", "110"], ["80", "110"], ["83", "110"], ["83", "110"], ["83", "110"], ["104", "110"], ["102", "110"], ["102", "110"], ["52", "110"], ["92", "110"], ["99", "110"], ["97", "110"], ["97", "110"], ["88", "110"], ["99", "110"], ["69", "110"], ["23", "24"], ["23", "26"], ["35", "33"], ["23", "37"], ["26", "29"], ["23", "29"], ["37", "40"], ["23", "40"], ["23", "46"], ["40", "106"], ["102", "106"], ["23", "106"], ["29", "35"], ["23", "35"], ["46", "49"], ["52", "49"], ["23", "49"], ["33", "49"], ["49", "52"], ["23", "52"], ["58", "56"], ["63", "61"], ["63", "61"], ["69", "67"], ["69", "67"], ["69", "67"], ["23", "73"], ["73", "76"], ["23", "76"], ["23", "80"], ["40", "102"], ["23", "102"], ["104", "102"], ["35", "58"], ["63", "58"], ["23", "58"], ["58", "63"], ["23", "63"], ["56", "63"], ["23", "69"], ["63", "69"], ["61", "69"], ["80", "83"], ["88", "83"], ["23", "83"], ["67", "83"], ["83", "88"], ["23", "88"], ["67", "92"], ["76", "104"], ["97", "104"], ["23", "104"], ["76", "97"], ["23", "97"], ["99", "97"], ["99", "97"], ["23", "99"], ["92", "99"], ["49", "49"], ["49", "73"], ["49", "75"], ["49", "52"], ["49", "102"], ["49", "85"], ["49", "56"], ["49", "69"], ["49", "67"], ["49", "104"], ["49", "76"], ["49", "87"], ["49", "80"], ["49", "58"], ["49", "61"], ["49", "83"], ["49", "63"], ["83", "94"], ["83", "99"], ["83", "85"], ["83", "92"], ["83", "87"], ["83", "97"], ["83", "83"], ["83", "88"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,T = nextInt())<SUB>3</SUB>>", "35": "<(nextInt,nextInt())<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>5</SUB>>", "38": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>5</SUB>>", "40": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "43": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; T)<SUB>6</SUB>>", "51": "<(IDENTIFIER,T,i &lt; T)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(LOCAL,int n: int)<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,int n = nextInt())<SUB>7</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] a = nextIntArray(n))<SUB>8</SUB>>", "63": "<(nextIntArray,nextIntArray(n))<SUB>8</SUB>>", "65": "<(IDENTIFIER,n,nextIntArray(n))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] ans = solve(n, a))<SUB>9</SUB>>", "69": "<(solve,solve(n, a))<SUB>9</SUB>>", "71": "<(IDENTIFIER,n,solve(n, a))<SUB>9</SUB>>", "8": "<(LOCAL,StringJoiner j: ANY)<SUB>10</SUB>>", "74": "<(IDENTIFIER,j,ANY j = new StringJoiner(&quot; &quot;))<SUB>10</SUB>>", "76": "<(&lt;init&gt;,new StringJoiner(&quot; &quot;))<SUB>10</SUB>>", "77": "<(LITERAL,&quot; &quot;,new StringJoiner(&quot; &quot;))<SUB>10</SUB>>", "79": "<(LOCAL,$idx0: int)<SUB>11</SUB>>", "81": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "83": "<(&lt;operator&gt;.lessThan,$idx0 &lt; ans.length)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,ans.length)<SUB>11</SUB>>", "87": "<(FIELD_IDENTIFIER,length,length)<SUB>11</SUB>>", "89": "<(IDENTIFIER,$idx0,$idx0++)>", "91": "<(LOCAL,each: int)<SUB>11</SUB>>", "93": "<(IDENTIFIER,each,&lt;empty&gt;)>", "95": "<(IDENTIFIER,ans,&lt;empty&gt;)>", "97": "<(add,add(String.valueOf(each)))<SUB>12</SUB>>", "99": "<(valueOf,String.valueOf(each))<SUB>12</SUB>>", "101": "<(IDENTIFIER,each,String.valueOf(each))<SUB>12</SUB>>", "103": "<(IDENTIFIER,pw,println(j.toString()))<SUB>14</SUB>>", "105": "<(IDENTIFIER,j,toString())<SUB>14</SUB>>", "107": "<(IDENTIFIER,pw,flush())<SUB>16</SUB>>", "109": "<(MODIFIER,STATIC)>"}}