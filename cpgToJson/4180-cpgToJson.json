{"edges": [["21", "22"], ["21", "23"], ["21", "122"], ["21", "123"], ["21", "124"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "42"], ["23", "47"], ["23", "75"], ["23", "81"], ["23", "83"], ["23", "88"], ["23", "108"], ["23", "118"], ["23", "120"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "86"], ["86", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "98"], ["88", "100"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "102"], ["100", "103"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "111"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "40"], ["38", "44"], ["42", "49"], ["75", "81"], ["81", "86"], ["83", "90"], ["108", "118"], ["118", "120"], ["120", "124"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["40", "38"], ["44", "42"], ["49", "52"], ["52", "59"], ["52", "78"], ["55", "52"], ["77", "75"], ["86", "83"], ["90", "95"], ["93", "105"], ["93", "115"], ["98", "95"], ["100", "98"], ["111", "108"], ["30", "28"], ["37", "35"], ["59", "62"], ["62", "69"], ["62", "55"], ["65", "62"], ["67", "65"], ["78", "77"], ["95", "93"], ["103", "100"], ["113", "111"], ["68", "73"], ["73", "67"], ["105", "103"], ["115", "113"], ["69", "68"], ["21", "26"], ["22", "124"], ["24", "124"], ["27", "124"], ["27", "124"], ["31", "124"], ["34", "124"], ["34", "124"], ["40", "124"], ["38", "124"], ["38", "124"], ["42", "124"], ["42", "124"], ["42", "124"], ["52", "124"], ["77", "124"], ["75", "124"], ["75", "124"], ["81", "124"], ["83", "124"], ["83", "124"], ["83", "124"], ["90", "124"], ["93", "124"], ["93", "124"], ["111", "124"], ["115", "124"], ["113", "124"], ["111", "124"], ["108", "124"], ["108", "124"], ["118", "124"], ["120", "124"], ["120", "124"], ["103", "124"], ["100", "124"], ["100", "124"], ["98", "124"], ["59", "124"], ["62", "124"], ["62", "124"], ["55", "124"], ["67", "124"], ["73", "124"], ["67", "124"], ["67", "124"], ["65", "124"], ["83", "124"], ["21", "22"], ["21", "24"], ["21", "31"], ["40", "38"], ["44", "42"], ["77", "75"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "49"], ["21", "81"], ["21", "83"], ["75", "83"], ["86", "83"], ["21", "90"], ["34", "108"], ["100", "108"], ["21", "108"], ["111", "108"], ["111", "108"], ["108", "118"], ["21", "118"], ["118", "120"], ["21", "120"], ["27", "40"], ["21", "40"], ["38", "44"], ["21", "44"], ["49", "52"], ["55", "52"], ["21", "52"], ["44", "52"], ["62", "52"], ["52", "55"], ["21", "55"], ["21", "59"], ["73", "67"], ["78", "77"], ["78", "77"], ["21", "86"], ["90", "93"], ["98", "93"], ["21", "93"], ["95", "93"], ["95", "93"], ["105", "98"], ["21", "98"], ["34", "100"], ["21", "100"], ["103", "100"], ["103", "100"], ["81", "111"], ["103", "111"], ["21", "111"], ["113", "111"], ["113", "111"], ["59", "62"], ["65", "62"], ["21", "62"], ["52", "62"], ["62", "65"], ["21", "65"], ["21", "78"], ["52", "78"], ["78", "95"], ["21", "95"], ["81", "103"], ["21", "103"], ["105", "103"], ["105", "103"], ["21", "113"], ["115", "113"], ["115", "113"], ["40", "73"], ["21", "73"], ["21", "105"], ["93", "105"], ["95", "115"], ["21", "115"], ["52", "52"], ["52", "59"], ["52", "55"], ["52", "62"], ["93", "98"], ["93", "105"], ["93", "100"], ["93", "103"], ["93", "95"], ["93", "93"], ["62", "68"], ["62", "73"], ["62", "69"], ["62", "67"], ["62", "65"], ["62", "62"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(IDENTIFIER,N,N = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "43": "<(IDENTIFIER,a,a = new double[N][N])<SUB>8</SUB>>", "45": "<(IDENTIFIER,N,new double[N][N])<SUB>8</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,i &lt; N)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); ++j),for (int j = 0; Some(j &lt; N); ++j))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "61": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "63": "<(IDENTIFIER,j,j &lt; N)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.preIncrement,++j)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,a[i][j] = nextDouble())<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,a[i][j] = nextDouble())<SUB>11</SUB>>", "73": "<(nextDouble,nextDouble())<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,memo = new double[1 &lt;&lt; N])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; N])>", "79": "<(LITERAL,1,1 &lt;&lt; N)<SUB>12</SUB>>", "81": "<(f,f())<SUB>13</SUB>>", "83": "<(fill,fill(memo, -10))<SUB>15</SUB>>", "85": "<(IDENTIFIER,memo,fill(memo, -10))<SUB>15</SUB>>", "87": "<(LITERAL,10,-10)<SUB>15</SUB>>", "89": "<(LOCAL,int i: int)<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; N - 1)<SUB>16</SUB>>", "95": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>16</SUB>>", "97": "<(LITERAL,1,N - 1)<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,++i)<SUB>16</SUB>>", "101": "<(IDENTIFIER,out,printf(&quot;%.8f &quot;, dp(1 &lt;&lt; i)))<SUB>17</SUB>>", "103": "<(dp,dp(1 &lt;&lt; i))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,out,printf(&quot;%.8f\\n&quot;, dp(1 &lt;&lt; N - 1)))<SUB>18</SUB>>", "111": "<(dp,dp(1 &lt;&lt; N - 1))<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N - 1)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>18</SUB>>", "117": "<(LITERAL,1,N - 1)<SUB>18</SUB>>", "119": "<(IDENTIFIER,out,flush())<SUB>20</SUB>>", "121": "<(IDENTIFIER,out,close())<SUB>21</SUB>>", "123": "<(MODIFIER,STATIC)>"}}