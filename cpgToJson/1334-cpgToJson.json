{"edges": [["19", "20"], ["19", "21"], ["19", "114"], ["19", "115"], ["19", "116"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "43"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "47"], ["43", "56"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["56", "57"], ["57", "58"], ["57", "61"], ["57", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["66", "67"], ["67", "68"], ["67", "69"], ["67", "75"], ["67", "76"], ["67", "83"], ["67", "84"], ["67", "95"], ["67", "104"], ["67", "109"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["71", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "94"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["40", "44"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["44", "50"], ["44", "58"], ["47", "116"], ["28", "26"], ["48", "52"], ["51", "47"], ["50", "48"], ["52", "51"], ["58", "64"], ["58", "71"], ["61", "116"], ["62", "61"], ["64", "62"], ["69", "79"], ["76", "90"], ["84", "96"], ["104", "112"], ["109", "116"], ["71", "69"], ["78", "76"], ["86", "84"], ["96", "101"], ["96", "106"], ["99", "106"], ["106", "104"], ["110", "109"], ["79", "78"], ["87", "86"], ["101", "99"], ["112", "110"], ["88", "87"], ["90", "88"], ["19", "24"], ["20", "116"], ["22", "116"], ["25", "116"], ["25", "116"], ["30", "116"], ["37", "116"], ["35", "116"], ["35", "116"], ["40", "116"], ["44", "116"], ["44", "116"], ["47", "116"], ["52", "116"], ["51", "116"], ["51", "116"], ["47", "116"], ["47", "116"], ["71", "116"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "40"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["35", "44"], ["19", "44"], ["51", "47"], ["51", "47"], ["52", "51"], ["52", "51"], ["40", "51"], ["19", "51"], ["19", "52"], ["30", "52"], ["30", "58"], ["19", "58"], ["19", "61"], ["71", "69"], ["71", "69"], ["71", "69"], ["78", "76"], ["78", "76"], ["87", "84"], ["87", "84"], ["19", "84"], ["106", "104"], ["106", "104"], ["96", "99"], ["19", "99"], ["90", "99"], ["104", "109"], ["19", "109"], ["19", "71"], ["44", "71"], ["79", "78"], ["79", "78"], ["40", "78"], ["19", "78"], ["87", "86"], ["87", "86"], ["19", "86"], ["84", "96"], ["19", "96"], ["96", "106"], ["99", "106"], ["19", "106"], ["90", "106"], ["19", "79"], ["69", "79"], ["88", "87"], ["88", "87"], ["79", "87"], ["19", "87"], ["96", "101"], ["19", "101"], ["90", "101"], ["76", "88"], ["19", "88"], ["90", "88"], ["90", "88"], ["58", "90"], ["19", "90"], ["78", "90"], ["44", "47"], ["44", "48"], ["44", "51"], ["44", "52"], ["44", "50"], ["44", "58"], ["58", "96"], ["58", "64"], ["58", "84"], ["58", "69"], ["58", "104"], ["58", "106"], ["58", "76"], ["58", "87"], ["58", "112"], ["58", "90"], ["58", "79"], ["58", "61"], ["58", "71"], ["58", "88"], ["58", "110"], ["58", "78"], ["58", "109"], ["58", "62"], ["58", "86"], ["96", "99"], ["96", "101"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY ex = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,ex,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,long x: long)<SUB>4</SUB>>", "31": "<(IDENTIFIER,x,long x = nextLong())<SUB>4</SUB>>", "33": "<(IDENTIFIER,ex,nextLong())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,long k = nextLong())<SUB>5</SUB>>", "37": "<(nextLong,nextLong())<SUB>5</SUB>>", "39": "<(LOCAL,long mod: long)<SUB>6</SUB>>", "41": "<(IDENTIFIER,mod,long mod = 1000000007)<SUB>6</SUB>>", "43": "<(CONTROL_STRUCTURE,if (k == 0),if (k == 0))<SUB>7</SUB>>", "45": "<(IDENTIFIER,k,k == 0)<SUB>7</SUB>>", "47": "<(println,System.out.println((2 * x) % mod))<SUB>8</SUB>>", "49": "<(IDENTIFIER,System,System.out.println((2 * x) % mod))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.modulo,(2 * x) % mod)<SUB>8</SUB>>", "53": "<(LITERAL,2,2 * x)<SUB>8</SUB>>", "55": "<(IDENTIFIER,mod,(2 * x) % mod)<SUB>8</SUB>>", "57": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>9</SUB>>", "59": "<(IDENTIFIER,x,x == 0)<SUB>9</SUB>>", "61": "<(println,System.out.println(&quot;0&quot;))<SUB>10</SUB>>", "63": "<(IDENTIFIER,System,System.out.println(&quot;0&quot;))<SUB>10</SUB>>", "65": "<(LITERAL,&quot;0&quot;,System.out.println(&quot;0&quot;))<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "69": "<(&lt;operator&gt;.assignment,long pow = power(2, k))<SUB>13</SUB>>", "71": "<(power,power(2, k))<SUB>13</SUB>>", "73": "<(LITERAL,2,power(2, k))<SUB>13</SUB>>", "75": "<(LOCAL,long pow1: long)<SUB>14</SUB>>", "77": "<(IDENTIFIER,pow1,long pow1 = (2 * pow) % mod)<SUB>14</SUB>>", "79": "<(&lt;operator&gt;.multiplication,2 * pow)<SUB>14</SUB>>", "81": "<(IDENTIFIER,pow,2 * pow)<SUB>14</SUB>>", "83": "<(LOCAL,long ans: long)<SUB>15</SUB>>", "85": "<(IDENTIFIER,ans,long ans = (pow1 * (x % mod)) - pow + 1)<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.subtraction,(pow1 * (x % mod)) - pow)<SUB>15</SUB>>", "89": "<(IDENTIFIER,pow1,pow1 * (x % mod))<SUB>15</SUB>>", "91": "<(IDENTIFIER,x,x % mod)<SUB>15</SUB>>", "93": "<(IDENTIFIER,pow,(pow1 * (x % mod)) - pow)<SUB>15</SUB>>", "95": "<(CONTROL_STRUCTURE,if (ans &lt; 0),if (ans &lt; 0))<SUB>16</SUB>>", "97": "<(IDENTIFIER,ans,ans &lt; 0)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,ans = ans + mod)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.addition,ans + mod)<SUB>17</SUB>>", "103": "<(IDENTIFIER,mod,ans + mod)<SUB>17</SUB>>", "105": "<(IDENTIFIER,ans,ans = ans % mod)<SUB>18</SUB>>", "107": "<(IDENTIFIER,ans,ans % mod)<SUB>18</SUB>>", "109": "<(println,System.out.println(ans))<SUB>19</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(ans))<SUB>19</SUB>>", "113": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>19</SUB>>", "115": "<(MODIFIER,STATIC)>"}}