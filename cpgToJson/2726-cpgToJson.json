{"edges": [["19", "21"], ["19", "113"], ["19", "114"], ["19", "115"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "108"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "42"], ["38", "101"], ["39", "40"], ["39", "41"], ["42", "43"], ["43", "44"], ["43", "49"], ["43", "63"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["64", "65"], ["64", "70"], ["64", "86"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["70", "71"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "83"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["87", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "39"], ["108", "115"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "45"], ["39", "105"], ["109", "108"], ["28", "26"], ["111", "109"], ["44", "57"], ["44", "66"], ["103", "111"], ["45", "44"], ["50", "111"], ["105", "103"], ["52", "50"], ["65", "77"], ["65", "95"], ["54", "52"], ["66", "65"], ["71", "111"], ["55", "60"], ["60", "54"], ["73", "71"], ["88", "111"], ["57", "55"], ["75", "73"], ["90", "88"], ["76", "83"], ["83", "75"], ["92", "90"], ["77", "80"], ["80", "76"], ["93", "98"], ["98", "92"], ["95", "93"], ["19", "24"], ["20", "115"], ["22", "115"], ["25", "115"], ["25", "115"], ["32", "115"], ["30", "115"], ["30", "115"], ["35", "115"], ["39", "115"], ["105", "115"], ["105", "115"], ["103", "115"], ["103", "115"], ["44", "115"], ["44", "115"], ["65", "115"], ["65", "115"], ["90", "115"], ["93", "115"], ["92", "115"], ["98", "115"], ["92", "115"], ["90", "115"], ["88", "115"], ["88", "115"], ["73", "115"], ["76", "115"], ["76", "115"], ["75", "115"], ["83", "115"], ["75", "115"], ["73", "115"], ["71", "115"], ["71", "115"], ["52", "115"], ["55", "115"], ["54", "115"], ["60", "115"], ["54", "115"], ["52", "115"], ["50", "115"], ["50", "115"], ["108", "115"], ["108", "115"], ["108", "115"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["22", "25"], ["19", "25"], ["103", "108"], ["88", "108"], ["71", "108"], ["50", "108"], ["19", "108"], ["25", "32"], ["19", "32"], ["30", "39"], ["19", "39"], ["105", "103"], ["105", "103"], ["45", "44"], ["45", "44"], ["19", "44"], ["52", "50"], ["52", "50"], ["39", "45"], ["19", "45"], ["19", "105"], ["39", "105"], ["19", "52"], ["54", "52"], ["54", "52"], ["66", "65"], ["66", "65"], ["19", "65"], ["73", "71"], ["73", "71"], ["55", "54"], ["55", "54"], ["60", "54"], ["60", "54"], ["45", "66"], ["19", "66"], ["90", "88"], ["90", "88"], ["57", "55"], ["19", "55"], ["57", "55"], ["55", "60"], ["19", "60"], ["19", "73"], ["75", "73"], ["75", "73"], ["45", "57"], ["19", "57"], ["76", "75"], ["76", "75"], ["83", "75"], ["83", "75"], ["19", "90"], ["92", "90"], ["92", "90"], ["77", "76"], ["77", "76"], ["80", "76"], ["80", "76"], ["80", "83"], ["19", "83"], ["93", "92"], ["93", "92"], ["98", "92"], ["98", "92"], ["66", "77"], ["19", "77"], ["77", "80"], ["19", "80"], ["95", "93"], ["19", "93"], ["95", "93"], ["93", "98"], ["19", "98"], ["66", "95"], ["19", "95"], ["39", "103"], ["39", "45"], ["39", "44"], ["39", "105"], ["44", "60"], ["44", "57"], ["44", "66"], ["44", "52"], ["44", "65"], ["44", "50"], ["44", "54"], ["44", "55"], ["65", "73"], ["65", "77"], ["65", "98"], ["65", "75"], ["65", "95"], ["65", "92"], ["65", "76"], ["65", "93"], ["65", "90"], ["65", "80"], ["65", "83"], ["65", "71"], ["65", "88"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,ANY res = null)<SUB>4</SUB>>", "37": "<(LITERAL,null,ANY res = null)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.greaterEqualsThan,n &gt;= 3)<SUB>5</SUB>>", "41": "<(LITERAL,3,n &gt;= 3)<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,if (n % 2 != 0),if (n % 2 != 0))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "47": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "51": "<(IDENTIFIER,res,res = valueOf(n * (n - 1) * (n - 2)))<SUB>7</SUB>>", "53": "<(IDENTIFIER,BigInteger,valueOf(n * (n - 1) * (n - 2)))<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>7</SUB>>", "59": "<(LITERAL,1,n - 1)<SUB>7</SUB>>", "61": "<(IDENTIFIER,n,n - 2)<SUB>7</SUB>>", "63": "<(CONTROL_STRUCTURE,else,else)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.equals,n % 3 == 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,n,n % 3)<SUB>8</SUB>>", "69": "<(LITERAL,0,n % 3 == 0)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,res = valueOf((n - 1) * (n - 2) * (n - 3)))<SUB>9</SUB>>", "73": "<(valueOf,valueOf((n - 1) * (n - 2) * (n - 3)))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2) * (n - 3))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>9</SUB>>", "79": "<(LITERAL,1,n - 1)<SUB>9</SUB>>", "81": "<(IDENTIFIER,n,n - 2)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>9</SUB>>", "85": "<(LITERAL,3,n - 3)<SUB>9</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "89": "<(IDENTIFIER,res,res = valueOf(n * (n - 1) * (n - 3)))<SUB>11</SUB>>", "91": "<(IDENTIFIER,BigInteger,valueOf(n * (n - 1) * (n - 3)))<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "97": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "99": "<(IDENTIFIER,n,n - 3)<SUB>11</SUB>>", "101": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.assignment,res = valueOf(n))<SUB>14</SUB>>", "105": "<(valueOf,valueOf(n))<SUB>14</SUB>>", "107": "<(IDENTIFIER,n,valueOf(n))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "113": "<(MODIFIER,PUBLIC)>", "115": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}