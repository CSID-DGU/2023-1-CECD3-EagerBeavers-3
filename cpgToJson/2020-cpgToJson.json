{"edges": [["19", "20"], ["19", "21"], ["19", "162"], ["19", "163"], ["19", "164"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "56"], ["21", "59"], ["21", "87"], ["21", "97"], ["21", "98"], ["21", "103"], ["21", "124"], ["21", "125"], ["21", "130"], ["21", "157"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["38", "44"], ["38", "49"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "76"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "84"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "90"], ["88", "89"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "111"], ["103", "113"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "138"], ["130", "140"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "152"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["22", "28"], ["25", "32"], ["30", "35"], ["51", "56"], ["56", "61"], ["98", "105"], ["125", "132"], ["157", "164"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "53"], ["53", "51"], ["61", "64"], ["64", "71"], ["64", "88"], ["67", "64"], ["88", "94"], ["88", "102"], ["100", "98"], ["105", "108"], ["108", "115"], ["108", "129"], ["111", "108"], ["127", "125"], ["132", "135"], ["135", "143"], ["135", "160"], ["138", "135"], ["158", "157"], ["28", "26"], ["40", "47"], ["44", "49"], ["49", "164"], ["70", "78"], ["91", "96"], ["96", "164"], ["102", "100"], ["114", "121"], ["114", "111"], ["119", "111"], ["129", "127"], ["141", "154"], ["141", "138"], ["152", "138"], ["160", "158"], ["42", "40"], ["45", "44"], ["71", "74"], ["74", "70"], ["77", "84"], ["77", "67"], ["84", "67"], ["92", "91"], ["115", "114"], ["121", "119"], ["142", "141"], ["142", "148"], ["147", "141"], ["154", "152"], ["47", "45"], ["78", "81"], ["81", "77"], ["94", "92"], ["143", "142"], ["148", "147"], ["19", "24"], ["96", "164"], ["49", "164"], ["20", "164"], ["22", "164"], ["25", "164"], ["25", "164"], ["30", "164"], ["35", "164"], ["35", "164"], ["40", "164"], ["42", "164"], ["40", "164"], ["40", "164"], ["44", "164"], ["19", "20"], ["19", "22"], ["32", "30"], ["53", "51"], ["19", "56"], ["22", "25"], ["19", "25"], ["19", "61"], ["19", "105"], ["19", "132"], ["125", "157"], ["142", "157"], ["152", "157"], ["19", "157"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["42", "40"], ["19", "49"], ["35", "53"], ["19", "53"], ["61", "64"], ["67", "64"], ["19", "64"], ["53", "64"], ["64", "67"], ["19", "67"], ["74", "70"], ["56", "88"], ["84", "88"], ["19", "88"], ["19", "96"], ["105", "108"], ["111", "108"], ["19", "108"], ["64", "108"], ["108", "111"], ["19", "111"], ["51", "119"], ["114", "119"], ["132", "135"], ["138", "135"], ["19", "135"], ["108", "135"], ["135", "138"], ["19", "138"], ["51", "152"], ["142", "152"], ["147", "152"], ["19", "44"], ["19", "84"], ["19", "91"], ["51", "114"], ["77", "114"], ["98", "114"], ["119", "114"], ["19", "114"], ["142", "141"], ["142", "141"], ["147", "141"], ["147", "141"], ["32", "42"], ["19", "42"], ["32", "74"], ["19", "74"], ["51", "77"], ["70", "77"], ["51", "142"], ["147", "142"], ["114", "142"], ["77", "142"], ["125", "142"], ["152", "142"], ["19", "142"], ["51", "147"], ["142", "147"], ["98", "147"], ["114", "147"], ["119", "147"], ["19", "147"], ["35", "64"], ["35", "42"], ["35", "51"], ["35", "56"], ["35", "40"], ["35", "44"], ["35", "61"], ["35", "88"], ["35", "47"], ["35", "49"], ["35", "45"], ["35", "53"], ["64", "77"], ["64", "64"], ["64", "81"], ["64", "67"], ["64", "74"], ["64", "70"], ["64", "71"], ["64", "78"], ["88", "94"], ["88", "96"], ["88", "98"], ["88", "102"], ["88", "132"], ["88", "92"], ["88", "91"], ["88", "129"], ["88", "100"], ["88", "127"], ["88", "108"], ["88", "158"], ["88", "160"], ["88", "157"], ["88", "105"], ["88", "135"], ["88", "125"], ["108", "115"], ["108", "114"], ["108", "108"], ["108", "111"], ["135", "138"], ["135", "141"], ["135", "142"], ["135", "143"], ["135", "135"], ["114", "119"], ["114", "121"], ["141", "154"], ["141", "152"], ["77", "84"], ["142", "148"], ["142", "147"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,input,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.equals,n == 1)<SUB>4</SUB>>", "37": "<(LITERAL,1,n == 1)<SUB>4</SUB>>", "39": "<(LOCAL,int m: int)<SUB>7</SUB>>", "41": "<(IDENTIFIER,m,int m = nextInt())<SUB>7</SUB>>", "43": "<(IDENTIFIER,input,nextInt())<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "47": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "49": "<(RETURN,return;,return;)<SUB>10</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] num = new int[n])<SUB>12</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(LOCAL,boolean flag: boolean)<SUB>13</SUB>>", "57": "<(IDENTIFIER,flag,boolean flag = false)<SUB>13</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>16</SUB>>", "73": "<(IDENTIFIER,i,num[i] = nextInt())<SUB>16</SUB>>", "75": "<(IDENTIFIER,input,nextInt())<SUB>16</SUB>>", "77": "<(&lt;operator&gt;.notEquals,num[i] != num[0])<SUB>17</SUB>>", "79": "<(IDENTIFIER,num,num[i] != num[0])<SUB>17</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,num[0])<SUB>17</SUB>>", "83": "<(LITERAL,0,num[i] != num[0])<SUB>17</SUB>>", "85": "<(IDENTIFIER,flag,flag = true)<SUB>18</SUB>>", "87": "<(CONTROL_STRUCTURE,if (!flag),if (!flag))<SUB>20</SUB>>", "89": "<(IDENTIFIER,flag,!flag)<SUB>20</SUB>>", "91": "<(println,System.out.println(&quot;NO&quot;))<SUB>22</SUB>>", "93": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>22</SUB>>", "95": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>22</SUB>>", "97": "<(LOCAL,int min: int)<SUB>25</SUB>>", "99": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>25</SUB>>", "101": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>25</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>26</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "107": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "109": "<(IDENTIFIER,i,i &lt; n)<SUB>26</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "113": "<(CONTROL_STRUCTURE,if (num[i] &lt; min),if (num[i] &lt; min))<SUB>27</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>27</SUB>>", "117": "<(IDENTIFIER,i,num[i] &lt; min)<SUB>27</SUB>>", "119": "<(&lt;operator&gt;.assignment,min = num[i])<SUB>28</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>28</SUB>>", "123": "<(IDENTIFIER,i,min = num[i])<SUB>28</SUB>>", "125": "<(&lt;operator&gt;.assignment,int min2 = Integer.MAX_VALUE)<SUB>29</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>29</SUB>>", "129": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>29</SUB>>", "131": "<(LOCAL,int i: int)<SUB>30</SUB>>", "133": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "135": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>30</SUB>>", "137": "<(IDENTIFIER,n,i &lt; n)<SUB>30</SUB>>", "139": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "141": "<(&lt;operator&gt;.logicalAnd,num[i] &lt;= min2 &amp;&amp; num[i] &gt; min)<SUB>31</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>31</SUB>>", "145": "<(IDENTIFIER,i,num[i] &lt;= min2)<SUB>31</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,num[i] &gt; min)<SUB>31</SUB>>", "149": "<(IDENTIFIER,num,num[i] &gt; min)<SUB>31</SUB>>", "151": "<(IDENTIFIER,min,num[i] &gt; min)<SUB>31</SUB>>", "153": "<(IDENTIFIER,min2,min2 = num[i])<SUB>32</SUB>>", "155": "<(IDENTIFIER,num,min2 = num[i])<SUB>32</SUB>>", "157": "<(println,System.out.println(min2))<SUB>33</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(min2))<SUB>33</SUB>>", "161": "<(IDENTIFIER,min2,System.out.println(min2))<SUB>33</SUB>>", "163": "<(MODIFIER,STATIC)>"}}