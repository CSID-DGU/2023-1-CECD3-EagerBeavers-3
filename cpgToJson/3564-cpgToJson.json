{"edges": [["21", "22"], ["21", "23"], ["21", "310"], ["21", "311"], ["21", "312"], ["23", "24"], ["23", "25"], ["23", "4"], ["23", "28"], ["23", "31"], ["23", "6"], ["23", "40"], ["23", "43"], ["23", "52"], ["23", "53"], ["23", "54"], ["23", "58"], ["23", "62"], ["23", "63"], ["23", "64"], ["23", "65"], ["23", "66"], ["23", "72"], ["23", "80"], ["23", "88"], ["23", "96"], ["23", "101"], ["23", "102"], ["23", "103"], ["23", "107"], ["23", "110"], ["23", "111"], ["23", "112"], ["23", "116"], ["23", "119"], ["23", "167"], ["23", "295"], ["23", "306"], ["23", "308"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "39"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "51"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["66", "67"], ["66", "68"], ["68", "69"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["82", "86"], ["82", "87"], ["84", "85"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["90", "93"], ["90", "95"], ["93", "94"], ["96", "97"], ["96", "98"], ["96", "99"], ["99", "100"], ["103", "104"], ["103", "105"], ["105", "106"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["129", "131"], ["129", "132"], ["129", "136"], ["129", "140"], ["129", "149"], ["129", "151"], ["129", "156"], ["132", "133"], ["132", "134"], ["134", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["140", "141"], ["140", "148"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["149", "150"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "179"], ["171", "184"], ["171", "185"], ["171", "186"], ["171", "191"], ["171", "196"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "204"], ["196", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "223"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "218"], ["211", "212"], ["211", "217"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["223", "224"], ["223", "262"], ["224", "225"], ["224", "256"], ["225", "226"], ["225", "249"], ["226", "227"], ["226", "242"], ["227", "228"], ["227", "235"], ["228", "229"], ["228", "234"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["260", "261"], ["262", "263"], ["262", "272"], ["262", "274"], ["262", "279"], ["262", "284"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["272", "273"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["284", "285"], ["284", "292"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "303"], ["298", "299"], ["298", "302"], ["299", "300"], ["299", "301"], ["303", "304"], ["303", "305"], ["306", "307"], ["308", "309"], ["25", "30"], ["28", "35"], ["31", "42"], ["40", "47"], ["43", "56"], ["54", "60"], ["58", "69"], ["66", "77"], ["72", "84"], ["80", "93"], ["88", "99"], ["96", "105"], ["103", "107"], ["107", "114"], ["112", "116"], ["116", "121"], ["295", "306"], ["306", "308"], ["308", "312"], ["30", "28"], ["42", "40"], ["56", "54"], ["60", "58"], ["68", "66"], ["74", "72"], ["82", "80"], ["90", "88"], ["99", "96"], ["105", "103"], ["114", "112"], ["121", "124"], ["124", "134"], ["124", "168"], ["127", "124"], ["168", "177"], ["168", "299"], ["297", "295"], ["33", "36"], ["36", "31"], ["45", "48"], ["48", "43"], ["69", "68"], ["75", "74"], ["84", "82"], ["93", "90"], ["132", "138"], ["136", "144"], ["140", "149"], ["149", "155"], ["151", "159"], ["156", "127"], ["173", "183"], ["179", "188"], ["186", "193"], ["191", "198"], ["298", "303"], ["303", "297"], ["35", "33"], ["47", "45"], ["77", "75"], ["134", "132"], ["138", "136"], ["141", "140"], ["153", "151"], ["158", "156"], ["175", "173"], ["181", "179"], ["188", "186"], ["193", "191"], ["198", "201"], ["201", "168"], ["201", "213"], ["204", "201"], ["299", "298"], ["143", "141"], ["155", "153"], ["159", "163"], ["162", "158"], ["177", "175"], ["183", "181"], ["208", "230"], ["144", "143"], ["163", "162"], ["210", "208"], ["224", "264"], ["224", "204"], ["211", "219"], ["218", "210"], ["225", "224"], ["225", "257"], ["256", "224"], ["263", "272"], ["272", "278"], ["274", "280"], ["279", "286"], ["212", "211"], ["219", "218"], ["226", "225"], ["226", "251"], ["249", "225"], ["257", "260"], ["260", "256"], ["264", "268"], ["267", "263"], ["276", "274"], ["280", "279"], ["285", "292"], ["285", "204"], ["292", "204"], ["213", "212"], ["227", "226"], ["227", "244"], ["242", "226"], ["250", "249"], ["268", "267"], ["278", "276"], ["286", "289"], ["289", "285"], ["228", "227"], ["228", "237"], ["235", "227"], ["243", "242"], ["251", "250"], ["229", "228"], ["236", "235"], ["244", "243"], ["230", "229"], ["237", "236"], ["21", "25"], ["22", "312"], ["25", "312"], ["28", "312"], ["36", "312"], ["36", "312"], ["31", "312"], ["40", "312"], ["45", "312"], ["48", "312"], ["48", "312"], ["43", "312"], ["54", "312"], ["54", "312"], ["58", "312"], ["58", "312"], ["68", "312"], ["66", "312"], ["66", "312"], ["72", "312"], ["75", "312"], ["74", "312"], ["72", "312"], ["72", "312"], ["80", "312"], ["80", "312"], ["80", "312"], ["88", "312"], ["88", "312"], ["88", "312"], ["96", "312"], ["96", "312"], ["103", "312"], ["103", "312"], ["107", "312"], ["112", "312"], ["112", "312"], ["116", "312"], ["121", "312"], ["124", "312"], ["124", "312"], ["124", "312"], ["168", "312"], ["168", "312"], ["168", "312"], ["298", "312"], ["297", "312"], ["303", "312"], ["303", "312"], ["297", "312"], ["295", "312"], ["295", "312"], ["306", "312"], ["308", "312"], ["308", "312"], ["173", "312"], ["173", "312"], ["179", "312"], ["186", "312"], ["186", "312"], ["186", "312"], ["191", "312"], ["193", "312"], ["191", "312"], ["191", "312"], ["198", "312"], ["201", "312"], ["201", "312"], ["208", "312"], ["210", "312"], ["218", "312"], ["218", "312"], ["210", "312"], ["208", "312"], ["208", "312"], ["229", "312"], ["229", "312"], ["228", "312"], ["228", "312"], ["227", "312"], ["236", "312"], ["236", "312"], ["235", "312"], ["227", "312"], ["226", "312"], ["243", "312"], ["243", "312"], ["242", "312"], ["242", "312"], ["226", "312"], ["225", "312"], ["250", "312"], ["250", "312"], ["249", "312"], ["225", "312"], ["224", "312"], ["256", "312"], ["256", "312"], ["224", "312"], ["224", "312"], ["267", "312"], ["263", "312"], ["263", "312"], ["272", "312"], ["274", "312"], ["279", "312"], ["279", "312"], ["279", "312"], ["285", "312"], ["285", "312"], ["285", "312"], ["292", "312"], ["292", "312"], ["204", "312"], ["132", "312"], ["136", "312"], ["136", "312"], ["140", "312"], ["140", "312"], ["149", "312"], ["151", "312"], ["158", "312"], ["163", "312"], ["162", "312"], ["162", "312"], ["158", "312"], ["156", "312"], ["156", "312"], ["127", "312"], ["96", "312"], ["21", "22"], ["21", "25"], ["21", "28"], ["21", "40"], ["56", "54"], ["60", "58"], ["68", "66"], ["74", "72"], ["82", "80"], ["82", "80"], ["82", "80"], ["90", "88"], ["90", "88"], ["90", "88"], ["105", "103"], ["21", "107"], ["114", "112"], ["21", "116"], ["28", "31"], ["21", "31"], ["33", "31"], ["36", "31"], ["40", "43"], ["21", "43"], ["45", "43"], ["48", "43"], ["21", "96"], ["66", "96"], ["99", "96"], ["21", "121"], ["43", "295"], ["21", "295"], ["299", "295"], ["299", "295"], ["303", "295"], ["303", "295"], ["295", "306"], ["21", "306"], ["114", "308"], ["138", "308"], ["21", "308"], ["21", "33"], ["21", "39"], ["21", "45"], ["21", "51"], ["31", "56"], ["21", "56"], ["56", "60"], ["21", "60"], ["69", "68"], ["75", "74"], ["75", "74"], ["21", "82"], ["84", "82"], ["21", "90"], ["93", "90"], ["21", "99"], ["21", "105"], ["60", "114"], ["21", "114"], ["121", "124"], ["127", "124"], ["21", "124"], ["112", "124"], ["124", "127"], ["21", "127"], ["134", "132"], ["138", "136"], ["21", "140"], ["72", "151"], ["158", "156"], ["163", "156"], ["163", "156"], ["21", "156"], ["136", "156"], ["103", "168"], ["274", "168"], ["151", "168"], ["21", "168"], ["107", "168"], ["179", "168"], ["72", "173"], ["72", "179"], ["188", "186"], ["188", "186"], ["193", "191"], ["193", "191"], ["299", "297"], ["299", "297"], ["21", "297"], ["303", "297"], ["303", "297"], ["33", "36"], ["21", "36"], ["45", "48"], ["21", "48"], ["25", "69"], ["21", "69"], ["21", "75"], ["69", "75"], ["21", "84"], ["21", "93"], ["103", "149"], ["151", "149"], ["21", "149"], ["149", "151"], ["21", "151"], ["177", "179"], ["21", "179"], ["21", "198"], ["299", "298"], ["299", "298"], ["21", "298"], ["299", "303"], ["21", "303"], ["299", "303"], ["69", "77"], ["21", "77"], ["114", "134"], ["138", "134"], ["21", "134"], ["134", "138"], ["21", "138"], ["163", "158"], ["163", "158"], ["21", "158"], ["136", "158"], ["173", "188"], ["21", "188"], ["75", "188"], ["193", "188"], ["211", "188"], ["163", "188"], ["188", "193"], ["21", "193"], ["188", "193"], ["198", "201"], ["204", "201"], ["21", "201"], ["201", "204"], ["21", "204"], ["211", "208"], ["211", "208"], ["88", "208"], ["191", "208"], ["21", "208"], ["116", "299"], ["292", "299"], ["156", "299"], ["21", "299"], ["75", "299"], ["193", "299"], ["211", "299"], ["163", "299"], ["144", "143"], ["144", "143"], ["136", "143"], ["21", "143"], ["163", "162"], ["163", "162"], ["21", "162"], ["136", "162"], ["168", "177"], ["21", "177"], ["132", "144"], ["21", "144"], ["75", "144"], ["163", "144"], ["144", "163"], ["21", "163"], ["144", "163"], ["211", "210"], ["211", "210"], ["88", "210"], ["191", "210"], ["21", "210"], ["225", "224"], ["225", "224"], ["256", "224"], ["256", "224"], ["96", "263"], ["21", "263"], ["72", "274"], ["208", "279"], ["21", "279"], ["80", "211"], ["186", "211"], ["21", "211"], ["193", "211"], ["88", "218"], ["191", "218"], ["21", "218"], ["226", "225"], ["226", "225"], ["249", "225"], ["249", "225"], ["96", "256"], ["285", "256"], ["260", "256"], ["168", "272"], ["274", "272"], ["21", "272"], ["272", "274"], ["21", "274"], ["21", "292"], ["208", "292"], ["80", "212"], ["186", "212"], ["21", "212"], ["227", "226"], ["227", "226"], ["242", "226"], ["242", "226"], ["88", "249"], ["21", "249"], ["21", "260"], ["96", "267"], ["21", "267"], ["96", "285"], ["263", "285"], ["228", "227"], ["228", "227"], ["235", "227"], ["235", "227"], ["88", "242"], ["21", "242"], ["58", "242"], ["88", "250"], ["21", "250"], ["80", "228"], ["21", "228"], ["54", "228"], ["80", "235"], ["21", "235"], ["88", "243"], ["21", "243"], ["80", "229"], ["21", "229"], ["80", "236"], ["21", "236"], ["124", "136"], ["124", "163"], ["124", "149"], ["124", "132"], ["124", "151"], ["124", "162"], ["124", "153"], ["124", "144"], ["124", "134"], ["124", "138"], ["124", "127"], ["124", "155"], ["124", "158"], ["124", "141"], ["124", "159"], ["124", "140"], ["124", "143"], ["124", "156"], ["124", "124"], ["168", "188"], ["168", "179"], ["168", "198"], ["168", "168"], ["168", "181"], ["168", "191"], ["168", "173"], ["168", "186"], ["168", "201"], ["168", "183"], ["168", "193"], ["168", "177"], ["168", "175"], ["201", "230"], ["201", "225"], ["201", "226"], ["201", "213"], ["201", "228"], ["201", "204"], ["201", "208"], ["201", "212"], ["201", "224"], ["201", "201"], ["201", "210"], ["201", "229"], ["201", "211"], ["201", "227"], ["201", "218"], ["201", "219"], ["224", "272"], ["224", "279"], ["224", "264"], ["224", "285"], ["224", "289"], ["224", "267"], ["224", "268"], ["224", "276"], ["224", "280"], ["224", "286"], ["224", "274"], ["224", "263"], ["224", "278"], ["225", "257"], ["225", "256"], ["225", "260"], ["226", "249"], ["226", "251"], ["226", "250"], ["285", "292"], ["227", "244"], ["227", "243"], ["227", "242"], ["228", "235"], ["228", "236"], ["228", "237"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,int fuck = 2001)<SUB>2</SUB>>", "27": "<(LITERAL,2001,int fuck = 2001)<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new File(&quot;input.txt&quot;)))<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new File(&quot;input.txt&quot;))<SUB>4</SUB>>", "37": "<(IDENTIFIER,$obj0,new File(&quot;input.txt&quot;))>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new File(&quot;output.txt&quot;)))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new File(&quot;output.txt&quot;))<SUB>5</SUB>>", "49": "<(IDENTIFIER,$obj2,new File(&quot;output.txt&quot;))>", "51": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "53": "<(LOCAL,int m: int)<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "59": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "61": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "63": "<(LOCAL,int[] Q: int[])<SUB>7</SUB>>", "65": "<(LOCAL,int[] dy: int[])<SUB>7</SUB>>", "67": "<(IDENTIFIER,D,int[] D = new int[fuck * fuck])<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.multiplication,fuck * fuck)<SUB>7</SUB>>", "71": "<(IDENTIFIER,fuck,fuck * fuck)<SUB>7</SUB>>", "73": "<(IDENTIFIER,Q,int[] Q = new int[fuck * (fuck + 1)])<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.multiplication,fuck * (fuck + 1))<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.addition,fuck + 1)<SUB>7</SUB>>", "79": "<(LITERAL,1,fuck + 1)<SUB>7</SUB>>", "81": "<(IDENTIFIER,dx,int[] dx = new int[] { 1, -1, 0, 0 })<SUB>8</SUB>>", "83": "<(LITERAL,1,new int[] { 1, -1, 0, 0 })<SUB>8</SUB>>", "85": "<(LITERAL,1,-1)<SUB>8</SUB>>", "87": "<(LITERAL,0,new int[] { 1, -1, 0, 0 })<SUB>8</SUB>>", "89": "<(IDENTIFIER,dy,int[] dy = new int[] { 0, 0, -1, 1 })<SUB>9</SUB>>", "91": "<(LITERAL,0,new int[] { 0, 0, -1, 1 })<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.minus,-1)<SUB>9</SUB>>", "95": "<(LITERAL,1,new int[] { 0, 0, -1, 1 })<SUB>9</SUB>>", "97": "<(IDENTIFIER,Arrays,fill(D, -1))<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.minus,-1)<SUB>10</SUB>>", "101": "<(LOCAL,int H: int)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.assignment,int H = -1)<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.minus,-1)<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.assignment,int T = 0)<SUB>11</SUB>>", "109": "<(LITERAL,0,int T = 0)<SUB>11</SUB>>", "111": "<(LOCAL,int ans: int)<SUB>13</SUB>>", "113": "<(IDENTIFIER,k,int k = nextInt())<SUB>13</SUB>>", "115": "<(IDENTIFIER,in,nextInt())<SUB>13</SUB>>", "117": "<(IDENTIFIER,ans,int ans = 0)<SUB>13</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); ++i),for (int i = 0; Some(i &lt; k); ++i))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "123": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,i &lt; k)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.preIncrement,++i)<SUB>14</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "131": "<(LOCAL,int y: int)<SUB>15</SUB>>", "133": "<(IDENTIFIER,x,int x = nextInt())<SUB>15</SUB>>", "135": "<(IDENTIFIER,in,nextInt())<SUB>15</SUB>>", "137": "<(IDENTIFIER,y,int y = nextInt())<SUB>15</SUB>>", "139": "<(IDENTIFIER,in,nextInt())<SUB>15</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,D[x * fuck + y])<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.addition,x * fuck + y)<SUB>16</SUB>>", "145": "<(IDENTIFIER,x,x * fuck)<SUB>16</SUB>>", "147": "<(IDENTIFIER,y,x * fuck + y)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.preIncrement,++H)<SUB>18</SUB>>", "151": "<(&lt;operators&gt;.assignmentModulo,H %= Q.length)<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,Q.length)<SUB>18</SUB>>", "155": "<(FIELD_IDENTIFIER,length,length)<SUB>18</SUB>>", "157": "<(IDENTIFIER,ans,ans = Q[H] = x * fuck + y)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,Q[H])<SUB>19</SUB>>", "161": "<(IDENTIFIER,H,Q[H] = x * fuck + y)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.multiplication,x * fuck)<SUB>19</SUB>>", "165": "<(IDENTIFIER,fuck,x * fuck)<SUB>19</SUB>>", "167": "<(CONTROL_STRUCTURE,while (H &gt;= T),while (H &gt;= T))<SUB>22</SUB>>", "169": "<(IDENTIFIER,H,H &gt;= T)<SUB>22</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.assignment,int idx = Q[T++])<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,Q[T++])<SUB>23</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,T++)<SUB>23</SUB>>", "179": "<(&lt;operators&gt;.assignmentModulo,T %= Q.length)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,Q.length)<SUB>23</SUB>>", "183": "<(FIELD_IDENTIFIER,length,length)<SUB>23</SUB>>", "185": "<(LOCAL,int y: int)<SUB>24</SUB>>", "187": "<(IDENTIFIER,x,int x = idx / fuck)<SUB>24</SUB>>", "189": "<(IDENTIFIER,idx,idx / fuck)<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.assignment,int y = idx % fuck)<SUB>24</SUB>>", "193": "<(&lt;operator&gt;.modulo,idx % fuck)<SUB>24</SUB>>", "195": "<(IDENTIFIER,fuck,idx % fuck)<SUB>24</SUB>>", "197": "<(LOCAL,int i: int)<SUB>25</SUB>>", "199": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "201": "<(&lt;operator&gt;.lessThan,i &lt; 4)<SUB>25</SUB>>", "203": "<(LITERAL,4,i &lt; 4)<SUB>25</SUB>>", "205": "<(IDENTIFIER,i,++i)<SUB>25</SUB>>", "207": "<(LOCAL,int wtf: int)<SUB>26</SUB>>", "209": "<(IDENTIFIER,wtf,int wtf = (dx[i] + x) * fuck + (dy[i] + y))<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.multiplication,(dx[i] + x) * fuck)<SUB>26</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>26</SUB>>", "215": "<(IDENTIFIER,i,dx[i] + x)<SUB>26</SUB>>", "217": "<(IDENTIFIER,fuck,(dx[i] + x) * fuck)<SUB>26</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>26</SUB>>", "221": "<(IDENTIFIER,i,dy[i] + y)<SUB>26</SUB>>", "223": "<(CONTROL_STRUCTURE,if (dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1 &amp;&amp; D[wtf] == -1),if (dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1 &amp;&amp; D[wtf] == -1))<SUB>27</SUB>>", "225": "<(&lt;operator&gt;.logicalAnd,dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1 &amp;&amp; dy[i] + y &lt;= m &amp;&amp; dy[i] + y &gt;= 1)<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.logicalAnd,dx[i] + x &lt;= n &amp;&amp; dx[i] + x &gt;= 1)<SUB>27</SUB>>", "229": "<(&lt;operator&gt;.addition,dx[i] + x)<SUB>27</SUB>>", "231": "<(IDENTIFIER,dx,dx[i] + x)<SUB>27</SUB>>", "233": "<(IDENTIFIER,x,dx[i] + x)<SUB>27</SUB>>", "235": "<(&lt;operator&gt;.greaterEqualsThan,dx[i] + x &gt;= 1)<SUB>27</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>27</SUB>>", "239": "<(IDENTIFIER,i,dx[i] + x)<SUB>27</SUB>>", "241": "<(LITERAL,1,dx[i] + x &gt;= 1)<SUB>27</SUB>>", "243": "<(&lt;operator&gt;.addition,dy[i] + y)<SUB>27</SUB>>", "245": "<(IDENTIFIER,dy,dy[i] + y)<SUB>27</SUB>>", "247": "<(IDENTIFIER,y,dy[i] + y)<SUB>27</SUB>>", "249": "<(&lt;operator&gt;.greaterEqualsThan,dy[i] + y &gt;= 1)<SUB>27</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>27</SUB>>", "253": "<(IDENTIFIER,i,dy[i] + y)<SUB>27</SUB>>", "255": "<(LITERAL,1,dy[i] + y &gt;= 1)<SUB>27</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,D[wtf])<SUB>27</SUB>>", "259": "<(IDENTIFIER,wtf,D[wtf] == -1)<SUB>27</SUB>>", "261": "<(LITERAL,1,-1)<SUB>27</SUB>>", "263": "<(&lt;operator&gt;.assignment,D[wtf] = D[idx] + 1)<SUB>28</SUB>>", "265": "<(IDENTIFIER,D,D[wtf] = D[idx] + 1)<SUB>28</SUB>>", "267": "<(&lt;operator&gt;.addition,D[idx] + 1)<SUB>28</SUB>>", "269": "<(IDENTIFIER,D,D[idx] + 1)<SUB>28</SUB>>", "271": "<(LITERAL,1,D[idx] + 1)<SUB>28</SUB>>", "273": "<(IDENTIFIER,H,++H)<SUB>29</SUB>>", "275": "<(IDENTIFIER,H,H %= Q.length)<SUB>29</SUB>>", "277": "<(IDENTIFIER,Q,H %= Q.length)<SUB>29</SUB>>", "279": "<(&lt;operator&gt;.assignment,Q[H] = wtf)<SUB>30</SUB>>", "281": "<(IDENTIFIER,Q,Q[H] = wtf)<SUB>30</SUB>>", "283": "<(IDENTIFIER,wtf,Q[H] = wtf)<SUB>30</SUB>>", "285": "<(&lt;operator&gt;.greaterEqualsThan,D[wtf] &gt;= D[ans])<SUB>32</SUB>>", "287": "<(IDENTIFIER,D,D[wtf] &gt;= D[ans])<SUB>32</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,D[ans])<SUB>32</SUB>>", "291": "<(IDENTIFIER,ans,D[wtf] &gt;= D[ans])<SUB>32</SUB>>", "293": "<(IDENTIFIER,ans,ans = wtf)<SUB>33</SUB>>", "295": "<(println,println((ans / fuck) + &quot; &quot; + (ans % fuck)))<SUB>38</SUB>>", "297": "<(&lt;operator&gt;.addition,(ans / fuck) + &quot; &quot; + (ans % fuck))<SUB>38</SUB>>", "299": "<(&lt;operator&gt;.division,ans / fuck)<SUB>38</SUB>>", "301": "<(IDENTIFIER,fuck,ans / fuck)<SUB>38</SUB>>", "303": "<(&lt;operator&gt;.modulo,ans % fuck)<SUB>38</SUB>>", "305": "<(IDENTIFIER,fuck,ans % fuck)<SUB>38</SUB>>", "307": "<(IDENTIFIER,out,close())<SUB>39</SUB>>", "309": "<(IDENTIFIER,in,close())<SUB>40</SUB>>", "311": "<(MODIFIER,STATIC)>"}}