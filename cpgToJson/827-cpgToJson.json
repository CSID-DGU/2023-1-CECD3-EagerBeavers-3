{"edges": [["17", "18"], ["17", "19"], ["17", "216"], ["17", "217"], ["17", "218"], ["19", "20"], ["19", "23"], ["19", "28"], ["19", "31"], ["19", "36"], ["19", "37"], ["19", "41"], ["19", "42"], ["19", "46"], ["19", "47"], ["19", "53"], ["19", "54"], ["19", "60"], ["19", "61"], ["19", "64"], ["19", "68"], ["19", "73"], ["19", "78"], ["19", "121"], ["19", "122"], ["19", "128"], ["19", "183"], ["19", "184"], ["19", "187"], ["19", "203"], ["19", "214"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "88"], ["78", "90"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "101"], ["95", "96"], ["95", "100"], ["96", "97"], ["96", "98"], ["98", "99"], ["101", "102"], ["101", "103"], ["101", "108"], ["101", "113"], ["101", "116"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["122", "123"], ["122", "124"], ["124", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "138"], ["128", "140"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["140", "168"], ["141", "142"], ["141", "155"], ["142", "143"], ["142", "154"], ["143", "144"], ["143", "153"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "167"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "182"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "181"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["201", "202"], ["203", "204"], ["203", "207"], ["203", "210"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["211", "212"], ["211", "213"], ["214", "215"], ["20", "27"], ["23", "30"], ["28", "35"], ["31", "39"], ["37", "44"], ["42", "50"], ["47", "57"], ["54", "61"], ["61", "64"], ["64", "69"], ["68", "74"], ["73", "80"], ["122", "130"], ["184", "189"], ["214", "218"], ["22", "20"], ["25", "23"], ["30", "28"], ["33", "31"], ["39", "37"], ["44", "42"], ["49", "47"], ["56", "54"], ["69", "68"], ["74", "73"], ["80", "85"], ["83", "91"], ["83", "125"], ["88", "85"], ["124", "122"], ["130", "135"], ["133", "145"], ["133", "184"], ["138", "135"], ["189", "192"], ["192", "198"], ["192", "204"], ["195", "192"], ["204", "207"], ["204", "211"], ["207", "214"], ["27", "25"], ["35", "33"], ["50", "49"], ["57", "56"], ["85", "83"], ["91", "98"], ["91", "88"], ["125", "124"], ["135", "133"], ["141", "173"], ["141", "138"], ["168", "138"], ["198", "201"], ["198", "195"], ["201", "195"], ["211", "214"], ["95", "105"], ["142", "141"], ["142", "159"], ["155", "141"], ["169", "168"], ["96", "95"], ["103", "110"], ["108", "117"], ["108", "88"], ["113", "110"], ["116", "113"], ["143", "142"], ["157", "155"], ["171", "169"], ["98", "96"], ["105", "103"], ["110", "108"], ["117", "116"], ["144", "143"], ["158", "157"], ["172", "171"], ["145", "150"], ["148", "144"], ["159", "164"], ["162", "158"], ["173", "178"], ["176", "172"], ["150", "148"], ["164", "162"], ["178", "176"], ["17", "22"], ["18", "218"], ["20", "218"], ["23", "218"], ["23", "218"], ["28", "218"], ["31", "218"], ["31", "218"], ["37", "218"], ["44", "218"], ["42", "218"], ["42", "218"], ["47", "218"], ["47", "218"], ["54", "218"], ["54", "218"], ["54", "218"], ["61", "218"], ["64", "218"], ["64", "218"], ["68", "218"], ["68", "218"], ["73", "218"], ["73", "218"], ["83", "218"], ["83", "218"], ["122", "218"], ["124", "218"], ["122", "218"], ["122", "218"], ["130", "218"], ["135", "218"], ["133", "218"], ["133", "218"], ["184", "218"], ["189", "218"], ["192", "218"], ["192", "218"], ["192", "218"], ["204", "218"], ["204", "218"], ["204", "218"], ["211", "218"], ["207", "218"], ["214", "218"], ["214", "218"], ["201", "218"], ["195", "218"], ["144", "218"], ["144", "218"], ["143", "218"], ["142", "218"], ["141", "218"], ["158", "218"], ["158", "218"], ["157", "218"], ["141", "218"], ["141", "218"], ["172", "218"], ["172", "218"], ["171", "218"], ["168", "218"], ["168", "218"], ["138", "218"], ["95", "218"], ["95", "218"], ["103", "218"], ["103", "218"], ["108", "218"], ["108", "218"], ["88", "218"], ["116", "218"], ["116", "218"], ["113", "218"], ["64", "218"], ["17", "18"], ["17", "20"], ["17", "28"], ["39", "37"], ["44", "42"], ["49", "47"], ["56", "54"], ["17", "61"], ["17", "68"], ["17", "73"], ["124", "122"], ["17", "184"], ["20", "23"], ["17", "23"], ["28", "31"], ["17", "31"], ["17", "64"], ["47", "64"], ["17", "80"], ["17", "130"], ["17", "189"], ["211", "214"], ["207", "214"], ["17", "214"], ["23", "39"], ["17", "39"], ["39", "44"], ["17", "44"], ["37", "49"], ["17", "49"], ["17", "56"], ["37", "56"], ["80", "83"], ["88", "83"], ["17", "83"], ["37", "83"], ["83", "88"], ["105", "88"], ["17", "88"], ["17", "124"], ["37", "124"], ["130", "133"], ["138", "133"], ["17", "133"], ["135", "133"], ["135", "133"], ["17", "138"], ["133", "138"], ["17", "168"], ["189", "192"], ["195", "192"], ["17", "192"], ["142", "192"], ["37", "192"], ["192", "195"], ["17", "195"], ["184", "204"], ["201", "204"], ["17", "204"], ["42", "204"], ["31", "207"], ["17", "207"], ["37", "50"], ["17", "50"], ["17", "57"], ["37", "57"], ["17", "85"], ["37", "85"], ["83", "95"], ["17", "95"], ["17", "125"], ["37", "125"], ["61", "135"], ["98", "135"], ["17", "135"], ["142", "141"], ["142", "141"], ["64", "141"], ["184", "201"], ["17", "201"], ["31", "211"], ["17", "211"], ["105", "103"], ["105", "103"], ["105", "113"], ["17", "113"], ["17", "116"], ["54", "142"], ["17", "142"], ["37", "142"], ["103", "108"], ["113", "108"], ["17", "108"], ["108", "113"], ["54", "143"], ["17", "143"], ["54", "157"], ["17", "157"], ["54", "171"], ["17", "171"], ["61", "98"], ["17", "98"], ["17", "105"], ["83", "105"], ["17", "110"], ["54", "144"], ["54", "158"], ["54", "172"], ["133", "150"], ["17", "150"], ["17", "164"], ["133", "164"], ["17", "178"], ["133", "178"], ["83", "85"], ["83", "91"], ["83", "88"], ["83", "83"], ["133", "145"], ["133", "150"], ["133", "144"], ["133", "138"], ["133", "148"], ["133", "141"], ["133", "142"], ["133", "143"], ["133", "135"], ["133", "133"], ["192", "192"], ["192", "198"], ["192", "195"], ["204", "207"], ["204", "211"], ["91", "96"], ["91", "98"], ["91", "103"], ["91", "95"], ["91", "108"], ["91", "105"], ["91", "110"], ["141", "169"], ["141", "178"], ["141", "168"], ["141", "173"], ["141", "171"], ["141", "176"], ["141", "172"], ["198", "201"], ["142", "162"], ["142", "164"], ["142", "155"], ["142", "158"], ["142", "157"], ["142", "159"], ["108", "113"], ["108", "108"], ["108", "116"], ["108", "110"], ["108", "117"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new Scanner(System.in))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new Scanner(System.in))<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "27": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "29": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "35": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "39": "<(nextInt,nextInt())<SUB>5</SUB>>", "41": "<(LOCAL,int k: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,k,int k = nextInt())<SUB>6</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,boolean[] p = new boolean[n + 5])<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.alloc,new boolean[n + 5])>", "51": "<(IDENTIFIER,n,n + 5)<SUB>8</SUB>>", "53": "<(LOCAL,int[] pp: int[])<SUB>9</SUB>>", "55": "<(IDENTIFIER,pp,int[] pp = new int[n + 5])<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.addition,n + 5)<SUB>9</SUB>>", "59": "<(LITERAL,5,n + 5)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,int ind = 0)<SUB>10</SUB>>", "63": "<(LITERAL,0,int ind = 0)<SUB>10</SUB>>", "65": "<(IDENTIFIER,Arrays,fill(p, true))<SUB>11</SUB>>", "67": "<(LITERAL,true,fill(p, true))<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,p[0])<SUB>12</SUB>>", "71": "<(LITERAL,0,p[0] = false)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,p[1] = false)<SUB>13</SUB>>", "75": "<(IDENTIFIER,p,p[1] = false)<SUB>13</SUB>>", "77": "<(LITERAL,false,p[1] = false)<SUB>13</SUB>>", "79": "<(LOCAL,int i: int)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,int i = 2)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; n + 5)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.addition,n + 5)<SUB>14</SUB>>", "87": "<(LITERAL,5,n + 5)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>15</SUB>>", "93": "<(IDENTIFIER,i,if (p[i]))<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,pp[ind++] = i)<SUB>16</SUB>>", "97": "<(IDENTIFIER,pp,pp[ind++] = i)<SUB>16</SUB>>", "99": "<(IDENTIFIER,ind,ind++)<SUB>16</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = 2 * i; Some(j &lt; n + 5); j += i),for (int j = 2 * i; Some(j &lt; n + 5); j += i))<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = 2 * i)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.multiplication,2 * i)<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,2 * i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,j,j &lt; n + 5)<SUB>17</SUB>>", "111": "<(IDENTIFIER,n,n + 5)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,j += i)<SUB>17</SUB>>", "115": "<(IDENTIFIER,i,j += i)<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,p[j])<SUB>17</SUB>>", "119": "<(IDENTIFIER,j,p[j] = false)<SUB>17</SUB>>", "121": "<(LOCAL,boolean[] b: boolean[])<SUB>21</SUB>>", "123": "<(IDENTIFIER,b,boolean[] b = new boolean[n + 1])<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.addition,n + 1)<SUB>21</SUB>>", "127": "<(LITERAL,1,n + 1)<SUB>21</SUB>>", "129": "<(LOCAL,int i: int)<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; ind - 1)<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.subtraction,ind - 1)<SUB>22</SUB>>", "137": "<(LITERAL,1,ind - 1)<SUB>22</SUB>>", "139": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.logicalAnd,pp[i] + pp[i + 1] + 1 &lt;= n &amp;&amp; p[pp[i] + pp[i + 1] + 1])<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.addition,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,pp[i])<SUB>23</SUB>>", "147": "<(IDENTIFIER,i,pp[i] + pp[i + 1])<SUB>23</SUB>>", "149": "<(IDENTIFIER,pp,pp[i] + pp[i + 1])<SUB>23</SUB>>", "151": "<(IDENTIFIER,i,i + 1)<SUB>23</SUB>>", "153": "<(LITERAL,1,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,p[pp[i] + pp[i + 1] + 1])<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.addition,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,pp[i])<SUB>23</SUB>>", "161": "<(IDENTIFIER,i,pp[i] + pp[i + 1])<SUB>23</SUB>>", "163": "<(IDENTIFIER,pp,pp[i] + pp[i + 1])<SUB>23</SUB>>", "165": "<(IDENTIFIER,i,i + 1)<SUB>23</SUB>>", "167": "<(LITERAL,1,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,b[pp[i] + pp[i + 1] + 1])<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.addition,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,pp[i])<SUB>23</SUB>>", "175": "<(IDENTIFIER,i,pp[i] + pp[i + 1])<SUB>23</SUB>>", "177": "<(IDENTIFIER,pp,pp[i] + pp[i + 1])<SUB>23</SUB>>", "179": "<(IDENTIFIER,i,i + 1)<SUB>23</SUB>>", "181": "<(LITERAL,1,pp[i] + pp[i + 1] + 1)<SUB>23</SUB>>", "183": "<(LOCAL,int kol: int)<SUB>25</SUB>>", "185": "<(IDENTIFIER,kol,int kol = 0)<SUB>25</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt;= n); i++),for (int i = 2; Some(i &lt;= n); i++))<SUB>26</SUB>>", "189": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>26</SUB>>", "191": "<(LITERAL,2,int i = 2)<SUB>26</SUB>>", "193": "<(IDENTIFIER,i,i &lt;= n)<SUB>26</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "197": "<(CONTROL_STRUCTURE,if (b[i]),if (b[i]))<SUB>27</SUB>>", "199": "<(IDENTIFIER,b,if (b[i]))<SUB>27</SUB>>", "201": "<(&lt;operator&gt;.postIncrement,kol++)<SUB>27</SUB>>", "203": "<(CONTROL_STRUCTURE,if (kol &gt;= k),if (kol &gt;= k))<SUB>29</SUB>>", "205": "<(IDENTIFIER,kol,kol &gt;= k)<SUB>29</SUB>>", "207": "<(println,println(&quot;YES&quot;))<SUB>29</SUB>>", "209": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>29</SUB>>", "211": "<(println,println(&quot;NO&quot;))<SUB>30</SUB>>", "213": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>30</SUB>>", "215": "<(IDENTIFIER,out,close())<SUB>32</SUB>>", "217": "<(MODIFIER,STATIC)>"}}