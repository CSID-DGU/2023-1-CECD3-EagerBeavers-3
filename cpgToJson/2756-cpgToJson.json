{"edges": [["19", "20"], ["19", "21"], ["19", "110"], ["19", "111"], ["19", "112"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "44"], ["35", "36"], ["35", "37"], ["38", "39"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["45", "46"], ["45", "51"], ["45", "67"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "64"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["68", "69"], ["69", "70"], ["69", "75"], ["69", "91"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "88"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["92", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "107"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "47"], ["28", "26"], ["39", "112"], ["40", "39"], ["46", "55"], ["46", "71"], ["42", "40"], ["47", "46"], ["52", "112"], ["53", "59"], ["56", "52"], ["55", "53"], ["57", "64"], ["64", "56"], ["70", "79"], ["70", "96"], ["58", "61"], ["61", "57"], ["71", "70"], ["76", "112"], ["59", "58"], ["77", "83"], ["80", "76"], ["93", "112"], ["79", "77"], ["81", "88"], ["88", "80"], ["94", "100"], ["97", "93"], ["82", "85"], ["85", "81"], ["96", "94"], ["98", "107"], ["107", "97"], ["83", "82"], ["99", "104"], ["104", "98"], ["100", "101"], ["101", "99"], ["19", "24"], ["20", "112"], ["22", "112"], ["25", "112"], ["25", "112"], ["32", "112"], ["30", "112"], ["30", "112"], ["35", "112"], ["39", "112"], ["39", "112"], ["39", "112"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["35", "39"], ["19", "39"], ["47", "46"], ["47", "46"], ["19", "46"], ["35", "47"], ["19", "47"], ["56", "52"], ["56", "52"], ["57", "56"], ["57", "56"], ["64", "56"], ["64", "56"], ["19", "57"], ["47", "57"], ["61", "57"], ["61", "57"], ["61", "64"], ["19", "64"], ["71", "70"], ["71", "70"], ["19", "70"], ["19", "58"], ["47", "58"], ["19", "61"], ["47", "61"], ["47", "71"], ["19", "71"], ["80", "76"], ["80", "76"], ["81", "80"], ["81", "80"], ["88", "80"], ["88", "80"], ["97", "93"], ["97", "93"], ["19", "81"], ["71", "81"], ["85", "81"], ["85", "81"], ["85", "88"], ["19", "88"], ["98", "97"], ["98", "97"], ["107", "97"], ["107", "97"], ["19", "82"], ["71", "82"], ["19", "85"], ["71", "85"], ["19", "98"], ["101", "98"], ["101", "98"], ["104", "98"], ["104", "98"], ["104", "107"], ["19", "107"], ["19", "99"], ["101", "99"], ["101", "99"], ["101", "104"], ["19", "104"], ["71", "101"], ["19", "101"], ["35", "47"], ["35", "42"], ["35", "46"], ["35", "40"], ["35", "39"], ["46", "64"], ["46", "57"], ["46", "52"], ["46", "56"], ["46", "59"], ["46", "58"], ["46", "61"], ["46", "71"], ["46", "53"], ["46", "70"], ["46", "55"], ["70", "107"], ["70", "94"], ["70", "96"], ["70", "77"], ["70", "98"], ["70", "99"], ["70", "81"], ["70", "85"], ["70", "104"], ["70", "76"], ["70", "97"], ["70", "82"], ["70", "93"], ["70", "101"], ["70", "79"], ["70", "80"], ["70", "83"], ["70", "100"], ["70", "88"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>5</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.lessThan,n &lt; 3)<SUB>7</SUB>>", "37": "<(LITERAL,3,n &lt; 3)<SUB>7</SUB>>", "39": "<(println,System.out.println(n))<SUB>9</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(n))<SUB>9</SUB>>", "43": "<(IDENTIFIER,n,System.out.println(n))<SUB>9</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n % 2 == 1),if (n % 2 == 1))<SUB>11</SUB>>", "47": "<(&lt;operator&gt;.modulo,n % 2)<SUB>11</SUB>>", "49": "<(LITERAL,2,n % 2)<SUB>11</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "57": "<(&lt;operator&gt;.multiplication,(long) n * (n - 1))<SUB>13</SUB>>", "59": "<(TYPE_REF,long,long)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "63": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "65": "<(IDENTIFIER,n,n - 2)<SUB>13</SUB>>", "67": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "69": "<(CONTROL_STRUCTURE,if (n % 3 != 0),if (n % 3 != 0))<SUB>17</SUB>>", "71": "<(&lt;operator&gt;.modulo,n % 3)<SUB>17</SUB>>", "73": "<(LITERAL,3,n % 3)<SUB>17</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "77": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "79": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "81": "<(&lt;operator&gt;.multiplication,(long) n * (n - 1))<SUB>19</SUB>>", "83": "<(TYPE_REF,long,long)<SUB>19</SUB>>", "85": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>19</SUB>>", "87": "<(LITERAL,1,n - 1)<SUB>19</SUB>>", "89": "<(IDENTIFIER,n,n - 3)<SUB>19</SUB>>", "91": "<(CONTROL_STRUCTURE,else,else)<SUB>22</SUB>>", "93": "<(println,System.out.println((long) (n - 1) * (n - 2) * (n - 3)))<SUB>23</SUB>>", "95": "<(IDENTIFIER,System,System.out.println((long) (n - 1) * (n - 2) * (n - 3)))<SUB>23</SUB>>", "97": "<(&lt;operator&gt;.multiplication,(long) (n - 1) * (n - 2) * (n - 3))<SUB>23</SUB>>", "99": "<(&lt;operator&gt;.cast,(long) (n - 1))<SUB>23</SUB>>", "101": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>23</SUB>>", "103": "<(LITERAL,1,n - 1)<SUB>23</SUB>>", "105": "<(IDENTIFIER,n,n - 2)<SUB>23</SUB>>", "107": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>23</SUB>>", "109": "<(LITERAL,3,n - 3)<SUB>23</SUB>>", "111": "<(MODIFIER,STATIC)>"}}