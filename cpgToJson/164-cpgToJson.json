{"edges": [["19", "21"], ["19", "189"], ["19", "190"], ["19", "191"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "65"], ["21", "81"], ["21", "82"], ["21", "88"], ["21", "95"], ["21", "148"], ["21", "159"], ["21", "181"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "115"], ["105", "126"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "123"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "138"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "145"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "156"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "171"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "178"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["176", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["185", "188"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["82", "89"], ["88", "97"], ["148", "162"], ["181", "191"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "60"], ["54", "67"], ["57", "54"], ["59", "57"], ["67", "70"], ["70", "76"], ["70", "85"], ["73", "70"], ["75", "73"], ["84", "82"], ["89", "92"], ["92", "88"], ["97", "100"], ["100", "109"], ["100", "152"], ["103", "100"], ["149", "156"], ["156", "148"], ["160", "175"], ["160", "184"], ["182", "185"], ["185", "181"], ["28", "26"], ["60", "63"], ["63", "59"], ["76", "79"], ["79", "75"], ["85", "84"], ["106", "119"], ["115", "129"], ["151", "149"], ["161", "160"], ["161", "167"], ["166", "160"], ["172", "178"], ["178", "184"], ["184", "182"], ["107", "112"], ["112", "106"], ["116", "123"], ["123", "115"], ["127", "142"], ["127", "103"], ["152", "151"], ["162", "161"], ["167", "166"], ["173", "176"], ["176", "172"], ["109", "107"], ["118", "116"], ["128", "127"], ["128", "134"], ["133", "127"], ["139", "145"], ["145", "103"], ["175", "173"], ["119", "118"], ["129", "128"], ["134", "133"], ["140", "143"], ["143", "139"], ["142", "140"], ["19", "24"], ["20", "191"], ["22", "191"], ["25", "191"], ["25", "191"], ["30", "191"], ["37", "191"], ["35", "191"], ["35", "191"], ["40", "191"], ["40", "191"], ["45", "191"], ["45", "191"], ["45", "191"], ["67", "191"], ["82", "191"], ["82", "191"], ["88", "191"], ["88", "191"], ["97", "191"], ["100", "191"], ["100", "191"], ["152", "191"], ["151", "191"], ["148", "191"], ["148", "191"], ["148", "191"], ["161", "191"], ["160", "191"], ["166", "191"], ["160", "191"], ["160", "191"], ["172", "191"], ["172", "191"], ["178", "191"], ["178", "191"], ["181", "191"], ["185", "191"], ["185", "191"], ["181", "191"], ["181", "191"], ["106", "191"], ["106", "191"], ["118", "191"], ["115", "191"], ["115", "191"], ["115", "191"], ["128", "191"], ["127", "191"], ["133", "191"], ["127", "191"], ["127", "191"], ["139", "191"], ["139", "191"], ["145", "191"], ["145", "191"], ["103", "191"], ["75", "191"], ["79", "191"], ["75", "191"], ["75", "191"], ["73", "191"], ["59", "191"], ["63", "191"], ["59", "191"], ["59", "191"], ["57", "191"], ["185", "191"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["84", "82"], ["40", "88"], ["45", "148"], ["22", "25"], ["19", "25"], ["19", "51"], ["63", "59"], ["19", "67"], ["79", "75"], ["19", "97"], ["178", "181"], ["145", "181"], ["185", "181"], ["185", "181"], ["185", "181"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["67", "70"], ["73", "70"], ["19", "70"], ["54", "70"], ["70", "73"], ["19", "73"], ["85", "84"], ["85", "84"], ["97", "100"], ["103", "100"], ["19", "100"], ["85", "100"], ["119", "103"], ["19", "103"], ["40", "106"], ["128", "106"], ["59", "106"], ["45", "115"], ["133", "115"], ["75", "115"], ["161", "160"], ["161", "160"], ["166", "160"], ["166", "160"], ["19", "185"], ["82", "185"], ["88", "185"], ["148", "185"], ["106", "185"], ["115", "185"], ["35", "185"], ["37", "63"], ["19", "63"], ["37", "79"], ["63", "79"], ["19", "79"], ["19", "85"], ["70", "85"], ["152", "151"], ["152", "151"], ["19", "151"], ["40", "161"], ["19", "161"], ["45", "166"], ["19", "166"], ["145", "172"], ["176", "172"], ["25", "178"], ["172", "178"], ["145", "178"], ["19", "178"], ["128", "127"], ["128", "127"], ["133", "127"], ["133", "127"], ["19", "152"], ["100", "152"], ["19", "176"], ["100", "109"], ["19", "109"], ["119", "118"], ["119", "118"], ["19", "118"], ["40", "128"], ["59", "128"], ["19", "128"], ["45", "133"], ["75", "133"], ["19", "133"], ["145", "139"], ["143", "139"], ["25", "145"], ["139", "145"], ["19", "145"], ["109", "119"], ["19", "119"], ["19", "143"], ["54", "60"], ["54", "57"], ["54", "59"], ["54", "54"], ["54", "63"], ["70", "73"], ["70", "75"], ["70", "76"], ["70", "79"], ["70", "70"], ["100", "107"], ["100", "115"], ["100", "116"], ["100", "128"], ["100", "103"], ["100", "119"], ["100", "123"], ["100", "106"], ["100", "112"], ["100", "129"], ["100", "118"], ["100", "100"], ["100", "127"], ["100", "109"], ["160", "178"], ["160", "176"], ["160", "173"], ["160", "175"], ["160", "172"], ["161", "167"], ["161", "166"], ["127", "145"], ["127", "142"], ["127", "140"], ["127", "143"], ["127", "139"], ["128", "134"], ["128", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,int[] a: int[])<SUB>6</SUB>>", "41": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>6</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] b = new int[n])<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>8</SUB>>", "63": "<(nextInt,nextInt())<SUB>8</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,b[i] = nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,b,b[i] = nextInt())<SUB>9</SUB>>", "79": "<(nextInt,nextInt())<SUB>9</SUB>>", "81": "<(LOCAL,int[] c: int[])<SUB>10</SUB>>", "83": "<(IDENTIFIER,c,int[] c = new int[2 * n])<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.multiplication,2 * n)<SUB>10</SUB>>", "87": "<(IDENTIFIER,n,2 * n)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,c[0])<SUB>11</SUB>>", "91": "<(LITERAL,0,c[0] = a[0])<SUB>11</SUB>>", "93": "<(IDENTIFIER,a,c[0] = a[0])<SUB>11</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>12</SUB>>", "99": "<(LITERAL,1,int i = 1)<SUB>12</SUB>>", "101": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,c[i * 2])<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.multiplication,i * 2)<SUB>13</SUB>>", "111": "<(LITERAL,2,i * 2)<SUB>13</SUB>>", "113": "<(IDENTIFIER,a,c[i * 2] = a[i])<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.assignment,c[i * 2 - 1] = b[i])<SUB>14</SUB>>", "117": "<(IDENTIFIER,c,c[i * 2 - 1] = b[i])<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.multiplication,i * 2)<SUB>14</SUB>>", "121": "<(LITERAL,2,i * 2)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,c[i * 2 - 1] = b[i])<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.logicalOr,a[i] == 1 || b[i] == 1)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>15</SUB>>", "131": "<(IDENTIFIER,i,a[i] == 1)<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.equals,b[i] == 1)<SUB>15</SUB>>", "135": "<(IDENTIFIER,b,b[i] == 1)<SUB>15</SUB>>", "137": "<(LITERAL,1,b[i] == 1)<SUB>15</SUB>>", "139": "<(print,System.out.print(-1))<SUB>16</SUB>>", "141": "<(IDENTIFIER,System,System.out.print(-1))<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "145": "<(exit,System.exit(0))<SUB>17</SUB>>", "147": "<(LITERAL,0,System.exit(0))<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,c[2 * n - 1])<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.subtraction,2 * n - 1)<SUB>20</SUB>>", "153": "<(LITERAL,2,2 * n)<SUB>20</SUB>>", "155": "<(LITERAL,1,2 * n - 1)<SUB>20</SUB>>", "157": "<(IDENTIFIER,b,c[2 * n - 1] = b[0])<SUB>20</SUB>>", "159": "<(CONTROL_STRUCTURE,if (a[0] == 1 || b[0] == 1),if (a[0] == 1 || b[0] == 1))<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.equals,a[0] == 1)<SUB>21</SUB>>", "163": "<(IDENTIFIER,a,a[0] == 1)<SUB>21</SUB>>", "165": "<(LITERAL,1,a[0] == 1)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,b[0])<SUB>21</SUB>>", "169": "<(LITERAL,0,b[0] == 1)<SUB>21</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>22</SUB>>", "175": "<(FIELD_IDENTIFIER,out,out)<SUB>22</SUB>>", "177": "<(LITERAL,1,-1)<SUB>22</SUB>>", "179": "<(IDENTIFIER,System,System.exit(0))<SUB>23</SUB>>", "181": "<(println,println(bin_search(c, m)))<SUB>25</SUB>>", "183": "<(IDENTIFIER,System,println(bin_search(c, m)))<SUB>25</SUB>>", "185": "<(bin_search,bin_search(c, m))<SUB>25</SUB>>", "187": "<(IDENTIFIER,c,bin_search(c, m))<SUB>25</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}