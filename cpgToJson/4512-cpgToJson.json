{"edges": [["21", "23"], ["21", "247"], ["21", "248"], ["21", "249"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "64"], ["23", "65"], ["23", "70"], ["23", "115"], ["23", "116"], ["23", "122"], ["23", "128"], ["23", "133"], ["23", "236"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "80"], ["70", "82"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "99"], ["83", "84"], ["84", "85"], ["84", "92"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "98"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["99", "100"], ["100", "101"], ["100", "110"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["118", "119"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["122", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "143"], ["133", "145"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["156", "166"], ["156", "167"], ["156", "170"], ["156", "210"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "164"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "194"], ["186", "202"], ["187", "188"], ["187", "193"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["194", "195"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "218"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["218", "227"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "62"], ["59", "67"], ["65", "72"], ["116", "126"], ["122", "129"], ["128", "135"], ["236", "249"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["67", "65"], ["72", "77"], ["75", "88"], ["75", "119"], ["80", "77"], ["118", "116"], ["125", "122"], ["129", "128"], ["135", "140"], ["138", "148"], ["138", "239"], ["143", "140"], ["237", "243"], ["240", "236"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["62", "61"], ["77", "75"], ["83", "106"], ["99", "80"], ["119", "118"], ["126", "125"], ["140", "138"], ["239", "237"], ["242", "240"], ["31", "29"], ["34", "32"], ["84", "83"], ["100", "99"], ["148", "151"], ["151", "161"], ["151", "143"], ["154", "151"], ["243", "242"], ["36", "34"], ["85", "95"], ["92", "84"], ["101", "111"], ["110", "100"], ["167", "172"], ["210", "154"], ["87", "85"], ["93", "92"], ["103", "101"], ["111", "110"], ["158", "154"], ["158", "167"], ["172", "175"], ["175", "182"], ["175", "215"], ["178", "175"], ["211", "224"], ["218", "210"], ["88", "87"], ["95", "93"], ["104", "103"], ["159", "158"], ["213", "211"], ["220", "230"], ["227", "218"], ["106", "104"], ["161", "159"], ["182", "178"], ["182", "190"], ["187", "198"], ["187", "206"], ["215", "213"], ["222", "220"], ["228", "233"], ["233", "227"], ["188", "187"], ["195", "178"], ["203", "178"], ["224", "222"], ["230", "228"], ["190", "188"], ["197", "195"], ["205", "203"], ["198", "197"], ["206", "205"], ["21", "26"], ["22", "249"], ["24", "249"], ["29", "249"], ["32", "249"], ["32", "249"], ["32", "249"], ["27", "249"], ["38", "249"], ["41", "249"], ["45", "249"], ["54", "249"], ["56", "249"], ["54", "249"], ["52", "249"], ["52", "249"], ["59", "249"], ["62", "249"], ["61", "249"], ["59", "249"], ["59", "249"], ["65", "249"], ["65", "249"], ["65", "249"], ["72", "249"], ["75", "249"], ["77", "249"], ["75", "249"], ["75", "249"], ["116", "249"], ["116", "249"], ["122", "249"], ["122", "249"], ["122", "249"], ["128", "249"], ["128", "249"], ["135", "249"], ["138", "249"], ["138", "249"], ["236", "249"], ["243", "249"], ["242", "249"], ["236", "249"], ["236", "249"], ["148", "249"], ["151", "249"], ["151", "249"], ["143", "249"], ["159", "249"], ["158", "249"], ["158", "249"], ["167", "249"], ["172", "249"], ["175", "249"], ["175", "249"], ["210", "249"], ["222", "249"], ["228", "249"], ["230", "249"], ["228", "249"], ["227", "249"], ["227", "249"], ["218", "249"], ["210", "249"], ["210", "249"], ["182", "249"], ["188", "249"], ["187", "249"], ["187", "249"], ["203", "249"], ["203", "249"], ["195", "249"], ["195", "249"], ["178", "249"], ["154", "249"], ["83", "249"], ["83", "249"], ["103", "249"], ["110", "249"], ["99", "249"], ["99", "249"], ["80", "249"], ["122", "249"], ["218", "249"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["67", "65"], ["118", "116"], ["21", "128"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "72"], ["21", "122"], ["116", "122"], ["21", "135"], ["122", "236"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["62", "61"], ["52", "67"], ["21", "67"], ["72", "75"], ["80", "75"], ["21", "75"], ["77", "75"], ["77", "75"], ["21", "80"], ["75", "80"], ["119", "118"], ["119", "118"], ["21", "125"], ["135", "138"], ["143", "138"], ["21", "138"], ["140", "138"], ["140", "138"], ["138", "143"], ["159", "143"], ["230", "143"], ["21", "143"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["42", "62"], ["21", "62"], ["45", "77"], ["21", "77"], ["21", "119"], ["67", "119"], ["21", "140"], ["119", "140"], ["151", "140"], ["21", "148"], ["243", "242"], ["243", "242"], ["21", "242"], ["148", "151"], ["154", "151"], ["21", "151"], ["140", "151"], ["175", "151"], ["161", "154"], ["224", "154"], ["21", "154"], ["21", "167"], ["218", "210"], ["218", "210"], ["218", "210"], ["21", "243"], ["140", "243"], ["59", "92"], ["103", "92"], ["21", "92"], ["59", "110"], ["87", "110"], ["21", "110"], ["21", "172"], ["59", "87"], ["110", "87"], ["21", "87"], ["59", "103"], ["92", "103"], ["21", "103"], ["159", "158"], ["159", "158"], ["21", "158"], ["172", "175"], ["178", "175"], ["21", "175"], ["151", "175"], ["182", "178"], ["190", "178"], ["21", "178"], ["21", "218"], ["122", "218"], ["210", "218"], ["228", "218"], ["228", "218"], ["75", "95"], ["21", "95"], ["138", "159"], ["230", "159"], ["21", "159"], ["161", "159"], ["161", "159"], ["159", "213"], ["188", "213"], ["21", "213"], ["215", "213"], ["215", "213"], ["228", "227"], ["228", "227"], ["122", "227"], ["21", "106"], ["75", "106"], ["21", "161"], ["151", "161"], ["175", "182"], ["21", "182"], ["161", "182"], ["188", "187"], ["188", "187"], ["21", "187"], ["21", "215"], ["161", "215"], ["182", "215"], ["213", "222"], ["21", "222"], ["224", "222"], ["224", "222"], ["167", "228"], ["203", "228"], ["195", "228"], ["21", "228"], ["230", "228"], ["230", "228"], ["159", "188"], ["21", "188"], ["190", "188"], ["190", "188"], ["167", "195"], ["203", "195"], ["21", "195"], ["167", "203"], ["195", "203"], ["21", "203"], ["21", "224"], ["215", "224"], ["54", "230"], ["21", "230"], ["222", "230"], ["21", "190"], ["182", "190"], ["75", "77"], ["75", "75"], ["75", "84"], ["75", "85"], ["75", "103"], ["75", "104"], ["75", "95"], ["75", "92"], ["75", "87"], ["75", "93"], ["75", "101"], ["75", "80"], ["75", "100"], ["75", "88"], ["75", "111"], ["75", "99"], ["75", "106"], ["75", "83"], ["75", "110"], ["138", "151"], ["138", "138"], ["138", "148"], ["138", "140"], ["138", "143"], ["151", "154"], ["151", "161"], ["151", "151"], ["151", "158"], ["151", "159"], ["158", "167"], ["158", "230"], ["158", "215"], ["158", "213"], ["158", "228"], ["158", "224"], ["158", "233"], ["158", "210"], ["158", "220"], ["158", "211"], ["158", "175"], ["158", "227"], ["158", "222"], ["158", "218"], ["158", "172"], ["175", "178"], ["175", "182"], ["175", "175"], ["182", "188"], ["182", "187"], ["182", "190"], ["187", "197"], ["187", "198"], ["187", "206"], ["187", "195"], ["187", "205"], ["187", "203"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "49": "<(nextToken,nextToken())<SUB>4</SUB>>", "51": "<(LOCAL,int m: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,char[] arr = toCharArray())<SUB>6</SUB>>", "61": "<(toCharArray,toCharArray())<SUB>6</SUB>>", "63": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "65": "<(&lt;operator&gt;.assignment,int[][] count = new int[m][m])<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.alloc,new int[m][m])>", "69": "<(IDENTIFIER,m,new int[m][m])<SUB>7</SUB>>", "71": "<(LOCAL,int i: int)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>8</SUB>>", "79": "<(LITERAL,1,n - 1)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,count[arr[i] - 'a'][arr[i + 1] - 'a']++)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,count[arr[i] - 'a'])<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.subtraction,arr[i] - 'a')<SUB>9</SUB>>", "89": "<(IDENTIFIER,arr,arr[i] - 'a')<SUB>9</SUB>>", "91": "<(LITERAL,'a',arr[i] - 'a')<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[i + 1])<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.addition,i + 1)<SUB>9</SUB>>", "97": "<(LITERAL,1,i + 1)<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,count[arr[i + 1] - 'a'][arr[i] - 'a']++)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,count[arr[i + 1] - 'a'])<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.subtraction,arr[i + 1] - 'a')<SUB>10</SUB>>", "105": "<(IDENTIFIER,arr,arr[i + 1] - 'a')<SUB>10</SUB>>", "107": "<(IDENTIFIER,i,i + 1)<SUB>10</SUB>>", "109": "<(LITERAL,'a',arr[i + 1] - 'a')<SUB>10</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>10</SUB>>", "113": "<(IDENTIFIER,i,arr[i] - 'a')<SUB>10</SUB>>", "115": "<(LOCAL,int[] memo: int[])<SUB>12</SUB>>", "117": "<(IDENTIFIER,memo,int[] memo = new int[1 &lt;&lt; m])<SUB>12</SUB>>", "119": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>12</SUB>>", "121": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>12</SUB>>", "123": "<(IDENTIFIER,Arrays,fill(memo, (int) 1e9))<SUB>13</SUB>>", "125": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>13</SUB>>", "127": "<(LITERAL,1e9,(int) 1e9)<SUB>13</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,memo[0])<SUB>14</SUB>>", "131": "<(LITERAL,0,memo[0] = 0)<SUB>14</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int msk = 0; Some(msk &lt; 1 &lt;&lt; m); msk++),for (int msk = 0; Some(msk &lt; 1 &lt;&lt; m); msk++))<SUB>15</SUB>>", "135": "<(&lt;operator&gt;.assignment,int msk = 0)<SUB>15</SUB>>", "137": "<(LITERAL,0,int msk = 0)<SUB>15</SUB>>", "139": "<(IDENTIFIER,msk,msk &lt; 1 &lt;&lt; m)<SUB>15</SUB>>", "141": "<(LITERAL,1,1 &lt;&lt; m)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,msk++)<SUB>15</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "147": "<(LOCAL,int c: int)<SUB>16</SUB>>", "149": "<(IDENTIFIER,c,int c = 0)<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.lessThan,c &lt; m)<SUB>16</SUB>>", "153": "<(IDENTIFIER,m,c &lt; m)<SUB>16</SUB>>", "155": "<(IDENTIFIER,c,c++)<SUB>16</SUB>>", "157": "<(CONTROL_STRUCTURE,if ((msk &amp; 1 &lt;&lt; c) != 0),if ((msk &amp; 1 &lt;&lt; c) != 0))<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.and,msk &amp; 1 &lt;&lt; c)<SUB>17</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; c)<SUB>17</SUB>>", "163": "<(IDENTIFIER,c,1 &lt;&lt; c)<SUB>17</SUB>>", "165": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>18</SUB>>", "167": "<(&lt;operator&gt;.assignment,int temp = 0)<SUB>19</SUB>>", "169": "<(LITERAL,0,int temp = 0)<SUB>19</SUB>>", "171": "<(LOCAL,int i: int)<SUB>20</SUB>>", "173": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "175": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>20</SUB>>", "177": "<(IDENTIFIER,m,i &lt; m)<SUB>20</SUB>>", "179": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "181": "<(CONTROL_STRUCTURE,if (i == c),if (i == c))<SUB>21</SUB>>", "183": "<(IDENTIFIER,i,i == c)<SUB>21</SUB>>", "185": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>22</SUB>>", "187": "<(&lt;operator&gt;.notEquals,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>23</SUB>>", "189": "<(IDENTIFIER,msk,msk &amp; 1 &lt;&lt; i)<SUB>23</SUB>>", "191": "<(LITERAL,1,1 &lt;&lt; i)<SUB>23</SUB>>", "193": "<(LITERAL,0,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>23</SUB>>", "195": "<(&lt;operator&gt;.assignmentPlus,temp += count[c][i])<SUB>24</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,count[c][i])<SUB>24</SUB>>", "199": "<(IDENTIFIER,count,temp += count[c][i])<SUB>24</SUB>>", "201": "<(IDENTIFIER,i,temp += count[c][i])<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.assignmentMinus,temp -= count[c][i])<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,count[c][i])<SUB>26</SUB>>", "207": "<(IDENTIFIER,count,temp -= count[c][i])<SUB>26</SUB>>", "209": "<(IDENTIFIER,i,temp -= count[c][i])<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,memo[msk | 1 &lt;&lt; c])<SUB>28</SUB>>", "213": "<(&lt;operator&gt;.or,msk | 1 &lt;&lt; c)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; c)<SUB>28</SUB>>", "217": "<(IDENTIFIER,c,1 &lt;&lt; c)<SUB>28</SUB>>", "219": "<(IDENTIFIER,Math,Math.min(memo[msk | 1 &lt;&lt; c], temp * Integer.bitCount(msk) + memo[msk]))<SUB>28</SUB>>", "221": "<(IDENTIFIER,memo,Math.min(memo[msk | 1 &lt;&lt; c], temp * Integer.bitCount(msk) + memo[msk]))<SUB>28</SUB>>", "223": "<(IDENTIFIER,msk,msk | 1 &lt;&lt; c)<SUB>28</SUB>>", "225": "<(LITERAL,1,1 &lt;&lt; c)<SUB>28</SUB>>", "227": "<(&lt;operator&gt;.addition,temp * Integer.bitCount(msk) + memo[msk])<SUB>28</SUB>>", "229": "<(IDENTIFIER,temp,temp * Integer.bitCount(msk))<SUB>28</SUB>>", "231": "<(IDENTIFIER,Integer,Integer.bitCount(msk))<SUB>28</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,memo[msk])<SUB>28</SUB>>", "235": "<(IDENTIFIER,msk,temp * Integer.bitCount(msk) + memo[msk])<SUB>28</SUB>>", "237": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>31</SUB>>", "239": "<(FIELD_IDENTIFIER,out,out)<SUB>31</SUB>>", "241": "<(IDENTIFIER,memo,System.out.println(memo[(1 &lt;&lt; m) - 1]))<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>31</SUB>>", "245": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>31</SUB>>", "247": "<(MODIFIER,PUBLIC)>", "249": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}