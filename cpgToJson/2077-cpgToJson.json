{"edges": [["19", "21"], ["19", "257"], ["19", "258"], ["19", "259"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "57"], ["21", "60"], ["21", "173"], ["21", "253"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "49"], ["39", "51"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "64"], ["60", "78"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "77"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "75"], ["69", "76"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["78", "79"], ["79", "80"], ["79", "97"], ["79", "130"], ["80", "81"], ["80", "92"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "103"], ["97", "124"], ["97", "129"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "113"], ["103", "115"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["130", "131"], ["131", "132"], ["131", "143"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "149"], ["143", "168"], ["143", "172"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["173", "178"], ["173", "183"], ["173", "185"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["185", "186"], ["185", "187"], ["185", "201"], ["185", "202"], ["185", "220"], ["185", "221"], ["185", "232"], ["185", "239"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "193"], ["189", "196"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "212"], ["204", "215"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["223", "226"], ["226", "227"], ["226", "228"], ["226", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "247"], ["243", "250"], ["244", "245"], ["244", "246"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["254", "255"], ["254", "256"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "61"], ["253", "259"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "48"], ["44", "52"], ["44", "57"], ["49", "48"], ["51", "49"], ["61", "68"], ["61", "82"], ["175", "182"], ["178", "190"], ["178", "256"], ["183", "182"], ["254", "253"], ["28", "26"], ["46", "44"], ["52", "55"], ["55", "51"], ["65", "77"], ["77", "259"], ["180", "178"], ["187", "210"], ["202", "229"], ["221", "233"], ["239", "183"], ["256", "254"], ["48", "46"], ["66", "71"], ["69", "65"], ["80", "101"], ["80", "133"], ["182", "180"], ["189", "187"], ["204", "202"], ["223", "221"], ["233", "236"], ["233", "242"], ["236", "242"], ["240", "244"], ["243", "239"], ["68", "66"], ["70", "69"], ["81", "80"], ["81", "93"], ["92", "80"], ["98", "105"], ["124", "129"], ["129", "259"], ["190", "195"], ["190", "198"], ["193", "189"], ["196", "189"], ["205", "214"], ["205", "217"], ["212", "204"], ["215", "204"], ["226", "223"], ["242", "240"], ["244", "247"], ["244", "250"], ["247", "243"], ["250", "243"], ["71", "70"], ["82", "90"], ["85", "81"], ["93", "92"], ["99", "98"], ["105", "110"], ["108", "118"], ["108", "127"], ["113", "110"], ["115", "113"], ["125", "124"], ["132", "147"], ["132", "175"], ["195", "193"], ["198", "196"], ["207", "205"], ["214", "212"], ["217", "215"], ["229", "226"], ["87", "85"], ["101", "99"], ["110", "108"], ["116", "121"], ["119", "115"], ["127", "125"], ["133", "141"], ["136", "132"], ["144", "151"], ["168", "172"], ["172", "259"], ["208", "207"], ["88", "87"], ["118", "116"], ["121", "119"], ["138", "136"], ["145", "144"], ["151", "154"], ["154", "162"], ["154", "171"], ["157", "154"], ["159", "157"], ["169", "168"], ["210", "208"], ["90", "88"], ["139", "138"], ["147", "145"], ["160", "165"], ["163", "159"], ["171", "169"], ["141", "139"], ["162", "160"], ["165", "163"], ["19", "24"], ["77", "259"], ["172", "259"], ["129", "259"], ["20", "259"], ["22", "259"], ["25", "259"], ["25", "259"], ["32", "259"], ["30", "259"], ["30", "259"], ["35", "259"], ["35", "259"], ["41", "259"], ["44", "259"], ["44", "259"], ["57", "259"], ["57", "259"], ["61", "259"], ["61", "259"], ["65", "259"], ["70", "259"], ["69", "259"], ["65", "259"], ["51", "259"], ["55", "259"], ["51", "259"], ["51", "259"], ["49", "259"], ["57", "259"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["22", "25"], ["19", "25"], ["19", "41"], ["55", "51"], ["19", "57"], ["35", "57"], ["44", "57"], ["51", "57"], ["19", "175"], ["239", "253"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["49", "44"], ["19", "44"], ["35", "44"], ["44", "49"], ["19", "49"], ["37", "61"], ["19", "61"], ["19", "77"], ["175", "178"], ["183", "178"], ["19", "178"], ["57", "178"], ["138", "178"], ["207", "178"], ["244", "183"], ["19", "183"], ["57", "187"], ["57", "202"], ["223", "221"], ["223", "221"], ["223", "221"], ["32", "55"], ["19", "55"], ["19", "65"], ["19", "236"], ["19", "239"], ["221", "239"], ["236", "239"], ["19", "69"], ["81", "80"], ["81", "80"], ["92", "80"], ["92", "80"], ["19", "129"], ["57", "189"], ["57", "204"], ["226", "223"], ["19", "223"], ["187", "223"], ["226", "223"], ["226", "223"], ["205", "233"], ["19", "233"], ["19", "243"], ["221", "243"], ["236", "243"], ["57", "70"], ["19", "70"], ["57", "81"], ["57", "92"], ["81", "92"], ["19", "92"], ["19", "98"], ["19", "105"], ["98", "124"], ["115", "124"], ["19", "124"], ["178", "190"], ["19", "190"], ["190", "205"], ["198", "205"], ["19", "205"], ["207", "205"], ["207", "205"], ["223", "226"], ["19", "226"], ["202", "226"], ["57", "226"], ["51", "226"], ["233", "244"], ["19", "244"], ["19", "247"], ["221", "247"], ["236", "247"], ["19", "250"], ["221", "250"], ["236", "250"], ["105", "108"], ["113", "108"], ["19", "108"], ["110", "108"], ["110", "108"], ["108", "113"], ["19", "113"], ["98", "115"], ["19", "115"], ["57", "115"], ["51", "115"], ["57", "132"], ["81", "132"], ["92", "132"], ["81", "132"], ["19", "172"], ["190", "198"], ["19", "198"], ["57", "207"], ["178", "207"], ["19", "207"], ["205", "217"], ["19", "217"], ["57", "87"], ["19", "87"], ["61", "110"], ["19", "110"], ["19", "119"], ["57", "119"], ["51", "119"], ["19", "144"], ["19", "151"], ["144", "168"], ["159", "168"], ["57", "138"], ["87", "138"], ["19", "138"], ["151", "154"], ["157", "154"], ["19", "154"], ["61", "154"], ["154", "157"], ["19", "157"], ["144", "159"], ["19", "159"], ["57", "159"], ["51", "159"], ["19", "163"], ["57", "163"], ["51", "163"], ["44", "51"], ["44", "52"], ["44", "44"], ["44", "48"], ["44", "49"], ["44", "46"], ["44", "55"], ["61", "68"], ["61", "77"], ["61", "81"], ["61", "85"], ["61", "69"], ["61", "87"], ["61", "90"], ["61", "80"], ["61", "88"], ["61", "70"], ["61", "66"], ["61", "65"], ["61", "82"], ["61", "71"], ["178", "178"], ["178", "240"], ["178", "226"], ["178", "244"], ["178", "189"], ["178", "243"], ["178", "204"], ["178", "208"], ["178", "242"], ["178", "223"], ["178", "187"], ["178", "190"], ["178", "207"], ["178", "182"], ["178", "221"], ["178", "202"], ["178", "233"], ["178", "239"], ["178", "180"], ["178", "205"], ["178", "183"], ["178", "210"], ["178", "229"], ["80", "98"], ["80", "136"], ["80", "132"], ["80", "129"], ["80", "138"], ["80", "101"], ["80", "127"], ["80", "139"], ["80", "108"], ["80", "141"], ["80", "99"], ["80", "105"], ["80", "110"], ["80", "124"], ["80", "125"], ["80", "133"], ["233", "236"], ["81", "92"], ["81", "93"], ["190", "196"], ["190", "198"], ["190", "195"], ["190", "193"], ["205", "214"], ["205", "215"], ["205", "212"], ["205", "217"], ["244", "247"], ["244", "250"], ["108", "115"], ["108", "113"], ["108", "119"], ["108", "121"], ["108", "118"], ["108", "108"], ["108", "116"], ["108", "110"], ["132", "154"], ["132", "145"], ["132", "169"], ["132", "178"], ["132", "151"], ["132", "256"], ["132", "168"], ["132", "144"], ["132", "182"], ["132", "180"], ["132", "171"], ["132", "253"], ["132", "254"], ["132", "147"], ["132", "175"], ["132", "172"], ["154", "154"], ["154", "163"], ["154", "162"], ["154", "160"], ["154", "157"], ["154", "159"], ["154", "165"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] A = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; A.length); ++i),for (int i = 0; Some(i &lt; A.length); ++i))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; A.length)<SUB>5</SUB>>", "47": "<(IDENTIFIER,A,i &lt; A.length)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,A[i] = nextInt())<SUB>5</SUB>>", "53": "<(IDENTIFIER,A,A[i] = nextInt())<SUB>5</SUB>>", "55": "<(nextInt,nextInt())<SUB>5</SUB>>", "57": "<(sort,sort(A))<SUB>6</SUB>>", "59": "<(IDENTIFIER,A,sort(A))<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.equals,n == 1)<SUB>7</SUB>>", "63": "<(LITERAL,1,n == 1)<SUB>7</SUB>>", "65": "<(println,System.out.println((A[0] == 1) ? &quot;2&quot; : &quot;1&quot;))<SUB>8</SUB>>", "67": "<(IDENTIFIER,System,System.out.println((A[0] == 1) ? &quot;2&quot; : &quot;1&quot;))<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.conditional,(A[0] == 1) ? &quot;2&quot; : &quot;1&quot;)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,A[0])<SUB>8</SUB>>", "73": "<(LITERAL,0,A[0] == 1)<SUB>8</SUB>>", "75": "<(LITERAL,&quot;2&quot;,(A[0] == 1) ? &quot;2&quot; : &quot;1&quot;)<SUB>8</SUB>>", "77": "<(RETURN,return;,return;)<SUB>9</SUB>>", "79": "<(CONTROL_STRUCTURE,if (A[0] == A[A.length - 1] &amp;&amp; A[0] == 1),if (A[0] == A[A.length - 1] &amp;&amp; A[0] == 1))<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.equals,A[0] == A[A.length - 1])<SUB>10</SUB>>", "83": "<(IDENTIFIER,A,A[0] == A[A.length - 1])<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,A[A.length - 1])<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.subtraction,A.length - 1)<SUB>10</SUB>>", "89": "<(IDENTIFIER,A,A.length - 1)<SUB>10</SUB>>", "91": "<(LITERAL,1,A.length - 1)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,A[0])<SUB>10</SUB>>", "95": "<(LITERAL,0,A[0] == 1)<SUB>10</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "101": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n - 1); ++i),for (int i = 1; Some(i &lt; n - 1); ++i))<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>12</SUB>>", "107": "<(LITERAL,1,int i = 1)<SUB>12</SUB>>", "109": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>12</SUB>>", "111": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.preIncrement,++i)<SUB>12</SUB>>", "115": "<(print,System.out.print(&quot; &quot; + A[i]))<SUB>12</SUB>>", "117": "<(IDENTIFIER,System,System.out.print(&quot; &quot; + A[i]))<SUB>12</SUB>>", "119": "<(&lt;operator&gt;.addition,&quot; &quot; + A[i])<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>12</SUB>>", "123": "<(IDENTIFIER,i,&quot; &quot; + A[i])<SUB>12</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "129": "<(RETURN,return;,return;)<SUB>14</SUB>>", "131": "<(CONTROL_STRUCTURE,if (A[0] == A[A.length - 1]),if (A[0] == A[A.length - 1]))<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,A[0])<SUB>15</SUB>>", "135": "<(LITERAL,0,A[0] == A[A.length - 1])<SUB>15</SUB>>", "137": "<(IDENTIFIER,A,A[0] == A[A.length - 1])<SUB>15</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,A.length)<SUB>15</SUB>>", "141": "<(FIELD_IDENTIFIER,length,length)<SUB>15</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); ++i),for (int i = 1; Some(i &lt; n); ++i))<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>17</SUB>>", "153": "<(LITERAL,1,int i = 1)<SUB>17</SUB>>", "155": "<(IDENTIFIER,i,i &lt; n)<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.preIncrement,++i)<SUB>17</SUB>>", "159": "<(print,System.out.print(&quot; &quot; + A[i]))<SUB>17</SUB>>", "161": "<(IDENTIFIER,System,System.out.print(&quot; &quot; + A[i]))<SUB>17</SUB>>", "163": "<(&lt;operator&gt;.addition,&quot; &quot; + A[i])<SUB>17</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>17</SUB>>", "167": "<(IDENTIFIER,i,&quot; &quot; + A[i])<SUB>17</SUB>>", "169": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "171": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "173": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; A.length); ++i),for (int i = 0; Some(i &lt; A.length); ++i))<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "177": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "179": "<(IDENTIFIER,i,i &lt; A.length)<SUB>22</SUB>>", "181": "<(IDENTIFIER,A,i &lt; A.length)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.preIncrement,++i)<SUB>22</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "187": "<(&lt;operator&gt;.assignment,int prev = (i == 0) ? Integer.MAX_VALUE : A[i - 1])<SUB>23</SUB>>", "189": "<(&lt;operator&gt;.conditional,(i == 0) ? Integer.MAX_VALUE : A[i - 1])<SUB>23</SUB>>", "191": "<(IDENTIFIER,i,i == 0)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>23</SUB>>", "195": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>23</SUB>>", "197": "<(IDENTIFIER,A,(i == 0) ? Integer.MAX_VALUE : A[i - 1])<SUB>23</SUB>>", "199": "<(IDENTIFIER,i,i - 1)<SUB>23</SUB>>", "201": "<(LOCAL,int next: int)<SUB>24</SUB>>", "203": "<(IDENTIFIER,next,int next = (i == A.length - 1) ? Integer.MAX_VALUE : A[i + 1])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.equals,i == A.length - 1)<SUB>24</SUB>>", "207": "<(&lt;operator&gt;.subtraction,A.length - 1)<SUB>24</SUB>>", "209": "<(IDENTIFIER,A,A.length - 1)<SUB>24</SUB>>", "211": "<(LITERAL,1,A.length - 1)<SUB>24</SUB>>", "213": "<(IDENTIFIER,Integer,(i == A.length - 1) ? Integer.MAX_VALUE : A[i + 1])<SUB>24</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,A[i + 1])<SUB>24</SUB>>", "217": "<(&lt;operator&gt;.addition,i + 1)<SUB>24</SUB>>", "219": "<(LITERAL,1,i + 1)<SUB>24</SUB>>", "221": "<(&lt;operator&gt;.assignment,int ans = Math.min(prev, Math.min(next, A[i])))<SUB>25</SUB>>", "223": "<(min,Math.min(prev, Math.min(next, A[i])))<SUB>25</SUB>>", "225": "<(IDENTIFIER,prev,Math.min(prev, Math.min(next, A[i])))<SUB>25</SUB>>", "227": "<(IDENTIFIER,Math,Math.min(next, A[i]))<SUB>25</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>25</SUB>>", "231": "<(IDENTIFIER,i,Math.min(next, A[i]))<SUB>25</SUB>>", "233": "<(&lt;operator&gt;.equals,i == 0)<SUB>26</SUB>>", "235": "<(LITERAL,0,i == 0)<SUB>26</SUB>>", "237": "<(IDENTIFIER,ans,ans = 1)<SUB>26</SUB>>", "239": "<(print,System.out.print((i == 0) ? &quot;&quot; + ans : &quot; &quot; + ans))<SUB>28</SUB>>", "241": "<(IDENTIFIER,System,System.out.print((i == 0) ? &quot;&quot; + ans : &quot; &quot; + ans))<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.conditional,(i == 0) ? &quot;&quot; + ans : &quot; &quot; + ans)<SUB>28</SUB>>", "245": "<(IDENTIFIER,i,i == 0)<SUB>28</SUB>>", "247": "<(&lt;operator&gt;.addition,&quot;&quot; + ans)<SUB>28</SUB>>", "249": "<(IDENTIFIER,ans,&quot;&quot; + ans)<SUB>28</SUB>>", "251": "<(LITERAL,&quot; &quot;,&quot; &quot; + ans)<SUB>28</SUB>>", "253": "<(println,System.out.println())<SUB>30</SUB>>", "255": "<(IDENTIFIER,System,System.out.println())<SUB>30</SUB>>", "257": "<(MODIFIER,PUBLIC)>", "259": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}