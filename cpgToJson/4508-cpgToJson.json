{"edges": [["21", "23"], ["21", "167"], ["21", "168"], ["21", "169"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "42"], ["23", "46"], ["23", "51"], ["23", "56"], ["23", "102"], ["23", "109"], ["23", "148"], ["23", "154"], ["23", "159"], ["23", "165"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "69"], ["66", "78"], ["66", "85"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "77"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "96"], ["90", "91"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "141"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["141", "144"], ["141", "145"], ["141", "146"], ["146", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "157"], ["157", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["161", "164"], ["165", "166"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "40"], ["38", "44"], ["42", "49"], ["46", "53"], ["51", "58"], ["102", "111"], ["148", "157"], ["154", "161"], ["159", "165"], ["165", "169"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "51"], ["58", "61"], ["61", "74"], ["61", "106"], ["64", "61"], ["104", "102"], ["111", "114"], ["114", "121"], ["114", "151"], ["117", "114"], ["150", "148"], ["157", "154"], ["161", "159"], ["30", "28"], ["37", "35"], ["49", "48"], ["69", "81"], ["78", "86"], ["106", "104"], ["121", "126"], ["141", "117"], ["151", "150"], ["71", "69"], ["80", "78"], ["86", "92"], ["86", "64"], ["126", "129"], ["129", "137"], ["129", "146"], ["132", "129"], ["134", "132"], ["146", "141"], ["72", "71"], ["81", "80"], ["90", "98"], ["96", "64"], ["136", "134"], ["74", "72"], ["91", "90"], ["97", "96"], ["137", "136"], ["92", "91"], ["98", "97"], ["21", "26"], ["22", "169"], ["24", "169"], ["27", "169"], ["27", "169"], ["31", "169"], ["34", "169"], ["34", "169"], ["38", "169"], ["42", "169"], ["42", "169"], ["46", "169"], ["49", "169"], ["48", "169"], ["46", "169"], ["46", "169"], ["51", "169"], ["51", "169"], ["51", "169"], ["58", "169"], ["61", "169"], ["61", "169"], ["102", "169"], ["102", "169"], ["111", "169"], ["114", "169"], ["114", "169"], ["151", "169"], ["150", "169"], ["148", "169"], ["148", "169"], ["154", "169"], ["154", "169"], ["154", "169"], ["161", "169"], ["159", "169"], ["159", "169"], ["165", "169"], ["165", "169"], ["121", "169"], ["126", "169"], ["129", "169"], ["129", "169"], ["146", "169"], ["141", "169"], ["141", "169"], ["117", "169"], ["134", "169"], ["134", "169"], ["132", "169"], ["71", "169"], ["69", "169"], ["69", "169"], ["80", "169"], ["78", "169"], ["78", "169"], ["86", "169"], ["86", "169"], ["86", "169"], ["90", "169"], ["90", "169"], ["96", "169"], ["96", "169"], ["64", "169"], ["102", "169"], ["154", "169"], ["21", "22"], ["21", "24"], ["21", "31"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "51"], ["104", "102"], ["104", "102"], ["150", "148"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "58"], ["21", "111"], ["21", "154"], ["148", "154"], ["157", "154"], ["34", "159"], ["21", "159"], ["161", "159"], ["161", "159"], ["159", "165"], ["21", "165"], ["27", "40"], ["21", "40"], ["40", "44"], ["21", "44"], ["49", "48"], ["42", "53"], ["21", "53"], ["58", "61"], ["64", "61"], ["21", "61"], ["38", "61"], ["74", "64"], ["21", "64"], ["71", "69"], ["71", "69"], ["80", "78"], ["80", "78"], ["106", "104"], ["21", "104"], ["106", "104"], ["111", "114"], ["117", "114"], ["21", "114"], ["104", "114"], ["129", "114"], ["141", "117"], ["21", "117"], ["21", "121"], ["151", "150"], ["151", "150"], ["21", "157"], ["141", "161"], ["21", "161"], ["44", "49"], ["21", "49"], ["21", "106"], ["53", "106"], ["21", "126"], ["21", "141"], ["114", "141"], ["146", "141"], ["21", "151"], ["114", "151"], ["46", "71"], ["21", "71"], ["46", "80"], ["21", "80"], ["69", "86"], ["21", "86"], ["78", "86"], ["126", "129"], ["132", "129"], ["21", "129"], ["114", "129"], ["129", "132"], ["21", "132"], ["121", "134"], ["21", "134"], ["121", "146"], ["134", "146"], ["21", "146"], ["61", "74"], ["21", "74"], ["61", "64"], ["61", "81"], ["61", "72"], ["61", "69"], ["61", "74"], ["61", "80"], ["61", "61"], ["61", "71"], ["61", "78"], ["61", "86"], ["114", "141"], ["114", "146"], ["114", "114"], ["114", "121"], ["114", "129"], ["114", "126"], ["114", "117"], ["86", "96"], ["86", "98"], ["86", "92"], ["86", "97"], ["86", "91"], ["86", "90"], ["129", "136"], ["129", "132"], ["129", "129"], ["129", "134"], ["129", "137"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(IDENTIFIER,n,n = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,m,m = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,s,s = toCharArray())<SUB>6</SUB>>", "49": "<(next,next())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,g = new int[m][m])<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[m][m])>", "55": "<(IDENTIFIER,m,new int[m][m])<SUB>7</SUB>>", "57": "<(LOCAL,int i: int)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,int i = 1)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "67": "<(LOCAL,int x: int)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,int x = s[i - 1] - 'a')<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.subtraction,s[i - 1] - 'a')<SUB>9</SUB>>", "73": "<(IDENTIFIER,s,s[i - 1] - 'a')<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,i - 1)<SUB>9</SUB>>", "77": "<(LITERAL,'a',s[i - 1] - 'a')<SUB>9</SUB>>", "79": "<(IDENTIFIER,y,int y = s[i] - 'a')<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,s[i] - 'a')<SUB>9</SUB>>", "85": "<(CONTROL_STRUCTURE,if (x != y),if (x != y))<SUB>10</SUB>>", "87": "<(IDENTIFIER,x,x != y)<SUB>10</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,g[x][y])<SUB>11</SUB>>", "93": "<(IDENTIFIER,g,g[x][y]++)<SUB>11</SUB>>", "95": "<(IDENTIFIER,y,g[x][y]++)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,g[y][x])<SUB>12</SUB>>", "99": "<(IDENTIFIER,g,g[y][x]++)<SUB>12</SUB>>", "101": "<(IDENTIFIER,x,g[y][x]++)<SUB>12</SUB>>", "103": "<(IDENTIFIER,cost,cost = new int[m][1 &lt;&lt; m])<SUB>15</SUB>>", "105": "<(IDENTIFIER,m,new int[m][1 &lt;&lt; m])<SUB>15</SUB>>", "107": "<(LITERAL,1,1 &lt;&lt; m)<SUB>15</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "115": "<(IDENTIFIER,i,i &lt; m)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.assignment,int w = 0)<SUB>17</SUB>>", "123": "<(LITERAL,0,int w = 0)<SUB>17</SUB>>", "125": "<(LOCAL,int j: int)<SUB>18</SUB>>", "127": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>18</SUB>>", "131": "<(IDENTIFIER,m,j &lt; m)<SUB>18</SUB>>", "133": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "135": "<(IDENTIFIER,w,w += g[i][j])<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>18</SUB>>", "139": "<(IDENTIFIER,i,w += g[i][j])<SUB>18</SUB>>", "141": "<(pre,pre(i, 0, 0, -w))<SUB>19</SUB>>", "143": "<(IDENTIFIER,i,pre(i, 0, 0, -w))<SUB>19</SUB>>", "145": "<(LITERAL,0,pre(i, 0, 0, -w))<SUB>19</SUB>>", "147": "<(IDENTIFIER,w,-w)<SUB>19</SUB>>", "149": "<(IDENTIFIER,dp,dp = new int[1 &lt;&lt; m])<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>21</SUB>>", "153": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>21</SUB>>", "155": "<(IDENTIFIER,Arrays,fill(dp, -1))<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "159": "<(println,println(solve(0, 0)))<SUB>23</SUB>>", "161": "<(solve,solve(0, 0))<SUB>23</SUB>>", "163": "<(LITERAL,0,solve(0, 0))<SUB>23</SUB>>", "165": "<(close,close())<SUB>25</SUB>>", "167": "<(MODIFIER,PUBLIC)>", "169": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}