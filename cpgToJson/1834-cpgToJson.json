{"edges": [["19", "21"], ["19", "121"], ["19", "122"], ["19", "123"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "65"], ["21", "68"], ["21", "69"], ["21", "72"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "79"], ["72", "82"], ["72", "84"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "96"], ["84", "98"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "109"], ["105", "114"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["65", "69"], ["69", "76"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "60"], ["54", "65"], ["57", "54"], ["59", "57"], ["74", "79"], ["79", "86"], ["79", "106"], ["82", "79"], ["106", "112"], ["106", "118"], ["109", "123"], ["28", "26"], ["60", "63"], ["63", "59"], ["76", "74"], ["96", "101"], ["98", "82"], ["110", "109"], ["115", "123"], ["86", "93"], ["86", "96"], ["100", "98"], ["112", "110"], ["116", "119"], ["119", "115"], ["90", "95"], ["95", "123"], ["101", "100"], ["118", "116"], ["91", "90"], ["93", "91"], ["19", "24"], ["95", "123"], ["20", "123"], ["22", "123"], ["25", "123"], ["25", "123"], ["30", "123"], ["35", "123"], ["42", "123"], ["40", "123"], ["40", "123"], ["45", "123"], ["45", "123"], ["51", "123"], ["54", "123"], ["65", "123"], ["65", "123"], ["69", "123"], ["76", "123"], ["74", "123"], ["74", "123"], ["79", "123"], ["79", "123"], ["86", "123"], ["86", "123"], ["86", "123"], ["96", "123"], ["100", "123"], ["98", "123"], ["98", "123"], ["82", "123"], ["90", "123"], ["90", "123"], ["90", "123"], ["59", "123"], ["63", "123"], ["59", "123"], ["59", "123"], ["57", "123"], ["65", "123"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["19", "69"], ["22", "25"], ["19", "25"], ["19", "51"], ["63", "59"], ["19", "65"], ["45", "65"], ["59", "65"], ["76", "74"], ["76", "74"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["74", "79"], ["82", "79"], ["19", "79"], ["79", "82"], ["19", "82"], ["100", "98"], ["100", "98"], ["40", "106"], ["98", "106"], ["19", "106"], ["35", "106"], ["86", "106"], ["69", "109"], ["96", "109"], ["19", "109"], ["42", "63"], ["19", "63"], ["54", "76"], ["19", "76"], ["69", "96"], ["19", "96"], ["86", "98"], ["19", "98"], ["119", "115"], ["40", "86"], ["98", "86"], ["19", "86"], ["35", "86"], ["19", "95"], ["65", "100"], ["59", "100"], ["19", "100"], ["19", "119"], ["69", "90"], ["96", "90"], ["19", "90"], ["54", "60"], ["54", "57"], ["54", "59"], ["54", "54"], ["54", "63"], ["79", "106"], ["79", "86"], ["106", "115"], ["106", "116"], ["106", "119"], ["106", "112"], ["106", "118"], ["106", "110"], ["106", "109"], ["86", "96"], ["86", "98"], ["86", "95"], ["86", "91"], ["86", "82"], ["86", "93"], ["86", "101"], ["86", "90"], ["86", "79"], ["86", "100"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int k: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,k,int k = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] A = new int[n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,A[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,A,A[i] = nextInt())<SUB>8</SUB>>", "63": "<(nextInt,nextInt())<SUB>8</SUB>>", "65": "<(sort,sort(A))<SUB>9</SUB>>", "67": "<(IDENTIFIER,A,sort(A))<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,int cnt = 0)<SUB>10</SUB>>", "71": "<(LITERAL,0,int cnt = 0)<SUB>10</SUB>>", "73": "<(LOCAL,int i: int)<SUB>11</SUB>>", "75": "<(IDENTIFIER,i,int i = n - 1)<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,n - 1)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>11</SUB>>", "81": "<(LITERAL,0,i &gt;= 0)<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,i--)<SUB>11</SUB>>", "85": "<(CONTROL_STRUCTURE,if (k &gt;= m),if (k &gt;= m))<SUB>12</SUB>>", "87": "<(IDENTIFIER,k,k &gt;= m)<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "95": "<(RETURN,return;,return;)<SUB>14</SUB>>", "97": "<(IDENTIFIER,cnt,cnt++)<SUB>16</SUB>>", "99": "<(IDENTIFIER,k,k += A[i] - 1)<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>17</SUB>>", "103": "<(IDENTIFIER,i,A[i] - 1)<SUB>17</SUB>>", "105": "<(CONTROL_STRUCTURE,if (k &gt;= m),if (k &gt;= m))<SUB>19</SUB>>", "107": "<(IDENTIFIER,k,k &gt;= m)<SUB>19</SUB>>", "109": "<(println,System.out.println(cnt))<SUB>20</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(cnt))<SUB>20</SUB>>", "113": "<(IDENTIFIER,cnt,System.out.println(cnt))<SUB>20</SUB>>", "115": "<(println,System.out.println(-1))<SUB>22</SUB>>", "117": "<(IDENTIFIER,System,System.out.println(-1))<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}