{"edges": [["17", "18"], ["17", "19"], ["17", "214"], ["17", "215"], ["17", "216"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "57"], ["19", "61"], ["19", "62"], ["19", "63"], ["19", "64"], ["19", "67"], ["19", "70"], ["19", "74"], ["19", "75"], ["19", "80"], ["19", "81"], ["19", "82"], ["19", "85"], ["19", "88"], ["19", "209"], ["19", "212"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "56"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["46", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["57", "58"], ["57", "59"], ["59", "60"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "123"], ["99", "100"], ["99", "105"], ["99", "115"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "114"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "129"], ["123", "143"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "134"], ["129", "136"], ["130", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["144", "145"], ["144", "149"], ["144", "193"], ["145", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "153"], ["149", "155"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["155", "180"], ["156", "157"], ["156", "162"], ["156", "172"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["172", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "186"], ["180", "191"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["187", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["193", "201"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["201", "202"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "208"], ["205", "206"], ["205", "207"], ["209", "210"], ["209", "211"], ["212", "213"], ["20", "28"], ["23", "37"], ["35", "43"], ["38", "59"], ["57", "64"], ["64", "67"], ["67", "72"], ["70", "78"], ["75", "82"], ["82", "85"], ["85", "90"], ["209", "212"], ["212", "216"], ["22", "20"], ["37", "35"], ["59", "57"], ["72", "70"], ["77", "75"], ["90", "93"], ["93", "102"], ["93", "209"], ["96", "93"], ["26", "33"], ["29", "23"], ["41", "49"], ["44", "38"], ["78", "77"], ["28", "26"], ["31", "29"], ["43", "41"], ["100", "111"], ["100", "119"], ["124", "131"], ["124", "146"], ["33", "31"], ["47", "54"], ["50", "44"], ["102", "100"], ["106", "125"], ["116", "125"], ["125", "124"], ["130", "134"], ["134", "139"], ["136", "96"], ["49", "47"], ["52", "50"], ["108", "106"], ["118", "116"], ["131", "130"], ["138", "136"], ["145", "150"], ["54", "52"], ["109", "108"], ["119", "118"], ["139", "138"], ["146", "145"], ["150", "153"], ["153", "159"], ["153", "196"], ["194", "205"], ["194", "96"], ["111", "109"], ["195", "194"], ["202", "96"], ["157", "168"], ["157", "176"], ["181", "188"], ["196", "195"], ["204", "202"], ["159", "157"], ["163", "182"], ["173", "182"], ["182", "181"], ["187", "153"], ["205", "204"], ["165", "163"], ["175", "173"], ["188", "187"], ["166", "165"], ["176", "175"], ["168", "166"], ["17", "22"], ["18", "216"], ["20", "216"], ["23", "216"], ["29", "216"], ["29", "216"], ["29", "216"], ["23", "216"], ["35", "216"], ["44", "216"], ["47", "216"], ["50", "216"], ["50", "216"], ["50", "216"], ["44", "216"], ["38", "216"], ["57", "216"], ["57", "216"], ["64", "216"], ["67", "216"], ["67", "216"], ["70", "216"], ["70", "216"], ["70", "216"], ["75", "216"], ["78", "216"], ["77", "216"], ["75", "216"], ["75", "216"], ["82", "216"], ["82", "216"], ["85", "216"], ["85", "216"], ["90", "216"], ["93", "216"], ["93", "216"], ["93", "216"], ["209", "216"], ["209", "216"], ["212", "216"], ["212", "216"], ["100", "216"], ["100", "216"], ["116", "216"], ["118", "216"], ["116", "216"], ["116", "216"], ["106", "216"], ["109", "216"], ["108", "216"], ["106", "216"], ["106", "216"], ["124", "216"], ["145", "216"], ["145", "216"], ["150", "216"], ["153", "216"], ["196", "216"], ["195", "216"], ["194", "216"], ["194", "216"], ["205", "216"], ["204", "216"], ["202", "216"], ["202", "216"], ["157", "216"], ["157", "216"], ["173", "216"], ["175", "216"], ["173", "216"], ["173", "216"], ["163", "216"], ["166", "216"], ["165", "216"], ["163", "216"], ["163", "216"], ["181", "216"], ["187", "216"], ["187", "216"], ["130", "216"], ["130", "216"], ["134", "216"], ["134", "216"], ["139", "216"], ["138", "216"], ["136", "216"], ["136", "216"], ["96", "216"], ["17", "18"], ["17", "20"], ["17", "35"], ["59", "57"], ["57", "64"], ["17", "64"], ["17", "67"], ["72", "70"], ["77", "75"], ["17", "82"], ["17", "85"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["47", "38"], ["44", "38"], ["17", "90"], ["38", "209"], ["17", "209"], ["64", "209"], ["194", "209"], ["202", "209"], ["136", "209"], ["209", "212"], ["17", "212"], ["17", "26"], ["17", "34"], ["17", "41"], ["17", "56"], ["17", "59"], ["17", "72"], ["78", "77"], ["90", "93"], ["96", "93"], ["17", "93"], ["57", "93"], ["196", "96"], ["205", "96"], ["139", "96"], ["17", "96"], ["26", "29"], ["17", "29"], ["41", "44"], ["17", "44"], ["47", "44"], ["50", "44"], ["59", "78"], ["17", "78"], ["17", "47"], ["17", "55"], ["157", "100"], ["17", "100"], ["75", "100"], ["118", "100"], ["108", "106"], ["108", "106"], ["118", "116"], ["118", "116"], ["70", "124"], ["145", "124"], ["130", "124"], ["17", "124"], ["139", "136"], ["139", "136"], ["17", "136"], ["47", "50"], ["17", "50"], ["70", "130"], ["124", "130"], ["85", "134"], ["17", "134"], ["17", "108"], ["75", "108"], ["100", "108"], ["75", "118"], ["100", "118"], ["17", "118"], ["139", "138"], ["139", "138"], ["17", "138"], ["70", "145"], ["124", "145"], ["17", "109"], ["75", "109"], ["100", "109"], ["93", "139"], ["17", "139"], ["82", "139"], ["196", "139"], ["205", "139"], ["82", "150"], ["196", "150"], ["205", "150"], ["139", "150"], ["17", "150"], ["93", "150"], ["150", "153"], ["17", "153"], ["196", "194"], ["196", "194"], ["17", "194"], ["64", "194"], ["202", "194"], ["136", "194"], ["205", "202"], ["205", "202"], ["17", "202"], ["196", "195"], ["196", "195"], ["17", "195"], ["100", "157"], ["17", "157"], ["75", "157"], ["175", "157"], ["165", "163"], ["165", "163"], ["175", "173"], ["175", "173"], ["70", "181"], ["187", "181"], ["17", "181"], ["150", "196"], ["17", "196"], ["153", "196"], ["205", "204"], ["205", "204"], ["17", "204"], ["70", "187"], ["181", "187"], ["196", "205"], ["17", "205"], ["196", "205"], ["17", "165"], ["75", "165"], ["157", "165"], ["75", "175"], ["157", "175"], ["17", "175"], ["17", "166"], ["75", "166"], ["157", "166"], ["93", "96"], ["93", "102"], ["93", "93"], ["93", "100"], ["93", "124"], ["93", "125"], ["100", "119"], ["100", "118"], ["100", "108"], ["100", "111"], ["100", "116"], ["100", "106"], ["100", "109"], ["124", "136"], ["124", "145"], ["124", "146"], ["124", "131"], ["124", "196"], ["124", "150"], ["124", "153"], ["124", "134"], ["124", "138"], ["124", "195"], ["124", "130"], ["124", "194"], ["124", "139"], ["153", "188"], ["153", "153"], ["153", "181"], ["153", "187"], ["153", "182"], ["153", "157"], ["153", "159"], ["194", "204"], ["194", "202"], ["194", "205"], ["157", "163"], ["157", "168"], ["157", "173"], ["157", "166"], ["157", "176"], ["157", "165"], ["157", "175"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "39": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "53": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "55": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "57": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>4</SUB>>", "59": "<(nextInt,nextInt())<SUB>4</SUB>>", "61": "<(LOCAL,int ans: int)<SUB>5</SUB>>", "63": "<(LOCAL,int cur: int)<SUB>5</SUB>>", "65": "<(IDENTIFIER,ans,int ans = n)<SUB>5</SUB>>", "67": "<(&lt;operator&gt;.assignment,int cur = 0)<SUB>5</SUB>>", "69": "<(LITERAL,0,int cur = 0)<SUB>5</SUB>>", "71": "<(IDENTIFIER,a,a = new int[52])<SUB>6</SUB>>", "73": "<(LITERAL,52,new int[52])<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.assignment,char[] c = toCharArray())<SUB>7</SUB>>", "77": "<(toCharArray,toCharArray())<SUB>7</SUB>>", "79": "<(IDENTIFIER,this,next())<SUB>7</SUB>>", "81": "<(LOCAL,int len: int)<SUB>8</SUB>>", "83": "<(IDENTIFIER,l,int l = 0)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.assignment,int len = 0)<SUB>8</SUB>>", "87": "<(LITERAL,0,int len = 0)<SUB>8</SUB>>", "89": "<(LOCAL,int i: int)<SUB>9</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>9</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>9</SUB>>", "97": "<(IDENTIFIER,i,++i)<SUB>9</SUB>>", "99": "<(CONTROL_STRUCTURE,if (Character.isUpperCase(c[i])),if (Character.isUpperCase(c[i])))<SUB>10</SUB>>", "101": "<(IDENTIFIER,Character,Character.isUpperCase(c[i]))<SUB>10</SUB>>", "103": "<(IDENTIFIER,c,Character.isUpperCase(c[i]))<SUB>10</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "107": "<(IDENTIFIER,cur,cur = 26 + c[i] - 'A')<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.addition,26 + c[i])<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>11</SUB>>", "113": "<(IDENTIFIER,i,26 + c[i])<SUB>11</SUB>>", "115": "<(CONTROL_STRUCTURE,else,else)<SUB>13</SUB>>", "117": "<(IDENTIFIER,cur,cur = c[i] - 'a')<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,c[i])<SUB>13</SUB>>", "121": "<(IDENTIFIER,i,c[i] - 'a')<SUB>13</SUB>>", "123": "<(CONTROL_STRUCTURE,if (a[cur] == 0),if (a[cur] == 0))<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,a[cur])<SUB>14</SUB>>", "127": "<(IDENTIFIER,cur,a[cur] == 0)<SUB>14</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,a[cur])<SUB>15</SUB>>", "133": "<(IDENTIFIER,cur,a[cur]++)<SUB>15</SUB>>", "135": "<(IDENTIFIER,len,len++)<SUB>16</SUB>>", "137": "<(IDENTIFIER,ans,ans = i - l + 1)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.subtraction,i - l)<SUB>17</SUB>>", "141": "<(IDENTIFIER,l,i - l)<SUB>17</SUB>>", "143": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,a[cur]++)<SUB>19</SUB>>", "147": "<(IDENTIFIER,a,a[cur]++)<SUB>19</SUB>>", "149": "<(CONTROL_STRUCTURE,for (; Some(l &lt; i); ++l),for (; Some(l &lt; i); ++l))<SUB>20</SUB>>", "151": "<(IDENTIFIER,l,l &lt; i)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.preIncrement,++l)<SUB>20</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "157": "<(isUpperCase,Character.isUpperCase(c[l]))<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,c[l])<SUB>21</SUB>>", "161": "<(IDENTIFIER,l,Character.isUpperCase(c[l]))<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.assignment,cc = 26 + c[l] - 'A')<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.subtraction,26 + c[l] - 'A')<SUB>22</SUB>>", "167": "<(LITERAL,26,26 + c[l])<SUB>22</SUB>>", "169": "<(IDENTIFIER,c,26 + c[l])<SUB>22</SUB>>", "171": "<(LITERAL,'A',26 + c[l] - 'A')<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.assignment,cc = c[l] - 'a')<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.subtraction,c[l] - 'a')<SUB>24</SUB>>", "177": "<(IDENTIFIER,c,c[l] - 'a')<SUB>24</SUB>>", "179": "<(LITERAL,'a',c[l] - 'a')<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.greaterThan,a[cc] &gt; 1)<SUB>26</SUB>>", "183": "<(IDENTIFIER,a,a[cc] &gt; 1)<SUB>26</SUB>>", "185": "<(LITERAL,1,a[cc] &gt; 1)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.preDecrement,--a[cc])<SUB>27</SUB>>", "189": "<(IDENTIFIER,a,--a[cc])<SUB>27</SUB>>", "191": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "193": "<(CONTROL_STRUCTURE,if (i - l + 1 &lt; ans),if (i - l + 1 &lt; ans))<SUB>30</SUB>>", "195": "<(&lt;operator&gt;.addition,i - l + 1)<SUB>30</SUB>>", "197": "<(IDENTIFIER,i,i - l)<SUB>30</SUB>>", "199": "<(LITERAL,1,i - l + 1)<SUB>30</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "203": "<(IDENTIFIER,ans,ans = i - l + 1)<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.subtraction,i - l)<SUB>31</SUB>>", "207": "<(IDENTIFIER,l,i - l)<SUB>31</SUB>>", "209": "<(print,print(ans))<SUB>61</SUB>>", "211": "<(IDENTIFIER,ans,print(ans))<SUB>61</SUB>>", "213": "<(IDENTIFIER,pw,close())<SUB>62</SUB>>", "215": "<(MODIFIER,STATIC)>"}}