{"edges": [["21", "23"], ["21", "205"], ["21", "206"], ["21", "207"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "38"], ["23", "42"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "56"], ["23", "57"], ["23", "60"], ["23", "65"], ["23", "66"], ["23", "70"], ["23", "198"], ["23", "201"], ["23", "203"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "85"], ["74", "86"], ["74", "89"], ["74", "134"], ["74", "179"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "107"], ["99", "108"], ["99", "109"], ["99", "119"], ["99", "129"], ["100", "101"], ["100", "106"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["111", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["121", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "152"], ["144", "153"], ["144", "154"], ["144", "164"], ["144", "174"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["156", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["166", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "183"], ["179", "192"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["192", "193"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["201", "202"], ["203", "204"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "40"], ["38", "44"], ["42", "48"], ["46", "53"], ["51", "57"], ["57", "63"], ["60", "68"], ["66", "71"], ["198", "201"], ["201", "203"], ["203", "207"], ["26", "24"], ["30", "28"], ["32", "31"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "51"], ["62", "60"], ["68", "66"], ["71", "81"], ["71", "198"], ["34", "32"], ["63", "62"], ["76", "86"], ["86", "91"], ["78", "76"], ["91", "94"], ["94", "102"], ["94", "136"], ["97", "94"], ["136", "139"], ["139", "147"], ["139", "180"], ["142", "139"], ["180", "184"], ["180", "195"], ["80", "78"], ["109", "123"], ["119", "131"], ["129", "97"], ["154", "168"], ["164", "176"], ["174", "142"], ["184", "189"], ["187", "71"], ["193", "71"], ["81", "80"], ["101", "136"], ["101", "115"], ["111", "109"], ["121", "119"], ["131", "129"], ["146", "180"], ["146", "160"], ["156", "154"], ["166", "164"], ["176", "174"], ["189", "187"], ["195", "193"], ["102", "101"], ["114", "111"], ["123", "126"], ["126", "121"], ["147", "146"], ["159", "156"], ["168", "171"], ["171", "166"], ["115", "114"], ["160", "159"], ["21", "26"], ["22", "207"], ["24", "207"], ["27", "207"], ["28", "207"], ["31", "207"], ["31", "207"], ["38", "207"], ["38", "207"], ["42", "207"], ["42", "207"], ["46", "207"], ["46", "207"], ["46", "207"], ["51", "207"], ["53", "207"], ["51", "207"], ["51", "207"], ["57", "207"], ["60", "207"], ["60", "207"], ["66", "207"], ["66", "207"], ["71", "207"], ["71", "207"], ["71", "207"], ["198", "207"], ["198", "207"], ["201", "207"], ["203", "207"], ["203", "207"], ["80", "207"], ["78", "207"], ["76", "207"], ["76", "207"], ["86", "207"], ["91", "207"], ["102", "207"], ["101", "207"], ["101", "207"], ["101", "207"], ["114", "207"], ["111", "207"], ["109", "207"], ["109", "207"], ["121", "207"], ["123", "207"], ["123", "207"], ["121", "207"], ["121", "207"], ["119", "207"], ["119", "207"], ["131", "207"], ["131", "207"], ["129", "207"], ["129", "207"], ["97", "207"], ["136", "207"], ["139", "207"], ["139", "207"], ["147", "207"], ["147", "207"], ["146", "207"], ["146", "207"], ["159", "207"], ["156", "207"], ["154", "207"], ["154", "207"], ["166", "207"], ["168", "207"], ["168", "207"], ["166", "207"], ["166", "207"], ["164", "207"], ["164", "207"], ["176", "207"], ["176", "207"], ["174", "207"], ["174", "207"], ["142", "207"], ["180", "207"], ["180", "207"], ["180", "207"], ["195", "207"], ["193", "207"], ["193", "207"], ["184", "207"], ["189", "207"], ["187", "207"], ["187", "207"], ["21", "22"], ["21", "24"], ["21", "28"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "51"], ["21", "57"], ["21", "60"], ["68", "66"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["31", "198"], ["21", "198"], ["66", "198"], ["184", "198"], ["198", "201"], ["21", "201"], ["201", "203"], ["21", "203"], ["27", "40"], ["21", "40"], ["40", "44"], ["21", "44"], ["44", "48"], ["21", "48"], ["48", "53"], ["21", "53"], ["21", "62"], ["21", "68"], ["57", "71"], ["193", "71"], ["21", "71"], ["81", "71"], ["60", "71"], ["81", "71"], ["187", "71"], ["81", "76"], ["21", "76"], ["80", "76"], ["80", "76"], ["21", "86"], ["21", "91"], ["21", "136"], ["81", "78"], ["21", "78"], ["80", "78"], ["80", "78"], ["91", "94"], ["97", "94"], ["21", "94"], ["76", "94"], ["126", "94"], ["126", "97"], ["21", "97"], ["111", "109"], ["111", "109"], ["111", "109"], ["121", "119"], ["121", "119"], ["121", "119"], ["109", "129"], ["21", "129"], ["119", "129"], ["136", "139"], ["142", "139"], ["21", "139"], ["94", "139"], ["171", "139"], ["171", "142"], ["21", "142"], ["156", "154"], ["156", "154"], ["156", "154"], ["166", "164"], ["166", "164"], ["166", "164"], ["154", "174"], ["21", "174"], ["164", "174"], ["86", "180"], ["129", "180"], ["174", "180"], ["21", "180"], ["51", "180"], ["139", "184"], ["21", "184"], ["189", "187"], ["189", "187"], ["139", "193"], ["21", "193"], ["81", "80"], ["81", "80"], ["21", "80"], ["86", "129"], ["86", "174"], ["129", "174"], ["71", "81"], ["21", "81"], ["71", "81"], ["46", "101"], ["147", "101"], ["21", "101"], ["94", "101"], ["38", "101"], ["123", "101"], ["168", "101"], ["121", "111"], ["166", "111"], ["21", "111"], ["42", "111"], ["123", "111"], ["168", "111"], ["114", "111"], ["114", "111"], ["111", "121"], ["21", "121"], ["123", "121"], ["123", "121"], ["126", "121"], ["126", "121"], ["109", "131"], ["21", "131"], ["119", "131"], ["147", "146"], ["147", "146"], ["21", "146"], ["121", "156"], ["166", "156"], ["21", "156"], ["42", "156"], ["123", "156"], ["168", "156"], ["159", "156"], ["159", "156"], ["156", "166"], ["21", "166"], ["168", "166"], ["168", "166"], ["171", "166"], ["171", "166"], ["154", "176"], ["21", "176"], ["164", "176"], ["21", "189"], ["139", "189"], ["139", "195"], ["21", "195"], ["46", "102"], ["147", "102"], ["21", "102"], ["94", "102"], ["21", "114"], ["94", "114"], ["94", "114"], ["101", "123"], ["21", "123"], ["111", "123"], ["21", "126"], ["94", "126"], ["114", "126"], ["46", "147"], ["21", "147"], ["139", "147"], ["21", "159"], ["139", "159"], ["147", "159"], ["38", "168"], ["101", "168"], ["123", "168"], ["21", "168"], ["156", "168"], ["21", "171"], ["139", "171"], ["159", "171"], ["21", "115"], ["94", "115"], ["21", "160"], ["139", "160"], ["71", "94"], ["71", "136"], ["71", "81"], ["71", "76"], ["71", "91"], ["71", "80"], ["71", "139"], ["71", "180"], ["71", "86"], ["71", "71"], ["71", "78"], ["94", "102"], ["94", "101"], ["139", "146"], ["139", "147"], ["180", "189"], ["180", "195"], ["180", "187"], ["180", "184"], ["180", "193"], ["101", "94"], ["101", "115"], ["101", "114"], ["101", "131"], ["101", "119"], ["101", "121"], ["101", "97"], ["101", "129"], ["101", "111"], ["101", "123"], ["101", "126"], ["101", "109"], ["146", "154"], ["146", "168"], ["146", "174"], ["146", "164"], ["146", "139"], ["146", "171"], ["146", "160"], ["146", "166"], ["146", "142"], ["146", "159"], ["146", "176"], ["146", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int N: int)<SUB>4</SUB>>", "37": "<(LOCAL,int y: int)<SUB>4</SUB>>", "39": "<(IDENTIFIER,N,int N = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,x,int x = nextInt())<SUB>4</SUB>>", "45": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,y,int y = nextInt())<SUB>4</SUB>>", "49": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,long C = nextLong())<SUB>5</SUB>>", "53": "<(nextLong,nextLong())<SUB>5</SUB>>", "55": "<(LOCAL,int lo: int)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int lo = 0)<SUB>7</SUB>>", "59": "<(LITERAL,0,int lo = 0)<SUB>7</SUB>>", "61": "<(IDENTIFIER,hi,int hi = (int) (1e6))<SUB>7</SUB>>", "63": "<(TYPE_REF,int,int)<SUB>7</SUB>>", "65": "<(LOCAL,int answer: int)<SUB>8</SUB>>", "67": "<(IDENTIFIER,answer,int answer = -1)<SUB>8</SUB>>", "69": "<(LITERAL,1,-1)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.lessEqualsThan,lo &lt;= hi)<SUB>9</SUB>>", "73": "<(IDENTIFIER,hi,lo &lt;= hi)<SUB>9</SUB>>", "75": "<(LOCAL,int L: int)<SUB>10</SUB>>", "77": "<(IDENTIFIER,L,int L = lo + (hi - lo) / 2)<SUB>10</SUB>>", "79": "<(IDENTIFIER,lo,lo + (hi - lo) / 2)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.subtraction,hi - lo)<SUB>10</SUB>>", "83": "<(IDENTIFIER,lo,hi - lo)<SUB>10</SUB>>", "85": "<(LOCAL,long area: long)<SUB>11</SUB>>", "87": "<(IDENTIFIER,area,long area = 0)<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int steps = 0; Some(steps &lt;= L); ++steps),for (int steps = 0; Some(steps &lt;= L); ++steps))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.assignment,int steps = 0)<SUB>12</SUB>>", "93": "<(LITERAL,0,int steps = 0)<SUB>12</SUB>>", "95": "<(IDENTIFIER,steps,steps &lt;= L)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.preIncrement,++steps)<SUB>12</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.greaterThan,y + steps &gt; N)<SUB>13</SUB>>", "103": "<(IDENTIFIER,y,y + steps)<SUB>13</SUB>>", "105": "<(IDENTIFIER,N,y + steps &gt; N)<SUB>13</SUB>>", "107": "<(LOCAL,long up: long)<SUB>15</SUB>>", "109": "<(&lt;operator&gt;.assignment,long up = Math.min(x, 1 + L - steps))<SUB>15</SUB>>", "111": "<(min,Math.min(x, 1 + L - steps))<SUB>15</SUB>>", "113": "<(IDENTIFIER,x,Math.min(x, 1 + L - steps))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.addition,1 + L)<SUB>15</SUB>>", "117": "<(IDENTIFIER,L,1 + L)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,long down = Math.min(N - x, L - steps))<SUB>15</SUB>>", "121": "<(min,Math.min(N - x, L - steps))<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.subtraction,N - x)<SUB>15</SUB>>", "125": "<(IDENTIFIER,x,N - x)<SUB>15</SUB>>", "127": "<(IDENTIFIER,L,L - steps)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.assignmentPlus,area += up + down)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.addition,up + down)<SUB>16</SUB>>", "133": "<(IDENTIFIER,down,up + down)<SUB>16</SUB>>", "135": "<(LOCAL,int steps: int)<SUB>19</SUB>>", "137": "<(IDENTIFIER,steps,int steps = 1)<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.lessEqualsThan,steps &lt;= L)<SUB>19</SUB>>", "141": "<(IDENTIFIER,L,steps &lt;= L)<SUB>19</SUB>>", "143": "<(IDENTIFIER,steps,++steps)<SUB>19</SUB>>", "145": "<(CONTROL_STRUCTURE,if (y - steps &lt; 1),if (y - steps &lt; 1))<SUB>20</SUB>>", "147": "<(&lt;operator&gt;.subtraction,y - steps)<SUB>20</SUB>>", "149": "<(IDENTIFIER,steps,y - steps)<SUB>20</SUB>>", "151": "<(CONTROL_STRUCTURE,break;,break;)<SUB>21</SUB>>", "153": "<(LOCAL,long down: long)<SUB>22</SUB>>", "155": "<(IDENTIFIER,up,long up = Math.min(x, 1 + L - steps))<SUB>22</SUB>>", "157": "<(IDENTIFIER,Math,Math.min(x, 1 + L - steps))<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.subtraction,1 + L - steps)<SUB>22</SUB>>", "161": "<(LITERAL,1,1 + L)<SUB>22</SUB>>", "163": "<(IDENTIFIER,steps,1 + L - steps)<SUB>22</SUB>>", "165": "<(IDENTIFIER,down,long down = Math.min(N - x, L - steps))<SUB>22</SUB>>", "167": "<(IDENTIFIER,Math,Math.min(N - x, L - steps))<SUB>22</SUB>>", "169": "<(IDENTIFIER,N,N - x)<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.subtraction,L - steps)<SUB>22</SUB>>", "173": "<(IDENTIFIER,steps,L - steps)<SUB>22</SUB>>", "175": "<(IDENTIFIER,area,area += up + down)<SUB>23</SUB>>", "177": "<(IDENTIFIER,up,up + down)<SUB>23</SUB>>", "179": "<(CONTROL_STRUCTURE,if (area &gt;= C),if (area &gt;= C))<SUB>25</SUB>>", "181": "<(IDENTIFIER,area,area &gt;= C)<SUB>25</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "185": "<(IDENTIFIER,answer,answer = L)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.assignment,hi = L - 1)<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.subtraction,L - 1)<SUB>27</SUB>>", "191": "<(LITERAL,1,L - 1)<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.assignment,lo = L + 1)<SUB>29</SUB>>", "195": "<(&lt;operator&gt;.addition,L + 1)<SUB>29</SUB>>", "197": "<(LITERAL,1,L + 1)<SUB>29</SUB>>", "199": "<(IDENTIFIER,out,println(answer))<SUB>31</SUB>>", "201": "<(flush,flush())<SUB>33</SUB>>", "203": "<(close,close())<SUB>34</SUB>>", "205": "<(MODIFIER,PUBLIC)>", "207": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}