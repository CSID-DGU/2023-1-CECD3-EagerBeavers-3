{"edges": [["19", "20"], ["19", "21"], ["19", "302"], ["19", "303"], ["19", "304"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "52"], ["21", "91"], ["21", "92"], ["21", "99"], ["21", "159"], ["21", "272"], ["21", "273"], ["21", "276"], ["21", "295"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "65"], ["62", "71"], ["62", "77"], ["62", "84"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "70"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "76"], ["74", "75"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "116"], ["109", "117"], ["109", "126"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "141"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "149"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["149", "150"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "157"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "161"], ["159", "168"], ["159", "171"], ["159", "173"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["173", "175"], ["173", "181"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["179", "180"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "189"], ["181", "191"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["191", "215"], ["192", "193"], ["192", "214"], ["193", "194"], ["193", "207"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["215", "216"], ["215", "217"], ["215", "220"], ["215", "223"], ["215", "225"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["225", "226"], ["226", "227"], ["226", "256"], ["227", "228"], ["227", "243"], ["228", "229"], ["228", "234"], ["229", "230"], ["229", "233"], ["230", "231"], ["230", "232"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["256", "257"], ["257", "258"], ["257", "263"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "271"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["276", "281"], ["276", "284"], ["276", "286"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["284", "285"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "294"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["295", "296"], ["295", "299"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "48"], ["45", "54"], ["92", "101"], ["273", "278"], ["295", "304"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["54", "57"], ["57", "68"], ["57", "95"], ["60", "57"], ["94", "92"], ["101", "104"], ["104", "113"], ["104", "164"], ["107", "104"], ["161", "168"], ["168", "179"], ["168", "273"], ["171", "168"], ["278", "281"], ["281", "291"], ["281", "298"], ["284", "281"], ["286", "284"], ["296", "299"], ["299", "295"], ["28", "26"], ["48", "47"], ["65", "74"], ["71", "78"], ["77", "85"], ["84", "60"], ["95", "94"], ["111", "122"], ["117", "128"], ["163", "161"], ["175", "183"], ["288", "286"], ["298", "296"], ["67", "65"], ["73", "71"], ["78", "81"], ["81", "77"], ["85", "88"], ["88", "84"], ["113", "111"], ["119", "117"], ["128", "131"], ["131", "145"], ["131", "107"], ["134", "131"], ["164", "163"], ["177", "175"], ["183", "186"], ["186", "196"], ["186", "171"], ["189", "186"], ["289", "288"], ["68", "67"], ["74", "73"], ["120", "119"], ["136", "134"], ["142", "154"], ["142", "137"], ["179", "177"], ["291", "289"], ["122", "120"], ["137", "136"], ["143", "142"], ["150", "137"], ["193", "189"], ["193", "217"], ["217", "220"], ["220", "230"], ["220", "189"], ["223", "220"], ["145", "143"], ["151", "150"], ["194", "193"], ["194", "209"], ["207", "193"], ["152", "151"], ["195", "194"], ["195", "203"], ["200", "194"], ["208", "207"], ["227", "259"], ["227", "223"], ["154", "152"], ["196", "195"], ["201", "200"], ["209", "208"], ["228", "227"], ["228", "245"], ["243", "227"], ["257", "223"], ["203", "201"], ["229", "228"], ["229", "236"], ["234", "228"], ["244", "243"], ["244", "251"], ["249", "243"], ["258", "268"], ["263", "257"], ["230", "229"], ["235", "234"], ["245", "244"], ["250", "249"], ["259", "258"], ["264", "263"], ["236", "239"], ["239", "235"], ["251", "250"], ["266", "264"], ["268", "266"], ["19", "24"], ["20", "304"], ["22", "304"], ["25", "304"], ["25", "304"], ["30", "304"], ["37", "304"], ["35", "304"], ["35", "304"], ["40", "304"], ["40", "304"], ["40", "304"], ["45", "304"], ["45", "304"], ["45", "304"], ["57", "304"], ["57", "304"], ["92", "304"], ["92", "304"], ["163", "304"], ["161", "304"], ["161", "304"], ["168", "304"], ["273", "304"], ["278", "304"], ["281", "304"], ["281", "304"], ["281", "304"], ["295", "304"], ["299", "304"], ["295", "304"], ["295", "304"], ["286", "304"], ["286", "304"], ["284", "304"], ["175", "304"], ["177", "304"], ["175", "304"], ["175", "304"], ["183", "304"], ["186", "304"], ["186", "304"], ["171", "304"], ["195", "304"], ["195", "304"], ["194", "304"], ["201", "304"], ["200", "304"], ["194", "304"], ["193", "304"], ["208", "304"], ["207", "304"], ["193", "304"], ["193", "304"], ["217", "304"], ["220", "304"], ["220", "304"], ["229", "304"], ["229", "304"], ["228", "304"], ["235", "304"], ["235", "304"], ["234", "304"], ["228", "304"], ["227", "304"], ["244", "304"], ["244", "304"], ["243", "304"], ["250", "304"], ["249", "304"], ["243", "304"], ["227", "304"], ["227", "304"], ["257", "304"], ["266", "304"], ["257", "304"], ["257", "304"], ["223", "304"], ["189", "304"], ["111", "304"], ["111", "304"], ["120", "304"], ["120", "304"], ["119", "304"], ["119", "304"], ["117", "304"], ["117", "304"], ["128", "304"], ["128", "304"], ["131", "304"], ["131", "304"], ["107", "304"], ["142", "304"], ["142", "304"], ["154", "304"], ["150", "304"], ["150", "304"], ["136", "304"], ["136", "304"], ["134", "304"], ["134", "304"], ["65", "304"], ["74", "304"], ["73", "304"], ["71", "304"], ["71", "304"], ["77", "304"], ["81", "304"], ["77", "304"], ["84", "304"], ["88", "304"], ["84", "304"], ["60", "304"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["47", "45"], ["94", "92"], ["94", "92"], ["19", "273"], ["22", "25"], ["19", "25"], ["19", "54"], ["19", "101"], ["163", "161"], ["163", "161"], ["19", "278"], ["299", "295"], ["299", "295"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["48", "47"], ["48", "47"], ["19", "47"], ["54", "57"], ["60", "57"], ["19", "57"], ["35", "57"], ["57", "60"], ["19", "60"], ["67", "65"], ["67", "65"], ["73", "71"], ["73", "71"], ["81", "77"], ["81", "77"], ["88", "84"], ["88", "84"], ["95", "94"], ["95", "94"], ["19", "94"], ["101", "104"], ["107", "104"], ["19", "104"], ["95", "104"], ["113", "107"], ["19", "107"], ["113", "111"], ["113", "111"], ["119", "117"], ["119", "117"], ["161", "168"], ["171", "168"], ["19", "168"], ["177", "171"], ["201", "171"], ["208", "171"], ["250", "171"], ["266", "171"], ["19", "171"], ["177", "175"], ["177", "175"], ["278", "281"], ["284", "281"], ["19", "281"], ["164", "281"], ["186", "281"], ["291", "284"], ["19", "284"], ["273", "286"], ["19", "286"], ["273", "299"], ["286", "299"], ["19", "299"], ["19", "48"], ["42", "48"], ["40", "77"], ["40", "84"], ["19", "95"], ["47", "95"], ["117", "128"], ["19", "128"], ["136", "134"], ["136", "134"], ["164", "163"], ["164", "163"], ["19", "163"], ["19", "183"], ["68", "67"], ["19", "67"], ["74", "73"], ["19", "73"], ["19", "81"], ["71", "81"], ["19", "88"], ["65", "88"], ["19", "113"], ["104", "113"], ["120", "119"], ["120", "119"], ["122", "119"], ["19", "119"], ["128", "131"], ["134", "131"], ["19", "131"], ["19", "164"], ["104", "164"], ["179", "177"], ["19", "177"], ["183", "186"], ["189", "186"], ["19", "186"], ["164", "186"], ["220", "186"], ["196", "189"], ["209", "189"], ["19", "189"], ["37", "68"], ["74", "68"], ["19", "68"], ["68", "74"], ["19", "74"], ["92", "120"], ["19", "120"], ["122", "120"], ["122", "120"], ["137", "136"], ["137", "136"], ["19", "136"], ["117", "136"], ["143", "142"], ["143", "142"], ["19", "142"], ["19", "150"], ["168", "179"], ["19", "179"], ["19", "217"], ["19", "291"], ["281", "291"], ["111", "122"], ["19", "122"], ["143", "137"], ["154", "137"], ["19", "137"], ["145", "143"], ["19", "143"], ["145", "143"], ["194", "193"], ["194", "193"], ["207", "193"], ["207", "193"], ["217", "220"], ["223", "220"], ["19", "220"], ["186", "220"], ["230", "223"], ["236", "223"], ["245", "223"], ["251", "223"], ["268", "223"], ["19", "223"], ["131", "145"], ["19", "145"], ["195", "194"], ["195", "194"], ["200", "194"], ["200", "194"], ["208", "207"], ["208", "207"], ["19", "207"], ["196", "195"], ["196", "195"], ["175", "195"], ["229", "195"], ["244", "195"], ["19", "195"], ["201", "200"], ["201", "200"], ["19", "200"], ["209", "208"], ["209", "208"], ["177", "208"], ["201", "208"], ["250", "208"], ["266", "208"], ["19", "208"], ["228", "227"], ["228", "227"], ["243", "227"], ["243", "227"], ["143", "154"], ["19", "154"], ["119", "154"], ["19", "196"], ["186", "196"], ["203", "201"], ["19", "201"], ["203", "201"], ["19", "209"], ["196", "209"], ["229", "228"], ["229", "228"], ["234", "228"], ["234", "228"], ["244", "243"], ["244", "243"], ["249", "243"], ["249", "243"], ["177", "203"], ["201", "203"], ["208", "203"], ["250", "203"], ["266", "203"], ["19", "203"], ["230", "229"], ["230", "229"], ["195", "229"], ["244", "229"], ["19", "229"], ["235", "234"], ["235", "234"], ["19", "234"], ["245", "244"], ["245", "244"], ["229", "244"], ["19", "244"], ["250", "249"], ["250", "249"], ["19", "249"], ["19", "230"], ["220", "230"], ["236", "235"], ["236", "235"], ["40", "235"], ["19", "245"], ["230", "245"], ["236", "245"], ["251", "250"], ["251", "250"], ["177", "250"], ["201", "250"], ["208", "250"], ["266", "250"], ["19", "250"], ["19", "236"], ["230", "236"], ["19", "251"], ["245", "251"], ["177", "266"], ["201", "266"], ["208", "266"], ["250", "266"], ["19", "266"], ["268", "266"], ["268", "266"], ["19", "268"], ["230", "268"], ["236", "268"], ["245", "268"], ["251", "268"], ["57", "68"], ["57", "60"], ["57", "73"], ["57", "77"], ["57", "57"], ["57", "81"], ["57", "84"], ["57", "85"], ["57", "67"], ["57", "74"], ["57", "88"], ["57", "65"], ["57", "71"], ["57", "78"], ["104", "107"], ["104", "120"], ["104", "113"], ["104", "128"], ["104", "131"], ["104", "104"], ["104", "119"], ["104", "111"], ["104", "122"], ["104", "117"], ["168", "179"], ["168", "168"], ["168", "186"], ["168", "171"], ["168", "183"], ["168", "177"], ["168", "175"], ["281", "291"], ["281", "284"], ["281", "281"], ["281", "289"], ["281", "288"], ["281", "286"], ["131", "136"], ["131", "145"], ["131", "131"], ["131", "134"], ["131", "137"], ["131", "142"], ["131", "143"], ["186", "196"], ["186", "189"], ["186", "195"], ["186", "194"], ["186", "186"], ["186", "193"], ["142", "154"], ["142", "150"], ["142", "151"], ["142", "152"], ["193", "217"], ["193", "220"], ["220", "230"], ["220", "228"], ["220", "223"], ["220", "220"], ["220", "229"], ["220", "227"], ["194", "209"], ["194", "208"], ["194", "207"], ["195", "201"], ["195", "200"], ["195", "203"], ["227", "257"], ["227", "264"], ["227", "259"], ["227", "258"], ["227", "268"], ["227", "263"], ["227", "266"], ["228", "244"], ["228", "243"], ["228", "245"], ["229", "239"], ["229", "235"], ["229", "236"], ["229", "234"], ["244", "249"], ["244", "251"], ["244", "250"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] g: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,g,int[] g = new int[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,long[][] dp = new long[1 &lt;&lt; n][n])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; n][n])>", "49": "<(LITERAL,1,1 &lt;&lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,new long[1 &lt;&lt; n][n])<SUB>6</SUB>>", "53": "<(LOCAL,int i: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>7</SUB>>", "59": "<(IDENTIFIER,m,i &lt; m)<SUB>7</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "63": "<(LOCAL,int a: int)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,int a = in.nextInt() - 1)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>8</SUB>>", "69": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int b = in.nextInt() - 1)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,in,nextInt())<SUB>8</SUB>>", "77": "<(&lt;operators&gt;.assignmentOr,g[a] |= 1 &lt;&lt; b)<SUB>9</SUB>>", "79": "<(IDENTIFIER,g,g[a] |= 1 &lt;&lt; b)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>9</SUB>>", "83": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,g[b])<SUB>10</SUB>>", "87": "<(IDENTIFIER,b,g[b] |= 1 &lt;&lt; a)<SUB>10</SUB>>", "89": "<(LITERAL,1,1 &lt;&lt; a)<SUB>10</SUB>>", "91": "<(LOCAL,int all: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,all,int all = (1 &lt;&lt; n) - 1)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "103": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,int l = 1 &lt;&lt; i)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>14</SUB>>", "115": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.assignment,int left = all ^ (l - 1) ^ l)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.xor,all ^ (l - 1) ^ l)<SUB>15</SUB>>", "121": "<(IDENTIFIER,all,all ^ (l - 1))<SUB>15</SUB>>", "123": "<(IDENTIFIER,l,l - 1)<SUB>15</SUB>>", "125": "<(IDENTIFIER,l,all ^ (l - 1) ^ l)<SUB>15</SUB>>", "127": "<(LOCAL,int j: int)<SUB>16</SUB>>", "129": "<(IDENTIFIER,j,int j = left)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>16</SUB>>", "133": "<(LITERAL,0,j &gt; 0)<SUB>16</SUB>>", "135": "<(IDENTIFIER,j,j = (j - 1) &amp; left)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>16</SUB>>", "139": "<(LITERAL,1,j - 1)<SUB>16</SUB>>", "141": "<(CONTROL_STRUCTURE,if ((j &amp; (j - 1)) != 0),if ((j &amp; (j - 1)) != 0))<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.and,j &amp; (j - 1))<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>17</SUB>>", "147": "<(LITERAL,1,j - 1)<SUB>17</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,dp[j | l][i])<SUB>18</SUB>>", "153": "<(IDENTIFIER,dp,dp[j | l][i] = 1)<SUB>18</SUB>>", "155": "<(IDENTIFIER,j,j | l)<SUB>18</SUB>>", "157": "<(IDENTIFIER,i,dp[j | l][i] = 1)<SUB>18</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int i = (1 &lt;&lt; n) - 1; Some(i &gt; 0); i--),for (int i = (1 &lt;&lt; n) - 1; Some(i &gt; 0); i--))<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.assignment,int i = (1 &lt;&lt; n) - 1)<SUB>21</SUB>>", "163": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>21</SUB>>", "165": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "167": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>21</SUB>>", "169": "<(IDENTIFIER,i,i &gt; 0)<SUB>21</SUB>>", "171": "<(&lt;operator&gt;.postDecrement,i--)<SUB>21</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.assignment,int last = i &amp; -i)<SUB>22</SUB>>", "177": "<(&lt;operator&gt;.and,i &amp; -i)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.minus,-i)<SUB>22</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>23</SUB>>", "183": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "185": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "187": "<(IDENTIFIER,j,j &lt; n)<SUB>23</SUB>>", "189": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.logicalOr,((1 &lt;&lt; j) == last &amp;&amp; (i &amp; (i - 1)) != 0) || ((1 &lt;&lt; j) &amp; i) == 0)<SUB>24</SUB>>", "195": "<(&lt;operator&gt;.equals,(1 &lt;&lt; j) == last)<SUB>24</SUB>>", "197": "<(LITERAL,1,1 &lt;&lt; j)<SUB>24</SUB>>", "199": "<(IDENTIFIER,last,(1 &lt;&lt; j) == last)<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.and,i &amp; (i - 1))<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>24</SUB>>", "205": "<(LITERAL,1,i - 1)<SUB>24</SUB>>", "207": "<(&lt;operator&gt;.equals,((1 &lt;&lt; j) &amp; i) == 0)<SUB>25</SUB>>", "209": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>25</SUB>>", "211": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>25</SUB>>", "213": "<(LITERAL,0,((1 &lt;&lt; j) &amp; i) == 0)<SUB>25</SUB>>", "215": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>27</SUB>>", "217": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>27</SUB>>", "219": "<(LITERAL,0,int k = 0)<SUB>27</SUB>>", "221": "<(IDENTIFIER,k,k &lt; n)<SUB>27</SUB>>", "223": "<(&lt;operator&gt;.postIncrement,k++)<SUB>27</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.logicalAnd,(1 &lt;&lt; k) &gt;= last &amp;&amp; ((1 &lt;&lt; k) &amp; g[j]) != 0 &amp;&amp; ((1 &lt;&lt; k) == last || ((1 &lt;&lt; k) &amp; i) == 0))<SUB>28</SUB>>", "229": "<(&lt;operator&gt;.greaterEqualsThan,(1 &lt;&lt; k) &gt;= last)<SUB>28</SUB>>", "231": "<(LITERAL,1,1 &lt;&lt; k)<SUB>28</SUB>>", "233": "<(IDENTIFIER,last,(1 &lt;&lt; k) &gt;= last)<SUB>28</SUB>>", "235": "<(&lt;operator&gt;.and,(1 &lt;&lt; k) &amp; g[j])<SUB>28</SUB>>", "237": "<(LITERAL,1,1 &lt;&lt; k)<SUB>28</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,g[j])<SUB>28</SUB>>", "241": "<(IDENTIFIER,j,(1 &lt;&lt; k) &amp; g[j])<SUB>28</SUB>>", "243": "<(&lt;operator&gt;.logicalOr,(1 &lt;&lt; k) == last || ((1 &lt;&lt; k) &amp; i) == 0)<SUB>29</SUB>>", "245": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>29</SUB>>", "247": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>29</SUB>>", "249": "<(&lt;operator&gt;.equals,((1 &lt;&lt; k) &amp; i) == 0)<SUB>29</SUB>>", "251": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>29</SUB>>", "253": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>29</SUB>>", "255": "<(LITERAL,0,((1 &lt;&lt; k) &amp; i) == 0)<SUB>29</SUB>>", "257": "<(&lt;operator&gt;.assignmentPlus,dp[i][j] += dp[i | (1 &lt;&lt; k)][k])<SUB>30</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>30</SUB>>", "261": "<(IDENTIFIER,i,dp[i][j] += dp[i | (1 &lt;&lt; k)][k])<SUB>30</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,dp[i | (1 &lt;&lt; k)][k])<SUB>30</SUB>>", "265": "<(IDENTIFIER,dp,dp[i][j] += dp[i | (1 &lt;&lt; k)][k])<SUB>30</SUB>>", "267": "<(IDENTIFIER,i,i | (1 &lt;&lt; k))<SUB>30</SUB>>", "269": "<(LITERAL,1,1 &lt;&lt; k)<SUB>30</SUB>>", "271": "<(IDENTIFIER,k,dp[i][j] += dp[i | (1 &lt;&lt; k)][k])<SUB>30</SUB>>", "273": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>36</SUB>>", "275": "<(LITERAL,0,long res = 0)<SUB>36</SUB>>", "277": "<(LOCAL,int i: int)<SUB>37</SUB>>", "279": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "281": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>37</SUB>>", "283": "<(IDENTIFIER,n,i &lt; n)<SUB>37</SUB>>", "285": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "287": "<(IDENTIFIER,res,res += dp[(1 &lt;&lt; i)][i])<SUB>38</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; i)])<SUB>38</SUB>>", "291": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>38</SUB>>", "293": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>38</SUB>>", "295": "<(println,System.out.println(res / 2))<SUB>39</SUB>>", "297": "<(IDENTIFIER,System,System.out.println(res / 2))<SUB>39</SUB>>", "299": "<(&lt;operator&gt;.division,res / 2)<SUB>39</SUB>>", "301": "<(LITERAL,2,res / 2)<SUB>39</SUB>>", "303": "<(MODIFIER,STATIC)>"}}