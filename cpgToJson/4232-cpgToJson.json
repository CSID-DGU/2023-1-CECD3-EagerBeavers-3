{"edges": [["21", "22"], ["21", "23"], ["21", "290"], ["21", "291"], ["21", "292"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "42"], ["23", "43"], ["23", "47"], ["23", "288"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "51"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["51", "57"], ["51", "58"], ["51", "62"], ["51", "63"], ["51", "68"], ["51", "98"], ["51", "99"], ["51", "108"], ["51", "275"], ["51", "286"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["96", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["108", "113"], ["108", "116"], ["108", "118"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "129"], ["119", "131"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "152"], ["131", "153"], ["131", "160"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["160", "165"], ["160", "168"], ["160", "170"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "176"], ["170", "197"], ["172", "173"], ["172", "174"], ["174", "175"], ["176", "177"], ["176", "178"], ["176", "181"], ["176", "184"], ["176", "186"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["197", "202"], ["197", "207"], ["197", "209"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["207", "208"], ["209", "210"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["216", "217"], ["216", "218"], ["216", "221"], ["216", "253"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["221", "226"], ["221", "229"], ["221", "231"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["229", "230"], ["231", "232"], ["232", "233"], ["232", "248"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "247"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "259"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["259", "260"], ["259", "261"], ["259", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "274"], ["267", "268"], ["267", "273"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "277"], ["277", "278"], ["277", "281"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["288", "289"], ["24", "27"], ["27", "30"], ["28", "35"], ["31", "45"], ["43", "48"], ["288", "292"], ["26", "24"], ["30", "28"], ["45", "43"], ["48", "55"], ["48", "288"], ["33", "40"], ["36", "31"], ["53", "60"], ["58", "65"], ["63", "70"], ["99", "110"], ["275", "286"], ["286", "48"], ["35", "33"], ["38", "36"], ["55", "53"], ["60", "58"], ["65", "63"], ["70", "73"], ["73", "81"], ["73", "102"], ["76", "73"], ["101", "99"], ["110", "113"], ["113", "121"], ["113", "278"], ["116", "113"], ["277", "275"], ["40", "38"], ["102", "105"], ["105", "101"], ["278", "282"], ["281", "277"], ["81", "84"], ["84", "92"], ["84", "76"], ["87", "84"], ["121", "126"], ["124", "134"], ["124", "116"], ["129", "126"], ["282", "281"], ["90", "87"], ["126", "124"], ["132", "157"], ["153", "162"], ["91", "96"], ["96", "90"], ["133", "141"], ["138", "132"], ["155", "153"], ["162", "165"], ["165", "174"], ["165", "129"], ["168", "165"], ["92", "91"], ["134", "133"], ["140", "148"], ["145", "138"], ["157", "155"], ["172", "178"], ["141", "140"], ["146", "145"], ["174", "172"], ["178", "181"], ["181", "187"], ["181", "199"], ["184", "181"], ["186", "184"], ["199", "204"], ["202", "212"], ["202", "168"], ["207", "204"], ["148", "146"], ["187", "193"], ["190", "186"], ["204", "202"], ["192", "190"], ["211", "218"], ["211", "207"], ["193", "192"], ["212", "211"], ["218", "223"], ["253", "207"], ["223", "226"], ["226", "236"], ["226", "255"], ["229", "226"], ["254", "262"], ["259", "253"], ["255", "254"], ["261", "270"], ["266", "259"], ["233", "250"], ["233", "229"], ["248", "229"], ["262", "261"], ["267", "266"], ["234", "233"], ["234", "243"], ["241", "233"], ["250", "248"], ["268", "267"], ["235", "234"], ["242", "241"], ["270", "268"], ["236", "235"], ["243", "242"], ["21", "26"], ["22", "292"], ["24", "292"], ["27", "292"], ["28", "292"], ["33", "292"], ["36", "292"], ["36", "292"], ["36", "292"], ["31", "292"], ["45", "292"], ["43", "292"], ["43", "292"], ["48", "292"], ["48", "292"], ["288", "292"], ["288", "292"], ["53", "292"], ["60", "292"], ["58", "292"], ["58", "292"], ["63", "292"], ["63", "292"], ["63", "292"], ["70", "292"], ["73", "292"], ["99", "292"], ["101", "292"], ["99", "292"], ["99", "292"], ["110", "292"], ["113", "292"], ["113", "292"], ["113", "292"], ["282", "292"], ["281", "292"], ["275", "292"], ["275", "292"], ["286", "292"], ["121", "292"], ["124", "292"], ["124", "292"], ["116", "292"], ["132", "292"], ["138", "292"], ["138", "292"], ["132", "292"], ["132", "292"], ["153", "292"], ["153", "292"], ["153", "292"], ["162", "292"], ["165", "292"], ["165", "292"], ["129", "292"], ["172", "292"], ["172", "292"], ["172", "292"], ["178", "292"], ["181", "292"], ["181", "292"], ["199", "292"], ["202", "292"], ["202", "292"], ["168", "292"], ["211", "292"], ["211", "292"], ["218", "292"], ["223", "292"], ["226", "292"], ["226", "292"], ["253", "292"], ["259", "292"], ["266", "292"], ["266", "292"], ["259", "292"], ["253", "292"], ["253", "292"], ["207", "292"], ["235", "292"], ["234", "292"], ["233", "292"], ["242", "292"], ["241", "292"], ["233", "292"], ["233", "292"], ["248", "292"], ["248", "292"], ["229", "292"], ["186", "292"], ["192", "292"], ["186", "292"], ["186", "292"], ["184", "292"], ["81", "292"], ["84", "292"], ["84", "292"], ["76", "292"], ["90", "292"], ["96", "292"], ["90", "292"], ["90", "292"], ["87", "292"], ["21", "22"], ["21", "24"], ["21", "28"], ["45", "43"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["33", "31"], ["36", "31"], ["31", "288"], ["275", "288"], ["21", "288"], ["21", "33"], ["21", "41"], ["27", "45"], ["21", "45"], ["43", "48"], ["286", "48"], ["21", "48"], ["55", "53"], ["60", "58"], ["65", "63"], ["65", "63"], ["101", "99"], ["101", "99"], ["33", "36"], ["21", "36"], ["21", "70"], ["21", "110"], ["31", "275"], ["21", "275"], ["48", "286"], ["21", "286"], ["45", "55"], ["60", "55"], ["96", "55"], ["21", "55"], ["55", "60"], ["21", "60"], ["58", "65"], ["21", "65"], ["53", "65"], ["70", "73"], ["76", "73"], ["21", "73"], ["65", "73"], ["73", "76"], ["21", "76"], ["65", "101"], ["84", "101"], ["21", "101"], ["105", "101"], ["105", "101"], ["110", "113"], ["116", "113"], ["21", "113"], ["65", "113"], ["84", "113"], ["113", "116"], ["157", "116"], ["270", "116"], ["21", "116"], ["21", "81"], ["65", "102"], ["84", "102"], ["21", "102"], ["21", "105"], ["73", "105"], ["21", "121"], ["282", "281"], ["282", "281"], ["21", "281"], ["81", "84"], ["87", "84"], ["21", "84"], ["65", "84"], ["84", "87"], ["21", "87"], ["96", "90"], ["121", "124"], ["129", "124"], ["21", "124"], ["126", "124"], ["126", "124"], ["124", "129"], ["211", "129"], ["243", "129"], ["21", "129"], ["138", "132"], ["138", "132"], ["138", "132"], ["63", "153"], ["21", "282"], ["105", "282"], ["126", "282"], ["21", "126"], ["105", "126"], ["165", "126"], ["21", "162"], ["60", "96"], ["21", "96"], ["259", "138"], ["21", "138"], ["132", "138"], ["253", "138"], ["162", "165"], ["168", "165"], ["21", "165"], ["126", "165"], ["204", "165"], ["165", "168"], ["21", "168"], ["174", "172"], ["148", "157"], ["21", "157"], ["21", "178"], ["153", "186"], ["21", "199"], ["165", "174"], ["21", "174"], ["178", "181"], ["184", "181"], ["21", "181"], ["174", "181"], ["192", "181"], ["21", "184"], ["181", "184"], ["199", "202"], ["207", "202"], ["21", "202"], ["204", "202"], ["204", "202"], ["212", "207"], ["236", "207"], ["21", "207"], ["113", "148"], ["157", "148"], ["270", "148"], ["21", "148"], ["21", "204"], ["181", "204"], ["226", "204"], ["165", "192"], ["21", "192"], ["181", "192"], ["181", "192"], ["212", "211"], ["212", "211"], ["21", "211"], ["21", "218"], ["259", "253"], ["259", "253"], ["259", "253"], ["165", "193"], ["21", "193"], ["181", "193"], ["202", "212"], ["21", "212"], ["124", "212"], ["211", "212"], ["243", "212"], ["21", "223"], ["223", "226"], ["229", "226"], ["21", "226"], ["204", "226"], ["236", "229"], ["243", "229"], ["21", "229"], ["138", "259"], ["21", "259"], ["132", "259"], ["253", "259"], ["218", "259"], ["248", "259"], ["172", "248"], ["186", "248"], ["218", "266"], ["248", "266"], ["21", "266"], ["234", "233"], ["234", "233"], ["241", "233"], ["241", "233"], ["218", "248"], ["21", "248"], ["235", "234"], ["235", "234"], ["21", "234"], ["242", "241"], ["242", "241"], ["21", "241"], ["236", "235"], ["236", "235"], ["21", "235"], ["243", "242"], ["243", "242"], ["21", "242"], ["157", "270"], ["21", "270"], ["212", "236"], ["21", "236"], ["226", "236"], ["211", "243"], ["21", "243"], ["236", "243"], ["48", "60"], ["48", "102"], ["48", "281"], ["48", "70"], ["48", "48"], ["48", "65"], ["48", "278"], ["48", "53"], ["48", "55"], ["48", "73"], ["48", "113"], ["48", "282"], ["48", "275"], ["48", "101"], ["48", "58"], ["48", "286"], ["48", "277"], ["48", "99"], ["48", "105"], ["48", "110"], ["48", "63"], ["73", "84"], ["73", "76"], ["73", "73"], ["73", "81"], ["113", "116"], ["113", "113"], ["113", "121"], ["113", "126"], ["113", "124"], ["84", "84"], ["84", "96"], ["84", "92"], ["84", "87"], ["84", "91"], ["84", "90"], ["124", "146"], ["124", "162"], ["124", "129"], ["124", "134"], ["124", "138"], ["124", "148"], ["124", "141"], ["124", "140"], ["124", "133"], ["124", "145"], ["124", "132"], ["124", "153"], ["124", "155"], ["124", "157"], ["124", "126"], ["124", "165"], ["124", "124"], ["165", "168"], ["165", "204"], ["165", "181"], ["165", "174"], ["165", "202"], ["165", "199"], ["165", "172"], ["165", "178"], ["165", "165"], ["181", "192"], ["181", "181"], ["181", "190"], ["181", "184"], ["181", "186"], ["181", "187"], ["181", "193"], ["202", "204"], ["202", "202"], ["202", "207"], ["202", "212"], ["202", "211"], ["211", "226"], ["211", "262"], ["211", "268"], ["211", "253"], ["211", "254"], ["211", "261"], ["211", "255"], ["211", "223"], ["211", "259"], ["211", "267"], ["211", "270"], ["211", "218"], ["211", "266"], ["226", "226"], ["226", "236"], ["226", "229"], ["226", "233"], ["226", "235"], ["226", "234"], ["233", "248"], ["233", "250"], ["234", "243"], ["234", "242"], ["234", "241"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj1,new BufferedOutputStream(System.out))>", "39": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>4</SUB>>", "45": "<(nextInt,nextInt())<SUB>4</SUB>>", "47": "<(CONTROL_STRUCTURE,while (t &gt; 0),while (t &gt; 0))<SUB>5</SUB>>", "49": "<(IDENTIFIER,t,t &gt; 0)<SUB>5</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "55": "<(nextInt,nextInt())<SUB>6</SUB>>", "57": "<(LOCAL,int m: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,m,int m = nextInt())<SUB>6</SUB>>", "61": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[][] a = new int[m][n])<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[m][n])>", "67": "<(IDENTIFIER,n,new int[m][n])<SUB>7</SUB>>", "69": "<(LOCAL,int i: int)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "83": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "85": "<(IDENTIFIER,j,j &lt; m)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[j][i])<SUB>10</SUB>>", "93": "<(IDENTIFIER,a,a[j][i] = nextInt())<SUB>10</SUB>>", "95": "<(IDENTIFIER,i,a[j][i] = nextInt())<SUB>10</SUB>>", "97": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.assignment,int[][] dp = new int[m + 1][(1 &lt;&lt; n)])<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.alloc,new int[m + 1][(1 &lt;&lt; n)])>", "103": "<(IDENTIFIER,m,m + 1)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>13</SUB>>", "107": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>13</SUB>>", "109": "<(LOCAL,int i: int)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,int i = 1)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= m)<SUB>14</SUB>>", "115": "<(IDENTIFIER,m,i &lt;= m)<SUB>14</SUB>>", "117": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; (1 &lt;&lt; n)); j++),for (int j = 0; Some(j &lt; (1 &lt;&lt; n)); j++))<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>15</SUB>>", "123": "<(LITERAL,0,int j = 0)<SUB>15</SUB>>", "125": "<(IDENTIFIER,j,j &lt; (1 &lt;&lt; n))<SUB>15</SUB>>", "127": "<(LITERAL,1,1 &lt;&lt; n)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,j++)<SUB>15</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>16</SUB>>", "135": "<(IDENTIFIER,dp,dp[i][j] = Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "137": "<(IDENTIFIER,j,dp[i][j] = Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "139": "<(IDENTIFIER,Math,Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>16</SUB>>", "143": "<(IDENTIFIER,i,Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,dp[i - 1][j])<SUB>16</SUB>>", "147": "<(IDENTIFIER,dp,Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "149": "<(IDENTIFIER,i,i - 1)<SUB>16</SUB>>", "151": "<(IDENTIFIER,j,Math.max(dp[i][j], dp[i - 1][j]))<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.assignment,int[] b = a[i - 1])<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>17</SUB>>", "159": "<(LITERAL,1,i - 1)<SUB>17</SUB>>", "161": "<(LOCAL,int start: int)<SUB>18</SUB>>", "163": "<(IDENTIFIER,start,int start = 0)<SUB>18</SUB>>", "165": "<(&lt;operator&gt;.lessThan,start &lt; n)<SUB>18</SUB>>", "167": "<(IDENTIFIER,n,start &lt; n)<SUB>18</SUB>>", "169": "<(IDENTIFIER,start,start++)<SUB>18</SUB>>", "171": "<(LOCAL,int[] c: int[])<SUB>19</SUB>>", "173": "<(IDENTIFIER,c,int[] c = new int[n])<SUB>19</SUB>>", "175": "<(IDENTIFIER,n,new int[n])<SUB>19</SUB>>", "177": "<(LOCAL,int p: int)<SUB>20</SUB>>", "179": "<(IDENTIFIER,p,int p = 0)<SUB>20</SUB>>", "181": "<(&lt;operator&gt;.lessThan,p &lt; n)<SUB>20</SUB>>", "183": "<(IDENTIFIER,n,p &lt; n)<SUB>20</SUB>>", "185": "<(IDENTIFIER,p,p++)<SUB>20</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,c[p])<SUB>20</SUB>>", "189": "<(IDENTIFIER,p,c[p] = b[(start + p) % n])<SUB>20</SUB>>", "191": "<(IDENTIFIER,b,c[p] = b[(start + p) % n])<SUB>20</SUB>>", "193": "<(&lt;operator&gt;.addition,start + p)<SUB>20</SUB>>", "195": "<(IDENTIFIER,p,start + p)<SUB>20</SUB>>", "197": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; (1 &lt;&lt; n)); k++),for (int k = 0; Some(k &lt; (1 &lt;&lt; n)); k++))<SUB>21</SUB>>", "199": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>21</SUB>>", "201": "<(LITERAL,0,int k = 0)<SUB>21</SUB>>", "203": "<(IDENTIFIER,k,k &lt; (1 &lt;&lt; n))<SUB>21</SUB>>", "205": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "207": "<(&lt;operator&gt;.postIncrement,k++)<SUB>21</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "211": "<(&lt;operator&gt;.equals,(k | j) == j)<SUB>22</SUB>>", "213": "<(IDENTIFIER,k,k | j)<SUB>22</SUB>>", "215": "<(IDENTIFIER,j,(k | j) == j)<SUB>22</SUB>>", "217": "<(LOCAL,int sum: int)<SUB>23</SUB>>", "219": "<(IDENTIFIER,sum,int sum = 0)<SUB>23</SUB>>", "221": "<(CONTROL_STRUCTURE,for (int p = 0; Some(p &lt; n); p++),for (int p = 0; Some(p &lt; n); p++))<SUB>24</SUB>>", "223": "<(&lt;operator&gt;.assignment,int p = 0)<SUB>24</SUB>>", "225": "<(LITERAL,0,int p = 0)<SUB>24</SUB>>", "227": "<(IDENTIFIER,p,p &lt; n)<SUB>24</SUB>>", "229": "<(&lt;operator&gt;.postIncrement,p++)<SUB>24</SUB>>", "231": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "233": "<(&lt;operator&gt;.logicalAnd,((k &gt;&gt; p) &amp; 1) == 0 &amp;&amp; ((j &gt;&gt; p) &amp; 1) == 1)<SUB>25</SUB>>", "235": "<(&lt;operator&gt;.and,(k &gt;&gt; p) &amp; 1)<SUB>25</SUB>>", "237": "<(IDENTIFIER,k,k &gt;&gt; p)<SUB>25</SUB>>", "239": "<(LITERAL,1,(k &gt;&gt; p) &amp; 1)<SUB>25</SUB>>", "241": "<(&lt;operator&gt;.equals,((j &gt;&gt; p) &amp; 1) == 1)<SUB>25</SUB>>", "243": "<(&lt;operator&gt;.logicalShiftRight,j &gt;&gt; p)<SUB>25</SUB>>", "245": "<(IDENTIFIER,p,j &gt;&gt; p)<SUB>25</SUB>>", "247": "<(LITERAL,1,((j &gt;&gt; p) &amp; 1) == 1)<SUB>25</SUB>>", "249": "<(IDENTIFIER,sum,sum += c[p])<SUB>25</SUB>>", "251": "<(IDENTIFIER,c,sum += c[p])<SUB>25</SUB>>", "253": "<(&lt;operator&gt;.assignment,dp[i][j] = Math.max(dp[i][j], dp[i - 1][k] + sum))<SUB>27</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>27</SUB>>", "257": "<(IDENTIFIER,i,dp[i][j] = Math.max(dp[i][j], dp[i - 1][k] + sum))<SUB>27</SUB>>", "259": "<(max,Math.max(dp[i][j], dp[i - 1][k] + sum))<SUB>27</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>27</SUB>>", "263": "<(IDENTIFIER,dp,Math.max(dp[i][j], dp[i - 1][k] + sum))<SUB>27</SUB>>", "265": "<(IDENTIFIER,j,Math.max(dp[i][j], dp[i - 1][k] + sum))<SUB>27</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[i - 1][k])<SUB>27</SUB>>", "269": "<(IDENTIFIER,dp,dp[i - 1][k] + sum)<SUB>27</SUB>>", "271": "<(IDENTIFIER,i,i - 1)<SUB>27</SUB>>", "273": "<(IDENTIFIER,k,dp[i - 1][k] + sum)<SUB>27</SUB>>", "275": "<(println,println(dp[m][(1 &lt;&lt; n) - 1]))<SUB>33</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[m][(1 &lt;&lt; n) - 1])<SUB>33</SUB>>", "279": "<(IDENTIFIER,dp,println(dp[m][(1 &lt;&lt; n) - 1]))<SUB>33</SUB>>", "281": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>33</SUB>>", "283": "<(LITERAL,1,1 &lt;&lt; n)<SUB>33</SUB>>", "285": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>33</SUB>>", "287": "<(IDENTIFIER,t,t--)<SUB>34</SUB>>", "289": "<(IDENTIFIER,out,close())<SUB>37</SUB>>", "291": "<(MODIFIER,STATIC)>"}}