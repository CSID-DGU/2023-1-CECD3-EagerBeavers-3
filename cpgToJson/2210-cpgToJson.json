{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "64"], ["55", "65"], ["55", "68"], ["55", "139"], ["55", "146"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["79", "80"], ["79", "97"], ["80", "81"], ["80", "94"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "132"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "116"], ["110", "111"], ["110", "112"], ["110", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["116", "131"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "155"], ["50", "58"], ["53", "50"], ["28", "26"], ["56", "65"], ["65", "70"], ["139", "149"], ["146", "53"], ["57", "62"], ["62", "56"], ["70", "73"], ["73", "85"], ["73", "141"], ["76", "73"], ["140", "139"], ["147", "150"], ["150", "146"], ["58", "57"], ["141", "140"], ["149", "147"], ["80", "103"], ["80", "76"], ["81", "94"], ["94", "80"], ["99", "133"], ["83", "81"], ["101", "99"], ["133", "136"], ["133", "76"], ["136", "76"], ["84", "90"], ["89", "83"], ["102", "112"], ["107", "101"], ["85", "84"], ["90", "89"], ["103", "102"], ["109", "107"], ["110", "122"], ["116", "109"], ["112", "110"], ["118", "116"], ["120", "118"], ["121", "127"], ["126", "120"], ["122", "121"], ["127", "126"], ["19", "24"], ["20", "155"], ["22", "155"], ["25", "155"], ["25", "155"], ["30", "155"], ["35", "155"], ["37", "155"], ["35", "155"], ["35", "155"], ["40", "155"], ["40", "155"], ["40", "155"], ["47", "155"], ["50", "155"], ["50", "155"], ["50", "155"], ["53", "155"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["42", "40"], ["22", "25"], ["19", "25"], ["19", "47"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["42", "50"], ["73", "53"], ["19", "53"], ["62", "56"], ["35", "65"], ["94", "65"], ["112", "65"], ["19", "65"], ["65", "139"], ["133", "139"], ["136", "139"], ["19", "139"], ["19", "70"], ["19", "146"], ["65", "146"], ["133", "146"], ["136", "146"], ["37", "62"], ["19", "62"], ["70", "73"], ["76", "73"], ["19", "73"], ["50", "73"], ["73", "76"], ["19", "76"], ["19", "150"], ["65", "150"], ["133", "150"], ["136", "150"], ["81", "80"], ["81", "80"], ["94", "80"], ["94", "80"], ["107", "99"], ["107", "99"], ["107", "81"], ["19", "81"], ["83", "81"], ["83", "81"], ["19", "94"], ["112", "94"], ["35", "94"], ["133", "136"], ["19", "136"], ["56", "83"], ["120", "83"], ["120", "83"], ["107", "101"], ["107", "101"], ["99", "133"], ["19", "133"], ["65", "133"], ["136", "133"], ["116", "107"], ["19", "107"], ["109", "107"], ["109", "107"], ["110", "109"], ["110", "109"], ["110", "109"], ["116", "109"], ["116", "109"], ["116", "109"], ["81", "110"], ["19", "110"], ["112", "110"], ["112", "110"], ["118", "116"], ["19", "116"], ["118", "116"], ["19", "112"], ["94", "112"], ["110", "118"], ["19", "118"], ["120", "118"], ["120", "118"], ["83", "120"], ["83", "120"], ["50", "141"], ["50", "73"], ["50", "57"], ["50", "146"], ["50", "149"], ["50", "56"], ["50", "150"], ["50", "65"], ["50", "50"], ["50", "140"], ["50", "58"], ["50", "53"], ["50", "147"], ["50", "70"], ["50", "139"], ["50", "62"], ["73", "94"], ["73", "73"], ["73", "89"], ["73", "81"], ["73", "84"], ["73", "85"], ["73", "76"], ["73", "90"], ["73", "80"], ["73", "83"], ["80", "107"], ["80", "120"], ["80", "116"], ["80", "122"], ["80", "99"], ["80", "102"], ["80", "103"], ["80", "121"], ["80", "112"], ["80", "101"], ["80", "126"], ["80", "118"], ["80", "110"], ["80", "127"], ["80", "109"], ["80", "133"], ["133", "136"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,double[][] pos: double[][])<SUB>7</SUB>>", "41": "<(IDENTIFIER,pos,double[][] pos = new double[n][2])<SUB>7</SUB>>", "43": "<(IDENTIFIER,n,new double[n][2])<SUB>7</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.indexAccess,pos[i][0])<SUB>11</SUB>>", "59": "<(IDENTIFIER,pos,pos[i][0] = nextInt())<SUB>11</SUB>>", "61": "<(LITERAL,0,pos[i][0] = nextInt())<SUB>11</SUB>>", "63": "<(IDENTIFIER,in,nextInt())<SUB>11</SUB>>", "65": "<(&lt;operator&gt;.assignment,double y = r)<SUB>13</SUB>>", "67": "<(IDENTIFIER,r,double y = r)<SUB>13</SUB>>", "69": "<(LOCAL,int j: int)<SUB>15</SUB>>", "71": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>15</SUB>>", "75": "<(IDENTIFIER,i,j &lt; i)<SUB>15</SUB>>", "77": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "79": "<(CONTROL_STRUCTURE,if (Math.abs(pos[i][0] - pos[j][0]) &lt;= 2 * r),if (Math.abs(pos[i][0] - pos[j][0]) &lt;= 2 * r))<SUB>16</SUB>>", "81": "<(abs,Math.abs(pos[i][0] - pos[j][0]))<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.subtraction,pos[i][0] - pos[j][0])<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>16</SUB>>", "87": "<(IDENTIFIER,i,pos[i][0] - pos[j][0])<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,pos[j][0])<SUB>16</SUB>>", "91": "<(IDENTIFIER,pos,pos[i][0] - pos[j][0])<SUB>16</SUB>>", "93": "<(LITERAL,0,pos[i][0] - pos[j][0])<SUB>16</SUB>>", "95": "<(LITERAL,2,2 * r)<SUB>16</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,double tempy = pos[j][1] + Math.sqrt(Math.pow(2 * r, 2) - Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2)))<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.addition,pos[j][1] + Math.sqrt(Math.pow(2 * r, 2) - Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2)))<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,pos[j])<SUB>18</SUB>>", "105": "<(IDENTIFIER,j,pos[j][1] + Math.sqrt(Math.pow(2 * r, 2) - Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2)))<SUB>18</SUB>>", "107": "<(sqrt,Math.sqrt(Math.pow(2 * r, 2) - Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2)))<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.subtraction,Math.pow(2 * r, 2) - Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2))<SUB>18</SUB>>", "111": "<(IDENTIFIER,Math,Math.pow(2 * r, 2))<SUB>18</SUB>>", "113": "<(LITERAL,2,2 * r)<SUB>18</SUB>>", "115": "<(LITERAL,2,Math.pow(2 * r, 2))<SUB>18</SUB>>", "117": "<(IDENTIFIER,Math,Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2))<SUB>18</SUB>>", "119": "<(IDENTIFIER,Math,Math.abs(pos[i][0] - pos[j][0]))<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,pos[i][0])<SUB>18</SUB>>", "123": "<(IDENTIFIER,pos,pos[i][0] - pos[j][0])<SUB>18</SUB>>", "125": "<(LITERAL,0,pos[i][0] - pos[j][0])<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,pos[j])<SUB>18</SUB>>", "129": "<(IDENTIFIER,j,pos[i][0] - pos[j][0])<SUB>18</SUB>>", "131": "<(LITERAL,2,Math.pow(Math.abs(pos[i][0] - pos[j][0]), 2))<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.greaterThan,tempy &gt; y)<SUB>20</SUB>>", "135": "<(IDENTIFIER,y,tempy &gt; y)<SUB>20</SUB>>", "137": "<(IDENTIFIER,y,y = tempy)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.assignment,pos[i][1] = y)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>24</SUB>>", "143": "<(IDENTIFIER,i,pos[i][1] = y)<SUB>24</SUB>>", "145": "<(IDENTIFIER,y,pos[i][1] = y)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "151": "<(IDENTIFIER,y,y + &quot; &quot;)<SUB>25</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}