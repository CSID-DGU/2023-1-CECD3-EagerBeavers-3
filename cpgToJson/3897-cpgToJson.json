{"edges": [["23", "24"], ["23", "25"], ["23", "212"], ["23", "213"], ["23", "214"], ["25", "26"], ["25", "27"], ["25", "34"], ["25", "35"], ["25", "4"], ["25", "40"], ["25", "43"], ["25", "6"], ["25", "44"], ["25", "47"], ["25", "8"], ["25", "51"], ["25", "54"], ["25", "65"], ["25", "66"], ["25", "70"], ["25", "210"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "3"], ["44", "45"], ["44", "46"], ["47", "5"], ["47", "48"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "7"], ["54", "55"], ["55", "56"], ["55", "59"], ["55", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["66", "67"], ["66", "68"], ["68", "69"], ["70", "71"], ["70", "75"], ["71", "72"], ["71", "74"], ["72", "73"], ["75", "76"], ["75", "77"], ["75", "81"], ["75", "82"], ["75", "86"], ["75", "87"], ["75", "91"], ["75", "92"], ["75", "96"], ["77", "78"], ["77", "79"], ["79", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "104"], ["96", "106"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["106", "113"], ["106", "185"], ["106", "190"], ["106", "208"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["113", "118"], ["113", "130"], ["114", "115"], ["114", "116"], ["116", "117"], ["118", "119"], ["118", "128"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["132", "133"], ["132", "138"], ["132", "148"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "141"], ["139", "140"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "175"], ["149", "178"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["154", "161"], ["154", "163"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["164", "165"], ["164", "174"], ["165", "166"], ["165", "171"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["27", "38"], ["35", "42"], ["40", "43"], ["43", "46"], ["44", "50"], ["47", "53"], ["51", "58"], ["54", "68"], ["66", "72"], ["210", "214"], ["29", "27"], ["37", "35"], ["42", "40"], ["46", "44"], ["48", "47"], ["53", "51"], ["68", "66"], ["71", "79"], ["71", "210"], ["30", "31"], ["31", "29"], ["38", "37"], ["50", "48"], ["56", "63"], ["59", "54"], ["72", "71"], ["77", "84"], ["82", "89"], ["87", "94"], ["92", "98"], ["58", "56"], ["61", "59"], ["79", "77"], ["84", "82"], ["89", "87"], ["94", "92"], ["98", "101"], ["101", "72"], ["101", "108"], ["104", "101"], ["63", "61"], ["107", "116"], ["185", "192"], ["208", "104"], ["108", "111"], ["111", "107"], ["114", "122"], ["114", "134"], ["187", "185"], ["192", "195"], ["195", "205"], ["195", "208"], ["198", "195"], ["116", "114"], ["119", "128"], ["128", "187"], ["201", "198"], ["120", "125"], ["125", "119"], ["203", "201"], ["122", "120"], ["133", "139"], ["133", "151"], ["205", "203"], ["134", "133"], ["139", "142"], ["141", "187"], ["142", "145"], ["145", "141"], ["151", "155"], ["175", "179"], ["178", "187"], ["155", "158"], ["158", "167"], ["158", "175"], ["161", "158"], ["179", "182"], ["182", "178"], ["165", "175"], ["165", "161"], ["166", "171"], ["171", "165"], ["167", "166"], ["23", "30"], ["24", "214"], ["27", "214"], ["29", "214"], ["27", "214"], ["27", "214"], ["35", "214"], ["35", "214"], ["35", "214"], ["40", "214"], ["43", "214"], ["44", "214"], ["47", "214"], ["47", "214"], ["51", "214"], ["54", "214"], ["56", "214"], ["59", "214"], ["59", "214"], ["59", "214"], ["54", "214"], ["68", "214"], ["66", "214"], ["66", "214"], ["72", "214"], ["71", "214"], ["71", "214"], ["210", "214"], ["210", "214"], ["79", "214"], ["77", "214"], ["77", "214"], ["82", "214"], ["82", "214"], ["87", "214"], ["87", "214"], ["87", "214"], ["92", "214"], ["92", "214"], ["92", "214"], ["98", "214"], ["101", "214"], ["101", "214"], ["101", "214"], ["111", "214"], ["107", "214"], ["107", "214"], ["114", "214"], ["114", "214"], ["133", "214"], ["151", "214"], ["155", "214"], ["158", "214"], ["165", "214"], ["165", "214"], ["165", "214"], ["161", "214"], ["175", "214"], ["178", "214"], ["178", "214"], ["178", "214"], ["139", "214"], ["141", "214"], ["141", "214"], ["141", "214"], ["119", "214"], ["119", "214"], ["119", "214"], ["128", "214"], ["185", "214"], ["185", "214"], ["192", "214"], ["195", "214"], ["195", "214"], ["195", "214"], ["208", "214"], ["104", "214"], ["203", "214"], ["201", "214"], ["201", "214"], ["198", "214"], ["23", "24"], ["23", "27"], ["23", "35"], ["23", "40"], ["23", "44"], ["23", "51"], ["68", "66"], ["40", "43"], ["23", "43"], ["44", "47"], ["23", "47"], ["51", "54"], ["23", "54"], ["56", "54"], ["59", "54"], ["47", "210"], ["208", "210"], ["23", "210"], ["23", "29"], ["23", "37"], ["23", "56"], ["23", "64"], ["43", "68"], ["23", "68"], ["72", "71"], ["23", "71"], ["79", "77"], ["84", "82"], ["89", "87"], ["94", "92"], ["23", "31"], ["56", "59"], ["23", "59"], ["66", "72"], ["23", "72"], ["23", "98"], ["68", "79"], ["111", "79"], ["23", "79"], ["77", "84"], ["23", "84"], ["84", "89"], ["23", "89"], ["23", "94"], ["98", "101"], ["104", "101"], ["23", "101"], ["89", "101"], ["101", "104"], ["23", "104"], ["111", "107"], ["47", "185"], ["208", "185"], ["23", "185"], ["87", "185"], ["23", "192"], ["185", "208"], ["201", "208"], ["23", "208"], ["79", "111"], ["23", "111"], ["92", "114"], ["195", "114"], ["23", "114"], ["116", "114"], ["82", "119"], ["107", "119"], ["192", "195"], ["198", "195"], ["23", "195"], ["175", "195"], ["139", "195"], ["128", "195"], ["195", "198"], ["23", "198"], ["23", "116"], ["23", "128"], ["114", "128"], ["185", "201"], ["23", "201"], ["87", "201"], ["165", "201"], ["23", "203"], ["87", "203"], ["165", "203"], ["114", "122"], ["23", "122"], ["82", "133"], ["107", "133"], ["23", "133"], ["82", "141"], ["133", "141"], ["114", "139"], ["23", "139"], ["114", "151"], ["23", "151"], ["158", "175"], ["23", "175"], ["82", "178"], ["133", "178"], ["166", "178"], ["23", "155"], ["114", "155"], ["155", "158"], ["161", "158"], ["23", "158"], ["158", "161"], ["23", "161"], ["166", "165"], ["166", "165"], ["87", "165"], ["82", "166"], ["133", "166"], ["23", "166"], ["71", "94"], ["71", "77"], ["71", "98"], ["71", "84"], ["71", "92"], ["71", "87"], ["71", "101"], ["71", "79"], ["71", "89"], ["71", "72"], ["71", "82"], ["71", "71"], ["101", "107"], ["101", "192"], ["101", "114"], ["101", "185"], ["101", "104"], ["101", "208"], ["101", "195"], ["101", "101"], ["101", "187"], ["101", "108"], ["101", "111"], ["101", "116"], ["114", "120"], ["114", "128"], ["114", "119"], ["114", "134"], ["114", "122"], ["114", "125"], ["114", "133"], ["195", "198"], ["195", "195"], ["195", "201"], ["195", "205"], ["195", "203"], ["133", "145"], ["133", "179"], ["133", "178"], ["133", "151"], ["133", "182"], ["133", "155"], ["133", "139"], ["133", "158"], ["133", "141"], ["133", "142"], ["133", "175"], ["158", "167"], ["158", "171"], ["158", "166"], ["158", "165"], ["165", "161"], ["165", "158"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long mod = (long) (1e9 + 7))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.cast,(long) (1e9 + 7))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.addition,1e9 + 7)<SUB>3</SUB>>", "33": "<(LITERAL,7,1e9 + 7)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long mod1 = (long) 998244353)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.cast,(long) 998244353)<SUB>4</SUB>>", "39": "<(LITERAL,998244353,(long) 998244353)<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY s = new Reader())<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.alloc,new Reader())<SUB>5</SUB>>", "3": "<(IDENTIFIER,s,new Reader())<SUB>5</SUB>>", "44": "<(&lt;operator&gt;.assignment,ANY pt = new PrintWriter(System.out))<SUB>6</SUB>>", "46": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>6</SUB>>", "5": "<(IDENTIFIER,pt,new PrintWriter(System.out))<SUB>6</SUB>>", "49": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>6</SUB>>", "8": "<(LOCAL,BufferedReader br: ANY)<SUB>8</SUB>>", "52": "<(IDENTIFIER,br,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>8</SUB>>", "54": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>8</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>8</SUB>>", "63": "<(FIELD_IDENTIFIER,in,in)<SUB>8</SUB>>", "65": "<(LOCAL,int T: int)<SUB>9</SUB>>", "67": "<(IDENTIFIER,T,int T = nextInt())<SUB>9</SUB>>", "69": "<(IDENTIFIER,s,nextInt())<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.greaterThan,T-- &gt; 0)<SUB>12</SUB>>", "73": "<(IDENTIFIER,T,T--)<SUB>12</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>14</SUB>>", "79": "<(nextInt,nextInt())<SUB>14</SUB>>", "81": "<(LOCAL,int[] arr: int[])<SUB>15</SUB>>", "83": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>15</SUB>>", "85": "<(IDENTIFIER,n,new int[n])<SUB>15</SUB>>", "87": "<(&lt;operator&gt;.assignment,int[] brr = new int[n])<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.alloc,new int[n])>", "91": "<(LOCAL,int e: int)<SUB>17</SUB>>", "93": "<(IDENTIFIER,e,int e = -1)<SUB>17</SUB>>", "95": "<(LITERAL,1,-1)<SUB>17</SUB>>", "97": "<(LOCAL,int i: int)<SUB>18</SUB>>", "99": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "101": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "103": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "105": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>19</SUB>>", "109": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>19</SUB>>", "111": "<(nextInt,nextInt())<SUB>19</SUB>>", "113": "<(CONTROL_STRUCTURE,if (e == -1),if (e == -1))<SUB>20</SUB>>", "115": "<(IDENTIFIER,e,e == -1)<SUB>20</SUB>>", "117": "<(LITERAL,1,-1)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.assignment,brr[e + 1] = arr[i])<SUB>21</SUB>>", "121": "<(IDENTIFIER,brr,brr[e + 1] = arr[i])<SUB>21</SUB>>", "123": "<(IDENTIFIER,e,e + 1)<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>21</SUB>>", "127": "<(IDENTIFIER,i,brr[e + 1] = arr[i])<SUB>21</SUB>>", "129": "<(IDENTIFIER,e,e++)<SUB>22</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "133": "<(&lt;operator&gt;.equals,arr[i] == 1)<SUB>25</SUB>>", "135": "<(IDENTIFIER,arr,arr[i] == 1)<SUB>25</SUB>>", "137": "<(LITERAL,1,arr[i] == 1)<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,e++)<SUB>26</SUB>>", "141": "<(&lt;operator&gt;.assignment,brr[e] = arr[i])<SUB>27</SUB>>", "143": "<(IDENTIFIER,brr,brr[e] = arr[i])<SUB>27</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>27</SUB>>", "147": "<(IDENTIFIER,i,brr[e] = arr[i])<SUB>27</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.assignment,int j = e)<SUB>30</SUB>>", "153": "<(IDENTIFIER,e,int j = e)<SUB>30</SUB>>", "155": "<(&lt;operator&gt;.assignment,j = e)<SUB>31</SUB>>", "157": "<(IDENTIFIER,e,j = e)<SUB>31</SUB>>", "159": "<(IDENTIFIER,j,j &gt;= 0)<SUB>31</SUB>>", "161": "<(&lt;operator&gt;.postDecrement,j--)<SUB>31</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.equals,(arr[i] - 1) == brr[j])<SUB>32</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>32</SUB>>", "169": "<(IDENTIFIER,i,arr[i] - 1)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,brr[j])<SUB>32</SUB>>", "173": "<(IDENTIFIER,j,(arr[i] - 1) == brr[j])<SUB>32</SUB>>", "175": "<(&lt;operator&gt;.assignment,e = j)<SUB>35</SUB>>", "177": "<(IDENTIFIER,j,e = j)<SUB>35</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,brr[e])<SUB>36</SUB>>", "181": "<(IDENTIFIER,e,brr[e] = arr[i])<SUB>36</SUB>>", "183": "<(IDENTIFIER,arr,brr[e] = arr[i])<SUB>36</SUB>>", "185": "<(print,print(brr[0]))<SUB>39</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,brr[0])<SUB>39</SUB>>", "189": "<(LITERAL,0,print(brr[0]))<SUB>39</SUB>>", "191": "<(LOCAL,int j: int)<SUB>40</SUB>>", "193": "<(IDENTIFIER,j,int j = 1)<SUB>40</SUB>>", "195": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= e)<SUB>40</SUB>>", "197": "<(IDENTIFIER,e,j &lt;= e)<SUB>40</SUB>>", "199": "<(IDENTIFIER,j,j++)<SUB>40</SUB>>", "201": "<(print,print(&quot;.&quot; + brr[j]))<SUB>41</SUB>>", "203": "<(&lt;operator&gt;.addition,&quot;.&quot; + brr[j])<SUB>41</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,brr[j])<SUB>41</SUB>>", "207": "<(IDENTIFIER,j,&quot;.&quot; + brr[j])<SUB>41</SUB>>", "209": "<(IDENTIFIER,pt,println())<SUB>43</SUB>>", "211": "<(IDENTIFIER,pt,close())<SUB>55</SUB>>", "213": "<(MODIFIER,STATIC)>"}}