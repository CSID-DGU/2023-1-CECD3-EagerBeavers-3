{"edges": [["19", "20"], ["19", "21"], ["19", "176"], ["19", "177"], ["19", "178"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "33"], ["21", "34"], ["21", "37"], ["21", "41"], ["21", "42"], ["21", "45"], ["21", "46"], ["21", "49"], ["21", "50"], ["21", "53"], ["21", "75"], ["21", "76"], ["21", "81"], ["21", "82"], ["21", "85"], ["21", "103"], ["21", "104"], ["21", "116"], ["21", "123"], ["21", "124"], ["21", "136"], ["21", "169"], ["21", "174"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "72"], ["54", "55"], ["54", "57"], ["54", "60"], ["55", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "71"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["65", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "102"], ["92", "93"], ["92", "98"], ["92", "101"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "115"], ["109", "110"], ["109", "111"], ["109", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["126", "133"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "140"], ["136", "148"], ["137", "138"], ["137", "139"], ["140", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["149", "150"], ["149", "151"], ["149", "160"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "168"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["22", "28"], ["25", "30"], ["30", "34"], ["34", "39"], ["37", "42"], ["42", "46"], ["46", "50"], ["50", "55"], ["76", "82"], ["82", "86"], ["104", "120"], ["116", "127"], ["124", "137"], ["169", "174"], ["174", "178"], ["24", "22"], ["26", "25"], ["39", "37"], ["72", "55"], ["72", "78"], ["78", "76"], ["86", "94"], ["86", "107"], ["89", "107"], ["106", "104"], ["118", "116"], ["126", "124"], ["137", "144"], ["137", "154"], ["170", "169"], ["28", "26"], ["55", "57"], ["57", "68"], ["60", "72"], ["91", "89"], ["107", "112"], ["108", "106"], ["120", "118"], ["127", "130"], ["127", "133"], ["130", "126"], ["133", "126"], ["141", "172"], ["172", "170"], ["62", "60"], ["92", "91"], ["109", "108"], ["143", "141"], ["151", "164"], ["160", "172"], ["63", "62"], ["93", "98"], ["93", "92"], ["98", "92"], ["112", "109"], ["144", "143"], ["153", "151"], ["162", "160"], ["65", "63"], ["94", "93"], ["154", "156"], ["155", "153"], ["163", "162"], ["68", "65"], ["156", "155"], ["164", "163"], ["19", "24"], ["20", "178"], ["22", "178"], ["25", "178"], ["25", "178"], ["30", "178"], ["34", "178"], ["37", "178"], ["37", "178"], ["42", "178"], ["46", "178"], ["50", "178"], ["55", "178"], ["57", "178"], ["62", "178"], ["60", "178"], ["60", "178"], ["72", "178"], ["72", "178"], ["78", "178"], ["78", "178"], ["76", "178"], ["76", "178"], ["82", "178"], ["86", "178"], ["92", "178"], ["92", "178"], ["91", "178"], ["89", "178"], ["89", "178"], ["104", "178"], ["109", "178"], ["109", "178"], ["108", "178"], ["106", "178"], ["104", "178"], ["104", "178"], ["120", "178"], ["118", "178"], ["116", "178"], ["116", "178"], ["124", "178"], ["126", "178"], ["133", "178"], ["126", "178"], ["130", "178"], ["126", "178"], ["124", "178"], ["124", "178"], ["137", "178"], ["137", "178"], ["156", "178"], ["155", "178"], ["155", "178"], ["153", "178"], ["151", "178"], ["151", "178"], ["164", "178"], ["163", "178"], ["163", "178"], ["162", "178"], ["160", "178"], ["160", "178"], ["144", "178"], ["143", "178"], ["141", "178"], ["141", "178"], ["169", "178"], ["169", "178"], ["169", "178"], ["174", "178"], ["174", "178"], ["19", "20"], ["19", "22"], ["19", "30"], ["19", "34"], ["39", "37"], ["19", "42"], ["19", "46"], ["19", "50"], ["78", "76"], ["78", "76"], ["19", "82"], ["19", "104"], ["109", "104"], ["109", "104"], ["109", "104"], ["82", "104"], ["89", "104"], ["118", "116"], ["118", "116"], ["130", "124"], ["130", "124"], ["133", "124"], ["133", "124"], ["22", "25"], ["19", "25"], ["91", "89"], ["91", "89"], ["160", "169"], ["141", "169"], ["19", "169"], ["39", "174"], ["19", "174"], ["25", "39"], ["19", "39"], ["42", "57"], ["72", "57"], ["19", "57"], ["62", "60"], ["62", "60"], ["37", "72"], ["19", "72"], ["60", "72"], ["72", "78"], ["19", "78"], ["57", "78"], ["62", "86"], ["19", "86"], ["19", "106"], ["109", "106"], ["109", "106"], ["109", "106"], ["82", "106"], ["89", "106"], ["76", "118"], ["94", "118"], ["98", "118"], ["19", "118"], ["120", "118"], ["120", "118"], ["130", "126"], ["130", "126"], ["133", "126"], ["133", "126"], ["133", "137"], ["130", "137"], ["19", "137"], ["144", "141"], ["144", "141"], ["19", "141"], ["50", "55"], ["62", "55"], ["19", "55"], ["19", "60"], ["42", "60"], ["72", "60"], ["93", "91"], ["98", "91"], ["98", "91"], ["19", "91"], ["86", "91"], ["109", "108"], ["109", "108"], ["109", "108"], ["82", "108"], ["89", "108"], ["19", "108"], ["19", "120"], ["82", "120"], ["89", "120"], ["112", "120"], ["116", "127"], ["19", "127"], ["120", "127"], ["127", "130"], ["19", "130"], ["127", "130"], ["127", "133"], ["19", "133"], ["127", "133"], ["19", "151"], ["155", "151"], ["155", "151"], ["163", "160"], ["163", "160"], ["19", "160"], ["63", "62"], ["63", "62"], ["68", "62"], ["19", "62"], ["93", "92"], ["98", "92"], ["98", "92"], ["19", "92"], ["65", "109"], ["19", "109"], ["112", "109"], ["112", "109"], ["144", "143"], ["144", "143"], ["19", "143"], ["19", "63"], ["65", "63"], ["65", "63"], ["65", "63"], ["94", "93"], ["94", "93"], ["19", "93"], ["94", "98"], ["19", "98"], ["86", "112"], ["91", "112"], ["19", "112"], ["133", "144"], ["130", "144"], ["19", "144"], ["19", "153"], ["155", "153"], ["155", "153"], ["163", "162"], ["163", "162"], ["19", "162"], ["19", "65"], ["68", "65"], ["68", "65"], ["76", "94"], ["19", "94"], ["156", "155"], ["156", "155"], ["124", "155"], ["19", "155"], ["104", "163"], ["19", "163"], ["151", "163"], ["55", "68"], ["19", "68"], ["137", "156"], ["19", "156"], ["104", "164"], ["19", "164"], ["72", "68"], ["72", "60"], ["72", "57"], ["72", "72"], ["72", "65"], ["72", "63"], ["72", "55"], ["72", "62"], ["86", "94"], ["86", "89"], ["86", "92"], ["86", "91"], ["86", "93"], ["137", "160"], ["137", "141"], ["137", "154"], ["137", "163"], ["137", "151"], ["137", "162"], ["137", "153"], ["137", "144"], ["137", "143"], ["137", "164"], ["137", "155"], ["137", "156"], ["127", "130"], ["127", "133"], ["93", "98"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long inputNum: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,inputNum,long inputNum = 0)<SUB>3</SUB>>", "33": "<(LOCAL,String finalResult: java.lang.String)<SUB>4</SUB>>", "35": "<(IDENTIFIER,finalResult,String finalResult = &quot;&quot;)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,inputNum = nextLong())<SUB>6</SUB>>", "39": "<(nextLong,nextLong())<SUB>6</SUB>>", "41": "<(LOCAL,long upperLimitResult: long)<SUB>7</SUB>>", "43": "<(IDENTIFIER,upperLimitResult,long upperLimitResult = 0)<SUB>7</SUB>>", "45": "<(LOCAL,long lowerLimitResult: long)<SUB>8</SUB>>", "47": "<(IDENTIFIER,lowerLimitResult,long lowerLimitResult = 0)<SUB>8</SUB>>", "49": "<(LOCAL,int multiplier: int)<SUB>9</SUB>>", "51": "<(IDENTIFIER,multiplier,int multiplier = 0)<SUB>9</SUB>>", "53": "<(CONTROL_STRUCTURE,do {...} while (inputNum &gt; upperLimitResult),do {...} while (inputNum &gt; upperLimitResult))<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,multiplier++)<SUB>11</SUB>>", "57": "<(&lt;operator&gt;.assignment,lowerLimitResult = upperLimitResult)<SUB>12</SUB>>", "59": "<(IDENTIFIER,upperLimitResult,lowerLimitResult = upperLimitResult)<SUB>12</SUB>>", "61": "<(IDENTIFIER,upperLimitResult,upperLimitResult += 9 * Math.pow(10, multiplier - 1) * (multiplier))<SUB>13</SUB>>", "63": "<(&lt;operator&gt;.multiplication,9 * Math.pow(10, multiplier - 1))<SUB>13</SUB>>", "65": "<(pow,Math.pow(10, multiplier - 1))<SUB>13</SUB>>", "67": "<(LITERAL,10,Math.pow(10, multiplier - 1))<SUB>13</SUB>>", "69": "<(IDENTIFIER,multiplier,multiplier - 1)<SUB>13</SUB>>", "71": "<(IDENTIFIER,multiplier,9 * Math.pow(10, multiplier - 1) * (multiplier))<SUB>13</SUB>>", "73": "<(IDENTIFIER,inputNum,inputNum &gt; upperLimitResult)<SUB>14</SUB>>", "75": "<(LOCAL,long remainderFromLowerRange: long)<SUB>15</SUB>>", "77": "<(IDENTIFIER,remainderFromLowerRange,long remainderFromLowerRange = inputNum - lowerLimitResult)<SUB>15</SUB>>", "79": "<(IDENTIFIER,inputNum,inputNum - lowerLimitResult)<SUB>15</SUB>>", "81": "<(LOCAL,long repititions: long)<SUB>16</SUB>>", "83": "<(IDENTIFIER,repititions,long repititions = 0)<SUB>16</SUB>>", "85": "<(CONTROL_STRUCTURE,if (multiplier &gt; 1),if (multiplier &gt; 1))<SUB>17</SUB>>", "87": "<(IDENTIFIER,multiplier,multiplier &gt; 1)<SUB>17</SUB>>", "89": "<(&lt;operator&gt;.assignment,repititions = (remainderFromLowerRange - 1 &gt; 0 ? remainderFromLowerRange - 1 : 0) / multiplier)<SUB>18</SUB>>", "91": "<(&lt;operator&gt;.division,(remainderFromLowerRange - 1 &gt; 0 ? remainderFromLowerRange - 1 : 0) / multiplier)<SUB>18</SUB>>", "93": "<(&lt;operator&gt;.greaterThan,remainderFromLowerRange - 1 &gt; 0)<SUB>18</SUB>>", "95": "<(IDENTIFIER,remainderFromLowerRange,remainderFromLowerRange - 1)<SUB>18</SUB>>", "97": "<(LITERAL,0,remainderFromLowerRange - 1 &gt; 0)<SUB>18</SUB>>", "99": "<(IDENTIFIER,remainderFromLowerRange,remainderFromLowerRange - 1)<SUB>18</SUB>>", "101": "<(LITERAL,0,remainderFromLowerRange - 1 &gt; 0 ? remainderFromLowerRange - 1 : 0)<SUB>18</SUB>>", "103": "<(LOCAL,long currentNumber: long)<SUB>19</SUB>>", "105": "<(IDENTIFIER,currentNumber,long currentNumber = (long) (Math.pow(10, multiplier - 1) + repititions))<SUB>19</SUB>>", "107": "<(TYPE_REF,long,long)<SUB>19</SUB>>", "109": "<(pow,Math.pow(10, multiplier - 1))<SUB>19</SUB>>", "111": "<(LITERAL,10,Math.pow(10, multiplier - 1))<SUB>19</SUB>>", "113": "<(IDENTIFIER,multiplier,multiplier - 1)<SUB>19</SUB>>", "115": "<(IDENTIFIER,repititions,Math.pow(10, multiplier - 1) + repititions)<SUB>19</SUB>>", "117": "<(IDENTIFIER,remainderFromLowerRange,remainderFromLowerRange = remainderFromLowerRange - repititions * multiplier)<SUB>20</SUB>>", "119": "<(IDENTIFIER,remainderFromLowerRange,remainderFromLowerRange - repititions * multiplier)<SUB>20</SUB>>", "121": "<(IDENTIFIER,repititions,repititions * multiplier)<SUB>20</SUB>>", "123": "<(LOCAL,long digitIndex: long)<SUB>21</SUB>>", "125": "<(IDENTIFIER,digitIndex,long digitIndex = remainderFromLowerRange &lt; multiplier ? multiplier - remainderFromLowerRange : remainderFromLowerRange % multiplier)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.lessThan,remainderFromLowerRange &lt; multiplier)<SUB>21</SUB>>", "129": "<(IDENTIFIER,multiplier,remainderFromLowerRange &lt; multiplier)<SUB>21</SUB>>", "131": "<(IDENTIFIER,multiplier,multiplier - remainderFromLowerRange)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.modulo,remainderFromLowerRange % multiplier)<SUB>22</SUB>>", "135": "<(IDENTIFIER,multiplier,remainderFromLowerRange % multiplier)<SUB>22</SUB>>", "137": "<(&lt;operator&gt;.equals,multiplier == 1)<SUB>24</SUB>>", "139": "<(LITERAL,1,multiplier == 1)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.assignment,finalResult = (remainderFromLowerRange % 10) + &quot;&quot;)<SUB>25</SUB>>", "143": "<(&lt;operator&gt;.addition,(remainderFromLowerRange % 10) + &quot;&quot;)<SUB>25</SUB>>", "145": "<(IDENTIFIER,remainderFromLowerRange,remainderFromLowerRange % 10)<SUB>25</SUB>>", "147": "<(LITERAL,&quot;&quot;,(remainderFromLowerRange % 10) + &quot;&quot;)<SUB>25</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.assignment,int charToGet = (int) ((multiplier - 1) - digitIndex))<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.cast,(int) ((multiplier - 1) - digitIndex))<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.subtraction,(multiplier - 1) - digitIndex)<SUB>27</SUB>>", "157": "<(IDENTIFIER,multiplier,multiplier - 1)<SUB>27</SUB>>", "159": "<(IDENTIFIER,digitIndex,(multiplier - 1) - digitIndex)<SUB>27</SUB>>", "161": "<(IDENTIFIER,finalResult,finalResult = (currentNumber + &quot;&quot;).charAt(charToGet) + &quot;&quot;)<SUB>28</SUB>>", "163": "<(charAt,this.charAt(charToGet))<SUB>28</SUB>>", "165": "<(IDENTIFIER,currentNumber,currentNumber + &quot;&quot;)<SUB>28</SUB>>", "167": "<(IDENTIFIER,charToGet,this.charAt(charToGet))<SUB>28</SUB>>", "169": "<(print,System.out.print(finalResult))<SUB>30</SUB>>", "171": "<(IDENTIFIER,System,System.out.print(finalResult))<SUB>30</SUB>>", "173": "<(IDENTIFIER,finalResult,System.out.print(finalResult))<SUB>30</SUB>>", "175": "<(IDENTIFIER,scanner,close())<SUB>31</SUB>>", "177": "<(MODIFIER,STATIC)>"}}