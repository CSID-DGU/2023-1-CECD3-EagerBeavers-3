{"edges": [["21", "22"], ["21", "23"], ["21", "288"], ["21", "289"], ["21", "290"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "34"], ["32", "33"], ["34", "35"], ["34", "36"], ["34", "40"], ["34", "41"], ["34", "45"], ["34", "46"], ["34", "50"], ["34", "88"], ["34", "92"], ["34", "93"], ["34", "6"], ["34", "96"], ["34", "99"], ["34", "100"], ["34", "283"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["60", "72"], ["60", "80"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "69"], ["65", "71"], ["66", "67"], ["66", "68"], ["69", "70"], ["72", "73"], ["72", "78"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["78", "79"], ["80", "81"], ["80", "86"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["88", "89"], ["88", "90"], ["88", "91"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "5"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "112"], ["110", "129"], ["110", "130"], ["110", "137"], ["110", "138"], ["110", "141"], ["110", "165"], ["110", "197"], ["110", "198"], ["110", "215"], ["110", "222"], ["110", "225"], ["110", "249"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "128"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "150"], ["141", "152"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["150", "151"], ["152", "153"], ["152", "162"], ["153", "154"], ["153", "161"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "191"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "190"], ["173", "174"], ["173", "181"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "189"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["191", "192"], ["191", "194"], ["192", "193"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "214"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["225", "230"], ["225", "234"], ["225", "236"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["232", "233"], ["234", "235"], ["236", "237"], ["236", "246"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "277"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "276"], ["259", "260"], ["259", "267"], ["260", "261"], ["260", "266"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["267", "268"], ["267", "275"], ["268", "269"], ["268", "274"], ["269", "270"], ["269", "271"], ["271", "272"], ["271", "273"], ["277", "278"], ["277", "280"], ["278", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["24", "30"], ["27", "32"], ["26", "24"], ["28", "27"], ["32", "290"], ["32", "38"], ["30", "28"], ["36", "43"], ["41", "48"], ["46", "52"], ["88", "93"], ["93", "98"], ["96", "99"], ["99", "102"], ["283", "32"], ["38", "36"], ["43", "41"], ["48", "46"], ["52", "55"], ["55", "62"], ["55", "88"], ["58", "55"], ["98", "96"], ["102", "105"], ["105", "117"], ["105", "286"], ["108", "105"], ["284", "283"], ["61", "74"], ["72", "82"], ["80", "58"], ["112", "134"], ["130", "138"], ["138", "143"], ["198", "219"], ["215", "222"], ["222", "227"], ["286", "284"], ["62", "68"], ["73", "78"], ["78", "72"], ["81", "86"], ["86", "80"], ["114", "112"], ["132", "130"], ["143", "148"], ["146", "157"], ["146", "166"], ["146", "169"], ["150", "148"], ["166", "192"], ["166", "203"], ["200", "198"], ["217", "215"], ["227", "232"], ["230", "241"], ["230", "250"], ["230", "255"], ["234", "232"], ["250", "278"], ["250", "108"], ["66", "69"], ["69", "61"], ["74", "77"], ["77", "73"], ["82", "85"], ["85", "81"], ["115", "114"], ["134", "132"], ["148", "146"], ["153", "162"], ["153", "150"], ["162", "150"], ["168", "166"], ["192", "194"], ["194", "203"], ["201", "200"], ["219", "217"], ["232", "230"], ["237", "246"], ["237", "234"], ["246", "234"], ["252", "250"], ["278", "280"], ["280", "108"], ["68", "66"], ["116", "123"], ["121", "115"], ["154", "153"], ["169", "168"], ["169", "177"], ["172", "168"], ["202", "209"], ["207", "201"], ["238", "237"], ["253", "252"], ["253", "263"], ["258", "252"], ["117", "120"], ["120", "116"], ["122", "121"], ["156", "154"], ["173", "172"], ["203", "206"], ["206", "202"], ["208", "207"], ["240", "238"], ["255", "253"], ["259", "258"], ["123", "126"], ["126", "122"], ["157", "156"], ["174", "185"], ["181", "173"], ["209", "212"], ["212", "208"], ["241", "240"], ["260", "271"], ["267", "259"], ["175", "180"], ["180", "174"], ["182", "181"], ["261", "266"], ["266", "260"], ["268", "267"], ["177", "175"], ["183", "188"], ["188", "182"], ["263", "261"], ["269", "274"], ["274", "268"], ["185", "183"], ["271", "269"], ["21", "26"], ["22", "290"], ["24", "290"], ["27", "290"], ["27", "290"], ["32", "290"], ["32", "290"], ["283", "290"], ["283", "290"], ["283", "290"], ["88", "290"], ["21", "22"], ["21", "24"], ["24", "27"], ["21", "27"], ["27", "32"], ["43", "32"], ["86", "32"], ["21", "32"], ["38", "36"], ["43", "41"], ["48", "46"], ["21", "93"], ["21", "96"], ["21", "52"], ["21", "88"], ["46", "88"], ["61", "88"], ["96", "99"], ["21", "99"], ["21", "102"], ["93", "283"], ["192", "283"], ["278", "283"], ["21", "283"], ["32", "38"], ["21", "38"], ["38", "43"], ["21", "43"], ["36", "48"], ["21", "48"], ["52", "55"], ["58", "55"], ["21", "55"], ["48", "55"], ["55", "58"], ["21", "58"], ["66", "61"], ["69", "61"], ["21", "61"], ["78", "72"], ["86", "80"], ["102", "105"], ["108", "105"], ["21", "105"], ["55", "105"], ["255", "105"], ["105", "108"], ["169", "108"], ["185", "108"], ["253", "108"], ["21", "108"], ["114", "112"], ["114", "112"], ["112", "130"], ["21", "130"], ["134", "130"], ["134", "130"], ["21", "138"], ["115", "198"], ["207", "198"], ["207", "198"], ["134", "198"], ["21", "198"], ["217", "215"], ["217", "215"], ["21", "222"], ["21", "143"], ["21", "227"], ["21", "66"], ["21", "71"], ["43", "78"], ["86", "78"], ["21", "78"], ["78", "86"], ["21", "86"], ["115", "114"], ["115", "114"], ["41", "114"], ["219", "114"], ["21", "114"], ["112", "132"], ["21", "132"], ["134", "132"], ["134", "132"], ["143", "146"], ["150", "146"], ["21", "146"], ["148", "146"], ["157", "150"], ["21", "150"], ["21", "162"], ["138", "166"], ["162", "166"], ["21", "166"], ["168", "166"], ["168", "166"], ["115", "200"], ["207", "200"], ["207", "200"], ["134", "200"], ["21", "200"], ["198", "217"], ["21", "217"], ["219", "217"], ["219", "217"], ["227", "230"], ["234", "230"], ["21", "230"], ["232", "230"], ["241", "234"], ["21", "234"], ["21", "246"], ["222", "250"], ["246", "250"], ["21", "250"], ["252", "250"], ["252", "250"], ["66", "69"], ["21", "69"], ["121", "115"], ["121", "115"], ["114", "134"], ["21", "134"], ["99", "148"], ["232", "148"], ["280", "148"], ["157", "148"], ["21", "148"], ["154", "153"], ["154", "153"], ["21", "153"], ["169", "168"], ["169", "168"], ["172", "168"], ["172", "168"], ["93", "192"], ["278", "192"], ["21", "192"], ["148", "194"], ["21", "194"], ["130", "194"], ["156", "194"], ["115", "201"], ["207", "201"], ["207", "201"], ["21", "219"], ["134", "219"], ["148", "232"], ["194", "232"], ["241", "232"], ["21", "232"], ["238", "237"], ["238", "237"], ["21", "237"], ["253", "252"], ["253", "252"], ["258", "252"], ["258", "252"], ["93", "278"], ["192", "278"], ["21", "278"], ["232", "280"], ["21", "280"], ["215", "280"], ["240", "280"], ["21", "121"], ["238", "154"], ["21", "154"], ["156", "154"], ["156", "154"], ["105", "169"], ["21", "169"], ["181", "172"], ["181", "172"], ["21", "172"], ["112", "172"], ["121", "207"], ["21", "207"], ["154", "238"], ["21", "238"], ["240", "238"], ["240", "238"], ["105", "253"], ["169", "253"], ["185", "253"], ["21", "253"], ["255", "253"], ["255", "253"], ["259", "258"], ["259", "258"], ["217", "258"], ["21", "258"], ["157", "156"], ["157", "156"], ["130", "156"], ["21", "156"], ["181", "173"], ["181", "173"], ["241", "240"], ["241", "240"], ["215", "240"], ["21", "240"], ["105", "255"], ["21", "255"], ["267", "259"], ["267", "259"], ["148", "157"], ["21", "157"], ["146", "157"], ["21", "181"], ["232", "241"], ["21", "241"], ["230", "241"], ["21", "267"], ["169", "177"], ["21", "177"], ["253", "263"], ["21", "263"], ["177", "185"], ["21", "185"], ["21", "271"], ["253", "271"], ["32", "52"], ["32", "102"], ["32", "38"], ["32", "283"], ["32", "93"], ["32", "36"], ["32", "88"], ["32", "48"], ["32", "41"], ["32", "55"], ["32", "96"], ["32", "98"], ["32", "284"], ["32", "43"], ["32", "286"], ["32", "32"], ["32", "99"], ["32", "46"], ["32", "105"], ["55", "68"], ["55", "74"], ["55", "80"], ["55", "61"], ["55", "86"], ["55", "66"], ["55", "72"], ["55", "55"], ["55", "73"], ["55", "77"], ["55", "81"], ["55", "85"], ["55", "69"], ["55", "58"], ["55", "82"], ["55", "78"], ["55", "62"], ["105", "230"], ["105", "120"], ["105", "146"], ["105", "114"], ["105", "215"], ["105", "209"], ["105", "206"], ["105", "112"], ["105", "134"], ["105", "138"], ["105", "208"], ["105", "148"], ["105", "202"], ["105", "201"], ["105", "108"], ["105", "116"], ["105", "122"], ["105", "200"], ["105", "123"], ["105", "217"], ["105", "117"], ["105", "227"], ["105", "222"], ["105", "115"], ["105", "132"], ["105", "232"], ["105", "198"], ["105", "121"], ["105", "207"], ["105", "212"], ["105", "130"], ["105", "166"], ["105", "143"], ["105", "126"], ["105", "105"], ["105", "203"], ["105", "250"], ["105", "219"], ["105", "168"], ["105", "169"], ["105", "253"], ["105", "255"], ["105", "252"], ["146", "154"], ["146", "146"], ["146", "150"], ["146", "148"], ["146", "153"], ["146", "157"], ["146", "156"], ["166", "192"], ["166", "194"], ["230", "230"], ["230", "240"], ["230", "238"], ["230", "237"], ["230", "241"], ["230", "232"], ["230", "234"], ["250", "278"], ["250", "280"], ["153", "162"], ["237", "246"], ["169", "188"], ["169", "181"], ["169", "174"], ["169", "182"], ["169", "180"], ["169", "177"], ["169", "172"], ["169", "185"], ["169", "173"], ["169", "183"], ["169", "175"], ["253", "258"], ["253", "268"], ["253", "274"], ["253", "260"], ["253", "269"], ["253", "261"], ["253", "259"], ["253", "267"], ["253", "263"], ["253", "271"], ["253", "266"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(CONTROL_STRUCTURE,while (scan.hasNextInt()),while (scan.hasNextInt()))<SUB>5</SUB>>", "33": "<(IDENTIFIER,scan,hasNextInt())<SUB>5</SUB>>", "35": "<(LOCAL,int n: int)<SUB>8</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>8</SUB>>", "39": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "41": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>9</SUB>>", "43": "<(nextInt,nextInt())<SUB>9</SUB>>", "45": "<(LOCAL,Point[] a: ANY)<SUB>11</SUB>>", "47": "<(IDENTIFIER,a,ANY a = new Point[n])<SUB>11</SUB>>", "49": "<(IDENTIFIER,n,new Point[n])<SUB>11</SUB>>", "51": "<(LOCAL,int i: int)<SUB>13</SUB>>", "53": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "55": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "57": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "59": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.assignment,a[i] = new Point())<SUB>15</SUB>>", "63": "<(IDENTIFIER,a,a[i] = new Point())<SUB>15</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "67": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "69": "<(&lt;init&gt;,new Point())<SUB>15</SUB>>", "71": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.fieldAccess,a[i].x)<SUB>16</SUB>>", "75": "<(IDENTIFIER,a,a[i].x = nextInt())<SUB>16</SUB>>", "77": "<(FIELD_IDENTIFIER,x,x)<SUB>16</SUB>>", "79": "<(IDENTIFIER,scan,nextInt())<SUB>16</SUB>>", "81": "<(&lt;operator&gt;.fieldAccess,a[i].y)<SUB>17</SUB>>", "83": "<(IDENTIFIER,a,a[i].y = nextInt())<SUB>17</SUB>>", "85": "<(FIELD_IDENTIFIER,y,y)<SUB>17</SUB>>", "87": "<(IDENTIFIER,scan,nextInt())<SUB>17</SUB>>", "89": "<(IDENTIFIER,Arrays,sort(a, cmp))<SUB>20</SUB>>", "91": "<(IDENTIFIER,cmp,sort(a, cmp))<SUB>20</SUB>>", "93": "<(&lt;operator&gt;.assignment,int rtn = 0)<SUB>22</SUB>>", "95": "<(LITERAL,0,int rtn = 0)<SUB>22</SUB>>", "96": "<(&lt;operator&gt;.assignment,ANY ans = new ArrayList&lt;Double&gt;())<SUB>24</SUB>>", "98": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Double&gt;())<SUB>24</SUB>>", "5": "<(IDENTIFIER,ans,new ArrayList&lt;Double&gt;())<SUB>24</SUB>>", "101": "<(LOCAL,int i: int)<SUB>26</SUB>>", "103": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "105": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "107": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "111": "<(LOCAL,double lb: double)<SUB>29</SUB>>", "113": "<(IDENTIFIER,lb,double lb = a[i].x - (a[i].y / 2.0) - k)<SUB>29</SUB>>", "115": "<(&lt;operator&gt;.subtraction,a[i].x - (a[i].y / 2.0))<SUB>29</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>29</SUB>>", "119": "<(IDENTIFIER,i,a[i].x - (a[i].y / 2.0))<SUB>29</SUB>>", "121": "<(&lt;operator&gt;.division,a[i].y / 2.0)<SUB>29</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>29</SUB>>", "125": "<(IDENTIFIER,i,a[i].y / 2.0)<SUB>29</SUB>>", "127": "<(LITERAL,2.0,a[i].y / 2.0)<SUB>29</SUB>>", "129": "<(LOCAL,double pos: double)<SUB>30</SUB>>", "131": "<(IDENTIFIER,pos,double pos = lb + (k / 2.0))<SUB>30</SUB>>", "133": "<(IDENTIFIER,lb,lb + (k / 2.0))<SUB>30</SUB>>", "135": "<(IDENTIFIER,k,k / 2.0)<SUB>30</SUB>>", "137": "<(LOCAL,boolean good: boolean)<SUB>31</SUB>>", "139": "<(IDENTIFIER,good,boolean good = true)<SUB>31</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; ans.size()); j++),for (int j = 0; Some(j &lt; ans.size()); j++))<SUB>33</SUB>>", "143": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>33</SUB>>", "145": "<(LITERAL,0,int j = 0)<SUB>33</SUB>>", "147": "<(IDENTIFIER,j,j &lt; ans.size())<SUB>33</SUB>>", "149": "<(IDENTIFIER,ans,size())<SUB>33</SUB>>", "151": "<(IDENTIFIER,j,j++)<SUB>33</SUB>>", "153": "<(&lt;operator&gt;.lessThan,Math.abs(ans.get(j) - pos) &lt; 0.0000001)<SUB>34</SUB>>", "155": "<(IDENTIFIER,Math,abs(ans.get(j) - pos))<SUB>34</SUB>>", "157": "<(get,get(j))<SUB>34</SUB>>", "159": "<(IDENTIFIER,j,get(j))<SUB>34</SUB>>", "161": "<(LITERAL,0.0000001,Math.abs(ans.get(j) - pos) &lt; 0.0000001)<SUB>34</SUB>>", "163": "<(IDENTIFIER,good,good = false)<SUB>35</SUB>>", "165": "<(CONTROL_STRUCTURE,if (good &amp;&amp; (i == 0 || a[i - 1].x + (a[i - 1].y / 2.0) &lt;= lb)),if (good &amp;&amp; (i == 0 || a[i - 1].x + (a[i - 1].y / 2.0) &lt;= lb)))<SUB>38</SUB>>", "167": "<(IDENTIFIER,good,good &amp;&amp; (i == 0 || a[i - 1].x + (a[i - 1].y / 2.0) &lt;= lb))<SUB>38</SUB>>", "169": "<(&lt;operator&gt;.equals,i == 0)<SUB>38</SUB>>", "171": "<(LITERAL,0,i == 0)<SUB>38</SUB>>", "173": "<(&lt;operator&gt;.addition,a[i - 1].x + (a[i - 1].y / 2.0))<SUB>38</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>38</SUB>>", "177": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>38</SUB>>", "179": "<(LITERAL,1,i - 1)<SUB>38</SUB>>", "181": "<(&lt;operator&gt;.division,a[i - 1].y / 2.0)<SUB>38</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>38</SUB>>", "185": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>38</SUB>>", "187": "<(LITERAL,1,i - 1)<SUB>38</SUB>>", "189": "<(LITERAL,2.0,a[i - 1].y / 2.0)<SUB>38</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "193": "<(IDENTIFIER,rtn,rtn++)<SUB>40</SUB>>", "195": "<(IDENTIFIER,ans,add(pos))<SUB>41</SUB>>", "197": "<(LOCAL,double rb: double)<SUB>44</SUB>>", "199": "<(IDENTIFIER,rb,double rb = a[i].x + (a[i].y / 2.0) + k)<SUB>44</SUB>>", "201": "<(&lt;operator&gt;.addition,a[i].x + (a[i].y / 2.0))<SUB>44</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>44</SUB>>", "205": "<(IDENTIFIER,i,a[i].x + (a[i].y / 2.0))<SUB>44</SUB>>", "207": "<(&lt;operator&gt;.division,a[i].y / 2.0)<SUB>44</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>44</SUB>>", "211": "<(IDENTIFIER,i,a[i].y / 2.0)<SUB>44</SUB>>", "213": "<(LITERAL,2.0,a[i].y / 2.0)<SUB>44</SUB>>", "215": "<(&lt;operator&gt;.assignment,pos = rb - (k / 2.0))<SUB>45</SUB>>", "217": "<(&lt;operator&gt;.subtraction,rb - (k / 2.0))<SUB>45</SUB>>", "219": "<(&lt;operator&gt;.division,k / 2.0)<SUB>45</SUB>>", "221": "<(LITERAL,2.0,k / 2.0)<SUB>45</SUB>>", "223": "<(IDENTIFIER,good,good = true)<SUB>46</SUB>>", "225": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; ans.size()); j++),for (int j = 0; Some(j &lt; ans.size()); j++))<SUB>48</SUB>>", "227": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>48</SUB>>", "229": "<(LITERAL,0,int j = 0)<SUB>48</SUB>>", "231": "<(IDENTIFIER,j,j &lt; ans.size())<SUB>48</SUB>>", "233": "<(IDENTIFIER,ans,size())<SUB>48</SUB>>", "235": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "237": "<(&lt;operator&gt;.lessThan,Math.abs(ans.get(j) - pos) &lt; 0.0000001)<SUB>49</SUB>>", "239": "<(IDENTIFIER,Math,abs(ans.get(j) - pos))<SUB>49</SUB>>", "241": "<(get,get(j))<SUB>49</SUB>>", "243": "<(IDENTIFIER,j,get(j))<SUB>49</SUB>>", "245": "<(LITERAL,0.0000001,Math.abs(ans.get(j) - pos) &lt; 0.0000001)<SUB>49</SUB>>", "247": "<(IDENTIFIER,good,good = false)<SUB>50</SUB>>", "249": "<(CONTROL_STRUCTURE,if (good &amp;&amp; (i == n - 1 || a[i + 1].x - (a[i + 1].y / 2.0) &gt;= rb)),if (good &amp;&amp; (i == n - 1 || a[i + 1].x - (a[i + 1].y / 2.0) &gt;= rb)))<SUB>52</SUB>>", "251": "<(IDENTIFIER,good,good &amp;&amp; (i == n - 1 || a[i + 1].x - (a[i + 1].y / 2.0) &gt;= rb))<SUB>52</SUB>>", "253": "<(&lt;operator&gt;.equals,i == n - 1)<SUB>52</SUB>>", "255": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>52</SUB>>", "257": "<(LITERAL,1,n - 1)<SUB>52</SUB>>", "259": "<(&lt;operator&gt;.subtraction,a[i + 1].x - (a[i + 1].y / 2.0))<SUB>52</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,a[i + 1])<SUB>52</SUB>>", "263": "<(&lt;operator&gt;.addition,i + 1)<SUB>52</SUB>>", "265": "<(LITERAL,1,i + 1)<SUB>52</SUB>>", "267": "<(&lt;operator&gt;.division,a[i + 1].y / 2.0)<SUB>52</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,a[i + 1])<SUB>52</SUB>>", "271": "<(&lt;operator&gt;.addition,i + 1)<SUB>52</SUB>>", "273": "<(LITERAL,1,i + 1)<SUB>52</SUB>>", "275": "<(LITERAL,2.0,a[i + 1].y / 2.0)<SUB>52</SUB>>", "277": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>>", "279": "<(IDENTIFIER,rtn,rtn++)<SUB>54</SUB>>", "281": "<(IDENTIFIER,ans,add(pos))<SUB>55</SUB>>", "283": "<(println,System.out.println(rtn))<SUB>59</SUB>>", "285": "<(IDENTIFIER,System,System.out.println(rtn))<SUB>59</SUB>>", "287": "<(IDENTIFIER,rtn,System.out.println(rtn))<SUB>59</SUB>>", "289": "<(MODIFIER,STATIC)>"}}