{"edges": [["19", "21"], ["19", "253"], ["19", "254"], ["19", "255"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "45"], ["21", "83"], ["21", "84"], ["21", "89"], ["21", "90"], ["21", "95"], ["21", "198"], ["21", "199"], ["21", "202"], ["21", "246"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "63"], ["55", "64"], ["55", "70"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "62"], ["60", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["106", "107"], ["106", "108"], ["106", "111"], ["106", "114"], ["106", "116"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "127"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "135"], ["127", "143"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["143", "144"], ["144", "145"], ["144", "158"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "191"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "171"], ["163", "173"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "190"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "197"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "210"], ["202", "212"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["213", "214"], ["213", "215"], ["213", "218"], ["213", "221"], ["213", "223"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["224", "225"], ["224", "238"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["231", "232"], ["231", "237"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["238", "239"], ["239", "240"], ["239", "241"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["84", "92"], ["90", "97"], ["199", "204"], ["246", "255"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "50"], ["50", "60"], ["50", "86"], ["53", "50"], ["86", "84"], ["92", "90"], ["97", "100"], ["100", "108"], ["100", "199"], ["103", "100"], ["204", "207"], ["207", "215"], ["207", "249"], ["210", "207"], ["247", "250"], ["250", "246"], ["28", "26"], ["57", "67"], ["64", "72"], ["70", "53"], ["249", "247"], ["59", "57"], ["66", "64"], ["71", "78"], ["76", "70"], ["108", "111"], ["111", "123"], ["111", "103"], ["114", "111"], ["215", "218"], ["218", "227"], ["218", "210"], ["221", "218"], ["60", "59"], ["67", "66"], ["72", "71"], ["77", "76"], ["118", "130"], ["78", "77"], ["120", "118"], ["128", "138"], ["128", "148"], ["225", "242"], ["225", "221"], ["121", "120"], ["129", "128"], ["136", "114"], ["226", "225"], ["226", "234"], ["231", "225"], ["239", "221"], ["123", "121"], ["130", "129"], ["137", "136"], ["145", "160"], ["145", "114"], ["227", "226"], ["232", "231"], ["241", "239"], ["138", "137"], ["146", "145"], ["146", "154"], ["153", "145"], ["160", "165"], ["191", "114"], ["234", "232"], ["242", "241"], ["147", "146"], ["154", "153"], ["165", "168"], ["168", "176"], ["168", "193"], ["171", "168"], ["192", "191"], ["148", "147"], ["193", "192"], ["175", "187"], ["175", "171"], ["180", "171"], ["176", "175"], ["182", "180"], ["183", "182"], ["185", "183"], ["187", "185"], ["19", "24"], ["20", "255"], ["22", "255"], ["25", "255"], ["25", "255"], ["30", "255"], ["37", "255"], ["35", "255"], ["35", "255"], ["40", "255"], ["40", "255"], ["40", "255"], ["47", "255"], ["50", "255"], ["50", "255"], ["50", "255"], ["84", "255"], ["84", "255"], ["90", "255"], ["92", "255"], ["90", "255"], ["90", "255"], ["97", "255"], ["199", "255"], ["204", "255"], ["207", "255"], ["207", "255"], ["207", "255"], ["246", "255"], ["250", "255"], ["246", "255"], ["246", "255"], ["215", "255"], ["218", "255"], ["218", "255"], ["218", "255"], ["210", "255"], ["227", "255"], ["226", "255"], ["225", "255"], ["234", "255"], ["225", "255"], ["225", "255"], ["239", "255"], ["239", "255"], ["221", "255"], ["108", "255"], ["111", "255"], ["111", "255"], ["111", "255"], ["103", "255"], ["121", "255"], ["120", "255"], ["118", "255"], ["118", "255"], ["130", "255"], ["129", "255"], ["128", "255"], ["128", "255"], ["128", "255"], ["148", "255"], ["147", "255"], ["146", "255"], ["146", "255"], ["145", "255"], ["154", "255"], ["153", "255"], ["145", "255"], ["145", "255"], ["160", "255"], ["165", "255"], ["168", "255"], ["168", "255"], ["191", "255"], ["191", "255"], ["191", "255"], ["185", "255"], ["180", "255"], ["180", "255"], ["171", "255"], ["136", "255"], ["136", "255"], ["114", "255"], ["57", "255"], ["57", "255"], ["64", "255"], ["67", "255"], ["66", "255"], ["64", "255"], ["64", "255"], ["70", "255"], ["76", "255"], ["70", "255"], ["70", "255"], ["53", "255"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["86", "84"], ["86", "84"], ["92", "90"], ["92", "90"], ["19", "199"], ["22", "25"], ["19", "25"], ["19", "47"], ["19", "97"], ["19", "204"], ["250", "246"], ["250", "246"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["47", "50"], ["53", "50"], ["19", "50"], ["35", "50"], ["50", "53"], ["19", "53"], ["59", "57"], ["59", "57"], ["66", "64"], ["66", "64"], ["76", "70"], ["19", "70"], ["19", "86"], ["42", "86"], ["84", "92"], ["19", "92"], ["86", "92"], ["97", "100"], ["103", "100"], ["19", "100"], ["92", "100"], ["100", "103"], ["130", "103"], ["148", "103"], ["154", "103"], ["185", "103"], ["19", "103"], ["204", "207"], ["210", "207"], ["19", "207"], ["100", "207"], ["207", "210"], ["227", "210"], ["234", "210"], ["19", "210"], ["199", "250"], ["239", "250"], ["19", "250"], ["19", "108"], ["19", "215"], ["60", "59"], ["19", "59"], ["67", "66"], ["19", "66"], ["19", "76"], ["108", "111"], ["114", "111"], ["19", "111"], ["92", "111"], ["168", "111"], ["123", "114"], ["153", "114"], ["187", "114"], ["19", "114"], ["120", "118"], ["120", "118"], ["215", "218"], ["221", "218"], ["19", "218"], ["92", "218"], ["111", "218"], ["218", "221"], ["19", "221"], ["37", "60"], ["67", "60"], ["19", "60"], ["60", "67"], ["19", "67"], ["121", "120"], ["121", "120"], ["19", "120"], ["129", "128"], ["129", "128"], ["118", "128"], ["19", "128"], ["19", "136"], ["226", "225"], ["226", "225"], ["191", "239"], ["136", "239"], ["100", "121"], ["130", "121"], ["148", "121"], ["154", "121"], ["185", "121"], ["19", "121"], ["123", "121"], ["123", "121"], ["130", "129"], ["130", "129"], ["19", "129"], ["227", "226"], ["227", "226"], ["19", "226"], ["199", "239"], ["19", "239"], ["19", "123"], ["111", "123"], ["148", "130"], ["19", "130"], ["121", "130"], ["146", "145"], ["146", "145"], ["153", "145"], ["153", "145"], ["19", "160"], ["160", "191"], ["180", "191"], ["19", "191"], ["130", "227"], ["148", "227"], ["19", "227"], ["207", "227"], ["234", "227"], ["147", "146"], ["147", "146"], ["128", "146"], ["19", "146"], ["154", "153"], ["154", "153"], ["123", "153"], ["19", "153"], ["19", "165"], ["154", "234"], ["19", "234"], ["227", "234"], ["148", "147"], ["148", "147"], ["19", "147"], ["19", "154"], ["148", "154"], ["165", "168"], ["171", "168"], ["19", "168"], ["111", "168"], ["168", "171"], ["19", "171"], ["130", "148"], ["19", "148"], ["130", "148"], ["160", "180"], ["19", "180"], ["148", "185"], ["154", "185"], ["19", "185"], ["187", "185"], ["187", "185"], ["19", "187"], ["123", "187"], ["153", "187"], ["50", "60"], ["50", "77"], ["50", "64"], ["50", "57"], ["50", "67"], ["50", "76"], ["50", "50"], ["50", "59"], ["50", "70"], ["50", "66"], ["50", "72"], ["50", "71"], ["50", "53"], ["50", "78"], ["100", "103"], ["100", "100"], ["100", "108"], ["100", "111"], ["207", "215"], ["207", "207"], ["207", "210"], ["207", "218"], ["111", "120"], ["111", "128"], ["111", "114"], ["111", "121"], ["111", "129"], ["111", "130"], ["111", "118"], ["111", "111"], ["111", "123"], ["218", "225"], ["218", "226"], ["218", "221"], ["218", "227"], ["218", "218"], ["128", "136"], ["128", "145"], ["128", "146"], ["128", "138"], ["128", "148"], ["128", "137"], ["128", "147"], ["225", "242"], ["225", "239"], ["225", "241"], ["226", "232"], ["226", "231"], ["226", "234"], ["145", "192"], ["145", "168"], ["145", "191"], ["145", "160"], ["145", "193"], ["145", "165"], ["146", "154"], ["146", "153"], ["168", "168"], ["168", "171"], ["168", "176"], ["168", "175"], ["175", "185"], ["175", "187"], ["175", "182"], ["175", "180"], ["175", "183"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scan,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,boolean[][] graph: boolean[][])<SUB>5</SUB>>", "41": "<(IDENTIFIER,graph,boolean[][] graph = new boolean[n][n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; m)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.assignment,int from = scan.nextInt() - 1)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.subtraction,scan.nextInt() - 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "63": "<(LOCAL,int to: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,to,int to = scan.nextInt() - 1)<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(LITERAL,1,scan.nextInt() - 1)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,graph[from][to])<SUB>10</SUB>>", "73": "<(IDENTIFIER,graph,graph[from][to] = graph[to][from] = true)<SUB>10</SUB>>", "75": "<(IDENTIFIER,to,graph[from][to] = graph[to][from] = true)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,graph[to][from])<SUB>10</SUB>>", "79": "<(IDENTIFIER,graph,graph[to][from] = true)<SUB>10</SUB>>", "81": "<(IDENTIFIER,from,graph[to][from] = true)<SUB>10</SUB>>", "83": "<(LOCAL,int max: int)<SUB>13</SUB>>", "85": "<(IDENTIFIER,max,int max = 1 &lt;&lt; n)<SUB>13</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "89": "<(LOCAL,long[][] dp: long[][])<SUB>14</SUB>>", "91": "<(IDENTIFIER,dp,long[][] dp = new long[max][n])<SUB>14</SUB>>", "93": "<(IDENTIFIER,max,new long[max][n])<SUB>14</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; max); mask++),for (int mask = 1; Some(mask &lt; max); mask++))<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>16</SUB>>", "99": "<(LITERAL,1,int mask = 1)<SUB>16</SUB>>", "101": "<(IDENTIFIER,mask,mask &lt; max)<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>16</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "107": "<(LOCAL,int i: int)<SUB>17</SUB>>", "109": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "117": "<(LOCAL,boolean existI: boolean)<SUB>18</SUB>>", "119": "<(IDENTIFIER,existI,boolean existI = (mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; i))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>18</SUB>>", "127": "<(CONTROL_STRUCTURE,if (Integer.bitCount(mask) == 1 &amp;&amp; existI),if (Integer.bitCount(mask) == 1 &amp;&amp; existI))<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.equals,Integer.bitCount(mask) == 1)<SUB>19</SUB>>", "131": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>19</SUB>>", "133": "<(LITERAL,1,Integer.bitCount(mask) == 1)<SUB>19</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>20</SUB>>", "139": "<(IDENTIFIER,dp,dp[mask][i] = 1)<SUB>20</SUB>>", "141": "<(IDENTIFIER,i,dp[mask][i] = 1)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,else,else)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt; 1 &amp;&amp; existI &amp;&amp; first(mask) != i)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,Integer.bitCount(mask) &gt; 1)<SUB>21</SUB>>", "149": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>21</SUB>>", "151": "<(LITERAL,1,Integer.bitCount(mask) &gt; 1)<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.notEquals,first(mask) != i)<SUB>21</SUB>>", "155": "<(IDENTIFIER,this,first(mask))<SUB>21</SUB>>", "157": "<(IDENTIFIER,i,first(mask) != i)<SUB>21</SUB>>", "159": "<(LOCAL,long sum: long)<SUB>22</SUB>>", "161": "<(IDENTIFIER,sum,long sum = 0)<SUB>22</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>23</SUB>>", "165": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "167": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "169": "<(IDENTIFIER,j,j &lt; n)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,graph[i][j])<SUB>24</SUB>>", "177": "<(IDENTIFIER,graph,if (graph[i][j]))<SUB>24</SUB>>", "179": "<(IDENTIFIER,j,if (graph[i][j]))<SUB>24</SUB>>", "181": "<(IDENTIFIER,sum,sum += dp[mask ^ (1 &lt;&lt; i)][j])<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; i)])<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; i))<SUB>24</SUB>>", "187": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>24</SUB>>", "189": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.assignment,dp[mask][i] = sum)<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>26</SUB>>", "195": "<(IDENTIFIER,mask,dp[mask][i] = sum)<SUB>26</SUB>>", "197": "<(IDENTIFIER,sum,dp[mask][i] = sum)<SUB>26</SUB>>", "199": "<(&lt;operator&gt;.assignment,long countCycles = 0)<SUB>31</SUB>>", "201": "<(LITERAL,0,long countCycles = 0)<SUB>31</SUB>>", "203": "<(LOCAL,int mask: int)<SUB>32</SUB>>", "205": "<(IDENTIFIER,mask,int mask = 7)<SUB>32</SUB>>", "207": "<(&lt;operator&gt;.lessThan,mask &lt; max)<SUB>32</SUB>>", "209": "<(IDENTIFIER,max,mask &lt; max)<SUB>32</SUB>>", "211": "<(IDENTIFIER,mask,mask++)<SUB>32</SUB>>", "213": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>33</SUB>>", "215": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "217": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "219": "<(IDENTIFIER,i,i &lt; n)<SUB>33</SUB>>", "221": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "225": "<(&lt;operator&gt;.logicalAnd,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[first(mask)][i])<SUB>34</SUB>>", "227": "<(bitCount,Integer.bitCount(mask))<SUB>34</SUB>>", "229": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,graph[first(mask)][i])<SUB>34</SUB>>", "233": "<(IDENTIFIER,graph,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[first(mask)][i])<SUB>34</SUB>>", "235": "<(IDENTIFIER,this,first(mask))<SUB>34</SUB>>", "237": "<(IDENTIFIER,i,Integer.bitCount(mask) &gt;= 3 &amp;&amp; graph[first(mask)][i])<SUB>34</SUB>>", "239": "<(&lt;operator&gt;.assignmentPlus,countCycles += dp[mask][i])<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>35</SUB>>", "243": "<(IDENTIFIER,dp,countCycles += dp[mask][i])<SUB>35</SUB>>", "245": "<(IDENTIFIER,i,countCycles += dp[mask][i])<SUB>35</SUB>>", "247": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>39</SUB>>", "249": "<(FIELD_IDENTIFIER,out,out)<SUB>39</SUB>>", "251": "<(IDENTIFIER,countCycles,countCycles / 2)<SUB>39</SUB>>", "253": "<(MODIFIER,PUBLIC)>", "255": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}