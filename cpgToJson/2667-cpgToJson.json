{"edges": [["21", "22"], ["21", "23"], ["21", "174"], ["21", "175"], ["21", "176"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "49"], ["23", "50"], ["23", "56"], ["23", "57"], ["23", "61"], ["23", "81"], ["23", "84"], ["23", "85"], ["23", "89"], ["23", "90"], ["23", "93"], ["23", "94"], ["23", "97"], ["23", "98"], ["23", "101"], ["23", "169"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "55"], ["53", "54"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["106", "107"], ["106", "114"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "123"], ["114", "124"], ["114", "129"], ["114", "131"], ["114", "166"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "122"], ["120", "121"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "148"], ["139", "164"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "147"], ["145", "146"], ["148", "149"], ["148", "156"], ["149", "150"], ["149", "155"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["164", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["24", "31"], ["27", "40"], ["38", "41"], ["41", "47"], ["43", "53"], ["50", "59"], ["57", "63"], ["81", "87"], ["85", "90"], ["90", "94"], ["94", "98"], ["98", "102"], ["169", "176"], ["26", "24"], ["40", "38"], ["45", "43"], ["52", "50"], ["59", "57"], ["63", "66"], ["66", "73"], ["66", "81"], ["69", "66"], ["87", "85"], ["102", "108"], ["102", "172"], ["170", "169"], ["29", "36"], ["32", "27"], ["47", "45"], ["53", "52"], ["72", "69"], ["172", "170"], ["31", "29"], ["34", "32"], ["73", "78"], ["76", "72"], ["107", "102"], ["107", "116"], ["36", "34"], ["78", "76"], ["108", "107"], ["108", "111"], ["111", "107"], ["124", "129"], ["129", "133"], ["166", "108"], ["116", "120"], ["116", "126"], ["126", "124"], ["132", "141"], ["132", "166"], ["120", "108"], ["133", "132"], ["133", "136"], ["136", "132"], ["164", "133"], ["141", "145"], ["141", "151"], ["149", "158"], ["149", "164"], ["145", "133"], ["150", "149"], ["157", "162"], ["162", "164"], ["151", "150"], ["158", "157"], ["21", "26"], ["22", "176"], ["24", "176"], ["29", "176"], ["32", "176"], ["32", "176"], ["32", "176"], ["27", "176"], ["38", "176"], ["41", "176"], ["41", "176"], ["45", "176"], ["43", "176"], ["43", "176"], ["50", "176"], ["53", "176"], ["52", "176"], ["50", "176"], ["50", "176"], ["57", "176"], ["57", "176"], ["63", "176"], ["66", "176"], ["66", "176"], ["81", "176"], ["81", "176"], ["85", "176"], ["85", "176"], ["85", "176"], ["90", "176"], ["94", "176"], ["98", "176"], ["98", "176"], ["102", "176"], ["102", "176"], ["102", "176"], ["169", "176"], ["169", "176"], ["169", "176"], ["108", "176"], ["107", "176"], ["107", "176"], ["124", "176"], ["124", "176"], ["124", "176"], ["129", "176"], ["166", "176"], ["150", "176"], ["150", "176"], ["149", "176"], ["149", "176"], ["157", "176"], ["157", "176"], ["162", "176"], ["164", "176"], ["145", "176"], ["120", "176"], ["72", "176"], ["76", "176"], ["76", "176"], ["72", "176"], ["72", "176"], ["69", "176"], ["81", "176"], ["21", "22"], ["21", "24"], ["21", "38"], ["45", "43"], ["45", "43"], ["52", "50"], ["52", "50"], ["59", "57"], ["87", "85"], ["21", "90"], ["21", "94"], ["21", "98"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "63"], ["21", "81"], ["57", "81"], ["72", "81"], ["90", "169"], ["129", "169"], ["21", "169"], ["21", "29"], ["21", "37"], ["21", "45"], ["47", "45"], ["53", "52"], ["21", "52"], ["43", "59"], ["21", "59"], ["63", "66"], ["69", "66"], ["21", "66"], ["59", "66"], ["66", "69"], ["21", "69"], ["76", "72"], ["76", "72"], ["66", "87"], ["21", "87"], ["94", "102"], ["111", "102"], ["136", "102"], ["162", "102"], ["21", "102"], ["87", "102"], ["108", "102"], ["111", "102"], ["29", "32"], ["21", "32"], ["27", "47"], ["21", "47"], ["47", "53"], ["21", "53"], ["45", "76"], ["21", "76"], ["50", "76"], ["108", "107"], ["108", "107"], ["111", "107"], ["111", "107"], ["102", "107"], ["132", "107"], ["81", "124"], ["150", "124"], ["21", "166"], ["98", "108"], ["166", "108"], ["120", "108"], ["21", "108"], ["102", "108"], ["111", "108"], ["133", "108"], ["136", "108"], ["102", "111"], ["136", "111"], ["162", "111"], ["21", "111"], ["108", "111"], ["90", "129"], ["21", "129"], ["133", "132"], ["133", "132"], ["136", "132"], ["136", "132"], ["107", "132"], ["108", "120"], ["21", "120"], ["108", "133"], ["164", "133"], ["145", "133"], ["21", "133"], ["108", "133"], ["111", "133"], ["136", "133"], ["102", "136"], ["111", "136"], ["162", "136"], ["21", "136"], ["133", "136"], ["133", "164"], ["21", "164"], ["150", "149"], ["150", "149"], ["21", "149"], ["21", "157"], ["133", "145"], ["21", "145"], ["81", "150"], ["124", "150"], ["21", "150"], ["102", "162"], ["111", "162"], ["136", "162"], ["21", "162"], ["66", "73"], ["66", "66"], ["66", "72"], ["66", "69"], ["66", "76"], ["66", "78"], ["102", "107"], ["102", "102"], ["102", "108"], ["107", "107"], ["107", "116"], ["107", "108"], ["108", "111"], ["116", "120"], ["116", "166"], ["116", "132"], ["116", "129"], ["116", "126"], ["116", "124"], ["116", "133"], ["132", "141"], ["132", "132"], ["132", "133"], ["133", "136"], ["141", "145"], ["141", "149"], ["141", "150"], ["141", "151"], ["141", "164"], ["149", "162"], ["149", "157"], ["149", "158"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>5</SUB>>", "45": "<(parseInt,parseInt(br.readLine()))<SUB>5</SUB>>", "47": "<(readLine,readLine())<SUB>5</SUB>>", "49": "<(LOCAL,String[] s: java.lang.String[])<SUB>6</SUB>>", "51": "<(IDENTIFIER,s,String[] s = split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(readLine,readLine())<SUB>6</SUB>>", "55": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[n])>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "75": "<(IDENTIFIER,i,arr[i] = Integer.parseInt(s[i]))<SUB>9</SUB>>", "77": "<(IDENTIFIER,Integer,Integer.parseInt(s[i]))<SUB>9</SUB>>", "79": "<(IDENTIFIER,s,Integer.parseInt(s[i]))<SUB>9</SUB>>", "81": "<(sort,sort(arr))<SUB>11</SUB>>", "83": "<(IDENTIFIER,arr,sort(arr))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,boolean[] vis = new boolean[n])<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.alloc,new boolean[n])>", "89": "<(LOCAL,int nColours: int)<SUB>13</SUB>>", "91": "<(IDENTIFIER,nColours,int nColours = 0)<SUB>13</SUB>>", "93": "<(LOCAL,int nVis: int)<SUB>14</SUB>>", "95": "<(IDENTIFIER,nVis,int nVis = 0)<SUB>14</SUB>>", "97": "<(LOCAL,int index: int)<SUB>15</SUB>>", "99": "<(IDENTIFIER,index,int index = 0)<SUB>15</SUB>>", "101": "<(CONTROL_STRUCTURE,while (nVis &lt; n),while (nVis &lt; n))<SUB>16</SUB>>", "103": "<(IDENTIFIER,nVis,nVis &lt; n)<SUB>16</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.logicalAnd,index &lt; n &amp;&amp; nVis &lt; n)<SUB>17</SUB>>", "109": "<(IDENTIFIER,index,index &lt; n)<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.lessThan,nVis &lt; n)<SUB>17</SUB>>", "113": "<(IDENTIFIER,n,nVis &lt; n)<SUB>17</SUB>>", "115": "<(CONTROL_STRUCTURE,if (vis[index]),if (vis[index]))<SUB>18</SUB>>", "117": "<(IDENTIFIER,vis,if (vis[index]))<SUB>18</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "121": "<(IDENTIFIER,index,index++)<SUB>19</SUB>>", "123": "<(LOCAL,int val: int)<SUB>22</SUB>>", "125": "<(IDENTIFIER,val,int val = arr[index])<SUB>22</SUB>>", "127": "<(IDENTIFIER,arr,int val = arr[index])<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,nColours++)<SUB>23</SUB>>", "131": "<(CONTROL_STRUCTURE,while (index &lt; n &amp;&amp; nVis &lt; n),while (index &lt; n &amp;&amp; nVis &lt; n))<SUB>24</SUB>>", "133": "<(&lt;operator&gt;.lessThan,index &lt; n)<SUB>24</SUB>>", "135": "<(IDENTIFIER,n,index &lt; n)<SUB>24</SUB>>", "137": "<(IDENTIFIER,nVis,nVis &lt; n)<SUB>24</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,vis[index])<SUB>25</SUB>>", "143": "<(IDENTIFIER,index,if (vis[index]))<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,index++)<SUB>26</SUB>>", "147": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.equals,arr[index] % val == 0)<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,arr[index])<SUB>29</SUB>>", "153": "<(IDENTIFIER,index,arr[index] % val)<SUB>29</SUB>>", "155": "<(LITERAL,0,arr[index] % val == 0)<SUB>29</SUB>>", "157": "<(&lt;operator&gt;.assignment,vis[index] = true)<SUB>30</SUB>>", "159": "<(IDENTIFIER,vis,vis[index] = true)<SUB>30</SUB>>", "161": "<(LITERAL,true,vis[index] = true)<SUB>30</SUB>>", "163": "<(IDENTIFIER,nVis,nVis++)<SUB>31</SUB>>", "165": "<(IDENTIFIER,index,index++)<SUB>33</SUB>>", "167": "<(IDENTIFIER,index,index = 0)<SUB>35</SUB>>", "169": "<(println,System.out.println(nColours))<SUB>38</SUB>>", "171": "<(IDENTIFIER,System,System.out.println(nColours))<SUB>38</SUB>>", "173": "<(IDENTIFIER,nColours,System.out.println(nColours))<SUB>38</SUB>>", "175": "<(MODIFIER,STATIC)>"}}