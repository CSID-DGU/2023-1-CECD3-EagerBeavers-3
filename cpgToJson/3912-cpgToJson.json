{"edges": [["41", "43"], ["41", "305"], ["41", "306"], ["41", "307"], ["43", "4"], ["43", "44"], ["43", "47"], ["43", "6"], ["43", "48"], ["43", "51"], ["43", "8"], ["43", "52"], ["43", "55"], ["43", "59"], ["43", "60"], ["43", "63"], ["43", "67"], ["43", "68"], ["43", "75"], ["43", "76"], ["43", "77"], ["43", "78"], ["43", "79"], ["43", "80"], ["43", "81"], ["43", "82"], ["43", "83"], ["43", "84"], ["43", "85"], ["43", "86"], ["43", "87"], ["43", "88"], ["43", "89"], ["43", "90"], ["43", "91"], ["43", "92"], ["43", "93"], ["43", "94"], ["43", "95"], ["43", "96"], ["43", "97"], ["43", "98"], ["43", "99"], ["43", "10"], ["43", "100"], ["43", "103"], ["43", "12"], ["43", "104"], ["43", "107"], ["43", "14"], ["43", "108"], ["43", "111"], ["43", "16"], ["43", "112"], ["43", "115"], ["43", "18"], ["43", "116"], ["43", "119"], ["43", "20"], ["43", "122"], ["43", "125"], ["43", "22"], ["43", "126"], ["43", "129"], ["43", "24"], ["43", "130"], ["43", "133"], ["43", "26"], ["43", "134"], ["43", "137"], ["43", "138"], ["43", "301"], ["43", "303"], ["44", "45"], ["44", "46"], ["47", "3"], ["48", "49"], ["48", "50"], ["51", "5"], ["52", "53"], ["52", "54"], ["55", "7"], ["55", "56"], ["56", "57"], ["56", "58"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["100", "101"], ["100", "102"], ["103", "9"], ["104", "105"], ["104", "106"], ["107", "11"], ["108", "109"], ["108", "110"], ["111", "13"], ["112", "113"], ["112", "114"], ["115", "15"], ["116", "117"], ["116", "118"], ["119", "17"], ["119", "120"], ["120", "121"], ["122", "123"], ["122", "124"], ["125", "19"], ["126", "127"], ["126", "128"], ["129", "21"], ["130", "131"], ["130", "132"], ["133", "23"], ["134", "135"], ["134", "136"], ["137", "25"], ["138", "139"], ["138", "297"], ["139", "140"], ["140", "141"], ["140", "145"], ["141", "142"], ["141", "144"], ["142", "143"], ["145", "146"], ["145", "150"], ["145", "155"], ["145", "161"], ["145", "166"], ["145", "173"], ["145", "277"], ["145", "281"], ["145", "283"], ["145", "285"], ["145", "287"], ["145", "289"], ["145", "291"], ["145", "293"], ["145", "295"], ["146", "147"], ["146", "148"], ["148", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "170"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["173", "178"], ["173", "181"], ["173", "183"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["183", "184"], ["183", "188"], ["183", "196"], ["184", "185"], ["184", "186"], ["184", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "195"], ["193", "194"], ["196", "197"], ["196", "202"], ["196", "216"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "213"], ["209", "210"], ["209", "211"], ["211", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["217", "218"], ["217", "225"], ["217", "245"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "232"], ["225", "237"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "231"], ["229", "230"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "242"], ["238", "239"], ["238", "240"], ["240", "241"], ["242", "243"], ["242", "244"], ["245", "246"], ["246", "247"], ["246", "266"], ["246", "272"], ["247", "248"], ["247", "260"], ["248", "249"], ["248", "255"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "254"], ["252", "253"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "265"], ["263", "264"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "271"], ["269", "270"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["277", "280"], ["281", "282"], ["283", "284"], ["285", "286"], ["287", "288"], ["289", "290"], ["291", "292"], ["293", "294"], ["295", "296"], ["297", "298"], ["298", "299"], ["299", "300"], ["301", "302"], ["303", "304"], ["44", "47"], ["47", "50"], ["48", "51"], ["51", "54"], ["52", "58"], ["55", "60"], ["60", "65"], ["63", "72"], ["68", "102"], ["100", "103"], ["103", "106"], ["104", "107"], ["107", "110"], ["108", "111"], ["111", "114"], ["112", "115"], ["115", "118"], ["116", "120"], ["119", "124"], ["122", "125"], ["125", "128"], ["126", "129"], ["129", "132"], ["130", "133"], ["133", "136"], ["134", "137"], ["137", "142"], ["301", "303"], ["303", "307"], ["46", "44"], ["50", "48"], ["54", "52"], ["56", "55"], ["65", "63"], ["70", "68"], ["102", "100"], ["106", "104"], ["110", "108"], ["114", "112"], ["118", "116"], ["120", "119"], ["124", "122"], ["128", "126"], ["132", "130"], ["136", "134"], ["58", "56"], ["71", "70"], ["72", "71"], ["141", "299"], ["141", "148"], ["141", "301"], ["299", "301"], ["142", "141"], ["146", "152"], ["150", "159"], ["155", "163"], ["161", "167"], ["166", "175"], ["277", "281"], ["281", "283"], ["283", "285"], ["285", "287"], ["287", "289"], ["289", "291"], ["291", "293"], ["293", "295"], ["295", "142"], ["148", "146"], ["152", "150"], ["157", "155"], ["163", "161"], ["167", "170"], ["170", "166"], ["175", "178"], ["178", "184"], ["178", "277"], ["181", "178"], ["158", "157"], ["184", "193"], ["188", "198"], ["159", "158"], ["190", "188"], ["197", "205"], ["197", "219"], ["192", "190"], ["198", "197"], ["203", "211"], ["208", "181"], ["193", "192"], ["205", "203"], ["209", "213"], ["213", "208"], ["218", "229"], ["218", "252"], ["211", "209"], ["219", "222"], ["222", "218"], ["226", "234"], ["232", "240"], ["237", "181"], ["228", "226"], ["234", "232"], ["238", "242"], ["242", "237"], ["266", "274"], ["272", "181"], ["229", "228"], ["240", "238"], ["248", "263"], ["248", "269"], ["260", "252"], ["268", "266"], ["274", "272"], ["249", "256"], ["255", "248"], ["262", "260"], ["269", "268"], ["251", "249"], ["256", "255"], ["263", "262"], ["252", "251"], ["41", "46"], ["42", "307"], ["44", "307"], ["47", "307"], ["48", "307"], ["51", "307"], ["51", "307"], ["52", "307"], ["55", "307"], ["55", "307"], ["60", "307"], ["65", "307"], ["63", "307"], ["63", "307"], ["68", "307"], ["70", "307"], ["68", "307"], ["68", "307"], ["100", "307"], ["103", "307"], ["104", "307"], ["107", "307"], ["108", "307"], ["111", "307"], ["111", "307"], ["112", "307"], ["115", "307"], ["115", "307"], ["116", "307"], ["119", "307"], ["119", "307"], ["119", "307"], ["122", "307"], ["125", "307"], ["125", "307"], ["126", "307"], ["129", "307"], ["130", "307"], ["133", "307"], ["133", "307"], ["134", "307"], ["137", "307"], ["137", "307"], ["142", "307"], ["141", "307"], ["141", "307"], ["146", "307"], ["146", "307"], ["150", "307"], ["152", "307"], ["150", "307"], ["150", "307"], ["155", "307"], ["157", "307"], ["155", "307"], ["155", "307"], ["161", "307"], ["166", "307"], ["166", "307"], ["166", "307"], ["175", "307"], ["178", "307"], ["178", "307"], ["178", "307"], ["277", "307"], ["277", "307"], ["281", "307"], ["283", "307"], ["285", "307"], ["287", "307"], ["289", "307"], ["291", "307"], ["293", "307"], ["295", "307"], ["295", "307"], ["188", "307"], ["190", "307"], ["188", "307"], ["188", "307"], ["197", "307"], ["222", "307"], ["218", "307"], ["218", "307"], ["248", "307"], ["248", "307"], ["248", "307"], ["268", "307"], ["266", "307"], ["266", "307"], ["272", "307"], ["272", "307"], ["226", "307"], ["226", "307"], ["232", "307"], ["237", "307"], ["237", "307"], ["237", "307"], ["203", "307"], ["208", "307"], ["208", "307"], ["208", "307"], ["181", "307"], ["299", "307"], ["301", "307"], ["303", "307"], ["303", "307"], ["120", "307"], ["299", "307"], ["41", "42"], ["41", "44"], ["41", "48"], ["41", "52"], ["41", "60"], ["65", "63"], ["41", "68"], ["41", "100"], ["41", "104"], ["41", "108"], ["41", "112"], ["41", "116"], ["41", "122"], ["41", "126"], ["41", "130"], ["41", "134"], ["44", "47"], ["41", "47"], ["48", "51"], ["41", "51"], ["52", "55"], ["41", "55"], ["100", "103"], ["41", "103"], ["104", "107"], ["41", "107"], ["108", "111"], ["41", "111"], ["112", "115"], ["41", "115"], ["116", "119"], ["41", "119"], ["120", "119"], ["122", "125"], ["41", "125"], ["126", "129"], ["41", "129"], ["130", "133"], ["41", "133"], ["134", "137"], ["41", "137"], ["55", "301"], ["277", "301"], ["41", "301"], ["301", "303"], ["41", "303"], ["47", "65"], ["41", "65"], ["41", "70"], ["41", "120"], ["41", "298"], ["41", "71"], ["142", "141"], ["41", "141"], ["148", "146"], ["152", "150"], ["152", "150"], ["157", "155"], ["150", "166"], ["161", "166"], ["41", "299"], ["63", "142"], ["41", "142"], ["107", "161"], ["285", "161"], ["41", "161"], ["150", "161"], ["41", "175"], ["51", "277"], ["184", "277"], ["41", "277"], ["55", "277"], ["184", "277"], ["161", "277"], ["272", "277"], ["240", "277"], ["211", "277"], ["129", "281"], ["41", "281"], ["103", "283"], ["41", "283"], ["277", "285"], ["41", "285"], ["111", "287"], ["41", "287"], ["133", "289"], ["41", "289"], ["137", "291"], ["41", "291"], ["115", "293"], ["41", "293"], ["119", "295"], ["41", "295"], ["65", "148"], ["152", "148"], ["41", "148"], ["148", "152"], ["41", "152"], ["146", "152"], ["41", "157"], ["175", "178"], ["181", "178"], ["41", "178"], ["152", "178"], ["178", "181"], ["41", "181"], ["190", "188"], ["190", "188"], ["41", "158"], ["51", "184"], ["277", "184"], ["41", "184"], ["55", "184"], ["277", "184"], ["161", "184"], ["272", "184"], ["240", "184"], ["211", "184"], ["193", "190"], ["41", "190"], ["192", "190"], ["192", "190"], ["150", "197"], ["272", "197"], ["232", "197"], ["203", "197"], ["41", "197"], ["150", "208"], ["203", "208"], ["193", "192"], ["41", "192"], ["190", "203"], ["41", "203"], ["150", "203"], ["197", "203"], ["184", "193"], ["41", "193"], ["150", "218"], ["197", "218"], ["188", "218"], ["41", "218"], ["150", "237"], ["232", "237"], ["203", "211"], ["41", "211"], ["188", "222"], ["41", "222"], ["229", "226"], ["41", "226"], ["228", "226"], ["228", "226"], ["226", "232"], ["41", "232"], ["150", "232"], ["218", "232"], ["229", "228"], ["41", "228"], ["269", "266"], ["41", "266"], ["268", "266"], ["268", "266"], ["266", "272"], ["41", "272"], ["150", "272"], ["255", "272"], ["190", "229"], ["41", "229"], ["232", "240"], ["41", "240"], ["249", "248"], ["249", "248"], ["255", "248"], ["255", "248"], ["263", "260"], ["41", "260"], ["262", "260"], ["262", "260"], ["269", "268"], ["41", "268"], ["252", "249"], ["41", "249"], ["251", "249"], ["251", "249"], ["150", "255"], ["218", "255"], ["41", "255"], ["263", "262"], ["41", "262"], ["249", "269"], ["41", "269"], ["252", "251"], ["41", "251"], ["249", "263"], ["41", "263"], ["190", "252"], ["260", "252"], ["41", "252"], ["141", "167"], ["141", "146"], ["141", "161"], ["141", "163"], ["141", "178"], ["141", "150"], ["141", "283"], ["141", "291"], ["141", "170"], ["141", "148"], ["141", "281"], ["141", "285"], ["141", "289"], ["141", "293"], ["141", "152"], ["141", "155"], ["141", "295"], ["141", "158"], ["141", "299"], ["141", "277"], ["141", "141"], ["141", "287"], ["141", "166"], ["141", "142"], ["141", "157"], ["141", "159"], ["141", "175"], ["178", "188"], ["178", "192"], ["178", "178"], ["178", "197"], ["178", "198"], ["178", "181"], ["178", "190"], ["178", "184"], ["178", "193"], ["197", "209"], ["197", "213"], ["197", "208"], ["197", "205"], ["197", "211"], ["197", "203"], ["197", "222"], ["197", "218"], ["197", "219"], ["218", "240"], ["218", "272"], ["218", "232"], ["218", "226"], ["218", "256"], ["218", "228"], ["218", "255"], ["218", "242"], ["218", "238"], ["218", "268"], ["218", "249"], ["218", "252"], ["218", "274"], ["218", "237"], ["218", "251"], ["218", "234"], ["218", "229"], ["218", "248"], ["218", "269"], ["218", "266"], ["248", "256"], ["248", "262"], ["248", "255"], ["248", "249"], ["248", "252"], ["248", "260"], ["248", "251"], ["248", "263"], ["248", "248"]], "features": {"41": "<(METHOD,main)<SUB>1</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "44": "<(&lt;operator&gt;.assignment,ANY sc = new Reader())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.alloc,new Reader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Reader())<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY G = new Solution())<SUB>3</SUB>>", "50": "<(&lt;operator&gt;.alloc,new Solution())<SUB>3</SUB>>", "5": "<(IDENTIFIER,G,new Solution())<SUB>3</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY o = new PrintWriter(System.out))<SUB>4</SUB>>", "54": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "7": "<(IDENTIFIER,o,new PrintWriter(System.out))<SUB>4</SUB>>", "57": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "59": "<(LOCAL,int t: int)<SUB>5</SUB>>", "61": "<(IDENTIFIER,t,int t = 1)<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.assignment,t = nextInt())<SUB>5</SUB>>", "65": "<(nextInt,nextInt())<SUB>5</SUB>>", "67": "<(LOCAL,int mod: int)<SUB>6</SUB>>", "69": "<(IDENTIFIER,mod,int mod = (int) 1e9 + 7)<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.cast,(int) 1e9)<SUB>6</SUB>>", "73": "<(LITERAL,1e9,(int) 1e9)<SUB>6</SUB>>", "75": "<(LOCAL,int x: int)<SUB>7</SUB>>", "77": "<(LOCAL,int x1: int)<SUB>7</SUB>>", "79": "<(LOCAL,int y: int)<SUB>7</SUB>>", "81": "<(LOCAL,int y1: int)<SUB>7</SUB>>", "83": "<(LOCAL,int s: int)<SUB>7</SUB>>", "85": "<(LOCAL,int s1: int)<SUB>7</SUB>>", "87": "<(LOCAL,int n: int)<SUB>8</SUB>>", "89": "<(LOCAL,int[] a: int[])<SUB>8</SUB>>", "91": "<(LOCAL,int[] in: int[])<SUB>8</SUB>>", "93": "<(LOCAL,long k: long)<SUB>9</SUB>>", "95": "<(LOCAL,boolean[] v: boolean[])<SUB>9</SUB>>", "97": "<(LOCAL,boolean b2: boolean)<SUB>9</SUB>>", "99": "<(LOCAL,char[] c1: char[])<SUB>9</SUB>>", "100": "<(&lt;operator&gt;.assignment,ANY ll = new ArrayList&lt;&gt;())<SUB>11</SUB>>", "102": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>11</SUB>>", "9": "<(IDENTIFIER,ll,new ArrayList&lt;&gt;())<SUB>11</SUB>>", "104": "<(&lt;operator&gt;.assignment,ANY a1 = new ArrayList&lt;&gt;())<SUB>12</SUB>>", "106": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>12</SUB>>", "11": "<(IDENTIFIER,a1,new ArrayList&lt;&gt;())<SUB>12</SUB>>", "108": "<(&lt;operator&gt;.assignment,ANY a2 = new ArrayList&lt;&gt;())<SUB>13</SUB>>", "110": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>13</SUB>>", "13": "<(IDENTIFIER,a2,new ArrayList&lt;&gt;())<SUB>13</SUB>>", "112": "<(&lt;operator&gt;.assignment,ANY pq1 = new PriorityQueue&lt;&gt;())<SUB>14</SUB>>", "114": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;&gt;())<SUB>14</SUB>>", "15": "<(IDENTIFIER,pq1,new PriorityQueue&lt;&gt;())<SUB>14</SUB>>", "116": "<(&lt;operator&gt;.assignment,ANY pq2 = new PriorityQueue&lt;&gt;(Collections.reverseOrder()))<SUB>15</SUB>>", "118": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;&gt;(Collections.reverseOrder()))<SUB>15</SUB>>", "17": "<(IDENTIFIER,pq2,new PriorityQueue&lt;&gt;(Collections.reverseOrder()))<SUB>15</SUB>>", "121": "<(IDENTIFIER,Collections,reverseOrder())<SUB>15</SUB>>", "122": "<(&lt;operator&gt;.assignment,ANY dq = new ArrayDeque&lt;&gt;())<SUB>16</SUB>>", "124": "<(&lt;operator&gt;.alloc,new ArrayDeque&lt;&gt;())<SUB>16</SUB>>", "19": "<(IDENTIFIER,dq,new ArrayDeque&lt;&gt;())<SUB>16</SUB>>", "126": "<(&lt;operator&gt;.assignment,ANY h0 = new TreeSet&lt;&gt;())<SUB>17</SUB>>", "128": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;())<SUB>17</SUB>>", "21": "<(IDENTIFIER,h0,new TreeSet&lt;&gt;())<SUB>17</SUB>>", "130": "<(&lt;operator&gt;.assignment,ANY h1 = new TreeSet&lt;&gt;())<SUB>18</SUB>>", "132": "<(&lt;operator&gt;.alloc,new TreeSet&lt;&gt;())<SUB>18</SUB>>", "23": "<(IDENTIFIER,h1,new TreeSet&lt;&gt;())<SUB>18</SUB>>", "134": "<(&lt;operator&gt;.assignment,ANY h = new TreeMap&lt;&gt;())<SUB>19</SUB>>", "136": "<(&lt;operator&gt;.alloc,new TreeMap&lt;&gt;())<SUB>19</SUB>>", "25": "<(IDENTIFIER,h,new TreeMap&lt;&gt;())<SUB>19</SUB>>", "139": "<(BLOCK,try,try)<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>21</SUB>>", "143": "<(IDENTIFIER,t,t--)<SUB>21</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "147": "<(IDENTIFIER,n,n = nextInt())<SUB>23</SUB>>", "149": "<(IDENTIFIER,sc,nextInt())<SUB>23</SUB>>", "151": "<(IDENTIFIER,a,a = nextArr(n))<SUB>23</SUB>>", "153": "<(IDENTIFIER,sc,nextArr(n))<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.assignment,b = new int[(int) 1e4])<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.alloc,new int[(int) 1e4])>", "159": "<(TYPE_REF,int,int)<SUB>23</SUB>>", "161": "<(add,add(a[0]))<SUB>24</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,a[0])<SUB>24</SUB>>", "165": "<(LITERAL,0,add(a[0]))<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,b[1])<SUB>24</SUB>>", "169": "<(LITERAL,1,b[1] = a[0])<SUB>24</SUB>>", "171": "<(IDENTIFIER,a,b[1] = a[0])<SUB>24</SUB>>", "173": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>25</SUB>>", "177": "<(LITERAL,1,int i = 1)<SUB>25</SUB>>", "179": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "185": "<(IDENTIFIER,G,func(o, a1))<SUB>27</SUB>>", "187": "<(IDENTIFIER,a1,func(o, a1))<SUB>27</SUB>>", "189": "<(IDENTIFIER,x,x = get(a1.size() - 1))<SUB>28</SUB>>", "191": "<(IDENTIFIER,a1,get(a1.size() - 1))<SUB>28</SUB>>", "193": "<(size,size())<SUB>28</SUB>>", "195": "<(LITERAL,1,a1.size() - 1)<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.equals,a[i] == 1)<SUB>29</SUB>>", "199": "<(IDENTIFIER,a,a[i] == 1)<SUB>29</SUB>>", "201": "<(LITERAL,1,a[i] == 1)<SUB>29</SUB>>", "203": "<(add,add(a[i]))<SUB>31</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>31</SUB>>", "207": "<(IDENTIFIER,i,add(a[i]))<SUB>31</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,b[a1.size()])<SUB>32</SUB>>", "211": "<(size,size())<SUB>32</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>32</SUB>>", "215": "<(IDENTIFIER,i,b[a1.size()] = a[i])<SUB>32</SUB>>", "217": "<(CONTROL_STRUCTURE,if (a[i] == x + 1),if (a[i] == x + 1))<SUB>34</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>34</SUB>>", "221": "<(IDENTIFIER,i,a[i] == x + 1)<SUB>34</SUB>>", "223": "<(IDENTIFIER,x,x + 1)<SUB>34</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "227": "<(IDENTIFIER,a1,remove(a1.size() - 1))<SUB>36</SUB>>", "229": "<(size,size())<SUB>36</SUB>>", "231": "<(LITERAL,1,a1.size() - 1)<SUB>36</SUB>>", "233": "<(IDENTIFIER,a1,add(a[i]))<SUB>37</SUB>>", "235": "<(IDENTIFIER,a,add(a[i]))<SUB>37</SUB>>", "237": "<(&lt;operator&gt;.assignment,b[a1.size()] = a[i])<SUB>38</SUB>>", "239": "<(IDENTIFIER,b,b[a1.size()] = a[i])<SUB>38</SUB>>", "241": "<(IDENTIFIER,a1,size())<SUB>38</SUB>>", "243": "<(IDENTIFIER,a,b[a1.size()] = a[i])<SUB>38</SUB>>", "245": "<(CONTROL_STRUCTURE,else,else)<SUB>41</SUB>>", "247": "<(CONTROL_STRUCTURE,while (a1.get(a1.size() - 1) != a[i] - 1),while (a1.get(a1.size() - 1) != a[i] - 1))<SUB>42</SUB>>", "249": "<(get,get(a1.size() - 1))<SUB>42</SUB>>", "251": "<(&lt;operator&gt;.subtraction,a1.size() - 1)<SUB>42</SUB>>", "253": "<(IDENTIFIER,a1,size())<SUB>42</SUB>>", "255": "<(&lt;operator&gt;.subtraction,a[i] - 1)<SUB>42</SUB>>", "257": "<(IDENTIFIER,a,a[i] - 1)<SUB>42</SUB>>", "259": "<(LITERAL,1,a[i] - 1)<SUB>42</SUB>>", "261": "<(IDENTIFIER,a1,remove(a1.size() - 1))<SUB>43</SUB>>", "263": "<(size,size())<SUB>43</SUB>>", "265": "<(LITERAL,1,a1.size() - 1)<SUB>43</SUB>>", "267": "<(IDENTIFIER,a1,remove(a1.size() - 1))<SUB>44</SUB>>", "269": "<(size,size())<SUB>44</SUB>>", "271": "<(LITERAL,1,a1.size() - 1)<SUB>44</SUB>>", "273": "<(IDENTIFIER,a1,add(a[i]))<SUB>45</SUB>>", "275": "<(IDENTIFIER,a,add(a[i]))<SUB>45</SUB>>", "277": "<(func,func(o, a1))<SUB>48</SUB>>", "279": "<(IDENTIFIER,o,func(o, a1))<SUB>48</SUB>>", "281": "<(clear,clear())<SUB>56</SUB>>", "283": "<(clear,clear())<SUB>56</SUB>>", "285": "<(clear,clear())<SUB>56</SUB>>", "287": "<(clear,clear())<SUB>56</SUB>>", "289": "<(clear,clear())<SUB>56</SUB>>", "291": "<(clear,clear())<SUB>56</SUB>>", "293": "<(clear,clear())<SUB>56</SUB>>", "295": "<(clear,clear())<SUB>56</SUB>>", "297": "<(BLOCK,catch,catch)>", "299": "<(printStackTrace,e.printStackTrace())<SUB>61</SUB>>", "301": "<(flush,flush())<SUB>65</SUB>>", "303": "<(close,close())<SUB>66</SUB>>", "305": "<(MODIFIER,PUBLIC)>", "307": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}