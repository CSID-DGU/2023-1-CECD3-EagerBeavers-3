{"edges": [["19", "20"], ["19", "21"], ["19", "192"], ["19", "193"], ["19", "194"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "49"], ["21", "50"], ["21", "54"], ["21", "76"], ["21", "77"], ["21", "81"], ["21", "110"], ["21", "111"], ["21", "114"], ["21", "141"], ["21", "142"], ["21", "147"], ["21", "187"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["69", "75"], ["70", "71"], ["70", "72"], ["73", "74"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "93"], ["91", "100"], ["91", "105"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "132"], ["126", "127"], ["126", "131"], ["127", "128"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["134", "137"], ["137", "138"], ["138", "139"], ["138", "140"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["157", "168"], ["157", "179"], ["158", "159"], ["158", "167"], ["159", "160"], ["159", "166"], ["160", "161"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["170", "173"], ["173", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["181", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["22", "29"], ["25", "41"], ["37", "47"], ["44", "52"], ["50", "56"], ["77", "83"], ["111", "116"], ["142", "149"], ["187", "194"], ["24", "22"], ["39", "37"], ["46", "44"], ["52", "50"], ["56", "59"], ["59", "66"], ["59", "79"], ["62", "59"], ["79", "77"], ["83", "86"], ["86", "97"], ["86", "111"], ["89", "86"], ["116", "119"], ["119", "128"], ["119", "144"], ["122", "119"], ["144", "142"], ["149", "152"], ["152", "163"], ["152", "190"], ["155", "152"], ["188", "187"], ["27", "34"], ["30", "25"], ["41", "39"], ["47", "46"], ["65", "62"], ["93", "101"], ["100", "106"], ["105", "89"], ["168", "184"], ["179", "155"], ["190", "188"], ["29", "27"], ["32", "30"], ["66", "72"], ["95", "93"], ["101", "100"], ["106", "105"], ["126", "138"], ["126", "122"], ["132", "122"], ["159", "190"], ["159", "176"], ["170", "168"], ["181", "179"], ["34", "32"], ["70", "73"], ["73", "65"], ["97", "95"], ["127", "126"], ["134", "132"], ["160", "159"], ["173", "170"], ["184", "181"], ["72", "70"], ["128", "127"], ["137", "134"], ["161", "160"], ["174", "173"], ["138", "137"], ["163", "161"], ["176", "174"], ["19", "24"], ["20", "194"], ["22", "194"], ["27", "194"], ["30", "194"], ["30", "194"], ["30", "194"], ["25", "194"], ["37", "194"], ["37", "194"], ["44", "194"], ["47", "194"], ["46", "194"], ["44", "194"], ["44", "194"], ["50", "194"], ["50", "194"], ["50", "194"], ["77", "194"], ["77", "194"], ["77", "194"], ["111", "194"], ["119", "194"], ["144", "194"], ["142", "194"], ["142", "194"], ["149", "194"], ["152", "194"], ["152", "194"], ["152", "194"], ["160", "194"], ["159", "194"], ["159", "194"], ["173", "194"], ["170", "194"], ["168", "194"], ["168", "194"], ["181", "194"], ["184", "194"], ["181", "194"], ["179", "194"], ["179", "194"], ["155", "194"], ["187", "194"], ["187", "194"], ["187", "194"], ["127", "194"], ["126", "194"], ["126", "194"], ["134", "194"], ["137", "194"], ["134", "194"], ["132", "194"], ["132", "194"], ["122", "194"], ["95", "194"], ["93", "194"], ["93", "194"], ["100", "194"], ["100", "194"], ["105", "194"], ["105", "194"], ["105", "194"], ["89", "194"], ["65", "194"], ["70", "194"], ["73", "194"], ["73", "194"], ["65", "194"], ["62", "194"], ["39", "194"], ["95", "194"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["52", "50"], ["79", "77"], ["19", "111"], ["111", "142"], ["132", "142"], ["19", "142"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "56"], ["19", "83"], ["19", "116"], ["19", "149"], ["142", "187"], ["179", "187"], ["19", "187"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["47", "46"], ["19", "52"], ["56", "59"], ["62", "59"], ["19", "59"], ["59", "62"], ["19", "62"], ["70", "65"], ["73", "65"], ["19", "65"], ["37", "79"], ["19", "79"], ["83", "86"], ["89", "86"], ["19", "86"], ["79", "86"], ["100", "89"], ["19", "89"], ["95", "93"], ["95", "93"], ["93", "105"], ["19", "105"], ["116", "119"], ["122", "119"], ["19", "119"], ["119", "122"], ["19", "122"], ["111", "144"], ["132", "144"], ["19", "144"], ["149", "152"], ["155", "152"], ["19", "152"], ["86", "152"], ["184", "155"], ["19", "155"], ["170", "168"], ["170", "168"], ["170", "168"], ["181", "179"], ["181", "179"], ["181", "179"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["41", "47"], ["19", "47"], ["50", "100"], ["86", "100"], ["19", "100"], ["134", "132"], ["134", "132"], ["134", "132"], ["19", "70"], ["19", "75"], ["19", "95"], ["44", "95"], ["127", "126"], ["19", "126"], ["160", "159"], ["19", "159"], ["181", "170"], ["134", "170"], ["19", "170"], ["184", "170"], ["111", "170"], ["132", "170"], ["173", "170"], ["170", "181"], ["19", "181"], ["142", "181"], ["179", "181"], ["184", "181"], ["184", "181"], ["70", "73"], ["19", "73"], ["50", "127"], ["137", "127"], ["65", "127"], ["19", "134"], ["111", "134"], ["132", "134"], ["137", "134"], ["50", "160"], ["173", "160"], ["50", "173"], ["160", "173"], ["168", "184"], ["19", "184"], ["152", "184"], ["50", "137"], ["127", "137"], ["59", "73"], ["59", "66"], ["59", "72"], ["59", "65"], ["59", "59"], ["59", "70"], ["59", "62"], ["86", "89"], ["86", "95"], ["86", "106"], ["86", "97"], ["86", "93"], ["86", "101"], ["86", "105"], ["86", "100"], ["86", "86"], ["119", "122"], ["119", "128"], ["119", "119"], ["119", "126"], ["119", "127"], ["152", "160"], ["152", "161"], ["152", "163"], ["152", "159"], ["126", "132"], ["126", "134"], ["126", "138"], ["126", "137"], ["159", "179"], ["159", "168"], ["159", "170"], ["159", "176"], ["159", "181"], ["159", "184"], ["159", "173"], ["159", "152"], ["159", "174"], ["159", "155"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = parseInt(reader.readLine()))<SUB>4</SUB>>", "39": "<(parseInt,parseInt(reader.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(LOCAL,char[] ch: char[])<SUB>5</SUB>>", "45": "<(IDENTIFIER,ch,char[] ch = toCharArray())<SUB>5</SUB>>", "47": "<(readLine,readLine())<SUB>5</SUB>>", "49": "<(LOCAL,LinkedList&lt;Integer&gt;[] p: ANY)<SUB>7</SUB>>", "51": "<(IDENTIFIER,p,ANY p = new LinkedList[52])<SUB>7</SUB>>", "53": "<(LITERAL,52,new LinkedList[52])<SUB>7</SUB>>", "55": "<(LOCAL,int i: int)<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; 52)<SUB>9</SUB>>", "61": "<(LITERAL,52,i &lt; 52)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,p[i] = new LinkedList&lt;&gt;())<SUB>10</SUB>>", "67": "<(IDENTIFIER,p,p[i] = new LinkedList&lt;&gt;())<SUB>10</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "71": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "73": "<(&lt;init&gt;,new LinkedList&lt;&gt;())<SUB>10</SUB>>", "75": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "77": "<(&lt;operator&gt;.assignment,int[] fc = new int[n])<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.alloc,new int[n])>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.assignment,int cc = f(ch[i]))<SUB>16</SUB>>", "95": "<(f,f(ch[i]))<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,ch[i])<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,f(ch[i]))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,p[cc])<SUB>17</SUB>>", "103": "<(IDENTIFIER,cc,add(i))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.assignment,fc[i] = cc)<SUB>18</SUB>>", "107": "<(IDENTIFIER,fc,fc[i] = cc)<SUB>18</SUB>>", "109": "<(IDENTIFIER,cc,fc[i] = cc)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.assignment,int en = 0)<SUB>20</SUB>>", "113": "<(LITERAL,0,int en = 0)<SUB>20</SUB>>", "115": "<(LOCAL,int i: int)<SUB>21</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; 52)<SUB>21</SUB>>", "121": "<(LITERAL,52,i &lt; 52)<SUB>21</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,if (p[i].size() &gt; 0),if (p[i].size() &gt; 0))<SUB>22</SUB>>", "127": "<(size,size())<SUB>22</SUB>>", "129": "<(IDENTIFIER,p,size())<SUB>22</SUB>>", "131": "<(LITERAL,0,p[i].size() &gt; 0)<SUB>22</SUB>>", "133": "<(IDENTIFIER,en,en = max(en, p[i].poll()))<SUB>22</SUB>>", "135": "<(IDENTIFIER,Math,max(en, p[i].poll()))<SUB>22</SUB>>", "137": "<(poll,poll())<SUB>22</SUB>>", "139": "<(IDENTIFIER,p,poll())<SUB>22</SUB>>", "141": "<(LOCAL,int mx: int)<SUB>25</SUB>>", "143": "<(IDENTIFIER,mx,int mx = en + 1)<SUB>25</SUB>>", "145": "<(IDENTIFIER,en,en + 1)<SUB>25</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "151": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "153": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.equals,p[fc[i]].size() == 0)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,p[fc[i]])<SUB>28</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,fc[i])<SUB>28</SUB>>", "165": "<(IDENTIFIER,i,size())<SUB>28</SUB>>", "167": "<(CONTROL_STRUCTURE,break;,break;)<SUB>28</SUB>>", "169": "<(IDENTIFIER,en,en = max(en, p[fc[i]].poll()))<SUB>29</SUB>>", "171": "<(IDENTIFIER,Math,max(en, p[fc[i]].poll()))<SUB>29</SUB>>", "173": "<(poll,poll())<SUB>29</SUB>>", "175": "<(IDENTIFIER,p,poll())<SUB>29</SUB>>", "177": "<(IDENTIFIER,fc,poll())<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.assignment,mx = Math.min(mx, en - i))<SUB>30</SUB>>", "181": "<(min,Math.min(mx, en - i))<SUB>30</SUB>>", "183": "<(IDENTIFIER,mx,Math.min(mx, en - i))<SUB>30</SUB>>", "185": "<(IDENTIFIER,en,en - i)<SUB>30</SUB>>", "187": "<(println,System.out.println(mx))<SUB>33</SUB>>", "189": "<(IDENTIFIER,System,System.out.println(mx))<SUB>33</SUB>>", "191": "<(IDENTIFIER,mx,System.out.println(mx))<SUB>33</SUB>>", "193": "<(MODIFIER,STATIC)>"}}