{"edges": [["21", "23"], ["21", "283"], ["21", "284"], ["21", "285"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "57"], ["23", "61"], ["23", "65"], ["23", "74"], ["23", "111"], ["23", "112"], ["23", "116"], ["23", "135"], ["23", "136"], ["23", "145"], ["23", "249"], ["23", "250"], ["23", "253"], ["23", "278"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "98"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "133"], ["130", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["145", "150"], ["145", "153"], ["145", "155"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["155", "156"], ["155", "167"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["187", "193"], ["187", "194"], ["187", "216"], ["187", "227"], ["187", "234"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "215"], ["197", "198"], ["197", "209"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["209", "214"], ["211", "212"], ["211", "213"], ["216", "217"], ["216", "218"], ["218", "219"], ["218", "226"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["234", "235"], ["234", "242"], ["235", "236"], ["235", "241"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["242", "243"], ["242", "248"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["253", "258"], ["253", "261"], ["253", "263"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["263", "264"], ["263", "271"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "55"], ["51", "59"], ["57", "63"], ["61", "66"], ["65", "76"], ["112", "118"], ["136", "147"], ["250", "255"], ["278", "285"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["53", "51"], ["59", "57"], ["63", "61"], ["66", "70"], ["69", "65"], ["76", "79"], ["79", "86"], ["79", "114"], ["82", "79"], ["114", "112"], ["118", "121"], ["121", "127"], ["121", "139"], ["124", "121"], ["126", "124"], ["138", "136"], ["147", "150"], ["150", "158"], ["150", "250"], ["153", "150"], ["255", "258"], ["258", "267"], ["258", "281"], ["261", "258"], ["279", "278"], ["29", "36"], ["32", "27"], ["49", "47"], ["55", "53"], ["70", "69"], ["85", "99"], ["98", "82"], ["127", "130"], ["130", "126"], ["139", "142"], ["142", "138"], ["156", "169"], ["264", "272"], ["281", "279"], ["31", "29"], ["34", "32"], ["86", "93"], ["89", "85"], ["99", "104"], ["102", "98"], ["157", "164"], ["162", "156"], ["169", "172"], ["172", "179"], ["172", "153"], ["175", "172"], ["266", "264"], ["272", "275"], ["272", "261"], ["275", "261"], ["36", "34"], ["90", "89"], ["104", "107"], ["107", "102"], ["158", "157"], ["164", "162"], ["179", "182"], ["182", "189"], ["182", "175"], ["185", "182"], ["267", "266"], ["91", "90"], ["194", "223"], ["216", "229"], ["227", "237"], ["93", "91"], ["189", "185"], ["189", "202"], ["196", "194"], ["218", "216"], ["228", "227"], ["235", "244"], ["235", "185"], ["242", "185"], ["197", "196"], ["219", "218"], ["229", "228"], ["236", "235"], ["243", "242"], ["198", "211"], ["209", "197"], ["221", "219"], ["237", "236"], ["244", "243"], ["199", "206"], ["206", "198"], ["211", "209"], ["223", "221"], ["201", "199"], ["202", "201"], ["21", "26"], ["22", "285"], ["24", "285"], ["29", "285"], ["32", "285"], ["32", "285"], ["32", "285"], ["27", "285"], ["38", "285"], ["42", "285"], ["41", "285"], ["41", "285"], ["45", "285"], ["45", "285"], ["51", "285"], ["55", "285"], ["53", "285"], ["51", "285"], ["51", "285"], ["57", "285"], ["57", "285"], ["61", "285"], ["61", "285"], ["65", "285"], ["69", "285"], ["65", "285"], ["65", "285"], ["76", "285"], ["112", "285"], ["112", "285"], ["112", "285"], ["118", "285"], ["121", "285"], ["121", "285"], ["136", "285"], ["138", "285"], ["136", "285"], ["136", "285"], ["250", "285"], ["255", "285"], ["258", "285"], ["258", "285"], ["258", "285"], ["278", "285"], ["278", "285"], ["278", "285"], ["264", "285"], ["264", "285"], ["272", "285"], ["272", "285"], ["275", "285"], ["275", "285"], ["261", "285"], ["156", "285"], ["156", "285"], ["156", "285"], ["169", "285"], ["172", "285"], ["172", "285"], ["153", "285"], ["179", "285"], ["182", "285"], ["182", "285"], ["175", "285"], ["189", "285"], ["201", "285"], ["197", "285"], ["209", "285"], ["209", "285"], ["197", "285"], ["196", "285"], ["194", "285"], ["194", "285"], ["219", "285"], ["218", "285"], ["216", "285"], ["216", "285"], ["227", "285"], ["227", "285"], ["235", "285"], ["235", "285"], ["235", "285"], ["242", "285"], ["242", "285"], ["242", "285"], ["185", "285"], ["126", "285"], ["130", "285"], ["130", "285"], ["126", "285"], ["126", "285"], ["124", "285"], ["90", "285"], ["89", "285"], ["85", "285"], ["85", "285"], ["98", "285"], ["102", "285"], ["102", "285"], ["102", "285"], ["102", "285"], ["98", "285"], ["98", "285"], ["82", "285"], ["47", "285"], ["53", "285"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["59", "57"], ["63", "61"], ["69", "65"], ["21", "65"], ["114", "112"], ["138", "136"], ["21", "250"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "76"], ["21", "118"], ["130", "126"], ["130", "126"], ["130", "126"], ["130", "126"], ["21", "147"], ["21", "255"], ["250", "278"], ["272", "278"], ["275", "278"], ["21", "278"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["21", "53"], ["55", "53"], ["21", "59"], ["21", "63"], ["21", "69"], ["76", "79"], ["82", "79"], ["21", "79"], ["90", "82"], ["21", "82"], ["89", "85"], ["89", "85"], ["102", "98"], ["102", "98"], ["102", "98"], ["102", "98"], ["21", "114"], ["118", "121"], ["124", "121"], ["21", "121"], ["130", "124"], ["21", "124"], ["45", "138"], ["21", "138"], ["147", "150"], ["153", "150"], ["21", "150"], ["45", "150"], ["172", "153"], ["21", "153"], ["112", "156"], ["255", "258"], ["261", "258"], ["21", "258"], ["150", "258"], ["258", "261"], ["21", "261"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "55"], ["21", "55"], ["102", "130"], ["21", "130"], ["121", "130"], ["51", "130"], ["102", "130"], ["45", "139"], ["21", "139"], ["21", "142"], ["45", "142"], ["21", "169"], ["250", "264"], ["272", "264"], ["275", "264"], ["21", "264"], ["272", "275"], ["21", "275"], ["90", "89"], ["90", "89"], ["51", "89"], ["102", "89"], ["21", "89"], ["21", "102"], ["57", "102"], ["85", "102"], ["107", "102"], ["107", "102"], ["169", "172"], ["175", "172"], ["21", "172"], ["164", "172"], ["189", "172"], ["202", "172"], ["182", "175"], ["21", "175"], ["21", "179"], ["264", "272"], ["21", "272"], ["51", "272"], ["235", "272"], ["130", "272"], ["102", "272"], ["272", "275"], ["57", "90"], ["93", "90"], ["21", "90"], ["89", "107"], ["21", "107"], ["150", "164"], ["21", "164"], ["179", "182"], ["185", "182"], ["21", "182"], ["172", "182"], ["211", "182"], ["189", "185"], ["223", "185"], ["21", "185"], ["196", "194"], ["196", "194"], ["218", "216"], ["218", "216"], ["216", "227"], ["21", "227"], ["235", "227"], ["242", "227"], ["235", "242"], ["21", "242"], ["79", "93"], ["21", "93"], ["182", "189"], ["21", "189"], ["172", "189"], ["202", "189"], ["197", "196"], ["197", "196"], ["51", "196"], ["235", "196"], ["130", "196"], ["102", "196"], ["21", "196"], ["219", "218"], ["219", "218"], ["196", "218"], ["21", "218"], ["227", "235"], ["218", "235"], ["21", "235"], ["235", "242"], ["209", "197"], ["209", "197"], ["209", "197"], ["194", "219"], ["21", "219"], ["112", "219"], ["130", "209"], ["102", "209"], ["21", "209"], ["211", "209"], ["211", "209"], ["182", "206"], ["21", "206"], ["202", "206"], ["206", "211"], ["21", "211"], ["206", "211"], ["209", "223"], ["21", "223"], ["202", "201"], ["202", "201"], ["21", "201"], ["189", "202"], ["21", "202"], ["189", "202"], ["79", "107"], ["79", "98"], ["79", "102"], ["79", "85"], ["79", "104"], ["79", "91"], ["79", "93"], ["79", "90"], ["79", "79"], ["79", "86"], ["79", "89"], ["79", "99"], ["79", "82"], ["121", "121"], ["121", "130"], ["121", "127"], ["121", "126"], ["121", "124"], ["150", "169"], ["150", "150"], ["150", "162"], ["150", "153"], ["150", "164"], ["150", "158"], ["150", "157"], ["150", "156"], ["150", "172"], ["258", "272"], ["258", "261"], ["258", "264"], ["258", "267"], ["258", "258"], ["258", "266"], ["172", "179"], ["172", "182"], ["172", "175"], ["172", "172"], ["272", "275"], ["182", "185"], ["182", "189"], ["182", "182"], ["189", "209"], ["189", "196"], ["189", "197"], ["189", "198"], ["189", "228"], ["189", "206"], ["189", "223"], ["189", "194"], ["189", "221"], ["189", "202"], ["189", "201"], ["189", "235"], ["189", "236"], ["189", "237"], ["189", "199"], ["189", "229"], ["189", "211"], ["189", "216"], ["189", "227"], ["189", "218"], ["189", "219"], ["235", "244"], ["235", "243"], ["235", "242"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int N = parseInt(st.nextToken()))<SUB>5</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "49": "<(nextToken,nextToken())<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,MOD = parseLong(st.nextToken()))<SUB>6</SUB>>", "53": "<(parseLong,parseLong(st.nextToken()))<SUB>6</SUB>>", "55": "<(nextToken,nextToken())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,fac = new long[401])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new long[401])>", "61": "<(&lt;operator&gt;.assignment,invfac = new long[401])<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.alloc,new long[401])>", "65": "<(&lt;operator&gt;.assignment,fac[0] = invfac[0] = 1L)<SUB>9</SUB>>", "67": "<(IDENTIFIER,fac,fac[0] = invfac[0] = 1L)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,invfac[0] = 1L)<SUB>9</SUB>>", "71": "<(IDENTIFIER,invfac,invfac[0] = 1L)<SUB>9</SUB>>", "73": "<(LITERAL,1L,invfac[0] = 1L)<SUB>9</SUB>>", "75": "<(LOCAL,int i: int)<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,int i = 1)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 400)<SUB>10</SUB>>", "81": "<(LITERAL,400,i &lt;= 400)<SUB>10</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,fac[i] = (fac[i - 1] * i) % MOD)<SUB>12</SUB>>", "87": "<(IDENTIFIER,fac,fac[i] = (fac[i - 1] * i) % MOD)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.modulo,(fac[i - 1] * i) % MOD)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,fac[i - 1])<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>12</SUB>>", "95": "<(LITERAL,1,i - 1)<SUB>12</SUB>>", "97": "<(IDENTIFIER,MOD,(fac[i - 1] * i) % MOD)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,invfac[i])<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,invfac[i] = power(fac[i], MOD - 2, MOD))<SUB>13</SUB>>", "103": "<(IDENTIFIER,this,power(fac[i], MOD - 2, MOD))<SUB>13</SUB>>", "105": "<(IDENTIFIER,fac,power(fac[i], MOD - 2, MOD))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.subtraction,MOD - 2)<SUB>13</SUB>>", "109": "<(LITERAL,2,MOD - 2)<SUB>13</SUB>>", "111": "<(LOCAL,long[] pow2: long[])<SUB>15</SUB>>", "113": "<(IDENTIFIER,pow2,long[] pow2 = new long[401])<SUB>15</SUB>>", "115": "<(LITERAL,401,new long[401])<SUB>15</SUB>>", "117": "<(LOCAL,int i: int)<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= 400)<SUB>16</SUB>>", "123": "<(LITERAL,400,i &lt;= 400)<SUB>16</SUB>>", "125": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,pow2[i])<SUB>17</SUB>>", "129": "<(IDENTIFIER,i,pow2[i] = power(2, i, MOD))<SUB>17</SUB>>", "131": "<(IDENTIFIER,this,power(2, i, MOD))<SUB>17</SUB>>", "133": "<(IDENTIFIER,i,power(2, i, MOD))<SUB>17</SUB>>", "135": "<(LOCAL,long[][] dp: long[][])<SUB>18</SUB>>", "137": "<(IDENTIFIER,dp,long[][] dp = new long[N + 1][N + 1])<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.addition,N + 1)<SUB>18</SUB>>", "141": "<(LITERAL,1,N + 1)<SUB>18</SUB>>", "143": "<(IDENTIFIER,N,N + 1)<SUB>18</SUB>>", "145": "<(CONTROL_STRUCTURE,for (int v = 1; Some(v &lt;= N); v++),for (int v = 1; Some(v &lt;= N); v++))<SUB>19</SUB>>", "147": "<(&lt;operator&gt;.assignment,int v = 1)<SUB>19</SUB>>", "149": "<(LITERAL,1,int v = 1)<SUB>19</SUB>>", "151": "<(IDENTIFIER,v,v &lt;= N)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,v++)<SUB>19</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,dp[v][v])<SUB>21</SUB>>", "159": "<(IDENTIFIER,dp,dp[v][v] = pow2[v - 1])<SUB>21</SUB>>", "161": "<(IDENTIFIER,v,dp[v][v] = pow2[v - 1])<SUB>21</SUB>>", "163": "<(IDENTIFIER,pow2,dp[v][v] = pow2[v - 1])<SUB>21</SUB>>", "165": "<(IDENTIFIER,v,v - 1)<SUB>21</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k &lt;= v); k++),for (int k = 1; Some(k &lt;= v); k++))<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>22</SUB>>", "171": "<(LITERAL,1,int k = 1)<SUB>22</SUB>>", "173": "<(IDENTIFIER,k,k &lt;= v)<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,k++)<SUB>22</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int block = 1; Some(block &lt;= k); block++),for (int block = 1; Some(block &lt;= k); block++))<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.assignment,int block = 1)<SUB>23</SUB>>", "181": "<(LITERAL,1,int block = 1)<SUB>23</SUB>>", "183": "<(IDENTIFIER,block,block &lt;= k)<SUB>23</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,block++)<SUB>23</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.equals,block == v)<SUB>25</SUB>>", "191": "<(IDENTIFIER,v,block == v)<SUB>25</SUB>>", "193": "<(LOCAL,long temp: long)<SUB>27</SUB>>", "195": "<(IDENTIFIER,temp,long temp = (dp[v - block - 1][k - block] * calc(k - block, block)) % MOD)<SUB>27</SUB>>", "197": "<(&lt;operator&gt;.multiplication,dp[v - block - 1][k - block] * calc(k - block, block))<SUB>27</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,dp[v - block - 1])<SUB>27</SUB>>", "201": "<(&lt;operator&gt;.subtraction,v - block - 1)<SUB>27</SUB>>", "203": "<(IDENTIFIER,v,v - block)<SUB>27</SUB>>", "205": "<(LITERAL,1,v - block - 1)<SUB>27</SUB>>", "207": "<(IDENTIFIER,k,k - block)<SUB>27</SUB>>", "209": "<(calc,calc(k - block, block))<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.subtraction,k - block)<SUB>27</SUB>>", "213": "<(IDENTIFIER,block,k - block)<SUB>27</SUB>>", "215": "<(IDENTIFIER,MOD,(dp[v - block - 1][k - block] * calc(k - block, block)) % MOD)<SUB>27</SUB>>", "217": "<(IDENTIFIER,temp,temp = (temp * pow2[block - 1]) % MOD)<SUB>28</SUB>>", "219": "<(&lt;operator&gt;.multiplication,temp * pow2[block - 1])<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,pow2[block - 1])<SUB>28</SUB>>", "223": "<(&lt;operator&gt;.subtraction,block - 1)<SUB>28</SUB>>", "225": "<(LITERAL,1,block - 1)<SUB>28</SUB>>", "227": "<(&lt;operator&gt;.assignmentPlus,dp[v][k] += temp)<SUB>29</SUB>>", "229": "<(&lt;operator&gt;.indexAccess,dp[v])<SUB>29</SUB>>", "231": "<(IDENTIFIER,v,dp[v][k] += temp)<SUB>29</SUB>>", "233": "<(IDENTIFIER,temp,dp[v][k] += temp)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.greaterEqualsThan,dp[v][k] &gt;= MOD)<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,dp[v])<SUB>30</SUB>>", "239": "<(IDENTIFIER,v,dp[v][k] &gt;= MOD)<SUB>30</SUB>>", "241": "<(IDENTIFIER,MOD,dp[v][k] &gt;= MOD)<SUB>30</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[v][k])<SUB>31</SUB>>", "245": "<(IDENTIFIER,dp,dp[v][k] -= MOD)<SUB>31</SUB>>", "247": "<(IDENTIFIER,k,dp[v][k] -= MOD)<SUB>31</SUB>>", "249": "<(LOCAL,long res: long)<SUB>34</SUB>>", "251": "<(IDENTIFIER,res,long res = 0L)<SUB>34</SUB>>", "253": "<(CONTROL_STRUCTURE,for (int v = 1; Some(v &lt;= N); v++),for (int v = 1; Some(v &lt;= N); v++))<SUB>35</SUB>>", "255": "<(&lt;operator&gt;.assignment,int v = 1)<SUB>35</SUB>>", "257": "<(LITERAL,1,int v = 1)<SUB>35</SUB>>", "259": "<(IDENTIFIER,v,v &lt;= N)<SUB>35</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,v++)<SUB>35</SUB>>", "263": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "265": "<(IDENTIFIER,res,res += dp[N][v])<SUB>37</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[N])<SUB>37</SUB>>", "269": "<(IDENTIFIER,N,res += dp[N][v])<SUB>37</SUB>>", "271": "<(CONTROL_STRUCTURE,if (res &gt;= MOD),if (res &gt;= MOD))<SUB>38</SUB>>", "273": "<(IDENTIFIER,res,res &gt;= MOD)<SUB>38</SUB>>", "275": "<(&lt;operator&gt;.assignmentMinus,res -= MOD)<SUB>39</SUB>>", "277": "<(IDENTIFIER,MOD,res -= MOD)<SUB>39</SUB>>", "279": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>41</SUB>>", "281": "<(FIELD_IDENTIFIER,out,out)<SUB>41</SUB>>", "283": "<(MODIFIER,PUBLIC)>", "285": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}