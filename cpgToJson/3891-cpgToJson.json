{"edges": [["21", "22"], ["21", "23"], ["21", "150"], ["21", "151"], ["21", "152"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "59"], ["23", "60"], ["23", "66"], ["23", "146"], ["23", "148"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "58"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "71"], ["67", "68"], ["67", "70"], ["68", "69"], ["71", "72"], ["71", "73"], ["71", "79"], ["71", "82"], ["71", "84"], ["71", "88"], ["71", "89"], ["71", "92"], ["71", "142"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "87"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "110"], ["102", "127"], ["102", "131"], ["102", "138"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["121", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "141"], ["142", "143"], ["142", "144"], ["142", "145"], ["146", "147"], ["148", "149"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "64"], ["60", "68"], ["146", "148"], ["148", "152"], ["26", "24"], ["40", "38"], ["62", "60"], ["67", "77"], ["67", "146"], ["29", "36"], ["32", "27"], ["43", "51"], ["46", "41"], ["64", "62"], ["68", "67"], ["73", "81"], ["79", "82"], ["82", "84"], ["84", "89"], ["89", "94"], ["142", "68"], ["31", "29"], ["34", "32"], ["45", "43"], ["75", "73"], ["81", "79"], ["94", "97"], ["97", "108"], ["97", "142"], ["100", "97"], ["36", "34"], ["49", "56"], ["52", "46"], ["77", "75"], ["104", "112"], ["127", "134"], ["131", "138"], ["138", "100"], ["51", "49"], ["54", "52"], ["106", "104"], ["111", "124"], ["111", "127"], ["133", "131"], ["56", "54"], ["108", "106"], ["112", "115"], ["115", "111"], ["119", "112"], ["134", "133"], ["121", "119"], ["124", "121"], ["21", "26"], ["22", "152"], ["24", "152"], ["32", "152"], ["32", "152"], ["32", "152"], ["27", "152"], ["38", "152"], ["46", "152"], ["49", "152"], ["52", "152"], ["52", "152"], ["52", "152"], ["46", "152"], ["41", "152"], ["62", "152"], ["62", "152"], ["60", "152"], ["60", "152"], ["68", "152"], ["67", "152"], ["67", "152"], ["146", "152"], ["148", "152"], ["148", "152"], ["75", "152"], ["75", "152"], ["73", "152"], ["73", "152"], ["79", "152"], ["82", "152"], ["84", "152"], ["84", "152"], ["89", "152"], ["89", "152"], ["94", "152"], ["97", "152"], ["97", "152"], ["97", "152"], ["142", "152"], ["106", "152"], ["106", "152"], ["104", "152"], ["104", "152"], ["111", "152"], ["111", "152"], ["111", "152"], ["127", "152"], ["133", "152"], ["133", "152"], ["131", "152"], ["131", "152"], ["138", "152"], ["138", "152"], ["138", "152"], ["100", "152"], ["121", "152"], ["119", "152"], ["119", "152"], ["142", "152"], ["21", "22"], ["21", "24"], ["21", "38"], ["62", "60"], ["62", "60"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["49", "41"], ["46", "41"], ["64", "146"], ["77", "146"], ["108", "146"], ["21", "146"], ["41", "148"], ["142", "148"], ["21", "148"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "58"], ["21", "62"], ["64", "62"], ["68", "67"], ["21", "67"], ["75", "73"], ["75", "73"], ["21", "79"], ["21", "89"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["49", "46"], ["52", "46"], ["27", "64"], ["21", "64"], ["60", "68"], ["21", "68"], ["79", "82"], ["21", "82"], ["82", "84"], ["21", "84"], ["21", "94"], ["21", "142"], ["41", "142"], ["21", "49"], ["21", "57"], ["62", "75"], ["106", "75"], ["21", "75"], ["77", "75"], ["94", "97"], ["100", "97"], ["21", "97"], ["73", "97"], ["97", "100"], ["21", "100"], ["106", "104"], ["106", "104"], ["127", "131"], ["21", "131"], ["127", "131"], ["49", "52"], ["21", "52"], ["64", "77"], ["108", "77"], ["21", "77"], ["112", "127"], ["21", "127"], ["112", "127"], ["115", "127"], ["127", "138"], ["21", "138"], ["131", "138"], ["75", "106"], ["21", "106"], ["108", "106"], ["112", "111"], ["112", "111"], ["115", "111"], ["115", "111"], ["121", "119"], ["121", "119"], ["121", "119"], ["127", "133"], ["21", "133"], ["127", "133"], ["77", "108"], ["21", "108"], ["84", "112"], ["138", "112"], ["21", "112"], ["89", "112"], ["138", "112"], ["119", "112"], ["104", "115"], ["21", "115"], ["127", "134"], ["21", "134"], ["124", "121"], ["21", "121"], ["124", "121"], ["112", "124"], ["21", "124"], ["67", "94"], ["67", "68"], ["67", "73"], ["67", "77"], ["67", "89"], ["67", "75"], ["67", "81"], ["67", "84"], ["67", "67"], ["67", "142"], ["67", "97"], ["67", "82"], ["67", "79"], ["97", "115"], ["97", "131"], ["97", "104"], ["97", "106"], ["97", "97"], ["97", "112"], ["97", "134"], ["97", "138"], ["97", "100"], ["97", "127"], ["97", "108"], ["97", "111"], ["97", "133"], ["111", "115"], ["111", "119"], ["111", "121"], ["111", "112"], ["111", "124"], ["111", "111"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>5</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>5</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>6</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>6</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>6</SUB>>", "47": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>6</SUB>>", "53": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "55": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>6</SUB>>", "57": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "59": "<(LOCAL,int t: int)<SUB>7</SUB>>", "61": "<(IDENTIFIER,t,int t = parseInt(f.readLine()))<SUB>7</SUB>>", "63": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>7</SUB>>", "65": "<(IDENTIFIER,f,readLine())<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.greaterThan,t-- &gt; 0)<SUB>8</SUB>>", "69": "<(IDENTIFIER,t,t--)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int n = parseInt(f.readLine()))<SUB>9</SUB>>", "75": "<(parseInt,parseInt(f.readLine()))<SUB>9</SUB>>", "77": "<(readLine,readLine())<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,nodes = new HashMap&lt;&gt;())<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>10</SUB>>", "83": "<(IDENTIFIER,nodes,new HashMap&lt;&gt;())<SUB>10</SUB>>", "85": "<(IDENTIFIER,nodes,put(&quot;&quot;, 0))<SUB>11</SUB>>", "87": "<(LITERAL,0,put(&quot;&quot;, 0))<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.assignment,String cur = &quot;&quot;)<SUB>12</SUB>>", "91": "<(LITERAL,&quot;&quot;,String cur = &quot;&quot;)<SUB>12</SUB>>", "93": "<(LOCAL,int i: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "99": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "103": "<(LOCAL,int a: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,a,int a = parseInt(f.readLine()))<SUB>14</SUB>>", "107": "<(IDENTIFIER,Integer,parseInt(f.readLine()))<SUB>14</SUB>>", "109": "<(IDENTIFIER,f,readLine())<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.notEquals,nodes.get(cur) != a - 1)<SUB>15</SUB>>", "113": "<(IDENTIFIER,nodes,get(cur))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.subtraction,a - 1)<SUB>15</SUB>>", "117": "<(LITERAL,1,a - 1)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,cur = cur.substring(0, cur.lastIndexOf(&quot;.&quot;)))<SUB>16</SUB>>", "121": "<(substring,cur.substring(0, cur.lastIndexOf(&quot;.&quot;)))<SUB>16</SUB>>", "123": "<(LITERAL,0,cur.substring(0, cur.lastIndexOf(&quot;.&quot;)))<SUB>16</SUB>>", "125": "<(IDENTIFIER,cur,cur.lastIndexOf(&quot;.&quot;))<SUB>16</SUB>>", "127": "<(put,put(cur, a))<SUB>18</SUB>>", "129": "<(IDENTIFIER,cur,put(cur, a))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.assignment,cur = cur + &quot;.&quot; + a)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.addition,cur + &quot;.&quot; + a)<SUB>19</SUB>>", "135": "<(IDENTIFIER,cur,cur + &quot;.&quot;)<SUB>19</SUB>>", "137": "<(IDENTIFIER,a,cur + &quot;.&quot; + a)<SUB>19</SUB>>", "139": "<(IDENTIFIER,nodes,put(cur, 0))<SUB>20</SUB>>", "141": "<(LITERAL,0,put(cur, 0))<SUB>20</SUB>>", "143": "<(IDENTIFIER,this,dfs(&quot;&quot;, out))<SUB>22</SUB>>", "145": "<(IDENTIFIER,out,dfs(&quot;&quot;, out))<SUB>22</SUB>>", "147": "<(IDENTIFIER,f,close())<SUB>24</SUB>>", "149": "<(IDENTIFIER,out,close())<SUB>25</SUB>>", "151": "<(MODIFIER,STATIC)>"}}