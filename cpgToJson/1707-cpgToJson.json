{"edges": [["22", "24"], ["22", "179"], ["22", "180"], ["22", "181"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "100"], ["24", "103"], ["24", "104"], ["24", "107"], ["24", "174"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "78"], ["74", "81"], ["75", "76"], ["75", "77"], ["78", "7"], ["78", "79"], ["79", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["85", "99"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "95"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "117"], ["107", "119"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "136"], ["119", "139"], ["119", "140"], ["119", "155"], ["119", "160"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "154"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "164"], ["160", "166"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "66"], ["100", "104"], ["104", "109"], ["174", "181"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["66", "69"], ["69", "77"], ["69", "100"], ["72", "69"], ["109", "116"], ["112", "125"], ["112", "177"], ["117", "116"], ["175", "174"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["75", "79"], ["78", "82"], ["81", "72"], ["114", "112"], ["121", "136"], ["136", "144"], ["140", "157"], ["155", "161"], ["177", "175"], ["32", "30"], ["35", "33"], ["77", "75"], ["79", "78"], ["82", "88"], ["116", "114"], ["123", "121"], ["142", "140"], ["157", "155"], ["161", "164"], ["161", "168"], ["164", "117"], ["37", "35"], ["86", "93"], ["89", "81"], ["124", "132"], ["129", "123"], ["143", "151"], ["148", "142"], ["88", "86"], ["91", "97"], ["95", "89"], ["125", "128"], ["128", "124"], ["130", "135"], ["135", "129"], ["144", "147"], ["147", "143"], ["149", "154"], ["154", "148"], ["168", "171"], ["168", "117"], ["171", "117"], ["93", "91"], ["97", "95"], ["132", "130"], ["151", "149"], ["22", "27"], ["23", "181"], ["25", "181"], ["30", "181"], ["33", "181"], ["33", "181"], ["33", "181"], ["28", "181"], ["39", "181"], ["43", "181"], ["42", "181"], ["42", "181"], ["46", "181"], ["53", "181"], ["55", "181"], ["57", "181"], ["55", "181"], ["53", "181"], ["53", "181"], ["60", "181"], ["60", "181"], ["66", "181"], ["69", "181"], ["69", "181"], ["100", "181"], ["100", "181"], ["104", "181"], ["109", "181"], ["112", "181"], ["112", "181"], ["112", "181"], ["174", "181"], ["174", "181"], ["174", "181"], ["121", "181"], ["121", "181"], ["136", "181"], ["140", "181"], ["140", "181"], ["157", "181"], ["155", "181"], ["155", "181"], ["161", "181"], ["161", "181"], ["161", "181"], ["168", "181"], ["168", "181"], ["168", "181"], ["171", "181"], ["164", "181"], ["117", "181"], ["75", "181"], ["79", "181"], ["78", "181"], ["78", "181"], ["81", "181"], ["86", "181"], ["89", "181"], ["89", "181"], ["95", "181"], ["97", "181"], ["95", "181"], ["89", "181"], ["81", "181"], ["72", "181"], ["100", "181"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["22", "104"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "66"], ["22", "100"], ["60", "100"], ["81", "100"], ["22", "109"], ["104", "174"], ["171", "174"], ["164", "174"], ["22", "174"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["66", "69"], ["72", "69"], ["22", "69"], ["62", "69"], ["69", "72"], ["22", "72"], ["22", "75"], ["86", "81"], ["89", "81"], ["22", "81"], ["109", "112"], ["117", "112"], ["22", "112"], ["100", "112"], ["151", "117"], ["22", "117"], ["123", "121"], ["123", "121"], ["22", "136"], ["157", "155"], ["157", "155"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["75", "78"], ["22", "78"], ["79", "78"], ["121", "136"], ["140", "155"], ["22", "155"], ["43", "79"], ["22", "79"], ["22", "86"], ["22", "99"], ["22", "157"], ["53", "157"], ["136", "161"], ["22", "161"], ["155", "161"], ["104", "164"], ["171", "164"], ["22", "164"], ["86", "89"], ["22", "89"], ["91", "89"], ["91", "89"], ["95", "89"], ["95", "89"], ["22", "171"], ["55", "91"], ["95", "91"], ["22", "91"], ["93", "91"], ["91", "95"], ["22", "95"], ["97", "95"], ["161", "168"], ["22", "168"], ["161", "168"], ["104", "171"], ["164", "171"], ["78", "93"], ["22", "93"], ["93", "97"], ["22", "97"], ["112", "132"], ["22", "132"], ["132", "151"], ["22", "151"], ["69", "77"], ["69", "89"], ["69", "75"], ["69", "81"], ["69", "72"], ["69", "69"], ["69", "95"], ["69", "97"], ["69", "91"], ["69", "82"], ["69", "93"], ["69", "79"], ["69", "88"], ["69", "78"], ["69", "86"], ["112", "136"], ["112", "116"], ["112", "154"], ["112", "128"], ["112", "161"], ["112", "114"], ["112", "149"], ["112", "132"], ["112", "142"], ["112", "151"], ["112", "121"], ["112", "123"], ["112", "157"], ["112", "144"], ["112", "112"], ["112", "129"], ["112", "140"], ["112", "148"], ["112", "143"], ["112", "130"], ["112", "147"], ["112", "135"], ["112", "117"], ["112", "155"], ["112", "124"], ["112", "125"], ["161", "168"], ["161", "164"], ["168", "171"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int t: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,t,int t = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY s = new State[n])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new State[n])>", "64": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "68": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "70": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "74": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "76": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "78": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "79": "<(readLine,readLine())<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,s[i] = new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())))<SUB>9</SUB>>", "83": "<(IDENTIFIER,s,s[i] = new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())))<SUB>9</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "87": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "89": "<(&lt;init&gt;,new State(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken())))<SUB>9</SUB>>", "91": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "93": "<(nextToken,nextToken())<SUB>9</SUB>>", "95": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "97": "<(nextToken,nextToken())<SUB>9</SUB>>", "99": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "101": "<(IDENTIFIER,Arrays,sort(s))<SUB>11</SUB>>", "103": "<(LOCAL,int num: int)<SUB>12</SUB>>", "105": "<(IDENTIFIER,num,int num = 2)<SUB>12</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; s.length); i++),for (int i = 1; Some(i &lt; s.length); i++))<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>13</SUB>>", "111": "<(LITERAL,1,int i = 1)<SUB>13</SUB>>", "113": "<(IDENTIFIER,i,i &lt; s.length)<SUB>13</SUB>>", "115": "<(IDENTIFIER,s,i &lt; s.length)<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "121": "<(&lt;operator&gt;.assignment,int dist = s[i].x - s[i - 1].x)<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.subtraction,s[i].x - s[i - 1].x)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>14</SUB>>", "127": "<(IDENTIFIER,i,s[i].x - s[i - 1].x)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,s[i - 1].x)<SUB>14</SUB>>", "131": "<(IDENTIFIER,s,s[i].x - s[i - 1].x)<SUB>14</SUB>>", "133": "<(IDENTIFIER,i,i - 1)<SUB>14</SUB>>", "135": "<(FIELD_IDENTIFIER,x,x)<SUB>14</SUB>>", "137": "<(IDENTIFIER,dist,dist *= 2)<SUB>15</SUB>>", "139": "<(LOCAL,int size: int)<SUB>16</SUB>>", "141": "<(IDENTIFIER,size,int size = s[i].d + s[i - 1].d)<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.fieldAccess,s[i].d)<SUB>16</SUB>>", "145": "<(IDENTIFIER,s,s[i].d + s[i - 1].d)<SUB>16</SUB>>", "147": "<(FIELD_IDENTIFIER,d,d)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,s[i - 1])<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>16</SUB>>", "153": "<(LITERAL,1,i - 1)<SUB>16</SUB>>", "155": "<(&lt;operator&gt;.assignmentPlus,size += 2 * t)<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>17</SUB>>", "159": "<(IDENTIFIER,t,2 * t)<SUB>17</SUB>>", "161": "<(&lt;operator&gt;.equals,dist == size)<SUB>18</SUB>>", "163": "<(IDENTIFIER,size,dist == size)<SUB>18</SUB>>", "165": "<(IDENTIFIER,num,num++)<SUB>19</SUB>>", "167": "<(CONTROL_STRUCTURE,if (dist &gt; size),if (dist &gt; size))<SUB>20</SUB>>", "169": "<(IDENTIFIER,dist,dist &gt; size)<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.assignmentPlus,num += 2)<SUB>21</SUB>>", "173": "<(LITERAL,2,num += 2)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>23</SUB>>", "177": "<(FIELD_IDENTIFIER,out,out)<SUB>23</SUB>>", "179": "<(MODIFIER,PUBLIC)>", "181": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}