{"edges": [["24", "26"], ["24", "387"], ["24", "388"], ["24", "389"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "55"], ["26", "56"], ["26", "62"], ["26", "382"], ["26", "384"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "49"], ["45", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "8"], ["72", "73"], ["72", "76"], ["72", "79"], ["72", "80"], ["72", "86"], ["72", "87"], ["72", "93"], ["72", "94"], ["72", "99"], ["72", "136"], ["72", "137"], ["72", "141"], ["72", "182"], ["72", "183"], ["72", "188"], ["72", "215"], ["72", "225"], ["72", "226"], ["72", "234"], ["72", "274"], ["72", "275"], ["72", "278"], ["72", "294"], ["72", "295"], ["72", "299"], ["72", "379"], ["73", "74"], ["73", "75"], ["76", "7"], ["76", "77"], ["77", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["91", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "113"], ["109", "116"], ["110", "111"], ["110", "112"], ["113", "9"], ["113", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "134"], ["134", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "149"], ["141", "151"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["149", "150"], ["151", "152"], ["152", "153"], ["152", "154"], ["152", "157"], ["152", "160"], ["152", "162"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["163", "164"], ["163", "173"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "208"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["215", "216"], ["215", "217"], ["215", "218"], ["218", "219"], ["218", "222"], ["218", "224"], ["219", "220"], ["219", "221"], ["222", "223"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["230", "233"], ["234", "235"], ["234", "236"], ["234", "239"], ["234", "242"], ["234", "244"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "256"], ["245", "258"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["252", "255"], ["256", "257"], ["258", "259"], ["259", "260"], ["259", "265"], ["260", "261"], ["260", "264"], ["261", "262"], ["261", "263"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "273"], ["270", "271"], ["270", "272"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["278", "283"], ["278", "289"], ["278", "291"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["285", "288"], ["289", "290"], ["291", "292"], ["291", "293"], ["295", "296"], ["295", "297"], ["297", "298"], ["299", "300"], ["299", "301"], ["299", "304"], ["299", "307"], ["299", "309"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["307", "308"], ["309", "310"], ["309", "311"], ["309", "314"], ["309", "372"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "316"], ["314", "319"], ["314", "322"], ["314", "324"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "321"], ["322", "323"], ["324", "325"], ["324", "326"], ["324", "329"], ["324", "330"], ["324", "333"], ["324", "369"], ["326", "327"], ["326", "328"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "344"], ["333", "346"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["340", "343"], ["344", "345"], ["346", "347"], ["346", "348"], ["346", "359"], ["346", "362"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "358"], ["351", "352"], ["351", "353"], ["353", "354"], ["353", "357"], ["354", "355"], ["354", "356"], ["359", "360"], ["359", "361"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "368"], ["369", "370"], ["369", "371"], ["372", "373"], ["372", "376"], ["373", "374"], ["373", "375"], ["376", "377"], ["376", "378"], ["379", "380"], ["379", "381"], ["382", "383"], ["384", "385"], ["384", "386"], ["27", "34"], ["30", "43"], ["41", "48"], ["44", "60"], ["56", "64"], ["382", "384"], ["384", "389"], ["29", "27"], ["43", "41"], ["58", "56"], ["64", "67"], ["67", "75"], ["67", "382"], ["70", "67"], ["32", "39"], ["35", "30"], ["46", "53"], ["49", "44"], ["60", "58"], ["73", "77"], ["76", "84"], ["80", "91"], ["87", "96"], ["94", "101"], ["137", "143"], ["183", "190"], ["215", "230"], ["226", "236"], ["275", "280"], ["295", "301"], ["379", "70"], ["34", "32"], ["37", "35"], ["48", "46"], ["51", "49"], ["75", "73"], ["77", "76"], ["82", "80"], ["89", "87"], ["96", "94"], ["101", "104"], ["104", "112"], ["104", "139"], ["107", "104"], ["139", "137"], ["143", "146"], ["146", "154"], ["146", "185"], ["149", "146"], ["185", "183"], ["190", "193"], ["193", "201"], ["193", "221"], ["196", "193"], ["228", "226"], ["236", "239"], ["239", "247"], ["239", "275"], ["242", "239"], ["280", "285"], ["283", "291"], ["283", "297"], ["289", "285"], ["291", "289"], ["297", "295"], ["301", "304"], ["304", "311"], ["304", "379"], ["307", "304"], ["39", "37"], ["53", "51"], ["84", "82"], ["91", "89"], ["110", "114"], ["113", "118"], ["199", "210"], ["208", "196"], ["219", "222"], ["222", "215"], ["230", "228"], ["285", "283"], ["311", "316"], ["112", "110"], ["114", "113"], ["118", "121"], ["121", "128"], ["121", "107"], ["124", "121"], ["126", "124"], ["154", "157"], ["157", "166"], ["157", "149"], ["160", "157"], ["200", "205"], ["205", "199"], ["209", "208"], ["221", "219"], ["247", "252"], ["250", "261"], ["250", "242"], ["256", "252"], ["316", "319"], ["319", "326"], ["319", "373"], ["322", "319"], ["373", "376"], ["373", "307"], ["376", "307"], ["127", "134"], ["132", "126"], ["201", "200"], ["210", "209"], ["252", "250"], ["259", "256"], ["326", "330"], ["330", "335"], ["369", "322"], ["128", "127"], ["134", "132"], ["164", "174"], ["164", "160"], ["173", "160"], ["260", "266"], ["265", "259"], ["335", "340"], ["338", "354"], ["338", "369"], ["344", "340"], ["165", "170"], ["170", "164"], ["174", "178"], ["177", "173"], ["261", "260"], ["266", "270"], ["269", "265"], ["340", "338"], ["348", "359"], ["359", "363"], ["166", "165"], ["178", "177"], ["270", "269"], ["350", "348"], ["363", "366"], ["363", "344"], ["366", "344"], ["351", "350"], ["353", "351"], ["354", "353"], ["24", "29"], ["25", "389"], ["27", "389"], ["35", "389"], ["35", "389"], ["30", "389"], ["41", "389"], ["46", "389"], ["49", "389"], ["49", "389"], ["44", "389"], ["58", "389"], ["60", "389"], ["58", "389"], ["56", "389"], ["56", "389"], ["64", "389"], ["67", "389"], ["67", "389"], ["67", "389"], ["382", "389"], ["382", "389"], ["384", "389"], ["384", "389"], ["73", "389"], ["77", "389"], ["76", "389"], ["76", "389"], ["80", "389"], ["89", "389"], ["91", "389"], ["89", "389"], ["87", "389"], ["87", "389"], ["94", "389"], ["94", "389"], ["94", "389"], ["137", "389"], ["137", "389"], ["137", "389"], ["183", "389"], ["183", "389"], ["193", "389"], ["215", "389"], ["219", "389"], ["222", "389"], ["222", "389"], ["215", "389"], ["226", "389"], ["226", "389"], ["226", "389"], ["239", "389"], ["275", "389"], ["285", "389"], ["285", "389"], ["285", "389"], ["283", "389"], ["283", "389"], ["295", "389"], ["295", "389"], ["301", "389"], ["304", "389"], ["304", "389"], ["304", "389"], ["379", "389"], ["379", "389"], ["70", "389"], ["311", "389"], ["316", "389"], ["319", "389"], ["319", "389"], ["319", "389"], ["373", "389"], ["373", "389"], ["376", "389"], ["376", "389"], ["307", "389"], ["326", "389"], ["330", "389"], ["330", "389"], ["335", "389"], ["338", "389"], ["340", "389"], ["340", "389"], ["338", "389"], ["338", "389"], ["369", "389"], ["369", "389"], ["322", "389"], ["353", "389"], ["348", "389"], ["348", "389"], ["359", "389"], ["359", "389"], ["363", "389"], ["363", "389"], ["366", "389"], ["366", "389"], ["344", "389"], ["291", "389"], ["289", "389"], ["247", "389"], ["250", "389"], ["250", "389"], ["242", "389"], ["259", "389"], ["259", "389"], ["259", "389"], ["256", "389"], ["199", "389"], ["199", "389"], ["199", "389"], ["208", "389"], ["208", "389"], ["196", "389"], ["154", "389"], ["157", "389"], ["157", "389"], ["149", "389"], ["164", "389"], ["164", "389"], ["164", "389"], ["173", "389"], ["173", "389"], ["173", "389"], ["160", "389"], ["110", "389"], ["113", "389"], ["114", "389"], ["113", "389"], ["113", "389"], ["118", "389"], ["121", "389"], ["121", "389"], ["107", "389"], ["126", "389"], ["132", "389"], ["134", "389"], ["132", "389"], ["126", "389"], ["126", "389"], ["124", "389"], ["215", "389"], ["24", "25"], ["24", "27"], ["24", "41"], ["58", "56"], ["58", "56"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["46", "44"], ["49", "44"], ["24", "64"], ["44", "382"], ["379", "382"], ["24", "382"], ["35", "384"], ["49", "384"], ["24", "384"], ["24", "32"], ["24", "40"], ["24", "46"], ["24", "54"], ["24", "58"], ["60", "58"], ["64", "67"], ["70", "67"], ["24", "67"], ["56", "67"], ["67", "70"], ["24", "70"], ["24", "73"], ["82", "80"], ["82", "80"], ["89", "87"], ["89", "87"], ["96", "94"], ["96", "94"], ["139", "137"], ["185", "183"], ["185", "183"], ["228", "226"], ["228", "226"], ["24", "275"], ["297", "295"], ["32", "35"], ["24", "35"], ["46", "49"], ["24", "49"], ["30", "60"], ["24", "60"], ["73", "76"], ["24", "76"], ["77", "76"], ["24", "101"], ["24", "143"], ["24", "190"], ["24", "215"], ["183", "215"], ["219", "215"], ["222", "215"], ["24", "236"], ["24", "280"], ["285", "291"], ["24", "291"], ["24", "301"], ["44", "379"], ["24", "379"], ["295", "379"], ["373", "379"], ["376", "379"], ["60", "77"], ["114", "77"], ["24", "77"], ["58", "82"], ["89", "82"], ["132", "82"], ["24", "82"], ["84", "82"], ["82", "89"], ["24", "89"], ["91", "89"], ["80", "96"], ["24", "96"], ["87", "96"], ["101", "104"], ["107", "104"], ["24", "104"], ["96", "104"], ["104", "107"], ["24", "107"], ["24", "110"], ["96", "139"], ["121", "139"], ["24", "139"], ["143", "146"], ["149", "146"], ["24", "146"], ["104", "146"], ["146", "149"], ["24", "149"], ["139", "185"], ["157", "185"], ["24", "185"], ["190", "193"], ["196", "193"], ["24", "193"], ["185", "193"], ["24", "196"], ["193", "196"], ["137", "199"], ["193", "208"], ["24", "208"], ["24", "219"], ["24", "224"], ["230", "228"], ["24", "228"], ["230", "228"], ["230", "228"], ["236", "239"], ["242", "239"], ["24", "239"], ["228", "239"], ["252", "239"], ["239", "242"], ["24", "242"], ["280", "283"], ["289", "283"], ["24", "283"], ["285", "283"], ["285", "283"], ["285", "283"], ["283", "289"], ["24", "289"], ["275", "291"], ["24", "297"], ["301", "304"], ["307", "304"], ["24", "304"], ["275", "304"], ["291", "304"], ["304", "307"], ["24", "307"], ["24", "311"], ["76", "84"], ["24", "84"], ["84", "91"], ["24", "91"], ["110", "113"], ["24", "113"], ["114", "113"], ["24", "118"], ["132", "126"], ["132", "126"], ["24", "154"], ["219", "222"], ["24", "222"], ["285", "230"], ["340", "230"], ["24", "230"], ["146", "230"], ["193", "230"], ["24", "247"], ["230", "285"], ["252", "285"], ["24", "285"], ["239", "285"], ["230", "285"], ["252", "285"], ["24", "316"], ["373", "376"], ["24", "376"], ["77", "114"], ["24", "114"], ["118", "121"], ["124", "121"], ["24", "121"], ["96", "121"], ["121", "124"], ["24", "124"], ["154", "157"], ["160", "157"], ["24", "157"], ["139", "157"], ["157", "160"], ["24", "160"], ["247", "250"], ["256", "250"], ["24", "250"], ["252", "250"], ["252", "250"], ["252", "250"], ["250", "256"], ["24", "256"], ["316", "319"], ["322", "319"], ["24", "319"], ["285", "319"], ["340", "319"], ["319", "322"], ["24", "322"], ["24", "326"], ["304", "330"], ["24", "330"], ["326", "369"], ["363", "369"], ["366", "369"], ["24", "369"], ["311", "373"], ["369", "373"], ["24", "373"], ["295", "373"], ["376", "373"], ["89", "132"], ["24", "132"], ["134", "132"], ["164", "173"], ["230", "252"], ["24", "252"], ["239", "252"], ["230", "252"], ["24", "335"], ["311", "369"], ["113", "134"], ["24", "134"], ["126", "164"], ["137", "164"], ["173", "164"], ["335", "338"], ["344", "338"], ["24", "338"], ["340", "338"], ["340", "338"], ["340", "338"], ["338", "344"], ["24", "344"], ["353", "359"], ["24", "359"], ["285", "340"], ["24", "340"], ["319", "340"], ["353", "340"], ["285", "340"], ["330", "359"], ["363", "366"], ["24", "366"], ["348", "363"], ["24", "363"], ["326", "363"], ["366", "363"], ["319", "353"], ["24", "353"], ["330", "353"], ["359", "353"], ["340", "353"], ["319", "354"], ["24", "354"], ["330", "354"], ["359", "354"], ["67", "230"], ["67", "146"], ["67", "84"], ["67", "215"], ["67", "226"], ["67", "104"], ["67", "283"], ["67", "228"], ["67", "76"], ["67", "190"], ["67", "80"], ["67", "70"], ["67", "304"], ["67", "236"], ["67", "222"], ["67", "297"], ["67", "94"], ["67", "73"], ["67", "96"], ["67", "77"], ["67", "75"], ["67", "67"], ["67", "185"], ["67", "275"], ["67", "379"], ["67", "301"], ["67", "87"], ["67", "91"], ["67", "101"], ["67", "285"], ["67", "137"], ["67", "221"], ["67", "280"], ["67", "139"], ["67", "239"], ["67", "295"], ["67", "183"], ["67", "89"], ["67", "193"], ["67", "82"], ["67", "143"], ["67", "219"], ["104", "114"], ["104", "104"], ["104", "112"], ["104", "118"], ["104", "107"], ["104", "113"], ["104", "121"], ["104", "110"], ["146", "154"], ["146", "146"], ["146", "149"], ["146", "157"], ["193", "209"], ["193", "196"], ["193", "208"], ["193", "201"], ["193", "200"], ["193", "199"], ["193", "205"], ["193", "193"], ["193", "210"], ["239", "247"], ["239", "242"], ["239", "239"], ["239", "252"], ["239", "250"], ["283", "283"], ["283", "291"], ["283", "285"], ["283", "289"], ["304", "304"], ["304", "311"], ["304", "316"], ["304", "319"], ["304", "307"], ["304", "373"], ["121", "128"], ["121", "134"], ["121", "127"], ["121", "132"], ["121", "121"], ["121", "126"], ["121", "124"], ["157", "170"], ["157", "160"], ["157", "164"], ["157", "166"], ["157", "157"], ["157", "165"], ["250", "256"], ["250", "260"], ["250", "269"], ["250", "261"], ["250", "259"], ["250", "265"], ["250", "252"], ["250", "270"], ["250", "250"], ["250", "266"], ["319", "326"], ["319", "338"], ["319", "322"], ["319", "340"], ["319", "335"], ["319", "319"], ["319", "330"], ["319", "369"], ["373", "376"], ["164", "174"], ["164", "177"], ["164", "178"], ["164", "173"], ["338", "338"], ["338", "340"], ["338", "348"], ["338", "351"], ["338", "353"], ["338", "359"], ["338", "354"], ["338", "350"], ["338", "363"], ["338", "344"], ["363", "366"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "48": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "50": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "52": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "54": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "56": "<(&lt;operator&gt;.assignment,int T = parseInt(bf.readLine()))<SUB>4</SUB>>", "58": "<(parseInt,parseInt(bf.readLine()))<SUB>4</SUB>>", "60": "<(readLine,readLine())<SUB>4</SUB>>", "62": "<(CONTROL_STRUCTURE,for (int t = 0; Some(t &lt; T); t++),for (int t = 0; Some(t &lt; T); t++))<SUB>5</SUB>>", "64": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>5</SUB>>", "66": "<(LITERAL,0,int t = 0)<SUB>5</SUB>>", "68": "<(IDENTIFIER,t,t &lt; T)<SUB>5</SUB>>", "70": "<(&lt;operator&gt;.postIncrement,t++)<SUB>5</SUB>>", "72": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "73": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.alloc,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(bf.readLine()))<SUB>6</SUB>>", "78": "<(IDENTIFIER,bf,readLine())<SUB>6</SUB>>", "80": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>7</SUB>>", "82": "<(parseInt,parseInt(st.nextToken()))<SUB>7</SUB>>", "84": "<(nextToken,nextToken())<SUB>7</SUB>>", "86": "<(LOCAL,int m: int)<SUB>8</SUB>>", "88": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>8</SUB>>", "90": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>8</SUB>>", "92": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "94": "<(&lt;operator&gt;.assignment,int[][] a = new int[n][m])<SUB>9</SUB>>", "96": "<(&lt;operator&gt;.alloc,new int[n][m])>", "98": "<(IDENTIFIER,m,new int[n][m])<SUB>9</SUB>>", "100": "<(LOCAL,int i: int)<SUB>10</SUB>>", "102": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "104": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "106": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "108": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "110": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(bf.readLine()))<SUB>11</SUB>>", "112": "<(&lt;operator&gt;.alloc,new StringTokenizer(bf.readLine()))<SUB>11</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(bf.readLine()))<SUB>11</SUB>>", "115": "<(IDENTIFIER,bf,readLine())<SUB>11</SUB>>", "117": "<(LOCAL,int j: int)<SUB>12</SUB>>", "119": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>12</SUB>>", "123": "<(IDENTIFIER,m,j &lt; m)<SUB>12</SUB>>", "125": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>12</SUB>>", "129": "<(IDENTIFIER,a,a[i][j] = parseInt(st.nextToken()))<SUB>12</SUB>>", "131": "<(IDENTIFIER,j,a[i][j] = parseInt(st.nextToken()))<SUB>12</SUB>>", "133": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>12</SUB>>", "135": "<(IDENTIFIER,st,nextToken())<SUB>12</SUB>>", "137": "<(&lt;operator&gt;.assignment,int[] max = new int[m])<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.alloc,new int[m])>", "141": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "145": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "147": "<(IDENTIFIER,i,i &lt; n)<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "151": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "153": "<(LOCAL,int j: int)<SUB>18</SUB>>", "155": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "157": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>18</SUB>>", "159": "<(IDENTIFIER,m,j &lt; m)<SUB>18</SUB>>", "161": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "163": "<(CONTROL_STRUCTURE,if (a[i][j] &gt; max[j]),if (a[i][j] &gt; max[j]))<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>19</SUB>>", "167": "<(IDENTIFIER,a,a[i][j] &gt; max[j])<SUB>19</SUB>>", "169": "<(IDENTIFIER,j,a[i][j] &gt; max[j])<SUB>19</SUB>>", "171": "<(IDENTIFIER,max,a[i][j] &gt; max[j])<SUB>19</SUB>>", "173": "<(&lt;operator&gt;.assignment,max[j] = a[i][j])<SUB>19</SUB>>", "175": "<(IDENTIFIER,max,max[j] = a[i][j])<SUB>19</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,a[i][j])<SUB>19</SUB>>", "179": "<(IDENTIFIER,a,max[j] = a[i][j])<SUB>19</SUB>>", "181": "<(IDENTIFIER,j,max[j] = a[i][j])<SUB>19</SUB>>", "183": "<(&lt;operator&gt;.assignment,int[][] pos = new int[m][2])<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.alloc,new int[m][2])>", "187": "<(LITERAL,2,new int[m][2])<SUB>22</SUB>>", "189": "<(LOCAL,int i: int)<SUB>23</SUB>>", "191": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>23</SUB>>", "195": "<(IDENTIFIER,m,i &lt; m)<SUB>23</SUB>>", "197": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.assignment,pos[i][0] = max[i])<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,pos[i])<SUB>24</SUB>>", "203": "<(IDENTIFIER,i,pos[i][0] = max[i])<SUB>24</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>24</SUB>>", "207": "<(IDENTIFIER,i,pos[i][0] = max[i])<SUB>24</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,pos[i][1])<SUB>25</SUB>>", "211": "<(IDENTIFIER,pos,pos[i][1] = i)<SUB>25</SUB>>", "213": "<(LITERAL,1,pos[i][1] = i)<SUB>25</SUB>>", "215": "<(sort,sort(pos, new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        return Integer.compare(o2[0], o1[0]);\\012    }\\012}))<SUB>27</SUB>>", "217": "<(IDENTIFIER,pos,sort(pos, new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        return Integer.compare(o2[0], o1[0]);\\012    }\\012}))<SUB>27</SUB>>", "219": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "221": "<(&lt;operator&gt;.alloc,new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        return Integer.compare(o2[0], o1[0]);\\012    }\\012})<SUB>27</SUB>>", "223": "<(IDENTIFIER,$obj6,new Comparator&lt;int[]&gt;() {\\012\\012    @Override\\012    public int compare(int[] o1, int[] o2) {\\012        return Integer.compare(o2[0], o1[0]);\\012    }\\012})>", "225": "<(LOCAL,int[][] new_a: int[][])<SUB>34</SUB>>", "227": "<(IDENTIFIER,new_a,int[][] new_a = new int[n][Math.min(n, m)])<SUB>34</SUB>>", "229": "<(IDENTIFIER,n,new int[n][Math.min(n, m)])<SUB>34</SUB>>", "231": "<(IDENTIFIER,Math,Math.min(n, m))<SUB>34</SUB>>", "233": "<(IDENTIFIER,m,Math.min(n, m))<SUB>34</SUB>>", "235": "<(LOCAL,int i: int)<SUB>35</SUB>>", "237": "<(IDENTIFIER,i,int i = 0)<SUB>35</SUB>>", "239": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>35</SUB>>", "241": "<(IDENTIFIER,n,i &lt; n)<SUB>35</SUB>>", "243": "<(IDENTIFIER,i,i++)<SUB>35</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; Math.min(n, m)); j++),for (int j = 0; Some(j &lt; Math.min(n, m)); j++))<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "249": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "251": "<(IDENTIFIER,j,j &lt; Math.min(n, m))<SUB>36</SUB>>", "253": "<(IDENTIFIER,Math,Math.min(n, m))<SUB>36</SUB>>", "255": "<(IDENTIFIER,m,Math.min(n, m))<SUB>36</SUB>>", "257": "<(IDENTIFIER,j,j++)<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.assignment,new_a[i][j] = a[i][pos[j][1]])<SUB>37</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,new_a[i])<SUB>37</SUB>>", "263": "<(IDENTIFIER,i,new_a[i][j] = a[i][pos[j][1]])<SUB>37</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,a[i][pos[j][1]])<SUB>37</SUB>>", "267": "<(IDENTIFIER,a,new_a[i][j] = a[i][pos[j][1]])<SUB>37</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,pos[j][1])<SUB>37</SUB>>", "271": "<(IDENTIFIER,pos,new_a[i][j] = a[i][pos[j][1]])<SUB>37</SUB>>", "273": "<(LITERAL,1,new_a[i][j] = a[i][pos[j][1]])<SUB>37</SUB>>", "275": "<(&lt;operator&gt;.assignment,int exp = 1)<SUB>40</SUB>>", "277": "<(LITERAL,1,int exp = 1)<SUB>40</SUB>>", "279": "<(LOCAL,int i: int)<SUB>40</SUB>>", "281": "<(IDENTIFIER,i,int i = 0)<SUB>40</SUB>>", "283": "<(&lt;operator&gt;.lessThan,i &lt; Math.min(n, m))<SUB>40</SUB>>", "285": "<(min,Math.min(n, m))<SUB>40</SUB>>", "287": "<(IDENTIFIER,n,Math.min(n, m))<SUB>40</SUB>>", "289": "<(&lt;operator&gt;.postIncrement,i++)<SUB>40</SUB>>", "291": "<(&lt;operator&gt;.assignmentMultiplication,exp *= n)<SUB>40</SUB>>", "293": "<(IDENTIFIER,n,exp *= n)<SUB>40</SUB>>", "295": "<(&lt;operator&gt;.assignment,int maxval = -1)<SUB>41</SUB>>", "297": "<(&lt;operator&gt;.minus,-1)<SUB>41</SUB>>", "299": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; exp); i++),for (int i = 0; Some(i &lt; exp); i++))<SUB>42</SUB>>", "301": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>42</SUB>>", "303": "<(LITERAL,0,int i = 0)<SUB>42</SUB>>", "305": "<(IDENTIFIER,i,i &lt; exp)<SUB>42</SUB>>", "307": "<(&lt;operator&gt;.postIncrement,i++)<SUB>42</SUB>>", "309": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "311": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>44</SUB>>", "313": "<(LITERAL,0,int sum = 0)<SUB>44</SUB>>", "315": "<(LOCAL,int j: int)<SUB>45</SUB>>", "317": "<(IDENTIFIER,j,int j = 0)<SUB>45</SUB>>", "319": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>45</SUB>>", "321": "<(IDENTIFIER,n,j &lt; n)<SUB>45</SUB>>", "323": "<(IDENTIFIER,j,j++)<SUB>45</SUB>>", "325": "<(LOCAL,int toAdd: int)<SUB>46</SUB>>", "327": "<(IDENTIFIER,toAdd,int toAdd = 0)<SUB>46</SUB>>", "329": "<(LOCAL,int val: int)<SUB>47</SUB>>", "331": "<(IDENTIFIER,val,int val = i)<SUB>47</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; Math.min(n, m)); k++),for (int k = 0; Some(k &lt; Math.min(n, m)); k++))<SUB>48</SUB>>", "335": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>48</SUB>>", "337": "<(LITERAL,0,int k = 0)<SUB>48</SUB>>", "339": "<(IDENTIFIER,k,k &lt; Math.min(n, m))<SUB>48</SUB>>", "341": "<(IDENTIFIER,Math,Math.min(n, m))<SUB>48</SUB>>", "343": "<(IDENTIFIER,m,Math.min(n, m))<SUB>48</SUB>>", "345": "<(IDENTIFIER,k,k++)<SUB>48</SUB>>", "347": "<(LOCAL,int tooAdd: int)<SUB>49</SUB>>", "349": "<(IDENTIFIER,tooAdd,int tooAdd = new_a[(j + val) % n][k])<SUB>49</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,new_a[(j + val) % n])<SUB>49</SUB>>", "353": "<(&lt;operator&gt;.modulo,(j + val) % n)<SUB>49</SUB>>", "355": "<(IDENTIFIER,j,j + val)<SUB>49</SUB>>", "357": "<(IDENTIFIER,n,(j + val) % n)<SUB>49</SUB>>", "359": "<(&lt;operator&gt;.assignmentDivision,val /= n)<SUB>50</SUB>>", "361": "<(IDENTIFIER,n,val /= n)<SUB>50</SUB>>", "363": "<(&lt;operator&gt;.greaterThan,tooAdd &gt; toAdd)<SUB>51</SUB>>", "365": "<(IDENTIFIER,toAdd,tooAdd &gt; toAdd)<SUB>51</SUB>>", "367": "<(IDENTIFIER,toAdd,toAdd = tooAdd)<SUB>51</SUB>>", "369": "<(&lt;operator&gt;.assignmentPlus,sum += toAdd)<SUB>53</SUB>>", "371": "<(IDENTIFIER,toAdd,sum += toAdd)<SUB>53</SUB>>", "373": "<(&lt;operator&gt;.greaterThan,sum &gt; maxval)<SUB>55</SUB>>", "375": "<(IDENTIFIER,maxval,sum &gt; maxval)<SUB>55</SUB>>", "377": "<(IDENTIFIER,maxval,maxval = sum)<SUB>55</SUB>>", "379": "<(println,println(maxval))<SUB>57</SUB>>", "381": "<(IDENTIFIER,maxval,println(maxval))<SUB>57</SUB>>", "383": "<(IDENTIFIER,out,close())<SUB>65</SUB>>", "385": "<(IDENTIFIER,System,System.exit(0))<SUB>65</SUB>>", "387": "<(MODIFIER,PUBLIC)>", "389": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}