{"edges": [["21", "22"], ["21", "23"], ["21", "214"], ["21", "215"], ["21", "216"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "47"], ["23", "48"], ["23", "52"], ["23", "63"], ["23", "64"], ["23", "68"], ["23", "83"], ["23", "84"], ["23", "87"], ["23", "94"], ["23", "95"], ["23", "98"], ["23", "99"], ["23", "104"], ["23", "105"], ["23", "108"], ["23", "207"], ["23", "212"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "44"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "80"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "118"], ["112", "119"], ["112", "126"], ["112", "133"], ["112", "137"], ["112", "148"], ["112", "152"], ["112", "205"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["150", "151"], ["152", "153"], ["152", "156"], ["152", "167"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "164"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["168", "169"], ["168", "172"], ["168", "188"], ["169", "170"], ["169", "171"], ["172", "173"], ["173", "174"], ["173", "177"], ["173", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["189", "190"], ["190", "191"], ["190", "194"], ["190", "199"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["199", "200"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["24", "30"], ["27", "33"], ["31", "34"], ["34", "38"], ["36", "43"], ["40", "50"], ["48", "55"], ["52", "66"], ["64", "69"], ["84", "88"], ["95", "101"], ["99", "105"], ["105", "109"], ["207", "212"], ["212", "216"], ["26", "24"], ["28", "27"], ["33", "31"], ["38", "36"], ["41", "44"], ["44", "40"], ["50", "48"], ["53", "60"], ["56", "52"], ["66", "64"], ["69", "76"], ["69", "84"], ["88", "91"], ["88", "95"], ["91", "95"], ["101", "99"], ["109", "114"], ["109", "210"], ["208", "207"], ["30", "28"], ["43", "41"], ["55", "53"], ["58", "56"], ["73", "80"], ["80", "84"], ["119", "129"], ["126", "135"], ["133", "140"], ["137", "150"], ["148", "153"], ["205", "109"], ["210", "208"], ["60", "58"], ["74", "77"], ["77", "73"], ["114", "210"], ["114", "122"], ["121", "119"], ["127", "130"], ["130", "126"], ["135", "133"], ["138", "145"], ["141", "137"], ["150", "148"], ["153", "160"], ["153", "169"], ["76", "74"], ["122", "121"], ["129", "127"], ["140", "138"], ["143", "141"], ["157", "164"], ["164", "205"], ["145", "143"], ["158", "161"], ["161", "157"], ["169", "174"], ["169", "191"], ["160", "158"], ["174", "179"], ["174", "185"], ["177", "205"], ["179", "177"], ["183", "205"], ["191", "196"], ["191", "202"], ["194", "205"], ["185", "183"], ["196", "194"], ["200", "205"], ["202", "200"], ["21", "26"], ["22", "216"], ["24", "216"], ["27", "216"], ["31", "216"], ["34", "216"], ["36", "216"], ["40", "216"], ["48", "216"], ["56", "216"], ["52", "216"], ["66", "216"], ["64", "216"], ["64", "216"], ["69", "216"], ["73", "216"], ["80", "216"], ["80", "216"], ["84", "216"], ["84", "216"], ["88", "216"], ["88", "216"], ["88", "216"], ["91", "216"], ["91", "216"], ["95", "216"], ["101", "216"], ["99", "216"], ["99", "216"], ["105", "216"], ["105", "216"], ["109", "216"], ["109", "216"], ["109", "216"], ["114", "216"], ["114", "216"], ["121", "216"], ["119", "216"], ["119", "216"], ["126", "216"], ["133", "216"], ["145", "216"], ["143", "216"], ["141", "216"], ["137", "216"], ["150", "216"], ["148", "216"], ["148", "216"], ["153", "216"], ["153", "216"], ["153", "216"], ["169", "216"], ["169", "216"], ["169", "216"], ["191", "216"], ["191", "216"], ["202", "216"], ["200", "216"], ["200", "216"], ["196", "216"], ["194", "216"], ["194", "216"], ["174", "216"], ["174", "216"], ["185", "216"], ["183", "216"], ["183", "216"], ["179", "216"], ["177", "216"], ["177", "216"], ["161", "216"], ["157", "216"], ["164", "216"], ["164", "216"], ["205", "216"], ["205", "216"], ["207", "216"], ["212", "216"], ["212", "216"], ["21", "22"], ["21", "24"], ["21", "31"], ["38", "36"], ["50", "48"], ["66", "64"], ["21", "84"], ["21", "95"], ["101", "99"], ["101", "99"], ["21", "105"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["27", "40"], ["21", "40"], ["40", "52"], ["21", "52"], ["60", "52"], ["60", "52"], ["21", "91"], ["52", "207"], ["80", "207"], ["137", "207"], ["164", "207"], ["21", "207"], ["27", "212"], ["21", "212"], ["34", "38"], ["21", "38"], ["21", "44"], ["38", "50"], ["21", "50"], ["21", "56"], ["60", "56"], ["60", "56"], ["50", "66"], ["21", "66"], ["48", "69"], ["21", "69"], ["64", "69"], ["69", "88"], ["21", "88"], ["69", "88"], ["60", "101"], ["21", "101"], ["95", "109"], ["200", "109"], ["177", "109"], ["21", "109"], ["99", "109"], ["194", "109"], ["183", "109"], ["121", "119"], ["121", "119"], ["135", "133"], ["150", "148"], ["21", "58"], ["60", "58"], ["60", "58"], ["52", "73"], ["21", "73"], ["73", "80"], ["21", "80"], ["52", "126"], ["80", "126"], ["137", "126"], ["164", "126"], ["21", "126"], ["119", "126"], ["80", "137"], ["126", "137"], ["164", "137"], ["21", "137"], ["119", "137"], ["145", "137"], ["145", "137"], ["114", "205"], ["21", "205"], ["36", "60"], ["21", "60"], ["21", "77"], ["105", "114"], ["205", "114"], ["21", "114"], ["109", "121"], ["21", "121"], ["109", "121"], ["21", "130"], ["119", "130"], ["66", "135"], ["150", "135"], ["21", "135"], ["21", "141"], ["119", "141"], ["145", "141"], ["145", "141"], ["135", "150"], ["21", "150"], ["133", "153"], ["21", "153"], ["148", "153"], ["109", "122"], ["21", "122"], ["109", "122"], ["21", "143"], ["119", "143"], ["145", "143"], ["145", "143"], ["80", "157"], ["137", "157"], ["164", "157"], ["21", "157"], ["119", "157"], ["80", "164"], ["157", "164"], ["21", "164"], ["101", "145"], ["21", "145"], ["21", "161"], ["119", "161"], ["153", "169"], ["21", "169"], ["153", "169"], ["21", "177"], ["119", "177"], ["84", "174"], ["91", "174"], ["191", "174"], ["21", "174"], ["185", "183"], ["185", "183"], ["196", "194"], ["196", "194"], ["21", "179"], ["119", "179"], ["84", "191"], ["91", "191"], ["174", "191"], ["21", "191"], ["21", "200"], ["119", "200"], ["21", "185"], ["119", "185"], ["21", "196"], ["119", "196"], ["21", "202"], ["119", "202"], ["69", "73"], ["69", "77"], ["69", "74"], ["69", "76"], ["69", "80"], ["88", "91"], ["109", "114"], ["114", "145"], ["114", "150"], ["114", "119"], ["114", "121"], ["114", "153"], ["114", "129"], ["114", "138"], ["114", "148"], ["114", "137"], ["114", "130"], ["114", "127"], ["114", "205"], ["114", "141"], ["114", "122"], ["114", "140"], ["114", "143"], ["114", "126"], ["114", "135"], ["114", "109"], ["114", "133"], ["153", "169"], ["153", "161"], ["153", "164"], ["153", "158"], ["153", "160"], ["153", "157"], ["169", "191"], ["169", "174"], ["174", "179"], ["174", "185"], ["174", "183"], ["174", "177"], ["191", "196"], ["191", "194"], ["191", "202"], ["191", "200"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "6": "<(LOCAL,Reader sc: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,sc,ANY sc = new Reader())<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new Reader())<SUB>4</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = i())<SUB>5</SUB>>", "39": "<(IDENTIFIER,sc,i())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>6</SUB>>", "43": "<(FIELD_IDENTIFIER,out,out)<SUB>6</SUB>>", "45": "<(LITERAL,&quot;? &quot;,&quot;? &quot; + 1)<SUB>6</SUB>>", "47": "<(LOCAL,int a: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,a,int a = i())<SUB>7</SUB>>", "51": "<(IDENTIFIER,sc,i())<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "57": "<(LITERAL,&quot;? &quot;,&quot;? &quot; + (1 + n / 2))<SUB>8</SUB>>", "59": "<(LITERAL,1,1 + n / 2)<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,n / 2)<SUB>8</SUB>>", "63": "<(LOCAL,int b: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,b,int b = i())<SUB>9</SUB>>", "67": "<(IDENTIFIER,sc,i())<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.equals,a == b)<SUB>10</SUB>>", "71": "<(IDENTIFIER,b,a == b)<SUB>10</SUB>>", "73": "<(println,System.out.println(&quot;! &quot; + 1))<SUB>12</SUB>>", "75": "<(IDENTIFIER,System,System.out.println(&quot;! &quot; + 1))<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.addition,&quot;! &quot; + 1)<SUB>12</SUB>>", "79": "<(LITERAL,1,&quot;! &quot; + 1)<SUB>12</SUB>>", "81": "<(IDENTIFIER,System,System.exit(0))<SUB>13</SUB>>", "83": "<(LOCAL,int inv: int)<SUB>15</SUB>>", "85": "<(IDENTIFIER,inv,int inv = 0)<SUB>15</SUB>>", "87": "<(CONTROL_STRUCTURE,if (a &gt; b),if (a &gt; b))<SUB>16</SUB>>", "89": "<(IDENTIFIER,a,a &gt; b)<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.assignment,inv = 1)<SUB>17</SUB>>", "93": "<(LITERAL,1,inv = 1)<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.assignment,int low = 2)<SUB>19</SUB>>", "97": "<(LITERAL,2,int low = 2)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.assignment,int high = n / 2)<SUB>20</SUB>>", "101": "<(&lt;operator&gt;.division,n / 2)<SUB>20</SUB>>", "103": "<(LITERAL,2,n / 2)<SUB>20</SUB>>", "105": "<(&lt;operator&gt;.assignment,int q = 0)<SUB>21</SUB>>", "107": "<(LITERAL,0,int q = 0)<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.lessEqualsThan,low &lt;= high)<SUB>22</SUB>>", "111": "<(IDENTIFIER,high,low &lt;= high)<SUB>22</SUB>>", "113": "<(CONTROL_STRUCTURE,if (q == 60),if (q == 60))<SUB>24</SUB>>", "115": "<(IDENTIFIER,q,q == 60)<SUB>24</SUB>>", "117": "<(CONTROL_STRUCTURE,break;,break;)<SUB>25</SUB>>", "119": "<(&lt;operator&gt;.assignment,int mid = (low + high) / 2)<SUB>26</SUB>>", "121": "<(&lt;operator&gt;.division,(low + high) / 2)<SUB>26</SUB>>", "123": "<(IDENTIFIER,low,low + high)<SUB>26</SUB>>", "125": "<(LITERAL,2,(low + high) / 2)<SUB>26</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "129": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "131": "<(LITERAL,&quot;? &quot;,&quot;? &quot; + mid)<SUB>27</SUB>>", "133": "<(&lt;operator&gt;.assignment,a = i())<SUB>28</SUB>>", "135": "<(i,i())<SUB>28</SUB>>", "137": "<(println,System.out.println(&quot;? &quot; + (mid + n / 2)))<SUB>29</SUB>>", "139": "<(IDENTIFIER,System,System.out.println(&quot;? &quot; + (mid + n / 2)))<SUB>29</SUB>>", "141": "<(&lt;operator&gt;.addition,&quot;? &quot; + (mid + n / 2))<SUB>29</SUB>>", "143": "<(&lt;operator&gt;.addition,mid + n / 2)<SUB>29</SUB>>", "145": "<(&lt;operator&gt;.division,n / 2)<SUB>29</SUB>>", "147": "<(LITERAL,2,n / 2)<SUB>29</SUB>>", "149": "<(IDENTIFIER,b,b = i())<SUB>30</SUB>>", "151": "<(IDENTIFIER,sc,i())<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.equals,a == b)<SUB>31</SUB>>", "155": "<(IDENTIFIER,b,a == b)<SUB>31</SUB>>", "157": "<(println,System.out.println(&quot;! &quot; + mid))<SUB>33</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(&quot;! &quot; + mid))<SUB>33</SUB>>", "161": "<(&lt;operator&gt;.addition,&quot;! &quot; + mid)<SUB>33</SUB>>", "163": "<(IDENTIFIER,mid,&quot;! &quot; + mid)<SUB>33</SUB>>", "165": "<(IDENTIFIER,System,System.exit(0))<SUB>34</SUB>>", "167": "<(CONTROL_STRUCTURE,else,else)<SUB>36</SUB>>", "169": "<(&lt;operator&gt;.lessThan,a &lt; b)<SUB>36</SUB>>", "171": "<(IDENTIFIER,b,a &lt; b)<SUB>36</SUB>>", "173": "<(CONTROL_STRUCTURE,if (inv == 0),if (inv == 0))<SUB>38</SUB>>", "175": "<(IDENTIFIER,inv,inv == 0)<SUB>38</SUB>>", "177": "<(&lt;operator&gt;.assignment,low = mid + 1)<SUB>39</SUB>>", "179": "<(&lt;operator&gt;.addition,mid + 1)<SUB>39</SUB>>", "181": "<(LITERAL,1,mid + 1)<SUB>39</SUB>>", "183": "<(&lt;operator&gt;.assignment,high = mid - 1)<SUB>41</SUB>>", "185": "<(&lt;operator&gt;.subtraction,mid - 1)<SUB>41</SUB>>", "187": "<(LITERAL,1,mid - 1)<SUB>41</SUB>>", "189": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "191": "<(&lt;operator&gt;.equals,inv == 0)<SUB>46</SUB>>", "193": "<(LITERAL,0,inv == 0)<SUB>46</SUB>>", "195": "<(IDENTIFIER,high,high = mid - 1)<SUB>47</SUB>>", "197": "<(IDENTIFIER,mid,mid - 1)<SUB>47</SUB>>", "199": "<(CONTROL_STRUCTURE,else,else)<SUB>49</SUB>>", "201": "<(IDENTIFIER,low,low = mid + 1)<SUB>49</SUB>>", "203": "<(IDENTIFIER,mid,mid + 1)<SUB>49</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,q++)<SUB>51</SUB>>", "207": "<(println,System.out.println(&quot;! -1&quot;))<SUB>53</SUB>>", "209": "<(IDENTIFIER,System,System.out.println(&quot;! -1&quot;))<SUB>53</SUB>>", "211": "<(LITERAL,&quot;! -1&quot;,System.out.println(&quot;! -1&quot;))<SUB>53</SUB>>", "213": "<(IDENTIFIER,out,flush())<SUB>54</SUB>>", "215": "<(MODIFIER,STATIC)>"}}