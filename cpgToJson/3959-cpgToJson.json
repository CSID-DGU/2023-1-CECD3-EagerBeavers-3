{"edges": [["21", "23"], ["21", "297"], ["21", "298"], ["21", "299"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "46"], ["23", "47"], ["23", "51"], ["23", "93"], ["23", "94"], ["23", "99"], ["23", "100"], ["23", "105"], ["23", "106"], ["23", "112"], ["23", "113"], ["23", "118"], ["23", "195"], ["23", "196"], ["23", "199"], ["23", "200"], ["23", "205"], ["23", "279"], ["23", "282"], ["23", "295"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "78"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "86"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["108", "109"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["118", "123"], ["118", "126"], ["118", "128"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "178"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "141"], ["133", "143"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["152", "153"], ["152", "162"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["166", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["187", "192"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "213"], ["205", "215"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["215", "216"], ["215", "217"], ["215", "220"], ["215", "221"], ["215", "226"], ["215", "262"], ["215", "267"], ["217", "218"], ["217", "219"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["226", "231"], ["226", "234"], ["226", "236"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "244"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["245", "246"], ["245", "255"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["269", "272"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "294"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["291", "292"], ["291", "293"], ["295", "296"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "44"], ["42", "49"], ["47", "53"], ["94", "102"], ["100", "109"], ["106", "115"], ["113", "120"], ["196", "202"], ["200", "207"], ["279", "286"], ["282", "295"], ["295", "299"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["44", "42"], ["49", "47"], ["53", "56"], ["56", "64"], ["56", "96"], ["59", "56"], ["96", "94"], ["102", "100"], ["108", "106"], ["115", "113"], ["120", "123"], ["123", "130"], ["123", "196"], ["126", "123"], ["202", "200"], ["207", "210"], ["210", "217"], ["210", "279"], ["213", "210"], ["284", "282"], ["34", "32"], ["109", "108"], ["130", "135"], ["217", "223"], ["221", "228"], ["267", "213"], ["285", "284"], ["64", "67"], ["67", "76"], ["67", "59"], ["70", "67"], ["135", "138"], ["138", "147"], ["138", "179"], ["141", "138"], ["179", "184"], ["179", "126"], ["223", "221"], ["228", "231"], ["231", "240"], ["231", "263"], ["234", "231"], ["263", "213"], ["263", "273"], ["269", "267"], ["286", "291"], ["289", "285"], ["74", "80"], ["183", "126"], ["272", "269"], ["291", "289"], ["76", "74"], ["79", "87"], ["79", "70"], ["86", "70"], ["145", "158"], ["145", "141"], ["184", "189"], ["187", "183"], ["238", "249"], ["238", "234"], ["273", "276"], ["276", "272"], ["80", "79"], ["80", "83"], ["83", "79"], ["87", "90"], ["90", "86"], ["146", "145"], ["153", "163"], ["162", "141"], ["189", "192"], ["192", "187"], ["239", "238"], ["246", "258"], ["255", "234"], ["147", "146"], ["155", "153"], ["163", "168"], ["166", "162"], ["240", "239"], ["248", "246"], ["257", "255"], ["156", "155"], ["168", "175"], ["171", "166"], ["249", "252"], ["252", "248"], ["258", "257"], ["158", "156"], ["173", "171"], ["175", "173"], ["21", "26"], ["22", "299"], ["24", "299"], ["27", "299"], ["28", "299"], ["31", "299"], ["31", "299"], ["37", "299"], ["44", "299"], ["42", "299"], ["42", "299"], ["47", "299"], ["47", "299"], ["47", "299"], ["53", "299"], ["56", "299"], ["56", "299"], ["94", "299"], ["94", "299"], ["102", "299"], ["100", "299"], ["100", "299"], ["106", "299"], ["106", "299"], ["106", "299"], ["115", "299"], ["113", "299"], ["113", "299"], ["120", "299"], ["123", "299"], ["123", "299"], ["196", "299"], ["202", "299"], ["200", "299"], ["200", "299"], ["207", "299"], ["210", "299"], ["210", "299"], ["210", "299"], ["279", "299"], ["286", "299"], ["285", "299"], ["289", "299"], ["289", "299"], ["285", "299"], ["284", "299"], ["282", "299"], ["282", "299"], ["295", "299"], ["295", "299"], ["217", "299"], ["221", "299"], ["223", "299"], ["221", "299"], ["221", "299"], ["228", "299"], ["231", "299"], ["231", "299"], ["231", "299"], ["263", "299"], ["263", "299"], ["269", "299"], ["273", "299"], ["272", "299"], ["272", "299"], ["269", "299"], ["267", "299"], ["267", "299"], ["213", "299"], ["239", "299"], ["238", "299"], ["238", "299"], ["248", "299"], ["246", "299"], ["255", "299"], ["257", "299"], ["255", "299"], ["234", "299"], ["130", "299"], ["135", "299"], ["138", "299"], ["138", "299"], ["138", "299"], ["179", "299"], ["179", "299"], ["183", "299"], ["187", "299"], ["192", "299"], ["187", "299"], ["183", "299"], ["183", "299"], ["126", "299"], ["146", "299"], ["145", "299"], ["145", "299"], ["155", "299"], ["153", "299"], ["162", "299"], ["166", "299"], ["173", "299"], ["166", "299"], ["162", "299"], ["162", "299"], ["141", "299"], ["64", "299"], ["67", "299"], ["67", "299"], ["59", "299"], ["76", "299"], ["74", "299"], ["74", "299"], ["80", "299"], ["79", "299"], ["79", "299"], ["79", "299"], ["86", "299"], ["86", "299"], ["70", "299"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["44", "42"], ["49", "47"], ["96", "94"], ["96", "94"], ["102", "100"], ["102", "100"], ["108", "106"], ["115", "113"], ["115", "113"], ["21", "196"], ["202", "200"], ["202", "200"], ["196", "279"], ["267", "279"], ["21", "279"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "53"], ["21", "120"], ["21", "207"], ["42", "279"], ["31", "282"], ["21", "282"], ["284", "282"], ["284", "282"], ["282", "295"], ["21", "295"], ["27", "39"], ["21", "39"], ["39", "44"], ["21", "44"], ["37", "49"], ["21", "49"], ["53", "56"], ["59", "56"], ["21", "56"], ["49", "56"], ["67", "56"], ["56", "59"], ["83", "59"], ["21", "59"], ["56", "96"], ["21", "96"], ["96", "102"], ["21", "102"], ["94", "102"], ["109", "108"], ["109", "108"], ["21", "115"], ["109", "115"], ["120", "123"], ["126", "123"], ["21", "123"], ["113", "123"], ["179", "126"], ["192", "126"], ["21", "126"], ["123", "130"], ["21", "130"], ["21", "202"], ["100", "202"], ["155", "202"], ["207", "210"], ["213", "210"], ["21", "210"], ["200", "210"], ["252", "210"], ["263", "213"], ["273", "213"], ["21", "213"], ["210", "217"], ["21", "217"], ["223", "221"], ["223", "221"], ["269", "267"], ["269", "267"], ["269", "267"], ["285", "284"], ["285", "284"], ["21", "284"], ["21", "64"], ["21", "109"], ["102", "109"], ["21", "135"], ["21", "228"], ["286", "285"], ["289", "285"], ["289", "285"], ["64", "67"], ["70", "67"], ["21", "67"], ["56", "67"], ["67", "70"], ["83", "70"], ["90", "70"], ["21", "70"], ["76", "74"], ["135", "138"], ["141", "138"], ["21", "138"], ["115", "138"], ["147", "141"], ["175", "141"], ["21", "141"], ["146", "179"], ["173", "179"], ["21", "179"], ["123", "179"], ["130", "179"], ["153", "179"], ["187", "183"], ["187", "183"], ["187", "183"], ["123", "223"], ["21", "223"], ["228", "231"], ["234", "231"], ["21", "231"], ["202", "231"], ["257", "231"], ["240", "234"], ["21", "234"], ["217", "263"], ["246", "263"], ["21", "263"], ["239", "263"], ["210", "263"], ["187", "269"], ["166", "269"], ["21", "269"], ["196", "269"], ["267", "269"], ["273", "269"], ["273", "269"], ["106", "269"], ["279", "286"], ["21", "286"], ["291", "289"], ["21", "289"], ["291", "289"], ["90", "86"], ["90", "86"], ["273", "272"], ["273", "272"], ["106", "272"], ["21", "291"], ["196", "291"], ["267", "291"], ["44", "76"], ["21", "76"], ["80", "79"], ["80", "79"], ["83", "79"], ["83", "79"], ["47", "86"], ["146", "145"], ["146", "145"], ["21", "145"], ["155", "153"], ["155", "153"], ["166", "162"], ["166", "162"], ["166", "162"], ["166", "187"], ["21", "187"], ["106", "187"], ["183", "187"], ["162", "187"], ["192", "187"], ["192", "187"], ["239", "238"], ["239", "238"], ["21", "238"], ["248", "246"], ["248", "246"], ["257", "255"], ["257", "255"], ["192", "273"], ["21", "273"], ["263", "273"], ["74", "80"], ["21", "80"], ["56", "83"], ["21", "83"], ["67", "83"], ["21", "90"], ["67", "90"], ["83", "90"], ["147", "146"], ["147", "146"], ["173", "146"], ["21", "146"], ["123", "146"], ["130", "153"], ["21", "153"], ["21", "192"], ["179", "192"], ["240", "239"], ["240", "239"], ["21", "239"], ["210", "239"], ["217", "246"], ["21", "246"], ["221", "255"], ["21", "255"], ["21", "147"], ["138", "147"], ["47", "155"], ["21", "155"], ["100", "155"], ["187", "166"], ["21", "166"], ["106", "166"], ["183", "166"], ["162", "166"], ["21", "240"], ["231", "240"], ["47", "248"], ["257", "248"], ["252", "248"], ["252", "248"], ["47", "257"], ["248", "257"], ["231", "257"], ["21", "257"], ["210", "252"], ["21", "252"], ["147", "158"], ["21", "158"], ["100", "158"], ["155", "158"], ["146", "173"], ["21", "173"], ["175", "173"], ["175", "173"], ["21", "175"], ["147", "175"], ["56", "64"], ["56", "56"], ["56", "67"], ["56", "59"], ["123", "179"], ["123", "138"], ["123", "130"], ["123", "123"], ["123", "126"], ["123", "135"], ["210", "213"], ["210", "228"], ["210", "223"], ["210", "231"], ["210", "221"], ["210", "210"], ["210", "217"], ["210", "263"], ["67", "67"], ["67", "74"], ["67", "76"], ["67", "79"], ["67", "80"], ["67", "70"], ["138", "145"], ["138", "146"], ["138", "138"], ["138", "141"], ["138", "147"], ["179", "192"], ["179", "189"], ["179", "187"], ["179", "184"], ["179", "183"], ["231", "240"], ["231", "238"], ["231", "231"], ["231", "239"], ["231", "234"], ["263", "273"], ["263", "272"], ["263", "267"], ["263", "276"], ["263", "269"], ["79", "87"], ["79", "90"], ["79", "86"], ["145", "163"], ["145", "162"], ["145", "153"], ["145", "168"], ["145", "173"], ["145", "155"], ["145", "158"], ["145", "171"], ["145", "166"], ["145", "175"], ["145", "156"], ["238", "257"], ["238", "255"], ["238", "246"], ["238", "258"], ["238", "249"], ["238", "252"], ["238", "248"], ["80", "83"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out, false))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out, false))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out, false))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out, false))<SUB>3</SUB>>", "35": "<(LITERAL,false,new PrintWriter(System.out, false))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,double k: double)<SUB>5</SUB>>", "43": "<(IDENTIFIER,k,double k = nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,scanner,nextInt())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,long[] graph = new long[n])<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.alloc,new long[n])>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "63": "<(LOCAL,int j: int)<SUB>8</SUB>>", "65": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>8</SUB>>", "69": "<(IDENTIFIER,n,j &lt; n)<SUB>8</SUB>>", "71": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "73": "<(LOCAL,int val: int)<SUB>9</SUB>>", "75": "<(IDENTIFIER,val,int val = nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,scanner,nextInt())<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.logicalOr,val == 1 || i == j)<SUB>10</SUB>>", "81": "<(IDENTIFIER,val,val == 1)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.equals,i == j)<SUB>10</SUB>>", "85": "<(IDENTIFIER,j,i == j)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,graph[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,graph[i] |= 1L &lt;&lt; j)<SUB>10</SUB>>", "91": "<(LITERAL,1L,1L &lt;&lt; j)<SUB>10</SUB>>", "93": "<(LOCAL,int szLeft: int)<SUB>14</SUB>>", "95": "<(IDENTIFIER,szLeft,int szLeft = n / 2)<SUB>14</SUB>>", "97": "<(IDENTIFIER,n,n / 2)<SUB>14</SUB>>", "99": "<(LOCAL,int szRight: int)<SUB>15</SUB>>", "101": "<(IDENTIFIER,szRight,int szRight = n - szLeft)<SUB>15</SUB>>", "103": "<(IDENTIFIER,n,n - szLeft)<SUB>15</SUB>>", "105": "<(LOCAL,int[] dp: int[])<SUB>17</SUB>>", "107": "<(IDENTIFIER,dp,int[] dp = new int[1 &lt;&lt; szLeft])<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; szLeft)<SUB>17</SUB>>", "111": "<(IDENTIFIER,szLeft,1 &lt;&lt; szLeft)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,int maxMask = 1 &lt;&lt; szLeft)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; szLeft)<SUB>18</SUB>>", "117": "<(IDENTIFIER,szLeft,1 &lt;&lt; szLeft)<SUB>18</SUB>>", "119": "<(LOCAL,int mask: int)<SUB>20</SUB>>", "121": "<(IDENTIFIER,mask,int mask = 1)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.lessThan,mask &lt; maxMask)<SUB>20</SUB>>", "125": "<(IDENTIFIER,maxMask,mask &lt; maxMask)<SUB>20</SUB>>", "127": "<(IDENTIFIER,mask,mask++)<SUB>20</SUB>>", "129": "<(LOCAL,int curMask: int)<SUB>21</SUB>>", "131": "<(IDENTIFIER,curMask,int curMask = mask)<SUB>21</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; szLeft); j++),for (int j = 0; Some(j &lt; szLeft); j++))<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "137": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "139": "<(IDENTIFIER,j,j &lt; szLeft)<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; j) &amp; mask) &gt; 0)<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>24</SUB>>", "149": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>24</SUB>>", "151": "<(LITERAL,0,((1 &lt;&lt; j) &amp; mask) &gt; 0)<SUB>24</SUB>>", "153": "<(&lt;operators&gt;.assignmentAnd,curMask &amp;= graph[j + szRight] &gt;&gt; szRight)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.logicalShiftRight,graph[j + szRight] &gt;&gt; szRight)<SUB>26</SUB>>", "157": "<(IDENTIFIER,graph,graph[j + szRight] &gt;&gt; szRight)<SUB>26</SUB>>", "159": "<(IDENTIFIER,j,j + szRight)<SUB>26</SUB>>", "161": "<(IDENTIFIER,szRight,graph[j + szRight] &gt;&gt; szRight)<SUB>26</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>29</SUB>>", "165": "<(IDENTIFIER,mask,dp[mask] = Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>29</SUB>>", "167": "<(IDENTIFIER,Math,Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>29</SUB>>", "169": "<(IDENTIFIER,dp,Math.max(dp[mask], dp[mask ^ (1 &lt;&lt; j)]))<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; j)])<SUB>29</SUB>>", "173": "<(&lt;operator&gt;.xor,mask ^ (1 &lt;&lt; j))<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>29</SUB>>", "177": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.equals,mask == curMask)<SUB>33</SUB>>", "181": "<(IDENTIFIER,curMask,mask == curMask)<SUB>33</SUB>>", "183": "<(&lt;operator&gt;.assignment,dp[mask] = Math.max(dp[mask], Integer.bitCount(mask)))<SUB>34</SUB>>", "185": "<(IDENTIFIER,dp,dp[mask] = Math.max(dp[mask], Integer.bitCount(mask)))<SUB>34</SUB>>", "187": "<(max,Math.max(dp[mask], Integer.bitCount(mask)))<SUB>34</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>34</SUB>>", "191": "<(IDENTIFIER,mask,Math.max(dp[mask], Integer.bitCount(mask)))<SUB>34</SUB>>", "193": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>34</SUB>>", "195": "<(LOCAL,int ans: int)<SUB>37</SUB>>", "197": "<(IDENTIFIER,ans,int ans = 0)<SUB>37</SUB>>", "199": "<(LOCAL,int rmaxMask: int)<SUB>38</SUB>>", "201": "<(IDENTIFIER,rmaxMask,int rmaxMask = 1 &lt;&lt; szRight)<SUB>38</SUB>>", "203": "<(LITERAL,1,1 &lt;&lt; szRight)<SUB>38</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; rmaxMask); mask++),for (int mask = 0; Some(mask &lt; rmaxMask); mask++))<SUB>39</SUB>>", "207": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>39</SUB>>", "209": "<(LITERAL,0,int mask = 0)<SUB>39</SUB>>", "211": "<(IDENTIFIER,mask,mask &lt; rmaxMask)<SUB>39</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>39</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "217": "<(&lt;operator&gt;.assignment,int curMask = mask)<SUB>41</SUB>>", "219": "<(IDENTIFIER,mask,int curMask = mask)<SUB>41</SUB>>", "221": "<(&lt;operator&gt;.assignment,int oMask = maxMask - 1)<SUB>43</SUB>>", "223": "<(&lt;operator&gt;.subtraction,maxMask - 1)<SUB>43</SUB>>", "225": "<(LITERAL,1,maxMask - 1)<SUB>43</SUB>>", "227": "<(LOCAL,int j: int)<SUB>44</SUB>>", "229": "<(IDENTIFIER,j,int j = 0)<SUB>44</SUB>>", "231": "<(&lt;operator&gt;.lessThan,j &lt; szRight)<SUB>44</SUB>>", "233": "<(IDENTIFIER,szRight,j &lt; szRight)<SUB>44</SUB>>", "235": "<(IDENTIFIER,j,j++)<SUB>44</SUB>>", "237": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; mask) &gt; 0),if (((1 &lt;&lt; j) &amp; mask) &gt; 0))<SUB>45</SUB>>", "239": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; mask)<SUB>45</SUB>>", "241": "<(LITERAL,1,1 &lt;&lt; j)<SUB>45</SUB>>", "243": "<(IDENTIFIER,mask,(1 &lt;&lt; j) &amp; mask)<SUB>45</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "247": "<(IDENTIFIER,curMask,curMask &amp;= graph[j] &amp; (rmaxMask - 1))<SUB>47</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,graph[j])<SUB>47</SUB>>", "251": "<(IDENTIFIER,j,graph[j] &amp; (rmaxMask - 1))<SUB>47</SUB>>", "253": "<(IDENTIFIER,rmaxMask,rmaxMask - 1)<SUB>47</SUB>>", "255": "<(&lt;operators&gt;.assignmentAnd,oMask &amp;= graph[j] &gt;&gt; szRight)<SUB>49</SUB>>", "257": "<(&lt;operator&gt;.logicalShiftRight,graph[j] &gt;&gt; szRight)<SUB>49</SUB>>", "259": "<(IDENTIFIER,graph,graph[j] &gt;&gt; szRight)<SUB>49</SUB>>", "261": "<(IDENTIFIER,szRight,graph[j] &gt;&gt; szRight)<SUB>49</SUB>>", "263": "<(&lt;operator&gt;.notEquals,curMask != mask)<SUB>53</SUB>>", "265": "<(IDENTIFIER,mask,curMask != mask)<SUB>53</SUB>>", "267": "<(&lt;operator&gt;.assignment,ans = Math.max(ans, Integer.bitCount(mask) + dp[oMask]))<SUB>55</SUB>>", "269": "<(max,Math.max(ans, Integer.bitCount(mask) + dp[oMask]))<SUB>55</SUB>>", "271": "<(IDENTIFIER,ans,Math.max(ans, Integer.bitCount(mask) + dp[oMask]))<SUB>55</SUB>>", "273": "<(bitCount,Integer.bitCount(mask))<SUB>55</SUB>>", "275": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>55</SUB>>", "277": "<(IDENTIFIER,dp,Integer.bitCount(mask) + dp[oMask])<SUB>55</SUB>>", "279": "<(&lt;operator&gt;.assignmentDivision,k /= ans)<SUB>57</SUB>>", "281": "<(IDENTIFIER,ans,k /= ans)<SUB>57</SUB>>", "283": "<(IDENTIFIER,out,println(k * k * (ans * (ans - 1)) / 2))<SUB>58</SUB>>", "285": "<(&lt;operator&gt;.multiplication,k * k * (ans * (ans - 1)))<SUB>58</SUB>>", "287": "<(IDENTIFIER,k,k * k)<SUB>58</SUB>>", "289": "<(&lt;operator&gt;.multiplication,ans * (ans - 1))<SUB>58</SUB>>", "291": "<(&lt;operator&gt;.subtraction,ans - 1)<SUB>58</SUB>>", "293": "<(LITERAL,1,ans - 1)<SUB>58</SUB>>", "295": "<(flush,flush())<SUB>59</SUB>>", "297": "<(MODIFIER,PUBLIC)>", "299": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}