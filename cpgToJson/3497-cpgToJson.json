{"edges": [["23", "24"], ["23", "25"], ["23", "360"], ["23", "361"], ["23", "362"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "47"], ["25", "50"], ["25", "53"], ["25", "54"], ["25", "60"], ["25", "66"], ["25", "67"], ["25", "71"], ["25", "76"], ["25", "102"], ["25", "106"], ["25", "110"], ["25", "115"], ["25", "120"], ["25", "158"], ["25", "159"], ["25", "166"], ["25", "188"], ["25", "325"], ["25", "326"], ["25", "329"], ["25", "355"], ["25", "358"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "7"], ["50", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["64", "65"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "101"], ["92", "93"], ["92", "100"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "148"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "147"], ["136", "137"], ["136", "146"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["152", "157"], ["154", "155"], ["154", "156"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["177", "178"], ["177", "185"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["199", "200"], ["199", "201"], ["199", "204"], ["199", "207"], ["199", "209"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["207", "208"], ["209", "210"], ["209", "223"], ["209", "224"], ["209", "235"], ["210", "211"], ["210", "222"], ["211", "212"], ["211", "221"], ["212", "213"], ["212", "218"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["235", "240"], ["235", "242"], ["237", "238"], ["237", "239"], ["240", "241"], ["242", "243"], ["242", "260"], ["242", "261"], ["242", "274"], ["242", "292"], ["243", "244"], ["243", "259"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "273"], ["264", "265"], ["264", "272"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "291"], ["277", "278"], ["277", "290"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "282"], ["280", "287"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "289"], ["292", "293"], ["292", "306"], ["293", "294"], ["293", "301"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "305"], ["302", "303"], ["302", "304"], ["306", "307"], ["306", "324"], ["307", "308"], ["307", "323"], ["308", "309"], ["308", "322"], ["309", "310"], ["309", "317"], ["310", "311"], ["310", "312"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["317", "318"], ["317", "321"], ["318", "319"], ["318", "320"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "331"], ["329", "334"], ["329", "337"], ["329", "339"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["337", "338"], ["339", "340"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "354"], ["343", "344"], ["343", "353"], ["344", "345"], ["344", "346"], ["346", "347"], ["346", "352"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "351"], ["355", "356"], ["355", "357"], ["358", "359"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "49"], ["47", "51"], ["50", "58"], ["54", "64"], ["60", "69"], ["67", "72"], ["71", "78"], ["102", "108"], ["106", "111"], ["110", "116"], ["115", "122"], ["159", "168"], ["326", "331"], ["355", "358"], ["358", "362"], ["28", "26"], ["42", "40"], ["44", "43"], ["49", "47"], ["51", "50"], ["56", "54"], ["62", "60"], ["69", "67"], ["72", "71"], ["78", "81"], ["81", "88"], ["81", "104"], ["84", "81"], ["104", "102"], ["108", "106"], ["111", "110"], ["116", "115"], ["122", "125"], ["125", "132"], ["125", "163"], ["128", "125"], ["161", "159"], ["168", "171"], ["171", "179"], ["171", "190"], ["174", "171"], ["190", "193"], ["193", "201"], ["193", "326"], ["196", "193"], ["331", "334"], ["334", "349"], ["334", "355"], ["337", "334"], ["31", "38"], ["34", "29"], ["46", "44"], ["58", "56"], ["64", "62"], ["87", "84"], ["131", "149"], ["148", "128"], ["163", "161"], ["177", "174"], ["340", "337"], ["33", "31"], ["36", "34"], ["88", "97"], ["91", "87"], ["132", "139"], ["135", "131"], ["149", "154"], ["152", "148"], ["178", "185"], ["185", "177"], ["201", "204"], ["204", "215"], ["204", "196"], ["207", "204"], ["342", "340"], ["38", "36"], ["92", "91"], ["136", "135"], ["154", "152"], ["179", "182"], ["182", "178"], ["224", "237"], ["343", "342"], ["93", "92"], ["137", "136"], ["211", "207"], ["211", "229"], ["226", "224"], ["237", "240"], ["240", "247"], ["240", "207"], ["344", "343"], ["95", "93"], ["138", "143"], ["141", "137"], ["212", "211"], ["227", "232"], ["232", "226"], ["261", "283"], ["274", "297"], ["292", "240"], ["346", "344"], ["97", "95"], ["139", "138"], ["143", "141"], ["213", "218"], ["218", "212"], ["229", "227"], ["244", "269"], ["263", "261"], ["276", "274"], ["293", "313"], ["306", "292"], ["347", "346"], ["215", "213"], ["245", "244"], ["245", "254"], ["252", "244"], ["264", "263"], ["277", "276"], ["294", "302"], ["301", "293"], ["307", "306"], ["349", "347"], ["246", "245"], ["253", "252"], ["265", "264"], ["278", "277"], ["296", "294"], ["302", "301"], ["308", "307"], ["247", "246"], ["254", "253"], ["267", "265"], ["280", "278"], ["297", "296"], ["309", "308"], ["269", "267"], ["282", "287"], ["287", "280"], ["310", "318"], ["317", "309"], ["283", "282"], ["312", "310"], ["318", "317"], ["313", "312"], ["23", "28"], ["24", "362"], ["26", "362"], ["31", "362"], ["34", "362"], ["34", "362"], ["34", "362"], ["29", "362"], ["40", "362"], ["43", "362"], ["43", "362"], ["47", "362"], ["51", "362"], ["50", "362"], ["50", "362"], ["54", "362"], ["54", "362"], ["60", "362"], ["64", "362"], ["62", "362"], ["60", "362"], ["60", "362"], ["67", "362"], ["67", "362"], ["71", "362"], ["71", "362"], ["102", "362"], ["102", "362"], ["106", "362"], ["106", "362"], ["106", "362"], ["110", "362"], ["110", "362"], ["115", "362"], ["115", "362"], ["125", "362"], ["125", "362"], ["159", "362"], ["161", "362"], ["159", "362"], ["159", "362"], ["168", "362"], ["190", "362"], ["193", "362"], ["326", "362"], ["331", "362"], ["334", "362"], ["334", "362"], ["334", "362"], ["355", "362"], ["355", "362"], ["358", "362"], ["358", "362"], ["344", "362"], ["343", "362"], ["342", "362"], ["342", "362"], ["340", "362"], ["340", "362"], ["337", "362"], ["201", "362"], ["204", "362"], ["204", "362"], ["196", "362"], ["211", "362"], ["211", "362"], ["224", "362"], ["224", "362"], ["224", "362"], ["237", "362"], ["240", "362"], ["240", "362"], ["244", "362"], ["244", "362"], ["244", "362"], ["265", "362"], ["265", "362"], ["264", "362"], ["263", "362"], ["261", "362"], ["261", "362"], ["280", "362"], ["280", "362"], ["278", "362"], ["277", "362"], ["276", "362"], ["274", "362"], ["274", "362"], ["292", "362"], ["312", "362"], ["317", "362"], ["308", "362"], ["307", "362"], ["306", "362"], ["306", "362"], ["292", "362"], ["292", "362"], ["207", "362"], ["177", "362"], ["177", "362"], ["177", "362"], ["174", "362"], ["137", "362"], ["137", "362"], ["136", "362"], ["135", "362"], ["131", "362"], ["131", "362"], ["148", "362"], ["152", "362"], ["152", "362"], ["152", "362"], ["148", "362"], ["148", "362"], ["128", "362"], ["87", "362"], ["93", "362"], ["92", "362"], ["91", "362"], ["91", "362"], ["87", "362"], ["87", "362"], ["84", "362"], ["56", "362"], ["62", "362"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "47"], ["56", "54"], ["56", "54"], ["62", "60"], ["62", "60"], ["69", "67"], ["23", "71"], ["104", "102"], ["108", "106"], ["23", "110"], ["23", "115"], ["161", "159"], ["161", "159"], ["23", "326"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["47", "50"], ["23", "50"], ["51", "50"], ["23", "78"], ["23", "122"], ["23", "168"], ["23", "190"], ["23", "331"], ["43", "355"], ["23", "355"], ["326", "355"], ["340", "355"], ["355", "358"], ["23", "358"], ["23", "31"], ["23", "39"], ["29", "51"], ["23", "51"], ["23", "56"], ["58", "56"], ["23", "62"], ["64", "62"], ["23", "69"], ["78", "81"], ["84", "81"], ["23", "81"], ["69", "81"], ["97", "84"], ["23", "84"], ["91", "87"], ["91", "87"], ["81", "104"], ["23", "104"], ["104", "108"], ["23", "108"], ["122", "125"], ["128", "125"], ["23", "125"], ["108", "125"], ["143", "128"], ["23", "128"], ["135", "131"], ["135", "131"], ["152", "148"], ["152", "148"], ["152", "148"], ["23", "161"], ["54", "161"], ["168", "171"], ["174", "171"], ["23", "171"], ["161", "171"], ["23", "174"], ["171", "174"], ["67", "177"], ["87", "177"], ["190", "193"], ["196", "193"], ["23", "193"], ["171", "193"], ["204", "193"], ["193", "196"], ["215", "196"], ["229", "196"], ["23", "196"], ["331", "334"], ["337", "334"], ["23", "334"], ["193", "334"], ["349", "334"], ["334", "337"], ["23", "337"], ["342", "340"], ["342", "340"], ["31", "34"], ["23", "34"], ["50", "58"], ["23", "58"], ["58", "64"], ["23", "64"], ["54", "163"], ["23", "163"], ["23", "201"], ["93", "91"], ["93", "91"], ["60", "91"], ["23", "91"], ["137", "135"], ["137", "135"], ["60", "135"], ["152", "135"], ["91", "135"], ["23", "135"], ["23", "152"], ["102", "152"], ["131", "152"], ["135", "152"], ["201", "204"], ["207", "204"], ["23", "204"], ["193", "204"], ["245", "204"], ["252", "204"], ["218", "207"], ["232", "207"], ["23", "207"], ["287", "207"], ["211", "224"], ["326", "342"], ["340", "342"], ["23", "342"], ["60", "342"], ["306", "342"], ["152", "342"], ["91", "342"], ["93", "92"], ["93", "92"], ["60", "92"], ["91", "92"], ["23", "92"], ["137", "136"], ["137", "136"], ["60", "136"], ["152", "136"], ["91", "136"], ["23", "136"], ["171", "182"], ["23", "182"], ["23", "237"], ["326", "343"], ["340", "343"], ["23", "343"], ["60", "343"], ["342", "343"], ["306", "343"], ["152", "343"], ["91", "343"], ["23", "93"], ["67", "93"], ["23", "137"], ["125", "137"], ["102", "137"], ["23", "211"], ["237", "240"], ["23", "240"], ["269", "240"], ["263", "261"], ["263", "261"], ["276", "274"], ["276", "274"], ["306", "292"], ["306", "292"], ["326", "344"], ["340", "344"], ["23", "344"], ["23", "138"], ["125", "138"], ["218", "232"], ["23", "232"], ["81", "97"], ["23", "97"], ["23", "143"], ["125", "143"], ["204", "218"], ["23", "218"], ["215", "229"], ["23", "229"], ["245", "244"], ["245", "244"], ["252", "244"], ["252", "244"], ["265", "263"], ["265", "263"], ["60", "263"], ["306", "263"], ["152", "263"], ["91", "263"], ["23", "263"], ["278", "276"], ["278", "276"], ["263", "276"], ["23", "276"], ["292", "306"], ["274", "306"], ["23", "306"], ["276", "306"], ["193", "215"], ["229", "215"], ["23", "215"], ["246", "245"], ["246", "245"], ["204", "245"], ["252", "245"], ["23", "245"], ["253", "252"], ["253", "252"], ["245", "252"], ["23", "252"], ["265", "264"], ["265", "264"], ["60", "264"], ["306", "264"], ["152", "264"], ["91", "264"], ["23", "264"], ["278", "277"], ["278", "277"], ["263", "277"], ["23", "277"], ["287", "301"], ["23", "301"], ["269", "301"], ["292", "307"], ["274", "307"], ["23", "307"], ["276", "307"], ["334", "349"], ["23", "349"], ["229", "246"], ["23", "246"], ["240", "246"], ["232", "253"], ["23", "253"], ["287", "253"], ["240", "253"], ["224", "265"], ["23", "265"], ["67", "265"], ["261", "278"], ["23", "278"], ["280", "278"], ["280", "278"], ["280", "278"], ["23", "296"], ["229", "296"], ["269", "296"], ["287", "302"], ["23", "302"], ["269", "302"], ["292", "308"], ["274", "308"], ["23", "308"], ["229", "247"], ["23", "247"], ["240", "247"], ["232", "254"], ["23", "254"], ["287", "254"], ["240", "254"], ["152", "280"], ["23", "280"], ["282", "280"], ["282", "280"], ["287", "280"], ["287", "280"], ["23", "297"], ["229", "297"], ["269", "297"], ["23", "269"], ["240", "269"], ["232", "282"], ["23", "282"], ["287", "282"], ["269", "282"], ["23", "287"], ["232", "287"], ["23", "317"], ["287", "317"], ["269", "317"], ["232", "283"], ["23", "283"], ["287", "283"], ["269", "283"], ["23", "312"], ["229", "312"], ["269", "312"], ["23", "318"], ["287", "318"], ["269", "318"], ["23", "313"], ["229", "313"], ["269", "313"], ["81", "84"], ["81", "95"], ["81", "93"], ["81", "88"], ["81", "81"], ["81", "92"], ["81", "87"], ["81", "97"], ["81", "91"], ["125", "136"], ["125", "154"], ["125", "128"], ["125", "138"], ["125", "148"], ["125", "152"], ["125", "141"], ["125", "135"], ["125", "131"], ["125", "149"], ["125", "132"], ["125", "137"], ["125", "139"], ["125", "143"], ["125", "125"], ["171", "174"], ["171", "182"], ["171", "177"], ["171", "179"], ["171", "178"], ["171", "185"], ["171", "171"], ["193", "196"], ["193", "204"], ["193", "201"], ["193", "193"], ["334", "334"], ["334", "349"], ["334", "340"], ["334", "346"], ["334", "347"], ["334", "342"], ["334", "337"], ["334", "343"], ["334", "344"], ["204", "215"], ["204", "213"], ["204", "204"], ["204", "207"], ["204", "212"], ["204", "211"], ["204", "218"], ["211", "240"], ["211", "226"], ["211", "224"], ["211", "237"], ["211", "229"], ["211", "227"], ["211", "232"], ["240", "240"], ["240", "292"], ["240", "308"], ["240", "283"], ["240", "317"], ["240", "264"], ["240", "247"], ["240", "302"], ["240", "306"], ["240", "276"], ["240", "296"], ["240", "274"], ["240", "310"], ["240", "278"], ["240", "269"], ["240", "297"], ["240", "282"], ["240", "244"], ["240", "261"], ["240", "245"], ["240", "307"], ["240", "309"], ["240", "301"], ["240", "246"], ["240", "293"], ["240", "267"], ["240", "318"], ["240", "280"], ["240", "265"], ["240", "277"], ["240", "287"], ["240", "294"], ["240", "263"], ["240", "313"], ["240", "312"], ["245", "253"], ["245", "254"], ["245", "252"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>5</SUB>>", "48": "<(IDENTIFIER,st,ANY st = new StringTokenizer(f.readLine()))<SUB>5</SUB>>", "50": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>5</SUB>>", "51": "<(readLine,readLine())<SUB>5</SUB>>", "53": "<(LOCAL,int n: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>7</SUB>>", "57": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>7</SUB>>", "59": "<(IDENTIFIER,st,nextToken())<SUB>7</SUB>>", "61": "<(IDENTIFIER,MOD,MOD = parseLong(st.nextToken()))<SUB>8</SUB>>", "63": "<(IDENTIFIER,Long,parseLong(st.nextToken()))<SUB>8</SUB>>", "65": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,long[] pow2 = new long[MAX])<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.alloc,new long[MAX])>", "71": "<(&lt;operator&gt;.assignment,pow2[0] = 1L)<SUB>11</SUB>>", "73": "<(IDENTIFIER,pow2,pow2[0] = 1L)<SUB>11</SUB>>", "75": "<(LITERAL,1L,pow2[0] = 1L)<SUB>11</SUB>>", "77": "<(LOCAL,int k: int)<SUB>12</SUB>>", "79": "<(IDENTIFIER,k,int k = 1)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.lessThan,k &lt; MAX)<SUB>12</SUB>>", "83": "<(IDENTIFIER,MAX,k &lt; MAX)<SUB>12</SUB>>", "85": "<(IDENTIFIER,k,k++)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.assignment,pow2[k] = (2L * pow2[k - 1] + MOD) % MOD)<SUB>13</SUB>>", "89": "<(IDENTIFIER,pow2,pow2[k] = (2L * pow2[k - 1] + MOD) % MOD)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.modulo,(2L * pow2[k - 1] + MOD) % MOD)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.multiplication,2L * pow2[k - 1])<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,pow2[k - 1])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>13</SUB>>", "99": "<(LITERAL,1,k - 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,MOD,(2L * pow2[k - 1] + MOD) % MOD)<SUB>13</SUB>>", "103": "<(IDENTIFIER,fac,fac = new long[MAX])<SUB>16</SUB>>", "105": "<(IDENTIFIER,MAX,new long[MAX])<SUB>16</SUB>>", "107": "<(IDENTIFIER,ifac,ifac = new long[MAX])<SUB>17</SUB>>", "109": "<(IDENTIFIER,MAX,new long[MAX])<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,fac[0])<SUB>18</SUB>>", "113": "<(LITERAL,0,fac[0] = 1L)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.assignment,ifac[0] = 1L)<SUB>19</SUB>>", "117": "<(IDENTIFIER,ifac,ifac[0] = 1L)<SUB>19</SUB>>", "119": "<(LITERAL,1L,ifac[0] = 1L)<SUB>19</SUB>>", "121": "<(LOCAL,int k: int)<SUB>20</SUB>>", "123": "<(IDENTIFIER,k,int k = 1)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.lessThan,k &lt; MAX)<SUB>20</SUB>>", "127": "<(IDENTIFIER,MAX,k &lt; MAX)<SUB>20</SUB>>", "129": "<(IDENTIFIER,k,k++)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignment,fac[k] = ((long) k * fac[k - 1] + MOD) % MOD)<SUB>21</SUB>>", "133": "<(IDENTIFIER,fac,fac[k] = ((long) k * fac[k - 1] + MOD) % MOD)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.modulo,((long) k * fac[k - 1] + MOD) % MOD)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.multiplication,(long) k * fac[k - 1])<SUB>21</SUB>>", "139": "<(TYPE_REF,long,long)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,fac[k - 1])<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>21</SUB>>", "145": "<(LITERAL,1,k - 1)<SUB>21</SUB>>", "147": "<(IDENTIFIER,MOD,((long) k * fac[k - 1] + MOD) % MOD)<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,ifac[k])<SUB>22</SUB>>", "151": "<(IDENTIFIER,k,ifac[k] = modInverse(fac[k], MOD))<SUB>22</SUB>>", "153": "<(IDENTIFIER,this,modInverse(fac[k], MOD))<SUB>22</SUB>>", "155": "<(IDENTIFIER,fac,modInverse(fac[k], MOD))<SUB>22</SUB>>", "157": "<(IDENTIFIER,MOD,modInverse(fac[k], MOD))<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n][n + 1])<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.alloc,new long[n][n + 1])>", "163": "<(&lt;operator&gt;.addition,n + 1)<SUB>25</SUB>>", "165": "<(LITERAL,1,n + 1)<SUB>25</SUB>>", "167": "<(LOCAL,int k: int)<SUB>28</SUB>>", "169": "<(IDENTIFIER,k,int k = 0)<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>28</SUB>>", "173": "<(IDENTIFIER,n,k &lt; n)<SUB>28</SUB>>", "175": "<(IDENTIFIER,k,k++)<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.assignment,dp[k][k + 1] = pow2[k])<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>29</SUB>>", "181": "<(IDENTIFIER,k,dp[k][k + 1] = pow2[k])<SUB>29</SUB>>", "183": "<(IDENTIFIER,k,k + 1)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,pow2[k])<SUB>29</SUB>>", "187": "<(IDENTIFIER,k,dp[k][k + 1] = pow2[k])<SUB>29</SUB>>", "189": "<(LOCAL,int k: int)<SUB>32</SUB>>", "191": "<(IDENTIFIER,k,int k = 2)<SUB>32</SUB>>", "193": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>32</SUB>>", "195": "<(IDENTIFIER,n,k &lt; n)<SUB>32</SUB>>", "197": "<(IDENTIFIER,k,k++)<SUB>32</SUB>>", "199": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= n); j++),for (int j = 1; Some(j &lt;= n); j++))<SUB>33</SUB>>", "201": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>33</SUB>>", "203": "<(LITERAL,1,int j = 1)<SUB>33</SUB>>", "205": "<(IDENTIFIER,j,j &lt;= n)<SUB>33</SUB>>", "207": "<(&lt;operator&gt;.postIncrement,j++)<SUB>33</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "211": "<(&lt;operator&gt;.equals,dp[k - 2][j - 1] == 0)<SUB>34</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[k - 2])<SUB>34</SUB>>", "215": "<(&lt;operator&gt;.subtraction,k - 2)<SUB>34</SUB>>", "217": "<(LITERAL,2,k - 2)<SUB>34</SUB>>", "219": "<(IDENTIFIER,j,j - 1)<SUB>34</SUB>>", "221": "<(LITERAL,0,dp[k - 2][j - 1] == 0)<SUB>34</SUB>>", "223": "<(LOCAL,long start: long)<SUB>35</SUB>>", "225": "<(IDENTIFIER,start,long start = dp[k - 2][j - 1])<SUB>35</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,dp[k - 2])<SUB>35</SUB>>", "229": "<(&lt;operator&gt;.subtraction,k - 2)<SUB>35</SUB>>", "231": "<(LITERAL,2,k - 2)<SUB>35</SUB>>", "233": "<(IDENTIFIER,j,j - 1)<SUB>35</SUB>>", "235": "<(CONTROL_STRUCTURE,for (int add = 1; None; add++),for (int add = 1; None; add++))<SUB>37</SUB>>", "237": "<(&lt;operator&gt;.assignment,int add = 1)<SUB>37</SUB>>", "239": "<(LITERAL,1,int add = 1)<SUB>37</SUB>>", "241": "<(IDENTIFIER,add,add++)<SUB>37</SUB>>", "243": "<(CONTROL_STRUCTURE,if (k + add - 1 &gt;= n || j + add - 1 &gt; n),if (k + add - 1 &gt;= n || j + add - 1 &gt; n))<SUB>38</SUB>>", "245": "<(&lt;operator&gt;.greaterEqualsThan,k + add - 1 &gt;= n)<SUB>38</SUB>>", "247": "<(&lt;operator&gt;.addition,k + add)<SUB>38</SUB>>", "249": "<(IDENTIFIER,add,k + add)<SUB>38</SUB>>", "251": "<(IDENTIFIER,n,k + add - 1 &gt;= n)<SUB>38</SUB>>", "253": "<(&lt;operator&gt;.subtraction,j + add - 1)<SUB>38</SUB>>", "255": "<(IDENTIFIER,j,j + add)<SUB>38</SUB>>", "257": "<(LITERAL,1,j + add - 1)<SUB>38</SUB>>", "259": "<(CONTROL_STRUCTURE,break;,break;)<SUB>38</SUB>>", "261": "<(&lt;operator&gt;.assignment,long adder = (start * pow2[add - 1] + MOD) % MOD)<SUB>40</SUB>>", "263": "<(&lt;operator&gt;.modulo,(start * pow2[add - 1] + MOD) % MOD)<SUB>40</SUB>>", "265": "<(&lt;operator&gt;.multiplication,start * pow2[add - 1])<SUB>40</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,pow2[add - 1])<SUB>40</SUB>>", "269": "<(&lt;operator&gt;.subtraction,add - 1)<SUB>40</SUB>>", "271": "<(LITERAL,1,add - 1)<SUB>40</SUB>>", "273": "<(IDENTIFIER,MOD,(start * pow2[add - 1] + MOD) % MOD)<SUB>40</SUB>>", "275": "<(IDENTIFIER,adder,adder = (adder * choose(j + add - 1, j - 1) + MOD) % MOD)<SUB>41</SUB>>", "277": "<(&lt;operator&gt;.addition,adder * choose(j + add - 1, j - 1) + MOD)<SUB>41</SUB>>", "279": "<(IDENTIFIER,adder,adder * choose(j + add - 1, j - 1))<SUB>41</SUB>>", "281": "<(IDENTIFIER,this,choose(j + add - 1, j - 1))<SUB>41</SUB>>", "283": "<(&lt;operator&gt;.addition,j + add)<SUB>41</SUB>>", "285": "<(IDENTIFIER,add,j + add)<SUB>41</SUB>>", "287": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>41</SUB>>", "289": "<(LITERAL,1,j - 1)<SUB>41</SUB>>", "291": "<(IDENTIFIER,MOD,(adder * choose(j + add - 1, j - 1) + MOD) % MOD)<SUB>41</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,dp[k + add - 1][j + add - 1])<SUB>42</SUB>>", "295": "<(IDENTIFIER,dp,dp[k + add - 1][j + add - 1] = (dp[k + add - 1][j + add - 1] + adder + MOD) % MOD)<SUB>42</SUB>>", "297": "<(&lt;operator&gt;.addition,k + add)<SUB>42</SUB>>", "299": "<(IDENTIFIER,add,k + add)<SUB>42</SUB>>", "301": "<(&lt;operator&gt;.subtraction,j + add - 1)<SUB>42</SUB>>", "303": "<(IDENTIFIER,j,j + add)<SUB>42</SUB>>", "305": "<(LITERAL,1,j + add - 1)<SUB>42</SUB>>", "307": "<(&lt;operator&gt;.addition,dp[k + add - 1][j + add - 1] + adder + MOD)<SUB>42</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,dp[k + add - 1][j + add - 1])<SUB>42</SUB>>", "311": "<(IDENTIFIER,dp,dp[k + add - 1][j + add - 1] + adder)<SUB>42</SUB>>", "313": "<(&lt;operator&gt;.addition,k + add)<SUB>42</SUB>>", "315": "<(IDENTIFIER,add,k + add)<SUB>42</SUB>>", "317": "<(&lt;operator&gt;.subtraction,j + add - 1)<SUB>42</SUB>>", "319": "<(IDENTIFIER,j,j + add)<SUB>42</SUB>>", "321": "<(LITERAL,1,j + add - 1)<SUB>42</SUB>>", "323": "<(IDENTIFIER,MOD,dp[k + add - 1][j + add - 1] + adder + MOD)<SUB>42</SUB>>", "325": "<(LOCAL,long answer: long)<SUB>47</SUB>>", "327": "<(IDENTIFIER,answer,long answer = 0L)<SUB>47</SUB>>", "329": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k &lt;= n); k++),for (int k = 1; Some(k &lt;= n); k++))<SUB>48</SUB>>", "331": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>48</SUB>>", "333": "<(LITERAL,1,int k = 1)<SUB>48</SUB>>", "335": "<(IDENTIFIER,k,k &lt;= n)<SUB>48</SUB>>", "337": "<(&lt;operator&gt;.postIncrement,k++)<SUB>48</SUB>>", "339": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "341": "<(IDENTIFIER,answer,answer = (answer + dp[n - 1][k] + MOD) % MOD)<SUB>49</SUB>>", "343": "<(&lt;operator&gt;.addition,answer + dp[n - 1][k] + MOD)<SUB>49</SUB>>", "345": "<(IDENTIFIER,answer,answer + dp[n - 1][k])<SUB>49</SUB>>", "347": "<(&lt;operator&gt;.indexAccess,dp[n - 1])<SUB>49</SUB>>", "349": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>49</SUB>>", "351": "<(LITERAL,1,n - 1)<SUB>49</SUB>>", "353": "<(IDENTIFIER,MOD,answer + dp[n - 1][k] + MOD)<SUB>49</SUB>>", "355": "<(println,println(answer))<SUB>51</SUB>>", "357": "<(IDENTIFIER,answer,println(answer))<SUB>51</SUB>>", "359": "<(IDENTIFIER,out,close())<SUB>60</SUB>>", "361": "<(MODIFIER,STATIC)>"}}