{"edges": [["17", "18"], ["17", "19"], ["17", "160"], ["17", "161"], ["17", "162"], ["19", "20"], ["19", "21"], ["19", "26"], ["19", "27"], ["19", "32"], ["19", "35"], ["19", "45"], ["19", "48"], ["19", "51"], ["19", "52"], ["19", "56"], ["19", "57"], ["19", "61"], ["19", "62"], ["19", "65"], ["19", "66"], ["19", "69"], ["19", "153"], ["19", "158"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "25"], ["27", "28"], ["27", "29"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "41"], ["37", "44"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "72"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "78"], ["72", "86"], ["72", "110"], ["72", "144"], ["72", "151"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "98"], ["86", "100"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "122"], ["110", "124"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["122", "123"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "142"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["21", "31"], ["27", "34"], ["32", "40"], ["35", "47"], ["45", "48"], ["48", "54"], ["52", "59"], ["57", "62"], ["62", "66"], ["66", "70"], ["153", "158"], ["158", "162"], ["23", "21"], ["29", "27"], ["34", "32"], ["47", "45"], ["54", "52"], ["59", "57"], ["70", "74"], ["70", "155"], ["155", "153"], ["25", "23"], ["31", "29"], ["38", "41"], ["41", "35"], ["74", "82"], ["78", "88"], ["151", "70"], ["40", "38"], ["80", "78"], ["88", "94"], ["91", "101"], ["91", "112"], ["98", "94"], ["100", "98"], ["112", "118"], ["115", "126"], ["115", "145"], ["122", "118"], ["145", "148"], ["145", "151"], ["148", "151"], ["81", "80"], ["93", "91"], ["101", "107"], ["104", "100"], ["117", "115"], ["126", "129"], ["129", "136"], ["129", "122"], ["132", "129"], ["82", "81"], ["94", "93"], ["107", "104"], ["118", "117"], ["135", "142"], ["135", "132"], ["142", "132"], ["136", "139"], ["139", "135"], ["17", "25"], ["18", "162"], ["21", "162"], ["21", "162"], ["27", "162"], ["27", "162"], ["32", "162"], ["38", "162"], ["41", "162"], ["41", "162"], ["41", "162"], ["35", "162"], ["45", "162"], ["48", "162"], ["48", "162"], ["54", "162"], ["52", "162"], ["52", "162"], ["59", "162"], ["57", "162"], ["57", "162"], ["62", "162"], ["62", "162"], ["66", "162"], ["70", "162"], ["70", "162"], ["155", "162"], ["153", "162"], ["153", "162"], ["158", "162"], ["158", "162"], ["74", "162"], ["78", "162"], ["78", "162"], ["78", "162"], ["88", "162"], ["112", "162"], ["115", "162"], ["118", "162"], ["117", "162"], ["115", "162"], ["115", "162"], ["145", "162"], ["145", "162"], ["148", "162"], ["151", "162"], ["126", "162"], ["129", "162"], ["129", "162"], ["122", "162"], ["135", "162"], ["135", "162"], ["135", "162"], ["142", "162"], ["132", "162"], ["100", "162"], ["104", "162"], ["104", "162"], ["100", "162"], ["100", "162"], ["98", "162"], ["17", "18"], ["17", "32"], ["17", "45"], ["54", "52"], ["59", "57"], ["57", "62"], ["17", "62"], ["17", "66"], ["32", "35"], ["17", "35"], ["38", "35"], ["41", "35"], ["45", "48"], ["17", "48"], ["27", "48"], ["48", "153"], ["17", "153"], ["62", "153"], ["151", "153"], ["153", "158"], ["17", "158"], ["17", "38"], ["17", "44"], ["35", "54"], ["17", "54"], ["52", "59"], ["17", "59"], ["66", "70"], ["148", "70"], ["17", "70"], ["17", "74"], ["80", "78"], ["62", "155"], ["151", "155"], ["17", "155"], ["38", "41"], ["17", "41"], ["21", "41"], ["17", "88"], ["104", "100"], ["104", "100"], ["104", "100"], ["17", "112"], ["17", "148"], ["118", "151"], ["17", "151"], ["82", "80"], ["82", "80"], ["17", "80"], ["88", "91"], ["98", "91"], ["17", "91"], ["94", "91"], ["94", "91"], ["104", "98"], ["17", "98"], ["112", "115"], ["122", "115"], ["17", "115"], ["118", "115"], ["118", "115"], ["129", "122"], ["17", "122"], ["17", "126"], ["74", "145"], ["142", "145"], ["17", "145"], ["82", "81"], ["82", "81"], ["17", "81"], ["94", "93"], ["94", "93"], ["17", "93"], ["59", "104"], ["17", "104"], ["91", "104"], ["94", "104"], ["118", "117"], ["118", "117"], ["17", "117"], ["126", "129"], ["132", "129"], ["17", "129"], ["115", "129"], ["129", "132"], ["17", "132"], ["118", "82"], ["17", "82"], ["57", "82"], ["62", "82"], ["151", "82"], ["82", "94"], ["17", "94"], ["82", "94"], ["91", "107"], ["17", "107"], ["94", "107"], ["94", "118"], ["17", "118"], ["94", "118"], ["78", "135"], ["100", "135"], ["74", "142"], ["17", "142"], ["70", "94"], ["70", "115"], ["70", "145"], ["70", "81"], ["70", "151"], ["70", "74"], ["70", "91"], ["70", "112"], ["70", "82"], ["70", "93"], ["70", "80"], ["70", "118"], ["70", "88"], ["70", "70"], ["70", "117"], ["70", "78"], ["91", "107"], ["91", "94"], ["91", "98"], ["91", "104"], ["91", "91"], ["91", "93"], ["91", "101"], ["91", "100"], ["115", "115"], ["115", "122"], ["115", "129"], ["115", "126"], ["115", "118"], ["115", "117"], ["145", "148"], ["129", "136"], ["129", "132"], ["129", "129"], ["129", "135"], ["129", "139"], ["135", "142"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,ANY input = System.in)<SUB>2</SUB>>", "23": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "25": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY output = System.out)<SUB>4</SUB>>", "29": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "31": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "33": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(input)))<SUB>6</SUB>>", "35": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(input)))<SUB>6</SUB>>", "37": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;init&gt;,new InputStreamReader(input))<SUB>6</SUB>>", "43": "<(IDENTIFIER,input,new InputStreamReader(input))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,out = new PrintWriter(output))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.alloc,new PrintWriter(output))<SUB>7</SUB>>", "49": "<(IDENTIFIER,out,new PrintWriter(output))<SUB>7</SUB>>", "51": "<(LOCAL,String in: java.lang.String)<SUB>8</SUB>>", "53": "<(IDENTIFIER,in,String in = readLine())<SUB>8</SUB>>", "55": "<(IDENTIFIER,br,readLine())<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,int len = in.length())<SUB>9</SUB>>", "59": "<(length,in.length())<SUB>9</SUB>>", "61": "<(LOCAL,int doub: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,doub,int doub = len)<SUB>10</SUB>>", "65": "<(LOCAL,boolean found: boolean)<SUB>11</SUB>>", "67": "<(IDENTIFIER,found,boolean found = false)<SUB>11</SUB>>", "69": "<(CONTROL_STRUCTURE,while (!found),while (!found))<SUB>12</SUB>>", "71": "<(IDENTIFIER,found,!found)<SUB>12</SUB>>", "73": "<(LOCAL,int count: int)<SUB>14</SUB>>", "75": "<(IDENTIFIER,count,int count = 0)<SUB>14</SUB>>", "77": "<(LOCAL,String[] parts: java.lang.String[])<SUB>15</SUB>>", "79": "<(IDENTIFIER,parts,String[] parts = new String[len - doub + 1])<SUB>15</SUB>>", "81": "<(&lt;operator&gt;.addition,len - doub + 1)<SUB>15</SUB>>", "83": "<(IDENTIFIER,len,len - doub)<SUB>15</SUB>>", "85": "<(LITERAL,1,len - doub + 1)<SUB>15</SUB>>", "87": "<(LOCAL,int i: int)<SUB>16</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; len - doub + 1)<SUB>16</SUB>>", "93": "<(&lt;operator&gt;.addition,len - doub + 1)<SUB>16</SUB>>", "95": "<(IDENTIFIER,len,len - doub)<SUB>16</SUB>>", "97": "<(LITERAL,1,len - doub + 1)<SUB>16</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,parts[i])<SUB>17</SUB>>", "103": "<(IDENTIFIER,i,parts[i] = in.substring(i, i + doub))<SUB>17</SUB>>", "105": "<(IDENTIFIER,in,in.substring(i, i + doub))<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.addition,i + doub)<SUB>17</SUB>>", "109": "<(IDENTIFIER,doub,i + doub)<SUB>17</SUB>>", "111": "<(LOCAL,int i: int)<SUB>18</SUB>>", "113": "<(IDENTIFIER,i,int i = 1)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; len - doub + 1)<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.addition,len - doub + 1)<SUB>18</SUB>>", "119": "<(IDENTIFIER,len,len - doub)<SUB>18</SUB>>", "121": "<(LITERAL,1,len - doub + 1)<SUB>18</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "125": "<(LOCAL,int j: int)<SUB>19</SUB>>", "127": "<(IDENTIFIER,j,int j = 0)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>19</SUB>>", "131": "<(IDENTIFIER,i,j &lt; i)<SUB>19</SUB>>", "133": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "135": "<(equals,this.equals(parts[j]))<SUB>20</SUB>>", "137": "<(IDENTIFIER,parts,this.equals(parts[j]))<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,parts[j])<SUB>20</SUB>>", "141": "<(IDENTIFIER,j,this.equals(parts[j]))<SUB>20</SUB>>", "143": "<(IDENTIFIER,count,count++)<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.greaterEqualsThan,count &gt;= 1)<SUB>22</SUB>>", "147": "<(LITERAL,1,count &gt;= 1)<SUB>22</SUB>>", "149": "<(IDENTIFIER,found,found = true)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.postDecrement,doub--)<SUB>24</SUB>>", "153": "<(println,println(doub + 1))<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.addition,doub + 1)<SUB>26</SUB>>", "157": "<(LITERAL,1,doub + 1)<SUB>26</SUB>>", "159": "<(IDENTIFIER,out,close())<SUB>27</SUB>>", "161": "<(MODIFIER,STATIC)>"}}