{"edges": [["19", "20"], ["19", "21"], ["19", "146"], ["19", "147"], ["19", "148"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "60"], ["21", "61"], ["21", "66"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "59"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "70"], ["66", "79"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["79", "80"], ["80", "81"], ["80", "82"], ["80", "93"], ["80", "94"], ["80", "116"], ["80", "119"], ["80", "122"], ["80", "123"], ["80", "130"], ["80", "139"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "115"], ["99", "100"], ["99", "112"], ["100", "101"], ["100", "104"], ["100", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "55"], ["51", "63"], ["61", "67"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "51"], ["63", "61"], ["67", "73"], ["67", "85"], ["70", "148"], ["28", "26"], ["54", "53"], ["71", "75"], ["74", "70"], ["55", "54"], ["73", "71"], ["75", "74"], ["82", "101"], ["94", "116"], ["116", "119"], ["119", "126"], ["123", "135"], ["130", "142"], ["139", "148"], ["84", "82"], ["96", "94"], ["125", "123"], ["132", "130"], ["140", "143"], ["143", "139"], ["85", "90"], ["86", "84"], ["98", "96"], ["126", "125"], ["133", "132"], ["142", "140"], ["88", "86"], ["99", "98"], ["135", "133"], ["90", "88"], ["100", "112"], ["112", "99"], ["101", "106"], ["104", "109"], ["109", "100"], ["106", "104"], ["19", "24"], ["20", "148"], ["22", "148"], ["25", "148"], ["25", "148"], ["30", "148"], ["35", "148"], ["42", "148"], ["40", "148"], ["40", "148"], ["47", "148"], ["45", "148"], ["45", "148"], ["54", "148"], ["54", "148"], ["53", "148"], ["51", "148"], ["51", "148"], ["63", "148"], ["61", "148"], ["61", "148"], ["67", "148"], ["67", "148"], ["70", "148"], ["75", "148"], ["75", "148"], ["74", "148"], ["70", "148"], ["70", "148"], ["96", "148"], ["86", "148"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["47", "45"], ["53", "51"], ["53", "51"], ["63", "61"], ["63", "61"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["35", "47"], ["55", "53"], ["55", "53"], ["19", "53"], ["47", "63"], ["19", "63"], ["51", "63"], ["61", "67"], ["19", "67"], ["74", "70"], ["74", "70"], ["55", "54"], ["55", "54"], ["19", "54"], ["75", "74"], ["75", "74"], ["19", "74"], ["19", "82"], ["86", "82"], ["86", "82"], ["96", "94"], ["96", "94"], ["19", "116"], ["19", "119"], ["125", "123"], ["125", "123"], ["132", "130"], ["132", "130"], ["45", "55"], ["19", "55"], ["40", "55"], ["63", "75"], ["19", "75"], ["55", "75"], ["94", "116"], ["116", "119"], ["123", "130"], ["19", "130"], ["143", "139"], ["143", "139"], ["19", "84"], ["86", "84"], ["86", "84"], ["19", "96"], ["99", "96"], ["99", "96"], ["126", "125"], ["126", "125"], ["19", "125"], ["133", "132"], ["133", "132"], ["55", "132"], ["19", "132"], ["130", "143"], ["19", "143"], ["19", "86"], ["88", "86"], ["88", "86"], ["99", "98"], ["99", "98"], ["19", "98"], ["119", "126"], ["19", "126"], ["90", "126"], ["63", "133"], ["19", "133"], ["135", "133"], ["135", "133"], ["67", "88"], ["19", "88"], ["90", "88"], ["90", "88"], ["100", "99"], ["100", "99"], ["100", "99"], ["112", "99"], ["112", "99"], ["19", "135"], ["82", "135"], ["126", "135"], ["19", "90"], ["55", "90"], ["101", "100"], ["101", "100"], ["104", "100"], ["104", "100"], ["109", "100"], ["109", "100"], ["109", "112"], ["19", "112"], ["19", "101"], ["101", "104"], ["19", "104"], ["82", "104"], ["104", "109"], ["19", "109"], ["82", "106"], ["19", "106"], ["67", "94"], ["67", "73"], ["67", "96"], ["67", "98"], ["67", "116"], ["67", "75"], ["67", "99"], ["67", "84"], ["67", "85"], ["67", "132"], ["67", "142"], ["67", "104"], ["67", "74"], ["67", "119"], ["67", "123"], ["67", "106"], ["67", "112"], ["67", "82"], ["67", "140"], ["67", "101"], ["67", "143"], ["67", "90"], ["67", "126"], ["67", "71"], ["67", "130"], ["67", "100"], ["67", "135"], ["67", "88"], ["67", "70"], ["67", "139"], ["67", "125"], ["67", "109"], ["67", "133"], ["67", "86"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = readInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,readInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = readInt())<SUB>4</SUB>>", "37": "<(readInt,readInt())<SUB>4</SUB>>", "39": "<(LOCAL,int k: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,k,int k = readInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,in,readInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,long wrong = n - m)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.subtraction,n - m)<SUB>6</SUB>>", "49": "<(IDENTIFIER,m,n - m)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,long c = wrong * (k) + k - 1)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.subtraction,wrong * (k) + k - 1)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.multiplication,wrong * (k))<SUB>7</SUB>>", "57": "<(IDENTIFIER,k,wrong * (k))<SUB>7</SUB>>", "59": "<(LITERAL,1,wrong * (k) + k - 1)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,long xk = n - c)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.subtraction,n - c)<SUB>8</SUB>>", "65": "<(IDENTIFIER,c,n - c)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.lessEqualsThan,xk &lt;= 0)<SUB>9</SUB>>", "69": "<(LITERAL,0,xk &lt;= 0)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "73": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.subtraction,n - wrong)<SUB>10</SUB>>", "77": "<(IDENTIFIER,wrong,n - wrong)<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "81": "<(LOCAL,long x: long)<SUB>12</SUB>>", "83": "<(IDENTIFIER,x,long x = (long) Math.ceil(xk / (k * 1.0)))<SUB>12</SUB>>", "85": "<(TYPE_REF,long,long)<SUB>12</SUB>>", "87": "<(IDENTIFIER,Math,Math.ceil(xk / (k * 1.0)))<SUB>12</SUB>>", "89": "<(IDENTIFIER,xk,xk / (k * 1.0))<SUB>12</SUB>>", "91": "<(IDENTIFIER,k,k * 1.0)<SUB>12</SUB>>", "93": "<(LOCAL,long power: long)<SUB>13</SUB>>", "95": "<(IDENTIFIER,power,long power = parseLong((BigInteger.valueOf(2).modPow(BigInteger.valueOf(x + 1), BigInteger.valueOf(1000000009)).subtract(BigInteger.valueOf(2))) + &quot;&quot;))<SUB>13</SUB>>", "97": "<(IDENTIFIER,Long,parseLong((BigInteger.valueOf(2).modPow(BigInteger.valueOf(x + 1), BigInteger.valueOf(1000000009)).subtract(BigInteger.valueOf(2))) + &quot;&quot;))<SUB>13</SUB>>", "99": "<(subtract,subtract(BigInteger.valueOf(2)))<SUB>13</SUB>>", "101": "<(valueOf,valueOf(2))<SUB>13</SUB>>", "103": "<(LITERAL,2,valueOf(2))<SUB>13</SUB>>", "105": "<(IDENTIFIER,BigInteger,valueOf(x + 1))<SUB>14</SUB>>", "107": "<(IDENTIFIER,x,x + 1)<SUB>14</SUB>>", "109": "<(valueOf,valueOf(1000000009))<SUB>14</SUB>>", "111": "<(LITERAL,1000000009,valueOf(1000000009))<SUB>14</SUB>>", "113": "<(IDENTIFIER,BigInteger,valueOf(2))<SUB>15</SUB>>", "115": "<(LITERAL,&quot;&quot;,(BigInteger.valueOf(2).modPow(BigInteger.valueOf(x + 1), BigInteger.valueOf(1000000009)).subtract(BigInteger.valueOf(2))) + &quot;&quot;)<SUB>15</SUB>>", "117": "<(IDENTIFIER,power,power += 1000000009)<SUB>16</SUB>>", "119": "<(&lt;operators&gt;.assignmentModulo,power %= 1000000009)<SUB>17</SUB>>", "121": "<(LITERAL,1000000009,power %= 1000000009)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,long first = (power * k) % 1000000009)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.modulo,(power * k) % 1000000009)<SUB>18</SUB>>", "127": "<(IDENTIFIER,power,power * k)<SUB>18</SUB>>", "129": "<(LITERAL,1000000009,(power * k) % 1000000009)<SUB>18</SUB>>", "131": "<(IDENTIFIER,first,first += n - x * k - wrong)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.subtraction,n - x * k)<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.multiplication,x * k)<SUB>20</SUB>>", "137": "<(IDENTIFIER,k,x * k)<SUB>20</SUB>>", "139": "<(println,System.out.println(first % 1000000009))<SUB>21</SUB>>", "141": "<(IDENTIFIER,System,System.out.println(first % 1000000009))<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.modulo,first % 1000000009)<SUB>21</SUB>>", "145": "<(LITERAL,1000000009,first % 1000000009)<SUB>21</SUB>>", "147": "<(MODIFIER,STATIC)>"}}