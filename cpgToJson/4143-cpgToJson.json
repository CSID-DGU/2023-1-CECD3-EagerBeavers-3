{"edges": [["19", "21"], ["19", "481"], ["19", "482"], ["19", "483"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "50"], ["21", "54"], ["21", "55"], ["21", "60"], ["21", "61"], ["21", "65"], ["21", "115"], ["21", "174"], ["21", "175"], ["21", "181"], ["21", "182"], ["21", "188"], ["21", "193"], ["21", "212"], ["21", "370"], ["21", "371"], ["21", "378"], ["21", "385"], ["21", "390"], ["21", "479"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "82"], ["75", "88"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "104"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "123"], ["115", "125"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "159"], ["144", "145"], ["144", "152"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "177"], ["177", "178"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["184", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["193", "194"], ["193", "195"], ["193", "198"], ["193", "203"], ["193", "205"], ["195", "196"], ["195", "197"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "222"], ["212", "224"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["224", "225"], ["225", "226"], ["225", "232"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["230", "231"], ["232", "233"], ["233", "234"], ["233", "235"], ["233", "238"], ["233", "241"], ["233", "243"], ["235", "236"], ["235", "237"], ["238", "239"], ["238", "240"], ["241", "242"], ["243", "244"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["252", "253"], ["252", "254"], ["252", "261"], ["252", "262"], ["252", "273"], ["252", "297"], ["252", "369"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "286"], ["274", "275"], ["274", "281"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["279", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["286", "287"], ["286", "292"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["292", "293"], ["292", "296"], ["293", "294"], ["293", "295"], ["297", "298"], ["297", "299"], ["297", "302"], ["297", "305"], ["297", "307"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["305", "306"], ["307", "308"], ["308", "309"], ["308", "316"], ["309", "310"], ["309", "315"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["316", "317"], ["316", "318"], ["316", "325"], ["316", "326"], ["316", "345"], ["318", "319"], ["318", "320"], ["320", "321"], ["320", "324"], ["321", "322"], ["321", "323"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "342"], ["329", "330"], ["329", "337"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "341"], ["338", "339"], ["338", "340"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "358"], ["346", "347"], ["346", "353"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["351", "352"], ["353", "354"], ["353", "357"], ["354", "355"], ["354", "356"], ["358", "359"], ["358", "364"], ["359", "360"], ["359", "363"], ["360", "361"], ["360", "362"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["371", "372"], ["371", "373"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "389"], ["386", "387"], ["386", "388"], ["390", "391"], ["390", "394"], ["391", "392"], ["391", "393"], ["394", "395"], ["394", "396"], ["394", "403"], ["394", "404"], ["394", "405"], ["394", "409"], ["394", "413"], ["394", "439"], ["394", "474"], ["396", "397"], ["396", "398"], ["398", "399"], ["398", "400"], ["400", "401"], ["400", "402"], ["405", "406"], ["405", "407"], ["407", "408"], ["409", "410"], ["409", "411"], ["411", "412"], ["413", "414"], ["413", "415"], ["413", "418"], ["413", "421"], ["413", "423"], ["415", "416"], ["415", "417"], ["418", "419"], ["418", "420"], ["421", "422"], ["423", "424"], ["424", "425"], ["424", "432"], ["425", "426"], ["425", "431"], ["426", "427"], ["426", "430"], ["427", "428"], ["427", "429"], ["432", "433"], ["432", "436"], ["433", "434"], ["433", "435"], ["436", "437"], ["436", "438"], ["439", "440"], ["439", "443"], ["439", "461"], ["440", "441"], ["440", "442"], ["443", "444"], ["444", "445"], ["444", "448"], ["445", "446"], ["445", "447"], ["448", "449"], ["448", "460"], ["449", "450"], ["449", "457"], ["450", "451"], ["450", "456"], ["451", "452"], ["451", "453"], ["453", "454"], ["453", "455"], ["457", "458"], ["457", "459"], ["461", "462"], ["462", "463"], ["463", "464"], ["463", "467"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "473"], ["468", "469"], ["468", "470"], ["470", "471"], ["470", "472"], ["474", "475"], ["474", "476"], ["476", "477"], ["476", "478"], ["479", "480"], ["22", "28"], ["25", "33"], ["31", "37"], ["35", "42"], ["40", "47"], ["45", "52"], ["50", "57"], ["55", "63"], ["61", "67"], ["175", "185"], ["182", "189"], ["188", "195"], ["371", "381"], ["378", "388"], ["385", "391"], ["479", "483"], ["24", "22"], ["26", "25"], ["33", "31"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["63", "61"], ["67", "70"], ["70", "77"], ["70", "117"], ["73", "70"], ["117", "120"], ["120", "128"], ["120", "178"], ["123", "120"], ["177", "175"], ["184", "182"], ["189", "188"], ["195", "200"], ["198", "207"], ["198", "214"], ["203", "200"], ["214", "219"], ["217", "227"], ["217", "374"], ["222", "219"], ["373", "371"], ["379", "382"], ["382", "378"], ["386", "385"], ["391", "400"], ["391", "479"], ["28", "26"], ["76", "83"], ["82", "89"], ["88", "73"], ["178", "177"], ["185", "184"], ["200", "198"], ["206", "203"], ["219", "217"], ["374", "373"], ["381", "379"], ["388", "386"], ["396", "407"], ["405", "411"], ["409", "415"], ["474", "391"], ["77", "80"], ["80", "76"], ["83", "86"], ["86", "82"], ["89", "95"], ["92", "88"], ["128", "131"], ["131", "139"], ["131", "123"], ["134", "131"], ["207", "210"], ["210", "206"], ["226", "235"], ["226", "222"], ["398", "396"], ["407", "405"], ["411", "409"], ["415", "418"], ["418", "427"], ["418", "440"], ["421", "418"], ["440", "447"], ["440", "466"], ["476", "474"], ["93", "106"], ["104", "92"], ["137", "134"], ["227", "230"], ["230", "226"], ["400", "398"], ["444", "476"], ["94", "100"], ["99", "93"], ["105", "111"], ["110", "104"], ["138", "146"], ["143", "137"], ["235", "238"], ["238", "247"], ["238", "222"], ["241", "238"], ["425", "433"], ["425", "421"], ["445", "453"], ["448", "444"], ["463", "476"], ["95", "94"], ["100", "99"], ["106", "105"], ["111", "110"], ["139", "138"], ["144", "161"], ["159", "143"], ["426", "425"], ["433", "436"], ["436", "421"], ["447", "445"], ["449", "448"], ["464", "470"], ["467", "463"], ["145", "153"], ["152", "144"], ["160", "168"], ["167", "159"], ["245", "257"], ["245", "241"], ["427", "426"], ["450", "457"], ["457", "449"], ["466", "464"], ["468", "467"], ["146", "149"], ["149", "145"], ["153", "156"], ["156", "152"], ["161", "164"], ["164", "160"], ["168", "171"], ["171", "167"], ["246", "245"], ["254", "265"], ["262", "276"], ["451", "450"], ["470", "468"], ["247", "246"], ["256", "254"], ["264", "262"], ["274", "288"], ["274", "299"], ["299", "302"], ["302", "311"], ["302", "222"], ["305", "302"], ["453", "451"], ["257", "256"], ["265", "270"], ["268", "264"], ["275", "274"], ["275", "282"], ["281", "274"], ["287", "293"], ["292", "299"], ["270", "268"], ["276", "279"], ["279", "275"], ["282", "281"], ["288", "287"], ["293", "292"], ["309", "321"], ["309", "305"], ["310", "309"], ["318", "331"], ["326", "348"], ["311", "310"], ["320", "318"], ["328", "326"], ["346", "360"], ["346", "305"], ["321", "320"], ["329", "342"], ["342", "328"], ["347", "346"], ["347", "354"], ["353", "346"], ["359", "365"], ["364", "305"], ["330", "338"], ["337", "329"], ["348", "351"], ["351", "347"], ["354", "353"], ["360", "359"], ["365", "364"], ["331", "334"], ["334", "330"], ["338", "337"], ["19", "24"], ["20", "483"], ["22", "483"], ["25", "483"], ["25", "483"], ["31", "483"], ["31", "483"], ["35", "483"], ["35", "483"], ["40", "483"], ["40", "483"], ["45", "483"], ["45", "483"], ["50", "483"], ["50", "483"], ["55", "483"], ["55", "483"], ["55", "483"], ["61", "483"], ["61", "483"], ["61", "483"], ["120", "483"], ["175", "483"], ["175", "483"], ["182", "483"], ["182", "483"], ["182", "483"], ["188", "483"], ["188", "483"], ["195", "483"], ["214", "483"], ["217", "483"], ["217", "483"], ["374", "483"], ["373", "483"], ["371", "483"], ["371", "483"], ["378", "483"], ["378", "483"], ["385", "483"], ["385", "483"], ["391", "483"], ["391", "483"], ["479", "483"], ["479", "483"], ["396", "483"], ["396", "483"], ["396", "483"], ["405", "483"], ["409", "483"], ["409", "483"], ["415", "483"], ["418", "483"], ["418", "483"], ["418", "483"], ["440", "483"], ["440", "483"], ["463", "483"], ["470", "483"], ["468", "483"], ["467", "483"], ["463", "483"], ["463", "483"], ["444", "483"], ["453", "483"], ["451", "483"], ["450", "483"], ["449", "483"], ["457", "483"], ["449", "483"], ["448", "483"], ["444", "483"], ["444", "483"], ["474", "483"], ["474", "483"], ["426", "483"], ["426", "483"], ["425", "483"], ["425", "483"], ["433", "483"], ["436", "483"], ["421", "483"], ["226", "483"], ["226", "483"], ["226", "483"], ["235", "483"], ["238", "483"], ["238", "483"], ["246", "483"], ["245", "483"], ["245", "483"], ["241", "483"], ["254", "483"], ["257", "483"], ["256", "483"], ["254", "483"], ["254", "483"], ["262", "483"], ["264", "483"], ["268", "483"], ["264", "483"], ["262", "483"], ["262", "483"], ["275", "483"], ["275", "483"], ["274", "483"], ["281", "483"], ["281", "483"], ["274", "483"], ["274", "483"], ["287", "483"], ["287", "483"], ["287", "483"], ["292", "483"], ["292", "483"], ["299", "483"], ["302", "483"], ["302", "483"], ["222", "483"], ["310", "483"], ["310", "483"], ["309", "483"], ["309", "483"], ["318", "483"], ["320", "483"], ["320", "483"], ["318", "483"], ["318", "483"], ["326", "483"], ["330", "483"], ["330", "483"], ["329", "483"], ["329", "483"], ["328", "483"], ["328", "483"], ["326", "483"], ["326", "483"], ["347", "483"], ["347", "483"], ["346", "483"], ["353", "483"], ["353", "483"], ["346", "483"], ["346", "483"], ["359", "483"], ["359", "483"], ["359", "483"], ["364", "483"], ["364", "483"], ["305", "483"], ["206", "483"], ["206", "483"], ["206", "483"], ["203", "483"], ["128", "483"], ["131", "483"], ["131", "483"], ["123", "483"], ["137", "483"], ["144", "483"], ["152", "483"], ["152", "483"], ["143", "483"], ["159", "483"], ["167", "483"], ["167", "483"], ["143", "483"], ["137", "483"], ["137", "483"], ["134", "483"], ["76", "483"], ["82", "483"], ["82", "483"], ["88", "483"], ["93", "483"], ["99", "483"], ["99", "483"], ["92", "483"], ["104", "483"], ["110", "483"], ["110", "483"], ["92", "483"], ["88", "483"], ["88", "483"], ["73", "483"], ["19", "20"], ["19", "22"], ["33", "31"], ["37", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["63", "61"], ["177", "175"], ["184", "182"], ["19", "188"], ["373", "371"], ["373", "371"], ["22", "25"], ["19", "25"], ["19", "67"], ["19", "117"], ["19", "195"], ["19", "214"], ["175", "378"], ["378", "385"], ["19", "385"], ["42", "479"], ["86", "479"], ["19", "479"], ["25", "33"], ["19", "33"], ["33", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["40", "47"], ["19", "47"], ["47", "52"], ["19", "52"], ["52", "57"], ["19", "57"], ["57", "63"], ["19", "63"], ["67", "70"], ["73", "70"], ["19", "70"], ["63", "70"], ["70", "73"], ["19", "73"], ["80", "76"], ["86", "82"], ["93", "88"], ["104", "88"], ["117", "120"], ["123", "120"], ["19", "120"], ["70", "120"], ["131", "120"], ["120", "123"], ["19", "123"], ["178", "177"], ["178", "177"], ["185", "184"], ["185", "184"], ["195", "198"], ["203", "198"], ["19", "198"], ["200", "198"], ["200", "198"], ["198", "203"], ["19", "203"], ["210", "206"], ["214", "217"], ["222", "217"], ["19", "217"], ["219", "217"], ["219", "217"], ["217", "222"], ["246", "222"], ["256", "222"], ["19", "222"], ["374", "373"], ["374", "373"], ["19", "373"], ["371", "391"], ["474", "391"], ["19", "391"], ["398", "396"], ["398", "396"], ["407", "405"], ["411", "409"], ["182", "474"], ["398", "474"], ["19", "128"], ["19", "178"], ["120", "178"], ["19", "185"], ["178", "185"], ["19", "200"], ["185", "200"], ["19", "219"], ["200", "219"], ["238", "219"], ["302", "219"], ["19", "374"], ["219", "374"], ["19", "415"], ["42", "80"], ["86", "80"], ["19", "80"], ["80", "86"], ["19", "86"], ["93", "92"], ["104", "92"], ["128", "131"], ["134", "131"], ["19", "131"], ["120", "131"], ["131", "134"], ["19", "134"], ["144", "137"], ["159", "137"], ["19", "210"], ["175", "226"], ["206", "226"], ["230", "226"], ["391", "398"], ["19", "398"], ["182", "398"], ["19", "407"], ["19", "411"], ["415", "418"], ["421", "418"], ["19", "418"], ["374", "418"], ["427", "421"], ["19", "421"], ["409", "440"], ["433", "440"], ["19", "440"], ["94", "93"], ["94", "93"], ["99", "93"], ["99", "93"], ["105", "104"], ["105", "104"], ["110", "104"], ["110", "104"], ["19", "230"], ["19", "235"], ["385", "444"], ["463", "444"], ["19", "444"], ["405", "444"], ["436", "444"], ["440", "444"], ["45", "94"], ["76", "94"], ["31", "94"], ["99", "94"], ["19", "94"], ["45", "99"], ["94", "99"], ["94", "99"], ["19", "99"], ["50", "105"], ["82", "105"], ["35", "105"], ["110", "105"], ["19", "105"], ["50", "110"], ["105", "110"], ["105", "110"], ["19", "110"], ["144", "143"], ["159", "143"], ["235", "238"], ["241", "238"], ["19", "238"], ["219", "238"], ["247", "241"], ["19", "241"], ["426", "425"], ["426", "425"], ["19", "425"], ["405", "433"], ["436", "433"], ["19", "433"], ["427", "436"], ["19", "436"], ["19", "448"], ["405", "448"], ["436", "448"], ["440", "448"], ["385", "463"], ["444", "463"], ["19", "463"], ["405", "463"], ["436", "463"], ["145", "144"], ["145", "144"], ["152", "144"], ["152", "144"], ["160", "159"], ["160", "159"], ["167", "159"], ["167", "159"], ["427", "426"], ["427", "426"], ["396", "426"], ["19", "426"], ["19", "449"], ["405", "449"], ["436", "449"], ["440", "449"], ["19", "467"], ["405", "467"], ["436", "467"], ["45", "145"], ["152", "145"], ["99", "145"], ["152", "145"], ["45", "152"], ["145", "152"], ["145", "152"], ["50", "160"], ["167", "160"], ["110", "160"], ["167", "160"], ["50", "167"], ["160", "167"], ["160", "167"], ["246", "245"], ["246", "245"], ["19", "245"], ["256", "254"], ["256", "254"], ["175", "262"], ["226", "262"], ["268", "262"], ["268", "262"], ["19", "427"], ["418", "427"], ["19", "450"], ["405", "450"], ["436", "450"], ["440", "457"], ["19", "457"], ["19", "468"], ["405", "468"], ["436", "468"], ["247", "246"], ["247", "246"], ["217", "246"], ["19", "246"], ["19", "299"], ["19", "451"], ["405", "451"], ["436", "451"], ["405", "470"], ["436", "470"], ["19", "470"], ["19", "247"], ["238", "247"], ["257", "256"], ["257", "256"], ["246", "256"], ["19", "256"], ["175", "264"], ["226", "264"], ["268", "264"], ["268", "264"], ["275", "274"], ["275", "274"], ["281", "274"], ["281", "274"], ["262", "287"], ["281", "287"], ["19", "287"], ["256", "292"], ["19", "292"], ["299", "302"], ["305", "302"], ["19", "302"], ["238", "302"], ["311", "305"], ["321", "305"], ["19", "305"], ["405", "453"], ["436", "453"], ["19", "453"], ["19", "257"], ["247", "257"], ["19", "268"], ["61", "268"], ["175", "275"], ["281", "275"], ["287", "275"], ["279", "275"], ["175", "281"], ["275", "281"], ["262", "281"], ["19", "281"], ["19", "279"], ["310", "309"], ["310", "309"], ["19", "309"], ["320", "318"], ["320", "318"], ["175", "326"], ["226", "326"], ["61", "326"], ["268", "326"], ["311", "310"], ["311", "310"], ["254", "310"], ["320", "310"], ["19", "310"], ["19", "311"], ["302", "311"], ["321", "320"], ["321", "320"], ["310", "320"], ["19", "320"], ["175", "328"], ["226", "328"], ["61", "328"], ["268", "328"], ["347", "346"], ["347", "346"], ["353", "346"], ["353", "346"], ["326", "359"], ["353", "359"], ["19", "359"], ["256", "364"], ["19", "364"], ["19", "321"], ["311", "321"], ["175", "329"], ["226", "329"], ["61", "329"], ["268", "329"], ["175", "347"], ["353", "347"], ["359", "347"], ["351", "347"], ["175", "353"], ["347", "353"], ["326", "353"], ["19", "353"], ["175", "330"], ["226", "330"], ["61", "330"], ["268", "330"], ["19", "351"], ["70", "104"], ["70", "95"], ["70", "76"], ["70", "93"], ["70", "80"], ["70", "100"], ["70", "88"], ["70", "70"], ["70", "86"], ["70", "94"], ["70", "73"], ["70", "77"], ["70", "92"], ["70", "111"], ["70", "89"], ["70", "99"], ["70", "106"], ["70", "82"], ["70", "83"], ["70", "105"], ["70", "110"], ["120", "120"], ["120", "128"], ["120", "123"], ["120", "131"], ["198", "206"], ["198", "200"], ["198", "198"], ["198", "207"], ["198", "210"], ["198", "203"], ["217", "230"], ["217", "226"], ["217", "217"], ["217", "227"], ["217", "222"], ["217", "219"], ["391", "418"], ["391", "396"], ["391", "476"], ["391", "405"], ["391", "415"], ["391", "411"], ["391", "400"], ["391", "409"], ["391", "474"], ["391", "440"], ["391", "398"], ["391", "407"], ["391", "391"], ["131", "167"], ["131", "146"], ["131", "161"], ["131", "168"], ["131", "134"], ["131", "138"], ["131", "152"], ["131", "160"], ["131", "159"], ["131", "145"], ["131", "131"], ["131", "149"], ["131", "153"], ["131", "144"], ["131", "137"], ["131", "164"], ["131", "139"], ["131", "171"], ["131", "143"], ["131", "156"], ["226", "238"], ["226", "235"], ["418", "418"], ["418", "426"], ["418", "425"], ["418", "427"], ["418", "421"], ["440", "450"], ["440", "464"], ["440", "448"], ["440", "466"], ["440", "447"], ["440", "457"], ["440", "470"], ["440", "467"], ["440", "449"], ["440", "453"], ["440", "468"], ["440", "451"], ["440", "463"], ["440", "444"], ["440", "445"], ["238", "247"], ["238", "245"], ["238", "246"], ["425", "433"], ["425", "436"], ["245", "256"], ["245", "262"], ["245", "264"], ["245", "302"], ["245", "238"], ["245", "268"], ["245", "276"], ["245", "274"], ["245", "254"], ["245", "241"], ["245", "257"], ["245", "279"], ["245", "275"], ["245", "265"], ["245", "299"], ["245", "270"], ["274", "292"], ["274", "288"], ["274", "293"], ["274", "287"], ["302", "302"], ["302", "311"], ["302", "310"], ["302", "305"], ["302", "309"], ["275", "281"], ["275", "282"], ["309", "334"], ["309", "326"], ["309", "338"], ["309", "346"], ["309", "329"], ["309", "348"], ["309", "347"], ["309", "328"], ["309", "321"], ["309", "351"], ["309", "342"], ["309", "320"], ["309", "337"], ["309", "318"], ["309", "330"], ["309", "331"], ["346", "364"], ["346", "365"], ["346", "360"], ["346", "359"], ["347", "353"], ["347", "354"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>5</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>5</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>5</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>5</SUB>>", "29": "<(LOCAL,int hb_x: int)<SUB>8</SUB>>", "31": "<(&lt;operator&gt;.assignment,int hb_x = nextInt())<SUB>8</SUB>>", "33": "<(nextInt,nextInt())<SUB>8</SUB>>", "35": "<(&lt;operator&gt;.assignment,int hb_y = nextInt())<SUB>8</SUB>>", "37": "<(nextInt,nextInt())<SUB>8</SUB>>", "39": "<(LOCAL,int n: int)<SUB>9</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>9</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] ox = new int[n])<SUB>10</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[n])>", "49": "<(LOCAL,int[] oy: int[])<SUB>11</SUB>>", "51": "<(IDENTIFIER,oy,int[] oy = new int[n])<SUB>11</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[][] dt = new int[n][n])<SUB>16</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n][n])>", "59": "<(IDENTIFIER,n,new int[n][n])<SUB>16</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[] hbd = new int[n])<SUB>17</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n])>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,ox[i])<SUB>19</SUB>>", "79": "<(IDENTIFIER,i,ox[i] = nextInt())<SUB>19</SUB>>", "81": "<(IDENTIFIER,in,nextInt())<SUB>19</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,oy[i])<SUB>20</SUB>>", "85": "<(IDENTIFIER,i,oy[i] = nextInt())<SUB>20</SUB>>", "87": "<(IDENTIFIER,in,nextInt())<SUB>20</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,hbd[i])<SUB>21</SUB>>", "91": "<(IDENTIFIER,i,hbd[i] = (ox[i] - hb_x) * (ox[i] - hb_x) + (oy[i] - hb_y) * (oy[i] - hb_y))<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.multiplication,(ox[i] - hb_x) * (ox[i] - hb_x))<SUB>21</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,ox[i])<SUB>21</SUB>>", "97": "<(IDENTIFIER,i,ox[i] - hb_x)<SUB>21</SUB>>", "99": "<(&lt;operator&gt;.subtraction,ox[i] - hb_x)<SUB>21</SUB>>", "101": "<(IDENTIFIER,ox,ox[i] - hb_x)<SUB>21</SUB>>", "103": "<(IDENTIFIER,hb_x,ox[i] - hb_x)<SUB>21</SUB>>", "105": "<(&lt;operator&gt;.subtraction,oy[i] - hb_y)<SUB>22</SUB>>", "107": "<(IDENTIFIER,oy,oy[i] - hb_y)<SUB>22</SUB>>", "109": "<(IDENTIFIER,hb_y,oy[i] - hb_y)<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,oy[i])<SUB>22</SUB>>", "113": "<(IDENTIFIER,i,oy[i] - hb_y)<SUB>22</SUB>>", "115": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>26</SUB>>", "117": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "119": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "121": "<(IDENTIFIER,i,i &lt; n)<SUB>26</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "127": "<(LOCAL,int j: int)<SUB>27</SUB>>", "129": "<(IDENTIFIER,j,int j = 0)<SUB>27</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>27</SUB>>", "133": "<(IDENTIFIER,n,j &lt; n)<SUB>27</SUB>>", "135": "<(IDENTIFIER,j,j++)<SUB>27</SUB>>", "137": "<(&lt;operator&gt;.assignment,dt[i][j] = (ox[i] - ox[j]) * (ox[i] - ox[j]) + (oy[i] - oy[j]) * (oy[i] - oy[j]))<SUB>28</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,dt[i])<SUB>28</SUB>>", "141": "<(IDENTIFIER,i,dt[i][j] = (ox[i] - ox[j]) * (ox[i] - ox[j]) + (oy[i] - oy[j]) * (oy[i] - oy[j]))<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.addition,(ox[i] - ox[j]) * (ox[i] - ox[j]) + (oy[i] - oy[j]) * (oy[i] - oy[j]))<SUB>28</SUB>>", "145": "<(&lt;operator&gt;.subtraction,ox[i] - ox[j])<SUB>28</SUB>>", "147": "<(IDENTIFIER,ox,ox[i] - ox[j])<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,ox[j])<SUB>28</SUB>>", "151": "<(IDENTIFIER,j,ox[i] - ox[j])<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,ox[i])<SUB>28</SUB>>", "155": "<(IDENTIFIER,i,ox[i] - ox[j])<SUB>28</SUB>>", "157": "<(IDENTIFIER,ox,ox[i] - ox[j])<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.multiplication,(oy[i] - oy[j]) * (oy[i] - oy[j]))<SUB>29</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,oy[i])<SUB>29</SUB>>", "163": "<(IDENTIFIER,i,oy[i] - oy[j])<SUB>29</SUB>>", "165": "<(IDENTIFIER,oy,oy[i] - oy[j])<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.subtraction,oy[i] - oy[j])<SUB>29</SUB>>", "169": "<(IDENTIFIER,oy,oy[i] - oy[j])<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,oy[j])<SUB>29</SUB>>", "173": "<(IDENTIFIER,j,oy[i] - oy[j])<SUB>29</SUB>>", "175": "<(&lt;operator&gt;.assignment,int[] sofar = new int[1 &lt;&lt; n])<SUB>35</SUB>>", "177": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "179": "<(LITERAL,1,1 &lt;&lt; n)<SUB>35</SUB>>", "181": "<(LOCAL,int[] masks: int[])<SUB>36</SUB>>", "183": "<(IDENTIFIER,masks,int[] masks = new int[1 &lt;&lt; n])<SUB>36</SUB>>", "185": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>36</SUB>>", "187": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,sofar[0])<SUB>37</SUB>>", "191": "<(LITERAL,0,sofar[0] = 0)<SUB>37</SUB>>", "193": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 1; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>38</SUB>>", "197": "<(LITERAL,1,int i = 1)<SUB>38</SUB>>", "199": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>38</SUB>>", "201": "<(LITERAL,1,1 &lt;&lt; n)<SUB>38</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,i++)<SUB>38</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,sofar[i])<SUB>39</SUB>>", "209": "<(IDENTIFIER,i,sofar[i] = -1)<SUB>39</SUB>>", "211": "<(LITERAL,1,-1)<SUB>39</SUB>>", "213": "<(LOCAL,int i: int)<SUB>42</SUB>>", "215": "<(IDENTIFIER,i,int i = 0)<SUB>42</SUB>>", "217": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>42</SUB>>", "219": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>42</SUB>>", "221": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>42</SUB>>", "223": "<(IDENTIFIER,i,i++)<SUB>42</SUB>>", "225": "<(CONTROL_STRUCTURE,if (sofar[i] != -1),if (sofar[i] != -1))<SUB>43</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,sofar[i])<SUB>43</SUB>>", "229": "<(IDENTIFIER,i,sofar[i] != -1)<SUB>43</SUB>>", "231": "<(LITERAL,1,-1)<SUB>43</SUB>>", "233": "<(CONTROL_STRUCTURE,for (int maskbit = 0; Some(maskbit &lt; n); maskbit++),for (int maskbit = 0; Some(maskbit &lt; n); maskbit++))<SUB>44</SUB>>", "235": "<(&lt;operator&gt;.assignment,int maskbit = 0)<SUB>44</SUB>>", "237": "<(LITERAL,0,int maskbit = 0)<SUB>44</SUB>>", "239": "<(IDENTIFIER,maskbit,maskbit &lt; n)<SUB>44</SUB>>", "241": "<(&lt;operator&gt;.postIncrement,maskbit++)<SUB>44</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "245": "<(&lt;operator&gt;.equals,((1 &lt;&lt; maskbit) &amp; i) == 0)<SUB>46</SUB>>", "247": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; maskbit)<SUB>46</SUB>>", "249": "<(IDENTIFIER,maskbit,1 &lt;&lt; maskbit)<SUB>46</SUB>>", "251": "<(LITERAL,0,((1 &lt;&lt; maskbit) &amp; i) == 0)<SUB>46</SUB>>", "253": "<(LOCAL,int iffirst: int)<SUB>47</SUB>>", "255": "<(IDENTIFIER,iffirst,int iffirst = (1 &lt;&lt; maskbit) | i)<SUB>47</SUB>>", "257": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; maskbit)<SUB>47</SUB>>", "259": "<(IDENTIFIER,maskbit,1 &lt;&lt; maskbit)<SUB>47</SUB>>", "261": "<(LOCAL,int fromold: int)<SUB>48</SUB>>", "263": "<(IDENTIFIER,fromold,int fromold = sofar[i] + 2 * hbd[maskbit])<SUB>48</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,sofar[i])<SUB>48</SUB>>", "267": "<(IDENTIFIER,i,sofar[i] + 2 * hbd[maskbit])<SUB>48</SUB>>", "269": "<(LITERAL,2,2 * hbd[maskbit])<SUB>48</SUB>>", "271": "<(IDENTIFIER,hbd,2 * hbd[maskbit])<SUB>48</SUB>>", "273": "<(CONTROL_STRUCTURE,if (sofar[iffirst] == -1 || sofar[iffirst] &gt; fromold),if (sofar[iffirst] == -1 || sofar[iffirst] &gt; fromold))<SUB>50</SUB>>", "275": "<(&lt;operator&gt;.equals,sofar[iffirst] == -1)<SUB>50</SUB>>", "277": "<(IDENTIFIER,sofar,sofar[iffirst] == -1)<SUB>50</SUB>>", "279": "<(&lt;operator&gt;.minus,-1)<SUB>50</SUB>>", "281": "<(&lt;operator&gt;.greaterThan,sofar[iffirst] &gt; fromold)<SUB>50</SUB>>", "283": "<(IDENTIFIER,sofar,sofar[iffirst] &gt; fromold)<SUB>50</SUB>>", "285": "<(IDENTIFIER,fromold,sofar[iffirst] &gt; fromold)<SUB>50</SUB>>", "287": "<(&lt;operator&gt;.assignment,sofar[iffirst] = fromold)<SUB>52</SUB>>", "289": "<(IDENTIFIER,sofar,sofar[iffirst] = fromold)<SUB>52</SUB>>", "291": "<(IDENTIFIER,fromold,sofar[iffirst] = fromold)<SUB>52</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,masks[iffirst])<SUB>53</SUB>>", "295": "<(IDENTIFIER,iffirst,masks[iffirst] = i)<SUB>53</SUB>>", "297": "<(CONTROL_STRUCTURE,for (int otherone = 0; Some(otherone &lt; n); otherone++),for (int otherone = 0; Some(otherone &lt; n); otherone++))<SUB>57</SUB>>", "299": "<(&lt;operator&gt;.assignment,int otherone = 0)<SUB>57</SUB>>", "301": "<(LITERAL,0,int otherone = 0)<SUB>57</SUB>>", "303": "<(IDENTIFIER,otherone,otherone &lt; n)<SUB>57</SUB>>", "305": "<(&lt;operator&gt;.postIncrement,otherone++)<SUB>57</SUB>>", "307": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "309": "<(&lt;operator&gt;.equals,((1 &lt;&lt; otherone) &amp; iffirst) == 0)<SUB>58</SUB>>", "311": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; otherone)<SUB>58</SUB>>", "313": "<(IDENTIFIER,otherone,1 &lt;&lt; otherone)<SUB>58</SUB>>", "315": "<(LITERAL,0,((1 &lt;&lt; otherone) &amp; iffirst) == 0)<SUB>58</SUB>>", "317": "<(LOCAL,int iffollow: int)<SUB>59</SUB>>", "319": "<(IDENTIFIER,iffollow,int iffollow = (1 &lt;&lt; otherone) | iffirst)<SUB>59</SUB>>", "321": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; otherone)<SUB>59</SUB>>", "323": "<(IDENTIFIER,otherone,1 &lt;&lt; otherone)<SUB>59</SUB>>", "325": "<(LOCAL,int fromi: int)<SUB>60</SUB>>", "327": "<(IDENTIFIER,fromi,int fromi = sofar[i] + hbd[maskbit] + dt[maskbit][otherone] + hbd[otherone])<SUB>60</SUB>>", "329": "<(&lt;operator&gt;.addition,sofar[i] + hbd[maskbit] + dt[maskbit][otherone])<SUB>60</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,sofar[i])<SUB>60</SUB>>", "333": "<(IDENTIFIER,i,sofar[i] + hbd[maskbit])<SUB>60</SUB>>", "335": "<(IDENTIFIER,hbd,sofar[i] + hbd[maskbit])<SUB>60</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,dt[maskbit][otherone])<SUB>60</SUB>>", "339": "<(IDENTIFIER,dt,sofar[i] + hbd[maskbit] + dt[maskbit][otherone])<SUB>60</SUB>>", "341": "<(IDENTIFIER,otherone,sofar[i] + hbd[maskbit] + dt[maskbit][otherone])<SUB>60</SUB>>", "343": "<(IDENTIFIER,hbd,sofar[i] + hbd[maskbit] + dt[maskbit][otherone] + hbd[otherone])<SUB>60</SUB>>", "345": "<(CONTROL_STRUCTURE,if (sofar[iffollow] == -1 || sofar[iffollow] &gt; fromi),if (sofar[iffollow] == -1 || sofar[iffollow] &gt; fromi))<SUB>63</SUB>>", "347": "<(&lt;operator&gt;.equals,sofar[iffollow] == -1)<SUB>63</SUB>>", "349": "<(IDENTIFIER,sofar,sofar[iffollow] == -1)<SUB>63</SUB>>", "351": "<(&lt;operator&gt;.minus,-1)<SUB>63</SUB>>", "353": "<(&lt;operator&gt;.greaterThan,sofar[iffollow] &gt; fromi)<SUB>63</SUB>>", "355": "<(IDENTIFIER,sofar,sofar[iffollow] &gt; fromi)<SUB>63</SUB>>", "357": "<(IDENTIFIER,fromi,sofar[iffollow] &gt; fromi)<SUB>63</SUB>>", "359": "<(&lt;operator&gt;.assignment,sofar[iffollow] = fromi)<SUB>64</SUB>>", "361": "<(IDENTIFIER,sofar,sofar[iffollow] = fromi)<SUB>64</SUB>>", "363": "<(IDENTIFIER,fromi,sofar[iffollow] = fromi)<SUB>64</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,masks[iffollow])<SUB>65</SUB>>", "367": "<(IDENTIFIER,iffollow,masks[iffollow] = i)<SUB>65</SUB>>", "369": "<(CONTROL_STRUCTURE,break;,break;)<SUB>69</SUB>>", "371": "<(&lt;operator&gt;.assignment,int end_val = (1 &lt;&lt; n) - 1)<SUB>82</SUB>>", "373": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>82</SUB>>", "375": "<(LITERAL,1,1 &lt;&lt; n)<SUB>82</SUB>>", "377": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>82</SUB>>", "379": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>84</SUB>>", "381": "<(FIELD_IDENTIFIER,out,out)<SUB>84</SUB>>", "383": "<(IDENTIFIER,sofar,System.out.println(sofar[end_val]))<SUB>84</SUB>>", "385": "<(print,System.out.print(0))<SUB>85</SUB>>", "387": "<(IDENTIFIER,System,System.out.print(0))<SUB>85</SUB>>", "389": "<(LITERAL,0,System.out.print(0))<SUB>85</SUB>>", "391": "<(&lt;operator&gt;.greaterThan,end_val &gt; 0)<SUB>86</SUB>>", "393": "<(LITERAL,0,end_val &gt; 0)<SUB>86</SUB>>", "395": "<(LOCAL,int diff: int)<SUB>88</SUB>>", "397": "<(IDENTIFIER,diff,int diff = end_val ^ masks[end_val])<SUB>88</SUB>>", "399": "<(IDENTIFIER,end_val,end_val ^ masks[end_val])<SUB>88</SUB>>", "401": "<(IDENTIFIER,masks,end_val ^ masks[end_val])<SUB>88</SUB>>", "403": "<(LOCAL,int obj1: int)<SUB>89</SUB>>", "405": "<(&lt;operator&gt;.assignment,int obj1 = -1)<SUB>89</SUB>>", "407": "<(&lt;operator&gt;.minus,-1)<SUB>89</SUB>>", "409": "<(&lt;operator&gt;.assignment,int obj2 = -1)<SUB>89</SUB>>", "411": "<(&lt;operator&gt;.minus,-1)<SUB>89</SUB>>", "413": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>90</SUB>>", "415": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>90</SUB>>", "417": "<(LITERAL,0,int i = 0)<SUB>90</SUB>>", "419": "<(IDENTIFIER,i,i &lt; n)<SUB>90</SUB>>", "421": "<(&lt;operator&gt;.postIncrement,i++)<SUB>90</SUB>>", "423": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>90</SUB>>", "425": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; i) &amp; diff) &gt; 0)<SUB>91</SUB>>", "427": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>91</SUB>>", "429": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>91</SUB>>", "431": "<(LITERAL,0,((1 &lt;&lt; i) &amp; diff) &gt; 0)<SUB>91</SUB>>", "433": "<(&lt;operator&gt;.assignment,obj2 = obj1)<SUB>92</SUB>>", "435": "<(IDENTIFIER,obj1,obj2 = obj1)<SUB>92</SUB>>", "437": "<(IDENTIFIER,obj1,obj1 = i)<SUB>93</SUB>>", "439": "<(CONTROL_STRUCTURE,if (obj2 &gt;= 0),if (obj2 &gt;= 0))<SUB>97</SUB>>", "441": "<(IDENTIFIER,obj2,obj2 &gt;= 0)<SUB>97</SUB>>", "443": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>97</SUB>>", "445": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>99</SUB>>", "447": "<(FIELD_IDENTIFIER,out,out)<SUB>99</SUB>>", "449": "<(&lt;operator&gt;.addition,&quot; &quot; + (obj1 + 1) + &quot; &quot; + (obj2 + 1))<SUB>99</SUB>>", "451": "<(&lt;operator&gt;.addition,&quot; &quot; + (obj1 + 1))<SUB>99</SUB>>", "453": "<(&lt;operator&gt;.addition,obj1 + 1)<SUB>99</SUB>>", "455": "<(LITERAL,1,obj1 + 1)<SUB>99</SUB>>", "457": "<(&lt;operator&gt;.addition,obj2 + 1)<SUB>99</SUB>>", "459": "<(LITERAL,1,obj2 + 1)<SUB>99</SUB>>", "461": "<(CONTROL_STRUCTURE,else,else)<SUB>100</SUB>>", "463": "<(print,System.out.print(&quot; &quot; + (obj1 + 1) + &quot; 0&quot;))<SUB>102</SUB>>", "465": "<(IDENTIFIER,System,System.out.print(&quot; &quot; + (obj1 + 1) + &quot; 0&quot;))<SUB>102</SUB>>", "467": "<(&lt;operator&gt;.addition,&quot; &quot; + (obj1 + 1) + &quot; 0&quot;)<SUB>102</SUB>>", "469": "<(LITERAL,&quot; &quot;,&quot; &quot; + (obj1 + 1))<SUB>102</SUB>>", "471": "<(IDENTIFIER,obj1,obj1 + 1)<SUB>102</SUB>>", "473": "<(LITERAL,&quot; 0&quot;,&quot; &quot; + (obj1 + 1) + &quot; 0&quot;)<SUB>102</SUB>>", "475": "<(IDENTIFIER,end_val,end_val = masks[end_val])<SUB>104</SUB>>", "477": "<(IDENTIFIER,masks,end_val = masks[end_val])<SUB>104</SUB>>", "479": "<(close,close())<SUB>107</SUB>>", "481": "<(MODIFIER,PUBLIC)>", "483": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}