{"edges": [["21", "23"], ["21", "293"], ["21", "294"], ["21", "295"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "54"], ["23", "61"], ["23", "68"], ["23", "69"], ["23", "76"], ["23", "77"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "138"], ["23", "158"], ["23", "284"], ["23", "289"], ["23", "291"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "105"], ["98", "106"], ["98", "107"], ["98", "116"], ["98", "125"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "104"], ["102", "103"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["149", "150"], ["149", "157"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "168"], ["158", "170"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["170", "172"], ["170", "184"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "183"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "207"], ["196", "197"], ["196", "204"], ["197", "198"], ["197", "203"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "241"], ["207", "242"], ["207", "243"], ["207", "246"], ["207", "249"], ["207", "266"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "225"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["225", "226"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "240"], ["233", "234"], ["233", "235"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "263"], ["254", "255"], ["254", "260"], ["255", "256"], ["255", "259"], ["256", "257"], ["256", "258"], ["260", "261"], ["261", "262"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "276"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["276", "277"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["289", "290"], ["291", "292"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "49"], ["46", "58"], ["54", "65"], ["61", "72"], ["69", "80"], ["77", "85"], ["85", "90"], ["284", "289"], ["289", "291"], ["291", "295"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["56", "54"], ["63", "61"], ["71", "69"], ["79", "77"], ["90", "93"], ["93", "102"], ["93", "140"], ["96", "93"], ["140", "143"], ["143", "153"], ["143", "160"], ["146", "143"], ["160", "165"], ["163", "175"], ["163", "286"], ["168", "165"], ["286", "284"], ["29", "36"], ["32", "27"], ["44", "42"], ["49", "48"], ["58", "56"], ["65", "63"], ["72", "71"], ["80", "79"], ["99", "112"], ["107", "121"], ["116", "127"], ["125", "96"], ["149", "146"], ["165", "163"], ["172", "186"], ["31", "29"], ["34", "32"], ["101", "99"], ["109", "107"], ["118", "116"], ["126", "133"], ["131", "125"], ["150", "149"], ["174", "172"], ["186", "189"], ["189", "199"], ["189", "168"], ["192", "189"], ["36", "34"], ["102", "101"], ["110", "109"], ["119", "118"], ["127", "126"], ["132", "131"], ["151", "150"], ["175", "181"], ["176", "174"], ["112", "110"], ["121", "119"], ["133", "132"], ["153", "151"], ["177", "176"], ["196", "210"], ["196", "192"], ["179", "177"], ["197", "196"], ["197", "204"], ["204", "196"], ["243", "246"], ["246", "250"], ["181", "179"], ["198", "197"], ["210", "213"], ["213", "221"], ["213", "243"], ["216", "213"], ["250", "256"], ["250", "268"], ["267", "280"], ["267", "192"], ["199", "198"], ["263", "250"], ["268", "267"], ["268", "272"], ["271", "267"], ["277", "192"], ["220", "228"], ["220", "216"], ["255", "261"], ["255", "263"], ["272", "271"], ["279", "277"], ["221", "220"], ["226", "216"], ["256", "255"], ["261", "263"], ["280", "279"], ["227", "237"], ["232", "226"], ["228", "227"], ["233", "232"], ["235", "233"], ["237", "235"], ["21", "26"], ["22", "295"], ["24", "295"], ["29", "295"], ["32", "295"], ["32", "295"], ["32", "295"], ["27", "295"], ["38", "295"], ["41", "295"], ["41", "295"], ["46", "295"], ["48", "295"], ["46", "295"], ["46", "295"], ["56", "295"], ["54", "295"], ["54", "295"], ["63", "295"], ["63", "295"], ["61", "295"], ["61", "295"], ["69", "295"], ["71", "295"], ["69", "295"], ["69", "295"], ["77", "295"], ["77", "295"], ["77", "295"], ["85", "295"], ["93", "295"], ["93", "295"], ["140", "295"], ["143", "295"], ["160", "295"], ["163", "295"], ["165", "295"], ["163", "295"], ["163", "295"], ["286", "295"], ["284", "295"], ["284", "295"], ["289", "295"], ["291", "295"], ["291", "295"], ["172", "295"], ["179", "295"], ["177", "295"], ["176", "295"], ["174", "295"], ["172", "295"], ["172", "295"], ["186", "295"], ["189", "295"], ["189", "295"], ["168", "295"], ["198", "295"], ["197", "295"], ["196", "295"], ["204", "295"], ["196", "295"], ["196", "295"], ["210", "295"], ["213", "295"], ["213", "295"], ["243", "295"], ["246", "295"], ["250", "295"], ["250", "295"], ["268", "295"], ["267", "295"], ["267", "295"], ["267", "295"], ["277", "295"], ["277", "295"], ["192", "295"], ["255", "295"], ["255", "295"], ["261", "295"], ["263", "295"], ["226", "295"], ["235", "295"], ["226", "295"], ["226", "295"], ["216", "295"], ["149", "295"], ["149", "295"], ["146", "295"], ["99", "295"], ["101", "295"], ["99", "295"], ["99", "295"], ["107", "295"], ["110", "295"], ["109", "295"], ["107", "295"], ["107", "295"], ["116", "295"], ["119", "295"], ["119", "295"], ["118", "295"], ["116", "295"], ["116", "295"], ["125", "295"], ["131", "295"], ["125", "295"], ["125", "295"], ["96", "295"], ["177", "295"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["56", "54"], ["56", "54"], ["63", "61"], ["63", "61"], ["71", "69"], ["71", "69"], ["79", "77"], ["79", "77"], ["21", "85"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "90"], ["21", "140"], ["21", "160"], ["41", "284"], ["21", "284"], ["286", "284"], ["286", "284"], ["49", "289"], ["102", "289"], ["21", "289"], ["284", "291"], ["21", "291"], ["21", "29"], ["21", "37"], ["49", "48"], ["21", "48"], ["21", "56"], ["46", "56"], ["56", "63"], ["21", "63"], ["46", "63"], ["54", "71"], ["21", "71"], ["80", "79"], ["80", "79"], ["21", "79"], ["90", "93"], ["96", "93"], ["21", "93"], ["61", "93"], ["93", "96"], ["21", "96"], ["101", "99"], ["101", "99"], ["109", "107"], ["109", "107"], ["118", "116"], ["118", "116"], ["131", "125"], ["21", "125"], ["140", "143"], ["146", "143"], ["21", "143"], ["79", "143"], ["153", "146"], ["21", "146"], ["21", "149"], ["160", "163"], ["168", "163"], ["21", "163"], ["165", "163"], ["165", "163"], ["179", "168"], ["198", "168"], ["21", "168"], ["235", "168"], ["21", "172"], ["176", "172"], ["176", "172"], ["85", "286"], ["277", "286"], ["21", "286"], ["29", "32"], ["21", "32"], ["27", "49"], ["21", "49"], ["54", "72"], ["21", "72"], ["21", "80"], ["71", "80"], ["21", "165"], ["143", "165"], ["189", "165"], ["21", "186"], ["102", "101"], ["21", "101"], ["110", "109"], ["110", "109"], ["21", "109"], ["119", "118"], ["119", "118"], ["21", "118"], ["21", "131"], ["21", "174"], ["176", "174"], ["176", "174"], ["186", "189"], ["192", "189"], ["21", "189"], ["165", "189"], ["213", "189"], ["199", "192"], ["204", "192"], ["237", "192"], ["21", "192"], ["49", "102"], ["21", "102"], ["63", "110"], ["119", "110"], ["21", "110"], ["56", "110"], ["99", "110"], ["110", "119"], ["21", "119"], ["63", "119"], ["99", "119"], ["177", "176"], ["177", "176"], ["21", "176"], ["21", "153"], ["143", "153"], ["21", "177"], ["179", "177"], ["179", "177"], ["197", "196"], ["197", "196"], ["204", "196"], ["204", "196"], ["21", "243"], ["198", "246"], ["235", "246"], ["21", "246"], ["181", "179"], ["21", "179"], ["198", "197"], ["198", "197"], ["21", "197"], ["199", "204"], ["21", "204"], ["172", "204"], ["21", "210"], ["163", "181"], ["21", "181"], ["199", "198"], ["199", "198"], ["179", "198"], ["21", "198"], ["235", "198"], ["210", "213"], ["216", "213"], ["21", "213"], ["189", "213"], ["213", "216"], ["21", "216"], ["246", "250"], ["263", "250"], ["21", "250"], ["21", "263"], ["268", "267"], ["268", "267"], ["226", "277"], ["21", "199"], ["189", "199"], ["256", "263"], ["243", "268"], ["261", "268"], ["21", "268"], ["85", "277"], ["21", "277"], ["256", "255"], ["256", "255"], ["21", "255"], ["250", "256"], ["21", "256"], ["243", "261"], ["21", "261"], ["198", "235"], ["21", "235"], ["237", "235"], ["237", "235"], ["21", "237"], ["199", "237"], ["204", "237"], ["93", "107"], ["93", "96"], ["93", "102"], ["93", "131"], ["93", "132"], ["93", "119"], ["93", "121"], ["93", "112"], ["93", "93"], ["93", "101"], ["93", "118"], ["93", "127"], ["93", "116"], ["93", "99"], ["93", "126"], ["93", "110"], ["93", "125"], ["93", "109"], ["93", "133"], ["143", "146"], ["143", "149"], ["143", "150"], ["143", "151"], ["143", "153"], ["143", "143"], ["163", "163"], ["163", "179"], ["163", "189"], ["163", "168"], ["163", "181"], ["163", "174"], ["163", "186"], ["163", "176"], ["163", "177"], ["163", "165"], ["163", "175"], ["163", "172"], ["189", "192"], ["189", "196"], ["189", "197"], ["189", "198"], ["189", "189"], ["189", "199"], ["196", "213"], ["196", "243"], ["196", "246"], ["196", "267"], ["196", "268"], ["196", "210"], ["196", "250"], ["197", "204"], ["213", "213"], ["213", "221"], ["213", "220"], ["213", "216"], ["250", "256"], ["250", "255"], ["250", "263"], ["250", "250"], ["267", "279"], ["267", "280"], ["267", "277"], ["268", "272"], ["268", "271"], ["220", "232"], ["220", "226"], ["220", "228"], ["220", "233"], ["220", "235"], ["220", "237"], ["220", "227"], ["255", "261"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY kek = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,kek,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY outkek = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,outkek,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,String[] input: java.lang.String[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,input,String[] input = split(&quot; &quot;))<SUB>6</SUB>>", "49": "<(readLine,readLine())<SUB>6</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(LOCAL,int M: int)<SUB>7</SUB>>", "55": "<(IDENTIFIER,N,int N = Integer.parseInt(input[0]))<SUB>7</SUB>>", "57": "<(IDENTIFIER,Integer,Integer.parseInt(input[0]))<SUB>7</SUB>>", "59": "<(IDENTIFIER,input,Integer.parseInt(input[0]))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int M = Integer.parseInt(input[1]))<SUB>7</SUB>>", "63": "<(parseInt,Integer.parseInt(input[1]))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,input[1])<SUB>7</SUB>>", "67": "<(LITERAL,1,Integer.parseInt(input[1]))<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.assignment,boolean[][] connected = new boolean[N + 1][N])<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.alloc,new boolean[N + 1][N])>", "73": "<(IDENTIFIER,N,N + 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,N,new boolean[N + 1][N])<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,long[][] walks = new long[1 &lt;&lt; N][N])<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.alloc,new long[1 &lt;&lt; N][N])>", "81": "<(LITERAL,1,1 &lt;&lt; N)<SUB>9</SUB>>", "83": "<(IDENTIFIER,N,new long[1 &lt;&lt; N][N])<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>10</SUB>>", "87": "<(LITERAL,0,long res = 0)<SUB>10</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; M)<SUB>12</SUB>>", "95": "<(IDENTIFIER,M,i &lt; M)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,input = split(&quot; &quot;))<SUB>13</SUB>>", "101": "<(split,split(&quot; &quot;))<SUB>13</SUB>>", "103": "<(IDENTIFIER,kek,readLine())<SUB>13</SUB>>", "105": "<(LOCAL,int A: int)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignment,int A = Integer.parseInt(input[0]) - 1)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.subtraction,Integer.parseInt(input[0]) - 1)<SUB>14</SUB>>", "111": "<(IDENTIFIER,Integer,Integer.parseInt(input[0]))<SUB>14</SUB>>", "113": "<(IDENTIFIER,input,Integer.parseInt(input[0]))<SUB>14</SUB>>", "115": "<(LITERAL,1,Integer.parseInt(input[0]) - 1)<SUB>14</SUB>>", "117": "<(IDENTIFIER,B,int B = Integer.parseInt(input[1]) - 1)<SUB>14</SUB>>", "119": "<(parseInt,Integer.parseInt(input[1]))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,input[1])<SUB>14</SUB>>", "123": "<(LITERAL,1,Integer.parseInt(input[1]))<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.assignment,connected[A][B] = connected[B][A] = true)<SUB>15</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,connected[A])<SUB>15</SUB>>", "129": "<(IDENTIFIER,A,connected[A][B] = connected[B][A] = true)<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.assignment,connected[B][A] = true)<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,connected[B])<SUB>15</SUB>>", "135": "<(IDENTIFIER,B,connected[B][A] = true)<SUB>15</SUB>>", "137": "<(LITERAL,true,connected[B][A] = true)<SUB>15</SUB>>", "139": "<(LOCAL,int i: int)<SUB>18</SUB>>", "141": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>18</SUB>>", "145": "<(IDENTIFIER,N,i &lt; N)<SUB>18</SUB>>", "147": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.assignment,walks[1 &lt;&lt; i][i] = 1)<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,walks[1 &lt;&lt; i])<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>19</SUB>>", "155": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>19</SUB>>", "157": "<(LITERAL,1,walks[1 &lt;&lt; i][i] = 1)<SUB>19</SUB>>", "159": "<(LOCAL,int i: int)<SUB>22</SUB>>", "161": "<(IDENTIFIER,i,int i = 1)<SUB>22</SUB>>", "163": "<(&lt;operator&gt;.lessThan,i &lt; 1 &lt;&lt; N)<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>22</SUB>>", "167": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>22</SUB>>", "169": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "171": "<(LOCAL,int temp: int)<SUB>23</SUB>>", "173": "<(IDENTIFIER,temp,int temp = (int) (Math.log(i &amp; -(i)) / 0.6931471805599453))<SUB>23</SUB>>", "175": "<(TYPE_REF,int,int)<SUB>23</SUB>>", "177": "<(log,Math.log(i &amp; -(i)))<SUB>23</SUB>>", "179": "<(&lt;operator&gt;.and,i &amp; -(i))<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.minus,-(i))<SUB>23</SUB>>", "183": "<(LITERAL,0.6931471805599453,Math.log(i &amp; -(i)) / 0.6931471805599453)<SUB>23</SUB>>", "185": "<(LOCAL,int j: int)<SUB>24</SUB>>", "187": "<(IDENTIFIER,j,int j = 0)<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>24</SUB>>", "191": "<(IDENTIFIER,N,j &lt; N)<SUB>24</SUB>>", "193": "<(IDENTIFIER,j,j++)<SUB>24</SUB>>", "195": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; i) &gt; 0 &amp;&amp; j != temp),if (((1 &lt;&lt; j) &amp; i) &gt; 0 &amp;&amp; j != temp))<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.greaterThan,((1 &lt;&lt; j) &amp; i) &gt; 0)<SUB>25</SUB>>", "199": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>25</SUB>>", "201": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>25</SUB>>", "203": "<(LITERAL,0,((1 &lt;&lt; j) &amp; i) &gt; 0)<SUB>25</SUB>>", "205": "<(IDENTIFIER,j,j != temp)<SUB>25</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "209": "<(LOCAL,int k: int)<SUB>26</SUB>>", "211": "<(IDENTIFIER,k,int k = 0)<SUB>26</SUB>>", "213": "<(&lt;operator&gt;.lessThan,k &lt; N)<SUB>26</SUB>>", "215": "<(IDENTIFIER,N,k &lt; N)<SUB>26</SUB>>", "217": "<(IDENTIFIER,k,k++)<SUB>26</SUB>>", "219": "<(CONTROL_STRUCTURE,if (connected[k][j]),if (connected[k][j]))<SUB>27</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,connected[k])<SUB>27</SUB>>", "223": "<(IDENTIFIER,k,if (connected[k][j]))<SUB>27</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,walks[i][j])<SUB>28</SUB>>", "229": "<(IDENTIFIER,walks,walks[i][j] += walks[i ^ (1 &lt;&lt; j)][k])<SUB>28</SUB>>", "231": "<(IDENTIFIER,j,walks[i][j] += walks[i ^ (1 &lt;&lt; j)][k])<SUB>28</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,walks[i ^ (1 &lt;&lt; j)])<SUB>28</SUB>>", "235": "<(&lt;operator&gt;.xor,i ^ (1 &lt;&lt; j))<SUB>28</SUB>>", "237": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>28</SUB>>", "239": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>28</SUB>>", "241": "<(LOCAL,int count: int)<SUB>32</SUB>>", "243": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>32</SUB>>", "245": "<(LITERAL,0,int count = 0)<SUB>32</SUB>>", "247": "<(IDENTIFIER,track,int track = i)<SUB>32</SUB>>", "249": "<(CONTROL_STRUCTURE,while (track &gt; 0),while (track &gt; 0))<SUB>33</SUB>>", "251": "<(IDENTIFIER,track,track &gt; 0)<SUB>33</SUB>>", "253": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.equals,track % 2 == 1)<SUB>34</SUB>>", "257": "<(IDENTIFIER,track,track % 2)<SUB>34</SUB>>", "259": "<(LITERAL,1,track % 2 == 1)<SUB>34</SUB>>", "261": "<(&lt;operator&gt;.postIncrement,count++)<SUB>35</SUB>>", "263": "<(&lt;operator&gt;.assignmentDivision,track /= 2)<SUB>37</SUB>>", "265": "<(LITERAL,2,track /= 2)<SUB>37</SUB>>", "267": "<(&lt;operator&gt;.logicalAnd,count &gt;= 3 &amp;&amp; connected[temp][j])<SUB>41</SUB>>", "269": "<(IDENTIFIER,count,count &gt;= 3)<SUB>41</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,connected[temp][j])<SUB>41</SUB>>", "273": "<(IDENTIFIER,connected,count &gt;= 3 &amp;&amp; connected[temp][j])<SUB>41</SUB>>", "275": "<(IDENTIFIER,j,count &gt;= 3 &amp;&amp; connected[temp][j])<SUB>41</SUB>>", "277": "<(&lt;operator&gt;.assignmentPlus,res += walks[i][j])<SUB>42</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,walks[i][j])<SUB>42</SUB>>", "281": "<(IDENTIFIER,walks,res += walks[i][j])<SUB>42</SUB>>", "283": "<(IDENTIFIER,j,res += walks[i][j])<SUB>42</SUB>>", "285": "<(IDENTIFIER,outkek,println(res / 2))<SUB>48</SUB>>", "287": "<(IDENTIFIER,res,res / 2)<SUB>48</SUB>>", "289": "<(close,close())<SUB>49</SUB>>", "291": "<(close,close())<SUB>50</SUB>>", "293": "<(MODIFIER,PUBLIC)>", "295": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}