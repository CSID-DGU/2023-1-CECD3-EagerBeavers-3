{"edges": [["21", "23"], ["21", "157"], ["21", "158"], ["21", "159"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "45"], ["23", "46"], ["23", "49"], ["23", "155"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "44"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "65"], ["59", "66"], ["59", "70"], ["59", "71"], ["59", "76"], ["59", "77"], ["59", "78"], ["59", "79"], ["59", "82"], ["59", "85"], ["59", "88"], ["59", "6"], ["59", "143"], ["59", "146"], ["59", "148"], ["61", "62"], ["61", "63"], ["63", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "98"], ["88", "100"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["100", "109"], ["100", "119"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "118"], ["116", "117"], ["119", "120"], ["119", "127"], ["119", "129"], ["120", "121"], ["120", "126"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "138"], ["130", "140"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["138", "139"], ["140", "141"], ["141", "142"], ["143", "144"], ["143", "145"], ["146", "5"], ["146", "147"], ["148", "149"], ["148", "150"], ["148", "151"], ["148", "152"], ["148", "153"], ["148", "154"], ["155", "156"], ["24", "31"], ["27", "46"], ["46", "51"], ["155", "159"], ["26", "24"], ["51", "54"], ["54", "63"], ["54", "155"], ["57", "54"], ["29", "37"], ["32", "27"], ["61", "68"], ["66", "73"], ["71", "79"], ["79", "82"], ["82", "85"], ["85", "90"], ["143", "146"], ["146", "148"], ["148", "57"], ["31", "29"], ["63", "61"], ["68", "66"], ["73", "71"], ["90", "97"], ["93", "103"], ["93", "145"], ["98", "97"], ["145", "143"], ["35", "42"], ["38", "32"], ["95", "93"], ["101", "111"], ["109", "122"], ["37", "35"], ["40", "38"], ["97", "95"], ["102", "107"], ["107", "101"], ["110", "116"], ["115", "109"], ["120", "127"], ["120", "133"], ["127", "98"], ["42", "40"], ["103", "102"], ["111", "110"], ["116", "115"], ["121", "120"], ["122", "121"], ["131", "138"], ["131", "141"], ["138", "98"], ["132", "131"], ["141", "98"], ["133", "132"], ["21", "26"], ["22", "159"], ["24", "159"], ["32", "159"], ["35", "159"], ["38", "159"], ["38", "159"], ["38", "159"], ["32", "159"], ["27", "159"], ["46", "159"], ["51", "159"], ["54", "159"], ["54", "159"], ["54", "159"], ["155", "159"], ["155", "159"], ["61", "159"], ["68", "159"], ["66", "159"], ["66", "159"], ["73", "159"], ["71", "159"], ["71", "159"], ["79", "159"], ["82", "159"], ["85", "159"], ["90", "159"], ["93", "159"], ["93", "159"], ["143", "159"], ["146", "159"], ["148", "159"], ["148", "159"], ["148", "159"], ["148", "159"], ["148", "159"], ["148", "159"], ["148", "159"], ["57", "159"], ["101", "159"], ["101", "159"], ["116", "159"], ["115", "159"], ["109", "159"], ["109", "159"], ["120", "159"], ["120", "159"], ["131", "159"], ["131", "159"], ["141", "159"], ["138", "159"], ["127", "159"], ["98", "159"], ["21", "22"], ["21", "24"], ["21", "46"], ["24", "27"], ["21", "27"], ["35", "27"], ["32", "27"], ["21", "51"], ["27", "155"], ["146", "155"], ["21", "155"], ["21", "29"], ["21", "44"], ["51", "54"], ["57", "54"], ["21", "54"], ["46", "54"], ["54", "57"], ["21", "57"], ["63", "61"], ["68", "66"], ["73", "71"], ["73", "71"], ["21", "79"], ["21", "82"], ["21", "85"], ["21", "143"], ["29", "32"], ["21", "32"], ["35", "32"], ["38", "32"], ["21", "90"], ["143", "146"], ["21", "146"], ["27", "146"], ["146", "148"], ["21", "148"], ["71", "148"], ["93", "148"], ["66", "148"], ["79", "148"], ["127", "148"], ["82", "148"], ["138", "148"], ["85", "148"], ["141", "148"], ["21", "35"], ["21", "43"], ["68", "63"], ["116", "63"], ["21", "63"], ["63", "68"], ["21", "68"], ["61", "73"], ["21", "73"], ["90", "93"], ["98", "93"], ["21", "93"], ["71", "93"], ["93", "98"], ["21", "98"], ["107", "101"], ["115", "109"], ["115", "109"], ["35", "38"], ["21", "38"], ["68", "107"], ["116", "107"], ["21", "107"], ["116", "115"], ["21", "115"], ["109", "120"], ["21", "120"], ["79", "127"], ["21", "127"], ["107", "116"], ["21", "116"], ["120", "131"], ["21", "131"], ["82", "138"], ["21", "138"], ["85", "141"], ["21", "141"], ["54", "68"], ["54", "73"], ["54", "57"], ["54", "66"], ["54", "145"], ["54", "146"], ["54", "85"], ["54", "95"], ["54", "97"], ["54", "82"], ["54", "93"], ["54", "148"], ["54", "143"], ["54", "90"], ["54", "54"], ["54", "79"], ["54", "61"], ["54", "71"], ["54", "63"], ["93", "107"], ["93", "115"], ["93", "98"], ["93", "120"], ["93", "116"], ["93", "122"], ["93", "102"], ["93", "103"], ["93", "121"], ["93", "95"], ["93", "97"], ["93", "93"], ["93", "101"], ["93", "110"], ["93", "111"], ["93", "109"], ["120", "131"], ["120", "132"], ["120", "127"], ["120", "133"], ["131", "141"], ["131", "138"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "3": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj1,new BufferedWriter(new OutputStreamWriter(System.out)))>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,new OutputStreamWriter(System.out))>", "41": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>2</SUB>>", "43": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "45": "<(LOCAL,int T: int)<SUB>4</SUB>>", "47": "<(IDENTIFIER,T,int T = 1)<SUB>4</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int t = 0; Some(t &lt; T); t++),for (int t = 0; Some(t &lt; T); t++))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,int t = 0)<SUB>5</SUB>>", "53": "<(LITERAL,0,int t = 0)<SUB>5</SUB>>", "55": "<(IDENTIFIER,t,t &lt; T)<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,t++)<SUB>5</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.assignment,int n = Int())<SUB>6</SUB>>", "63": "<(Int,Int())<SUB>6</SUB>>", "65": "<(LOCAL,int k: int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,k,int k = Int())<SUB>7</SUB>>", "69": "<(IDENTIFIER,this,Int())<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.assignment,int[][] A = new int[n][2])<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[n][2])>", "75": "<(LITERAL,2,new int[n][2])<SUB>8</SUB>>", "77": "<(LOCAL,int b: int)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.assignment,int a = 0)<SUB>9</SUB>>", "81": "<(LITERAL,0,int a = 0)<SUB>9</SUB>>", "83": "<(IDENTIFIER,b,int b = 0)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>9</SUB>>", "87": "<(LITERAL,0,int c = 0)<SUB>9</SUB>>", "89": "<(LOCAL,int i: int)<SUB>10</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; A.length)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.fieldAccess,A.length)<SUB>10</SUB>>", "97": "<(FIELD_IDENTIFIER,length,length)<SUB>10</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.assignment,A[i][0] = Int())<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>11</SUB>>", "105": "<(IDENTIFIER,i,A[i][0] = Int())<SUB>11</SUB>>", "107": "<(Int,Int())<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.assignment,A[i][1] = Int() - 1)<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>12</SUB>>", "113": "<(IDENTIFIER,i,A[i][1] = Int() - 1)<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.subtraction,Int() - 1)<SUB>12</SUB>>", "117": "<(IDENTIFIER,this,Int())<SUB>12</SUB>>", "119": "<(CONTROL_STRUCTURE,if (A[i][1] == 0),if (A[i][1] == 0))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,A[i][1])<SUB>14</SUB>>", "123": "<(IDENTIFIER,A,A[i][1] == 0)<SUB>14</SUB>>", "125": "<(LITERAL,1,A[i][1] == 0)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,a++)<SUB>14</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>15</SUB>>", "131": "<(&lt;operator&gt;.equals,A[i][1] == 1)<SUB>15</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,A[i][1] == 1)<SUB>15</SUB>>", "137": "<(LITERAL,1,A[i][1] == 1)<SUB>15</SUB>>", "139": "<(IDENTIFIER,b,b++)<SUB>15</SUB>>", "141": "<(&lt;operator&gt;.postIncrement,c++)<SUB>16</SUB>>", "6": "<(LOCAL,Solution sol: ANY)<SUB>18</SUB>>", "144": "<(IDENTIFIER,sol,ANY sol = new Solution(out))<SUB>18</SUB>>", "146": "<(&lt;init&gt;,new Solution(out))<SUB>18</SUB>>", "147": "<(IDENTIFIER,out,new Solution(out))<SUB>18</SUB>>", "149": "<(IDENTIFIER,sol,solution(A, k, a, b, c))<SUB>19</SUB>>", "151": "<(IDENTIFIER,k,solution(A, k, a, b, c))<SUB>19</SUB>>", "153": "<(IDENTIFIER,b,solution(A, k, a, b, c))<SUB>19</SUB>>", "155": "<(close,close())<SUB>21</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}