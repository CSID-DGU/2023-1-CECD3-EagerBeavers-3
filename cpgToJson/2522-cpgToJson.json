{"edges": [["40", "41"], ["40", "251"], ["40", "252"], ["40", "253"], ["41", "4"], ["41", "42"], ["41", "45"], ["41", "6"], ["41", "46"], ["41", "49"], ["41", "11"], ["41", "53"], ["41", "8"], ["41", "57"], ["41", "63"], ["41", "13"], ["41", "86"], ["41", "16"], ["41", "96"], ["41", "99"], ["41", "147"], ["41", "23"], ["41", "150"], ["41", "153"], ["41", "154"], ["41", "155"], ["41", "158"], ["41", "228"], ["41", "232"], ["41", "233"], ["41", "237"], ["41", "249"], ["42", "43"], ["42", "44"], ["45", "3"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["86", "88"], ["88", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "98"], ["99", "18"], ["99", "100"], ["99", "103"], ["99", "106"], ["99", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "132"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "137"], ["133", "134"], ["133", "135"], ["135", "136"], ["137", "138"], ["137", "141"], ["137", "146"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "144"], ["141", "145"], ["147", "148"], ["147", "149"], ["147", "9"], ["150", "151"], ["150", "152"], ["153", "22"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "25"], ["162", "163"], ["162", "166"], ["162", "167"], ["162", "168"], ["162", "171"], ["162", "172"], ["162", "175"], ["162", "215"], ["162", "225"], ["163", "164"], ["163", "165"], ["166", "24"], ["168", "169"], ["168", "170"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "191"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "213"], ["192", "193"], ["192", "200"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["200", "201"], ["200", "206"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["215", "216"], ["215", "221"], ["216", "217"], ["216", "219"], ["217", "218"], ["219", "220"], ["221", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["230", "231"], ["233", "234"], ["233", "235"], ["235", "236"], ["237", "238"], ["237", "240"], ["238", "239"], ["240", "241"], ["240", "242"], ["240", "246"], ["242", "243"], ["242", "244"], ["244", "245"], ["246", "247"], ["246", "248"], ["249", "250"], ["42", "45"], ["45", "48"], ["46", "52"], ["49", "55"], ["53", "60"], ["57", "65"], ["86", "96"], ["96", "100"], ["147", "152"], ["150", "153"], ["153", "155"], ["155", "159"], ["228", "235"], ["233", "238"], ["249", "253"], ["44", "42"], ["48", "46"], ["50", "49"], ["55", "53"], ["59", "57"], ["65", "68"], ["68", "75"], ["68", "92"], ["71", "68"], ["88", "86"], ["100", "103"], ["103", "111"], ["103", "9"], ["106", "103"], ["9", "147"], ["152", "150"], ["159", "165"], ["159", "230"], ["230", "228"], ["235", "233"], ["238", "244"], ["238", "249"], ["52", "50"], ["60", "59"], ["74", "71"], ["89", "88"], ["163", "166"], ["166", "168"], ["168", "172"], ["172", "177"], ["225", "159"], ["242", "246"], ["246", "238"], ["75", "81"], ["78", "74"], ["90", "89"], ["111", "114"], ["114", "124"], ["114", "106"], ["117", "114"], ["165", "163"], ["176", "195"], ["176", "217"], ["216", "222"], ["216", "225"], ["244", "242"], ["79", "84"], ["84", "78"], ["92", "90"], ["121", "135"], ["132", "117"], ["177", "176"], ["177", "182"], ["180", "176"], ["213", "177"], ["217", "219"], ["219", "216"], ["222", "225"], ["81", "79"], ["123", "121"], ["133", "140"], ["181", "187"], ["186", "180"], ["193", "203"], ["193", "213"], ["124", "129"], ["127", "123"], ["135", "133"], ["138", "141"], ["141", "132"], ["182", "185"], ["185", "181"], ["187", "190"], ["190", "186"], ["194", "193"], ["201", "209"], ["206", "213"], ["129", "127"], ["140", "138"], ["195", "198"], ["198", "194"], ["203", "201"], ["208", "206"], ["209", "212"], ["212", "208"], ["40", "44"], ["21", "253"], ["42", "253"], ["45", "253"], ["46", "253"], ["49", "253"], ["49", "253"], ["55", "253"], ["53", "253"], ["53", "253"], ["57", "253"], ["57", "253"], ["57", "253"], ["90", "253"], ["89", "253"], ["88", "253"], ["86", "253"], ["86", "253"], ["96", "253"], ["100", "253"], ["103", "253"], ["103", "253"], ["147", "253"], ["147", "253"], ["150", "253"], ["153", "253"], ["155", "253"], ["159", "253"], ["159", "253"], ["159", "253"], ["228", "253"], ["228", "253"], ["235", "253"], ["233", "253"], ["238", "253"], ["238", "253"], ["249", "253"], ["249", "253"], ["246", "253"], ["246", "253"], ["163", "253"], ["166", "253"], ["168", "253"], ["168", "253"], ["172", "253"], ["176", "253"], ["176", "253"], ["176", "253"], ["217", "253"], ["216", "253"], ["222", "253"], ["222", "253"], ["225", "253"], ["225", "253"], ["193", "253"], ["193", "253"], ["201", "253"], ["201", "253"], ["206", "253"], ["206", "253"], ["213", "253"], ["111", "253"], ["114", "253"], ["114", "253"], ["106", "253"], ["123", "253"], ["123", "253"], ["121", "253"], ["121", "253"], ["132", "253"], ["141", "253"], ["141", "253"], ["141", "253"], ["132", "253"], ["117", "253"], ["74", "253"], ["78", "253"], ["84", "253"], ["78", "253"], ["74", "253"], ["74", "253"], ["71", "253"], ["147", "253"], ["40", "21"], ["40", "42"], ["40", "46"], ["55", "53"], ["59", "57"], ["88", "86"], ["40", "96"], ["40", "150"], ["40", "155"], ["235", "233"], ["42", "45"], ["40", "45"], ["46", "49"], ["40", "49"], ["40", "65"], ["40", "100"], ["40", "147"], ["86", "147"], ["132", "147"], ["150", "153"], ["40", "153"], ["49", "228"], ["40", "228"], ["230", "228"], ["228", "249"], ["246", "249"], ["40", "249"], ["45", "55"], ["40", "55"], ["53", "59"], ["40", "59"], ["65", "68"], ["71", "68"], ["40", "68"], ["53", "68"], ["81", "71"], ["40", "71"], ["57", "74"], ["84", "74"], ["89", "88"], ["89", "88"], ["100", "103"], ["106", "103"], ["40", "103"], ["90", "103"], ["114", "103"], ["141", "106"], ["40", "106"], ["103", "106"], ["155", "159"], ["225", "159"], ["40", "159"], ["96", "159"], ["177", "159"], ["135", "159"], ["40", "163"], ["40", "168"], ["159", "172"], ["40", "172"], ["177", "225"], ["40", "225"], ["153", "230"], ["219", "230"], ["222", "230"], ["40", "230"], ["230", "235"], ["40", "235"], ["233", "238"], ["244", "238"], ["40", "238"], ["244", "242"], ["53", "60"], ["40", "60"], ["90", "89"], ["90", "89"], ["40", "89"], ["103", "111"], ["40", "111"], ["163", "166"], ["40", "166"], ["228", "246"], ["40", "246"], ["242", "246"], ["57", "78"], ["84", "78"], ["40", "90"], ["68", "90"], ["111", "114"], ["117", "114"], ["40", "114"], ["103", "114"], ["141", "117"], ["40", "117"], ["123", "121"], ["123", "121"], ["138", "132"], ["141", "132"], ["40", "132"], ["177", "176"], ["177", "176"], ["180", "176"], ["180", "176"], ["217", "216"], ["219", "216"], ["217", "222"], ["40", "222"], ["238", "244"], ["40", "244"], ["55", "84"], ["40", "84"], ["68", "92"], ["40", "92"], ["172", "177"], ["213", "177"], ["40", "177"], ["159", "177"], ["177", "213"], ["40", "213"], ["166", "217"], ["201", "217"], ["40", "217"], ["153", "219"], ["222", "219"], ["40", "219"], ["68", "81"], ["40", "81"], ["57", "123"], ["40", "138"], ["40", "146"], ["168", "193"], ["206", "193"], ["40", "193"], ["96", "135"], ["40", "135"], ["138", "141"], ["40", "141"], ["129", "141"], ["114", "141"], ["121", "141"], ["166", "201"], ["40", "201"], ["147", "201"], ["180", "201"], ["193", "201"], ["141", "129"], ["40", "129"], ["103", "129"], ["68", "68"], ["68", "75"], ["68", "81"], ["68", "84"], ["68", "74"], ["68", "79"], ["68", "71"], ["68", "78"], ["103", "114"], ["103", "103"], ["103", "111"], ["103", "106"], ["159", "163"], ["159", "225"], ["159", "168"], ["159", "166"], ["159", "217"], ["159", "159"], ["159", "176"], ["159", "177"], ["159", "165"], ["159", "216"], ["159", "219"], ["159", "172"], ["238", "244"], ["238", "242"], ["238", "238"], ["238", "246"], ["114", "114"], ["114", "132"], ["114", "121"], ["114", "129"], ["114", "138"], ["114", "127"], ["114", "141"], ["114", "123"], ["114", "140"], ["114", "135"], ["114", "117"], ["114", "124"], ["114", "133"], ["176", "198"], ["176", "213"], ["176", "195"], ["176", "194"], ["176", "193"], ["176", "176"], ["176", "177"], ["216", "222"], ["177", "185"], ["177", "181"], ["177", "187"], ["177", "190"], ["177", "182"], ["177", "186"], ["177", "180"], ["193", "209"], ["193", "206"], ["193", "208"], ["193", "212"], ["193", "201"], ["193", "203"]], "features": {"40": "<(METHOD,main)<SUB>1</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "42": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "44": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "46": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "11": "<(LOCAL,int N: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,N,int N = nextInt())<SUB>5</SUB>>", "56": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[] pre = new int[N + 1])<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[N + 1])>", "61": "<(IDENTIFIER,N,N + 1)<SUB>6</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= N); i++),for (int i = 1; Some(i &lt;= N); i++))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "67": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i &lt;= N)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,pre[i])<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,pre[i] = pre[i - 1] + sc.nextInt())<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,pre[i - 1])<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>8</SUB>>", "83": "<(LITERAL,1,i - 1)<SUB>8</SUB>>", "85": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "86": "<(&lt;operator&gt;.assignment,ANY sums = new Pair[N * (N + 1) / 2])<SUB>12</SUB>>", "88": "<(&lt;operator&gt;.alloc,new Pair[N * (N + 1) / 2])>", "90": "<(&lt;operator&gt;.multiplication,N * (N + 1))<SUB>12</SUB>>", "92": "<(&lt;operator&gt;.addition,N + 1)<SUB>12</SUB>>", "94": "<(LITERAL,1,N + 1)<SUB>12</SUB>>", "16": "<(LOCAL,int k: int)<SUB>13</SUB>>", "97": "<(IDENTIFIER,k,int k = 0)<SUB>13</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= N); i++),for (int i = 1; Some(i &lt;= N); i++))<SUB>14</SUB>>", "100": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>14</SUB>>", "102": "<(LITERAL,1,int i = 1)<SUB>14</SUB>>", "104": "<(IDENTIFIER,i,i &lt;= N)<SUB>14</SUB>>", "106": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "108": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "110": "<(LOCAL,int j: int)<SUB>15</SUB>>", "112": "<(IDENTIFIER,j,int j = i)<SUB>15</SUB>>", "114": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= N)<SUB>15</SUB>>", "116": "<(IDENTIFIER,N,j &lt;= N)<SUB>15</SUB>>", "118": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "120": "<(LOCAL,int sum: int)<SUB>16</SUB>>", "122": "<(IDENTIFIER,sum,int sum = pre[j] - pre[i - 1])<SUB>16</SUB>>", "124": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>16</SUB>>", "126": "<(IDENTIFIER,j,pre[j] - pre[i - 1])<SUB>16</SUB>>", "128": "<(IDENTIFIER,pre,pre[j] - pre[i - 1])<SUB>16</SUB>>", "130": "<(IDENTIFIER,i,i - 1)<SUB>16</SUB>>", "132": "<(&lt;operator&gt;.assignment,sums[k++] = new Pair(i, j, sum))<SUB>18</SUB>>", "134": "<(IDENTIFIER,sums,sums[k++] = new Pair(i, j, sum))<SUB>18</SUB>>", "136": "<(IDENTIFIER,k,k++)<SUB>18</SUB>>", "138": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "140": "<(&lt;operator&gt;.alloc,new Pair(i, j, sum))<SUB>18</SUB>>", "142": "<(IDENTIFIER,$obj2,new Pair(i, j, sum))>", "144": "<(IDENTIFIER,j,new Pair(i, j, sum))<SUB>18</SUB>>", "146": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "148": "<(IDENTIFIER,Arrays,sort(sums, &lt;lambda&gt;))<SUB>21</SUB>>", "9": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(2),sort(sums, &lt;lambda&gt;))>", "150": "<(&lt;operator&gt;.assignment,ANY ans = new ArrayList&lt;Pair&gt;())<SUB>22</SUB>>", "152": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Pair&gt;())<SUB>22</SUB>>", "22": "<(IDENTIFIER,ans,new ArrayList&lt;Pair&gt;())<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "157": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.lessThan,i &lt; k)<SUB>24</SUB>>", "161": "<(IDENTIFIER,k,i &lt; k)<SUB>24</SUB>>", "25": "<(LOCAL,var group: ANY)<SUB>25</SUB>>", "164": "<(IDENTIFIER,group,ANY group = new ArrayList&lt;Pair&gt;())<SUB>25</SUB>>", "166": "<(&lt;init&gt;,new ArrayList&lt;Pair&gt;())<SUB>25</SUB>>", "167": "<(LOCAL,int last: int)<SUB>26</SUB>>", "169": "<(IDENTIFIER,last,int last = 0)<SUB>26</SUB>>", "171": "<(LOCAL,int j: int)<SUB>27</SUB>>", "173": "<(IDENTIFIER,j,int j = i)<SUB>27</SUB>>", "175": "<(CONTROL_STRUCTURE,while (j &lt; k &amp;&amp; sums[j].sum == sums[i].sum),while (j &lt; k &amp;&amp; sums[j].sum == sums[i].sum))<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.lessThan,j &lt; k)<SUB>28</SUB>>", "179": "<(IDENTIFIER,k,j &lt; k)<SUB>28</SUB>>", "181": "<(&lt;operator&gt;.fieldAccess,sums[j].sum)<SUB>28</SUB>>", "183": "<(IDENTIFIER,sums,sums[j].sum == sums[i].sum)<SUB>28</SUB>>", "185": "<(FIELD_IDENTIFIER,sum,sum)<SUB>28</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>28</SUB>>", "189": "<(IDENTIFIER,i,sums[j].sum == sums[i].sum)<SUB>28</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "193": "<(&lt;operator&gt;.greaterThan,sums[j].l &gt; last)<SUB>29</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,sums[j])<SUB>29</SUB>>", "197": "<(IDENTIFIER,j,sums[j].l &gt; last)<SUB>29</SUB>>", "199": "<(IDENTIFIER,last,sums[j].l &gt; last)<SUB>29</SUB>>", "201": "<(add,add(sums[j]))<SUB>30</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,sums[j])<SUB>30</SUB>>", "205": "<(IDENTIFIER,j,add(sums[j]))<SUB>30</SUB>>", "207": "<(IDENTIFIER,last,last = sums[j].r)<SUB>31</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,sums[j])<SUB>31</SUB>>", "211": "<(IDENTIFIER,j,last = sums[j].r)<SUB>31</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,j++)<SUB>33</SUB>>", "215": "<(CONTROL_STRUCTURE,if (group.size() &gt; ans.size()),if (group.size() &gt; ans.size()))<SUB>36</SUB>>", "217": "<(size,size())<SUB>36</SUB>>", "219": "<(size,size())<SUB>36</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "223": "<(IDENTIFIER,ans,ans = group)<SUB>37</SUB>>", "225": "<(&lt;operator&gt;.assignment,i = j)<SUB>39</SUB>>", "227": "<(IDENTIFIER,j,i = j)<SUB>39</SUB>>", "229": "<(IDENTIFIER,out,println(ans.size()))<SUB>41</SUB>>", "231": "<(IDENTIFIER,ans,size())<SUB>41</SUB>>", "233": "<(&lt;operator&gt;.assignment,)<SUB>42</SUB>>", "235": "<(iterator,&lt;empty&gt;)<SUB>42</SUB>>", "237": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>42</SUB>>", "239": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "241": "<(LOCAL,p: ANY)<SUB>42</SUB>>", "243": "<(IDENTIFIER,p,&lt;empty&gt;)>", "245": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "247": "<(IDENTIFIER,out,println(p))<SUB>43</SUB>>", "249": "<(close,close())<SUB>45</SUB>>", "251": "<(MODIFIER,PUBLIC)>", "253": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}