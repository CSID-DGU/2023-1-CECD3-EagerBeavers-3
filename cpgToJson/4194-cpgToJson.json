{"edges": [["17", "18"], ["17", "19"], ["17", "240"], ["17", "241"], ["17", "242"], ["19", "20"], ["19", "23"], ["19", "28"], ["19", "31"], ["19", "36"], ["19", "37"], ["19", "41"], ["19", "42"], ["19", "47"], ["19", "75"], ["19", "76"], ["19", "82"], ["19", "91"], ["19", "219"], ["19", "238"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "90"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["91", "100"], ["91", "103"], ["91", "105"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "130"], ["105", "135"], ["105", "144"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "128"], ["121", "122"], ["121", "127"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["128", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "143"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["144", "149"], ["144", "152"], ["144", "154"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["154", "162"], ["155", "156"], ["155", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["162", "163"], ["162", "164"], ["162", "167"], ["162", "170"], ["162", "172"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["172", "173"], ["172", "180"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["180", "181"], ["180", "200"], ["181", "182"], ["181", "189"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["200", "208"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "229"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["229", "231"], ["231", "232"], ["231", "237"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["238", "239"], ["20", "27"], ["23", "30"], ["28", "35"], ["31", "39"], ["37", "44"], ["42", "49"], ["76", "86"], ["82", "96"], ["238", "242"], ["22", "20"], ["25", "23"], ["30", "28"], ["33", "31"], ["39", "37"], ["44", "42"], ["49", "52"], ["52", "59"], ["52", "79"], ["55", "52"], ["78", "76"], ["83", "82"], ["93", "100"], ["100", "107"], ["100", "221"], ["103", "100"], ["221", "224"], ["224", "234"], ["224", "238"], ["227", "224"], ["229", "227"], ["27", "25"], ["35", "33"], ["59", "62"], ["62", "69"], ["62", "55"], ["65", "62"], ["67", "65"], ["79", "78"], ["85", "83"], ["95", "93"], ["107", "112"], ["135", "146"], ["231", "229"], ["68", "73"], ["73", "67"], ["86", "85"], ["96", "95"], ["112", "115"], ["115", "123"], ["115", "131"], ["118", "115"], ["131", "103"], ["131", "140"], ["137", "135"], ["146", "149"], ["149", "157"], ["149", "103"], ["152", "149"], ["232", "231"], ["69", "68"], ["121", "128"], ["121", "118"], ["128", "118"], ["138", "137"], ["155", "164"], ["155", "152"], ["234", "232"], ["122", "121"], ["140", "138"], ["156", "155"], ["164", "167"], ["167", "175"], ["167", "152"], ["170", "167"], ["123", "122"], ["157", "156"], ["173", "186"], ["173", "170"], ["174", "173"], ["181", "205"], ["200", "170"], ["175", "174"], ["182", "191"], ["189", "181"], ["201", "210"], ["208", "200"], ["184", "182"], ["190", "196"], ["195", "189"], ["203", "201"], ["209", "215"], ["214", "208"], ["186", "184"], ["191", "190"], ["196", "195"], ["205", "203"], ["210", "209"], ["215", "214"], ["17", "22"], ["18", "242"], ["20", "242"], ["23", "242"], ["23", "242"], ["28", "242"], ["31", "242"], ["31", "242"], ["39", "242"], ["37", "242"], ["37", "242"], ["42", "242"], ["42", "242"], ["42", "242"], ["76", "242"], ["76", "242"], ["76", "242"], ["82", "242"], ["82", "242"], ["95", "242"], ["93", "242"], ["93", "242"], ["100", "242"], ["100", "242"], ["221", "242"], ["224", "242"], ["224", "242"], ["224", "242"], ["238", "242"], ["238", "242"], ["231", "242"], ["229", "242"], ["229", "242"], ["227", "242"], ["107", "242"], ["112", "242"], ["115", "242"], ["115", "242"], ["131", "242"], ["131", "242"], ["135", "242"], ["138", "242"], ["137", "242"], ["135", "242"], ["135", "242"], ["146", "242"], ["149", "242"], ["149", "242"], ["156", "242"], ["155", "242"], ["155", "242"], ["164", "242"], ["167", "242"], ["167", "242"], ["152", "242"], ["174", "242"], ["173", "242"], ["173", "242"], ["184", "242"], ["181", "242"], ["189", "242"], ["181", "242"], ["181", "242"], ["203", "242"], ["200", "242"], ["209", "242"], ["209", "242"], ["208", "242"], ["208", "242"], ["200", "242"], ["200", "242"], ["170", "242"], ["103", "242"], ["122", "242"], ["121", "242"], ["121", "242"], ["128", "242"], ["118", "242"], ["59", "242"], ["62", "242"], ["62", "242"], ["55", "242"], ["67", "242"], ["73", "242"], ["67", "242"], ["67", "242"], ["65", "242"], ["17", "18"], ["17", "20"], ["17", "28"], ["39", "37"], ["44", "42"], ["78", "76"], ["17", "82"], ["20", "23"], ["17", "23"], ["28", "31"], ["17", "31"], ["17", "49"], ["95", "93"], ["95", "93"], ["17", "221"], ["31", "238"], ["229", "238"], ["17", "238"], ["23", "39"], ["17", "39"], ["37", "44"], ["17", "44"], ["49", "52"], ["55", "52"], ["17", "52"], ["44", "52"], ["62", "52"], ["52", "55"], ["17", "55"], ["17", "59"], ["73", "67"], ["79", "78"], ["79", "78"], ["93", "100"], ["103", "100"], ["17", "100"], ["100", "103"], ["156", "103"], ["174", "103"], ["203", "103"], ["122", "103"], ["17", "103"], ["17", "107"], ["137", "135"], ["137", "135"], ["221", "224"], ["227", "224"], ["17", "224"], ["96", "224"], ["115", "224"], ["149", "224"], ["234", "227"], ["17", "227"], ["31", "229"], ["17", "229"], ["76", "229"], ["59", "62"], ["65", "62"], ["17", "62"], ["52", "62"], ["62", "65"], ["17", "65"], ["17", "79"], ["52", "79"], ["86", "85"], ["86", "85"], ["17", "85"], ["96", "95"], ["96", "95"], ["17", "95"], ["17", "112"], ["17", "146"], ["76", "231"], ["17", "231"], ["39", "73"], ["17", "73"], ["17", "86"], ["79", "86"], ["17", "96"], ["86", "96"], ["112", "115"], ["118", "115"], ["17", "115"], ["96", "115"], ["149", "115"], ["123", "118"], ["17", "118"], ["107", "131"], ["128", "131"], ["17", "131"], ["138", "137"], ["138", "137"], ["17", "137"], ["146", "149"], ["152", "149"], ["17", "149"], ["115", "149"], ["157", "152"], ["167", "152"], ["17", "152"], ["122", "121"], ["122", "121"], ["17", "121"], ["107", "128"], ["17", "128"], ["140", "138"], ["17", "138"], ["140", "138"], ["156", "155"], ["156", "155"], ["17", "155"], ["17", "164"], ["17", "234"], ["224", "234"], ["123", "122"], ["123", "122"], ["100", "122"], ["17", "122"], ["131", "140"], ["17", "140"], ["157", "156"], ["157", "156"], ["100", "156"], ["174", "156"], ["203", "156"], ["122", "156"], ["17", "156"], ["164", "167"], ["170", "167"], ["17", "167"], ["157", "167"], ["186", "167"], ["175", "170"], ["205", "170"], ["17", "170"], ["17", "123"], ["115", "123"], ["17", "157"], ["149", "157"], ["174", "173"], ["174", "173"], ["17", "173"], ["189", "181"], ["189", "181"], ["208", "200"], ["208", "200"], ["175", "174"], ["175", "174"], ["156", "174"], ["203", "174"], ["17", "174"], ["76", "181"], ["76", "200"], ["17", "175"], ["167", "175"], ["190", "189"], ["190", "189"], ["209", "208"], ["209", "208"], ["174", "184"], ["17", "184"], ["186", "184"], ["186", "184"], ["76", "190"], ["209", "190"], ["135", "190"], ["209", "190"], ["17", "190"], ["184", "203"], ["17", "203"], ["205", "203"], ["205", "203"], ["76", "209"], ["190", "209"], ["190", "209"], ["17", "209"], ["17", "186"], ["167", "186"], ["17", "205"], ["175", "205"], ["52", "52"], ["52", "59"], ["52", "55"], ["52", "62"], ["100", "107"], ["100", "115"], ["100", "131"], ["100", "103"], ["100", "112"], ["100", "100"], ["224", "232"], ["224", "231"], ["224", "224"], ["224", "234"], ["224", "229"], ["224", "227"], ["62", "68"], ["62", "73"], ["62", "69"], ["62", "67"], ["62", "65"], ["62", "62"], ["115", "115"], ["115", "121"], ["115", "118"], ["115", "122"], ["115", "123"], ["131", "146"], ["131", "149"], ["131", "138"], ["131", "137"], ["131", "140"], ["131", "135"], ["149", "149"], ["149", "152"], ["149", "155"], ["149", "157"], ["149", "156"], ["121", "128"], ["155", "167"], ["155", "164"], ["167", "167"], ["167", "170"], ["167", "173"], ["167", "174"], ["167", "175"], ["173", "214"], ["173", "215"], ["173", "209"], ["173", "196"], ["173", "189"], ["173", "181"], ["173", "191"], ["173", "208"], ["173", "195"], ["173", "190"], ["173", "184"], ["173", "182"], ["173", "186"], ["173", "201"], ["173", "205"], ["173", "210"], ["173", "200"], ["173", "203"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,in,in = new Scanner(System.in))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new Scanner(System.in))<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "27": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "29": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "35": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "39": "<(nextInt,nextInt())<SUB>6</SUB>>", "41": "<(LOCAL,double[][] p: double[][])<SUB>8</SUB>>", "43": "<(IDENTIFIER,p,double[][] p = new double[n][n])<SUB>8</SUB>>", "45": "<(IDENTIFIER,n,new double[n][n])<SUB>8</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "61": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "63": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,p[i][j] = nextDouble())<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>9</SUB>>", "71": "<(IDENTIFIER,i,p[i][j] = nextDouble())<SUB>9</SUB>>", "73": "<(nextDouble,nextDouble())<SUB>9</SUB>>", "75": "<(LOCAL,double[] q: double[])<SUB>11</SUB>>", "77": "<(IDENTIFIER,q,double[] q = new double[1 &lt;&lt; n])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.indexAccess,q[(1 &lt;&lt; n) - 1])<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>12</SUB>>", "87": "<(LITERAL,1,1 &lt;&lt; n)<SUB>12</SUB>>", "89": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>12</SUB>>", "91": "<(CONTROL_STRUCTURE,for (int mask = (1 &lt;&lt; n) - 1; Some(mask &gt; 0); mask--),for (int mask = (1 &lt;&lt; n) - 1; Some(mask &gt; 0); mask--))<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.assignment,int mask = (1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "97": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "99": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>13</SUB>>", "101": "<(IDENTIFIER,mask,mask &gt; 0)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.postDecrement,mask--)<SUB>13</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>14</SUB>>", "109": "<(LITERAL,0,int count = 0)<SUB>14</SUB>>", "111": "<(LOCAL,int t: int)<SUB>16</SUB>>", "113": "<(IDENTIFIER,t,int t = 0)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.lessThan,t &lt; n)<SUB>16</SUB>>", "117": "<(IDENTIFIER,n,t &lt; n)<SUB>16</SUB>>", "119": "<(IDENTIFIER,t,t++)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; t) &amp; mask) != 0)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; t)<SUB>16</SUB>>", "125": "<(IDENTIFIER,t,1 &lt;&lt; t)<SUB>16</SUB>>", "127": "<(LITERAL,0,((1 &lt;&lt; t) &amp; mask) != 0)<SUB>16</SUB>>", "129": "<(IDENTIFIER,count,count++)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.lessEqualsThan,count &lt;= 1)<SUB>17</SUB>>", "133": "<(LITERAL,1,count &lt;= 1)<SUB>17</SUB>>", "135": "<(&lt;operator&gt;.assignment,count = count * (count - 1) / 2)<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.division,count * (count - 1) / 2)<SUB>18</SUB>>", "139": "<(IDENTIFIER,count,count * (count - 1))<SUB>18</SUB>>", "141": "<(IDENTIFIER,count,count - 1)<SUB>18</SUB>>", "143": "<(LITERAL,2,count * (count - 1) / 2)<SUB>18</SUB>>", "145": "<(LOCAL,int t: int)<SUB>20</SUB>>", "147": "<(IDENTIFIER,t,int t = 0)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.lessThan,t &lt; n)<SUB>20</SUB>>", "151": "<(IDENTIFIER,n,t &lt; n)<SUB>20</SUB>>", "153": "<(IDENTIFIER,t,t++)<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; t) &amp; mask) != 0)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; t)<SUB>20</SUB>>", "159": "<(IDENTIFIER,t,1 &lt;&lt; t)<SUB>20</SUB>>", "161": "<(LITERAL,0,((1 &lt;&lt; t) &amp; mask) != 0)<SUB>20</SUB>>", "163": "<(LOCAL,int s: int)<SUB>21</SUB>>", "165": "<(IDENTIFIER,s,int s = 0)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.lessThan,s &lt; t)<SUB>21</SUB>>", "169": "<(IDENTIFIER,t,s &lt; t)<SUB>21</SUB>>", "171": "<(IDENTIFIER,s,s++)<SUB>21</SUB>>", "173": "<(&lt;operator&gt;.notEquals,((1 &lt;&lt; s) &amp; mask) != 0)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; s)<SUB>21</SUB>>", "177": "<(IDENTIFIER,s,1 &lt;&lt; s)<SUB>21</SUB>>", "179": "<(LITERAL,0,((1 &lt;&lt; s) &amp; mask) != 0)<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.assignmentPlus,q[mask - (1 &lt;&lt; t)] += q[mask] / count * p[s][t])<SUB>22</SUB>>", "183": "<(IDENTIFIER,q,q[mask - (1 &lt;&lt; t)] += q[mask] / count * p[s][t])<SUB>22</SUB>>", "185": "<(IDENTIFIER,mask,mask - (1 &lt;&lt; t))<SUB>22</SUB>>", "187": "<(LITERAL,1,1 &lt;&lt; t)<SUB>22</SUB>>", "189": "<(&lt;operator&gt;.multiplication,q[mask] / count * p[s][t])<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,q[mask])<SUB>22</SUB>>", "193": "<(IDENTIFIER,mask,q[mask] / count)<SUB>22</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,p[s][t])<SUB>22</SUB>>", "197": "<(IDENTIFIER,p,q[mask] / count * p[s][t])<SUB>22</SUB>>", "199": "<(IDENTIFIER,t,q[mask] / count * p[s][t])<SUB>22</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,q[mask - (1 &lt;&lt; s)])<SUB>23</SUB>>", "203": "<(&lt;operator&gt;.subtraction,mask - (1 &lt;&lt; s))<SUB>23</SUB>>", "205": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; s)<SUB>23</SUB>>", "207": "<(IDENTIFIER,s,1 &lt;&lt; s)<SUB>23</SUB>>", "209": "<(&lt;operator&gt;.division,q[mask] / count)<SUB>23</SUB>>", "211": "<(IDENTIFIER,q,q[mask] / count)<SUB>23</SUB>>", "213": "<(IDENTIFIER,count,q[mask] / count)<SUB>23</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,p[t])<SUB>23</SUB>>", "217": "<(IDENTIFIER,t,q[mask] / count * p[t][s])<SUB>23</SUB>>", "219": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "221": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "223": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "225": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "229": "<(print,print(q[1 &lt;&lt; i] + &quot; &quot;))<SUB>27</SUB>>", "231": "<(&lt;operator&gt;.addition,q[1 &lt;&lt; i] + &quot; &quot;)<SUB>27</SUB>>", "233": "<(IDENTIFIER,q,q[1 &lt;&lt; i] + &quot; &quot;)<SUB>27</SUB>>", "235": "<(LITERAL,1,1 &lt;&lt; i)<SUB>27</SUB>>", "237": "<(LITERAL,&quot; &quot;,q[1 &lt;&lt; i] + &quot; &quot;)<SUB>27</SUB>>", "239": "<(IDENTIFIER,out,close())<SUB>29</SUB>>", "241": "<(MODIFIER,STATIC)>"}}