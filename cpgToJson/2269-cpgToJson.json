{"edges": [["19", "20"], ["19", "21"], ["19", "168"], ["19", "169"], ["19", "170"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "30"], ["21", "31"], ["21", "35"], ["21", "63"], ["21", "66"], ["21", "68"], ["21", "73"], ["21", "132"], ["21", "142"], ["21", "160"], ["22", "23"], ["22", "24"], ["25", "3"], ["26", "27"], ["26", "28"], ["28", "29"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "52"], ["45", "57"], ["46", "47"], ["46", "51"], ["47", "48"], ["47", "50"], ["48", "49"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "99"], ["83", "117"], ["84", "85"], ["84", "94"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["99", "109"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "108"], ["106", "107"], ["109", "110"], ["109", "111"], ["109", "115"], ["111", "112"], ["111", "114"], ["112", "113"], ["115", "116"], ["117", "118"], ["118", "119"], ["118", "126"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "139"], ["135", "136"], ["135", "138"], ["136", "137"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "151"], ["142", "153"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["151", "152"], ["153", "154"], ["153", "155"], ["153", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["164", "167"], ["22", "25"], ["25", "28"], ["26", "33"], ["31", "37"], ["63", "66"], ["66", "70"], ["68", "75"], ["132", "144"], ["160", "170"], ["24", "22"], ["28", "26"], ["33", "31"], ["37", "40"], ["40", "48"], ["40", "65"], ["43", "40"], ["65", "63"], ["70", "68"], ["75", "78"], ["78", "86"], ["78", "136"], ["81", "78"], ["134", "132"], ["144", "149"], ["147", "155"], ["147", "163"], ["151", "149"], ["153", "151"], ["161", "164"], ["164", "160"], ["46", "53"], ["46", "59"], ["52", "43"], ["84", "106"], ["84", "122"], ["135", "139"], ["139", "134"], ["149", "147"], ["155", "158"], ["158", "153"], ["163", "161"], ["47", "46"], ["53", "52"], ["58", "43"], ["85", "84"], ["85", "95"], ["94", "84"], ["101", "112"], ["109", "81"], ["136", "135"], ["48", "47"], ["59", "58"], ["86", "91"], ["89", "85"], ["95", "94"], ["103", "101"], ["111", "115"], ["115", "109"], ["119", "129"], ["119", "81"], ["91", "89"], ["105", "103"], ["112", "111"], ["120", "119"], ["127", "81"], ["106", "105"], ["122", "120"], ["129", "127"], ["19", "24"], ["20", "170"], ["22", "170"], ["25", "170"], ["28", "170"], ["26", "170"], ["26", "170"], ["31", "170"], ["31", "170"], ["31", "170"], ["63", "170"], ["66", "170"], ["68", "170"], ["68", "170"], ["75", "170"], ["78", "170"], ["132", "170"], ["134", "170"], ["139", "170"], ["134", "170"], ["132", "170"], ["132", "170"], ["144", "170"], ["147", "170"], ["149", "170"], ["147", "170"], ["147", "170"], ["160", "170"], ["160", "170"], ["160", "170"], ["153", "170"], ["153", "170"], ["153", "170"], ["151", "170"], ["85", "170"], ["85", "170"], ["84", "170"], ["94", "170"], ["84", "170"], ["84", "170"], ["119", "170"], ["119", "170"], ["127", "170"], ["127", "170"], ["101", "170"], ["101", "170"], ["109", "170"], ["115", "170"], ["109", "170"], ["109", "170"], ["81", "170"], ["48", "170"], ["47", "170"], ["46", "170"], ["46", "170"], ["58", "170"], ["58", "170"], ["52", "170"], ["52", "170"], ["43", "170"], ["153", "170"], ["164", "170"], ["19", "20"], ["19", "22"], ["28", "26"], ["33", "31"], ["19", "63"], ["134", "132"], ["134", "132"], ["22", "25"], ["19", "25"], ["19", "37"], ["63", "66"], ["19", "66"], ["66", "68"], ["19", "68"], ["31", "68"], ["19", "75"], ["19", "144"], ["164", "160"], ["164", "160"], ["25", "28"], ["19", "28"], ["26", "33"], ["19", "33"], ["37", "40"], ["43", "40"], ["19", "40"], ["33", "40"], ["40", "43"], ["19", "43"], ["19", "52"], ["75", "78"], ["81", "78"], ["19", "78"], ["40", "78"], ["91", "81"], ["122", "81"], ["19", "81"], ["136", "134"], ["19", "134"], ["78", "134"], ["144", "147"], ["151", "147"], ["19", "147"], ["149", "147"], ["147", "151"], ["19", "151"], ["19", "153"], ["132", "153"], ["158", "153"], ["19", "164"], ["47", "46"], ["47", "46"], ["19", "46"], ["19", "58"], ["85", "84"], ["85", "84"], ["94", "84"], ["94", "84"], ["103", "101"], ["103", "101"], ["136", "135"], ["19", "135"], ["78", "139"], ["19", "139"], ["136", "149"], ["19", "149"], ["19", "158"], ["48", "47"], ["19", "47"], ["31", "85"], ["94", "85"], ["127", "85"], ["58", "85"], ["52", "85"], ["119", "85"], ["31", "94"], ["85", "94"], ["19", "94"], ["112", "109"], ["19", "109"], ["111", "109"], ["111", "109"], ["115", "109"], ["68", "136"], ["127", "136"], ["109", "136"], ["19", "136"], ["28", "48"], ["19", "48"], ["106", "103"], ["19", "103"], ["105", "103"], ["105", "103"], ["112", "111"], ["19", "111"], ["101", "115"], ["19", "115"], ["31", "119"], ["85", "119"], ["19", "119"], ["78", "91"], ["19", "91"], ["106", "105"], ["19", "105"], ["103", "112"], ["19", "112"], ["68", "127"], ["109", "127"], ["19", "127"], ["31", "127"], ["85", "127"], ["94", "127"], ["68", "106"], ["127", "106"], ["109", "106"], ["19", "106"], ["91", "122"], ["19", "122"], ["40", "47"], ["40", "48"], ["40", "46"], ["40", "40"], ["40", "43"], ["78", "89"], ["78", "81"], ["78", "84"], ["78", "85"], ["78", "91"], ["78", "78"], ["78", "86"], ["147", "149"], ["147", "151"], ["147", "153"], ["147", "147"], ["147", "155"], ["147", "158"], ["46", "52"], ["46", "59"], ["46", "58"], ["46", "53"], ["84", "115"], ["84", "120"], ["84", "122"], ["84", "103"], ["84", "119"], ["84", "106"], ["84", "112"], ["84", "101"], ["84", "105"], ["84", "111"], ["84", "109"], ["85", "94"], ["85", "95"], ["119", "129"], ["119", "127"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner())<SUB>2</SUB>>", "27": "<(IDENTIFIER,N,N = nextInt())<SUB>3</SUB>>", "29": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,int[] val = new int[N])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[N])>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "41": "<(IDENTIFIER,i,i &lt; N)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (sc.next().charAt(0) == 's'),if (sc.next().charAt(0) == 's'))<SUB>6</SUB>>", "47": "<(charAt,charAt(0))<SUB>6</SUB>>", "49": "<(IDENTIFIER,sc,next())<SUB>6</SUB>>", "51": "<(LITERAL,'s',sc.next().charAt(0) == 's')<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,val[i] = 0)<SUB>7</SUB>>", "57": "<(CONTROL_STRUCTURE,else,else)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,val[i] = 1)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.assignment,l = new ArrayList&lt;Integer&gt;())<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>10</SUB>>", "67": "<(IDENTIFIER,l,new ArrayList&lt;Integer&gt;())<SUB>10</SUB>>", "69": "<(IDENTIFIER,l,add(val[0]))<SUB>11</SUB>>", "71": "<(IDENTIFIER,val,add(val[0]))<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; N); ++i),for (int i = 1; Some(i &lt; N); ++i))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>13</SUB>>", "77": "<(LITERAL,1,int i = 1)<SUB>13</SUB>>", "79": "<(IDENTIFIER,i,i &lt; N)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.preIncrement,++i)<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,if (val[i] == val[i - 1] &amp;&amp; val[i] == 1),if (val[i] == val[i - 1] &amp;&amp; val[i] == 1))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.equals,val[i] == val[i - 1])<SUB>14</SUB>>", "87": "<(IDENTIFIER,val,val[i] == val[i - 1])<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,val[i - 1])<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>14</SUB>>", "93": "<(LITERAL,1,i - 1)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,val[i] == 1)<SUB>14</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.assignment,int prev = get(l.size() - 1))<SUB>15</SUB>>", "103": "<(get,get(l.size() - 1))<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.subtraction,l.size() - 1)<SUB>15</SUB>>", "107": "<(IDENTIFIER,l,size())<SUB>15</SUB>>", "109": "<(set,set(l.size() - 1, ++prev))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.subtraction,l.size() - 1)<SUB>16</SUB>>", "113": "<(IDENTIFIER,l,size())<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.preIncrement,++prev)<SUB>16</SUB>>", "117": "<(CONTROL_STRUCTURE,else,else)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.equals,val[i - 1] == 0)<SUB>17</SUB>>", "121": "<(IDENTIFIER,val,val[i - 1] == 0)<SUB>17</SUB>>", "123": "<(IDENTIFIER,i,i - 1)<SUB>17</SUB>>", "125": "<(LITERAL,0,val[i - 1] == 0)<SUB>17</SUB>>", "127": "<(add,add(val[i]))<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,val[i])<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,add(val[i]))<SUB>18</SUB>>", "133": "<(IDENTIFIER,dp,dp = new int[l.size() + 1][N + 1])<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.addition,l.size() + 1)<SUB>22</SUB>>", "137": "<(IDENTIFIER,l,size())<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.addition,N + 1)<SUB>22</SUB>>", "141": "<(LITERAL,1,N + 1)<SUB>22</SUB>>", "143": "<(LOCAL,int i: int)<SUB>23</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= l.size())<SUB>23</SUB>>", "149": "<(size,size())<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.preIncrement,++i)<SUB>23</SUB>>", "153": "<(fill,fill(dp[i], -1))<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>24</SUB>>", "157": "<(IDENTIFIER,i,fill(dp[i], -1))<SUB>24</SUB>>", "159": "<(LITERAL,1,-1)<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "163": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "165": "<(IDENTIFIER,this,f(0, 0))<SUB>25</SUB>>", "167": "<(LITERAL,0,f(0, 0))<SUB>25</SUB>>", "169": "<(MODIFIER,STATIC)>"}}