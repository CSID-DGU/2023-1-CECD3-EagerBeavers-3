{"edges": [["17", "18"], ["17", "19"], ["17", "308"], ["17", "309"], ["17", "310"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "41"], ["19", "43"], ["19", "46"], ["19", "47"], ["19", "51"], ["19", "306"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["41", "42"], ["43", "44"], ["43", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "56"], ["52", "53"], ["52", "55"], ["53", "54"], ["56", "57"], ["56", "58"], ["56", "62"], ["56", "63"], ["56", "67"], ["56", "68"], ["56", "73"], ["56", "93"], ["56", "94"], ["56", "101"], ["56", "192"], ["56", "193"], ["56", "200"], ["56", "219"], ["56", "297"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "117"], ["111", "120"], ["111", "179"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "142"], ["130", "148"], ["130", "172"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["140", "141"], ["142", "143"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "159"], ["152", "170"], ["153", "154"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["167", "168"], ["168", "169"], ["170", "171"], ["172", "173"], ["172", "178"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "190"], ["184", "185"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["200", "205"], ["200", "208"], ["200", "210"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "207"], ["208", "209"], ["210", "211"], ["211", "212"], ["211", "213"], ["211", "216"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "229"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["230", "231"], ["230", "232"], ["230", "235"], ["230", "238"], ["230", "240"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["240", "241"], ["241", "242"], ["241", "243"], ["241", "246"], ["241", "249"], ["241", "251"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["249", "250"], ["251", "252"], ["251", "269"], ["252", "253"], ["252", "260"], ["253", "254"], ["253", "259"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["260", "261"], ["260", "268"], ["261", "262"], ["261", "267"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "277"], ["275", "282"], ["277", "278"], ["277", "281"], ["278", "279"], ["278", "280"], ["282", "283"], ["282", "296"], ["283", "284"], ["283", "293"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "292"], ["287", "288"], ["287", "291"], ["288", "289"], ["288", "290"], ["293", "294"], ["293", "295"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "305"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "304"], ["306", "307"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "40"], ["38", "41"], ["41", "43"], ["43", "49"], ["47", "53"], ["306", "310"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["40", "38"], ["49", "47"], ["52", "60"], ["52", "306"], ["32", "30"], ["53", "52"], ["58", "65"], ["63", "70"], ["68", "75"], ["94", "103"], ["193", "202"], ["297", "53"], ["60", "58"], ["65", "63"], ["70", "68"], ["75", "78"], ["78", "85"], ["78", "98"], ["81", "78"], ["96", "94"], ["103", "106"], ["106", "113"], ["106", "197"], ["109", "106"], ["195", "193"], ["202", "205"], ["205", "213"], ["205", "221"], ["208", "205"], ["221", "224"], ["224", "232"], ["224", "302"], ["227", "224"], ["299", "297"], ["84", "81"], ["98", "96"], ["113", "117"], ["117", "122"], ["197", "195"], ["211", "208"], ["300", "299"], ["85", "90"], ["88", "84"], ["122", "125"], ["125", "135"], ["125", "180"], ["128", "125"], ["180", "187"], ["180", "109"], ["213", "218"], ["216", "211"], ["232", "235"], ["235", "243"], ["235", "227"], ["238", "235"], ["302", "300"], ["90", "88"], ["142", "149"], ["172", "128"], ["184", "190"], ["190", "180"], ["218", "216"], ["132", "140"], ["132", "145"], ["143", "142"], ["149", "156"], ["149", "174"], ["173", "172"], ["185", "184"], ["243", "246"], ["246", "255"], ["246", "238"], ["249", "246"], ["133", "132"], ["140", "145"], ["145", "143"], ["153", "163"], ["170", "149"], ["174", "173"], ["187", "185"], ["269", "249"], ["135", "133"], ["154", "153"], ["160", "168"], ["160", "170"], ["253", "263"], ["253", "271"], ["270", "278"], ["275", "269"], ["156", "154"], ["161", "160"], ["168", "170"], ["254", "253"], ["261", "249"], ["271", "270"], ["277", "288"], ["282", "275"], ["163", "161"], ["255", "254"], ["262", "261"], ["278", "277"], ["283", "282"], ["263", "262"], ["284", "293"], ["293", "283"], ["286", "284"], ["287", "286"], ["288", "287"], ["17", "22"], ["18", "310"], ["20", "310"], ["23", "310"], ["25", "310"], ["28", "310"], ["28", "310"], ["36", "310"], ["34", "310"], ["34", "310"], ["38", "310"], ["41", "310"], ["41", "310"], ["43", "310"], ["43", "310"], ["47", "310"], ["47", "310"], ["47", "310"], ["53", "310"], ["52", "310"], ["52", "310"], ["306", "310"], ["306", "310"], ["58", "310"], ["65", "310"], ["63", "310"], ["63", "310"], ["68", "310"], ["70", "310"], ["68", "310"], ["68", "310"], ["75", "310"], ["78", "310"], ["78", "310"], ["94", "310"], ["94", "310"], ["94", "310"], ["103", "310"], ["106", "310"], ["106", "310"], ["193", "310"], ["197", "310"], ["195", "310"], ["193", "310"], ["193", "310"], ["221", "310"], ["224", "310"], ["224", "310"], ["302", "310"], ["297", "310"], ["297", "310"], ["232", "310"], ["235", "310"], ["235", "310"], ["235", "310"], ["227", "310"], ["243", "310"], ["246", "310"], ["246", "310"], ["238", "310"], ["253", "310"], ["253", "310"], ["269", "310"], ["286", "310"], ["282", "310"], ["275", "310"], ["269", "310"], ["269", "310"], ["261", "310"], ["261", "310"], ["249", "310"], ["211", "310"], ["211", "310"], ["211", "310"], ["208", "310"], ["113", "310"], ["117", "310"], ["117", "310"], ["180", "310"], ["180", "310"], ["109", "310"], ["184", "310"], ["184", "310"], ["190", "310"], ["132", "310"], ["140", "310"], ["142", "310"], ["142", "310"], ["149", "310"], ["149", "310"], ["172", "310"], ["172", "310"], ["128", "310"], ["153", "310"], ["160", "310"], ["160", "310"], ["168", "310"], ["170", "310"], ["84", "310"], ["88", "310"], ["84", "310"], ["84", "310"], ["81", "310"], ["211", "310"], ["275", "310"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["17", "38"], ["49", "47"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["38", "41"], ["17", "41"], ["17", "43"], ["28", "306"], ["297", "306"], ["17", "306"], ["23", "36"], ["17", "36"], ["17", "49"], ["53", "52"], ["17", "52"], ["60", "58"], ["65", "63"], ["70", "68"], ["70", "68"], ["96", "94"], ["96", "94"], ["195", "193"], ["195", "193"], ["34", "53"], ["17", "53"], ["17", "75"], ["17", "103"], ["17", "202"], ["17", "221"], ["28", "297"], ["17", "297"], ["36", "60"], ["65", "60"], ["17", "60"], ["60", "65"], ["17", "65"], ["43", "70"], ["88", "70"], ["17", "70"], ["58", "70"], ["75", "78"], ["81", "78"], ["17", "78"], ["70", "78"], ["78", "81"], ["17", "81"], ["88", "84"], ["88", "84"], ["78", "96"], ["17", "96"], ["63", "96"], ["103", "106"], ["109", "106"], ["17", "106"], ["63", "106"], ["106", "109"], ["149", "109"], ["17", "109"], ["17", "113"], ["17", "117"], ["96", "195"], ["180", "195"], ["17", "195"], ["106", "195"], ["202", "205"], ["208", "205"], ["17", "205"], ["195", "205"], ["205", "208"], ["17", "208"], ["221", "224"], ["227", "224"], ["17", "224"], ["205", "224"], ["224", "227"], ["17", "227"], ["63", "98"], ["17", "98"], ["17", "122"], ["106", "197"], ["17", "197"], ["17", "211"], ["193", "211"], ["269", "211"], ["261", "211"], ["17", "232"], ["70", "88"], ["17", "88"], ["68", "88"], ["84", "88"], ["122", "125"], ["128", "125"], ["17", "125"], ["96", "125"], ["180", "125"], ["125", "128"], ["17", "128"], ["113", "172"], ["170", "172"], ["17", "172"], ["113", "180"], ["190", "180"], ["17", "180"], ["170", "180"], ["125", "180"], ["232", "235"], ["238", "235"], ["17", "235"], ["106", "235"], ["246", "238"], ["17", "238"], ["224", "302"], ["17", "302"], ["47", "142"], ["132", "142"], ["47", "184"], ["160", "184"], ["180", "190"], ["17", "190"], ["17", "243"], ["47", "132"], ["142", "132"], ["17", "132"], ["117", "149"], ["140", "149"], ["168", "149"], ["17", "149"], ["106", "149"], ["243", "246"], ["249", "246"], ["17", "246"], ["235", "246"], ["293", "246"], ["246", "249"], ["293", "249"], ["17", "249"], ["275", "269"], ["275", "269"], ["275", "269"], ["117", "140"], ["149", "140"], ["17", "140"], ["47", "153"], ["184", "153"], ["160", "153"], ["113", "170"], ["17", "170"], ["47", "160"], ["153", "160"], ["17", "160"], ["286", "253"], ["17", "253"], ["17", "261"], ["17", "275"], ["269", "275"], ["261", "275"], ["149", "168"], ["17", "168"], ["17", "282"], ["246", "293"], ["17", "293"], ["246", "293"], ["253", "286"], ["17", "286"], ["52", "68"], ["52", "60"], ["52", "52"], ["52", "300"], ["52", "195"], ["52", "302"], ["52", "224"], ["52", "70"], ["52", "202"], ["52", "65"], ["52", "53"], ["52", "297"], ["52", "94"], ["52", "96"], ["52", "98"], ["52", "75"], ["52", "103"], ["52", "197"], ["52", "58"], ["52", "221"], ["52", "205"], ["52", "299"], ["52", "193"], ["52", "106"], ["52", "63"], ["52", "78"], ["78", "84"], ["78", "88"], ["78", "81"], ["78", "85"], ["78", "90"], ["78", "78"], ["106", "180"], ["106", "122"], ["106", "117"], ["106", "109"], ["106", "113"], ["106", "106"], ["106", "125"], ["205", "213"], ["205", "208"], ["205", "216"], ["205", "205"], ["205", "211"], ["205", "218"], ["224", "224"], ["224", "227"], ["224", "232"], ["224", "235"], ["125", "128"], ["125", "174"], ["125", "135"], ["125", "133"], ["125", "172"], ["125", "145"], ["125", "149"], ["125", "132"], ["125", "173"], ["125", "142"], ["125", "143"], ["125", "125"], ["180", "190"], ["180", "184"], ["180", "180"], ["180", "185"], ["180", "187"], ["235", "243"], ["235", "238"], ["235", "246"], ["235", "235"], ["132", "140"], ["149", "154"], ["149", "161"], ["149", "163"], ["149", "170"], ["149", "160"], ["149", "149"], ["149", "153"], ["149", "156"], ["246", "249"], ["246", "253"], ["246", "254"], ["246", "255"], ["246", "246"], ["160", "168"], ["253", "283"], ["253", "262"], ["253", "288"], ["253", "278"], ["253", "269"], ["253", "282"], ["253", "261"], ["253", "275"], ["253", "284"], ["253", "293"], ["253", "286"], ["253", "277"], ["253", "287"], ["253", "270"], ["253", "263"], ["253", "271"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(LOCAL,int t: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,t,int t = nextInt())<SUB>5</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,primes,primes = new ArrayList&lt;&gt;())<SUB>6</SUB>>", "41": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "43": "<(prime,prime(3165))<SUB>7</SUB>>", "45": "<(LITERAL,3165,prime(3165))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int[] freq = new int[10000001])<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[10000001])>", "51": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.postDecrement,t--)<SUB>9</SUB>>", "55": "<(LITERAL,0,t-- &gt; 0)<SUB>9</SUB>>", "57": "<(LOCAL,int n: int)<SUB>10</SUB>>", "59": "<(IDENTIFIER,n,int n = nextInt())<SUB>10</SUB>>", "61": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "63": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>11</SUB>>", "65": "<(nextInt,nextInt())<SUB>11</SUB>>", "67": "<(LOCAL,int[] arr: int[])<SUB>12</SUB>>", "69": "<(IDENTIFIER,arr,int[] arr = readArrayInt(n))<SUB>12</SUB>>", "71": "<(IDENTIFIER,this,readArrayInt(n))<SUB>12</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "77": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "79": "<(IDENTIFIER,j,j &lt; n)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>14</SUB>>", "87": "<(IDENTIFIER,j,arr[j] = factorize(arr[j]))<SUB>14</SUB>>", "89": "<(IDENTIFIER,this,factorize(arr[j]))<SUB>14</SUB>>", "91": "<(IDENTIFIER,arr,factorize(arr[j]))<SUB>14</SUB>>", "93": "<(LOCAL,int[][] left: int[][])<SUB>16</SUB>>", "95": "<(IDENTIFIER,left,int[][] left = new int[n][k + 1])<SUB>16</SUB>>", "97": "<(IDENTIFIER,n,new int[n][k + 1])<SUB>16</SUB>>", "99": "<(IDENTIFIER,k,k + 1)<SUB>16</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int m = 0; Some(m &lt;= k); m++),for (int m = 0; Some(m &lt;= k); m++))<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.assignment,int m = 0)<SUB>17</SUB>>", "105": "<(LITERAL,0,int m = 0)<SUB>17</SUB>>", "107": "<(IDENTIFIER,m,m &lt;= k)<SUB>17</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,m++)<SUB>17</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>18</SUB>>", "115": "<(LITERAL,0,int l = 0)<SUB>18</SUB>>", "117": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>19</SUB>>", "119": "<(LITERAL,0,int count = 0)<SUB>19</SUB>>", "121": "<(LOCAL,int i: int)<SUB>20</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "127": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "131": "<(CONTROL_STRUCTURE,if (freq[arr[i]] &gt; 0),if (freq[arr[i]] &gt; 0))<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,freq[arr[i]])<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>21</SUB>>", "137": "<(IDENTIFIER,i,freq[arr[i]] &gt; 0)<SUB>21</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "141": "<(IDENTIFIER,count,count++)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,freq[arr[i]])<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>24</SUB>>", "147": "<(IDENTIFIER,i,freq[arr[i]]++)<SUB>24</SUB>>", "149": "<(&lt;operator&gt;.greaterThan,count &gt; m)<SUB>25</SUB>>", "151": "<(IDENTIFIER,m,count &gt; m)<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.postDecrement,freq[arr[l]]--)<SUB>26</SUB>>", "155": "<(IDENTIFIER,freq,freq[arr[l]]--)<SUB>26</SUB>>", "157": "<(IDENTIFIER,arr,freq[arr[l]]--)<SUB>26</SUB>>", "159": "<(CONTROL_STRUCTURE,if (freq[arr[l]] &gt; 0),if (freq[arr[l]] &gt; 0))<SUB>27</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,freq[arr[l]])<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,arr[l])<SUB>27</SUB>>", "165": "<(IDENTIFIER,l,freq[arr[l]] &gt; 0)<SUB>27</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "169": "<(IDENTIFIER,count,count--)<SUB>28</SUB>>", "171": "<(IDENTIFIER,l,l++)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,left[i][m])<SUB>32</SUB>>", "175": "<(IDENTIFIER,left,left[i][m] = l)<SUB>32</SUB>>", "177": "<(IDENTIFIER,m,left[i][m] = l)<SUB>32</SUB>>", "179": "<(CONTROL_STRUCTURE,while (l &lt; n),while (l &lt; n))<SUB>34</SUB>>", "181": "<(IDENTIFIER,l,l &lt; n)<SUB>34</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,freq[arr[l]])<SUB>35</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,arr[l])<SUB>35</SUB>>", "189": "<(IDENTIFIER,l,freq[arr[l]]--)<SUB>35</SUB>>", "191": "<(IDENTIFIER,l,l++)<SUB>36</SUB>>", "193": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n][k + 1])<SUB>40</SUB>>", "195": "<(&lt;operator&gt;.alloc,new long[n][k + 1])>", "197": "<(&lt;operator&gt;.addition,k + 1)<SUB>40</SUB>>", "199": "<(LITERAL,1,k + 1)<SUB>40</SUB>>", "201": "<(LOCAL,int i: int)<SUB>41</SUB>>", "203": "<(IDENTIFIER,i,int i = 0)<SUB>41</SUB>>", "205": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>41</SUB>>", "207": "<(IDENTIFIER,n,i &lt; n)<SUB>41</SUB>>", "209": "<(IDENTIFIER,i,i++)<SUB>41</SUB>>", "211": "<(fill,fill(dp[i], Integer.MAX_VALUE))<SUB>42</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>42</SUB>>", "215": "<(IDENTIFIER,i,fill(dp[i], Integer.MAX_VALUE))<SUB>42</SUB>>", "217": "<(IDENTIFIER,Integer,fill(dp[i], Integer.MAX_VALUE))<SUB>42</SUB>>", "219": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>44</SUB>>", "221": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>44</SUB>>", "223": "<(LITERAL,0,int i = 0)<SUB>44</SUB>>", "225": "<(IDENTIFIER,i,i &lt; n)<SUB>44</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,i++)<SUB>44</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "231": "<(LOCAL,int j: int)<SUB>45</SUB>>", "233": "<(IDENTIFIER,j,int j = 0)<SUB>45</SUB>>", "235": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= k)<SUB>45</SUB>>", "237": "<(IDENTIFIER,k,j &lt;= k)<SUB>45</SUB>>", "239": "<(IDENTIFIER,j,j++)<SUB>45</SUB>>", "241": "<(CONTROL_STRUCTURE,for (int s = 0; Some(s &lt;= j); s++),for (int s = 0; Some(s &lt;= j); s++))<SUB>46</SUB>>", "243": "<(&lt;operator&gt;.assignment,int s = 0)<SUB>46</SUB>>", "245": "<(LITERAL,0,int s = 0)<SUB>46</SUB>>", "247": "<(IDENTIFIER,s,s &lt;= j)<SUB>46</SUB>>", "249": "<(&lt;operator&gt;.postIncrement,s++)<SUB>46</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "253": "<(&lt;operator&gt;.equals,left[i][s] == 0)<SUB>47</SUB>>", "255": "<(&lt;operator&gt;.indexAccess,left[i])<SUB>47</SUB>>", "257": "<(IDENTIFIER,i,left[i][s] == 0)<SUB>47</SUB>>", "259": "<(LITERAL,0,left[i][s] == 0)<SUB>47</SUB>>", "261": "<(&lt;operator&gt;.assignment,dp[i][j] = 1)<SUB>48</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>48</SUB>>", "265": "<(IDENTIFIER,i,dp[i][j] = 1)<SUB>48</SUB>>", "267": "<(LITERAL,1,dp[i][j] = 1)<SUB>48</SUB>>", "269": "<(&lt;operator&gt;.assignment,dp[i][j] = Math.min(dp[i][j], dp[left[i][s] - 1][j - s] + 1))<SUB>51</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>51</SUB>>", "273": "<(IDENTIFIER,i,dp[i][j] = Math.min(dp[i][j], dp[left[i][s] - 1][j - s] + 1))<SUB>51</SUB>>", "275": "<(min,Math.min(dp[i][j], dp[left[i][s] - 1][j - s] + 1))<SUB>51</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>51</SUB>>", "279": "<(IDENTIFIER,dp,Math.min(dp[i][j], dp[left[i][s] - 1][j - s] + 1))<SUB>51</SUB>>", "281": "<(IDENTIFIER,j,Math.min(dp[i][j], dp[left[i][s] - 1][j - s] + 1))<SUB>51</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,dp[left[i][s] - 1][j - s])<SUB>51</SUB>>", "285": "<(IDENTIFIER,dp,dp[left[i][s] - 1][j - s] + 1)<SUB>51</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,left[i][s])<SUB>51</SUB>>", "289": "<(IDENTIFIER,left,left[i][s] - 1)<SUB>51</SUB>>", "291": "<(IDENTIFIER,s,left[i][s] - 1)<SUB>51</SUB>>", "293": "<(&lt;operator&gt;.subtraction,j - s)<SUB>51</SUB>>", "295": "<(IDENTIFIER,s,j - s)<SUB>51</SUB>>", "297": "<(println,println(dp[n - 1][k]))<SUB>57</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,dp[n - 1][k])<SUB>57</SUB>>", "301": "<(IDENTIFIER,dp,println(dp[n - 1][k]))<SUB>57</SUB>>", "303": "<(IDENTIFIER,n,n - 1)<SUB>57</SUB>>", "305": "<(IDENTIFIER,k,println(dp[n - 1][k]))<SUB>57</SUB>>", "307": "<(IDENTIFIER,out,close())<SUB>61</SUB>>", "309": "<(MODIFIER,STATIC)>"}}