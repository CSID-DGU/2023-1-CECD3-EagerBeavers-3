{"edges": [["19", "21"], ["19", "337"], ["19", "338"], ["19", "339"], ["21", "22"], ["21", "25"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "36"], ["21", "37"], ["21", "41"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "55"], ["21", "56"], ["21", "63"], ["21", "64"], ["21", "69"], ["21", "112"], ["21", "113"], ["21", "117"], ["21", "237"], ["21", "238"], ["21", "245"], ["21", "324"], ["21", "333"], ["21", "335"], ["22", "23"], ["22", "24"], ["25", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "33"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "88"], ["79", "109"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "92"], ["88", "98"], ["89", "90"], ["89", "91"], ["92", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["98", "99"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["115", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "129"], ["127", "148"], ["127", "149"], ["127", "156"], ["127", "157"], ["127", "162"], ["127", "196"], ["127", "232"], ["129", "130"], ["129", "133"], ["129", "136"], ["129", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["139", "140"], ["139", "147"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["162", "167"], ["162", "170"], ["162", "172"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["170", "171"], ["172", "173"], ["173", "174"], ["173", "181"], ["173", "188"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "198"], ["196", "203"], ["196", "206"], ["196", "208"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["209", "210"], ["209", "217"], ["209", "224"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "223"], ["220", "221"], ["220", "222"], ["224", "225"], ["225", "226"], ["225", "227"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["238", "239"], ["238", "240"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "253"], ["245", "255"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["255", "256"], ["255", "263"], ["255", "264"], ["255", "269"], ["255", "270"], ["255", "273"], ["255", "317"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["273", "278"], ["273", "281"], ["273", "283"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["283", "284"], ["284", "285"], ["284", "292"], ["285", "286"], ["285", "291"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "290"], ["292", "293"], ["292", "294"], ["292", "301"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["303", "306"], ["306", "307"], ["306", "314"], ["307", "308"], ["307", "313"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "323"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["324", "325"], ["324", "326"], ["326", "327"], ["326", "330"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "332"], ["333", "334"], ["335", "336"], ["22", "25"], ["25", "29"], ["27", "33"], ["30", "39"], ["37", "43"], ["41", "47"], ["45", "53"], ["51", "59"], ["56", "66"], ["64", "71"], ["113", "119"], ["238", "247"], ["324", "333"], ["333", "335"], ["335", "339"], ["24", "22"], ["29", "27"], ["31", "30"], ["39", "37"], ["43", "41"], ["47", "45"], ["53", "51"], ["58", "56"], ["66", "64"], ["71", "74"], ["74", "84"], ["74", "115"], ["77", "74"], ["115", "113"], ["119", "122"], ["122", "130"], ["122", "241"], ["125", "122"], ["240", "238"], ["247", "250"], ["250", "258"], ["250", "327"], ["253", "250"], ["326", "324"], ["33", "31"], ["59", "58"], ["81", "89"], ["109", "77"], ["149", "159"], ["157", "164"], ["232", "125"], ["241", "240"], ["256", "266"], ["264", "270"], ["270", "275"], ["317", "253"], ["327", "330"], ["330", "326"], ["83", "81"], ["89", "94"], ["89", "100"], ["92", "109"], ["130", "133"], ["133", "143"], ["133", "153"], ["136", "133"], ["151", "149"], ["159", "157"], ["164", "167"], ["167", "177"], ["167", "200"], ["170", "167"], ["198", "203"], ["203", "213"], ["203", "233"], ["206", "203"], ["233", "232"], ["257", "256"], ["266", "264"], ["275", "278"], ["278", "288"], ["278", "319"], ["281", "278"], ["318", "317"], ["84", "83"], ["93", "92"], ["153", "151"], ["200", "198"], ["258", "257"], ["319", "318"], ["94", "93"], ["100", "105"], ["100", "109"], ["103", "109"], ["140", "153"], ["140", "136"], ["174", "184"], ["174", "192"], ["181", "170"], ["210", "220"], ["210", "228"], ["217", "206"], ["285", "298"], ["285", "281"], ["104", "103"], ["141", "140"], ["175", "174"], ["183", "181"], ["189", "170"], ["211", "210"], ["219", "217"], ["225", "206"], ["286", "285"], ["294", "310"], ["301", "281"], ["105", "104"], ["143", "141"], ["177", "175"], ["184", "183"], ["191", "189"], ["213", "211"], ["220", "219"], ["227", "225"], ["288", "286"], ["296", "294"], ["303", "301"], ["192", "191"], ["228", "227"], ["298", "296"], ["306", "303"], ["307", "314"], ["314", "306"], ["308", "307"], ["310", "308"], ["19", "24"], ["20", "339"], ["22", "339"], ["25", "339"], ["25", "339"], ["27", "339"], ["30", "339"], ["30", "339"], ["37", "339"], ["41", "339"], ["41", "339"], ["45", "339"], ["45", "339"], ["53", "339"], ["51", "339"], ["51", "339"], ["56", "339"], ["59", "339"], ["58", "339"], ["56", "339"], ["56", "339"], ["64", "339"], ["64", "339"], ["64", "339"], ["71", "339"], ["74", "339"], ["74", "339"], ["74", "339"], ["113", "339"], ["113", "339"], ["113", "339"], ["238", "339"], ["241", "339"], ["240", "339"], ["238", "339"], ["238", "339"], ["247", "339"], ["250", "339"], ["250", "339"], ["330", "339"], ["324", "339"], ["324", "339"], ["333", "339"], ["335", "339"], ["335", "339"], ["256", "339"], ["256", "339"], ["264", "339"], ["264", "339"], ["264", "339"], ["270", "339"], ["275", "339"], ["278", "339"], ["278", "339"], ["278", "339"], ["317", "339"], ["317", "339"], ["317", "339"], ["253", "339"], ["286", "339"], ["285", "339"], ["285", "339"], ["294", "339"], ["296", "339"], ["294", "339"], ["294", "339"], ["310", "339"], ["306", "339"], ["306", "339"], ["303", "339"], ["301", "339"], ["301", "339"], ["281", "339"], ["130", "339"], ["133", "339"], ["140", "339"], ["140", "339"], ["136", "339"], ["149", "339"], ["151", "339"], ["149", "339"], ["149", "339"], ["157", "339"], ["157", "339"], ["164", "339"], ["167", "339"], ["200", "339"], ["198", "339"], ["198", "339"], ["203", "339"], ["203", "339"], ["232", "339"], ["232", "339"], ["232", "339"], ["125", "339"], ["211", "339"], ["210", "339"], ["210", "339"], ["225", "339"], ["225", "339"], ["217", "339"], ["217", "339"], ["206", "339"], ["175", "339"], ["174", "339"], ["174", "339"], ["189", "339"], ["189", "339"], ["181", "339"], ["181", "339"], ["170", "339"], ["84", "339"], ["83", "339"], ["81", "339"], ["81", "339"], ["89", "339"], ["100", "339"], ["103", "339"], ["103", "339"], ["92", "339"], ["92", "339"], ["109", "339"], ["109", "339"], ["109", "339"], ["77", "339"], ["266", "339"], ["270", "339"], ["303", "339"], ["19", "20"], ["19", "22"], ["19", "27"], ["39", "37"], ["43", "41"], ["47", "45"], ["47", "45"], ["53", "51"], ["58", "56"], ["58", "56"], ["66", "64"], ["115", "113"], ["240", "238"], ["240", "238"], ["22", "25"], ["19", "25"], ["27", "30"], ["19", "30"], ["19", "71"], ["19", "119"], ["19", "247"], ["30", "324"], ["19", "324"], ["324", "333"], ["19", "333"], ["333", "335"], ["19", "335"], ["19", "39"], ["39", "43"], ["19", "43"], ["19", "47"], ["41", "47"], ["43", "53"], ["19", "53"], ["59", "58"], ["59", "58"], ["19", "58"], ["47", "66"], ["19", "66"], ["71", "74"], ["77", "74"], ["19", "74"], ["37", "74"], ["84", "77"], ["19", "77"], ["83", "81"], ["83", "81"], ["89", "109"], ["100", "109"], ["19", "109"], ["45", "115"], ["19", "115"], ["119", "122"], ["125", "122"], ["19", "122"], ["115", "122"], ["151", "125"], ["211", "125"], ["175", "125"], ["19", "125"], ["151", "149"], ["151", "149"], ["113", "157"], ["157", "232"], ["225", "232"], ["217", "232"], ["189", "232"], ["181", "232"], ["19", "232"], ["66", "240"], ["203", "240"], ["19", "240"], ["122", "240"], ["247", "250"], ["253", "250"], ["19", "250"], ["240", "250"], ["266", "253"], ["286", "253"], ["296", "253"], ["19", "253"], ["19", "256"], ["266", "264"], ["266", "264"], ["19", "270"], ["270", "317"], ["301", "317"], ["19", "317"], ["51", "59"], ["19", "59"], ["19", "130"], ["19", "164"], ["167", "198"], ["19", "198"], ["66", "241"], ["203", "241"], ["19", "241"], ["19", "275"], ["250", "330"], ["19", "330"], ["84", "83"], ["84", "83"], ["19", "83"], ["56", "89"], ["109", "89"], ["19", "89"], ["81", "89"], ["130", "133"], ["136", "133"], ["19", "133"], ["66", "133"], ["203", "133"], ["133", "136"], ["19", "136"], ["122", "151"], ["141", "151"], ["19", "151"], ["141", "151"], ["164", "167"], ["170", "167"], ["19", "167"], ["133", "167"], ["167", "170"], ["19", "170"], ["198", "203"], ["206", "203"], ["19", "203"], ["133", "203"], ["203", "206"], ["19", "206"], ["19", "266"], ["250", "266"], ["275", "278"], ["281", "278"], ["19", "278"], ["66", "278"], ["203", "278"], ["278", "281"], ["19", "281"], ["59", "84"], ["19", "84"], ["74", "84"], ["167", "200"], ["19", "200"], ["89", "100"], ["19", "100"], ["89", "100"], ["141", "140"], ["141", "140"], ["19", "140"], ["175", "174"], ["175", "174"], ["19", "174"], ["157", "181"], ["189", "181"], ["19", "181"], ["211", "210"], ["211", "210"], ["19", "210"], ["157", "217"], ["225", "217"], ["189", "217"], ["181", "217"], ["19", "217"], ["286", "285"], ["286", "285"], ["19", "285"], ["296", "294"], ["296", "294"], ["303", "301"], ["303", "301"], ["303", "301"], ["122", "141"], ["19", "141"], ["151", "141"], ["151", "175"], ["19", "175"], ["211", "175"], ["157", "189"], ["181", "189"], ["19", "189"], ["151", "211"], ["175", "211"], ["19", "211"], ["175", "211"], ["157", "225"], ["217", "225"], ["189", "225"], ["181", "225"], ["19", "225"], ["266", "286"], ["296", "286"], ["19", "286"], ["296", "286"], ["151", "286"], ["286", "296"], ["19", "296"], ["286", "296"], ["19", "303"], ["270", "303"], ["301", "303"], ["113", "303"], ["113", "306"], ["264", "310"], ["19", "310"], ["74", "84"], ["74", "74"], ["74", "109"], ["74", "77"], ["74", "81"], ["74", "89"], ["74", "83"], ["122", "167"], ["122", "122"], ["122", "200"], ["122", "159"], ["122", "133"], ["122", "149"], ["122", "232"], ["122", "151"], ["122", "198"], ["122", "153"], ["122", "130"], ["122", "164"], ["122", "233"], ["122", "157"], ["122", "203"], ["122", "125"], ["250", "256"], ["250", "317"], ["250", "264"], ["250", "258"], ["250", "253"], ["250", "278"], ["250", "319"], ["250", "257"], ["250", "275"], ["250", "318"], ["250", "270"], ["250", "250"], ["250", "266"], ["89", "93"], ["89", "100"], ["89", "94"], ["89", "92"], ["133", "141"], ["133", "140"], ["133", "143"], ["167", "167"], ["167", "170"], ["167", "174"], ["167", "177"], ["167", "175"], ["203", "213"], ["203", "206"], ["203", "210"], ["203", "211"], ["203", "203"], ["278", "281"], ["278", "288"], ["278", "278"], ["278", "285"], ["278", "286"], ["100", "104"], ["100", "103"], ["100", "105"], ["140", "136"], ["140", "133"], ["174", "192"], ["174", "181"], ["174", "184"], ["174", "189"], ["174", "191"], ["174", "183"], ["210", "228"], ["210", "217"], ["210", "227"], ["210", "225"], ["210", "220"], ["210", "219"], ["285", "308"], ["285", "298"], ["285", "306"], ["285", "296"], ["285", "310"], ["285", "307"], ["285", "301"], ["285", "314"], ["285", "294"], ["285", "303"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,input,input = new DataReader())<SUB>2</SUB>>", "25": "<(&lt;init&gt;,new DataReader())<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "28": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "35": "<(LOCAL,int M: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int M = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int P = 1 &lt;&lt; M)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; M)<SUB>4</SUB>>", "49": "<(IDENTIFIER,M,1 &lt;&lt; M)<SUB>4</SUB>>", "51": "<(&lt;operator&gt;.assignment,String x = nextStr())<SUB>5</SUB>>", "53": "<(nextStr,nextStr())<SUB>5</SUB>>", "55": "<(LOCAL,int c1: int)<SUB>6</SUB>>", "57": "<(IDENTIFIER,c1,int c1 = x.charAt(0) - 'a')<SUB>6</SUB>>", "59": "<(charAt,x.charAt(0))<SUB>6</SUB>>", "61": "<(LITERAL,0,x.charAt(0))<SUB>6</SUB>>", "63": "<(LOCAL,int[][] pair_count: int[][])<SUB>7</SUB>>", "65": "<(IDENTIFIER,pair_count,int[][] pair_count = new int[M][M])<SUB>7</SUB>>", "67": "<(IDENTIFIER,M,new int[M][M])<SUB>7</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; N); i++),for (int i = 1; Some(i &lt; N); i++))<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>8</SUB>>", "73": "<(LITERAL,1,int i = 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,i &lt; N)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,int c2 = x.charAt(i) - 'a')<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.subtraction,x.charAt(i) - 'a')<SUB>9</SUB>>", "85": "<(IDENTIFIER,x,x.charAt(i))<SUB>9</SUB>>", "87": "<(LITERAL,'a',x.charAt(i) - 'a')<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.lessThan,c1 &lt; c2)<SUB>10</SUB>>", "91": "<(IDENTIFIER,c2,c1 &lt; c2)<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,pair_count[c1][c2])<SUB>11</SUB>>", "95": "<(IDENTIFIER,pair_count,pair_count[c1][c2]++)<SUB>11</SUB>>", "97": "<(IDENTIFIER,c2,pair_count[c1][c2]++)<SUB>11</SUB>>", "99": "<(CONTROL_STRUCTURE,if (c1 &gt; c2),if (c1 &gt; c2))<SUB>12</SUB>>", "101": "<(IDENTIFIER,c1,c1 &gt; c2)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,pair_count[c2][c1]++)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,pair_count[c2])<SUB>13</SUB>>", "107": "<(IDENTIFIER,c2,pair_count[c2][c1]++)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,c1 = c2)<SUB>14</SUB>>", "111": "<(IDENTIFIER,c2,c1 = c2)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,int[] group_count = new int[P])<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.alloc,new int[P])>", "117": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; P); mask++),for (int mask = 1; Some(mask &lt; P); mask++))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>17</SUB>>", "121": "<(LITERAL,1,int mask = 1)<SUB>17</SUB>>", "123": "<(IDENTIFIER,mask,mask &lt; P)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>17</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,for (j = 0; Some(j &lt; M); j++),for (j = 0; Some(j &lt; M); j++))<SUB>19</SUB>>", "131": "<(IDENTIFIER,j,j = 0)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>19</SUB>>", "135": "<(IDENTIFIER,M,j &lt; M)<SUB>19</SUB>>", "137": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "139": "<(CONTROL_STRUCTURE,if ((mask &amp; BM[j]) &gt; 0),if ((mask &amp; BM[j]) &gt; 0))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.and,mask &amp; BM[j])<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,BM[j])<SUB>20</SUB>>", "145": "<(IDENTIFIER,j,mask &amp; BM[j])<SUB>20</SUB>>", "147": "<(CONTROL_STRUCTURE,break;,break;)<SUB>20</SUB>>", "149": "<(&lt;operator&gt;.assignment,int nmask = mask ^ BM[j])<SUB>22</SUB>>", "151": "<(&lt;operator&gt;.xor,mask ^ BM[j])<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,BM[j])<SUB>22</SUB>>", "155": "<(IDENTIFIER,j,mask ^ BM[j])<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.assignment,int val = group_count[nmask])<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,group_count[nmask])<SUB>23</SUB>>", "161": "<(IDENTIFIER,nmask,int val = group_count[nmask])<SUB>23</SUB>>", "163": "<(LOCAL,int i: int)<SUB>24</SUB>>", "165": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "167": "<(&lt;operator&gt;.lessThan,i &lt; j)<SUB>24</SUB>>", "169": "<(IDENTIFIER,j,i &lt; j)<SUB>24</SUB>>", "171": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "173": "<(CONTROL_STRUCTURE,if ((mask &amp; BM[i]) &gt; 0),if ((mask &amp; BM[i]) &gt; 0))<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.and,mask &amp; BM[i])<SUB>25</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,BM[i])<SUB>25</SUB>>", "179": "<(IDENTIFIER,i,mask &amp; BM[i])<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.assignmentMinus,val -= pair_count[i][j])<SUB>25</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,pair_count[i][j])<SUB>25</SUB>>", "185": "<(IDENTIFIER,pair_count,val -= pair_count[i][j])<SUB>25</SUB>>", "187": "<(IDENTIFIER,j,val -= pair_count[i][j])<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.assignmentPlus,val += pair_count[i][j])<SUB>26</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,pair_count[i][j])<SUB>26</SUB>>", "193": "<(IDENTIFIER,pair_count,val += pair_count[i][j])<SUB>26</SUB>>", "195": "<(IDENTIFIER,j,val += pair_count[i][j])<SUB>26</SUB>>", "197": "<(LOCAL,int i: int)<SUB>28</SUB>>", "199": "<(IDENTIFIER,i,int i = j + 1)<SUB>28</SUB>>", "201": "<(IDENTIFIER,j,j + 1)<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.lessThan,i &lt; M)<SUB>28</SUB>>", "205": "<(IDENTIFIER,M,i &lt; M)<SUB>28</SUB>>", "207": "<(IDENTIFIER,i,i++)<SUB>28</SUB>>", "209": "<(CONTROL_STRUCTURE,if ((mask &amp; BM[i]) &gt; 0),if ((mask &amp; BM[i]) &gt; 0))<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.and,mask &amp; BM[i])<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,BM[i])<SUB>29</SUB>>", "215": "<(IDENTIFIER,i,mask &amp; BM[i])<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.assignmentMinus,val -= pair_count[j][i])<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,pair_count[j][i])<SUB>29</SUB>>", "221": "<(IDENTIFIER,pair_count,val -= pair_count[j][i])<SUB>29</SUB>>", "223": "<(IDENTIFIER,i,val -= pair_count[j][i])<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.assignmentPlus,val += pair_count[j][i])<SUB>30</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,pair_count[j][i])<SUB>30</SUB>>", "229": "<(IDENTIFIER,pair_count,val += pair_count[j][i])<SUB>30</SUB>>", "231": "<(IDENTIFIER,i,val += pair_count[j][i])<SUB>30</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,group_count[mask])<SUB>32</SUB>>", "235": "<(IDENTIFIER,mask,group_count[mask] = val)<SUB>32</SUB>>", "237": "<(LOCAL,int[][] dp: int[][])<SUB>36</SUB>>", "239": "<(IDENTIFIER,dp,int[][] dp = new int[M + 1][P])<SUB>36</SUB>>", "241": "<(&lt;operator&gt;.addition,M + 1)<SUB>36</SUB>>", "243": "<(LITERAL,1,M + 1)<SUB>36</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int mask = 1; Some(mask &lt; P); mask++),for (int mask = 1; Some(mask &lt; P); mask++))<SUB>37</SUB>>", "247": "<(&lt;operator&gt;.assignment,int mask = 1)<SUB>37</SUB>>", "249": "<(LITERAL,1,int mask = 1)<SUB>37</SUB>>", "251": "<(IDENTIFIER,mask,mask &lt; P)<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>37</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dp[0][mask])<SUB>38</SUB>>", "259": "<(IDENTIFIER,dp,dp[0][mask] = 0)<SUB>38</SUB>>", "261": "<(IDENTIFIER,mask,dp[0][mask] = 0)<SUB>38</SUB>>", "263": "<(LOCAL,int k: int)<SUB>39</SUB>>", "265": "<(IDENTIFIER,k,int k = Integer.bitCount(mask))<SUB>39</SUB>>", "267": "<(IDENTIFIER,Integer,Integer.bitCount(mask))<SUB>39</SUB>>", "269": "<(LOCAL,int val: int)<SUB>40</SUB>>", "271": "<(IDENTIFIER,val,int val = LARGE_INT)<SUB>40</SUB>>", "273": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>41</SUB>>", "275": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>41</SUB>>", "277": "<(LITERAL,0,int j = 0)<SUB>41</SUB>>", "279": "<(IDENTIFIER,j,j &lt; M)<SUB>41</SUB>>", "281": "<(&lt;operator&gt;.postIncrement,j++)<SUB>41</SUB>>", "283": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "285": "<(&lt;operator&gt;.greaterThan,(mask &amp; BM[j]) &gt; 0)<SUB>42</SUB>>", "287": "<(IDENTIFIER,mask,mask &amp; BM[j])<SUB>42</SUB>>", "289": "<(IDENTIFIER,BM,mask &amp; BM[j])<SUB>42</SUB>>", "291": "<(LITERAL,0,(mask &amp; BM[j]) &gt; 0)<SUB>42</SUB>>", "293": "<(LOCAL,int nmask: int)<SUB>43</SUB>>", "295": "<(IDENTIFIER,nmask,int nmask = mask ^ BM[j])<SUB>43</SUB>>", "297": "<(IDENTIFIER,mask,mask ^ BM[j])<SUB>43</SUB>>", "299": "<(IDENTIFIER,BM,mask ^ BM[j])<SUB>43</SUB>>", "301": "<(&lt;operator&gt;.assignment,val = Math.min(val, dp[k - 1][nmask] + group_count[nmask]))<SUB>44</SUB>>", "303": "<(min,Math.min(val, dp[k - 1][nmask] + group_count[nmask]))<SUB>44</SUB>>", "305": "<(IDENTIFIER,val,Math.min(val, dp[k - 1][nmask] + group_count[nmask]))<SUB>44</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,dp[k - 1][nmask])<SUB>44</SUB>>", "309": "<(IDENTIFIER,dp,dp[k - 1][nmask] + group_count[nmask])<SUB>44</SUB>>", "311": "<(IDENTIFIER,k,k - 1)<SUB>44</SUB>>", "313": "<(IDENTIFIER,nmask,dp[k - 1][nmask] + group_count[nmask])<SUB>44</SUB>>", "315": "<(IDENTIFIER,group_count,dp[k - 1][nmask] + group_count[nmask])<SUB>44</SUB>>", "317": "<(&lt;operator&gt;.assignment,dp[k][mask] = val)<SUB>47</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[k])<SUB>47</SUB>>", "321": "<(IDENTIFIER,k,dp[k][mask] = val)<SUB>47</SUB>>", "323": "<(IDENTIFIER,val,dp[k][mask] = val)<SUB>47</SUB>>", "325": "<(IDENTIFIER,out,println(dp[M][P - 1]))<SUB>50</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,dp[M])<SUB>50</SUB>>", "329": "<(IDENTIFIER,M,println(dp[M][P - 1]))<SUB>50</SUB>>", "331": "<(IDENTIFIER,P,P - 1)<SUB>50</SUB>>", "333": "<(flush,flush())<SUB>51</SUB>>", "335": "<(close,close())<SUB>52</SUB>>", "337": "<(MODIFIER,PUBLIC)>", "339": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}