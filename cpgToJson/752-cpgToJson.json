{"edges": [["21", "23"], ["21", "145"], ["21", "146"], ["21", "147"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "46"], ["23", "49"], ["23", "51"], ["23", "77"], ["23", "78"], ["23", "82"], ["23", "83"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "91"], ["23", "94"], ["23", "99"], ["23", "138"], ["23", "141"], ["23", "143"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "59"], ["51", "61"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "68"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "73"], ["69", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["103", "104"], ["104", "105"], ["104", "108"], ["104", "125"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "119"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["111", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["125", "126"], ["126", "127"], ["126", "133"], ["127", "128"], ["127", "132"], ["128", "129"], ["128", "131"], ["129", "130"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["141", "142"], ["143", "144"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "44"], ["41", "48"], ["46", "49"], ["49", "53"], ["78", "85"], ["85", "88"], ["88", "91"], ["91", "96"], ["94", "100"], ["138", "141"], ["141", "143"], ["143", "147"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "56"], ["56", "65"], ["56", "80"], ["59", "56"], ["80", "78"], ["96", "94"], ["100", "105"], ["100", "138"], ["34", "32"], ["44", "43"], ["63", "70"], ["65", "63"], ["69", "73"], ["69", "59"], ["73", "59"], ["105", "115"], ["105", "129"], ["70", "69"], ["109", "123"], ["119", "100"], ["111", "109"], ["121", "119"], ["133", "100"], ["114", "111"], ["123", "121"], ["128", "138"], ["128", "135"], ["135", "133"], ["115", "114"], ["129", "128"], ["21", "26"], ["22", "147"], ["24", "147"], ["27", "147"], ["28", "147"], ["31", "147"], ["31", "147"], ["36", "147"], ["36", "147"], ["41", "147"], ["44", "147"], ["43", "147"], ["41", "147"], ["41", "147"], ["46", "147"], ["49", "147"], ["53", "147"], ["56", "147"], ["56", "147"], ["78", "147"], ["80", "147"], ["78", "147"], ["78", "147"], ["85", "147"], ["85", "147"], ["88", "147"], ["91", "147"], ["94", "147"], ["94", "147"], ["94", "147"], ["100", "147"], ["100", "147"], ["100", "147"], ["105", "147"], ["105", "147"], ["129", "147"], ["128", "147"], ["128", "147"], ["128", "147"], ["133", "147"], ["133", "147"], ["133", "147"], ["138", "147"], ["138", "147"], ["141", "147"], ["143", "147"], ["143", "147"], ["114", "147"], ["111", "147"], ["109", "147"], ["109", "147"], ["119", "147"], ["123", "147"], ["119", "147"], ["119", "147"], ["63", "147"], ["63", "147"], ["70", "147"], ["69", "147"], ["69", "147"], ["73", "147"], ["73", "147"], ["59", "147"], ["105", "147"], ["111", "147"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["21", "46"], ["80", "78"], ["21", "85"], ["21", "88"], ["56", "91"], ["21", "91"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["46", "49"], ["21", "49"], ["21", "53"], ["21", "94"], ["41", "94"], ["31", "138"], ["21", "138"], ["91", "138"], ["109", "138"], ["138", "141"], ["21", "141"], ["141", "143"], ["21", "143"], ["27", "38"], ["21", "38"], ["44", "43"], ["53", "56"], ["59", "56"], ["21", "56"], ["36", "56"], ["56", "59"], ["21", "59"], ["41", "63"], ["49", "80"], ["70", "80"], ["73", "80"], ["21", "80"], ["88", "100"], ["129", "100"], ["21", "100"], ["128", "100"], ["56", "100"], ["38", "44"], ["21", "44"], ["70", "69"], ["70", "69"], ["70", "73"], ["21", "73"], ["70", "73"], ["21", "105"], ["78", "105"], ["111", "109"], ["111", "109"], ["111", "109"], ["49", "70"], ["73", "70"], ["21", "70"], ["63", "70"], ["94", "119"], ["133", "119"], ["21", "119"], ["41", "119"], ["21", "111"], ["91", "111"], ["109", "111"], ["114", "111"], ["114", "111"], ["94", "133"], ["119", "133"], ["21", "133"], ["41", "133"], ["100", "114"], ["21", "114"], ["85", "114"], ["123", "114"], ["114", "123"], ["21", "123"], ["129", "128"], ["100", "128"], ["21", "128"], ["100", "115"], ["21", "115"], ["100", "129"], ["21", "129"], ["56", "56"], ["56", "69"], ["56", "65"], ["56", "59"], ["56", "70"], ["56", "63"], ["100", "105"], ["69", "73"], ["105", "115"], ["105", "128"], ["105", "114"], ["105", "119"], ["105", "121"], ["105", "123"], ["105", "129"], ["105", "100"], ["105", "111"], ["105", "109"], ["128", "100"], ["128", "135"], ["128", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,char[] s = toCharArray())<SUB>6</SUB>>", "43": "<(toCharArray,toCharArray())<SUB>6</SUB>>", "45": "<(IDENTIFIER,in,next())<SUB>6</SUB>>", "47": "<(IDENTIFIER,freq,freq = new HashMap&lt;Character, Integer&gt;())<SUB>7</SUB>>", "49": "<(&lt;init&gt;,new HashMap&lt;Character, Integer&gt;())<SUB>7</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "55": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,char c = s[i])<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.indexAccess,s[i])<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,char c = s[i])<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.logicalNot,!freq.containsKey(c))<SUB>10</SUB>>", "71": "<(IDENTIFIER,freq,containsKey(c))<SUB>10</SUB>>", "73": "<(put,put(c, 0))<SUB>11</SUB>>", "75": "<(IDENTIFIER,c,put(c, 0))<SUB>11</SUB>>", "77": "<(LOCAL,int k: int)<SUB>14</SUB>>", "79": "<(IDENTIFIER,k,int k = size())<SUB>14</SUB>>", "81": "<(IDENTIFIER,freq,size())<SUB>14</SUB>>", "83": "<(LOCAL,int r: int)<SUB>15</SUB>>", "85": "<(&lt;operator&gt;.assignment,int l = 0)<SUB>15</SUB>>", "87": "<(LITERAL,0,int l = 0)<SUB>15</SUB>>", "89": "<(IDENTIFIER,r,int r = 0)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.assignment,int best = n)<SUB>15</SUB>>", "93": "<(IDENTIFIER,n,int best = n)<SUB>15</SUB>>", "95": "<(IDENTIFIER,this,inc(s[0]))<SUB>16</SUB>>", "97": "<(IDENTIFIER,s,inc(s[0]))<SUB>16</SUB>>", "99": "<(CONTROL_STRUCTURE,while (r &lt; n),while (r &lt; n))<SUB>18</SUB>>", "101": "<(IDENTIFIER,r,r &lt; n)<SUB>18</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.equals,unique == k)<SUB>19</SUB>>", "107": "<(IDENTIFIER,k,unique == k)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.assignment,best = Math.min(best, r + 1 - l))<SUB>20</SUB>>", "111": "<(min,Math.min(best, r + 1 - l))<SUB>20</SUB>>", "113": "<(IDENTIFIER,best,Math.min(best, r + 1 - l))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.addition,r + 1)<SUB>20</SUB>>", "117": "<(LITERAL,1,r + 1)<SUB>20</SUB>>", "119": "<(dec,dec(s[l++]))<SUB>21</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,s[l++])<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,l++)<SUB>21</SUB>>", "125": "<(CONTROL_STRUCTURE,else,else)<SUB>23</SUB>>", "127": "<(CONTROL_STRUCTURE,if (++r == n),if (++r == n))<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.preIncrement,++r)<SUB>24</SUB>>", "131": "<(IDENTIFIER,n,++r == n)<SUB>24</SUB>>", "133": "<(inc,inc(s[r]))<SUB>26</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,s[r])<SUB>26</SUB>>", "137": "<(IDENTIFIER,r,inc(s[r]))<SUB>26</SUB>>", "139": "<(IDENTIFIER,pw,println(best))<SUB>30</SUB>>", "141": "<(flush,flush())<SUB>32</SUB>>", "143": "<(close,close())<SUB>33</SUB>>", "145": "<(MODIFIER,PUBLIC)>", "147": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}