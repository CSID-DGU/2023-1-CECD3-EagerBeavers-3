{"edges": [["19", "21"], ["19", "233"], ["19", "234"], ["19", "235"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "50"], ["21", "51"], ["21", "57"], ["21", "63"], ["21", "68"], ["21", "109"], ["21", "222"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "87"], ["78", "88"], ["78", "97"], ["78", "103"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["103", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "119"], ["109", "121"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "128"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "138"], ["128", "140"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["140", "141"], ["140", "150"], ["140", "151"], ["140", "154"], ["140", "198"], ["140", "199"], ["140", "212"], ["141", "142"], ["141", "149"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "157"], ["154", "160"], ["154", "163"], ["154", "166"], ["154", "169"], ["154", "171"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "177"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "183"], ["177", "190"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "209"], ["202", "203"], ["202", "204"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["216", "217"], ["216", "218"], ["216", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "226"], ["223", "224"], ["223", "225"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "54"], ["51", "62"], ["57", "64"], ["63", "70"], ["222", "235"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "51"], ["60", "57"], ["64", "63"], ["70", "73"], ["73", "83"], ["73", "111"], ["76", "73"], ["111", "116"], ["114", "125"], ["114", "225"], ["119", "116"], ["223", "229"], ["226", "222"], ["28", "26"], ["54", "53"], ["62", "60"], ["80", "93"], ["88", "99"], ["97", "105"], ["103", "76"], ["116", "114"], ["123", "130"], ["225", "223"], ["228", "226"], ["82", "80"], ["90", "88"], ["98", "97"], ["104", "103"], ["125", "123"], ["130", "134"], ["133", "144"], ["133", "119"], ["138", "134"], ["229", "228"], ["83", "82"], ["91", "90"], ["99", "98"], ["105", "104"], ["134", "133"], ["151", "157"], ["199", "213"], ["212", "138"], ["93", "91"], ["142", "138"], ["142", "151"], ["157", "160"], ["160", "166"], ["160", "206"], ["163", "160"], ["166", "163"], ["201", "199"], ["213", "218"], ["216", "212"], ["143", "142"], ["202", "209"], ["209", "201"], ["218", "216"], ["144", "143"], ["204", "202"], ["206", "204"], ["19", "24"], ["20", "235"], ["22", "235"], ["25", "235"], ["25", "235"], ["30", "235"], ["35", "235"], ["35", "235"], ["40", "235"], ["42", "235"], ["40", "235"], ["40", "235"], ["45", "235"], ["45", "235"], ["45", "235"], ["51", "235"], ["51", "235"], ["57", "235"], ["57", "235"], ["57", "235"], ["63", "235"], ["63", "235"], ["73", "235"], ["73", "235"], ["111", "235"], ["114", "235"], ["114", "235"], ["222", "235"], ["229", "235"], ["228", "235"], ["222", "235"], ["222", "235"], ["123", "235"], ["123", "235"], ["123", "235"], ["130", "235"], ["134", "235"], ["133", "235"], ["133", "235"], ["119", "235"], ["142", "235"], ["142", "235"], ["151", "235"], ["157", "235"], ["157", "235"], ["160", "235"], ["160", "235"], ["204", "235"], ["201", "235"], ["209", "235"], ["209", "235"], ["201", "235"], ["199", "235"], ["199", "235"], ["212", "235"], ["216", "235"], ["212", "235"], ["212", "235"], ["166", "235"], ["163", "235"], ["138", "235"], ["80", "235"], ["82", "235"], ["80", "235"], ["80", "235"], ["88", "235"], ["91", "235"], ["91", "235"], ["90", "235"], ["88", "235"], ["88", "235"], ["97", "235"], ["97", "235"], ["103", "235"], ["103", "235"], ["76", "235"], ["216", "235"], ["57", "235"], ["125", "235"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["53", "51"], ["19", "63"], ["22", "25"], ["19", "25"], ["19", "57"], ["51", "57"], ["19", "70"], ["19", "111"], ["57", "222"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["35", "47"], ["19", "47"], ["54", "53"], ["54", "53"], ["70", "73"], ["76", "73"], ["19", "73"], ["30", "73"], ["93", "76"], ["19", "76"], ["82", "80"], ["82", "80"], ["90", "88"], ["90", "88"], ["111", "114"], ["119", "114"], ["19", "114"], ["116", "114"], ["116", "114"], ["134", "119"], ["19", "119"], ["125", "123"], ["125", "123"], ["19", "54"], ["47", "54"], ["19", "116"], ["54", "116"], ["163", "116"], ["19", "130"], ["229", "228"], ["229", "228"], ["19", "228"], ["83", "82"], ["83", "82"], ["19", "82"], ["91", "90"], ["91", "90"], ["19", "90"], ["19", "125"], ["114", "125"], ["134", "133"], ["134", "133"], ["19", "133"], ["144", "138"], ["206", "138"], ["19", "138"], ["19", "151"], ["57", "199"], ["209", "199"], ["209", "199"], ["216", "212"], ["216", "212"], ["216", "212"], ["19", "229"], ["116", "229"], ["40", "83"], ["91", "83"], ["19", "83"], ["73", "83"], ["83", "91"], ["19", "91"], ["93", "91"], ["93", "91"], ["125", "134"], ["144", "134"], ["204", "134"], ["19", "134"], ["130", "134"], ["138", "134"], ["144", "157"], ["19", "157"], ["19", "160"], ["19", "166"], ["83", "93"], ["19", "93"], ["143", "142"], ["143", "142"], ["19", "142"], ["160", "163"], ["19", "163"], ["116", "163"], ["157", "166"], ["57", "201"], ["209", "201"], ["209", "201"], ["19", "216"], ["57", "216"], ["212", "216"], ["199", "216"], ["144", "143"], ["144", "143"], ["19", "143"], ["123", "209"], ["19", "209"], ["151", "209"], ["134", "144"], ["19", "144"], ["134", "144"], ["19", "204"], ["144", "204"], ["206", "204"], ["206", "204"], ["19", "206"], ["144", "206"], ["73", "73"], ["73", "98"], ["73", "103"], ["73", "104"], ["73", "76"], ["73", "97"], ["73", "91"], ["73", "93"], ["73", "90"], ["73", "80"], ["73", "88"], ["73", "99"], ["73", "82"], ["73", "83"], ["73", "105"], ["114", "114"], ["114", "119"], ["114", "134"], ["114", "130"], ["114", "116"], ["114", "123"], ["114", "125"], ["114", "133"], ["133", "144"], ["133", "134"], ["133", "138"], ["133", "142"], ["133", "143"], ["133", "133"], ["142", "209"], ["142", "151"], ["142", "213"], ["142", "204"], ["142", "206"], ["142", "212"], ["142", "202"], ["142", "201"], ["142", "160"], ["142", "157"], ["142", "199"], ["142", "216"], ["142", "218"], ["160", "163"], ["160", "160"], ["160", "166"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(LOCAL,String s: java.lang.String)<SUB>7</SUB>>", "41": "<(IDENTIFIER,s,String s = next())<SUB>7</SUB>>", "43": "<(IDENTIFIER,in,next())<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[][] count = new int[m][m])<SUB>9</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[m][m])>", "49": "<(IDENTIFIER,m,new int[m][m])<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; m])<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; m])>", "55": "<(LITERAL,1,1 &lt;&lt; m)<SUB>10</SUB>>", "57": "<(fill,fill(dp, Integer.MAX_VALUE))<SUB>12</SUB>>", "59": "<(IDENTIFIER,dp,fill(dp, Integer.MAX_VALUE))<SUB>12</SUB>>", "61": "<(IDENTIFIER,Integer,fill(dp, Integer.MAX_VALUE))<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>13</SUB>>", "65": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>13</SUB>>", "67": "<(LITERAL,0,dp[0] = 0)<SUB>13</SUB>>", "69": "<(LOCAL,int i: int)<SUB>15</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>15</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "79": "<(LOCAL,int a: int)<SUB>16</SUB>>", "81": "<(IDENTIFIER,a,int a = s.charAt(i) - 'a')<SUB>16</SUB>>", "83": "<(charAt,s.charAt(i))<SUB>16</SUB>>", "85": "<(IDENTIFIER,i,s.charAt(i))<SUB>16</SUB>>", "87": "<(LOCAL,int b: int)<SUB>17</SUB>>", "89": "<(IDENTIFIER,b,int b = s.charAt(i - 1) - 'a')<SUB>17</SUB>>", "91": "<(charAt,s.charAt(i - 1))<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>17</SUB>>", "95": "<(LITERAL,1,i - 1)<SUB>17</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,count[a][b]++)<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,count[a])<SUB>18</SUB>>", "101": "<(IDENTIFIER,a,count[a][b]++)<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,count[b][a]++)<SUB>19</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,count[b])<SUB>19</SUB>>", "107": "<(IDENTIFIER,b,count[b][a]++)<SUB>19</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; (1 &lt;&lt; m)); i++),for (int i = 1; Some(i &lt; (1 &lt;&lt; m)); i++))<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>22</SUB>>", "113": "<(LITERAL,1,int i = 1)<SUB>22</SUB>>", "115": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; m))<SUB>22</SUB>>", "117": "<(LITERAL,1,1 &lt;&lt; m)<SUB>22</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.assignment,int pos = set_bits(i))<SUB>24</SUB>>", "125": "<(set_bits,set_bits(i))<SUB>24</SUB>>", "127": "<(IDENTIFIER,i,set_bits(i))<SUB>24</SUB>>", "129": "<(LOCAL,int j: int)<SUB>26</SUB>>", "131": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.notEquals,(i &gt;&gt; j) != 0)<SUB>26</SUB>>", "135": "<(IDENTIFIER,i,i &gt;&gt; j)<SUB>26</SUB>>", "137": "<(LITERAL,0,(i &gt;&gt; j) != 0)<SUB>26</SUB>>", "139": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "141": "<(CONTROL_STRUCTURE,if (((i &gt;&gt; j) &amp; 1) == 0),if (((i &gt;&gt; j) &amp; 1) == 0))<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.and,(i &gt;&gt; j) &amp; 1)<SUB>28</SUB>>", "145": "<(IDENTIFIER,i,i &gt;&gt; j)<SUB>28</SUB>>", "147": "<(LITERAL,1,(i &gt;&gt; j) &amp; 1)<SUB>28</SUB>>", "149": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>28</SUB>>", "151": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>30</SUB>>", "153": "<(LITERAL,0,int sum = 0)<SUB>30</SUB>>", "155": "<(LOCAL,int mask: int)<SUB>32</SUB>>", "157": "<(&lt;operator&gt;.assignment,int mask = i)<SUB>32</SUB>>", "159": "<(IDENTIFIER,i,int mask = i)<SUB>32</SUB>>", "161": "<(IDENTIFIER,y,int y = 0)<SUB>32</SUB>>", "163": "<(&lt;operator&gt;.lessThan,y &lt; m)<SUB>32</SUB>>", "165": "<(IDENTIFIER,m,y &lt; m)<SUB>32</SUB>>", "167": "<(IDENTIFIER,mask,mask &gt;&gt;= 1)<SUB>32</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,y++)<SUB>32</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "173": "<(&lt;operator&gt;.equals,y == j)<SUB>33</SUB>>", "175": "<(IDENTIFIER,j,y == j)<SUB>33</SUB>>", "177": "<(CONTROL_STRUCTURE,if ((mask &amp; 1) == 1),if ((mask &amp; 1) == 1))<SUB>34</SUB>>", "179": "<(&lt;operator&gt;.and,mask &amp; 1)<SUB>34</SUB>>", "181": "<(LITERAL,1,mask &amp; 1)<SUB>34</SUB>>", "183": "<(&lt;operator&gt;.assignmentPlus,sum += count[j][y])<SUB>34</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,count[j][y])<SUB>34</SUB>>", "187": "<(IDENTIFIER,count,sum += count[j][y])<SUB>34</SUB>>", "189": "<(IDENTIFIER,y,sum += count[j][y])<SUB>34</SUB>>", "191": "<(&lt;operator&gt;.assignmentMinus,sum -= count[j][y])<SUB>35</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,count[j][y])<SUB>35</SUB>>", "195": "<(IDENTIFIER,count,sum -= count[j][y])<SUB>35</SUB>>", "197": "<(IDENTIFIER,y,sum -= count[j][y])<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.assignment,int calc = dp[i - (1 &lt;&lt; j)] + pos * sum)<SUB>38</SUB>>", "201": "<(&lt;operator&gt;.addition,dp[i - (1 &lt;&lt; j)] + pos * sum)<SUB>38</SUB>>", "203": "<(IDENTIFIER,dp,dp[i - (1 &lt;&lt; j)] + pos * sum)<SUB>38</SUB>>", "205": "<(IDENTIFIER,i,i - (1 &lt;&lt; j))<SUB>38</SUB>>", "207": "<(LITERAL,1,1 &lt;&lt; j)<SUB>38</SUB>>", "209": "<(&lt;operator&gt;.multiplication,pos * sum)<SUB>38</SUB>>", "211": "<(IDENTIFIER,sum,pos * sum)<SUB>38</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>40</SUB>>", "215": "<(IDENTIFIER,i,dp[i] = Math.min(dp[i], calc))<SUB>40</SUB>>", "217": "<(IDENTIFIER,Math,Math.min(dp[i], calc))<SUB>40</SUB>>", "219": "<(IDENTIFIER,dp,Math.min(dp[i], calc))<SUB>40</SUB>>", "221": "<(IDENTIFIER,calc,Math.min(dp[i], calc))<SUB>40</SUB>>", "223": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "225": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "227": "<(IDENTIFIER,dp,System.out.println(dp[(1 &lt;&lt; m) - 1]))<SUB>45</SUB>>", "229": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>45</SUB>>", "231": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>45</SUB>>", "233": "<(MODIFIER,PUBLIC)>", "235": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}