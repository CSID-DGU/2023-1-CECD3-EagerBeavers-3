{"edges": [["19", "20"], ["19", "21"], ["19", "154"], ["19", "155"], ["19", "156"], ["21", "22"], ["21", "25"], ["21", "4"], ["21", "37"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "50"], ["21", "54"], ["21", "55"], ["21", "59"], ["21", "76"], ["21", "79"], ["21", "125"], ["21", "126"], ["21", "129"], ["21", "149"], ["21", "152"], ["22", "23"], ["22", "24"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "31"], ["27", "36"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["33", "35"], ["37", "38"], ["37", "39"], ["40", "3"], ["40", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "111"], ["102", "103"], ["102", "110"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["111", "112"], ["111", "119"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["129", "139"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["147", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["22", "30"], ["25", "39"], ["37", "43"], ["40", "47"], ["45", "52"], ["50", "57"], ["55", "61"], ["76", "81"], ["126", "131"], ["149", "152"], ["152", "156"], ["24", "22"], ["39", "37"], ["41", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["61", "64"], ["64", "71"], ["64", "76"], ["67", "64"], ["81", "84"], ["84", "92"], ["84", "126"], ["87", "84"], ["131", "134"], ["134", "142"], ["134", "149"], ["137", "134"], ["28", "35"], ["31", "25"], ["43", "41"], ["70", "67"], ["30", "28"], ["33", "31"], ["71", "74"], ["74", "70"], ["92", "95"], ["95", "104"], ["95", "87"], ["98", "95"], ["141", "147"], ["141", "137"], ["35", "33"], ["142", "141"], ["147", "137"], ["102", "113"], ["102", "98"], ["103", "102"], ["112", "122"], ["119", "98"], ["104", "107"], ["107", "103"], ["113", "116"], ["116", "112"], ["120", "119"], ["122", "120"], ["19", "24"], ["20", "156"], ["22", "156"], ["25", "156"], ["28", "156"], ["31", "156"], ["31", "156"], ["31", "156"], ["25", "156"], ["37", "156"], ["40", "156"], ["40", "156"], ["47", "156"], ["45", "156"], ["45", "156"], ["50", "156"], ["50", "156"], ["55", "156"], ["55", "156"], ["55", "156"], ["76", "156"], ["76", "156"], ["84", "156"], ["84", "156"], ["126", "156"], ["131", "156"], ["134", "156"], ["134", "156"], ["149", "156"], ["149", "156"], ["152", "156"], ["152", "156"], ["141", "156"], ["141", "156"], ["147", "156"], ["137", "156"], ["92", "156"], ["95", "156"], ["95", "156"], ["87", "156"], ["103", "156"], ["103", "156"], ["102", "156"], ["102", "156"], ["112", "156"], ["112", "156"], ["112", "156"], ["119", "156"], ["119", "156"], ["98", "156"], ["70", "156"], ["74", "156"], ["70", "156"], ["70", "156"], ["67", "156"], ["76", "156"], ["19", "20"], ["19", "22"], ["19", "37"], ["47", "45"], ["52", "50"], ["57", "55"], ["19", "126"], ["22", "25"], ["19", "25"], ["28", "25"], ["31", "25"], ["37", "40"], ["19", "40"], ["19", "61"], ["19", "76"], ["50", "76"], ["70", "76"], ["19", "81"], ["19", "131"], ["40", "149"], ["19", "149"], ["126", "149"], ["147", "149"], ["149", "152"], ["19", "152"], ["19", "28"], ["19", "36"], ["19", "47"], ["45", "52"], ["19", "52"], ["19", "57"], ["61", "64"], ["67", "64"], ["19", "64"], ["52", "64"], ["64", "67"], ["19", "67"], ["74", "70"], ["81", "84"], ["87", "84"], ["19", "84"], ["64", "84"], ["95", "84"], ["19", "87"], ["84", "87"], ["131", "134"], ["137", "134"], ["19", "134"], ["134", "137"], ["19", "137"], ["28", "31"], ["19", "31"], ["84", "92"], ["19", "92"], ["47", "74"], ["19", "74"], ["92", "95"], ["98", "95"], ["19", "95"], ["84", "95"], ["95", "98"], ["19", "98"], ["55", "141"], ["19", "141"], ["126", "147"], ["19", "147"], ["103", "102"], ["103", "102"], ["19", "102"], ["76", "112"], ["103", "112"], ["76", "103"], ["112", "103"], ["70", "103"], ["55", "119"], ["64", "64"], ["64", "67"], ["64", "74"], ["64", "71"], ["64", "70"], ["84", "84"], ["84", "95"], ["84", "92"], ["84", "87"], ["134", "141"], ["134", "142"], ["134", "134"], ["134", "137"], ["95", "107"], ["95", "98"], ["95", "102"], ["95", "103"], ["95", "104"], ["95", "95"], ["141", "147"], ["102", "120"], ["102", "113"], ["102", "116"], ["102", "122"], ["102", "119"], ["102", "112"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "29": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "31": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "35": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "4": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "38": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "40": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "43": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "47": "<(nextInt,nextInt())<SUB>4</SUB>>", "49": "<(LOCAL,int[] v: int[])<SUB>5</SUB>>", "51": "<(IDENTIFIER,v,int[] v = new int[n])<SUB>5</SUB>>", "53": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] fv = new int[101])<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[101])>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,v[i])<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,v[i] = nextInt())<SUB>8</SUB>>", "75": "<(IDENTIFIER,this,nextInt())<SUB>8</SUB>>", "77": "<(IDENTIFIER,Arrays,sort(v))<SUB>10</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "83": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "91": "<(LOCAL,int j: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,j,int j = i)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "99": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "101": "<(CONTROL_STRUCTURE,if (v[j] % v[i] == 0),if (v[j] % v[i] == 0))<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.modulo,v[j] % v[i])<SUB>13</SUB>>", "105": "<(IDENTIFIER,v,v[j] % v[i])<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,v[i])<SUB>13</SUB>>", "109": "<(IDENTIFIER,i,v[j] % v[i])<SUB>13</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,v[j])<SUB>14</SUB>>", "115": "<(IDENTIFIER,j,v[j] = v[i])<SUB>14</SUB>>", "117": "<(IDENTIFIER,v,v[j] = v[i])<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,fv[v[j]]++)<SUB>15</SUB>>", "121": "<(IDENTIFIER,fv,fv[v[j]]++)<SUB>15</SUB>>", "123": "<(IDENTIFIER,v,fv[v[j]]++)<SUB>15</SUB>>", "125": "<(LOCAL,int ans: int)<SUB>19</SUB>>", "127": "<(IDENTIFIER,ans,int ans = 0)<SUB>19</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 101); i++),for (int i = 0; Some(i &lt; 101); i++))<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>20</SUB>>", "133": "<(LITERAL,0,int i = 0)<SUB>20</SUB>>", "135": "<(IDENTIFIER,i,i &lt; 101)<SUB>20</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,i++)<SUB>20</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.notEquals,fv[i] != 0)<SUB>21</SUB>>", "143": "<(IDENTIFIER,fv,fv[i] != 0)<SUB>21</SUB>>", "145": "<(LITERAL,0,fv[i] != 0)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>22</SUB>>", "149": "<(println,println(ans))<SUB>25</SUB>>", "151": "<(IDENTIFIER,ans,println(ans))<SUB>25</SUB>>", "153": "<(IDENTIFIER,out,close())<SUB>26</SUB>>", "155": "<(MODIFIER,STATIC)>"}}