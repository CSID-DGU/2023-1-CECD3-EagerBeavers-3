{"edges": [["25", "27"], ["25", "453"], ["25", "454"], ["25", "455"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "32"], ["27", "33"], ["27", "37"], ["27", "38"], ["27", "42"], ["27", "43"], ["27", "47"], ["27", "48"], ["27", "6"], ["27", "52"], ["27", "55"], ["27", "56"], ["27", "79"], ["27", "80"], ["27", "84"], ["27", "85"], ["27", "89"], ["27", "90"], ["27", "94"], ["27", "99"], ["27", "104"], ["27", "109"], ["27", "8"], ["27", "160"], ["27", "163"], ["27", "164"], ["27", "207"], ["27", "361"], ["27", "414"], ["27", "10"], ["27", "419"], ["27", "422"], ["27", "423"], ["27", "442"], ["27", "448"], ["28", "29"], ["28", "30"], ["31", "3"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["55", "5"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "73"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["75", "76"], ["75", "77"], ["80", "81"], ["80", "82"], ["82", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "97"], ["97", "98"], ["99", "100"], ["99", "101"], ["99", "102"], ["102", "103"], ["104", "105"], ["104", "106"], ["104", "107"], ["107", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "130"], ["119", "140"], ["119", "141"], ["119", "150"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["154", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "162"], ["163", "7"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "172"], ["164", "174"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["172", "173"], ["174", "175"], ["174", "176"], ["174", "179"], ["174", "189"], ["174", "199"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "186"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["184", "185"], ["186", "187"], ["187", "188"], ["189", "190"], ["189", "196"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["194", "195"], ["196", "197"], ["197", "198"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "211"], ["208", "209"], ["209", "210"], ["211", "212"], ["211", "213"], ["211", "217"], ["211", "226"], ["213", "214"], ["213", "215"], ["215", "216"], ["217", "218"], ["217", "224"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["222", "223"], ["224", "225"], ["226", "227"], ["226", "233"], ["226", "289"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["233", "235"], ["233", "240"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "247"], ["240", "281"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["245", "246"], ["247", "248"], ["247", "253"], ["247", "258"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "265"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["263", "264"], ["265", "266"], ["265", "267"], ["265", "272"], ["265", "278"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["276", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["282", "283"], ["282", "288"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["289", "290"], ["290", "291"], ["290", "297"], ["290", "353"], ["291", "292"], ["291", "295"], ["292", "293"], ["292", "294"], ["295", "296"], ["297", "298"], ["297", "299"], ["297", "304"], ["299", "300"], ["299", "301"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "311"], ["304", "345"], ["305", "306"], ["305", "309"], ["306", "307"], ["306", "308"], ["309", "310"], ["311", "312"], ["311", "317"], ["311", "322"], ["312", "313"], ["312", "316"], ["313", "314"], ["313", "315"], ["317", "318"], ["317", "321"], ["318", "319"], ["318", "320"], ["322", "323"], ["322", "329"], ["323", "324"], ["323", "327"], ["324", "325"], ["324", "326"], ["327", "328"], ["329", "330"], ["329", "331"], ["329", "336"], ["329", "342"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "335"], ["336", "337"], ["336", "340"], ["337", "338"], ["337", "339"], ["340", "341"], ["342", "343"], ["342", "344"], ["345", "346"], ["346", "347"], ["346", "352"], ["347", "348"], ["347", "351"], ["348", "349"], ["348", "350"], ["353", "354"], ["354", "355"], ["354", "360"], ["355", "356"], ["355", "359"], ["356", "357"], ["356", "358"], ["361", "362"], ["361", "363"], ["361", "366"], ["361", "369"], ["361", "371"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "368"], ["369", "370"], ["371", "372"], ["371", "381"], ["371", "402"], ["371", "407"], ["372", "373"], ["372", "379"], ["373", "374"], ["373", "377"], ["374", "375"], ["374", "376"], ["377", "378"], ["379", "380"], ["381", "382"], ["381", "395"], ["382", "383"], ["382", "389"], ["383", "384"], ["383", "387"], ["384", "385"], ["384", "386"], ["387", "388"], ["389", "390"], ["389", "393"], ["390", "391"], ["390", "392"], ["393", "394"], ["395", "396"], ["395", "401"], ["396", "397"], ["396", "400"], ["397", "398"], ["397", "399"], ["402", "403"], ["402", "406"], ["403", "404"], ["403", "405"], ["407", "408"], ["407", "413"], ["408", "409"], ["408", "410"], ["410", "411"], ["410", "412"], ["414", "415"], ["414", "418"], ["415", "416"], ["415", "417"], ["419", "420"], ["419", "421"], ["422", "9"], ["423", "424"], ["423", "425"], ["423", "428"], ["423", "431"], ["423", "433"], ["425", "426"], ["425", "427"], ["428", "429"], ["428", "430"], ["431", "432"], ["433", "434"], ["433", "439"], ["434", "435"], ["434", "436"], ["436", "437"], ["436", "438"], ["439", "440"], ["439", "441"], ["442", "443"], ["442", "444"], ["444", "445"], ["444", "447"], ["445", "446"], ["448", "449"], ["448", "452"], ["449", "450"], ["449", "451"], ["28", "31"], ["31", "35"], ["33", "40"], ["38", "45"], ["43", "50"], ["48", "54"], ["52", "55"], ["55", "58"], ["80", "87"], ["85", "92"], ["90", "97"], ["94", "102"], ["99", "107"], ["104", "111"], ["160", "163"], ["163", "166"], ["414", "421"], ["419", "422"], ["422", "425"], ["442", "451"], ["448", "455"], ["30", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["54", "52"], ["58", "61"], ["61", "68"], ["61", "82"], ["64", "61"], ["82", "80"], ["87", "85"], ["92", "90"], ["97", "94"], ["102", "99"], ["107", "104"], ["111", "114"], ["114", "127"], ["114", "162"], ["117", "114"], ["162", "160"], ["166", "169"], ["169", "176"], ["169", "209"], ["172", "169"], ["208", "215"], ["208", "363"], ["363", "366"], ["366", "374"], ["366", "417"], ["369", "366"], ["415", "414"], ["421", "419"], ["425", "428"], ["428", "436"], ["428", "445"], ["431", "428"], ["444", "442"], ["449", "448"], ["67", "75"], ["73", "64"], ["121", "131"], ["141", "151"], ["176", "181"], ["209", "208"], ["213", "219"], ["402", "410"], ["407", "369"], ["417", "415"], ["434", "439"], ["439", "431"], ["445", "444"], ["451", "449"], ["68", "71"], ["71", "67"], ["75", "73"], ["123", "121"], ["131", "136"], ["131", "147"], ["143", "141"], ["151", "156"], ["151", "117"], ["180", "187"], ["180", "191"], ["190", "197"], ["190", "200"], ["200", "204"], ["200", "172"], ["215", "213"], ["218", "209"], ["218", "228"], ["227", "237"], ["227", "292"], ["373", "369"], ["373", "384"], ["382", "399"], ["382", "403"], ["403", "402"], ["408", "407"], ["436", "434"], ["125", "123"], ["135", "147"], ["145", "143"], ["155", "117"], ["181", "184"], ["184", "180"], ["187", "191"], ["191", "194"], ["194", "190"], ["197", "200"], ["204", "172"], ["219", "222"], ["222", "218"], ["228", "231"], ["231", "227"], ["235", "242"], ["374", "377"], ["377", "373"], ["383", "382"], ["383", "390"], ["389", "382"], ["396", "401"], ["401", "455"], ["410", "408"], ["127", "125"], ["136", "135"], ["147", "145"], ["156", "155"], ["237", "235"], ["241", "249"], ["241", "286"], ["291", "301"], ["291", "358"], ["384", "387"], ["387", "383"], ["390", "393"], ["393", "389"], ["397", "396"], ["242", "245"], ["245", "241"], ["248", "254"], ["253", "260"], ["292", "295"], ["295", "291"], ["299", "306"], ["399", "397"], ["249", "248"], ["254", "253"], ["259", "209"], ["259", "269"], ["283", "288"], ["288", "455"], ["301", "299"], ["305", "313"], ["305", "350"], ["355", "360"], ["360", "455"], ["260", "263"], ["263", "259"], ["267", "273"], ["272", "278"], ["278", "209"], ["284", "283"], ["306", "309"], ["309", "305"], ["312", "318"], ["317", "324"], ["356", "355"], ["269", "267"], ["273", "276"], ["276", "272"], ["286", "284"], ["313", "312"], ["318", "317"], ["323", "209"], ["323", "333"], ["347", "352"], ["352", "455"], ["358", "356"], ["324", "327"], ["327", "323"], ["331", "337"], ["336", "342"], ["342", "209"], ["348", "347"], ["333", "331"], ["337", "340"], ["340", "336"], ["350", "348"], ["25", "30"], ["360", "455"], ["352", "455"], ["401", "455"], ["288", "455"], ["26", "455"], ["28", "455"], ["31", "455"], ["33", "455"], ["38", "455"], ["38", "455"], ["43", "455"], ["45", "455"], ["43", "455"], ["43", "455"], ["48", "455"], ["48", "455"], ["52", "455"], ["55", "455"], ["55", "455"], ["80", "455"], ["85", "455"], ["90", "455"], ["90", "455"], ["94", "455"], ["94", "455"], ["99", "455"], ["99", "455"], ["104", "455"], ["104", "455"], ["104", "455"], ["160", "455"], ["163", "455"], ["166", "455"], ["169", "455"], ["169", "455"], ["169", "455"], ["208", "455"], ["208", "455"], ["213", "455"], ["215", "455"], ["213", "455"], ["213", "455"], ["218", "455"], ["218", "455"], ["227", "455"], ["291", "455"], ["299", "455"], ["299", "455"], ["312", "455"], ["317", "455"], ["323", "455"], ["323", "455"], ["331", "455"], ["331", "455"], ["336", "455"], ["336", "455"], ["342", "455"], ["342", "455"], ["235", "455"], ["235", "455"], ["235", "455"], ["241", "455"], ["241", "455"], ["241", "455"], ["283", "455"], ["248", "455"], ["253", "455"], ["259", "455"], ["259", "455"], ["267", "455"], ["267", "455"], ["272", "455"], ["272", "455"], ["278", "455"], ["278", "455"], ["176", "455"], ["180", "455"], ["180", "455"], ["187", "455"], ["190", "455"], ["190", "455"], ["197", "455"], ["200", "455"], ["200", "455"], ["204", "455"], ["172", "455"], ["125", "455"], ["123", "455"], ["121", "455"], ["121", "455"], ["131", "455"], ["131", "455"], ["135", "455"], ["135", "455"], ["135", "455"], ["143", "455"], ["145", "455"], ["145", "455"], ["143", "455"], ["141", "455"], ["141", "455"], ["151", "455"], ["151", "455"], ["155", "455"], ["155", "455"], ["155", "455"], ["117", "455"], ["71", "455"], ["67", "455"], ["67", "455"], ["73", "455"], ["73", "455"], ["73", "455"], ["64", "455"], ["25", "26"], ["25", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["25", "52"], ["82", "80"], ["87", "85"], ["92", "90"], ["25", "160"], ["25", "419"], ["28", "31"], ["25", "31"], ["52", "55"], ["25", "55"], ["25", "58"], ["25", "94"], ["80", "94"], ["97", "94"], ["94", "99"], ["25", "99"], ["85", "99"], ["102", "99"], ["99", "104"], ["25", "104"], ["90", "104"], ["107", "104"], ["25", "111"], ["160", "163"], ["25", "163"], ["25", "166"], ["25", "363"], ["25", "414"], ["419", "422"], ["25", "422"], ["25", "425"], ["445", "442"], ["25", "442"], ["444", "442"], ["444", "442"], ["414", "448"], ["442", "448"], ["25", "448"], ["31", "35"], ["25", "35"], ["35", "40"], ["25", "40"], ["40", "45"], ["25", "45"], ["33", "50"], ["25", "50"], ["58", "61"], ["64", "61"], ["25", "61"], ["50", "61"], ["73", "64"], ["25", "64"], ["71", "67"], ["61", "82"], ["25", "82"], ["82", "87"], ["25", "87"], ["87", "92"], ["25", "92"], ["25", "97"], ["25", "102"], ["25", "107"], ["111", "114"], ["117", "114"], ["25", "114"], ["92", "114"], ["114", "117"], ["25", "117"], ["123", "121"], ["123", "121"], ["143", "141"], ["143", "141"], ["166", "169"], ["172", "169"], ["25", "169"], ["114", "169"], ["169", "172"], ["204", "172"], ["25", "172"], ["25", "176"], ["209", "208"], ["215", "213"], ["363", "366"], ["369", "366"], ["25", "366"], ["169", "366"], ["366", "369"], ["25", "369"], ["25", "402"], ["25", "407"], ["425", "428"], ["431", "428"], ["25", "428"], ["366", "428"], ["428", "431"], ["25", "431"], ["445", "444"], ["25", "444"], ["55", "73"], ["25", "73"], ["48", "73"], ["67", "73"], ["61", "73"], ["163", "209"], ["215", "209"], ["342", "209"], ["278", "209"], ["204", "209"], ["25", "209"], ["422", "434"], ["439", "434"], ["25", "434"], ["94", "434"], ["373", "434"], ["402", "434"], ["434", "439"], ["25", "439"], ["422", "445"], ["439", "445"], ["25", "445"], ["45", "71"], ["25", "71"], ["55", "123"], ["143", "123"], ["73", "123"], ["25", "123"], ["125", "123"], ["125", "123"], ["121", "131"], ["25", "131"], ["131", "135"], ["25", "135"], ["123", "143"], ["25", "143"], ["145", "143"], ["145", "143"], ["141", "151"], ["25", "151"], ["151", "155"], ["25", "155"], ["99", "180"], ["135", "180"], ["184", "180"], ["104", "190"], ["155", "190"], ["194", "190"], ["176", "200"], ["187", "200"], ["197", "200"], ["25", "200"], ["209", "215"], ["25", "215"], ["94", "218"], ["312", "218"], ["248", "218"], ["222", "218"], ["99", "227"], ["231", "227"], ["99", "235"], ["227", "235"], ["94", "373"], ["402", "373"], ["377", "373"], ["383", "382"], ["383", "382"], ["389", "382"], ["389", "382"], ["25", "401"], ["38", "125"], ["25", "125"], ["48", "125"], ["145", "125"], ["73", "125"], ["43", "145"], ["25", "145"], ["48", "145"], ["125", "145"], ["25", "184"], ["176", "187"], ["25", "187"], ["25", "194"], ["176", "197"], ["187", "197"], ["25", "197"], ["163", "204"], ["25", "204"], ["169", "204"], ["25", "222"], ["25", "231"], ["25", "377"], ["99", "383"], ["180", "383"], ["135", "383"], ["387", "383"], ["104", "389"], ["190", "389"], ["155", "389"], ["393", "389"], ["25", "396"], ["94", "241"], ["317", "241"], ["253", "241"], ["245", "241"], ["25", "248"], ["25", "253"], ["104", "291"], ["295", "291"], ["104", "299"], ["291", "299"], ["25", "387"], ["25", "393"], ["25", "245"], ["25", "288"], ["25", "295"], ["25", "360"], ["104", "259"], ["263", "259"], ["104", "267"], ["259", "267"], ["276", "272"], ["25", "283"], ["94", "305"], ["317", "305"], ["253", "305"], ["309", "305"], ["25", "312"], ["25", "317"], ["25", "355"], ["25", "263"], ["215", "278"], ["25", "278"], ["267", "278"], ["25", "309"], ["25", "352"], ["25", "276"], ["99", "323"], ["327", "323"], ["99", "331"], ["323", "331"], ["340", "336"], ["25", "347"], ["25", "327"], ["215", "342"], ["25", "342"], ["331", "342"], ["25", "340"], ["61", "68"], ["61", "61"], ["61", "71"], ["61", "73"], ["61", "64"], ["61", "75"], ["61", "67"], ["114", "114"], ["114", "127"], ["114", "141"], ["114", "123"], ["114", "147"], ["114", "117"], ["114", "145"], ["114", "131"], ["114", "151"], ["114", "121"], ["114", "143"], ["114", "125"], ["169", "181"], ["169", "190"], ["169", "184"], ["169", "194"], ["169", "180"], ["169", "200"], ["169", "176"], ["169", "172"], ["169", "169"], ["169", "191"], ["208", "215"], ["208", "213"], ["208", "222"], ["208", "366"], ["208", "363"], ["208", "218"], ["208", "219"], ["366", "428"], ["366", "374"], ["366", "414"], ["366", "442"], ["366", "448"], ["366", "425"], ["366", "415"], ["366", "377"], ["366", "373"], ["366", "417"], ["366", "419"], ["366", "449"], ["366", "421"], ["366", "422"], ["366", "451"], ["366", "444"], ["366", "445"], ["428", "428"], ["428", "434"], ["428", "439"], ["428", "431"], ["428", "436"], ["131", "136"], ["131", "135"], ["151", "155"], ["151", "156"], ["180", "187"], ["190", "197"], ["200", "204"], ["218", "209"], ["218", "228"], ["218", "208"], ["218", "227"], ["218", "231"], ["227", "292"], ["227", "242"], ["227", "237"], ["227", "241"], ["227", "245"], ["227", "291"], ["227", "295"], ["227", "235"], ["373", "384"], ["373", "383"], ["373", "382"], ["373", "366"], ["373", "387"], ["373", "369"], ["382", "401"], ["382", "403"], ["382", "396"], ["382", "408"], ["382", "402"], ["382", "397"], ["382", "410"], ["382", "366"], ["382", "369"], ["382", "399"], ["382", "407"], ["383", "389"], ["383", "390"], ["383", "393"], ["241", "209"], ["241", "283"], ["241", "208"], ["241", "288"], ["241", "249"], ["241", "260"], ["241", "253"], ["241", "254"], ["241", "284"], ["241", "259"], ["241", "286"], ["241", "263"], ["241", "248"], ["291", "358"], ["291", "356"], ["291", "306"], ["291", "355"], ["291", "305"], ["291", "360"], ["291", "309"], ["291", "301"], ["291", "299"], ["259", "272"], ["259", "276"], ["259", "278"], ["259", "269"], ["259", "273"], ["259", "267"], ["305", "209"], ["305", "317"], ["305", "208"], ["305", "324"], ["305", "348"], ["305", "347"], ["305", "323"], ["305", "318"], ["305", "352"], ["305", "327"], ["305", "313"], ["305", "350"], ["305", "312"], ["323", "336"], ["323", "340"], ["323", "342"], ["323", "337"], ["323", "333"], ["323", "331"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new MyScanner())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new MyScanner())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>5</SUB>>", "35": "<(nextInt,nextInt())<SUB>5</SUB>>", "37": "<(LOCAL,int a: int)<SUB>6</SUB>>", "39": "<(IDENTIFIER,a,int a = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>7</SUB>>", "45": "<(nextInt,nextInt())<SUB>7</SUB>>", "47": "<(LOCAL,int[] vals: int[])<SUB>9</SUB>>", "49": "<(IDENTIFIER,vals,int[] vals = new int[N])<SUB>9</SUB>>", "51": "<(IDENTIFIER,N,new int[N])<SUB>9</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY val2Ind = new HashMap&lt;Integer, Integer&gt;())<SUB>10</SUB>>", "54": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Integer&gt;())<SUB>10</SUB>>", "5": "<(IDENTIFIER,val2Ind,new HashMap&lt;Integer, Integer&gt;())<SUB>10</SUB>>", "57": "<(LOCAL,int i: int)<SUB>11</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>11</SUB>>", "63": "<(IDENTIFIER,N,i &lt; N)<SUB>11</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.assignment,vals[i] = nextInt())<SUB>12</SUB>>", "69": "<(IDENTIFIER,vals,vals[i] = nextInt())<SUB>12</SUB>>", "71": "<(nextInt,nextInt())<SUB>12</SUB>>", "73": "<(put,put(vals[i], i))<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,vals[i])<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,put(vals[i], i))<SUB>13</SUB>>", "79": "<(LOCAL,int[] setAssignment: int[])<SUB>16</SUB>>", "81": "<(IDENTIFIER,setAssignment,int[] setAssignment = new int[N])<SUB>16</SUB>>", "83": "<(IDENTIFIER,N,new int[N])<SUB>16</SUB>>", "85": "<(&lt;operator&gt;.assignment,int[] friendA = new int[N])<SUB>17</SUB>>", "87": "<(&lt;operator&gt;.alloc,new int[N])>", "89": "<(LOCAL,int[] friendB: int[])<SUB>18</SUB>>", "91": "<(IDENTIFIER,friendB,int[] friendB = new int[N])<SUB>18</SUB>>", "93": "<(IDENTIFIER,N,new int[N])<SUB>18</SUB>>", "95": "<(IDENTIFIER,Arrays,fill(setAssignment, -1))<SUB>19</SUB>>", "97": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "99": "<(fill,fill(friendA, -1))<SUB>20</SUB>>", "101": "<(IDENTIFIER,friendA,fill(friendA, -1))<SUB>20</SUB>>", "103": "<(LITERAL,1,-1)<SUB>20</SUB>>", "105": "<(IDENTIFIER,Arrays,fill(friendB, -1))<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.minus,-1)<SUB>21</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>24</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "115": "<(IDENTIFIER,i,i &lt; N)<SUB>24</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "121": "<(&lt;operator&gt;.assignment,Integer friendAInd = get(a - vals[i]))<SUB>25</SUB>>", "123": "<(get,get(a - vals[i]))<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.subtraction,a - vals[i])<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,vals[i])<SUB>25</SUB>>", "129": "<(IDENTIFIER,i,a - vals[i])<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.notEquals,friendAInd != null)<SUB>26</SUB>>", "133": "<(LITERAL,null,friendAInd != null)<SUB>26</SUB>>", "135": "<(&lt;operator&gt;.assignment,friendA[i] = friendAInd)<SUB>27</SUB>>", "137": "<(IDENTIFIER,friendA,friendA[i] = friendAInd)<SUB>27</SUB>>", "139": "<(IDENTIFIER,friendAInd,friendA[i] = friendAInd)<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.assignment,Integer friendBInd = get(b - vals[i]))<SUB>30</SUB>>", "143": "<(get,get(b - vals[i]))<SUB>30</SUB>>", "145": "<(&lt;operator&gt;.subtraction,b - vals[i])<SUB>30</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,vals[i])<SUB>30</SUB>>", "149": "<(IDENTIFIER,i,b - vals[i])<SUB>30</SUB>>", "151": "<(&lt;operator&gt;.notEquals,friendBInd != null)<SUB>31</SUB>>", "153": "<(LITERAL,null,friendBInd != null)<SUB>31</SUB>>", "155": "<(&lt;operator&gt;.assignment,friendB[i] = friendBInd)<SUB>32</SUB>>", "157": "<(IDENTIFIER,friendB,friendB[i] = friendBInd)<SUB>32</SUB>>", "159": "<(IDENTIFIER,friendBInd,friendB[i] = friendBInd)<SUB>32</SUB>>", "160": "<(&lt;operator&gt;.assignment,ANY toProc = new ArrayDeque&lt;Integer&gt;())<SUB>37</SUB>>", "162": "<(&lt;operator&gt;.alloc,new ArrayDeque&lt;Integer&gt;())<SUB>37</SUB>>", "7": "<(IDENTIFIER,toProc,new ArrayDeque&lt;Integer&gt;())<SUB>37</SUB>>", "165": "<(LOCAL,int i: int)<SUB>38</SUB>>", "167": "<(IDENTIFIER,i,int i = 0)<SUB>38</SUB>>", "169": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>38</SUB>>", "171": "<(IDENTIFIER,N,i &lt; N)<SUB>38</SUB>>", "173": "<(IDENTIFIER,i,i++)<SUB>38</SUB>>", "175": "<(LOCAL,int friends: int)<SUB>39</SUB>>", "177": "<(IDENTIFIER,friends,int friends = 0)<SUB>39</SUB>>", "179": "<(CONTROL_STRUCTURE,if (friendA[i] != -1),if (friendA[i] != -1))<SUB>40</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,friendA[i])<SUB>40</SUB>>", "183": "<(IDENTIFIER,i,friendA[i] != -1)<SUB>40</SUB>>", "185": "<(LITERAL,1,-1)<SUB>40</SUB>>", "187": "<(&lt;operator&gt;.postIncrement,friends++)<SUB>41</SUB>>", "189": "<(CONTROL_STRUCTURE,if (friendB[i] != -1),if (friendB[i] != -1))<SUB>43</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,friendB[i])<SUB>43</SUB>>", "193": "<(IDENTIFIER,i,friendB[i] != -1)<SUB>43</SUB>>", "195": "<(LITERAL,1,-1)<SUB>43</SUB>>", "197": "<(&lt;operator&gt;.postIncrement,friends++)<SUB>44</SUB>>", "199": "<(CONTROL_STRUCTURE,if (friends == 1),if (friends == 1))<SUB>46</SUB>>", "201": "<(IDENTIFIER,friends,friends == 1)<SUB>46</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>>", "205": "<(IDENTIFIER,toProc,add(i))<SUB>47</SUB>>", "207": "<(CONTROL_STRUCTURE,while (!toProc.isEmpty()),while (!toProc.isEmpty()))<SUB>52</SUB>>", "209": "<(isEmpty,isEmpty())<SUB>52</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "213": "<(&lt;operator&gt;.assignment,int ind = poll())<SUB>54</SUB>>", "215": "<(poll,poll())<SUB>54</SUB>>", "217": "<(CONTROL_STRUCTURE,if (setAssignment[ind] != -1),if (setAssignment[ind] != -1))<SUB>56</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,setAssignment[ind])<SUB>56</SUB>>", "221": "<(IDENTIFIER,ind,setAssignment[ind] != -1)<SUB>56</SUB>>", "223": "<(LITERAL,1,-1)<SUB>56</SUB>>", "225": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>57</SUB>>", "227": "<(&lt;operator&gt;.notEquals,friendA[ind] != -1)<SUB>60</SUB>>", "229": "<(IDENTIFIER,friendA,friendA[ind] != -1)<SUB>60</SUB>>", "231": "<(&lt;operator&gt;.minus,-1)<SUB>60</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>>", "235": "<(&lt;operator&gt;.assignment,int other = friendA[ind])<SUB>62</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,friendA[ind])<SUB>62</SUB>>", "239": "<(IDENTIFIER,ind,int other = friendA[ind])<SUB>62</SUB>>", "241": "<(&lt;operator&gt;.equals,setAssignment[other] == -1)<SUB>63</SUB>>", "243": "<(IDENTIFIER,setAssignment,setAssignment[other] == -1)<SUB>63</SUB>>", "245": "<(&lt;operator&gt;.minus,-1)<SUB>63</SUB>>", "247": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,setAssignment[ind])<SUB>64</SUB>>", "251": "<(IDENTIFIER,ind,setAssignment[ind] = 0)<SUB>64</SUB>>", "253": "<(&lt;operator&gt;.assignment,setAssignment[other] = 0)<SUB>65</SUB>>", "255": "<(IDENTIFIER,setAssignment,setAssignment[other] = 0)<SUB>65</SUB>>", "257": "<(LITERAL,0,setAssignment[other] = 0)<SUB>65</SUB>>", "259": "<(&lt;operator&gt;.notEquals,friendB[other] != -1)<SUB>67</SUB>>", "261": "<(IDENTIFIER,friendB,friendB[other] != -1)<SUB>67</SUB>>", "263": "<(&lt;operator&gt;.minus,-1)<SUB>67</SUB>>", "265": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>67</SUB>>", "267": "<(&lt;operator&gt;.assignment,int otherOther = friendB[other])<SUB>68</SUB>>", "269": "<(&lt;operator&gt;.indexAccess,friendB[other])<SUB>68</SUB>>", "271": "<(IDENTIFIER,other,int otherOther = friendB[other])<SUB>68</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,friendB[otherOther])<SUB>69</SUB>>", "275": "<(IDENTIFIER,otherOther,friendB[otherOther] = -1)<SUB>69</SUB>>", "277": "<(LITERAL,1,-1)<SUB>69</SUB>>", "279": "<(IDENTIFIER,toProc,add(otherOther))<SUB>70</SUB>>", "281": "<(CONTROL_STRUCTURE,else,else)<SUB>72</SUB>>", "283": "<(println,System.out.println(&quot;NO&quot;))<SUB>73</SUB>>", "285": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>73</SUB>>", "287": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>73</SUB>>", "289": "<(CONTROL_STRUCTURE,else,else)<SUB>79</SUB>>", "291": "<(&lt;operator&gt;.notEquals,friendB[ind] != -1)<SUB>79</SUB>>", "293": "<(IDENTIFIER,friendB,friendB[ind] != -1)<SUB>79</SUB>>", "295": "<(&lt;operator&gt;.minus,-1)<SUB>79</SUB>>", "297": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>79</SUB>>", "299": "<(&lt;operator&gt;.assignment,int other = friendB[ind])<SUB>81</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,friendB[ind])<SUB>81</SUB>>", "303": "<(IDENTIFIER,ind,int other = friendB[ind])<SUB>81</SUB>>", "305": "<(&lt;operator&gt;.equals,setAssignment[other] == -1)<SUB>82</SUB>>", "307": "<(IDENTIFIER,setAssignment,setAssignment[other] == -1)<SUB>82</SUB>>", "309": "<(&lt;operator&gt;.minus,-1)<SUB>82</SUB>>", "311": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,setAssignment[ind])<SUB>83</SUB>>", "315": "<(IDENTIFIER,ind,setAssignment[ind] = 1)<SUB>83</SUB>>", "317": "<(&lt;operator&gt;.assignment,setAssignment[other] = 1)<SUB>84</SUB>>", "319": "<(IDENTIFIER,setAssignment,setAssignment[other] = 1)<SUB>84</SUB>>", "321": "<(LITERAL,1,setAssignment[other] = 1)<SUB>84</SUB>>", "323": "<(&lt;operator&gt;.notEquals,friendA[other] != -1)<SUB>86</SUB>>", "325": "<(IDENTIFIER,friendA,friendA[other] != -1)<SUB>86</SUB>>", "327": "<(&lt;operator&gt;.minus,-1)<SUB>86</SUB>>", "329": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>86</SUB>>", "331": "<(&lt;operator&gt;.assignment,int otherOther = friendA[other])<SUB>87</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,friendA[other])<SUB>87</SUB>>", "335": "<(IDENTIFIER,other,int otherOther = friendA[other])<SUB>87</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,friendA[otherOther])<SUB>88</SUB>>", "339": "<(IDENTIFIER,otherOther,friendA[otherOther] = -1)<SUB>88</SUB>>", "341": "<(LITERAL,1,-1)<SUB>88</SUB>>", "343": "<(IDENTIFIER,toProc,add(otherOther))<SUB>89</SUB>>", "345": "<(CONTROL_STRUCTURE,else,else)<SUB>91</SUB>>", "347": "<(println,System.out.println(&quot;NO&quot;))<SUB>92</SUB>>", "349": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>92</SUB>>", "351": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>92</SUB>>", "353": "<(CONTROL_STRUCTURE,else,else)<SUB>98</SUB>>", "355": "<(println,System.out.println(&quot;NO&quot;))<SUB>99</SUB>>", "357": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>99</SUB>>", "359": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>99</SUB>>", "361": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>107</SUB>>", "363": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>107</SUB>>", "365": "<(LITERAL,0,int i = 0)<SUB>107</SUB>>", "367": "<(IDENTIFIER,i,i &lt; N)<SUB>107</SUB>>", "369": "<(&lt;operator&gt;.postIncrement,i++)<SUB>107</SUB>>", "371": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>107</SUB>>", "373": "<(&lt;operator&gt;.notEquals,setAssignment[i] != -1)<SUB>109</SUB>>", "375": "<(IDENTIFIER,setAssignment,setAssignment[i] != -1)<SUB>109</SUB>>", "377": "<(&lt;operator&gt;.minus,-1)<SUB>109</SUB>>", "379": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>109</SUB>>", "381": "<(CONTROL_STRUCTURE,if (friendA[i] == -1 &amp;&amp; friendB[i] == -1),if (friendA[i] == -1 &amp;&amp; friendB[i] == -1))<SUB>113</SUB>>", "383": "<(&lt;operator&gt;.equals,friendA[i] == -1)<SUB>113</SUB>>", "385": "<(IDENTIFIER,friendA,friendA[i] == -1)<SUB>113</SUB>>", "387": "<(&lt;operator&gt;.minus,-1)<SUB>113</SUB>>", "389": "<(&lt;operator&gt;.equals,friendB[i] == -1)<SUB>113</SUB>>", "391": "<(IDENTIFIER,friendB,friendB[i] == -1)<SUB>113</SUB>>", "393": "<(&lt;operator&gt;.minus,-1)<SUB>113</SUB>>", "395": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>113</SUB>>", "397": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>114</SUB>>", "399": "<(FIELD_IDENTIFIER,out,out)<SUB>114</SUB>>", "401": "<(RETURN,return;,return;)<SUB>115</SUB>>", "403": "<(&lt;operator&gt;.indexAccess,setAssignment[i])<SUB>119</SUB>>", "405": "<(IDENTIFIER,i,setAssignment[i] = 0)<SUB>119</SUB>>", "407": "<(&lt;operator&gt;.assignment,setAssignment[friendA[i]] = 0)<SUB>120</SUB>>", "409": "<(IDENTIFIER,setAssignment,setAssignment[friendA[i]] = 0)<SUB>120</SUB>>", "411": "<(IDENTIFIER,friendA,setAssignment[friendA[i]] = 0)<SUB>120</SUB>>", "413": "<(LITERAL,0,setAssignment[friendA[i]] = 0)<SUB>120</SUB>>", "415": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>124</SUB>>", "417": "<(FIELD_IDENTIFIER,out,out)<SUB>124</SUB>>", "10": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>125</SUB>>", "420": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>125</SUB>>", "422": "<(&lt;init&gt;,new StringBuilder())<SUB>125</SUB>>", "423": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>126</SUB>>", "425": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>126</SUB>>", "427": "<(LITERAL,0,int i = 0)<SUB>126</SUB>>", "429": "<(IDENTIFIER,i,i &lt; N)<SUB>126</SUB>>", "431": "<(&lt;operator&gt;.postIncrement,i++)<SUB>126</SUB>>", "433": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>126</SUB>>", "435": "<(IDENTIFIER,sb,sb.append(setAssignment[i]))<SUB>127</SUB>>", "437": "<(IDENTIFIER,setAssignment,sb.append(setAssignment[i]))<SUB>127</SUB>>", "439": "<(append,sb.append(&quot; &quot;))<SUB>128</SUB>>", "441": "<(LITERAL,&quot; &quot;,sb.append(&quot; &quot;))<SUB>128</SUB>>", "443": "<(IDENTIFIER,sb,sb.deleteCharAt(sb.length() - 1))<SUB>130</SUB>>", "445": "<(length,sb.length())<SUB>130</SUB>>", "447": "<(LITERAL,1,sb.length() - 1)<SUB>130</SUB>>", "449": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>131</SUB>>", "451": "<(FIELD_IDENTIFIER,out,out)<SUB>131</SUB>>", "453": "<(MODIFIER,PUBLIC)>", "455": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}