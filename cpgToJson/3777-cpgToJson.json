{"edges": [["21", "22"], ["21", "23"], ["21", "436"], ["21", "437"], ["21", "438"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "53"], ["23", "54"], ["23", "61"], ["23", "93"], ["23", "94"], ["23", "101"], ["23", "133"], ["23", "173"], ["23", "174"], ["23", "182"], ["23", "399"], ["23", "434"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "82"], ["72", "84"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["91", "92"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "111"], ["101", "113"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "170"], ["139", "172"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "168"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "159"], ["151", "161"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "167"], ["165", "166"], ["168", "169"], ["170", "171"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "180"], ["176", "181"], ["177", "178"], ["177", "179"], ["182", "183"], ["182", "184"], ["182", "187"], ["182", "190"], ["182", "193"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["193", "194"], ["194", "195"], ["194", "196"], ["194", "199"], ["194", "202"], ["194", "204"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["205", "206"], ["205", "207"], ["205", "210"], ["205", "213"], ["205", "215"], ["207", "208"], ["207", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["215", "216"], ["215", "227"], ["215", "269"], ["215", "313"], ["215", "355"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "232"], ["229", "230"], ["229", "231"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "243"], ["241", "250"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["250", "251"], ["250", "258"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "268"], ["259", "260"], ["259", "265"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["269", "270"], ["269", "275"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "283"], ["276", "277"], ["276", "282"], ["277", "278"], ["277", "281"], ["278", "279"], ["278", "280"], ["283", "284"], ["283", "285"], ["283", "292"], ["285", "286"], ["285", "291"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["292", "293"], ["292", "302"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "301"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["302", "303"], ["302", "312"], ["303", "304"], ["303", "309"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "308"], ["309", "310"], ["309", "311"], ["313", "314"], ["313", "319"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["319", "320"], ["319", "327"], ["320", "321"], ["320", "326"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["327", "328"], ["327", "329"], ["327", "336"], ["329", "330"], ["329", "335"], ["330", "331"], ["330", "334"], ["331", "332"], ["331", "333"], ["336", "337"], ["336", "344"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "343"], ["340", "341"], ["340", "342"], ["344", "345"], ["344", "352"], ["345", "346"], ["345", "351"], ["346", "347"], ["346", "348"], ["348", "349"], ["348", "350"], ["352", "353"], ["352", "354"], ["355", "356"], ["355", "361"], ["356", "357"], ["356", "360"], ["357", "358"], ["357", "359"], ["361", "362"], ["361", "369"], ["362", "363"], ["362", "368"], ["363", "364"], ["363", "367"], ["364", "365"], ["364", "366"], ["369", "370"], ["369", "371"], ["369", "378"], ["371", "372"], ["371", "377"], ["372", "373"], ["372", "376"], ["373", "374"], ["373", "375"], ["378", "379"], ["378", "388"], ["379", "380"], ["379", "381"], ["381", "382"], ["381", "385"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "387"], ["388", "389"], ["388", "396"], ["389", "390"], ["389", "395"], ["390", "391"], ["390", "392"], ["392", "393"], ["392", "394"], ["396", "397"], ["396", "398"], ["399", "400"], ["399", "401"], ["399", "404"], ["399", "407"], ["399", "409"], ["401", "402"], ["401", "403"], ["404", "405"], ["404", "406"], ["407", "408"], ["409", "410"], ["409", "432"], ["410", "411"], ["410", "412"], ["410", "415"], ["410", "418"], ["410", "420"], ["412", "413"], ["412", "414"], ["415", "416"], ["415", "417"], ["418", "419"], ["420", "421"], ["421", "422"], ["421", "423"], ["423", "424"], ["423", "431"], ["424", "425"], ["424", "430"], ["425", "426"], ["425", "429"], ["426", "427"], ["426", "428"], ["432", "433"], ["434", "435"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "58"], ["54", "63"], ["94", "103"], ["174", "184"], ["434", "438"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["63", "66"], ["66", "74"], ["66", "97"], ["69", "66"], ["96", "94"], ["103", "108"], ["106", "116"], ["106", "135"], ["111", "108"], ["134", "142"], ["134", "177"], ["176", "174"], ["184", "187"], ["187", "196"], ["187", "401"], ["190", "187"], ["401", "404"], ["404", "412"], ["404", "434"], ["407", "404"], ["30", "28"], ["37", "35"], ["58", "56"], ["97", "96"], ["108", "106"], ["135", "134"], ["170", "172"], ["172", "438"], ["177", "176"], ["432", "407"], ["74", "79"], ["77", "87"], ["77", "69"], ["82", "79"], ["116", "119"], ["119", "127"], ["119", "111"], ["122", "119"], ["142", "145"], ["145", "153"], ["145", "170"], ["148", "145"], ["196", "199"], ["199", "207"], ["199", "190"], ["202", "199"], ["412", "415"], ["415", "426"], ["415", "432"], ["418", "415"], ["79", "77"], ["85", "82"], ["125", "122"], ["168", "148"], ["421", "418"], ["86", "91"], ["91", "85"], ["126", "131"], ["131", "125"], ["153", "156"], ["156", "165"], ["156", "168"], ["159", "156"], ["207", "210"], ["210", "219"], ["210", "202"], ["213", "210"], ["423", "421"], ["87", "86"], ["127", "126"], ["162", "159"], ["216", "229"], ["424", "423"], ["164", "162"], ["217", "225"], ["224", "216"], ["228", "236"], ["228", "271"], ["233", "271"], ["270", "278"], ["270", "315"], ["275", "315"], ["314", "322"], ["314", "357"], ["319", "357"], ["356", "364"], ["356", "213"], ["361", "213"], ["425", "424"], ["165", "164"], ["218", "217"], ["225", "224"], ["229", "228"], ["234", "245"], ["241", "233"], ["271", "270"], ["276", "287"], ["283", "275"], ["315", "314"], ["320", "331"], ["327", "319"], ["357", "356"], ["362", "373"], ["369", "361"], ["426", "425"], ["219", "218"], ["235", "234"], ["243", "254"], ["250", "241"], ["277", "276"], ["285", "298"], ["292", "283"], ["321", "320"], ["329", "340"], ["336", "327"], ["363", "362"], ["371", "382"], ["378", "369"], ["236", "235"], ["244", "243"], ["251", "262"], ["258", "250"], ["278", "277"], ["286", "285"], ["293", "306"], ["302", "292"], ["322", "321"], ["330", "329"], ["337", "348"], ["344", "336"], ["364", "363"], ["372", "371"], ["379", "392"], ["388", "378"], ["245", "244"], ["253", "251"], ["259", "258"], ["287", "286"], ["295", "293"], ["303", "302"], ["331", "330"], ["339", "337"], ["345", "352"], ["352", "344"], ["373", "372"], ["381", "379"], ["389", "396"], ["396", "388"], ["254", "253"], ["260", "265"], ["265", "259"], ["296", "295"], ["304", "309"], ["309", "303"], ["340", "339"], ["346", "345"], ["382", "385"], ["385", "381"], ["390", "389"], ["262", "260"], ["298", "296"], ["306", "304"], ["348", "346"], ["392", "390"], ["21", "26"], ["172", "438"], ["22", "438"], ["24", "438"], ["27", "438"], ["27", "438"], ["31", "438"], ["34", "438"], ["34", "438"], ["39", "438"], ["44", "438"], ["51", "438"], ["49", "438"], ["49", "438"], ["54", "438"], ["56", "438"], ["54", "438"], ["54", "438"], ["94", "438"], ["96", "438"], ["94", "438"], ["94", "438"], ["106", "438"], ["106", "438"], ["135", "438"], ["134", "438"], ["134", "438"], ["142", "438"], ["145", "438"], ["145", "438"], ["145", "438"], ["170", "438"], ["170", "438"], ["153", "438"], ["156", "438"], ["156", "438"], ["156", "438"], ["168", "438"], ["148", "438"], ["164", "438"], ["162", "438"], ["162", "438"], ["159", "438"], ["116", "438"], ["119", "438"], ["119", "438"], ["119", "438"], ["111", "438"], ["125", "438"], ["131", "438"], ["125", "438"], ["125", "438"], ["122", "438"], ["74", "438"], ["77", "438"], ["77", "438"], ["77", "438"], ["69", "438"], ["85", "438"], ["91", "438"], ["85", "438"], ["85", "438"], ["82", "438"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["56", "54"], ["56", "54"], ["96", "94"], ["96", "94"], ["176", "174"], ["176", "174"], ["176", "174"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "63"], ["21", "103"], ["21", "184"], ["21", "190"], ["21", "401"], ["34", "434"], ["432", "434"], ["21", "434"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["46", "51"], ["21", "51"], ["39", "56"], ["21", "56"], ["58", "56"], ["58", "56"], ["63", "66"], ["69", "66"], ["21", "66"], ["56", "66"], ["66", "69"], ["21", "69"], ["97", "96"], ["97", "96"], ["58", "96"], ["79", "96"], ["21", "96"], ["103", "106"], ["111", "106"], ["21", "106"], ["108", "106"], ["108", "106"], ["106", "111"], ["21", "111"], ["135", "134"], ["135", "134"], ["21", "134"], ["21", "172"], ["135", "176"], ["21", "176"], ["108", "176"], ["96", "176"], ["119", "176"], ["184", "187"], ["190", "187"], ["21", "187"], ["135", "187"], ["187", "190"], ["262", "190"], ["306", "190"], ["348", "190"], ["392", "190"], ["401", "404"], ["407", "404"], ["21", "404"], ["176", "404"], ["199", "404"], ["404", "407"], ["21", "407"], ["44", "58"], ["21", "58"], ["21", "74"], ["66", "97"], ["21", "97"], ["97", "108"], ["21", "108"], ["21", "116"], ["49", "135"], ["21", "135"], ["21", "142"], ["34", "170"], ["168", "170"], ["21", "170"], ["135", "177"], ["21", "177"], ["21", "196"], ["21", "412"], ["34", "432"], ["421", "432"], ["21", "432"], ["74", "77"], ["82", "77"], ["21", "77"], ["79", "77"], ["79", "77"], ["77", "82"], ["21", "82"], ["91", "85"], ["116", "119"], ["122", "119"], ["21", "119"], ["96", "119"], ["119", "122"], ["21", "122"], ["131", "125"], ["142", "145"], ["148", "145"], ["21", "145"], ["108", "145"], ["145", "148"], ["21", "148"], ["196", "199"], ["202", "199"], ["21", "199"], ["176", "199"], ["228", "199"], ["199", "202"], ["271", "202"], ["309", "202"], ["21", "202"], ["412", "415"], ["418", "415"], ["21", "415"], ["176", "415"], ["210", "415"], ["415", "418"], ["21", "418"], ["58", "79"], ["21", "79"], ["21", "153"], ["34", "168"], ["162", "168"], ["21", "168"], ["21", "207"], ["34", "421"], ["432", "421"], ["21", "421"], ["51", "91"], ["21", "91"], ["51", "131"], ["91", "131"], ["21", "131"], ["153", "156"], ["159", "156"], ["21", "156"], ["96", "156"], ["119", "156"], ["156", "159"], ["21", "159"], ["207", "210"], ["213", "210"], ["21", "210"], ["176", "210"], ["314", "210"], ["357", "213"], ["396", "213"], ["21", "213"], ["21", "216"], ["21", "423"], ["34", "162"], ["168", "162"], ["21", "162"], ["165", "162"], ["241", "233"], ["241", "233"], ["241", "233"], ["283", "275"], ["283", "275"], ["283", "275"], ["327", "319"], ["327", "319"], ["327", "319"], ["369", "361"], ["369", "361"], ["369", "361"], ["165", "164"], ["21", "164"], ["21", "224"], ["199", "228"], ["271", "228"], ["309", "228"], ["21", "228"], ["199", "228"], ["271", "270"], ["271", "270"], ["21", "270"], ["210", "314"], ["21", "314"], ["210", "314"], ["357", "356"], ["357", "356"], ["21", "356"], ["21", "165"], ["199", "229"], ["271", "229"], ["309", "229"], ["21", "229"], ["283", "241"], ["327", "241"], ["369", "241"], ["21", "241"], ["216", "241"], ["251", "241"], ["251", "241"], ["21", "271"], ["199", "271"], ["309", "271"], ["241", "283"], ["327", "283"], ["369", "283"], ["21", "283"], ["216", "283"], ["233", "283"], ["293", "283"], ["293", "283"], ["210", "315"], ["21", "315"], ["241", "327"], ["283", "327"], ["369", "327"], ["21", "327"], ["216", "327"], ["233", "327"], ["275", "327"], ["337", "327"], ["337", "327"], ["21", "357"], ["210", "357"], ["241", "369"], ["283", "369"], ["327", "369"], ["21", "369"], ["216", "369"], ["233", "369"], ["275", "369"], ["319", "369"], ["379", "369"], ["379", "369"], ["251", "250"], ["251", "250"], ["293", "292"], ["293", "292"], ["337", "336"], ["337", "336"], ["379", "378"], ["379", "378"], ["21", "251"], ["125", "251"], ["21", "293"], ["21", "337"], ["85", "337"], ["21", "379"], ["21", "352"], ["210", "352"], ["385", "396"], ["21", "396"], ["21", "265"], ["199", "265"], ["271", "265"], ["309", "265"], ["298", "309"], ["21", "309"], ["357", "385"], ["21", "385"], ["187", "262"], ["306", "262"], ["348", "262"], ["392", "262"], ["21", "262"], ["271", "298"], ["21", "298"], ["187", "306"], ["262", "306"], ["348", "306"], ["392", "306"], ["21", "306"], ["187", "348"], ["262", "348"], ["306", "348"], ["392", "348"], ["21", "348"], ["187", "392"], ["262", "392"], ["306", "392"], ["348", "392"], ["21", "392"], ["66", "74"], ["66", "66"], ["66", "77"], ["66", "69"], ["66", "79"], ["106", "108"], ["106", "116"], ["106", "119"], ["106", "111"], ["106", "106"], ["134", "170"], ["134", "401"], ["134", "184"], ["134", "174"], ["134", "176"], ["134", "404"], ["134", "177"], ["134", "172"], ["134", "145"], ["134", "187"], ["134", "434"], ["134", "142"], ["187", "196"], ["187", "190"], ["187", "199"], ["187", "187"], ["404", "412"], ["404", "404"], ["404", "415"], ["404", "432"], ["404", "407"], ["77", "86"], ["77", "77"], ["77", "85"], ["77", "87"], ["77", "91"], ["77", "79"], ["77", "82"], ["119", "127"], ["119", "122"], ["119", "131"], ["119", "119"], ["119", "126"], ["119", "125"], ["145", "168"], ["145", "148"], ["145", "145"], ["145", "153"], ["145", "156"], ["199", "202"], ["199", "199"], ["199", "207"], ["199", "210"], ["415", "418"], ["415", "426"], ["415", "424"], ["415", "425"], ["415", "415"], ["415", "421"], ["415", "423"], ["156", "162"], ["156", "159"], ["156", "164"], ["156", "165"], ["156", "156"], ["210", "213"], ["210", "228"], ["210", "356"], ["210", "224"], ["210", "315"], ["210", "217"], ["210", "357"], ["210", "229"], ["210", "216"], ["210", "225"], ["210", "314"], ["210", "210"], ["210", "270"], ["210", "271"], ["210", "218"], ["210", "219"], ["228", "243"], ["228", "262"], ["228", "258"], ["228", "236"], ["228", "260"], ["228", "253"], ["228", "254"], ["228", "241"], ["228", "244"], ["228", "245"], ["228", "259"], ["228", "233"], ["228", "265"], ["228", "235"], ["228", "251"], ["228", "234"], ["228", "250"], ["270", "292"], ["270", "283"], ["270", "298"], ["270", "302"], ["270", "306"], ["270", "276"], ["270", "296"], ["270", "304"], ["270", "278"], ["270", "275"], ["270", "309"], ["270", "285"], ["270", "293"], ["270", "286"], ["270", "295"], ["270", "277"], ["270", "287"], ["270", "303"], ["314", "322"], ["314", "336"], ["314", "340"], ["314", "346"], ["314", "329"], ["314", "348"], ["314", "321"], ["314", "319"], ["314", "320"], ["314", "337"], ["314", "339"], ["314", "352"], ["314", "327"], ["314", "330"], ["314", "345"], ["314", "331"], ["314", "344"], ["356", "392"], ["356", "378"], ["356", "396"], ["356", "362"], ["356", "389"], ["356", "382"], ["356", "390"], ["356", "388"], ["356", "364"], ["356", "372"], ["356", "385"], ["356", "379"], ["356", "373"], ["356", "361"], ["356", "381"], ["356", "371"], ["356", "369"], ["356", "363"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int m: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>6</SUB>>", "51": "<(nextInt,nextInt())<SUB>6</SUB>>", "53": "<(LOCAL,int[][] costRight: int[][])<SUB>7</SUB>>", "55": "<(IDENTIFIER,costRight,int[][] costRight = new int[n][m - 1])<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>7</SUB>>", "59": "<(IDENTIFIER,m,m - 1)<SUB>7</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "65": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "73": "<(LOCAL,int j: int)<SUB>9</SUB>>", "75": "<(IDENTIFIER,j,int j = 0)<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>9</SUB>>", "81": "<(LITERAL,1,m - 1)<SUB>9</SUB>>", "83": "<(IDENTIFIER,j,j++)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,costRight[i][j] = nextInt())<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,costRight[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,costRight[i][j] = nextInt())<SUB>10</SUB>>", "91": "<(nextInt,nextInt())<SUB>10</SUB>>", "93": "<(LOCAL,int[][] costDown: int[][])<SUB>13</SUB>>", "95": "<(IDENTIFIER,costDown,int[][] costDown = new int[n - 1][m])<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "99": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>14</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "105": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "107": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,n,n - 1)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "115": "<(LOCAL,int j: int)<SUB>15</SUB>>", "117": "<(IDENTIFIER,j,int j = 0)<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>15</SUB>>", "121": "<(IDENTIFIER,m,j &lt; m)<SUB>15</SUB>>", "123": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "125": "<(&lt;operator&gt;.assignment,costDown[i][j] = nextInt())<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,costDown[i])<SUB>16</SUB>>", "129": "<(IDENTIFIER,i,costDown[i][j] = nextInt())<SUB>16</SUB>>", "131": "<(nextInt,nextInt())<SUB>16</SUB>>", "133": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.modulo,k % 2)<SUB>19</SUB>>", "137": "<(LITERAL,2,k % 2)<SUB>19</SUB>>", "139": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "141": "<(LOCAL,int i: int)<SUB>20</SUB>>", "143": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "147": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "149": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>21</SUB>>", "153": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "155": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "157": "<(IDENTIFIER,j,j &lt; m)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "163": "<(IDENTIFIER,pw,print(-1 + &quot; &quot;))<SUB>22</SUB>>", "165": "<(&lt;operator&gt;.minus,-1)<SUB>22</SUB>>", "167": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>22</SUB>>", "169": "<(IDENTIFIER,pw,println())<SUB>24</SUB>>", "171": "<(IDENTIFIER,pw,close())<SUB>26</SUB>>", "173": "<(LOCAL,int[][][] dp: int[][][])<SUB>29</SUB>>", "175": "<(IDENTIFIER,dp,int[][][] dp = new int[k + 1][n][m])<SUB>29</SUB>>", "177": "<(&lt;operator&gt;.addition,k + 1)<SUB>29</SUB>>", "179": "<(LITERAL,1,k + 1)<SUB>29</SUB>>", "181": "<(IDENTIFIER,m,new int[k + 1][n][m])<SUB>29</SUB>>", "183": "<(LOCAL,int w: int)<SUB>30</SUB>>", "185": "<(IDENTIFIER,w,int w = 2)<SUB>30</SUB>>", "187": "<(&lt;operator&gt;.lessEqualsThan,w &lt;= k)<SUB>30</SUB>>", "189": "<(IDENTIFIER,k,w &lt;= k)<SUB>30</SUB>>", "191": "<(IDENTIFIER,w,w += 2)<SUB>30</SUB>>", "193": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "195": "<(LOCAL,int i: int)<SUB>31</SUB>>", "197": "<(IDENTIFIER,i,int i = 0)<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>31</SUB>>", "201": "<(IDENTIFIER,n,i &lt; n)<SUB>31</SUB>>", "203": "<(IDENTIFIER,i,i++)<SUB>31</SUB>>", "205": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>32</SUB>>", "207": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>32</SUB>>", "209": "<(LITERAL,0,int j = 0)<SUB>32</SUB>>", "211": "<(IDENTIFIER,j,j &lt; m)<SUB>32</SUB>>", "213": "<(&lt;operator&gt;.postIncrement,j++)<SUB>32</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dp[w][i][j])<SUB>33</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[w])<SUB>33</SUB>>", "221": "<(IDENTIFIER,w,dp[w][i][j] = (int) 1e9)<SUB>33</SUB>>", "223": "<(IDENTIFIER,j,dp[w][i][j] = (int) 1e9)<SUB>33</SUB>>", "225": "<(TYPE_REF,int,int)<SUB>33</SUB>>", "227": "<(CONTROL_STRUCTURE,if (i + 1 &lt; n),if (i + 1 &lt; n))<SUB>34</SUB>>", "229": "<(&lt;operator&gt;.addition,i + 1)<SUB>34</SUB>>", "231": "<(LITERAL,1,i + 1)<SUB>34</SUB>>", "233": "<(&lt;operator&gt;.assignment,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,dp[w][i])<SUB>35</SUB>>", "237": "<(IDENTIFIER,dp,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "239": "<(IDENTIFIER,i,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "241": "<(min,Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[w][i][j])<SUB>35</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[w])<SUB>35</SUB>>", "247": "<(IDENTIFIER,w,Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "249": "<(IDENTIFIER,j,Math.min(dp[w][i][j], 2 * costDown[i][j] + dp[w - 2][i + 1][j]))<SUB>35</SUB>>", "251": "<(&lt;operator&gt;.multiplication,2 * costDown[i][j])<SUB>35</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,costDown[i][j])<SUB>35</SUB>>", "255": "<(IDENTIFIER,costDown,2 * costDown[i][j])<SUB>35</SUB>>", "257": "<(IDENTIFIER,j,2 * costDown[i][j])<SUB>35</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[w - 2][i + 1])<SUB>35</SUB>>", "261": "<(IDENTIFIER,dp,2 * costDown[i][j] + dp[w - 2][i + 1][j])<SUB>35</SUB>>", "263": "<(IDENTIFIER,w,w - 2)<SUB>35</SUB>>", "265": "<(&lt;operator&gt;.addition,i + 1)<SUB>35</SUB>>", "267": "<(LITERAL,1,i + 1)<SUB>35</SUB>>", "269": "<(CONTROL_STRUCTURE,if (i - 1 &gt;= 0),if (i - 1 &gt;= 0))<SUB>36</SUB>>", "271": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>36</SUB>>", "273": "<(LITERAL,1,i - 1)<SUB>36</SUB>>", "275": "<(&lt;operator&gt;.assignment,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[w][i])<SUB>37</SUB>>", "279": "<(IDENTIFIER,dp,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "281": "<(IDENTIFIER,i,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "283": "<(min,Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dp[w][i][j])<SUB>37</SUB>>", "287": "<(&lt;operator&gt;.indexAccess,dp[w])<SUB>37</SUB>>", "289": "<(IDENTIFIER,w,Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "291": "<(IDENTIFIER,j,Math.min(dp[w][i][j], 2 * costDown[i - 1][j] + dp[w - 2][i - 1][j]))<SUB>37</SUB>>", "293": "<(&lt;operator&gt;.multiplication,2 * costDown[i - 1][j])<SUB>37</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,costDown[i - 1][j])<SUB>37</SUB>>", "297": "<(IDENTIFIER,costDown,2 * costDown[i - 1][j])<SUB>37</SUB>>", "299": "<(IDENTIFIER,i,i - 1)<SUB>37</SUB>>", "301": "<(IDENTIFIER,j,2 * costDown[i - 1][j])<SUB>37</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,dp[w - 2][i - 1])<SUB>37</SUB>>", "305": "<(IDENTIFIER,dp,2 * costDown[i - 1][j] + dp[w - 2][i - 1][j])<SUB>37</SUB>>", "307": "<(IDENTIFIER,w,w - 2)<SUB>37</SUB>>", "309": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>37</SUB>>", "311": "<(LITERAL,1,i - 1)<SUB>37</SUB>>", "313": "<(CONTROL_STRUCTURE,if (j + 1 &lt; m),if (j + 1 &lt; m))<SUB>38</SUB>>", "315": "<(&lt;operator&gt;.addition,j + 1)<SUB>38</SUB>>", "317": "<(LITERAL,1,j + 1)<SUB>38</SUB>>", "319": "<(&lt;operator&gt;.assignment,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,dp[w][i])<SUB>39</SUB>>", "323": "<(IDENTIFIER,dp,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "325": "<(IDENTIFIER,i,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "327": "<(min,Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "329": "<(&lt;operator&gt;.indexAccess,dp[w][i][j])<SUB>39</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,dp[w])<SUB>39</SUB>>", "333": "<(IDENTIFIER,w,Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "335": "<(IDENTIFIER,j,Math.min(dp[w][i][j], 2 * costRight[i][j] + dp[w - 2][i][j + 1]))<SUB>39</SUB>>", "337": "<(&lt;operator&gt;.multiplication,2 * costRight[i][j])<SUB>39</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,costRight[i][j])<SUB>39</SUB>>", "341": "<(IDENTIFIER,costRight,2 * costRight[i][j])<SUB>39</SUB>>", "343": "<(IDENTIFIER,j,2 * costRight[i][j])<SUB>39</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,dp[w - 2][i])<SUB>39</SUB>>", "347": "<(IDENTIFIER,dp,2 * costRight[i][j] + dp[w - 2][i][j + 1])<SUB>39</SUB>>", "349": "<(IDENTIFIER,w,w - 2)<SUB>39</SUB>>", "351": "<(IDENTIFIER,i,2 * costRight[i][j] + dp[w - 2][i][j + 1])<SUB>39</SUB>>", "353": "<(IDENTIFIER,j,j + 1)<SUB>39</SUB>>", "355": "<(CONTROL_STRUCTURE,if (j - 1 &gt;= 0),if (j - 1 &gt;= 0))<SUB>40</SUB>>", "357": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>40</SUB>>", "359": "<(LITERAL,1,j - 1)<SUB>40</SUB>>", "361": "<(&lt;operator&gt;.assignment,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp[w][i])<SUB>41</SUB>>", "365": "<(IDENTIFIER,dp,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "367": "<(IDENTIFIER,i,dp[w][i][j] = Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "369": "<(min,Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,dp[w][i][j])<SUB>41</SUB>>", "373": "<(&lt;operator&gt;.indexAccess,dp[w])<SUB>41</SUB>>", "375": "<(IDENTIFIER,w,Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "377": "<(IDENTIFIER,j,Math.min(dp[w][i][j], 2 * costRight[i][j - 1] + dp[w - 2][i][j - 1]))<SUB>41</SUB>>", "379": "<(&lt;operator&gt;.multiplication,2 * costRight[i][j - 1])<SUB>41</SUB>>", "381": "<(&lt;operator&gt;.indexAccess,costRight[i][j - 1])<SUB>41</SUB>>", "383": "<(IDENTIFIER,costRight,2 * costRight[i][j - 1])<SUB>41</SUB>>", "385": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>41</SUB>>", "387": "<(LITERAL,1,j - 1)<SUB>41</SUB>>", "389": "<(&lt;operator&gt;.indexAccess,dp[w - 2][i])<SUB>41</SUB>>", "391": "<(IDENTIFIER,dp,2 * costRight[i][j - 1] + dp[w - 2][i][j - 1])<SUB>41</SUB>>", "393": "<(IDENTIFIER,w,w - 2)<SUB>41</SUB>>", "395": "<(IDENTIFIER,i,2 * costRight[i][j - 1] + dp[w - 2][i][j - 1])<SUB>41</SUB>>", "397": "<(IDENTIFIER,j,j - 1)<SUB>41</SUB>>", "399": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>45</SUB>>", "401": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>45</SUB>>", "403": "<(LITERAL,0,int i = 0)<SUB>45</SUB>>", "405": "<(IDENTIFIER,i,i &lt; n)<SUB>45</SUB>>", "407": "<(&lt;operator&gt;.postIncrement,i++)<SUB>45</SUB>>", "409": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "411": "<(LOCAL,int j: int)<SUB>46</SUB>>", "413": "<(IDENTIFIER,j,int j = 0)<SUB>46</SUB>>", "415": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>46</SUB>>", "417": "<(IDENTIFIER,m,j &lt; m)<SUB>46</SUB>>", "419": "<(IDENTIFIER,j,j++)<SUB>46</SUB>>", "421": "<(print,print(dp[k][i][j] + &quot; &quot;))<SUB>47</SUB>>", "423": "<(&lt;operator&gt;.addition,dp[k][i][j] + &quot; &quot;)<SUB>47</SUB>>", "425": "<(&lt;operator&gt;.indexAccess,dp[k][i])<SUB>47</SUB>>", "427": "<(IDENTIFIER,dp,dp[k][i][j] + &quot; &quot;)<SUB>47</SUB>>", "429": "<(IDENTIFIER,i,dp[k][i][j] + &quot; &quot;)<SUB>47</SUB>>", "431": "<(LITERAL,&quot; &quot;,dp[k][i][j] + &quot; &quot;)<SUB>47</SUB>>", "433": "<(IDENTIFIER,pw,println())<SUB>49</SUB>>", "435": "<(IDENTIFIER,pw,close())<SUB>51</SUB>>", "437": "<(MODIFIER,STATIC)>"}}