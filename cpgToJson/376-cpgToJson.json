{"edges": [["29", "30"], ["29", "31"], ["29", "574"], ["29", "575"], ["29", "576"], ["31", "4"], ["31", "32"], ["31", "35"], ["31", "6"], ["31", "46"], ["31", "49"], ["31", "8"], ["31", "53"], ["31", "56"], ["31", "59"], ["31", "65"], ["31", "71"], ["31", "77"], ["31", "81"], ["31", "85"], ["31", "89"], ["31", "93"], ["31", "10"], ["31", "97"], ["31", "100"], ["31", "103"], ["31", "140"], ["31", "143"], ["31", "144"], ["31", "147"], ["31", "263"], ["31", "12"], ["31", "272"], ["31", "275"], ["31", "276"], ["31", "520"], ["31", "572"], ["32", "33"], ["32", "34"], ["35", "3"], ["35", "36"], ["36", "37"], ["36", "40"], ["36", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["49", "5"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "7"], ["56", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["93", "94"], ["93", "95"], ["95", "96"], ["97", "98"], ["97", "99"], ["100", "9"], ["100", "101"], ["101", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "111"], ["103", "113"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["113", "122"], ["113", "129"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "137"], ["133", "139"], ["134", "135"], ["134", "136"], ["137", "138"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["157", "159"], ["157", "169"], ["157", "170"], ["157", "180"], ["157", "192"], ["157", "204"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["161", "164"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["172", "175"], ["175", "176"], ["175", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "188"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["192", "193"], ["192", "200"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["202", "203"], ["204", "205"], ["204", "214"], ["204", "219"], ["205", "206"], ["205", "210"], ["206", "207"], ["206", "208"], ["208", "209"], ["210", "211"], ["210", "212"], ["212", "213"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["220", "221"], ["220", "230"], ["220", "235"], ["221", "222"], ["221", "226"], ["222", "223"], ["222", "224"], ["224", "225"], ["226", "227"], ["226", "228"], ["228", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["235", "236"], ["236", "237"], ["236", "246"], ["236", "257"], ["237", "238"], ["237", "242"], ["238", "239"], ["238", "240"], ["240", "241"], ["242", "243"], ["242", "244"], ["244", "245"], ["246", "247"], ["246", "252"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["257", "258"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["272", "273"], ["272", "274"], ["275", "11"], ["276", "277"], ["276", "278"], ["276", "281"], ["276", "284"], ["276", "286"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "283"], ["284", "285"], ["286", "287"], ["287", "288"], ["287", "293"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["293", "14"], ["293", "294"], ["293", "297"], ["293", "298"], ["293", "301"], ["293", "304"], ["293", "309"], ["293", "370"], ["293", "371"], ["293", "374"], ["293", "375"], ["293", "379"], ["293", "380"], ["293", "384"], ["293", "403"], ["293", "406"], ["293", "407"], ["293", "411"], ["293", "446"], ["293", "503"], ["294", "295"], ["294", "296"], ["297", "13"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["309", "310"], ["309", "313"], ["310", "311"], ["311", "312"], ["313", "314"], ["313", "315"], ["313", "319"], ["313", "320"], ["313", "326"], ["315", "316"], ["315", "317"], ["317", "318"], ["320", "321"], ["320", "322"], ["322", "323"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "328"], ["326", "331"], ["326", "334"], ["326", "336"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["334", "335"], ["336", "337"], ["337", "338"], ["337", "346"], ["338", "339"], ["339", "340"], ["339", "341"], ["341", "342"], ["341", "345"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "356"], ["346", "363"], ["347", "348"], ["347", "355"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["356", "357"], ["356", "358"], ["358", "359"], ["358", "362"], ["359", "360"], ["359", "361"], ["363", "364"], ["363", "365"], ["365", "366"], ["365", "369"], ["366", "367"], ["366", "368"], ["371", "372"], ["371", "373"], ["375", "376"], ["375", "377"], ["377", "378"], ["380", "381"], ["380", "382"], ["382", "383"], ["384", "385"], ["384", "386"], ["384", "389"], ["384", "392"], ["384", "394"], ["386", "387"], ["386", "388"], ["389", "390"], ["389", "391"], ["392", "393"], ["394", "395"], ["394", "398"], ["395", "396"], ["395", "397"], ["398", "399"], ["398", "400"], ["400", "401"], ["400", "402"], ["403", "404"], ["403", "405"], ["407", "408"], ["407", "409"], ["409", "410"], ["411", "412"], ["411", "413"], ["411", "416"], ["411", "419"], ["411", "421"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "418"], ["419", "420"], ["421", "422"], ["421", "423"], ["421", "433"], ["423", "424"], ["423", "425"], ["425", "426"], ["425", "427"], ["425", "428"], ["428", "429"], ["428", "430"], ["430", "431"], ["430", "432"], ["433", "434"], ["433", "441"], ["434", "435"], ["434", "438"], ["435", "436"], ["435", "437"], ["438", "439"], ["438", "440"], ["441", "442"], ["441", "445"], ["442", "443"], ["442", "444"], ["446", "447"], ["446", "449"], ["446", "499"], ["447", "448"], ["449", "450"], ["449", "453"], ["449", "488"], ["450", "451"], ["450", "452"], ["453", "454"], ["453", "455"], ["453", "458"], ["453", "461"], ["453", "463"], ["455", "456"], ["455", "457"], ["458", "459"], ["458", "460"], ["461", "462"], ["463", "464"], ["463", "465"], ["463", "475"], ["465", "466"], ["465", "467"], ["467", "468"], ["467", "469"], ["467", "470"], ["470", "471"], ["470", "472"], ["472", "473"], ["472", "474"], ["475", "476"], ["475", "483"], ["476", "477"], ["476", "480"], ["477", "478"], ["477", "479"], ["480", "481"], ["480", "482"], ["483", "484"], ["483", "487"], ["484", "485"], ["484", "486"], ["488", "489"], ["488", "490"], ["488", "493"], ["490", "491"], ["490", "492"], ["493", "494"], ["494", "495"], ["494", "498"], ["495", "496"], ["495", "497"], ["499", "500"], ["500", "501"], ["500", "502"], ["503", "504"], ["503", "505"], ["503", "508"], ["503", "511"], ["503", "513"], ["505", "506"], ["505", "507"], ["508", "509"], ["508", "510"], ["511", "512"], ["513", "514"], ["513", "519"], ["514", "515"], ["514", "516"], ["516", "517"], ["516", "518"], ["520", "521"], ["520", "523"], ["520", "568"], ["521", "522"], ["523", "524"], ["523", "527"], ["523", "566"], ["524", "525"], ["524", "526"], ["527", "528"], ["527", "529"], ["527", "532"], ["527", "535"], ["527", "537"], ["529", "530"], ["529", "531"], ["532", "533"], ["532", "534"], ["535", "536"], ["537", "538"], ["537", "539"], ["537", "547"], ["537", "559"], ["539", "540"], ["539", "541"], ["541", "542"], ["541", "543"], ["541", "544"], ["544", "545"], ["544", "546"], ["547", "548"], ["547", "554"], ["548", "549"], ["548", "552"], ["549", "550"], ["549", "551"], ["552", "553"], ["554", "555"], ["554", "558"], ["555", "556"], ["555", "557"], ["559", "560"], ["559", "561"], ["561", "562"], ["561", "565"], ["562", "563"], ["562", "564"], ["566", "567"], ["568", "569"], ["569", "570"], ["569", "571"], ["572", "573"], ["32", "39"], ["35", "48"], ["46", "52"], ["49", "55"], ["53", "57"], ["56", "63"], ["59", "69"], ["65", "75"], ["71", "79"], ["77", "83"], ["81", "87"], ["85", "91"], ["89", "95"], ["93", "99"], ["97", "101"], ["100", "105"], ["140", "144"], ["144", "149"], ["272", "275"], ["275", "278"], ["572", "576"], ["34", "32"], ["48", "46"], ["50", "49"], ["55", "53"], ["57", "56"], ["61", "59"], ["67", "65"], ["73", "71"], ["79", "77"], ["83", "81"], ["87", "85"], ["91", "89"], ["95", "93"], ["99", "97"], ["101", "100"], ["105", "108"], ["108", "115"], ["108", "140"], ["111", "108"], ["149", "152"], ["152", "264"], ["152", "166"], ["155", "152"], ["264", "269"], ["264", "274"], ["274", "272"], ["278", "281"], ["281", "289"], ["281", "521"], ["284", "281"], ["521", "524"], ["521", "569"], ["37", "44"], ["40", "35"], ["52", "50"], ["63", "61"], ["69", "67"], ["75", "73"], ["114", "123"], ["122", "130"], ["129", "111"], ["159", "177"], ["170", "182"], ["266", "271"], ["271", "576"], ["524", "529"], ["566", "572"], ["569", "572"], ["39", "37"], ["42", "40"], ["115", "120"], ["118", "114"], ["123", "126"], ["126", "122"], ["130", "136"], ["161", "159"], ["172", "170"], ["181", "190"], ["181", "194"], ["188", "194"], ["193", "202"], ["193", "208"], ["200", "208"], ["205", "215"], ["205", "224"], ["214", "155"], ["267", "266"], ["288", "296"], ["288", "284"], ["529", "532"], ["532", "544"], ["532", "566"], ["535", "532"], ["44", "42"], ["120", "118"], ["134", "137"], ["137", "129"], ["164", "161"], ["175", "172"], ["182", "181"], ["182", "185"], ["185", "181"], ["190", "188"], ["194", "193"], ["194", "197"], ["197", "193"], ["202", "200"], ["206", "205"], ["206", "212"], ["210", "205"], ["215", "214"], ["269", "267"], ["289", "288"], ["294", "297"], ["297", "298"], ["298", "301"], ["301", "305"], ["304", "311"], ["371", "377"], ["375", "382"], ["380", "386"], ["403", "409"], ["407", "413"], ["539", "549"], ["559", "535"], ["136", "134"], ["166", "164"], ["177", "175"], ["208", "206"], ["212", "210"], ["221", "231"], ["221", "240"], ["230", "155"], ["296", "294"], ["305", "304"], ["310", "317"], ["310", "371"], ["377", "375"], ["382", "380"], ["386", "389"], ["389", "395"], ["389", "403"], ["392", "389"], ["394", "392"], ["409", "407"], ["413", "416"], ["416", "430"], ["416", "447"], ["419", "416"], ["447", "450"], ["447", "500"], ["505", "508"], ["508", "516"], ["508", "284"], ["511", "508"], ["513", "511"], ["541", "539"], ["548", "555"], ["548", "562"], ["554", "562"], ["561", "559"], ["222", "221"], ["222", "228"], ["226", "221"], ["231", "230"], ["311", "310"], ["315", "323"], ["320", "328"], ["395", "400"], ["398", "394"], ["423", "435"], ["450", "455"], ["500", "505"], ["514", "513"], ["544", "541"], ["549", "552"], ["552", "548"], ["555", "554"], ["562", "561"], ["224", "222"], ["228", "226"], ["237", "248"], ["237", "259"], ["317", "315"], ["322", "320"], ["328", "331"], ["331", "311"], ["331", "342"], ["334", "331"], ["400", "398"], ["425", "423"], ["434", "442"], ["434", "419"], ["455", "458"], ["458", "489"], ["458", "472"], ["461", "458"], ["489", "490"], ["489", "495"], ["490", "505"], ["516", "514"], ["238", "237"], ["238", "244"], ["242", "237"], ["247", "253"], ["252", "155"], ["323", "322"], ["428", "425"], ["435", "434"], ["435", "438"], ["438", "434"], ["442", "447"], ["465", "477"], ["240", "238"], ["244", "242"], ["248", "247"], ["253", "252"], ["259", "264"], ["338", "351"], ["338", "334"], ["430", "428"], ["467", "465"], ["476", "484"], ["476", "461"], ["495", "521"], ["339", "338"], ["347", "359"], ["356", "366"], ["363", "334"], ["470", "467"], ["477", "476"], ["477", "480"], ["480", "476"], ["484", "489"], ["341", "339"], ["348", "347"], ["358", "356"], ["365", "363"], ["472", "470"], ["342", "341"], ["350", "348"], ["359", "358"], ["366", "365"], ["351", "350"], ["29", "34"], ["271", "576"], ["30", "576"], ["32", "576"], ["37", "576"], ["40", "576"], ["40", "576"], ["40", "576"], ["35", "576"], ["46", "576"], ["49", "576"], ["49", "576"], ["53", "576"], ["59", "576"], ["65", "576"], ["65", "576"], ["71", "576"], ["73", "576"], ["75", "576"], ["73", "576"], ["71", "576"], ["71", "576"], ["77", "576"], ["77", "576"], ["77", "576"], ["81", "576"], ["81", "576"], ["81", "576"], ["85", "576"], ["85", "576"], ["89", "576"], ["93", "576"], ["93", "576"], ["93", "576"], ["97", "576"], ["100", "576"], ["101", "576"], ["100", "576"], ["100", "576"], ["140", "576"], ["140", "576"], ["140", "576"], ["144", "576"], ["144", "576"], ["149", "576"], ["152", "576"], ["152", "576"], ["152", "576"], ["164", "576"], ["161", "576"], ["159", "576"], ["159", "576"], ["172", "576"], ["172", "576"], ["175", "576"], ["175", "576"], ["172", "576"], ["170", "576"], ["170", "576"], ["181", "576"], ["185", "576"], ["181", "576"], ["181", "576"], ["188", "576"], ["194", "576"], ["193", "576"], ["197", "576"], ["197", "576"], ["193", "576"], ["193", "576"], ["200", "576"], ["200", "576"], ["206", "576"], ["206", "576"], ["205", "576"], ["210", "576"], ["210", "576"], ["205", "576"], ["205", "576"], ["222", "576"], ["221", "576"], ["226", "576"], ["226", "576"], ["221", "576"], ["221", "576"], ["238", "576"], ["238", "576"], ["237", "576"], ["242", "576"], ["242", "576"], ["237", "576"], ["237", "576"], ["259", "576"], ["259", "576"], ["266", "576"], ["247", "576"], ["247", "576"], ["252", "576"], ["252", "576"], ["252", "576"], ["230", "576"], ["230", "576"], ["230", "576"], ["214", "576"], ["214", "576"], ["214", "576"], ["155", "576"], ["118", "576"], ["120", "576"], ["118", "576"], ["114", "576"], ["114", "576"], ["122", "576"], ["122", "576"], ["122", "576"], ["129", "576"], ["134", "576"], ["137", "576"], ["137", "576"], ["129", "576"], ["111", "576"], ["29", "30"], ["29", "32"], ["29", "46"], ["29", "53"], ["61", "59"], ["61", "59"], ["67", "65"], ["67", "65"], ["73", "71"], ["73", "71"], ["79", "77"], ["83", "81"], ["87", "85"], ["91", "89"], ["95", "93"], ["29", "97"], ["29", "144"], ["29", "272"], ["32", "35"], ["29", "35"], ["37", "35"], ["40", "35"], ["46", "49"], ["29", "49"], ["53", "56"], ["29", "56"], ["57", "56"], ["97", "100"], ["29", "100"], ["101", "100"], ["29", "105"], ["29", "140"], ["89", "140"], ["114", "140"], ["29", "149"], ["29", "264"], ["272", "275"], ["29", "275"], ["29", "278"], ["569", "572"], ["566", "572"], ["29", "572"], ["29", "37"], ["29", "45"], ["35", "57"], ["29", "57"], ["29", "61"], ["63", "61"], ["61", "67"], ["29", "67"], ["69", "67"], ["67", "73"], ["29", "73"], ["75", "73"], ["59", "79"], ["29", "79"], ["79", "83"], ["29", "83"], ["83", "87"], ["29", "87"], ["87", "91"], ["29", "91"], ["91", "95"], ["29", "95"], ["57", "101"], ["29", "101"], ["105", "108"], ["111", "108"], ["29", "108"], ["95", "108"], ["108", "111"], ["29", "111"], ["118", "114"], ["118", "114"], ["89", "122"], ["114", "122"], ["134", "129"], ["137", "129"], ["29", "129"], ["149", "152"], ["155", "152"], ["29", "152"], ["108", "152"], ["185", "152"], ["197", "152"], ["152", "155"], ["29", "155"], ["161", "159"], ["161", "159"], ["161", "159"], ["172", "170"], ["172", "170"], ["172", "170"], ["29", "271"], ["278", "281"], ["284", "281"], ["29", "281"], ["152", "281"], ["185", "281"], ["197", "281"], ["438", "281"], ["480", "281"], ["281", "284"], ["301", "284"], ["29", "284"], ["144", "521"], ["259", "521"], ["495", "521"], ["29", "521"], ["37", "40"], ["29", "40"], ["56", "63"], ["29", "63"], ["63", "69"], ["29", "69"], ["69", "75"], ["29", "75"], ["190", "188"], ["202", "200"], ["49", "266"], ["29", "266"], ["49", "524"], ["29", "524"], ["29", "529"], ["524", "566"], ["559", "566"], ["29", "566"], ["49", "569"], ["29", "569"], ["73", "118"], ["29", "118"], ["120", "118"], ["29", "134"], ["29", "139"], ["140", "161"], ["172", "161"], ["29", "161"], ["140", "161"], ["164", "161"], ["172", "161"], ["164", "161"], ["161", "172"], ["29", "172"], ["161", "172"], ["175", "172"], ["175", "172"], ["182", "181"], ["182", "181"], ["185", "181"], ["185", "181"], ["194", "193"], ["194", "193"], ["197", "193"], ["197", "193"], ["206", "205"], ["206", "205"], ["210", "205"], ["210", "205"], ["237", "205"], ["77", "214"], ["252", "214"], ["230", "214"], ["129", "214"], ["194", "214"], ["197", "214"], ["200", "214"], ["210", "214"], ["29", "214"], ["81", "288"], ["304", "288"], ["29", "288"], ["29", "294"], ["29", "304"], ["29", "371"], ["377", "375"], ["382", "380"], ["409", "407"], ["529", "532"], ["535", "532"], ["29", "532"], ["281", "532"], ["438", "532"], ["480", "532"], ["532", "535"], ["29", "535"], ["541", "539"], ["541", "539"], ["541", "539"], ["100", "120"], ["29", "120"], ["134", "137"], ["29", "137"], ["65", "164"], ["29", "164"], ["140", "164"], ["172", "164"], ["175", "164"], ["89", "164"], ["114", "164"], ["71", "175"], ["29", "175"], ["161", "175"], ["164", "175"], ["159", "182"], ["29", "182"], ["182", "185"], ["29", "185"], ["152", "185"], ["29", "190"], ["170", "194"], ["29", "194"], ["194", "197"], ["29", "197"], ["152", "197"], ["185", "197"], ["29", "202"], ["182", "206"], ["185", "206"], ["188", "206"], ["29", "206"], ["208", "206"], ["194", "210"], ["197", "210"], ["200", "210"], ["29", "210"], ["212", "210"], ["294", "297"], ["29", "297"], ["297", "298"], ["29", "298"], ["281", "298"], ["275", "301"], ["311", "301"], ["29", "301"], ["298", "301"], ["29", "386"], ["140", "394"], ["172", "394"], ["140", "403"], ["172", "403"], ["425", "403"], ["467", "403"], ["29", "403"], ["380", "403"], ["428", "403"], ["470", "403"], ["394", "403"], ["29", "413"], ["29", "505"], ["500", "513"], ["490", "513"], ["29", "513"], ["29", "554"], ["524", "559"], ["29", "559"], ["85", "559"], ["548", "559"], ["554", "559"], ["29", "208"], ["29", "212"], ["222", "221"], ["222", "221"], ["226", "221"], ["226", "221"], ["77", "230"], ["252", "230"], ["214", "230"], ["129", "230"], ["222", "230"], ["29", "230"], ["311", "310"], ["317", "315"], ["322", "320"], ["298", "377"], ["356", "377"], ["29", "377"], ["375", "382"], ["29", "382"], ["386", "389"], ["392", "389"], ["29", "389"], ["382", "389"], ["400", "392"], ["29", "392"], ["29", "409"], ["413", "416"], ["419", "416"], ["29", "416"], ["389", "416"], ["416", "419"], ["29", "419"], ["425", "423"], ["425", "423"], ["425", "423"], ["371", "447"], ["442", "447"], ["29", "447"], ["29", "450"], ["29", "500"], ["505", "508"], ["511", "508"], ["29", "508"], ["416", "508"], ["458", "508"], ["516", "511"], ["29", "511"], ["140", "541"], ["172", "541"], ["403", "541"], ["425", "541"], ["467", "541"], ["29", "541"], ["140", "541"], ["172", "541"], ["175", "541"], ["89", "541"], ["114", "541"], ["93", "541"], ["122", "541"], ["85", "548"], ["554", "548"], ["552", "548"], ["85", "561"], ["548", "561"], ["554", "561"], ["29", "561"], ["206", "222"], ["29", "222"], ["224", "222"], ["194", "226"], ["197", "226"], ["200", "226"], ["210", "226"], ["29", "226"], ["228", "226"], ["301", "311"], ["317", "311"], ["363", "311"], ["29", "311"], ["29", "328"], ["29", "455"], ["29", "489"], ["29", "490"], ["29", "552"], ["29", "224"], ["29", "228"], ["238", "237"], ["238", "237"], ["205", "237"], ["242", "237"], ["242", "237"], ["311", "317"], ["29", "317"], ["77", "322"], ["341", "322"], ["365", "322"], ["328", "331"], ["334", "331"], ["29", "331"], ["320", "331"], ["341", "334"], ["365", "334"], ["29", "334"], ["377", "400"], ["29", "400"], ["389", "400"], ["403", "425"], ["29", "425"], ["403", "425"], ["428", "425"], ["428", "425"], ["435", "434"], ["435", "434"], ["438", "434"], ["438", "434"], ["476", "434"], ["29", "442"], ["455", "458"], ["461", "458"], ["29", "458"], ["416", "458"], ["458", "461"], ["29", "461"], ["467", "465"], ["467", "465"], ["467", "465"], ["377", "516"], ["400", "516"], ["29", "516"], ["508", "516"], ["222", "238"], ["29", "238"], ["240", "238"], ["194", "242"], ["197", "242"], ["200", "242"], ["210", "242"], ["226", "242"], ["29", "242"], ["244", "242"], ["77", "247"], ["252", "247"], ["230", "247"], ["214", "247"], ["129", "247"], ["238", "247"], ["29", "247"], ["77", "252"], ["247", "252"], ["194", "252"], ["197", "252"], ["200", "252"], ["210", "252"], ["226", "252"], ["242", "252"], ["29", "252"], ["29", "259"], ["65", "428"], ["164", "428"], ["29", "428"], ["403", "428"], ["425", "428"], ["470", "428"], ["394", "428"], ["423", "435"], ["29", "435"], ["435", "438"], ["29", "438"], ["281", "438"], ["29", "495"], ["29", "240"], ["29", "244"], ["81", "338"], ["347", "338"], ["29", "347"], ["403", "467"], ["425", "467"], ["29", "467"], ["403", "467"], ["425", "467"], ["470", "467"], ["470", "467"], ["477", "476"], ["477", "476"], ["434", "476"], ["480", "476"], ["480", "476"], ["29", "484"], ["298", "356"], ["29", "356"], ["358", "356"], ["358", "356"], ["317", "363"], ["29", "363"], ["365", "363"], ["365", "363"], ["71", "470"], ["175", "470"], ["29", "470"], ["403", "470"], ["425", "470"], ["428", "470"], ["467", "470"], ["394", "470"], ["465", "477"], ["29", "477"], ["477", "480"], ["29", "480"], ["281", "480"], ["438", "480"], ["77", "341"], ["322", "341"], ["365", "341"], ["331", "341"], ["29", "341"], ["77", "358"], ["350", "358"], ["350", "358"], ["29", "358"], ["77", "365"], ["358", "365"], ["358", "365"], ["29", "365"], ["77", "350"], ["341", "350"], ["341", "350"], ["29", "350"], ["108", "120"], ["108", "136"], ["108", "129"], ["108", "118"], ["108", "108"], ["108", "122"], ["108", "115"], ["108", "137"], ["108", "130"], ["108", "114"], ["108", "134"], ["108", "123"], ["108", "111"], ["108", "126"], ["152", "208"], ["152", "172"], ["152", "161"], ["152", "170"], ["152", "206"], ["152", "181"], ["152", "194"], ["152", "182"], ["152", "159"], ["152", "177"], ["152", "164"], ["152", "205"], ["152", "193"], ["152", "166"], ["152", "175"], ["264", "272"], ["264", "269"], ["264", "271"], ["264", "266"], ["264", "281"], ["264", "274"], ["264", "278"], ["264", "572"], ["264", "275"], ["264", "267"], ["264", "521"], ["281", "289"], ["281", "288"], ["521", "566"], ["521", "524"], ["521", "529"], ["521", "569"], ["521", "532"], ["181", "190"], ["181", "188"], ["193", "200"], ["193", "202"], ["205", "152"], ["205", "224"], ["205", "214"], ["205", "215"], ["205", "222"], ["205", "221"], ["205", "155"], ["288", "416"], ["288", "296"], ["288", "380"], ["288", "304"], ["288", "311"], ["288", "305"], ["288", "297"], ["288", "377"], ["288", "301"], ["288", "375"], ["288", "409"], ["288", "294"], ["288", "407"], ["288", "403"], ["288", "298"], ["288", "281"], ["288", "389"], ["288", "382"], ["288", "310"], ["288", "447"], ["288", "413"], ["288", "386"], ["288", "284"], ["288", "371"], ["532", "544"], ["532", "562"], ["532", "552"], ["532", "548"], ["532", "541"], ["532", "535"], ["532", "539"], ["532", "561"], ["532", "559"], ["532", "549"], ["532", "532"], ["182", "185"], ["194", "197"], ["206", "212"], ["206", "210"], ["221", "240"], ["221", "152"], ["221", "237"], ["221", "230"], ["221", "238"], ["221", "231"], ["221", "155"], ["310", "322"], ["310", "315"], ["310", "311"], ["310", "323"], ["310", "320"], ["310", "317"], ["310", "328"], ["310", "310"], ["310", "331"], ["389", "392"], ["389", "400"], ["389", "398"], ["389", "394"], ["389", "389"], ["389", "395"], ["416", "428"], ["416", "430"], ["416", "425"], ["416", "434"], ["416", "435"], ["416", "423"], ["447", "505"], ["447", "489"], ["447", "508"], ["447", "458"], ["447", "450"], ["447", "281"], ["447", "284"], ["447", "455"], ["447", "500"], ["508", "516"], ["508", "513"], ["508", "508"], ["508", "514"], ["508", "511"], ["548", "555"], ["548", "554"], ["222", "228"], ["222", "226"], ["237", "247"], ["237", "152"], ["237", "259"], ["237", "253"], ["237", "155"], ["237", "252"], ["237", "248"], ["331", "334"], ["331", "338"], ["331", "342"], ["331", "341"], ["331", "339"], ["331", "331"], ["434", "416"], ["434", "419"], ["434", "442"], ["458", "476"], ["458", "472"], ["458", "465"], ["458", "470"], ["458", "467"], ["458", "477"], ["489", "505"], ["489", "508"], ["489", "281"], ["489", "490"], ["489", "284"], ["489", "495"], ["238", "244"], ["238", "242"], ["435", "438"], ["338", "348"], ["338", "365"], ["338", "363"], ["338", "358"], ["338", "356"], ["338", "347"], ["338", "351"], ["338", "366"], ["338", "359"], ["338", "350"], ["476", "484"], ["476", "461"], ["476", "458"], ["477", "480"]], "features": {"29": "<(METHOD,main)<SUB>1</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "43": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "46": "<(&lt;operator&gt;.assignment,ANY w = new PrintWriter(System.out))<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,w,new PrintWriter(System.out))<SUB>4</SUB>>", "51": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "8": "<(LOCAL,StringTokenizer st1: ANY)<SUB>6</SUB>>", "54": "<(IDENTIFIER,st1,ANY st1 = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "56": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "57": "<(readLine,readLine())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,n = ip(st1.nextToken()))<SUB>7</SUB>>", "61": "<(ip,ip(st1.nextToken()))<SUB>7</SUB>>", "63": "<(nextToken,nextToken())<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,a = ip(st1.nextToken()))<SUB>8</SUB>>", "67": "<(ip,ip(st1.nextToken()))<SUB>8</SUB>>", "69": "<(nextToken,nextToken())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,b = ip(st1.nextToken()))<SUB>9</SUB>>", "73": "<(ip,ip(st1.nextToken()))<SUB>9</SUB>>", "75": "<(nextToken,nextToken())<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,g = new ArrayList[n])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.alloc,new ArrayList[n])>", "81": "<(&lt;operator&gt;.assignment,visited = new boolean[n])<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.alloc,new boolean[n])>", "85": "<(&lt;operator&gt;.assignment,ans = new int[n])<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.alloc,new int[n])>", "89": "<(&lt;operator&gt;.assignment,p = new int[n])<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.alloc,new int[n])>", "93": "<(&lt;operator&gt;.assignment,orig = new int[n])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.alloc,new int[n])>", "10": "<(LOCAL,StringTokenizer st2: ANY)<SUB>17</SUB>>", "98": "<(IDENTIFIER,st2,ANY st2 = new StringTokenizer(br.readLine()))<SUB>17</SUB>>", "100": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>17</SUB>>", "101": "<(readLine,readLine())<SUB>17</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "107": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "109": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>19</SUB>>", "117": "<(IDENTIFIER,i,p[i] = ip(st2.nextToken()))<SUB>19</SUB>>", "119": "<(IDENTIFIER,this,ip(st2.nextToken()))<SUB>19</SUB>>", "121": "<(IDENTIFIER,st2,nextToken())<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,orig[i])<SUB>20</SUB>>", "125": "<(IDENTIFIER,i,orig[i] = p[i])<SUB>20</SUB>>", "127": "<(IDENTIFIER,p,orig[i] = p[i])<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.assignment,g[i] = new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "131": "<(IDENTIFIER,g,g[i] = new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "135": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "137": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>21</SUB>>", "139": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "141": "<(IDENTIFIER,Arrays,sort(p))<SUB>24</SUB>>", "143": "<(LOCAL,boolean impossible: boolean)<SUB>26</SUB>>", "145": "<(IDENTIFIER,impossible,boolean impossible = false)<SUB>26</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "151": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "153": "<(IDENTIFIER,i,i &lt; n)<SUB>28</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.assignment,int i1 = binarySearch(p, a - p[i]))<SUB>29</SUB>>", "161": "<(binarySearch,binarySearch(p, a - p[i]))<SUB>29</SUB>>", "163": "<(IDENTIFIER,p,binarySearch(p, a - p[i]))<SUB>29</SUB>>", "165": "<(IDENTIFIER,a,a - p[i])<SUB>29</SUB>>", "167": "<(IDENTIFIER,p,a - p[i])<SUB>29</SUB>>", "169": "<(LOCAL,int i2: int)<SUB>30</SUB>>", "171": "<(IDENTIFIER,i2,int i2 = binarySearch(p, b - p[i]))<SUB>30</SUB>>", "173": "<(IDENTIFIER,Arrays,binarySearch(p, b - p[i]))<SUB>30</SUB>>", "175": "<(&lt;operator&gt;.subtraction,b - p[i])<SUB>30</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>30</SUB>>", "179": "<(IDENTIFIER,i,b - p[i])<SUB>30</SUB>>", "181": "<(&lt;operator&gt;.logicalOr,i1 &lt; 0 || i1 &gt;= n)<SUB>31</SUB>>", "183": "<(IDENTIFIER,i1,i1 &lt; 0)<SUB>31</SUB>>", "185": "<(&lt;operator&gt;.greaterEqualsThan,i1 &gt;= n)<SUB>31</SUB>>", "187": "<(IDENTIFIER,n,i1 &gt;= n)<SUB>31</SUB>>", "189": "<(IDENTIFIER,i1,i1 = -1)<SUB>31</SUB>>", "191": "<(LITERAL,1,-1)<SUB>31</SUB>>", "193": "<(&lt;operator&gt;.logicalOr,i2 &lt; 0 || i2 &gt;= n)<SUB>32</SUB>>", "195": "<(IDENTIFIER,i2,i2 &lt; 0)<SUB>32</SUB>>", "197": "<(&lt;operator&gt;.greaterEqualsThan,i2 &gt;= n)<SUB>32</SUB>>", "199": "<(IDENTIFIER,n,i2 &gt;= n)<SUB>32</SUB>>", "201": "<(IDENTIFIER,i2,i2 = -1)<SUB>32</SUB>>", "203": "<(LITERAL,1,-1)<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.logicalAnd,i1 == -1 &amp;&amp; i2 != -1)<SUB>34</SUB>>", "207": "<(IDENTIFIER,i1,i1 == -1)<SUB>34</SUB>>", "209": "<(LITERAL,1,-1)<SUB>34</SUB>>", "211": "<(IDENTIFIER,i2,i2 != -1)<SUB>34</SUB>>", "213": "<(LITERAL,1,-1)<SUB>34</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>35</SUB>>", "217": "<(IDENTIFIER,i,add(i2))<SUB>35</SUB>>", "219": "<(CONTROL_STRUCTURE,else,else)<SUB>37</SUB>>", "221": "<(&lt;operator&gt;.logicalAnd,i1 != -1 &amp;&amp; i2 == -1)<SUB>37</SUB>>", "223": "<(IDENTIFIER,i1,i1 != -1)<SUB>37</SUB>>", "225": "<(LITERAL,1,-1)<SUB>37</SUB>>", "227": "<(IDENTIFIER,i2,i2 == -1)<SUB>37</SUB>>", "229": "<(LITERAL,1,-1)<SUB>37</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>38</SUB>>", "233": "<(IDENTIFIER,i,add(i1))<SUB>38</SUB>>", "235": "<(CONTROL_STRUCTURE,else,else)<SUB>40</SUB>>", "237": "<(&lt;operator&gt;.logicalAnd,i1 != -1 &amp;&amp; i2 != -1)<SUB>40</SUB>>", "239": "<(IDENTIFIER,i1,i1 != -1)<SUB>40</SUB>>", "241": "<(LITERAL,1,-1)<SUB>40</SUB>>", "243": "<(IDENTIFIER,i2,i2 != -1)<SUB>40</SUB>>", "245": "<(LITERAL,1,-1)<SUB>40</SUB>>", "247": "<(add,add(i1))<SUB>41</SUB>>", "249": "<(IDENTIFIER,g,add(i1))<SUB>41</SUB>>", "251": "<(IDENTIFIER,i1,add(i1))<SUB>41</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>42</SUB>>", "255": "<(IDENTIFIER,i,add(i2))<SUB>42</SUB>>", "257": "<(CONTROL_STRUCTURE,else,else)<SUB>44</SUB>>", "259": "<(&lt;operator&gt;.assignment,impossible = true)<SUB>45</SUB>>", "261": "<(LITERAL,true,impossible = true)<SUB>45</SUB>>", "263": "<(CONTROL_STRUCTURE,if (impossible),if (impossible))<SUB>50</SUB>>", "265": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "267": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>51</SUB>>", "269": "<(FIELD_IDENTIFIER,out,out)<SUB>51</SUB>>", "271": "<(RETURN,return;,return;)<SUB>52</SUB>>", "272": "<(&lt;operator&gt;.assignment,ANY q = new LinkedList())<SUB>59</SUB>>", "274": "<(&lt;operator&gt;.alloc,new LinkedList())<SUB>59</SUB>>", "11": "<(IDENTIFIER,q,new LinkedList())<SUB>59</SUB>>", "277": "<(LOCAL,int i: int)<SUB>60</SUB>>", "279": "<(IDENTIFIER,i,int i = 0)<SUB>60</SUB>>", "281": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>60</SUB>>", "283": "<(IDENTIFIER,n,i &lt; n)<SUB>60</SUB>>", "285": "<(IDENTIFIER,i,i++)<SUB>60</SUB>>", "287": "<(CONTROL_STRUCTURE,if (visited[i] == false),if (visited[i] == false))<SUB>62</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,visited[i])<SUB>62</SUB>>", "291": "<(IDENTIFIER,i,visited[i] == false)<SUB>62</SUB>>", "293": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "294": "<(&lt;operator&gt;.assignment,ANY curq = new ArrayList&lt;Integer&gt;())<SUB>64</SUB>>", "296": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>64</SUB>>", "13": "<(IDENTIFIER,curq,new ArrayList&lt;Integer&gt;())<SUB>64</SUB>>", "299": "<(IDENTIFIER,curq,add(i))<SUB>66</SUB>>", "301": "<(add,add(i))<SUB>67</SUB>>", "303": "<(IDENTIFIER,i,add(i))<SUB>67</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,visited[i])<SUB>68</SUB>>", "307": "<(IDENTIFIER,i,visited[i] = true)<SUB>68</SUB>>", "309": "<(CONTROL_STRUCTURE,while (!q.isEmpty()),while (!q.isEmpty()))<SUB>70</SUB>>", "311": "<(isEmpty,isEmpty())<SUB>70</SUB>>", "313": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>>", "315": "<(&lt;operator&gt;.assignment,int curr = remove())<SUB>71</SUB>>", "317": "<(remove,remove())<SUB>71</SUB>>", "319": "<(LOCAL,int s: int)<SUB>72</SUB>>", "321": "<(IDENTIFIER,s,int s = size())<SUB>72</SUB>>", "323": "<(&lt;operator&gt;.indexAccess,g[curr])<SUB>72</SUB>>", "325": "<(IDENTIFIER,curr,size())<SUB>72</SUB>>", "327": "<(LOCAL,int j: int)<SUB>73</SUB>>", "329": "<(IDENTIFIER,j,int j = 0)<SUB>73</SUB>>", "331": "<(&lt;operator&gt;.lessThan,j &lt; s)<SUB>73</SUB>>", "333": "<(IDENTIFIER,s,j &lt; s)<SUB>73</SUB>>", "335": "<(IDENTIFIER,j,j++)<SUB>73</SUB>>", "337": "<(CONTROL_STRUCTURE,if (!visited[g[curr].get(j)]),if (!visited[g[curr].get(j)]))<SUB>74</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,visited[g[curr].get(j)])<SUB>74</SUB>>", "341": "<(get,get(j))<SUB>74</SUB>>", "343": "<(IDENTIFIER,g,get(j))<SUB>74</SUB>>", "345": "<(IDENTIFIER,j,get(j))<SUB>74</SUB>>", "347": "<(&lt;operator&gt;.assignment,visited[g[curr].get(j)] = true)<SUB>75</SUB>>", "349": "<(IDENTIFIER,visited,visited[g[curr].get(j)] = true)<SUB>75</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,g[curr])<SUB>75</SUB>>", "353": "<(IDENTIFIER,curr,get(j))<SUB>75</SUB>>", "355": "<(LITERAL,true,visited[g[curr].get(j)] = true)<SUB>75</SUB>>", "357": "<(IDENTIFIER,curq,add(g[curr].get(j)))<SUB>76</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,g[curr])<SUB>76</SUB>>", "361": "<(IDENTIFIER,curr,get(j))<SUB>76</SUB>>", "363": "<(add,add(g[curr].get(j)))<SUB>77</SUB>>", "365": "<(get,get(j))<SUB>77</SUB>>", "367": "<(IDENTIFIER,g,get(j))<SUB>77</SUB>>", "369": "<(IDENTIFIER,j,get(j))<SUB>77</SUB>>", "371": "<(&lt;operator&gt;.assignment,boolean found = true)<SUB>82</SUB>>", "373": "<(LITERAL,true,boolean found = true)<SUB>82</SUB>>", "375": "<(&lt;operator&gt;.assignment,int s = size())<SUB>84</SUB>>", "377": "<(size,size())<SUB>84</SUB>>", "379": "<(LOCAL,int[] temp: int[])<SUB>85</SUB>>", "381": "<(IDENTIFIER,temp,int[] temp = new int[s])<SUB>85</SUB>>", "383": "<(IDENTIFIER,s,new int[s])<SUB>85</SUB>>", "385": "<(LOCAL,int j: int)<SUB>86</SUB>>", "387": "<(IDENTIFIER,j,int j = 0)<SUB>86</SUB>>", "389": "<(&lt;operator&gt;.lessThan,j &lt; s)<SUB>86</SUB>>", "391": "<(IDENTIFIER,s,j &lt; s)<SUB>86</SUB>>", "393": "<(IDENTIFIER,j,j++)<SUB>86</SUB>>", "395": "<(&lt;operator&gt;.indexAccess,temp[j])<SUB>87</SUB>>", "397": "<(IDENTIFIER,j,temp[j] = p[curq.get(j)])<SUB>87</SUB>>", "399": "<(IDENTIFIER,p,temp[j] = p[curq.get(j)])<SUB>87</SUB>>", "401": "<(IDENTIFIER,curq,get(j))<SUB>87</SUB>>", "403": "<(sort,sort(temp))<SUB>88</SUB>>", "405": "<(IDENTIFIER,temp,sort(temp))<SUB>88</SUB>>", "407": "<(&lt;operator&gt;.assignment,int anss = -1)<SUB>90</SUB>>", "409": "<(&lt;operator&gt;.minus,-1)<SUB>90</SUB>>", "411": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; s); j++),for (int j = 0; Some(j &lt; s); j++))<SUB>92</SUB>>", "413": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>92</SUB>>", "415": "<(LITERAL,0,int j = 0)<SUB>92</SUB>>", "417": "<(IDENTIFIER,j,j &lt; s)<SUB>92</SUB>>", "419": "<(&lt;operator&gt;.postIncrement,j++)<SUB>92</SUB>>", "421": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>92</SUB>>", "423": "<(&lt;operator&gt;.assignment,int i3 = binarySearch(temp, a - temp[j]))<SUB>93</SUB>>", "425": "<(binarySearch,binarySearch(temp, a - temp[j]))<SUB>93</SUB>>", "427": "<(IDENTIFIER,temp,binarySearch(temp, a - temp[j]))<SUB>93</SUB>>", "429": "<(IDENTIFIER,a,a - temp[j])<SUB>93</SUB>>", "431": "<(IDENTIFIER,temp,a - temp[j])<SUB>93</SUB>>", "433": "<(CONTROL_STRUCTURE,if (i3 &lt; 0 || i3 &gt;= n),if (i3 &lt; 0 || i3 &gt;= n))<SUB>94</SUB>>", "435": "<(&lt;operator&gt;.lessThan,i3 &lt; 0)<SUB>94</SUB>>", "437": "<(LITERAL,0,i3 &lt; 0)<SUB>94</SUB>>", "439": "<(IDENTIFIER,i3,i3 &gt;= n)<SUB>94</SUB>>", "441": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>94</SUB>>", "443": "<(IDENTIFIER,found,found = false)<SUB>95</SUB>>", "445": "<(CONTROL_STRUCTURE,break;,break;)<SUB>96</SUB>>", "447": "<(&lt;operator&gt;.logicalNot,!found)<SUB>100</SUB>>", "449": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>100</SUB>>", "451": "<(IDENTIFIER,found,found = true)<SUB>101</SUB>>", "453": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; s); j++),for (int j = 0; Some(j &lt; s); j++))<SUB>103</SUB>>", "455": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>103</SUB>>", "457": "<(LITERAL,0,int j = 0)<SUB>103</SUB>>", "459": "<(IDENTIFIER,j,j &lt; s)<SUB>103</SUB>>", "461": "<(&lt;operator&gt;.postIncrement,j++)<SUB>103</SUB>>", "463": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>103</SUB>>", "465": "<(&lt;operator&gt;.assignment,int i3 = binarySearch(temp, b - temp[j]))<SUB>104</SUB>>", "467": "<(binarySearch,binarySearch(temp, b - temp[j]))<SUB>104</SUB>>", "469": "<(IDENTIFIER,temp,binarySearch(temp, b - temp[j]))<SUB>104</SUB>>", "471": "<(IDENTIFIER,b,b - temp[j])<SUB>104</SUB>>", "473": "<(IDENTIFIER,temp,b - temp[j])<SUB>104</SUB>>", "475": "<(CONTROL_STRUCTURE,if (i3 &lt; 0 || i3 &gt;= n),if (i3 &lt; 0 || i3 &gt;= n))<SUB>105</SUB>>", "477": "<(&lt;operator&gt;.lessThan,i3 &lt; 0)<SUB>105</SUB>>", "479": "<(LITERAL,0,i3 &lt; 0)<SUB>105</SUB>>", "481": "<(IDENTIFIER,i3,i3 &gt;= n)<SUB>105</SUB>>", "483": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>105</SUB>>", "485": "<(IDENTIFIER,found,found = false)<SUB>106</SUB>>", "487": "<(CONTROL_STRUCTURE,break;,break;)<SUB>107</SUB>>", "489": "<(IDENTIFIER,found,if (found))<SUB>111</SUB>>", "491": "<(IDENTIFIER,anss,anss = 1)<SUB>112</SUB>>", "493": "<(CONTROL_STRUCTURE,else,else)<SUB>113</SUB>>", "495": "<(&lt;operator&gt;.assignment,impossible = true)<SUB>114</SUB>>", "497": "<(LITERAL,true,impossible = true)<SUB>114</SUB>>", "499": "<(CONTROL_STRUCTURE,else,else)<SUB>120</SUB>>", "501": "<(IDENTIFIER,anss,anss = 0)<SUB>120</SUB>>", "503": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; s); j++),for (int j = 0; Some(j &lt; s); j++))<SUB>122</SUB>>", "505": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>122</SUB>>", "507": "<(LITERAL,0,int j = 0)<SUB>122</SUB>>", "509": "<(IDENTIFIER,j,j &lt; s)<SUB>122</SUB>>", "511": "<(&lt;operator&gt;.postIncrement,j++)<SUB>122</SUB>>", "513": "<(&lt;operator&gt;.assignment,ans[curq.get(j)] = anss)<SUB>123</SUB>>", "515": "<(IDENTIFIER,ans,ans[curq.get(j)] = anss)<SUB>123</SUB>>", "517": "<(IDENTIFIER,curq,get(j))<SUB>123</SUB>>", "519": "<(IDENTIFIER,anss,ans[curq.get(j)] = anss)<SUB>123</SUB>>", "521": "<(&lt;operator&gt;.logicalNot,!impossible)<SUB>130</SUB>>", "523": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>130</SUB>>", "525": "<(IDENTIFIER,w,println(&quot;YES&quot;))<SUB>131</SUB>>", "527": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>132</SUB>>", "529": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>132</SUB>>", "531": "<(LITERAL,0,int i = 0)<SUB>132</SUB>>", "533": "<(IDENTIFIER,i,i &lt; n)<SUB>132</SUB>>", "535": "<(&lt;operator&gt;.postIncrement,i++)<SUB>132</SUB>>", "537": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>132</SUB>>", "539": "<(&lt;operator&gt;.assignment,int i1 = binarySearch(p, orig[i]))<SUB>133</SUB>>", "541": "<(binarySearch,binarySearch(p, orig[i]))<SUB>133</SUB>>", "543": "<(IDENTIFIER,p,binarySearch(p, orig[i]))<SUB>133</SUB>>", "545": "<(IDENTIFIER,orig,binarySearch(p, orig[i]))<SUB>133</SUB>>", "547": "<(CONTROL_STRUCTURE,if (ans[i1] == -1),if (ans[i1] == -1))<SUB>134</SUB>>", "549": "<(&lt;operator&gt;.indexAccess,ans[i1])<SUB>134</SUB>>", "551": "<(IDENTIFIER,i1,ans[i1] == -1)<SUB>134</SUB>>", "553": "<(LITERAL,1,-1)<SUB>134</SUB>>", "555": "<(&lt;operator&gt;.indexAccess,ans[i1])<SUB>134</SUB>>", "557": "<(IDENTIFIER,i1,ans[i1] = 1)<SUB>134</SUB>>", "559": "<(print,print(ans[i1] + &quot; &quot;))<SUB>135</SUB>>", "561": "<(&lt;operator&gt;.addition,ans[i1] + &quot; &quot;)<SUB>135</SUB>>", "563": "<(IDENTIFIER,ans,ans[i1] + &quot; &quot;)<SUB>135</SUB>>", "565": "<(LITERAL,&quot; &quot;,ans[i1] + &quot; &quot;)<SUB>135</SUB>>", "567": "<(IDENTIFIER,w,println())<SUB>137</SUB>>", "569": "<(println,println(&quot;NO&quot;))<SUB>140</SUB>>", "571": "<(LITERAL,&quot;NO&quot;,println(&quot;NO&quot;))<SUB>140</SUB>>", "573": "<(IDENTIFIER,w,close())<SUB>142</SUB>>", "575": "<(MODIFIER,STATIC)>"}}