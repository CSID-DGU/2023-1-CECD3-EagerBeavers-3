{"edges": [["21", "22"], ["21", "23"], ["21", "140"], ["21", "141"], ["21", "142"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "6"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "63"], ["23", "64"], ["23", "67"], ["23", "68"], ["23", "72"], ["23", "73"], ["23", "74"], ["23", "75"], ["23", "80"], ["23", "135"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["44", "5"], ["45", "46"], ["45", "48"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "54"], ["48", "55"], ["48", "59"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "62"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["70", "71"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["80", "81"], ["80", "83"], ["81", "82"], ["83", "84"], ["83", "85"], ["83", "89"], ["83", "94"], ["83", "105"], ["83", "115"], ["83", "124"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["111", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["122", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["24", "30"], ["27", "34"], ["32", "39"], ["37", "43"], ["41", "44"], ["44", "46"], ["64", "70"], ["68", "78"], ["75", "81"], ["135", "142"], ["26", "24"], ["28", "27"], ["34", "32"], ["39", "37"], ["43", "41"], ["46", "52"], ["46", "64"], ["70", "68"], ["77", "75"], ["81", "87"], ["81", "138"], ["136", "135"], ["30", "28"], ["50", "57"], ["55", "59"], ["59", "46"], ["78", "77"], ["85", "91"], ["89", "98"], ["94", "107"], ["124", "81"], ["138", "136"], ["52", "50"], ["57", "55"], ["87", "85"], ["91", "89"], ["96", "94"], ["106", "112"], ["106", "117"], ["116", "122"], ["116", "128"], ["126", "124"], ["97", "102"], ["100", "96"], ["107", "106"], ["112", "117"], ["117", "116"], ["122", "128"], ["127", "132"], ["130", "126"], ["98", "97"], ["101", "100"], ["128", "127"], ["131", "130"], ["102", "101"], ["132", "131"], ["21", "26"], ["22", "142"], ["24", "142"], ["27", "142"], ["27", "142"], ["32", "142"], ["32", "142"], ["37", "142"], ["37", "142"], ["37", "142"], ["41", "142"], ["44", "142"], ["46", "142"], ["46", "142"], ["64", "142"], ["68", "142"], ["68", "142"], ["68", "142"], ["78", "142"], ["77", "142"], ["75", "142"], ["81", "142"], ["81", "142"], ["135", "142"], ["135", "142"], ["135", "142"], ["91", "142"], ["89", "142"], ["89", "142"], ["94", "142"], ["94", "142"], ["106", "142"], ["112", "142"], ["117", "142"], ["116", "142"], ["116", "142"], ["116", "142"], ["122", "142"], ["124", "142"], ["127", "142"], ["126", "142"], ["131", "142"], ["130", "142"], ["126", "142"], ["124", "142"], ["124", "142"], ["50", "142"], ["55", "142"], ["55", "142"], ["59", "142"], ["59", "142"], ["59", "142"], ["21", "22"], ["21", "24"], ["34", "32"], ["39", "37"], ["21", "41"], ["21", "64"], ["70", "68"], ["77", "75"], ["24", "27"], ["21", "27"], ["41", "44"], ["21", "44"], ["64", "135"], ["112", "135"], ["122", "135"], ["21", "135"], ["27", "34"], ["21", "34"], ["34", "39"], ["21", "39"], ["39", "46"], ["57", "46"], ["21", "46"], ["52", "50"], ["57", "55"], ["21", "70"], ["78", "77"], ["75", "81"], ["87", "81"], ["21", "81"], ["87", "85"], ["91", "89"], ["91", "89"], ["96", "94"], ["96", "94"], ["21", "124"], ["91", "124"], ["130", "124"], ["130", "124"], ["44", "59"], ["21", "59"], ["50", "59"], ["55", "59"], ["44", "78"], ["59", "78"], ["21", "78"], ["46", "52"], ["21", "52"], ["52", "57"], ["21", "57"], ["81", "87"], ["21", "87"], ["78", "91"], ["21", "91"], ["85", "91"], ["21", "96"], ["91", "96"], ["100", "96"], ["100", "96"], ["107", "106"], ["107", "106"], ["37", "106"], ["116", "106"], ["21", "106"], ["21", "112"], ["117", "116"], ["117", "116"], ["106", "116"], ["21", "116"], ["21", "126"], ["91", "126"], ["130", "126"], ["130", "126"], ["21", "97"], ["91", "97"], ["21", "100"], ["89", "100"], ["94", "107"], ["21", "107"], ["68", "107"], ["124", "107"], ["64", "112"], ["122", "112"], ["107", "117"], ["21", "117"], ["107", "117"], ["64", "122"], ["112", "122"], ["21", "122"], ["21", "127"], ["91", "127"], ["21", "130"], ["89", "130"], ["21", "101"], ["89", "101"], ["21", "131"], ["89", "131"], ["46", "57"], ["46", "52"], ["46", "46"], ["46", "50"], ["46", "59"], ["46", "55"], ["81", "107"], ["81", "94"], ["81", "96"], ["81", "89"], ["81", "98"], ["81", "116"], ["81", "128"], ["81", "81"], ["81", "102"], ["81", "131"], ["81", "85"], ["81", "132"], ["81", "106"], ["81", "87"], ["81", "97"], ["81", "91"], ["81", "101"], ["81", "126"], ["81", "130"], ["81", "100"], ["81", "117"], ["81", "127"], ["81", "124"], ["106", "112"], ["116", "122"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int n: int)<SUB>5</SUB>>", "33": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "35": "<(IDENTIFIER,s,nextInt())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>6</SUB>>", "39": "<(nextInt,nextInt())<SUB>6</SUB>>", "6": "<(LOCAL,TreeMap&lt;Integer, Integer&gt; map: ANY)<SUB>7</SUB>>", "42": "<(IDENTIFIER,map,ANY map = new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "44": "<(&lt;init&gt;,new TreeMap&lt;Integer, Integer&gt;())<SUB>7</SUB>>", "45": "<(CONTROL_STRUCTURE,while (s.hasNextInt()),while (s.hasNextInt()))<SUB>10</SUB>>", "47": "<(IDENTIFIER,s,hasNextInt())<SUB>10</SUB>>", "49": "<(LOCAL,int i: int)<SUB>12</SUB>>", "51": "<(IDENTIFIER,i,int i = nextInt())<SUB>12</SUB>>", "53": "<(IDENTIFIER,s,nextInt())<SUB>12</SUB>>", "55": "<(&lt;operator&gt;.assignment,int j = nextInt())<SUB>13</SUB>>", "57": "<(nextInt,nextInt())<SUB>13</SUB>>", "59": "<(put,put(i, j))<SUB>14</SUB>>", "61": "<(IDENTIFIER,i,put(i, j))<SUB>14</SUB>>", "63": "<(LOCAL,int count: int)<SUB>20</SUB>>", "65": "<(IDENTIFIER,count,int count = 0)<SUB>20</SUB>>", "67": "<(LOCAL,double left: double)<SUB>21</SUB>>", "69": "<(IDENTIFIER,left,double left = -100000)<SUB>21</SUB>>", "71": "<(LITERAL,100000,-100000)<SUB>21</SUB>>", "73": "<(LOCAL,int size: int)<SUB>23</SUB>>", "75": "<(&lt;operator&gt;.assignment,)<SUB>24</SUB>>", "77": "<(iterator,&lt;empty&gt;)<SUB>24</SUB>>", "79": "<(IDENTIFIER,map,keySet())<SUB>24</SUB>>", "81": "<(hasNext,&lt;empty&gt;)<SUB>24</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "85": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>24</SUB>>", "87": "<(next,&lt;empty&gt;)<SUB>24</SUB>>", "89": "<(&lt;operator&gt;.assignment,size = get(i))<SUB>26</SUB>>", "91": "<(get,get(i))<SUB>26</SUB>>", "93": "<(IDENTIFIER,i,get(i))<SUB>26</SUB>>", "95": "<(IDENTIFIER,right,right = (double) i - (double) size / 2.0)<SUB>27</SUB>>", "97": "<(&lt;operator&gt;.cast,(double) i)<SUB>27</SUB>>", "99": "<(IDENTIFIER,i,(double) i)<SUB>27</SUB>>", "101": "<(&lt;operator&gt;.cast,(double) size)<SUB>27</SUB>>", "103": "<(IDENTIFIER,size,(double) size)<SUB>27</SUB>>", "105": "<(CONTROL_STRUCTURE,if (right - left &gt; t),if (right - left &gt; t))<SUB>29</SUB>>", "107": "<(&lt;operator&gt;.subtraction,right - left)<SUB>29</SUB>>", "109": "<(IDENTIFIER,left,right - left)<SUB>29</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "113": "<(IDENTIFIER,count,count += 2)<SUB>31</SUB>>", "115": "<(CONTROL_STRUCTURE,if (right - left == t),if (right - left == t))<SUB>33</SUB>>", "117": "<(&lt;operator&gt;.subtraction,right - left)<SUB>33</SUB>>", "119": "<(IDENTIFIER,left,right - left)<SUB>33</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "123": "<(IDENTIFIER,count,count++)<SUB>35</SUB>>", "125": "<(IDENTIFIER,left,left = (double) i + (double) size / 2.0)<SUB>38</SUB>>", "127": "<(&lt;operator&gt;.cast,(double) i)<SUB>38</SUB>>", "129": "<(IDENTIFIER,i,(double) i)<SUB>38</SUB>>", "131": "<(&lt;operator&gt;.cast,(double) size)<SUB>38</SUB>>", "133": "<(IDENTIFIER,size,(double) size)<SUB>38</SUB>>", "135": "<(println,System.out.println(count))<SUB>41</SUB>>", "137": "<(IDENTIFIER,System,System.out.println(count))<SUB>41</SUB>>", "139": "<(IDENTIFIER,count,System.out.println(count))<SUB>41</SUB>>", "141": "<(MODIFIER,STATIC)>"}}