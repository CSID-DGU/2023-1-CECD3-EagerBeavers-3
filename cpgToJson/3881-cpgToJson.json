{"edges": [["21", "22"], ["21", "23"], ["21", "200"], ["21", "201"], ["21", "202"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "41"], ["23", "42"], ["23", "43"], ["23", "46"], ["23", "195"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["39", "5"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "51"], ["47", "48"], ["47", "50"], ["48", "49"], ["51", "52"], ["51", "53"], ["51", "57"], ["51", "58"], ["51", "62"], ["51", "77"], ["51", "78"], ["51", "84"], ["51", "89"], ["51", "90"], ["51", "93"], ["51", "96"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "66"], ["62", "69"], ["62", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "100"], ["96", "103"], ["96", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "166"], ["106", "107"], ["106", "118"], ["106", "128"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["118", "119"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["128", "129"], ["129", "130"], ["129", "135"], ["129", "143"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "138"], ["136", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["144", "145"], ["144", "157"], ["145", "146"], ["145", "155"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "154"], ["151", "152"], ["151", "153"], ["155", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "170"], ["166", "173"], ["166", "175"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["173", "174"], ["175", "176"], ["176", "177"], ["176", "180"], ["176", "187"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["187", "188"], ["188", "189"], ["188", "194"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["24", "30"], ["27", "34"], ["32", "38"], ["36", "39"], ["39", "43"], ["43", "48"], ["195", "202"], ["26", "24"], ["28", "27"], ["34", "32"], ["38", "36"], ["47", "55"], ["47", "198"], ["196", "195"], ["30", "28"], ["48", "47"], ["53", "60"], ["58", "63"], ["78", "85"], ["84", "90"], ["90", "93"], ["93", "97"], ["198", "196"], ["55", "53"], ["60", "58"], ["63", "66"], ["66", "72"], ["66", "81"], ["69", "66"], ["71", "69"], ["80", "78"], ["85", "84"], ["97", "100"], ["100", "48"], ["100", "108"], ["103", "100"], ["72", "75"], ["75", "71"], ["81", "80"], ["107", "120"], ["107", "131"], ["167", "170"], ["170", "177"], ["170", "103"], ["173", "170"], ["108", "114"], ["111", "107"], ["119", "167"], ["112", "111"], ["120", "124"], ["123", "119"], ["130", "136"], ["130", "147"], ["177", "183"], ["177", "191"], ["180", "173"], ["114", "112"], ["124", "123"], ["131", "130"], ["136", "139"], ["138", "167"], ["181", "180"], ["188", "173"], ["139", "138"], ["157", "167"], ["183", "181"], ["189", "188"], ["146", "155"], ["146", "158"], ["155", "147"], ["158", "162"], ["161", "157"], ["191", "189"], ["147", "151"], ["150", "146"], ["162", "161"], ["151", "150"], ["21", "26"], ["22", "202"], ["24", "202"], ["27", "202"], ["27", "202"], ["34", "202"], ["32", "202"], ["32", "202"], ["36", "202"], ["39", "202"], ["43", "202"], ["48", "202"], ["47", "202"], ["47", "202"], ["47", "202"], ["195", "202"], ["195", "202"], ["195", "202"], ["55", "202"], ["53", "202"], ["53", "202"], ["58", "202"], ["58", "202"], ["58", "202"], ["63", "202"], ["78", "202"], ["80", "202"], ["78", "202"], ["78", "202"], ["84", "202"], ["84", "202"], ["90", "202"], ["90", "202"], ["93", "202"], ["97", "202"], ["100", "202"], ["100", "202"], ["100", "202"], ["107", "202"], ["111", "202"], ["107", "202"], ["107", "202"], ["130", "202"], ["130", "202"], ["150", "202"], ["146", "202"], ["146", "202"], ["157", "202"], ["157", "202"], ["157", "202"], ["155", "202"], ["136", "202"], ["138", "202"], ["138", "202"], ["119", "202"], ["119", "202"], ["119", "202"], ["167", "202"], ["170", "202"], ["170", "202"], ["170", "202"], ["103", "202"], ["177", "202"], ["189", "202"], ["188", "202"], ["188", "202"], ["181", "202"], ["180", "202"], ["180", "202"], ["173", "202"], ["71", "202"], ["75", "202"], ["71", "202"], ["71", "202"], ["69", "202"], ["21", "22"], ["21", "24"], ["34", "32"], ["21", "36"], ["21", "43"], ["24", "27"], ["21", "27"], ["36", "39"], ["21", "39"], ["39", "195"], ["93", "195"], ["189", "195"], ["181", "195"], ["21", "195"], ["27", "34"], ["21", "34"], ["48", "47"], ["32", "47"], ["21", "47"], ["55", "53"], ["60", "58"], ["80", "78"], ["21", "84"], ["21", "90"], ["43", "48"], ["21", "48"], ["21", "63"], ["75", "71"], ["39", "93"], ["189", "93"], ["181", "93"], ["21", "93"], ["21", "97"], ["34", "55"], ["75", "55"], ["21", "55"], ["53", "60"], ["21", "60"], ["63", "66"], ["69", "66"], ["21", "66"], ["60", "66"], ["66", "69"], ["21", "69"], ["66", "80"], ["21", "80"], ["97", "100"], ["103", "100"], ["21", "100"], ["66", "100"], ["114", "103"], ["21", "103"], ["55", "75"], ["21", "75"], ["66", "81"], ["21", "81"], ["21", "167"], ["58", "107"], ["130", "107"], ["150", "107"], ["71", "107"], ["21", "107"], ["78", "119"], ["157", "119"], ["138", "119"], ["21", "119"], ["167", "170"], ["173", "170"], ["21", "170"], ["90", "170"], ["155", "170"], ["136", "170"], ["177", "170"], ["177", "173"], ["21", "173"], ["58", "111"], ["21", "111"], ["78", "123"], ["157", "123"], ["138", "123"], ["119", "123"], ["21", "123"], ["58", "130"], ["107", "130"], ["21", "130"], ["21", "138"], ["170", "177"], ["21", "177"], ["170", "177"], ["181", "180"], ["181", "180"], ["21", "180"], ["100", "114"], ["21", "114"], ["90", "136"], ["170", "136"], ["21", "136"], ["78", "157"], ["146", "157"], ["21", "157"], ["93", "181"], ["189", "181"], ["21", "181"], ["78", "181"], ["189", "181"], ["189", "188"], ["189", "188"], ["21", "188"], ["93", "189"], ["181", "189"], ["21", "189"], ["78", "189"], ["181", "189"], ["78", "146"], ["157", "146"], ["138", "146"], ["119", "146"], ["150", "146"], ["150", "146"], ["90", "155"], ["170", "155"], ["21", "155"], ["78", "161"], ["146", "161"], ["21", "161"], ["58", "150"], ["130", "150"], ["21", "150"], ["47", "60"], ["47", "81"], ["47", "84"], ["47", "85"], ["47", "97"], ["47", "93"], ["47", "90"], ["47", "80"], ["47", "58"], ["47", "100"], ["47", "47"], ["47", "48"], ["47", "66"], ["47", "53"], ["47", "63"], ["47", "55"], ["47", "78"], ["66", "75"], ["66", "69"], ["66", "66"], ["66", "72"], ["66", "71"], ["100", "107"], ["100", "167"], ["100", "114"], ["100", "103"], ["100", "170"], ["100", "112"], ["100", "100"], ["100", "108"], ["100", "111"], ["107", "120"], ["107", "131"], ["107", "119"], ["107", "130"], ["107", "123"], ["107", "124"], ["170", "170"], ["170", "173"], ["170", "177"], ["130", "136"], ["130", "146"], ["130", "161"], ["130", "150"], ["130", "151"], ["130", "162"], ["130", "138"], ["130", "139"], ["130", "158"], ["130", "157"], ["130", "147"], ["177", "188"], ["177", "189"], ["177", "181"], ["177", "191"], ["177", "180"], ["177", "183"], ["146", "146"], ["146", "150"], ["146", "151"], ["146", "155"], ["146", "147"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new FastReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new FastReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastReader(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int t: int)<SUB>3</SUB>>", "33": "<(IDENTIFIER,t,int t = nextInt())<SUB>3</SUB>>", "35": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "36": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>4</SUB>>", "38": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>4</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>4</SUB>>", "41": "<(LOCAL,int j: int)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int tc = 0)<SUB>5</SUB>>", "45": "<(LITERAL,0,int tc = 0)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.lessThan,tc++ &lt; t)<SUB>6</SUB>>", "49": "<(IDENTIFIER,tc,tc++)<SUB>6</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(LOCAL,int[] arr: int[])<SUB>8</SUB>>", "59": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,new int[n])<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,i = 0)<SUB>9</SUB>>", "65": "<(LITERAL,0,i = 0)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>10</SUB>>", "73": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>10</SUB>>", "75": "<(nextInt,nextInt())<SUB>10</SUB>>", "77": "<(LOCAL,int[] ans: int[])<SUB>11</SUB>>", "79": "<(IDENTIFIER,ans,int[] ans = new int[n + 4])<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.addition,n + 4)<SUB>11</SUB>>", "83": "<(LITERAL,4,n + 4)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,ans[0])<SUB>12</SUB>>", "87": "<(LITERAL,0,ans[0] = 1)<SUB>12</SUB>>", "89": "<(LOCAL,int pos: int)<SUB>13</SUB>>", "91": "<(IDENTIFIER,pos,int pos = 0)<SUB>13</SUB>>", "93": "<(append,sb.append(&quot;1\\n&quot;))<SUB>14</SUB>>", "95": "<(LITERAL,&quot;1\\n&quot;,sb.append(&quot;1\\n&quot;))<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.assignment,i = 1)<SUB>15</SUB>>", "99": "<(LITERAL,1,i = 1)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,i &lt; n)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.equals,arr[i] == arr[i - 1] + 1)<SUB>16</SUB>>", "109": "<(IDENTIFIER,arr,arr[i] == arr[i - 1] + 1)<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.addition,arr[i - 1] + 1)<SUB>16</SUB>>", "113": "<(IDENTIFIER,arr,arr[i - 1] + 1)<SUB>16</SUB>>", "115": "<(IDENTIFIER,i,i - 1)<SUB>16</SUB>>", "117": "<(LITERAL,1,arr[i - 1] + 1)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.assignment,ans[pos] = ans[pos] + 1)<SUB>17</SUB>>", "121": "<(IDENTIFIER,ans,ans[pos] = ans[pos] + 1)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.addition,ans[pos] + 1)<SUB>17</SUB>>", "125": "<(IDENTIFIER,ans,ans[pos] + 1)<SUB>17</SUB>>", "127": "<(LITERAL,1,ans[pos] + 1)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,if (arr[i] == 1),if (arr[i] == 1))<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>19</SUB>>", "133": "<(IDENTIFIER,i,arr[i] == 1)<SUB>19</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "137": "<(IDENTIFIER,pos,pos++)<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,ans[pos])<SUB>21</SUB>>", "141": "<(IDENTIFIER,pos,ans[pos] = 1)<SUB>21</SUB>>", "143": "<(CONTROL_STRUCTURE,else,else)<SUB>23</SUB>>", "145": "<(CONTROL_STRUCTURE,while (ans[pos] != arr[i] - 1),while (ans[pos] != arr[i] - 1))<SUB>24</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,ans[pos])<SUB>24</SUB>>", "149": "<(IDENTIFIER,pos,ans[pos] != arr[i] - 1)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>24</SUB>>", "153": "<(IDENTIFIER,i,arr[i] - 1)<SUB>24</SUB>>", "155": "<(&lt;operator&gt;.postDecrement,pos--)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.assignment,ans[pos] = ans[pos] + 1)<SUB>26</SUB>>", "159": "<(IDENTIFIER,ans,ans[pos] = ans[pos] + 1)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.addition,ans[pos] + 1)<SUB>26</SUB>>", "163": "<(IDENTIFIER,ans,ans[pos] + 1)<SUB>26</SUB>>", "165": "<(LITERAL,1,ans[pos] + 1)<SUB>26</SUB>>", "167": "<(&lt;operator&gt;.assignment,j = 0)<SUB>28</SUB>>", "169": "<(LITERAL,0,j = 0)<SUB>28</SUB>>", "171": "<(IDENTIFIER,j,j &lt;= pos)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "177": "<(&lt;operator&gt;.lessThan,j &lt; pos)<SUB>29</SUB>>", "179": "<(IDENTIFIER,pos,j &lt; pos)<SUB>29</SUB>>", "181": "<(append,sb.append(ans[j]))<SUB>30</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,ans[j])<SUB>30</SUB>>", "185": "<(IDENTIFIER,j,sb.append(ans[j]))<SUB>30</SUB>>", "187": "<(CONTROL_STRUCTURE,else,else)<SUB>32</SUB>>", "189": "<(append,sb.append(ans[j]))<SUB>32</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,ans[j])<SUB>32</SUB>>", "193": "<(IDENTIFIER,j,sb.append(ans[j]))<SUB>32</SUB>>", "195": "<(println,System.out.println(sb))<SUB>37</SUB>>", "197": "<(IDENTIFIER,System,System.out.println(sb))<SUB>37</SUB>>", "199": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>37</SUB>>", "201": "<(MODIFIER,STATIC)>"}}