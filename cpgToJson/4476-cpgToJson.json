{"edges": [["21", "23"], ["21", "293"], ["21", "294"], ["21", "295"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "54"], ["23", "55"], ["23", "59"], ["23", "103"], ["23", "104"], ["23", "108"], ["23", "109"], ["23", "113"], ["23", "131"], ["23", "136"], ["23", "141"], ["23", "201"], ["23", "282"], ["23", "291"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "70"], ["59", "72"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "81"], ["72", "82"], ["72", "91"], ["72", "97"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["91", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["104", "105"], ["104", "106"], ["106", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["113", "121"], ["113", "123"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["141", "146"], ["141", "151"], ["141", "153"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "166"], ["164", "173"], ["164", "180"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "186"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["186", "196"], ["187", "188"], ["187", "195"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "211"], ["201", "213"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["208", "209"], ["208", "210"], ["211", "212"], ["213", "214"], ["213", "215"], ["213", "222"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["222", "223"], ["222", "224"], ["222", "227"], ["222", "230"], ["222", "232"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["232", "233"], ["232", "242"], ["232", "243"], ["232", "250"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "254"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["254", "259"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["271", "272"], ["271", "281"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "280"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "290"], ["287", "288"], ["287", "289"], ["291", "292"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "51"], ["49", "57"], ["55", "61"], ["104", "111"], ["109", "115"], ["131", "138"], ["136", "143"], ["282", "291"], ["291", "295"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["57", "55"], ["61", "67"], ["64", "77"], ["64", "106"], ["70", "67"], ["106", "104"], ["111", "109"], ["115", "118"], ["118", "125"], ["118", "132"], ["121", "118"], ["132", "131"], ["138", "136"], ["143", "148"], ["146", "156"], ["146", "203"], ["151", "148"], ["203", "208"], ["206", "218"], ["206", "287"], ["211", "208"], ["284", "282"], ["30", "28"], ["37", "35"], ["66", "64"], ["74", "87"], ["82", "93"], ["91", "99"], ["97", "70"], ["124", "121"], ["148", "146"], ["208", "206"], ["215", "224"], ["286", "284"], ["67", "66"], ["76", "74"], ["84", "82"], ["92", "91"], ["98", "97"], ["125", "130"], ["128", "124"], ["156", "159"], ["159", "170"], ["159", "151"], ["162", "159"], ["217", "215"], ["224", "227"], ["227", "237"], ["227", "211"], ["230", "227"], ["287", "286"], ["77", "76"], ["85", "84"], ["93", "92"], ["99", "98"], ["130", "128"], ["166", "174"], ["180", "162"], ["218", "217"], ["243", "251"], ["250", "230"], ["87", "85"], ["168", "166"], ["174", "177"], ["174", "182"], ["177", "182"], ["181", "192"], ["186", "180"], ["234", "230"], ["234", "247"], ["245", "243"], ["251", "256"], ["254", "250"], ["170", "168"], ["182", "181"], ["187", "197"], ["196", "186"], ["235", "234"], ["247", "245"], ["256", "260"], ["259", "254"], ["188", "187"], ["197", "196"], ["237", "235"], ["260", "267"], ["263", "259"], ["190", "188"], ["265", "263"], ["192", "190"], ["266", "276"], ["271", "265"], ["267", "266"], ["272", "271"], ["274", "272"], ["275", "274"], ["276", "275"], ["21", "26"], ["22", "295"], ["24", "295"], ["27", "295"], ["27", "295"], ["31", "295"], ["34", "295"], ["34", "295"], ["39", "295"], ["39", "295"], ["44", "295"], ["44", "295"], ["49", "295"], ["49", "295"], ["49", "295"], ["57", "295"], ["55", "295"], ["55", "295"], ["67", "295"], ["66", "295"], ["64", "295"], ["64", "295"], ["104", "295"], ["104", "295"], ["109", "295"], ["109", "295"], ["109", "295"], ["115", "295"], ["118", "295"], ["118", "295"], ["131", "295"], ["131", "295"], ["136", "295"], ["138", "295"], ["136", "295"], ["136", "295"], ["203", "295"], ["206", "295"], ["206", "295"], ["287", "295"], ["286", "295"], ["282", "295"], ["282", "295"], ["291", "295"], ["291", "295"], ["215", "295"], ["218", "295"], ["217", "295"], ["215", "295"], ["215", "295"], ["224", "295"], ["227", "295"], ["227", "295"], ["211", "295"], ["235", "295"], ["234", "295"], ["234", "295"], ["245", "295"], ["243", "295"], ["243", "295"], ["250", "295"], ["259", "295"], ["263", "295"], ["265", "295"], ["274", "295"], ["265", "295"], ["263", "295"], ["259", "295"], ["254", "295"], ["250", "295"], ["250", "295"], ["230", "295"], ["156", "295"], ["159", "295"], ["159", "295"], ["151", "295"], ["168", "295"], ["168", "295"], ["166", "295"], ["166", "295"], ["174", "295"], ["177", "295"], ["180", "295"], ["192", "295"], ["190", "295"], ["186", "295"], ["186", "295"], ["180", "295"], ["180", "295"], ["162", "295"], ["124", "295"], ["124", "295"], ["124", "295"], ["121", "295"], ["74", "295"], ["76", "295"], ["74", "295"], ["74", "295"], ["82", "295"], ["85", "295"], ["84", "295"], ["82", "295"], ["82", "295"], ["91", "295"], ["91", "295"], ["97", "295"], ["97", "295"], ["70", "295"], ["254", "295"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["57", "55"], ["106", "104"], ["111", "109"], ["21", "131"], ["138", "136"], ["138", "136"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "61"], ["21", "115"], ["21", "143"], ["21", "203"], ["34", "282"], ["21", "282"], ["109", "282"], ["282", "291"], ["21", "291"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["44", "51"], ["21", "51"], ["46", "57"], ["21", "57"], ["61", "64"], ["70", "64"], ["21", "64"], ["66", "64"], ["66", "64"], ["21", "70"], ["77", "70"], ["76", "74"], ["76", "74"], ["84", "82"], ["84", "82"], ["21", "106"], ["106", "111"], ["21", "111"], ["115", "118"], ["121", "118"], ["21", "118"], ["111", "118"], ["118", "121"], ["21", "121"], ["118", "138"], ["21", "138"], ["51", "138"], ["143", "146"], ["151", "146"], ["21", "146"], ["148", "146"], ["148", "146"], ["146", "151"], ["190", "151"], ["21", "151"], ["203", "206"], ["211", "206"], ["21", "206"], ["208", "206"], ["208", "206"], ["218", "211"], ["235", "211"], ["245", "211"], ["21", "211"], ["218", "215"], ["218", "215"], ["21", "215"], ["67", "66"], ["21", "66"], ["21", "148"], ["138", "148"], ["159", "148"], ["21", "156"], ["21", "208"], ["148", "208"], ["227", "208"], ["21", "224"], ["287", "286"], ["287", "286"], ["21", "286"], ["55", "67"], ["85", "67"], ["21", "67"], ["77", "76"], ["77", "76"], ["21", "76"], ["85", "84"], ["85", "84"], ["21", "84"], ["156", "159"], ["162", "159"], ["21", "159"], ["148", "159"], ["159", "162"], ["21", "162"], ["168", "166"], ["168", "166"], ["218", "217"], ["218", "217"], ["21", "217"], ["224", "227"], ["230", "227"], ["21", "227"], ["208", "227"], ["276", "227"], ["237", "230"], ["247", "230"], ["21", "230"], ["245", "243"], ["245", "243"], ["254", "250"], ["254", "250"], ["254", "250"], ["21", "287"], ["208", "287"], ["67", "77"], ["21", "77"], ["64", "77"], ["77", "85"], ["21", "85"], ["77", "85"], ["21", "177"], ["168", "218"], ["21", "218"], ["206", "218"], ["77", "87"], ["21", "87"], ["170", "168"], ["21", "168"], ["170", "168"], ["166", "174"], ["21", "174"], ["235", "234"], ["235", "234"], ["21", "234"], ["235", "245"], ["21", "245"], ["247", "245"], ["247", "245"], ["21", "254"], ["109", "254"], ["250", "254"], ["263", "254"], ["263", "254"], ["168", "170"], ["21", "170"], ["146", "170"], ["190", "170"], ["218", "235"], ["245", "235"], ["21", "235"], ["237", "235"], ["237", "235"], ["21", "247"], ["237", "247"], ["109", "259"], ["263", "259"], ["263", "259"], ["21", "237"], ["227", "237"], ["215", "263"], ["21", "263"], ["265", "263"], ["265", "263"], ["170", "190"], ["21", "190"], ["192", "190"], ["192", "190"], ["180", "265"], ["21", "192"], ["174", "192"], ["177", "192"], ["275", "274"], ["275", "274"], ["243", "274"], ["21", "274"], ["276", "275"], ["276", "275"], ["21", "275"], ["21", "276"], ["227", "276"], ["64", "77"], ["64", "64"], ["64", "98"], ["64", "84"], ["64", "85"], ["64", "67"], ["64", "74"], ["64", "92"], ["64", "76"], ["64", "87"], ["64", "97"], ["64", "91"], ["64", "93"], ["64", "70"], ["64", "66"], ["64", "99"], ["64", "82"], ["118", "128"], ["118", "121"], ["118", "130"], ["118", "118"], ["118", "124"], ["118", "125"], ["146", "146"], ["146", "151"], ["146", "148"], ["146", "159"], ["146", "156"], ["206", "215"], ["206", "206"], ["206", "208"], ["206", "224"], ["206", "217"], ["206", "211"], ["206", "227"], ["206", "218"], ["159", "188"], ["159", "192"], ["159", "196"], ["159", "197"], ["159", "162"], ["159", "168"], ["159", "170"], ["159", "181"], ["159", "187"], ["159", "190"], ["159", "174"], ["159", "182"], ["159", "186"], ["159", "180"], ["159", "166"], ["159", "159"], ["227", "230"], ["227", "235"], ["227", "237"], ["227", "234"], ["227", "227"], ["174", "177"], ["234", "272"], ["234", "275"], ["234", "243"], ["234", "245"], ["234", "256"], ["234", "247"], ["234", "259"], ["234", "267"], ["234", "276"], ["234", "265"], ["234", "274"], ["234", "260"], ["234", "251"], ["234", "254"], ["234", "263"], ["234", "271"], ["234", "250"], ["234", "266"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastIO(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastIO(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastIO(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastIO(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,int m: int)<SUB>5</SUB>>", "45": "<(IDENTIFIER,m,int m = nextInt())<SUB>5</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,int[][] num = new int[m][m])<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.alloc,new int[m][m])>", "53": "<(IDENTIFIER,m,new int[m][m])<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,String str = next())<SUB>7</SUB>>", "57": "<(next,next())<SUB>7</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; str.length() - 1); i++),for (int i = 0; Some(i &lt; str.length() - 1); i++))<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,i &lt; str.length() - 1)<SUB>8</SUB>>", "67": "<(length,str.length())<SUB>8</SUB>>", "69": "<(LITERAL,1,str.length() - 1)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "73": "<(LOCAL,int a: int)<SUB>9</SUB>>", "75": "<(IDENTIFIER,a,int a = str.charAt(i) - 'a')<SUB>9</SUB>>", "77": "<(charAt,str.charAt(i))<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,str.charAt(i))<SUB>9</SUB>>", "81": "<(LOCAL,int b: int)<SUB>10</SUB>>", "83": "<(IDENTIFIER,b,int b = str.charAt(i + 1) - 'a')<SUB>10</SUB>>", "85": "<(charAt,str.charAt(i + 1))<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.addition,i + 1)<SUB>10</SUB>>", "89": "<(LITERAL,1,i + 1)<SUB>10</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,num[a][b]++)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,num[a])<SUB>11</SUB>>", "95": "<(IDENTIFIER,a,num[a][b]++)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,num[b][a]++)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,num[b])<SUB>12</SUB>>", "101": "<(IDENTIFIER,b,num[b][a]++)<SUB>12</SUB>>", "103": "<(LOCAL,int[] lowbit: int[])<SUB>14</SUB>>", "105": "<(IDENTIFIER,lowbit,int[] lowbit = new int[MXN])<SUB>14</SUB>>", "107": "<(IDENTIFIER,MXN,new int[MXN])<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.assignment,int[] dp = new int[MXN])<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.alloc,new int[MXN])>", "113": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; MXN); i++),for (int i = 0; Some(i &lt; MXN); i++))<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "117": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "119": "<(IDENTIFIER,i,i &lt; MXN)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>17</SUB>>", "127": "<(IDENTIFIER,i,dp[i] = Integer.MAX_VALUE)<SUB>17</SUB>>", "129": "<(IDENTIFIER,Integer,dp[i] = Integer.MAX_VALUE)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>19</SUB>>", "133": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>19</SUB>>", "135": "<(LITERAL,0,dp[0] = 0)<SUB>19</SUB>>", "137": "<(IDENTIFIER,good,good = new int[MXN][m])<SUB>20</SUB>>", "139": "<(IDENTIFIER,MXN,new int[MXN][m])<SUB>20</SUB>>", "141": "<(CONTROL_STRUCTURE,for (int msk = 0; Some(msk &lt; (1 &lt;&lt; m)); msk++),for (int msk = 0; Some(msk &lt; (1 &lt;&lt; m)); msk++))<SUB>21</SUB>>", "143": "<(&lt;operator&gt;.assignment,int msk = 0)<SUB>21</SUB>>", "145": "<(LITERAL,0,int msk = 0)<SUB>21</SUB>>", "147": "<(IDENTIFIER,msk,msk &lt; (1 &lt;&lt; m))<SUB>21</SUB>>", "149": "<(LITERAL,1,1 &lt;&lt; m)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,msk++)<SUB>21</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "155": "<(LOCAL,int i: int)<SUB>22</SUB>>", "157": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>22</SUB>>", "161": "<(IDENTIFIER,m,i &lt; m)<SUB>22</SUB>>", "163": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "165": "<(LOCAL,int low: int)<SUB>23</SUB>>", "167": "<(IDENTIFIER,low,int low = Integer.numberOfTrailingZeros(Integer.lowestOneBit(msk)))<SUB>23</SUB>>", "169": "<(IDENTIFIER,Integer,Integer.numberOfTrailingZeros(Integer.lowestOneBit(msk)))<SUB>23</SUB>>", "171": "<(IDENTIFIER,Integer,Integer.lowestOneBit(msk))<SUB>23</SUB>>", "173": "<(CONTROL_STRUCTURE,if (low == 32),if (low == 32))<SUB>24</SUB>>", "175": "<(IDENTIFIER,low,low == 32)<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.assignment,low = 0)<SUB>24</SUB>>", "179": "<(LITERAL,0,low = 0)<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,good[msk][i])<SUB>25</SUB>>", "183": "<(IDENTIFIER,good,good[msk][i] = good[msk ^ (1 &lt;&lt; low)][i] + num[i][low])<SUB>25</SUB>>", "185": "<(IDENTIFIER,i,good[msk][i] = good[msk ^ (1 &lt;&lt; low)][i] + num[i][low])<SUB>25</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,good[msk ^ (1 &lt;&lt; low)][i])<SUB>25</SUB>>", "189": "<(IDENTIFIER,good,good[msk ^ (1 &lt;&lt; low)][i] + num[i][low])<SUB>25</SUB>>", "191": "<(IDENTIFIER,msk,msk ^ (1 &lt;&lt; low))<SUB>25</SUB>>", "193": "<(LITERAL,1,1 &lt;&lt; low)<SUB>25</SUB>>", "195": "<(IDENTIFIER,i,good[msk ^ (1 &lt;&lt; low)][i] + num[i][low])<SUB>25</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,num[i])<SUB>25</SUB>>", "199": "<(IDENTIFIER,i,good[msk ^ (1 &lt;&lt; low)][i] + num[i][low])<SUB>25</SUB>>", "201": "<(CONTROL_STRUCTURE,for (int msk = 0; Some(msk &lt; (1 &lt;&lt; m)); msk++),for (int msk = 0; Some(msk &lt; (1 &lt;&lt; m)); msk++))<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.assignment,int msk = 0)<SUB>28</SUB>>", "205": "<(LITERAL,0,int msk = 0)<SUB>28</SUB>>", "207": "<(IDENTIFIER,msk,msk &lt; (1 &lt;&lt; m))<SUB>28</SUB>>", "209": "<(LITERAL,1,1 &lt;&lt; m)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.postIncrement,msk++)<SUB>28</SUB>>", "213": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.assignment,int bits = Integer.bitCount(msk) + 1)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.addition,Integer.bitCount(msk) + 1)<SUB>29</SUB>>", "219": "<(IDENTIFIER,Integer,Integer.bitCount(msk))<SUB>29</SUB>>", "221": "<(LITERAL,1,Integer.bitCount(msk) + 1)<SUB>29</SUB>>", "223": "<(LOCAL,int i: int)<SUB>30</SUB>>", "225": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "227": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>30</SUB>>", "229": "<(IDENTIFIER,m,i &lt; m)<SUB>30</SUB>>", "231": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "233": "<(CONTROL_STRUCTURE,if ((msk &amp; (1 &lt;&lt; i)) != 0),if ((msk &amp; (1 &lt;&lt; i)) != 0))<SUB>31</SUB>>", "235": "<(&lt;operator&gt;.and,msk &amp; (1 &lt;&lt; i))<SUB>31</SUB>>", "237": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>31</SUB>>", "239": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>31</SUB>>", "241": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.assignment,int nxt = msk | (1 &lt;&lt; i))<SUB>32</SUB>>", "245": "<(&lt;operator&gt;.or,msk | (1 &lt;&lt; i))<SUB>32</SUB>>", "247": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>32</SUB>>", "249": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>32</SUB>>", "251": "<(&lt;operator&gt;.indexAccess,dp[nxt])<SUB>33</SUB>>", "253": "<(IDENTIFIER,nxt,dp[nxt] = min(dp[nxt], dp[msk] + bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])))<SUB>33</SUB>>", "255": "<(IDENTIFIER,Math,min(dp[nxt], dp[msk] + bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])))<SUB>33</SUB>>", "257": "<(IDENTIFIER,dp,min(dp[nxt], dp[msk] + bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])))<SUB>33</SUB>>", "259": "<(&lt;operator&gt;.addition,dp[msk] + bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i]))<SUB>33</SUB>>", "261": "<(IDENTIFIER,dp,dp[msk] + bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i]))<SUB>33</SUB>>", "263": "<(&lt;operator&gt;.multiplication,bits * (good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i]))<SUB>33</SUB>>", "265": "<(&lt;operator&gt;.subtraction,good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])<SUB>33</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,good[msk])<SUB>33</SUB>>", "269": "<(IDENTIFIER,msk,good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])<SUB>33</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,good[((1 &lt;&lt; m) - 1) ^ nxt][i])<SUB>33</SUB>>", "273": "<(IDENTIFIER,good,good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])<SUB>33</SUB>>", "275": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; m) - 1)<SUB>33</SUB>>", "277": "<(LITERAL,1,1 &lt;&lt; m)<SUB>33</SUB>>", "279": "<(LITERAL,1,(1 &lt;&lt; m) - 1)<SUB>33</SUB>>", "281": "<(IDENTIFIER,i,good[msk][i] - good[((1 &lt;&lt; m) - 1) ^ nxt][i])<SUB>33</SUB>>", "283": "<(IDENTIFIER,out,println(dp[(1 &lt;&lt; m) - 1]))<SUB>36</SUB>>", "285": "<(IDENTIFIER,dp,println(dp[(1 &lt;&lt; m) - 1]))<SUB>36</SUB>>", "287": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>36</SUB>>", "289": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>36</SUB>>", "291": "<(close,close())<SUB>37</SUB>>", "293": "<(MODIFIER,PUBLIC)>", "295": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}