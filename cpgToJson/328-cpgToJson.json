{"edges": [["19", "20"], ["19", "21"], ["19", "162"], ["19", "163"], ["19", "164"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "33"], ["21", "34"], ["21", "38"], ["21", "42"], ["21", "65"], ["21", "66"], ["21", "69"], ["21", "157"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "63"], ["57", "64"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "85"], ["79", "94"], ["79", "95"], ["79", "98"], ["79", "149"], ["79", "155"], ["81", "82"], ["81", "83"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "88"], ["85", "89"], ["85", "90"], ["85", "91"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "106"], ["98", "108"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "116"], ["109", "110"], ["109", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["116", "123"], ["116", "126"], ["116", "128"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["128", "136"], ["128", "138"], ["128", "143"], ["128", "148"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["136", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["151", "154"], ["155", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["22", "28"], ["25", "31"], ["29", "36"], ["34", "40"], ["38", "44"], ["66", "71"], ["157", "164"], ["24", "22"], ["26", "25"], ["31", "29"], ["36", "34"], ["40", "38"], ["44", "47"], ["47", "54"], ["47", "66"], ["50", "47"], ["71", "74"], ["74", "83"], ["74", "160"], ["77", "74"], ["158", "157"], ["28", "26"], ["53", "50"], ["81", "93"], ["85", "95"], ["95", "100"], ["149", "155"], ["155", "77"], ["160", "158"], ["54", "59"], ["57", "53"], ["83", "81"], ["91", "85"], ["100", "103"], ["103", "111"], ["103", "151"], ["106", "103"], ["151", "149"], ["58", "57"], ["93", "91"], ["59", "58"], ["110", "106"], ["110", "120"], ["118", "123"], ["123", "131"], ["123", "106"], ["126", "123"], ["111", "110"], ["120", "118"], ["136", "139"], ["138", "144"], ["143", "106"], ["130", "126"], ["130", "136"], ["139", "138"], ["144", "143"], ["131", "130"], ["19", "24"], ["20", "164"], ["22", "164"], ["25", "164"], ["25", "164"], ["29", "164"], ["29", "164"], ["34", "164"], ["36", "164"], ["34", "164"], ["34", "164"], ["38", "164"], ["38", "164"], ["38", "164"], ["44", "164"], ["47", "164"], ["47", "164"], ["66", "164"], ["71", "164"], ["74", "164"], ["74", "164"], ["74", "164"], ["157", "164"], ["157", "164"], ["157", "164"], ["81", "164"], ["81", "164"], ["85", "164"], ["85", "164"], ["85", "164"], ["85", "164"], ["85", "164"], ["95", "164"], ["100", "164"], ["103", "164"], ["103", "164"], ["151", "164"], ["149", "164"], ["149", "164"], ["155", "164"], ["77", "164"], ["110", "164"], ["110", "164"], ["118", "164"], ["118", "164"], ["123", "164"], ["123", "164"], ["130", "164"], ["130", "164"], ["136", "164"], ["138", "164"], ["138", "164"], ["143", "164"], ["143", "164"], ["126", "164"], ["106", "164"], ["53", "164"], ["59", "164"], ["58", "164"], ["57", "164"], ["53", "164"], ["53", "164"], ["50", "164"], ["151", "164"], ["155", "164"], ["19", "20"], ["19", "22"], ["31", "29"], ["36", "34"], ["40", "38"], ["19", "66"], ["22", "25"], ["19", "25"], ["19", "44"], ["19", "71"], ["85", "157"], ["66", "157"], ["149", "157"], ["19", "157"], ["25", "31"], ["19", "31"], ["31", "36"], ["19", "36"], ["29", "40"], ["19", "40"], ["44", "47"], ["50", "47"], ["19", "47"], ["40", "47"], ["59", "50"], ["19", "50"], ["19", "53"], ["71", "74"], ["77", "74"], ["19", "74"], ["47", "74"], ["103", "74"], ["74", "77"], ["19", "77"], ["83", "81"], ["19", "95"], ["151", "149"], ["151", "149"], ["151", "149"], ["25", "85"], ["19", "85"], ["38", "85"], ["53", "85"], ["81", "85"], ["110", "85"], ["130", "85"], ["138", "85"], ["143", "85"], ["19", "100"], ["19", "155"], ["19", "57"], ["74", "83"], ["19", "83"], ["100", "103"], ["106", "103"], ["19", "103"], ["83", "103"], ["120", "103"], ["103", "106"], ["123", "106"], ["19", "106"], ["19", "151"], ["66", "151"], ["149", "151"], ["95", "151"], ["136", "151"], ["59", "58"], ["59", "58"], ["19", "58"], ["120", "118"], ["120", "118"], ["34", "59"], ["19", "59"], ["47", "59"], ["85", "110"], ["138", "110"], ["19", "110"], ["118", "123"], ["126", "123"], ["19", "123"], ["103", "123"], ["123", "126"], ["19", "126"], ["19", "138"], ["19", "143"], ["103", "120"], ["19", "120"], ["95", "136"], ["19", "136"], ["85", "130"], ["143", "130"], ["19", "130"], ["47", "47"], ["47", "57"], ["47", "50"], ["47", "59"], ["47", "54"], ["47", "58"], ["47", "53"], ["74", "77"], ["74", "81"], ["74", "85"], ["74", "149"], ["74", "103"], ["74", "151"], ["74", "74"], ["74", "95"], ["74", "91"], ["74", "93"], ["74", "83"], ["74", "100"], ["74", "155"], ["103", "103"], ["103", "106"], ["103", "110"], ["103", "111"], ["110", "120"], ["110", "123"], ["110", "118"], ["123", "131"], ["123", "130"], ["130", "136"], ["130", "123"], ["130", "144"], ["130", "138"], ["130", "143"], ["130", "126"], ["130", "139"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY input = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,input,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,L = nextInt())<SUB>5</SUB>>", "31": "<(nextInt,nextInt())<SUB>5</SUB>>", "33": "<(LOCAL,String s: java.lang.String)<SUB>5</SUB>>", "35": "<(IDENTIFIER,s,String s = next())<SUB>5</SUB>>", "37": "<(IDENTIFIER,input,next())<SUB>5</SUB>>", "39": "<(IDENTIFIER,arr,arr = new int[L])<SUB>6</SUB>>", "41": "<(IDENTIFIER,L,new int[L])<SUB>6</SUB>>", "43": "<(LOCAL,int i: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.lessThan,i &lt; L)<SUB>6</SUB>>", "49": "<(IDENTIFIER,L,i &lt; L)<SUB>6</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,arr[i] = s.charAt(i) == 'H' ? 1 : 0)<SUB>6</SUB>>", "55": "<(IDENTIFIER,arr,arr[i] = s.charAt(i) == 'H' ? 1 : 0)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.conditional,s.charAt(i) == 'H' ? 1 : 0)<SUB>6</SUB>>", "59": "<(charAt,s.charAt(i))<SUB>6</SUB>>", "61": "<(IDENTIFIER,i,s.charAt(i))<SUB>6</SUB>>", "63": "<(LITERAL,1,s.charAt(i) == 'H' ? 1 : 0)<SUB>6</SUB>>", "65": "<(LOCAL,int count: int)<SUB>10</SUB>>", "67": "<(IDENTIFIER,count,int count = 99999)<SUB>10</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int A = 0; Some(A &lt; L); A++),for (int A = 0; Some(A &lt; L); A++))<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,int A = 0)<SUB>11</SUB>>", "73": "<(LITERAL,0,int A = 0)<SUB>11</SUB>>", "75": "<(IDENTIFIER,A,A &lt; L)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,A++)<SUB>11</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.assignment,int[] tmp = new int[L])<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.alloc,new int[L])>", "85": "<(arraycopy,arraycopy(arr, 0, tmp, 0, arr.length))<SUB>13</SUB>>", "87": "<(IDENTIFIER,arr,arraycopy(arr, 0, tmp, 0, arr.length))<SUB>13</SUB>>", "89": "<(IDENTIFIER,tmp,arraycopy(arr, 0, tmp, 0, arr.length))<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,arr.length)<SUB>13</SUB>>", "93": "<(FIELD_IDENTIFIER,length,length)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>14</SUB>>", "97": "<(LITERAL,0,int ans = 0)<SUB>14</SUB>>", "99": "<(LOCAL,int i: int)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; L)<SUB>15</SUB>>", "105": "<(IDENTIFIER,L,i &lt; L)<SUB>15</SUB>>", "107": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "109": "<(CONTROL_STRUCTURE,if (tmp[i] == 1),if (tmp[i] == 1))<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,tmp[i])<SUB>17</SUB>>", "113": "<(IDENTIFIER,i,tmp[i] == 1)<SUB>17</SUB>>", "115": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>17</SUB>>", "117": "<(LOCAL,int j: int)<SUB>18</SUB>>", "119": "<(IDENTIFIER,j,int j = L - 1)<SUB>18</SUB>>", "121": "<(IDENTIFIER,L,L - 1)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.greaterThan,j &gt; i)<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,j &gt; i)<SUB>18</SUB>>", "127": "<(IDENTIFIER,j,j--)<SUB>18</SUB>>", "129": "<(CONTROL_STRUCTURE,if (tmp[j] == 0),if (tmp[j] == 0))<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,tmp[j])<SUB>20</SUB>>", "133": "<(IDENTIFIER,j,tmp[j] == 0)<SUB>20</SUB>>", "135": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>20</SUB>>", "137": "<(IDENTIFIER,ans,ans++)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,tmp[i])<SUB>22</SUB>>", "141": "<(IDENTIFIER,i,tmp[i] = 1)<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.assignment,tmp[j] = 0)<SUB>22</SUB>>", "145": "<(IDENTIFIER,tmp,tmp[j] = 0)<SUB>22</SUB>>", "147": "<(LITERAL,0,tmp[j] = 0)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.assignment,count = Math.min(count, ans))<SUB>30</SUB>>", "151": "<(min,Math.min(count, ans))<SUB>30</SUB>>", "153": "<(IDENTIFIER,count,Math.min(count, ans))<SUB>30</SUB>>", "155": "<(rotate,rotate())<SUB>31</SUB>>", "157": "<(println,System.out.println(count))<SUB>34</SUB>>", "159": "<(IDENTIFIER,System,System.out.println(count))<SUB>34</SUB>>", "161": "<(IDENTIFIER,count,System.out.println(count))<SUB>34</SUB>>", "163": "<(MODIFIER,STATIC)>"}}