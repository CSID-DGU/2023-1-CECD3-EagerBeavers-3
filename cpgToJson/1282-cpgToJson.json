{"edges": [["21", "23"], ["21", "153"], ["21", "154"], ["21", "155"], ["23", "24"], ["23", "25"], ["23", "29"], ["23", "30"], ["23", "31"], ["23", "32"], ["23", "35"], ["23", "39"], ["23", "44"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "62"], ["23", "4"], ["23", "90"], ["23", "93"], ["23", "6"], ["23", "97"], ["23", "100"], ["23", "104"], ["23", "105"], ["23", "148"], ["23", "151"], ["25", "26"], ["25", "27"], ["27", "28"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "59"], ["55", "61"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "66"], ["62", "69"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "83"], ["70", "71"], ["70", "76"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["93", "3"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "5"], ["100", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "138"], ["108", "109"], ["108", "130"], ["109", "110"], ["109", "129"], ["110", "111"], ["110", "121"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "117"], ["113", "120"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "125"], ["121", "128"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["130", "131"], ["130", "134"], ["130", "137"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["138", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["151", "152"], ["25", "32"], ["32", "37"], ["35", "41"], ["39", "45"], ["45", "48"], ["48", "52"], ["90", "94"], ["93", "99"], ["97", "101"], ["100", "116"], ["105", "148"], ["148", "151"], ["151", "155"], ["27", "25"], ["37", "35"], ["41", "39"], ["52", "56"], ["52", "63"], ["63", "66"], ["66", "72"], ["66", "92"], ["92", "90"], ["94", "93"], ["99", "97"], ["101", "100"], ["107", "105"], ["56", "59"], ["59", "61"], ["61", "155"], ["83", "66"], ["108", "141"], ["71", "79"], ["71", "86"], ["76", "86"], ["85", "83"], ["109", "133"], ["139", "144"], ["142", "107"], ["72", "71"], ["78", "76"], ["86", "85"], ["110", "109"], ["131", "134"], ["134", "108"], ["141", "139"], ["144", "142"], ["79", "78"], ["111", "124"], ["133", "131"], ["122", "125"], ["125", "110"], ["114", "117"], ["117", "111"], ["124", "122"], ["116", "114"], ["21", "27"], ["61", "155"], ["22", "155"], ["25", "155"], ["32", "155"], ["35", "155"], ["37", "155"], ["35", "155"], ["35", "155"], ["39", "155"], ["39", "155"], ["45", "155"], ["45", "155"], ["48", "155"], ["48", "155"], ["52", "155"], ["52", "155"], ["56", "155"], ["59", "155"], ["59", "155"], ["21", "22"], ["27", "25"], ["21", "32"], ["37", "35"], ["21", "39"], ["21", "45"], ["39", "48"], ["21", "48"], ["21", "90"], ["21", "97"], ["107", "105"], ["107", "105"], ["107", "105"], ["32", "48"], ["21", "66"], ["90", "93"], ["21", "93"], ["94", "93"], ["94", "93"], ["97", "100"], ["21", "100"], ["101", "100"], ["101", "100"], ["21", "148"], ["105", "148"], ["148", "151"], ["21", "151"], ["21", "27"], ["27", "37"], ["21", "37"], ["21", "41"], ["25", "52"], ["21", "52"], ["21", "61"], ["35", "63"], ["21", "63"], ["63", "66"], ["72", "66"], ["85", "83"], ["85", "83"], ["21", "94"], ["45", "94"], ["76", "94"], ["94", "101"], ["21", "101"], ["52", "101"], ["108", "107"], ["108", "107"], ["108", "107"], ["139", "107"], ["142", "107"], ["21", "107"], ["21", "56"], ["56", "59"], ["21", "59"], ["78", "76"], ["78", "76"], ["109", "108"], ["109", "108"], ["131", "108"], ["134", "108"], ["21", "108"], ["21", "139"], ["21", "147"], ["72", "71"], ["72", "71"], ["21", "71"], ["86", "85"], ["78", "85"], ["21", "85"], ["39", "85"], ["110", "109"], ["110", "109"], ["110", "109"], ["93", "109"], ["21", "109"], ["21", "131"], ["21", "137"], ["139", "142"], ["21", "142"], ["144", "142"], ["144", "142"], ["66", "72"], ["21", "72"], ["79", "78"], ["79", "78"], ["85", "78"], ["21", "78"], ["39", "78"], ["48", "86"], ["79", "86"], ["83", "86"], ["21", "86"], ["111", "110"], ["111", "110"], ["111", "110"], ["122", "110"], ["125", "110"], ["21", "110"], ["131", "134"], ["21", "134"], ["101", "144"], ["21", "144"], ["85", "144"], ["39", "144"], ["45", "79"], ["76", "79"], ["21", "79"], ["48", "79"], ["83", "79"], ["100", "111"], ["21", "111"], ["114", "111"], ["117", "111"], ["21", "122"], ["21", "128"], ["21", "114"], ["21", "120"], ["122", "125"], ["21", "125"], ["114", "117"], ["21", "117"], ["52", "107"], ["52", "94"], ["52", "141"], ["52", "66"], ["52", "116"], ["52", "122"], ["52", "99"], ["52", "114"], ["52", "131"], ["52", "56"], ["52", "142"], ["52", "151"], ["52", "92"], ["52", "59"], ["52", "144"], ["52", "97"], ["52", "134"], ["52", "93"], ["52", "101"], ["52", "148"], ["52", "90"], ["52", "61"], ["52", "105"], ["52", "100"], ["52", "110"], ["52", "117"], ["52", "63"], ["52", "139"], ["52", "124"], ["52", "108"], ["52", "125"], ["52", "111"], ["52", "109"], ["52", "133"], ["66", "66"], ["66", "85"], ["66", "72"], ["66", "83"], ["66", "71"], ["66", "86"], ["71", "76"], ["71", "79"], ["71", "78"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,long x = nextLong())<SUB>2</SUB>>", "27": "<(nextLong,nextLong())<SUB>2</SUB>>", "29": "<(LOCAL,long a: long)<SUB>3</SUB>>", "31": "<(LOCAL,long c: long)<SUB>3</SUB>>", "33": "<(IDENTIFIER,a,long a = 2)<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long b = nextLong())<SUB>3</SUB>>", "37": "<(nextLong,nextLong())<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,long c = 1000000000 + 7)<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.addition,1000000000 + 7)<SUB>3</SUB>>", "43": "<(LITERAL,7,1000000000 + 7)<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,long res = 1)<SUB>4</SUB>>", "47": "<(LITERAL,1,long res = 1)<SUB>4</SUB>>", "49": "<(IDENTIFIER,a,a %= c)<SUB>5</SUB>>", "51": "<(CONTROL_STRUCTURE,if (x == 0),if (x == 0))<SUB>6</SUB>>", "53": "<(IDENTIFIER,x,x == 0)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(IDENTIFIER,out,println(0))<SUB>7</SUB>>", "59": "<(flush,flush())<SUB>8</SUB>>", "61": "<(RETURN,return;,return;)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.notEquals,b != 0)<SUB>11</SUB>>", "65": "<(LITERAL,0,b != 0)<SUB>11</SUB>>", "67": "<(IDENTIFIER,b,b /= 2)<SUB>11</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.equals,b % 2 == 1)<SUB>12</SUB>>", "73": "<(IDENTIFIER,b,b % 2)<SUB>12</SUB>>", "75": "<(LITERAL,1,b % 2 == 1)<SUB>12</SUB>>", "77": "<(IDENTIFIER,res,res = (res * a) % c)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.multiplication,res * a)<SUB>13</SUB>>", "81": "<(IDENTIFIER,a,res * a)<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.assignment,a = (a * a) % c)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.modulo,(a * a) % c)<SUB>14</SUB>>", "87": "<(IDENTIFIER,a,a * a)<SUB>14</SUB>>", "89": "<(IDENTIFIER,c,(a * a) % c)<SUB>14</SUB>>", "90": "<(&lt;operator&gt;.assignment,ANY r = new BigInteger(String.valueOf(res)))<SUB>16</SUB>>", "92": "<(&lt;operator&gt;.alloc,new BigInteger(String.valueOf(res)))<SUB>16</SUB>>", "3": "<(IDENTIFIER,r,new BigInteger(String.valueOf(res)))<SUB>16</SUB>>", "95": "<(IDENTIFIER,String,String.valueOf(res))<SUB>16</SUB>>", "6": "<(LOCAL,BigInteger y: ANY)<SUB>17</SUB>>", "98": "<(IDENTIFIER,y,ANY y = new BigInteger(String.valueOf(x)))<SUB>17</SUB>>", "100": "<(&lt;init&gt;,new BigInteger(String.valueOf(x)))<SUB>17</SUB>>", "101": "<(valueOf,String.valueOf(x))<SUB>17</SUB>>", "103": "<(IDENTIFIER,x,String.valueOf(x))<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.assignment,ANY ans = mod(new BigInteger(String.valueOf(c))))<SUB>18</SUB>>", "107": "<(mod,mod(new BigInteger(String.valueOf(c))))<SUB>18</SUB>>", "109": "<(multiply,multiply(r))<SUB>18</SUB>>", "111": "<(multiply,multiply(new BigInteger(&quot;2&quot;)))<SUB>18</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "115": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "117": "<(&lt;init&gt;,new BigInteger(&quot;2&quot;))<SUB>18</SUB>>", "119": "<(LITERAL,&quot;2&quot;,new BigInteger(&quot;2&quot;))<SUB>18</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "123": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "125": "<(&lt;init&gt;,new BigInteger(&quot;1&quot;))<SUB>18</SUB>>", "127": "<(LITERAL,&quot;1&quot;,new BigInteger(&quot;1&quot;))<SUB>18</SUB>>", "129": "<(IDENTIFIER,r,multiply(r))<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "133": "<(&lt;operator&gt;.alloc,new BigInteger(&quot;1&quot;))<SUB>18</SUB>>", "135": "<(IDENTIFIER,$obj3,new BigInteger(&quot;1&quot;))>", "137": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "139": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "141": "<(&lt;operator&gt;.alloc,new BigInteger(String.valueOf(c)))<SUB>18</SUB>>", "143": "<(IDENTIFIER,$obj2,new BigInteger(String.valueOf(c)))>", "145": "<(IDENTIFIER,String,String.valueOf(c))<SUB>18</SUB>>", "147": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "149": "<(IDENTIFIER,out,println(ans))<SUB>19</SUB>>", "151": "<(flush,flush())<SUB>20</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}