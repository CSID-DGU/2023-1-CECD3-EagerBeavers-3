{"edges": [["23", "24"], ["23", "25"], ["23", "286"], ["23", "287"], ["23", "288"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "34"], ["25", "38"], ["25", "39"], ["25", "43"], ["25", "59"], ["25", "60"], ["25", "65"], ["25", "6"], ["25", "115"], ["25", "118"], ["25", "119"], ["25", "192"], ["25", "193"], ["25", "198"], ["25", "199"], ["25", "202"], ["25", "203"], ["25", "208"], ["25", "234"], ["25", "235"], ["25", "240"], ["25", "245"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "85"], ["76", "77"], ["76", "82"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["85", "92"], ["85", "95"], ["85", "97"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["97", "98"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "103"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "112"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "5"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "138"], ["130", "140"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["140", "141"], ["141", "142"], ["141", "149"], ["141", "167"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["150", "151"], ["150", "158"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "162"], ["158", "166"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["162", "165"], ["167", "168"], ["168", "8"], ["168", "169"], ["168", "172"], ["168", "173"], ["168", "184"], ["169", "170"], ["169", "171"], ["172", "7"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "179"], ["175", "183"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["179", "182"], ["184", "185"], ["184", "186"], ["184", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "205"], ["205", "206"], ["206", "207"], ["208", "209"], ["208", "211"], ["209", "210"], ["211", "212"], ["211", "213"], ["211", "217"], ["211", "218"], ["211", "223"], ["213", "214"], ["213", "215"], ["215", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "254"], ["245", "256"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["254", "255"], ["256", "257"], ["256", "258"], ["256", "267"], ["256", "268"], ["256", "277"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "266"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "276"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["277", "278"], ["277", "281"], ["278", "279"], ["278", "280"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["26", "32"], ["29", "36"], ["34", "41"], ["39", "45"], ["60", "67"], ["115", "118"], ["118", "121"], ["193", "199"], ["199", "206"], ["203", "209"], ["235", "243"], ["240", "247"], ["28", "26"], ["30", "29"], ["36", "34"], ["41", "39"], ["45", "48"], ["48", "54"], ["48", "62"], ["51", "48"], ["53", "51"], ["62", "60"], ["67", "70"], ["70", "78"], ["70", "117"], ["73", "70"], ["117", "115"], ["121", "124"], ["124", "132"], ["124", "197"], ["127", "124"], ["195", "193"], ["205", "203"], ["209", "215"], ["209", "237"], ["237", "235"], ["241", "240"], ["247", "252"], ["250", "288"], ["250", "262"], ["254", "252"], ["32", "30"], ["54", "57"], ["57", "53"], ["76", "89"], ["197", "195"], ["206", "205"], ["213", "220"], ["218", "224"], ["243", "241"], ["252", "250"], ["258", "272"], ["268", "280"], ["277", "254"], ["77", "82"], ["82", "76"], ["87", "92"], ["92", "100"], ["92", "73"], ["95", "92"], ["132", "135"], ["135", "145"], ["135", "127"], ["138", "135"], ["215", "213"], ["220", "218"], ["224", "209"], ["224", "228"], ["260", "258"], ["270", "268"], ["278", "282"], ["281", "277"], ["78", "77"], ["89", "87"], ["98", "95"], ["228", "231"], ["231", "209"], ["261", "260"], ["271", "270"], ["280", "278"], ["282", "281"], ["99", "106"], ["104", "98"], ["142", "154"], ["142", "171"], ["262", "265"], ["265", "261"], ["272", "275"], ["275", "271"], ["100", "99"], ["105", "112"], ["112", "104"], ["144", "142"], ["150", "138"], ["106", "109"], ["109", "105"], ["145", "144"], ["151", "161"], ["169", "172"], ["172", "178"], ["173", "187"], ["184", "138"], ["153", "151"], ["159", "162"], ["162", "150"], ["171", "169"], ["186", "184"], ["154", "153"], ["161", "159"], ["176", "179"], ["179", "173"], ["187", "186"], ["178", "176"], ["23", "28"], ["24", "288"], ["26", "288"], ["29", "288"], ["29", "288"], ["36", "288"], ["34", "288"], ["34", "288"], ["39", "288"], ["39", "288"], ["39", "288"], ["60", "288"], ["60", "288"], ["60", "288"], ["70", "288"], ["115", "288"], ["118", "288"], ["121", "288"], ["124", "288"], ["124", "288"], ["124", "288"], ["193", "288"], ["193", "288"], ["199", "288"], ["206", "288"], ["205", "288"], ["203", "288"], ["209", "288"], ["209", "288"], ["237", "288"], ["237", "288"], ["235", "288"], ["235", "288"], ["240", "288"], ["240", "288"], ["240", "288"], ["247", "288"], ["250", "288"], ["252", "288"], ["250", "288"], ["250", "288"], ["254", "288"], ["224", "288"], ["224", "288"], ["231", "288"], ["231", "288"], ["127", "288"], ["73", "288"], ["51", "288"], ["23", "24"], ["23", "26"], ["36", "34"], ["41", "39"], ["62", "60"], ["23", "115"], ["23", "199"], ["205", "203"], ["237", "235"], ["237", "235"], ["26", "29"], ["23", "29"], ["23", "45"], ["57", "53"], ["23", "67"], ["115", "118"], ["23", "118"], ["23", "121"], ["193", "240"], ["224", "240"], ["228", "240"], ["23", "240"], ["23", "247"], ["29", "36"], ["23", "36"], ["34", "41"], ["23", "41"], ["45", "48"], ["51", "48"], ["23", "48"], ["41", "48"], ["48", "51"], ["23", "51"], ["48", "62"], ["23", "62"], ["67", "70"], ["73", "70"], ["23", "70"], ["62", "70"], ["92", "70"], ["23", "73"], ["70", "73"], ["39", "76"], ["53", "76"], ["121", "124"], ["127", "124"], ["23", "124"], ["70", "124"], ["135", "127"], ["23", "127"], ["206", "205"], ["203", "209"], ["215", "209"], ["23", "209"], ["215", "213"], ["220", "218"], ["220", "218"], ["220", "237"], ["23", "237"], ["199", "237"], ["231", "237"], ["247", "250"], ["254", "250"], ["23", "250"], ["252", "250"], ["272", "254"], ["23", "254"], ["23", "258"], ["23", "268"], ["36", "57"], ["23", "57"], ["70", "87"], ["23", "87"], ["23", "132"], ["118", "206"], ["184", "206"], ["151", "206"], ["23", "206"], ["235", "252"], ["272", "252"], ["23", "252"], ["240", "277"], ["258", "277"], ["23", "277"], ["268", "277"], ["87", "92"], ["95", "92"], ["23", "92"], ["70", "92"], ["109", "95"], ["23", "95"], ["39", "98"], ["132", "135"], ["138", "135"], ["23", "135"], ["124", "135"], ["179", "135"], ["162", "135"], ["179", "138"], ["162", "138"], ["23", "138"], ["209", "215"], ["23", "215"], ["23", "220"], ["213", "220"], ["218", "224"], ["23", "224"], ["193", "224"], ["228", "224"], ["224", "228"], ["23", "228"], ["220", "231"], ["23", "231"], ["23", "260"], ["23", "270"], ["258", "281"], ["23", "281"], ["268", "281"], ["70", "89"], ["23", "89"], ["258", "282"], ["23", "282"], ["39", "104"], ["118", "142"], ["184", "142"], ["151", "142"], ["23", "142"], ["184", "142"], ["151", "142"], ["252", "262"], ["23", "262"], ["250", "262"], ["262", "272"], ["23", "272"], ["262", "272"], ["151", "150"], ["151", "150"], ["159", "150"], ["162", "150"], ["23", "150"], ["23", "169"], ["92", "109"], ["23", "109"], ["142", "151"], ["23", "151"], ["142", "151"], ["23", "159"], ["23", "166"], ["169", "172"], ["23", "172"], ["172", "173"], ["23", "173"], ["176", "173"], ["179", "173"], ["142", "184"], ["23", "184"], ["142", "184"], ["173", "184"], ["159", "162"], ["23", "162"], ["135", "162"], ["135", "162"], ["23", "176"], ["23", "183"], ["176", "179"], ["23", "179"], ["135", "179"], ["135", "179"], ["48", "51"], ["48", "57"], ["48", "54"], ["48", "48"], ["48", "53"], ["70", "73"], ["70", "77"], ["70", "92"], ["70", "76"], ["70", "87"], ["70", "70"], ["70", "89"], ["70", "82"], ["70", "78"], ["124", "132"], ["124", "127"], ["124", "135"], ["124", "124"], ["209", "215"], ["209", "209"], ["209", "213"], ["209", "224"], ["209", "220"], ["209", "218"], ["250", "282"], ["250", "272"], ["250", "261"], ["250", "275"], ["250", "262"], ["250", "281"], ["250", "258"], ["250", "268"], ["250", "280"], ["250", "265"], ["250", "252"], ["250", "277"], ["250", "260"], ["250", "270"], ["250", "254"], ["250", "278"], ["250", "271"], ["250", "250"], ["92", "98"], ["92", "104"], ["92", "95"], ["92", "92"], ["92", "112"], ["92", "100"], ["92", "99"], ["92", "106"], ["92", "105"], ["92", "109"], ["135", "145"], ["135", "144"], ["135", "138"], ["135", "142"], ["135", "135"], ["224", "228"], ["224", "231"], ["142", "154"], ["142", "169"], ["142", "161"], ["142", "179"], ["142", "178"], ["142", "150"], ["142", "151"], ["142", "162"], ["142", "153"], ["142", "187"], ["142", "184"], ["142", "173"], ["142", "186"], ["142", "171"], ["142", "159"], ["142", "176"], ["142", "172"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(LOCAL,int n: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.alloc,new int[n])>", "43": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "47": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "49": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>5</SUB>>", "55": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>5</SUB>>", "57": "<(nextInt,nextInt())<SUB>5</SUB>>", "59": "<(LOCAL,int[][] sub: int[][])<SUB>6</SUB>>", "61": "<(IDENTIFIER,sub,int[][] sub = new int[n][n])<SUB>6</SUB>>", "63": "<(IDENTIFIER,n,new int[n][n])<SUB>6</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,sub[i][i])<SUB>8</SUB>>", "79": "<(IDENTIFIER,sub,sub[i][i] = arr[i])<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,sub[i][i] = arr[i])<SUB>8</SUB>>", "83": "<(IDENTIFIER,arr,sub[i][i] = arr[i])<SUB>8</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.addition,i + 1)<SUB>9</SUB>>", "91": "<(LITERAL,1,i + 1)<SUB>9</SUB>>", "93": "<(IDENTIFIER,j,j &lt; n)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,sub[i][j])<SUB>10</SUB>>", "101": "<(IDENTIFIER,sub,sub[i][j] = sub[i][j - 1] + arr[j])<SUB>10</SUB>>", "103": "<(IDENTIFIER,j,sub[i][j] = sub[i][j - 1] + arr[j])<SUB>10</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,sub[i][j - 1])<SUB>10</SUB>>", "107": "<(IDENTIFIER,sub,sub[i][j - 1] + arr[j])<SUB>10</SUB>>", "109": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>10</SUB>>", "111": "<(LITERAL,1,j - 1)<SUB>10</SUB>>", "113": "<(IDENTIFIER,arr,sub[i][j - 1] + arr[j])<SUB>10</SUB>>", "6": "<(LOCAL,HashMap&lt;Integer, List&lt;P&gt;&gt; hm: ANY)<SUB>14</SUB>>", "116": "<(IDENTIFIER,hm,ANY hm = new HashMap&lt;&gt;())<SUB>14</SUB>>", "118": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>14</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int stop = 0; Some(stop &lt; n); stop++),for (int stop = 0; Some(stop &lt; n); stop++))<SUB>26</SUB>>", "121": "<(&lt;operator&gt;.assignment,int stop = 0)<SUB>26</SUB>>", "123": "<(LITERAL,0,int stop = 0)<SUB>26</SUB>>", "125": "<(IDENTIFIER,stop,stop &lt; n)<SUB>26</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,stop++)<SUB>26</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "131": "<(LOCAL,int start: int)<SUB>27</SUB>>", "133": "<(IDENTIFIER,start,int start = 0)<SUB>27</SUB>>", "135": "<(&lt;operator&gt;.lessEqualsThan,start &lt;= stop)<SUB>27</SUB>>", "137": "<(IDENTIFIER,stop,start &lt;= stop)<SUB>27</SUB>>", "139": "<(IDENTIFIER,start,start++)<SUB>27</SUB>>", "141": "<(CONTROL_STRUCTURE,if (hm.containsKey(sub[start][stop])),if (hm.containsKey(sub[start][stop])))<SUB>28</SUB>>", "143": "<(IDENTIFIER,hm,containsKey(sub[start][stop]))<SUB>28</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,sub[start])<SUB>28</SUB>>", "147": "<(IDENTIFIER,start,containsKey(sub[start][stop]))<SUB>28</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "151": "<(get,get(sub[start][stop]))<SUB>29</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,sub[start][stop])<SUB>29</SUB>>", "155": "<(IDENTIFIER,sub,get(sub[start][stop]))<SUB>29</SUB>>", "157": "<(IDENTIFIER,stop,get(sub[start][stop]))<SUB>29</SUB>>", "159": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "161": "<(&lt;operator&gt;.alloc,new P(start, stop))<SUB>29</SUB>>", "163": "<(IDENTIFIER,$obj2,new P(start, stop))>", "165": "<(IDENTIFIER,stop,new P(start, stop))<SUB>29</SUB>>", "167": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "8": "<(LOCAL,List&lt;P&gt; temp: ANY)<SUB>31</SUB>>", "170": "<(IDENTIFIER,temp,ANY temp = new ArrayList&lt;&gt;())<SUB>31</SUB>>", "172": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>31</SUB>>", "173": "<(add,add(new P(start, stop)))<SUB>32</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "177": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "179": "<(&lt;init&gt;,new P(start, stop))<SUB>32</SUB>>", "181": "<(IDENTIFIER,start,new P(start, stop))<SUB>32</SUB>>", "183": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "185": "<(IDENTIFIER,hm,put(sub[start][stop], temp))<SUB>33</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,sub[start])<SUB>33</SUB>>", "189": "<(IDENTIFIER,start,put(sub[start][stop], temp))<SUB>33</SUB>>", "191": "<(IDENTIFIER,temp,put(sub[start][stop], temp))<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.assignment,int ans = Integer.MIN_VALUE)<SUB>38</SUB>>", "195": "<(&lt;operator&gt;.fieldAccess,Integer.MIN_VALUE)<SUB>38</SUB>>", "197": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>38</SUB>>", "199": "<(&lt;operator&gt;.assignment,ANY ansList = null)<SUB>44</SUB>>", "201": "<(LITERAL,null,ANY ansList = null)<SUB>44</SUB>>", "203": "<(&lt;operator&gt;.assignment,)<SUB>45</SUB>>", "205": "<(iterator,&lt;empty&gt;)<SUB>45</SUB>>", "207": "<(IDENTIFIER,hm,values())<SUB>45</SUB>>", "209": "<(hasNext,&lt;empty&gt;)<SUB>45</SUB>>", "211": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "213": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>45</SUB>>", "215": "<(next,&lt;empty&gt;)<SUB>45</SUB>>", "217": "<(LOCAL,int or: int)<SUB>46</SUB>>", "219": "<(IDENTIFIER,or,int or = overlap(it))<SUB>46</SUB>>", "221": "<(IDENTIFIER,this,overlap(it))<SUB>46</SUB>>", "223": "<(CONTROL_STRUCTURE,if (or &gt; ans),if (or &gt; ans))<SUB>47</SUB>>", "225": "<(IDENTIFIER,or,or &gt; ans)<SUB>47</SUB>>", "227": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "229": "<(IDENTIFIER,ans,ans = or)<SUB>48</SUB>>", "231": "<(&lt;operator&gt;.assignment,ansList = it)<SUB>49</SUB>>", "233": "<(IDENTIFIER,it,ansList = it)<SUB>49</SUB>>", "235": "<(&lt;operator&gt;.assignment,ANY processedList = extractOverlapping(ansList))<SUB>53</SUB>>", "237": "<(extractOverlapping,extractOverlapping(ansList))<SUB>53</SUB>>", "239": "<(IDENTIFIER,ansList,extractOverlapping(ansList))<SUB>53</SUB>>", "241": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>55</SUB>>", "243": "<(FIELD_IDENTIFIER,out,out)<SUB>55</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; processedList.size()); i++),for (int i = 0; Some(i &lt; processedList.size()); i++))<SUB>56</SUB>>", "247": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>56</SUB>>", "249": "<(LITERAL,0,int i = 0)<SUB>56</SUB>>", "251": "<(IDENTIFIER,i,i &lt; processedList.size())<SUB>56</SUB>>", "253": "<(IDENTIFIER,processedList,size())<SUB>56</SUB>>", "255": "<(IDENTIFIER,i,i++)<SUB>56</SUB>>", "257": "<(LOCAL,int A: int)<SUB>57</SUB>>", "259": "<(IDENTIFIER,A,int A = processedList.get(i).a + 1)<SUB>57</SUB>>", "261": "<(&lt;operator&gt;.fieldAccess,processedList.get(i).a)<SUB>57</SUB>>", "263": "<(IDENTIFIER,processedList,get(i))<SUB>57</SUB>>", "265": "<(FIELD_IDENTIFIER,a,a)<SUB>57</SUB>>", "267": "<(LOCAL,int B: int)<SUB>58</SUB>>", "269": "<(IDENTIFIER,B,int B = processedList.get(i).b + 1)<SUB>58</SUB>>", "271": "<(&lt;operator&gt;.fieldAccess,processedList.get(i).b)<SUB>58</SUB>>", "273": "<(IDENTIFIER,processedList,get(i))<SUB>58</SUB>>", "275": "<(FIELD_IDENTIFIER,b,b)<SUB>58</SUB>>", "277": "<(println,System.out.println(A + &quot; &quot; + B))<SUB>59</SUB>>", "279": "<(IDENTIFIER,System,System.out.println(A + &quot; &quot; + B))<SUB>59</SUB>>", "281": "<(&lt;operator&gt;.addition,A + &quot; &quot; + B)<SUB>59</SUB>>", "283": "<(IDENTIFIER,A,A + &quot; &quot;)<SUB>59</SUB>>", "285": "<(IDENTIFIER,B,A + &quot; &quot; + B)<SUB>59</SUB>>", "287": "<(MODIFIER,STATIC)>"}}