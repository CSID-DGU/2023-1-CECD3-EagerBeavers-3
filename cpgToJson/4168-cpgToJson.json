{"edges": [["21", "22"], ["21", "23"], ["21", "142"], ["21", "143"], ["21", "144"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "44"], ["23", "49"], ["23", "87"], ["23", "93"], ["23", "98"], ["23", "107"], ["23", "131"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "6"], ["59", "60"], ["59", "63"], ["59", "66"], ["60", "61"], ["60", "62"], ["63", "5"], ["63", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["85", "86"], ["87", "88"], ["87", "89"], ["89", "90"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["93", "96"], ["96", "97"], ["98", "99"], ["98", "106"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["107", "108"], ["107", "109"], ["107", "112"], ["107", "117"], ["107", "119"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["24", "31"], ["27", "42"], ["38", "46"], ["44", "51"], ["87", "96"], ["93", "102"], ["98", "109"], ["131", "144"], ["26", "24"], ["40", "38"], ["46", "44"], ["51", "54"], ["54", "62"], ["54", "90"], ["57", "54"], ["89", "87"], ["96", "93"], ["99", "98"], ["109", "114"], ["112", "123"], ["112", "134"], ["117", "114"], ["132", "139"], ["135", "131"], ["29", "36"], ["32", "27"], ["42", "40"], ["60", "64"], ["63", "68"], ["90", "89"], ["101", "99"], ["114", "112"], ["120", "117"], ["134", "132"], ["137", "135"], ["31", "29"], ["34", "32"], ["62", "60"], ["64", "63"], ["68", "71"], ["71", "79"], ["71", "57"], ["74", "71"], ["102", "101"], ["121", "127"], ["124", "120"], ["139", "137"], ["36", "34"], ["77", "74"], ["123", "121"], ["125", "124"], ["78", "85"], ["83", "77"], ["127", "125"], ["79", "78"], ["85", "83"], ["21", "26"], ["22", "144"], ["24", "144"], ["29", "144"], ["32", "144"], ["32", "144"], ["32", "144"], ["27", "144"], ["42", "144"], ["40", "144"], ["38", "144"], ["38", "144"], ["44", "144"], ["44", "144"], ["44", "144"], ["54", "144"], ["87", "144"], ["87", "144"], ["93", "144"], ["93", "144"], ["93", "144"], ["101", "144"], ["98", "144"], ["98", "144"], ["109", "144"], ["112", "144"], ["112", "144"], ["131", "144"], ["135", "144"], ["139", "144"], ["137", "144"], ["135", "144"], ["131", "144"], ["131", "144"], ["125", "144"], ["124", "144"], ["120", "144"], ["120", "144"], ["117", "144"], ["60", "144"], ["63", "144"], ["64", "144"], ["63", "144"], ["63", "144"], ["68", "144"], ["71", "144"], ["71", "144"], ["57", "144"], ["77", "144"], ["85", "144"], ["83", "144"], ["77", "144"], ["77", "144"], ["74", "144"], ["40", "144"], ["83", "144"], ["93", "144"], ["21", "22"], ["21", "24"], ["40", "38"], ["40", "38"], ["46", "44"], ["89", "87"], ["21", "98"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "51"], ["21", "93"], ["87", "93"], ["96", "93"], ["21", "109"], ["120", "131"], ["135", "131"], ["135", "131"], ["21", "29"], ["21", "37"], ["21", "40"], ["42", "40"], ["38", "46"], ["21", "46"], ["51", "54"], ["57", "54"], ["21", "54"], ["46", "54"], ["71", "54"], ["54", "57"], ["21", "57"], ["21", "60"], ["90", "89"], ["90", "89"], ["21", "96"], ["109", "112"], ["117", "112"], ["21", "112"], ["114", "112"], ["114", "112"], ["127", "117"], ["21", "117"], ["125", "135"], ["21", "135"], ["137", "135"], ["137", "135"], ["29", "32"], ["21", "32"], ["27", "42"], ["21", "42"], ["60", "63"], ["21", "63"], ["64", "63"], ["21", "68"], ["21", "90"], ["54", "90"], ["102", "101"], ["102", "101"], ["21", "101"], ["102", "114"], ["21", "114"], ["125", "120"], ["125", "120"], ["21", "120"], ["21", "137"], ["139", "137"], ["139", "137"], ["42", "64"], ["21", "64"], ["68", "71"], ["74", "71"], ["21", "71"], ["54", "71"], ["71", "74"], ["21", "74"], ["83", "77"], ["83", "77"], ["21", "102"], ["90", "102"], ["125", "124"], ["125", "124"], ["21", "124"], ["114", "139"], ["21", "139"], ["21", "125"], ["127", "125"], ["127", "125"], ["21", "83"], ["85", "83"], ["21", "127"], ["112", "127"], ["63", "85"], ["21", "85"], ["54", "68"], ["54", "60"], ["54", "64"], ["54", "57"], ["54", "54"], ["54", "71"], ["54", "63"], ["54", "62"], ["112", "120"], ["112", "114"], ["112", "121"], ["112", "123"], ["112", "112"], ["112", "117"], ["112", "127"], ["112", "124"], ["112", "125"], ["71", "77"], ["71", "85"], ["71", "74"], ["71", "79"], ["71", "83"], ["71", "71"], ["71", "78"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY bf = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,bf,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(IDENTIFIER,n,n = parseInt(bf.readLine()))<SUB>4</SUB>>", "41": "<(IDENTIFIER,Integer,parseInt(bf.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,bf,readLine())<SUB>4</SUB>>", "45": "<(IDENTIFIER,p,p = new double[n][n])<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,new double[n][n])<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>6</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,i &lt; n)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "60": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(bf.readLine()))<SUB>7</SUB>>", "62": "<(&lt;operator&gt;.alloc,new StringTokenizer(bf.readLine()))<SUB>7</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(bf.readLine()))<SUB>7</SUB>>", "65": "<(IDENTIFIER,bf,readLine())<SUB>7</SUB>>", "67": "<(LOCAL,int j: int)<SUB>8</SUB>>", "69": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>8</SUB>>", "73": "<(IDENTIFIER,n,j &lt; n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,p[i][j] = parseDouble(st.nextToken()))<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,p[i][j] = parseDouble(st.nextToken()))<SUB>9</SUB>>", "83": "<(parseDouble,parseDouble(st.nextToken()))<SUB>9</SUB>>", "85": "<(nextToken,nextToken())<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,dp = new double[1 &lt;&lt; n])<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; n])>", "91": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "93": "<(fill,fill(dp, -1.0))<SUB>15</SUB>>", "95": "<(IDENTIFIER,dp,fill(dp, -1.0))<SUB>15</SUB>>", "97": "<(LITERAL,1.0,-1.0)<SUB>15</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>17</SUB>>", "103": "<(LITERAL,1,1 &lt;&lt; n)<SUB>17</SUB>>", "105": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>17</SUB>>", "107": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n - 1); i++),for (int i = 0; Some(i &lt; n - 1); i++))<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "111": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "113": "<(IDENTIFIER,i,i &lt; n - 1)<SUB>19</SUB>>", "115": "<(IDENTIFIER,n,n - 1)<SUB>19</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "123": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "125": "<(f,f(1 &lt;&lt; i))<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>20</SUB>>", "129": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>20</SUB>>", "131": "<(println,println(f((1 &lt;&lt; (n - 1)))))<SUB>23</SUB>>", "133": "<(IDENTIFIER,System,println(f((1 &lt;&lt; (n - 1)))))<SUB>23</SUB>>", "135": "<(f,f((1 &lt;&lt; (n - 1))))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n - 1))<SUB>23</SUB>>", "139": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>23</SUB>>", "141": "<(LITERAL,1,n - 1)<SUB>23</SUB>>", "143": "<(MODIFIER,STATIC)>"}}