{"edges": [["19", "20"], ["19", "21"], ["19", "178"], ["19", "179"], ["19", "180"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "61"], ["21", "62"], ["21", "66"], ["21", "158"], ["21", "176"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "153"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "116"], ["93", "94"], ["93", "105"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["119", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "144"], ["135", "136"], ["135", "137"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["176", "177"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "46"], ["62", "68"], ["176", "180"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["46", "49"], ["49", "56"], ["49", "64"], ["52", "49"], ["64", "62"], ["68", "71"], ["71", "78"], ["71", "160"], ["74", "71"], ["160", "163"], ["163", "172"], ["163", "176"], ["166", "163"], ["28", "26"], ["55", "52"], ["78", "83"], ["153", "74"], ["169", "166"], ["56", "59"], ["59", "55"], ["83", "86"], ["86", "95"], ["86", "154"], ["89", "86"], ["154", "153"], ["170", "173"], ["173", "169"], ["172", "170"], ["93", "123"], ["93", "89"], ["94", "93"], ["94", "106"], ["105", "93"], ["117", "89"], ["95", "99"], ["98", "94"], ["106", "110"], ["109", "105"], ["119", "117"], ["99", "102"], ["102", "98"], ["110", "113"], ["113", "109"], ["122", "119"], ["123", "130"], ["126", "122"], ["128", "126"], ["129", "138"], ["134", "128"], ["130", "129"], ["135", "147"], ["144", "134"], ["137", "135"], ["146", "144"], ["138", "141"], ["141", "137"], ["147", "150"], ["150", "146"], ["19", "24"], ["20", "180"], ["22", "180"], ["25", "180"], ["25", "180"], ["30", "180"], ["35", "180"], ["35", "180"], ["35", "180"], ["40", "180"], ["40", "180"], ["40", "180"], ["62", "180"], ["62", "180"], ["62", "180"], ["160", "180"], ["163", "180"], ["163", "180"], ["163", "180"], ["176", "180"], ["176", "180"], ["169", "180"], ["169", "180"], ["169", "180"], ["166", "180"], ["78", "180"], ["78", "180"], ["83", "180"], ["86", "180"], ["86", "180"], ["153", "180"], ["153", "180"], ["153", "180"], ["74", "180"], ["94", "180"], ["98", "180"], ["102", "180"], ["98", "180"], ["94", "180"], ["93", "180"], ["105", "180"], ["109", "180"], ["113", "180"], ["109", "180"], ["105", "180"], ["93", "180"], ["93", "180"], ["119", "180"], ["122", "180"], ["129", "180"], ["129", "180"], ["128", "180"], ["134", "180"], ["146", "180"], ["146", "180"], ["144", "180"], ["128", "180"], ["126", "180"], ["122", "180"], ["119", "180"], ["117", "180"], ["117", "180"], ["89", "180"], ["55", "180"], ["55", "180"], ["55", "180"], ["52", "180"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["64", "62"], ["22", "25"], ["19", "25"], ["19", "46"], ["19", "68"], ["19", "160"], ["37", "176"], ["59", "176"], ["19", "176"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "42"], ["19", "42"], ["46", "49"], ["52", "49"], ["19", "49"], ["42", "49"], ["49", "52"], ["19", "52"], ["59", "55"], ["49", "64"], ["19", "64"], ["68", "71"], ["74", "71"], ["19", "71"], ["64", "71"], ["86", "74"], ["19", "74"], ["35", "78"], ["102", "78"], ["113", "78"], ["129", "78"], ["19", "78"], ["78", "153"], ["117", "153"], ["19", "153"], ["160", "163"], ["166", "163"], ["19", "163"], ["71", "163"], ["163", "166"], ["19", "166"], ["19", "83"], ["62", "169"], ["153", "169"], ["37", "59"], ["19", "59"], ["83", "86"], ["89", "86"], ["19", "86"], ["71", "86"], ["86", "89"], ["19", "89"], ["94", "93"], ["94", "93"], ["105", "93"], ["105", "93"], ["119", "117"], ["119", "117"], ["119", "117"], ["40", "94"], ["105", "94"], ["146", "94"], ["109", "94"], ["146", "94"], ["55", "94"], ["102", "94"], ["102", "94"], ["40", "105"], ["94", "105"], ["109", "105"], ["109", "105"], ["40", "98"], ["109", "98"], ["146", "98"], ["55", "98"], ["102", "98"], ["102", "98"], ["40", "109"], ["146", "109"], ["55", "109"], ["113", "109"], ["113", "109"], ["126", "119"], ["19", "119"], ["78", "119"], ["117", "119"], ["62", "119"], ["126", "119"], ["19", "102"], ["113", "102"], ["129", "102"], ["35", "102"], ["19", "113"], ["102", "113"], ["62", "122"], ["126", "122"], ["126", "122"], ["144", "126"], ["19", "126"], ["128", "126"], ["128", "126"], ["129", "128"], ["129", "128"], ["134", "128"], ["130", "129"], ["130", "129"], ["19", "129"], ["135", "134"], ["135", "134"], ["144", "134"], ["144", "134"], ["19", "130"], ["102", "130"], ["113", "130"], ["119", "135"], ["19", "135"], ["137", "135"], ["137", "135"], ["135", "144"], ["19", "144"], ["146", "144"], ["146", "144"], ["40", "137"], ["109", "137"], ["146", "137"], ["55", "137"], ["94", "137"], ["105", "137"], ["40", "146"], ["137", "146"], ["137", "146"], ["49", "52"], ["49", "56"], ["49", "59"], ["49", "49"], ["49", "55"], ["71", "154"], ["71", "74"], ["71", "153"], ["71", "86"], ["71", "83"], ["71", "71"], ["71", "78"], ["163", "169"], ["163", "163"], ["163", "170"], ["163", "173"], ["163", "166"], ["163", "172"], ["86", "94"], ["86", "98"], ["86", "102"], ["86", "95"], ["86", "93"], ["86", "86"], ["86", "89"], ["86", "99"], ["93", "146"], ["93", "128"], ["93", "150"], ["93", "119"], ["93", "144"], ["93", "129"], ["93", "134"], ["93", "138"], ["93", "137"], ["93", "130"], ["93", "141"], ["93", "122"], ["93", "123"], ["93", "126"], ["93", "147"], ["93", "135"], ["93", "117"], ["94", "113"], ["94", "106"], ["94", "105"], ["94", "110"], ["94", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int[] x: int[])<SUB>5</SUB>>", "41": "<(IDENTIFIER,x,int[] x = new int[n])<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "45": "<(LOCAL,int i: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,x[i] = nextInt())<SUB>7</SUB>>", "57": "<(IDENTIFIER,x,x[i] = nextInt())<SUB>7</SUB>>", "59": "<(nextInt,nextInt())<SUB>7</SUB>>", "61": "<(LOCAL,double[] ans: double[])<SUB>9</SUB>>", "63": "<(IDENTIFIER,ans,double[] ans = new double[n])<SUB>9</SUB>>", "65": "<(IDENTIFIER,n,new double[n])<SUB>9</SUB>>", "67": "<(LOCAL,int i: int)<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "73": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "77": "<(LOCAL,double maxY: double)<SUB>11</SUB>>", "79": "<(IDENTIFIER,maxY,double maxY = r)<SUB>11</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "87": "<(IDENTIFIER,j,j &lt; i)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.logicalAnd,x[j] &lt;= x[i] + 2 * r &amp;&amp; x[j] &gt;= x[i] - 2 * r)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>13</SUB>>", "97": "<(IDENTIFIER,j,x[j] &lt;= x[i] + 2 * r)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,x[i] + 2 * r)<SUB>13</SUB>>", "103": "<(LITERAL,2,2 * r)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.greaterEqualsThan,x[j] &gt;= x[i] - 2 * r)<SUB>13</SUB>>", "107": "<(IDENTIFIER,x,x[j] &gt;= x[i] - 2 * r)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.subtraction,x[i] - 2 * r)<SUB>13</SUB>>", "111": "<(IDENTIFIER,x,x[i] - 2 * r)<SUB>13</SUB>>", "113": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>13</SUB>>", "115": "<(IDENTIFIER,r,2 * r)<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.assignment,maxY = Math.max(maxY, ans[j] + Math.sqrt(4 * r * r - (Math.abs(x[i] - x[j])) * (Math.abs(x[i] - x[j])))))<SUB>14</SUB>>", "119": "<(max,Math.max(maxY, ans[j] + Math.sqrt(4 * r * r - (Math.abs(x[i] - x[j])) * (Math.abs(x[i] - x[j])))))<SUB>14</SUB>>", "121": "<(IDENTIFIER,maxY,Math.max(maxY, ans[j] + Math.sqrt(4 * r * r - (Math.abs(x[i] - x[j])) * (Math.abs(x[i] - x[j])))))<SUB>14</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,ans[j])<SUB>14</SUB>>", "125": "<(IDENTIFIER,j,ans[j] + Math.sqrt(4 * r * r - (Math.abs(x[i] - x[j])) * (Math.abs(x[i] - x[j]))))<SUB>14</SUB>>", "127": "<(IDENTIFIER,Math,Math.sqrt(4 * r * r - (Math.abs(x[i] - x[j])) * (Math.abs(x[i] - x[j]))))<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.multiplication,4 * r * r)<SUB>14</SUB>>", "131": "<(LITERAL,4,4 * r)<SUB>14</SUB>>", "133": "<(IDENTIFIER,r,4 * r * r)<SUB>14</SUB>>", "135": "<(abs,Math.abs(x[i] - x[j]))<SUB>14</SUB>>", "137": "<(&lt;operator&gt;.subtraction,x[i] - x[j])<SUB>14</SUB>>", "139": "<(IDENTIFIER,x,x[i] - x[j])<SUB>14</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>14</SUB>>", "143": "<(IDENTIFIER,j,x[i] - x[j])<SUB>14</SUB>>", "145": "<(IDENTIFIER,Math,Math.abs(x[i] - x[j]))<SUB>14</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>14</SUB>>", "149": "<(IDENTIFIER,i,x[i] - x[j])<SUB>14</SUB>>", "151": "<(IDENTIFIER,x,x[i] - x[j])<SUB>14</SUB>>", "153": "<(&lt;operator&gt;.assignment,ans[i] = maxY)<SUB>17</SUB>>", "155": "<(IDENTIFIER,ans,ans[i] = maxY)<SUB>17</SUB>>", "157": "<(IDENTIFIER,maxY,ans[i] = maxY)<SUB>17</SUB>>", "159": "<(LOCAL,int i: int)<SUB>19</SUB>>", "161": "<(IDENTIFIER,i,int i = 0)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>19</SUB>>", "165": "<(IDENTIFIER,n,i &lt; n)<SUB>19</SUB>>", "167": "<(IDENTIFIER,i,i++)<SUB>19</SUB>>", "169": "<(println,System.out.println(ans[i]))<SUB>20</SUB>>", "171": "<(IDENTIFIER,System,System.out.println(ans[i]))<SUB>20</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>20</SUB>>", "175": "<(IDENTIFIER,i,System.out.println(ans[i]))<SUB>20</SUB>>", "177": "<(IDENTIFIER,sc,close())<SUB>22</SUB>>", "179": "<(MODIFIER,STATIC)>"}}