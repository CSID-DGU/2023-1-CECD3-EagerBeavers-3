{"edges": [["25", "26"], ["25", "27"], ["25", "416"], ["25", "417"], ["25", "418"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "39"], ["27", "40"], ["27", "44"], ["27", "45"], ["27", "49"], ["27", "50"], ["27", "54"], ["27", "55"], ["27", "61"], ["27", "62"], ["27", "69"], ["27", "122"], ["27", "175"], ["27", "414"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["35", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["57", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "90"], ["80", "92"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "98"], ["92", "109"], ["94", "95"], ["94", "96"], ["96", "97"], ["98", "99"], ["98", "108"], ["99", "100"], ["99", "107"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["109", "110"], ["109", "121"], ["110", "111"], ["110", "120"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "132"], ["122", "134"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "151"], ["145", "162"], ["147", "148"], ["147", "149"], ["149", "150"], ["151", "152"], ["151", "161"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["162", "163"], ["162", "174"], ["163", "164"], ["163", "173"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["175", "176"], ["175", "181"], ["175", "234"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["182", "183"], ["182", "184"], ["182", "187"], ["182", "190"], ["182", "192"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["192", "8"], ["192", "193"], ["192", "196"], ["192", "198"], ["192", "230"], ["193", "194"], ["193", "195"], ["196", "7"], ["196", "197"], ["198", "199"], ["198", "200"], ["198", "203"], ["198", "206"], ["198", "208"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "205"], ["206", "207"], ["208", "209"], ["208", "219"], ["209", "210"], ["209", "217"], ["210", "211"], ["210", "216"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["217", "218"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "228"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["230", "231"], ["230", "232"], ["232", "233"], ["234", "235"], ["235", "236"], ["235", "368"], ["236", "237"], ["236", "238"], ["236", "241"], ["236", "246"], ["236", "248"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["248", "249"], ["249", "250"], ["249", "251"], ["249", "254"], ["249", "257"], ["249", "259"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "256"], ["257", "258"], ["259", "260"], ["260", "261"], ["260", "262"], ["260", "265"], ["260", "268"], ["260", "270"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["268", "269"], ["270", "271"], ["270", "284"], ["271", "272"], ["271", "279"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["284", "285"], ["284", "286"], ["284", "289"], ["284", "292"], ["284", "294"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["294", "295"], ["294", "296"], ["294", "305"], ["294", "306"], ["294", "315"], ["296", "297"], ["296", "298"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "314"], ["311", "312"], ["311", "313"], ["315", "316"], ["315", "331"], ["316", "317"], ["316", "328"], ["317", "318"], ["317", "325"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["331", "332"], ["332", "333"], ["332", "340"], ["333", "334"], ["333", "339"], ["334", "335"], ["334", "338"], ["335", "336"], ["335", "337"], ["340", "341"], ["340", "342"], ["340", "349"], ["342", "343"], ["342", "348"], ["343", "344"], ["343", "347"], ["344", "345"], ["344", "346"], ["349", "350"], ["349", "359"], ["350", "351"], ["350", "356"], ["351", "352"], ["351", "355"], ["352", "353"], ["352", "354"], ["356", "357"], ["356", "358"], ["359", "360"], ["359", "367"], ["360", "361"], ["360", "362"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["368", "369"], ["368", "370"], ["368", "373"], ["368", "376"], ["368", "378"], ["370", "371"], ["370", "372"], ["373", "374"], ["373", "375"], ["376", "377"], ["378", "10"], ["378", "379"], ["378", "382"], ["378", "384"], ["378", "410"], ["379", "380"], ["379", "381"], ["382", "9"], ["382", "383"], ["384", "385"], ["384", "386"], ["384", "389"], ["384", "392"], ["384", "394"], ["386", "387"], ["386", "388"], ["389", "390"], ["389", "391"], ["392", "393"], ["394", "395"], ["395", "396"], ["395", "397"], ["397", "398"], ["397", "409"], ["398", "399"], ["398", "408"], ["399", "400"], ["399", "405"], ["400", "401"], ["400", "404"], ["401", "402"], ["401", "403"], ["405", "406"], ["405", "407"], ["410", "411"], ["410", "412"], ["412", "413"], ["414", "415"], ["28", "31"], ["31", "34"], ["32", "38"], ["35", "42"], ["40", "47"], ["45", "52"], ["50", "57"], ["55", "65"], ["62", "71"], ["414", "418"], ["30", "28"], ["34", "32"], ["36", "35"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["64", "62"], ["71", "74"], ["74", "82"], ["74", "124"], ["77", "74"], ["124", "129"], ["127", "137"], ["127", "177"], ["132", "129"], ["176", "184"], ["176", "238"], ["38", "36"], ["65", "64"], ["129", "127"], ["177", "176"], ["82", "87"], ["85", "96"], ["85", "77"], ["90", "87"], ["137", "140"], ["140", "149"], ["140", "132"], ["143", "140"], ["184", "187"], ["187", "195"], ["187", "414"], ["190", "187"], ["87", "85"], ["94", "103"], ["98", "115"], ["109", "90"], ["147", "156"], ["151", "168"], ["162", "143"], ["193", "196"], ["196", "200"], ["230", "190"], ["238", "243"], ["241", "251"], ["241", "370"], ["246", "243"], ["370", "373"], ["373", "381"], ["373", "414"], ["376", "373"], ["96", "94"], ["99", "98"], ["110", "109"], ["149", "147"], ["152", "151"], ["163", "162"], ["195", "193"], ["200", "203"], ["203", "212"], ["203", "232"], ["206", "203"], ["232", "230"], ["243", "241"], ["379", "382"], ["382", "386"], ["410", "376"], ["100", "99"], ["111", "110"], ["153", "152"], ["164", "163"], ["209", "224"], ["219", "206"], ["251", "254"], ["254", "262"], ["254", "246"], ["257", "254"], ["381", "379"], ["386", "389"], ["389", "401"], ["389", "412"], ["392", "389"], ["412", "410"], ["102", "100"], ["113", "111"], ["155", "153"], ["166", "164"], ["210", "217"], ["217", "209"], ["221", "219"], ["395", "392"], ["103", "102"], ["114", "113"], ["156", "155"], ["167", "166"], ["211", "210"], ["222", "221"], ["262", "265"], ["265", "274"], ["265", "257"], ["268", "265"], ["397", "395"], ["115", "114"], ["168", "167"], ["212", "211"], ["223", "222"], ["271", "286"], ["398", "397"], ["224", "223"], ["272", "282"], ["279", "271"], ["286", "289"], ["289", "301"], ["289", "268"], ["292", "289"], ["399", "398"], ["273", "272"], ["280", "279"], ["296", "311"], ["306", "319"], ["400", "405"], ["405", "399"], ["274", "273"], ["282", "280"], ["298", "296"], ["308", "306"], ["316", "335"], ["316", "292"], ["401", "400"], ["300", "298"], ["310", "308"], ["317", "316"], ["317", "328"], ["328", "316"], ["332", "292"], ["301", "300"], ["311", "310"], ["318", "317"], ["318", "325"], ["325", "317"], ["333", "344"], ["340", "332"], ["319", "318"], ["319", "322"], ["322", "318"], ["334", "333"], ["342", "352"], ["349", "340"], ["335", "334"], ["343", "342"], ["350", "363"], ["359", "349"], ["344", "343"], ["351", "356"], ["356", "350"], ["360", "359"], ["352", "351"], ["362", "360"], ["363", "362"], ["25", "30"], ["26", "418"], ["28", "418"], ["31", "418"], ["32", "418"], ["35", "418"], ["35", "418"], ["40", "418"], ["45", "418"], ["52", "418"], ["50", "418"], ["50", "418"], ["55", "418"], ["55", "418"], ["55", "418"], ["62", "418"], ["65", "418"], ["64", "418"], ["62", "418"], ["62", "418"], ["127", "418"], ["127", "418"], ["177", "418"], ["176", "418"], ["176", "418"], ["238", "418"], ["241", "418"], ["243", "418"], ["241", "418"], ["241", "418"], ["370", "418"], ["373", "418"], ["373", "418"], ["373", "418"], ["379", "418"], ["382", "418"], ["386", "418"], ["389", "418"], ["389", "418"], ["389", "418"], ["412", "418"], ["410", "418"], ["410", "418"], ["376", "418"], ["405", "418"], ["398", "418"], ["397", "418"], ["395", "418"], ["395", "418"], ["392", "418"], ["246", "418"], ["262", "418"], ["265", "418"], ["265", "418"], ["265", "418"], ["257", "418"], ["271", "418"], ["279", "418"], ["271", "418"], ["271", "418"], ["286", "418"], ["289", "418"], ["289", "418"], ["268", "418"], ["298", "418"], ["296", "418"], ["296", "418"], ["306", "418"], ["308", "418"], ["306", "418"], ["306", "418"], ["319", "418"], ["318", "418"], ["322", "418"], ["318", "418"], ["317", "418"], ["325", "418"], ["317", "418"], ["316", "418"], ["328", "418"], ["316", "418"], ["316", "418"], ["332", "418"], ["349", "418"], ["362", "418"], ["349", "418"], ["340", "418"], ["332", "418"], ["332", "418"], ["292", "418"], ["184", "418"], ["187", "418"], ["187", "418"], ["187", "418"], ["414", "418"], ["414", "418"], ["193", "418"], ["196", "418"], ["200", "418"], ["203", "418"], ["203", "418"], ["203", "418"], ["232", "418"], ["230", "418"], ["230", "418"], ["190", "418"], ["209", "418"], ["209", "418"], ["221", "418"], ["219", "418"], ["219", "418"], ["206", "418"], ["137", "418"], ["140", "418"], ["140", "418"], ["140", "418"], ["132", "418"], ["149", "418"], ["147", "418"], ["147", "418"], ["155", "418"], ["151", "418"], ["151", "418"], ["167", "418"], ["166", "418"], ["162", "418"], ["162", "418"], ["162", "418"], ["143", "418"], ["82", "418"], ["85", "418"], ["87", "418"], ["85", "418"], ["85", "418"], ["77", "418"], ["96", "418"], ["94", "418"], ["94", "418"], ["98", "418"], ["98", "418"], ["114", "418"], ["113", "418"], ["109", "418"], ["109", "418"], ["109", "418"], ["90", "418"], ["340", "418"], ["25", "26"], ["25", "28"], ["25", "32"], ["42", "40"], ["47", "45"], ["52", "50"], ["57", "55"], ["57", "55"], ["57", "55"], ["64", "62"], ["64", "62"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["25", "71"], ["25", "124"], ["35", "414"], ["410", "414"], ["230", "414"], ["25", "414"], ["31", "42"], ["25", "42"], ["42", "47"], ["25", "47"], ["47", "52"], ["25", "52"], ["40", "57"], ["25", "57"], ["45", "57"], ["65", "64"], ["65", "64"], ["25", "64"], ["71", "74"], ["77", "74"], ["25", "74"], ["65", "74"], ["74", "77"], ["115", "77"], ["25", "77"], ["124", "127"], ["132", "127"], ["25", "127"], ["129", "127"], ["129", "127"], ["127", "132"], ["25", "132"], ["156", "132"], ["177", "176"], ["177", "176"], ["25", "176"], ["57", "65"], ["25", "65"], ["57", "65"], ["25", "82"], ["74", "129"], ["25", "129"], ["25", "137"], ["50", "177"], ["25", "177"], ["25", "184"], ["82", "85"], ["90", "85"], ["25", "85"], ["87", "85"], ["87", "85"], ["25", "90"], ["85", "90"], ["96", "94"], ["94", "98"], ["25", "98"], ["25", "109"], ["94", "109"], ["137", "140"], ["143", "140"], ["25", "140"], ["65", "140"], ["167", "140"], ["87", "140"], ["25", "143"], ["140", "143"], ["149", "147"], ["147", "151"], ["25", "151"], ["25", "162"], ["147", "162"], ["184", "187"], ["190", "187"], ["25", "187"], ["129", "187"], ["187", "190"], ["25", "190"], ["25", "193"], ["25", "238"], ["25", "370"], ["65", "87"], ["115", "87"], ["25", "87"], ["193", "196"], ["25", "196"], ["25", "200"], ["35", "230"], ["25", "230"], ["232", "230"], ["238", "241"], ["246", "241"], ["25", "241"], ["243", "241"], ["243", "241"], ["241", "246"], ["356", "246"], ["25", "246"], ["370", "373"], ["376", "373"], ["25", "373"], ["129", "373"], ["254", "373"], ["373", "376"], ["25", "376"], ["25", "379"], ["52", "96"], ["25", "96"], ["52", "149"], ["96", "149"], ["25", "149"], ["200", "203"], ["206", "203"], ["25", "203"], ["65", "203"], ["140", "203"], ["87", "203"], ["203", "206"], ["25", "206"], ["217", "209"], ["196", "232"], ["219", "232"], ["25", "232"], ["177", "243"], ["25", "243"], ["25", "251"], ["379", "382"], ["25", "382"], ["25", "386"], ["35", "410"], ["25", "410"], ["412", "410"], ["196", "219"], ["25", "219"], ["209", "219"], ["251", "254"], ["257", "254"], ["25", "254"], ["129", "254"], ["319", "254"], ["254", "257"], ["363", "257"], ["25", "257"], ["386", "389"], ["392", "389"], ["25", "389"], ["65", "389"], ["265", "389"], ["140", "389"], ["87", "389"], ["389", "392"], ["25", "392"], ["382", "412"], ["395", "412"], ["25", "412"], ["103", "102"], ["103", "102"], ["85", "102"], ["25", "102"], ["115", "113"], ["115", "113"], ["25", "113"], ["85", "113"], ["156", "155"], ["156", "155"], ["140", "155"], ["25", "155"], ["167", "166"], ["167", "166"], ["25", "166"], ["140", "166"], ["25", "217"], ["209", "221"], ["25", "221"], ["25", "262"], ["382", "395"], ["25", "395"], ["398", "395"], ["398", "395"], ["74", "103"], ["115", "103"], ["25", "103"], ["87", "103"], ["115", "114"], ["115", "114"], ["25", "114"], ["85", "114"], ["127", "156"], ["25", "156"], ["140", "156"], ["156", "167"], ["25", "167"], ["156", "167"], ["262", "265"], ["268", "265"], ["25", "265"], ["65", "265"], ["322", "265"], ["363", "265"], ["140", "265"], ["87", "265"], ["265", "268"], ["25", "268"], ["279", "271"], ["279", "271"], ["398", "397"], ["398", "397"], ["25", "397"], ["103", "115"], ["25", "115"], ["103", "115"], ["156", "168"], ["25", "168"], ["25", "286"], ["25", "398"], ["25", "279"], ["286", "289"], ["292", "289"], ["25", "289"], ["289", "292"], ["25", "292"], ["254", "296"], ["363", "296"], ["25", "296"], ["265", "306"], ["25", "306"], ["243", "405"], ["25", "405"], ["254", "298"], ["363", "298"], ["25", "298"], ["265", "308"], ["25", "308"], ["317", "316"], ["317", "316"], ["328", "316"], ["328", "316"], ["340", "332"], ["340", "332"], ["340", "332"], ["318", "317"], ["318", "317"], ["325", "317"], ["325", "317"], ["306", "328"], ["322", "328"], ["25", "328"], ["319", "318"], ["319", "318"], ["322", "318"], ["322", "318"], ["319", "325"], ["25", "325"], ["25", "340"], ["271", "340"], ["332", "340"], ["296", "319"], ["25", "319"], ["254", "319"], ["306", "322"], ["25", "322"], ["265", "322"], ["363", "322"], ["241", "356"], ["25", "356"], ["363", "362"], ["363", "362"], ["25", "362"], ["25", "363"], ["254", "363"], ["265", "363"], ["322", "363"], ["74", "74"], ["74", "77"], ["74", "85"], ["74", "87"], ["74", "82"], ["127", "129"], ["127", "127"], ["127", "140"], ["127", "132"], ["127", "137"], ["176", "243"], ["176", "370"], ["176", "238"], ["176", "184"], ["176", "241"], ["176", "373"], ["176", "187"], ["85", "102"], ["85", "114"], ["85", "100"], ["85", "109"], ["85", "94"], ["85", "115"], ["85", "96"], ["85", "98"], ["85", "113"], ["85", "85"], ["85", "103"], ["85", "87"], ["85", "90"], ["85", "111"], ["85", "99"], ["85", "110"], ["140", "167"], ["140", "163"], ["140", "162"], ["140", "168"], ["140", "152"], ["140", "140"], ["140", "147"], ["140", "149"], ["140", "151"], ["140", "153"], ["140", "164"], ["140", "155"], ["140", "166"], ["140", "143"], ["140", "156"], ["187", "230"], ["187", "196"], ["187", "195"], ["187", "190"], ["187", "200"], ["187", "232"], ["187", "187"], ["187", "193"], ["187", "203"], ["241", "243"], ["241", "254"], ["241", "241"], ["241", "246"], ["241", "251"], ["373", "376"], ["373", "412"], ["373", "389"], ["373", "382"], ["373", "410"], ["373", "379"], ["373", "386"], ["373", "373"], ["373", "381"], ["203", "209"], ["203", "206"], ["203", "224"], ["203", "217"], ["203", "222"], ["203", "223"], ["203", "212"], ["203", "221"], ["203", "210"], ["203", "211"], ["203", "203"], ["203", "219"], ["254", "262"], ["254", "254"], ["254", "257"], ["254", "265"], ["389", "401"], ["389", "392"], ["389", "389"], ["389", "405"], ["389", "397"], ["389", "395"], ["389", "400"], ["389", "398"], ["389", "399"], ["265", "272"], ["265", "268"], ["265", "274"], ["265", "282"], ["265", "273"], ["265", "279"], ["265", "289"], ["265", "280"], ["265", "265"], ["265", "286"], ["265", "271"], ["289", "292"], ["289", "308"], ["289", "317"], ["289", "298"], ["289", "300"], ["289", "306"], ["289", "296"], ["289", "311"], ["289", "310"], ["289", "316"], ["289", "319"], ["289", "301"], ["289", "289"], ["289", "318"], ["316", "334"], ["316", "356"], ["316", "349"], ["316", "340"], ["316", "362"], ["316", "360"], ["316", "335"], ["316", "351"], ["316", "342"], ["316", "332"], ["316", "352"], ["316", "343"], ["316", "333"], ["316", "359"], ["316", "350"], ["316", "363"], ["316", "344"], ["317", "328"], ["318", "325"], ["319", "322"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY out = new FastOutput(System.out))<SUB>4</SUB>>", "34": "<(&lt;operator&gt;.alloc,new FastOutput(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new FastOutput(System.out))<SUB>4</SUB>>", "37": "<(IDENTIFIER,System,new FastOutput(System.out))<SUB>4</SUB>>", "39": "<(LOCAL,int n: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>6</SUB>>", "47": "<(nextInt,nextInt())<SUB>6</SUB>>", "49": "<(LOCAL,int k: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,k,int k = nextInt())<SUB>7</SUB>>", "53": "<(IDENTIFIER,sc,nextInt())<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[][][] ans = new int[n][m][11])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n][m][11])>", "59": "<(IDENTIFIER,m,new int[n][m][11])<SUB>8</SUB>>", "61": "<(LOCAL,int[][] arr: int[][])<SUB>9</SUB>>", "63": "<(IDENTIFIER,arr,int[][] arr = new int[n * m][4])<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.multiplication,n * m)<SUB>9</SUB>>", "67": "<(IDENTIFIER,m,n * m)<SUB>9</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "73": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(LOCAL,int j: int)<SUB>11</SUB>>", "83": "<(IDENTIFIER,j,int j = 0)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.lessThan,j &lt; m - 1)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>11</SUB>>", "89": "<(LITERAL,1,m - 1)<SUB>11</SUB>>", "91": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "93": "<(LOCAL,int x: int)<SUB>12</SUB>>", "95": "<(IDENTIFIER,x,int x = nextInt())<SUB>12</SUB>>", "97": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,arr[i * m + j][3])<SUB>13</SUB>>", "101": "<(IDENTIFIER,arr,arr[i * m + j][3] = x)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.multiplication,i * m)<SUB>13</SUB>>", "105": "<(IDENTIFIER,m,i * m)<SUB>13</SUB>>", "107": "<(LITERAL,3,arr[i * m + j][3] = x)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,arr[i * m + j + 1][2] = x)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,arr[i * m + j + 1])<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.addition,i * m + j + 1)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.multiplication,i * m)<SUB>14</SUB>>", "117": "<(IDENTIFIER,m,i * m)<SUB>14</SUB>>", "119": "<(LITERAL,1,i * m + j + 1)<SUB>14</SUB>>", "121": "<(IDENTIFIER,x,arr[i * m + j + 1][2] = x)<SUB>14</SUB>>", "123": "<(LOCAL,int i: int)<SUB>17</SUB>>", "125": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "131": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "133": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "139": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "141": "<(IDENTIFIER,j,j &lt; m)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.assignment,int x = nextInt())<SUB>19</SUB>>", "149": "<(nextInt,nextInt())<SUB>19</SUB>>", "151": "<(&lt;operator&gt;.assignment,arr[i * m + j][1] = x)<SUB>20</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,arr[i * m + j])<SUB>20</SUB>>", "155": "<(&lt;operator&gt;.addition,i * m + j)<SUB>20</SUB>>", "157": "<(IDENTIFIER,i,i * m)<SUB>20</SUB>>", "159": "<(IDENTIFIER,j,i * m + j)<SUB>20</SUB>>", "161": "<(IDENTIFIER,x,arr[i * m + j][1] = x)<SUB>20</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,arr[(i + 1) * m + j][0])<SUB>21</SUB>>", "165": "<(IDENTIFIER,arr,arr[(i + 1) * m + j][0] = x)<SUB>21</SUB>>", "167": "<(&lt;operator&gt;.multiplication,(i + 1) * m)<SUB>21</SUB>>", "169": "<(IDENTIFIER,i,i + 1)<SUB>21</SUB>>", "171": "<(IDENTIFIER,m,(i + 1) * m)<SUB>21</SUB>>", "173": "<(LITERAL,0,arr[(i + 1) * m + j][0] = x)<SUB>21</SUB>>", "175": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>24</SUB>>", "177": "<(&lt;operator&gt;.modulo,k % 2)<SUB>24</SUB>>", "179": "<(LITERAL,2,k % 2)<SUB>24</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "183": "<(LOCAL,int i: int)<SUB>25</SUB>>", "185": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "187": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>25</SUB>>", "189": "<(IDENTIFIER,n,i &lt; n)<SUB>25</SUB>>", "191": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "8": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>26</SUB>>", "194": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder(&quot;&quot;))<SUB>26</SUB>>", "196": "<(&lt;init&gt;,new StringBuilder(&quot;&quot;))<SUB>26</SUB>>", "197": "<(LITERAL,&quot;&quot;,new StringBuilder(&quot;&quot;))<SUB>26</SUB>>", "199": "<(LOCAL,int j: int)<SUB>27</SUB>>", "201": "<(IDENTIFIER,j,int j = 0)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>27</SUB>>", "205": "<(IDENTIFIER,m,j &lt; m)<SUB>27</SUB>>", "207": "<(IDENTIFIER,j,j++)<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.assignment,ans[i][j][10] = -1)<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>28</SUB>>", "213": "<(IDENTIFIER,ans,ans[i][j][10] = -1)<SUB>28</SUB>>", "215": "<(IDENTIFIER,j,ans[i][j][10] = -1)<SUB>28</SUB>>", "217": "<(&lt;operator&gt;.minus,-1)<SUB>28</SUB>>", "219": "<(append,sb.append(ans[i][j][10] + &quot; &quot;))<SUB>29</SUB>>", "221": "<(&lt;operator&gt;.addition,ans[i][j][10] + &quot; &quot;)<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>29</SUB>>", "225": "<(IDENTIFIER,ans,ans[i][j][10] + &quot; &quot;)<SUB>29</SUB>>", "227": "<(IDENTIFIER,j,ans[i][j][10] + &quot; &quot;)<SUB>29</SUB>>", "229": "<(LITERAL,&quot; &quot;,ans[i][j][10] + &quot; &quot;)<SUB>29</SUB>>", "231": "<(IDENTIFIER,out,println(sb.toString()))<SUB>31</SUB>>", "233": "<(IDENTIFIER,sb,sb.toString())<SUB>31</SUB>>", "235": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "237": "<(LOCAL,int ceng: int)<SUB>35</SUB>>", "239": "<(IDENTIFIER,ceng,int ceng = 1)<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.lessEqualsThan,ceng &lt;= k / 2)<SUB>35</SUB>>", "243": "<(&lt;operator&gt;.division,k / 2)<SUB>35</SUB>>", "245": "<(LITERAL,2,k / 2)<SUB>35</SUB>>", "247": "<(IDENTIFIER,ceng,ceng++)<SUB>35</SUB>>", "249": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>36</SUB>>", "251": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>36</SUB>>", "253": "<(LITERAL,0,int i = 0)<SUB>36</SUB>>", "255": "<(IDENTIFIER,i,i &lt; n)<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.postIncrement,i++)<SUB>36</SUB>>", "259": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "261": "<(LOCAL,int j: int)<SUB>37</SUB>>", "263": "<(IDENTIFIER,j,int j = 0)<SUB>37</SUB>>", "265": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>37</SUB>>", "267": "<(IDENTIFIER,m,j &lt; m)<SUB>37</SUB>>", "269": "<(IDENTIFIER,j,j++)<SUB>37</SUB>>", "271": "<(&lt;operator&gt;.assignment,ans[i][j][ceng] = Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>38</SUB>>", "275": "<(IDENTIFIER,ans,ans[i][j][ceng] = Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "277": "<(IDENTIFIER,j,ans[i][j][ceng] = Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "279": "<(&lt;operator&gt;.division,Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "281": "<(IDENTIFIER,Integer,Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "283": "<(LITERAL,3,Integer.MAX_VALUE / 3)<SUB>38</SUB>>", "285": "<(LOCAL,int dr: int)<SUB>39</SUB>>", "287": "<(IDENTIFIER,dr,int dr = 0)<SUB>39</SUB>>", "289": "<(&lt;operator&gt;.lessThan,dr &lt; 4)<SUB>39</SUB>>", "291": "<(LITERAL,4,dr &lt; 4)<SUB>39</SUB>>", "293": "<(IDENTIFIER,dr,dr++)<SUB>39</SUB>>", "295": "<(LOCAL,int nx: int)<SUB>40</SUB>>", "297": "<(IDENTIFIER,nx,int nx = i + dir[dr][0])<SUB>40</SUB>>", "299": "<(IDENTIFIER,i,i + dir[dr][0])<SUB>40</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,dir[dr])<SUB>40</SUB>>", "303": "<(IDENTIFIER,dr,i + dir[dr][0])<SUB>40</SUB>>", "305": "<(LOCAL,int ny: int)<SUB>41</SUB>>", "307": "<(IDENTIFIER,ny,int ny = j + dir[dr][1])<SUB>41</SUB>>", "309": "<(IDENTIFIER,j,j + dir[dr][1])<SUB>41</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,dir[dr])<SUB>41</SUB>>", "313": "<(IDENTIFIER,dr,j + dir[dr][1])<SUB>41</SUB>>", "315": "<(CONTROL_STRUCTURE,if (nx &lt; n &amp;&amp; ny &lt; m &amp;&amp; nx &gt;= 0 &amp;&amp; ny &gt;= 0),if (nx &lt; n &amp;&amp; ny &lt; m &amp;&amp; nx &gt;= 0 &amp;&amp; ny &gt;= 0))<SUB>42</SUB>>", "317": "<(&lt;operator&gt;.logicalAnd,nx &lt; n &amp;&amp; ny &lt; m &amp;&amp; nx &gt;= 0)<SUB>42</SUB>>", "319": "<(&lt;operator&gt;.lessThan,nx &lt; n)<SUB>42</SUB>>", "321": "<(IDENTIFIER,n,nx &lt; n)<SUB>42</SUB>>", "323": "<(IDENTIFIER,ny,ny &lt; m)<SUB>42</SUB>>", "325": "<(&lt;operator&gt;.greaterEqualsThan,nx &gt;= 0)<SUB>42</SUB>>", "327": "<(LITERAL,0,nx &gt;= 0)<SUB>42</SUB>>", "329": "<(IDENTIFIER,ny,ny &gt;= 0)<SUB>42</SUB>>", "331": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,ans[i][j][ceng])<SUB>43</SUB>>", "335": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>43</SUB>>", "337": "<(IDENTIFIER,i,ans[i][j][ceng] = Math.min(ans[i][j][ceng], ans[nx][ny][ceng - 1] + arr[i * m + j][dr]))<SUB>43</SUB>>", "339": "<(IDENTIFIER,ceng,ans[i][j][ceng] = Math.min(ans[i][j][ceng], ans[nx][ny][ceng - 1] + arr[i * m + j][dr]))<SUB>43</SUB>>", "341": "<(IDENTIFIER,Math,Math.min(ans[i][j][ceng], ans[nx][ny][ceng - 1] + arr[i * m + j][dr]))<SUB>43</SUB>>", "343": "<(&lt;operator&gt;.indexAccess,ans[i][j])<SUB>43</SUB>>", "345": "<(IDENTIFIER,ans,Math.min(ans[i][j][ceng], ans[nx][ny][ceng - 1] + arr[i * m + j][dr]))<SUB>43</SUB>>", "347": "<(IDENTIFIER,j,Math.min(ans[i][j][ceng], ans[nx][ny][ceng - 1] + arr[i * m + j][dr]))<SUB>43</SUB>>", "349": "<(&lt;operator&gt;.addition,ans[nx][ny][ceng - 1] + arr[i * m + j][dr])<SUB>43</SUB>>", "351": "<(&lt;operator&gt;.indexAccess,ans[nx][ny])<SUB>43</SUB>>", "353": "<(IDENTIFIER,ans,ans[nx][ny][ceng - 1] + arr[i * m + j][dr])<SUB>43</SUB>>", "355": "<(IDENTIFIER,ny,ans[nx][ny][ceng - 1] + arr[i * m + j][dr])<SUB>43</SUB>>", "357": "<(IDENTIFIER,ceng,ceng - 1)<SUB>43</SUB>>", "359": "<(&lt;operator&gt;.indexAccess,arr[i * m + j][dr])<SUB>43</SUB>>", "361": "<(IDENTIFIER,arr,ans[nx][ny][ceng - 1] + arr[i * m + j][dr])<SUB>43</SUB>>", "363": "<(&lt;operator&gt;.multiplication,i * m)<SUB>43</SUB>>", "365": "<(IDENTIFIER,m,i * m)<SUB>43</SUB>>", "367": "<(IDENTIFIER,dr,ans[nx][ny][ceng - 1] + arr[i * m + j][dr])<SUB>43</SUB>>", "369": "<(LOCAL,int i: int)<SUB>49</SUB>>", "371": "<(IDENTIFIER,i,int i = 0)<SUB>49</SUB>>", "373": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>49</SUB>>", "375": "<(IDENTIFIER,n,i &lt; n)<SUB>49</SUB>>", "377": "<(IDENTIFIER,i,i++)<SUB>49</SUB>>", "10": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>50</SUB>>", "380": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder(&quot;&quot;))<SUB>50</SUB>>", "382": "<(&lt;init&gt;,new StringBuilder(&quot;&quot;))<SUB>50</SUB>>", "383": "<(LITERAL,&quot;&quot;,new StringBuilder(&quot;&quot;))<SUB>50</SUB>>", "385": "<(LOCAL,int j: int)<SUB>51</SUB>>", "387": "<(IDENTIFIER,j,int j = 0)<SUB>51</SUB>>", "389": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>51</SUB>>", "391": "<(IDENTIFIER,m,j &lt; m)<SUB>51</SUB>>", "393": "<(IDENTIFIER,j,j++)<SUB>51</SUB>>", "395": "<(append,sb.append(ans[i][j][k / 2] * 2 + &quot; &quot;))<SUB>52</SUB>>", "397": "<(&lt;operator&gt;.addition,ans[i][j][k / 2] * 2 + &quot; &quot;)<SUB>52</SUB>>", "399": "<(&lt;operator&gt;.indexAccess,ans[i][j][k / 2])<SUB>52</SUB>>", "401": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>52</SUB>>", "403": "<(IDENTIFIER,i,ans[i][j][k / 2] * 2)<SUB>52</SUB>>", "405": "<(&lt;operator&gt;.division,k / 2)<SUB>52</SUB>>", "407": "<(LITERAL,2,k / 2)<SUB>52</SUB>>", "409": "<(LITERAL,&quot; &quot;,ans[i][j][k / 2] * 2 + &quot; &quot;)<SUB>52</SUB>>", "411": "<(IDENTIFIER,out,println(sb.toString()))<SUB>54</SUB>>", "413": "<(IDENTIFIER,sb,sb.toString())<SUB>54</SUB>>", "415": "<(IDENTIFIER,out,close())<SUB>57</SUB>>", "417": "<(MODIFIER,STATIC)>"}}