{"edges": [["21", "23"], ["21", "157"], ["21", "158"], ["21", "159"], ["23", "24"], ["23", "155"], ["24", "25"], ["24", "26"], ["24", "145"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "39"], ["26", "40"], ["26", "44"], ["26", "45"], ["26", "48"], ["26", "49"], ["26", "143"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "38"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "6"], ["51", "52"], ["51", "55"], ["51", "64"], ["51", "71"], ["51", "89"], ["51", "91"], ["51", "101"], ["51", "109"], ["51", "114"], ["51", "138"], ["52", "53"], ["52", "54"], ["55", "5"], ["55", "56"], ["56", "57"], ["56", "60"], ["56", "63"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "69"], ["65", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "78"], ["73", "84"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "100"], ["96", "97"], ["96", "98"], ["98", "99"], ["101", "102"], ["102", "103"], ["102", "106"], ["102", "108"], ["103", "104"], ["103", "105"], ["106", "107"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "121"], ["116", "127"], ["116", "133"], ["117", "118"], ["117", "119"], ["119", "120"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["146", "147"], ["147", "148"], ["148", "149"], ["148", "152"], ["148", "154"], ["149", "150"], ["149", "151"], ["152", "153"], ["155", "156"], ["155", "159"], ["25", "29"], ["25", "151"], ["27", "34"], ["30", "42"], ["40", "45"], ["45", "54"], ["45", "143"], ["143", "155"], ["29", "27"], ["42", "40"], ["147", "155"], ["32", "35"], ["35", "30"], ["52", "59"], ["55", "66"], ["89", "94"], ["91", "105"], ["101", "112"], ["109", "119"], ["109", "141"], ["138", "54"], ["138", "143"], ["34", "32"], ["54", "52"], ["65", "143"], ["65", "76"], ["65", "89"], ["92", "98"], ["95", "91"], ["110", "109"], ["139", "138"], ["149", "152"], ["152", "147"], ["57", "60"], ["60", "55"], ["66", "65"], ["74", "79"], ["84", "76"], ["84", "89"], ["94", "92"], ["96", "95"], ["103", "106"], ["106", "101"], ["112", "110"], ["117", "122"], ["133", "119"], ["133", "141"], ["141", "139"], ["151", "149"], ["59", "57"], ["76", "74"], ["79", "89"], ["79", "86"], ["86", "84"], ["98", "96"], ["105", "103"], ["119", "117"], ["122", "141"], ["122", "128"], ["128", "141"], ["128", "136"], ["134", "133"], ["136", "134"], ["21", "25"], ["22", "159"], ["149", "159"], ["152", "159"], ["152", "159"], ["147", "159"], ["27", "159"], ["32", "159"], ["35", "159"], ["35", "159"], ["30", "159"], ["40", "159"], ["40", "159"], ["40", "159"], ["45", "159"], ["45", "159"], ["52", "159"], ["55", "159"], ["57", "159"], ["60", "159"], ["60", "159"], ["55", "159"], ["66", "159"], ["65", "159"], ["65", "159"], ["74", "159"], ["74", "159"], ["79", "159"], ["79", "159"], ["86", "159"], ["84", "159"], ["84", "159"], ["89", "159"], ["98", "159"], ["96", "159"], ["95", "159"], ["91", "159"], ["103", "159"], ["106", "159"], ["106", "159"], ["101", "159"], ["117", "159"], ["117", "159"], ["122", "159"], ["122", "159"], ["128", "159"], ["128", "159"], ["133", "159"], ["138", "159"], ["143", "159"], ["155", "159"], ["35", "159"], ["155", "159"], ["60", "159"], ["21", "22"], ["21", "25"], ["21", "155"], ["21", "27"], ["42", "40"], ["21", "45"], ["27", "30"], ["21", "30"], ["32", "30"], ["35", "30"], ["21", "50"], ["42", "143"], ["76", "143"], ["119", "143"], ["21", "143"], ["21", "32"], ["21", "38"], ["30", "42"], ["21", "42"], ["21", "52"], ["149", "147"], ["152", "147"], ["21", "147"], ["32", "35"], ["21", "35"], ["52", "55"], ["21", "55"], ["57", "55"], ["60", "55"], ["21", "72"], ["55", "89"], ["84", "89"], ["21", "89"], ["138", "91"], ["21", "91"], ["98", "91"], ["103", "101"], ["106", "101"], ["21", "101"], ["91", "109"], ["21", "109"], ["21", "115"], ["109", "138"], ["133", "138"], ["21", "138"], ["21", "149"], ["21", "154"], ["21", "57"], ["21", "63"], ["66", "65"], ["66", "65"], ["76", "74"], ["21", "95"], ["98", "95"], ["21", "103"], ["21", "108"], ["119", "117"], ["149", "152"], ["21", "152"], ["57", "60"], ["21", "60"], ["40", "66"], ["79", "66"], ["122", "66"], ["128", "66"], ["133", "66"], ["21", "66"], ["55", "84"], ["21", "84"], ["79", "84"], ["21", "96"], ["98", "96"], ["103", "106"], ["21", "106"], ["109", "133"], ["128", "133"], ["21", "133"], ["42", "76"], ["119", "76"], ["21", "76"], ["74", "79"], ["21", "79"], ["79", "86"], ["21", "86"], ["45", "98"], ["21", "98"], ["42", "119"], ["76", "119"], ["21", "119"], ["117", "122"], ["21", "122"], ["122", "128"], ["21", "128"], ["25", "30"], ["25", "34"], ["25", "42"], ["25", "149"], ["25", "151"], ["25", "27"], ["25", "40"], ["25", "35"], ["25", "152"], ["25", "32"], ["25", "45"], ["25", "29"], ["25", "143"], ["25", "147"], ["25", "60"], ["25", "57"], ["25", "52"], ["25", "59"], ["25", "54"], ["25", "66"], ["25", "65"], ["25", "55"], ["65", "94"], ["65", "96"], ["65", "98"], ["65", "103"], ["65", "95"], ["65", "92"], ["65", "91"], ["65", "112"], ["65", "138"], ["65", "101"], ["65", "139"], ["65", "141"], ["65", "89"], ["65", "106"], ["65", "105"], ["65", "110"], ["65", "109"], ["65", "119"], ["65", "122"], ["65", "117"], ["65", "60"], ["65", "57"], ["65", "52"], ["65", "59"], ["65", "54"], ["65", "66"], ["65", "65"], ["65", "55"], ["65", "74"], ["65", "76"], ["65", "79"], ["79", "84"], ["79", "86"], ["79", "74"], ["79", "76"], ["79", "79"], ["122", "128"], ["128", "136"], ["128", "134"], ["128", "133"], ["128", "119"], ["128", "122"], ["128", "117"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(IDENTIFIER,test,if (test))<SUB>3</SUB>>", "4": "<(LOCAL,BufferedReader testdataReader: ANY)<SUB>4</SUB>>", "28": "<(IDENTIFIER,testdataReader,ANY testdataReader = new BufferedReader(new FileReader(testDataFile)))<SUB>4</SUB>>", "30": "<(&lt;init&gt;,new BufferedReader(new FileReader(testDataFile)))<SUB>4</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "33": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "35": "<(&lt;init&gt;,new FileReader(testDataFile))<SUB>4</SUB>>", "37": "<(IDENTIFIER,testDataFile,new FileReader(testDataFile))<SUB>4</SUB>>", "39": "<(LOCAL,String readLine: java.lang.String)<SUB>5</SUB>>", "41": "<(IDENTIFIER,readLine,String readLine = readLine())<SUB>5</SUB>>", "43": "<(IDENTIFIER,testdataReader,readLine())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int casenr = 0)<SUB>6</SUB>>", "47": "<(LITERAL,0,int casenr = 0)<SUB>6</SUB>>", "49": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>7</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY w = new BufferedWriter(new FileWriter(feedFile)))<SUB>8</SUB>>", "54": "<(&lt;operator&gt;.alloc,new BufferedWriter(new FileWriter(feedFile)))<SUB>8</SUB>>", "5": "<(IDENTIFIER,w,new BufferedWriter(new FileWriter(feedFile)))<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "59": "<(&lt;operator&gt;.alloc,new FileWriter(feedFile))<SUB>8</SUB>>", "61": "<(IDENTIFIER,$obj2,new FileWriter(feedFile))>", "63": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "65": "<(&lt;operator&gt;.logicalNot,!readLine.equals(&quot;input&quot;))<SUB>9</SUB>>", "67": "<(IDENTIFIER,readLine,readLine.equals(&quot;input&quot;))<SUB>9</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,while (true),while (true))<SUB>12</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "75": "<(IDENTIFIER,readLine,readLine = readLine())<SUB>13</SUB>>", "77": "<(IDENTIFIER,testdataReader,readLine())<SUB>13</SUB>>", "79": "<(equals,readLine.equals(&quot;output&quot;))<SUB>14</SUB>>", "81": "<(LITERAL,&quot;output&quot;,readLine.equals(&quot;output&quot;))<SUB>14</SUB>>", "83": "<(CONTROL_STRUCTURE,break;,break;)<SUB>15</SUB>>", "85": "<(IDENTIFIER,w,write(readLine + &quot;\\n&quot;))<SUB>17</SUB>>", "87": "<(IDENTIFIER,readLine,readLine + &quot;\\n&quot;)<SUB>17</SUB>>", "89": "<(close,close())<SUB>19</SUB>>", "91": "<(println,System.out.println(&quot;Answer on case &quot; + (++casenr) + &quot;: &quot;))<SUB>20</SUB>>", "93": "<(IDENTIFIER,System,System.out.println(&quot;Answer on case &quot; + (++casenr) + &quot;: &quot;))<SUB>20</SUB>>", "95": "<(&lt;operator&gt;.addition,&quot;Answer on case &quot; + (++casenr) + &quot;: &quot;)<SUB>20</SUB>>", "97": "<(LITERAL,&quot;Answer on case &quot;,&quot;Answer on case &quot; + (++casenr))<SUB>20</SUB>>", "99": "<(IDENTIFIER,casenr,++casenr)<SUB>20</SUB>>", "101": "<(solve,solve())<SUB>22</SUB>>", "103": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "105": "<(&lt;operator&gt;.alloc,new A111_div2())<SUB>22</SUB>>", "107": "<(IDENTIFIER,$obj4,new A111_div2())>", "109": "<(println,System.out.println(&quot;Expected answer: &quot;))<SUB>23</SUB>>", "111": "<(IDENTIFIER,System,System.out.println(&quot;Expected answer: &quot;))<SUB>23</SUB>>", "113": "<(LITERAL,&quot;Expected answer: &quot;,System.out.println(&quot;Expected answer: &quot;))<SUB>23</SUB>>", "115": "<(LITERAL,true,while (true))<SUB>25</SUB>>", "117": "<(&lt;operator&gt;.assignment,readLine = readLine())<SUB>26</SUB>>", "119": "<(readLine,readLine())<SUB>26</SUB>>", "121": "<(CONTROL_STRUCTURE,if (readLine == null),if (readLine == null))<SUB>28</SUB>>", "123": "<(IDENTIFIER,readLine,readLine == null)<SUB>28</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "127": "<(CONTROL_STRUCTURE,if (readLine.equals(&quot;input&quot;)),if (readLine.equals(&quot;input&quot;)))<SUB>31</SUB>>", "129": "<(IDENTIFIER,readLine,readLine.equals(&quot;input&quot;))<SUB>31</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "133": "<(println,System.out.println(readLine))<SUB>34</SUB>>", "135": "<(IDENTIFIER,System,System.out.println(readLine))<SUB>34</SUB>>", "137": "<(IDENTIFIER,readLine,System.out.println(readLine))<SUB>34</SUB>>", "139": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>36</SUB>>", "141": "<(FIELD_IDENTIFIER,out,out)<SUB>36</SUB>>", "143": "<(close,close())<SUB>38</SUB>>", "145": "<(CONTROL_STRUCTURE,else,else)<SUB>39</SUB>>", "147": "<(solve,solve())<SUB>40</SUB>>", "149": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "151": "<(&lt;operator&gt;.alloc,new A111_div2())<SUB>40</SUB>>", "153": "<(IDENTIFIER,$obj5,new A111_div2())>", "155": "<(close,close())<SUB>42</SUB>>", "157": "<(MODIFIER,PUBLIC)>", "159": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}