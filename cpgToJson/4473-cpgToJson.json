{"edges": [["25", "26"], ["25", "27"], ["25", "398"], ["25", "399"], ["25", "400"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "39"], ["27", "40"], ["27", "44"], ["27", "45"], ["27", "49"], ["27", "396"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["35", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["59", "64"], ["59", "68"], ["59", "73"], ["59", "103"], ["59", "104"], ["59", "8"], ["59", "108"], ["59", "111"], ["59", "112"], ["59", "10"], ["59", "161"], ["59", "164"], ["59", "165"], ["59", "183"], ["59", "184"], ["59", "192"], ["59", "285"], ["59", "286"], ["59", "293"], ["59", "294"], ["59", "304"], ["59", "305"], ["59", "308"], ["59", "393"], ["60", "61"], ["60", "62"], ["62", "63"], ["64", "65"], ["64", "66"], ["66", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["108", "109"], ["108", "110"], ["111", "7"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "148"], ["123", "124"], ["123", "125"], ["123", "128"], ["123", "131"], ["123", "133"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "154"], ["150", "160"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "157"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["164", "9"], ["165", "166"], ["165", "174"], ["166", "167"], ["166", "170"], ["167", "168"], ["168", "169"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["174", "176"], ["174", "180"], ["176", "177"], ["176", "178"], ["178", "179"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "189"], ["187", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "201"], ["192", "203"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["199", "200"], ["201", "202"], ["203", "204"], ["203", "205"], ["203", "212"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "220"], ["212", "222"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "233"], ["223", "235"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["233", "234"], ["235", "236"], ["235", "237"], ["235", "240"], ["235", "271"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["240", "245"], ["240", "248"], ["240", "250"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["248", "249"], ["250", "251"], ["251", "252"], ["251", "259"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["259", "260"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "270"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["271", "272"], ["271", "277"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "279"], ["277", "284"], ["279", "280"], ["279", "283"], ["280", "281"], ["280", "282"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "301"], ["297", "298"], ["297", "300"], ["298", "299"], ["301", "302"], ["301", "303"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["308", "313"], ["308", "317"], ["308", "319"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "315"], ["315", "316"], ["317", "318"], ["319", "320"], ["320", "321"], ["320", "322"], ["320", "325"], ["320", "330"], ["320", "332"], ["322", "323"], ["322", "324"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["330", "331"], ["332", "333"], ["333", "334"], ["333", "335"], ["333", "338"], ["333", "343"], ["333", "350"], ["335", "336"], ["335", "337"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["345", "346"], ["345", "349"], ["346", "347"], ["346", "348"], ["350", "351"], ["350", "381"], ["351", "352"], ["351", "359"], ["352", "353"], ["352", "358"], ["353", "354"], ["353", "355"], ["355", "356"], ["355", "357"], ["359", "360"], ["359", "361"], ["359", "368"], ["361", "362"], ["361", "367"], ["362", "363"], ["362", "364"], ["364", "365"], ["364", "366"], ["368", "369"], ["368", "374"], ["369", "370"], ["369", "373"], ["370", "371"], ["370", "372"], ["374", "375"], ["374", "378"], ["375", "376"], ["375", "377"], ["378", "379"], ["378", "380"], ["381", "382"], ["381", "383"], ["383", "384"], ["383", "385"], ["383", "386"], ["386", "387"], ["386", "392"], ["387", "388"], ["387", "389"], ["389", "390"], ["389", "391"], ["393", "394"], ["393", "395"], ["396", "397"], ["28", "31"], ["31", "34"], ["32", "38"], ["35", "42"], ["40", "47"], ["45", "51"], ["396", "400"], ["30", "28"], ["34", "32"], ["36", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "62"], ["54", "396"], ["57", "54"], ["38", "36"], ["60", "66"], ["64", "70"], ["68", "75"], ["104", "110"], ["108", "111"], ["111", "114"], ["161", "164"], ["164", "168"], ["184", "194"], ["286", "298"], ["294", "305"], ["305", "310"], ["393", "57"], ["62", "60"], ["66", "64"], ["70", "68"], ["75", "78"], ["78", "86"], ["78", "106"], ["81", "78"], ["106", "104"], ["110", "108"], ["114", "117"], ["117", "125"], ["117", "163"], ["120", "117"], ["163", "161"], ["166", "178"], ["166", "187"], ["186", "184"], ["194", "199"], ["197", "208"], ["197", "289"], ["201", "199"], ["288", "286"], ["296", "294"], ["310", "315"], ["313", "322"], ["313", "393"], ["317", "315"], ["148", "120"], ["167", "166"], ["167", "171"], ["170", "166"], ["176", "180"], ["180", "168"], ["187", "189"], ["189", "186"], ["199", "197"], ["205", "214"], ["289", "288"], ["297", "301"], ["301", "296"], ["315", "313"], ["86", "89"], ["89", "97"], ["89", "81"], ["92", "89"], ["125", "128"], ["128", "135"], ["128", "153"], ["131", "128"], ["168", "167"], ["171", "170"], ["178", "176"], ["207", "205"], ["214", "217"], ["217", "225"], ["217", "201"], ["220", "217"], ["298", "297"], ["322", "327"], ["325", "335"], ["325", "317"], ["330", "327"], ["95", "92"], ["134", "131"], ["151", "157"], ["154", "148"], ["208", "211"], ["211", "207"], ["327", "325"], ["96", "101"], ["101", "95"], ["135", "140"], ["138", "134"], ["153", "151"], ["157", "154"], ["225", "230"], ["228", "237"], ["228", "220"], ["233", "230"], ["335", "340"], ["338", "355"], ["338", "330"], ["343", "340"], ["97", "96"], ["140", "144"], ["143", "138"], ["230", "228"], ["237", "242"], ["271", "233"], ["340", "338"], ["345", "343"], ["351", "389"], ["381", "346"], ["144", "143"], ["242", "245"], ["245", "255"], ["245", "273"], ["248", "245"], ["272", "280"], ["277", "271"], ["346", "345"], ["352", "364"], ["359", "351"], ["383", "381"], ["273", "272"], ["279", "277"], ["353", "352"], ["361", "370"], ["368", "359"], ["386", "383"], ["252", "266"], ["252", "248"], ["280", "279"], ["355", "353"], ["362", "361"], ["369", "375"], ["374", "368"], ["387", "386"], ["253", "252"], ["260", "248"], ["364", "362"], ["370", "369"], ["375", "378"], ["378", "374"], ["389", "387"], ["255", "253"], ["262", "260"], ["263", "262"], ["265", "263"], ["266", "265"], ["25", "30"], ["26", "400"], ["28", "400"], ["31", "400"], ["32", "400"], ["35", "400"], ["42", "400"], ["40", "400"], ["40", "400"], ["45", "400"], ["47", "400"], ["45", "400"], ["45", "400"], ["51", "400"], ["54", "400"], ["54", "400"], ["54", "400"], ["396", "400"], ["396", "400"], ["60", "400"], ["66", "400"], ["64", "400"], ["64", "400"], ["68", "400"], ["68", "400"], ["68", "400"], ["78", "400"], ["104", "400"], ["104", "400"], ["104", "400"], ["108", "400"], ["111", "400"], ["117", "400"], ["117", "400"], ["161", "400"], ["164", "400"], ["168", "400"], ["167", "400"], ["166", "400"], ["166", "400"], ["166", "400"], ["184", "400"], ["184", "400"], ["184", "400"], ["194", "400"], ["197", "400"], ["197", "400"], ["286", "400"], ["286", "400"], ["286", "400"], ["294", "400"], ["296", "400"], ["301", "400"], ["296", "400"], ["294", "400"], ["294", "400"], ["305", "400"], ["310", "400"], ["313", "400"], ["315", "400"], ["313", "400"], ["313", "400"], ["393", "400"], ["393", "400"], ["57", "400"], ["322", "400"], ["325", "400"], ["327", "400"], ["325", "400"], ["325", "400"], ["317", "400"], ["335", "400"], ["338", "400"], ["338", "400"], ["330", "400"], ["368", "400"], ["368", "400"], ["359", "400"], ["351", "400"], ["351", "400"], ["383", "400"], ["383", "400"], ["381", "400"], ["381", "400"], ["345", "400"], ["343", "400"], ["343", "400"], ["205", "400"], ["205", "400"], ["214", "400"], ["217", "400"], ["217", "400"], ["201", "400"], ["225", "400"], ["228", "400"], ["228", "400"], ["220", "400"], ["237", "400"], ["242", "400"], ["245", "400"], ["245", "400"], ["271", "400"], ["277", "400"], ["277", "400"], ["271", "400"], ["271", "400"], ["233", "400"], ["253", "400"], ["252", "400"], ["252", "400"], ["265", "400"], ["260", "400"], ["260", "400"], ["248", "400"], ["176", "400"], ["176", "400"], ["180", "400"], ["180", "400"], ["125", "400"], ["128", "400"], ["128", "400"], ["151", "400"], ["154", "400"], ["154", "400"], ["154", "400"], ["148", "400"], ["120", "400"], ["138", "400"], ["138", "400"], ["134", "400"], ["134", "400"], ["131", "400"], ["86", "400"], ["89", "400"], ["89", "400"], ["81", "400"], ["95", "400"], ["101", "400"], ["95", "400"], ["95", "400"], ["92", "400"], ["25", "26"], ["25", "28"], ["25", "32"], ["42", "40"], ["47", "45"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["25", "51"], ["35", "396"], ["393", "396"], ["25", "396"], ["31", "42"], ["25", "42"], ["35", "47"], ["25", "47"], ["51", "54"], ["57", "54"], ["25", "54"], ["40", "54"], ["54", "57"], ["25", "57"], ["62", "60"], ["66", "64"], ["70", "68"], ["70", "68"], ["106", "104"], ["25", "108"], ["25", "161"], ["186", "184"], ["186", "184"], ["288", "286"], ["288", "286"], ["296", "294"], ["296", "294"], ["25", "305"], ["25", "75"], ["108", "111"], ["25", "111"], ["25", "114"], ["161", "164"], ["25", "164"], ["25", "194"], ["25", "310"], ["35", "393"], ["25", "393"], ["305", "393"], ["381", "393"], ["42", "62"], ["66", "62"], ["101", "62"], ["25", "62"], ["62", "66"], ["25", "66"], ["60", "70"], ["25", "70"], ["64", "70"], ["75", "78"], ["81", "78"], ["25", "78"], ["70", "78"], ["78", "81"], ["25", "81"], ["70", "106"], ["89", "106"], ["25", "106"], ["114", "117"], ["120", "117"], ["25", "117"], ["106", "117"], ["154", "120"], ["25", "120"], ["167", "166"], ["170", "166"], ["170", "166"], ["178", "176"], ["187", "186"], ["189", "186"], ["189", "186"], ["194", "197"], ["201", "197"], ["25", "197"], ["199", "197"], ["208", "201"], ["25", "201"], ["289", "288"], ["289", "288"], ["25", "288"], ["298", "296"], ["25", "296"], ["301", "296"], ["301", "296"], ["310", "313"], ["317", "313"], ["25", "313"], ["315", "313"], ["313", "317"], ["25", "317"], ["25", "86"], ["25", "125"], ["111", "148"], ["25", "148"], ["151", "148"], ["154", "148"], ["168", "167"], ["171", "170"], ["78", "170"], ["128", "170"], ["25", "170"], ["164", "180"], ["171", "180"], ["25", "180"], ["176", "180"], ["164", "187"], ["171", "187"], ["180", "187"], ["25", "187"], ["25", "189"], ["78", "189"], ["170", "189"], ["128", "189"], ["187", "199"], ["208", "199"], ["25", "199"], ["25", "214"], ["25", "289"], ["189", "289"], ["217", "289"], ["298", "297"], ["25", "297"], ["25", "301"], ["289", "301"], ["298", "315"], ["25", "315"], ["25", "322"], ["86", "89"], ["92", "89"], ["25", "89"], ["70", "89"], ["89", "92"], ["25", "92"], ["101", "95"], ["125", "128"], ["131", "128"], ["25", "128"], ["78", "128"], ["128", "131"], ["25", "131"], ["138", "134"], ["138", "134"], ["138", "134"], ["25", "151"], ["25", "160"], ["111", "168"], ["178", "168"], ["148", "168"], ["25", "168"], ["164", "171"], ["180", "171"], ["25", "171"], ["168", "178"], ["25", "178"], ["214", "217"], ["220", "217"], ["25", "217"], ["189", "217"], ["230", "217"], ["217", "220"], ["25", "220"], ["199", "298"], ["25", "298"], ["322", "325"], ["330", "325"], ["25", "325"], ["327", "325"], ["327", "325"], ["345", "330"], ["25", "330"], ["325", "330"], ["151", "154"], ["25", "154"], ["117", "154"], ["104", "154"], ["134", "154"], ["199", "208"], ["25", "208"], ["197", "208"], ["25", "225"], ["25", "327"], ["301", "327"], ["340", "327"], ["325", "335"], ["25", "335"], ["345", "343"], ["345", "343"], ["66", "101"], ["25", "101"], ["383", "138"], ["277", "138"], ["25", "138"], ["104", "138"], ["154", "138"], ["134", "138"], ["225", "228"], ["233", "228"], ["25", "228"], ["230", "228"], ["230", "228"], ["228", "233"], ["253", "233"], ["25", "233"], ["25", "237"], ["277", "271"], ["277", "271"], ["277", "271"], ["335", "338"], ["343", "338"], ["25", "338"], ["340", "338"], ["340", "338"], ["359", "351"], ["359", "351"], ["359", "351"], ["383", "381"], ["383", "381"], ["383", "381"], ["25", "230"], ["217", "230"], ["245", "230"], ["25", "242"], ["25", "340"], ["327", "340"], ["378", "345"], ["25", "345"], ["378", "345"], ["242", "245"], ["248", "245"], ["25", "245"], ["230", "245"], ["265", "245"], ["255", "248"], ["25", "248"], ["383", "277"], ["138", "277"], ["25", "277"], ["271", "277"], ["237", "277"], ["260", "277"], ["378", "346"], ["25", "346"], ["383", "359"], ["277", "359"], ["138", "359"], ["25", "359"], ["383", "359"], ["359", "383"], ["25", "383"], ["305", "383"], ["381", "383"], ["351", "383"], ["253", "252"], ["253", "252"], ["25", "252"], ["313", "355"], ["25", "355"], ["228", "253"], ["25", "253"], ["255", "253"], ["255", "253"], ["237", "260"], ["25", "260"], ["25", "364"], ["313", "364"], ["338", "378"], ["25", "378"], ["345", "378"], ["325", "378"], ["25", "389"], ["313", "389"], ["25", "255"], ["245", "255"], ["255", "265"], ["25", "265"], ["217", "265"], ["245", "265"], ["255", "266"], ["25", "266"], ["217", "266"], ["54", "68"], ["54", "60"], ["54", "167"], ["54", "161"], ["54", "163"], ["54", "114"], ["54", "104"], ["54", "168"], ["54", "298"], ["54", "184"], ["54", "54"], ["54", "288"], ["54", "194"], ["54", "70"], ["54", "315"], ["54", "186"], ["54", "296"], ["54", "108"], ["54", "66"], ["54", "199"], ["54", "310"], ["54", "117"], ["54", "305"], ["54", "297"], ["54", "64"], ["54", "57"], ["54", "75"], ["54", "197"], ["54", "189"], ["54", "301"], ["54", "187"], ["54", "289"], ["54", "164"], ["54", "393"], ["54", "286"], ["54", "111"], ["54", "166"], ["54", "106"], ["54", "294"], ["54", "110"], ["54", "313"], ["54", "78"], ["54", "62"], ["78", "86"], ["78", "81"], ["78", "89"], ["78", "78"], ["117", "120"], ["117", "154"], ["117", "128"], ["117", "148"], ["117", "117"], ["117", "151"], ["117", "153"], ["117", "157"], ["117", "125"], ["166", "167"], ["166", "168"], ["166", "180"], ["166", "176"], ["166", "178"], ["166", "166"], ["197", "214"], ["197", "208"], ["197", "201"], ["197", "217"], ["197", "199"], ["197", "197"], ["197", "207"], ["197", "205"], ["197", "211"], ["313", "322"], ["313", "317"], ["313", "315"], ["313", "325"], ["313", "327"], ["313", "313"], ["167", "170"], ["167", "171"], ["89", "95"], ["89", "96"], ["89", "92"], ["89", "97"], ["89", "101"], ["89", "89"], ["128", "128"], ["128", "134"], ["128", "138"], ["128", "140"], ["128", "135"], ["128", "131"], ["128", "144"], ["128", "143"], ["217", "230"], ["217", "228"], ["217", "217"], ["217", "225"], ["217", "220"], ["325", "338"], ["325", "340"], ["325", "335"], ["325", "325"], ["325", "327"], ["325", "330"], ["228", "230"], ["228", "272"], ["228", "228"], ["228", "242"], ["228", "237"], ["228", "273"], ["228", "279"], ["228", "245"], ["228", "280"], ["228", "233"], ["228", "277"], ["228", "271"], ["338", "338"], ["338", "383"], ["338", "370"], ["338", "378"], ["338", "340"], ["338", "362"], ["338", "389"], ["338", "355"], ["338", "374"], ["338", "368"], ["338", "346"], ["338", "364"], ["338", "351"], ["338", "386"], ["338", "375"], ["338", "353"], ["338", "387"], ["338", "361"], ["338", "352"], ["338", "343"], ["338", "359"], ["338", "381"], ["338", "345"], ["338", "369"], ["245", "253"], ["245", "245"], ["245", "255"], ["245", "252"], ["245", "248"], ["252", "262"], ["252", "260"], ["252", "265"], ["252", "263"], ["252", "266"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY scan = new JS())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new JS())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new JS())<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "39": "<(LOCAL,int t: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,t,int t = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,scan,nextInt())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,long start = System.currentTimeMillis())<SUB>5</SUB>>", "47": "<(currentTimeMillis,System.currentTimeMillis())<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int q = 1; Some(q &lt;= t); q++),for (int q = 1; Some(q &lt;= t); q++))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int q = 1)<SUB>6</SUB>>", "53": "<(LITERAL,1,int q = 1)<SUB>6</SUB>>", "55": "<(IDENTIFIER,q,q &lt;= t)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,q++)<SUB>6</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "61": "<(IDENTIFIER,n,n = nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,scan,nextInt())<SUB>7</SUB>>", "65": "<(IDENTIFIER,m,m = nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "69": "<(IDENTIFIER,mat,mat = new int[n][m])<SUB>11</SUB>>", "71": "<(IDENTIFIER,n,new int[n][m])<SUB>11</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "75": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "77": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "85": "<(LOCAL,int j: int)<SUB>13</SUB>>", "87": "<(IDENTIFIER,j,int j = 0)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>13</SUB>>", "91": "<(IDENTIFIER,m,j &lt; m)<SUB>13</SUB>>", "93": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.assignment,mat[i][j] = nextInt())<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>14</SUB>>", "99": "<(IDENTIFIER,i,mat[i][j] = nextInt())<SUB>14</SUB>>", "101": "<(nextInt,nextInt())<SUB>14</SUB>>", "103": "<(LOCAL,int[] max: int[])<SUB>18</SUB>>", "105": "<(IDENTIFIER,max,int[] max = new int[m])<SUB>18</SUB>>", "107": "<(IDENTIFIER,m,new int[m])<SUB>18</SUB>>", "108": "<(&lt;operator&gt;.assignment,ANY pq = new PriorityQueue&lt;Item&gt;())<SUB>19</SUB>>", "110": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;Item&gt;())<SUB>19</SUB>>", "7": "<(IDENTIFIER,pq,new PriorityQueue&lt;Item&gt;())<SUB>19</SUB>>", "113": "<(LOCAL,int i: int)<SUB>20</SUB>>", "115": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>20</SUB>>", "119": "<(IDENTIFIER,m,i &lt; m)<SUB>20</SUB>>", "121": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "123": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>21</SUB>>", "125": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "127": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "129": "<(IDENTIFIER,j,j &lt; n)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>22</SUB>>", "137": "<(IDENTIFIER,i,max[i] = max(max[i], mat[j][i]))<SUB>22</SUB>>", "139": "<(IDENTIFIER,this,max(max[i], mat[j][i]))<SUB>22</SUB>>", "141": "<(IDENTIFIER,max,max(max[i], mat[j][i]))<SUB>22</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,mat[j][i])<SUB>22</SUB>>", "145": "<(IDENTIFIER,mat,max(max[i], mat[j][i]))<SUB>22</SUB>>", "147": "<(IDENTIFIER,i,max(max[i], mat[j][i]))<SUB>22</SUB>>", "149": "<(IDENTIFIER,pq,add(new Item(i, max[i])))<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "153": "<(&lt;operator&gt;.alloc,new Item(i, max[i]))<SUB>24</SUB>>", "155": "<(IDENTIFIER,$obj3,new Item(i, max[i]))>", "157": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>24</SUB>>", "159": "<(IDENTIFIER,i,new Item(i, max[i]))<SUB>24</SUB>>", "10": "<(LOCAL,ArrayList&lt;Item&gt; guys: ANY)<SUB>26</SUB>>", "162": "<(IDENTIFIER,guys,ANY guys = new ArrayList&lt;Item&gt;())<SUB>26</SUB>>", "164": "<(&lt;init&gt;,new ArrayList&lt;Item&gt;())<SUB>26</SUB>>", "165": "<(CONTROL_STRUCTURE,while (!pq.isEmpty() &amp;&amp; guys.size() &lt; n),while (!pq.isEmpty() &amp;&amp; guys.size() &lt; n))<SUB>27</SUB>>", "167": "<(&lt;operator&gt;.logicalNot,!pq.isEmpty())<SUB>27</SUB>>", "169": "<(IDENTIFIER,pq,isEmpty())<SUB>27</SUB>>", "171": "<(size,size())<SUB>27</SUB>>", "173": "<(IDENTIFIER,n,guys.size() &lt; n)<SUB>27</SUB>>", "175": "<(LOCAL,Item tt: ANY)<SUB>28</SUB>>", "177": "<(IDENTIFIER,tt,ANY tt = poll())<SUB>28</SUB>>", "179": "<(IDENTIFIER,pq,poll())<SUB>28</SUB>>", "181": "<(IDENTIFIER,guys,add(tt))<SUB>29</SUB>>", "183": "<(LOCAL,int[][] cost: int[][])<SUB>32</SUB>>", "185": "<(IDENTIFIER,cost,int[][] cost = new int[guys.size()][1 &lt;&lt; n])<SUB>32</SUB>>", "187": "<(size,size())<SUB>32</SUB>>", "189": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>32</SUB>>", "191": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>32</SUB>>", "193": "<(LOCAL,int i: int)<SUB>34</SUB>>", "195": "<(IDENTIFIER,i,int i = 0)<SUB>34</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; guys.size())<SUB>34</SUB>>", "199": "<(size,size())<SUB>34</SUB>>", "201": "<(&lt;operator&gt;.postIncrement,i++)<SUB>34</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "205": "<(&lt;operator&gt;.assignment,int g = guys.get(i).a)<SUB>35</SUB>>", "207": "<(&lt;operator&gt;.fieldAccess,guys.get(i).a)<SUB>35</SUB>>", "209": "<(IDENTIFIER,guys,get(i))<SUB>35</SUB>>", "211": "<(FIELD_IDENTIFIER,a,a)<SUB>35</SUB>>", "213": "<(LOCAL,int s: int)<SUB>36</SUB>>", "215": "<(IDENTIFIER,s,int s = 0)<SUB>36</SUB>>", "217": "<(&lt;operator&gt;.lessThan,s &lt; n)<SUB>36</SUB>>", "219": "<(IDENTIFIER,n,s &lt; n)<SUB>36</SUB>>", "221": "<(IDENTIFIER,s,s++)<SUB>36</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; (1 &lt;&lt; n)); j++),for (int j = 0; Some(j &lt; (1 &lt;&lt; n)); j++))<SUB>37</SUB>>", "225": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>37</SUB>>", "227": "<(LITERAL,0,int j = 0)<SUB>37</SUB>>", "229": "<(IDENTIFIER,j,j &lt; (1 &lt;&lt; n))<SUB>37</SUB>>", "231": "<(LITERAL,1,1 &lt;&lt; n)<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.postIncrement,j++)<SUB>37</SUB>>", "235": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "237": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>38</SUB>>", "239": "<(LITERAL,0,int sum = 0)<SUB>38</SUB>>", "241": "<(LOCAL,int k: int)<SUB>39</SUB>>", "243": "<(IDENTIFIER,k,int k = 0)<SUB>39</SUB>>", "245": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>39</SUB>>", "247": "<(IDENTIFIER,n,k &lt; n)<SUB>39</SUB>>", "249": "<(IDENTIFIER,k,k++)<SUB>39</SUB>>", "251": "<(CONTROL_STRUCTURE,if ((j &amp; (1 &lt;&lt; k)) &gt; 0),if ((j &amp; (1 &lt;&lt; k)) &gt; 0))<SUB>40</SUB>>", "253": "<(&lt;operator&gt;.and,j &amp; (1 &lt;&lt; k))<SUB>40</SUB>>", "255": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>40</SUB>>", "257": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>40</SUB>>", "259": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "261": "<(IDENTIFIER,sum,sum += mat[(k + s) % n][g])<SUB>41</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,mat[(k + s) % n])<SUB>41</SUB>>", "265": "<(&lt;operator&gt;.modulo,(k + s) % n)<SUB>41</SUB>>", "267": "<(IDENTIFIER,k,k + s)<SUB>41</SUB>>", "269": "<(IDENTIFIER,n,(k + s) % n)<SUB>41</SUB>>", "271": "<(&lt;operator&gt;.assignment,cost[i][j] = max(cost[i][j], sum))<SUB>44</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,cost[i])<SUB>44</SUB>>", "275": "<(IDENTIFIER,i,cost[i][j] = max(cost[i][j], sum))<SUB>44</SUB>>", "277": "<(max,max(cost[i][j], sum))<SUB>44</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,cost[i][j])<SUB>44</SUB>>", "281": "<(IDENTIFIER,cost,max(cost[i][j], sum))<SUB>44</SUB>>", "283": "<(IDENTIFIER,j,max(cost[i][j], sum))<SUB>44</SUB>>", "285": "<(LOCAL,int full: int)<SUB>52</SUB>>", "287": "<(IDENTIFIER,full,int full = (1 &lt;&lt; n) - 1)<SUB>52</SUB>>", "289": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>52</SUB>>", "291": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>52</SUB>>", "293": "<(LOCAL,int[][] dp: int[][])<SUB>54</SUB>>", "295": "<(IDENTIFIER,dp,int[][] dp = new int[guys.size() + 1][1 &lt;&lt; n])<SUB>54</SUB>>", "297": "<(&lt;operator&gt;.addition,guys.size() + 1)<SUB>54</SUB>>", "299": "<(IDENTIFIER,guys,size())<SUB>54</SUB>>", "301": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>54</SUB>>", "303": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>54</SUB>>", "305": "<(&lt;operator&gt;.assignment,int ans = 0)<SUB>55</SUB>>", "307": "<(LITERAL,0,int ans = 0)<SUB>55</SUB>>", "309": "<(LOCAL,int c: int)<SUB>59</SUB>>", "311": "<(IDENTIFIER,c,int c = 0)<SUB>59</SUB>>", "313": "<(&lt;operator&gt;.lessThan,c &lt; guys.size())<SUB>59</SUB>>", "315": "<(size,size())<SUB>59</SUB>>", "317": "<(&lt;operator&gt;.postIncrement,c++)<SUB>59</SUB>>", "319": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "321": "<(LOCAL,int j: int)<SUB>60</SUB>>", "323": "<(IDENTIFIER,j,int j = 0)<SUB>60</SUB>>", "325": "<(&lt;operator&gt;.lessThan,j &lt; (1 &lt;&lt; n))<SUB>60</SUB>>", "327": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>60</SUB>>", "329": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>60</SUB>>", "331": "<(IDENTIFIER,j,j++)<SUB>60</SUB>>", "333": "<(CONTROL_STRUCTURE,for (int i = j; Some(i &lt; (1 &lt;&lt; n)); i = (i + 1) | j),for (int i = j; Some(i &lt; (1 &lt;&lt; n)); i = (i + 1) | j))<SUB>61</SUB>>", "335": "<(&lt;operator&gt;.assignment,int i = j)<SUB>61</SUB>>", "337": "<(IDENTIFIER,j,int i = j)<SUB>61</SUB>>", "339": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>61</SUB>>", "341": "<(LITERAL,1,1 &lt;&lt; n)<SUB>61</SUB>>", "343": "<(&lt;operator&gt;.assignment,i = (i + 1) | j)<SUB>61</SUB>>", "345": "<(&lt;operator&gt;.or,(i + 1) | j)<SUB>61</SUB>>", "347": "<(IDENTIFIER,i,i + 1)<SUB>61</SUB>>", "349": "<(IDENTIFIER,j,(i + 1) | j)<SUB>61</SUB>>", "351": "<(&lt;operator&gt;.assignment,dp[c + 1][i] = max(dp[c + 1][i], cost[c][j] + dp[c][i ^ j]))<SUB>62</SUB>>", "353": "<(&lt;operator&gt;.indexAccess,dp[c + 1])<SUB>62</SUB>>", "355": "<(&lt;operator&gt;.addition,c + 1)<SUB>62</SUB>>", "357": "<(LITERAL,1,c + 1)<SUB>62</SUB>>", "359": "<(max,max(dp[c + 1][i], cost[c][j] + dp[c][i ^ j]))<SUB>63</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,dp[c + 1][i])<SUB>63</SUB>>", "363": "<(IDENTIFIER,dp,max(dp[c + 1][i], cost[c][j] + dp[c][i ^ j]))<SUB>63</SUB>>", "365": "<(IDENTIFIER,c,c + 1)<SUB>63</SUB>>", "367": "<(IDENTIFIER,i,max(dp[c + 1][i], cost[c][j] + dp[c][i ^ j]))<SUB>63</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,cost[c][j])<SUB>63</SUB>>", "371": "<(IDENTIFIER,cost,cost[c][j] + dp[c][i ^ j])<SUB>63</SUB>>", "373": "<(IDENTIFIER,j,cost[c][j] + dp[c][i ^ j])<SUB>63</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,dp[c])<SUB>63</SUB>>", "377": "<(IDENTIFIER,c,cost[c][j] + dp[c][i ^ j])<SUB>63</SUB>>", "379": "<(IDENTIFIER,i,i ^ j)<SUB>63</SUB>>", "381": "<(&lt;operator&gt;.assignment,ans = max(ans, dp[c + 1][i]))<SUB>65</SUB>>", "383": "<(max,max(ans, dp[c + 1][i]))<SUB>65</SUB>>", "385": "<(IDENTIFIER,ans,max(ans, dp[c + 1][i]))<SUB>65</SUB>>", "387": "<(&lt;operator&gt;.indexAccess,dp[c + 1])<SUB>65</SUB>>", "389": "<(&lt;operator&gt;.addition,c + 1)<SUB>65</SUB>>", "391": "<(LITERAL,1,c + 1)<SUB>65</SUB>>", "393": "<(println,println(ans))<SUB>72</SUB>>", "395": "<(IDENTIFIER,ans,println(ans))<SUB>72</SUB>>", "397": "<(IDENTIFIER,out,flush())<SUB>75</SUB>>", "399": "<(MODIFIER,STATIC)>"}}