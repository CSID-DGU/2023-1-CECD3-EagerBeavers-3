{"edges": [["23", "24"], ["23", "25"], ["23", "192"], ["23", "193"], ["23", "194"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "34"], ["25", "38"], ["25", "42"], ["25", "46"], ["25", "49"], ["25", "51"], ["25", "90"], ["25", "8"], ["25", "107"], ["25", "110"], ["25", "111"], ["25", "169"], ["25", "187"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "53"], ["51", "56"], ["51", "61"], ["51", "63"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["63", "86"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "75"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["107", "108"], ["107", "109"], ["110", "7"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "166"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "135"], ["126", "137"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["133", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["137", "145"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["141", "144"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "156"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["158", "161"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["169", "174"], ["169", "177"], ["169", "179"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["26", "29"], ["29", "32"], ["30", "33"], ["33", "36"], ["34", "40"], ["38", "44"], ["42", "48"], ["46", "49"], ["49", "53"], ["107", "110"], ["110", "113"], ["187", "194"], ["28", "26"], ["32", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["48", "46"], ["53", "58"], ["56", "72"], ["56", "92"], ["61", "58"], ["92", "95"], ["95", "102"], ["95", "109"], ["98", "95"], ["109", "107"], ["113", "116"], ["116", "123"], ["116", "171"], ["119", "116"], ["171", "174"], ["174", "183"], ["174", "190"], ["177", "174"], ["188", "187"], ["58", "56"], ["65", "86"], ["86", "61"], ["101", "98"], ["123", "128"], ["166", "119"], ["180", "177"], ["190", "188"], ["67", "65"], ["102", "105"], ["105", "101"], ["128", "133"], ["131", "141"], ["131", "166"], ["135", "133"], ["182", "180"], ["69", "67"], ["133", "131"], ["139", "146"], ["183", "182"], ["71", "69"], ["141", "139"], ["146", "153"], ["146", "135"], ["72", "78"], ["75", "71"], ["151", "163"], ["156", "135"], ["76", "83"], ["81", "75"], ["153", "151"], ["158", "156"], ["78", "76"], ["83", "81"], ["161", "158"], ["163", "161"], ["23", "28"], ["24", "194"], ["26", "194"], ["29", "194"], ["30", "194"], ["33", "194"], ["34", "194"], ["40", "194"], ["38", "194"], ["38", "194"], ["42", "194"], ["42", "194"], ["46", "194"], ["49", "194"], ["49", "194"], ["53", "194"], ["56", "194"], ["58", "194"], ["56", "194"], ["56", "194"], ["107", "194"], ["110", "194"], ["110", "194"], ["171", "194"], ["174", "194"], ["174", "194"], ["174", "194"], ["187", "194"], ["187", "194"], ["187", "194"], ["183", "194"], ["182", "194"], ["180", "194"], ["180", "194"], ["177", "194"], ["123", "194"], ["123", "194"], ["128", "194"], ["131", "194"], ["131", "194"], ["131", "194"], ["166", "194"], ["166", "194"], ["166", "194"], ["119", "194"], ["139", "194"], ["139", "194"], ["146", "194"], ["146", "194"], ["153", "194"], ["153", "194"], ["151", "194"], ["151", "194"], ["158", "194"], ["161", "194"], ["161", "194"], ["158", "194"], ["156", "194"], ["156", "194"], ["135", "194"], ["101", "194"], ["105", "194"], ["101", "194"], ["101", "194"], ["98", "194"], ["69", "194"], ["71", "194"], ["75", "194"], ["81", "194"], ["71", "194"], ["69", "194"], ["67", "194"], ["65", "194"], ["65", "194"], ["86", "194"], ["86", "194"], ["61", "194"], ["141", "194"], ["23", "24"], ["23", "26"], ["23", "30"], ["36", "34"], ["40", "38"], ["44", "42"], ["23", "46"], ["23", "107"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["46", "49"], ["23", "49"], ["23", "53"], ["23", "92"], ["107", "110"], ["23", "110"], ["23", "113"], ["23", "171"], ["33", "187"], ["180", "187"], ["23", "187"], ["29", "36"], ["23", "36"], ["36", "40"], ["23", "40"], ["34", "44"], ["23", "44"], ["53", "56"], ["61", "56"], ["23", "56"], ["58", "56"], ["58", "56"], ["86", "61"], ["23", "61"], ["67", "65"], ["67", "65"], ["92", "95"], ["98", "95"], ["23", "95"], ["44", "95"], ["95", "98"], ["23", "98"], ["105", "101"], ["113", "116"], ["119", "116"], ["23", "116"], ["95", "116"], ["116", "119"], ["141", "119"], ["23", "119"], ["58", "123"], ["23", "123"], ["171", "174"], ["177", "174"], ["23", "174"], ["116", "174"], ["183", "177"], ["23", "177"], ["38", "58"], ["81", "58"], ["23", "58"], ["49", "86"], ["23", "86"], ["83", "86"], ["65", "86"], ["23", "128"], ["133", "166"], ["23", "166"], ["123", "166"], ["156", "166"], ["33", "180"], ["23", "180"], ["183", "180"], ["183", "180"], ["23", "67"], ["69", "67"], ["69", "67"], ["40", "105"], ["23", "105"], ["128", "131"], ["135", "131"], ["23", "131"], ["133", "131"], ["141", "135"], ["163", "135"], ["23", "135"], ["141", "139"], ["141", "139"], ["141", "139"], ["183", "182"], ["183", "182"], ["23", "182"], ["23", "69"], ["71", "69"], ["71", "69"], ["110", "133"], ["166", "133"], ["163", "133"], ["23", "133"], ["110", "183"], ["166", "183"], ["23", "183"], ["174", "183"], ["72", "71"], ["75", "71"], ["23", "141"], ["116", "141"], ["131", "141"], ["139", "146"], ["23", "146"], ["153", "151"], ["153", "151"], ["158", "156"], ["158", "156"], ["158", "156"], ["58", "72"], ["23", "72"], ["76", "75"], ["76", "75"], ["81", "75"], ["81", "75"], ["72", "76"], ["23", "76"], ["78", "76"], ["78", "76"], ["76", "81"], ["23", "81"], ["83", "81"], ["83", "81"], ["49", "153"], ["86", "153"], ["23", "153"], ["146", "153"], ["69", "158"], ["23", "158"], ["123", "158"], ["156", "158"], ["151", "158"], ["163", "158"], ["163", "158"], ["56", "78"], ["23", "78"], ["78", "83"], ["23", "83"], ["151", "161"], ["23", "161"], ["163", "161"], ["163", "161"], ["133", "163"], ["23", "163"], ["141", "163"], ["56", "75"], ["56", "81"], ["56", "56"], ["56", "69"], ["56", "67"], ["56", "76"], ["56", "58"], ["56", "61"], ["56", "86"], ["56", "72"], ["56", "65"], ["56", "83"], ["56", "71"], ["56", "78"], ["95", "98"], ["95", "102"], ["95", "95"], ["95", "101"], ["95", "105"], ["116", "128"], ["116", "131"], ["116", "119"], ["116", "116"], ["116", "166"], ["116", "123"], ["116", "133"], ["174", "174"], ["174", "182"], ["174", "180"], ["174", "183"], ["174", "177"], ["131", "146"], ["131", "131"], ["131", "139"], ["131", "141"], ["131", "135"], ["131", "133"], ["146", "161"], ["146", "163"], ["146", "151"], ["146", "153"], ["146", "158"], ["146", "156"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>3</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder())<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,n = nextInt())<SUB>4</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,r,r = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,x,x = new int[n])<SUB>6</SUB>>", "45": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "47": "<(IDENTIFIER,horo,horo = new HashMap&lt;Integer, Double&gt;())<SUB>7</SUB>>", "49": "<(&lt;init&gt;,new HashMap&lt;Integer, Double&gt;())<SUB>7</SUB>>", "51": "<(CONTROL_STRUCTURE,for (int x = 0; Some(x &lt;= r * 2); x++),for (int x = 0; Some(x &lt;= r * 2); x++))<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.assignment,int x = 0)<SUB>8</SUB>>", "55": "<(LITERAL,0,int x = 0)<SUB>8</SUB>>", "57": "<(IDENTIFIER,x,x &lt;= r * 2)<SUB>8</SUB>>", "59": "<(IDENTIFIER,r,r * 2)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,x++)<SUB>8</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,double y = 2.0 * Math.sqrt(r * r - (r - x / 2.0) * (r - x / 2.0)))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.multiplication,2.0 * Math.sqrt(r * r - (r - x / 2.0) * (r - x / 2.0)))<SUB>9</SUB>>", "69": "<(sqrt,sqrt(r * r - (r - x / 2.0) * (r - x / 2.0)))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.subtraction,r * r - (r - x / 2.0) * (r - x / 2.0))<SUB>9</SUB>>", "73": "<(IDENTIFIER,r,r * r)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.multiplication,(r - x / 2.0) * (r - x / 2.0))<SUB>9</SUB>>", "77": "<(IDENTIFIER,r,r - x / 2.0)<SUB>9</SUB>>", "79": "<(IDENTIFIER,x,x / 2.0)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.subtraction,r - x / 2.0)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.division,x / 2.0)<SUB>9</SUB>>", "85": "<(LITERAL,2.0,x / 2.0)<SUB>9</SUB>>", "87": "<(IDENTIFIER,horo,put(x, y))<SUB>10</SUB>>", "89": "<(IDENTIFIER,y,put(x, y))<SUB>10</SUB>>", "91": "<(LOCAL,int i: int)<SUB>12</SUB>>", "93": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.assignment,x[i] = nextInt())<SUB>13</SUB>>", "103": "<(IDENTIFIER,x,x[i] = nextInt())<SUB>13</SUB>>", "105": "<(nextInt,nextInt())<SUB>13</SUB>>", "8": "<(LOCAL,List&lt;Double&gt; y: ANY)<SUB>15</SUB>>", "108": "<(IDENTIFIER,y,ANY y = new ArrayList&lt;Double&gt;())<SUB>15</SUB>>", "110": "<(&lt;init&gt;,new ArrayList&lt;Double&gt;())<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "115": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "117": "<(IDENTIFIER,i,i &lt; n)<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,double max = r)<SUB>17</SUB>>", "125": "<(IDENTIFIER,r,double max = r)<SUB>17</SUB>>", "127": "<(LOCAL,int j: int)<SUB>18</SUB>>", "129": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "131": "<(&lt;operator&gt;.lessThan,j &lt; y.size())<SUB>18</SUB>>", "133": "<(size,size())<SUB>18</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,int dx = intersects(i, j))<SUB>19</SUB>>", "141": "<(intersects,intersects(i, j))<SUB>19</SUB>>", "143": "<(IDENTIFIER,i,intersects(i, j))<SUB>19</SUB>>", "145": "<(CONTROL_STRUCTURE,if (dx &gt;= 0),if (dx &gt;= 0))<SUB>20</SUB>>", "147": "<(IDENTIFIER,dx,dx &gt;= 0)<SUB>20</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "151": "<(&lt;operator&gt;.assignment,double dy = get(dx))<SUB>21</SUB>>", "153": "<(get,get(dx))<SUB>21</SUB>>", "155": "<(IDENTIFIER,dx,get(dx))<SUB>21</SUB>>", "157": "<(IDENTIFIER,max,max = max(max, dy + y.get(j)))<SUB>22</SUB>>", "159": "<(IDENTIFIER,Math,max(max, dy + y.get(j)))<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.addition,dy + y.get(j))<SUB>22</SUB>>", "163": "<(get,get(j))<SUB>22</SUB>>", "165": "<(IDENTIFIER,j,get(j))<SUB>22</SUB>>", "167": "<(IDENTIFIER,y,add(max))<SUB>25</SUB>>", "169": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>27</SUB>>", "171": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "173": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "175": "<(IDENTIFIER,i,i &lt; n)<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,i++)<SUB>27</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "181": "<(IDENTIFIER,sb,append(y.get(i) + &quot; &quot;))<SUB>28</SUB>>", "183": "<(get,get(i))<SUB>28</SUB>>", "185": "<(IDENTIFIER,i,get(i))<SUB>28</SUB>>", "187": "<(println,System.out.println(sb))<SUB>30</SUB>>", "189": "<(IDENTIFIER,System,System.out.println(sb))<SUB>30</SUB>>", "191": "<(IDENTIFIER,sb,System.out.println(sb))<SUB>30</SUB>>", "193": "<(MODIFIER,STATIC)>"}}