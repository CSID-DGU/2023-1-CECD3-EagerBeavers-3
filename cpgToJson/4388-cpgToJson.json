{"edges": [["21", "23"], ["21", "231"], ["21", "232"], ["21", "233"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "42"], ["23", "47"], ["23", "53"], ["23", "101"], ["23", "102"], ["23", "106"], ["23", "139"], ["23", "140"], ["23", "143"], ["23", "192"], ["23", "222"], ["23", "227"], ["23", "229"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "63"], ["53", "65"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "78"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "74"], ["70", "77"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["88", "96"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "94"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "111"], ["107", "108"], ["107", "110"], ["108", "109"], ["111", "112"], ["111", "113"], ["111", "114"], ["111", "120"], ["111", "126"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "119"], ["117", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "125"], ["123", "124"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "161"], ["153", "162"], ["153", "166"], ["153", "180"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["166", "167"], ["166", "169"], ["167", "168"], ["169", "170"], ["169", "171"], ["169", "175"], ["171", "172"], ["171", "173"], ["173", "174"], ["175", "176"], ["175", "177"], ["175", "178"], ["178", "179"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["182", "189"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "204"], ["202", "209"], ["202", "212"], ["202", "214"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["212", "213"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "40"], ["38", "44"], ["42", "50"], ["47", "55"], ["102", "108"], ["140", "145"], ["222", "227"], ["227", "229"], ["229", "233"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["40", "38"], ["44", "42"], ["49", "47"], ["55", "60"], ["58", "67"], ["58", "104"], ["63", "60"], ["104", "102"], ["107", "117"], ["107", "140"], ["145", "148"], ["148", "158"], ["148", "194"], ["151", "148"], ["194", "197"], ["197", "206"], ["197", "224"], ["200", "197"], ["224", "222"], ["30", "28"], ["37", "35"], ["50", "49"], ["60", "58"], ["66", "80"], ["108", "107"], ["114", "123"], ["120", "128"], ["126", "108"], ["154", "164"], ["162", "167"], ["180", "151"], ["204", "209"], ["209", "216"], ["209", "200"], ["212", "209"], ["67", "73"], ["80", "83"], ["83", "92"], ["83", "63"], ["86", "83"], ["116", "114"], ["122", "120"], ["127", "134"], ["132", "126"], ["156", "154"], ["164", "162"], ["167", "173"], ["167", "186"], ["182", "180"], ["206", "204"], ["215", "220"], ["215", "212"], ["220", "212"], ["71", "74"], ["74", "66"], ["89", "97"], ["89", "86"], ["96", "86"], ["117", "116"], ["123", "122"], ["128", "127"], ["133", "132"], ["158", "156"], ["171", "178"], ["175", "167"], ["184", "189"], ["189", "182"], ["216", "215"], ["73", "71"], ["90", "89"], ["97", "96"], ["134", "133"], ["173", "171"], ["178", "175"], ["186", "184"], ["92", "90"], ["21", "26"], ["22", "233"], ["24", "233"], ["27", "233"], ["27", "233"], ["31", "233"], ["34", "233"], ["34", "233"], ["38", "233"], ["42", "233"], ["42", "233"], ["42", "233"], ["47", "233"], ["47", "233"], ["47", "233"], ["58", "233"], ["58", "233"], ["104", "233"], ["102", "233"], ["102", "233"], ["108", "233"], ["107", "233"], ["107", "233"], ["140", "233"], ["145", "233"], ["148", "233"], ["194", "233"], ["197", "233"], ["197", "233"], ["197", "233"], ["224", "233"], ["222", "233"], ["222", "233"], ["227", "233"], ["229", "233"], ["229", "233"], ["204", "233"], ["204", "233"], ["209", "233"], ["209", "233"], ["200", "233"], ["220", "233"], ["212", "233"], ["156", "233"], ["154", "233"], ["154", "233"], ["164", "233"], ["162", "233"], ["167", "233"], ["167", "233"], ["184", "233"], ["182", "233"], ["189", "233"], ["182", "233"], ["180", "233"], ["180", "233"], ["151", "233"], ["175", "233"], ["175", "233"], ["175", "233"], ["114", "233"], ["114", "233"], ["120", "233"], ["123", "233"], ["122", "233"], ["120", "233"], ["120", "233"], ["126", "233"], ["132", "233"], ["126", "233"], ["126", "233"], ["66", "233"], ["71", "233"], ["74", "233"], ["74", "233"], ["66", "233"], ["80", "233"], ["83", "233"], ["83", "233"], ["63", "233"], ["90", "233"], ["89", "233"], ["89", "233"], ["96", "233"], ["96", "233"], ["86", "233"], ["182", "233"], ["175", "233"], ["21", "22"], ["21", "24"], ["21", "31"], ["40", "38"], ["44", "42"], ["49", "47"], ["104", "102"], ["21", "140"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "55"], ["60", "145"], ["21", "145"], ["21", "194"], ["34", "222"], ["21", "222"], ["224", "222"], ["224", "222"], ["222", "227"], ["21", "227"], ["227", "229"], ["21", "229"], ["27", "40"], ["21", "40"], ["38", "44"], ["21", "44"], ["50", "49"], ["50", "49"], ["55", "58"], ["63", "58"], ["21", "58"], ["60", "58"], ["60", "58"], ["58", "63"], ["90", "63"], ["21", "63"], ["71", "66"], ["74", "66"], ["21", "66"], ["40", "104"], ["21", "104"], ["108", "107"], ["21", "107"], ["116", "114"], ["116", "114"], ["122", "120"], ["122", "120"], ["132", "126"], ["21", "126"], ["145", "148"], ["151", "148"], ["21", "148"], ["186", "151"], ["21", "151"], ["156", "154"], ["156", "154"], ["164", "162"], ["182", "180"], ["182", "180"], ["182", "180"], ["194", "197"], ["200", "197"], ["21", "197"], ["209", "197"], ["60", "197"], ["21", "200"], ["197", "200"], ["197", "204"], ["21", "204"], ["140", "224"], ["220", "224"], ["180", "224"], ["21", "224"], ["21", "50"], ["44", "50"], ["21", "60"], ["50", "60"], ["83", "60"], ["21", "80"], ["102", "108"], ["21", "108"], ["140", "180"], ["21", "180"], ["204", "209"], ["212", "209"], ["21", "209"], ["197", "209"], ["209", "212"], ["21", "212"], ["21", "71"], ["21", "77"], ["80", "83"], ["86", "83"], ["21", "83"], ["60", "83"], ["92", "86"], ["96", "86"], ["21", "86"], ["117", "116"], ["21", "116"], ["123", "122"], ["21", "122"], ["21", "132"], ["158", "156"], ["21", "156"], ["158", "156"], ["154", "164"], ["21", "164"], ["162", "167"], ["173", "167"], ["21", "167"], ["173", "171"], ["21", "182"], ["184", "182"], ["186", "182"], ["186", "182"], ["189", "182"], ["189", "182"], ["197", "206"], ["21", "206"], ["140", "220"], ["180", "220"], ["21", "220"], ["71", "74"], ["21", "74"], ["90", "89"], ["90", "89"], ["21", "89"], ["47", "96"], ["66", "96"], ["92", "96"], ["21", "96"], ["104", "117"], ["123", "117"], ["21", "117"], ["117", "123"], ["21", "123"], ["21", "158"], ["148", "158"], ["21", "175"], ["171", "175"], ["178", "175"], ["186", "184"], ["186", "184"], ["21", "189"], ["184", "189"], ["58", "90"], ["21", "90"], ["92", "90"], ["92", "90"], ["167", "173"], ["21", "173"], ["21", "178"], ["156", "186"], ["21", "186"], ["21", "92"], ["83", "92"], ["58", "60"], ["58", "73"], ["58", "67"], ["58", "74"], ["58", "80"], ["58", "58"], ["58", "66"], ["58", "83"], ["58", "71"], ["58", "63"], ["107", "107"], ["107", "120"], ["107", "128"], ["107", "114"], ["107", "132"], ["107", "134"], ["107", "127"], ["107", "108"], ["107", "116"], ["107", "122"], ["107", "123"], ["107", "126"], ["107", "117"], ["107", "133"], ["148", "167"], ["148", "154"], ["148", "151"], ["148", "189"], ["148", "162"], ["148", "148"], ["148", "184"], ["148", "182"], ["148", "164"], ["148", "186"], ["148", "180"], ["148", "158"], ["148", "156"], ["197", "209"], ["197", "197"], ["197", "204"], ["197", "206"], ["197", "200"], ["209", "215"], ["209", "209"], ["209", "212"], ["209", "216"], ["83", "92"], ["83", "90"], ["83", "86"], ["83", "89"], ["83", "83"], ["167", "167"], ["167", "178"], ["167", "173"], ["167", "171"], ["167", "175"], ["215", "220"], ["89", "96"], ["89", "97"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(IDENTIFIER,N,N = nextInt())<SUB>5</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,adjMat,adjMat = new boolean[N][N])<SUB>6</SUB>>", "45": "<(IDENTIFIER,N,new boolean[N][N])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.assignment,bits = new ArrayList[1 &lt;&lt; N])<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.alloc,new ArrayList[1 &lt;&lt; N])>", "51": "<(LITERAL,1,1 &lt;&lt; N)<SUB>8</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 1 &lt;&lt; N); ++i),for (int i = 0; Some(i &lt; 1 &lt;&lt; N); ++i))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "59": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; N)<SUB>9</SUB>>", "61": "<(LITERAL,1,1 &lt;&lt; N)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,bits[i])<SUB>11</SUB>>", "69": "<(IDENTIFIER,i,bits[i] = new ArrayList&lt;&gt;(1))<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "73": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;(1))<SUB>11</SUB>>", "75": "<(IDENTIFIER,$obj2,new ArrayList&lt;&gt;(1))>", "77": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "79": "<(LOCAL,int j: int)<SUB>12</SUB>>", "81": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>12</SUB>>", "85": "<(IDENTIFIER,N,j &lt; N)<SUB>12</SUB>>", "87": "<(IDENTIFIER,j,++j)<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.equals,(i &amp; 1 &lt;&lt; j) == 0)<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,i &amp; 1 &lt;&lt; j)<SUB>13</SUB>>", "93": "<(LITERAL,1,1 &lt;&lt; j)<SUB>13</SUB>>", "95": "<(LITERAL,0,(i &amp; 1 &lt;&lt; j) == 0)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,bits[i])<SUB>14</SUB>>", "99": "<(IDENTIFIER,i,add(j))<SUB>14</SUB>>", "101": "<(LOCAL,int M: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,M,int M = nextInt())<SUB>16</SUB>>", "105": "<(IDENTIFIER,sc,nextInt())<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.greaterThan,M-- &gt; 0)<SUB>17</SUB>>", "109": "<(IDENTIFIER,M,M--)<SUB>17</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(LOCAL,int v: int)<SUB>19</SUB>>", "115": "<(IDENTIFIER,u,int u = sc.nextInt() - 1)<SUB>19</SUB>>", "117": "<(nextInt,nextInt())<SUB>19</SUB>>", "119": "<(LITERAL,1,sc.nextInt() - 1)<SUB>19</SUB>>", "121": "<(IDENTIFIER,v,int v = sc.nextInt() - 1)<SUB>19</SUB>>", "123": "<(nextInt,nextInt())<SUB>19</SUB>>", "125": "<(LITERAL,1,sc.nextInt() - 1)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,adjMat[u][v])<SUB>20</SUB>>", "129": "<(IDENTIFIER,adjMat,adjMat[u][v] = adjMat[v][u] = true)<SUB>20</SUB>>", "131": "<(IDENTIFIER,v,adjMat[u][v] = adjMat[v][u] = true)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,adjMat[v][u])<SUB>20</SUB>>", "135": "<(IDENTIFIER,adjMat,adjMat[v][u] = true)<SUB>20</SUB>>", "137": "<(IDENTIFIER,u,adjMat[v][u] = true)<SUB>20</SUB>>", "139": "<(LOCAL,long ans: long)<SUB>22</SUB>>", "141": "<(IDENTIFIER,ans,long ans = 0)<SUB>22</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int i = N; Some(i &gt; 1); --i),for (int i = N; Some(i &gt; 1); --i))<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.assignment,int i = N)<SUB>23</SUB>>", "147": "<(IDENTIFIER,N,int i = N)<SUB>23</SUB>>", "149": "<(IDENTIFIER,i,i &gt; 1)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.preDecrement,--i)<SUB>23</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "155": "<(IDENTIFIER,memo,memo = new long[i][1 &lt;&lt; i])<SUB>25</SUB>>", "157": "<(IDENTIFIER,i,new long[i][1 &lt;&lt; i])<SUB>25</SUB>>", "159": "<(LITERAL,1,1 &lt;&lt; i)<SUB>25</SUB>>", "161": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>26</SUB>>", "163": "<(IDENTIFIER,$iterLocal0,)<SUB>26</SUB>>", "165": "<(IDENTIFIER,memo,&lt;empty&gt;)<SUB>26</SUB>>", "167": "<(hasNext,&lt;empty&gt;)<SUB>26</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>26</SUB>>", "173": "<(next,&lt;empty&gt;)<SUB>26</SUB>>", "175": "<(fill,fill(x, -1))<SUB>27</SUB>>", "177": "<(IDENTIFIER,x,fill(x, -1))<SUB>27</SUB>>", "179": "<(LITERAL,1,-1)<SUB>27</SUB>>", "181": "<(IDENTIFIER,ans,ans += dp(endNode = i - 1, 1 &lt;&lt; endNode))<SUB>28</SUB>>", "183": "<(IDENTIFIER,this,dp(endNode = i - 1, 1 &lt;&lt; endNode))<SUB>28</SUB>>", "185": "<(IDENTIFIER,endNode,endNode = i - 1)<SUB>28</SUB>>", "187": "<(IDENTIFIER,i,i - 1)<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; endNode)<SUB>28</SUB>>", "191": "<(IDENTIFIER,endNode,1 &lt;&lt; endNode)<SUB>28</SUB>>", "193": "<(LOCAL,int i: int)<SUB>30</SUB>>", "195": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>30</SUB>>", "199": "<(IDENTIFIER,N,i &lt; N)<SUB>30</SUB>>", "201": "<(IDENTIFIER,i,++i)<SUB>30</SUB>>", "203": "<(LOCAL,int j: int)<SUB>31</SUB>>", "205": "<(IDENTIFIER,j,int j = i + 1)<SUB>31</SUB>>", "207": "<(IDENTIFIER,i,i + 1)<SUB>31</SUB>>", "209": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>31</SUB>>", "211": "<(IDENTIFIER,N,j &lt; N)<SUB>31</SUB>>", "213": "<(IDENTIFIER,j,++j)<SUB>31</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,adjMat[i][j])<SUB>32</SUB>>", "217": "<(IDENTIFIER,adjMat,if (adjMat[i][j]))<SUB>32</SUB>>", "219": "<(IDENTIFIER,j,if (adjMat[i][j]))<SUB>32</SUB>>", "221": "<(IDENTIFIER,ans,--ans)<SUB>33</SUB>>", "223": "<(IDENTIFIER,out,println(ans &gt;&gt; 1))<SUB>34</SUB>>", "225": "<(IDENTIFIER,ans,ans &gt;&gt; 1)<SUB>34</SUB>>", "227": "<(flush,flush())<SUB>35</SUB>>", "229": "<(close,close())<SUB>36</SUB>>", "231": "<(MODIFIER,PUBLIC)>", "233": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}