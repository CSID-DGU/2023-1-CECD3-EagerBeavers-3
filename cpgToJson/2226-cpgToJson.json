{"edges": [["17", "19"], ["17", "215"], ["17", "216"], ["17", "217"], ["19", "20"], ["19", "21"], ["19", "26"], ["19", "31"], ["19", "35"], ["19", "54"], ["19", "58"], ["19", "63"], ["19", "86"], ["19", "92"], ["19", "97"], ["19", "132"], ["19", "133"], ["19", "136"], ["19", "144"], ["19", "210"], ["19", "213"], ["21", "22"], ["21", "23"], ["23", "24"], ["24", "25"], ["26", "27"], ["26", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["35", "40"], ["35", "43"], ["35", "45"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["43", "44"], ["45", "46"], ["45", "49"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "85"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["86", "87"], ["86", "88"], ["88", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["97", "104"], ["97", "107"], ["97", "109"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "131"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["138", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["144", "151"], ["144", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "183"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "162"], ["154", "164"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["162", "163"], ["164", "165"], ["164", "174"], ["165", "166"], ["165", "167"], ["165", "172"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["174", "175"], ["174", "176"], ["174", "181"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["181", "182"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "191"], ["183", "193"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "209"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "204"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["204", "207"], ["204", "208"], ["210", "211"], ["210", "212"], ["213", "214"], ["21", "30"], ["26", "33"], ["31", "37"], ["54", "59"], ["58", "65"], ["86", "93"], ["92", "101"], ["133", "141"], ["136", "145"], ["210", "213"], ["213", "217"], ["23", "21"], ["28", "26"], ["33", "31"], ["37", "40"], ["40", "46"], ["40", "56"], ["43", "40"], ["45", "43"], ["56", "54"], ["59", "58"], ["65", "68"], ["68", "74"], ["68", "89"], ["71", "68"], ["73", "71"], ["88", "86"], ["93", "92"], ["99", "104"], ["104", "110"], ["104", "133"], ["107", "104"], ["109", "107"], ["138", "136"], ["145", "148"], ["148", "156"], ["148", "210"], ["151", "148"], ["24", "23"], ["30", "28"], ["46", "50"], ["49", "45"], ["74", "81"], ["77", "73"], ["89", "88"], ["101", "99"], ["110", "117"], ["113", "109"], ["141", "138"], ["50", "49"], ["78", "77"], ["114", "113"], ["156", "159"], ["159", "168"], ["159", "185"], ["162", "159"], ["185", "188"], ["188", "201"], ["188", "151"], ["191", "188"], ["193", "191"], ["79", "78"], ["115", "121"], ["120", "114"], ["165", "177"], ["174", "162"], ["195", "193"], ["81", "79"], ["117", "115"], ["121", "127"], ["124", "120"], ["167", "172"], ["172", "165"], ["176", "181"], ["181", "174"], ["196", "195"], ["126", "124"], ["168", "167"], ["177", "176"], ["198", "196"], ["127", "126"], ["199", "204"], ["204", "198"], ["201", "199"], ["17", "24"], ["18", "217"], ["21", "217"], ["23", "217"], ["21", "217"], ["21", "217"], ["26", "217"], ["26", "217"], ["31", "217"], ["31", "217"], ["31", "217"], ["37", "217"], ["54", "217"], ["54", "217"], ["54", "217"], ["58", "217"], ["58", "217"], ["65", "217"], ["68", "217"], ["86", "217"], ["86", "217"], ["86", "217"], ["92", "217"], ["92", "217"], ["99", "217"], ["99", "217"], ["104", "217"], ["104", "217"], ["133", "217"], ["136", "217"], ["138", "217"], ["138", "217"], ["136", "217"], ["136", "217"], ["145", "217"], ["148", "217"], ["148", "217"], ["210", "217"], ["210", "217"], ["213", "217"], ["213", "217"], ["156", "217"], ["159", "217"], ["185", "217"], ["188", "217"], ["188", "217"], ["188", "217"], ["151", "217"], ["198", "217"], ["198", "217"], ["196", "217"], ["195", "217"], ["195", "217"], ["193", "217"], ["193", "217"], ["191", "217"], ["165", "217"], ["165", "217"], ["174", "217"], ["174", "217"], ["174", "217"], ["174", "217"], ["162", "217"], ["109", "217"], ["114", "217"], ["120", "217"], ["126", "217"], ["120", "217"], ["114", "217"], ["113", "217"], ["113", "217"], ["109", "217"], ["109", "217"], ["107", "217"], ["73", "217"], ["78", "217"], ["77", "217"], ["77", "217"], ["73", "217"], ["73", "217"], ["71", "217"], ["45", "217"], ["49", "217"], ["45", "217"], ["45", "217"], ["43", "217"], ["204", "217"], ["24", "217"], ["17", "18"], ["23", "21"], ["21", "26"], ["33", "31"], ["56", "54"], ["17", "58"], ["88", "86"], ["17", "92"], ["17", "133"], ["138", "136"], ["138", "136"], ["138", "136"], ["17", "37"], ["49", "45"], ["49", "45"], ["17", "65"], ["77", "73"], ["77", "73"], ["101", "99"], ["101", "99"], ["113", "109"], ["113", "109"], ["17", "145"], ["17", "210"], ["133", "210"], ["193", "210"], ["210", "213"], ["17", "213"], ["24", "23"], ["26", "33"], ["17", "33"], ["37", "40"], ["43", "40"], ["17", "40"], ["33", "40"], ["40", "43"], ["17", "43"], ["40", "56"], ["17", "56"], ["65", "68"], ["71", "68"], ["17", "68"], ["56", "68"], ["81", "71"], ["17", "71"], ["68", "88"], ["17", "88"], ["99", "104"], ["107", "104"], ["17", "104"], ["126", "107"], ["17", "107"], ["17", "138"], ["101", "138"], ["127", "138"], ["145", "148"], ["151", "148"], ["17", "148"], ["148", "151"], ["17", "151"], ["17", "24"], ["21", "49"], ["17", "49"], ["78", "77"], ["78", "77"], ["17", "77"], ["68", "89"], ["17", "89"], ["17", "101"], ["68", "101"], ["86", "113"], ["120", "113"], ["120", "113"], ["77", "113"], ["17", "113"], ["101", "141"], ["127", "141"], ["17", "141"], ["17", "156"], ["17", "185"], ["195", "193"], ["195", "193"], ["54", "78"], ["17", "78"], ["86", "114"], ["120", "114"], ["120", "114"], ["156", "159"], ["162", "159"], ["17", "159"], ["138", "159"], ["188", "159"], ["159", "162"], ["17", "162"], ["185", "188"], ["191", "188"], ["17", "188"], ["159", "188"], ["204", "191"], ["17", "191"], ["31", "120"], ["45", "120"], ["54", "120"], ["174", "165"], ["17", "165"], ["172", "165"], ["165", "174"], ["17", "174"], ["181", "174"], ["133", "195"], ["193", "195"], ["17", "195"], ["198", "195"], ["198", "195"], ["113", "195"], ["77", "195"], ["68", "81"], ["17", "81"], ["104", "117"], ["17", "117"], ["17", "172"], ["17", "181"], ["133", "196"], ["193", "196"], ["17", "196"], ["198", "196"], ["198", "196"], ["127", "126"], ["127", "126"], ["17", "126"], ["104", "126"], ["54", "198"], ["78", "198"], ["204", "198"], ["204", "198"], ["204", "198"], ["101", "127"], ["17", "127"], ["17", "204"], ["201", "204"], ["188", "201"], ["17", "201"], ["40", "40"], ["40", "50"], ["40", "43"], ["40", "49"], ["40", "46"], ["40", "45"], ["68", "68"], ["68", "73"], ["68", "77"], ["68", "81"], ["68", "74"], ["68", "79"], ["68", "71"], ["68", "78"], ["104", "107"], ["104", "115"], ["104", "120"], ["104", "113"], ["104", "114"], ["104", "104"], ["104", "121"], ["104", "127"], ["104", "126"], ["104", "110"], ["104", "117"], ["104", "124"], ["104", "109"], ["148", "188"], ["148", "185"], ["148", "151"], ["148", "148"], ["148", "159"], ["148", "156"], ["159", "167"], ["159", "162"], ["159", "168"], ["159", "181"], ["159", "174"], ["159", "159"], ["159", "176"], ["159", "177"], ["159", "165"], ["159", "172"], ["188", "188"], ["188", "196"], ["188", "198"], ["188", "204"], ["188", "191"], ["188", "195"], ["188", "201"], ["188", "193"], ["188", "199"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,char[] cs = toCharArray())<SUB>2</SUB>>", "23": "<(toCharArray,toCharArray())<SUB>2</SUB>>", "25": "<(IDENTIFIER,in,next())<SUB>2</SUB>>", "27": "<(IDENTIFIER,n,n = cs.length)<SUB>3</SUB>>", "29": "<(IDENTIFIER,cs,n = cs.length)<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,x = new int[n])<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.alloc,new int[n])>", "35": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "41": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,x[i] = cs[i] - '0')<SUB>6</SUB>>", "47": "<(IDENTIFIER,x,x[i] = cs[i] - '0')<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.subtraction,cs[i] - '0')<SUB>6</SUB>>", "51": "<(IDENTIFIER,cs,cs[i] - '0')<SUB>6</SUB>>", "53": "<(LITERAL,'0',cs[i] - '0')<SUB>6</SUB>>", "55": "<(IDENTIFIER,p10,p10 = new long[n])<SUB>7</SUB>>", "57": "<(IDENTIFIER,n,new long[n])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,p10[0])<SUB>8</SUB>>", "61": "<(LITERAL,0,p10[0] = 1)<SUB>8</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); ++i),for (int i = 1; Some(i &lt; n); ++i))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "67": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,p10[i] = p10[i - 1] * 10 % M)<SUB>10</SUB>>", "75": "<(IDENTIFIER,p10,p10[i] = p10[i - 1] * 10 % M)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.modulo,p10[i - 1] * 10 % M)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,p10[i - 1])<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>10</SUB>>", "83": "<(LITERAL,1,i - 1)<SUB>10</SUB>>", "85": "<(IDENTIFIER,M,p10[i - 1] * 10 % M)<SUB>10</SUB>>", "87": "<(IDENTIFIER,s,s = new long[n + 1])<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.addition,n + 1)<SUB>11</SUB>>", "91": "<(LITERAL,1,n + 1)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,s[n])<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,s[n] = 1)<SUB>12</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = n - 1; Some(i &gt;= 0); --i),for (int i = n - 1; Some(i &gt;= 0); --i))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = n - 1)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>13</SUB>>", "103": "<(LITERAL,1,n - 1)<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,i &gt;= 0)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.preDecrement,--i)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.assignment,s[i] = (s[i + 1] + x[i] * p10[n - 1 - i]) % M)<SUB>14</SUB>>", "111": "<(IDENTIFIER,s,s[i] = (s[i + 1] + x[i] * p10[n - 1 - i]) % M)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.modulo,(s[i + 1] + x[i] * p10[n - 1 - i]) % M)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,s[i + 1])<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.addition,i + 1)<SUB>14</SUB>>", "119": "<(LITERAL,1,i + 1)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>14</SUB>>", "123": "<(IDENTIFIER,i,x[i] * p10[n - 1 - i])<SUB>14</SUB>>", "125": "<(IDENTIFIER,p10,x[i] * p10[n - 1 - i])<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "129": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "131": "<(IDENTIFIER,M,(s[i + 1] + x[i] * p10[n - 1 - i]) % M)<SUB>14</SUB>>", "133": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>15</SUB>>", "135": "<(LITERAL,0,long ans = 0)<SUB>15</SUB>>", "137": "<(IDENTIFIER,dp,dp = new long[2][n][n + 1])<SUB>16</SUB>>", "139": "<(LITERAL,2,new long[2][n][n + 1])<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.addition,n + 1)<SUB>16</SUB>>", "143": "<(LITERAL,1,n + 1)<SUB>16</SUB>>", "145": "<(&lt;operator&gt;.assignment,dig = 1)<SUB>17</SUB>>", "147": "<(LITERAL,1,dig = 1)<SUB>17</SUB>>", "149": "<(IDENTIFIER,dig,dig &lt;= 9)<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.preIncrement,++dig)<SUB>17</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "155": "<(LOCAL,int i: int)<SUB>18</SUB>>", "157": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "159": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>18</SUB>>", "161": "<(IDENTIFIER,n,i &lt; n)<SUB>18</SUB>>", "163": "<(IDENTIFIER,i,++i)<SUB>18</SUB>>", "165": "<(fill,fill(dp[0][i], -1))<SUB>19</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,dp[0][i])<SUB>19</SUB>>", "169": "<(IDENTIFIER,dp,fill(dp[0][i], -1))<SUB>19</SUB>>", "171": "<(IDENTIFIER,i,fill(dp[0][i], -1))<SUB>19</SUB>>", "173": "<(LITERAL,1,-1)<SUB>19</SUB>>", "175": "<(IDENTIFIER,Arrays,fill(dp[1][i], -1))<SUB>20</SUB>>", "177": "<(&lt;operator&gt;.indexAccess,dp[1])<SUB>20</SUB>>", "179": "<(LITERAL,1,fill(dp[1][i], -1))<SUB>20</SUB>>", "181": "<(&lt;operator&gt;.minus,-1)<SUB>20</SUB>>", "183": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); ++i),for (int i = 1; Some(i &lt;= n); ++i))<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>22</SUB>>", "187": "<(LITERAL,1,int i = 1)<SUB>22</SUB>>", "189": "<(IDENTIFIER,i,i &lt;= n)<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.preIncrement,++i)<SUB>22</SUB>>", "193": "<(&lt;operator&gt;.assignment,ans = (ans + p10[i - 1] * dp(0, 0, i)) % M)<SUB>23</SUB>>", "195": "<(&lt;operator&gt;.modulo,(ans + p10[i - 1] * dp(0, 0, i)) % M)<SUB>23</SUB>>", "197": "<(IDENTIFIER,ans,ans + p10[i - 1] * dp(0, 0, i))<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,p10[i - 1])<SUB>23</SUB>>", "201": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>23</SUB>>", "203": "<(LITERAL,1,i - 1)<SUB>23</SUB>>", "205": "<(IDENTIFIER,this,dp(0, 0, i))<SUB>23</SUB>>", "207": "<(LITERAL,0,dp(0, 0, i))<SUB>23</SUB>>", "209": "<(IDENTIFIER,M,(ans + p10[i - 1] * dp(0, 0, i)) % M)<SUB>23</SUB>>", "211": "<(IDENTIFIER,out,println(ans))<SUB>25</SUB>>", "213": "<(close,close())<SUB>26</SUB>>", "215": "<(MODIFIER,PUBLIC)>", "217": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}