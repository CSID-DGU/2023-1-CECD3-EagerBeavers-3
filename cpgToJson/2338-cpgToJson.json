{"edges": [["19", "21"], ["19", "161"], ["19", "162"], ["19", "163"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "41"], ["21", "57"], ["21", "58"], ["21", "61"], ["21", "95"], ["21", "96"], ["21", "100"], ["21", "105"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["38", "39"], ["38", "40"], ["41", "42"], ["41", "43"], ["41", "46"], ["41", "49"], ["41", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["72", "73"], ["72", "74"], ["72", "79"], ["72", "82"], ["72", "84"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["85", "86"], ["85", "93"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["96", "97"], ["96", "98"], ["98", "99"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "110"], ["106", "107"], ["106", "109"], ["107", "108"], ["110", "111"], ["110", "112"], ["110", "116"], ["110", "117"], ["110", "121"], ["110", "122"], ["110", "129"], ["110", "130"], ["110", "139"], ["110", "151"], ["112", "113"], ["112", "114"], ["114", "115"], ["117", "118"], ["117", "119"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["130", "131"], ["130", "132"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "145"], ["139", "146"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["146", "147"], ["147", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "159"], ["155", "160"], ["156", "157"], ["156", "158"], ["22", "28"], ["25", "32"], ["30", "38"], ["35", "43"], ["58", "63"], ["96", "102"], ["100", "107"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["43", "46"], ["46", "52"], ["46", "58"], ["49", "46"], ["51", "49"], ["63", "66"], ["66", "76"], ["66", "98"], ["69", "66"], ["98", "96"], ["102", "100"], ["106", "163"], ["106", "114"], ["28", "26"], ["38", "37"], ["52", "55"], ["55", "51"], ["107", "106"], ["112", "119"], ["117", "125"], ["122", "135"], ["130", "141"], ["151", "107"], ["74", "79"], ["79", "87"], ["79", "69"], ["82", "79"], ["114", "112"], ["119", "117"], ["124", "122"], ["132", "130"], ["140", "148"], ["152", "156"], ["155", "151"], ["76", "74"], ["125", "124"], ["133", "132"], ["141", "140"], ["154", "152"], ["156", "155"], ["86", "93"], ["86", "82"], ["93", "82"], ["135", "133"], ["148", "154"], ["87", "90"], ["90", "86"], ["19", "24"], ["20", "163"], ["22", "163"], ["25", "163"], ["25", "163"], ["30", "163"], ["35", "163"], ["37", "163"], ["35", "163"], ["35", "163"], ["58", "163"], ["63", "163"], ["66", "163"], ["66", "163"], ["66", "163"], ["98", "163"], ["96", "163"], ["96", "163"], ["100", "163"], ["100", "163"], ["100", "163"], ["107", "163"], ["106", "163"], ["106", "163"], ["151", "163"], ["151", "163"], ["69", "163"], ["49", "163"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "58"], ["98", "96"], ["102", "100"], ["102", "100"], ["22", "25"], ["19", "25"], ["19", "43"], ["55", "51"], ["19", "63"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["43", "46"], ["49", "46"], ["19", "46"], ["30", "46"], ["46", "49"], ["19", "49"], ["63", "66"], ["69", "66"], ["19", "66"], ["46", "66"], ["76", "69"], ["19", "69"], ["32", "98"], ["55", "98"], ["19", "98"], ["58", "102"], ["93", "102"], ["19", "102"], ["107", "106"], ["19", "106"], ["114", "112"], ["119", "117"], ["125", "122"], ["125", "122"], ["19", "122"], ["132", "130"], ["132", "130"], ["30", "38"], ["19", "38"], ["32", "55"], ["19", "55"], ["76", "74"], ["76", "74"], ["96", "107"], ["19", "107"], ["19", "151"], ["74", "79"], ["82", "79"], ["19", "79"], ["79", "82"], ["19", "82"], ["98", "114"], ["119", "114"], ["19", "114"], ["114", "119"], ["19", "119"], ["125", "124"], ["125", "124"], ["19", "124"], ["133", "132"], ["133", "132"], ["19", "132"], ["141", "140"], ["141", "140"], ["19", "140"], ["19", "155"], ["66", "76"], ["19", "76"], ["117", "125"], ["19", "125"], ["112", "125"], ["135", "133"], ["19", "133"], ["135", "133"], ["130", "141"], ["19", "141"], ["19", "148"], ["148", "156"], ["19", "156"], ["35", "86"], ["51", "86"], ["58", "93"], ["19", "93"], ["122", "135"], ["19", "135"], ["100", "148"], ["156", "148"], ["46", "49"], ["46", "51"], ["46", "52"], ["46", "46"], ["46", "55"], ["66", "66"], ["66", "69"], ["66", "74"], ["66", "76"], ["66", "79"], ["106", "107"], ["106", "141"], ["106", "154"], ["106", "122"], ["106", "114"], ["106", "132"], ["106", "151"], ["106", "119"], ["106", "106"], ["106", "112"], ["106", "140"], ["106", "148"], ["106", "152"], ["106", "130"], ["106", "135"], ["106", "117"], ["106", "155"], ["106", "156"], ["106", "124"], ["106", "125"], ["106", "133"], ["79", "87"], ["79", "82"], ["79", "90"], ["79", "79"], ["79", "86"], ["86", "93"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] a = new int[n + 1])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "39": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "41": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "45": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "47": "<(IDENTIFIER,i,i &lt;= n)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,a[i] = nextInt())<SUB>5</SUB>>", "53": "<(IDENTIFIER,a,a[i] = nextInt())<SUB>5</SUB>>", "55": "<(nextInt,nextInt())<SUB>5</SUB>>", "57": "<(LOCAL,int cnt: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,cnt,int cnt = 0)<SUB>6</SUB>>", "61": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "67": "<(IDENTIFIER,i,i &lt;= n)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "71": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "73": "<(LOCAL,int j: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,j,int j = i - 1)<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,i - 1)<SUB>8</SUB>>", "79": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 1)<SUB>8</SUB>>", "81": "<(LITERAL,1,j &gt;= 1)<SUB>8</SUB>>", "83": "<(IDENTIFIER,j,j--)<SUB>8</SUB>>", "85": "<(CONTROL_STRUCTURE,if (a[i] &lt; a[j]),if (a[i] &lt; a[j]))<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "89": "<(IDENTIFIER,i,a[i] &lt; a[j])<SUB>9</SUB>>", "91": "<(IDENTIFIER,a,a[i] &lt; a[j])<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.preIncrement,++cnt)<SUB>10</SUB>>", "95": "<(LOCAL,int q: int)<SUB>14</SUB>>", "97": "<(IDENTIFIER,q,int q = nextInt())<SUB>14</SUB>>", "99": "<(IDENTIFIER,sc,nextInt())<SUB>14</SUB>>", "101": "<(IDENTIFIER,cnt,cnt = cnt % 2)<SUB>15</SUB>>", "103": "<(IDENTIFIER,cnt,cnt % 2)<SUB>15</SUB>>", "105": "<(CONTROL_STRUCTURE,while (q-- &gt; 0),while (q-- &gt; 0))<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.postDecrement,q--)<SUB>16</SUB>>", "109": "<(LITERAL,0,q-- &gt; 0)<SUB>16</SUB>>", "111": "<(LOCAL,int x: int)<SUB>17</SUB>>", "113": "<(IDENTIFIER,x,int x = nextInt())<SUB>17</SUB>>", "115": "<(IDENTIFIER,sc,nextInt())<SUB>17</SUB>>", "117": "<(&lt;operator&gt;.assignment,int y = nextInt())<SUB>18</SUB>>", "119": "<(nextInt,nextInt())<SUB>18</SUB>>", "121": "<(LOCAL,int r: int)<SUB>19</SUB>>", "123": "<(IDENTIFIER,r,int r = y - x + 1)<SUB>19</SUB>>", "125": "<(&lt;operator&gt;.subtraction,y - x)<SUB>19</SUB>>", "127": "<(IDENTIFIER,x,y - x)<SUB>19</SUB>>", "129": "<(LOCAL,long ok: long)<SUB>20</SUB>>", "131": "<(IDENTIFIER,ok,long ok = (r * (r - 1)) / 2)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.multiplication,r * (r - 1))<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.subtraction,r - 1)<SUB>20</SUB>>", "137": "<(LITERAL,1,r - 1)<SUB>20</SUB>>", "139": "<(CONTROL_STRUCTURE,if (ok % 2 == 0),if (ok % 2 == 0))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.modulo,ok % 2)<SUB>21</SUB>>", "143": "<(LITERAL,2,ok % 2)<SUB>21</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "147": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "149": "<(IDENTIFIER,cnt,cnt ^= 1)<SUB>25</SUB>>", "151": "<(println,System.out.println(cnt == 0 ? &quot;even&quot; : &quot;odd&quot;))<SUB>27</SUB>>", "153": "<(IDENTIFIER,System,System.out.println(cnt == 0 ? &quot;even&quot; : &quot;odd&quot;))<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.conditional,cnt == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>27</SUB>>", "157": "<(IDENTIFIER,cnt,cnt == 0)<SUB>27</SUB>>", "159": "<(LITERAL,&quot;even&quot;,cnt == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>27</SUB>>", "161": "<(MODIFIER,PUBLIC)>", "163": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}