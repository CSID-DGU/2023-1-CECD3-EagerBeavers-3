{"edges": [["19", "20"], ["19", "21"], ["19", "180"], ["19", "181"], ["19", "182"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["43", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["53", "54"], ["53", "55"], ["53", "59"], ["53", "60"], ["53", "65"], ["53", "66"], ["53", "70"], ["53", "71"], ["53", "74"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["68", "69"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "92"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["92", "93"], ["92", "94"], ["92", "97"], ["92", "100"], ["92", "102"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["102", "103"], ["103", "104"], ["103", "111"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "117"], ["111", "137"], ["111", "144"], ["111", "148"], ["111", "174"], ["111", "179"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["148", "155"], ["148", "158"], ["148", "160"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["161", "162"], ["161", "167"], ["161", "172"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["172", "173"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["22", "29"], ["25", "41"], ["37", "45"], ["24", "22"], ["39", "37"], ["45", "48"], ["48", "182"], ["48", "57"], ["51", "48"], ["27", "34"], ["30", "25"], ["41", "39"], ["55", "62"], ["60", "68"], ["66", "71"], ["71", "76"], ["29", "27"], ["32", "30"], ["57", "55"], ["62", "60"], ["68", "66"], ["76", "79"], ["79", "90"], ["79", "51"], ["82", "79"], ["34", "32"], ["86", "94"], ["88", "86"], ["94", "97"], ["97", "105"], ["97", "82"], ["100", "97"], ["90", "88"], ["104", "113"], ["104", "100"], ["105", "108"], ["108", "104"], ["112", "119"], ["137", "147"], ["144", "152"], ["174", "82"], ["113", "112"], ["119", "122"], ["122", "131"], ["122", "140"], ["125", "122"], ["138", "141"], ["141", "137"], ["145", "144"], ["150", "155"], ["155", "163"], ["155", "176"], ["158", "155"], ["176", "174"], ["128", "125"], ["140", "138"], ["147", "145"], ["152", "150"], ["129", "133"], ["132", "128"], ["162", "168"], ["162", "176"], ["167", "158"], ["131", "129"], ["133", "132"], ["163", "162"], ["168", "167"], ["19", "24"], ["20", "182"], ["22", "182"], ["27", "182"], ["30", "182"], ["30", "182"], ["30", "182"], ["25", "182"], ["39", "182"], ["41", "182"], ["39", "182"], ["37", "182"], ["37", "182"], ["45", "182"], ["48", "182"], ["48", "182"], ["48", "182"], ["51", "182"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "45"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["45", "48"], ["51", "48"], ["19", "48"], ["37", "48"], ["48", "51"], ["19", "51"], ["57", "55"], ["62", "60"], ["62", "60"], ["68", "66"], ["19", "71"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["19", "76"], ["41", "57"], ["90", "57"], ["19", "57"], ["39", "62"], ["88", "62"], ["19", "62"], ["55", "62"], ["19", "68"], ["76", "79"], ["82", "79"], ["19", "79"], ["60", "79"], ["79", "82"], ["19", "82"], ["88", "86"], ["88", "86"], ["71", "94"], ["174", "94"], ["19", "94"], ["62", "88"], ["19", "88"], ["90", "88"], ["94", "97"], ["100", "97"], ["19", "97"], ["97", "100"], ["19", "100"], ["57", "90"], ["19", "90"], ["105", "104"], ["105", "104"], ["66", "104"], ["137", "104"], ["105", "112"], ["19", "112"], ["19", "174"], ["122", "174"], ["86", "105"], ["19", "105"], ["19", "119"], ["144", "137"], ["128", "137"], ["66", "137"], ["112", "137"], ["137", "144"], ["122", "150"], ["19", "150"], ["119", "122"], ["125", "122"], ["19", "122"], ["97", "122"], ["122", "125"], ["19", "125"], ["150", "155"], ["158", "155"], ["19", "155"], ["155", "158"], ["19", "158"], ["19", "176"], ["122", "176"], ["144", "128"], ["66", "128"], ["162", "128"], ["167", "128"], ["19", "128"], ["122", "152"], ["19", "152"], ["19", "167"], ["66", "132"], ["162", "132"], ["167", "132"], ["19", "132"], ["66", "162"], ["167", "162"], ["19", "162"], ["48", "68"], ["48", "60"], ["48", "51"], ["48", "57"], ["48", "76"], ["48", "79"], ["48", "48"], ["48", "66"], ["48", "71"], ["48", "55"], ["48", "62"], ["79", "94"], ["79", "97"], ["79", "90"], ["79", "79"], ["79", "88"], ["79", "86"], ["79", "82"], ["97", "104"], ["97", "108"], ["97", "105"], ["104", "113"], ["104", "145"], ["104", "150"], ["104", "119"], ["104", "144"], ["104", "97"], ["104", "112"], ["104", "138"], ["104", "137"], ["104", "152"], ["104", "100"], ["104", "174"], ["104", "155"], ["104", "141"], ["104", "122"], ["104", "176"], ["104", "140"], ["104", "147"], ["122", "128"], ["122", "131"], ["122", "132"], ["122", "129"], ["122", "122"], ["122", "125"], ["122", "133"], ["155", "163"], ["155", "162"], ["162", "167"], ["162", "168"], ["162", "155"], ["162", "158"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>4</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>4</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int t = parseInt(br.readLine()))<SUB>5</SUB>>", "39": "<(parseInt,parseInt(br.readLine()))<SUB>5</SUB>>", "41": "<(readLine,readLine())<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,for (int q = 0; Some(q &lt; t); q++),for (int q = 0; Some(q &lt; t); q++))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,int q = 0)<SUB>6</SUB>>", "47": "<(LITERAL,0,int q = 0)<SUB>6</SUB>>", "49": "<(IDENTIFIER,q,q &lt; t)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,q++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,String s = readLine())<SUB>7</SUB>>", "57": "<(readLine,readLine())<SUB>7</SUB>>", "59": "<(LOCAL,int n: int)<SUB>8</SUB>>", "61": "<(IDENTIFIER,n,int n = Integer.parseInt(s))<SUB>8</SUB>>", "63": "<(IDENTIFIER,Integer,Integer.parseInt(s))<SUB>8</SUB>>", "65": "<(LOCAL,int[] a: int[])<SUB>9</SUB>>", "67": "<(IDENTIFIER,a,int[] a = new int[1000])<SUB>9</SUB>>", "69": "<(LITERAL,1000,new int[1000])<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,int index = 0)<SUB>10</SUB>>", "73": "<(LITERAL,0,int index = 0)<SUB>10</SUB>>", "75": "<(LOCAL,int i: int)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "85": "<(LOCAL,int x: int)<SUB>12</SUB>>", "87": "<(IDENTIFIER,x,int x = parseInt(br.readLine()))<SUB>12</SUB>>", "89": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>12</SUB>>", "91": "<(IDENTIFIER,br,readLine())<SUB>12</SUB>>", "93": "<(LOCAL,int j: int)<SUB>13</SUB>>", "95": "<(IDENTIFIER,j,int j = index)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>13</SUB>>", "99": "<(LITERAL,0,j &gt;= 0)<SUB>13</SUB>>", "101": "<(IDENTIFIER,j,j--)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,if (x - 1 == a[j]),if (x - 1 == a[j]))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.subtraction,x - 1)<SUB>14</SUB>>", "107": "<(LITERAL,1,x - 1)<SUB>14</SUB>>", "109": "<(IDENTIFIER,a,x - 1 == a[j])<SUB>14</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,a[j] = x)<SUB>15</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; j); k++),for (int k = 0; Some(k &lt; j); k++))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>17</SUB>>", "121": "<(LITERAL,0,int k = 0)<SUB>17</SUB>>", "123": "<(IDENTIFIER,k,k &lt; j)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,k++)<SUB>17</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,a[k])<SUB>18</SUB>>", "135": "<(IDENTIFIER,k,a[k] + &quot;.&quot;)<SUB>18</SUB>>", "137": "<(print,System.out.print(a[j]))<SUB>20</SUB>>", "139": "<(IDENTIFIER,System,System.out.print(a[j]))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>20</SUB>>", "143": "<(IDENTIFIER,j,System.out.print(a[j]))<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>21</SUB>>", "147": "<(FIELD_IDENTIFIER,out,out)<SUB>21</SUB>>", "149": "<(LOCAL,int k: int)<SUB>22</SUB>>", "151": "<(IDENTIFIER,k,int k = j + 1)<SUB>22</SUB>>", "153": "<(IDENTIFIER,j,j + 1)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.lessThan,k &lt; 1000)<SUB>22</SUB>>", "157": "<(LITERAL,1000,k &lt; 1000)<SUB>22</SUB>>", "159": "<(IDENTIFIER,k,k++)<SUB>22</SUB>>", "161": "<(CONTROL_STRUCTURE,if (a[k] != 0),if (a[k] != 0))<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,a[k])<SUB>23</SUB>>", "165": "<(IDENTIFIER,k,a[k] != 0)<SUB>23</SUB>>", "167": "<(&lt;operator&gt;.assignment,a[k] = 0)<SUB>24</SUB>>", "169": "<(IDENTIFIER,a,a[k] = 0)<SUB>24</SUB>>", "171": "<(LITERAL,0,a[k] = 0)<SUB>24</SUB>>", "173": "<(CONTROL_STRUCTURE,break;,break;)<SUB>26</SUB>>", "175": "<(IDENTIFIER,index,index = j + 1)<SUB>28</SUB>>", "177": "<(IDENTIFIER,j,j + 1)<SUB>28</SUB>>", "179": "<(CONTROL_STRUCTURE,break;,break;)<SUB>30</SUB>>", "181": "<(MODIFIER,STATIC)>"}}