{"edges": [["21", "22"], ["21", "23"], ["21", "182"], ["21", "183"], ["21", "184"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "177"], ["39", "40"], ["39", "41"], ["39", "45"], ["39", "46"], ["39", "50"], ["39", "51"], ["39", "55"], ["39", "95"], ["39", "105"], ["39", "106"], ["39", "109"], ["39", "174"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "65"], ["55", "67"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "79"], ["67", "87"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "76"], ["72", "78"], ["73", "74"], ["73", "75"], ["76", "77"], ["79", "80"], ["79", "85"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["95", "96"], ["95", "97"], ["95", "98"], ["98", "99"], ["98", "102"], ["98", "104"], ["99", "100"], ["99", "101"], ["102", "103"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["119", "121"], ["119", "154"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "137"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "147"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "160"], ["154", "163"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["160", "161"], ["161", "162"], ["163", "164"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "180"], ["178", "179"], ["180", "181"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "43"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["30", "28"], ["37", "35"], ["41", "48"], ["46", "53"], ["51", "57"], ["95", "106"], ["106", "111"], ["174", "184"], ["174", "178"], ["178", "180"], ["180", "184"], ["43", "41"], ["48", "46"], ["53", "51"], ["57", "64"], ["60", "69"], ["60", "101"], ["65", "64"], ["111", "114"], ["114", "128"], ["114", "174"], ["117", "114"], ["62", "60"], ["68", "81"], ["79", "89"], ["87", "65"], ["99", "102"], ["102", "95"], ["121", "157"], ["64", "62"], ["69", "75"], ["80", "85"], ["85", "79"], ["88", "93"], ["93", "87"], ["101", "99"], ["123", "121"], ["155", "161"], ["155", "167"], ["73", "76"], ["76", "68"], ["81", "84"], ["84", "80"], ["89", "92"], ["92", "88"], ["124", "143"], ["137", "123"], ["157", "155"], ["161", "117"], ["75", "73"], ["125", "133"], ["132", "124"], ["138", "150"], ["147", "137"], ["165", "171"], ["165", "117"], ["127", "125"], ["133", "136"], ["136", "132"], ["140", "138"], ["148", "153"], ["153", "147"], ["167", "165"], ["171", "117"], ["128", "131"], ["131", "127"], ["141", "146"], ["146", "140"], ["150", "148"], ["143", "141"], ["21", "26"], ["22", "184"], ["24", "184"], ["27", "184"], ["27", "184"], ["31", "184"], ["34", "184"], ["34", "184"], ["41", "184"], ["46", "184"], ["48", "184"], ["46", "184"], ["46", "184"], ["51", "184"], ["51", "184"], ["57", "184"], ["60", "184"], ["95", "184"], ["99", "184"], ["102", "184"], ["102", "184"], ["95", "184"], ["106", "184"], ["111", "184"], ["114", "184"], ["114", "184"], ["114", "184"], ["174", "184"], ["174", "184"], ["174", "184"], ["124", "184"], ["123", "184"], ["137", "184"], ["123", "184"], ["121", "184"], ["121", "184"], ["155", "184"], ["157", "184"], ["155", "184"], ["155", "184"], ["165", "184"], ["167", "184"], ["165", "184"], ["165", "184"], ["171", "184"], ["161", "184"], ["117", "184"], ["68", "184"], ["76", "184"], ["76", "184"], ["68", "184"], ["79", "184"], ["93", "184"], ["87", "184"], ["87", "184"], ["65", "184"], ["95", "184"], ["21", "22"], ["21", "24"], ["21", "31"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["43", "41"], ["48", "46"], ["53", "51"], ["21", "106"], ["21", "57"], ["21", "95"], ["51", "95"], ["60", "95"], ["68", "95"], ["99", "95"], ["102", "95"], ["21", "111"], ["34", "174"], ["21", "174"], ["106", "174"], ["171", "174"], ["161", "174"], ["48", "178"], ["93", "178"], ["21", "178"], ["174", "180"], ["21", "180"], ["27", "43"], ["21", "43"], ["43", "48"], ["21", "48"], ["41", "53"], ["21", "53"], ["57", "60"], ["65", "60"], ["21", "60"], ["51", "60"], ["60", "65"], ["21", "65"], ["73", "68"], ["76", "68"], ["21", "68"], ["85", "79"], ["93", "87"], ["21", "99"], ["21", "104"], ["111", "114"], ["117", "114"], ["21", "114"], ["53", "114"], ["150", "117"], ["21", "117"], ["123", "121"], ["123", "121"], ["99", "102"], ["21", "102"], ["21", "73"], ["21", "78"], ["48", "85"], ["93", "85"], ["21", "85"], ["85", "93"], ["21", "93"], ["124", "123"], ["124", "123"], ["138", "123"], ["138", "123"], ["121", "155"], ["21", "155"], ["157", "155"], ["157", "155"], ["73", "76"], ["21", "76"], ["125", "124"], ["125", "124"], ["138", "137"], ["138", "137"], ["21", "157"], ["46", "157"], ["167", "157"], ["106", "161"], ["171", "161"], ["21", "161"], ["21", "125"], ["21", "138"], ["155", "165"], ["21", "165"], ["167", "165"], ["167", "165"], ["21", "171"], ["21", "167"], ["157", "167"], ["106", "171"], ["161", "171"], ["143", "150"], ["21", "150"], ["114", "143"], ["21", "143"], ["174", "178"], ["174", "180"], ["60", "68"], ["60", "60"], ["60", "73"], ["60", "64"], ["60", "89"], ["60", "75"], ["60", "81"], ["60", "84"], ["60", "85"], ["60", "69"], ["60", "92"], ["60", "76"], ["60", "65"], ["60", "87"], ["60", "93"], ["60", "79"], ["60", "80"], ["60", "88"], ["60", "62"], ["114", "141"], ["114", "136"], ["114", "146"], ["114", "128"], ["114", "114"], ["114", "131"], ["114", "132"], ["114", "150"], ["114", "121"], ["114", "153"], ["114", "123"], ["114", "157"], ["114", "138"], ["114", "140"], ["114", "148"], ["114", "143"], ["114", "137"], ["114", "147"], ["114", "117"], ["114", "127"], ["114", "155"], ["114", "124"], ["114", "125"], ["114", "133"], ["155", "167"], ["155", "161"], ["155", "165"], ["165", "171"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(BLOCK,try,try)<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "43": "<(nextInt,nextInt())<SUB>6</SUB>>", "45": "<(LOCAL,int t: int)<SUB>7</SUB>>", "47": "<(IDENTIFIER,t,int t = nextInt())<SUB>7</SUB>>", "49": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,ANY h = new House[n])<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.alloc,new House[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; h.length); ++i),for (int i = 0; Some(i &lt; h.length); ++i))<SUB>10</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "61": "<(IDENTIFIER,i,i &lt; h.length)<SUB>10</SUB>>", "63": "<(IDENTIFIER,h,i &lt; h.length)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.preIncrement,++i)<SUB>10</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,h[i] = new House())<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "75": "<(&lt;operator&gt;.alloc,new House())<SUB>11</SUB>>", "77": "<(IDENTIFIER,$obj2,new House())>", "79": "<(&lt;operator&gt;.assignment,h[i].x = nextInt())<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>12</SUB>>", "83": "<(IDENTIFIER,i,h[i].x = nextInt())<SUB>12</SUB>>", "85": "<(nextInt,nextInt())<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.assignment,h[i].a = nextInt())<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>13</SUB>>", "91": "<(IDENTIFIER,i,h[i].a = nextInt())<SUB>13</SUB>>", "93": "<(nextInt,nextInt())<SUB>13</SUB>>", "95": "<(sort,sort(h, new Comparator&lt;House&gt;() {\\012\\012    @Override\\012    public int compare(final House o1, final House o2) {\\012        return Integer.valueOf(o1.x).compareTo(o2.x);\\012    }\\012}))<SUB>16</SUB>>", "97": "<(IDENTIFIER,h,sort(h, new Comparator&lt;House&gt;() {\\012\\012    @Override\\012    public int compare(final House o1, final House o2) {\\012        return Integer.valueOf(o1.x).compareTo(o2.x);\\012    }\\012}))<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "101": "<(&lt;operator&gt;.alloc,new Comparator&lt;House&gt;() {\\012\\012    @Override\\012    public int compare(final House o1, final House o2) {\\012        return Integer.valueOf(o1.x).compareTo(o2.x);\\012    }\\012})<SUB>16</SUB>>", "103": "<(IDENTIFIER,$obj3,new Comparator&lt;House&gt;() {\\012\\012    @Override\\012    public int compare(final House o1, final House o2) {\\012        return Integer.valueOf(o1.x).compareTo(o2.x);\\012    }\\012})>", "105": "<(LOCAL,int ans: int)<SUB>24</SUB>>", "107": "<(IDENTIFIER,ans,int ans = 2)<SUB>24</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); ++i),for (int i = 1; Some(i &lt; n); ++i))<SUB>25</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>25</SUB>>", "113": "<(LITERAL,1,int i = 1)<SUB>25</SUB>>", "115": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "117": "<(&lt;operator&gt;.preIncrement,++i)<SUB>25</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "121": "<(&lt;operator&gt;.assignment,int dspace = 2 * h[i].x - h[i].a - (2 * h[i - 1].x + h[i - 1].a))<SUB>26</SUB>>", "123": "<(&lt;operator&gt;.subtraction,2 * h[i].x - h[i].a - (2 * h[i - 1].x + h[i - 1].a))<SUB>26</SUB>>", "125": "<(&lt;operator&gt;.multiplication,2 * h[i].x)<SUB>26</SUB>>", "127": "<(&lt;operator&gt;.fieldAccess,h[i].x)<SUB>26</SUB>>", "129": "<(IDENTIFIER,h,2 * h[i].x)<SUB>26</SUB>>", "131": "<(FIELD_IDENTIFIER,x,x)<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,h[i])<SUB>26</SUB>>", "135": "<(IDENTIFIER,i,2 * h[i].x - h[i].a)<SUB>26</SUB>>", "137": "<(&lt;operator&gt;.addition,2 * h[i - 1].x + h[i - 1].a)<SUB>27</SUB>>", "139": "<(LITERAL,2,2 * h[i - 1].x)<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,h[i - 1])<SUB>27</SUB>>", "143": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>27</SUB>>", "145": "<(LITERAL,1,i - 1)<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,h[i - 1].a)<SUB>27</SUB>>", "149": "<(IDENTIFIER,h,2 * h[i - 1].x + h[i - 1].a)<SUB>27</SUB>>", "151": "<(IDENTIFIER,i,i - 1)<SUB>27</SUB>>", "153": "<(FIELD_IDENTIFIER,a,a)<SUB>27</SUB>>", "155": "<(&lt;operator&gt;.equals,dspace == 2 * t)<SUB>28</SUB>>", "157": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>28</SUB>>", "159": "<(IDENTIFIER,t,2 * t)<SUB>28</SUB>>", "161": "<(&lt;operator&gt;.preIncrement,++ans)<SUB>29</SUB>>", "163": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "165": "<(&lt;operator&gt;.greaterThan,dspace &gt; 2 * t)<SUB>30</SUB>>", "167": "<(&lt;operator&gt;.multiplication,2 * t)<SUB>30</SUB>>", "169": "<(IDENTIFIER,t,2 * t)<SUB>30</SUB>>", "171": "<(&lt;operator&gt;.assignmentPlus,ans += 2)<SUB>31</SUB>>", "173": "<(LITERAL,2,ans += 2)<SUB>31</SUB>>", "175": "<(IDENTIFIER,out,println(ans))<SUB>35</SUB>>", "177": "<(BLOCK,finally,finally)<SUB>37</SUB>>", "179": "<(IDENTIFIER,in,close())<SUB>38</SUB>>", "181": "<(IDENTIFIER,out,close())<SUB>39</SUB>>", "183": "<(MODIFIER,STATIC)>"}}