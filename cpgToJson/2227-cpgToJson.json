{"edges": [["19", "20"], ["19", "21"], ["19", "182"], ["19", "183"], ["19", "184"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "49"], ["21", "79"], ["21", "80"], ["21", "83"], ["21", "177"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "59"], ["49", "61"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["61", "62"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "78"], ["69", "70"], ["69", "77"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "97"], ["93", "98"], ["93", "102"], ["93", "135"], ["94", "95"], ["94", "96"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "105"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "111"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "125"], ["123", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "133"], ["133", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "176"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "173"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["167", "170"], ["167", "171"], ["167", "172"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "45"], ["44", "51"], ["80", "85"], ["177", "184"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["45", "44"], ["51", "58"], ["54", "63"], ["54", "80"], ["59", "58"], ["85", "88"], ["88", "94"], ["88", "180"], ["91", "88"], ["178", "177"], ["28", "26"], ["56", "54"], ["62", "59"], ["94", "100"], ["98", "103"], ["180", "178"], ["58", "56"], ["63", "67"], ["66", "62"], ["100", "98"], ["103", "109"], ["103", "137"], ["137", "140"], ["140", "148"], ["140", "91"], ["143", "140"], ["67", "71"], ["68", "66"], ["107", "113"], ["69", "68"], ["109", "107"], ["113", "120"], ["116", "103"], ["116", "127"], ["121", "120"], ["148", "151"], ["151", "160"], ["151", "143"], ["154", "151"], ["70", "69"], ["118", "116"], ["125", "133"], ["130", "121"], ["157", "154"], ["71", "74"], ["72", "70"], ["120", "118"], ["127", "125"], ["133", "130"], ["159", "157"], ["74", "72"], ["160", "166"], ["161", "159"], ["162", "161"], ["164", "162"], ["165", "173"], ["173", "164"], ["166", "167"], ["167", "165"], ["19", "24"], ["20", "184"], ["22", "184"], ["25", "184"], ["25", "184"], ["32", "184"], ["30", "184"], ["30", "184"], ["35", "184"], ["37", "184"], ["35", "184"], ["35", "184"], ["40", "184"], ["40", "184"], ["40", "184"], ["44", "184"], ["44", "184"], ["51", "184"], ["54", "184"], ["54", "184"], ["54", "184"], ["80", "184"], ["85", "184"], ["88", "184"], ["88", "184"], ["177", "184"], ["177", "184"], ["177", "184"], ["94", "184"], ["98", "184"], ["103", "184"], ["103", "184"], ["137", "184"], ["140", "184"], ["140", "184"], ["140", "184"], ["91", "184"], ["148", "184"], ["151", "184"], ["151", "184"], ["143", "184"], ["167", "184"], ["165", "184"], ["164", "184"], ["164", "184"], ["162", "184"], ["161", "184"], ["161", "184"], ["159", "184"], ["157", "184"], ["157", "184"], ["154", "184"], ["107", "184"], ["113", "184"], ["116", "184"], ["116", "184"], ["116", "184"], ["130", "184"], ["130", "184"], ["130", "184"], ["121", "184"], ["62", "184"], ["70", "184"], ["69", "184"], ["68", "184"], ["68", "184"], ["66", "184"], ["62", "184"], ["62", "184"], ["59", "184"], ["130", "184"], ["167", "184"], ["94", "184"], ["100", "184"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["19", "44"], ["19", "80"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "85"], ["80", "177"], ["157", "177"], ["19", "177"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["19", "42"], ["51", "54"], ["59", "54"], ["19", "54"], ["40", "54"], ["74", "59"], ["19", "59"], ["19", "62"], ["68", "62"], ["68", "62"], ["85", "88"], ["91", "88"], ["19", "88"], ["19", "91"], ["88", "91"], ["88", "94"], ["19", "94"], ["100", "98"], ["19", "137"], ["19", "66"], ["68", "66"], ["68", "66"], ["19", "100"], ["98", "103"], ["109", "103"], ["19", "103"], ["109", "107"], ["137", "140"], ["143", "140"], ["19", "140"], ["35", "140"], ["151", "143"], ["19", "143"], ["69", "68"], ["69", "68"], ["19", "68"], ["19", "113"], ["19", "148"], ["19", "69"], ["40", "69"], ["103", "109"], ["19", "109"], ["113", "116"], ["121", "116"], ["19", "116"], ["107", "116"], ["116", "121"], ["19", "121"], ["107", "125"], ["107", "125"], ["109", "125"], ["148", "151"], ["154", "151"], ["19", "151"], ["140", "151"], ["167", "151"], ["151", "154"], ["19", "154"], ["19", "157"], ["161", "157"], ["161", "157"], ["19", "70"], ["40", "70"], ["19", "130"], ["125", "130"], ["133", "130"], ["19", "133"], ["19", "159"], ["161", "159"], ["161", "159"], ["54", "74"], ["19", "74"], ["80", "161"], ["157", "161"], ["19", "161"], ["164", "161"], ["164", "161"], ["68", "161"], ["80", "162"], ["157", "162"], ["19", "162"], ["164", "162"], ["164", "162"], ["19", "164"], ["167", "164"], ["167", "164"], ["167", "164"], ["167", "164"], ["167", "164"], ["40", "164"], ["19", "165"], ["167", "165"], ["167", "165"], ["167", "165"], ["167", "165"], ["167", "165"], ["19", "167"], ["151", "167"], ["37", "167"], ["54", "68"], ["54", "56"], ["54", "69"], ["54", "67"], ["54", "74"], ["54", "59"], ["54", "54"], ["54", "58"], ["54", "70"], ["54", "66"], ["54", "72"], ["54", "71"], ["54", "63"], ["54", "62"], ["88", "94"], ["88", "98"], ["88", "103"], ["88", "91"], ["88", "137"], ["88", "100"], ["88", "88"], ["88", "140"], ["103", "107"], ["103", "120"], ["103", "113"], ["103", "103"], ["103", "118"], ["103", "116"], ["103", "109"], ["140", "151"], ["140", "148"], ["140", "140"], ["140", "143"], ["116", "120"], ["116", "121"], ["116", "130"], ["116", "118"], ["116", "127"], ["116", "116"], ["116", "125"], ["116", "133"], ["151", "167"], ["151", "154"], ["151", "161"], ["151", "151"], ["151", "162"], ["151", "173"], ["151", "164"], ["151", "160"], ["151", "166"], ["151", "157"], ["151", "159"], ["151", "165"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String X: java.lang.String)<SUB>4</SUB>>", "31": "<(IDENTIFIER,X,String X = next())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,next())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int N = X.length())<SUB>5</SUB>>", "37": "<(length,X.length())<SUB>5</SUB>>", "39": "<(LOCAL,int[] P: int[])<SUB>7</SUB>>", "41": "<(IDENTIFIER,P,int[] P = new int[701])<SUB>7</SUB>>", "43": "<(LITERAL,701,new int[701])<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.indexAccess,P[0])<SUB>8</SUB>>", "47": "<(LITERAL,0,P[0] = 1)<SUB>8</SUB>>", "49": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; P.length); ++i),for (int i = 1; Some(i &lt; P.length); ++i))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "53": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i &lt; P.length)<SUB>9</SUB>>", "57": "<(IDENTIFIER,P,i &lt; P.length)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,P[i])<SUB>10</SUB>>", "65": "<(IDENTIFIER,i,P[i] = (int) ((long) P[i - 1] * 10 % REM))<SUB>10</SUB>>", "67": "<(TYPE_REF,int,int)<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.multiplication,(long) P[i - 1] * 10)<SUB>10</SUB>>", "71": "<(TYPE_REF,long,long)<SUB>10</SUB>>", "73": "<(IDENTIFIER,P,(long) P[i - 1])<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "77": "<(LITERAL,10,(long) P[i - 1] * 10)<SUB>10</SUB>>", "79": "<(LOCAL,int ans: int)<SUB>13</SUB>>", "81": "<(IDENTIFIER,ans,int ans = 0)<SUB>13</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int d = 1; Some(d &lt;= 9); ++d),for (int d = 1; Some(d &lt;= 9); ++d))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.assignment,int d = 1)<SUB>14</SUB>>", "87": "<(LITERAL,1,int d = 1)<SUB>14</SUB>>", "89": "<(IDENTIFIER,d,d &lt;= 9)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.preIncrement,++d)<SUB>14</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "95": "<(IDENTIFIER,dig,dig = d)<SUB>15</SUB>>", "97": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>17</SUB>>", "99": "<(IDENTIFIER,$iterLocal0,)<SUB>17</SUB>>", "101": "<(IDENTIFIER,dp,&lt;empty&gt;)<SUB>17</SUB>>", "103": "<(hasNext,&lt;empty&gt;)<SUB>17</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>17</SUB>>", "109": "<(next,&lt;empty&gt;)<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)>", "113": "<(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>18</SUB>>", "115": "<(LITERAL,0,int $idx0 = 0)<SUB>18</SUB>>", "117": "<(IDENTIFIER,$idx0,$idx0 &lt; array2.length)>", "119": "<(IDENTIFIER,array2,$idx0 &lt; array2.length)>", "121": "<(&lt;operator&gt;.postIncrement,$idx0++)<SUB>18</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>18</SUB>>", "129": "<(IDENTIFIER,$idx0,&lt;empty&gt;)>", "131": "<(IDENTIFIER,Arrays,fill(array1, -1))<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.minus,-1)<SUB>19</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int c = 1; Some(c &lt;= N); ++c),for (int c = 1; Some(c &lt;= N); ++c))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.assignment,int c = 1)<SUB>23</SUB>>", "139": "<(LITERAL,1,int c = 1)<SUB>23</SUB>>", "141": "<(IDENTIFIER,c,c &lt;= N)<SUB>23</SUB>>", "143": "<(&lt;operator&gt;.preIncrement,++c)<SUB>23</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "147": "<(LOCAL,int k: int)<SUB>24</SUB>>", "149": "<(IDENTIFIER,k,int k = 0)<SUB>24</SUB>>", "151": "<(&lt;operator&gt;.lessThan,k &lt; c)<SUB>24</SUB>>", "153": "<(IDENTIFIER,c,k &lt; c)<SUB>24</SUB>>", "155": "<(IDENTIFIER,k,++k)<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.assignment,ans = (int) ((ans + (long) f(0, c, false, X) * P[k]) % REM))<SUB>25</SUB>>", "159": "<(&lt;operator&gt;.cast,(int) ((ans + (long) f(0, c, false, X) * P[k]) % REM))<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.modulo,(ans + (long) f(0, c, false, X) * P[k]) % REM)<SUB>25</SUB>>", "163": "<(IDENTIFIER,ans,ans + (long) f(0, c, false, X) * P[k])<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.cast,(long) f(0, c, false, X))<SUB>25</SUB>>", "167": "<(f,f(0, c, false, X))<SUB>25</SUB>>", "169": "<(LITERAL,0,f(0, c, false, X))<SUB>25</SUB>>", "171": "<(LITERAL,false,f(0, c, false, X))<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,P[k])<SUB>25</SUB>>", "175": "<(IDENTIFIER,k,(long) f(0, c, false, X) * P[k])<SUB>25</SUB>>", "177": "<(println,System.out.println(ans))<SUB>29</SUB>>", "179": "<(IDENTIFIER,System,System.out.println(ans))<SUB>29</SUB>>", "181": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>29</SUB>>", "183": "<(MODIFIER,STATIC)>"}}