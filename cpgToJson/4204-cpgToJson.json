{"edges": [["21", "22"], ["21", "23"], ["21", "254"], ["21", "255"], ["21", "256"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "58"], ["23", "98"], ["23", "99"], ["23", "107"], ["23", "108"], ["23", "112"], ["23", "119"], ["23", "230"], ["23", "250"], ["23", "252"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["58", "63"], ["58", "66"], ["58", "68"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["66", "67"], ["68", "69"], ["68", "70"], ["68", "76"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "75"], ["73", "74"], ["76", "77"], ["76", "78"], ["76", "81"], ["76", "84"], ["76", "86"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["86", "87"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["103", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["112", "113"], ["112", "118"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["119", "126"], ["119", "129"], ["119", "131"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "133"], ["131", "138"], ["131", "139"], ["131", "148"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "156"], ["148", "158"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["156", "157"], ["158", "159"], ["158", "169"], ["159", "160"], ["159", "167"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["167", "168"], ["169", "170"], ["169", "171"], ["169", "176"], ["169", "179"], ["169", "181"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["181", "192"], ["181", "211"], ["182", "183"], ["182", "190"], ["183", "184"], ["183", "189"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["190", "191"], ["192", "193"], ["192", "200"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "210"], ["201", "202"], ["201", "205"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["211", "212"], ["211", "219"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["216", "217"], ["216", "218"], ["219", "220"], ["219", "229"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["230", "231"], ["230", "232"], ["230", "235"], ["230", "238"], ["230", "240"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["240", "241"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["250", "251"], ["252", "253"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "50"], ["46", "55"], ["53", "60"], ["99", "110"], ["108", "115"], ["112", "123"], ["250", "252"], ["252", "256"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["55", "53"], ["60", "63"], ["63", "73"], ["63", "102"], ["66", "63"], ["101", "99"], ["110", "108"], ["113", "112"], ["121", "126"], ["126", "135"], ["126", "232"], ["129", "126"], ["232", "235"], ["235", "246"], ["235", "250"], ["238", "235"], ["29", "36"], ["32", "27"], ["44", "42"], ["50", "48"], ["70", "78"], ["102", "103"], ["103", "101"], ["115", "113"], ["123", "121"], ["133", "144"], ["139", "150"], ["241", "238"], ["31", "29"], ["34", "32"], ["72", "70"], ["78", "81"], ["81", "89"], ["81", "66"], ["84", "81"], ["135", "133"], ["141", "139"], ["150", "153"], ["153", "162"], ["153", "129"], ["156", "153"], ["243", "241"], ["36", "34"], ["73", "72"], ["87", "84"], ["142", "141"], ["244", "243"], ["88", "95"], ["93", "87"], ["144", "142"], ["160", "156"], ["160", "173"], ["171", "176"], ["176", "185"], ["176", "156"], ["179", "176"], ["246", "244"], ["89", "88"], ["95", "93"], ["161", "160"], ["173", "171"], ["192", "216"], ["211", "179"], ["162", "161"], ["183", "179"], ["183", "197"], ["193", "202"], ["200", "192"], ["212", "221"], ["219", "211"], ["184", "183"], ["195", "193"], ["201", "200"], ["214", "212"], ["220", "219"], ["185", "184"], ["197", "195"], ["202", "206"], ["205", "201"], ["216", "214"], ["221", "225"], ["224", "220"], ["206", "205"], ["225", "224"], ["21", "26"], ["22", "256"], ["24", "256"], ["29", "256"], ["32", "256"], ["32", "256"], ["32", "256"], ["27", "256"], ["38", "256"], ["41", "256"], ["41", "256"], ["48", "256"], ["48", "256"], ["46", "256"], ["46", "256"], ["53", "256"], ["53", "256"], ["53", "256"], ["101", "256"], ["99", "256"], ["99", "256"], ["108", "256"], ["108", "256"], ["108", "256"], ["112", "256"], ["112", "256"], ["123", "256"], ["121", "256"], ["121", "256"], ["126", "256"], ["232", "256"], ["235", "256"], ["235", "256"], ["235", "256"], ["250", "256"], ["252", "256"], ["252", "256"], ["243", "256"], ["241", "256"], ["241", "256"], ["238", "256"], ["135", "256"], ["133", "256"], ["133", "256"], ["139", "256"], ["142", "256"], ["142", "256"], ["141", "256"], ["139", "256"], ["139", "256"], ["150", "256"], ["153", "256"], ["153", "256"], ["129", "256"], ["161", "256"], ["160", "256"], ["160", "256"], ["171", "256"], ["171", "256"], ["176", "256"], ["176", "256"], ["184", "256"], ["183", "256"], ["183", "256"], ["195", "256"], ["192", "256"], ["201", "256"], ["200", "256"], ["192", "256"], ["192", "256"], ["214", "256"], ["211", "256"], ["220", "256"], ["220", "256"], ["219", "256"], ["219", "256"], ["211", "256"], ["211", "256"], ["179", "256"], ["156", "256"], ["70", "256"], ["72", "256"], ["70", "256"], ["70", "256"], ["78", "256"], ["81", "256"], ["81", "256"], ["66", "256"], ["87", "256"], ["93", "256"], ["87", "256"], ["87", "256"], ["84", "256"], ["103", "256"], ["93", "256"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["55", "53"], ["21", "99"], ["103", "99"], ["103", "99"], ["103", "99"], ["110", "108"], ["21", "112"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "60"], ["123", "121"], ["123", "121"], ["21", "232"], ["50", "250"], ["73", "250"], ["21", "250"], ["41", "252"], ["241", "252"], ["21", "252"], ["21", "29"], ["21", "37"], ["21", "48"], ["50", "48"], ["46", "55"], ["21", "55"], ["60", "63"], ["66", "63"], ["21", "63"], ["55", "63"], ["81", "63"], ["63", "66"], ["21", "66"], ["72", "70"], ["72", "70"], ["21", "101"], ["103", "101"], ["103", "101"], ["103", "101"], ["99", "110"], ["21", "110"], ["121", "126"], ["129", "126"], ["21", "126"], ["135", "129"], ["162", "129"], ["185", "129"], ["214", "129"], ["21", "129"], ["135", "133"], ["135", "133"], ["141", "139"], ["141", "139"], ["232", "235"], ["238", "235"], ["21", "235"], ["103", "235"], ["153", "235"], ["246", "238"], ["21", "238"], ["29", "32"], ["21", "32"], ["27", "50"], ["21", "50"], ["21", "78"], ["21", "103"], ["63", "103"], ["110", "115"], ["21", "115"], ["115", "123"], ["21", "123"], ["21", "150"], ["41", "241"], ["21", "241"], ["108", "241"], ["73", "72"], ["21", "72"], ["78", "81"], ["84", "81"], ["21", "81"], ["63", "81"], ["81", "84"], ["21", "84"], ["93", "87"], ["93", "87"], ["48", "135"], ["21", "135"], ["126", "135"], ["142", "141"], ["142", "141"], ["21", "141"], ["150", "153"], ["156", "153"], ["21", "153"], ["103", "153"], ["176", "153"], ["162", "156"], ["216", "156"], ["21", "156"], ["108", "243"], ["21", "243"], ["50", "73"], ["21", "73"], ["144", "142"], ["21", "142"], ["144", "142"], ["162", "171"], ["21", "171"], ["21", "93"], ["70", "93"], ["133", "144"], ["21", "144"], ["161", "160"], ["161", "160"], ["21", "160"], ["171", "176"], ["179", "176"], ["21", "176"], ["153", "176"], ["185", "179"], ["197", "179"], ["21", "179"], ["200", "192"], ["200", "192"], ["219", "211"], ["219", "211"], ["21", "246"], ["235", "246"], ["162", "161"], ["162", "161"], ["21", "161"], ["162", "173"], ["21", "173"], ["108", "192"], ["108", "211"], ["135", "162"], ["185", "162"], ["214", "162"], ["21", "162"], ["153", "162"], ["184", "183"], ["184", "183"], ["21", "183"], ["201", "200"], ["201", "200"], ["139", "200"], ["219", "200"], ["21", "200"], ["220", "219"], ["220", "219"], ["200", "219"], ["21", "219"], ["185", "184"], ["185", "184"], ["21", "184"], ["185", "195"], ["21", "195"], ["197", "195"], ["197", "195"], ["108", "201"], ["220", "201"], ["195", "214"], ["21", "214"], ["216", "214"], ["216", "214"], ["108", "220"], ["201", "220"], ["162", "185"], ["214", "185"], ["21", "185"], ["176", "185"], ["21", "197"], ["185", "197"], ["21", "216"], ["162", "216"], ["63", "73"], ["63", "81"], ["63", "70"], ["63", "66"], ["63", "72"], ["63", "63"], ["63", "78"], ["126", "150"], ["126", "153"], ["126", "144"], ["126", "129"], ["126", "139"], ["126", "141"], ["126", "142"], ["126", "126"], ["126", "135"], ["126", "133"], ["235", "244"], ["235", "243"], ["235", "238"], ["235", "246"], ["235", "235"], ["235", "241"], ["81", "81"], ["81", "84"], ["81", "95"], ["81", "87"], ["81", "93"], ["81", "88"], ["81", "89"], ["153", "161"], ["153", "162"], ["153", "153"], ["153", "160"], ["153", "156"], ["160", "173"], ["160", "171"], ["160", "176"], ["176", "179"], ["176", "185"], ["176", "184"], ["176", "183"], ["176", "176"], ["183", "214"], ["183", "192"], ["183", "225"], ["183", "197"], ["183", "206"], ["183", "195"], ["183", "212"], ["183", "221"], ["183", "224"], ["183", "202"], ["183", "201"], ["183", "205"], ["183", "193"], ["183", "200"], ["183", "220"], ["183", "211"], ["183", "216"], ["183", "219"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY kek = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,kek,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY outkek = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,outkek,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,int N: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,N,int N = parseInt(kek.readLine()))<SUB>6</SUB>>", "49": "<(IDENTIFIER,Integer,parseInt(kek.readLine()))<SUB>6</SUB>>", "51": "<(IDENTIFIER,kek,readLine())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,double[][] lake = new double[N][N])<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.alloc,new double[N][N])>", "57": "<(IDENTIFIER,N,new double[N][N])<SUB>7</SUB>>", "59": "<(LOCAL,int i: int)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "65": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "67": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "69": "<(LOCAL,String[] input: java.lang.String[])<SUB>10</SUB>>", "71": "<(IDENTIFIER,input,String[] input = split(&quot; &quot;))<SUB>10</SUB>>", "73": "<(readLine,readLine())<SUB>10</SUB>>", "75": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>10</SUB>>", "77": "<(LOCAL,int j: int)<SUB>11</SUB>>", "79": "<(IDENTIFIER,j,int j = 0)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>11</SUB>>", "83": "<(IDENTIFIER,N,j &lt; N)<SUB>11</SUB>>", "85": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.assignment,lake[i][j] = Double.parseDouble(input[j]))<SUB>12</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,lake[i])<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,lake[i][j] = Double.parseDouble(input[j]))<SUB>12</SUB>>", "93": "<(parseDouble,Double.parseDouble(input[j]))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,input[j])<SUB>12</SUB>>", "97": "<(IDENTIFIER,j,Double.parseDouble(input[j]))<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,int pow = (int) Math.pow(2, N))<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.cast,(int) Math.pow(2, N))<SUB>16</SUB>>", "103": "<(pow,Math.pow(2, N))<SUB>16</SUB>>", "105": "<(LITERAL,2,Math.pow(2, N))<SUB>16</SUB>>", "107": "<(LOCAL,double[] res: double[])<SUB>17</SUB>>", "109": "<(IDENTIFIER,res,double[] res = new double[pow])<SUB>17</SUB>>", "111": "<(IDENTIFIER,pow,new double[pow])<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,res[pow - 1])<SUB>18</SUB>>", "115": "<(&lt;operator&gt;.subtraction,pow - 1)<SUB>18</SUB>>", "117": "<(LITERAL,1,pow - 1)<SUB>18</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = pow - 1; Some(i &gt;= 0); i--),for (int i = pow - 1; Some(i &gt;= 0); i--))<SUB>20</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = pow - 1)<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.subtraction,pow - 1)<SUB>20</SUB>>", "125": "<(LITERAL,1,pow - 1)<SUB>20</SUB>>", "127": "<(IDENTIFIER,i,i &gt;= 0)<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.postDecrement,i--)<SUB>20</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "133": "<(&lt;operator&gt;.assignment,int ones = Integer.bitCount(i))<SUB>21</SUB>>", "135": "<(bitCount,Integer.bitCount(i))<SUB>21</SUB>>", "137": "<(IDENTIFIER,i,Integer.bitCount(i))<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.assignment,int possibleCombos = ones * (ones - 1) / 2)<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.division,ones * (ones - 1) / 2)<SUB>22</SUB>>", "143": "<(IDENTIFIER,ones,ones * (ones - 1))<SUB>22</SUB>>", "145": "<(IDENTIFIER,ones,ones - 1)<SUB>22</SUB>>", "147": "<(LITERAL,2,ones * (ones - 1) / 2)<SUB>22</SUB>>", "149": "<(LOCAL,int j: int)<SUB>24</SUB>>", "151": "<(IDENTIFIER,j,int j = 0)<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.lessThan,j &lt; N)<SUB>24</SUB>>", "155": "<(IDENTIFIER,N,j &lt; N)<SUB>24</SUB>>", "157": "<(IDENTIFIER,j,j++)<SUB>24</SUB>>", "159": "<(CONTROL_STRUCTURE,if ((i &gt;&gt; j) % 2 == 0),if ((i &gt;&gt; j) % 2 == 0))<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.modulo,(i &gt;&gt; j) % 2)<SUB>25</SUB>>", "163": "<(IDENTIFIER,i,i &gt;&gt; j)<SUB>25</SUB>>", "165": "<(LITERAL,2,(i &gt;&gt; j) % 2)<SUB>25</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "169": "<(CONTROL_STRUCTURE,for (int k = j + 1; Some(k &lt; N); k++),for (int k = j + 1; Some(k &lt; N); k++))<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.assignment,int k = j + 1)<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.addition,j + 1)<SUB>28</SUB>>", "175": "<(LITERAL,1,j + 1)<SUB>28</SUB>>", "177": "<(IDENTIFIER,k,k &lt; N)<SUB>28</SUB>>", "179": "<(&lt;operator&gt;.postIncrement,k++)<SUB>28</SUB>>", "181": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.equals,(i &gt;&gt; k) % 2 == 0)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; k)<SUB>29</SUB>>", "187": "<(IDENTIFIER,k,i &gt;&gt; k)<SUB>29</SUB>>", "189": "<(LITERAL,0,(i &gt;&gt; k) % 2 == 0)<SUB>29</SUB>>", "191": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>30</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,res[i ^ (1 &lt;&lt; k)])<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.xor,i ^ (1 &lt;&lt; k))<SUB>32</SUB>>", "197": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>32</SUB>>", "199": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>32</SUB>>", "201": "<(&lt;operator&gt;.multiplication,res[i] * lake[j][k])<SUB>32</SUB>>", "203": "<(IDENTIFIER,res,res[i] * lake[j][k])<SUB>32</SUB>>", "205": "<(&lt;operator&gt;.indexAccess,lake[j][k])<SUB>32</SUB>>", "207": "<(IDENTIFIER,lake,res[i] * lake[j][k])<SUB>32</SUB>>", "209": "<(IDENTIFIER,k,res[i] * lake[j][k])<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.assignmentPlus,res[i ^ (1 &lt;&lt; j)] += res[i] * lake[k][j] / possibleCombos)<SUB>33</SUB>>", "213": "<(IDENTIFIER,res,res[i ^ (1 &lt;&lt; j)] += res[i] * lake[k][j] / possibleCombos)<SUB>33</SUB>>", "215": "<(IDENTIFIER,i,i ^ (1 &lt;&lt; j))<SUB>33</SUB>>", "217": "<(LITERAL,1,1 &lt;&lt; j)<SUB>33</SUB>>", "219": "<(&lt;operator&gt;.division,res[i] * lake[k][j] / possibleCombos)<SUB>33</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,res[i])<SUB>33</SUB>>", "223": "<(IDENTIFIER,i,res[i] * lake[k][j])<SUB>33</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,lake[k])<SUB>33</SUB>>", "227": "<(IDENTIFIER,k,res[i] * lake[k][j])<SUB>33</SUB>>", "229": "<(IDENTIFIER,possibleCombos,res[i] * lake[k][j] / possibleCombos)<SUB>33</SUB>>", "231": "<(LOCAL,int i: int)<SUB>39</SUB>>", "233": "<(IDENTIFIER,i,int i = 0)<SUB>39</SUB>>", "235": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>39</SUB>>", "237": "<(IDENTIFIER,N,i &lt; N)<SUB>39</SUB>>", "239": "<(IDENTIFIER,i,i++)<SUB>39</SUB>>", "241": "<(print,print(res[1 &lt;&lt; i] + &quot; &quot;))<SUB>40</SUB>>", "243": "<(&lt;operator&gt;.addition,res[1 &lt;&lt; i] + &quot; &quot;)<SUB>40</SUB>>", "245": "<(IDENTIFIER,res,res[1 &lt;&lt; i] + &quot; &quot;)<SUB>40</SUB>>", "247": "<(LITERAL,1,1 &lt;&lt; i)<SUB>40</SUB>>", "249": "<(LITERAL,&quot; &quot;,res[1 &lt;&lt; i] + &quot; &quot;)<SUB>40</SUB>>", "251": "<(IDENTIFIER,kek,close())<SUB>43</SUB>>", "253": "<(IDENTIFIER,outkek,close())<SUB>44</SUB>>", "255": "<(MODIFIER,STATIC)>"}}