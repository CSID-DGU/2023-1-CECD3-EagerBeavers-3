{"edges": [["21", "23"], ["21", "341"], ["21", "342"], ["21", "343"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "53"], ["23", "72"], ["23", "133"], ["23", "134"], ["23", "143"], ["23", "171"], ["23", "172"], ["23", "178"], ["23", "187"], ["23", "314"], ["23", "339"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "59"], ["54", "55"], ["54", "58"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "65"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "102"], ["94", "109"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "108"], ["103", "104"], ["103", "107"], ["104", "105"], ["104", "106"], ["109", "110"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "124"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "140"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["153", "155"], ["153", "158"], ["153", "161"], ["153", "163"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["161", "162"], ["163", "164"], ["163", "169"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["172", "173"], ["172", "174"], ["174", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["187", "188"], ["187", "189"], ["187", "196"], ["187", "199"], ["187", "201"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "195"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "198"], ["199", "200"], ["201", "202"], ["201", "203"], ["201", "206"], ["201", "226"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "214"], ["206", "216"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["214", "215"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["224", "225"], ["226", "227"], ["226", "228"], ["226", "231"], ["226", "234"], ["226", "236"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["236", "237"], ["236", "246"], ["237", "238"], ["237", "245"], ["238", "239"], ["238", "244"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["246", "247"], ["246", "248"], ["246", "251"], ["246", "254"], ["246", "256"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["256", "266"], ["256", "290"], ["257", "258"], ["257", "265"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["266", "267"], ["266", "275"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["271", "272"], ["272", "273"], ["272", "274"], ["275", "276"], ["275", "285"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["285", "286"], ["285", "289"], ["286", "287"], ["286", "288"], ["290", "291"], ["290", "299"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["295", "296"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "309"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["309", "310"], ["309", "313"], ["310", "311"], ["310", "312"], ["314", "315"], ["314", "316"], ["314", "319"], ["314", "322"], ["314", "324"], ["316", "317"], ["316", "318"], ["319", "320"], ["319", "321"], ["322", "323"], ["324", "325"], ["324", "328"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "338"], ["329", "330"], ["329", "331"], ["329", "332"], ["332", "333"], ["333", "334"], ["333", "335"], ["335", "336"], ["335", "337"], ["339", "340"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "47"], ["44", "55"], ["53", "74"], ["134", "145"], ["172", "182"], ["178", "192"], ["339", "343"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["54", "61"], ["59", "53"], ["74", "77"], ["77", "85"], ["77", "137"], ["80", "77"], ["136", "134"], ["145", "148"], ["148", "155"], ["148", "175"], ["151", "148"], ["174", "172"], ["179", "178"], ["189", "196"], ["196", "203"], ["196", "316"], ["199", "196"], ["316", "319"], ["319", "327"], ["319", "339"], ["322", "319"], ["324", "322"], ["30", "28"], ["37", "35"], ["47", "50"], ["50", "46"], ["55", "54"], ["60", "67"], ["65", "59"], ["137", "140"], ["140", "136"], ["155", "158"], ["158", "165"], ["158", "151"], ["161", "158"], ["163", "161"], ["175", "174"], ["181", "179"], ["191", "189"], ["203", "208"], ["325", "335"], ["328", "324"], ["61", "60"], ["66", "65"], ["85", "88"], ["88", "96"], ["88", "80"], ["91", "88"], ["164", "169"], ["169", "163"], ["182", "181"], ["192", "191"], ["208", "211"], ["211", "220"], ["211", "228"], ["214", "211"], ["228", "231"], ["231", "240"], ["231", "199"], ["234", "231"], ["327", "325"], ["329", "328"], ["67", "66"], ["165", "164"], ["217", "224"], ["217", "214"], ["224", "214"], ["332", "329"], ["95", "104"], ["95", "112"], ["102", "91"], ["218", "217"], ["238", "234"], ["238", "248"], ["248", "251"], ["251", "260"], ["251", "234"], ["254", "251"], ["333", "332"], ["96", "95"], ["96", "99"], ["99", "95"], ["103", "102"], ["110", "91"], ["220", "218"], ["239", "238"], ["266", "296"], ["290", "254"], ["335", "333"], ["104", "103"], ["111", "120"], ["116", "110"], ["240", "239"], ["258", "254"], ["258", "272"], ["267", "277"], ["275", "266"], ["291", "301"], ["299", "290"], ["112", "111"], ["117", "127"], ["124", "116"], ["259", "258"], ["269", "267"], ["276", "286"], ["285", "275"], ["293", "291"], ["300", "310"], ["309", "299"], ["118", "117"], ["125", "130"], ["130", "124"], ["260", "259"], ["271", "269"], ["277", "281"], ["280", "276"], ["286", "285"], ["295", "293"], ["301", "305"], ["304", "300"], ["310", "309"], ["120", "118"], ["127", "125"], ["272", "271"], ["281", "280"], ["296", "295"], ["305", "304"], ["21", "26"], ["22", "343"], ["24", "343"], ["27", "343"], ["27", "343"], ["31", "343"], ["34", "343"], ["34", "343"], ["41", "343"], ["39", "343"], ["39", "343"], ["44", "343"], ["44", "343"], ["53", "343"], ["59", "343"], ["65", "343"], ["59", "343"], ["53", "343"], ["53", "343"], ["74", "343"], ["77", "343"], ["134", "343"], ["136", "343"], ["134", "343"], ["134", "343"], ["172", "343"], ["174", "343"], ["172", "343"], ["172", "343"], ["178", "343"], ["178", "343"], ["191", "343"], ["189", "343"], ["189", "343"], ["196", "343"], ["196", "343"], ["316", "343"], ["319", "343"], ["319", "343"], ["319", "343"], ["339", "343"], ["339", "343"], ["324", "343"], ["332", "343"], ["329", "343"], ["328", "343"], ["324", "343"], ["324", "343"], ["322", "343"], ["203", "343"], ["203", "343"], ["199", "343"], ["239", "343"], ["238", "343"], ["238", "343"], ["248", "343"], ["251", "343"], ["251", "343"], ["259", "343"], ["258", "343"], ["258", "343"], ["271", "343"], ["269", "343"], ["266", "343"], ["276", "343"], ["275", "343"], ["266", "343"], ["266", "343"], ["295", "343"], ["293", "343"], ["290", "343"], ["300", "343"], ["300", "343"], ["299", "343"], ["299", "343"], ["290", "343"], ["290", "343"], ["254", "343"], ["234", "343"], ["218", "343"], ["217", "343"], ["217", "343"], ["224", "343"], ["224", "343"], ["214", "343"], ["155", "343"], ["158", "343"], ["158", "343"], ["151", "343"], ["163", "343"], ["169", "343"], ["163", "343"], ["163", "343"], ["161", "343"], ["85", "343"], ["88", "343"], ["88", "343"], ["80", "343"], ["95", "343"], ["95", "343"], ["95", "343"], ["110", "343"], ["116", "343"], ["116", "343"], ["110", "343"], ["110", "343"], ["102", "343"], ["102", "343"], ["91", "343"], ["329", "343"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["59", "53"], ["65", "53"], ["21", "53"], ["136", "134"], ["174", "172"], ["21", "178"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "74"], ["21", "145"], ["191", "189"], ["191", "189"], ["21", "316"], ["34", "339"], ["21", "339"], ["27", "41"], ["21", "41"], ["39", "46"], ["21", "46"], ["65", "59"], ["21", "59"], ["74", "77"], ["80", "77"], ["21", "77"], ["39", "77"], ["88", "80"], ["21", "80"], ["77", "136"], ["21", "136"], ["145", "148"], ["151", "148"], ["21", "148"], ["158", "148"], ["77", "148"], ["148", "151"], ["21", "151"], ["21", "155"], ["169", "163"], ["175", "174"], ["175", "174"], ["189", "196"], ["199", "196"], ["21", "196"], ["196", "199"], ["239", "199"], ["259", "199"], ["293", "199"], ["218", "199"], ["21", "199"], ["21", "203"], ["316", "319"], ["322", "319"], ["21", "319"], ["192", "319"], ["231", "319"], ["335", "322"], ["21", "322"], ["34", "324"], ["329", "324"], ["329", "324"], ["329", "324"], ["21", "324"], ["39", "47"], ["21", "47"], ["21", "50"], ["39", "50"], ["21", "65"], ["21", "85"], ["77", "137"], ["21", "137"], ["21", "140"], ["77", "140"], ["155", "158"], ["161", "158"], ["21", "158"], ["148", "158"], ["158", "161"], ["21", "161"], ["21", "175"], ["182", "181"], ["182", "181"], ["21", "181"], ["192", "191"], ["192", "191"], ["21", "191"], ["21", "208"], ["21", "228"], ["329", "328"], ["329", "328"], ["329", "328"], ["21", "328"], ["85", "88"], ["91", "88"], ["21", "88"], ["77", "88"], ["99", "88"], ["127", "88"], ["96", "91"], ["99", "91"], ["130", "91"], ["21", "91"], ["41", "169"], ["21", "169"], ["21", "182"], ["148", "182"], ["21", "192"], ["182", "192"], ["208", "211"], ["214", "211"], ["21", "211"], ["192", "211"], ["231", "211"], ["220", "214"], ["21", "214"], ["228", "231"], ["234", "231"], ["21", "231"], ["211", "231"], ["240", "234"], ["251", "234"], ["21", "234"], ["21", "329"], ["332", "329"], ["21", "102"], ["218", "217"], ["218", "217"], ["21", "217"], ["203", "224"], ["21", "224"], ["21", "248"], ["172", "332"], ["96", "95"], ["96", "95"], ["99", "95"], ["99", "95"], ["196", "218"], ["21", "218"], ["220", "218"], ["220", "218"], ["239", "238"], ["239", "238"], ["21", "238"], ["248", "251"], ["254", "251"], ["21", "251"], ["240", "251"], ["272", "251"], ["260", "254"], ["296", "254"], ["21", "254"], ["275", "266"], ["275", "266"], ["299", "290"], ["299", "290"], ["88", "96"], ["21", "96"], ["96", "99"], ["21", "99"], ["88", "99"], ["21", "220"], ["211", "220"], ["240", "239"], ["240", "239"], ["196", "239"], ["259", "239"], ["293", "239"], ["218", "239"], ["21", "239"], ["172", "266"], ["172", "290"], ["21", "335"], ["319", "335"], ["21", "240"], ["231", "240"], ["259", "258"], ["259", "258"], ["21", "258"], ["276", "275"], ["276", "275"], ["299", "275"], ["300", "299"], ["300", "299"], ["275", "299"], ["260", "259"], ["260", "259"], ["239", "259"], ["293", "259"], ["21", "259"], ["259", "269"], ["21", "269"], ["271", "269"], ["172", "276"], ["300", "276"], ["269", "293"], ["21", "293"], ["295", "293"], ["172", "300"], ["276", "300"], ["163", "300"], ["96", "130"], ["99", "130"], ["21", "130"], ["21", "260"], ["251", "260"], ["272", "271"], ["272", "271"], ["296", "295"], ["296", "295"], ["88", "120"], ["99", "120"], ["21", "120"], ["120", "127"], ["21", "127"], ["21", "272"], ["251", "272"], ["21", "296"], ["260", "296"], ["77", "80"], ["77", "88"], ["77", "77"], ["77", "85"], ["148", "148"], ["148", "158"], ["148", "151"], ["148", "155"], ["196", "196"], ["196", "228"], ["196", "208"], ["196", "199"], ["196", "231"], ["196", "211"], ["196", "203"], ["319", "322"], ["319", "324"], ["319", "329"], ["319", "328"], ["319", "335"], ["319", "319"], ["319", "332"], ["319", "325"], ["319", "333"], ["319", "327"], ["158", "161"], ["158", "163"], ["158", "158"], ["158", "169"], ["158", "164"], ["158", "165"], ["88", "95"], ["88", "88"], ["88", "96"], ["88", "91"], ["211", "214"], ["211", "217"], ["211", "220"], ["211", "211"], ["211", "218"], ["231", "240"], ["231", "238"], ["231", "231"], ["231", "239"], ["231", "234"], ["217", "224"], ["95", "120"], ["95", "102"], ["95", "104"], ["95", "112"], ["95", "118"], ["95", "127"], ["95", "116"], ["95", "117"], ["95", "103"], ["95", "130"], ["95", "111"], ["95", "110"], ["95", "124"], ["95", "125"], ["238", "251"], ["238", "248"], ["251", "258"], ["251", "260"], ["251", "254"], ["251", "259"], ["251", "251"], ["96", "99"], ["258", "272"], ["258", "290"], ["258", "300"], ["258", "281"], ["258", "276"], ["258", "296"], ["258", "304"], ["258", "310"], ["258", "305"], ["258", "269"], ["258", "275"], ["258", "291"], ["258", "309"], ["258", "301"], ["258", "285"], ["258", "293"], ["258", "267"], ["258", "280"], ["258", "286"], ["258", "295"], ["258", "299"], ["258", "277"], ["258", "271"], ["258", "266"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new FastScanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FastScanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new FastScanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,double[][] ncr: double[][])<SUB>6</SUB>>", "45": "<(IDENTIFIER,ncr,double[][] ncr = new double[n + 1][n + 1])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.addition,n + 1)<SUB>6</SUB>>", "49": "<(LITERAL,1,n + 1)<SUB>6</SUB>>", "51": "<(IDENTIFIER,n,n + 1)<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,ncr[1][0] = ncr[0][1] = ncr[1][1] = 1.0)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,ncr[1])<SUB>7</SUB>>", "57": "<(LITERAL,1,ncr[1][0] = ncr[0][1] = ncr[1][1] = 1.0)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,ncr[0][1] = ncr[1][1] = 1.0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,ncr[0])<SUB>7</SUB>>", "63": "<(LITERAL,0,ncr[0][1] = ncr[1][1] = 1.0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,ncr[1][1] = 1.0)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,ncr[1])<SUB>7</SUB>>", "69": "<(LITERAL,1,ncr[1][1] = 1.0)<SUB>7</SUB>>", "71": "<(LITERAL,1.0,ncr[1][1] = 1.0)<SUB>7</SUB>>", "73": "<(LOCAL,int i: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,i,int i = 2)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>8</SUB>>", "79": "<(IDENTIFIER,n,i &lt;= n)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= i); j++),for (int j = 0; Some(j &lt;= i); j++))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "87": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "89": "<(IDENTIFIER,j,j &lt;= i)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.logicalOr,j == 0 || j == i)<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,j == 0)<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.equals,j == i)<SUB>10</SUB>>", "101": "<(IDENTIFIER,i,j == i)<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,ncr[i][j])<SUB>10</SUB>>", "105": "<(IDENTIFIER,ncr,ncr[i][j] = 1.0)<SUB>10</SUB>>", "107": "<(IDENTIFIER,j,ncr[i][j] = 1.0)<SUB>10</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,ncr[i][j])<SUB>11</SUB>>", "113": "<(IDENTIFIER,ncr,ncr[i][j] = ncr[i - 1][j] + ncr[i - 1][j - 1])<SUB>11</SUB>>", "115": "<(IDENTIFIER,j,ncr[i][j] = ncr[i - 1][j] + ncr[i - 1][j - 1])<SUB>11</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,ncr[i - 1][j])<SUB>11</SUB>>", "119": "<(IDENTIFIER,ncr,ncr[i - 1][j] + ncr[i - 1][j - 1])<SUB>11</SUB>>", "121": "<(IDENTIFIER,i,i - 1)<SUB>11</SUB>>", "123": "<(IDENTIFIER,j,ncr[i - 1][j] + ncr[i - 1][j - 1])<SUB>11</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,ncr[i - 1])<SUB>11</SUB>>", "127": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>11</SUB>>", "129": "<(LITERAL,1,i - 1)<SUB>11</SUB>>", "131": "<(IDENTIFIER,j,j - 1)<SUB>11</SUB>>", "133": "<(LOCAL,double[][] a: double[][])<SUB>17</SUB>>", "135": "<(IDENTIFIER,a,double[][] a = new double[n + 1][n + 1])<SUB>17</SUB>>", "137": "<(&lt;operator&gt;.addition,n + 1)<SUB>17</SUB>>", "139": "<(LITERAL,1,n + 1)<SUB>17</SUB>>", "141": "<(IDENTIFIER,n,n + 1)<SUB>17</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>18</SUB>>", "145": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "147": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "149": "<(IDENTIFIER,i,i &lt; n)<SUB>18</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "153": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>19</SUB>>", "157": "<(LITERAL,0,int j = 0)<SUB>19</SUB>>", "159": "<(IDENTIFIER,j,j &lt; n)<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.postIncrement,j++)<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.assignment,a[i][j] = nextDouble())<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>20</SUB>>", "167": "<(IDENTIFIER,i,a[i][j] = nextDouble())<SUB>20</SUB>>", "169": "<(nextDouble,nextDouble())<SUB>20</SUB>>", "171": "<(LOCAL,double[] dp: double[])<SUB>22</SUB>>", "173": "<(IDENTIFIER,dp,double[] dp = new double[1 &lt;&lt; 19])<SUB>22</SUB>>", "175": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 19)<SUB>22</SUB>>", "177": "<(LITERAL,19,1 &lt;&lt; 19)<SUB>22</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>23</SUB>>", "183": "<(LITERAL,1,1 &lt;&lt; n)<SUB>23</SUB>>", "185": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>23</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int state = (1 &lt;&lt; n) - 1; Some(state &gt;= 0); state--),for (int state = (1 &lt;&lt; n) - 1; Some(state &gt;= 0); state--))<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.assignment,int state = (1 &lt;&lt; n) - 1)<SUB>24</SUB>>", "191": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>24</SUB>>", "193": "<(LITERAL,1,1 &lt;&lt; n)<SUB>24</SUB>>", "195": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>24</SUB>>", "197": "<(IDENTIFIER,state,state &gt;= 0)<SUB>24</SUB>>", "199": "<(&lt;operator&gt;.postDecrement,state--)<SUB>24</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.assignment,int len = 0)<SUB>25</SUB>>", "205": "<(LITERAL,0,int len = 0)<SUB>25</SUB>>", "207": "<(LOCAL,int i: int)<SUB>26</SUB>>", "209": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "211": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "213": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "215": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "217": "<(&lt;operator&gt;.greaterThan,(state &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>27</SUB>>", "219": "<(IDENTIFIER,state,state &amp; (1 &lt;&lt; i))<SUB>27</SUB>>", "221": "<(LITERAL,1,1 &lt;&lt; i)<SUB>27</SUB>>", "223": "<(LITERAL,0,(state &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>27</SUB>>", "225": "<(IDENTIFIER,len,len++)<SUB>27</SUB>>", "227": "<(LOCAL,int i: int)<SUB>29</SUB>>", "229": "<(IDENTIFIER,i,int i = 0)<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>29</SUB>>", "233": "<(IDENTIFIER,n,i &lt; n)<SUB>29</SUB>>", "235": "<(IDENTIFIER,i,i++)<SUB>29</SUB>>", "237": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; state) == 0),if (((1 &lt;&lt; i) &amp; state) == 0))<SUB>30</SUB>>", "239": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; state)<SUB>30</SUB>>", "241": "<(LITERAL,1,1 &lt;&lt; i)<SUB>30</SUB>>", "243": "<(IDENTIFIER,state,(1 &lt;&lt; i) &amp; state)<SUB>30</SUB>>", "245": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>30</SUB>>", "247": "<(LOCAL,int j: int)<SUB>31</SUB>>", "249": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "251": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>31</SUB>>", "253": "<(IDENTIFIER,i,j &lt; i)<SUB>31</SUB>>", "255": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "257": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; j) &amp; state) == 0),if (((1 &lt;&lt; j) &amp; state) == 0))<SUB>32</SUB>>", "259": "<(&lt;operator&gt;.and,(1 &lt;&lt; j) &amp; state)<SUB>32</SUB>>", "261": "<(LITERAL,1,1 &lt;&lt; j)<SUB>32</SUB>>", "263": "<(IDENTIFIER,state,(1 &lt;&lt; j) &amp; state)<SUB>32</SUB>>", "265": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>32</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[state &amp; (~(1 &lt;&lt; i))])<SUB>33</SUB>>", "269": "<(&lt;operator&gt;.and,state &amp; (~(1 &lt;&lt; i)))<SUB>33</SUB>>", "271": "<(&lt;operator&gt;.not,~(1 &lt;&lt; i))<SUB>33</SUB>>", "273": "<(LITERAL,1,1 &lt;&lt; i)<SUB>33</SUB>>", "275": "<(&lt;operator&gt;.division,dp[state] * a[j][i] / ncr[len][2])<SUB>33</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[state])<SUB>33</SUB>>", "279": "<(IDENTIFIER,state,dp[state] * a[j][i])<SUB>33</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>33</SUB>>", "283": "<(IDENTIFIER,j,dp[state] * a[j][i])<SUB>33</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,ncr[len][2])<SUB>33</SUB>>", "287": "<(IDENTIFIER,ncr,dp[state] * a[j][i] / ncr[len][2])<SUB>33</SUB>>", "289": "<(LITERAL,2,dp[state] * a[j][i] / ncr[len][2])<SUB>33</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,dp[state &amp; (~(1 &lt;&lt; j))])<SUB>34</SUB>>", "293": "<(&lt;operator&gt;.and,state &amp; (~(1 &lt;&lt; j)))<SUB>34</SUB>>", "295": "<(&lt;operator&gt;.not,~(1 &lt;&lt; j))<SUB>34</SUB>>", "297": "<(LITERAL,1,1 &lt;&lt; j)<SUB>34</SUB>>", "299": "<(&lt;operator&gt;.division,dp[state] * a[i][j] / ncr[len][2])<SUB>34</SUB>>", "301": "<(&lt;operator&gt;.indexAccess,dp[state])<SUB>34</SUB>>", "303": "<(IDENTIFIER,state,dp[state] * a[i][j])<SUB>34</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>34</SUB>>", "307": "<(IDENTIFIER,i,dp[state] * a[i][j])<SUB>34</SUB>>", "309": "<(&lt;operator&gt;.indexAccess,ncr[len][2])<SUB>34</SUB>>", "311": "<(IDENTIFIER,ncr,dp[state] * a[i][j] / ncr[len][2])<SUB>34</SUB>>", "313": "<(LITERAL,2,dp[state] * a[i][j] / ncr[len][2])<SUB>34</SUB>>", "315": "<(LOCAL,int i: int)<SUB>41</SUB>>", "317": "<(IDENTIFIER,i,int i = 0)<SUB>41</SUB>>", "319": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>41</SUB>>", "321": "<(IDENTIFIER,n,i &lt; n)<SUB>41</SUB>>", "323": "<(IDENTIFIER,i,i++)<SUB>41</SUB>>", "325": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>42</SUB>>", "327": "<(FIELD_IDENTIFIER,out,out)<SUB>42</SUB>>", "329": "<(format,String.format(&quot;%.6f&quot;, dp[1 &lt;&lt; i]))<SUB>42</SUB>>", "331": "<(LITERAL,&quot;%.6f&quot;,String.format(&quot;%.6f&quot;, dp[1 &lt;&lt; i]))<SUB>42</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; i])<SUB>42</SUB>>", "335": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>42</SUB>>", "337": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>42</SUB>>", "339": "<(close,close())<SUB>43</SUB>>", "341": "<(MODIFIER,PUBLIC)>", "343": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}