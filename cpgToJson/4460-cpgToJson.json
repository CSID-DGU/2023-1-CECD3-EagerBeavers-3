{"edges": [["45", "30"], ["45", "46"], ["45", "427"], ["45", "428"], ["45", "429"], ["46", "4"], ["46", "47"], ["46", "50"], ["46", "6"], ["46", "61"], ["46", "64"], ["46", "27"], ["46", "67"], ["46", "8"], ["46", "73"], ["46", "76"], ["46", "77"], ["46", "422"], ["47", "48"], ["47", "49"], ["50", "3"], ["50", "51"], ["51", "52"], ["51", "55"], ["51", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["61", "62"], ["61", "63"], ["64", "5"], ["64", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["76", "7"], ["77", "78"], ["77", "82"], ["78", "79"], ["78", "81"], ["79", "80"], ["82", "83"], ["82", "86"], ["82", "23"], ["82", "89"], ["82", "13"], ["82", "95"], ["82", "18"], ["82", "101"], ["82", "106"], ["82", "11"], ["82", "124"], ["82", "127"], ["82", "128"], ["82", "140"], ["82", "143"], ["82", "144"], ["82", "149"], ["82", "182"], ["82", "188"], ["82", "189"], ["82", "196"], ["82", "287"], ["82", "288"], ["82", "295"], ["82", "336"], ["82", "407"], ["83", "84"], ["83", "85"], ["86", "9"], ["86", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "20"], ["106", "107"], ["106", "110"], ["106", "113"], ["106", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "122"], ["119", "123"], ["124", "125"], ["124", "126"], ["127", "10"], ["128", "16"], ["128", "129"], ["128", "132"], ["128", "135"], ["128", "137"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["140", "14"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "167"], ["159", "169"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["184", "187"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "204"], ["196", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "216"], ["206", "218"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "229"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "273"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["234", "239"], ["234", "242"], ["234", "244"], ["236", "237"], ["236", "238"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["244", "246"], ["244", "251"], ["244", "258"], ["246", "247"], ["246", "248"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "266"], ["259", "260"], ["259", "265"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "272"], ["269", "270"], ["269", "271"], ["273", "274"], ["273", "279"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["279", "280"], ["279", "281"], ["279", "286"], ["281", "282"], ["281", "285"], ["282", "283"], ["282", "284"], ["288", "289"], ["288", "290"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["295", "300"], ["295", "305"], ["295", "307"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "304"], ["305", "306"], ["307", "308"], ["307", "309"], ["307", "312"], ["307", "315"], ["307", "317"], ["309", "310"], ["309", "311"], ["312", "313"], ["312", "314"], ["315", "316"], ["317", "318"], ["317", "325"], ["318", "319"], ["318", "324"], ["319", "320"], ["319", "321"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "330"], ["327", "328"], ["327", "329"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["336", "337"], ["336", "338"], ["336", "341"], ["336", "344"], ["336", "346"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "343"], ["344", "345"], ["346", "347"], ["346", "348"], ["346", "351"], ["346", "356"], ["346", "358"], ["348", "349"], ["348", "350"], ["351", "352"], ["351", "353"], ["353", "354"], ["353", "355"], ["356", "357"], ["358", "359"], ["358", "360"], ["358", "363"], ["358", "366"], ["358", "373"], ["360", "361"], ["360", "362"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "368"], ["368", "369"], ["368", "372"], ["369", "370"], ["369", "371"], ["373", "374"], ["373", "402"], ["374", "375"], ["374", "380"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "382"], ["380", "387"], ["382", "383"], ["382", "386"], ["383", "384"], ["383", "385"], ["387", "388"], ["387", "395"], ["388", "389"], ["388", "394"], ["389", "390"], ["389", "391"], ["391", "392"], ["391", "393"], ["395", "396"], ["395", "399"], ["396", "397"], ["396", "398"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "406"], ["403", "404"], ["403", "405"], ["407", "408"], ["407", "409"], ["409", "410"], ["409", "421"], ["410", "411"], ["410", "416"], ["411", "412"], ["411", "413"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "420"], ["417", "418"], ["417", "419"], ["422", "423"], ["422", "426"], ["423", "424"], ["423", "425"], ["47", "54"], ["50", "63"], ["61", "65"], ["64", "71"], ["67", "75"], ["73", "76"], ["76", "79"], ["422", "429"], ["49", "47"], ["63", "61"], ["65", "64"], ["69", "67"], ["75", "73"], ["78", "85"], ["78", "425"], ["423", "422"], ["52", "59"], ["55", "50"], ["71", "69"], ["79", "78"], ["83", "87"], ["86", "93"], ["89", "99"], ["95", "103"], ["101", "107"], ["124", "127"], ["127", "129"], ["140", "146"], ["144", "151"], ["182", "193"], ["189", "198"], ["288", "297"], ["407", "79"], ["425", "423"], ["54", "52"], ["57", "55"], ["85", "83"], ["87", "86"], ["91", "89"], ["97", "95"], ["103", "101"], ["107", "110"], ["110", "116"], ["110", "126"], ["113", "110"], ["115", "113"], ["126", "124"], ["129", "132"], ["132", "137"], ["132", "14"], ["135", "132"], ["137", "135"], ["14", "140"], ["146", "144"], ["151", "154"], ["154", "161"], ["154", "184"], ["157", "154"], ["184", "182"], ["191", "189"], ["198", "201"], ["201", "208"], ["201", "292"], ["204", "201"], ["290", "288"], ["297", "302"], ["300", "309"], ["300", "338"], ["305", "302"], ["338", "341"], ["341", "348"], ["341", "413"], ["344", "341"], ["409", "407"], ["59", "57"], ["93", "91"], ["99", "97"], ["116", "119"], ["119", "115"], ["161", "164"], ["164", "171"], ["164", "157"], ["167", "164"], ["169", "167"], ["193", "191"], ["208", "213"], ["211", "221"], ["211", "204"], ["216", "213"], ["292", "290"], ["302", "300"], ["309", "312"], ["312", "321"], ["312", "305"], ["315", "312"], ["348", "353"], ["351", "360"], ["351", "344"], ["356", "353"], ["410", "409"], ["170", "176"], ["175", "169"], ["213", "211"], ["318", "327"], ["318", "315"], ["325", "315"], ["353", "351"], ["360", "363"], ["363", "376"], ["363", "356"], ["366", "363"], ["411", "417"], ["416", "410"], ["171", "170"], ["176", "179"], ["179", "175"], ["221", "224"], ["224", "231"], ["224", "216"], ["227", "224"], ["319", "318"], ["326", "332"], ["331", "325"], ["368", "366"], ["374", "403"], ["413", "411"], ["417", "416"], ["231", "236"], ["273", "227"], ["321", "319"], ["327", "326"], ["332", "331"], ["369", "368"], ["375", "383"], ["380", "374"], ["403", "356"], ["403", "369"], ["236", "239"], ["239", "248"], ["239", "275"], ["242", "239"], ["274", "282"], ["279", "273"], ["376", "375"], ["382", "391"], ["387", "380"], ["246", "252"], ["275", "274"], ["281", "279"], ["383", "382"], ["388", "396"], ["395", "387"], ["248", "246"], ["252", "255"], ["252", "262"], ["255", "262"], ["259", "269"], ["259", "242"], ["266", "242"], ["282", "281"], ["389", "388"], ["396", "399"], ["399", "395"], ["260", "259"], ["268", "266"], ["391", "389"], ["262", "260"], ["269", "268"], ["45", "49"], ["30", "429"], ["47", "429"], ["52", "429"], ["55", "429"], ["55", "429"], ["55", "429"], ["50", "429"], ["61", "429"], ["65", "429"], ["64", "429"], ["64", "429"], ["69", "429"], ["71", "429"], ["69", "429"], ["67", "429"], ["67", "429"], ["73", "429"], ["76", "429"], ["79", "429"], ["78", "429"], ["78", "429"], ["422", "429"], ["422", "429"], ["422", "429"], ["83", "429"], ["87", "429"], ["86", "429"], ["86", "429"], ["89", "429"], ["97", "429"], ["99", "429"], ["97", "429"], ["95", "429"], ["95", "429"], ["101", "429"], ["101", "429"], ["124", "429"], ["127", "429"], ["129", "429"], ["140", "429"], ["140", "429"], ["144", "429"], ["144", "429"], ["144", "429"], ["151", "429"], ["154", "429"], ["154", "429"], ["184", "429"], ["182", "429"], ["182", "429"], ["189", "429"], ["189", "429"], ["288", "429"], ["288", "429"], ["288", "429"], ["297", "429"], ["300", "429"], ["300", "429"], ["338", "429"], ["341", "429"], ["341", "429"], ["413", "429"], ["417", "429"], ["416", "429"], ["409", "429"], ["407", "429"], ["407", "429"], ["348", "429"], ["351", "429"], ["351", "429"], ["344", "429"], ["360", "429"], ["363", "429"], ["363", "429"], ["374", "429"], ["380", "429"], ["387", "429"], ["387", "429"], ["380", "429"], ["374", "429"], ["374", "429"], ["403", "429"], ["403", "429"], ["368", "429"], ["366", "429"], ["366", "429"], ["356", "429"], ["309", "429"], ["312", "429"], ["312", "429"], ["305", "429"], ["319", "429"], ["318", "429"], ["318", "429"], ["325", "429"], ["325", "429"], ["325", "429"], ["315", "429"], ["204", "429"], ["221", "429"], ["224", "429"], ["224", "429"], ["216", "429"], ["231", "429"], ["236", "429"], ["239", "429"], ["239", "429"], ["273", "429"], ["279", "429"], ["279", "429"], ["273", "429"], ["273", "429"], ["227", "429"], ["246", "429"], ["246", "429"], ["252", "429"], ["255", "429"], ["262", "429"], ["260", "429"], ["259", "429"], ["259", "429"], ["266", "429"], ["266", "429"], ["242", "429"], ["161", "429"], ["164", "429"], ["164", "429"], ["157", "429"], ["169", "429"], ["179", "429"], ["169", "429"], ["169", "429"], ["167", "429"], ["137", "429"], ["135", "429"], ["115", "429"], ["119", "429"], ["119", "429"], ["115", "429"], ["115", "429"], ["113", "429"], ["140", "429"], ["45", "30"], ["45", "47"], ["45", "61"], ["69", "67"], ["69", "67"], ["45", "73"], ["47", "50"], ["45", "50"], ["52", "50"], ["55", "50"], ["61", "64"], ["45", "64"], ["65", "64"], ["73", "76"], ["45", "76"], ["76", "422"], ["407", "422"], ["45", "422"], ["45", "52"], ["45", "60"], ["50", "65"], ["45", "65"], ["45", "69"], ["71", "69"], ["79", "78"], ["45", "78"], ["45", "83"], ["91", "89"], ["91", "89"], ["97", "95"], ["97", "95"], ["103", "101"], ["103", "101"], ["45", "124"], ["146", "144"], ["146", "144"], ["184", "182"], ["184", "182"], ["184", "182"], ["191", "189"], ["191", "189"], ["290", "288"], ["290", "288"], ["52", "55"], ["45", "55"], ["64", "71"], ["45", "71"], ["67", "79"], ["45", "79"], ["83", "86"], ["45", "86"], ["87", "86"], ["45", "107"], ["119", "115"], ["119", "115"], ["119", "115"], ["119", "115"], ["124", "127"], ["45", "127"], ["45", "129"], ["45", "140"], ["127", "140"], ["137", "140"], ["45", "151"], ["45", "198"], ["45", "297"], ["45", "338"], ["76", "407"], ["45", "407"], ["65", "87"], ["119", "87"], ["45", "87"], ["69", "91"], ["97", "91"], ["45", "91"], ["93", "91"], ["91", "97"], ["45", "97"], ["99", "97"], ["89", "103"], ["45", "103"], ["95", "103"], ["107", "110"], ["113", "110"], ["45", "110"], ["103", "110"], ["110", "113"], ["45", "113"], ["129", "132"], ["135", "132"], ["45", "132"], ["103", "132"], ["119", "132"], ["137", "135"], ["45", "135"], ["127", "137"], ["45", "137"], ["132", "137"], ["110", "146"], ["473", "146"], ["45", "146"], ["132", "146"], ["151", "154"], ["157", "154"], ["45", "154"], ["146", "154"], ["473", "154"], ["154", "157"], ["45", "157"], ["45", "161"], ["380", "184"], ["279", "184"], ["119", "184"], ["45", "184"], ["146", "184"], ["164", "184"], ["154", "184"], ["473", "184"], ["182", "191"], ["45", "191"], ["193", "191"], ["193", "191"], ["198", "201"], ["204", "201"], ["45", "201"], ["191", "201"], ["201", "204"], ["45", "204"], ["45", "208"], ["201", "290"], ["45", "290"], ["292", "290"], ["292", "290"], ["297", "300"], ["305", "300"], ["45", "300"], ["302", "300"], ["302", "300"], ["300", "305"], ["319", "305"], ["45", "305"], ["45", "309"], ["338", "341"], ["344", "341"], ["45", "341"], ["290", "341"], ["341", "344"], ["391", "344"], ["45", "344"], ["45", "348"], ["45", "409"], ["86", "93"], ["45", "93"], ["93", "99"], ["45", "99"], ["184", "119"], ["380", "119"], ["279", "119"], ["45", "119"], ["103", "119"], ["87", "119"], ["99", "119"], ["161", "164"], ["167", "164"], ["45", "164"], ["146", "164"], ["179", "167"], ["45", "167"], ["45", "193"], ["184", "193"], ["473", "193"], ["208", "211"], ["216", "211"], ["45", "211"], ["213", "211"], ["213", "211"], ["211", "216"], ["260", "216"], ["45", "216"], ["45", "292"], ["193", "292"], ["213", "292"], ["473", "292"], ["45", "302"], ["292", "302"], ["312", "302"], ["473", "302"], ["309", "312"], ["315", "312"], ["45", "312"], ["302", "312"], ["473", "312"], ["321", "315"], ["45", "315"], ["348", "351"], ["356", "351"], ["45", "351"], ["353", "351"], ["353", "351"], ["399", "356"], ["368", "356"], ["45", "356"], ["351", "356"], ["351", "360"], ["45", "360"], ["368", "366"], ["368", "366"], ["45", "213"], ["193", "213"], ["224", "213"], ["473", "213"], ["45", "221"], ["319", "318"], ["319", "318"], ["45", "318"], ["45", "353"], ["302", "353"], ["473", "353"], ["360", "363"], ["366", "363"], ["45", "363"], ["380", "374"], ["380", "374"], ["380", "374"], ["417", "416"], ["417", "416"], ["45", "416"], ["140", "179"], ["45", "179"], ["164", "179"], ["221", "224"], ["227", "224"], ["45", "224"], ["213", "224"], ["239", "224"], ["473", "224"], ["224", "227"], ["45", "227"], ["45", "231"], ["279", "273"], ["279", "273"], ["279", "273"], ["300", "319"], ["45", "319"], ["321", "319"], ["321", "319"], ["369", "368"], ["369", "368"], ["399", "368"], ["45", "368"], ["341", "413"], ["45", "413"], ["45", "417"], ["302", "417"], ["353", "417"], ["473", "417"], ["45", "236"], ["45", "321"], ["312", "321"], ["403", "369"], ["45", "369"], ["184", "380"], ["279", "380"], ["45", "380"], ["374", "380"], ["399", "403"], ["45", "403"], ["236", "239"], ["242", "239"], ["45", "239"], ["224", "239"], ["252", "239"], ["473", "239"], ["45", "242"], ["239", "242"], ["239", "246"], ["45", "246"], ["224", "246"], ["184", "279"], ["45", "279"], ["273", "279"], ["231", "279"], ["266", "279"], ["252", "255"], ["473", "255"], ["45", "255"], ["239", "248"], ["45", "248"], ["224", "248"], ["246", "252"], ["45", "252"], ["239", "252"], ["473", "252"], ["252", "255"], ["260", "259"], ["260", "259"], ["45", "259"], ["231", "266"], ["45", "266"], ["368", "399"], ["45", "399"], ["351", "399"], ["363", "399"], ["211", "260"], ["45", "260"], ["262", "260"], ["262", "260"], ["341", "391"], ["45", "391"], ["45", "262"], ["252", "262"], ["255", "262"], ["78", "154"], ["78", "146"], ["78", "292"], ["78", "290"], ["78", "95"], ["78", "338"], ["78", "129"], ["78", "300"], ["78", "93"], ["78", "302"], ["78", "184"], ["78", "14"], ["78", "288"], ["78", "182"], ["78", "127"], ["78", "416"], ["78", "201"], ["78", "86"], ["78", "140"], ["78", "410"], ["78", "297"], ["78", "107"], ["78", "413"], ["78", "85"], ["78", "103"], ["78", "132"], ["78", "151"], ["78", "198"], ["78", "189"], ["78", "341"], ["78", "411"], ["78", "87"], ["78", "144"], ["78", "97"], ["78", "91"], ["78", "417"], ["78", "191"], ["78", "101"], ["78", "79"], ["78", "409"], ["78", "89"], ["78", "99"], ["78", "193"], ["78", "126"], ["78", "83"], ["78", "110"], ["78", "407"], ["78", "124"], ["78", "78"], ["110", "116"], ["110", "115"], ["110", "113"], ["110", "119"], ["110", "110"], ["132", "135"], ["132", "132"], ["132", "137"], ["154", "154"], ["154", "161"], ["154", "164"], ["154", "157"], ["201", "213"], ["201", "204"], ["201", "208"], ["201", "201"], ["201", "211"], ["300", "300"], ["300", "302"], ["300", "305"], ["300", "309"], ["300", "312"], ["341", "348"], ["341", "351"], ["341", "341"], ["341", "353"], ["341", "344"], ["164", "167"], ["164", "170"], ["164", "176"], ["164", "169"], ["164", "179"], ["164", "164"], ["164", "171"], ["164", "175"], ["211", "213"], ["211", "224"], ["211", "216"], ["211", "221"], ["211", "211"], ["312", "315"], ["312", "321"], ["312", "319"], ["312", "318"], ["312", "312"], ["351", "356"], ["351", "360"], ["351", "351"], ["351", "353"], ["351", "363"], ["318", "326"], ["318", "332"], ["318", "325"], ["318", "327"], ["318", "331"], ["363", "376"], ["363", "383"], ["363", "403"], ["363", "396"], ["363", "389"], ["363", "382"], ["363", "374"], ["363", "380"], ["363", "388"], ["363", "395"], ["363", "375"], ["363", "387"], ["363", "399"], ["363", "391"], ["224", "281"], ["224", "224"], ["224", "274"], ["224", "236"], ["224", "227"], ["224", "282"], ["224", "273"], ["224", "279"], ["224", "275"], ["224", "231"], ["224", "239"], ["403", "368"], ["403", "366"], ["403", "369"], ["403", "363"], ["239", "262"], ["239", "242"], ["239", "260"], ["239", "259"], ["239", "246"], ["239", "239"], ["239", "252"], ["239", "248"], ["252", "255"], ["259", "268"], ["259", "269"], ["259", "266"]], "features": {"45": "<(METHOD,main)<SUB>1</SUB>>", "46": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "47": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "49": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "52": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "54": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "56": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "58": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "60": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "61": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "63": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "66": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "67": "<(&lt;operator&gt;.assignment,int T = parseInt(st.nextToken()))<SUB>5</SUB>>", "69": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "71": "<(nextToken,nextToken())<SUB>5</SUB>>", "8": "<(LOCAL,StringBuilder sb: java.lang.StringBuilder)<SUB>6</SUB>>", "74": "<(IDENTIFIER,sb,StringBuilder sb = new StringBuilder())<SUB>6</SUB>>", "76": "<(&lt;init&gt;,new StringBuilder())<SUB>6</SUB>>", "77": "<(CONTROL_STRUCTURE,while (T-- &gt; 0),while (T-- &gt; 0))<SUB>7</SUB>>", "79": "<(&lt;operator&gt;.postDecrement,T--)<SUB>7</SUB>>", "81": "<(LITERAL,0,T-- &gt; 0)<SUB>7</SUB>>", "83": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(infile.readLine()))<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>9</SUB>>", "9": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>9</SUB>>", "88": "<(IDENTIFIER,infile,readLine())<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.assignment,int N = parseInt(st.nextToken()))<SUB>10</SUB>>", "91": "<(parseInt,parseInt(st.nextToken()))<SUB>10</SUB>>", "93": "<(nextToken,nextToken())<SUB>10</SUB>>", "13": "<(LOCAL,int M: int)<SUB>11</SUB>>", "96": "<(IDENTIFIER,M,int M = parseInt(st.nextToken()))<SUB>11</SUB>>", "98": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>11</SUB>>", "100": "<(IDENTIFIER,st,nextToken())<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.assignment,int[][] grid = new int[N][M])<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.alloc,new int[N][M])>", "105": "<(IDENTIFIER,M,new int[N][M])<SUB>12</SUB>>", "20": "<(LOCAL,int r: int)<SUB>13</SUB>>", "108": "<(IDENTIFIER,r,int r = 0)<SUB>13</SUB>>", "110": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>13</SUB>>", "112": "<(IDENTIFIER,N,r &lt; N)<SUB>13</SUB>>", "114": "<(IDENTIFIER,r,r++)<SUB>13</SUB>>", "116": "<(&lt;operator&gt;.indexAccess,grid[r])<SUB>14</SUB>>", "118": "<(IDENTIFIER,r,grid[r] = readArr(M, infile, st))<SUB>14</SUB>>", "120": "<(IDENTIFIER,this,readArr(M, infile, st))<SUB>14</SUB>>", "122": "<(IDENTIFIER,infile,readArr(M, infile, st))<SUB>14</SUB>>", "11": "<(LOCAL,ArrayList&lt;Integer&gt; ls: ANY)<SUB>15</SUB>>", "125": "<(IDENTIFIER,ls,ANY ls = new ArrayList&lt;Integer&gt;())<SUB>15</SUB>>", "127": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>15</SUB>>", "128": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; M); i++),for (int i = 0; Some(i &lt; M); i++))<SUB>16</SUB>>", "129": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "131": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "133": "<(IDENTIFIER,i,i &lt; M)<SUB>16</SUB>>", "135": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "137": "<(add,add(i))<SUB>17</SUB>>", "139": "<(IDENTIFIER,i,add(i))<SUB>17</SUB>>", "141": "<(IDENTIFIER,Collections,sort(ls, &lt;lambda&gt;))<SUB>18</SUB>>", "14": "<(METHOD_REF,Main.lambda$0:&lt;unresolvedSignature&gt;(2),sort(ls, &lt;lambda&gt;))>", "144": "<(&lt;operator&gt;.assignment,int[][] newgrid = new int[N][M])<SUB>28</SUB>>", "146": "<(&lt;operator&gt;.alloc,new int[N][M])>", "148": "<(IDENTIFIER,M,new int[N][M])<SUB>28</SUB>>", "150": "<(LOCAL,int r: int)<SUB>29</SUB>>", "152": "<(IDENTIFIER,r,int r = 0)<SUB>29</SUB>>", "154": "<(&lt;operator&gt;.lessThan,r &lt; N)<SUB>29</SUB>>", "156": "<(IDENTIFIER,N,r &lt; N)<SUB>29</SUB>>", "158": "<(IDENTIFIER,r,r++)<SUB>29</SUB>>", "160": "<(LOCAL,int c: int)<SUB>30</SUB>>", "162": "<(IDENTIFIER,c,int c = 0)<SUB>30</SUB>>", "164": "<(&lt;operator&gt;.lessThan,c &lt; M)<SUB>30</SUB>>", "166": "<(IDENTIFIER,M,c &lt; M)<SUB>30</SUB>>", "168": "<(IDENTIFIER,c,c++)<SUB>30</SUB>>", "170": "<(&lt;operator&gt;.indexAccess,newgrid[r][c])<SUB>31</SUB>>", "172": "<(IDENTIFIER,newgrid,newgrid[r][c] = grid[r][ls.get(c)])<SUB>31</SUB>>", "174": "<(IDENTIFIER,c,newgrid[r][c] = grid[r][ls.get(c)])<SUB>31</SUB>>", "176": "<(&lt;operator&gt;.indexAccess,grid[r])<SUB>31</SUB>>", "178": "<(IDENTIFIER,r,newgrid[r][c] = grid[r][ls.get(c)])<SUB>31</SUB>>", "180": "<(IDENTIFIER,ls,get(c))<SUB>31</SUB>>", "182": "<(&lt;operator&gt;.assignment,M = min(M, N))<SUB>32</SUB>>", "184": "<(min,min(M, N))<SUB>32</SUB>>", "186": "<(IDENTIFIER,M,min(M, N))<SUB>32</SUB>>", "188": "<(LOCAL,int[][] sums: int[][])<SUB>33</SUB>>", "190": "<(IDENTIFIER,sums,int[][] sums = new int[M][1 &lt;&lt; N])<SUB>33</SUB>>", "192": "<(IDENTIFIER,M,new int[M][1 &lt;&lt; N])<SUB>33</SUB>>", "194": "<(LITERAL,1,1 &lt;&lt; N)<SUB>33</SUB>>", "196": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; M); i++),for (int i = 1; Some(i &lt; M); i++))<SUB>34</SUB>>", "198": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>34</SUB>>", "200": "<(LITERAL,1,int i = 1)<SUB>34</SUB>>", "202": "<(IDENTIFIER,i,i &lt; M)<SUB>34</SUB>>", "204": "<(&lt;operator&gt;.postIncrement,i++)<SUB>34</SUB>>", "206": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; 1 &lt;&lt; N); mask++),for (int mask = 0; Some(mask &lt; 1 &lt;&lt; N); mask++))<SUB>35</SUB>>", "208": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>35</SUB>>", "210": "<(LITERAL,0,int mask = 0)<SUB>35</SUB>>", "212": "<(IDENTIFIER,mask,mask &lt; 1 &lt;&lt; N)<SUB>35</SUB>>", "214": "<(LITERAL,1,1 &lt;&lt; N)<SUB>35</SUB>>", "216": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>35</SUB>>", "218": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "220": "<(LOCAL,int head: int)<SUB>38</SUB>>", "222": "<(IDENTIFIER,head,int head = 0)<SUB>38</SUB>>", "224": "<(&lt;operator&gt;.lessThan,head &lt; N)<SUB>38</SUB>>", "226": "<(IDENTIFIER,N,head &lt; N)<SUB>38</SUB>>", "228": "<(IDENTIFIER,head,head++)<SUB>38</SUB>>", "230": "<(LOCAL,int temp: int)<SUB>40</SUB>>", "232": "<(IDENTIFIER,temp,int temp = 0)<SUB>40</SUB>>", "234": "<(CONTROL_STRUCTURE,for (int b = 0; Some(b &lt; N); b++),for (int b = 0; Some(b &lt; N); b++))<SUB>41</SUB>>", "236": "<(&lt;operator&gt;.assignment,int b = 0)<SUB>41</SUB>>", "238": "<(LITERAL,0,int b = 0)<SUB>41</SUB>>", "240": "<(IDENTIFIER,b,b &lt; N)<SUB>41</SUB>>", "242": "<(&lt;operator&gt;.postIncrement,b++)<SUB>41</SUB>>", "244": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "246": "<(&lt;operator&gt;.assignment,int nb = b + head)<SUB>43</SUB>>", "248": "<(&lt;operator&gt;.addition,b + head)<SUB>43</SUB>>", "250": "<(IDENTIFIER,head,b + head)<SUB>43</SUB>>", "252": "<(&lt;operator&gt;.greaterEqualsThan,nb &gt;= N)<SUB>44</SUB>>", "254": "<(IDENTIFIER,N,nb &gt;= N)<SUB>44</SUB>>", "256": "<(IDENTIFIER,nb,nb -= N)<SUB>45</SUB>>", "258": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; nb)) &gt; 0),if ((mask &amp; (1 &lt;&lt; nb)) &gt; 0))<SUB>46</SUB>>", "260": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; nb))<SUB>46</SUB>>", "262": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; nb)<SUB>46</SUB>>", "264": "<(IDENTIFIER,nb,1 &lt;&lt; nb)<SUB>46</SUB>>", "266": "<(&lt;operator&gt;.assignmentPlus,temp += newgrid[b][i])<SUB>47</SUB>>", "268": "<(&lt;operator&gt;.indexAccess,newgrid[b][i])<SUB>47</SUB>>", "270": "<(IDENTIFIER,newgrid,temp += newgrid[b][i])<SUB>47</SUB>>", "272": "<(IDENTIFIER,i,temp += newgrid[b][i])<SUB>47</SUB>>", "274": "<(&lt;operator&gt;.indexAccess,sums[i][mask])<SUB>49</SUB>>", "276": "<(IDENTIFIER,sums,sums[i][mask] = max(sums[i][mask], temp))<SUB>49</SUB>>", "278": "<(IDENTIFIER,mask,sums[i][mask] = max(sums[i][mask], temp))<SUB>49</SUB>>", "280": "<(IDENTIFIER,this,max(sums[i][mask], temp))<SUB>49</SUB>>", "282": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>49</SUB>>", "284": "<(IDENTIFIER,i,max(sums[i][mask], temp))<SUB>49</SUB>>", "286": "<(IDENTIFIER,temp,max(sums[i][mask], temp))<SUB>49</SUB>>", "288": "<(&lt;operator&gt;.assignment,int[][] dp = new int[M][1 &lt;&lt; N])<SUB>52</SUB>>", "290": "<(&lt;operator&gt;.alloc,new int[M][1 &lt;&lt; N])>", "292": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>52</SUB>>", "294": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>52</SUB>>", "296": "<(LOCAL,int mask: int)<SUB>53</SUB>>", "298": "<(IDENTIFIER,mask,int mask = 0)<SUB>53</SUB>>", "300": "<(&lt;operator&gt;.lessThan,mask &lt; 1 &lt;&lt; N)<SUB>53</SUB>>", "302": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>53</SUB>>", "304": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>53</SUB>>", "306": "<(IDENTIFIER,mask,mask++)<SUB>53</SUB>>", "308": "<(LOCAL,int b: int)<SUB>54</SUB>>", "310": "<(IDENTIFIER,b,int b = 0)<SUB>54</SUB>>", "312": "<(&lt;operator&gt;.lessThan,b &lt; N)<SUB>54</SUB>>", "314": "<(IDENTIFIER,N,b &lt; N)<SUB>54</SUB>>", "316": "<(IDENTIFIER,b,b++)<SUB>54</SUB>>", "318": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>55</SUB>>", "320": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; b))<SUB>55</SUB>>", "322": "<(LITERAL,1,1 &lt;&lt; b)<SUB>55</SUB>>", "324": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>55</SUB>>", "326": "<(&lt;operator&gt;.indexAccess,dp[0][mask])<SUB>56</SUB>>", "328": "<(IDENTIFIER,dp,dp[0][mask] += newgrid[b][0])<SUB>56</SUB>>", "330": "<(IDENTIFIER,mask,dp[0][mask] += newgrid[b][0])<SUB>56</SUB>>", "332": "<(&lt;operator&gt;.indexAccess,newgrid[b])<SUB>56</SUB>>", "334": "<(IDENTIFIER,b,dp[0][mask] += newgrid[b][0])<SUB>56</SUB>>", "336": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; M); i++),for (int i = 1; Some(i &lt; M); i++))<SUB>57</SUB>>", "338": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>57</SUB>>", "340": "<(LITERAL,1,int i = 1)<SUB>57</SUB>>", "342": "<(IDENTIFIER,i,i &lt; M)<SUB>57</SUB>>", "344": "<(&lt;operator&gt;.postIncrement,i++)<SUB>57</SUB>>", "346": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; 1 &lt;&lt; N); mask++),for (int mask = 0; Some(mask &lt; 1 &lt;&lt; N); mask++))<SUB>58</SUB>>", "348": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>58</SUB>>", "350": "<(LITERAL,0,int mask = 0)<SUB>58</SUB>>", "352": "<(IDENTIFIER,mask,mask &lt; 1 &lt;&lt; N)<SUB>58</SUB>>", "354": "<(LITERAL,1,1 &lt;&lt; N)<SUB>58</SUB>>", "356": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>58</SUB>>", "358": "<(CONTROL_STRUCTURE,for (int pmask = mask; Some(pmask &gt;= 0); pmask = (pmask - 1) &amp; mask),for (int pmask = mask; Some(pmask &gt;= 0); pmask = (pmask - 1) &amp; mask))<SUB>59</SUB>>", "360": "<(&lt;operator&gt;.assignment,int pmask = mask)<SUB>59</SUB>>", "362": "<(IDENTIFIER,mask,int pmask = mask)<SUB>59</SUB>>", "364": "<(IDENTIFIER,pmask,pmask &gt;= 0)<SUB>59</SUB>>", "366": "<(&lt;operator&gt;.assignment,pmask = (pmask - 1) &amp; mask)<SUB>59</SUB>>", "368": "<(&lt;operator&gt;.and,(pmask - 1) &amp; mask)<SUB>59</SUB>>", "370": "<(IDENTIFIER,pmask,pmask - 1)<SUB>59</SUB>>", "372": "<(IDENTIFIER,mask,(pmask - 1) &amp; mask)<SUB>59</SUB>>", "374": "<(&lt;operator&gt;.assignment,dp[i][mask] = max(dp[i][mask], dp[i - 1][pmask] + sums[i][mask - pmask]))<SUB>61</SUB>>", "376": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>61</SUB>>", "378": "<(IDENTIFIER,i,dp[i][mask] = max(dp[i][mask], dp[i - 1][pmask] + sums[i][mask - pmask]))<SUB>61</SUB>>", "380": "<(max,max(dp[i][mask], dp[i - 1][pmask] + sums[i][mask - pmask]))<SUB>61</SUB>>", "382": "<(&lt;operator&gt;.indexAccess,dp[i][mask])<SUB>61</SUB>>", "384": "<(IDENTIFIER,dp,max(dp[i][mask], dp[i - 1][pmask] + sums[i][mask - pmask]))<SUB>61</SUB>>", "386": "<(IDENTIFIER,mask,max(dp[i][mask], dp[i - 1][pmask] + sums[i][mask - pmask]))<SUB>61</SUB>>", "388": "<(&lt;operator&gt;.indexAccess,dp[i - 1][pmask])<SUB>61</SUB>>", "390": "<(IDENTIFIER,dp,dp[i - 1][pmask] + sums[i][mask - pmask])<SUB>61</SUB>>", "392": "<(IDENTIFIER,i,i - 1)<SUB>61</SUB>>", "394": "<(IDENTIFIER,pmask,dp[i - 1][pmask] + sums[i][mask - pmask])<SUB>61</SUB>>", "396": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>61</SUB>>", "398": "<(IDENTIFIER,i,dp[i - 1][pmask] + sums[i][mask - pmask])<SUB>61</SUB>>", "400": "<(IDENTIFIER,mask,mask - pmask)<SUB>61</SUB>>", "402": "<(CONTROL_STRUCTURE,if (pmask == 0),if (pmask == 0))<SUB>62</SUB>>", "404": "<(IDENTIFIER,pmask,pmask == 0)<SUB>62</SUB>>", "406": "<(CONTROL_STRUCTURE,break;,break;)<SUB>63</SUB>>", "408": "<(IDENTIFIER,sb,sb.append(dp[M - 1][(1 &lt;&lt; N) - 1] + &quot;\\n&quot;))<SUB>65</SUB>>", "410": "<(&lt;operator&gt;.indexAccess,dp[M - 1][(1 &lt;&lt; N) - 1])<SUB>65</SUB>>", "412": "<(IDENTIFIER,dp,dp[M - 1][(1 &lt;&lt; N) - 1] + &quot;\\n&quot;)<SUB>65</SUB>>", "414": "<(IDENTIFIER,M,M - 1)<SUB>65</SUB>>", "416": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; N) - 1)<SUB>65</SUB>>", "418": "<(LITERAL,1,1 &lt;&lt; N)<SUB>65</SUB>>", "420": "<(LITERAL,1,(1 &lt;&lt; N) - 1)<SUB>65</SUB>>", "422": "<(print,System.out.print(sb))<SUB>67</SUB>>", "424": "<(IDENTIFIER,System,System.out.print(sb))<SUB>67</SUB>>", "426": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>67</SUB>>", "428": "<(MODIFIER,STATIC)>"}}