{"edges": [["21", "22"], ["21", "23"], ["21", "178"], ["21", "179"], ["21", "180"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "53"], ["23", "54"], ["23", "61"], ["23", "62"], ["23", "69"], ["23", "72"], ["23", "6"], ["23", "75"], ["23", "78"], ["23", "79"], ["23", "80"], ["23", "83"], ["23", "101"], ["23", "173"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "44"], ["42", "43"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["64", "68"], ["66", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "5"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "105"], ["101", "112"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "111"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["112", "113"], ["113", "114"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "122"], ["114", "124"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["124", "125"], ["124", "144"], ["124", "145"], ["124", "148"], ["124", "149"], ["124", "154"], ["124", "166"], ["125", "126"], ["125", "143"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "142"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "161"], ["159", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["24", "31"], ["27", "42"], ["39", "50"], ["46", "58"], ["54", "66"], ["62", "69"], ["69", "72"], ["72", "77"], ["75", "78"], ["78", "80"], ["80", "85"], ["173", "180"], ["26", "24"], ["41", "39"], ["48", "46"], ["56", "54"], ["64", "62"], ["77", "75"], ["85", "88"], ["88", "96"], ["88", "102"], ["91", "88"], ["93", "91"], ["102", "109"], ["102", "116"], ["174", "173"], ["29", "36"], ["32", "27"], ["42", "41"], ["50", "48"], ["58", "56"], ["66", "64"], ["95", "93"], ["106", "111"], ["111", "180"], ["176", "174"], ["31", "29"], ["34", "32"], ["96", "97"], ["97", "95"], ["107", "106"], ["36", "34"], ["109", "107"], ["116", "119"], ["119", "129"], ["119", "176"], ["122", "119"], ["145", "151"], ["149", "155"], ["166", "122"], ["126", "122"], ["126", "145"], ["151", "149"], ["155", "159"], ["155", "169"], ["168", "166"], ["127", "126"], ["127", "138"], ["134", "126"], ["159", "163"], ["161", "155"], ["169", "168"], ["128", "127"], ["136", "134"], ["163", "161"], ["129", "128"], ["137", "136"], ["138", "139"], ["139", "137"], ["21", "26"], ["111", "180"], ["22", "180"], ["24", "180"], ["29", "180"], ["32", "180"], ["32", "180"], ["32", "180"], ["27", "180"], ["39", "180"], ["39", "180"], ["39", "180"], ["48", "180"], ["46", "180"], ["46", "180"], ["56", "180"], ["56", "180"], ["54", "180"], ["54", "180"], ["66", "180"], ["64", "180"], ["62", "180"], ["62", "180"], ["69", "180"], ["69", "180"], ["72", "180"], ["72", "180"], ["75", "180"], ["78", "180"], ["78", "180"], ["80", "180"], ["80", "180"], ["85", "180"], ["88", "180"], ["88", "180"], ["102", "180"], ["102", "180"], ["106", "180"], ["106", "180"], ["106", "180"], ["93", "180"], ["95", "180"], ["93", "180"], ["93", "180"], ["91", "180"], ["72", "180"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["48", "46"], ["56", "54"], ["56", "54"], ["64", "62"], ["64", "62"], ["64", "62"], ["21", "75"], ["21", "80"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["64", "69"], ["21", "69"], ["62", "69"], ["21", "72"], ["69", "72"], ["75", "78"], ["21", "78"], ["21", "85"], ["80", "173"], ["166", "173"], ["21", "173"], ["21", "29"], ["21", "37"], ["42", "41"], ["21", "41"], ["21", "48"], ["39", "48"], ["48", "56"], ["21", "56"], ["39", "56"], ["21", "64"], ["66", "64"], ["46", "64"], ["85", "88"], ["91", "88"], ["21", "88"], ["64", "88"], ["88", "91"], ["21", "91"], ["78", "93"], ["21", "93"], ["72", "93"], ["54", "102"], ["21", "102"], ["21", "111"], ["29", "32"], ["21", "32"], ["27", "42"], ["21", "42"], ["42", "66"], ["21", "66"], ["21", "95"], ["72", "95"], ["88", "106"], ["21", "106"], ["21", "116"], ["116", "119"], ["122", "119"], ["21", "119"], ["88", "119"], ["119", "122"], ["21", "122"], ["21", "145"], ["72", "149"], ["128", "149"], ["168", "166"], ["168", "166"], ["80", "166"], ["21", "166"], ["127", "126"], ["127", "126"], ["134", "126"], ["134", "126"], ["78", "155"], ["134", "155"], ["93", "155"], ["21", "155"], ["149", "155"], ["161", "155"], ["163", "161"], ["163", "161"], ["145", "168"], ["159", "168"], ["21", "168"], ["128", "127"], ["128", "127"], ["21", "127"], ["78", "134"], ["155", "134"], ["93", "134"], ["21", "134"], ["136", "134"], ["136", "134"], ["145", "159"], ["21", "159"], ["145", "169"], ["159", "169"], ["21", "169"], ["72", "128"], ["102", "128"], ["136", "128"], ["163", "128"], ["21", "128"], ["21", "136"], ["72", "136"], ["128", "136"], ["128", "136"], ["155", "163"], ["21", "163"], ["128", "163"], ["136", "163"], ["21", "137"], ["72", "137"], ["128", "137"], ["88", "96"], ["88", "95"], ["88", "97"], ["88", "91"], ["88", "93"], ["88", "88"], ["102", "107"], ["102", "116"], ["102", "119"], ["102", "106"], ["102", "176"], ["102", "173"], ["102", "174"], ["102", "111"], ["102", "109"], ["119", "122"], ["119", "128"], ["119", "119"], ["119", "129"], ["119", "126"], ["119", "127"], ["126", "145"], ["126", "169"], ["126", "166"], ["126", "149"], ["126", "151"], ["126", "168"], ["126", "155"], ["155", "161"], ["155", "163"], ["155", "159"], ["155", "155"], ["127", "136"], ["127", "134"], ["127", "138"], ["127", "137"], ["127", "139"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY c = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,c,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String[] S = split(&quot; &quot;))<SUB>4</SUB>>", "41": "<(split,split(&quot; &quot;))<SUB>4</SUB>>", "43": "<(IDENTIFIER,c,readLine())<SUB>4</SUB>>", "45": "<(LOCAL,int N: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,N,int N = Integer.parseInt(S[0]))<SUB>5</SUB>>", "49": "<(IDENTIFIER,Integer,Integer.parseInt(S[0]))<SUB>5</SUB>>", "51": "<(IDENTIFIER,S,Integer.parseInt(S[0]))<SUB>5</SUB>>", "53": "<(LOCAL,int K: int)<SUB>6</SUB>>", "55": "<(IDENTIFIER,K,int K = Integer.parseInt(S[1]))<SUB>6</SUB>>", "57": "<(IDENTIFIER,Integer,Integer.parseInt(S[1]))<SUB>6</SUB>>", "59": "<(IDENTIFIER,S,Integer.parseInt(S[1]))<SUB>6</SUB>>", "61": "<(LOCAL,int[] A: int[])<SUB>7</SUB>>", "63": "<(IDENTIFIER,A,int[] A = parseArray(c.readLine(), N))<SUB>7</SUB>>", "65": "<(IDENTIFIER,this,parseArray(c.readLine(), N))<SUB>7</SUB>>", "67": "<(IDENTIFIER,c,readLine())<SUB>7</SUB>>", "69": "<(shuffle,shuffle(A))<SUB>8</SUB>>", "71": "<(IDENTIFIER,A,shuffle(A))<SUB>8</SUB>>", "73": "<(IDENTIFIER,Arrays,sort(A))<SUB>9</SUB>>", "6": "<(LOCAL,TreeMap&lt;Long, Long&gt; T: ANY)<SUB>11</SUB>>", "76": "<(IDENTIFIER,T,ANY T = new TreeMap&lt;Long, Long&gt;())<SUB>11</SUB>>", "78": "<(&lt;init&gt;,new TreeMap&lt;Long, Long&gt;())<SUB>11</SUB>>", "79": "<(LOCAL,int ans: int)<SUB>12</SUB>>", "81": "<(IDENTIFIER,ans,int ans = 0)<SUB>12</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "89": "<(IDENTIFIER,i,i &lt; N)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "93": "<(put,put((long) A[i], 1L))<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.cast,(long) A[i])<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>14</SUB>>", "99": "<(IDENTIFIER,i,(long) A[i])<SUB>14</SUB>>", "101": "<(CONTROL_STRUCTURE,if (K == 1),if (K == 1))<SUB>16</SUB>>", "103": "<(IDENTIFIER,K,K == 1)<SUB>16</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "111": "<(RETURN,return;,return;)<SUB>19</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "115": "<(LOCAL,int i: int)<SUB>23</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>23</SUB>>", "121": "<(IDENTIFIER,N,i &lt; N)<SUB>23</SUB>>", "123": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "125": "<(CONTROL_STRUCTURE,if (A[i] % K == 0 &amp;&amp; T.containsKey((long) A[i] / K)),if (A[i] % K == 0 &amp;&amp; T.containsKey((long) A[i] / K)))<SUB>25</SUB>>", "127": "<(&lt;operator&gt;.equals,A[i] % K == 0)<SUB>25</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>25</SUB>>", "131": "<(IDENTIFIER,i,A[i] % K)<SUB>25</SUB>>", "133": "<(LITERAL,0,A[i] % K == 0)<SUB>25</SUB>>", "135": "<(IDENTIFIER,T,containsKey((long) A[i] / K))<SUB>25</SUB>>", "137": "<(&lt;operator&gt;.cast,(long) A[i])<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>25</SUB>>", "141": "<(IDENTIFIER,i,(long) A[i])<SUB>25</SUB>>", "143": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.assignment,int chainSize = 0)<SUB>28</SUB>>", "147": "<(LITERAL,0,int chainSize = 0)<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.assignment,long init = A[i])<SUB>29</SUB>>", "151": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>29</SUB>>", "153": "<(IDENTIFIER,i,long init = A[i])<SUB>29</SUB>>", "155": "<(containsKey,containsKey(init))<SUB>30</SUB>>", "157": "<(IDENTIFIER,init,containsKey(init))<SUB>30</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,chainSize++)<SUB>32</SUB>>", "161": "<(&lt;operator&gt;.assignment,init = init * K)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.multiplication,init * K)<SUB>33</SUB>>", "165": "<(IDENTIFIER,K,init * K)<SUB>33</SUB>>", "167": "<(IDENTIFIER,ans,ans += (chainSize + 1) / 2)<SUB>36</SUB>>", "169": "<(&lt;operator&gt;.addition,chainSize + 1)<SUB>36</SUB>>", "171": "<(LITERAL,1,chainSize + 1)<SUB>36</SUB>>", "173": "<(println,System.out.println(ans))<SUB>39</SUB>>", "175": "<(IDENTIFIER,System,System.out.println(ans))<SUB>39</SUB>>", "177": "<(IDENTIFIER,ans,System.out.println(ans))<SUB>39</SUB>>", "179": "<(MODIFIER,STATIC)>"}}