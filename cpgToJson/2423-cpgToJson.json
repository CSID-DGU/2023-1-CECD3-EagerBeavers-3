{"edges": [["17", "19"], ["17", "191"], ["17", "192"], ["17", "193"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "57"], ["19", "58"], ["19", "62"], ["19", "63"], ["19", "69"], ["19", "86"], ["19", "87"], ["19", "90"], ["19", "122"], ["19", "123"], ["19", "127"], ["19", "128"], ["19", "135"], ["19", "189"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "56"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["46", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["58", "59"], ["58", "60"], ["60", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "95"], ["90", "98"], ["90", "100"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["100", "101"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "120"], ["113", "114"], ["113", "117"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "151"], ["145", "152"], ["145", "156"], ["145", "157"], ["145", "164"], ["145", "180"], ["147", "148"], ["147", "149"], ["149", "150"], ["152", "153"], ["152", "154"], ["154", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["164", "165"], ["164", "176"], ["165", "166"], ["165", "175"], ["166", "167"], ["166", "174"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["176", "177"], ["176", "178"], ["178", "179"], ["180", "181"], ["180", "182"], ["180", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["20", "28"], ["23", "37"], ["35", "43"], ["38", "60"], ["58", "66"], ["63", "71"], ["87", "92"], ["123", "131"], ["128", "137"], ["189", "193"], ["22", "20"], ["37", "35"], ["60", "58"], ["65", "63"], ["71", "74"], ["74", "81"], ["74", "87"], ["77", "74"], ["92", "95"], ["95", "103"], ["95", "125"], ["98", "95"], ["125", "123"], ["130", "128"], ["137", "140"], ["140", "149"], ["140", "189"], ["143", "140"], ["26", "33"], ["29", "23"], ["41", "49"], ["44", "38"], ["66", "65"], ["80", "77"], ["131", "130"], ["147", "154"], ["152", "160"], ["157", "170"], ["28", "26"], ["31", "29"], ["43", "41"], ["81", "84"], ["84", "80"], ["103", "106"], ["106", "114"], ["106", "98"], ["109", "106"], ["149", "147"], ["154", "152"], ["159", "157"], ["165", "181"], ["165", "178"], ["176", "181"], ["181", "182"], ["181", "186"], ["182", "143"], ["33", "31"], ["47", "54"], ["50", "44"], ["160", "159"], ["166", "165"], ["178", "176"], ["186", "143"], ["49", "47"], ["52", "50"], ["113", "120"], ["113", "109"], ["120", "109"], ["167", "166"], ["54", "52"], ["114", "117"], ["117", "113"], ["168", "167"], ["170", "168"], ["17", "22"], ["18", "193"], ["20", "193"], ["23", "193"], ["29", "193"], ["29", "193"], ["29", "193"], ["23", "193"], ["35", "193"], ["44", "193"], ["47", "193"], ["50", "193"], ["50", "193"], ["50", "193"], ["44", "193"], ["38", "193"], ["58", "193"], ["63", "193"], ["65", "193"], ["63", "193"], ["63", "193"], ["87", "193"], ["92", "193"], ["95", "193"], ["95", "193"], ["125", "193"], ["123", "193"], ["123", "193"], ["128", "193"], ["131", "193"], ["130", "193"], ["128", "193"], ["128", "193"], ["137", "193"], ["140", "193"], ["140", "193"], ["140", "193"], ["189", "193"], ["189", "193"], ["147", "193"], ["154", "193"], ["152", "193"], ["152", "193"], ["160", "193"], ["160", "193"], ["159", "193"], ["157", "193"], ["157", "193"], ["168", "193"], ["168", "193"], ["167", "193"], ["166", "193"], ["165", "193"], ["165", "193"], ["176", "193"], ["176", "193"], ["176", "193"], ["186", "193"], ["182", "193"], ["143", "193"], ["103", "193"], ["106", "193"], ["106", "193"], ["98", "193"], ["113", "193"], ["113", "193"], ["113", "193"], ["120", "193"], ["109", "193"], ["80", "193"], ["80", "193"], ["77", "193"], ["17", "18"], ["17", "20"], ["17", "35"], ["60", "58"], ["65", "63"], ["17", "87"], ["125", "123"], ["130", "128"], ["130", "128"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["47", "38"], ["44", "38"], ["17", "71"], ["17", "92"], ["17", "137"], ["38", "189"], ["186", "189"], ["182", "189"], ["17", "189"], ["17", "26"], ["17", "34"], ["17", "41"], ["17", "56"], ["17", "60"], ["58", "65"], ["17", "65"], ["71", "74"], ["77", "74"], ["17", "74"], ["58", "74"], ["74", "77"], ["17", "77"], ["84", "80"], ["92", "95"], ["98", "95"], ["17", "95"], ["74", "95"], ["106", "98"], ["17", "98"], ["60", "125"], ["84", "125"], ["17", "125"], ["131", "130"], ["131", "130"], ["17", "130"], ["137", "140"], ["143", "140"], ["17", "140"], ["123", "140"], ["140", "143"], ["17", "143"], ["149", "147"], ["154", "152"], ["160", "157"], ["160", "157"], ["17", "157"], ["26", "29"], ["17", "29"], ["41", "44"], ["17", "44"], ["47", "44"], ["50", "44"], ["58", "66"], ["17", "66"], ["17", "103"], ["87", "131"], ["120", "131"], ["17", "131"], ["178", "176"], ["17", "181"], ["17", "47"], ["17", "55"], ["60", "84"], ["17", "84"], ["103", "106"], ["109", "106"], ["17", "106"], ["95", "106"], ["106", "109"], ["17", "109"], ["125", "149"], ["154", "149"], ["17", "149"], ["149", "154"], ["17", "154"], ["160", "159"], ["160", "159"], ["17", "159"], ["166", "165"], ["166", "165"], ["17", "165"], ["38", "182"], ["186", "182"], ["17", "182"], ["47", "50"], ["17", "50"], ["152", "160"], ["17", "160"], ["147", "160"], ["167", "166"], ["167", "166"], ["17", "166"], ["128", "178"], ["176", "178"], ["17", "178"], ["38", "186"], ["182", "186"], ["17", "186"], ["63", "113"], ["80", "113"], ["87", "120"], ["17", "120"], ["168", "167"], ["168", "167"], ["17", "167"], ["170", "168"], ["17", "168"], ["170", "168"], ["157", "170"], ["17", "170"], ["74", "77"], ["74", "81"], ["74", "84"], ["74", "74"], ["74", "80"], ["95", "98"], ["95", "103"], ["95", "95"], ["95", "106"], ["140", "160"], ["140", "167"], ["140", "154"], ["140", "166"], ["140", "149"], ["140", "168"], ["140", "170"], ["140", "157"], ["140", "159"], ["140", "181"], ["140", "140"], ["140", "143"], ["140", "152"], ["140", "165"], ["140", "147"], ["106", "113"], ["106", "114"], ["106", "106"], ["106", "117"], ["106", "109"], ["165", "178"], ["165", "176"], ["181", "182"], ["181", "186"], ["113", "120"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "39": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "53": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "55": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "57": "<(LOCAL,int n: int)<SUB>4</SUB>>", "59": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "61": "<(IDENTIFIER,this,nextInt())<SUB>4</SUB>>", "63": "<(&lt;operator&gt;.assignment,int[] a = new int[n + 1])<SUB>5</SUB>>", "65": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "67": "<(IDENTIFIER,n,n + 1)<SUB>5</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>6</SUB>>", "73": "<(LITERAL,1,int i = 1)<SUB>6</SUB>>", "75": "<(IDENTIFIER,i,i &lt;= n)<SUB>6</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>6</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>7</SUB>>", "83": "<(IDENTIFIER,i,a[i] = nextInt())<SUB>7</SUB>>", "85": "<(IDENTIFIER,this,nextInt())<SUB>7</SUB>>", "87": "<(&lt;operator&gt;.assignment,int inv = 0)<SUB>9</SUB>>", "89": "<(LITERAL,0,int inv = 0)<SUB>9</SUB>>", "91": "<(LOCAL,int i: int)<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,int i = 1)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>10</SUB>>", "97": "<(IDENTIFIER,n,i &lt;= n)<SUB>10</SUB>>", "99": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; i); j++),for (int j = 1; Some(j &lt; i); j++))<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>11</SUB>>", "105": "<(LITERAL,1,int j = 1)<SUB>11</SUB>>", "107": "<(IDENTIFIER,j,j &lt; i)<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.greaterThan,a[j] &gt; a[i])<SUB>12</SUB>>", "115": "<(IDENTIFIER,a,a[j] &gt; a[i])<SUB>12</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>12</SUB>>", "119": "<(IDENTIFIER,i,a[j] &gt; a[i])<SUB>12</SUB>>", "121": "<(IDENTIFIER,inv,inv++)<SUB>13</SUB>>", "123": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>16</SUB>>", "125": "<(nextInt,nextInt())<SUB>16</SUB>>", "127": "<(LOCAL,boolean odd: boolean)<SUB>17</SUB>>", "129": "<(IDENTIFIER,odd,boolean odd = inv % 2 == 1)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.modulo,inv % 2)<SUB>17</SUB>>", "133": "<(LITERAL,2,inv % 2)<SUB>17</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "139": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "141": "<(IDENTIFIER,i,i &lt; m)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.assignment,int left = nextInt())<SUB>19</SUB>>", "149": "<(nextInt,nextInt())<SUB>19</SUB>>", "151": "<(LOCAL,int right: int)<SUB>20</SUB>>", "153": "<(IDENTIFIER,right,int right = nextInt())<SUB>20</SUB>>", "155": "<(IDENTIFIER,this,nextInt())<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.assignment,long k = right - left + 1)<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.addition,right - left + 1)<SUB>21</SUB>>", "161": "<(IDENTIFIER,right,right - left)<SUB>21</SUB>>", "163": "<(LITERAL,1,right - left + 1)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.equals,k * (k - 1) / 2 % 2 == 1)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.division,k * (k - 1) / 2)<SUB>22</SUB>>", "169": "<(IDENTIFIER,k,k * (k - 1))<SUB>22</SUB>>", "171": "<(IDENTIFIER,k,k - 1)<SUB>22</SUB>>", "173": "<(LITERAL,2,k * (k - 1) / 2)<SUB>22</SUB>>", "175": "<(LITERAL,1,k * (k - 1) / 2 % 2 == 1)<SUB>22</SUB>>", "177": "<(IDENTIFIER,odd,odd = !odd)<SUB>23</SUB>>", "179": "<(IDENTIFIER,odd,!odd)<SUB>23</SUB>>", "181": "<(IDENTIFIER,odd,if (odd))<SUB>24</SUB>>", "183": "<(IDENTIFIER,pw,println(&quot;odd&quot;))<SUB>25</SUB>>", "185": "<(CONTROL_STRUCTURE,else,else)<SUB>27</SUB>>", "187": "<(IDENTIFIER,pw,println(&quot;even&quot;))<SUB>27</SUB>>", "189": "<(close,close())<SUB>29</SUB>>", "191": "<(MODIFIER,PUBLIC)>", "193": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}