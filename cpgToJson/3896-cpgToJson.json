{"edges": [["21", "23"], ["21", "207"], ["21", "208"], ["21", "209"], ["23", "24"], ["23", "25"], ["23", "31"], ["23", "205"], ["25", "26"], ["25", "27"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "36"], ["32", "33"], ["32", "35"], ["33", "34"], ["36", "37"], ["36", "38"], ["36", "44"], ["36", "45"], ["36", "4"], ["36", "48"], ["36", "51"], ["36", "52"], ["36", "55"], ["36", "56"], ["36", "59"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "3"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "77"], ["69", "86"], ["69", "171"], ["69", "192"], ["69", "202"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "90"], ["86", "94"], ["87", "88"], ["87", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["94", "95"], ["95", "96"], ["95", "101"], ["95", "109"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["102", "108"], ["104", "105"], ["104", "107"], ["105", "106"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "116"], ["110", "6"], ["110", "143"], ["110", "146"], ["110", "147"], ["110", "163"], ["110", "166"], ["110", "168"], ["112", "113"], ["112", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["116", "124"], ["116", "127"], ["116", "129"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "123"], ["121", "122"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "138"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["146", "5"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "182"], ["171", "184"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "181"], ["179", "180"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "187"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["192", "193"], ["192", "194"], ["194", "195"], ["194", "201"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "200"], ["198", "199"], ["202", "203"], ["202", "204"], ["205", "206"], ["25", "33"], ["205", "209"], ["27", "25"], ["32", "42"], ["32", "205"], ["29", "27"], ["33", "32"], ["38", "45"], ["45", "50"], ["48", "51"], ["51", "52"], ["52", "56"], ["56", "61"], ["40", "38"], ["50", "48"], ["61", "64"], ["64", "33"], ["64", "75"], ["67", "64"], ["42", "40"], ["71", "78"], ["192", "202"], ["202", "67"], ["73", "71"], ["78", "82"], ["78", "87"], ["87", "91"], ["87", "98"], ["173", "179"], ["176", "188"], ["176", "198"], ["182", "179"], ["194", "192"], ["75", "73"], ["82", "67"], ["91", "173"], ["178", "176"], ["185", "182"], ["195", "194"], ["96", "105"], ["96", "114"], ["179", "178"], ["187", "185"], ["197", "195"], ["98", "96"], ["102", "173"], ["188", "187"], ["198", "197"], ["104", "102"], ["112", "121"], ["143", "146"], ["146", "149"], ["163", "166"], ["166", "168"], ["168", "173"], ["105", "104"], ["114", "112"], ["118", "124"], ["124", "132"], ["124", "145"], ["127", "124"], ["145", "143"], ["149", "152"], ["152", "160"], ["152", "163"], ["155", "152"], ["120", "118"], ["158", "155"], ["121", "120"], ["131", "139"], ["131", "127"], ["160", "158"], ["132", "135"], ["135", "131"], ["139", "145"], ["21", "29"], ["22", "209"], ["27", "209"], ["29", "209"], ["27", "209"], ["25", "209"], ["25", "209"], ["33", "209"], ["32", "209"], ["32", "209"], ["205", "209"], ["205", "209"], ["40", "209"], ["42", "209"], ["40", "209"], ["38", "209"], ["38", "209"], ["45", "209"], ["45", "209"], ["48", "209"], ["51", "209"], ["52", "209"], ["52", "209"], ["56", "209"], ["56", "209"], ["61", "209"], ["64", "209"], ["64", "209"], ["64", "209"], ["71", "209"], ["73", "209"], ["75", "209"], ["73", "209"], ["71", "209"], ["71", "209"], ["78", "209"], ["87", "209"], ["96", "209"], ["96", "209"], ["112", "209"], ["112", "209"], ["118", "209"], ["124", "209"], ["131", "209"], ["131", "209"], ["131", "209"], ["127", "209"], ["139", "209"], ["143", "209"], ["146", "209"], ["152", "209"], ["152", "209"], ["163", "209"], ["166", "209"], ["168", "209"], ["168", "209"], ["158", "209"], ["158", "209"], ["155", "209"], ["102", "209"], ["91", "209"], ["173", "209"], ["176", "209"], ["176", "209"], ["195", "209"], ["197", "209"], ["195", "209"], ["194", "209"], ["192", "209"], ["192", "209"], ["202", "209"], ["202", "209"], ["202", "209"], ["187", "209"], ["185", "209"], ["185", "209"], ["182", "209"], ["82", "209"], ["67", "209"], ["21", "22"], ["27", "25"], ["27", "25"], ["192", "205"], ["82", "205"], ["21", "205"], ["21", "27"], ["29", "27"], ["33", "32"], ["21", "32"], ["40", "38"], ["40", "38"], ["21", "45"], ["21", "48"], ["21", "56"], ["21", "29"], ["25", "33"], ["21", "33"], ["48", "51"], ["21", "51"], ["51", "52"], ["21", "52"], ["21", "61"], ["27", "40"], ["73", "40"], ["21", "40"], ["42", "40"], ["61", "64"], ["67", "64"], ["21", "64"], ["38", "64"], ["78", "67"], ["21", "67"], ["73", "71"], ["73", "71"], ["87", "202"], ["163", "202"], ["102", "202"], ["21", "202"], ["29", "42"], ["75", "42"], ["21", "42"], ["21", "173"], ["185", "192"], ["82", "192"], ["21", "192"], ["195", "192"], ["195", "192"], ["40", "73"], ["21", "73"], ["75", "73"], ["64", "78"], ["21", "78"], ["71", "87"], ["21", "87"], ["173", "176"], ["182", "176"], ["21", "176"], ["178", "176"], ["178", "176"], ["188", "182"], ["21", "182"], ["195", "194"], ["195", "194"], ["21", "194"], ["42", "75"], ["21", "75"], ["192", "82"], ["21", "82"], ["52", "91"], ["195", "91"], ["21", "91"], ["179", "178"], ["21", "178"], ["192", "185"], ["82", "185"], ["21", "185"], ["188", "185"], ["188", "185"], ["198", "195"], ["21", "195"], ["197", "195"], ["197", "195"], ["87", "96"], ["21", "96"], ["45", "96"], ["202", "96"], ["168", "179"], ["102", "179"], ["91", "179"], ["188", "179"], ["21", "179"], ["188", "187"], ["188", "187"], ["21", "187"], ["198", "197"], ["21", "197"], ["45", "98"], ["202", "98"], ["21", "98"], ["105", "102"], ["21", "102"], ["104", "102"], ["104", "102"], ["96", "102"], ["114", "112"], ["21", "143"], ["163", "168"], ["21", "168"], ["179", "188"], ["21", "188"], ["176", "188"], ["179", "198"], ["21", "198"], ["105", "104"], ["21", "104"], ["120", "118"], ["120", "118"], ["143", "146"], ["21", "146"], ["21", "149"], ["146", "163"], ["158", "163"], ["21", "163"], ["96", "163"], ["135", "163"], ["121", "166"], ["132", "166"], ["160", "166"], ["21", "166"], ["52", "105"], ["195", "105"], ["21", "105"], ["21", "114"], ["118", "124"], ["127", "124"], ["21", "124"], ["132", "127"], ["21", "127"], ["149", "152"], ["155", "152"], ["21", "152"], ["112", "152"], ["139", "152"], ["160", "155"], ["21", "155"], ["121", "120"], ["21", "120"], ["146", "158"], ["21", "158"], ["160", "158"], ["160", "158"], ["52", "121"], ["195", "121"], ["21", "121"], ["132", "131"], ["132", "131"], ["135", "131"], ["135", "131"], ["132", "139"], ["21", "139"], ["121", "160"], ["132", "160"], ["21", "160"], ["152", "160"], ["121", "132"], ["21", "132"], ["124", "132"], ["96", "135"], ["21", "135"], ["32", "64"], ["32", "42"], ["32", "51"], ["32", "52"], ["32", "38"], ["32", "56"], ["32", "40"], ["32", "50"], ["32", "33"], ["32", "61"], ["32", "48"], ["32", "32"], ["32", "45"], ["64", "73"], ["64", "64"], ["64", "75"], ["64", "67"], ["64", "71"], ["64", "78"], ["78", "192"], ["78", "179"], ["78", "178"], ["78", "197"], ["78", "198"], ["78", "87"], ["78", "195"], ["78", "173"], ["78", "194"], ["78", "202"], ["78", "176"], ["78", "82"], ["87", "96"], ["87", "98"], ["87", "91"], ["176", "188"], ["176", "179"], ["176", "178"], ["176", "185"], ["176", "187"], ["176", "182"], ["176", "176"], ["96", "120"], ["96", "145"], ["96", "146"], ["96", "163"], ["96", "102"], ["96", "114"], ["96", "149"], ["96", "104"], ["96", "121"], ["96", "168"], ["96", "112"], ["96", "152"], ["96", "118"], ["96", "166"], ["96", "143"], ["96", "105"], ["96", "124"], ["124", "131"], ["124", "132"], ["124", "135"], ["152", "152"], ["152", "155"], ["152", "158"], ["152", "160"], ["131", "127"], ["131", "139"], ["131", "124"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,int t = parseInt(br.readLine()))<SUB>2</SUB>>", "27": "<(parseInt,parseInt(br.readLine()))<SUB>2</SUB>>", "29": "<(readLine,readLine())<SUB>2</SUB>>", "31": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.postDecrement,t--)<SUB>3</SUB>>", "35": "<(LITERAL,0,t-- &gt; 0)<SUB>3</SUB>>", "37": "<(LOCAL,int n: int)<SUB>4</SUB>>", "39": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "41": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int prev = 1)<SUB>5</SUB>>", "47": "<(LITERAL,1,int prev = 1)<SUB>5</SUB>>", "48": "<(&lt;operator&gt;.assignment,ANY nums = new ArrayList&lt;&gt;())<SUB>6</SUB>>", "50": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "3": "<(IDENTIFIER,nums,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "53": "<(IDENTIFIER,nums,add(1))<SUB>7</SUB>>", "55": "<(LOCAL,String till: java.lang.String)<SUB>8</SUB>>", "57": "<(IDENTIFIER,till,String till = &quot;1&quot;)<SUB>8</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,int ln = parseInt(br.readLine()))<SUB>10</SUB>>", "73": "<(parseInt,parseInt(br.readLine()))<SUB>10</SUB>>", "75": "<(readLine,readLine())<SUB>10</SUB>>", "77": "<(CONTROL_STRUCTURE,if (i == 0),if (i == 0))<SUB>11</SUB>>", "79": "<(IDENTIFIER,i,i == 0)<SUB>11</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "83": "<(IDENTIFIER,bw,write(&quot;1\\n&quot;))<SUB>12</SUB>>", "85": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.equals,ln == 1)<SUB>15</SUB>>", "89": "<(LITERAL,1,ln == 1)<SUB>15</SUB>>", "91": "<(add,add(1))<SUB>16</SUB>>", "93": "<(LITERAL,1,add(1))<SUB>16</SUB>>", "95": "<(CONTROL_STRUCTURE,if (ln == prev + 1),if (ln == prev + 1))<SUB>17</SUB>>", "97": "<(IDENTIFIER,ln,ln == prev + 1)<SUB>17</SUB>>", "99": "<(IDENTIFIER,prev,prev + 1)<SUB>17</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "103": "<(IDENTIFIER,nums,set(nums.size() - 1, ln))<SUB>18</SUB>>", "105": "<(size,size())<SUB>18</SUB>>", "107": "<(LITERAL,1,nums.size() - 1)<SUB>18</SUB>>", "109": "<(CONTROL_STRUCTURE,else,else)<SUB>19</SUB>>", "111": "<(LOCAL,int idx: int)<SUB>20</SUB>>", "113": "<(IDENTIFIER,idx,int idx = -1)<SUB>20</SUB>>", "115": "<(LITERAL,1,-1)<SUB>20</SUB>>", "117": "<(LOCAL,int j: int)<SUB>21</SUB>>", "119": "<(IDENTIFIER,j,int j = nums.size() - 1)<SUB>21</SUB>>", "121": "<(size,size())<SUB>21</SUB>>", "123": "<(LITERAL,1,nums.size() - 1)<SUB>21</SUB>>", "125": "<(IDENTIFIER,j,j &gt;= 0)<SUB>21</SUB>>", "127": "<(&lt;operator&gt;.postDecrement,j--)<SUB>21</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "131": "<(&lt;operator&gt;.equals,nums.get(j) == ln - 1)<SUB>22</SUB>>", "133": "<(IDENTIFIER,nums,get(j))<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.subtraction,ln - 1)<SUB>22</SUB>>", "137": "<(LITERAL,1,ln - 1)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.assignment,idx = j)<SUB>23</SUB>>", "141": "<(IDENTIFIER,j,idx = j)<SUB>23</SUB>>", "6": "<(LOCAL,ArrayList&lt;Integer&gt; temp: ANY)<SUB>27</SUB>>", "144": "<(IDENTIFIER,temp,ANY temp = new ArrayList&lt;&gt;())<SUB>27</SUB>>", "146": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>27</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; idx); j++),for (int j = 0; Some(j &lt; idx); j++))<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "151": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "153": "<(IDENTIFIER,j,j &lt; idx)<SUB>28</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "159": "<(IDENTIFIER,temp,add(nums.get(j)))<SUB>29</SUB>>", "161": "<(IDENTIFIER,nums,get(j))<SUB>29</SUB>>", "163": "<(add,add(ln))<SUB>31</SUB>>", "165": "<(IDENTIFIER,ln,add(ln))<SUB>31</SUB>>", "167": "<(IDENTIFIER,nums,clear())<SUB>32</SUB>>", "169": "<(IDENTIFIER,nums,nums = temp)<SUB>33</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; nums.size() - 1); j++),for (int j = 0; Some(j &lt; nums.size() - 1); j++))<SUB>35</SUB>>", "173": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>35</SUB>>", "175": "<(LITERAL,0,int j = 0)<SUB>35</SUB>>", "177": "<(IDENTIFIER,j,j &lt; nums.size() - 1)<SUB>35</SUB>>", "179": "<(size,size())<SUB>35</SUB>>", "181": "<(LITERAL,1,nums.size() - 1)<SUB>35</SUB>>", "183": "<(IDENTIFIER,j,j++)<SUB>35</SUB>>", "185": "<(write,write(nums.get(j) + &quot;.&quot;))<SUB>36</SUB>>", "187": "<(&lt;operator&gt;.addition,nums.get(j) + &quot;.&quot;)<SUB>36</SUB>>", "189": "<(IDENTIFIER,nums,get(j))<SUB>36</SUB>>", "191": "<(LITERAL,&quot;.&quot;,nums.get(j) + &quot;.&quot;)<SUB>36</SUB>>", "193": "<(IDENTIFIER,bw,write(nums.get(nums.size() - 1) + &quot;\\n&quot;))<SUB>38</SUB>>", "195": "<(get,get(nums.size() - 1))<SUB>38</SUB>>", "197": "<(&lt;operator&gt;.subtraction,nums.size() - 1)<SUB>38</SUB>>", "199": "<(IDENTIFIER,nums,size())<SUB>38</SUB>>", "201": "<(LITERAL,&quot;\\n&quot;,nums.get(nums.size() - 1) + &quot;\\n&quot;)<SUB>38</SUB>>", "203": "<(IDENTIFIER,prev,prev = ln)<SUB>39</SUB>>", "205": "<(flush,flush())<SUB>43</SUB>>", "207": "<(MODIFIER,PUBLIC)>", "209": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}