{"edges": [["21", "23"], ["21", "167"], ["21", "168"], ["21", "169"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "45"], ["23", "48"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "74"], ["23", "75"], ["23", "78"], ["23", "100"], ["23", "101"], ["23", "104"], ["23", "129"], ["23", "154"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["48", "5"], ["48", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "86"], ["78", "88"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "111"], ["104", "114"], ["104", "116"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["116", "126"], ["117", "118"], ["117", "121"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "136"], ["129", "139"], ["129", "141"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["141", "151"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["154", "161"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["24", "31"], ["27", "43"], ["39", "47"], ["45", "49"], ["48", "54"], ["52", "58"], ["75", "80"], ["101", "108"], ["26", "24"], ["41", "39"], ["47", "45"], ["49", "48"], ["54", "52"], ["58", "61"], ["61", "67"], ["61", "75"], ["64", "61"], ["66", "64"], ["80", "83"], ["83", "91"], ["83", "101"], ["86", "83"], ["106", "111"], ["111", "118"], ["111", "133"], ["114", "111"], ["131", "136"], ["136", "155"], ["136", "143"], ["139", "136"], ["155", "159"], ["155", "165"], ["156", "169"], ["29", "36"], ["32", "27"], ["43", "41"], ["67", "72"], ["70", "66"], ["108", "106"], ["117", "126"], ["117", "114"], ["126", "114"], ["133", "131"], ["142", "151"], ["142", "139"], ["151", "139"], ["157", "156"], ["162", "169"], ["31", "29"], ["34", "32"], ["72", "70"], ["90", "96"], ["90", "86"], ["118", "123"], ["121", "117"], ["143", "148"], ["146", "142"], ["159", "157"], ["163", "162"], ["36", "34"], ["91", "90"], ["96", "101"], ["123", "121"], ["148", "146"], ["165", "163"], ["21", "26"], ["22", "169"], ["24", "169"], ["29", "169"], ["32", "169"], ["32", "169"], ["32", "169"], ["27", "169"], ["41", "169"], ["39", "169"], ["39", "169"], ["45", "169"], ["48", "169"], ["49", "169"], ["48", "169"], ["48", "169"], ["52", "169"], ["52", "169"], ["52", "169"], ["75", "169"], ["80", "169"], ["90", "169"], ["90", "169"], ["86", "169"], ["96", "169"], ["101", "169"], ["101", "169"], ["106", "169"], ["106", "169"], ["111", "169"], ["111", "169"], ["133", "169"], ["131", "169"], ["131", "169"], ["136", "169"], ["136", "169"], ["156", "169"], ["142", "169"], ["142", "169"], ["142", "169"], ["151", "169"], ["151", "169"], ["139", "169"], ["117", "169"], ["117", "169"], ["117", "169"], ["126", "169"], ["126", "169"], ["114", "169"], ["66", "169"], ["70", "169"], ["72", "169"], ["70", "169"], ["66", "169"], ["66", "169"], ["64", "169"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["21", "45"], ["54", "52"], ["21", "75"], ["21", "101"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["45", "48"], ["21", "48"], ["49", "48"], ["21", "58"], ["70", "66"], ["70", "66"], ["21", "80"], ["75", "106"], ["96", "106"], ["21", "106"], ["133", "131"], ["133", "131"], ["21", "155"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["43", "49"], ["21", "49"], ["39", "54"], ["21", "54"], ["58", "61"], ["64", "61"], ["21", "61"], ["54", "61"], ["61", "64"], ["21", "64"], ["80", "83"], ["86", "83"], ["21", "83"], ["61", "83"], ["90", "83"], ["83", "86"], ["21", "86"], ["106", "111"], ["114", "111"], ["21", "111"], ["83", "111"], ["90", "111"], ["123", "114"], ["21", "114"], ["21", "126"], ["131", "136"], ["139", "136"], ["21", "136"], ["21", "139"], ["136", "139"], ["21", "151"], ["21", "156"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["41", "70"], ["21", "70"], ["72", "70"], ["75", "108"], ["96", "108"], ["21", "108"], ["52", "117"], ["90", "117"], ["66", "117"], ["21", "133"], ["75", "133"], ["96", "133"], ["52", "142"], ["90", "142"], ["117", "142"], ["66", "142"], ["21", "162"], ["48", "72"], ["21", "72"], ["52", "90"], ["66", "90"], ["83", "90"], ["21", "90"], ["83", "96"], ["21", "96"], ["111", "123"], ["21", "123"], ["136", "148"], ["21", "148"], ["61", "64"], ["61", "66"], ["61", "72"], ["61", "67"], ["61", "61"], ["61", "70"], ["83", "91"], ["83", "90"], ["111", "114"], ["111", "121"], ["111", "123"], ["111", "118"], ["111", "117"], ["111", "111"], ["136", "136"], ["136", "146"], ["136", "142"], ["136", "148"], ["136", "143"], ["136", "139"], ["155", "163"], ["155", "162"], ["155", "157"], ["155", "159"], ["155", "165"], ["155", "156"], ["117", "126"], ["142", "151"], ["90", "96"], ["90", "83"], ["90", "86"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "41": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer st: ANY)<SUB>4</SUB>>", "46": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "48": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>4</SUB>>", "49": "<(readLine,readLine())<SUB>4</SUB>>", "51": "<(LOCAL,int[] a: int[])<SUB>5</SUB>>", "53": "<(IDENTIFIER,a,int[] a = new int[n])<SUB>5</SUB>>", "55": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "57": "<(LOCAL,int i: int)<SUB>6</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>6</SUB>>", "69": "<(IDENTIFIER,i,a[i] = parseInt(st.nextToken()))<SUB>6</SUB>>", "71": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "73": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "75": "<(&lt;operator&gt;.assignment,int ind = 0)<SUB>7</SUB>>", "77": "<(LITERAL,0,int ind = 0)<SUB>7</SUB>>", "79": "<(LOCAL,int i: int)<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "85": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "87": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "89": "<(CONTROL_STRUCTURE,if (a[i] == n),if (a[i] == n))<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>9</SUB>>", "93": "<(IDENTIFIER,i,a[i] == n)<SUB>9</SUB>>", "95": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "97": "<(IDENTIFIER,ind,ind = i)<SUB>10</SUB>>", "99": "<(CONTROL_STRUCTURE,break;,break;)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.assignment,boolean ok = true)<SUB>14</SUB>>", "103": "<(LITERAL,true,boolean ok = true)<SUB>14</SUB>>", "105": "<(LOCAL,int i: int)<SUB>15</SUB>>", "107": "<(IDENTIFIER,i,int i = ind + 1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,ind,ind + 1)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.greaterThan,a[i] &gt; a[i - 1])<SUB>15</SUB>>", "119": "<(IDENTIFIER,a,a[i] &gt; a[i - 1])<SUB>15</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,a[i - 1])<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>15</SUB>>", "125": "<(LITERAL,1,i - 1)<SUB>15</SUB>>", "127": "<(IDENTIFIER,ok,ok = false)<SUB>15</SUB>>", "129": "<(CONTROL_STRUCTURE,for (int i = ind - 1; Some(i &gt;= 0); i--),for (int i = ind - 1; Some(i &gt;= 0); i--))<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.assignment,int i = ind - 1)<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.subtraction,ind - 1)<SUB>16</SUB>>", "135": "<(LITERAL,1,ind - 1)<SUB>16</SUB>>", "137": "<(IDENTIFIER,i,i &gt;= 0)<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.postDecrement,i--)<SUB>16</SUB>>", "141": "<(CONTROL_STRUCTURE,if (a[i] &gt; a[i + 1]),if (a[i] &gt; a[i + 1]))<SUB>16</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>16</SUB>>", "145": "<(IDENTIFIER,i,a[i] &gt; a[i + 1])<SUB>16</SUB>>", "147": "<(IDENTIFIER,a,a[i] &gt; a[i + 1])<SUB>16</SUB>>", "149": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "151": "<(&lt;operator&gt;.assignment,ok = false)<SUB>16</SUB>>", "153": "<(LITERAL,false,ok = false)<SUB>16</SUB>>", "155": "<(IDENTIFIER,ok,if (ok))<SUB>17</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>17</SUB>>", "159": "<(FIELD_IDENTIFIER,out,out)<SUB>17</SUB>>", "161": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "165": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "167": "<(MODIFIER,PUBLIC)>", "169": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}