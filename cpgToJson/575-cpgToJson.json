{"edges": [["21", "22"], ["21", "23"], ["21", "196"], ["21", "197"], ["21", "198"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "42"], ["23", "43"], ["23", "47"], ["23", "48"], ["23", "51"], ["23", "54"], ["23", "56"], ["23", "66"], ["23", "76"], ["23", "86"], ["23", "96"], ["23", "106"], ["23", "116"], ["23", "126"], ["23", "136"], ["23", "137"], ["23", "194"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "59"], ["59", "60"], ["59", "63"], ["59", "65"], ["60", "61"], ["60", "62"], ["63", "64"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["70", "73"], ["70", "74"], ["70", "75"], ["76", "77"], ["76", "78"], ["76", "79"], ["79", "80"], ["79", "83"], ["79", "85"], ["80", "81"], ["80", "82"], ["83", "84"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["90", "93"], ["90", "94"], ["90", "95"], ["96", "97"], ["96", "98"], ["96", "99"], ["99", "100"], ["99", "103"], ["99", "105"], ["100", "101"], ["100", "102"], ["103", "104"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["110", "113"], ["110", "114"], ["110", "115"], ["116", "117"], ["116", "118"], ["116", "119"], ["119", "120"], ["119", "123"], ["119", "125"], ["120", "121"], ["120", "122"], ["123", "124"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["130", "133"], ["130", "134"], ["130", "135"], ["137", "138"], ["137", "142"], ["138", "139"], ["138", "141"], ["139", "140"], ["142", "143"], ["142", "145"], ["142", "146"], ["142", "150"], ["142", "151"], ["142", "160"], ["142", "161"], ["142", "170"], ["143", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "186"], ["170", "189"], ["171", "172"], ["171", "179"], ["172", "173"], ["172", "178"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "188"], ["189", "190"], ["190", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["24", "27"], ["27", "30"], ["28", "35"], ["31", "45"], ["43", "48"], ["48", "53"], ["51", "54"], ["54", "62"], ["56", "67"], ["66", "82"], ["76", "87"], ["86", "102"], ["96", "107"], ["106", "122"], ["116", "127"], ["126", "139"], ["194", "198"], ["26", "24"], ["30", "28"], ["45", "43"], ["53", "51"], ["67", "70"], ["70", "66"], ["87", "90"], ["90", "86"], ["107", "110"], ["110", "106"], ["127", "130"], ["130", "126"], ["138", "143"], ["138", "194"], ["33", "40"], ["36", "31"], ["60", "63"], ["63", "56"], ["80", "83"], ["83", "76"], ["100", "103"], ["103", "96"], ["120", "123"], ["123", "116"], ["139", "138"], ["143", "148"], ["146", "154"], ["151", "164"], ["161", "174"], ["35", "33"], ["38", "36"], ["62", "60"], ["82", "80"], ["102", "100"], ["122", "120"], ["148", "146"], ["153", "151"], ["163", "161"], ["171", "186"], ["171", "191"], ["186", "139"], ["40", "38"], ["154", "157"], ["155", "153"], ["164", "167"], ["165", "163"], ["172", "171"], ["172", "181"], ["179", "171"], ["157", "155"], ["167", "165"], ["173", "172"], ["180", "179"], ["191", "139"], ["174", "173"], ["181", "180"], ["21", "26"], ["22", "198"], ["24", "198"], ["27", "198"], ["28", "198"], ["36", "198"], ["36", "198"], ["36", "198"], ["31", "198"], ["45", "198"], ["43", "198"], ["43", "198"], ["48", "198"], ["48", "198"], ["51", "198"], ["54", "198"], ["63", "198"], ["56", "198"], ["66", "198"], ["66", "198"], ["66", "198"], ["83", "198"], ["76", "198"], ["86", "198"], ["86", "198"], ["86", "198"], ["103", "198"], ["96", "198"], ["106", "198"], ["106", "198"], ["106", "198"], ["120", "198"], ["123", "198"], ["123", "198"], ["116", "198"], ["127", "198"], ["126", "198"], ["130", "198"], ["126", "198"], ["126", "198"], ["139", "198"], ["138", "198"], ["138", "198"], ["194", "198"], ["194", "198"], ["143", "198"], ["143", "198"], ["148", "198"], ["146", "198"], ["146", "198"], ["155", "198"], ["153", "198"], ["151", "198"], ["151", "198"], ["161", "198"], ["165", "198"], ["165", "198"], ["163", "198"], ["161", "198"], ["161", "198"], ["174", "198"], ["173", "198"], ["172", "198"], ["172", "198"], ["171", "198"], ["181", "198"], ["180", "198"], ["179", "198"], ["179", "198"], ["171", "198"], ["171", "198"], ["191", "198"], ["186", "198"], ["21", "22"], ["21", "24"], ["21", "28"], ["45", "43"], ["21", "48"], ["21", "51"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["33", "31"], ["36", "31"], ["51", "54"], ["21", "54"], ["54", "56"], ["21", "56"], ["60", "56"], ["63", "56"], ["67", "66"], ["67", "66"], ["70", "66"], ["70", "66"], ["70", "66"], ["70", "66"], ["70", "66"], ["67", "76"], ["21", "76"], ["80", "76"], ["83", "76"], ["87", "86"], ["87", "86"], ["90", "86"], ["90", "86"], ["90", "86"], ["90", "86"], ["90", "86"], ["87", "96"], ["21", "96"], ["100", "96"], ["103", "96"], ["107", "106"], ["107", "106"], ["110", "106"], ["110", "106"], ["110", "106"], ["110", "106"], ["110", "106"], ["107", "116"], ["21", "116"], ["120", "116"], ["123", "116"], ["127", "126"], ["127", "126"], ["130", "126"], ["130", "126"], ["130", "126"], ["130", "126"], ["130", "126"], ["31", "194"], ["191", "194"], ["186", "194"], ["21", "194"], ["21", "33"], ["21", "41"], ["27", "45"], ["21", "45"], ["21", "60"], ["21", "65"], ["56", "67"], ["21", "67"], ["21", "70"], ["21", "80"], ["21", "85"], ["76", "87"], ["21", "87"], ["70", "90"], ["21", "90"], ["21", "100"], ["21", "105"], ["96", "107"], ["21", "107"], ["90", "110"], ["21", "110"], ["21", "120"], ["21", "125"], ["116", "127"], ["21", "127"], ["110", "130"], ["21", "130"], ["139", "138"], ["21", "138"], ["148", "146"], ["21", "151"], ["155", "151"], ["155", "151"], ["21", "161"], ["165", "161"], ["165", "161"], ["33", "36"], ["21", "36"], ["60", "63"], ["21", "63"], ["80", "83"], ["21", "83"], ["100", "103"], ["21", "103"], ["120", "123"], ["21", "123"], ["43", "139"], ["21", "139"], ["48", "143"], ["21", "143"], ["45", "148"], ["21", "148"], ["21", "153"], ["155", "153"], ["155", "153"], ["21", "163"], ["165", "163"], ["165", "163"], ["172", "171"], ["172", "171"], ["179", "171"], ["179", "171"], ["31", "186"], ["191", "186"], ["21", "186"], ["165", "155"], ["21", "155"], ["157", "155"], ["157", "155"], ["155", "165"], ["21", "165"], ["167", "165"], ["167", "165"], ["173", "172"], ["173", "172"], ["167", "172"], ["21", "172"], ["180", "179"], ["180", "179"], ["172", "179"], ["21", "179"], ["146", "157"], ["21", "157"], ["157", "167"], ["21", "167"], ["174", "173"], ["21", "173"], ["181", "180"], ["21", "180"], ["31", "191"], ["186", "191"], ["21", "191"], ["151", "174"], ["21", "174"], ["161", "181"], ["21", "181"], ["138", "167"], ["138", "154"], ["138", "146"], ["138", "161"], ["138", "163"], ["138", "151"], ["138", "153"], ["138", "157"], ["138", "138"], ["138", "148"], ["138", "143"], ["138", "173"], ["138", "165"], ["138", "174"], ["138", "164"], ["138", "155"], ["138", "139"], ["138", "171"], ["138", "172"], ["171", "191"], ["171", "186"], ["172", "179"], ["172", "181"], ["172", "180"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastReader())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastReader())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,bw,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj1,new OutputStreamWriter(System.out))>", "39": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "41": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>6</SUB>>", "45": "<(nextInt,nextInt())<SUB>6</SUB>>", "47": "<(LOCAL,int po: int)<SUB>7</SUB>>", "49": "<(IDENTIFIER,po,int po = 0)<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,dirs = new HashMap&lt;&gt;())<SUB>9</SUB>>", "53": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>9</SUB>>", "55": "<(IDENTIFIER,dirs,new HashMap&lt;&gt;())<SUB>9</SUB>>", "57": "<(IDENTIFIER,dirs,put('U', new ArrayList&lt;&gt;()))<SUB>10</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "61": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "63": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>10</SUB>>", "65": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "67": "<(get,get('U'))<SUB>11</SUB>>", "69": "<(LITERAL,'U',get('U'))<SUB>11</SUB>>", "71": "<(IDENTIFIER,Arrays,asList('U', 'R', 'D', 'L'))<SUB>11</SUB>>", "73": "<(LITERAL,'R',asList('U', 'R', 'D', 'L'))<SUB>11</SUB>>", "75": "<(LITERAL,'L',asList('U', 'R', 'D', 'L'))<SUB>11</SUB>>", "77": "<(IDENTIFIER,dirs,put('L', new ArrayList&lt;&gt;()))<SUB>12</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "81": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "83": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>12</SUB>>", "85": "<(IDENTIFIER,$obj5,&lt;empty&gt;)>", "87": "<(get,get('L'))<SUB>13</SUB>>", "89": "<(LITERAL,'L',get('L'))<SUB>13</SUB>>", "91": "<(IDENTIFIER,Arrays,asList('L', 'U', 'R', 'D'))<SUB>13</SUB>>", "93": "<(LITERAL,'U',asList('L', 'U', 'R', 'D'))<SUB>13</SUB>>", "95": "<(LITERAL,'D',asList('L', 'U', 'R', 'D'))<SUB>13</SUB>>", "97": "<(IDENTIFIER,dirs,put('D', new ArrayList&lt;&gt;()))<SUB>14</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "101": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "103": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>14</SUB>>", "105": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "107": "<(get,get('D'))<SUB>15</SUB>>", "109": "<(LITERAL,'D',get('D'))<SUB>15</SUB>>", "111": "<(IDENTIFIER,Arrays,asList('D', 'L', 'U', 'R'))<SUB>15</SUB>>", "113": "<(LITERAL,'L',asList('D', 'L', 'U', 'R'))<SUB>15</SUB>>", "115": "<(LITERAL,'R',asList('D', 'L', 'U', 'R'))<SUB>15</SUB>>", "117": "<(IDENTIFIER,dirs,put('R', new ArrayList&lt;&gt;()))<SUB>16</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "121": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "123": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>16</SUB>>", "125": "<(IDENTIFIER,$obj7,&lt;empty&gt;)>", "127": "<(get,get('R'))<SUB>17</SUB>>", "129": "<(LITERAL,'R',get('R'))<SUB>17</SUB>>", "131": "<(IDENTIFIER,Arrays,asList('R', 'D', 'L', 'U'))<SUB>17</SUB>>", "133": "<(LITERAL,'D',asList('R', 'D', 'L', 'U'))<SUB>17</SUB>>", "135": "<(LITERAL,'U',asList('R', 'D', 'L', 'U'))<SUB>17</SUB>>", "137": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>19</SUB>>", "139": "<(&lt;operator&gt;.postDecrement,t--)<SUB>19</SUB>>", "141": "<(LITERAL,0,t-- &gt; 0)<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,po++)<SUB>20</SUB>>", "145": "<(LOCAL,int n: int)<SUB>21</SUB>>", "147": "<(IDENTIFIER,n,int n = nextInt())<SUB>21</SUB>>", "149": "<(IDENTIFIER,sc,nextInt())<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.assignment,int x = (int) Math.sqrt(n / 2))<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n / 2))<SUB>22</SUB>>", "155": "<(sqrt,Math.sqrt(n / 2))<SUB>22</SUB>>", "157": "<(&lt;operator&gt;.division,n / 2)<SUB>22</SUB>>", "159": "<(LITERAL,2,n / 2)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.assignment,int y = (int) Math.sqrt(n / 4))<SUB>23</SUB>>", "163": "<(&lt;operator&gt;.cast,(int) Math.sqrt(n / 4))<SUB>23</SUB>>", "165": "<(sqrt,Math.sqrt(n / 4))<SUB>23</SUB>>", "167": "<(&lt;operator&gt;.division,n / 4)<SUB>23</SUB>>", "169": "<(LITERAL,4,n / 4)<SUB>23</SUB>>", "171": "<(&lt;operator&gt;.logicalOr,x * x * 2 == n || y * y * 4 == n)<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.multiplication,x * x * 2)<SUB>25</SUB>>", "175": "<(IDENTIFIER,x,x * x)<SUB>25</SUB>>", "177": "<(LITERAL,2,x * x * 2)<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.equals,y * y * 4 == n)<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.multiplication,y * y)<SUB>25</SUB>>", "183": "<(IDENTIFIER,y,y * y)<SUB>25</SUB>>", "185": "<(IDENTIFIER,n,y * y * 4 == n)<SUB>25</SUB>>", "187": "<(IDENTIFIER,bw,append(&quot;YES\\n&quot;))<SUB>26</SUB>>", "189": "<(CONTROL_STRUCTURE,else,else)<SUB>27</SUB>>", "191": "<(append,append(&quot;NO\\n&quot;))<SUB>28</SUB>>", "193": "<(LITERAL,&quot;NO\\n&quot;,append(&quot;NO\\n&quot;))<SUB>28</SUB>>", "195": "<(IDENTIFIER,bw,close())<SUB>65</SUB>>", "197": "<(MODIFIER,STATIC)>"}}