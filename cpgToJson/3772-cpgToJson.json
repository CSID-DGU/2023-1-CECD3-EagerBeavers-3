{"edges": [["17", "18"], ["17", "19"], ["17", "212"], ["17", "213"], ["17", "214"], ["19", "20"], ["19", "63"], ["19", "67"], ["19", "71"], ["19", "75"], ["19", "82"], ["19", "89"], ["19", "121"], ["19", "153"], ["19", "154"], ["19", "159"], ["19", "210"], ["20", "21"], ["20", "22"], ["20", "25"], ["20", "28"], ["20", "30"], ["22", "23"], ["22", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["30", "31"], ["31", "32"], ["31", "33"], ["31", "36"], ["31", "39"], ["31", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["41", "42"], ["42", "43"], ["42", "44"], ["42", "47"], ["42", "50"], ["42", "52"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["53", "54"], ["53", "61"], ["54", "55"], ["54", "60"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["61", "62"], ["63", "64"], ["63", "65"], ["65", "66"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "97"], ["89", "99"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "110"], ["100", "112"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "131"], ["121", "133"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "142"], ["134", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["144", "145"], ["145", "146"], ["145", "151"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["151", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "167"], ["159", "169"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["167", "168"], ["169", "170"], ["169", "208"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "195"], ["181", "182"], ["181", "187"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "194"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "193"], ["191", "192"], ["195", "196"], ["195", "197"], ["197", "198"], ["197", "207"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["199", "202"], ["199", "203"], ["203", "204"], ["203", "205"], ["208", "209"], ["210", "211"], ["63", "69"], ["67", "73"], ["71", "78"], ["75", "86"], ["82", "91"], ["154", "161"], ["210", "214"], ["22", "25"], ["25", "33"], ["25", "65"], ["28", "25"], ["65", "63"], ["69", "67"], ["73", "71"], ["77", "75"], ["84", "82"], ["91", "94"], ["94", "102"], ["94", "123"], ["97", "94"], ["123", "128"], ["126", "136"], ["126", "158"], ["131", "128"], ["156", "154"], ["161", "164"], ["164", "172"], ["164", "210"], ["167", "164"], ["78", "77"], ["86", "84"], ["128", "126"], ["158", "156"], ["208", "167"], ["33", "36"], ["36", "44"], ["36", "28"], ["39", "36"], ["102", "107"], ["105", "115"], ["105", "97"], ["110", "107"], ["136", "139"], ["139", "147"], ["139", "131"], ["142", "139"], ["172", "175"], ["175", "183"], ["175", "208"], ["178", "175"], ["107", "105"], ["113", "110"], ["145", "142"], ["195", "178"], ["44", "47"], ["47", "56"], ["47", "39"], ["50", "47"], ["114", "119"], ["119", "113"], ["146", "151"], ["151", "145"], ["182", "191"], ["182", "203"], ["197", "195"], ["53", "50"], ["115", "114"], ["147", "146"], ["183", "182"], ["188", "178"], ["198", "197"], ["54", "61"], ["61", "53"], ["190", "188"], ["199", "198"], ["55", "54"], ["191", "190"], ["203", "199"], ["56", "55"], ["17", "22"], ["18", "214"], ["22", "214"], ["25", "214"], ["63", "214"], ["67", "214"], ["71", "214"], ["73", "214"], ["71", "214"], ["71", "214"], ["75", "214"], ["77", "214"], ["75", "214"], ["75", "214"], ["82", "214"], ["86", "214"], ["84", "214"], ["82", "214"], ["82", "214"], ["126", "214"], ["126", "214"], ["154", "214"], ["154", "214"], ["154", "214"], ["161", "214"], ["164", "214"], ["164", "214"], ["164", "214"], ["210", "214"], ["210", "214"], ["172", "214"], ["175", "214"], ["175", "214"], ["175", "214"], ["208", "214"], ["167", "214"], ["183", "214"], ["182", "214"], ["182", "214"], ["203", "214"], ["199", "214"], ["198", "214"], ["197", "214"], ["195", "214"], ["195", "214"], ["190", "214"], ["188", "214"], ["188", "214"], ["178", "214"], ["136", "214"], ["139", "214"], ["139", "214"], ["139", "214"], ["131", "214"], ["145", "214"], ["151", "214"], ["145", "214"], ["145", "214"], ["142", "214"], ["102", "214"], ["105", "214"], ["107", "214"], ["105", "214"], ["105", "214"], ["97", "214"], ["113", "214"], ["119", "214"], ["113", "214"], ["113", "214"], ["110", "214"], ["33", "214"], ["36", "214"], ["36", "214"], ["28", "214"], ["44", "214"], ["47", "214"], ["39", "214"], ["53", "214"], ["53", "214"], ["53", "214"], ["50", "214"], ["199", "214"], ["17", "18"], ["65", "63"], ["69", "67"], ["73", "71"], ["77", "75"], ["77", "75"], ["84", "82"], ["84", "82"], ["17", "22"], ["17", "91"], ["17", "123"], ["17", "161"], ["208", "210"], ["17", "210"], ["22", "25"], ["28", "25"], ["17", "25"], ["25", "28"], ["17", "28"], ["17", "65"], ["65", "69"], ["17", "69"], ["69", "73"], ["17", "73"], ["63", "77"], ["17", "77"], ["67", "77"], ["17", "84"], ["63", "84"], ["77", "84"], ["91", "94"], ["97", "94"], ["17", "94"], ["84", "94"], ["94", "97"], ["17", "97"], ["123", "126"], ["131", "126"], ["17", "126"], ["128", "126"], ["128", "126"], ["126", "131"], ["17", "131"], ["161", "164"], ["167", "164"], ["17", "164"], ["128", "164"], ["164", "167"], ["199", "167"], ["17", "167"], ["17", "33"], ["63", "78"], ["17", "78"], ["77", "86"], ["17", "86"], ["17", "102"], ["94", "128"], ["17", "128"], ["17", "136"], ["17", "172"], ["195", "208"], ["188", "208"], ["17", "208"], ["33", "36"], ["39", "36"], ["17", "36"], ["36", "39"], ["17", "39"], ["102", "105"], ["110", "105"], ["17", "105"], ["107", "105"], ["107", "105"], ["105", "110"], ["17", "110"], ["119", "113"], ["136", "139"], ["142", "139"], ["17", "139"], ["107", "139"], ["77", "139"], ["139", "142"], ["17", "142"], ["151", "145"], ["172", "175"], ["178", "175"], ["17", "175"], ["139", "175"], ["107", "175"], ["77", "175"], ["175", "178"], ["199", "178"], ["17", "178"], ["17", "44"], ["17", "107"], ["77", "107"], ["208", "195"], ["188", "195"], ["17", "195"], ["198", "195"], ["198", "195"], ["44", "47"], ["50", "47"], ["17", "47"], ["47", "50"], ["17", "50"], ["61", "53"], ["73", "119"], ["17", "119"], ["73", "151"], ["119", "151"], ["17", "151"], ["183", "182"], ["183", "182"], ["17", "182"], ["198", "197"], ["198", "197"], ["17", "197"], ["71", "183"], ["203", "183"], ["17", "183"], ["208", "188"], ["195", "188"], ["17", "188"], ["191", "188"], ["199", "198"], ["199", "198"], ["199", "198"], ["199", "198"], ["17", "198"], ["17", "61"], ["191", "190"], ["17", "190"], ["17", "199"], ["164", "199"], ["175", "199"], ["203", "199"], ["203", "199"], ["17", "191"], ["183", "203"], ["17", "203"], ["25", "25"], ["25", "33"], ["25", "36"], ["25", "28"], ["94", "107"], ["94", "94"], ["94", "102"], ["94", "97"], ["94", "105"], ["126", "136"], ["126", "128"], ["126", "131"], ["126", "139"], ["126", "126"], ["164", "167"], ["164", "208"], ["164", "164"], ["164", "175"], ["164", "172"], ["36", "44"], ["36", "36"], ["36", "47"], ["36", "39"], ["105", "107"], ["105", "115"], ["105", "113"], ["105", "114"], ["105", "119"], ["105", "105"], ["105", "110"], ["139", "145"], ["139", "146"], ["139", "151"], ["139", "139"], ["139", "142"], ["139", "147"], ["175", "178"], ["175", "182"], ["175", "183"], ["175", "175"], ["47", "56"], ["47", "50"], ["47", "54"], ["47", "61"], ["47", "47"], ["47", "53"], ["47", "55"], ["182", "188"], ["182", "197"], ["182", "198"], ["182", "191"], ["182", "195"], ["182", "190"], ["182", "199"], ["182", "203"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(LOCAL,int i: int)<SUB>2</SUB>>", "23": "<(IDENTIFIER,i,int i = 0)<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.lessThan,i &lt; 505)<SUB>2</SUB>>", "27": "<(LITERAL,505,i &lt; 505)<SUB>2</SUB>>", "29": "<(IDENTIFIER,i,i++)<SUB>2</SUB>>", "31": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 505); j++),for (int j = 0; Some(j &lt; 505); j++))<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>3</SUB>>", "35": "<(LITERAL,0,int j = 0)<SUB>3</SUB>>", "37": "<(IDENTIFIER,j,j &lt; 505)<SUB>3</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,j++)<SUB>3</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>3</SUB>>", "43": "<(LOCAL,int k: int)<SUB>4</SUB>>", "45": "<(IDENTIFIER,k,int k = 0)<SUB>4</SUB>>", "47": "<(&lt;operator&gt;.lessThan,k &lt; 15)<SUB>4</SUB>>", "49": "<(LITERAL,15,k &lt; 15)<SUB>4</SUB>>", "51": "<(IDENTIFIER,k,k++)<SUB>4</SUB>>", "53": "<(&lt;operator&gt;.assignment,dp[i][j][k] = -1)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>5</SUB>>", "57": "<(IDENTIFIER,dp,dp[i][j][k] = -1)<SUB>5</SUB>>", "59": "<(IDENTIFIER,j,dp[i][j][k] = -1)<SUB>5</SUB>>", "61": "<(&lt;operator&gt;.minus,-1)<SUB>5</SUB>>", "63": "<(&lt;operator&gt;.assignment,n = iscan())<SUB>9</SUB>>", "65": "<(iscan,iscan())<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,m = iscan())<SUB>9</SUB>>", "69": "<(iscan,iscan())<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,k = iscan())<SUB>9</SUB>>", "73": "<(iscan,iscan())<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,horW = new int[n + 1][m])<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.alloc,new int[n + 1][m])>", "79": "<(IDENTIFIER,n,n + 1)<SUB>10</SUB>>", "81": "<(IDENTIFIER,m,new int[n + 1][m])<SUB>10</SUB>>", "83": "<(IDENTIFIER,verW,verW = new int[n][m + 1])<SUB>10</SUB>>", "85": "<(IDENTIFIER,n,new int[n][m + 1])<SUB>10</SUB>>", "87": "<(IDENTIFIER,m,m + 1)<SUB>10</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>11</SUB>>", "93": "<(LITERAL,1,int i = 1)<SUB>11</SUB>>", "95": "<(IDENTIFIER,i,i &lt;= n)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "101": "<(LOCAL,int j: int)<SUB>12</SUB>>", "103": "<(IDENTIFIER,j,int j = 1)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m - 1)<SUB>12</SUB>>", "107": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>12</SUB>>", "109": "<(LITERAL,1,m - 1)<SUB>12</SUB>>", "111": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "113": "<(&lt;operator&gt;.assignment,horW[i][j] = iscan())<SUB>13</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,horW[i])<SUB>13</SUB>>", "117": "<(IDENTIFIER,i,horW[i][j] = iscan())<SUB>13</SUB>>", "119": "<(iscan,iscan())<SUB>13</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n - 1); i++),for (int i = 1; Some(i &lt;= n - 1); i++))<SUB>16</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>16</SUB>>", "125": "<(LITERAL,1,int i = 1)<SUB>16</SUB>>", "127": "<(IDENTIFIER,i,i &lt;= n - 1)<SUB>16</SUB>>", "129": "<(IDENTIFIER,n,n - 1)<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "135": "<(LOCAL,int j: int)<SUB>17</SUB>>", "137": "<(IDENTIFIER,j,int j = 1)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>17</SUB>>", "141": "<(IDENTIFIER,m,j &lt;= m)<SUB>17</SUB>>", "143": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.assignment,verW[i][j] = iscan())<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,verW[i])<SUB>18</SUB>>", "149": "<(IDENTIFIER,i,verW[i][j] = iscan())<SUB>18</SUB>>", "151": "<(iscan,iscan())<SUB>18</SUB>>", "153": "<(LOCAL,int min: int)<SUB>21</SUB>>", "155": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>21</SUB>>", "157": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>21</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>22</SUB>>", "163": "<(LITERAL,1,int i = 1)<SUB>22</SUB>>", "165": "<(IDENTIFIER,i,i &lt;= n)<SUB>22</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "171": "<(LOCAL,int j: int)<SUB>23</SUB>>", "173": "<(IDENTIFIER,j,int j = 1)<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= m)<SUB>23</SUB>>", "177": "<(IDENTIFIER,m,j &lt;= m)<SUB>23</SUB>>", "179": "<(IDENTIFIER,j,j++)<SUB>23</SUB>>", "181": "<(CONTROL_STRUCTURE,if (k % 2 == 1),if (k % 2 == 1))<SUB>24</SUB>>", "183": "<(&lt;operator&gt;.modulo,k % 2)<SUB>24</SUB>>", "185": "<(LITERAL,2,k % 2)<SUB>24</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "189": "<(IDENTIFIER,out,print(-1 + &quot; &quot;))<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.minus,-1)<SUB>25</SUB>>", "193": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>25</SUB>>", "195": "<(print,print(dfs(i, j, k / 2) * 2 + &quot; &quot;))<SUB>28</SUB>>", "197": "<(&lt;operator&gt;.addition,dfs(i, j, k / 2) * 2 + &quot; &quot;)<SUB>28</SUB>>", "199": "<(dfs,dfs(i, j, k / 2))<SUB>28</SUB>>", "201": "<(IDENTIFIER,i,dfs(i, j, k / 2))<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.division,k / 2)<SUB>28</SUB>>", "205": "<(LITERAL,2,k / 2)<SUB>28</SUB>>", "207": "<(LITERAL,&quot; &quot;,dfs(i, j, k / 2) * 2 + &quot; &quot;)<SUB>28</SUB>>", "209": "<(IDENTIFIER,out,println())<SUB>30</SUB>>", "211": "<(IDENTIFIER,out,close())<SUB>32</SUB>>", "213": "<(MODIFIER,STATIC)>"}}