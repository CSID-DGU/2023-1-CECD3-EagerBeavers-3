{"edges": [["17", "18"], ["17", "19"], ["17", "114"], ["17", "115"], ["17", "116"], ["19", "20"], ["19", "21"], ["19", "26"], ["19", "27"], ["19", "31"], ["19", "32"], ["19", "36"], ["19", "37"], ["19", "40"], ["19", "104"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "25"], ["27", "28"], ["27", "29"], ["29", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "57"], ["50", "58"], ["50", "63"], ["50", "64"], ["50", "67"], ["50", "99"], ["51", "52"], ["51", "56"], ["52", "53"], ["53", "54"], ["53", "55"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "77"], ["67", "79"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "94"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["102", "103"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["108", "113"], ["109", "110"], ["109", "111"], ["21", "29"], ["27", "34"], ["32", "37"], ["37", "42"], ["104", "116"], ["23", "21"], ["29", "27"], ["34", "32"], ["42", "45"], ["45", "53"], ["45", "107"], ["48", "45"], ["105", "109"], ["108", "104"], ["58", "64"], ["64", "69"], ["107", "105"], ["109", "108"], ["52", "48"], ["52", "60"], ["60", "58"], ["69", "74"], ["72", "100"], ["72", "82"], ["77", "74"], ["100", "102"], ["100", "48"], ["53", "52"], ["74", "72"], ["102", "48"], ["81", "95"], ["81", "77"], ["82", "81"], ["82", "88"], ["85", "81"], ["95", "100"], ["86", "91"], ["91", "85"], ["88", "86"], ["17", "23"], ["18", "116"], ["21", "116"], ["21", "116"], ["21", "116"], ["27", "116"], ["34", "116"], ["32", "116"], ["32", "116"], ["37", "116"], ["42", "116"], ["45", "116"], ["45", "116"], ["45", "116"], ["104", "116"], ["109", "116"], ["109", "116"], ["108", "116"], ["104", "116"], ["53", "116"], ["52", "116"], ["52", "116"], ["58", "116"], ["58", "116"], ["58", "116"], ["64", "116"], ["64", "116"], ["69", "116"], ["72", "116"], ["72", "116"], ["72", "116"], ["82", "116"], ["82", "116"], ["81", "116"], ["86", "116"], ["86", "116"], ["85", "116"], ["91", "116"], ["91", "116"], ["85", "116"], ["81", "116"], ["81", "116"], ["77", "116"], ["95", "116"], ["95", "116"], ["102", "116"], ["48", "116"], ["23", "116"], ["17", "18"], ["23", "21"], ["23", "21"], ["29", "27"], ["34", "32"], ["17", "37"], ["17", "42"], ["17", "104"], ["17", "23"], ["17", "29"], ["29", "34"], ["17", "34"], ["42", "45"], ["48", "45"], ["17", "45"], ["27", "45"], ["53", "48"], ["74", "48"], ["17", "48"], ["60", "58"], ["60", "58"], ["17", "64"], ["17", "108"], ["17", "69"], ["17", "100"], ["37", "109"], ["102", "109"], ["17", "109"], ["32", "109"], ["53", "52"], ["53", "52"], ["53", "60"], ["17", "60"], ["69", "72"], ["77", "72"], ["17", "72"], ["74", "72"], ["74", "72"], ["82", "77"], ["91", "77"], ["17", "77"], ["21", "53"], ["82", "53"], ["86", "53"], ["17", "53"], ["45", "53"], ["60", "74"], ["17", "74"], ["37", "102"], ["17", "102"], ["82", "81"], ["82", "81"], ["85", "81"], ["85", "81"], ["17", "95"], ["53", "82"], ["86", "82"], ["17", "82"], ["72", "82"], ["86", "85"], ["86", "85"], ["91", "85"], ["91", "85"], ["82", "86"], ["17", "86"], ["82", "86"], ["58", "91"], ["17", "91"], ["82", "91"], ["82", "88"], ["17", "88"], ["45", "48"], ["45", "52"], ["45", "45"], ["45", "53"], ["52", "60"], ["52", "64"], ["52", "72"], ["52", "69"], ["52", "74"], ["52", "58"], ["52", "100"], ["72", "81"], ["72", "82"], ["100", "102"], ["81", "77"], ["81", "72"], ["81", "74"], ["81", "95"], ["82", "85"], ["82", "91"], ["82", "88"], ["82", "86"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,ANY primes = primes(1001))<SUB>2</SUB>>", "23": "<(primes,primes(1001))<SUB>2</SUB>>", "25": "<(LITERAL,1001,primes(1001))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>3</SUB>>", "29": "<(nextInt,nextInt())<SUB>3</SUB>>", "31": "<(LOCAL,int K: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,K,int K = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int count = 0)<SUB>5</SUB>>", "41": "<(LOCAL,int i: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,i,int i = 2)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= N)<SUB>6</SUB>>", "47": "<(IDENTIFIER,N,i &lt;= N)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,++i)<SUB>6</SUB>>", "51": "<(CONTROL_STRUCTURE,if (!primes.get(i)),if (!primes.get(i)))<SUB>7</SUB>>", "53": "<(get,get(i))<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,get(i))<SUB>7</SUB>>", "57": "<(LOCAL,int res: int)<SUB>8</SUB>>", "59": "<(IDENTIFIER,res,int res = i - 1)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i - 1)<SUB>8</SUB>>", "63": "<(LOCAL,boolean found: boolean)<SUB>9</SUB>>", "65": "<(IDENTIFIER,found,boolean found = false)<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int j = 2; Some(j &lt;= i / 2); ++j),for (int j = 2; Some(j &lt;= i / 2); ++j))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int j = 2)<SUB>10</SUB>>", "71": "<(LITERAL,2,int j = 2)<SUB>10</SUB>>", "73": "<(IDENTIFIER,j,j &lt;= i / 2)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i / 2)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.preIncrement,++j)<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.logicalAnd,primes.get(j) &amp;&amp; primes.nextSetBit(j + 1) == res - j)<SUB>11</SUB>>", "83": "<(IDENTIFIER,primes,get(j))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.equals,primes.nextSetBit(j + 1) == res - j)<SUB>11</SUB>>", "87": "<(IDENTIFIER,primes,nextSetBit(j + 1))<SUB>11</SUB>>", "89": "<(IDENTIFIER,j,j + 1)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.subtraction,res - j)<SUB>11</SUB>>", "93": "<(IDENTIFIER,j,res - j)<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.assignment,found = true)<SUB>12</SUB>>", "97": "<(LITERAL,true,found = true)<SUB>12</SUB>>", "99": "<(CONTROL_STRUCTURE,if (found),if (found))<SUB>16</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "103": "<(IDENTIFIER,count,++count)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "109": "<(&lt;operator&gt;.greaterEqualsThan,count &gt;= K)<SUB>20</SUB>>", "111": "<(IDENTIFIER,K,count &gt;= K)<SUB>20</SUB>>", "113": "<(LITERAL,&quot;NO&quot;,count &gt;= K ? &quot;YES&quot; : &quot;NO&quot;)<SUB>20</SUB>>", "115": "<(MODIFIER,STATIC)>"}}