{"edges": [["24", "26"], ["24", "675"], ["24", "676"], ["24", "677"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "41"], ["26", "42"], ["26", "46"], ["26", "47"], ["26", "51"], ["26", "52"], ["26", "56"], ["26", "57"], ["26", "61"], ["26", "252"], ["26", "253"], ["26", "6"], ["26", "259"], ["26", "262"], ["26", "273"], ["26", "673"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["61", "66"], ["61", "69"], ["61", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["71", "72"], ["71", "80"], ["71", "91"], ["71", "99"], ["71", "100"], ["71", "103"], ["71", "159"], ["71", "168"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "88"], ["84", "90"], ["85", "86"], ["85", "87"], ["88", "89"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "113"], ["103", "115"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "142"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "135"], ["133", "136"], ["133", "137"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "150"], ["144", "157"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["150", "151"], ["150", "156"], ["151", "152"], ["151", "155"], ["152", "153"], ["152", "154"], ["157", "158"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["164", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "179"], ["168", "181"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["176", "177"], ["176", "178"], ["179", "180"], ["181", "182"], ["181", "183"], ["181", "190"], ["181", "212"], ["181", "225"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "211"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "209"], ["206", "210"], ["212", "213"], ["212", "218"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "222"], ["218", "224"], ["219", "220"], ["219", "221"], ["222", "223"], ["225", "226"], ["225", "227"], ["225", "230"], ["225", "235"], ["225", "237"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["238", "239"], ["238", "244"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["244", "245"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["259", "260"], ["259", "261"], ["262", "5"], ["262", "263"], ["263", "264"], ["263", "267"], ["263", "272"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "269"], ["269", "270"], ["269", "271"], ["273", "274"], ["273", "275"], ["273", "278"], ["273", "281"], ["273", "283"], ["275", "276"], ["275", "277"], ["278", "279"], ["278", "280"], ["281", "282"], ["283", "8"], ["283", "284"], ["283", "287"], ["283", "290"], ["283", "291"], ["283", "297"], ["283", "298"], ["283", "304"], ["283", "305"], ["283", "310"], ["283", "348"], ["283", "349"], ["283", "353"], ["283", "378"], ["283", "383"], ["283", "389"], ["283", "390"], ["283", "395"], ["283", "430"], ["283", "431"], ["283", "439"], ["283", "523"], ["283", "524"], ["283", "534"], ["283", "659"], ["284", "285"], ["284", "286"], ["287", "7"], ["287", "288"], ["288", "289"], ["291", "292"], ["291", "293"], ["293", "294"], ["293", "295"], ["295", "296"], ["298", "299"], ["298", "300"], ["300", "301"], ["300", "302"], ["302", "303"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "309"], ["310", "311"], ["310", "312"], ["310", "315"], ["310", "318"], ["310", "320"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["318", "319"], ["320", "321"], ["320", "324"], ["320", "327"], ["321", "322"], ["321", "323"], ["324", "9"], ["324", "325"], ["325", "326"], ["327", "328"], ["327", "329"], ["327", "332"], ["327", "335"], ["327", "337"], ["329", "330"], ["329", "331"], ["332", "333"], ["332", "334"], ["335", "336"], ["337", "338"], ["338", "339"], ["338", "344"], ["339", "340"], ["339", "343"], ["340", "341"], ["340", "342"], ["344", "345"], ["344", "346"], ["346", "347"], ["349", "350"], ["349", "351"], ["351", "352"], ["353", "354"], ["353", "355"], ["353", "358"], ["353", "361"], ["353", "363"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "360"], ["361", "362"], ["363", "364"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["368", "369"], ["368", "372"], ["368", "377"], ["369", "370"], ["369", "371"], ["372", "373"], ["372", "374"], ["374", "375"], ["374", "376"], ["378", "379"], ["378", "380"], ["378", "381"], ["381", "382"], ["383", "384"], ["383", "385"], ["385", "386"], ["385", "387"], ["385", "388"], ["390", "391"], ["390", "392"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "397"], ["395", "400"], ["395", "403"], ["395", "405"], ["397", "398"], ["397", "399"], ["400", "401"], ["400", "402"], ["403", "404"], ["405", "406"], ["406", "407"], ["406", "408"], ["406", "411"], ["406", "414"], ["406", "416"], ["408", "409"], ["408", "410"], ["411", "412"], ["411", "413"], ["414", "415"], ["416", "417"], ["417", "418"], ["417", "423"], ["418", "419"], ["418", "422"], ["419", "420"], ["419", "421"], ["423", "424"], ["423", "429"], ["424", "425"], ["424", "428"], ["425", "426"], ["425", "427"], ["431", "432"], ["431", "433"], ["433", "434"], ["433", "435"], ["435", "436"], ["436", "437"], ["436", "438"], ["439", "440"], ["439", "441"], ["439", "444"], ["439", "447"], ["439", "449"], ["441", "442"], ["441", "443"], ["444", "445"], ["444", "446"], ["447", "448"], ["449", "450"], ["450", "451"], ["450", "452"], ["450", "455"], ["450", "460"], ["450", "462"], ["452", "453"], ["452", "454"], ["455", "456"], ["455", "457"], ["457", "458"], ["457", "459"], ["460", "461"], ["462", "463"], ["462", "464"], ["462", "467"], ["462", "493"], ["462", "494"], ["462", "501"], ["464", "465"], ["464", "466"], ["467", "468"], ["467", "469"], ["467", "472"], ["467", "475"], ["467", "477"], ["469", "470"], ["469", "471"], ["472", "473"], ["472", "474"], ["475", "476"], ["477", "478"], ["478", "479"], ["478", "486"], ["479", "480"], ["479", "485"], ["480", "481"], ["480", "482"], ["482", "483"], ["482", "484"], ["486", "487"], ["486", "488"], ["488", "489"], ["488", "492"], ["489", "490"], ["489", "491"], ["494", "495"], ["494", "496"], ["496", "497"], ["496", "500"], ["497", "498"], ["497", "499"], ["501", "502"], ["501", "511"], ["502", "503"], ["502", "506"], ["503", "504"], ["503", "505"], ["506", "507"], ["506", "510"], ["507", "508"], ["507", "509"], ["511", "512"], ["511", "513"], ["511", "522"], ["513", "514"], ["513", "517"], ["514", "515"], ["514", "516"], ["517", "518"], ["517", "521"], ["518", "519"], ["518", "520"], ["524", "525"], ["524", "526"], ["526", "527"], ["526", "530"], ["527", "528"], ["527", "529"], ["530", "531"], ["531", "532"], ["531", "533"], ["534", "535"], ["534", "536"], ["534", "539"], ["534", "542"], ["534", "544"], ["536", "537"], ["536", "538"], ["539", "540"], ["539", "541"], ["542", "543"], ["544", "545"], ["545", "546"], ["545", "547"], ["545", "550"], ["545", "556"], ["545", "558"], ["547", "548"], ["547", "549"], ["550", "551"], ["550", "552"], ["552", "553"], ["553", "554"], ["553", "555"], ["556", "557"], ["558", "559"], ["558", "560"], ["558", "567"], ["558", "568"], ["558", "576"], ["560", "561"], ["560", "562"], ["562", "563"], ["562", "566"], ["563", "564"], ["563", "565"], ["568", "569"], ["568", "570"], ["570", "571"], ["571", "572"], ["571", "575"], ["572", "573"], ["572", "574"], ["576", "577"], ["576", "579"], ["577", "578"], ["579", "580"], ["579", "581"], ["579", "585"], ["579", "586"], ["579", "593"], ["579", "594"], ["579", "603"], ["581", "582"], ["581", "583"], ["583", "584"], ["586", "587"], ["586", "588"], ["588", "589"], ["588", "592"], ["589", "590"], ["589", "591"], ["594", "595"], ["594", "596"], ["596", "597"], ["596", "600"], ["597", "598"], ["597", "599"], ["600", "601"], ["600", "602"], ["603", "604"], ["603", "631"], ["604", "605"], ["604", "620"], ["605", "606"], ["605", "611"], ["606", "607"], ["606", "610"], ["607", "608"], ["607", "609"], ["611", "612"], ["611", "615"], ["612", "613"], ["612", "614"], ["615", "616"], ["615", "619"], ["616", "617"], ["616", "618"], ["620", "621"], ["620", "626"], ["621", "622"], ["621", "623"], ["623", "624"], ["623", "625"], ["626", "627"], ["626", "630"], ["627", "628"], ["627", "629"], ["631", "632"], ["632", "633"], ["632", "644"], ["633", "634"], ["633", "639"], ["634", "635"], ["634", "636"], ["636", "637"], ["636", "638"], ["639", "640"], ["639", "643"], ["640", "641"], ["640", "642"], ["644", "645"], ["644", "650"], ["645", "646"], ["645", "649"], ["646", "647"], ["646", "648"], ["650", "651"], ["650", "654"], ["651", "652"], ["651", "653"], ["654", "655"], ["654", "658"], ["655", "656"], ["655", "657"], ["659", "660"], ["659", "661"], ["661", "662"], ["661", "672"], ["662", "663"], ["662", "666"], ["663", "664"], ["663", "665"], ["666", "667"], ["666", "671"], ["667", "668"], ["668", "669"], ["668", "670"], ["673", "674"], ["27", "34"], ["30", "44"], ["42", "49"], ["47", "54"], ["52", "59"], ["57", "63"], ["253", "261"], ["259", "266"], ["262", "275"], ["673", "677"], ["29", "27"], ["44", "42"], ["49", "47"], ["54", "52"], ["59", "57"], ["63", "66"], ["66", "73"], ["66", "257"], ["69", "66"], ["255", "253"], ["261", "259"], ["275", "278"], ["278", "286"], ["278", "673"], ["281", "278"], ["32", "39"], ["35", "30"], ["72", "81"], ["80", "92"], ["91", "100"], ["100", "105"], ["159", "170"], ["257", "255"], ["264", "271"], ["267", "262"], ["284", "288"], ["287", "295"], ["291", "302"], ["298", "307"], ["305", "312"], ["349", "355"], ["378", "385"], ["383", "392"], ["390", "397"], ["431", "441"], ["524", "536"], ["659", "281"], ["34", "32"], ["37", "35"], ["73", "77"], ["76", "72"], ["81", "87"], ["92", "96"], ["95", "91"], ["105", "110"], ["108", "117"], ["108", "160"], ["113", "110"], ["160", "165"], ["163", "159"], ["170", "176"], ["173", "186"], ["173", "69"], ["179", "176"], ["266", "264"], ["269", "267"], ["286", "284"], ["288", "287"], ["293", "291"], ["300", "298"], ["307", "305"], ["312", "315"], ["315", "323"], ["315", "351"], ["318", "315"], ["351", "349"], ["355", "358"], ["358", "365"], ["358", "381"], ["361", "358"], ["381", "378"], ["385", "383"], ["392", "390"], ["397", "400"], ["400", "408"], ["400", "436"], ["403", "400"], ["433", "431"], ["441", "444"], ["444", "452"], ["444", "527"], ["447", "444"], ["526", "524"], ["536", "539"], ["539", "547"], ["539", "663"], ["542", "539"], ["661", "659"], ["39", "37"], ["77", "76"], ["85", "88"], ["88", "80"], ["96", "95"], ["110", "108"], ["117", "122"], ["164", "163"], ["175", "173"], ["183", "192"], ["212", "227"], ["271", "269"], ["295", "293"], ["302", "300"], ["321", "325"], ["324", "329"], ["364", "361"], ["435", "433"], ["527", "531"], ["530", "526"], ["662", "661"], ["87", "85"], ["122", "125"], ["125", "143"], ["125", "133"], ["128", "125"], ["143", "146"], ["143", "113"], ["165", "164"], ["176", "175"], ["185", "183"], ["192", "195"], ["195", "203"], ["195", "214"], ["198", "195"], ["213", "221"], ["227", "232"], ["230", "240"], ["230", "179"], ["235", "232"], ["323", "321"], ["325", "324"], ["329", "332"], ["332", "340"], ["332", "318"], ["335", "332"], ["365", "371"], ["408", "411"], ["411", "419"], ["411", "403"], ["414", "411"], ["436", "435"], ["452", "457"], ["455", "464"], ["455", "447"], ["460", "457"], ["531", "530"], ["547", "553"], ["550", "563"], ["550", "542"], ["556", "553"], ["663", "668"], ["666", "662"], ["145", "152"], ["150", "157"], ["157", "113"], ["186", "185"], ["201", "198"], ["214", "213"], ["219", "222"], ["222", "212"], ["232", "230"], ["338", "335"], ["369", "374"], ["372", "364"], ["417", "414"], ["457", "455"], ["464", "469"], ["494", "503"], ["501", "460"], ["552", "550"], ["560", "572"], ["568", "577"], ["667", "666"], ["132", "139"], ["132", "128"], ["139", "128"], ["146", "145"], ["151", "150"], ["202", "201"], ["221", "219"], ["239", "247"], ["239", "235"], ["339", "346"], ["344", "338"], ["371", "369"], ["374", "372"], ["418", "425"], ["423", "417"], ["469", "472"], ["472", "482"], ["472", "497"], ["475", "472"], ["496", "494"], ["502", "514"], ["511", "501"], ["553", "552"], ["562", "560"], ["570", "568"], ["577", "583"], ["577", "556"], ["668", "667"], ["133", "132"], ["152", "151"], ["203", "206"], ["206", "202"], ["240", "239"], ["245", "235"], ["340", "339"], ["346", "344"], ["419", "418"], ["424", "423"], ["497", "496"], ["503", "507"], ["506", "502"], ["513", "511"], ["563", "562"], ["571", "570"], ["581", "589"], ["586", "597"], ["594", "607"], ["246", "245"], ["425", "428"], ["428", "424"], ["479", "489"], ["479", "475"], ["486", "475"], ["507", "506"], ["514", "518"], ["517", "513"], ["572", "571"], ["583", "581"], ["588", "586"], ["596", "594"], ["604", "577"], ["604", "636"], ["247", "246"], ["480", "479"], ["488", "486"], ["518", "517"], ["589", "588"], ["597", "600"], ["600", "596"], ["605", "623"], ["620", "604"], ["632", "577"], ["482", "480"], ["489", "488"], ["606", "612"], ["611", "605"], ["621", "627"], ["626", "620"], ["633", "646"], ["644", "632"], ["607", "606"], ["612", "616"], ["615", "611"], ["623", "621"], ["627", "626"], ["634", "640"], ["639", "633"], ["645", "651"], ["650", "644"], ["616", "615"], ["636", "634"], ["640", "639"], ["646", "645"], ["651", "655"], ["654", "650"], ["655", "654"], ["24", "29"], ["25", "677"], ["27", "677"], ["35", "677"], ["35", "677"], ["35", "677"], ["30", "677"], ["42", "677"], ["42", "677"], ["42", "677"], ["47", "677"], ["47", "677"], ["47", "677"], ["52", "677"], ["52", "677"], ["57", "677"], ["57", "677"], ["57", "677"], ["63", "677"], ["66", "677"], ["66", "677"], ["255", "677"], ["257", "677"], ["255", "677"], ["253", "677"], ["253", "677"], ["259", "677"], ["264", "677"], ["267", "677"], ["267", "677"], ["267", "677"], ["262", "677"], ["275", "677"], ["278", "677"], ["278", "677"], ["278", "677"], ["673", "677"], ["673", "677"], ["284", "677"], ["288", "677"], ["287", "677"], ["287", "677"], ["291", "677"], ["302", "677"], ["300", "677"], ["298", "677"], ["298", "677"], ["305", "677"], ["305", "677"], ["305", "677"], ["349", "677"], ["349", "677"], ["355", "677"], ["358", "677"], ["358", "677"], ["378", "677"], ["378", "677"], ["378", "677"], ["385", "677"], ["383", "677"], ["383", "677"], ["390", "677"], ["390", "677"], ["390", "677"], ["397", "677"], ["400", "677"], ["400", "677"], ["400", "677"], ["431", "677"], ["431", "677"], ["431", "677"], ["524", "677"], ["526", "677"], ["524", "677"], ["524", "677"], ["536", "677"], ["539", "677"], ["539", "677"], ["539", "677"], ["667", "677"], ["666", "677"], ["661", "677"], ["659", "677"], ["659", "677"], ["281", "677"], ["547", "677"], ["550", "677"], ["550", "677"], ["542", "677"], ["560", "677"], ["560", "677"], ["560", "677"], ["570", "677"], ["568", "677"], ["577", "677"], ["577", "677"], ["556", "677"], ["586", "677"], ["586", "677"], ["586", "677"], ["594", "677"], ["600", "677"], ["600", "677"], ["594", "677"], ["594", "677"], ["605", "677"], ["605", "677"], ["604", "677"], ["604", "677"], ["604", "677"], ["632", "677"], ["644", "677"], ["644", "677"], ["632", "677"], ["632", "677"], ["452", "677"], ["455", "677"], ["457", "677"], ["455", "677"], ["455", "677"], ["447", "677"], ["464", "677"], ["469", "677"], ["472", "677"], ["472", "677"], ["494", "677"], ["494", "677"], ["494", "677"], ["501", "677"], ["511", "677"], ["511", "677"], ["501", "677"], ["501", "677"], ["460", "677"], ["480", "677"], ["479", "677"], ["479", "677"], ["486", "677"], ["486", "677"], ["475", "677"], ["408", "677"], ["411", "677"], ["411", "677"], ["403", "677"], ["417", "677"], ["417", "677"], ["417", "677"], ["414", "677"], ["364", "677"], ["369", "677"], ["372", "677"], ["372", "677"], ["372", "677"], ["364", "677"], ["361", "677"], ["321", "677"], ["324", "677"], ["325", "677"], ["324", "677"], ["324", "677"], ["318", "677"], ["338", "677"], ["346", "677"], ["344", "677"], ["338", "677"], ["338", "677"], ["335", "677"], ["72", "677"], ["72", "677"], ["88", "677"], ["88", "677"], ["80", "677"], ["91", "677"], ["91", "677"], ["91", "677"], ["100", "677"], ["100", "677"], ["105", "677"], ["108", "677"], ["108", "677"], ["108", "677"], ["159", "677"], ["159", "677"], ["159", "677"], ["170", "677"], ["173", "677"], ["175", "677"], ["173", "677"], ["173", "677"], ["69", "677"], ["183", "677"], ["183", "677"], ["183", "677"], ["192", "677"], ["195", "677"], ["195", "677"], ["212", "677"], ["222", "677"], ["222", "677"], ["212", "677"], ["227", "677"], ["230", "677"], ["230", "677"], ["230", "677"], ["179", "677"], ["240", "677"], ["239", "677"], ["239", "677"], ["245", "677"], ["245", "677"], ["235", "677"], ["206", "677"], ["201", "677"], ["201", "677"], ["201", "677"], ["198", "677"], ["117", "677"], ["117", "677"], ["122", "677"], ["125", "677"], ["125", "677"], ["145", "677"], ["150", "677"], ["150", "677"], ["157", "677"], ["157", "677"], ["113", "677"], ["133", "677"], ["132", "677"], ["132", "677"], ["139", "677"], ["139", "677"], ["128", "677"], ["381", "677"], ["378", "677"], ["24", "25"], ["24", "27"], ["44", "42"], ["49", "47"], ["54", "52"], ["59", "57"], ["255", "253"], ["255", "253"], ["24", "259"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["24", "63"], ["259", "262"], ["24", "262"], ["264", "262"], ["267", "262"], ["24", "275"], ["262", "673"], ["659", "673"], ["24", "673"], ["24", "32"], ["24", "40"], ["24", "44"], ["24", "49"], ["24", "54"], ["24", "59"], ["63", "66"], ["69", "66"], ["24", "66"], ["110", "69"], ["232", "69"], ["24", "69"], ["76", "72"], ["85", "80"], ["88", "80"], ["24", "80"], ["95", "91"], ["24", "100"], ["163", "159"], ["24", "255"], ["257", "255"], ["24", "264"], ["24", "272"], ["275", "278"], ["281", "278"], ["24", "278"], ["253", "278"], ["278", "281"], ["24", "281"], ["24", "284"], ["293", "291"], ["293", "291"], ["300", "298"], ["300", "298"], ["307", "305"], ["307", "305"], ["351", "349"], ["385", "383"], ["385", "383"], ["385", "383"], ["392", "390"], ["392", "390"], ["433", "431"], ["433", "431"], ["526", "524"], ["526", "524"], ["32", "35"], ["24", "35"], ["24", "105"], ["24", "170"], ["30", "257"], ["24", "257"], ["264", "267"], ["24", "267"], ["284", "287"], ["24", "287"], ["288", "287"], ["24", "312"], ["24", "355"], ["24", "378"], ["349", "378"], ["364", "378"], ["381", "378"], ["24", "397"], ["24", "441"], ["24", "536"], ["262", "659"], ["24", "659"], ["77", "76"], ["77", "76"], ["24", "85"], ["24", "90"], ["96", "95"], ["96", "95"], ["105", "108"], ["113", "108"], ["24", "108"], ["110", "108"], ["110", "108"], ["108", "113"], ["145", "113"], ["132", "113"], ["24", "113"], ["24", "117"], ["164", "163"], ["170", "173"], ["179", "173"], ["24", "173"], ["175", "173"], ["185", "179"], ["24", "179"], ["185", "183"], ["185", "183"], ["219", "212"], ["222", "212"], ["24", "212"], ["257", "288"], ["325", "288"], ["24", "288"], ["255", "293"], ["385", "293"], ["511", "293"], ["24", "293"], ["295", "293"], ["293", "300"], ["24", "300"], ["302", "300"], ["298", "307"], ["24", "307"], ["291", "307"], ["312", "315"], ["318", "315"], ["24", "315"], ["307", "315"], ["315", "318"], ["24", "318"], ["24", "321"], ["307", "351"], ["332", "351"], ["24", "351"], ["355", "358"], ["361", "358"], ["24", "358"], ["351", "358"], ["358", "361"], ["24", "361"], ["369", "364"], ["372", "364"], ["24", "364"], ["24", "381"], ["300", "385"], ["344", "385"], ["24", "385"], ["315", "385"], ["358", "385"], ["385", "392"], ["24", "392"], ["383", "392"], ["397", "400"], ["403", "400"], ["24", "400"], ["392", "400"], ["400", "403"], ["24", "403"], ["392", "433"], ["411", "433"], ["24", "433"], ["435", "433"], ["441", "444"], ["447", "444"], ["24", "444"], ["433", "444"], ["444", "447"], ["24", "447"], ["444", "526"], ["24", "526"], ["530", "526"], ["536", "539"], ["542", "539"], ["24", "539"], ["444", "539"], ["539", "542"], ["24", "542"], ["24", "661"], ["24", "77"], ["66", "77"], ["85", "88"], ["24", "88"], ["24", "96"], ["77", "96"], ["24", "110"], ["96", "110"], ["125", "110"], ["24", "122"], ["24", "143"], ["47", "164"], ["80", "164"], ["145", "164"], ["47", "175"], ["164", "175"], ["185", "175"], ["24", "192"], ["24", "227"], ["287", "295"], ["24", "295"], ["295", "302"], ["24", "302"], ["321", "324"], ["24", "324"], ["325", "324"], ["24", "329"], ["24", "408"], ["47", "435"], ["667", "435"], ["175", "435"], ["24", "452"], ["444", "527"], ["24", "527"], ["47", "530"], ["435", "530"], ["24", "547"], ["122", "125"], ["128", "125"], ["24", "125"], ["110", "125"], ["133", "125"], ["133", "128"], ["24", "128"], ["100", "150"], ["157", "150"], ["24", "150"], ["47", "185"], ["175", "185"], ["173", "185"], ["24", "185"], ["192", "195"], ["198", "195"], ["24", "195"], ["110", "195"], ["232", "195"], ["206", "195"], ["206", "198"], ["24", "198"], ["206", "201"], ["24", "201"], ["24", "219"], ["24", "224"], ["227", "230"], ["235", "230"], ["24", "230"], ["232", "230"], ["232", "230"], ["240", "235"], ["245", "235"], ["24", "235"], ["288", "325"], ["24", "325"], ["329", "332"], ["335", "332"], ["24", "332"], ["307", "332"], ["332", "335"], ["24", "335"], ["344", "338"], ["344", "338"], ["24", "369"], ["24", "377"], ["408", "411"], ["414", "411"], ["24", "411"], ["392", "411"], ["411", "414"], ["24", "414"], ["452", "455"], ["460", "455"], ["24", "455"], ["457", "455"], ["457", "455"], ["455", "460"], ["480", "460"], ["24", "460"], ["24", "464"], ["511", "501"], ["511", "501"], ["511", "501"], ["547", "550"], ["556", "550"], ["24", "550"], ["552", "550"], ["562", "556"], ["24", "556"], ["562", "560"], ["562", "560"], ["570", "568"], ["667", "666"], ["24", "666"], ["24", "139"], ["47", "145"], ["80", "145"], ["108", "145"], ["132", "145"], ["24", "145"], ["24", "157"], ["100", "157"], ["219", "222"], ["24", "222"], ["24", "232"], ["195", "232"], ["369", "372"], ["24", "372"], ["305", "372"], ["338", "372"], ["24", "457"], ["400", "457"], ["472", "457"], ["24", "469"], ["47", "552"], ["530", "552"], ["562", "552"], ["47", "667"], ["530", "667"], ["552", "667"], ["133", "132"], ["133", "132"], ["133", "132"], ["133", "132"], ["24", "132"], ["240", "239"], ["240", "239"], ["24", "239"], ["300", "344"], ["24", "344"], ["346", "344"], ["469", "472"], ["475", "472"], ["24", "472"], ["457", "472"], ["482", "475"], ["24", "475"], ["385", "511"], ["24", "511"], ["501", "511"], ["464", "511"], ["486", "511"], ["47", "562"], ["552", "562"], ["550", "562"], ["24", "562"], ["212", "570"], ["245", "570"], ["568", "577"], ["583", "577"], ["24", "577"], ["583", "581"], ["206", "133"], ["24", "133"], ["108", "133"], ["132", "133"], ["125", "133"], ["125", "133"], ["133", "206"], ["24", "206"], ["183", "206"], ["195", "206"], ["195", "206"], ["183", "240"], ["24", "240"], ["206", "240"], ["230", "240"], ["212", "245"], ["240", "245"], ["24", "245"], ["324", "346"], ["24", "346"], ["480", "479"], ["480", "479"], ["24", "479"], ["464", "486"], ["24", "486"], ["577", "583"], ["24", "583"], ["501", "604"], ["632", "604"], ["455", "480"], ["24", "480"], ["482", "480"], ["482", "480"], ["560", "600"], ["24", "600"], ["581", "600"], ["501", "605"], ["24", "482"], ["472", "482"], ["539", "623"], ["24", "623"], ["24", "636"], ["66", "76"], ["66", "80"], ["66", "100"], ["66", "108"], ["66", "160"], ["66", "72"], ["66", "176"], ["66", "73"], ["66", "96"], ["66", "77"], ["66", "85"], ["66", "87"], ["66", "105"], ["66", "165"], ["66", "110"], ["66", "163"], ["66", "95"], ["66", "170"], ["66", "88"], ["66", "66"], ["66", "159"], ["66", "81"], ["66", "69"], ["66", "92"], ["66", "91"], ["66", "173"], ["66", "164"], ["66", "175"], ["278", "668"], ["278", "383"], ["278", "392"], ["278", "300"], ["278", "524"], ["278", "315"], ["278", "390"], ["278", "355"], ["278", "536"], ["278", "441"], ["278", "305"], ["278", "397"], ["278", "527"], ["278", "291"], ["278", "400"], ["278", "287"], ["278", "663"], ["278", "444"], ["278", "435"], ["278", "358"], ["278", "298"], ["278", "302"], ["278", "378"], ["278", "349"], ["278", "281"], ["278", "288"], ["278", "659"], ["278", "667"], ["278", "278"], ["278", "530"], ["278", "666"], ["278", "351"], ["278", "539"], ["278", "385"], ["278", "307"], ["278", "433"], ["278", "284"], ["278", "661"], ["278", "293"], ["278", "662"], ["278", "531"], ["278", "286"], ["278", "295"], ["278", "526"], ["278", "381"], ["278", "431"], ["278", "312"], ["278", "436"], ["108", "108"], ["108", "122"], ["108", "117"], ["108", "113"], ["108", "110"], ["108", "125"], ["108", "143"], ["173", "186"], ["173", "176"], ["173", "179"], ["173", "232"], ["173", "214"], ["173", "230"], ["173", "192"], ["173", "213"], ["173", "195"], ["173", "227"], ["173", "222"], ["173", "185"], ["173", "173"], ["173", "212"], ["173", "221"], ["173", "183"], ["173", "175"], ["173", "219"], ["315", "324"], ["315", "315"], ["315", "329"], ["315", "323"], ["315", "325"], ["315", "318"], ["315", "321"], ["315", "332"], ["358", "364"], ["358", "372"], ["358", "365"], ["358", "361"], ["358", "358"], ["358", "374"], ["358", "371"], ["358", "369"], ["400", "408"], ["400", "400"], ["400", "403"], ["400", "411"], ["444", "452"], ["444", "444"], ["444", "447"], ["444", "457"], ["444", "455"], ["539", "552"], ["539", "550"], ["539", "553"], ["539", "539"], ["539", "547"], ["539", "542"], ["125", "133"], ["125", "132"], ["125", "125"], ["125", "128"], ["143", "152"], ["143", "151"], ["143", "146"], ["143", "150"], ["143", "145"], ["143", "157"], ["195", "201"], ["195", "206"], ["195", "195"], ["195", "202"], ["195", "198"], ["195", "203"], ["230", "240"], ["230", "232"], ["230", "239"], ["230", "230"], ["230", "235"], ["332", "340"], ["332", "344"], ["332", "338"], ["332", "346"], ["332", "335"], ["332", "339"], ["332", "332"], ["411", "428"], ["411", "418"], ["411", "425"], ["411", "417"], ["411", "419"], ["411", "414"], ["411", "424"], ["411", "411"], ["411", "423"], ["455", "460"], ["455", "494"], ["455", "517"], ["455", "472"], ["455", "513"], ["455", "506"], ["455", "501"], ["455", "469"], ["455", "514"], ["455", "464"], ["455", "503"], ["455", "511"], ["455", "518"], ["455", "457"], ["455", "507"], ["455", "497"], ["455", "455"], ["455", "502"], ["455", "496"], ["550", "577"], ["550", "562"], ["550", "552"], ["550", "563"], ["550", "556"], ["550", "550"], ["550", "568"], ["550", "570"], ["550", "560"], ["550", "571"], ["550", "572"], ["550", "553"], ["132", "139"], ["239", "247"], ["239", "246"], ["239", "245"], ["472", "480"], ["472", "479"], ["472", "472"], ["472", "482"], ["472", "475"], ["577", "616"], ["577", "577"], ["577", "596"], ["577", "600"], ["577", "623"], ["577", "604"], ["577", "612"], ["577", "583"], ["577", "615"], ["577", "620"], ["577", "627"], ["577", "594"], ["577", "589"], ["577", "586"], ["577", "581"], ["577", "621"], ["577", "597"], ["577", "605"], ["577", "588"], ["577", "607"], ["577", "611"], ["577", "626"], ["577", "606"], ["479", "486"], ["479", "489"], ["479", "488"], ["604", "644"], ["604", "634"], ["604", "645"], ["604", "646"], ["604", "639"], ["604", "632"], ["604", "640"], ["604", "650"], ["604", "636"], ["604", "654"], ["604", "655"], ["604", "633"], ["604", "651"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,ANY nexts = new ArrayList[13][])<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new ArrayList[13][])>", "46": "<(LOCAL,ArrayList&lt;Integer&gt;[] bs: ANY)<SUB>4</SUB>>", "48": "<(IDENTIFIER,bs,ANY bs = new ArrayList[13])<SUB>4</SUB>>", "50": "<(LITERAL,13,new ArrayList[13])<SUB>4</SUB>>", "52": "<(&lt;operator&gt;.assignment,int[][] index = new int[13][])<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.alloc,new int[13][])>", "56": "<(LOCAL,int[][] eqcl: int[][])<SUB>6</SUB>>", "58": "<(IDENTIFIER,eqcl,int[][] eqcl = new int[13][])<SUB>6</SUB>>", "60": "<(LITERAL,13,new int[13][])<SUB>6</SUB>>", "62": "<(LOCAL,int n: int)<SUB>7</SUB>>", "64": "<(IDENTIFIER,n,int n = 1)<SUB>7</SUB>>", "66": "<(&lt;operator&gt;.lessEqualsThan,n &lt;= 12)<SUB>7</SUB>>", "68": "<(LITERAL,12,n &lt;= 12)<SUB>7</SUB>>", "70": "<(IDENTIFIER,n,n++)<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.assignment,eqcl[n] = new int[(1 &lt;&lt; n)])<SUB>8</SUB>>", "74": "<(IDENTIFIER,eqcl,eqcl[n] = new int[(1 &lt;&lt; n)])<SUB>8</SUB>>", "76": "<(&lt;operator&gt;.alloc,new int[(1 &lt;&lt; n)])>", "78": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "80": "<(&lt;operator&gt;.assignment,bs[n] = new ArrayList&lt;Integer&gt;())<SUB>9</SUB>>", "82": "<(IDENTIFIER,bs,bs[n] = new ArrayList&lt;Integer&gt;())<SUB>9</SUB>>", "84": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "86": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "88": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>9</SUB>>", "90": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "92": "<(&lt;operator&gt;.indexAccess,index[n])<SUB>10</SUB>>", "94": "<(IDENTIFIER,n,index[n] = new int[(1 &lt;&lt; n)])<SUB>10</SUB>>", "96": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>10</SUB>>", "98": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>10</SUB>>", "100": "<(&lt;operator&gt;.assignment,int ind = 0)<SUB>11</SUB>>", "102": "<(LITERAL,0,int ind = 0)<SUB>11</SUB>>", "104": "<(LOCAL,int mask: int)<SUB>12</SUB>>", "106": "<(IDENTIFIER,mask,int mask = 0)<SUB>12</SUB>>", "108": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>12</SUB>>", "110": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>12</SUB>>", "112": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>12</SUB>>", "114": "<(IDENTIFIER,mask,mask++)<SUB>12</SUB>>", "116": "<(LOCAL,boolean add: boolean)<SUB>13</SUB>>", "118": "<(IDENTIFIER,add,boolean add = true)<SUB>13</SUB>>", "120": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>14</SUB>>", "122": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>14</SUB>>", "124": "<(LITERAL,0,int k = 0)<SUB>14</SUB>>", "126": "<(IDENTIFIER,k,k &lt; n)<SUB>14</SUB>>", "128": "<(&lt;operator&gt;.postIncrement,k++)<SUB>14</SUB>>", "130": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "132": "<(&lt;operator&gt;.lessThan,rot(mask, k, n) &lt; mask)<SUB>15</SUB>>", "134": "<(IDENTIFIER,this,rot(mask, k, n))<SUB>15</SUB>>", "136": "<(IDENTIFIER,k,rot(mask, k, n))<SUB>15</SUB>>", "138": "<(IDENTIFIER,mask,rot(mask, k, n) &lt; mask)<SUB>15</SUB>>", "140": "<(IDENTIFIER,add,add = false)<SUB>15</SUB>>", "142": "<(CONTROL_STRUCTURE,if (add),if (add))<SUB>17</SUB>>", "144": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "146": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>18</SUB>>", "148": "<(IDENTIFIER,n,add(mask))<SUB>18</SUB>>", "150": "<(&lt;operator&gt;.assignment,index[n][mask] = ind)<SUB>19</SUB>>", "152": "<(&lt;operator&gt;.indexAccess,index[n])<SUB>19</SUB>>", "154": "<(IDENTIFIER,n,index[n][mask] = ind)<SUB>19</SUB>>", "156": "<(IDENTIFIER,ind,index[n][mask] = ind)<SUB>19</SUB>>", "158": "<(IDENTIFIER,ind,ind++)<SUB>19</SUB>>", "160": "<(&lt;operator&gt;.indexAccess,nexts[n])<SUB>22</SUB>>", "162": "<(IDENTIFIER,n,nexts[n] = new ArrayList[bs[n].size()])<SUB>22</SUB>>", "164": "<(size,size())<SUB>22</SUB>>", "166": "<(IDENTIFIER,bs,size())<SUB>22</SUB>>", "168": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; bs[n].size()); i++),for (int i = 0; Some(i &lt; bs[n].size()); i++))<SUB>23</SUB>>", "170": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>23</SUB>>", "172": "<(LITERAL,0,int i = 0)<SUB>23</SUB>>", "174": "<(IDENTIFIER,i,i &lt; bs[n].size())<SUB>23</SUB>>", "176": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>23</SUB>>", "178": "<(IDENTIFIER,n,size())<SUB>23</SUB>>", "180": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "182": "<(LOCAL,int mask: int)<SUB>24</SUB>>", "184": "<(IDENTIFIER,mask,int mask = get(i))<SUB>24</SUB>>", "186": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>24</SUB>>", "188": "<(IDENTIFIER,n,get(i))<SUB>24</SUB>>", "190": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; n); k++),for (int k = 0; Some(k &lt; n); k++))<SUB>25</SUB>>", "192": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>25</SUB>>", "194": "<(LITERAL,0,int k = 0)<SUB>25</SUB>>", "196": "<(IDENTIFIER,k,k &lt; n)<SUB>25</SUB>>", "198": "<(&lt;operator&gt;.postIncrement,k++)<SUB>25</SUB>>", "200": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "202": "<(&lt;operator&gt;.indexAccess,eqcl[n][rot(mask, k, n)])<SUB>26</SUB>>", "204": "<(IDENTIFIER,eqcl,eqcl[n][rot(mask, k, n)] = mask)<SUB>26</SUB>>", "206": "<(rot,rot(mask, k, n))<SUB>26</SUB>>", "208": "<(IDENTIFIER,mask,rot(mask, k, n))<SUB>26</SUB>>", "210": "<(IDENTIFIER,n,rot(mask, k, n))<SUB>26</SUB>>", "212": "<(&lt;operator&gt;.assignment,nexts[n][i] = new ArrayList&lt;&gt;())<SUB>28</SUB>>", "214": "<(&lt;operator&gt;.indexAccess,nexts[n])<SUB>28</SUB>>", "216": "<(IDENTIFIER,n,nexts[n][i] = new ArrayList&lt;&gt;())<SUB>28</SUB>>", "218": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "220": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "222": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>28</SUB>>", "224": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "226": "<(LOCAL,int y: int)<SUB>29</SUB>>", "228": "<(IDENTIFIER,y,int y = 0)<SUB>29</SUB>>", "230": "<(&lt;operator&gt;.lessThan,y &lt; (1 &lt;&lt; n))<SUB>29</SUB>>", "232": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>29</SUB>>", "234": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>29</SUB>>", "236": "<(IDENTIFIER,y,y++)<SUB>29</SUB>>", "238": "<(CONTROL_STRUCTURE,if ((mask &amp; y) == 0),if ((mask &amp; y) == 0))<SUB>30</SUB>>", "240": "<(&lt;operator&gt;.and,mask &amp; y)<SUB>30</SUB>>", "242": "<(IDENTIFIER,y,mask &amp; y)<SUB>30</SUB>>", "244": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "246": "<(&lt;operator&gt;.indexAccess,nexts[n][i])<SUB>31</SUB>>", "248": "<(IDENTIFIER,nexts,add(y))<SUB>31</SUB>>", "250": "<(IDENTIFIER,i,add(y))<SUB>31</SUB>>", "252": "<(LOCAL,int T: int)<SUB>36</SUB>>", "254": "<(IDENTIFIER,T,int T = parseInt(br.readLine()))<SUB>36</SUB>>", "256": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>36</SUB>>", "258": "<(IDENTIFIER,br,readLine())<SUB>36</SUB>>", "259": "<(&lt;operator&gt;.assignment,ANY bw = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>37</SUB>>", "261": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>37</SUB>>", "5": "<(IDENTIFIER,bw,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>37</SUB>>", "264": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "266": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>37</SUB>>", "268": "<(IDENTIFIER,$obj4,new OutputStreamWriter(System.out))>", "270": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>37</SUB>>", "272": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "274": "<(LOCAL,int test: int)<SUB>38</SUB>>", "276": "<(IDENTIFIER,test,int test = 0)<SUB>38</SUB>>", "278": "<(&lt;operator&gt;.lessThan,test &lt; T)<SUB>38</SUB>>", "280": "<(IDENTIFIER,T,test &lt; T)<SUB>38</SUB>>", "282": "<(IDENTIFIER,test,test++)<SUB>38</SUB>>", "8": "<(LOCAL,StringTokenizer st: ANY)<SUB>39</SUB>>", "285": "<(IDENTIFIER,st,ANY st = new StringTokenizer(br.readLine()))<SUB>39</SUB>>", "287": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>39</SUB>>", "288": "<(readLine,readLine())<SUB>39</SUB>>", "290": "<(LOCAL,int n: int)<SUB>40</SUB>>", "292": "<(IDENTIFIER,n,int n = parseInt(st.nextToken()))<SUB>40</SUB>>", "294": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>40</SUB>>", "296": "<(IDENTIFIER,st,nextToken())<SUB>40</SUB>>", "298": "<(&lt;operator&gt;.assignment,int m = parseInt(st.nextToken()))<SUB>41</SUB>>", "300": "<(parseInt,parseInt(st.nextToken()))<SUB>41</SUB>>", "302": "<(nextToken,nextToken())<SUB>41</SUB>>", "304": "<(LOCAL,int[][] arrt: int[][])<SUB>42</SUB>>", "306": "<(IDENTIFIER,arrt,int[][] arrt = new int[m][n])<SUB>42</SUB>>", "308": "<(IDENTIFIER,m,new int[m][n])<SUB>42</SUB>>", "310": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>43</SUB>>", "312": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>43</SUB>>", "314": "<(LITERAL,0,int i = 0)<SUB>43</SUB>>", "316": "<(IDENTIFIER,i,i &lt; n)<SUB>43</SUB>>", "318": "<(&lt;operator&gt;.postIncrement,i++)<SUB>43</SUB>>", "320": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "322": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>44</SUB>>", "324": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>44</SUB>>", "325": "<(readLine,readLine())<SUB>44</SUB>>", "327": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>45</SUB>>", "329": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>45</SUB>>", "331": "<(LITERAL,0,int j = 0)<SUB>45</SUB>>", "333": "<(IDENTIFIER,j,j &lt; m)<SUB>45</SUB>>", "335": "<(&lt;operator&gt;.postIncrement,j++)<SUB>45</SUB>>", "337": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "339": "<(&lt;operator&gt;.indexAccess,arrt[j][i])<SUB>46</SUB>>", "341": "<(IDENTIFIER,arrt,arrt[j][i] = parseInt(st.nextToken()))<SUB>46</SUB>>", "343": "<(IDENTIFIER,i,arrt[j][i] = parseInt(st.nextToken()))<SUB>46</SUB>>", "345": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>46</SUB>>", "347": "<(IDENTIFIER,st,nextToken())<SUB>46</SUB>>", "349": "<(&lt;operator&gt;.assignment,ANY cols = new Column[m])<SUB>49</SUB>>", "351": "<(&lt;operator&gt;.alloc,new Column[m])>", "353": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>50</SUB>>", "355": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>50</SUB>>", "357": "<(LITERAL,0,int j = 0)<SUB>50</SUB>>", "359": "<(IDENTIFIER,j,j &lt; m)<SUB>50</SUB>>", "361": "<(&lt;operator&gt;.postIncrement,j++)<SUB>50</SUB>>", "363": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,cols[j])<SUB>51</SUB>>", "367": "<(IDENTIFIER,j,cols[j] = new Column(arrt[j]))<SUB>51</SUB>>", "369": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "371": "<(&lt;operator&gt;.alloc,new Column(arrt[j]))<SUB>51</SUB>>", "373": "<(IDENTIFIER,$obj8,new Column(arrt[j]))>", "375": "<(IDENTIFIER,arrt,new Column(arrt[j]))<SUB>51</SUB>>", "377": "<(IDENTIFIER,$obj8,&lt;empty&gt;)>", "379": "<(IDENTIFIER,Arrays,sort(cols, Collections.reverseOrder()))<SUB>53</SUB>>", "381": "<(reverseOrder,reverseOrder())<SUB>53</SUB>>", "383": "<(&lt;operator&gt;.assignment,m = Integer.min(n, m))<SUB>54</SUB>>", "385": "<(min,Integer.min(n, m))<SUB>54</SUB>>", "387": "<(IDENTIFIER,n,Integer.min(n, m))<SUB>54</SUB>>", "389": "<(LOCAL,int[][] arr: int[][])<SUB>55</SUB>>", "391": "<(IDENTIFIER,arr,int[][] arr = new int[n][m])<SUB>55</SUB>>", "393": "<(IDENTIFIER,n,new int[n][m])<SUB>55</SUB>>", "395": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>56</SUB>>", "397": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>56</SUB>>", "399": "<(LITERAL,0,int i = 0)<SUB>56</SUB>>", "401": "<(IDENTIFIER,i,i &lt; n)<SUB>56</SUB>>", "403": "<(&lt;operator&gt;.postIncrement,i++)<SUB>56</SUB>>", "405": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>>", "407": "<(LOCAL,int j: int)<SUB>57</SUB>>", "409": "<(IDENTIFIER,j,int j = 0)<SUB>57</SUB>>", "411": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>57</SUB>>", "413": "<(IDENTIFIER,m,j &lt; m)<SUB>57</SUB>>", "415": "<(IDENTIFIER,j,j++)<SUB>57</SUB>>", "417": "<(&lt;operator&gt;.assignment,arr[i][j] = cols[j].arr[i])<SUB>58</SUB>>", "419": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>58</SUB>>", "421": "<(IDENTIFIER,i,arr[i][j] = cols[j].arr[i])<SUB>58</SUB>>", "423": "<(&lt;operator&gt;.indexAccess,cols[j].arr[i])<SUB>58</SUB>>", "425": "<(&lt;operator&gt;.indexAccess,cols[j])<SUB>58</SUB>>", "427": "<(IDENTIFIER,j,arr[i][j] = cols[j].arr[i])<SUB>58</SUB>>", "429": "<(IDENTIFIER,i,arr[i][j] = cols[j].arr[i])<SUB>58</SUB>>", "431": "<(&lt;operator&gt;.assignment,int[][] max = new int[m][bs[n].size()])<SUB>61</SUB>>", "433": "<(&lt;operator&gt;.alloc,new int[m][bs[n].size()])>", "435": "<(size,size())<SUB>61</SUB>>", "437": "<(IDENTIFIER,bs,size())<SUB>61</SUB>>", "439": "<(CONTROL_STRUCTURE,for (int c = 0; Some(c &lt; m); c++),for (int c = 0; Some(c &lt; m); c++))<SUB>62</SUB>>", "441": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>62</SUB>>", "443": "<(LITERAL,0,int c = 0)<SUB>62</SUB>>", "445": "<(IDENTIFIER,c,c &lt; m)<SUB>62</SUB>>", "447": "<(&lt;operator&gt;.postIncrement,c++)<SUB>62</SUB>>", "449": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>>", "451": "<(LOCAL,int mask: int)<SUB>63</SUB>>", "453": "<(IDENTIFIER,mask,int mask = 0)<SUB>63</SUB>>", "455": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; n))<SUB>63</SUB>>", "457": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>63</SUB>>", "459": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>63</SUB>>", "461": "<(IDENTIFIER,mask,mask++)<SUB>63</SUB>>", "463": "<(LOCAL,int curr: int)<SUB>64</SUB>>", "465": "<(IDENTIFIER,curr,int curr = 0)<SUB>64</SUB>>", "467": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>65</SUB>>", "469": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>65</SUB>>", "471": "<(LITERAL,0,int i = 0)<SUB>65</SUB>>", "473": "<(IDENTIFIER,i,i &lt; n)<SUB>65</SUB>>", "475": "<(&lt;operator&gt;.postIncrement,i++)<SUB>65</SUB>>", "477": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>65</SUB>>", "479": "<(&lt;operator&gt;.greaterThan,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>66</SUB>>", "481": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; i))<SUB>66</SUB>>", "483": "<(LITERAL,1,1 &lt;&lt; i)<SUB>66</SUB>>", "485": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; i)) &gt; 0)<SUB>66</SUB>>", "487": "<(IDENTIFIER,curr,curr += arr[i][c])<SUB>66</SUB>>", "489": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>66</SUB>>", "491": "<(IDENTIFIER,i,curr += arr[i][c])<SUB>66</SUB>>", "493": "<(LOCAL,int cl: int)<SUB>68</SUB>>", "495": "<(IDENTIFIER,cl,int cl = eqcl[n][mask])<SUB>68</SUB>>", "497": "<(&lt;operator&gt;.indexAccess,eqcl[n])<SUB>68</SUB>>", "499": "<(IDENTIFIER,n,int cl = eqcl[n][mask])<SUB>68</SUB>>", "501": "<(&lt;operator&gt;.assignment,max[c][index[n][cl]] = Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "503": "<(&lt;operator&gt;.indexAccess,max[c])<SUB>69</SUB>>", "505": "<(IDENTIFIER,c,max[c][index[n][cl]] = Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "507": "<(&lt;operator&gt;.indexAccess,index[n])<SUB>69</SUB>>", "509": "<(IDENTIFIER,n,max[c][index[n][cl]] = Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "511": "<(max,Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "513": "<(&lt;operator&gt;.indexAccess,max[c][index[n][cl]])<SUB>69</SUB>>", "515": "<(IDENTIFIER,max,Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "517": "<(&lt;operator&gt;.indexAccess,index[n][cl])<SUB>69</SUB>>", "519": "<(IDENTIFIER,index,Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "521": "<(IDENTIFIER,cl,Integer.max(max[c][index[n][cl]], curr))<SUB>69</SUB>>", "523": "<(LOCAL,int[][] dp: int[][])<SUB>72</SUB>>", "525": "<(IDENTIFIER,dp,int[][] dp = new int[m + 1][bs[n].size()])<SUB>72</SUB>>", "527": "<(&lt;operator&gt;.addition,m + 1)<SUB>72</SUB>>", "529": "<(LITERAL,1,m + 1)<SUB>72</SUB>>", "531": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>72</SUB>>", "533": "<(IDENTIFIER,n,size())<SUB>72</SUB>>", "535": "<(LOCAL,int c: int)<SUB>73</SUB>>", "537": "<(IDENTIFIER,c,int c = 0)<SUB>73</SUB>>", "539": "<(&lt;operator&gt;.lessThan,c &lt; m)<SUB>73</SUB>>", "541": "<(IDENTIFIER,m,c &lt; m)<SUB>73</SUB>>", "543": "<(IDENTIFIER,c,c++)<SUB>73</SUB>>", "545": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; bs[n].size()); i++),for (int i = 0; Some(i &lt; bs[n].size()); i++))<SUB>74</SUB>>", "547": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>74</SUB>>", "549": "<(LITERAL,0,int i = 0)<SUB>74</SUB>>", "551": "<(IDENTIFIER,i,i &lt; bs[n].size())<SUB>74</SUB>>", "553": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>74</SUB>>", "555": "<(IDENTIFIER,n,size())<SUB>74</SUB>>", "557": "<(IDENTIFIER,i,i++)<SUB>74</SUB>>", "559": "<(LOCAL,int mask: int)<SUB>75</SUB>>", "561": "<(IDENTIFIER,mask,int mask = get(i))<SUB>75</SUB>>", "563": "<(&lt;operator&gt;.indexAccess,bs[n])<SUB>75</SUB>>", "565": "<(IDENTIFIER,n,get(i))<SUB>75</SUB>>", "567": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>76</SUB>>", "569": "<(IDENTIFIER,$iterLocal0,)<SUB>76</SUB>>", "571": "<(&lt;operator&gt;.indexAccess,nexts[n][i])<SUB>76</SUB>>", "573": "<(IDENTIFIER,nexts,&lt;empty&gt;)<SUB>76</SUB>>", "575": "<(IDENTIFIER,i,&lt;empty&gt;)<SUB>76</SUB>>", "577": "<(hasNext,&lt;empty&gt;)<SUB>76</SUB>>", "579": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>76</SUB>>", "581": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>76</SUB>>", "583": "<(next,&lt;empty&gt;)<SUB>76</SUB>>", "585": "<(LOCAL,int cl: int)<SUB>77</SUB>>", "587": "<(IDENTIFIER,cl,int cl = eqcl[n][next])<SUB>77</SUB>>", "589": "<(&lt;operator&gt;.indexAccess,eqcl[n])<SUB>77</SUB>>", "591": "<(IDENTIFIER,n,int cl = eqcl[n][next])<SUB>77</SUB>>", "593": "<(LOCAL,int dl: int)<SUB>78</SUB>>", "595": "<(IDENTIFIER,dl,int dl = eqcl[n][mask | next])<SUB>78</SUB>>", "597": "<(&lt;operator&gt;.indexAccess,eqcl[n])<SUB>78</SUB>>", "599": "<(IDENTIFIER,n,int dl = eqcl[n][mask | next])<SUB>78</SUB>>", "601": "<(IDENTIFIER,mask,mask | next)<SUB>78</SUB>>", "603": "<(CONTROL_STRUCTURE,if (dp[c][i] + max[c][index[n][cl]] &gt; dp[c + 1][index[n][dl]]),if (dp[c][i] + max[c][index[n][cl]] &gt; dp[c + 1][index[n][dl]]))<SUB>79</SUB>>", "605": "<(&lt;operator&gt;.addition,dp[c][i] + max[c][index[n][cl]])<SUB>79</SUB>>", "607": "<(&lt;operator&gt;.indexAccess,dp[c])<SUB>79</SUB>>", "609": "<(IDENTIFIER,c,dp[c][i] + max[c][index[n][cl]])<SUB>79</SUB>>", "611": "<(&lt;operator&gt;.indexAccess,max[c][index[n][cl]])<SUB>79</SUB>>", "613": "<(IDENTIFIER,max,dp[c][i] + max[c][index[n][cl]])<SUB>79</SUB>>", "615": "<(&lt;operator&gt;.indexAccess,index[n][cl])<SUB>79</SUB>>", "617": "<(IDENTIFIER,index,dp[c][i] + max[c][index[n][cl]])<SUB>79</SUB>>", "619": "<(IDENTIFIER,cl,dp[c][i] + max[c][index[n][cl]])<SUB>79</SUB>>", "621": "<(&lt;operator&gt;.indexAccess,dp[c + 1])<SUB>79</SUB>>", "623": "<(&lt;operator&gt;.addition,c + 1)<SUB>79</SUB>>", "625": "<(LITERAL,1,c + 1)<SUB>79</SUB>>", "627": "<(&lt;operator&gt;.indexAccess,index[n])<SUB>79</SUB>>", "629": "<(IDENTIFIER,n,dp[c][i] + max[c][index[n][cl]] &gt; dp[c + 1][index[n][dl]])<SUB>79</SUB>>", "631": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>79</SUB>>", "633": "<(&lt;operator&gt;.indexAccess,dp[c + 1][index[n][dl]])<SUB>80</SUB>>", "635": "<(IDENTIFIER,dp,dp[c + 1][index[n][dl]] = dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "637": "<(IDENTIFIER,c,c + 1)<SUB>80</SUB>>", "639": "<(&lt;operator&gt;.indexAccess,index[n][dl])<SUB>80</SUB>>", "641": "<(IDENTIFIER,index,dp[c + 1][index[n][dl]] = dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "643": "<(IDENTIFIER,dl,dp[c + 1][index[n][dl]] = dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "645": "<(&lt;operator&gt;.indexAccess,dp[c][i])<SUB>80</SUB>>", "647": "<(IDENTIFIER,dp,dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "649": "<(IDENTIFIER,i,dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "651": "<(&lt;operator&gt;.indexAccess,max[c])<SUB>80</SUB>>", "653": "<(IDENTIFIER,c,dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "655": "<(&lt;operator&gt;.indexAccess,index[n])<SUB>80</SUB>>", "657": "<(IDENTIFIER,n,dp[c][i] + max[c][index[n][cl]])<SUB>80</SUB>>", "659": "<(write,write(dp[m][bs[n].size() - 1] + &quot;\\n&quot;))<SUB>85</SUB>>", "661": "<(&lt;operator&gt;.addition,dp[m][bs[n].size() - 1] + &quot;\\n&quot;)<SUB>85</SUB>>", "663": "<(&lt;operator&gt;.indexAccess,dp[m])<SUB>85</SUB>>", "665": "<(IDENTIFIER,m,dp[m][bs[n].size() - 1] + &quot;\\n&quot;)<SUB>85</SUB>>", "667": "<(size,size())<SUB>85</SUB>>", "669": "<(IDENTIFIER,bs,size())<SUB>85</SUB>>", "671": "<(LITERAL,1,bs[n].size() - 1)<SUB>85</SUB>>", "673": "<(flush,flush())<SUB>87</SUB>>", "675": "<(MODIFIER,PUBLIC)>", "677": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}