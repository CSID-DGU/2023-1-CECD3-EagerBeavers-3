{"edges": [["23", "25"], ["23", "143"], ["23", "144"], ["23", "145"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "8"], ["25", "54"], ["25", "57"], ["25", "59"], ["25", "61"], ["25", "62"], ["25", "69"], ["25", "70"], ["25", "74"], ["25", "96"], ["25", "99"], ["25", "100"], ["25", "105"], ["25", "106"], ["25", "109"], ["25", "122"], ["25", "139"], ["25", "141"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "53"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["57", "7"], ["57", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "87"], ["85", "86"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["122", "123"], ["122", "126"], ["122", "134"], ["123", "124"], ["123", "125"], ["126", "127"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["135", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["26", "33"], ["29", "42"], ["40", "47"], ["43", "56"], ["54", "57"], ["57", "59"], ["59", "65"], ["62", "72"], ["70", "76"], ["96", "102"], ["100", "106"], ["106", "111"], ["139", "141"], ["141", "145"], ["28", "26"], ["42", "40"], ["56", "54"], ["64", "62"], ["72", "70"], ["76", "79"], ["79", "85"], ["79", "96"], ["82", "79"], ["102", "100"], ["110", "120"], ["110", "123"], ["123", "131"], ["123", "136"], ["31", "38"], ["34", "29"], ["45", "52"], ["48", "43"], ["65", "68"], ["66", "64"], ["85", "88"], ["87", "82"], ["111", "110"], ["111", "116"], ["114", "110"], ["120", "111"], ["127", "139"], ["33", "31"], ["36", "34"], ["47", "45"], ["50", "48"], ["68", "66"], ["88", "92"], ["91", "87"], ["116", "114"], ["129", "127"], ["136", "139"], ["38", "36"], ["52", "50"], ["92", "95"], ["93", "91"], ["131", "129"], ["95", "93"], ["23", "28"], ["24", "145"], ["26", "145"], ["34", "145"], ["34", "145"], ["34", "145"], ["29", "145"], ["40", "145"], ["45", "145"], ["48", "145"], ["48", "145"], ["48", "145"], ["43", "145"], ["54", "145"], ["57", "145"], ["59", "145"], ["59", "145"], ["64", "145"], ["62", "145"], ["62", "145"], ["70", "145"], ["70", "145"], ["76", "145"], ["96", "145"], ["96", "145"], ["100", "145"], ["100", "145"], ["100", "145"], ["106", "145"], ["114", "145"], ["114", "145"], ["110", "145"], ["110", "145"], ["123", "145"], ["123", "145"], ["123", "145"], ["136", "145"], ["129", "145"], ["127", "145"], ["127", "145"], ["139", "145"], ["141", "145"], ["141", "145"], ["120", "145"], ["85", "145"], ["85", "145"], ["87", "145"], ["91", "145"], ["87", "145"], ["87", "145"], ["82", "145"], ["96", "145"], ["129", "145"], ["23", "24"], ["23", "26"], ["23", "40"], ["23", "54"], ["23", "62"], ["59", "62"], ["72", "70"], ["96", "100"], ["23", "106"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["45", "43"], ["48", "43"], ["54", "57"], ["23", "57"], ["29", "57"], ["57", "59"], ["23", "59"], ["23", "76"], ["23", "96"], ["70", "96"], ["87", "96"], ["57", "139"], ["23", "139"], ["136", "141"], ["127", "141"], ["23", "141"], ["23", "31"], ["23", "39"], ["23", "45"], ["23", "53"], ["23", "64"], ["59", "64"], ["62", "72"], ["23", "72"], ["76", "79"], ["82", "79"], ["23", "79"], ["72", "79"], ["79", "82"], ["23", "82"], ["23", "87"], ["85", "87"], ["111", "110"], ["111", "110"], ["114", "110"], ["114", "110"], ["111", "123"], ["23", "123"], ["111", "123"], ["31", "34"], ["23", "34"], ["45", "48"], ["23", "48"], ["59", "85"], ["23", "85"], ["106", "111"], ["120", "111"], ["23", "111"], ["79", "111"], ["100", "114"], ["23", "114"], ["96", "114"], ["87", "114"], ["111", "120"], ["23", "120"], ["43", "127"], ["23", "127"], ["129", "127"], ["129", "127"], ["23", "91"], ["85", "91"], ["23", "129"], ["96", "129"], ["114", "129"], ["87", "129"], ["43", "136"], ["23", "136"], ["79", "85"], ["79", "88"], ["79", "95"], ["79", "92"], ["79", "87"], ["79", "91"], ["79", "82"], ["79", "93"], ["79", "79"], ["110", "120"], ["110", "110"], ["110", "111"], ["123", "136"], ["123", "131"], ["123", "127"], ["123", "129"], ["111", "116"], ["111", "114"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY input = new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "3": "<(IDENTIFIER,input,new BufferedReader(new InputStreamReader(System.in)))<SUB>5</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>5</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>5</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY output = new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>6</SUB>>", "42": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>6</SUB>>", "5": "<(IDENTIFIER,output,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>6</SUB>>", "49": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "51": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>6</SUB>>", "53": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "54": "<(&lt;operator&gt;.assignment,ANY in = new StreamTokenizer(input))<SUB>7</SUB>>", "56": "<(&lt;operator&gt;.alloc,new StreamTokenizer(input))<SUB>7</SUB>>", "7": "<(IDENTIFIER,in,new StreamTokenizer(input))<SUB>7</SUB>>", "59": "<(nextToken,nextToken())<SUB>9</SUB>>", "61": "<(LOCAL,int n: int)<SUB>10</SUB>>", "63": "<(IDENTIFIER,n,int n = (int) in.nval)<SUB>10</SUB>>", "65": "<(TYPE_REF,int,int)<SUB>10</SUB>>", "67": "<(IDENTIFIER,in,(int) in.nval)<SUB>10</SUB>>", "69": "<(LOCAL,int[] mas: int[])<SUB>11</SUB>>", "71": "<(IDENTIFIER,mas,int[] mas = new int[n])<SUB>11</SUB>>", "73": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "75": "<(LOCAL,int i: int)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,int i = 0)<SUB>13</SUB>>", "79": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>13</SUB>>", "81": "<(IDENTIFIER,n,i &lt; n)<SUB>13</SUB>>", "83": "<(IDENTIFIER,i,i++)<SUB>13</SUB>>", "85": "<(nextToken,nextToken())<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,mas[i] = (int) in.nval)<SUB>15</SUB>>", "89": "<(IDENTIFIER,mas,mas[i] = (int) in.nval)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.cast,(int) in.nval)<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,in.nval)<SUB>15</SUB>>", "95": "<(FIELD_IDENTIFIER,nval,nval)<SUB>15</SUB>>", "97": "<(IDENTIFIER,Arrays,sort(mas))<SUB>18</SUB>>", "99": "<(LOCAL,int min: int)<SUB>19</SUB>>", "101": "<(IDENTIFIER,min,int min = mas[0])<SUB>19</SUB>>", "103": "<(IDENTIFIER,mas,int min = mas[0])<SUB>19</SUB>>", "105": "<(LOCAL,int i: int)<SUB>20</SUB>>", "107": "<(IDENTIFIER,i,int i = 1)<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,while ((i &lt; n) &amp;&amp; (min == mas[i])),while ((i &lt; n) &amp;&amp; (min == mas[i])))<SUB>22</SUB>>", "111": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "113": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "115": "<(IDENTIFIER,min,min == mas[i])<SUB>22</SUB>>", "117": "<(IDENTIFIER,mas,min == mas[i])<SUB>22</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "121": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "123": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>26</SUB>>", "125": "<(IDENTIFIER,n,i &lt; n)<SUB>26</SUB>>", "127": "<(write,write(Integer.toString(mas[i])))<SUB>27</SUB>>", "129": "<(toString,Integer.toString(mas[i]))<SUB>27</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,mas[i])<SUB>27</SUB>>", "133": "<(IDENTIFIER,i,Integer.toString(mas[i]))<SUB>27</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "137": "<(IDENTIFIER,output,write(&quot;NO&quot;))<SUB>30</SUB>>", "139": "<(close,close())<SUB>32</SUB>>", "141": "<(close,close())<SUB>33</SUB>>", "143": "<(MODIFIER,PUBLIC)>", "145": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}