{"edges": [["19", "20"], ["19", "21"], ["19", "94"], ["19", "95"], ["19", "96"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "32"], ["30", "31"], ["32", "33"], ["32", "37"], ["32", "38"], ["32", "39"], ["32", "65"], ["32", "67"], ["32", "91"], ["33", "34"], ["33", "35"], ["35", "36"], ["39", "40"], ["39", "43"], ["39", "46"], ["39", "48"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["46", "47"], ["48", "49"], ["48", "52"], ["48", "55"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "63"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["63", "64"], ["65", "66"], ["67", "68"], ["67", "71"], ["67", "74"], ["67", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "84"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["22", "28"], ["25", "30"], ["24", "22"], ["26", "25"], ["30", "96"], ["30", "35"], ["28", "26"], ["33", "40"], ["65", "68"], ["91", "30"], ["35", "33"], ["40", "43"], ["43", "49"], ["43", "65"], ["46", "43"], ["68", "71"], ["71", "78"], ["71", "91"], ["74", "71"], ["49", "52"], ["52", "59"], ["52", "46"], ["55", "52"], ["57", "55"], ["84", "74"], ["58", "63"], ["63", "57"], ["78", "81"], ["78", "88"], ["81", "88"], ["86", "84"], ["59", "58"], ["88", "86"], ["19", "24"], ["20", "96"], ["22", "96"], ["25", "96"], ["25", "96"], ["30", "96"], ["30", "96"], ["91", "96"], ["91", "96"], ["19", "20"], ["19", "22"], ["22", "25"], ["19", "25"], ["25", "30"], ["35", "30"], ["63", "30"], ["19", "30"], ["35", "33"], ["19", "40"], ["91", "65"], ["19", "65"], ["19", "68"], ["65", "91"], ["84", "91"], ["19", "91"], ["30", "35"], ["19", "35"], ["40", "43"], ["46", "43"], ["19", "43"], ["33", "43"], ["52", "43"], ["43", "46"], ["19", "46"], ["19", "49"], ["63", "57"], ["68", "71"], ["74", "71"], ["19", "71"], ["43", "71"], ["88", "74"], ["19", "74"], ["49", "52"], ["55", "52"], ["19", "52"], ["43", "52"], ["52", "55"], ["19", "55"], ["65", "84"], ["81", "84"], ["19", "84"], ["35", "63"], ["19", "63"], ["71", "78"], ["19", "78"], ["65", "81"], ["84", "81"], ["19", "81"], ["19", "88"], ["78", "88"], ["30", "30"], ["30", "68"], ["30", "40"], ["30", "65"], ["30", "91"], ["30", "35"], ["30", "43"], ["30", "33"], ["30", "71"], ["43", "49"], ["43", "52"], ["43", "46"], ["43", "43"], ["71", "84"], ["71", "74"], ["71", "71"], ["71", "88"], ["71", "78"], ["71", "86"], ["52", "57"], ["52", "52"], ["52", "59"], ["52", "58"], ["52", "63"], ["52", "55"], ["78", "81"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY S = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,S,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(CONTROL_STRUCTURE,while (S.hasNext()),while (S.hasNext()))<SUB>4</SUB>>", "31": "<(IDENTIFIER,S,hasNext())<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>6</SUB>>", "35": "<(nextInt,nextInt())<SUB>6</SUB>>", "37": "<(LOCAL,int i: int)<SUB>7</SUB>>", "39": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>8</SUB>>", "41": "<(IDENTIFIER,i,i = 0)<SUB>8</SUB>>", "43": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "45": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "49": "<(&lt;operator&gt;.assignment,j = 0)<SUB>8</SUB>>", "51": "<(LITERAL,0,j = 0)<SUB>8</SUB>>", "53": "<(IDENTIFIER,j,j &lt; n)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignment,p[i][j] = nextDouble())<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,p[i][j] = nextDouble())<SUB>8</SUB>>", "63": "<(nextDouble,nextDouble())<SUB>8</SUB>>", "65": "<(DP,DP())<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (i = 0; Some(i &lt; n); i++),for (i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "69": "<(IDENTIFIER,i,i = 0)<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "73": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "77": "<(CONTROL_STRUCTURE,if (i != 0),if (i != 0))<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,i != 0)<SUB>12</SUB>>", "81": "<(PR,PR(&quot; &quot;))<SUB>12</SUB>>", "83": "<(LITERAL,&quot; &quot;,PR(&quot; &quot;))<SUB>12</SUB>>", "85": "<(IDENTIFIER,this,PR(f[1 &lt;&lt; i]))<SUB>13</SUB>>", "87": "<(IDENTIFIER,f,PR(f[1 &lt;&lt; i]))<SUB>13</SUB>>", "89": "<(LITERAL,1,1 &lt;&lt; i)<SUB>13</SUB>>", "91": "<(PR,PR(&quot;\\n&quot;))<SUB>15</SUB>>", "93": "<(LITERAL,&quot;\\n&quot;,PR(&quot;\\n&quot;))<SUB>15</SUB>>", "95": "<(MODIFIER,STATIC)>"}}