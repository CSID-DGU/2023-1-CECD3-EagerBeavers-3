{"edges": [["19", "20"], ["19", "21"], ["19", "256"], ["19", "257"], ["19", "258"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "54"], ["21", "55"], ["21", "64"], ["21", "68"], ["21", "74"], ["21", "209"], ["21", "210"], ["21", "213"], ["21", "247"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "51"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "52"], ["51", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["64", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["74", "79"], ["74", "82"], ["74", "84"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "95"], ["84", "99"], ["84", "206"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "109"], ["99", "111"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["123", "131"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "148"], ["131", "150"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "144"], ["138", "145"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "152"], ["150", "159"], ["150", "160"], ["150", "177"], ["150", "182"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "176"], ["163", "164"], ["163", "175"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["188", "190"], ["188", "195"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "203"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "201"], ["198", "199"], ["198", "200"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["213", "218"], ["213", "223"], ["213", "225"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["225", "226"], ["225", "227"], ["225", "230"], ["225", "235"], ["225", "237"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["235", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["239", "242"], ["242", "243"], ["242", "246"], ["243", "244"], ["243", "245"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["55", "64"], ["64", "70"], ["68", "76"], ["210", "215"], ["247", "258"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["40", "45"], ["40", "58"], ["57", "55"], ["70", "68"], ["76", "79"], ["79", "89"], ["79", "210"], ["82", "79"], ["215", "220"], ["218", "227"], ["218", "250"], ["223", "220"], ["248", "252"], ["251", "247"], ["28", "26"], ["45", "48"], ["48", "51"], ["51", "58"], ["58", "61"], ["61", "57"], ["86", "95"], ["95", "101"], ["206", "82"], ["220", "218"], ["227", "232"], ["230", "243"], ["230", "223"], ["235", "232"], ["237", "235"], ["250", "248"], ["252", "251"], ["88", "86"], ["101", "106"], ["104", "113"], ["104", "206"], ["109", "106"], ["232", "230"], ["239", "237"], ["89", "92"], ["92", "88"], ["106", "104"], ["113", "118"], ["116", "126"], ["116", "109"], ["121", "118"], ["242", "239"], ["118", "116"], ["124", "133"], ["124", "121"], ["243", "242"], ["125", "124"], ["133", "141"], ["136", "155"], ["136", "121"], ["148", "141"], ["126", "125"], ["138", "136"], ["152", "167"], ["160", "179"], ["177", "184"], ["182", "148"], ["139", "138"], ["139", "145"], ["145", "138"], ["154", "152"], ["162", "160"], ["179", "177"], ["183", "191"], ["188", "182"], ["141", "139"], ["155", "154"], ["163", "162"], ["184", "183"], ["190", "198"], ["195", "188"], ["164", "163"], ["191", "190"], ["196", "203"], ["203", "195"], ["165", "172"], ["170", "164"], ["197", "196"], ["167", "165"], ["172", "170"], ["198", "197"], ["19", "24"], ["20", "258"], ["22", "258"], ["25", "258"], ["25", "258"], ["30", "258"], ["37", "258"], ["35", "258"], ["35", "258"], ["40", "258"], ["45", "258"], ["48", "258"], ["51", "258"], ["51", "258"], ["55", "258"], ["55", "258"], ["64", "258"], ["64", "258"], ["64", "258"], ["68", "258"], ["68", "258"], ["76", "258"], ["79", "258"], ["79", "258"], ["210", "258"], ["210", "258"], ["215", "258"], ["218", "258"], ["218", "258"], ["218", "258"], ["247", "258"], ["252", "258"], ["252", "258"], ["251", "258"], ["251", "258"], ["247", "258"], ["247", "258"], ["227", "258"], ["230", "258"], ["230", "258"], ["223", "258"], ["239", "258"], ["239", "258"], ["237", "258"], ["237", "258"], ["235", "258"], ["86", "258"], ["86", "258"], ["95", "258"], ["95", "258"], ["101", "258"], ["104", "258"], ["104", "258"], ["206", "258"], ["206", "258"], ["206", "258"], ["82", "258"], ["113", "258"], ["116", "258"], ["116", "258"], ["109", "258"], ["124", "258"], ["124", "258"], ["133", "258"], ["136", "258"], ["139", "258"], ["138", "258"], ["136", "258"], ["136", "258"], ["121", "258"], ["152", "258"], ["152", "258"], ["165", "258"], ["164", "258"], ["170", "258"], ["164", "258"], ["163", "258"], ["162", "258"], ["160", "258"], ["160", "258"], ["179", "258"], ["177", "258"], ["182", "258"], ["188", "258"], ["196", "258"], ["195", "258"], ["203", "258"], ["195", "258"], ["188", "258"], ["182", "258"], ["182", "258"], ["148", "258"], ["68", "258"], ["203", "258"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["57", "55"], ["64", "210"], ["95", "210"], ["124", "210"], ["19", "210"], ["22", "25"], ["19", "25"], ["19", "64"], ["55", "64"], ["19", "68"], ["64", "68"], ["19", "76"], ["19", "215"], ["251", "247"], ["251", "247"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["30", "40"], ["19", "40"], ["35", "40"], ["40", "45"], ["19", "45"], ["40", "48"], ["19", "48"], ["45", "51"], ["19", "51"], ["58", "57"], ["58", "57"], ["61", "57"], ["61", "57"], ["76", "79"], ["82", "79"], ["19", "79"], ["40", "79"], ["51", "79"], ["141", "79"], ["79", "82"], ["139", "82"], ["19", "82"], ["88", "86"], ["95", "206"], ["19", "206"], ["215", "218"], ["223", "218"], ["19", "218"], ["220", "218"], ["220", "218"], ["218", "223"], ["19", "223"], ["19", "227"], ["239", "237"], ["239", "237"], ["239", "237"], ["252", "251"], ["252", "251"], ["210", "251"], ["237", "251"], ["19", "251"], ["19", "58"], ["40", "58"], ["48", "58"], ["19", "61"], ["58", "61"], ["64", "95"], ["19", "95"], ["86", "95"], ["64", "95"], ["124", "95"], ["19", "101"], ["19", "220"], ["61", "220"], ["232", "220"], ["106", "220"], ["227", "230"], ["235", "230"], ["19", "230"], ["232", "230"], ["232", "230"], ["230", "235"], ["19", "235"], ["220", "252"], ["19", "252"], ["79", "252"], ["89", "88"], ["89", "88"], ["92", "88"], ["92", "88"], ["101", "104"], ["109", "104"], ["19", "104"], ["106", "104"], ["106", "104"], ["104", "109"], ["163", "109"], ["19", "109"], ["19", "113"], ["19", "232"], ["220", "232"], ["188", "239"], ["19", "239"], ["210", "239"], ["237", "239"], ["19", "89"], ["61", "89"], ["106", "89"], ["19", "92"], ["89", "92"], ["19", "106"], ["92", "106"], ["118", "106"], ["113", "116"], ["121", "116"], ["19", "116"], ["118", "116"], ["118", "116"], ["116", "121"], ["179", "121"], ["19", "121"], ["19", "118"], ["106", "118"], ["145", "118"], ["155", "118"], ["95", "124"], ["19", "124"], ["19", "133"], ["133", "136"], ["148", "136"], ["19", "136"], ["145", "136"], ["145", "136"], ["116", "136"], ["154", "136"], ["162", "148"], ["19", "148"], ["154", "152"], ["154", "152"], ["162", "160"], ["162", "160"], ["179", "177"], ["179", "177"], ["188", "182"], ["188", "182"], ["188", "182"], ["19", "138"], ["145", "138"], ["145", "138"], ["116", "138"], ["154", "138"], ["160", "177"], ["19", "177"], ["79", "139"], ["19", "139"], ["141", "139"], ["141", "139"], ["19", "145"], ["118", "145"], ["155", "145"], ["155", "154"], ["155", "154"], ["19", "154"], ["163", "162"], ["163", "162"], ["136", "162"], ["19", "162"], ["170", "179"], ["19", "179"], ["172", "179"], ["19", "188"], ["182", "188"], ["195", "188"], ["195", "188"], ["79", "141"], ["19", "141"], ["19", "155"], ["118", "155"], ["145", "155"], ["164", "163"], ["164", "163"], ["104", "163"], ["19", "163"], ["124", "195"], ["155", "195"], ["19", "195"], ["203", "195"], ["203", "195"], ["165", "164"], ["165", "164"], ["170", "164"], ["170", "164"], ["124", "196"], ["155", "196"], ["19", "196"], ["19", "203"], ["177", "203"], ["152", "165"], ["19", "165"], ["167", "165"], ["167", "165"], ["165", "170"], ["19", "170"], ["172", "170"], ["172", "170"], ["116", "167"], ["179", "167"], ["19", "167"], ["167", "172"], ["19", "172"], ["40", "51"], ["40", "48"], ["40", "45"], ["79", "104"], ["79", "95"], ["79", "92"], ["79", "206"], ["79", "101"], ["79", "79"], ["79", "88"], ["79", "86"], ["79", "89"], ["79", "106"], ["79", "82"], ["218", "230"], ["218", "232"], ["218", "223"], ["218", "220"], ["218", "227"], ["218", "218"], ["230", "230"], ["230", "232"], ["230", "243"], ["230", "242"], ["230", "239"], ["230", "235"], ["230", "237"], ["104", "113"], ["104", "104"], ["104", "118"], ["104", "116"], ["104", "106"], ["104", "109"], ["116", "121"], ["116", "118"], ["116", "116"], ["116", "126"], ["116", "124"], ["116", "125"], ["124", "136"], ["124", "138"], ["124", "139"], ["124", "141"], ["124", "133"], ["136", "167"], ["136", "188"], ["136", "136"], ["136", "154"], ["136", "163"], ["136", "179"], ["136", "196"], ["136", "197"], ["136", "198"], ["136", "162"], ["136", "170"], ["136", "138"], ["136", "191"], ["136", "195"], ["136", "148"], ["136", "190"], ["136", "184"], ["136", "152"], ["136", "182"], ["136", "164"], ["136", "155"], ["136", "139"], ["136", "160"], ["136", "141"], ["136", "183"], ["136", "177"], ["136", "165"], ["136", "203"], ["136", "172"], ["139", "145"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(LOCAL,int n: int)<SUB>4</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,nextInt())<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "37": "<(nextInt,nextInt())<SUB>5</SUB>>", "39": "<(CONTROL_STRUCTURE,if (n &gt; m),if (n &gt; m))<SUB>6</SUB>>", "41": "<(IDENTIFIER,n,n &gt; m)<SUB>6</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,int t = n)<SUB>8</SUB>>", "47": "<(IDENTIFIER,n,int t = n)<SUB>8</SUB>>", "49": "<(IDENTIFIER,n,n = m)<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,m = t)<SUB>10</SUB>>", "53": "<(IDENTIFIER,t,m = t)<SUB>10</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[][] curr = new int[1 &lt;&lt; n][1 &lt;&lt; n])<SUB>13</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n][1 &lt;&lt; n])>", "59": "<(LITERAL,1,1 &lt;&lt; n)<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>13</SUB>>", "63": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>13</SUB>>", "65": "<(IDENTIFIER,this,fill(curr, oo))<SUB>14</SUB>>", "67": "<(IDENTIFIER,oo,fill(curr, oo))<SUB>14</SUB>>", "69": "<(IDENTIFIER,Arrays,fill(curr[0], 0))<SUB>15</SUB>>", "71": "<(IDENTIFIER,curr,fill(curr[0], 0))<SUB>15</SUB>>", "73": "<(LITERAL,0,fill(curr[0], 0))<SUB>15</SUB>>", "75": "<(LOCAL,int j: int)<SUB>17</SUB>>", "77": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "79": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>17</SUB>>", "81": "<(IDENTIFIER,m,j &lt; m)<SUB>17</SUB>>", "83": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "85": "<(LOCAL,int[][] next: int[][])<SUB>19</SUB>>", "87": "<(IDENTIFIER,next,int[][] next = new int[1 &lt;&lt; n][1 &lt;&lt; n])<SUB>19</SUB>>", "89": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>19</SUB>>", "91": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>19</SUB>>", "93": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "95": "<(fill,fill(next, oo))<SUB>20</SUB>>", "97": "<(IDENTIFIER,next,fill(next, oo))<SUB>20</SUB>>", "99": "<(CONTROL_STRUCTURE,for (int c0 = 0; Some(c0 &lt; 1 &lt;&lt; n); c0++),for (int c0 = 0; Some(c0 &lt; 1 &lt;&lt; n); c0++))<SUB>21</SUB>>", "101": "<(&lt;operator&gt;.assignment,int c0 = 0)<SUB>21</SUB>>", "103": "<(LITERAL,0,int c0 = 0)<SUB>21</SUB>>", "105": "<(IDENTIFIER,c0,c0 &lt; 1 &lt;&lt; n)<SUB>21</SUB>>", "107": "<(LITERAL,1,1 &lt;&lt; n)<SUB>21</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,c0++)<SUB>21</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int c1 = 0; Some(c1 &lt; 1 &lt;&lt; n); c1++),for (int c1 = 0; Some(c1 &lt; 1 &lt;&lt; n); c1++))<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.assignment,int c1 = 0)<SUB>22</SUB>>", "115": "<(LITERAL,0,int c1 = 0)<SUB>22</SUB>>", "117": "<(IDENTIFIER,c1,c1 &lt; 1 &lt;&lt; n)<SUB>22</SUB>>", "119": "<(LITERAL,1,1 &lt;&lt; n)<SUB>22</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,c1++)<SUB>22</SUB>>", "123": "<(CONTROL_STRUCTURE,if (curr[c0][c1] != oo),if (curr[c0][c1] != oo))<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.indexAccess,curr[c0][c1])<SUB>23</SUB>>", "127": "<(IDENTIFIER,curr,curr[c0][c1] != oo)<SUB>23</SUB>>", "129": "<(IDENTIFIER,c1,curr[c0][c1] != oo)<SUB>23</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int c2 = 0; Some(c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n)); c2++),for (int c2 = 0; Some(c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n)); c2++))<SUB>24</SUB>>", "133": "<(&lt;operator&gt;.assignment,int c2 = 0)<SUB>24</SUB>>", "135": "<(LITERAL,0,int c2 = 0)<SUB>24</SUB>>", "137": "<(IDENTIFIER,c2,c2 &lt; (j == m - 1 ? 1 : 1 &lt;&lt; n))<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.equals,j == m - 1)<SUB>24</SUB>>", "141": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>24</SUB>>", "143": "<(LITERAL,1,m - 1)<SUB>24</SUB>>", "145": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>24</SUB>>", "147": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>24</SUB>>", "149": "<(IDENTIFIER,c2,c2++)<SUB>24</SUB>>", "151": "<(LOCAL,int all: int)<SUB>26</SUB>>", "153": "<(IDENTIFIER,all,int all = (1 &lt;&lt; n) - 1)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>26</SUB>>", "157": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>26</SUB>>", "159": "<(LOCAL,int done: int)<SUB>27</SUB>>", "161": "<(IDENTIFIER,done,int done = (all &amp; (c1 &gt;&gt; 1)) | (all &amp; (c1 &lt;&lt; 1)) | c0 | c2)<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.or,(all &amp; (c1 &gt;&gt; 1)) | (all &amp; (c1 &lt;&lt; 1)) | c0)<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.and,all &amp; (c1 &gt;&gt; 1))<SUB>27</SUB>>", "167": "<(&lt;operator&gt;.logicalShiftRight,c1 &gt;&gt; 1)<SUB>27</SUB>>", "169": "<(LITERAL,1,c1 &gt;&gt; 1)<SUB>27</SUB>>", "171": "<(IDENTIFIER,all,all &amp; (c1 &lt;&lt; 1))<SUB>27</SUB>>", "173": "<(IDENTIFIER,c1,c1 &lt;&lt; 1)<SUB>27</SUB>>", "175": "<(IDENTIFIER,c0,(all &amp; (c1 &gt;&gt; 1)) | (all &amp; (c1 &lt;&lt; 1)) | c0)<SUB>27</SUB>>", "177": "<(&lt;operators&gt;.assignmentAnd,done &amp;= all ^ c1)<SUB>28</SUB>>", "179": "<(&lt;operator&gt;.xor,all ^ c1)<SUB>28</SUB>>", "181": "<(IDENTIFIER,c1,all ^ c1)<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,next[c1][c2])<SUB>30</SUB>>", "185": "<(IDENTIFIER,next,next[c1][c2] = Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>30</SUB>>", "187": "<(IDENTIFIER,c2,next[c1][c2] = Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>30</SUB>>", "189": "<(IDENTIFIER,Math,Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>30</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,next[c1])<SUB>30</SUB>>", "193": "<(IDENTIFIER,c1,Math.min(next[c1][c2], curr[c0][c1] + n - Integer.bitCount(done)))<SUB>30</SUB>>", "195": "<(&lt;operator&gt;.subtraction,curr[c0][c1] + n - Integer.bitCount(done))<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,curr[c0][c1])<SUB>30</SUB>>", "199": "<(IDENTIFIER,curr,curr[c0][c1] + n)<SUB>30</SUB>>", "201": "<(IDENTIFIER,c1,curr[c0][c1] + n)<SUB>30</SUB>>", "203": "<(bitCount,Integer.bitCount(done))<SUB>30</SUB>>", "205": "<(IDENTIFIER,done,Integer.bitCount(done))<SUB>30</SUB>>", "207": "<(IDENTIFIER,curr,curr = next)<SUB>33</SUB>>", "209": "<(LOCAL,int res: int)<SUB>36</SUB>>", "211": "<(IDENTIFIER,res,int res = oo)<SUB>36</SUB>>", "213": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i++),for (int i = 0; Some(i &lt; 1 &lt;&lt; n); i++))<SUB>37</SUB>>", "215": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>37</SUB>>", "217": "<(LITERAL,0,int i = 0)<SUB>37</SUB>>", "219": "<(IDENTIFIER,i,i &lt; 1 &lt;&lt; n)<SUB>37</SUB>>", "221": "<(LITERAL,1,1 &lt;&lt; n)<SUB>37</SUB>>", "223": "<(&lt;operator&gt;.postIncrement,i++)<SUB>37</SUB>>", "225": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; n); j++))<SUB>38</SUB>>", "227": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>38</SUB>>", "229": "<(LITERAL,0,int j = 0)<SUB>38</SUB>>", "231": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; n)<SUB>38</SUB>>", "233": "<(LITERAL,1,1 &lt;&lt; n)<SUB>38</SUB>>", "235": "<(&lt;operator&gt;.postIncrement,j++)<SUB>38</SUB>>", "237": "<(&lt;operator&gt;.assignment,res = Math.min(res, curr[i][j]))<SUB>39</SUB>>", "239": "<(min,Math.min(res, curr[i][j]))<SUB>39</SUB>>", "241": "<(IDENTIFIER,res,Math.min(res, curr[i][j]))<SUB>39</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,curr[i])<SUB>39</SUB>>", "245": "<(IDENTIFIER,i,Math.min(res, curr[i][j]))<SUB>39</SUB>>", "247": "<(println,System.out.println(n * m - res))<SUB>41</SUB>>", "249": "<(IDENTIFIER,System,System.out.println(n * m - res))<SUB>41</SUB>>", "251": "<(&lt;operator&gt;.subtraction,n * m - res)<SUB>41</SUB>>", "253": "<(IDENTIFIER,n,n * m)<SUB>41</SUB>>", "255": "<(IDENTIFIER,res,n * m - res)<SUB>41</SUB>>", "257": "<(MODIFIER,STATIC)>"}}