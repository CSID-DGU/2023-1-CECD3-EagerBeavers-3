{"edges": [["19", "21"], ["19", "363"], ["19", "364"], ["19", "365"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "28"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["28", "33"], ["28", "36"], ["28", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "37"], ["38", "39"], ["38", "40"], ["38", "44"], ["38", "45"], ["38", "49"], ["38", "50"], ["38", "56"], ["38", "57"], ["38", "62"], ["38", "114"], ["38", "133"], ["38", "4"], ["38", "136"], ["38", "139"], ["38", "140"], ["38", "158"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "81"], ["73", "83"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["83", "92"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["90", "91"], ["92", "93"], ["92", "100"], ["93", "94"], ["93", "95"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "104"], ["100", "113"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["104", "107"], ["104", "108"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "124"], ["114", "126"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "3"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "167"], ["158", "200"], ["159", "160"], ["159", "163"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "166"], ["164", "165"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "195"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "186"], ["172", "188"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["188", "189"], ["188", "190"], ["190", "191"], ["190", "194"], ["191", "192"], ["191", "193"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["200", "201"], ["201", "202"], ["201", "215"], ["201", "216"], ["201", "221"], ["201", "222"], ["201", "225"], ["201", "226"], ["201", "358"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["216", "217"], ["216", "218"], ["218", "219"], ["219", "220"], ["222", "223"], ["222", "224"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "270"], ["228", "271"], ["228", "275"], ["228", "326"], ["228", "327"], ["228", "330"], ["228", "352"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "239"], ["229", "241"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["239", "240"], ["241", "242"], ["241", "246"], ["242", "243"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "252"], ["246", "267"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "266"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["267", "268"], ["268", "269"], ["271", "272"], ["271", "273"], ["273", "274"], ["275", "276"], ["275", "277"], ["275", "280"], ["275", "283"], ["275", "285"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["283", "284"], ["285", "286"], ["285", "287"], ["285", "290"], ["285", "291"], ["285", "295"], ["287", "288"], ["287", "289"], ["291", "292"], ["291", "293"], ["293", "294"], ["295", "296"], ["295", "298"], ["296", "297"], ["298", "299"], ["298", "300"], ["298", "304"], ["298", "324"], ["300", "301"], ["300", "302"], ["302", "303"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["308", "309"], ["308", "310"], ["308", "313"], ["310", "311"], ["310", "312"], ["313", "314"], ["313", "323"], ["314", "315"], ["314", "316"], ["316", "317"], ["316", "322"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "321"], ["324", "325"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "332"], ["330", "335"], ["330", "340"], ["330", "342"], ["332", "333"], ["332", "334"], ["335", "336"], ["335", "337"], ["337", "338"], ["337", "339"], ["340", "341"], ["342", "343"], ["342", "344"], ["342", "349"], ["344", "345"], ["344", "346"], ["346", "347"], ["346", "348"], ["349", "350"], ["349", "351"], ["352", "353"], ["352", "354"], ["354", "355"], ["354", "356"], ["354", "357"], ["358", "359"], ["358", "362"], ["359", "360"], ["359", "361"], ["23", "30"], ["25", "23"], ["30", "33"], ["33", "365"], ["33", "42"], ["36", "33"], ["40", "47"], ["45", "53"], ["50", "59"], ["57", "64"], ["133", "138"], ["136", "139"], ["139", "142"], ["42", "40"], ["47", "45"], ["52", "50"], ["59", "57"], ["64", "67"], ["67", "75"], ["67", "116"], ["70", "67"], ["116", "123"], ["119", "128"], ["119", "133"], ["124", "123"], ["138", "136"], ["142", "145"], ["145", "154"], ["145", "160"], ["148", "145"], ["159", "169"], ["159", "206"], ["53", "52"], ["121", "119"], ["127", "124"], ["151", "148"], ["160", "159"], ["160", "164"], ["163", "159"], ["169", "174"], ["195", "36"], ["75", "78"], ["78", "86"], ["78", "70"], ["81", "78"], ["123", "121"], ["128", "127"], ["153", "151"], ["164", "163"], ["174", "178"], ["177", "191"], ["177", "198"], ["186", "178"], ["188", "186"], ["196", "195"], ["216", "222"], ["222", "231"], ["222", "361"], ["358", "36"], ["84", "97"], ["92", "81"], ["154", "157"], ["157", "153"], ["178", "177"], ["178", "185"], ["181", "177"], ["190", "188"], ["198", "196"], ["203", "211"], ["203", "219"], ["208", "219"], ["218", "216"], ["359", "358"], ["85", "90"], ["90", "84"], ["93", "103"], ["183", "181"], ["191", "194"], ["194", "190"], ["204", "203"], ["210", "208"], ["219", "218"], ["271", "277"], ["327", "332"], ["352", "231"], ["352", "361"], ["361", "359"], ["86", "85"], ["95", "93"], ["101", "109"], ["104", "92"], ["185", "183"], ["206", "204"], ["211", "214"], ["214", "210"], ["231", "238"], ["234", "243"], ["234", "273"], ["239", "238"], ["273", "271"], ["277", "280"], ["280", "287"], ["280", "327"], ["283", "280"], ["332", "339"], ["335", "346"], ["335", "354"], ["340", "339"], ["354", "352"], ["97", "95"], ["103", "101"], ["108", "104"], ["236", "234"], ["242", "248"], ["287", "293"], ["291", "296"], ["337", "335"], ["344", "349"], ["349", "340"], ["109", "108"], ["238", "236"], ["243", "242"], ["247", "254"], ["247", "273"], ["293", "291"], ["296", "302"], ["296", "283"], ["339", "337"], ["346", "344"], ["248", "247"], ["253", "264"], ["300", "305"], ["304", "324"], ["324", "296"], ["254", "253"], ["259", "273"], ["259", "239"], ["302", "300"], ["305", "310"], ["308", "304"], ["261", "259"], ["310", "319"], ["313", "308"], ["262", "261"], ["314", "313"], ["264", "262"], ["316", "314"], ["317", "316"], ["319", "317"], ["19", "25"], ["20", "365"], ["25", "365"], ["23", "365"], ["23", "365"], ["30", "365"], ["33", "365"], ["33", "365"], ["33", "365"], ["36", "365"], ["133", "365"], ["19", "20"], ["25", "23"], ["19", "30"], ["19", "25"], ["30", "33"], ["36", "33"], ["19", "33"], ["23", "33"], ["33", "36"], ["19", "36"], ["42", "40"], ["47", "45"], ["52", "50"], ["59", "57"], ["59", "57"], ["19", "136"], ["19", "64"], ["19", "116"], ["19", "133"], ["50", "133"], ["119", "133"], ["127", "133"], ["92", "133"], ["136", "139"], ["19", "139"], ["19", "142"], ["25", "42"], ["47", "42"], ["90", "42"], ["19", "42"], ["42", "47"], ["19", "47"], ["53", "52"], ["53", "52"], ["53", "59"], ["19", "59"], ["53", "59"], ["64", "67"], ["70", "67"], ["19", "67"], ["59", "67"], ["67", "70"], ["104", "70"], ["19", "70"], ["116", "119"], ["124", "119"], ["19", "119"], ["50", "119"], ["119", "124"], ["19", "124"], ["142", "145"], ["148", "145"], ["19", "145"], ["67", "145"], ["145", "148"], ["19", "148"], ["160", "159"], ["160", "159"], ["163", "159"], ["163", "159"], ["19", "169"], ["40", "53"], ["19", "53"], ["45", "53"], ["19", "75"], ["50", "127"], ["19", "127"], ["139", "151"], ["19", "151"], ["145", "160"], ["19", "160"], ["164", "163"], ["19", "163"], ["19", "174"], ["358", "195"], ["169", "195"], ["188", "195"], ["19", "195"], ["218", "216"], ["19", "222"], ["75", "78"], ["81", "78"], ["19", "78"], ["59", "78"], ["97", "78"], ["104", "81"], ["19", "81"], ["90", "84"], ["101", "92"], ["104", "92"], ["19", "92"], ["139", "164"], ["151", "164"], ["19", "164"], ["178", "177"], ["178", "177"], ["119", "177"], ["181", "177"], ["181", "177"], ["178", "186"], ["181", "186"], ["19", "186"], ["169", "188"], ["19", "188"], ["19", "227"], ["195", "358"], ["222", "358"], ["352", "358"], ["19", "358"], ["174", "178"], ["186", "178"], ["19", "178"], ["160", "178"], ["178", "181"], ["19", "181"], ["133", "181"], ["133", "203"], ["19", "203"], ["139", "208"], ["164", "208"], ["151", "208"], ["19", "208"], ["219", "218"], ["273", "271"], ["19", "327"], ["354", "352"], ["354", "352"], ["354", "352"], ["47", "90"], ["19", "90"], ["19", "101"], ["19", "113"], ["139", "219"], ["164", "219"], ["208", "219"], ["151", "219"], ["19", "219"], ["19", "231"], ["19", "277"], ["19", "332"], ["78", "95"], ["19", "95"], ["97", "95"], ["97", "95"], ["101", "104"], ["19", "104"], ["97", "104"], ["78", "104"], ["84", "104"], ["231", "234"], ["239", "234"], ["19", "234"], ["216", "234"], ["261", "234"], ["259", "239"], ["19", "239"], ["160", "273"], ["247", "273"], ["280", "273"], ["19", "273"], ["277", "280"], ["283", "280"], ["19", "280"], ["273", "280"], ["316", "280"], ["280", "283"], ["19", "283"], ["19", "287"], ["293", "291"], ["332", "335"], ["340", "335"], ["19", "335"], ["271", "335"], ["335", "340"], ["19", "340"], ["271", "344"], ["296", "344"], ["101", "344"], ["344", "349"], ["19", "349"], ["308", "354"], ["19", "354"], ["222", "354"], ["352", "354"], ["327", "354"], ["349", "354"], ["78", "97"], ["19", "97"], ["67", "97"], ["104", "97"], ["216", "242"], ["247", "242"], ["253", "242"], ["327", "349"], ["216", "247"], ["242", "247"], ["160", "247"], ["280", "247"], ["19", "247"], ["19", "253"], ["219", "293"], ["19", "293"], ["291", "296"], ["302", "296"], ["19", "296"], ["302", "300"], ["308", "304"], ["308", "304"], ["308", "304"], ["287", "324"], ["19", "324"], ["234", "259"], ["19", "259"], ["261", "259"], ["261", "259"], ["296", "302"], ["19", "302"], ["354", "308"], ["19", "308"], ["271", "308"], ["304", "308"], ["216", "261"], ["234", "261"], ["19", "261"], ["280", "316"], ["19", "316"], ["216", "316"], ["280", "316"], ["280", "317"], ["19", "317"], ["216", "317"], ["33", "42"], ["33", "136"], ["33", "52"], ["33", "40"], ["33", "50"], ["33", "59"], ["33", "138"], ["33", "36"], ["33", "160"], ["33", "116"], ["33", "123"], ["33", "159"], ["33", "53"], ["33", "133"], ["33", "64"], ["33", "57"], ["33", "145"], ["33", "67"], ["33", "119"], ["33", "121"], ["33", "33"], ["33", "139"], ["33", "47"], ["33", "142"], ["33", "45"], ["67", "70"], ["67", "75"], ["67", "67"], ["67", "78"], ["119", "128"], ["119", "127"], ["119", "123"], ["119", "119"], ["119", "121"], ["119", "124"], ["145", "154"], ["145", "148"], ["145", "145"], ["145", "151"], ["145", "153"], ["145", "157"], ["159", "196"], ["159", "204"], ["159", "358"], ["159", "206"], ["159", "195"], ["159", "174"], ["159", "177"], ["159", "216"], ["159", "222"], ["159", "169"], ["159", "178"], ["159", "198"], ["159", "361"], ["159", "359"], ["159", "203"], ["159", "218"], ["159", "219"], ["159", "238"], ["159", "236"], ["159", "335"], ["159", "273"], ["159", "337"], ["159", "339"], ["159", "332"], ["159", "231"], ["159", "352"], ["159", "280"], ["159", "327"], ["159", "277"], ["159", "354"], ["159", "234"], ["159", "271"], ["160", "163"], ["160", "164"], ["78", "84"], ["78", "104"], ["78", "95"], ["78", "93"], ["78", "108"], ["78", "86"], ["78", "109"], ["78", "81"], ["78", "85"], ["78", "103"], ["78", "92"], ["78", "97"], ["78", "101"], ["78", "90"], ["78", "78"], ["177", "188"], ["177", "190"], ["177", "194"], ["177", "186"], ["177", "177"], ["177", "178"], ["177", "191"], ["178", "181"], ["178", "185"], ["178", "183"], ["203", "214"], ["203", "208"], ["203", "210"], ["203", "211"], ["234", "243"], ["234", "247"], ["234", "242"], ["234", "248"], ["280", "283"], ["280", "296"], ["280", "291"], ["280", "293"], ["280", "280"], ["280", "287"], ["335", "349"], ["335", "340"], ["335", "346"], ["335", "335"], ["335", "337"], ["335", "339"], ["335", "344"], ["247", "262"], ["247", "264"], ["247", "253"], ["247", "254"], ["247", "261"], ["247", "259"], ["296", "308"], ["296", "317"], ["296", "300"], ["296", "302"], ["296", "324"], ["296", "296"], ["296", "304"], ["296", "310"], ["296", "305"], ["296", "316"], ["296", "319"], ["296", "314"], ["296", "313"], ["259", "238"], ["259", "236"], ["259", "239"], ["259", "234"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int t = nextInt())<SUB>2</SUB>>", "25": "<(nextInt,nextInt())<SUB>2</SUB>>", "27": "<(JUMP_TARGET,C)>", "29": "<(LOCAL,int ii: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,ii,int ii = 0)<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.lessThan,ii &lt; t)<SUB>3</SUB>>", "35": "<(IDENTIFIER,t,ii &lt; t)<SUB>3</SUB>>", "37": "<(IDENTIFIER,ii,++ii)<SUB>3</SUB>>", "39": "<(LOCAL,int n: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,this,nextInt())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>5</SUB>>", "47": "<(nextInt,nextInt())<SUB>5</SUB>>", "49": "<(LOCAL,Pair[] P: ANY)<SUB>6</SUB>>", "51": "<(IDENTIFIER,P,ANY P = new Pair[n * m])<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.multiplication,n * m)<SUB>6</SUB>>", "55": "<(IDENTIFIER,m,n * m)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[][] g = new int[n][m])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[n][m])>", "61": "<(IDENTIFIER,m,new int[n][m])<SUB>7</SUB>>", "63": "<(LOCAL,int i: int)<SUB>8</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "69": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,++i)<SUB>8</SUB>>", "73": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); ++j),for (int j = 0; Some(j &lt; m); ++j))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "77": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "79": "<(IDENTIFIER,j,j &lt; m)<SUB>9</SUB>>", "81": "<(&lt;operator&gt;.preIncrement,++j)<SUB>9</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,g[i][j])<SUB>10</SUB>>", "87": "<(IDENTIFIER,g,g[i][j] = nextInt())<SUB>10</SUB>>", "89": "<(IDENTIFIER,j,g[i][j] = nextInt())<SUB>10</SUB>>", "91": "<(IDENTIFIER,this,nextInt())<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,P[j + m * i])<SUB>11</SUB>>", "95": "<(&lt;operator&gt;.addition,j + m * i)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.multiplication,m * i)<SUB>11</SUB>>", "99": "<(IDENTIFIER,i,m * i)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "103": "<(&lt;operator&gt;.alloc,new Pair(i, j, g[i][j]))<SUB>11</SUB>>", "105": "<(IDENTIFIER,$obj0,new Pair(i, j, g[i][j]))>", "107": "<(IDENTIFIER,j,new Pair(i, j, g[i][j]))<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,g[i])<SUB>11</SUB>>", "111": "<(IDENTIFIER,i,new Pair(i, j, g[i][j]))<SUB>11</SUB>>", "113": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "115": "<(LOCAL,int i: int)<SUB>14</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; P.length)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,P.length)<SUB>14</SUB>>", "123": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,++i)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.equals,P[i] == null)<SUB>14</SUB>>", "129": "<(IDENTIFIER,P,P[i] == null)<SUB>14</SUB>>", "131": "<(LITERAL,null,P[i] == null)<SUB>14</SUB>>", "133": "<(sort,sort(P))<SUB>15</SUB>>", "135": "<(IDENTIFIER,P,sort(P))<SUB>15</SUB>>", "136": "<(&lt;operator&gt;.assignment,ANY rotcols = new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "138": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "3": "<(IDENTIFIER,rotcols,new HashSet&lt;Integer&gt;())<SUB>16</SUB>>", "141": "<(LOCAL,int i: int)<SUB>17</SUB>>", "143": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>17</SUB>>", "147": "<(IDENTIFIER,n,i &lt; n)<SUB>17</SUB>>", "149": "<(IDENTIFIER,i,++i)<SUB>17</SUB>>", "151": "<(add,add(P[i].j))<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.fieldAccess,P[i].j)<SUB>19</SUB>>", "155": "<(IDENTIFIER,P,add(P[i].j))<SUB>19</SUB>>", "157": "<(FIELD_IDENTIFIER,j,j)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.logicalOr,n &lt;= 3 || rotcols.size() &gt;= 3)<SUB>22</SUB>>", "161": "<(IDENTIFIER,n,n &lt;= 3)<SUB>22</SUB>>", "163": "<(&lt;operator&gt;.greaterEqualsThan,rotcols.size() &gt;= 3)<SUB>22</SUB>>", "165": "<(IDENTIFIER,rotcols,size())<SUB>22</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>24</SUB>>", "171": "<(LITERAL,0,int sum = 0)<SUB>24</SUB>>", "173": "<(LOCAL,int i: int)<SUB>25</SUB>>", "175": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "177": "<(&lt;operator&gt;.logicalAnd,i &lt; n &amp;&amp; i &lt; P.length)<SUB>25</SUB>>", "179": "<(IDENTIFIER,i,i &lt; n)<SUB>25</SUB>>", "181": "<(&lt;operator&gt;.lessThan,i &lt; P.length)<SUB>25</SUB>>", "183": "<(&lt;operator&gt;.fieldAccess,P.length)<SUB>25</SUB>>", "185": "<(FIELD_IDENTIFIER,length,length)<SUB>25</SUB>>", "187": "<(IDENTIFIER,i,++i)<SUB>25</SUB>>", "189": "<(IDENTIFIER,sum,sum += P[i].L)<SUB>25</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,P[i])<SUB>25</SUB>>", "193": "<(IDENTIFIER,i,sum += P[i].L)<SUB>25</SUB>>", "195": "<(println,System.out.println(sum))<SUB>26</SUB>>", "197": "<(IDENTIFIER,System,System.out.println(sum))<SUB>26</SUB>>", "199": "<(IDENTIFIER,sum,System.out.println(sum))<SUB>26</SUB>>", "201": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "203": "<(&lt;operator&gt;.greaterThan,P.length &gt; 4)<SUB>29</SUB>>", "205": "<(IDENTIFIER,P,P.length &gt; 4)<SUB>29</SUB>>", "207": "<(LITERAL,4,P.length &gt; 4)<SUB>29</SUB>>", "209": "<(IDENTIFIER,rotcols,add(P[4].j))<SUB>29</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,P[4])<SUB>29</SUB>>", "213": "<(LITERAL,4,add(P[4].j))<SUB>29</SUB>>", "215": "<(LOCAL,int[] rot: int[])<SUB>31</SUB>>", "217": "<(IDENTIFIER,rot,int[] rot = new int[rotcols.size()])<SUB>31</SUB>>", "219": "<(size,size())<SUB>31</SUB>>", "221": "<(LOCAL,int maxmax: int)<SUB>32</SUB>>", "223": "<(IDENTIFIER,maxmax,int maxmax = 0)<SUB>32</SUB>>", "225": "<(JUMP_TARGET,A)>", "227": "<(LITERAL,true,while (true))<SUB>33</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; rot.length); ++i),for (int i = 0; Some(i &lt; rot.length); ++i))<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>34</SUB>>", "233": "<(LITERAL,0,int i = 0)<SUB>34</SUB>>", "235": "<(IDENTIFIER,i,i &lt; rot.length)<SUB>34</SUB>>", "237": "<(IDENTIFIER,rot,i &lt; rot.length)<SUB>34</SUB>>", "239": "<(&lt;operator&gt;.preIncrement,++i)<SUB>34</SUB>>", "241": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,rot[i])<SUB>35</SUB>>", "245": "<(IDENTIFIER,i,rot[i]++)<SUB>35</SUB>>", "247": "<(&lt;operator&gt;.equals,rot[i] == n)<SUB>36</SUB>>", "249": "<(IDENTIFIER,rot,rot[i] == n)<SUB>36</SUB>>", "251": "<(IDENTIFIER,n,rot[i] == n)<SUB>36</SUB>>", "253": "<(&lt;operator&gt;.assignment,rot[i] = 0)<SUB>37</SUB>>", "255": "<(IDENTIFIER,rot,rot[i] = 0)<SUB>37</SUB>>", "257": "<(LITERAL,0,rot[i] = 0)<SUB>37</SUB>>", "259": "<(&lt;operator&gt;.equals,i == rot.length - 1)<SUB>38</SUB>>", "261": "<(&lt;operator&gt;.subtraction,rot.length - 1)<SUB>38</SUB>>", "263": "<(IDENTIFIER,rot,rot.length - 1)<SUB>38</SUB>>", "265": "<(LITERAL,1,rot.length - 1)<SUB>38</SUB>>", "267": "<(CONTROL_STRUCTURE,else,else)<SUB>39</SUB>>", "269": "<(CONTROL_STRUCTURE,break;,break;)<SUB>40</SUB>>", "271": "<(&lt;operator&gt;.assignment,int[] max = new int[n])<SUB>43</SUB>>", "273": "<(&lt;operator&gt;.alloc,new int[n])>", "275": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); ++i),for (int i = 0; Some(i &lt; n); ++i))<SUB>44</SUB>>", "277": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>44</SUB>>", "279": "<(LITERAL,0,int i = 0)<SUB>44</SUB>>", "281": "<(IDENTIFIER,i,i &lt; n)<SUB>44</SUB>>", "283": "<(&lt;operator&gt;.preIncrement,++i)<SUB>44</SUB>>", "285": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "287": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>45</SUB>>", "289": "<(LITERAL,0,int j = 0)<SUB>45</SUB>>", "291": "<(&lt;operator&gt;.assignment,)<SUB>46</SUB>>", "293": "<(iterator,&lt;empty&gt;)<SUB>46</SUB>>", "295": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>46</SUB>>", "297": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "299": "<(LOCAL,col: int)<SUB>46</SUB>>", "301": "<(IDENTIFIER,col,&lt;empty&gt;)>", "303": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "305": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>47</SUB>>", "307": "<(IDENTIFIER,i,max[i] = Math.max(max[i], g[(i + rot[j]) % n][col]))<SUB>47</SUB>>", "309": "<(IDENTIFIER,Math,Math.max(max[i], g[(i + rot[j]) % n][col]))<SUB>47</SUB>>", "311": "<(IDENTIFIER,max,Math.max(max[i], g[(i + rot[j]) % n][col]))<SUB>47</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,g[(i + rot[j]) % n][col])<SUB>47</SUB>>", "315": "<(IDENTIFIER,g,Math.max(max[i], g[(i + rot[j]) % n][col]))<SUB>47</SUB>>", "317": "<(&lt;operator&gt;.addition,i + rot[j])<SUB>47</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,rot[j])<SUB>47</SUB>>", "321": "<(IDENTIFIER,j,i + rot[j])<SUB>47</SUB>>", "323": "<(IDENTIFIER,col,Math.max(max[i], g[(i + rot[j]) % n][col]))<SUB>47</SUB>>", "325": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "327": "<(&lt;operator&gt;.assignment,int sum = 0)<SUB>51</SUB>>", "329": "<(LITERAL,0,int sum = 0)<SUB>51</SUB>>", "331": "<(LOCAL,$idx0: int)<SUB>52</SUB>>", "333": "<(IDENTIFIER,$idx0,int $idx0 = 0)>", "335": "<(&lt;operator&gt;.lessThan,$idx0 &lt; max.length)<SUB>52</SUB>>", "337": "<(&lt;operator&gt;.fieldAccess,max.length)<SUB>52</SUB>>", "339": "<(FIELD_IDENTIFIER,length,length)<SUB>52</SUB>>", "341": "<(IDENTIFIER,$idx0,$idx0++)>", "343": "<(LOCAL,m2: int)<SUB>52</SUB>>", "345": "<(IDENTIFIER,m2,&lt;empty&gt;)>", "347": "<(IDENTIFIER,max,&lt;empty&gt;)>", "349": "<(&lt;operator&gt;.assignmentPlus,sum += m2)<SUB>52</SUB>>", "351": "<(IDENTIFIER,m2,sum += m2)<SUB>52</SUB>>", "353": "<(IDENTIFIER,maxmax,maxmax = Math.max(maxmax, sum))<SUB>53</SUB>>", "355": "<(IDENTIFIER,Math,Math.max(maxmax, sum))<SUB>53</SUB>>", "357": "<(IDENTIFIER,sum,Math.max(maxmax, sum))<SUB>53</SUB>>", "359": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>55</SUB>>", "361": "<(FIELD_IDENTIFIER,out,out)<SUB>55</SUB>>", "363": "<(MODIFIER,PUBLIC)>", "365": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}