{"edges": [["19", "20"], ["19", "21"], ["19", "160"], ["19", "161"], ["19", "162"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "44"], ["35", "36"], ["35", "37"], ["38", "39"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["45", "46"], ["45", "49"], ["45", "56"], ["46", "47"], ["46", "48"], ["49", "50"], ["50", "51"], ["50", "52"], ["50", "53"], ["50", "54"], ["50", "55"], ["56", "57"], ["57", "58"], ["57", "61"], ["57", "68"], ["58", "59"], ["58", "60"], ["61", "62"], ["62", "63"], ["62", "64"], ["62", "65"], ["62", "66"], ["62", "67"], ["68", "69"], ["69", "70"], ["69", "73"], ["69", "80"], ["70", "71"], ["70", "72"], ["73", "74"], ["74", "75"], ["74", "76"], ["74", "77"], ["74", "78"], ["74", "79"], ["80", "81"], ["81", "82"], ["81", "85"], ["81", "92"], ["82", "83"], ["82", "84"], ["85", "86"], ["86", "87"], ["86", "88"], ["86", "89"], ["86", "90"], ["86", "91"], ["92", "93"], ["93", "94"], ["93", "97"], ["93", "104"], ["94", "95"], ["94", "96"], ["97", "98"], ["98", "99"], ["98", "100"], ["98", "101"], ["98", "102"], ["98", "103"], ["104", "105"], ["105", "106"], ["105", "109"], ["105", "116"], ["106", "107"], ["106", "108"], ["109", "110"], ["110", "111"], ["110", "112"], ["110", "113"], ["110", "114"], ["110", "115"], ["116", "117"], ["117", "118"], ["117", "121"], ["117", "128"], ["118", "119"], ["118", "120"], ["121", "122"], ["122", "123"], ["122", "124"], ["122", "125"], ["122", "126"], ["122", "127"], ["128", "129"], ["129", "130"], ["129", "133"], ["129", "140"], ["130", "131"], ["130", "132"], ["133", "134"], ["134", "135"], ["134", "136"], ["134", "137"], ["134", "138"], ["134", "139"], ["140", "141"], ["141", "142"], ["141", "145"], ["141", "152"], ["142", "143"], ["142", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "149"], ["146", "150"], ["146", "151"], ["152", "153"], ["153", "154"], ["154", "155"], ["154", "156"], ["154", "157"], ["154", "158"], ["154", "159"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "46"], ["28", "26"], ["39", "162"], ["40", "39"], ["46", "50"], ["46", "58"], ["42", "40"], ["50", "162"], ["58", "62"], ["58", "70"], ["62", "162"], ["70", "74"], ["70", "82"], ["74", "162"], ["82", "86"], ["82", "94"], ["86", "162"], ["94", "98"], ["94", "106"], ["98", "162"], ["106", "110"], ["106", "118"], ["110", "162"], ["118", "122"], ["118", "130"], ["122", "162"], ["130", "134"], ["130", "142"], ["134", "162"], ["142", "146"], ["142", "154"], ["146", "162"], ["154", "162"], ["19", "24"], ["20", "162"], ["22", "162"], ["25", "162"], ["25", "162"], ["32", "162"], ["30", "162"], ["30", "162"], ["35", "162"], ["39", "162"], ["39", "162"], ["39", "162"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["35", "39"], ["19", "39"], ["35", "46"], ["19", "46"], ["19", "50"], ["46", "50"], ["46", "58"], ["19", "58"], ["19", "62"], ["58", "62"], ["58", "70"], ["19", "70"], ["19", "74"], ["70", "74"], ["70", "82"], ["19", "82"], ["19", "86"], ["82", "86"], ["82", "94"], ["19", "94"], ["19", "98"], ["94", "98"], ["94", "106"], ["19", "106"], ["19", "110"], ["106", "110"], ["106", "118"], ["19", "118"], ["19", "122"], ["118", "122"], ["118", "130"], ["19", "130"], ["19", "134"], ["130", "134"], ["130", "142"], ["19", "142"], ["19", "146"], ["142", "146"], ["19", "154"], ["142", "154"], ["35", "42"], ["35", "46"], ["35", "40"], ["35", "39"], ["46", "50"], ["46", "58"], ["58", "70"], ["58", "62"], ["70", "74"], ["70", "82"], ["82", "94"], ["82", "86"], ["94", "98"], ["94", "106"], ["106", "118"], ["106", "110"], ["118", "122"], ["118", "130"], ["130", "142"], ["130", "134"], ["142", "154"], ["142", "146"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long index: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,index,long index = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.lessThan,index &lt; 10)<SUB>4</SUB>>", "37": "<(LITERAL,10,index &lt; 10)<SUB>4</SUB>>", "39": "<(println,System.out.println(index))<SUB>6</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(index))<SUB>6</SUB>>", "43": "<(IDENTIFIER,index,System.out.println(index))<SUB>6</SUB>>", "45": "<(CONTROL_STRUCTURE,if (index &lt; 190),if (index &lt; 190))<SUB>7</SUB>>", "47": "<(IDENTIFIER,index,index &lt; 190)<SUB>7</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "51": "<(IDENTIFIER,this,solve(2, index, 10, 10))<SUB>9</SUB>>", "53": "<(IDENTIFIER,index,solve(2, index, 10, 10))<SUB>9</SUB>>", "55": "<(LITERAL,10,solve(2, index, 10, 10))<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,if (index &lt; 2890),if (index &lt; 2890))<SUB>11</SUB>>", "59": "<(IDENTIFIER,index,index &lt; 2890)<SUB>11</SUB>>", "61": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "63": "<(IDENTIFIER,this,solve(3, index, 190, 100))<SUB>13</SUB>>", "65": "<(IDENTIFIER,index,solve(3, index, 190, 100))<SUB>13</SUB>>", "67": "<(LITERAL,100,solve(3, index, 190, 100))<SUB>13</SUB>>", "69": "<(CONTROL_STRUCTURE,if (index &lt; 38890),if (index &lt; 38890))<SUB>15</SUB>>", "71": "<(IDENTIFIER,index,index &lt; 38890)<SUB>15</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "75": "<(IDENTIFIER,this,solve(4, index, 2890, 1000))<SUB>17</SUB>>", "77": "<(IDENTIFIER,index,solve(4, index, 2890, 1000))<SUB>17</SUB>>", "79": "<(LITERAL,1000,solve(4, index, 2890, 1000))<SUB>17</SUB>>", "81": "<(CONTROL_STRUCTURE,if (index &lt; 488890),if (index &lt; 488890))<SUB>20</SUB>>", "83": "<(IDENTIFIER,index,index &lt; 488890)<SUB>20</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "87": "<(IDENTIFIER,this,solve(5, index, 38890, 10000))<SUB>22</SUB>>", "89": "<(IDENTIFIER,index,solve(5, index, 38890, 10000))<SUB>22</SUB>>", "91": "<(LITERAL,10000,solve(5, index, 38890, 10000))<SUB>22</SUB>>", "93": "<(CONTROL_STRUCTURE,if (index &lt; 5888890),if (index &lt; 5888890))<SUB>24</SUB>>", "95": "<(IDENTIFIER,index,index &lt; 5888890)<SUB>24</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "99": "<(IDENTIFIER,this,solve(6, index, 488890, 100000))<SUB>26</SUB>>", "101": "<(IDENTIFIER,index,solve(6, index, 488890, 100000))<SUB>26</SUB>>", "103": "<(LITERAL,100000,solve(6, index, 488890, 100000))<SUB>26</SUB>>", "105": "<(CONTROL_STRUCTURE,if (index &lt; 68888890),if (index &lt; 68888890))<SUB>28</SUB>>", "107": "<(IDENTIFIER,index,index &lt; 68888890)<SUB>28</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "111": "<(IDENTIFIER,this,solve(7, index, 5888890, 1000000))<SUB>30</SUB>>", "113": "<(IDENTIFIER,index,solve(7, index, 5888890, 1000000))<SUB>30</SUB>>", "115": "<(LITERAL,1000000,solve(7, index, 5888890, 1000000))<SUB>30</SUB>>", "117": "<(CONTROL_STRUCTURE,if (index &lt; 788888890),if (index &lt; 788888890))<SUB>32</SUB>>", "119": "<(IDENTIFIER,index,index &lt; 788888890)<SUB>32</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "123": "<(IDENTIFIER,this,solve(8, index, 68888890, 10000000))<SUB>34</SUB>>", "125": "<(IDENTIFIER,index,solve(8, index, 68888890, 10000000))<SUB>34</SUB>>", "127": "<(LITERAL,10000000,solve(8, index, 68888890, 10000000))<SUB>34</SUB>>", "129": "<(CONTROL_STRUCTURE,if (index &lt; 8888888890l),if (index &lt; 8888888890l))<SUB>36</SUB>>", "131": "<(IDENTIFIER,index,index &lt; 8888888890l)<SUB>36</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "135": "<(IDENTIFIER,this,solve(9, index, 788888890, 100000000))<SUB>38</SUB>>", "137": "<(IDENTIFIER,index,solve(9, index, 788888890, 100000000))<SUB>38</SUB>>", "139": "<(LITERAL,100000000,solve(9, index, 788888890, 100000000))<SUB>38</SUB>>", "141": "<(CONTROL_STRUCTURE,if (index &lt; 98888888890l),if (index &lt; 98888888890l))<SUB>40</SUB>>", "143": "<(IDENTIFIER,index,index &lt; 98888888890l)<SUB>40</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "147": "<(IDENTIFIER,this,solve(10, index, 8888888890l, 1000000000))<SUB>42</SUB>>", "149": "<(IDENTIFIER,index,solve(10, index, 8888888890l, 1000000000))<SUB>42</SUB>>", "151": "<(LITERAL,1000000000,solve(10, index, 8888888890l, 1000000000))<SUB>42</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>>", "155": "<(IDENTIFIER,this,solve(11, index, 98888888890l, 10000000000l))<SUB>45</SUB>>", "157": "<(IDENTIFIER,index,solve(11, index, 98888888890l, 10000000000l))<SUB>45</SUB>>", "159": "<(LITERAL,10000000000l,solve(11, index, 98888888890l, 10000000000l))<SUB>45</SUB>>", "161": "<(MODIFIER,STATIC)>"}}