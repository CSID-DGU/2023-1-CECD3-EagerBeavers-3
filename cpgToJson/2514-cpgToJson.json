{"edges": [["43", "44"], ["43", "197"], ["43", "198"], ["43", "199"], ["44", "4"], ["44", "45"], ["44", "48"], ["44", "6"], ["44", "49"], ["44", "52"], ["44", "19"], ["44", "56"], ["44", "17"], ["44", "60"], ["44", "8"], ["44", "66"], ["44", "69"], ["44", "70"], ["44", "28"], ["44", "145"], ["44", "148"], ["44", "149"], ["44", "150"], ["44", "155"], ["44", "174"], ["44", "178"], ["44", "179"], ["44", "183"], ["44", "195"], ["45", "46"], ["45", "47"], ["48", "3"], ["49", "50"], ["49", "51"], ["52", "5"], ["52", "53"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["69", "7"], ["70", "21"], ["70", "71"], ["70", "74"], ["70", "77"], ["70", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "92"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "15"], ["92", "93"], ["92", "96"], ["92", "99"], ["92", "101"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "13"], ["101", "102"], ["101", "113"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "127"], ["114", "115"], ["114", "119"], ["115", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "126"], ["120", "121"], ["120", "125"], ["121", "122"], ["122", "123"], ["122", "124"], ["127", "10"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["130", "11"], ["133", "134"], ["133", "135"], ["135", "136"], ["135", "139"], ["135", "144"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["139", "142"], ["139", "143"], ["145", "146"], ["145", "147"], ["148", "27"], ["150", "151"], ["150", "152"], ["152", "153"], ["153", "154"], ["155", "156"], ["155", "158"], ["156", "157"], ["158", "159"], ["158", "160"], ["158", "164"], ["160", "161"], ["160", "162"], ["162", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "168"], ["166", "167"], ["168", "169"], ["170", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["176", "177"], ["179", "180"], ["179", "181"], ["181", "182"], ["183", "184"], ["183", "186"], ["184", "185"], ["186", "187"], ["186", "188"], ["186", "192"], ["188", "189"], ["188", "190"], ["190", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["45", "48"], ["48", "51"], ["49", "55"], ["52", "58"], ["56", "63"], ["60", "68"], ["66", "69"], ["69", "71"], ["145", "148"], ["148", "153"], ["150", "156"], ["174", "181"], ["179", "184"], ["195", "199"], ["47", "45"], ["51", "49"], ["53", "52"], ["58", "56"], ["62", "60"], ["68", "66"], ["71", "74"], ["74", "81"], ["74", "147"], ["77", "74"], ["147", "145"], ["152", "150"], ["156", "162"], ["156", "176"], ["176", "174"], ["181", "179"], ["184", "190"], ["184", "195"], ["55", "53"], ["63", "62"], ["80", "93"], ["153", "152"], ["160", "166"], ["188", "192"], ["192", "184"], ["81", "87"], ["84", "80"], ["93", "96"], ["96", "105"], ["96", "77"], ["99", "96"], ["162", "160"], ["165", "156"], ["165", "171"], ["190", "188"], ["85", "90"], ["90", "84"], ["102", "116"], ["166", "168"], ["168", "165"], ["171", "156"], ["87", "85"], ["104", "102"], ["114", "11"], ["114", "99"], ["105", "110"], ["108", "104"], ["115", "114"], ["115", "122"], ["119", "114"], ["128", "138"], ["133", "99"], ["110", "108"], ["116", "115"], ["120", "119"], ["130", "128"], ["121", "125"], ["125", "120"], ["11", "130"], ["136", "139"], ["139", "133"], ["122", "121"], ["138", "136"], ["43", "47"], ["26", "199"], ["45", "199"], ["48", "199"], ["49", "199"], ["52", "199"], ["52", "199"], ["58", "199"], ["56", "199"], ["56", "199"], ["60", "199"], ["62", "199"], ["60", "199"], ["60", "199"], ["66", "199"], ["69", "199"], ["71", "199"], ["74", "199"], ["74", "199"], ["74", "199"], ["145", "199"], ["148", "199"], ["153", "199"], ["152", "199"], ["156", "199"], ["174", "199"], ["174", "199"], ["181", "199"], ["179", "199"], ["184", "199"], ["184", "199"], ["195", "199"], ["195", "199"], ["192", "199"], ["192", "199"], ["166", "199"], ["165", "199"], ["171", "199"], ["171", "199"], ["80", "199"], ["84", "199"], ["90", "199"], ["84", "199"], ["80", "199"], ["80", "199"], ["93", "199"], ["96", "199"], ["96", "199"], ["77", "199"], ["104", "199"], ["104", "199"], ["102", "199"], ["102", "199"], ["116", "199"], ["115", "199"], ["114", "199"], ["122", "199"], ["121", "199"], ["114", "199"], ["114", "199"], ["128", "199"], ["128", "199"], ["133", "199"], ["139", "199"], ["139", "199"], ["139", "199"], ["133", "199"], ["99", "199"], ["43", "26"], ["43", "45"], ["43", "49"], ["58", "56"], ["62", "60"], ["43", "66"], ["43", "145"], ["152", "150"], ["181", "179"], ["45", "48"], ["43", "48"], ["49", "52"], ["43", "52"], ["66", "69"], ["43", "69"], ["43", "71"], ["145", "148"], ["43", "148"], ["52", "174"], ["43", "174"], ["176", "174"], ["174", "195"], ["192", "195"], ["43", "195"], ["48", "58"], ["43", "58"], ["56", "62"], ["43", "62"], ["71", "74"], ["77", "74"], ["43", "74"], ["56", "74"], ["139", "77"], ["43", "77"], ["87", "77"], ["60", "80"], ["90", "80"], ["153", "152"], ["150", "156"], ["162", "156"], ["43", "156"], ["162", "160"], ["148", "176"], ["168", "176"], ["171", "176"], ["43", "176"], ["176", "181"], ["43", "181"], ["179", "184"], ["190", "184"], ["43", "184"], ["190", "188"], ["56", "63"], ["43", "63"], ["87", "93"], ["43", "93"], ["69", "153"], ["116", "153"], ["122", "153"], ["130", "153"], ["43", "153"], ["174", "192"], ["43", "192"], ["188", "192"], ["60", "84"], ["90", "84"], ["93", "96"], ["99", "96"], ["43", "96"], ["110", "99"], ["119", "99"], ["139", "99"], ["43", "99"], ["104", "102"], ["104", "102"], ["156", "162"], ["43", "162"], ["166", "165"], ["168", "165"], ["166", "171"], ["43", "171"], ["184", "190"], ["43", "190"], ["58", "90"], ["43", "90"], ["160", "166"], ["43", "166"], ["148", "168"], ["171", "168"], ["43", "168"], ["74", "87"], ["43", "87"], ["60", "104"], ["80", "104"], ["115", "114"], ["119", "114"], ["119", "114"], ["130", "128"], ["130", "128"], ["130", "128"], ["116", "115"], ["116", "115"], ["110", "119"], ["43", "119"], ["128", "133"], ["43", "133"], ["136", "133"], ["139", "133"], ["96", "110"], ["43", "110"], ["69", "116"], ["122", "116"], ["130", "116"], ["43", "116"], ["102", "116"], ["116", "130"], ["122", "130"], ["43", "130"], ["116", "130"], ["122", "130"], ["43", "136"], ["43", "144"], ["122", "121"], ["122", "121"], ["136", "139"], ["43", "139"], ["110", "139"], ["119", "139"], ["87", "139"], ["130", "139"], ["116", "122"], ["43", "122"], ["116", "122"], ["74", "96"], ["74", "77"], ["74", "81"], ["74", "84"], ["74", "85"], ["74", "74"], ["74", "87"], ["74", "93"], ["74", "90"], ["74", "80"], ["156", "160"], ["156", "166"], ["156", "162"], ["156", "168"], ["156", "165"], ["156", "156"], ["184", "188"], ["184", "192"], ["184", "190"], ["184", "184"], ["96", "115"], ["96", "96"], ["96", "116"], ["96", "99"], ["96", "102"], ["96", "114"], ["96", "104"], ["96", "105"], ["96", "110"], ["96", "108"], ["165", "171"], ["114", "136"], ["114", "128"], ["114", "138"], ["114", "11"], ["114", "130"], ["114", "139"], ["114", "133"], ["115", "120"], ["115", "122"], ["115", "119"], ["115", "121"], ["115", "125"]], "features": {"43": "<(METHOD,main)<SUB>1</SUB>>", "44": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "45": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>2</SUB>>", "47": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>2</SUB>>", "49": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "51": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "54": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "19": "<(LOCAL,int N: int)<SUB>5</SUB>>", "57": "<(IDENTIFIER,N,int N = nextInt())<SUB>5</SUB>>", "59": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[] pre = new int[N + 1])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[N + 1])>", "64": "<(IDENTIFIER,N,N + 1)<SUB>6</SUB>>", "8": "<(LOCAL,var ansMap: ANY)<SUB>7</SUB>>", "67": "<(IDENTIFIER,ansMap,ANY ansMap = new HashMap&lt;Integer, ArrayDeque&lt;Pair&gt;&gt;())<SUB>7</SUB>>", "69": "<(&lt;init&gt;,new HashMap&lt;Integer, ArrayDeque&lt;Pair&gt;&gt;())<SUB>7</SUB>>", "70": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= N); j++),for (int j = 1; Some(j &lt;= N); j++))<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>8</SUB>>", "73": "<(LITERAL,1,int j = 1)<SUB>8</SUB>>", "75": "<(IDENTIFIER,j,j &lt;= N)<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>9</SUB>>", "83": "<(IDENTIFIER,j,pre[j] = pre[j - 1] + sc.nextInt())<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,pre[j - 1])<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>9</SUB>>", "89": "<(LITERAL,1,j - 1)<SUB>9</SUB>>", "91": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "15": "<(LOCAL,int i: int)<SUB>10</SUB>>", "94": "<(IDENTIFIER,i,int i = j)<SUB>10</SUB>>", "96": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 1)<SUB>10</SUB>>", "98": "<(LITERAL,1,i &gt;= 1)<SUB>10</SUB>>", "100": "<(IDENTIFIER,i,i--)<SUB>10</SUB>>", "13": "<(LOCAL,int sum: int)<SUB>11</SUB>>", "103": "<(IDENTIFIER,sum,int sum = pre[j] - pre[i - 1])<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,pre[j])<SUB>11</SUB>>", "107": "<(IDENTIFIER,j,pre[j] - pre[i - 1])<SUB>11</SUB>>", "109": "<(IDENTIFIER,pre,pre[j] - pre[i - 1])<SUB>11</SUB>>", "111": "<(IDENTIFIER,i,i - 1)<SUB>11</SUB>>", "113": "<(CONTROL_STRUCTURE,if (!ansMap.containsKey(sum) || ansMap.get(sum).getLast().r &lt; i),if (!ansMap.containsKey(sum) || ansMap.get(sum).getLast().r &lt; i))<SUB>20</SUB>>", "115": "<(&lt;operator&gt;.logicalNot,!ansMap.containsKey(sum))<SUB>20</SUB>>", "117": "<(IDENTIFIER,ansMap,containsKey(sum))<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.lessThan,ansMap.get(sum).getLast().r &lt; i)<SUB>20</SUB>>", "121": "<(getLast,getLast())<SUB>20</SUB>>", "123": "<(IDENTIFIER,ansMap,get(sum))<SUB>20</SUB>>", "125": "<(FIELD_IDENTIFIER,r,r)<SUB>20</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "128": "<(&lt;operator&gt;.assignment,ANY dq = computeIfAbsent(sum, &lt;lambda&gt;))<SUB>21</SUB>>", "130": "<(computeIfAbsent,computeIfAbsent(sum, &lt;lambda&gt;))<SUB>21</SUB>>", "132": "<(IDENTIFIER,sum,computeIfAbsent(sum, &lt;lambda&gt;))<SUB>21</SUB>>", "133": "<(add,add(new Pair(i, j, sum)))<SUB>22</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "137": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "139": "<(&lt;init&gt;,new Pair(i, j, sum))<SUB>22</SUB>>", "141": "<(IDENTIFIER,i,new Pair(i, j, sum))<SUB>22</SUB>>", "143": "<(IDENTIFIER,sum,new Pair(i, j, sum))<SUB>22</SUB>>", "28": "<(LOCAL,var ans: ANY)<SUB>26</SUB>>", "146": "<(IDENTIFIER,ans,ANY ans = new ArrayDeque&lt;Pair&gt;())<SUB>26</SUB>>", "148": "<(&lt;init&gt;,new ArrayDeque&lt;Pair&gt;())<SUB>26</SUB>>", "149": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>27</SUB>>", "151": "<(IDENTIFIER,$iterLocal0,)<SUB>27</SUB>>", "153": "<(values,values())<SUB>27</SUB>>", "155": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>27</SUB>>", "157": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "159": "<(LOCAL,group: ANY)<SUB>27</SUB>>", "161": "<(IDENTIFIER,group,&lt;empty&gt;)>", "163": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "165": "<(&lt;operator&gt;.greaterThan,group.size() &gt; ans.size())<SUB>28</SUB>>", "167": "<(IDENTIFIER,group,size())<SUB>28</SUB>>", "169": "<(IDENTIFIER,ans,size())<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.assignment,ans = group)<SUB>29</SUB>>", "173": "<(IDENTIFIER,group,ans = group)<SUB>29</SUB>>", "175": "<(IDENTIFIER,out,println(ans.size()))<SUB>32</SUB>>", "177": "<(IDENTIFIER,ans,size())<SUB>32</SUB>>", "179": "<(&lt;operator&gt;.assignment,)<SUB>33</SUB>>", "181": "<(iterator,&lt;empty&gt;)<SUB>33</SUB>>", "183": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>33</SUB>>", "185": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "187": "<(LOCAL,p: ANY)<SUB>33</SUB>>", "189": "<(IDENTIFIER,p,&lt;empty&gt;)>", "191": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "193": "<(IDENTIFIER,out,println(p))<SUB>34</SUB>>", "195": "<(close,close())<SUB>36</SUB>>", "197": "<(MODIFIER,PUBLIC)>", "199": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}