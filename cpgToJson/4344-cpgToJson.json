{"edges": [["19", "21"], ["19", "277"], ["19", "278"], ["19", "279"], ["21", "22"], ["21", "23"], ["21", "4"], ["21", "28"], ["21", "31"], ["21", "33"], ["21", "34"], ["21", "38"], ["21", "39"], ["21", "43"], ["21", "44"], ["21", "49"], ["21", "50"], ["21", "55"], ["21", "56"], ["21", "61"], ["21", "62"], ["21", "65"], ["21", "66"], ["21", "69"], ["21", "86"], ["21", "124"], ["21", "266"], ["21", "273"], ["21", "275"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["80", "81"], ["80", "82"], ["80", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "104"], ["96", "105"], ["96", "111"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "103"], ["101", "102"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "110"], ["108", "109"], ["111", "112"], ["111", "117"], ["112", "113"], ["112", "116"], ["113", "114"], ["113", "115"], ["117", "118"], ["117", "123"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "132"], ["124", "134"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["134", "135"], ["134", "152"], ["134", "161"], ["134", "261"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "160"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["161", "162"], ["161", "163"], ["161", "168"], ["161", "171"], ["161", "173"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["171", "172"], ["173", "174"], ["173", "181"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["181", "182"], ["181", "183"], ["181", "186"], ["181", "189"], ["181", "191"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "188"], ["189", "190"], ["191", "192"], ["192", "193"], ["192", "200"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["200", "201"], ["200", "220"], ["201", "202"], ["201", "213"], ["202", "203"], ["202", "208"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["220", "225"], ["220", "228"], ["220", "230"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["231", "232"], ["231", "245"], ["232", "233"], ["232", "240"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["246", "247"], ["246", "256"], ["247", "248"], ["247", "255"], ["248", "249"], ["248", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["275", "276"], ["23", "30"], ["28", "31"], ["31", "36"], ["34", "41"], ["39", "46"], ["44", "52"], ["50", "58"], ["56", "62"], ["62", "66"], ["66", "71"], ["266", "273"], ["273", "275"], ["275", "279"], ["25", "23"], ["30", "28"], ["36", "34"], ["41", "39"], ["46", "44"], ["52", "50"], ["58", "56"], ["71", "74"], ["74", "82"], ["74", "88"], ["77", "74"], ["88", "91"], ["91", "101"], ["91", "126"], ["94", "91"], ["126", "129"], ["129", "137"], ["129", "269"], ["132", "129"], ["267", "270"], ["270", "266"], ["27", "25"], ["80", "77"], ["98", "108"], ["105", "113"], ["111", "94"], ["152", "165"], ["261", "132"], ["269", "267"], ["82", "80"], ["100", "98"], ["107", "105"], ["112", "119"], ["117", "111"], ["137", "140"], ["140", "148"], ["140", "156"], ["143", "140"], ["153", "152"], ["163", "168"], ["168", "176"], ["168", "263"], ["171", "168"], ["263", "261"], ["101", "100"], ["108", "107"], ["113", "112"], ["118", "117"], ["146", "143"], ["154", "153"], ["165", "163"], ["119", "118"], ["148", "146"], ["156", "154"], ["175", "171"], ["175", "183"], ["183", "186"], ["186", "195"], ["186", "171"], ["189", "186"], ["176", "175"], ["193", "204"], ["193", "189"], ["194", "193"], ["195", "194"], ["202", "216"], ["202", "222"], ["213", "222"], ["222", "225"], ["225", "236"], ["225", "189"], ["228", "225"], ["203", "202"], ["203", "209"], ["208", "202"], ["215", "213"], ["204", "203"], ["209", "208"], ["216", "215"], ["232", "252"], ["232", "228"], ["233", "232"], ["233", "241"], ["240", "232"], ["246", "228"], ["234", "233"], ["241", "240"], ["247", "257"], ["256", "246"], ["236", "234"], ["248", "247"], ["257", "256"], ["250", "248"], ["252", "250"], ["19", "27"], ["20", "279"], ["23", "279"], ["23", "279"], ["28", "279"], ["31", "279"], ["34", "279"], ["39", "279"], ["39", "279"], ["44", "279"], ["44", "279"], ["50", "279"], ["50", "279"], ["50", "279"], ["56", "279"], ["58", "279"], ["56", "279"], ["56", "279"], ["62", "279"], ["62", "279"], ["66", "279"], ["74", "279"], ["88", "279"], ["91", "279"], ["91", "279"], ["91", "279"], ["126", "279"], ["129", "279"], ["129", "279"], ["129", "279"], ["266", "279"], ["270", "279"], ["266", "279"], ["266", "279"], ["273", "279"], ["275", "279"], ["275", "279"], ["137", "279"], ["140", "279"], ["140", "279"], ["152", "279"], ["152", "279"], ["163", "279"], ["168", "279"], ["168", "279"], ["168", "279"], ["261", "279"], ["261", "279"], ["132", "279"], ["175", "279"], ["175", "279"], ["183", "279"], ["186", "279"], ["186", "279"], ["193", "279"], ["193", "279"], ["202", "279"], ["208", "279"], ["202", "279"], ["202", "279"], ["213", "279"], ["213", "279"], ["222", "279"], ["225", "279"], ["225", "279"], ["189", "279"], ["234", "279"], ["233", "279"], ["232", "279"], ["232", "279"], ["232", "279"], ["250", "279"], ["246", "279"], ["246", "279"], ["246", "279"], ["228", "279"], ["171", "279"], ["146", "279"], ["146", "279"], ["146", "279"], ["143", "279"], ["98", "279"], ["98", "279"], ["105", "279"], ["107", "279"], ["105", "279"], ["105", "279"], ["111", "279"], ["117", "279"], ["111", "279"], ["111", "279"], ["94", "279"], ["80", "279"], ["80", "279"], ["80", "279"], ["77", "279"], ["209", "279"], ["19", "20"], ["19", "28"], ["36", "34"], ["41", "39"], ["46", "44"], ["46", "44"], ["52", "50"], ["58", "56"], ["58", "56"], ["19", "62"], ["19", "66"], ["28", "31"], ["19", "31"], ["23", "31"], ["19", "71"], ["19", "88"], ["19", "126"], ["270", "266"], ["270", "266"], ["31", "273"], ["19", "273"], ["41", "275"], ["108", "275"], ["19", "275"], ["31", "36"], ["19", "36"], ["36", "41"], ["19", "41"], ["19", "46"], ["34", "46"], ["46", "52"], ["19", "52"], ["44", "58"], ["19", "58"], ["52", "58"], ["71", "74"], ["77", "74"], ["19", "74"], ["58", "74"], ["74", "77"], ["19", "77"], ["88", "91"], ["94", "91"], ["19", "91"], ["39", "91"], ["91", "94"], ["19", "94"], ["100", "98"], ["100", "98"], ["107", "105"], ["107", "105"], ["117", "111"], ["19", "111"], ["126", "129"], ["132", "129"], ["19", "129"], ["74", "129"], ["186", "129"], ["263", "132"], ["19", "132"], ["19", "152"], ["263", "261"], ["263", "261"], ["66", "270"], ["213", "270"], ["19", "270"], ["19", "80"], ["50", "80"], ["129", "137"], ["19", "137"], ["165", "163"], ["165", "163"], ["62", "261"], ["176", "261"], ["19", "261"], ["101", "100"], ["19", "100"], ["108", "107"], ["19", "107"], ["19", "117"], ["137", "140"], ["143", "140"], ["19", "140"], ["58", "140"], ["168", "140"], ["140", "143"], ["19", "143"], ["163", "168"], ["171", "168"], ["19", "168"], ["140", "168"], ["176", "171"], ["209", "171"], ["234", "171"], ["250", "171"], ["19", "171"], ["19", "263"], ["165", "263"], ["41", "101"], ["108", "101"], ["19", "101"], ["101", "108"], ["19", "108"], ["80", "146"], ["19", "146"], ["56", "146"], ["19", "165"], ["156", "165"], ["165", "183"], ["19", "183"], ["19", "156"], ["129", "156"], ["176", "175"], ["176", "175"], ["19", "175"], ["183", "186"], ["189", "186"], ["19", "186"], ["129", "186"], ["225", "186"], ["186", "189"], ["19", "189"], ["168", "176"], ["19", "176"], ["62", "176"], ["261", "176"], ["19", "193"], ["193", "213"], ["19", "222"], ["208", "202"], ["208", "202"], ["66", "213"], ["19", "213"], ["222", "225"], ["228", "225"], ["19", "225"], ["186", "225"], ["236", "228"], ["252", "228"], ["19", "228"], ["209", "208"], ["209", "208"], ["19", "208"], ["19", "209"], ["176", "209"], ["234", "209"], ["250", "209"], ["233", "232"], ["233", "232"], ["193", "246"], ["234", "233"], ["234", "233"], ["19", "233"], ["176", "234"], ["209", "234"], ["250", "234"], ["19", "234"], ["236", "234"], ["236", "234"], ["19", "236"], ["225", "236"], ["234", "250"], ["19", "250"], ["252", "250"], ["252", "250"], ["19", "252"], ["236", "252"], ["74", "77"], ["74", "74"], ["74", "80"], ["74", "82"], ["91", "107"], ["91", "94"], ["91", "98"], ["91", "113"], ["91", "119"], ["91", "91"], ["91", "112"], ["91", "101"], ["91", "118"], ["91", "100"], ["91", "108"], ["91", "111"], ["91", "105"], ["91", "117"], ["129", "154"], ["129", "163"], ["129", "132"], ["129", "261"], ["129", "153"], ["129", "168"], ["129", "129"], ["129", "137"], ["129", "152"], ["129", "140"], ["129", "263"], ["129", "165"], ["129", "156"], ["140", "146"], ["140", "148"], ["140", "140"], ["140", "143"], ["168", "168"], ["168", "171"], ["168", "176"], ["168", "175"], ["175", "186"], ["175", "183"], ["186", "189"], ["186", "195"], ["186", "194"], ["186", "186"], ["186", "193"], ["193", "225"], ["193", "204"], ["193", "202"], ["193", "203"], ["193", "222"], ["202", "215"], ["202", "213"], ["202", "216"], ["225", "225"], ["225", "232"], ["225", "228"], ["225", "233"], ["225", "236"], ["225", "234"], ["203", "209"], ["203", "208"], ["232", "257"], ["232", "256"], ["232", "247"], ["232", "246"], ["232", "252"], ["232", "248"], ["232", "250"], ["233", "240"], ["233", "241"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,ANY fin = System.in)<SUB>2</SUB>>", "25": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "27": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY cin = new Scanner(fin))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(fin))<SUB>4</SUB>>", "3": "<(IDENTIFIER,cin,new Scanner(fin))<SUB>4</SUB>>", "33": "<(LOCAL,int n: int)<SUB>6</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "37": "<(IDENTIFIER,cin,nextInt())<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>7</SUB>>", "41": "<(nextInt,nextInt())<SUB>7</SUB>>", "43": "<(LOCAL,int bound: int)<SUB>8</SUB>>", "45": "<(IDENTIFIER,bound,int bound = 1 &lt;&lt; n)<SUB>8</SUB>>", "47": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "49": "<(LOCAL,boolean[][] mp: boolean[][])<SUB>9</SUB>>", "51": "<(IDENTIFIER,mp,boolean[][] mp = new boolean[n][n])<SUB>9</SUB>>", "53": "<(IDENTIFIER,n,new boolean[n][n])<SUB>9</SUB>>", "55": "<(LOCAL,long[][] dp: long[][])<SUB>10</SUB>>", "57": "<(IDENTIFIER,dp,long[][] dp = new long[bound][n])<SUB>10</SUB>>", "59": "<(IDENTIFIER,bound,new long[bound][n])<SUB>10</SUB>>", "61": "<(LOCAL,int used: int)<SUB>11</SUB>>", "63": "<(IDENTIFIER,used,int used = 0)<SUB>11</SUB>>", "65": "<(LOCAL,long ret: long)<SUB>12</SUB>>", "67": "<(IDENTIFIER,ret,long ret = 0)<SUB>12</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>13</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "73": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "75": "<(IDENTIFIER,i,i &lt; n)<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "81": "<(IDENTIFIER,Arrays,fill(mp[i], false))<SUB>14</SUB>>", "83": "<(IDENTIFIER,mp,fill(mp[i], false))<SUB>14</SUB>>", "85": "<(LITERAL,false,fill(mp[i], false))<SUB>14</SUB>>", "87": "<(LOCAL,int i: int)<SUB>17</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>17</SUB>>", "93": "<(IDENTIFIER,m,i &lt; m)<SUB>17</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "97": "<(LOCAL,int u: int)<SUB>18</SUB>>", "99": "<(IDENTIFIER,u,int u = cin.nextInt() - 1)<SUB>18</SUB>>", "101": "<(nextInt,nextInt())<SUB>18</SUB>>", "103": "<(LITERAL,1,cin.nextInt() - 1)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.assignment,int v = cin.nextInt() - 1)<SUB>19</SUB>>", "107": "<(&lt;operator&gt;.subtraction,cin.nextInt() - 1)<SUB>19</SUB>>", "109": "<(IDENTIFIER,cin,nextInt())<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.assignment,mp[u][v] = mp[v][u] = true)<SUB>20</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,mp[u])<SUB>20</SUB>>", "115": "<(IDENTIFIER,u,mp[u][v] = mp[v][u] = true)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.assignment,mp[v][u] = true)<SUB>20</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,mp[v])<SUB>20</SUB>>", "121": "<(IDENTIFIER,v,mp[v][u] = true)<SUB>20</SUB>>", "123": "<(LITERAL,true,mp[v][u] = true)<SUB>20</SUB>>", "125": "<(LOCAL,int k: int)<SUB>23</SUB>>", "127": "<(IDENTIFIER,k,int k = 0)<SUB>23</SUB>>", "129": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>23</SUB>>", "131": "<(IDENTIFIER,n,k &lt; n)<SUB>23</SUB>>", "133": "<(IDENTIFIER,k,k++)<SUB>23</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = k; Some(i &lt; bound); i++),for (int i = k; Some(i &lt; bound); i++))<SUB>24</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = k)<SUB>24</SUB>>", "139": "<(IDENTIFIER,k,int i = k)<SUB>24</SUB>>", "141": "<(IDENTIFIER,i,i &lt; bound)<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "147": "<(IDENTIFIER,Arrays,fill(dp[i], 0))<SUB>25</SUB>>", "149": "<(IDENTIFIER,dp,fill(dp[i], 0))<SUB>25</SUB>>", "151": "<(LITERAL,0,fill(dp[i], 0))<SUB>25</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,dp[1 &lt;&lt; k][k])<SUB>27</SUB>>", "155": "<(IDENTIFIER,dp,dp[1 &lt;&lt; k][k] = 1)<SUB>27</SUB>>", "157": "<(LITERAL,1,1 &lt;&lt; k)<SUB>27</SUB>>", "159": "<(IDENTIFIER,k,dp[1 &lt;&lt; k][k] = 1)<SUB>27</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int mask = 1 &lt;&lt; k; Some(mask &lt; bound); mask++),for (int mask = 1 &lt;&lt; k; Some(mask &lt; bound); mask++))<SUB>28</SUB>>", "163": "<(&lt;operator&gt;.assignment,int mask = 1 &lt;&lt; k)<SUB>28</SUB>>", "165": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>28</SUB>>", "167": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>28</SUB>>", "169": "<(IDENTIFIER,mask,mask &lt; bound)<SUB>28</SUB>>", "171": "<(&lt;operator&gt;.postIncrement,mask++)<SUB>28</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "175": "<(&lt;operator&gt;.notEquals,(mask &amp; used) != 0)<SUB>29</SUB>>", "177": "<(IDENTIFIER,mask,mask &amp; used)<SUB>29</SUB>>", "179": "<(LITERAL,0,(mask &amp; used) != 0)<SUB>29</SUB>>", "181": "<(CONTROL_STRUCTURE,for (int i = k; Some(i &lt; n); i++),for (int i = k; Some(i &lt; n); i++))<SUB>31</SUB>>", "183": "<(&lt;operator&gt;.assignment,int i = k)<SUB>31</SUB>>", "185": "<(IDENTIFIER,k,int i = k)<SUB>31</SUB>>", "187": "<(IDENTIFIER,i,i &lt; n)<SUB>31</SUB>>", "189": "<(&lt;operator&gt;.postIncrement,i++)<SUB>31</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "193": "<(&lt;operator&gt;.notEquals,dp[mask][i] != 0)<SUB>32</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>32</SUB>>", "197": "<(IDENTIFIER,mask,dp[mask][i] != 0)<SUB>32</SUB>>", "199": "<(LITERAL,0,dp[mask][i] != 0)<SUB>32</SUB>>", "201": "<(CONTROL_STRUCTURE,if (mp[k][i] &amp;&amp; bitcount(mask) &gt; 2),if (mp[k][i] &amp;&amp; bitcount(mask) &gt; 2))<SUB>33</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,mp[k][i])<SUB>33</SUB>>", "205": "<(IDENTIFIER,mp,mp[k][i] &amp;&amp; bitcount(mask) &gt; 2)<SUB>33</SUB>>", "207": "<(IDENTIFIER,i,mp[k][i] &amp;&amp; bitcount(mask) &gt; 2)<SUB>33</SUB>>", "209": "<(bitcount,bitcount(mask))<SUB>33</SUB>>", "211": "<(IDENTIFIER,mask,bitcount(mask))<SUB>33</SUB>>", "213": "<(&lt;operator&gt;.assignmentPlus,ret += dp[mask][i])<SUB>34</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[mask][i])<SUB>34</SUB>>", "217": "<(IDENTIFIER,dp,ret += dp[mask][i])<SUB>34</SUB>>", "219": "<(IDENTIFIER,i,ret += dp[mask][i])<SUB>34</SUB>>", "221": "<(LOCAL,int j: int)<SUB>35</SUB>>", "223": "<(IDENTIFIER,j,int j = k)<SUB>35</SUB>>", "225": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>35</SUB>>", "227": "<(IDENTIFIER,n,j &lt; n)<SUB>35</SUB>>", "229": "<(IDENTIFIER,j,j++)<SUB>35</SUB>>", "231": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; j)) == 0 &amp;&amp; mp[i][j]),if ((mask &amp; (1 &lt;&lt; j)) == 0 &amp;&amp; mp[i][j]))<SUB>36</SUB>>", "233": "<(&lt;operator&gt;.equals,(mask &amp; (1 &lt;&lt; j)) == 0)<SUB>36</SUB>>", "235": "<(IDENTIFIER,mask,mask &amp; (1 &lt;&lt; j))<SUB>36</SUB>>", "237": "<(LITERAL,1,1 &lt;&lt; j)<SUB>36</SUB>>", "239": "<(LITERAL,0,(mask &amp; (1 &lt;&lt; j)) == 0)<SUB>36</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,mp[i])<SUB>36</SUB>>", "243": "<(IDENTIFIER,i,(mask &amp; (1 &lt;&lt; j)) == 0 &amp;&amp; mp[i][j])<SUB>36</SUB>>", "245": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dp[mask ^ (1 &lt;&lt; j)][j])<SUB>37</SUB>>", "249": "<(IDENTIFIER,dp,dp[mask ^ (1 &lt;&lt; j)][j] += dp[mask][i])<SUB>37</SUB>>", "251": "<(IDENTIFIER,mask,mask ^ (1 &lt;&lt; j))<SUB>37</SUB>>", "253": "<(LITERAL,1,1 &lt;&lt; j)<SUB>37</SUB>>", "255": "<(IDENTIFIER,j,dp[mask ^ (1 &lt;&lt; j)][j] += dp[mask][i])<SUB>37</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dp[mask])<SUB>37</SUB>>", "259": "<(IDENTIFIER,mask,dp[mask ^ (1 &lt;&lt; j)][j] += dp[mask][i])<SUB>37</SUB>>", "261": "<(&lt;operators&gt;.assignmentOr,used |= 1 &lt;&lt; k)<SUB>43</SUB>>", "263": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>43</SUB>>", "265": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>43</SUB>>", "267": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>46</SUB>>", "269": "<(FIELD_IDENTIFIER,out,out)<SUB>46</SUB>>", "271": "<(IDENTIFIER,ret,ret / 2)<SUB>46</SUB>>", "273": "<(close,close())<SUB>48</SUB>>", "275": "<(close,close())<SUB>49</SUB>>", "277": "<(MODIFIER,PUBLIC)>", "279": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}