{"edges": [["23", "25"], ["23", "305"], ["23", "306"], ["23", "307"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "48"], ["25", "52"], ["25", "53"], ["25", "59"], ["25", "6"], ["25", "79"], ["25", "82"], ["25", "83"], ["25", "84"], ["25", "88"], ["25", "8"], ["25", "191"], ["25", "194"], ["25", "196"], ["25", "300"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "58"], ["56", "57"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["82", "5"], ["84", "85"], ["84", "86"], ["86", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "133"], ["98", "134"], ["98", "137"], ["98", "157"], ["98", "177"], ["98", "186"], ["99", "100"], ["99", "106"], ["99", "113"], ["100", "101"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["107", "108"], ["107", "109"], ["107", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["114", "115"], ["114", "116"], ["114", "125"], ["116", "117"], ["116", "118"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "130"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "176"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["191", "192"], ["191", "193"], ["194", "7"], ["194", "195"], ["196", "197"], ["196", "198"], ["196", "201"], ["196", "204"], ["196", "206"], ["198", "199"], ["198", "200"], ["201", "202"], ["201", "203"], ["204", "205"], ["206", "207"], ["206", "208"], ["206", "217"], ["206", "218"], ["206", "221"], ["206", "241"], ["206", "261"], ["206", "270"], ["206", "283"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "229"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "240"], ["237", "238"], ["237", "239"], ["241", "242"], ["241", "249"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["254", "255"], ["254", "256"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "282"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "304"], ["301", "302"], ["301", "303"], ["26", "33"], ["29", "45"], ["41", "50"], ["48", "56"], ["53", "61"], ["79", "82"], ["82", "86"], ["84", "90"], ["191", "194"], ["194", "198"], ["300", "307"], ["28", "26"], ["43", "41"], ["50", "48"], ["55", "53"], ["61", "64"], ["64", "71"], ["64", "81"], ["67", "64"], ["81", "79"], ["86", "84"], ["90", "93"], ["93", "103"], ["93", "193"], ["96", "93"], ["193", "191"], ["198", "201"], ["201", "211"], ["201", "303"], ["204", "201"], ["301", "300"], ["31", "38"], ["34", "29"], ["45", "43"], ["56", "55"], ["70", "67"], ["134", "141"], ["177", "187"], ["186", "96"], ["208", "218"], ["218", "225"], ["261", "274"], ["270", "291"], ["283", "204"], ["303", "301"], ["33", "31"], ["36", "34"], ["71", "76"], ["74", "70"], ["100", "109"], ["100", "119"], ["138", "149"], ["138", "161"], ["158", "169"], ["158", "180"], ["179", "177"], ["187", "186"], ["210", "208"], ["222", "233"], ["222", "245"], ["242", "253"], ["242", "264"], ["263", "261"], ["272", "270"], ["285", "283"], ["38", "36"], ["76", "74"], ["101", "100"], ["107", "134"], ["140", "138"], ["146", "161"], ["160", "158"], ["166", "180"], ["180", "183"], ["181", "179"], ["211", "214"], ["214", "210"], ["224", "222"], ["230", "245"], ["244", "242"], ["250", "264"], ["264", "267"], ["265", "263"], ["273", "280"], ["278", "272"], ["287", "285"], ["103", "101"], ["109", "107"], ["116", "127"], ["125", "134"], ["141", "140"], ["148", "146"], ["161", "160"], ["168", "166"], ["183", "181"], ["225", "224"], ["232", "230"], ["245", "244"], ["252", "250"], ["267", "265"], ["274", "273"], ["280", "278"], ["289", "287"], ["118", "116"], ["127", "130"], ["130", "125"], ["149", "153"], ["150", "148"], ["169", "173"], ["170", "168"], ["233", "237"], ["234", "232"], ["253", "257"], ["254", "252"], ["290", "296"], ["295", "289"], ["119", "122"], ["120", "118"], ["152", "150"], ["172", "170"], ["236", "234"], ["256", "254"], ["291", "292"], ["292", "290"], ["296", "297"], ["297", "295"], ["122", "120"], ["153", "152"], ["173", "172"], ["237", "236"], ["257", "256"], ["23", "28"], ["24", "307"], ["26", "307"], ["31", "307"], ["34", "307"], ["34", "307"], ["34", "307"], ["29", "307"], ["43", "307"], ["41", "307"], ["41", "307"], ["48", "307"], ["48", "307"], ["53", "307"], ["56", "307"], ["55", "307"], ["53", "307"], ["53", "307"], ["79", "307"], ["82", "307"], ["82", "307"], ["84", "307"], ["84", "307"], ["84", "307"], ["191", "307"], ["194", "307"], ["198", "307"], ["201", "307"], ["201", "307"], ["201", "307"], ["300", "307"], ["300", "307"], ["300", "307"], ["210", "307"], ["208", "307"], ["208", "307"], ["218", "307"], ["222", "307"], ["222", "307"], ["234", "307"], ["232", "307"], ["230", "307"], ["230", "307"], ["242", "307"], ["242", "307"], ["254", "307"], ["252", "307"], ["250", "307"], ["250", "307"], ["265", "307"], ["263", "307"], ["261", "307"], ["261", "307"], ["273", "307"], ["272", "307"], ["278", "307"], ["272", "307"], ["270", "307"], ["270", "307"], ["292", "307"], ["292", "307"], ["290", "307"], ["289", "307"], ["295", "307"], ["289", "307"], ["287", "307"], ["285", "307"], ["283", "307"], ["283", "307"], ["204", "307"], ["100", "307"], ["100", "307"], ["116", "307"], ["130", "307"], ["125", "307"], ["125", "307"], ["107", "307"], ["134", "307"], ["138", "307"], ["138", "307"], ["150", "307"], ["148", "307"], ["146", "307"], ["146", "307"], ["158", "307"], ["158", "307"], ["170", "307"], ["168", "307"], ["166", "307"], ["166", "307"], ["181", "307"], ["181", "307"], ["179", "307"], ["177", "307"], ["177", "307"], ["186", "307"], ["186", "307"], ["186", "307"], ["96", "307"], ["70", "307"], ["74", "307"], ["74", "307"], ["70", "307"], ["70", "307"], ["67", "307"], ["287", "307"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["50", "48"], ["55", "53"], ["55", "53"], ["23", "79"], ["86", "84"], ["23", "191"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["23", "61"], ["79", "82"], ["23", "82"], ["23", "90"], ["191", "194"], ["23", "194"], ["23", "198"], ["194", "300"], ["283", "300"], ["23", "300"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["41", "50"], ["23", "50"], ["56", "55"], ["23", "55"], ["61", "64"], ["67", "64"], ["23", "64"], ["50", "64"], ["64", "67"], ["23", "67"], ["74", "70"], ["74", "70"], ["64", "86"], ["23", "86"], ["90", "93"], ["96", "93"], ["23", "93"], ["86", "93"], ["93", "96"], ["23", "96"], ["23", "134"], ["23", "177"], ["181", "177"], ["181", "177"], ["177", "186"], ["23", "186"], ["198", "201"], ["204", "201"], ["23", "201"], ["93", "201"], ["274", "201"], ["274", "204"], ["23", "204"], ["210", "208"], ["210", "208"], ["23", "218"], ["23", "261"], ["265", "261"], ["265", "261"], ["272", "270"], ["272", "270"], ["285", "283"], ["285", "283"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["45", "56"], ["23", "56"], ["134", "177"], ["146", "177"], ["166", "177"], ["218", "261"], ["230", "261"], ["250", "261"], ["43", "74"], ["23", "74"], ["53", "74"], ["101", "100"], ["101", "100"], ["125", "138"], ["107", "138"], ["23", "138"], ["140", "138"], ["140", "138"], ["23", "146"], ["150", "146"], ["150", "146"], ["138", "158"], ["150", "158"], ["23", "158"], ["48", "158"], ["140", "158"], ["152", "158"], ["23", "166"], ["170", "166"], ["170", "166"], ["23", "179"], ["181", "179"], ["181", "179"], ["201", "210"], ["23", "210"], ["84", "210"], ["278", "210"], ["186", "210"], ["82", "222"], ["265", "222"], ["181", "222"], ["23", "222"], ["224", "222"], ["224", "222"], ["23", "230"], ["234", "230"], ["234", "230"], ["222", "242"], ["234", "242"], ["23", "242"], ["48", "242"], ["224", "242"], ["236", "242"], ["23", "250"], ["254", "250"], ["254", "250"], ["23", "263"], ["265", "263"], ["265", "263"], ["273", "272"], ["273", "272"], ["278", "272"], ["278", "272"], ["194", "285"], ["283", "285"], ["23", "285"], ["287", "285"], ["287", "285"], ["82", "101"], ["181", "101"], ["23", "101"], ["48", "101"], ["181", "101"], ["70", "101"], ["101", "107"], ["23", "107"], ["48", "107"], ["101", "107"], ["23", "116"], ["120", "116"], ["120", "116"], ["48", "140"], ["125", "140"], ["107", "140"], ["23", "140"], ["134", "146"], ["48", "160"], ["140", "160"], ["152", "160"], ["23", "160"], ["134", "166"], ["146", "166"], ["158", "181"], ["170", "181"], ["23", "181"], ["48", "181"], ["140", "181"], ["152", "181"], ["201", "211"], ["23", "211"], ["48", "224"], ["181", "224"], ["70", "224"], ["265", "224"], ["23", "224"], ["218", "230"], ["48", "244"], ["224", "244"], ["236", "244"], ["23", "244"], ["218", "250"], ["230", "250"], ["242", "265"], ["254", "265"], ["23", "265"], ["48", "265"], ["224", "265"], ["236", "265"], ["274", "273"], ["274", "273"], ["23", "273"], ["261", "278"], ["23", "278"], ["84", "278"], ["210", "278"], ["23", "287"], ["289", "287"], ["289", "287"], ["120", "125"], ["23", "125"], ["48", "125"], ["120", "125"], ["116", "125"], ["23", "148"], ["150", "148"], ["150", "148"], ["23", "168"], ["170", "168"], ["170", "168"], ["23", "232"], ["234", "232"], ["234", "232"], ["23", "252"], ["254", "252"], ["254", "252"], ["201", "274"], ["23", "274"], ["201", "274"], ["23", "289"], ["292", "289"], ["292", "289"], ["48", "289"], ["265", "289"], ["23", "118"], ["120", "118"], ["120", "118"], ["116", "130"], ["23", "130"], ["138", "150"], ["23", "150"], ["152", "150"], ["152", "150"], ["158", "170"], ["23", "170"], ["48", "170"], ["140", "170"], ["152", "170"], ["222", "234"], ["23", "234"], ["236", "234"], ["236", "234"], ["242", "254"], ["23", "254"], ["48", "254"], ["224", "254"], ["236", "254"], ["23", "290"], ["292", "290"], ["292", "290"], ["23", "295"], ["48", "295"], ["265", "295"], ["101", "120"], ["23", "120"], ["48", "120"], ["101", "120"], ["48", "152"], ["140", "152"], ["23", "152"], ["48", "172"], ["140", "172"], ["152", "172"], ["23", "172"], ["48", "236"], ["224", "236"], ["23", "236"], ["48", "256"], ["224", "256"], ["236", "256"], ["23", "256"], ["208", "292"], ["23", "292"], ["270", "292"], ["64", "74"], ["64", "76"], ["64", "70"], ["64", "71"], ["64", "64"], ["64", "67"], ["93", "161"], ["93", "134"], ["93", "138"], ["93", "181"], ["93", "93"], ["93", "100"], ["93", "186"], ["93", "180"], ["93", "158"], ["93", "160"], ["93", "141"], ["93", "140"], ["93", "177"], ["93", "96"], ["93", "179"], ["93", "103"], ["93", "101"], ["93", "187"], ["93", "183"], ["201", "214"], ["201", "272"], ["201", "292"], ["201", "290"], ["201", "283"], ["201", "204"], ["201", "264"], ["201", "208"], ["201", "242"], ["201", "224"], ["201", "296"], ["201", "201"], ["201", "274"], ["201", "278"], ["201", "222"], ["201", "297"], ["201", "225"], ["201", "273"], ["201", "244"], ["201", "261"], ["201", "245"], ["201", "291"], ["201", "285"], ["201", "289"], ["201", "267"], ["201", "280"], ["201", "265"], ["201", "295"], ["201", "287"], ["201", "210"], ["201", "270"], ["201", "263"], ["201", "211"], ["201", "218"], ["100", "120"], ["100", "118"], ["100", "127"], ["100", "116"], ["100", "122"], ["100", "109"], ["100", "107"], ["100", "119"], ["100", "130"], ["100", "125"], ["138", "146"], ["138", "150"], ["138", "148"], ["138", "152"], ["138", "149"], ["138", "153"], ["158", "168"], ["158", "170"], ["158", "172"], ["158", "169"], ["158", "173"], ["158", "166"], ["222", "230"], ["222", "236"], ["222", "237"], ["222", "232"], ["222", "233"], ["222", "234"], ["242", "256"], ["242", "253"], ["242", "254"], ["242", "257"], ["242", "252"], ["242", "250"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "43": "<(parseInt,parseInt(br.readLine()))<SUB>4</SUB>>", "45": "<(readLine,readLine())<SUB>4</SUB>>", "47": "<(LOCAL,int[] A: int[])<SUB>5</SUB>>", "49": "<(IDENTIFIER,A,int[] A = new int[n])<SUB>5</SUB>>", "51": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,String[] s = split(&quot; &quot;))<SUB>6</SUB>>", "55": "<(split,split(&quot; &quot;))<SUB>6</SUB>>", "57": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,A[i] = Integer.parseInt(s[i]))<SUB>8</SUB>>", "75": "<(IDENTIFIER,Integer,Integer.parseInt(s[i]))<SUB>8</SUB>>", "77": "<(IDENTIFIER,s,Integer.parseInt(s[i]))<SUB>8</SUB>>", "6": "<(LOCAL,Map memo: ANY)<SUB>10</SUB>>", "80": "<(IDENTIFIER,memo,ANY memo = new HashMap())<SUB>10</SUB>>", "82": "<(&lt;init&gt;,new HashMap())<SUB>10</SUB>>", "83": "<(LOCAL,int[] f: int[])<SUB>11</SUB>>", "85": "<(IDENTIFIER,f,int[] f = new int[n])<SUB>11</SUB>>", "87": "<(IDENTIFIER,n,new int[n])<SUB>11</SUB>>", "89": "<(LOCAL,int i: int)<SUB>12</SUB>>", "91": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "95": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "99": "<(CONTROL_STRUCTURE,if (!memo.containsKey(A[i])),if (!memo.containsKey(A[i])))<SUB>13</SUB>>", "101": "<(containsKey,containsKey(A[i]))<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>13</SUB>>", "105": "<(IDENTIFIER,i,containsKey(A[i]))<SUB>13</SUB>>", "107": "<(put,put(A[i], 1))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,put(A[i], 1))<SUB>14</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>16</SUB>>", "115": "<(LOCAL,int ct: int)<SUB>17</SUB>>", "117": "<(IDENTIFIER,ct,int ct = (int) memo.get(A[i]))<SUB>17</SUB>>", "119": "<(TYPE_REF,int,int)<SUB>17</SUB>>", "121": "<(IDENTIFIER,memo,get(A[i]))<SUB>17</SUB>>", "123": "<(IDENTIFIER,A,get(A[i]))<SUB>17</SUB>>", "125": "<(put,put(A[i], ct + 1))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>18</SUB>>", "129": "<(IDENTIFIER,i,put(A[i], ct + 1))<SUB>18</SUB>>", "131": "<(IDENTIFIER,ct,ct + 1)<SUB>18</SUB>>", "133": "<(LOCAL,int tot: int)<SUB>20</SUB>>", "135": "<(IDENTIFIER,tot,int tot = 0)<SUB>20</SUB>>", "137": "<(CONTROL_STRUCTURE,if (memo.containsKey(A[i] - 1)),if (memo.containsKey(A[i] - 1)))<SUB>21</SUB>>", "139": "<(IDENTIFIER,memo,containsKey(A[i] - 1))<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>21</SUB>>", "143": "<(IDENTIFIER,i,A[i] - 1)<SUB>21</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "147": "<(IDENTIFIER,tot,tot += (int) memo.get(A[i] - 1))<SUB>22</SUB>>", "149": "<(TYPE_REF,int,int)<SUB>22</SUB>>", "151": "<(IDENTIFIER,memo,get(A[i] - 1))<SUB>22</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>22</SUB>>", "155": "<(IDENTIFIER,i,A[i] - 1)<SUB>22</SUB>>", "157": "<(CONTROL_STRUCTURE,if (memo.containsKey(A[i] + 1)),if (memo.containsKey(A[i] + 1)))<SUB>24</SUB>>", "159": "<(IDENTIFIER,memo,containsKey(A[i] + 1))<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>24</SUB>>", "163": "<(IDENTIFIER,i,A[i] + 1)<SUB>24</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "167": "<(IDENTIFIER,tot,tot += (int) memo.get(A[i] + 1))<SUB>25</SUB>>", "169": "<(TYPE_REF,int,int)<SUB>25</SUB>>", "171": "<(IDENTIFIER,memo,get(A[i] + 1))<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>25</SUB>>", "175": "<(IDENTIFIER,i,A[i] + 1)<SUB>25</SUB>>", "177": "<(&lt;operator&gt;.assignmentPlus,tot += (int) memo.get(A[i]))<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.cast,(int) memo.get(A[i]))<SUB>27</SUB>>", "181": "<(get,get(A[i]))<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>27</SUB>>", "185": "<(IDENTIFIER,i,get(A[i]))<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,f[i])<SUB>28</SUB>>", "189": "<(IDENTIFIER,i,f[i] = tot)<SUB>28</SUB>>", "8": "<(LOCAL,BigInteger res: ANY)<SUB>30</SUB>>", "192": "<(IDENTIFIER,res,ANY res = new BigInteger(&quot;0&quot;))<SUB>30</SUB>>", "194": "<(&lt;init&gt;,new BigInteger(&quot;0&quot;))<SUB>30</SUB>>", "195": "<(LITERAL,&quot;0&quot;,new BigInteger(&quot;0&quot;))<SUB>30</SUB>>", "197": "<(LOCAL,int i: int)<SUB>31</SUB>>", "199": "<(IDENTIFIER,i,int i = 0)<SUB>31</SUB>>", "201": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>31</SUB>>", "203": "<(IDENTIFIER,n,i &lt; n)<SUB>31</SUB>>", "205": "<(IDENTIFIER,i,i++)<SUB>31</SUB>>", "207": "<(LOCAL,int tot1: int)<SUB>32</SUB>>", "209": "<(IDENTIFIER,tot1,int tot1 = i + 1 - f[i])<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.addition,i + 1)<SUB>32</SUB>>", "213": "<(LITERAL,1,i + 1)<SUB>32</SUB>>", "215": "<(IDENTIFIER,f,i + 1 - f[i])<SUB>32</SUB>>", "217": "<(LOCAL,int tot2: int)<SUB>33</SUB>>", "219": "<(IDENTIFIER,tot2,int tot2 = 0)<SUB>33</SUB>>", "221": "<(CONTROL_STRUCTURE,if (memo.containsKey(A[i] - 1)),if (memo.containsKey(A[i] - 1)))<SUB>34</SUB>>", "223": "<(IDENTIFIER,memo,containsKey(A[i] - 1))<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>34</SUB>>", "227": "<(IDENTIFIER,i,A[i] - 1)<SUB>34</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "231": "<(IDENTIFIER,tot2,tot2 += (int) memo.get(A[i] - 1))<SUB>35</SUB>>", "233": "<(TYPE_REF,int,int)<SUB>35</SUB>>", "235": "<(IDENTIFIER,memo,get(A[i] - 1))<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>35</SUB>>", "239": "<(IDENTIFIER,i,A[i] - 1)<SUB>35</SUB>>", "241": "<(CONTROL_STRUCTURE,if (memo.containsKey(A[i] + 1)),if (memo.containsKey(A[i] + 1)))<SUB>37</SUB>>", "243": "<(IDENTIFIER,memo,containsKey(A[i] + 1))<SUB>37</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>37</SUB>>", "247": "<(IDENTIFIER,i,A[i] + 1)<SUB>37</SUB>>", "249": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "251": "<(IDENTIFIER,tot2,tot2 += (int) memo.get(A[i] + 1))<SUB>38</SUB>>", "253": "<(TYPE_REF,int,int)<SUB>38</SUB>>", "255": "<(IDENTIFIER,memo,get(A[i] + 1))<SUB>38</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>38</SUB>>", "259": "<(IDENTIFIER,i,A[i] + 1)<SUB>38</SUB>>", "261": "<(&lt;operator&gt;.assignmentPlus,tot2 += (int) memo.get(A[i]))<SUB>40</SUB>>", "263": "<(&lt;operator&gt;.cast,(int) memo.get(A[i]))<SUB>40</SUB>>", "265": "<(get,get(A[i]))<SUB>40</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>40</SUB>>", "269": "<(IDENTIFIER,i,get(A[i]))<SUB>40</SUB>>", "271": "<(IDENTIFIER,tot2,tot2 = n - i - 1 - (tot2 - f[i]))<SUB>41</SUB>>", "273": "<(&lt;operator&gt;.subtraction,n - i - 1)<SUB>41</SUB>>", "275": "<(IDENTIFIER,n,n - i)<SUB>41</SUB>>", "277": "<(LITERAL,1,n - i - 1)<SUB>41</SUB>>", "279": "<(IDENTIFIER,tot2,tot2 - f[i])<SUB>41</SUB>>", "281": "<(IDENTIFIER,f,tot2 - f[i])<SUB>41</SUB>>", "283": "<(&lt;operator&gt;.assignment,res = add(BigInteger.valueOf((long) (tot1 - tot2) * (long) A[i])))<SUB>43</SUB>>", "285": "<(add,add(BigInteger.valueOf((long) (tot1 - tot2) * (long) A[i])))<SUB>43</SUB>>", "287": "<(valueOf,valueOf((long) (tot1 - tot2) * (long) A[i]))<SUB>43</SUB>>", "289": "<(&lt;operator&gt;.multiplication,(long) (tot1 - tot2) * (long) A[i])<SUB>43</SUB>>", "291": "<(TYPE_REF,long,long)<SUB>43</SUB>>", "293": "<(IDENTIFIER,tot1,tot1 - tot2)<SUB>43</SUB>>", "295": "<(&lt;operator&gt;.cast,(long) A[i])<SUB>43</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>43</SUB>>", "299": "<(IDENTIFIER,i,(long) A[i])<SUB>43</SUB>>", "301": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "303": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "305": "<(MODIFIER,PUBLIC)>", "307": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}