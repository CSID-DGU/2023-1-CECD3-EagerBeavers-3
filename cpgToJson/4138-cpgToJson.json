{"edges": [["17", "18"], ["17", "19"], ["17", "116"], ["17", "117"], ["17", "118"], ["19", "20"], ["19", "23"], ["19", "27"], ["19", "28"], ["19", "32"], ["19", "33"], ["19", "37"], ["19", "43"], ["19", "47"], ["19", "51"], ["19", "57"], ["19", "62"], ["19", "67"], ["19", "72"], ["19", "95"], ["19", "102"], ["19", "105"], ["19", "110"], ["19", "112"], ["19", "114"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "42"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "49"], ["49", "50"], ["51", "52"], ["51", "53"], ["53", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["57", "60"], ["60", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["114", "115"], ["20", "25"], ["23", "30"], ["28", "35"], ["33", "40"], ["37", "45"], ["43", "49"], ["47", "54"], ["51", "60"], ["57", "63"], ["62", "68"], ["67", "74"], ["95", "102"], ["102", "107"], ["105", "110"], ["110", "112"], ["112", "114"], ["114", "118"], ["22", "20"], ["25", "23"], ["30", "28"], ["35", "33"], ["39", "37"], ["45", "43"], ["49", "47"], ["53", "51"], ["60", "57"], ["63", "62"], ["68", "67"], ["74", "77"], ["77", "84"], ["77", "99"], ["80", "77"], ["97", "95"], ["107", "105"], ["40", "39"], ["54", "53"], ["83", "90"], ["89", "80"], ["99", "97"], ["84", "87"], ["87", "83"], ["90", "93"], ["93", "89"], ["17", "22"], ["18", "118"], ["20", "118"], ["23", "118"], ["23", "118"], ["23", "118"], ["28", "118"], ["33", "118"], ["39", "118"], ["37", "118"], ["37", "118"], ["43", "118"], ["43", "118"], ["47", "118"], ["47", "118"], ["47", "118"], ["53", "118"], ["51", "118"], ["51", "118"], ["57", "118"], ["57", "118"], ["57", "118"], ["62", "118"], ["62", "118"], ["62", "118"], ["67", "118"], ["67", "118"], ["67", "118"], ["74", "118"], ["77", "118"], ["77", "118"], ["77", "118"], ["95", "118"], ["95", "118"], ["102", "118"], ["105", "118"], ["105", "118"], ["105", "118"], ["110", "118"], ["112", "118"], ["114", "118"], ["114", "118"], ["83", "118"], ["83", "118"], ["89", "118"], ["89", "118"], ["89", "118"], ["80", "118"], ["57", "118"], ["17", "18"], ["17", "20"], ["30", "28"], ["35", "33"], ["40", "37"], ["17", "37"], ["45", "43"], ["49", "47"], ["53", "51"], ["28", "62"], ["17", "62"], ["33", "67"], ["17", "67"], ["20", "23"], ["17", "23"], ["25", "23"], ["17", "57"], ["51", "57"], ["60", "57"], ["17", "74"], ["17", "95"], ["97", "95"], ["97", "95"], ["95", "102"], ["17", "102"], ["97", "105"], ["17", "105"], ["107", "105"], ["107", "105"], ["102", "110"], ["17", "110"], ["25", "112"], ["17", "112"], ["110", "114"], ["17", "114"], ["17", "25"], ["17", "30"], ["30", "35"], ["17", "35"], ["40", "39"], ["17", "39"], ["37", "45"], ["17", "45"], ["45", "49"], ["17", "49"], ["54", "53"], ["54", "53"], ["17", "60"], ["74", "77"], ["80", "77"], ["17", "77"], ["54", "77"], ["77", "80"], ["17", "80"], ["87", "83"], ["93", "89"], ["40", "97"], ["93", "97"], ["17", "97"], ["99", "97"], ["99", "97"], ["17", "107"], ["35", "40"], ["17", "40"], ["17", "54"], ["49", "54"], ["17", "99"], ["40", "87"], ["93", "87"], ["17", "87"], ["87", "93"], ["17", "93"], ["77", "80"], ["77", "77"], ["77", "87"], ["77", "83"], ["77", "89"], ["77", "84"], ["77", "93"], ["77", "90"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new StringTokenizer(br.readLine()))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>2</SUB>>", "25": "<(readLine,readLine())<SUB>2</SUB>>", "27": "<(LOCAL,int a: int)<SUB>3</SUB>>", "29": "<(IDENTIFIER,a,int a = nxtInt())<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,nxtInt())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int b = nxtInt())<SUB>4</SUB>>", "35": "<(nxtInt,nxtInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,n = nxtInt() + 1)<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.addition,nxtInt() + 1)<SUB>5</SUB>>", "41": "<(IDENTIFIER,this,nxtInt())<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,x = new int[n])<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.alloc,new int[n])>", "47": "<(&lt;operator&gt;.assignment,y = new int[n])<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.alloc,new int[n])>", "51": "<(&lt;operator&gt;.assignment,dp = new int[1 &lt;&lt; n])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "55": "<(LITERAL,1,1 &lt;&lt; n)<SUB>8</SUB>>", "57": "<(fill,fill(dp, -1))<SUB>9</SUB>>", "59": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>9</SUB>>", "61": "<(LITERAL,1,-1)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.indexAccess,x[0])<SUB>10</SUB>>", "65": "<(LITERAL,0,x[0] = a)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,y[0] = b)<SUB>11</SUB>>", "69": "<(IDENTIFIER,y,y[0] = b)<SUB>11</SUB>>", "71": "<(IDENTIFIER,b,y[0] = b)<SUB>11</SUB>>", "73": "<(LOCAL,int i: int)<SUB>12</SUB>>", "75": "<(IDENTIFIER,i,int i = 1)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>12</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.assignment,x[i] = nxtInt())<SUB>13</SUB>>", "85": "<(IDENTIFIER,x,x[i] = nxtInt())<SUB>13</SUB>>", "87": "<(nxtInt,nxtInt())<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,y[i] = nxtInt())<SUB>14</SUB>>", "91": "<(IDENTIFIER,y,y[i] = nxtInt())<SUB>14</SUB>>", "93": "<(nxtInt,nxtInt())<SUB>14</SUB>>", "95": "<(println,println(solve(1 &lt;&lt; 0)))<SUB>16</SUB>>", "97": "<(solve,solve(1 &lt;&lt; 0))<SUB>16</SUB>>", "99": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 0)<SUB>16</SUB>>", "101": "<(LITERAL,0,1 &lt;&lt; 0)<SUB>16</SUB>>", "103": "<(IDENTIFIER,out,print(0))<SUB>17</SUB>>", "105": "<(prnt,prnt(1 &lt;&lt; 0))<SUB>18</SUB>>", "107": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; 0)<SUB>18</SUB>>", "109": "<(LITERAL,0,1 &lt;&lt; 0)<SUB>18</SUB>>", "111": "<(IDENTIFIER,out,println())<SUB>19</SUB>>", "113": "<(IDENTIFIER,br,close())<SUB>20</SUB>>", "115": "<(IDENTIFIER,out,close())<SUB>21</SUB>>", "117": "<(MODIFIER,STATIC)>"}}