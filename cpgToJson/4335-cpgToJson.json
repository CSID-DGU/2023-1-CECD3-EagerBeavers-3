{"edges": [["22", "23"], ["22", "24"], ["22", "256"], ["22", "257"], ["22", "258"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "65"], ["24", "108"], ["24", "109"], ["24", "112"], ["24", "249"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "70"], ["66", "67"], ["66", "69"], ["67", "68"], ["70", "71"], ["70", "74"], ["70", "77"], ["70", "78"], ["70", "86"], ["70", "87"], ["70", "95"], ["71", "72"], ["71", "73"], ["74", "7"], ["74", "75"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "85"], ["81", "82"], ["81", "83"], ["83", "84"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "94"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["101", "102"], ["101", "107"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "124"], ["122", "131"], ["122", "155"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "130"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "146"], ["143", "144"], ["143", "145"], ["147", "148"], ["147", "153"], ["147", "154"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "165"], ["155", "167"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["167", "169"], ["167", "172"], ["167", "175"], ["167", "177"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "187"], ["177", "228"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "184"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "207"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["207", "208"], ["207", "213"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["219", "220"], ["219", "227"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "242"], ["229", "230"], ["229", "237"], ["230", "231"], ["230", "236"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["237", "238"], ["237", "241"], ["238", "239"], ["238", "240"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["109", "114"], ["249", "258"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["66", "73"], ["66", "109"], ["114", "117"], ["117", "127"], ["117", "252"], ["120", "117"], ["250", "253"], ["253", "249"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["67", "66"], ["71", "75"], ["74", "83"], ["78", "92"], ["87", "97"], ["95", "67"], ["124", "133"], ["252", "250"], ["32", "30"], ["35", "33"], ["73", "71"], ["75", "74"], ["80", "78"], ["89", "87"], ["96", "103"], ["101", "95"], ["126", "124"], ["133", "136"], ["136", "143"], ["136", "157"], ["139", "136"], ["141", "139"], ["157", "162"], ["160", "169"], ["160", "120"], ["165", "162"], ["37", "35"], ["81", "80"], ["90", "89"], ["97", "96"], ["102", "101"], ["127", "126"], ["142", "149"], ["147", "141"], ["162", "160"], ["169", "172"], ["172", "182"], ["172", "165"], ["175", "172"], ["83", "81"], ["92", "90"], ["103", "102"], ["143", "142"], ["148", "147"], ["149", "148"], ["179", "175"], ["179", "189"], ["189", "192"], ["192", "202"], ["192", "232"], ["195", "192"], ["229", "245"], ["229", "175"], ["242", "175"], ["180", "179"], ["230", "229"], ["230", "238"], ["237", "229"], ["244", "242"], ["182", "180"], ["199", "195"], ["199", "209"], ["208", "215"], ["208", "195"], ["213", "195"], ["231", "230"], ["238", "237"], ["245", "244"], ["200", "199"], ["209", "208"], ["214", "224"], ["219", "213"], ["232", "231"], ["202", "200"], ["215", "214"], ["220", "219"], ["222", "220"], ["224", "222"], ["22", "27"], ["23", "258"], ["25", "258"], ["30", "258"], ["33", "258"], ["33", "258"], ["33", "258"], ["28", "258"], ["39", "258"], ["43", "258"], ["42", "258"], ["42", "258"], ["46", "258"], ["55", "258"], ["57", "258"], ["55", "258"], ["53", "258"], ["53", "258"], ["60", "258"], ["60", "258"], ["60", "258"], ["67", "258"], ["66", "258"], ["66", "258"], ["109", "258"], ["114", "258"], ["117", "258"], ["117", "258"], ["117", "258"], ["249", "258"], ["253", "258"], ["249", "258"], ["249", "258"], ["124", "258"], ["124", "258"], ["124", "258"], ["133", "258"], ["136", "258"], ["136", "258"], ["157", "258"], ["160", "258"], ["160", "258"], ["160", "258"], ["120", "258"], ["169", "258"], ["172", "258"], ["172", "258"], ["165", "258"], ["180", "258"], ["179", "258"], ["179", "258"], ["189", "258"], ["192", "258"], ["192", "258"], ["230", "258"], ["229", "258"], ["229", "258"], ["229", "258"], ["242", "258"], ["242", "258"], ["200", "258"], ["199", "258"], ["199", "258"], ["222", "258"], ["213", "258"], ["213", "258"], ["195", "258"], ["175", "258"], ["141", "258"], ["147", "258"], ["141", "258"], ["141", "258"], ["139", "258"], ["71", "258"], ["75", "258"], ["74", "258"], ["74", "258"], ["78", "258"], ["87", "258"], ["90", "258"], ["92", "258"], ["90", "258"], ["89", "258"], ["87", "258"], ["87", "258"], ["95", "258"], ["101", "258"], ["95", "258"], ["95", "258"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["22", "109"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["22", "114"], ["253", "249"], ["253", "249"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["67", "66"], ["22", "66"], ["22", "71"], ["80", "78"], ["80", "78"], ["89", "87"], ["89", "87"], ["101", "95"], ["22", "95"], ["114", "117"], ["120", "117"], ["22", "117"], ["62", "117"], ["162", "120"], ["22", "120"], ["126", "124"], ["126", "124"], ["109", "253"], ["242", "253"], ["22", "253"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["53", "67"], ["22", "67"], ["71", "74"], ["22", "74"], ["75", "74"], ["22", "133"], ["22", "141"], ["22", "157"], ["43", "75"], ["22", "75"], ["81", "80"], ["81", "80"], ["22", "80"], ["90", "89"], ["90", "89"], ["22", "89"], ["22", "101"], ["127", "126"], ["127", "126"], ["22", "126"], ["133", "136"], ["139", "136"], ["22", "136"], ["126", "136"], ["136", "139"], ["22", "139"], ["157", "160"], ["165", "160"], ["22", "160"], ["162", "160"], ["162", "160"], ["160", "165"], ["180", "165"], ["200", "165"], ["222", "165"], ["22", "165"], ["22", "169"], ["55", "81"], ["90", "81"], ["22", "81"], ["83", "81"], ["81", "90"], ["22", "90"], ["92", "90"], ["22", "127"], ["117", "127"], ["22", "147"], ["22", "162"], ["136", "162"], ["172", "162"], ["169", "172"], ["175", "172"], ["22", "172"], ["162", "172"], ["192", "172"], ["182", "175"], ["22", "175"], ["74", "83"], ["22", "83"], ["83", "92"], ["22", "92"], ["22", "189"], ["230", "242"], ["180", "179"], ["180", "179"], ["22", "179"], ["189", "192"], ["195", "192"], ["22", "192"], ["172", "192"], ["202", "195"], ["224", "195"], ["22", "195"], ["230", "229"], ["230", "229"], ["101", "229"], ["109", "242"], ["22", "242"], ["160", "180"], ["200", "180"], ["222", "180"], ["22", "180"], ["182", "180"], ["182", "180"], ["213", "230"], ["22", "230"], ["22", "182"], ["172", "182"], ["200", "199"], ["200", "199"], ["22", "199"], ["230", "213"], ["180", "200"], ["222", "200"], ["22", "200"], ["202", "200"], ["202", "200"], ["22", "202"], ["192", "202"], ["200", "222"], ["22", "222"], ["224", "222"], ["224", "222"], ["22", "224"], ["202", "224"], ["66", "73"], ["66", "96"], ["66", "75"], ["66", "81"], ["66", "102"], ["66", "103"], ["66", "67"], ["66", "74"], ["66", "95"], ["66", "92"], ["66", "87"], ["66", "97"], ["66", "101"], ["66", "90"], ["66", "80"], ["66", "89"], ["66", "66"], ["66", "83"], ["66", "71"], ["66", "78"], ["117", "120"], ["117", "136"], ["117", "162"], ["117", "127"], ["117", "160"], ["117", "157"], ["117", "126"], ["117", "117"], ["117", "124"], ["117", "133"], ["136", "136"], ["136", "149"], ["136", "148"], ["136", "139"], ["136", "141"], ["136", "142"], ["136", "143"], ["136", "147"], ["160", "169"], ["160", "162"], ["160", "160"], ["160", "165"], ["160", "172"], ["172", "179"], ["172", "182"], ["172", "180"], ["172", "175"], ["172", "172"], ["179", "230"], ["179", "192"], ["179", "232"], ["179", "189"], ["179", "231"], ["179", "229"], ["192", "192"], ["192", "195"], ["192", "202"], ["192", "200"], ["192", "199"], ["229", "244"], ["229", "245"], ["229", "242"], ["230", "238"], ["230", "237"], ["199", "209"], ["199", "208"], ["208", "214"], ["208", "215"], ["208", "213"], ["208", "224"], ["208", "220"], ["208", "222"], ["208", "219"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int m: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,m,int m = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,boolean[][] ee = new boolean[n][n])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "64": "<(IDENTIFIER,n,new boolean[n][n])<SUB>6</SUB>>", "66": "<(&lt;operator&gt;.greaterThan,m-- &gt; 0)<SUB>7</SUB>>", "68": "<(IDENTIFIER,m,m--)<SUB>7</SUB>>", "70": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "72": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "74": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>8</SUB>>", "75": "<(readLine,readLine())<SUB>8</SUB>>", "77": "<(LOCAL,int i: int)<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,int i = Integer.parseInt(st.nextToken()) - 1)<SUB>9</SUB>>", "81": "<(parseInt,parseInt(st.nextToken()))<SUB>9</SUB>>", "83": "<(nextToken,nextToken())<SUB>9</SUB>>", "85": "<(LITERAL,1,Integer.parseInt(st.nextToken()) - 1)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.assignment,int j = Integer.parseInt(st.nextToken()) - 1)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.subtraction,Integer.parseInt(st.nextToken()) - 1)<SUB>10</SUB>>", "91": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "93": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,ee[i][j] = ee[j][i] = true)<SUB>11</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,ee[i])<SUB>11</SUB>>", "99": "<(IDENTIFIER,i,ee[i][j] = ee[j][i] = true)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.assignment,ee[j][i] = true)<SUB>11</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,ee[j])<SUB>11</SUB>>", "105": "<(IDENTIFIER,j,ee[j][i] = true)<SUB>11</SUB>>", "107": "<(LITERAL,true,ee[j][i] = true)<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.assignment,long cnt = 0)<SUB>13</SUB>>", "111": "<(LITERAL,0,long cnt = 0)<SUB>13</SUB>>", "113": "<(LOCAL,int i: int)<SUB>15</SUB>>", "115": "<(IDENTIFIER,i,int i = 2)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>15</SUB>>", "119": "<(IDENTIFIER,n,i &lt; n)<SUB>15</SUB>>", "121": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "123": "<(LOCAL,long[][] dp: long[][])<SUB>16</SUB>>", "125": "<(IDENTIFIER,dp,long[][] dp = new long[1 &lt;&lt; i][i])<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>16</SUB>>", "129": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>16</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "135": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "137": "<(IDENTIFIER,j,j &lt; i)<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "141": "<(&lt;operator&gt;.assignment,dp[0][j] = ee[i][j] ? 1 : 0)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>18</SUB>>", "145": "<(LITERAL,0,dp[0][j] = ee[i][j] ? 1 : 0)<SUB>18</SUB>>", "147": "<(&lt;operator&gt;.conditional,ee[i][j] ? 1 : 0)<SUB>18</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,ee[i])<SUB>18</SUB>>", "151": "<(IDENTIFIER,i,ee[i][j] ? 1 : 0)<SUB>18</SUB>>", "153": "<(LITERAL,1,ee[i][j] ? 1 : 0)<SUB>18</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int b = 1; Some(b &lt; 1 &lt;&lt; i); b++),for (int b = 1; Some(b &lt; 1 &lt;&lt; i); b++))<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.assignment,int b = 1)<SUB>20</SUB>>", "159": "<(LITERAL,1,int b = 1)<SUB>20</SUB>>", "161": "<(IDENTIFIER,b,b &lt; 1 &lt;&lt; i)<SUB>20</SUB>>", "163": "<(LITERAL,1,1 &lt;&lt; i)<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.postIncrement,b++)<SUB>20</SUB>>", "167": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>21</SUB>>", "169": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "171": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "173": "<(IDENTIFIER,j,j &lt; i)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "179": "<(&lt;operator&gt;.greaterThan,(b &amp; 1 &lt;&lt; j) &gt; 0)<SUB>22</SUB>>", "181": "<(IDENTIFIER,b,b &amp; 1 &lt;&lt; j)<SUB>22</SUB>>", "183": "<(LITERAL,1,1 &lt;&lt; j)<SUB>22</SUB>>", "185": "<(LITERAL,0,(b &amp; 1 &lt;&lt; j) &gt; 0)<SUB>22</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; i); k++),for (int k = 0; Some(k &lt; i); k++))<SUB>24</SUB>>", "189": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>24</SUB>>", "191": "<(LITERAL,0,int k = 0)<SUB>24</SUB>>", "193": "<(IDENTIFIER,k,k &lt; i)<SUB>24</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,k++)<SUB>24</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "199": "<(&lt;operator&gt;.equals,(b &amp; 1 &lt;&lt; k) == 0)<SUB>25</SUB>>", "201": "<(IDENTIFIER,b,b &amp; 1 &lt;&lt; k)<SUB>25</SUB>>", "203": "<(LITERAL,1,1 &lt;&lt; k)<SUB>25</SUB>>", "205": "<(LITERAL,0,(b &amp; 1 &lt;&lt; k) == 0)<SUB>25</SUB>>", "207": "<(CONTROL_STRUCTURE,if (ee[k][j]),if (ee[k][j]))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,ee[k])<SUB>27</SUB>>", "211": "<(IDENTIFIER,k,if (ee[k][j]))<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.assignmentPlus,dp[b][j] += dp[b ^ 1 &lt;&lt; k][k])<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,dp[b])<SUB>28</SUB>>", "217": "<(IDENTIFIER,b,dp[b][j] += dp[b ^ 1 &lt;&lt; k][k])<SUB>28</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,dp[b ^ 1 &lt;&lt; k][k])<SUB>28</SUB>>", "221": "<(IDENTIFIER,dp,dp[b][j] += dp[b ^ 1 &lt;&lt; k][k])<SUB>28</SUB>>", "223": "<(IDENTIFIER,b,b ^ 1 &lt;&lt; k)<SUB>28</SUB>>", "225": "<(LITERAL,1,1 &lt;&lt; k)<SUB>28</SUB>>", "227": "<(IDENTIFIER,k,dp[b][j] += dp[b ^ 1 &lt;&lt; k][k])<SUB>28</SUB>>", "229": "<(&lt;operator&gt;.logicalAnd,dp[b][j] &gt; 0 &amp;&amp; ee[j][i])<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,dp[b][j])<SUB>30</SUB>>", "233": "<(IDENTIFIER,dp,dp[b][j] &gt; 0)<SUB>30</SUB>>", "235": "<(IDENTIFIER,j,dp[b][j] &gt; 0)<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.indexAccess,ee[j][i])<SUB>30</SUB>>", "239": "<(IDENTIFIER,ee,dp[b][j] &gt; 0 &amp;&amp; ee[j][i])<SUB>30</SUB>>", "241": "<(IDENTIFIER,i,dp[b][j] &gt; 0 &amp;&amp; ee[j][i])<SUB>30</SUB>>", "243": "<(IDENTIFIER,cnt,cnt += dp[b][j])<SUB>31</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[b])<SUB>31</SUB>>", "247": "<(IDENTIFIER,b,cnt += dp[b][j])<SUB>31</SUB>>", "249": "<(println,System.out.println(cnt / 2))<SUB>34</SUB>>", "251": "<(IDENTIFIER,System,System.out.println(cnt / 2))<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.division,cnt / 2)<SUB>34</SUB>>", "255": "<(LITERAL,2,cnt / 2)<SUB>34</SUB>>", "257": "<(MODIFIER,STATIC)>"}}