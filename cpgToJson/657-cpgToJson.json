{"edges": [["19", "20"], ["19", "21"], ["19", "184"], ["19", "185"], ["19", "186"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "40"], ["21", "46"], ["21", "47"], ["21", "50"], ["21", "54"], ["21", "55"], ["21", "59"], ["21", "60"], ["21", "65"], ["21", "85"], ["21", "86"], ["21", "87"], ["21", "90"], ["21", "93"], ["21", "121"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["42", "43"], ["42", "44"], ["44", "45"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["103", "105"], ["103", "112"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["112", "113"], ["112", "116"], ["112", "118"], ["113", "114"], ["113", "115"], ["116", "117"], ["118", "119"], ["119", "120"], ["121", "122"], ["121", "125"], ["121", "154"], ["122", "123"], ["122", "124"], ["125", "126"], ["126", "127"], ["126", "128"], ["126", "131"], ["126", "134"], ["126", "136"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["145", "146"], ["145", "153"], ["146", "147"], ["146", "150"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["154", "155"], ["155", "156"], ["156", "157"], ["156", "158"], ["156", "161"], ["156", "164"], ["156", "166"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["167", "168"], ["167", "175"], ["168", "169"], ["168", "174"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["175", "176"], ["175", "183"], ["176", "177"], ["176", "180"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "182"], ["22", "29"], ["25", "37"], ["37", "44"], ["40", "47"], ["47", "52"], ["50", "57"], ["55", "62"], ["60", "67"], ["87", "90"], ["90", "95"], ["24", "22"], ["42", "40"], ["52", "50"], ["57", "55"], ["62", "60"], ["67", "70"], ["70", "77"], ["70", "87"], ["73", "70"], ["95", "98"], ["98", "108"], ["98", "122"], ["101", "98"], ["122", "128"], ["122", "158"], ["27", "34"], ["30", "25"], ["44", "42"], ["76", "73"], ["105", "113"], ["29", "27"], ["32", "30"], ["77", "82"], ["80", "76"], ["107", "105"], ["113", "116"], ["113", "119"], ["116", "101"], ["128", "131"], ["131", "186"], ["131", "140"], ["134", "131"], ["34", "32"], ["82", "80"], ["108", "107"], ["119", "101"], ["158", "161"], ["161", "186"], ["161", "170"], ["164", "161"], ["138", "149"], ["138", "134"], ["139", "138"], ["146", "186"], ["168", "179"], ["168", "164"], ["140", "139"], ["147", "150"], ["150", "146"], ["169", "168"], ["176", "186"], ["149", "147"], ["170", "169"], ["177", "180"], ["180", "176"], ["179", "177"], ["19", "24"], ["20", "186"], ["22", "186"], ["27", "186"], ["30", "186"], ["30", "186"], ["30", "186"], ["25", "186"], ["37", "186"], ["42", "186"], ["40", "186"], ["40", "186"], ["47", "186"], ["52", "186"], ["50", "186"], ["50", "186"], ["55", "186"], ["55", "186"], ["55", "186"], ["60", "186"], ["62", "186"], ["60", "186"], ["60", "186"], ["87", "186"], ["90", "186"], ["90", "186"], ["98", "186"], ["122", "186"], ["122", "186"], ["128", "186"], ["131", "186"], ["131", "186"], ["131", "186"], ["139", "186"], ["138", "186"], ["138", "186"], ["134", "186"], ["107", "186"], ["105", "186"], ["105", "186"], ["113", "186"], ["113", "186"], ["119", "186"], ["119", "186"], ["116", "186"], ["101", "186"], ["76", "186"], ["80", "186"], ["80", "186"], ["76", "186"], ["76", "186"], ["73", "186"], ["19", "20"], ["19", "22"], ["19", "37"], ["42", "40"], ["42", "40"], ["19", "47"], ["52", "50"], ["57", "55"], ["62", "60"], ["62", "60"], ["19", "87"], ["19", "90"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "67"], ["19", "95"], ["19", "27"], ["19", "35"], ["19", "42"], ["44", "42"], ["44", "52"], ["19", "52"], ["40", "57"], ["19", "57"], ["50", "62"], ["19", "62"], ["67", "70"], ["73", "70"], ["19", "70"], ["57", "70"], ["70", "73"], ["19", "73"], ["80", "76"], ["80", "76"], ["95", "98"], ["101", "98"], ["19", "98"], ["98", "101"], ["19", "101"], ["107", "105"], ["107", "105"], ["87", "122"], ["116", "122"], ["19", "122"], ["27", "30"], ["19", "30"], ["25", "44"], ["19", "44"], ["19", "128"], ["42", "80"], ["19", "80"], ["60", "80"], ["55", "107"], ["76", "107"], ["19", "107"], ["105", "113"], ["19", "113"], ["87", "116"], ["19", "116"], ["128", "131"], ["134", "131"], ["19", "131"], ["70", "131"], ["131", "134"], ["19", "134"], ["19", "158"], ["90", "119"], ["19", "119"], ["158", "161"], ["164", "161"], ["19", "161"], ["70", "161"], ["161", "164"], ["19", "164"], ["139", "138"], ["139", "138"], ["19", "138"], ["55", "139"], ["107", "139"], ["76", "139"], ["19", "139"], ["131", "146"], ["19", "146"], ["169", "168"], ["169", "168"], ["19", "168"], ["131", "150"], ["19", "150"], ["55", "169"], ["107", "169"], ["76", "169"], ["19", "169"], ["161", "176"], ["19", "176"], ["161", "180"], ["19", "180"], ["70", "73"], ["70", "77"], ["70", "76"], ["70", "82"], ["70", "80"], ["70", "70"], ["98", "107"], ["98", "98"], ["98", "113"], ["98", "101"], ["98", "105"], ["98", "108"], ["122", "128"], ["122", "161"], ["122", "131"], ["122", "158"], ["113", "116"], ["113", "119"], ["131", "138"], ["131", "140"], ["131", "139"], ["161", "169"], ["161", "168"], ["161", "170"], ["138", "146"], ["138", "131"], ["138", "149"], ["138", "150"], ["138", "134"], ["138", "147"], ["168", "161"], ["168", "179"], ["168", "176"], ["168", "177"], ["168", "164"], ["168", "180"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,int n = 0)<SUB>4</SUB>>", "39": "<(LITERAL,0,int n = 0)<SUB>4</SUB>>", "41": "<(IDENTIFIER,n,n = parseInt(br.readLine()))<SUB>5</SUB>>", "43": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>5</SUB>>", "45": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.assignment,String inp = &quot;&quot;)<SUB>6</SUB>>", "49": "<(LITERAL,&quot;&quot;,String inp = &quot;&quot;)<SUB>6</SUB>>", "51": "<(IDENTIFIER,inp,inp = readLine())<SUB>7</SUB>>", "53": "<(IDENTIFIER,br,readLine())<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,int[] no = new int[n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new int[n])>", "59": "<(LOCAL,String[] tinp: java.lang.String[])<SUB>9</SUB>>", "61": "<(IDENTIFIER,tinp,String[] tinp = inp.split(&quot; &quot;))<SUB>9</SUB>>", "63": "<(IDENTIFIER,inp,inp.split(&quot; &quot;))<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,no[i])<SUB>12</SUB>>", "79": "<(IDENTIFIER,i,no[i] = Integer.parseInt(tinp[i]))<SUB>12</SUB>>", "81": "<(IDENTIFIER,Integer,Integer.parseInt(tinp[i]))<SUB>12</SUB>>", "83": "<(IDENTIFIER,tinp,Integer.parseInt(tinp[i]))<SUB>12</SUB>>", "85": "<(LOCAL,int eve: int)<SUB>14</SUB>>", "87": "<(&lt;operator&gt;.assignment,int eve = 0)<SUB>14</SUB>>", "89": "<(LITERAL,0,int eve = 0)<SUB>14</SUB>>", "91": "<(IDENTIFIER,odd,int odd = 0)<SUB>14</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 3); i++),for (int i = 0; Some(i &lt; 3); i++))<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "99": "<(IDENTIFIER,i,i &lt; 3)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.assignment,int rem = no[i] % 2)<SUB>17</SUB>>", "107": "<(&lt;operator&gt;.modulo,no[i] % 2)<SUB>17</SUB>>", "109": "<(IDENTIFIER,no,no[i] % 2)<SUB>17</SUB>>", "111": "<(LITERAL,2,no[i] % 2)<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.equals,rem == 0)<SUB>18</SUB>>", "115": "<(LITERAL,0,rem == 0)<SUB>18</SUB>>", "117": "<(IDENTIFIER,eve,eve++)<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,odd++)<SUB>21</SUB>>", "121": "<(CONTROL_STRUCTURE,if (eve &gt; 1),if (eve &gt; 1))<SUB>23</SUB>>", "123": "<(IDENTIFIER,eve,eve &gt; 1)<SUB>23</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "127": "<(LOCAL,int i: int)<SUB>25</SUB>>", "129": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "131": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>25</SUB>>", "133": "<(IDENTIFIER,n,i &lt; n)<SUB>25</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "137": "<(CONTROL_STRUCTURE,if (no[i] % 2 == 1),if (no[i] % 2 == 1))<SUB>27</SUB>>", "139": "<(&lt;operator&gt;.modulo,no[i] % 2)<SUB>27</SUB>>", "141": "<(IDENTIFIER,no,no[i] % 2)<SUB>27</SUB>>", "143": "<(LITERAL,2,no[i] % 2)<SUB>27</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "147": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>29</SUB>>", "149": "<(FIELD_IDENTIFIER,out,out)<SUB>29</SUB>>", "151": "<(IDENTIFIER,i,i + 1)<SUB>29</SUB>>", "153": "<(CONTROL_STRUCTURE,break;,break;)<SUB>30</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "157": "<(LOCAL,int i: int)<SUB>36</SUB>>", "159": "<(IDENTIFIER,i,int i = 0)<SUB>36</SUB>>", "161": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>36</SUB>>", "163": "<(IDENTIFIER,n,i &lt; n)<SUB>36</SUB>>", "165": "<(IDENTIFIER,i,i++)<SUB>36</SUB>>", "167": "<(CONTROL_STRUCTURE,if (no[i] % 2 == 0),if (no[i] % 2 == 0))<SUB>38</SUB>>", "169": "<(&lt;operator&gt;.modulo,no[i] % 2)<SUB>38</SUB>>", "171": "<(IDENTIFIER,no,no[i] % 2)<SUB>38</SUB>>", "173": "<(LITERAL,2,no[i] % 2)<SUB>38</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "177": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "179": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "181": "<(IDENTIFIER,i,i + 1)<SUB>40</SUB>>", "183": "<(CONTROL_STRUCTURE,break;,break;)<SUB>41</SUB>>", "185": "<(MODIFIER,STATIC)>"}}