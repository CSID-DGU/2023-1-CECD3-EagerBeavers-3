{"edges": [["21", "23"], ["21", "333"], ["21", "334"], ["21", "335"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "73"], ["23", "74"], ["23", "86"], ["23", "116"], ["23", "137"], ["23", "292"], ["23", "293"], ["23", "296"], ["23", "328"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["76", "83"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "98"], ["96", "101"], ["96", "106"], ["96", "108"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["103", "104"], ["103", "105"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "115"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "126"], ["116", "128"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "145"], ["137", "147"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["145", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "157"], ["147", "159"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "164"], ["159", "169"], ["159", "171"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "181"], ["171", "183"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "260"], ["185", "186"], ["185", "187"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["206", "207"], ["207", "208"], ["207", "221"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "220"], ["213", "214"], ["213", "215"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["221", "222"], ["222", "223"], ["222", "238"], ["223", "224"], ["223", "229"], ["224", "225"], ["224", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "237"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["238", "239"], ["239", "240"], ["239", "247"], ["240", "241"], ["240", "246"], ["241", "242"], ["241", "243"], ["243", "244"], ["243", "245"], ["247", "248"], ["248", "249"], ["248", "256"], ["249", "250"], ["249", "255"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["256", "257"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["262", "263"], ["262", "270"], ["263", "264"], ["263", "269"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["270", "271"], ["270", "272"], ["270", "279"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "277"], ["274", "275"], ["274", "276"], ["279", "280"], ["279", "289"], ["280", "281"], ["280", "288"], ["281", "282"], ["281", "287"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["289", "290"], ["289", "291"], ["293", "294"], ["293", "295"], ["296", "297"], ["296", "298"], ["296", "301"], ["296", "306"], ["296", "308"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "305"], ["306", "307"], ["308", "309"], ["308", "310"], ["310", "311"], ["310", "312"], ["310", "313"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "325"], ["318", "319"], ["318", "324"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "332"], ["329", "330"], ["329", "331"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "59"], ["74", "88"], ["293", "298"], ["328", "335"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["59", "64"], ["59", "77"], ["76", "74"], ["88", "91"], ["91", "98"], ["91", "118"], ["94", "91"], ["118", "123"], ["121", "131"], ["121", "139"], ["126", "123"], ["128", "126"], ["139", "142"], ["142", "149"], ["142", "293"], ["145", "142"], ["298", "303"], ["301", "314"], ["301", "331"], ["306", "303"], ["308", "306"], ["329", "328"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["64", "67"], ["67", "70"], ["70", "77"], ["77", "80"], ["80", "83"], ["83", "76"], ["98", "103"], ["101", "111"], ["101", "94"], ["106", "103"], ["108", "106"], ["123", "121"], ["129", "128"], ["149", "154"], ["152", "161"], ["152", "145"], ["157", "154"], ["303", "301"], ["310", "308"], ["331", "329"], ["31", "29"], ["34", "32"], ["103", "101"], ["110", "108"], ["130", "129"], ["154", "152"], ["161", "166"], ["164", "173"], ["164", "157"], ["169", "166"], ["313", "310"], ["36", "34"], ["111", "110"], ["131", "130"], ["166", "164"], ["173", "178"], ["176", "185"], ["176", "169"], ["181", "178"], ["314", "320"], ["317", "313"], ["178", "176"], ["185", "190"], ["318", "325"], ["325", "317"], ["190", "193"], ["193", "261"], ["193", "202"], ["196", "193"], ["261", "265"], ["261", "181"], ["262", "181"], ["319", "318"], ["199", "209"], ["199", "196"], ["263", "274"], ["270", "262"], ["320", "319"], ["200", "199"], ["264", "263"], ["272", "284"], ["279", "270"], ["202", "200"], ["208", "225"], ["208", "196"], ["265", "264"], ["273", "272"], ["280", "289"], ["289", "279"], ["209", "208"], ["209", "217"], ["212", "208"], ["274", "273"], ["281", "280"], ["213", "212"], ["223", "243"], ["223", "196"], ["282", "281"], ["215", "213"], ["224", "223"], ["224", "234"], ["229", "223"], ["284", "282"], ["217", "215"], ["225", "224"], ["230", "229"], ["240", "252"], ["240", "196"], ["232", "230"], ["241", "240"], ["234", "232"], ["243", "241"], ["249", "257"], ["249", "196"], ["250", "249"], ["257", "196"], ["252", "250"], ["21", "26"], ["22", "335"], ["24", "335"], ["29", "335"], ["32", "335"], ["32", "335"], ["32", "335"], ["27", "335"], ["38", "335"], ["42", "335"], ["41", "335"], ["41", "335"], ["45", "335"], ["54", "335"], ["56", "335"], ["54", "335"], ["52", "335"], ["52", "335"], ["59", "335"], ["64", "335"], ["67", "335"], ["70", "335"], ["70", "335"], ["74", "335"], ["76", "335"], ["74", "335"], ["74", "335"], ["88", "335"], ["91", "335"], ["91", "335"], ["139", "335"], ["142", "335"], ["142", "335"], ["142", "335"], ["293", "335"], ["298", "335"], ["301", "335"], ["303", "335"], ["301", "335"], ["301", "335"], ["328", "335"], ["328", "335"], ["328", "335"], ["310", "335"], ["314", "335"], ["313", "335"], ["317", "335"], ["325", "335"], ["317", "335"], ["313", "335"], ["310", "335"], ["308", "335"], ["308", "335"], ["306", "335"], ["149", "335"], ["152", "335"], ["152", "335"], ["145", "335"], ["161", "335"], ["164", "335"], ["164", "335"], ["157", "335"], ["173", "335"], ["176", "335"], ["176", "335"], ["169", "335"], ["185", "335"], ["185", "335"], ["190", "335"], ["193", "335"], ["193", "335"], ["262", "335"], ["270", "335"], ["279", "335"], ["289", "335"], ["279", "335"], ["270", "335"], ["262", "335"], ["262", "335"], ["181", "335"], ["200", "335"], ["199", "335"], ["199", "335"], ["208", "335"], ["215", "335"], ["213", "335"], ["212", "335"], ["208", "335"], ["208", "335"], ["224", "335"], ["223", "335"], ["232", "335"], ["230", "335"], ["229", "335"], ["223", "335"], ["223", "335"], ["241", "335"], ["240", "335"], ["240", "335"], ["250", "335"], ["249", "335"], ["249", "335"], ["257", "335"], ["257", "335"], ["196", "335"], ["128", "335"], ["128", "335"], ["126", "335"], ["94", "335"], ["108", "335"], ["108", "335"], ["106", "335"], ["108", "335"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["76", "74"], ["76", "74"], ["21", "293"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "88"], ["21", "118"], ["21", "128"], ["21", "139"], ["21", "298"], ["310", "308"], ["310", "308"], ["310", "308"], ["293", "328"], ["308", "328"], ["21", "328"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["45", "59"], ["21", "59"], ["52", "59"], ["59", "64"], ["21", "64"], ["59", "67"], ["21", "67"], ["64", "70"], ["21", "70"], ["59", "76"], ["70", "76"], ["21", "76"], ["80", "76"], ["80", "76"], ["83", "76"], ["83", "76"], ["88", "91"], ["94", "91"], ["21", "91"], ["59", "91"], ["70", "91"], ["91", "94"], ["21", "94"], ["21", "98"], ["118", "121"], ["126", "121"], ["21", "121"], ["123", "121"], ["123", "121"], ["121", "126"], ["21", "126"], ["139", "142"], ["145", "142"], ["21", "142"], ["91", "142"], ["142", "145"], ["284", "145"], ["21", "145"], ["21", "149"], ["298", "301"], ["306", "301"], ["21", "301"], ["303", "301"], ["303", "301"], ["325", "306"], ["21", "306"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["59", "77"], ["70", "77"], ["21", "77"], ["21", "80"], ["59", "80"], ["67", "80"], ["21", "83"], ["80", "83"], ["98", "101"], ["106", "101"], ["21", "101"], ["103", "101"], ["103", "101"], ["101", "106"], ["21", "106"], ["21", "108"], ["21", "123"], ["83", "123"], ["103", "123"], ["149", "152"], ["157", "152"], ["21", "152"], ["154", "152"], ["154", "152"], ["152", "157"], ["289", "157"], ["241", "157"], ["21", "157"], ["21", "161"], ["21", "303"], ["123", "303"], ["314", "303"], ["154", "303"], ["270", "310"], ["21", "310"], ["293", "310"], ["308", "310"], ["313", "310"], ["313", "310"], ["21", "103"], ["83", "103"], ["21", "154"], ["123", "154"], ["166", "154"], ["161", "164"], ["169", "164"], ["21", "164"], ["166", "164"], ["166", "164"], ["164", "169"], ["200", "169"], ["213", "169"], ["230", "169"], ["21", "169"], ["21", "173"], ["314", "313"], ["314", "313"], ["325", "313"], ["325", "313"], ["21", "166"], ["154", "166"], ["178", "166"], ["173", "176"], ["181", "176"], ["21", "176"], ["178", "176"], ["178", "176"], ["176", "181"], ["250", "181"], ["21", "181"], ["21", "185"], ["303", "314"], ["21", "314"], ["142", "314"], ["325", "317"], ["325", "317"], ["21", "178"], ["166", "178"], ["193", "178"], ["21", "190"], ["21", "261"], ["270", "262"], ["270", "262"], ["270", "262"], ["54", "325"], ["289", "325"], ["21", "325"], ["301", "325"], ["190", "193"], ["196", "193"], ["21", "193"], ["178", "193"], ["224", "193"], ["202", "196"], ["209", "196"], ["217", "196"], ["243", "196"], ["252", "196"], ["21", "196"], ["200", "199"], ["200", "199"], ["21", "199"], ["21", "270"], ["262", "270"], ["289", "270"], ["289", "270"], ["164", "200"], ["213", "200"], ["230", "200"], ["21", "200"], ["202", "200"], ["202", "200"], ["289", "279"], ["289", "279"], ["21", "202"], ["193", "202"], ["209", "208"], ["209", "208"], ["212", "208"], ["212", "208"], ["54", "289"], ["21", "289"], ["152", "289"], ["241", "289"], ["202", "209"], ["21", "209"], ["213", "212"], ["213", "212"], ["21", "212"], ["200", "213"], ["21", "213"], ["215", "213"], ["215", "213"], ["224", "223"], ["224", "223"], ["229", "223"], ["229", "223"], ["21", "215"], ["217", "215"], ["217", "215"], ["209", "224"], ["217", "224"], ["21", "224"], ["193", "224"], ["230", "229"], ["230", "229"], ["21", "229"], ["142", "284"], ["21", "284"], ["209", "217"], ["21", "217"], ["209", "225"], ["217", "225"], ["21", "225"], ["200", "230"], ["213", "230"], ["21", "230"], ["232", "230"], ["232", "230"], ["241", "240"], ["241", "240"], ["21", "240"], ["21", "232"], ["209", "232"], ["217", "232"], ["152", "241"], ["289", "241"], ["21", "241"], ["243", "241"], ["243", "241"], ["21", "234"], ["209", "234"], ["217", "234"], ["21", "243"], ["209", "243"], ["217", "243"], ["250", "249"], ["250", "249"], ["21", "249"], ["21", "257"], ["176", "250"], ["21", "250"], ["252", "250"], ["252", "250"], ["21", "252"], ["243", "252"], ["59", "70"], ["59", "64"], ["59", "67"], ["91", "94"], ["91", "98"], ["91", "103"], ["91", "91"], ["91", "101"], ["121", "128"], ["121", "129"], ["121", "123"], ["121", "131"], ["121", "121"], ["121", "130"], ["121", "126"], ["142", "154"], ["142", "152"], ["142", "145"], ["142", "149"], ["142", "142"], ["301", "308"], ["301", "317"], ["301", "306"], ["301", "310"], ["301", "319"], ["301", "320"], ["301", "301"], ["301", "325"], ["301", "314"], ["301", "318"], ["301", "313"], ["301", "303"], ["101", "108"], ["101", "103"], ["101", "101"], ["101", "111"], ["101", "106"], ["101", "110"], ["152", "154"], ["152", "161"], ["152", "152"], ["152", "164"], ["152", "166"], ["152", "157"], ["164", "176"], ["164", "169"], ["164", "178"], ["164", "173"], ["164", "164"], ["164", "166"], ["176", "181"], ["176", "190"], ["176", "176"], ["176", "178"], ["176", "185"], ["176", "261"], ["176", "193"], ["193", "196"], ["193", "202"], ["193", "200"], ["193", "199"], ["193", "193"], ["261", "272"], ["261", "262"], ["261", "264"], ["261", "281"], ["261", "274"], ["261", "282"], ["261", "273"], ["261", "279"], ["261", "284"], ["261", "289"], ["261", "280"], ["261", "265"], ["261", "270"], ["261", "263"], ["199", "209"], ["199", "208"], ["208", "224"], ["208", "225"], ["208", "223"], ["209", "215"], ["209", "213"], ["209", "217"], ["209", "212"], ["223", "240"], ["223", "243"], ["223", "241"], ["224", "230"], ["224", "229"], ["224", "232"], ["224", "234"], ["240", "249"], ["240", "252"], ["240", "250"], ["249", "257"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY infile = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,infile,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(infile.readLine()))<SUB>4</SUB>>", "43": "<(IDENTIFIER,infile,readLine())<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int R = parseInt(st.nextToken()))<SUB>5</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "49": "<(nextToken,nextToken())<SUB>5</SUB>>", "51": "<(LOCAL,int C: int)<SUB>6</SUB>>", "53": "<(IDENTIFIER,C,int C = parseInt(st.nextToken()))<SUB>6</SUB>>", "55": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>6</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.greaterThan,R &gt; C)<SUB>7</SUB>>", "61": "<(IDENTIFIER,C,R &gt; C)<SUB>7</SUB>>", "63": "<(LOCAL,int t: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,t,int t = R)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,R = C)<SUB>10</SUB>>", "69": "<(IDENTIFIER,C,R = C)<SUB>10</SUB>>", "71": "<(IDENTIFIER,C,C = t)<SUB>11</SUB>>", "73": "<(LOCAL,int[][][] dp: int[][][])<SUB>14</SUB>>", "75": "<(IDENTIFIER,dp,int[][][] dp = new int[C + 1][1 &lt;&lt; R][1 &lt;&lt; R])<SUB>14</SUB>>", "77": "<(&lt;operator&gt;.addition,C + 1)<SUB>14</SUB>>", "79": "<(LITERAL,1,C + 1)<SUB>14</SUB>>", "81": "<(LITERAL,1,1 &lt;&lt; R)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; R)<SUB>14</SUB>>", "85": "<(IDENTIFIER,R,1 &lt;&lt; R)<SUB>14</SUB>>", "87": "<(LOCAL,int i: int)<SUB>15</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "91": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= C)<SUB>15</SUB>>", "93": "<(IDENTIFIER,C,i &lt;= C)<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "97": "<(LOCAL,int mask: int)<SUB>16</SUB>>", "99": "<(IDENTIFIER,mask,int mask = 0)<SUB>16</SUB>>", "101": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; R))<SUB>16</SUB>>", "103": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; R)<SUB>16</SUB>>", "105": "<(IDENTIFIER,R,1 &lt;&lt; R)<SUB>16</SUB>>", "107": "<(IDENTIFIER,mask,mask++)<SUB>16</SUB>>", "109": "<(IDENTIFIER,Arrays,fill(dp[i][mask], 69))<SUB>17</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>17</SUB>>", "113": "<(IDENTIFIER,i,fill(dp[i][mask], 69))<SUB>17</SUB>>", "115": "<(LITERAL,69,fill(dp[i][mask], 69))<SUB>17</SUB>>", "117": "<(LOCAL,int mask: int)<SUB>18</SUB>>", "119": "<(IDENTIFIER,mask,int mask = 0)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; R))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; R)<SUB>18</SUB>>", "125": "<(IDENTIFIER,R,1 &lt;&lt; R)<SUB>18</SUB>>", "127": "<(IDENTIFIER,mask,mask++)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,dp[0][0][mask])<SUB>19</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>19</SUB>>", "133": "<(LITERAL,0,dp[0][0][mask] = 0)<SUB>19</SUB>>", "135": "<(IDENTIFIER,mask,dp[0][0][mask] = 0)<SUB>19</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int c = 1; Some(c &lt;= C); c++),for (int c = 1; Some(c &lt;= C); c++))<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.assignment,int c = 1)<SUB>20</SUB>>", "141": "<(LITERAL,1,int c = 1)<SUB>20</SUB>>", "143": "<(IDENTIFIER,c,c &lt;= C)<SUB>20</SUB>>", "145": "<(&lt;operator&gt;.postIncrement,c++)<SUB>20</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int mask1 = 0; Some(mask1 &lt; (1 &lt;&lt; R)); mask1++),for (int mask1 = 0; Some(mask1 &lt; (1 &lt;&lt; R)); mask1++))<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.assignment,int mask1 = 0)<SUB>21</SUB>>", "151": "<(LITERAL,0,int mask1 = 0)<SUB>21</SUB>>", "153": "<(IDENTIFIER,mask1,mask1 &lt; (1 &lt;&lt; R))<SUB>21</SUB>>", "155": "<(LITERAL,1,1 &lt;&lt; R)<SUB>21</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,mask1++)<SUB>21</SUB>>", "159": "<(CONTROL_STRUCTURE,for (int mask2 = 0; Some(mask2 &lt; (1 &lt;&lt; R)); mask2++),for (int mask2 = 0; Some(mask2 &lt; (1 &lt;&lt; R)); mask2++))<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.assignment,int mask2 = 0)<SUB>22</SUB>>", "163": "<(LITERAL,0,int mask2 = 0)<SUB>22</SUB>>", "165": "<(IDENTIFIER,mask2,mask2 &lt; (1 &lt;&lt; R))<SUB>22</SUB>>", "167": "<(LITERAL,1,1 &lt;&lt; R)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,mask2++)<SUB>22</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int mask3 = 0; Some(mask3 &lt; (1 &lt;&lt; R)); mask3++),for (int mask3 = 0; Some(mask3 &lt; (1 &lt;&lt; R)); mask3++))<SUB>23</SUB>>", "173": "<(&lt;operator&gt;.assignment,int mask3 = 0)<SUB>23</SUB>>", "175": "<(LITERAL,0,int mask3 = 0)<SUB>23</SUB>>", "177": "<(IDENTIFIER,mask3,mask3 &lt; (1 &lt;&lt; R))<SUB>23</SUB>>", "179": "<(LITERAL,1,1 &lt;&lt; R)<SUB>23</SUB>>", "181": "<(&lt;operator&gt;.postIncrement,mask3++)<SUB>23</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "185": "<(&lt;operator&gt;.assignment,boolean works = true)<SUB>25</SUB>>", "187": "<(LITERAL,true,boolean works = true)<SUB>25</SUB>>", "189": "<(LOCAL,int b: int)<SUB>26</SUB>>", "191": "<(IDENTIFIER,b,int b = 0)<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.lessThan,b &lt; R)<SUB>26</SUB>>", "195": "<(IDENTIFIER,R,b &lt; R)<SUB>26</SUB>>", "197": "<(IDENTIFIER,b,b++)<SUB>26</SUB>>", "199": "<(&lt;operator&gt;.equals,(mask2 &amp; (1 &lt;&lt; b)) == 0)<SUB>27</SUB>>", "201": "<(IDENTIFIER,mask2,mask2 &amp; (1 &lt;&lt; b))<SUB>27</SUB>>", "203": "<(LITERAL,1,1 &lt;&lt; b)<SUB>27</SUB>>", "205": "<(LITERAL,0,(mask2 &amp; (1 &lt;&lt; b)) == 0)<SUB>27</SUB>>", "207": "<(CONTROL_STRUCTURE,if (b &gt; 0 &amp;&amp; (mask2 &amp; (1 &lt;&lt; (b - 1))) &gt; 0),if (b &gt; 0 &amp;&amp; (mask2 &amp; (1 &lt;&lt; (b - 1))) &gt; 0))<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.greaterThan,b &gt; 0)<SUB>29</SUB>>", "211": "<(LITERAL,0,b &gt; 0)<SUB>29</SUB>>", "213": "<(&lt;operator&gt;.and,mask2 &amp; (1 &lt;&lt; (b - 1)))<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (b - 1))<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.subtraction,b - 1)<SUB>29</SUB>>", "219": "<(LITERAL,1,b - 1)<SUB>29</SUB>>", "221": "<(CONTROL_STRUCTURE,else,else)<SUB>30</SUB>>", "223": "<(&lt;operator&gt;.logicalAnd,b + 1 &lt; R &amp;&amp; (mask2 &amp; (1 &lt;&lt; (b + 1))) &gt; 0)<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.addition,b + 1)<SUB>30</SUB>>", "227": "<(LITERAL,1,b + 1)<SUB>30</SUB>>", "229": "<(&lt;operator&gt;.greaterThan,(mask2 &amp; (1 &lt;&lt; (b + 1))) &gt; 0)<SUB>30</SUB>>", "231": "<(IDENTIFIER,mask2,mask2 &amp; (1 &lt;&lt; (b + 1)))<SUB>30</SUB>>", "233": "<(LITERAL,1,1 &lt;&lt; (b + 1))<SUB>30</SUB>>", "235": "<(IDENTIFIER,b,b + 1)<SUB>30</SUB>>", "237": "<(LITERAL,0,(mask2 &amp; (1 &lt;&lt; (b + 1))) &gt; 0)<SUB>30</SUB>>", "239": "<(CONTROL_STRUCTURE,if ((mask1 &amp; (1 &lt;&lt; b)) &gt; 0),if ((mask1 &amp; (1 &lt;&lt; b)) &gt; 0))<SUB>31</SUB>>", "241": "<(&lt;operator&gt;.and,mask1 &amp; (1 &lt;&lt; b))<SUB>31</SUB>>", "243": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; b)<SUB>31</SUB>>", "245": "<(IDENTIFIER,b,1 &lt;&lt; b)<SUB>31</SUB>>", "247": "<(CONTROL_STRUCTURE,else,else)<SUB>32</SUB>>", "249": "<(&lt;operator&gt;.greaterThan,(mask3 &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>32</SUB>>", "251": "<(IDENTIFIER,mask3,mask3 &amp; (1 &lt;&lt; b))<SUB>32</SUB>>", "253": "<(LITERAL,1,1 &lt;&lt; b)<SUB>32</SUB>>", "255": "<(LITERAL,0,(mask3 &amp; (1 &lt;&lt; b)) &gt; 0)<SUB>32</SUB>>", "257": "<(&lt;operator&gt;.assignment,works = false)<SUB>33</SUB>>", "259": "<(LITERAL,false,works = false)<SUB>33</SUB>>", "261": "<(IDENTIFIER,works,if (works))<SUB>35</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,dp[c][mask2][mask3])<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,dp[c])<SUB>36</SUB>>", "267": "<(IDENTIFIER,c,dp[c][mask2][mask3] = Math.min(dp[c][mask2][mask3], dp[c - 1][mask1][mask2] + Integer.bitCount(mask1)))<SUB>36</SUB>>", "269": "<(IDENTIFIER,mask3,dp[c][mask2][mask3] = Math.min(dp[c][mask2][mask3], dp[c - 1][mask1][mask2] + Integer.bitCount(mask1)))<SUB>36</SUB>>", "271": "<(IDENTIFIER,Math,Math.min(dp[c][mask2][mask3], dp[c - 1][mask1][mask2] + Integer.bitCount(mask1)))<SUB>36</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,dp[c][mask2])<SUB>36</SUB>>", "275": "<(IDENTIFIER,dp,Math.min(dp[c][mask2][mask3], dp[c - 1][mask1][mask2] + Integer.bitCount(mask1)))<SUB>36</SUB>>", "277": "<(IDENTIFIER,mask2,Math.min(dp[c][mask2][mask3], dp[c - 1][mask1][mask2] + Integer.bitCount(mask1)))<SUB>36</SUB>>", "279": "<(&lt;operator&gt;.addition,dp[c - 1][mask1][mask2] + Integer.bitCount(mask1))<SUB>36</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,dp[c - 1][mask1])<SUB>36</SUB>>", "283": "<(IDENTIFIER,dp,dp[c - 1][mask1][mask2] + Integer.bitCount(mask1))<SUB>36</SUB>>", "285": "<(IDENTIFIER,c,c - 1)<SUB>36</SUB>>", "287": "<(IDENTIFIER,mask1,dp[c - 1][mask1][mask2] + Integer.bitCount(mask1))<SUB>36</SUB>>", "289": "<(bitCount,Integer.bitCount(mask1))<SUB>36</SUB>>", "291": "<(IDENTIFIER,mask1,Integer.bitCount(mask1))<SUB>36</SUB>>", "293": "<(&lt;operator&gt;.assignment,int res = 0)<SUB>38</SUB>>", "295": "<(LITERAL,0,int res = 0)<SUB>38</SUB>>", "297": "<(LOCAL,int mask: int)<SUB>39</SUB>>", "299": "<(IDENTIFIER,mask,int mask = 0)<SUB>39</SUB>>", "301": "<(&lt;operator&gt;.lessThan,mask &lt; (1 &lt;&lt; R))<SUB>39</SUB>>", "303": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; R)<SUB>39</SUB>>", "305": "<(IDENTIFIER,R,1 &lt;&lt; R)<SUB>39</SUB>>", "307": "<(IDENTIFIER,mask,mask++)<SUB>39</SUB>>", "309": "<(IDENTIFIER,res,res = Math.max(res, R * C - (dp[C][mask][0] + Integer.bitCount(mask))))<SUB>40</SUB>>", "311": "<(IDENTIFIER,Math,Math.max(res, R * C - (dp[C][mask][0] + Integer.bitCount(mask))))<SUB>40</SUB>>", "313": "<(&lt;operator&gt;.subtraction,R * C - (dp[C][mask][0] + Integer.bitCount(mask)))<SUB>40</SUB>>", "315": "<(IDENTIFIER,R,R * C)<SUB>40</SUB>>", "317": "<(&lt;operator&gt;.addition,dp[C][mask][0] + Integer.bitCount(mask))<SUB>40</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,dp[C][mask])<SUB>40</SUB>>", "321": "<(IDENTIFIER,dp,dp[C][mask][0] + Integer.bitCount(mask))<SUB>40</SUB>>", "323": "<(IDENTIFIER,mask,dp[C][mask][0] + Integer.bitCount(mask))<SUB>40</SUB>>", "325": "<(bitCount,Integer.bitCount(mask))<SUB>40</SUB>>", "327": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>40</SUB>>", "329": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>41</SUB>>", "331": "<(FIELD_IDENTIFIER,out,out)<SUB>41</SUB>>", "333": "<(MODIFIER,PUBLIC)>", "335": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}