{"edges": [["27", "28"], ["27", "29"], ["27", "542"], ["27", "543"], ["27", "544"], ["29", "4"], ["29", "30"], ["29", "33"], ["29", "34"], ["29", "35"], ["29", "39"], ["29", "40"], ["29", "44"], ["29", "45"], ["29", "6"], ["29", "49"], ["29", "52"], ["29", "56"], ["29", "57"], ["29", "60"], ["29", "121"], ["29", "139"], ["29", "140"], ["29", "146"], ["29", "151"], ["29", "275"], ["29", "276"], ["29", "282"], ["29", "286"], ["29", "287"], ["29", "293"], ["29", "298"], ["29", "321"], ["29", "378"], ["29", "12"], ["29", "392"], ["29", "395"], ["29", "396"], ["29", "406"], ["29", "407"], ["29", "411"], ["29", "412"], ["29", "416"], ["30", "31"], ["30", "32"], ["33", "3"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["52", "5"], ["52", "53"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["70", "72"], ["70", "76"], ["70", "77"], ["70", "81"], ["70", "116"], ["72", "73"], ["72", "74"], ["74", "75"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["91", "98"], ["91", "103"], ["91", "109"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["105", "106"], ["105", "107"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "127"], ["121", "134"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["134", "135"], ["135", "136"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "148"], ["146", "149"], ["149", "150"], ["151", "152"], ["151", "153"], ["151", "156"], ["151", "159"], ["151", "161"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["159", "160"], ["161", "162"], ["162", "163"], ["162", "164"], ["162", "167"], ["162", "174"], ["162", "176"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["176", "177"], ["176", "178"], ["176", "185"], ["176", "186"], ["176", "8"], ["176", "197"], ["176", "200"], ["176", "10"], ["176", "201"], ["176", "204"], ["176", "205"], ["176", "208"], ["176", "211"], ["176", "212"], ["176", "217"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "196"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["193", "194"], ["193", "195"], ["197", "198"], ["197", "199"], ["200", "7"], ["201", "202"], ["201", "203"], ["204", "9"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["221", "228"], ["221", "253"], ["221", "256"], ["221", "259"], ["221", "270"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "232"], ["228", "239"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["239", "240"], ["240", "241"], ["240", "244"], ["240", "246"], ["241", "242"], ["241", "243"], ["244", "245"], ["246", "247"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["251", "252"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "269"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "274"], ["276", "277"], ["276", "278"], ["278", "279"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["282", "285"], ["287", "288"], ["287", "289"], ["289", "290"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["293", "296"], ["296", "297"], ["298", "299"], ["298", "300"], ["298", "303"], ["298", "308"], ["298", "310"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "305"], ["305", "306"], ["305", "307"], ["308", "309"], ["310", "311"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "319"], ["316", "317"], ["316", "318"], ["319", "320"], ["321", "322"], ["321", "323"], ["321", "326"], ["321", "331"], ["321", "333"], ["323", "324"], ["323", "325"], ["326", "327"], ["326", "328"], ["328", "329"], ["328", "330"], ["331", "332"], ["333", "334"], ["334", "335"], ["334", "339"], ["335", "336"], ["336", "337"], ["336", "338"], ["339", "340"], ["340", "341"], ["340", "342"], ["340", "345"], ["340", "348"], ["340", "355"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["355", "356"], ["356", "357"], ["356", "366"], ["357", "358"], ["357", "361"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "363"], ["363", "364"], ["363", "365"], ["366", "367"], ["366", "372"], ["366", "377"], ["367", "368"], ["367", "371"], ["368", "369"], ["368", "370"], ["372", "373"], ["372", "376"], ["373", "374"], ["373", "375"], ["378", "379"], ["378", "382"], ["379", "380"], ["379", "381"], ["382", "383"], ["382", "390"], ["382", "391"], ["383", "384"], ["383", "385"], ["385", "386"], ["385", "389"], ["386", "387"], ["386", "388"], ["392", "393"], ["392", "394"], ["395", "11"], ["396", "397"], ["396", "398"], ["396", "399"], ["396", "400"], ["396", "401"], ["401", "402"], ["401", "405"], ["402", "403"], ["402", "404"], ["407", "408"], ["407", "409"], ["409", "410"], ["412", "413"], ["412", "414"], ["414", "415"], ["416", "417"], ["416", "424"], ["417", "418"], ["417", "419"], ["419", "420"], ["419", "423"], ["420", "421"], ["420", "422"], ["424", "425"], ["424", "426"], ["424", "430"], ["424", "514"], ["426", "427"], ["426", "428"], ["428", "429"], ["430", "431"], ["430", "433"], ["431", "432"], ["433", "434"], ["433", "435"], ["433", "439"], ["433", "440"], ["433", "443"], ["433", "444"], ["433", "457"], ["433", "464"], ["433", "473"], ["435", "436"], ["435", "437"], ["437", "438"], ["440", "441"], ["440", "442"], ["444", "445"], ["444", "446"], ["446", "447"], ["446", "456"], ["447", "448"], ["447", "449"], ["449", "450"], ["449", "451"], ["451", "452"], ["451", "453"], ["453", "454"], ["453", "455"], ["457", "458"], ["457", "463"], ["458", "459"], ["458", "460"], ["460", "461"], ["460", "462"], ["464", "465"], ["464", "470"], ["465", "466"], ["465", "467"], ["467", "468"], ["467", "469"], ["470", "471"], ["470", "472"], ["473", "474"], ["473", "477"], ["474", "475"], ["474", "476"], ["477", "478"], ["477", "479"], ["477", "482"], ["477", "495"], ["477", "498"], ["477", "507"], ["479", "480"], ["479", "481"], ["482", "483"], ["482", "484"], ["484", "485"], ["484", "494"], ["485", "486"], ["485", "487"], ["487", "488"], ["487", "489"], ["489", "490"], ["489", "491"], ["491", "492"], ["491", "493"], ["495", "496"], ["495", "497"], ["498", "499"], ["498", "504"], ["499", "500"], ["499", "501"], ["501", "502"], ["501", "503"], ["504", "505"], ["504", "506"], ["507", "508"], ["507", "513"], ["508", "509"], ["508", "510"], ["510", "511"], ["510", "512"], ["514", "515"], ["514", "516"], ["514", "519"], ["514", "524"], ["514", "526"], ["516", "517"], ["516", "518"], ["519", "520"], ["519", "521"], ["521", "522"], ["521", "523"], ["524", "525"], ["526", "527"], ["527", "528"], ["527", "531"], ["528", "529"], ["528", "530"], ["531", "532"], ["531", "537"], ["532", "533"], ["532", "536"], ["533", "534"], ["533", "535"], ["537", "538"], ["537", "541"], ["538", "539"], ["538", "540"], ["30", "33"], ["33", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["49", "53"], ["52", "57"], ["57", "62"], ["140", "149"], ["146", "153"], ["276", "282"], ["282", "290"], ["287", "296"], ["293", "300"], ["378", "394"], ["392", "395"], ["395", "402"], ["396", "409"], ["407", "414"], ["412", "422"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "49"], ["53", "52"], ["62", "65"], ["65", "74"], ["65", "123"], ["68", "65"], ["122", "131"], ["122", "136"], ["142", "140"], ["149", "146"], ["153", "156"], ["156", "164"], ["156", "279"], ["159", "156"], ["278", "276"], ["289", "287"], ["296", "293"], ["300", "307"], ["303", "312"], ["303", "323"], ["308", "307"], ["323", "328"], ["326", "336"], ["326", "381"], ["331", "328"], ["379", "388"], ["382", "378"], ["394", "392"], ["401", "396"], ["409", "407"], ["414", "412"], ["417", "544"], ["417", "428"], ["72", "79"], ["77", "83"], ["116", "68"], ["123", "122"], ["128", "133"], ["133", "544"], ["143", "142"], ["279", "278"], ["290", "289"], ["305", "303"], ["311", "308"], ["328", "326"], ["381", "379"], ["383", "382"], ["402", "401"], ["419", "417"], ["426", "431"], ["74", "72"], ["79", "77"], ["83", "86"], ["86", "93"], ["86", "117"], ["89", "86"], ["117", "116"], ["129", "128"], ["136", "143"], ["164", "170"], ["167", "181"], ["167", "159"], ["174", "170"], ["307", "305"], ["312", "316"], ["315", "311"], ["335", "342"], ["335", "331"], ["385", "383"], ["420", "419"], ["428", "426"], ["431", "437"], ["431", "516"], ["516", "523"], ["519", "544"], ["519", "530"], ["524", "523"], ["92", "100"], ["98", "105"], ["103", "110"], ["109", "89"], ["131", "129"], ["169", "167"], ["178", "190"], ["186", "199"], ["197", "200"], ["200", "203"], ["201", "204"], ["204", "205"], ["205", "208"], ["208", "214"], ["212", "218"], ["316", "319"], ["319", "315"], ["336", "335"], ["386", "385"], ["422", "420"], ["435", "440"], ["440", "448"], ["444", "460"], ["457", "467"], ["464", "474"], ["521", "519"], ["527", "524"], ["93", "96"], ["96", "92"], ["100", "98"], ["105", "103"], ["110", "113"], ["113", "109"], ["170", "173"], ["173", "169"], ["180", "178"], ["188", "186"], ["199", "197"], ["203", "201"], ["214", "212"], ["218", "225"], ["218", "174"], ["342", "345"], ["345", "358"], ["345", "331"], ["348", "345"], ["388", "386"], ["437", "435"], ["446", "444"], ["458", "457"], ["465", "470"], ["470", "464"], ["474", "431"], ["474", "479"], ["523", "521"], ["528", "533"], ["531", "527"], ["181", "180"], ["189", "188"], ["223", "229"], ["253", "256"], ["256", "263"], ["259", "272"], ["270", "218"], ["350", "348"], ["447", "446"], ["460", "458"], ["467", "465"], ["479", "486"], ["482", "495"], ["495", "501"], ["498", "510"], ["507", "474"], ["530", "528"], ["532", "538"], ["537", "531"], ["190", "193"], ["191", "189"], ["225", "223"], ["229", "234"], ["229", "241"], ["261", "259"], ["272", "270"], ["351", "350"], ["357", "368"], ["357", "351"], ["448", "453"], ["449", "447"], ["484", "482"], ["499", "504"], ["504", "498"], ["508", "507"], ["533", "532"], ["538", "537"], ["193", "191"], ["233", "174"], ["262", "261"], ["358", "357"], ["358", "363"], ["361", "357"], ["367", "373"], ["372", "331"], ["451", "449"], ["485", "484"], ["501", "499"], ["510", "508"], ["234", "233"], ["241", "174"], ["241", "248"], ["263", "266"], ["264", "262"], ["363", "361"], ["368", "367"], ["373", "372"], ["453", "451"], ["486", "491"], ["487", "485"], ["266", "264"], ["489", "487"], ["248", "174"], ["248", "253"], ["491", "489"], ["27", "32"], ["133", "544"], ["28", "544"], ["30", "544"], ["33", "544"], ["37", "544"], ["35", "544"], ["35", "544"], ["40", "544"], ["40", "544"], ["40", "544"], ["45", "544"], ["45", "544"], ["45", "544"], ["49", "544"], ["52", "544"], ["52", "544"], ["52", "544"], ["57", "544"], ["62", "544"], ["65", "544"], ["65", "544"], ["123", "544"], ["123", "544"], ["122", "544"], ["122", "544"], ["128", "544"], ["74", "544"], ["72", "544"], ["72", "544"], ["77", "544"], ["77", "544"], ["83", "544"], ["86", "544"], ["86", "544"], ["86", "544"], ["116", "544"], ["116", "544"], ["116", "544"], ["68", "544"], ["96", "544"], ["92", "544"], ["92", "544"], ["98", "544"], ["103", "544"], ["103", "544"], ["109", "544"], ["109", "544"], ["109", "544"], ["89", "544"], ["396", "544"], ["27", "28"], ["27", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["27", "49"], ["27", "57"], ["142", "140"], ["278", "276"], ["289", "287"], ["27", "392"], ["409", "407"], ["414", "412"], ["30", "33"], ["27", "33"], ["49", "52"], ["27", "52"], ["53", "52"], ["53", "52"], ["27", "62"], ["27", "146"], ["140", "146"], ["149", "146"], ["27", "153"], ["146", "282"], ["27", "282"], ["276", "282"], ["282", "293"], ["27", "293"], ["287", "293"], ["296", "293"], ["27", "300"], ["27", "323"], ["27", "378"], ["392", "395"], ["27", "395"], ["27", "396"], ["395", "396"], ["293", "396"], ["372", "396"], ["146", "396"], ["315", "396"], ["233", "396"], ["401", "396"], ["401", "396"], ["33", "37"], ["27", "37"], ["35", "42"], ["27", "42"], ["42", "47"], ["27", "47"], ["47", "53"], ["27", "53"], ["62", "65"], ["68", "65"], ["27", "65"], ["53", "65"], ["65", "68"], ["103", "68"], ["27", "68"], ["74", "72"], ["79", "77"], ["77", "116"], ["27", "116"], ["103", "116"], ["123", "122"], ["123", "122"], ["27", "122"], ["27", "133"], ["143", "142"], ["143", "142"], ["27", "149"], ["153", "156"], ["159", "156"], ["27", "156"], ["143", "156"], ["156", "159"], ["214", "159"], ["27", "159"], ["279", "278"], ["279", "278"], ["290", "289"], ["290", "289"], ["27", "296"], ["300", "303"], ["308", "303"], ["27", "303"], ["282", "303"], ["303", "308"], ["27", "308"], ["315", "311"], ["315", "311"], ["323", "326"], ["331", "326"], ["27", "326"], ["328", "326"], ["328", "326"], ["326", "331"], ["363", "331"], ["350", "331"], ["27", "331"], ["27", "382"], ["402", "401"], ["402", "401"], ["27", "401"], ["402", "409"], ["27", "409"], ["409", "414"], ["27", "414"], ["428", "426"], ["27", "83"], ["57", "123"], ["98", "123"], ["27", "123"], ["65", "123"], ["27", "128"], ["123", "136"], ["27", "136"], ["27", "143"], ["123", "143"], ["27", "164"], ["27", "279"], ["156", "279"], ["27", "290"], ["279", "290"], ["27", "328"], ["290", "328"], ["27", "402"], ["328", "402"], ["282", "419"], ["385", "419"], ["27", "419"], ["27", "516"], ["37", "74"], ["96", "74"], ["27", "74"], ["72", "79"], ["27", "79"], ["83", "86"], ["89", "86"], ["27", "86"], ["79", "86"], ["86", "89"], ["27", "89"], ["96", "92"], ["77", "98"], ["92", "98"], ["77", "109"], ["103", "109"], ["123", "136"], ["164", "167"], ["174", "167"], ["27", "167"], ["167", "174"], ["27", "174"], ["27", "186"], ["191", "186"], ["191", "186"], ["178", "186"], ["27", "197"], ["27", "201"], ["214", "212"], ["214", "212"], ["146", "315"], ["319", "315"], ["282", "335"], ["367", "335"], ["282", "385"], ["303", "385"], ["27", "385"], ["396", "428"], ["27", "428"], ["426", "431"], ["437", "431"], ["27", "431"], ["437", "435"], ["435", "440"], ["27", "440"], ["27", "444"], ["449", "444"], ["449", "444"], ["453", "444"], ["460", "457"], ["27", "457"], ["470", "464"], ["470", "464"], ["516", "519"], ["524", "519"], ["27", "519"], ["412", "519"], ["519", "524"], ["27", "524"], ["57", "98"], ["27", "98"], ["52", "103"], ["27", "103"], ["77", "103"], ["92", "103"], ["65", "103"], ["45", "109"], ["197", "200"], ["27", "200"], ["201", "204"], ["27", "204"], ["200", "205"], ["27", "205"], ["178", "205"], ["204", "208"], ["27", "208"], ["156", "208"], ["214", "208"], ["27", "319"], ["326", "342"], ["27", "342"], ["350", "348"], ["350", "348"], ["378", "527"], ["407", "527"], ["27", "527"], ["412", "527"], ["74", "96"], ["27", "96"], ["27", "188"], ["191", "188"], ["191", "188"], ["178", "188"], ["27", "214"], ["208", "214"], ["52", "218"], ["225", "218"], ["103", "218"], ["27", "218"], ["186", "218"], ["259", "218"], ["225", "223"], ["225", "223"], ["27", "259"], ["264", "259"], ["264", "259"], ["253", "259"], ["272", "270"], ["272", "270"], ["342", "345"], ["348", "345"], ["27", "345"], ["431", "437"], ["27", "437"], ["27", "446"], ["449", "446"], ["449", "446"], ["453", "446"], ["467", "470"], ["27", "470"], ["453", "470"], ["467", "474"], ["27", "474"], ["510", "474"], ["435", "474"], ["474", "479"], ["27", "479"], ["27", "482"], ["487", "482"], ["487", "482"], ["491", "482"], ["479", "495"], ["27", "495"], ["504", "498"], ["504", "498"], ["510", "507"], ["27", "507"], ["407", "531"], ["27", "531"], ["412", "531"], ["27", "189"], ["191", "189"], ["191", "189"], ["241", "253"], ["27", "253"], ["241", "253"], ["248", "256"], ["27", "256"], ["248", "256"], ["212", "270"], ["27", "270"], ["351", "350"], ["351", "350"], ["363", "350"], ["27", "350"], ["326", "350"], ["27", "447"], ["449", "447"], ["449", "447"], ["453", "460"], ["27", "460"], ["444", "460"], ["460", "467"], ["27", "467"], ["460", "467"], ["407", "532"], ["27", "532"], ["412", "537"], ["27", "537"], ["136", "191"], ["264", "191"], ["27", "191"], ["45", "191"], ["109", "191"], ["218", "225"], ["27", "225"], ["218", "225"], ["205", "229"], ["27", "229"], ["225", "229"], ["229", "233"], ["27", "233"], ["27", "261"], ["264", "261"], ["264", "261"], ["253", "261"], ["27", "272"], ["256", "272"], ["345", "351"], ["363", "351"], ["27", "351"], ["282", "357"], ["27", "367"], ["345", "372"], ["363", "372"], ["27", "372"], ["136", "449"], ["487", "449"], ["191", "449"], ["264", "449"], ["27", "449"], ["45", "449"], ["27", "484"], ["487", "484"], ["487", "484"], ["491", "484"], ["501", "504"], ["27", "504"], ["495", "504"], ["27", "262"], ["264", "262"], ["264", "262"], ["27", "485"], ["487", "485"], ["487", "485"], ["491", "501"], ["27", "501"], ["482", "501"], ["504", "510"], ["27", "510"], ["501", "510"], ["205", "241"], ["253", "241"], ["27", "241"], ["229", "241"], ["191", "264"], ["27", "264"], ["45", "264"], ["350", "363"], ["27", "363"], ["326", "363"], ["345", "363"], ["52", "453"], ["470", "453"], ["510", "453"], ["218", "453"], ["225", "453"], ["103", "453"], ["27", "453"], ["440", "453"], ["449", "487"], ["27", "487"], ["45", "487"], ["208", "248"], ["256", "248"], ["27", "248"], ["223", "248"], ["470", "491"], ["510", "491"], ["27", "491"], ["474", "491"], ["65", "68"], ["65", "72"], ["65", "65"], ["65", "117"], ["65", "77"], ["65", "74"], ["65", "86"], ["65", "116"], ["65", "79"], ["65", "83"], ["122", "136"], ["122", "326"], ["122", "383"], ["122", "392"], ["122", "129"], ["122", "300"], ["122", "412"], ["122", "276"], ["122", "296"], ["122", "388"], ["122", "140"], ["122", "323"], ["122", "305"], ["122", "402"], ["122", "133"], ["122", "282"], ["122", "149"], ["122", "153"], ["122", "379"], ["122", "417"], ["122", "289"], ["122", "409"], ["122", "419"], ["122", "287"], ["122", "142"], ["122", "303"], ["122", "407"], ["122", "146"], ["122", "128"], ["122", "290"], ["122", "401"], ["122", "394"], ["122", "378"], ["122", "396"], ["122", "382"], ["122", "414"], ["122", "328"], ["122", "278"], ["122", "131"], ["122", "279"], ["122", "385"], ["122", "307"], ["122", "386"], ["122", "395"], ["122", "420"], ["122", "293"], ["122", "381"], ["122", "422"], ["122", "143"], ["122", "156"], ["156", "167"], ["156", "169"], ["156", "170"], ["156", "159"], ["156", "173"], ["156", "164"], ["156", "156"], ["303", "308"], ["303", "315"], ["303", "311"], ["303", "305"], ["303", "316"], ["303", "303"], ["303", "319"], ["303", "307"], ["303", "312"], ["326", "326"], ["326", "336"], ["326", "328"], ["326", "335"], ["326", "331"], ["417", "428"], ["417", "426"], ["417", "516"], ["417", "523"], ["417", "521"], ["417", "519"], ["417", "431"], ["86", "100"], ["86", "96"], ["86", "98"], ["86", "113"], ["86", "103"], ["86", "89"], ["86", "105"], ["86", "110"], ["86", "93"], ["86", "86"], ["86", "109"], ["86", "92"], ["167", "167"], ["167", "204"], ["167", "208"], ["167", "190"], ["167", "186"], ["167", "201"], ["167", "200"], ["167", "169"], ["167", "197"], ["167", "189"], ["167", "218"], ["167", "214"], ["167", "188"], ["167", "170"], ["167", "181"], ["167", "174"], ["167", "180"], ["167", "199"], ["167", "178"], ["167", "191"], ["167", "173"], ["167", "212"], ["167", "205"], ["167", "193"], ["167", "203"], ["335", "345"], ["335", "342"], ["431", "460"], ["431", "437"], ["431", "448"], ["431", "474"], ["431", "449"], ["431", "453"], ["431", "458"], ["431", "465"], ["431", "451"], ["431", "444"], ["431", "435"], ["431", "464"], ["431", "446"], ["431", "447"], ["431", "457"], ["431", "470"], ["431", "467"], ["431", "440"], ["431", "431"], ["519", "524"], ["519", "528"], ["519", "527"], ["519", "538"], ["519", "537"], ["519", "530"], ["519", "523"], ["519", "521"], ["519", "531"], ["519", "519"], ["519", "533"], ["519", "532"], ["218", "225"], ["218", "223"], ["218", "229"], ["345", "357"], ["345", "358"], ["474", "486"], ["474", "484"], ["474", "479"], ["474", "498"], ["474", "489"], ["474", "474"], ["474", "508"], ["474", "482"], ["474", "491"], ["474", "501"], ["474", "510"], ["474", "499"], ["474", "504"], ["474", "485"], ["474", "507"], ["474", "495"], ["474", "487"], ["229", "234"], ["229", "241"], ["229", "233"], ["357", "368"], ["357", "348"], ["357", "372"], ["357", "373"], ["357", "345"], ["357", "351"], ["357", "367"], ["357", "350"], ["358", "361"], ["358", "363"], ["241", "248"], ["248", "272"], ["248", "256"], ["248", "261"], ["248", "259"], ["248", "270"], ["248", "263"], ["248", "218"], ["248", "266"], ["248", "262"], ["248", "264"], ["248", "253"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY sc = new Reader())<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.alloc,new Reader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Reader())<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>3</SUB>>", "37": "<(nextInt,nextInt())<SUB>3</SUB>>", "39": "<(LOCAL,int[][] buckets: int[][])<SUB>4</SUB>>", "41": "<(IDENTIFIER,buckets,int[][] buckets = new int[k][])<SUB>4</SUB>>", "43": "<(IDENTIFIER,k,new int[k][])<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,long[] bucketSum = new long[k])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.alloc,new long[k])>", "6": "<(LOCAL,Map&lt;Integer, Integer&gt; map: ANY)<SUB>6</SUB>>", "50": "<(IDENTIFIER,map,ANY map = new HashMap&lt;&gt;(k * 10000))<SUB>6</SUB>>", "52": "<(&lt;init&gt;,new HashMap&lt;&gt;(k * 10000))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.multiplication,k * 10000)<SUB>6</SUB>>", "55": "<(LITERAL,10000,k * 10000)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,long target = 0)<SUB>7</SUB>>", "59": "<(LITERAL,0,long target = 0)<SUB>7</SUB>>", "61": "<(LOCAL,int i: int)<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; k)<SUB>8</SUB>>", "67": "<(IDENTIFIER,k,i &lt; k)<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "71": "<(LOCAL,int n: int)<SUB>9</SUB>>", "73": "<(IDENTIFIER,n,int n = nextInt())<SUB>9</SUB>>", "75": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.alloc,new int[n])>", "81": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "85": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "87": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>12</SUB>>", "95": "<(IDENTIFIER,j,arr[j] = nextInt())<SUB>12</SUB>>", "97": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "99": "<(IDENTIFIER,target,target += arr[j])<SUB>13</SUB>>", "101": "<(IDENTIFIER,arr,target += arr[j])<SUB>13</SUB>>", "103": "<(put,put(arr[j], i))<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>14</SUB>>", "107": "<(IDENTIFIER,j,put(arr[j], i))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.assignmentPlus,bucketSum[i] += arr[j])<SUB>15</SUB>>", "111": "<(IDENTIFIER,bucketSum,bucketSum[i] += arr[j])<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>15</SUB>>", "115": "<(IDENTIFIER,j,bucketSum[i] += arr[j])<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,buckets[i])<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,buckets[i] = arr)<SUB>17</SUB>>", "121": "<(CONTROL_STRUCTURE,if ((target % k) != 0),if ((target % k) != 0))<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.modulo,target % k)<SUB>19</SUB>>", "125": "<(IDENTIFIER,k,target % k)<SUB>19</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "133": "<(RETURN,return;,return;)<SUB>21</SUB>>", "135": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "137": "<(IDENTIFIER,target,target /= k)<SUB>23</SUB>>", "139": "<(LOCAL,int[] bitmask: int[])<SUB>26</SUB>>", "141": "<(IDENTIFIER,bitmask,int[] bitmask = new int[1 &lt;&lt; (k)])<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (k))<SUB>26</SUB>>", "145": "<(IDENTIFIER,k,1 &lt;&lt; (k))<SUB>26</SUB>>", "147": "<(IDENTIFIER,Arrays,fill(bitmask, -1))<SUB>27</SUB>>", "149": "<(&lt;operator&gt;.minus,-1)<SUB>27</SUB>>", "151": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>30</SUB>>", "153": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>30</SUB>>", "155": "<(LITERAL,0,int i = 0)<SUB>30</SUB>>", "157": "<(IDENTIFIER,i,i &lt; k)<SUB>30</SUB>>", "159": "<(&lt;operator&gt;.postIncrement,i++)<SUB>30</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "163": "<(LOCAL,int j: int)<SUB>31</SUB>>", "165": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "167": "<(&lt;operator&gt;.lessThan,j &lt; buckets[i].length)<SUB>31</SUB>>", "169": "<(&lt;operator&gt;.fieldAccess,buckets[i].length)<SUB>31</SUB>>", "171": "<(IDENTIFIER,buckets,j &lt; buckets[i].length)<SUB>31</SUB>>", "173": "<(FIELD_IDENTIFIER,length,length)<SUB>31</SUB>>", "175": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "177": "<(LOCAL,int start: int)<SUB>32</SUB>>", "179": "<(IDENTIFIER,start,int start = buckets[i][j])<SUB>32</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,buckets[i])<SUB>32</SUB>>", "183": "<(IDENTIFIER,i,int start = buckets[i][j])<SUB>32</SUB>>", "185": "<(LOCAL,int next: int)<SUB>33</SUB>>", "187": "<(IDENTIFIER,next,int next = (int) (target - bucketSum[i]) + start)<SUB>33</SUB>>", "189": "<(&lt;operator&gt;.cast,(int) (target - bucketSum[i]))<SUB>33</SUB>>", "191": "<(&lt;operator&gt;.subtraction,target - bucketSum[i])<SUB>33</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,bucketSum[i])<SUB>33</SUB>>", "195": "<(IDENTIFIER,i,target - bucketSum[i])<SUB>33</SUB>>", "8": "<(LOCAL,Set&lt;Integer&gt; visited: ANY)<SUB>35</SUB>>", "198": "<(IDENTIFIER,visited,ANY visited = new HashSet&lt;&gt;())<SUB>35</SUB>>", "200": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>35</SUB>>", "10": "<(LOCAL,Set&lt;Integer&gt; visitedBuckets: ANY)<SUB>36</SUB>>", "202": "<(IDENTIFIER,visitedBuckets,ANY visitedBuckets = new HashSet&lt;&gt;())<SUB>36</SUB>>", "204": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>36</SUB>>", "205": "<(add,add(start))<SUB>38</SUB>>", "207": "<(IDENTIFIER,start,add(start))<SUB>38</SUB>>", "209": "<(IDENTIFIER,visitedBuckets,add(i))<SUB>39</SUB>>", "211": "<(LOCAL,int bitset: int)<SUB>40</SUB>>", "213": "<(IDENTIFIER,bitset,int bitset = 1 &lt;&lt; i)<SUB>40</SUB>>", "215": "<(LITERAL,1,1 &lt;&lt; i)<SUB>40</SUB>>", "217": "<(CONTROL_STRUCTURE,while (map.containsKey(next)),while (map.containsKey(next)))<SUB>42</SUB>>", "219": "<(IDENTIFIER,map,containsKey(next))<SUB>42</SUB>>", "221": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "223": "<(&lt;operator&gt;.assignment,int bucket = get(next))<SUB>43</SUB>>", "225": "<(get,get(next))<SUB>43</SUB>>", "227": "<(IDENTIFIER,next,get(next))<SUB>43</SUB>>", "229": "<(&lt;operator&gt;.equals,start == next)<SUB>44</SUB>>", "231": "<(IDENTIFIER,next,start == next)<SUB>44</SUB>>", "233": "<(&lt;operator&gt;.assignment,bitmask[bitset] = start)<SUB>45</SUB>>", "235": "<(IDENTIFIER,bitmask,bitmask[bitset] = start)<SUB>45</SUB>>", "237": "<(IDENTIFIER,start,bitmask[bitset] = start)<SUB>45</SUB>>", "239": "<(CONTROL_STRUCTURE,else,else)<SUB>47</SUB>>", "241": "<(contains,contains(next))<SUB>47</SUB>>", "243": "<(IDENTIFIER,next,contains(next))<SUB>47</SUB>>", "245": "<(CONTROL_STRUCTURE,break;,break;)<SUB>48</SUB>>", "247": "<(CONTROL_STRUCTURE,if (visitedBuckets.contains(bucket)),if (visitedBuckets.contains(bucket)))<SUB>49</SUB>>", "249": "<(IDENTIFIER,visitedBuckets,contains(bucket))<SUB>49</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>>", "253": "<(add,add(next))<SUB>52</SUB>>", "255": "<(IDENTIFIER,next,add(next))<SUB>52</SUB>>", "257": "<(IDENTIFIER,visitedBuckets,add(bucket))<SUB>53</SUB>>", "259": "<(&lt;operator&gt;.assignment,next = (int) (target - bucketSum[bucket]) + next)<SUB>54</SUB>>", "261": "<(&lt;operator&gt;.addition,(int) (target - bucketSum[bucket]) + next)<SUB>54</SUB>>", "263": "<(TYPE_REF,int,int)<SUB>54</SUB>>", "265": "<(IDENTIFIER,target,target - bucketSum[bucket])<SUB>54</SUB>>", "267": "<(IDENTIFIER,bucketSum,target - bucketSum[bucket])<SUB>54</SUB>>", "269": "<(IDENTIFIER,next,(int) (target - bucketSum[bucket]) + next)<SUB>54</SUB>>", "271": "<(IDENTIFIER,bitset,bitset |= 1 &lt;&lt; bucket)<SUB>55</SUB>>", "273": "<(LITERAL,1,1 &lt;&lt; bucket)<SUB>55</SUB>>", "275": "<(LOCAL,boolean[] dp: boolean[])<SUB>60</SUB>>", "277": "<(IDENTIFIER,dp,boolean[] dp = new boolean[1 &lt;&lt; (k)])<SUB>60</SUB>>", "279": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (k))<SUB>60</SUB>>", "281": "<(IDENTIFIER,k,1 &lt;&lt; (k))<SUB>60</SUB>>", "283": "<(IDENTIFIER,Arrays,fill(dp, false))<SUB>61</SUB>>", "285": "<(LITERAL,false,fill(dp, false))<SUB>61</SUB>>", "287": "<(&lt;operator&gt;.assignment,int[] build = new int[1 &lt;&lt; k])<SUB>62</SUB>>", "289": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; k])>", "291": "<(LITERAL,1,1 &lt;&lt; k)<SUB>62</SUB>>", "293": "<(fill,fill(build, -1))<SUB>63</SUB>>", "295": "<(IDENTIFIER,build,fill(build, -1))<SUB>63</SUB>>", "297": "<(LITERAL,1,-1)<SUB>63</SUB>>", "299": "<(LOCAL,int i: int)<SUB>65</SUB>>", "301": "<(IDENTIFIER,i,int i = 0)<SUB>65</SUB>>", "303": "<(&lt;operator&gt;.lessThan,i &lt; dp.length)<SUB>65</SUB>>", "305": "<(&lt;operator&gt;.fieldAccess,dp.length)<SUB>65</SUB>>", "307": "<(FIELD_IDENTIFIER,length,length)<SUB>65</SUB>>", "309": "<(IDENTIFIER,i,i++)<SUB>65</SUB>>", "311": "<(&lt;operator&gt;.assignment,dp[i] = bitmask[i] != -1)<SUB>66</SUB>>", "313": "<(IDENTIFIER,dp,dp[i] = bitmask[i] != -1)<SUB>66</SUB>>", "315": "<(&lt;operator&gt;.notEquals,bitmask[i] != -1)<SUB>66</SUB>>", "317": "<(IDENTIFIER,bitmask,bitmask[i] != -1)<SUB>66</SUB>>", "319": "<(&lt;operator&gt;.minus,-1)<SUB>66</SUB>>", "321": "<(CONTROL_STRUCTURE,for (int m = 0; Some(m &lt; (1 &lt;&lt; k)); m++),for (int m = 0; Some(m &lt; (1 &lt;&lt; k)); m++))<SUB>68</SUB>>", "323": "<(&lt;operator&gt;.assignment,int m = 0)<SUB>68</SUB>>", "325": "<(LITERAL,0,int m = 0)<SUB>68</SUB>>", "327": "<(IDENTIFIER,m,m &lt; (1 &lt;&lt; k))<SUB>68</SUB>>", "329": "<(LITERAL,1,1 &lt;&lt; k)<SUB>68</SUB>>", "331": "<(&lt;operator&gt;.postIncrement,m++)<SUB>68</SUB>>", "333": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>>", "335": "<(&lt;operator&gt;.logicalNot,!dp[m])<SUB>69</SUB>>", "337": "<(IDENTIFIER,dp,!dp[m])<SUB>69</SUB>>", "339": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>69</SUB>>", "341": "<(LOCAL,int s: int)<SUB>70</SUB>>", "343": "<(IDENTIFIER,s,int s = m)<SUB>70</SUB>>", "345": "<(&lt;operator&gt;.notEquals,s != 0)<SUB>70</SUB>>", "347": "<(LITERAL,0,s != 0)<SUB>70</SUB>>", "349": "<(IDENTIFIER,s,s = (s - 1) &amp; m)<SUB>70</SUB>>", "351": "<(&lt;operator&gt;.subtraction,s - 1)<SUB>70</SUB>>", "353": "<(LITERAL,1,s - 1)<SUB>70</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>>", "357": "<(&lt;operator&gt;.logicalAnd,dp[s] &amp;&amp; dp[(m ^ s)])<SUB>71</SUB>>", "359": "<(IDENTIFIER,dp,dp[s] &amp;&amp; dp[(m ^ s)])<SUB>71</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,dp[(m ^ s)])<SUB>71</SUB>>", "363": "<(&lt;operator&gt;.xor,m ^ s)<SUB>71</SUB>>", "365": "<(IDENTIFIER,s,m ^ s)<SUB>71</SUB>>", "367": "<(&lt;operator&gt;.assignment,dp[m] = true)<SUB>72</SUB>>", "369": "<(IDENTIFIER,dp,dp[m] = true)<SUB>72</SUB>>", "371": "<(LITERAL,true,dp[m] = true)<SUB>72</SUB>>", "373": "<(&lt;operator&gt;.indexAccess,build[m])<SUB>73</SUB>>", "375": "<(IDENTIFIER,m,build[m] = s)<SUB>73</SUB>>", "377": "<(CONTROL_STRUCTURE,break;,break;)<SUB>74</SUB>>", "379": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>79</SUB>>", "381": "<(FIELD_IDENTIFIER,out,out)<SUB>79</SUB>>", "383": "<(&lt;operator&gt;.indexAccess,dp[dp.length - 1])<SUB>79</SUB>>", "385": "<(&lt;operator&gt;.subtraction,dp.length - 1)<SUB>79</SUB>>", "387": "<(IDENTIFIER,dp,dp.length - 1)<SUB>79</SUB>>", "389": "<(LITERAL,1,dp.length - 1)<SUB>79</SUB>>", "391": "<(LITERAL,&quot;No&quot;,dp[dp.length - 1] ? &quot;Yes&quot; : &quot;No&quot;)<SUB>79</SUB>>", "392": "<(&lt;operator&gt;.assignment,ANY path = new ArrayList&lt;&gt;())<SUB>80</SUB>>", "394": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>80</SUB>>", "11": "<(IDENTIFIER,path,new ArrayList&lt;&gt;())<SUB>80</SUB>>", "397": "<(IDENTIFIER,this,rec(path, build, bitmask, (1 &lt;&lt; k) - 1))<SUB>81</SUB>>", "399": "<(IDENTIFIER,build,rec(path, build, bitmask, (1 &lt;&lt; k) - 1))<SUB>81</SUB>>", "401": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; k) - 1)<SUB>81</SUB>>", "403": "<(LITERAL,1,1 &lt;&lt; k)<SUB>81</SUB>>", "405": "<(LITERAL,1,(1 &lt;&lt; k) - 1)<SUB>81</SUB>>", "407": "<(&lt;operator&gt;.assignment,int[] picked = new int[k])<SUB>83</SUB>>", "409": "<(&lt;operator&gt;.alloc,new int[k])>", "411": "<(LOCAL,int[] out: int[])<SUB>84</SUB>>", "413": "<(IDENTIFIER,out,int[] out = new int[k])<SUB>84</SUB>>", "415": "<(IDENTIFIER,k,new int[k])<SUB>84</SUB>>", "417": "<(&lt;operator&gt;.indexAccess,dp[dp.length - 1])<SUB>85</SUB>>", "419": "<(&lt;operator&gt;.subtraction,dp.length - 1)<SUB>85</SUB>>", "421": "<(IDENTIFIER,dp,dp.length - 1)<SUB>85</SUB>>", "423": "<(LITERAL,1,dp.length - 1)<SUB>85</SUB>>", "425": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>86</SUB>>", "427": "<(IDENTIFIER,$iterLocal0,)<SUB>86</SUB>>", "429": "<(IDENTIFIER,path,&lt;empty&gt;)<SUB>86</SUB>>", "431": "<(hasNext,&lt;empty&gt;)<SUB>86</SUB>>", "433": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>86</SUB>>", "435": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>86</SUB>>", "437": "<(next,&lt;empty&gt;)<SUB>86</SUB>>", "439": "<(LOCAL,int prev: int)<SUB>87</SUB>>", "441": "<(IDENTIFIER,prev,int prev = i)<SUB>87</SUB>>", "443": "<(LOCAL,int next: int)<SUB>88</SUB>>", "445": "<(IDENTIFIER,next,int next = (int) (target - bucketSum[map.get(prev)]) + prev)<SUB>88</SUB>>", "447": "<(&lt;operator&gt;.cast,(int) (target - bucketSum[map.get(prev)]))<SUB>88</SUB>>", "449": "<(&lt;operator&gt;.subtraction,target - bucketSum[map.get(prev)])<SUB>88</SUB>>", "451": "<(&lt;operator&gt;.indexAccess,bucketSum[map.get(prev)])<SUB>88</SUB>>", "453": "<(get,get(prev))<SUB>88</SUB>>", "455": "<(IDENTIFIER,prev,get(prev))<SUB>88</SUB>>", "457": "<(&lt;operator&gt;.assignment,picked[map.get(next)] = next)<SUB>89</SUB>>", "459": "<(IDENTIFIER,picked,picked[map.get(next)] = next)<SUB>89</SUB>>", "461": "<(IDENTIFIER,map,get(next))<SUB>89</SUB>>", "463": "<(IDENTIFIER,next,picked[map.get(next)] = next)<SUB>89</SUB>>", "465": "<(&lt;operator&gt;.indexAccess,out[map.get(next)])<SUB>90</SUB>>", "467": "<(get,get(next))<SUB>90</SUB>>", "469": "<(IDENTIFIER,next,get(next))<SUB>90</SUB>>", "471": "<(IDENTIFIER,map,get(prev))<SUB>90</SUB>>", "473": "<(CONTROL_STRUCTURE,while (next != i),while (next != i))<SUB>91</SUB>>", "475": "<(IDENTIFIER,next,next != i)<SUB>91</SUB>>", "477": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>91</SUB>>", "479": "<(&lt;operator&gt;.assignment,int t = next)<SUB>92</SUB>>", "481": "<(IDENTIFIER,next,int t = next)<SUB>92</SUB>>", "483": "<(IDENTIFIER,next,next = (int) (target - bucketSum[map.get(next)]) + next)<SUB>93</SUB>>", "485": "<(&lt;operator&gt;.cast,(int) (target - bucketSum[map.get(next)]))<SUB>93</SUB>>", "487": "<(&lt;operator&gt;.subtraction,target - bucketSum[map.get(next)])<SUB>93</SUB>>", "489": "<(&lt;operator&gt;.indexAccess,bucketSum[map.get(next)])<SUB>93</SUB>>", "491": "<(get,get(next))<SUB>93</SUB>>", "493": "<(IDENTIFIER,next,get(next))<SUB>93</SUB>>", "495": "<(&lt;operator&gt;.assignment,prev = t)<SUB>94</SUB>>", "497": "<(IDENTIFIER,t,prev = t)<SUB>94</SUB>>", "499": "<(&lt;operator&gt;.indexAccess,out[map.get(next)])<SUB>95</SUB>>", "501": "<(get,get(next))<SUB>95</SUB>>", "503": "<(IDENTIFIER,next,get(next))<SUB>95</SUB>>", "505": "<(IDENTIFIER,map,get(prev))<SUB>95</SUB>>", "507": "<(&lt;operator&gt;.assignment,picked[map.get(next)] = next)<SUB>96</SUB>>", "509": "<(IDENTIFIER,picked,picked[map.get(next)] = next)<SUB>96</SUB>>", "511": "<(IDENTIFIER,map,get(next))<SUB>96</SUB>>", "513": "<(IDENTIFIER,next,picked[map.get(next)] = next)<SUB>96</SUB>>", "515": "<(LOCAL,int i: int)<SUB>101</SUB>>", "517": "<(IDENTIFIER,i,int i = 0)<SUB>101</SUB>>", "519": "<(&lt;operator&gt;.lessThan,i &lt; out.length)<SUB>101</SUB>>", "521": "<(&lt;operator&gt;.fieldAccess,out.length)<SUB>101</SUB>>", "523": "<(FIELD_IDENTIFIER,length,length)<SUB>101</SUB>>", "525": "<(IDENTIFIER,i,i++)<SUB>101</SUB>>", "527": "<(println,System.out.println((picked[i]) + &quot; &quot; + (out[i] + 1)))<SUB>102</SUB>>", "529": "<(IDENTIFIER,System,System.out.println((picked[i]) + &quot; &quot; + (out[i] + 1)))<SUB>102</SUB>>", "531": "<(&lt;operator&gt;.addition,(picked[i]) + &quot; &quot; + (out[i] + 1))<SUB>102</SUB>>", "533": "<(&lt;operator&gt;.indexAccess,picked[i])<SUB>102</SUB>>", "535": "<(IDENTIFIER,i,(picked[i]) + &quot; &quot;)<SUB>102</SUB>>", "537": "<(&lt;operator&gt;.addition,out[i] + 1)<SUB>102</SUB>>", "539": "<(IDENTIFIER,out,out[i] + 1)<SUB>102</SUB>>", "541": "<(LITERAL,1,out[i] + 1)<SUB>102</SUB>>", "543": "<(MODIFIER,STATIC)>"}}