{"edges": [["23", "24"], ["23", "25"], ["23", "354"], ["23", "355"], ["23", "356"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "8"], ["25", "52"], ["25", "55"], ["25", "59"], ["25", "101"], ["25", "143"], ["25", "178"], ["25", "192"], ["25", "193"], ["25", "204"], ["25", "210"], ["25", "301"], ["25", "323"], ["25", "351"], ["25", "353"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["55", "7"], ["55", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["70", "71"], ["70", "72"], ["70", "75"], ["70", "78"], ["70", "80"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "77"], ["78", "79"], ["80", "81"], ["80", "82"], ["80", "86"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "95"], ["86", "100"], ["88", "89"], ["88", "90"], ["88", "91"], ["88", "92"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "98"], ["95", "99"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "109"], ["101", "111"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["109", "110"], ["111", "112"], ["112", "113"], ["112", "114"], ["112", "117"], ["112", "120"], ["112", "122"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "124"], ["122", "128"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "137"], ["128", "142"], ["130", "131"], ["130", "132"], ["130", "133"], ["130", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["137", "140"], ["137", "141"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "151"], ["149", "156"], ["149", "161"], ["149", "177"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["156", "159"], ["159", "160"], ["161", "162"], ["161", "163"], ["161", "166"], ["161", "169"], ["161", "171"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["172", "173"], ["172", "174"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "191"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "201"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["204", "209"], ["206", "207"], ["206", "208"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "220"], ["210", "222"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["222", "229"], ["223", "224"], ["223", "225"], ["223", "228"], ["225", "226"], ["225", "227"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "237"], ["229", "239"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["239", "240"], ["240", "241"], ["240", "242"], ["240", "245"], ["240", "248"], ["240", "250"], ["242", "243"], ["242", "244"], ["245", "246"], ["245", "247"], ["248", "249"], ["250", "251"], ["250", "252"], ["250", "259"], ["250", "260"], ["250", "266"], ["252", "253"], ["252", "254"], ["254", "255"], ["254", "256"], ["254", "257"], ["254", "258"], ["260", "261"], ["260", "262"], ["262", "263"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "269"], ["267", "268"], ["269", "270"], ["269", "271"], ["269", "275"], ["271", "272"], ["271", "273"], ["273", "274"], ["275", "276"], ["275", "281"], ["276", "277"], ["276", "280"], ["277", "278"], ["277", "279"], ["281", "282"], ["281", "283"], ["281", "288"], ["283", "284"], ["283", "287"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "298"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "300"], ["301", "302"], ["301", "303"], ["301", "306"], ["301", "311"], ["301", "313"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["313", "314"], ["314", "315"], ["314", "322"], ["315", "316"], ["315", "321"], ["316", "317"], ["316", "318"], ["318", "319"], ["318", "320"], ["323", "324"], ["323", "325"], ["323", "328"], ["323", "331"], ["323", "333"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["331", "332"], ["333", "334"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "338"], ["336", "343"], ["336", "346"], ["338", "339"], ["338", "340"], ["340", "341"], ["340", "342"], ["343", "344"], ["343", "345"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["351", "352"], ["26", "29"], ["29", "32"], ["30", "36"], ["33", "40"], ["38", "45"], ["43", "50"], ["48", "54"], ["52", "56"], ["55", "61"], ["193", "206"], ["204", "212"], ["351", "353"], ["353", "356"], ["28", "26"], ["32", "30"], ["34", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["54", "52"], ["56", "55"], ["61", "64"], ["64", "72"], ["64", "103"], ["67", "64"], ["103", "106"], ["106", "114"], ["106", "145"], ["109", "106"], ["144", "153"], ["144", "180"], ["179", "188"], ["179", "197"], ["195", "193"], ["206", "204"], ["212", "217"], ["215", "225"], ["215", "303"], ["220", "217"], ["303", "308"], ["306", "318"], ["306", "325"], ["311", "308"], ["325", "328"], ["328", "340"], ["328", "351"], ["331", "328"], ["36", "34"], ["145", "144"], ["151", "159"], ["156", "163"], ["177", "356"], ["180", "179"], ["185", "191"], ["191", "356"], ["196", "201"], ["201", "195"], ["217", "215"], ["223", "231"], ["308", "306"], ["314", "311"], ["334", "331"], ["72", "75"], ["75", "84"], ["75", "67"], ["78", "75"], ["114", "117"], ["117", "126"], ["117", "109"], ["120", "117"], ["153", "151"], ["159", "156"], ["163", "166"], ["166", "177"], ["166", "174"], ["169", "166"], ["186", "189"], ["189", "185"], ["197", "196"], ["225", "223"], ["231", "234"], ["234", "242"], ["234", "220"], ["237", "234"], ["315", "314"], ["336", "334"], ["82", "92"], ["86", "78"], ["124", "133"], ["128", "120"], ["172", "169"], ["188", "186"], ["316", "315"], ["338", "343"], ["343", "347"], ["346", "336"], ["84", "82"], ["88", "95"], ["95", "86"], ["126", "124"], ["130", "137"], ["137", "128"], ["174", "172"], ["242", "245"], ["245", "254"], ["245", "237"], ["248", "245"], ["318", "316"], ["340", "338"], ["347", "346"], ["92", "88"], ["133", "130"], ["252", "263"], ["260", "267"], ["254", "252"], ["262", "260"], ["267", "273"], ["267", "248"], ["263", "262"], ["271", "277"], ["275", "267"], ["273", "271"], ["276", "284"], ["281", "275"], ["277", "276"], ["283", "292"], ["288", "281"], ["284", "283"], ["289", "300"], ["298", "288"], ["290", "297"], ["295", "289"], ["300", "298"], ["292", "290"], ["297", "295"], ["23", "28"], ["191", "356"], ["353", "356"], ["177", "356"], ["24", "356"], ["26", "356"], ["29", "356"], ["30", "356"], ["33", "356"], ["33", "356"], ["33", "356"], ["38", "356"], ["43", "356"], ["50", "356"], ["48", "356"], ["48", "356"], ["52", "356"], ["55", "356"], ["55", "356"], ["55", "356"], ["103", "356"], ["145", "356"], ["144", "356"], ["144", "356"], ["153", "356"], ["151", "356"], ["151", "356"], ["156", "356"], ["156", "356"], ["156", "356"], ["156", "356"], ["163", "356"], ["166", "356"], ["166", "356"], ["166", "356"], ["172", "356"], ["172", "356"], ["172", "356"], ["169", "356"], ["114", "356"], ["117", "356"], ["117", "356"], ["109", "356"], ["126", "356"], ["124", "356"], ["124", "356"], ["128", "356"], ["130", "356"], ["128", "356"], ["128", "356"], ["128", "356"], ["128", "356"], ["120", "356"], ["72", "356"], ["75", "356"], ["75", "356"], ["67", "356"], ["84", "356"], ["82", "356"], ["82", "356"], ["86", "356"], ["88", "356"], ["86", "356"], ["86", "356"], ["86", "356"], ["86", "356"], ["78", "356"], ["223", "356"], ["336", "356"], ["23", "24"], ["23", "26"], ["23", "30"], ["40", "38"], ["45", "43"], ["50", "48"], ["23", "52"], ["195", "193"], ["195", "193"], ["23", "353"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["52", "55"], ["23", "55"], ["56", "55"], ["56", "55"], ["23", "61"], ["23", "103"], ["137", "204"], ["95", "204"], ["23", "204"], ["193", "204"], ["23", "212"], ["23", "303"], ["23", "325"], ["33", "351"], ["23", "351"], ["29", "40"], ["23", "40"], ["40", "45"], ["23", "45"], ["45", "50"], ["23", "50"], ["38", "56"], ["23", "56"], ["43", "56"], ["61", "64"], ["67", "64"], ["23", "64"], ["56", "64"], ["64", "67"], ["95", "67"], ["23", "67"], ["103", "106"], ["109", "106"], ["23", "106"], ["64", "106"], ["106", "109"], ["137", "109"], ["23", "109"], ["145", "144"], ["145", "144"], ["23", "144"], ["153", "151"], ["153", "151"], ["23", "177"], ["180", "179"], ["180", "179"], ["23", "179"], ["23", "191"], ["197", "195"], ["197", "195"], ["23", "195"], ["201", "195"], ["201", "195"], ["212", "215"], ["220", "215"], ["23", "215"], ["217", "215"], ["217", "215"], ["215", "220"], ["292", "220"], ["23", "220"], ["303", "306"], ["311", "306"], ["23", "306"], ["308", "306"], ["308", "306"], ["306", "311"], ["23", "311"], ["23", "314"], ["325", "328"], ["331", "328"], ["23", "328"], ["308", "328"], ["347", "331"], ["23", "331"], ["23", "72"], ["23", "114"], ["48", "145"], ["23", "145"], ["137", "156"], ["95", "156"], ["23", "156"], ["151", "156"], ["159", "156"], ["23", "163"], ["106", "180"], ["23", "180"], ["56", "180"], ["117", "180"], ["75", "180"], ["33", "185"], ["189", "185"], ["197", "196"], ["197", "196"], ["23", "196"], ["180", "201"], ["23", "201"], ["180", "201"], ["197", "217"], ["23", "217"], ["204", "223"], ["254", "223"], ["281", "223"], ["23", "223"], ["193", "223"], ["275", "223"], ["23", "231"], ["201", "308"], ["234", "308"], ["23", "308"], ["201", "308"], ["245", "308"], ["204", "334"], ["223", "334"], ["254", "334"], ["281", "334"], ["23", "334"], ["336", "334"], ["336", "334"], ["336", "334"], ["336", "334"], ["72", "75"], ["78", "75"], ["23", "75"], ["56", "75"], ["95", "75"], ["95", "78"], ["23", "78"], ["84", "82"], ["114", "117"], ["120", "117"], ["23", "117"], ["56", "117"], ["137", "117"], ["75", "117"], ["137", "120"], ["23", "120"], ["126", "124"], ["106", "153"], ["23", "153"], ["56", "153"], ["117", "153"], ["75", "153"], ["23", "159"], ["163", "166"], ["169", "166"], ["23", "166"], ["153", "166"], ["166", "169"], ["23", "169"], ["23", "189"], ["145", "197"], ["23", "197"], ["231", "234"], ["237", "234"], ["23", "234"], ["201", "234"], ["234", "237"], ["254", "237"], ["23", "237"], ["23", "336"], ["193", "336"], ["314", "336"], ["343", "336"], ["343", "336"], ["347", "336"], ["347", "336"], ["55", "86"], ["23", "86"], ["88", "86"], ["88", "86"], ["88", "86"], ["88", "86"], ["95", "86"], ["95", "86"], ["95", "86"], ["95", "86"], ["82", "86"], ["55", "128"], ["86", "128"], ["23", "128"], ["130", "128"], ["130", "128"], ["130", "128"], ["130", "128"], ["137", "128"], ["137", "128"], ["137", "128"], ["137", "128"], ["124", "128"], ["156", "172"], ["23", "172"], ["156", "172"], ["23", "242"], ["328", "343"], ["23", "343"], ["308", "343"], ["347", "343"], ["347", "346"], ["347", "346"], ["23", "346"], ["50", "84"], ["23", "84"], ["95", "88"], ["23", "88"], ["75", "88"], ["64", "88"], ["95", "88"], ["92", "88"], ["92", "88"], ["88", "95"], ["23", "95"], ["88", "95"], ["88", "95"], ["92", "95"], ["50", "126"], ["84", "126"], ["23", "126"], ["137", "130"], ["95", "130"], ["23", "130"], ["117", "130"], ["133", "130"], ["133", "130"], ["117", "130"], ["130", "137"], ["23", "137"], ["130", "137"], ["133", "137"], ["130", "137"], ["242", "245"], ["248", "245"], ["23", "245"], ["201", "245"], ["254", "245"], ["254", "248"], ["23", "248"], ["254", "252"], ["254", "252"], ["254", "252"], ["254", "252"], ["262", "260"], ["217", "318"], ["23", "318"], ["217", "340"], ["318", "340"], ["23", "340"], ["343", "347"], ["23", "347"], ["343", "347"], ["75", "92"], ["23", "92"], ["106", "133"], ["137", "133"], ["23", "133"], ["223", "254"], ["281", "254"], ["23", "254"], ["245", "254"], ["234", "254"], ["245", "254"], ["263", "262"], ["263", "262"], ["260", "267"], ["273", "267"], ["23", "267"], ["273", "271"], ["281", "275"], ["281", "275"], ["281", "275"], ["55", "263"], ["128", "263"], ["86", "263"], ["23", "263"], ["252", "263"], ["267", "273"], ["23", "273"], ["254", "281"], ["23", "281"], ["275", "281"], ["271", "281"], ["271", "288"], ["215", "292"], ["23", "292"], ["64", "72"], ["64", "64"], ["64", "75"], ["64", "67"], ["106", "114"], ["106", "117"], ["106", "109"], ["106", "106"], ["144", "163"], ["144", "180"], ["144", "159"], ["144", "177"], ["144", "179"], ["144", "151"], ["144", "153"], ["144", "166"], ["144", "156"], ["179", "188"], ["179", "215"], ["179", "196"], ["179", "308"], ["179", "204"], ["179", "206"], ["179", "195"], ["179", "306"], ["179", "186"], ["179", "201"], ["179", "217"], ["179", "328"], ["179", "351"], ["179", "185"], ["179", "197"], ["179", "189"], ["179", "191"], ["179", "353"], ["179", "212"], ["179", "325"], ["179", "193"], ["179", "303"], ["215", "215"], ["215", "217"], ["215", "225"], ["215", "223"], ["215", "231"], ["215", "220"], ["215", "234"], ["306", "308"], ["306", "306"], ["306", "315"], ["306", "311"], ["306", "316"], ["306", "314"], ["306", "318"], ["328", "334"], ["328", "338"], ["328", "336"], ["328", "340"], ["328", "346"], ["328", "347"], ["328", "328"], ["328", "343"], ["328", "331"], ["75", "84"], ["75", "95"], ["75", "88"], ["75", "86"], ["75", "75"], ["75", "92"], ["75", "82"], ["75", "78"], ["117", "120"], ["117", "128"], ["117", "117"], ["117", "133"], ["117", "137"], ["117", "130"], ["117", "126"], ["117", "124"], ["166", "174"], ["166", "172"], ["166", "169"], ["166", "166"], ["234", "242"], ["234", "237"], ["234", "245"], ["234", "234"], ["245", "262"], ["245", "260"], ["245", "254"], ["245", "245"], ["245", "267"], ["245", "252"], ["245", "263"], ["245", "248"], ["267", "292"], ["267", "290"], ["267", "283"], ["267", "298"], ["267", "300"], ["267", "281"], ["267", "288"], ["267", "276"], ["267", "297"], ["267", "273"], ["267", "275"], ["267", "284"], ["267", "289"], ["267", "267"], ["267", "295"], ["267", "277"], ["267", "271"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new FastScanner())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new FastScanner())<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(LOCAL,int h: int)<SUB>6</SUB>>", "39": "<(IDENTIFIER,h,int h = nexI())<SUB>6</SUB>>", "41": "<(IDENTIFIER,sc,nexI())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,int w = nexI())<SUB>7</SUB>>", "45": "<(nexI,nexI())<SUB>7</SUB>>", "47": "<(LOCAL,int k: int)<SUB>8</SUB>>", "49": "<(IDENTIFIER,k,int k = nexI())<SUB>8</SUB>>", "51": "<(IDENTIFIER,sc,nexI())<SUB>8</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY grid = new Graph(h * w))<SUB>11</SUB>>", "54": "<(&lt;operator&gt;.alloc,new Graph(h * w))<SUB>11</SUB>>", "7": "<(IDENTIFIER,grid,new Graph(h * w))<SUB>11</SUB>>", "57": "<(IDENTIFIER,h,h * w)<SUB>11</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; h); i++),for (int i = 0; Some(i &lt; h); i++))<SUB>13</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>13</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>13</SUB>>", "65": "<(IDENTIFIER,i,i &lt; h)<SUB>13</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "71": "<(LOCAL,int j: int)<SUB>14</SUB>>", "73": "<(IDENTIFIER,j,int j = 1)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.lessThan,j &lt; w)<SUB>14</SUB>>", "77": "<(IDENTIFIER,w,j &lt; w)<SUB>14</SUB>>", "79": "<(IDENTIFIER,j,j++)<SUB>14</SUB>>", "81": "<(LOCAL,long w1: long)<SUB>15</SUB>>", "83": "<(IDENTIFIER,w1,long w1 = nexL())<SUB>15</SUB>>", "85": "<(IDENTIFIER,sc,nexL())<SUB>15</SUB>>", "87": "<(IDENTIFIER,grid,add2(getad(w, i, j - 1), getad(w, i, j), w1))<SUB>16</SUB>>", "89": "<(IDENTIFIER,this,getad(w, i, j - 1))<SUB>16</SUB>>", "91": "<(IDENTIFIER,i,getad(w, i, j - 1))<SUB>16</SUB>>", "93": "<(IDENTIFIER,j,j - 1)<SUB>16</SUB>>", "95": "<(getad,getad(w, i, j))<SUB>16</SUB>>", "97": "<(IDENTIFIER,w,getad(w, i, j))<SUB>16</SUB>>", "99": "<(IDENTIFIER,j,getad(w, i, j))<SUB>16</SUB>>", "101": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; h); i++),for (int i = 1; Some(i &lt; h); i++))<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>19</SUB>>", "105": "<(LITERAL,1,int i = 1)<SUB>19</SUB>>", "107": "<(IDENTIFIER,i,i &lt; h)<SUB>19</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "113": "<(LOCAL,int j: int)<SUB>20</SUB>>", "115": "<(IDENTIFIER,j,int j = 0)<SUB>20</SUB>>", "117": "<(&lt;operator&gt;.lessThan,j &lt; w)<SUB>20</SUB>>", "119": "<(IDENTIFIER,w,j &lt; w)<SUB>20</SUB>>", "121": "<(IDENTIFIER,j,j++)<SUB>20</SUB>>", "123": "<(LOCAL,long w1: long)<SUB>21</SUB>>", "125": "<(IDENTIFIER,w1,long w1 = nexL())<SUB>21</SUB>>", "127": "<(IDENTIFIER,sc,nexL())<SUB>21</SUB>>", "129": "<(IDENTIFIER,grid,add2(getad(w, i - 1, j), getad(w, i, j), w1))<SUB>22</SUB>>", "131": "<(IDENTIFIER,this,getad(w, i - 1, j))<SUB>22</SUB>>", "133": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>22</SUB>>", "135": "<(LITERAL,1,i - 1)<SUB>22</SUB>>", "137": "<(getad,getad(w, i, j))<SUB>22</SUB>>", "139": "<(IDENTIFIER,w,getad(w, i, j))<SUB>22</SUB>>", "141": "<(IDENTIFIER,j,getad(w, i, j))<SUB>22</SUB>>", "143": "<(CONTROL_STRUCTURE,if (k % 2 != 0),if (k % 2 != 0))<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.modulo,k % 2)<SUB>26</SUB>>", "147": "<(LITERAL,2,k % 2)<SUB>26</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.assignment,int[][] anss = new int[h][w])<SUB>27</SUB>>", "153": "<(&lt;operator&gt;.alloc,new int[h][w])>", "155": "<(IDENTIFIER,w,new int[h][w])<SUB>27</SUB>>", "157": "<(IDENTIFIER,this,fill(anss, -1))<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.minus,-1)<SUB>28</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; h); i++),for (int i = 0; Some(i &lt; h); i++))<SUB>29</SUB>>", "163": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>29</SUB>>", "165": "<(LITERAL,0,int i = 0)<SUB>29</SUB>>", "167": "<(IDENTIFIER,i,i &lt; h)<SUB>29</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,i++)<SUB>29</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "173": "<(IDENTIFIER,this,prtspas(anss[i]))<SUB>30</SUB>>", "175": "<(IDENTIFIER,anss,prtspas(anss[i]))<SUB>30</SUB>>", "177": "<(RETURN,return;,return;)<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.equals,(h * w) == 1)<SUB>35</SUB>>", "181": "<(IDENTIFIER,h,h * w)<SUB>35</SUB>>", "183": "<(LITERAL,1,(h * w) == 1)<SUB>35</SUB>>", "185": "<(println,System.out.println(-1))<SUB>36</SUB>>", "187": "<(IDENTIFIER,System,System.out.println(-1))<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.minus,-1)<SUB>36</SUB>>", "191": "<(RETURN,return;,return;)<SUB>37</SUB>>", "193": "<(&lt;operator&gt;.assignment,long[][] mincos = new long[(k / 2) + 1][h * w])<SUB>40</SUB>>", "195": "<(&lt;operator&gt;.alloc,new long[(k / 2) + 1][h * w])>", "197": "<(&lt;operator&gt;.division,k / 2)<SUB>40</SUB>>", "199": "<(LITERAL,2,k / 2)<SUB>40</SUB>>", "201": "<(&lt;operator&gt;.multiplication,h * w)<SUB>40</SUB>>", "203": "<(IDENTIFIER,w,h * w)<SUB>40</SUB>>", "205": "<(IDENTIFIER,this,fill(mincos[0], 0L))<SUB>41</SUB>>", "207": "<(IDENTIFIER,mincos,fill(mincos[0], 0L))<SUB>41</SUB>>", "209": "<(LITERAL,0L,fill(mincos[0], 0L))<SUB>41</SUB>>", "211": "<(LOCAL,int t: int)<SUB>43</SUB>>", "213": "<(IDENTIFIER,t,int t = 1)<SUB>43</SUB>>", "215": "<(&lt;operator&gt;.lessEqualsThan,t &lt;= (k / 2))<SUB>43</SUB>>", "217": "<(&lt;operator&gt;.division,k / 2)<SUB>43</SUB>>", "219": "<(LITERAL,2,k / 2)<SUB>43</SUB>>", "221": "<(IDENTIFIER,t,t++)<SUB>43</SUB>>", "223": "<(fill,fill(mincos[t], INFL))<SUB>44</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,mincos[t])<SUB>44</SUB>>", "227": "<(IDENTIFIER,t,fill(mincos[t], INFL))<SUB>44</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; h); i++),for (int i = 0; Some(i &lt; h); i++))<SUB>45</SUB>>", "231": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>45</SUB>>", "233": "<(LITERAL,0,int i = 0)<SUB>45</SUB>>", "235": "<(IDENTIFIER,i,i &lt; h)<SUB>45</SUB>>", "237": "<(&lt;operator&gt;.postIncrement,i++)<SUB>45</SUB>>", "239": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "241": "<(LOCAL,int j: int)<SUB>46</SUB>>", "243": "<(IDENTIFIER,j,int j = 0)<SUB>46</SUB>>", "245": "<(&lt;operator&gt;.lessThan,j &lt; w)<SUB>46</SUB>>", "247": "<(IDENTIFIER,w,j &lt; w)<SUB>46</SUB>>", "249": "<(IDENTIFIER,j,j++)<SUB>46</SUB>>", "251": "<(LOCAL,int ad: int)<SUB>47</SUB>>", "253": "<(IDENTIFIER,ad,int ad = getad(w, i, j))<SUB>47</SUB>>", "255": "<(IDENTIFIER,this,getad(w, i, j))<SUB>47</SUB>>", "257": "<(IDENTIFIER,i,getad(w, i, j))<SUB>47</SUB>>", "259": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>48</SUB>>", "261": "<(IDENTIFIER,$iterLocal0,)<SUB>48</SUB>>", "263": "<(get,get(ad))<SUB>48</SUB>>", "265": "<(IDENTIFIER,ad,get(ad))<SUB>48</SUB>>", "267": "<(hasNext,&lt;empty&gt;)<SUB>48</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>>", "271": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>48</SUB>>", "273": "<(next,&lt;empty&gt;)<SUB>48</SUB>>", "275": "<(&lt;operator&gt;.assignment,mincos[t][ad] = min(mincos[t][ad], mincos[t - 1][e.v2] + e.w))<SUB>49</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,mincos[t])<SUB>49</SUB>>", "279": "<(IDENTIFIER,t,mincos[t][ad] = min(mincos[t][ad], mincos[t - 1][e.v2] + e.w))<SUB>49</SUB>>", "281": "<(min,min(mincos[t][ad], mincos[t - 1][e.v2] + e.w))<SUB>49</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,mincos[t][ad])<SUB>49</SUB>>", "285": "<(IDENTIFIER,mincos,min(mincos[t][ad], mincos[t - 1][e.v2] + e.w))<SUB>49</SUB>>", "287": "<(IDENTIFIER,ad,min(mincos[t][ad], mincos[t - 1][e.v2] + e.w))<SUB>49</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,mincos[t - 1][e.v2])<SUB>49</SUB>>", "291": "<(IDENTIFIER,mincos,mincos[t - 1][e.v2] + e.w)<SUB>49</SUB>>", "293": "<(IDENTIFIER,t,t - 1)<SUB>49</SUB>>", "295": "<(&lt;operator&gt;.fieldAccess,e.v2)<SUB>49</SUB>>", "297": "<(FIELD_IDENTIFIER,v2,v2)<SUB>49</SUB>>", "299": "<(IDENTIFIER,e,mincos[t - 1][e.v2] + e.w)<SUB>49</SUB>>", "301": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (h * w)); i++),for (int i = 0; Some(i &lt; (h * w)); i++))<SUB>56</SUB>>", "303": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>56</SUB>>", "305": "<(LITERAL,0,int i = 0)<SUB>56</SUB>>", "307": "<(IDENTIFIER,i,i &lt; (h * w))<SUB>56</SUB>>", "309": "<(IDENTIFIER,h,h * w)<SUB>56</SUB>>", "311": "<(&lt;operator&gt;.postIncrement,i++)<SUB>56</SUB>>", "313": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>>", "315": "<(&lt;operator&gt;.indexAccess,mincos[k / 2][i])<SUB>57</SUB>>", "317": "<(IDENTIFIER,mincos,mincos[k / 2][i] *= 2L)<SUB>57</SUB>>", "319": "<(IDENTIFIER,k,k / 2)<SUB>57</SUB>>", "321": "<(IDENTIFIER,i,mincos[k / 2][i] *= 2L)<SUB>57</SUB>>", "323": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; h); i++),for (int i = 0; Some(i &lt; h); i++))<SUB>59</SUB>>", "325": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>59</SUB>>", "327": "<(LITERAL,0,int i = 0)<SUB>59</SUB>>", "329": "<(IDENTIFIER,i,i &lt; h)<SUB>59</SUB>>", "331": "<(&lt;operator&gt;.postIncrement,i++)<SUB>59</SUB>>", "333": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>>", "335": "<(IDENTIFIER,this,prtspas(Arrays.copyOfRange(mincos[k / 2], i * w, i * w + w)))<SUB>60</SUB>>", "337": "<(IDENTIFIER,Arrays,copyOfRange(mincos[k / 2], i * w, i * w + w))<SUB>60</SUB>>", "339": "<(IDENTIFIER,mincos,copyOfRange(mincos[k / 2], i * w, i * w + w))<SUB>60</SUB>>", "341": "<(IDENTIFIER,k,k / 2)<SUB>60</SUB>>", "343": "<(&lt;operator&gt;.multiplication,i * w)<SUB>60</SUB>>", "345": "<(IDENTIFIER,w,i * w)<SUB>60</SUB>>", "347": "<(&lt;operator&gt;.multiplication,i * w)<SUB>60</SUB>>", "349": "<(IDENTIFIER,w,i * w)<SUB>60</SUB>>", "351": "<(flush,flush())<SUB>63</SUB>>", "353": "<(RETURN,return;,return;)<SUB>64</SUB>>", "355": "<(MODIFIER,STATIC)>"}}