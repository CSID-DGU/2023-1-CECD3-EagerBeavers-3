{"edges": [["21", "22"], ["21", "23"], ["21", "176"], ["21", "177"], ["21", "178"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "35"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "70"], ["23", "71"], ["23", "75"], ["23", "6"], ["23", "132"], ["23", "135"], ["23", "139"], ["23", "142"], ["23", "174"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["33", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["48", "53"], ["48", "56"], ["48", "58"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["56", "57"], ["58", "59"], ["58", "65"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "78"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "84"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "89"], ["85", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "103"], ["90", "91"], ["90", "102"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "115"], ["103", "122"], ["104", "105"], ["104", "110"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["116", "117"], ["116", "118"], ["116", "119"], ["116", "121"], ["119", "120"], ["122", "123"], ["123", "124"], ["123", "129"], ["124", "125"], ["124", "128"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "5"], ["135", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "152"], ["142", "154"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["154", "155"], ["155", "156"], ["155", "163"], ["155", "166"], ["156", "157"], ["156", "162"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "165"], ["166", "167"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["24", "30"], ["27", "33"], ["31", "37"], ["35", "41"], ["39", "46"], ["44", "50"], ["71", "76"], ["132", "138"], ["135", "139"], ["139", "144"], ["174", "178"], ["26", "24"], ["28", "27"], ["33", "31"], ["37", "35"], ["41", "39"], ["46", "44"], ["50", "53"], ["53", "60"], ["53", "73"], ["56", "53"], ["73", "71"], ["76", "82"], ["76", "134"], ["134", "132"], ["136", "135"], ["144", "151"], ["147", "159"], ["147", "174"], ["152", "151"], ["30", "28"], ["59", "67"], ["65", "56"], ["80", "86"], ["138", "136"], ["149", "147"], ["60", "63"], ["63", "59"], ["67", "65"], ["82", "80"], ["85", "76"], ["85", "94"], ["151", "149"], ["156", "163"], ["156", "171"], ["163", "152"], ["86", "85"], ["157", "156"], ["167", "152"], ["91", "76"], ["91", "107"], ["104", "119"], ["104", "127"], ["159", "157"], ["169", "167"], ["92", "91"], ["92", "99"], ["97", "91"], ["105", "104"], ["105", "112"], ["110", "104"], ["116", "76"], ["171", "169"], ["94", "92"], ["99", "97"], ["107", "105"], ["112", "110"], ["119", "116"], ["124", "129"], ["129", "76"], ["125", "124"], ["127", "125"], ["21", "26"], ["22", "178"], ["24", "178"], ["27", "178"], ["27", "178"], ["31", "178"], ["35", "178"], ["35", "178"], ["39", "178"], ["41", "178"], ["39", "178"], ["39", "178"], ["44", "178"], ["44", "178"], ["44", "178"], ["53", "178"], ["53", "178"], ["73", "178"], ["71", "178"], ["76", "178"], ["76", "178"], ["132", "178"], ["135", "178"], ["135", "178"], ["139", "178"], ["144", "178"], ["147", "178"], ["147", "178"], ["147", "178"], ["174", "178"], ["174", "178"], ["157", "178"], ["157", "178"], ["156", "178"], ["156", "178"], ["169", "178"], ["169", "178"], ["167", "178"], ["167", "178"], ["163", "178"], ["152", "178"], ["86", "178"], ["85", "178"], ["85", "178"], ["92", "178"], ["94", "178"], ["94", "178"], ["92", "178"], ["91", "178"], ["97", "178"], ["99", "178"], ["99", "178"], ["97", "178"], ["91", "178"], ["91", "178"], ["105", "178"], ["107", "178"], ["107", "178"], ["105", "178"], ["104", "178"], ["110", "178"], ["112", "178"], ["112", "178"], ["110", "178"], ["104", "178"], ["104", "178"], ["129", "178"], ["129", "178"], ["116", "178"], ["116", "178"], ["116", "178"], ["63", "178"], ["59", "178"], ["59", "178"], ["65", "178"], ["65", "178"], ["56", "178"], ["86", "178"], ["116", "178"], ["21", "22"], ["21", "24"], ["33", "31"], ["37", "35"], ["41", "39"], ["46", "44"], ["73", "71"], ["21", "132"], ["24", "27"], ["21", "27"], ["21", "50"], ["132", "135"], ["21", "135"], ["129", "135"], ["135", "139"], ["21", "139"], ["21", "144"], ["139", "174"], ["167", "174"], ["163", "174"], ["21", "174"], ["27", "33"], ["21", "33"], ["33", "37"], ["21", "37"], ["37", "41"], ["21", "41"], ["31", "46"], ["21", "46"], ["50", "53"], ["56", "53"], ["21", "53"], ["46", "53"], ["53", "56"], ["21", "56"], ["63", "59"], ["65", "73"], ["21", "73"], ["71", "76"], ["82", "76"], ["21", "76"], ["82", "80"], ["144", "147"], ["152", "147"], ["21", "147"], ["44", "147"], ["147", "152"], ["21", "152"], ["21", "65"], ["44", "65"], ["59", "65"], ["41", "63"], ["21", "63"], ["76", "82"], ["21", "82"], ["86", "85"], ["86", "85"], ["157", "156"], ["157", "156"], ["21", "156"], ["139", "163"], ["167", "163"], ["21", "163"], ["21", "86"], ["80", "86"], ["169", "157"], ["21", "157"], ["44", "157"], ["169", "157"], ["65", "157"], ["139", "167"], ["163", "167"], ["21", "167"], ["169", "167"], ["169", "167"], ["92", "91"], ["92", "91"], ["104", "91"], ["97", "91"], ["97", "91"], ["105", "104"], ["105", "104"], ["110", "104"], ["110", "104"], ["91", "104"], ["157", "169"], ["21", "169"], ["44", "169"], ["157", "169"], ["73", "92"], ["97", "92"], ["105", "92"], ["110", "92"], ["21", "92"], ["94", "92"], ["94", "92"], ["92", "97"], ["21", "97"], ["99", "97"], ["99", "97"], ["92", "105"], ["97", "105"], ["21", "105"], ["107", "105"], ["107", "105"], ["105", "110"], ["21", "110"], ["112", "110"], ["112", "110"], ["21", "116"], ["107", "116"], ["112", "116"], ["119", "116"], ["35", "94"], ["107", "94"], ["21", "94"], ["86", "94"], ["39", "99"], ["112", "99"], ["21", "99"], ["94", "99"], ["94", "107"], ["21", "107"], ["94", "107"], ["99", "107"], ["39", "112"], ["99", "112"], ["21", "112"], ["107", "112"], ["21", "119"], ["129", "124"], ["21", "124"], ["27", "129"], ["124", "129"], ["21", "129"], ["53", "60"], ["53", "56"], ["53", "67"], ["53", "65"], ["53", "59"], ["53", "53"], ["53", "63"], ["76", "85"], ["76", "76"], ["76", "82"], ["76", "80"], ["76", "86"], ["147", "149"], ["147", "151"], ["147", "157"], ["147", "159"], ["147", "152"], ["147", "147"], ["147", "156"], ["85", "94"], ["85", "92"], ["85", "91"], ["156", "167"], ["156", "169"], ["156", "163"], ["156", "171"], ["91", "107"], ["91", "104"], ["91", "105"], ["104", "116"], ["104", "119"], ["104", "129"], ["104", "127"], ["104", "124"], ["104", "125"], ["92", "99"], ["92", "97"], ["105", "112"], ["105", "110"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY r = new InputReader(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,r,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,n = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,a = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,b = nextInt())<SUB>5</SUB>>", "41": "<(nextInt,nextInt())<SUB>5</SUB>>", "43": "<(LOCAL,int[] list: int[])<SUB>6</SUB>>", "45": "<(IDENTIFIER,list,int[] list = new int[n])<SUB>6</SUB>>", "47": "<(IDENTIFIER,n,new int[n])<SUB>6</SUB>>", "49": "<(LOCAL,int i: int)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "55": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,list[i] = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,list,list[i] = nextInt())<SUB>8</SUB>>", "63": "<(nextInt,nextInt())<SUB>8</SUB>>", "65": "<(add,add(list[i]))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,add(list[i]))<SUB>9</SUB>>", "71": "<(&lt;operator&gt;.assignment,)<SUB>11</SUB>>", "73": "<(iterator,&lt;empty&gt;)<SUB>11</SUB>>", "75": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>11</SUB>>", "77": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "79": "<(LOCAL,x: int)<SUB>11</SUB>>", "81": "<(IDENTIFIER,x,&lt;empty&gt;)>", "83": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "85": "<(&lt;operator&gt;.logicalNot,!visited.contains(x))<SUB>12</SUB>>", "87": "<(IDENTIFIER,visited,contains(x))<SUB>12</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.logicalAnd,arr.contains(a - x) &amp;&amp; arr.contains(b - x))<SUB>13</SUB>>", "93": "<(IDENTIFIER,arr,contains(a - x))<SUB>13</SUB>>", "95": "<(IDENTIFIER,a,a - x)<SUB>13</SUB>>", "97": "<(contains,contains(b - x))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.subtraction,b - x)<SUB>13</SUB>>", "101": "<(IDENTIFIER,x,b - x)<SUB>13</SUB>>", "103": "<(CONTROL_STRUCTURE,if (arr.contains(a - x) || arr.contains(b - x)),if (arr.contains(a - x) || arr.contains(b - x)))<SUB>15</SUB>>", "105": "<(contains,contains(a - x))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.subtraction,a - x)<SUB>15</SUB>>", "109": "<(IDENTIFIER,x,a - x)<SUB>15</SUB>>", "111": "<(IDENTIFIER,arr,contains(b - x))<SUB>15</SUB>>", "113": "<(IDENTIFIER,b,b - x)<SUB>15</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "117": "<(IDENTIFIER,this,dfs(x, -1, 1))<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.minus,-1)<SUB>16</SUB>>", "121": "<(LITERAL,1,dfs(x, -1, 1))<SUB>16</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "127": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "129": "<(exit,System.exit(0))<SUB>19</SUB>>", "131": "<(LITERAL,0,System.exit(0))<SUB>19</SUB>>", "132": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>23</SUB>>", "134": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>23</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>23</SUB>>", "137": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>23</SUB>>", "139": "<(println,println(&quot;YES&quot;))<SUB>24</SUB>>", "141": "<(LITERAL,&quot;YES&quot;,println(&quot;YES&quot;))<SUB>24</SUB>>", "143": "<(LOCAL,int i: int)<SUB>25</SUB>>", "145": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "147": "<(&lt;operator&gt;.lessThan,i &lt; list.length)<SUB>25</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,list.length)<SUB>25</SUB>>", "151": "<(FIELD_IDENTIFIER,length,length)<SUB>25</SUB>>", "153": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "155": "<(CONTROL_STRUCTURE,if (result.get(list[i]) == null),if (result.get(list[i]) == null))<SUB>26</SUB>>", "157": "<(get,get(list[i]))<SUB>26</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>26</SUB>>", "161": "<(IDENTIFIER,i,get(list[i]))<SUB>26</SUB>>", "163": "<(println,println(0))<SUB>27</SUB>>", "165": "<(LITERAL,0,println(0))<SUB>27</SUB>>", "167": "<(println,println(result.get(list[i])))<SUB>29</SUB>>", "169": "<(get,get(list[i]))<SUB>29</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,list[i])<SUB>29</SUB>>", "173": "<(IDENTIFIER,i,get(list[i]))<SUB>29</SUB>>", "175": "<(IDENTIFIER,out,close())<SUB>31</SUB>>", "177": "<(MODIFIER,STATIC)>"}}