{"edges": [["21", "23"], ["21", "123"], ["21", "124"], ["21", "125"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "42"], ["23", "47"], ["23", "75"], ["23", "81"], ["23", "83"], ["23", "84"], ["23", "93"], ["23", "111"], ["23", "119"], ["23", "121"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["67", "73"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["73", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "103"], ["93", "105"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "114"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "40"], ["38", "44"], ["42", "49"], ["75", "81"], ["81", "89"], ["84", "95"], ["111", "119"], ["119", "121"], ["121", "125"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["40", "38"], ["44", "42"], ["49", "52"], ["52", "59"], ["52", "78"], ["55", "52"], ["77", "75"], ["86", "84"], ["95", "100"], ["98", "108"], ["98", "116"], ["103", "100"], ["105", "103"], ["114", "111"], ["30", "28"], ["37", "35"], ["59", "62"], ["62", "69"], ["62", "55"], ["65", "62"], ["67", "65"], ["78", "77"], ["88", "86"], ["100", "98"], ["108", "105"], ["116", "114"], ["68", "73"], ["73", "67"], ["89", "88"], ["69", "68"], ["21", "26"], ["22", "125"], ["24", "125"], ["27", "125"], ["27", "125"], ["31", "125"], ["34", "125"], ["34", "125"], ["40", "125"], ["38", "125"], ["38", "125"], ["42", "125"], ["42", "125"], ["42", "125"], ["52", "125"], ["75", "125"], ["75", "125"], ["81", "125"], ["84", "125"], ["86", "125"], ["88", "125"], ["86", "125"], ["84", "125"], ["84", "125"], ["95", "125"], ["98", "125"], ["98", "125"], ["116", "125"], ["111", "125"], ["111", "125"], ["119", "125"], ["121", "125"], ["121", "125"], ["105", "125"], ["105", "125"], ["103", "125"], ["59", "125"], ["62", "125"], ["62", "125"], ["55", "125"], ["67", "125"], ["73", "125"], ["67", "125"], ["67", "125"], ["65", "125"], ["75", "125"], ["21", "22"], ["21", "24"], ["21", "31"], ["40", "38"], ["44", "42"], ["77", "75"], ["86", "84"], ["86", "84"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "49"], ["21", "81"], ["21", "95"], ["34", "111"], ["105", "111"], ["21", "111"], ["84", "111"], ["111", "119"], ["21", "119"], ["119", "121"], ["21", "121"], ["27", "40"], ["21", "40"], ["38", "44"], ["21", "44"], ["49", "52"], ["55", "52"], ["21", "52"], ["44", "52"], ["62", "52"], ["52", "55"], ["21", "55"], ["21", "59"], ["73", "67"], ["78", "77"], ["78", "77"], ["81", "86"], ["21", "86"], ["88", "86"], ["88", "86"], ["95", "98"], ["103", "98"], ["21", "98"], ["100", "98"], ["100", "98"], ["98", "103"], ["21", "103"], ["34", "105"], ["21", "105"], ["84", "105"], ["59", "62"], ["65", "62"], ["21", "62"], ["52", "62"], ["62", "65"], ["21", "65"], ["21", "78"], ["52", "78"], ["89", "88"], ["89", "88"], ["21", "88"], ["89", "100"], ["21", "100"], ["100", "116"], ["21", "116"], ["40", "73"], ["21", "73"], ["21", "89"], ["78", "89"], ["52", "52"], ["52", "59"], ["52", "55"], ["52", "62"], ["98", "98"], ["98", "105"], ["98", "100"], ["98", "103"], ["98", "108"], ["62", "68"], ["62", "73"], ["62", "69"], ["62", "67"], ["62", "65"], ["62", "62"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(IDENTIFIER,N,N = nextInt())<SUB>6</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "43": "<(IDENTIFIER,a,a = new double[N][N])<SUB>8</SUB>>", "45": "<(IDENTIFIER,N,new double[N][N])<SUB>8</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); ++i),for (int i = 0; Some(i &lt; N); ++i))<SUB>9</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,i &lt; N)<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.preIncrement,++i)<SUB>9</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; N); ++j),for (int j = 0; Some(j &lt; N); ++j))<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>10</SUB>>", "61": "<(LITERAL,0,int j = 0)<SUB>10</SUB>>", "63": "<(IDENTIFIER,j,j &lt; N)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.preIncrement,++j)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,a[i][j] = nextDouble())<SUB>11</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,a[i][j] = nextDouble())<SUB>11</SUB>>", "73": "<(nextDouble,nextDouble())<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.assignment,memo = new double[1 &lt;&lt; N][])<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.alloc,new double[1 &lt;&lt; N][])>", "79": "<(LITERAL,1,1 &lt;&lt; N)<SUB>12</SUB>>", "81": "<(f,f())<SUB>14</SUB>>", "83": "<(LOCAL,double[] ret: double[])<SUB>16</SUB>>", "85": "<(IDENTIFIER,ret,double[] ret = dp((1 &lt;&lt; N) - 1))<SUB>16</SUB>>", "87": "<(IDENTIFIER,this,dp((1 &lt;&lt; N) - 1))<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; N)<SUB>16</SUB>>", "91": "<(IDENTIFIER,N,1 &lt;&lt; N)<SUB>16</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N - 1); ++i),for (int i = 0; Some(i &lt; N - 1); ++i))<SUB>17</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "99": "<(IDENTIFIER,i,i &lt; N - 1)<SUB>17</SUB>>", "101": "<(IDENTIFIER,N,N - 1)<SUB>17</SUB>>", "103": "<(&lt;operator&gt;.preIncrement,++i)<SUB>17</SUB>>", "105": "<(printf,printf(&quot;%.8f &quot;, ret[i]))<SUB>18</SUB>>", "107": "<(LITERAL,&quot;%.8f &quot;,printf(&quot;%.8f &quot;, ret[i]))<SUB>18</SUB>>", "109": "<(IDENTIFIER,ret,printf(&quot;%.8f &quot;, ret[i]))<SUB>18</SUB>>", "111": "<(printf,printf(&quot;%.8f\\n&quot;, ret[N - 1]))<SUB>19</SUB>>", "113": "<(LITERAL,&quot;%.8f\\n&quot;,printf(&quot;%.8f\\n&quot;, ret[N - 1]))<SUB>19</SUB>>", "115": "<(IDENTIFIER,ret,printf(&quot;%.8f\\n&quot;, ret[N - 1]))<SUB>19</SUB>>", "117": "<(IDENTIFIER,N,N - 1)<SUB>19</SUB>>", "119": "<(flush,flush())<SUB>21</SUB>>", "121": "<(close,close())<SUB>22</SUB>>", "123": "<(MODIFIER,PUBLIC)>", "125": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}