{"edges": [["21", "22"], ["21", "23"], ["21", "238"], ["21", "239"], ["21", "240"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "37"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "51"], ["23", "52"], ["23", "56"], ["23", "220"], ["23", "236"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "205"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "115"], ["81", "116"], ["81", "117"], ["81", "126"], ["81", "135"], ["81", "180"], ["82", "83"], ["82", "105"], ["83", "84"], ["83", "104"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "101"], ["87", "88"], ["87", "89"], ["87", "92"], ["87", "95"], ["87", "98"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "114"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["108", "111"], ["111", "112"], ["111", "113"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "134"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "147"], ["145", "154"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "173"], ["154", "176"], ["155", "156"], ["155", "172"], ["156", "157"], ["156", "169"], ["157", "158"], ["157", "159"], ["157", "162"], ["157", "163"], ["157", "166"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["173", "174"], ["173", "175"], ["176", "177"], ["177", "178"], ["177", "179"], ["180", "181"], ["180", "199"], ["181", "182"], ["181", "198"], ["182", "183"], ["182", "195"], ["183", "184"], ["183", "185"], ["183", "188"], ["183", "189"], ["183", "192"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["201", "204"], ["205", "206"], ["205", "209"], ["205", "214"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["214", "215"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["220", "225"], ["220", "228"], ["220", "230"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["230", "232"], ["230", "233"], ["233", "234"], ["233", "235"], ["236", "237"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "39"], ["37", "43"], ["41", "48"], ["46", "54"], ["52", "58"], ["236", "240"], ["26", "24"], ["30", "28"], ["32", "31"], ["39", "37"], ["43", "41"], ["48", "46"], ["54", "52"], ["58", "61"], ["61", "68"], ["61", "222"], ["64", "61"], ["222", "225"], ["225", "233"], ["225", "236"], ["228", "225"], ["230", "228"], ["34", "32"], ["68", "73"], ["233", "230"], ["73", "76"], ["76", "89"], ["76", "206"], ["79", "76"], ["206", "210"], ["206", "216"], ["209", "64"], ["117", "130"], ["126", "137"], ["210", "209"], ["215", "64"], ["83", "111"], ["83", "121"], ["119", "117"], ["128", "126"], ["137", "140"], ["140", "150"], ["140", "185"], ["143", "140"], ["181", "201"], ["181", "79"], ["199", "79"], ["216", "215"], ["84", "83"], ["106", "79"], ["120", "119"], ["129", "128"], ["147", "159"], ["182", "181"], ["201", "199"], ["86", "84"], ["108", "106"], ["121", "120"], ["130", "129"], ["149", "147"], ["155", "173"], ["155", "177"], ["173", "143"], ["183", "195"], ["195", "182"], ["87", "101"], ["101", "86"], ["111", "108"], ["150", "149"], ["156", "155"], ["177", "143"], ["185", "189"], ["189", "192"], ["192", "183"], ["89", "92"], ["92", "95"], ["95", "98"], ["98", "87"], ["157", "169"], ["169", "156"], ["159", "163"], ["163", "166"], ["166", "157"], ["21", "26"], ["22", "240"], ["24", "240"], ["27", "240"], ["28", "240"], ["31", "240"], ["31", "240"], ["37", "240"], ["41", "240"], ["41", "240"], ["41", "240"], ["46", "240"], ["48", "240"], ["46", "240"], ["46", "240"], ["52", "240"], ["52", "240"], ["52", "240"], ["222", "240"], ["225", "240"], ["225", "240"], ["225", "240"], ["236", "240"], ["236", "240"], ["230", "240"], ["230", "240"], ["228", "240"], ["68", "240"], ["73", "240"], ["76", "240"], ["76", "240"], ["206", "240"], ["206", "240"], ["215", "240"], ["215", "240"], ["215", "240"], ["209", "240"], ["209", "240"], ["209", "240"], ["64", "240"], ["84", "240"], ["87", "240"], ["87", "240"], ["87", "240"], ["86", "240"], ["101", "240"], ["86", "240"], ["84", "240"], ["83", "240"], ["83", "240"], ["119", "240"], ["117", "240"], ["117", "240"], ["126", "240"], ["128", "240"], ["126", "240"], ["126", "240"], ["137", "240"], ["140", "240"], ["140", "240"], ["183", "240"], ["183", "240"], ["183", "240"], ["183", "240"], ["183", "240"], ["182", "240"], ["195", "240"], ["182", "240"], ["181", "240"], ["181", "240"], ["201", "240"], ["201", "240"], ["199", "240"], ["199", "240"], ["150", "240"], ["149", "240"], ["147", "240"], ["147", "240"], ["156", "240"], ["155", "240"], ["155", "240"], ["177", "240"], ["177", "240"], ["177", "240"], ["173", "240"], ["173", "240"], ["143", "240"], ["108", "240"], ["108", "240"], ["106", "240"], ["106", "240"], ["79", "240"], ["21", "22"], ["21", "24"], ["21", "28"], ["39", "37"], ["43", "41"], ["48", "46"], ["48", "46"], ["54", "52"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "58"], ["21", "222"], ["31", "236"], ["230", "236"], ["21", "236"], ["27", "39"], ["21", "39"], ["39", "43"], ["21", "43"], ["43", "48"], ["21", "48"], ["37", "48"], ["48", "54"], ["21", "54"], ["58", "61"], ["64", "61"], ["21", "61"], ["54", "61"], ["76", "64"], ["21", "64"], ["21", "68"], ["222", "225"], ["228", "225"], ["21", "225"], ["61", "225"], ["225", "228"], ["21", "228"], ["31", "230"], ["21", "230"], ["52", "230"], ["215", "230"], ["209", "230"], ["21", "73"], ["41", "209"], ["101", "209"], ["195", "209"], ["21", "209"], ["73", "76"], ["79", "76"], ["21", "76"], ["61", "76"], ["76", "79"], ["21", "79"], ["119", "117"], ["119", "117"], ["52", "126"], ["120", "126"], ["119", "126"], ["21", "126"], ["68", "206"], ["199", "206"], ["106", "206"], ["21", "206"], ["206", "215"], ["21", "215"], ["21", "137"], ["201", "199"], ["201", "199"], ["201", "199"], ["84", "83"], ["84", "83"], ["21", "83"], ["108", "106"], ["108", "106"], ["108", "106"], ["120", "119"], ["120", "119"], ["21", "119"], ["52", "128"], ["120", "128"], ["119", "128"], ["21", "128"], ["137", "140"], ["143", "140"], ["21", "140"], ["140", "143"], ["21", "143"], ["149", "147"], ["149", "147"], ["182", "181"], ["182", "181"], ["21", "181"], ["201", "84"], ["108", "84"], ["21", "84"], ["86", "84"], ["86", "84"], ["52", "120"], ["87", "120"], ["101", "120"], ["21", "120"], ["52", "129"], ["120", "129"], ["119", "129"], ["21", "129"], ["157", "173"], ["21", "173"], ["183", "182"], ["183", "182"], ["183", "182"], ["183", "182"], ["183", "182"], ["195", "182"], ["195", "182"], ["84", "201"], ["21", "201"], ["68", "201"], ["199", "201"], ["106", "201"], ["183", "201"], ["87", "86"], ["87", "86"], ["87", "86"], ["87", "86"], ["101", "86"], ["101", "86"], ["84", "108"], ["21", "108"], ["68", "108"], ["199", "108"], ["106", "108"], ["52", "108"], ["87", "108"], ["117", "149"], ["173", "149"], ["21", "149"], ["126", "149"], ["177", "149"], ["156", "155"], ["156", "155"], ["21", "155"], ["157", "177"], ["21", "177"], ["87", "183"], ["157", "183"], ["21", "183"], ["46", "183"], ["87", "183"], ["157", "183"], ["117", "183"], ["173", "183"], ["87", "183"], ["157", "183"], ["52", "183"], ["157", "183"], ["120", "183"], ["21", "195"], ["169", "195"], ["119", "195"], ["183", "87"], ["21", "87"], ["46", "87"], ["183", "87"], ["52", "87"], ["183", "87"], ["108", "87"], ["183", "87"], ["21", "101"], ["41", "101"], ["195", "101"], ["117", "150"], ["173", "150"], ["21", "150"], ["126", "150"], ["177", "150"], ["157", "156"], ["157", "156"], ["157", "156"], ["157", "156"], ["157", "156"], ["169", "156"], ["169", "156"], ["87", "157"], ["21", "157"], ["46", "157"], ["87", "157"], ["147", "157"], ["87", "157"], ["52", "157"], ["120", "157"], ["21", "169"], ["119", "169"], ["61", "68"], ["61", "73"], ["61", "64"], ["61", "76"], ["61", "206"], ["61", "61"], ["225", "230"], ["225", "225"], ["225", "228"], ["225", "233"], ["76", "98"], ["76", "84"], ["76", "95"], ["76", "92"], ["76", "76"], ["76", "87"], ["76", "101"], ["76", "79"], ["76", "86"], ["76", "89"], ["76", "83"], ["206", "215"], ["206", "209"], ["206", "210"], ["206", "216"], ["83", "120"], ["83", "192"], ["83", "128"], ["83", "185"], ["83", "189"], ["83", "119"], ["83", "121"], ["83", "129"], ["83", "181"], ["83", "195"], ["83", "137"], ["83", "130"], ["83", "182"], ["83", "108"], ["83", "111"], ["83", "183"], ["83", "106"], ["83", "140"], ["83", "126"], ["83", "117"], ["140", "169"], ["140", "163"], ["140", "149"], ["140", "150"], ["140", "155"], ["140", "166"], ["140", "157"], ["140", "159"], ["140", "140"], ["140", "143"], ["140", "147"], ["140", "156"], ["181", "201"], ["181", "199"], ["155", "173"], ["155", "177"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new FastScanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int r = nextInt())<SUB>4</SUB>>", "43": "<(nextInt,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,int[] x: int[])<SUB>5</SUB>>", "47": "<(IDENTIFIER,x,int[] x = nextIntArray(n))<SUB>5</SUB>>", "49": "<(IDENTIFIER,scan,nextIntArray(n))<SUB>5</SUB>>", "51": "<(LOCAL,double[] y: double[])<SUB>6</SUB>>", "53": "<(IDENTIFIER,y,double[] y = new double[n])<SUB>6</SUB>>", "55": "<(IDENTIFIER,n,new double[n])<SUB>6</SUB>>", "57": "<(LOCAL,int i: int)<SUB>7</SUB>>", "59": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "63": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "67": "<(LOCAL,double best: double)<SUB>8</SUB>>", "69": "<(IDENTIFIER,best,double best = 0)<SUB>8</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; i); j++),for (int j = 0; Some(j &lt; i); j++))<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "75": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "77": "<(IDENTIFIER,j,j &lt; i)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,j++)<SUB>9</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.lessEqualsThan,Math.abs(dist(x[i], y[j], x[j], y[j]) - 2 * r) &lt;= 1e-7)<SUB>10</SUB>>", "85": "<(IDENTIFIER,Math,abs(dist(x[i], y[j], x[j], y[j]) - 2 * r))<SUB>10</SUB>>", "87": "<(dist,dist(x[i], y[j], x[j], y[j]))<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>10</SUB>>", "91": "<(IDENTIFIER,i,dist(x[i], y[j], x[j], y[j]))<SUB>10</SUB>>", "93": "<(IDENTIFIER,y,dist(x[i], y[j], x[j], y[j]))<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>10</SUB>>", "97": "<(IDENTIFIER,j,dist(x[i], y[j], x[j], y[j]))<SUB>10</SUB>>", "99": "<(IDENTIFIER,y,dist(x[i], y[j], x[j], y[j]))<SUB>10</SUB>>", "101": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>10</SUB>>", "103": "<(IDENTIFIER,r,2 * r)<SUB>10</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "107": "<(IDENTIFIER,best,best = Math.max(best, y[j]))<SUB>11</SUB>>", "109": "<(IDENTIFIER,Math,Math.max(best, y[j]))<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>11</SUB>>", "113": "<(IDENTIFIER,j,Math.max(best, y[j]))<SUB>11</SUB>>", "115": "<(LOCAL,double lo: double)<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.assignment,double lo = y[j] - r - r)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.subtraction,y[j] - r - r)<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,y[j])<SUB>14</SUB>>", "123": "<(IDENTIFIER,j,y[j] - r)<SUB>14</SUB>>", "125": "<(IDENTIFIER,r,y[j] - r - r)<SUB>14</SUB>>", "127": "<(IDENTIFIER,hi,double hi = y[j] + r + r)<SUB>14</SUB>>", "129": "<(&lt;operator&gt;.addition,y[j] + r)<SUB>14</SUB>>", "131": "<(IDENTIFIER,y,y[j] + r)<SUB>14</SUB>>", "133": "<(IDENTIFIER,r,y[j] + r)<SUB>14</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int bs = 0; Some(bs &lt; 200); bs++),for (int bs = 0; Some(bs &lt; 200); bs++))<SUB>15</SUB>>", "137": "<(&lt;operator&gt;.assignment,int bs = 0)<SUB>15</SUB>>", "139": "<(LITERAL,0,int bs = 0)<SUB>15</SUB>>", "141": "<(IDENTIFIER,bs,bs &lt; 200)<SUB>15</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,bs++)<SUB>15</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "147": "<(&lt;operator&gt;.assignment,double mid = (lo + hi) / 2.0)<SUB>16</SUB>>", "149": "<(&lt;operator&gt;.division,(lo + hi) / 2.0)<SUB>16</SUB>>", "151": "<(IDENTIFIER,lo,lo + hi)<SUB>16</SUB>>", "153": "<(LITERAL,2.0,(lo + hi) / 2.0)<SUB>16</SUB>>", "155": "<(&lt;operator&gt;.lessEqualsThan,dist(x[i], mid, x[j], y[j]) - 2 * r &lt;= 1e-7)<SUB>17</SUB>>", "157": "<(dist,dist(x[i], mid, x[j], y[j]))<SUB>17</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>17</SUB>>", "161": "<(IDENTIFIER,i,dist(x[i], mid, x[j], y[j]))<SUB>17</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>17</SUB>>", "165": "<(IDENTIFIER,j,dist(x[i], mid, x[j], y[j]))<SUB>17</SUB>>", "167": "<(IDENTIFIER,y,dist(x[i], mid, x[j], y[j]))<SUB>17</SUB>>", "169": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>17</SUB>>", "171": "<(IDENTIFIER,r,2 * r)<SUB>17</SUB>>", "173": "<(&lt;operator&gt;.assignment,lo = mid)<SUB>17</SUB>>", "175": "<(IDENTIFIER,mid,lo = mid)<SUB>17</SUB>>", "177": "<(&lt;operator&gt;.assignment,hi = mid)<SUB>18</SUB>>", "179": "<(IDENTIFIER,mid,hi = mid)<SUB>18</SUB>>", "181": "<(&lt;operator&gt;.lessEqualsThan,dist(x[i], lo, x[j], y[j]) - 2 * r &lt;= 1e-7)<SUB>20</SUB>>", "183": "<(dist,dist(x[i], lo, x[j], y[j]))<SUB>20</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,x[i])<SUB>20</SUB>>", "187": "<(IDENTIFIER,i,dist(x[i], lo, x[j], y[j]))<SUB>20</SUB>>", "189": "<(&lt;operator&gt;.indexAccess,x[j])<SUB>20</SUB>>", "191": "<(IDENTIFIER,j,dist(x[i], lo, x[j], y[j]))<SUB>20</SUB>>", "193": "<(IDENTIFIER,y,dist(x[i], lo, x[j], y[j]))<SUB>20</SUB>>", "195": "<(&lt;operator&gt;.multiplication,2 * r)<SUB>20</SUB>>", "197": "<(IDENTIFIER,r,2 * r)<SUB>20</SUB>>", "199": "<(&lt;operator&gt;.assignment,best = Math.max(best, lo))<SUB>20</SUB>>", "201": "<(max,Math.max(best, lo))<SUB>20</SUB>>", "203": "<(IDENTIFIER,best,Math.max(best, lo))<SUB>20</SUB>>", "205": "<(CONTROL_STRUCTURE,if (best == 0),if (best == 0))<SUB>22</SUB>>", "207": "<(IDENTIFIER,best,best == 0)<SUB>22</SUB>>", "209": "<(&lt;operator&gt;.assignment,y[i] = r)<SUB>22</SUB>>", "211": "<(IDENTIFIER,y,y[i] = r)<SUB>22</SUB>>", "213": "<(IDENTIFIER,r,y[i] = r)<SUB>22</SUB>>", "215": "<(&lt;operator&gt;.assignment,y[i] = best)<SUB>23</SUB>>", "217": "<(IDENTIFIER,y,y[i] = best)<SUB>23</SUB>>", "219": "<(IDENTIFIER,best,y[i] = best)<SUB>23</SUB>>", "221": "<(LOCAL,int i: int)<SUB>25</SUB>>", "223": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "225": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>25</SUB>>", "227": "<(IDENTIFIER,n,i &lt; n)<SUB>25</SUB>>", "229": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "231": "<(IDENTIFIER,out,printf(&quot;%.6f &quot;, y[i]))<SUB>25</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,y[i])<SUB>25</SUB>>", "235": "<(IDENTIFIER,i,printf(&quot;%.6f &quot;, y[i]))<SUB>25</SUB>>", "237": "<(IDENTIFIER,out,close())<SUB>26</SUB>>", "239": "<(MODIFIER,STATIC)>"}}