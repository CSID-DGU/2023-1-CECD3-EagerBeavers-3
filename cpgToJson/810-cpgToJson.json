{"edges": [["19", "21"], ["19", "187"], ["19", "188"], ["19", "189"], ["21", "22"], ["21", "23"], ["21", "27"], ["21", "31"], ["21", "40"], ["21", "80"], ["21", "81"], ["21", "85"], ["21", "86"], ["21", "89"], ["21", "4"], ["21", "112"], ["21", "115"], ["21", "119"], ["21", "120"], ["21", "124"], ["21", "125"], ["21", "129"], ["21", "130"], ["21", "133"], ["21", "177"], ["23", "24"], ["23", "25"], ["25", "26"], ["27", "28"], ["27", "29"], ["27", "30"], ["31", "32"], ["31", "35"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "39"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "50"], ["40", "52"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["52", "53"], ["52", "59"], ["53", "54"], ["53", "58"], ["54", "55"], ["55", "56"], ["55", "57"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "71"], ["59", "73"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "79"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["89", "94"], ["89", "99"], ["89", "101"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["101", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "111"], ["107", "108"], ["107", "109"], ["109", "110"], ["112", "113"], ["112", "114"], ["115", "3"], ["115", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["122", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["133", "138"], ["133", "143"], ["133", "145"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["143", "144"], ["145", "146"], ["146", "147"], ["146", "148"], ["146", "151"], ["146", "154"], ["146", "156"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["154", "155"], ["156", "157"], ["157", "158"], ["157", "173"], ["158", "159"], ["158", "170"], ["159", "160"], ["159", "169"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "176"], ["174", "175"], ["177", "178"], ["177", "181"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "185"], ["181", "186"], ["182", "183"], ["182", "184"], ["23", "27"], ["27", "32"], ["31", "42"], ["81", "86"], ["86", "91"], ["112", "118"], ["115", "122"], ["120", "127"], ["125", "130"], ["130", "135"], ["177", "189"], ["25", "23"], ["32", "36"], ["35", "31"], ["42", "49"], ["45", "55"], ["45", "83"], ["50", "49"], ["83", "81"], ["91", "98"], ["94", "103"], ["94", "114"], ["99", "98"], ["114", "112"], ["116", "115"], ["122", "120"], ["127", "125"], ["135", "139"], ["138", "148"], ["138", "180"], ["143", "139"], ["178", "182"], ["181", "177"], ["36", "35"], ["47", "45"], ["96", "94"], ["118", "116"], ["139", "138"], ["180", "178"], ["182", "181"], ["49", "47"], ["54", "50"], ["54", "61"], ["61", "65"], ["64", "76"], ["64", "50"], ["71", "65"], ["73", "71"], ["98", "96"], ["103", "109"], ["103", "99"], ["106", "99"], ["148", "151"], ["151", "161"], ["151", "143"], ["154", "151"], ["55", "54"], ["65", "70"], ["68", "64"], ["74", "73"], ["107", "106"], ["70", "68"], ["76", "74"], ["109", "107"], ["158", "174"], ["158", "154"], ["159", "170"], ["170", "158"], ["174", "143"], ["160", "159"], ["161", "166"], ["164", "160"], ["166", "164"], ["19", "25"], ["20", "189"], ["23", "189"], ["23", "189"], ["27", "189"], ["27", "189"], ["31", "189"], ["35", "189"], ["31", "189"], ["31", "189"], ["42", "189"], ["81", "189"], ["81", "189"], ["81", "189"], ["86", "189"], ["86", "189"], ["91", "189"], ["94", "189"], ["94", "189"], ["94", "189"], ["112", "189"], ["115", "189"], ["115", "189"], ["120", "189"], ["127", "189"], ["125", "189"], ["125", "189"], ["130", "189"], ["135", "189"], ["135", "189"], ["138", "189"], ["138", "189"], ["138", "189"], ["177", "189"], ["182", "189"], ["182", "189"], ["181", "189"], ["177", "189"], ["148", "189"], ["151", "189"], ["151", "189"], ["160", "189"], ["166", "189"], ["160", "189"], ["159", "189"], ["158", "189"], ["158", "189"], ["154", "189"], ["174", "189"], ["143", "189"], ["143", "189"], ["109", "189"], ["106", "189"], ["106", "189"], ["99", "189"], ["54", "189"], ["54", "189"], ["61", "189"], ["64", "189"], ["64", "189"], ["73", "189"], ["73", "189"], ["71", "189"], ["50", "189"], ["27", "189"], ["19", "20"], ["25", "23"], ["35", "31"], ["19", "31"], ["83", "81"], ["19", "86"], ["19", "112"], ["122", "120"], ["127", "125"], ["19", "130"], ["19", "27"], ["23", "27"], ["19", "42"], ["19", "91"], ["112", "115"], ["19", "115"], ["19", "135"], ["19", "177"], ["19", "25"], ["19", "35"], ["42", "45"], ["50", "45"], ["19", "45"], ["27", "45"], ["64", "45"], ["45", "50"], ["65", "50"], ["19", "50"], ["19", "83"], ["91", "94"], ["99", "94"], ["19", "94"], ["27", "94"], ["45", "94"], ["94", "99"], ["19", "99"], ["115", "122"], ["19", "122"], ["122", "127"], ["19", "127"], ["81", "138"], ["158", "138"], ["120", "138"], ["19", "138"], ["151", "143"], ["19", "143"], ["19", "181"], ["19", "61"], ["19", "73"], ["94", "106"], ["19", "106"], ["19", "148"], ["130", "182"], ["174", "182"], ["19", "182"], ["125", "182"], ["27", "54"], ["65", "64"], ["65", "64"], ["27", "64"], ["45", "64"], ["76", "71"], ["19", "71"], ["148", "151"], ["154", "151"], ["19", "151"], ["135", "151"], ["143", "151"], ["19", "154"], ["151", "154"], ["45", "65"], ["76", "65"], ["19", "65"], ["61", "65"], ["71", "65"], ["65", "76"], ["19", "76"], ["65", "76"], ["86", "109"], ["19", "109"], ["81", "158"], ["19", "158"], ["138", "158"], ["81", "159"], ["19", "159"], ["130", "174"], ["19", "174"], ["81", "160"], ["151", "166"], ["19", "166"], ["45", "47"], ["45", "49"], ["45", "45"], ["45", "50"], ["45", "54"], ["45", "55"], ["94", "94"], ["94", "96"], ["94", "98"], ["94", "99"], ["94", "103"], ["138", "151"], ["138", "138"], ["138", "148"], ["138", "143"], ["138", "139"], ["54", "68"], ["54", "64"], ["54", "65"], ["54", "61"], ["54", "70"], ["64", "68"], ["64", "73"], ["64", "64"], ["64", "74"], ["64", "76"], ["64", "65"], ["64", "71"], ["64", "70"], ["103", "107"], ["103", "106"], ["103", "109"], ["151", "160"], ["151", "161"], ["151", "166"], ["151", "170"], ["151", "159"], ["151", "164"], ["151", "158"], ["158", "154"], ["158", "151"], ["158", "174"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "23": "<(&lt;operator&gt;.assignment,boolean[] b = new boolean[11000])<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.alloc,new boolean[11000])>", "27": "<(fill,fill(b, true))<SUB>4</SUB>>", "29": "<(IDENTIFIER,b,fill(b, true))<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.assignment,b[0] = b[1] = false)<SUB>5</SUB>>", "33": "<(IDENTIFIER,b,b[0] = b[1] = false)<SUB>5</SUB>>", "35": "<(&lt;operator&gt;.assignment,b[1] = false)<SUB>5</SUB>>", "37": "<(IDENTIFIER,b,b[1] = false)<SUB>5</SUB>>", "39": "<(LITERAL,false,b[1] = false)<SUB>5</SUB>>", "41": "<(LOCAL,int i: int)<SUB>7</SUB>>", "43": "<(IDENTIFIER,i,int i = 2)<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; b.length)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.fieldAccess,b.length)<SUB>7</SUB>>", "49": "<(FIELD_IDENTIFIER,length,length)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "53": "<(CONTROL_STRUCTURE,if (!b[i]),if (!b[i]))<SUB>9</SUB>>", "55": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,!b[i])<SUB>9</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int j = 2; Some(i * j &lt; b.length); j++),for (int j = 2; Some(i * j &lt; b.length); j++))<SUB>12</SUB>>", "61": "<(&lt;operator&gt;.assignment,int j = 2)<SUB>12</SUB>>", "63": "<(LITERAL,2,int j = 2)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.multiplication,i * j)<SUB>12</SUB>>", "67": "<(IDENTIFIER,j,i * j)<SUB>12</SUB>>", "69": "<(IDENTIFIER,b,i * j &lt; b.length)<SUB>12</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,b[i * j] = false)<SUB>13</SUB>>", "75": "<(IDENTIFIER,b,b[i * j] = false)<SUB>13</SUB>>", "77": "<(IDENTIFIER,i,i * j)<SUB>13</SUB>>", "79": "<(LITERAL,false,b[i * j] = false)<SUB>13</SUB>>", "81": "<(&lt;operator&gt;.assignment,int[] p = new int[11000])<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.alloc,new int[11000])>", "85": "<(LOCAL,int pn: int)<SUB>17</SUB>>", "87": "<(IDENTIFIER,pn,int pn = 0)<SUB>17</SUB>>", "89": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; b.length); i++),for (int i = 0; Some(i &lt; b.length); i++))<SUB>19</SUB>>", "91": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "93": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "95": "<(IDENTIFIER,i,i &lt; b.length)<SUB>19</SUB>>", "97": "<(IDENTIFIER,b,i &lt; b.length)<SUB>19</SUB>>", "99": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,b[i])<SUB>21</SUB>>", "105": "<(IDENTIFIER,i,if (b[i]))<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,p[pn++])<SUB>22</SUB>>", "109": "<(&lt;operator&gt;.postIncrement,pn++)<SUB>22</SUB>>", "111": "<(IDENTIFIER,i,p[pn++] = i)<SUB>22</SUB>>", "112": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>25</SUB>>", "114": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>25</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>25</SUB>>", "117": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>25</SUB>>", "119": "<(LOCAL,int n: int)<SUB>27</SUB>>", "121": "<(IDENTIFIER,n,int n = nextInt())<SUB>27</SUB>>", "123": "<(IDENTIFIER,scan,nextInt())<SUB>27</SUB>>", "125": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>28</SUB>>", "127": "<(nextInt,nextInt())<SUB>28</SUB>>", "129": "<(LOCAL,int rtn: int)<SUB>30</SUB>>", "131": "<(IDENTIFIER,rtn,int rtn = 0)<SUB>30</SUB>>", "133": "<(CONTROL_STRUCTURE,for (int j = 0; Some(p[j] &lt;= n); j++),for (int j = 0; Some(p[j] &lt;= n); j++))<SUB>33</SUB>>", "135": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>33</SUB>>", "137": "<(LITERAL,0,int j = 0)<SUB>33</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,p[j])<SUB>33</SUB>>", "141": "<(IDENTIFIER,j,p[j] &lt;= n)<SUB>33</SUB>>", "143": "<(&lt;operator&gt;.postIncrement,j++)<SUB>33</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "147": "<(LOCAL,int h: int)<SUB>36</SUB>>", "149": "<(IDENTIFIER,h,int h = 0)<SUB>36</SUB>>", "151": "<(&lt;operator&gt;.lessEqualsThan,h &lt;= j)<SUB>36</SUB>>", "153": "<(IDENTIFIER,j,h &lt;= j)<SUB>36</SUB>>", "155": "<(IDENTIFIER,h,h++)<SUB>36</SUB>>", "157": "<(CONTROL_STRUCTURE,if (p[h] + p[h + 1] + 1 == p[j]),if (p[h] + p[h + 1] + 1 == p[j]))<SUB>38</SUB>>", "159": "<(&lt;operator&gt;.addition,p[h] + p[h + 1] + 1)<SUB>38</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,p[h])<SUB>38</SUB>>", "163": "<(IDENTIFIER,h,p[h] + p[h + 1])<SUB>38</SUB>>", "165": "<(IDENTIFIER,p,p[h] + p[h + 1])<SUB>38</SUB>>", "167": "<(IDENTIFIER,h,h + 1)<SUB>38</SUB>>", "169": "<(LITERAL,1,p[h] + p[h + 1] + 1)<SUB>38</SUB>>", "171": "<(IDENTIFIER,p,p[h] + p[h + 1] + 1 == p[j])<SUB>38</SUB>>", "173": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "175": "<(IDENTIFIER,rtn,rtn++)<SUB>40</SUB>>", "177": "<(println,System.out.println(rtn &gt;= k ? &quot;YES&quot; : &quot;NO&quot;))<SUB>46</SUB>>", "179": "<(IDENTIFIER,System,System.out.println(rtn &gt;= k ? &quot;YES&quot; : &quot;NO&quot;))<SUB>46</SUB>>", "181": "<(&lt;operator&gt;.conditional,rtn &gt;= k ? &quot;YES&quot; : &quot;NO&quot;)<SUB>46</SUB>>", "183": "<(IDENTIFIER,rtn,rtn &gt;= k)<SUB>46</SUB>>", "185": "<(LITERAL,&quot;YES&quot;,rtn &gt;= k ? &quot;YES&quot; : &quot;NO&quot;)<SUB>46</SUB>>", "187": "<(MODIFIER,PUBLIC)>", "189": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}