{"edges": [["17", "18"], ["17", "19"], ["17", "188"], ["17", "189"], ["17", "190"], ["19", "20"], ["19", "23"], ["19", "35"], ["19", "38"], ["19", "57"], ["19", "58"], ["19", "63"], ["19", "186"], ["20", "21"], ["20", "22"], ["23", "24"], ["23", "25"], ["25", "26"], ["25", "29"], ["25", "34"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "44"], ["40", "56"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "50"], ["46", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["63", "64"], ["63", "65"], ["63", "68"], ["63", "71"], ["63", "73"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "79"], ["73", "80"], ["73", "84"], ["73", "101"], ["73", "102"], ["73", "105"], ["73", "140"], ["73", "141"], ["73", "145"], ["75", "76"], ["75", "77"], ["77", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["84", "85"], ["84", "86"], ["84", "89"], ["84", "92"], ["84", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["95", "96"], ["95", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "110"], ["105", "113"], ["105", "115"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["116", "117"], ["116", "118"], ["116", "123"], ["116", "126"], ["116", "128"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["126", "127"], ["128", "129"], ["129", "130"], ["129", "137"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["138", "139"], ["141", "142"], ["141", "143"], ["143", "144"], ["145", "146"], ["145", "150"], ["146", "147"], ["146", "149"], ["147", "148"], ["150", "151"], ["150", "152"], ["150", "156"], ["150", "157"], ["150", "161"], ["150", "162"], ["150", "167"], ["150", "176"], ["152", "153"], ["152", "154"], ["154", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "166"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "184"], ["178", "185"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["186", "187"], ["20", "28"], ["23", "37"], ["35", "43"], ["38", "62"], ["58", "65"], ["186", "190"], ["22", "20"], ["37", "35"], ["60", "58"], ["65", "68"], ["68", "77"], ["68", "186"], ["71", "68"], ["26", "33"], ["29", "23"], ["41", "49"], ["44", "38"], ["62", "60"], ["75", "82"], ["80", "86"], ["102", "107"], ["141", "147"], ["28", "26"], ["31", "29"], ["43", "41"], ["77", "75"], ["82", "80"], ["86", "89"], ["89", "96"], ["89", "102"], ["92", "89"], ["107", "110"], ["110", "120"], ["110", "143"], ["113", "110"], ["143", "141"], ["146", "154"], ["146", "71"], ["33", "31"], ["47", "54"], ["50", "44"], ["95", "92"], ["147", "146"], ["152", "159"], ["157", "164"], ["162", "172"], ["167", "180"], ["176", "147"], ["49", "47"], ["52", "50"], ["96", "99"], ["99", "95"], ["118", "123"], ["123", "131"], ["123", "113"], ["126", "123"], ["154", "152"], ["159", "157"], ["164", "162"], ["169", "167"], ["178", "176"], ["54", "52"], ["120", "118"], ["170", "169"], ["179", "178"], ["130", "138"], ["130", "126"], ["172", "170"], ["180", "179"], ["131", "134"], ["134", "130"], ["138", "126"], ["17", "22"], ["18", "190"], ["20", "190"], ["23", "190"], ["29", "190"], ["29", "190"], ["29", "190"], ["23", "190"], ["35", "190"], ["38", "190"], ["44", "190"], ["47", "190"], ["50", "190"], ["50", "190"], ["50", "190"], ["44", "190"], ["38", "190"], ["58", "190"], ["58", "190"], ["65", "190"], ["68", "190"], ["68", "190"], ["68", "190"], ["186", "190"], ["186", "190"], ["75", "190"], ["80", "190"], ["80", "190"], ["80", "190"], ["102", "190"], ["102", "190"], ["107", "190"], ["110", "190"], ["110", "190"], ["110", "190"], ["141", "190"], ["141", "190"], ["147", "190"], ["146", "190"], ["146", "190"], ["71", "190"], ["152", "190"], ["157", "190"], ["157", "190"], ["164", "190"], ["164", "190"], ["162", "190"], ["162", "190"], ["170", "190"], ["170", "190"], ["169", "190"], ["167", "190"], ["176", "190"], ["180", "190"], ["179", "190"], ["178", "190"], ["176", "190"], ["176", "190"], ["118", "190"], ["118", "190"], ["123", "190"], ["123", "190"], ["113", "190"], ["130", "190"], ["130", "190"], ["130", "190"], ["138", "190"], ["138", "190"], ["126", "190"], ["95", "190"], ["95", "190"], ["92", "190"], ["17", "18"], ["17", "20"], ["17", "35"], ["20", "23"], ["17", "23"], ["26", "23"], ["29", "23"], ["35", "38"], ["17", "38"], ["47", "38"], ["44", "38"], ["17", "65"], ["143", "186"], ["159", "186"], ["17", "186"], ["17", "26"], ["17", "34"], ["17", "41"], ["17", "56"], ["65", "68"], ["71", "68"], ["17", "68"], ["58", "68"], ["68", "71"], ["17", "71"], ["77", "75"], ["82", "80"], ["17", "102"], ["143", "141"], ["26", "29"], ["17", "29"], ["41", "44"], ["17", "44"], ["47", "44"], ["50", "44"], ["17", "86"], ["17", "107"], ["17", "47"], ["17", "55"], ["143", "77"], ["159", "77"], ["17", "77"], ["75", "82"], ["17", "82"], ["86", "89"], ["92", "89"], ["17", "89"], ["82", "89"], ["89", "92"], ["17", "92"], ["99", "95"], ["107", "110"], ["113", "110"], ["17", "110"], ["89", "110"], ["123", "110"], ["17", "113"], ["110", "113"], ["77", "143"], ["99", "143"], ["17", "143"], ["147", "146"], ["17", "146"], ["154", "152"], ["159", "157"], ["164", "162"], ["164", "162"], ["169", "167"], ["169", "167"], ["47", "50"], ["17", "50"], ["110", "118"], ["17", "118"], ["141", "147"], ["17", "147"], ["102", "167"], ["180", "167"], ["138", "167"], ["17", "167"], ["38", "176"], ["17", "176"], ["77", "99"], ["17", "99"], ["118", "123"], ["126", "123"], ["17", "123"], ["110", "123"], ["123", "126"], ["17", "126"], ["143", "154"], ["159", "154"], ["17", "154"], ["154", "159"], ["17", "159"], ["157", "164"], ["17", "164"], ["152", "164"], ["170", "169"], ["170", "169"], ["17", "169"], ["17", "178"], ["110", "120"], ["17", "120"], ["17", "170"], ["162", "170"], ["180", "179"], ["180", "179"], ["17", "179"], ["80", "130"], ["95", "130"], ["162", "172"], ["17", "172"], ["167", "180"], ["17", "180"], ["102", "138"], ["17", "138"], ["68", "107"], ["68", "68"], ["68", "77"], ["68", "75"], ["68", "146"], ["68", "102"], ["68", "80"], ["68", "86"], ["68", "141"], ["68", "89"], ["68", "82"], ["68", "143"], ["68", "71"], ["68", "147"], ["68", "110"], ["89", "96"], ["89", "95"], ["89", "92"], ["89", "89"], ["89", "99"], ["110", "120"], ["110", "113"], ["110", "118"], ["110", "123"], ["110", "110"], ["146", "167"], ["146", "154"], ["146", "146"], ["146", "169"], ["146", "179"], ["146", "178"], ["146", "162"], ["146", "170"], ["146", "152"], ["146", "164"], ["146", "180"], ["146", "157"], ["146", "159"], ["146", "176"], ["146", "147"], ["146", "172"], ["123", "131"], ["123", "134"], ["123", "130"], ["123", "123"], ["123", "126"], ["130", "138"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,br,br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "23": "<(&lt;init&gt;,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "27": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "29": "<(&lt;init&gt;,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>2</SUB>>", "33": "<(FIELD_IDENTIFIER,in,in)<SUB>2</SUB>>", "35": "<(&lt;operator&gt;.assignment,pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "39": "<(IDENTIFIER,pw,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "43": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>3</SUB>>", "45": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "47": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "49": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "53": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>3</SUB>>", "55": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "57": "<(LOCAL,int qq: int)<SUB>5</SUB>>", "59": "<(IDENTIFIER,qq,int qq = Integer.MAX_VALUE)<SUB>5</SUB>>", "61": "<(IDENTIFIER,Integer,int qq = Integer.MAX_VALUE)<SUB>5</SUB>>", "63": "<(CONTROL_STRUCTURE,for (int casenum = 1; Some(casenum &lt;= qq); casenum++),for (int casenum = 1; Some(casenum &lt;= qq); casenum++))<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,int casenum = 1)<SUB>7</SUB>>", "67": "<(LITERAL,1,int casenum = 1)<SUB>7</SUB>>", "69": "<(IDENTIFIER,casenum,casenum &lt;= qq)<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.postIncrement,casenum++)<SUB>7</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.assignment,int n = readInt())<SUB>8</SUB>>", "77": "<(readInt,readInt())<SUB>8</SUB>>", "79": "<(LOCAL,int[] l: int[])<SUB>9</SUB>>", "81": "<(IDENTIFIER,l,int[] l = new int[n])<SUB>9</SUB>>", "83": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "85": "<(LOCAL,int i: int)<SUB>10</SUB>>", "87": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "89": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "91": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "93": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,l[i] = readInt())<SUB>11</SUB>>", "97": "<(IDENTIFIER,l,l[i] = readInt())<SUB>11</SUB>>", "99": "<(readInt,readInt())<SUB>11</SUB>>", "101": "<(LOCAL,int ret: int)<SUB>13</SUB>>", "103": "<(IDENTIFIER,ret,int ret = 0)<SUB>13</SUB>>", "105": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "109": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "117": "<(LOCAL,int j: int)<SUB>15</SUB>>", "119": "<(IDENTIFIER,j,int j = i + 1)<SUB>15</SUB>>", "121": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>15</SUB>>", "125": "<(IDENTIFIER,n,j &lt; n)<SUB>15</SUB>>", "127": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "129": "<(CONTROL_STRUCTURE,if (l[i] &gt; l[j]),if (l[i] &gt; l[j]))<SUB>16</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,l[i])<SUB>16</SUB>>", "133": "<(IDENTIFIER,i,l[i] &gt; l[j])<SUB>16</SUB>>", "135": "<(IDENTIFIER,l,l[i] &gt; l[j])<SUB>16</SUB>>", "137": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "139": "<(IDENTIFIER,ret,ret++)<SUB>17</SUB>>", "141": "<(&lt;operator&gt;.assignment,int qqq = readInt())<SUB>21</SUB>>", "143": "<(readInt,readInt())<SUB>21</SUB>>", "145": "<(CONTROL_STRUCTURE,while (qqq-- &gt; 0),while (qqq-- &gt; 0))<SUB>22</SUB>>", "147": "<(&lt;operator&gt;.postDecrement,qqq--)<SUB>22</SUB>>", "149": "<(LITERAL,0,qqq-- &gt; 0)<SUB>22</SUB>>", "151": "<(LOCAL,int a: int)<SUB>23</SUB>>", "153": "<(IDENTIFIER,a,int a = readInt())<SUB>23</SUB>>", "155": "<(IDENTIFIER,this,readInt())<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.assignment,int b = readInt())<SUB>24</SUB>>", "159": "<(readInt,readInt())<SUB>24</SUB>>", "161": "<(LOCAL,int d: int)<SUB>25</SUB>>", "163": "<(IDENTIFIER,d,int d = b - a)<SUB>25</SUB>>", "165": "<(IDENTIFIER,b,b - a)<SUB>25</SUB>>", "167": "<(&lt;operators&gt;.assignmentXor,ret ^= d * (d + 1) / 2)<SUB>26</SUB>>", "169": "<(&lt;operator&gt;.division,d * (d + 1) / 2)<SUB>26</SUB>>", "171": "<(IDENTIFIER,d,d * (d + 1))<SUB>26</SUB>>", "173": "<(IDENTIFIER,d,d + 1)<SUB>26</SUB>>", "175": "<(LITERAL,2,d * (d + 1) / 2)<SUB>26</SUB>>", "177": "<(IDENTIFIER,pw,println(ret % 2 == 0 ? &quot;even&quot; : &quot;odd&quot;))<SUB>27</SUB>>", "179": "<(&lt;operator&gt;.equals,ret % 2 == 0)<SUB>27</SUB>>", "181": "<(IDENTIFIER,ret,ret % 2)<SUB>27</SUB>>", "183": "<(LITERAL,0,ret % 2 == 0)<SUB>27</SUB>>", "185": "<(LITERAL,&quot;odd&quot;,ret % 2 == 0 ? &quot;even&quot; : &quot;odd&quot;)<SUB>27</SUB>>", "187": "<(IDENTIFIER,this,exitImmediately())<SUB>30</SUB>>", "189": "<(MODIFIER,STATIC)>"}}