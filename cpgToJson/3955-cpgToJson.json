{"edges": [["21", "22"], ["21", "23"], ["21", "412"], ["21", "413"], ["21", "414"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "40"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "54"], ["23", "84"], ["23", "85"], ["23", "86"], ["23", "91"], ["23", "96"], ["23", "97"], ["23", "103"], ["23", "177"], ["23", "178"], ["23", "182"], ["23", "225"], ["23", "226"], ["23", "229"], ["23", "280"], ["23", "394"], ["23", "410"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "80"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "83"], ["81", "82"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "113"], ["103", "115"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["115", "117"], ["115", "120"], ["115", "168"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "138"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["138", "145"], ["138", "148"], ["138", "150"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "165"], ["151", "152"], ["151", "159"], ["152", "153"], ["152", "158"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "180"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "187"], ["182", "190"], ["182", "192"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "220"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["197", "202"], ["197", "205"], ["197", "207"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["205", "206"], ["207", "208"], ["207", "215"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "224"], ["221", "222"], ["221", "223"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "231"], ["229", "234"], ["229", "239"], ["229", "241"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["239", "240"], ["241", "242"], ["241", "243"], ["241", "246"], ["241", "249"], ["241", "251"], ["243", "244"], ["243", "245"], ["246", "247"], ["246", "248"], ["249", "250"], ["251", "252"], ["251", "259"], ["252", "253"], ["252", "258"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["261", "264"], ["264", "265"], ["264", "268"], ["265", "266"], ["265", "267"], ["268", "269"], ["268", "270"], ["268", "273"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "277"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["280", "285"], ["280", "290"], ["280", "292"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["290", "291"], ["292", "293"], ["292", "294"], ["292", "301"], ["292", "324"], ["292", "325"], ["292", "328"], ["292", "380"], ["294", "295"], ["294", "296"], ["296", "297"], ["296", "300"], ["297", "298"], ["297", "299"], ["301", "302"], ["301", "303"], ["301", "306"], ["301", "309"], ["301", "311"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["309", "310"], ["311", "312"], ["311", "319"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["319", "320"], ["319", "321"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "327"], ["328", "329"], ["328", "330"], ["328", "333"], ["328", "336"], ["328", "338"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "335"], ["336", "337"], ["338", "339"], ["338", "346"], ["339", "340"], ["339", "345"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["346", "347"], ["346", "348"], ["346", "353"], ["346", "356"], ["346", "358"], ["348", "349"], ["348", "350"], ["350", "351"], ["350", "352"], ["353", "354"], ["353", "355"], ["356", "357"], ["358", "359"], ["358", "377"], ["359", "360"], ["359", "367"], ["360", "361"], ["360", "366"], ["361", "362"], ["361", "363"], ["363", "364"], ["363", "365"], ["367", "368"], ["368", "369"], ["368", "374"], ["369", "370"], ["369", "371"], ["371", "372"], ["371", "373"], ["374", "375"], ["374", "376"], ["377", "378"], ["377", "379"], ["380", "381"], ["380", "382"], ["382", "383"], ["382", "384"], ["384", "385"], ["384", "386"], ["384", "387"], ["387", "388"], ["387", "391"], ["388", "389"], ["388", "390"], ["391", "392"], ["391", "393"], ["394", "395"], ["394", "396"], ["394", "397"], ["397", "398"], ["397", "407"], ["398", "399"], ["398", "404"], ["399", "400"], ["399", "403"], ["400", "401"], ["400", "402"], ["404", "405"], ["404", "406"], ["407", "408"], ["407", "409"], ["410", "411"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "42"], ["40", "46"], ["44", "51"], ["49", "56"], ["86", "93"], ["91", "100"], ["97", "105"], ["178", "184"], ["226", "231"], ["394", "410"], ["410", "414"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["42", "40"], ["46", "44"], ["51", "49"], ["56", "59"], ["59", "66"], ["59", "88"], ["62", "59"], ["88", "86"], ["93", "91"], ["99", "97"], ["105", "110"], ["108", "117"], ["108", "180"], ["113", "110"], ["180", "178"], ["184", "187"], ["187", "194"], ["187", "226"], ["190", "187"], ["231", "236"], ["234", "243"], ["234", "282"], ["239", "236"], ["282", "287"], ["285", "297"], ["285", "400"], ["290", "287"], ["397", "394"], ["30", "28"], ["37", "35"], ["66", "69"], ["69", "76"], ["69", "62"], ["72", "69"], ["74", "72"], ["100", "99"], ["110", "108"], ["117", "122"], ["194", "199"], ["220", "190"], ["236", "234"], ["243", "246"], ["246", "255"], ["246", "239"], ["249", "246"], ["287", "285"], ["294", "303"], ["325", "330"], ["398", "407"], ["407", "397"], ["75", "81"], ["80", "74"], ["122", "125"], ["125", "169"], ["125", "134"], ["128", "125"], ["169", "171"], ["169", "113"], ["170", "113"], ["199", "202"], ["202", "211"], ["202", "221"], ["205", "202"], ["221", "220"], ["252", "265"], ["252", "249"], ["259", "249"], ["296", "294"], ["303", "306"], ["306", "315"], ["306", "325"], ["309", "306"], ["330", "333"], ["333", "381"], ["333", "342"], ["336", "333"], ["381", "388"], ["381", "290"], ["382", "290"], ["399", "404"], ["404", "398"], ["76", "75"], ["81", "80"], ["131", "142"], ["131", "128"], ["171", "174"], ["174", "170"], ["208", "217"], ["208", "205"], ["215", "205"], ["253", "252"], ["261", "259"], ["297", "296"], ["312", "321"], ["312", "309"], ["319", "309"], ["339", "350"], ["339", "336"], ["384", "382"], ["400", "399"], ["132", "131"], ["140", "145"], ["145", "155"], ["145", "128"], ["148", "145"], ["209", "208"], ["217", "215"], ["255", "253"], ["264", "261"], ["313", "312"], ["321", "319"], ["340", "339"], ["348", "353"], ["353", "363"], ["353", "336"], ["356", "353"], ["387", "384"], ["134", "132"], ["142", "140"], ["151", "165"], ["151", "148"], ["165", "148"], ["211", "209"], ["265", "270"], ["268", "264"], ["315", "313"], ["342", "340"], ["350", "348"], ["359", "377"], ["359", "356"], ["377", "356"], ["388", "391"], ["391", "387"], ["152", "151"], ["152", "161"], ["159", "151"], ["270", "277"], ["273", "268"], ["360", "359"], ["360", "371"], ["367", "359"], ["153", "152"], ["160", "159"], ["275", "273"], ["361", "360"], ["368", "367"], ["155", "153"], ["161", "160"], ["277", "275"], ["363", "361"], ["369", "374"], ["374", "368"], ["371", "369"], ["21", "26"], ["22", "414"], ["24", "414"], ["27", "414"], ["27", "414"], ["31", "414"], ["34", "414"], ["34", "414"], ["40", "414"], ["46", "414"], ["44", "414"], ["44", "414"], ["49", "414"], ["49", "414"], ["49", "414"], ["59", "414"], ["86", "414"], ["86", "414"], ["93", "414"], ["91", "414"], ["91", "414"], ["97", "414"], ["97", "414"], ["97", "414"], ["178", "414"], ["178", "414"], ["178", "414"], ["184", "414"], ["187", "414"], ["187", "414"], ["226", "414"], ["236", "414"], ["234", "414"], ["234", "414"], ["282", "414"], ["285", "414"], ["287", "414"], ["285", "414"], ["285", "414"], ["399", "414"], ["399", "414"], ["398", "414"], ["398", "414"], ["397", "414"], ["407", "414"], ["397", "414"], ["394", "414"], ["394", "414"], ["410", "414"], ["410", "414"], ["294", "414"], ["297", "414"], ["296", "414"], ["294", "414"], ["294", "414"], ["303", "414"], ["306", "414"], ["306", "414"], ["325", "414"], ["325", "414"], ["330", "414"], ["333", "414"], ["333", "414"], ["384", "414"], ["388", "414"], ["387", "414"], ["387", "414"], ["384", "414"], ["382", "414"], ["382", "414"], ["290", "414"], ["340", "414"], ["339", "414"], ["339", "414"], ["348", "414"], ["348", "414"], ["353", "414"], ["353", "414"], ["336", "414"], ["361", "414"], ["360", "414"], ["359", "414"], ["374", "414"], ["367", "414"], ["359", "414"], ["359", "414"], ["377", "414"], ["377", "414"], ["356", "414"], ["313", "414"], ["312", "414"], ["312", "414"], ["319", "414"], ["319", "414"], ["309", "414"], ["243", "414"], ["246", "414"], ["246", "414"], ["239", "414"], ["253", "414"], ["252", "414"], ["252", "414"], ["261", "414"], ["264", "414"], ["275", "414"], ["268", "414"], ["264", "414"], ["261", "414"], ["259", "414"], ["259", "414"], ["249", "414"], ["194", "414"], ["199", "414"], ["202", "414"], ["202", "414"], ["220", "414"], ["220", "414"], ["190", "414"], ["215", "414"], ["205", "414"], ["117", "414"], ["117", "414"], ["125", "414"], ["170", "414"], ["174", "414"], ["170", "414"], ["170", "414"], ["113", "414"], ["132", "414"], ["131", "414"], ["131", "414"], ["140", "414"], ["140", "414"], ["145", "414"], ["145", "414"], ["128", "414"], ["153", "414"], ["152", "414"], ["151", "414"], ["159", "414"], ["151", "414"], ["151", "414"], ["165", "414"], ["165", "414"], ["148", "414"], ["66", "414"], ["69", "414"], ["69", "414"], ["62", "414"], ["74", "414"], ["81", "414"], ["80", "414"], ["74", "414"], ["74", "414"], ["72", "414"], ["21", "22"], ["21", "24"], ["21", "31"], ["42", "40"], ["46", "44"], ["51", "49"], ["88", "86"], ["88", "86"], ["93", "91"], ["93", "91"], ["99", "97"], ["180", "178"], ["21", "226"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "56"], ["21", "105"], ["21", "184"], ["21", "231"], ["21", "282"], ["34", "394"], ["21", "394"], ["397", "394"], ["397", "394"], ["394", "410"], ["21", "410"], ["27", "42"], ["21", "42"], ["42", "46"], ["21", "46"], ["40", "51"], ["21", "51"], ["56", "59"], ["62", "59"], ["21", "59"], ["51", "59"], ["69", "59"], ["59", "62"], ["21", "62"], ["21", "66"], ["80", "74"], ["80", "74"], ["59", "88"], ["21", "88"], ["88", "93"], ["21", "93"], ["86", "93"], ["100", "99"], ["100", "99"], ["105", "108"], ["113", "108"], ["21", "108"], ["110", "108"], ["110", "108"], ["108", "113"], ["174", "113"], ["132", "113"], ["153", "113"], ["21", "113"], ["21", "117"], ["91", "180"], ["21", "180"], ["184", "187"], ["190", "187"], ["21", "187"], ["180", "187"], ["187", "190"], ["21", "190"], ["21", "194"], ["194", "220"], ["215", "220"], ["21", "220"], ["231", "234"], ["239", "234"], ["21", "234"], ["236", "234"], ["236", "234"], ["234", "239"], ["253", "239"], ["275", "239"], ["21", "239"], ["21", "243"], ["282", "285"], ["290", "285"], ["21", "285"], ["287", "285"], ["287", "285"], ["285", "290"], ["388", "290"], ["340", "290"], ["361", "290"], ["313", "290"], ["21", "290"], ["296", "294"], ["296", "294"], ["21", "325"], ["398", "397"], ["398", "397"], ["407", "397"], ["407", "397"], ["66", "69"], ["72", "69"], ["21", "69"], ["59", "69"], ["69", "72"], ["21", "72"], ["21", "100"], ["93", "100"], ["21", "110"], ["100", "110"], ["125", "110"], ["21", "122"], ["21", "169"], ["174", "170"], ["174", "170"], ["21", "199"], ["21", "236"], ["110", "236"], ["246", "236"], ["202", "236"], ["243", "246"], ["249", "246"], ["21", "246"], ["236", "246"], ["255", "249"], ["277", "249"], ["21", "249"], ["261", "259"], ["261", "259"], ["261", "259"], ["21", "287"], ["187", "287"], ["333", "287"], ["21", "303"], ["21", "330"], ["21", "381"], ["384", "382"], ["384", "382"], ["384", "382"], ["399", "398"], ["399", "398"], ["404", "398"], ["404", "398"], ["21", "407"], ["404", "407"], ["81", "80"], ["21", "80"], ["122", "125"], ["128", "125"], ["21", "125"], ["110", "125"], ["145", "125"], ["134", "128"], ["21", "128"], ["199", "202"], ["205", "202"], ["21", "202"], ["110", "202"], ["202", "205"], ["217", "205"], ["21", "205"], ["217", "215"], ["217", "215"], ["253", "252"], ["253", "252"], ["21", "252"], ["297", "296"], ["297", "296"], ["21", "296"], ["303", "306"], ["309", "306"], ["21", "306"], ["287", "306"], ["315", "309"], ["21", "309"], ["178", "319"], ["330", "333"], ["336", "333"], ["21", "333"], ["306", "333"], ["353", "333"], ["342", "336"], ["21", "336"], ["400", "399"], ["400", "399"], ["21", "399"], ["226", "404"], ["382", "404"], ["259", "404"], ["21", "404"], ["46", "81"], ["21", "81"], ["132", "131"], ["132", "131"], ["21", "131"], ["134", "140"], ["21", "140"], ["21", "174"], ["108", "174"], ["132", "174"], ["153", "174"], ["194", "215"], ["21", "215"], ["234", "253"], ["275", "253"], ["21", "253"], ["255", "253"], ["255", "253"], ["268", "261"], ["21", "261"], ["226", "261"], ["259", "261"], ["264", "261"], ["268", "261"], ["268", "261"], ["21", "297"], ["236", "297"], ["313", "312"], ["313", "312"], ["21", "312"], ["294", "319"], ["21", "319"], ["340", "339"], ["340", "339"], ["21", "339"], ["342", "348"], ["21", "348"], ["261", "384"], ["21", "384"], ["226", "384"], ["382", "384"], ["259", "384"], ["388", "384"], ["388", "384"], ["97", "384"], ["44", "400"], ["21", "400"], ["108", "132"], ["153", "132"], ["21", "132"], ["134", "132"], ["134", "132"], ["140", "145"], ["148", "145"], ["21", "145"], ["125", "145"], ["155", "148"], ["21", "148"], ["21", "165"], ["21", "217"], ["202", "217"], ["21", "255"], ["246", "255"], ["268", "264"], ["268", "264"], ["268", "264"], ["285", "313"], ["21", "313"], ["315", "313"], ["315", "313"], ["285", "340"], ["361", "340"], ["313", "340"], ["21", "340"], ["342", "340"], ["342", "340"], ["348", "353"], ["356", "353"], ["21", "353"], ["333", "353"], ["363", "356"], ["21", "356"], ["21", "377"], ["388", "387"], ["388", "387"], ["97", "387"], ["21", "134"], ["125", "134"], ["134", "142"], ["21", "142"], ["152", "151"], ["152", "151"], ["159", "151"], ["187", "211"], ["21", "211"], ["202", "211"], ["261", "268"], ["21", "268"], ["97", "268"], ["264", "268"], ["170", "268"], ["21", "315"], ["306", "315"], ["21", "342"], ["333", "342"], ["342", "350"], ["21", "350"], ["360", "359"], ["360", "359"], ["367", "359"], ["174", "388"], ["21", "388"], ["285", "388"], ["340", "388"], ["361", "388"], ["313", "388"], ["153", "152"], ["153", "152"], ["21", "152"], ["74", "159"], ["361", "360"], ["361", "360"], ["21", "360"], ["132", "153"], ["21", "153"], ["155", "153"], ["155", "153"], ["253", "275"], ["21", "275"], ["277", "275"], ["277", "275"], ["340", "361"], ["21", "361"], ["363", "361"], ["363", "361"], ["21", "155"], ["145", "155"], ["21", "277"], ["255", "277"], ["21", "363"], ["353", "363"], ["363", "374"], ["21", "374"], ["297", "374"], ["21", "371"], ["342", "371"], ["297", "371"], ["59", "59"], ["59", "66"], ["59", "69"], ["59", "62"], ["108", "108"], ["108", "122"], ["108", "117"], ["108", "113"], ["108", "169"], ["108", "110"], ["108", "125"], ["187", "190"], ["187", "194"], ["187", "202"], ["187", "199"], ["187", "187"], ["187", "221"], ["187", "220"], ["234", "243"], ["234", "236"], ["234", "246"], ["234", "239"], ["234", "234"], ["285", "290"], ["285", "306"], ["285", "296"], ["285", "297"], ["285", "285"], ["285", "325"], ["285", "333"], ["285", "381"], ["285", "287"], ["285", "330"], ["285", "294"], ["285", "303"], ["69", "74"], ["69", "76"], ["69", "80"], ["69", "72"], ["69", "75"], ["69", "81"], ["69", "69"], ["246", "249"], ["246", "253"], ["246", "255"], ["246", "246"], ["246", "252"], ["125", "128"], ["125", "134"], ["125", "131"], ["125", "132"], ["125", "125"], ["169", "170"], ["169", "174"], ["169", "171"], ["202", "209"], ["202", "208"], ["202", "202"], ["202", "205"], ["202", "211"], ["252", "264"], ["252", "268"], ["252", "273"], ["252", "261"], ["252", "275"], ["252", "259"], ["252", "265"], ["252", "277"], ["252", "270"], ["306", "306"], ["306", "315"], ["306", "309"], ["306", "313"], ["306", "312"], ["333", "336"], ["333", "340"], ["333", "342"], ["333", "339"], ["333", "333"], ["381", "384"], ["381", "382"], ["381", "388"], ["381", "387"], ["381", "391"], ["131", "140"], ["131", "145"], ["131", "142"], ["208", "215"], ["208", "217"], ["312", "321"], ["312", "319"], ["339", "348"], ["339", "353"], ["339", "350"], ["145", "148"], ["145", "152"], ["145", "145"], ["145", "151"], ["145", "153"], ["145", "155"], ["353", "356"], ["353", "360"], ["353", "353"], ["353", "361"], ["353", "359"], ["353", "363"], ["151", "165"], ["359", "377"], ["152", "161"], ["152", "160"], ["152", "159"], ["360", "374"], ["360", "368"], ["360", "367"], ["360", "371"], ["360", "369"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>3</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>3</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>3</SUB>>", "39": "<(LOCAL,int k: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "45": "<(IDENTIFIER,k,int k = nextInt())<SUB>4</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,boolean[][] adj = new boolean[n][n])<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "53": "<(IDENTIFIER,n,new boolean[n][n])<SUB>5</SUB>>", "55": "<(LOCAL,int i: int)<SUB>6</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>6</SUB>>", "61": "<(IDENTIFIER,n,i &lt; n)<SUB>6</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "65": "<(LOCAL,int j: int)<SUB>7</SUB>>", "67": "<(IDENTIFIER,j,int j = 0)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>7</SUB>>", "71": "<(IDENTIFIER,n,j &lt; n)<SUB>7</SUB>>", "73": "<(IDENTIFIER,j,j++)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,adj[i][j])<SUB>8</SUB>>", "77": "<(IDENTIFIER,adj,adj[i][j] = sc.nextInt() == 1)<SUB>8</SUB>>", "79": "<(IDENTIFIER,j,adj[i][j] = sc.nextInt() == 1)<SUB>8</SUB>>", "81": "<(nextInt,nextInt())<SUB>8</SUB>>", "83": "<(LITERAL,1,sc.nextInt() == 1)<SUB>8</SUB>>", "85": "<(LOCAL,int n2: int)<SUB>9</SUB>>", "87": "<(IDENTIFIER,n1,int n1 = n / 2)<SUB>9</SUB>>", "89": "<(IDENTIFIER,n,n / 2)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.assignment,int n2 = n - n1)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.subtraction,n - n1)<SUB>9</SUB>>", "95": "<(IDENTIFIER,n1,n - n1)<SUB>9</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] clique = new int[1 &lt;&lt; n1])<SUB>10</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n1])>", "101": "<(LITERAL,1,1 &lt;&lt; n1)<SUB>10</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int msk = 1; Some(msk &lt; 1 &lt;&lt; n1); msk++),for (int msk = 1; Some(msk &lt; 1 &lt;&lt; n1); msk++))<SUB>11</SUB>>", "105": "<(&lt;operator&gt;.assignment,int msk = 1)<SUB>11</SUB>>", "107": "<(LITERAL,1,int msk = 1)<SUB>11</SUB>>", "109": "<(IDENTIFIER,msk,msk &lt; 1 &lt;&lt; n1)<SUB>11</SUB>>", "111": "<(LITERAL,1,1 &lt;&lt; n1)<SUB>11</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,msk++)<SUB>11</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "117": "<(&lt;operator&gt;.assignment,boolean ok = true)<SUB>13</SUB>>", "119": "<(LITERAL,true,boolean ok = true)<SUB>13</SUB>>", "121": "<(LOCAL,int i: int)<SUB>14</SUB>>", "123": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "125": "<(&lt;operator&gt;.lessThan,i &lt; n1)<SUB>14</SUB>>", "127": "<(IDENTIFIER,n1,i &lt; n1)<SUB>14</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.notEquals,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>14</SUB>>", "133": "<(IDENTIFIER,msk,msk &amp; 1 &lt;&lt; i)<SUB>14</SUB>>", "135": "<(LITERAL,1,1 &lt;&lt; i)<SUB>14</SUB>>", "137": "<(LITERAL,0,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>14</SUB>>", "139": "<(LOCAL,int j: int)<SUB>15</SUB>>", "141": "<(IDENTIFIER,j,int j = i + 1)<SUB>15</SUB>>", "143": "<(IDENTIFIER,i,i + 1)<SUB>15</SUB>>", "145": "<(&lt;operator&gt;.lessThan,j &lt; n1)<SUB>15</SUB>>", "147": "<(IDENTIFIER,n1,j &lt; n1)<SUB>15</SUB>>", "149": "<(IDENTIFIER,j,j++)<SUB>15</SUB>>", "151": "<(&lt;operator&gt;.logicalAnd,(msk &amp; 1 &lt;&lt; j) != 0 &amp;&amp; !adj[i][j])<SUB>16</SUB>>", "153": "<(&lt;operator&gt;.and,msk &amp; 1 &lt;&lt; j)<SUB>16</SUB>>", "155": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>16</SUB>>", "157": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>16</SUB>>", "159": "<(&lt;operator&gt;.logicalNot,!adj[i][j])<SUB>16</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,adj[i])<SUB>16</SUB>>", "163": "<(IDENTIFIER,i,!adj[i][j])<SUB>16</SUB>>", "165": "<(&lt;operator&gt;.assignment,ok = false)<SUB>17</SUB>>", "167": "<(LITERAL,false,ok = false)<SUB>17</SUB>>", "169": "<(IDENTIFIER,ok,if (ok))<SUB>18</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,clique[msk])<SUB>19</SUB>>", "173": "<(IDENTIFIER,msk,clique[msk] = Integer.bitCount(msk))<SUB>19</SUB>>", "175": "<(IDENTIFIER,Integer,Integer.bitCount(msk))<SUB>19</SUB>>", "177": "<(LOCAL,int[] edges: int[])<SUB>22</SUB>>", "179": "<(IDENTIFIER,edges,int[] edges = new int[n2])<SUB>22</SUB>>", "181": "<(IDENTIFIER,n2,new int[n2])<SUB>22</SUB>>", "183": "<(LOCAL,int i: int)<SUB>23</SUB>>", "185": "<(IDENTIFIER,i,int i = 0)<SUB>23</SUB>>", "187": "<(&lt;operator&gt;.lessThan,i &lt; n2)<SUB>23</SUB>>", "189": "<(IDENTIFIER,n2,i &lt; n2)<SUB>23</SUB>>", "191": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "193": "<(LOCAL,int msk: int)<SUB>25</SUB>>", "195": "<(IDENTIFIER,msk,int msk = 0)<SUB>25</SUB>>", "197": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n1); j++),for (int j = 0; Some(j &lt; n1); j++))<SUB>26</SUB>>", "199": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>26</SUB>>", "201": "<(LITERAL,0,int j = 0)<SUB>26</SUB>>", "203": "<(IDENTIFIER,j,j &lt; n1)<SUB>26</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,j++)<SUB>26</SUB>>", "207": "<(CONTROL_STRUCTURE,if (adj[i + n1][j]),if (adj[i + n1][j]))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,adj[i + n1])<SUB>27</SUB>>", "211": "<(&lt;operator&gt;.addition,i + n1)<SUB>27</SUB>>", "213": "<(IDENTIFIER,n1,i + n1)<SUB>27</SUB>>", "215": "<(&lt;operators&gt;.assignmentOr,msk |= 1 &lt;&lt; j)<SUB>28</SUB>>", "217": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>28</SUB>>", "219": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,edges[i])<SUB>29</SUB>>", "223": "<(IDENTIFIER,i,edges[i] = msk)<SUB>29</SUB>>", "225": "<(LOCAL,int max: int)<SUB>31</SUB>>", "227": "<(IDENTIFIER,max,int max = 0)<SUB>31</SUB>>", "229": "<(CONTROL_STRUCTURE,for (int msk = 1; Some(msk &lt; 1 &lt;&lt; n1); msk++),for (int msk = 1; Some(msk &lt; 1 &lt;&lt; n1); msk++))<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.assignment,int msk = 1)<SUB>32</SUB>>", "233": "<(LITERAL,1,int msk = 1)<SUB>32</SUB>>", "235": "<(IDENTIFIER,msk,msk &lt; 1 &lt;&lt; n1)<SUB>32</SUB>>", "237": "<(LITERAL,1,1 &lt;&lt; n1)<SUB>32</SUB>>", "239": "<(&lt;operator&gt;.postIncrement,msk++)<SUB>32</SUB>>", "241": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n1); i++),for (int i = 0; Some(i &lt; n1); i++))<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>33</SUB>>", "245": "<(LITERAL,0,int i = 0)<SUB>33</SUB>>", "247": "<(IDENTIFIER,i,i &lt; n1)<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.postIncrement,i++)<SUB>33</SUB>>", "251": "<(CONTROL_STRUCTURE,if ((msk &amp; 1 &lt;&lt; i) != 0),if ((msk &amp; 1 &lt;&lt; i) != 0))<SUB>34</SUB>>", "253": "<(&lt;operator&gt;.and,msk &amp; 1 &lt;&lt; i)<SUB>34</SUB>>", "255": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>34</SUB>>", "257": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>34</SUB>>", "259": "<(&lt;operator&gt;.assignment,max = Math.max(max, clique[msk] = Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)])))<SUB>35</SUB>>", "261": "<(max,Math.max(max, clique[msk] = Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)])))<SUB>35</SUB>>", "263": "<(IDENTIFIER,max,Math.max(max, clique[msk] = Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)])))<SUB>35</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,clique[msk])<SUB>35</SUB>>", "267": "<(IDENTIFIER,msk,clique[msk] = Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)]))<SUB>35</SUB>>", "269": "<(IDENTIFIER,Math,Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)]))<SUB>35</SUB>>", "271": "<(IDENTIFIER,clique,Math.max(clique[msk], clique[msk ^ (1 &lt;&lt; i)]))<SUB>35</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,clique[msk ^ (1 &lt;&lt; i)])<SUB>35</SUB>>", "275": "<(&lt;operator&gt;.xor,msk ^ (1 &lt;&lt; i))<SUB>35</SUB>>", "277": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>35</SUB>>", "279": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>35</SUB>>", "281": "<(LOCAL,int msk: int)<SUB>37</SUB>>", "283": "<(IDENTIFIER,msk,int msk = 1)<SUB>37</SUB>>", "285": "<(&lt;operator&gt;.lessThan,msk &lt; 1 &lt;&lt; n2)<SUB>37</SUB>>", "287": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n2)<SUB>37</SUB>>", "289": "<(IDENTIFIER,n2,1 &lt;&lt; n2)<SUB>37</SUB>>", "291": "<(IDENTIFIER,msk,msk++)<SUB>37</SUB>>", "293": "<(LOCAL,int all: int)<SUB>39</SUB>>", "295": "<(IDENTIFIER,all,int all = (1 &lt;&lt; n1) - 1)<SUB>39</SUB>>", "297": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n1)<SUB>39</SUB>>", "299": "<(IDENTIFIER,n1,1 &lt;&lt; n1)<SUB>39</SUB>>", "301": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n2); j++),for (int j = 0; Some(j &lt; n2); j++))<SUB>40</SUB>>", "303": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>40</SUB>>", "305": "<(LITERAL,0,int j = 0)<SUB>40</SUB>>", "307": "<(IDENTIFIER,j,j &lt; n2)<SUB>40</SUB>>", "309": "<(&lt;operator&gt;.postIncrement,j++)<SUB>40</SUB>>", "311": "<(CONTROL_STRUCTURE,if ((msk &amp; 1 &lt;&lt; j) != 0),if ((msk &amp; 1 &lt;&lt; j) != 0))<SUB>41</SUB>>", "313": "<(&lt;operator&gt;.and,msk &amp; 1 &lt;&lt; j)<SUB>41</SUB>>", "315": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>41</SUB>>", "317": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>41</SUB>>", "319": "<(&lt;operators&gt;.assignmentAnd,all &amp;= edges[j])<SUB>42</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,edges[j])<SUB>42</SUB>>", "323": "<(IDENTIFIER,j,all &amp;= edges[j])<SUB>42</SUB>>", "325": "<(&lt;operator&gt;.assignment,boolean ok = true)<SUB>43</SUB>>", "327": "<(LITERAL,true,boolean ok = true)<SUB>43</SUB>>", "329": "<(LOCAL,int i: int)<SUB>44</SUB>>", "331": "<(IDENTIFIER,i,int i = 0)<SUB>44</SUB>>", "333": "<(&lt;operator&gt;.lessThan,i &lt; n2)<SUB>44</SUB>>", "335": "<(IDENTIFIER,n2,i &lt; n2)<SUB>44</SUB>>", "337": "<(IDENTIFIER,i,i++)<SUB>44</SUB>>", "339": "<(&lt;operator&gt;.notEquals,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>44</SUB>>", "341": "<(IDENTIFIER,msk,msk &amp; 1 &lt;&lt; i)<SUB>44</SUB>>", "343": "<(LITERAL,1,1 &lt;&lt; i)<SUB>44</SUB>>", "345": "<(LITERAL,0,(msk &amp; 1 &lt;&lt; i) != 0)<SUB>44</SUB>>", "347": "<(LOCAL,int j: int)<SUB>45</SUB>>", "349": "<(IDENTIFIER,j,int j = i + 1)<SUB>45</SUB>>", "351": "<(IDENTIFIER,i,i + 1)<SUB>45</SUB>>", "353": "<(&lt;operator&gt;.lessThan,j &lt; n2)<SUB>45</SUB>>", "355": "<(IDENTIFIER,n2,j &lt; n2)<SUB>45</SUB>>", "357": "<(IDENTIFIER,j,j++)<SUB>45</SUB>>", "359": "<(&lt;operator&gt;.logicalAnd,(msk &amp; 1 &lt;&lt; j) != 0 &amp;&amp; !adj[i + n1][j + n1])<SUB>46</SUB>>", "361": "<(&lt;operator&gt;.and,msk &amp; 1 &lt;&lt; j)<SUB>46</SUB>>", "363": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>46</SUB>>", "365": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>46</SUB>>", "367": "<(&lt;operator&gt;.logicalNot,!adj[i + n1][j + n1])<SUB>46</SUB>>", "369": "<(&lt;operator&gt;.indexAccess,adj[i + n1])<SUB>46</SUB>>", "371": "<(&lt;operator&gt;.addition,i + n1)<SUB>46</SUB>>", "373": "<(IDENTIFIER,n1,i + n1)<SUB>46</SUB>>", "375": "<(IDENTIFIER,j,j + n1)<SUB>46</SUB>>", "377": "<(&lt;operator&gt;.assignment,ok = false)<SUB>47</SUB>>", "379": "<(LITERAL,false,ok = false)<SUB>47</SUB>>", "381": "<(IDENTIFIER,ok,if (ok))<SUB>48</SUB>>", "383": "<(IDENTIFIER,max,max = Math.max(max, Integer.bitCount(msk) + clique[all]))<SUB>49</SUB>>", "385": "<(IDENTIFIER,Math,Math.max(max, Integer.bitCount(msk) + clique[all]))<SUB>49</SUB>>", "387": "<(&lt;operator&gt;.addition,Integer.bitCount(msk) + clique[all])<SUB>49</SUB>>", "389": "<(IDENTIFIER,Integer,Integer.bitCount(msk))<SUB>49</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,clique[all])<SUB>49</SUB>>", "393": "<(IDENTIFIER,all,Integer.bitCount(msk) + clique[all])<SUB>49</SUB>>", "395": "<(IDENTIFIER,out,printf(&quot;%.9f\\n&quot;, k * 1.0 * k * (max - 1) / (2 * max)))<SUB>54</SUB>>", "397": "<(&lt;operator&gt;.division,k * 1.0 * k * (max - 1) / (2 * max))<SUB>54</SUB>>", "399": "<(&lt;operator&gt;.multiplication,k * 1.0 * k)<SUB>54</SUB>>", "401": "<(IDENTIFIER,k,k * 1.0)<SUB>54</SUB>>", "403": "<(IDENTIFIER,k,k * 1.0 * k)<SUB>54</SUB>>", "405": "<(IDENTIFIER,max,max - 1)<SUB>54</SUB>>", "407": "<(&lt;operator&gt;.multiplication,2 * max)<SUB>54</SUB>>", "409": "<(IDENTIFIER,max,2 * max)<SUB>54</SUB>>", "411": "<(IDENTIFIER,out,close())<SUB>56</SUB>>", "413": "<(MODIFIER,STATIC)>"}}