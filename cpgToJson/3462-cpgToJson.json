{"edges": [["19", "21"], ["19", "101"], ["19", "102"], ["19", "103"], ["21", "22"], ["22", "23"], ["22", "97"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "36"], ["23", "37"], ["23", "40"], ["23", "92"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "51"], ["40", "53"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "50"], ["48", "49"], ["51", "52"], ["53", "54"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "63"], ["54", "65"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["63", "64"], ["65", "66"], ["66", "67"], ["66", "86"], ["67", "68"], ["67", "81"], ["68", "69"], ["68", "75"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["71", "74"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["77", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["87", "88"], ["87", "89"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["98", "99"], ["99", "100"], ["24", "30"], ["27", "34"], ["32", "37"], ["37", "42"], ["92", "103"], ["92", "99"], ["26", "24"], ["28", "27"], ["34", "32"], ["42", "48"], ["45", "56"], ["45", "95"], ["51", "48"], ["93", "92"], ["99", "103"], ["30", "28"], ["47", "45"], ["95", "93"], ["48", "47"], ["56", "61"], ["59", "71"], ["59", "51"], ["63", "61"], ["61", "59"], ["67", "89"], ["67", "63"], ["68", "67"], ["68", "82"], ["81", "67"], ["87", "63"], ["69", "77"], ["75", "68"], ["82", "81"], ["89", "87"], ["71", "69"], ["77", "75"], ["19", "26"], ["20", "103"], ["24", "103"], ["27", "103"], ["27", "103"], ["34", "103"], ["32", "103"], ["32", "103"], ["37", "103"], ["42", "103"], ["45", "103"], ["48", "103"], ["47", "103"], ["45", "103"], ["45", "103"], ["92", "103"], ["92", "103"], ["92", "103"], ["56", "103"], ["59", "103"], ["59", "103"], ["51", "103"], ["68", "103"], ["75", "103"], ["68", "103"], ["67", "103"], ["81", "103"], ["67", "103"], ["67", "103"], ["87", "103"], ["87", "103"], ["63", "103"], ["99", "103"], ["19", "20"], ["19", "24"], ["34", "32"], ["19", "37"], ["19", "98"], ["24", "27"], ["19", "27"], ["19", "42"], ["37", "92"], ["81", "92"], ["87", "92"], ["19", "92"], ["27", "34"], ["19", "34"], ["42", "45"], ["51", "45"], ["19", "45"], ["47", "45"], ["47", "45"], ["77", "51"], ["82", "51"], ["89", "51"], ["19", "51"], ["45", "51"], ["19", "99"], ["48", "47"], ["19", "47"], ["45", "56"], ["19", "56"], ["32", "48"], ["61", "48"], ["19", "48"], ["56", "59"], ["63", "59"], ["19", "59"], ["61", "59"], ["77", "63"], ["82", "63"], ["89", "63"], ["19", "63"], ["48", "61"], ["75", "61"], ["19", "61"], ["68", "67"], ["68", "67"], ["81", "67"], ["81", "67"], ["89", "87"], ["89", "87"], ["69", "68"], ["69", "68"], ["75", "68"], ["75", "68"], ["82", "81"], ["82", "81"], ["37", "81"], ["87", "81"], ["19", "81"], ["71", "69"], ["19", "69"], ["71", "69"], ["71", "69"], ["77", "75"], ["19", "75"], ["77", "75"], ["77", "75"], ["77", "82"], ["19", "82"], ["77", "82"], ["77", "89"], ["82", "89"], ["19", "89"], ["77", "89"], ["82", "89"], ["61", "71"], ["19", "71"], ["77", "71"], ["82", "71"], ["89", "71"], ["45", "71"], ["59", "71"], ["69", "77"], ["19", "77"], ["71", "77"], ["71", "77"], ["92", "99"], ["45", "47"], ["45", "48"], ["45", "61"], ["45", "51"], ["45", "56"], ["45", "45"], ["45", "59"], ["59", "68"], ["59", "61"], ["59", "77"], ["59", "71"], ["59", "75"], ["59", "69"], ["59", "67"], ["59", "63"], ["59", "59"], ["67", "89"], ["67", "87"], ["68", "81"], ["68", "82"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(BLOCK,try,try)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scanner = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,scanner,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,String in: java.lang.String)<SUB>4</SUB>>", "33": "<(IDENTIFIER,in,String in = next())<SUB>4</SUB>>", "35": "<(IDENTIFIER,scanner,next())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int max = 0)<SUB>5</SUB>>", "39": "<(LITERAL,0,int max = 0)<SUB>5</SUB>>", "41": "<(LOCAL,int j: int)<SUB>6</SUB>>", "43": "<(IDENTIFIER,j,int j = 0)<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.lessThan,j &lt; in.length() - 1)<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.subtraction,in.length() - 1)<SUB>6</SUB>>", "49": "<(IDENTIFIER,in,in.length())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.postIncrement,j++)<SUB>6</SUB>>", "53": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "55": "<(LOCAL,int i: int)<SUB>7</SUB>>", "57": "<(IDENTIFIER,i,int i = j)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; in.length())<SUB>7</SUB>>", "61": "<(length,in.length())<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "65": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.logicalAnd,in.indexOf(in.substring(j, i)) != in.lastIndexOf(in.substring(j, i)) &amp;&amp; (i - j) &gt; max)<SUB>8</SUB>>", "69": "<(indexOf,in.indexOf(in.substring(j, i)))<SUB>8</SUB>>", "71": "<(substring,in.substring(j, i))<SUB>8</SUB>>", "73": "<(IDENTIFIER,j,in.substring(j, i))<SUB>8</SUB>>", "75": "<(lastIndexOf,in.lastIndexOf(in.substring(j, i)))<SUB>8</SUB>>", "77": "<(substring,in.substring(j, i))<SUB>8</SUB>>", "79": "<(IDENTIFIER,j,in.substring(j, i))<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.greaterThan,(i - j) &gt; max)<SUB>8</SUB>>", "83": "<(IDENTIFIER,i,i - j)<SUB>8</SUB>>", "85": "<(IDENTIFIER,max,(i - j) &gt; max)<SUB>8</SUB>>", "87": "<(&lt;operator&gt;.assignment,max = i - j)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.subtraction,i - j)<SUB>9</SUB>>", "91": "<(IDENTIFIER,j,i - j)<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "95": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "97": "<(BLOCK,catch,catch)>", "99": "<(printStackTrace,e.printStackTrace())<SUB>15</SUB>>", "101": "<(MODIFIER,PUBLIC)>", "103": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}