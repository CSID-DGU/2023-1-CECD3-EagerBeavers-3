{"edges": [["21", "22"], ["21", "23"], ["21", "98"], ["21", "99"], ["21", "100"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "48"], ["23", "49"], ["23", "57"], ["23", "62"], ["23", "65"], ["23", "71"], ["23", "74"], ["23", "76"], ["23", "79"], ["23", "86"], ["23", "93"], ["23", "96"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["51", "54"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["67", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "46"], ["44", "54"], ["49", "59"], ["57", "62"], ["62", "67"], ["65", "71"], ["71", "74"], ["74", "76"], ["76", "80"], ["93", "96"], ["96", "100"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["51", "49"], ["59", "57"], ["67", "65"], ["80", "83"], ["80", "87"], ["83", "87"], ["87", "90"], ["87", "93"], ["90", "93"], ["30", "28"], ["37", "35"], ["54", "51"], ["21", "26"], ["22", "100"], ["24", "100"], ["27", "100"], ["27", "100"], ["31", "100"], ["34", "100"], ["34", "100"], ["39", "100"], ["46", "100"], ["44", "100"], ["44", "100"], ["51", "100"], ["49", "100"], ["49", "100"], ["57", "100"], ["57", "100"], ["67", "100"], ["67", "100"], ["65", "100"], ["65", "100"], ["74", "100"], ["76", "100"], ["80", "100"], ["83", "100"], ["83", "100"], ["87", "100"], ["87", "100"], ["90", "100"], ["93", "100"], ["93", "100"], ["96", "100"], ["96", "100"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["46", "44"], ["51", "49"], ["51", "49"], ["51", "49"], ["59", "57"], ["59", "57"], ["59", "62"], ["21", "62"], ["67", "65"], ["67", "65"], ["67", "65"], ["21", "71"], ["59", "71"], ["21", "76"], ["59", "76"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["49", "57"], ["21", "57"], ["57", "62"], ["62", "65"], ["21", "65"], ["65", "71"], ["71", "74"], ["21", "74"], ["74", "76"], ["21", "83"], ["59", "83"], ["21", "90"], ["34", "93"], ["21", "93"], ["80", "93"], ["83", "93"], ["90", "93"], ["93", "96"], ["21", "96"], ["27", "41"], ["21", "41"], ["41", "46"], ["21", "46"], ["21", "51"], ["44", "51"], ["39", "59"], ["21", "59"], ["51", "67"], ["21", "67"], ["44", "67"], ["76", "80"], ["21", "80"], ["80", "83"], ["59", "87"], ["21", "87"], ["44", "54"], ["21", "54"], ["80", "83"], ["87", "90"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,long x = nextLong())<SUB>5</SUB>>", "41": "<(nextLong,nextLong())<SUB>5</SUB>>", "43": "<(LOCAL,long k: long)<SUB>6</SUB>>", "45": "<(IDENTIFIER,k,long k = nextLong())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextLong())<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.assignment,long ans = mod_exp(2, k + 1))<SUB>8</SUB>>", "51": "<(mod_exp,mod_exp(2, k + 1))<SUB>8</SUB>>", "53": "<(LITERAL,2,mod_exp(2, k + 1))<SUB>8</SUB>>", "55": "<(IDENTIFIER,k,k + 1)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.assignmentMultiplication,ans *= x % mod)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.modulo,x % mod)<SUB>9</SUB>>", "61": "<(IDENTIFIER,mod,x % mod)<SUB>9</SUB>>", "63": "<(IDENTIFIER,ans,ans %= mod)<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.assignmentMinus,ans -= mod_exp(2, k))<SUB>11</SUB>>", "67": "<(mod_exp,mod_exp(2, k))<SUB>11</SUB>>", "69": "<(LITERAL,2,mod_exp(2, k))<SUB>11</SUB>>", "71": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>12</SUB>>", "73": "<(IDENTIFIER,mod,ans %= mod)<SUB>12</SUB>>", "75": "<(IDENTIFIER,ans,ans++)<SUB>13</SUB>>", "77": "<(IDENTIFIER,ans,ans %= mod)<SUB>14</SUB>>", "79": "<(CONTROL_STRUCTURE,if (ans &lt; 0),if (ans &lt; 0))<SUB>15</SUB>>", "81": "<(IDENTIFIER,ans,ans &lt; 0)<SUB>15</SUB>>", "83": "<(&lt;operator&gt;.assignmentPlus,ans += mod)<SUB>16</SUB>>", "85": "<(IDENTIFIER,mod,ans += mod)<SUB>16</SUB>>", "87": "<(&lt;operator&gt;.equals,x == 0)<SUB>17</SUB>>", "89": "<(LITERAL,0,x == 0)<SUB>17</SUB>>", "91": "<(IDENTIFIER,ans,ans = 0)<SUB>18</SUB>>", "93": "<(println,println(ans))<SUB>19</SUB>>", "95": "<(IDENTIFIER,ans,println(ans))<SUB>19</SUB>>", "97": "<(IDENTIFIER,out,close())<SUB>20</SUB>>", "99": "<(MODIFIER,STATIC)>"}}