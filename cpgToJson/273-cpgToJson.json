{"edges": [["19", "20"], ["19", "21"], ["19", "284"], ["19", "285"], ["19", "286"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "50"], ["21", "51"], ["21", "57"], ["21", "58"], ["21", "64"], ["21", "65"], ["21", "68"], ["21", "275"], ["21", "282"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["34", "35"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "72"], ["68", "110"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "83"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "87"], ["83", "97"], ["84", "85"], ["84", "86"], ["87", "88"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["97", "98"], ["98", "99"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "105"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "120"], ["111", "121"], ["111", "130"], ["111", "131"], ["111", "146"], ["111", "223"], ["111", "224"], ["111", "239"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["146", "147"], ["146", "150"], ["146", "208"], ["147", "148"], ["147", "149"], ["150", "151"], ["150", "152"], ["150", "161"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "165"], ["161", "181"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["165", "176"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["181", "182"], ["182", "183"], ["182", "184"], ["182", "197"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "194"], ["189", "190"], ["189", "193"], ["190", "191"], ["190", "192"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["208", "209"], ["209", "210"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "222"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["224", "225"], ["224", "226"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "238"], ["233", "234"], ["233", "237"], ["234", "235"], ["234", "236"], ["239", "240"], ["239", "243"], ["239", "264"], ["240", "241"], ["240", "242"], ["243", "244"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "263"], ["247", "248"], ["247", "250"], ["248", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["264", "265"], ["265", "266"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["275", "276"], ["275", "279"], ["275", "280"], ["276", "277"], ["276", "278"], ["280", "281"], ["282", "283"], ["22", "28"], ["25", "33"], ["30", "40"], ["37", "47"], ["44", "54"], ["51", "61"], ["58", "65"], ["65", "69"], ["275", "282"], ["282", "286"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["46", "44"], ["53", "51"], ["60", "58"], ["69", "77"], ["69", "116"], ["276", "280"], ["280", "275"], ["28", "26"], ["33", "34"], ["34", "32"], ["40", "41"], ["41", "39"], ["47", "48"], ["48", "46"], ["54", "55"], ["55", "53"], ["61", "62"], ["62", "60"], ["74", "84"], ["278", "276"], ["76", "74"], ["84", "93"], ["84", "102"], ["113", "124"], ["121", "136"], ["131", "147"], ["224", "240"], ["77", "80"], ["80", "76"], ["88", "278"], ["115", "113"], ["123", "121"], ["133", "131"], ["147", "157"], ["147", "214"], ["226", "224"], ["240", "248"], ["240", "271"], ["90", "88"], ["99", "278"], ["116", "115"], ["124", "127"], ["127", "123"], ["134", "141"], ["139", "133"], ["152", "162"], ["227", "234"], ["232", "226"], ["244", "278"], ["92", "90"], ["101", "99"], ["136", "134"], ["140", "139"], ["154", "152"], ["162", "166"], ["162", "190"], ["210", "229"], ["229", "227"], ["233", "232"], ["246", "244"], ["266", "278"], ["93", "92"], ["102", "106"], ["105", "101"], ["141", "140"], ["156", "154"], ["166", "172"], ["169", "178"], ["176", "229"], ["212", "210"], ["234", "233"], ["247", "246"], ["268", "266"], ["106", "105"], ["157", "156"], ["171", "169"], ["178", "176"], ["184", "200"], ["197", "229"], ["213", "212"], ["248", "253"], ["250", "247"], ["270", "268"], ["172", "171"], ["186", "184"], ["199", "197"], ["214", "218"], ["217", "213"], ["252", "250"], ["271", "270"], ["188", "186"], ["200", "204"], ["203", "199"], ["218", "217"], ["253", "257"], ["256", "252"], ["189", "194"], ["194", "188"], ["204", "203"], ["257", "260"], ["260", "256"], ["190", "189"], ["19", "24"], ["20", "286"], ["22", "286"], ["25", "286"], ["25", "286"], ["30", "286"], ["37", "286"], ["44", "286"], ["51", "286"], ["51", "286"], ["60", "286"], ["58", "286"], ["58", "286"], ["65", "286"], ["69", "286"], ["69", "286"], ["115", "286"], ["113", "286"], ["113", "286"], ["123", "286"], ["123", "286"], ["121", "286"], ["121", "286"], ["134", "286"], ["133", "286"], ["131", "286"], ["131", "286"], ["147", "286"], ["147", "286"], ["147", "286"], ["213", "286"], ["218", "286"], ["218", "286"], ["217", "286"], ["217", "286"], ["213", "286"], ["212", "286"], ["210", "286"], ["210", "286"], ["154", "286"], ["156", "286"], ["154", "286"], ["152", "286"], ["152", "286"], ["162", "286"], ["162", "286"], ["186", "286"], ["190", "286"], ["189", "286"], ["188", "286"], ["194", "286"], ["188", "286"], ["186", "286"], ["184", "286"], ["184", "286"], ["199", "286"], ["204", "286"], ["203", "286"], ["199", "286"], ["197", "286"], ["197", "286"], ["166", "286"], ["172", "286"], ["171", "286"], ["169", "286"], ["169", "286"], ["178", "286"], ["176", "286"], ["176", "286"], ["227", "286"], ["229", "286"], ["227", "286"], ["226", "286"], ["234", "286"], ["233", "286"], ["233", "286"], ["232", "286"], ["226", "286"], ["224", "286"], ["224", "286"], ["240", "286"], ["240", "286"], ["268", "286"], ["271", "286"], ["271", "286"], ["270", "286"], ["270", "286"], ["268", "286"], ["266", "286"], ["266", "286"], ["247", "286"], ["250", "286"], ["253", "286"], ["252", "286"], ["256", "286"], ["260", "286"], ["260", "286"], ["256", "286"], ["252", "286"], ["250", "286"], ["247", "286"], ["246", "286"], ["246", "286"], ["244", "286"], ["244", "286"], ["77", "286"], ["76", "286"], ["76", "286"], ["74", "286"], ["74", "286"], ["84", "286"], ["84", "286"], ["102", "286"], ["101", "286"], ["106", "286"], ["106", "286"], ["105", "286"], ["105", "286"], ["101", "286"], ["99", "286"], ["99", "286"], ["90", "286"], ["93", "286"], ["92", "286"], ["92", "286"], ["90", "286"], ["88", "286"], ["88", "286"], ["275", "286"], ["280", "286"], ["275", "286"], ["275", "286"], ["282", "286"], ["282", "286"], ["19", "20"], ["19", "22"], ["19", "30"], ["34", "30"], ["19", "37"], ["41", "37"], ["19", "44"], ["48", "44"], ["19", "51"], ["55", "51"], ["19", "58"], ["62", "58"], ["19", "65"], ["22", "25"], ["19", "25"], ["19", "275"], ["280", "275"], ["62", "282"], ["19", "282"], ["19", "32"], ["34", "32"], ["19", "39"], ["41", "39"], ["19", "46"], ["48", "46"], ["19", "53"], ["55", "53"], ["19", "60"], ["62", "60"], ["58", "69"], ["19", "69"], ["37", "69"], ["76", "74"], ["76", "74"], ["266", "280"], ["244", "280"], ["99", "280"], ["88", "280"], ["19", "280"], ["25", "34"], ["19", "34"], ["34", "41"], ["19", "41"], ["41", "48"], ["19", "48"], ["48", "55"], ["19", "55"], ["55", "62"], ["19", "62"], ["115", "113"], ["115", "113"], ["123", "121"], ["123", "121"], ["134", "131"], ["134", "131"], ["139", "131"], ["139", "131"], ["134", "224"], ["156", "224"], ["19", "224"], ["229", "224"], ["229", "224"], ["232", "224"], ["232", "224"], ["77", "76"], ["80", "76"], ["80", "76"], ["74", "84"], ["19", "84"], ["44", "84"], ["90", "88"], ["90", "88"], ["69", "77"], ["19", "77"], ["19", "80"], ["30", "80"], ["65", "88"], ["19", "88"], ["102", "99"], ["102", "99"], ["105", "99"], ["105", "99"], ["116", "115"], ["116", "115"], ["30", "115"], ["19", "115"], ["124", "123"], ["127", "123"], ["127", "123"], ["134", "133"], ["134", "133"], ["139", "133"], ["139", "133"], ["121", "147"], ["19", "147"], ["131", "147"], ["154", "152"], ["154", "152"], ["134", "226"], ["156", "226"], ["19", "226"], ["229", "226"], ["229", "226"], ["232", "226"], ["232", "226"], ["224", "240"], ["19", "240"], ["44", "240"], ["246", "244"], ["246", "244"], ["19", "90"], ["92", "90"], ["92", "90"], ["65", "99"], ["19", "99"], ["69", "116"], ["19", "116"], ["69", "116"], ["116", "124"], ["19", "124"], ["19", "127"], ["115", "127"], ["51", "134"], ["19", "134"], ["136", "134"], ["136", "134"], ["140", "139"], ["140", "139"], ["19", "139"], ["214", "210"], ["214", "210"], ["217", "210"], ["217", "210"], ["140", "210"], ["19", "210"], ["134", "227"], ["156", "227"], ["19", "227"], ["229", "227"], ["229", "227"], ["233", "232"], ["233", "232"], ["19", "232"], ["210", "244"], ["197", "244"], ["176", "244"], ["19", "244"], ["233", "266"], ["19", "266"], ["270", "266"], ["270", "266"], ["93", "92"], ["93", "92"], ["80", "92"], ["19", "92"], ["102", "101"], ["102", "101"], ["105", "101"], ["105", "101"], ["124", "136"], ["19", "136"], ["113", "136"], ["141", "140"], ["141", "140"], ["19", "140"], ["19", "154"], ["156", "154"], ["156", "154"], ["152", "162"], ["19", "162"], ["116", "162"], ["162", "166"], ["19", "166"], ["171", "169"], ["171", "169"], ["178", "176"], ["178", "176"], ["65", "210"], ["116", "229"], ["204", "229"], ["172", "229"], ["19", "229"], ["140", "229"], ["169", "229"], ["234", "233"], ["234", "233"], ["19", "233"], ["248", "246"], ["250", "246"], ["250", "246"], ["257", "246"], ["19", "246"], ["210", "266"], ["197", "266"], ["176", "266"], ["19", "93"], ["84", "93"], ["77", "102"], ["19", "102"], ["80", "102"], ["106", "105"], ["106", "105"], ["102", "105"], ["19", "105"], ["127", "141"], ["19", "141"], ["136", "141"], ["157", "156"], ["157", "156"], ["134", "156"], ["19", "156"], ["65", "176"], ["19", "176"], ["186", "184"], ["186", "184"], ["200", "197"], ["200", "197"], ["203", "197"], ["203", "197"], ["214", "212"], ["214", "212"], ["217", "212"], ["217", "212"], ["140", "212"], ["19", "212"], ["214", "234"], ["203", "234"], ["178", "234"], ["19", "234"], ["229", "234"], ["248", "247"], ["250", "247"], ["250", "247"], ["233", "268"], ["19", "268"], ["270", "268"], ["270", "268"], ["84", "106"], ["19", "106"], ["84", "106"], ["19", "157"], ["141", "157"], ["172", "171"], ["172", "171"], ["157", "171"], ["19", "171"], ["19", "178"], ["162", "178"], ["171", "178"], ["65", "197"], ["19", "197"], ["214", "213"], ["214", "213"], ["217", "213"], ["217", "213"], ["229", "248"], ["19", "248"], ["154", "250"], ["186", "250"], ["19", "250"], ["253", "250"], ["256", "250"], ["256", "250"], ["271", "270"], ["271", "270"], ["217", "270"], ["190", "270"], ["172", "270"], ["19", "270"], ["136", "172"], ["19", "172"], ["166", "172"], ["154", "186"], ["19", "186"], ["189", "186"], ["189", "186"], ["194", "186"], ["194", "186"], ["200", "199"], ["200", "199"], ["203", "199"], ["203", "199"], ["136", "214"], ["19", "214"], ["141", "214"], ["218", "217"], ["218", "217"], ["214", "217"], ["19", "217"], ["253", "252"], ["256", "252"], ["256", "252"], ["240", "271"], ["19", "271"], ["240", "271"], ["189", "188"], ["189", "188"], ["194", "188"], ["194", "188"], ["184", "200"], ["19", "200"], ["194", "200"], ["204", "203"], ["204", "203"], ["200", "203"], ["19", "203"], ["147", "218"], ["19", "218"], ["147", "218"], ["248", "253"], ["19", "253"], ["257", "256"], ["257", "256"], ["260", "256"], ["260", "256"], ["190", "189"], ["19", "189"], ["157", "194"], ["19", "194"], ["147", "194"], ["200", "204"], ["19", "204"], ["162", "204"], ["19", "257"], ["234", "257"], ["240", "260"], ["19", "260"], ["134", "260"], ["156", "260"], ["136", "190"], ["19", "190"], ["69", "115"], ["69", "77"], ["69", "113"], ["69", "136"], ["69", "84"], ["69", "131"], ["69", "240"], ["69", "232"], ["69", "226"], ["69", "74"], ["69", "121"], ["69", "76"], ["69", "134"], ["69", "80"], ["69", "224"], ["69", "127"], ["69", "233"], ["69", "139"], ["69", "141"], ["69", "116"], ["69", "123"], ["69", "140"], ["69", "234"], ["69", "147"], ["69", "229"], ["69", "227"], ["69", "124"], ["69", "133"], ["84", "102"], ["84", "92"], ["84", "93"], ["84", "101"], ["84", "90"], ["84", "88"], ["84", "99"], ["84", "106"], ["84", "105"], ["147", "214"], ["147", "154"], ["147", "213"], ["147", "162"], ["147", "212"], ["147", "152"], ["147", "210"], ["147", "217"], ["147", "157"], ["147", "156"], ["147", "218"], ["240", "257"], ["240", "244"], ["240", "256"], ["240", "247"], ["240", "246"], ["240", "268"], ["240", "252"], ["240", "260"], ["240", "270"], ["240", "253"], ["240", "271"], ["240", "248"], ["240", "250"], ["240", "266"], ["162", "188"], ["162", "169"], ["162", "178"], ["162", "197"], ["162", "189"], ["162", "204"], ["162", "190"], ["162", "184"], ["162", "194"], ["162", "186"], ["162", "171"], ["162", "166"], ["162", "200"], ["162", "176"], ["162", "199"], ["162", "203"], ["162", "172"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY read = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,read,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,double a: double)<SUB>3</SUB>>", "31": "<(IDENTIFIER,a,double a = (double) read.nextInt())<SUB>3</SUB>>", "33": "<(TYPE_REF,double,double)<SUB>3</SUB>>", "35": "<(IDENTIFIER,read,nextInt())<SUB>3</SUB>>", "37": "<(&lt;operator&gt;.assignment,double v = (double) read.nextInt())<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.cast,(double) read.nextInt())<SUB>4</SUB>>", "41": "<(nextInt,nextInt())<SUB>4</SUB>>", "43": "<(LOCAL,double l: double)<SUB>5</SUB>>", "45": "<(IDENTIFIER,l,double l = (double) read.nextInt())<SUB>5</SUB>>", "47": "<(TYPE_REF,double,double)<SUB>5</SUB>>", "49": "<(IDENTIFIER,read,nextInt())<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,double d = (double) read.nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.cast,(double) read.nextInt())<SUB>6</SUB>>", "55": "<(nextInt,nextInt())<SUB>6</SUB>>", "57": "<(LOCAL,double w: double)<SUB>7</SUB>>", "59": "<(IDENTIFIER,w,double w = (double) read.nextInt())<SUB>7</SUB>>", "61": "<(TYPE_REF,double,double)<SUB>7</SUB>>", "63": "<(IDENTIFIER,read,nextInt())<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.assignment,double t = 0)<SUB>8</SUB>>", "67": "<(LITERAL,0,double t = 0)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.greaterEqualsThan,w &gt;= v)<SUB>9</SUB>>", "71": "<(IDENTIFIER,v,w &gt;= v)<SUB>9</SUB>>", "73": "<(LOCAL,double d1: double)<SUB>10</SUB>>", "75": "<(IDENTIFIER,d1,double d1 = v * v / (2 * a))<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.multiplication,v * v)<SUB>10</SUB>>", "79": "<(IDENTIFIER,v,v * v)<SUB>10</SUB>>", "81": "<(LITERAL,2,2 * a)<SUB>10</SUB>>", "83": "<(CONTROL_STRUCTURE,if (d1 &gt; l),if (d1 &gt; l))<SUB>11</SUB>>", "85": "<(IDENTIFIER,d1,d1 &gt; l)<SUB>11</SUB>>", "87": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "89": "<(IDENTIFIER,t,t += Math.sqrt(2 * l / a))<SUB>12</SUB>>", "91": "<(IDENTIFIER,Math,Math.sqrt(2 * l / a))<SUB>12</SUB>>", "93": "<(&lt;operator&gt;.multiplication,2 * l)<SUB>12</SUB>>", "95": "<(IDENTIFIER,l,2 * l)<SUB>12</SUB>>", "97": "<(CONTROL_STRUCTURE,else,else)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.assignmentPlus,t += v / a + (l - d1) / v)<SUB>15</SUB>>", "101": "<(&lt;operator&gt;.addition,v / a + (l - d1) / v)<SUB>15</SUB>>", "103": "<(IDENTIFIER,v,v / a)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.division,(l - d1) / v)<SUB>15</SUB>>", "107": "<(IDENTIFIER,l,l - d1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,v,(l - d1) / v)<SUB>15</SUB>>", "111": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.assignment,double temp = (v - w) / a)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.division,(v - w) / a)<SUB>19</SUB>>", "117": "<(IDENTIFIER,v,v - w)<SUB>19</SUB>>", "119": "<(IDENTIFIER,a,(v - w) / a)<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.assignment,double d1 = v * v / (2 * a))<SUB>20</SUB>>", "123": "<(&lt;operator&gt;.division,v * v / (2 * a))<SUB>20</SUB>>", "125": "<(IDENTIFIER,v,v * v)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.multiplication,2 * a)<SUB>20</SUB>>", "129": "<(IDENTIFIER,a,2 * a)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignment,double d2 = d - v * temp + a * temp * temp / 2)<SUB>21</SUB>>", "133": "<(&lt;operator&gt;.addition,d - v * temp + a * temp * temp / 2)<SUB>21</SUB>>", "135": "<(IDENTIFIER,d,d - v * temp)<SUB>21</SUB>>", "137": "<(IDENTIFIER,v,v * temp)<SUB>21</SUB>>", "139": "<(&lt;operator&gt;.division,a * temp * temp / 2)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.multiplication,a * temp)<SUB>21</SUB>>", "143": "<(IDENTIFIER,temp,a * temp)<SUB>21</SUB>>", "145": "<(LITERAL,2,a * temp * temp / 2)<SUB>21</SUB>>", "147": "<(&lt;operator&gt;.greaterThan,d1 &gt; d2)<SUB>22</SUB>>", "149": "<(IDENTIFIER,d2,d1 &gt; d2)<SUB>22</SUB>>", "151": "<(LOCAL,double temp2: double)<SUB>23</SUB>>", "153": "<(IDENTIFIER,temp2,double temp2 = Math.sqrt(2 * a * d))<SUB>23</SUB>>", "155": "<(IDENTIFIER,Math,Math.sqrt(2 * a * d))<SUB>23</SUB>>", "157": "<(&lt;operator&gt;.multiplication,2 * a)<SUB>23</SUB>>", "159": "<(IDENTIFIER,a,2 * a)<SUB>23</SUB>>", "161": "<(CONTROL_STRUCTURE,if (temp2 &lt; w),if (temp2 &lt; w))<SUB>24</SUB>>", "163": "<(IDENTIFIER,temp2,temp2 &lt; w)<SUB>24</SUB>>", "165": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "167": "<(IDENTIFIER,w,w = temp2)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.assignment,temp = (v - w) / a)<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.division,(v - w) / a)<SUB>26</SUB>>", "173": "<(IDENTIFIER,v,v - w)<SUB>26</SUB>>", "175": "<(IDENTIFIER,a,(v - w) / a)<SUB>26</SUB>>", "177": "<(IDENTIFIER,t,t += temp2 / a)<SUB>27</SUB>>", "179": "<(IDENTIFIER,temp2,temp2 / a)<SUB>27</SUB>>", "181": "<(CONTROL_STRUCTURE,else,else)<SUB>29</SUB>>", "183": "<(LOCAL,double vx: double)<SUB>30</SUB>>", "185": "<(IDENTIFIER,vx,double vx = Math.sqrt(v * v / 2 + a * d2))<SUB>30</SUB>>", "187": "<(IDENTIFIER,Math,Math.sqrt(v * v / 2 + a * d2))<SUB>30</SUB>>", "189": "<(&lt;operator&gt;.division,v * v / 2)<SUB>30</SUB>>", "191": "<(IDENTIFIER,v,v * v)<SUB>30</SUB>>", "193": "<(LITERAL,2,v * v / 2)<SUB>30</SUB>>", "195": "<(IDENTIFIER,a,a * d2)<SUB>30</SUB>>", "197": "<(&lt;operator&gt;.assignmentPlus,t += (vx / a) + ((vx - w) / a))<SUB>31</SUB>>", "199": "<(&lt;operator&gt;.addition,(vx / a) + ((vx - w) / a))<SUB>31</SUB>>", "201": "<(IDENTIFIER,vx,vx / a)<SUB>31</SUB>>", "203": "<(&lt;operator&gt;.division,(vx - w) / a)<SUB>31</SUB>>", "205": "<(IDENTIFIER,vx,vx - w)<SUB>31</SUB>>", "207": "<(IDENTIFIER,a,(vx - w) / a)<SUB>31</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "211": "<(IDENTIFIER,t,t += (v / a) + ((d2 - d1) / v) + (temp))<SUB>35</SUB>>", "213": "<(&lt;operator&gt;.addition,(v / a) + ((d2 - d1) / v))<SUB>35</SUB>>", "215": "<(IDENTIFIER,v,v / a)<SUB>35</SUB>>", "217": "<(&lt;operator&gt;.division,(d2 - d1) / v)<SUB>35</SUB>>", "219": "<(IDENTIFIER,d2,d2 - d1)<SUB>35</SUB>>", "221": "<(IDENTIFIER,v,(d2 - d1) / v)<SUB>35</SUB>>", "223": "<(LOCAL,double d3: double)<SUB>37</SUB>>", "225": "<(IDENTIFIER,d3,double d3 = d + w * temp + a * temp * temp / 2)<SUB>37</SUB>>", "227": "<(&lt;operator&gt;.addition,d + w * temp)<SUB>37</SUB>>", "229": "<(&lt;operator&gt;.multiplication,w * temp)<SUB>37</SUB>>", "231": "<(IDENTIFIER,temp,w * temp)<SUB>37</SUB>>", "233": "<(&lt;operator&gt;.multiplication,a * temp * temp)<SUB>37</SUB>>", "235": "<(IDENTIFIER,a,a * temp)<SUB>37</SUB>>", "237": "<(IDENTIFIER,temp,a * temp * temp)<SUB>37</SUB>>", "239": "<(CONTROL_STRUCTURE,if (d3 &gt; l),if (d3 &gt; l))<SUB>38</SUB>>", "241": "<(IDENTIFIER,d3,d3 &gt; l)<SUB>38</SUB>>", "243": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "245": "<(IDENTIFIER,t,t += (-w + Math.sqrt(w * w + 2 * a * (l - d))) / a)<SUB>39</SUB>>", "247": "<(&lt;operator&gt;.addition,-w + Math.sqrt(w * w + 2 * a * (l - d)))<SUB>39</SUB>>", "249": "<(IDENTIFIER,w,-w)<SUB>39</SUB>>", "251": "<(IDENTIFIER,Math,Math.sqrt(w * w + 2 * a * (l - d)))<SUB>39</SUB>>", "253": "<(&lt;operator&gt;.multiplication,w * w)<SUB>39</SUB>>", "255": "<(IDENTIFIER,w,w * w)<SUB>39</SUB>>", "257": "<(&lt;operator&gt;.multiplication,2 * a)<SUB>39</SUB>>", "259": "<(IDENTIFIER,a,2 * a)<SUB>39</SUB>>", "261": "<(IDENTIFIER,l,l - d)<SUB>39</SUB>>", "263": "<(IDENTIFIER,a,(-w + Math.sqrt(w * w + 2 * a * (l - d))) / a)<SUB>39</SUB>>", "265": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>>", "267": "<(IDENTIFIER,t,t += (temp) + ((l - d3) / v))<SUB>42</SUB>>", "269": "<(IDENTIFIER,temp,(temp) + ((l - d3) / v))<SUB>42</SUB>>", "271": "<(&lt;operator&gt;.subtraction,l - d3)<SUB>42</SUB>>", "273": "<(IDENTIFIER,d3,l - d3)<SUB>42</SUB>>", "275": "<(printf,System.out.printf(&quot;%.6f&quot;, t))<SUB>45</SUB>>", "277": "<(IDENTIFIER,System,System.out.printf(&quot;%.6f&quot;, t))<SUB>45</SUB>>", "279": "<(LITERAL,&quot;%.6f&quot;,System.out.printf(&quot;%.6f&quot;, t))<SUB>45</SUB>>", "281": "<(IDENTIFIER,t,&lt;operator&gt;.arrayInitializer)<SUB>45</SUB>>", "283": "<(IDENTIFIER,read,close())<SUB>46</SUB>>", "285": "<(MODIFIER,STATIC)>"}}