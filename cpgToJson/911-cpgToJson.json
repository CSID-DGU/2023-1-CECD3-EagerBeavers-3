{"edges": [["22", "24"], ["22", "269"], ["22", "270"], ["22", "271"], ["24", "4"], ["24", "25"], ["24", "28"], ["24", "6"], ["24", "39"], ["24", "42"], ["24", "45"], ["24", "46"], ["24", "52"], ["24", "53"], ["24", "59"], ["24", "60"], ["24", "64"], ["24", "65"], ["24", "69"], ["24", "72"], ["24", "75"], ["24", "94"], ["24", "95"], ["24", "98"], ["24", "99"], ["24", "104"], ["24", "117"], ["24", "119"], ["24", "120"], ["24", "123"], ["24", "129"], ["24", "130"], ["24", "133"], ["24", "134"], ["24", "137"], ["24", "139"], ["24", "177"], ["24", "244"], ["25", "26"], ["25", "27"], ["28", "3"], ["28", "29"], ["29", "30"], ["29", "33"], ["29", "38"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["42", "5"], ["42", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["60", "61"], ["60", "62"], ["62", "63"], ["65", "66"], ["65", "67"], ["67", "68"], ["69", "70"], ["69", "71"], ["72", "7"], ["72", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "114"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["115", "116"], ["117", "118"], ["120", "121"], ["120", "122"], ["123", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["126", "128"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["137", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "158"], ["143", "169"], ["143", "175"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "154"], ["148", "157"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["158", "159"], ["158", "166"], ["159", "160"], ["159", "165"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["166", "167"], ["167", "168"], ["169", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["177", "183"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "213"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "205"], ["194", "207"], ["195", "196"], ["195", "203"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["203", "204"], ["205", "206"], ["207", "208"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["213", "220"], ["213", "223"], ["213", "225"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["223", "224"], ["225", "226"], ["225", "236"], ["225", "238"], ["226", "227"], ["226", "234"], ["227", "228"], ["227", "233"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["234", "235"], ["236", "237"], ["238", "239"], ["239", "240"], ["239", "241"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "248"], ["244", "254"], ["245", "246"], ["245", "247"], ["248", "249"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["254", "255"], ["255", "256"], ["255", "257"], ["257", "258"], ["258", "259"], ["258", "262"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "268"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["25", "32"], ["28", "41"], ["39", "43"], ["42", "50"], ["46", "57"], ["53", "62"], ["60", "67"], ["65", "71"], ["69", "73"], ["72", "77"], ["95", "101"], ["99", "106"], ["117", "120"], ["120", "126"], ["123", "130"], ["130", "134"], ["134", "137"], ["137", "140"], ["27", "25"], ["41", "39"], ["43", "42"], ["48", "46"], ["55", "53"], ["62", "60"], ["67", "65"], ["71", "69"], ["73", "72"], ["77", "80"], ["80", "87"], ["80", "95"], ["83", "80"], ["101", "99"], ["105", "115"], ["105", "117"], ["124", "123"], ["140", "145"], ["140", "178"], ["140", "180"], ["178", "186"], ["178", "245"], ["245", "256"], ["245", "252"], ["30", "37"], ["33", "28"], ["50", "48"], ["57", "55"], ["86", "83"], ["106", "105"], ["106", "110"], ["109", "105"], ["115", "106"], ["126", "124"], ["169", "175"], ["175", "140"], ["180", "178"], ["249", "271"], ["32", "30"], ["35", "33"], ["87", "92"], ["90", "86"], ["110", "109"], ["145", "152"], ["145", "162"], ["159", "167"], ["159", "172"], ["170", "169"], ["186", "189"], ["189", "199"], ["189", "217"], ["192", "189"], ["215", "220"], ["220", "230"], ["220", "245"], ["223", "220"], ["250", "249"], ["256", "271"], ["256", "261"], ["37", "35"], ["92", "90"], ["149", "154"], ["154", "178"], ["154", "180"], ["160", "159"], ["167", "172"], ["172", "170"], ["205", "210"], ["207", "192"], ["217", "215"], ["236", "241"], ["238", "223"], ["252", "250"], ["258", "271"], ["150", "149"], ["162", "160"], ["196", "217"], ["196", "205"], ["208", "207"], ["227", "245"], ["227", "236"], ["239", "238"], ["259", "264"], ["262", "258"], ["152", "150"], ["197", "196"], ["210", "208"], ["228", "227"], ["241", "239"], ["261", "259"], ["263", "262"], ["199", "197"], ["230", "228"], ["264", "263"], ["22", "27"], ["23", "271"], ["25", "271"], ["30", "271"], ["33", "271"], ["33", "271"], ["33", "271"], ["28", "271"], ["39", "271"], ["46", "271"], ["55", "271"], ["55", "271"], ["53", "271"], ["53", "271"], ["60", "271"], ["60", "271"], ["60", "271"], ["65", "271"], ["65", "271"], ["65", "271"], ["69", "271"], ["72", "271"], ["73", "271"], ["72", "271"], ["72", "271"], ["77", "271"], ["80", "271"], ["80", "271"], ["95", "271"], ["99", "271"], ["99", "271"], ["99", "271"], ["106", "271"], ["105", "271"], ["109", "271"], ["109", "271"], ["105", "271"], ["105", "271"], ["117", "271"], ["120", "271"], ["123", "271"], ["123", "271"], ["130", "271"], ["130", "271"], ["134", "271"], ["137", "271"], ["137", "271"], ["140", "271"], ["140", "271"], ["145", "271"], ["145", "271"], ["145", "271"], ["159", "271"], ["167", "271"], ["169", "271"], ["169", "271"], ["175", "271"], ["175", "271"], ["154", "271"], ["178", "271"], ["178", "271"], ["178", "271"], ["186", "271"], ["189", "271"], ["196", "271"], ["196", "271"], ["205", "271"], ["207", "271"], ["207", "271"], ["192", "271"], ["217", "271"], ["215", "271"], ["215", "271"], ["220", "271"], ["220", "271"], ["220", "271"], ["227", "271"], ["227", "271"], ["236", "271"], ["236", "271"], ["238", "271"], ["238", "271"], ["223", "271"], ["245", "271"], ["245", "271"], ["249", "271"], ["86", "271"], ["90", "271"], ["92", "271"], ["90", "271"], ["86", "271"], ["86", "271"], ["83", "271"], ["22", "23"], ["22", "25"], ["22", "39"], ["48", "46"], ["48", "46"], ["55", "53"], ["55", "53"], ["62", "60"], ["67", "65"], ["22", "69"], ["22", "95"], ["60", "99"], ["22", "120"], ["117", "130"], ["22", "130"], ["22", "134"], ["25", "28"], ["22", "28"], ["30", "28"], ["33", "28"], ["39", "42"], ["22", "42"], ["43", "42"], ["69", "72"], ["22", "72"], ["73", "72"], ["22", "77"], ["106", "117"], ["22", "117"], ["65", "123"], ["22", "137"], ["117", "137"], ["22", "30"], ["22", "38"], ["28", "43"], ["22", "43"], ["22", "48"], ["50", "48"], ["48", "55"], ["22", "55"], ["57", "55"], ["46", "62"], ["22", "62"], ["22", "67"], ["43", "73"], ["22", "73"], ["77", "80"], ["83", "80"], ["22", "80"], ["62", "80"], ["80", "83"], ["22", "83"], ["90", "86"], ["90", "86"], ["106", "105"], ["106", "105"], ["109", "105"], ["109", "105"], ["120", "140"], ["167", "140"], ["22", "140"], ["53", "140"], ["134", "178"], ["154", "178"], ["22", "178"], ["180", "178"], ["180", "178"], ["140", "245"], ["180", "245"], ["22", "245"], ["30", "33"], ["22", "33"], ["42", "50"], ["22", "50"], ["50", "57"], ["22", "57"], ["95", "106"], ["115", "106"], ["22", "106"], ["80", "106"], ["60", "109"], ["99", "109"], ["22", "109"], ["106", "115"], ["22", "115"], ["65", "169"], ["159", "169"], ["145", "175"], ["22", "175"], ["140", "180"], ["22", "180"], ["130", "186"], ["22", "186"], ["217", "215"], ["217", "215"], ["149", "249"], ["22", "249"], ["22", "256"], ["55", "90"], ["22", "90"], ["92", "90"], ["137", "145"], ["175", "145"], ["22", "145"], ["106", "145"], ["22", "154"], ["65", "159"], ["123", "159"], ["169", "159"], ["22", "159"], ["186", "189"], ["192", "189"], ["22", "189"], ["137", "189"], ["145", "189"], ["175", "189"], ["189", "192"], ["22", "192"], ["215", "220"], ["223", "220"], ["22", "220"], ["205", "220"], ["130", "220"], ["220", "223"], ["22", "223"], ["72", "92"], ["22", "92"], ["22", "149"], ["140", "167"], ["22", "167"], ["22", "205"], ["130", "205"], ["65", "207"], ["196", "207"], ["189", "217"], ["22", "217"], ["217", "236"], ["22", "236"], ["65", "238"], ["227", "238"], ["149", "258"], ["130", "258"], ["220", "258"], ["22", "258"], ["137", "258"], ["145", "258"], ["175", "258"], ["217", "258"], ["236", "258"], ["65", "196"], ["207", "196"], ["22", "196"], ["65", "227"], ["196", "227"], ["207", "227"], ["238", "227"], ["22", "227"], ["130", "262"], ["220", "262"], ["22", "262"], ["137", "262"], ["145", "262"], ["175", "262"], ["217", "262"], ["236", "262"], ["130", "263"], ["220", "263"], ["22", "263"], ["130", "264"], ["220", "264"], ["22", "264"], ["80", "92"], ["80", "87"], ["80", "90"], ["80", "80"], ["80", "86"], ["80", "83"], ["105", "115"], ["105", "106"], ["105", "105"], ["140", "145"], ["178", "215"], ["178", "189"], ["178", "186"], ["178", "217"], ["178", "220"], ["245", "256"], ["245", "249"], ["245", "252"], ["245", "250"], ["106", "110"], ["106", "109"], ["145", "154"], ["145", "169"], ["145", "149"], ["145", "150"], ["145", "162"], ["145", "170"], ["145", "152"], ["145", "160"], ["145", "159"], ["145", "140"], ["145", "175"], ["145", "172"], ["159", "167"], ["189", "196"], ["189", "197"], ["189", "199"], ["220", "230"], ["220", "228"], ["220", "227"], ["256", "261"], ["256", "262"], ["256", "264"], ["256", "259"], ["256", "258"], ["256", "263"], ["196", "192"], ["196", "189"], ["196", "208"], ["196", "207"], ["196", "205"], ["196", "210"], ["227", "238"], ["227", "223"], ["227", "239"], ["227", "236"], ["227", "220"], ["227", "241"]], "features": {"22": "<(METHOD,main)<SUB>1</SUB>>", "24": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "25": "<(&lt;operator&gt;.assignment,ANY f = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,f,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "32": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "34": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "36": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "38": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "41": "<(&lt;operator&gt;.alloc,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(f.readLine()))<SUB>3</SUB>>", "44": "<(IDENTIFIER,f,readLine())<SUB>3</SUB>>", "46": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "48": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "50": "<(nextToken,nextToken())<SUB>4</SUB>>", "52": "<(LOCAL,int k: int)<SUB>5</SUB>>", "54": "<(IDENTIFIER,k,int k = parseInt(st.nextToken()))<SUB>5</SUB>>", "56": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "58": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "60": "<(&lt;operator&gt;.assignment,int[] array = new int[n])<SUB>6</SUB>>", "62": "<(&lt;operator&gt;.alloc,new int[n])>", "64": "<(LOCAL,int[] visited: int[])<SUB>7</SUB>>", "66": "<(IDENTIFIER,visited,int[] visited = new int[100002])<SUB>7</SUB>>", "68": "<(LITERAL,100002,new int[100002])<SUB>7</SUB>>", "70": "<(IDENTIFIER,st,st = new StringTokenizer(f.readLine()))<SUB>8</SUB>>", "72": "<(&lt;init&gt;,new StringTokenizer(f.readLine()))<SUB>8</SUB>>", "73": "<(readLine,readLine())<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,array[i] = parseInt(st.nextToken()))<SUB>10</SUB>>", "91": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>10</SUB>>", "93": "<(IDENTIFIER,st,nextToken())<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.assignment,int count = 0)<SUB>12</SUB>>", "97": "<(LITERAL,0,int count = 0)<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.assignment,int begin = array[0])<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,array[0])<SUB>13</SUB>>", "103": "<(LITERAL,0,int begin = array[0])<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.logicalAnd,count &lt; n &amp;&amp; array[count] == begin)<SUB>14</SUB>>", "107": "<(IDENTIFIER,count,count &lt; n)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.equals,array[count] == begin)<SUB>14</SUB>>", "111": "<(IDENTIFIER,array,array[count] == begin)<SUB>14</SUB>>", "113": "<(IDENTIFIER,begin,array[count] == begin)<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,count++)<SUB>15</SUB>>", "117": "<(&lt;operator&gt;.postDecrement,count--)<SUB>17</SUB>>", "119": "<(LOCAL,int kcount: int)<SUB>18</SUB>>", "121": "<(IDENTIFIER,kcount,int kcount = 1)<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.postIncrement,visited[array[count]]++)<SUB>19</SUB>>", "125": "<(IDENTIFIER,visited,visited[array[count]]++)<SUB>19</SUB>>", "127": "<(IDENTIFIER,array,visited[array[count]]++)<SUB>19</SUB>>", "129": "<(LOCAL,int bindex: int)<SUB>20</SUB>>", "131": "<(IDENTIFIER,bindex,int bindex = count)<SUB>20</SUB>>", "133": "<(LOCAL,boolean good: boolean)<SUB>21</SUB>>", "135": "<(IDENTIFIER,good,boolean good = true)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.postIncrement,count++)<SUB>22</SUB>>", "139": "<(CONTROL_STRUCTURE,while (kcount &lt; k),while (kcount &lt; k))<SUB>23</SUB>>", "141": "<(IDENTIFIER,kcount,kcount &lt; k)<SUB>23</SUB>>", "143": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.equals,count == n)<SUB>24</SUB>>", "147": "<(IDENTIFIER,n,count == n)<SUB>24</SUB>>", "149": "<(println,System.out.println(&quot;-1 -1&quot;))<SUB>25</SUB>>", "151": "<(IDENTIFIER,System,System.out.println(&quot;-1 -1&quot;))<SUB>25</SUB>>", "153": "<(LITERAL,&quot;-1 -1&quot;,System.out.println(&quot;-1 -1&quot;))<SUB>25</SUB>>", "155": "<(IDENTIFIER,good,good = false)<SUB>26</SUB>>", "157": "<(CONTROL_STRUCTURE,break;,break;)<SUB>27</SUB>>", "159": "<(&lt;operator&gt;.equals,visited[array[count]] == 0)<SUB>29</SUB>>", "161": "<(IDENTIFIER,visited,visited[array[count]] == 0)<SUB>29</SUB>>", "163": "<(IDENTIFIER,array,visited[array[count]] == 0)<SUB>29</SUB>>", "165": "<(LITERAL,0,visited[array[count]] == 0)<SUB>29</SUB>>", "167": "<(&lt;operator&gt;.postIncrement,kcount++)<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,visited[array[count]]++)<SUB>32</SUB>>", "171": "<(IDENTIFIER,visited,visited[array[count]]++)<SUB>32</SUB>>", "173": "<(IDENTIFIER,array,visited[array[count]]++)<SUB>32</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,count++)<SUB>33</SUB>>", "177": "<(CONTROL_STRUCTURE,if (good &amp;&amp; k != 1),if (good &amp;&amp; k != 1))<SUB>35</SUB>>", "179": "<(IDENTIFIER,good,good &amp;&amp; k != 1)<SUB>35</SUB>>", "181": "<(IDENTIFIER,k,k != 1)<SUB>35</SUB>>", "183": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "185": "<(LOCAL,int i: int)<SUB>36</SUB>>", "187": "<(IDENTIFIER,i,int i = bindex)<SUB>36</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; count)<SUB>36</SUB>>", "191": "<(IDENTIFIER,count,i &lt; count)<SUB>36</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>36</SUB>>", "195": "<(CONTROL_STRUCTURE,if (visited[array[i]] == 1),if (visited[array[i]] == 1))<SUB>37</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,visited[array[i]])<SUB>37</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>37</SUB>>", "201": "<(IDENTIFIER,i,visited[array[i]] == 1)<SUB>37</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "205": "<(&lt;operator&gt;.postIncrement,bindex++)<SUB>40</SUB>>", "207": "<(&lt;operator&gt;.postDecrement,visited[array[i]]--)<SUB>41</SUB>>", "209": "<(IDENTIFIER,visited,visited[array[i]]--)<SUB>41</SUB>>", "211": "<(IDENTIFIER,array,visited[array[i]]--)<SUB>41</SUB>>", "213": "<(CONTROL_STRUCTURE,for (int i = count - 1; Some(i &gt; bindex); i--),for (int i = count - 1; Some(i &gt; bindex); i--))<SUB>43</SUB>>", "215": "<(&lt;operator&gt;.assignment,int i = count - 1)<SUB>43</SUB>>", "217": "<(&lt;operator&gt;.subtraction,count - 1)<SUB>43</SUB>>", "219": "<(LITERAL,1,count - 1)<SUB>43</SUB>>", "221": "<(IDENTIFIER,i,i &gt; bindex)<SUB>43</SUB>>", "223": "<(&lt;operator&gt;.postDecrement,i--)<SUB>43</SUB>>", "225": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>>", "227": "<(&lt;operator&gt;.equals,visited[array[i]] == 1)<SUB>44</SUB>>", "229": "<(IDENTIFIER,visited,visited[array[i]] == 1)<SUB>44</SUB>>", "231": "<(IDENTIFIER,array,visited[array[i]] == 1)<SUB>44</SUB>>", "233": "<(LITERAL,1,visited[array[i]] == 1)<SUB>44</SUB>>", "235": "<(CONTROL_STRUCTURE,break;,break;)<SUB>45</SUB>>", "237": "<(IDENTIFIER,count,count--)<SUB>47</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,visited[array[i]])<SUB>48</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>48</SUB>>", "243": "<(IDENTIFIER,i,visited[array[i]]--)<SUB>48</SUB>>", "245": "<(&lt;operator&gt;.equals,k == 1)<SUB>51</SUB>>", "247": "<(LITERAL,1,k == 1)<SUB>51</SUB>>", "249": "<(println,System.out.println(&quot;1 1&quot;))<SUB>52</SUB>>", "251": "<(IDENTIFIER,System,System.out.println(&quot;1 1&quot;))<SUB>52</SUB>>", "253": "<(LITERAL,&quot;1 1&quot;,System.out.println(&quot;1 1&quot;))<SUB>52</SUB>>", "255": "<(CONTROL_STRUCTURE,if (good),if (good))<SUB>54</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "259": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>55</SUB>>", "261": "<(FIELD_IDENTIFIER,out,out)<SUB>55</SUB>>", "263": "<(&lt;operator&gt;.addition,bindex + 1 + &quot; &quot;)<SUB>55</SUB>>", "265": "<(IDENTIFIER,bindex,bindex + 1)<SUB>55</SUB>>", "267": "<(LITERAL,&quot; &quot;,bindex + 1 + &quot; &quot;)<SUB>55</SUB>>", "269": "<(MODIFIER,PUBLIC)>", "271": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}