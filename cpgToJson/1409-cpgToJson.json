{"edges": [["21", "23"], ["21", "147"], ["21", "148"], ["21", "149"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "6"], ["23", "43"], ["23", "46"], ["23", "48"], ["23", "49"], ["23", "55"], ["23", "56"], ["23", "62"], ["23", "73"], ["23", "84"], ["23", "85"], ["23", "88"], ["23", "89"], ["23", "92"], ["23", "93"], ["23", "126"], ["23", "141"], ["23", "146"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["46", "5"], ["46", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "72"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "107"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["107", "108"], ["107", "115"], ["107", "119"], ["108", "109"], ["108", "110"], ["108", "111"], ["108", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["121", "122"], ["121", "123"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "129"], ["127", "130"], ["127", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["24", "31"], ["27", "41"], ["39", "45"], ["43", "46"], ["46", "53"], ["49", "60"], ["56", "63"], ["85", "89"], ["89", "94"], ["141", "146"], ["146", "149"], ["26", "24"], ["41", "39"], ["45", "43"], ["51", "49"], ["58", "56"], ["63", "70"], ["63", "74"], ["74", "81"], ["74", "85"], ["94", "103"], ["94", "131"], ["127", "138"], ["127", "144"], ["142", "141"], ["29", "36"], ["32", "27"], ["53", "51"], ["60", "58"], ["67", "72"], ["72", "149"], ["78", "83"], ["83", "149"], ["98", "112"], ["131", "127"], ["135", "140"], ["140", "149"], ["144", "142"], ["31", "29"], ["34", "32"], ["68", "67"], ["79", "78"], ["100", "98"], ["108", "116"], ["108", "123"], ["136", "135"], ["36", "34"], ["70", "68"], ["81", "79"], ["102", "100"], ["112", "108"], ["116", "94"], ["138", "136"], ["103", "102"], ["121", "94"], ["123", "121"], ["21", "26"], ["140", "149"], ["83", "149"], ["146", "149"], ["72", "149"], ["22", "149"], ["24", "149"], ["29", "149"], ["32", "149"], ["32", "149"], ["32", "149"], ["27", "149"], ["41", "149"], ["39", "149"], ["39", "149"], ["43", "149"], ["46", "149"], ["46", "149"], ["49", "149"], ["56", "149"], ["58", "149"], ["60", "149"], ["58", "149"], ["56", "149"], ["56", "149"], ["63", "149"], ["63", "149"], ["67", "149"], ["21", "22"], ["21", "24"], ["41", "39"], ["21", "43"], ["51", "49"], ["51", "49"], ["58", "56"], ["58", "56"], ["21", "85"], ["74", "89"], ["21", "89"], ["21", "146"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["43", "46"], ["21", "46"], ["39", "46"], ["21", "141"], ["21", "29"], ["21", "37"], ["27", "41"], ["21", "41"], ["21", "51"], ["53", "51"], ["51", "58"], ["21", "58"], ["60", "58"], ["49", "63"], ["21", "63"], ["21", "72"], ["63", "74"], ["21", "74"], ["56", "74"], ["21", "83"], ["85", "94"], ["121", "94"], ["21", "94"], ["103", "94"], ["89", "94"], ["103", "94"], ["116", "94"], ["103", "98"], ["21", "98"], ["102", "98"], ["102", "98"], ["108", "127"], ["21", "127"], ["74", "127"], ["108", "127"], ["108", "127"], ["74", "127"], ["131", "127"], ["131", "127"], ["21", "140"], ["29", "32"], ["21", "32"], ["46", "53"], ["21", "53"], ["53", "60"], ["21", "60"], ["21", "67"], ["21", "78"], ["94", "131"], ["21", "131"], ["131", "135"], ["21", "135"], ["103", "100"], ["21", "100"], ["102", "100"], ["102", "100"], ["21", "108"], ["74", "108"], ["74", "108"], ["112", "108"], ["112", "108"], ["112", "116"], ["21", "116"], ["103", "102"], ["103", "102"], ["21", "102"], ["98", "112"], ["21", "112"], ["112", "121"], ["21", "121"], ["94", "103"], ["21", "103"], ["94", "103"], ["112", "123"], ["21", "123"], ["63", "68"], ["63", "72"], ["63", "67"], ["63", "74"], ["63", "70"], ["74", "94"], ["74", "89"], ["74", "81"], ["74", "131"], ["74", "85"], ["74", "79"], ["74", "83"], ["74", "127"], ["74", "78"], ["94", "94"], ["94", "98"], ["94", "102"], ["94", "103"], ["94", "112"], ["94", "100"], ["94", "108"], ["127", "141"], ["127", "136"], ["127", "146"], ["127", "142"], ["127", "144"], ["127", "138"], ["127", "140"], ["127", "135"], ["108", "116"], ["108", "121"], ["108", "123"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,String line = readLine())<SUB>3</SUB>>", "41": "<(readLine,readLine())<SUB>3</SUB>>", "6": "<(LOCAL,StringTokenizer tokenizer: ANY)<SUB>4</SUB>>", "44": "<(IDENTIFIER,tokenizer,ANY tokenizer = new StringTokenizer(line))<SUB>4</SUB>>", "46": "<(&lt;init&gt;,new StringTokenizer(line))<SUB>4</SUB>>", "47": "<(IDENTIFIER,line,new StringTokenizer(line))<SUB>4</SUB>>", "49": "<(&lt;operator&gt;.assignment,long n = parseLong(tokenizer.nextToken()))<SUB>5</SUB>>", "51": "<(parseLong,parseLong(tokenizer.nextToken()))<SUB>5</SUB>>", "53": "<(nextToken,nextToken())<SUB>5</SUB>>", "55": "<(LOCAL,long k: long)<SUB>6</SUB>>", "57": "<(IDENTIFIER,k,long k = parseLong(tokenizer.nextToken()))<SUB>6</SUB>>", "59": "<(IDENTIFIER,Long,parseLong(tokenizer.nextToken()))<SUB>6</SUB>>", "61": "<(IDENTIFIER,tokenizer,nextToken())<SUB>6</SUB>>", "63": "<(&lt;operator&gt;.equals,n == 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,n == 1)<SUB>7</SUB>>", "67": "<(println,System.out.println(&quot;0&quot;))<SUB>8</SUB>>", "69": "<(IDENTIFIER,System,System.out.println(&quot;0&quot;))<SUB>8</SUB>>", "71": "<(LITERAL,&quot;0&quot;,System.out.println(&quot;0&quot;))<SUB>8</SUB>>", "73": "<(CONTROL_STRUCTURE,if (n &lt;= k),if (n &lt;= k))<SUB>12</SUB>>", "75": "<(IDENTIFIER,n,n &lt;= k)<SUB>12</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>13</SUB>>", "81": "<(FIELD_IDENTIFIER,out,out)<SUB>13</SUB>>", "83": "<(RETURN,return;,return;)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.assignment,long first = 0)<SUB>16</SUB>>", "87": "<(LITERAL,0,long first = 0)<SUB>16</SUB>>", "89": "<(&lt;operator&gt;.assignment,long end = k)<SUB>17</SUB>>", "91": "<(IDENTIFIER,k,long end = k)<SUB>17</SUB>>", "93": "<(CONTROL_STRUCTURE,while (first &lt; end),while (first &lt; end))<SUB>20</SUB>>", "95": "<(IDENTIFIER,first,first &lt; end)<SUB>20</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "99": "<(IDENTIFIER,mid,mid = first + (end - first) / 2)<SUB>21</SUB>>", "101": "<(IDENTIFIER,first,first + (end - first) / 2)<SUB>21</SUB>>", "103": "<(&lt;operator&gt;.subtraction,end - first)<SUB>21</SUB>>", "105": "<(IDENTIFIER,first,end - first)<SUB>21</SUB>>", "107": "<(CONTROL_STRUCTURE,if (is_exist(n, k, mid - 1)),if (is_exist(n, k, mid - 1)))<SUB>22</SUB>>", "109": "<(IDENTIFIER,this,is_exist(n, k, mid - 1))<SUB>22</SUB>>", "111": "<(IDENTIFIER,k,is_exist(n, k, mid - 1))<SUB>22</SUB>>", "113": "<(IDENTIFIER,mid,mid - 1)<SUB>22</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "117": "<(IDENTIFIER,end,end = mid)<SUB>23</SUB>>", "119": "<(CONTROL_STRUCTURE,else,else)<SUB>24</SUB>>", "121": "<(&lt;operator&gt;.assignment,first = mid + 1)<SUB>25</SUB>>", "123": "<(&lt;operator&gt;.addition,mid + 1)<SUB>25</SUB>>", "125": "<(LITERAL,1,mid + 1)<SUB>25</SUB>>", "127": "<(is_exist,is_exist(n, k, end - 1))<SUB>28</SUB>>", "129": "<(IDENTIFIER,n,is_exist(n, k, end - 1))<SUB>28</SUB>>", "131": "<(&lt;operator&gt;.subtraction,end - 1)<SUB>28</SUB>>", "133": "<(LITERAL,1,end - 1)<SUB>28</SUB>>", "135": "<(println,System.out.println((end)))<SUB>29</SUB>>", "137": "<(IDENTIFIER,System,System.out.println((end)))<SUB>29</SUB>>", "139": "<(IDENTIFIER,end,System.out.println((end)))<SUB>29</SUB>>", "141": "<(println,System.out.println(&quot;-1&quot;))<SUB>32</SUB>>", "143": "<(IDENTIFIER,System,System.out.println(&quot;-1&quot;))<SUB>32</SUB>>", "145": "<(LITERAL,&quot;-1&quot;,System.out.println(&quot;-1&quot;))<SUB>32</SUB>>", "147": "<(MODIFIER,PUBLIC)>", "149": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}