{"edges": [["23", "25"], ["23", "285"], ["23", "286"], ["23", "287"], ["25", "26"], ["25", "4"], ["25", "29"], ["25", "32"], ["25", "6"], ["25", "33"], ["25", "36"], ["25", "40"], ["25", "41"], ["25", "45"], ["25", "46"], ["25", "8"], ["25", "50"], ["25", "53"], ["25", "54"], ["25", "80"], ["25", "81"], ["25", "85"], ["25", "86"], ["25", "92"], ["25", "93"], ["25", "96"], ["25", "97"], ["25", "102"], ["25", "117"], ["25", "118"], ["25", "127"], ["25", "134"], ["25", "135"], ["25", "138"], ["25", "276"], ["25", "283"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["32", "3"], ["33", "34"], ["33", "35"], ["36", "5"], ["36", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["53", "7"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "73"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["73", "78"], ["73", "79"], ["75", "76"], ["75", "77"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["89", "90"], ["89", "91"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["100", "101"], ["102", "103"], ["102", "105"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "111"], ["107", "108"], ["107", "109"], ["109", "110"], ["111", "112"], ["111", "116"], ["112", "113"], ["112", "114"], ["114", "115"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "143"], ["138", "146"], ["138", "148"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["146", "147"], ["148", "149"], ["148", "150"], ["148", "155"], ["148", "273"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "160"], ["155", "168"], ["155", "170"], ["157", "158"], ["157", "159"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["162", "165"], ["165", "166"], ["165", "167"], ["168", "169"], ["170", "171"], ["171", "172"], ["171", "173"], ["171", "176"], ["171", "182"], ["171", "184"], ["173", "174"], ["173", "175"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["178", "181"], ["182", "183"], ["184", "185"], ["185", "186"], ["185", "187"], ["185", "193"], ["185", "201"], ["185", "203"], ["187", "188"], ["187", "189"], ["189", "190"], ["189", "191"], ["189", "192"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "197"], ["195", "198"], ["198", "199"], ["198", "200"], ["201", "202"], ["203", "204"], ["203", "205"], ["203", "210"], ["203", "211"], ["203", "250"], ["203", "251"], ["203", "258"], ["205", "206"], ["205", "207"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["213", "220"], ["213", "231"], ["213", "240"], ["213", "243"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "228"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "227"], ["224", "225"], ["224", "226"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "237"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "249"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "248"], ["251", "252"], ["251", "253"], ["253", "254"], ["253", "257"], ["254", "255"], ["254", "256"], ["258", "259"], ["258", "264"], ["259", "260"], ["259", "263"], ["260", "261"], ["260", "262"], ["264", "265"], ["264", "272"], ["265", "266"], ["265", "271"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["273", "274"], ["273", "275"], ["276", "277"], ["276", "278"], ["278", "279"], ["278", "282"], ["279", "280"], ["279", "281"], ["283", "284"], ["26", "31"], ["29", "32"], ["32", "35"], ["33", "39"], ["36", "43"], ["41", "48"], ["46", "52"], ["50", "53"], ["53", "56"], ["81", "89"], ["86", "93"], ["93", "100"], ["97", "103"], ["118", "129"], ["127", "135"], ["135", "140"], ["276", "283"], ["283", "287"], ["31", "29"], ["35", "33"], ["37", "36"], ["43", "41"], ["48", "46"], ["52", "50"], ["56", "59"], ["59", "66"], ["59", "83"], ["62", "59"], ["83", "81"], ["88", "86"], ["99", "97"], ["103", "109"], ["103", "121"], ["120", "118"], ["128", "127"], ["140", "143"], ["143", "152"], ["143", "279"], ["146", "143"], ["278", "276"], ["39", "37"], ["65", "75"], ["73", "62"], ["89", "88"], ["100", "99"], ["107", "114"], ["111", "103"], ["121", "124"], ["124", "120"], ["129", "128"], ["150", "157"], ["273", "146"], ["279", "278"], ["66", "71"], ["69", "65"], ["75", "79"], ["79", "73"], ["109", "107"], ["112", "111"], ["152", "150"], ["157", "165"], ["160", "173"], ["160", "273"], ["168", "165"], ["71", "69"], ["114", "112"], ["162", "160"], ["165", "162"], ["173", "178"], ["176", "189"], ["176", "168"], ["182", "178"], ["178", "176"], ["187", "198"], ["193", "207"], ["193", "182"], ["201", "198"], ["189", "187"], ["195", "193"], ["205", "216"], ["211", "254"], ["251", "260"], ["258", "201"], ["198", "195"], ["207", "205"], ["213", "211"], ["253", "251"], ["259", "267"], ["264", "258"], ["215", "224"], ["220", "234"], ["231", "240"], ["240", "246"], ["243", "213"], ["254", "253"], ["260", "259"], ["265", "264"], ["216", "215"], ["221", "228"], ["228", "220"], ["232", "237"], ["237", "231"], ["244", "243"], ["266", "265"], ["223", "221"], ["234", "232"], ["246", "244"], ["267", "266"], ["224", "223"], ["23", "26"], ["24", "287"], ["26", "287"], ["26", "287"], ["29", "287"], ["32", "287"], ["33", "287"], ["36", "287"], ["36", "287"], ["43", "287"], ["41", "287"], ["41", "287"], ["46", "287"], ["46", "287"], ["46", "287"], ["50", "287"], ["53", "287"], ["56", "287"], ["59", "287"], ["59", "287"], ["81", "287"], ["81", "287"], ["86", "287"], ["86", "287"], ["86", "287"], ["93", "287"], ["93", "287"], ["100", "287"], ["99", "287"], ["97", "287"], ["103", "287"], ["103", "287"], ["118", "287"], ["120", "287"], ["124", "287"], ["120", "287"], ["118", "287"], ["118", "287"], ["127", "287"], ["127", "287"], ["135", "287"], ["135", "287"], ["140", "287"], ["143", "287"], ["143", "287"], ["143", "287"], ["276", "287"], ["276", "287"], ["283", "287"], ["283", "287"], ["150", "287"], ["150", "287"], ["157", "287"], ["160", "287"], ["162", "287"], ["162", "287"], ["160", "287"], ["160", "287"], ["273", "287"], ["273", "287"], ["273", "287"], ["146", "287"], ["173", "287"], ["176", "287"], ["176", "287"], ["176", "287"], ["168", "287"], ["187", "287"], ["187", "287"], ["193", "287"], ["195", "287"], ["193", "287"], ["193", "287"], ["182", "287"], ["205", "287"], ["205", "287"], ["213", "287"], ["213", "287"], ["213", "287"], ["213", "287"], ["213", "287"], ["211", "287"], ["211", "287"], ["251", "287"], ["254", "287"], ["253", "287"], ["251", "287"], ["251", "287"], ["258", "287"], ["265", "287"], ["264", "287"], ["258", "287"], ["258", "287"], ["201", "287"], ["114", "287"], ["111", "287"], ["111", "287"], ["111", "287"], ["69", "287"], ["71", "287"], ["69", "287"], ["65", "287"], ["65", "287"], ["73", "287"], ["73", "287"], ["62", "287"], ["264", "287"], ["23", "24"], ["23", "29"], ["23", "33"], ["43", "41"], ["48", "46"], ["23", "50"], ["83", "81"], ["88", "86"], ["23", "93"], ["99", "97"], ["120", "118"], ["120", "118"], ["23", "127"], ["23", "135"], ["23", "26"], ["29", "32"], ["23", "32"], ["33", "36"], ["23", "36"], ["50", "53"], ["23", "53"], ["23", "56"], ["23", "140"], ["36", "276"], ["23", "276"], ["276", "283"], ["23", "283"], ["32", "43"], ["23", "43"], ["41", "48"], ["23", "48"], ["56", "59"], ["62", "59"], ["23", "59"], ["48", "59"], ["59", "62"], ["23", "62"], ["69", "65"], ["69", "65"], ["53", "83"], ["73", "83"], ["23", "83"], ["81", "88"], ["23", "88"], ["100", "99"], ["97", "103"], ["109", "103"], ["23", "103"], ["109", "107"], ["107", "111"], ["23", "111"], ["23", "120"], ["81", "120"], ["59", "120"], ["140", "143"], ["146", "143"], ["23", "143"], ["81", "143"], ["143", "146"], ["246", "146"], ["23", "146"], ["86", "150"], ["150", "273"], ["178", "273"], ["23", "273"], ["53", "73"], ["23", "73"], ["46", "73"], ["65", "73"], ["81", "89"], ["23", "89"], ["83", "100"], ["23", "100"], ["23", "121"], ["81", "121"], ["59", "124"], ["23", "124"], ["23", "157"], ["165", "273"], ["26", "69"], ["23", "69"], ["71", "69"], ["103", "109"], ["23", "109"], ["157", "160"], ["168", "160"], ["23", "160"], ["162", "160"], ["162", "160"], ["162", "160"], ["178", "168"], ["23", "168"], ["43", "71"], ["23", "71"], ["93", "114"], ["23", "114"], ["26", "162"], ["178", "162"], ["69", "162"], ["23", "162"], ["165", "162"], ["165", "162"], ["23", "173"], ["135", "165"], ["273", "165"], ["23", "165"], ["173", "176"], ["182", "176"], ["23", "176"], ["178", "176"], ["178", "176"], ["178", "176"], ["189", "182"], ["253", "182"], ["23", "182"], ["162", "178"], ["195", "178"], ["23", "178"], ["160", "178"], ["223", "178"], ["150", "178"], ["195", "178"], ["189", "187"], ["189", "187"], ["189", "187"], ["187", "193"], ["201", "193"], ["23", "193"], ["195", "193"], ["195", "193"], ["195", "193"], ["237", "201"], ["23", "201"], ["207", "205"], ["207", "205"], ["213", "211"], ["213", "211"], ["213", "211"], ["213", "211"], ["213", "211"], ["213", "211"], ["253", "251"], ["253", "251"], ["264", "258"], ["264", "258"], ["178", "189"], ["23", "189"], ["176", "189"], ["189", "195"], ["213", "195"], ["23", "195"], ["178", "195"], ["234", "195"], ["165", "195"], ["165", "198"], ["23", "198"], ["195", "207"], ["23", "207"], ["193", "207"], ["195", "213"], ["23", "213"], ["223", "253"], ["23", "253"], ["205", "253"], ["228", "253"], ["258", "264"], ["211", "264"], ["23", "264"], ["223", "254"], ["23", "254"], ["205", "254"], ["258", "265"], ["211", "265"], ["23", "265"], ["207", "228"], ["23", "228"], ["189", "228"], ["253", "228"], ["228", "237"], ["23", "237"], ["23", "223"], ["178", "223"], ["207", "234"], ["23", "234"], ["143", "246"], ["23", "246"], ["23", "224"], ["59", "73"], ["59", "75"], ["59", "69"], ["59", "59"], ["59", "79"], ["59", "66"], ["59", "65"], ["59", "71"], ["59", "62"], ["103", "107"], ["103", "114"], ["103", "103"], ["103", "112"], ["103", "111"], ["103", "109"], ["143", "146"], ["143", "273"], ["143", "150"], ["143", "162"], ["143", "152"], ["143", "160"], ["143", "157"], ["143", "143"], ["143", "165"], ["160", "178"], ["160", "162"], ["160", "168"], ["160", "173"], ["160", "160"], ["160", "176"], ["160", "165"], ["176", "178"], ["176", "198"], ["176", "189"], ["176", "195"], ["176", "187"], ["176", "182"], ["176", "193"], ["176", "176"], ["193", "215"], ["193", "240"], ["193", "232"], ["193", "244"], ["193", "198"], ["193", "213"], ["193", "243"], ["193", "228"], ["193", "264"], ["193", "195"], ["193", "223"], ["193", "231"], ["193", "259"], ["193", "246"], ["193", "207"], ["193", "267"], ["193", "221"], ["193", "224"], ["193", "258"], ["193", "265"], ["193", "201"], ["193", "205"], ["193", "193"], ["193", "260"], ["193", "237"], ["193", "251"], ["193", "253"], ["193", "220"], ["193", "234"], ["193", "254"], ["193", "211"], ["193", "216"], ["193", "266"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(IDENTIFIER,this,setupCombo(301))<SUB>2</SUB>>", "4": "<(LOCAL,FastScanner sc: ANY)<SUB>3</SUB>>", "30": "<(IDENTIFIER,sc,ANY sc = new FastScanner())<SUB>3</SUB>>", "32": "<(&lt;init&gt;,new FastScanner())<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter out: ANY)<SUB>4</SUB>>", "34": "<(IDENTIFIER,out,ANY out = new PrintWriter(System.out))<SUB>4</SUB>>", "36": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int N = nextInt())<SUB>6</SUB>>", "43": "<(nextInt,nextInt())<SUB>6</SUB>>", "45": "<(LOCAL,long[] a: long[])<SUB>7</SUB>>", "47": "<(IDENTIFIER,a,long[] a = new long[N])<SUB>7</SUB>>", "49": "<(IDENTIFIER,N,new long[N])<SUB>7</SUB>>", "50": "<(&lt;operator&gt;.assignment,ANY clusters = new HashMap&lt;&gt;())<SUB>8</SUB>>", "52": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>8</SUB>>", "7": "<(IDENTIFIER,clusters,new HashMap&lt;&gt;())<SUB>8</SUB>>", "55": "<(LOCAL,int i: int)<SUB>9</SUB>>", "57": "<(IDENTIFIER,i,int i = 0)<SUB>9</SUB>>", "59": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>9</SUB>>", "61": "<(IDENTIFIER,N,i &lt; N)<SUB>9</SUB>>", "63": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,a[i] = removeSquares(sc.nextLong()))<SUB>10</SUB>>", "67": "<(IDENTIFIER,a,a[i] = removeSquares(sc.nextLong()))<SUB>10</SUB>>", "69": "<(removeSquares,removeSquares(sc.nextLong()))<SUB>10</SUB>>", "71": "<(nextLong,nextLong())<SUB>10</SUB>>", "73": "<(merge,merge(a[i], 1, Integer::sum))<SUB>11</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,merge(a[i], 1, Integer::sum))<SUB>11</SUB>>", "79": "<(UNKNOWN,Integer::sum,Integer::sum)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,int G = size())<SUB>13</SUB>>", "83": "<(size,size())<SUB>13</SUB>>", "85": "<(LOCAL,int[] groups: int[])<SUB>14</SUB>>", "87": "<(IDENTIFIER,groups,int[] groups = new int[G + 1])<SUB>14</SUB>>", "89": "<(&lt;operator&gt;.addition,G + 1)<SUB>14</SUB>>", "91": "<(LITERAL,1,G + 1)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.assignment,int ptr = 1)<SUB>15</SUB>>", "95": "<(LITERAL,1,int ptr = 1)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,)<SUB>16</SUB>>", "99": "<(iterator,&lt;empty&gt;)<SUB>16</SUB>>", "101": "<(IDENTIFIER,clusters,values())<SUB>16</SUB>>", "103": "<(hasNext,&lt;empty&gt;)<SUB>16</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "107": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>16</SUB>>", "109": "<(next,&lt;empty&gt;)<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,groups[ptr++] = amt)<SUB>17</SUB>>", "113": "<(IDENTIFIER,groups,groups[ptr++] = amt)<SUB>17</SUB>>", "115": "<(IDENTIFIER,ptr,ptr++)<SUB>17</SUB>>", "117": "<(LOCAL,long[][] dp: long[][])<SUB>19</SUB>>", "119": "<(IDENTIFIER,dp,long[][] dp = new long[G + 1][N + 1])<SUB>19</SUB>>", "121": "<(&lt;operator&gt;.addition,G + 1)<SUB>19</SUB>>", "123": "<(LITERAL,1,G + 1)<SUB>19</SUB>>", "125": "<(IDENTIFIER,N,N + 1)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>21</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>21</SUB>>", "131": "<(LITERAL,0,dp[0][0] = 1)<SUB>21</SUB>>", "133": "<(LITERAL,1,dp[0][0] = 1)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,int total = 0)<SUB>23</SUB>>", "137": "<(LITERAL,0,int total = 0)<SUB>23</SUB>>", "139": "<(LOCAL,int prefix: int)<SUB>35</SUB>>", "141": "<(IDENTIFIER,prefix,int prefix = 1)<SUB>35</SUB>>", "143": "<(&lt;operator&gt;.lessEqualsThan,prefix &lt;= G)<SUB>35</SUB>>", "145": "<(IDENTIFIER,G,prefix &lt;= G)<SUB>35</SUB>>", "147": "<(IDENTIFIER,prefix,prefix++)<SUB>35</SUB>>", "149": "<(LOCAL,int amt: int)<SUB>36</SUB>>", "151": "<(IDENTIFIER,amt,int amt = groups[prefix])<SUB>36</SUB>>", "153": "<(IDENTIFIER,groups,int amt = groups[prefix])<SUB>36</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int prevBad = 0; Some(prevBad &lt;= max(0, total - 1)); prevBad++),for (int prevBad = 0; Some(prevBad &lt;= max(0, total - 1)); prevBad++))<SUB>38</SUB>>", "157": "<(&lt;operator&gt;.assignment,int prevBad = 0)<SUB>38</SUB>>", "159": "<(LITERAL,0,int prevBad = 0)<SUB>38</SUB>>", "161": "<(IDENTIFIER,prevBad,prevBad &lt;= max(0, total - 1))<SUB>38</SUB>>", "163": "<(IDENTIFIER,this,max(0, total - 1))<SUB>38</SUB>>", "165": "<(&lt;operator&gt;.subtraction,total - 1)<SUB>38</SUB>>", "167": "<(LITERAL,1,total - 1)<SUB>38</SUB>>", "169": "<(IDENTIFIER,prevBad,prevBad++)<SUB>38</SUB>>", "171": "<(CONTROL_STRUCTURE,for (int fixed = 0; Some(fixed &lt;= min(prevBad, amt)); fixed++),for (int fixed = 0; Some(fixed &lt;= min(prevBad, amt)); fixed++))<SUB>39</SUB>>", "173": "<(&lt;operator&gt;.assignment,int fixed = 0)<SUB>39</SUB>>", "175": "<(LITERAL,0,int fixed = 0)<SUB>39</SUB>>", "177": "<(IDENTIFIER,fixed,fixed &lt;= min(prevBad, amt))<SUB>39</SUB>>", "179": "<(IDENTIFIER,this,min(prevBad, amt))<SUB>39</SUB>>", "181": "<(IDENTIFIER,amt,min(prevBad, amt))<SUB>39</SUB>>", "183": "<(IDENTIFIER,fixed,fixed++)<SUB>39</SUB>>", "185": "<(CONTROL_STRUCTURE,for (int slots = max(1, fixed); Some(slots &lt;= min(amt, total + 1)); slots++),for (int slots = max(1, fixed); Some(slots &lt;= min(amt, total + 1)); slots++))<SUB>40</SUB>>", "187": "<(&lt;operator&gt;.assignment,int slots = max(1, fixed))<SUB>40</SUB>>", "189": "<(max,max(1, fixed))<SUB>40</SUB>>", "191": "<(LITERAL,1,max(1, fixed))<SUB>40</SUB>>", "193": "<(&lt;operator&gt;.lessEqualsThan,slots &lt;= min(amt, total + 1))<SUB>40</SUB>>", "195": "<(min,min(amt, total + 1))<SUB>40</SUB>>", "197": "<(IDENTIFIER,amt,min(amt, total + 1))<SUB>40</SUB>>", "199": "<(IDENTIFIER,total,total + 1)<SUB>40</SUB>>", "201": "<(&lt;operator&gt;.postIncrement,slots++)<SUB>40</SUB>>", "203": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "205": "<(&lt;operator&gt;.assignment,int introduced = amt - slots)<SUB>41</SUB>>", "207": "<(&lt;operator&gt;.subtraction,amt - slots)<SUB>41</SUB>>", "209": "<(IDENTIFIER,slots,amt - slots)<SUB>41</SUB>>", "211": "<(&lt;operator&gt;.assignment,long ways = mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>42</SUB>>", "213": "<(mult,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>42</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,choose[prevBad][fixed])<SUB>43</SUB>>", "217": "<(IDENTIFIER,choose,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>43</SUB>>", "219": "<(IDENTIFIER,fixed,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>43</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,choose[total + 1 - prevBad])<SUB>44</SUB>>", "223": "<(&lt;operator&gt;.subtraction,total + 1 - prevBad)<SUB>44</SUB>>", "225": "<(IDENTIFIER,total,total + 1)<SUB>44</SUB>>", "227": "<(IDENTIFIER,prevBad,total + 1 - prevBad)<SUB>44</SUB>>", "229": "<(IDENTIFIER,slots,slots - fixed)<SUB>44</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,choose[amt - 1][slots - 1])<SUB>45</SUB>>", "233": "<(IDENTIFIER,choose,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>45</SUB>>", "235": "<(IDENTIFIER,amt,amt - 1)<SUB>45</SUB>>", "237": "<(&lt;operator&gt;.subtraction,slots - 1)<SUB>45</SUB>>", "239": "<(LITERAL,1,slots - 1)<SUB>45</SUB>>", "241": "<(IDENTIFIER,fact,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>46</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[prefix - 1][prevBad])<SUB>47</SUB>>", "245": "<(IDENTIFIER,dp,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>47</SUB>>", "247": "<(IDENTIFIER,prefix,prefix - 1)<SUB>47</SUB>>", "249": "<(IDENTIFIER,prevBad,mult(choose[prevBad][fixed], choose[total + 1 - prevBad][slots - fixed], choose[amt - 1][slots - 1], fact[amt], dp[prefix - 1][prevBad]))<SUB>47</SUB>>", "251": "<(&lt;operator&gt;.assignment,int currBad = prevBad + introduced - fixed)<SUB>49</SUB>>", "253": "<(&lt;operator&gt;.subtraction,prevBad + introduced - fixed)<SUB>49</SUB>>", "255": "<(IDENTIFIER,prevBad,prevBad + introduced)<SUB>49</SUB>>", "257": "<(IDENTIFIER,fixed,prevBad + introduced - fixed)<SUB>49</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,dp[prefix][currBad])<SUB>50</SUB>>", "261": "<(IDENTIFIER,dp,dp[prefix][currBad] = (dp[prefix][currBad] + ways) % mod)<SUB>50</SUB>>", "263": "<(IDENTIFIER,currBad,dp[prefix][currBad] = (dp[prefix][currBad] + ways) % mod)<SUB>50</SUB>>", "265": "<(&lt;operator&gt;.addition,dp[prefix][currBad] + ways)<SUB>50</SUB>>", "267": "<(&lt;operator&gt;.indexAccess,dp[prefix])<SUB>50</SUB>>", "269": "<(IDENTIFIER,prefix,dp[prefix][currBad] + ways)<SUB>50</SUB>>", "271": "<(IDENTIFIER,ways,dp[prefix][currBad] + ways)<SUB>50</SUB>>", "273": "<(&lt;operator&gt;.assignmentPlus,total += amt)<SUB>54</SUB>>", "275": "<(IDENTIFIER,amt,total += amt)<SUB>54</SUB>>", "277": "<(IDENTIFIER,out,println(dp[G][0]))<SUB>57</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,dp[G])<SUB>57</SUB>>", "281": "<(IDENTIFIER,G,println(dp[G][0]))<SUB>57</SUB>>", "283": "<(close,close())<SUB>58</SUB>>", "285": "<(MODIFIER,PUBLIC)>", "287": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}