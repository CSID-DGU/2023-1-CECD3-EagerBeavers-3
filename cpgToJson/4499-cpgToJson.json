{"edges": [["21", "23"], ["21", "239"], ["21", "240"], ["21", "241"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "33"], ["23", "37"], ["23", "41"], ["23", "42"], ["23", "6"], ["23", "48"], ["23", "51"], ["23", "54"], ["23", "60"], ["23", "61"], ["23", "68"], ["23", "111"], ["23", "150"], ["23", "151"], ["23", "157"], ["23", "165"], ["23", "170"], ["23", "232"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "39"], ["39", "40"], ["42", "43"], ["42", "44"], ["44", "45"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["51", "5"], ["51", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["56", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "80"], ["78", "81"], ["78", "88"], ["78", "97"], ["81", "82"], ["81", "83"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "96"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["101", "102"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["131", "139"], ["132", "133"], ["132", "138"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "147"], ["147", "148"], ["147", "149"], ["151", "152"], ["151", "153"], ["153", "154"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["157", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "172"], ["170", "175"], ["170", "178"], ["170", "180"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "177"], ["178", "179"], ["180", "181"], ["180", "182"], ["180", "185"], ["180", "188"], ["180", "190"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["190", "191"], ["190", "198"], ["191", "192"], ["191", "197"], ["192", "193"], ["192", "196"], ["193", "194"], ["193", "195"], ["198", "199"], ["198", "206"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["206", "207"], ["206", "208"], ["206", "215"], ["208", "209"], ["208", "210"], ["210", "211"], ["210", "212"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "227"], ["216", "217"], ["216", "224"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["236", "237"], ["236", "238"], ["24", "30"], ["27", "35"], ["33", "39"], ["37", "45"], ["42", "50"], ["48", "52"], ["51", "56"], ["54", "64"], ["61", "70"], ["151", "163"], ["157", "166"], ["165", "172"], ["232", "241"], ["26", "24"], ["28", "27"], ["35", "33"], ["39", "37"], ["44", "42"], ["50", "48"], ["52", "51"], ["56", "54"], ["63", "61"], ["70", "73"], ["73", "84"], ["73", "113"], ["76", "73"], ["113", "116"], ["116", "123"], ["116", "154"], ["119", "116"], ["153", "151"], ["160", "157"], ["166", "165"], ["172", "175"], ["175", "182"], ["175", "235"], ["178", "175"], ["233", "236"], ["236", "232"], ["30", "28"], ["45", "44"], ["64", "63"], ["81", "93"], ["88", "98"], ["123", "126"], ["126", "134"], ["126", "119"], ["129", "126"], ["154", "153"], ["161", "160"], ["182", "185"], ["185", "193"], ["185", "178"], ["188", "185"], ["235", "233"], ["83", "81"], ["90", "88"], ["98", "105"], ["98", "76"], ["101", "76"], ["132", "140"], ["132", "129"], ["139", "129"], ["163", "161"], ["191", "203"], ["191", "188"], ["198", "188"], ["84", "83"], ["91", "90"], ["102", "101"], ["133", "132"], ["140", "147"], ["143", "139"], ["192", "191"], ["199", "212"], ["206", "198"], ["93", "91"], ["104", "102"], ["134", "133"], ["145", "143"], ["193", "192"], ["201", "199"], ["208", "218"], ["215", "206"], ["105", "108"], ["108", "104"], ["147", "145"], ["203", "201"], ["210", "208"], ["216", "229"], ["227", "215"], ["212", "210"], ["217", "224"], ["224", "216"], ["229", "227"], ["218", "221"], ["221", "217"], ["21", "26"], ["22", "241"], ["24", "241"], ["27", "241"], ["27", "241"], ["33", "241"], ["37", "241"], ["37", "241"], ["42", "241"], ["42", "241"], ["48", "241"], ["52", "241"], ["51", "241"], ["51", "241"], ["54", "241"], ["54", "241"], ["54", "241"], ["61", "241"], ["61", "241"], ["70", "241"], ["73", "241"], ["73", "241"], ["113", "241"], ["116", "241"], ["116", "241"], ["154", "241"], ["153", "241"], ["151", "241"], ["151", "241"], ["157", "241"], ["160", "241"], ["157", "241"], ["157", "241"], ["165", "241"], ["165", "241"], ["172", "241"], ["175", "241"], ["175", "241"], ["175", "241"], ["232", "241"], ["232", "241"], ["232", "241"], ["182", "241"], ["185", "241"], ["185", "241"], ["185", "241"], ["178", "241"], ["192", "241"], ["191", "241"], ["191", "241"], ["198", "241"], ["210", "241"], ["217", "241"], ["217", "241"], ["216", "241"], ["216", "241"], ["215", "241"], ["215", "241"], ["206", "241"], ["198", "241"], ["198", "241"], ["188", "241"], ["119", "241"], ["133", "241"], ["132", "241"], ["132", "241"], ["139", "241"], ["145", "241"], ["139", "241"], ["139", "241"], ["129", "241"], ["83", "241"], ["81", "241"], ["81", "241"], ["91", "241"], ["91", "241"], ["90", "241"], ["88", "241"], ["88", "241"], ["98", "241"], ["98", "241"], ["98", "241"], ["105", "241"], ["104", "241"], ["108", "241"], ["104", "241"], ["101", "241"], ["101", "241"], ["76", "241"], ["157", "241"], ["206", "241"], ["21", "22"], ["21", "24"], ["35", "33"], ["39", "37"], ["44", "42"], ["21", "48"], ["56", "54"], ["56", "54"], ["56", "54"], ["63", "61"], ["63", "61"], ["153", "151"], ["21", "165"], ["24", "27"], ["21", "27"], ["48", "51"], ["21", "51"], ["52", "51"], ["21", "70"], ["21", "113"], ["21", "157"], ["151", "157"], ["160", "157"], ["160", "157"], ["21", "172"], ["157", "232"], ["27", "35"], ["21", "35"], ["35", "39"], ["21", "39"], ["45", "44"], ["45", "44"], ["39", "52"], ["21", "52"], ["51", "56"], ["21", "56"], ["64", "63"], ["64", "63"], ["21", "63"], ["70", "73"], ["76", "73"], ["21", "73"], ["33", "73"], ["21", "76"], ["84", "76"], ["83", "81"], ["83", "81"], ["90", "88"], ["90", "88"], ["113", "116"], ["119", "116"], ["21", "116"], ["64", "116"], ["116", "119"], ["134", "119"], ["147", "119"], ["21", "119"], ["21", "123"], ["154", "153"], ["154", "153"], ["21", "160"], ["172", "175"], ["178", "175"], ["21", "175"], ["61", "175"], ["229", "175"], ["126", "175"], ["175", "178"], ["193", "178"], ["229", "178"], ["21", "178"], ["21", "182"], ["21", "45"], ["37", "45"], ["21", "64"], ["45", "64"], ["123", "126"], ["129", "126"], ["21", "126"], ["61", "126"], ["134", "129"], ["145", "129"], ["21", "129"], ["42", "139"], ["21", "154"], ["116", "154"], ["182", "185"], ["188", "185"], ["21", "185"], ["154", "185"], ["193", "188"], ["212", "188"], ["21", "188"], ["206", "198"], ["206", "198"], ["206", "198"], ["84", "83"], ["84", "83"], ["21", "83"], ["91", "90"], ["91", "90"], ["21", "90"], ["81", "98"], ["21", "98"], ["88", "98"], ["42", "101"], ["133", "132"], ["133", "132"], ["21", "132"], ["192", "191"], ["192", "191"], ["21", "191"], ["54", "84"], ["91", "84"], ["21", "84"], ["73", "84"], ["84", "91"], ["21", "91"], ["84", "91"], ["134", "133"], ["134", "133"], ["21", "133"], ["193", "192"], ["193", "192"], ["21", "192"], ["21", "206"], ["157", "206"], ["198", "206"], ["215", "206"], ["215", "206"], ["84", "93"], ["21", "93"], ["105", "104"], ["105", "104"], ["108", "104"], ["108", "104"], ["126", "134"], ["21", "134"], ["116", "134"], ["147", "134"], ["134", "145"], ["21", "145"], ["147", "145"], ["147", "145"], ["175", "193"], ["229", "193"], ["21", "193"], ["185", "193"], ["193", "201"], ["21", "201"], ["203", "201"], ["203", "201"], ["216", "215"], ["216", "215"], ["42", "215"], ["21", "105"], ["98", "105"], ["21", "108"], ["98", "108"], ["21", "147"], ["134", "147"], ["21", "203"], ["193", "203"], ["201", "210"], ["21", "210"], ["212", "210"], ["212", "210"], ["157", "216"], ["42", "216"], ["139", "216"], ["21", "212"], ["203", "212"], ["157", "217"], ["42", "217"], ["175", "229"], ["21", "229"], ["210", "229"], ["73", "73"], ["73", "98"], ["73", "81"], ["73", "84"], ["73", "76"], ["73", "91"], ["73", "93"], ["73", "90"], ["73", "88"], ["73", "83"], ["116", "119"], ["116", "116"], ["116", "123"], ["116", "126"], ["175", "178"], ["175", "185"], ["175", "182"], ["175", "175"], ["126", "132"], ["126", "129"], ["126", "134"], ["126", "126"], ["126", "133"], ["185", "188"], ["185", "192"], ["185", "185"], ["185", "191"], ["185", "193"], ["98", "102"], ["98", "104"], ["98", "101"], ["98", "108"], ["98", "105"], ["132", "145"], ["132", "139"], ["132", "140"], ["132", "143"], ["132", "147"], ["191", "215"], ["191", "198"], ["191", "206"], ["191", "208"], ["191", "212"], ["191", "221"], ["191", "224"], ["191", "201"], ["191", "210"], ["191", "217"], ["191", "199"], ["191", "229"], ["191", "216"], ["191", "203"], ["191", "227"], ["191", "218"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(LOCAL,int n: int)<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>4</SUB>>", "35": "<(nextInt,nextInt())<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>4</SUB>>", "39": "<(nextInt,nextInt())<SUB>4</SUB>>", "41": "<(LOCAL,int[] g: int[])<SUB>4</SUB>>", "43": "<(IDENTIFIER,g,int[] g = new int[1 &lt;&lt; m])<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>4</SUB>>", "47": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>4</SUB>>", "48": "<(&lt;operator&gt;.assignment,StringBuffer s = new StringBuffer(sc.next()))<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.alloc,new StringBuffer(sc.next()))<SUB>5</SUB>>", "5": "<(IDENTIFIER,s,new StringBuffer(sc.next()))<SUB>5</SUB>>", "53": "<(IDENTIFIER,sc,next())<SUB>5</SUB>>", "55": "<(IDENTIFIER,s,s = s.insert(0, 'A'))<SUB>6</SUB>>", "57": "<(IDENTIFIER,s,s.insert(0, 'A'))<SUB>6</SUB>>", "59": "<(LITERAL,'A',s.insert(0, 'A'))<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,int D = (1 &lt;&lt; m) - 1)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; m) - 1)<SUB>7</SUB>>", "65": "<(LITERAL,1,1 &lt;&lt; m)<SUB>7</SUB>>", "67": "<(LITERAL,1,(1 &lt;&lt; m) - 1)<SUB>7</SUB>>", "69": "<(LOCAL,int i: int)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,int i = 1)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "77": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "79": "<(LOCAL,int x: int)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,int x = s.charAt(i) - 'a')<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.subtraction,s.charAt(i) - 'a')<SUB>10</SUB>>", "85": "<(IDENTIFIER,s,s.charAt(i))<SUB>10</SUB>>", "87": "<(LITERAL,'a',s.charAt(i) - 'a')<SUB>10</SUB>>", "89": "<(IDENTIFIER,y,int y = s.charAt(i + 1) - 'a')<SUB>10</SUB>>", "91": "<(charAt,s.charAt(i + 1))<SUB>10</SUB>>", "93": "<(&lt;operator&gt;.addition,i + 1)<SUB>10</SUB>>", "95": "<(LITERAL,1,i + 1)<SUB>10</SUB>>", "97": "<(CONTROL_STRUCTURE,if (x != y),if (x != y))<SUB>11</SUB>>", "99": "<(IDENTIFIER,x,x != y)<SUB>11</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,g[1 &lt;&lt; x | 1 &lt;&lt; y]++)<SUB>12</SUB>>", "103": "<(IDENTIFIER,g,g[1 &lt;&lt; x | 1 &lt;&lt; y]++)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; x)<SUB>12</SUB>>", "107": "<(IDENTIFIER,x,1 &lt;&lt; x)<SUB>12</SUB>>", "109": "<(LITERAL,1,1 &lt;&lt; y)<SUB>12</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>14</SUB>>", "115": "<(LITERAL,0,int j = 0)<SUB>14</SUB>>", "117": "<(IDENTIFIER,j,j &lt; m)<SUB>14</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,j++)<SUB>14</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= D); i++),for (int i = 0; Some(i &lt;= D); i++))<SUB>15</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>15</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>15</SUB>>", "127": "<(IDENTIFIER,i,i &lt;= D)<SUB>15</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>15</SUB>>", "131": "<(CONTROL_STRUCTURE,if ((i &gt;&gt; j &amp; 1) != 0),if ((i &gt;&gt; j &amp; 1) != 0))<SUB>16</SUB>>", "133": "<(&lt;operator&gt;.and,i &gt;&gt; j &amp; 1)<SUB>16</SUB>>", "135": "<(IDENTIFIER,i,i &gt;&gt; j)<SUB>16</SUB>>", "137": "<(LITERAL,1,i &gt;&gt; j &amp; 1)<SUB>16</SUB>>", "139": "<(&lt;operator&gt;.assignmentPlus,g[i] += g[i ^ 1 &lt;&lt; j])<SUB>17</SUB>>", "141": "<(IDENTIFIER,g,g[i] += g[i ^ 1 &lt;&lt; j])<SUB>17</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,g[i ^ 1 &lt;&lt; j])<SUB>17</SUB>>", "145": "<(&lt;operator&gt;.xor,i ^ 1 &lt;&lt; j)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>17</SUB>>", "149": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>17</SUB>>", "151": "<(&lt;operator&gt;.assignment,int[] f = new int[1 &lt;&lt; m])<SUB>18</SUB>>", "153": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; m])>", "155": "<(LITERAL,1,1 &lt;&lt; m)<SUB>18</SUB>>", "157": "<(fill,fill(f, Integer.MAX_VALUE / 2))<SUB>19</SUB>>", "159": "<(IDENTIFIER,f,fill(f, Integer.MAX_VALUE / 2))<SUB>19</SUB>>", "161": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>19</SUB>>", "163": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>19</SUB>>", "165": "<(&lt;operator&gt;.assignment,f[0] = 0)<SUB>20</SUB>>", "167": "<(IDENTIFIER,f,f[0] = 0)<SUB>20</SUB>>", "169": "<(LITERAL,0,f[0] = 0)<SUB>20</SUB>>", "171": "<(LOCAL,int i: int)<SUB>21</SUB>>", "173": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "175": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= D)<SUB>21</SUB>>", "177": "<(IDENTIFIER,D,i &lt;= D)<SUB>21</SUB>>", "179": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "181": "<(LOCAL,int j: int)<SUB>22</SUB>>", "183": "<(IDENTIFIER,j,int j = 0)<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>22</SUB>>", "187": "<(IDENTIFIER,m,j &lt; m)<SUB>22</SUB>>", "189": "<(IDENTIFIER,j,j++)<SUB>22</SUB>>", "191": "<(&lt;operator&gt;.equals,(i &gt;&gt; j &amp; 1) == 0)<SUB>23</SUB>>", "193": "<(&lt;operator&gt;.logicalShiftRight,i &gt;&gt; j)<SUB>23</SUB>>", "195": "<(IDENTIFIER,j,i &gt;&gt; j)<SUB>23</SUB>>", "197": "<(LITERAL,0,(i &gt;&gt; j &amp; 1) == 0)<SUB>23</SUB>>", "199": "<(&lt;operator&gt;.indexAccess,f[i | 1 &lt;&lt; j])<SUB>24</SUB>>", "201": "<(&lt;operator&gt;.or,i | 1 &lt;&lt; j)<SUB>24</SUB>>", "203": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>24</SUB>>", "205": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>24</SUB>>", "207": "<(IDENTIFIER,Math,Math.min(f[i | 1 &lt;&lt; j], f[i] + g[D] - g[i] - g[D ^ i]))<SUB>24</SUB>>", "209": "<(IDENTIFIER,f,Math.min(f[i | 1 &lt;&lt; j], f[i] + g[D] - g[i] - g[D ^ i]))<SUB>24</SUB>>", "211": "<(IDENTIFIER,i,i | 1 &lt;&lt; j)<SUB>24</SUB>>", "213": "<(LITERAL,1,1 &lt;&lt; j)<SUB>24</SUB>>", "215": "<(&lt;operator&gt;.subtraction,f[i] + g[D] - g[i] - g[D ^ i])<SUB>24</SUB>>", "217": "<(&lt;operator&gt;.addition,f[i] + g[D])<SUB>24</SUB>>", "219": "<(IDENTIFIER,f,f[i] + g[D])<SUB>24</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,g[D])<SUB>24</SUB>>", "223": "<(IDENTIFIER,D,f[i] + g[D])<SUB>24</SUB>>", "225": "<(IDENTIFIER,g,f[i] + g[D] - g[i])<SUB>24</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,g[D ^ i])<SUB>24</SUB>>", "229": "<(&lt;operator&gt;.xor,D ^ i)<SUB>24</SUB>>", "231": "<(IDENTIFIER,i,D ^ i)<SUB>24</SUB>>", "233": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>25</SUB>>", "235": "<(FIELD_IDENTIFIER,out,out)<SUB>25</SUB>>", "237": "<(IDENTIFIER,f,System.out.println(f[D]))<SUB>25</SUB>>", "239": "<(MODIFIER,PUBLIC)>", "241": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}