{"edges": [["21", "23"], ["21", "321"], ["21", "322"], ["21", "323"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "44"], ["23", "45"], ["23", "51"], ["23", "52"], ["23", "58"], ["23", "59"], ["23", "68"], ["23", "69"], ["23", "75"], ["23", "80"], ["23", "107"], ["23", "108"], ["23", "119"], ["23", "137"], ["23", "201"], ["23", "208"], ["23", "289"], ["23", "290"], ["23", "293"], ["23", "316"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["71", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["75", "79"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["80", "85"], ["80", "88"], ["80", "90"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["90", "102"], ["91", "92"], ["91", "95"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "101"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "106"], ["103", "104"], ["103", "105"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["119", "124"], ["119", "127"], ["119", "129"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["130", "136"], ["131", "132"], ["131", "135"], ["132", "133"], ["132", "134"], ["137", "138"], ["137", "139"], ["137", "142"], ["137", "147"], ["137", "149"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["149", "150"], ["150", "151"], ["150", "152"], ["150", "155"], ["150", "158"], ["150", "160"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["160", "174"], ["160", "194"], ["161", "162"], ["161", "167"], ["162", "163"], ["162", "166"], ["163", "164"], ["163", "165"], ["167", "168"], ["167", "173"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["178", "179"], ["179", "180"], ["179", "185"], ["180", "181"], ["180", "184"], ["181", "182"], ["181", "183"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "200"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["208", "209"], ["208", "210"], ["208", "213"], ["208", "216"], ["208", "218"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["216", "217"], ["218", "219"], ["219", "220"], ["219", "221"], ["219", "224"], ["219", "227"], ["219", "229"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["229", "230"], ["230", "231"], ["230", "232"], ["230", "235"], ["230", "240"], ["230", "242"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["240", "241"], ["242", "243"], ["242", "276"], ["243", "244"], ["243", "255"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "251"], ["248", "249"], ["248", "250"], ["252", "253"], ["252", "254"], ["255", "256"], ["255", "271"], ["256", "257"], ["256", "270"], ["257", "258"], ["257", "263"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "262"], ["263", "264"], ["263", "269"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["271", "272"], ["271", "275"], ["272", "273"], ["272", "274"], ["276", "277"], ["276", "288"], ["277", "278"], ["277", "285"], ["278", "279"], ["278", "280"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["285", "286"], ["285", "287"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["293", "298"], ["293", "301"], ["293", "303"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "300"], ["301", "302"], ["303", "304"], ["303", "313"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "312"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["313", "314"], ["313", "315"], ["316", "317"], ["316", "320"], ["317", "318"], ["317", "319"], ["24", "31"], ["27", "40"], ["38", "42"], ["41", "49"], ["45", "56"], ["52", "62"], ["59", "72"], ["69", "76"], ["75", "82"], ["108", "121"], ["201", "210"], ["290", "295"], ["316", "323"], ["26", "24"], ["40", "38"], ["42", "41"], ["47", "45"], ["54", "52"], ["61", "59"], ["71", "69"], ["76", "75"], ["82", "85"], ["85", "92"], ["85", "112"], ["88", "85"], ["110", "108"], ["121", "124"], ["124", "132"], ["124", "139"], ["127", "124"], ["139", "144"], ["142", "152"], ["142", "203"], ["147", "144"], ["202", "201"], ["210", "213"], ["213", "221"], ["213", "290"], ["216", "213"], ["295", "298"], ["298", "309"], ["298", "319"], ["301", "298"], ["317", "316"], ["29", "36"], ["32", "27"], ["49", "47"], ["56", "54"], ["62", "65"], ["65", "61"], ["72", "71"], ["91", "103"], ["102", "88"], ["111", "116"], ["116", "110"], ["130", "127"], ["144", "142"], ["203", "202"], ["304", "313"], ["313", "301"], ["319", "317"], ["31", "29"], ["34", "32"], ["92", "98"], ["95", "91"], ["103", "102"], ["112", "111"], ["131", "130"], ["152", "155"], ["155", "163"], ["155", "147"], ["158", "155"], ["221", "224"], ["224", "232"], ["224", "216"], ["227", "224"], ["306", "304"], ["36", "34"], ["96", "95"], ["132", "131"], ["161", "175"], ["194", "158"], ["307", "306"], ["98", "96"], ["162", "170"], ["167", "161"], ["175", "181"], ["175", "196"], ["195", "194"], ["232", "236"], ["235", "248"], ["235", "227"], ["240", "236"], ["309", "307"], ["163", "162"], ["168", "167"], ["179", "196"], ["196", "195"], ["236", "235"], ["243", "281"], ["276", "240"], ["170", "168"], ["180", "188"], ["185", "179"], ["244", "260"], ["255", "243"], ["277", "276"], ["181", "180"], ["186", "191"], ["191", "185"], ["245", "252"], ["252", "244"], ["256", "272"], ["271", "255"], ["278", "285"], ["285", "277"], ["188", "186"], ["247", "245"], ["257", "256"], ["272", "271"], ["280", "278"], ["248", "247"], ["258", "266"], ["263", "257"], ["281", "280"], ["260", "258"], ["264", "263"], ["266", "264"], ["21", "26"], ["22", "323"], ["24", "323"], ["29", "323"], ["32", "323"], ["32", "323"], ["32", "323"], ["27", "323"], ["38", "323"], ["42", "323"], ["41", "323"], ["41", "323"], ["45", "323"], ["52", "323"], ["54", "323"], ["56", "323"], ["54", "323"], ["52", "323"], ["52", "323"], ["59", "323"], ["61", "323"], ["59", "323"], ["59", "323"], ["69", "323"], ["69", "323"], ["69", "323"], ["75", "323"], ["75", "323"], ["108", "323"], ["110", "323"], ["110", "323"], ["108", "323"], ["108", "323"], ["124", "323"], ["139", "323"], ["142", "323"], ["142", "323"], ["201", "323"], ["201", "323"], ["210", "323"], ["213", "323"], ["213", "323"], ["290", "323"], ["295", "323"], ["298", "323"], ["298", "323"], ["298", "323"], ["316", "323"], ["316", "323"], ["316", "323"], ["304", "323"], ["304", "323"], ["313", "323"], ["301", "323"], ["224", "323"], ["216", "323"], ["232", "323"], ["236", "323"], ["235", "323"], ["235", "323"], ["227", "323"], ["257", "323"], ["257", "323"], ["256", "323"], ["255", "323"], ["255", "323"], ["243", "323"], ["243", "323"], ["280", "323"], ["276", "323"], ["276", "323"], ["240", "323"], ["147", "323"], ["161", "323"], ["161", "323"], ["175", "323"], ["179", "323"], ["179", "323"], ["194", "323"], ["194", "323"], ["158", "323"], ["130", "323"], ["130", "323"], ["127", "323"], ["95", "323"], ["91", "323"], ["91", "323"], ["102", "323"], ["102", "323"], ["88", "323"], ["21", "22"], ["21", "24"], ["21", "38"], ["47", "45"], ["47", "45"], ["54", "52"], ["54", "52"], ["61", "59"], ["61", "59"], ["71", "69"], ["21", "75"], ["110", "108"], ["110", "108"], ["21", "201"], ["21", "290"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["42", "41"], ["21", "82"], ["21", "121"], ["21", "139"], ["21", "210"], ["21", "295"], ["290", "316"], ["313", "316"], ["21", "316"], ["21", "29"], ["21", "37"], ["27", "42"], ["21", "42"], ["21", "47"], ["49", "47"], ["47", "54"], ["21", "54"], ["56", "54"], ["45", "61"], ["21", "61"], ["21", "71"], ["45", "71"], ["82", "85"], ["88", "85"], ["21", "85"], ["45", "85"], ["98", "88"], ["21", "88"], ["95", "91"], ["95", "91"], ["52", "102"], ["21", "102"], ["112", "110"], ["112", "110"], ["21", "110"], ["121", "124"], ["127", "124"], ["21", "124"], ["112", "124"], ["124", "127"], ["21", "127"], ["21", "130"], ["139", "142"], ["147", "142"], ["21", "142"], ["144", "142"], ["144", "142"], ["142", "147"], ["170", "147"], ["188", "147"], ["21", "147"], ["210", "213"], ["216", "213"], ["21", "213"], ["144", "213"], ["235", "213"], ["224", "216"], ["21", "216"], ["295", "298"], ["301", "298"], ["21", "298"], ["213", "298"], ["298", "301"], ["21", "301"], ["52", "313"], ["21", "313"], ["256", "313"], ["29", "32"], ["21", "32"], ["41", "49"], ["21", "49"], ["49", "56"], ["21", "56"], ["45", "62"], ["21", "62"], ["21", "65"], ["45", "65"], ["21", "72"], ["45", "72"], ["69", "102"], ["91", "102"], ["112", "111"], ["112", "111"], ["21", "111"], ["112", "116"], ["21", "116"], ["124", "144"], ["155", "144"], ["21", "144"], ["21", "152"], ["21", "221"], ["290", "304"], ["313", "304"], ["21", "304"], ["304", "313"], ["69", "95"], ["21", "95"], ["85", "112"], ["21", "112"], ["152", "155"], ["158", "155"], ["21", "155"], ["144", "155"], ["175", "158"], ["191", "158"], ["21", "158"], ["52", "194"], ["21", "194"], ["221", "224"], ["227", "224"], ["21", "224"], ["213", "224"], ["224", "227"], ["21", "227"], ["161", "194"], ["179", "194"], ["21", "232"], ["85", "98"], ["21", "98"], ["155", "175"], ["21", "175"], ["232", "235"], ["240", "235"], ["21", "235"], ["224", "235"], ["213", "235"], ["21", "240"], ["260", "240"], ["255", "243"], ["255", "243"], ["256", "276"], ["21", "276"], ["298", "309"], ["21", "309"], ["161", "179"], ["232", "236"], ["240", "236"], ["21", "236"], ["224", "236"], ["276", "243"], ["243", "276"], ["142", "170"], ["188", "170"], ["21", "170"], ["256", "255"], ["256", "255"], ["175", "191"], ["21", "191"], ["224", "252"], ["21", "252"], ["232", "252"], ["240", "252"], ["257", "256"], ["257", "256"], ["52", "256"], ["21", "256"], ["21", "285"], ["224", "285"], ["260", "285"], ["170", "188"], ["21", "188"], ["21", "247"], ["232", "247"], ["240", "247"], ["69", "257"], ["21", "280"], ["260", "280"], ["21", "248"], ["232", "248"], ["240", "248"], ["21", "281"], ["260", "281"], ["21", "260"], ["232", "260"], ["240", "260"], ["21", "266"], ["224", "266"], ["260", "266"], ["85", "96"], ["85", "98"], ["85", "102"], ["85", "85"], ["85", "103"], ["85", "95"], ["85", "92"], ["85", "91"], ["85", "88"], ["124", "131"], ["124", "132"], ["124", "130"], ["124", "127"], ["124", "124"], ["142", "144"], ["142", "152"], ["142", "155"], ["142", "142"], ["142", "147"], ["213", "213"], ["213", "221"], ["213", "224"], ["213", "216"], ["298", "307"], ["298", "309"], ["298", "301"], ["298", "298"], ["298", "306"], ["298", "304"], ["298", "313"], ["155", "167"], ["155", "161"], ["155", "163"], ["155", "196"], ["155", "162"], ["155", "168"], ["155", "170"], ["155", "195"], ["155", "194"], ["155", "155"], ["155", "158"], ["155", "175"], ["224", "232"], ["224", "224"], ["224", "235"], ["224", "236"], ["224", "227"], ["175", "188"], ["175", "179"], ["175", "185"], ["175", "181"], ["175", "191"], ["175", "186"], ["175", "180"], ["235", "240"], ["235", "257"], ["235", "272"], ["235", "244"], ["235", "243"], ["235", "245"], ["235", "256"], ["235", "264"], ["235", "247"], ["235", "255"], ["235", "281"], ["235", "285"], ["235", "258"], ["235", "276"], ["235", "280"], ["235", "252"], ["235", "277"], ["235", "235"], ["235", "236"], ["235", "260"], ["235", "263"], ["235", "278"], ["235", "271"], ["235", "248"], ["235", "266"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "5": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>3</SUB>>", "43": "<(IDENTIFIER,br,readLine())<SUB>3</SUB>>", "45": "<(&lt;operator&gt;.assignment,int n = parseInt(st.nextToken()))<SUB>4</SUB>>", "47": "<(parseInt,parseInt(st.nextToken()))<SUB>4</SUB>>", "49": "<(nextToken,nextToken())<SUB>4</SUB>>", "51": "<(LOCAL,int mod: int)<SUB>5</SUB>>", "53": "<(IDENTIFIER,mod,int mod = parseInt(st.nextToken()))<SUB>5</SUB>>", "55": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>5</SUB>>", "57": "<(IDENTIFIER,st,nextToken())<SUB>5</SUB>>", "59": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n + 2][n + 1])<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.alloc,new long[n + 2][n + 1])>", "63": "<(IDENTIFIER,n,n + 2)<SUB>6</SUB>>", "65": "<(&lt;operator&gt;.addition,n + 1)<SUB>6</SUB>>", "67": "<(LITERAL,1,n + 1)<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.assignment,long[] pow = new long[n + 1])<SUB>7</SUB>>", "71": "<(&lt;operator&gt;.alloc,new long[n + 1])>", "73": "<(IDENTIFIER,n,n + 1)<SUB>7</SUB>>", "75": "<(&lt;operator&gt;.assignment,pow[0] = 1)<SUB>8</SUB>>", "77": "<(IDENTIFIER,pow,pow[0] = 1)<SUB>8</SUB>>", "79": "<(LITERAL,1,pow[0] = 1)<SUB>8</SUB>>", "81": "<(LOCAL,int i: int)<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,int i = 1)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>9</SUB>>", "87": "<(IDENTIFIER,n,i &lt;= n)<SUB>9</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.assignment,pow[i] = pow[i - 1] * 2)<SUB>10</SUB>>", "93": "<(IDENTIFIER,pow,pow[i] = pow[i - 1] * 2)<SUB>10</SUB>>", "95": "<(&lt;operator&gt;.multiplication,pow[i - 1] * 2)<SUB>10</SUB>>", "97": "<(IDENTIFIER,pow,pow[i - 1] * 2)<SUB>10</SUB>>", "99": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "101": "<(LITERAL,2,pow[i - 1] * 2)<SUB>10</SUB>>", "103": "<(&lt;operator&gt;.indexAccess,pow[i])<SUB>11</SUB>>", "105": "<(IDENTIFIER,i,pow[i] %= mod)<SUB>11</SUB>>", "107": "<(LOCAL,long[][] choose: long[][])<SUB>13</SUB>>", "109": "<(IDENTIFIER,choose,long[][] choose = new long[n * 2 + 1][n + 1])<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.addition,n * 2 + 1)<SUB>13</SUB>>", "113": "<(IDENTIFIER,n,n * 2)<SUB>13</SUB>>", "115": "<(LITERAL,1,n * 2 + 1)<SUB>13</SUB>>", "117": "<(IDENTIFIER,n,n + 1)<SUB>13</SUB>>", "119": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); i++),for (int i = 0; Some(i &lt;= n); i++))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>14</SUB>>", "123": "<(LITERAL,0,int i = 0)<SUB>14</SUB>>", "125": "<(IDENTIFIER,i,i &lt;= n)<SUB>14</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,choose[i][i])<SUB>15</SUB>>", "133": "<(IDENTIFIER,choose,choose[i][i] = 1)<SUB>15</SUB>>", "135": "<(IDENTIFIER,i,choose[i][i] = 1)<SUB>15</SUB>>", "137": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n * 2); i++),for (int i = 1; Some(i &lt;= n * 2); i++))<SUB>17</SUB>>", "139": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>17</SUB>>", "141": "<(LITERAL,1,int i = 1)<SUB>17</SUB>>", "143": "<(IDENTIFIER,i,i &lt;= n * 2)<SUB>17</SUB>>", "145": "<(IDENTIFIER,n,n * 2)<SUB>17</SUB>>", "147": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "149": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "151": "<(LOCAL,int j: int)<SUB>18</SUB>>", "153": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "155": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>18</SUB>>", "157": "<(IDENTIFIER,n,j &lt;= n)<SUB>18</SUB>>", "159": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "161": "<(&lt;operator&gt;.assignment,choose[i][j] = choose[i - 1][j])<SUB>19</SUB>>", "163": "<(&lt;operator&gt;.indexAccess,choose[i])<SUB>19</SUB>>", "165": "<(IDENTIFIER,i,choose[i][j] = choose[i - 1][j])<SUB>19</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,choose[i - 1][j])<SUB>19</SUB>>", "169": "<(IDENTIFIER,choose,choose[i][j] = choose[i - 1][j])<SUB>19</SUB>>", "171": "<(IDENTIFIER,i,i - 1)<SUB>19</SUB>>", "173": "<(IDENTIFIER,j,choose[i][j] = choose[i - 1][j])<SUB>19</SUB>>", "175": "<(&lt;operator&gt;.greaterThan,j &gt; 0)<SUB>20</SUB>>", "177": "<(LITERAL,0,j &gt; 0)<SUB>20</SUB>>", "179": "<(&lt;operator&gt;.assignmentPlus,choose[i][j] += choose[i - 1][j - 1])<SUB>21</SUB>>", "181": "<(&lt;operator&gt;.indexAccess,choose[i])<SUB>21</SUB>>", "183": "<(IDENTIFIER,i,choose[i][j] += choose[i - 1][j - 1])<SUB>21</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,choose[i - 1][j - 1])<SUB>21</SUB>>", "187": "<(IDENTIFIER,choose,choose[i][j] += choose[i - 1][j - 1])<SUB>21</SUB>>", "189": "<(IDENTIFIER,i,i - 1)<SUB>21</SUB>>", "191": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>21</SUB>>", "193": "<(LITERAL,1,j - 1)<SUB>21</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,choose[i][j])<SUB>23</SUB>>", "197": "<(IDENTIFIER,choose,choose[i][j] %= mod)<SUB>23</SUB>>", "199": "<(IDENTIFIER,j,choose[i][j] %= mod)<SUB>23</SUB>>", "201": "<(&lt;operator&gt;.assignment,dp[0][0] = 1)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>26</SUB>>", "205": "<(LITERAL,0,dp[0][0] = 1)<SUB>26</SUB>>", "207": "<(LITERAL,1,dp[0][0] = 1)<SUB>26</SUB>>", "209": "<(LOCAL,int i: int)<SUB>27</SUB>>", "211": "<(IDENTIFIER,i,int i = 0)<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>27</SUB>>", "215": "<(IDENTIFIER,n,i &lt; n)<SUB>27</SUB>>", "217": "<(IDENTIFIER,i,i++)<SUB>27</SUB>>", "219": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= i); j++),for (int j = 0; Some(j &lt;= i); j++))<SUB>28</SUB>>", "221": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>28</SUB>>", "223": "<(LITERAL,0,int j = 0)<SUB>28</SUB>>", "225": "<(IDENTIFIER,j,j &lt;= i)<SUB>28</SUB>>", "227": "<(&lt;operator&gt;.postIncrement,j++)<SUB>28</SUB>>", "229": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "231": "<(LOCAL,int k: int)<SUB>29</SUB>>", "233": "<(IDENTIFIER,k,int k = 1)<SUB>29</SUB>>", "235": "<(&lt;operator&gt;.lessEqualsThan,k + i &lt;= n)<SUB>29</SUB>>", "237": "<(IDENTIFIER,k,k + i)<SUB>29</SUB>>", "239": "<(IDENTIFIER,n,k + i &lt;= n)<SUB>29</SUB>>", "241": "<(IDENTIFIER,k,k++)<SUB>29</SUB>>", "243": "<(&lt;operator&gt;.assignmentPlus,dp[i + k + 1][j + k] += (pow[k - 1] * choose[j + k][k]) % mod * dp[i][j])<SUB>30</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1])<SUB>30</SUB>>", "247": "<(&lt;operator&gt;.addition,i + k + 1)<SUB>30</SUB>>", "249": "<(IDENTIFIER,i,i + k)<SUB>30</SUB>>", "251": "<(LITERAL,1,i + k + 1)<SUB>30</SUB>>", "253": "<(IDENTIFIER,j,j + k)<SUB>30</SUB>>", "255": "<(&lt;operator&gt;.multiplication,(pow[k - 1] * choose[j + k][k]) % mod * dp[i][j])<SUB>30</SUB>>", "257": "<(&lt;operator&gt;.multiplication,pow[k - 1] * choose[j + k][k])<SUB>30</SUB>>", "259": "<(IDENTIFIER,pow,pow[k - 1] * choose[j + k][k])<SUB>30</SUB>>", "261": "<(IDENTIFIER,k,k - 1)<SUB>30</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,choose[j + k][k])<SUB>30</SUB>>", "265": "<(IDENTIFIER,choose,pow[k - 1] * choose[j + k][k])<SUB>30</SUB>>", "267": "<(IDENTIFIER,j,j + k)<SUB>30</SUB>>", "269": "<(IDENTIFIER,k,pow[k - 1] * choose[j + k][k])<SUB>30</SUB>>", "271": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>30</SUB>>", "273": "<(IDENTIFIER,dp,(pow[k - 1] * choose[j + k][k]) % mod * dp[i][j])<SUB>30</SUB>>", "275": "<(IDENTIFIER,j,(pow[k - 1] * choose[j + k][k]) % mod * dp[i][j])<SUB>30</SUB>>", "277": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1][j + k])<SUB>31</SUB>>", "279": "<(IDENTIFIER,dp,dp[i + k + 1][j + k] %= mod)<SUB>31</SUB>>", "281": "<(&lt;operator&gt;.addition,i + k)<SUB>31</SUB>>", "283": "<(IDENTIFIER,k,i + k)<SUB>31</SUB>>", "285": "<(&lt;operator&gt;.addition,j + k)<SUB>31</SUB>>", "287": "<(IDENTIFIER,k,j + k)<SUB>31</SUB>>", "289": "<(LOCAL,long ans: long)<SUB>35</SUB>>", "291": "<(IDENTIFIER,ans,long ans = 0)<SUB>35</SUB>>", "293": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= n); j++),for (int j = 0; Some(j &lt;= n); j++))<SUB>36</SUB>>", "295": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "297": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "299": "<(IDENTIFIER,j,j &lt;= n)<SUB>36</SUB>>", "301": "<(&lt;operator&gt;.postIncrement,j++)<SUB>36</SUB>>", "303": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>36</SUB>>", "305": "<(IDENTIFIER,ans,ans += dp[n + 1][j])<SUB>37</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,dp[n + 1])<SUB>37</SUB>>", "309": "<(&lt;operator&gt;.addition,n + 1)<SUB>37</SUB>>", "311": "<(LITERAL,1,n + 1)<SUB>37</SUB>>", "313": "<(&lt;operators&gt;.assignmentModulo,ans %= mod)<SUB>38</SUB>>", "315": "<(IDENTIFIER,mod,ans %= mod)<SUB>38</SUB>>", "317": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "319": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "321": "<(MODIFIER,PUBLIC)>", "323": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}