{"edges": [["17", "19"], ["17", "391"], ["17", "392"], ["17", "393"], ["19", "20"], ["19", "22"], ["19", "23"], ["19", "24"], ["19", "25"], ["19", "29"], ["19", "33"], ["19", "37"], ["19", "389"], ["20", "21"], ["25", "26"], ["25", "27"], ["27", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["33", "34"], ["33", "35"], ["35", "36"], ["37", "38"], ["37", "43"], ["37", "357"], ["38", "39"], ["38", "42"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["43", "53"], ["43", "54"], ["43", "60"], ["43", "104"], ["43", "148"], ["43", "318"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "51"], ["47", "52"], ["48", "49"], ["48", "50"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["56", "59"], ["60", "61"], ["60", "62"], ["60", "65"], ["60", "68"], ["60", "70"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["70", "71"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "81"], ["71", "83"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["83", "84"], ["84", "85"], ["84", "92"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["92", "93"], ["92", "102"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["104", "106"], ["104", "109"], ["104", "114"], ["104", "116"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["114", "115"], ["116", "117"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["128", "129"], ["128", "136"], ["129", "130"], ["129", "135"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["136", "137"], ["136", "146"], ["137", "138"], ["137", "145"], ["138", "139"], ["138", "142"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "144"], ["146", "147"], ["148", "149"], ["148", "150"], ["148", "153"], ["148", "158"], ["148", "160"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["160", "161"], ["161", "162"], ["161", "163"], ["161", "166"], ["161", "169"], ["161", "171"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["172", "173"], ["172", "174"], ["172", "177"], ["172", "180"], ["172", "182"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["180", "181"], ["182", "183"], ["182", "184"], ["182", "189"], ["182", "220"], ["182", "251"], ["182", "280"], ["182", "309"], ["184", "185"], ["184", "186"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "195"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["198", "201"], ["201", "202"], ["201", "213"], ["202", "203"], ["202", "212"], ["203", "204"], ["203", "209"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["213", "214"], ["213", "219"], ["214", "215"], ["214", "218"], ["215", "216"], ["215", "217"], ["220", "221"], ["220", "226"], ["221", "222"], ["221", "223"], ["223", "224"], ["223", "225"], ["226", "227"], ["227", "228"], ["227", "229"], ["229", "230"], ["229", "231"], ["229", "232"], ["232", "233"], ["232", "244"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "250"], ["245", "246"], ["245", "249"], ["246", "247"], ["246", "248"], ["251", "252"], ["251", "255"], ["252", "253"], ["252", "254"], ["255", "256"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["258", "261"], ["261", "262"], ["261", "273"], ["262", "263"], ["262", "272"], ["263", "264"], ["263", "269"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["273", "274"], ["273", "279"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["287", "290"], ["290", "291"], ["290", "302"], ["291", "292"], ["291", "299"], ["292", "293"], ["292", "298"], ["293", "294"], ["293", "295"], ["295", "296"], ["295", "297"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "308"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["309", "310"], ["309", "317"], ["310", "311"], ["310", "316"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["318", "319"], ["318", "320"], ["318", "323"], ["318", "326"], ["318", "328"], ["320", "321"], ["320", "322"], ["323", "324"], ["323", "325"], ["326", "327"], ["328", "329"], ["328", "355"], ["329", "330"], ["329", "331"], ["329", "334"], ["329", "337"], ["329", "339"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["337", "338"], ["339", "340"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "354"], ["343", "344"], ["343", "353"], ["344", "345"], ["344", "352"], ["345", "346"], ["345", "351"], ["346", "347"], ["346", "348"], ["348", "349"], ["348", "350"], ["355", "356"], ["357", "358"], ["358", "359"], ["359", "360"], ["359", "361"], ["359", "364"], ["359", "367"], ["359", "369"], ["361", "362"], ["361", "363"], ["364", "365"], ["364", "366"], ["367", "368"], ["369", "370"], ["369", "387"], ["370", "371"], ["370", "372"], ["370", "375"], ["370", "378"], ["370", "380"], ["372", "373"], ["372", "374"], ["375", "376"], ["375", "377"], ["378", "379"], ["380", "381"], ["381", "382"], ["381", "383"], ["383", "384"], ["383", "386"], ["384", "385"], ["387", "388"], ["389", "390"], ["20", "27"], ["25", "31"], ["29", "35"], ["33", "39"], ["389", "393"], ["27", "25"], ["31", "29"], ["35", "33"], ["38", "48"], ["38", "361"], ["39", "38"], ["45", "56"], ["54", "62"], ["47", "45"], ["56", "54"], ["62", "65"], ["65", "73"], ["65", "106"], ["68", "65"], ["106", "111"], ["109", "119"], ["109", "150"], ["114", "111"], ["150", "155"], ["153", "163"], ["153", "320"], ["158", "155"], ["320", "323"], ["323", "331"], ["323", "389"], ["326", "323"], ["48", "47"], ["111", "109"], ["155", "153"], ["355", "326"], ["361", "364"], ["364", "372"], ["364", "389"], ["367", "364"], ["73", "78"], ["76", "87"], ["76", "68"], ["81", "78"], ["119", "122"], ["122", "131"], ["122", "114"], ["125", "122"], ["163", "166"], ["166", "174"], ["166", "158"], ["169", "166"], ["331", "334"], ["334", "348"], ["334", "355"], ["337", "334"], ["387", "367"], ["78", "76"], ["84", "81"], ["128", "125"], ["340", "337"], ["372", "375"], ["375", "384"], ["375", "387"], ["378", "375"], ["85", "95"], ["92", "84"], ["129", "139"], ["136", "128"], ["174", "177"], ["177", "188"], ["177", "169"], ["180", "177"], ["342", "340"], ["381", "378"], ["86", "85"], ["93", "102"], ["102", "92"], ["130", "129"], ["137", "146"], ["146", "136"], ["184", "192"], ["309", "180"], ["343", "342"], ["383", "381"], ["87", "86"], ["94", "99"], ["99", "93"], ["131", "130"], ["138", "137"], ["186", "184"], ["190", "206"], ["190", "223"], ["221", "237"], ["221", "252"], ["252", "266"], ["252", "281"], ["281", "295"], ["281", "312"], ["310", "309"], ["344", "343"], ["384", "383"], ["95", "94"], ["139", "142"], ["142", "138"], ["188", "186"], ["192", "190"], ["196", "223"], ["223", "221"], ["227", "252"], ["256", "281"], ["285", "312"], ["311", "310"], ["345", "344"], ["198", "196"], ["229", "227"], ["258", "256"], ["287", "285"], ["312", "311"], ["346", "345"], ["201", "198"], ["232", "229"], ["261", "258"], ["290", "287"], ["348", "346"], ["202", "215"], ["213", "201"], ["233", "246"], ["244", "232"], ["262", "275"], ["273", "261"], ["291", "304"], ["302", "290"], ["203", "202"], ["214", "213"], ["234", "241"], ["241", "233"], ["245", "244"], ["263", "262"], ["274", "273"], ["292", "299"], ["299", "291"], ["303", "302"], ["204", "209"], ["209", "203"], ["215", "214"], ["235", "234"], ["246", "245"], ["264", "269"], ["269", "263"], ["275", "274"], ["293", "292"], ["304", "303"], ["206", "204"], ["237", "235"], ["266", "264"], ["295", "293"], ["17", "20"], ["18", "393"], ["20", "393"], ["25", "393"], ["29", "393"], ["29", "393"], ["35", "393"], ["33", "393"], ["33", "393"], ["39", "393"], ["38", "393"], ["38", "393"], ["361", "393"], ["364", "393"], ["364", "393"], ["364", "393"], ["372", "393"], ["375", "393"], ["375", "393"], ["375", "393"], ["387", "393"], ["367", "393"], ["383", "393"], ["381", "393"], ["381", "393"], ["378", "393"], ["45", "393"], ["47", "393"], ["45", "393"], ["45", "393"], ["54", "393"], ["56", "393"], ["54", "393"], ["54", "393"], ["109", "393"], ["109", "393"], ["150", "393"], ["153", "393"], ["155", "393"], ["153", "393"], ["153", "393"], ["320", "393"], ["323", "393"], ["323", "393"], ["323", "393"], ["389", "393"], ["389", "393"], ["331", "393"], ["334", "393"], ["334", "393"], ["334", "393"], ["355", "393"], ["326", "393"], ["348", "393"], ["343", "393"], ["342", "393"], ["340", "393"], ["340", "393"], ["337", "393"], ["158", "393"], ["174", "393"], ["177", "393"], ["177", "393"], ["177", "393"], ["169", "393"], ["184", "393"], ["184", "393"], ["190", "393"], ["190", "393"], ["198", "393"], ["201", "393"], ["201", "393"], ["198", "393"], ["196", "393"], ["196", "393"], ["221", "393"], ["221", "393"], ["229", "393"], ["232", "393"], ["232", "393"], ["229", "393"], ["227", "393"], ["227", "393"], ["252", "393"], ["258", "393"], ["261", "393"], ["261", "393"], ["258", "393"], ["256", "393"], ["256", "393"], ["281", "393"], ["287", "393"], ["290", "393"], ["290", "393"], ["287", "393"], ["285", "393"], ["285", "393"], ["309", "393"], ["309", "393"], ["309", "393"], ["180", "393"], ["119", "393"], ["122", "393"], ["122", "393"], ["122", "393"], ["114", "393"], ["128", "393"], ["136", "393"], ["146", "393"], ["136", "393"], ["128", "393"], ["128", "393"], ["125", "393"], ["73", "393"], ["76", "393"], ["78", "393"], ["76", "393"], ["76", "393"], ["68", "393"], ["84", "393"], ["92", "393"], ["102", "393"], ["92", "393"], ["84", "393"], ["84", "393"], ["81", "393"], ["17", "18"], ["27", "25"], ["31", "29"], ["35", "33"], ["17", "20"], ["387", "389"], ["355", "389"], ["17", "389"], ["20", "27"], ["17", "27"], ["27", "31"], ["17", "31"], ["31", "35"], ["17", "35"], ["39", "38"], ["39", "38"], ["17", "38"], ["47", "45"], ["47", "45"], ["47", "45"], ["56", "54"], ["56", "54"], ["56", "54"], ["33", "39"], ["17", "39"], ["17", "62"], ["17", "106"], ["17", "150"], ["17", "320"], ["39", "47"], ["17", "47"], ["25", "47"], ["29", "47"], ["17", "56"], ["47", "56"], ["47", "56"], ["62", "65"], ["68", "65"], ["17", "65"], ["56", "65"], ["65", "68"], ["17", "68"], ["106", "109"], ["114", "109"], ["17", "109"], ["111", "109"], ["111", "109"], ["109", "114"], ["17", "114"], ["150", "153"], ["158", "153"], ["17", "153"], ["155", "153"], ["155", "153"], ["153", "158"], ["206", "158"], ["237", "158"], ["266", "158"], ["295", "158"], ["17", "158"], ["320", "323"], ["326", "323"], ["17", "323"], ["111", "323"], ["166", "323"], ["323", "326"], ["17", "326"], ["17", "361"], ["39", "48"], ["17", "48"], ["17", "73"], ["65", "111"], ["17", "111"], ["17", "119"], ["17", "155"], ["39", "155"], ["17", "163"], ["17", "331"], ["340", "355"], ["17", "355"], ["361", "364"], ["367", "364"], ["17", "364"], ["25", "364"], ["364", "367"], ["17", "367"], ["73", "76"], ["81", "76"], ["17", "76"], ["78", "76"], ["78", "76"], ["17", "81"], ["76", "81"], ["92", "84"], ["102", "84"], ["119", "122"], ["125", "122"], ["17", "122"], ["56", "122"], ["78", "122"], ["122", "125"], ["17", "125"], ["136", "128"], ["146", "128"], ["163", "166"], ["169", "166"], ["17", "166"], ["111", "166"], ["192", "166"], ["166", "169"], ["252", "169"], ["269", "169"], ["17", "169"], ["331", "334"], ["337", "334"], ["17", "334"], ["56", "334"], ["177", "334"], ["122", "334"], ["78", "334"], ["334", "337"], ["17", "337"], ["17", "372"], ["381", "387"], ["17", "387"], ["56", "78"], ["17", "78"], ["17", "174"], ["355", "340"], ["17", "340"], ["343", "340"], ["343", "340"], ["372", "375"], ["378", "375"], ["17", "375"], ["29", "375"], ["375", "378"], ["17", "378"], ["102", "92"], ["146", "136"], ["174", "177"], ["180", "177"], ["17", "177"], ["56", "177"], ["223", "177"], ["122", "177"], ["78", "177"], ["281", "180"], ["299", "180"], ["17", "180"], ["184", "309"], ["196", "309"], ["227", "309"], ["256", "309"], ["285", "309"], ["17", "309"], ["343", "342"], ["343", "342"], ["17", "342"], ["387", "381"], ["17", "381"], ["384", "381"], ["35", "102"], ["17", "102"], ["35", "146"], ["102", "146"], ["17", "146"], ["17", "343"], ["384", "383"], ["17", "383"], ["76", "99"], ["17", "99"], ["166", "190"], ["252", "190"], ["269", "190"], ["17", "190"], ["192", "190"], ["192", "190"], ["198", "196"], ["198", "196"], ["198", "196"], ["177", "221"], ["17", "221"], ["223", "221"], ["223", "221"], ["229", "227"], ["229", "227"], ["229", "227"], ["190", "252"], ["17", "252"], ["258", "256"], ["258", "256"], ["258", "256"], ["221", "281"], ["17", "281"], ["287", "285"], ["287", "285"], ["287", "285"], ["17", "384"], ["109", "142"], ["17", "142"], ["166", "192"], ["17", "192"], ["177", "223"], ["17", "223"], ["229", "198"], ["258", "198"], ["287", "198"], ["17", "198"], ["184", "198"], ["128", "198"], ["198", "229"], ["258", "229"], ["287", "229"], ["17", "229"], ["184", "229"], ["196", "229"], ["84", "229"], ["198", "258"], ["229", "258"], ["287", "258"], ["17", "258"], ["184", "258"], ["196", "258"], ["227", "258"], ["198", "287"], ["229", "287"], ["258", "287"], ["17", "287"], ["184", "287"], ["196", "287"], ["227", "287"], ["256", "287"], ["128", "201"], ["84", "232"], ["155", "348"], ["17", "348"], ["221", "241"], ["17", "241"], ["281", "299"], ["17", "299"], ["190", "209"], ["17", "209"], ["252", "269"], ["17", "269"], ["153", "206"], ["237", "206"], ["266", "206"], ["295", "206"], ["17", "206"], ["153", "237"], ["206", "237"], ["266", "237"], ["295", "237"], ["17", "237"], ["153", "266"], ["206", "266"], ["237", "266"], ["295", "266"], ["17", "266"], ["153", "295"], ["206", "295"], ["237", "295"], ["266", "295"], ["17", "295"], ["38", "150"], ["38", "54"], ["38", "48"], ["38", "364"], ["38", "65"], ["38", "323"], ["38", "109"], ["38", "320"], ["38", "56"], ["38", "153"], ["38", "361"], ["38", "155"], ["38", "111"], ["38", "47"], ["38", "45"], ["38", "106"], ["38", "62"], ["65", "68"], ["65", "76"], ["65", "65"], ["65", "73"], ["65", "78"], ["109", "114"], ["109", "122"], ["109", "109"], ["109", "119"], ["109", "111"], ["153", "163"], ["153", "158"], ["153", "153"], ["153", "155"], ["153", "166"], ["323", "334"], ["323", "326"], ["323", "355"], ["323", "323"], ["323", "331"], ["364", "364"], ["364", "372"], ["364", "375"], ["364", "387"], ["364", "367"], ["76", "84"], ["76", "102"], ["76", "95"], ["76", "76"], ["76", "93"], ["76", "86"], ["76", "94"], ["76", "81"], ["76", "85"], ["76", "92"], ["76", "87"], ["76", "99"], ["76", "78"], ["122", "136"], ["122", "146"], ["122", "128"], ["122", "129"], ["122", "138"], ["122", "122"], ["122", "131"], ["122", "137"], ["122", "130"], ["122", "139"], ["122", "142"], ["122", "125"], ["166", "174"], ["166", "177"], ["166", "169"], ["166", "166"], ["334", "334"], ["334", "340"], ["334", "346"], ["334", "348"], ["334", "342"], ["334", "337"], ["334", "343"], ["334", "345"], ["334", "344"], ["375", "384"], ["375", "383"], ["375", "378"], ["375", "375"], ["375", "381"], ["177", "188"], ["177", "192"], ["177", "281"], ["177", "190"], ["177", "184"], ["177", "186"], ["177", "180"], ["177", "311"], ["177", "310"], ["177", "177"], ["177", "309"], ["177", "223"], ["177", "221"], ["177", "252"], ["177", "312"], ["190", "214"], ["190", "215"], ["190", "209"], ["190", "196"], ["190", "213"], ["190", "204"], ["190", "206"], ["190", "202"], ["190", "201"], ["190", "198"], ["190", "203"], ["221", "237"], ["221", "229"], ["221", "241"], ["221", "227"], ["221", "232"], ["221", "244"], ["221", "245"], ["221", "246"], ["221", "233"], ["221", "235"], ["221", "234"], ["252", "256"], ["252", "262"], ["252", "264"], ["252", "258"], ["252", "274"], ["252", "269"], ["252", "273"], ["252", "261"], ["252", "275"], ["252", "263"], ["252", "266"], ["281", "292"], ["281", "290"], ["281", "302"], ["281", "304"], ["281", "291"], ["281", "285"], ["281", "293"], ["281", "295"], ["281", "299"], ["281", "287"], ["281", "303"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,this,init_io())<SUB>2</SUB>>", "23": "<(LOCAL,int M: int)<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,int N = nint())<SUB>3</SUB>>", "27": "<(nint,nint())<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,int M = nint())<SUB>3</SUB>>", "31": "<(nint,nint())<SUB>3</SUB>>", "33": "<(&lt;operator&gt;.assignment,int K = nint())<SUB>3</SUB>>", "35": "<(nint,nint())<SUB>3</SUB>>", "37": "<(CONTROL_STRUCTURE,if (K % 2 == 0),if (K % 2 == 0))<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.modulo,K % 2)<SUB>4</SUB>>", "41": "<(LITERAL,2,K % 2)<SUB>4</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[][][] grid = new int[K + 1][N][M])<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[K + 1][N][M])>", "49": "<(IDENTIFIER,K,K + 1)<SUB>5</SUB>>", "51": "<(IDENTIFIER,N,new int[K + 1][N][M])<SUB>5</SUB>>", "53": "<(LOCAL,int[][][] edges: int[][][])<SUB>6</SUB>>", "55": "<(IDENTIFIER,edges,int[][][] edges = new int[4][N][M])<SUB>6</SUB>>", "57": "<(LITERAL,4,new int[4][N][M])<SUB>6</SUB>>", "59": "<(IDENTIFIER,M,new int[4][N][M])<SUB>6</SUB>>", "61": "<(LOCAL,int i: int)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>7</SUB>>", "67": "<(IDENTIFIER,N,i &lt; N)<SUB>7</SUB>>", "69": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M - 1); j++),for (int j = 0; Some(j &lt; M - 1); j++))<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>8</SUB>>", "75": "<(LITERAL,0,int j = 0)<SUB>8</SUB>>", "77": "<(IDENTIFIER,j,j &lt; M - 1)<SUB>8</SUB>>", "79": "<(IDENTIFIER,M,M - 1)<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.postIncrement,j++)<SUB>8</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,edges[0][i][j])<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,edges[0])<SUB>9</SUB>>", "89": "<(LITERAL,0,edges[0][i][j] = edges[2][i][j + 1] = nint())<SUB>9</SUB>>", "91": "<(IDENTIFIER,j,edges[0][i][j] = edges[2][i][j + 1] = nint())<SUB>9</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,edges[2][i][j + 1])<SUB>9</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,edges[2])<SUB>9</SUB>>", "97": "<(LITERAL,2,edges[2][i][j + 1] = nint())<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.addition,j + 1)<SUB>9</SUB>>", "101": "<(LITERAL,1,j + 1)<SUB>9</SUB>>", "103": "<(IDENTIFIER,this,nint())<SUB>9</SUB>>", "105": "<(LOCAL,int i: int)<SUB>12</SUB>>", "107": "<(IDENTIFIER,i,int i = 0)<SUB>12</SUB>>", "109": "<(&lt;operator&gt;.lessThan,i &lt; N - 1)<SUB>12</SUB>>", "111": "<(&lt;operator&gt;.subtraction,N - 1)<SUB>12</SUB>>", "113": "<(LITERAL,1,N - 1)<SUB>12</SUB>>", "115": "<(IDENTIFIER,i,i++)<SUB>12</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>13</SUB>>", "121": "<(LITERAL,0,int j = 0)<SUB>13</SUB>>", "123": "<(IDENTIFIER,j,j &lt; M)<SUB>13</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,j++)<SUB>13</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,edges[1][i][j])<SUB>14</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,edges[1])<SUB>14</SUB>>", "133": "<(LITERAL,1,edges[1][i][j] = edges[3][i + 1][j] = nint())<SUB>14</SUB>>", "135": "<(IDENTIFIER,j,edges[1][i][j] = edges[3][i + 1][j] = nint())<SUB>14</SUB>>", "137": "<(&lt;operator&gt;.indexAccess,edges[3][i + 1][j])<SUB>14</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,edges[3])<SUB>14</SUB>>", "141": "<(LITERAL,3,edges[3][i + 1][j] = nint())<SUB>14</SUB>>", "143": "<(IDENTIFIER,i,i + 1)<SUB>14</SUB>>", "145": "<(IDENTIFIER,j,edges[3][i + 1][j] = nint())<SUB>14</SUB>>", "147": "<(IDENTIFIER,this,nint())<SUB>14</SUB>>", "149": "<(LOCAL,int k: int)<SUB>17</SUB>>", "151": "<(IDENTIFIER,k,int k = 1)<SUB>17</SUB>>", "153": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= K / 2)<SUB>17</SUB>>", "155": "<(&lt;operator&gt;.division,K / 2)<SUB>17</SUB>>", "157": "<(LITERAL,2,K / 2)<SUB>17</SUB>>", "159": "<(IDENTIFIER,k,k++)<SUB>17</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>18</SUB>>", "163": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "165": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "167": "<(IDENTIFIER,i,i &lt; N)<SUB>18</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,i++)<SUB>18</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "173": "<(LOCAL,int j: int)<SUB>19</SUB>>", "175": "<(IDENTIFIER,j,int j = 0)<SUB>19</SUB>>", "177": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>19</SUB>>", "179": "<(IDENTIFIER,M,j &lt; M)<SUB>19</SUB>>", "181": "<(IDENTIFIER,j,j++)<SUB>19</SUB>>", "183": "<(LOCAL,int min: int)<SUB>20</SUB>>", "185": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>20</SUB>>", "187": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>20</SUB>>", "189": "<(CONTROL_STRUCTURE,if (i != N - 1),if (i != N - 1))<SUB>21</SUB>>", "191": "<(IDENTIFIER,i,i != N - 1)<SUB>21</SUB>>", "193": "<(IDENTIFIER,N,N - 1)<SUB>21</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "197": "<(IDENTIFIER,min,min = Math.min(min, grid[k - 1][i + 1][j] + edges[1][i][j]))<SUB>22</SUB>>", "199": "<(IDENTIFIER,Math,Math.min(min, grid[k - 1][i + 1][j] + edges[1][i][j]))<SUB>22</SUB>>", "201": "<(&lt;operator&gt;.addition,grid[k - 1][i + 1][j] + edges[1][i][j])<SUB>22</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,grid[k - 1][i + 1])<SUB>22</SUB>>", "205": "<(IDENTIFIER,grid,grid[k - 1][i + 1][j] + edges[1][i][j])<SUB>22</SUB>>", "207": "<(IDENTIFIER,k,k - 1)<SUB>22</SUB>>", "209": "<(&lt;operator&gt;.addition,i + 1)<SUB>22</SUB>>", "211": "<(LITERAL,1,i + 1)<SUB>22</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,edges[1][i][j])<SUB>22</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,edges[1])<SUB>22</SUB>>", "217": "<(LITERAL,1,grid[k - 1][i + 1][j] + edges[1][i][j])<SUB>22</SUB>>", "219": "<(IDENTIFIER,j,grid[k - 1][i + 1][j] + edges[1][i][j])<SUB>22</SUB>>", "221": "<(&lt;operator&gt;.notEquals,j != M - 1)<SUB>24</SUB>>", "223": "<(&lt;operator&gt;.subtraction,M - 1)<SUB>24</SUB>>", "225": "<(LITERAL,1,M - 1)<SUB>24</SUB>>", "227": "<(&lt;operator&gt;.assignment,min = Math.min(min, grid[k - 1][i][j + 1] + edges[0][i][j]))<SUB>25</SUB>>", "229": "<(min,Math.min(min, grid[k - 1][i][j + 1] + edges[0][i][j]))<SUB>25</SUB>>", "231": "<(IDENTIFIER,min,Math.min(min, grid[k - 1][i][j + 1] + edges[0][i][j]))<SUB>25</SUB>>", "233": "<(&lt;operator&gt;.indexAccess,grid[k - 1][i][j + 1])<SUB>25</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,grid[k - 1])<SUB>25</SUB>>", "237": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>25</SUB>>", "239": "<(LITERAL,1,k - 1)<SUB>25</SUB>>", "241": "<(&lt;operator&gt;.addition,j + 1)<SUB>25</SUB>>", "243": "<(LITERAL,1,j + 1)<SUB>25</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,edges[0][i])<SUB>25</SUB>>", "247": "<(IDENTIFIER,edges,grid[k - 1][i][j + 1] + edges[0][i][j])<SUB>25</SUB>>", "249": "<(IDENTIFIER,i,grid[k - 1][i][j + 1] + edges[0][i][j])<SUB>25</SUB>>", "251": "<(CONTROL_STRUCTURE,if (i != 0),if (i != 0))<SUB>27</SUB>>", "253": "<(IDENTIFIER,i,i != 0)<SUB>27</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "257": "<(IDENTIFIER,min,min = Math.min(min, grid[k - 1][i - 1][j] + edges[3][i][j]))<SUB>28</SUB>>", "259": "<(IDENTIFIER,Math,Math.min(min, grid[k - 1][i - 1][j] + edges[3][i][j]))<SUB>28</SUB>>", "261": "<(&lt;operator&gt;.addition,grid[k - 1][i - 1][j] + edges[3][i][j])<SUB>28</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,grid[k - 1][i - 1])<SUB>28</SUB>>", "265": "<(IDENTIFIER,grid,grid[k - 1][i - 1][j] + edges[3][i][j])<SUB>28</SUB>>", "267": "<(IDENTIFIER,k,k - 1)<SUB>28</SUB>>", "269": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>28</SUB>>", "271": "<(LITERAL,1,i - 1)<SUB>28</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,edges[3][i][j])<SUB>28</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,edges[3])<SUB>28</SUB>>", "277": "<(LITERAL,3,grid[k - 1][i - 1][j] + edges[3][i][j])<SUB>28</SUB>>", "279": "<(IDENTIFIER,j,grid[k - 1][i - 1][j] + edges[3][i][j])<SUB>28</SUB>>", "281": "<(&lt;operator&gt;.notEquals,j != 0)<SUB>30</SUB>>", "283": "<(LITERAL,0,j != 0)<SUB>30</SUB>>", "285": "<(&lt;operator&gt;.assignment,min = Math.min(min, grid[k - 1][i][j - 1] + edges[2][i][j]))<SUB>31</SUB>>", "287": "<(min,Math.min(min, grid[k - 1][i][j - 1] + edges[2][i][j]))<SUB>31</SUB>>", "289": "<(IDENTIFIER,min,Math.min(min, grid[k - 1][i][j - 1] + edges[2][i][j]))<SUB>31</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,grid[k - 1][i][j - 1])<SUB>31</SUB>>", "293": "<(&lt;operator&gt;.indexAccess,grid[k - 1])<SUB>31</SUB>>", "295": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>31</SUB>>", "297": "<(LITERAL,1,k - 1)<SUB>31</SUB>>", "299": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>31</SUB>>", "301": "<(LITERAL,1,j - 1)<SUB>31</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,edges[2][i])<SUB>31</SUB>>", "305": "<(IDENTIFIER,edges,grid[k - 1][i][j - 1] + edges[2][i][j])<SUB>31</SUB>>", "307": "<(IDENTIFIER,i,grid[k - 1][i][j - 1] + edges[2][i][j])<SUB>31</SUB>>", "309": "<(&lt;operator&gt;.assignment,grid[k][i][j] = min)<SUB>33</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,grid[k][i])<SUB>33</SUB>>", "313": "<(IDENTIFIER,grid,grid[k][i][j] = min)<SUB>33</SUB>>", "315": "<(IDENTIFIER,i,grid[k][i][j] = min)<SUB>33</SUB>>", "317": "<(IDENTIFIER,min,grid[k][i][j] = min)<SUB>33</SUB>>", "319": "<(LOCAL,int i: int)<SUB>37</SUB>>", "321": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "323": "<(&lt;operator&gt;.lessThan,i &lt; N)<SUB>37</SUB>>", "325": "<(IDENTIFIER,N,i &lt; N)<SUB>37</SUB>>", "327": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "329": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; M); j++),for (int j = 0; Some(j &lt; M); j++))<SUB>38</SUB>>", "331": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>38</SUB>>", "333": "<(LITERAL,0,int j = 0)<SUB>38</SUB>>", "335": "<(IDENTIFIER,j,j &lt; M)<SUB>38</SUB>>", "337": "<(&lt;operator&gt;.postIncrement,j++)<SUB>38</SUB>>", "339": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "341": "<(IDENTIFIER,out,print(grid[K / 2][i][j] * 2 + &quot; &quot;))<SUB>39</SUB>>", "343": "<(&lt;operator&gt;.multiplication,grid[K / 2][i][j] * 2)<SUB>39</SUB>>", "345": "<(&lt;operator&gt;.indexAccess,grid[K / 2][i])<SUB>39</SUB>>", "347": "<(IDENTIFIER,grid,grid[K / 2][i][j] * 2)<SUB>39</SUB>>", "349": "<(IDENTIFIER,K,K / 2)<SUB>39</SUB>>", "351": "<(IDENTIFIER,i,grid[K / 2][i][j] * 2)<SUB>39</SUB>>", "353": "<(LITERAL,2,grid[K / 2][i][j] * 2)<SUB>39</SUB>>", "355": "<(println,println())<SUB>41</SUB>>", "357": "<(CONTROL_STRUCTURE,else,else)<SUB>44</SUB>>", "359": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>45</SUB>>", "361": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>45</SUB>>", "363": "<(LITERAL,0,int i = 0)<SUB>45</SUB>>", "365": "<(IDENTIFIER,i,i &lt; N)<SUB>45</SUB>>", "367": "<(&lt;operator&gt;.postIncrement,i++)<SUB>45</SUB>>", "369": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "371": "<(LOCAL,int j: int)<SUB>46</SUB>>", "373": "<(IDENTIFIER,j,int j = 0)<SUB>46</SUB>>", "375": "<(&lt;operator&gt;.lessThan,j &lt; M)<SUB>46</SUB>>", "377": "<(IDENTIFIER,M,j &lt; M)<SUB>46</SUB>>", "379": "<(IDENTIFIER,j,j++)<SUB>46</SUB>>", "381": "<(print,print(-1 + &quot; &quot;))<SUB>47</SUB>>", "383": "<(&lt;operator&gt;.addition,-1 + &quot; &quot;)<SUB>47</SUB>>", "385": "<(LITERAL,1,-1)<SUB>47</SUB>>", "387": "<(println,println())<SUB>49</SUB>>", "389": "<(close,close())<SUB>52</SUB>>", "391": "<(MODIFIER,PUBLIC)>", "393": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}