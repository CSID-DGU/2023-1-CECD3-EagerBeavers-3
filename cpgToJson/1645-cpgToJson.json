{"edges": [["19", "21"], ["19", "83"], ["19", "84"], ["19", "85"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "44"], ["21", "45"], ["21", "49"], ["21", "66"], ["21", "69"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "80"], ["74", "75"], ["75", "76"], ["75", "77"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "42"], ["40", "47"], ["45", "51"], ["66", "72"], ["69", "85"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "66"], ["57", "54"], ["70", "77"], ["73", "69"], ["28", "26"], ["60", "57"], ["72", "70"], ["74", "80"], ["80", "73"], ["61", "64"], ["64", "60"], ["75", "74"], ["77", "75"], ["19", "24"], ["20", "85"], ["22", "85"], ["25", "85"], ["25", "85"], ["30", "85"], ["35", "85"], ["35", "85"], ["42", "85"], ["40", "85"], ["40", "85"], ["45", "85"], ["45", "85"], ["51", "85"], ["54", "85"], ["54", "85"], ["54", "85"], ["66", "85"], ["66", "85"], ["69", "85"], ["77", "85"], ["74", "85"], ["73", "85"], ["73", "85"], ["69", "85"], ["69", "85"], ["60", "85"], ["64", "85"], ["60", "85"], ["60", "85"], ["57", "85"], ["66", "85"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["42", "40"], ["47", "45"], ["22", "25"], ["19", "25"], ["19", "51"], ["19", "66"], ["45", "66"], ["60", "66"], ["74", "69"], ["66", "69"], ["25", "32"], ["19", "32"], ["32", "37"], ["19", "37"], ["37", "42"], ["19", "42"], ["30", "47"], ["19", "47"], ["51", "54"], ["57", "54"], ["19", "54"], ["47", "54"], ["54", "57"], ["19", "57"], ["64", "60"], ["74", "73"], ["66", "73"], ["66", "74"], ["42", "64"], ["19", "64"], ["40", "77"], ["19", "77"], ["54", "60"], ["54", "61"], ["54", "64"], ["54", "57"], ["54", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY scanner = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int problemCount: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,problemCount,int problemCount = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,scanner,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int petrCount = nextInt())<SUB>4</SUB>>", "37": "<(nextInt,nextInt())<SUB>4</SUB>>", "39": "<(LOCAL,int vasCount: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,vasCount,int vasCount = nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,scanner,nextInt())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[] problems = new int[problemCount])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[problemCount])>", "49": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; problemCount); i++),for (int i = 0; Some(i &lt; problemCount); i++))<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "53": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "55": "<(IDENTIFIER,i,i &lt; problemCount)<SUB>7</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,problems[i])<SUB>8</SUB>>", "63": "<(IDENTIFIER,i,problems[i] = nextInt())<SUB>8</SUB>>", "65": "<(IDENTIFIER,scanner,nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,Arrays,sort(problems))<SUB>12</SUB>>", "69": "<(println,System.out.println(-problems[vasCount - 1] + problems[vasCount]))<SUB>13</SUB>>", "71": "<(IDENTIFIER,System,System.out.println(-problems[vasCount - 1] + problems[vasCount]))<SUB>13</SUB>>", "73": "<(&lt;operator&gt;.addition,-problems[vasCount - 1] + problems[vasCount])<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.indexAccess,problems[vasCount - 1])<SUB>13</SUB>>", "77": "<(&lt;operator&gt;.subtraction,vasCount - 1)<SUB>13</SUB>>", "79": "<(LITERAL,1,vasCount - 1)<SUB>13</SUB>>", "81": "<(IDENTIFIER,problems,-problems[vasCount - 1] + problems[vasCount])<SUB>13</SUB>>", "83": "<(MODIFIER,PUBLIC)>", "85": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}