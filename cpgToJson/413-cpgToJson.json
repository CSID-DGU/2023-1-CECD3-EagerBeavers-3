{"edges": [["25", "26"], ["25", "27"], ["25", "360"], ["25", "361"], ["25", "362"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "35"], ["27", "36"], ["27", "40"], ["27", "41"], ["27", "45"], ["27", "46"], ["27", "50"], ["27", "51"], ["27", "55"], ["27", "6"], ["27", "74"], ["27", "77"], ["27", "78"], ["27", "96"], ["27", "97"], ["27", "101"], ["27", "8"], ["27", "120"], ["27", "123"], ["27", "124"], ["27", "143"], ["27", "144"], ["27", "147"], ["27", "148"], ["27", "155"], ["27", "156"], ["27", "160"], ["27", "357"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "65"], ["55", "67"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "76"], ["77", "5"], ["78", "79"], ["78", "80"], ["78", "83"], ["78", "88"], ["78", "90"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "95"], ["97", "98"], ["97", "99"], ["99", "100"], ["101", "102"], ["101", "103"], ["101", "106"], ["101", "111"], ["101", "113"], ["103", "104"], ["103", "105"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["113", "114"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "122"], ["123", "7"], ["124", "125"], ["124", "126"], ["124", "129"], ["124", "134"], ["124", "136"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["136", "137"], ["137", "138"], ["137", "139"], ["137", "142"], ["139", "140"], ["139", "141"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "153"], ["150", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["160", "161"], ["160", "163"], ["161", "162"], ["163", "164"], ["163", "165"], ["163", "169"], ["163", "181"], ["163", "182"], ["163", "186"], ["163", "242"], ["163", "255"], ["163", "256"], ["163", "10"], ["163", "261"], ["163", "264"], ["163", "266"], ["165", "166"], ["165", "167"], ["167", "168"], ["169", "170"], ["169", "174"], ["170", "171"], ["170", "173"], ["171", "172"], ["174", "175"], ["174", "180"], ["175", "176"], ["175", "179"], ["176", "177"], ["176", "178"], ["182", "183"], ["182", "184"], ["184", "185"], ["186", "187"], ["186", "188"], ["186", "191"], ["186", "195"], ["186", "197"], ["188", "189"], ["188", "190"], ["191", "192"], ["191", "193"], ["193", "194"], ["195", "196"], ["197", "198"], ["197", "199"], ["197", "204"], ["197", "205"], ["197", "208"], ["197", "217"], ["197", "226"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "207"], ["208", "209"], ["208", "214"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["214", "215"], ["215", "216"], ["217", "218"], ["217", "223"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["224", "225"], ["226", "227"], ["226", "238"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["235", "236"], ["235", "237"], ["238", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["242", "247"], ["243", "244"], ["243", "245"], ["245", "246"], ["247", "248"], ["248", "249"], ["248", "252"], ["248", "254"], ["249", "250"], ["249", "251"], ["252", "253"], ["256", "257"], ["256", "258"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "9"], ["264", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["269", "270"], ["269", "279"], ["269", "311"], ["270", "271"], ["270", "274"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "278"], ["279", "280"], ["279", "287"], ["279", "296"], ["279", "299"], ["279", "304"], ["280", "281"], ["280", "286"], ["281", "282"], ["281", "283"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "295"], ["288", "289"], ["288", "290"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["296", "297"], ["296", "298"], ["299", "300"], ["299", "301"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["312", "313"], ["312", "322"], ["312", "354"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "321"], ["322", "323"], ["322", "330"], ["322", "339"], ["322", "342"], ["322", "347"], ["323", "324"], ["323", "329"], ["324", "325"], ["324", "326"], ["326", "327"], ["326", "328"], ["330", "331"], ["330", "338"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "335"], ["335", "336"], ["335", "337"], ["339", "340"], ["339", "341"], ["342", "343"], ["342", "344"], ["344", "345"], ["344", "346"], ["347", "348"], ["347", "349"], ["349", "350"], ["349", "351"], ["351", "352"], ["351", "353"], ["354", "355"], ["355", "356"], ["357", "358"], ["357", "359"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "48"], ["46", "53"], ["51", "57"], ["74", "77"], ["77", "80"], ["97", "103"], ["120", "123"], ["123", "126"], ["144", "150"], ["148", "158"], ["156", "161"], ["357", "362"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["57", "64"], ["60", "69"], ["60", "76"], ["65", "64"], ["76", "74"], ["80", "87"], ["83", "93"], ["83", "99"], ["88", "87"], ["99", "97"], ["103", "110"], ["106", "115"], ["106", "122"], ["111", "110"], ["122", "120"], ["126", "133"], ["129", "139"], ["129", "144"], ["134", "133"], ["150", "148"], ["158", "156"], ["161", "167"], ["161", "357"], ["34", "32"], ["62", "60"], ["68", "65"], ["85", "83"], ["91", "88"], ["108", "106"], ["114", "111"], ["131", "129"], ["137", "134"], ["165", "171"], ["182", "188"], ["256", "263"], ["261", "264"], ["264", "161"], ["264", "271"], ["64", "62"], ["69", "72"], ["72", "68"], ["87", "85"], ["93", "91"], ["110", "108"], ["115", "118"], ["118", "114"], ["133", "131"], ["139", "137"], ["167", "165"], ["170", "178"], ["170", "184"], ["184", "182"], ["188", "193"], ["191", "201"], ["191", "245"], ["195", "193"], ["243", "251"], ["243", "258"], ["247", "258"], ["258", "256"], ["263", "261"], ["171", "170"], ["175", "180"], ["180", "362"], ["193", "191"], ["199", "205"], ["205", "211"], ["245", "243"], ["176", "175"], ["201", "199"], ["209", "215"], ["209", "220"], ["218", "224"], ["218", "228"], ["227", "239"], ["227", "195"], ["249", "252"], ["252", "247"], ["270", "283"], ["270", "314"], ["178", "176"], ["211", "209"], ["215", "220"], ["220", "218"], ["224", "228"], ["228", "227"], ["228", "232"], ["231", "227"], ["239", "195"], ["251", "249"], ["271", "270"], ["271", "276"], ["274", "270"], ["280", "292"], ["287", "296"], ["296", "301"], ["299", "308"], ["304", "161"], ["304", "271"], ["232", "231"], ["232", "235"], ["235", "231"], ["276", "274"], ["281", "280"], ["288", "287"], ["301", "299"], ["306", "304"], ["313", "326"], ["313", "161"], ["283", "281"], ["290", "288"], ["308", "306"], ["314", "313"], ["314", "319"], ["317", "313"], ["323", "335"], ["330", "339"], ["339", "344"], ["342", "351"], ["347", "161"], ["347", "271"], ["292", "290"], ["319", "317"], ["324", "323"], ["331", "330"], ["344", "342"], ["349", "347"], ["326", "324"], ["333", "331"], ["351", "349"], ["335", "333"], ["25", "30"], ["180", "362"], ["26", "362"], ["28", "362"], ["31", "362"], ["31", "362"], ["36", "362"], ["41", "362"], ["48", "362"], ["46", "362"], ["46", "362"], ["51", "362"], ["74", "362"], ["77", "362"], ["77", "362"], ["97", "362"], ["99", "362"], ["97", "362"], ["97", "362"], ["106", "362"], ["106", "362"], ["120", "362"], ["123", "362"], ["123", "362"], ["126", "362"], ["129", "362"], ["129", "362"], ["144", "362"], ["144", "362"], ["150", "362"], ["150", "362"], ["150", "362"], ["150", "362"], ["148", "362"], ["148", "362"], ["158", "362"], ["156", "362"], ["167", "362"], ["165", "362"], ["171", "362"], ["170", "362"], ["170", "362"], ["182", "362"], ["188", "362"], ["191", "362"], ["191", "362"], ["243", "362"], ["243", "362"], ["252", "362"], ["252", "362"], ["247", "362"], ["256", "362"], ["258", "362"], ["256", "362"], ["256", "362"], ["261", "362"], ["264", "362"], ["264", "362"], ["270", "362"], ["276", "362"], ["274", "362"], ["270", "362"], ["270", "362"], ["314", "362"], ["314", "362"], ["313", "362"], ["317", "362"], ["319", "362"], ["319", "362"], ["317", "362"], ["313", "362"], ["313", "362"], ["323", "362"], ["323", "362"], ["333", "362"], ["330", "362"], ["330", "362"], ["339", "362"], ["342", "362"], ["342", "362"], ["347", "362"], ["349", "362"], ["351", "362"], ["349", "362"], ["347", "362"], ["347", "362"], ["280", "362"], ["280", "362"], ["290", "362"], ["287", "362"], ["287", "362"], ["296", "362"], ["299", "362"], ["299", "362"], ["304", "362"], ["306", "362"], ["308", "362"], ["306", "362"], ["304", "362"], ["304", "362"], ["199", "362"], ["199", "362"], ["205", "362"], ["211", "362"], ["209", "362"], ["209", "362"], ["215", "362"], ["218", "362"], ["220", "362"], ["220", "362"], ["218", "362"], ["218", "362"], ["224", "362"], ["228", "362"], ["227", "362"], ["232", "362"], ["232", "362"], ["231", "362"], ["235", "362"], ["231", "362"], ["227", "362"], ["227", "362"], ["239", "362"], ["195", "362"], ["175", "362"], ["137", "362"], ["137", "362"], ["137", "362"], ["134", "362"], ["114", "362"], ["114", "362"], ["114", "362"], ["111", "362"], ["91", "362"], ["91", "362"], ["91", "362"], ["88", "362"], ["68", "362"], ["72", "362"], ["68", "362"], ["68", "362"], ["65", "362"], ["25", "26"], ["25", "28"], ["38", "36"], ["43", "41"], ["48", "46"], ["53", "51"], ["25", "74"], ["99", "97"], ["25", "120"], ["25", "144"], ["150", "148"], ["150", "148"], ["150", "148"], ["150", "148"], ["158", "156"], ["28", "31"], ["25", "31"], ["25", "57"], ["74", "77"], ["25", "77"], ["25", "80"], ["25", "103"], ["120", "123"], ["25", "123"], ["25", "126"], ["150", "357"], ["25", "357"], ["97", "357"], ["106", "357"], ["323", "357"], ["330", "357"], ["280", "357"], ["287", "357"], ["114", "357"], ["31", "38"], ["25", "38"], ["38", "43"], ["25", "43"], ["43", "48"], ["25", "48"], ["36", "53"], ["25", "53"], ["57", "60"], ["65", "60"], ["25", "60"], ["51", "60"], ["60", "65"], ["25", "65"], ["72", "68"], ["80", "83"], ["88", "83"], ["25", "83"], ["51", "83"], ["60", "83"], ["83", "88"], ["25", "88"], ["53", "99"], ["25", "99"], ["103", "106"], ["111", "106"], ["25", "106"], ["97", "106"], ["106", "111"], ["25", "111"], ["118", "114"], ["126", "129"], ["134", "129"], ["25", "129"], ["51", "129"], ["83", "129"], ["137", "134"], ["25", "134"], ["25", "150"], ["51", "150"], ["129", "150"], ["137", "150"], ["91", "150"], ["68", "150"], ["41", "150"], ["46", "150"], ["148", "158"], ["25", "158"], ["156", "161"], ["167", "161"], ["25", "161"], ["167", "165"], ["184", "182"], ["258", "256"], ["258", "256"], ["25", "261"], ["77", "91"], ["25", "91"], ["51", "91"], ["68", "91"], ["123", "137"], ["25", "137"], ["51", "137"], ["91", "137"], ["68", "137"], ["129", "137"], ["25", "188"], ["261", "264"], ["25", "264"], ["258", "264"], ["25", "267"], ["48", "72"], ["25", "72"], ["25", "118"], ["161", "167"], ["25", "167"], ["171", "170"], ["25", "170"], ["25", "180"], ["25", "184"], ["188", "191"], ["195", "191"], ["25", "191"], ["193", "191"], ["201", "195"], ["25", "195"], ["201", "199"], ["201", "199"], ["25", "205"], ["182", "243"], ["239", "243"], ["25", "243"], ["245", "243"], ["249", "247"], ["252", "247"], ["25", "247"], ["193", "258"], ["25", "258"], ["243", "258"], ["165", "171"], ["25", "171"], ["25", "175"], ["171", "193"], ["201", "193"], ["25", "193"], ["25", "245"], ["25", "249"], ["25", "254"], ["193", "201"], ["25", "201"], ["191", "201"], ["77", "209"], ["218", "209"], ["91", "209"], ["25", "209"], ["211", "209"], ["211", "209"], ["209", "218"], ["25", "218"], ["220", "218"], ["220", "218"], ["228", "227"], ["228", "227"], ["231", "227"], ["231", "227"], ["201", "239"], ["25", "239"], ["249", "252"], ["25", "252"], ["271", "270"], ["271", "270"], ["274", "270"], ["274", "270"], ["25", "280"], ["25", "287"], ["306", "304"], ["306", "304"], ["150", "211"], ["276", "211"], ["349", "211"], ["308", "211"], ["232", "211"], ["25", "211"], ["199", "211"], ["205", "215"], ["25", "215"], ["150", "220"], ["319", "220"], ["351", "220"], ["306", "220"], ["232", "220"], ["25", "220"], ["211", "220"], ["205", "224"], ["215", "224"], ["25", "224"], ["205", "228"], ["215", "228"], ["224", "228"], ["25", "228"], ["232", "231"], ["232", "231"], ["235", "231"], ["235", "231"], ["264", "271"], ["342", "271"], ["299", "271"], ["25", "271"], ["256", "271"], ["347", "271"], ["304", "271"], ["271", "274"], ["25", "274"], ["276", "274"], ["276", "274"], ["271", "296"], ["274", "296"], ["25", "296"], ["292", "296"], ["296", "299"], ["25", "299"], ["301", "299"], ["301", "299"], ["211", "232"], ["25", "232"], ["220", "232"], ["228", "235"], ["25", "235"], ["150", "276"], ["349", "276"], ["308", "276"], ["211", "276"], ["232", "276"], ["25", "276"], ["271", "276"], ["292", "301"], ["25", "301"], ["296", "301"], ["150", "306"], ["319", "306"], ["351", "306"], ["220", "306"], ["232", "306"], ["25", "306"], ["308", "306"], ["308", "306"], ["314", "313"], ["314", "313"], ["317", "313"], ["317", "313"], ["25", "323"], ["25", "330"], ["349", "347"], ["349", "347"], ["123", "283"], ["333", "283"], ["290", "283"], ["137", "283"], ["25", "283"], ["271", "283"], ["276", "283"], ["283", "290"], ["25", "290"], ["292", "290"], ["292", "290"], ["301", "308"], ["25", "308"], ["301", "308"], ["271", "314"], ["274", "314"], ["25", "314"], ["271", "314"], ["276", "314"], ["314", "317"], ["25", "317"], ["319", "317"], ["319", "317"], ["314", "339"], ["317", "339"], ["25", "339"], ["335", "339"], ["339", "342"], ["25", "342"], ["344", "342"], ["344", "342"], ["150", "292"], ["276", "292"], ["349", "292"], ["308", "292"], ["211", "292"], ["232", "292"], ["25", "292"], ["283", "292"], ["150", "319"], ["351", "319"], ["306", "319"], ["220", "319"], ["232", "319"], ["25", "319"], ["314", "319"], ["335", "344"], ["25", "344"], ["339", "344"], ["150", "349"], ["276", "349"], ["308", "349"], ["211", "349"], ["232", "349"], ["25", "349"], ["351", "349"], ["351", "349"], ["123", "326"], ["333", "326"], ["290", "326"], ["137", "326"], ["25", "326"], ["314", "326"], ["319", "326"], ["326", "333"], ["25", "333"], ["335", "333"], ["335", "333"], ["344", "351"], ["25", "351"], ["344", "351"], ["150", "335"], ["319", "335"], ["351", "335"], ["306", "335"], ["220", "335"], ["232", "335"], ["25", "335"], ["326", "335"], ["60", "68"], ["60", "60"], ["60", "72"], ["60", "65"], ["60", "64"], ["60", "69"], ["60", "62"], ["83", "93"], ["83", "88"], ["83", "85"], ["83", "87"], ["83", "91"], ["83", "83"], ["106", "114"], ["106", "118"], ["106", "108"], ["106", "115"], ["106", "111"], ["106", "106"], ["106", "110"], ["129", "129"], ["129", "134"], ["129", "133"], ["129", "131"], ["129", "137"], ["129", "139"], ["161", "167"], ["161", "170"], ["161", "357"], ["161", "171"], ["161", "165"], ["170", "188"], ["170", "161"], ["170", "243"], ["170", "256"], ["170", "264"], ["170", "184"], ["170", "182"], ["170", "258"], ["170", "180"], ["170", "176"], ["170", "178"], ["170", "261"], ["170", "245"], ["170", "191"], ["170", "193"], ["170", "263"], ["170", "175"], ["170", "270"], ["170", "271"], ["191", "209"], ["191", "228"], ["191", "195"], ["191", "201"], ["191", "199"], ["191", "227"], ["191", "191"], ["191", "205"], ["191", "193"], ["191", "220"], ["191", "211"], ["191", "218"], ["243", "247"], ["243", "249"], ["243", "252"], ["243", "251"], ["209", "215"], ["218", "224"], ["227", "239"], ["270", "292"], ["270", "290"], ["270", "308"], ["270", "283"], ["270", "281"], ["270", "306"], ["270", "288"], ["270", "296"], ["270", "304"], ["270", "301"], ["270", "314"], ["270", "280"], ["270", "299"], ["270", "287"], ["270", "313"], ["270", "270"], ["270", "271"], ["228", "232"], ["228", "231"], ["271", "276"], ["271", "274"], ["232", "235"], ["313", "326"], ["313", "349"], ["313", "324"], ["313", "347"], ["313", "323"], ["313", "335"], ["313", "351"], ["313", "342"], ["313", "339"], ["313", "333"], ["313", "330"], ["313", "331"], ["313", "344"], ["313", "270"], ["313", "271"], ["314", "317"], ["314", "319"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "35": "<(LOCAL,int n: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>4</SUB>>", "39": "<(IDENTIFIER,sc,nextInt())<SUB>4</SUB>>", "41": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>5</SUB>>", "43": "<(nextInt,nextInt())<SUB>5</SUB>>", "45": "<(LOCAL,int b: int)<SUB>6</SUB>>", "47": "<(IDENTIFIER,b,int b = nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignment,int[] numbers = new int[n])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.alloc,new int[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; numbers.length); i++),for (int i = 0; Some(i &lt; numbers.length); i++))<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,i &lt; numbers.length)<SUB>9</SUB>>", "63": "<(IDENTIFIER,numbers,i &lt; numbers.length)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,numbers[i])<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,numbers[i] = nextInt())<SUB>10</SUB>>", "73": "<(IDENTIFIER,sc,nextInt())<SUB>10</SUB>>", "74": "<(&lt;operator&gt;.assignment,ANY hs = new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "76": "<(&lt;operator&gt;.alloc,new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "5": "<(IDENTIFIER,hs,new HashSet&lt;Integer&gt;())<SUB>13</SUB>>", "79": "<(LOCAL,int i: int)<SUB>14</SUB>>", "81": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "83": "<(&lt;operator&gt;.lessThan,i &lt; numbers.length)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.fieldAccess,numbers.length)<SUB>14</SUB>>", "87": "<(FIELD_IDENTIFIER,length,length)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "91": "<(add,add(numbers[i]))<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,numbers[i])<SUB>15</SUB>>", "95": "<(IDENTIFIER,i,add(numbers[i]))<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.assignment,int[] belongs = new int[n])<SUB>18</SUB>>", "99": "<(&lt;operator&gt;.alloc,new int[n])>", "101": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; belongs.length); i++),for (int i = 0; Some(i &lt; belongs.length); i++))<SUB>19</SUB>>", "103": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>19</SUB>>", "105": "<(LITERAL,0,int i = 0)<SUB>19</SUB>>", "107": "<(IDENTIFIER,i,i &lt; belongs.length)<SUB>19</SUB>>", "109": "<(IDENTIFIER,belongs,i &lt; belongs.length)<SUB>19</SUB>>", "111": "<(&lt;operator&gt;.postIncrement,i++)<SUB>19</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,belongs[i])<SUB>20</SUB>>", "117": "<(IDENTIFIER,i,belongs[i] = -1)<SUB>20</SUB>>", "119": "<(LITERAL,1,-1)<SUB>20</SUB>>", "120": "<(&lt;operator&gt;.assignment,ANY numberToIndex = new HashMap&lt;Integer, Integer&gt;())<SUB>23</SUB>>", "122": "<(&lt;operator&gt;.alloc,new HashMap&lt;Integer, Integer&gt;())<SUB>23</SUB>>", "7": "<(IDENTIFIER,numberToIndex,new HashMap&lt;Integer, Integer&gt;())<SUB>23</SUB>>", "125": "<(LOCAL,int i: int)<SUB>24</SUB>>", "127": "<(IDENTIFIER,i,int i = 0)<SUB>24</SUB>>", "129": "<(&lt;operator&gt;.lessThan,i &lt; numbers.length)<SUB>24</SUB>>", "131": "<(&lt;operator&gt;.fieldAccess,numbers.length)<SUB>24</SUB>>", "133": "<(FIELD_IDENTIFIER,length,length)<SUB>24</SUB>>", "135": "<(IDENTIFIER,i,i++)<SUB>24</SUB>>", "137": "<(put,put(numbers[i], i))<SUB>25</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,numbers[i])<SUB>25</SUB>>", "141": "<(IDENTIFIER,i,put(numbers[i], i))<SUB>25</SUB>>", "143": "<(LOCAL,boolean possible: boolean)<SUB>28</SUB>>", "145": "<(IDENTIFIER,possible,boolean possible = true)<SUB>28</SUB>>", "147": "<(LOCAL,List&lt;List&lt;Integer&gt;&gt; layers: ANY)<SUB>30</SUB>>", "149": "<(IDENTIFIER,layers,ANY layers = getLayers(numbers, a, b))<SUB>30</SUB>>", "151": "<(IDENTIFIER,this,getLayers(numbers, a, b))<SUB>30</SUB>>", "153": "<(IDENTIFIER,a,getLayers(numbers, a, b))<SUB>30</SUB>>", "155": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>31</SUB>>", "157": "<(IDENTIFIER,$iterLocal0,)<SUB>31</SUB>>", "159": "<(IDENTIFIER,layers,&lt;empty&gt;)<SUB>31</SUB>>", "161": "<(hasNext,&lt;empty&gt;)<SUB>31</SUB>>", "163": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>31</SUB>>", "167": "<(next,&lt;empty&gt;)<SUB>31</SUB>>", "169": "<(CONTROL_STRUCTURE,if (layer.size() == 0),if (layer.size() == 0))<SUB>33</SUB>>", "171": "<(size,size())<SUB>33</SUB>>", "173": "<(LITERAL,0,layer.size() == 0)<SUB>33</SUB>>", "175": "<(println,System.out.println(&quot;NO&quot;))<SUB>34</SUB>>", "177": "<(IDENTIFIER,System,System.out.println(&quot;NO&quot;))<SUB>34</SUB>>", "179": "<(LITERAL,&quot;NO&quot;,System.out.println(&quot;NO&quot;))<SUB>34</SUB>>", "181": "<(LOCAL,int starting: int)<SUB>38</SUB>>", "183": "<(IDENTIFIER,starting,int starting = -1)<SUB>38</SUB>>", "185": "<(LITERAL,1,-1)<SUB>38</SUB>>", "187": "<(LOCAL,int j: int)<SUB>39</SUB>>", "189": "<(IDENTIFIER,j,int j = 0)<SUB>39</SUB>>", "191": "<(&lt;operator&gt;.lessThan,j &lt; layer.size())<SUB>39</SUB>>", "193": "<(size,size())<SUB>39</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,j++)<SUB>39</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>>", "199": "<(&lt;operator&gt;.assignment,int cur = get(j))<SUB>40</SUB>>", "201": "<(get,get(j))<SUB>40</SUB>>", "203": "<(IDENTIFIER,j,get(j))<SUB>40</SUB>>", "205": "<(&lt;operator&gt;.assignment,int nei = 0)<SUB>42</SUB>>", "207": "<(LITERAL,0,int nei = 0)<SUB>42</SUB>>", "209": "<(contains,contains(a - cur))<SUB>43</SUB>>", "211": "<(&lt;operator&gt;.subtraction,a - cur)<SUB>43</SUB>>", "213": "<(IDENTIFIER,cur,a - cur)<SUB>43</SUB>>", "215": "<(&lt;operator&gt;.postIncrement,nei++)<SUB>44</SUB>>", "217": "<(CONTROL_STRUCTURE,if (hs.contains(b - cur)),if (hs.contains(b - cur)))<SUB>47</SUB>>", "219": "<(IDENTIFIER,hs,contains(b - cur))<SUB>47</SUB>>", "221": "<(IDENTIFIER,b,b - cur)<SUB>47</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "225": "<(IDENTIFIER,nei,nei++)<SUB>48</SUB>>", "227": "<(&lt;operator&gt;.logicalOr,nei == 1 || (a == b &amp;&amp; nei == 2))<SUB>51</SUB>>", "229": "<(IDENTIFIER,nei,nei == 1)<SUB>51</SUB>>", "231": "<(&lt;operator&gt;.logicalAnd,a == b &amp;&amp; nei == 2)<SUB>51</SUB>>", "233": "<(IDENTIFIER,a,a == b)<SUB>51</SUB>>", "235": "<(&lt;operator&gt;.equals,nei == 2)<SUB>51</SUB>>", "237": "<(LITERAL,2,nei == 2)<SUB>51</SUB>>", "239": "<(&lt;operator&gt;.assignment,starting = j)<SUB>52</SUB>>", "241": "<(IDENTIFIER,j,starting = j)<SUB>52</SUB>>", "243": "<(&lt;operator&gt;.equals,starting == -1)<SUB>56</SUB>>", "245": "<(&lt;operator&gt;.minus,-1)<SUB>56</SUB>>", "247": "<(&lt;operator&gt;.throw,throw new Error();)<SUB>57</SUB>>", "249": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "251": "<(&lt;operator&gt;.alloc,new Error())<SUB>57</SUB>>", "253": "<(IDENTIFIER,$obj3,new Error())>", "255": "<(LOCAL,int c: int)<SUB>59</SUB>>", "257": "<(IDENTIFIER,c,int c = get(starting))<SUB>59</SUB>>", "259": "<(IDENTIFIER,layer,get(starting))<SUB>59</SUB>>", "10": "<(LOCAL,HashSet&lt;Integer&gt; layerset: ANY)<SUB>60</SUB>>", "262": "<(IDENTIFIER,layerset,ANY layerset = new HashSet&lt;Integer&gt;(layer))<SUB>60</SUB>>", "264": "<(&lt;init&gt;,new HashSet&lt;Integer&gt;(layer))<SUB>60</SUB>>", "265": "<(IDENTIFIER,layer,new HashSet&lt;Integer&gt;(layer))<SUB>60</SUB>>", "267": "<(LITERAL,true,while (true))<SUB>61</SUB>>", "269": "<(CONTROL_STRUCTURE,if (layerset.contains(c) &amp;&amp; layerset.contains(a - c)),if (layerset.contains(c) &amp;&amp; layerset.contains(a - c)))<SUB>63</SUB>>", "271": "<(contains,contains(c))<SUB>63</SUB>>", "273": "<(IDENTIFIER,c,contains(c))<SUB>63</SUB>>", "275": "<(IDENTIFIER,layerset,contains(a - c))<SUB>63</SUB>>", "277": "<(IDENTIFIER,a,a - c)<SUB>63</SUB>>", "279": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,belongs[numberToIndex.get(c)])<SUB>64</SUB>>", "283": "<(get,get(c))<SUB>64</SUB>>", "285": "<(IDENTIFIER,c,get(c))<SUB>64</SUB>>", "287": "<(&lt;operator&gt;.assignment,belongs[numberToIndex.get(a - c)] = 0)<SUB>65</SUB>>", "289": "<(IDENTIFIER,belongs,belongs[numberToIndex.get(a - c)] = 0)<SUB>65</SUB>>", "291": "<(IDENTIFIER,numberToIndex,get(a - c))<SUB>65</SUB>>", "293": "<(IDENTIFIER,a,a - c)<SUB>65</SUB>>", "295": "<(LITERAL,0,belongs[numberToIndex.get(a - c)] = 0)<SUB>65</SUB>>", "297": "<(IDENTIFIER,layerset,remove(c))<SUB>66</SUB>>", "299": "<(remove,remove(a - c))<SUB>67</SUB>>", "301": "<(&lt;operator&gt;.subtraction,a - c)<SUB>67</SUB>>", "303": "<(IDENTIFIER,c,a - c)<SUB>67</SUB>>", "305": "<(IDENTIFIER,c,c = b - (a - c))<SUB>68</SUB>>", "307": "<(IDENTIFIER,b,b - (a - c))<SUB>68</SUB>>", "309": "<(IDENTIFIER,a,a - c)<SUB>68</SUB>>", "311": "<(CONTROL_STRUCTURE,else,else)<SUB>69</SUB>>", "313": "<(&lt;operator&gt;.logicalAnd,layerset.contains(c) &amp;&amp; layerset.contains(b - c))<SUB>69</SUB>>", "315": "<(IDENTIFIER,layerset,contains(c))<SUB>69</SUB>>", "317": "<(contains,contains(b - c))<SUB>69</SUB>>", "319": "<(&lt;operator&gt;.subtraction,b - c)<SUB>69</SUB>>", "321": "<(IDENTIFIER,c,b - c)<SUB>69</SUB>>", "323": "<(&lt;operator&gt;.assignment,belongs[numberToIndex.get(c)] = 1)<SUB>70</SUB>>", "325": "<(IDENTIFIER,belongs,belongs[numberToIndex.get(c)] = 1)<SUB>70</SUB>>", "327": "<(IDENTIFIER,numberToIndex,get(c))<SUB>70</SUB>>", "329": "<(LITERAL,1,belongs[numberToIndex.get(c)] = 1)<SUB>70</SUB>>", "331": "<(&lt;operator&gt;.indexAccess,belongs[numberToIndex.get(b - c)])<SUB>71</SUB>>", "333": "<(get,get(b - c))<SUB>71</SUB>>", "335": "<(&lt;operator&gt;.subtraction,b - c)<SUB>71</SUB>>", "337": "<(IDENTIFIER,c,b - c)<SUB>71</SUB>>", "339": "<(remove,remove(c))<SUB>72</SUB>>", "341": "<(IDENTIFIER,c,remove(c))<SUB>72</SUB>>", "343": "<(IDENTIFIER,layerset,remove(b - c))<SUB>73</SUB>>", "345": "<(IDENTIFIER,b,b - c)<SUB>73</SUB>>", "347": "<(&lt;operator&gt;.assignment,c = a - (b - c))<SUB>74</SUB>>", "349": "<(&lt;operator&gt;.subtraction,a - (b - c))<SUB>74</SUB>>", "351": "<(&lt;operator&gt;.subtraction,b - c)<SUB>74</SUB>>", "353": "<(IDENTIFIER,c,b - c)<SUB>74</SUB>>", "355": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "357": "<(printResult,printResult(belongs))<SUB>82</SUB>>", "359": "<(IDENTIFIER,belongs,printResult(belongs))<SUB>82</SUB>>", "361": "<(MODIFIER,STATIC)>"}}