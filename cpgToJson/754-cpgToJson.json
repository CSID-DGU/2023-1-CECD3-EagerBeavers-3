{"edges": [["25", "27"], ["25", "121"], ["25", "122"], ["25", "123"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "42"], ["27", "45"], ["27", "49"], ["27", "50"], ["27", "56"], ["27", "57"], ["27", "8"], ["27", "61"], ["27", "64"], ["27", "65"], ["27", "10"], ["27", "82"], ["27", "85"], ["27", "86"], ["27", "87"], ["27", "91"], ["27", "103"], ["27", "104"], ["27", "108"], ["27", "117"], ["27", "119"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "36"], ["32", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["42", "43"], ["42", "44"], ["45", "5"], ["45", "46"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["61", "62"], ["61", "63"], ["64", "7"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "74"], ["65", "76"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["74", "75"], ["76", "77"], ["77", "78"], ["77", "79"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "9"], ["87", "88"], ["87", "89"], ["89", "90"], ["91", "92"], ["91", "94"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "100"], ["96", "97"], ["96", "98"], ["98", "99"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["113", "114"], ["113", "115"], ["113", "116"], ["117", "118"], ["119", "120"], ["28", "35"], ["31", "44"], ["42", "48"], ["45", "54"], ["50", "59"], ["57", "63"], ["61", "64"], ["64", "67"], ["82", "85"], ["85", "89"], ["87", "92"], ["104", "111"], ["108", "117"], ["117", "119"], ["119", "123"], ["30", "28"], ["44", "42"], ["46", "45"], ["52", "50"], ["59", "57"], ["63", "61"], ["67", "72"], ["70", "79"], ["70", "84"], ["74", "72"], ["84", "82"], ["89", "87"], ["92", "98"], ["92", "106"], ["106", "104"], ["109", "113"], ["112", "108"], ["33", "40"], ["36", "31"], ["48", "46"], ["54", "52"], ["72", "70"], ["77", "74"], ["96", "100"], ["100", "92"], ["111", "109"], ["113", "112"], ["35", "33"], ["38", "36"], ["79", "77"], ["98", "96"], ["40", "38"], ["25", "30"], ["26", "123"], ["28", "123"], ["36", "123"], ["36", "123"], ["36", "123"], ["31", "123"], ["42", "123"], ["45", "123"], ["50", "123"], ["50", "123"], ["50", "123"], ["57", "123"], ["57", "123"], ["61", "123"], ["64", "123"], ["67", "123"], ["70", "123"], ["70", "123"], ["70", "123"], ["82", "123"], ["85", "123"], ["89", "123"], ["87", "123"], ["92", "123"], ["92", "123"], ["106", "123"], ["104", "123"], ["104", "123"], ["108", "123"], ["113", "123"], ["113", "123"], ["112", "123"], ["108", "123"], ["108", "123"], ["117", "123"], ["119", "123"], ["119", "123"], ["100", "123"], ["100", "123"], ["77", "123"], ["77", "123"], ["74", "123"], ["113", "123"], ["52", "123"], ["25", "26"], ["25", "28"], ["25", "42"], ["52", "50"], ["52", "50"], ["59", "57"], ["25", "61"], ["25", "82"], ["89", "87"], ["106", "104"], ["28", "31"], ["25", "31"], ["33", "31"], ["36", "31"], ["42", "45"], ["25", "45"], ["61", "64"], ["25", "64"], ["25", "67"], ["82", "85"], ["25", "85"], ["45", "108"], ["112", "108"], ["45", "117"], ["25", "117"], ["59", "119"], ["25", "119"], ["25", "33"], ["25", "41"], ["25", "52"], ["54", "52"], ["54", "59"], ["25", "59"], ["67", "70"], ["74", "70"], ["25", "70"], ["72", "70"], ["79", "74"], ["25", "74"], ["64", "89"], ["77", "89"], ["25", "89"], ["87", "92"], ["98", "92"], ["25", "92"], ["98", "96"], ["85", "106"], ["100", "106"], ["25", "106"], ["113", "112"], ["113", "112"], ["113", "112"], ["33", "36"], ["25", "36"], ["31", "54"], ["25", "54"], ["57", "72"], ["79", "72"], ["25", "72"], ["64", "77"], ["25", "77"], ["79", "77"], ["79", "77"], ["85", "100"], ["25", "100"], ["96", "100"], ["25", "113"], ["72", "113"], ["104", "113"], ["72", "79"], ["25", "79"], ["70", "79"], ["92", "98"], ["25", "98"], ["70", "77"], ["70", "72"], ["70", "70"], ["70", "74"], ["70", "79"], ["92", "96"], ["92", "98"], ["92", "100"], ["92", "92"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "35": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "39": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "41": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "42": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "44": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "49": "<(LOCAL,int n: int)<SUB>4</SUB>>", "51": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "53": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>4</SUB>>", "55": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "57": "<(&lt;operator&gt;.assignment,String input = readLine())<SUB>5</SUB>>", "59": "<(readLine,readLine())<SUB>5</SUB>>", "8": "<(LOCAL,Set&lt;Character&gt; set: ANY)<SUB>6</SUB>>", "62": "<(IDENTIFIER,set,ANY set = new HashSet&lt;Character&gt;())<SUB>6</SUB>>", "64": "<(&lt;init&gt;,new HashSet&lt;Character&gt;())<SUB>6</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; input.length()); i++),for (int i = 0; Some(i &lt; input.length()); i++))<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i &lt; input.length())<SUB>7</SUB>>", "73": "<(IDENTIFIER,input,input.length())<SUB>7</SUB>>", "75": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "77": "<(add,add(input.charAt(i)))<SUB>8</SUB>>", "79": "<(charAt,input.charAt(i))<SUB>8</SUB>>", "81": "<(IDENTIFIER,i,input.charAt(i))<SUB>8</SUB>>", "82": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder())<SUB>10</SUB>>", "84": "<(&lt;operator&gt;.alloc,new StringBuilder())<SUB>10</SUB>>", "9": "<(IDENTIFIER,sb,new StringBuilder())<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.assignment,)<SUB>11</SUB>>", "89": "<(iterator,&lt;empty&gt;)<SUB>11</SUB>>", "91": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>11</SUB>>", "93": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "95": "<(LOCAL,x: char)<SUB>11</SUB>>", "97": "<(IDENTIFIER,x,&lt;empty&gt;)>", "99": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "101": "<(IDENTIFIER,sb,sb.append(x))<SUB>12</SUB>>", "103": "<(LOCAL,String substring1: java.lang.String)<SUB>14</SUB>>", "105": "<(IDENTIFIER,substring1,String substring1 = sb.toString())<SUB>14</SUB>>", "107": "<(IDENTIFIER,sb,sb.toString())<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>40</SUB>>", "111": "<(FIELD_IDENTIFIER,out,out)<SUB>40</SUB>>", "113": "<(solve,solve(input, substring1))<SUB>40</SUB>>", "115": "<(IDENTIFIER,input,solve(input, substring1))<SUB>40</SUB>>", "117": "<(close,close())<SUB>41</SUB>>", "119": "<(close,close())<SUB>42</SUB>>", "121": "<(MODIFIER,PUBLIC)>", "123": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}