{"edges": [["21", "22"], ["21", "23"], ["21", "238"], ["21", "239"], ["21", "240"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "45"], ["23", "46"], ["23", "52"], ["23", "53"], ["23", "62"], ["23", "63"], ["23", "70"], ["23", "79"], ["23", "80"], ["23", "86"], ["23", "89"], ["23", "90"], ["23", "99"], ["23", "105"], ["23", "114"], ["23", "121"], ["23", "205"], ["23", "206"], ["23", "209"], ["23", "233"], ["23", "236"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "51"], ["49", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "76"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["82", "83"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["105", "108"], ["105", "111"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "120"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "153"], ["143", "155"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["153", "154"], ["155", "156"], ["156", "157"], ["156", "168"], ["157", "158"], ["157", "165"], ["158", "159"], ["158", "160"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "204"], ["169", "170"], ["169", "181"], ["170", "171"], ["170", "178"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "203"], ["182", "183"], ["182", "196"], ["183", "184"], ["183", "195"], ["184", "185"], ["184", "190"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["196", "197"], ["196", "202"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["209", "214"], ["209", "217"], ["209", "219"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "216"], ["217", "218"], ["219", "220"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "232"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "228"], ["228", "229"], ["228", "230"], ["233", "234"], ["233", "235"], ["236", "237"], ["24", "31"], ["27", "40"], ["38", "44"], ["41", "49"], ["46", "56"], ["53", "67"], ["63", "73"], ["70", "83"], ["80", "86"], ["86", "93"], ["90", "102"], ["99", "108"], ["105", "116"], ["114", "123"], ["206", "211"], ["233", "236"], ["236", "240"], ["26", "24"], ["40", "38"], ["42", "41"], ["48", "46"], ["55", "53"], ["65", "63"], ["72", "70"], ["82", "80"], ["92", "90"], ["102", "99"], ["108", "111"], ["111", "105"], ["115", "114"], ["123", "126"], ["126", "134"], ["126", "206"], ["129", "126"], ["211", "214"], ["214", "228"], ["214", "233"], ["217", "214"], ["29", "36"], ["32", "27"], ["44", "42"], ["49", "48"], ["56", "59"], ["57", "55"], ["67", "65"], ["73", "76"], ["76", "72"], ["83", "82"], ["93", "96"], ["96", "92"], ["116", "115"], ["220", "217"], ["31", "29"], ["34", "32"], ["59", "57"], ["134", "137"], ["137", "145"], ["137", "129"], ["140", "137"], ["222", "220"], ["36", "34"], ["223", "222"], ["145", "149"], ["148", "161"], ["148", "140"], ["153", "149"], ["225", "223"], ["149", "148"], ["156", "153"], ["226", "225"], ["157", "174"], ["168", "156"], ["228", "226"], ["158", "165"], ["165", "157"], ["169", "168"], ["160", "158"], ["170", "186"], ["181", "169"], ["161", "160"], ["171", "178"], ["178", "170"], ["182", "181"], ["173", "171"], ["183", "199"], ["196", "182"], ["174", "173"], ["184", "183"], ["197", "196"], ["185", "192"], ["190", "184"], ["199", "197"], ["186", "185"], ["192", "190"], ["21", "26"], ["22", "240"], ["24", "240"], ["29", "240"], ["32", "240"], ["32", "240"], ["32", "240"], ["27", "240"], ["38", "240"], ["41", "240"], ["41", "240"], ["46", "240"], ["49", "240"], ["48", "240"], ["46", "240"], ["46", "240"], ["57", "240"], ["55", "240"], ["53", "240"], ["53", "240"], ["65", "240"], ["65", "240"], ["63", "240"], ["63", "240"], ["70", "240"], ["70", "240"], ["80", "240"], ["80", "240"], ["86", "240"], ["86", "240"], ["86", "240"], ["90", "240"], ["90", "240"], ["99", "240"], ["99", "240"], ["99", "240"], ["105", "240"], ["105", "240"], ["105", "240"], ["105", "240"], ["114", "240"], ["114", "240"], ["126", "240"], ["206", "240"], ["211", "240"], ["214", "240"], ["214", "240"], ["214", "240"], ["233", "240"], ["233", "240"], ["236", "240"], ["236", "240"], ["223", "240"], ["222", "240"], ["222", "240"], ["220", "240"], ["220", "240"], ["217", "240"], ["134", "240"], ["137", "240"], ["137", "240"], ["129", "240"], ["145", "240"], ["149", "240"], ["148", "240"], ["148", "240"], ["140", "240"], ["156", "240"], ["173", "240"], ["184", "240"], ["184", "240"], ["183", "240"], ["182", "240"], ["182", "240"], ["181", "240"], ["169", "240"], ["168", "240"], ["168", "240"], ["156", "240"], ["156", "240"], ["153", "240"], ["21", "22"], ["21", "24"], ["21", "38"], ["48", "46"], ["48", "46"], ["21", "53"], ["57", "53"], ["57", "53"], ["65", "63"], ["65", "63"], ["72", "70"], ["82", "80"], ["63", "86"], ["21", "86"], ["92", "90"], ["21", "114"], ["21", "206"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["21", "99"], ["80", "99"], ["53", "99"], ["99", "105"], ["21", "105"], ["90", "105"], ["53", "105"], ["21", "123"], ["21", "211"], ["41", "233"], ["21", "233"], ["206", "233"], ["220", "233"], ["233", "236"], ["21", "236"], ["21", "29"], ["21", "37"], ["49", "48"], ["21", "48"], ["21", "55"], ["57", "55"], ["57", "55"], ["57", "65"], ["21", "65"], ["46", "65"], ["53", "72"], ["21", "72"], ["21", "82"], ["53", "82"], ["21", "92"], ["53", "92"], ["21", "102"], ["53", "102"], ["21", "108"], ["53", "108"], ["21", "111"], ["53", "111"], ["123", "126"], ["129", "126"], ["21", "126"], ["148", "126"], ["53", "126"], ["137", "129"], ["21", "129"], ["211", "214"], ["217", "214"], ["21", "214"], ["126", "214"], ["214", "217"], ["21", "217"], ["222", "220"], ["222", "220"], ["29", "32"], ["21", "32"], ["27", "49"], ["21", "49"], ["21", "57"], ["46", "57"], ["53", "73"], ["21", "73"], ["21", "76"], ["53", "76"], ["21", "83"], ["53", "83"], ["21", "93"], ["53", "93"], ["21", "96"], ["53", "96"], ["21", "134"], ["134", "137"], ["140", "137"], ["21", "137"], ["126", "137"], ["137", "140"], ["21", "140"], ["206", "222"], ["220", "222"], ["21", "222"], ["86", "222"], ["168", "222"], ["21", "145"], ["206", "223"], ["220", "223"], ["21", "223"], ["145", "148"], ["153", "148"], ["21", "148"], ["137", "148"], ["126", "148"], ["21", "153"], ["192", "153"], ["168", "156"], ["168", "156"], ["145", "149"], ["153", "149"], ["21", "149"], ["137", "149"], ["156", "168"], ["181", "168"], ["181", "168"], ["21", "168"], ["214", "228"], ["21", "228"], ["137", "165"], ["21", "165"], ["145", "165"], ["153", "165"], ["156", "169"], ["181", "169"], ["181", "169"], ["21", "160"], ["145", "160"], ["153", "160"], ["182", "181"], ["182", "181"], ["183", "181"], ["21", "181"], ["21", "161"], ["145", "161"], ["153", "161"], ["21", "178"], ["137", "178"], ["145", "178"], ["153", "178"], ["183", "182"], ["183", "182"], ["21", "173"], ["145", "173"], ["153", "173"], ["184", "183"], ["184", "183"], ["86", "183"], ["168", "183"], ["21", "183"], ["21", "174"], ["145", "174"], ["153", "174"], ["99", "184"], ["21", "199"], ["137", "199"], ["192", "199"], ["21", "192"], ["145", "192"], ["153", "192"], ["126", "129"], ["126", "134"], ["126", "126"], ["126", "137"], ["214", "214"], ["214", "225"], ["214", "226"], ["214", "228"], ["214", "217"], ["214", "220"], ["214", "223"], ["214", "222"], ["137", "145"], ["137", "149"], ["137", "140"], ["137", "148"], ["137", "137"], ["148", "160"], ["148", "183"], ["148", "192"], ["148", "169"], ["148", "161"], ["148", "178"], ["148", "196"], ["148", "149"], ["148", "185"], ["148", "197"], ["148", "153"], ["148", "168"], ["148", "170"], ["148", "157"], ["148", "181"], ["148", "148"], ["148", "190"], ["148", "184"], ["148", "173"], ["148", "199"], ["148", "165"], ["148", "174"], ["148", "182"], ["148", "186"], ["148", "156"], ["148", "158"], ["148", "171"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>4</SUB>>", "43": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "45": "<(LOCAL,String[] s2: java.lang.String[])<SUB>6</SUB>>", "47": "<(IDENTIFIER,s2,String[] s2 = split(&quot; &quot;))<SUB>6</SUB>>", "49": "<(readLine,readLine())<SUB>6</SUB>>", "51": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int n = (int) Long.parseLong(s2[0]))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.cast,(int) Long.parseLong(s2[0]))<SUB>8</SUB>>", "57": "<(parseLong,Long.parseLong(s2[0]))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,s2[0])<SUB>8</SUB>>", "61": "<(LITERAL,0,Long.parseLong(s2[0]))<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,long m = Long.parseLong(s2[1]))<SUB>9</SUB>>", "65": "<(parseLong,Long.parseLong(s2[1]))<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,s2[1])<SUB>9</SUB>>", "69": "<(LITERAL,1,Long.parseLong(s2[1]))<SUB>9</SUB>>", "71": "<(IDENTIFIER,dp,dp = new long[n + 2][n + 2])<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.addition,n + 2)<SUB>10</SUB>>", "75": "<(LITERAL,2,n + 2)<SUB>10</SUB>>", "77": "<(IDENTIFIER,n,n + 2)<SUB>10</SUB>>", "79": "<(LOCAL,long[] power: long[])<SUB>11</SUB>>", "81": "<(IDENTIFIER,power,long[] power = new long[n + 1])<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.addition,n + 1)<SUB>11</SUB>>", "85": "<(LITERAL,1,n + 1)<SUB>11</SUB>>", "87": "<(IDENTIFIER,mod,mod = m)<SUB>12</SUB>>", "89": "<(LOCAL,long[][] choose: long[][])<SUB>13</SUB>>", "91": "<(IDENTIFIER,choose,long[][] choose = new long[n + 2][n + 2])<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.addition,n + 2)<SUB>13</SUB>>", "95": "<(LITERAL,2,n + 2)<SUB>13</SUB>>", "97": "<(IDENTIFIER,n,n + 2)<SUB>13</SUB>>", "99": "<(getPow,getPow(power, n + 1))<SUB>14</SUB>>", "101": "<(IDENTIFIER,power,getPow(power, n + 1))<SUB>14</SUB>>", "103": "<(IDENTIFIER,n,n + 1)<SUB>14</SUB>>", "105": "<(getChoose,getChoose(choose, n + 2, n + 2))<SUB>15</SUB>>", "107": "<(IDENTIFIER,choose,getChoose(choose, n + 2, n + 2))<SUB>15</SUB>>", "109": "<(IDENTIFIER,n,n + 2)<SUB>15</SUB>>", "111": "<(&lt;operator&gt;.addition,n + 2)<SUB>15</SUB>>", "113": "<(LITERAL,2,n + 2)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,dp[0][0])<SUB>16</SUB>>", "117": "<(IDENTIFIER,dp,dp[0][0] = 1)<SUB>16</SUB>>", "119": "<(LITERAL,0,dp[0][0] = 1)<SUB>16</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "127": "<(IDENTIFIER,i,i &lt; n)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "133": "<(LOCAL,int j: int)<SUB>18</SUB>>", "135": "<(IDENTIFIER,j,int j = 0)<SUB>18</SUB>>", "137": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= i)<SUB>18</SUB>>", "139": "<(IDENTIFIER,i,j &lt;= i)<SUB>18</SUB>>", "141": "<(IDENTIFIER,j,j++)<SUB>18</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int k = 1; Some(k + i &lt;= n); k++),for (int k = 1; Some(k + i &lt;= n); k++))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.assignment,int k = 1)<SUB>19</SUB>>", "147": "<(LITERAL,1,int k = 1)<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.addition,k + i)<SUB>19</SUB>>", "151": "<(IDENTIFIER,i,k + i)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.postIncrement,k++)<SUB>19</SUB>>", "155": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1][j + k])<SUB>21</SUB>>", "159": "<(IDENTIFIER,dp,dp[i + k + 1][j + k] = (dp[i + k + 1][j + k] + (((dp[i][j] * power[k - 1]) % mod) * choose[j + k][k]) % mod) % mod)<SUB>21</SUB>>", "161": "<(&lt;operator&gt;.addition,i + k)<SUB>21</SUB>>", "163": "<(IDENTIFIER,k,i + k)<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.addition,j + k)<SUB>21</SUB>>", "167": "<(IDENTIFIER,k,j + k)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.addition,dp[i + k + 1][j + k] + (((dp[i][j] * power[k - 1]) % mod) * choose[j + k][k]) % mod)<SUB>22</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,dp[i + k + 1])<SUB>22</SUB>>", "173": "<(&lt;operator&gt;.addition,i + k + 1)<SUB>22</SUB>>", "175": "<(IDENTIFIER,i,i + k)<SUB>22</SUB>>", "177": "<(LITERAL,1,i + k + 1)<SUB>22</SUB>>", "179": "<(IDENTIFIER,j,j + k)<SUB>22</SUB>>", "181": "<(&lt;operator&gt;.modulo,(((dp[i][j] * power[k - 1]) % mod) * choose[j + k][k]) % mod)<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.modulo,(dp[i][j] * power[k - 1]) % mod)<SUB>22</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>22</SUB>>", "187": "<(IDENTIFIER,dp,dp[i][j] * power[k - 1])<SUB>22</SUB>>", "189": "<(IDENTIFIER,j,dp[i][j] * power[k - 1])<SUB>22</SUB>>", "191": "<(IDENTIFIER,power,dp[i][j] * power[k - 1])<SUB>22</SUB>>", "193": "<(IDENTIFIER,k,k - 1)<SUB>22</SUB>>", "195": "<(IDENTIFIER,mod,(dp[i][j] * power[k - 1]) % mod)<SUB>22</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,choose[j + k])<SUB>22</SUB>>", "199": "<(&lt;operator&gt;.addition,j + k)<SUB>22</SUB>>", "201": "<(IDENTIFIER,k,j + k)<SUB>22</SUB>>", "203": "<(IDENTIFIER,mod,(((dp[i][j] * power[k - 1]) % mod) * choose[j + k][k]) % mod)<SUB>22</SUB>>", "205": "<(LOCAL,long ans: long)<SUB>27</SUB>>", "207": "<(IDENTIFIER,ans,long ans = 0)<SUB>27</SUB>>", "209": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); i++),for (int i = 0; Some(i &lt;= n); i++))<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "213": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "215": "<(IDENTIFIER,i,i &lt;= n)<SUB>28</SUB>>", "217": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "219": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "221": "<(IDENTIFIER,ans,ans = (ans + dp[n + 1][i]) % mod)<SUB>29</SUB>>", "223": "<(&lt;operator&gt;.addition,ans + dp[n + 1][i])<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,dp[n + 1][i])<SUB>29</SUB>>", "227": "<(IDENTIFIER,dp,ans + dp[n + 1][i])<SUB>29</SUB>>", "229": "<(IDENTIFIER,n,n + 1)<SUB>29</SUB>>", "231": "<(IDENTIFIER,i,ans + dp[n + 1][i])<SUB>29</SUB>>", "233": "<(println,println(ans))<SUB>31</SUB>>", "235": "<(IDENTIFIER,ans,println(ans))<SUB>31</SUB>>", "237": "<(IDENTIFIER,pw,close())<SUB>32</SUB>>", "239": "<(MODIFIER,STATIC)>"}}