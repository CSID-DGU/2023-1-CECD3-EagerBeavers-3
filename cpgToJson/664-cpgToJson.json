{"edges": [["21", "22"], ["21", "23"], ["21", "72"], ["21", "73"], ["21", "74"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "64"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "55"], ["45", "57"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "71"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "47"], ["64", "74"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "54"], ["50", "59"], ["50", "67"], ["55", "54"], ["65", "68"], ["68", "64"], ["34", "32"], ["52", "50"], ["58", "55"], ["67", "65"], ["54", "52"], ["59", "62"], ["62", "58"], ["21", "26"], ["22", "74"], ["24", "74"], ["27", "74"], ["28", "74"], ["31", "74"], ["31", "74"], ["38", "74"], ["36", "74"], ["36", "74"], ["41", "74"], ["41", "74"], ["47", "74"], ["50", "74"], ["50", "74"], ["64", "74"], ["68", "74"], ["68", "74"], ["68", "74"], ["64", "74"], ["64", "74"], ["58", "74"], ["62", "74"], ["58", "74"], ["58", "74"], ["55", "74"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "47"], ["68", "64"], ["68", "64"], ["68", "64"], ["31", "38"], ["21", "38"], ["36", "43"], ["21", "43"], ["47", "50"], ["55", "50"], ["21", "50"], ["41", "50"], ["50", "55"], ["21", "55"], ["62", "58"], ["27", "68"], ["21", "68"], ["43", "68"], ["41", "68"], ["50", "68"], ["58", "68"], ["38", "62"], ["21", "62"], ["50", "58"], ["50", "50"], ["50", "59"], ["50", "52"], ["50", "55"], ["50", "54"], ["50", "62"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,Main iq = new Main())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Main())<SUB>2</SUB>>", "3": "<(IDENTIFIER,iq,new Main())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "5": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] naturalNumbers = new int[n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; naturalNumbers.length); i++),for (int i = 0; Some(i &lt; naturalNumbers.length); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; naturalNumbers.length)<SUB>7</SUB>>", "53": "<(IDENTIFIER,naturalNumbers,i &lt; naturalNumbers.length)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,naturalNumbers[i])<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,naturalNumbers[i] = nextInt())<SUB>8</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "67": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "69": "<(IDENTIFIER,iq,diffInEvenness(n, naturalNumbers))<SUB>10</SUB>>", "71": "<(IDENTIFIER,naturalNumbers,diffInEvenness(n, naturalNumbers))<SUB>10</SUB>>", "73": "<(MODIFIER,STATIC)>"}}