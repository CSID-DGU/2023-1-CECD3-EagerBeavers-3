{"edges": [["23", "25"], ["23", "215"], ["23", "216"], ["23", "217"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "40"], ["25", "41"], ["25", "47"], ["25", "48"], ["25", "6"], ["25", "52"], ["25", "55"], ["25", "8"], ["25", "56"], ["25", "59"], ["25", "62"], ["25", "105"], ["25", "106"], ["25", "110"], ["25", "128"], ["25", "129"], ["25", "132"], ["25", "210"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["41", "42"], ["41", "43"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["55", "5"], ["56", "57"], ["56", "58"], ["59", "7"], ["59", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "74"], ["72", "80"], ["72", "85"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["80", "84"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "90"], ["85", "95"], ["86", "87"], ["87", "88"], ["87", "89"], ["90", "91"], ["91", "92"], ["91", "93"], ["91", "94"], ["95", "96"], ["96", "97"], ["97", "98"], ["97", "99"], ["97", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["106", "107"], ["106", "108"], ["108", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["132", "137"], ["132", "140"], ["132", "142"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["142", "143"], ["142", "144"], ["142", "147"], ["142", "204"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["157", "159"], ["157", "168"], ["157", "183"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "178"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["175", "177"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["183", "184"], ["183", "199"], ["184", "185"], ["184", "194"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["191", "192"], ["191", "193"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "207"], ["205", "206"], ["207", "208"], ["208", "209"], ["210", "211"], ["210", "214"], ["211", "212"], ["211", "213"], ["26", "33"], ["29", "45"], ["41", "50"], ["48", "54"], ["52", "55"], ["55", "58"], ["56", "60"], ["59", "64"], ["106", "112"], ["129", "134"], ["210", "217"], ["28", "26"], ["43", "41"], ["50", "48"], ["54", "52"], ["58", "56"], ["60", "59"], ["64", "67"], ["67", "78"], ["67", "108"], ["70", "67"], ["108", "106"], ["112", "115"], ["115", "122"], ["115", "129"], ["118", "115"], ["134", "137"], ["137", "144"], ["137", "213"], ["140", "137"], ["211", "210"], ["31", "38"], ["34", "29"], ["45", "43"], ["74", "81"], ["80", "87"], ["121", "118"], ["144", "149"], ["213", "211"], ["33", "31"], ["36", "34"], ["76", "74"], ["81", "80"], ["86", "91"], ["86", "101"], ["122", "125"], ["125", "121"], ["149", "152"], ["152", "162"], ["152", "205"], ["155", "152"], ["205", "208"], ["205", "140"], ["38", "36"], ["78", "76"], ["87", "86"], ["91", "70"], ["159", "170"], ["208", "140"], ["97", "70"], ["161", "159"], ["169", "179"], ["169", "186"], ["184", "200"], ["184", "155"], ["100", "97"], ["162", "165"], ["165", "161"], ["170", "169"], ["170", "175"], ["173", "169"], ["179", "205"], ["185", "184"], ["185", "195"], ["194", "184"], ["200", "205"], ["101", "100"], ["175", "173"], ["186", "185"], ["186", "191"], ["189", "185"], ["195", "194"], ["191", "189"], ["23", "28"], ["24", "217"], ["26", "217"], ["31", "217"], ["34", "217"], ["34", "217"], ["34", "217"], ["29", "217"], ["43", "217"], ["41", "217"], ["41", "217"], ["48", "217"], ["48", "217"], ["48", "217"], ["52", "217"], ["55", "217"], ["55", "217"], ["56", "217"], ["59", "217"], ["60", "217"], ["59", "217"], ["59", "217"], ["106", "217"], ["106", "217"], ["106", "217"], ["115", "217"], ["129", "217"], ["134", "217"], ["137", "217"], ["137", "217"], ["137", "217"], ["210", "217"], ["210", "217"], ["210", "217"], ["144", "217"], ["149", "217"], ["152", "217"], ["152", "217"], ["161", "217"], ["161", "217"], ["159", "217"], ["159", "217"], ["170", "217"], ["170", "217"], ["169", "217"], ["173", "217"], ["173", "217"], ["169", "217"], ["169", "217"], ["186", "217"], ["186", "217"], ["185", "217"], ["189", "217"], ["189", "217"], ["185", "217"], ["184", "217"], ["195", "217"], ["195", "217"], ["194", "217"], ["184", "217"], ["184", "217"], ["155", "217"], ["200", "217"], ["179", "217"], ["205", "217"], ["205", "217"], ["208", "217"], ["140", "217"], ["121", "217"], ["121", "217"], ["121", "217"], ["118", "217"], ["76", "217"], ["78", "217"], ["76", "217"], ["74", "217"], ["74", "217"], ["80", "217"], ["80", "217"], ["86", "217"], ["86", "217"], ["97", "217"], ["97", "217"], ["100", "217"], ["97", "217"], ["97", "217"], ["91", "217"], ["91", "217"], ["91", "217"], ["70", "217"], ["23", "24"], ["23", "26"], ["43", "41"], ["43", "41"], ["50", "48"], ["23", "52"], ["23", "56"], ["108", "106"], ["23", "129"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["52", "55"], ["23", "55"], ["56", "59"], ["23", "59"], ["60", "59"], ["23", "64"], ["23", "112"], ["23", "134"], ["129", "210"], ["208", "210"], ["23", "210"], ["23", "31"], ["23", "39"], ["23", "43"], ["45", "43"], ["41", "50"], ["23", "50"], ["45", "60"], ["23", "60"], ["64", "67"], ["70", "67"], ["23", "67"], ["50", "67"], ["67", "70"], ["23", "70"], ["76", "74"], ["76", "74"], ["74", "80"], ["23", "80"], ["23", "108"], ["112", "115"], ["118", "115"], ["23", "115"], ["125", "118"], ["23", "118"], ["125", "121"], ["125", "121"], ["134", "137"], ["140", "137"], ["23", "137"], ["67", "137"], ["137", "140"], ["23", "140"], ["23", "144"], ["31", "34"], ["23", "34"], ["29", "45"], ["23", "45"], ["23", "149"], ["43", "76"], ["23", "76"], ["78", "76"], ["87", "86"], ["87", "86"], ["23", "125"], ["115", "125"], ["149", "152"], ["155", "152"], ["23", "152"], ["152", "155"], ["23", "155"], ["161", "159"], ["161", "159"], ["144", "205"], ["200", "205"], ["179", "205"], ["23", "205"], ["59", "78"], ["23", "78"], ["55", "87"], ["97", "87"], ["91", "87"], ["23", "87"], ["74", "87"], ["87", "91"], ["23", "91"], ["87", "91"], ["129", "208"], ["23", "208"], ["101", "97"], ["23", "97"], ["101", "97"], ["106", "161"], ["48", "161"], ["173", "161"], ["189", "161"], ["80", "161"], ["170", "169"], ["170", "169"], ["173", "169"], ["173", "169"], ["23", "179"], ["185", "184"], ["185", "184"], ["194", "184"], ["194", "184"], ["23", "200"], ["101", "100"], ["101", "100"], ["23", "100"], ["55", "170"], ["186", "170"], ["195", "170"], ["97", "170"], ["91", "170"], ["23", "170"], ["159", "170"], ["170", "173"], ["23", "173"], ["48", "173"], ["161", "173"], ["186", "185"], ["186", "185"], ["189", "185"], ["189", "185"], ["195", "194"], ["195", "194"], ["23", "194"], ["87", "101"], ["23", "101"], ["87", "101"], ["170", "186"], ["23", "186"], ["170", "186"], ["173", "186"], ["186", "189"], ["23", "189"], ["48", "189"], ["161", "189"], ["173", "189"], ["186", "195"], ["23", "195"], ["186", "195"], ["189", "195"], ["67", "81"], ["67", "67"], ["67", "74"], ["67", "76"], ["67", "87"], ["67", "80"], ["67", "70"], ["67", "86"], ["67", "78"], ["115", "115"], ["115", "121"], ["115", "118"], ["115", "122"], ["115", "125"], ["137", "149"], ["137", "144"], ["137", "137"], ["137", "152"], ["137", "205"], ["137", "140"], ["86", "97"], ["86", "91"], ["86", "101"], ["86", "100"], ["152", "169"], ["152", "161"], ["152", "162"], ["152", "170"], ["152", "159"], ["152", "165"], ["205", "208"], ["169", "179"], ["169", "185"], ["169", "184"], ["169", "186"], ["184", "152"], ["184", "155"], ["184", "200"], ["170", "173"], ["170", "175"], ["185", "195"], ["185", "194"], ["186", "189"], ["186", "191"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>3</SUB>>", "43": "<(parseInt,parseInt(br.readLine()))<SUB>3</SUB>>", "45": "<(readLine,readLine())<SUB>3</SUB>>", "47": "<(LOCAL,int[] arr: int[])<SUB>4</SUB>>", "49": "<(IDENTIFIER,arr,int[] arr = new int[n])<SUB>4</SUB>>", "51": "<(IDENTIFIER,n,new int[n])<SUB>4</SUB>>", "52": "<(&lt;operator&gt;.assignment,ANY map = new HashMap&lt;&gt;())<SUB>5</SUB>>", "54": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>5</SUB>>", "5": "<(IDENTIFIER,map,new HashMap&lt;&gt;())<SUB>5</SUB>>", "56": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "58": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>6</SUB>>", "61": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "63": "<(LOCAL,int i: int)<SUB>7</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>7</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>7</SUB>>", "69": "<(IDENTIFIER,n,i &lt; n)<SUB>7</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>7</SUB>>", "73": "<(LOCAL,int x: int)<SUB>8</SUB>>", "75": "<(IDENTIFIER,x,int x = parseInt(st.nextToken()))<SUB>8</SUB>>", "77": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>8</SUB>>", "79": "<(IDENTIFIER,st,nextToken())<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>9</SUB>>", "83": "<(IDENTIFIER,i,arr[i] = x)<SUB>9</SUB>>", "85": "<(CONTROL_STRUCTURE,if (!map.containsKey(x)),if (!map.containsKey(x)))<SUB>10</SUB>>", "87": "<(containsKey,containsKey(x))<SUB>10</SUB>>", "89": "<(IDENTIFIER,x,containsKey(x))<SUB>10</SUB>>", "91": "<(put,put(x, 1))<SUB>11</SUB>>", "93": "<(IDENTIFIER,x,put(x, 1))<SUB>11</SUB>>", "95": "<(CONTROL_STRUCTURE,else,else)<SUB>12</SUB>>", "97": "<(replace,replace(x, map.get(x) + 1))<SUB>13</SUB>>", "99": "<(IDENTIFIER,x,replace(x, map.get(x) + 1))<SUB>13</SUB>>", "101": "<(get,get(x))<SUB>13</SUB>>", "103": "<(IDENTIFIER,x,get(x))<SUB>13</SUB>>", "105": "<(LOCAL,int[] power: int[])<SUB>16</SUB>>", "107": "<(IDENTIFIER,power,int[] power = new int[31])<SUB>16</SUB>>", "109": "<(LITERAL,31,new int[31])<SUB>16</SUB>>", "111": "<(LOCAL,int i: int)<SUB>17</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; 31)<SUB>17</SUB>>", "117": "<(LITERAL,31,i &lt; 31)<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "121": "<(&lt;operator&gt;.assignment,power[i] = 1 &lt;&lt; i)<SUB>18</SUB>>", "123": "<(IDENTIFIER,power,power[i] = 1 &lt;&lt; i)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>18</SUB>>", "127": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>20</SUB>>", "131": "<(LITERAL,0,int c = 0)<SUB>20</SUB>>", "133": "<(LOCAL,int i: int)<SUB>21</SUB>>", "135": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "137": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>21</SUB>>", "139": "<(IDENTIFIER,n,i &lt; n)<SUB>21</SUB>>", "141": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "143": "<(LOCAL,boolean f: boolean)<SUB>22</SUB>>", "145": "<(IDENTIFIER,f,boolean f = false)<SUB>22</SUB>>", "147": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= 30); j++),for (int j = 0; Some(j &lt;= 30); j++))<SUB>23</SUB>>", "149": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>23</SUB>>", "151": "<(LITERAL,0,int j = 0)<SUB>23</SUB>>", "153": "<(IDENTIFIER,j,j &lt;= 30)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,j++)<SUB>23</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "159": "<(&lt;operator&gt;.assignment,int check = power[j] - arr[i])<SUB>24</SUB>>", "161": "<(&lt;operator&gt;.subtraction,power[j] - arr[i])<SUB>24</SUB>>", "163": "<(IDENTIFIER,power,power[j] - arr[i])<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>24</SUB>>", "167": "<(IDENTIFIER,i,power[j] - arr[i])<SUB>24</SUB>>", "169": "<(&lt;operator&gt;.logicalAnd,map.containsKey(check) &amp;&amp; check != arr[i])<SUB>25</SUB>>", "171": "<(IDENTIFIER,map,containsKey(check))<SUB>25</SUB>>", "173": "<(&lt;operator&gt;.notEquals,check != arr[i])<SUB>25</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>25</SUB>>", "177": "<(IDENTIFIER,i,check != arr[i])<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.assignment,f = true)<SUB>26</SUB>>", "181": "<(LITERAL,true,f = true)<SUB>26</SUB>>", "183": "<(CONTROL_STRUCTURE,if ((map.containsKey(check) &amp;&amp; check == arr[i] &amp;&amp; map.get(check) &gt;= 2)),if ((map.containsKey(check) &amp;&amp; check == arr[i] &amp;&amp; map.get(check) &gt;= 2)))<SUB>27</SUB>>", "185": "<(&lt;operator&gt;.logicalAnd,map.containsKey(check) &amp;&amp; check == arr[i])<SUB>27</SUB>>", "187": "<(IDENTIFIER,map,containsKey(check))<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.equals,check == arr[i])<SUB>27</SUB>>", "191": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>27</SUB>>", "193": "<(IDENTIFIER,i,check == arr[i])<SUB>27</SUB>>", "195": "<(get,get(check))<SUB>27</SUB>>", "197": "<(IDENTIFIER,check,get(check))<SUB>27</SUB>>", "199": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "201": "<(IDENTIFIER,f,f = true)<SUB>28</SUB>>", "203": "<(CONTROL_STRUCTURE,break;,break;)<SUB>28</SUB>>", "205": "<(&lt;operator&gt;.logicalNot,!f)<SUB>31</SUB>>", "207": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "209": "<(IDENTIFIER,c,c++)<SUB>32</SUB>>", "211": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>35</SUB>>", "213": "<(FIELD_IDENTIFIER,out,out)<SUB>35</SUB>>", "215": "<(MODIFIER,PUBLIC)>", "217": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}