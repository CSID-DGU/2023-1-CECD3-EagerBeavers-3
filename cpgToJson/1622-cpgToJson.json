{"edges": [["23", "25"], ["23", "279"], ["23", "280"], ["23", "281"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "33"], ["25", "34"], ["25", "6"], ["25", "38"], ["25", "41"], ["25", "8"], ["25", "45"], ["25", "48"], ["25", "52"], ["25", "53"], ["25", "56"], ["25", "57"], ["25", "61"], ["25", "62"], ["25", "68"], ["25", "69"], ["25", "72"], ["25", "129"], ["25", "140"], ["25", "159"], ["25", "160"], ["25", "166"], ["25", "180"], ["25", "183"], ["25", "184"], ["25", "187"], ["25", "231"], ["25", "234"], ["25", "274"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "7"], ["48", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["65", "66"], ["65", "67"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["72", "77"], ["72", "80"], ["72", "82"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "79"], ["80", "81"], ["82", "83"], ["82", "89"], ["83", "84"], ["83", "87"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "96"], ["89", "126"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "110"], ["96", "113"], ["96", "119"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "105"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["113", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "125"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["126", "127"], ["127", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "155"], ["151", "152"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["155", "158"], ["160", "161"], ["160", "162"], ["162", "163"], ["162", "164"], ["162", "165"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "176"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["176", "177"], ["176", "178"], ["176", "179"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "209"], ["197", "228"], ["198", "199"], ["198", "205"], ["199", "200"], ["199", "203"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["205", "208"], ["206", "207"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "227"], ["212", "213"], ["212", "226"], ["213", "214"], ["213", "225"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["234", "241"], ["234", "244"], ["234", "246"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["244", "245"], ["246", "247"], ["246", "258"], ["246", "271"], ["247", "248"], ["247", "254"], ["248", "249"], ["248", "252"], ["249", "250"], ["249", "251"], ["252", "253"], ["254", "255"], ["254", "257"], ["255", "256"], ["258", "259"], ["258", "260"], ["260", "261"], ["260", "270"], ["261", "262"], ["261", "269"], ["262", "263"], ["262", "268"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "278"], ["275", "276"], ["275", "277"], ["26", "32"], ["29", "36"], ["34", "40"], ["38", "42"], ["41", "47"], ["45", "49"], ["48", "53"], ["53", "59"], ["57", "65"], ["62", "69"], ["69", "74"], ["160", "172"], ["166", "180"], ["180", "184"], ["184", "189"], ["231", "238"], ["274", "281"], ["28", "26"], ["30", "29"], ["36", "34"], ["40", "38"], ["42", "41"], ["47", "45"], ["49", "48"], ["59", "57"], ["64", "62"], ["74", "77"], ["77", "84"], ["77", "130"], ["80", "77"], ["130", "137"], ["130", "142"], ["142", "145"], ["145", "152"], ["145", "162"], ["148", "145"], ["162", "160"], ["168", "166"], ["189", "192"], ["192", "200"], ["192", "231"], ["195", "192"], ["236", "241"], ["241", "249"], ["241", "277"], ["244", "241"], ["275", "274"], ["32", "30"], ["65", "64"], ["83", "91"], ["134", "139"], ["139", "281"], ["151", "155"], ["151", "148"], ["155", "148"], ["169", "176"], ["176", "168"], ["209", "228"], ["228", "195"], ["238", "236"], ["258", "271"], ["271", "244"], ["277", "275"], ["84", "87"], ["87", "83"], ["90", "102"], ["90", "127"], ["135", "134"], ["152", "151"], ["170", "169"], ["199", "206"], ["199", "217"], ["211", "209"], ["248", "255"], ["248", "265"], ["260", "258"], ["91", "94"], ["94", "90"], ["97", "110"], ["110", "115"], ["113", "122"], ["119", "80"], ["127", "80"], ["137", "135"], ["172", "170"], ["200", "203"], ["203", "199"], ["206", "195"], ["212", "211"], ["249", "252"], ["252", "248"], ["255", "244"], ["261", "260"], ["99", "97"], ["115", "113"], ["120", "119"], ["213", "212"], ["262", "261"], ["100", "107"], ["105", "99"], ["122", "120"], ["214", "213"], ["263", "262"], ["102", "100"], ["107", "105"], ["215", "222"], ["220", "214"], ["265", "263"], ["217", "215"], ["222", "220"], ["23", "28"], ["139", "281"], ["24", "281"], ["26", "281"], ["29", "281"], ["29", "281"], ["36", "281"], ["34", "281"], ["34", "281"], ["38", "281"], ["41", "281"], ["45", "281"], ["48", "281"], ["48", "281"], ["48", "281"], ["53", "281"], ["57", "281"], ["57", "281"], ["57", "281"], ["62", "281"], ["64", "281"], ["62", "281"], ["62", "281"], ["69", "281"], ["74", "281"], ["77", "281"], ["77", "281"], ["77", "281"], ["130", "281"], ["130", "281"], ["134", "281"], ["134", "281"], ["134", "281"], ["87", "281"], ["83", "281"], ["83", "281"], ["90", "281"], ["90", "281"], ["90", "281"], ["127", "281"], ["100", "281"], ["99", "281"], ["99", "281"], ["97", "281"], ["97", "281"], ["110", "281"], ["113", "281"], ["113", "281"], ["113", "281"], ["119", "281"], ["119", "281"], ["80", "281"], ["23", "24"], ["23", "26"], ["36", "34"], ["23", "38"], ["23", "45"], ["23", "53"], ["59", "57"], ["64", "62"], ["23", "69"], ["162", "160"], ["162", "160"], ["162", "160"], ["168", "166"], ["168", "166"], ["176", "180"], ["23", "180"], ["23", "184"], ["23", "231"], ["26", "29"], ["23", "29"], ["38", "41"], ["23", "41"], ["34", "41"], ["45", "48"], ["23", "48"], ["34", "48"], ["23", "74"], ["23", "142"], ["53", "166"], ["110", "166"], ["23", "166"], ["166", "180"], ["23", "189"], ["238", "236"], ["238", "236"], ["180", "274"], ["271", "274"], ["228", "274"], ["23", "274"], ["29", "36"], ["23", "36"], ["34", "42"], ["23", "42"], ["23", "49"], ["34", "49"], ["23", "59"], ["34", "59"], ["59", "64"], ["23", "64"], ["74", "77"], ["80", "77"], ["23", "77"], ["59", "77"], ["77", "80"], ["23", "80"], ["87", "83"], ["69", "130"], ["127", "130"], ["23", "130"], ["23", "139"], ["142", "145"], ["148", "145"], ["23", "145"], ["77", "145"], ["145", "148"], ["155", "148"], ["23", "148"], ["23", "162"], ["130", "162"], ["169", "168"], ["169", "168"], ["176", "168"], ["176", "168"], ["176", "168"], ["189", "192"], ["195", "192"], ["23", "192"], ["145", "192"], ["192", "195"], ["23", "195"], ["211", "209"], ["211", "209"], ["212", "228"], ["23", "228"], ["236", "241"], ["244", "241"], ["23", "241"], ["241", "244"], ["23", "244"], ["260", "258"], ["260", "258"], ["261", "271"], ["23", "271"], ["59", "65"], ["23", "65"], ["53", "134"], ["110", "134"], ["23", "134"], ["62", "151"], ["48", "155"], ["23", "155"], ["145", "155"], ["170", "169"], ["170", "169"], ["162", "169"], ["23", "169"], ["162", "176"], ["23", "176"], ["169", "176"], ["180", "209"], ["228", "209"], ["23", "209"], ["209", "228"], ["192", "238"], ["23", "238"], ["180", "258"], ["271", "258"], ["228", "258"], ["23", "258"], ["258", "271"], ["36", "87"], ["23", "87"], ["57", "90"], ["83", "90"], ["94", "90"], ["99", "97"], ["99", "97"], ["23", "110"], ["23", "119"], ["172", "170"], ["23", "170"], ["172", "170"], ["57", "199"], ["220", "199"], ["90", "199"], ["113", "199"], ["203", "199"], ["212", "211"], ["212", "211"], ["160", "211"], ["23", "211"], ["57", "248"], ["263", "248"], ["199", "248"], ["220", "248"], ["90", "248"], ["113", "248"], ["252", "248"], ["261", "260"], ["261", "260"], ["160", "260"], ["211", "260"], ["23", "260"], ["23", "94"], ["53", "97"], ["110", "97"], ["23", "97"], ["97", "110"], ["105", "113"], ["23", "113"], ["57", "113"], ["105", "113"], ["69", "127"], ["23", "127"], ["162", "172"], ["23", "172"], ["23", "203"], ["184", "206"], ["213", "206"], ["23", "206"], ["213", "212"], ["213", "212"], ["23", "212"], ["176", "212"], ["23", "252"], ["231", "255"], ["262", "255"], ["23", "255"], ["262", "261"], ["262", "261"], ["23", "261"], ["176", "261"], ["212", "261"], ["100", "99"], ["100", "99"], ["105", "99"], ["105", "99"], ["214", "213"], ["214", "213"], ["184", "213"], ["206", "213"], ["23", "213"], ["263", "262"], ["263", "262"], ["231", "262"], ["255", "262"], ["23", "262"], ["41", "100"], ["113", "100"], ["23", "100"], ["77", "100"], ["100", "105"], ["23", "105"], ["57", "105"], ["90", "105"], ["215", "214"], ["215", "214"], ["220", "214"], ["220", "214"], ["48", "263"], ["220", "263"], ["155", "263"], ["23", "263"], ["57", "263"], ["248", "263"], ["77", "102"], ["23", "102"], ["48", "215"], ["220", "215"], ["155", "215"], ["23", "215"], ["192", "215"], ["215", "220"], ["23", "220"], ["57", "220"], ["199", "220"], ["192", "217"], ["23", "217"], ["77", "94"], ["77", "77"], ["77", "84"], ["77", "87"], ["77", "91"], ["77", "90"], ["77", "80"], ["77", "83"], ["130", "192"], ["130", "145"], ["130", "169"], ["130", "189"], ["130", "275"], ["130", "162"], ["130", "168"], ["130", "170"], ["130", "134"], ["130", "238"], ["130", "231"], ["130", "184"], ["130", "137"], ["130", "139"], ["130", "180"], ["130", "274"], ["130", "160"], ["130", "277"], ["130", "166"], ["130", "142"], ["130", "236"], ["130", "176"], ["130", "135"], ["130", "241"], ["130", "172"], ["145", "145"], ["145", "151"], ["145", "148"], ["145", "152"], ["192", "192"], ["192", "195"], ["192", "200"], ["192", "199"], ["192", "203"], ["241", "244"], ["241", "249"], ["241", "252"], ["241", "241"], ["241", "248"], ["151", "155"], ["90", "107"], ["90", "115"], ["90", "120"], ["90", "113"], ["90", "102"], ["90", "119"], ["90", "97"], ["90", "100"], ["90", "127"], ["90", "122"], ["90", "99"], ["90", "105"], ["90", "110"], ["199", "214"], ["199", "215"], ["199", "209"], ["199", "213"], ["199", "228"], ["199", "206"], ["199", "212"], ["199", "217"], ["199", "220"], ["199", "211"], ["199", "222"], ["248", "261"], ["248", "262"], ["248", "255"], ["248", "258"], ["248", "265"], ["248", "260"], ["248", "263"], ["248", "271"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "33": "<(LOCAL,int n: int)<SUB>3</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "37": "<(IDENTIFIER,in,nextInt())<SUB>3</SUB>>", "38": "<(&lt;operator&gt;.assignment,ANY invert = new BIT(n + 5))<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.alloc,new BIT(n + 5))<SUB>4</SUB>>", "5": "<(IDENTIFIER,invert,new BIT(n + 5))<SUB>4</SUB>>", "43": "<(IDENTIFIER,n,n + 5)<SUB>4</SUB>>", "8": "<(LOCAL,BIT neg: ANY)<SUB>5</SUB>>", "46": "<(IDENTIFIER,neg,ANY neg = new BIT(n + 5))<SUB>5</SUB>>", "48": "<(&lt;init&gt;,new BIT(n + 5))<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.addition,n + 5)<SUB>5</SUB>>", "51": "<(LITERAL,5,n + 5)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,long res = 0)<SUB>6</SUB>>", "55": "<(LITERAL,0,long res = 0)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.alloc,new int[n])>", "61": "<(LOCAL,boolean[] has: boolean[])<SUB>8</SUB>>", "63": "<(IDENTIFIER,has,boolean[] has = new boolean[n + 1])<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.addition,n + 1)<SUB>8</SUB>>", "67": "<(LITERAL,1,n + 1)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,long num1 = 0)<SUB>9</SUB>>", "71": "<(LITERAL,0,long num1 = 0)<SUB>9</SUB>>", "73": "<(LOCAL,int i: int)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,int i = 0)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>10</SUB>>", "79": "<(IDENTIFIER,n,i &lt; n)<SUB>10</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>11</SUB>>", "85": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>11</SUB>>", "87": "<(nextInt,nextInt())<SUB>11</SUB>>", "89": "<(CONTROL_STRUCTURE,if (arr[i] != -1),if (arr[i] != -1))<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>12</SUB>>", "93": "<(IDENTIFIER,i,arr[i] != -1)<SUB>12</SUB>>", "95": "<(LITERAL,1,-1)<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignmentPlus,res += invert.read(n + 5) - invert.read(arr[i]))<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.subtraction,invert.read(n + 5) - invert.read(arr[i]))<SUB>13</SUB>>", "101": "<(IDENTIFIER,invert,read(n + 5))<SUB>13</SUB>>", "103": "<(IDENTIFIER,n,n + 5)<SUB>13</SUB>>", "105": "<(read,read(arr[i]))<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>13</SUB>>", "109": "<(IDENTIFIER,i,read(arr[i]))<SUB>13</SUB>>", "111": "<(IDENTIFIER,res,res %= MOD)<SUB>14</SUB>>", "113": "<(update,update(arr[i], 1))<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>15</SUB>>", "117": "<(IDENTIFIER,i,update(arr[i], 1))<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,has[arr[i]] = true)<SUB>16</SUB>>", "121": "<(IDENTIFIER,has,has[arr[i]] = true)<SUB>16</SUB>>", "123": "<(IDENTIFIER,arr,has[arr[i]] = true)<SUB>16</SUB>>", "125": "<(LITERAL,true,has[arr[i]] = true)<SUB>16</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,num1++)<SUB>17</SUB>>", "129": "<(CONTROL_STRUCTURE,if (num1 == 0),if (num1 == 0))<SUB>19</SUB>>", "131": "<(IDENTIFIER,num1,num1 == 0)<SUB>19</SUB>>", "133": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "135": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>20</SUB>>", "137": "<(FIELD_IDENTIFIER,out,out)<SUB>20</SUB>>", "139": "<(RETURN,return;,return;)<SUB>21</SUB>>", "141": "<(LOCAL,int i: int)<SUB>23</SUB>>", "143": "<(IDENTIFIER,i,int i = 1)<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>23</SUB>>", "147": "<(IDENTIFIER,n,i &lt;= n)<SUB>23</SUB>>", "149": "<(IDENTIFIER,i,i++)<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.logicalNot,!has[i])<SUB>23</SUB>>", "153": "<(IDENTIFIER,has,!has[i])<SUB>23</SUB>>", "155": "<(update,update(i, 1))<SUB>23</SUB>>", "157": "<(IDENTIFIER,i,update(i, 1))<SUB>23</SUB>>", "159": "<(LOCAL,long invertNum1: long)<SUB>24</SUB>>", "161": "<(IDENTIFIER,invertNum1,long invertNum1 = modInv(num1, MOD))<SUB>24</SUB>>", "163": "<(IDENTIFIER,this,modInv(num1, MOD))<SUB>24</SUB>>", "165": "<(IDENTIFIER,MOD,modInv(num1, MOD))<SUB>24</SUB>>", "167": "<(IDENTIFIER,res,res += ((num1 * (num1 - 1)) % MOD) * modInv(4, MOD))<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.modulo,(num1 * (num1 - 1)) % MOD)<SUB>25</SUB>>", "171": "<(IDENTIFIER,num1,num1 * (num1 - 1))<SUB>25</SUB>>", "173": "<(IDENTIFIER,num1,num1 - 1)<SUB>25</SUB>>", "175": "<(IDENTIFIER,MOD,(num1 * (num1 - 1)) % MOD)<SUB>25</SUB>>", "177": "<(IDENTIFIER,this,modInv(4, MOD))<SUB>25</SUB>>", "179": "<(IDENTIFIER,MOD,modInv(4, MOD))<SUB>25</SUB>>", "181": "<(IDENTIFIER,res,res %= MOD)<SUB>26</SUB>>", "183": "<(LOCAL,long cnt: long)<SUB>27</SUB>>", "185": "<(IDENTIFIER,cnt,long cnt = 0)<SUB>27</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>28</SUB>>", "189": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "191": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "193": "<(IDENTIFIER,i,i &lt; n)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "199": "<(&lt;operator&gt;.equals,arr[i] == -1)<SUB>29</SUB>>", "201": "<(IDENTIFIER,arr,arr[i] == -1)<SUB>29</SUB>>", "203": "<(&lt;operator&gt;.minus,-1)<SUB>29</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "207": "<(IDENTIFIER,cnt,cnt++)<SUB>30</SUB>>", "209": "<(&lt;operator&gt;.assignmentPlus,res += (((neg.read(n + 5) - neg.read(arr[i])) * cnt) % MOD) * invertNum1)<SUB>33</SUB>>", "211": "<(&lt;operator&gt;.multiplication,(((neg.read(n + 5) - neg.read(arr[i])) * cnt) % MOD) * invertNum1)<SUB>33</SUB>>", "213": "<(&lt;operator&gt;.multiplication,(neg.read(n + 5) - neg.read(arr[i])) * cnt)<SUB>33</SUB>>", "215": "<(read,read(n + 5))<SUB>33</SUB>>", "217": "<(&lt;operator&gt;.addition,n + 5)<SUB>33</SUB>>", "219": "<(LITERAL,5,n + 5)<SUB>33</SUB>>", "221": "<(IDENTIFIER,neg,read(arr[i]))<SUB>33</SUB>>", "223": "<(IDENTIFIER,arr,read(arr[i]))<SUB>33</SUB>>", "225": "<(IDENTIFIER,cnt,(neg.read(n + 5) - neg.read(arr[i])) * cnt)<SUB>33</SUB>>", "227": "<(IDENTIFIER,invertNum1,(((neg.read(n + 5) - neg.read(arr[i])) * cnt) % MOD) * invertNum1)<SUB>33</SUB>>", "229": "<(IDENTIFIER,res,res %= MOD)<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.assignment,cnt = 0)<SUB>36</SUB>>", "233": "<(LITERAL,0,cnt = 0)<SUB>36</SUB>>", "235": "<(LOCAL,int i: int)<SUB>37</SUB>>", "237": "<(IDENTIFIER,i,int i = n - 1)<SUB>37</SUB>>", "239": "<(IDENTIFIER,n,n - 1)<SUB>37</SUB>>", "241": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>37</SUB>>", "243": "<(LITERAL,0,i &gt;= 0)<SUB>37</SUB>>", "245": "<(IDENTIFIER,i,i--)<SUB>37</SUB>>", "247": "<(CONTROL_STRUCTURE,if (arr[i] == -1),if (arr[i] == -1))<SUB>38</SUB>>", "249": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>38</SUB>>", "251": "<(IDENTIFIER,i,arr[i] == -1)<SUB>38</SUB>>", "253": "<(LITERAL,1,-1)<SUB>38</SUB>>", "255": "<(&lt;operator&gt;.postIncrement,cnt++)<SUB>39</SUB>>", "257": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>40</SUB>>", "259": "<(IDENTIFIER,res,res += (((neg.read(arr[i])) * cnt) % MOD) * invertNum1)<SUB>42</SUB>>", "261": "<(&lt;operator&gt;.modulo,((neg.read(arr[i])) * cnt) % MOD)<SUB>42</SUB>>", "263": "<(read,read(arr[i]))<SUB>42</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>42</SUB>>", "267": "<(IDENTIFIER,i,read(arr[i]))<SUB>42</SUB>>", "269": "<(IDENTIFIER,MOD,((neg.read(arr[i])) * cnt) % MOD)<SUB>42</SUB>>", "271": "<(&lt;operators&gt;.assignmentModulo,res %= MOD)<SUB>43</SUB>>", "273": "<(IDENTIFIER,MOD,res %= MOD)<SUB>43</SUB>>", "275": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "277": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "279": "<(MODIFIER,PUBLIC)>", "281": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}