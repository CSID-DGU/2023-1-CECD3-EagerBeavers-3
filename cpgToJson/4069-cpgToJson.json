{"edges": [["21", "22"], ["21", "23"], ["21", "208"], ["21", "209"], ["21", "210"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "38"], ["23", "44"], ["23", "48"], ["23", "52"], ["23", "78"], ["23", "83"], ["23", "121"], ["23", "127"], ["23", "133"], ["23", "138"], ["23", "143"], ["23", "144"], ["23", "147"], ["23", "203"], ["23", "206"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["38", "42"], ["40", "41"], ["42", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["52", "57"], ["52", "60"], ["52", "62"], ["54", "55"], ["54", "56"], ["57", "58"], ["57", "59"], ["60", "61"], ["62", "63"], ["63", "64"], ["63", "67"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "71"], ["67", "77"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "75"], ["73", "74"], ["75", "76"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "101"], ["94", "104"], ["94", "106"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["101", "102"], ["101", "103"], ["104", "105"], ["106", "107"], ["107", "108"], ["107", "113"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["113", "118"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["123", "124"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["129", "130"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["133", "136"], ["136", "137"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "196"], ["148", "149"], ["148", "150"], ["148", "155"], ["148", "156"], ["148", "161"], ["148", "166"], ["148", "193"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["166", "171"], ["166", "174"], ["166", "176"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["177", "178"], ["177", "185"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["185", "186"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "192"], ["189", "190"], ["189", "191"], ["193", "194"], ["193", "195"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "202"], ["199", "200"], ["199", "201"], ["203", "204"], ["203", "205"], ["206", "207"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "37"], ["35", "40"], ["38", "46"], ["44", "50"], ["48", "54"], ["78", "85"], ["121", "130"], ["127", "136"], ["133", "140"], ["138", "144"], ["144", "152"], ["203", "206"], ["206", "210"], ["26", "24"], ["30", "28"], ["32", "31"], ["37", "35"], ["40", "42"], ["42", "38"], ["46", "44"], ["50", "48"], ["54", "57"], ["57", "64"], ["57", "80"], ["60", "57"], ["80", "78"], ["85", "88"], ["88", "98"], ["88", "124"], ["91", "88"], ["123", "121"], ["129", "127"], ["136", "133"], ["140", "138"], ["196", "152"], ["196", "203"], ["34", "32"], ["63", "60"], ["124", "123"], ["130", "129"], ["150", "158"], ["156", "163"], ["161", "168"], ["193", "199"], ["198", "196"], ["64", "70"], ["96", "101"], ["101", "109"], ["101", "91"], ["104", "101"], ["152", "150"], ["158", "156"], ["163", "161"], ["168", "171"], ["171", "180"], ["171", "193"], ["174", "171"], ["199", "198"], ["68", "73"], ["71", "63"], ["98", "96"], ["107", "104"], ["70", "68"], ["73", "75"], ["75", "71"], ["108", "115"], ["113", "107"], ["178", "189"], ["178", "174"], ["109", "108"], ["115", "118"], ["118", "113"], ["179", "178"], ["186", "174"], ["180", "179"], ["188", "186"], ["189", "188"], ["21", "26"], ["22", "210"], ["24", "210"], ["27", "210"], ["28", "210"], ["31", "210"], ["31", "210"], ["35", "210"], ["38", "210"], ["38", "210"], ["46", "210"], ["44", "210"], ["44", "210"], ["48", "210"], ["48", "210"], ["48", "210"], ["78", "210"], ["78", "210"], ["78", "210"], ["121", "210"], ["121", "210"], ["127", "210"], ["127", "210"], ["133", "210"], ["133", "210"], ["133", "210"], ["140", "210"], ["138", "210"], ["138", "210"], ["144", "210"], ["150", "210"], ["150", "210"], ["156", "210"], ["156", "210"], ["156", "210"], ["161", "210"], ["161", "210"], ["168", "210"], ["171", "210"], ["171", "210"], ["193", "210"], ["193", "210"], ["196", "210"], ["199", "210"], ["198", "210"], ["196", "210"], ["196", "210"], ["203", "210"], ["206", "210"], ["206", "210"], ["179", "210"], ["179", "210"], ["178", "210"], ["178", "210"], ["188", "210"], ["186", "210"], ["186", "210"], ["174", "210"], ["96", "210"], ["96", "210"], ["101", "210"], ["101", "210"], ["91", "210"], ["107", "210"], ["113", "210"], ["113", "210"], ["107", "210"], ["107", "210"], ["104", "210"], ["63", "210"], ["68", "210"], ["71", "210"], ["71", "210"], ["75", "210"], ["71", "210"], ["63", "210"], ["60", "210"], ["133", "210"], ["21", "22"], ["21", "24"], ["21", "28"], ["21", "35"], ["46", "44"], ["50", "48"], ["80", "78"], ["123", "121"], ["129", "127"], ["21", "144"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["35", "38"], ["21", "38"], ["40", "38"], ["42", "38"], ["21", "54"], ["21", "85"], ["21", "133"], ["127", "133"], ["136", "133"], ["31", "138"], ["21", "138"], ["140", "138"], ["140", "138"], ["161", "203"], ["186", "203"], ["21", "203"], ["203", "206"], ["21", "206"], ["27", "40"], ["21", "40"], ["40", "42"], ["21", "42"], ["42", "46"], ["21", "46"], ["44", "50"], ["21", "50"], ["54", "57"], ["60", "57"], ["21", "57"], ["50", "57"], ["57", "60"], ["21", "60"], ["68", "63"], ["71", "63"], ["21", "63"], ["57", "80"], ["21", "80"], ["85", "88"], ["91", "88"], ["21", "88"], ["80", "88"], ["101", "88"], ["21", "91"], ["88", "91"], ["124", "123"], ["124", "123"], ["130", "129"], ["130", "129"], ["21", "136"], ["113", "140"], ["21", "140"], ["121", "150"], ["158", "156"], ["158", "156"], ["158", "193"], ["21", "193"], ["193", "196"], ["21", "196"], ["198", "196"], ["198", "196"], ["88", "96"], ["21", "96"], ["21", "124"], ["88", "124"], ["21", "130"], ["124", "130"], ["138", "161"], ["186", "161"], ["21", "161"], ["21", "168"], ["199", "198"], ["199", "198"], ["21", "198"], ["21", "68"], ["21", "77"], ["96", "101"], ["104", "101"], ["21", "101"], ["88", "101"], ["101", "104"], ["21", "104"], ["113", "107"], ["113", "107"], ["113", "107"], ["150", "158"], ["21", "158"], ["144", "158"], ["196", "158"], ["21", "163"], ["168", "171"], ["174", "171"], ["21", "171"], ["130", "171"], ["199", "171"], ["180", "174"], ["21", "174"], ["21", "199"], ["171", "199"], ["68", "71"], ["21", "71"], ["73", "71"], ["75", "71"], ["88", "98"], ["21", "98"], ["46", "73"], ["75", "73"], ["21", "73"], ["73", "75"], ["21", "75"], ["21", "113"], ["48", "113"], ["63", "113"], ["179", "178"], ["179", "178"], ["21", "178"], ["180", "179"], ["180", "179"], ["156", "179"], ["21", "179"], ["161", "186"], ["21", "186"], ["180", "186"], ["21", "180"], ["171", "180"], ["180", "188"], ["21", "188"], ["180", "189"], ["21", "189"], ["57", "68"], ["57", "60"], ["57", "73"], ["57", "64"], ["57", "57"], ["57", "75"], ["57", "70"], ["57", "71"], ["57", "63"], ["88", "96"], ["88", "98"], ["88", "91"], ["88", "101"], ["88", "88"], ["196", "161"], ["196", "163"], ["196", "196"], ["196", "150"], ["196", "198"], ["196", "168"], ["196", "152"], ["196", "158"], ["196", "171"], ["196", "193"], ["196", "199"], ["196", "156"], ["101", "107"], ["101", "115"], ["101", "113"], ["101", "104"], ["101", "101"], ["101", "118"], ["101", "108"], ["101", "109"], ["171", "179"], ["171", "178"], ["171", "174"], ["171", "180"], ["171", "171"], ["178", "188"], ["178", "189"], ["178", "186"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,hand = new Point(in.nextInt(), in.nextInt()))<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.alloc,new Point(in.nextInt(), in.nextInt()))<SUB>5</SUB>>", "39": "<(IDENTIFIER,hand,new Point(in.nextInt(), in.nextInt()))<SUB>5</SUB>>", "41": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "43": "<(IDENTIFIER,in,nextInt())<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,n = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,in,nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,data,data = new Point[n])<SUB>7</SUB>>", "51": "<(IDENTIFIER,n,new Point[n])<SUB>7</SUB>>", "53": "<(LOCAL,int i: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>8</SUB>>", "59": "<(IDENTIFIER,n,i &lt; n)<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "63": "<(&lt;operator&gt;.assignment,data[i] = new Point(in.nextInt(), in.nextInt()))<SUB>9</SUB>>", "65": "<(IDENTIFIER,data,data[i] = new Point(in.nextInt(), in.nextInt()))<SUB>9</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "69": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "71": "<(&lt;init&gt;,new Point(in.nextInt(), in.nextInt()))<SUB>9</SUB>>", "73": "<(nextInt,nextInt())<SUB>9</SUB>>", "75": "<(nextInt,nextInt())<SUB>9</SUB>>", "77": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "79": "<(IDENTIFIER,pre,pre = new int[n][n])<SUB>11</SUB>>", "81": "<(IDENTIFIER,n,new int[n][n])<SUB>11</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "87": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "89": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "95": "<(LOCAL,int j: int)<SUB>13</SUB>>", "97": "<(IDENTIFIER,j,int j = i + 1)<SUB>13</SUB>>", "99": "<(IDENTIFIER,i,i + 1)<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>13</SUB>>", "103": "<(IDENTIFIER,n,j &lt; n)<SUB>13</SUB>>", "105": "<(IDENTIFIER,j,j++)<SUB>13</SUB>>", "107": "<(&lt;operator&gt;.assignment,pre[i][j] = distance(data[i], data[j]))<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,pre[i])<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,pre[i][j] = distance(data[i], data[j]))<SUB>14</SUB>>", "113": "<(distance,distance(data[i], data[j]))<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,data[i])<SUB>14</SUB>>", "117": "<(IDENTIFIER,i,distance(data[i], data[j]))<SUB>14</SUB>>", "119": "<(IDENTIFIER,data,distance(data[i], data[j]))<SUB>14</SUB>>", "121": "<(&lt;operator&gt;.assignment,next = new int[1 &lt;&lt; n])<SUB>19</SUB>>", "123": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "125": "<(LITERAL,1,1 &lt;&lt; n)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.assignment,dp = new int[1 &lt;&lt; n])<SUB>20</SUB>>", "129": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "131": "<(LITERAL,1,1 &lt;&lt; n)<SUB>20</SUB>>", "133": "<(fill,fill(dp, -1))<SUB>21</SUB>>", "135": "<(IDENTIFIER,dp,fill(dp, -1))<SUB>21</SUB>>", "137": "<(LITERAL,1,-1)<SUB>21</SUB>>", "139": "<(IDENTIFIER,out,println(cal(0)))<SUB>23</SUB>>", "141": "<(IDENTIFIER,this,cal(0))<SUB>23</SUB>>", "143": "<(LOCAL,int start: int)<SUB>26</SUB>>", "145": "<(IDENTIFIER,start,int start = 0)<SUB>26</SUB>>", "147": "<(CONTROL_STRUCTURE,do {...} while (start != (1 &lt;&lt; n) - 1),do {...} while (start != (1 &lt;&lt; n) - 1))<SUB>28</SUB>>", "149": "<(LOCAL,int m: int)<SUB>29</SUB>>", "151": "<(IDENTIFIER,m,int m = next[start])<SUB>29</SUB>>", "153": "<(IDENTIFIER,next,int m = next[start])<SUB>29</SUB>>", "155": "<(LOCAL,int val: int)<SUB>30</SUB>>", "157": "<(IDENTIFIER,val,int val = m - start)<SUB>30</SUB>>", "159": "<(IDENTIFIER,m,m - start)<SUB>30</SUB>>", "161": "<(print,print(0 + &quot; &quot;))<SUB>31</SUB>>", "163": "<(&lt;operator&gt;.addition,0 + &quot; &quot;)<SUB>31</SUB>>", "165": "<(LITERAL,&quot; &quot;,0 + &quot; &quot;)<SUB>31</SUB>>", "167": "<(LOCAL,int i: int)<SUB>32</SUB>>", "169": "<(IDENTIFIER,i,int i = 0)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>32</SUB>>", "173": "<(IDENTIFIER,n,i &lt; n)<SUB>32</SUB>>", "175": "<(IDENTIFIER,i,i++)<SUB>32</SUB>>", "177": "<(CONTROL_STRUCTURE,if (((1 &lt;&lt; i) &amp; val) != 0),if (((1 &lt;&lt; i) &amp; val) != 0))<SUB>33</SUB>>", "179": "<(&lt;operator&gt;.and,(1 &lt;&lt; i) &amp; val)<SUB>33</SUB>>", "181": "<(LITERAL,1,1 &lt;&lt; i)<SUB>33</SUB>>", "183": "<(IDENTIFIER,val,(1 &lt;&lt; i) &amp; val)<SUB>33</SUB>>", "185": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "187": "<(IDENTIFIER,out,print((i + 1) + &quot; &quot;))<SUB>34</SUB>>", "189": "<(&lt;operator&gt;.addition,i + 1)<SUB>34</SUB>>", "191": "<(LITERAL,1,i + 1)<SUB>34</SUB>>", "193": "<(&lt;operator&gt;.assignment,start = m)<SUB>38</SUB>>", "195": "<(IDENTIFIER,m,start = m)<SUB>38</SUB>>", "197": "<(IDENTIFIER,start,start != (1 &lt;&lt; n) - 1)<SUB>39</SUB>>", "199": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>39</SUB>>", "201": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>39</SUB>>", "203": "<(println,println(0))<SUB>40</SUB>>", "205": "<(LITERAL,0,println(0))<SUB>40</SUB>>", "207": "<(IDENTIFIER,out,close())<SUB>41</SUB>>", "209": "<(MODIFIER,STATIC)>"}}