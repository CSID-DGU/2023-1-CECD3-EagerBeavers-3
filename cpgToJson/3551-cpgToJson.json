{"edges": [["23", "25"], ["23", "279"], ["23", "280"], ["23", "281"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "38"], ["25", "39"], ["25", "40"], ["25", "41"], ["25", "42"], ["25", "43"], ["25", "44"], ["25", "48"], ["25", "52"], ["25", "56"], ["25", "65"], ["25", "6"], ["25", "92"], ["25", "95"], ["25", "96"], ["25", "102"], ["25", "147"], ["25", "148"], ["25", "156"], ["25", "157"], ["25", "165"], ["25", "8"], ["25", "261"], ["25", "264"], ["25", "266"], ["25", "270"], ["25", "273"], ["25", "277"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "37"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["44", "45"], ["44", "46"], ["46", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["56", "57"], ["56", "58"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "91"], ["86", "87"], ["86", "90"], ["87", "88"], ["87", "89"], ["92", "93"], ["92", "94"], ["95", "5"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["100", "101"], ["102", "103"], ["102", "104"], ["102", "107"], ["102", "110"], ["102", "112"], ["104", "105"], ["104", "106"], ["107", "108"], ["107", "109"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "115"], ["112", "119"], ["112", "123"], ["112", "134"], ["112", "137"], ["112", "140"], ["115", "116"], ["115", "117"], ["117", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "129"], ["125", "133"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "132"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "146"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["150", "153"], ["150", "154"], ["154", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "162"], ["159", "163"], ["159", "164"], ["160", "161"], ["165", "166"], ["165", "169"], ["166", "167"], ["167", "168"], ["169", "170"], ["169", "171"], ["169", "175"], ["169", "176"], ["169", "181"], ["169", "182"], ["169", "187"], ["171", "172"], ["171", "173"], ["173", "174"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["182", "183"], ["182", "184"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["187", "192"], ["187", "195"], ["187", "197"], ["189", "190"], ["189", "191"], ["192", "193"], ["192", "194"], ["195", "196"], ["197", "198"], ["197", "199"], ["197", "206"], ["197", "207"], ["197", "214"], ["197", "237"], ["197", "244"], ["197", "255"], ["197", "258"], ["199", "200"], ["199", "201"], ["201", "202"], ["201", "203"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["214", "215"], ["214", "236"], ["215", "216"], ["215", "231"], ["216", "217"], ["216", "228"], ["217", "218"], ["217", "225"], ["218", "219"], ["218", "222"], ["219", "220"], ["219", "221"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["231", "235"], ["232", "233"], ["232", "234"], ["237", "238"], ["237", "243"], ["238", "239"], ["238", "242"], ["239", "240"], ["239", "241"], ["244", "245"], ["244", "246"], ["246", "247"], ["246", "250"], ["246", "254"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["250", "253"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "263"], ["264", "7"], ["264", "265"], ["266", "267"], ["266", "268"], ["268", "269"], ["270", "271"], ["270", "272"], ["273", "274"], ["273", "275"], ["275", "276"], ["277", "278"], ["26", "33"], ["29", "46"], ["44", "50"], ["48", "54"], ["52", "59"], ["56", "67"], ["92", "95"], ["95", "100"], ["96", "104"], ["148", "160"], ["157", "167"], ["261", "264"], ["264", "268"], ["266", "270"], ["270", "275"], ["273", "277"], ["277", "281"], ["28", "26"], ["46", "44"], ["50", "48"], ["54", "52"], ["58", "56"], ["67", "70"], ["70", "77"], ["70", "94"], ["73", "70"], ["94", "92"], ["98", "96"], ["104", "107"], ["107", "117"], ["107", "154"], ["110", "107"], ["150", "148"], ["159", "157"], ["166", "173"], ["166", "263"], ["263", "261"], ["268", "266"], ["275", "273"], ["31", "34"], ["34", "29"], ["59", "62"], ["62", "58"], ["77", "80"], ["80", "87"], ["80", "73"], ["83", "80"], ["85", "83"], ["100", "98"], ["115", "121"], ["119", "128"], ["123", "134"], ["134", "137"], ["137", "142"], ["140", "110"], ["154", "150"], ["160", "159"], ["167", "166"], ["171", "180"], ["176", "186"], ["182", "189"], ["33", "31"], ["86", "85"], ["117", "115"], ["121", "119"], ["141", "140"], ["173", "171"], ["178", "176"], ["184", "182"], ["189", "192"], ["192", "167"], ["192", "203"], ["195", "192"], ["87", "86"], ["126", "129"], ["129", "123"], ["142", "141"], ["180", "178"], ["186", "184"], ["199", "211"], ["207", "219"], ["237", "249"], ["244", "255"], ["255", "258"], ["258", "195"], ["128", "126"], ["201", "199"], ["209", "207"], ["215", "195"], ["215", "239"], ["238", "237"], ["203", "201"], ["211", "209"], ["216", "215"], ["216", "232"], ["231", "215"], ["239", "238"], ["247", "250"], ["250", "244"], ["217", "216"], ["217", "228"], ["228", "216"], ["232", "231"], ["249", "247"], ["218", "217"], ["218", "225"], ["225", "217"], ["219", "218"], ["219", "222"], ["222", "218"], ["23", "28"], ["24", "281"], ["26", "281"], ["31", "281"], ["34", "281"], ["34", "281"], ["29", "281"], ["44", "281"], ["48", "281"], ["54", "281"], ["52", "281"], ["52", "281"], ["56", "281"], ["58", "281"], ["62", "281"], ["58", "281"], ["56", "281"], ["56", "281"], ["70", "281"], ["70", "281"], ["92", "281"], ["95", "281"], ["96", "281"], ["96", "281"], ["104", "281"], ["107", "281"], ["107", "281"], ["107", "281"], ["148", "281"], ["148", "281"], ["148", "281"], ["157", "281"], ["159", "281"], ["157", "281"], ["157", "281"], ["167", "281"], ["166", "281"], ["166", "281"], ["261", "281"], ["264", "281"], ["268", "281"], ["266", "281"], ["266", "281"], ["270", "281"], ["275", "281"], ["273", "281"], ["273", "281"], ["277", "281"], ["277", "281"], ["171", "281"], ["171", "281"], ["171", "281"], ["176", "281"], ["176", "281"], ["176", "281"], ["182", "281"], ["182", "281"], ["182", "281"], ["189", "281"], ["192", "281"], ["192", "281"], ["201", "281"], ["201", "281"], ["199", "281"], ["199", "281"], ["207", "281"], ["209", "281"], ["209", "281"], ["207", "281"], ["207", "281"], ["219", "281"], ["218", "281"], ["222", "281"], ["222", "281"], ["218", "281"], ["217", "281"], ["225", "281"], ["217", "281"], ["216", "281"], ["228", "281"], ["228", "281"], ["216", "281"], ["215", "281"], ["215", "281"], ["215", "281"], ["237", "281"], ["237", "281"], ["247", "281"], ["250", "281"], ["250", "281"], ["244", "281"], ["255", "281"], ["255", "281"], ["258", "281"], ["258", "281"], ["195", "281"], ["115", "281"], ["121", "281"], ["119", "281"], ["119", "281"], ["126", "281"], ["129", "281"], ["129", "281"], ["123", "281"], ["134", "281"], ["134", "281"], ["137", "281"], ["137", "281"], ["140", "281"], ["140", "281"], ["110", "281"], ["77", "281"], ["80", "281"], ["80", "281"], ["80", "281"], ["73", "281"], ["85", "281"], ["85", "281"], ["83", "281"], ["23", "24"], ["23", "26"], ["46", "44"], ["50", "48"], ["54", "52"], ["58", "56"], ["58", "56"], ["23", "92"], ["98", "96"], ["100", "96"], ["150", "148"], ["150", "148"], ["150", "148"], ["159", "157"], ["159", "157"], ["159", "157"], ["23", "261"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["23", "67"], ["92", "95"], ["23", "95"], ["23", "104"], ["261", "264"], ["23", "264"], ["264", "266"], ["23", "266"], ["268", "266"], ["266", "270"], ["23", "270"], ["270", "273"], ["23", "273"], ["275", "273"], ["273", "277"], ["23", "277"], ["23", "31"], ["23", "37"], ["29", "46"], ["23", "46"], ["46", "50"], ["23", "50"], ["50", "54"], ["23", "54"], ["44", "58"], ["23", "58"], ["48", "58"], ["67", "70"], ["73", "70"], ["23", "70"], ["44", "70"], ["70", "73"], ["23", "73"], ["23", "77"], ["23", "85"], ["100", "98"], ["104", "107"], ["110", "107"], ["23", "107"], ["52", "107"], ["107", "110"], ["23", "110"], ["117", "115"], ["121", "119"], ["129", "134"], ["23", "134"], ["129", "137"], ["23", "137"], ["23", "140"], ["23", "150"], ["154", "150"], ["160", "159"], ["23", "159"], ["167", "166"], ["173", "171"], ["171", "176"], ["171", "182"], ["96", "268"], ["255", "268"], ["134", "268"], ["23", "268"], ["98", "275"], ["258", "275"], ["137", "275"], ["23", "275"], ["31", "34"], ["23", "34"], ["44", "59"], ["23", "59"], ["48", "62"], ["23", "62"], ["77", "80"], ["83", "80"], ["23", "80"], ["48", "80"], ["80", "83"], ["23", "83"], ["23", "100"], ["95", "123"], ["23", "123"], ["126", "123"], ["129", "123"], ["23", "154"], ["23", "160"], ["95", "167"], ["173", "167"], ["244", "167"], ["123", "167"], ["23", "167"], ["23", "189"], ["54", "117"], ["121", "117"], ["23", "117"], ["117", "121"], ["23", "121"], ["23", "126"], ["23", "133"], ["167", "173"], ["23", "173"], ["189", "192"], ["195", "192"], ["23", "192"], ["192", "195"], ["23", "195"], ["176", "199"], ["23", "199"], ["148", "199"], ["182", "207"], ["23", "207"], ["157", "207"], ["23", "237"], ["250", "255"], ["23", "255"], ["250", "258"], ["23", "258"], ["126", "129"], ["23", "129"], ["115", "129"], ["119", "129"], ["173", "244"], ["23", "244"], ["247", "244"], ["250", "244"], ["176", "201"], ["23", "201"], ["148", "201"], ["182", "209"], ["23", "209"], ["157", "209"], ["216", "215"], ["216", "215"], ["237", "215"], ["23", "247"], ["23", "254"], ["217", "216"], ["217", "216"], ["228", "216"], ["228", "216"], ["247", "250"], ["23", "250"], ["219", "250"], ["222", "250"], ["207", "250"], ["225", "250"], ["228", "250"], ["218", "217"], ["218", "217"], ["225", "217"], ["225", "217"], ["207", "228"], ["225", "228"], ["23", "228"], ["80", "228"], ["48", "228"], ["219", "218"], ["219", "218"], ["222", "218"], ["222", "218"], ["207", "225"], ["23", "225"], ["199", "219"], ["23", "219"], ["219", "222"], ["23", "222"], ["70", "222"], ["70", "73"], ["70", "77"], ["70", "80"], ["70", "70"], ["107", "107"], ["107", "115"], ["107", "128"], ["107", "119"], ["107", "121"], ["107", "129"], ["107", "134"], ["107", "137"], ["107", "141"], ["107", "142"], ["107", "123"], ["107", "140"], ["107", "126"], ["107", "110"], ["107", "117"], ["166", "167"], ["166", "192"], ["166", "178"], ["166", "189"], ["166", "184"], ["166", "173"], ["166", "182"], ["166", "186"], ["166", "180"], ["166", "171"], ["166", "166"], ["166", "176"], ["80", "85"], ["80", "87"], ["80", "80"], ["80", "86"], ["80", "83"], ["192", "192"], ["192", "215"], ["192", "209"], ["192", "195"], ["192", "207"], ["192", "201"], ["192", "217"], ["192", "199"], ["192", "211"], ["192", "216"], ["192", "203"], ["192", "218"], ["192", "219"], ["215", "244"], ["215", "247"], ["215", "255"], ["215", "238"], ["215", "258"], ["215", "249"], ["215", "239"], ["215", "237"], ["215", "250"], ["216", "232"], ["216", "231"], ["217", "228"], ["218", "225"], ["219", "222"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(new FileReader(&quot;input.txt&quot;)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new FileReader(&quot;input.txt&quot;))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new FileReader(&quot;input.txt&quot;))>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(LOCAL,int m: int)<SUB>3</SUB>>", "41": "<(LOCAL,Integer lx: java.lang.Integer)<SUB>4</SUB>>", "43": "<(LOCAL,boolean[][] d: boolean[][])<SUB>5</SUB>>", "45": "<(IDENTIFIER,n,n = nextInt())<SUB>6</SUB>>", "47": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "49": "<(IDENTIFIER,m,m = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "53": "<(IDENTIFIER,k,k = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,d,d = new boolean[n + 1][m + 1])<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.addition,n + 1)<SUB>7</SUB>>", "61": "<(LITERAL,1,n + 1)<SUB>7</SUB>>", "63": "<(IDENTIFIER,m,m + 1)<SUB>7</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); ++i),for (int i = 0; Some(i &lt;= n); ++i))<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,i &lt;= n)<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.preIncrement,++i)<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= m); ++j),for (int j = 0; Some(j &lt;= m); ++j))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>9</SUB>>", "79": "<(LITERAL,0,int j = 0)<SUB>9</SUB>>", "81": "<(IDENTIFIER,j,j &lt;= m)<SUB>9</SUB>>", "83": "<(&lt;operator&gt;.preIncrement,++j)<SUB>9</SUB>>", "85": "<(&lt;operator&gt;.assignment,d[i][j] = false)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,d[i])<SUB>10</SUB>>", "89": "<(IDENTIFIER,i,d[i][j] = false)<SUB>10</SUB>>", "91": "<(LITERAL,false,d[i][j] = false)<SUB>10</SUB>>", "92": "<(&lt;operator&gt;.assignment,ANY q = new LinkedList&lt;pair&gt;())<SUB>12</SUB>>", "94": "<(&lt;operator&gt;.alloc,new LinkedList&lt;pair&gt;())<SUB>12</SUB>>", "5": "<(IDENTIFIER,q,new LinkedList&lt;pair&gt;())<SUB>12</SUB>>", "97": "<(IDENTIFIER,lx,lx = ly = -1)<SUB>13</SUB>>", "99": "<(IDENTIFIER,ly,ly = -1)<SUB>13</SUB>>", "101": "<(LITERAL,1,-1)<SUB>13</SUB>>", "103": "<(LOCAL,int i: int)<SUB>14</SUB>>", "105": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "107": "<(&lt;operator&gt;.lessThan,i &lt; k)<SUB>14</SUB>>", "109": "<(IDENTIFIER,k,i &lt; k)<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,++i)<SUB>14</SUB>>", "113": "<(LOCAL,int x: int)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.assignment,x = nextInt())<SUB>15</SUB>>", "117": "<(nextInt,nextInt())<SUB>15</SUB>>", "119": "<(&lt;operator&gt;.assignment,y = nextInt())<SUB>15</SUB>>", "121": "<(nextInt,nextInt())<SUB>15</SUB>>", "123": "<(add,add(new pair(x, y)))<SUB>16</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "127": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "129": "<(&lt;init&gt;,new pair(x, y))<SUB>16</SUB>>", "131": "<(IDENTIFIER,x,new pair(x, y))<SUB>16</SUB>>", "133": "<(IDENTIFIER,$obj3,&lt;empty&gt;)>", "135": "<(IDENTIFIER,lx,lx = x)<SUB>16</SUB>>", "137": "<(&lt;operator&gt;.assignment,ly = y)<SUB>16</SUB>>", "139": "<(IDENTIFIER,y,ly = y)<SUB>16</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,d[x][y])<SUB>17</SUB>>", "143": "<(IDENTIFIER,d,d[x][y] = true)<SUB>17</SUB>>", "145": "<(IDENTIFIER,y,d[x][y] = true)<SUB>17</SUB>>", "147": "<(LOCAL,int[] dx: int[])<SUB>20</SUB>>", "149": "<(IDENTIFIER,dx,int[] dx = { 0, 0, 1, -1 })<SUB>20</SUB>>", "151": "<(LITERAL,0,{ 0, 0, 1, -1 })<SUB>20</SUB>>", "153": "<(LITERAL,1,{ 0, 0, 1, -1 })<SUB>20</SUB>>", "155": "<(LITERAL,1,-1)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.assignment,int[] dy = { -1, 1, 0, 0 })<SUB>21</SUB>>", "159": "<(&lt;operator&gt;.arrayInitializer,{ -1, 1, 0, 0 })<SUB>21</SUB>>", "161": "<(LITERAL,1,-1)<SUB>21</SUB>>", "163": "<(LITERAL,0,{ -1, 1, 0, 0 })<SUB>21</SUB>>", "165": "<(CONTROL_STRUCTURE,while (!q.isEmpty()),while (!q.isEmpty()))<SUB>24</SUB>>", "167": "<(isEmpty,isEmpty())<SUB>24</SUB>>", "169": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.assignment,ANY tp = remove())<SUB>25</SUB>>", "173": "<(remove,remove())<SUB>25</SUB>>", "175": "<(LOCAL,int x: int)<SUB>26</SUB>>", "177": "<(IDENTIFIER,x,int x = tp.x)<SUB>26</SUB>>", "179": "<(IDENTIFIER,tp,int x = tp.x)<SUB>26</SUB>>", "181": "<(LOCAL,int y: int)<SUB>26</SUB>>", "183": "<(IDENTIFIER,y,int y = tp.y)<SUB>26</SUB>>", "185": "<(IDENTIFIER,tp,int y = tp.y)<SUB>26</SUB>>", "187": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; 4); ++i),for (int i = 0; Some(i &lt; 4); ++i))<SUB>27</SUB>>", "189": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "191": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "193": "<(IDENTIFIER,i,i &lt; 4)<SUB>27</SUB>>", "195": "<(&lt;operator&gt;.preIncrement,++i)<SUB>27</SUB>>", "197": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "199": "<(&lt;operator&gt;.assignment,int nx = x + dx[i])<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.addition,x + dx[i])<SUB>28</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dx[i])<SUB>28</SUB>>", "205": "<(IDENTIFIER,i,x + dx[i])<SUB>28</SUB>>", "207": "<(&lt;operator&gt;.assignment,int ny = y + dy[i])<SUB>28</SUB>>", "209": "<(&lt;operator&gt;.addition,y + dy[i])<SUB>28</SUB>>", "211": "<(&lt;operator&gt;.indexAccess,dy[i])<SUB>28</SUB>>", "213": "<(IDENTIFIER,i,y + dy[i])<SUB>28</SUB>>", "215": "<(&lt;operator&gt;.logicalOr,nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; m || d[nx][ny])<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.logicalOr,nx &lt; 1 || nx &gt; n || ny &lt; 1)<SUB>29</SUB>>", "219": "<(&lt;operator&gt;.lessThan,nx &lt; 1)<SUB>29</SUB>>", "221": "<(LITERAL,1,nx &lt; 1)<SUB>29</SUB>>", "223": "<(IDENTIFIER,nx,nx &gt; n)<SUB>29</SUB>>", "225": "<(&lt;operator&gt;.lessThan,ny &lt; 1)<SUB>29</SUB>>", "227": "<(LITERAL,1,ny &lt; 1)<SUB>29</SUB>>", "229": "<(IDENTIFIER,ny,ny &gt; m)<SUB>29</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,d[nx][ny])<SUB>29</SUB>>", "233": "<(IDENTIFIER,d,nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; m || d[nx][ny])<SUB>29</SUB>>", "235": "<(IDENTIFIER,ny,nx &lt; 1 || nx &gt; n || ny &lt; 1 || ny &gt; m || d[nx][ny])<SUB>29</SUB>>", "237": "<(&lt;operator&gt;.assignment,d[nx][ny] = true)<SUB>30</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,d[nx])<SUB>30</SUB>>", "241": "<(IDENTIFIER,nx,d[nx][ny] = true)<SUB>30</SUB>>", "243": "<(LITERAL,true,d[nx][ny] = true)<SUB>30</SUB>>", "245": "<(IDENTIFIER,q,add(new pair(nx, ny)))<SUB>31</SUB>>", "247": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "249": "<(&lt;operator&gt;.alloc,new pair(nx, ny))<SUB>31</SUB>>", "251": "<(IDENTIFIER,$obj4,new pair(nx, ny))>", "253": "<(IDENTIFIER,ny,new pair(nx, ny))<SUB>31</SUB>>", "255": "<(&lt;operator&gt;.assignment,lx = nx)<SUB>32</SUB>>", "257": "<(IDENTIFIER,nx,lx = nx)<SUB>32</SUB>>", "259": "<(IDENTIFIER,ly,ly = ny)<SUB>32</SUB>>", "8": "<(LOCAL,FileWriter fw: ANY)<SUB>35</SUB>>", "262": "<(IDENTIFIER,fw,ANY fw = new FileWriter(&quot;output.txt&quot;))<SUB>35</SUB>>", "264": "<(&lt;init&gt;,new FileWriter(&quot;output.txt&quot;))<SUB>35</SUB>>", "265": "<(LITERAL,&quot;output.txt&quot;,new FileWriter(&quot;output.txt&quot;))<SUB>35</SUB>>", "267": "<(IDENTIFIER,fw,write(lx.toString()))<SUB>36</SUB>>", "269": "<(IDENTIFIER,lx,lx.toString())<SUB>36</SUB>>", "271": "<(IDENTIFIER,fw,write(&quot; &quot;))<SUB>36</SUB>>", "273": "<(write,write(ly.toString()))<SUB>36</SUB>>", "275": "<(toString,ly.toString())<SUB>36</SUB>>", "277": "<(flush,flush())<SUB>37</SUB>>", "279": "<(MODIFIER,PUBLIC)>", "281": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}