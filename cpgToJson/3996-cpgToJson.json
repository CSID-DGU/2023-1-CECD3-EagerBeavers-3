{"edges": [["19", "20"], ["19", "21"], ["19", "338"], ["19", "339"], ["19", "340"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["21", "43"], ["21", "50"], ["21", "65"], ["21", "80"], ["21", "95"], ["21", "110"], ["21", "125"], ["21", "140"], ["21", "141"], ["21", "152"], ["21", "185"], ["21", "192"], ["21", "296"], ["21", "297"], ["21", "300"], ["21", "329"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "35"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "58"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "64"], ["59", "60"], ["59", "63"], ["60", "61"], ["60", "62"], ["65", "66"], ["65", "73"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "79"], ["74", "75"], ["74", "78"], ["75", "76"], ["75", "77"], ["80", "81"], ["80", "88"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "94"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["95", "96"], ["95", "103"], ["96", "97"], ["96", "100"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "109"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["129", "134"], ["129", "137"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["137", "138"], ["137", "139"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["152", "157"], ["152", "160"], ["152", "162"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "159"], ["160", "161"], ["162", "163"], ["163", "164"], ["163", "165"], ["163", "168"], ["163", "175"], ["163", "177"], ["165", "166"], ["165", "167"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["172", "173"], ["172", "174"], ["175", "176"], ["177", "178"], ["178", "179"], ["178", "184"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["185", "186"], ["185", "191"], ["186", "187"], ["186", "190"], ["187", "188"], ["187", "189"], ["192", "193"], ["192", "194"], ["192", "197"], ["192", "200"], ["192", "202"], ["194", "195"], ["194", "196"], ["197", "198"], ["197", "199"], ["200", "201"], ["202", "203"], ["202", "205"], ["202", "210"], ["203", "204"], ["205", "206"], ["205", "207"], ["205", "208"], ["205", "209"], ["210", "211"], ["210", "212"], ["210", "215"], ["210", "222"], ["210", "224"], ["212", "213"], ["212", "214"], ["215", "216"], ["215", "217"], ["217", "218"], ["217", "219"], ["219", "220"], ["219", "221"], ["222", "223"], ["224", "225"], ["225", "226"], ["225", "233"], ["226", "227"], ["226", "232"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["233", "234"], ["233", "235"], ["233", "239"], ["235", "236"], ["235", "237"], ["237", "238"], ["239", "240"], ["239", "242"], ["240", "241"], ["242", "243"], ["242", "244"], ["242", "248"], ["242", "249"], ["242", "254"], ["242", "255"], ["242", "260"], ["242", "261"], ["242", "272"], ["244", "245"], ["244", "246"], ["246", "247"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["255", "256"], ["255", "257"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "263"], ["263", "264"], ["263", "265"], ["265", "266"], ["265", "267"], ["267", "268"], ["267", "271"], ["268", "269"], ["268", "270"], ["272", "273"], ["272", "280"], ["273", "274"], ["273", "279"], ["274", "275"], ["274", "276"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "282"], ["280", "289"], ["282", "283"], ["282", "288"], ["283", "284"], ["283", "285"], ["285", "286"], ["285", "287"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "294"], ["291", "292"], ["291", "293"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["300", "305"], ["300", "312"], ["300", "314"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["312", "313"], ["314", "315"], ["315", "316"], ["315", "317"], ["317", "318"], ["317", "319"], ["317", "320"], ["320", "321"], ["320", "326"], ["321", "322"], ["321", "325"], ["322", "323"], ["322", "324"], ["326", "327"], ["326", "328"], ["329", "330"], ["329", "333"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "337"], ["334", "335"], ["334", "336"], ["22", "28"], ["25", "33"], ["30", "40"], ["36", "47"], ["43", "52"], ["141", "154"], ["185", "194"], ["297", "302"], ["329", "340"], ["24", "22"], ["26", "25"], ["32", "30"], ["38", "36"], ["45", "43"], ["51", "62"], ["51", "67"], ["66", "77"], ["66", "82"], ["81", "92"], ["81", "97"], ["96", "107"], ["96", "112"], ["111", "122"], ["111", "126"], ["126", "131"], ["126", "144"], ["143", "141"], ["154", "157"], ["157", "165"], ["157", "187"], ["160", "157"], ["186", "185"], ["194", "197"], ["197", "203"], ["197", "297"], ["200", "197"], ["302", "309"], ["305", "322"], ["305", "332"], ["312", "309"], ["330", "334"], ["333", "329"], ["28", "26"], ["33", "32"], ["40", "38"], ["47", "45"], ["52", "51"], ["52", "55"], ["55", "51"], ["59", "64"], ["64", "340"], ["67", "66"], ["67", "70"], ["70", "66"], ["74", "79"], ["79", "340"], ["82", "81"], ["82", "85"], ["85", "81"], ["89", "94"], ["94", "340"], ["97", "96"], ["97", "100"], ["100", "96"], ["104", "109"], ["109", "340"], ["112", "111"], ["112", "115"], ["115", "111"], ["119", "124"], ["124", "340"], ["131", "134"], ["134", "137"], ["137", "144"], ["144", "149"], ["147", "143"], ["187", "186"], ["203", "205"], ["205", "212"], ["307", "305"], ["315", "312"], ["332", "330"], ["334", "333"], ["60", "59"], ["75", "74"], ["90", "89"], ["105", "104"], ["120", "119"], ["149", "147"], ["165", "172"], ["168", "180"], ["168", "160"], ["175", "172"], ["212", "219"], ["215", "228"], ["215", "200"], ["222", "219"], ["309", "307"], ["317", "315"], ["62", "60"], ["77", "75"], ["92", "90"], ["107", "105"], ["122", "120"], ["170", "168"], ["178", "175"], ["217", "215"], ["320", "317"], ["172", "170"], ["179", "178"], ["219", "217"], ["226", "237"], ["226", "222"], ["321", "326"], ["326", "320"], ["180", "179"], ["227", "226"], ["235", "240"], ["322", "321"], ["228", "227"], ["237", "235"], ["240", "246"], ["240", "222"], ["244", "251"], ["249", "257"], ["255", "268"], ["261", "276"], ["272", "240"], ["246", "244"], ["251", "249"], ["257", "255"], ["263", "261"], ["273", "285"], ["280", "272"], ["265", "263"], ["274", "273"], ["282", "291"], ["289", "280"], ["267", "265"], ["276", "274"], ["283", "282"], ["290", "289"], ["268", "267"], ["285", "283"], ["291", "290"], ["19", "24"], ["124", "340"], ["79", "340"], ["94", "340"], ["109", "340"], ["64", "340"], ["20", "340"], ["22", "340"], ["25", "340"], ["25", "340"], ["30", "340"], ["33", "340"], ["32", "340"], ["30", "340"], ["30", "340"], ["38", "340"], ["36", "340"], ["36", "340"], ["43", "340"], ["45", "340"], ["45", "340"], ["43", "340"], ["43", "340"], ["52", "340"], ["51", "340"], ["55", "340"], ["51", "340"], ["51", "340"], ["59", "340"], ["59", "340"], ["205", "340"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["38", "36"], ["38", "36"], ["45", "43"], ["45", "43"], ["143", "141"], ["143", "141"], ["19", "185"], ["226", "297"], ["19", "297"], ["22", "25"], ["19", "25"], ["19", "154"], ["19", "194"], ["19", "302"], ["333", "329"], ["333", "329"], ["33", "32"], ["19", "32"], ["19", "38"], ["30", "38"], ["38", "45"], ["19", "45"], ["30", "45"], ["52", "51"], ["52", "51"], ["55", "51"], ["55", "51"], ["19", "64"], ["67", "66"], ["67", "66"], ["70", "66"], ["70", "66"], ["19", "79"], ["82", "81"], ["82", "81"], ["85", "81"], ["85", "81"], ["19", "94"], ["97", "96"], ["97", "96"], ["51", "96"], ["100", "96"], ["100", "96"], ["19", "109"], ["112", "111"], ["112", "111"], ["115", "111"], ["115", "111"], ["19", "124"], ["112", "126"], ["19", "126"], ["43", "126"], ["55", "126"], ["70", "126"], ["85", "126"], ["100", "126"], ["115", "126"], ["126", "131"], ["19", "131"], ["126", "134"], ["19", "134"], ["131", "137"], ["19", "137"], ["126", "143"], ["137", "143"], ["19", "143"], ["147", "143"], ["147", "143"], ["154", "157"], ["160", "157"], ["19", "157"], ["126", "157"], ["137", "157"], ["157", "160"], ["19", "160"], ["194", "197"], ["200", "197"], ["19", "197"], ["157", "197"], ["205", "200"], ["19", "200"], ["302", "305"], ["312", "305"], ["19", "305"], ["307", "305"], ["307", "305"], ["326", "312"], ["19", "312"], ["317", "315"], ["317", "315"], ["317", "315"], ["334", "333"], ["334", "333"], ["297", "333"], ["315", "333"], ["19", "333"], ["25", "33"], ["19", "33"], ["36", "52"], ["19", "52"], ["43", "55"], ["19", "55"], ["19", "59"], ["52", "67"], ["19", "67"], ["43", "70"], ["55", "70"], ["19", "70"], ["19", "74"], ["67", "82"], ["19", "82"], ["43", "85"], ["55", "85"], ["70", "85"], ["19", "85"], ["19", "89"], ["82", "97"], ["19", "97"], ["43", "100"], ["55", "100"], ["70", "100"], ["85", "100"], ["19", "100"], ["19", "104"], ["97", "112"], ["19", "112"], ["43", "115"], ["55", "115"], ["70", "115"], ["85", "115"], ["100", "115"], ["19", "115"], ["19", "119"], ["126", "144"], ["137", "144"], ["19", "144"], ["19", "147"], ["149", "147"], ["149", "147"], ["19", "165"], ["237", "203"], ["19", "203"], ["19", "205"], ["197", "205"], ["19", "212"], ["19", "307"], ["309", "307"], ["309", "307"], ["197", "334"], ["19", "334"], ["309", "334"], ["126", "149"], ["134", "149"], ["19", "149"], ["165", "168"], ["175", "168"], ["19", "168"], ["170", "168"], ["170", "168"], ["168", "175"], ["19", "175"], ["19", "178"], ["212", "215"], ["222", "215"], ["19", "215"], ["217", "215"], ["217", "215"], ["215", "222"], ["251", "222"], ["19", "222"], ["149", "309"], ["219", "309"], ["172", "309"], ["19", "309"], ["280", "317"], ["19", "317"], ["297", "317"], ["315", "317"], ["326", "317"], ["326", "317"], ["19", "170"], ["172", "170"], ["172", "170"], ["19", "217"], ["219", "217"], ["219", "217"], ["326", "320"], ["326", "320"], ["149", "172"], ["19", "172"], ["149", "219"], ["268", "219"], ["172", "219"], ["19", "219"], ["178", "226"], ["19", "226"], ["237", "235"], ["45", "326"], ["263", "326"], ["19", "326"], ["305", "326"], ["203", "237"], ["19", "237"], ["235", "240"], ["246", "240"], ["19", "240"], ["246", "244"], ["251", "249"], ["251", "249"], ["257", "255"], ["257", "255"], ["263", "261"], ["263", "261"], ["280", "272"], ["280", "272"], ["280", "272"], ["240", "246"], ["19", "246"], ["244", "251"], ["19", "251"], ["215", "251"], ["249", "257"], ["19", "257"], ["219", "257"], ["268", "257"], ["45", "263"], ["19", "263"], ["265", "263"], ["265", "263"], ["19", "280"], ["272", "280"], ["226", "280"], ["261", "280"], ["257", "265"], ["19", "265"], ["267", "265"], ["267", "265"], ["226", "289"], ["261", "289"], ["19", "289"], ["268", "267"], ["268", "267"], ["19", "267"], ["205", "276"], ["19", "276"], ["19", "268"], ["257", "268"], ["19", "285"], ["205", "285"], ["51", "60"], ["51", "59"], ["51", "66"], ["51", "64"], ["51", "67"], ["51", "62"], ["66", "74"], ["66", "77"], ["66", "75"], ["66", "81"], ["66", "79"], ["66", "82"], ["81", "94"], ["81", "96"], ["81", "92"], ["81", "97"], ["81", "90"], ["81", "89"], ["96", "104"], ["96", "112"], ["96", "109"], ["96", "107"], ["96", "111"], ["96", "105"], ["111", "120"], ["111", "154"], ["111", "334"], ["111", "302"], ["111", "194"], ["111", "186"], ["111", "141"], ["111", "329"], ["111", "122"], ["111", "147"], ["111", "305"], ["111", "297"], ["111", "149"], ["111", "185"], ["111", "197"], ["111", "119"], ["111", "307"], ["111", "309"], ["111", "332"], ["111", "144"], ["111", "187"], ["111", "333"], ["111", "330"], ["111", "157"], ["111", "143"], ["111", "126"], ["111", "124"], ["126", "134"], ["126", "131"], ["126", "137"], ["157", "168"], ["157", "170"], ["157", "160"], ["157", "172"], ["157", "157"], ["157", "165"], ["197", "215"], ["197", "200"], ["197", "217"], ["197", "197"], ["197", "212"], ["197", "205"], ["197", "203"], ["197", "219"], ["305", "326"], ["305", "322"], ["305", "317"], ["305", "315"], ["305", "305"], ["305", "321"], ["305", "320"], ["305", "307"], ["305", "309"], ["305", "312"], ["52", "55"], ["67", "70"], ["82", "85"], ["97", "100"], ["112", "115"], ["168", "168"], ["168", "170"], ["168", "180"], ["168", "172"], ["168", "179"], ["168", "178"], ["168", "175"], ["215", "215"], ["215", "226"], ["215", "228"], ["215", "217"], ["215", "227"], ["215", "222"], ["215", "219"], ["226", "240"], ["226", "237"], ["226", "235"], ["240", "240"], ["240", "272"], ["240", "290"], ["240", "283"], ["240", "268"], ["240", "276"], ["240", "249"], ["240", "274"], ["240", "282"], ["240", "257"], ["240", "273"], ["240", "244"], ["240", "261"], ["240", "291"], ["240", "255"], ["240", "285"], ["240", "246"], ["240", "289"], ["240", "267"], ["240", "280"], ["240", "265"], ["240", "251"], ["240", "263"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String[] line: java.lang.String[])<SUB>3</SUB>>", "31": "<(IDENTIFIER,line,String[] line = split(&quot; &quot;))<SUB>3</SUB>>", "33": "<(nextLine,nextLine())<SUB>3</SUB>>", "35": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>3</SUB>>", "37": "<(IDENTIFIER,w,w = Integer.valueOf(line[0]))<SUB>4</SUB>>", "39": "<(IDENTIFIER,Integer,Integer.valueOf(line[0]))<SUB>4</SUB>>", "41": "<(IDENTIFIER,line,Integer.valueOf(line[0]))<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,h = Integer.valueOf(line[1]))<SUB>5</SUB>>", "45": "<(valueOf,Integer.valueOf(line[1]))<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.indexAccess,line[1])<SUB>5</SUB>>", "49": "<(LITERAL,1,Integer.valueOf(line[1]))<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.logicalAnd,w == 6 &amp;&amp; h == 6)<SUB>6</SUB>>", "53": "<(IDENTIFIER,w,w == 6)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.equals,h == 6)<SUB>6</SUB>>", "57": "<(LITERAL,6,h == 6)<SUB>6</SUB>>", "59": "<(println,System.out.println(26))<SUB>7</SUB>>", "61": "<(IDENTIFIER,System,System.out.println(26))<SUB>7</SUB>>", "63": "<(LITERAL,26,System.out.println(26))<SUB>7</SUB>>", "65": "<(CONTROL_STRUCTURE,if (w == 5 &amp;&amp; h == 8),if (w == 5 &amp;&amp; h == 8))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.equals,w == 5)<SUB>10</SUB>>", "69": "<(LITERAL,5,w == 5)<SUB>10</SUB>>", "71": "<(IDENTIFIER,h,h == 8)<SUB>10</SUB>>", "73": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>11</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>11</SUB>>", "79": "<(RETURN,return;,return;)<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.logicalAnd,w == 5 &amp;&amp; h == 7)<SUB>14</SUB>>", "83": "<(IDENTIFIER,w,w == 5)<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.equals,h == 7)<SUB>14</SUB>>", "87": "<(LITERAL,7,h == 7)<SUB>14</SUB>>", "89": "<(println,System.out.println(26))<SUB>15</SUB>>", "91": "<(IDENTIFIER,System,System.out.println(26))<SUB>15</SUB>>", "93": "<(LITERAL,26,System.out.println(26))<SUB>15</SUB>>", "95": "<(CONTROL_STRUCTURE,if (w == 5 &amp;&amp; h == 6),if (w == 5 &amp;&amp; h == 6))<SUB>18</SUB>>", "97": "<(&lt;operator&gt;.equals,w == 5)<SUB>18</SUB>>", "99": "<(LITERAL,5,w == 5)<SUB>18</SUB>>", "101": "<(IDENTIFIER,h,h == 6)<SUB>18</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "105": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>19</SUB>>", "107": "<(FIELD_IDENTIFIER,out,out)<SUB>19</SUB>>", "109": "<(RETURN,return;,return;)<SUB>20</SUB>>", "111": "<(&lt;operator&gt;.logicalAnd,w == 5 &amp;&amp; h == 5)<SUB>22</SUB>>", "113": "<(IDENTIFIER,w,w == 5)<SUB>22</SUB>>", "115": "<(&lt;operator&gt;.equals,h == 5)<SUB>22</SUB>>", "117": "<(LITERAL,5,h == 5)<SUB>22</SUB>>", "119": "<(println,System.out.println(18))<SUB>23</SUB>>", "121": "<(IDENTIFIER,System,System.out.println(18))<SUB>23</SUB>>", "123": "<(LITERAL,18,System.out.println(18))<SUB>23</SUB>>", "125": "<(CONTROL_STRUCTURE,if (w &gt; h),if (w &gt; h))<SUB>26</SUB>>", "127": "<(IDENTIFIER,w,w &gt; h)<SUB>26</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "131": "<(&lt;operator&gt;.assignment,int tmp = w)<SUB>27</SUB>>", "133": "<(IDENTIFIER,w,int tmp = w)<SUB>27</SUB>>", "135": "<(IDENTIFIER,w,w = h)<SUB>28</SUB>>", "137": "<(&lt;operator&gt;.assignment,h = tmp)<SUB>29</SUB>>", "139": "<(IDENTIFIER,tmp,h = tmp)<SUB>29</SUB>>", "141": "<(&lt;operator&gt;.assignment,int[][] dp = new int[h + 1][1 &lt;&lt; (w * 3)])<SUB>32</SUB>>", "143": "<(&lt;operator&gt;.alloc,new int[h + 1][1 &lt;&lt; (w * 3)])>", "145": "<(IDENTIFIER,h,h + 1)<SUB>32</SUB>>", "147": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (w * 3))<SUB>32</SUB>>", "149": "<(&lt;operator&gt;.multiplication,w * 3)<SUB>32</SUB>>", "151": "<(LITERAL,3,w * 3)<SUB>32</SUB>>", "153": "<(LOCAL,int i: int)<SUB>33</SUB>>", "155": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "157": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= h)<SUB>33</SUB>>", "159": "<(IDENTIFIER,h,i &lt;= h)<SUB>33</SUB>>", "161": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "163": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; 1 &lt;&lt; (w * 3)); j++),for (int j = 0; Some(j &lt; 1 &lt;&lt; (w * 3)); j++))<SUB>34</SUB>>", "165": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>34</SUB>>", "167": "<(LITERAL,0,int j = 0)<SUB>34</SUB>>", "169": "<(IDENTIFIER,j,j &lt; 1 &lt;&lt; (w * 3))<SUB>34</SUB>>", "171": "<(LITERAL,1,1 &lt;&lt; (w * 3))<SUB>34</SUB>>", "173": "<(IDENTIFIER,w,w * 3)<SUB>34</SUB>>", "175": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "177": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>35</SUB>>", "181": "<(IDENTIFIER,dp,dp[i][j] = MAX)<SUB>35</SUB>>", "183": "<(IDENTIFIER,j,dp[i][j] = MAX)<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.assignment,dp[0][0] = 0)<SUB>38</SUB>>", "187": "<(&lt;operator&gt;.indexAccess,dp[0])<SUB>38</SUB>>", "189": "<(LITERAL,0,dp[0][0] = 0)<SUB>38</SUB>>", "191": "<(LITERAL,0,dp[0][0] = 0)<SUB>38</SUB>>", "193": "<(LOCAL,int i: int)<SUB>41</SUB>>", "195": "<(IDENTIFIER,i,int i = 0)<SUB>41</SUB>>", "197": "<(&lt;operator&gt;.lessThan,i &lt; h)<SUB>41</SUB>>", "199": "<(IDENTIFIER,h,i &lt; h)<SUB>41</SUB>>", "201": "<(IDENTIFIER,i,i++)<SUB>41</SUB>>", "203": "<(clear,clear())<SUB>42</SUB>>", "205": "<(dfs,dfs(0, i, 0))<SUB>43</SUB>>", "207": "<(LITERAL,0,dfs(0, i, 0))<SUB>43</SUB>>", "209": "<(LITERAL,0,dfs(0, i, 0))<SUB>43</SUB>>", "211": "<(LOCAL,int j: int)<SUB>44</SUB>>", "213": "<(IDENTIFIER,j,int j = 0)<SUB>44</SUB>>", "215": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; (w * 2))<SUB>44</SUB>>", "217": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (w * 2))<SUB>44</SUB>>", "219": "<(&lt;operator&gt;.multiplication,w * 2)<SUB>44</SUB>>", "221": "<(LITERAL,2,w * 2)<SUB>44</SUB>>", "223": "<(IDENTIFIER,j,j++)<SUB>44</SUB>>", "225": "<(CONTROL_STRUCTURE,if (dp[i][j] != MAX),if (dp[i][j] != MAX))<SUB>45</SUB>>", "227": "<(&lt;operator&gt;.indexAccess,dp[i][j])<SUB>45</SUB>>", "229": "<(IDENTIFIER,dp,dp[i][j] != MAX)<SUB>45</SUB>>", "231": "<(IDENTIFIER,j,dp[i][j] != MAX)<SUB>45</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>>", "235": "<(&lt;operator&gt;.assignment,)<SUB>46</SUB>>", "237": "<(iterator,&lt;empty&gt;)<SUB>46</SUB>>", "239": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>46</SUB>>", "241": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "243": "<(LOCAL,res: int)<SUB>46</SUB>>", "245": "<(IDENTIFIER,res,&lt;empty&gt;)>", "247": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "249": "<(&lt;operator&gt;.assignment,int next = res | j)<SUB>47</SUB>>", "251": "<(&lt;operator&gt;.or,res | j)<SUB>47</SUB>>", "253": "<(IDENTIFIER,j,res | j)<SUB>47</SUB>>", "255": "<(&lt;operator&gt;.assignment,int nextn = next &gt;&gt; w)<SUB>48</SUB>>", "257": "<(&lt;operator&gt;.logicalShiftRight,next &gt;&gt; w)<SUB>48</SUB>>", "259": "<(IDENTIFIER,w,next &gt;&gt; w)<SUB>48</SUB>>", "261": "<(&lt;operator&gt;.assignment,int add = Integer.bitCount(next &amp; ((1 &lt;&lt; w) - 1)))<SUB>49</SUB>>", "263": "<(bitCount,Integer.bitCount(next &amp; ((1 &lt;&lt; w) - 1)))<SUB>49</SUB>>", "265": "<(&lt;operator&gt;.and,next &amp; ((1 &lt;&lt; w) - 1))<SUB>49</SUB>>", "267": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; w) - 1)<SUB>49</SUB>>", "269": "<(LITERAL,1,1 &lt;&lt; w)<SUB>49</SUB>>", "271": "<(LITERAL,1,(1 &lt;&lt; w) - 1)<SUB>49</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,dp[i + 1][nextn])<SUB>50</SUB>>", "275": "<(IDENTIFIER,dp,dp[i + 1][nextn] = Math.min(dp[i + 1][nextn], dp[i][j] + add))<SUB>50</SUB>>", "277": "<(IDENTIFIER,i,i + 1)<SUB>50</SUB>>", "279": "<(IDENTIFIER,nextn,dp[i + 1][nextn] = Math.min(dp[i + 1][nextn], dp[i][j] + add))<SUB>50</SUB>>", "281": "<(IDENTIFIER,Math,Math.min(dp[i + 1][nextn], dp[i][j] + add))<SUB>50</SUB>>", "283": "<(&lt;operator&gt;.indexAccess,dp[i + 1])<SUB>50</SUB>>", "285": "<(&lt;operator&gt;.addition,i + 1)<SUB>50</SUB>>", "287": "<(LITERAL,1,i + 1)<SUB>50</SUB>>", "289": "<(&lt;operator&gt;.addition,dp[i][j] + add)<SUB>50</SUB>>", "291": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>50</SUB>>", "293": "<(IDENTIFIER,i,dp[i][j] + add)<SUB>50</SUB>>", "295": "<(IDENTIFIER,add,dp[i][j] + add)<SUB>50</SUB>>", "297": "<(&lt;operator&gt;.assignment,int answer = MAX)<SUB>57</SUB>>", "299": "<(IDENTIFIER,MAX,int answer = MAX)<SUB>57</SUB>>", "301": "<(LOCAL,int j: int)<SUB>58</SUB>>", "303": "<(IDENTIFIER,j,int j = 0)<SUB>58</SUB>>", "305": "<(&lt;operator&gt;.lessThan,j &lt; 1 &lt;&lt; (w * 2))<SUB>58</SUB>>", "307": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (w * 2))<SUB>58</SUB>>", "309": "<(&lt;operator&gt;.multiplication,w * 2)<SUB>58</SUB>>", "311": "<(LITERAL,2,w * 2)<SUB>58</SUB>>", "313": "<(IDENTIFIER,j,j++)<SUB>58</SUB>>", "315": "<(&lt;operator&gt;.assignment,answer = Math.min(answer, dp[h][j] + Integer.bitCount(j)))<SUB>59</SUB>>", "317": "<(min,Math.min(answer, dp[h][j] + Integer.bitCount(j)))<SUB>59</SUB>>", "319": "<(IDENTIFIER,answer,Math.min(answer, dp[h][j] + Integer.bitCount(j)))<SUB>59</SUB>>", "321": "<(&lt;operator&gt;.indexAccess,dp[h][j])<SUB>59</SUB>>", "323": "<(IDENTIFIER,dp,dp[h][j] + Integer.bitCount(j))<SUB>59</SUB>>", "325": "<(IDENTIFIER,j,dp[h][j] + Integer.bitCount(j))<SUB>59</SUB>>", "327": "<(IDENTIFIER,Integer,Integer.bitCount(j))<SUB>59</SUB>>", "329": "<(println,println(h * w - answer))<SUB>61</SUB>>", "331": "<(IDENTIFIER,System,println(h * w - answer))<SUB>61</SUB>>", "333": "<(&lt;operator&gt;.subtraction,h * w - answer)<SUB>61</SUB>>", "335": "<(IDENTIFIER,h,h * w)<SUB>61</SUB>>", "337": "<(IDENTIFIER,answer,h * w - answer)<SUB>61</SUB>>", "339": "<(MODIFIER,STATIC)>"}}