{"edges": [["21", "23"], ["21", "149"], ["21", "150"], ["21", "151"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "54"], ["23", "59"], ["23", "98"], ["23", "99"], ["23", "103"], ["23", "117"], ["23", "118"], ["23", "121"], ["23", "142"], ["23", "147"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["59", "64"], ["59", "67"], ["59", "69"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "66"], ["67", "68"], ["69", "70"], ["69", "71"], ["69", "77"], ["69", "78"], ["69", "84"], ["69", "91"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "76"], ["74", "75"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "83"], ["81", "82"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "97"], ["92", "93"], ["92", "96"], ["93", "94"], ["93", "95"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["103", "106"], ["104", "105"], ["106", "107"], ["106", "108"], ["106", "112"], ["108", "109"], ["108", "110"], ["110", "111"], ["112", "113"], ["112", "114"], ["112", "115"], ["115", "116"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["134", "139"], ["134", "140"], ["134", "141"], ["136", "137"], ["136", "138"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["147", "148"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "51"], ["45", "56"], ["54", "61"], ["99", "104"], ["118", "123"], ["142", "147"], ["147", "151"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "45"], ["56", "54"], ["61", "64"], ["64", "74"], ["64", "101"], ["67", "64"], ["101", "99"], ["104", "110"], ["104", "118"], ["123", "126"], ["126", "136"], ["126", "144"], ["129", "126"], ["144", "142"], ["34", "32"], ["49", "47"], ["71", "81"], ["78", "86"], ["84", "93"], ["91", "67"], ["108", "115"], ["112", "104"], ["132", "129"], ["51", "49"], ["73", "71"], ["80", "78"], ["85", "84"], ["92", "91"], ["110", "108"], ["115", "112"], ["134", "132"], ["74", "73"], ["81", "80"], ["86", "85"], ["93", "92"], ["136", "134"], ["21", "26"], ["22", "151"], ["24", "151"], ["27", "151"], ["28", "151"], ["31", "151"], ["31", "151"], ["36", "151"], ["43", "151"], ["41", "151"], ["41", "151"], ["49", "151"], ["47", "151"], ["45", "151"], ["45", "151"], ["54", "151"], ["54", "151"], ["54", "151"], ["64", "151"], ["64", "151"], ["101", "151"], ["99", "151"], ["104", "151"], ["104", "151"], ["118", "151"], ["123", "151"], ["126", "151"], ["126", "151"], ["126", "151"], ["144", "151"], ["142", "151"], ["142", "151"], ["147", "151"], ["147", "151"], ["134", "151"], ["132", "151"], ["132", "151"], ["129", "151"], ["112", "151"], ["112", "151"], ["112", "151"], ["71", "151"], ["71", "151"], ["78", "151"], ["81", "151"], ["80", "151"], ["78", "151"], ["78", "151"], ["84", "151"], ["84", "151"], ["91", "151"], ["91", "151"], ["67", "151"], ["112", "151"], ["134", "151"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["47", "45"], ["47", "45"], ["56", "54"], ["101", "99"], ["21", "118"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "61"], ["21", "123"], ["31", "142"], ["21", "142"], ["144", "142"], ["144", "142"], ["142", "147"], ["21", "147"], ["27", "38"], ["21", "38"], ["38", "43"], ["21", "43"], ["21", "47"], ["36", "47"], ["49", "47"], ["49", "47"], ["47", "56"], ["21", "56"], ["61", "64"], ["67", "64"], ["21", "64"], ["41", "64"], ["64", "67"], ["21", "67"], ["73", "71"], ["73", "71"], ["80", "78"], ["80", "78"], ["21", "84"], ["21", "91"], ["45", "101"], ["21", "101"], ["99", "104"], ["110", "104"], ["21", "104"], ["110", "108"], ["123", "126"], ["129", "126"], ["21", "126"], ["56", "126"], ["134", "129"], ["21", "129"], ["134", "132"], ["134", "132"], ["134", "132"], ["134", "132"], ["118", "144"], ["132", "144"], ["21", "144"], ["21", "49"], ["36", "49"], ["21", "112"], ["108", "112"], ["115", "112"], ["118", "132"], ["21", "132"], ["36", "51"], ["21", "51"], ["74", "73"], ["21", "73"], ["81", "80"], ["21", "80"], ["104", "110"], ["21", "110"], ["21", "115"], ["21", "134"], ["136", "134"], ["136", "134"], ["43", "74"], ["81", "74"], ["21", "74"], ["74", "81"], ["21", "81"], ["21", "136"], ["126", "136"], ["64", "73"], ["64", "64"], ["64", "81"], ["64", "84"], ["64", "85"], ["64", "67"], ["64", "74"], ["64", "92"], ["64", "91"], ["64", "93"], ["64", "80"], ["64", "71"], ["64", "78"], ["64", "86"], ["104", "115"], ["104", "104"], ["104", "112"], ["104", "110"], ["104", "108"], ["126", "136"], ["126", "132"], ["126", "129"], ["126", "134"], ["126", "126"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner())<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(LOCAL,int n: int)<SUB>12</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>12</SUB>>", "39": "<(IDENTIFIER,in,nextInt())<SUB>12</SUB>>", "41": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>13</SUB>>", "43": "<(nextInt,nextInt())<SUB>13</SUB>>", "45": "<(&lt;operator&gt;.assignment,dp = new long[n][1 &lt;&lt; n + 1])<SUB>14</SUB>>", "47": "<(&lt;operator&gt;.alloc,new long[n][1 &lt;&lt; n + 1])>", "49": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n + 1)<SUB>14</SUB>>", "51": "<(&lt;operator&gt;.addition,n + 1)<SUB>14</SUB>>", "53": "<(LITERAL,1,n + 1)<SUB>14</SUB>>", "55": "<(IDENTIFIER,map,map = new boolean[n][n])<SUB>16</SUB>>", "57": "<(IDENTIFIER,n,new boolean[n][n])<SUB>16</SUB>>", "59": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>17</SUB>>", "61": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>17</SUB>>", "63": "<(LITERAL,0,int i = 0)<SUB>17</SUB>>", "65": "<(IDENTIFIER,i,i &lt; m)<SUB>17</SUB>>", "67": "<(&lt;operator&gt;.postIncrement,i++)<SUB>17</SUB>>", "69": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "71": "<(&lt;operator&gt;.assignment,int a = in.nextInt() - 1)<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.subtraction,in.nextInt() - 1)<SUB>18</SUB>>", "75": "<(IDENTIFIER,in,nextInt())<SUB>18</SUB>>", "77": "<(LOCAL,int b: int)<SUB>19</SUB>>", "79": "<(IDENTIFIER,b,int b = in.nextInt() - 1)<SUB>19</SUB>>", "81": "<(nextInt,nextInt())<SUB>19</SUB>>", "83": "<(LITERAL,1,in.nextInt() - 1)<SUB>19</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,map[a][b])<SUB>20</SUB>>", "87": "<(IDENTIFIER,map,map[a][b] = true)<SUB>20</SUB>>", "89": "<(IDENTIFIER,b,map[a][b] = true)<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.assignment,map[b][a] = true)<SUB>21</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,map[b])<SUB>21</SUB>>", "95": "<(IDENTIFIER,b,map[b][a] = true)<SUB>21</SUB>>", "97": "<(LITERAL,true,map[b][a] = true)<SUB>21</SUB>>", "99": "<(&lt;operator&gt;.assignment,)<SUB>24</SUB>>", "101": "<(iterator,&lt;empty&gt;)<SUB>24</SUB>>", "103": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>24</SUB>>", "105": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "107": "<(LOCAL,temp: long[])<SUB>24</SUB>>", "109": "<(IDENTIFIER,temp,&lt;empty&gt;)>", "111": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "113": "<(IDENTIFIER,Arrays,fill(temp, -1))<SUB>25</SUB>>", "115": "<(&lt;operator&gt;.minus,-1)<SUB>25</SUB>>", "117": "<(LOCAL,long result: long)<SUB>27</SUB>>", "119": "<(IDENTIFIER,result,long result = 0)<SUB>27</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>28</SUB>>", "123": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>28</SUB>>", "125": "<(LITERAL,0,int i = 0)<SUB>28</SUB>>", "127": "<(IDENTIFIER,i,i &lt; n)<SUB>28</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "133": "<(IDENTIFIER,result,result += cal((1 &lt;&lt; i), i, i, 1))<SUB>29</SUB>>", "135": "<(IDENTIFIER,this,cal((1 &lt;&lt; i), i, i, 1))<SUB>29</SUB>>", "137": "<(LITERAL,1,1 &lt;&lt; i)<SUB>29</SUB>>", "139": "<(IDENTIFIER,i,cal((1 &lt;&lt; i), i, i, 1))<SUB>29</SUB>>", "141": "<(LITERAL,1,cal((1 &lt;&lt; i), i, i, 1))<SUB>29</SUB>>", "143": "<(IDENTIFIER,out,println((result / 2)))<SUB>31</SUB>>", "145": "<(IDENTIFIER,result,result / 2)<SUB>31</SUB>>", "147": "<(close,close())<SUB>33</SUB>>", "149": "<(MODIFIER,PUBLIC)>", "151": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}