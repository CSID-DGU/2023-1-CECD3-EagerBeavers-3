{"edges": [["21", "22"], ["21", "23"], ["21", "200"], ["21", "201"], ["21", "202"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "38"], ["23", "39"], ["23", "45"], ["23", "46"], ["23", "50"], ["23", "51"], ["23", "57"], ["23", "77"], ["23", "78"], ["23", "81"], ["23", "6"], ["23", "116"], ["23", "119"], ["23", "121"], ["23", "122"], ["23", "128"], ["23", "195"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["43", "44"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "56"], ["54", "55"], ["57", "58"], ["57", "59"], ["57", "62"], ["57", "65"], ["57", "67"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["67", "68"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["81", "86"], ["81", "89"], ["81", "91"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["89", "90"], ["91", "92"], ["92", "93"], ["92", "94"], ["92", "99"], ["92", "102"], ["92", "104"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "113"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["116", "117"], ["116", "118"], ["119", "5"], ["119", "120"], ["122", "123"], ["122", "124"], ["124", "125"], ["124", "126"], ["126", "127"], ["128", "129"], ["128", "130"], ["128", "133"], ["128", "136"], ["128", "138"], ["130", "131"], ["130", "132"], ["133", "134"], ["133", "135"], ["136", "137"], ["138", "139"], ["138", "145"], ["138", "146"], ["138", "153"], ["138", "154"], ["138", "161"], ["138", "162"], ["138", "169"], ["138", "180"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "144"], ["142", "143"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "156"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["164", "168"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "176"], ["176", "177"], ["176", "178"], ["180", "181"], ["180", "186"], ["180", "190"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["186", "187"], ["187", "188"], ["187", "189"], ["190", "191"], ["191", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["24", "31"], ["27", "43"], ["39", "48"], ["46", "54"], ["51", "59"], ["78", "83"], ["116", "119"], ["119", "126"], ["122", "130"], ["195", "202"], ["26", "24"], ["41", "39"], ["48", "46"], ["53", "51"], ["59", "62"], ["62", "69"], ["62", "78"], ["65", "62"], ["83", "86"], ["86", "96"], ["86", "118"], ["89", "86"], ["118", "116"], ["124", "122"], ["130", "133"], ["133", "142"], ["133", "198"], ["136", "133"], ["196", "195"], ["29", "36"], ["32", "27"], ["43", "41"], ["54", "53"], ["68", "65"], ["126", "124"], ["139", "150"], ["146", "158"], ["154", "165"], ["162", "176"], ["169", "182"], ["198", "196"], ["31", "29"], ["34", "32"], ["69", "74"], ["72", "68"], ["94", "99"], ["99", "107"], ["99", "89"], ["102", "99"], ["141", "139"], ["148", "146"], ["156", "154"], ["164", "162"], ["171", "169"], ["181", "187"], ["181", "192"], ["36", "34"], ["74", "72"], ["96", "94"], ["142", "141"], ["150", "148"], ["158", "156"], ["165", "164"], ["173", "171"], ["182", "181"], ["187", "136"], ["106", "114"], ["106", "102"], ["174", "173"], ["192", "136"], ["107", "110"], ["110", "106"], ["114", "102"], ["176", "174"], ["21", "26"], ["22", "202"], ["24", "202"], ["29", "202"], ["32", "202"], ["32", "202"], ["32", "202"], ["27", "202"], ["39", "202"], ["46", "202"], ["46", "202"], ["46", "202"], ["51", "202"], ["51", "202"], ["51", "202"], ["78", "202"], ["78", "202"], ["86", "202"], ["86", "202"], ["116", "202"], ["119", "202"], ["124", "202"], ["126", "202"], ["124", "202"], ["122", "202"], ["122", "202"], ["130", "202"], ["133", "202"], ["133", "202"], ["133", "202"], ["195", "202"], ["195", "202"], ["195", "202"], ["139", "202"], ["142", "202"], ["141", "202"], ["139", "202"], ["139", "202"], ["148", "202"], ["146", "202"], ["146", "202"], ["156", "202"], ["156", "202"], ["154", "202"], ["154", "202"], ["165", "202"], ["165", "202"], ["164", "202"], ["162", "202"], ["162", "202"], ["174", "202"], ["174", "202"], ["173", "202"], ["171", "202"], ["169", "202"], ["169", "202"], ["182", "202"], ["181", "202"], ["181", "202"], ["192", "202"], ["187", "202"], ["136", "202"], ["94", "202"], ["94", "202"], ["99", "202"], ["99", "202"], ["89", "202"], ["106", "202"], ["106", "202"], ["106", "202"], ["114", "202"], ["114", "202"], ["102", "202"], ["68", "202"], ["72", "202"], ["68", "202"], ["68", "202"], ["65", "202"], ["21", "22"], ["21", "24"], ["41", "39"], ["41", "39"], ["48", "46"], ["53", "51"], ["53", "51"], ["21", "78"], ["21", "116"], ["124", "122"], ["124", "122"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["21", "59"], ["21", "83"], ["116", "119"], ["21", "119"], ["21", "130"], ["119", "195"], ["192", "195"], ["187", "195"], ["21", "195"], ["21", "29"], ["21", "37"], ["21", "41"], ["43", "41"], ["39", "48"], ["21", "48"], ["54", "53"], ["21", "53"], ["59", "62"], ["65", "62"], ["21", "62"], ["48", "62"], ["62", "65"], ["21", "65"], ["72", "68"], ["72", "68"], ["83", "86"], ["89", "86"], ["21", "86"], ["62", "86"], ["99", "86"], ["21", "89"], ["86", "89"], ["41", "124"], ["72", "124"], ["21", "124"], ["126", "124"], ["130", "133"], ["136", "133"], ["21", "133"], ["122", "133"], ["133", "136"], ["21", "136"], ["141", "139"], ["141", "139"], ["148", "146"], ["148", "146"], ["156", "154"], ["156", "154"], ["165", "162"], ["165", "162"], ["21", "162"], ["78", "169"], ["182", "169"], ["114", "169"], ["21", "169"], ["173", "169"], ["173", "169"], ["29", "32"], ["21", "32"], ["27", "43"], ["21", "43"], ["43", "54"], ["21", "54"], ["86", "94"], ["21", "94"], ["54", "126"], ["21", "126"], ["41", "72"], ["21", "72"], ["51", "72"], ["94", "99"], ["102", "99"], ["21", "99"], ["86", "99"], ["99", "102"], ["21", "102"], ["142", "141"], ["21", "141"], ["124", "148"], ["156", "148"], ["21", "148"], ["139", "148"], ["148", "156"], ["21", "156"], ["139", "156"], ["165", "164"], ["165", "164"], ["21", "164"], ["78", "171"], ["182", "171"], ["114", "171"], ["21", "171"], ["173", "171"], ["173", "171"], ["182", "181"], ["182", "181"], ["21", "181"], ["86", "96"], ["21", "96"], ["126", "142"], ["21", "142"], ["154", "165"], ["21", "165"], ["146", "165"], ["174", "173"], ["174", "173"], ["21", "173"], ["169", "182"], ["21", "182"], ["119", "187"], ["192", "187"], ["21", "187"], ["46", "106"], ["68", "106"], ["176", "174"], ["21", "174"], ["176", "174"], ["119", "192"], ["187", "192"], ["21", "192"], ["78", "114"], ["21", "114"], ["162", "176"], ["21", "176"], ["62", "68"], ["62", "72"], ["62", "69"], ["62", "74"], ["62", "65"], ["62", "62"], ["86", "94"], ["86", "96"], ["86", "89"], ["86", "99"], ["86", "86"], ["133", "141"], ["133", "136"], ["133", "154"], ["133", "146"], ["133", "169"], ["133", "142"], ["133", "150"], ["133", "162"], ["133", "176"], ["133", "181"], ["133", "148"], ["133", "173"], ["133", "165"], ["133", "174"], ["133", "182"], ["133", "164"], ["133", "139"], ["133", "156"], ["133", "158"], ["133", "133"], ["133", "171"], ["99", "107"], ["99", "99"], ["99", "102"], ["99", "106"], ["99", "110"], ["181", "192"], ["181", "187"], ["106", "114"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "35": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "39": "<(&lt;operator&gt;.assignment,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "41": "<(parseInt,parseInt(br.readLine()))<SUB>4</SUB>>", "43": "<(readLine,readLine())<SUB>4</SUB>>", "45": "<(LOCAL,int[] A: int[])<SUB>5</SUB>>", "47": "<(IDENTIFIER,A,int[] A = new int[n])<SUB>5</SUB>>", "49": "<(IDENTIFIER,n,new int[n])<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.assignment,String[] s = split(&quot; &quot;))<SUB>6</SUB>>", "53": "<(split,split(&quot; &quot;))<SUB>6</SUB>>", "55": "<(IDENTIFIER,br,readLine())<SUB>6</SUB>>", "57": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "61": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "63": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "65": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "67": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "69": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>8</SUB>>", "71": "<(IDENTIFIER,i,A[i] = Integer.parseInt(s[i]))<SUB>8</SUB>>", "73": "<(IDENTIFIER,Integer,Integer.parseInt(s[i]))<SUB>8</SUB>>", "75": "<(IDENTIFIER,s,Integer.parseInt(s[i]))<SUB>8</SUB>>", "77": "<(LOCAL,int inv: int)<SUB>23</SUB>>", "79": "<(IDENTIFIER,inv,int inv = 0)<SUB>23</SUB>>", "81": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>24</SUB>>", "83": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "85": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "87": "<(IDENTIFIER,i,i &lt; n)<SUB>24</SUB>>", "89": "<(&lt;operator&gt;.postIncrement,i++)<SUB>24</SUB>>", "91": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>24</SUB>>", "93": "<(LOCAL,int j: int)<SUB>25</SUB>>", "95": "<(IDENTIFIER,j,int j = i + 1)<SUB>25</SUB>>", "97": "<(IDENTIFIER,i,i + 1)<SUB>25</SUB>>", "99": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>25</SUB>>", "101": "<(IDENTIFIER,n,j &lt; n)<SUB>25</SUB>>", "103": "<(IDENTIFIER,j,j++)<SUB>25</SUB>>", "105": "<(CONTROL_STRUCTURE,if (A[i] &gt; A[j]),if (A[i] &gt; A[j]))<SUB>26</SUB>>", "107": "<(&lt;operator&gt;.indexAccess,A[i])<SUB>26</SUB>>", "109": "<(IDENTIFIER,i,A[i] &gt; A[j])<SUB>26</SUB>>", "111": "<(IDENTIFIER,A,A[i] &gt; A[j])<SUB>26</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "115": "<(IDENTIFIER,inv,inv++)<SUB>27</SUB>>", "116": "<(&lt;operator&gt;.assignment,StringBuilder sb = new StringBuilder(&quot;&quot;))<SUB>31</SUB>>", "118": "<(&lt;operator&gt;.alloc,new StringBuilder(&quot;&quot;))<SUB>31</SUB>>", "5": "<(IDENTIFIER,sb,new StringBuilder(&quot;&quot;))<SUB>31</SUB>>", "121": "<(LOCAL,int m: int)<SUB>32</SUB>>", "123": "<(IDENTIFIER,m,int m = parseInt(br.readLine()))<SUB>32</SUB>>", "125": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>32</SUB>>", "127": "<(IDENTIFIER,br,readLine())<SUB>32</SUB>>", "129": "<(LOCAL,int i: int)<SUB>33</SUB>>", "131": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "133": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>33</SUB>>", "135": "<(IDENTIFIER,m,i &lt; m)<SUB>33</SUB>>", "137": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "139": "<(&lt;operator&gt;.assignment,s = split(&quot; &quot;))<SUB>34</SUB>>", "141": "<(split,split(&quot; &quot;))<SUB>34</SUB>>", "143": "<(IDENTIFIER,br,readLine())<SUB>34</SUB>>", "145": "<(LOCAL,int li: int)<SUB>35</SUB>>", "147": "<(IDENTIFIER,li,int li = Integer.parseInt(s[0]))<SUB>35</SUB>>", "149": "<(IDENTIFIER,Integer,Integer.parseInt(s[0]))<SUB>35</SUB>>", "151": "<(IDENTIFIER,s,Integer.parseInt(s[0]))<SUB>35</SUB>>", "153": "<(LOCAL,int ri: int)<SUB>36</SUB>>", "155": "<(IDENTIFIER,ri,int ri = Integer.parseInt(s[1]))<SUB>36</SUB>>", "157": "<(IDENTIFIER,Integer,Integer.parseInt(s[1]))<SUB>36</SUB>>", "159": "<(IDENTIFIER,s,Integer.parseInt(s[1]))<SUB>36</SUB>>", "161": "<(LOCAL,int tot: int)<SUB>37</SUB>>", "163": "<(IDENTIFIER,tot,int tot = ri - li + 1)<SUB>37</SUB>>", "165": "<(&lt;operator&gt;.subtraction,ri - li)<SUB>37</SUB>>", "167": "<(IDENTIFIER,li,ri - li)<SUB>37</SUB>>", "169": "<(&lt;operator&gt;.assignment,inv = inv + tot * (tot - 1) / 2)<SUB>38</SUB>>", "171": "<(&lt;operator&gt;.addition,inv + tot * (tot - 1) / 2)<SUB>38</SUB>>", "173": "<(&lt;operator&gt;.division,tot * (tot - 1) / 2)<SUB>38</SUB>>", "175": "<(IDENTIFIER,tot,tot * (tot - 1))<SUB>38</SUB>>", "177": "<(IDENTIFIER,tot,tot - 1)<SUB>38</SUB>>", "179": "<(LITERAL,2,tot * (tot - 1) / 2)<SUB>38</SUB>>", "181": "<(&lt;operator&gt;.equals,inv % 2 == 0)<SUB>39</SUB>>", "183": "<(IDENTIFIER,inv,inv % 2)<SUB>39</SUB>>", "185": "<(LITERAL,0,inv % 2 == 0)<SUB>39</SUB>>", "187": "<(append,sb.append(&quot;even\\n&quot;))<SUB>40</SUB>>", "189": "<(LITERAL,&quot;even\\n&quot;,sb.append(&quot;even\\n&quot;))<SUB>40</SUB>>", "191": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "193": "<(IDENTIFIER,sb,sb.append(&quot;odd\\n&quot;))<SUB>43</SUB>>", "195": "<(print,System.out.print(sb))<SUB>46</SUB>>", "197": "<(IDENTIFIER,System,System.out.print(sb))<SUB>46</SUB>>", "199": "<(IDENTIFIER,sb,System.out.print(sb))<SUB>46</SUB>>", "201": "<(MODIFIER,STATIC)>"}}